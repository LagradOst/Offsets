// Created by BlueFire1337
// Updated 2021-12-23
// Generated 2022-01-23

namespace off {
	constexpr auto GNames = 0x5b53240;
	constexpr auto GObjects = 0x5b6ba08;
	constexpr auto GWorld = 0x5ca6630;
	constexpr auto DecryptionDword = 0x5a9aab0;
	constexpr auto DecryptionX = 0x5a9aa98;
	constexpr auto DecryptionXPlus10 = 0x5a9aaa8;
}

struct UUI_AdjustableHorizontalSeparator_C : UAdjustableSeparator {
	UNamedSlot* Content; // 0x280
};

struct USCUE4Settings : UObject {
	FString KeyGeneratorPath; // 0x28
};

struct UBoundsCopyComponent : UActorComponent {
	TSoftObjectPtr<AActor> BoundsSourceActor; // 0xb0
	bool bUseCollidingComponentsForSourceBounds; // 0xd8
	bool bKeepOwnBoundsScale; // 0xd9
	bool bUseCollidingComponentsForOwnBounds; // 0xda
	FTransform PostTransform; // 0xe0
	bool bCopyXBounds; // 0x110
	bool bCopyYBounds; // 0x111
	bool bCopyZBounds; // 0x112
};

struct UGameEngine : UEngine {
	float MaxDeltaTime; // 0xde0
	float ServerFlushLogInterval; // 0xde4
	UGameInstance* GameInstance; // 0xde8
};

struct USpacer : UWidget {
	FVector2D Size; // 0x108
};

struct UPaperTerrainComponent : UPrimitiveComponent {
	UPaperTerrainMaterial* TerrainMaterial; // 0x448
	bool bClosedSpline; // 0x450
	bool bFilledSpline; // 0x451
	UPaperTerrainSplineComponent* AssociatedSpline; // 0x458
	int32_t randomSeed; // 0x460
	float SegmentOverlapAmount; // 0x464
	FLinearColor TerrainColor; // 0x468
	int32_t ReparamStepsPerSegment; // 0x478
	ESpriteCollisionMode SpriteCollisionDomain; // 0x47c
	float CollisionThickness; // 0x480
	UBodySetup* CachedBodySetup; // 0x488
};

struct UMovieSceneEventRepeaterSection : UMovieSceneEventSectionBase {
	FMovieSceneEvent Event; // 0xf0
};

struct UPrisonerBodyEffect_ForeignSubstance : UPrisonerBodyEffect {
	float _substanceMaxAmount; // 0x40
	float _substanceDiscardRate; // 0x44
	float _substanceDiscardRateMultiplierPerOverflow; // 0x48
	float _substanceAmount; // 0x4c
};

struct UUI_DropdownMenuTextureSelectionWidget_C : UDropdownMenuSelectionWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	UUI_CustomBorder_C* SelectionBorder; // 0x2a0
	UImage* SelectionImage; // 0x2a8
	UTexture2D* Texture; // 0x2b0
};

struct UUI_ItemStatusWidget_C : UItemStatusWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x310
	UEditableTextBox* _titleText; // 0x318
	UImage* baseImage; // 0x320
	UImage* outlineImage; // 0x328
	UOverlay* TitleOverlay; // 0x330
};

struct UDialogButton : UUserWidget {
	bool PreviewSelectedState; // 0x2b8
	UButton* _button; // 0x2c0
	UTextBlock* _text; // 0x2c8
	USizeBox* _sizeBox; // 0x2d0
	FText _initialTitle; // 0x2d8
	FTabButtonStyle _selectedButtonStyle; // 0x2f0
	FTabButtonStyle _deselectedButtonStyle; // 0x578
	FTabTextStyle _selectedTextStyle; // 0x800
	FTabTextStyle _deselectedTextStyle; // 0x898
};

struct UMonoWaveTableSynthPreset : UObject {
	FString PresetName; // 0x28
	char bLockKeyframesToGridBool : 1; // 0x38
	int32_t LockKeyframesToGrid; // 0x3c
	int32_t WaveTableResolution; // 0x40
	TArray<FRuntimeFloatCurve> WaveTable; // 0x48
	char bNormalizeWaveTables : 1; // 0x58
};

struct UUI_JournalPanel_C : UJournalPanelWidget {
	UImage* _background; // 0x2f0
};

struct UAnimNotifyState_WeaponRevolverDrumRotationDirection : UAnimNotifyState {
	ERotationDirection RotationDirection; // 0x30
};

struct USynth2DSlider : UWidget {
	float ValueX; // 0x108
	float ValueY; // 0x10c
	FDelegate ValueXDelegate; // 0x110
	FDelegate ValueYDelegate; // 0x120
	FSynth2DSliderStyle WidgetStyle; // 0x130
	FLinearColor SliderHandleColor; // 0x3e8
	bool IndentHandle; // 0x3f8
	bool Locked; // 0x3f9
	float StepSize; // 0x3fc
	bool IsFocusable; // 0x400
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x408
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x418
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x428
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x438
	FMulticastInlineDelegate OnValueChangedX; // 0x448
	FMulticastInlineDelegate OnValueChangedY; // 0x458
};

struct UAirplaneDriverMountSlot : UAirplaneMountSlot {
	UBlendSpace* _forwardIdleAnimation; // 0x138
	UAnimSequenceBase* _forwardSteeringAnimation; // 0x140
	UAnimSequenceBase* _forwardSteeringAnimationFP; // 0x148
};

struct UInventoryItemWidget2Test : UUserWidget {
	UImage* _itemIcon; // 0x260
	UTextBlock* _itemCaption; // 0x268
};

struct UConvertToPolygonsToolProperties : UInteractiveToolPropertySet {
	EConvertToPolygonsMode ConversionMode; // 0x60
	float AngleTolerance; // 0x64
	bool bCalculateNormals; // 0x68
	bool bShowGroupColors; // 0x69
};

struct ADistantLevelManager : AActor {
	USceneComponent* _rootComponent; // 0x220
	float _minCameraLocationChangeToUpdateDistantLevels; // 0x228
	float _distantMeshPreloadDistance; // 0x22c
	int32_t _maxNumSimultaneouslyStreamedDistantMeshLODs; // 0x230
	float _distantCollisionMeshUnloadDistance; // 0x234
	int32_t _maxNumSimultaneouslyStreamedDistantCollisionMeshes; // 0x238
	TArray<FDistantLevelDescription> _distantLevelDescriptions; // 0x240
};

struct ULakeCollisionComponent : UPrimitiveComponent {
	UBodySetup* CachedBodySetup; // 0x448
	FVector BoxExtent; // 0x450
};

struct UUI_QuickAccessItemSwitcher3_C : UQuickAccessItemSwitcher3 {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e8
	UImage* Image_1; // 0x2f0
	UImage* Image_2; // 0x2f8
	UTextBlock* IndexText; // 0x300
};

struct UMeshSculptToolBase : UMeshSurfacePointTool {
	USculptBrushProperties* BrushProperties; // 0xc0
	UWorkPlaneProperties* GizmoProperties; // 0xc8
	TMap<int32_t, UMeshSculptBrushOpProps*> BrushOpPropSets; // 0x1b0
	TMap<int32_t, UMeshSculptBrushOpProps*> SecondaryBrushOpPropSets; // 0x250
	UMeshEditingViewProperties* ViewProperties; // 0x870
	UMaterialInstanceDynamic* ActiveOverrideMaterial; // 0x878
	UBrushStampIndicator* BrushIndicator; // 0x880
	UMaterialInstanceDynamic* BrushIndicatorMaterial; // 0x888
	UPreviewMesh* BrushIndicatorMesh; // 0x890
	UTransformGizmo* PlaneTransformGizmo; // 0x898
	UTransformProxy* PlaneTransformProxy; // 0x8a0
};

struct UEnvQueryGenerator_SimpleGrid : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue GridSize; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb8
	UEnvQueryContext* GenerateAround; // 0xf0
};

struct UVectorFieldStatic : UVectorField {
	int32_t SizeX; // 0x48
	int32_t SizeY; // 0x4c
	int32_t SizeZ; // 0x50
	bool bAllowCPUAccess; // 0x54
};

struct UMaterialExpressionTextureProperty : UMaterialExpression {
	FExpressionInput TextureObject; // 0x40
	EMaterialExposedTextureProperty Property; // 0x54
};

struct UUI_CraftingInfoInWorld_C : UCraftingInfoWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UImage* BackgroundImage; // 0x370
	UImage* CraftingTitle; // 0x378
	UTextBlock* DescriptionText; // 0x380
	UImage* Image_1; // 0x388
	UImage* Image_2; // 0x390
	UTextBlock* TitleText; // 0x398
};

struct UParticleModuleLocationPrimitiveSphere_Seeded : UParticleModuleLocationPrimitiveSphere {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xe0
};

struct USoundNodeDialoguePlayer : USoundNode {
	FDialogueWaveParameter DialogueWaveParameter; // 0x48
	char bLooping : 1; // 0x68
};

struct UMaterialFunction : UMaterialFunctionInterface {
	FString Description; // 0x40
	char bExposeToLibrary : 1; // 0x50
	char bPrefixParameterNames : 1; // 0x50
};

struct UVirtualTexture2D : UTexture2D {
	FVirtualTextureBuildSettings Settings; // 0x100
	bool bContinuousUpdate; // 0x10c
	bool bSinglePhysicalSpace; // 0x10d
};

struct UWidgetSwitcherSlot : UPanelSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UInterpTrackLinearColorProp : UInterpTrackLinearColorBase {
	FName PropertyName; // 0x90
};

struct UDoorUnlockItemComponent : UItemComponent {
	int64_t _expirationTimeSeconds; // 0xb8
	EDoorUnlockDataType _unlockDataType; // 0xc0
	UDoorUnlockData* _doorUnlockData; // 0xc8
	int64_t _itemCreatedTimestamp; // 0xd0
};

struct USelectionOverlayWidget : UUserWidget {
	UImage* _solidShown; // 0x278
	UImage* _gradientShown; // 0x280
	UImage* _solidSelected; // 0x288
	UImage* _gradientSelected; // 0x290
	FDataTableRowHandle _highlightColorRef; // 0x298
	float _solidWidth; // 0x2a8
};

struct UGeometryCollectionDebugDrawComponent : UActorComponent {
	AGeometryCollectionDebugDrawActor* GeometryCollectionDebugDrawActor; // 0xb0
	AGeometryCollectionRenderLevelSetActor* GeometryCollectionRenderLevelSetActor; // 0xb8
};

struct ABP_Survival_Tutorial_TakeKnifeInHands_C : AObtainItemObjective {
	USceneComponent* DefaultSceneRoot; // 0x378
};

struct AVDWindDirectionalSourceActor : AInfo {
	UVDWindDirectionalSourceComponent* Component; // 0x220
};

struct UUI_GameEventPanelWidget_C : UGameEventPanelWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UUI_ComboBoxWrapper_C* AllEventsComboBox; // 0x288
	UUI_ComboBoxWrapper_C* CurrentEventsComboBox; // 0x290
	UOverlay* EventArea; // 0x298
	UOverlay* LeaderboardSlot; // 0x2a0
	UUI_ComboBoxWrapper_C* NextEventsComboBox; // 0x2a8
	USizeBox* StatsPanel; // 0x2b0
	UVerticalBox* VerticalBox_5; // 0x2b8
	TArray<AGameEventBase*> CurrentEvents; // 0x2c0
	TArray<AGameEventBase*> NextEvents; // 0x2d0
	FString SelectedCurrent; // 0x2e0
	FString SelectedNext; // 0x2f0
	bool HighlightedCurrent; // 0x300
	TArray<AGameEventBase*> AllEvents; // 0x308
};

struct ATeamDeathmatchGameEvent : AGameEventBase {
	FTeamDeathmatchParameters _teamDeathmatchParameters; // 0x598
};

struct AWeaponAttachmentSight : AWeaponAttachment {
	FName ViewCenterSocketName; // 0x7e0
	FVector AimingDownTheSightsLocationOffset; // 0x7e8
};

struct UAnimNotify_MagazineUpdateAmmunitionMeshes : UAnimNotify {
	bool showReversed; // 0x38
	TArray<int32_t> ammoIndices; // 0x40
};

struct UWeaponScopeWidget : UDesignableUserWidget {
	UTexture2D* ReticleTexture; // 0x278
	UTextureRenderTarget2D* TextRenderTarget; // 0x280
	float FadeFactor; // 0x288
	float OnHideDelay; // 0x28c
};

struct UUI_WeaponOverviewTooltipPanelAbsolute_C : UItemTooltipPanel {
	UImage* Image_9; // 0x2c8
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_1; // 0x2d0
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_2; // 0x2d8
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_3; // 0x2e0
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_4; // 0x2e8
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_5; // 0x2f0
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_6; // 0x2f8
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_7; // 0x300
};

struct UMaterialExpressionSine : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UTextBlock : UTextLayoutWidget {
	FText Text; // 0x128
	FDelegate TextDelegate; // 0x140
	FSlateColor ColorAndOpacity; // 0x150
	FDelegate ColorAndOpacityDelegate; // 0x178
	FSlateFontInfo Font; // 0x188
	FSlateBrush StrikeBrush; // 0x1e0
	FVector2D ShadowOffset; // 0x268
	FLinearColor ShadowColorAndOpacity; // 0x270
	FDelegate ShadowColorAndOpacityDelegate; // 0x280
	float MinDesiredWidth; // 0x290
	bool bWrapWithInvalidationPanel; // 0x294
	bool bAutoWrapText; // 0x295
	ETextTransformPolicy TextTransformPolicy; // 0x296
	bool bSimpleTextMode; // 0x297
};

struct UVDMeshClothComponent : UBaseVDComponent {
	UStaticMesh* HullMesh; // 0x678
	float StretchStiffness; // 0x680
	float BendStiffness; // 0x684
	float Mass; // 0x688
	float DragCoefficient; // 0x68c
	bool PreserveVolume; // 0x690
	float CurrentVolume; // 0x694
	float OverrideRestVolume; // 0x698
	char UseVertexColorDataForSetup : 1; // 0x6a0
	float MaxBendConstraintDistance; // 0x6a4
	TArray<UVDParticleSpringConstraint*> StretchConstraints; // 0x6d0
	TArray<UVDParticleSpringConstraint*> BendConstraints; // 0x6e0
	UVDMeshVolumeConstraint* VolumeConstraint; // 0x6f0
};

struct UGizmoComponentWorldTransformSource : UGizmoBaseTransformSource {
	USceneComponent* Component; // 0x48
	bool bModifyComponentOnTransform; // 0x50
};

struct UPathFollowingComponent : UActorComponent {
	UNavMovementComponent* MovementComp; // 0xe8
	ANavigationData* MyNavData; // 0xf8
};

struct AGuardedZoneManager : AActor {
	UBillboardComponent* _sprite; // 0x220
	TArray<ASentrySpawner2*> _sentrySpawners; // 0x228
	TArray<FSentrySpawnerDescription> _sentrySpawnerDescriptions; // 0x238
};

struct UUI_TooltipOverviewTextElement_C : UItemTooltipPanelElement {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UExtendedRichTextBlock* ExtendedRichTextBlock_1; // 0x288
	FText TextFormat; // 0x290
	FTextBlockStyle TextStyle; // 0x2a8
	FSlateColor Color; // 0x518
	int32_t MinimumIntegralDigits; // 0x540
	int32_t MaximumIntegralDigits; // 0x544
	int32_t MinimumFractionalDigits; // 0x548
	int32_t MaximumFractionalDigits; // 0x54c
};

struct UMapBuildDataRegistry : UObject {
	ELightingBuildQuality LevelLightingQuality; // 0x28
};

struct USmoothHoleFillProperties : UInteractiveToolPropertySet {
	bool bConstrainToHoleInterior; // 0x60
	int32_t RemeshingExteriorRegionWidth; // 0x64
	int32_t SmoothingExteriorRegionWidth; // 0x68
	int32_t SmoothingInteriorRegionWidth; // 0x6c
	float InteriorSmoothness; // 0x70
	double FillDensityScalar; // 0x78
	bool bProjectDuringRemesh; // 0x80
};

struct UBTTask_PlayAnimation : UBTTaskNode {
	UAnimationAsset* AnimationToPlay; // 0x70
	char bLooping : 1; // 0x78
	char bNonBlocking : 1; // 0x78
	UBehaviorTreeComponent* MyOwnerComp; // 0x80
	USkeletalMeshComponent* CachedSkelMesh; // 0x88
};

struct UMeshBoundaryToolBase : USingleSelectionTool {
	UPolygonSelectionMechanic* SelectionMechanic; // 0x138
	USingleClickInputBehavior* LoopSelectClickBehavior; // 0x140
};

struct ADroneAIController : AAIController {
	float _followingDuration; // 0x328
	float _followingTargetSpeedThreshold; // 0x32c
	float _forcedSelfDestructTime; // 0x330
	float _followingHeight; // 0x334
	float _followingDistance; // 0x338
	float _resumeFollowingExtraDistance; // 0x33c
	float _resumeFollowingSeconds; // 0x340
	float _resumeFollowingExtendedSeconds; // 0x344
	float _followingCirclingMinTime; // 0x34c
	float _followingCirclingMaxTime; // 0x350
	float _followingCirclingNewDirectionMinTime; // 0x354
	float _followingCirclingNewDirectionMaxTime; // 0x358
	float _switchFollowingTargetsMaxDistance; // 0x35c
	float _flybyHorizontalDistanceFromTarget; // 0x390
	float _flybyVerticalDistanceFromTarget; // 0x394
	float _flybyPathLength; // 0x398
	float _minFlybyAngleDeg; // 0x39c
	float _maxFlybyAngleDeg; // 0x3a0
	float _crashingDistance; // 0x3b8
	float _leavingForwardDistance; // 0x3c0
	float _leavingVerticalDistance; // 0x3c4
	float _minimumNavigationProximityPerState[0x6]; // 0x3c8
	float _boundsInflation; // 0x3e0
	float _bypassAccelerationScale; // 0x3e4
	float _bypassTurningSpeed; // 0x3e8
	float _findPathBypassMultiplier; // 0x3ec
	float _maxTimePerDestinationMultiplier; // 0x3f0
	float _droneTurningSpeed; // 0x3f4
	float _maxPathSegment; // 0x3f8
	float _flyUpwardsDistance; // 0x3fc
	int32_t _maximumAttemptedHeightGains; // 0x400
	FVector _randomMovementExtent; // 0x408
	float _repeatChooseLocationTime; // 0x414
	float _highAccelerationScaleMultiplier; // 0x418
	float _distanceForHighAcceleration; // 0x41c
	float _brakingDecelerationFlyingMovementRestore; // 0x428
};

struct AOnlineBeaconClient : AOnlineBeacon {
	AOnlineBeaconHostObject* BeaconOwner; // 0x250
	UNetConnection* BeaconConnection; // 0x258
	EBeaconConnectionState ConnectionState; // 0x260
};

struct UUI_GameEventInfoWidget_C : UGameEventInfoWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UTextBlock* DescriptionText; // 0x280
	UTextBlock* MinPlayersText; // 0x288
	UTextBlock* NumTeamsText; // 0x290
	UTextBlock* PrerequisitesText; // 0x298
	UTextBlock* RespawnText; // 0x2a0
	UTextBlock* RewardsText; // 0x2a8
	UTextBlock* WeaponsText; // 0x2b0
};

struct UCameraShakeSourceComponent : USceneComponent {
	ECameraShakeAttenuation Attenuation; // 0x1f8
	float InnerAttenuationRadius; // 0x1fc
	float OuterAttenuationRadius; // 0x200
	UCameraShakeBase* CameraShake; // 0x208
	bool bAutoStart; // 0x210
};

struct UInventoryPanelWidget2Test : UInventoryContainerWidget2 {
	UScrollBox* _itemContainer; // 0x278
};

struct UUI_Metabolism_BodyStats_C : UMetabolismBodyStatsPanel {
	UUI_CollapsableContainer_C* UI_CollapsableContainer; // 0x2d8
};

struct UPlanePositionGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoVec2ParameterSource> ParameterSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bEnableSignedAxis; // 0x88
	bool bFlipX; // 0x89
	bool bFlipY; // 0x8a
	bool bInInteraction; // 0x8b
	FVector InteractionOrigin; // 0x8c
	FVector InteractionNormal; // 0x98
	FVector InteractionAxisX; // 0xa4
	FVector InteractionAxisY; // 0xb0
	FVector InteractionStartPoint; // 0xbc
	FVector InteractionCurPoint; // 0xc8
	FVector2D InteractionStartParameter; // 0xd4
	FVector2D InteractionCurParameter; // 0xdc
	FVector2D ParameterSigns; // 0xe4
};

struct UPhysicsInspectorTool : UMultiSelectionTool {
	UCollisionGeometryVisualizationProperties* VizSettings; // 0x90
	TArray<UPhysicsObjectToolPropertySet*> ObjectData; // 0x98
	UMaterialInterface* LineMaterial; // 0xa8
	TArray<UPreviewGeometry*> PreviewElements; // 0xb0
};

struct UMaterialExpressionSkyAtmosphereLightIlluminance : UMaterialExpression {
	int32_t LightIndex; // 0x40
	FExpressionInput WorldPosition; // 0x44
};

struct UAnimBP_ImprovisedRifle9mm_C : UWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x300
	FAnimNode_Root AnimGraphNode_Root; // 0x308
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x338
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x380
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x3c8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x410
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x458
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x508
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x530
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x558
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x580
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x6d8
};

struct UBP_SphereMotionTriggerComponent_C : USphereMotionTriggerComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0x540
};

struct UAITask_MoveTo : UAITask {
	FMulticastInlineDelegate OnRequestFailed; // 0x70
	FMulticastInlineDelegate OnMoveFinished; // 0x80
	FAIMoveRequest MoveRequest; // 0x90
};

struct UPrisonerSoundComponent : UCharacterSoundComponent {
	float MinBreathingRateToPostPeriodicInhaleExhaleAudioEvents; // 0xd8
	float MaxDistanceToListenerToPostPeriodicInhaleExhaleAudioEvents; // 0xdc
	UAkAudioEvent* PeriodicInhaleAudioEvent; // 0xe0
	UAkAudioEvent* PeriodicExhaleAudioEvent; // 0xe8
	UAkAudioEvent* HoldBreathInhaleAudioEvent; // 0xf0
	UAkAudioEvent* HoldBreathExhaleAudioEvent; // 0xf8
	UAkAudioEvent* HoldBreathBreathlessExhaleAudioEvent; // 0x100
	float MinHeartRateToPostHeartbeatAudioEvent; // 0x108
	UAkAudioEvent* HeartbeatAudioEvent; // 0x110
	UAkAudioEvent* FootstepsAudioEvent; // 0x118
	UAkAudioEvent* FootstepsEnhancerAudioEvent; // 0x120
	float MovingThroughFoliageGateDuration; // 0x128
	UAkAudioEvent* StartGenericMovingThroughFoliageAudioEvent; // 0x130
	UAkAudioEvent* StopGenericMovingThroughFoliageAudioEvent; // 0x138
	UAkAudioEvent* GenericOneShotMovingThroughFoliageAudioEvent; // 0x140
	UAkAudioEvent* GearNoiseAudioEvent; // 0x148
	UAkAudioEvent* GearNoiseAudioEventWhenInWater; // 0x150
	float ItemMotionNoiseTimeToLive; // 0x158
	UAkAudioEvent* StartGenericEatItemAudioEvent; // 0x160
	UAkAudioEvent* StopGenericEatItemAudioEvent; // 0x168
	UAkAudioEvent* StartGenericDrinkItemAudioEvent; // 0x170
	UAkAudioEvent* StopGenericDrinkItemAudioEvent; // 0x178
	UAkAudioEvent* StartGenericDrinkWaterAudioEvent; // 0x180
	UAkAudioEvent* StopGenericDrinkWaterAudioEvent; // 0x188
	UAkAudioEvent* StartGenericExamineObjectAudioEvent; // 0x190
	UAkAudioEvent* StopGenericExamineObjectAudioEvent; // 0x198
	UAkAudioEvent* StartGenericCraftAudioEvent; // 0x1a0
	UAkAudioEvent* StopGenericCraftAudioEvent; // 0x1a8
	UAkAudioEvent* StartGenericUncraftAudioEvent; // 0x1b0
	UAkAudioEvent* StopGenericUncraftAudioEvent; // 0x1b8
	UAkAudioEvent* StartGenericVehicleRepairAudioEvent; // 0x1c0
	UAkAudioEvent* StopGenericVehicleRepairAudioEvent; // 0x1c8
	UAkAudioEvent* StartWashClothAudioEvent; // 0x1d0
	UAkAudioEvent* StopWashClothAudioEvent; // 0x1d8
	UAkAudioEvent* StartInGameAudioEvent; // 0x1e0
	UAkAudioEvent* StopInGameAudioEvent; // 0x1e8
	UAkAudioEvent* CalmStateAudioEvent; // 0x1f0
	UAkAudioEvent* IntenseStateAudioEvent; // 0x1f8
	UAkAudioEvent* CombatStateAudioEvent; // 0x200
	USoundCue* OutOfBoundsSound; // 0x208
	UAkAudioEvent* ChipExplosionSound; // 0x210
	TArray<FActiveMovingThroughFoliageSounds> _activeMovingThroughFoliageSounds; // 0x260
	int32_t _maxNumberOfFootstepsToPlayFootstepEnhancerSound; // 0x28c
	int32_t _minNumberOfFootstepsToPlayFootstepEnhancerSound; // 0x290
};

struct UViewAlignedPlaneBrushOpProps : UBasePlaneBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct UParticleModuleVectorFieldLocal : UParticleModuleVectorFieldBase {
	UVectorField* VectorField; // 0x30
	FVector RelativeTranslation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale3D; // 0x50
	float Intensity; // 0x5c
	float Tightness; // 0x60
	char bIgnoreComponentTransform : 1; // 0x64
	char bTileX : 1; // 0x64
	char bTileY : 1; // 0x64
	char bTileZ : 1; // 0x64
	char bUseFixDT : 1; // 0x64
};

struct ULayer : UObject {
	FName LayerName; // 0x28
	char bIsVisible : 1; // 0x30
	TArray<FLayerActorStats> ActorStats; // 0x38
};

struct UMissionPrompt : UUserWidget {
	UTextBlock* _description; // 0x260
};

struct USkeletalMeshComponent : USkinnedMeshComponent {
	UObject* AnimBlueprintGeneratedClass; // 0x6a0
	UAnimInstance* AnimClass; // 0x6a8
	UAnimInstance* AnimScriptInstance; // 0x6b0
	UAnimInstance* PostProcessAnimInstance; // 0x6b8
	FSingleAnimationPlayData AnimationData; // 0x6c0
	FVector RootBoneTranslation; // 0x6e8
	FVector LineCheckBoundsScale; // 0x6f4
	TArray<UAnimInstance*> LinkedInstances; // 0x730
	TArray<FTransform> CachedBoneSpaceTransforms; // 0x740
	TArray<FTransform> CachedComponentSpaceTransforms; // 0x750
	float GlobalAnimRateScale; // 0x8b0
	EKinematicBonesUpdateToPhysics KinematicBonesUpdateType; // 0x8b4
	EPhysicsTransformUpdateMode PhysicsTransformUpdateMode; // 0x8b5
	EAnimationMode AnimationMode; // 0x8b7
	char bDisablePostProcessBlueprint : 1; // 0x8b9
	char bUpdateOverlapsOnAnimationFinalize : 1; // 0x8b9
	char bHasValidBodies : 1; // 0x8b9
	char bBlendPhysics : 1; // 0x8b9
	char bEnablePhysicsOnDedicatedServer : 1; // 0x8b9
	char bUpdateJointsFromAnimation : 1; // 0x8b9
	char bDisableClothSimulation : 1; // 0x8ba
	char bDisableRigidBodyAnimNode : 1; // 0x8c0
	char bAllowAnimCurveEvaluation : 1; // 0x8c0
	char bDisableAnimCurves : 1; // 0x8c0
	char bCollideWithEnvironment : 1; // 0x8c0
	char bCollideWithAttachedChildren : 1; // 0x8c1
	char bLocalSpaceSimulation : 1; // 0x8c1
	char bResetAfterTeleport : 1; // 0x8c1
	char bDeferKinematicBoneUpdate : 1; // 0x8c1
	char bNoSkeletonUpdate : 1; // 0x8c1
	char bPauseAnims : 1; // 0x8c1
	char bUseRefPoseOnInitAnim : 1; // 0x8c1
	char bEnablePerPolyCollision : 1; // 0x8c2
	char bForceRefpose : 1; // 0x8c2
	char bOnlyAllowAutonomousTickPose : 1; // 0x8c2
	char bIsAutonomousTickPose : 1; // 0x8c2
	char bOldForceRefPose : 1; // 0x8c2
	char bShowPrePhysBones : 1; // 0x8c2
	char bRequiredBonesUpToDate : 1; // 0x8c2
	char bAnimTreeInitialised : 1; // 0x8c2
	char bIncludeComponentLocationIntoBounds : 1; // 0x8c3
	char bEnableLineCheckWithBounds : 1; // 0x8c3
	char bUseBendingElements : 1; // 0x8c3
	char bUseTetrahedralConstraints : 1; // 0x8c3
	char bUseThinShellVolumeConstraints : 1; // 0x8c3
	char bUseSelfCollisions : 1; // 0x8c3
	char bUseContinuousCollisionDetection : 1; // 0x8c3
	char bPropagateCurvesToSlaves : 1; // 0x8c3
	char bSkipKinematicUpdateWhenInterpolating : 1; // 0x8c4
	char bSkipBoundsUpdateWhenInterpolating : 1; // 0x8c4
	char bNeedsQueuedAnimEventsDispatched : 1; // 0x8c4
	uint16_t CachedAnimCurveUidVersion; // 0x8c6
	EClothMassMode MassMode; // 0x8c8
	float UniformMass; // 0x8cc
	float TotalMass; // 0x8d0
	float Density; // 0x8d4
	float MinPerParticleMass; // 0x8d8
	float ClothBlendWeight; // 0x8dc
	float EdgeStiffness; // 0x8e0
	float BendingStiffness; // 0x8e4
	float AreaStiffness; // 0x8e8
	float VolumeStiffness; // 0x8ec
	float StrainLimitingStiffness; // 0x8f0
	float ShapeTargetStiffness; // 0x8f4
	bool bWaitForParallelClothTask; // 0x8f8
	TArray<FName> DisallowedAnimCurves; // 0x900
	UBodySetup* BodySetup; // 0x910
	FMulticastInlineDelegate OnConstraintBroken; // 0x920
	UClothingSimulationFactory* ClothingSimulationFactory; // 0x930
	float TeleportDistanceThreshold; // 0xa08
	float TeleportRotationThreshold; // 0xa0c
	uint32_t LastPoseTickFrame; // 0xa18
	UClothingSimulationInteractor* ClothingInteractor; // 0xa70
	FMulticastInlineDelegate OnAnimInitialized; // 0xb40
};

struct UInsertMagazineInsertCartridge : UWeaponActionReloadSequence {
	FName MontageEndSectionName; // 0x90
};

struct UARTexture : UTexture {
	EARTextureType TextureType; // 0xd8
	float Timestamp; // 0xdc
	FGuid ExternalTextureGuid; // 0xe0
	FVector2D Size; // 0xf0
};

struct URendererOverrideSettings : UDeveloperSettings {
	char bSupportAllShaderPermutations : 1; // 0x38
	char bForceRecomputeTangents : 1; // 0x38
};

struct AConZWaterSplineRiver : AConZWaterSpline {
	UStaticMesh* SplineMesh; // 0x2b8
	UMaterialInterface* SplineMeshMaterialOverride; // 0x2c0
	float SplineMeshCullingDistance; // 0x2c8
	bool ClearRoll; // 0x2cc
	bool AutoCalculateMeshCount; // 0x2cd
	int32_t SplineMeshCount; // 0x2d0
	bool RefreshMesh; // 0x2d4
	bool ArmBatchEditWidth; // 0x2d5
	float BatchEditWidth; // 0x2d8
	bool ArmBatchEditMaxDepth; // 0x2dc
	float BatchEditMaxDepth; // 0x2e0
	bool ArmBatchEditSpeed; // 0x2e4
	float BatchEditSpeed; // 0x2e8
	bool ArmBatchEditOpacity; // 0x2ec
	float BatchEditOpacity; // 0x2f0
	bool ArmBatchEdit; // 0x2f4
	bool BatchEditReplace; // 0x2f5
	bool BatchEditAdd; // 0x2f6
	bool BatchEditMultiply; // 0x2f7
	bool BatchEditFlattenZ; // 0x2f8
	TArray<USplineMeshComponent*> _splineMeshComponents; // 0x300
};

struct USignificanceManager : UObject {
	FSoftClassPath SignificanceManagerClassName; // 0x108
};

struct ARadioStation : AActor {
	FName _stationName; // 0x250
	TArray<FRadioProgramData> _programsData; // 0x258
	int32_t _maxTracksToQueue; // 0x268
	int32_t _currentIndex; // 0x26c
	TArray<URadioTrack*> _playlist; // 0x270
	float _elapsedTime; // 0x280
};

struct UDistributionVectorConstantCurve : UDistributionVector {
	FInterpCurveVector ConstantCurve; // 0x38
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
};

struct AControlPointMeshActor : AActor {
	UControlPointMeshComponent* ControlPointMeshComponent; // 0x220
};

struct UControlPointMeshComponent : UStaticMeshComponent {
	float VirtualTextureMainPassMaxDrawDistance; // 0x4d8
};

struct ABP_WeaponBullet_cal22_C : AProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
};

struct UUI_CriminalRecordText_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UBorder* MainBorder; // 0x280
	UTextBlock* TitleText; // 0x288
	UTextBlock* ValueText; // 0x290
	bool HasLeftBorder; // 0x298
	FText Title; // 0x2a0
	FText Value; // 0x2b8
	int32_t TitleFontSize; // 0x2d0
	int32_t ValueFontSize; // 0x2d4
	FMargin TitlePadding; // 0x2d8
	FMargin ValuePadding; // 0x2e8
	EHorizontalAlignment ValueAlignment; // 0x2f8
};

struct AChristmasGhost : AActor {
	TArray<TSoftClassPtr<UObject>> _possibleGifts; // 0x220
	TSoftObjectPtr<UParticleSystem> _giftSpawnParticles; // 0x230
	TSoftObjectPtr<UAkAudioEvent> _giftSpawnAudioEvent; // 0x258
	FTransform _giftSpawnParticlesRelativeTransform; // 0x280
};

struct UInterpTrackInstFloatAnimBPParam : UInterpTrackInst {
	UAnimInstance* AnimScriptInstance; // 0x28
	float ResetFloat; // 0x30
};

struct UAdminCommand_SpawnReflectionSphere : UAdminCommand {
	UObject* _actorClass; // 0x80
};

struct UPrisonerBodySymptom_BlurredVision : UPrisonerBodySymptom_PeriodicAffect {
	FRuntimeFloatCurve _intensityVsElapsedTimeRatio; // 0xe8
};

struct UGizmoComponentHitTarget : UObject {
	UPrimitiveComponent* Component; // 0x30
};

struct ULuminRuntimeSettings : UObject {
	FString PackageName; // 0x28
	FString ApplicationDisplayName; // 0x38
	ELuminFrameTimingHint FrameTimingHint; // 0x48
	bool bProtectedContent; // 0x49
	bool bManualCallToAppReady; // 0x4a
	bool bUseMobileRendering; // 0x4b
	bool bUseVulkan; // 0x4c
	FFilePath Certificate; // 0x50
	FDirectoryPath IconModelPath; // 0x60
	FDirectoryPath IconPortalPath; // 0x70
	FLocalizedIconInfos LocalizedIconInfos; // 0x80
	int32_t VersionCode; // 0x90
	int32_t MinimumAPILevel; // 0x94
	TArray<ELuminPrivilege> AppPrivileges; // 0x98
	TArray<FLuminComponentSubElement> ExtraComponentSubElements; // 0xa8
	TArray<FLuminComponentElement> ExtraComponentElements; // 0xb8
	FString SpatializationPlugin; // 0xc8
	FString ReverbPlugin; // 0xd8
	FString OcclusionPlugin; // 0xe8
	int32_t SoundCueCookQualityIndex; // 0xf8
	bool bRemoveDebugInfo; // 0xfc
	FDirectoryPath VulkanValidationLayerLibs; // 0x100
	bool bFrameVignette; // 0x110
	TArray<FLocalizedAppName> LocalizedAppNames; // 0x118
};

struct UDistributionFloat : UDistribution {
	char bCanBeBaked : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct ULuminARCandidateImage : UARCandidateImage {
	bool bUseUnreliablePose; // 0x58
	bool bImageIsStationary; // 0x59
	EMagicLeapImageTargetOrientation AxisOrientation; // 0x5a
};

struct UCustomZoneSettingsApplyNotification : UUserWidget {
	UTextBlock* _text; // 0x260
};

struct UPrisonerBodySymptom_FeelingCold : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8
	float _temperatureDeltaAtMaxSeverity; // 0xbc
};

struct UEdgeLoopInsertionProperties : UInteractiveToolPropertySet {
	EEdgeLoopPositioningMode PositionMode; // 0x60
	EEdgeLoopInsertionMode InsertionMode; // 0x64
	int32_t NumLoops; // 0x68
	double ProportionOffset; // 0x70
	double DistanceOffset; // 0x78
	bool bInteractive; // 0x80
	bool bFlipOffsetDirection; // 0x81
	bool bWireframe; // 0x82
	double VertexTolerance; // 0x88
};

struct ADummyPawn_C : APawn {
	USceneComponent* DefaultSceneRoot; // 0x280
};

struct UBehaviorTreeManager : UObject {
	int32_t MaxDebuggerSteps; // 0x28
	TArray<FBehaviorTreeTemplateInfo> LoadedTemplates; // 0x30
	TArray<UBehaviorTreeComponent*> ActiveComponents; // 0x40
};

struct UUI_Lockpicking_C : ULockpickingWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b8
	UImage* Image_1; // 0x2c0
	UImage* Image_2; // 0x2c8
	UImage* Image_3; // 0x2d0
	UImage* Image_11; // 0x2d8
	UImage* Image_21; // 0x2e0
	UTextBlock* LockpicksCountText; // 0x2e8
	UImage* progress; // 0x2f0
	UTextBlock* RemainingTimeText; // 0x2f8
	UTextBlock* TensionToolCountText; // 0x300
};

struct UVectorField : UObject {
	FBox Bounds; // 0x28
	float Intensity; // 0x44
};

struct UARObjectComponent : UARComponent {
	FARObjectUpdatePayload ReplicatedPayload; // 0x280
};

struct UProceduralBoxToolProperties : UProceduralRectangleToolProperties {
	float Height; // 0x80
	int32_t HeightSubdivisions; // 0x84
};

struct UMovieScene3DConstraintSection : UMovieSceneSection {
	FGuid ConstraintId; // 0xe8
	FMovieSceneObjectBindingID ConstraintBindingID; // 0xf8
};

struct UMovieSceneWidgetMaterialTrack : UMovieSceneMaterialTrack {
	TArray<FName> BrushPropertyNamePath; // 0x90
	FName TrackName; // 0xa0
};

struct UBTDecorator_CompareBBEntries : UBTDecorator {
	EBlackBoardEntryComparison Operator; // 0x68
	FBlackboardKeySelector BlackboardKeyA; // 0x70
	FBlackboardKeySelector BlackboardKeyB; // 0x98
};

struct ULiveLinkComponent : UActorComponent {
	FMulticastInlineDelegate OnLiveLinkUpdated; // 0xb0
};

struct UUI_PlaceableElement_C : UPlaceableElementWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x288
	UButton* Button_1; // 0x290
	UImage* Image_106; // 0x298
	UImage* Image_bg_black; // 0x2a0
	URetainerBox* RetainerBox_1; // 0x2a8
};

struct UContainerDisplay : UUserWidget {
	UImage* _containerImage; // 0x2c8
	UImage* _containerImage2; // 0x2d0
	USizeBox* _sizeBox; // 0x2d8
	UTextBlock* _name; // 0x2e0
	UTextBlock* _name2; // 0x2e8
	UTextBlock* _durability; // 0x2f0
	UTextBlock* _durability2; // 0x2f8
	UProgressBar* _durabilityProgressBar; // 0x300
	UProgressBar* _durabilityProgressBar2; // 0x308
	UWidgetSwitcher* _selectionSwitcher; // 0x310
	float _width; // 0x318
	float _height; // 0x31c
};

struct UPrisonerViewComponent : UActorComponent {
	float DefaultSubviewBlendDuration; // 0xb0
};

struct USoundNodeBranch : USoundNode {
	FName BoolParameterName; // 0x48
};

struct USourceEffectWaveShaperPreset : USoundEffectSourcePreset {
	FSourceEffectWaveShaperSettings Settings; // 0x98
};

struct UMalfunctionsContainerWidget : UDesignableUserWidget {
	FSlateColor HotkeyTextColorUnhovered; // 0x278
	FSlateColor HotkeyTextColorHovered; // 0x2a0
	UCircularMenuWidget* _malfunctionsCircularMenu; // 0x2c8
	UWidgetSwitcher* _hotkeyDisplaySwitcher; // 0x2d0
	UTextBlock* _twoOp_2; // 0x2d8
	UTextBlock* _twoOp_3; // 0x2e0
	UTextBlock* _threeOp_2; // 0x2e8
	UTextBlock* _threeOp_3; // 0x2f0
	UTextBlock* _threeOp_4; // 0x2f8
	UTextBlock* _fourOp_2; // 0x300
	UTextBlock* _fourOp_3; // 0x308
	UTextBlock* _fourOp_4; // 0x310
	UTextBlock* _fourOp_5; // 0x318
};

struct USearchItemDataAsset : UDataAsset {
	FText Caption; // 0x30
	float Duration; // 0x48
	TArray<FSearchPerItemData> SearchData; // 0x50
	UAkAudioEvent* StartSearchAudioEvent; // 0x60
	UAkAudioEvent* StopSearchAudioEvent; // 0x68
	ENoiseLevel noiseLevel; // 0x70
};

struct UClientSettingsUIController : UObject {
	UInputWidget* InputWidget; // 0x70
};

struct UUVLayoutPreviewProperties : UInteractiveToolPropertySet {
	bool bVisible; // 0x60
	float ScaleFactor; // 0x64
	EUVLayoutPreviewSide WhichSide; // 0x68
	bool bShowWireframe; // 0x6c
	FVector2D Shift; // 0x70
};

struct UTrapData : UDataAsset {
	USphereMotionTriggerComponent* SphereMotionTriggerComponentClass; // 0x30
	UBoxMotionTriggerComponent* BoxMotionTriggerComponentClass; // 0x38
	ULaserTriggerComponent* LaserTriggerComponentClass; // 0x40
	UTimedTriggerComponent* TimedTriggerComponentClass; // 0x48
};

struct AWeaponBow : AWeapon {
	FBodyWeaponAnimation InsertArrowAnimations; // 0x2dd0
	FBodyWeaponAnimation RemoveArrowAnimations; // 0x2de0
	FBodyWeaponAnimation UnableToDrawAnimations; // 0x2df0
	FBodyWeaponAnimation DrawAnimations2[0x3]; // 0x2e00
	FBodyWeaponAnimation DrawWhileAnticipatingDrawAnimations2[0x3]; // 0x2e30
	FBodyWeaponAnimation CancelDrawAnimations2[0x3]; // 0x2e60
	FBodyWeaponAnimation LooseAnimations2[0x3]; // 0x2e90
	FBodyWeaponAnimation LooseLastShotAnimations2[0x3]; // 0x2ec0
	FWeaponBowAimOffsets AimOffsets[0x7]; // 0x2ef0
	FWeaponBowArmsShake ArmsShakeAnimamtion[0x4]; // 0x2f98
	FBodyWeaponAnimation DrawAnimations; // 0x3058
	FBodyWeaponAnimation DrawWhileAnticipatingDrawAnimations; // 0x3068
	FBodyWeaponAnimation CancelDrawAnimations; // 0x3078
	FBodyWeaponAnimation LooseAnimations; // 0x3088
	FBodyWeaponAnimation LooseLastShotAnimations; // 0x3098
	UAnimSequenceBase* WeaponAimingDownTheSightsAnimationPose; // 0x30a8
	UAnimSequenceBase* WeaponAimingDownTheSightsStillAnimationPose; // 0x30b0
	UWeaponState* AnticipateDrawState2; // 0x30b8
	UWeaponState* DrawState3; // 0x30c0
	UWeaponState* CancelFiringState; // 0x30c8
	UWeaponState* AnticipateFiringState; // 0x30d0
	UWeaponState* FireState; // 0x30d8
	UWeaponState* FireAndInsertArrowState; // 0x30e0
	UAkAudioEvent* _fireNoArrowAudioEvent; // 0x30e8
	FName _arrowSocketName; // 0x30f0
	float _muzzleVelocity; // 0x30f8
	float _drawWeight; // 0x30fc
	float _compoundBowFullDrawHoldTime; // 0x3100
	float _armShakeTimerDecreaseRate; // 0x3104
	float _damageOnUsage; // 0x3108
	UWeaponState* _bowActiveState2; // 0x3110
	UWeaponState* _bowInsertArrowState; // 0x3118
	UWeaponState* _bowRemoveArrowState; // 0x3120
	UWeaponStateFiring* _bowFiringState2; // 0x3128
	EWeaponBowState _bowState; // 0x3160
	FWeaponBowStateDataReplicated _weaponBowStateDataReplicated; // 0x3164
	UStaticMeshComponent* _arrowMeshComponent; // 0x3170
	FProjectileArrowData _projectileArrowData; // 0x3178
	bool _isCompound; // 0x31e8
	UStaticMeshComponent* _handTriggerMeshComponent; // 0x31f0
	bool _ignoreArrowStiffness; // 0x31f8
	float _letOff; // 0x31fc
	FName _handTriggerBoneName; // 0x3200
};

struct UUI_CharacterSelection_C : UCharacterSelectionWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UUI_TrashMenuButton_C* BackButton; // 0x268
	UOverlay* CharacterSlotsOverlay; // 0x270
	UVerticalBox* CharacterSlotsVerticalBox; // 0x278
	UUI_TrashMenuButton_C* CreateButton; // 0x280
	UUI_CriminalRecord_C* CriminalRecord; // 0x288
	UOverlay* CriminalRecordOverlay; // 0x290
	UUI_YesNoMenuConfirmation_C* DeleteCharacterConfirmation; // 0x298
	UImage* Image_1; // 0x2a0
	UImage* Image_5; // 0x2a8
	UImage* Image_351; // 0x2b0
	UCanvasPanel* MainCanvasPanel; // 0x2b8
	UScrollBox* MainScrollBox; // 0x2c0
	UUI_TrashMenuButton_C* SelectButton; // 0x2c8
	UUI_CharacterSlot_C* _deletingCharSlot; // 0x2d0
	UUserProfile* _selectedUserProfile; // 0x2d8
};

struct UUI_CC_SkillSlider_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UTextBlock* T_SkillName; // 0x280
	UUI_CC_NonSelectableText_C* UI_CC_NonSelectableText; // 0x288
	UUI_Trash_Slider_Widget_C* UI_Trash_Slider_Widget; // 0x290
	bool EnabledState; // 0x298
	FSkillTemplate SkillTemplate; // 0x2a0
	FMulticastInlineDelegate SliderChanged; // 0x2d8
	FMulticastInlineDelegate SliderSelected; // 0x2e8
	FMulticastInlineDelegate SliderDeselected; // 0x2f8
};

struct UTrashNamedCarouselWidget : UUserWidget {
	FMulticastInlineDelegate ValueChangedTemp_DONOTUSE; // 0x290
	USizeBox* _nameBox; // 0x2a0
	UTextBlock* _name; // 0x2a8
	UTrashCarouselWidget* _carousel; // 0x2b0
	USelectionOverlayWidget* _focusBackground; // 0x2b8
	FString _label; // 0x2c0
	FText _mainLabel; // 0x2d0
	FSlateFontInfo _defaultFont; // 0x2e8
	TArray<FString> _possibleValues; // 0x398
	TArray<FText> _carouselValues; // 0x3a8
};

struct UCapsuleComponent : UShapeComponent {
	float CapsuleHalfHeight; // 0x460
	float CapsuleRadius; // 0x464
};

struct UTireConfig : UDataAsset {
	float FrictionScale; // 0x30
	TArray<FTireConfigMaterialFriction> TireFrictionScales; // 0x38
};

struct UComboBox : UWidget {
	TArray<UObject*> Items; // 0x108
	FDelegate OnGenerateWidgetEvent; // 0x118
	bool bIsFocusable; // 0x128
};

struct UFishingContainerWidget : UUserWidget {
	UFishingBarWidget* _castingBarWidget; // 0x260
	UFishingBarWidget* _fishingBarWidget; // 0x268
	float _tensionBarInterpSpeed; // 0x270
};

struct USharpPullKelvinletBrushOpProps : UBaseKelvinletBrushOpProps {
	float Falloff; // 0x70
	float Depth; // 0x74
};

struct ULevelSequencePlayer : UMovieSceneSequencePlayer {
	FMulticastInlineDelegate OnCameraCut; // 0x680
};

struct UCircularProgressBarSprites_C : UBaseProgressBar_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e8
	UWidgetAnimation* OuterCircleAlarmAnimation; // 0x2f0
	UImage* BackgroundGradient; // 0x2f8
	UImage* CentralBackgroundDark; // 0x300
	UImage* Fill_Value_BCG; // 0x308
	UImage* Icon; // 0x310
	UImage* Image_219; // 0x318
	UImage* ImageSpentFiller; // 0x320
	UImage* IndicatorOutlinesWhite; // 0x328
	UImage* OuternWarningIndicator; // 0x330
	UHorizontalBox* ProgressTextBox; // 0x338
	UTextBlock* TPercentage; // 0x340
	UTextBlock* TPercentSign; // 0x348
	UTextBlock* TTitle; // 0x350
	UMaterialInstanceDynamic* CircularMaterial; // 0x358
	FLinearColor AlarmColor; // 0x360
	FLinearColor NormalColor; // 0x370
	FLinearColor outerCircleColor; // 0x380
	FLinearColor circularBarColor; // 0x390
	float _currentPercentageToShow; // 0x3a0
	UTexture2D* Image; // 0x3a8
	bool ShouldProgressTextBeVisible; // 0x3b0
	FLinearColor TextColor; // 0x3b4
	float _speedChange; // 0x3c4
};

struct UMaterialExpressionShaderStageSwitch : UMaterialExpression {
	FExpressionInput PixelShader; // 0x40
	FExpressionInput VertexShader; // 0x54
};

struct UMagicLeapARPinSaveGame : USaveGame {
	FGuid PinnedID; // 0x28
	FTransform ComponentWorldTransform; // 0x40
	FTransform PinTransform; // 0x70
	bool bShouldPinActor; // 0xa0
};

struct UNavigationSystemV1 : UNavigationSystemBase {
	ANavigationData* MainNavData; // 0x28
	ANavigationData* AbstractNavData; // 0x30
	FName DefaultAgentName; // 0x38
	TSoftClassPtr<UObject> CrowdManagerClass; // 0x40
	char bAutoCreateNavigationData : 1; // 0x68
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x68
	char bAllowClientSideNavigation : 1; // 0x68
	char bShouldDiscardSubLevelNavData : 1; // 0x68
	char bTickWhilePaused : 1; // 0x68
	char bSupportRebuilding : 1; // 0x68
	char bInitialBuildingLocked : 1; // 0x68
	char bSkipAgentHeightCheckWhenPickingNavData : 1; // 0x69
	char bGenerateNavigationOnlyAroundNavigationInvokers : 1; // 0x69
	float ActiveTilesUpdateInterval; // 0x6c
	ENavDataGatheringModeConfig DataGatheringMode; // 0x70
	float DirtyAreaWarningSizeThreshold; // 0x74
	TArray<FNavDataConfig> SupportedAgents; // 0x78
	FNavAgentSelector SupportedAgentsMask; // 0x88
	TArray<ANavigationData*> NavDataSet; // 0x90
	TArray<ANavigationData*> NavDataRegistrationQueue; // 0xa0
	FMulticastInlineDelegate OnNavDataRegisteredEvent; // 0xc0
	FMulticastInlineDelegate OnNavigationGenerationFinishedDelegate; // 0xd0
	FNavigationSystemRunMode OperationMode; // 0x1fc
	float DirtyAreasUpdateFreq; // 0x15fc
};

struct UNiagaraDataInterfaceAudioSpectrum : UNiagaraDataInterfaceAudioSubmix {
	int32_t Resolution; // 0x40
	float MinimumFrequency; // 0x44
	float MaximumFrequency; // 0x48
	float NoiseFloorDb; // 0x4c
};

struct UABP_ImprovisedFishingReel_C : UFishingReelAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x2f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x458
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x4a0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x540
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x698
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x6c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x818
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x840
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator; // 0x868
};

struct UPrisonerActionTuneBow : UPrisonerAction {
	UAkAudioEvent* _tuneBowAudioEvent; // 0x108
};

struct UParticleEmitter : UObject {
	FName EmitterName; // 0x28
	int32_t SubUVDataOffset; // 0x30
	EEmitterRenderMode EmitterRenderMode; // 0x34
	EParticleSignificanceLevel SignificanceLevel; // 0x35
	char bUseLegacySpawningBehavior : 1; // 0x37
	char ConvertedModules : 1; // 0x37
	char bIsSoloing : 1; // 0x37
	char bCookedOut : 1; // 0x37
	char bDisabledLODsKeepEmitterAlive : 1; // 0x37
	char bDisableWhenInsignficant : 1; // 0x38
	TArray<UParticleLODLevel*> LODLevels; // 0x40
	int32_t PeakActiveParticles; // 0x50
	int32_t InitialAllocationCount; // 0x54
	float QualityLevelSpawnRateScale; // 0x58
	uint32_t DetailModeBitmask; // 0x5c
};

struct UMeleeDetectHitCollisionCapsule : UCapsuleComponent {
	EDetectHitCollisionType DetectHitCollisionType; // 0x468
};

struct UInputTouchDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputTouchDelegateBinding> InputTouchDelegateBindings; // 0x28
};

struct UParticleModuleLocationEmitter : UParticleModuleLocationBase {
	FName EmitterName; // 0x30
	ELocationEmitterSelectionMethod SelectionMethod; // 0x38
	char InheritSourceVelocity : 1; // 0x3c
	float InheritSourceVelocityScale; // 0x40
	char bInheritSourceRotation : 1; // 0x44
	float InheritSourceRotationScale; // 0x48
};

struct UPlanarReflectionComponent : USceneCaptureComponent {
	UBoxComponent* PreviewBox; // 0x2b0
	float NormalDistortionStrength; // 0x2b8
	float PrefilterRoughness; // 0x2bc
	float PrefilterRoughnessDistance; // 0x2c0
	int32_t ScreenPercentage; // 0x2c4
	float ExtraFOV; // 0x2c8
	float DistanceFromPlaneFadeStart; // 0x2cc
	float DistanceFromPlaneFadeEnd; // 0x2d0
	float DistanceFromPlaneFadeoutStart; // 0x2d4
	float DistanceFromPlaneFadeoutEnd; // 0x2d8
	float AngleFromPlaneFadeStart; // 0x2dc
	float AngleFromPlaneFadeEnd; // 0x2e0
	bool bShowPreviewPlane; // 0x2e4
	bool bRenderSceneTwoSided; // 0x2e5
};

struct USeamSculptToolProperties : UInteractiveToolPropertySet {
	bool bShowWireframe; // 0x60
	bool bHitBackFaces; // 0x61
};

struct UAISenseConfig_Sight : UAISenseConfig {
	UAISense_Sight* Implementation; // 0x48
	float SightRadius; // 0x50
	float LoseSightRadius; // 0x54
	float PeripheralVisionAngleDegrees; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
	float AutoSuccessRangeFromLastSeenLocation; // 0x60
	float PointOfViewBackwardOffset; // 0x64
	float NearClippingRadius; // 0x68
};

struct UVehicleHitZoneManager : UMeshHitZones {
	FName _vehicleHitMeshName; // 0xd0
	TArray<UMaterialInterface*> _engineBlock; // 0xd8
	TArray<FVehicleHitZoneData> _doors; // 0xe8
	TArray<FVehicleHitZoneData> _doorWindows; // 0xf8
	TArray<FVehicleHitZoneData> _wheelTires; // 0x108
};

struct UWeaponBowAnimInstance : UWeaponAnimInstance {
	float _armsShakeValue; // 0x300
	bool _useArrowLookAt; // 0x304
	UAnimSequenceBase* _aimingDownTheSightsAnimation; // 0x308
	UAnimSequenceBase* _aimingDownTheSightsStillAnimation; // 0x310
};

struct UMaterialFunctionInterface : UObject {
	FGuid StateId; // 0x28
	EMaterialFunctionUsage MaterialFunctionUsage; // 0x38
};

struct UABP_Prisoner_Fishing_C : UPrisonerAnimInstance_Fishing {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_4; // 0x318
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose; // 0x4a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x5c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x660
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x6e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x780
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x800
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x880
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_3; // 0x920
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_2; // 0xab0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace; // 0xc40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xdd0
};

struct UItemSpawnerComponent : USceneComponent {
	int32_t ItemSpawnLimit; // 0x1f8
	TArray<FItemSpawnerMarker> SpawnerMarkers; // 0x200
	FString SpawnerGroupName; // 0x210
};

struct UStatisticsListRow : UUserWidget {
	UTextBlock* _statNameTextBox; // 0x260
	UTextBlock* _statValueTextBox; // 0x268
	UTextBlock* _statUnitTextBox; // 0x270
};

struct UMovieSceneLiveLinkSection : UMovieSceneSection {
	FLiveLinkSubjectPreset SubjectPreset; // 0xe8
	TArray<bool> ChannelMask; // 0x120
	TArray<UMovieSceneLiveLinkSubSection*> SubSections; // 0x130
	FName SubjectName; // 0x150
	FLiveLinkFrameData TemplateToPush; // 0x158
	FLiveLinkRefSkeleton RefSkeleton; // 0x1e8
	TArray<FName> CurveNames; // 0x208
	TArray<FMovieSceneFloatChannel> PropertyFloatChannels; // 0x218
};

struct UPointLightComponent : ULocalLightComponent {
	char bUseInverseSquaredFalloff : 1; // 0x340
	float LightFalloffExponent; // 0x344
	float SourceRadius; // 0x348
	float SoftSourceRadius; // 0x34c
	float SourceLength; // 0x350
};

struct UInterpTrackInstFloatMaterialParam : UInterpTrackInst {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<float> ResetFloats; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackFloatMaterialParam* InstancedTrack; // 0x58
};

struct UAkItemBoolProperties : UWidget {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnPropertyDragged; // 0x118
};

struct UUI_DropdownMenuColorSelectionWidget_C : UDropdownMenuSelectionWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	UUI_CustomBorder_C* SelectionBorder; // 0x2a0
	UImage* SelectionImage; // 0x2a8
	FLinearColor Color; // 0x2b0
};

struct UMaterialExpressionStaticSwitch : UMaterialExpression {
	char DefaultValue : 1; // 0x40
	FExpressionInput A; // 0x44
	FExpressionInput B; // 0x58
	FExpressionInput Value; // 0x6c
};

struct UFontFace : UObject {
	FString SourceFilename; // 0x30
	EFontHinting Hinting; // 0x40
	EFontLoadingPolicy LoadingPolicy; // 0x41
	EFontLayoutMethod LayoutMethod; // 0x42
};

struct ABP_WeaponBullet_50BMG_Crafted_C : AProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
};

struct UAudioAnalyzerNRT : UAudioAnalyzerAsset {
	USoundWave* Sound; // 0x28
	float DurationInSeconds; // 0x30
};

struct UParticleModuleTrailSource : UParticleModuleTrailBase {
	ETrail2SourceMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	FRawDistributionFloat SourceStrength; // 0x40
	char bLockSourceStength : 1; // 0x70
	int32_t SourceOffsetCount; // 0x74
	TArray<FVector> SourceOffsetDefaults; // 0x78
	EParticleSourceSelectionMethod SelectionMethod; // 0x88
	char bInheritRotation : 1; // 0x8c
};

struct UAnimNotifyState_PhysicalAnimation : UAnimNotifyState {
	bool GotoRagdollOnEnd; // 0x30
	FName BodyProfileName; // 0x34
	FName ConstraintProfileName; // 0x3c
	FName BoneName; // 0x44
	FName StrengthBlendCurveName; // 0x4c
	FName PhysicsBlendCurveName; // 0x54
};

struct UCharacterSpawnerPreset : UObject {
	FCharacterSpawnerData SpawnerData; // 0x28
};

struct UCTFParticipantStats : UGameEventParticipantStats {
	int32_t Pickups; // 0x48
	int32_t Captures; // 0x4c
	int32_t Returns; // 0x50
};

struct AFishingAttachment : AItem {
	UStaticMesh* _staticMeshWhenAttached; // 0x7c0
};

struct UParticleModuleVectorFieldRotationRate : UParticleModuleVectorFieldBase {
	FVector RotationRate; // 0x30
};

struct UVariant : UObject {
	TArray<FVariantDependency> Dependencies; // 0x28
	FText DisplayText; // 0x38
	TArray<UVariantObjectBinding*> ObjectBindings; // 0x68
	UTexture2D* Thumbnail; // 0x78
};

struct AProjectileArrow : AProjectile {
	USceneComponent* _tempSceneComponent; // 0x418
	USceneComponent* _relativeRotationSceneComponent; // 0x420
	FProjectileArrowData _projectileArrowData; // 0x428
};

struct UUI_Metabolism_BodyEffect_ProgressBar_C : UMetabolismBodyEffectProgressBar {
	UImage* PaddedBackground; // 0x308
};

struct UPrisonerBodyConditionOrSymptomUIData : UPrisonerBodyEffectUIData {
	bool _isVisibleByDefault; // 0x38
	FText _name; // 0x40
	FText _description; // 0x58
	TArray<UPrisonerBodyConditionOrSymptomSideEffectUIData*> _sideEffectsUIData; // 0x80
};

struct AWaterBody : AActor {
	UPhysicalMaterial* PhysicalMaterial; // 0x230
	float TargetWaveMaskDepth; // 0x238
	float MaxWaveHeightOffset; // 0x23c
	int32_t WaterBodyIndex; // 0x240
	bool bFillCollisionUnderWaterBodiesForNavmesh; // 0x244
	FUnderwaterPostProcessSettings UnderwaterPostProcessSettings; // 0x250
	EWaterBodyType WaterBodyType; // 0x7c0
	FWaterCurveSettings CurveSettings; // 0x7c8
	UMaterialInterface* WaterMaterial; // 0x7e8
	UMaterialInterface* UnderwaterPostProcessMaterial; // 0x7f0
	bool bAffectsLandscape; // 0x7f8
	bool bGenerateCollisions; // 0x7f9
	bool bOverrideWaterMesh; // 0x7fa
	UStaticMesh* WaterMeshOverride; // 0x800
	int32_t OverlapMaterialPriority; // 0x808
	FName CollisionProfileName; // 0x80c
	UWaterSplineComponent* SplineComp; // 0x818
	UWaterSplineMetadata* WaterSplineMetadata; // 0x820
	UMaterialInstanceDynamic* WaterMID; // 0x828
	UMaterialInstanceDynamic* UnderwaterPostProcessMID; // 0x830
	TArray<LazyObjectProperty> Islands; // 0x838
	TArray<LazyObjectProperty> ExclusionVolumes; // 0x848
	TWeakObjectPtr<ALandscapeProxy> Landscape; // 0x858
	FPostProcessSettings CurrentPostProcessSettings; // 0x860
	bool bCanAffectNavigation; // 0xdb0
	UNavAreaBase* WaterNavAreaClass; // 0xdb8
	UWaterWavesBase* WaterWaves; // 0xdc0
	bool bHasWaveSpectrumSettings; // 0xdc8
	bool bHasTerrainCarvingSettingsSettings; // 0xdc9
};

struct UNewMeshMaterialProperties : UInteractiveToolPropertySet {
	TWeakObjectPtr<UMaterialInterface> Material; // 0x60
	float UVScale; // 0x68
	bool bWorldSpaceUVScale; // 0x6c
	bool bWireframe; // 0x6d
	bool bShowExtendedOptions; // 0x6e
};

struct UConsole : UObject {
	ULocalPlayer* ConsoleTargetPlayer; // 0x38
	UTexture2D* DefaultTexture_Black; // 0x40
	UTexture2D* DefaultTexture_White; // 0x48
	TArray<FString> HistoryBuffer; // 0x68
};

struct ABP_Survival_Blueprints_CompleteShelter_Objective_C : ABlueprintableItemObjective {
	USceneComponent* DefaultSceneRoot; // 0x368
};

struct UGerstnerWaterWaveGeneratorSpectrum : UGerstnerWaterWaveGeneratorBase {
	EWaveSpectrumType SpectrumType; // 0x28
	TArray<FGerstnerWaveOctave> Octaves; // 0x30
};

struct UInterpTrackInstColorProp : UInterpTrackInstProperty {
	FColor ResetColor; // 0x58
};

struct AOnlineBeacon : AActor {
	float BeaconConnectionInitialTimeout; // 0x228
	float BeaconConnectionTimeout; // 0x22c
	UNetDriver* NetDriver; // 0x230
};

struct UMovieSceneMaterialTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct USourceEffectDynamicsProcessorPreset : USoundEffectSourcePreset {
	FSourceEffectDynamicsProcessorSettings Settings; // 0xb8
};

struct UTextureLightProfile : UTexture2D {
	float Brightness; // 0x100
	float TextureMultiplier; // 0x104
};

struct UMaterialExpressionLogarithm2 : UMaterialExpression {
	FExpressionInput X; // 0x40
};

struct UDualArcedProgressBar : UUserWidget {
	UImage* _frontFillImage; // 0x260
	UImage* _backFillImage; // 0x268
	UMaterialInstanceConstant* _frontFillMaterial; // 0x270
	UMaterialInstanceConstant* _backFillMaterial; // 0x278
	FLinearColor _frontFillColor; // 0x280
	FLinearColor _backFillColor; // 0x290
};

struct USourceEffectMidSideSpreaderPreset : USoundEffectSourcePreset {
	FSourceEffectMidSideSpreaderSettings Settings; // 0x98
};

struct UInventoryItemComponent : UItemComponent {
	int32_t _sizeX; // 0xc0
	int32_t _sizeY; // 0xc4
	int32_t _maxRowsPerPage; // 0xc8
	TArray<UInventoryItemComponentReplicatedPage*> _replicatedPages; // 0xe0
};

struct UEnvQueryTest_Project : UEnvQueryTest {
	FEnvTraceData ProjectionData; // 0x1f8
};

struct UWidgetComponent : UMeshComponent {
	EWidgetSpace Space; // 0x470
	EWidgetTimingPolicy TimingPolicy; // 0x471
	UUserWidget* WidgetClass; // 0x478
	FIntPoint DrawSize; // 0x480
	bool bManuallyRedraw; // 0x488
	bool bRedrawRequested; // 0x489
	float RedrawTime; // 0x48c
	FIntPoint CurrentDrawSize; // 0x498
	bool bDrawAtDesiredSize; // 0x4a0
	FVector2D Pivot; // 0x4a4
	bool bReceiveHardwareInput; // 0x4ac
	bool bWindowFocusable; // 0x4ad
	EWindowVisibility WindowVisibility; // 0x4ae
	bool bApplyGammaCorrection; // 0x4af
	ULocalPlayer* OwnerPlayer; // 0x4b0
	FLinearColor BackgroundColor; // 0x4b8
	FLinearColor TintColorAndOpacity; // 0x4c8
	float OpacityFromTexture; // 0x4d8
	EWidgetBlendMode BlendMode; // 0x4dc
	bool bIsTwoSided; // 0x4dd
	bool TickWhenOffscreen; // 0x4de
	UBodySetup* BodySetup; // 0x4e0
	UMaterialInterface* TranslucentMaterial; // 0x4e8
	UMaterialInterface* TranslucentMaterial_OneSided; // 0x4f0
	UMaterialInterface* OpaqueMaterial; // 0x4f8
	UMaterialInterface* OpaqueMaterial_OneSided; // 0x500
	UMaterialInterface* MaskedMaterial; // 0x508
	UMaterialInterface* MaskedMaterial_OneSided; // 0x510
	UTextureRenderTarget2D* RenderTarget; // 0x518
	UMaterialInstanceDynamic* MaterialInstance; // 0x520
	bool bAddedToScreen; // 0x528
	bool bEditTimeUsable; // 0x529
	FName SharedLayerName; // 0x52c
	int32_t LayerZOrder; // 0x534
	EWidgetGeometryMode GeometryMode; // 0x538
	float CylinderArcAngle; // 0x53c
	ETickMode TickMode; // 0x540
	UUserWidget* Widget; // 0x568
};

struct ACableActor : AActor {
	UCableComponent* CableComponent; // 0x220
};

struct UChoppingRecipeDataAsset : UDataAsset {
	FChoppingRecipe ChoppingRecipe; // 0x30
};

struct UPreviousNextSwitchWidget : UDesignableUserWidget {
	FMulticastInlineDelegate IndexChanged; // 0x278
	UButton* PreviousButton; // 0x288
	UButton* NextButton; // 0x290
	int32_t _index; // 0x2a0
};

struct UVisualOverlayItemTag : UBaseItemTag {
	UMaterialInterface* OverlayMaterial; // 0x30
	int32_t Priority; // 0x38
	bool ShouldBeVisibleInFirstPersonView; // 0x3c
	bool ShouldBeVisibleInThirdPersonView; // 0x3d
};

struct ULiveLinkVirtualSubjectSourceSettings : ULiveLinkSourceSettings {
	FName SourceName; // 0xa0
};

struct ALandscapeProxy : AActor {
	ULandscapeSplinesComponent* SplineComponent; // 0x220
	FGuid LandscapeGuid; // 0x228
	FIntPoint LandscapeSectionOffset; // 0x238
	int32_t MaxLODLevel; // 0x240
	float LODDistanceFactor; // 0x244
	ELandscapeLODFalloff LODFalloff; // 0x248
	float ComponentScreenSizeToUseSubSections; // 0x24c
	float LOD0ScreenSize; // 0x250
	float LOD0DistributionSetting; // 0x254
	float LODDistributionSetting; // 0x258
	float TessellationComponentScreenSize; // 0x25c
	bool UseTessellationComponentScreenSizeFalloff; // 0x260
	float TessellationComponentScreenSizeFalloff; // 0x264
	int32_t OccluderGeometryLOD; // 0x268
	int32_t StaticLightingLOD; // 0x26c
	UPhysicalMaterial* DefaultPhysMaterial; // 0x270
	float StreamingDistanceMultiplier; // 0x278
	UMaterialInterface* LandscapeMaterial; // 0x280
	UMaterialInterface* LandscapeHoleMaterial; // 0x2a8
	TArray<FLandscapeProxyMaterialOverride> LandscapeMaterialsOverride; // 0x2b0
	bool bMeshHoles; // 0x2c0
	char MeshHolesMaxLod; // 0x2c1
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x2c8
	int32_t VirtualTextureNumLods; // 0x2d8
	int32_t VirtualTextureLodBias; // 0x2dc
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x2e0
	float NegativeZBoundsExtension; // 0x2e4
	float PositiveZBoundsExtension; // 0x2e8
	TArray<ULandscapeComponent*> LandscapeComponents; // 0x2f0
	TArray<ULandscapeHeightfieldCollisionComponent*> CollisionComponents; // 0x300
	TArray<UHierarchicalInstancedStaticMeshComponent*> FoliageComponents; // 0x310
	bool bHasLandscapeGrass; // 0x384
	float StaticLightingResolution; // 0x388
	char CastShadow : 1; // 0x38c
	char bCastDynamicShadow : 1; // 0x38c
	char bCastStaticShadow : 1; // 0x38c
	char bCastFarShadow : 1; // 0x390
	char bCastHiddenShadow : 1; // 0x394
	char bCastShadowAsTwoSided : 1; // 0x398
	char bAffectDistanceFieldLighting : 1; // 0x39c
	FLightingChannels LightingChannels; // 0x39d
	char bUseMaterialPositionOffsetInStaticLighting : 1; // 0x3a0
	char bRenderCustomDepth : 1; // 0x3a0
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x3a4
	int32_t CustomDepthStencilValue; // 0x3a8
	float LDMaxDrawDistance; // 0x3ac
	FLightmassPrimitiveSettings LightmassSettings; // 0x3b0
	int32_t CollisionMipLevel; // 0x3c8
	int32_t SimpleCollisionMipLevel; // 0x3cc
	float CollisionThickness; // 0x3d0
	FBodyInstance BodyInstance; // 0x3d8
	char bGenerateOverlapEvents : 1; // 0x530
	char bBakeMaterialPositionOffsetIntoCollision : 1; // 0x530
	int32_t ComponentSizeQuads; // 0x534
	int32_t SubsectionSizeQuads; // 0x538
	int32_t NumSubsections; // 0x53c
	char bUsedForNavigation : 1; // 0x540
	char bFillCollisionUnderLandscapeForNavmesh : 1; // 0x540
	bool bUseDynamicMaterialInstance; // 0x544
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x545
	bool bUseLandscapeForCullingInvisibleHLODVertices; // 0x546
	bool bHasLayersContent; // 0x547
	TMap<UTexture2D*, ULandscapeWeightmapUsage*> WeightmapUsageMap; // 0x548
};

struct UMaterialExpressionArctangent2 : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct AGlobalAnimalSpawner : AActor {
	TMap<AAnimal2*, FGlobalAnimalSpawnInfo> SpawnInfo; // 0x220
	float SpawnAnythingChance; // 0x270
	TArray<EPhysicalSurface> AllowedSurfaces; // 0x278
	int32_t MaxCarcassesAllowed; // 0x288
	TArray<AAnimalSpawner2*> AnimalSpawners; // 0x290
	UBillboardComponent* Sprite; // 0x2a0
};

struct UPrisonerBodyEffect_Limping : UPrisonerBodyEffect {
	float _duration; // 0x40
	float _elapsedTime; // 0x44
};

struct UPendingNetGame : UObject {
	UNetDriver* NetDriver; // 0x30
	UDemoNetDriver* DemoNetDriver; // 0x38
};

struct UPositionPlaneGizmo : UInteractiveGizmo {
	UPreviewMesh* CenterBallShape; // 0x88
	UMaterialInstance* CenterBallMaterial; // 0x90
};

struct USpawnScreen : UDesignableUserWidget {
	UOverlay* Screen; // 0x278
	UButton* _mainMenuButton; // 0x280
	UVerticalBox* _messageBoxPanel; // 0x288
};

struct UMaterialExpressionComponentMask : UMaterialExpression {
	FExpressionInput Input; // 0x40
	char R : 1; // 0x54
	char G : 1; // 0x54
	char B : 1; // 0x54
	char A : 1; // 0x54
};

struct UUI_DoorUpgradeSlot_C : UUpgradeSlotWidget {
	UImage* _backgroundImage_2; // 0x2f8
};

struct UUI_StatisticsDetailsWidget_C : UStatisticsDetailsWidget {
	UImage* _verticalLine; // 0x390
};

struct AWater_Bucket_C : AItem {
	UBasicGameResourceContainerComponent* WaterBucketGameResourceContainer; // 0x7c0
};

struct UParticleModuleVelocity : UParticleModuleVelocityBase {
	FRawDistributionVector StartVelocity; // 0x38
	FRawDistributionFloat StartVelocityRadial; // 0x80
};

struct USoundNodeModulatorContinuous : USoundNode {
	FModulatorContinuousParams PitchModulationParams; // 0x48
	FModulatorContinuousParams VolumeModulationParams; // 0x68
};

struct UMaterialExpressionComment : UMaterialExpression {
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FString Text; // 0x48
	FLinearColor CommentColor; // 0x58
	int32_t FontSize; // 0x68
};

struct UInventorySlotUserWidget : UDesignableUserWidget {
	bool HasItem; // 0x278
	UImage* ImageWidget; // 0x280
	USizeBox* SizeBoxWrapper; // 0x288
	UBaseItemContainerWidget* ParentContainerWidget; // 0x290
};

struct UFishingRodAnimInstance : UAnimInstance {
	bool IsInMinigame; // 0x2b8
	FVector RodTipLocation; // 0x2bc
	FVector BentRodTipLocation; // 0x2c8
	FVector BendDirection; // 0x2d4
	float BendAmount; // 0x2e0
};

struct ABP_Survival_Tutorial_CraftStoneKnifeObjective_C : ACraftingObjective {
	FPointerToUberGraphFrame UberGraphFrame; // 0x348
	USceneComponent* DefaultSceneRoot; // 0x350
	AMissionDialogueManager* DialogueManager; // 0x358
	bool _firstTimeOpened; // 0x360
	UCraftableItem* CraftableItem; // 0x368
	UDialogueData* DialogueData; // 0x370
};

struct APlayerState : AInfo {
	float Score; // 0x220
	int32_t PlayerId; // 0x224
	char ping; // 0x228
	char bShouldUpdateReplicatedPing : 1; // 0x22a
	char bIsSpectator : 1; // 0x22a
	char bOnlySpectator : 1; // 0x22a
	char bIsABot : 1; // 0x22a
	char bIsInactive : 1; // 0x22a
	char bFromPreviousLevel : 1; // 0x22a
	int32_t StartTime; // 0x22c
	ULocalMessage* EngineMessageClass; // 0x230
	FString SavedNetworkAddress; // 0x240
	FUniqueNetIdRepl UniqueId; // 0x250
	APawn* PawnPrivate; // 0x280
	FString PlayerNamePrivate; // 0x300
};

struct UTriggerItemTag : UBaseItemTag {
	ETrapTriggerType TriggerType; // 0x30
};

struct UBaseCreateFromSelectedTool : UMultiSelectionTool {
	UTransformInputsToolProperties* TransformProperties; // 0x98
	UBaseCreateFromSelectedHandleSourceProperties* HandleSourcesProperties; // 0xa0
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xa8
	TArray<UTransformProxy*> TransformProxies; // 0xb0
	TArray<UTransformGizmo*> TransformGizmos; // 0xc0
	TArray<FVector> TransformInitialScales; // 0xd0
};

struct UFont : UObject {
	EFontCacheType FontCacheType; // 0x30
	TArray<FFontCharacter> Characters; // 0x38
	TArray<UTexture2D*> Textures; // 0x48
	int32_t IsRemapped; // 0x58
	float EmScale; // 0x5c
	float Ascent; // 0x60
	float Descent; // 0x64
	float Leading; // 0x68
	int32_t Kerning; // 0x6c
	FFontImportOptionsData ImportOptions; // 0x70
	int32_t NumCharacters; // 0x120
	TArray<int32_t> MaxCharHeight; // 0x128
	float ScalingFactor; // 0x138
	int32_t LegacyFontSize; // 0x13c
	FName LegacyFontName; // 0x140
	FCompositeFont CompositeFont; // 0x148
};

struct UCurveLinearColorAtlas : UTexture2D {
	uint32_t TextureSize; // 0x100
	TArray<UCurveLinearColor*> GradientCurves; // 0x108
};

struct UMovieSceneNiagaraTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UParticleModuleCollision : UParticleModuleCollisionBase {
	FRawDistributionVector DampingFactor; // 0x30
	FRawDistributionVector DampingFactorRotation; // 0x78
	FRawDistributionFloat MaxCollisions; // 0xc0
	EParticleCollisionComplete CollisionCompletionOption; // 0xf0
	TArray<EObjectTypeQuery> CollisionTypes; // 0xf8
	char bApplyPhysics : 1; // 0x110
	char bIgnoreTriggerVolumes : 1; // 0x110
	FRawDistributionFloat ParticleMass; // 0x118
	float DirScalar; // 0x148
	char bPawnsDoNotDecrementCount : 1; // 0x14c
	char bOnlyVerticalNormalsDecrementCount : 1; // 0x14c
	float VerticalFudgeFactor; // 0x150
	FRawDistributionFloat DelayAmount; // 0x158
	char bDropDetail : 1; // 0x188
	char bCollideOnlyIfVisible : 1; // 0x188
	char bIgnoreSourceActor : 1; // 0x188
	float MaxCollisionDistance; // 0x18c
};

struct AAIController : AController {
	char bStartAILogicOnPossess : 1; // 0x2d0
	char bStopAILogicOnUnposses : 1; // 0x2d0
	char bLOSflag : 1; // 0x2d0
	char bSkipExtraLOSChecks : 1; // 0x2d0
	char bAllowStrafe : 1; // 0x2d0
	char bWantsPlayerState : 1; // 0x2d0
	char bSetControlRotationFromPawnOrientation : 1; // 0x2d0
	UPathFollowingComponent* PathFollowingComponent; // 0x2d8
	UBrainComponent* BrainComponent; // 0x2e0
	UAIPerceptionComponent* PerceptionComponent; // 0x2e8
	UPawnActionsComponent* ActionsComp; // 0x2f0
	UBlackboardComponent* Blackboard; // 0x2f8
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x300
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x308
	FMulticastInlineDelegate ReceiveMoveCompleted; // 0x310
};

struct UAIDataProvider_Random : UAIDataProvider_QueryParams {
	float Min; // 0x40
	float Max; // 0x44
	char bInteger : 1; // 0x48
};

struct UExplosionFailurePenalty : UFailurePenalty {
	float _explosionBaseDamage; // 0x30
	float _minimumDamage; // 0x34
	float _damageInnerRadius; // 0x38
	float _damageOuterRadius; // 0x3c
	float _damageFalloff; // 0x40
	UParticleSystem* _explosionPS; // 0x48
	UAkAudioEvent* _explosionAudioEvent; // 0x50
};

struct UMasterMenu : UUserWidget {
	UWidgetSwitcher* _menuSwitcher; // 0x290
	TMap<EConZMenu, UBaseMenu*> _menuClasses; // 0x298
	EConZMenu _menuToPreview; // 0x2e8
};

struct UPrisonerResponseIdle : UObject {
	TArray<UAnimMontage*> Montages; // 0x28
	float PreMontageDelay; // 0x38
	float PostMontageDelay; // 0x3c
	float CooldownDuration; // 0x40
	bool CanBeUsedWhenItemIsInHands; // 0x44
	TSet<EPrisonerAnimationSet> CombatibleAnimationsSets; // 0x48
};

struct UNiagaraDataInterfaceVectorField : UNiagaraDataInterface {
	UVectorField* Field; // 0x38
	bool bTileX; // 0x40
	bool bTileY; // 0x41
	bool bTileZ; // 0x42
};

struct ASmokeGrenadeItem : AGrenadeItem {
	UParticleSystem* _smokeParticle; // 0x850
	UAkAudioEvent* _smokeStartedAudioEvent; // 0x858
	UAkAudioEvent* _smokeStoppedAudioEvent; // 0x860
	float _smokeSoundDuration; // 0x868
	UAkComponent* _smokeAudioComponent; // 0x870
};

struct URadialVector : UFieldNodeVector {
	float Magnitude; // 0xb0
	FVector position; // 0xb4
};

struct ASplineMeshActor : AActor {
	USplineMeshComponent* SplineMeshComponent; // 0x220
};

struct UReverbEffect : UObject {
	bool bBypassEarlyReflections; // 0x28
	float ReflectionsDelay; // 0x2c
	float GainHF; // 0x30
	float ReflectionsGain; // 0x34
	bool bBypassLateReflections; // 0x38
	float LateDelay; // 0x3c
	float DecayTime; // 0x40
	float Density; // 0x44
	float Diffusion; // 0x48
	float AirAbsorptionGainHF; // 0x4c
	float DecayHFRatio; // 0x50
	float LateGain; // 0x54
	float Gain; // 0x58
	float RoomRolloffFactor; // 0x5c
};

struct UMaterialExpressionDDX : UMaterialExpression {
	FExpressionInput Value; // 0x40
};

struct AMetalDetector : AItem {
	UBasicGameResourceContainerComponent* _resourceContainerComponent; // 0x7c0
	float _minDetectionRadius; // 0x7c8
	float _maxDetectionRadius; // 0x7cc
	float _updatePeriod; // 0x7d0
	float _detectionFactor; // 0x7d4
	UAkAudioEvent* _startEvent; // 0x7d8
	UAkAudioEvent* _stopEvent; // 0x7e0
	FName _RTPCName; // 0x7e8
	int32_t _soundInterpolationTimeMs; // 0x7f0
	FName _detectionSourceSocketName; // 0x800
};

struct UAnimCompress_RemoveLinearKeys : UAnimCompress {
	float MaxPosDiff; // 0x40
	float MaxAngleDiff; // 0x44
	float MaxScaleDiff; // 0x48
	float MaxEffectorDiff; // 0x4c
	float MinEffectorDiff; // 0x50
	float EffectorDiffSocket; // 0x54
	float ParentKeyScale; // 0x58
	char bRetarget : 1; // 0x5c
	char bActuallyFilterLinearKeys : 1; // 0x5c
};

struct UNiagaraSpriteRendererProperties : UNiagaraRendererProperties {
	UMaterialInterface* Material; // 0x80
	ENiagaraRendererSourceDataMode SourceMode; // 0x88
	FNiagaraUserParameterBinding MaterialUserParamBinding; // 0x90
	ENiagaraSpriteAlignment Alignment; // 0xb0
	ENiagaraSpriteFacingMode FacingMode; // 0xb1
	FVector2D PivotInUVSpace; // 0xb4
	ENiagaraSortMode SortMode; // 0xbc
	FVector2D SubImageSize; // 0xc0
	char bSubImageBlend : 1; // 0xc8
	char bRemoveHMDRollInVR : 1; // 0xc8
	char bSortOnlyWhenTranslucent : 1; // 0xc8
	char bGpuLowLatencyTranslucency : 1; // 0xc8
	float MinFacingCameraBlendDistance; // 0xcc
	float MaxFacingCameraBlendDistance; // 0xd0
	char bEnableCameraDistanceCulling : 1; // 0xd4
	float MinCameraDistance; // 0xd8
	float MaxCameraDistance; // 0xdc
	uint32_t RendererVisibility; // 0xe0
	FNiagaraVariableAttributeBinding PositionBinding; // 0xe8
	FNiagaraVariableAttributeBinding ColorBinding; // 0x140
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x198
	FNiagaraVariableAttributeBinding SpriteRotationBinding; // 0x1f0
	FNiagaraVariableAttributeBinding SpriteSizeBinding; // 0x248
	FNiagaraVariableAttributeBinding SpriteFacingBinding; // 0x2a0
	FNiagaraVariableAttributeBinding SpriteAlignmentBinding; // 0x2f8
	FNiagaraVariableAttributeBinding SubImageIndexBinding; // 0x350
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x3a8
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x400
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x458
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x4b0
	FNiagaraVariableAttributeBinding CameraOffsetBinding; // 0x508
	FNiagaraVariableAttributeBinding UVScaleBinding; // 0x560
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x5b8
	FNiagaraVariableAttributeBinding CustomSortingBinding; // 0x610
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x668
	FNiagaraVariableAttributeBinding RendererVisibilityTagBinding; // 0x6c0
	TArray<FNiagaraMaterialAttributeBinding> MaterialParameterBindings; // 0x718
};

struct AConZSquad : AActor {
	FDbIntegerId squadId; // 0x220
	FString SquadName; // 0x228
	FString SquadMessage; // 0x238
	FString SquadInformation; // 0x248
	FConZSquadEmblem SquadEmblem; // 0x258
	TArray<FConZSquadPendingMember> _pendingMembers; // 0x260
	TArray<FConZSquadMember> _members; // 0x270
	TArray<FConZSquadMember> _oldMembers; // 0x280
	uint64_t _repEmblem; // 0x290
	int32_t _maxAllowedSquadMembers; // 0x298
};

struct UMovieSceneSection : UMovieSceneSignedObject {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int32_t RowIndex; // 0xa8
	int32_t OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct UCCAttributeSpinnerWidget : UUserWidget {
	UTextBlock* _valueTextBlock; // 0x278
	UButton* _increaseValueButton; // 0x280
	UButton* _decreaseValueButton; // 0x288
};

struct ULineSetComponent : UMeshComponent {
	UMaterialInterface* LineMaterial; // 0x470
	FBoxSphereBounds Bounds; // 0x478
	bool bBoundsDirty; // 0x494
};

struct UAkCheckBox : UContentWidget {
	ECheckBoxState CheckedState; // 0x4b8
	FDelegate CheckedStateDelegate; // 0x4bc
	FCheckBoxStyle WidgetStyle; // 0x4d0
	EHorizontalAlignment HorizontalAlignment; // 0xa50
	bool IsFocusable; // 0xa51
	FAkBoolPropertyToControl ThePropertyToControl; // 0xa58
	FAkWwiseItemToControl ItemToControl; // 0xa68
	FMulticastInlineDelegate AkOnCheckStateChanged; // 0xaa8
	FMulticastInlineDelegate OnItemDropped; // 0xab8
	FMulticastInlineDelegate OnPropertyDropped; // 0xac8
};

struct UMovieSceneFadeSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe8
	FLinearColor FadeColor; // 0x188
	char bFadeAudio : 1; // 0x198
};

struct UMinigameConfiguration : UObject {
	AMinigame* MinigameClass; // 0x28
};

struct UPrisonerActionFillGameResourceContainerWithInfiniteResourceDescription : UPrisonerActionFillGameResourceContainerDescription {
	UGameResourceContainerProxyForInfiniteResource* ProxyForInfiniteResource; // 0xd8
};

struct UPrisonerBodySymptom_NeedToUrinate : UPrisonerBodySymptom {
	FRuntimeFloatCurve _severityVsBladderFullness; // 0xb8
};

struct URadioTrack : UDataAsset {
	UAkAudioEvent* audio; // 0x30
	float Duration; // 0x38
	FName TrackName; // 0x3c
};

struct ULandscapeSplineSegment : UObject {
	FLandscapeSplineSegmentConnection Connections[0x2]; // 0x28
	FInterpCurveVector SplineInfo; // 0x58
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	TArray<USplineMeshComponent*> LocalMeshComponents; // 0xa0
};

struct UMovieSceneSkeletalAnimationTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
	bool bUseLegacySectionIndexBlend; // 0x90
	FMovieSceneSkeletalAnimRootMotionTrackParams RootMotionParams; // 0x98
	bool bBlendFirstChildOfRoot; // 0xc8
};

struct UNiagaraDataInterfaceAudioOscilloscope : UNiagaraDataInterface {
	USoundSubmix* Submix; // 0x38
	int32_t Resolution; // 0x40
	float ScopeInMilliseconds; // 0x44
};

struct USoundNodeLooping : USoundNode {
	int32_t LoopCount; // 0x48
	char bLoopIndefinitely : 1; // 0x4c
};

struct AConZCharacter : ACharacter {
	ACorpse* CorpseClass; // 0x4f8
	UChoppingRecipeDataAsset* ChoppingRecipeDataAsset; // 0x500
	bool IterativeChopping; // 0x508
	AItem* ItemRepresentation; // 0x510
	FName HeadBoneName; // 0x518
	TMap<FName, EBodyPart> BodyPartByBoneName; // 0x520
	float HeadHeight; // 0x570
	float TorsoHeight; // 0x574
	bool ShouldAutoUpdateEnvironmentDescription; // 0x578
	float EnvironmentDescriptionAutoUpdateInterval; // 0x57c
	UAkAudioEvent* EnteredIndoorEnvironmentAudioEvent; // 0x580
	UAkAudioEvent* EnteredOutdoorEnvironmentAudioEvent; // 0x588
	UAkAudioEvent* EnteredUndergroundAudioEvent; // 0x590
	UAkAudioEvent* LeftUndergroundAudioEvent; // 0x598
	float _kockoutChanceModifier; // 0x5c0
	UCharacterSoundComponent* SoundComponent; // 0x5c8
	EGender _gender; // 0x5f0
	EConZPxDominanceGroup _physicsDominanceGroup; // 0x610
	float _activeHitTimeToLive; // 0x614
	UCurveFloat* _hitDamageVsVehicleSpeedInKph; // 0x618
	FHitEffects _effectsOnVehicleHit[0x5]; // 0x620
	UPhysicsAsset* _physicsAssetOnServer; // 0x748
	EAITeam _aiTeam; // 0x750
	TArray<UCharacterAction*> _actionsList; // 0x758
	float _characterActionPlayRateMultiplier; // 0x788
	UGrappleActionComponent* _grappleActionComponent; // 0x790
};

struct ULeaderboardQueryCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UDatasmithAreaLightActorTemplate : UDatasmithObjectTemplate {
	EDatasmithAreaLightActorType LightType; // 0x30
	EDatasmithAreaLightActorShape LightShape; // 0x31
	FVector2D Dimensions; // 0x34
	FLinearColor Color; // 0x3c
	float Intensity; // 0x4c
	ELightUnits IntensityUnits; // 0x50
	float Temperature; // 0x54
	TSoftObjectPtr<UTextureLightProfile> IESTexture; // 0x58
	bool bUseIESBrightness; // 0x80
	float IESBrightnessScale; // 0x84
	FRotator Rotation; // 0x88
	float SourceRadius; // 0x94
	float SourceLength; // 0x98
	float AttenuationRadius; // 0x9c
};

struct UGizmoAxisTranslationParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float Parameter; // 0xb0
	FGizmoFloatParameterChange LastChange; // 0xb4
	FVector CurTranslationAxis; // 0xbc
	FVector CurTranslationOrigin; // 0xc8
	FTransform InitialTransform; // 0xe0
};

struct UUniformVector : UFieldNodeVector {
	float Magnitude; // 0xb0
	FVector Direction; // 0xb4
};

struct UMaterialExpressionFloor : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct AFlashbangItemEffects : AActor {
	UParticleSystem* _explosionParticles; // 0x220
	UMatineeCameraShake* _explosionCameraShakeClass; // 0x228
	UAkAudioEvent* _explosionAudioEvent; // 0x230
	UAkAudioEvent* _startStunnedSoundEffectsAudioEvent; // 0x238
	UAkAudioEvent* _stopStunnedSoundEffectsAudioEvent; // 0x240
	float _minFlashbangDurationToStartStunnedSoundEffects; // 0x248
	float _fullFlashDuration; // 0x24c
	float _flashFadeOutDuration; // 0x250
	float _flashRadius; // 0x254
	float _flashLineTraceDistance; // 0x258
};

struct AMedicationItem : AItem {
	EMedicationUsage usage; // 0x7c0
	EMedicationType Type; // 0x7c1
	float DailyDoses; // 0x7c4
	float TimeToAbsorbSeconds; // 0x7c8
	float EffectTimeMultiplier; // 0x7cc
	float ReuseEffectTimeIncrease; // 0x7d0
	float MaxEffectTime; // 0x7d4
	EMedicationRepeatedAbuseReaction RepeatedAbuseReaction; // 0x7d8
};

struct UParticleModuleSourceMovement : UParticleModuleLocationBase {
	FRawDistributionVector SourceMovementScale; // 0x30
};

struct UBlueprint : UBlueprintCore {
	UObject* ParentClass; // 0x50
	EBlueprintType BlueprintType; // 0x58
	char bRecompileOnLoad : 1; // 0x59
	char bHasBeenRegenerated : 1; // 0x59
	char bIsRegeneratingOnLoad : 1; // 0x59
	int32_t BlueprintSystemVersion; // 0x5c
	USimpleConstructionScript* SimpleConstructionScript; // 0x60
	TArray<UActorComponent*> ComponentTemplates; // 0x68
	TArray<UTimelineTemplate*> Timelines; // 0x78
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x88
	UInheritableComponentHandler* InheritableComponentHandler; // 0x98
};

struct AWeaponAttachmentFlashlight : AWeaponAttachment {
	UAkAudioEvent* _lightActivatedAudioEvent; // 0x7e0
	FName _lightSocketName; // 0x7e8
	FName _materialEmissiveParameterName; // 0x7f0
	UBasicGameResourceContainerComponent* _resourceContainerComponent; // 0x800
};

struct UMovieSceneByteTrack : UMovieScenePropertyTrack {
	UEnum* Enum; // 0xb0
};

struct UEditableGameplayTagQueryExpression_AllExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct ULoudnessNRTSettings : UAudioSynesthesiaNRTSettings {
	float AnalysisPeriod; // 0x28
	float MinimumFrequency; // 0x2c
	float MaximumFrequency; // 0x30
	ELoudnessNRTCurveTypeEnum CurveType; // 0x34
	float NoiseFloorDb; // 0x38
};

struct USizeBox : UContentWidget {
	float WidthOverride; // 0x130
	float HeightOverride; // 0x134
	float MinDesiredWidth; // 0x138
	float MinDesiredHeight; // 0x13c
	float MaxDesiredWidth; // 0x140
	float MaxDesiredHeight; // 0x144
	float MinAspectRatio; // 0x148
	float MaxAspectRatio; // 0x14c
	char bOverride_WidthOverride : 1; // 0x150
	char bOverride_HeightOverride : 1; // 0x150
	char bOverride_MinDesiredWidth : 1; // 0x150
	char bOverride_MinDesiredHeight : 1; // 0x150
	char bOverride_MaxDesiredWidth : 1; // 0x150
	char bOverride_MaxDesiredHeight : 1; // 0x150
	char bOverride_MinAspectRatio : 1; // 0x150
	char bOverride_MaxAspectRatio : 1; // 0x150
};

struct AFlagAreaVisualizer : AActor {
	UStaticMeshComponent* _staticMeshComponent; // 0x220
};

struct UUVProjectionOperatorFactory : UObject {
	UUVProjectionTool* Tool; // 0x30
};

struct USpringArmComponent : USceneComponent {
	float TargetArmLength; // 0x1f8
	FVector SocketOffset; // 0x1fc
	FVector TargetOffset; // 0x208
	float ProbeSize; // 0x214
	ECollisionChannel ProbeChannel; // 0x218
	char bDoCollisionTest : 1; // 0x21c
	char bUsePawnControlRotation : 1; // 0x21c
	char bInheritPitch : 1; // 0x21c
	char bInheritYaw : 1; // 0x21c
	char bInheritRoll : 1; // 0x21c
	char bEnableCameraLag : 1; // 0x21c
	char bEnableCameraRotationLag : 1; // 0x21c
	char bUseCameraLagSubstepping : 1; // 0x21c
	char bDrawDebugLagMarkers : 1; // 0x21d
	float CameraLagSpeed; // 0x220
	float CameraRotationLagSpeed; // 0x224
	float CameraLagMaxTimeStep; // 0x228
	float CameraLagMaxDistance; // 0x22c
};

struct UUI_SquadConfirmation_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* AcceptButton; // 0x268
	UButton* CancelButton; // 0x270
	UExtendedRichTextBlock* DialogText; // 0x278
	FMulticastInlineDelegate OnConfirm; // 0x280
	FMulticastInlineDelegate OnCancel; // 0x290
	FText TextFormat; // 0x2a0
	FTextBlockStyle TextStyle; // 0x2b8
	FSlateColor Color; // 0x528
};

struct ADoubleDoor : ADoor {
	UMeshComponent* Mesh1; // 0x408
};

struct USkeletalMesh : UStreamableRenderAsset {
	USkeleton* Skeleton; // 0x80
	FBoxSphereBounds ImportedBounds; // 0x88
	FBoxSphereBounds ExtendedBounds; // 0xa4
	FVector PositiveBoundsExtension; // 0xc0
	FVector NegativeBoundsExtension; // 0xcc
	TArray<FSkeletalMaterial> Materials; // 0xd8
	TArray<FBoneMirrorInfo> SkelMirrorTable; // 0xe8
	TArray<FSkeletalMeshLODInfo> LODInfo; // 0xf8
	FPerPlatformInt MinLOD; // 0x158
	FPerPlatformBool DisableBelowMinLodStripping; // 0x15c
	EAxis SkelMirrorAxis; // 0x15d
	EAxis SkelMirrorFlipAxis; // 0x15e
	char bUseFullPrecisionUVs : 1; // 0x15f
	char bUseHighPrecisionTangentBasis : 1; // 0x15f
	char bHasBeenSimplified : 1; // 0x15f
	char bHasVertexColors : 1; // 0x15f
	char bEnablePerPolyCollision : 1; // 0x15f
	UBodySetup* BodySetup; // 0x160
	UPhysicsAsset* PhysicsAsset; // 0x168
	UPhysicsAsset* ShadowPhysicsAsset; // 0x170
	TArray<UNodeMappingContainer*> NodeMappingData; // 0x178
	TArray<UMorphTarget*> MorphTargets; // 0x188
	UAnimInstance* PostProcessAnimBlueprint; // 0x310
	TArray<UClothingAssetBase*> MeshClothingAssets; // 0x318
	FSkeletalMeshSamplingInfo SamplingInfo; // 0x328
	TArray<UAssetUserData*> AssetUserData; // 0x358
	TArray<USkeletalMeshSocket*> Sockets; // 0x368
	TArray<FSkinWeightProfileInfo> SkinWeightProfiles; // 0x388
};

struct UParticleModuleColorOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorOverLife; // 0x30
	FRawDistributionFloat AlphaOverLife; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct UParticleModuleLifetime : UParticleModuleLifetimeBase {
	FRawDistributionFloat LifeTime; // 0x30
};

struct UEditPivotToolProperties : UInteractiveToolPropertySet {
	bool bEnableSnapDragging; // 0x60
	EEditPivotSnapDragRotationMode RotationMode; // 0x61
};

struct UWaterWavesAssetReference : UWaterWavesBase {
	UWaterWavesAsset* WaterWavesAsset; // 0x28
};

struct UGranularSynth : USynthComponent {
	USoundWave* GranulatedSoundWave; // 0x6c0
};

struct UEdGraphNode : UObject {
	TArray<UEdGraphPin_Deprecated*> DeprecatedPins; // 0x38
	int32_t NodePosX; // 0x48
	int32_t NodePosY; // 0x4c
	int32_t NodeWidth; // 0x50
	int32_t NodeHeight; // 0x54
	ENodeAdvancedPins AdvancedPinDisplay; // 0x58
	ENodeEnabledState EnabledState; // 0x59
	char bDisplayAsDisabled : 1; // 0x5b
	char bUserSetEnabledState : 1; // 0x5b
	char bIsNodeEnabled : 1; // 0x5b
	char bHasCompilerMessage : 1; // 0x5b
	FString NodeComment; // 0x60
	int32_t ErrorType; // 0x70
	FString ErrorMsg; // 0x78
	FGuid NodeGuid; // 0x88
};

struct UMeshComponent : UPrimitiveComponent {
	TArray<UMaterialInterface*> OverrideMaterials; // 0x448
	char bEnableMaterialParameterCaching : 1; // 0x468
};

struct UMaterialExpressionSmoothStep : UMaterialExpression {
	FExpressionInput Min; // 0x40
	FExpressionInput Max; // 0x54
	FExpressionInput Value; // 0x68
	float ConstMin; // 0x7c
	float ConstMax; // 0x80
	float ConstValue; // 0x84
};

struct UGeometryCacheTrackStreamable : UGeometryCacheTrack {
	UGeometryCacheCodecBase* Codec; // 0x58
	float StartSampleTime; // 0xc8
};

struct UItemComponentStateBase : UObject {
	FDbIntegerId ID; // 0x28
	FString ComponentName; // 0x30
};

struct UDoorLockingRegistry : UActorComponent {
	TMap<EDoorUnlockDataType, FDoorUnlockDataCollection> _doorUnlockDataByType; // 0xb0
	int32_t _countNormalizationThreshold; // 0x100
};

struct UMetabolism_ICU_GraphWidget : UGraph2DWidget {
	UCurveFloat* BaseCurve; // 0x1f0
	float CurvePeriodBaseDuration; // 0x1f8
	int32_t MinSamplesForSingleCurvePeriod; // 0x1fc
};

struct UMetabolismBodyStatsPanel : UUserWidget {
	UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Protein; // 0x260
	UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Carbs; // 0x268
	UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Fat; // 0x270
	UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Minerals; // 0x278
	UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Vitamins; // 0x280
	UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Water; // 0x288
	UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Alcohol; // 0x290
	UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Bones; // 0x298
	UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Blood; // 0x2a0
	UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Intestines; // 0x2a8
	UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Skin; // 0x2b0
	UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Organs; // 0x2b8
	UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Fat; // 0x2c0
	UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Muscle; // 0x2c8
};

struct UCheckBoxStyleAsset : UObject {
	FCheckBoxStyle CheckBoxStyle; // 0x28
};

struct UProceduralSphereToolProperties : UProceduralShapeToolProperties {
	float Radius; // 0x70
	int32_t LatitudeSlices; // 0x74
	int32_t LongitudeSlices; // 0x78
};

struct UMagicLeapARPinSettings : UObject {
	float UpdateCheckFrequency; // 0x28
	FMagicLeapARPinState OnUpdatedEventTriggerDelta; // 0x2c
};

struct UClearStovePipe : UWeaponActionClearMalfunctionSequence {
	FName MontageEndSectionName; // 0xb8
};

struct ARackItem : AChestItem {
	UStaticMesh* _lockStaticMesh; // 0x870
};

struct UWeaponAnimInstance : UItemAnimInstance {
	float _owningPrisonerWeaponBreathFactor; // 0x2d0
	float _owningPrisonerWeaponAimDownTheSightsStillBlendFactor; // 0x2d4
	bool _isOwningPrisonerAimingDownTheSights; // 0x2d8
	bool _isChamberOpened; // 0x2d9
	int32_t _ammoCount; // 0x2dc
	bool _shouldPlayChamberOpenedIdle; // 0x2e0
	bool _isInGameEvent; // 0x2e1
	EWeaponMalfunction _malfunction; // 0x2e2
	bool _useFiringModeBoneRotation; // 0x2e3
	FRotator _firingModeBoneRotation; // 0x2e4
	float _hideBoneCurveValue; // 0x2f0
};

struct UCurveLinearColor : UCurveBase {
	FRichCurve FloatCurves[0x4]; // 0x30
	float AdjustHue; // 0x230
	float AdjustSaturation; // 0x234
	float AdjustBrightness; // 0x238
	float AdjustBrightnessCurve; // 0x23c
	float AdjustVibrance; // 0x240
	float AdjustMinAlpha; // 0x244
	float AdjustMaxAlpha; // 0x248
};

struct UNiagaraDataInterfaceHairStrands : UNiagaraDataInterface {
	UGroomAsset* DefaultSource; // 0x38
	AActor* SourceActor; // 0x40
};

struct UBTComposite_SimpleParallel : UBTCompositeNode {
	EBTParallelMode FinishMode; // 0x90
};

struct A1H_Wooden_club_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f0
};

struct UUI_SortByButton_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UButton* Button_1; // 0x280
	USizeBox* SizeBox_1; // 0x288
	UTextBlock* TextBlock_1; // 0x290
	float Size; // 0x298
	FText Text; // 0x2a0
	SortByTypes Type; // 0x2b8
	FMulticastInlineDelegate OnClicked; // 0x2c0
};

struct ABP_WeaponBullet_WoodenArrow_C : AProjectileArrow {
	FPointerToUberGraphFrame UberGraphFrame; // 0x458
	UParticleSystemComponent* ParticleSystem; // 0x460
};

struct UEditNormalsOperatorFactory : UObject {
	UEditNormalsTool* Tool; // 0x30
};

struct UAISubsystem : UObject {
	UAISystem* AISystem; // 0x30
};

struct AAkSpatialAudioVolume : AVolume {
	UAkSurfaceReflectorSetComponent* SurfaceReflectorSet; // 0x258
	UAkLateReverbComponent* LateReverb; // 0x260
	UAkRoomComponent* Room; // 0x268
};

struct UWaypointWidget : UDesignableUserWidget {
	UTexture2D* IconTexture; // 0x278
	UTexture2D* AccentTexture; // 0x280
	FLinearColor AccentColor; // 0x288
	float BarValue; // 0x298
	FLinearColor BarColor; // 0x29c
	float HeightOffset; // 0x2ac
	bool Emphasized; // 0x2b0
	FLinearColor EmphasisColor; // 0x2b4
	FString LabelText; // 0x2c8
};

struct UEnvQueryTest_PathfindingBatch : UEnvQueryTest_Pathfinding {
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x280
};

struct UDcxVehicleDriveComponentTank : UDcxVehicleDriveComponent {
	EDcxVehicleDriveControlModelTank DriveModel; // 0x3b8
};

struct UAnimNotify_ConditionalPlayParticleEffectForItem : UAnimNotify {
	UParticleSystem* PSTemplate; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct UMovieSceneEnumTrack : UMovieScenePropertyTrack {
	UEnum* Enum; // 0xb0
};

struct UPlaneCutTool : UMultiSelectionTool {
	UPlaneCutToolProperties* BasicProperties; // 0x98
	UAcceptOutputProperties* AcceptProperties; // 0xa0
	FVector CutPlaneOrigin; // 0xa8
	FQuat CutPlaneOrientation; // 0xc0
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xd0
	TArray<UDynamicMeshReplacementChangeTarget*> MeshesToCut; // 0xe0
	UTransformGizmo* PlaneTransformGizmo; // 0x158
	UTransformProxy* PlaneTransformProxy; // 0x160
};

struct UPhysicalAnimationComponent : UActorComponent {
	float StrengthMultiplyer; // 0xb0
	USkeletalMeshComponent* SkeletalMeshComponent; // 0xb8
};

struct UParticleModuleOrbit : UParticleModuleOrbitBase {
	EOrbitChainMode ChainMode; // 0x38
	FRawDistributionVector OffsetAmount; // 0x40
	FOrbitOptions OffsetOptions; // 0x88
	FRawDistributionVector RotationAmount; // 0x90
	FOrbitOptions RotationOptions; // 0xd8
	FRawDistributionVector RotationRateAmount; // 0xe0
	FOrbitOptions RotationRateOptions; // 0x128
};

struct APrecomputedVisibilityOverrideVolume : AVolume {
	TArray<AActor*> OverrideVisibleActors; // 0x258
	TArray<AActor*> OverrideInvisibleActors; // 0x268
	TArray<FName> OverrideInvisibleLevels; // 0x278
};

struct UGameEventScoreboardWidget : UDesignableUserWidget {
	UGameEventRoundInfoWidget* RoundInfoWidgetClass; // 0x278
	UGameEventTeamHeaderWidget* TeamHeaderWidgetClass; // 0x280
	UGameEventParticipantStatsWidget* StatWidgetClass; // 0x288
	TArray<UGameEventParticipantStatsWidget*> StatWidgets; // 0x290
	AGameEventBase* _gameEvent; // 0x2a0
	int32_t _selected; // 0x2a8
};

struct UMetabolismAdvancedProgressBar : UUserWidget {
	FText Title; // 0x260
	URetainerBox* _progressBarEffect; // 0x278
	UTextBlock* _titleText; // 0x280
	UTextBlock* _valueText; // 0x288
	USizeBox* _apbSize; // 0x290
	UImage* _progressBarBackground; // 0x298
	FText _defaultValue; // 0x2a0
	FMetabolismAPBFontStyle _fontStyle; // 0x2b8
	FMargin _progressBarPadding; // 0x2e8
	FVector2D _size; // 0x2f8
	FSlateBrush _backgroundImageBrush; // 0x300
	FDataTableRowHandle _normalBackgroundColor; // 0x388
	FDataTableRowHandle _normalForegroundColor; // 0x398
	FDataTableRowHandle _normalTextColorEmpty; // 0x3a8
	FDataTableRowHandle _normalTextColorFilled; // 0x3b8
	FDataTableRowHandle _alertedBackgroundColor; // 0x3c8
	FDataTableRowHandle _alertedForegroundColor; // 0x3d8
	FDataTableRowHandle _alertedTextColorEmpty; // 0x3e8
	FDataTableRowHandle _alertedTextColorFilled; // 0x3f8
	FDataTableRowHandle _badBackgroundColor; // 0x408
	FDataTableRowHandle _badForegroundColor; // 0x418
	FDataTableRowHandle _badTextColorEmpty; // 0x428
	FDataTableRowHandle _badTextColorFilled; // 0x438
	FDataTableRowHandle _goodBackgroundColor; // 0x448
	FDataTableRowHandle _goodForegroundColor; // 0x458
	FDataTableRowHandle _goodTextColorEmpty; // 0x468
	FDataTableRowHandle _goodTextColorFilled; // 0x478
};

struct UMagicLeapSettings : UObject {
	bool bEnableZI; // 0x28
	bool bUseVulkanForZI; // 0x29
	bool bUseMLAudioForZI; // 0x2a
};

struct UPaperTileMap : UObject {
	int32_t MapWidth; // 0x28
	int32_t MapHeight; // 0x2c
	int32_t TileWidth; // 0x30
	int32_t TileHeight; // 0x34
	float PixelsPerUnrealUnit; // 0x38
	float SeparationPerTileX; // 0x3c
	float SeparationPerTileY; // 0x40
	float SeparationPerLayer; // 0x44
	TSoftObjectPtr<UPaperTileSet> SelectedTileSet; // 0x48
	UMaterialInterface* Material; // 0x70
	TArray<UPaperTileLayer*> TileLayers; // 0x78
	float CollisionThickness; // 0x88
	ESpriteCollisionMode SpriteCollisionDomain; // 0x8c
	ETileMapProjectionMode ProjectionMode; // 0x8d
	int32_t HexSideLength; // 0x90
	UBodySetup* BodySetup; // 0x98
	int32_t LayerNameIndex; // 0xa0
};

struct APlayerController : AController {
	UPlayer* Player; // 0x298
	APawn* AcknowledgedPawn; // 0x2a0
	UInterpTrackInstDirector* ControllingDirTrackInst; // 0x2a8
	AHUD* MyHUD; // 0x2b0
	APlayerCameraManager* PlayerCameraManager; // 0x2b8
	APlayerCameraManager* PlayerCameraManagerClass; // 0x2c0
	bool bAutoManageActiveCameraTarget; // 0x2c8
	FRotator TargetViewRotation; // 0x2cc
	float SmoothTargetViewRotationSpeed; // 0x2e4
	TArray<AActor*> HiddenActors; // 0x2f0
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x300
	float LastSpectatorStateSynchTime; // 0x314
	FVector LastSpectatorSyncLocation; // 0x318
	FRotator LastSpectatorSyncRotation; // 0x324
	int32_t ClientCap; // 0x330
	UCheatManager* CheatManager; // 0x338
	UCheatManager* CheatClass; // 0x340
	UPlayerInput* PlayerInput; // 0x348
	TArray<FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x350
	char bPlayerIsWaiting : 1; // 0x3d0
	char NetPlayerIndex; // 0x3d4
	UNetConnection* PendingSwapConnection; // 0x410
	UNetConnection* NetConnection; // 0x418
	float InputYawScale; // 0x42c
	float InputPitchScale; // 0x430
	float InputRollScale; // 0x434
	char bShowMouseCursor : 1; // 0x438
	char bEnableClickEvents : 1; // 0x438
	char bEnableTouchEvents : 1; // 0x438
	char bEnableMouseOverEvents : 1; // 0x438
	char bEnableTouchOverEvents : 1; // 0x438
	char bForceFeedbackEnabled : 1; // 0x438
	float ForceFeedbackScale; // 0x43c
	TArray<FKey> ClickEventKeys; // 0x440
	EMouseCursor DefaultMouseCursor; // 0x450
	EMouseCursor CurrentMouseCursor; // 0x451
	ECollisionChannel DefaultClickTraceChannel; // 0x452
	ECollisionChannel CurrentClickTraceChannel; // 0x453
	float HitResultTraceDistance; // 0x454
	uint16_t SeamlessTravelCount; // 0x458
	uint16_t LastCompletedSeamlessTravelCount; // 0x45a
	UInputComponent* InactiveStateInputComponent; // 0x4d0
	char bShouldPerformFullTickWhenPaused : 1; // 0x4d8
	UTouchInterface* CurrentTouchInterface; // 0x4f0
	ASpectatorPawn* SpectatorPawn; // 0x548
	bool bIsLocalPlayerController; // 0x554
	FVector SpawnLocation; // 0x558
};

struct UAnimNotify_WaterPaddle : UAnimNotify {
	UParticleSystem* ParticleSystem; // 0x38
	UAkAudioEvent* AudioEvent; // 0x40
	float VolumeMultiplier; // 0x48
	float PitchMultiplier; // 0x4c
	bool IsUnderwater; // 0x50
	bool IsAttached; // 0x51
	FName AttachPointName; // 0x54
	bool DebugMode; // 0x5c
};

struct UNameableItemComponent : UItemComponent {
	FString _name; // 0xd8
	TWeakObjectPtr<UItemStatusWidget> _nameWidget; // 0xe8
	TWeakObjectPtr<UChangeTextWidget> _editNameWidget; // 0xf0
};

struct ABird2AIController : AAIController {
	float FlyDurationMin; // 0x328
	float FlyDurationMax; // 0x32c
	float RemainOnGroundDurationMin; // 0x330
	float RemainOnGroundDurationMax; // 0x334
	float TurnSpeed; // 0x338
	float FlightSegmentDistance; // 0x33c
	float LandingDistance; // 0x340
};

struct AConZBase : AActor {
	TWeakObjectPtr<AConZBaseElement> _baseElementActor; // 0x220
	bool _overrideBlockStackingRules; // 0x2c0
	float _debugRenderingDistance; // 0x2c4
	int32_t _decayProcessingNumberOfFrames; // 0x2c8
	int32_t _decayProcessingMaxDestroyedElementsPerUpdate; // 0x2cc
};

struct UMaterialExpressionShadowReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Shadow; // 0x54
};

struct UAREnvironmentCaptureProbe : UARTrackedGeometry {
	FVector Extent; // 0xf8
	UAREnvironmentCaptureProbeTexture* EnvironmentCaptureTexture; // 0x108
};

struct UInventoryPanelSideLayerWidget : UDesignableUserWidget {
	UItemWidget2* _itemWidget; // 0x278
};

struct UMaterialExpressionVectorNoise : UMaterialExpression {
	FExpressionInput position; // 0x40
	EVectorNoiseFunction NoiseFunction; // 0x54
	int32_t Quality; // 0x58
	char bTiling : 1; // 0x5c
	uint32_t TileSize; // 0x60
};

struct UAndroidPermissionCallbackProxy : UObject {
	FMulticastInlineDelegate OnPermissionsGrantedDynamicDelegate; // 0x28
};

struct UAsyncActionChangePrimaryAssetBundles : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate completed; // 0x78
};

struct UBasicPrisonerBodySymptomNotifier : UPrisonerBodySymptomNotifier {
	FFloatInterval _triggerDelay; // 0x30
	bool _shouldDisplayNotificationOnChangeForWorse; // 0x38
	bool _shouldResetNotificationTimerOnSeverityChange; // 0x39
	TArray<FBasicPrisonerBodySymptomNotificationParameters> _notificationParameters; // 0x40
};

struct UTestMovieSceneTrack : UMovieSceneTrack {
	bool bHighPassFilter; // 0x80
	TArray<UMovieSceneSection*> SectionArray; // 0x88
};

struct UOceanGenerator : UWaterBodyGenerator {
	TArray<UOceanBoxCollisionComponent*> CollisionBoxes; // 0x28
	TArray<UOceanCollisionComponent*> CollisionHullSets; // 0x38
};

struct URewardItemWidget : UUserWidget {
	UImage* _bulletImage; // 0x260
	UTextBlock* _rewardItemText; // 0x268
};

struct AWeaponAttachmentScope : AWeaponAttachmentSight {
	FVector ScopeViewOffset; // 0x7f8
	UMaterialInterface* ScopeLensPostProcess; // 0x808
	FName LensZoomParameterName; // 0x810
	bool FrontFocalPlane; // 0x818
	bool HasCrosshairParallax; // 0x819
	UStaticMesh* ScopeViewMesh; // 0x820
	UStaticMesh* ScopeViewLensMesh; // 0x828
	bool _canToggleDownTheSightsMode; // 0x830
	UTextureRenderTarget2D* TextRenderTarget; // 0x838
	UWeaponScopeWidget* WeaponScopeWidget; // 0x840
	FName GlassCenterSocketName; // 0x848
	int32_t WindageInitialOffset; // 0x850
	UAkAudioEvent* WindageClickAudioEvent; // 0x858
	UScopeableItemComponent* _scopableItemComponent; // 0x860
	UStaticMeshComponent* _scopeViewMesh; // 0x868
	UStaticMeshComponent* _scopeViewLensMesh; // 0x870
	float _fakeGlassMinOpacity; // 0x878
	float _displayBrightnessMultiplier; // 0x8ec
};

struct UAnimNotify_PlayMontageNotify : UAnimNotify {
	FName NotifyName; // 0x38
};

struct UGameInstance : UObject {
	TArray<ULocalPlayer*> LocalPlayers; // 0x38
	UOnlineSession* OnlineSession; // 0x48
	TArray<UObject*> ReferencedObjects; // 0x50
	FMulticastInlineDelegate OnPawnControllerChangedDelegates; // 0x78
};

struct UMovieSceneCompiledData : UObject {
	FMovieSceneEvaluationTemplate EvaluationTemplate; // 0x28
	FMovieSceneSequenceHierarchy Hierarchy; // 0x188
	FMovieSceneEntityComponentField EntityComponentField; // 0x2a0
	FMovieSceneEvaluationField TrackTemplateField; // 0x390
	TArray<FFrameTime> DeterminismFences; // 0x3c0
	FGuid CompiledSignature; // 0x3d0
	FGuid CompilerVersion; // 0x3e0
	FMovieSceneSequenceCompilerMaskStruct AccumulatedMask; // 0x3f0
	FMovieSceneSequenceCompilerMaskStruct AllocatedMask; // 0x3f1
	EMovieSceneSequenceFlags AccumulatedFlags; // 0x3f2
};

struct UBlendProfile : UObject {
	USkeleton* OwningSkeleton; // 0x30
	TArray<FBlendProfileBoneEntry> ProfileEntries; // 0x38
};

struct AFishingZoneIndicator : AActor {
	USceneComponent* _sceneComponent; // 0x220
	UParticleSystemComponent* _fishIconParticles; // 0x228
	UParticleSystemComponent* _rippleParticles; // 0x230
	float _radius; // 0x238
	UFishSpawningPreset* _fishSpawningPreset; // 0x240
};

struct UGameViewportClient : UScriptViewportClient {
	UConsole* ViewportConsole; // 0x40
	TArray<FDebugDisplayProperty> DebugProperties; // 0x48
	int32_t MaxSplitscreenPlayers; // 0x68
	UWorld* World; // 0x78
	UGameInstance* GameInstance; // 0x80
};

struct AUseItemObjective : AObjective {
	TMap<TSoftObjectPtr<AActor>, FUsableObjectiveItem> _targetMeshes; // 0x320
};

struct UWaterMeshComponent : UMeshComponent {
	int32_t ForceCollapseDensityLevel; // 0x470
	float TileSize; // 0x474
	FIntPoint ExtentInTiles; // 0x478
	UMaterialInterface* FarDistanceMaterial; // 0x480
	float FarDistanceMeshExtent; // 0x488
	FVector RTWorldLocation; // 0x48c
	FVector RTWorldSizeVector; // 0x498
	int32_t TessellationFactor; // 0x588
	float LODScale; // 0x58c
};

struct APlayerCameraManager : AActor {
	APlayerController* PCOwner; // 0x220
	USceneComponent* TransformComponent; // 0x228
	float DefaultFOV; // 0x238
	float DefaultOrthoWidth; // 0x240
	float DefaultAspectRatio; // 0x248
	FCameraCacheEntry CameraCache; // 0x290
	FCameraCacheEntry LastFrameCameraCache; // 0x880
	FTViewTarget ViewTarget; // 0xe70
	FTViewTarget PendingViewTarget; // 0x1470
	FCameraCacheEntry CameraCachePrivate; // 0x1aa0
	FCameraCacheEntry LastFrameCameraCachePrivate; // 0x2090
	TArray<UCameraModifier*> ModifierList; // 0x2680
	TArray<UCameraModifier*> DefaultModifiers; // 0x2690
	float FreeCamDistance; // 0x26a0
	FVector FreeCamOffset; // 0x26a4
	FVector ViewTargetOffset; // 0x26b0
	FMulticastInlineDelegate OnAudioFadeChangeEvent; // 0x26c0
	TArray<AEmitterCameraLensEffectBase*> CameraLensEffects; // 0x26e0
	UCameraModifier_CameraShake* CachedCameraShakeMod; // 0x26f0
	UCameraAnimInst* AnimInstPool[0x8]; // 0x26f8
	TArray<FPostProcessSettings> PostProcessBlendCache; // 0x2738
	TArray<UCameraAnimInst*> ActiveAnims; // 0x2758
	TArray<UCameraAnimInst*> FreeAnims; // 0x2768
	ACameraActor* AnimCameraActor; // 0x2778
	char bIsOrthographic : 1; // 0x2780
	char bDefaultConstrainAspectRatio : 1; // 0x2780
	char bClientSimulatingViewTarget : 1; // 0x2780
	char bUseClientSideCameraUpdates : 1; // 0x2780
	char bGameCameraCutThisFrame : 1; // 0x2781
	float ViewPitchMin; // 0x2784
	float ViewPitchMax; // 0x2788
	float ViewYawMin; // 0x278c
	float ViewYawMax; // 0x2790
	float ViewRollMin; // 0x2794
	float ViewRollMax; // 0x2798
	float ServerUpdateCameraTimeout; // 0x27a0
};

struct ARadialForceActor : ARigidBodyBase {
	URadialForceComponent* ForceComponent; // 0x220
};

struct ALandscapeMeshProxyActor : AActor {
	ULandscapeMeshProxyComponent* LandscapeMeshProxyComponent; // 0x220
};

struct UMaterialExpressionStep : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
	float ConstY; // 0x68
	float ConstX; // 0x6c
};

struct UBTDecorator_IsBBEntryOfClass : UBTDecorator_BlackboardBase {
	UObject* TestClass; // 0x90
};

struct UMRMeshComponent : UPrimitiveComponent {
	UMaterialInterface* Material; // 0x458
	UMaterialInterface* WireframeMaterial; // 0x460
	bool bCreateMeshProxySections; // 0x468
	bool bUpdateNavMeshOnMeshUpdate; // 0x469
	bool bNeverCreateCollisionMesh; // 0x46a
	UBodySetup* CachedBodySetup; // 0x470
	TArray<UBodySetup*> BodySetups; // 0x478
};

struct UConZBoatComboMountSlot : UConZBoatDriverMountSlot {
	UBlendSpace* _idleAnimation; // 0x168
	FName _passengerSocketName; // 0x170
	UVehicleWeaponAimingParameters* _vehiclePassengerWeaponAimingParameters; // 0x178
};

struct USubmixEffectReverbPreset : USoundEffectSubmixPreset {
	FSubmixEffectReverbSettings Settings; // 0xd0
};

struct UMeshSelectionSet : USelectionSet {
	TArray<int32_t> Vertices; // 0x40
	TArray<int32_t> Edges; // 0x50
	TArray<int32_t> Faces; // 0x60
	TArray<int32_t> Groups; // 0x70
};

struct ATransformGizmoActor : AGizmoActor {
	UPrimitiveComponent* TranslateX; // 0x220
	UPrimitiveComponent* TranslateY; // 0x228
	UPrimitiveComponent* TranslateZ; // 0x230
	UPrimitiveComponent* TranslateYZ; // 0x238
	UPrimitiveComponent* TranslateXZ; // 0x240
	UPrimitiveComponent* TranslateXY; // 0x248
	UPrimitiveComponent* RotateX; // 0x250
	UPrimitiveComponent* RotateY; // 0x258
	UPrimitiveComponent* RotateZ; // 0x260
	UPrimitiveComponent* UniformScale; // 0x268
	UPrimitiveComponent* AxisScaleX; // 0x270
	UPrimitiveComponent* AxisScaleY; // 0x278
	UPrimitiveComponent* AxisScaleZ; // 0x280
	UPrimitiveComponent* PlaneScaleYZ; // 0x288
	UPrimitiveComponent* PlaneScaleXZ; // 0x290
	UPrimitiveComponent* PlaneScaleXY; // 0x298
};

struct UAdminCommand : UObject {
	FString _verb; // 0x28
	TArray<FAdminCommandArgumentDescription> _argumentDescriptions; // 0x38
	int32_t _numberOfRequiredArguments; // 0x48
	bool _isEnabled; // 0x4c
	bool _isEnabledInShippingBuild; // 0x4d
	bool _isAdminStatusRequired; // 0x4e
	bool _isDeveloperStatusRequired; // 0x4f
	bool _shouldExecuteOnServer; // 0x50
	bool _shouldExecuteOnClient; // 0x51
	bool _shouldDisableSingleplayerAchievementsIfExecuted; // 0x52
	FString _description; // 0x58
};

struct AFishSchoolActor : AActor {
	EFishBehavior _currentState; // 0x220
	UCapsuleComponent* _capsuleComponent; // 0x250
	UFishInstancedStaticMeshComponent* _schoolInstancedStaticMeshComponent; // 0x258
	float _minDistanceToTarget; // 0x28c
	float _boundsInflation; // 0x290
	float _findPathBypassMultiplier; // 0x294
	int32_t _maxTimesSameDestinationAllowed; // 0x298
	float _maxTimePerDestinationMultiplier; // 0x29c
	float _schoolMovementRecoveryTurningSpeed; // 0x2a4
	float _schoolMovementRecoveryAcceleration; // 0x2a8
	float _schoolMovementRecoveryDeceleration; // 0x2ac
	float _schoolCloseToSurfaceTurningSpeed; // 0x2b0
	float _schoolCloseToSurfaceAcceleration; // 0x2b4
	float _schoolCloseToSurfaceDeceleration; // 0x2b8
	float _surfaceOffset; // 0x2bc
	float _upperForbiddenZoneDepthPercentage; // 0x2c0
	float _swimmingDepthPercentage; // 0x2c4
	float _lowerForbiddenZoneDepthPercentage; // 0x2c8
	UParticleSystem* _waterParticles; // 0x2d0
	float _waterParticlesInterval; // 0x2d8
	UParticleSystemComponent* _waterParticlesComponent; // 0x2e0
	int32_t _forcedNumberOfGroups; // 0x2ec
	float _groupSpeed; // 0x2f0
	float _groupSeparationSpeed; // 0x2f4
	float _groupCatchUpSpeed; // 0x2f8
	float _groupSeparationDistance; // 0x2fc
	float _groupSeparationTime; // 0x304
	int32_t _minNumberOfFish; // 0x308
	int32_t _maxNumberOfFish; // 0x30c
	float _maxFishDistance; // 0x314
	float _fishSeparationDistance; // 0x31c
	float _fishSeparationTime; // 0x320
	float _fishTurnSpeedRangeModifier; // 0x328
	float _fishMinScale; // 0x32c
	float _fishMaxScale; // 0x330
	float _fishNormalSpeed; // 0x334
	float _fishSeparationSpeed; // 0x338
	float _fishCatchUpSpeed; // 0x33c
	float _fishMaxSpeed; // 0x340
	float _fishAcceleration; // 0x344
	float _fishDeceleration; // 0x348
	FVector _moveToLocationRep; // 0x398
	TMap<EFishBehavior, FFishStateParameters> _behaviorMap; // 0x3b0
	FVector _randomMovementExtent; // 0x400
	float _fleeingDistanceFromEnemy; // 0x40c
	float _fleeingPathLength; // 0x410
	float _returnToNormalBehaviorDistance; // 0x414
	float _schoolInternalMovementRelevancyDistanceSquared; // 0x418
	float _fadeInTime; // 0x42c
	float _fadeOutTime; // 0x434
};

struct AKillBoxC4SpawnPoint : AActor {
	TArray<AItem*> _possibleSpawnClasses; // 0x220
};

struct UMetabolismNutritionPanel : UUserWidget {
	UMetabolismRadialProgressBar* _rpb_Calories; // 0x260
	UMetabolismRadialProgressBar* _rpb_Water; // 0x268
};

struct USedentaryNPCBackgroundInteraction : UObject {
	EBackgroundInteractionType _backgroundInteractionType; // 0x28
	bool _canEverTick; // 0x29
	FFloatRange _newBackgroundInteractionInterval; // 0x2c
	TArray<UAnimMontage*> _animationVariationsBegin; // 0x48
	TArray<UAnimMontage*> _animationVariationsTick; // 0x58
	TArray<UAnimMontage*> _animationVariationsEnd; // 0x68
	TArray<UAnimMontage*> _animationVariationsOneShot; // 0x78
	TArray<UAkAudioEvent*> _soundVariationsBegin; // 0x88
	TArray<UAkAudioEvent*> _soundVariationsTick; // 0x98
	TArray<UAkAudioEvent*> _soundVariationsEnd; // 0xa8
	TArray<UAkAudioEvent*> _soundVariationsOneShot; // 0xb8
};

struct A1H_Little_Spade_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule1; // 0x7f0
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f8
};

struct UAsyncActionLoadPrimaryAsset : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate completed; // 0x78
};

struct UUI_Objective_C : UObjectivesWidget {
	UImage* _icon; // 0x2c0
};

struct ABP_WeaponBullet_ExplosiveArrow_Metal_C : AProjectileExplosiveArrow {
	UParticleSystemComponent* P_ArrowTrail; // 0x458
};

struct UUI_LockpickingMinigame_C : ULockpickingWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b8
	UWidgetAnimation* ShowFailure; // 0x2c0
	UWidgetAnimation* BlurWaitingForPlayer; // 0x2c8
	UWidgetAnimation* ShowSuccess; // 0x2d0
	UWidgetAnimation* InfoFade; // 0x2d8
	UImage* _infiniteLockpicks; // 0x2e0
	UImage* _infiniteScrewdrivers; // 0x2e8
	UImage* _lockDifficultyHardImage; // 0x2f0
	UImage* _lockDifficultyMediumImage; // 0x2f8
	UImage* _lockDifficultyNormalImage; // 0x300
	UImage* _lockDifficultyWarning; // 0x308
	UImage* BlackOverlay; // 0x310
	UTextBlock* FamePointsText; // 0x318
	UImage* Image_1; // 0x320
	UImage* Image_2; // 0x328
	UImage* Image_3; // 0x330
	UImage* Image_11; // 0x338
	UImage* Image_21; // 0x340
	UTextBlock* LockpicksCountText; // 0x348
	UImage* progress; // 0x350
	UTextBlock* RemainingTimeText; // 0x358
	UTextBlock* TensionToolCountText; // 0x360
	UImage* TextBackground; // 0x368
	UTextBlock* TextBlock_1; // 0x370
};

struct USimpleConstructionScript : UObject {
	TArray<USCS_Node*> RootNodes; // 0x28
	TArray<USCS_Node*> AllNodes; // 0x38
	USCS_Node* DefaultSceneRootNode; // 0x48
};

struct UUdpMessagingSettings : UObject {
	bool EnabledByDefault; // 0x28
	bool EnableTransport; // 0x29
	bool bAutoRepair; // 0x2a
	bool bStopServiceWhenAppDeactivates; // 0x2b
	FString UnicastEndpoint; // 0x30
	FString MulticastEndpoint; // 0x40
	EUdpMessageFormat MessageFormat; // 0x50
	char MulticastTimeToLive; // 0x51
	TArray<FString> StaticEndpoints; // 0x58
	bool EnableTunnel; // 0x68
	FString TunnelUnicastEndpoint; // 0x70
	FString TunnelMulticastEndpoint; // 0x80
	TArray<FString> RemoteTunnelEndpoints; // 0x90
};

struct UGroomComponent : UMeshComponent {
	UGroomAsset* GroomAsset; // 0x478
	TArray<UNiagaraComponent*> NiagaraComponents; // 0x480
	USkeletalMesh* SourceSkeletalMesh; // 0x490
	UGroomBindingAsset* BindingAsset; // 0x498
	UPhysicsAsset* PhysicsAsset; // 0x4a0
	UMaterialInterface* Strands_DebugMaterial; // 0x4a8
	UMaterialInterface* Strands_DefaultMaterial; // 0x4b0
	UMaterialInterface* Cards_DefaultMaterial; // 0x4b8
	UMaterialInterface* Meshes_DefaultMaterial; // 0x4c0
	UNiagaraSystem* AngularSpringsSystem; // 0x4c8
	UNiagaraSystem* CosseratRodsSystem; // 0x4d0
	FString AttachmentName; // 0x4d8
	TArray<FHairGroupDesc> GroomGroupsDesc; // 0x530
};

struct UMinimizableWidget_C : UWindowsContent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b8
	UWidgetAnimation* HeaderImageAnimation; // 0x2c0
	UBorder* Border_2; // 0x2c8
	UImage* HeaderImage; // 0x2d0
	UImage* MaximizeImage; // 0x2d8
	UImage* MinimizeImage; // 0x2e0
	UNamedSlot* NamedSlotContent; // 0x2e8
	UTextBlock* TitleTextBlock; // 0x2f0
	FMulticastInlineDelegate WidgetSizeChangedEventDispatcher; // 0x2f8
	bool isAlarmOn; // 0x308
	FMulticastInlineDelegate NotifyAlarmSwitchedOnEventDispatcher; // 0x310
	FMulticastInlineDelegate NotifyAlarmSwitchedOffEventDispatcher; // 0x320
	FVector2D _minimizableWidgetSize; // 0x330
	FMulticastInlineDelegate NotifyMinimizableWidgetSizeChangedEventDispatcher; // 0x338
	bool _shouldRefreshSize; // 0x348
	bool isMinimized; // 0x349
};

struct AWeatherAmbientSounds : AActor {
	float WeatherRTPCsUpdateInterval; // 0x220
	float TimeOfDayRTPCUpdateInterval; // 0x224
	float TimeOfDayRTPCInterpolationSpeed; // 0x228
	UAkAudioEvent* RainAudioEvent; // 0x230
	UAkAudioEvent* WindAudioEvent; // 0x238
};

struct UMovieSceneCameraAnimSection : UMovieSceneSection {
	FMovieSceneCameraAnimSectionData AnimData; // 0xe8
	UCameraAnim* CameraAnim; // 0x108
	float PlayRate; // 0x110
	float PlayScale; // 0x114
	float BlendInTime; // 0x118
	float BlendOutTime; // 0x11c
	bool bLooping; // 0x120
};

struct UUI_TabModeSwitcher_C : UTabModeSwitcherWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UImage* Arc1; // 0x288
	UImage* Arc2; // 0x290
	UImage* Arc3; // 0x298
	UImage* Center; // 0x2a0
	UTextBlock* ModeText; // 0x2a8
	int32_t _hoveredArcIndex; // 0x2b0
	ETabMode _selectedTabMode; // 0x2b4
};

struct UNiagaraDataInterfaceVolumeTexture : UNiagaraDataInterface {
	UVolumeTexture* Texture; // 0x38
};

struct UVectorFieldComponent : UPrimitiveComponent {
	UVectorField* VectorField; // 0x448
	float Intensity; // 0x450
	float Tightness; // 0x454
	char bPreviewVectorField : 1; // 0x458
};

struct UFortificationComponent : UStaticMeshComponent {
	UParticleSystem* _destructionParticles; // 0x4e0
	UAkAudioEvent* _destructionAudio; // 0x4e8
	ABuilding* _parentBuilding; // 0x4f0
	int32_t _markerIndex; // 0x4f8
	float _health; // 0x4fc
	float _collisionEnergyResistance; // 0x500
	float _explosionResistance; // 0x504
	float _hardness; // 0x508
};

struct UBTTask_RunBehaviorDynamic : UBTTaskNode {
	FGameplayTag InjectionTag; // 0x70
	UBehaviorTree* DefaultBehaviorAsset; // 0x78
	UBehaviorTree* BehaviorAsset; // 0x80
};

struct AConZCameraManager : APlayerCameraManager {
	float _introCinematicDuration; // 0x27cc
};

struct UUI_WaypointWidget_C : UWaypointWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x310
	UImage* Accent; // 0x318
	UImage* Background; // 0x320
	UImage* Bar; // 0x328
	UImage* BarBG; // 0x330
	UImage* BigPointer; // 0x338
	UTextBlock* Distance; // 0x340
	UImage* Emphasis; // 0x348
	UImage* Icon; // 0x350
	UTextBlock* Label; // 0x358
	UImage* SmallPointer; // 0x360
};

struct ADeathmatchGameEvent : AGameEventBase {
	FDeathmatchParameters _deathmatchParameters; // 0x598
};

struct APracticeLockpickingItem : AItem {
	TArray<FLockData> _possibleLocks; // 0x7c8
};

struct UForceFeedbackAttenuation : UObject {
	FForceFeedbackAttenuationSettings Attenuation; // 0x28
};

struct UPrisonerUIDataController : UObject {
	UPrisonerBodySimulationUIController* BodySimulationUIController; // 0x28
	UPrisonerSkillComponentUIController* SkillComponentUIController; // 0x30
	UPrisonerTreatmentUIController* TreatmentUIController; // 0x38
	UPrisonerUIData* _prisonerUIData; // 0x58
	UPrisonerUITooltipCache* _tooltipCache; // 0x60
};

struct UAnimNotify_PlayParticleEffect : UAnimNotify {
	UParticleSystem* PSTemplate; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct ADropZoneKey : AItem {
	USphereComponent* SphereComponent; // 0x7c0
	ADropZoneGameEvent* _gameEvent; // 0x7c8
};

struct ACameraRig_Rail : AActor {
	float CurrentPositionOnRail; // 0x220
	bool bLockOrientationToRail; // 0x224
	USceneComponent* TransformComponent; // 0x228
	USplineComponent* RailSplineComponent; // 0x230
	USceneComponent* RailCameraMount; // 0x238
};

struct ACTFGameEvent : AGameEventBase {
	ACTFFlag* FlagClass; // 0x598
	ACTFBase* CaptureBaseClass; // 0x5a0
	ACTFFlagStand* FlagStandClass; // 0x5a8
	UTexture2D* FlagIconTexture; // 0x5b0
	UTexture2D* FlagAccentTexture; // 0x5b8
	UTexture2D* BaseIconTexture; // 0x5c0
	UTexture2D* BaseAccentTexture; // 0x5c8
	UTexture2D* EmptyBaseIconTexture; // 0x5d0
	UTexture2D* EmptyBaseAccentTexture; // 0x5d8
	FLinearColor TeamColorA; // 0x5e0
	FLinearColor TeamColorB; // 0x5f0
	UAkAudioEvent* BlueTeamPickedUpFlagAnnouncement; // 0x600
	UAkAudioEvent* BlueTeamCapturedFlagAnnouncement; // 0x608
	UAkAudioEvent* BlueTeamFlagDroppedAnnouncement; // 0x610
	UAkAudioEvent* BlueTeamFlagReturnedAnnouncement; // 0x618
	UAkAudioEvent* RedTeamPickedUpFlagAnnouncement; // 0x620
	UAkAudioEvent* RedTeamCapturedFlagAnnouncement; // 0x628
	UAkAudioEvent* RedTeamFlagDroppedAnnouncement; // 0x630
	UAkAudioEvent* RedTeamFlagReturnedAnnouncement; // 0x638
	FCTFParameters _CTFParameters; // 0x640
	ACTFFlag* _flagA; // 0x670
	ACTFFlag* _flagB; // 0x678
	ACTFBase* _baseA; // 0x680
	ACTFBase* _baseB; // 0x688
};

struct UDemolitionSkill : UDexteritySkill {
	FDemolitionSkillParametersPerSkillLevel NoSkillParameters; // 0xa8
	FDemolitionSkillParametersPerSkillLevel BasicSkillParameters; // 0x120
	FDemolitionSkillParametersPerSkillLevel MediumSkillParameters; // 0x198
	FDemolitionSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x210
	FDemolitionSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x288
};

struct UPrisonerBodyCondition_BleedingInjury : UPrisonerBodyCondition_Injury {
	FRuntimeFloatCurve _selfStabilizationDurationVsSeverity; // 0xa8
	FRuntimeFloatCurve _stabilizationDurationVsBloodLossRatio; // 0x130
	float _stabilizationDurationBiasVsSkillLevel[0x5]; // 0x1b8
	FRuntimeFloatCurve _destabilizationActionDifficultyRatioVsSeverity; // 0x1d0
	UNotificationDescription* _destabilizationNotification; // 0x258
	float _destabilizationNotificationCooldown; // 0x260
	FRuntimeFloatCurve _recoveryDurationVsBloodLossRatio; // 0x268
	float _baseTreatmentDuration; // 0x2f0
	FFloatRange _treatmentDurationLimits; // 0x2f4
	float _stopBleedingBaseExperienceGainVsSkillLevel[0x5]; // 0x304
	UPrisonerBodySymptom_Bleeding* _bleedingSymptomClass; // 0x318
	UPrisonerBodySymptom_Pain* _painSymptomClass; // 0x320
	FRuntimeFloatCurve _painIntensityVsSeverity; // 0x328
	float _limpingIntensityPerLegsDamageRatio; // 0x3b0
	float _legsBleedingSeverityThresholdToLimp; // 0x3b4
	EPrisonerBodyMuscleGroup _bodyPart; // 0x3b8
	EPrisonerBodyMuscleGroup _muscleGroup; // 0x3b9
	float _damage; // 0x410
	float _damageToRecover; // 0x414
	float _bloodLoss; // 0x418
	float _bloodLossToRecover; // 0x41c
	float _bloodLossRate; // 0x420
	float _bloodLossRateUntreated; // 0x424
	float _treatmentProgress; // 0x428
	float _stabilizationDurationReductionByItems; // 0x42c
	ESkillLevel _physicianSkillLevel; // 0x430
	EPrisonerBodyConditionState _state; // 0x431
	float _timerElapsedTime; // 0x43c
	float _timerDuration; // 0x440
	UPrisonerBodySymptomCause_Bleeding* _bleedingSymptomCause; // 0x448
	UPrisonerBodySymptomCause_Pain* _painSymptomCause; // 0x450
};

struct UChatSuggestionWidget : UDesignableUserWidget {
	UBorder* _border; // 0x278
	UChatText* _textBlock; // 0x280
	FLinearColor _defaultColor; // 0x288
	FLinearColor _highlightedColor; // 0x298
};

struct UDisplaceMeshTextureMapProperties : UInteractiveToolPropertySet {
	UTexture2D* DisplacementMap; // 0x60
};

struct USoundBase : UObject {
	USoundClass* SoundClassObject; // 0x30
	char bDebug : 1; // 0x38
	char bOverrideConcurrency : 1; // 0x38
	char bOutputToBusOnly : 1; // 0x38
	char bHasDelayNode : 1; // 0x38
	char bHasConcatenatorNode : 1; // 0x38
	char bBypassVolumeScaleForPriority : 1; // 0x38
	EVirtualizationMode VirtualizationMode; // 0x39
	TSet<USoundConcurrency*> ConcurrencySet; // 0x90
	FSoundConcurrencySettings ConcurrencyOverrides; // 0xe0
	float Duration; // 0x108
	float MaxDistance; // 0x10c
	float TotalSamples; // 0x110
	float Priority; // 0x114
	USoundAttenuation* AttenuationSettings; // 0x118
	FSoundModulationDefaultRoutingSettings ModulationSettings; // 0x120
	USoundSubmixBase* SoundSubmixObject; // 0x168
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x170
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x180
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x188
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x198
	TArray<UAssetUserData*> AssetUserData; // 0x1a8
};

struct AItemSpawnerGroup : AActor {
	UItemSpawnerComponent* SpawnerComponent; // 0x220
};

struct UToFloatField : UFieldNodeFloat {
	UFieldNodeInt* IntField; // 0xb0
};

struct UUI_Item2VicinityContainer_C : UVicinityContainerRowItemWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x448
	UImage* AmmoIcon; // 0x450
	UImage* BackgroundBorder; // 0x458
	UImage* BackgroundHighlight; // 0x460
	UImage* Image_1; // 0x468
	UImage* Image_3; // 0x470
	UImage* Image_10; // 0x478
	UTextBlock* LowerLeftTextFirst; // 0x480
	UTextBlock* LowerLeftTextSecond; // 0x488
	UTextBlock* LowerRightText; // 0x490
	UOverlay* Overlay_5; // 0x498
	UTextBlock* PlayerGivenName; // 0x4a0
	UProgressBar* ProgressBarDurability; // 0x4a8
	UProgressBar* ProgressBarLeftFirst; // 0x4b0
	UProgressBar* ProgressBarLeftSecond; // 0x4b8
	UProgressBar* ProgressBarUses; // 0x4c0
	USizeBox* SizeBox_1; // 0x4c8
	UTextBlock* TextBlock_1; // 0x4d0
	UTextBlock* TextBlock_2; // 0x4d8
	UTextBlock* TextBlock_21; // 0x4e0
	UUI_Border_C* UI_Border; // 0x4e8
	UUI_Border_C* UI_Border_C_1; // 0x4f0
	UImage* UpperLeftIcon; // 0x4f8
	UTextBlock* UpperLeftText; // 0x500
	UTextBlock* UpperRightText; // 0x508
};

struct UAkItemProperties : UWidget {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnPropertyDragged; // 0x118
};

struct ULandscapeMaterialInstanceConstant : UMaterialInstanceConstant {
	TArray<FLandscapeMaterialTextureStreamingInfo> TextureStreamingInfo; // 0x368
	char bIsLayerThumbnail : 1; // 0x378
	char bDisableTessellation : 1; // 0x378
	char bMobile : 1; // 0x378
	char bEditorToolUsage : 1; // 0x378
};

struct UInterpTrackInstFloatParticleParam : UInterpTrackInst {
	float ResetFloat; // 0x28
};

struct UUMGSequenceTickManager : UObject {
	TSet<TWeakObjectPtr<UUserWidget>> WeakUserWidgets; // 0x28
	UMovieSceneEntitySystemLinker* Linker; // 0x78
};

struct UTrashMenuButton : UDesignableUserWidget {
	UButton* MainButton; // 0x278
};

struct UMatineeCameraShake : UCameraShakeBase {
	float OscillationDuration; // 0x98
	float OscillationBlendInTime; // 0x9c
	float OscillationBlendOutTime; // 0xa0
	FROscillator RotOscillation; // 0xa4
	FVOscillator LocOscillation; // 0xc8
	FFOscillator FOVOscillation; // 0xec
	float AnimPlayRate; // 0xf8
	float AnimScale; // 0xfc
	float AnimBlendInTime; // 0x100
	float AnimBlendOutTime; // 0x104
	float RandomAnimSegmentDuration; // 0x108
	UCameraAnim* Anim; // 0x110
	char bRandomAnimSegment : 1; // 0x118
	float OscillatorTimeRemaining; // 0x11c
	UCameraAnimInst* AnimInst; // 0x120
};

struct USoundNodeDoppler : USoundNode {
	float DopplerIntensity; // 0x48
	bool bUseSmoothing; // 0x4c
	float SmoothingInterpSpeed; // 0x50
};

struct UClothConfigNv : UClothConfigCommon {
	EClothingWindMethodNv ClothingWindMethod; // 0x28
	FClothConstraintSetupNv VerticalConstraint; // 0x2c
	FClothConstraintSetupNv HorizontalConstraint; // 0x3c
	FClothConstraintSetupNv BendConstraint; // 0x4c
	FClothConstraintSetupNv ShearConstraint; // 0x5c
	float SelfCollisionRadius; // 0x6c
	float SelfCollisionStiffness; // 0x70
	float SelfCollisionCullScale; // 0x74
	FVector Damping; // 0x78
	float Friction; // 0x84
	float WindDragCoefficient; // 0x88
	float WindLiftCoefficient; // 0x8c
	float WindIntensityScale; // 0x90
	FVector LinearDrag; // 0x94
	FVector AngularDrag; // 0xa0
	FVector LinearInertiaScale; // 0xac
	FVector AngularInertiaScale; // 0xb8
	FVector CentrifugalInertiaScale; // 0xc4
	float SolverFrequency; // 0xd0
	float StiffnessFrequency; // 0xd4
	float GravityScale; // 0xd8
	FVector GravityOverride; // 0xdc
	bool bUseGravityOverride; // 0xe8
	float TetherStiffness; // 0xec
	float TetherLimit; // 0xf0
	float CollisionThickness; // 0xf4
	float AnimDriveSpringStiffness; // 0xf8
	float AnimDriveDamperStiffness; // 0xfc
	EClothingWindMethod_Legacy WindMethod; // 0x100
	FClothConstraintSetup_Legacy VerticalConstraintConfig; // 0x104
	FClothConstraintSetup_Legacy HorizontalConstraintConfig; // 0x114
	FClothConstraintSetup_Legacy BendConstraintConfig; // 0x124
	FClothConstraintSetup_Legacy ShearConstraintConfig; // 0x134
};

struct UInterpTrackInstVectorMaterialParam : UInterpTrackInst {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<FVector> ResetVectors; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackVectorMaterialParam* InstancedTrack; // 0x58
};

struct UMissionRewardWidget : UUserWidget {
	UImage* _rewardImage; // 0x260
	UTextBlock* _rewardAmount; // 0x268
};

struct UHudWidget : UDesignableUserWidget {
	UQuickAccessBarWidget* _quickAccessBar; // 0x278
	UThrowingQuickAccessItemWidget* _throwingAccess; // 0x280
	UQuickAccessItemWidget* _handQuickAccessItemWidget; // 0x288
	UVicinityPanel3* _vicinityPanel; // 0x290
	UVicinityContainer3* _vicinityContainer; // 0x298
	UChatWidget* _chatWidget; // 0x2a0
	bool _chatOpen; // 0x2a8
	UObjectivesContainerWidget* _objectivesContainer; // 0x2c8
	UMissionResult* _missionResultWidget; // 0x2d0
	UDialogueContainerWidget* _dialogueContainerWidget; // 0x2d8
	UJournalPanelWidget* _journalPanelWidget; // 0x2e0
	USquadPanelWidget* _squadPanelWidget; // 0x2e8
	UHandPanel3* _handPanel; // 0x2f0
	UScreenSpaceHealthWidget* _screenSpaceHealthWidget; // 0x2f8
	UResourceIndicatorWidget* _nightVisionGogglesBatteryWidget; // 0x300
	UShotsFiredTrackerWidget* _shotsFiredTrackerWidget; // 0x308
	UFishingContainerWidget* _fishingContainerWidget; // 0x310
	UGrapplingWidget* _grapplingWidget; // 0x318
	UMusicPlayerDisplayWidget* _musicPlayerDisplayWidget; // 0x320
	UFishingTrophyWidget* _fishingTrophyWidget; // 0x328
	UMetabolismLeftPanel* _metabolismLeftPanel; // 0x330
	UMetabolismRightPanel* _metabolismRightPanel; // 0x338
	UMetabolismTreatmentItemsPanel* _metabolismTreatmentItemsPanel; // 0x340
	UVehicleHudWidget* _vehicleHUD; // 0x348
	UCanvasPanel* _chatCanvas; // 0x350
	UWidgetSwitcher* _masterSwitcher; // 0x358
	UMasterMenu* _masterMenu; // 0x360
	UPanelWidget* _masterHUD; // 0x368
};

struct UStaticMeshSocket : UObject {
	FName SocketName; // 0x28
	FVector RelativeLocation; // 0x30
	FRotator RelativeRotation; // 0x3c
	FVector RelativeScale; // 0x48
	FString Tag; // 0x58
};

struct UDatasmithSceneComponentTemplate : UDatasmithObjectTemplate {
	FTransform RelativeTransform; // 0x30
	EComponentMobility Mobility; // 0x60
	TSoftObjectPtr<USceneComponent> AttachParent; // 0x68
	bool bVisible; // 0x90
	TSet<FName> Tags; // 0x98
};

struct UPrisonerBodySymptom_Thirst : UPrisonerBodySymptom {
	FRuntimeFloatCurve _severityVsHydrationRatio; // 0xb8
};

struct URadioComponent : UAkComponent {
	float _volume; // 0x3d8
	int32_t _currentStationIndex; // 0x3dc
	bool _isHiFi; // 0x3e4
	bool _isReachableFromSkyWhenMounted; // 0x3e5
	float _attenuationScale; // 0x3e8
	bool _turnedOn; // 0x3ec
};

struct ABP_MenuPlayerController_C : AMenuPlayerController {
	FPointerToUberGraphFrame UberGraphFrame; // 0x570
	APrisoner* Prisoner; // 0x578
	bool _isMouseDown; // 0x580
	float PrisonerRotationSpeed; // 0x584
};

struct UAnimNotify_WeaponEjectCasing : UAnimNotify {
	FName EmitterSocketName; // 0x38
	bool AttachEmitter; // 0x40
};

struct UVoxelBlendMeshesTool : UBaseVoxelTool {
	UVoxelBlendMeshesToolProperties* BlendProperties; // 0x108
};

struct UMotionTriggerComponent : UTriggerComponent {
	FVector TriggerForwardVector; // 0x4d0
	float TriggerAngle; // 0x4dc
	float MotionDetectionSensitivity; // 0x4e0
	float MotionDetectionDepletionSpeed; // 0x4e4
	float _motionDetector; // 0x4e8
	UAkAudioEvent* _motionDetectorStartSound; // 0x4f0
	UAkAudioEvent* _motionDetectorEndSound; // 0x4f8
};

struct UGameNetworkManagerSettings : UObject {
	int32_t MinDynamicBandwidth; // 0x28
	int32_t MaxDynamicBandwidth; // 0x2c
	int32_t TotalNetBandwidth; // 0x30
	int32_t BadPingThreshold; // 0x34
	char bIsStandbyCheckingEnabled : 1; // 0x38
	float StandbyRxCheatTime; // 0x3c
	float StandbyTxCheatTime; // 0x40
	float PercentMissingForRxStandby; // 0x44
	float PercentMissingForTxStandby; // 0x48
	float PercentForBadPing; // 0x4c
	float JoinInProgressStandbyWaitTime; // 0x50
};

struct ALightmassPortal : AActor {
	ULightmassPortalComponent* PortalComponent; // 0x220
};

struct UQuitMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct ALockpickingMinigame : AMinigame {
	UStaticMeshComponent* _outerRing; // 0x2e0
	UStaticMeshComponent* _movableRing; // 0x2e8
	USceneComponent* _lockpickingSetAnchor; // 0x2f0
	USceneComponent* _lockpickManipulator; // 0x2f8
	USceneComponent* _lockpickAnchor; // 0x300
	UStaticMeshComponent* _lockpick; // 0x308
	USceneComponent* _tensionToolManipulator; // 0x310
	USceneComponent* _tensionToolAnchor; // 0x318
	UStaticMeshComponent* _tensionTool; // 0x320
	FVector _zoomStartLocation; // 0x328
	FVector _zoomEndLocation; // 0x334
	FTransform _protectionParticlesTransform; // 0x340
	UCurveFloat* _zoomCurve; // 0x370
	UCurveFloat* _fadeCurve; // 0x378
	float _pickBreakingMultiplierForMediumDifficulty; // 0x380
	float _pickBreakingMultiplierForHardDifficulty; // 0x384
	UAkAudioEvent* _lockpickingLockpickMovementStartAudioEvent; // 0x3b8
	UAkAudioEvent* _lockpickingLockpickMovementStopAudioEvent; // 0x3c0
	UAkAudioEvent* _lockpickingLockTensionStartAudioEvent; // 0x3c8
	UAkAudioEvent* _lockpickingLockTensionStopAudioEvent; // 0x3d0
	UAkAudioEvent* _lockpickingLockTurningStartAudioEvent; // 0x3d8
	UAkAudioEvent* _lockpickingLockTurningStopAudioEvent; // 0x3e0
	UAkAudioEvent* _lockpickingSuccessAudioEvent; // 0x3e8
	UAkAudioEvent* _lockpickingFailedAudioEvent; // 0x3f0
	UAkAudioEvent* _lockpickingResetAudioEvent; // 0x3f8
	float _rotatingStartAngle; // 0x404
	float _duration; // 0x408
	float _angleTolerance; // 0x40c
	float _pickBreakingMultiplier; // 0x410
};

struct AMission : AActor {
	AObjective* _activeObjective; // 0x2b0
	TArray<AObjective*> _missionObjectiveClasses; // 0x2b8
	TMap<FString, AObjective*> _missionObjectiveAssets; // 0x2c8
	TArray<AObjective*> _missionObjectives; // 0x318
	FText _missionName; // 0x328
	FText _missionCategory; // 0x340
	FText _missionDescription; // 0x358
	EMissionType _missionType; // 0x370
	int32_t _missionOrdinalNumber; // 0x374
	EMissionState _missionState; // 0x378
	EFaction _missionFaction; // 0x379
	TSoftObjectPtr<UWorld> _missionLevel; // 0x380
	FMissionReward _missionRewards; // 0x3a8
	UTexture2D* _missionBannerImage; // 0x3c0
	TArray<TSoftObjectPtr<ALocationTrigger>> _missionStartingLocations; // 0x3c8
	int32_t _intendedNumberOfPlayers; // 0x3d8
	float _missionCooldownTime; // 0x3dc
	AMissionItemSpawner* _missionItemSpawnerClass; // 0x3e8
	TArray<FDialogueInfo> _missionIntroDialogues; // 0x3f0
	TArray<FDialogueInfo> _missionOutroSuccessDialogues; // 0x400
	TArray<FDialogueInfo> _missionOutroFailDialogues; // 0x410
	TArray<FDialogueInfo> _missionOutroBelatedDialogues; // 0x420
	bool _canInterruptDialogue; // 0x430
};

struct AMissionManager : AActor {
	TMap<AMission*, FMissionData> _mainStoryMissions; // 0x240
	TMap<AMission*, FMissionData> _sideStoryMissions; // 0x290
	TMap<AMission*, FMissionData> _tutorialMissions; // 0x2e0
	bool _tutorialEnabled; // 0x34b
	float _tutorialDelay; // 0x34c
	AMission* _activeMainStoryMission; // 0x358
	AMission* _activeSideStoryMission; // 0x360
	AMission* _activeTutorialMission; // 0x368
	AMission* _availableMission; // 0x370
	EMissionManagerState _missionManagerState; // 0x378
};

struct UScrollBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct ADatasmithImportedSequencesActor : AActor {
	TArray<ULevelSequence*> ImportedSequences; // 0x220
};

struct UThieverySkill : UDexteritySkill {
	UCurveFloat* _lockpickingDurationModifierCurve; // 0xa8
	UCurveFloat* _lockpickingStartAngleModifierCurve; // 0xb0
	UCurveFloat* _lockpickingAngleModifierCurve; // 0xb8
	UCurveFloat* _lockpickingDurabilityModifierCurve; // 0xc0
};

struct ACharacter : APawn {
	USkeletalMeshComponent* Mesh; // 0x280
	UCharacterMovementComponent* CharacterMovement; // 0x288
	UCapsuleComponent* CapsuleComponent; // 0x290
	FBasedMovementInfo BasedMovement; // 0x298
	FBasedMovementInfo ReplicatedBasedMovement; // 0x2c8
	float AnimRootMotionTranslationScale; // 0x2f8
	FVector BaseTranslationOffset; // 0x2fc
	FQuat BaseRotationOffset; // 0x310
	float ReplicatedServerLastTransformUpdateTimeStamp; // 0x320
	float ReplayLastTransformUpdateTimeStamp; // 0x324
	char ReplicatedMovementMode; // 0x328
	bool bInBaseReplication; // 0x329
	float CrouchedEyeHeight; // 0x32c
	char bIsCrouched : 1; // 0x330
	uint32_t ReplicatedCrouchedStateAndCapsuleHalfHeight; // 0x334
	char bProxyIsJumpForceApplied : 1; // 0x338
	char bPressedJump : 1; // 0x338
	char bClientUpdating : 1; // 0x338
	char bClientWasFalling : 1; // 0x338
	char bClientResimulateRootMotion : 1; // 0x338
	char bClientResimulateRootMotionSources : 1; // 0x338
	char bSimGravityDisabled : 1; // 0x338
	char bClientCheckEncroachmentOnNetUpdate : 1; // 0x338
	char bServerMoveIgnoreRootMotion : 1; // 0x339
	char bWasJumping : 1; // 0x339
	float JumpKeyHoldTime; // 0x33c
	float JumpForceTimeRemaining; // 0x340
	float ProxyJumpForceStartedTime; // 0x344
	float JumpMaxHoldTime; // 0x348
	int32_t JumpMaxCount; // 0x34c
	int32_t JumpCurrentCount; // 0x350
	int32_t JumpCurrentCountPreJump; // 0x354
	FMulticastInlineDelegate OnReachedJumpApex; // 0x360
	FMulticastInlineDelegate MovementModeChangedDelegate; // 0x380
	FMulticastInlineDelegate OnCharacterMovementUpdated; // 0x390
	FRootMotionSourceGroup SavedRootMotion; // 0x3a0
	FRootMotionMovementParams ClientRootMotionParams; // 0x3e0
	TArray<FSimulatedRootMotionReplicatedMove> RootMotionRepMoves; // 0x420
	FRepRootMotionMontage RepRootMotion; // 0x430
};

struct UModularTooltipElementData_AffectedBy : UModularTooltipElementData {
	UModularTooltipElementData* Affect; // 0x40
};

struct UAdminCommand_ListPrimaryAssets : UAdminCommand {
	FPrimaryAssetType _primaryAssetType; // 0x80
	TSet<FPrimaryAssetId> _primaryAssetsToExclude; // 0x88
};

struct UChildConnection : UNetConnection {
	UNetConnection* Parent; // 0x1af0
};

struct UPhysicsSettingsCore : UDeveloperSettings {
	float DefaultGravityZ; // 0x38
	float DefaultTerminalVelocity; // 0x3c
	float DefaultFluidFriction; // 0x40
	int32_t SimulateScratchMemorySize; // 0x44
	int32_t RagdollAggregateThreshold; // 0x48
	float TriangleMeshTriangleMinAreaThreshold; // 0x4c
	bool bEnableShapeSharing; // 0x50
	bool bEnablePCM; // 0x51
	bool bEnableStabilization; // 0x52
	bool bWarnMissingLocks; // 0x53
	bool bEnable2DPhysics; // 0x54
	bool bDefaultHasComplexCollision; // 0x55
	float BounceThresholdVelocity; // 0x58
	EFrictionCombineMode FrictionCombineMode; // 0x5c
	EFrictionCombineMode RestitutionCombineMode; // 0x5d
	float MaxAngularVelocity; // 0x60
	float MaxDepenetrationVelocity; // 0x64
	float ContactOffsetMultiplier; // 0x68
	float MinContactOffset; // 0x6c
	float MaxContactOffset; // 0x70
	bool bSimulateSkeletalMeshOnDedicatedServer; // 0x74
	ECollisionTraceFlag DefaultShapeComplexity; // 0x75
	FChaosSolverConfiguration SolverOptions; // 0x78
};

struct UMeshAttributePaintToolProperties : UInteractiveToolPropertySet {
	TArray<FName> Attributes; // 0x60
	int32_t SelectedAttribute; // 0x70
	FString AttributeName; // 0x78
};

struct URemoveOccludedTrianglesOperatorFactory : UObject {
	URemoveOccludedTrianglesTool* Tool; // 0x30
};

struct ANiagaraPreviewGrid : AActor {
	UNiagaraSystem* System; // 0x220
	ENiagaraPreviewGridResetMode ResetMode; // 0x228
	UNiagaraPreviewAxis* PreviewAxisX; // 0x230
	UNiagaraPreviewAxis* PreviewAxisY; // 0x238
	ANiagaraPreviewBase* PreviewClass; // 0x240
	float SpacingX; // 0x248
	float SpacingY; // 0x24c
	int32_t NumX; // 0x250
	int32_t NumY; // 0x254
	TArray<UChildActorComponent*> PreviewComponents; // 0x258
};

struct UPhotoModeMainPanel : UUserWidget {
	UPanelWidget* _mainPanelContainer; // 0x260
	UTabGroup* _coreMenuTabButtons; // 0x268
	UWidgetSwitcher* _coreMenu; // 0x270
	UOverlay* _inputLegend; // 0x278
	UImage* _gridLine0; // 0x280
	UImage* _gridLine1; // 0x288
	UImage* _gridLine2; // 0x290
	UImage* _gridLine3; // 0x298
	UImage* _frameDisplay; // 0x2a0
	UImage* _logoDisplay; // 0x2a8
	FText _cameraTabTitle; // 0x2b0
	FText _effectsTabTitle; // 0x2c8
	FText _frameTabTitle; // 0x2e0
	FText _bodyTabTitle; // 0x2f8
	TArray<TSoftObjectPtr<UTexture>> _frames; // 0x310
	UTabButton* _buttonClass; // 0x328
	UCarouselWithLabel* _cameraMode; // 0x330
	USliderWithLabelAndNumber* _cameraTilt; // 0x338
	USliderWithLabelAndNumber* _fieldOfView; // 0x340
	USliderWithLabelAndNumber* _depthOfField; // 0x348
	USliderWithLabelAndNumber* _focusDistance; // 0x350
	USliderWithLabelAndNumber* _selfieLight; // 0x358
	USliderWithLabelAndNumber* _exposure; // 0x360
	USliderWithLabelAndNumber* _contrast; // 0x368
	USliderWithLabelAndNumber* _vignette; // 0x370
	USliderWithLabelAndNumber* _chromaticAberration; // 0x378
	USliderWithLabelAndNumber* _grain; // 0x380
	USliderWithLabelAndNumber* _time; // 0x388
	UCarouselWithLabel* _frame; // 0x390
	UCarouselWithLabel* _logo; // 0x398
	UCarouselWithLabel* _aspectRatio; // 0x3a0
	UCarouselWithLabel* _lookAtCamera; // 0x3a8
	UCarouselWithLabel* _upperBodyPose; // 0x3b0
	UCarouselWithLabel* _lowerBodyPose; // 0x3b8
	UTextBlock* _selfieModeNote; // 0x3c0
};

struct UMaterialExpressionLandscapeLayerSwitch : UMaterialExpression {
	FExpressionInput LayerUsed; // 0x40
	FExpressionInput LayerNotUsed; // 0x54
	FName ParameterName; // 0x68
	char PreviewUsed : 1; // 0x70
	FGuid ExpressionGUID; // 0x74
};

struct ABP_WeaponScope_M82A1_C : AWeaponAttachmentScope {
	UDummyCollisionCapsule* ScopeViewCollision; // 0x950
};

struct UBlackboardKeyType_Enum : UBlackboardKeyType {
	UEnum* EnumType; // 0x30
	FString EnumName; // 0x38
	char bIsEnumNameValid : 1; // 0x48
};

struct ABP_Survival_Blueprints_PlaceShelter_Objective_C : ABlueprintableItemObjective {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	USceneComponent* DefaultSceneRoot; // 0x370
	UDialogueData* DialogueData; // 0x378
	AMissionDialogueManager* DialogueManager; // 0x380
};

struct UMovieSceneIntegerSection : UMovieSceneSection {
	FMovieSceneIntegerChannel IntegerCurve; // 0xe8
};

struct UItemUserWidget : UBaseItemWidget {
	FMulticastInlineDelegate OnClicked; // 0x298
	UUserWidget* _uiBorder; // 0x2a8
	bool _isSelected; // 0x2b0
	bool _isHovered; // 0x2b1
};

struct UGeometryCollectionCache : UObject {
	FRecordedTransformTrack RecordedData; // 0x28
	UGeometryCollection* SupportedCollection; // 0x38
	FGuid CompatibleCollectionState; // 0x40
};

struct UGroomCreateStrandsTexturesOptions : UObject {
	int32_t Resolution; // 0x28
	EStrandsTexturesTraceType TraceType; // 0x2c
	float TraceDistance; // 0x30
	EStrandsTexturesMeshType MeshType; // 0x34
	UStaticMesh* StaticMesh; // 0x38
	USkeletalMesh* SkeletalMesh; // 0x40
	int32_t LODIndex; // 0x48
	int32_t SectionIndex; // 0x4c
	int32_t UVChannelIndex; // 0x50
	TArray<int32_t> GroupIndex; // 0x58
};

struct ABP_Survival_Storage_CutTree_Objective_C : ACuttingObjective {
	USceneComponent* DefaultSceneRoot; // 0x360
};

struct UMeshOpPreviewWithBackgroundCompute : UObject {
	UPreviewMesh* PreviewMesh; // 0x58
	TArray<UMaterialInterface*> StandardMaterials; // 0x60
	UMaterialInterface* OverrideMaterial; // 0x70
	UMaterialInterface* WorkingMaterial; // 0x78
};

struct UARMeshComponent : UARComponent {
	FARMeshUpdatePayload ReplicatedPayload; // 0x280
};

struct AReflectionCapture : AActor {
	UReflectionCaptureComponent* CaptureComponent; // 0x220
};

struct UBTTask_BlueprintBase : UBTTaskNode {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	FIntervalCountdown TickInterval; // 0x80
	char bShowPropertyDetails : 1; // 0xa0
};

struct UBasicNotificationDescription : UNotificationDescription {
	FString Message; // 0x40
	float Duration; // 0x50
	bool ping; // 0x54
};

struct UDerivedWidgetsData : UDataAsset {
	UUserWidget* CraftingPanel; // 0x30
	UUserWidget* CraftingInfo; // 0x38
	UUserWidget* CraftingSectionContainer; // 0x40
	UUserWidget* CraftableItem; // 0x48
	UUserWidget* CraftingIngredient; // 0x50
	UUserWidget* CraftingPossibleItem; // 0x58
	UUserWidget* StripedFiller; // 0x60
	UUserWidget* AvailableItem; // 0x68
	UWorldCraftingMarkerWidget* WorldCraftingMarker; // 0x70
	ULoadingScreen* LoadingScreen; // 0x78
	UUserWidget* InteractionWidgetClass; // 0x80
	UUserWidget* InteractionGroupWidgetClass; // 0x88
	UUserWidget* InteractionContainerWidgetClass; // 0x90
	UUserWidget* ItemWidgetClass; // 0x98
	UUserWidget* InventoryWidgetClass; // 0xa0
	UUserWidget* InventorySlotWidgetClass; // 0xa8
	UUserWidget* WarningWidgetClass; // 0xb0
	UUserWidget* HudWidgetClass; // 0xb8
	UUserWidget* LoadingWidgetClass; // 0xc0
	UUserWidget* LoadingIconWidgetClass; // 0xc8
	UUserWidget* SpawnScreenWidgetClass; // 0xd0
	UUserWidget* WaypointScreenWidgetClass; // 0xd8
	UUserWidget* HoverPanelWidgetClass; // 0xe0
	UUserWidget* ActionProgressWidgetClass; // 0xe8
	UUserWidget* ItemSelectionWidgetClass; // 0xf0
	UUserWidget* ExamineWidgetClass; // 0xf8
	UUserWidget* HandsInventoryWidgetClass; // 0x100
	UUserWidget* GenericItemInventoryWidgetClass; // 0x108
	UUserWidget* InventoryContainersWidgetClass; // 0x110
	UUserWidget* CombinedInventoryWidgetClass; // 0x118
	UUserWidget* TeamInvitationWidgetClass; // 0x120
	UUserWidget* CraftingInfoWidgetClass; // 0x128
	UUserWidget* CraftingComponentWidgetClass; // 0x130
	UUserWidget* CraftingRecipeWidgetClass; // 0x138
	UUserWidget* EmptySlotWidgetClass; // 0x140
	UUserWidget* TeamInfoWidgetClass; // 0x148
	UUserWidget* TeammateNameWidgetClass; // 0x150
	UUserWidget* PreviousNextSwitchWidgetClass; // 0x158
	UUserWidget* VicinityItemContainerWidgetClass; // 0x160
	UUserWidget* QuickAccessItemWidget; // 0x168
	UChangeTextWidget* ChangeTextWidgetClass; // 0x170
	UItemStatusWidget* ItemStatusWidgetClass; // 0x178
	UHealthWidget* HealthWidgetClass; // 0x180
	UUserWidget* GameEventPanelWidgetClass; // 0x188
	UUserWidget* GameEventCardWidgetClass; // 0x190
	UUserWidget* GameEventScoreboardWidgetClass; // 0x198
	UUserWidget* GameEventMiniScoreboardWidgetClass; // 0x1a0
	UUserWidget* TournamentScoreboardWidgetClass; // 0x1a8
	UUserWidget* CircularMenuWidgetClass; // 0x1b0
	UUserWidget* CircularMenuSegmentWidgetClass; // 0x1b8
	UUserWidget* LockpickingWidgetClass; // 0x1c0
	UDoorUpgradeWidget* DoorUpgradeWidgetClass; // 0x1c8
	UUserWidget* UpgradeWidgetClass; // 0x1d0
	UUserWidget* InventoryContainerWidget2Test; // 0x1d8
	UUserWidget* InventoryItemWidget2Test; // 0x1e0
	UUserWidget* ItemInventoryWidget2; // 0x1e8
	UUserWidget* InventoryPanelSideLayerWidget; // 0x1f0
	UUserWidget* ItemSplittingWidgetClass; // 0x1f8
	TMap<EWidgetType, UUserWidget*> Widgets; // 0x200
	UUserWidget* ObjectivesWidgetClass; // 0x250
	UUserWidget* MissionPromptClass; // 0x258
	UUserWidget* MissionResultClass; // 0x260
	UUserWidget* MissionItemClass; // 0x268
	UUserWidget* ObjectiveItemClass; // 0x270
	UUserWidget* MissionRewardClass; // 0x278
	UUserWidget* RewardItemWidgetClass; // 0x280
	UUserWidget* StatisticsListRow; // 0x288
	TArray<FTooltipPanelData> ItemTooltipPanels; // 0x290
	UUserWidget* MalfunctionsContainerClass; // 0x2a0
	UUserWidget* WeaponAmmoCountContainerClass; // 0x2a8
	UUserWidget* PlaceableElementWidgetClass; // 0x2b0
};

struct UBaseBuildingComponent : UStaticMeshComponent {
	FString _name; // 0x4d8
	EBaseElementType _baseElementType; // 0x4e8
	bool _isClimbable; // 0x4ea
	bool _isBlockingItemPlacement; // 0x4eb
	TArray<UStaticMesh*> _staticMeshVariations; // 0x4f0
	UChoppingRecipeDataAsset* _choppingRecipeAsset; // 0x500
	float _healthPoints; // 0x508
	bool _canBeDamaged; // 0x50c
	float _hoursToDecay; // 0x510
	bool _isUsedForRespawn; // 0x514
	float _explosionResistance; // 0x518
	float _collisionEnergyResistance; // 0x51c
	UCurveFloat* _collisionDamageModifierFromEnergy; // 0x520
	UStaticMesh* _weatherMaskMesh; // 0x528
	int32_t _maxInstancesPerFlagArea; // 0x530
	UPlaceableCraftableItem* _upgradeRecipe; // 0x538
	bool _cascadeDestroySnappedElementsOnUpgrade; // 0x540
	bool _isTileable; // 0x541
	bool _mustBePlacedOnFoundation; // 0x542
	bool _canEverBePlacedOnFoundation; // 0x543
	bool _canBePlacedOnOtherBaseElements; // 0x544
	bool _canBePlacedWithoutSnapping; // 0x545
	bool _shouldIgnoreSelfWhilePlacing; // 0x546
	bool _canBeGroundedOnOtherElements; // 0x547
	char _maxHeightLevel; // 0x548
	float _maxHeightDifference; // 0x54c
	bool _addRandomRotation; // 0x550
	bool _mustGroundAllPoints; // 0x551
	bool _traceComplexWhilePlacing; // 0x552
	bool _mustBePlacedUpright; // 0x553
	EConZPlacementHeightType _placementHeightType; // 0x554
	bool _useSimpleCollisionForOverlaps; // 0x555
	FRotator _maxRotationWhilePlacing; // 0x558
	TArray<FElementSnapMarker> _elementSnapMarkers; // 0x568
	bool _useEncapsulationTestWhenSnapping; // 0x578
	TArray<FBaseBuildingSizeVariation> _sizeVariations; // 0x580
	float _sizeVariationsSpacing; // 0x594
	float _repairTime; // 0x598
	FRepairableParams _repairableParams; // 0x5a0
	float _experienceAwardForBuilding; // 0x5d8
	TArray<UParticleSystem*> _destructionParticles; // 0x5e0
	TArray<FTransform> _destructionParticlesSpawnTransforms; // 0x5f0
	UAkAudioEvent* _destructionSound; // 0x600
	bool _isDoor; // 0x608
	ADoor* _doorClass; // 0x610
	bool _hasLadder; // 0x618
	TArray<FLadderMarker> _ladderMarkers; // 0x620
	TArray<FBaseElementDamageZone> _damageZones; // 0x630
	bool _shouldDestroyElementsOnTopWhenDestroyed; // 0x640
	float _destructionTime; // 0x644
	bool _shouldRemoveIntersectingElementsOnDestroy; // 0x648
	TArray<FBaseElementDestructionZone> _destructionZones; // 0x650
	bool _useAsReplenishableResource; // 0x660
	FReplenishableResourceDescription _replenishableResourceDescription; // 0x668
};

struct UCloudStorageBase : UPlatformInterfaceBase {
	TArray<FString> LocalCloudFiles; // 0x38
	char bSuppressDelegateCalls : 1; // 0x48
};

struct UNiagaraComponentPool : UObject {
	TMap<UNiagaraSystem*, FNCPool> WorldParticleSystemPools; // 0x28
};

struct UInventoryItemDataIcon : UInventoryItemData {
	UTexture2D* Icon; // 0x30
};

struct UNiagaraRibbonRendererProperties : UNiagaraRendererProperties {
	UMaterialInterface* Material; // 0x80
	FNiagaraUserParameterBinding MaterialUserParamBinding; // 0x88
	ENiagaraRibbonFacingMode FacingMode; // 0xa8
	FNiagaraRibbonUVSettings UV0Settings; // 0xac
	FNiagaraRibbonUVSettings UV1Settings; // 0xd0
	ENiagaraRibbonDrawDirection DrawDirection; // 0xf4
	float CurveTension; // 0xf8
	ENiagaraRibbonTessellationMode TessellationMode; // 0xfc
	int32_t TessellationFactor; // 0x100
	bool bUseConstantFactor; // 0x104
	float TessellationAngle; // 0x108
	bool bScreenSpaceTessellation; // 0x10c
	FNiagaraVariableAttributeBinding PositionBinding; // 0x110
	FNiagaraVariableAttributeBinding ColorBinding; // 0x168
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x1c0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x218
	FNiagaraVariableAttributeBinding RibbonTwistBinding; // 0x270
	FNiagaraVariableAttributeBinding RibbonWidthBinding; // 0x2c8
	FNiagaraVariableAttributeBinding RibbonFacingBinding; // 0x320
	FNiagaraVariableAttributeBinding RibbonIdBinding; // 0x378
	FNiagaraVariableAttributeBinding RibbonLinkOrderBinding; // 0x3d0
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x428
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x480
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x4d8
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x530
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x588
	FNiagaraVariableAttributeBinding U0OverrideBinding; // 0x5e0
	FNiagaraVariableAttributeBinding V0RangeOverrideBinding; // 0x638
	FNiagaraVariableAttributeBinding U1OverrideBinding; // 0x690
	FNiagaraVariableAttributeBinding V1RangeOverrideBinding; // 0x6e8
};

struct UUI_Border_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UImage* Image_1; // 0x280
	UNamedSlot* NamedSlot_1; // 0x288
	BorderSizes BorderSize; // 0x290
	FLinearColor Color; // 0x294
	float _padding; // 0x2a4
};

struct UPreviewMesh : UObject {
	bool bBuildSpatialDataStructure; // 0x40
	bool bDrawOnTop; // 0x41
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0x50
};

struct UActorChannel : UChannel {
	AActor* Actor; // 0x70
	TArray<UObject*> CreateSubObjects; // 0x160
};

struct UCreateSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UGameplayTask_WaitDelay : UGameplayTask {
	FMulticastInlineDelegate OnFinish; // 0x68
};

struct UGridSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
	int32_t row; // 0x4c
	int32_t RowSpan; // 0x50
	int32_t column; // 0x54
	int32_t ColumnSpan; // 0x58
	int32_t Layer; // 0x5c
	FVector2D Nudge; // 0x60
};

struct AKillBoxDetectionField : APlaceableActorBlocker {
	UBoxComponent* BoxCollisionComponent; // 0x220
};

struct UUI_WeaponAmmoDisplayContainer_C : UWeaponAmmoDisplayContainerWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a0
	UWidgetAnimation* FadeOut; // 0x2a8
	UWidgetAnimation* FadeIn; // 0x2b0
};

struct URemoveMagazineInsertMagazineInsertCartridge : UWeaponActionReloadSequence {
	FName MontageEndSectionName; // 0x90
};

struct UPlayEffectsWhenParticleCollides : UParticleModuleEventSendToGame {
	UProjectileImpactEffects* ImpactEffects; // 0x28
};

struct UConZVehicleDriveComponent4W : UDcxVehicleDriveComponent4W {
	float _maxArtificialBrakingForce; // 0x3d8
	float _speedLimiterMaxSpeed; // 0x3dc
	float _speedLimiterMaxBrakingForce; // 0x3e0
	float _speedLimiterInfluenceCoefficient; // 0x3e4
	TArray<FConZVehicleFlatTireWheelConfiguration> _flatTireWheelConfigurations; // 0x3e8
};

struct UUI_SquadEditor_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* AcceptButton; // 0x268
	UUI_DropdownMenuWidget_C* BackgroundDropdownMenu; // 0x270
	UUniformGridPanel* BackgroundGrid; // 0x278
	UUI_DropdownMenuColorSelectionWidget_C* BackgroundPrimaryColorSelector; // 0x280
	UUI_DropdownMenuColorSelectionWidget_C* BackgroundSecondaryColorSelector; // 0x288
	UUI_DropdownMenuTextureSelectionWidget_C* BackgroundSelector; // 0x290
	UUI_DropdownMenuColorSelectionWidget_C* BackgroundTertiaryColorSelector; // 0x298
	UButton* CancelButton; // 0x2a0
	UUI_DropdownMenuWidget_C* ColorDropdownMenu; // 0x2a8
	UUniformGridPanel* ColorGrid; // 0x2b0
	UVerticalBox* EmblemBox; // 0x2b8
	UImage* Image_2; // 0x2c0
	UImage* Image_3; // 0x2c8
	UImage* Image_4; // 0x2d0
	UImage* Image_5; // 0x2d8
	UImage* Image_8; // 0x2e0
	UImage* Image_9; // 0x2e8
	UVerticalBox* InformationBox; // 0x2f0
	UImage* InformationBoxBG; // 0x2f8
	UMultiLineEditableText* InformationTextBox; // 0x300
	UVerticalBox* MessageBox; // 0x308
	UImage* MessageBoxBG; // 0x310
	UMultiLineEditableText* MessageTextBox; // 0x318
	UEditableTextBox* NameTextBox; // 0x320
	UUI_DropdownMenuWidget_C* SymbolDropdownMenu; // 0x328
	UUniformGridPanel* SymbolGrid; // 0x330
	UUI_DropdownMenuColorSelectionWidget_C* SymbolPrimaryColorSelector; // 0x338
	UUI_DropdownMenuColorSelectionWidget_C* SymbolSecondaryColorSelector; // 0x340
	UUI_DropdownMenuTextureSelectionWidget_C* SymbolSelector; // 0x348
	UUI_DropdownMenuColorSelectionWidget_C* SymbolTertiaryColorSelector; // 0x350
	UUI_SquadEmblem_C* UI_SquadEmblem; // 0x358
	int32_t SymbolColumnCount; // 0x360
	int32_t ColorRowCount; // 0x364
	int32_t BackgroundColumnCount; // 0x368
	int32_t MaxInformationLen; // 0x36c
	int32_t MaxMessageLen; // 0x370
};

struct AWaypointGroup : AAnimalSpawner2 {
	FColor DebugColor; // 0x330
	EWaypointTraverseType WaypointTraverseType; // 0x334
	int32_t MaxSpawnInstancesPerWaypoint; // 0x338
	float WaypointSpawningResetTime; // 0x33c
	TArray<FWaypoint> Waypoints; // 0x340
};

struct ANavModifierVolume : AVolume {
	UNavArea* AreaClass; // 0x260
	bool bMaskFillCollisionUnderneathForNavmesh; // 0x268
};

struct UBTDecorator_IsAtLocation : UBTDecorator_BlackboardBase {
	float AcceptableRadius; // 0x90
	FAIDataProviderFloatValue ParametrizedAcceptableRadius; // 0x98
	FAIDistanceType GeometricDistanceType; // 0xd0
	char bUseParametrizedRadius : 1; // 0xd4
	char bUseNavAgentGoalLocation : 1; // 0xd4
	char bPathFindingBasedTest : 1; // 0xd4
};

struct UUI_GameEventLeaderboardRow_C : UUserWidget {
	UTextBlock* Assists; // 0x260
	UBorder* Background; // 0x268
	UTextBlock* Deaths; // 0x270
	UTextBlock* Fame; // 0x278
	UTextBlock* KD; // 0x280
	UTextBlock* Kills; // 0x288
	UTextBlock* Player; // 0x290
	UTextBlock* RankText; // 0x298
	UTextBlock* Score; // 0x2a0
	FLinearColor BackgroundColor; // 0x2a8
	int32_t Rank; // 0x2b8
};

struct UCrowdManager : UCrowdManagerBase {
	ANavigationData* MyNavData; // 0x28
	TArray<FCrowdAvoidanceConfig> AvoidanceConfig; // 0x30
	TArray<FCrowdAvoidanceSamplingPattern> SamplingPatterns; // 0x40
	int32_t MaxAgents; // 0x50
	float MaxAgentRadius; // 0x54
	int32_t MaxAvoidedAgents; // 0x58
	int32_t MaxAvoidedWalls; // 0x5c
	float NavmeshCheckInterval; // 0x60
	float PathOptimizationInterval; // 0x64
	float SeparationDirClamp; // 0x68
	float PathOffsetRadiusMultiplier; // 0x6c
	char bResolveCollisions : 1; // 0x70
};

struct UPropertyValue : UObject {
	TArray<TFieldPath<FProperty>> Properties; // 0x88
	TArray<int32_t> PropertyIndices; // 0x98
	TArray<FCapturedPropSegment> CapturedPropSegments; // 0xa8
	FString FullDisplayString; // 0xb8
	FName PropertySetterName; // 0xc8
	TMap<FString, FString> PropertySetterParameterDefaults; // 0xd0
	bool bHasRecordedData; // 0x120
	UObject* LeafPropertyClass; // 0x128
	TArray<char> ValueBytes; // 0x138
	EPropertyValueCategory PropCategory; // 0x148
};

struct UWidgetTree : UObject {
	UWidget* RootWidget; // 0x28
};

struct UMagicLeapPlanesComponent : USceneComponent {
	TArray<EMagicLeapPlaneQueryFlags> QueryFlags; // 0x1f8
	UBoxComponent* SearchVolume; // 0x208
	int32_t MaxResults; // 0x210
	float MinHolePerimeter; // 0x214
	float MinPlaneArea; // 0x218
	EMagicLeapPlaneQueryType QueryType; // 0x21c
	float SimilarityThreshold; // 0x220
	FMulticastInlineDelegate OnPlanesQueryResult; // 0x228
	FMulticastInlineDelegate OnPersistentPlanesQueryResult; // 0x238
};

struct UInterpToMovementComponent : UMovementComponent {
	float Duration; // 0xf0
	char bPauseOnImpact : 1; // 0xf4
	bool bSweep; // 0xf8
	ETeleportType TeleportType; // 0xf9
	EInterpToBehaviourType BehaviourType; // 0xfa
	bool bCheckIfStillInWorld; // 0xfb
	char bForceSubStepping : 1; // 0xfc
	FMulticastInlineDelegate OnInterpToReverse; // 0x100
	FMulticastInlineDelegate OnInterpToStop; // 0x110
	FMulticastInlineDelegate OnWaitBeginDelegate; // 0x120
	FMulticastInlineDelegate OnWaitEndDelegate; // 0x130
	FMulticastInlineDelegate OnResetDelegate; // 0x140
	float MaxSimulationTimeStep; // 0x150
	int32_t MaxSimulationIterations; // 0x154
	TArray<FInterpControlPoint> ControlPoints; // 0x158
};

struct URetainerBox : UContentWidget {
	bool bRetainRender; // 0x120
	bool RenderOnInvalidation; // 0x121
	bool RenderOnPhase; // 0x122
	int32_t Phase; // 0x124
	int32_t PhaseCount; // 0x128
	UMaterialInterface* EffectMaterial; // 0x130
	FName TextureParameter; // 0x138
};

struct UARLifeCycleComponent : USceneComponent {
	FMulticastInlineDelegate OnARActorSpawnedDelegate; // 0x1f8
	FMulticastInlineDelegate OnARActorToBeDestroyedDelegate; // 0x208
};

struct USourceEffectStereoDelayPreset : USoundEffectSourcePreset {
	FSourceEffectStereoDelaySettings Settings; // 0xb4
};

struct UPrisonerBodyConditionUIData_NutrientDeficiency : UPrisonerBodyConditionUIData {
	EConZUnit NutrientUnit; // 0x19c
};

struct UFlareItemState : UItemState {
	int64_t IgnitedTimeStamp; // 0xf8
};

struct UMaterialExpressionSquareRoot : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct AZombieAIController2 : AAIController {
	UAISenseConfig_Sight* _lyingSightSenseConfig; // 0x328
	UAISenseConfig_Hearing* _lyingHearingSenseConfig; // 0x330
	float _stateMachineTickIntervalWhenInRelaxedState; // 0x338
	bool _shouldWander; // 0x33c
	bool _shouldWanderAroundWanderOrigin; // 0x33d
	float _maxWanderingRadius; // 0x340
	float _minTimeToRestBeforeWandering; // 0x344
	float _maxTimeToRestBeforeWandering; // 0x348
	bool _shouldBecomeAlertedBySight; // 0x34c
	float _minLineOfSightDurationToBecomeAlerted; // 0x350
	float _maxLineOfSightDurationToBecomeAlerted; // 0x354
	bool _shouldBecomeAlertedByHearing; // 0x358
	float _minDelayBeforeBecomingAlertedByHearing; // 0x35c
	float _maxDelayBeforeBecomingAlertedByHearing; // 0x360
	UAISenseConfig_Sight* _relaxedIdleSightSenseConfig; // 0x368
	UAISenseConfig_Hearing* _relaxedIdleHearingSenseConfig; // 0x370
	UAISenseConfig_Sight* _relaxedWanderSightSenseConfig; // 0x378
	UAISenseConfig_Hearing* _relaxedWanderHearingSenseConfig; // 0x380
	float _stateMachineTickIntervalWhenInAlertedState; // 0x388
	float _minObservingForLineOfSightStartDelay; // 0x38c
	float _maxObservingForLineOfSightStartDelay; // 0x390
	float _minInvestigateStimulusDelay; // 0x394
	float _maxInvestigateStimulusDelay; // 0x398
	float _minEnterCombatModeDelay; // 0x39c
	float _maxEnterCombatModeDelay; // 0x3a0
	float _distanceAtWhichToIgnoreEnterCombatModeDelay; // 0x3a4
	UCurveVector* _observingCurve; // 0x3a8
	float _observingCurvePeriod; // 0x3b0
	float _observingCurveMaxYaw; // 0x3b4
	float _observingCurveMaxPitch; // 0x3b8
	UAISenseConfig_Sight* _alertedSightSenseConfig; // 0x3c0
	UAISenseConfig_Hearing* _alertedHearingSenseConfig; // 0x3c8
	float _stateMachineTickIntervalWhenInCombatState; // 0x3d0
	bool _shouldAttack; // 0x3d4
	bool _shouldBackOffIfTooCloseToFoe; // 0x3d5
	bool _shouldPredictFoeLocation; // 0x3d6
	UCurveFloat* _foeLocationPredictionStrengthVsDistanceToFoe; // 0x3d8
	float _attackDistance; // 0x3e0
	int32_t _minNumConsecutiveInflictedMeleeHitsToIntimidate; // 0x3e4
	int32_t _maxNumConsecutiveInflictedMeleeHitsToIntimidate; // 0x3e8
	float _minTimeBeforeFoeIsConsideredUnreachable; // 0x3ec
	float _maxTimeBeforeFoeIsConsideredUnreachable; // 0x3f0
	float _minTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate; // 0x3f4
	float _maxTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate; // 0x3f8
	float _costOfJumpingInPathLength; // 0x3fc
	float _minPathPointDistance; // 0x400
	FDetectionDelayTimerData _detectionDelayTimerData; // 0x404
	AZombie2* _zombie; // 0x418
};

struct UResizableWindow_C : UCustomGUIWindow_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	UBorderFilled_C* BorderFilled; // 0x2a0
	UBorderFilled_C* BorderOutlineFilled; // 0x2a8
	UBorder* BorderOutlineUpperPart; // 0x2b0
	UCanvasPanel* ContentArea; // 0x2b8
	UNamedSlot* ContentAreaSlot; // 0x2c0
	UFooterV2_C* FooterV2; // 0x2c8
	UBorder* HeaderArea; // 0x2d0
	UTextBlock* HeaderTextWidget; // 0x2d8
	UImage* IRMaximize; // 0x2e0
	UImage* IRMinimize; // 0x2e8
	UBorder* ResizeArea; // 0x2f0
	USizeBox* ResizeAreaBox; // 0x2f8
	UImage* ResizeImage; // 0x300
	UHoveredEventWidget_C* ResizeWidget; // 0x308
	bool DragEnabled; // 0x310
	FSlateFontInfo HeaderFont; // 0x318
	bool IsMouseButtonDown; // 0x370
	FVector2D LastMousePosition; // 0x374
	bool MouseDownAndMoving; // 0x37c
	bool IsDrag; // 0x37d
	bool IsResize; // 0x37e
	UCanvasPanelSlot* ParentSlot; // 0x380
	bool ResizeEnabled; // 0x388
	FLinearColor ResizeColorHover; // 0x38c
	FLinearColor ResizeColorNormal; // 0x39c
	FLinearColor HeaderColorNormal; // 0x3ac
	FLinearColor HeaderColorHovered; // 0x3bc
	bool IsResizeColoredHover; // 0x3cc
	bool IsHeaderColoredHover; // 0x3cd
	bool IsResizeColoredNormal; // 0x3ce
	bool IsHeaderColoredNormal; // 0x3cf
	FVector2D PreResizeAlignment; // 0x3d0
	FVector2D PreResizeOffset; // 0x3d8
	bool IsAlignmentAccountedFor; // 0x3e0
	FVector2D PreDragSize; // 0x3e4
	bool IsResizeHovered; // 0x3ec
	bool IsHeaderHovered; // 0x3ed
	FVector2D ResizeAreaSize; // 0x3f0
	FSlateBrush ResizeAreaBrush; // 0x3f8
	FSlateBrush DragAppearanceBrush; // 0x480
	FLinearColor DragAppearanceColor; // 0x508
	FText HeaderText; // 0x518
	float SafetyZoneY; // 0x530
	float SafetyZoneX; // 0x534
	float MinWidth; // 0x538
	float MinHeight; // 0x53c
	float MaxWidth; // 0x540
	float MaxHeight; // 0x544
	FLinearColor HeaderContentNormal; // 0x548
	FSlateColor HeaderTextColorNormal; // 0x558
	FSlateColor HeaderTextColorHovered; // 0x580
	bool isMinimized; // 0x5a8
	UWindowsContent_C* _contentWidgetClass; // 0x5b0
	FVector2D _curentContentAreaSlotSize; // 0x5b8
	FMulticastInlineDelegate ContentSizeChangedEventDispatcher; // 0x5c0
	bool isFooterV2Active; // 0x5d0
	UWindowsContent_C* _windowsContentWidget; // 0x5d8
	bool ResizeEnabledLocked; // 0x5e0
	FMulticastInlineDelegate ContentMaximizedEventDispatcher; // 0x5e8
	bool _shouldRefreshSize; // 0x5f8
	FMulticastInlineDelegate OnHeaderDoubleClickDispatcher; // 0x600
	UHUD_C* ParentHUD; // 0x610
};

struct UTimedTriggerComponentState : UTriggerComponentState {
	float CountdownRemainingTime; // 0x28
};

struct UDataAsset : UObject {
	UDataAsset* NativeClass; // 0x28
};

struct UMetabolismHumanBodyPanel : UUserWidget {
	FLinearColor ColdBodyColor; // 0x260
	FLinearColor HotBodyColor; // 0x270
	float BodyTemperaturePreview; // 0x280
	UImage* _img_BodyGlow_Male; // 0x288
	UImage* _img_BodyScan_Male; // 0x290
	UImage* _img_BodyGlow_Female; // 0x298
	UImage* _img_BodyScan_Female; // 0x2a0
	UImage* _img_Head_Male; // 0x2a8
	UImage* _img_Ear_Left_Male; // 0x2b0
	UImage* _img_Ear_Right_Male; // 0x2b8
	UImage* _img_Neck_Male; // 0x2c0
	UImage* _img_Trapezius_Male; // 0x2c8
	UImage* _img_Shoulder_Left_Male; // 0x2d0
	UImage* _img_Shoulder_Right_Male; // 0x2d8
	UImage* _img_Chest_Male; // 0x2e0
	UImage* _img_Arm_Left_Male; // 0x2e8
	UImage* _img_Arm_Right_Male; // 0x2f0
	UImage* _img_Forearm_Left_Male; // 0x2f8
	UImage* _img_Forearm_Right_Male; // 0x300
	UImage* _img_Hand_Left_Male; // 0x308
	UImage* _img_Hand_Right_Male; // 0x310
	UImage* _img_Umbilicus_Male; // 0x318
	UImage* _img_Abdomen_Male; // 0x320
	UImage* _img_Thigh_Left_Male; // 0x328
	UImage* _img_Thigh_Right_Male; // 0x330
	UImage* _img_Kneecap_Left_Male; // 0x338
	UImage* _img_Kneecap_Right_Male; // 0x340
	UImage* _img_Leg_Left_Male; // 0x348
	UImage* _img_Leg_Right_Male; // 0x350
	UImage* _img_Foot_Left_Male; // 0x358
	UImage* _img_Foot_Right_Male; // 0x360
	UImage* _img_Footbones_Left_Male; // 0x368
	UImage* _img_Footbones_Right_Male; // 0x370
	UImage* _img_Legbones_Left_Male; // 0x378
	UImage* _img_Legbones_Right_Male; // 0x380
	UImage* _img_Thighbone_Left_Male; // 0x388
	UImage* _img_Thighbone_Right_Male; // 0x390
	UImage* _img_Pelvis_Male; // 0x398
	UImage* _img_Spine_Male; // 0x3a0
	UImage* _img_Handbones_Left_Male; // 0x3a8
	UImage* _img_Handbones_Right_Male; // 0x3b0
	UImage* _img_Forearmbones_Left_Male; // 0x3b8
	UImage* _img_Forearmbones_Right_Male; // 0x3c0
	UImage* _img_Armbone_Left_Male; // 0x3c8
	UImage* _img_Armbone_Right_Male; // 0x3d0
	UImage* _img_Scapula_Left_Male; // 0x3d8
	UImage* _img_Scapula_Right_Male; // 0x3e0
	UImage* _img_Ribcage_Male; // 0x3e8
	UImage* _img_Skull_Male; // 0x3f0
	UImage* _img_Head_Female; // 0x3f8
	UImage* _img_Ear_Left_Female; // 0x400
	UImage* _img_Ear_Right_Female; // 0x408
	UImage* _img_Neck_Female; // 0x410
	UImage* _img_Trapezius_Female; // 0x418
	UImage* _img_Shoulder_Left_Female; // 0x420
	UImage* _img_Shoulder_Right_Female; // 0x428
	UImage* _img_Chest_Female; // 0x430
	UImage* _img_Arm_Left_Female; // 0x438
	UImage* _img_Arm_Right_Female; // 0x440
	UImage* _img_Forearm_Left_Female; // 0x448
	UImage* _img_Forearm_Right_Female; // 0x450
	UImage* _img_Hand_Left_Female; // 0x458
	UImage* _img_Hand_Right_Female; // 0x460
	UImage* _img_Umbilicus_Female; // 0x468
	UImage* _img_Abdomen_Female; // 0x470
	UImage* _img_Thigh_Left_Female; // 0x478
	UImage* _img_Thigh_Right_Female; // 0x480
	UImage* _img_Kneecap_Left_Female; // 0x488
	UImage* _img_Kneecap_Right_Female; // 0x490
	UImage* _img_Leg_Left_Female; // 0x498
	UImage* _img_Leg_Right_Female; // 0x4a0
	UImage* _img_Foot_Left_Female; // 0x4a8
	UImage* _img_Foot_Right_Female; // 0x4b0
	UImage* _img_Footbones_Left_Female; // 0x4b8
	UImage* _img_Footbones_Right_Female; // 0x4c0
	UImage* _img_Legbones_Left_Female; // 0x4c8
	UImage* _img_Legbones_Right_Female; // 0x4d0
	UImage* _img_Thighbone_Left_Female; // 0x4d8
	UImage* _img_Thighbone_Right_Female; // 0x4e0
	UImage* _img_Pelvis_Female; // 0x4e8
	UImage* _img_Spine_Female; // 0x4f0
	UImage* _img_Handbones_Left_Female; // 0x4f8
	UImage* _img_Handbones_Right_Female; // 0x500
	UImage* _img_Forearmbones_Left_Female; // 0x508
	UImage* _img_Forearmbones_Right_Female; // 0x510
	UImage* _img_Armbone_Left_Female; // 0x518
	UImage* _img_Armbone_Right_Female; // 0x520
	UImage* _img_Scapula_Left_Female; // 0x528
	UImage* _img_Scapula_Right_Female; // 0x530
	UImage* _img_Ribcage_Female; // 0x538
	UImage* _img_Skull_Female; // 0x540
	UImage* _img_SpinalCord; // 0x548
	UImage* _img_Lungs; // 0x550
	UImage* _img_RespiratorySystem; // 0x558
	UImage* _img_CirculatorySystem; // 0x560
	UImage* _img_Colon; // 0x568
	UImage* _img_Intestine; // 0x570
	UImage* _img_Bladder; // 0x578
	UImage* _img_Liver; // 0x580
	UImage* _img_Kidneys; // 0x588
	UImage* _img_AdrenalGlands; // 0x590
	UImage* _img_Gallbladder; // 0x598
	UImage* _img_Pancreas; // 0x5a0
	UImage* _img_Stomach; // 0x5a8
	UImage* _img_Heart; // 0x5b0
	UImage* _img_Spleen; // 0x5b8
	UImage* _img_Brain; // 0x5c0
	UImage* _img_Reproductive_Male; // 0x5c8
	UImage* _img_Reproductive_Female; // 0x5d0
	UButton* _btn_EntireBody; // 0x5d8
	UButton* _btn_HeadRegion; // 0x5e0
	UButton* _btn_RightLegRegion; // 0x5e8
	UButton* _btn_LeftLegRegion; // 0x5f0
	UButton* _btn_TorsoRegion; // 0x5f8
	UButton* _btn_RightArmRegion; // 0x600
	UButton* _btn_LeftArmRegion; // 0x608
	UOverlay* _mainOverlay; // 0x610
	UOverlay* _maleOverlay; // 0x618
	UOverlay* _femaleOverlay; // 0x620
	UOverlay* _bothOverlay; // 0x628
	UWidgetAnimation* _focusBodyRegion_Head; // 0x630
	UWidgetAnimation* _focusBodyRegion_Torso; // 0x638
	UWidgetAnimation* _focusBodyRegion_LeftArm; // 0x640
	UWidgetAnimation* _focusBodyRegion_RightArm; // 0x648
	UWidgetAnimation* _focusBodyRegion_LeftLeg; // 0x650
	UWidgetAnimation* _focusBodyRegion_RightLeg; // 0x658
	UImage* _vignette; // 0x660
};

struct UNiagaraSimulationStageGeneric : UNiagaraSimulationStageBase {
	ENiagaraIterationSource IterationSource; // 0x40
	int32_t Iterations; // 0x44
	char bSpawnOnly : 1; // 0x48
	char bDisablePartialParticleUpdate : 1; // 0x48
	FNiagaraVariableDataInterfaceBinding DataInterface; // 0x50
};

struct UUI_TextInput_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UImage* Image_1; // 0x280
	UImage* Image_2; // 0x288
	UImage* InputImage; // 0x290
	USizeBox* InputSizeBox; // 0x298
	UButton* MainButton; // 0x2a0
	UTextBlock* TextBlock_1; // 0x2a8
	UEditableTextBox* TextBox; // 0x2b0
	USizeBox* TitleSizeBox; // 0x2b8
	int32_t InputFontSize; // 0x2c0
	int32_t TitleFontSize; // 0x2c4
	int32_t TitleFontSizeHighlighted; // 0x2c8
	float TitleWidth; // 0x2cc
	float InputWidth; // 0x2d0
	float Height; // 0x2d4
	FText Title; // 0x2d8
	FText DefaultValue; // 0x2f0
	float InputPadding; // 0x308
	TextInputType InputType; // 0x30c
	FMulticastInlineDelegate OnTextCommitted; // 0x310
	EHorizontalAlignment ValueJustification; // 0x320
	FLinearColor InputBackgroundColor; // 0x324
};

struct UTexture2DDynamic : UTexture {
	EPixelFormat Format; // 0xe0
};

struct URevolveBoundaryTool : UMeshBoundaryToolBase {
	URevolveBoundaryToolProperties* Settings; // 0x160
	UNewMeshMaterialProperties* MaterialProperties; // 0x168
	UConstructionPlaneMechanic* PlaneMechanic; // 0x170
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0x178
};

struct UProceduralRectangleToolProperties : UProceduralShapeToolProperties {
	float Width; // 0x70
	float Depth; // 0x74
	int32_t WidthSubdivisions; // 0x78
	int32_t DepthSubdivisions; // 0x7c
};

struct USliderWithLabelAndNumber : UConZSlider {
	UTextBlock* _name; // 0xdb8
	UTextBlock* _valueDisplay; // 0xdc0
	UImage* _focusBackgroundImage; // 0xdc8
	FSliderWithLabelAndNumberStyle _selectedAndFocusedSWNANStyle; // 0xdd0
	FSliderWithLabelAndNumberStyle _selectedAndUnfocusedSWNANStyle; // 0xf28
	FSliderWithLabelAndNumberStyle _unselectedSWNANStyle; // 0x1080
	FSliderWithLabelAndNumberStyle _highlightedSWNANStyle; // 0x11d8
	FSliderWithLabelAndNumberStyle _disabledSWNANStyle; // 0x1330
	FText _label; // 0x1488
	int32_t _decimalPlacesShown; // 0x14a0
	int32_t _decimalPlacesShifted; // 0x14a4
};

struct UClothesItemState : UItemState {
	float dirtiness; // 0xf8
	bool IsPatched; // 0xfc
};

struct USpectatorBeaconState : UObject {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	bool bRestrictCrossConsole; // 0x38
	TArray<FSpectatorReservation> Reservations; // 0x40
};

struct UMaterialExpressionFmod : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UParticleModuleSize : UParticleModuleSizeBase {
	FRawDistributionVector StartSize; // 0x30
};

struct UProceduralPuncturedDiscToolProperties : UProceduralDiscToolProperties {
	float HoleRadius; // 0x80
};

struct UDrawPolygonToolStandardProperties : UInteractiveToolPropertySet {
	EDrawPolygonDrawMode PolygonType; // 0x60
	EDrawPolygonOutputMode OutputMode; // 0x61
	float FeatureSizeRatio; // 0x64
	float ExtrudeHeight; // 0x68
	int32_t Steps; // 0x6c
	bool bAllowSelfIntersections; // 0x70
	bool bShowGizmo; // 0x71
};

struct USourceEffectFoldbackDistortionPreset : USoundEffectSourcePreset {
	FSourceEffectFoldbackDistortionSettings Settings; // 0x9c
};

struct UStandardSculptBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct UParticleModulePivotOffset : UParticleModuleLocationBase {
	FVector2D PivotOffset; // 0x30
};

struct ADoubleRegularDoorStatic : ADoubleDoor {
	FRotator _openRotation0; // 0x410
	FRotator _openRotation1; // 0x41c
	FRotator _closedRotation0; // 0x428
	FRotator _closedRotation1; // 0x434
};

struct UInsertCartridgeIntoMagazine : UWeaponActionReloadSequence {
	FName MontageEndSectionName; // 0x90
};

struct USubtitleWidget : UUserWidget {
	UTextBlock* _subtitle; // 0x260
	UOverlay* _subtitleOverlay; // 0x268
};

struct USceneCaptureComponentCube : USceneCaptureComponent {
	UTextureRenderTargetCube* TextureTarget; // 0x2b0
	bool bCaptureRotation; // 0x2b8
	UTextureRenderTargetCube* TextureTargetLeft; // 0x2c0
	UTextureRenderTargetCube* TextureTargetRight; // 0x2c8
	UTextureRenderTarget2D* TextureTargetODS; // 0x2d0
	float IPD; // 0x2d8
};

struct URadialFalloff : UFieldNodeFloat {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	float Radius; // 0xc0
	FVector position; // 0xc4
	EFieldFalloffType Falloff; // 0xd0
};

struct APot1_C : AEquipmentItem {
	UBasicGameResourceContainerComponent* BasicGameResourceContainer; // 0x7e0
	URainCollectorComponent* RainCollector; // 0x7e8
};

struct ABP_Prisoner_C : APrisoner {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1e50
	UPrisonerThirdPersonAerialSubviewComponent* TPV_Falling; // 0x1e58
	UStaticMeshComponent* Ears; // 0x1e60
	UPrisonerThirdPersonSubviewComponent* TPV_Grappled; // 0x1e68
	USkeletalMeshComponent* Waist; // 0x1e70
	UPrisonerFirstPersonVehicleAimingSubviewComponent* FPV_MountedLeaningStanceAimingDownTheSights; // 0x1e78
	UPrisonerFirstPersonVehicleAimingSubviewComponent* FPV_MountedDefaultStanceAimingDownTheSights; // 0x1e80
	UPrisonerFirstPersonVehicleAimingSubviewComponent* FPV_MountedLeaningStanceAiming; // 0x1e88
	UPrisonerFirstPersonVehicleAimingSubviewComponent* FPV_MountedDefaultStanceAiming; // 0x1e90
	USceneComponent* FPViewsMouintedAiming; // 0x1e98
	UPrisonerThirdPersonSubviewComponent* TPV_Throwing; // 0x1ea0
	UPrisonerFirstPersonSubviewComponent* FPV_Lying; // 0x1ea8
	UPrisonerFirstPersonSubviewComponent* FPV_Mounted; // 0x1eb0
	USkeletalMeshComponent* FacialHairMesh; // 0x1eb8
	UPrisonerThirdPersonSubviewComponent* TPV_Swimming; // 0x1ec0
	USkeletalMeshComponent* HairMesh; // 0x1ec8
	UStaticMeshComponent* RightBreastCensor; // 0x1ed0
	UStaticMeshComponent* LeftBreastCensor; // 0x1ed8
	USphereComponent* DangerDetectionSphere; // 0x1ee0
	UStaticMeshComponent* PenisCensor; // 0x1ee8
	UStaticMeshComponent* GenitalsCensor; // 0x1ef0
	USkeletalMeshComponent* Neck; // 0x1ef8
	USkeletalMeshComponent* Penis; // 0x1f00
	UVoiceAudioComponent* VoiceAudio; // 0x1f08
	UVoiceChatComponent* VoiceChat; // 0x1f10
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleFoot_R; // 0x1f18
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleFoot_L; // 0x1f20
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleHead; // 0x1f28
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleLeg_R; // 0x1f30
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleLeg_L; // 0x1f38
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleHand_R; // 0x1f40
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleHand_L; // 0x1f48
	USphereComponent* BulletFlyBySoundCollision; // 0x1f50
	UVisionEffectsComponent* VisionEffectsComponent; // 0x1f58
	UStaticMeshComponent* Eyewear; // 0x1f60
	UStaticMeshComponent* UpperHead; // 0x1f68
	UStaticMeshComponent* LowerHead; // 0x1f70
	UStaticMeshComponent* Chip; // 0x1f78
	UStaticMeshComponent* LowerMouth; // 0x1f80
	UStaticMeshComponent* UpperMouth; // 0x1f88
	UStaticMeshComponent* REye; // 0x1f90
	UStaticMeshComponent* LEye; // 0x1f98
	USkeletalMeshComponent* UpperHeadSkeletal; // 0x1fa0
	USkeletalMeshComponent* BodyArmor; // 0x1fa8
	USkeletalMeshComponent* Backpack; // 0x1fb0
	USkeletalMeshComponent* Feet; // 0x1fb8
	USkeletalMeshComponent* Legs; // 0x1fc0
	USkeletalMeshComponent* Head; // 0x1fc8
	USkeletalMeshComponent* Hands; // 0x1fd0
	USkeletalMeshComponent* Arms; // 0x1fd8
	USkeletalMeshComponent* Torso; // 0x1fe0
	UPrisonerThirdPersonSubviewComponent* TPV_Defecating; // 0x1fe8
	UPrisonerFirstPersonSubviewComponent* FPV_ClimbingWindow; // 0x1ff0
	UPrisonerThirdPersonSubviewComponent* TPV_ClimbingWindow; // 0x1ff8
	UPrisonerThirdPersonSubviewComponent* TPV_Diving; // 0x2000
	USceneComponent* TPViews; // 0x2008
	UPrisonerThirdPersonSubviewComponent* TPV_NarrowLadder; // 0x2010
	UPrisonerThirdPersonSubviewComponent* TPV_Ragdoll; // 0x2018
	UWidgetComponent* NameWidget; // 0x2020
	UPrisonerThirdPersonSubviewComponent* TPV_StandingMelee; // 0x2028
	UPrisonerFirstPersonSubviewComponent* FPV_StandingMelee; // 0x2030
	UPrisonerFirstPersonSubviewComponent* FPV_ProneAimingDownTheSights; // 0x2038
	UPrisonerFirstPersonSubviewComponent* FPV_CrouchingAimingDownTheSights; // 0x2040
	UPrisonerFirstPersonSubviewComponent* FPV_StandingAimingDownTheSights; // 0x2048
	UPrisonerFirstPersonSubviewComponent* FPV_ProneAiming; // 0x2050
	UPrisonerFirstPersonSubviewComponent* FPV_CrouchingAiming; // 0x2058
	UPrisonerFirstPersonSubviewComponent* FPV_StandingAiming; // 0x2060
	USceneComponent* FPViewsAiming; // 0x2068
	UPrisonerThirdPersonSubviewComponent* TPV_ProneAiming; // 0x2070
	UPrisonerThirdPersonSubviewComponent* TPV_CrouchingAiming; // 0x2078
	UPrisonerThirdPersonSubviewComponent* TPV_StandingAiming; // 0x2080
	UPrisonerFirstPersonSubviewComponent* FPV_Prone; // 0x2088
	UPrisonerFirstPersonSubviewComponent* FPV_Crouching; // 0x2090
	UPrisonerFirstPersonSubviewComponent* FPV_Standing; // 0x2098
	USceneComponent* FPViews; // 0x20a0
	UPrisonerThirdPersonSubviewComponent* TPV_Standing; // 0x20a8
	UPrisonerThirdPersonSubviewComponent* TPV_Prone; // 0x20b0
	UPrisonerThirdPersonSubviewComponent* TPV_Crouching; // 0x20b8
	UPrisonerFirstPersonViewComponent* FirstPersonView; // 0x20c0
	UPrisonerThirdPersonViewComponent* ThirdPersonView; // 0x20c8
	UCurveFloat* ShortHairCurve; // 0x20d0
	float IKoffsetLeftFootToRemove; // 0x20d8
	float IKoffsetRightFootToRemove; // 0x20dc
	float IKInterpSpeedToRemove; // 0x20e0
	FName LeftFootSocket; // 0x20e4
	FName RightFootSocket; // 0x20ec
	ABP_FootstepTracker_C* FootstepTracker; // 0x20f8
	bool IsHoldingObject; // 0x2100
	UPrimitiveComponent* BodyToMove; // 0x2108
	float TargetDistance; // 0x2110
	float TargetDistanceStep; // 0x2114
	float MaxVoiceDistance; // 0x2118
	bool IsVoiceActive; // 0x211c
	bool IgnorePenisPhysics; // 0x211d
	UCurveFloat* MediumHairCurve; // 0x2120
	UCurveFloat* MediumHairCurvePDO; // 0x2128
	UCurveFloat* MediumHairCurveTopOpacity; // 0x2130
	UCurveFloat* LongHairCurve; // 0x2138
	UCurveFloat* LongHairCurvePDO; // 0x2140
	UCurveFloat* LongHairCurveTopOpacity; // 0x2148
	UCurveFloat* ShortFacialHairCurve; // 0x2150
	UCurveFloat* MediumFacialHairCurve; // 0x2158
	UCurveFloat* MediumFacialHairCurvePDO; // 0x2160
	UCurveFloat* MediumFacialHairCurveTopOpacity; // 0x2168
	UCurveFloat* LongFacialHairCurve; // 0x2170
	UCurveFloat* LongFacialHairCurvePDO; // 0x2178
	UCurveFloat* LongFacialHairCurveTopOpacity; // 0x2180
	UCurveFloat* AfroMediumHairCurve; // 0x2188
};

struct UAlignObjectsTool : UMultiSelectionTool {
	UAlignObjectsToolProperties* AlignProps; // 0x98
};

struct UABP_SVD_Magazine_C : UWeaponAttachmentMagazineAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x398
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x3e0
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x428
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x470
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x4b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x568
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x590
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x5b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x5e0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x680
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x730
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x778
	FAnimNode_Slot AnimGraphNode_Slot; // 0x7c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x808
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x830
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x858
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x880
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x9d8
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0xa58
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0xaf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0xba8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0xc28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0xca8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0xd28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0xda8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xe28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xec8
};

struct UPrisonerBodyCondition_BasicInjury : UPrisonerBodyCondition_Injury {
	FRuntimeFloatCurve _severityVsDamageRatio; // 0xa8
	float _healingRate; // 0x130
	float _damage; // 0x134
	float _damageToRecover; // 0x138
};

struct UParticleModuleTypeDataMesh : UParticleModuleTypeDataBase {
	UStaticMesh* Mesh; // 0x30
	float LODSizeScale; // 0x40
	char bUseStaticMeshLODs : 1; // 0x44
	char CastShadows : 1; // 0x44
	char DoCollisions : 1; // 0x44
	EMeshScreenAlignment MeshAlignment; // 0x45
	char bOverrideMaterial : 1; // 0x46
	char bOverrideDefaultMotionBlurSettings : 1; // 0x46
	char bEnableMotionBlur : 1; // 0x46
	FRawDistributionVector RollPitchYawRange; // 0x48
	EParticleAxisLock AxisLockOption; // 0x90
	char bCameraFacing : 1; // 0x91
	EMeshCameraFacingUpAxis CameraFacingUpAxisOption; // 0x92
	EMeshCameraFacingOptions CameraFacingOption; // 0x93
	char bApplyParticleRotationAsSpin : 1; // 0x94
	char bFaceCameraDirectionRatherThanPosition : 1; // 0x94
	char bCollisionsConsiderPartilceSize : 1; // 0x94
};

struct UThrowingSkill : UDexteritySkill {
	float _minPlayRate; // 0xac
	float _maxPlayRate; // 0xb0
};

struct ABP_Survival_BagCrafting_CutRags_Objective_C : AChoppingObjective {
	USceneComponent* DefaultSceneRoot; // 0x368
};

struct UListView : UListViewBase {
	EOrientation Orientation; // 0x2d8
	ESelectionMode SelectionMode; // 0x2d9
	EConsumeMouseWheel ConsumeMouseWheel; // 0x2da
	bool bClearSelectionOnClick; // 0x2db
	bool bIsFocusable; // 0x2dc
	float EntrySpacing; // 0x2e0
	bool bReturnFocusToSelection; // 0x2e4
	TArray<UObject*> ListItems; // 0x2e8
	FMulticastInlineDelegate BP_OnEntryInitialized; // 0x308
	FMulticastInlineDelegate BP_OnItemClicked; // 0x318
	FMulticastInlineDelegate BP_OnItemDoubleClicked; // 0x328
	FMulticastInlineDelegate BP_OnItemIsHoveredChanged; // 0x338
	FMulticastInlineDelegate BP_OnItemSelectionChanged; // 0x348
	FMulticastInlineDelegate BP_OnItemScrolledIntoView; // 0x358
};

struct UInventoryPositionDataSelection : UInventoryPositionData {
	int32_t position; // 0x28
};

struct UFishSpeciesPreset : UDataAsset {
	TArray<FFishSpawnData> FishSpawnData; // 0x30
};

struct ACuttingObjective : ARequirementObjective {
	TArray<TSoftClassPtr<UObject>> _targetMeshes; // 0x330
	bool _specificItem; // 0x340
	AItem* _itemToFound; // 0x348
	int32_t _itemAmount; // 0x350
};

struct UActionProgressWidget : UDesignableUserWidget {
	FMulticastInlineDelegate ActionProgressFinishedEvent; // 0x278
	FMulticastInlineDelegate ActionProgressCancelledEvent; // 0x288
	bool CanCancel; // 0x298
	float _currentTime; // 0x2a4
	float _duration; // 0x2a8
	bool _manualMode; // 0x2ac
};

struct UVDColliderComponent : UActorComponent {
	UVDSimulation* SimulationInstance; // 0xb0
	TArray<FComponentReference> AssociatedVDComponents; // 0xb8
	char bAddAllComponents : 1; // 0xc8
	char bIgnoreConvexShapes : 1; // 0xc8
	TArray<FName> SpecificColliders; // 0xd0
};

struct URuntimeVirtualTexture : UObject {
	int32_t TileCount; // 0x28
	int32_t TileSize; // 0x2c
	int32_t TileBorderSize; // 0x30
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x34
	bool bCompressTextures; // 0x35
	bool bClearTextures; // 0x36
	bool bSinglePhysicalSpace; // 0x37
	bool bPrivateSpace; // 0x38
	bool bAdaptive; // 0x39
	bool bContinuousUpdate; // 0x3a
	int32_t RemoveLowMips; // 0x3c
	TextureGroup LODGroup; // 0x40
	int32_t Size; // 0x44
	URuntimeVirtualTextureStreamingProxy* StreamingTexture; // 0x48
};

struct UPrisonerAnimNotify_PlayGearSound : UAnimNotify {
	EMotionIntensity motionIntensity; // 0x38
};

struct UNavigationPath : UObject {
	FMulticastInlineDelegate PathUpdatedNotifier; // 0x28
	TArray<FVector> PathPoints; // 0x38
	ENavigationOptionFlag RecalculateOnInvalidation; // 0x48
};

struct UInterpFilter : UObject {
	FString Caption; // 0x28
};

struct UUI_SquadTooltip_C : UUserWidget {
	URetainerBox* RetainerBox_3; // 0x260
	UUI_SquadEmblem_C* SquadEmblem; // 0x268
	UTextBlock* SquadInformation; // 0x270
	UTextBlock* SquadName; // 0x278
};

struct UPrisonerAnimInstance : UAnimInstance {
	float SlowPaceLoopAnimSpeeds[0x16]; // 0x2b8
	float MediumPaceLoopAnimSpeeds[0x16]; // 0x310
	float FastPaceLoopAnimSpeeds[0x16]; // 0x368
	float MeleeCombatWalkUsageRadius; // 0x3c0
	float MeleeExhaustionFactorInterpSpeed; // 0x3c4
	float UpperEyelidsLookLeftFactor; // 0x3c8
	float LowerEyelidsLookLeftFactor; // 0x3cc
	float UpperEyelidsLookRightFactor; // 0x3d0
	float LowerEyelidsLookRightFactor; // 0x3d4
	float UpperEyelidsLookUpFactor; // 0x3d8
	float LowerEyelidsLookUpFactor; // 0x3dc
	float UpperEyelidsLookDownFactor; // 0x3e0
	float LowerEyelidsLookDownFactor; // 0x3e4
	bool AutoBlinkEnabled; // 0x3e8
	bool _fallWithStyle; // 0x488
	bool _isPrisonerCompletelyInitialized; // 0x489
	bool _isOwnerLocallyControlled; // 0x48a
	bool _isOwnerPlayerControlled; // 0x48b
	bool _isInFirstPersonView; // 0x48c
	bool _shouldOverrideIsInFirstPersonView; // 0x48d
	bool _isInFirstPersonViewOverride; // 0x48e
	bool _isAimingWeapon; // 0x48f
	bool _isAbleToFireWeapon; // 0x490
	EWeaponAimingType _weaponAimingType; // 0x491
	FVector _supportingHandIKLocation; // 0x494
	float _weaponAimYaw; // 0x4a0
	float _weaponAimPitch; // 0x4a4
	UAnimSequenceBase* _meleeSkill_PrimaryIdleAnimationTP; // 0x4a8
	UAnimSequenceBase* _meleeSkill_PrimaryIdleAnimationFP; // 0x4b0
	UAnimSequenceBase* _meleeSkill_TiredIdleAnimationTP; // 0x4b8
	UAnimSequenceBase* _meleeSkill_TiredIdleAnimationFP; // 0x4c0
	UAnimSequenceBase* _meleeSkill_WalkingIdleAnimationTP; // 0x4c8
	UAnimSequenceBase* _meleeSkill_WalkingIdleAnimationFP; // 0x4d0
	UAnimSequenceBase* _meleeSkill_BlockIdleAnimationTP; // 0x4d8
	UAnimSequenceBase* _meleeSkill_BlockIdleAnimationFP; // 0x4e0
	UBlendSpace* _meleeSkill_AimOffsetBlendSpaceTP; // 0x4e8
	UBlendSpace* _meleeSkill_AimOffsetBlendSpaceFP; // 0x4f0
	float _meleeSkill_IdleToBlockBlendDuration; // 0x4f8
	float _meleeSkill_BlockToIdleBlendDuration; // 0x4fc
	float _meleeSkill_ExhaustionFactor; // 0x500
	bool _shouldUseUnarmedCombatWalk; // 0x504
	bool _isHoldingBlock; // 0x505
	float _stamina; // 0x508
	float _bellyJiggleAmount; // 0x50c
	float _breastJiggleAmount; // 0x510
	FRotator _eyesRotationDelta; // 0x514
	float _minEyesRotationPitch; // 0x520
	float _maxEyesRotationPitch; // 0x524
	bool _shouldUseWeaponAnimationPose; // 0x528
	bool _shouldIgnoreSupportingHandIK; // 0x610
	float _firstPersonAimPitch; // 0x614
	float _firstPersonAimYawDelta; // 0x618
	bool _shouldAimDownTheSights; // 0x61c
	FVector _aimingDownTheSightsLocationOffset; // 0x620
	FVector _scopeViewArmDislocationOffset; // 0x62c
	FRotator _armsLagRotation; // 0x638
	float _armsLagPitch; // 0x644
	float _armsLagYaw; // 0x648
	EPrisonerStance _stance; // 0x64c
	float _crouchStage; // 0x650
	float _targetCrouchStage; // 0x654
	bool _isFreeLookEnabled; // 0x658
	bool _shouldIgnoreHeadTurning; // 0x659
	FRotator _aimOffset; // 0x65c
	float _leanAmount; // 0x668
	bool _shouldLookAtMeleeTarget; // 0x66c
	FRotator _lookAtMeleeTargetAimOffset; // 0x670
	EPrisonerAnimationSet _animationSet; // 0x67c
	bool _isInRagdoll; // 0x67d
	bool _isMovingOnGround; // 0x67e
	bool _isFalling; // 0x67f
	bool _isSwimming; // 0x680
	FVector _acceleration; // 0x684
	bool _wantsToMove; // 0x690
	bool _wantsToMoveHorizontallyOnly; // 0x691
	bool _wantsToMoveVerticallyOnly; // 0x692
	bool _wantsToWalk; // 0x693
	bool _wantsToJog; // 0x694
	bool _wantsToRun; // 0x695
	FVector _velocity; // 0x698
	float _speed; // 0x6a8
	float _speedXY; // 0x6ac
	float _maxSpeed; // 0x6b0
	float _stoppingDistance; // 0x6b4
	float _leftHandIKAmount; // 0x728
	float _desiredCourseAngle; // 0x72c
	float _desiredCoursePitchAngle; // 0x730
	float _actualCourseAngle; // 0x734
	EPrisonerMovementPace _desiredMovementPace; // 0x738
	EPrisonerMovementPace _clampedDesiredMovementPace; // 0x739
	EPrisonerMovementPace _movementPaceBeforeGroundStart; // 0x73a
	float _groundStartAnimPlayRate; // 0x73c
	float _legsPoseBeforeGroundStop; // 0x740
	ECardinalDirection _movementDirectionBeforeGroundStop; // 0x744
	EPrisonerMovementPace _movementPaceBeforeGroundStop; // 0x745
	EPrisonerAnimationSet _animationSetBeforeGroundStop; // 0x746
	bool _shouldUseLUGroundStopAnimation; // 0x747
	EHitReactState _hitReactState; // 0x748
	float _weightLoadFactor; // 0x74c
	bool _shouldUseJogStartForRunStart; // 0x750
	bool _useLocomotionAdditiveAnimations; // 0x751
	float _disorientation; // 0x754
	float _disorientationMultiplier; // 0x758
	bool _isLimping; // 0x75c
	bool _shouldRotateBonesWithFirstPersonAimPitch; // 0x75d
	float _jumpApex; // 0x764
	float _distanceToJumpApex; // 0x768
	float _legsPoseBeforeJump; // 0x76c
	EPrisonerMovementPace _movementPaceBeforeJump; // 0x770
	EPrisonerAnimationSet _animationSetBeforeJump; // 0x771
	bool _shouldJumpGoToFallingLoop; // 0x772
	float _waterImmersionDepth; // 0x774
	FVector _meshOffsetWhenInWater; // 0x778
	bool _wantsToDiveIn; // 0x784
	bool _isClimbing; // 0x858
	bool _isClimbingAnchoring; // 0x859
	UAnimSequenceBase* _climbAnchoringAnimation; // 0x8e8
	float _climbAnchoringAnimationTime; // 0x8f0
	bool _isClimbingLadder; // 0x8f4
	FVector _ladderClimbingRootBoneOffset; // 0x9b0
	float _ladderClimbingLoopState; // 0x9bc
	float _ladderClimbingLoopStateForPeeking; // 0x9c0
	float _ladderClimbingPeekState; // 0x9c4
	bool _isClimbingWindow; // 0x9c8
	bool _isClimbingWindowAnchoring; // 0x9c9
	UAnimSequenceBase* _windowClimbingAnchoringAnimation; // 0x9d0
	float _windowClimbingAnchoringAnimationTime; // 0x9d8
	EWeaponType _weaponType; // 0x9dc
	bool _isDedicatedServer; // 0x9dd
	UAnimSequenceBase* _itemFirstPersonUpperBodyStandIdle; // 0xd28
	UBlendSpace1D* _itemFirstPersonUpperBodyStandWalk; // 0xd30
	UBlendSpace1D* _itemFirstPersonUpperBodyStandWalkLimping; // 0xd38
	UBlendSpace1D* _itemFirstPersonUpperBodyStandJog; // 0xd40
	UBlendSpace1D* _itemFirstPersonUpperBodyStandJogLimping; // 0xd48
	UAnimSequenceBase* _itemFirstPersonUpperBodyStandRun; // 0xd50
	UAnimSequenceBase* _itemFirstPersonUpperBodyCrouchIdle; // 0xd58
	UBlendSpace1D* _itemFirstPersonUpperBodyCrouchWalk; // 0xd60
	UBlendSpace1D* _itemFirstPersonUpperBodyCrouchWalkLimping; // 0xd68
	UAnimSequenceBase* _itemFirstPersonUpperBodyProneIdle; // 0xd70
	UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyStandIdle; // 0xd78
	UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandWalk; // 0xd80
	UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandWalkLimping; // 0xd88
	UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandJog; // 0xd90
	UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandJogLimping; // 0xd98
	UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyStandRun; // 0xda0
	UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyCrouchIdle; // 0xda8
	UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyCrouchWalk; // 0xdb0
	UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyCrouchWalkLimping; // 0xdb8
	UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyProneIdle; // 0xdc0
	bool _shouldUseItemFirstPersonAimOffsets; // 0xdc8
	UBlendSpace* _itemFirstPersonAimOffsetStanding; // 0xdd0
	UBlendSpace* _itemFirstPersonAimOffsetCrouching; // 0xdd8
	UBlendSpace* _itemFirstPersonAimOffsetProne; // 0xde0
	UAnimSequenceBase* _rightHandCorrectionPoseStanding; // 0xde8
	UAnimSequenceBase* _rightHandCorrectionPoseCrouching; // 0xdf0
	UAnimSequenceBase* _rightHandCorrectionPoseProne; // 0xdf8
	UAnimSequenceBase* _rightFistCorrectionPoseStanding; // 0xe00
	UAnimSequenceBase* _rightFistCorrectionPoseStandingInCombatMode; // 0xe08
	UAnimSequenceBase* _rightFistCorrectionPoseCrouching; // 0xe10
	UAnimSequenceBase* _rightFistCorrectionPoseProne; // 0xe18
	float _rightHandToIdleBlendAlphaStanding; // 0xe20
	float _rightHandToIdleBlendAlphaCrouching; // 0xe24
	UAnimSequenceBase* _leftHandCorrectionPoseStanding; // 0xe28
	UAnimSequenceBase* _leftHandCorrectionPoseCrouching; // 0xe30
	UAnimSequenceBase* _leftHandCorrectionPoseProne; // 0xe38
	UAnimSequenceBase* _leftFistCorrectionPoseStanding; // 0xe40
	UAnimSequenceBase* _leftFistCorrectionPoseStandingInCombatMode; // 0xe48
	UAnimSequenceBase* _leftFistCorrectionPoseCrouching; // 0xe50
	UAnimSequenceBase* _leftFistCorrectionPoseProne; // 0xe58
	float _leftHandToIdleBlendAlphaStanding; // 0xe60
	float _leftHandToIdleBlendAlphaCrouching; // 0xe64
	bool _hasItemInHands; // 0xe70
	FVector _itemInHandsLeftHandLocationInRightHandSpace; // 0xe74
	FRotator _itemInHandsLeftHandRotationInRightHandSpace; // 0xe80
	float _itemInHandsObstructionDepth; // 0xe8c
	float _itemInHandsObstructionDepthSmoothed; // 0xe90
	bool _isItemInHandsObstructed; // 0xe94
	bool _isItemInHandsCompletelyObstructed; // 0xe95
	float _itemInHandsObstructionSide; // 0xe98
	UAnimSequenceBase* _itemInHandsLeftObstructedIdleFP; // 0xea0
	UAnimSequenceBase* _itemInHandsRightObstructedIdleFP; // 0xea8
	UAnimSequenceBase* _itemInHandsObstructedIdleTP; // 0xeb0
	UAnimSequenceBase* _itemInHandsObstructedIdleProneTP; // 0xeb8
	bool _isInCombatMode; // 0xec0
	bool _shouldUseHandCorrections; // 0xec1
	bool _shouldUseFistCorrections; // 0xec2
	bool _overrideFingersOnlyInProne; // 0xec3
	bool _ignoreAimOffsets; // 0xec4
	EPrisonerMontageBlendType _prisonerMontageBlendType; // 0xec5
	bool _isAimingBow; // 0xec6
	float _bowArmsShakeValue; // 0xec8
	bool _isScoping; // 0xecc
	TSet<UPrisonerResponseIdle*> _responseIdleClassReferences; // 0xf20
	bool _shouldUpperBodyBeUsedAsFullBodyInIdle; // 0xfa0
	bool _isPlayingInstrument; // 0xfa1
	UAnimSequenceBase* _playingInstrumentIdleAnimation; // 0xfa8
	UAnimSequenceBase* _playingInstrumentPlayAnimation; // 0xfb0
	EPlayingInstrumentState _playingInstrumentState; // 0xfb8
	bool _isCarryingItem; // 0xfb9
	UAnimSequenceBase* _carryingItemIdleFPAnimation; // 0xfc0
	UAnimSequenceBase* _carryingItemIdleTPAnimation; // 0xfc8
	ECarryingItemState _carryingItemState; // 0xfd0
	bool _isMounted; // 0xfd1
	EPrisonerAnimationMountType _mountType; // 0xfd2
	UAnimSequenceBase* _mountedAnimation; // 0xfd8
	bool _isVehicleDriver; // 0xfe0
	UBlendSpace* _vehicleDriverForwardIdleAnimation; // 0xfe8
	UAnimSequenceBase* _vehicleDriverForwardSteeringAnimation; // 0xff0
	UAnimSequenceBase* _vehicleDriverForwardSteeringAnimationFP; // 0xff8
	UBlendSpace* _vehicleDriverReverseIdleAnimation; // 0x1000
	UAnimSequenceBase* _vehicleDriverReverseSteeringAnimation; // 0x1008
	UAnimSequenceBase* _vehicleDriverReverseSteeringAnimationFP; // 0x1010
	UBlendSpace* _vehiclePassengerIdleAnimation; // 0x1018
	float _vehicleSpeed; // 0x1020
	float _vehicleSpeedKph; // 0x1024
	float _vehicleBumpiness; // 0x1028
	float _vehicleDriverSteeringAnimationTime; // 0x102c
	float _vehicleDriverSteeringAnimationTimeInterpSpeed; // 0x1030
	float _vehicleThrottleAmount; // 0x1034
	float _vehicleBrakeAmount; // 0x1038
	float _vehicleHandbrakeAmount; // 0x103c
	float _vehicleSteerAmount; // 0x1040
	bool _isSledgeAcceleratingForward; // 0x1044
	bool _isSledgeAcceleratingBackward; // 0x1045
	float _sledgeSlidingThresholdSpeed; // 0x1048
	bool _isSledgeSliding; // 0x104c
	UAnimSequenceBase* _bowArmsShakeAnimation; // 0x1050
	float _weaponBreathFactor; // 0x1058
	float _weaponAimDownTheSightsStillBlendFactor; // 0x105c
	bool _areHandsBound; // 0x1060
	UAnimSequenceBase* _handsBoundIdleFPAnimation; // 0x1068
	UAnimSequenceBase* _handsBoundIdleTPAnimation; // 0x1070
	bool _isResting; // 0x1078
	UAnimSequenceBase* _restingAnimation; // 0x1080
	float _restingFeetOffset; // 0x1088
	float _cameraToActorRotationDeltaYaw; // 0x108c
	float _cameraToActorRotationDeltaPitch; // 0x1090
	EVehicleWeaponAimingStance _vehicleWeaponAimingStance; // 0x1094
	bool _useMountedFirstPersonWeaponAimingParameters; // 0x1095
	FVector _vehicleWAPLocationOffsetDefaultStanceFP; // 0x1098
	FVector _vehicleWAPLocationOffsetLeaningStanceFP; // 0x10a4
	bool _useMountedThirdPersonWeaponAimingParameters; // 0x10b0
	UBlendSpace* _vehicleWAPAimOffsetTP; // 0x10b8
	bool _useVehicleWAPAimOffsetTP; // 0x10c0
	UBlendSpace* _vehicleWAPAimOffsetDefaultStanceTP; // 0x10c8
	bool _useVehicleWAPAimOffsetDefaultStanceTP; // 0x10d0
	UBlendSpace* _vehicleWAPAimOffsetLeaningStanceTP; // 0x10d8
	bool _useVehicleWAPAimOffsetLeaningStanceTP; // 0x10e0
	bool _useVehicleWAPUpperBodyIdleTP; // 0x10e1
	UAnimSequenceBase* _vehicleWAPUpperBodyIdleRelaxedTP; // 0x10e8
	UAnimSequenceBase* _vehicleWAPUpperBodyIdleAimingTP; // 0x10f0
	bool _useVehicleWAPLowerBodyIdleTP; // 0x10f8
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP; // 0x1100
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP; // 0x1108
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedDefaultTP; // 0x1110
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingDefaultTP; // 0x1118
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedLeaningTP; // 0x1120
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingLeaningTP; // 0x1128
	bool _isPlayingWAPStanceTransitionMontage; // 0x1130
	bool _isActivelyFishing; // 0x1131
	bool _isBaitingFish; // 0x1132
	bool _isGrappled; // 0x1133
};

struct UInterpData : UObject {
	float InterpLength; // 0x28
	float PathBuildTime; // 0x2c
	TArray<UInterpGroup*> InterpGroups; // 0x30
	UInterpCurveEdSetup* CurveEdSetup; // 0x40
	float EdSectionStart; // 0x48
	float EdSectionEnd; // 0x4c
	char bShouldBakeAndPrune : 1; // 0x50
	UInterpGroupDirector* CachedDirectorGroup; // 0x58
	TArray<FName> AllEventNames; // 0x60
};

struct UMIDIDeviceOutputController : UObject {
	int32_t DeviceID; // 0x28
	FString DeviceName; // 0x30
};

struct AAudioVolume : AVolume {
	float Priority; // 0x258
	char bEnabled : 1; // 0x25c
	FReverbSettings Settings; // 0x260
	FInteriorSettings AmbientZoneSettings; // 0x280
	TArray<FAudioVolumeSubmixSendSettings> SubmixSendSettings; // 0x2a8
	TArray<FAudioVolumeSubmixOverrideSettings> SubmixOverrideSettings; // 0x2b8
};

struct UMaterialExpressionDistance : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UCurveControlPointsMechanic : UInteractionMechanic {
	USingleClickInputBehavior* ClickBehavior; // 0x40
	UMouseHoverBehavior* HoverBehavior; // 0x48
	APreviewGeometryActor* PreviewGeometryActor; // 0x4e8
	UPointSetComponent* DrawnControlPoints; // 0x4f0
	ULineSetComponent* DrawnControlSegments; // 0x4f8
	UPointSetComponent* PreviewPoint; // 0x500
	ULineSetComponent* PreviewSegment; // 0x508
	UTransformProxy* PointTransformProxy; // 0x588
	UTransformGizmo* PointTransformGizmo; // 0x590
};

struct ALevelVariantSetsActor : AActor {
	FSoftObjectPath LevelVariantSets; // 0x220
};

struct UNiagaraDataInterfaceCamera : UNiagaraDataInterface {
	int32_t PlayerControllerIndex; // 0x38
	bool bRequireCurrentFrameData; // 0x3c
};

struct AFogSphere : AActor {
	bool _shouldExistOnDedicatedServer; // 0x220
	UCurveFloat* _densityVersusTimeOfDay; // 0x228
};

struct AHUD_John : AHUD {
	UFont* NormalFont; // 0x318
};

struct USlateSettings : UObject {
	bool bExplicitCanvasChildZOrder; // 0x28
};

struct UAudioBus : UObject {
	EAudioBusChannels AudioBusChannels; // 0x28
	bool bIsAutomatic; // 0x29
};

struct UParticleModuleTypeDataGpu : UParticleModuleTypeDataBase {
	FGPUSpriteEmitterInfo EmitterInfo; // 0x30
	FGPUSpriteResourceData ResourceData; // 0x2b0
	float CameraMotionBlurAmount; // 0x410
	char bClearExistingParticlesOnInit : 1; // 0x414
};

struct UFoliageType_InstancedStaticMesh : UFoliageType {
	UStaticMesh* Mesh; // 0x3a8
	TArray<UMaterialInterface*> OverrideMaterials; // 0x3b0
	UFoliageInstancedStaticMeshComponent* ComponentClass; // 0x3c0
};

struct UParticleModuleLocation : UParticleModuleLocationBase {
	FRawDistributionVector StartLocation; // 0x30
	float DistributeOverNPoints; // 0x78
	float DistributeThreshold; // 0x7c
};

struct UPartyBeaconState : UObject {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	int32_t NumTeams; // 0x38
	int32_t NumPlayersPerTeam; // 0x3c
	FName TeamAssignmentMethod; // 0x40
	int32_t ReservedHostTeamNum; // 0x48
	int32_t ForceTeamNum; // 0x4c
	bool bRestrictCrossConsole; // 0x50
	bool bEnableRemovalRequests; // 0x51
	TArray<FPartyReservation> Reservations; // 0x58
};

struct UMovieScene3DConstraintTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x78
};

struct UParticleModuleSubUV : UParticleModuleSubUVBase {
	USubUVAnimation* Animation; // 0x30
	FRawDistributionFloat SubImageIndex; // 0x38
	char bUseRealTime : 1; // 0x68
};

struct UMaterialExpressionTemporalSobol : UMaterialExpression {
	FExpressionInput Index; // 0x40
	FExpressionInput Seed; // 0x54
	uint32_t ConstIndex; // 0x68
	FVector2D ConstSeed; // 0x6c
};

struct UWmfMediaSettings : UObject {
	bool AllowNonStandardCodecs; // 0x28
	bool LowLatency; // 0x29
	bool NativeAudioOut; // 0x2a
	bool HardwareAcceleratedVideoDecoding; // 0x2b
};

struct UDatasmithStaticMeshComponentTemplate : UDatasmithObjectTemplate {
	UStaticMesh* StaticMesh; // 0x30
	TArray<UMaterialInterface*> OverrideMaterials; // 0x38
};

struct ABP_Survival_BagCrafting_CutUndershirt_Objective_C : AChoppingObjective {
	USceneComponent* DefaultSceneRoot; // 0x368
};

struct UMovieSceneColorSection : UMovieSceneSection {
	FMovieSceneFloatChannel RedCurve; // 0xe8
	FMovieSceneFloatChannel GreenCurve; // 0x188
	FMovieSceneFloatChannel BlueCurve; // 0x228
	FMovieSceneFloatChannel AlphaCurve; // 0x2c8
};

struct ABP_Survival_Tutorial_CutBushObjective_C : ACuttingObjective {
	USceneComponent* DefaultSceneRoot; // 0x360
};

struct UUI_ScrollBar_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* SliderImage; // 0x268
	FVector2D Size; // 0x270
	float _currentValue; // 0x278
	float _currentMaxCountOnScreen; // 0x27c
	float _currentMaxValue; // 0x280
	bool _shouldUpdate; // 0x284
	float _scrollBarHeight; // 0x288
	FMulticastInlineDelegate OnSliderMoved; // 0x290
};

struct UPrisonerBodyCondition_Hypothermia : UPrisonerBodyCondition {
	float _maxSeverity; // 0xa8
	float _bodyTemperatureToDie; // 0xac
	float _bodyTemperatureToExist; // 0xb0
	float _bodyTemperatureToRecover; // 0xb4
	float _bodyTemperatureSampleInterval; // 0xbc
	float _bodyTemperatureAtUntreatedStart; // 0xc8
	float _bodyTemperatureAtStabilizationStart; // 0xcc
	float _bodyTemperatureAtRecoveryStart; // 0xd0
	EPrisonerBodyConditionState _state; // 0xd4
	float _severityRatio; // 0xdc
	float _severityRatioAtUntreatedStart; // 0xe0
	float _severityRatioAtRecoveryStart; // 0xe4
	float _severityRatioInterpSpeed; // 0xec
};

struct UUI_WeaponAmmoDisplay_C : UWeaponAmmoDisplayWidget {
	UImage* Image; // 0x288
	UImage* Image_641; // 0x290
};

struct AAirplane : APawn {
	USkeletalMeshComponent* _meshComponent; // 0x2a8
	ULiftComponent* _liftComponent; // 0x2b0
	TMap<EAerodynamicSurfaceType, char> _aerodynamicSurfaceMap; // 0x2b8
	float _currentThrottleAmount; // 0x308
	float _maxThrottle; // 0x30c
	float _maxVelocity; // 0x310
	UPhysicsConstraintComponent* _rightWheelConstraint; // 0x328
	UPhysicsConstraintComponent* _leftWheelConstraint; // 0x330
	UPhysicsConstraintComponent* _rearWheelConstraint; // 0x338
	AProjectile* _projectileClass; // 0x348
	TArray<UAirplaneMountSlot*> _mountSlots; // 0x350
	float _maxDriveOrBoardAngle; // 0x3c0
	EConZPxDominanceGroup _physicsDominanceGroup; // 0x3c4
	FTimerHandle _physicsConstraintStabilizationTimerHandle; // 0x480
	float _fireInterval; // 0x490
	float _pushImpulseMagnitude; // 0x494
	UCurveFloat* _pushIntensityCurve; // 0x498
	float _pushDirectionRatioBetweenForwardAndUp; // 0x4a0
	float _maxDistanceToAllowThePush; // 0x4a4
	float _maxDistanceToAllowThePushStart; // 0x4a8
	float _pushStartAccelerationChange; // 0x4ac
	float _pushStartSpeedThresholdKph; // 0x4b0
	float _maxHealth; // 0x4c8
	float _engineBlockMaxHealth; // 0x4d0
	float _autoHealthDrainThreshold; // 0x4d4
	float _autoHealthDrain; // 0x4d8
	FRepairableParams _repairableParams; // 0x4e0
	TArray<FVehicleDamagedEffectsParameters> _damagedEffects; // 0x518
	FName _damageMaterialParameterName; // 0x538
	UVehicleHitZoneManager* _hitZones; // 0x540
	uint32_t _vehiclePartsStateFlags; // 0x548
	float _activeHitTimeToLive; // 0x550
	FVehicleImpactEffects _impactEffects[0x5]; // 0x558
	UCurveFloat* ImpactDamageVsNormalImpulse; // 0x670
	FVehicleSpawnParameters _spawnParameters; // 0x688
	FText _healthBarCaption; // 0x6d0
	UUserWidget* _mountSlotIndicatorsWidget; // 0x6e8
	AVehicleItemContainer* _itemContainerClass; // 0x6f0
	bool _shouldDropItemsWhenDestroyed; // 0x6f8
	AVehicleItemContainer* _itemContainer; // 0x700
	URadioComponent* _radioComponent; // 0x718
	bool _hasEngine; // 0x720
	float _engineIdleRpm; // 0x724
	float _engineMaxRpm; // 0x728
	EVehicleEngineState _engineState; // 0x738
	float _engineStallingForceMagnitude; // 0x748
	bool _canEngineBeStalledByAcceleration; // 0x7b0
	float _engineStallingByAccelerationSpeedThreshold; // 0x7b4
	float _engineStallingByAccelerationOccurrenceInterval; // 0x7b8
	UAkAudioEvent* _engineStallingByAccelerationAudioEvent; // 0x7c0
	TArray<float> _engineStallingByAccelerationAudioEventTriggerTimeRatios; // 0x7c8
	bool _canEngineBeStalledByUpShift; // 0x7d8
	float _engineStallingByUpShiftOccurrenceInterval; // 0x7dc
	UAkAudioEvent* _engineStallingByUpShiftAudioEvent; // 0x7e8
	TArray<float> _engineStallingByUpShiftAudioEventTriggerTimeRatios; // 0x7f0
	UAkAudioEvent* _engineStallingWhenStartingViaMotionAudioEvent; // 0x800
	TArray<float> _engineStallingWhenStartingViaMotionAudioEventTriggerTimeRatios; // 0x808
	bool _hasFuel; // 0x818
	UGameResourceType* _fuelResourceType; // 0x820
	float _maxFuelAmount; // 0x828
	float _fuelDrainWhenStartingEngine; // 0x82c
	FRuntimeFloatCurve _engineFuelDrainPerRpm; // 0x830
	float _engineFuelDrainPerRpmScale; // 0x8b8
	FRuntimeFloatCurve _engineFuelDrainPerRpmUnderLoad; // 0x8c0
	float _engineFuelDrainPerRpmUnderLoadScale; // 0x948
	float _fuelDrainWhenInactive; // 0x94c
	float _fuelFillingBaseDuration; // 0x950
	float _fillingDurationPerFuelAmountFilled; // 0x954
	float _experienceAwardedPerFuelAmountFilled; // 0x958
	UAnimMontage* _prisonerFillingFuelMontage; // 0x960
	UAkAudioEvent* _startFillingFuelAudioEvent; // 0x968
	UAkAudioEvent* _stopFillingFuelAudioEvent; // 0x970
	UAkAudioEvent* _startFillingFuelWithReplenishableResourceAudioEvent; // 0x978
	UAkAudioEvent* _stopFillingFuelWithReplenishableResourceAudioEvent; // 0x980
	FVector _fillFuelWithReplenishableResourceOverlapBoxExtent; // 0x988
	float _fuelDrainingBaseDuration; // 0x994
	float _drainingDurationPerFuelAmountDrained; // 0x998
	float _experienceAwardedPerFuelAmountDrained; // 0x99c
	UAnimMontage* _prisonerDrainingFuelMontage; // 0x9a0
	UAkAudioEvent* _startDrainingFuelAudioEvent; // 0x9a8
	UAkAudioEvent* _stopDrainingFuelAudioEvent; // 0x9b0
	FVehicleEngineStallingParameters _engineStallingParametersWhenOutOfFuel; // 0x9b8
	float _fuelUpdateInterval; // 0xa14
	bool _hasBattery; // 0xa20
	UGameResourceType* _batteryResourceType; // 0xa28
	float _maxBatteryAmount; // 0xa30
	float _batteryDrainWhenStartingEngine; // 0xa34
	float _batteryDrainWhenHornIsActive; // 0xa38
	float _batteryDrainWhenLightsAreActive; // 0xa3c
	float _batteryDrainWhenRadioIsTurnedOn; // 0xa40
	float _batteryDrainWhenInactive; // 0xa44
	FRuntimeFloatCurve _batteryDynamoChargePerKph; // 0xa48
	float _batteryDynamoChargePerKphScale; // 0xad0
	FRuntimeFloatCurve _batteryAlternatorChargePerRpm; // 0xad8
	float _batteryAlternatorChargePerRpmScale; // 0xb60
	float _batteryPowerReductionThreshold; // 0xb64
	float _startEngineDurationPenaltyWhenBatteryReducedInPower; // 0xb68
	float _batteryChargingBaseDuration; // 0xb6c
	float _chargingDurationPerBatteryAmountCharged; // 0xb70
	float _experienceAwardedPerBatteryAmountCharged; // 0xb74
	UAnimMontage* _prisonerChargingBatteryMontage; // 0xb78
	UAkAudioEvent* _startChargingBatteryAudioEvent; // 0xb80
	UAkAudioEvent* _stopChargingBatteryAudioEvent; // 0xb88
	float _batteryUpdateInterval; // 0xb94
	UAkAudioEvent* _engineStartingAudioEvent; // 0xbb0
	UAkAudioEvent* _engineStartedAudioEvent; // 0xbb8
	UAkAudioEvent* _engineTurnedOffAudioEvent; // 0xbc0
	UAkAudioEvent* _engineFailedToStartAudioEvent; // 0xbc8
	UAkAudioEvent* _engineFailedToStartNoFuelAudioEvent; // 0xbd0
	UAkAudioEvent* _engineFailedToStartNoBatteryAudioEvent; // 0xbd8
	UAkAudioEvent* _engineStalledAudioEvent; // 0xbe0
	UAkAudioEvent* _noFuelToStartEngineAudioEvent; // 0xbe8
	UAkAudioEvent* _noBatteryToStartEngineAudioEvent; // 0xbf0
	UAkAudioEvent* _hornStartAudioEvent; // 0xbf8
	UAkAudioEvent* _hornStopAudioEvent; // 0xc00
	UAkAudioEvent* _noBatteryToActivateHornAudioEvent; // 0xc08
	UAkAudioEvent* _lightsActivatedAudioEvent; // 0xc10
	UAkAudioEvent* _lightsDeactivatedAudioEvent; // 0xc18
	UAkAudioEvent* _noBatteryToActivateLightsAudioEvent; // 0xc20
	UAkAudioEvent* _noBatteryToTurnOnRadioAudioEvent; // 0xc28
	UAkAudioEvent* _gearUpAudioEvent; // 0xc30
	UAkAudioEvent* _gearDownAudioEvent; // 0xc38
	float _rpmScaleForSoundWhenSpeedIsEqualOrGreaterThanZero; // 0xc40
	float _rpmScaleForSoundWhenSpeedIsLessThanZero; // 0xc44
	float _soundCullDistance; // 0xc48
	float _vehicleRPMRTPCInterpolationTime; // 0xc4c
	float _vehicleLoadRTPCInterpolationTime; // 0xc50
	float _vehicleSpeedRTPCInterpolationTime; // 0xc54
	int32_t _numAudioObjectsForTires; // 0xc58
	FRepairableParams _repairableTireParams; // 0xc60
	float _tireEffectUpdateRange; // 0xc98
	TArray<FVehicleTireEffectProperties> _tireEffectProperties; // 0xcb8
	FVehicleExhaustEffects _exhaustEffects; // 0xce0
	bool _hornActive; // 0xd28
	bool _lightsActive; // 0xd29
	FVehicleMaterialParameterDescription _headlightsMaterialParameter; // 0xd2c
	FVehicleMaterialParameterDescription _reverseLightsMaterialParameter; // 0xd3c
	FVehicleMaterialParameterDescription _brakeLightsMaterialParameter; // 0xd4c
	float _brakeLightsAlwaysOnIfLightsAreActivated; // 0xd5c
	AVehicleCorpse* _corpseClass; // 0xd78
	float _sendStateInterval; // 0xd84
	float _makeNoiseInterval; // 0xd88
	float _maxNoiseLoudnessFromEngine; // 0xd8c
	float _maxNoiseLoudnessFromSpeed; // 0xd90
	float _speedThresholdInKphToAffectNavigation; // 0xd98
	float _allowedWaterImmersionDepth; // 0xda0
	float _disallowedWaterImmersionDepth; // 0xda4
	float _waterImmersionDepthToForceEvictMountees; // 0xda8
	float _timeToEvictMounteesWhenImmersedIntoWater; // 0xdac
	float _timeToForceEvictMounteesWhenImmersedIntoWater; // 0xdb0
	float _timeToAutoDestructWhenImmersedIntoWater; // 0xdb4
	float _explosionDamage; // 0xdb8
	float _explosionForce; // 0xdbc
	uint32_t _repHealthFuelBatteryAmount; // 0xe40
	uint64_t _repPackedSimulationState; // 0xe48
	EAITeam _aiTeam; // 0xe60
};

struct UPlaceableOnRackItemTag : UBaseItemTag {
	FName SocketName; // 0x30
};

struct UAnimMontage : UAnimCompositeBase {
	FAlphaBlend BlendIn; // 0xa8
	float BlendInTime; // 0xd8
	FAlphaBlend BlendOut; // 0xe0
	float BlendOutTime; // 0x110
	float BlendOutTriggerTime; // 0x114
	FName SyncGroup; // 0x118
	int32_t SyncSlotIndex; // 0x120
	FMarkerSyncData MarkerData; // 0x128
	TArray<FCompositeSection> CompositeSections; // 0x148
	TArray<FSlotAnimationTrack> SlotAnimTracks; // 0x158
	TArray<FBranchingPoint> BranchingPoints; // 0x168
	bool bEnableRootMotionTranslation; // 0x178
	bool bEnableRootMotionRotation; // 0x179
	bool bEnableAutoBlendOut; // 0x17a
	ERootMotionRootLock RootMotionRootLock; // 0x17b
	TArray<FBranchingPointMarker> BranchingPointMarkers; // 0x180
	TArray<int32_t> BranchingPointStateNotifyIndices; // 0x190
	FTimeStretchCurve TimeStretchCurve; // 0x1a0
	FName TimeStretchCurveName; // 0x1c8
};

struct UParticleModuleCameraOffset : UParticleModuleCameraBase {
	FRawDistributionFloat CameraOffset; // 0x30
	char bSpawnTimeOnly : 1; // 0x60
	EParticleCameraOffsetUpdateMethod UpdateMethod; // 0x64
};

struct APhysicsConstraintActor : ARigidBodyBase {
	UPhysicsConstraintComponent* ConstraintComp; // 0x220
	AActor* ConstraintActor1; // 0x228
	AActor* ConstraintActor2; // 0x230
	char bDisableCollision : 1; // 0x238
};

struct UItemClassWidget : UDesignableUserWidget {
	AItem* _itemClass; // 0x278
};

struct UJournalMissionContainer : UUserWidget {
	UVerticalBox* _missionItemWidgetsContainer; // 0x260
	UVerticalBox* _completedMissionItemWidgetsContainer; // 0x268
	UOverlay* _completedMissionsOverlay; // 0x270
	UTextBlock* _noContentText; // 0x278
	TMap<AMission*, TWeakObjectPtr<UMissionItemWidget>> _missionItemWidgets; // 0x288
	TMap<AMission*, TWeakObjectPtr<UMissionItemWidget>> _completedMissionItemWidgets; // 0x2d8
};

struct USlateWidgetStyleAsset : UObject {
	USlateWidgetStyleContainerBase* CustomStyle; // 0x28
};

struct UABP_Chainsaw_C : UChainsawAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x398
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x3e0
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x538
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x580
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x5c8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x610
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x6c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x6e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x710
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x738
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x7d8
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x888
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x8d0
	FAnimNode_Slot AnimGraphNode_Slot; // 0x918
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x960
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x988
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x9b0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x9d8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x9f8
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics; // 0xa20
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xe60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xf00
};

struct ABP_FishingRod_C : AFishingRod {
	FPointerToUberGraphFrame UberGraphFrame; // 0xac0
};

struct UUI_CC_NonSelectableText_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UImage* Image_1; // 0x280
	URetainerBox* RetainerBox_1; // 0x288
	USizeBox* SizeBox_1; // 0x290
	UTextBlock* TextBlock_1; // 0x298
	FText Text; // 0x2a0
	int32_t FontSize; // 0x2b8
	FMargin TextPadding; // 0x2bc
	FVector2D SizeOverride; // 0x2cc
	EHorizontalAlignment TextHorizontalAlignment; // 0x2d4
	FLinearColor TextColour; // 0x2d8
};

struct UInterpTrackInstSlomo : UInterpTrackInst {
	float OldTimeDilation; // 0x28
};

struct UConZGameInstance : UGameInstance {
	FCommonMapNames CommonMapNames; // 0x1a8
	FCharacterCreationMenuContext CharacterCreationMenuContext; // 0x1c0
	bool NetworkFailed; // 0x1f0
	bool WasKickedFromGameSession; // 0x1f1
	UGameplayLog* GameplayLogLogin; // 0x208
	UGameplayLog* GameplayLogAdmin; // 0x210
	UGameplayLog* GameplayLogKill; // 0x218
	UGameplayLog* GameplayLogViolations; // 0x220
	UGameplayLog* GameplayLogChat; // 0x228
	UGameplayLog* GameplayLogMine; // 0x230
	TMap<uint32_t, UDbConnection*> _databaseConnections; // 0x258
	UDedicatedServerRequest* _dedicatedServerRequest; // 0x2e0
	UUserManager* _userManager; // 0x2e8
	UUser* _currentUser; // 0x2f0
	UUserProfile* _currentUserProfile; // 0x2f8
	UTexture2D* _loadingScreenTexture; // 0x300
	ULoadingScreen* _loadingScreen; // 0x308
};

struct UMovieSceneEventTrack : UMovieSceneNameableTrack {
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	EFireEventsAtPosition EventPosition; // 0x84
	TArray<UMovieSceneSection*> Sections; // 0x88
};

struct UMaterialExpressionDeriveNormalZ : UMaterialExpression {
	FExpressionInput InXY; // 0x40
};

struct AActor : UObject {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bHidden : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bCanBeDamaged : 1; // 0x59
	char bBlockInput : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x170
	FMulticastSparseDelegate OnTakeAnyDamage; // 0x180
	FMulticastSparseDelegate OnTakePointDamage; // 0x181
	FMulticastSparseDelegate OnTakeRadialDamage; // 0x182
	FMulticastSparseDelegate OnActorBeginOverlap; // 0x183
	FMulticastSparseDelegate OnActorEndOverlap; // 0x184
	FMulticastSparseDelegate OnBeginCursorOver; // 0x185
	FMulticastSparseDelegate OnEndCursorOver; // 0x186
	FMulticastSparseDelegate OnClicked; // 0x187
	FMulticastSparseDelegate OnReleased; // 0x188
	FMulticastSparseDelegate OnInputTouchBegin; // 0x189
	FMulticastSparseDelegate OnInputTouchEnd; // 0x18a
	FMulticastSparseDelegate OnInputTouchEnter; // 0x18b
	FMulticastSparseDelegate OnInputTouchLeave; // 0x18c
	FMulticastSparseDelegate OnActorHit; // 0x18d
	FMulticastSparseDelegate OnDestroyed; // 0x18e
	FMulticastSparseDelegate OnEndPlay; // 0x18f
	TArray<UActorComponent*> InstanceComponents; // 0x1f0
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x200
};

struct UMaterialExpressionTransform : UMaterialExpression {
	FExpressionInput Input; // 0x40
	EMaterialVectorCoordTransformSource TransformSourceType; // 0x54
	EMaterialVectorCoordTransform TransformType; // 0x55
};

struct AGroomActor : AActor {
	UGroomComponent* GroomComponent; // 0x220
};

struct UNiagaraDataInterfaceArrayFloat4 : UNiagaraDataInterfaceArray {
	TArray<FVector4> FloatData; // 0x50
};

struct UNavigationInvokerComponent : UActorComponent {
	float TileGenerationRadius; // 0xb0
	float TileRemovalRadius; // 0xb4
	ANavigationData* NavigationDataToUpdate; // 0xb8
};

struct UInterpTrackColorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0x90
};

struct USpectatorPawnMovement : UFloatingPawnMovement {
	char bIgnoreTimeDilation : 1; // 0x150
};

struct UFishingReelAnimInstance : UAnimInstance {
	float _reelHandleRotationAnimationExplicitTime; // 0x2b8
	EPrisonerStance _owningPrisonerStance; // 0x2bc
	bool _isOwningPrisonerInFirstPersonView; // 0x2bd
	bool _isLocked; // 0x2be
	bool _isCasting; // 0x2bf
};

struct UInteractiveGizmo : UObject {
	UInputBehaviorSet* InputBehaviors; // 0x30
};

struct UNavModifierComponent : UNavRelevantComponent {
	UNavArea* AreaClass; // 0xe0
	FVector FailsafeExtent; // 0xe8
	char bIncludeAgentHeight : 1; // 0xf4
};

struct UABP_UMP45_C : UWeaponAttachmentMagazineAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x360
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x3f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x438
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x4e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x510
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x538
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x560
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x600
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x6b0
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x6f8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x740
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x788
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x7b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x7d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x800
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x958
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x9f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0xa78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0xb28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0xba8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0xc28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0xca8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0xd28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0xda8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xe28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xec8
};

struct UAnimBlueprintGeneratedClass : UBlueprintGeneratedClass {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x330
	USkeleton* TargetSkeleton; // 0x340
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x348
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x358
	TArray<FName> SyncGroupNames; // 0x428
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x438
	TMap<FName, FGraphAssetPlayerInformation> GraphAssetPlayerInformation; // 0x448
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x498
	FPropertyAccessLibrary PropertyAccessLibrary; // 0x4e8
};

struct UMaterialExpressionIf : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput AGreaterThanB; // 0x68
	FExpressionInput AEqualsB; // 0x7c
	FExpressionInput ALessThanB; // 0x90
	float EqualsThreshold; // 0xa4
	float ConstB; // 0xa8
	float ConstAEqualsB; // 0xac
};

struct AVolumetricCloud : AInfo {
	UVolumetricCloudComponent* VolumetricCloudComponent; // 0x220
};

struct UMotoSynthPreset : UObject {
	FMotoSynthRuntimeSettings Settings; // 0x28
};

struct UPolygonSelectionMechanicProperties : UInteractiveToolPropertySet {
	bool bSelectFaces; // 0x60
	bool bSelectEdges; // 0x61
	bool bSelectVertices; // 0x62
	bool bPreferProjectedElement; // 0x63
	bool bSelectDownRay; // 0x64
	bool bIgnoreOcclusion; // 0x65
};

struct UMaterialExpressionSubtract : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMaterialExpressionTextureCoordinate : UMaterialExpression {
	int32_t CoordinateIndex; // 0x40
	float UTiling; // 0x44
	float VTiling; // 0x48
	char UnMirrorU : 1; // 0x4c
	char UnMirrorV : 1; // 0x4c
};

struct ULoudnessNRT : UAudioSynesthesiaNRT {
	ULoudnessNRTSettings* Settings; // 0x78
};

struct UFishSpawningPreset : UDataAsset {
	float SpawningChance; // 0x30
	TMap<EAquaticIndividualSize, float> SpawningChanceBySizeMultiplier; // 0x38
};

struct UPrisonerLifeIndicatorsSprite_C : UPrisonerLifeIndicatorsSprite {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f0
	UWidgetAnimation* NewAnimation_2; // 0x2f8
	UImage* AbdomenInjury; // 0x300
	UImage* ArmLeftLowerInjury; // 0x308
	UImage* ArmLeftUpperInjury; // 0x310
	UImage* ArmRightLowerInjury; // 0x318
	UImage* ArmRightUpperInjury; // 0x320
	UScaleBox* BloodDropBox; // 0x328
	UImage* ChestInjury; // 0x330
	UCircularProgressBarSprites_C* CircularProgressBarSpritesAIPerception; // 0x338
	UCircularProgressBarSprites_C* CircularProgressBarSpritesHLTH; // 0x340
	UCircularProgressBarSprites_C* CircularProgressBarSpritesHYD; // 0x348
	UCircularProgressBarSprites_C* CircularProgressBarSpritesNoise; // 0x350
	UCircularProgressBarSprites_C* CircularProgressBarSpritesNRG; // 0x358
	UCircularProgressBarSprites_C* CircularProgressBarSpritesSTA; // 0x360
	UImage* HeadInjury; // 0x368
	UImage* Image_1; // 0x370
	UImage* Image_2; // 0x378
	UImage* LegLeftLowerInjury; // 0x380
	UImage* LegLeftUpperInjury; // 0x388
	UImage* LegRightLowerInjury; // 0x390
	UImage* LegRightUpperInjury; // 0x398
	UCanvasPanel* MPI_CanvasPanel; // 0x3a0
	APrisoner* _prisoner; // 0x3a8
	bool _isPrisonerSet; // 0x3b0
};

struct UBTTask_BlackboardBase : UBTTaskNode {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UARImageComponent : UARComponent {
	FARImageUpdatePayload ReplicatedPayload; // 0x280
};

struct UMetabolismMacronutrientReservesPanel : UUserWidget {
	UMetabolismMacronutrientReserve* _reserve_Protein; // 0x260
	UMetabolismMacronutrientReserve* _reserve_Carbs; // 0x268
	UMetabolismMacronutrientReserve* _reserve_Fat; // 0x270
	UMetabolismMacronutrientReserve* _reserve_Fiber; // 0x278
	UMetabolismMacronutrientReserve* _reserve_Sugar; // 0x280
	UMetabolismMacronutrientReserve* _reserve_SaturatedFat; // 0x288
	UMetabolismMacronutrientReserve* _reserve_Alcohol; // 0x290
};

struct UTimecodeProvider : UObject {
	float FrameDelay; // 0x28
};

struct UMeshSpaceDeformerTool : UMeshSurfacePointTool {
	ENonlinearOperationType SelectedOperationType; // 0xc0
	float UpperBoundsInterval; // 0xc4
	float LowerBoundsInterval; // 0xc8
	float ModifierPercent; // 0xcc
	bool bSnapToWorldGrid; // 0xd0
	UGizmoTransformChangeStateTarget* StateTarget; // 0xd8
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xe8
	FVector GizmoCenter; // 0x110
	FQuat GizmoOrientation; // 0x120
	UIntervalGizmo* IntervalGizmo; // 0x130
	UTransformGizmo* TransformGizmo; // 0x138
	UTransformProxy* TransformProxy; // 0x140
	UGizmoLocalFloatParameterSource* UpIntervalSource; // 0x148
	UGizmoLocalFloatParameterSource* DownIntervalSource; // 0x150
	UGizmoLocalFloatParameterSource* ForwardIntervalSource; // 0x158
};

struct UPrisonerBuryComponent : UCharacterActionComponent {
	EBuryState _buryState; // 0xc0
};

struct AWeaponAutoCrossbow : AWeapon {
	UWeaponStateFiring* FireState; // 0x2dd8
	float _muzzleVelocity; // 0x2de0
	float _probabilityForLaughingSoundEffect; // 0x2de4
	FCharacterAndItemAnimation _autoCrossbowFireAnimation; // 0x2de8
	UAkAudioEvent* _autoCrossbowLaughingAudioEvent; // 0x2df8
	UWeaponState* _autoCrossbowActiveState; // 0x2e00
	UGameResourceType* _fuelType; // 0x41a8
	FGameplayTagContainer _inFuelingSocketTypes; // 0x41b0
	float _maxFuelAmount; // 0x41d0
	float _fuelUsagePerHour; // 0x41d4
	float _fuelUsagePerHourWhenDamaged; // 0x41d8
	float _fuelFillingDurationPerAmountFilled; // 0x41dc
	float _fuelFillingDurationPerAmountFilledWhenDamaged; // 0x41e0
	float _fuelFillingExperiencePerAmount; // 0x41e4
	float _currentFuelAmount; // 0x41e8
};

struct UParticleModuleAccelerationOverLifetime : UParticleModuleAccelerationBase {
	FRawDistributionVector AccelOverLife; // 0x38
};

struct UMetabolismRadialAttributeProgressBar : UUserWidget {
	FMetabolismRadialAttributeProgressBarColor BackgroundColor; // 0x260
	FMetabolismRadialAttributeProgressBarColor BarColor; // 0x290
	FMetabolismRadialAttributeProgressBarColor BarGlowColor; // 0x2c0
	FMetabolismRadialAttributeProgressBarColor InnerGlowColor; // 0x2f0
	FMetabolismRadialAttributeProgressBarColor OuterGlowColor; // 0x320
	FMetabolismRadialAttributeProgressBarColor FontColor; // 0x350
	EDisposition PreviewState; // 0x380
	UImage* _coloredBackground; // 0x388
	UImage* _radialProgressBar; // 0x390
	URetainerBox* _fontEffectPass1; // 0x398
	URetainerBox* _fontEffectPass2; // 0x3a0
	UTextBlock* _attributeValueTextBlock; // 0x3a8
};

struct USafeZone : UContentWidget {
	bool PadLeft; // 0x120
	bool PadRight; // 0x121
	bool PadTop; // 0x122
	bool PadBottom; // 0x123
};

struct UCamouflageSkill : UIntelligenceSkill {
	float _activationTime; // 0xa8
	float _standingPenalty; // 0xac
	float _crouchingPenalty; // 0xb0
	float _pronePenalty; // 0xb4
	float _slowMovingStandingPenalty; // 0xb8
	float _slowMovingCrouchingPenalty; // 0xbc
	float _slowMovingPronePenalty; // 0xc0
	float _mediumMovingStandingPenalty; // 0xc4
	float _mediumMovingCrouchingPenalty; // 0xc8
	float _fastMovingStandingPenalty; // 0xcc
	float _standingAIPerceptionMultiplier; // 0xd0
	float _crouchingAIPerceptionMultiplier; // 0xd4
	float _proneAIPerceptionMultiplier; // 0xd8
	float _maxRelevantAIPerceptionRadius; // 0xdc
	FCamouflageSkillExperienceAwards NoSkillExperienceAwards; // 0x14c
	FCamouflageSkillExperienceAwards BasicSkillExperienceAwards; // 0x150
	FCamouflageSkillExperienceAwards MediumSkillExperienceAwards; // 0x154
	FCamouflageSkillExperienceAwards AdvancedSkillExperienceAwards; // 0x158
	FCamouflageSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0x15c
	FCamouflageSkillParametersPerSkillLevel NoSkillParameters; // 0x160
	FCamouflageSkillParametersPerSkillLevel BasicSkillParameters; // 0x170
	FCamouflageSkillParametersPerSkillLevel MediumSkillParameters; // 0x180
	FCamouflageSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x190
	FCamouflageSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x1a0
};

struct UAnimNotify_WeaponActionNotify : UAnimNotify {
	EWeaponActionNotifyType WeaponActionNotifyType; // 0x38
};

struct UStreamableRenderAsset : UObject {
	double ForceMipLevelsToBeResidentTimestamp; // 0x40
	int32_t NumCinematicMipLevels; // 0x48
	int32_t StreamingIndex; // 0x4c
	int32_t CachedCombinedLODBias; // 0x50
	char NeverStream : 1; // 0x54
	char bGlobalForceMipLevelsToBeResident : 1; // 0x54
	char bHasStreamingUpdatePending : 1; // 0x54
	char bForceMiplevelsToBeResident : 1; // 0x54
	char bIgnoreStreamingMipBias : 1; // 0x54
	char bUseCinematicMipLevels : 1; // 0x54
};

struct ASwitchActor : AActor {
	USceneComponent* SceneComponent; // 0x238
	int32_t LastSelectedOption; // 0x240
};

struct UDcxVehicleNoDriveComponent : UDcxVehicleWheelsComponent {
	bool bUseRawInput; // 0x240
	float MaxDriveTorque; // 0x244
};

struct UEditPivotToolActionPropertySet : UInteractiveToolPropertySet {
	bool bUseWorldBox; // 0x68
};

struct UButtonWidgetStyle : USlateWidgetStyleContainerBase {
	FButtonStyle ButtonStyle; // 0x30
};

struct UVoxelMorphologyMeshesToolProperties : UInteractiveToolPropertySet {
	EMorphologyOperation Operation; // 0x60
	double Distance; // 0x68
	bool bSolidifyInput; // 0x70
	bool bRemoveInternalsAfterSolidify; // 0x71
	double OffsetSolidifySurface; // 0x78
};

struct UPrisonerDebugUI_SkillEntryWidget : UUserWidget {
	UTextBlock* _nameTextBlock; // 0x268
};

struct UMovieSceneVectorTrack : UMovieScenePropertyTrack {
	int32_t NumChannelsUsed; // 0xb0
};

struct AWorldEventManager : AActor {
	TArray<AWorldEvent*> EventTypes; // 0x220
	float TimeBetweenEventsMin; // 0x230
	float TimeBetweenEventsMax; // 0x234
	TArray<AWorldEvent*> _events; // 0x240
};

struct UM1887_InsertShellLoopEmpty_C : UInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t RequestedAmmoCount; // 0xa8
	int32_t InsertedAmmoCount; // 0xac
	bool FinalSectionReached; // 0xb0
};

struct UInventoryItemComponentState : UItemComponentStateBase {
	TArray<FDbIntegerId> ContainedElementsIds; // 0x40
	TArray<FInv2021_InventoryPosition2D> ContainedElementsPositions; // 0x50
	float ContainedItemsWeight; // 0x60
};

struct USubUVAnimation : UObject {
	UTexture2D* SubUVTexture; // 0x28
	int32_t SubImages_Horizontal; // 0x30
	int32_t SubImages_Vertical; // 0x34
	ESubUVBoundingVertexCount BoundingMode; // 0x38
	EOpacitySourceMode OpacitySourceMode; // 0x39
	float AlphaThreshold; // 0x3c
};

struct UEditableTextBox : UWidget {
	FText Text; // 0x108
	FDelegate TextDelegate; // 0x120
	FEditableTextBoxStyle WidgetStyle; // 0x130
	USlateWidgetStyleAsset* Style; // 0x928
	FText HintText; // 0x930
	FDelegate HintTextDelegate; // 0x948
	FSlateFontInfo Font; // 0x958
	FLinearColor ForegroundColor; // 0x9b0
	FLinearColor BackgroundColor; // 0x9c0
	FLinearColor ReadOnlyForegroundColor; // 0x9d0
	bool IsReadOnly; // 0x9e0
	bool IsPassword; // 0x9e1
	float MinimumDesiredWidth; // 0x9e4
	FMargin Padding; // 0x9e8
	bool IsCaretMovedWhenGainFocus; // 0x9f8
	bool SelectAllTextWhenFocused; // 0x9f9
	bool RevertTextOnEscape; // 0x9fa
	bool ClearKeyboardFocusOnCommit; // 0x9fb
	bool SelectAllTextOnCommit; // 0x9fc
	bool AllowContextMenu; // 0x9fd
	EVirtualKeyboardType KeyboardType; // 0x9fe
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x9ff
	EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0xa00
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xa01
	ETextJustify Justification; // 0xa02
	FShapedTextOptions ShapedTextOptions; // 0xa03
	FMulticastInlineDelegate OnTextChanged; // 0xa08
	FMulticastInlineDelegate OnTextCommitted; // 0xa18
};

struct UParticleModuleAttractorLine : UParticleModuleAttractorBase {
	FVector EndPoint0; // 0x30
	FVector EndPoint1; // 0x3c
	FRawDistributionFloat Range; // 0x48
	FRawDistributionFloat Strength; // 0x78
};

struct UInAppPurchaseQueryCallbackProxy2 : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UWaterSplineComponent : USplineComponent {
	FWaterSplineCurveDefaults WaterSplineDefaults; // 0x540
	FWaterSplineCurveDefaults PreviousWaterSplineDefaults; // 0x550
};

struct UProceduralCylinderToolProperties : UProceduralShapeToolProperties {
	float Radius; // 0x70
	float Height; // 0x74
	int32_t RadialSlices; // 0x78
	int32_t HeightSubdivisions; // 0x7c
};

struct USubmixEffectStereoDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectStereoDelaySettings Settings; // 0xb4
};

struct UWeaponActionReloadSequence : UWeaponAction {
	FBodyWeaponAnimation AnimationStandAndCrouch; // 0x28
	FBodyWeaponAnimation AnimationProne; // 0x38
	bool CanBeInterrupted; // 0x48
};

struct ADrone : AConZCharacter {
	UAkAudioEvent* _engineAudioEvent; // 0x798
	UAkAudioEvent* _engineStopAudioEvent; // 0x7a0
	TArray<float> _speedSteps; // 0x7a8
	float _movementInertiaAI; // 0x7b8
	float _movementRotationSpeedExpFactor; // 0x7bc
	float _engineParticlesChangeSpeedExpFactor; // 0x7c0
	UCurveFloat* _engineVolumeFromSpeed; // 0x7c8
	float _movementBreathingInterval; // 0x7d0
	float _movementBreathingIntensity; // 0x7d4
	UParticleSystem* _selfDestructParticles; // 0x7d8
	UParticleSystem* _smokeParticles; // 0x7e0
	UParticleSystemComponent* _smokeParticleSystemComponent; // 0x7e8
	UAkAudioEvent* _selfDestructAudioEvent; // 0x7f0
	char _currentSpeedStep; // 0x810
	float _movementInertia; // 0x814
	UStaticMeshComponent* _cameraMesh; // 0x820
	UParticleSystemComponent* _engineParticlesM; // 0x828
	UParticleSystemComponent* _engineParticlesML; // 0x830
	UParticleSystemComponent* _engineParticlesMR; // 0x838
	UParticleSystemComponent* _engineParticlesLL; // 0x840
	UParticleSystemComponent* _engineParticlesLR; // 0x848
	USpotLightComponent* _lightComponent; // 0x850
	float _health; // 0x894
};

struct UAddPatchTool : USingleClickTool {
	UAddPatchToolProperties* ShapeSettings; // 0x90
	UNewMeshMaterialProperties* MaterialProperties; // 0x98
	UPreviewMesh* PreviewMesh; // 0xa0
};

struct UParticleModuleVelocityBase : UParticleModule {
	char bInWorldSpace : 1; // 0x30
	char bApplyOwnerScale : 1; // 0x30
};

struct USubmixEffectDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectDelaySettings Settings; // 0x9c
	FSubmixEffectDelaySettings DynamicSettings; // 0xa8
};

struct UDropdownMenuWidget : UUserWidget {
	FDelegate OnUpdate; // 0x260
	UNamedSlot* _panelSlot; // 0x278
};

struct UEmblemData : UDataAsset {
	TArray<UTexture2D*> BackgroundTextures; // 0x30
	TArray<UTexture2D*> SymbolTextures; // 0x40
	TArray<FLinearColor> ColorPalette; // 0x50
};

struct UAnimSharingTransitionInstance : UAnimInstance {
	TWeakObjectPtr<USkeletalMeshComponent> FromComponent; // 0x2b8
	TWeakObjectPtr<USkeletalMeshComponent> ToComponent; // 0x2c0
	float BlendTime; // 0x2c8
	bool bBlendBool; // 0x2cc
};

struct UInvalidationBox : UContentWidget {
	bool bCanCache; // 0x120
	bool CacheRelativeTransforms; // 0x121
};

struct ULevel : UObject {
	UWorld* OwningWorld; // 0xb8
	UModel* Model; // 0xc0
	TArray<UModelComponent*> ModelComponents; // 0xc8
	ULevelActorContainer* ActorCluster; // 0xd8
	int32_t NumTextureStreamingUnbuiltComponents; // 0xe0
	int32_t NumTextureStreamingDirtyResources; // 0xe4
	ALevelScriptActor* LevelScriptActor; // 0xe8
	ANavigationObjectBase* NavListStart; // 0xf0
	ANavigationObjectBase* NavListEnd; // 0xf8
	TArray<UNavigationDataChunk*> NavDataChunks; // 0x100
	float LightmapTotalSize; // 0x110
	float ShadowmapTotalSize; // 0x114
	TArray<FVector> StaticNavigableGeometry; // 0x118
	TArray<FGuid> StreamingTextureGuids; // 0x128
	FGuid LevelBuildDataId; // 0x1d0
	UMapBuildDataRegistry* MapBuildData; // 0x1e0
	FIntVector LightBuildLevelOffset; // 0x1e8
	char bIsLightingScenario : 1; // 0x1f4
	char bTextureStreamingRotationChanged : 1; // 0x1f4
	char bStaticComponentsRegisteredInStreamingManager : 1; // 0x1f4
	char bIsVisible : 1; // 0x1f4
	AWorldSettings* WorldSettings; // 0x258
	TArray<UAssetUserData*> AssetUserData; // 0x268
	TArray<FReplicatedStaticActorDestructionInfo> DestroyedReplicatedStaticActors; // 0x288
};

struct AConZGameMode : AGameMode {
	UDoorLockingRegistry* _doorLockingRegistry; // 0x338
	APrisoner* _prisonerClassToSpawn; // 0x340
	ADrone* _droneClassToSpawn; // 0x348
	AItemSpawningManager* _itemSpawningManagerClass; // 0x460
	AItemSpawningManager* _itemSpawningManager; // 0x468
	AItemVirtualizationManager* _itemVirtualizationManagerClass; // 0x470
	AItemVirtualizationManager* _itemVirtualizationManager; // 0x478
	AGlobalAnimalSpawner* _globalAnimalSpawner; // 0x480
	AGlobalBirdSpawner2* _globalBirdSpawner; // 0x488
	AVehicleSpawningManager* _vehicleSpawningManagerClass; // 0x490
	AVehicleSpawningManager* _vehicleSpawningManager; // 0x498
	AReportingManager* _reportingManagerClass; // 0x4a0
	AReportingManager* _reportingManager; // 0x4a8
	ACharacterSpawningManager* _characterSpawningManagerClass; // 0x4b0
	ACharacterSpawningManager* _characterSpawningManager; // 0x4b8
	AGlobalAquaticLifeManager* _globalAquaticLifeManagerClass; // 0x4c0
	AGlobalAquaticLifeManager* _globalAquaticLifeManager; // 0x4c8
	AGlobalGuardedZoneManager* _globalGuardedZoneManagerClass; // 0x4d0
	AGlobalGuardedZoneManager* _globalGuardedZoneManager; // 0x4d8
	AAchievementsManagerServer* _achievementsManagerServerClass; // 0x4e0
	AAchievementsManagerServer* _achievementsManagerServer; // 0x4e8
	AMissionLevelManager* _missionLevelManagerClass; // 0x4f0
	AMissionLevelManager* _missionLevelManager; // 0x4f8
	AMissionScheduler* _missionSchedulerClass; // 0x500
	AMissionScheduler* _missionScheduler; // 0x508
	ASurvivalStatsHandler* _survivalStatsHandlerClass; // 0x510
	ASurvivalStatsHandler* _survivalStatsHandler; // 0x518
	AHeatSourceManager* _heatSourceManagerClass; // 0x520
	AHeatSourceManager* _heatSourceManager; // 0x528
	AConZBaseManager* _baseManagerClass; // 0x530
	AConZBaseManager* _baseManager; // 0x538
	URainCollectionManager* _rainCollectionManager; // 0x540
	ALadderMarkersReplicator* _ladderMarkersReplicatorClass; // 0x548
	ALadderMarkersReplicator* _ladderMarkersReplicator; // 0x550
	AEffectOverTimeDealer* _effectOverTimeDealerClass; // 0x558
	AEffectOverTimeDealer* _effectOverTimeDealer; // 0x560
	ANotificationsManager* _notificationManagerClass; // 0x568
	ANotificationsManager* _notificationManager; // 0x570
	AVoteSystemManager* _voteSystemManagerClass; // 0x578
	AVoteSystemManager* _voteSystemManager; // 0x580
	AServerAnalyticsManager* _serverAnalyticsManagerClass; // 0x588
	AServerAnalyticsManager* _serverAnalyticsManager; // 0x590
	AAIDetectionTimerHandler* _aiDetectionTimerHandlerClass; // 0x598
	AAIDetectionTimerHandler* _aiDetectionTimerHandler; // 0x5a0
	UDedicatedServerResponse* _serverResponse; // 0x5a8
};

struct UExplosiveProtectionItemComponent : UItemComponent {
	AMinigame* _minigameClass; // 0xc0
	UBaseItemTag* _minigameToolTag; // 0xc8
	FLockData _lockData; // 0xd0
	UParticleSystem* _explosionParticles; // 0x158
	FVector _explosionParticlesLocation; // 0x160
	UAkAudioEvent* _explosionAudioEvent; // 0x170
	float _explosionBaseDamage; // 0x178
	float _explosionMinimalDamage; // 0x17c
	float _explosionDamagePositionOffset; // 0x180
	float _explosionDamageFalloff; // 0x184
	float _explosionInnerRadius; // 0x188
	float _explosionOuterRadius; // 0x18c
	float _hearingDamageRadius; // 0x190
	UMatineeCameraShake* _explosionCameraShakeClass; // 0x198
	bool _isArmed; // 0x1a0
};

struct UReplicationGraphNode_AlwaysRelevant : UReplicationGraphNode {
	UReplicationGraphNode* ChildNode; // 0x50
};

struct UClothLODDataCommon_Legacy : UObject {
	UClothPhysicalMeshDataBase_Legacy* PhysicalMeshData; // 0x28
	FClothPhysicalMeshData ClothPhysicalMeshData; // 0x30
	FClothCollisionData CollisionData; // 0x128
};

struct UMeleeSkillAnimationsPreset : UDataAsset {
	FMeleeSkillAnimations NoSkillAnimations; // 0x30
	FMeleeSkillAnimations BasicSkillAnimations; // 0xc8
	FMeleeSkillAnimations MediumSkillAnimations; // 0x160
	FMeleeSkillAnimations AdvancedSkillAnimations; // 0x1f8
	FMeleeSkillParametersPerSkillLevel NoSkillParameters; // 0x290
	FMeleeSkillParametersPerSkillLevel BasicSkillParameters; // 0x318
	FMeleeSkillParametersPerSkillLevel MediumSkillParameters; // 0x3a0
	FMeleeSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x428
	float NoSkillDamageMultiplier; // 0x4b0
	float BasicSkillDamageMultiplier; // 0x4b4
	float MediumSkillDamageMultiplier; // 0x4b8
	float AdvancedSkillDamageMultiplier; // 0x4bc
	float AboveAdvancedSkillDamageMultiplier; // 0x4c0
};

struct ANotificationsManager : AActor {
	TMap<FDbIntegerId, UNotificationDescription*> _queuedNotifications; // 0x220
	int64_t _notificationTimeout; // 0x2c0
};

struct AStaticMeshActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x220
	bool bStaticMeshReplicateMovement; // 0x228
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x229
};

struct UObjectiveItemWidget : UUserWidget {
	UTextBlock* _objectiveItemText; // 0x260
	UImage* _bullet; // 0x268
	UImage* _bulletCompleted; // 0x270
	FLinearColor _objectiveActiveColor; // 0x278
	FLinearColor _objectiveCompletedColor; // 0x288
	FLinearColor _objectiveFailedColor; // 0x298
};

struct UInterpTrackVisibility : UInterpTrack {
	TArray<FVisibilityTrackKey> VisibilityTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UNavigationGraphNodeComponent : USceneComponent {
	FNavGraphNode Node; // 0x1f8
	UNavigationGraphNodeComponent* NextNodeComponent; // 0x210
	UNavigationGraphNodeComponent* PrevNodeComponent; // 0x218
};

struct UConsoleSettings : UObject {
	int32_t MaxScrollbackSize; // 0x28
	TArray<FAutoCompleteCommand> ManualAutoCompleteList; // 0x30
	TArray<FString> AutoCompleteMapPaths; // 0x40
	float BackgroundOpacityPercentage; // 0x50
	bool bOrderTopToBottom; // 0x54
	bool bDisplayHelpInAutoComplete; // 0x55
	FColor InputColor; // 0x58
	FColor HistoryColor; // 0x5c
	FColor AutoCompleteCommandColor; // 0x60
	FColor AutoCompleteCVarColor; // 0x64
	FColor AutoCompleteFadedColor; // 0x68
};

struct UOperatorField : UFieldNodeBase {
	float Magnitude; // 0xb0
	UFieldNodeBase* RightField; // 0xb8
	UFieldNodeBase* LeftField; // 0xc0
	EFieldOperationType Operation; // 0xc8
};

struct ASceneCapture : AActor {
	UStaticMeshComponent* MeshComp; // 0x220
	USceneComponent* SceneComponent; // 0x228
};

struct UAISystem : UAISystemBase {
	FSoftClassPath PerceptionSystemClassName; // 0x58
	FSoftClassPath HotSpotManagerClassName; // 0x70
	float AcceptanceRadius; // 0x88
	float PathfollowingRegularPathPointAcceptanceRadius; // 0x8c
	float PathfollowingNavLinkAcceptanceRadius; // 0x90
	bool bFinishMoveOnGoalOverlap; // 0x94
	bool bAcceptPartialPaths; // 0x95
	bool bAllowStrafing; // 0x96
	bool bEnableBTAITasks; // 0x97
	bool bAllowControllersAsEQSQuerier; // 0x98
	bool bEnableDebuggerPlugin; // 0x99
	bool bForgetStaleActors; // 0x9a
	bool bAddBlackboardSelfKey; // 0x9b
	ECollisionChannel DefaultSightCollisionChannel; // 0x9c
	UBehaviorTreeManager* BehaviorTreeManager; // 0xa0
	UEnvQueryManager* EnvironmentQueryManager; // 0xa8
	UAIPerceptionSystem* PerceptionSystem; // 0xb0
	TArray<UAIAsyncTaskBlueprintProxy*> AllProxyObjects; // 0xb8
	UAIHotSpotManager* HotSpotManager; // 0xc8
	UNavLocalGridManager* NavLocalGrids; // 0xd0
};

struct AIntervalGizmoActor : AGizmoActor {
	UGizmoLineHandleComponent* UpIntervalComponent; // 0x220
	UGizmoLineHandleComponent* DownIntervalComponent; // 0x228
	UGizmoLineHandleComponent* ForwardIntervalComponent; // 0x230
};

struct UAppleImageUtilsBaseAsyncTaskBlueprintProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
	FAppleImageUtilsImageConversionResult ConversionResult; // 0x60
};

struct UInteractionContainerUserWidget : UDesignableUserWidget {
	UVerticalBox* _actionContainer; // 0x290
	TWeakObjectPtr<AActor> _underlyingInteractableActor; // 0x2a4
};

struct UDialogueWave : UObject {
	char bMature : 1; // 0x28
	char bOverride_SubtitleOverride : 1; // 0x28
	FString SpokenText; // 0x30
	FString SubtitleOverride; // 0x40
	TArray<FDialogueContextMapping> ContextMappings; // 0x50
	FGuid LocalizationGUID; // 0x60
};

struct ASlidingDoorDestructible : ADoor {
	USceneComponent* ClosedPositionComponent; // 0x408
	USceneComponent* OpenPositionComponent; // 0x410
};

struct UAnimCompress_RemoveTrivialKeys : UAnimCompress {
	float MaxPosDiff; // 0x40
	float MaxAngleDiff; // 0x44
	float MaxScaleDiff; // 0x48
};

struct UTabButton : UUserWidget {
	bool PreviewSelectedState; // 0x2c8
	UButton* _button; // 0x2d0
	UTextBlock* _text; // 0x2d8
	USizeBox* _sizeBox; // 0x2e0
	FText _initialTitle; // 0x2e8
	FTabButtonStyle _selectedButtonStyle; // 0x300
	FTabButtonStyle _selectedUnfocusedButtonStyle; // 0x588
	FTabButtonStyle _deselectedButtonStyle; // 0x810
	FTabTextStyle _selectedTextStyle; // 0xa98
	FTabTextStyle _selectedUnfocusedTextStyle; // 0xb30
	FTabTextStyle _deselectedTextStyle; // 0xbc8
};

struct AWaterMeshActor : AActor {
	UTexture2D* WaterVelocityTexture; // 0x220
	UWaterMeshComponent* WaterMesh; // 0x228
};

struct AAnimalContinuousChargeAttackAIController : AComplexAnimalAIController {
	float LockAttackDirectionDistance; // 0x4d8
	float ContinueAttackDistance; // 0x4dc
};

struct UABP_Prisoner_SpineLeaning_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose; // 0x2f8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_5; // 0x410
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_4; // 0x518
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0x620
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x728
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x830
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x938
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x958
	float LeanAmount; // 0x978
	float Spine1LeanAngle; // 0x97c
	float Spine2LeanAngle; // 0x980
	float Spine3LeanAngle; // 0x984
	float RibcageLeanAngle; // 0x988
};

struct UUI_PlacedPlaceablesWidget_C : UPlacedPlaceableWidget {
	TArray<UUI_PlacedPlaceableIcon_C*> _icons; // 0x2d0
	int32_t _placeableIndex; // 0x2e0
};

struct UCraftingAvailableItemWidget : UDesignableUserWidget {
	FMulticastInlineDelegate OnClicked; // 0x278
	bool _isSelected; // 0x288
	bool _isOptional; // 0x289
	EOptionalState _optionalState; // 0x28a
	AItem* _item; // 0x290
	UAkAudioEvent* _clickSound; // 0x298
};

struct UVehicle2WDriverMountSlot : UVehicle2WMountSlot {
	UBlendSpace* _forwardIdleAnimation; // 0x148
	UAnimSequenceBase* _forwardSteeringAnimation; // 0x150
	UAnimSequenceBase* _forwardSteeringAnimationFP; // 0x158
	UBlendSpace* _reverseIdleAnimation; // 0x160
	UAnimSequenceBase* _reverseSteeringAnimation; // 0x168
	UAnimSequenceBase* _reverseSteeringAnimationFP; // 0x170
	UAnimSequence* _standUpStartAnimation; // 0x178
	UAnimSequence* _standUpLoopAnimation; // 0x180
	UAnimSequence* _standUpEndAnimation; // 0x188
	UAnimSequence* _startEngineStartAnimation; // 0x190
	UAnimSequence* _startEngineLoopAnimation; // 0x198
	UAnimSequence* _startEngineLongLoopAnimation; // 0x1a0
	UAnimSequence* _startEngineEndAnimation; // 0x1a8
};

struct UGrappleActionComponent : UActorComponent {
	AConZCharacter* _grappler; // 0xb0
	APrisoner* _prisonerVictim; // 0xb8
	UGrappleActionParameters* _grappleActionParameters; // 0xc0
};

struct UPrisonerBodyConditionOrSymptomSideEffect_DoubleVision : UPrisonerBodyConditionOrSymptomSideEffect {
	UPrisonerBodySymptom_DoubleVision* _symptomClass; // 0x30
	UPrisonerBodySymptomCause_DoubleVision* _symptomCause; // 0x38
	FRuntimeFloatCurve _intensityVsSeverity; // 0x40
};

struct UPrimitiveComponent : USceneComponent {
	float MinDrawDistance; // 0x200
	bool UseHLODMinDrawDistance; // 0x204
	float LDMaxDrawDistance; // 0x208
	float CachedMaxDrawDistance; // 0x20c
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x210
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x211
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x212
	ELightmapType LightmapType; // 0x213
	char bUseMaxLODAsImposter : 1; // 0x214
	char bBatchImpostersAsInstances : 1; // 0x214
	char bNeverDistanceCull : 1; // 0x214
	char bAlwaysCreatePhysicsState : 1; // 0x214
	char bGenerateOverlapEvents : 1; // 0x215
	char bMultiBodyOverlap : 1; // 0x215
	char bTraceComplexOnMove : 1; // 0x215
	char bReturnMaterialOnMove : 1; // 0x215
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x215
	char bAllowCullDistanceVolume : 1; // 0x215
	char bHasMotionBlurVelocityMeshes : 1; // 0x215
	char bVisibleInReflectionCaptures : 1; // 0x215
	char bVisibleInRealTimeSkyCaptures : 1; // 0x216
	char bVisibleInRayTracing : 1; // 0x216
	char bRenderInMainPass : 1; // 0x216
	char bRenderInDepthPass : 1; // 0x216
	char bReceivesDecals : 1; // 0x216
	char bOwnerNoSee : 1; // 0x216
	char bOnlyOwnerSee : 1; // 0x216
	char bTreatAsBackgroundForOcclusion : 1; // 0x216
	char bUseAsOccluder : 1; // 0x217
	char bSelectable : 1; // 0x217
	char bForceMipStreaming : 1; // 0x217
	char bHasPerInstanceHitProxies : 1; // 0x217
	char CastShadow : 1; // 0x217
	char bAffectDynamicIndirectLighting : 1; // 0x217
	char bAffectDistanceFieldLighting : 1; // 0x217
	char bCastDynamicShadow : 1; // 0x217
	char bCastStaticShadow : 1; // 0x218
	char bCastVolumetricTranslucentShadow : 1; // 0x218
	char bCastContactShadow : 1; // 0x218
	char bSelfShadowOnly : 1; // 0x218
	char bCastFarShadow : 1; // 0x218
	char bCastInsetShadow : 1; // 0x218
	char bCastCinematicShadow : 1; // 0x218
	char bCastHiddenShadow : 1; // 0x218
	char bCastShadowAsTwoSided : 1; // 0x219
	char bLightAsIfStatic : 1; // 0x219
	char bLightAttachmentsAsGroup : 1; // 0x219
	char bExcludeFromLightAttachmentGroup : 1; // 0x219
	char bReceiveMobileCSMShadows : 1; // 0x219
	char bSingleSampleShadowFromStationaryLights : 1; // 0x219
	char bIgnoreRadialImpulse : 1; // 0x219
	char bIgnoreRadialForce : 1; // 0x219
	char bApplyImpulseOnDamage : 1; // 0x21a
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x21a
	char bFillCollisionUnderneathForNavmesh : 1; // 0x21a
	char AlwaysLoadOnClient : 1; // 0x21a
	char AlwaysLoadOnServer : 1; // 0x21a
	char bUseEditorCompositing : 1; // 0x21a
	char bRenderCustomDepth : 1; // 0x21a
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x21b
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x21d
	FLightingChannels LightingChannels; // 0x21e
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x21f
	int32_t CustomDepthStencilValue; // 0x220
	FCustomPrimitiveData CustomPrimitiveData; // 0x228
	FCustomPrimitiveData CustomPrimitiveDataInternal; // 0x238
	int32_t TranslucencySortPriority; // 0x250
	int32_t VisibilityId; // 0x254
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x258
	int8_t VirtualTextureLodBias; // 0x268
	int8_t VirtualTextureCullMips; // 0x269
	int8_t VirtualTextureMinCoverage; // 0x26a
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x26b
	float LpvBiasMultiplier; // 0x270
	float BoundsScale; // 0x27c
	TArray<AActor*> MoveIgnoreActors; // 0x290
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2a0
	FBodyInstance BodyInstance; // 0x2c0
	FMulticastSparseDelegate OnComponentHit; // 0x418
	FMulticastSparseDelegate OnComponentBeginOverlap; // 0x419
	FMulticastSparseDelegate OnComponentEndOverlap; // 0x41a
	FMulticastSparseDelegate OnComponentWake; // 0x41b
	FMulticastSparseDelegate OnComponentSleep; // 0x41c
	FMulticastSparseDelegate OnBeginCursorOver; // 0x41e
	FMulticastSparseDelegate OnEndCursorOver; // 0x41f
	FMulticastSparseDelegate OnClicked; // 0x420
	FMulticastSparseDelegate OnReleased; // 0x421
	FMulticastSparseDelegate OnInputTouchBegin; // 0x422
	FMulticastSparseDelegate OnInputTouchEnd; // 0x423
	FMulticastSparseDelegate OnInputTouchEnter; // 0x424
	FMulticastSparseDelegate OnInputTouchLeave; // 0x425
	UPrimitiveComponent* LODParentPrimitive; // 0x440
};

struct UUI_CraftingComponent_C : UCraftingComponentWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a0
	UTextBlock* CountText; // 0x2a8
	UImage* OptionalBackgroundImage; // 0x2b0
	UTextBlock* OrderNumberText; // 0x2b8
	UImage* TypeImage; // 0x2c0
	UUI_Border_C* UI_Border; // 0x2c8
	bool isOptional; // 0x2d0
};

struct UBakedCurvatureMapToolProperties : UInteractiveToolPropertySet {
	EBakedCurvatureTypeMode CurvatureType; // 0x60
	EBakedCurvatureColorMode ColorMode; // 0x64
	float RangeMultiplier; // 0x68
	float MinRangeMultiplier; // 0x6c
	EBakedCurvatureClampMode Clamping; // 0x70
	bool bGaussianBlur; // 0x74
	float BlurRadius; // 0x78
};

struct UBakeMeshAttributeMapsTool : UMultiSelectionTool {
	UBakeMeshAttributeMapsToolProperties* Settings; // 0x90
	UBakedNormalMapToolProperties* NormalMapProps; // 0x98
	UBakedOcclusionMapToolProperties* OcclusionMapProps; // 0xa0
	UBakedCurvatureMapToolProperties* CurvatureMapProps; // 0xa8
	UBakedTexture2DImageProperties* Texture2DProps; // 0xb0
	UBakedOcclusionMapVisualizationProperties* VisualizationProps; // 0xb8
	UMaterialInstanceDynamic* PreviewMaterial; // 0xd0
	UTexture2D* CachedNormalMap; // 0x430
	UTexture2D* CachedOcclusionMap; // 0x450
	UTexture2D* CachedCurvatureMap; // 0x480
	UTexture2D* CachedMeshPropertyMap; // 0x498
	UTexture2D* CachedTexture2DImageMap; // 0x4b0
	UTexture2D* EmptyNormalMap; // 0x4b8
	UTexture2D* EmptyColorMapBlack; // 0x4c0
	UTexture2D* EmptyColorMapWhite; // 0x4c8
};

struct UPolyEditExtrudeProperties : UInteractiveToolPropertySet {
	EPolyEditExtrudeDirection Direction; // 0x60
	bool bShellsToSolids; // 0x64
};

struct AFireplace1_C : AFireplaceItem {
	UBoxComponent* BoxCollider; // 0x8a0
	UPointLightComponent* PointLight; // 0x8a8
};

struct UARSaveWorldAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UParticleModuleLocationWorldOffset_Seeded : UParticleModuleLocationWorldOffset {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct AWaterBodyLake : AWaterBody {
	ULakeGenerator* LakeGenerator; // 0xdd0
};

struct UPrisonerBodySimulationData : UDataAsset {
	FRuntimeFloatCurve StrengthGainPerHourOfActivityVsStrength; // 0x30
	float StrengthLossPerMissingProtein; // 0xb8
	float ConstitutionGainPerKilometerMoved; // 0xbc
	float ConstitutionLossPerHourOfNotMoving; // 0xc0
	float DexterityChangePerStorageFatEnergy; // 0xc4
	float MaxBleedingSeverity; // 0xc8
	FFloatInterval BleedOutDurationVsBleedingSeverity; // 0xcc
	FFloatInterval BleedOutDurationMultiplierVsConstitution; // 0xd4
	FRuntimeFloatCurve DamageRatioVsBloodLossRatio; // 0xe0
	FRuntimeFloatCurve HealingSpeedMultiplierVsActionDifficultyRatio; // 0x168
	FPrisonerActionDifficultyCurve StaminaChangeRateVsActionDifficulty; // 0x1f0
	FPrisonerActionDifficultyCurve HeartRateRatioVsActionDifficulty; // 0x208
	float HeartRateRaiseInterpSpeed; // 0x220
	float HeartRateFallRate; // 0x224
	float BreathingRateInterpSpeed; // 0x228
	FPrisonerActionDifficultyCurve OxygenSaturationRaiseRateVsActionDifficutly; // 0x22c
	FPrisonerActionDifficultyCurve OxygenSaturationFallRateVsActionDifficutly; // 0x244
	float PreferredEnvironmentTemperatureWhenNaked; // 0x25c
	float BodyHeatGroupWeight[0x5]; // 0x260
	FPrisonerBodySimulationData_BodyHeatGroupClothesLayerFactors BodyHeatGroupClothesLayerFactors[0x5]; // 0x278
	UMetabolism* MetabolismClass; // 0x2c8
	float MetabolismUpdateInterval; // 0x2d0
	float CaloriesConsumptionMultiplier; // 0x2d4
	FRuntimeFloatCurve CaloriesConsumptionMultiplierVsHeartRateRatio; // 0x2d8
	float WaterConsumptionMultiplier; // 0x360
	FRuntimeFloatCurve WaterConsumptionMultiplierVsHeartRateRatio; // 0x368
	FFloatInterval NutrientsConsumptionFactorVsConstitutionRatio; // 0x3f0
	FFloatInterval ConsumptionDurationMultiplierVsEatingSpeed; // 0x3f8
	float StomachFullnessToBeAbleToVomit; // 0x400
	float BladderFullnessToBeAbleToUrinate; // 0x404
	float ColonFullnessToBeAbleToDefecate; // 0x408
	float ColonWaterContentRatioToHaveDiarrhea; // 0x40c
	FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges DigestionHandlersPerConsumableHealthRatios; // 0x410
	FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges DigestionHandlersPerConsumableFatsContentRatios; // 0x420
	TMap<ENutrient, FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges> DigestionHandlersPerConsumableNutrientContentRatios; // 0x430
	FPrisonerBodySimulationData_Effects Effects; // 0x480
};

struct UAnimal2SoundComponent : UCharacterSoundComponent {
	UAkAudioEvent* IdleAudioEvent; // 0xd8
	UAkAudioEvent* AngryAudioEvent; // 0xe0
	UAkAudioEvent* AttackAudioEvent; // 0xe8
	UAkAudioEvent* ScaredAudioEvent; // 0xf0
	UAkAudioEvent* AlertedAudioEvent; // 0xf8
	UAkAudioEvent* TakeDamageAudioEvent; // 0x100
	UAkAudioEvent* KillAudioEvent; // 0x108
	UAkAudioEvent* AnimalFootstep; // 0x110
	float FootstepSoundOverlap; // 0x118
	float FixedFootstepVolume; // 0x11c
	float SpeedFootstepVolume; // 0x120
	float MinSilenceTimeout; // 0x124
	float MaxSilenceTimeout; // 0x128
};

struct UTransformMeshesTool : UMultiSelectionTool {
	UTransformMeshesToolProperties* TransformProps; // 0x98
	TArray<FTransformMeshesTarget> ActiveGizmos; // 0xb0
};

struct USoundNotificationDescription : UNotificationDescription {
	UAkAudioEvent* AudioEvent; // 0x40
	AActor* Actor; // 0x48
	bool stopWhenAttachedToDestroyed; // 0x50
};

struct USubsurfaceProfile : UObject {
	FSubsurfaceProfileStruct Settings; // 0x28
};

struct UMaterialExpressionCurveAtlasRowParameter : UMaterialExpressionScalarParameter {
	UCurveLinearColor* Curve; // 0x60
	UCurveLinearColorAtlas* Atlas; // 0x68
	FExpressionInput InputTime; // 0x70
};

struct UEnvQueryGenerator_Composite : UEnvQueryGenerator {
	TArray<UEnvQueryGenerator*> Generators; // 0x50
	char bAllowDifferentItemTypes : 1; // 0x60
	char bHasMatchingItemType : 1; // 0x60
	UEnvQueryItemType* ForcedItemType; // 0x68
};

struct UMaterialExpressionRuntimeVirtualTextureSampleParameter : UMaterialExpressionRuntimeVirtualTextureSample {
	FName ParameterName; // 0x90
	FGuid ExpressionGUID; // 0x98
	FName Group; // 0xa8
};

struct UMonitoredWindowsContent_C : UWindowsContent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b8
	APrisoner* _prisoner; // 0x2c0
	bool _isPrisonerSet; // 0x2c8
	FTimerHandle _updateContentTimer; // 0x2d0
	bool HasToolTip; // 0x2d8
	FText ToolTip; // 0x2e0
};

struct UEditableMesh : UObject {
	TArray<UEditableMeshAdapter*> Adapters; // 0x3b8
	int32_t TextureCoordinateCount; // 0x3d0
	int32_t PendingCompactCounter; // 0x51c
	int32_t SubdivisionCount; // 0x520
};

struct UPhysicsSpringComponent : USceneComponent {
	float SpringStiffness; // 0x1f8
	float SpringDamping; // 0x1fc
	float SpringLengthAtRest; // 0x200
	float SpringRadius; // 0x204
	ECollisionChannel SpringChannel; // 0x208
	bool bIgnoreSelf; // 0x209
	float SpringCompression; // 0x20c
};

struct UAnimBP_M1887_C : UWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x300
	FAnimNode_Root AnimGraphNode_Root; // 0x308
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x338
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x380
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x3c8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x410
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x458
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x508
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x660
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x688
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x6b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x6d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x758
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x7f8
};

struct USmoothFillBrushOpProps : UBaseSmoothBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	bool bPreserveUVFlow; // 0x68
};

struct UMaterialExpressionCrossProduct : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct USoundNode : UObject {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct UBehaviorTreeComponent : UBrainComponent {
	TArray<UBTNode*> NodeInstances; // 0x128
	UBehaviorTree* DefaultBehaviorTreeAsset; // 0x278
};

struct UCharacterAction : UObject {
	TArray<UCharacterActionDescription*> PreActionsDescriptions; // 0x58
	TArray<UCharacterActionDescription*> PostActionsDescriptions; // 0x68
	UCharacterAction* ParentAction; // 0x78
	TArray<UCharacterAction*> _preActions; // 0x80
	TArray<UCharacterAction*> _postActions; // 0x90
	UActionProgressWidget* _progressWidget; // 0xa0
	UCharacterActionDescription* _description; // 0xb0
};

struct UMIDIDeviceController : UObject {
	FMulticastInlineDelegate OnMidiEvent; // 0x28
	int32_t DeviceID; // 0x38
	FString DeviceName; // 0x40
};

struct UNiagaraDataInterfacePhysicsAsset : UNiagaraDataInterface {
	UPhysicsAsset* DefaultSource; // 0x38
	AActor* SourceActor; // 0x40
};

struct UEdgeLoopInsertionOperatorFactory : UObject {
	UEdgeLoopInsertionTool* Tool; // 0x30
};

struct UNiagaraEffectType : UObject {
	ENiagaraScalabilityUpdateFrequency UpdateFrequency; // 0x28
	ENiagaraCullReaction CullReaction; // 0x2c
	UNiagaraSignificanceHandler* SignificanceHandler; // 0x30
	TArray<FNiagaraSystemScalabilitySettings> DetailLevelScalabilitySettings; // 0x38
	FNiagaraSystemScalabilitySettingsArray SystemScalabilitySettings; // 0x48
	FNiagaraEmitterScalabilitySettingsArray EmitterScalabilitySettings; // 0x58
};

struct AWaterBodyOcean : AWaterBody {
	UOceanGenerator* OceanGenerator; // 0xdd0
	FVector CollisionExtents; // 0xdd8
	float HeightOffset; // 0xde4
};

struct UCurveVector : UCurveBase {
	FRichCurve FloatCurves[0x3]; // 0x30
};

struct UNiagaraParameterCollection : UObject {
	FName Namespace; // 0x28
	TArray<FNiagaraVariable> parameters; // 0x30
	UMaterialParameterCollection* SourceMaterialCollection; // 0x40
	UNiagaraParameterCollectionInstance* DefaultInstance; // 0x48
	FGuid CompileId; // 0x50
};

struct AGeometryCacheActor : AActor {
	UGeometryCacheComponent* GeometryCacheComponent; // 0x220
};

struct UDoorUnlockData : UObject {
	EDoorUnlockDataType Type; // 0x28
	FString Description; // 0x30
};

struct UTraderSellListEntry : UUserWidget {
	UImage* _entryIcon; // 0x260
	UImage* _deselectionForeground; // 0x268
	UTextBlock* _entryCaption; // 0x270
	UWidgetSwitcher* _buttonSwitcher; // 0x278
	UButton* _btnCancel; // 0x280
	UButton* _btnConfirm; // 0x288
};

struct UCSGMeshesTool : UBaseCreateFromSelectedTool {
	UCSGMeshesToolProperties* CSGProperties; // 0xf0
	ULineSetComponent* DrawnLineSet; // 0x108
};

struct UMovieSceneSubTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UWeaponDamageGroup : UDataAsset {
	float Head; // 0x30
	float Neck; // 0x34
	float Torso; // 0x38
	float ArmUpper; // 0x3c
	float Abdomen; // 0x40
	float LegUpper; // 0x44
	float OtherLimbs; // 0x48
};

struct UNiagaraDataInterfaceVector2DCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
};

struct UPolyEditInsetProperties : UInteractiveToolPropertySet {
	bool bReproject; // 0x60
	float Softness; // 0x64
	bool bBoundaryOnly; // 0x68
	float AreaScale; // 0x6c
};

struct UModularTooltip : UUserWidget {
	UModularTooltipSection* _sectionClass; // 0x260
	UTextBlock* _descriptionTextBlock; // 0x268
	UVerticalBox* _sectionsVerticalBox; // 0x270
	UTextBlock* _advancedDisplayHintTextBlock; // 0x278
};

struct UTradeablePricesRequest : UPlayerRpcChannelServerDataRequest {
	TArray<UObject*> _tradeableClasses; // 0x30
};

struct UTradeablePricesResponse : UPlayerRpcChannelServerDataResponse {
	TArray<FEconomyManagerRequestResponseData> _payload; // 0x28
};

struct ULandscapeComponent : UPrimitiveComponent {
	int32_t SectionBaseX; // 0x448
	int32_t SectionBaseY; // 0x44c
	int32_t ComponentSizeQuads; // 0x450
	int32_t SubsectionSizeQuads; // 0x454
	int32_t NumSubsections; // 0x458
	UMaterialInterface* OverrideMaterial; // 0x460
	UMaterialInterface* OverrideHoleMaterial; // 0x468
	TArray<FLandscapeComponentMaterialOverride> OverrideMaterials; // 0x470
	TArray<UMaterialInstanceConstant*> MaterialInstances; // 0x480
	TArray<UMaterialInstanceDynamic*> MaterialInstancesDynamic; // 0x490
	TArray<int8_t> LODIndexToMaterialIndex; // 0x4a0
	TArray<int8_t> MaterialIndexToDisabledTessellationMaterial; // 0x4b0
	UTexture2D* XYOffsetmapTexture; // 0x4c0
	FVector4 WeightmapScaleBias; // 0x4d0
	float WeightmapSubsectionOffset; // 0x4e0
	FVector4 HeightmapScaleBias; // 0x4f0
	FBox CachedLocalBox; // 0x500
	LazyObjectProperty CollisionComponent; // 0x51c
	UTexture2D* HeightmapTexture; // 0x538
	TArray<FWeightmapLayerAllocationInfo> WeightmapLayerAllocations; // 0x540
	TArray<UTexture2D*> WeightmapTextures; // 0x550
	ULandscapeLODStreamingProxy* LODStreamingProxy; // 0x560
	FGuid MapBuildDataId; // 0x568
	TArray<FGuid> IrrelevantLights; // 0x578
	int32_t CollisionMipLevel; // 0x588
	int32_t SimpleCollisionMipLevel; // 0x58c
	float NegativeZBoundsExtension; // 0x590
	float PositiveZBoundsExtension; // 0x594
	float StaticLightingResolution; // 0x598
	int32_t ForcedLOD; // 0x59c
	int32_t LODBias; // 0x5a0
	FGuid StateId; // 0x5a4
	FGuid BakedTextureMaterialGuid; // 0x5b4
	UTexture2D* GIBakedBaseColorTexture; // 0x5c8
	char MobileBlendableLayerMask; // 0x5d0
	UMaterialInterface* MobileMaterialInterface; // 0x5d8
	TArray<UMaterialInterface*> MobileMaterialInterfaces; // 0x5e0
	TArray<UTexture2D*> MobileWeightmapTextures; // 0x5f0
};

struct UBaseBrushTool : UMeshSurfacePointTool {
	UBrushBaseProperties* BrushProperties; // 0xc0
	bool bInBrushStroke; // 0xc8
	float WorldToLocalScale; // 0xcc
	FBrushStampData LastBrushStamp; // 0xd0
	TSoftClassPtr<UObject> PropertyClass; // 0x190
	UBrushStampIndicator* BrushStampIndicator; // 0x1b8
};

struct ASledge : AItem {
	UVehicleCameraStabilizerComponent* _cameraStabilizer; // 0x7c8
	FVehicleSpawnParameters _spawnParameters; // 0x7d0
	TArray<USledgeMountSlot*> _mountSlots; // 0x800
	float _floorTraceDistance; // 0x89c
	float _tiltAngleToUnmountMountees; // 0x8a0
	float _accelerationForceMagnitude; // 0x8a8
	float _decelerationForceMagnitude; // 0x8ac
	float _steeringForceMagnitude; // 0x8b0
	FVector _steeringForceOffset; // 0x8b4
	float _sidewaysBrakingForceMagnitude; // 0x8c0
	UCurveFloat* _dragForceMagnitudeVsSpeed; // 0x8c8
	UCurveFloat* _maxSpeedVsGroundSlopeAngle; // 0x8d0
	UPhysicsAsset* _physicsAssetWhenBoarded; // 0x8d8
	UParticleSystem* _defaultMovementParticleSystem; // 0x8e0
	TMap<UPhysicalMaterial*, UParticleSystem*> _movementParticleSystems; // 0x8e8
	float _movementParticlesActivationSpeed; // 0x938
	float _movementParticlesDeleteDelay; // 0x93c
	float _rigidBodyStatePositionErrorTolerance; // 0x940
	float _rigidBodyStateRotationErrorTolerance; // 0x944
	float _distanceErrorToHardSnapToRemoteLocation; // 0x948
	UAkAudioEvent* _sledgeMovementStartAudioEvent; // 0x950
	UAkAudioEvent* _sledgeMovementStopAudioEvent; // 0x958
	float _velocityUpdateInterval; // 0x960
	float _maxSledgeEnterAngle; // 0x964
	float _allowedWaterImmersionDepth; // 0x968
	float _disallowedWaterImmersionDepth; // 0x96c
	float _waterImmersionDepthToForceEvictMountees; // 0x970
	float _timeToEvictMounteesWhenImmersedIntoWater; // 0x974
	float _timeToForceEvictMounteesWhenImmersedIntoWater; // 0x978
	float _timeToAutoDestructWhenImmersedIntoWater; // 0x97c
	UUserWidget* _mountSlotIndicatorsWidget; // 0x988
	uint32_t _controls; // 0x9a4
	FVector _movementParticlesPosition; // 0x9c0
	FText _healthBarCaption; // 0x9d0
};

struct UUI_GameEventLeaderboardWidget_C : UGameEventLeaderboardWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a8
	UCircularThrobber* CircularThrobber_Ranking; // 0x2b0
	UCircularThrobber* CircularThrobber_TopPlayers; // 0x2b8
	UVerticalBox* PlayerRanking; // 0x2c0
	UVerticalBox* TopPlayers; // 0x2c8
	UUI_GameEventLeaderboardRow_C* UI_GameEventLeaderboardRow_C_1; // 0x2d0
	int32_t MaxStats; // 0x2d8
};

struct UBreathingBarLungsWidget : UUserWidget {
	UImage* _lungs; // 0x268
	UImage* _lungsCritical; // 0x270
};

struct AFishingAttachmentBait : AFishingAttachment {
	TMap<EAquaticIndividualSize, float> _baitCatchingChanceMultiplier; // 0x7e0
};

struct UEventInsertCartridge : UWeaponActionReloadSequence {
	FName MontageEndSectionName; // 0x90
};

struct UBP_M1_OpenEjectBulletInsertClipInsertBulletLoop_C : UInsertMagazineInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t LoadedAmmoCount; // 0xa8
};

struct UNiagaraDataInterfaceArrayInt32 : UNiagaraDataInterfaceArray {
	TArray<int32_t> IntData; // 0x50
};

struct ULiveLinkInstance : UAnimInstance {
	ULiveLinkRetargetAsset* CurrentRetargetAsset; // 0x2b8
};

struct UWheeledVehicleMovementComponent : UPawnMovementComponent {
	char bDeprecatedSpringOffsetMode : 1; // 0x140
	char bReverseAsBrake : 1; // 0x140
	char bUseRVOAvoidance : 1; // 0x140
	char bRawHandbrakeInput : 1; // 0x140
	char bRawGearUpInput : 1; // 0x140
	char bRawGearDownInput : 1; // 0x140
	char bWasAvoidanceUpdated : 1; // 0x144
	float Mass; // 0x148
	TArray<FWheelSetup> WheelSetups; // 0x150
	float DragCoefficient; // 0x160
	float ChassisWidth; // 0x164
	float ChassisHeight; // 0x168
	float DragArea; // 0x16c
	float EstimatedMaxEngineSpeed; // 0x170
	float MaxEngineRPM; // 0x174
	float DebugDragMagnitude; // 0x178
	FVector InertiaTensorScale; // 0x17c
	float MinNormalizedTireLoad; // 0x188
	float MinNormalizedTireLoadFiltered; // 0x18c
	float MaxNormalizedTireLoad; // 0x190
	float MaxNormalizedTireLoadFiltered; // 0x194
	float ThresholdLongitudinalSpeed; // 0x198
	int32_t LowForwardSpeedSubStepCount; // 0x19c
	int32_t HighForwardSpeedSubStepCount; // 0x1a0
	TArray<UVehicleWheel*> Wheels; // 0x1a8
	float RVOAvoidanceRadius; // 0x1d0
	float RVOAvoidanceHeight; // 0x1d4
	float AvoidanceConsiderationRadius; // 0x1d8
	float RVOSteeringStep; // 0x1dc
	float RVOThrottleStep; // 0x1e0
	int32_t AvoidanceUID; // 0x1e4
	FNavAvoidanceMask AvoidanceGroup; // 0x1e8
	FNavAvoidanceMask GroupsToAvoid; // 0x1ec
	FNavAvoidanceMask GroupsToIgnore; // 0x1f0
	float AvoidanceWeight; // 0x1f4
	FVector PendingLaunchVelocity; // 0x1f8
	FReplicatedVehicleState ReplicatedState; // 0x204
	float RawSteeringInput; // 0x21c
	float RawThrottleInput; // 0x220
	float RawBrakeInput; // 0x224
	float SteeringInput; // 0x228
	float ThrottleInput; // 0x22c
	float BrakeInput; // 0x230
	float HandbrakeInput; // 0x234
	float IdleBrakeInput; // 0x238
	float StopThreshold; // 0x23c
	float WrongDirectionThreshold; // 0x240
	FVehicleInputRate ThrottleInputRate; // 0x244
	FVehicleInputRate BrakeInputRate; // 0x24c
	FVehicleInputRate HandbrakeInputRate; // 0x254
	FVehicleInputRate SteeringInputRate; // 0x25c
	AController* OverrideController; // 0x288
};

struct UApplicationLifecycleComponent : UActorComponent {
	FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0xb0
	FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0xc0
	FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0xd0
	FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0xe0
	FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0xf0
	FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x100
	FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x110
	FMulticastInlineDelegate OnTemperatureChangeDelegate; // 0x120
	FMulticastInlineDelegate OnLowPowerModeDelegate; // 0x130
};

struct UMaterialExpressionSingleLayerWaterMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput ScatteringCoefficients; // 0x40
	FExpressionInput AbsorptionCoefficients; // 0x54
	FExpressionInput PhaseG; // 0x68
	FExpressionInput ColorScaleBehindWater; // 0x7c
};

struct AGlassBottle04_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UARBasicLightEstimate : UARLightEstimate {
	float AmbientIntensityLumens; // 0x28
	float AmbientColorTemperatureKelvin; // 0x2c
	FLinearColor AmbientColor; // 0x30
};

struct USynthSamplePlayer : USynthComponent {
	USoundWave* SoundWave; // 0x6c0
	FMulticastInlineDelegate OnSampleLoaded; // 0x6c8
	FMulticastInlineDelegate OnSamplePlaybackProgress; // 0x6d8
};

struct UWeaponActionClearMalfunctionSequence : UWeaponAction {
	int32_t SortIndex; // 0x28
	EWeaponMalfunction MalfunctionType; // 0x2c
	FText Description; // 0x30
	UCircularMenuSegmentWeaponMalfunctionInfo* CircularMenuSegmentInfo; // 0x48
	TMap<EWeaponMalfunction, FClearMalfunctionData> Malfunctions; // 0x50
	bool CanBeInterrupted; // 0xa0
	bool AllowBeginFiringSequence; // 0xa1
};

struct UGizmoComponentAxisSource : UObject {
	USceneComponent* Component; // 0x30
	int32_t AxisIndex; // 0x38
	bool bLocalAxes; // 0x3c
};

struct UAirplanePassengerMountSlot : UAirplaneMountSlot {
	UBlendSpace* _idleAnimation; // 0x138
};

struct UNiagaraDataInterfaceArrayFloat3 : UNiagaraDataInterfaceArray {
	TArray<FVector> FloatData; // 0x50
};

struct UChannel : UObject {
	UNetConnection* Connection; // 0x28
};

struct UGroupEdgeInsertionTool : USingleSelectionTool {
	UGroupEdgeInsertionProperties* Settings; // 0x98
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xa0
};

struct UAddPatchToolProperties : UInteractiveToolPropertySet {
	float Width; // 0x60
	float Rotation; // 0x64
	int32_t Subdivisions; // 0x68
	float Shift; // 0x6c
};

struct UMaterialExpressionArcsine : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct AWorldEvent : AActor {
	FVector Location; // 0x220
	float Radius; // 0x22c
	UTexture* IconTexture; // 0x230
};

struct UConZBoatDriverMountSlot : UConZBoatMountSlot {
	UBlendSpace* _forwardIdleAnimation; // 0x118
	UBlendSpace* _paddlingLHandAnimation; // 0x120
	UBlendSpace* _paddlingRHandAnimation; // 0x128
	UAnimSequence* _paddlingLToRAnimation; // 0x130
	UAnimSequence* _paddlingRToLAnimation; // 0x138
	UAnimSequence* _startEngineStartAnimation; // 0x140
	UAnimSequence* _startEngineLoopAnimation; // 0x148
	UAnimSequence* _startEngineLongLoopAnimation; // 0x150
	UAnimSequence* _startEngineEndAnimation; // 0x158
	UVehicleWeaponAimingParameters* _vehicleDriverWeaponAimingParameters; // 0x160
};

struct UParticleModuleVelocity_Seeded : UParticleModuleVelocity {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct UPhysicsAsset : UObject {
	TArray<int32_t> BoundsBodies; // 0x30
	TArray<USkeletalBodySetup*> SkeletalBodySetups; // 0x40
	TArray<UPhysicsConstraintTemplate*> ConstraintSetup; // 0x50
	FSolverIterations SolverIterations; // 0x60
	char bNotForDedicatedServer : 1; // 0x7c
	UThumbnailInfo* ThumbnailInfo; // 0x120
	TArray<UBodySetup*> BodySetup; // 0x128
};

struct UMaterialExpressionTextureBase : UMaterialExpression {
	UTexture* Texture; // 0x40
};

struct UAIDataProvider_QueryParams : UAIDataProvider {
	FName ParamName; // 0x28
	float FloatValue; // 0x30
	int32_t IntValue; // 0x34
	bool BoolValue; // 0x38
};

struct UMovieScene3DPathSection : UMovieScene3DConstraintSection {
	FMovieSceneFloatChannel TimingCurve; // 0x110
	MovieScene3DPathSection_Axis FrontAxisEnum; // 0x1b0
	MovieScene3DPathSection_Axis UpAxisEnum; // 0x1b1
	char bFollow : 1; // 0x1b4
	char bReverse : 1; // 0x1b4
	char bForceUpright : 1; // 0x1b4
};

struct UMaterialExpressionReflectionVectorWS : UMaterialExpression {
	FExpressionInput CustomWorldNormal; // 0x40
	char bNormalizeCustomWorldNormal : 1; // 0x54
};

struct UARTrackedObject : UARTrackedGeometry {
	UARCandidateObject* DetectedObject; // 0xf8
};

struct AItemDropPlaceholder : AActor {
	UBoxComponent* BoxCollisionComponent; // 0x220
	UStaticMeshComponent* StaticMeshComponent; // 0x228
	USkeletalMeshComponent* SkeletalMeshComponent; // 0x230
	USceneComponent* _rootComponent; // 0x240
};

struct UMovieSceneTakeTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UFishingBarWidget : UUserWidget {
	FLinearColor TopSegmentGradientColorBottom; // 0x260
	FLinearColor TopSegmentGradientColorTop; // 0x270
	float BarBoxesTotalHeight; // 0x280
	float BarSegmentsTotalHeight; // 0x284
	int32_t BarSegmentNum; // 0x288
	FSlateBrush ProgressBarBackgroundBoxBrush; // 0x290
	FLinearColor ProgressBarBackgroundBoxColorAndOpacity; // 0x318
	float ProgressBarBackgroundBoxPadding; // 0x328
	FSlateBrush ProgressBarSegmentBrush; // 0x330
	FLinearColor ProgressBarSegmentColorAndOpacity; // 0x3b8
	float ProgressBarSegmentPadding; // 0x3c8
	UVerticalBox* _progressBarSegmentBackgroundBoxesContainer; // 0x3d0
	UVerticalBox* _progressBarSegmentsContainer; // 0x3d8
	USizeBox* _simulatedProgressBar; // 0x3e0
};

struct UCompositeCurveTable : UCurveTable {
	TArray<UCurveTable*> ParentTables; // 0xa0
	TArray<UCurveTable*> OldParentTables; // 0xb0
};

struct UMaterialExpressionSceneTexture : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
	ESceneTextureId SceneTextureId; // 0x54
	bool bFiltered; // 0x55
};

struct ULevelStreamingDynamic : ULevelStreaming {
	char bInitiallyLoaded : 1; // 0x148
	char bInitiallyVisible : 1; // 0x148
};

struct APlayerStart : ANavigationObjectBase {
	FName PlayerStartTag; // 0x248
};

struct UAutoDestroySubsystem : UWorldSubsystem {
	TArray<AActor*> ActorsToPoll; // 0x38
};

struct UMaterialExpressionPower : UMaterialExpression {
	FExpressionInput Base; // 0x40
	FExpressionInput Exponent; // 0x54
	float ConstExponent; // 0x68
};

struct UMaterialExpressionSphereMask : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Radius; // 0x68
	FExpressionInput Hardness; // 0x7c
	float AttenuationRadius; // 0x90
	float HardnessPercent; // 0x94
};

struct UDestroySessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UAnimComposite : UAnimCompositeBase {
	FAnimTrack AnimationTrack; // 0xa8
};

struct UBodySetupCore : UObject {
	FName BoneName; // 0x28
	EPhysicsType PhysicsType; // 0x30
	ECollisionTraceFlag CollisionTraceFlag; // 0x31
	EBodyCollisionResponse CollisionReponse; // 0x32
};

struct UVDSimulatedParticle : UObject {
	bool IsAttached; // 0x28
	FVDParticleAttachment Attachment; // 0x30
};

struct UGloveStatsTag : UBaseItemTag {
	float ElectricalDamageModifier; // 0x30
	float LockpkickingPressureModifier; // 0x34
};

struct UMetabolismTreatmentItemsPanel : UUserWidget {
	UMetabolismLightItemDisplayPanel* _inventoryItems; // 0x260
	UMetabolismLightItemDisplayPanel* _vicinityItems; // 0x268
	UMetabolismContainerSetDisplayPanel* _vicinityContainers; // 0x270
	UTabButton* _buttonWidgetClass; // 0x278
	FString _inventoryName; // 0x280
	FString _vicinityName; // 0x290
};

struct UPlacedPlaceableWidget : UDesignableUserWidget {
	UVerticalBox* _container; // 0x2c8
};

struct URadioCategory : UObject {
	TArray<URadioTrack*> Tracks; // 0x28
	int32_t _index; // 0x38
};

struct UBTService_RunEQS : UBTService_BlackboardBase {
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0x98
};

struct UMagicLeapLightingTrackingComponent : UActorComponent {
	bool UseGlobalAmbience; // 0xb0
	bool UseColorTemp; // 0xb1
};

struct UAnimNotify_CharacterActionNotify : UAnimNotify {
	ECharacterActionNotifyType CharacterActionNotifyType; // 0x38
};

struct UBombDefusalWidget : UMinigameWidget {
	UTextBlock* _remainingTimeMinutes1; // 0x290
	UTextBlock* _remainingTimeMinutes2; // 0x298
	UTextBlock* _remainingTimeSeconds1; // 0x2a0
	UTextBlock* _remainingTimeSeconds2; // 0x2a8
};

struct UMovieSceneCameraShakeSection : UMovieSceneSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe8
	UMatineeCameraShake* ShakeClass; // 0x108
	float PlayScale; // 0x110
	ECameraShakePlaySpace PlaySpace; // 0x114
	FRotator UserDefinedPlaySpace; // 0x118
};

struct AQuiver : AClothesItem {
	USkeletalMesh* AlternativeSkeletalMesh; // 0x920
	FName ArrowsBoneName; // 0x928
	TArray<UStaticMeshComponent*> _arrowMeshComponentsArray2; // 0x930
	USkeletalMeshComponent* _alternativeEquippedMesh; // 0x940
	float _containerDepth; // 0x94c
};

struct UNavigationSystemModuleConfig : UNavigationSystemConfig {
	char bStrictlyStatic : 1; // 0x50
	char bCreateOnClient : 1; // 0x50
	char bAutoSpawnMissingNavData : 1; // 0x50
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x50
};

struct UMovieSceneTrackInstanceSystem : UMovieSceneEntitySystem {
	UMovieSceneTrackInstanceInstantiator* Instantiator; // 0x40
};

struct UDatasmithStaticMeshIFCImportData : UDatasmithStaticMeshImportData {
	FString SourceGlobalId; // 0x28
};

struct UWeaponRevolverAnimInstance : UWeaponAnimInstance {
	bool _useDrumRotation; // 0x300
	float _drumRotation; // 0x304
};

struct UScaleBox : UContentWidget {
	EStretch Stretch; // 0x120
	EStretchDirection StretchDirection; // 0x121
	float UserSpecifiedScale; // 0x124
	bool IgnoreInheritedScale; // 0x128
};

struct UUI_Chat_C : UChatWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x360
	UImage* Image_1; // 0x368
	UButton* MuteButton; // 0x370
	UTextBlock* MuteText; // 0x378
	TArray<FString> ActiveSuggestions; // 0x380
	int32_t CurrentSuggestion; // 0x390
	TArray<UUI_ChatSuggestion_C*> ActiveSuggestionWidgets; // 0x398
	bool SuggestionsUpdated; // 0x3a8
	bool SuggestionSelected; // 0x3a9
	bool IsInHistoryMode; // 0x3aa
};

struct AARSharedWorldGameMode : AGameMode {
	int32_t BufferSizePerChunk; // 0x308
};

struct UInventoryContainer2D : UActorComponent {
	FInventoryContainer2DRepData _data; // 0xb8
	FInventoryContainer2DRepData _oldData; // 0xd8
	TArray<UInventoryContainerWidget2*> _widgets; // 0xf8
	TScriptInterface<IInventoryNode> _parent; // 0x108
	UInventoryContainerWidget2* _widget; // 0x118
	TArray<bool> _grid; // 0x120
	TArray<bool> _gridDamaged; // 0x130
};

struct UInterpTrackFade : UInterpTrackFloatBase {
	char bPersistFade : 1; // 0x90
	char bFadeAudio : 1; // 0x90
	FLinearColor FadeColor; // 0x94
};

struct UConZSlider : UUserWidget {
	int32_t _minValue; // 0x280
	int32_t _maxValue; // 0x284
	int32_t _stepSize; // 0x288
	bool _controlWithKeyboard; // 0x28c
	UOverlay* _progressBarOverlay; // 0x2a8
	UImage* _sliderThumb; // 0x2b0
	UProgressBar* _progressBar; // 0x2b8
	FConZSliderStyle _selectedAndFocusedSliderStyle; // 0x2c0
	FConZSliderStyle _selectedAndUnfocusedSliderStyle; // 0x4e8
	FConZSliderStyle _unselectedSliderStyle; // 0x710
	FConZSliderStyle _highlightedSliderStyle; // 0x938
	FConZSliderStyle _disabledSliderStyle; // 0xb60
	float _stepSpeedStartTreshold; // 0xd88
	float _stepSpeedThreshold; // 0xd8c
	float _stepSpeedAtStart; // 0xd90
	float _stepSpeedSlow; // 0xd94
	float _stepSpeedFast; // 0xd98
	bool _controlWithMouseClick; // 0xd9c
	bool _controlWithMouseWheel; // 0xd9d
};

struct UPoseAsset : UAnimationAsset {
	FPoseDataContainer PoseContainer; // 0x80
	bool bAdditivePose; // 0x110
	int32_t BasePoseIndex; // 0x114
	FName RetargetSource; // 0x118
};

struct UEnvQueryGenerator_CurrentLocation : UEnvQueryGenerator {
	UEnvQueryContext* QueryContext; // 0x50
};

struct UReplicationGraphNode_GridCell : UReplicationGraphNode_ActorList {
	UReplicationGraphNode* DynamicNode; // 0x140
	UReplicationGraphNode_DormancyNode* DormancyNode; // 0x148
};

struct UMetabolismSkillProgressBar : UUserWidget {
	TArray<FSlateBrush> SkillRankIcons; // 0x260
	FText SkillTitle; // 0x270
	UImage* _skillRankIcon; // 0x298
	UMetabolismAdvancedProgressBar* _apb_SkillProgress; // 0x2a0
	USkill* _skillClass; // 0x2a8
};

struct UProjectileImpactEffects : UDataAsset {
	float MinDecalSize; // 0x30
	float MaxDecalSize; // 0x34
	float MinDecalLifetime; // 0x38
	float MaxDecalLifetime; // 0x3c
	float DecalFadeFactor; // 0x40
	float ParticleEffectsInitialScale; // 0x44
	float ParticleEffectsScaleDistanceStart; // 0x48
	float ParticleEffectsScaleDistanceRange; // 0x4c
	float ParticleEffectsScaleByDistanceFactor; // 0x50
	UParticleSystem* BulletPenetrationExitParticlesDaytime; // 0x58
	UParticleSystem* BulletPenetrationExitParticlesNighttime; // 0x60
	UMaterial* DayTimePenetrationDecal; // 0x68
	UMaterial* NightTimePenetrationDecal; // 0x70
	UAkAudioEvent* AudioEvent; // 0x78
	FImpactEffectData Default; // 0x80
	FImpactEffectData grass; // 0x90
	FImpactEffectData ForrestGroundCoastal; // 0xa0
	FImpactEffectData ForrestGroundContinental; // 0xb0
	FImpactEffectData Rock; // 0xc0
	FImpactEffectData Stone; // 0xd0
	FImpactEffectData Gravel; // 0xe0
	FImpactEffectData GravelBeach; // 0xf0
	FImpactEffectData Pebbles; // 0x100
	FImpactEffectData Snow; // 0x110
	FImpactEffectData Ice; // 0x120
	FImpactEffectData Sand; // 0x130
	FImpactEffectData Asphalt; // 0x140
	FImpactEffectData Dirt; // 0x150
	FImpactEffectData Water; // 0x160
	FImpactEffectData WaterOcean; // 0x170
	FImpactEffectData Cloth; // 0x180
	FImpactEffectData Metal; // 0x190
	FImpactEffectData Aluminium; // 0x1a0
	FImpactEffectData Concrete; // 0x1b0
	FImpactEffectData Brick; // 0x1c0
	FImpactEffectData Wood; // 0x1d0
	FImpactEffectData Plastic; // 0x1e0
	FImpactEffectData Rubber; // 0x1f0
	FImpactEffectData Glass; // 0x200
	FImpactEffectData Folliage; // 0x210
	FImpactEffectData Bark; // 0x220
	FImpactEffectData Flesh; // 0x230
	FImpactEffectData RoofTile; // 0x240
	FImpactEffectData CeramicsTiles; // 0x250
	FImpactEffectData Scrap; // 0x260
	FImpactEffectData Trunk; // 0x270
	FImpactEffectData Leaves; // 0x280
	FImpactEffectData Cardboard; // 0x290
	FImpactEffectData Plaster; // 0x2a0
	FImpactEffectData Kevlar; // 0x2b0
	FImpactEffectData ForceField; // 0x2c0
	FImpactEffectData NoEffect; // 0x2d0
};

struct USoundNodeAttenuation : USoundNode {
	USoundAttenuation* AttenuationSettings; // 0x48
	FSoundAttenuationSettings AttenuationOverrides; // 0x50
	char bOverrideAttenuation : 1; // 0x3f0
};

struct UUI_AdjustableSeparator_C : UUserWidget {
	UImage* Image_1; // 0x260
	UImage* Image_2; // 0x268
	UImage* Image_3; // 0x270
	UNamedSlot* UnderSlot; // 0x278
	USizeBox* UpperSizeBox; // 0x280
	UNamedSlot* UpperSlot; // 0x288
	bool _shouldMove; // 0x290
	float MinHeight; // 0x294
};

struct ULandscapeSplinesComponent : UPrimitiveComponent {
	TArray<ULandscapeSplineControlPoint*> ControlPoints; // 0x448
	TArray<ULandscapeSplineSegment*> Segments; // 0x458
	TArray<UMeshComponent*> CookedForeignMeshComponents; // 0x468
};

struct UDistributionFloatConstant : UDistributionFloat {
	float Constant; // 0x38
};

struct ABP_WeaponBullet_ShotgunSlug_C : AProjectileShotgun {
	FPointerToUberGraphFrame UberGraphFrame; // 0x428
};

struct UWeaponActionCheckAmmoSequence : UWeaponAction {
	FBodyWeaponAnimation Animations; // 0x28
	bool CanBeInterrupted; // 0x38
};

struct UButton : UContentWidget {
	USlateWidgetStyleAsset* Style; // 0x120
	FButtonStyle WidgetStyle; // 0x128
	FLinearColor ColorAndOpacity; // 0x3a0
	FLinearColor BackgroundColor; // 0x3b0
	EButtonClickMethod ClickMethod; // 0x3c0
	EButtonTouchMethod TouchMethod; // 0x3c1
	EButtonPressMethod PressMethod; // 0x3c2
	bool IsFocusable; // 0x3c3
	FMulticastInlineDelegate OnClicked; // 0x3c8
	FMulticastInlineDelegate OnPressed; // 0x3d8
	FMulticastInlineDelegate OnReleased; // 0x3e8
	FMulticastInlineDelegate OnHovered; // 0x3f8
	FMulticastInlineDelegate OnUnhovered; // 0x408
};

struct UMetabolismRadialProgressBar : UUserWidget {
	bool PreviewedAlertedState; // 0x260
	float PrimaryPercentageMinDisplayedValue; // 0x264
	float PrimaryPercentageMaxDisplayedValue; // 0x268
	UScaleBox* _scaleBox; // 0x280
	UImage* _coloredBackground; // 0x288
	UImage* _radialProgressBar; // 0x290
	URetainerBox* _fontEffectPass1; // 0x298
	URetainerBox* _fontEffectPass2; // 0x2a0
	URichTextBlock* _percentage; // 0x2a8
	UTextBlock* _value; // 0x2b0
	UTextBlock* _title; // 0x2b8
	FMetabolismRadialProgressBarColorScheme _defaultColorScheme; // 0x2c0
	FMetabolismRadialProgressBarColorScheme _alertedColorScheme; // 0x340
	FMetabolismRadialProgressBarFontSettings _percentageFontSettings; // 0x3c0
	float _widgetScale; // 0x3d4
	bool _isTitleVisible; // 0x3d8
};

struct UUI_Mission_C : UMissionContainerWidget {
	UWidgetAnimation* CompleteObjectiveAnim; // 0x288
	UWidgetAnimation* StartObjectiveAnim; // 0x290
	UImage* _background; // 0x298
	UUI_Objective_C* UI_Objective; // 0x2a0
};

struct UMovieSceneAkTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
	char bIsAMasterTrack : 1; // 0x88
};

struct ABP_WeaponBullet_ExplosiveArrow_C : AProjectileExplosiveArrow {
	UParticleSystemComponent* P_ArrowTrail; // 0x458
};

struct AServerStatReplicator : AInfo {
	bool bUpdateStatNet; // 0x220
	bool bOverwriteClientStats; // 0x221
	uint32_t Channels; // 0x224
	uint32_t InRate; // 0x228
	uint32_t OutRate; // 0x22c
	uint32_t MaxPacketOverhead; // 0x234
	uint32_t InRateClientMax; // 0x238
	uint32_t InRateClientMin; // 0x23c
	uint32_t InRateClientAvg; // 0x240
	uint32_t InPacketsClientMax; // 0x244
	uint32_t InPacketsClientMin; // 0x248
	uint32_t InPacketsClientAvg; // 0x24c
	uint32_t OutRateClientMax; // 0x250
	uint32_t OutRateClientMin; // 0x254
	uint32_t OutRateClientAvg; // 0x258
	uint32_t OutPacketsClientMax; // 0x25c
	uint32_t OutPacketsClientMin; // 0x260
	uint32_t OutPacketsClientAvg; // 0x264
	uint32_t NetNumClients; // 0x268
	uint32_t InPackets; // 0x26c
	uint32_t OutPackets; // 0x270
	uint32_t InBunches; // 0x274
	uint32_t OutBunches; // 0x278
	uint32_t OutLoss; // 0x27c
	uint32_t InLoss; // 0x280
	uint32_t VoiceBytesSent; // 0x284
	uint32_t VoiceBytesRecv; // 0x288
	uint32_t VoicePacketsSent; // 0x28c
	uint32_t VoicePacketsRecv; // 0x290
	uint32_t PercentInVoice; // 0x294
	uint32_t PercentOutVoice; // 0x298
	uint32_t NumActorChannels; // 0x29c
	uint32_t NumConsideredActors; // 0x2a0
	uint32_t PrioritizedActors; // 0x2a4
	uint32_t NumRelevantActors; // 0x2a8
	uint32_t NumRelevantDeletedActors; // 0x2ac
	uint32_t NumReplicatedActorAttempts; // 0x2b0
	uint32_t NumReplicatedActors; // 0x2b4
	uint32_t NumActors; // 0x2b8
	uint32_t NumNetActors; // 0x2bc
	uint32_t NumDormantActors; // 0x2c0
	uint32_t NumInitiallyDormantActors; // 0x2c4
	uint32_t NumNetGUIDsAckd; // 0x2c8
	uint32_t NumNetGUIDsPending; // 0x2cc
	uint32_t NumNetGUIDsUnAckd; // 0x2d0
	uint32_t ObjPathBytes; // 0x2d4
	uint32_t NetGUIDOutRate; // 0x2d8
	uint32_t NetGUIDInRate; // 0x2dc
	uint32_t NetSaturated; // 0x2e0
};

struct UBTDecorator_Blackboard : UBTDecorator_BlackboardBase {
	int32_t IntValue; // 0x90
	float FloatValue; // 0x94
	FString StringValue; // 0x98
	FString CachedDescription; // 0xa8
	char OperationType; // 0xb8
	EBTBlackboardRestart NotifyObserver; // 0xb9
};

struct UFixedPlaneBrushProperties : UInteractiveToolPropertySet {
	bool bPropertySetEnabled; // 0x60
	bool bShowGizmo; // 0x61
	bool bSnapToGrid; // 0x62
	FVector position; // 0x64
	FQuat Rotation; // 0x70
};

struct UUI_QuickAccessItemWidget_C : UQuickAccessItemWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x370
	UWidgetAnimation* AdditionalIconFadeOut; // 0x378
	UWidgetAnimation* AdditionalIconFadeIn; // 0x380
	UWidgetAnimation* BlinkingBackground; // 0x388
	UWidgetAnimation* LowerLeftBoxFadeOut; // 0x390
	UWidgetAnimation* LowerLeftBoxFadeIn; // 0x398
	UImage* _imageBackground; // 0x3a0
	UImage* AmmoIcon; // 0x3a8
	UImage* LeftSquareBracketImage; // 0x3b0
	UOverlay* Overlay_5; // 0x3b8
	UImage* RightSquareBracketImage; // 0x3c0
	USizeBox* SizeBox_1; // 0x3c8
	UTextBlock* TextBlockItemSlotNumber; // 0x3d0
	FLinearColor TextColor; // 0x3d8
	FText _itemSlotNumber; // 0x3e8
	FLinearColor _alarmColor; // 0x400
};

struct UConZCharacterMovementComponent : UCharacterMovementComponent {
	ECollisionResponse _navWalkingCollisionResponseToWorldStatic; // 0xb00
	ECollisionResponse _navWalkingCollisionResponseToWorldDynamic; // 0xb01
	float _maxClimbHeight; // 0xb04
	bool _queryWaterSplinesEveryFrame; // 0xb08
	float _angularVelocityFilteringInterpolationSpeed; // 0xc00
};

struct ACameraRig_Crane : AActor {
	float CranePitch; // 0x220
	float CraneYaw; // 0x224
	float CraneArmLength; // 0x228
	bool bLockMountPitch; // 0x22c
	bool bLockMountYaw; // 0x22d
	USceneComponent* TransformComponent; // 0x230
	USceneComponent* CraneYawControl; // 0x238
	USceneComponent* CranePitchControl; // 0x240
	USceneComponent* CraneCameraMount; // 0x248
};

struct UNetDriver : UObject {
	FString NetConnectionClassName; // 0x30
	FString ReplicationDriverClassName; // 0x40
	int32_t MaxDownloadSize; // 0x50
	char bClampListenServerTickRate : 1; // 0x54
	int32_t bClampBandwithDeltaTime; // 0x58
	float MinBandwithDeltaTime; // 0x5c
	float DeltaBitsMultiplier; // 0x60
	int32_t NetServerMaxTickRate; // 0x64
	int32_t MaxNetTickRate; // 0x68
	int32_t MaxInternetClientRate; // 0x6c
	int32_t MaxClientRate; // 0x70
	float ServerTravelPause; // 0x74
	float SpawnPrioritySeconds; // 0x78
	float RelevantTimeout; // 0x7c
	float KeepAliveTime; // 0x80
	float InitialConnectTimeout; // 0x84
	float ConnectionTimeout; // 0x88
	float TimeoutMultiplierForUnoptimizedBuilds; // 0x8c
	bool bNoTimeouts; // 0x90
	bool bNeverApplyNetworkEmulationSettings; // 0x91
	UNetConnection* ServerConnection; // 0x98
	TArray<UNetConnection*> ClientConnections; // 0xa0
	int32_t RecentlyDisconnectedTrackingTime; // 0x110
	UWorld* World; // 0x150
	UPackage* WorldPackage; // 0x158
	UObject* NetConnectionClass; // 0x180
	UObject* ReplicationDriverClass; // 0x188
	FName NetDriverName; // 0x1a0
	TArray<FChannelDefinition> ChannelDefinitions; // 0x1a8
	TMap<FName, FChannelDefinition> ChannelDefinitionMap; // 0x1b8
	TArray<UChannel*> ActorChannelPool; // 0x208
	float Time; // 0x220
	UReplicationDriver* ReplicationDriver; // 0x6f8
};

struct UBoxReflectionCaptureComponent : UReflectionCaptureComponent {
	float BoxTransitionDistance; // 0x270
	UBoxComponent* PreviewInfluenceBox; // 0x278
	UBoxComponent* PreviewCaptureBox; // 0x280
};

struct UDcxVehicleWheelsComponent : UPawnMovementComponent {
	float ChassisMass; // 0x140
	FVector InertiaTensorScale; // 0x144
	TArray<FDcxVehicleWheelConfiguration> WheelConfigurations; // 0x150
	FDcxVehicleTireLoadFilterData TireLoadFilter; // 0x160
	bool bUseAvoidance; // 0x170
	float AvoidanceWeight; // 0x174
	int32_t AvoidanceUID; // 0x178
	FNavAvoidanceMask AvoidanceGroup; // 0x17c
	FNavAvoidanceMask GroupsToAvoid; // 0x180
	FNavAvoidanceMask GroupsToIgnore; // 0x184
	float ThresholdLongitudinalSpeed; // 0x188
	int32_t LowForwardSpeedSubStepCount; // 0x18c
	int32_t HighForwardSpeedSubStepCount; // 0x190
	float DragCoefficient; // 0x194
	float DragArea; // 0x198
	FDcxVehicleDriveInputRate ThrottleRate; // 0x19c
	FDcxVehicleDriveInputRate BrakeRate; // 0x1a4
	FDcxVehicleDriveInputRate HandbrakeRate; // 0x1ac
	FDcxVehicleDriveInputRate SteerRate; // 0x1b4
	float AvoidanceRadius; // 0x1bc
	float AvoidanceHeight; // 0x1c0
	float AvoidanceConsiderationRadius; // 0x1c4
	float AvoidanceThrottleStep; // 0x1c8
	float AvoidanceBrakeStep; // 0x1cc
	float AvoidanceSteerStep; // 0x1d0
	bool bRecreateRequired; // 0x1d4
	UDcxVehicleWheelsRawInput* RawInput; // 0x1d8
	TArray<float> SmoothAnalogControls; // 0x1e0
	FDcxVehicleDriveState ReplicatedState; // 0x1f0
	bool bWasAvoidanceUpdated; // 0x208
	FVector AvoidanceVelocity; // 0x20c
	FVector AvoidanceLockVelocity; // 0x218
	float AvoidanceLockTimer; // 0x224
};

struct UCircularMenuSegmentThrowingInfo : UCircularMenuSegmentInfo {
	FDelegate Action; // 0x80
	int32_t Index; // 0x90
};

struct UPacketHandlerProfileConfig : UObject {
	TArray<FString> Components; // 0x28
};

struct UCollisionProfile : UDeveloperSettings {
	TArray<FCollisionResponseTemplate> Profiles; // 0x38
	TArray<FCustomChannelSetup> DefaultChannelResponses; // 0x48
	TArray<FCustomProfile> EditProfiles; // 0x58
	TArray<FRedirector> ProfileRedirects; // 0x68
	TArray<FRedirector> CollisionChannelRedirects; // 0x78
};

struct UMaterialExpressionClamp : UMaterialExpression {
	FExpressionInput Input; // 0x40
	FExpressionInput Min; // 0x54
	FExpressionInput Max; // 0x68
	EClampMode ClampMode; // 0x7c
	float MinDefault; // 0x80
	float MaxDefault; // 0x84
};

struct UCameraAnimInst : UObject {
	UCameraAnim* CamAnim; // 0x28
	UInterpGroupInst* InterpGroupInst; // 0x30
	float PlayRate; // 0x50
	UInterpTrackMove* MoveTrack; // 0x68
	UInterpTrackInstMove* MoveInst; // 0x70
	ECameraShakePlaySpace PlaySpace; // 0x78
};

struct UUI_GameEventScoreboardWidget_C : UGameEventScoreboardWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	UBorder* RoundInfo; // 0x2b8
	UUniformGridPanel* TeamGrid; // 0x2c0
	UTextBlock* TextBlock_1; // 0x2c8
	UUI_GameEventParticipantInfoCardWidget_C* UI_GameEventParitcipantInfoCardWidget; // 0x2d0
	TArray<UWidget*> List; // 0x2d8
	UUI_GameEventTeamHeaderWidget_C* TeamHeaderWidgetClass_1; // 0x2e8
	TArray<UUI_GameEventTeamInfoWidget_C*> TeamWidgets; // 0x2f0
	TArray<FText> TeamNames; // 0x300
	TArray<FGameEventTeamColours> TeamColors; // 0x310
};

struct UInventoryContainerClothes : UObject {
	UInventoryContainerWidget2* _widget; // 0x30
	FInventoryContainerClothesData _data; // 0x48
	FInventoryContainerClothesData _oldData; // 0x68
};

struct ATournament : AActor {
	UAkAudioEvent* StartAnnouncement; // 0x230
	UAkAudioEvent* SuddenDeathAnnouncement; // 0x238
	UAkAudioEvent* EndAnnouncement; // 0x240
	bool _inProgress; // 0x248
	bool _inSuddenDeath; // 0x249
	bool _hasEnded; // 0x24a
	TArray<FTournamentStats> _stats; // 0x250
	UTournamentScoreboardWidget* _scoreboardWidget; // 0x260
};

struct UProceduralFoliageSpawner : UObject {
	int32_t randomSeed; // 0x28
	float TileSize; // 0x2c
	int32_t NumUniqueTiles; // 0x30
	float MinimumQuadTreeSize; // 0x34
	TArray<FFoliageTypeObject> FoliageTypes; // 0x40
};

struct UFieldSystemMetaDataProcessingResolution : UFieldSystemMetaData {
	EFieldResolutionType ResolutionType; // 0xb0
};

struct ABP_WeaponBullet_ShotgunShell_Crafted_C : AProjectileShotgun {
	FPointerToUberGraphFrame UberGraphFrame; // 0x428
};

struct UUI_ScreenSpaceHealthWidget_C : UScreenSpaceHealthWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Background; // 0x268
	UImage* DisabledBar; // 0x270
	UImage* HealthBar; // 0x278
	UMaterialInstanceDynamic* _healthBarMat; // 0x280
	UMaterialInstanceDynamic* _disabledBarMat; // 0x288
	UCurveFloat* ColorCurve; // 0x290
	FLinearColor ColorMaxHP; // 0x298
	FLinearColor ColorMinHP; // 0x2a8
};

struct UEnduranceSkill : UConstitutionSkill {
	FEnduranceSkillParametersPerSkillLevel NoSkillParameters; // 0xc0
	FEnduranceSkillParametersPerSkillLevel BasicSkillParameters; // 0xd8
	FEnduranceSkillParametersPerSkillLevel MediumSkillParameters; // 0xf0
	FEnduranceSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x108
};

struct AOnlineBeaconHost : AOnlineBeacon {
	int32_t ListenPort; // 0x250
	TArray<AOnlineBeaconClient*> ClientActors; // 0x258
};

struct USoundMix : UObject {
	char bApplyEQ : 1; // 0x28
	float EQPriority; // 0x2c
	FAudioEQEffect EQSettings; // 0x30
	TArray<FSoundClassAdjuster> SoundClassEffects; // 0x70
	float InitialDelay; // 0x80
	float FadeInTime; // 0x84
	float Duration; // 0x88
	float FadeOutTime; // 0x8c
};

struct UGizmoBoxComponent : UGizmoBaseComponent {
	FVector Origin; // 0x468
	FQuat Rotation; // 0x480
	FVector Dimensions; // 0x490
	float LineThickness; // 0x49c
	bool bRemoveHiddenLines; // 0x4a0
	bool bEnableAxisFlip; // 0x4a1
};

struct UNiagaraPreviewAxis_InterpParamLinearColor : UNiagaraPreviewAxis_InterpParamBase {
	FLinearColor Min; // 0x38
	FLinearColor Max; // 0x48
};

struct UDefaultDamageCustomization : UDamageCustomization {
	TArray<FPrisonerInjuryTypeLikelihoods> PrisonerInjuryTypeLikelihoodsPerBodyPart; // 0x28
	TArray<float> PrisonerBleedingSeverityEnergyThreshold; // 0x38
	float PrisonerDamageMultiplierPerBodyPart[0xc]; // 0x48
	float StaminaDrainPerHundredJoules; // 0x78
	float HeadshotInstantKillEnergyThreshold; // 0x7c
};

struct UPBCTT_BleedingInjury_StopBleeding : UPrisonerBodyConditionTreatmentItemTag {
	FFloatRange BleedingSeverityConstraint; // 0x50
	TArray<float> TreatmentDurationPerSeverityLevel; // 0x60
	TArray<float> TreatmentDurationPerUsePerSeverityLevel; // 0x70
	float StabilizationDurationReduction; // 0x80
	FPBCTT_BleedingInjury_StopBleeding_SkillData SkillData[0x5]; // 0x88
};

struct UUI_TeamInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UBorder* Border_2; // 0x268
	UResizableWindow_C* MainResizableWindow; // 0x270
	UVerticalBox* NamesVerticalBox; // 0x278
	UVerticalBox* TeammateNames; // 0x280
};

struct UParticleModuleEventReceiverSpawn : UParticleModuleEventReceiverBase {
	FRawDistributionFloat SpawnCount; // 0x40
	char bUseParticleTime : 1; // 0x70
	char bUsePSysLocation : 1; // 0x70
	char bInheritVelocity : 1; // 0x70
	FRawDistributionVector InheritVelocityScale; // 0x78
	TArray<UPhysicalMaterial*> PhysicalMaterials; // 0xc0
	char bBanPhysicalMaterials : 1; // 0xd0
};

struct UPanelWidget : UWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UUI_CharacterSlot_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UButton* Button_1; // 0x280
	UUI_TrashMenuButton_C* UI_MenuButton_129; // 0x288
	FMulticastInlineDelegate OnClicked; // 0x290
	FMulticastInlineDelegate OnDestroyClicked; // 0x2a0
	UUserProfile* UserProfile; // 0x2b0
};

struct UBP_M1_OpenEjectBulletInsertClip_C : UInsertMagazine {
	FPointerToUberGraphFrame UberGraphFrame; // 0x90
	int32_t LoadedAmmoCount; // 0x98
};

struct UAIPerceptionSystem : UAISubsystem {
	TArray<UAISense*> Senses; // 0x88
	float PerceptionAgingRate; // 0x98
};

struct UMaterialExpressionThinTranslucentMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput TransmittanceColor; // 0x40
};

struct UNavigationSystemConfig : UObject {
	FSoftClassPath NavigationSystemClass; // 0x28
	FNavAgentSelector SupportedAgentsMask; // 0x40
	FName DefaultAgentName; // 0x44
	char bIsOverriden : 1; // 0x4c
};

struct ASpectatorBeaconHost : AOnlineBeaconHostObject {
	USpectatorBeaconState* State; // 0x248
	bool bLogoutOnSessionTimeout; // 0x2b0
	float SessionTimeoutSecs; // 0x2b4
	float TravelSessionTimeoutSecs; // 0x2b8
};

struct USoundSourceBus : USoundWave {
	ESourceBusChannels SourceBusChannels; // 0x370
	float SourceBusDuration; // 0x374
	UAudioBus* AudioBus; // 0x378
	char bAutoDeactivateWhenSilent : 1; // 0x380
};

struct UParticleModuleAccelerationConstant : UParticleModuleAccelerationBase {
	FVector Acceleration; // 0x38
};

struct UMovieSceneNiagaraSystemSpawnSection : UMovieSceneSection {
	ENiagaraSystemSpawnSectionStartBehavior SectionStartBehavior; // 0xe8
	ENiagaraSystemSpawnSectionEvaluateBehavior SectionEvaluateBehavior; // 0xec
	ENiagaraSystemSpawnSectionEndBehavior SectionEndBehavior; // 0xf0
	ENiagaraAgeUpdateMode AgeUpdateMode; // 0xf4
};

struct UBuriableItemComponentState : UItemComponentStateBase {
	bool IsBuried; // 0x40
	FDbIntegerId BurierUserId; // 0x48
};

struct UCutObjectAssetData : UInteractionAssetData {
	UChoppingRecipeDataAsset* ChoppingRecipeDataAsset; // 0x30
};

struct UNiagaraDataInterface2DArrayTexture : UNiagaraDataInterface {
	UTexture2DArray* Texture; // 0x38
};

struct UEnvQueryTest_Distance : UEnvQueryTest {
	EEnvTestDistance TestMode; // 0x1f8
	UEnvQueryContext* DistanceTo; // 0x200
};

struct AFlareItem : AItem {
	EFlareIgniteState _repState; // 0x7c1
	FName _effectsSocket; // 0x7c4
	UAkAudioEvent* _flareIgnitedAudioEvent; // 0x7d8
	UAkAudioEvent* _flareExtinguishedAudioEvent; // 0x7e0
	float _particlesLoopStartBlend; // 0x7e8
	float _particlesLoopDuration; // 0x7ec
	UParticleSystem* _flareIgnitedParticle; // 0x7f0
	UParticleSystem* _flareLoopParticle; // 0x7f8
	UParticleSystem* _flareExtinguishedParticle; // 0x800
	float _autoDestroyTimeOnUse; // 0x808
	float _flareIgnitedParticlesDuration; // 0x80c
	float _flareExtinguishedParticleDuration; // 0x810
	float _noiseLoudnessWhileIgnited; // 0x814
	float _noiseLoudnessUpdateFrequencyPerHour; // 0x818
	FName _burningNoiseTag; // 0x81c
	FLinearColor _pointLightColor; // 0x830
	UMaterialInterface* _pointLightFunctionMaterial; // 0x840
};

struct UMissionItemWidget : UUserWidget {
	UTextBlock* _missionItemName; // 0x290
	UTextBlock* _missionItemCategory; // 0x298
	UOverlay* _selectionBorder; // 0x2a0
	UImage* _stateImageIcon; // 0x2a8
	UButton* _expandButton; // 0x2b0
	UOverlay* _objectiveContentOverlay; // 0x2b8
	UVerticalBox* _objectiveContainer; // 0x2c0
	UTexture2D* _availableMissionIcon; // 0x2c8
	UTexture2D* _startedMissionIcon; // 0x2d0
	UTexture2D* _completedMissionIcon; // 0x2d8
	UTexture2D* _failedMissionIcon; // 0x2e0
	FLinearColor _widgetNormalColor; // 0x2e8
	FLinearColor _widgetCompletedColor; // 0x2f8
	float _activeTextFontSize; // 0x308
	float _inactiveTextFontSize; // 0x30c
	UAkAudioEvent* _expandButtonOpenSound; // 0x310
	UAkAudioEvent* _expandButtonClosedSound; // 0x318
	TMap<FString, TWeakObjectPtr<UObjectiveItemWidget>> _objectiveItemWidgets; // 0x3e8
};

struct UWidget : UVisual {
	UPanelSlot* slot; // 0x28
	FDelegate bIsEnabledDelegate; // 0x30
	FText ToolTipText; // 0x40
	FDelegate ToolTipTextDelegate; // 0x58
	UWidget* ToolTipWidget; // 0x68
	FDelegate ToolTipWidgetDelegate; // 0x70
	FDelegate VisibilityDelegate; // 0x80
	FWidgetTransform RenderTransform; // 0x90
	FVector2D RenderTransformPivot; // 0xac
	char bIsVariable : 1; // 0xb4
	char bCreatedByConstructionScript : 1; // 0xb4
	char bIsEnabled : 1; // 0xb4
	char bOverride_Cursor : 1; // 0xb4
	USlateAccessibleWidgetData* AccessibleWidgetData; // 0xb8
	char bIsVolatile : 1; // 0xc0
	EMouseCursor Cursor; // 0xc1
	EWidgetClipping Clipping; // 0xc2
	ESlateVisibility Visibility; // 0xc3
	float RenderOpacity; // 0xc4
	UWidgetNavigation* Navigation; // 0xc8
	EFlowDirectionPreference FlowDirectionPreference; // 0xd0
	TArray<UPropertyBinding*> NativeBindings; // 0xf8
};

struct UAsyncActionLoadPrimaryAssetClass : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate completed; // 0x78
};

struct UPhysicsConstraintComponent : USceneComponent {
	AActor* ConstraintActor1; // 0x1f8
	FConstrainComponentPropName ComponentName1; // 0x200
	AActor* ConstraintActor2; // 0x208
	FConstrainComponentPropName ComponentName2; // 0x210
	UPhysicsConstraintTemplate* ConstraintSetup; // 0x228
	FMulticastInlineDelegate OnConstraintBroken; // 0x230
	FConstraintInstance ConstraintInstance; // 0x240
};

struct APartyBeaconHost : AOnlineBeaconHostObject {
	UPartyBeaconState* State; // 0x248
	bool bLogoutOnSessionTimeout; // 0x2b0
	float SessionTimeoutSecs; // 0x2b4
	float TravelSessionTimeoutSecs; // 0x2b8
};

struct APaperGroupedSpriteActor : AActor {
	UPaperGroupedSpriteComponent* RenderComponent; // 0x220
};

struct USequenceCameraShake : UCameraShakeBase {
	UCameraAnimationSequence* Sequence; // 0x98
	float PlayRate; // 0xa0
	float Scale; // 0xa4
	float BlendInTime; // 0xa8
	float BlendOutTime; // 0xac
	float RandomSegmentDuration; // 0xb0
	bool bRandomSegment; // 0xb4
	USequenceCameraShakeSequencePlayer* Player; // 0xb8
	USequenceCameraShakeCameraStandIn* CameraStandIn; // 0xc0
};

struct UEdGraph : UObject {
	UEdGraphSchema* Schema; // 0x28
	TArray<UEdGraphNode*> Nodes; // 0x30
	char bEditable : 1; // 0x40
	char bAllowDeletion : 1; // 0x40
	char bAllowRenaming : 1; // 0x40
};

struct UDatasmithDeltaGenSceneImportData : UDatasmithFBXSceneImportData {
	bool bMergeNodes; // 0x48
	bool bOptimizeDuplicatedNodes; // 0x49
	bool bRemoveInvisibleNodes; // 0x4a
	bool bSimplifyNodeHierarchy; // 0x4b
	bool bImportVar; // 0x4c
	FString VarPath; // 0x50
	bool bImportPos; // 0x60
	FString PosPath; // 0x68
	bool bImportTml; // 0x78
	FString TmlPath; // 0x80
};

struct UUI_GameEventTeamInfoWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UBorder* StatTextContainer; // 0x268
	UBorder* TeamHeader; // 0x270
	UScrollBox* TeamRows; // 0x278
	UUI_GameEventTeamHeaderWidget_C* HeaderWidget; // 0x280
	UGameEventParticipantStatsWidget* ParticipantStatClass; // 0x288
	FGameEventTeamColours TeamColours; // 0x290
};

struct UWeaponFirstPersonAnimationsDataAsset : UItemFirstPersonAnimationsDataAsset {
	FItemFirstPersonUpperBodyAnimationsData UpperBodyAimingHip; // 0x98
};

struct UCircularMenuSegmentInteractionInfo : UCircularMenuSegmentInfo {
	EInteractionTargetType InteractionTargetType; // 0x80
	FInteractionStruct InteractionInfo; // 0x88
	bool RequireSupporterPack; // 0x100
	APrisoner* _interactionInitiator; // 0x108
	UObject* _interactableObject; // 0x110
};

struct UBTTask_GameplayTaskBase : UBTTaskNode {
	char bWaitForGameplayTask : 1; // 0x70
};

struct UParticleModuleSubUVMovie : UParticleModuleSubUV {
	char bUseEmitterTime : 1; // 0x70
	FRawDistributionFloat FrameRate; // 0x78
	int32_t StartingFrame; // 0xa8
};

struct UMaterialExpression : UObject {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMaterialExpressionSkyAtmosphereLightDirection : UMaterialExpression {
	int32_t LightIndex; // 0x40
};

struct ASedentaryNPC : AConZCharacter {
	TArray<USedentaryNPCBackgroundInteraction*> _backgroundInteractions; // 0x7c0
	USedentaryNPCBackgroundInteraction* _activeBackgroundInteraction; // 0x7d0
	float _interactionDistance; // 0x7d8
};

struct UCircularMenuSegmentInfo : UDataAsset {
	FText Caption; // 0x30
	UCircularMenuSegmentIcons* Icons; // 0x48
	bool ShouldApplyFadeToIcon; // 0x50
	float IconSizeOverride; // 0x54
	bool ShouldStayVisible; // 0x58
	bool ShowTooltip; // 0x59
	FText ToolTipText; // 0x60
	UCircularMenuWidget* ParentCircularWidget; // 0x78
};

struct ADropZoneSlot : AActor {
	UStaticMeshComponent* Mesh; // 0x228
	float ActivationDuration; // 0x230
	UStaticMesh* UnlockedMesh; // 0x238
	UAkAudioEvent* ActivateSound; // 0x240
	ADropZoneGameEvent* _gameEvent; // 0x248
};

struct UEnvironmentDescriptionComponent : UStaticMeshComponent {
	EEnvironmentClass EnvironmentClass; // 0x4d8
	bool IsUnderground; // 0x4d9
	bool ShouldBlockWeatherEffects; // 0x4da
};

struct UCraftingPanelWidget : UDesignableUserWidget {
	FMulticastInlineDelegate RecipeItemClicked; // 0x278
	UCraftingInfoWidget* _craftingInfo; // 0x288
	UWidget* _searchWidget; // 0x290
	UGridPanel* _inventoryBox; // 0x298
	UGridPanel* _vicinityBox; // 0x2a0
	UGridPanel* _toolsAndWeaponsBox; // 0x2a8
	UGridPanel* _toolsAndWeaponsSubBox1; // 0x2b0
	UGridPanel* _toolsAndWeaponsSubBox2; // 0x2b8
	UGridPanel* _toolsAndWeaponsSubBox3; // 0x2c0
	UGridPanel* _toolsAndWeaponsSubBox4; // 0x2c8
	UGridPanel* _toolsAndWeaponsSubBox5; // 0x2d0
	UUserWidget* ToolsAndWeaponsSubContainer1; // 0x2d8
	UUserWidget* ToolsAndWeaponsSubContainer2; // 0x2e0
	UUserWidget* ToolsAndWeaponsSubContainer3; // 0x2e8
	UUserWidget* ToolsAndWeaponsSubContainer4; // 0x2f0
	UUserWidget* ToolsAndWeaponsSubContainer5; // 0x2f8
	UGridPanel* _itemsBox; // 0x300
	UGridPanel* _itemsSubBox1; // 0x308
	UGridPanel* _itemsSubBox2; // 0x310
	UGridPanel* _itemsSubBox3; // 0x318
	UGridPanel* _itemsSubBox4; // 0x320
	UGridPanel* _itemsSubBox5; // 0x328
	UUserWidget* ItemsSubContainer1; // 0x330
	UUserWidget* ItemsSubContainer2; // 0x338
	UUserWidget* ItemsSubContainer3; // 0x340
	UUserWidget* ItemsSubContainer4; // 0x348
	UUserWidget* ItemsSubContainer5; // 0x350
	UGridPanel* _foodBox; // 0x358
	UGridPanel* _foodSubBox1; // 0x360
	UGridPanel* _foodSubBox2; // 0x368
	UGridPanel* _foodSubBox3; // 0x370
	UGridPanel* _foodSubBox4; // 0x378
	UGridPanel* _foodSubBox5; // 0x380
	UUserWidget* FoodSubContainer1; // 0x388
	UUserWidget* FoodSubContainer2; // 0x390
	UUserWidget* FoodSubContainer3; // 0x398
	UUserWidget* FoodSubContainer4; // 0x3a0
	UUserWidget* FoodSubContainer5; // 0x3a8
	UGridPanel* _placeablesBox; // 0x3b0
	UGridPanel* _placeablesSubBox1; // 0x3b8
	UGridPanel* _placeablesSubBox2; // 0x3c0
	UGridPanel* _placeablesSubBox3; // 0x3c8
	UGridPanel* _placeablesSubBox4; // 0x3d0
	UGridPanel* _placeablesSubBox5; // 0x3d8
	UUserWidget* PlaceablesSubContainer1; // 0x3e0
	UUserWidget* PlaceablesSubContainer2; // 0x3e8
	UUserWidget* PlaceablesSubContainer3; // 0x3f0
	UUserWidget* PlaceablesSubContainer4; // 0x3f8
	UUserWidget* PlaceablesSubContainer5; // 0x400
	UGridPanel* _basebuildingBox; // 0x408
	UGridPanel* _basebuildingSubBox1; // 0x410
	UGridPanel* _basebuildingSubBox2; // 0x418
	UGridPanel* _basebuildingSubBox3; // 0x420
	UGridPanel* _basebuildingSubBox4; // 0x428
	UGridPanel* _basebuildingSubBox5; // 0x430
	UUserWidget* BaseBuildingContainer; // 0x438
	UUserWidget* BaseBuildingSubContainer1; // 0x440
	UUserWidget* BaseBuildingSubContainer2; // 0x448
	UUserWidget* BaseBuildingSubContainer3; // 0x450
	UUserWidget* BaseBuildingSubContainer4; // 0x458
	UUserWidget* BaseBuildingSubContainer5; // 0x460
	UScrollBox* _inventoryScrollBox; // 0x468
	UScrollBox* _vicinityScrollBox; // 0x470
	UScrollBox* _toolsAndWeaponsScrollBox; // 0x478
	UScrollBox* _itemsScrollBox; // 0x480
	UScrollBox* _foodScrollBox; // 0x488
	UScrollBox* _placeablesScrollBox; // 0x490
	UScaleBox* _toolsAndWeaponsScaleBox; // 0x498
	UScaleBox* _itemsScaleBox; // 0x4a0
	UScaleBox* _foodScaleBox; // 0x4a8
	UScaleBox* _placeablesScaleBox; // 0x4b0
	TWeakObjectPtr<UCraftingRecipeWidget> _selectedRecipeWidget; // 0x4b8
	UPlacedPlaceableWidget* _placedPlaceableWidget; // 0x4c0
};

struct UInventoryPanelThirdIteration : UDesignableUserWidget {
	TWeakObjectPtr<ACharacter> _displayedCharacter; // 0x278
	UScrollBox* _inventoriesScrollBox; // 0x280
	UVerticalBox* _nonContainerBox; // 0x288
	TMap<UObject*, UItemInventoryWidget2*> _inventories; // 0x290
	TMap<UObject*, UInventoryPanelSideLayerWidget*> _sideLayers; // 0x2e0
	TMap<UObject*, UItemWidget2*> _nonContainerItems; // 0x330
	FMargin _nonContainerItemsPadding; // 0x380
};

struct UNavigationDataChunk : UObject {
	FName NavigationDataName; // 0x28
};

struct USequenceCameraShakeSequencePlayer : UObject {
	UObject* BoundObjectOverride; // 0x480
	UMovieSceneSequence* Sequence; // 0x488
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x490
};

struct UItemGroup : UDataAsset {
	TArray<AItem*> Items; // 0x30
};

struct ALockBombDefusalMinigame : ABombDefusalMinigameBase {
	ATrapItem* _bombClass; // 0x4e0
};

struct UAudioCurveSourceComponent : UAudioComponent {
	FName CurveSourceBindingName; // 0x868
	float CurveSyncOffset; // 0x870
};

struct UCineCameraComponent : UCameraComponent {
	FCameraFilmbackSettings FilmbackSettings; // 0x7c0
	FCameraFilmbackSettings Filmback; // 0x7cc
	FCameraLensSettings LensSettings; // 0x7d8
	FCameraFocusSettings FocusSettings; // 0x7f0
	float CurrentFocalLength; // 0x848
	float CurrentAperture; // 0x84c
	float CurrentFocusDistance; // 0x850
	TArray<FNamedFilmbackPreset> FilmbackPresets; // 0x860
	TArray<FNamedLensPreset> LensPresets; // 0x870
	FString DefaultFilmbackPresetName; // 0x880
	FString DefaultFilmbackPreset; // 0x890
	FString DefaultLensPresetName; // 0x8a0
	float DefaultLensFocalLength; // 0x8b0
	float DefaultLensFStop; // 0x8b4
};

struct UMaterialExpressionConstant4Vector : UMaterialExpression {
	FLinearColor Constant; // 0x40
};

struct AItemContainerManager : AActor {
	TMap<AItemContainer*, FBox2D> _itemContainers; // 0x268
	TMap<FDbIntegerId, FItemContainersArray> _itemContainersOwned; // 0x2b8
	FItemContainersReplicationHelper _itemContainersDataRepHelper; // 0x310
};

struct UGeometryCacheCodecRaw : UGeometryCacheCodecBase {
	int32_t DummyProperty; // 0x38
};

struct UPrisonerAnimInstance_Airplane : UAnimInstance {
	bool _isDriver; // 0x2b8
	float _pitchAmount; // 0x2bc
	float _rollAmount; // 0x2c0
	float _yawAmount; // 0x2c4
	UBlendSpace* _driverIdleAnimation; // 0x2c8
	UBlendSpace* _passengerIdleAnimation; // 0x2d0
};

struct UNiagaraSimulationStageBase : UNiagaraMergeable {
	UNiagaraScript* Script; // 0x28
	FName SimulationStageName; // 0x30
	char bEnabled : 1; // 0x38
};

struct ABP_CTFGameEvent_C : ACTFGameEvent {
	USceneComponent* DefaultSceneRoot; // 0x6c0
};

struct ACan04_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct ABirdTargetPoint : AActor {
	bool IsOccupied; // 0x220
};

struct UDisplaceMeshDirectionalFilterProperties : UInteractiveToolPropertySet {
	bool bEnableFilter; // 0x60
	FVector FilterDirection; // 0x64
	float FilterWidth; // 0x70
};

struct USledgeDriverMountSlot : USledgeMountSlot {
	UBlendSpace* _forwardIdleAnimation; // 0x128
	UAnimSequenceBase* _forwardSteeringAnimation; // 0x130
	UAnimSequenceBase* _forwardSteeringAnimationFP; // 0x138
	UBlendSpace* _reverseIdleAnimation; // 0x140
	UAnimSequenceBase* _reverseSteeringAnimation; // 0x148
	UAnimSequenceBase* _reverseSteeringAnimationFP; // 0x150
};

struct AMagicLeapARPinRenderer : AActor {
	bool bInfoActorsVisibilityOverride; // 0x220
	TMap<FGuid, AMagicLeapARPinInfoActorBase*> AllInfoActors; // 0x228
	AMagicLeapARPinInfoActorBase* ClassToSpawn; // 0x280
};

struct UBP_M82A1_Reload_Event_C : UEventInsertMagazine {
	int32_t MaxAmmoCount; // 0x90
};

struct UAcceptOutputProperties : UInteractiveToolPropertySet {
	bool bExportSeparatedPiecesAsNewMeshAssets; // 0x60
};

struct UUI_GameEventLoadoutMenuWidget_C : UGameEventLoadoutMenuWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UImage* Image_1; // 0x288
	UUI_ItemSelectionSlotWidget_C* OutfitSelection; // 0x290
	UUI_ItemSelectionSlotWidget_C* PrimarySelection; // 0x298
	UUI_ItemSelectionSlotWidget_C* SecondarySelection; // 0x2a0
	UUI_ItemSelectionSlotWidget_C* SupportSelection; // 0x2a8
	UUI_ItemSelectionSlotWidget_C* TertiarySelection; // 0x2b0
	TArray<UItemSelection*> MandatoryGear; // 0x2b8
};

struct UCheckBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FCheckBoxStyle CheckBoxStyle; // 0x30
};

struct ALocationTrigger : ATriggerBox {
	FTransform _markerTransform; // 0x230
};

struct UUI_Metabolism_LightItemDisplayPanel_SelectedItems_C : UMetabolismLightItemDisplayPanel {
	UUI_ItemLightDisplay_C* ItemSlot_1; // 0x2a0
	UUI_ItemLightDisplay_C* ItemSlot_2; // 0x2a8
	UUI_ItemLightDisplay_C* ItemSlot_3; // 0x2b0
	UUI_ItemLightDisplay_C* ItemSlot_4; // 0x2b8
	UUI_ItemLightDisplay_C* ItemSlot_5; // 0x2c0
	UUI_ItemLightDisplay_C* ItemSlot_6; // 0x2c8
	UUI_ItemLightDisplay_C* ItemSlot_7; // 0x2d0
};

struct UUI_FoodTooltipPanelFullUse_C : UItemTooltipPanel {
	UImage* Image_1; // 0x2c8
	UImage* Image_2; // 0x2d0
	UImage* Image_3; // 0x2d8
	UImage* Image_5; // 0x2e0
	UImage* Image_6; // 0x2e8
	UImage* Image_7; // 0x2f0
	UUI_TooltipOverviewTextElement_C* UI_TooltipOverviewTextElement; // 0x2f8
	UUI_TooltipOverviewTextElement_C* UI_TooltipOverviewTextElement_C_1; // 0x300
	UUI_TooltipOverviewTextElement_C* UI_TooltipOverviewTextElement_C_2; // 0x308
	UUI_TooltipOverviewTextElement_C* UI_TooltipOverviewTextElement_C_3; // 0x310
	UUI_TooltipOverviewTextElement_C* UI_TooltipOverviewTextElement_C_4; // 0x318
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement; // 0x320
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_2; // 0x328
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_1; // 0x330
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_2; // 0x338
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_3; // 0x340
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_4; // 0x348
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_5; // 0x350
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_6; // 0x358
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_7; // 0x360
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_8; // 0x368
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_9; // 0x370
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_10; // 0x378
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_11; // 0x380
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_12; // 0x388
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_13; // 0x390
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_14; // 0x398
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_15; // 0x3a0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_16; // 0x3a8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_17; // 0x3b0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_18; // 0x3b8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_19; // 0x3c0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_20; // 0x3c8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_21; // 0x3d0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_22; // 0x3d8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_23; // 0x3e0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_24; // 0x3e8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_25; // 0x3f0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_26; // 0x3f8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_27; // 0x400
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_28; // 0x408
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_37; // 0x410
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_39; // 0x418
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_40; // 0x420
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_41; // 0x428
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_42; // 0x430
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_43; // 0x438
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_44; // 0x440
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_45; // 0x448
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_46; // 0x450
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_47; // 0x458
};

struct UNiagaraPreviewAxis_InterpParamBase : UNiagaraPreviewAxis {
	FName Param; // 0x28
	int32_t count; // 0x30
};

struct USceneCaptureComponent2D : USceneCaptureComponent {
	ECameraProjectionMode ProjectionType; // 0x2b0
	float FOVAngle; // 0x2b4
	float OrthoWidth; // 0x2b8
	UTextureRenderTarget2D* TextureTarget; // 0x2c0
	ESceneCaptureCompositeMode CompositeMode; // 0x2c8
	FPostProcessSettings PostProcessSettings; // 0x2d0
	float PostProcessBlendWeight; // 0x820
	char bOverride_CustomNearClippingPlane : 1; // 0x824
	float CustomNearClippingPlane; // 0x828
	bool bUseCustomProjectionMatrix; // 0x82c
	FMatrix CustomProjectionMatrix; // 0x830
	bool bEnableClipPlane; // 0x870
	FVector ClipPlaneBase; // 0x874
	FVector ClipPlaneNormal; // 0x880
	char bCameraCutThisFrame : 1; // 0x88c
	char bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1; // 0x88c
	bool bDisableFlipCopyGLES; // 0x890
};

struct UMaterialExpressionMin : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UAnimNotify_MakeNoise : UAnimNotify {
	ENoiseLevel noiseLevel; // 0x38
};

struct ATS_Fireworks_Shell_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	URotatingMovementComponent* RotatingMovement1; // 0x228
	UParticleSystemComponent* Shell Trail; // 0x230
	USphereComponent* Sphere1; // 0x238
	UProjectileMovementComponent* ProjectileMovement1; // 0x240
	float BurstShapeScaler_Scale_83FB1B9842F674C2E551BD822515228D; // 0x248
	ETimelineDirection BurstShapeScaler__Direction_83FB1B9842F674C2E551BD822515228D; // 0x24c
	UTimelineComponent* BurstShapeScaler; // 0x250
	float Max Rotation Speed; // 0x258
	float Min Rotation Speed; // 0x25c
	float Max Launch Velocity; // 0x260
	float Min Launch velocity; // 0x264
	float Shell Max Life; // 0x268
	float Shell min life; // 0x26c
	float MaxBurstTime; // 0x270
	float MinBurstTime; // 0x274
	UParticleSystem* BurstParticleSystem; // 0x278
	TArray<FLinearColor> BurstStarColors; // 0x280
	TArray<FLinearColor> SparkleColors; // 0x290
	UParticleSystem* ShellParticleSystem; // 0x2a0
	float ParticleLife; // 0x2a8
	float BurstTime; // 0x2ac
	int32_t NumberOfBursts; // 0x2b0
	float SecondaryBurstDelay; // 0x2b4
	FLinearColor FlareColor; // 0x2b8
	FLinearColor ShellTailColor; // 0x2c8
	bool DoShapedBurst; // 0x2d8
	bool UseShellSmoke; // 0x2d9
	bool UseBurstSmoke; // 0x2da
	float BurstSparkleMultiplier; // 0x2dc
	float ShellSparkleMultiplier; // 0x2e0
	float BurstStarMultiplier; // 0x2e4
	UMaterial* BlankMaterial; // 0x2e8
	USkeletalMesh* ShapedBurstActorMesh; // 0x2f0
	AActor* ShapeActor; // 0x2f8
	UParticleSystemComponent* ShapedBurstParticleSystem; // 0x300
	bool RandomRotation; // 0x308
	bool silent; // 0x309
};

struct UAxisAngleGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoFloatParameterSource> AngleSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bInInteraction; // 0x88
	FVector RotationOrigin; // 0x8c
	FVector RotationAxis; // 0x98
	FVector RotationPlaneX; // 0xa4
	FVector RotationPlaneY; // 0xb0
	FVector InteractionStartPoint; // 0xbc
	FVector InteractionCurPoint; // 0xc8
	float InteractionStartAngle; // 0xd4
	float InteractionCurAngle; // 0xd8
};

struct UMaterialExpressionSceneDepth : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput Coordinates; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct UAirplaneMountSlot : UActorComponent {
	FName _socketName; // 0xb8
	UAkAudioEvent* _mountAudioEvent; // 0xc0
	int32_t _mountPriority; // 0xc8
	TArray<FMountSlotEntryPoint> _entryPoints; // 0xd0
	UAkAudioEvent* _unmountAudioEvent; // 0xe0
	bool _isReachableFromSky; // 0xe8
	EMotionIntensity _mountingMotionIntensity; // 0xe9
	EMotionIntensity _unmountingMotionIntensity; // 0xea
	FVector _mounteeCenterOfMassOffset; // 0xec
	float _minEffectiveMounteeMass; // 0xf8
	float _maxEffectiveMounteeMass; // 0xfc
	UObject* _mountee; // 0x100
	UObject* _reservee; // 0x108
	bool _canMounteeBeAttackedByMelee; // 0x110
	TArray<UPhysicalMaterial*> _interactionZoneMaterials; // 0x118
	float _mountSpeedThreshold; // 0x128
	float _unmountSpeedThreshold; // 0x12c
	float _unmountInputVelocityThreshold; // 0x130
};

struct UPrisonerBodySymptom_Bleeding : UPrisonerBodySymptom {
	FRuntimeFloatCurve _vignetteEffectIntensityVsSeverityRatio; // 0xb8
	FRuntimeFloatCurve _vignetteEffectPulsationFrequencyVsSeverityRatio; // 0x140
	FRuntimeFloatCurve _vignetteEffectSeverityRatioMultiplierVsHealthRatio; // 0x1c8
	float _vignetteEffectIntensityInterpSpeed; // 0x250
	float _vignetteEffectFrequencyInterpSpeed; // 0x258
};

struct UMovieSceneGeometryCollectionTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
};

struct UGameplayTask_TimeLimitedExecution : UGameplayTask {
	FMulticastInlineDelegate OnFinished; // 0x68
	FMulticastInlineDelegate OnTimeExpired; // 0x78
};

struct UParticleModuleRequired : UParticleModule {
	UMaterialInterface* Material; // 0x30
	float MinFacingCameraBlendDistance; // 0x38
	float MaxFacingCameraBlendDistance; // 0x3c
	FVector EmitterOrigin; // 0x40
	FRotator EmitterRotation; // 0x4c
	EParticleScreenAlignment ScreenAlignment; // 0x58
	char bUseLocalSpace : 1; // 0x59
	char bKillOnDeactivate : 1; // 0x59
	char bKillOnCompleted : 1; // 0x59
	EParticleSortMode SortMode; // 0x5a
	char bUseLegacyEmitterTime : 1; // 0x5b
	char bRemoveHMDRoll : 1; // 0x5b
	char bEmitterDurationUseRange : 1; // 0x5b
	float EmitterDuration; // 0x5c
	FRawDistributionFloat SpawnRate; // 0x60
	TArray<FParticleBurst> BurstList; // 0x90
	float EmitterDelay; // 0xa0
	float EmitterDelayLow; // 0xa4
	char bDelayFirstLoopOnly : 1; // 0xa8
	EParticleSubUVInterpMethod InterpolationMethod; // 0xa9
	char bScaleUV : 1; // 0xaa
	char bEmitterDelayUseRange : 1; // 0xaa
	EParticleBurstMethod ParticleBurstMethod; // 0xab
	char bOverrideSystemMacroUV : 1; // 0xac
	char bUseMaxDrawCount : 1; // 0xac
	EOpacitySourceMode OpacitySourceMode; // 0xad
	EEmitterNormalsMode EmitterNormalsMode; // 0xae
	char bOrbitModuleAffectsVelocityAlignment : 1; // 0xaf
	int32_t SubImages_Horizontal; // 0xb0
	int32_t SubImages_Vertical; // 0xb4
	float RandomImageTime; // 0xb8
	int32_t RandomImageChanges; // 0xbc
	FVector MacroUVPosition; // 0xc0
	float MacroUVRadius; // 0xcc
	EParticleUVFlipMode UVFlippingMode; // 0xd0
	ESubUVBoundingVertexCount BoundingMode; // 0xd1
	char bDurationRecalcEachLoop : 1; // 0xd2
	FVector NormalsSphereCenter; // 0xd4
	float AlphaThreshold; // 0xe0
	int32_t EmitterLoops; // 0xe4
	UTexture2D* CutoutTexture; // 0xe8
	int32_t MaxDrawCount; // 0xf0
	float EmitterDurationLow; // 0xf4
	FVector NormalsCylinderDirection; // 0xf8
	TArray<FName> NamedMaterialOverrides; // 0x108
};

struct UMaterialExpressionFunctionOutput : UMaterialExpression {
	FName OutputName; // 0x40
	FString Description; // 0x48
	int32_t SortPriority; // 0x58
	FExpressionInput A; // 0x5c
	char bLastPreviewed : 1; // 0x70
	FGuid ID; // 0x74
};

struct URevolveOperatorFactory : UObject {
	UDrawAndRevolveTool* RevolveTool; // 0x30
};

struct USoundNodeWaveParam : USoundNode {
	FName WaveParameterName; // 0x48
};

struct UInAppPurchaseQueryCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UBakeTransformToolProperties : UInteractiveToolPropertySet {
	bool bBakeRotation; // 0x60
	EBakeScaleMethod BakeScale; // 0x61
	bool bRecenterPivot; // 0x62
};

struct UFireworksItemState : UItemState {
	bool IsFiring; // 0xf8
	int32_t LaunchedShells; // 0xfc
};

struct UGeometryCollectionComponent : UMeshComponent {
	AChaosSolverActor* ChaosSolverActor; // 0x478
	UGeometryCollection* RestCollection; // 0x560
	TArray<AFieldSystemActor*> InitializationFields; // 0x568
	bool Simulating; // 0x578
	EObjectStateTypeEnum ObjectType; // 0x580
	bool EnableClustering; // 0x581
	int32_t ClusterGroupIndex; // 0x584
	int32_t MaxClusterLevel; // 0x588
	TArray<float> DamageThreshold; // 0x590
	EClusterConnectionTypeEnum ClusterConnectionType; // 0x5a0
	int32_t CollisionGroup; // 0x5a4
	float CollisionSampleFraction; // 0x5a8
	float LinearEtherDrag; // 0x5ac
	float AngularEtherDrag; // 0x5b0
	UChaosPhysicalMaterial* PhysicalMaterial; // 0x5b8
	EInitialVelocityTypeEnum InitialVelocityType; // 0x5c0
	FVector InitialLinearVelocity; // 0x5c4
	FVector InitialAngularVelocity; // 0x5d0
	UPhysicalMaterial* PhysicalMaterialOverride; // 0x5e0
	FGeomComponentCacheParameters CacheParameters; // 0x5e8
	FMulticastInlineDelegate NotifyGeometryCollectionPhysicsStateChange; // 0x638
	FMulticastInlineDelegate NotifyGeometryCollectionPhysicsLoadingStateChange; // 0x648
	FMulticastInlineDelegate OnChaosBreakEvent; // 0x670
	float DesiredCacheTime; // 0x680
	bool CachePlayback; // 0x684
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x688
	bool bNotifyBreaks; // 0x698
	bool bNotifyCollisions; // 0x699
	bool bEnableReplication; // 0x69a
	bool bEnableAbandonAfterLevel; // 0x69b
	int32_t ReplicationAbandonClusterLevel; // 0x69c
	FGeometryCollectionRepData RepData; // 0x6a0
	UBodySetup* DummyBodySetup; // 0x8d0
};

struct UAmmunitionItemState : UItemState {
	int32_t AmmoCount; // 0xf8
};

struct UGlobalItemSpawner : UObject {
	int32_t SpawnProbabilityMultiplier; // 0xa0
	float RespawnInterval; // 0xa4
	float RespawnDistanceSquared; // 0xa8
	int32_t RespawnBatch; // 0xac
	float RarityValues[0x6]; // 0xb0
	TArray<TSoftClassPtr<UObject>> _itemClasses; // 0xd0
	TArray<AItemSpawnerVolume*> _spawnerVolumes; // 0xf0
};

struct AWeaponRevolver : AWeapon {
	UWeaponStateFiring* FireState; // 0x2dd0
	UWeaponState* _revolverActiveState; // 0x2dd8
	FCharacterAndItemAnimation _fireAnimation; // 0x2de0
	FCharacterAndItemAnimation _dryFireAnimation; // 0x2df0
	FCharacterAndItemAnimation _rollDrumAnimation; // 0x2e00
	UAnimMontage* _russianRouletteMontage; // 0x2e10
	float _drumRotationOffset; // 0x2e18
	int32_t _firingIndex; // 0x2e1c
	float _drumRotationInterpolatorSpeed; // 0x2e30
	ERotationDirection _drumRotationDirection; // 0x2e34
};

struct USoundfieldEndpointSubmix : USoundSubmixBase {
	FName SoundfieldEndpointType; // 0x38
	UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40
	USoundfieldEndpointSettingsBase* EndpointSettings; // 0x48
	USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x50
	USoundfieldEncodingSettingsBase* EncodingSettings; // 0x58
	TArray<USoundfieldEffectBase*> SoundfieldEffectChain; // 0x60
};

struct ABP_Dropping_01_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UPhysicsConstraintComponent* MyConstraintComp1; // 0x228
	UPhysicsConstraintComponent* MyConstraintComp; // 0x230
	UStaticMeshComponent* Shit_03; // 0x238
	UStaticMeshComponent* Shit_02; // 0x240
	UStaticMeshComponent* Shit_01; // 0x248
	USceneComponent* SharedRoot; // 0x250
	FVector OffsetTimeline_Offset_509AAF33465941489534FEBEC2819093; // 0x258
	ETimelineDirection OffsetTimeline__Direction_509AAF33465941489534FEBEC2819093; // 0x264
	UTimelineComponent* OffsetTimeline; // 0x268
	FVector Shit_01_Relative_Location; // 0x270
	bool HasSpawnedEffects; // 0x27c
	FVector DecalSize; // 0x280
	UParticleSystem* ParticlesToSpawn; // 0x290
	UMaterialInterface* DecalToSpawn; // 0x298
	USoundBase* SoundToSpawn; // 0x2a0
	float LifeTime; // 0x2a8
};

struct UUI_HoverPanelWidget_C : UHoverPanelWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UVerticalBox* ContentBox; // 0x280
};

struct ULiveLinkSubjectSettings : UObject {
	TArray<ULiveLinkFramePreProcessor*> PreProcessors; // 0x28
	ULiveLinkFrameInterpolationProcessor* InterpolationProcessor; // 0x38
	TArray<ULiveLinkFrameTranslator*> Translators; // 0x40
	ULiveLinkRole* Role; // 0x50
	FFrameRate FrameRate; // 0x58
	bool bRebroadcastSubject; // 0x60
};

struct UInventoryItemComponentReplicatedPage : UObject {
	FInventoryItemComponentReplicatedPageData Data; // 0x28
};

struct UChainsawState : UWeaponItemState {
	float CurrentFuelAmount; // 0xf8
};

struct USculptBrushProperties : UBrushBaseProperties {
	float Depth; // 0x78
	bool bHitBackFaces; // 0x7c
	float Lazyness; // 0x80
	bool bShowPerBrushProps; // 0x84
};

struct ULeaderboardFlushCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UParticleModuleVelocityCone : UParticleModuleVelocityBase {
	FRawDistributionFloat Angle; // 0x38
	FRawDistributionFloat Velocity; // 0x68
	FVector Direction; // 0x98
};

struct ASharkAIController : AAIController {
	float _sharkTurningSpeed; // 0x328
	float _minDistanceToMovementTarget; // 0x32c
	float _boundsInflation; // 0x330
	FVector _randomMovementExtent; // 0x334
	float _findPathBypassMultiplier; // 0x340
	int32_t _maxMovementAttemptsAllowed; // 0x344
	float _maxTimePerDestinationMultiplier; // 0x34c
	float _minDistanceBetweenTargetGeneratedPath; // 0x358
	float _surfaceOffset; // 0x35c
	float _movementRecoveryTurningSpeed; // 0x360
	float _movementRecoveryAcceleration; // 0x364
	float _movementRecoveryDeceleration; // 0x368
	float _aboveWaterRecoveryTurningSpeed; // 0x36c
	float _moveToTargetUpdatePeriod; // 0x370
	float _minVictimDepth; // 0x378
	float _beginPursuitTimeMin; // 0x37c
	float _beginPursuitTimeMax; // 0x380
	float _aggressiveBehaviorChance; // 0x388
	float _aggressiveBehaviorChanceWhenTargetBleeding; // 0x38c
	float _distanceToAdjustAttackAngle; // 0x390
	float _desiredAttackAngleDegrees; // 0x394
	float _desiredAttackAngleTime; // 0x39c
	float _returnToWanderingTime; // 0x3a0
	float _dealDamageTime; // 0x3a8
	float _damagePerInterval; // 0x3b0
	int32_t _numOfIntervals; // 0x3b8
	float _startMovingAfterBiteTime; // 0x3c0
	float _changeDirectionChance; // 0x3d0
	float _circlingAngleDegrees; // 0x3d4
	float _circlingDistanceMin; // 0x3d8
	float _circlingDistanceMax; // 0x3dc
	float _circlingAggressionCheckInterval; // 0x3e0
	float _minDamageToReact; // 0x3e8
	float _fleeingDuration; // 0x3ec
	float _maxTimeAboveWater; // 0x440
	float _minDistanceToNextPrimaryTarget; // 0x448
	float _changePrimaryTargetTime; // 0x44c
	TMap<ESharkState, FFishStateParameters> _behaviorMap; // 0x460
	UGrappleActionParameters* _grappleActionParameter; // 0x4e8
};

struct UUI_QuickAccessBar_C : UQuickAccessBarWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x290
	UHorizontalBox* HorizontalBox_1; // 0x298
	UUI_QuickAccessItemWidget_C* UI_QuickAccessItemWidget_1; // 0x2a0
	UUI_QuickAccessItemWidget_C* UI_QuickAccessItemWidget_2; // 0x2a8
	UUI_QuickAccessItemWidget_C* UI_QuickAccessItemWidget_3; // 0x2b0
	UUI_QuickAccessItemWidget_C* UI_QuickAccessItemWidget_4; // 0x2b8
	UUI_QuickAccessItemWidget_C* UI_QuickAccessItemWidget_5; // 0x2c0
	UUI_QuickAccessItemWidget_C* UI_QuickAccessItemWidget_6; // 0x2c8
	UUI_QuickAccessItemWidget_C* UI_QuickAccessItemWidget_7; // 0x2d0
	UUI_QuickAccessItemWidget_C* UI_QuickAccessItemWidget_8; // 0x2d8
	UUI_QuickAccessItemWidget_C* UI_QuickAccessItemWidget_9; // 0x2e0
	UUI_QuickAccessItemWidget_C* UI_QuickAccessItemWidget_10; // 0x2e8
};

struct UPrisonerFishingComponent : UCharacterActionComponent {
	EFishingState _fishingState; // 0xc0
};

struct UClearRoundNotLoaded : UWeaponActionClearMalfunctionSequence {
	FName MontageEndSectionName; // 0xb8
};

struct UChaosClothSharedSimConfig : UClothSharedConfigCommon {
	int32_t IterationCount; // 0x28
	int32_t SubdivisionCount; // 0x2c
	float SelfCollisionThickness; // 0x30
	float CollisionThickness; // 0x34
	bool bUseDampingOverride; // 0x38
	float Damping; // 0x3c
	bool bUseGravityOverride; // 0x40
	float GravityScale; // 0x44
	FVector Gravity; // 0x48
	bool bUseLocalSpaceSimulation; // 0x54
	bool bUseXPBDConstraints; // 0x55
};

struct UViewAlignedSculptBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct UMetabolismBodyEffectProgressBar : UUserWidget {
	UMetabolismAdvancedProgressBar* _apb; // 0x288
	UImage* _rightSymbol; // 0x290
	UImage* _circularProgressBar; // 0x298
	FDataTableRowHandle _circularProgressBarColorFront; // 0x2a0
	FDataTableRowHandle _circularProgressBarColorBack; // 0x2b0
	float hoveredOpacity; // 0x2c0
	float unhoveredOpacity; // 0x2c4
	float otherIsSelectedUnhoveredOpacity; // 0x2c8
	float otherIsSelectedHoveredOpacity; // 0x2cc
};

struct UStaticMeshSimulationComponent : UActorComponent {
	bool Simulating; // 0xb8
	bool bNotifyCollisions; // 0xb9
	EObjectStateTypeEnum ObjectType; // 0xba
	float Mass; // 0xbc
	ECollisionTypeEnum CollisionType; // 0xc0
	EImplicitTypeEnum ImplicitType; // 0xc1
	int32_t MinLevelSetResolution; // 0xc4
	int32_t MaxLevelSetResolution; // 0xc8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xcc
	FVector InitialLinearVelocity; // 0xd0
	FVector InitialAngularVelocity; // 0xdc
	float DamageThreshold; // 0xe8
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xf0
	AChaosSolverActor* ChaosSolverActor; // 0xf8
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x100
	TArray<UPrimitiveComponent*> SimulatedComponents; // 0x120
};

struct UAIPerceptionStimuliSourceComponent : UActorComponent {
	char bAutoRegisterAsSource : 1; // 0xb0
	TArray<UAISense*> RegisterAsSourceForSenses; // 0xb8
};

struct UUI_TournamentScoreboardRow_C : UUserWidget {
	UImage* DeathIcon; // 0x260
	UTextBlock* FamePoints; // 0x268
	UTextBlock* Kills; // 0x270
	UTextBlock* PlayerName; // 0x278
	UTextBlock* Rank; // 0x280
};

struct UInputKeyDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputKeyDelegateBinding> InputKeyDelegateBindings; // 0x28
};

struct UMaterialExpressionMaterialFunctionCall : UMaterialExpression {
	UMaterialFunctionInterface* MaterialFunction; // 0x40
	FMaterialParameterInfo FunctionParameterInfo; // 0x48
};

struct UParticleModuleColor_Seeded : UParticleModuleColor {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct UAnimCompress : UAnimBoneCompressionCodec {
	char bNeedsSkeleton : 1; // 0x38
	AnimationCompressionFormat TranslationCompressionFormat; // 0x3c
	AnimationCompressionFormat RotationCompressionFormat; // 0x3d
	AnimationCompressionFormat ScaleCompressionFormat; // 0x3e
};

struct UMaterialInstanceConstant : UMaterialInstance {
	UPhysicalMaterialMask* PhysMaterialMask; // 0x360
};

struct UDatasmithDecalComponentTemplate : UDatasmithObjectTemplate {
	int32_t sortOrder; // 0x30
	FVector DecalSize; // 0x34
	UMaterialInterface* Material; // 0x40
};

struct UUI_CriminalRecord_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UUI_CriminalRecordText_C* AgeText; // 0x280
	UUI_CriminalRecordText_C* AliasesText; // 0x288
	UUI_CriminalRecordText_C* BirthDateText; // 0x290
	UUI_TrashMenuButton_C* CancelButton; // 0x298
	UUI_CriminalRecordText_C* CityText; // 0x2a0
	UUI_CriminalRecordText_C* ConstitutionCategoryText; // 0x2a8
	UVerticalBox* ConstitutionVerticalBox; // 0x2b0
	UUI_CriminalRecordText_C* CountryText; // 0x2b8
	UUI_CriminalRecordText_C* CrimeText; // 0x2c0
	UUI_CriminalRecordText_C* DateOfArrestText; // 0x2c8
	UUI_CriminalRecordText_C* DexterityCategoryText; // 0x2d0
	UVerticalBox* DexterityVerticalBox; // 0x2d8
	UUI_CriminalRecordText_C* EyeColorText; // 0x2e0
	UUI_CriminalRecordText_C* FlawsText; // 0x2e8
	UUI_CriminalRecordText_C* GenderText; // 0x2f0
	UUI_CriminalRecordText_C* HairColorText; // 0x2f8
	UUI_CriminalRecordText_C* HeightText; // 0x300
	UImage* Image_1; // 0x308
	UImage* Image_2; // 0x310
	UImage* Image_3; // 0x318
	UImage* Image_4; // 0x320
	UImage* Image_5; // 0x328
	UImage* Image_6; // 0x330
	UImage* Image_7; // 0x338
	UImage* Image_8; // 0x340
	UUI_CriminalRecordText_C* IntelligenceCategoryText; // 0x348
	UVerticalBox* IntelligenceVerticalBox; // 0x350
	UUI_CriminalRecordText_C* NameText; // 0x358
	UUI_CriminalRecordText_C* NumberText; // 0x360
	UUI_TrashMenuButton_C* OkButton; // 0x368
	UUI_CriminalRecordText_C* ServerLocationText; // 0x370
	UUI_CriminalRecordText_C* StrengthCategoryText; // 0x378
	UVerticalBox* StrengthVerticalBox; // 0x380
	UUI_CriminalRecordText_C* WeightText; // 0x388
	FMulticastInlineDelegate OnOkClicked; // 0x390
	FMulticastInlineDelegate OnCancelClicked; // 0x3a0
	FCharacterTemplate CharacterTemplate; // 0x3b0
	bool ShowSkillExp; // 0x438
};

struct UNiagaraSettings : UDeveloperSettings {
	FSoftObjectPath DefaultEffectType; // 0x38
	TArray<FText> QualityLevels; // 0x50
	TMap<FString, FText> ComponentRendererWarningsPerClass; // 0x60
	ETextureRenderTargetFormat DefaultRenderTargetFormat; // 0xb0
	ENiagaraGpuBufferFormat DefaultGridFormat; // 0xb1
	UNiagaraEffectType* DefaultEffectTypePtr; // 0xb8
};

struct UInspectedItemWidget : UDesignableUserWidget {
	UItemClassWidget* ItemWidget; // 0x278
	UTextBlock* SkillText; // 0x280
	UTextBlock* SkillLevelText; // 0x288
};

struct UMetabolismLeftPanel : UUserWidget {
	UTabGroup* _tabRow; // 0x260
	UWidgetSwitcher* _mainTabSwitcher; // 0x268
	UMetabolismStatsPanel* _statsPanel; // 0x270
	FText _statsName; // 0x278
	UMetabolismHealthPanel* _healthPanel; // 0x290
	FText _healthName; // 0x298
	UTabButtonAlertable* _buttonWidgetClass; // 0x2b0
};

struct ACargoDropContainer : AActor {
	float DelayDuration; // 0x220
	float FallDuration; // 0x224
	float DetonationTime; // 0x228
	float DetonationCountdown; // 0x22c
	UAkAudioEvent* LandSound; // 0x230
	UAkAudioEvent* WarningSound; // 0x238
	UAkAudioEvent* DetonationSound; // 0x240
	UParticleSystem* DetonationParticles; // 0x248
	UMatineeCameraShake* CameraShakeClass; // 0x250
	TArray<UItemSpawnerPreset*> MajorSpawnerOptions; // 0x258
	TArray<FCargoDropSpawnerPreset> MinorSpawnerOptions; // 0x268
	UAkAudioEvent* UnlockLockersAudioEvent; // 0x278
	UStaticMeshComponent* _parachuteMesh; // 0x280
	UParticleSystemComponent* _flareParticles; // 0x288
	UParticleSystemComponent* _dustParticles; // 0x290
	UKillBoxTimerWidget* _timerWidget; // 0x298
	UDiegeticLockState* _lockStateWidget; // 0x2a0
	FVector _endLocation; // 0x2b8
	FRotator _rotation; // 0x2c4
	bool _landed; // 0x2d0
	float _fallingSpeed; // 0x2d4
	int32_t _timeRemaining; // 0x2d8
	bool _flareParticlesEnabled; // 0x2dc
	TArray<UStaticMeshComponent*> _cargoLockers; // 0x2e0
};

struct UUI_StatisticsPanelWidget_C : UStatisticsPanelWidget {
	UWidgetSwitcher* _categorySwitcher; // 0x270
	UImage* Image_2; // 0x278
	UCanvasPanel* MainCanvas; // 0x280
	UUserWidget* LastMenuWidget; // 0x288
	UWidget* _lastWidget; // 0x290
};

struct UUI_CriminalRecordSkill_C : UUserWidget {
	UTextBlock* ExperienceText; // 0x260
	UTextBlock* NameText; // 0x268
	UTextBlock* PercentageText; // 0x270
	UPieProgressBar_C* PieProgressBar; // 0x278
};

struct UBasicGameResourceContainerComponent : UItemComponent {
	float _resourceAmount; // 0xd8
	float _repResourceAmount; // 0xdc
	UGameResourceType* _acceptedResourceType; // 0xe0
	UGameResourceType* _currentResourceType; // 0xe8
	FGameplayTagContainer _resourceFillingInSocketTypes; // 0xf0
	FGameplayTagContainer _resourceFillingOutSocketTypes; // 0x110
	TArray<UBaseItemTag*> _requiredItemTagsForFilling; // 0x130
	float _initialResourceAmount; // 0x140
	float _maxResourceAmount; // 0x144
	float _resourceUsagePerHour; // 0x148
	bool _shouldUpdateOwningItemUses; // 0x14c
	bool _canSpill; // 0x14d
	bool _canCheck; // 0x14e
	bool _showResourcePercentageOnCheck; // 0x14f
	bool _shouldUncraftWhenEmpty; // 0x150
	bool _shouldSpillWhenPickedUp; // 0x151
	bool _shouldTakeInHandsWhenDrinking; // 0x152
	FText _interactionText; // 0x158
	UAnimMontage* _resourceFillingMontage; // 0x170
	UAkAudioEvent* _resourceStartFillingAudioEvent; // 0x178
	UAkAudioEvent* _resourceStopFillingAudioEvent; // 0x180
	float _resourceFillingDurationPerAmountFilled; // 0x188
	float _resourceFillingExperiencePerAmount; // 0x18c
	EPrisonerStance _targetStanceWhenFilling; // 0x190
	bool _shouldTakeInHandsWhenFilling; // 0x191
	UAkAudioEvent* _spillStartAudioEvent; // 0x198
	UAkAudioEvent* _spillStopAudioEvent; // 0x1a0
	UAnimMontage* _spillMontage; // 0x1a8
	UAnimMontage* _spillMontageEnd; // 0x1b0
	UParticleSystem* _particles; // 0x1b8
	float _minSpillTime; // 0x1c0
	float _maxSpillTime; // 0x1c4
	float _spillTimePerKg; // 0x1c8
	UAkAudioEvent* _drinkStartAudioEvent; // 0x1d0
	UAkAudioEvent* _drinkStopAudioEvent; // 0x1d8
};

struct ULiveLinkVirtualSubject : UObject {
	ULiveLinkRole* Role; // 0x30
	TArray<FLiveLinkSubjectName> Subjects; // 0x38
	TArray<ULiveLinkFrameTranslator*> FrameTranslators; // 0x48
};

struct USourceEffectPhaserPreset : USoundEffectSourcePreset {
	FSourceEffectPhaserSettings Settings; // 0xa0
};

struct UGameplayTagsManager : UObject {
	TArray<FGameplayTagSource> TagSources; // 0xc0
	TArray<UDataTable*> GameplayTagTables; // 0x1b0
};

struct USTF12_Reload_Event_Chamber_C : UInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t LoadedAmmoCount; // 0xa8
	int32_t MaxAmmoCount; // 0xac
};

struct AMainMenuGameMode : AGameMode {
	EConZMenu BaseGameModeMenu; // 0x308
	UMasterMenu* _masterMenuClass; // 0x318
};

struct UARTrackedGeometry : UObject {
	FGuid UniqueId; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int32_t LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct APlaceableActorBaseUpgrade : APlaceableActorBase {
	FConZBaseElementIdentifier _elementToBeUpgraded; // 0x4c0
};

struct UEngine : UObject {
	UFont* TinyFont; // 0x30
	FSoftObjectPath TinyFontName; // 0x38
	UFont* SmallFont; // 0x50
	FSoftObjectPath SmallFontName; // 0x58
	UFont* MediumFont; // 0x70
	FSoftObjectPath MediumFontName; // 0x78
	UFont* LargeFont; // 0x90
	FSoftObjectPath LargeFontName; // 0x98
	UFont* SubtitleFont; // 0xb0
	FSoftObjectPath SubtitleFontName; // 0xb8
	TArray<UFont*> AdditionalFonts; // 0xd0
	TArray<FString> AdditionalFontNames; // 0xe0
	UConsole* ConsoleClass; // 0xf0
	FSoftClassPath ConsoleClassName; // 0xf8
	UGameViewportClient* GameViewportClientClass; // 0x110
	FSoftClassPath GameViewportClientClassName; // 0x118
	ULocalPlayer* LocalPlayerClass; // 0x130
	FSoftClassPath LocalPlayerClassName; // 0x138
	AWorldSettings* WorldSettingsClass; // 0x150
	FSoftClassPath WorldSettingsClassName; // 0x158
	FSoftClassPath NavigationSystemClassName; // 0x170
	UNavigationSystemBase* NavigationSystemClass; // 0x188
	FSoftClassPath NavigationSystemConfigClassName; // 0x190
	UNavigationSystemConfig* NavigationSystemConfigClass; // 0x1a8
	FSoftClassPath AvoidanceManagerClassName; // 0x1b0
	UAvoidanceManager* AvoidanceManagerClass; // 0x1c8
	FSoftClassPath AIControllerClassName; // 0x1d0
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x1e8
	FSoftClassPath PhysicsCollisionHandlerClassName; // 0x1f0
	FSoftClassPath GameUserSettingsClassName; // 0x208
	UGameUserSettings* GameUserSettingsClass; // 0x220
	UGameUserSettings* GameUserSettings; // 0x228
	ALevelScriptActor* LevelScriptActorClass; // 0x230
	FSoftClassPath LevelScriptActorClassName; // 0x238
	FSoftClassPath DefaultBlueprintBaseClassName; // 0x250
	FSoftClassPath GameSingletonClassName; // 0x268
	UObject* GameSingleton; // 0x280
	FSoftClassPath AssetManagerClassName; // 0x288
	UAssetManager* AssetManager; // 0x2a0
	UTexture2D* DefaultTexture; // 0x2a8
	FSoftObjectPath DefaultTextureName; // 0x2b0
	UTexture* DefaultDiffuseTexture; // 0x2c8
	FSoftObjectPath DefaultDiffuseTextureName; // 0x2d0
	UTexture2D* DefaultBSPVertexTexture; // 0x2e8
	FSoftObjectPath DefaultBSPVertexTextureName; // 0x2f0
	UTexture2D* HighFrequencyNoiseTexture; // 0x308
	FSoftObjectPath HighFrequencyNoiseTextureName; // 0x310
	UTexture2D* DefaultBokehTexture; // 0x328
	FSoftObjectPath DefaultBokehTextureName; // 0x330
	UTexture2D* DefaultBloomKernelTexture; // 0x348
	FSoftObjectPath DefaultBloomKernelTextureName; // 0x350
	UMaterial* WireframeMaterial; // 0x368
	FString WireframeMaterialName; // 0x370
	UMaterial* DebugMeshMaterial; // 0x380
	FSoftObjectPath DebugMeshMaterialName; // 0x388
	UMaterial* EmissiveMeshMaterial; // 0x3a0
	FSoftObjectPath EmissiveMeshMaterialName; // 0x3a8
	UMaterial* LevelColorationLitMaterial; // 0x3c0
	FString LevelColorationLitMaterialName; // 0x3c8
	UMaterial* LevelColorationUnlitMaterial; // 0x3d8
	FString LevelColorationUnlitMaterialName; // 0x3e0
	UMaterial* LightingTexelDensityMaterial; // 0x3f0
	FString LightingTexelDensityName; // 0x3f8
	UMaterial* ShadedLevelColorationLitMaterial; // 0x408
	FString ShadedLevelColorationLitMaterialName; // 0x410
	UMaterial* ShadedLevelColorationUnlitMaterial; // 0x420
	FString ShadedLevelColorationUnlitMaterialName; // 0x428
	UMaterial* RemoveSurfaceMaterial; // 0x438
	FSoftObjectPath RemoveSurfaceMaterialName; // 0x440
	UMaterial* VertexColorMaterial; // 0x458
	FString VertexColorMaterialName; // 0x460
	UMaterial* VertexColorViewModeMaterial_ColorOnly; // 0x470
	FString VertexColorViewModeMaterialName_ColorOnly; // 0x478
	UMaterial* VertexColorViewModeMaterial_AlphaAsColor; // 0x488
	FString VertexColorViewModeMaterialName_AlphaAsColor; // 0x490
	UMaterial* VertexColorViewModeMaterial_RedOnly; // 0x4a0
	FString VertexColorViewModeMaterialName_RedOnly; // 0x4a8
	UMaterial* VertexColorViewModeMaterial_GreenOnly; // 0x4b8
	FString VertexColorViewModeMaterialName_GreenOnly; // 0x4c0
	UMaterial* VertexColorViewModeMaterial_BlueOnly; // 0x4d0
	FString VertexColorViewModeMaterialName_BlueOnly; // 0x4d8
	FSoftObjectPath DebugEditorMaterialName; // 0x4e8
	UMaterial* ConstraintLimitMaterial; // 0x500
	UMaterialInstanceDynamic* ConstraintLimitMaterialX; // 0x508
	UMaterialInstanceDynamic* ConstraintLimitMaterialXAxis; // 0x510
	UMaterialInstanceDynamic* ConstraintLimitMaterialY; // 0x518
	UMaterialInstanceDynamic* ConstraintLimitMaterialYAxis; // 0x520
	UMaterialInstanceDynamic* ConstraintLimitMaterialZ; // 0x528
	UMaterialInstanceDynamic* ConstraintLimitMaterialZAxis; // 0x530
	UMaterialInstanceDynamic* ConstraintLimitMaterialPrismatic; // 0x538
	UMaterial* InvalidLightmapSettingsMaterial; // 0x540
	FSoftObjectPath InvalidLightmapSettingsMaterialName; // 0x548
	UMaterial* PreviewShadowsIndicatorMaterial; // 0x560
	FSoftObjectPath PreviewShadowsIndicatorMaterialName; // 0x568
	UMaterial* ArrowMaterial; // 0x580
	UMaterialInstanceDynamic* ArrowMaterialYellow; // 0x588
	FSoftObjectPath ArrowMaterialName; // 0x590
	FLinearColor LightingOnlyBrightness; // 0x5a8
	TArray<FLinearColor> ShaderComplexityColors; // 0x5b8
	TArray<FLinearColor> QuadComplexityColors; // 0x5c8
	TArray<FLinearColor> LightComplexityColors; // 0x5d8
	TArray<FLinearColor> StationaryLightOverlapColors; // 0x5e8
	TArray<FLinearColor> LODColorationColors; // 0x5f8
	TArray<FLinearColor> HLODColorationColors; // 0x608
	TArray<FLinearColor> StreamingAccuracyColors; // 0x618
	float MaxPixelShaderAdditiveComplexityCount; // 0x628
	float MaxES3PixelShaderAdditiveComplexityCount; // 0x62c
	float MinLightMapDensity; // 0x630
	float IdealLightMapDensity; // 0x634
	float MaxLightMapDensity; // 0x638
	char bRenderLightMapDensityGrayscale : 1; // 0x63c
	float RenderLightMapDensityGrayscaleScale; // 0x640
	float RenderLightMapDensityColorScale; // 0x644
	FLinearColor LightMapDensityVertexMappedColor; // 0x648
	FLinearColor LightMapDensitySelectedColor; // 0x658
	TArray<FStatColorMapping> StatColorMappings; // 0x668
	UPhysicalMaterial* DefaultPhysMaterial; // 0x678
	FSoftObjectPath DefaultPhysMaterialName; // 0x680
	TArray<FGameNameRedirect> ActiveGameNameRedirects; // 0x698
	TArray<FClassRedirect> ActiveClassRedirects; // 0x6a8
	TArray<FPluginRedirect> ActivePluginRedirects; // 0x6b8
	TArray<FStructRedirect> ActiveStructRedirects; // 0x6c8
	UTexture2D* PreIntegratedSkinBRDFTexture; // 0x6d8
	FSoftObjectPath PreIntegratedSkinBRDFTextureName; // 0x6e0
	UTexture2D* BlueNoiseTexture; // 0x6f8
	FSoftObjectPath BlueNoiseTextureName; // 0x700
	UTexture2D* MiniFontTexture; // 0x718
	FSoftObjectPath MiniFontTextureName; // 0x720
	UTexture* WeightMapPlaceholderTexture; // 0x738
	FSoftObjectPath WeightMapPlaceholderTextureName; // 0x740
	UTexture2D* LightMapDensityTexture; // 0x758
	FSoftObjectPath LightMapDensityTextureName; // 0x760
	UGameViewportClient* GameViewport; // 0x780
	TArray<FString> DeferredCommands; // 0x788
	float NearClipPlane; // 0x798
	char bSubtitlesEnabled : 1; // 0x79c
	char bSubtitlesForcedOff : 1; // 0x79c
	int32_t MaximumLoopIterationCount; // 0x7a0
	char bCanBlueprintsTickByDefault : 1; // 0x7a4
	char bOptimizeAnimBlueprintMemberVariableAccess : 1; // 0x7a4
	char bAllowMultiThreadedAnimationUpdate : 1; // 0x7a4
	char bEnableEditorPSysRealtimeLOD : 1; // 0x7a4
	char bSmoothFrameRate : 1; // 0x7a4
	char bUseFixedFrameRate : 1; // 0x7a4
	float FixedFrameRate; // 0x7a8
	FFloatRange SmoothedFrameRateRange; // 0x7ac
	UEngineCustomTimeStep* CustomTimeStep; // 0x7c0
	FSoftClassPath CustomTimeStepClassName; // 0x7e8
	UTimecodeProvider* TimecodeProvider; // 0x800
	FSoftClassPath TimecodeProviderClassName; // 0x828
	bool bGenerateDefaultTimecode; // 0x840
	FFrameRate GenerateDefaultTimecodeFrameRate; // 0x844
	float GenerateDefaultTimecodeFrameDelay; // 0x84c
	char bCheckForMultiplePawnsSpawnedInAFrame : 1; // 0x850
	int32_t NumPawnsAllowedToBeSpawnedInAFrame; // 0x854
	char bShouldGenerateLowQualityLightmaps : 1; // 0x858
	FColor C_WorldBox; // 0x85c
	FColor C_BrushWire; // 0x860
	FColor C_AddWire; // 0x864
	FColor C_SubtractWire; // 0x868
	FColor C_SemiSolidWire; // 0x86c
	FColor C_NonSolidWire; // 0x870
	FColor C_WireBackground; // 0x874
	FColor C_ScaleBoxHi; // 0x878
	FColor C_VolumeCollision; // 0x87c
	FColor C_BSPCollision; // 0x880
	FColor C_OrthoBackground; // 0x884
	FColor C_Volume; // 0x888
	FColor C_BrushShape; // 0x88c
	float StreamingDistanceFactor; // 0x890
	FDirectoryPath GameScreenshotSaveDirectory; // 0x898
	ETransitionType TransitionType; // 0x8a8
	FString TransitionDescription; // 0x8b0
	FString TransitionGameMode; // 0x8c0
	char bAllowMatureLanguage : 1; // 0x8d0
	float CameraRotationThreshold; // 0x8d4
	float CameraTranslationThreshold; // 0x8d8
	float PrimitiveProbablyVisibleTime; // 0x8dc
	float MaxOcclusionPixelsFraction; // 0x8e0
	char bPauseOnLossOfFocus : 1; // 0x8e4
	int32_t MaxParticleResize; // 0x8e8
	int32_t MaxParticleResizeWarn; // 0x8ec
	TArray<FDropNoteInfo> PendingDroppedNotes; // 0x8f0
	float NetClientTicksPerSecond; // 0x900
	float DisplayGamma; // 0x904
	float MinDesiredFrameRate; // 0x908
	FLinearColor DefaultSelectedMaterialColor; // 0x90c
	FLinearColor SelectedMaterialColor; // 0x91c
	FLinearColor SelectionOutlineColor; // 0x92c
	FLinearColor SubduedSelectionOutlineColor; // 0x93c
	FLinearColor SelectedMaterialColorOverride; // 0x94c
	bool bIsOverridingSelectedColor; // 0x95c
	char bEnableOnScreenDebugMessages : 1; // 0x960
	char bEnableOnScreenDebugMessagesDisplay : 1; // 0x960
	char bSuppressMapWarnings : 1; // 0x960
	char bDisableAILogging : 1; // 0x960
	uint32_t bEnableVisualLogRecordingOnStart; // 0x964
	int32_t ScreenSaverInhibitorSemaphore; // 0x968
	char bLockReadOnlyLevels : 1; // 0x96c
	FString ParticleEventManagerClassPath; // 0x970
	float SelectionHighlightIntensity; // 0x980
	float BSPSelectionHighlightIntensity; // 0x984
	float SelectionHighlightIntensityBillboards; // 0x988
	TArray<FNetDriverDefinition> NetDriverDefinitions; // 0xbf8
	TArray<FString> ServerActors; // 0xc08
	TArray<FString> RuntimeServerActors; // 0xc18
	float NetErrorLogInterval; // 0xc28
	char bStartedLoadMapMovie : 1; // 0xc2c
	int32_t NextWorldContextHandle; // 0xc48
};

struct UBTTask_FinishWithResult : UBTTaskNode {
	EBTNodeResult Result; // 0x70
};

struct UItemInventoryWidget2 : UInventoryContainerWidget2 {
	TScriptInterface<IInventoryNode> _item; // 0x280
	UInventoryContainer2D* _container; // 0x290
	UTextBlock* _nameText; // 0x298
	UItemWidget2* _itemWidget; // 0x2a0
	UGridPanel* _inventoryGrid; // 0x2a8
	UWidget* _loadingWidget; // 0x2b0
	UInventoryGridWidget* _inventoryGridWidget; // 0x2b8
	UCanvasPanel* _inventoryCanvas; // 0x2c0
	UHorizontalBox* _contentBox; // 0x2c8
	UCheckBox* _expandToggle; // 0x2d0
	TArray<UInventorySlotUserWidget*> _slotsWidgets; // 0x2d8
	bool _canMinimize; // 0x2e8
};

struct UMaterialExpressionRotator : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	float CenterX; // 0x68
	float CenterY; // 0x6c
	float Speed; // 0x70
	uint32_t ConstCoordinate; // 0x74
};

struct AObtainItemObjective : ARequirementObjective {
	TArray<TSoftClassPtr<UObject>> _targetItems; // 0x330
	bool _itemInHands; // 0x340
	bool _itemInHolster; // 0x341
	bool _itemInInventory; // 0x342
};

struct UShotsFiredTrackerWidget : UDesignableUserWidget {
	UTextBlock* _widgetText; // 0x278
};

struct ACharacterSpawningManager : AActor {
	TArray<FPawnCharacterInfo> _spawnableCharacters; // 0x220
	float _managerProcessUpdateTime; // 0x230
	float _spawnUpdateTime; // 0x234
	float _spawnTriggerGroupUpdateTime; // 0x238
	float _spawnTriggerGroupRadius; // 0x23c
	float _spawnTriggerGroupProximityQueryRadius; // 0x240
	float _interiorSearchDistanceThreshold; // 0x244
	float _exteriorSpawnerGroupsSpawnCooldownTimeSP; // 0x248
	float _interiorSpawnerGroupsSpawnCooldownTimeSP; // 0x24c
	float _exteriorSpawnerGroupsSpawnCooldownTimeMP; // 0x250
	float _interiorSpawnerGroupsSpawnCooldownTimeMP; // 0x254
	float _baseElementQueryDistance; // 0x258
	float _exteriorSpawnerGroupsProbabilityMP; // 0x25c
	float _interiorSpawnerGroupsProbabilityMP; // 0x260
	float _exteriorSpawnerGroupsProbabilitySP; // 0x264
	float _interiorSpawnerGroupsProbabilitySP; // 0x268
	bool _disableSerialization; // 0x26c
	bool _startSpawnerGroupCooldownAfterSpawning; // 0x26d
	bool _startSpawnerGroupCooldownAfterEnteringInterior; // 0x26e
	TSet<APawn*> _referencedPawnClasses; // 0x3c8
};

struct UAkSettingsPerUser : UObject {
	FDirectoryPath WwiseWindowsInstallationPath; // 0x28
	FFilePath WwiseMacInstallationPath; // 0x38
	bool SuppressWwiseProjectPathWarnings; // 0x48
};

struct USmoothMeshToolProperties : UInteractiveToolPropertySet {
	ESmoothMeshToolSmoothType SmoothingType; // 0x60
};

struct APhysicsVolume : AVolume {
	float TerminalVelocity; // 0x258
	int32_t Priority; // 0x25c
	float FluidFriction; // 0x260
	char bWaterVolume : 1; // 0x264
	char bPhysicsOnContact : 1; // 0x264
};

struct UTestMovieSceneSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
};

struct UTcpMessagingSettings : UObject {
	bool EnableTransport; // 0x28
	FString ListenEndpoint; // 0x30
	TArray<FString> ConnectToEndpoints; // 0x40
	int32_t ConnectionRetryDelay; // 0x50
	bool bStopServiceWhenAppDeactivates; // 0x54
};

struct UBillboardComponent : UPrimitiveComponent {
	UTexture2D* Sprite; // 0x448
	char bIsScreenSizeScaled : 1; // 0x450
	float ScreenSize; // 0x454
	float U; // 0x458
	float UL; // 0x45c
	float V; // 0x460
	float VL; // 0x464
};

struct APaperFlipbookActor : AActor {
	UPaperFlipbookComponent* RenderComponent; // 0x220
};

struct UUI_ItemMainTooltipPanel_C : UItemTooltipPanel {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c8
	UUI_TooltipOverviewTextElement_C* Caption; // 0x2d0
	UOverlay* DebugOverlay; // 0x2d8
	UUI_TooltipOverviewTextElement_C* DebugText; // 0x2e0
	UUI_TooltipOverviewTextElement_C* Description; // 0x2e8
	UImage* Image; // 0x2f0
	UImage* Image_2; // 0x2f8
};

struct APartyBeaconClient : AOnlineBeaconClient {
	FString DestSessionId; // 0x2e0
	FPartyReservation PendingReservation; // 0x2f0
	EClientRequestType RequestType; // 0x340
	bool bPendingReservationSent; // 0x341
	bool bCancelReservation; // 0x342
};

struct UMovieSceneBuiltInEasingFunction : UObject {
	EMovieSceneBuiltInEasing Type; // 0x30
};

struct UNiagaraDataInterfaceRWBase : UNiagaraDataInterface {
	TSet<int32_t> OutputShaderStages; // 0x38
	TSet<int32_t> IterationShaderStages; // 0x88
};

struct UBTTask_RunEQSQuery : UBTTask_BlackboardBase {
	UEnvQuery* QueryTemplate; // 0x98
	TArray<FEnvNamedValue> QueryParams; // 0xa0
	TArray<FAIDynamicParam> QueryConfig; // 0xb0
	EEnvQueryRunMode RunMode; // 0xc0
	FBlackboardKeySelector EQSQueryBlackboardKey; // 0xc8
	bool bUseBBKey; // 0xf0
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0xf8
};

struct ULiveLinkCurveRemapSettings : ULiveLinkSourceSettings {
	FLiveLinkCurveConversionSettings CurveConversionSettings; // 0xa0
};

struct UMovieSceneCinematicShotSection : UMovieSceneSubSection {
	FString ShotDisplayName; // 0x160
	FText DisplayName; // 0x170
};

struct AAmbientSounds : AActor {
	float MinCameraLocationDeltaForUpdate; // 0x220
	FGameplayTag ForestMask; // 0x224
	float ForestMaskSearchRadius; // 0x22c
	UAkAudioEvent* CoastalForestAudioEvent; // 0x230
	UAkAudioEvent* ContinentalForest1AudioEvent; // 0x238
	UAkAudioEvent* ContinentalForest2AudioEvent; // 0x240
	UAkAudioEvent* ContinentalForest3AudioEvent; // 0x248
	UAkAudioEvent* UndergroundAudioEvent; // 0x250
	FGameplayTag CityMask; // 0x258
	float CityMaskSearchRadius; // 0x260
	UAkAudioEvent* CityAudioEvent; // 0x268
	UAkAudioEvent* LargeVillageAudioEvent; // 0x270
	UAkAudioEvent* SmallVillageAudioEvent; // 0x278
	UAkAudioEvent* IndustrialAreaAudioEvent; // 0x280
};

struct UTextureRenderTarget : UTexture {
	float TargetGamma; // 0xd8
};

struct UExporter : UObject {
	UObject* SupportedClass; // 0x28
	UObject* ExportRootScope; // 0x30
	TArray<FString> FormatExtension; // 0x38
	TArray<FString> FormatDescription; // 0x48
	int32_t PreferredFormatIndex; // 0x58
	int32_t TextIndent; // 0x5c
	char bText : 1; // 0x60
	char bSelectedOnly : 1; // 0x60
	char bForceFileOperations : 1; // 0x60
	UAssetExportTask* ExportTask; // 0x68
};

struct UGameEventParticipantStatsWidget : UDesignableUserWidget {
	AGameEventBase* _gameEvent; // 0x278
	int32_t _index; // 0x280
	UGameEventScoreboardWidget* _scoreboard; // 0x288
	int32_t _teamIndex; // 0x290
};

struct UGizmoAxisRotationParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float Angle; // 0xb0
	FGizmoFloatParameterChange LastChange; // 0xb4
	FVector CurRotationAxis; // 0xbc
	FVector CurRotationOrigin; // 0xc8
	FTransform InitialTransform; // 0xe0
};

struct UPrisonerThirdPersonViewComponent : UPrisonerViewComponent {
	TArray<EPrisonerThirdPersonSubview> SubviewBlendingPriorities; // 0xd0
	TArray<FPrisonerThirdPersonSubviewBlendOverride> SubviewBlendOverrides; // 0xe0
};

struct UToIntegerField : UFieldNodeInt {
	UFieldNodeFloat* FloatField; // 0xb0
};

struct UDatasmithSkyLightComponentTemplate : UDatasmithObjectTemplate {
	ESkyLightSourceType SourceType; // 0x30
	int32_t CubemapResolution; // 0x34
	UTextureCube* Cubemap; // 0x38
};

struct UNetworkDataIdAsset : UDataAsset {
	TMap<uint32_t, FPrimaryAssetId> IdToAssetMap; // 0x30
	TMap<FPrimaryAssetId, uint32_t> AssetToIdMap; // 0x80
};

struct UABP_Prisoner_Corpse_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2f8
};

struct UMaterialExpressionClearCoatNormalCustomOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionFontSample : UMaterialExpression {
	UFont* Font; // 0x40
	int32_t FontTexturePage; // 0x48
};

struct UInterpTrackFloatMaterialParam : UInterpTrackFloatBase {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct UVehicleMountSlotsWidget : UUserWidget {
	UCanvasPanel* _mountSlotsCanvas; // 0x260
};

struct UUI_Tooltip_C : UDesignableUserWidget {
	UImage* BackgroundImage; // 0x278
	UTextBlock* DescriptionText; // 0x280
	UImage* ItemImage; // 0x288
	UVerticalBox* ItemImageBox; // 0x290
	UTextBlock* NameText; // 0x298
	UProgressBar* ProgressBar_1; // 0x2a0
	UUI_Border_C* UI_Border_23; // 0x2a8
	AItem* Item; // 0x2b0
};

struct UUI_TabModeTabsContainer_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UUI_TabModeTab_C* CraftingTab; // 0x268
	UUI_TabModeTab_C* EventsTab; // 0x270
	UUI_TabModeTab_C* InventoryTab; // 0x278
	UUI_TabModeTab_C* JournalTab; // 0x280
	UUI_TabModeTab_C* MetabolismTab; // 0x288
	UUI_TabModeTab_C* SquadTab; // 0x290
	TArray<UUI_TabModeTab_C*> Tabs; // 0x298
};

struct UUI_TooltipOverviewElement_C : UItemTooltipPanelElement {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UExtendedRichTextBlock* ExtendedRichTextBlock_1; // 0x288
	UImage* IconImage; // 0x290
	USizeBox* IconSizeBox; // 0x298
	UImage* Image_2; // 0x2a0
	UTexture2D* Icon; // 0x2a8
	int32_t MinimumIntegralDigits; // 0x2b0
	int32_t MaximumIntegralDigits; // 0x2b4
	int32_t MinimumFractionalDigits; // 0x2b8
	int32_t MaximumFractionalDigits; // 0x2bc
	FText Text Format; // 0x2c0
	FTextBlockStyle TextStyle; // 0x2d8
	FSlateColor Color; // 0x548
};

struct UMaterialExpressionBumpOffset : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Height; // 0x54
	FExpressionInput HeightRatioInput; // 0x68
	float HeightRatio; // 0x7c
	float ReferencePlane; // 0x80
	uint32_t ConstCoordinate; // 0x84
};

struct UNiagaraDataInterfaceExport : UNiagaraDataInterface {
	FNiagaraUserParameterBinding CallbackHandlerParameter; // 0x38
	ENDIExport_GPUAllocationMode GPUAllocationMode; // 0x58
	int32_t GPUAllocationFixedSize; // 0x5c
	float GPUAllocationPerParticleSize; // 0x60
};

struct UMovableWindow_C : UCustomGUIWindow_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	UNamedSlot* Body; // 0x2a0
	bool isDragging; // 0x2a8
	FVector2D _relativeOffset; // 0x2ac
};

struct UEditableTextBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FEditableTextBoxStyle EditableTextBoxStyle; // 0x30
};

struct UMaterialExpressionGIReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput StaticIndirect; // 0x54
	FExpressionInput DynamicIndirect; // 0x68
};

struct UMagicLeapARPinComponent : USceneComponent {
	FString ObjectUID; // 0x1f8
	int32_t UserIndex; // 0x208
	EMagicLeapAutoPinType AutoPinType; // 0x20c
	bool bShouldPinActor; // 0x20d
	UMagicLeapARPinSaveGame* PinDataClass; // 0x210
	TSet<EMagicLeapARPinType> SearchPinTypes; // 0x218
	USphereComponent* SearchVolume; // 0x268
	FMulticastInlineDelegate OnPersistentEntityPinned; // 0x270
	FMulticastInlineDelegate OnPersistentEntityPinLost; // 0x280
	FMulticastInlineDelegate OnPinDataLoadAttemptCompleted; // 0x290
	FGuid PinnedCFUID; // 0x2a0
	USceneComponent* PinnedSceneComponent; // 0x2b0
	UMagicLeapARPinSaveGame* PinData; // 0x2b8
};

struct UParticleModuleMeshRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionVector LifeMultiplier; // 0x30
};

struct UModularTooltipElement_Timer : UModularTooltipElement {
	UMetabolismAdvancedProgressBar* _remainingTimeProgressBar; // 0x2e8
};

struct USimpleDynamicMeshComponent : UBaseDynamicMeshComponent {
	EDynamicMeshTangentCalcType TangentsType; // 0x4b8
	bool bInvalidateProxyOnChange; // 0x4b9
	bool bExplicitShowWireframe; // 0x4f0
	bool bDrawOnTop; // 0x540
};

struct UDatasmithGLTFSceneImportData : UDatasmithSceneImportData {
	FString Generator; // 0x28
	float Version; // 0x38
	FString Author; // 0x40
	FString License; // 0x50
	FString Source; // 0x60
};

struct UBasicGameResourceContainerComponentState : UItemComponentStateBase {
	bool IsActive; // 0x40
	float ResourceAmount; // 0x44
	UGameResourceType* CurrentResourceType; // 0x48
};

struct UMaterialExpressionConstant3Vector : UMaterialExpression {
	FLinearColor Constant; // 0x40
};

struct UItemFirstPersonAnimationsDataAsset : UDataAsset {
	FItemFirstPersonUpperBodyAnimationsData UpperBody; // 0x30
	UBlendSpace* AimOffsetStanding; // 0x80
	UBlendSpace* AimOffsetCrouching; // 0x88
	UBlendSpace* AimOffsetProne; // 0x90
};

struct UMotoSynthSource : UObject {
	bool bConvertTo8Bit; // 0x28
	float DownSampleFactor; // 0x2c
	FRuntimeFloatCurve RPMCurve; // 0x30
	TArray<float> SourceData; // 0xb8
	TArray<int16_t> SourceDataPCM; // 0xc8
	int32_t SourceSampleRate; // 0xd8
	TArray<FGrainTableEntry> GrainTable; // 0xe0
};

struct ABP_WeaponBullet_792x57_C : AProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
};

struct UNavCollisionBase : UObject {
	char bIsDynamicObstacle : 1; // 0x28
};

struct UBaseBuildingBlockCraftableItem : UPlaceableCraftableItem {
	UObject* BaseBlockClass; // 0x1e0
	UTexture2D* Icon; // 0x1e8
	FText Caption; // 0x1f0
	FText Description; // 0x208
	FVector PlacementMeshOffset; // 0x220
	FVector PlacementMeshScale; // 0x22c
	bool IsUpgrade; // 0x238
};

struct UParticleModuleOrientationAxisLock : UParticleModuleOrientationBase {
	EParticleAxisLock LockAxisFlags; // 0x30
};

struct UUI_MissionItemContainer_C : UJournalMissionContainer {
	UImage* _completedVerticalLine; // 0x328
	UImage* _dividerBottom; // 0x330
	UImage* _verticalLine; // 0x338
	UImage* Image_1; // 0x340
};

struct USlider : UWidget {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	float MinValue; // 0x11c
	float MaxValue; // 0x120
	FSliderStyle WidgetStyle; // 0x128
	EOrientation Orientation; // 0x468
	FLinearColor SliderBarColor; // 0x46c
	FLinearColor SliderHandleColor; // 0x47c
	bool IndentHandle; // 0x48c
	bool Locked; // 0x48d
	bool MouseUsesStep; // 0x48e
	bool RequiresControllerLock; // 0x48f
	float StepSize; // 0x490
	bool IsFocusable; // 0x494
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x498
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x4a8
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x4b8
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x4c8
	FMulticastInlineDelegate OnValueChanged; // 0x4d8
};

struct UWheelBarrowDriverMountSlot : UWheelBarrowMountSlot {
	UAnimSequence* _idleAnimation; // 0x108
	UBlendSpace* _walkJogAnimation; // 0x110
	UBlendSpace* _walkJogLimpingAnimation; // 0x118
};

struct ULandscapeInfo : UObject {
	LazyObjectProperty LandscapeActor; // 0x28
	FGuid LandscapeGuid; // 0x44
	int32_t ComponentSizeQuads; // 0x54
	int32_t SubsectionSizeQuads; // 0x58
	int32_t ComponentNumSubsections; // 0x5c
	FVector DrawScale; // 0x60
	TArray<ALandscapeStreamingProxy*> Proxies; // 0x110
};

struct UParticleModuleSizeMultiplyLife : UParticleModuleSizeBase {
	FRawDistributionVector LifeMultiplier; // 0x30
	char MultiplyX : 1; // 0x78
	char MultiplyY : 1; // 0x78
	char MultiplyZ : 1; // 0x78
};

struct USkyLightComponent : ULightComponentBase {
	bool bRealTimeCapture; // 0x228
	ESkyLightSourceType SourceType; // 0x229
	UTextureCube* Cubemap; // 0x230
	float SourceCubemapAngle; // 0x238
	int32_t CubemapResolution; // 0x23c
	float SkyDistanceThreshold; // 0x240
	bool bCaptureEmissiveOnly; // 0x244
	bool bLowerHemisphereIsBlack; // 0x245
	FLinearColor LowerHemisphereColor; // 0x248
	FLinearColor UpperHemisphereColor; // 0x258
	float OcclusionMaxDistance; // 0x268
	float Contrast; // 0x26c
	float OcclusionExponent; // 0x270
	float MinOcclusion; // 0x274
	FColor OcclusionTint; // 0x278
	char bCloudAmbientOcclusion : 1; // 0x27c
	float CloudAmbientOcclusionStrength; // 0x280
	float CloudAmbientOcclusionExtent; // 0x284
	float CloudAmbientOcclusionMapResolutionScale; // 0x288
	float CloudAmbientOcclusionApertureScale; // 0x28c
	EOcclusionCombineMode OcclusionCombineMode; // 0x290
	UTextureCube* BlendDestinationCubemap; // 0x348
};

struct UUniformGridPanel : UPanelWidget {
	FMargin SlotPadding; // 0x120
	float MinDesiredSlotWidth; // 0x130
	float MinDesiredSlotHeight; // 0x134
};

struct AMagicLeapSharedWorldGameState : AGameState {
	FMagicLeapSharedWorldSharedData SharedWorldData; // 0x290
	FMagicLeapSharedWorldAlignmentTransforms AlignmentTransforms; // 0x2a0
	FMulticastInlineDelegate OnSharedWorldDataUpdated; // 0x2b0
	FMulticastInlineDelegate OnAlignmentTransformsUpdated; // 0x2c0
};

struct UDemoNetDriver : UNetDriver {
	TMap<FString, FRollbackNetStartupActorInfo> RollbackNetStartupActors; // 0x850
	float CheckpointSaveMaxMSPerFrame; // 0x9fc
	TArray<FMulticastRecordOptions> MulticastRecordOptions; // 0xa20
	bool bIsLocalReplay; // 0xa30
	TArray<APlayerController*> SpectatorControllers; // 0xa38
};

struct UNiagaraPreviewAxis_InterpParamFloat : UNiagaraPreviewAxis_InterpParamBase {
	float Min; // 0x38
	float Max; // 0x3c
};

struct UQuickAccessBarWidget : UDesignableUserWidget {
	TArray<UQuickAccessItemWidget*> _quickAccessItemContainers; // 0x278
};

struct ASkeletalMeshActor : AActor {
	char bShouldDoAnimNotifies : 1; // 0x228
	char bWakeOnLevelStart : 1; // 0x228
	USkeletalMeshComponent* SkeletalMeshComponent; // 0x230
	USkeletalMesh* ReplicatedMesh; // 0x238
	UPhysicsAsset* ReplicatedPhysAsset; // 0x240
	UMaterialInterface* ReplicatedMaterial0; // 0x248
	UMaterialInterface* ReplicatedMaterial1; // 0x250
};

struct UUI_KeyBinding_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UTextBlock* ActionKeyText; // 0x280
	UTextBlock* ActionNameText; // 0x288
	UImage* Image_1; // 0x290
	bool _isChangingKey; // 0x298
	FMulticastInlineDelegate KeyPressed; // 0x2a0
	FText UserFriendlyName; // 0x2b0
	FName Name; // 0x2c8
	FMulticastInlineDelegate OnRebindInitiated; // 0x2d0
	bool IsAxis; // 0x2e0
	FKey _key; // 0x2e8
	float AxisScale; // 0x300
	FName GroupName; // 0x304
	bool CheckOnlySameKeyWithinGroup; // 0x30c
	FName SameKeyBlockerGroupName; // 0x310
};

struct AMaterialInstanceActor : AActor {
	TArray<AActor*> TargetActors; // 0x220
};

struct AGameState : AGameStateBase {
	FName MatchState; // 0x270
	FName PreviousMatchState; // 0x278
	int32_t ElapsedTime; // 0x280
};

struct USkyAtmosphereComponent : USceneComponent {
	ESkyAtmosphereTransformMode TransformMode; // 0x1f8
	float BottomRadius; // 0x1fc
	FColor GroundAlbedo; // 0x200
	float AtmosphereHeight; // 0x204
	float MultiScatteringFactor; // 0x208
	float TraceSampleCountScale; // 0x20c
	float RayleighScatteringScale; // 0x210
	FLinearColor RayleighScattering; // 0x214
	float RayleighExponentialDistribution; // 0x224
	float MieScatteringScale; // 0x228
	FLinearColor MieScattering; // 0x22c
	float MieAbsorptionScale; // 0x23c
	FLinearColor MieAbsorption; // 0x240
	float MieAnisotropy; // 0x250
	float MieExponentialDistribution; // 0x254
	float OtherAbsorptionScale; // 0x258
	FLinearColor OtherAbsorption; // 0x25c
	FTentDistribution OtherTentDistribution; // 0x26c
	FLinearColor SkyLuminanceFactor; // 0x278
	float AerialPespectiveViewDistanceScale; // 0x288
	float HeightFogContribution; // 0x28c
	float TransmittanceMinLightElevationAngle; // 0x290
	float AerialPerspectiveStartDepth; // 0x294
	FGuid bStaticLightingBuiltGUID; // 0x2bc
};

struct UNiagaraDataInterfaceLandscape : UNiagaraDataInterface {
	AActor* SourceLandscape; // 0x38
};

struct UAISense_Touch : UAISense {
	TArray<FAITouchEvent> RegisteredEvents; // 0x80
};

struct UDrivingSkill : UDexteritySkill {
	FDrivingSkillExperienceAwards NoSkillExperienceAwards; // 0xa8
	FDrivingSkillExperienceAwards BasicSkillExperienceAwards; // 0xb0
	FDrivingSkillExperienceAwards MediumSkillExperienceAwards; // 0xb8
	FDrivingSkillExperienceAwards AdvancedSkillExperienceAwards; // 0xc0
	FDrivingSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0xc8
	FDrivingSkillParametersPerSkillLevel NoSkillParameters; // 0xd0
	FDrivingSkillParametersPerSkillLevel BasicSkillParameters; // 0x1d0
	FDrivingSkillParametersPerSkillLevel MediumSkillParameters; // 0x2d0
	FDrivingSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x3d0
	FDrivingSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x4d0
};

struct AConZVehicle4W : ADcxVehicle4W {
	FVehicleSpawnParameters _spawnParameters; // 0x2c0
	EConZPxDominanceGroup _physicsDominanceGroup; // 0x2ec
	bool _isMassChangeByCargoAllowed; // 0x308
	bool _isMassChangeByMounteesAllowed; // 0x309
	bool _isCenterOfMassChangeByCargoAllowed; // 0x30a
	bool _isCenterOfMassChangeByMounteesAllowed; // 0x30b
	FVector _cargoCenterOfMassOffset; // 0x30c
	float _minEffectiveCargoMass; // 0x318
	float _maxEffectiveCargoMass; // 0x31c
	float _pushImpulseMagnitude; // 0x320
	UCurveFloat* _pushIntensityCurve; // 0x328
	float _pushDirectionRatioBetweenForwardAndUp; // 0x330
	float _maxDistanceToAllowThePush; // 0x334
	float _maxDistanceToAllowThePushStart; // 0x338
	float _pushStartAccelerationChange; // 0x33c
	float _pushStartSpeedThresholdKph; // 0x340
	float _maxSpeed; // 0x354
	bool _supportsHandbrake; // 0x358
	UAkAudioEvent* _engineStartingAudioEvent; // 0x360
	UAkAudioEvent* _engineStartedAudioEvent; // 0x368
	UAkAudioEvent* _engineTurnedOffAudioEvent; // 0x370
	UAkAudioEvent* _engineFailedToStartAudioEvent; // 0x378
	UAkAudioEvent* _engineFailedToStartNoFuelAudioEvent; // 0x380
	UAkAudioEvent* _engineFailedToStartNoBatteryAudioEvent; // 0x388
	UAkAudioEvent* _engineStalledAudioEvent; // 0x390
	UAkAudioEvent* _noFuelToStartEngineAudioEvent; // 0x398
	UAkAudioEvent* _noBatteryToStartEngineAudioEvent; // 0x3a0
	UAkAudioEvent* _hornStartAudioEvent; // 0x3a8
	UAkAudioEvent* _hornStopAudioEvent; // 0x3b0
	UAkAudioEvent* _noBatteryToActivateHornAudioEvent; // 0x3b8
	UAkAudioEvent* _lightsActivatedAudioEvent; // 0x3c0
	UAkAudioEvent* _lightsDeactivatedAudioEvent; // 0x3c8
	UAkAudioEvent* _noBatteryToActivateLightsAudioEvent; // 0x3d0
	UAkAudioEvent* _noBatteryToTurnOnRadioAudioEvent; // 0x3d8
	UAkAudioEvent* _gearUpAudioEvent; // 0x3e0
	UAkAudioEvent* _gearDownAudioEvent; // 0x3e8
	UAkAudioEvent* _chassisStartedMovingAudioEvent; // 0x3f0
	UAkAudioEvent* _chassisStoppedMovingAudioEvent; // 0x3f8
	float _rpmScaleForSoundWhenSpeedIsEqualOrGreaterThanZero; // 0x404
	float _rpmScaleForSoundWhenSpeedIsLessThanZero; // 0x408
	float _soundCullDistance; // 0x40c
	UTireToSurfaceAudioData* _tireToSurfaceAudioData; // 0x410
	float _sendStateInterval; // 0x418
	float _rigidBodyStatePositionErrorTolerance; // 0x41c
	float _rigidBodyStateRotationErrorTolerance; // 0x420
	float _distanceErrorToHardSnapToRemoteLocation; // 0x424
	UUserWidget* _mountSlotIndicatorsWidget; // 0x428
	TArray<UConZVehicle4WMountSlot*> _mountSlots; // 0x430
	EVehicleEngineState _engineState; // 0x440
	float _engineStallingForceMagnitude; // 0x450
	bool _hornActive; // 0x454
	bool _lightsActive; // 0x455
	FVehicleMaterialParameterDescription _headlightsMaterialParameter; // 0x458
	FVehicleMaterialParameterDescription _reverseLightsMaterialParameter; // 0x468
	FVehicleMaterialParameterDescription _brakeLightsMaterialParameter; // 0x478
	float _brakeLightsAlwaysOnIfLightsAreActivated; // 0x488
	AVehicleItemContainer* _itemContainerClass; // 0x4c0
	AVehicleItemContainer* _itemContainer; // 0x4c8
	float _itemContainerContainedItemsMass; // 0x4d0
	bool _canEngineBeStalledByAcceleration; // 0x568
	float _engineStallingByAccelerationSpeedThreshold; // 0x56c
	float _engineStallingByAccelerationOccurrenceInterval; // 0x570
	UAkAudioEvent* _engineStallingByAccelerationAudioEvent; // 0x578
	TArray<float> _engineStallingByAccelerationAudioEventTriggerTimeRatios; // 0x580
	bool _canEngineBeStalledByUpShift; // 0x590
	float _engineStallingByUpShiftOccurrenceInterval; // 0x594
	UAkAudioEvent* _engineStallingByUpShiftAudioEvent; // 0x5a0
	TArray<float> _engineStallingByUpShiftAudioEventTriggerTimeRatios; // 0x5a8
	UAkAudioEvent* _engineStallingWhenStartingViaMotionAudioEvent; // 0x5b8
	TArray<float> _engineStallingWhenStartingViaMotionAudioEventTriggerTimeRatios; // 0x5c0
	bool _canSkillAffectMaxSpeed; // 0x5d0
	bool _canSkillAffectSteerRate; // 0x5d1
	bool _canSkillAffectThrottleAmount; // 0x5d2
	bool _canSkillAffectBrakeAmount; // 0x5d3
	float _engineBlockMaxHealth; // 0x5dc
	float _maxHealth; // 0x5e4
	float _autoHealthDrainThreshold; // 0x5e8
	float _autoHealthDrain; // 0x5ec
	FRepairableParams _repairableParams; // 0x5f0
	TArray<FVehicleDamagedEffectsParameters> _damagedEffects; // 0x628
	FName _damageMaterialParameterName; // 0x648
	FVehicleExhaustEffects _exhaustEffects; // 0x650
	FRepairableParams _repairableTireParams; // 0x698
	float _tireEffectUpdateRange; // 0x6d0
	int32_t _numAudioObjectsForTires; // 0x6d4
	TArray<FVehicleTireEffectProperties> _tireEffectProperties; // 0x6f0
	AVehicleCorpse* _corpseClass; // 0x710
	float _activeHitTimeToLive; // 0x718
	FVehicleImpactEffects _impactEffects[0x5]; // 0x720
	UCurveFloat* ImpactDamageVsNormalImpulse; // 0x838
	float _makeNoiseInterval; // 0x850
	float _maxNoiseLoudnessFromEngine; // 0x854
	float _maxNoiseLoudnessFromSpeed; // 0x858
	float _speedThresholdInKphToAffectNavigation; // 0x860
	float _allowedWaterImmersionDepth; // 0x864
	float _disallowedWaterImmersionDepth; // 0x868
	float _waterImmersionDepthToForceEvictMountees; // 0x86c
	float _timeToEvictMounteesWhenImmersedIntoWater; // 0x870
	float _timeToForceEvictMounteesWhenImmersedIntoWater; // 0x874
	float _timeToAutoDestructWhenImmersedIntoWater; // 0x878
	bool _shouldEvictMounteesIfTiltedAboveThreshold; // 0x979
	float _tiltThresholdAngleToEvictMountees; // 0x97c
	FText _healthBarCaption; // 0x988
	UGameResourceType* _fuelResourceType; // 0x9a8
	float _maxFuelAmount; // 0x9b0
	float _fuelDrainWhenStartingEngine; // 0x9b4
	FRuntimeFloatCurve _engineFuelDrainPerRpm; // 0x9b8
	float _engineFuelDrainPerRpmScale; // 0xa40
	FRuntimeFloatCurve _engineFuelDrainPerRpmUnderLoad; // 0xa48
	float _engineFuelDrainPerRpmUnderLoadScale; // 0xad0
	float _fuelDrainWhenInactive; // 0xad4
	float _fuelFillingBaseDuration; // 0xad8
	float _fillingDurationPerFuelAmountFilled; // 0xadc
	float _experienceAwardedPerFuelAmountFilled; // 0xae0
	UAnimMontage* _prisonerFillingFuelMontage; // 0xae8
	UAkAudioEvent* _startFillingFuelAudioEvent; // 0xaf0
	UAkAudioEvent* _stopFillingFuelAudioEvent; // 0xaf8
	UAkAudioEvent* _startFillingFuelWithReplenishableResourceAudioEvent; // 0xb00
	UAkAudioEvent* _stopFillingFuelWithReplenishableResourceAudioEvent; // 0xb08
	FVector _fillFuelWithReplenishableResourceOverlapBoxExtent; // 0xb10
	float _fuelDrainingBaseDuration; // 0xb1c
	float _drainingDurationPerFuelAmountDrained; // 0xb20
	float _experienceAwardedPerFuelAmountDrained; // 0xb24
	UAnimMontage* _prisonerDrainingFuelMontage; // 0xb28
	UAkAudioEvent* _startDrainingFuelAudioEvent; // 0xb30
	UAkAudioEvent* _stopDrainingFuelAudioEvent; // 0xb38
	FVehicleEngineStallingParameters _engineStallingParametersWhenOutOfFuel; // 0xb40
	float _fuelUpdateInterval; // 0xb9c
	UGameResourceType* _batteryResourceType; // 0xba8
	float _maxBatteryAmount; // 0xbb0
	float _batteryDrainWhenStartingEngine; // 0xbb4
	float _batteryDrainWhenHornIsActive; // 0xbb8
	float _batteryDrainWhenLightsAreActive; // 0xbbc
	float _batteryDrainWhenRadioIsTurnedOn; // 0xbc0
	float _batteryDrainWhenInactive; // 0xbc4
	FRuntimeFloatCurve _batteryDynamoChargePerKph; // 0xbc8
	float _batteryDynamoChargePerKphScale; // 0xc50
	FRuntimeFloatCurve _batteryAlternatorChargePerRpm; // 0xc58
	float _batteryAlternatorChargePerRpmScale; // 0xce0
	float _batteryPowerReductionThreshold; // 0xce4
	float _startEngineDurationPenaltyWhenBatteryReducedInPower; // 0xce8
	float _batteryChargingBaseDuration; // 0xcec
	float _chargingDurationPerBatteryAmountCharged; // 0xcf0
	float _experienceAwardedPerBatteryAmountCharged; // 0xcf4
	UAnimMontage* _prisonerChargingBatteryMontage; // 0xcf8
	UAkAudioEvent* _startChargingBatteryAudioEvent; // 0xd00
	UAkAudioEvent* _stopChargingBatteryAudioEvent; // 0xd08
	float _batteryUpdateInterval; // 0xd14
	URadioComponent* _radioComponent; // 0xd38
	UVehicleCameraStabilizerComponent* _cameraStabilizer; // 0xd40
	UVehicleHitZoneManager* _hitZones; // 0xd48
	uint32_t _vehiclePartsStateFlags; // 0xd50
	int32_t _doorsNum; // 0xd54
	int32_t _doorWindowsNum; // 0xd58
	bool _isInteriorExposedByDefault; // 0xd60
	float _maxVehicleEnterAngle; // 0xd64
	float _explosionDamage; // 0xd68
	float _explosionForce; // 0xd6c
	EAITeam _aiTeam; // 0xd80
	uint32_t _repPackedSimulationState; // 0xe00
	uint32_t _repHealthFuelBatteryAmount; // 0xe04
	float _maxSpeedForBase; // 0xe68
	bool _canEverBeTraded; // 0xe6d
	FTradeableTagParams _tradeableParams; // 0xe70
};

struct UPrisonerFirstPersonViewComponent : UPrisonerViewComponent {
	TArray<EPrisonerFirstPersonSubview> SubviewBlendingPriorities; // 0xd0
	TArray<FPrisonerFirstPersonSubviewBlendOverride> SubviewBlendOverrides; // 0xe0
};

struct AInteractiveFoliageActor : AStaticMeshActor {
	UCapsuleComponent* CapsuleComponent; // 0x230
	FVector TouchingActorEntryPosition; // 0x238
	FVector FoliageVelocity; // 0x244
	FVector FoliageForce; // 0x250
	FVector FoliagePosition; // 0x25c
	float FoliageDamageImpulseScale; // 0x268
	float FoliageTouchImpulseScale; // 0x26c
	float FoliageStiffness; // 0x270
	float FoliageStiffnessQuadratic; // 0x274
	float FoliageDamping; // 0x278
	float MaxDamageImpulse; // 0x27c
	float MaxTouchImpulse; // 0x280
	float MaxForce; // 0x284
	float Mass; // 0x288
};

struct UInterpTrackInstSound : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
	UAudioComponent* PlayAudioComp; // 0x30
};

struct UGameEventCardWidget : UDesignableUserWidget {
	AGameEventBase* _gameEvent; // 0x278
};

struct UUI_TrashMenuButton_C : UTrashMenuButton {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UImage* Image_1; // 0x288
	USizeBox* MainSizeBox; // 0x290
	UTextBlock* TextBlock_1; // 0x298
	FMulticastInlineDelegate OnClicked; // 0x2a0
	FText Text; // 0x2b0
	bool SizeToContent; // 0x2c8
	float WidthOverride; // 0x2cc
	int32_t FontSize; // 0x2d0
	int32_t HoveredFontSize; // 0x2d4
	bool OverridesHighlight; // 0x2d8
};

struct UEditableGeometryCollectionAdapter : UEditableMeshAdapter {
	UGeometryCollection* GeometryCollection; // 0x28
	UGeometryCollection* OriginalGeometryCollection; // 0x30
	int32_t GeometryCollectionLODIndex; // 0x38
};

struct UImportedSoundWave : USoundWaveProcedural {
	FMulticastInlineDelegate OnAudioPlaybackFinished; // 0x3c0
	bool PlaybackFinishedBroadcast; // 0x3d0
	FPCMStruct PCMBufferInfo; // 0x3d8
	int32_t CurrentNumOfFrames; // 0x3f0
};

struct UScopeableItemComponentState : UItemComponentStateBase {
	int32_t CurrentZoomLevel; // 0x40
};

struct ABP_Survival_Tutorial_SearchGroundObjective_C : ASearchGroundObjective {
	USceneComponent* DefaultSceneRoot; // 0x340
};

struct UInterpTrackFloatProp : UInterpTrackFloatBase {
	FName PropertyName; // 0x90
};

struct UParticleModuleVectorFieldScaleOverLife : UParticleModuleVectorFieldBase {
	UDistributionFloat* VectorFieldScaleOverLife; // 0x30
	FRawDistributionFloat VectorFieldScaleOverLifeRaw; // 0x38
};

struct URadioCategoryShuffle : URadioCategory {
	bool _canTracksRepeat; // 0x40
	TArray<URadioTrack*> _tracksAlreadyPlayed; // 0x48
};

struct ASilentAlarmTrapItem : ATrapItem {
	UAkAudioEvent* _triggerSound; // 0x910
	float _detonationDelay; // 0x918
	UNameableItemComponent* _nameableItemComponent; // 0x920
};

struct APostProcessVolume : AVolume {
	FPostProcessSettings Settings; // 0x260
	float Priority; // 0x7b0
	float BlendRadius; // 0x7b4
	float BlendWeight; // 0x7b8
	char bEnabled : 1; // 0x7bc
	char bUnbound : 1; // 0x7bc
};

struct UAnimNotifyState_TimedNiagaraEffect : UAnimNotifyState {
	UNiagaraSystem* Template; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct UWidgetAnimationPlayCallbackProxy : UObject {
	FMulticastInlineDelegate Finished; // 0x28
};

struct UNiagaraDataInterfaceGrid3DCollection : UNiagaraDataInterfaceGrid3D {
	int32_t NumAttributes; // 0x100
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0x108
	ENiagaraGpuBufferFormat BufferFormat; // 0x128
};

struct UHitReactLandingParams : UDataAsset {
	UAnimMontage* MontageToPlay; // 0x30
	float RegainControlDurationMultiplier; // 0x38
	FFloatInterval RagdollImpactSpeedRange; // 0x3c
	FFloatInterval RagdollDuration; // 0x44
	UCurveFloat* LandingDamageCurve; // 0x50
};

struct UAnimSequenceBase : UAnimationAsset {
	TArray<FAnimNotifyEvent> Notifies; // 0x80
	float SequenceLength; // 0x90
	float RateScale; // 0x94
	FRawCurveTracks RawCurveData; // 0x98
};

struct UNiagaraDataInterfaceGrid2DCollection : UNiagaraDataInterfaceGrid2D {
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xf8
	ENiagaraGpuBufferFormat OverrideBufferFormat; // 0x118
	char bOverrideFormat : 1; // 0x119
	TMap<uint64_t, UTextureRenderTarget2DArray*> ManagedRenderTargets; // 0x170
};

struct UMaterialExpressionAbs : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct AAkAmbientSound : AActor {
	UAkAudioEvent* AkAudioEvent; // 0x220
	UAkComponent* AkComponent; // 0x228
	bool StopWhenOwnerIsDestroyed; // 0x230
	bool AutoPost; // 0x231
};

struct UCarousel : UUserWidget {
	UTextBlock* _selectionDisplay; // 0x280
	UButton* _leftArrow; // 0x288
	UButton* _rightArrow; // 0x290
	TArray<FText> _carouselValues; // 0x298
	bool _canWrap; // 0x2a8
	FCarouselStyle _selectedAndFocusedCarouselStyle; // 0x2b0
	FCarouselStyle _selectedAndUnfocusedCarouselStyle; // 0x820
	FCarouselStyle _unselectedCarouselStyle; // 0xd90
	FCarouselStyle _highlightedCarouselStyle; // 0x1300
	FCarouselStyle _disabledCarouselStyle; // 0x1870
	bool _controlWithMouseWheel; // 0x1de0
	bool _controlWithKeyboard; // 0x1de1
};

struct UBP_WeaponScopeWidget_C : UWeaponScopeWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x290
	UWidgetAnimation* FadeOut; // 0x298
	UWidgetAnimation* FadeIn; // 0x2a0
	UBorder* BlackBG; // 0x2a8
	UBorder* BorderLeft; // 0x2b0
	UBorder* BorderRight; // 0x2b8
	UImage* Reticle; // 0x2c0
	UScaleBox* ScaleBox_1; // 0x2c8
	USizeBox* SizeBox_1; // 0x2d0
	USizeBox* SizeBox_2; // 0x2d8
	FVector2D GeometrySize; // 0x2e0
	FVector2D GeometrySizeHalf; // 0x2e8
	float FadeInSpeed; // 0x2f0
	float FadeOutSpeed; // 0x2f4
	float OnShowDelay; // 0x2f8
	bool ShouldBeHidden; // 0x2fc
};

struct USoundfieldSubmix : USoundSubmixWithParentBase {
	FName SoundfieldEncodingFormat; // 0x40
	USoundfieldEncodingSettingsBase* EncodingSettings; // 0x48
	TArray<USoundfieldEffectBase*> SoundfieldEffectChain; // 0x50
	USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x60
};

struct UInteractiveToolsContext : UObject {
	UInputRouter* InputRouter; // 0x58
	UInteractiveToolManager* ToolManager; // 0x60
	UInteractiveGizmoManager* GizmoManager; // 0x68
	TSoftClassPtr<UObject> ToolManagerClass; // 0x70
};

struct UParticleModuleVectorFieldGlobal : UParticleModuleVectorFieldBase {
	char bOverrideGlobalVectorFieldTightness : 1; // 0x30
	float GlobalVectorFieldScale; // 0x34
	float GlobalVectorFieldTightness; // 0x38
};

struct UProxyLODMeshSimplificationSettings : UDeveloperSettings {
	FName ProxyLODMeshReductionModuleName; // 0x38
};

struct UABP_Prisoner_Aerial_C : UPrisonerAnimInstance_Aerial {
	FPointerToUberGraphFrame UberGraphFrame; // 0x320
	FAnimNode_Root AnimGraphNode_Root; // 0x328
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_4; // 0x358
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x408
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x488
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x508
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x588
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x638
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x700
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_8; // 0x7b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_7; // 0x800
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x850
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_6; // 0x8f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_5; // 0x940
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_4; // 0x990
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x9e0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_3; // 0xa80
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_2; // 0xad0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0xb20
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0xbc0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_8; // 0xc80
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_20; // 0xdd8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_7; // 0xe00
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_6; // 0xf58
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0x10b0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0x1208
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0x1360
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_19; // 0x14b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_18; // 0x14e0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_17; // 0x1508
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_16; // 0x1530
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_15; // 0x1558
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_14; // 0x1580
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_13; // 0x15a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_12; // 0x15d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_11; // 0x15f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_10; // 0x1620
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_9; // 0x1648
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0x1670
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0x1698
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x16c0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x1788
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x18e0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x1908
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x1930
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x19b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x1a60
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x1b00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x1ba0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1c40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x1cc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x1d40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x1dc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x1e40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x1ec0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x1f40
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x2028
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x2110
	FAnimNode_PoseSnapshot AnimGraphNode_PoseSnapshot; // 0x2268
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x22f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x2320
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x2348
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x2370
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator; // 0x2398
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x23e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x2468
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2508
};

struct ABP_Survival_BagCrafting_CraftRope_Objetive_C : ACraftingObjective {
	USceneComponent* DefaultSceneRoot; // 0x348
};

struct UMetabolismTreatmentPanel : UUserWidget {
	UVerticalBox* _untreatedColumn; // 0x260
	UVerticalBox* _stabilizationColumn; // 0x268
	UVerticalBox* _recoveryColumn; // 0x270
	UMetabolismBodyEffectProgressBar* _progressBarClass; // 0x278
};

struct UNiagaraDataInterfaceGrid2D : UNiagaraDataInterfaceRWBase {
	int32_t NumCellsX; // 0xd8
	int32_t NumCellsY; // 0xdc
	int32_t NumCellsMaxAxis; // 0xe0
	int32_t NumAttributes; // 0xe4
	bool SetGridFromMaxAxis; // 0xe8
	FVector2D WorldBBoxSize; // 0xec
};

struct ALevelSequenceMediaController : AActor {
	ALevelSequenceActor* Sequence; // 0x228
	UMediaComponent* MediaComponent; // 0x230
	float ServerStartTimeSeconds; // 0x238
};

struct A1H_Wrench_Pipe_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f0
};

struct UParticleModuleBeamModifier : UParticleModuleBeamBase {
	BeamModifierType ModifierType; // 0x30
	FBeamModifierOptions PositionOptions; // 0x34
	FRawDistributionVector position; // 0x38
	FBeamModifierOptions TangentOptions; // 0x80
	FRawDistributionVector Tangent; // 0x88
	char bAbsoluteTangent : 1; // 0xd0
	FBeamModifierOptions StrengthOptions; // 0xd4
	FRawDistributionFloat Strength; // 0xd8
};

struct UARPlaneComponent : UARComponent {
	FARPlaneUpdatePayload ReplicatedPayload; // 0x280
};

struct UConstantQNRTSettings : UAudioSynesthesiaNRTSettings {
	float StartingFrequency; // 0x28
	int32_t NumBands; // 0x2c
	float NumBandsPerOctave; // 0x30
	float AnalysisPeriod; // 0x34
	bool bDownmixToMono; // 0x38
	EConstantQFFTSizeEnum FFTSize; // 0x39
	EFFTWindowType WindowType; // 0x3a
	EAudioSpectrumType SpectrumType; // 0x3b
	float BandWidthStretch; // 0x3c
	EConstantQNormalizationEnum CQTNormalization; // 0x40
	float NoiseFloorDb; // 0x44
};

struct UEnvQueryGenerator_Cone : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue AlignedPointsDistance; // 0x80
	FAIDataProviderFloatValue ConeDegrees; // 0xb8
	FAIDataProviderFloatValue AngleStep; // 0xf0
	FAIDataProviderFloatValue Range; // 0x128
	UEnvQueryContext* CenterActor; // 0x160
	char bIncludeContextLocation : 1; // 0x168
};

struct UAnimNotifyState_WeaponShowAmmunitionMeshes : UAnimNotifyState {
	bool showReversed; // 0x30
	TArray<int32_t> ammoIndices; // 0x38
};

struct UUI_CTFRoundInfoWidget_C : UGameEventRoundInfoWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UTextBlock* RoundStatus; // 0x280
	UTextBlock* TimeLeft; // 0x288
	UHorizontalBox* TimeLeftBox; // 0x290
	UTextBlock* TimeLeftLabel; // 0x298
	ABP_CTFGameEvent_C* gameEvent; // 0x2a0
};

struct USoundNodeQualityLevel : USoundNode {
	int32_t CookedQualityLevelIndex; // 0x48
};

struct UVehicleCameraStabilizerComponent : USceneComponent {
	FVector _componentWorldOffset; // 0x1fc
	float _desiredDistance; // 0x208
	float _speedFallbackIntensity; // 0x20c
	float _lateralMovementResponseIntensity; // 0x210
	float _lockedHorizontalDampeningFactor; // 0x214
	float _lockedHorizontalOscillationFactor; // 0x218
	float _lockedVerticalDampeningFactor; // 0x21c
	float _lockedVerticalOscillationFactor; // 0x220
	float _maxFreeLookPitch; // 0x224
	float _freeHorizontalDampeningFactor; // 0x228
	float _freeHorizontalOscillationFactor; // 0x22c
	float _freeVerticalDampeningFactor; // 0x230
	float _freeVerticalOscillationFactor; // 0x234
};

struct ULandscapeMeshProxyComponent : UStaticMeshComponent {
	FGuid LandscapeGuid; // 0x4d8
	TArray<FIntPoint> ProxyComponentBases; // 0x4e8
	int8_t ProxyLOD; // 0x4f8
};

struct UUI_GameEventMiniScoreboardWidget_C : UGameEventScoreboardWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	UTextBlock* EmptyMsg; // 0x2b8
	UBorder* Header; // 0x2c0
	UUniformGridPanel* Info; // 0x2c8
	UScrollBox* Rows; // 0x2d0
	TArray<UWidget*> List; // 0x2d8
	TArray<FText> TeamNames; // 0x2e8
	TArray<FGameEventTeamColours> TeamColors; // 0x2f8
};

struct UAIAsyncTaskBlueprintProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFail; // 0x38
};

struct AGameStateBase : AInfo {
	AGameModeBase* GameModeClass; // 0x220
	AGameModeBase* AuthorityGameMode; // 0x228
	ASpectatorPawn* SpectatorClass; // 0x230
	TArray<APlayerState*> PlayerArray; // 0x238
	bool bReplicatedHasBegunPlay; // 0x248
	float ReplicatedWorldTimeSeconds; // 0x24c
	float ServerWorldTimeSecondsDelta; // 0x250
	float ServerWorldTimeSecondsUpdateFrequency; // 0x254
};

struct UMovieSceneCameraShakeSourceShakeSection : UMovieSceneSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe8
};

struct UDummyCollisionCapsule : UCapsuleComponent {
	FGameplayTag _attachment; // 0x468
};

struct UPrisonerAnimInstance_Boat : UAnimInstance {
	float _vehicleSpeed; // 0x2b8
	float _vehicleSpeedKph; // 0x2bc
	bool _isVehicleDriver; // 0x2c0
	bool _isRowing; // 0x2c1
	bool _isPaddling; // 0x2c2
	bool _isMotorPropelled; // 0x2c3
	bool _isSailing; // 0x2c4
	float _sailsDeployAmount; // 0x2c8
	float _sailsSteerAmount; // 0x2cc
	float _sailsTurnAmount; // 0x2d0
	int32_t _paddleCounter; // 0x2d4
	float _vehicleThrottleAmount; // 0x2d8
	float _vehicleBrakeAmount; // 0x2dc
	float _vehicleSteerAmount; // 0x2e0
	int32_t _numPaddleSwingsInOneHand; // 0x2e4
	UBlendSpace* _vehicleDriverForwardIdleAnimation; // 0x2e8
	UBlendSpace* _vehiclePassengerIdleAnimation; // 0x2f0
	UBlendSpace* _boatDriverPaddleLAnimation; // 0x2f8
	UBlendSpace* _boatDriverPaddleRAnimation; // 0x300
	UAnimSequence* _boatDriverPaddleLToRAnimation; // 0x308
	UAnimSequence* _boatDriverPaddleRToLAnimation; // 0x310
	float _paddleInHand; // 0x318
	FTransform _motorHandleSocketTransform; // 0x320
	FTransform _sailsHandleSocketTransform; // 0x350
	FTransform _rudderSocketTransform; // 0x380
	float _maxSpineLeanAngle; // 0x3b0
	float _spineLeanAmountForHandlingMotor; // 0x3b4
	EPrisonerMovementPace _movementPace; // 0x3b8
	float _normalizedMovementPace; // 0x3bc
	float _playRateFromMovementPace; // 0x3c0
	EVehicleEngineState _engineState; // 0x3c4
	bool _useVehicleWAPLowerBodyIdleTP; // 0x3c5
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP; // 0x3c8
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP; // 0x3d0
	bool _isInCombatMode; // 0x3d8
	UAnimSequence* _startEngineStartAnimation; // 0x3e0
	UAnimSequence* _startEngineLoopAnimation; // 0x3e8
	UAnimSequence* _startEngineLongLoopAnimation; // 0x3f0
	UAnimSequence* _startEngineEndAnimation; // 0x3f8
};

struct UABP_Drum_C : UWeaponAttachmentMagazineAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x360
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x3f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x438
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x4e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x510
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x538
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x560
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x600
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x6b0
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x6f8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x740
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x788
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x7b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x7d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x800
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x958
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x978
	FAnimNode_RigidBody AnimGraphNode_RigidBody; // 0x9a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0xff0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x1090
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x1110
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x1190
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x1230
};

struct UParticleModuleKillBox : UParticleModuleKillBase {
	FRawDistributionVector LowerLeftCorner; // 0x30
	FRawDistributionVector UpperRightCorner; // 0x78
	char bAbsolute : 1; // 0xc0
	char bKillInside : 1; // 0xc0
	char bAxisAlignedAndFixedSize : 1; // 0xc0
};

struct UTractor4WAnimInstance : UConZVehicleAnimInstance {
	FTractor4WAnimWheelData FLWheelData; // 0xa78
	FTractor4WAnimWheelData FRWheelData; // 0xa80
};

struct UInterpTrackAkAudioRTPC : UInterpTrackFloatBase {
	FString Param; // 0x90
	char bPlayOnReverse : 1; // 0xa0
	char bContinueRTPCOnMatineeEnd : 1; // 0xa0
};

struct UAnimNotifyState_Trail : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName FirstSocketName; // 0x38
	FName SecondSocketName; // 0x40
	ETrailWidthMode WidthScaleMode; // 0x48
	FName WidthScaleCurve; // 0x4c
	char bRecycleSpawnedSystems : 1; // 0x54
};

struct URevolveToolProperties : URevolveProperties {
	bool bConnectOpenProfileToAxis; // 0xb0
	bool bSnapToWorldGrid; // 0xb1
	FVector DrawPlaneOrigin; // 0xb4
	FRotator DrawPlaneOrientation; // 0xc0
	bool bEnableSnapping; // 0xcc
	bool bAllowedToEditDrawPlane; // 0xcd
};

struct UMetabolismDigestionPanel : UUserWidget {
	UUserWidget* FoodWidgetClass; // 0x260
	UMetabolismRadialProgressBar* _rpb_Stomach; // 0x268
	UMetabolismRadialProgressBar* _rpb_Intestine; // 0x270
	UMetabolismRadialProgressBar* _rpb_Colon; // 0x278
	UMetabolismRadialProgressBar* _rpb_Bladder; // 0x280
	UWrapBox* _foods; // 0x288
};

struct UMaterialExpressionAdd : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UWrapBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	bool bFillEmptySpace; // 0x48
	float FillSpanWhenLessThan; // 0x4c
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UStatisticsPanelWidget : UBaseMenu {
	UStatisticsDetailsWidget* _survivalDetailsWidget; // 0x260
	UTrashMenuButton* _backButton; // 0x268
};

struct USpinBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FSpinBoxStyle SpinBoxStyle; // 0x30
};

struct UChoppingToolItemTag : UBaseItemTag {
	float ChoppingTimeMultiplier; // 0x30
	int32_t IngredientsQuantityBonus; // 0x34
	bool CanBeUsedForChoppingHair; // 0x38
};

struct UAchievementQueryCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UDeformMeshPolygonsTransformProperties : UInteractiveToolPropertySet {
	EGroupTopologyDeformationStrategy DeformationStrategy; // 0x60
	EQuickTransformerMode TransformMode; // 0x61
	bool bSelectFaces; // 0x62
	bool bSelectEdges; // 0x63
	bool bSelectVertices; // 0x64
	bool bSnapToWorldGrid; // 0x65
	bool bShowWireframe; // 0x66
	EWeightScheme SelectedWeightScheme; // 0x68
	double HandleWeight; // 0x70
	bool bPostFixHandles; // 0x78
};

struct USkeleton : UObject {
	TArray<FBoneNode> BoneTree; // 0x38
	TArray<FTransform> RefLocalPoses; // 0x48
	FGuid VirtualBoneGuid; // 0x170
	TArray<FVirtualBone> VirtualBones; // 0x180
	TArray<USkeletalMeshSocket*> Sockets; // 0x190
	FSmartNameContainer SmartNames; // 0x1f0
	TArray<UBlendProfile*> BlendProfiles; // 0x270
	TArray<FAnimSlotGroup> SlotGroups; // 0x280
	TArray<UAssetUserData*> AssetUserData; // 0x358
};

struct UMaterialExpressionMaterialAttributeLayers : UMaterialExpression {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
	FMaterialAttributesInput Input; // 0x58
	FMaterialLayersFunctions DefaultLayers; // 0x70
	TArray<UMaterialExpressionMaterialFunctionCall*> LayerCallers; // 0xb0
	int32_t NumActiveLayerCallers; // 0xc0
	TArray<UMaterialExpressionMaterialFunctionCall*> BlendCallers; // 0xc8
	int32_t NumActiveBlendCallers; // 0xd8
	bool bIsLayerGraphBuilt; // 0xdc
};

struct UKillBoxEntranceComponent : UCharacterActionComponent {
	AKillBoxManager* _killBoxManager; // 0xc0
};

struct UDirectionalLightComponent : ULightComponent {
	float ShadowCascadeBiasDistribution; // 0x328
	char bEnableLightShaftOcclusion : 1; // 0x32c
	float OcclusionMaskDarkness; // 0x330
	float OcclusionDepthRange; // 0x334
	FVector LightShaftOverrideDirection; // 0x338
	float WholeSceneDynamicShadowRadius; // 0x344
	float DynamicShadowDistanceMovableLight; // 0x348
	float DynamicShadowDistanceStationaryLight; // 0x34c
	int32_t DynamicShadowCascades; // 0x350
	float CascadeDistributionExponent; // 0x354
	float CascadeTransitionFraction; // 0x358
	float ShadowDistanceFadeoutFraction; // 0x35c
	char bUseInsetShadowsForMovableObjects : 1; // 0x360
	int32_t FarShadowCascadeCount; // 0x364
	float FarShadowDistance; // 0x368
	float DistanceFieldShadowDistance; // 0x36c
	float LightSourceAngle; // 0x370
	float LightSourceSoftAngle; // 0x374
	float ShadowSourceAngleFactor; // 0x378
	float TraceDistance; // 0x37c
	char bUsedAsAtmosphereSunLight : 1; // 0x380
	int32_t AtmosphereSunLightIndex; // 0x384
	FLinearColor AtmosphereSunDiskColorScale; // 0x388
	char bPerPixelAtmosphereTransmittance : 1; // 0x398
	char bCastShadowsOnClouds : 1; // 0x398
	char bCastShadowsOnAtmosphere : 1; // 0x398
	char bCastCloudShadows : 1; // 0x398
	float CloudShadowStrength; // 0x39c
	float CloudShadowOnAtmosphereStrength; // 0x3a0
	float CloudShadowOnSurfaceStrength; // 0x3a4
	float CloudShadowDepthBias; // 0x3a8
	float CloudShadowExtent; // 0x3ac
	float CloudShadowMapResolutionScale; // 0x3b0
	float CloudShadowRaySampleCountScale; // 0x3b4
	FLinearColor CloudScatteredLuminanceScale; // 0x3b8
	FLightmassDirectionalLightSettings LightmassSettings; // 0x3c8
	char bCastModulatedShadows : 1; // 0x3d8
	FColor ModulatedShadowColor; // 0x3dc
	float ShadowAmount; // 0x3e0
};

struct UMovieSceneParameterSection : UMovieSceneSection {
	TArray<FBoolParameterNameAndCurve> BoolParameterNamesAndCurves; // 0xe8
	TArray<FScalarParameterNameAndCurve> ScalarParameterNamesAndCurves; // 0xf8
	TArray<FVector2DParameterNameAndCurves> Vector2DParameterNamesAndCurves; // 0x108
	TArray<FVectorParameterNameAndCurves> VectorParameterNamesAndCurves; // 0x118
	TArray<FColorParameterNameAndCurves> ColorParameterNamesAndCurves; // 0x128
	TArray<FTransformParameterNameAndCurves> TransformParameterNamesAndCurves; // 0x138
};

struct UQuickAccessItemWidget : UDesignableUserWidget {
	char MaxWidth; // 0x278
	char MaxHeight; // 0x279
	UImage* _imageWidget; // 0x280
	TWeakObjectPtr<AItem> _item; // 0x288
	UObject* _itemClass; // 0x290
	float DefaultWidth; // 0x298
	float DefaultHeight; // 0x29c
	FVector2D DefaultPosition; // 0x2a0
	UImage* _additionalIcon; // 0x2b0
	UTextBlock* _additionalText; // 0x2b8
	TMap<FName, float> _numberData; // 0x2d8
	bool _shouldUpdateVisuals; // 0x328
	USizeBox* _lowerLeftBox; // 0x340
	USizeBox* _additionalIconSizeBox; // 0x348
};

struct UTradingOutpostDescriptionDataAsset : UDataAsset {
	FGuid TradeOutpostPersistentId; // 0x30
};

struct UBasicOverlays : UOverlays {
	TArray<FOverlayItem> Overlays; // 0x28
};

struct UABP_Prisoner_Boat_C : UPrisonerAnimInstance_Boat {
	FPointerToUberGraphFrame UberGraphFrame; // 0x400
	FAnimNode_Root AnimGraphNode_Root; // 0x408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x438
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x460
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x488
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x4b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x4d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x500
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x528
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x550
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x578
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x5a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x5c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x5f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x618
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x640
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x668
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x690
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x6b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x6e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x708
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x730
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x758
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x780
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x7a8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6; // 0x7d0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6; // 0x7f0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_7; // 0x810
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x9a0
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0xa20
	FAnimNode_Fabrik AnimGraphNode_Fabrik_6; // 0xa50
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5; // 0xbe0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5; // 0xc00
	FAnimNode_Fabrik AnimGraphNode_Fabrik_5; // 0xc20
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0xdb0
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0xe98
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4; // 0xec8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4; // 0xee8
	FAnimNode_Fabrik AnimGraphNode_Fabrik_4; // 0xf10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x10a0
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x1120
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3; // 0x1150
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3; // 0x1170
	FAnimNode_Fabrik AnimGraphNode_Fabrik_3; // 0x1190
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1320
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x13a0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x13d0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0x13f0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_2; // 0x1410
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x15a0
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x1620
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x1650
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x1738
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x1768
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x1850
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x1880
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1900
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x1930
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x19b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x19e0
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x1ac8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x1af8
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x1be0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x1c10
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x1cf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x1d28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x1da8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x1e28
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x1ec8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x1f68
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x2050
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x2080
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2100
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x2180
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x2220
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x22c0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x22e0
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x2300
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x2490
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x2578
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x25a8
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x25d8
};

struct UUI_CraftingComponentTooltip_C : UUserWidget {
	UImage* BackgroundImage; // 0x260
	UTextBlock* ComponentTypeText; // 0x268
	UTextBlock* DescriptionText; // 0x270
	UImage* Image_1; // 0x278
	UTextBlock* NameText; // 0x280
	UUI_CraftingComponent_C* UI_CraftingComponent; // 0x288
};

struct UEditableText : UWidget {
	FText Text; // 0x108
	FDelegate TextDelegate; // 0x120
	FText HintText; // 0x130
	FDelegate HintTextDelegate; // 0x148
	FEditableTextStyle WidgetStyle; // 0x158
	USlateWidgetStyleAsset* Style; // 0x378
	USlateBrushAsset* BackgroundImageSelected; // 0x380
	USlateBrushAsset* BackgroundImageComposing; // 0x388
	USlateBrushAsset* CaretImage; // 0x390
	FSlateFontInfo Font; // 0x398
	FSlateColor ColorAndOpacity; // 0x3f0
	bool IsReadOnly; // 0x418
	bool IsPassword; // 0x419
	float MinimumDesiredWidth; // 0x41c
	bool IsCaretMovedWhenGainFocus; // 0x420
	bool SelectAllTextWhenFocused; // 0x421
	bool RevertTextOnEscape; // 0x422
	bool ClearKeyboardFocusOnCommit; // 0x423
	bool SelectAllTextOnCommit; // 0x424
	bool AllowContextMenu; // 0x425
	EVirtualKeyboardType KeyboardType; // 0x426
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x427
	EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0x428
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x429
	ETextJustify Justification; // 0x42a
	FShapedTextOptions ShapedTextOptions; // 0x42b
	FMulticastInlineDelegate OnTextChanged; // 0x430
	FMulticastInlineDelegate OnTextCommitted; // 0x440
};

struct UEnvQueryGenerator_PathingGrid : UEnvQueryGenerator_SimpleGrid {
	FAIDataProviderBoolValue PathToItem; // 0xf8
	UNavigationQueryFilter* NavigationFilter; // 0x130
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x138
};

struct UInterpTrackFloatAnimBPParam : UInterpTrackFloatBase {
	UObject* AnimBlueprintClass; // 0x90
	UAnimInstance* AnimClass; // 0x98
	FName ParamName; // 0xa0
};

struct UCircularMenuSegmentWeaponMalfunctionInfo : UCircularMenuSegmentInfo {
	EWeaponMalfunction _weaponMalfunction; // 0x80
};

struct UGameEventParticipantStats : UObject {
	float _score; // 0x28
};

struct USkeletalBodySetup : UBodySetup {
	bool bSkipScaleFromAnimation; // 0x2a0
	TArray<FPhysicalAnimationProfile> PhysicalAnimationData; // 0x2a8
};

struct UPreviewMeshCollection : UDataAsset {
	USkeleton* Skeleton; // 0x38
	TArray<FPreviewMeshCollectionEntry> SkeletalMeshes; // 0x40
};

struct ANightVisionGogglesItem : AClothesItem {
	UStaticMesh* EquippedStaticMeshWhenActivated; // 0x920
	UAkAudioEvent* ActivatedSound; // 0x928
	UAkAudioEvent* DeactivatedSound; // 0x930
	FMulticastInlineDelegate ActivatedChanged; // 0x938
	UBasicGameResourceContainerComponent* _resourceContainerComponent; // 0x950
};

struct UABP_Prisoner_C : UPrisonerAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1140
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_201; // 0x1148
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_200; // 0x1170
	FAnimNode_Slot AnimGraphNode_Slot_28; // 0x1198
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_237; // 0x11e0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_236; // 0x12a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_199; // 0x1360
	FAnimNode_SpringBone AnimGraphNode_SpringBone_3; // 0x1388
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_136; // 0x14b0
	FAnimNode_SpringBone AnimGraphNode_SpringBone_2; // 0x14d0
	FAnimNode_SpringBone AnimGraphNode_SpringBone; // 0x15f8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_53; // 0x1720
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_236; // 0x1878
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_198; // 0x1960
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_408; // 0x1988
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_197; // 0x1a28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_760; // 0x1a50
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_52; // 0x1ad0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_173; // 0x1c28
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_136; // 0x1d30
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_135; // 0x1d50
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_172; // 0x1d70
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_14; // 0x1e78
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive_5; // 0x1f18
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_235; // 0x1fe8
	FAnimNode_Slot AnimGraphNode_Slot_27; // 0x20a8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_51; // 0x20f0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_50; // 0x2248
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_225; // 0x23a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_196; // 0x2468
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_49; // 0x2490
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_110; // 0x25e8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_48; // 0x2698
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_407; // 0x27f0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_171; // 0x2890
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_406; // 0x2998
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_195; // 0x2a38
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_47; // 0x2a60
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_109; // 0x2bb8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_2; // 0x2c68
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_135; // 0x2d30
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_194; // 0x2d50
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_405; // 0x2d78
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_193; // 0x2e18
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_192; // 0x2e40
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_191; // 0x2e68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_190; // 0x2e90
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_235; // 0x2eb8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_404; // 0x2fa0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_46; // 0x3040
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_108; // 0x3198
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_234; // 0x3248
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_233; // 0x3330
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_189; // 0x3418
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive_4; // 0x3440
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_403; // 0x3510
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_107; // 0x35b0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_27; // 0x3660
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_26; // 0x37f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_402; // 0x3980
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_234; // 0x3a20
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_188; // 0x3ae0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_45; // 0x3b08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_759; // 0x3c60
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_401; // 0x3ce0
	FAnimNode_RefPose AnimGraphNode_IdentityPose_6; // 0x3d80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_758; // 0x3d98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_400; // 0x3e18
	FAnimNode_RefPose AnimGraphNode_IdentityPose_5; // 0x3eb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_757; // 0x3ed0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_399; // 0x3f50
	FAnimNode_RefPose AnimGraphNode_IdentityPose_4; // 0x3ff0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_106; // 0x4008
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_255; // 0x40b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_254; // 0x40e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_253; // 0x4108
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_252; // 0x4130
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_251; // 0x4158
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_250; // 0x4180
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_249; // 0x41a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_248; // 0x41d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_247; // 0x41f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_246; // 0x4220
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_245; // 0x4248
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_244; // 0x4270
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_243; // 0x4298
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_242; // 0x42c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_241; // 0x42e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_240; // 0x4310
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_239; // 0x4338
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_238; // 0x4360
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_237; // 0x4388
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_236; // 0x43b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_235; // 0x43d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_234; // 0x4400
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_233; // 0x4428
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_232; // 0x4450
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_231; // 0x4478
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_230; // 0x44a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_229; // 0x44c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_228; // 0x44f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_227; // 0x4518
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_226; // 0x4540
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_225; // 0x4568
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_224; // 0x4590
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_223; // 0x45b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_222; // 0x45e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_221; // 0x4608
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_220; // 0x4630
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_219; // 0x4658
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_218; // 0x4680
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_217; // 0x46a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_216; // 0x46d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_215; // 0x46f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_214; // 0x4720
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_213; // 0x4748
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_212; // 0x4770
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_211; // 0x4798
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_210; // 0x47c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_209; // 0x47e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_208; // 0x4810
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_207; // 0x4838
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_206; // 0x4860
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_205; // 0x4888
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_204; // 0x48b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_203; // 0x48d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_202; // 0x4900
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_201; // 0x4928
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_200; // 0x4950
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_199; // 0x4978
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_198; // 0x49a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_197; // 0x49c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_196; // 0x49f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_195; // 0x4a18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_194; // 0x4a40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_193; // 0x4a68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_192; // 0x4a90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_191; // 0x4ab8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_190; // 0x4ae0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_189; // 0x4b08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_188; // 0x4b30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_187; // 0x4b58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_186; // 0x4b80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_185; // 0x4ba8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_184; // 0x4bd0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_183; // 0x4bf8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_182; // 0x4c20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_181; // 0x4c48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_180; // 0x4c70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_179; // 0x4c98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_178; // 0x4cc0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_177; // 0x4ce8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_176; // 0x4d10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_175; // 0x4d38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_174; // 0x4d60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_173; // 0x4d88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_172; // 0x4db0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_171; // 0x4dd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_170; // 0x4e00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_169; // 0x4e28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_168; // 0x4e50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_167; // 0x4e78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_166; // 0x4ea0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_165; // 0x4ec8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_164; // 0x4ef0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_163; // 0x4f18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_162; // 0x4f40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_161; // 0x4f68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_160; // 0x4f90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_159; // 0x4fb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_158; // 0x4fe0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_157; // 0x5008
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_156; // 0x5030
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_155; // 0x5058
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_154; // 0x5080
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_153; // 0x50a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_152; // 0x50d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_151; // 0x50f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_150; // 0x5120
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_149; // 0x5148
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_148; // 0x5170
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_147; // 0x5198
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_146; // 0x51c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_145; // 0x51e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_144; // 0x5210
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_143; // 0x5238
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_142; // 0x5260
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_141; // 0x5288
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_140; // 0x52b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_139; // 0x52d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_138; // 0x5300
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_137; // 0x5328
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_136; // 0x5350
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_135; // 0x5378
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_134; // 0x53a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_133; // 0x53c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_132; // 0x53f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_131; // 0x5418
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_130; // 0x5440
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_129; // 0x5468
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_128; // 0x5490
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_127; // 0x54b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_126; // 0x54e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_125; // 0x5508
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_124; // 0x5530
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_123; // 0x5558
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_122; // 0x5580
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_121; // 0x55a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_120; // 0x55d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_119; // 0x55f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_118; // 0x5620
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_117; // 0x5648
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_116; // 0x5670
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_115; // 0x5698
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_114; // 0x56c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_113; // 0x56e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_112; // 0x5710
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_111; // 0x5738
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_110; // 0x5760
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_109; // 0x5788
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_108; // 0x57b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_107; // 0x57d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_106; // 0x5800
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_105; // 0x5828
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_104; // 0x5850
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_103; // 0x5878
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_102; // 0x58a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_101; // 0x58c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_100; // 0x58f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_99; // 0x5918
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_98; // 0x5940
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_97; // 0x5968
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_96; // 0x5990
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_95; // 0x59b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_94; // 0x59e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_93; // 0x5a08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_92; // 0x5a30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_91; // 0x5a58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_90; // 0x5a80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_89; // 0x5aa8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_88; // 0x5ad0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_87; // 0x5af8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_86; // 0x5b20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_85; // 0x5b48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_84; // 0x5b70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_83; // 0x5b98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_82; // 0x5bc0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_81; // 0x5be8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_80; // 0x5c10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_79; // 0x5c38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_78; // 0x5c60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_77; // 0x5c88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_76; // 0x5cb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_75; // 0x5cd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_74; // 0x5d00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_73; // 0x5d28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_72; // 0x5d50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_71; // 0x5d78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_70; // 0x5da0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_69; // 0x5dc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_68; // 0x5df0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_67; // 0x5e18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_66; // 0x5e40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_65; // 0x5e68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_64; // 0x5e90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0x5eb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0x5ee0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0x5f08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x5f30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x5f58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x5f80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x5fa8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x5fd0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x5ff8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x6020
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_13; // 0x6048
	FAnimNode_StateResult AnimGraphNode_StateResult_64; // 0x60e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0x6118
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_193; // 0x6140
	FAnimNode_StateResult AnimGraphNode_StateResult_63; // 0x6190
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_192; // 0x61c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_191; // 0x6210
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_756; // 0x6260
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_233; // 0x62e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_398; // 0x63a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_755; // 0x6440
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_754; // 0x64c0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_105; // 0x6540
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_753; // 0x65f0
	FAnimNode_StateResult AnimGraphNode_StateResult_62; // 0x6670
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_190; // 0x66a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_189; // 0x66f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_752; // 0x6740
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_232; // 0x67c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_397; // 0x6880
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_751; // 0x6920
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_750; // 0x69a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_188; // 0x6a20
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_187; // 0x6a70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_749; // 0x6ac0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_231; // 0x6b40
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_396; // 0x6c00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_748; // 0x6ca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_747; // 0x6d20
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_104; // 0x6da0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_746; // 0x6e50
	FAnimNode_StateResult AnimGraphNode_StateResult_61; // 0x6ed0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_186; // 0x6f00
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_185; // 0x6f50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_745; // 0x6fa0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_230; // 0x7020
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_395; // 0x70e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_744; // 0x7180
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_743; // 0x7200
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_184; // 0x7280
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_183; // 0x72d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_742; // 0x7320
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_229; // 0x73a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_394; // 0x7460
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_741; // 0x7500
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_740; // 0x7580
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_103; // 0x7600
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_739; // 0x76b0
	FAnimNode_StateResult AnimGraphNode_StateResult_60; // 0x7730
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_182; // 0x7760
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_181; // 0x77b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_738; // 0x7800
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_228; // 0x7880
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_393; // 0x7940
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_737; // 0x79e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_736; // 0x7a60
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_102; // 0x7ae0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_735; // 0x7b90
	FAnimNode_StateResult AnimGraphNode_StateResult_59; // 0x7c10
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_180; // 0x7c40
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_179; // 0x7c90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_734; // 0x7ce0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_227; // 0x7d60
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_392; // 0x7e20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_733; // 0x7ec0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_732; // 0x7f40
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_101; // 0x7fc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_731; // 0x8070
	FAnimNode_StateResult AnimGraphNode_StateResult_58; // 0x80f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_178; // 0x8120
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_177; // 0x8170
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_730; // 0x81c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_226; // 0x8240
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_391; // 0x8300
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_729; // 0x83a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_728; // 0x8420
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_100; // 0x84a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_727; // 0x8550
	FAnimNode_StateResult AnimGraphNode_StateResult_57; // 0x85d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_99; // 0x8600
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_726; // 0x86b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_725; // 0x8730
	FAnimNode_StateResult AnimGraphNode_StateResult_56; // 0x87b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_98; // 0x87e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_724; // 0x8890
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_170; // 0x8910
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_169; // 0x8a18
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_134; // 0x8b20
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_134; // 0x8b40
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_168; // 0x8b60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_723; // 0x8c68
	FAnimNode_StateResult AnimGraphNode_StateResult_55; // 0x8ce8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0x8d18
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_97; // 0x8d40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_722; // 0x8df0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_167; // 0x8e70
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_166; // 0x8f78
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_133; // 0x9080
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_133; // 0x90a0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_165; // 0x90c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_721; // 0x91c8
	FAnimNode_StateResult AnimGraphNode_StateResult_54; // 0x9248
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_96; // 0x9278
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_720; // 0x9328
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_164; // 0x93a8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_163; // 0x94b0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_132; // 0x95b8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_132; // 0x95d8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_162; // 0x95f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_719; // 0x9700
	FAnimNode_StateResult AnimGraphNode_StateResult_53; // 0x9780
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_95; // 0x97b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_718; // 0x9860
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_161; // 0x98e0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_160; // 0x99e8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_131; // 0x9af0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_131; // 0x9b10
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_159; // 0x9b30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_717; // 0x9c38
	FAnimNode_StateResult AnimGraphNode_StateResult_52; // 0x9cb8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_94; // 0x9ce8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_716; // 0x9d98
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_158; // 0x9e18
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_157; // 0x9f20
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_130; // 0xa028
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_130; // 0xa048
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_156; // 0xa068
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_715; // 0xa170
	FAnimNode_StateResult AnimGraphNode_StateResult_51; // 0xa1f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_93; // 0xa220
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_714; // 0xa2d0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_155; // 0xa350
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_154; // 0xa458
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_129; // 0xa560
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_129; // 0xa580
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_153; // 0xa5a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_713; // 0xa6a8
	FAnimNode_StateResult AnimGraphNode_StateResult_50; // 0xa728
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_92; // 0xa758
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_712; // 0xa808
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_152; // 0xa888
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_151; // 0xa990
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_128; // 0xaa98
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_128; // 0xaab8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_150; // 0xaad8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_711; // 0xabe0
	FAnimNode_StateResult AnimGraphNode_StateResult_49; // 0xac60
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_91; // 0xac90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_710; // 0xad40
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_149; // 0xadc0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_148; // 0xaec8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_127; // 0xafd0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_127; // 0xaff0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_147; // 0xb010
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_232; // 0xb118
	FAnimNode_StateResult AnimGraphNode_StateResult_48; // 0xb200
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_90; // 0xb230
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_709; // 0xb2e0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_146; // 0xb360
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_145; // 0xb468
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_126; // 0xb570
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_126; // 0xb590
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_144; // 0xb5b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_708; // 0xb6b8
	FAnimNode_StateResult AnimGraphNode_StateResult_47; // 0xb738
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_89; // 0xb768
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_707; // 0xb818
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_143; // 0xb898
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_142; // 0xb9a0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_125; // 0xbaa8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_125; // 0xbac8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_141; // 0xbae8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_706; // 0xbbf0
	FAnimNode_StateResult AnimGraphNode_StateResult_46; // 0xbc70
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_88; // 0xbca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_705; // 0xbd50
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_140; // 0xbdd0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_139; // 0xbed8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_124; // 0xbfe0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_124; // 0xc000
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_138; // 0xc020
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_704; // 0xc128
	FAnimNode_StateResult AnimGraphNode_StateResult_45; // 0xc1a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0xc1d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0xc200
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_87; // 0xc228
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_231; // 0xc2d8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_86; // 0xc3c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_703; // 0xc470
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_137; // 0xc4f0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_136; // 0xc5f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_123; // 0xc700
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_123; // 0xc720
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_135; // 0xc740
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_230; // 0xc848
	FAnimNode_StateResult AnimGraphNode_StateResult_44; // 0xc930
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_85; // 0xc960
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_702; // 0xca10
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_134; // 0xca90
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_133; // 0xcb98
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_122; // 0xcca0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_122; // 0xccc0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_132; // 0xcce0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_701; // 0xcde8
	FAnimNode_StateResult AnimGraphNode_StateResult_43; // 0xce68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0xce98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0xcec0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0xcee8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0xcf10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0xcf38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0xcf60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0xcf88
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_131; // 0xcfb0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_121; // 0xd0b8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_130; // 0xd0d8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_121; // 0xd1e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_224; // 0xd200
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_700; // 0xd2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_699; // 0xd348
	FAnimNode_StateResult AnimGraphNode_StateResult_42; // 0xd3c8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_129; // 0xd3f8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_176; // 0xd500
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_175; // 0xd550
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_223; // 0xd5a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_390; // 0xd668
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_120; // 0xd708
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_128; // 0xd728
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_120; // 0xd830
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_174; // 0xd850
	FAnimNode_StateResult AnimGraphNode_StateResult_41; // 0xd8a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0xd8d0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_173; // 0xd8f8
	FAnimNode_StateResult AnimGraphNode_StateResult_40; // 0xd948
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0xd978
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_389; // 0xd9a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_698; // 0xda40
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_225; // 0xdac0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_388; // 0xdb80
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_172; // 0xdc20
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_171; // 0xdc70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_387; // 0xdcc0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_170; // 0xdd60
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_169; // 0xddb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_168; // 0xde00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_697; // 0xde50
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_386; // 0xded0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_167; // 0xdf70
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_166; // 0xdfc0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_84; // 0xe010
	FAnimNode_StateResult AnimGraphNode_StateResult_39; // 0xe0c0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_83; // 0xe0f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_696; // 0xe1a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_695; // 0xe220
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_385; // 0xe2a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_694; // 0xe340
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_224; // 0xe3c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_693; // 0xe480
	FAnimNode_StateResult AnimGraphNode_StateResult_38; // 0xe500
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_692; // 0xe530
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_691; // 0xe5b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_384; // 0xe630
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_690; // 0xe6d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_82; // 0xe750
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_223; // 0xe800
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_689; // 0xe8c0
	FAnimNode_StateResult AnimGraphNode_StateResult_37; // 0xe940
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0xe970
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0xe998
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0xe9c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_222; // 0xe9e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_688; // 0xeaa8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_383; // 0xeb28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_687; // 0xebc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_686; // 0xec48
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_81; // 0xecc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_685; // 0xed78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_684; // 0xedf8
	FAnimNode_StateResult AnimGraphNode_StateResult_36; // 0xee78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_683; // 0xeea8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_382; // 0xef28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_682; // 0xefc8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_381; // 0xf048
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_165; // 0xf0e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_164; // 0xf138
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_380; // 0xf188
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_163; // 0xf228
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_162; // 0xf278
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_161; // 0xf2c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_221; // 0xf318
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_379; // 0xf3d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_160; // 0xf478
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_159; // 0xf4c8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_80; // 0xf518
	FAnimNode_StateResult AnimGraphNode_StateResult_35; // 0xf5c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0xf5f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0xf620
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0xf648
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0xf670
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0xf698
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0xf6c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_220; // 0xf6e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_681; // 0xf7a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_378; // 0xf828
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_680; // 0xf8c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_229; // 0xf948
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_228; // 0xfa30
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_227; // 0xfb18
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_219; // 0xfc00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_679; // 0xfcc0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_377; // 0xfd40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_678; // 0xfde0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_226; // 0xfe60
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_225; // 0xff48
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_79; // 0x10030
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_224; // 0x100e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_223; // 0x101c8
	FAnimNode_StateResult AnimGraphNode_StateResult_34; // 0x102b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x102e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_677; // 0x10308
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_676; // 0x10388
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_675; // 0x10408
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_674; // 0x10488
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_673; // 0x10508
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_672; // 0x10588
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_671; // 0x10608
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_670; // 0x10688
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_78; // 0x10708
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_669; // 0x107b8
	FAnimNode_StateResult AnimGraphNode_StateResult_33; // 0x10838
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_668; // 0x10868
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_667; // 0x108e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_666; // 0x10968
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_665; // 0x109e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_664; // 0x10a68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_663; // 0x10ae8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_662; // 0x10b68
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_77; // 0x10be8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_661; // 0x10c98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_660; // 0x10d18
	FAnimNode_StateResult AnimGraphNode_StateResult_32; // 0x10d98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_659; // 0x10dc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_658; // 0x10e48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_657; // 0x10ec8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_656; // 0x10f48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_655; // 0x10fc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_654; // 0x11048
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_76; // 0x110c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_653; // 0x11178
	FAnimNode_StateResult AnimGraphNode_StateResult_31; // 0x111f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_652; // 0x11228
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_651; // 0x112a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_650; // 0x11328
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_649; // 0x113a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_648; // 0x11428
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_75; // 0x114a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_647; // 0x11558
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_646; // 0x115d8
	FAnimNode_StateResult AnimGraphNode_StateResult_30; // 0x11658
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_645; // 0x11688
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_119; // 0x11708
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_119; // 0x11728
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_127; // 0x11748
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_644; // 0x11850
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_118; // 0x118d0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_118; // 0x118f0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_126; // 0x11910
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_643; // 0x11a18
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_218; // 0x11a98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_642; // 0x11b58
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_158; // 0x11bd8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_157; // 0x11c28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_641; // 0x11c78
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_222; // 0x11cf8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_221; // 0x11dc0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_156; // 0x11e88
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_155; // 0x11ed8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_640; // 0x11f28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_639; // 0x11fa8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_217; // 0x12028
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_638; // 0x120e8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_216; // 0x12168
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_220; // 0x12228
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_219; // 0x122f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_154; // 0x123b8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_153; // 0x12408
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_218; // 0x12458
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_217; // 0x12520
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_637; // 0x125e8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_215; // 0x12668
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_636; // 0x12728
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_152; // 0x127a8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_151; // 0x127f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_635; // 0x12848
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_216; // 0x128c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_215; // 0x12990
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_634; // 0x12a58
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_214; // 0x12ad8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_633; // 0x12b98
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_150; // 0x12c18
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_149; // 0x12c68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_632; // 0x12cb8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_214; // 0x12d38
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_213; // 0x12e00
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_74; // 0x12ec8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_148; // 0x12f78
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_147; // 0x12fc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_631; // 0x13018
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_630; // 0x13098
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_213; // 0x13118
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_212; // 0x131d8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_212; // 0x13298
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_211; // 0x13360
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_146; // 0x13428
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_145; // 0x13478
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_210; // 0x134c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_209; // 0x13590
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_629; // 0x13658
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_211; // 0x136d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_144; // 0x13798
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_143; // 0x137e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_628; // 0x13838
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_208; // 0x138b8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_207; // 0x13980
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_142; // 0x13a48
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_141; // 0x13a98
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_206; // 0x13ae8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_205; // 0x13bb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_627; // 0x13c78
	FAnimNode_StateResult AnimGraphNode_StateResult_29; // 0x13cf8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x13d28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x13d50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x13d78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x13da0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x13dc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x13df0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x13e18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x13e40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x13e68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_626; // 0x13e90
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_140; // 0x13f10
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_210; // 0x13f60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_625; // 0x14020
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_139; // 0x140a0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_209; // 0x140f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_624; // 0x141b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_138; // 0x14230
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_208; // 0x14280
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_623; // 0x14340
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_137; // 0x143c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_207; // 0x14410
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_622; // 0x144d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_376; // 0x14550
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_136; // 0x145f0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_206; // 0x14640
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_621; // 0x14700
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_620; // 0x14780
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_375; // 0x14800
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_135; // 0x148a0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_205; // 0x148f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_619; // 0x149b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_618; // 0x14a30
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_374; // 0x14ab0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_134; // 0x14b50
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_204; // 0x14ba0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_617; // 0x14c60
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_133; // 0x14ce0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_132; // 0x14d30
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_203; // 0x14d80
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_373; // 0x14e40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_616; // 0x14ee0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_615; // 0x14f60
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_131; // 0x14fe0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_202; // 0x15030
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_614; // 0x150f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_130; // 0x15170
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_201; // 0x151c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_129; // 0x15280
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_613; // 0x152d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_200; // 0x15350
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_128; // 0x15410
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_127; // 0x15460
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_199; // 0x154b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_372; // 0x15570
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_612; // 0x15610
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_611; // 0x15690
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_126; // 0x15710
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_198; // 0x15760
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_610; // 0x15820
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_125; // 0x158a0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_197; // 0x158f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_124; // 0x159b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_609; // 0x15a00
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_196; // 0x15a80
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_73; // 0x15b40
	FAnimNode_StateResult AnimGraphNode_StateResult_28; // 0x15bf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_608; // 0x15c20
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_123; // 0x15ca0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_195; // 0x15cf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_607; // 0x15db0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_122; // 0x15e30
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_194; // 0x15e80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_606; // 0x15f40
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_121; // 0x15fc0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_193; // 0x16010
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_605; // 0x160d0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_120; // 0x16150
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_192; // 0x161a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_604; // 0x16260
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_371; // 0x162e0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_119; // 0x16380
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_191; // 0x163d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_603; // 0x16490
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_602; // 0x16510
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_370; // 0x16590
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_118; // 0x16630
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_190; // 0x16680
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_601; // 0x16740
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_600; // 0x167c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_369; // 0x16840
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_117; // 0x168e0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_189; // 0x16930
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_116; // 0x169f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_115; // 0x16a40
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_188; // 0x16a90
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_368; // 0x16b50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_599; // 0x16bf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_598; // 0x16c70
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_114; // 0x16cf0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_187; // 0x16d40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_597; // 0x16e00
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_113; // 0x16e80
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_186; // 0x16ed0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_112; // 0x16f90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_596; // 0x16fe0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_185; // 0x17060
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_111; // 0x17120
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_110; // 0x17170
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_184; // 0x171c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_367; // 0x17280
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_595; // 0x17320
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_594; // 0x173a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_109; // 0x17420
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_183; // 0x17470
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_593; // 0x17530
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_108; // 0x175b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_182; // 0x17600
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_107; // 0x176c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_592; // 0x17710
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_181; // 0x17790
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_72; // 0x17850
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_591; // 0x17900
	FAnimNode_StateResult AnimGraphNode_StateResult_27; // 0x17980
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_106; // 0x179b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_105; // 0x17a00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_590; // 0x17a50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_589; // 0x17ad0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_588; // 0x17b50
	FAnimNode_LegIK AnimGraphNode_LegIK_51; // 0x17bd0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_366; // 0x17cc8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_117; // 0x17d68
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_117; // 0x17d88
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_125; // 0x17da8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_180; // 0x17eb0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_204; // 0x17f70
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_203; // 0x18038
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_587; // 0x18100
	FAnimNode_LegIK AnimGraphNode_LegIK_50; // 0x18180
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_365; // 0x18278
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_586; // 0x18318
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_116; // 0x18398
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_116; // 0x183b8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_124; // 0x183d8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_179; // 0x184e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_202; // 0x185a0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_201; // 0x18668
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_104; // 0x18730
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_103; // 0x18780
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_585; // 0x187d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_200; // 0x18850
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_102; // 0x18918
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_101; // 0x18968
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_584; // 0x189b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_583; // 0x18a38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_582; // 0x18ab8
	FAnimNode_LegIK AnimGraphNode_LegIK_49; // 0x18b38
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_364; // 0x18c30
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_115; // 0x18cd0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_115; // 0x18cf0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_123; // 0x18d10
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_178; // 0x18e18
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_199; // 0x18ed8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_198; // 0x18fa0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_581; // 0x19068
	FAnimNode_LegIK AnimGraphNode_LegIK_48; // 0x190e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_363; // 0x191e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_580; // 0x19280
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_114; // 0x19300
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_114; // 0x19320
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_122; // 0x19340
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_177; // 0x19448
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_197; // 0x19508
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_196; // 0x195d0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_100; // 0x19698
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_99; // 0x196e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_579; // 0x19738
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_195; // 0x197b8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_98; // 0x19880
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_97; // 0x198d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_578; // 0x19920
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_577; // 0x199a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_576; // 0x19a20
	FAnimNode_LegIK AnimGraphNode_LegIK_47; // 0x19aa0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_362; // 0x19b98
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_113; // 0x19c38
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_113; // 0x19c58
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_121; // 0x19c78
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_176; // 0x19d80
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_194; // 0x19e40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_193; // 0x19f08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_575; // 0x19fd0
	FAnimNode_LegIK AnimGraphNode_LegIK_46; // 0x1a050
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_361; // 0x1a148
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_574; // 0x1a1e8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_112; // 0x1a268
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_112; // 0x1a288
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_120; // 0x1a2a8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_175; // 0x1a3b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_192; // 0x1a470
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_191; // 0x1a538
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_96; // 0x1a600
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_95; // 0x1a650
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_573; // 0x1a6a0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_190; // 0x1a720
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_94; // 0x1a7e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_93; // 0x1a838
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_572; // 0x1a888
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_571; // 0x1a908
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_570; // 0x1a988
	FAnimNode_LegIK AnimGraphNode_LegIK_45; // 0x1aa08
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_360; // 0x1ab00
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_111; // 0x1aba0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_111; // 0x1abc0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_119; // 0x1abe0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_174; // 0x1ace8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_189; // 0x1ada8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_188; // 0x1ae70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_569; // 0x1af38
	FAnimNode_LegIK AnimGraphNode_LegIK_44; // 0x1afb8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_359; // 0x1b0b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_568; // 0x1b150
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_110; // 0x1b1d0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_110; // 0x1b1f0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_118; // 0x1b210
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_173; // 0x1b318
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_187; // 0x1b3d8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_186; // 0x1b4a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_92; // 0x1b568
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_91; // 0x1b5b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_567; // 0x1b608
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_185; // 0x1b688
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_566; // 0x1b750
	FAnimNode_LegIK AnimGraphNode_LegIK_43; // 0x1b7d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_358; // 0x1b8c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_565; // 0x1b968
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_109; // 0x1b9e8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_109; // 0x1ba08
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_117; // 0x1ba28
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_172; // 0x1bb30
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_184; // 0x1bbf0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_183; // 0x1bcb8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_90; // 0x1bd80
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_89; // 0x1bdd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_564; // 0x1be20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_563; // 0x1bea0
	FAnimNode_LegIK AnimGraphNode_LegIK_42; // 0x1bf20
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_357; // 0x1c018
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_562; // 0x1c0b8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_108; // 0x1c138
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_108; // 0x1c158
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_116; // 0x1c178
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_171; // 0x1c280
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_182; // 0x1c340
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_181; // 0x1c408
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_88; // 0x1c4d0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_87; // 0x1c520
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_561; // 0x1c570
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_560; // 0x1c5f0
	FAnimNode_LegIK AnimGraphNode_LegIK_41; // 0x1c670
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_356; // 0x1c768
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_559; // 0x1c808
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_107; // 0x1c888
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_107; // 0x1c8a8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_115; // 0x1c8c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_170; // 0x1c9d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_180; // 0x1ca90
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_179; // 0x1cb58
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_86; // 0x1cc20
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_85; // 0x1cc70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_558; // 0x1ccc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_557; // 0x1cd40
	FAnimNode_LegIK AnimGraphNode_LegIK_40; // 0x1cdc0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_355; // 0x1ceb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_556; // 0x1cf58
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_106; // 0x1cfd8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_106; // 0x1cff8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_114; // 0x1d018
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_169; // 0x1d120
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_178; // 0x1d1e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_177; // 0x1d2a8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_84; // 0x1d370
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_83; // 0x1d3c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_555; // 0x1d410
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_554; // 0x1d490
	FAnimNode_LegIK AnimGraphNode_LegIK_39; // 0x1d510
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_354; // 0x1d608
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_553; // 0x1d6a8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_105; // 0x1d728
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_105; // 0x1d748
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_113; // 0x1d768
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_168; // 0x1d870
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_176; // 0x1d930
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_175; // 0x1d9f8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_82; // 0x1dac0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_81; // 0x1db10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_552; // 0x1db60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_551; // 0x1dbe0
	FAnimNode_LegIK AnimGraphNode_LegIK_38; // 0x1dc60
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_353; // 0x1dd58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_550; // 0x1ddf8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_104; // 0x1de78
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_104; // 0x1de98
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_112; // 0x1deb8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_167; // 0x1dfc0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_174; // 0x1e080
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_173; // 0x1e148
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_80; // 0x1e210
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_79; // 0x1e260
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_549; // 0x1e2b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_548; // 0x1e330
	FAnimNode_LegIK AnimGraphNode_LegIK_37; // 0x1e3b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_352; // 0x1e4a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_547; // 0x1e548
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_103; // 0x1e5c8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_103; // 0x1e5e8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_111; // 0x1e608
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_166; // 0x1e710
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_172; // 0x1e7d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_171; // 0x1e898
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_78; // 0x1e960
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_77; // 0x1e9b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_546; // 0x1ea00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_545; // 0x1ea80
	FAnimNode_LegIK AnimGraphNode_LegIK_36; // 0x1eb00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_351; // 0x1ebf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_544; // 0x1ec98
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_102; // 0x1ed18
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_102; // 0x1ed38
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_110; // 0x1ed58
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_165; // 0x1ee60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_170; // 0x1ef20
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_169; // 0x1efe8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_76; // 0x1f0b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_75; // 0x1f100
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_543; // 0x1f150
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_168; // 0x1f1d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_167; // 0x1f298
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_166; // 0x1f360
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_165; // 0x1f428
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_542; // 0x1f4f0
	FAnimNode_LegIK AnimGraphNode_LegIK_35; // 0x1f570
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_350; // 0x1f668
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_541; // 0x1f708
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_101; // 0x1f788
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_101; // 0x1f7a8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_109; // 0x1f7c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_164; // 0x1f8d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_164; // 0x1f990
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_163; // 0x1fa58
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_74; // 0x1fb20
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_73; // 0x1fb70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_540; // 0x1fbc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_539; // 0x1fc40
	FAnimNode_LegIK AnimGraphNode_LegIK_34; // 0x1fcc0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_349; // 0x1fdb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_538; // 0x1fe58
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_100; // 0x1fed8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_100; // 0x1fef8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_108; // 0x1ff18
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_163; // 0x20020
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_162; // 0x200e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_161; // 0x201a8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_72; // 0x20270
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_71; // 0x202c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_537; // 0x20310
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_536; // 0x20390
	FAnimNode_LegIK AnimGraphNode_LegIK_33; // 0x20410
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_348; // 0x20508
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_535; // 0x205a8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_99; // 0x20628
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_99; // 0x20648
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_107; // 0x20668
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_162; // 0x20770
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_160; // 0x20830
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_159; // 0x208f8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_70; // 0x209c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_69; // 0x20a10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_534; // 0x20a60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_533; // 0x20ae0
	FAnimNode_LegIK AnimGraphNode_LegIK_32; // 0x20b60
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_347; // 0x20c58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_532; // 0x20cf8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_98; // 0x20d78
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_98; // 0x20d98
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_106; // 0x20db8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_161; // 0x20ec0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_158; // 0x20f80
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_157; // 0x21048
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_68; // 0x21110
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_67; // 0x21160
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_531; // 0x211b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_530; // 0x21230
	FAnimNode_LegIK AnimGraphNode_LegIK_31; // 0x212b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_346; // 0x213a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_529; // 0x21448
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_97; // 0x214c8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_97; // 0x214e8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_105; // 0x21508
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_160; // 0x21610
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_156; // 0x216d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_155; // 0x21798
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_66; // 0x21860
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_65; // 0x218b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_528; // 0x21900
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_527; // 0x21980
	FAnimNode_LegIK AnimGraphNode_LegIK_30; // 0x21a00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_345; // 0x21af8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_526; // 0x21b98
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_96; // 0x21c18
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_96; // 0x21c38
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_104; // 0x21c58
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_159; // 0x21d60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_154; // 0x21e20
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_153; // 0x21ee8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_64; // 0x21fb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_63; // 0x22000
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_525; // 0x22050
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_524; // 0x220d0
	FAnimNode_LegIK AnimGraphNode_LegIK_29; // 0x22150
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_344; // 0x22248
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_523; // 0x222e8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_95; // 0x22368
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_95; // 0x22388
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_103; // 0x223a8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_158; // 0x224b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_152; // 0x22570
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_151; // 0x22638
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_62; // 0x22700
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_61; // 0x22750
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_522; // 0x227a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_521; // 0x22820
	FAnimNode_LegIK AnimGraphNode_LegIK_28; // 0x228a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_343; // 0x22998
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_520; // 0x22a38
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_94; // 0x22ab8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_94; // 0x22ad8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_102; // 0x22af8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_157; // 0x22c00
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_150; // 0x22cc0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_149; // 0x22d88
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_60; // 0x22e50
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_59; // 0x22ea0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_519; // 0x22ef0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_518; // 0x22f70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_517; // 0x22ff0
	FAnimNode_LegIK AnimGraphNode_LegIK_27; // 0x23070
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_342; // 0x23168
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_516; // 0x23208
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_341; // 0x23288
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_93; // 0x23328
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_93; // 0x23348
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_101; // 0x23368
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_156; // 0x23470
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_148; // 0x23530
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_147; // 0x235f8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_58; // 0x236c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_57; // 0x23710
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_515; // 0x23760
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_514; // 0x237e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_513; // 0x23860
	FAnimNode_LegIK AnimGraphNode_LegIK_26; // 0x238e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_340; // 0x239d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_512; // 0x23a78
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_339; // 0x23af8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_92; // 0x23b98
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_92; // 0x23bb8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_100; // 0x23bd8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_155; // 0x23ce0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_146; // 0x23da0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_145; // 0x23e68
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_56; // 0x23f30
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_55; // 0x23f80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_511; // 0x23fd0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_154; // 0x24050
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_510; // 0x24110
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_338; // 0x24190
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_509; // 0x24230
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_144; // 0x242b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_143; // 0x24378
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_142; // 0x24440
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_54; // 0x24508
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_53; // 0x24558
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_508; // 0x245a8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_52; // 0x24628
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_51; // 0x24678
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_141; // 0x246c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_140; // 0x24790
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_507; // 0x24858
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_153; // 0x248d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_506; // 0x24998
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_337; // 0x24a18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_505; // 0x24ab8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_139; // 0x24b38
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_138; // 0x24c00
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_137; // 0x24cc8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_50; // 0x24d90
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_49; // 0x24de0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_504; // 0x24e30
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_48; // 0x24eb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_47; // 0x24f00
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_136; // 0x24f50
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_135; // 0x25018
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_503; // 0x250e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_134; // 0x25160
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_133; // 0x25228
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_132; // 0x252f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_131; // 0x253b8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_130; // 0x25480
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_71; // 0x25548
	FAnimNode_StateResult AnimGraphNode_StateResult_26; // 0x255f8
	FAnimNode_StateResult AnimGraphNode_StateResult_25; // 0x25628
	FAnimNode_StateResult AnimGraphNode_StateResult_24; // 0x25658
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_222; // 0x25688
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_221; // 0x25770
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_220; // 0x25858
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_336; // 0x25940
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_91; // 0x259e0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_91; // 0x25a00
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_99; // 0x25a20
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_152; // 0x25b28
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_129; // 0x25be8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_219; // 0x25cb0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_218; // 0x25d98
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_217; // 0x25e80
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_335; // 0x25f68
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_90; // 0x26008
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_90; // 0x26028
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_98; // 0x26048
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_151; // 0x26150
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_128; // 0x26210
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_216; // 0x262d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_215; // 0x263c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_214; // 0x264a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_502; // 0x26590
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_501; // 0x26610
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_127; // 0x26690
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_126; // 0x26758
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_334; // 0x26820
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_89; // 0x268c0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_89; // 0x268e0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_97; // 0x26900
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_150; // 0x26a08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_213; // 0x26ac8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_212; // 0x26bb0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_211; // 0x26c98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_500; // 0x26d80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_499; // 0x26e00
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_125; // 0x26e80
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_124; // 0x26f48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_333; // 0x27010
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_88; // 0x270b0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_88; // 0x270d0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_96; // 0x270f0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_149; // 0x271f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_210; // 0x272b8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_209; // 0x273a0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_208; // 0x27488
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_332; // 0x27570
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_87; // 0x27610
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_87; // 0x27630
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_95; // 0x27650
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_148; // 0x27758
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_207; // 0x27818
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_206; // 0x27900
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_205; // 0x279e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_331; // 0x27ad0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_86; // 0x27b70
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_86; // 0x27b90
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_94; // 0x27bb0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_147; // 0x27cb8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_204; // 0x27d78
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_203; // 0x27e60
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_202; // 0x27f48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_330; // 0x28030
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_85; // 0x280d0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_85; // 0x280f0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_93; // 0x28110
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_146; // 0x28218
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_201; // 0x282d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_200; // 0x283c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_199; // 0x284a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_329; // 0x28590
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_84; // 0x28630
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_84; // 0x28650
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_92; // 0x28670
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_145; // 0x28778
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_198; // 0x28838
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_197; // 0x28920
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_328; // 0x28a08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_498; // 0x28aa8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_327; // 0x28b28
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_83; // 0x28bc8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_83; // 0x28be8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_91; // 0x28c08
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_144; // 0x28d10
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_196; // 0x28dd0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_195; // 0x28eb8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_194; // 0x28fa0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_193; // 0x29088
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_326; // 0x29170
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_82; // 0x29210
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_82; // 0x29230
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_90; // 0x29250
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_143; // 0x29358
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_192; // 0x29418
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_191; // 0x29500
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_190; // 0x295e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_325; // 0x296d0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_81; // 0x29770
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_81; // 0x29790
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_89; // 0x297b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_142; // 0x298b8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_189; // 0x29978
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_188; // 0x29a60
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_187; // 0x29b48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_324; // 0x29c30
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_80; // 0x29cd0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_80; // 0x29cf0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_88; // 0x29d10
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_141; // 0x29e18
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_186; // 0x29ed8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_185; // 0x29fc0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_184; // 0x2a0a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_323; // 0x2a190
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_79; // 0x2a230
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_79; // 0x2a250
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_87; // 0x2a270
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_140; // 0x2a378
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_183; // 0x2a438
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_182; // 0x2a520
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_181; // 0x2a608
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_322; // 0x2a6f0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_78; // 0x2a790
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_78; // 0x2a7b0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_86; // 0x2a7d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_139; // 0x2a8d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_180; // 0x2a998
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_179; // 0x2aa80
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_178; // 0x2ab68
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_321; // 0x2ac50
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_77; // 0x2acf0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_77; // 0x2ad10
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_85; // 0x2ad30
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_138; // 0x2ae38
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_177; // 0x2aef8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_176; // 0x2afe0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_497; // 0x2b0c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_496; // 0x2b148
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_175; // 0x2b1c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_123; // 0x2b2b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_122; // 0x2b378
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_320; // 0x2b440
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_76; // 0x2b4e0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_76; // 0x2b500
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_84; // 0x2b520
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_137; // 0x2b628
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_174; // 0x2b6e8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_173; // 0x2b7d0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_172; // 0x2b8b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_319; // 0x2b9a0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_75; // 0x2ba40
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_75; // 0x2ba60
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_83; // 0x2ba80
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_136; // 0x2bb88
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_171; // 0x2bc48
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_170; // 0x2bd30
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_318; // 0x2be18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_495; // 0x2beb8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_317; // 0x2bf38
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_74; // 0x2bfd8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_74; // 0x2bff8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_82; // 0x2c018
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_135; // 0x2c120
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_494; // 0x2c1e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_493; // 0x2c260
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_169; // 0x2c2e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_121; // 0x2c3c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_120; // 0x2c490
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_168; // 0x2c558
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_167; // 0x2c640
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_166; // 0x2c728
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_316; // 0x2c810
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_73; // 0x2c8b0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_73; // 0x2c8d0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_81; // 0x2c8f0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_134; // 0x2c9f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_165; // 0x2cab8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_164; // 0x2cba0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_163; // 0x2cc88
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_315; // 0x2cd70
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_72; // 0x2ce10
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_72; // 0x2ce30
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_80; // 0x2ce50
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_133; // 0x2cf58
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_162; // 0x2d018
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_161; // 0x2d100
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_160; // 0x2d1e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_314; // 0x2d2d0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_71; // 0x2d370
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_71; // 0x2d390
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_79; // 0x2d3b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_132; // 0x2d4b8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_159; // 0x2d578
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_158; // 0x2d660
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_492; // 0x2d748
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_491; // 0x2d7c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_157; // 0x2d848
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_119; // 0x2d930
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_118; // 0x2d9f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_313; // 0x2dac0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_70; // 0x2db60
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_70; // 0x2db80
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_78; // 0x2dba0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_131; // 0x2dca8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_156; // 0x2dd68
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_155; // 0x2de50
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_312; // 0x2df38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_490; // 0x2dfd8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_311; // 0x2e058
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_69; // 0x2e0f8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_69; // 0x2e118
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_77; // 0x2e138
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_130; // 0x2e240
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_154; // 0x2e300
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_153; // 0x2e3e8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_152; // 0x2e4d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_310; // 0x2e5b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_489; // 0x2e658
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_309; // 0x2e6d8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_68; // 0x2e778
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_68; // 0x2e798
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_76; // 0x2e7b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_129; // 0x2e8c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_488; // 0x2e980
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_487; // 0x2ea00
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_151; // 0x2ea80
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_117; // 0x2eb68
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_116; // 0x2ec30
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_128; // 0x2ecf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_486; // 0x2edb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_485; // 0x2ee38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_484; // 0x2eeb8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_150; // 0x2ef38
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_115; // 0x2f020
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_114; // 0x2f0e8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_149; // 0x2f1b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_113; // 0x2f298
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_148; // 0x2f360
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_127; // 0x2f448
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_483; // 0x2f508
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_308; // 0x2f588
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_482; // 0x2f628
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_112; // 0x2f6a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_481; // 0x2f770
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_480; // 0x2f7f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_111; // 0x2f870
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_110; // 0x2f938
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_147; // 0x2fa00
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_109; // 0x2fae8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_108; // 0x2fbb0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_107; // 0x2fc78
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_106; // 0x2fd40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_105; // 0x2fe08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_146; // 0x2fed0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_126; // 0x2ffb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_479; // 0x30078
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_307; // 0x300f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_478; // 0x30198
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_104; // 0x30218
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_477; // 0x302e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_476; // 0x30360
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_103; // 0x303e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_102; // 0x304a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_145; // 0x30570
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_101; // 0x30658
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_100; // 0x30720
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_99; // 0x307e8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_98; // 0x308b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_97; // 0x30978
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_70; // 0x30a40
	FAnimNode_StateResult AnimGraphNode_StateResult_23; // 0x30af0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x30b20
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_69; // 0x30b48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_306; // 0x30bf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_475; // 0x30c98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_474; // 0x30d18
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_305; // 0x30d98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_473; // 0x30e38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_472; // 0x30eb8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_304; // 0x30f38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_471; // 0x30fd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_470; // 0x31058
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_303; // 0x310d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_469; // 0x31178
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_468; // 0x311f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_68; // 0x31278
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_302; // 0x31328
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_467; // 0x313c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_466; // 0x31448
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_301; // 0x314c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_465; // 0x31568
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_464; // 0x315e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_300; // 0x31668
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_463; // 0x31708
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_462; // 0x31788
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_299; // 0x31808
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_461; // 0x318a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_460; // 0x31928
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_125; // 0x319a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_459; // 0x31a68
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_67; // 0x31ae8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_298; // 0x31b98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_458; // 0x31c38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_457; // 0x31cb8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_297; // 0x31d38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_456; // 0x31dd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_455; // 0x31e58
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_296; // 0x31ed8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_454; // 0x31f78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_453; // 0x31ff8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_295; // 0x32078
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_452; // 0x32118
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_451; // 0x32198
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_124; // 0x32218
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_450; // 0x322d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_449; // 0x32358
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_294; // 0x323d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_448; // 0x32478
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_123; // 0x324f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_66; // 0x325b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_293; // 0x32668
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_447; // 0x32708
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_446; // 0x32788
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_292; // 0x32808
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_445; // 0x328a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_444; // 0x32928
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_291; // 0x329a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_443; // 0x32a48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_442; // 0x32ac8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_290; // 0x32b48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_441; // 0x32be8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_440; // 0x32c68
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_65; // 0x32ce8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_289; // 0x32d98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_439; // 0x32e38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_438; // 0x32eb8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_288; // 0x32f38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_437; // 0x32fd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_436; // 0x33058
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_287; // 0x330d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_435; // 0x33178
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_434; // 0x331f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_286; // 0x33278
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_433; // 0x33318
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_432; // 0x33398
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_64; // 0x33418
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_285; // 0x334c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_431; // 0x33568
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_430; // 0x335e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_284; // 0x33668
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_429; // 0x33708
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_428; // 0x33788
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_283; // 0x33808
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_427; // 0x338a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_426; // 0x33928
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_282; // 0x339a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_425; // 0x33a48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_424; // 0x33ac8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_63; // 0x33b48
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_62; // 0x33bf8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_281; // 0x33ca8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_423; // 0x33d48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_422; // 0x33dc8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_280; // 0x33e48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_421; // 0x33ee8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_420; // 0x33f68
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_279; // 0x33fe8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_419; // 0x34088
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_418; // 0x34108
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_278; // 0x34188
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_417; // 0x34228
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_416; // 0x342a8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_67; // 0x34328
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_75; // 0x34348
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_67; // 0x34450
	FAnimNode_LegIK AnimGraphNode_LegIK_25; // 0x34470
	FAnimNode_StateResult AnimGraphNode_StateResult_22; // 0x34568
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_277; // 0x34598
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_144; // 0x34638
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_276; // 0x34720
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_143; // 0x347c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_142; // 0x348a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_141; // 0x34990
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_275; // 0x34a78
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_140; // 0x34b18
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_139; // 0x34c00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_274; // 0x34ce8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_273; // 0x34d88
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_138; // 0x34e28
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_137; // 0x34f10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_415; // 0x34ff8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_272; // 0x35078
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_414; // 0x35118
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_122; // 0x35198
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_136; // 0x35258
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_61; // 0x35340
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_135; // 0x353f0
	FAnimNode_StateResult AnimGraphNode_StateResult_21; // 0x354d8
	FAnimNode_LegIK AnimGraphNode_LegIK_24; // 0x35508
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_66; // 0x35600
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_413; // 0x35620
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_134; // 0x356a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_271; // 0x35788
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_66; // 0x35828
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_74; // 0x35848
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_121; // 0x35950
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_412; // 0x35a10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_411; // 0x35a90
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_133; // 0x35b10
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_96; // 0x35bf8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_95; // 0x35cc0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_94; // 0x35d88
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_93; // 0x35e50
	FAnimNode_LegIK AnimGraphNode_LegIK_23; // 0x35f18
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_65; // 0x36010
	FAnimNode_LegIK AnimGraphNode_LegIK_22; // 0x36030
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_64; // 0x36128
	FAnimNode_LegIK AnimGraphNode_LegIK_21; // 0x36148
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_132; // 0x36240
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_410; // 0x36328
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_409; // 0x363a8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_120; // 0x36428
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_73; // 0x364e8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_65; // 0x365f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_270; // 0x36610
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_131; // 0x366b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_408; // 0x36798
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_63; // 0x36818
	FAnimNode_LegIK AnimGraphNode_LegIK_20; // 0x36838
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_407; // 0x36930
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_119; // 0x369b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_406; // 0x36a70
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_130; // 0x36af0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_269; // 0x36bd8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_64; // 0x36c78
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_72; // 0x36c98
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_118; // 0x36da0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_405; // 0x36e60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_404; // 0x36ee0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_129; // 0x36f60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_92; // 0x37048
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_91; // 0x37110
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_403; // 0x371d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_128; // 0x37258
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_268; // 0x37340
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_63; // 0x373e0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_71; // 0x37400
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_117; // 0x37508
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_402; // 0x375c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_401; // 0x37648
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_127; // 0x376c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_90; // 0x377b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_89; // 0x37878
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_400; // 0x37940
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_126; // 0x379c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_267; // 0x37aa8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_399; // 0x37b48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_266; // 0x37bc8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_62; // 0x37c68
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_62; // 0x37c88
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_70; // 0x37ca8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_116; // 0x37db0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_398; // 0x37e70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_397; // 0x37ef0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_125; // 0x37f70
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_88; // 0x38058
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_87; // 0x38120
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_115; // 0x381e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_396; // 0x382a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_265; // 0x38328
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_395; // 0x383c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_394; // 0x38448
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_393; // 0x384c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_124; // 0x38548
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_86; // 0x38630
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_85; // 0x386f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_60; // 0x387c0
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0x38870
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x388a0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_59; // 0x388c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_264; // 0x38978
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_392; // 0x38a18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_391; // 0x38a98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_263; // 0x38b18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_390; // 0x38bb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_389; // 0x38c38
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_262; // 0x38cb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_388; // 0x38d58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_387; // 0x38dd8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_261; // 0x38e58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_386; // 0x38ef8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_385; // 0x38f78
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_58; // 0x38ff8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_260; // 0x390a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_384; // 0x39148
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_383; // 0x391c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_259; // 0x39248
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_382; // 0x392e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_381; // 0x39368
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_258; // 0x393e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_380; // 0x39488
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_379; // 0x39508
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_257; // 0x39588
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_378; // 0x39628
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_377; // 0x396a8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_114; // 0x39728
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_376; // 0x397e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_256; // 0x39868
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_375; // 0x39908
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_57; // 0x39988
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_255; // 0x39a38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_374; // 0x39ad8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_373; // 0x39b58
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_254; // 0x39bd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_372; // 0x39c78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_371; // 0x39cf8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_253; // 0x39d78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_370; // 0x39e18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_369; // 0x39e98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_252; // 0x39f18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_368; // 0x39fb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_367; // 0x3a038
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_187; // 0x3a0b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_113; // 0x3a0e0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_56; // 0x3a1a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_251; // 0x3a250
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_366; // 0x3a2f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_365; // 0x3a370
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_250; // 0x3a3f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_364; // 0x3a490
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_363; // 0x3a510
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_249; // 0x3a590
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_362; // 0x3a630
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_361; // 0x3a6b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_248; // 0x3a730
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_360; // 0x3a7d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_359; // 0x3a850
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_55; // 0x3a8d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_247; // 0x3a980
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_358; // 0x3aa20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_357; // 0x3aaa0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_246; // 0x3ab20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_356; // 0x3abc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_355; // 0x3ac40
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_245; // 0x3acc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_354; // 0x3ad60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_353; // 0x3ade0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_244; // 0x3ae60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_352; // 0x3af00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_351; // 0x3af80
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_54; // 0x3b000
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_243; // 0x3b0b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_350; // 0x3b150
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_349; // 0x3b1d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_242; // 0x3b250
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_348; // 0x3b2f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_347; // 0x3b370
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_241; // 0x3b3f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_346; // 0x3b490
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_345; // 0x3b510
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_240; // 0x3b590
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_344; // 0x3b630
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_343; // 0x3b6b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_53; // 0x3b730
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_239; // 0x3b7e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_342; // 0x3b880
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_341; // 0x3b900
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_238; // 0x3b980
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_340; // 0x3ba20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_339; // 0x3baa0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_237; // 0x3bb20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_338; // 0x3bbc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_337; // 0x3bc40
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_236; // 0x3bcc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_336; // 0x3bd60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_335; // 0x3bde0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_186; // 0x3be60
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_112; // 0x3be88
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_52; // 0x3bf48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_235; // 0x3bff8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_334; // 0x3c098
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_333; // 0x3c118
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_234; // 0x3c198
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_332; // 0x3c238
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_331; // 0x3c2b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_233; // 0x3c338
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_330; // 0x3c3d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_329; // 0x3c458
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_232; // 0x3c4d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_328; // 0x3c578
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_327; // 0x3c5f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_326; // 0x3c678
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_231; // 0x3c6f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_325; // 0x3c798
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_111; // 0x3c818
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_51; // 0x3c8d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_230; // 0x3c988
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_324; // 0x3ca28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_323; // 0x3caa8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_229; // 0x3cb28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_322; // 0x3cbc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_321; // 0x3cc48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_228; // 0x3ccc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_320; // 0x3cd68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_319; // 0x3cde8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_227; // 0x3ce68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_318; // 0x3cf08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_317; // 0x3cf88
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_50; // 0x3d008
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_226; // 0x3d0b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_316; // 0x3d158
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_315; // 0x3d1d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_225; // 0x3d258
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_314; // 0x3d2f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_313; // 0x3d378
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_224; // 0x3d3f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_312; // 0x3d498
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_311; // 0x3d518
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_223; // 0x3d598
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_310; // 0x3d638
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_309; // 0x3d6b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_185; // 0x3d738
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_110; // 0x3d760
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_49; // 0x3d820
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_222; // 0x3d8d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_308; // 0x3d970
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_307; // 0x3d9f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_221; // 0x3da70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_306; // 0x3db10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_305; // 0x3db90
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_220; // 0x3dc10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_304; // 0x3dcb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_303; // 0x3dd30
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_219; // 0x3ddb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_302; // 0x3de50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_301; // 0x3ded0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_48; // 0x3df50
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_47; // 0x3e000
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_218; // 0x3e0b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_300; // 0x3e150
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_299; // 0x3e1d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_217; // 0x3e250
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_298; // 0x3e2f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_297; // 0x3e370
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_216; // 0x3e3f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_296; // 0x3e490
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_295; // 0x3e510
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_215; // 0x3e590
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_294; // 0x3e630
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_293; // 0x3e6b0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_61; // 0x3e730
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_69; // 0x3e750
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_61; // 0x3e858
	FAnimNode_LegIK AnimGraphNode_LegIK_19; // 0x3e878
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0x3e970
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_123; // 0x3e9a0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_122; // 0x3ea88
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_109; // 0x3eb70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_292; // 0x3ec30
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_214; // 0x3ecb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_291; // 0x3ed50
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_121; // 0x3edd0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_120; // 0x3eeb8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_119; // 0x3efa0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_118; // 0x3f088
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_117; // 0x3f170
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_116; // 0x3f258
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_108; // 0x3f340
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_290; // 0x3f400
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_213; // 0x3f480
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_289; // 0x3f520
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_115; // 0x3f5a0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_114; // 0x3f688
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_113; // 0x3f770
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_46; // 0x3f858
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_112; // 0x3f908
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x3f9f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_111; // 0x3fa20
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_110; // 0x3fb08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_109; // 0x3fbf0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_212; // 0x3fcd8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_60; // 0x3fd78
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_60; // 0x3fd98
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_68; // 0x3fdb8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_107; // 0x3fec0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_108; // 0x3ff80
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_107; // 0x40068
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_106; // 0x40150
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_211; // 0x40238
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_59; // 0x402d8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_59; // 0x402f8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_67; // 0x40318
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_106; // 0x40420
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_105; // 0x404e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_104; // 0x405c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_288; // 0x406b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_287; // 0x40730
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_103; // 0x407b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_84; // 0x40898
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_83; // 0x40960
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_210; // 0x40a28
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_58; // 0x40ac8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_58; // 0x40ae8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_66; // 0x40b08
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_105; // 0x40c10
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_102; // 0x40cd0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_101; // 0x40db8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_286; // 0x40ea0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_285; // 0x40f20
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_100; // 0x40fa0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_82; // 0x41088
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_81; // 0x41150
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_209; // 0x41218
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_57; // 0x412b8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_57; // 0x412d8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_65; // 0x412f8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_104; // 0x41400
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_99; // 0x414c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_98; // 0x415a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_208; // 0x41690
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_284; // 0x41730
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_207; // 0x417b0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_56; // 0x41850
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_56; // 0x41870
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_64; // 0x41890
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_103; // 0x41998
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_283; // 0x41a58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_282; // 0x41ad8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_97; // 0x41b58
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_80; // 0x41c40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_79; // 0x41d08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_96; // 0x41dd0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_95; // 0x41eb8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_94; // 0x41fa0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_206; // 0x42088
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_55; // 0x42128
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_55; // 0x42148
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_63; // 0x42168
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_102; // 0x42270
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_93; // 0x42330
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_92; // 0x42418
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_91; // 0x42500
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_205; // 0x425e8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_54; // 0x42688
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_54; // 0x426a8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_62; // 0x426c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_101; // 0x427d0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_90; // 0x42890
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_89; // 0x42978
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_281; // 0x42a60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_280; // 0x42ae0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_88; // 0x42b60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_78; // 0x42c48
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_77; // 0x42d10
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_204; // 0x42dd8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_53; // 0x42e78
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_53; // 0x42e98
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_61; // 0x42eb8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_100; // 0x42fc0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_87; // 0x43080
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_86; // 0x43168
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_85; // 0x43250
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_203; // 0x43338
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_52; // 0x433d8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_52; // 0x433f8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_60; // 0x43418
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_99; // 0x43520
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_84; // 0x435e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_83; // 0x436c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_202; // 0x437b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_279; // 0x43850
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_201; // 0x438d0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_51; // 0x43970
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_51; // 0x43990
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_59; // 0x439b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_98; // 0x43ab8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_278; // 0x43b78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_277; // 0x43bf8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_82; // 0x43c78
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_76; // 0x43d60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_75; // 0x43e28
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_81; // 0x43ef0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_80; // 0x43fd8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_79; // 0x440c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_200; // 0x441a8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_50; // 0x44248
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_50; // 0x44268
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_58; // 0x44288
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_97; // 0x44390
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_78; // 0x44450
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_77; // 0x44538
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_76; // 0x44620
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_199; // 0x44708
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_49; // 0x447a8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_49; // 0x447c8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_57; // 0x447e8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_96; // 0x448f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_75; // 0x449b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_74; // 0x44a98
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_73; // 0x44b80
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_198; // 0x44c68
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_48; // 0x44d08
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_48; // 0x44d28
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_56; // 0x44d48
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_95; // 0x44e50
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_72; // 0x44f10
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_71; // 0x44ff8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_276; // 0x450e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_275; // 0x45160
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_70; // 0x451e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_74; // 0x452c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_73; // 0x45390
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_197; // 0x45458
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_47; // 0x454f8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_47; // 0x45518
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_55; // 0x45538
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_94; // 0x45640
	FAnimNode_LegIK AnimGraphNode_LegIK_18; // 0x45700
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_69; // 0x457f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_68; // 0x458e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_196; // 0x459c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_274; // 0x45a68
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_195; // 0x45ae8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_46; // 0x45b88
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_46; // 0x45ba8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_54; // 0x45bc8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_93; // 0x45cd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_273; // 0x45d90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_272; // 0x45e10
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_67; // 0x45e90
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_72; // 0x45f78
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_71; // 0x46040
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_92; // 0x46108
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_271; // 0x461c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_194; // 0x46248
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_270; // 0x462e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_269; // 0x46368
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_268; // 0x463e8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_66; // 0x46468
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_70; // 0x46550
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_69; // 0x46618
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_91; // 0x466e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_267; // 0x467a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_193; // 0x46820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_266; // 0x468c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_265; // 0x46940
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_264; // 0x469c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_65; // 0x46a40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_68; // 0x46b28
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_67; // 0x46bf0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_45; // 0x46cb8
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x46d68
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_44; // 0x46d98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_192; // 0x46e48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_263; // 0x46ee8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_262; // 0x46f68
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_191; // 0x46fe8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_261; // 0x47088
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_260; // 0x47108
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_190; // 0x47188
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_259; // 0x47228
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_258; // 0x472a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_189; // 0x47328
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_257; // 0x473c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_256; // 0x47448
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_43; // 0x474c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_188; // 0x47578
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_255; // 0x47618
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_254; // 0x47698
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_187; // 0x47718
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_253; // 0x477b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_252; // 0x47838
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_186; // 0x478b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_251; // 0x47958
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_250; // 0x479d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_185; // 0x47a58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_249; // 0x47af8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_248; // 0x47b78
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_90; // 0x47bf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_247; // 0x47cb8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_184; // 0x47d38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_246; // 0x47dd8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_42; // 0x47e58
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_183; // 0x47f08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_245; // 0x47fa8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_244; // 0x48028
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_182; // 0x480a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_243; // 0x48148
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_242; // 0x481c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_181; // 0x48248
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_241; // 0x482e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_240; // 0x48368
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_180; // 0x483e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_239; // 0x48488
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_238; // 0x48508
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_184; // 0x48588
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_89; // 0x485b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_41; // 0x48670
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_179; // 0x48720
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_237; // 0x487c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_236; // 0x48840
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_178; // 0x488c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_235; // 0x48960
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_234; // 0x489e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_177; // 0x48a60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_233; // 0x48b00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_232; // 0x48b80
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_176; // 0x48c00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_231; // 0x48ca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_230; // 0x48d20
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_40; // 0x48da0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_175; // 0x48e50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_229; // 0x48ef0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_228; // 0x48f70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_174; // 0x48ff0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_227; // 0x49090
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_226; // 0x49110
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_173; // 0x49190
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_225; // 0x49230
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_224; // 0x492b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_172; // 0x49330
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_223; // 0x493d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_222; // 0x49450
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_39; // 0x494d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_171; // 0x49580
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_221; // 0x49620
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_220; // 0x496a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_170; // 0x49720
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_219; // 0x497c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_218; // 0x49840
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_169; // 0x498c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_217; // 0x49960
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_216; // 0x499e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_168; // 0x49a60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_215; // 0x49b00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_214; // 0x49b80
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_183; // 0x49c00
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_88; // 0x49c28
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_38; // 0x49ce8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_167; // 0x49d98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_213; // 0x49e38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_212; // 0x49eb8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_166; // 0x49f38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_211; // 0x49fd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_210; // 0x4a058
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_165; // 0x4a0d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_209; // 0x4a178
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_208; // 0x4a1f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_164; // 0x4a278
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_207; // 0x4a318
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_206; // 0x4a398
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_205; // 0x4a418
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_163; // 0x4a498
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_204; // 0x4a538
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_87; // 0x4a5b8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_37; // 0x4a678
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_162; // 0x4a728
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_203; // 0x4a7c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_202; // 0x4a848
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_161; // 0x4a8c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_201; // 0x4a968
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_200; // 0x4a9e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_160; // 0x4aa68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_199; // 0x4ab08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_198; // 0x4ab88
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_159; // 0x4ac08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_197; // 0x4aca8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_196; // 0x4ad28
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_158; // 0x4ada8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_36; // 0x4ae48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_157; // 0x4aef8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_195; // 0x4af98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_194; // 0x4b018
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_156; // 0x4b098
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_193; // 0x4b138
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_192; // 0x4b1b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_155; // 0x4b238
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_191; // 0x4b2d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_190; // 0x4b358
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_154; // 0x4b3d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_189; // 0x4b478
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_188; // 0x4b4f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_35; // 0x4b578
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_153; // 0x4b628
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_187; // 0x4b6c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_186; // 0x4b748
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_152; // 0x4b7c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_185; // 0x4b868
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_184; // 0x4b8e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_151; // 0x4b968
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_183; // 0x4ba08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_182; // 0x4ba88
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_150; // 0x4bb08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_181; // 0x4bba8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_180; // 0x4bc28
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_182; // 0x4bca8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_86; // 0x4bcd0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_34; // 0x4bd90
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_149; // 0x4be40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_179; // 0x4bee0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_178; // 0x4bf60
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_148; // 0x4bfe0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_177; // 0x4c080
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_176; // 0x4c100
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_147; // 0x4c180
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_175; // 0x4c220
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_174; // 0x4c2a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_146; // 0x4c320
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_173; // 0x4c3c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_172; // 0x4c440
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_33; // 0x4c4c0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_32; // 0x4c570
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_145; // 0x4c620
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_171; // 0x4c6c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_170; // 0x4c740
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_144; // 0x4c7c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_169; // 0x4c860
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_168; // 0x4c8e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_143; // 0x4c960
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_167; // 0x4ca00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_166; // 0x4ca80
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_142; // 0x4cb00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_165; // 0x4cba0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_164; // 0x4cc20
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_45; // 0x4cca0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_53; // 0x4ccc0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_45; // 0x4cdc8
	FAnimNode_LegIK AnimGraphNode_LegIK_17; // 0x4cde8
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x4cee0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_64; // 0x4cf10
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_63; // 0x4cff8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_85; // 0x4d0e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_163; // 0x4d1a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_141; // 0x4d220
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_162; // 0x4d2c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_62; // 0x4d340
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_61; // 0x4d428
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_60; // 0x4d510
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_59; // 0x4d5f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_58; // 0x4d6e0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_84; // 0x4d7c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_161; // 0x4d888
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_140; // 0x4d908
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_160; // 0x4d9a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_57; // 0x4da28
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_139; // 0x4db10
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_56; // 0x4dbb0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_55; // 0x4dc98
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_54; // 0x4dd80
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_53; // 0x4de68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_181; // 0x4df50
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_83; // 0x4df78
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_31; // 0x4e038
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_52; // 0x4e0e8
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x4e1d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_82; // 0x4e200
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_159; // 0x4e2c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_81; // 0x4e340
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_51; // 0x4e400
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_180; // 0x4e4e8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_80; // 0x4e510
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_50; // 0x4e5d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_179; // 0x4e6b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_79; // 0x4e6e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_49; // 0x4e7a0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_48; // 0x4e888
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_47; // 0x4e970
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_158; // 0x4ea58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_157; // 0x4ead8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_66; // 0x4eb58
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_65; // 0x4ec20
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_138; // 0x4ece8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_44; // 0x4ed88
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_44; // 0x4eda8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_52; // 0x4edc8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_78; // 0x4eed0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_46; // 0x4ef90
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_45; // 0x4f078
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_44; // 0x4f160
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_156; // 0x4f248
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_155; // 0x4f2c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_64; // 0x4f348
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_63; // 0x4f410
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_137; // 0x4f4d8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_43; // 0x4f578
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_43; // 0x4f598
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_51; // 0x4f5b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_77; // 0x4f6c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_43; // 0x4f780
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_42; // 0x4f868
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_41; // 0x4f950
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_136; // 0x4fa38
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_42; // 0x4fad8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_42; // 0x4faf8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_50; // 0x4fb18
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_76; // 0x4fc20
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_40; // 0x4fce0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_39; // 0x4fdc8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_38; // 0x4feb0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_135; // 0x4ff98
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_41; // 0x50038
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_41; // 0x50058
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_49; // 0x50078
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_75; // 0x50180
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_37; // 0x50240
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_178; // 0x50328
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_74; // 0x50350
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_36; // 0x50410
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_35; // 0x504f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_154; // 0x505e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_153; // 0x50660
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_34; // 0x506e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_62; // 0x507c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_61; // 0x50890
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_134; // 0x50958
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_40; // 0x509f8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_40; // 0x50a18
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_48; // 0x50a38
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_73; // 0x50b40
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_33; // 0x50c00
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_32; // 0x50ce8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_31; // 0x50dd0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_133; // 0x50eb8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_39; // 0x50f58
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_39; // 0x50f78
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_47; // 0x50f98
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_72; // 0x510a0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_30; // 0x51160
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_29; // 0x51248
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_132; // 0x51330
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_152; // 0x513d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_131; // 0x51450
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_38; // 0x514f0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_38; // 0x51510
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_46; // 0x51530
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_71; // 0x51638
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_151; // 0x516f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_150; // 0x51778
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_28; // 0x517f8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_60; // 0x518e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_59; // 0x519a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_27; // 0x51a70
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_26; // 0x51b58
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_25; // 0x51c40
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_130; // 0x51d28
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_37; // 0x51dc8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_37; // 0x51de8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_45; // 0x51e08
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_70; // 0x51f10
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_24; // 0x51fd0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_23; // 0x520b8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_22; // 0x521a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_129; // 0x52288
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_36; // 0x52328
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_36; // 0x52348
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_44; // 0x52368
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_69; // 0x52470
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_21; // 0x52530
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_20; // 0x52618
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_19; // 0x52700
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_128; // 0x527e8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_35; // 0x52888
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_35; // 0x528a8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_43; // 0x528c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_68; // 0x529d0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_18; // 0x52a90
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_17; // 0x52b78
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_16; // 0x52c60
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_127; // 0x52d48
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_34; // 0x52de8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_34; // 0x52e08
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_42; // 0x52e28
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_67; // 0x52f30
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_15; // 0x52ff0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_14; // 0x530d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_149; // 0x531c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_148; // 0x53240
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_13; // 0x532c0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_58; // 0x533a8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_57; // 0x53470
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_126; // 0x53538
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_33; // 0x535d8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_33; // 0x535f8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_41; // 0x53618
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_66; // 0x53720
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_12; // 0x537e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_11; // 0x538c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_125; // 0x539b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_147; // 0x53a50
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_124; // 0x53ad0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_32; // 0x53b70
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_32; // 0x53b90
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_40; // 0x53bb0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_65; // 0x53cb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_146; // 0x53d78
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_123; // 0x53df8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_145; // 0x53e98
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_64; // 0x53f18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_144; // 0x53fd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_143; // 0x54058
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_10; // 0x540d8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_56; // 0x541c0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_55; // 0x54288
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_142; // 0x54350
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_141; // 0x543d0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x54450
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_54; // 0x54538
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_53; // 0x54600
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_140; // 0x546c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_122; // 0x54748
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_139; // 0x547e8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_63; // 0x54868
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_138; // 0x54928
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_137; // 0x549a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x54a28
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_52; // 0x54b10
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_51; // 0x54bd8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_121; // 0x54ca0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x54d40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_136; // 0x54e28
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_120; // 0x54ea8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x54f48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_177; // 0x55030
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_62; // 0x55058
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_30; // 0x55118
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_135; // 0x551c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_134; // 0x55248
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x552c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_50; // 0x553b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_49; // 0x55478
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x55540
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_176; // 0x55570
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_175; // 0x55598
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_61; // 0x555c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_46; // 0x55680
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_45; // 0x556d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_48; // 0x55720
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_47; // 0x557e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_174; // 0x558b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_173; // 0x558d8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_60; // 0x55900
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_44; // 0x559c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_43; // 0x55a10
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_46; // 0x55a60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_45; // 0x55b28
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_42; // 0x55bf0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_41; // 0x55c40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_133; // 0x55c90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_132; // 0x55d10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_131; // 0x55d90
	FAnimNode_LegIK AnimGraphNode_LegIK_16; // 0x55e10
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_119; // 0x55f08
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_31; // 0x55fa8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_31; // 0x55fc8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_39; // 0x55fe8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_59; // 0x560f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_44; // 0x561b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_43; // 0x56278
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_40; // 0x56340
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_39; // 0x56390
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_130; // 0x563e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_129; // 0x56460
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_128; // 0x564e0
	FAnimNode_LegIK AnimGraphNode_LegIK_15; // 0x56560
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_118; // 0x56658
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_30; // 0x566f8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_30; // 0x56718
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_38; // 0x56738
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_58; // 0x56840
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_42; // 0x56900
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_41; // 0x569c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_127; // 0x56a90
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_57; // 0x56b10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_126; // 0x56bd0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_56; // 0x56c50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_125; // 0x56d10
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_55; // 0x56d90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_124; // 0x56e50
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_54; // 0x56ed0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_123; // 0x56f90
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_53; // 0x57010
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_122; // 0x570d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_52; // 0x57150
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_121; // 0x57210
	FAnimNode_LegIK AnimGraphNode_LegIK_14; // 0x57290
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_117; // 0x57388
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_120; // 0x57428
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_29; // 0x574a8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_29; // 0x574c8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_37; // 0x574e8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_51; // 0x575f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_40; // 0x576b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_39; // 0x57778
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_38; // 0x57840
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_37; // 0x57890
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_119; // 0x578e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_118; // 0x57960
	FAnimNode_LegIK AnimGraphNode_LegIK_13; // 0x579e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_116; // 0x57ad8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_117; // 0x57b78
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_28; // 0x57bf8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_28; // 0x57c18
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_36; // 0x57c38
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_50; // 0x57d40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_38; // 0x57e00
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_37; // 0x57ec8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_36; // 0x57f90
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_35; // 0x57fe0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_116; // 0x58030
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_115; // 0x580b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_115; // 0x58150
	FAnimNode_LegIK AnimGraphNode_LegIK_12; // 0x581d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_114; // 0x582c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_114; // 0x58368
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_27; // 0x583e8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_27; // 0x58408
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_35; // 0x58428
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_49; // 0x58530
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_36; // 0x585f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_35; // 0x586b8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_34; // 0x58780
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_33; // 0x587d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_113; // 0x58820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_112; // 0x588a0
	FAnimNode_LegIK AnimGraphNode_LegIK_11; // 0x58920
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_113; // 0x58a18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_111; // 0x58ab8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_26; // 0x58b38
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_26; // 0x58b58
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_34; // 0x58b78
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_48; // 0x58c80
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_34; // 0x58d40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_33; // 0x58e08
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_32; // 0x58ed0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_31; // 0x58f20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_110; // 0x58f70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_109; // 0x58ff0
	FAnimNode_LegIK AnimGraphNode_LegIK_10; // 0x59070
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_112; // 0x59168
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_108; // 0x59208
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_25; // 0x59288
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_25; // 0x592a8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_33; // 0x592c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_47; // 0x593d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_32; // 0x59490
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_31; // 0x59558
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_30; // 0x59620
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_29; // 0x59670
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_107; // 0x596c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_106; // 0x59740
	FAnimNode_LegIK AnimGraphNode_LegIK_9; // 0x597c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_111; // 0x598b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_105; // 0x59958
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_24; // 0x599d8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_24; // 0x599f8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_32; // 0x59a18
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_46; // 0x59b20
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_30; // 0x59be0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_29; // 0x59ca8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_28; // 0x59d70
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_27; // 0x59dc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_104; // 0x59e10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_103; // 0x59e90
	FAnimNode_LegIK AnimGraphNode_LegIK_8; // 0x59f10
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_110; // 0x5a008
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_102; // 0x5a0a8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_23; // 0x5a128
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_23; // 0x5a148
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_31; // 0x5a168
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_45; // 0x5a270
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_28; // 0x5a330
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_27; // 0x5a3f8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_26; // 0x5a4c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_25; // 0x5a510
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_101; // 0x5a560
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_100; // 0x5a5e0
	FAnimNode_LegIK AnimGraphNode_LegIK_7; // 0x5a660
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_109; // 0x5a758
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_99; // 0x5a7f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_22; // 0x5a878
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_22; // 0x5a898
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_30; // 0x5a8b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_44; // 0x5a9c0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_26; // 0x5aa80
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_25; // 0x5ab48
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_24; // 0x5ac10
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_23; // 0x5ac60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_98; // 0x5acb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_97; // 0x5ad30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_96; // 0x5adb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_95; // 0x5ae30
	FAnimNode_LegIK AnimGraphNode_LegIK_6; // 0x5aeb0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_108; // 0x5afa8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_94; // 0x5b048
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_107; // 0x5b0c8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_21; // 0x5b168
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_21; // 0x5b188
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_29; // 0x5b1a8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_43; // 0x5b2b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_24; // 0x5b370
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_23; // 0x5b438
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_22; // 0x5b500
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_21; // 0x5b550
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_93; // 0x5b5a0
	FAnimNode_LegIK AnimGraphNode_LegIK_5; // 0x5b620
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_106; // 0x5b718
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_92; // 0x5b7b8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_20; // 0x5b838
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_20; // 0x5b858
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_28; // 0x5b878
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_42; // 0x5b980
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_22; // 0x5ba40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_21; // 0x5bb08
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_20; // 0x5bbd0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_19; // 0x5bc20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_91; // 0x5bc70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_90; // 0x5bcf0
	FAnimNode_LegIK AnimGraphNode_LegIK_4; // 0x5bd70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_105; // 0x5be68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_89; // 0x5bf08
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_19; // 0x5bf88
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_19; // 0x5bfa8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_27; // 0x5bfc8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_41; // 0x5c0d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_20; // 0x5c190
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_19; // 0x5c258
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_18; // 0x5c320
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_17; // 0x5c370
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_88; // 0x5c3c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_40; // 0x5c440
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_87; // 0x5c500
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_104; // 0x5c580
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_86; // 0x5c620
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_85; // 0x5c6a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_103; // 0x5c720
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_84; // 0x5c7c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_16; // 0x5c840
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_15; // 0x5c890
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_18; // 0x5c8e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_17; // 0x5c9a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_83; // 0x5ca70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_102; // 0x5caf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_82; // 0x5cb90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_81; // 0x5cc10
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_101; // 0x5cc90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_80; // 0x5cd30
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_14; // 0x5cdb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_13; // 0x5ce00
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_39; // 0x5ce50
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_16; // 0x5cf10
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_15; // 0x5cfd8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_172; // 0x5d0a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_171; // 0x5d0c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_38; // 0x5d0f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_12; // 0x5d1b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_11; // 0x5d200
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_14; // 0x5d250
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_13; // 0x5d318
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_37; // 0x5d3e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_79; // 0x5d4a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_100; // 0x5d520
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_78; // 0x5d5c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_77; // 0x5d640
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_99; // 0x5d6c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_76; // 0x5d760
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_10; // 0x5d7e0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_9; // 0x5d830
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_12; // 0x5d880
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_11; // 0x5d948
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_75; // 0x5da10
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_98; // 0x5da90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_74; // 0x5db30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_73; // 0x5dbb0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_97; // 0x5dc30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_72; // 0x5dcd0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_8; // 0x5dd50
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_7; // 0x5dda0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_36; // 0x5ddf0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_10; // 0x5deb0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_9; // 0x5df78
	FAnimNode_Slot AnimGraphNode_Slot_26; // 0x5e040
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_96; // 0x5e088
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_170; // 0x5e128
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_169; // 0x5e150
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_35; // 0x5e178
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_6; // 0x5e238
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_5; // 0x5e288
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_8; // 0x5e2d8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_7; // 0x5e3a0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_29; // 0x5e468
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x5e518
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_71; // 0x5e548
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x5e5c8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_3; // 0x5e5f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_95; // 0x5e6a8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_44; // 0x5e748
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_168; // 0x5e8a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_167; // 0x5e8c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_94; // 0x5e8f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_28; // 0x5e990
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_70; // 0x5ea40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_69; // 0x5eac0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_68; // 0x5eb40
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_34; // 0x5ebc0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_27; // 0x5ec80
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_166; // 0x5ed30
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_165; // 0x5ed58
	FAnimNode_Slot AnimGraphNode_Slot_25; // 0x5ed80
	FAnimNode_Slot AnimGraphNode_Slot_24; // 0x5edc8
	FAnimNode_Slot AnimGraphNode_Slot_23; // 0x5ee10
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_164; // 0x5ee58
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_18; // 0x5ee80
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_18; // 0x5eea0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_26; // 0x5eec0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_25; // 0x5efc8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_24; // 0x5f0d0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_43; // 0x5f1d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_42; // 0x5f330
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_23; // 0x5f488
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_22; // 0x5f590
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_93; // 0x5f698
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_41; // 0x5f738
	FAnimNode_LegIK AnimGraphNode_LegIK_3; // 0x5f890
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_26; // 0x5f988
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x5fa38
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_163; // 0x5fb20
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_40; // 0x5fb48
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_4; // 0x5fca0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_92; // 0x5fe80
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_162; // 0x5ff20
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_39; // 0x5ff48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_161; // 0x600a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_160; // 0x600c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_159; // 0x600f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_158; // 0x60118
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_157; // 0x60140
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_156; // 0x60168
	FAnimNode_Slot AnimGraphNode_Slot_22; // 0x60190
	FAnimNode_Slot AnimGraphNode_Slot_21; // 0x601d8
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_25; // 0x60220
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_155; // 0x603b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_91; // 0x603d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_90; // 0x60478
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_3; // 0x60520
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_154; // 0x60700
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_17; // 0x60728
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_24; // 0x60748
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_23; // 0x608d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_153; // 0x60a68
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_89; // 0x60a90
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_25; // 0x60b30
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_22; // 0x60be0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_21; // 0x60d70
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_152; // 0x60f00
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_151; // 0x60f28
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_12; // 0x60f50
	FAnimNode_Root AnimGraphNode_Root; // 0x60ff0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_24; // 0x61020
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_11; // 0x610d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_150; // 0x61170
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_149; // 0x61198
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_20; // 0x611c0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_19; // 0x61350
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_148; // 0x614e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_88; // 0x61508
	FAnimNode_Fabrik AnimGraphNode_Fabrik_5; // 0x615b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_147; // 0x61740
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_16; // 0x61768
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_17; // 0x61788
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_87; // 0x617a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_146; // 0x61848
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_86; // 0x61870
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_145; // 0x61910
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_144; // 0x61938
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_38; // 0x61960
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_143; // 0x61ab8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_85; // 0x61ae0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_37; // 0x61b80
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_36; // 0x61cd8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_23; // 0x61e30
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_33; // 0x61ee0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_67; // 0x61fa0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_84; // 0x62020
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_32; // 0x620c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_66; // 0x62180
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_83; // 0x62200
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_31; // 0x622a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_65; // 0x62360
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_82; // 0x623e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_81; // 0x62480
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_22; // 0x62520
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_30; // 0x625d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_64; // 0x62690
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_80; // 0x62710
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_29; // 0x627b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_63; // 0x62870
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_79; // 0x628f0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_28; // 0x62990
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_62; // 0x62a50
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_78; // 0x62ad0
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_10; // 0x62b70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_77; // 0x62c10
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_27; // 0x62cb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_61; // 0x62d70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_76; // 0x62df0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_75; // 0x62e90
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_142; // 0x62f30
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_141; // 0x62f58
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_140; // 0x62f80
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_139; // 0x62fa8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_138; // 0x62fd0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_137; // 0x62ff8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_35; // 0x63020
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_136; // 0x63178
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_135; // 0x631a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_134; // 0x631c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_133; // 0x631f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_132; // 0x63218
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_131; // 0x63240
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_130; // 0x63268
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_129; // 0x63290
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_34; // 0x632b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_128; // 0x63410
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_127; // 0x63438
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_26; // 0x63460
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_60; // 0x63520
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_74; // 0x635a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_126; // 0x63640
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_125; // 0x63668
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_73; // 0x63690
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_59; // 0x63730
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_58; // 0x637b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_72; // 0x63830
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_57; // 0x638d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_56; // 0x63950
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_71; // 0x639d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_55; // 0x63a70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_54; // 0x63af0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_70; // 0x63b70
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_6; // 0x63c10
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_69; // 0x63cd8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_21; // 0x63d78
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_124; // 0x63e28
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_123; // 0x63e50
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_122; // 0x63e78
	FAnimNode_Slot AnimGraphNode_Slot_20; // 0x63ea0
	FAnimNode_Slot AnimGraphNode_Slot_19; // 0x63ee8
	FAnimNode_Slot AnimGraphNode_Slot_18; // 0x63f30
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_20; // 0x63f78
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_121; // 0x64028
	FAnimNode_Slot AnimGraphNode_Slot_17; // 0x64050
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_53; // 0x64098
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_52; // 0x64118
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_68; // 0x64198
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_67; // 0x64238
	FAnimNode_Slot AnimGraphNode_Slot_16; // 0x642d8
	FAnimNode_Slot AnimGraphNode_Slot_15; // 0x64320
	FAnimNode_Slot AnimGraphNode_Slot_14; // 0x64368
	FAnimNode_Slot AnimGraphNode_Slot_13; // 0x643b0
	FAnimNode_Slot AnimGraphNode_Slot_12; // 0x643f8
	FAnimNode_Slot AnimGraphNode_Slot_11; // 0x64440
	FAnimNode_Slot AnimGraphNode_Slot_10; // 0x64488
	FAnimNode_Slot AnimGraphNode_Slot_9; // 0x644d0
	FAnimNode_Slot AnimGraphNode_Slot_8; // 0x64518
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_33; // 0x64560
	FAnimNode_LegIK AnimGraphNode_LegIK_2; // 0x646b8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_16; // 0x647b0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_15; // 0x647d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_25; // 0x647f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_120; // 0x648b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_119; // 0x648d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_66; // 0x64900
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_118; // 0x649a0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_21; // 0x649c8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_32; // 0x64ad0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_117; // 0x64c28
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive_3; // 0x64c50
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_24; // 0x64d20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_51; // 0x64de0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_50; // 0x64e60
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_31; // 0x64ee0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_65; // 0x65038
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_64; // 0x650d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_116; // 0x65178
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_115; // 0x651a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_114; // 0x651c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_113; // 0x651f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_112; // 0x65218
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_23; // 0x65240
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_30; // 0x65300
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_63; // 0x65458
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_49; // 0x654f8
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_9; // 0x65578
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_48; // 0x65618
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_19; // 0x65698
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_111; // 0x65748
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_18; // 0x65770
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_22; // 0x65820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_47; // 0x658e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_62; // 0x65960
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_21; // 0x65a00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_46; // 0x65ac0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_61; // 0x65b40
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_20; // 0x65be0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_45; // 0x65ca0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_60; // 0x65d20
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_110; // 0x65dc0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_29; // 0x65de8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_109; // 0x65f40
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_108; // 0x65f68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_107; // 0x65f90
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_106; // 0x65fb8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_105; // 0x65fe0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_104; // 0x66008
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_28; // 0x66030
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_103; // 0x66188
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_59; // 0x661b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_102; // 0x66250
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_17; // 0x66278
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_18; // 0x66328
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_17; // 0x664b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_101; // 0x66648
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_100; // 0x66670
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_99; // 0x66698
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_16; // 0x666c0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_15; // 0x66850
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_98; // 0x669e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_58; // 0x66a08
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_57; // 0x66aa8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_27; // 0x66b48
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_19; // 0x66ca0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_16; // 0x66d60
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_18; // 0x66e10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_44; // 0x66ed0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_56; // 0x66f50
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_17; // 0x66ff0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_43; // 0x670b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_55; // 0x67130
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_16; // 0x671d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_42; // 0x67290
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_54; // 0x67310
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_53; // 0x673b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_15; // 0x67450
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_41; // 0x67510
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_52; // 0x67590
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_14; // 0x67630
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_40; // 0x676f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_51; // 0x67770
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_50; // 0x67810
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_8; // 0x678b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_97; // 0x67950
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_96; // 0x67978
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_95; // 0x679a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_94; // 0x679c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_93; // 0x679f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_92; // 0x67a18
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_91; // 0x67a40
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_90; // 0x67a68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_89; // 0x67a90
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_88; // 0x67ab8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_14; // 0x67ae0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_15; // 0x67b00
	FAnimNode_Fabrik AnimGraphNode_Fabrik_4; // 0x67b20
	FAnimNode_Fabrik AnimGraphNode_Fabrik_3; // 0x67cb0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_49; // 0x67e40
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_26; // 0x67ee0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_87; // 0x68038
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_86; // 0x68060
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_25; // 0x68088
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_7; // 0x681e0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_15; // 0x68280
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_39; // 0x68330
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_38; // 0x683b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_37; // 0x68430
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_5; // 0x684b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_36; // 0x68578
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_14; // 0x685f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_35; // 0x686a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34; // 0x68728
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_13; // 0x687a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_85; // 0x68868
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_24; // 0x68890
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_48; // 0x689e8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_23; // 0x68a88
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_84; // 0x68be0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_83; // 0x68c08
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_82; // 0x68c30
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_12; // 0x68c58
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_47; // 0x68d18
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_22; // 0x68db8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_81; // 0x68f10
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_13; // 0x68f38
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_80; // 0x68fe8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0x69010
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_79; // 0x69090
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_78; // 0x690b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_77; // 0x690e0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_21; // 0x69108
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_76; // 0x69260
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_46; // 0x69288
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x69328
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x693a8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_12; // 0x69470
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x69520
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0x695a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0x69620
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive; // 0x696a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x69768
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_45; // 0x697e8
	FAnimNode_RefPose AnimGraphNode_IdentityPose_3; // 0x69888
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x698a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_44; // 0x69920
	FAnimNode_RefPose AnimGraphNode_IdentityPose_2; // 0x699c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x699d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_43; // 0x69a58
	FAnimNode_RefPose AnimGraphNode_IdentityPose; // 0x69af8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_11; // 0x69b10
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_75; // 0x69bc0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_14; // 0x69be8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_14; // 0x69d78
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_42; // 0x69d98
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_20; // 0x69e38
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_74; // 0x69f90
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_73; // 0x69fb8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_72; // 0x69fe0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_19; // 0x6a008
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_71; // 0x6a160
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_41; // 0x6a188
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x6a228
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_18; // 0x6a2a8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x6a400
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_70; // 0x6a4c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_69; // 0x6a4f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_68; // 0x6a518
	FAnimNode_LegIK AnimGraphNode_LegIK; // 0x6a540
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_20; // 0x6a638
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_13; // 0x6a740
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_19; // 0x6a760
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_2; // 0x6a870
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_18; // 0x6aa50
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK; // 0x6ab60
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_13; // 0x6ad40
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_67; // 0x6ad60
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_17; // 0x6ad88
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_10; // 0x6aee0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x6af90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x6b010
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x6b090
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_40; // 0x6b110
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_16; // 0x6b1b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_66; // 0x6b308
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_13; // 0x6b330
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_39; // 0x6b4c0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_9; // 0x6b560
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_38; // 0x6b610
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_65; // 0x6b6b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_64; // 0x6b6d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_63; // 0x6b700
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_62; // 0x6b728
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_12; // 0x6b750
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_37; // 0x6b8e0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_61; // 0x6b980
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_60; // 0x6b9a8
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_11; // 0x6b9d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_36; // 0x6bb60
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_59; // 0x6bc00
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_58; // 0x6bc28
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_57; // 0x6bc50
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x6bc78
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_10; // 0x6bd40
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_35; // 0x6bed0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_56; // 0x6bf70
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_55; // 0x6bf98
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_15; // 0x6bfc0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_34; // 0x6c118
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_54; // 0x6c1b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_53; // 0x6c1e0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_9; // 0x6c208
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_33; // 0x6c398
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_52; // 0x6c438
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_51; // 0x6c460
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x6c488
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_8; // 0x6c550
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_50; // 0x6c600
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_17; // 0x6c628
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_12; // 0x6c730
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_49; // 0x6c750
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_12; // 0x6c778
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_32; // 0x6c798
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x6c838
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_31; // 0x6c8b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_30; // 0x6c958
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_6; // 0x6c9f8
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_5; // 0x6ca98
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_4; // 0x6cb38
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_14; // 0x6cbd8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_48; // 0x6cd30
	FAnimNode_CopyBone AnimGraphNode_CopyBone_8; // 0x6cd58
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_11; // 0x6ce48
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_13; // 0x6ce68
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_11; // 0x6cfc0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_47; // 0x6cfe0
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_3; // 0x6d008
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_10; // 0x6d0a8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_10; // 0x6d0c8
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph_2; // 0x6d0e8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_12; // 0x6d188
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_29; // 0x6d2e0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_46; // 0x6d380
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_11; // 0x6d3a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_45; // 0x6d468
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_44; // 0x6d490
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_10; // 0x6d4b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_43; // 0x6d578
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_28; // 0x6d5a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x6d640
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_9; // 0x6d6c0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_16; // 0x6d6e0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_15; // 0x6d7e8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_9; // 0x6d8f0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_11; // 0x6d910
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_42; // 0x6da68
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_10; // 0x6da90
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_27; // 0x6dbe8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x6dc88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x6dd08
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_26; // 0x6dd88
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_41; // 0x6de28
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_9; // 0x6de50
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_40; // 0x6dfa8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_25; // 0x6dfd0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_39; // 0x6e070
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_38; // 0x6e098
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_8; // 0x6e0c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_37; // 0x6e218
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x6e240
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x6e268
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x6e290
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x6e2b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x6e2e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x6e308
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x6e330
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_4; // 0x6e358
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_24; // 0x6e3a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x6e448
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive_2; // 0x6e530
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_3; // 0x6e600
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x6e650
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x6e680
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x6e700
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_23; // 0x6e780
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_22; // 0x6e820
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x6e8c0
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x6e9a8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_2; // 0x6e9d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_21; // 0x6ea28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x6eac8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x6eb48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_20; // 0x6ebc8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_19; // 0x6ec68
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x6ed08
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive; // 0x6edf0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator; // 0x6eec0
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x6ef10
	FAnimNode_RefPose AnimGraphNode_LocalRefPose; // 0x6ef40
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x6ef58
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x6ef88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x6f038
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x6f060
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x6f088
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x6f0b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x6f0d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x6f100
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x6f128
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x6f150
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x6f178
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x6f1a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x6f1c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x6f1f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x6f218
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_8; // 0x6f298
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x6f428
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x6f458
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_7; // 0x6f4d8
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x6f668
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x6f698
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x6f6c8
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_6; // 0x6f748
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x6f8d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x6f908
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_5; // 0x6f988
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x6fb18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x6fb48
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_4; // 0x6fbc8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x6fd58
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_3; // 0x6fd88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x6ff18
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x6ff98
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x6ffc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x70078
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x700f8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_7; // 0x70140
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_36; // 0x70298
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_35; // 0x702c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_9; // 0x702e8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_14; // 0x703a8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8; // 0x704b0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_13; // 0x704d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_7; // 0x705d8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8; // 0x70688
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_34; // 0x706a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_33; // 0x706d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8; // 0x706f8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_12; // 0x707b8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7; // 0x708c0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_11; // 0x708e0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7; // 0x709e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_18; // 0x70a08
	FAnimNode_CopyBone AnimGraphNode_CopyBone_7; // 0x70aa8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7; // 0x70b98
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_32; // 0x70c58
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_31; // 0x70c80
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_17; // 0x70ca8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_6; // 0x70d48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_30; // 0x70df8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_29; // 0x70e20
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0x70e48
	FAnimNode_CopyBone AnimGraphNode_CopyBone_6; // 0x70f08
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6; // 0x70ff8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6; // 0x71018
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0x71038
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_28; // 0x710f8
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_2; // 0x71120
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_27; // 0x712b0
	FAnimNode_CopyBone AnimGraphNode_CopyBone_5; // 0x712d8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5; // 0x713c8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5; // 0x713e8
	FAnimNode_CopyBone AnimGraphNode_CopyBone_4; // 0x71408
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4; // 0x714f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4; // 0x71518
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_16; // 0x71538
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_26; // 0x715d8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0x71600
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_25; // 0x716c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_24; // 0x716e8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x71710
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x717d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_23; // 0x71818
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_22; // 0x71840
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_6; // 0x71868
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_21; // 0x719c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x719e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_20; // 0x71aa8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_15; // 0x71ad0
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x71b70
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_19; // 0x71bb8
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x71be0
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x71c28
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_18; // 0x71c70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_14; // 0x71c98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x71d38
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_13; // 0x71db8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x71e58
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_12; // 0x71ed8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_5; // 0x71f78
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_11; // 0x72028
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x720c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_10; // 0x72148
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x721e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0x72268
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0x72308
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_17; // 0x72460
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_16; // 0x72488
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_15; // 0x724b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_14; // 0x724d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0x72500
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_13; // 0x72658
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x72680
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_12; // 0x726c8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x726f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x72738
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x727d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_11; // 0x72878
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0x728a0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x729f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_10; // 0x72b50
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_9; // 0x72b78
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x72ba0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_4; // 0x72c40
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0x72cf0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0x72d18
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace; // 0x72d40
	FAnimNode_PoseSnapshot AnimGraphNode_PoseSnapshot_3; // 0x72ed0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x72f60
	FAnimNode_PoseSnapshot AnimGraphNode_PoseSnapshot_2; // 0x73010
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x730a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x73150
	FAnimNode_PoseSnapshot AnimGraphNode_PoseSnapshot; // 0x731f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x73280
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x732a8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_10; // 0x73368
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_9; // 0x73470
	FAnimNode_CopyBone AnimGraphNode_CopyBone_3; // 0x73578
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3; // 0x73668
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3; // 0x73688
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x736a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x73728
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x737c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x73848
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_8; // 0x73870
	FAnimNode_CopyBone AnimGraphNode_CopyBone_2; // 0x73978
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0x73a68
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x73a88
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_7; // 0x73aa8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_6; // 0x73bb0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_5; // 0x73cb8
	FAnimNode_Fabrik AnimGraphNode_Fabrik_2; // 0x73dc0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_4; // 0x73f50
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0x74058
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x74160
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x74268
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x743c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x743e8
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x74490
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x74620
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x74728
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x74750
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x747f0
	FAnimNode_CopyBone AnimGraphNode_CopyBone; // 0x74818
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x74908
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x74928
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x74948
	FAnimNode_LinkedAnimGraph AnimGraphNode_LinkedAnimGraph; // 0x749f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x74a98
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x74b38
	float __CustomProperty_WeightLoadFactor_FADAEE43489DFBCA1CE00D82F2A197CC; // 0x74b60
	EPrisonerStance __CustomProperty_Stance_F4B9317B4E715E265E0A97B6F0983BD6; // 0x74b64
	bool __CustomProperty_ShouldApplyArmsPitchCorrection_F4B9317B4E715E265E0A97B6F0983BD6; // 0x74b65
	float __CustomProperty_FirstPersonAimYawDelta_F4B9317B4E715E265E0A97B6F0983BD6; // 0x74b68
	float __CustomProperty_FirstPersonAimPitch_F4B9317B4E715E265E0A97B6F0983BD6; // 0x74b6c
	float __CustomProperty_RibcageLeanAngle_F4FC7282407696652FBBEF97327C88FB; // 0x74b70
	float __CustomProperty_Spine3LeanAngle_F4FC7282407696652FBBEF97327C88FB; // 0x74b74
	float __CustomProperty_Spine2LeanAngle_F4FC7282407696652FBBEF97327C88FB; // 0x74b78
	float __CustomProperty_Spine1LeanAngle_F4FC7282407696652FBBEF97327C88FB; // 0x74b7c
	float __CustomProperty_LeanAmount_F4FC7282407696652FBBEF97327C88FB; // 0x74b80
	EPrisonerStance __CustomProperty_Stance_C02CE809436FE44638743095A0E89557; // 0x74b84
	bool __CustomProperty_ShouldApplyArmsPitchCorrection_C02CE809436FE44638743095A0E89557; // 0x74b85
	float __CustomProperty_FirstPersonAimYawDelta_C02CE809436FE44638743095A0E89557; // 0x74b88
	float __CustomProperty_FirstPersonAimPitch_C02CE809436FE44638743095A0E89557; // 0x74b8c
	float __CustomProperty_RibcageLeanAngle_E36F94384712DBE79A8CAEB6A20F8F3E; // 0x74b90
	float __CustomProperty_Spine3LeanAngle_E36F94384712DBE79A8CAEB6A20F8F3E; // 0x74b94
	float __CustomProperty_Spine2LeanAngle_E36F94384712DBE79A8CAEB6A20F8F3E; // 0x74b98
	float __CustomProperty_Spine1LeanAngle_E36F94384712DBE79A8CAEB6A20F8F3E; // 0x74b9c
	float __CustomProperty_LeanAmount_E36F94384712DBE79A8CAEB6A20F8F3E; // 0x74ba0
	float __CustomProperty_RibcageLeanAngle_37E85B9A4B96D6BDEF5EEC8946C8679F; // 0x74ba4
	float __CustomProperty_Spine3LeanAngle_37E85B9A4B96D6BDEF5EEC8946C8679F; // 0x74ba8
	float __CustomProperty_Spine2LeanAngle_37E85B9A4B96D6BDEF5EEC8946C8679F; // 0x74bac
	float __CustomProperty_Spine1LeanAngle_37E85B9A4B96D6BDEF5EEC8946C8679F; // 0x74bb0
	float __CustomProperty_LeanAmount_37E85B9A4B96D6BDEF5EEC8946C8679F; // 0x74bb4
	FVector RightFootEffectorLocation; // 0x74bb8
	FVector LeftFootEffectorLocation; // 0x74bc4
	ABP_Prisoner_C* Prisoner; // 0x74bd0
	FTransform PelvisLockBoneTransform; // 0x74be0
	float LeanAmount; // 0x74c10
	FRandomStream RandomStream; // 0x74c14
	bool bShouldSkipStandWalkOrJogOrRunStart; // 0x74c1c
	bool ShouldTakePenisInHands; // 0x74c1d
	FVector RightHandEffectorLocation; // 0x74c20
	FVector LeftHandEffectorLocation; // 0x74c2c
	FRotator LeftHandRotation; // 0x74c38
	float PelvisLeanMultiplier; // 0x74c44
	float PelvisLeanAngle; // 0x74c48
	float ThighLeanAngle; // 0x74c4c
	float Spine1LeanAngle; // 0x74c50
	float Spine2LeanAngle; // 0x74c54
	float Spine3LeanAngle; // 0x74c58
	float RibcageLeanAngle; // 0x74c5c
	float FootIKLeanAngle; // 0x74c60
	float FootIKAlpha; // 0x74c64
};

struct UPlatformGameInstance : UGameInstance {
	FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0x1a8
	FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0x1b8
	FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0x1c8
	FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0x1d8
	FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0x1e8
	FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x1f8
	FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x208
	FMulticastInlineDelegate ApplicationRegisteredForRemoteNotificationsDelegate; // 0x218
	FMulticastInlineDelegate ApplicationRegisteredForUserNotificationsDelegate; // 0x228
	FMulticastInlineDelegate ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x238
	FMulticastInlineDelegate ApplicationReceivedRemoteNotificationDelegate; // 0x248
	FMulticastInlineDelegate ApplicationReceivedLocalNotificationDelegate; // 0x258
	FMulticastInlineDelegate ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x268
};

struct UPhysicsCollisionHandler : UObject {
	float ImpactThreshold; // 0x28
	float ImpactReFireDelay; // 0x2c
	USoundBase* DefaultImpactSound; // 0x30
	float LastImpactSoundTime; // 0x38
};

struct ULightComponent : ULightComponentBase {
	float Temperature; // 0x228
	float MaxDrawDistance; // 0x22c
	float MaxDistanceFadeRange; // 0x230
	char bUseTemperature : 1; // 0x234
	int32_t ShadowMapChannel; // 0x238
	float MinRoughness; // 0x240
	float SpecularScale; // 0x244
	float ShadowResolutionScale; // 0x248
	float ShadowBias; // 0x24c
	float ShadowSlopeBias; // 0x250
	float ShadowSharpen; // 0x254
	float ContactShadowLength; // 0x258
	char ContactShadowLengthInWS : 1; // 0x25c
	char InverseSquaredFalloff : 1; // 0x25c
	char CastTranslucentShadows : 1; // 0x25c
	char bCastShadowsFromCinematicObjectsOnly : 1; // 0x25c
	char bAffectDynamicIndirectLighting : 1; // 0x25c
	char bForceCachedShadowsForMovablePrimitives : 1; // 0x25c
	FLightingChannels LightingChannels; // 0x260
	UMaterialInterface* LightFunctionMaterial; // 0x268
	FVector LightFunctionScale; // 0x270
	UTextureLightProfile* IESTexture; // 0x280
	char bUseIESBrightness : 1; // 0x288
	float IESBrightnessScale; // 0x28c
	float LightFunctionFadeDistance; // 0x290
	float DisabledBrightness; // 0x294
	char bEnableLightShaftBloom : 1; // 0x298
	float BloomScale; // 0x29c
	float BloomThreshold; // 0x2a0
	float BloomMaxBrightness; // 0x2a4
	FColor BloomTint; // 0x2a8
	bool bUseRayTracedDistanceFieldShadows; // 0x2ac
	float RayStartOffsetDepthScale; // 0x2b0
};

struct UEndpointSubmix : USoundSubmixBase {
	FName EndpointType; // 0x38
	UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40
	UAudioEndpointSettingsBase* EndpointSettings; // 0x48
};

struct UPanelSlot : UVisual {
	UPanelWidget* Parent; // 0x28
	UWidget* Content; // 0x30
};

struct UFoliageAssetData : UAssetUserData {
	FFoliageGeneralData GeneralData; // 0x28
	FFoliageEffectsData EffectsData; // 0x38
	FFoliageAIPerceptionData AIPerceptionData; // 0x50
	FFoliageCanopyData CanopyData; // 0x54
};

struct AMissionDialogueManager : AActor {
	float _lineDurationModifier; // 0x23c
	float _delayBetweenDialogues; // 0x240
};

struct AVehicle2W : ADcxVehicle4W {
	TArray<UVehicle2WMountSlot*> _mountSlots; // 0x2c0
	float _maxDriveOrBoardAngle; // 0x338
	FRotator _evictMounteesAngle; // 0x33c
	FRuntimeFloatCurve _driverActionDifficultyVsSpeed; // 0x348
	FRuntimeFloatCurve _driverActionDifficultyVsGroundSlopeFactor; // 0x3d0
	FBoatParametersPerMovementPace _parametersPerMovementPace[0x4]; // 0x458
	EConZPxDominanceGroup _physicsDominanceGroup; // 0x4a8
	float _maxSpeedKmh; // 0x4ac
	bool _shouldApplyStabilization; // 0x4d4
	FVector _centerOfMassOffset; // 0x4d8
	float _angVelXDamping; // 0x4e4
	float _angVelYDamping; // 0x4e8
	float _angVelZDamping; // 0x4ec
	FTimerHandle _physicsConstraintStabilizationTimerHandle; // 0x4f8
	float _pushImpulseMagnitude; // 0x504
	UCurveFloat* _pushIntensityCurve; // 0x508
	float _pushDirectionRatioBetweenForwardAndUp; // 0x510
	float _maxDistanceToAllowThePush; // 0x514
	float _maxDistanceToAllowThePushStart; // 0x518
	float _pushStartAccelerationChange; // 0x51c
	float _pushStartSpeedThresholdKph; // 0x520
	float _maxVehicleVelocity; // 0x524
	float _maxSteerAngle; // 0x538
	float _steerLeanAngle; // 0x53c
	FRuntimeFloatCurve _steerLeanMultiplierVsSpeedKmh; // 0x540
	FRuntimeFloatCurve _maxSteerAngleVsSpeedKmh; // 0x5c8
	float _maxHealth; // 0x654
	float _engineBlockMaxHealth; // 0x65c
	float _autoHealthDrainThreshold; // 0x660
	float _autoHealthDrain; // 0x664
	FRepairableParams _repairableParams; // 0x668
	TArray<FVehicleDamagedEffectsParameters> _damagedEffects; // 0x6a0
	FName _damageMaterialParameterName; // 0x6c0
	UVehicleHitZoneManager* _hitZones; // 0x6c8
	uint32_t _vehiclePartsStateFlags; // 0x6d0
	float _activeHitTimeToLive; // 0x6d8
	FVehicleImpactEffects _impactEffects[0x5]; // 0x6e0
	UCurveFloat* ImpactDamageVsNormalImpulse; // 0x7f8
	FVehicleSpawnParameters _spawnParameters; // 0x810
	float _throttleRiseRate; // 0x844
	float _throttleFallRate; // 0x848
	float _brakeRiseRate; // 0x854
	float _brakeFallRate; // 0x858
	float _handbrakeRiseRate; // 0x864
	float _handbrakeFallRate; // 0x868
	float _steerRiseRate; // 0x874
	float _steerFallRate; // 0x878
	float _wheelieRiseRate; // 0x884
	float _wheelieFallRate; // 0x888
	FText _healthBarCaption; // 0x890
	UUserWidget* _mountSlotIndicatorsWidget; // 0x8a8
	AVehicleItemContainer* _itemContainerClass; // 0x8b0
	bool _shouldDropItemsWhenDestroyed; // 0x8b8
	AVehicleItemContainer* _itemContainer; // 0x8c0
	URadioComponent* _radioComponent; // 0x8f8
	UVehicleCameraStabilizerComponent* _cameraStabilizer; // 0x900
	bool _hasEngine; // 0x908
	float _engineIdleRpm; // 0x90c
	float _engineMaxRpm; // 0x910
	EVehicleEngineState _engineState; // 0x920
	float _engineStartViaIgnitionBaseDurationOverride; // 0x934
	float _engineStartViaMotionBaseDurationOverride; // 0x938
	float _engineTryStartDelayDuration; // 0x93c
	float _engineStallingForceMagnitude; // 0x944
	bool _canEngineBeStalledByAcceleration; // 0x9b0
	float _engineStallingByAccelerationSpeedThreshold; // 0x9b4
	float _engineStallingByAccelerationOccurrenceInterval; // 0x9b8
	UAkAudioEvent* _engineStallingByAccelerationAudioEvent; // 0x9c0
	TArray<float> _engineStallingByAccelerationAudioEventTriggerTimeRatios; // 0x9c8
	bool _canEngineBeStalledByUpShift; // 0x9d8
	float _engineStallingByUpShiftOccurrenceInterval; // 0x9dc
	UAkAudioEvent* _engineStallingByUpShiftAudioEvent; // 0x9e8
	TArray<float> _engineStallingByUpShiftAudioEventTriggerTimeRatios; // 0x9f0
	UAkAudioEvent* _engineStallingWhenStartingViaMotionAudioEvent; // 0xa00
	TArray<float> _engineStallingWhenStartingViaMotionAudioEventTriggerTimeRatios; // 0xa08
	bool _hasFuel; // 0xa18
	UGameResourceType* _fuelResourceType; // 0xa20
	float _maxFuelAmount; // 0xa28
	float _fuelDrainWhenStartingEngine; // 0xa2c
	FRuntimeFloatCurve _engineFuelDrainPerRpm; // 0xa30
	float _engineFuelDrainPerRpmScale; // 0xab8
	FRuntimeFloatCurve _engineFuelDrainPerRpmUnderLoad; // 0xac0
	float _engineFuelDrainPerRpmUnderLoadScale; // 0xb48
	float _fuelDrainWhenInactive; // 0xb4c
	float _fuelFillingBaseDuration; // 0xb50
	float _fillingDurationPerFuelAmountFilled; // 0xb54
	float _experienceAwardedPerFuelAmountFilled; // 0xb58
	UAnimMontage* _prisonerFillingFuelMontage; // 0xb60
	UAkAudioEvent* _startFillingFuelAudioEvent; // 0xb68
	UAkAudioEvent* _stopFillingFuelAudioEvent; // 0xb70
	UAkAudioEvent* _startFillingFuelWithReplenishableResourceAudioEvent; // 0xb78
	UAkAudioEvent* _stopFillingFuelWithReplenishableResourceAudioEvent; // 0xb80
	FVector _fillFuelWithReplenishableResourceOverlapBoxExtent; // 0xb88
	float _fuelDrainingBaseDuration; // 0xb94
	float _drainingDurationPerFuelAmountDrained; // 0xb98
	float _experienceAwardedPerFuelAmountDrained; // 0xb9c
	UAnimMontage* _prisonerDrainingFuelMontage; // 0xba0
	UAkAudioEvent* _startDrainingFuelAudioEvent; // 0xba8
	UAkAudioEvent* _stopDrainingFuelAudioEvent; // 0xbb0
	FVehicleEngineStallingParameters _engineStallingParametersWhenOutOfFuel; // 0xbb8
	float _fuelUpdateInterval; // 0xc14
	bool _hasBattery; // 0xc20
	UGameResourceType* _batteryResourceType; // 0xc28
	float _maxBatteryAmount; // 0xc30
	float _batteryDrainWhenStartingEngine; // 0xc34
	float _batteryDrainWhenHornIsActive; // 0xc38
	float _batteryDrainWhenLightsAreActive; // 0xc3c
	float _batteryDrainWhenRadioIsTurnedOn; // 0xc40
	float _batteryDrainWhenInactive; // 0xc44
	FRuntimeFloatCurve _batteryDynamoChargePerKph; // 0xc48
	float _batteryDynamoChargePerKphScale; // 0xcd0
	FRuntimeFloatCurve _batteryAlternatorChargePerRpm; // 0xcd8
	float _batteryAlternatorChargePerRpmScale; // 0xd60
	float _batteryPowerReductionThreshold; // 0xd64
	float _startEngineDurationPenaltyWhenBatteryReducedInPower; // 0xd68
	float _batteryChargingBaseDuration; // 0xd6c
	float _chargingDurationPerBatteryAmountCharged; // 0xd70
	float _experienceAwardedPerBatteryAmountCharged; // 0xd74
	UAnimMontage* _prisonerChargingBatteryMontage; // 0xd78
	UAkAudioEvent* _startChargingBatteryAudioEvent; // 0xd80
	UAkAudioEvent* _stopChargingBatteryAudioEvent; // 0xd88
	float _batteryUpdateInterval; // 0xd94
	bool _canSkillAffectMaxSpeed; // 0xdac
	bool _canSkillAffectSteerRate; // 0xdad
	bool _canSkillAffectThrottleAmount; // 0xdae
	bool _canSkillAffectBrakeAmount; // 0xdaf
	UAkAudioEvent* _engineStartingAudioEvent; // 0xdb0
	UAkAudioEvent* _engineStartedAudioEvent; // 0xdb8
	UAkAudioEvent* _engineTurnedOffAudioEvent; // 0xdc0
	UAkAudioEvent* _engineFailedToStartAudioEvent; // 0xdc8
	UAkAudioEvent* _engineFailedToStartNoFuelAudioEvent; // 0xdd0
	UAkAudioEvent* _engineFailedToStartNoBatteryAudioEvent; // 0xdd8
	UAkAudioEvent* _engineStalledAudioEvent; // 0xde0
	UAkAudioEvent* _noFuelToStartEngineAudioEvent; // 0xde8
	UAkAudioEvent* _noBatteryToStartEngineAudioEvent; // 0xdf0
	UAkAudioEvent* _hornStartAudioEvent; // 0xdf8
	UAkAudioEvent* _hornStopAudioEvent; // 0xe00
	UAkAudioEvent* _noBatteryToActivateHornAudioEvent; // 0xe08
	UAkAudioEvent* _lightsActivatedAudioEvent; // 0xe10
	UAkAudioEvent* _lightsDeactivatedAudioEvent; // 0xe18
	UAkAudioEvent* _noBatteryToActivateLightsAudioEvent; // 0xe20
	UAkAudioEvent* _noBatteryToTurnOnRadioAudioEvent; // 0xe28
	UAkAudioEvent* _gearUpAudioEvent; // 0xe30
	UAkAudioEvent* _gearDownAudioEvent; // 0xe38
	float _rpmScaleForSoundWhenSpeedIsEqualOrGreaterThanZero; // 0xe40
	float _rpmScaleForSoundWhenSpeedIsLessThanZero; // 0xe44
	float _soundCullDistance; // 0xe48
	UTireToSurfaceAudioData* _tireToSurfaceAudioData; // 0xe50
	float _vehicleRPMRTPCInterpolationTime; // 0xe58
	float _vehicleLoadRTPCInterpolationTime; // 0xe5c
	float _vehicleSpeedRTPCInterpolationTime; // 0xe60
	int32_t _numAudioObjectsForTires; // 0xe64
	FRepairableParams _repairableTireParams; // 0xe68
	float _tireEffectUpdateRange; // 0xea0
	TArray<FVehicleTireEffectProperties> _tireEffectProperties; // 0xec0
	FVehicleExhaustEffects _exhaustEffects; // 0xee8
	bool _hornActive; // 0xf30
	bool _lightsActive; // 0xf31
	bool _hasLights; // 0xf33
	FVehicleMaterialParameterDescription _headlightsMaterialParameter; // 0xf34
	FVehicleMaterialParameterDescription _reverseLightsMaterialParameter; // 0xf44
	FVehicleMaterialParameterDescription _brakeLightsMaterialParameter; // 0xf54
	float _brakeLightsAlwaysOnIfLightsAreActivated; // 0xf64
	AVehicleCorpse* _corpseClass; // 0xf80
	float _sendStateInterval; // 0xf8c
	float _rigidBodyStatePositionErrorTolerance; // 0xf90
	float _rigidBodyStateRotationErrorTolerance; // 0xf94
	float _distanceErrorToHardSnapToRemoteLocation; // 0xf98
	float _makeNoiseInterval; // 0xf9c
	float _maxNoiseLoudnessFromEngine; // 0xfa0
	float _maxNoiseLoudnessFromSpeed; // 0xfa4
	float _speedThresholdInKphToAffectNavigation; // 0xfac
	float _allowedWaterImmersionDepth; // 0xfb4
	float _disallowedWaterImmersionDepth; // 0xfb8
	float _waterImmersionDepthToForceEvictMountees; // 0xfbc
	float _timeToEvictMounteesWhenImmersedIntoWater; // 0xfc0
	float _timeToForceEvictMounteesWhenImmersedIntoWater; // 0xfc4
	float _timeToAutoDestructWhenImmersedIntoWater; // 0xfc8
	bool _explodesOnLowHealth; // 0xfcc
	float _explosionDamage; // 0xfd0
	float _explosionForce; // 0xfd4
	uint32_t _repHealthFuelBatteryAmount; // 0x1050
	uint64_t _repPackedSimulationState; // 0x1058
	EAITeam _aiTeam; // 0x1070
	bool _shouldBeUpright; // 0x1078
	bool _canEverBeTraded; // 0x1359
	FTradeableTagParams _tradeableParams; // 0x1360
};

struct AWheelBarrow : APawn {
	UStaticMeshComponent* _meshComponent; // 0x298
	float _maxDriveOrBoardAngle; // 0x2a4
	float _speedThresholdToEvictAllMountees; // 0x2a8
	float _vertSpeedThresholdToEvictAllMountees; // 0x2ac
	float _wheelMeshRadius; // 0x2d0
	float _minWheelMeshWobbleAngle; // 0x2d4
	float _maxWheelMeshWobbleAngle; // 0x2d8
	TArray<UWheelBarrowMountSlot*> _mountSlots; // 0x300
	FVehicleSpawnParameters _spawnParameters; // 0x360
	EConZPxDominanceGroup _physicsDominanceGroup; // 0x38c
	FVector _driverCapsuleRelativeLocation; // 0x390
	float _driverCapsuleMass; // 0x39c
	float _driverCapsuleLinearDamping; // 0x3a0
	float _driverCapsuleAngularDamping; // 0x3a4
	FVector _driverCapsuleConstraintRelativeLocation; // 0x3a8
	float _driverCapsuleConstraintSwingLimit; // 0x3b4
	float _driverCapsuleConstraintTwistLimit; // 0x3b8
	FTransform _driverTransformRelativeToCapsule; // 0x3c0
	float _forwardDriveForceMagnitude; // 0x3f0
	float _reverseDriveForceMagnitude; // 0x3f4
	float _steerForceMagnitude; // 0x3f8
	float _steerForceMagnitudeWhenLimping; // 0x3fc
	float _steerRollTorqueMagnitude; // 0x400
	float _meshBrakeForceScale; // 0x404
	float _meshBrakeForceMagnitudeWhenCloseToMaxSpeed; // 0x408
	float _meshSidewaysBrakeForceScale; // 0x40c
	float _driverCapsuleBrakeForceScale; // 0x410
	float _driverCapsuleBrakeForceMagnitudeWhenCloseToMaxSpeed; // 0x414
	float _driverCapsuleSidewaysBrakeForceScale; // 0x418
	float _physicsMaterialFrictionWhenDriven; // 0x41c
	float _physicsMaterialRestitutionWhenDriven; // 0x420
	bool _stickyFrictionEnabled; // 0x424
	float _stickyFrictionSpeedThreshold; // 0x428
	float _stickyFriction; // 0x42c
	UAkAudioEvent* _startedMovingAudioEvent; // 0x430
	UAkAudioEvent* _stoppedMovingAudioEvent; // 0x438
	FRuntimeFloatCurve _driverActionDifficultyVsSpeed; // 0x450
	FRuntimeFloatCurve _driverActionDifficultyVsSpeedWhenLimping; // 0x4d8
	FWheelBarrowParametersPerMovementPace _parametersPerMovementPace[0x4]; // 0x560
	FFloatInterval _maxSpeedModifierInterpedWithDriverDexterity; // 0x5e0
	FFloatInterval _loadModifierInterpedWithDriverStrength; // 0x5e8
	FRuntimeFloatCurve _weightLoadFactorVsFloorSlopeAngle; // 0x5f0
	float _pushImpulseMagnitude; // 0x678
	UCurveFloat* _pushIntensityCurve; // 0x680
	float _pushDirectionRatioBetweenForwardAndUp; // 0x688
	float _maxDistanceToAllowThePush; // 0x68c
	float _maxAngularVelocityToAllowThePush; // 0x690
	float _maxHealth; // 0x698
	FRepairableParams _repairableParams; // 0x6a0
	UAkAudioEvent* _destroyedAudioEvent; // 0x6d8
	UParticleSystem* _destroyedParticleSystem; // 0x6e0
	float _healthDrainPerSpeed; // 0x6e8
	float _healthDrainPerLoad; // 0x6ec
	float _healthDrainPerWaterImmersionDepth; // 0x6f0
	float _healthDrainUpdateInterval; // 0x6f4
	FRuntimeFloatCurve _hitDamageVsHitImpulse; // 0x700
	UAkAudioEvent* _damagedByHitAudioEvent; // 0x788
	AVehicleItemContainer* _itemContainerClass; // 0x790
	bool _shouldDropItemsWhenDestroyed; // 0x798
	AVehicleItemContainer* _itemContainer; // 0x7a0
	float _allowedWaterImmersionDepth; // 0x7ac
	UUserWidget* _mountSlotIndicatorsWidget; // 0x7b0
	UWheelBarrowDriverCapsuleComponent* _driverPhysicsCapsuleComponent; // 0x7b8
	UPhysicsConstraintComponent* _driverPhysicsConstraintComponent; // 0x7c0
	UPhysicalMaterial* _physicsMaterialWhenDriven; // 0x7e0
	float _sendStateFrequency; // 0x964
	char _repState1; // 0x968
	bool _canEverBeTraded; // 0x969
	FTradeableTagParams _tradeableParams; // 0x970
};

struct UAirplaneAnimInstance : UAnimInstance {
	bool IsAnyoneMounted; // 0x2b8
	float Speed; // 0x2bc
	float SpeedKph; // 0x2c0
	float PropellerRotationAngle; // 0x2c4
	float LAileronAngle; // 0x2c8
	float RAileronAngle; // 0x2cc
	float LElevatorAngle; // 0x2d0
	float RElevatorAngle; // 0x2d4
	float RudderAngle; // 0x2d8
	bool IsMounteeDriver; // 0x2dc
};

struct UMaterialExpressionLandscapePhysicalMaterialOutput : UMaterialExpressionCustomOutput {
	TArray<FPhysicalMaterialInput> Inputs; // 0x40
};

struct UABP_Prisoner_Vehicle2W_C : UPrisonerAnimInstance_Vehicle2W {
	FPointerToUberGraphFrame UberGraphFrame; // 0x440
	FAnimNode_Root AnimGraphNode_Root; // 0x448
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x478
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x4a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x4c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x4f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x518
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x540
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x568
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x590
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x5b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x5e0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_20; // 0x610
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_10; // 0x7a0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_10; // 0x7c0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_19; // 0x7e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x970
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x9f0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_18; // 0xa20
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_9; // 0xbb0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_9; // 0xbd0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_17; // 0xbf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0xd80
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0xe00
	FAnimNode_Fabrik AnimGraphNode_Fabrik_16; // 0xe30
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8; // 0xfc0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8; // 0xfe0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_15; // 0x1000
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1190
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x1210
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7; // 0x1240
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7; // 0x1260
	FAnimNode_Fabrik AnimGraphNode_Fabrik_14; // 0x1280
	FAnimNode_Fabrik AnimGraphNode_Fabrik_13; // 0x1410
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6; // 0x15a0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_12; // 0x15c0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_11; // 0x1750
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5; // 0x18e0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6; // 0x1900
	FAnimNode_Fabrik AnimGraphNode_Fabrik_10; // 0x1920
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5; // 0x1ab0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_9; // 0x1ad0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_4; // 0x1c60
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_3; // 0x1df0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x1f80
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x2068
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x2108
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x2188
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x2208
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x22a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x2348
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x2430
	FAnimNode_Fabrik AnimGraphNode_Fabrik_8; // 0x2460
	FAnimNode_Fabrik AnimGraphNode_Fabrik_7; // 0x25f0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4; // 0x2780
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4; // 0x27a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x27c0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x2840
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x2870
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2958
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x29d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x2a58
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x2af8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x2b98
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3; // 0x2bc8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3; // 0x2be8
	FAnimNode_Fabrik AnimGraphNode_Fabrik_6; // 0x2c10
	FAnimNode_Fabrik AnimGraphNode_Fabrik_5; // 0x2da0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x2f30
	FAnimNode_Fabrik AnimGraphNode_Fabrik_4; // 0x2f50
	FAnimNode_Fabrik AnimGraphNode_Fabrik_3; // 0x30e0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x3270
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0x3290
	FAnimNode_Fabrik AnimGraphNode_Fabrik_2; // 0x32b0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x3440
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x3460
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_2; // 0x35f0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace; // 0x3780
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x3910
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x39f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x3a98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3b18
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x3b98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x3c38
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x3cd8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x3dc0
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x3df0
};

struct UDatasmithLightComponentTemplate : UDatasmithObjectTemplate {
	char bVisible : 1; // 0x30
	char CastShadows : 1; // 0x34
	char bUseTemperature : 1; // 0x34
	char bUseIESBrightness : 1; // 0x34
	float Intensity; // 0x38
	float Temperature; // 0x3c
	float IESBrightnessScale; // 0x40
	FLinearColor LightColor; // 0x44
	UMaterialInterface* LightFunctionMaterial; // 0x58
	UTextureLightProfile* IESTexture; // 0x60
};

struct UGameResourceConsumptionData : UObject {
	EGameResourceConsumptionMethod ConsumptionMethod; // 0x28
	FGameplayTag ConsumptionDuration; // 0x2c
	FGameplayTag DigestionDuration; // 0x34
	float Density; // 0x3c
	float TotalCarbohydrate; // 0x40
	float Fiber; // 0x44
	float Starch; // 0x48
	float Sugars; // 0x4c
	float TotalFat; // 0x50
	float SaturatedFat; // 0x54
	float Protein; // 0x58
	float VitaminA; // 0x5c
	float VitaminC; // 0x60
	float VitaminD; // 0x64
	float VitaminE; // 0x68
	float VitaminK; // 0x6c
	float VitaminB1; // 0x70
	float VitaminB2; // 0x74
	float VitaminB3; // 0x78
	float VitaminB6; // 0x7c
	float VitaminB9; // 0x80
	float VitaminB12; // 0x84
	float VitaminB5; // 0x88
	float VitaminB4; // 0x8c
	float Calcium; // 0x90
	float Iron; // 0x94
	float Magnesium; // 0x98
	float Phosphorus; // 0x9c
	float Potassium; // 0xa0
	float Sodium; // 0xa4
	float Zinc; // 0xa8
	float Copper; // 0xac
	float Manganese; // 0xb0
	float Selenium; // 0xb4
	float Alcohol; // 0xb8
	float Water; // 0xbc
	float DisgustAmountPerGramOfRawFood; // 0xc0
	TArray<UConsumableDigestionHandler*> DigestionHandlers; // 0xc8
};

struct UMotionControllerComponent : UPrimitiveComponent {
	int32_t PlayerIndex; // 0x448
	EControllerHand Hand; // 0x44c
	FName MotionSource; // 0x450
	char bDisableLowLatencyUpdate : 1; // 0x458
	ETrackingStatus CurrentTrackingStatus; // 0x45c
	bool bDisplayDeviceModel; // 0x45d
	FName DisplayModelSource; // 0x460
	UStaticMesh* CustomDisplayMesh; // 0x468
	TArray<UMaterialInterface*> DisplayMeshMaterialOverrides; // 0x470
	UPrimitiveComponent* DisplayComponent; // 0x4e0
};

struct UARPlaneGeometry : UARTrackedGeometry {
	EARPlaneOrientation Orientation; // 0xf8
	FVector Center; // 0xfc
	FVector Extent; // 0x108
	TArray<FVector> BoundaryPolygon; // 0x118
	UARPlaneGeometry* SubsumedBy; // 0x128
};

struct UItemSplitWidget : UDesignableUserWidget {
	UImage* _itemImage; // 0x278
	UTextBlock* _currentItemStackAmount; // 0x280
	UTextBlock* _newItemStackAmount; // 0x288
	USlider* _valueSlider; // 0x290
	UButton* _splitButton; // 0x298
};

struct UMagicLeapARPinContentBindings : USaveGame {
	TMap<FGuid, FMagicLeapARPinObjectIdList> AllContentBindings; // 0x28
};

struct ULightmassPortalComponent : USceneComponent {
	UBoxComponent* PreviewBox; // 0x1f8
};

struct UNiagaraDataInterfacePlatformSet : UNiagaraDataInterface {
	FNiagaraPlatformSet Platforms; // 0x38
};

struct AGlassBottle02_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UBTDecorator_BlueprintBase : UBTDecorator {
	AAIController* AIOwner; // 0x68
	AActor* ActorOwner; // 0x70
	TArray<FName> ObservedKeyNames; // 0x78
	char bShowPropertyDetails : 1; // 0x98
	char bCheckConditionOnlyBlackBoardChanges : 1; // 0x98
	char bIsObservingBB : 1; // 0x98
};

struct ULogoutCallbackProxy : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UAnimSet : UObject {
	char bAnimRotationOnly : 1; // 0x28
	TArray<FName> TrackBoneNames; // 0x30
	TArray<FAnimSetMeshLinkup> LinkupCache; // 0x40
	TArray<char> BoneUseAnimTranslation; // 0x50
	TArray<char> ForceUseMeshTranslation; // 0x60
	TArray<FName> UseTranslationBoneNames; // 0x70
	TArray<FName> ForceMeshTranslationBoneNames; // 0x80
	FName PreviewSkelMeshName; // 0x90
	FName BestRatioSkelMeshName; // 0x98
};

struct UMenuButton : UUserWidget {
	bool PreviewSelectedState; // 0x2b8
	UImage* _backgroundFocusImage; // 0x2c0
	UTextBlock* _text; // 0x2c8
	USizeBox* _sizeBox; // 0x2d0
	FText _initialTitle; // 0x2d8
	FTabTextStyle _selectedTextStyle; // 0x2f0
	FTabTextStyle _deselectedTextStyle; // 0x388
};

struct UEditNormalsToolProperties : UInteractiveToolPropertySet {
	bool bRecomputeNormals; // 0x60
	ENormalCalculationMethod NormalCalculationMethod; // 0x61
	bool bFixInconsistentNormals; // 0x62
	bool bInvertNormals; // 0x63
	ESplitNormalMethod SplitNormalMethod; // 0x64
	float SharpEdgeAngleThreshold; // 0x68
	bool bAllowSharpVertices; // 0x6c
};

struct UCircularThrobber : UWidget {
	int32_t NumberOfPieces; // 0x108
	float Period; // 0x10c
	float Radius; // 0x110
	USlateBrushAsset* PieceImage; // 0x118
	FSlateBrush Image; // 0x120
	bool bEnableRadius; // 0x1a8
};

struct UTrapRefuelItemTag : UBaseItemTag {
	int32_t UsesOnRefuel; // 0x30
};

struct UUI_NotificationWidget_C : UNotificationWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	USizeBox* NotificationSize; // 0x288
	UTextBlock* Text; // 0x290
	float NotificationWidth; // 0x298
	float NotificationMaxHeight; // 0x29c
	bool Animating; // 0x2a0
	bool Dismissed; // 0x2a1
	float ScaleFactor; // 0x2a4
	float HorizontalScaleSpeed; // 0x2a8
	float VerticalScaleSpeed; // 0x2ac
	float LifeSpan; // 0x2b0
	bool temporary; // 0x2b4
	FText notificationName; // 0x2b8
};

struct URemeshMeshTool : UMultiSelectionTool {
	URemeshMeshToolProperties* BasicProperties; // 0x98
	UMeshStatisticsProperties* MeshStatisticsProperties; // 0xa0
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xa8
};

struct UPrisonerCommonData : UDataAsset {
	UAnimInstance* FemaleAnimationInstance; // 0x30
	UAnimInstance* MaleAnimationInstance; // 0x38
	FFloatInterval ExhaustionRange; // 0x40
	float ExhaustionDamageMultiplier; // 0x48
	float SkinHardness; // 0x4c
	float LastDamageDealerResetTime; // 0x50
	FFloatInterval StrengthMeleeDamageMultiplierRange; // 0x54
	float ExhaustionMeleeDamageMultiplier; // 0x5c
	TMap<FGameplayTag, EClothesPart> ClothesPartUsedByMeleeAttackCapsuleAttachment; // 0x60
	TMap<FGameplayTag, FName> AttackerBoneByMeleeAttackCapsuleAttachment; // 0xb0
	float UnarmedAttackBaseEnergy; // 0x100
	FFloatInterval StrengthThrowingDamageMultiplierRange; // 0x104
	float ExhaustionThrowingDamageMultiplier; // 0x10c
	float NoSkillThrowingDamageMultiplier; // 0x110
	float BasicSkillThrowingDamageMultiplier; // 0x114
	float MediumSkillThrowingDamageMultiplier; // 0x118
	float AdvancedSkillThrowingDamageMultiplier; // 0x11c
	float AboveAdvancedSkillThrowingDamageMultiplier; // 0x120
	FFloatInterval ThrowEnergyRange; // 0x124
	float MaxActorEyesOffsetWhenLeaning; // 0x12c
	int32_t NumberOfCrouchStages; // 0x130
	float CrouchStagesInterpSpeed; // 0x134
	UCurveFloat* CrouchViewsAdditionalGlobalOffsetZVsCrouchStage; // 0x138
	float ProneEyeHeight; // 0x140
	float ProneEyeForwardOffset; // 0x144
	float SittingOnGroundEyeHeight; // 0x148
	float LyingOnGroundEyeHeight; // 0x14c
	float RestingOnGroundBackwardOffset; // 0x150
	EPrisonerMovementPace DefaultPace; // 0x154
	UPrisonerMovementSettings* MovementSettings; // 0x158
	float DefaultViewBlendDuration; // 0x160
	float MinEyesRotationYaw; // 0x164
	float MaxEyesRotationYaw; // 0x168
	float MinEyesRotationPitch; // 0x16c
	float MaxEyesRotationPitch; // 0x170
	UCurveFloat* MinEyesRotationPitchCurve; // 0x178
	UCurveFloat* MaxEyesRotationPitchCurve; // 0x180
	float EyesRotationSpeed; // 0x188
	bool DebugEyesRotation; // 0x18c
	UAkAudioEvent* ComaAudioEvent; // 0x190
	UAkAudioEvent* ComaScreamAudioEvent; // 0x198
	UAkAudioEvent* DeathAudioEvent; // 0x1a0
	UAkAudioEvent* DeathScreamAudioEvent; // 0x1a8
	UParticleSystem* ColdBreathParticles; // 0x1b0
	FName ColdBreathParticlesAttachPointName; // 0x1b8
	UMaterialInstance* StandardUndershirtMaterial; // 0x1c0
	UMaterialInstance* DeluxeUndershirtMaterial; // 0x1c8
	UAkAudioEvent* JumpAudioEvent; // 0x1d0
	float LandingImpactHorizontalSpeedWeight; // 0x1d8
	float LandingImpactVerticalSpeedWeight; // 0x1dc
	UCurveFloat* LandingStaminaDrainCurve; // 0x1e0
	UCurveFloat* LandingDamageCurve; // 0x1e8
	ULandingEffects* LandingEffects; // 0x1f0
	float LandingImpactSpeedForRagdoll; // 0x1f8
	float LandingMinRagdollDuration; // 0x1fc
	float LandingMaxRagdollDuration; // 0x200
	float LandingRagdollDurationPerSpeedUnit; // 0x204
	UParticleSystem* WaterParticlesWhenIdle; // 0x208
	UParticleSystem* WaterParticlesWhenIdleInOcean; // 0x210
	UParticleSystem* WaterParticlesWhenMoving; // 0x218
	UParticleSystem* WaterParticlesWhenMovingInOcean; // 0x220
	UParticleSystem* WaterParticlesWhenDiving; // 0x228
	FName WaterParticlesWhenDivingAttachPointName; // 0x230
	UParticleSystem* WaterContactParticles; // 0x238
	FName WaterContactParticlesAttachPointName; // 0x240
	float MinVelocityZToSpawnWaterContactParticles; // 0x248
	UCurveFloat* BuoyancyMultiplierVsGearWeightLimitDeviation; // 0x250
	UAkAudioEvent* StartedDivingAudioEvent; // 0x258
	UAkAudioEvent* StoppedDivingAudioEvent; // 0x260
	UAkAudioEvent* EndDivingOnPlayAudioEvent; // 0x268
	float MaxHeadWaterWeight; // 0x270
	float MaxUpperBodyWaterWeight; // 0x274
	float MaxLowerBodyWaterWeight; // 0x278
	float MaxFeetWaterWeight; // 0x27c
	float OutwardsWaterPropagationFactor; // 0x280
	float InwardsWaterPropagationRate; // 0x284
	float OutwardsWaterPropagationRate; // 0x288
	UCurveFloat* GettingDryRateVsSpeed; // 0x290
	UParticleSystem* SmallBleedingEffect; // 0x298
	UParticleSystem* LargeBleedingEffect; // 0x2a0
	UParticleSystem* UrineParticles; // 0x2a8
	FName UrineParticlesAttachPointName; // 0x2b0
	FName UrineParticlesAttachPointSmallestName; // 0x2b8
	FName UrineParticlesAttachPointBiggestName; // 0x2c0
	FName UrineParticlesAttachPointFemaleName; // 0x2c8
	float DetectNearbyFoliageRadius; // 0x2d0
	float MinLocationDeltaToUpdateNearbyFoliage; // 0x2d4
	float MinSpeedToTriggerMovingThroughFoliageEffects; // 0x2d8
	float MinAngularSpeedToTriggerMovingThroughFoliageEffects; // 0x2dc
	float ShouldAutomaticallyBeSeenInFoliageByAIDistance; // 0x2e0
	UAkAudioEvent* OpenInventoryAudioEvent; // 0x2e8
	UAkAudioEvent* CloseInventoryAudioEvent; // 0x2f0
	UAkAudioEvent* OpenOceanAudioEvent; // 0x2f8
	float CharacterDetectionRadiusForIngameMusic; // 0x300
	float BulletFlybyDangerCooldown; // 0x304
	float HeadExplodeDamageThreshold; // 0x308
	float MeleeDangerCooldown; // 0x30c
	float MeleeDangerRadius; // 0x310
	float MeleeDangerAngle; // 0x314
	float PostReviveStateDuration; // 0x318
	FGameplayTag HitReactTypeWhenStanding; // 0x31c
	FGameplayTag HitReactTypeWhenStandingInCombatMode; // 0x324
	FGameplayTag HitReactTypeWhenStandingInCombatModeAndHoldingBlock; // 0x32c
	FGameplayTag HitReactTypeWhenCrouching; // 0x334
	FGameplayTag HitReactTypeWhenProne; // 0x33c
	FGameplayTag HitReactTypeWhenCaptured; // 0x344
	TMap<EPrisonerFallingPose, UHitReactLandingParams*> HitReactLandingParamsMap; // 0x350
	FGameplayTag MeleeAttackCapsulesAttachmentForItemInLHand; // 0x3a0
	FGameplayTag MeleeAttackCapsulesAttachmentForItemInRHand; // 0x3a8
	FPrisonerMeleeAttackTypes MeleeAttackTypes; // 0x3b0
	float MeleeTargetMaxDistance; // 0x438
	float MeleeTargetMaxHeightDifference; // 0x43c
	UCurveFloat* MeleeTargetMaxConeHalfAngleVsDistanceToTarget; // 0x440
	float TimeSpanAfterWhichMeleeAttacksBecomeInitial; // 0x448
	TMap<EDamageMagnitudeType, float> MeleeHitRagdollImpulseByDamageMagnitudeType; // 0x450
	float DefaultMeleeHitRagdollImpulse; // 0x4a0
	float ThrowModeActivationDelay; // 0x4a4
	FName ThrowLaunchLocationSocketName; // 0x4a8
	UCurveFloat* ThrowingPathBrightnessFromTimeCurve; // 0x4b0
	float IslandBoundsCheckInterval; // 0x4b8
	UPhysicalSurfacesData* PhysicalSurfacesData; // 0x4c0
	AWristwatch* DeluxeWristwatchClass; // 0x4c8
	UWeaponScopeWidget* ScopeWidget; // 0x4d0
	APlaceableActorItems* PlaceableActorItemsClass; // 0x4d8
	APlaceableActorFortifications* PlaceableActorFortificationsClass; // 0x4e0
	APlaceableActorBaseBuilding* PlaceableActorBaseBuildingClass; // 0x4e8
	APlaceableActorBaseUpgrade* PlaceableActorBaseUpgradeClass; // 0x4f0
	int32_t MaxPossiblePlacedBlueprints; // 0x4f8
	float OpenOceanRange; // 0x4fc
	UPrisonerAppearanceDataAsset* AppearanceDataAsset; // 0x500
	TMap<EPrisonerBorderCrossingPenalty, float> LeavingTheIslandPenaltyTimes; // 0x508
	float GameEventOutOfBoundsDamage; // 0x558
	UMaterialInstance* ItemPlacingMaterialAllowed; // 0x560
	UMaterialInstance* ItemPlacingMaterialDisallowed; // 0x568
	float IkInterpSpeed; // 0x570
	UMaterialParameterCollection* CommonParameterCollection; // 0x578
	FName WeaponSocketName; // 0x580
	FName WeaponHolsterSocketName; // 0x588
	UAnimMontage* SwapWeapons; // 0x590
	UAnimMontage* SwapItemsThrowingItemToWeapon; // 0x598
	UAnimMontage* SwapItemsWeaponToThrowingItem; // 0x5a0
	UAnimMontage* SwapItemsNotWeaponToNotWeapon; // 0x5a8
	UAnimMontage* SwapItemsWeaponToWeapon; // 0x5b0
	UAnimMontage* SwapItemsNotWeaponToWeapon; // 0x5b8
	UAnimMontage* SwapItemsWeaponToNotWeapon; // 0x5c0
	UAnimMontage* EquipRifleStanding; // 0x5c8
	UAnimMontage* UnequipRifleStanding; // 0x5d0
	UAnimMontage* EquipHandgunStanding; // 0x5d8
	UAnimMontage* UnequipHadgunStanding; // 0x5e0
	UAnimMontage* UrinateMaleMontage; // 0x5e8
	UAnimMontage* UrinateFemaleMontage; // 0x5f0
	UAnimMontage* UrinateMaleForcedMontage; // 0x5f8
	UAnimMontage* UrinateFemaleForcedMontage; // 0x600
	UAnimMontage* DefecateMontage; // 0x608
	UAnimMontage* DefecateForcedMontage; // 0x610
	UAnimMontage* VomitMontage; // 0x618
	UAnimMontage* VomitForcedMontage; // 0x620
	UAnimMontage* SearchObject; // 0x628
	UAnimMontage* SearchObjectWhileItemInHands; // 0x630
	UAnimMontage* SearchObjectWhileWeaponInHands; // 0x638
	UAnimMontage* SearchObjectWhenSwimming; // 0x640
	UAnimMontage* SearchPrisoner; // 0x648
	UAnimMontage* PatchWoundsStanding; // 0x650
	UAnimMontage* PatchWoundsCrouching; // 0x658
	UAnimMontage* PatchWoundsProne; // 0x660
	UAnimMontage* PatchWoundsStandingEnd; // 0x668
	UAnimMontage* PatchWoundsCrouchingEnd; // 0x670
	UAnimMontage* PatchWoundsProneEnd; // 0x678
	UAnimMontage* EatGeneric; // 0x680
	UAnimMontage* EatCan; // 0x688
	UAnimMontage* DrinkFromBottleStanding; // 0x690
	UAnimMontage* DrinkFromBottleCrouching; // 0x698
	UAnimMontage* DrinkInteraction; // 0x6a0
	UAnimMontage* DefaultLongThrowMontage; // 0x6a8
	UAnimMontage* DefaultLongThrowLoopMontage; // 0x6b0
	UAnimMontage* DefaultShortThrowMontage; // 0x6b8
	UAnimMontage* DefaultThrowbackGrenadeMontage; // 0x6c0
	UAnimMontage* ChopTreeStanding; // 0x6c8
	UAnimMontage* ChopTreeStandingEnd; // 0x6d0
	UAnimMontage* ChopLogStanding; // 0x6d8
	UAnimMontage* ChopLogStandingEnd; // 0x6e0
	UAnimMontage* BreakStone; // 0x6e8
	UAnimMontage* BreakStoneEnd; // 0x6f0
	UAnimMontage* CraftStanding; // 0x6f8
	UAnimMontage* CraftCrouching; // 0x700
	UAnimMontage* CraftProne; // 0x708
	UAnimMontage* UncraftStanding; // 0x710
	UAnimMontage* UncraftCrouching; // 0x718
	UAnimMontage* UncraftProne; // 0x720
	UAnimMontage* CheckTime; // 0x728
	UAnimMontage* CheckTimeWhileItemInHands; // 0x730
	UAnimMontage* CheckTimeWhileWeaponInHands; // 0x738
	UAnimMontage* CheckTemperature; // 0x740
	UAnimMontage* ForceUnlockStanding; // 0x748
	UAnimMontage* ForceUnlockStandingEnd; // 0x750
	UAnimMontage* ForceUnlockStandingStop; // 0x758
	UAnimMontage* SpillMontage; // 0x760
	UAnimMontage* StompOutFireMontage; // 0x768
	UAnimMontage* GestureShowFinger; // 0x770
	UAnimMontage* GestureStandSurrender; // 0x778
	UAnimMontage* GestureWaveHi; // 0x780
	UAnimMontage* GestureYouAreDead; // 0x788
	UAnimMontage* GestureFY; // 0x790
	UAnimMontage* GesturePoint; // 0x798
	UAnimMontage* GestureHeart; // 0x7a0
	UAnimMontage* GestureBallpalm; // 0x7a8
	UAnimMontage* GestureFacepalm; // 0x7b0
	UAnimMontage* GestureFingerGun; // 0x7b8
	UAnimMontage* GestureLaughing; // 0x7c0
	UAnimMontage* GestureSmellWave; // 0x7c8
	UAnimMontage* GestureSquat; // 0x7d0
	UAnimMontage* GestureCharge; // 0x7d8
	UAnimMontage* GestureChargeCombat; // 0x7e0
	UAnimMontage* GestureFreeze; // 0x7e8
	UAnimMontage* GestureFreezeCombat; // 0x7f0
	UAnimMontage* GestureGetDown; // 0x7f8
	UAnimMontage* GestureGetDownCombat; // 0x800
	UAnimMontage* GestureGetUp; // 0x808
	UAnimMontage* GestureGetUpCombat; // 0x810
	UAnimMontage* GestureHalt; // 0x818
	UAnimMontage* GestureHaltCombat; // 0x820
	UAnimMontage* GestureHurryUp; // 0x828
	UAnimMontage* GestureHurryUpCombat; // 0x830
	UAnimMontage* GesturePointMe; // 0x838
	UAnimMontage* GesturePointMeCombat; // 0x840
	UAnimMontage* GesturePointYou; // 0x848
	UAnimMontage* GesturePointYouCombat; // 0x850
	UAnimMontage* GestureRally; // 0x858
	UAnimMontage* GestureRallyCombat; // 0x860
	UAnimMontage* GestureThumbsUp; // 0x868
	UAnimMontage* GestureThumbsUpCombat; // 0x870
	UAnimMontage* GestureThumbsDown; // 0x878
	UAnimMontage* GestureThumbsDownCombat; // 0x880
	UAnimMontage* GestureUnderstandNot; // 0x888
	UAnimMontage* GestureUnderstandNotCombat; // 0x890
	UAnimMontage* GestureUnderstandYes; // 0x898
	UAnimMontage* GestureUnderstandYesCombat; // 0x8a0
	UAnimMontage* CommitSuicideStanding; // 0x8a8
	UAnimMontage* CommitSuicideCrouching; // 0x8b0
	UAnimMontage* CommitSuicideRareStanding; // 0x8b8
	UAnimMontage* LockpickRegular; // 0x8c0
	UAnimMontage* WhistleMontage; // 0x8c8
	UAnimMontage* TuneBowMontage; // 0x8d0
	UAnimMontage* RepairVehicleMontage; // 0x8d8
	UAnimMontage* WashClothMontage; // 0x8e0
	UAnimMontage* BuryStandingMontage; // 0x8e8
	UAnimMontage* BuryRestStandingMontage; // 0x8f0
	UAnimMontage* BuryResumeStandingMontage; // 0x8f8
	UAnimMontage* BuryCrouchingMontage; // 0x900
	UAnimMontage* BuryRestCrouchingMontage; // 0x908
	UAnimMontage* SitOnGroundStandingStartMontage; // 0x910
	UAnimMontage* SitOnGroundStandingEndMontage; // 0x918
	UAnimMontage* SitOnGroundCrouchingStartMontage; // 0x920
	UAnimMontage* SitOnGroundCrouchingEndMontage; // 0x928
	UAnimMontage* LayOnGroundStandingStartMontage; // 0x930
	UAnimMontage* LayOnGroundStandingEndMontage; // 0x938
	UAnimMontage* LayOnGroundCrouchingStartMontage; // 0x940
	UAnimMontage* LayOnGroundCrouchingEndMontage; // 0x948
	UAnimSequenceBase* SittingOnGroundAnimation; // 0x950
	UAnimSequenceBase* LyingOnGroundAnimation; // 0x958
	UAnimMontage* LightFlareMontage; // 0x960
	UAnimMontage* ArmTrapMontage; // 0x968
	UAnimMontage* FishingEnterMontage; // 0x970
	UAnimMontage* FishingLeaveMontage; // 0x978
	UAnimMontage* FishingCastMontage; // 0x980
	UAnimMontage* FishingLongCastEndMontage; // 0x988
	UAnimMontage* FishingShortCastEndMontage; // 0x990
	UAnimMontage* FishingPullStartMontage; // 0x998
	UAnimMontage* FishingPullEndMontage; // 0x9a0
	UAnimMontage* FishingFishCaughtMontage; // 0x9a8
	UAnimMontage* FishingKeepFishMontage; // 0x9b0
	UAnimMontage* FishingDiscardFishMontage; // 0x9b8
	UAnimMontage* FishingWireBreakMontage; // 0x9c0
	UAnimMontage* BasicDance1Montage; // 0x9c8
	UAnimMontage* BasicDance2Montage; // 0x9d0
	UAnimMontage* BasicDance3Montage; // 0x9d8
	UAnimMontage* BasicDance4Montage; // 0x9e0
	UAnimMontage* BasicDance5Montage; // 0x9e8
	UAnimMontage* AdvanceDance1Montage; // 0x9f0
	UAnimMontage* AdvanceDance2Montage; // 0x9f8
	UAnimMontage* AdvanceDance3Montage; // 0xa00
	UAnimMontage* AdvanceDance4Montage; // 0xa08
	UAnimMontage* AdvanceDance5Montage; // 0xa10
	UAnimMontage* AdvanceDance6Montage; // 0xa18
	UAnimMontage* AdvanceDance7Montage; // 0xa20
	FPrisonerTurnMontageDescription TurnMontageDescription; // 0xa28
	float MinThrowItemSpeed; // 0xa58
	float MaxThrowItemSpeed; // 0xa5c
	float MinScreenCenterDotOpacityDecreaseDelay; // 0xa60
	float MaxScreenCenterDotOpacityDecreaseDelay; // 0xa64
	float ScreenCenterDotOpacityDecrease; // 0xa68
	float ScreenCenterDotOpacityIncrease; // 0xa6c
	float ShortThrowReductionMultiplier; // 0xa70
	float ThrowingObstacleCheckOffset; // 0xa74
	float ThrowingObstacleOffset; // 0xa78
	TMap<EThrowingAnimationType, FThrowingAnimationSet> ThrowingAnimationSets; // 0xa80
	float RespawnTime; // 0xad0
	UCurveFloat* FocusModeZoomEffectCurve; // 0xad8
	float FocusModeZoomSpeed; // 0xae0
	TArray<UCircularMenuSegmentInfo*> SelfInteractionSegmentInfo; // 0xae8
	UPrisonerPrisonWalletComponent* PrisonWalletComponentClass; // 0xaf8
	UPrisonerMusicPlayerComponent* MusicPlayerComponentClass; // 0xb00
	float WetnessReachableFromSkyChecksInterval; // 0xb08
	float DedicatedServerHandleFootstepInterval; // 0xb0c
	float PlayInstrumentEventNetworkDelay; // 0xb10
	float PlayInstrumentExitStateDuration; // 0xb14
	float BreastSizeMin; // 0xb18
	float BreastSizeMax; // 0xb1c
	float BreastSizeDeluxeModifier; // 0xb20
	float BreastSizeAdminModifier; // 0xb24
	FVector PenisLocationLean; // 0xb28
	FVector PenisLocationFat; // 0xb34
	FVector PenisHandleLocationLean; // 0xb40
	FVector PenisHandleLocationFat; // 0xb4c
	float PenisMinSizeHandleZ; // 0xb58
	float PenisMaxSizeHandleZ; // 0xb5c
	float PenisSizeMin; // 0xb60
	float PenisSizeMax; // 0xb64
	float PenisSizeMaxInCharacterCreation; // 0xb68
	float PenisSizeDeluxeModifier; // 0xb6c
	float PenisGrowOverTimeThreshold; // 0xb70
	float UnmountSpeedThresholdForRagdoll; // 0xb74
	float MountTiltAngleForRagdoll; // 0xb78
	float RareSuicideAnimationChance; // 0xb7c
	float HairGrowthTotalTime; // 0xb80
	float FacialHairGrowthTotalTime; // 0xb84
	float HairUpdateRate; // 0xb88
	float MaxRestingAngle; // 0xb8c
	float GenericAcceptanceRadius; // 0xb90
	float DistanceWhereRotationStarts; // 0xb94
	UNotificationDescription* AutoTriggeredVomitingNotification; // 0xb98
	UNotificationDescription* AutoTriggeredUrinationNotification; // 0xba0
	UNotificationDescription* AutoTriggeredDefecationNotification; // 0xba8
	UPrisonerUIDataImpl* UIDataClass; // 0xbb0
	UAkAudioEvent* DefecateForcedAudioEvent; // 0xbb8
	UAkAudioEvent* UrinateForcedAudioEvent; // 0xbc0
	UParticleSystem* DiarrheaParticleSystem; // 0xbc8
	FPrisonerCommonData_ResponseIdles ResponseIdles; // 0xbd0
};

struct UMaterialExpressionSkyAtmosphereLightDiskLuminance : UMaterialExpression {
	int32_t LightIndex; // 0x40
};

struct UClientSettingsMenu : UConZSettingsMenu {
	UMenuButton* _apply; // 0x280
	UMenuButton* _revert; // 0x288
	UMenuButton* _reset; // 0x290
	UMenuButton* _back; // 0x298
	UVerticalBox* _messageBoxPanel; // 0x2a0
	UInputWidget* _inputWidget; // 0x2a8
	UAudioDeviceDisplay* _audioDeviceDisplay; // 0x2b0
};

struct ULockProtectionTag : UUpgradeItemTag {
	UParticleSystem* FailureParticles; // 0x38
	UAkAudioEvent* FailureAudio; // 0x40
	UParticleSystem* FailureParticlesInWorld; // 0x48
	UAkAudioEvent* FailureAudioInWorld; // 0x50
	FVector FailureParticlesScaleInWorld; // 0x58
	float _baseDamage; // 0x64
};

struct UChaosDestructionListener : USceneComponent {
	char bIsCollisionEventListeningEnabled : 1; // 0x1f8
	char bIsBreakingEventListeningEnabled : 1; // 0x1f8
	char bIsTrailingEventListeningEnabled : 1; // 0x1f8
	FChaosCollisionEventRequestSettings CollisionEventRequestSettings; // 0x1fc
	FChaosBreakingEventRequestSettings BreakingEventRequestSettings; // 0x214
	FChaosTrailingEventRequestSettings TrailingEventRequestSettings; // 0x22c
	TSet<AChaosSolverActor*> ChaosSolverActors; // 0x248
	TSet<AGeometryCollectionActor*> GeometryCollectionActors; // 0x298
	FMulticastInlineDelegate OnCollisionEvents; // 0x2e8
	FMulticastInlineDelegate OnBreakingEvents; // 0x2f8
	FMulticastInlineDelegate OnTrailingEvents; // 0x308
};

struct UMissionDataGroup : UDataAsset {
	FString MissionRootPath; // 0x30
	UAkAudioEvent* MissionStartedSound; // 0x40
	UAkAudioEvent* MissionCompletedSound; // 0x48
	UAkAudioEvent* MissionFailedSound; // 0x50
	UAkAudioEvent* ObjectiveStartedSound; // 0x58
	UAkAudioEvent* ObjectiveCompletedSound; // 0x60
	UAkAudioEvent* ObjectiveFailedSound; // 0x68
	TMap<AMission*, FMissionData> MainStoryMissions; // 0x70
	TMap<AMission*, FMissionData> SideStoryMissions; // 0xc0
	TMap<AMission*, FMissionData> TutorialMissions; // 0x110
};

struct UEditNormalsTool : UMultiSelectionTool {
	UEditNormalsToolProperties* BasicProperties; // 0x90
	UEditNormalsAdvancedProperties* AdvancedProperties; // 0x98
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xa0
};

struct UEditPivotTool : UMultiSelectionTool {
	UEditPivotToolProperties* TransformProps; // 0x98
	UEditPivotToolActionPropertySet* EditPivotActions; // 0xa0
	TArray<FEditPivotTarget> ActiveGizmos; // 0x178
};

struct UUI_Metabolism_STATS_C : UMetabolismStatsPanel {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2d0
};

struct UInventoryPositionData2D : UInventoryPositionData {
	int32_t PositionX; // 0x28
	int32_t PositionY; // 0x2c
	char Rotation; // 0x30
	bool IsLoading; // 0x31
};

struct UInventoryItemData2D : UInventoryItemData {
	int32_t SizeX; // 0x30
	int32_t SizeY; // 0x34
};

struct UMenuAnchor : UContentWidget {
	UUserWidget* MenuClass; // 0x120
	FDelegate OnGetMenuContentEvent; // 0x128
	FDelegate OnGetUserMenuContentEvent; // 0x138
	EMenuPlacement Placement; // 0x148
	bool bFitInWindow; // 0x149
	bool ShouldDeferPaintingAfterWindowContent; // 0x14a
	bool UseApplicationMenuStack; // 0x14b
	FMulticastInlineDelegate OnMenuOpenChanged; // 0x150
};

struct ADeathmatchLocationMarker : AGameEventLocationMarker {
	FDeathmatchParameters DeathmatchParameters; // 0x418
	FVector FocusOffset; // 0x42c
	float MinimalRadius; // 0x438
};

struct USmoothBrushOpProps : UBaseSmoothBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	bool bPreserveUVFlow; // 0x68
};

struct APrisoner : AConZCharacter {
	UPrisonerSkillComponent* SkillComponent; // 0x7c8
	UPrisonerInventoryComponent* InventoryComponent; // 0x7d0
	UMeleeCombatComponent* MeleeCombatComponent; // 0x7d8
	UHitReactComponent* HitReactComponent; // 0x7e0
	UPhysicalAnimationComponent* PhysicalAnimationComponent; // 0x7e8
	UInteractionComponent* InteractionComponent; // 0x7f0
	UPawnSensingComponent* SensingComponent; // 0x7f8
	UBaseInteractionComponent* BaseInteractionComponent; // 0x800
	bool IgnoreMovementSettings; // 0x808
	bool OverrideAimOffset; // 0x809
	FRotator AimOffsetOverride; // 0x80c
	AActor* EyesLookAtTargetOverride; // 0x818
	bool OverrideEyesRotation; // 0x820
	float EyesYawDeltaOverride; // 0x824
	float EyesPitchDeltaOverride; // 0x828
	bool IsFriendly; // 0x82c
	bool CanEverBeKnockedOutByMeleeAttack; // 0x82d
	bool ShouldOverrideCharacterTemplate; // 0x82e
	FCharacterTemplate CharacterTemplateOverride; // 0x830
	FAttachmentSocket LeftHandAttachmentSocket; // 0x8b8
	FAttachmentSocket RightHandAttachmentSocket; // 0x8c8
	FAttachmentSocket LeftShoulderHolsterSocket; // 0x8d8
	FAttachmentSocket RightShoulderHolsterSocket; // 0x8e8
	FMulticastInlineDelegate TabModeOpened; // 0x9e8
	FMulticastInlineDelegate TabModeClosed; // 0x9f8
	FMulticastInlineDelegate PanelsClosed; // 0xa08
	FMulticastInlineDelegate HoveredActorChanged; // 0xa18
	bool RespawnOnKill; // 0xa50
	float IKOffsetLeftFoot; // 0xa54
	float IKOffsetRightFoot; // 0xa58
	EPrisonerBorderCrossingPenalty BorderCrossingPenalty; // 0xa5c
	FMulticastInlineDelegate BorderCrossingPenaltyChange; // 0xa60
	UPrisonerBodySimulationComponent* _bodySimulationComponent; // 0xc38
	UThermalSensorComponent* _skinThermalSensingComponent; // 0xc40
	UUserProfile* _userProfile; // 0xc48
	FString _userId; // 0xc50
	FDbIntegerId _serverUserProfileId; // 0xc60
	FString _userProfileName; // 0xc68
	FString _userFakeName; // 0xc78
	bool _isEnabled; // 0xda8
	UParticleSystemComponent* _waterParticlesComponentWhenIdle; // 0xdb0
	UParticleSystemComponent* _waterParticlesComponentWhenMoving; // 0xdb8
	UParticleSystemComponent* _waterParticlesComponentWhenDiving; // 0xdc0
	EPrisonerStance _desiredStance; // 0xdce
	float _targetCrouchStage; // 0xddc
	EPrisonerMovementPace _desiredPace; // 0xde0
	bool _freeLookEnabled; // 0xde3
	bool _shouldIgnoreHeadTurningAndLeaning; // 0xde4
	bool _postFreeLookControllerRotationBlendActive; // 0xe0c
	FRotator _repAimOffset; // 0xe1c
	bool _inDanger; // 0xe38
	FVector _lastSafeLocation; // 0xe50
	APrisonerCorpse* _lastCorpse; // 0xe60
	APrisonerCorpse* _lastEventCorpse; // 0xe68
	float _targetLeanAmount; // 0xe9c
	AActor* _meleeTarget; // 0x1650
	UMeleeSkill* _activeMeleeSkill; // 0x1660
	AActor* _rotationTarget; // 0x1678
	UUnarmedCombatInputRedirector* _unarmedCombatInputRedirector; // 0x1680
	USkillEventHandler* _skillEventHandler; // 0x1688
	AWeapon* _weapon; // 0x16b0
	AFishingRod* _fishingRod; // 0x16b8
	AItem* _itemInHands; // 0x16c0
	EScopingWithItemInHandsState _scopingWithItemInHandsState; // 0x16e5
	EWeaponAimingType _weaponAimingType; // 0x1710
	char _itemInHandsVisualObstructionDepthRep; // 0x1734
	int32_t _appearanceIndex; // 0x1820
	int32_t _tattooIndex; // 0x1824
	float _breastSizeDesired; // 0x1828
	float _breastSizeModifier; // 0x182c
	char _breastSizePacked; // 0x1830
	float _penisSizeDesired; // 0x1834
	float _penisSizeModifier; // 0x1838
	bool _shouldPenisAndBreastsGrowOverTime; // 0x183c
	char _penisSizePacked; // 0x183d
	float _bellyJiggleAmountCached; // 0x1840
	float _breastJiggleAmountCached; // 0x1844
	bool _isInCombatMode; // 0x1868
	AItem* _leftShoulderHolsteredItemReplicated; // 0x18c0
	AItem* _rightShoulderHolsteredItemReplicated; // 0x18d0
	FTimerHandle _interactDefaultContextMenuTimerHandle; // 0x1918
	TArray<APrisoner*> _examinedBy; // 0x1920
	UMaterialInstanceDynamic* _tacticsBlobMaterial; // 0x1930
	TArray<UParticleSystemComponent*> _bodyPartEffects; // 0x1938
	UBondageComponent* _handsBondage; // 0x1948
	UPrisonerPrisonWalletComponent* _prisonWalletComponent; // 0x1950
	UPrisonerFishingComponent* _fishingComponent; // 0x1958
	UPrisonerMusicPlayerComponent* _musicPlayerComponent; // 0x1960
	UPrisonerTradingComponent* _tradingComponent; // 0x1968
	UPrisonerThrowComponent* _throwingComponent; // 0x1970
	TWeakObjectPtr<AItemDropPlaceholder> _itemDropPlaceholder; // 0x1984
	TWeakObjectPtr<UObject> _currentlyDroppingItem; // 0x1990
	uint32_t _packedWaterWeight; // 0x19a8
	AGameEventBase* _gameEvent; // 0x19d0
	UPrisonerLoadout* _gameEventLoadout; // 0x19d8
	FPrisonerNearbyFoliageInfo _nearbyFoliageInfo; // 0x19f0
	FPrisonerNearbyFoliageInfo _collidingNearbyFoliageInfo; // 0x1a00
	UWidgetComponent* _nameWidgetComponent; // 0x1ad0
	int32_t _chipLightColorIndex; // 0x1ad8
	UBaseItemTag* SaveSpawnLocationTag; // 0x1ae0
	FDeluxeVersion _deluxeVersion; // 0x1b04
	TWeakObjectPtr<APrisoner> _examinedPrisoner; // 0x1b0c
	bool _killClaimed; // 0x1b14
	EPlayingInstrumentState _playingInstrumentState; // 0x1b30
	ECarryingItemState _carryingItemState; // 0x1b32
	bool _shouldShowPenisOverride; // 0x1b60
	FPrisonerMountReplication _repMount; // 0x1b80
	UMIDIDeviceController* _midiDeviceController; // 0x1b90
	bool _hasInfiniteAmmo; // 0x1bd0
	bool _isInGodMode; // 0x1bd1
	bool _isImmortal; // 0x1bd2
	bool _isSuperJumpEnabled; // 0x1bd3
	float _hairLength; // 0x1bf8
	float _facialHairLength; // 0x1bfc
	bool _enablePerComponentReplicationFrequency; // 0x1c0c
	float _componentsReplicationFrequency[0x5]; // 0x1c10
	UNavigationInvokerComponent* _navigationInvokerComponent; // 0x1c80
	FGameplayTag LegsInjuryTag; // 0x1d00
	bool _isLimping; // 0x1d66
	EVehicleWeaponAimingStance _vehicleWeaponAimingStance; // 0x1d7c
	float _vehicleAimingYawReplicated; // 0x1da8
	bool _hasExplodedHead; // 0x1db8
	TWeakObjectPtr<AClothesItem> _activeParachute; // 0x1e34
	UPrisonerCommonData* _commonData; // 0x1e40
};

struct UMaterialExpressionRotateAboutAxis : UMaterialExpression {
	FExpressionInput NormalizedRotationAxis; // 0x40
	FExpressionInput RotationAngle; // 0x54
	FExpressionInput PivotPoint; // 0x68
	FExpressionInput position; // 0x7c
	float Period; // 0x90
};

struct APaperTileMapActor : AActor {
	UPaperTileMapComponent* RenderComponent; // 0x220
};

struct UDamageDirectionIndicator : UObject {
	bool visible; // 0x28
	UTexture* Texture; // 0x30
	float Radius; // 0x38
	float OpacityMultiplier; // 0x3c
	float DefaultDelayDuration; // 0x40
	float DefaultSustainDuration; // 0x44
	float DefaultReleaseDuration; // 0x48
};

struct ULevelUpNotificationDescription : UNotificationDescription {
	USkill* Skill; // 0x40
	ESkillLevel skillLevel; // 0x48
};

struct UModularTooltipElement_AffectedBy : UModularTooltipElement {
	UTextBlock* _sourceTextBlock; // 0x2e8
	UOverlay* _affectElementOverlay; // 0x2f0
};

struct URepairableItemTag : UBaseItemTag {
	FRepairableParams Params; // 0x30
};

struct UTradeableItemTag : UBaseItemTag {
	FTradeableTagParams TradeableParams; // 0x30
};

struct UNiagaraDataInterfaceFieldSystem : UNiagaraDataInterface {
	UBlueprint* BlueprintSource; // 0x38
	AActor* SourceActor; // 0x40
	FIntVector FieldDimensions; // 0x48
	FVector MinBounds; // 0x54
	FVector MaxBounds; // 0x60
};

struct ULiveLinkTimecodeProvider : UTimecodeProvider {
	FLiveLinkSubjectKey SubjectKey; // 0x30
	ELiveLinkTimecodeProviderEvaluationType Evaluation; // 0x48
	bool bOverrideFrameRate; // 0x4c
	FFrameRate OverrideFrameRate; // 0x50
	int32_t BufferSize; // 0x58
};

struct UAkEventCallbackInfo : UAkCallbackInfo {
	int32_t PlayingID; // 0x30
	int32_t EventId; // 0x34
};

struct UEditableGameplayTagQueryExpression_AllTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UAnimSharingStateInstance : UAnimInstance {
	UAnimSequence* AnimationToPlay; // 0x2b8
	float PermutationTimeOffset; // 0x2c0
	float PlayRate; // 0x2c4
	bool bStateBool; // 0x2c8
	UAnimSharingInstance* Instance; // 0x2d0
};

struct UMaterialExpressionViewProperty : UMaterialExpression {
	EMaterialExposedViewProperty Property; // 0x40
};

struct UMovieScene3DAttachSection : UMovieScene3DConstraintSection {
	FName AttachSocketName; // 0x118
	FName AttachComponentName; // 0x120
	EAttachmentRule AttachmentLocationRule; // 0x128
	EAttachmentRule AttachmentRotationRule; // 0x129
	EAttachmentRule AttachmentScaleRule; // 0x12a
	EDetachmentRule DetachmentLocationRule; // 0x12b
	EDetachmentRule DetachmentRotationRule; // 0x12c
	EDetachmentRule DetachmentScaleRule; // 0x12d
};

struct UMovieSceneCameraShakeSourceTriggerTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct UEditableGameplayTagQueryExpression_NoExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UMaterialExpressionReroute : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UWeaponAttachmentMagazineAnimInstance : UItemAnimInstance {
	int32_t _ammoCount; // 0x2d0
	bool _hasAmmo; // 0x2d4
	bool _isAttachedToWeapon; // 0x2d5
	EMagazineAmmoCountType _ammoCountType; // 0x2d6
};

struct UPriceCategory : UDataAsset {
	float Price; // 0x30
};

struct AShark : ALargeAquaticAnimal {
	UParticleSystem* _sharkBiteBloodPS; // 0x7f8
	UParticleSystemComponent* _sharkBiteBloodPSC; // 0x800
	float _biteParticlesScale; // 0x808
	FName _spawnBiteAttackParticlesSocketName; // 0x80c
	UParticleSystem* _onDeathPS; // 0x818
	UParticleSystemComponent* _onDeathPSC; // 0x820
	FName _onDeathParticlesSocketName; // 0x828
};

struct UUI_DropdownMenuWidget_C : UDropdownMenuWidget {
	UScrollBox* ScrollPanel; // 0x280
};

struct UMaterialBillboardComponent : UPrimitiveComponent {
	TArray<FMaterialSpriteElement> Elements; // 0x448
};

struct UMetabolismStatsPanel : UUserWidget {
	UMetabolismRadialAttributeProgressBar* _str_progressWidget; // 0x260
	UMetabolismRadialAttributeProgressBar* _con_progressWidget; // 0x268
	UMetabolismRadialAttributeProgressBar* _dex_progressWidget; // 0x270
	UMetabolismRadialAttributeProgressBar* _int_progressWidget; // 0x278
	UMetabolismSkillProgressionPanel* _skillProgressionPanel; // 0x280
	UMetabolismBasicInfoPanel* _basicInfoPanel; // 0x288
	UMetabolismPerformanceDataPanel* _performanceDataPanel; // 0x290
	UMetabolismBodyStatsPanel* _bodyStatsPanel; // 0x298
};

struct ULightmassPrimitiveSettingsObject : UObject {
	FLightmassPrimitiveSettings LightmassSettings; // 0x28
};

struct AHip_Flask1_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct AWeaponScope_Dragunov_C : AWeaponAttachmentScope {
	UDummyCollisionCapsule* ScopeViewCollision; // 0x950
};

struct UCollisionGeometryVisualizationProperties : UInteractiveToolPropertySet {
	float LineThickness; // 0x60
	bool bShowHidden; // 0x64
	FColor Color; // 0x68
};

struct AGameSession : AInfo {
	int32_t MaxSpectators; // 0x220
	int32_t MaxPlayers; // 0x224
	int32_t MaxPartySize; // 0x228
	char MaxSplitscreensPerConnection; // 0x22c
	bool bRequiresPushToTalk; // 0x22d
	FName SessionName; // 0x230
};

struct AMatineeActor : AActor {
	UInterpData* MatineeData; // 0x220
	FName MatineeControllerName; // 0x228
	float PlayRate; // 0x230
	char bPlayOnLevelLoad : 1; // 0x234
	char bForceStartPos : 1; // 0x234
	float ForceStartPosition; // 0x238
	char bLooping : 1; // 0x23c
	char bRewindOnPlay : 1; // 0x23c
	char bNoResetOnRewind : 1; // 0x23c
	char bRewindIfAlreadyPlaying : 1; // 0x23c
	char bDisableRadioFilter : 1; // 0x23c
	char bClientSideOnly : 1; // 0x23c
	char bSkipUpdateIfNotVisible : 1; // 0x23c
	char bIsSkippable : 1; // 0x23c
	int32_t PreferredSplitScreenNum; // 0x240
	char bDisableMovementInput : 1; // 0x244
	char bDisableLookAtInput : 1; // 0x244
	char bHidePlayer : 1; // 0x244
	char bHideHud : 1; // 0x244
	TArray<FInterpGroupActorInfo> GroupActorInfos; // 0x248
	char bShouldShowGore : 1; // 0x258
	TArray<UInterpGroupInst*> GroupInst; // 0x260
	TArray<FCameraCutInfo> CameraCuts; // 0x270
	char bIsPlaying : 1; // 0x280
	char bReversePlayback : 1; // 0x280
	char bPaused : 1; // 0x280
	char bPendingStop : 1; // 0x280
	float InterpPosition; // 0x284
	char ReplicationForceIsPlaying; // 0x28c
	FMulticastInlineDelegate OnPlay; // 0x290
	FMulticastInlineDelegate OnStop; // 0x2a0
	FMulticastInlineDelegate OnPause; // 0x2b0
};

struct UMeleeAttackCollisionCapsule : UCapsuleComponent {
	FGameplayTag _attachment; // 0x468
	FDataTableRowHandle _weaponDescRef; // 0x470
};

struct UPickupItemAssetData : UInteractionAssetData {
	AItem* Item; // 0x30
};

struct APhotoModePawn : APawn {
	UPhotoModeMainPanel* HudWidgetClass; // 0x280
	UPrisonerPhotoModeAnimInstance* AnimInstanceClass; // 0x288
	UCineCameraComponent* _camera; // 0x2a0
	USpotLightComponent* _light; // 0x2a8
	UVisionEffectsComponent* _visionEffects; // 0x2b0
	UAkAudioEvent* _shutterSound; // 0x2b8
	float _maxFocusDistance; // 0x2c0
	float _collisionSphereRadius; // 0x2c4
	float _minOrbitingDistance; // 0x2c8
	float _maxDistanceFromTarget; // 0x2cc
	float _desiredOrbitDistance; // 0x2d0
	float _maxMultiplayerCameraHeightDifference; // 0x2d4
	float _maxMultiplayerExposureValue; // 0x2d8
	float _maxMultiplayerCameraFOV; // 0x2dc
	float _keyInputCameraSpeed; // 0x2e0
	float _timeDilationInterpSpeed; // 0x2e4
};

struct AGeometryCollectionActor : AActor {
	UGeometryCollectionComponent* GeometryCollectionComponent; // 0x220
	UGeometryCollectionDebugDrawComponent* GeometryCollectionDebugDrawComponent; // 0x228
};

struct UAnimNotify_AkEvent_C : UAnimNotify {
	FString Attach Name; // 0x38
	UAkAudioEvent* Event; // 0x48
	bool Follow; // 0x50
	FString EventName; // 0x58
};

struct UWrapBox : UPanelWidget {
	FVector2D InnerSlotPadding; // 0x120
	float WrapWidth; // 0x128
	float WrapSize; // 0x12c
	bool bExplicitWrapWidth; // 0x130
	bool bExplicitWrapSize; // 0x131
	EOrientation Orientation; // 0x132
};

struct UDatasmithCommonTessellationOptions : UDatasmithOptionsBase {
	FDatasmithTessellationOptions Options; // 0x28
};

struct ULadderMarkersComponent : USceneComponent {
	TArray<FLadderMarker> _ladderMarkers; // 0x1f8
};

struct UWaterWavesAsset : UObject {
	UWaterWaves* WaterWaves; // 0x28
};

struct UAssetManager : UObject {
	TArray<UObject*> ObjectReferenceList; // 0x2c0
	bool bIsGlobalAsyncScanEnvironment; // 0x2d0
	bool bShouldGuessTypeAndName; // 0x2d1
	bool bShouldUseSynchronousLoad; // 0x2d2
	bool bIsLoadingFromPakFiles; // 0x2d3
	bool bShouldAcquireMissingChunksOnLoad; // 0x2d4
	bool bOnlyCookProductionAssets; // 0x2d5
	bool bIsBulkScanning; // 0x2d6
	bool bIsPrimaryAssetDirectoryCurrent; // 0x2d7
	bool bIsManagementDatabaseCurrent; // 0x2d8
	bool bUpdateManagementDatabaseAfterScan; // 0x2d9
	bool bIncludeOnlyOnDiskAssets; // 0x2da
	bool bHasCompletedInitialScan; // 0x2db
	int32_t NumberOfSpawnedNotifications; // 0x2dc
};

struct UMaterialExpressionVertexInterpolator : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UVirtualTextureBuilder : UObject {
	UVirtualTexture2D* Texture; // 0x28
	uint64_t BuildHash; // 0x30
};

struct AVolumetricLightmapDensityVolume : AVolume {
	FInt32Interval AllowedMipLevelRange; // 0x258
};

struct UAkWwiseTree : UWidget {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnItemDragged; // 0x118
};

struct UFixedFrameRateCustomTimeStep : UEngineCustomTimeStep {
	FFrameRate FixedFrameRate; // 0x28
};

struct UMaterialExpressionLandscapeLayerCoords : UMaterialExpression {
	ETerrainCoordMappingType MappingType; // 0x40
	ELandscapeCustomizedCoordType CustomUVType; // 0x41
	float MappingScale; // 0x44
	float MappingRotation; // 0x48
	float MappingPanU; // 0x4c
	float MappingPanV; // 0x50
};

struct UABP_FishingReel_C : UFishingReelAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator; // 0x2f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x348
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x3f8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x4a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x4f0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x590
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x6e8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x710
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x868
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x890
};

struct UNiagaraDataInterfaceArrayBool : UNiagaraDataInterfaceArray {
	TArray<bool> BoolData; // 0x50
};

struct AMatineeActorCameraAnim : AMatineeActor {
	UCameraAnim* CameraAnim; // 0x2c8
};

struct UInteractiveGizmoManager : UObject {
	TArray<FActiveGizmo> ActiveGizmos; // 0x30
	TMap<FString, UInteractiveGizmoBuilder*> GizmoBuilders; // 0x58
};

struct ABP_WeaponBullet_WoodenArrowMetalTip_C : AProjectileArrow {
	FPointerToUberGraphFrame UberGraphFrame; // 0x458
	UParticleSystemComponent* ParticleSystem; // 0x460
};

struct UInterpTrackVectorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0x90
};

struct AAtmosphericFog : AInfo {
	UAtmosphericFogComponent* AtmosphericFogComponent; // 0x220
};

struct UHierarchicalInstancedStaticMeshComponent : UInstancedStaticMeshComponent {
	TArray<int32_t> SortedInstances; // 0x590
	int32_t NumBuiltInstances; // 0x5a0
	FBox BuiltInstanceBounds; // 0x5a8
	FBox UnbuiltInstanceBounds; // 0x5c4
	TArray<FBox> UnbuiltInstanceBoundsList; // 0x5e0
	char bEnableDensityScaling : 1; // 0x5f0
	int32_t OcclusionLayerNumNodes; // 0x5f8
	FBoxSphereBounds CacheMeshExtendedBounds; // 0x5fc
	bool bDisableCollision; // 0x618
	int32_t InstanceCountToRender; // 0x61c
};

struct UMaterialExpressionParticleSubUV : UMaterialExpressionTextureSample {
	char bBlend : 1; // 0x60
};

struct UTextureRenderTarget2DArray : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	int32_t Slices; // 0xe8
	FLinearColor ClearColor; // 0xec
	EPixelFormat OverrideFormat; // 0xfc
	char bHDR : 1; // 0xfd
	char bForceLinearGamma : 1; // 0xfd
};

struct UWindowTitleBarAreaSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UOctreeDynamicMeshComponent : UBaseDynamicMeshComponent {
	bool bExplicitShowWireframe; // 0x4d0
};

struct UScaleKelvinletBrushOpProps : UBaseKelvinletBrushOpProps {
	float Strength; // 0x70
	float Falloff; // 0x74
};

struct UInflateBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct UBTNode : UObject {
	FString NodeName; // 0x30
	UBehaviorTree* TreeAsset; // 0x40
	UBTCompositeNode* ParentNode; // 0x48
};

struct UBTTask_MoveTo : UBTTask_BlackboardBase {
	float AcceptableRadius; // 0x98
	UNavigationQueryFilter* FilterClass; // 0xa0
	float ObservedBlackboardValueTolerance; // 0xa8
	char bObserveBlackboardValue : 1; // 0xac
	char bAllowStrafe : 1; // 0xac
	char bAllowPartialPath : 1; // 0xac
	char bTrackMovingGoal : 1; // 0xac
	char bProjectGoalLocation : 1; // 0xac
	char bReachTestIncludesAgentRadius : 1; // 0xac
	char bReachTestIncludesGoalRadius : 1; // 0xac
	char bStopOnOverlap : 1; // 0xac
	char bStopOnOverlapNeedsUpdate : 1; // 0xad
};

struct UUI_SpawnScreenWidget_C : USpawnScreen {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	UBorder* Blackout; // 0x2a0
	UBorder* PenaltyCountdown; // 0x2a8
	UButton* RespawnButton; // 0x2b0
	UOverlay* Scoreboard; // 0x2b8
	UButton* ScoreBoardButton; // 0x2c0
	UScaleBox* SpawnInterface; // 0x2c8
	UUI_GameEventLoadoutMenuWidget_C* UI_GameEventLoadoutMenuWidget; // 0x2d0
	UUI_SpawnMenuWidget_C* UI_SpawnMenuWidget; // 0x2d8
	UTextBlock* WaitTimeText; // 0x2e0
	bool InEvent; // 0x2e8
	float WaitTime; // 0x2ec
	UTournamentScoreboardWidget* _tournamentScoreboard; // 0x2f0
};

struct UMovieSceneTrack : UMovieSceneSignedObject {
	FMovieSceneTrackEvalOptions EvalOptions; // 0x50
	bool bIsEvalDisabled; // 0x55
	FGuid EvaluationFieldGuid; // 0x58
	FMovieSceneTrackEvaluationField EvaluationField; // 0x68
};

struct UCustomZoneSettingsMap : UUserWidget {
	UImage* _map; // 0x270
	UTextBlock* _infoLeft; // 0x278
	UTextBlock* _infoRight; // 0x280
	UButton* _buttonAddCircleRegion; // 0x288
	UButton* _buttonAddRectangleRegion; // 0x290
	UButton* _buttonRemoveRegion; // 0x298
	FLinearColor _buttonHighlightColor; // 0x2a0
	UMaterialInstanceDynamic* _mapMaterial; // 0x2b0
};

struct UItemActionSequence : UItemAction {
	bool _canBeCanceled; // 0x50
	FCharacterAndItemAnimation _animations; // 0x58
};

struct UParticleModuleOrbitBase : UParticleModule {
	char bUseEmitterTime : 1; // 0x30
};

struct UWeaponRecoilGroup : UDataAsset {
	float Up; // 0x30
	float Down; // 0x34
	float Left; // 0x38
	float Right; // 0x3c
};

struct UUI_HandPanel3_C : UHandPanel3 {
	UImage* Image_1; // 0x290
	UImage* Image_2; // 0x298
	UImage* Image_3; // 0x2a0
	UImage* Image_4; // 0x2a8
	USizeBox* SizeBox_1; // 0x2b0
	UUI_QuickAccessItemSwitcher3_C* UI_QuickAccessItemSwitcher3_1; // 0x2b8
	UUI_QuickAccessItemSwitcher3_C* UI_QuickAccessItemSwitcher3_4; // 0x2c0
	UUI_QuickAccessItemSwitcher3_C* UI_QuickAccessItemSwitcher3_5; // 0x2c8
	UUI_QuickAccessItemSwitcher3_C* UI_QuickAccessItemSwitcher3_6; // 0x2d0
	UUI_QuickAccessItemSwitcher3_C* UI_QuickAccessItemSwitcher3_7; // 0x2d8
	UUI_QuickAccessItemSwitcher3_C* UI_QuickAccessItemSwitcher3_8; // 0x2e0
	UUI_QuickAccessItemSwitcher3_C* UI_QuickAccessItemSwitcher3_9; // 0x2e8
	UUI_QuickAccessItemSwitcher3_C* UI_QuickAccessItemSwitcher3_10; // 0x2f0
};

struct APlaceableActorBase : AActor {
	FDbIntegerId _id; // 0x228
	UBoxComponent* _boxCollisionComponent; // 0x230
	int32_t _craftingIndex; // 0x23c
	float _ingredientMultiplier; // 0x240
	USceneComponent* _rootComponent; // 0x248
	UStaticMeshComponent* _staticMeshComponent_Main; // 0x250
	UStaticMeshComponent* _staticMeshComponent_Outline; // 0x258
	UStaticMeshComponent* _staticMeshComponent_Depth; // 0x260
	UStaticMeshComponent* _queryStaticMeshComponent; // 0x268
	UStaticMeshComponent* _directionIndicatorStaticMeshComponent; // 0x270
	UMaterialInstanceDynamic* _primaryMaterialAllowed; // 0x278
	UMaterialInstanceDynamic* _primaryMaterialDisallowed; // 0x280
	UMaterialInstanceDynamic* _outlineMaterial; // 0x288
	UMaterialInstanceDynamic* _depthMaterial; // 0x290
	EPlaceableStatusFlags _statusFlags; // 0x364
	int32_t _numTracesX; // 0x3ec
	int32_t _numTracesY; // 0x3f0
	float _traceHeightFactor; // 0x3f4
	float _maxPlacementAngle; // 0x3f8
	float _widgetHidingDistance; // 0x3fc
	float _fullWidgetHidingDistance; // 0x400
	float _widgetSwitchPeriod; // 0x404
	float _minDistanceToShowWidget; // 0x408
	float _syncPeriod; // 0x40c
	float _reachabilityMaxDifference; // 0x410
	float _directionIndicatorOffset; // 0x414
	FText _destroyInteractionText; // 0x418
	EPlacementBaseState _placementState; // 0x430
	FVector _replicatedLocation; // 0x434
	FVector _replicatedPlacedLocation; // 0x440
	FRotator _replicatedRotation; // 0x44c
	TArray<FPlaceableIngredient> _ingredients; // 0x458
	UMaterialInterface* _placementAllowedMaterialOverride; // 0x498
	UMaterialInterface* _placementDisallowedMaterialOverride; // 0x4a0
	UMaterialInterface* _outlineMaterialOverride; // 0x4a8
	UMaterialInterface* _depthMaterialOverride; // 0x4b0
};

struct ASlidingDoorStatic : ADoor {
	USceneComponent* ClosedPositionComponent; // 0x408
	USceneComponent* OpenPositionComponent; // 0x410
};

struct UPlatformMediaSource : UMediaSource {
	UMediaSource* MediaSource; // 0x80
};

struct USphereMotionTriggerComponent : UMotionTriggerComponent {
	USphereComponent* SphereCollisionComponent; // 0x518
	UStaticMeshComponent* VisualizationMeshComponent; // 0x520
	float _triggerRadius; // 0x528
	UStaticMesh* _visualizationMesh; // 0x530
};

struct UDLSSOverrideSettings : UObject {
	EDLSSSettingOverride EnableDLSSInEditorViewportsOverride; // 0x28
	EDLSSSettingOverride EnableScreenpercentageManipulationInDLSSEditorViewportsOverride; // 0x29
	EDLSSSettingOverride EnableDLSSInPlayInEditorViewportsOverride; // 0x2a
	bool bShowDLSSIncompatiblePluginsToolsWarnings; // 0x2b
	EDLSSSettingOverride ShowDLSSSDebugOnScreenMessages; // 0x2c
};

struct AARSkyLight : ASkyLight {
	UAREnvironmentCaptureProbe* CaptureProbe; // 0x230
};

struct UUI_ThrowingAccessItemWidget_C : UThrowingQuickAccessItemWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	UImage* ImageBackground; // 0x2c8
	UImage* LeftSquareBracketImage; // 0x2d0
	UImage* RightSquareBracketImage; // 0x2d8
	USizeBox* SizeBox_1; // 0x2e0
	UTextBlock* TextBlockItemSlotNumber; // 0x2e8
	FLinearColor TextColor; // 0x2f0
	FText _itemSlotNumber; // 0x300
	FLinearColor _alarmColor; // 0x318
};

struct UGizmoLocalFloatParameterSource : UGizmoBaseFloatParameterSource {
	float Value; // 0x48
	FGizmoFloatParameterChange LastChange; // 0x4c
};

struct ULiveLinkTransformController : ULiveLinkControllerBase {
	FLiveLinkTransformControllerData TransformData; // 0x30
};

struct AProjectileFlare : AProjectile {
	UParticleSystemComponent* _particleSystemComponent; // 0x418
	UPointLightComponent* _pointLightComponent; // 0x420
	UAkComponent* _akFlareComponent; // 0x428
	bool _hasParachute; // 0x430
	float _parachuteGravityScale; // 0x434
	float _parachuteEffectiveBallisticCoefficient; // 0x438
	FVector _parachuteParticlesScale; // 0x43c
	float _parachuteParticlesScaleSpeed; // 0x448
	UAkAudioEvent* _burnStart; // 0x450
	UAkAudioEvent* _burnEnd; // 0x458
	float _burnTime; // 0x460
};

struct ULocalPlayer : UPlayer {
	UGameViewportClient* ViewportClient; // 0x70
	EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x94
	APlayerController* PendingLevelPlayerControllerClass; // 0x98
	char bSentSplitJoin : 1; // 0xa0
	int32_t ControllerId; // 0xb8
};

struct UDrawAndRevolveTool : UInteractiveTool {
	UCurveControlPointsMechanic* ControlPointsMechanic; // 0xf8
	UConstructionPlaneMechanic* PlaneMechanic; // 0x100
	URevolveToolProperties* Settings; // 0x108
	UNewMeshMaterialProperties* MaterialProperties; // 0x110
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0x118
};

struct USecondarySmoothBrushOpProps : UBaseSmoothBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	bool bPreserveUVFlow; // 0x68
};

struct UBaseMediaSource : UMediaSource {
	FName PlayerName; // 0x80
};

struct ULiveLinkSettings : UObject {
	TArray<FLiveLinkRoleProjectSetting> DefaultRoleSettings; // 0x28
	ULiveLinkFrameInterpolationProcessor* FrameInterpolationProcessor; // 0x38
	TSoftObjectPtr<ULiveLinkPreset> DefaultLiveLinkPreset; // 0x40
	FDirectoryPath PresetSaveDir; // 0x68
	float ClockOffsetCorrectionStep; // 0x78
	ELiveLinkSourceMode DefaultMessageBusSourceMode; // 0x7c
	double MessageBusPingRequestFrequency; // 0x80
	double MessageBusHeartbeatFrequency; // 0x88
	double MessageBusHeartbeatTimeout; // 0x90
	double MessageBusTimeBeforeRemovingInactiveSource; // 0x98
	double TimeWithoutFrameToBeConsiderAsInvalid; // 0xa0
	FLinearColor ValidColor; // 0xa8
	FLinearColor InvalidColor; // 0xb8
	char TextSizeSource; // 0xc8
	char TextSizeSubject; // 0xc9
};

struct URadialForceComponent : USceneComponent {
	float Radius; // 0x1f8
	ERadialImpulseFalloff Falloff; // 0x1fc
	float ImpulseStrength; // 0x200
	char bImpulseVelChange : 1; // 0x204
	char bIgnoreOwningActor : 1; // 0x204
	float ForceStrength; // 0x208
	float DestructibleDamage; // 0x20c
	TArray<EObjectTypeQuery> ObjectTypesToAffect; // 0x210
};

struct UTimeSynchronizationSource : UObject {
	bool bUseForSynchronization; // 0x28
	int32_t FrameOffset; // 0x2c
};

struct UGrapplingWidget : UUserWidget {
	UImage* _gameProgress; // 0x260
	UImage* _grapplingValue; // 0x268
	UTextBlock* _instructionText; // 0x270
};

struct UPrisonerSkillComponent : UActorComponent {
	TArray<FPrisonerInitialSkillInfo> InitialSkills; // 0xb0
	float TickFrequency; // 0xc0
	TArray<USkill*> _skills; // 0xd0
	TArray<USkillAction*> _actions; // 0xe0
	USkillClasses* _skillClasses; // 0x198
	TArray<AItem*> _lastSurroundingItems; // 0x1a0
	TArray<FSkillRecord> _replicatedSkills; // 0x238
	uint32_t _replicatedNoiseLevel; // 0x24c
};

struct UThrobber : UWidget {
	int32_t NumberOfPieces; // 0x108
	bool bAnimateHorizontally; // 0x10c
	bool bAnimateVertically; // 0x10d
	bool bAnimateOpacity; // 0x10e
	USlateBrushAsset* PieceImage; // 0x110
	FSlateBrush Image; // 0x118
};

struct UPBCTT_FootAbrasions : UPrisonerBodyConditionTreatmentItemTag {
	FFloatRange SeverityConstraint; // 0x50
	TArray<float> TreatmentDurationPerSeverityLevel; // 0x60
	TArray<float> TreatmentDurationPerUsePerSeverityLevel; // 0x70
	float StabilizationDurationReduction; // 0x80
	FPBCTT_FootAbrasions_SkillData SkillData[0x5]; // 0x88
};

struct ABP_Survival_Storage_CraftBarkRope_Objective_C : ACraftingObjective {
	USceneComponent* DefaultSceneRoot; // 0x348
};

struct UMagicLeapMeshTrackerComponent : USceneComponent {
	FMulticastInlineDelegate OnMeshTrackerUpdated; // 0x200
	bool ScanWorld; // 0x210
	EMagicLeapMeshType MeshType; // 0x211
	UBoxComponent* BoundingVolume; // 0x218
	EMagicLeapMeshLOD LevelOfDetail; // 0x220
	float PerimeterOfGapsToFill; // 0x224
	bool Planarize; // 0x228
	float DisconnectedSectionArea; // 0x22c
	bool RequestNormals; // 0x230
	bool RequestVertexConfidence; // 0x231
	EMagicLeapMeshVertexColorMode VertexColorMode; // 0x232
	TArray<FColor> BlockVertexColors; // 0x238
	FLinearColor VertexColorFromConfidenceZero; // 0x248
	FLinearColor VertexColorFromConfidenceOne; // 0x258
	bool RemoveOverlappingTriangles; // 0x268
	UMRMeshComponent* MRMesh; // 0x270
	int32_t BricksPerFrame; // 0x278
};

struct UGizmoWorldAxisSource : UObject {
	FVector Origin; // 0x30
	int32_t AxisIndex; // 0x3c
};

struct UCircularMenuSegmentIcons : UDataAsset {
	UTexture2D* UnselectedIcon; // 0x30
	UTexture2D* SelectedIcon; // 0x38
	UTexture2D* DisabledIcon; // 0x40
	UTexture2D* OverlayIcon; // 0x48
};

struct UGeometryCacheTrack : UObject {
	float Duration; // 0x28
};

struct AGlobalBirdSpawner2 : AActor {
	int32_t MaxSpawnInstances; // 0x220
	int32_t MaxCoastalBirdSpawnPerPlayer; // 0x224
	int32_t MaxContinentalBirdSpawnPerPlayer; // 0x228
	TArray<ABird2*> CoastalBirds; // 0x230
	TArray<ABird2*> ContinentalBirds; // 0x240
	float FlyingBirdSpawnAwayDistanceMin; // 0x250
	float FlyingBirdSpawnAwayDistanceMax; // 0x254
	float GroundBirdSpawnAwayDistanceMin; // 0x258
	float GroundBirdSpawnAwayDistanceMax; // 0x25c
	float MinSpawnInfrontDistance; // 0x260
	FGameplayTag BirdSpawnerMask; // 0x264
	int32_t BulkSpawn; // 0x26c
	TArray<EPhysicalSurface> AllowedSurfaces; // 0x270
	UBillboardComponent* Sprite; // 0x280
	TArray<ABird2*> _birds; // 0x290
};

struct UInventoryContainerHandsHolsters : UObject {
	UInventoryContainerWidget2* _handWidget; // 0x38
	UInventoryContainerWidget2* _shoulderLeftWidget; // 0x40
	UInventoryContainerWidget2* _shoulderRightWidget; // 0x48
	FInventoryContainerHandsHolstersData _data; // 0x60
	FInventoryContainerHandsHolstersData _oldData; // 0x80
};

struct AConZEconomyManager : AActor {
	UTraderManagingComponent* _traderManagingComponent; // 0x220
	float _autoSaveInterval; // 0x228
	int32_t _tradeablesPerPage; // 0x240
	AItem* _cashItemClass; // 0x248
	FTradeOutpostProsperityLevelInfo _prosperityLevelInfoPerLevel[0x6]; // 0x250
	TMap<float, int32_t> _expensiveTradeablesSpawnChanceMap; // 0x2e8
	UCurveFloat* _playerPurchasePriceDeltaVsChanceCurve; // 0x338
	float _betterPurchasePricesChance; // 0x340
	TMap<FString, FTraderTradingData> _economyTable; // 0x348
	FTradeablesPerCategoryHelperStruct _purchaseablesPerCategory[0x1a]; // 0x398
	FTradeablesPerCategoryHelperStruct _tradeablesPerCategory[0x1a]; // 0x608
	FString _economyOverrideJSONFileName; // 0x878
	TMap<FName, UObject*> _tradeableAssetNameVsClassMapHelper; // 0x898
	bool _shouldIgnoreDatabaseSerialization; // 0x8e8
};

struct UMetabolismSkillProgressionTab : UUserWidget {
	UUserWidget* SkillProgressBarWidgetClass; // 0x260
	UWrapBox* _skillsWrapBox; // 0x268
	ESkillAttribute _skillType; // 0x278
	FText _skillAttributeName; // 0x280
};

struct UPrisonerAnimInstance_Vehicle2W : UAnimInstance {
	float _vehicle2WSpeed; // 0x2b8
	float _vehicle2WSpeedKmh; // 0x2bc
	float _steerAmount; // 0x2c0
	float _brakeAmount; // 0x2c4
	float _throttleAmount; // 0x2c8
	bool _isInCombatMode; // 0x2cc
	bool _isDriver; // 0x2cd
	bool _isBicycle; // 0x2ce
	float _vehicleRoll; // 0x2d0
	float _lerpedBrakeThrottle; // 0x2d4
	float _inAirTimer; // 0x2d8
	EVehicleEngineState _engineState; // 0x2dc
	UBlendSpace* _driverIdleAnimation; // 0x2e0
	UBlendSpace* _driverReverseIdleAnimation; // 0x2e8
	FTransform _driverLHandleTransform; // 0x2f0
	FTransform _driverRHandleTransform; // 0x320
	FTransform _driverReverseSeatHandTransform; // 0x350
	FTransform _driverLFootRestTransform; // 0x380
	FTransform _driverRFootRestTransform; // 0x3b0
	UBlendSpace* _passengerIdleAnimation; // 0x3e0
	bool _useVehicleWAPLowerBodyIdleTP; // 0x3e8
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP; // 0x3f0
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP; // 0x3f8
	UAnimSequence* _startEngineStartAnimation; // 0x400
	UAnimSequence* _startEngineLoopAnimation; // 0x408
	UAnimSequence* _startEngineLongLoopAnimation; // 0x410
	UAnimSequence* _startEngineEndAnimation; // 0x418
	UAnimSequence* _standUpStartAnimation; // 0x420
	UAnimSequence* _standUpLoopAnimation; // 0x428
	UAnimSequence* _standUpEndAnimation; // 0x430
};

struct UParticleModuleAttractorPoint : UParticleModuleAttractorBase {
	FRawDistributionVector position; // 0x30
	FRawDistributionFloat Range; // 0x78
	FRawDistributionFloat Strength; // 0xa8
	char StrengthByDistance : 1; // 0xd8
	char bAffectBaseVelocity : 1; // 0xd8
	char bOverrideVelocity : 1; // 0xd8
	char bUseWorldSpacePosition : 1; // 0xd8
	char Positive_X : 1; // 0xd8
	char Positive_Y : 1; // 0xd8
	char Positive_Z : 1; // 0xd8
	char Negative_X : 1; // 0xd8
	char Negative_Y : 1; // 0xd9
	char Negative_Z : 1; // 0xd9
};

struct UPrisonerMovementSettings : UDataAsset {
	FPrisonerMovementSettings_Ground Ground; // 0x30
	FPrisonerMovementSettings_Air Air; // 0x1a0
	FPrisonerMovementSettings_Water Water; // 0x2c8
	FFloatInterval RotationRateMultiplierVsPerformanceRatio; // 0x31c
	FFloatInterval ClimbingSpeedMultiplierVsPerformanceRatio; // 0x324
	FFloatInterval WindowClimbingSpeedMultiplierVsPerformanceRatio; // 0x32c
};

struct UUserDefinedStruct : UScriptStruct {
	EUserDefinedStructureStatus Status; // 0xc0
	FGuid Guid; // 0xc4
};

struct UBaseMeshProcessingTool : USingleSelectionTool {
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xb0
};

struct UDestructibleFractureSettings : UObject {
	int32_t CellSiteCount; // 0x28
	FFractureMaterial FractureMaterialDesc; // 0x2c
	int32_t randomSeed; // 0x50
	TArray<FVector> VoronoiSites; // 0x58
	int32_t OriginalSubmeshCount; // 0x68
	TArray<UMaterialInterface*> Materials; // 0x70
	TArray<FDestructibleChunkParameters> ChunkParameters; // 0x80
};

struct UMetabolismSegmentedProgressBar : UUserWidget {
	TArray<FMetabolismSPBColorScheme> ColorSchemes; // 0x260
	FSlateBrush BrushOverride; // 0x270
	UImage* _progressBarImage; // 0x2f8
};

struct UNiagaraDataInterfaceRenderTarget2DArray : UNiagaraDataInterfaceRWBase {
	FIntVector Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe4
	char bOverrideFormat : 1; // 0xe5
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTarget2DArray*> ManagedRenderTargets; // 0x108
};

struct USurvivalSkill : UIntelligenceSkill {
	FCompassSkillParametersPerSkillLevel NoSkillParameters; // 0xa8
	FCompassSkillParametersPerSkillLevel BasicSkillParameters; // 0xa9
	FCompassSkillParametersPerSkillLevel MediumSkillParameters; // 0xaa
	FCompassSkillParametersPerSkillLevel AdvancedSkillParameters; // 0xab
	FCompassSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0xac
};

struct UNiagaraDataInterfaceGrid3D : UNiagaraDataInterfaceRWBase {
	FIntVector NumCells; // 0xd8
	float CellSize; // 0xe4
	int32_t NumCellsMaxAxis; // 0xe8
	ESetResolutionMethod SetResolutionMethod; // 0xec
	FVector WorldBBoxSize; // 0xf0
};

struct UBrushStampIndicator : UInteractiveGizmo {
	float BrushRadius; // 0x38
	float BrushFalloff; // 0x3c
	FVector BrushPosition; // 0x40
	FVector BrushNormal; // 0x4c
	bool bDrawIndicatorLines; // 0x58
	bool bDrawRadiusCircle; // 0x59
	int32_t SampleStepCount; // 0x5c
	FLinearColor LineColor; // 0x60
	float LineThickness; // 0x70
	bool bDepthTested; // 0x74
	bool bDrawSecondaryLines; // 0x75
	float SecondaryLineThickness; // 0x78
	FLinearColor SecondaryLineColor; // 0x7c
	UPrimitiveComponent* AttachedComponent; // 0x90
};

struct USynthComponentMonoWaveTable : USynthComponent {
	FMulticastInlineDelegate OnTableAltered; // 0x6c0
	FMulticastInlineDelegate OnNumTablesChanged; // 0x6d0
	UMonoWaveTableSynthPreset* CurrentPreset; // 0x6e0
};

struct UMIDIDeviceInputController : UObject {
	FMulticastInlineDelegate OnMIDINoteOn; // 0x28
	FMulticastInlineDelegate OnMIDINoteOff; // 0x38
	FMulticastInlineDelegate OnMIDIPitchBend; // 0x48
	FMulticastInlineDelegate OnMIDIAftertouch; // 0x58
	FMulticastInlineDelegate OnMIDIControlChange; // 0x68
	FMulticastInlineDelegate OnMIDIProgramChange; // 0x78
	FMulticastInlineDelegate OnMIDIChannelAftertouch; // 0x88
	int32_t DeviceID; // 0x98
	FString DeviceName; // 0xa0
};

struct UArcherySkill : URangedWeaponsSkill {
	float _drawWeightNoSkillValue; // 0xe8
	float _drawWeightBasicSkillValue; // 0xec
	float _drawWeightMediumSkillValue; // 0xf0
	float _drawWeightAdvancedSkillValue; // 0xf4
	float _drawWeightAboveAvancedSkillValue; // 0xf8
	float _holdTimeInFullDrawNoSkillValue; // 0xfc
	float _holdTimeInFullDrawBasicSkillValue; // 0x100
	float _holdTimeInFullDrawMediumSkillValue; // 0x104
	float _holdTimeInFullDrawAdvancedSkillValue; // 0x108
	float _holdTimeInFullDrawAboveAvancedSkillValue; // 0x10c
	float _armsShakeMultiplierNoSkillValue; // 0x110
	float _armsShakeMultiplierBasicSkillValue; // 0x114
	float _armsShakeMultiplierMediumSkillValue; // 0x118
	float _armsShakeMultiplierAdvancedSkillValue; // 0x11c
	float _armsShakeMultiplierAboveAvancedSkillValue; // 0x120
	float _tuneBowDurationNoSkillValue; // 0x124
	float _tuneBowDurationBasicSkillValue; // 0x128
	float _tuneBowDurationMediumSkillValue; // 0x12c
	float _tuneBowDurationAdvancedSkillValue; // 0x130
	float _tuneBowDurationAboveAvancedSkillValue; // 0x134
	float _drawCenterDotExtraTimeLimitNoSkillValue; // 0x138
	float _drawCenterDotExtraTimeLimitBasicSkillValue; // 0x13c
	float _drawCenterDotExtraTimeLimitMediumSkillValue; // 0x140
	float _drawCenterDotExtraTimeLimitAdvancedSkillValue; // 0x144
	float _drawCenterDotExtraTimeLimitAboveAvancedSkillValue; // 0x148
};

struct AMissionItemSpawner : AActor {
	TArray<FMissionItemInfo> _missionItemsInfo; // 0x220
};

struct UInputActionDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputActionDelegateBinding> InputActionDelegateBindings; // 0x28
};

struct UPrisonerBodyCondition_Hyperthermia : UPrisonerBodyCondition {
	float _maxSeverity; // 0xa8
	float _bodyTemperatureToDie; // 0xac
	float _bodyTemperatureToExist; // 0xb0
	float _bodyTemperatureToRecover; // 0xb4
	float _bodyTemperatureSampleInterval; // 0xbc
	float _bodyTemperatureAtUntreatedStart; // 0xc4
	float _bodyTemperatureAtStabilizationStart; // 0xc8
	float _bodyTemperatureAtRecoveryStart; // 0xcc
	EPrisonerBodyConditionState _state; // 0xd0
	float _severityRatio; // 0xd8
	float _severityRatioAtUntreatedStart; // 0xdc
	float _severityRatioAtRecoveryStart; // 0xe0
	float _severityRatioInterpSpeed; // 0xe8
};

struct UExplosiveProtectionItemComponentState : UItemComponentStateBase {
	bool IsArmed; // 0x40
};

struct ALevelMarkers : AActor {
	TArray<FLadderMarker> LadderMarkers; // 0x220
	TArray<FWindowMarker> WindowMarkers; // 0x230
};

struct UHoveredEventWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UNamedSlot* NamedSlot; // 0x268
	FMulticastInlineDelegate MouseEntered; // 0x270
	FMulticastInlineDelegate MouseLeft; // 0x280
};

struct ARegularDoorStatic : ADoor {
	FRotator _openRotation; // 0x408
	FRotator _closedRotation; // 0x414
};

struct ATimeControllableSpotLight : ALight {
	bool _shouldExistOnDedicatedServer; // 0x230
	UCurveFloat* _intensityVsTimeOfDayCurve; // 0x238
	USpotLightComponent* _pointLightComponent; // 0x240
};

struct UMaterialExpressionLandscapeLayerSample : UMaterialExpression {
	FName ParameterName; // 0x40
	float PreviewWeight; // 0x48
	FGuid ExpressionGUID; // 0x4c
};

struct UDropZoneParticipantStats : UGameEventParticipantStats {
	int32_t Activations; // 0x48
};

struct AGeometryCollectionDebugDrawActor : AActor {
	FGeometryCollectionDebugDrawWarningMessage WarningMessage; // 0x220
	FGeometryCollectionDebugDrawActorSelectedRigidBody SelectedRigidBody; // 0x228
	bool bDebugDrawWholeCollection; // 0x240
	bool bDebugDrawHierarchy; // 0x241
	bool bDebugDrawClustering; // 0x242
	EGeometryCollectionDebugDrawActorHideGeometry HideGeometry; // 0x243
	bool bShowRigidBodyId; // 0x244
	bool bShowRigidBodyCollision; // 0x245
	bool bCollisionAtOrigin; // 0x246
	bool bShowRigidBodyTransform; // 0x247
	bool bShowRigidBodyInertia; // 0x248
	bool bShowRigidBodyVelocity; // 0x249
	bool bShowRigidBodyForce; // 0x24a
	bool bShowRigidBodyInfos; // 0x24b
	bool bShowTransformIndex; // 0x24c
	bool bShowTransform; // 0x24d
	bool bShowParent; // 0x24e
	bool bShowLevel; // 0x24f
	bool bShowConnectivityEdges; // 0x250
	bool bShowGeometryIndex; // 0x251
	bool bShowGeometryTransform; // 0x252
	bool bShowBoundingBox; // 0x253
	bool bShowFaces; // 0x254
	bool bShowFaceIndices; // 0x255
	bool bShowFaceNormals; // 0x256
	bool bShowSingleFace; // 0x257
	int32_t SingleFaceIndex; // 0x258
	bool bShowVertices; // 0x25c
	bool bShowVertexIndices; // 0x25d
	bool bShowVertexNormals; // 0x25e
	bool bUseActiveVisualization; // 0x25f
	float PointThickness; // 0x260
	float LineThickness; // 0x264
	bool bTextShadow; // 0x268
	float TextScale; // 0x26c
	float NormalScale; // 0x270
	float AxisScale; // 0x274
	float ArrowScale; // 0x278
	FColor RigidBodyIdColor; // 0x27c
	float RigidBodyTransformScale; // 0x280
	FColor RigidBodyCollisionColor; // 0x284
	FColor RigidBodyInertiaColor; // 0x288
	FColor RigidBodyVelocityColor; // 0x28c
	FColor RigidBodyForceColor; // 0x290
	FColor RigidBodyInfoColor; // 0x294
	FColor TransformIndexColor; // 0x298
	float TransformScale; // 0x29c
	FColor LevelColor; // 0x2a0
	FColor ParentColor; // 0x2a4
	float ConnectivityEdgeThickness; // 0x2a8
	FColor GeometryIndexColor; // 0x2ac
	float GeometryTransformScale; // 0x2b0
	FColor BoundingBoxColor; // 0x2b4
	FColor FaceColor; // 0x2b8
	FColor FaceIndexColor; // 0x2bc
	FColor FaceNormalColor; // 0x2c0
	FColor SingleFaceColor; // 0x2c4
	FColor VertexColor; // 0x2c8
	FColor VertexIndexColor; // 0x2cc
	FColor VertexNormalColor; // 0x2d0
	UBillboardComponent* SpriteComponent; // 0x2d8
};

struct UUI_VicinityPanel3_C : UVicinityPanel3 {
	UCheckBox* CheckBox_1; // 0x4d8
	UCheckBox* CheckBox_2; // 0x4e0
	UCheckBox* CheckBox_3; // 0x4e8
	UCheckBox* CheckBox_4; // 0x4f0
	UCheckBox* CheckBox_5; // 0x4f8
	UCheckBox* CheckBox_6; // 0x500
	UButton* ExpandButton; // 0x508
	UImage* Image_12; // 0x510
	UImage* Image_01; // 0x518
	UImage* Image_011; // 0x520
	UScrollBox* ScrollBox_1; // 0x528
	USizeBox* SizeBox_1; // 0x530
	UUI_AdjustableSeparator_C* UI_AdjustableSeparator; // 0x538
};

struct AGlassBottle03_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct AWater_Collector_Raincoat_C : AEquipmentItem {
	UBasicGameResourceContainerComponent* BasicGameResourceContainer; // 0x7e0
	URainCollectorComponent* RainCollector; // 0x7e8
};

struct ADropZoneCrate : ADropZoneDroppable {
	ADropZoneKey* KeyClass; // 0x280
	bool _hasKey; // 0x288
};

struct UPawnAction_Sequence : UPawnAction {
	TArray<UPawnAction*> ActionSequence; // 0x98
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
	UPawnAction* RecentActionCopy; // 0xb0
};

struct UMetabolism_BCU_ICU_StatsPanel : UUserWidget {
	UMetabolism_ICU_EKG_Stats* Stats_EKG; // 0x260
	UMetabolism_ICU_ST_Stats* Stats_ST; // 0x268
	UMetabolism_ICU_SPO2_Stats* Stats_SPO2; // 0x270
	UMetabolism_ICU_RR_Stats* Stats_RR; // 0x278
	UMetabolism_ICU_TEMP_Stats* Stats_TEMP; // 0x280
};

struct UOffsetMeshTool : UBaseMeshProcessingTool {
	UOffsetMeshToolProperties* OffsetProperties; // 0x400
	UIterativeOffsetProperties* IterativeProperties; // 0x408
	UImplicitOffsetProperties* ImplicitProperties; // 0x410
	UOffsetWeightMapSetProperties* WeightMapProperties; // 0x418
};

struct UAdjustableSeparator : UUserWidget {
	USizeBox* _slotSizeBox; // 0x260
	UNamedSlot* _divider; // 0x268
	float _slotMinHeight; // 0x270
	float _slotMaxHeight; // 0x274
};

struct AConZWorldSettings : AWorldSettings {
	AWeatherController2* WeatherController2; // 0x3a0
	AWetnessManager* WetnessManager; // 0x3a8
	AGameEventManager* GameEventManager; // 0x3b0
	AWorldEventManager* WorldEventManager; // 0x3b8
	ABuildingManager* BuildingManager; // 0x3c0
	AItemContainerManager* ItemContainerManager; // 0x3c8
	AConZEconomyManager* EconomyManager; // 0x3d0
	TArray<ARadioStation*> RadioStations; // 0x3d8
	UAkAudioEvent* RadioNoiseStartEvent; // 0x3e8
	UAkAudioEvent* RadioNoiseStopEvent; // 0x3f0
	UAkAudioEvent* RadioStopEvent; // 0x3f8
	UAkAudioEvent* RadioStationChangeNoiseEvent; // 0x400
	FItemSpawningSettings ItemSpawningSettings; // 0x408
	AVolume* IslandBoundsVolume; // 0x460
	bool UseVirtualizationSystem; // 0x468
	FBox2D WorldBounds; // 0x46c
	FGameplayTag HeightMapGameplayTag; // 0x480
	FGameplayTag MapPropertiesGameplayTag; // 0x488
	FGameplayTag GerstnerWaveOcclusionPropertiesGameplayTag; // 0x490
	TArray<FConZPrisonerSpawnEquipmentProperties> PrisonerSpawnEquipment; // 0x498
	bool SpawnInAir; // 0x4a8
};

struct UInterpTrackVectorMaterialParam : UInterpTrackVectorBase {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct ULocationServicesImpl : UObject {
	FMulticastInlineDelegate OnLocationChanged; // 0x28
};

struct UAkAudioEvent : UObject {
	UAkAudioBank* RequiredBank; // 0x28
	float MaxAttenuationRadius; // 0x30
	bool IsInfinite; // 0x34
	float MinimumDuration; // 0x38
	float MaximumDuration; // 0x3c
};

struct UInheritableComponentHandler : UObject {
	TArray<FComponentOverrideRecord> Records; // 0x28
	TArray<UActorComponent*> UnnecessaryComponents; // 0x38
};

struct UBuryData : UDataAsset {
	TMap<EPhysicalSurface, FBuryMaterialData> AllowedBuryMaterials; // 0x30
	float StaminaDrain; // 0x80
	float RecoveredStaminaThreshold; // 0x84
};

struct UPrisonerThirdPersonSubviewComponent : USpringArmComponent {
	EPrisonerThirdPersonSubview SubviewID; // 0x288
	float FieldOfView; // 0x28c
	bool UseFieldOfViewForLOD; // 0x290
	bool ConstrainAspectRatio; // 0x291
	float AspectRatio; // 0x294
	float MinViewYaw; // 0x298
	float MaxViewYaw; // 0x29c
	float MinViewPitch; // 0x2a0
	float MaxViewPitch; // 0x2a4
	float LeanOffsetLeft; // 0x2a8
	float LeanOffsetRight; // 0x2ac
	FVector GlobalOffset; // 0x2b0
	bool MirrorAroundXZPlane; // 0x2bc
	FVector MaxLocalOffsetWhenColliding; // 0x2c0
	bool ShouldConstrainTraceOriginToOwnerCapsule; // 0x2cc
	float OwnerCapsuleContrainBuffer; // 0x2d0
	FVector TraceOriginGlobalOffset; // 0x2d4
	FVector TraceOriginRelativeOffset; // 0x2e0
	float LocalOffsetCurvesBlendSpeed; // 0x2ec
	FLocalOffsetCurves LocalOffsetCurves[0x2]; // 0x2f0
	FName AnimationOffsetTZCurveName; // 0x330
	float PostProcessBlendWeight; // 0x338
	FPostProcessSettings PostProcessSettings; // 0x340
	float blendInDuration; // 0x890
	float blendOutDuration; // 0x894
	FVector _clippingPreventionOffset; // 0x8b0
	float _clippingPreventionSweepLength; // 0x8bc
	float _clippingPreventionAmount; // 0x8c0
	FVector _clippingPreventionTraceOffset; // 0x8c4
	float _minFactorForPrisonerHiding; // 0x8d0
};

struct UNiagaraDataInterfaceArray : UNiagaraDataInterface {
	int32_t MaxElements; // 0x40
};

struct AZombieCorpse : ACorpse {
	USkeletalMesh* StrippedMesh; // 0x3f0
	bool _isSearched; // 0x3f8
};

struct UNetAnalyticsAggregatorConfig : UObject {
	TArray<FNetAnalyticsDataConfig> NetAnalyticsData; // 0x28
};

struct UMaterialExpressionBentNormalCustomOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UWidgetNavigation : UObject {
	FWidgetNavigationData Up; // 0x28
	FWidgetNavigationData Down; // 0x4c
	FWidgetNavigationData Left; // 0x70
	FWidgetNavigationData Right; // 0x94
	FWidgetNavigationData Next; // 0xb8
	FWidgetNavigationData Previous; // 0xdc
};

struct UNiagaraDataInterfaceSpline : UNiagaraDataInterface {
	AActor* Source; // 0x38
};

struct UItemSpawnerPreset : UObject {
	FItemSpawnerData SpawnerData; // 0x28
};

struct UMetabolism_ICU_Expandable_Stats : UUserWidget {
	bool DisplayGraph; // 0x260
	UMetabolism_ICU_GraphWidget* _graph2D; // 0x268
	UImage* _graph2D_Background; // 0x270
};

struct UMeshSelectionTool : UDynamicMeshBrushTool {
	UMeshSelectionToolProperties* SelectionProps; // 0x200
	UMeshSelectionEditActions* SelectionActions; // 0x208
	UMeshSelectionToolActionPropertySet* EditActions; // 0x210
	UMeshSelectionSet* Selection; // 0x218
	TArray<AActor*> SpawnedActors; // 0x220
};

struct UCustomZoneSettingsRegionDetails : UUserWidget {
	UEditableText* _name; // 0x288
	UCarouselWithLabel* _shape; // 0x290
	USpinBox* _locationX; // 0x298
	USpinBox* _locationY; // 0x2a0
	UTextBlock* _textSize; // 0x2a8
	USpinBox* _sizeX; // 0x2b0
	USpinBox* _sizeY; // 0x2b8
	UTextBlock* _textConfiguration; // 0x2c0
	UTextBlock* _textFallDamage; // 0x2c8
	UTextBlock* _textPuppetDamage; // 0x2d0
	UTextBlock* _textSentryDamage; // 0x2d8
	UTextBlock* _textAnimalDamage; // 0x2e0
	UTextBlock* _textVehicleDamage; // 0x2e8
	UTextBlock* _textBrawlingDamage; // 0x2f0
	UTextBlock* _textMeleeWeaponDamage; // 0x2f8
	UTextBlock* _textThrowingDamage; // 0x300
	UTextBlock* _textProjectileDamage; // 0x308
	UTextBlock* _textExplosiveDamage; // 0x310
	UTextBlock* _textTrapDamage; // 0x318
	UTextBlock* _textDamageToBases; // 0x320
	UTextBlock* _textDamageToVehicles; // 0x328
	UTextBlock* _textPickingPlayerLocks; // 0x330
	UTextBlock* _textPickingWorldLocks; // 0x338
	UTextBlock* _textBuildingBases; // 0x340
	UButton* _buttonOpenConfiguration; // 0x348
	UButton* _buttonNextConfiguration; // 0x350
	UButton* _buttonPreviousConfiguration; // 0x358
};

struct AGeometryCollectionRenderLevelSetActor : AActor {
	UVolumeTexture* TargetVolumeTexture; // 0x220
	UMaterial* RayMarchMaterial; // 0x228
	float SurfaceTolerance; // 0x230
	float Isovalue; // 0x234
	bool Enabled; // 0x238
	bool RenderVolumeBoundingBox; // 0x239
};

struct ASphereReflectionCapture : AReflectionCapture {
	UDrawSphereComponent* DrawCaptureRadius; // 0x228
};

struct APhysicsThruster : ARigidBodyBase {
	UPhysicsThrusterComponent* ThrusterComponent; // 0x220
};

struct UAnimNotifyState_Melee : UAnimNotifyState {
	FGameplayTag _attackCapsuleAttachment; // 0x30
	float _damageMultiplier; // 0x38
	EHitSeverity _hitSeverity; // 0x3c
	bool _stopOnHit; // 0x3d
	EAttackType _attackType; // 0x3e
	FName _hitDetectionMarkersRootBoneParentName; // 0x40
	TArray<FMeleeHitDetectionMarker> _hitDetectionMarkers; // 0x48
	int32_t _hitDetectionSamplingRate; // 0x58
};

struct AWeaponAttachmentSuppressor : AWeaponAttachment {
	FName MuzzleSocketName; // 0x7e0
	float NoiseMultiplier; // 0x7e8
	bool IsImprovised; // 0x7ec
};

struct AVehicleCraftedItem : AItem {
	AActor* _vehicleClass; // 0x7c0
};

struct UARTrackedPose : UARTrackedGeometry {
	FARPose3D TrackedPose; // 0xf8
};

struct USubmixEffectFilterPreset : USoundEffectSubmixPreset {
	FSubmixEffectFilterSettings Settings; // 0x9c
};

struct UMovieSceneCameraShakeTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x80
};

struct AVoteSystemManager : AActor {
	TArray<UVoteTopic*> VoteTopics; // 0x220
	UUpdateableNotificationDescription* _activeTopicDesc; // 0x230
	UVoteTopic* _activeTopic; // 0x238
};

struct UPawnNoiseEmitterComponent : UActorComponent {
	char bAIPerceptionSystemCompatibilityMode : 1; // 0xb0
	FVector LastRemoteNoisePosition; // 0xb4
	float NoiseLifetime; // 0xc0
	float LastRemoteNoiseVolume; // 0xc4
	float LastRemoteNoiseTime; // 0xc8
	float LastLocalNoiseVolume; // 0xcc
	float LastLocalNoiseTime; // 0xd0
};

struct UNiagaraDataInterfaceArrayFloat2 : UNiagaraDataInterfaceArray {
	TArray<FVector2D> FloatData; // 0x50
};

struct UPrisonerUIData : UObject {
	FText _attributeDescriptions[0x54]; // 0x28
};

struct UMovieSceneEnumSection : UMovieSceneSection {
	FMovieSceneByteChannel EnumCurve; // 0xe8
};

struct UGizmoCircleComponent : UGizmoBaseComponent {
	FVector Normal; // 0x468
	float Radius; // 0x474
	float Thickness; // 0x478
	int32_t NumSides; // 0x47c
	bool bViewAligned; // 0x480
	bool bOnlyAllowFrontFacingHits; // 0x481
};

struct UPrisonerAnimInstance_WheelBarrow : UAnimInstance {
	float _wheelBarrowSpeed; // 0x2b8
	float _wheelBarrowSpeedKph; // 0x2bc
	float _wheelBarrowBumpiness; // 0x2c0
	float _wheelBarrowRollAngleRelativeToDriver; // 0x2c4
	bool _isInCombatMode; // 0x2c8
	bool _isLimping; // 0x2c9
	bool _isDriver; // 0x2ca
	UAnimSequence* _driverIdleAnimation; // 0x2d0
	UBlendSpace* _driverWalkJogAnimation; // 0x2d8
	UBlendSpace* _driverWalkJogLimpingAnimation; // 0x2e0
	FTransform _driverLHandGripTransform; // 0x2f0
	FTransform _driverRHandGripTransform; // 0x320
	float _driverSpineBendAngle; // 0x350
	float _driverSpineBendScale; // 0x354
	float _driverSpineBendAngleInterpSpeed; // 0x358
	float _driverSpineLeanAngle; // 0x35c
	float _driverSpineLeanScale; // 0x360
	float _driverSpineLeanAngleInterpSpeed; // 0x364
	bool _driverHasFloor; // 0x368
	bool _isDriverMoving; // 0x369
	float _driverSpeed; // 0x36c
	float _driverCourseAngle; // 0x370
	UBlendSpace* _passengerIdleAnimation; // 0x378
	bool _useVehicleWAPLowerBodyIdleTP; // 0x380
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP; // 0x388
	UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP; // 0x390
};

struct USentryMovementComponent : UConZCharacterMovementComponent {
	UCurveFloat* MaxRotationRateCurve; // 0xc18
	float RotationInterpolationSpeed; // 0xc20
	bool CorrectServerReceivedZ; // 0xc24
};

struct UVDSimulation : UObject {
	TArray<UVDWindDirectionalSourceComponent*> WindSources; // 0x158
};

struct UFooterV2_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UTextBlock* TextLine; // 0x268
	UImage* TextLineBackground; // 0x270
};

struct UAkSettings : UObject {
	char MaxSimultaneousReverbVolumes; // 0x28
	FFilePath WwiseProjectPath; // 0x30
	FDirectoryPath WwiseSoundBankFolder; // 0x40
	bool bAutoConnectToWAAPI; // 0x50
	bool bEnableMultiCoreRendering; // 0x51
	ECollisionChannel DefaultOcclusionCollisionChannel; // 0x52
	FDirectoryPath WwiseWindowsInstallationPath; // 0x58
	FFilePath WwiseMacInstallationPath; // 0x68
};

struct UBackgroundBlur : UContentWidget {
	FMargin Padding; // 0x120
	EHorizontalAlignment HorizontalAlignment; // 0x130
	EVerticalAlignment VerticalAlignment; // 0x131
	bool bApplyAlphaToBlur; // 0x132
	float BlurStrength; // 0x134
	bool bOverrideAutoRadiusCalculation; // 0x138
	int32_t BlurRadius; // 0x13c
	FSlateBrush LowQualityFallbackBrush; // 0x140
};

struct UEnvQuery : UDataAsset {
	FName QueryName; // 0x30
	TArray<UEnvQueryOption*> Options; // 0x38
};

struct UPrisonerBodyConditionOrSymptom : UPrisonerBodyEffect {
	UPrisonerBodyConditionOrSymptomUIData* _uiDataClass; // 0x58
	bool _useSeverityToDetermineLifeThreateningStatus; // 0x60
	FFloatRange _severityRangeToBeLifeThreatening; // 0x64
	float _severityRatioChangeToReplicate; // 0x74
	float _clientSeverityRatioInterpSpeed; // 0x78
	TArray<UPrisonerBodyConditionOrSymptomSideEffect*> _sideEffects; // 0x80
	float _repSeverity; // 0x98
	float _repMaxSeverity; // 0x9c
};

struct UPrisonerBodySymptom_Fatigue : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8
	float _maxSeverityMaxStaminaModifier; // 0xbc
};

struct UDebugCameraControllerSettings : UDeveloperSettings {
	TArray<FDebugCameraControllerSettingsViewModeIndex> CycleViewModes; // 0x38
};

struct UGetGeoLocationAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UVoxelMorphologyMeshesTool : UBaseVoxelTool {
	UVoxelMorphologyMeshesToolProperties* MorphologyProperties; // 0x108
};

struct UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UMetabolism_ICU_GraphWidget_ST : UMetabolism_ICU_GraphWidget {
	UCurveFloat* TimeStretchCurveCurve; // 0x218
};

struct ACameraActor : AActor {
	EAutoReceiveInput AutoActivateForPlayer; // 0x220
	UCameraComponent* CameraComponent; // 0x228
	USceneComponent* SceneComponent; // 0x230
	char bConstrainAspectRatio : 1; // 0x240
	float AspectRatio; // 0x244
	float FOVAngle; // 0x248
	float PostProcessBlendWeight; // 0x24c
	FPostProcessSettings PostProcessSettings; // 0x250
};

struct UParticleSystemComponent : UFXSystemComponent {
	UParticleSystem* Template; // 0x448
	TArray<UMaterialInterface*> EmitterMaterials; // 0x450
	TArray<USkeletalMeshComponent*> SkelMeshComponents; // 0x460
	char bResetOnDetach : 1; // 0x471
	char bUpdateOnDedicatedServer : 1; // 0x471
	char bAllowRecycling : 1; // 0x471
	char bAutoManageAttachment : 1; // 0x471
	char bAutoAttachWeldSimulatedBodies : 1; // 0x471
	char bWarmingUp : 1; // 0x472
	char bOverrideLODMethod : 1; // 0x472
	char bSkipUpdateDynamicDataDuringTick : 1; // 0x472
	ParticleSystemLODMethod LODMethod; // 0x47d
	EParticleSignificanceLevel RequiredSignificance; // 0x47e
	TArray<FParticleSysParam> InstanceParameters; // 0x480
	FMulticastInlineDelegate OnParticleSpawn; // 0x490
	FMulticastInlineDelegate OnParticleBurst; // 0x4a0
	FMulticastInlineDelegate OnParticleDeath; // 0x4b0
	FMulticastInlineDelegate OnParticleCollide; // 0x4c0
	bool bOldPositionValid; // 0x4d0
	FVector OldPosition; // 0x4d4
	FVector PartSysVelocity; // 0x4e0
	float WarmupTime; // 0x4ec
	float WarmupTickRate; // 0x4f0
	float SecondsBeforeInactive; // 0x4f8
	float MaxTimeBeforeForceUpdateTransform; // 0x500
	TArray<UParticleSystemReplay*> ReplayClips; // 0x520
	float CustomTimeDilation; // 0x538
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x590
	FName AutoAttachSocketName; // 0x598
	EAttachmentRule AutoAttachLocationRule; // 0x5a0
	EAttachmentRule AutoAttachRotationRule; // 0x5a1
	EAttachmentRule AutoAttachScaleRule; // 0x5a2
	FMulticastInlineDelegate OnSystemFinished; // 0x5d0
};

struct UInfiniteResourceAssetData : UInteractionAssetData {
	UGameResourceType* ResourceType; // 0x30
	FGameplayTagContainer InSocketTypes; // 0x38
	FGameplayTagContainer OutSocketTypes; // 0x58
	TArray<UBaseItemTag*> RequiredItemTagsForFilling; // 0x78
	float FillBaseActionDuration; // 0x88
	float FillActionDurationPerAmountFilled; // 0x8c
	float FillResourceFillingExperiencePerAmount; // 0x90
	UAnimMontage* FillMontage; // 0x98
	UAkAudioEvent* FillStartAudioEvent; // 0xa0
	UAkAudioEvent* FillStopAudioEvent; // 0xa8
};

struct UCraftableItem : UDataAsset {
	ECraftingItemCategory ItemCategory; // 0x30
	int32_t ItemOrder; // 0x34
	TArray<FCraftingPair> CraftedItems; // 0x38
	EInteractionType Interaction; // 0x48
	FText InteractionCaption; // 0x50
	bool HideItemCaptionInCraftingCaption; // 0x68
	TArray<FCraftingItem> MandatoryItems; // 0x70
	TArray<FCraftingItem> OptionalItems; // 0x80
	TArray<FCraftingItem> ToolsNeeded; // 0x90
	bool AutoCalculation; // 0xa0
	USkill* Skill; // 0xa8
	FCraftingSkillLevelData NoSkillLevelData; // 0xb0
	FCraftingSkillLevelData BasicLevelData; // 0xc4
	FCraftingSkillLevelData MediumLevelData; // 0xd8
	FCraftingSkillLevelData AdvancedLevelData; // 0xec
	UAnimMontage* CustomCraftingMontage; // 0x100
	UAkAudioEvent* StartCraftingAudioEvent; // 0x108
	UAkAudioEvent* StopCraftingAudioEvent; // 0x110
	bool OnlyForSupporterPack; // 0x118
	bool AutoCalculateHealth; // 0x119
	bool AutoCalculateWeight; // 0x11a
	bool AutoCalculateFoodParameters; // 0x11b
	float AlcoholContentMultiplier; // 0x11c
	int32_t BulletStackAmount; // 0x120
};

struct UBlackboardKeyType_String : UBlackboardKeyType {
	FString StringValue; // 0x30
};

struct UTabButtonAlertable : UTabButton {
	FDataTableRowHandle _alertedTextColorHandle; // 0xc60
	FDataTableRowHandle _alertedBackgroundColorHandle; // 0xc70
	float _blinkSpeed; // 0xc80
};

struct UScrollBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FScrollBoxStyle ScrollBoxStyle; // 0x30
};

struct UWarningNotificationDescription : UNotificationDescription {
	FString Message; // 0x40
	float Duration; // 0x50
	FColor Color; // 0x54
};

struct ULevelSequenceBurnInOptions : UObject {
	bool bUseBurnIn; // 0x28
	FSoftClassPath BurnInClass; // 0x30
	ULevelSequenceBurnInInitSettings* Settings; // 0x48
};

struct UUI_GameEventTeamHeaderWidget_C : UGameEventTeamHeaderWidget {
	int32_t TeamIndex; // 0x278
};

struct UABP_FIshingRod_C : UFishingRodAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2f8
	FAnimNode_Root AnimGraphNode_Root; // 0x378
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x3b0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x540
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x560
};

struct ASceneCapture2D : ASceneCapture {
	USceneCaptureComponent2D* CaptureComponent2D; // 0x230
};

struct UVicinityPanel3 : UDesignableUserWidget {
	UWrapBox* _searchedItemsBox; // 0x278
	UWrapBox* _vicinityBox; // 0x280
	UHorizontalBox* _vicinityContainersBox; // 0x288
	TMap<UObject*, UWidget*> _searchedItems; // 0x290
	TMap<UObject*, UWidget*> _vicinityItems; // 0x2e0
	TMap<UObject*, UWidget*> _vicinityContainers; // 0x330
	TMap<UCheckBox*, FClassesArray> _filterCheckboxes; // 0x420
	TMap<FName, FClassesArray> _filterCheckboxesNames; // 0x470
	FMargin _vicinityContainersPadding; // 0x4c0
};

struct UARPin : UObject {
	UARTrackedGeometry* TrackedGeometry; // 0x28
	USceneComponent* PinnedComponent; // 0x30
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	FMulticastInlineDelegate OnARTrackingStateChanged; // 0xc0
	FMulticastInlineDelegate OnARTransformUpdated; // 0xd0
};

struct UARPoseComponent : UARComponent {
	FARPoseUpdatePayload ReplicatedPayload; // 0x280
};

struct UUI_CraftingInfo_C : UCraftingInfoWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UImage* BackgroundImage; // 0x370
	UButton* CloseButton; // 0x378
	UTextBlock* DescriptionText; // 0x380
	UImage* Image_1; // 0x388
	UResizableWindow_C* MainResizableWindow; // 0x390
};

struct UUI_Metabolism_LeftPanel_C : UMetabolismLeftPanel {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2d8
	UImage* BackgroundImage; // 0x2e0
};

struct UMovieSceneGeometryCacheSection : UMovieSceneSection {
	FMovieSceneGeometryCacheParams Params; // 0xe8
};

struct UAnimationDataSourceRegistry : UObject {
	TMap<FName, TWeakObjectPtr<UObject>> DataSources; // 0x28
};

struct UABP_M82_Magazine_C : UWeaponAttachmentMagazineAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x398
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x3e0
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x428
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x470
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x4b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x568
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x590
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x5b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x5e0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x680
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x730
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x778
	FAnimNode_Slot AnimGraphNode_Slot; // 0x7c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x808
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x830
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x858
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x880
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x9d8
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0xa58
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0xaf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0xba8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0xc28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0xca8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0xd28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0xda8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xe28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xec8
};

struct UCanvas : UObject {
	float OrgX; // 0x28
	float OrgY; // 0x2c
	float ClipX; // 0x30
	float ClipY; // 0x34
	FColor DrawColor; // 0x38
	char bCenterX : 1; // 0x3c
	char bCenterY : 1; // 0x3c
	char bNoSmooth : 1; // 0x3c
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FPlane ColorModulate; // 0x50
	UTexture2D* DefaultTexture; // 0x60
	UTexture2D* GradientTexture0; // 0x68
	UReporterGraph* ReporterGraph; // 0x70
};

struct AChestItem : AItem {
	int32_t _capacityX; // 0x7d0
	int32_t _capacityY; // 0x7d4
	UInventoryItemComponent* _inventoryComponent; // 0x7d8
	UInventoryContainer2D* _inventoryContainer2D; // 0x7e8
	UBuriableChestItemComponent* _buriableChestItemComponent; // 0x808
	UNameableItemComponent* _nameableItemComponent; // 0x810
	bool _canContainChestItem; // 0x818
	bool _lockpickableEnabled; // 0x819
	bool _overrideCanBeNamed; // 0x81a
	bool _canBeNamed; // 0x81b
	float _containedItemsWeight; // 0x81c
	FDbIntegerId _owningUserProfileId; // 0x820
	TArray<UObject*> _lockItemsClasses; // 0x828
	TArray<FLockData> _lockData; // 0x838
	TArray<FDbIntegerId> _locks; // 0x848
	EAccessLevel _activeAccessLevel; // 0x868
	int32_t _cachedInventoryCount; // 0x86c
};

struct UAutomationTestSettings : UObject {
	TArray<FString> EngineTestModules; // 0x28
	TArray<FString> EditorTestModules; // 0x38
	FSoftObjectPath AutomationTestmap; // 0x48
	TArray<FEditorMapPerformanceTestDefinition> EditorPerformanceTestMaps; // 0x60
	TArray<FSoftObjectPath> AssetsToOpen; // 0x70
	TArray<FString> MapsToPIETest; // 0x80
	FBuildPromotionTestSettings BuildPromotionTest; // 0x90
	FMaterialEditorPromotionSettings MaterialEditorPromotionTest; // 0x280
	FParticleEditorPromotionSettings ParticleEditorPromotionTest; // 0x2b0
	FBlueprintEditorPromotionSettings BlueprintEditorPromotionTest; // 0x2c0
	TArray<FString> TestLevelFolders; // 0x2f0
	TArray<FExternalToolDefinition> ExternalTools; // 0x300
	TArray<FEditorImportExportTestDefinition> ImportExportTestDefinitions; // 0x310
	TArray<FLaunchOnTestSettings> LaunchOnSettings; // 0x320
	FIntPoint DefaultScreenshotResolution; // 0x330
	float PIETestDuration; // 0x338
};

struct UExtractCollisionGeometryTool : USingleSelectionTool {
	UCollisionGeometryVisualizationProperties* VizSettings; // 0x88
	UPhysicsObjectToolPropertySet* ObjectProps; // 0x90
	UPreviewGeometry* PreviewElements; // 0x98
	UPreviewMesh* PreviewMesh; // 0xa0
};

struct UScopeableItemComponent : UItemComponent {
	TArray<FScopeZoomLevelSettings> _zoomLevelSettings; // 0xb8
	TArray<FScopeZoomLevelSettings> _zoomLevelSettingsTemp; // 0xc8
	UTexture2D* _scopingOverlayTexture; // 0xd8
	float _scopingStartDelay; // 0xe0
	float _scopingStopDelay; // 0xe4
	UAnimMontage* _montageStandingFP; // 0xe8
	UAnimMontage* _montageCrouchingFP; // 0xf0
	UAnimMontage* _montageProneFP; // 0xf8
	UAnimMontage* _montageStandingTP; // 0x100
	UAnimMontage* _montageCrouchingTP; // 0x108
	UAnimMontage* _montageProneTP; // 0x110
	int32_t _currentZoomLevel; // 0x118
};

struct AVehicleSpawner : AActor {
	UVehicleSpawnerComponent* SpawnerComponent; // 0x220
};

struct UTextBlockWidgetStyle : USlateWidgetStyleContainerBase {
	FTextBlockStyle TextBlockStyle; // 0x30
};

struct ABP_BagCraftingMission_C : AMission {
	USceneComponent* DefaultSceneRoot; // 0x468
};

struct UMaterialExpressionSpriteTextureSampler : UMaterialExpressionTextureSampleParameter2D {
	bool bSampleAdditionalTextures; // 0x80
	int32_t AdditionalSlotIndex; // 0x84
	FText SlotDisplayName; // 0x88
};

struct UParticleModuleLocationSkelVertSurface : UParticleModuleLocationBase {
	ELocationSkelVertSurfaceSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	char bUpdatePositionEachFrame : 1; // 0x40
	char bOrientMeshEmitters : 1; // 0x40
	char bInheritBoneVelocity : 1; // 0x40
	float InheritVelocityScale; // 0x44
	FName SkelMeshActorParamName; // 0x48
	TArray<FName> ValidAssociatedBones; // 0x50
	char bEnforceNormalCheck : 1; // 0x60
	FVector NormalToCompare; // 0x64
	float NormalCheckToleranceDegrees; // 0x70
	float NormalCheckTolerance; // 0x74
	TArray<int32_t> ValidMaterialIndices; // 0x78
	char bInheritVertexColor : 1; // 0x88
	char bInheritUV : 1; // 0x88
	uint32_t InheritUVChannel; // 0x8c
};

struct UAnimBP_MosinNagant_C : UWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x300
	FAnimNode_Root AnimGraphNode_Root; // 0x308
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x338
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x380
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x3c8
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x410
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x458
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x508
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x660
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x688
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x6b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x6d8
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x758
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x7a0
	FAnimNode_Slot AnimGraphNode_Slot; // 0x7e8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x830
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x8e0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x908
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x930
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x958
};

struct USubmixEffectConvolutionReverbPreset : USoundEffectSubmixPreset {
	UAudioImpulseResponse* ImpulseResponse; // 0x68
	FSubmixEffectConvolutionReverbSettings Settings; // 0x70
	ESubmixEffectConvolutionReverbBlockSize BlockSize; // 0x98
	bool bEnableHardwareAcceleration; // 0x99
};

struct UPrisonerBodyEffect : UObject {
	float _tickInterval; // 0x34
};

struct ASentrySpawner2 : AActor {
	float ActivationDistance; // 0x220
	ASentry2* SentryClass; // 0x228
	TArray<FSentryPatrolPoint> PatrolPoints; // 0x230
	UBillboardComponent* Sprite; // 0x240
	bool ForceUndergroundSentry; // 0x248
	bool _shouldSaveAndLoadSentry; // 0x274
	float _autoSaveTime; // 0x278
};

struct UVicinityContainer3 : UDesignableUserWidget {
	UItemInventoryWidget2* _container; // 0x2a8
	UScrollBox* _containerScrollBox; // 0x2b0
};

struct ADepotItem : AChestItem {
	ATradePost* _assignedTradePost; // 0x888
};

struct UHorizontalBoxSlot : UPanelSlot {
	FMargin Padding; // 0x40
	FSlateChildSize Size; // 0x50
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UParticleModuleRotationOverLifetime : UParticleModuleRotationBase {
	FRawDistributionFloat RotationOverLife; // 0x30
	char Scale : 1; // 0x60
};

struct UInventoryContainerSelection : UObject {
	int32_t _maxNumOfItems; // 0x30
	TArray<UObject*> _itemsRep; // 0x48
	UObject* _parentRep; // 0x68
	FInventoryContainerSelectionRepData _data; // 0x70
	TArray<UInventoryContainerWidget2*> _widgets; // 0x98
	UInventoryContainerWidget2* _widget; // 0xa8
};

struct UMaterialExpressionScalarParameter : UMaterialExpressionParameter {
	float DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x5c
	char PrimitiveDataIndex; // 0x5d
};

struct UTimelineTemplate : UObject {
	float TimelineLength; // 0x28
	ETimelineLengthMode LengthMode; // 0x2c
	char bAutoPlay : 1; // 0x2d
	char bLoop : 1; // 0x2d
	char bReplicated : 1; // 0x2d
	char bIgnoreTimeDilation : 1; // 0x2d
	TArray<FTTEventTrack> EventTracks; // 0x30
	TArray<FTTFloatTrack> FloatTracks; // 0x40
	TArray<FTTVectorTrack> VectorTracks; // 0x50
	TArray<FTTLinearColorTrack> LinearColorTracks; // 0x60
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0x70
	FGuid TimelineGuid; // 0x80
	FName VariableName; // 0x90
	FName DirectionPropertyName; // 0x98
	FName UpdateFunctionName; // 0xa0
	FName FinishedFunctionName; // 0xa8
};

struct AEffectOverTimeDealer : AActor {
	TArray<FDamageOverTimeUpdateGroup> _updateGroups; // 0x220
	int32_t _actorLimitPerTick; // 0x230
	float _timeDilation; // 0x238
};

struct UInventorySlotWidget_C : UInventorySlotUserWidget {
	int32_t Width; // 0x298
	int32_t Height; // 0x29c
};

struct USoundNodeOscillator : USoundNode {
	char bModulateVolume : 1; // 0x48
	char bModulatePitch : 1; // 0x48
	float AmplitudeMin; // 0x4c
	float AmplitudeMax; // 0x50
	float FrequencyMin; // 0x54
	float FrequencyMax; // 0x58
	float OffsetMin; // 0x5c
	float OffsetMax; // 0x60
	float CenterMin; // 0x64
	float CenterMax; // 0x68
};

struct AItemContainer : AActor {
	USceneComponent* _rootComponent; // 0x250
	float _forceUnlockTime; // 0x258
	FUnlockLocation _unlockPositionMarker; // 0x260
	TArray<UObject*> _upgradeItemsClasses; // 0x298
	TArray<FLockData> _lockData; // 0x2a8
	TArray<UObject*> _originalUpgradeItemClasses; // 0x2b8
	TArray<FLockData> _originalLockData; // 0x2c8
	bool _ignoreServerSettings; // 0x2d8
	bool _disableSerialization; // 0x301
	bool _shouldBeResetOnNewSession; // 0x302
};

struct UServerBrowserWidget_C : UServerBrowser {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UUI_TrashMenuButton_C* Back; // 0x370
	UButton* Button_1; // 0x378
	UCircularThrobber* CircularThrobber_53; // 0x380
	UEditableTextBox* DirectConnectPasswordTextBox; // 0x388
	UEditableTextBox* DirectConnectTextBox; // 0x390
	UUI_TrashMenuButton_C* FilterButton; // 0x398
	USizeBox* FilterCategorySizeBox; // 0x3a0
	UUI_TextInput_C* HostTextInput; // 0x3a8
	UImage* Image_1; // 0x3b0
	UImage* Image_5; // 0x3b8
	UImage* Image_8; // 0x3c0
	UImage* Image_12; // 0x3c8
	UImage* Image_351; // 0x3d0
	UCanvasPanel* MainCanvas; // 0x3d8
	UOverlay* MainOverlay; // 0x3e0
	UVerticalBox* MainVerticalBox; // 0x3e8
	UUI_TextInput_C* MaxPingTextInput; // 0x3f0
	UUI_TextInput_C* MaxPlayersTextInput; // 0x3f8
	UUI_TextInput_C* MinPlayersTextInput; // 0x400
	UUI_TrashMenuButton_C* PasswordPopupCancelButton; // 0x408
	UUI_TrashMenuButton_C* PasswordPopupOkButton; // 0x410
	UOverlay* PasswordPopupOverlay; // 0x418
	UEditableTextBox* PasswordPopupTextBox; // 0x420
	UUI_TrashMenuButton_C* Refresh; // 0x428
	UUI_TrashMenuButton_C* RentServerButton; // 0x430
	UEditableTextBox* SearchBox; // 0x438
	UServerInfoWidget_C* ServerInfoWidget_63; // 0x440
	UUI_TrashMenuButton_C* ServersButton; // 0x448
	UOverlay* ServersCategoryOverlay; // 0x450
	UUI_OptionsSlider_C* ServersCategorySwitch; // 0x458
	UUI_OptionsSlider_C* ShowFullServersSlider; // 0x460
	UUI_OptionsSlider_C* ShowPasswordedOnlySlider; // 0x468
	UUI_SortByButton_C* SortByFriends; // 0x470
	UUI_SortByButton_C* SortByHost; // 0x478
	UUI_SortByButton_C* SortByMode; // 0x480
	UUI_SortByButton_C* SortByPassword; // 0x488
	UUI_SortByButton_C* SortByPing; // 0x490
	UUI_SortByButton_C* SortByPlayers; // 0x498
	UUI_SortByButton_C* SortByTime; // 0x4a0
	UUI_SortByButton_C* SortByVersion; // 0x4a8
	UUI_ScrollBar_C* UI_ScrollBar; // 0x4b0
	UServerInfoWidget_C* SelectedServer; // 0x4b8
	int32_t SelectedServerIndex; // 0x4c0
	FLinearColor HighlightedColor; // 0x4c4
	FLinearColor NormalColor; // 0x4d4
	UUI_TrashMenuButton_C* _lastButton; // 0x4e8
	UWidget* _lastWidget; // 0x4f0
	UUI_ContinueOrNewCharacterDialog_C* _continueOrNewCharacterDialog; // 0x4f8
	bool _wasRequestingServerList; // 0x500
};

struct UARCandidateImage : UDataAsset {
	UTexture2D* CandidateTexture; // 0x30
	FString FriendlyName; // 0x38
	float Width; // 0x48
	float Height; // 0x4c
	EARCandidateImageOrientation Orientation; // 0x50
};

struct UCharacterMovementComponent : UPawnMovementComponent {
	ACharacter* CharacterOwner; // 0x148
	float GravityScale; // 0x150
	float MaxStepHeight; // 0x154
	float JumpZVelocity; // 0x158
	float JumpOffJumpZFactor; // 0x15c
	float WalkableFloorAngle; // 0x160
	float WalkableFloorZ; // 0x164
	EMovementMode MovementMode; // 0x168
	char CustomMovementMode; // 0x169
	ENetworkSmoothingMode NetworkSmoothingMode; // 0x16a
	float GroundFriction; // 0x16c
	float MaxWalkSpeed; // 0x18c
	float MaxWalkSpeedCrouched; // 0x190
	float MaxSwimSpeed; // 0x194
	float MaxFlySpeed; // 0x198
	float MaxCustomMovementSpeed; // 0x19c
	float MaxAcceleration; // 0x1a0
	float MinAnalogWalkSpeed; // 0x1a4
	float BrakingFrictionFactor; // 0x1a8
	float BrakingFriction; // 0x1ac
	float BrakingSubStepTime; // 0x1b0
	float BrakingDecelerationWalking; // 0x1b4
	float BrakingDecelerationFalling; // 0x1b8
	float BrakingDecelerationSwimming; // 0x1bc
	float BrakingDecelerationFlying; // 0x1c0
	float AirControl; // 0x1c4
	float AirControlBoostMultiplier; // 0x1c8
	float AirControlBoostVelocityThreshold; // 0x1cc
	float FallingLateralFriction; // 0x1d0
	float CrouchedHalfHeight; // 0x1d4
	float Buoyancy; // 0x1d8
	float PerchRadiusThreshold; // 0x1dc
	float PerchAdditionalHeight; // 0x1e0
	FRotator RotationRate; // 0x1e4
	char bUseSeparateBrakingFriction : 1; // 0x1f0
	char bApplyGravityWhileJumping : 1; // 0x1f0
	char bUseControllerDesiredRotation : 1; // 0x1f0
	char bOrientRotationToMovement : 1; // 0x1f0
	char bSweepWhileNavWalking : 1; // 0x1f0
	char bMovementInProgress : 1; // 0x1f0
	char bEnableScopedMovementUpdates : 1; // 0x1f0
	char bEnableServerDualMoveScopedMovementUpdates : 1; // 0x1f1
	char bForceMaxAccel : 1; // 0x1f1
	char bRunPhysicsWithNoController : 1; // 0x1f1
	char bForceNextFloorCheck : 1; // 0x1f1
	char bShrinkProxyCapsule : 1; // 0x1f1
	char bCanWalkOffLedges : 1; // 0x1f1
	char bCanWalkOffLedgesWhenCrouching : 1; // 0x1f1
	char bNetworkSkipProxyPredictionOnNetUpdate : 1; // 0x1f2
	char bNetworkAlwaysReplicateTransformUpdateTimestamp : 1; // 0x1f2
	char bDeferUpdateMoveComponent : 1; // 0x1f2
	char bEnablePhysicsInteraction : 1; // 0x1f2
	char bTouchForceScaledToMass : 1; // 0x1f2
	char bPushForceScaledToMass : 1; // 0x1f2
	char bPushForceUsingZOffset : 1; // 0x1f2
	char bScalePushForceToVelocity : 1; // 0x1f3
	USceneComponent* DeferredUpdatedMoveComponent; // 0x1f8
	float MaxOutOfWaterStepHeight; // 0x200
	float OutofWaterZ; // 0x204
	float Mass; // 0x208
	float StandingDownwardForceScale; // 0x20c
	float InitialPushForceFactor; // 0x210
	float PushForceFactor; // 0x214
	float PushForcePointZOffsetFactor; // 0x218
	float TouchForceFactor; // 0x21c
	float MinTouchForce; // 0x220
	float MaxTouchForce; // 0x224
	float RepulsionForce; // 0x228
	FVector Acceleration; // 0x22c
	FQuat LastUpdateRotation; // 0x240
	FVector LastUpdateLocation; // 0x250
	FVector LastUpdateVelocity; // 0x25c
	float ServerLastTransformUpdateTimeStamp; // 0x268
	float ServerLastClientGoodMoveAckTime; // 0x26c
	float ServerLastClientAdjustmentTime; // 0x270
	FVector PendingImpulseToApply; // 0x274
	FVector PendingForceToApply; // 0x280
	float AnalogInputModifier; // 0x28c
	float MaxSimulationTimeStep; // 0x29c
	int32_t MaxSimulationIterations; // 0x2a0
	int32_t MaxJumpApexAttemptsPerSimulation; // 0x2a4
	float MaxDepenetrationWithGeometry; // 0x2a8
	float MaxDepenetrationWithGeometryAsProxy; // 0x2ac
	float MaxDepenetrationWithPawn; // 0x2b0
	float MaxDepenetrationWithPawnAsProxy; // 0x2b4
	float NetworkSimulatedSmoothLocationTime; // 0x2b8
	float NetworkSimulatedSmoothRotationTime; // 0x2bc
	float ListenServerNetworkSimulatedSmoothLocationTime; // 0x2c0
	float ListenServerNetworkSimulatedSmoothRotationTime; // 0x2c4
	float NetProxyShrinkRadius; // 0x2c8
	float NetProxyShrinkHalfHeight; // 0x2cc
	float NetworkMaxSmoothUpdateDistance; // 0x2d0
	float NetworkNoSmoothUpdateDistance; // 0x2d4
	float NetworkMinTimeBetweenClientAckGoodMoves; // 0x2d8
	float NetworkMinTimeBetweenClientAdjustments; // 0x2dc
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x2e0
	float NetworkLargeClientCorrectionDistance; // 0x2e4
	float LedgeCheckThreshold; // 0x2e8
	float JumpOutOfWaterPitch; // 0x2ec
	FFindFloorResult CurrentFloor; // 0x2f0
	EMovementMode DefaultLandMovementMode; // 0x388
	EMovementMode DefaultWaterMovementMode; // 0x389
	EMovementMode GroundMovementMode; // 0x38a
	char bMaintainHorizontalGroundVelocity : 1; // 0x38b
	char bImpartBaseVelocityX : 1; // 0x38b
	char bImpartBaseVelocityY : 1; // 0x38b
	char bImpartBaseVelocityZ : 1; // 0x38b
	char bImpartBaseAngularVelocity : 1; // 0x38b
	char bJustTeleported : 1; // 0x38b
	char bNetworkUpdateReceived : 1; // 0x38b
	char bNetworkMovementModeChanged : 1; // 0x38b
	char bIgnoreClientMovementErrorChecksAndCorrection : 1; // 0x38c
	char bServerAcceptClientAuthoritativePosition : 1; // 0x38c
	char bNotifyApex : 1; // 0x38c
	char bCheatFlying : 1; // 0x38c
	char bWantsToCrouch : 1; // 0x38c
	char bCrouchMaintainsBaseLocation : 1; // 0x38c
	char bIgnoreBaseRotation : 1; // 0x38c
	char bFastAttachedMove : 1; // 0x38c
	char bAlwaysCheckFloor : 1; // 0x38d
	char bUseFlatBaseForFloorChecks : 1; // 0x38d
	char bPerformingJumpOff : 1; // 0x38d
	char bWantsToLeaveNavWalking : 1; // 0x38d
	char bUseRVOAvoidance : 1; // 0x38d
	char bRequestedMoveUseAcceleration : 1; // 0x38d
	char bWasSimulatingRootMotion : 1; // 0x38d
	char bAllowPhysicsRotationDuringAnimRootMotion : 1; // 0x38e
	char bHasRequestedVelocity : 1; // 0x38e
	char bRequestedMoveWithMaxSpeed : 1; // 0x38e
	char bWasAvoidanceUpdated : 1; // 0x38e
	char bProjectNavMeshWalking : 1; // 0x38e
	char bProjectNavMeshOnBothWorldChannels : 1; // 0x38e
	float AvoidanceConsiderationRadius; // 0x3a0
	FVector RequestedVelocity; // 0x3a4
	int32_t AvoidanceUID; // 0x3b0
	FNavAvoidanceMask AvoidanceGroup; // 0x3b4
	FNavAvoidanceMask GroupsToAvoid; // 0x3b8
	FNavAvoidanceMask GroupsToIgnore; // 0x3bc
	float AvoidanceWeight; // 0x3c0
	FVector PendingLaunchVelocity; // 0x3c4
	float NavMeshProjectionInterval; // 0x474
	float NavMeshProjectionTimer; // 0x478
	float NavMeshProjectionInterpSpeed; // 0x47c
	float NavMeshProjectionHeightScaleUp; // 0x480
	float NavMeshProjectionHeightScaleDown; // 0x484
	float NavWalkingFloorDistTolerance; // 0x488
	FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction; // 0x490
	float MinTimeBetweenTimeStampResets; // 0x4d8
	FRootMotionSourceGroup CurrentRootMotion; // 0x988
	FRootMotionSourceGroup ServerCorrectionRootMotion; // 0x9c0
	FRootMotionMovementParams RootMotionParams; // 0xa90
	FVector AnimRootMotionVelocity; // 0xad0
};

struct UGerstnerWaterWaves : UWaterWaves {
	UGerstnerWaterWaveGeneratorBase* GerstnerWaveGenerator; // 0x28
	TArray<FGerstnerWave> GerstnerWaves; // 0x30
	float MaxWaveHeight; // 0x40
};

struct USphereComponent : UShapeComponent {
	float SphereRadius; // 0x460
};

struct UMovieSceneMediaSection : UMovieSceneSection {
	UMediaSource* MediaSource; // 0xe8
	bool bLooping; // 0xf0
	FFrameNumber StartFrameOffset; // 0xf4
	UMediaTexture* MediaTexture; // 0xf8
	UMediaSoundComponent* MediaSoundComponent; // 0x100
	bool bUseExternalMediaPlayer; // 0x108
	UMediaPlayer* ExternalMediaPlayer; // 0x110
};

struct UMovieSceneEventTriggerSection : UMovieSceneEventSectionBase {
	FMovieSceneEventChannel EventChannel; // 0xf0
};

struct UInterpTrackInstBoolProp : UInterpTrackInstProperty {
	bool ResetBool; // 0x60
};

struct UMovieSceneSequencePlayer : UObject {
	FMulticastInlineDelegate OnPlay; // 0x410
	FMulticastInlineDelegate OnPlayReverse; // 0x420
	FMulticastInlineDelegate OnStop; // 0x430
	FMulticastInlineDelegate OnPause; // 0x440
	FMulticastInlineDelegate OnFinished; // 0x450
	EMovieScenePlayerStatus Status; // 0x460
	char bReversePlayback : 1; // 0x464
	UMovieSceneSequence* Sequence; // 0x468
	FFrameNumber StartTime; // 0x470
	int32_t DurationFrames; // 0x474
	float DurationSubFrames; // 0x478
	int32_t CurrentNumLoops; // 0x47c
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x480
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x498
	FMovieSceneSequenceReplProperties NetSyncProps; // 0x5e8
	TScriptInterface<IMovieScenePlaybackClient> PlaybackClient; // 0x5f8
	UMovieSceneSequenceTickManager* TickManager; // 0x608
};

struct UMeshAnalysisProperties : UInteractiveToolPropertySet {
	FString SurfaceArea; // 0x60
	FString Volume; // 0x70
};

struct UMaterialExpressionShadingModel : UMaterialExpression {
	EMaterialShadingModel ShadingModel; // 0x40
};

struct UMissionContainerWidget : UUserWidget {
	USizeBox* _missionObjectivesSizeBox; // 0x260
	UTextBlock* _missionName; // 0x268
	UVerticalBox* _objectivesWidgets; // 0x270
};

struct UMetabolismBodyOverviewPanel : UUserWidget {
	UScrollBox* _symptomsScrollBox; // 0x260
	UMetabolismHumanBodyPanel* _humanBodyPanel; // 0x268
	URichTextBlock* _symptomsBreadcrumb; // 0x270
	UMetabolismTissueGroupCheckbox* _checkboxMuscles; // 0x278
	UMetabolismTissueGroupCheckbox* _checkboxBones; // 0x280
	UMetabolismTissueGroupCheckbox* _checkboxOrgans; // 0x288
	UMetabolismRadialProgressBar* _rpb_Hitpoints; // 0x290
	UMetabolismRadialProgressBar* _rpb_Blood; // 0x298
	UOverlay* _treatmentMainOverlay; // 0x2a0
	UButton* _clearSelectionButton; // 0x2a8
	UOverlay* _selectedItemsOverlay; // 0x2b0
	UOverlay* _itemSelectionReminderOverlay; // 0x2b8
	UMetabolismLightItemDisplayPanel* _selectedItemsPanel; // 0x2c0
	UMetabolismBodyEffectProgressBar* _activeConditionProgressBar; // 0x2c8
	UButton* _treatButton; // 0x2d0
	UMetabolismSymptomTitle* _symptomWidgetClass; // 0x2d8
	FMetabolismRadialProgressBarColorScheme _lowHPColorScheme; // 0x2e0
	FMetabolismRadialProgressBarColorScheme _midHPColorScheme; // 0x360
	FMetabolismRadialProgressBarColorScheme _highHPColorScheme; // 0x3e0
	FMetabolismRadialProgressBarColorScheme _lowBloodOxygenationColorScheme; // 0x460
	FMetabolismRadialProgressBarColorScheme _highBloodOxygenationColorScheme; // 0x4e0
};

struct UCraftingComponentWidget : UDesignableUserWidget {
	UItemClassWidget* ItemWidget; // 0x278
	bool _isTool; // 0x280
	AItem* _itemClass; // 0x288
	bool _isAvailable; // 0x290
};

struct UBuriableItemComponent : UItemComponent {
	bool _canEverShowMarker; // 0xc0
	bool _canBeBuried; // 0xd0
	FBurialInformation _repBurialInformation; // 0xd8
	UStaticMesh* _buriedMesh; // 0xf8
	FVector _buriedMeshScale; // 0x100
	FVector _buriedMeshRelativeLocation; // 0x10c
	UMaterialBillboardComponent* _spriteMarkerBillboard; // 0x128
	FMaterialSpriteElement _spriteMarkerData; // 0x130
	FVector _spriteMarkerRelativeLocation; // 0x158
	bool _applyBuryMaterial; // 0x164
	float _startMeshFadeDistance; // 0x168
	float _endMeshFadeDistance; // 0x16c
	USkill* _skillToIncrease; // 0x170
	float _skillIncreaseAmount; // 0x178
	float _skillIncreaseModifier; // 0x17c
};

struct AMissionScheduler : AActor {
	bool _missionSchedulerEnabled; // 0x220
	TMap<AMission*, FMissionData> _availableMainStoryMissions; // 0x228
	TMap<AMission*, FMissionData> _availableSideStoryMissions; // 0x278
	TMap<AMission*, FMissionData> _availableTutorialMissions; // 0x2c8
	float _missionQueuingInterval; // 0x318
};

struct ABrush : AActor {
	EBrushType BrushType; // 0x220
	FColor BrushColor; // 0x224
	int32_t PolyFlags; // 0x228
	char bColored : 1; // 0x22c
	char bSolidWhenSelected : 1; // 0x22c
	char bPlaceableFromClassBrowser : 1; // 0x22c
	char bNotForClientOrServer : 1; // 0x22c
	UModel* Brush; // 0x230
	UBrushComponent* BrushComponent; // 0x238
	char bInManipulation : 1; // 0x240
	TArray<FGeomSelection> SavedSelections; // 0x248
};

struct UPolyEditOffsetProperties : UInteractiveToolPropertySet {
	bool bUseFaceNormals; // 0x60
};

struct ABasicLadder : AActor {
	UStaticMeshComponent* _mesh; // 0x220
	TArray<FLadderMarker> _ladderMarkers; // 0x228
};

struct UTraderMainPanel : UUserWidget {
	UTabContainer* _tabRow; // 0x260
	UWidgetSwitcher* _panelSwitcher; // 0x268
	UTraderBuyPanel* _buyPanel; // 0x270
	UTraderSellPanel* _sellPanel; // 0x278
	UPanelWidget* _loadingScreen; // 0x280
};

struct UFireItemState : UEquipmentItemState {
	float FuelDuration; // 0xf8
	bool IsBurning; // 0xfc
	FDbIntegerId SourceId; // 0x100
};

struct UWeaponCrossbowAnimInstance : UWeaponAnimInstance {
	bool _isCocked; // 0x300
};

struct UTrapItemState : UItemState {
	bool IsArmed; // 0xf8
	bool CanBeTriggered; // 0xf9
	ETrapTriggerType CurrentTrigger; // 0xfa
	FDbIntegerId LastTriggerOwner; // 0x100
	FDbIntegerId LastArmerId; // 0x108
	float Quality; // 0x110
	bool WasTriggered; // 0x114
	int32_t NumRemainingDefuseAttempts; // 0x118
	float OwnerlessElapsedTime; // 0x11c
	bool PendingDestroy; // 0x120
	UTriggerComponentState* Trigger; // 0x128
	TArray<char> TriggerData; // 0x130
};

struct AConZWaterSplineOcean : AConZWaterSpline {
	bool FollowCamera; // 0x2b8
	UTexture2D* OceanOpacityMaskTexture; // 0x2c0
};

struct UFoliageType_Actor : UFoliageType {
	AActor* ActorClass; // 0x3a8
	bool bShouldAttachToBaseComponent; // 0x3b0
};

struct ULandscapeWeightmapUsage : UObject {
	ULandscapeComponent* ChannelUsage[0x4]; // 0x28
	FGuid LayerGuid; // 0x48
};

struct UMovieSceneCaptureProtocolBase : UObject {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UCircularMenuSegmentSubmenuInfo : UCircularMenuSegmentInfo {
	TArray<UCircularMenuSegmentInfo*> SubmenuInfo; // 0x80
	float IndexOffset; // 0x90
	bool RequireSupporterPack; // 0x94
};

struct UMaterialExpressionLightmassReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0x40
	FExpressionInput Lightmass; // 0x54
};

struct UMaterialExpressionBreakMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput MaterialAttributes; // 0x40
};

struct UTimelineComponent : UActorComponent {
	FTimeline TheTimeline; // 0xb0
	char bIgnoreTimeDilation : 1; // 0x148
};

struct UFixedPlaneBrushOpProps : UBasePlaneBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct AWorldSettings : AInfo {
	int32_t VisibilityCellSize; // 0x228
	EVisibilityAggressiveness VisibilityAggressiveness; // 0x22c
	char bPrecomputeVisibility : 1; // 0x22d
	char bPlaceCellsOnlyAlongCameraTracks : 1; // 0x22d
	char bEnableWorldBoundsChecks : 1; // 0x22d
	char bEnableNavigationSystem : 1; // 0x22d
	char bEnableAISystem : 1; // 0x22d
	char bEnableWorldComposition : 1; // 0x22d
	char bUseClientSideLevelStreamingVolumes : 1; // 0x22d
	char bEnableWorldOriginRebasing : 1; // 0x22d
	char bWorldGravitySet : 1; // 0x22e
	char bGlobalGravitySet : 1; // 0x22e
	char bMinimizeBSPSections : 1; // 0x22e
	char bForceNoPrecomputedLighting : 1; // 0x22e
	char bHighPriorityLoading : 1; // 0x22e
	char bHighPriorityLoadingLocal : 1; // 0x22e
	char bOverrideDefaultBroadphaseSettings : 1; // 0x22e
	UNavigationSystemConfig* NavigationSystemConfig; // 0x230
	UNavigationSystemConfig* NavigationSystemConfigOverride; // 0x238
	float WorldToMeters; // 0x240
	float KillZ; // 0x244
	UDamageType* KillZDamageType; // 0x248
	float WorldGravityZ; // 0x250
	float GlobalGravityZ; // 0x254
	ADefaultPhysicsVolume* DefaultPhysicsVolumeClass; // 0x258
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x260
	AGameModeBase* DefaultGameMode; // 0x268
	AGameNetworkManager* GameNetworkManagerClass; // 0x270
	int32_t PackedLightAndShadowMapTextureSize; // 0x278
	FVector DefaultColorScale; // 0x27c
	float DefaultMaxDistanceFieldOcclusionDistance; // 0x288
	float GlobalDistanceFieldViewDistance; // 0x28c
	float DynamicIndirectShadowsSelfShadowingIntensity; // 0x290
	FReverbSettings DefaultReverbSettings; // 0x298
	FInteriorSettings DefaultAmbientZoneSettings; // 0x2b8
	float MonoCullingDistance; // 0x2dc
	USoundMix* DefaultBaseSoundMix; // 0x2e0
	float TimeDilation; // 0x2e8
	float MatineeTimeDilation; // 0x2ec
	float DemoPlayTimeDilation; // 0x2f0
	float MinGlobalTimeDilation; // 0x2f4
	float MaxGlobalTimeDilation; // 0x2f8
	float MinUndilatedFrameTime; // 0x2fc
	float MaxUndilatedFrameTime; // 0x300
	FBroadphaseSettings BroadphaseSettings; // 0x304
	APlayerState* Pauser; // 0x348
	TArray<FNetViewer> ReplicationViewers; // 0x350
	TArray<UAssetUserData*> AssetUserData; // 0x360
	APlayerState* PauserPlayerState; // 0x370
	int32_t MaxNumberOfBookmarks; // 0x378
	UBookmarkBase* DefaultBookmarkClass; // 0x380
	TArray<UBookmarkBase*> BookmarkArray; // 0x388
	UBookmarkBase* LastBookmarkClass; // 0x398
};

struct UDragDropOperation : UObject {
	FString Tag; // 0x28
	UObject* Payload; // 0x38
	UWidget* DefaultDragVisual; // 0x40
	EDragPivot Pivot; // 0x48
	FVector2D Offset; // 0x4c
	FMulticastInlineDelegate OnDrop; // 0x58
	FMulticastInlineDelegate OnDragCancelled; // 0x68
	FMulticastInlineDelegate OnDragged; // 0x78
};

struct UARFaceComponent : UARComponent {
	EARFaceTransformMixing TransformSetting; // 0x278
	bool bUpdateVertexNormal; // 0x279
	bool bFaceOutOfScreen; // 0x27a
	FARFaceUpdatePayload ReplicatedPayload; // 0x280
};

struct ANavigationData : AActor {
	UPrimitiveComponent* RenderingComp; // 0x228
	FNavDataConfig NavDataConfig; // 0x230
	char bEnableDrawing : 1; // 0x2a8
	char bForceRebuildOnLoad : 1; // 0x2a8
	char bAutoDestroyWhenNoNavigation : 1; // 0x2a8
	char bCanBeMainNavData : 1; // 0x2a8
	char bCanSpawnOnRebuild : 1; // 0x2a8
	char bRebuildAtRuntime : 1; // 0x2a8
	ERuntimeGenerationType RuntimeGeneration; // 0x2ac
	float ObservedPathsTickInterval; // 0x2b0
	uint32_t dataVersion; // 0x2b4
	TArray<FSupportedAreaData> SupportedAreas; // 0x3c0
};

struct UInterpTrackInstAkAudioEvent : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct USetCollisionGeometryToolProperties : UInteractiveToolPropertySet {
	ECollisionGeometryType GeometryType; // 0x60
	ESetCollisionGeometryInputMode InputMode; // 0x64
	bool bUseWorldSpace; // 0x68
	bool bRemoveContained; // 0x69
	bool bEnableMaxCount; // 0x6a
	int32_t MaxCount; // 0x6c
	float MinThickness; // 0x70
	bool bDetectBoxes; // 0x74
	bool bDetectSpheres; // 0x75
	bool bDetectCapsules; // 0x76
	bool bSimplifyHulls; // 0x77
	int32_t HullTargetFaceCount; // 0x78
	bool bSimplifyPolygons; // 0x7c
	float HullTolerance; // 0x80
	EProjectedHullAxis SweepAxis; // 0x84
	bool bAppendToExisting; // 0x88
	ECollisionGeometryMode SetCollisionType; // 0x8c
};

struct UServerInfoWidget_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UButton* Button_1; // 0x280
	UButton* DeleteServerButton; // 0x288
	USizeBox* FriendsSize; // 0x290
	UTextBlock* FriendsText; // 0x298
	UImage* Image_1; // 0x2a0
	UImage* Image_2; // 0x2a8
	UImage* Image_3; // 0x2b0
	UImage* Image_4; // 0x2b8
	UImage* Image_5; // 0x2c0
	UImage* Image_6; // 0x2c8
	UImage* Image_7; // 0x2d0
	UImage* Image_8; // 0x2d8
	USizeBox* ModeSize; // 0x2e0
	UTextBlock* ModeText; // 0x2e8
	USizeBox* NameSize; // 0x2f0
	UTextBlock* NameText; // 0x2f8
	USizeBox* PasswordSize; // 0x300
	UTextBlock* PasswordText; // 0x308
	USizeBox* PingSize; // 0x310
	UTextBlock* PingText; // 0x318
	USizeBox* PlayersSize; // 0x320
	UTextBlock* PlayersText; // 0x328
	UScaleBox* ScaleBoxVar; // 0x330
	UThrobber* Throbber_1; // 0x338
	USizeBox* TimeSize; // 0x340
	UTextBlock* TimeText; // 0x348
	USizeBox* VersionSize; // 0x350
	UTextBlock* VersionText; // 0x358
	FString Address; // 0x360
	int32_t Port; // 0x370
	bool HasContent; // 0x374
	FMulticastInlineDelegate OnClicked; // 0x378
	FServerInfo _serverInfo; // 0x388
	FMulticastInlineDelegate OnDoubleClicked; // 0x3d8
	float _lastClickTime; // 0x3e8
	int32_t FontSize; // 0x3ec
	bool IsFavoriteServer; // 0x3f0
	FMulticastInlineDelegate OnRemoved; // 0x3f8
	UAkAudioEvent* ClickSound; // 0x408
};

struct UMovieSceneAudioSection : UMovieSceneSection {
	USoundBase* Sound; // 0xe8
	FFrameNumber StartFrameOffset; // 0xf0
	float StartOffset; // 0xf4
	float AudioStartTime; // 0xf8
	float AudioDilationFactor; // 0xfc
	float AudioVolume; // 0x100
	FMovieSceneFloatChannel SoundVolume; // 0x108
	FMovieSceneFloatChannel PitchMultiplier; // 0x1a8
	FMovieSceneActorReferenceData AttachActorData; // 0x248
	bool bLooping; // 0x2f8
	bool bSuppressSubtitles; // 0x2f9
	bool bOverrideAttenuation; // 0x2fa
	USoundAttenuation* AttenuationSettings; // 0x300
	FDelegate OnQueueSubtitles; // 0x308
	FMulticastInlineDelegate OnAudioFinished; // 0x318
	FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x328
};

struct UObjectLibrary : UObject {
	UObject* ObjectBaseClass; // 0x28
	bool bHasBlueprintClasses; // 0x30
	TArray<UObject*> Objects; // 0x38
	TArray<TWeakObjectPtr<UObject>> WeakObjects; // 0x48
	bool bUseWeakReferences; // 0x58
	bool bIsFullyLoaded; // 0x59
};

struct UDisplaceMeshTool : USingleSelectionTool {
	UDisplaceMeshCommonProperties* CommonProperties; // 0x88
	UDisplaceMeshDirectionalFilterProperties* DirectionalFilterProperties; // 0x90
	UDisplaceMeshTextureMapProperties* TextureMapProperties; // 0x98
	UDisplaceMeshPerlinNoiseProperties* NoiseProperties; // 0xa0
	UDisplaceMeshSineWaveProperties* SineWaveProperties; // 0xa8
};

struct USpotLightComponent : UPointLightComponent {
	float InnerConeAngle; // 0x358
	float OuterConeAngle; // 0x35c
};

struct UUI_DoorSecurityUpgradeSlot_C : UUpgradeSlotWidget {
	UImage* _backgroundImage_2; // 0x2f8
};

struct UProceduralFoliageTile : UObject {
	UProceduralFoliageSpawner* FoliageSpawner; // 0x28
	TArray<FProceduralFoliageInstance> InstancesArray; // 0xd0
};

struct UZombieKamikazeComponent : UActorComponent {
	AConZCharacter* _owningCharacter; // 0xb0
	float _beepingDistance; // 0xb8
	float _explosionDistance; // 0xbc
	float _autoExplosionTime; // 0xc0
	float _postMortemExplosionTime; // 0xc4
	float _criticalPostMortemExplosionTime; // 0xc8
	float _baseDamage; // 0xd0
	float _minimumDamage; // 0xd4
	float _damageInnerRadius; // 0xd8
	float _damageOuterRadius; // 0xdc
	float _damageFalloff; // 0xe0
	float _netCullDistanceSquaredMeters; // 0xe4
	UAkAudioEvent* _explosionAudioEvent; // 0xe8
	UAkAudioEvent* _beepingStartAudioEvent; // 0xf0
	UAkAudioEvent* _beepingEndAudioEvent; // 0xf8
	UAkComponent* _beepingAudioComponent; // 0x100
	UParticleSystem* _explosionPS; // 0x108
	UMatineeCameraShake* _explosionCameraShakeClass; // 0x110
	UMaterialInterface* _sootDecal; // 0x118
	float _minSootDecalSize; // 0x120
	float _maxSootDecalSize; // 0x124
	float _minSootScalarParamValue; // 0x128
	float _maxSootScalarParamValue; // 0x12c
	FName _sootScalarParameterValueName; // 0x130
	float _decalsLifeSpan; // 0x138
	float _decalFadeFactor; // 0x13c
	int32_t _maximumNumberOfChunksSpawned; // 0x140
	float _minVelocityMagnitude; // 0x144
	float _maxVelocityMagnitude; // 0x148
	float _velocityHalfAngle; // 0x14c
	float _timeAfterChunksAreDeleted; // 0x150
	TArray<UStaticMesh*> _bodyPartChunks; // 0x158
	AMinigame* _minigameClass; // 0x168
	UBaseItemTag* _minigameToolTag; // 0x170
	AZombieKamikazeDummyTrap* _dummyTrapItemClass; // 0x178
	TArray<UItemSpawnerPreset*> _spawnerPresets; // 0x180
	bool _isCriticalPostMortemPhase; // 0x19a
	bool _isDisarmed; // 0x19b
	bool _shouldExplodeOnDeath; // 0x1b8
	float _dummyTrapItemDestroyDelay; // 0x1bc
};

struct ADatasmithAreaLightActor : AActor {
	EDatasmithAreaLightActorType LightType; // 0x220
	EDatasmithAreaLightActorShape LightShape; // 0x221
	FVector2D Dimensions; // 0x224
	float Intensity; // 0x22c
	ELightUnits IntensityUnits; // 0x230
	FLinearColor Color; // 0x234
	float Temperature; // 0x244
	UTextureLightProfile* IESTexture; // 0x248
	bool bUseIESBrightness; // 0x250
	float IESBrightnessScale; // 0x254
	FRotator Rotation; // 0x258
	float SourceRadius; // 0x264
	float SourceLength; // 0x268
	float AttenuationRadius; // 0x26c
	float SpotlightInnerAngle; // 0x270
	float SpotlightOuterAngle; // 0x274
};

struct ALandscapeStreamingProxy : ALandscapeProxy {
	LazyObjectProperty LandscapeActor; // 0x598
};

struct UABP_AK47_Magazine_C : UWeaponAttachmentMagazineAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x398
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x3e0
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x428
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x470
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x4b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x568
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x590
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x5b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x5e0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x680
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x730
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x778
	FAnimNode_Slot AnimGraphNode_Slot; // 0x7c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x808
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x830
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x858
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x880
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x9d8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0xa78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0xb28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0xba8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0xc28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0xca8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0xd28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0xda8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xe28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xec8
	FName LastSection; // 0xf48
};

struct UUI_FishingContainer_C : UFishingContainerWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
};

struct UIpNetDriver : UNetDriver {
	char LogPortUnreach : 1; // 0x758
	char AllowPlayerPortUnreach : 1; // 0x758
	uint32_t MaxPortCountToTry; // 0x75c
	uint32_t ServerDesiredSocketReceiveBufferBytes; // 0x76c
	uint32_t ServerDesiredSocketSendBufferBytes; // 0x770
	uint32_t ClientDesiredSocketReceiveBufferBytes; // 0x774
	uint32_t ClientDesiredSocketSendBufferBytes; // 0x778
	double MaxSecondsInReceive; // 0x780
	int32_t NbPacketsBetweenReceiveTimeTest; // 0x788
	float ResolutionConnectionTimeout; // 0x78c
};

struct UAutoCrossbowMagazineAnimInstance : UWeaponAttachmentMagazineAnimInstance {
	float _followerBoneLocationOffset; // 0x2e0
};

struct USlateAccessibleWidgetData : UObject {
	bool bCanChildrenBeAccessible; // 0x28
	ESlateAccessibleBehavior AccessibleBehavior; // 0x29
	ESlateAccessibleBehavior AccessibleSummaryBehavior; // 0x2a
	FText AccessibleText; // 0x30
	FDelegate AccessibleTextDelegate; // 0x48
	FText AccessibleSummaryText; // 0x58
	FDelegate AccessibleSummaryTextDelegate; // 0x70
};

struct AReplicationGraphDebugActor : AActor {
	UReplicationGraph* ReplicationGraph; // 0x220
	UNetReplicationGraphConnection* ConnectionManager; // 0x228
};

struct UParticleModuleRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionFloat LifeMultiplier; // 0x30
};

struct UAnimInstance : UObject {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bReceiveNotifiesFromLinkedInstances : 1; // 0x31
	char bPropagateNotifiesToLinkedInstances : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FMulticastInlineDelegate OnMontageBlendingOut; // 0x38
	FMulticastInlineDelegate OnMontageStarted; // 0x48
	FMulticastInlineDelegate OnMontageEnded; // 0x58
	FMulticastInlineDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct UMaterialExpressionRuntimeVirtualTextureOutput : UMaterialExpressionCustomOutput {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Specular; // 0x54
	FExpressionInput Roughness; // 0x68
	FExpressionInput Normal; // 0x7c
	FExpressionInput WorldHeight; // 0x90
	FExpressionInput Opacity; // 0xa4
	FExpressionInput Mask; // 0xb8
};

struct UABP_M1_Clip_C : UWeaponAttachmentMagazineAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x398
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x3e0
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x428
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x470
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x4b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x568
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x590
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x5b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x5e0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x680
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x730
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x778
	FAnimNode_Slot AnimGraphNode_Slot; // 0x7c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x808
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x830
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x858
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x880
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x9d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xa78
};

struct UAkDurationCallbackInfo : UAkEventCallbackInfo {
	float Duration; // 0x38
	float EstimatedDuration; // 0x3c
	int32_t AudioNodeID; // 0x40
	int32_t MediaID; // 0x44
	bool bStreaming; // 0x48
};

struct UBuriableChestItemComponent : UBuriableItemComponent {
	int64_t _decayInDaysWhenBuried; // 0x180
};

struct UActorComponent : UObject {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	int32_t UCSSerializationIndex; // 0x84
	char bNetAddressable : 1; // 0x88
	char bReplicates : 1; // 0x88
	char bAutoActivate : 1; // 0x89
	char bIsActive : 1; // 0x8a
	char bEditableWhenInherited : 1; // 0x8a
	char bCanEverAffectNavigation : 1; // 0x8a
	char bIsEditorOnly : 1; // 0x8a
	EComponentCreationMethod CreationMethod; // 0x8c
	FMulticastSparseDelegate OnComponentActivated; // 0x8d
	FMulticastSparseDelegate OnComponentDeactivated; // 0x8e
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct AComplexAnimalAIController : AAIController {
	EAnimalAgressivness Agressivness; // 0x328
	float SightIntimidateRadius; // 0x32c
	float SightAttackRadius; // 0x330
	float FoeChargeVelocity; // 0x334
	bool ShouldForceChargeRotation; // 0x338
	float AnimalVelocityThatMakesThisAnimalFlee; // 0x33c
	float FleeDistance; // 0x340
	float FleeTime; // 0x344
	float TrotTime; // 0x348
	float TimeToAttackWhenAggro; // 0x34c
	float TimeToQuitObserve; // 0x350
	float MinReactionTime; // 0x354
	float MaxReactionTime; // 0x358
	float MovingUpdateInterval; // 0x35c
	float AttackingUpdateInetrval; // 0x360
	float PathSegmentLength_OBSOLETE; // 0x364
	float MinPaceDuration_OBSOLETE; // 0x368
	int32_t MaxNumWalks_OBSOLETE; // 0x36c
	int32_t MaxNumTrots_OBSOLETE; // 0x370
	float PathDirectionCounterResetTime_OBOLETE; // 0x374
	float MoveSegmentLength; // 0x378
	float BackOffDistance; // 0x37c
	float AttackTrackingDistance; // 0x380
	float PredictionFactor; // 0x384
	bool BackAndForthStuckCheck; // 0x388
	char AttackAttempts; // 0x389
	float ActionChangedDelay; // 0x38c
	float CloseAttackRepeatDelay; // 0x390
	float AttackChainDelay; // 0x394
	int32_t BlockedPathRetryAttempts; // 0x398
	float DirectionLockTime; // 0x39c
	float MinWalkTimeDuringRoaming; // 0x3a0
	float MaxWalkTimeDuringRoaming; // 0x3a4
	float MinStandTimeDuringRoaming; // 0x3a8
	float MaxStandTimeDuringRoaming; // 0x3ac
	float IntimidateTime; // 0x3b0
	float IntimidateAnimationEndTime; // 0x3b4
	float AlertActionTime; // 0x3b8
	float AlertStartupTime; // 0x3bc
	float AlertAllowedAgainTime; // 0x3c0
	float DoNotDespawnTime; // 0x3c4
	UAISenseConfig_Sight* NormalAISenseSight; // 0x3c8
	UAISenseConfig_Hearing* NormalAISenseHearing; // 0x3d0
	UAISenseConfig_Hearing* RelaxedAISenseHearing; // 0x3d8
	UAISenseConfig_Hearing* AlertedAISenseHearing; // 0x3e0
	UAISenseConfig_Sight* SleepAISenseSight; // 0x3e8
	AComplexAnimal2* _animal; // 0x3f0
	float _healthPercentageToFlee; // 0x470
	float _damageMagnitudeHealthPercentageToFlee; // 0x474
};

struct UEnvQueryGenerator_ProjectedPoints : UEnvQueryGenerator {
	FEnvTraceData ProjectionData; // 0x50
};

struct UHLODProxy : UObject {
	TArray<FHLODProxyMesh> ProxyMeshes; // 0x28
	TMap<UHLODProxyDesc*, FHLODProxyMesh> HLODActors; // 0x38
};

struct UGridPathFollowingComponent : UPathFollowingComponent {
	UNavLocalGridManager* GridManager; // 0x250
};

struct UParticleModuleSizeScaleBySpeed : UParticleModuleSizeBase {
	FVector2D SpeedScale; // 0x30
	FVector2D MaxScale; // 0x38
};

struct UVehicleWheel : UObject {
	UStaticMesh* CollisionMesh; // 0x28
	bool bDontCreateShape; // 0x30
	bool bAutoAdjustCollisionSize; // 0x31
	FVector Offset; // 0x34
	float ShapeRadius; // 0x40
	float ShapeWidth; // 0x44
	float Mass; // 0x48
	float DampingRate; // 0x4c
	float SteerAngle; // 0x50
	bool bAffectedByHandbrake; // 0x54
	UTireType* TireType; // 0x58
	UTireConfig* TireConfig; // 0x60
	float LatStiffMaxLoad; // 0x68
	float LatStiffValue; // 0x6c
	float LongStiffValue; // 0x70
	float SuspensionForceOffset; // 0x74
	float SuspensionMaxRaise; // 0x78
	float SuspensionMaxDrop; // 0x7c
	float SuspensionNaturalFrequency; // 0x80
	float SuspensionDampingRatio; // 0x84
	EWheelSweepType SweepType; // 0x88
	float MaxBrakeTorque; // 0x8c
	float MaxHandBrakeTorque; // 0x90
	UWheeledVehicleMovementComponent* VehicleSim; // 0x98
	int32_t WheelIndex; // 0xa0
	float DebugLongSlip; // 0xa4
	float DebugLatSlip; // 0xa8
	float DebugNormalizedTireLoad; // 0xac
	float DebugWheelTorque; // 0xb4
	float DebugLongForce; // 0xb8
	float DebugLatForce; // 0xbc
	FVector Location; // 0xc0
	FVector OldLocation; // 0xcc
	FVector Velocity; // 0xd8
};

struct UHeatSourceMarkersComponent : USceneComponent {
	TArray<FHeatSource> _heatSources; // 0x1f8
};

struct UMovieSceneEntitySystem : UObject {
	UMovieSceneEntitySystemLinker* Linker; // 0x28
};

struct UWeaponAutoCrossbowAnimInstance : UWeaponAnimInstance {
	float _followerBoneLocationOffset; // 0x300
};

struct UMaterialExpressionRayTracingQualitySwitch : UMaterialExpression {
	FExpressionInput Normal; // 0x40
	FExpressionInput RayTraced; // 0x54
};

struct USpinBox : UWidget {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	FSpinBoxStyle WidgetStyle; // 0x120
	USlateWidgetStyleAsset* Style; // 0x408
	int32_t MinFractionalDigits; // 0x410
	int32_t MaxFractionalDigits; // 0x414
	bool bAlwaysUsesDeltaSnap; // 0x418
	float Delta; // 0x41c
	float SliderExponent; // 0x420
	FSlateFontInfo Font; // 0x428
	ETextJustify Justification; // 0x480
	float MinDesiredWidth; // 0x484
	bool ClearKeyboardFocusOnCommit; // 0x488
	bool SelectAllTextOnCommit; // 0x489
	FSlateColor ForegroundColor; // 0x490
	FMulticastInlineDelegate OnValueChanged; // 0x4b8
	FMulticastInlineDelegate OnValueCommitted; // 0x4c8
	FMulticastInlineDelegate OnBeginSliderMovement; // 0x4d8
	FMulticastInlineDelegate OnEndSliderMovement; // 0x4e8
	char bOverride_MinValue : 1; // 0x4f8
	char bOverride_MaxValue : 1; // 0x4f8
	char bOverride_MinSliderValue : 1; // 0x4f8
	char bOverride_MaxSliderValue : 1; // 0x4f8
	float MinValue; // 0x4fc
	float MaxValue; // 0x500
	float MinSliderValue; // 0x504
	float MaxSliderValue; // 0x508
};

struct ULevelCapture : UMovieSceneCapture {
	bool bAutoStartCapture; // 0x220
	FGuid PrerequisiteActorId; // 0x22c
};

struct UImage : UWidget {
	FSlateBrush Brush; // 0x108
	FDelegate BrushDelegate; // 0x190
	FLinearColor ColorAndOpacity; // 0x1a0
	FDelegate ColorAndOpacityDelegate; // 0x1b0
	bool bFlipForRightToLeftFlowDirection; // 0x1c0
	FDelegate OnMouseButtonDownEvent; // 0x1c4
};

struct ABP_Survival_Storage_Chest_Objective_C : ABlueprintableItemObjective {
	USceneComponent* DefaultSceneRoot; // 0x368
};

struct UBTTask_MoveDirectlyToward : UBTTask_MoveTo {
	char bDisablePathUpdateOnGoalLocationChange : 1; // 0xb0
	char bProjectVectorGoalToNavigation : 1; // 0xb0
	char bUpdatedDeprecatedProperties : 1; // 0xb0
};

struct UABP_AKS_74U_Magazine_C : UWeaponAttachmentMagazineAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x360
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x3f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x438
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x4e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x510
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x538
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x560
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x600
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x6b0
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x6f8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x740
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x788
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x7b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x7d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x800
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x958
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x9f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0xa78
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0xaf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0xba8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0xc28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0xca8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0xd28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0xda8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xe28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xec8
};

struct UInterpTrackInstMove : UInterpTrackInst {
	FVector ResetLocation; // 0x28
	FRotator ResetRotation; // 0x34
};

struct UBlackboardKeyType_Class : UBlackboardKeyType {
	UObject* BaseClass; // 0x30
};

struct UDatasmithPostProcessVolumeTemplate : UDatasmithObjectTemplate {
	FDatasmithPostProcessSettingsTemplate Settings; // 0x30
	char bEnabled : 1; // 0x70
	char bUnbound : 1; // 0x70
};

struct USingleClickInputBehavior : UAnyButtonInputBehavior {
	bool HitTestOnRelease; // 0xc0
};

struct ADoor : AActor {
	FName ControlName; // 0x238
	UMeshComponent* Mesh; // 0x240
	FMulticastInlineDelegate OnOpened; // 0x248
	EDoorType _doorType; // 0x2b8
	USceneComponent* _rootComponent; // 0x2c0
	int32_t _maxNumberOfLocks; // 0x2cc
	int32_t _maxNumberOfZappers; // 0x2d0
	bool CanOpenOnBothSides; // 0x2d4
	float _openingDuration; // 0x2d8
	bool _canOpen; // 0x2dc
	UAkAudioEvent* _openingSoundCue; // 0x2e0
	UAkAudioEvent* _openedSoundCue; // 0x2e8
	UAkAudioEvent* _closingSoundCue; // 0x2f0
	UAkAudioEvent* _closedSoundCue; // 0x2f8
	float _noiseLoudness; // 0x300
	bool _isJammed; // 0x304
	float _jammedOpenPercent; // 0x308
	UDoorUnlockData* _doorUnlockData; // 0x310
	EDoorStateFlags _stateFlags; // 0x320
	bool _canEverBeOpened; // 0x322
	bool _canEverBeClosed; // 0x323
	UPriceCategory* _priceCategory; // 0x328
	TArray<UObject*> _upgradeItemsClasses; // 0x330
	TArray<FLockData> _lockData; // 0x340
	TArray<UObject*> _originalUpgradeItemsClasses; // 0x350
	TArray<FLockData> _originalLockData; // 0x360
	FDbIntegerId _owningUserProfileId; // 0x380
	UDoorUpgradeWidget* _upgradeWidget; // 0x398
	FDoorRepData _doorRepData; // 0x3a8
	bool _disableSerialization; // 0x3f5
};

struct UItemWithTextState : UItemState {
	FDbIntegerId OwningUserProfileId; // 0xf8
	FString Text; // 0x100
};

struct UAnimNotify_PlaySound : UAnimNotify {
	USoundBase* Sound; // 0x38
	float VolumeMultiplier; // 0x40
	float PitchMultiplier; // 0x44
	char bFollow : 1; // 0x48
	FName AttachName; // 0x4c
};

struct UInAppPurchaseRestoreCallbackProxy2 : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UFXSystemAsset : UObject {
	uint32_t MaxPoolSize; // 0x28
	uint32_t PoolPrimeSize; // 0x2c
};

struct UBreakpoint : UObject {
	char bEnabled : 1; // 0x28
	UEdGraphNode* Node; // 0x30
	char bStepOnce : 1; // 0x38
	char bStepOnce_WasPreviouslyDisabled : 1; // 0x38
	char bStepOnce_RemoveAfterHit : 1; // 0x38
};

struct UMaterialExpressionSaturate : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UPolyEditSetUVProperties : UInteractiveToolPropertySet {
	bool bShowMaterial; // 0x60
};

struct UARComponent : USceneComponent {
	FGuid NativeID; // 0x1f8
	bool bUseDefaultReplication; // 0x238
	UMaterialInterface* DefaultMeshMaterial; // 0x240
	UMaterialInterface* DefaultWireframeMeshMaterial; // 0x248
	UMRMeshComponent* MRMeshComponent; // 0x250
	UARTrackedGeometry* MyTrackedGeometry; // 0x258
};

struct AWheeledVehicle : APawn {
	USkeletalMeshComponent* Mesh; // 0x280
	UWheeledVehicleMovementComponent* VehicleMovement; // 0x288
};

struct AWeaponAttachment : AItem {
	UStaticMesh* _staticMeshWhenAttached; // 0x7c8
};

struct UBTCompositeNode : UBTNode {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct UHUDNotificationDescription : UNotificationDescription {
	FText Message; // 0x40
	bool beep; // 0x58
};

struct ULargeAquaticAnimalSpeciesData : UDataAsset {
	ALargeAquaticAnimal* AnimalClass; // 0x30
	float RequiredDepthForSpawning; // 0x38
	EConZWaterSplineType SpawningWaterType; // 0x3c
};

struct UEnvQueryGenerator_BlueprintBase : UEnvQueryGenerator {
	FText GeneratorsActionDescription; // 0x50
	UEnvQueryContext* Context; // 0x68
	UEnvQueryItemType* GeneratedItemType; // 0x70
};

struct UHandheldLightItemAnimInstance : UAnimInstance {
	float _lightAngle; // 0x2b8
};

struct UInventoryGridWidget : UDesignableUserWidget {
	UImage* _image; // 0x278
};

struct UUI_CraftingInfoSecondIteration_C : UCraftingInfoWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UImage* BackgroundImage; // 0x370
	UImage* CraftingTitle; // 0x378
	UTextBlock* DescriptionText; // 0x380
	UImage* ExpandedSpacingLine; // 0x388
	UImage* Image_1; // 0x390
	UTextBlock* TitleText; // 0x398
};

struct UMissionTabWidget : UUserWidget {
	UTextBlock* _tabNameText; // 0x278
	UImage* _backgroundImage; // 0x280
	USizeBox* _sizeBox; // 0x288
	FText _tabName; // 0x290
	float _activeTabHeight; // 0x2a8
	float _inactiveTabHeight; // 0x2ac
	float _activeFontSize; // 0x2b0
	float _inactiveFontSize; // 0x2b4
	UTexture2D* _activeBackgroundTexture; // 0x2b8
	UTexture2D* _inactiveBackgroundTexture; // 0x2c0
	FLinearColor _activeFontColor; // 0x2c8
	FLinearColor _inactiveFontColor; // 0x2d8
};

struct UDcxVehicleAnimInstance : UAnimInstance {
	UDcxVehicleWheelsComponent* VehicleWheels; // 0xa30
};

struct AFireplaceItem : AFireItem {
	TArray<UStaticMesh*> _fireplaceMesh; // 0x848
	int32_t _materialSwitchIndex; // 0x858
	UMaterialInterface* _litMaterial; // 0x860
	UMaterialInterface* _unlitMaterial; // 0x868
	USphereComponent* _sphereCollider; // 0x870
	float _minimumResourceAmountRequiredForExtinguishInteraction; // 0x878
	float _maximumResourceAmountTakenForExtinguishInteraction; // 0x87c
	float _fireDamageProcessingPeriod; // 0x880
	float _fireBaseDamageToItemsPerSecond; // 0x888
	float _fireDamageRadius; // 0x88c
	int32_t _minBurningStageForManualPutOut; // 0x890
};

struct ABP_WeaponBullet_ShotgunBird_C : AProjectileShotgun {
	FPointerToUberGraphFrame UberGraphFrame; // 0x428
};

struct UConsoleTextLine_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UTextBlock* TextLine; // 0x268
};

struct UAnimCompress_PerTrackCompression : UAnimCompress_RemoveLinearKeys {
	float MaxZeroingThreshold; // 0x60
	float MaxPosDiffBitwise; // 0x64
	float MaxAngleDiffBitwise; // 0x68
	float MaxScaleDiffBitwise; // 0x6c
	TArray<AnimationCompressionFormat> AllowedRotationFormats; // 0x70
	TArray<AnimationCompressionFormat> AllowedTranslationFormats; // 0x80
	TArray<AnimationCompressionFormat> AllowedScaleFormats; // 0x90
	char bResampleAnimation : 1; // 0xa0
	float ResampledFramerate; // 0xa4
	int32_t MinKeysForResampling; // 0xa8
	char bUseAdaptiveError : 1; // 0xac
	char bUseOverrideForEndEffectors : 1; // 0xac
	int32_t TrackHeightBias; // 0xb0
	float ParentingDivisor; // 0xb4
	float ParentingDivisorExponent; // 0xb8
	char bUseAdaptiveError2 : 1; // 0xbc
	float RotationErrorSourceRatio; // 0xc0
	float TranslationErrorSourceRatio; // 0xc4
	float ScaleErrorSourceRatio; // 0xc8
	float MaxErrorPerTrackRatio; // 0xcc
	float PerturbationProbeSize; // 0xd0
};

struct UPhysicsSettings : UPhysicsSettingsCore {
	FRigidBodyErrorCorrection PhysicErrorCorrection; // 0xe0
	ESettingsLockedAxis LockedAxis; // 0x114
	ESettingsDOF DefaultDegreesOfFreedom; // 0x115
	bool bSuppressFaceRemapTable; // 0x116
	bool bSupportUVFromHitResults; // 0x117
	bool bDisableActiveActors; // 0x118
	bool bDisableKinematicStaticPairs; // 0x119
	bool bDisableKinematicKinematicPairs; // 0x11a
	bool bDisableCCD; // 0x11b
	bool bEnableEnhancedDeterminism; // 0x11c
	float AnimPhysicsMinDeltaTime; // 0x120
	bool bSimulateAnimPhysicsAfterReset; // 0x124
	float MaxPhysicsDeltaTime; // 0x128
	bool bSubstepping; // 0x12c
	bool bSubsteppingAsync; // 0x12d
	float MaxSubstepDeltaTime; // 0x130
	int32_t MaxSubsteps; // 0x134
	float SyncSceneSmoothingFactor; // 0x138
	float InitialAverageFrameRate; // 0x13c
	int32_t PhysXTreeRebuildRate; // 0x140
	TArray<FPhysicalSurfaceName> PhysicalSurfaces; // 0x148
	FBroadphaseSettings DefaultBroadphaseSettings; // 0x158
	float MinDeltaVelocityForHitEvents; // 0x198
	FChaosPhysicsSettings ChaosSettings; // 0x19c
};

struct UDatasmithCineCameraComponentTemplate : UDatasmithObjectTemplate {
	FDatasmithCameraFilmbackSettingsTemplate FilmbackSettings; // 0x30
	FDatasmithCameraLensSettingsTemplate LensSettings; // 0x38
	FDatasmithCameraFocusSettingsTemplate FocusSettings; // 0x3c
	float CurrentFocalLength; // 0x44
	float CurrentAperture; // 0x48
	FDatasmithPostProcessSettingsTemplate PostProcessSettings; // 0x50
};

struct UModularTooltipElement_Affects : UModularTooltipElement {
	UTextBlock* _targetTextBlock; // 0x2e8
	UOverlay* _affectElementOverlay; // 0x2f0
};

struct UUI_DoorUpgrade_C : UDoorUpgradeWidget {
	UImage* CraftingTitle; // 0x338
	UImage* Image_1; // 0x340
	UTextBlock* TitleText; // 0x348
	UTextBlock* TitleText_4; // 0x350
	UUI_DoorSecurityUpgradeSlot_C* UI_DoorSecurityUpgradeSlot; // 0x358
	UUI_DoorSecurityUpgradeSlot_C* UI_DoorSecurityUpgradeSlot_275; // 0x360
	UUI_DoorUpgradeSlot_C* UI_DoorUpgradeSlot; // 0x368
	UUI_DoorUpgradeSlot_C* UI_DoorUpgradeSlot_1; // 0x370
	UUI_DoorUpgradeSlot_C* UI_DoorUpgradeSlot_2; // 0x378
};

struct UMaterialExpressionShadingPathSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x3]; // 0x54
};

struct UMovieSceneEntitySystemLinker : UObject {
	FMovieSceneEntitySystemGraph SystemGraph; // 0x238
};

struct UBTTask_MakeNoise : UBTTaskNode {
	float Loudnes; // 0x70
};

struct UModelComponent : UPrimitiveComponent {
	UBodySetup* ModelBodySetup; // 0x460
};

struct ABP_PrisonerCorpse_C : APrisonerCorpse {
	FPointerToUberGraphFrame UberGraphFrame; // 0x600
	UCurveFloat* ShortHairCurve; // 0x608
	UCurveFloat* MediumHairCurve; // 0x610
	UCurveFloat* MediumHairCurvePDO; // 0x618
	UCurveFloat* MediumHairCurveTopOpacity; // 0x620
	UCurveFloat* LongHairCurve; // 0x628
	UCurveFloat* LongHairCurvePDO; // 0x630
	UCurveFloat* LongHairCurveTopOpacity; // 0x638
	UCurveFloat* ShortFacialHairCurve; // 0x640
	UCurveFloat* MediumFacialHairCurve; // 0x648
	UCurveFloat* MediumFacialHairCurvePDO; // 0x650
	UCurveFloat* MediumFacialHairCurveTopOpacity; // 0x658
	UCurveFloat* LongFacialHairCurve; // 0x660
	UCurveFloat* LongFacialHairCurvePDO; // 0x668
	UCurveFloat* LongFacialHairCurveTopOpacity; // 0x670
	UCurveFloat* AfroMediumHairCurve; // 0x678
};

struct UDamageType : UObject {
	char bCausedByWorld : 1; // 0x28
	char bScaleMomentumByMass : 1; // 0x28
	char bRadialDamageVelChange : 1; // 0x28
	float DamageImpulse; // 0x2c
	float DestructibleImpulse; // 0x30
	float DestructibleDamageSpreadScale; // 0x34
	float DamageFalloff; // 0x38
};

struct UWheeledVehicleMovementComponent4W : UWheeledVehicleMovementComponent {
	FVehicleEngineData EngineSetup; // 0x290
	FVehicleDifferential4WData DifferentialSetup; // 0x330
	float AckermannAccuracy; // 0x34c
	FVehicleTransmissionData TransmissionSetup; // 0x350
	FRuntimeFloatCurve SteeringCurve; // 0x380
};

struct UPrisonerResponseIdle_StaminaInRange : UPrisonerResponseIdle {
	FFloatRange StaminaRatioRange; // 0x98
};

struct UMaterialExpressionTangent : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UUI_ConfirmationBase_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	bool DestroyAfterClick; // 0x280
	FMulticastInlineDelegate NoClicked; // 0x288
};

struct UUI_FoodOverviewTooltipPanel_C : UItemTooltipPanel {
	UImage* Image_9; // 0x2c8
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_1; // 0x2d0
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_2; // 0x2d8
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_3; // 0x2e0
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_5; // 0x2e8
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_6; // 0x2f0
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_7; // 0x2f8
	UUI_TooltipOverviewElement_C* UI_TooltipOverviewElement_C_8; // 0x300
};

struct URevolveProperties : UInteractiveToolPropertySet {
	double RevolutionDegrees; // 0x60
	double RevolutionDegreesOffset; // 0x68
	int32_t Steps; // 0x70
	bool bReverseRevolutionDirection; // 0x74
	bool bFlipMesh; // 0x75
	bool bProfileIsCrossSectionOfSide; // 0x76
	ERevolvePropertiesPolygroupMode PolygroupMode; // 0x77
	ERevolvePropertiesQuadSplit QuadSplitMode; // 0x78
	double DiagonalProportionTolerance; // 0x80
	ERevolvePropertiesCapFillMode CapFillMode; // 0x88
	bool bWeldFullRevolution; // 0x89
	bool bWeldVertsOnAxis; // 0x8a
	double AxisWeldTolerance; // 0x90
	bool bSharpNormals; // 0x98
	double SharpNormalAngleTolerance; // 0xa0
	bool bFlipVs; // 0xa8
	bool bUVsSkipFullyWeldedEdges; // 0xa9
};

struct UMaterialExpressionMultiply : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UGizmoAxisIntervalParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoFloatParameterSource> FloatParameterSource; // 0x48
	float MinParameter; // 0x58
	float MaxParameter; // 0x5c
};

struct URemoveCartridge : UWeaponActionUnloadAmmoSequence {
	FName MontageEndSectionName; // 0x50
};

struct UIntervalGizmo : UInteractiveGizmo {
	UGizmoTransformChangeStateTarget* StateTarget; // 0x38
	UTransformProxy* TransformProxy; // 0x50
	TArray<UPrimitiveComponent*> ActiveComponents; // 0x58
	TArray<UInteractiveGizmo*> ActiveGizmos; // 0x68
	UGizmoComponentAxisSource* AxisYSource; // 0x90
	UGizmoComponentAxisSource* AxisZSource; // 0x98
};

struct ULevelStreaming : UObject {
	TSoftObjectPtr<UWorld> WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int32_t LevelLODIndex; // 0xb0
	int32_t StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xba
	char bShouldBeLoaded : 1; // 0xba
	char bLocked : 1; // 0xba
	char bIsStatic : 1; // 0xba
	char bShouldBlockOnLoad : 1; // 0xba
	char bShouldBlockOnUnload : 1; // 0xbb
	char bDisableDistanceStreaming : 1; // 0xbb
	char bDrawOnLevelStatusMap : 1; // 0xbb
	FLinearColor LevelColor; // 0xbc
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd0
	float MinTimeBetweenVolumeUnloadRequests; // 0xe0
	FMulticastInlineDelegate OnLevelLoaded; // 0xe8
	FMulticastInlineDelegate OnLevelUnloaded; // 0xf8
	FMulticastInlineDelegate OnLevelShown; // 0x108
	FMulticastInlineDelegate OnLevelHidden; // 0x118
	ULevel* LoadedLevel; // 0x128
	ULevel* PendingUnloadLevel; // 0x130
};

struct UInterpTrack : UObject {
	TArray<UInterpTrack*> SubTracks; // 0x38
	UInterpTrackInst* TrackInstClass; // 0x48
	ETrackActiveCondition ActiveCondition; // 0x50
	FString TrackTitle; // 0x58
	char bOnePerGroup : 1; // 0x68
	char bDirGroupOnly : 1; // 0x68
	char bDisableTrack : 1; // 0x68
	char bIsSelected : 1; // 0x68
	char bIsAnimControlTrack : 1; // 0x68
	char bSubTrackOnly : 1; // 0x68
	char bVisible : 1; // 0x68
	char bIsRecording : 1; // 0x68
};

struct UGizmoTransformProxyTransformSource : UGizmoBaseTransformSource {
	UTransformProxy* Proxy; // 0x48
};

struct URemoveMagazineRemoveCartridge : UWeaponActionUnloadAmmoSequence {
	FName MontageEndSectionName; // 0x50
};

struct ULiveLinkTransformAxisSwitchPreProcessor : ULiveLinkFramePreProcessor {
	ELiveLinkAxis OrientationAxisX; // 0x28
	ELiveLinkAxis OrientationAxisY; // 0x29
	ELiveLinkAxis OrientationAxisZ; // 0x2a
	ELiveLinkAxis TranslationAxisX; // 0x2b
	ELiveLinkAxis TranslationAxisY; // 0x2c
	ELiveLinkAxis TranslationAxisZ; // 0x2d
};

struct UFillItemWithReplenishableResourceAssetData : UInteractionAssetData {
	FFillItemWithReplenishableResourceInteractionData InteractionData; // 0x30
};

struct USledgeMountSlot : UActorComponent {
	FName _socketName; // 0xb8
	UAkAudioEvent* _mountAudioEvent; // 0xc0
	int32_t _mountPriority; // 0xc8
	TArray<FMountSlotEntryPoint> _entryPoints; // 0xd0
	UAkAudioEvent* _unmountAudioEvent; // 0xe0
	bool _isReachableFromSky; // 0xe8
	EMotionIntensity _mountingMotionIntensity; // 0xe9
	EMotionIntensity _unmountingMotionIntensity; // 0xea
	FVector _mounteeCenterOfMassOffset; // 0xec
	float _minEffectiveMounteeMass; // 0xf8
	float _maxEffectiveMounteeMass; // 0xfc
	UObject* _mountee; // 0x100
	UObject* _reservee; // 0x108
	bool _canMounteeBeAttackedByMelee; // 0x110
	TArray<UPhysicalMaterial*> _interactionZoneMaterials; // 0x118
};

struct UGameMapsSettings : UObject {
	FString LocalMapOptions; // 0x28
	FSoftObjectPath TransitionMap; // 0x38
	bool bUseSplitscreen; // 0x50
	ETwoPlayerSplitScreenType TwoPlayerSplitscreenLayout; // 0x51
	EThreePlayerSplitScreenType ThreePlayerSplitscreenLayout; // 0x52
	EFourPlayerSplitScreenType FourPlayerSplitscreenLayout; // 0x53
	bool bOffsetPlayerGamepadIds; // 0x54
	FSoftClassPath GameInstanceClass; // 0x58
	FSoftObjectPath GameDefaultMap; // 0x70
	FSoftObjectPath ServerDefaultMap; // 0x88
	FSoftClassPath GlobalDefaultGameMode; // 0xa0
	FSoftClassPath GlobalDefaultServerGameMode; // 0xb8
	TArray<FGameModeName> GameModeMapPrefixes; // 0xd0
	TArray<FGameModeName> GameModeClassAliases; // 0xe0
};

struct UAssetExportTask : UObject {
	UObject* Object; // 0x28
	UExporter* Exporter; // 0x30
	FString Filename; // 0x38
	bool bSelected; // 0x48
	bool bReplaceIdentical; // 0x49
	bool bPrompt; // 0x4a
	bool bAutomated; // 0x4b
	bool bUseFileArchive; // 0x4c
	bool bWriteEmptyFiles; // 0x4d
	TArray<UObject*> IgnoreObjectList; // 0x50
	UObject* Options; // 0x60
	TArray<FString> Errors; // 0x68
};

struct UBookMark2D : UBookmarkBase {
	float Zoom2D; // 0x28
	FIntPoint Location; // 0x2c
};

struct UAISenseConfig_Hearing : UAISenseConfig {
	UAISense_Hearing* Implementation; // 0x48
	float HearingRange; // 0x50
	float LoSHearingRange; // 0x54
	char bUseLoSHearing : 1; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
	bool bHearingOcclusionEnabled; // 0x60
	float HearingRangeReductionIfOccluded; // 0x64
	ECollisionChannel HearingOcclusionCollisionChannel; // 0x68
};

struct UEnvQueryManager : UAISubsystem {
	TArray<FEnvQueryInstanceCache> InstanceCache; // 0xa8
	TArray<UEnvQueryContext*> LocalContexts; // 0xb8
	TArray<UEnvQueryInstanceBlueprintWrapper*> GCShieldedWrappers; // 0xc8
	float MaxAllowedTestingTime; // 0x12c
	bool bTestQueriesUsingBreadth; // 0x130
	int32_t QueryCountWarningThreshold; // 0x134
	double QueryCountWarningInterval; // 0x138
};

struct UBaseVoxelTool : UBaseCreateFromSelectedTool {
	UVoxelProperties* VoxProperties; // 0xf0
};

struct USpaceCurveDeformationMechanic : UInteractionMechanic {
	USingleClickInputBehavior* ClickBehavior; // 0x40
	UMouseHoverBehavior* HoverBehavior; // 0x48
	USpaceCurveDeformationMechanicPropertySet* TransformProperties; // 0x68
	APreviewGeometryActor* PreviewGeometryActor; // 0x168
	UPointSetComponent* RenderPoints; // 0x170
	ULineSetComponent* RenderSegments; // 0x178
	UTransformProxy* PointTransformProxy; // 0x1b8
	UTransformGizmo* PointTransformGizmo; // 0x1c0
};

struct USourceEffectFilterPreset : USoundEffectSourcePreset {
	FSourceEffectFilterSettings Settings; // 0xb0
};

struct UUpgradeWidget : UDesignableUserWidget {
	AItem* _upgradeClass; // 0x278
	UImage* _itemIcon; // 0x280
	UImage* _backgroundImage; // 0x288
	UTextBlock* _priceText; // 0x290
	FLinearColor _regularColour; // 0x298
	FLinearColor _unavailableColour; // 0x2a8
	FLinearColor _availableColour; // 0x2b8
};

struct UMetabolismCurrentStatDark : UUserWidget {
	FText Title; // 0x260
	UImage* _titleBackground; // 0x278
	UTextBlock* _title; // 0x280
	UImage* _valueBackground; // 0x288
	UTextBlock* _value; // 0x290
	FDataTableRowHandle _titleBackgroundColor; // 0x298
	FDataTableRowHandle _titleForegroundColor; // 0x2a8
	FDataTableRowHandle _valueBackgroundColor; // 0x2b8
	FDataTableRowHandle _valueForegroundColor; // 0x2c8
};

struct UCameraComponent : USceneComponent {
	float FieldOfView; // 0x1f8
	float OrthoWidth; // 0x1fc
	float OrthoNearClipPlane; // 0x200
	float OrthoFarClipPlane; // 0x204
	float AspectRatio; // 0x208
	char bConstrainAspectRatio : 1; // 0x20c
	char bUseFieldOfViewForLOD : 1; // 0x20c
	char bLockToHmd : 1; // 0x20c
	char bUsePawnControlRotation : 1; // 0x20c
	ECameraProjectionMode ProjectionMode; // 0x20d
	float PostProcessBlendWeight; // 0x240
	FPostProcessSettings PostProcessSettings; // 0x270
};

struct UInteractionUserWidget : UDesignableUserWidget {
	UTextBlock* _actionText; // 0x278
	UButton* _actionButton; // 0x280
};

struct UReplenishableResourceManager : UActorComponent {
	int32_t _maxNumReplenishableResourceReplenishmentsPerTick; // 0x228
	float _playerProximityToReplenish; // 0x22c
};

struct UAnimBoneCompressionCodec : UObject {
	FString Description; // 0x28
};

struct URiverGenerator : UWaterBodyGenerator {
	TArray<USplineMeshComponent*> SplineMeshComponents; // 0x28
};

struct AAkAcousticPortal : AVolume {
	AkAcousticPortalState InitialState; // 0x258
	float ObstructionRefreshInterval; // 0x25c
	ECollisionChannel ObstructionCollisionChannel; // 0x260
};

struct UDcxVehicleDriveComponent : UDcxVehicleWheelsComponent {
	FDcxVehicleEngineData EngineData; // 0x240
	FDcxVehicleGearboxData GearboxData; // 0x2e0
	FDcxVehicleClutchData ClutchData; // 0x310
	bool bAutoReverse; // 0x320
	float WrongDirectionThreshold; // 0x324
	bool bAutoBrake; // 0x328
	float StopThreshold; // 0x32c
	FRuntimeFloatCurve SteerCurve; // 0x330
};

struct UEnvQueryGenerator_ActorsOfClass : UEnvQueryGenerator {
	AActor* SearchedActorClass; // 0x50
	FAIDataProviderBoolValue GenerateOnlyActorsInRadius; // 0x58
	FAIDataProviderFloatValue SearchRadius; // 0x90
	UEnvQueryContext* SearchCenter; // 0xc8
};

struct UPawnAction : UObject {
	UPawnAction* ChildAction; // 0x28
	UPawnAction* ParentAction; // 0x30
	UPawnActionsComponent* OwnerComponent; // 0x38
	UObject* Instigator; // 0x40
	UBrainComponent* BrainComp; // 0x48
	char bAllowNewSameClassInstance : 1; // 0x80
	char bReplaceActiveSameClassInstance : 1; // 0x80
	char bShouldPauseMovement : 1; // 0x80
	char bAlwaysNotifyOnFinished : 1; // 0x80
};

struct ACharacterSpawner : AActor {
	UBillboardComponent* SpriteComponent; // 0x220
	TArray<FCharacterSpawnerData2> Characters; // 0x228
	TArray<EPhysicalSurface> AllowedSurfaces; // 0x238
	int32_t CharactersPerCell; // 0x248
	int32_t TotalCharacters; // 0x24c
	float CellSize; // 0x250
	int32_t CellsX; // 0x254
	int32_t CellsY; // 0x258
	float MinSpawnRadius; // 0x25c
	float MaxSpawnRadius; // 0x260
	float MinSpawnDistance; // 0x264
	float MaxSpawnDistance; // 0x268
	float CullDistance; // 0x26c
	int32_t SpawnRetries; // 0x270
	float TickFrequency; // 0x274
	bool Enabled; // 0x278
	bool DebugDraw; // 0x279
	FColor DebugColor; // 0x27c
};

struct UParticleModuleCollisionGPU : UParticleModuleCollisionBase {
	FRawDistributionFloat Resilience; // 0x30
	FRawDistributionFloat ResilienceScaleOverLife; // 0x60
	float Friction; // 0x90
	float RandomSpread; // 0x94
	float RandomDistribution; // 0x98
	float RadiusScale; // 0x9c
	float RadiusBias; // 0xa0
	EParticleCollisionResponse Response; // 0xa4
	EParticleCollisionMode CollisionMode; // 0xa5
};

struct UDogTagItemState : UItemState {
	FString UserProfileName; // 0xf8
};

struct AReportingManager : AActor {
	FMulticastInlineDelegate PrisonerWhistled; // 0x388
};

struct UAdminCommand_AddOrRemoveWidget : UAdminCommand {
	TMap<FName, UUserWidget*> _widgetClassesByName; // 0x80
};

struct APlayerDrone : ADrone {
	float _movementInertiaPlayer; // 0x8a0
	UCameraComponent* _firstPersonCameraComponent; // 0x8a8
	UCameraComponent* _thirdPersonCameraComponent; // 0x8b0
	USpringArmComponent* _springArmComponent; // 0x8b8
	UMaterialInterface* _nightVisionMaterial; // 0x8c0
	float _interactionDistance; // 0x8c8
	UMaterialInstance* _itemPlacingMaterialAllowed; // 0x8d0
	UMaterialInstance* _itemPlacingMaterialDisallowed; // 0x8d8
	FLinearColor _colorTintWhenInvisible; // 0x8e0
	FLinearColor _colorTintWhenHidden; // 0x8f0
	UActionProgressWidget* _progressWidget; // 0xa48
	TWeakObjectPtr<AItemDropPlaceholder> _itemDropPlaceholder; // 0xa54
	TWeakObjectPtr<UObject> _currentlyDroppingItem; // 0xa60
	UDoorUpgradeWidget* _doorUpgradeWidget; // 0xa88
	EDroneVisibility _droneVisibility; // 0xa90
};

struct UTestMovieSceneSubTrack : UMovieSceneSubTrack {
	TArray<UMovieSceneSection*> SectionArray; // 0x88
};

struct AMinigame : AActor {
	int32_t _testingMode; // 0x250
	USceneComponent* _rootComponent; // 0x258
	USceneCaptureComponent2D* _captureCam; // 0x260
	USceneCaptureComponent2D* _captureMaskCam; // 0x268
	UMinigameWidget* _minigameWidget; // 0x278
	UMinigameWidget* _minigameWidgetClass; // 0x280
	float _introDuration; // 0x2b0
	float _outroDurationOnFail; // 0x2b4
	float _outroDurationOnSuccess; // 0x2b8
	bool _canBeCanceled; // 0x2bc
	EPrisonerMontage _simulatedMontage; // 0x2bd
	UAkAudioEvent* _simulatedAudioStart; // 0x2c0
	UAkAudioEvent* _simulatedAudioStop; // 0x2c8
	TArray<UBaseItemTag*> _takeInHandsItemTagClasses; // 0x2d0
};

struct ADcxVehicle : APawn {
	USkeletalMeshComponent* Mesh; // 0x280
	UDcxVehicleWheelsComponent* VehicleWheels; // 0x288
};

struct UMovieSceneTrackInstance : UObject {
	UObject* AnimatedObject; // 0x28
	bool bIsMasterTrackInstance; // 0x30
	UMovieSceneEntitySystemLinker* Linker; // 0x38
	TArray<FMovieSceneTrackInstanceInput> Inputs; // 0x40
};

struct UCharacterSpawnerComponent : USceneComponent {
	bool OverrideDefaultProbability; // 0x1f8
	float Probability; // 0x1fc
	bool OverrideDefaultRespawnTime; // 0x200
	float RespawnTime; // 0x204
	int32_t MinCharactersToSpawn; // 0x208
	int32_t MaxCharactersToSpawn; // 0x20c
	TArray<FCharacterSpawnerMarker> SpawnerMarkers; // 0x210
};

struct USedentaryNPCAnimInstance : UAnimInstance {
	FRotator _headTurningRotator; // 0x2c0
};

struct USurfaceHardnessData : UDataAsset {
	float DefaultSurfaceHardness; // 0x30
	TMap<EPhysicalSurface, float> SurfaceHardnessMap; // 0x38
};

struct USkeletalMeshSocket : UObject {
	FName SocketName; // 0x28
	FName BoneName; // 0x30
	FVector RelativeLocation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale; // 0x50
	bool bForceAlwaysAnimated; // 0x5c
};

struct ULiveLinkDrivenComponent : UActorComponent {
	FLiveLinkSubjectName SubjectName; // 0xb0
	FName ActorTransformBone; // 0xb8
	bool bModifyActorTransform; // 0xc0
	bool bSetRelativeLocation; // 0xc1
};

struct UNavigationQueryFilter : UObject {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct UMaterialExpressionFeatureLevelSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
};

struct UUI_Metabolism_BodyOverview_C : UMetabolismBodyOverviewPanel {
	UImage* BackgroundSymptomList; // 0x570
};

struct UVicinityContainerRowItemWidget : UItemWidget2 {
	UTextBlock* _caption; // 0x440
};

struct UAmmunitionArrowSpawningParams : UObject {
	UObject* AmmunitionArrowClass; // 0x28
	float ItemsHealth; // 0x30
	bool IsPartOfEvent; // 0x34
};

struct UParticleModuleRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionFloat StartRotationRate; // 0x30
};

struct UMaterialExpressionTransformPosition : UMaterialExpression {
	FExpressionInput Input; // 0x40
	EMaterialPositionTransformSource TransformSourceType; // 0x54
	EMaterialPositionTransformSource TransformType; // 0x55
};

struct UPrisonerBodyCondition_BladderFull : UPrisonerBodyCondition {
	float _bladderFullnessToExist; // 0xa8
	float _bladderFullnessToForceUrinate; // 0xac
	UPrisonerBodySymptom_NeedToUrinate* _needToUrinateSymptomClass; // 0xb0
	UPrisonerBodySymptomCause* _needToUrinateSymptomCause; // 0xb8
};

struct UUI_NotificationPanelWidget_C : UNotificationPanelWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UBorder* EventCancelBox; // 0x280
	UBorder* EventTime; // 0x288
	UTextBlock* EventTimetext; // 0x290
	UTextBlock* FamePointsCounter; // 0x298
	UBorder* NextEventBox; // 0x2a0
	UTextBlock* NextEventCountdown; // 0x2a8
	UTextBlock* NextEventLocation; // 0x2b0
	UVerticalBox* NotificationBox; // 0x2b8
	UTextBlock* RankLabel; // 0x2c0
	UTextBlock* TextBlock_6; // 0x2c8
	UVerticalBox* VerticalBox_2; // 0x2d0
};

struct ABeer_Mina_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UPieProgressBar_C : UBaseProgressBar_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e8
	UImage* ImageAttribute_0NoSkill; // 0x2f0
	UImage* ImageAttribute_1Basic; // 0x2f8
	UImage* ImageAttribute_2Medium; // 0x300
	UImage* ImageAttribute_3Advanced; // 0x308
	UImage* ImageAttribute_4Full; // 0x310
	FLinearColor AlarmColor; // 0x318
	FLinearColor NormalColor; // 0x328
	FLinearColor outerCircleColor; // 0x338
	FLinearColor circularBarColor; // 0x348
};

struct UVehicle2WPassengerMountSlot : UVehicle2WMountSlot {
	UBlendSpace* _idleAnimation; // 0x148
};

struct UUI_SquadEmblem_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Background; // 0x268
	URetainerBox* BackgroundRetainerBox; // 0x270
	UOverlay* EmblemOverlay; // 0x278
	UImage* Symbol; // 0x280
	URetainerBox* SymbolRetainerBox; // 0x288
	EHorizontalAlignment Horizontal; // 0x290
	EVerticalAlignment Vertical; // 0x291
	FConZSquadEmblem Data; // 0x292
};

struct ATextRenderActor : AActor {
	UTextRenderComponent* TextRender; // 0x220
};

struct UMaterialExpressionMakeMaterialAttributes : UMaterialExpression {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Metallic; // 0x54
	FExpressionInput Specular; // 0x68
	FExpressionInput Roughness; // 0x7c
	FExpressionInput Anisotropy; // 0x90
	FExpressionInput EmissiveColor; // 0xa4
	FExpressionInput Opacity; // 0xb8
	FExpressionInput OpacityMask; // 0xcc
	FExpressionInput Normal; // 0xe0
	FExpressionInput Tangent; // 0xf4
	FExpressionInput WorldPositionOffset; // 0x108
	FExpressionInput WorldDisplacement; // 0x11c
	FExpressionInput TessellationMultiplier; // 0x130
	FExpressionInput SubsurfaceColor; // 0x144
	FExpressionInput ClearCoat; // 0x158
	FExpressionInput ClearCoatRoughness; // 0x16c
	FExpressionInput AmbientOcclusion; // 0x180
	FExpressionInput Refraction; // 0x194
	FExpressionInput CustomizedUVs[0x8]; // 0x1a8
	FExpressionInput PixelDepthOffset; // 0x248
	FExpressionInput ShadingModel; // 0x25c
};

struct UModularSynthComponent : USynthComponent {
	int32_t VoiceCount; // 0x6c0
};

struct UMovieSceneCompiledDataManager : UObject {
	TMap<int32_t, FMovieSceneSequenceHierarchy> Hierarchies; // 0xd8
	TMap<int32_t, FMovieSceneEvaluationTemplate> TrackTemplates; // 0x128
	TMap<int32_t, FMovieSceneEvaluationField> TrackTemplateFields; // 0x178
	TMap<int32_t, FMovieSceneEntityComponentField> EntityComponentFields; // 0x1c8
};

struct UTakeInHandsAssetData : UInteractionAssetData {
	UAttachmentSocketMountType* AttachmentSocketMountType; // 0x30
	FName GripSocketName; // 0x38
	FName SupportingHandIKSocketName; // 0x40
	UAnimMontage* TakeInHandsMontage; // 0x48
	UAnimMontage* RemoveFromHandsMontage; // 0x50
	UMeleeSkillAnimationsPreset* MeleeSkillAnimationsPreset; // 0x58
	UHandsCorrectionsData* HandsCorrectionssData; // 0x60
	UItemFirstPersonAnimationsDataAsset* FirstPersonAnimationsData; // 0x68
	float MovementSpeedModifier; // 0x70
	float SwimmingMovementSpeedModifier; // 0x74
	float DivingMovementSpeedModifier; // 0x78
	float BuoyancyMultiplier; // 0x7c
	bool ShouldActionConstrainStance; // 0x80
	bool ShouldActionConstrainMove; // 0x81
	bool ShouldActionConstrainTurn; // 0x82
	bool ShouldActionForceStance; // 0x83
	EPrisonerStance ActionStance; // 0x84
	EStanceChangeFlag ActionStanceFlag; // 0x85
	bool IsCarried; // 0x86
	EPrisonerStance StanceWhileCarrying; // 0x87
	EStanceChangeFlag CarryStanceFlag; // 0x88
	bool ShouldDropWhenEnteringCombatMode; // 0x89
	EPrisonerMovementPace MaxPaceWhileCarrying; // 0x8a
	UAnimSequenceBase* CarryItemIdleAnimationFP; // 0x90
	UAnimSequenceBase* CarryItemIdleAnimationTP; // 0x98
	UAnimMontage* PlayerLongThrowMontage; // 0xa0
	UAnimMontage* PlayerLongThrowLoopMontage; // 0xa8
	UAnimMontage* PlayerShortThrowMontage; // 0xb0
	UAnimMontage* PlayerThrowbackMontage; // 0xb8
	UAnimMontage* ThrowingItemToWeaponMontage; // 0xc0
	UAnimMontage* WeaponToThrowingItemMontage; // 0xc8
	TMap<EThrowingAnimationType, FThrowingAnimationSet> ThrowingAnimationSets; // 0xd0
	float MaxObstructedDepenetrationDepth; // 0x120
	float MaxObstructedDepenetrationDepthProne; // 0x124
	UAnimSequenceBase* LeftObstructedIdleAnimationFP; // 0x128
	UAnimSequenceBase* RightObstructedIdleAnimationFP; // 0x130
	UAnimSequenceBase* ObstructedIdleAnimationTP; // 0x138
	UAnimSequenceBase* ObstructedIdleAnimationProneTP; // 0x140
};

struct UParticleModuleVelocityInheritParent : UParticleModuleVelocityBase {
	FRawDistributionVector Scale; // 0x38
};

struct UABP_Prisoner_Grappled_C : UPrisonerAnimInstance_Grappled {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2f8
};

struct UEditableGameplayTagQueryExpression_AnyTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UUI_LoadingIconWidget_C : ULoadingIconWidget {
	UCircularThrobber* CircularThrobber_53; // 0x278
};

struct UItemTooltipTab : UWidgetSwitcher {
	TArray<UPanelWidget*> _panels; // 0x138
};

struct UUI_inventorySideLayer3_C : UInventoryPanelSideLayerWidget {
	UImage* Image_23; // 0x280
	UUI_Border_C* UI_Border; // 0x288
};

struct UGroomCreateFollicleMaskOptions : UObject {
	int32_t Resolution; // 0x28
	int32_t RootRadius; // 0x2c
	TArray<FFollicleMaskOptions> Grooms; // 0x30
};

struct UDcxVehicleWheelsRawInput : UObject {
	int32_t ThrottleIndex; // 0x28
	TArray<float> RawAnalogControls; // 0x30
};

struct AARSharedWorldGameState : AGameState {
	TArray<char> PreviewImageData; // 0x290
	TArray<char> ARWorldData; // 0x2a0
	int32_t PreviewImageBytesTotal; // 0x2b0
	int32_t ARWorldBytesTotal; // 0x2b4
	int32_t PreviewImageBytesDelivered; // 0x2b8
	int32_t ARWorldBytesDelivered; // 0x2bc
};

struct UForceFeedbackComponent : USceneComponent {
	UForceFeedbackEffect* ForceFeedbackEffect; // 0x1f8
	char bAutoDestroy : 1; // 0x200
	char bStopWhenOwnerDestroyed : 1; // 0x200
	char bLooping : 1; // 0x200
	char bIgnoreTimeDilation : 1; // 0x200
	char bOverrideAttenuation : 1; // 0x200
	float IntensityMultiplier; // 0x204
	UForceFeedbackAttenuation* AttenuationSettings; // 0x208
	FForceFeedbackAttenuationSettings AttenuationOverrides; // 0x210
	FMulticastInlineDelegate OnForceFeedbackFinished; // 0x2c0
};

struct UMainMenu : UBaseMenu {
	UTrashMenuButton* _continueButton; // 0x260
	UTrashMenuButton* _multiplayerButton; // 0x268
	UTrashMenuButton* _singleplayerButton; // 0x270
	UTrashMenuButton* _optionsButton; // 0x278
};

struct UScrollBarWidgetStyle : USlateWidgetStyleContainerBase {
	FScrollBarStyle ScrollBarStyle; // 0x30
};

struct USequenceCameraShakeCameraStandIn : UObject {
	float FieldOfView; // 0x30
};

struct UMaterialExpressionSceneDepthWithoutWater : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FVector2D ConstInput; // 0x58
	float FallbackDepth; // 0x60
};

struct UParticleModuleTypeDataAnimTrail : UParticleModuleTypeDataBase {
	char bDeadTrailsOnDeactivate : 1; // 0x30
	char bEnablePreviousTangentRecalculation : 1; // 0x30
	char bTangentRecalculationEveryFrame : 1; // 0x30
	float TilingDistance; // 0x34
	float DistanceTessellationStepSize; // 0x38
	float TangentTessellationStepSize; // 0x3c
	float WidthTessellationStepSize; // 0x40
};

struct UMaterialExpressionRound : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UThrowingComponent : UProjectileMovementComponent {
	EItemThrowingBehavior ItemThrowingBehavior; // 0x1d0
	float PierceMaxDensity; // 0x1d4
	float ThrowEnergyMultiplier; // 0x1d8
	FRotator InitialRotation; // 0x1dc
	FRotator UpdatedRotation; // 0x1e8
	FRotator MinRandomImpactRotation; // 0x1f4
	FRotator MaxRandomImpactRotation; // 0x200
	float PenetrationDepth; // 0x20c
	bool IsFloatable; // 0x210
	EPrisonerStance MinStance; // 0x211
	UParticleSystem* _splashParticleSystem; // 0x15c0
	UAkAudioEvent* _splashAudioEvent; // 0x15c8
};

struct UAkSlider : UWidget {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	FSliderStyle WidgetStyle; // 0x120
	EOrientation Orientation; // 0x460
	FLinearColor SliderBarColor; // 0x464
	FLinearColor SliderHandleColor; // 0x474
	bool IndentHandle; // 0x484
	bool Locked; // 0x485
	float StepSize; // 0x488
	bool IsFocusable; // 0x48c
	FAkPropertyToControl ThePropertyToControl; // 0x490
	FAkWwiseItemToControl ItemToControl; // 0x4a0
	FMulticastInlineDelegate OnValueChanged; // 0x4e0
	FMulticastInlineDelegate OnItemDropped; // 0x4f0
	FMulticastInlineDelegate OnPropertyDropped; // 0x500
};

struct URevolveBoundaryToolProperties : URevolveProperties {
	bool bDisplayOriginalMesh; // 0xb0
	FVector AxisOrigin; // 0xb4
	float AxisYaw; // 0xc0
	float AxisPitch; // 0xc4
	bool bSnapToWorldGrid; // 0xc8
};

struct UParticleModuleAccelerationDrag : UParticleModuleAccelerationBase {
	UDistributionFloat* DragCoefficient; // 0x38
	FRawDistributionFloat DragCoefficientRaw; // 0x40
};

struct USpaceDeformerOperatorFactory : UObject {
	UMeshSpaceDeformerTool* SpaceDeformerTool; // 0x30
};

struct UParticleModuleAttractorPointGravity : UParticleModuleAttractorBase {
	FVector position; // 0x30
	float Radius; // 0x3c
	UDistributionFloat* Strength; // 0x40
	FRawDistributionFloat StrengthRaw; // 0x48
};

struct UEnvelopeFollowerListener : UActorComponent {
	FMulticastInlineDelegate OnEnvelopeFollowerUpdate; // 0xb0
};

struct UUI_TeamInvitationWidget_C : UTeamInvitationWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a0
	UButton* Accept; // 0x2a8
	UButton* AcceptButton; // 0x2b0
	UTextBlock* AcceptText; // 0x2b8
	UButton* Decline; // 0x2c0
	UButton* DeclineButton; // 0x2c8
	UTextBlock* DeclineText; // 0x2d0
	UTextBlock* InvitationMessage; // 0x2d8
	UTextBlock* InvitationTextBlock; // 0x2e0
	UResizableWindow_C* MainResizableWindow; // 0x2e8
	UTextBlock* TimerText; // 0x2f0
	FTimerHandle TimeoutTimer; // 0x2f8
};

struct UMovieSceneSlomoSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe8
};

struct AThermometer : AItem {
	UThermalSensorComponent* _thermalSensorComponent; // 0x7c0
	int32_t _thermometerFluidMaterialId; // 0x7c8
};

struct UGroomImportOptions : UObject {
	FGroomConversionSettings ConversionSettings; // 0x28
	TArray<FHairGroupsInterpolation> InterpolationSettings; // 0x40
};

struct UInAppPurchaseComponent : UActorComponent {
	FMulticastInlineDelegate InAppPurchaseLogMessage; // 0xb0
	FMulticastInlineDelegate GetItemsDetailsSuccess; // 0xc0
	FMulticastInlineDelegate GetItemsDetailsFailure; // 0xd0
	FMulticastInlineDelegate PurchaseConfirmationSuccess; // 0xe0
	FMulticastInlineDelegate PurchaseConfirmationFailure; // 0xf0
	FMulticastInlineDelegate GetPurchaseHistorySuccess; // 0x100
	FMulticastInlineDelegate GetPurchaseHistoryFailure; // 0x110
};

struct UPlaneFalloff : UFieldNodeFloat {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	float Distance; // 0xc0
	FVector position; // 0xc4
	FVector Normal; // 0xd0
	EFieldFalloffType Falloff; // 0xdc
};

struct UMagicLeapImageTrackerComponent : USceneComponent {
	UTexture2D* TargetImageTexture; // 0x1f8
	FString Name; // 0x200
	float LongerDimension; // 0x210
	bool bIsStationary; // 0x214
	bool bUseUnreliablePose; // 0x215
	EMagicLeapImageTargetOrientation AxisOrientation; // 0x216
	FMulticastInlineDelegate OnSetImageTargetSucceeded; // 0x218
	FMulticastInlineDelegate OnSetImageTargetFailed; // 0x228
	FMulticastInlineDelegate OnImageTargetFound; // 0x238
	FMulticastInlineDelegate OnImageTargetLost; // 0x248
	FMulticastInlineDelegate OnImageTargetUnreliableTracking; // 0x258
};

struct UDynamicEntryBoxBase : UWidget {
	EDynamicBoxType EntryBoxType; // 0x108
	FVector2D EntrySpacing; // 0x10c
	TArray<FVector2D> SpacingPattern; // 0x118
	FSlateChildSize EntrySizeRule; // 0x128
	EHorizontalAlignment EntryHorizontalAlignment; // 0x130
	EVerticalAlignment EntryVerticalAlignment; // 0x131
	int32_t MaxElementSize; // 0x134
	FRadialBoxSettings RadialBoxSettings; // 0x138
	FUserWidgetPool EntryWidgetPool; // 0x158
};

struct UMovieSceneBoolSection : UMovieSceneSection {
	bool DefaultValue; // 0xe8
	FMovieSceneBoolChannel BoolCurve; // 0xf0
};

struct UMovieSceneSubSection : UMovieSceneSection {
	FMovieSceneSectionParameters parameters; // 0xe8
	float StartOffset; // 0x10c
	float TimeScale; // 0x110
	float PrerollTime; // 0x114
	UMovieSceneSequence* SubSequence; // 0x118
	LazyObjectProperty ActorToRecord; // 0x120
	FString TargetSequenceName; // 0x140
	FDirectoryPath TargetPathToRecordTo; // 0x150
};

struct UNiagaraPreviewAxis_InterpParamInt32 : UNiagaraPreviewAxis_InterpParamBase {
	int32_t Min; // 0x38
	int32_t Max; // 0x3c
};

struct UNiagaraDataInterfaceColorCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve RedCurve; // 0x70
	FRichCurve GreenCurve; // 0xf0
	FRichCurve BlueCurve; // 0x170
	FRichCurve AlphaCurve; // 0x1f0
};

struct UParticleModuleAccelerationBase : UParticleModule {
	char bAlwaysInWorldSpace : 1; // 0x30
};

struct UParticleModuleVectorFieldRotation : UParticleModuleVectorFieldBase {
	FVector MinInitialRotation; // 0x30
	FVector MaxInitialRotation; // 0x3c
};

struct UBTDecorator_KeepInCone : UBTDecorator {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector Observed; // 0x98
	char bUseSelfAsOrigin : 1; // 0xc0
	char bUseSelfAsObserved : 1; // 0xc0
};

struct UTrapItemUserData : UVirtualizedItemUserData {
	FDbIntegerId OwnerUserProfileId; // 0x28
	bool IsOwnerUserProfileIdDirty; // 0x30
};

struct AFishingAttachmentWire : AFishingAttachment {
	FName ReelSocketName; // 0x7e0
	UFishingWireComponent* _wireComponent; // 0x7e8
	UFishingWireComponent* _wireComponentClass; // 0x7f0
	UParticleSystemComponent* _rippleParticleSystemComponent; // 0x7f8
	float _visibilityFactor; // 0x800
	float _wireWeightThreshold; // 0x804
	float _wireThickness; // 0x808
	float _minWireLength; // 0x80c
	float _maxWireLength; // 0x810
	float _reelInTensionThreshold; // 0x814
	float _wireBreakThreshold; // 0x818
	float _instantWireBreakThreshold; // 0x81c
	float _wireBreakTimerThreshold; // 0x820
	float _wireStrength; // 0x824
	bool _simulate; // 0x828
};

struct UBTTask_PushPawnAction : UBTTask_PawnActionBase {
	UPawnAction* Action; // 0x70
};

struct USourceEffectBitCrusherPreset : USoundEffectSourcePreset {
	FSourceEffectBitCrusherSettings Settings; // 0xc0
};

struct UParticleModuleAccelerationDragScaleOverLife : UParticleModuleAccelerationBase {
	UDistributionFloat* DragScale; // 0x38
	FRawDistributionFloat DragScaleRaw; // 0x40
};

struct UMaterialExpressionTextureSampleParameter : UMaterialExpressionTextureSample {
	FName ParameterName; // 0x60
	FGuid ExpressionGUID; // 0x68
	FName Group; // 0x78
};

struct UParticleModuleParameterDynamic_Seeded : UParticleModuleParameterDynamic {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x48
};

struct UChaosClothConfig : UClothConfigCommon {
	EClothMassMode MassMode; // 0x28
	float UniformMass; // 0x2c
	float TotalMass; // 0x30
	float Density; // 0x34
	float MinPerParticleMass; // 0x38
	float EdgeStiffness; // 0x3c
	float BendingStiffness; // 0x40
	bool bUseBendingElements; // 0x44
	float AreaStiffness; // 0x48
	float VolumeStiffness; // 0x4c
	float StrainLimitingStiffness; // 0x50
	float LimitScale; // 0x54
	EChaosClothTetherMode TetherMode; // 0x58
	bool bUseGeodesicDistance; // 0x59
	float ShapeTargetStiffness; // 0x5c
	float CollisionThickness; // 0x60
	float FrictionCoefficient; // 0x64
	bool bUseSelfCollisions; // 0x68
	float SelfCollisionThickness; // 0x6c
	bool bUseLegacyBackstop; // 0x70
	float DampingCoefficient; // 0x74
	bool bUsePointBasedWindModel; // 0x78
	float DragCoefficient; // 0x7c
	float LiftCoefficient; // 0x80
	bool bUseGravityOverride; // 0x84
	float GravityScale; // 0x88
	FVector Gravity; // 0x8c
	float AnimDriveSpringStiffness; // 0x98
	FVector LinearVelocityScale; // 0x9c
	float AngularVelocityScale; // 0xa8
	bool bUseTetrahedralConstraints; // 0xac
	bool bUseThinShellVolumeConstraints; // 0xad
	bool bUseContinuousCollisionDetection; // 0xae
};

struct AGameEventBase : AActor {
	FText EventName; // 0x220
	UGameEventParticipantStats* ParticipantStatsClass; // 0x238
	UGameEventRoundInfoWidget* RoundInfoWidgetClass; // 0x240
	UGameEventTeamHeaderWidget* TeamHeaderWidgetClass; // 0x248
	UGameEventParticipantStatsWidget* StatWidgetClass; // 0x250
	UGameEventParticipantStatsWidget* MiniStatWidgetClass; // 0x258
	AGameEventTransport* TransportClass; // 0x260
	UAkAudioEvent* TimesUpAnnouncement; // 0x268
	UAkAudioEvent* BlueTeamWonRoundAnnouncement; // 0x270
	UAkAudioEvent* RedTeamWonRoundAnnouncement; // 0x278
	UAkAudioEvent* RoundDrawAnnouncement; // 0x280
	UAkAudioEvent* BlueTeamWonEventAnnouncement; // 0x288
	UAkAudioEvent* RedTeamWonEventAnnouncement; // 0x290
	UAkAudioEvent* EventDrawAnnouncement; // 0x298
	UAkAudioEvent* Time30sAnnouncement; // 0x2a0
	UAkAudioEvent* Time15sAnnouncement; // 0x2a8
	UAkAudioEvent* Time10sCountdownAnnouncement; // 0x2b0
	UAkAudioEvent* TensionMusicStart; // 0x2b8
	UAkAudioEvent* TensionMusicStop; // 0x2c0
	EGameEventState _state; // 0x2c8
	int32_t _activeParticipantCount; // 0x2cc
	int32_t _numberOfTeams; // 0x2d0
	TArray<int32_t> _teamMemberCount; // 0x2d8
	TArray<int32_t> _teamScores; // 0x2e8
	TArray<int32_t> _roundWinningTeam; // 0x2f8
	int32_t _round; // 0x308
	float _roundTimeLeft; // 0x30c
	float _cancelTimeLeft; // 0x310
	AGameEventLocationMarker* _marker; // 0x330
	AGameEventBorder* _border; // 0x338
	AGameEventManager* _manager; // 0x340
	TArray<FGameEventParticipantInfo> _participantInfo; // 0x348
	FGameEventParameters _parameters; // 0x358
	UGameEventCardWidget* _cardWidget; // 0x4e0
	UGameEventScoreboardWidget* _scoreboardWidget; // 0x4e8
	UGameEventScoreboardWidget* _miniScoreboardWidget; // 0x4f0
	TArray<int32_t> _rankings; // 0x4f8
	TArray<UPrisonerBodySimulationSave*> _recoveryBodySimulation; // 0x548
	UAkComponent* _lastAnnouncement; // 0x568
	UAkComponent* _lastCountdownAnnouncement; // 0x570
};

struct UNavRelevantComponent : UActorComponent {
	char bAttachToOwnersRoot : 1; // 0xd4
	UObject* CachedNavParent; // 0xd8
};

struct UMovieSceneSpawnTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
	FGuid ObjectGuid; // 0x88
};

struct UAkRoomComponent : USceneComponent {
	char bEnable : 1; // 0x1f8
	UAkRoomComponent* NextLowerPriorityComponent; // 0x200
	float Priority; // 0x208
	float WallOcclusion; // 0x20c
};

struct UTireType : UDataAsset {
	float FrictionScale; // 0x30
};

struct APETBottle02_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UUI_CharacterNameWidget_C : UUserWidget {
	UTextBlock* MainText; // 0x260
};

struct UVisionEffectsComponent : UActorComponent {
	float PostProcessPriority; // 0xb8
	UMaterialInterface* FadeOutMaterial; // 0xc0
	UMaterialInterface* LowLightVisionMaterial; // 0xc8
	UMaterialInterface* NightVisionMaterial; // 0xd0
	float NightVisionBlendInDuration; // 0xd8
	float NightVisionBlendOutDuration; // 0xdc
	UMaterialParameterCollection* AnimalEyesMaterialParameterCollection; // 0xe0
	FName AnimalEyesEmissiveMaterialName; // 0xe8
	float AnimalEyesEmissiveValueWhenNightVisionIsEnabled; // 0xf0
	UMaterialInterface* FlashbangEffectMaterial; // 0xf8
	UMaterialInterface* FallingBlurMaterial; // 0x100
	UMaterialInterface* TakenDamageMaterial; // 0x108
	UMaterialParameterCollection* TakenDamageMaterialParameterCollection; // 0x110
	FName TakenDamageBlurIntensityParameterName; // 0x118
	FName TakenDamageStainsIntensityParameterName; // 0x120
	FName TakenDamageVignetteIntensityParameterName; // 0x128
	UCurveFloat* TakenDamageBlurShapeCurve; // 0x130
	UCurveFloat* TakenDamageBlurIntensityCurve; // 0x138
	UCurveFloat* TakenDamageBlurDurationCurve; // 0x140
	UCurveFloat* TakenDamageStainsShapeCurve; // 0x148
	UCurveFloat* TakenDamageStainsIntensityCurve; // 0x150
	UCurveFloat* TakenDamageStainsDurationCurve; // 0x158
	UCurveFloat* TakenDamageVignetteShapeCurve; // 0x160
	UCurveFloat* TakenDamageVignetteIntensityCurve; // 0x168
	UCurveFloat* TakenDamageVignetteDurationCurve; // 0x170
	float TakenDamageMaxChromaticAberration; // 0x178
	UMatineeCameraShake* TakenDamageCameraShakeClass; // 0x180
	UCurveFloat* TakenDamageCameraShakeScaleCurve; // 0x188
	UMaterialInterface* TacticsEffectMaterial; // 0x190
	UMaterialInterface* FocusModeMaterial; // 0x198
	UMaterialInterface* DoubleVisionMaterial; // 0x1a0
	FName DoubleVisionIntensityParameterName; // 0x1a8
	UMaterialInterface* UnderwaterBlurMaterial; // 0x1b0
	UMaterialInterface* UnderwaterDivingMaskMaterial; // 0x1b8
	UMaterialInterface* PhotoModeTransitionMaterial; // 0x1c0
	UMaterialInterface* ScopeZoomMaterial; // 0x1c8
	FName ScopeZoomBlendPPParameterName; // 0x1d0
	FName ScopeZoomBlackoutDensityParameterName; // 0x1d8
	FName ScopeZoomChromaticAberrationDampeningParameterName; // 0x1e0
	FName ScopeZoomCrosshairBaseScaleParameterName; // 0x1e8
	FName ScopeZoomCrosshairDepthOffsetMultiplierParameterName; // 0x1f0
	FName ScopeZoomCrosshairScaleMultiplierParameterName; // 0x1f8
	FName ScopeZoomDistortionPowerParameterName; // 0x200
	FName ScopeZoomDistortionScaleParameterName; // 0x208
	FName ScopeZoomEyeDistanceBlackoutMultiplierParameterName; // 0x210
	FName ScopeZoomGlowIntensityAtNightParameterName; // 0x218
	FName ScopeZoomLensDepthOffsetMultiplierParameterName; // 0x220
	FName ScopeZoomLensScaleParameterName; // 0x228
	FName ScopeZoomLensUIScaleParameterName; // 0x230
	FName ScopeZoomLensZoomParameterName; // 0x238
	FName ScopeZoomOptimalEyeDistanceParameterName; // 0x240
	FName ScopeZoomCrosshairCenterScreenOffsetParameterName; // 0x248
	FName ScopeZoomLensCenterScreenOffsetParameterName; // 0x250
	FName ScopeZoomCrosshairParameterName; // 0x258
	FName ScopeZoomCrosshairColorParameterName; // 0x260
	FName ScopeZoomCrosshairColorAtNightParameterName; // 0x268
	FName ScopeZoomCrosshairGlowColorParameterName; // 0x270
	FName ScopeZoomDirtMaskParameterName; // 0x278
	FName ScopeZoomDirtinessParameterName; // 0x280
	FName ScopeZoomDarkeningParameterName; // 0x288
	FName ScopeZoomLensNormalMapParameterName; // 0x290
	FName ScopeZoomLensUIParameterName; // 0x298
	UMaterialInterface* InjuryMaterial; // 0x2a0
	UMaterialInterface* TraumaMaterial; // 0x2a8
	UMaterialInterface* BulletHitMaterial; // 0x2b0
	UMaterialInterface* SickMaterial; // 0x2b8
	UMaterialInterface* ColdMaterial; // 0x2c0
	UMaterialInterface* HotMaterial; // 0x2c8
	UMaterialInterface* FatigueMaterial; // 0x2d0
	UMaterialInterface* HallucinationMaterial; // 0x2d8
	UMaterialInterface* RadiationMaterial; // 0x2e0
	UMaterialInterface* BlackoutMaterial; // 0x2e8
	UMaterialInterface* BlurredVisionMaterial; // 0x2f0
	FPostProcessSettings _postProcessSettings; // 0x300
	UMaterialInstanceDynamic* _doubleVisionIntensityMaterialInstance; // 0xe18
	UMaterialInterface* _headgearOverlayMaterialInstance; // 0xe20
	UMaterialInstanceDynamic* _scopeZoomMaterialInstance; // 0xe28
	UMaterialInstanceDynamic* _fallingBlurMaterialInstance; // 0xe30
	UMaterialInterface* _underwaterPostProcessingCurrent; // 0xe38
	UMaterialInterface* _underwaterPostProcessingLast; // 0xe40
	float _underwaterPostProcessingBlendTime; // 0xe48
	float _DOFBlurTime; // 0xe54
	float _DOFClearBlurTime; // 0xe58
	float _DOFScopingBlurTime; // 0xe5c
	float _DOFBlurDistanceADS; // 0xe60
	float _DOFFstopADS; // 0xe64
	UMaterialInstanceDynamic* _injuryMaterial; // 0xe68
	UMaterialInstanceDynamic* _traumaMaterial; // 0xe78
	UMaterialInstanceDynamic* _hallucinationMaterial; // 0xe88
	UMaterialInstanceDynamic* _bulletHitMaterial; // 0xe98
	UMaterialInstanceDynamic* _sickMaterial; // 0xea8
	UMaterialInstanceDynamic* _coldMaterial; // 0xeb8
	UMaterialInstanceDynamic* _hotMaterial; // 0xec8
	UMaterialInstanceDynamic* _fatigueMaterial; // 0xed8
	UMaterialInstanceDynamic* _radiationMaterial; // 0xee8
	UMaterialInstanceDynamic* _blackoutMaterial; // 0xef8
	UMaterialInstanceDynamic* _blurredVisionMaterial; // 0xf08
};

struct URDAMonitor_C : UMonitoredWindowsContent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
	UMinimizableWidget_C* MinimizableWidgetDigestion; // 0x300
	UMinimizableWidget_C* MinimizableWidgetMinerals; // 0x308
	UMinimizableWidget_C* MinimizableWidgetNutritions; // 0x310
	UMinimizableWidget_C* MinimizableWidgetVitamins; // 0x318
	FLinearColor _color; // 0x320
	FText _defaultTitle; // 0x330
	FVector2D _localSize; // 0x348
	FMulticastInlineDelegate RDASizeChangeEventDispatcher; // 0x350
	bool _isAlarmOn; // 0x360
};

struct ATimeControllableLight : ALight {
	bool _shouldExistOnDedicatedServer; // 0x230
	UCurveFloat* _intensityVsTimeOfDayCurve; // 0x238
	UPointLightComponent* _pointLightComponent; // 0x240
};

struct UUI_NightVisionResourceIndicatorWidget_C : UResourceIndicatorWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x288
	UImage* BatteryImage; // 0x290
};

struct UConZVehicle4WMountSlot : UActorComponent {
	FName _socketName; // 0xb8
	UAkAudioEvent* _mountAudioEvent; // 0xc0
	int32_t _mountPriority; // 0xc8
	TArray<FMountSlotEntryPoint> _entryPoints; // 0xd0
	UAkAudioEvent* _unmountAudioEvent; // 0xe0
	bool _isReachableFromSky; // 0xe8
	EMotionIntensity _mountingMotionIntensity; // 0xe9
	EMotionIntensity _unmountingMotionIntensity; // 0xea
	FVector _mounteeCenterOfMassOffset; // 0xec
	float _minEffectiveMounteeMass; // 0xf8
	float _maxEffectiveMounteeMass; // 0xfc
	UObject* _mountee; // 0x100
	UObject* _reservee; // 0x108
	bool _canMounteeBeAttackedByMelee; // 0x110
	TArray<UPhysicalMaterial*> _interactionZoneMaterials; // 0x118
	UVehicleWeaponAimingParameters* _vehicleWeaponAimingParameters; // 0x128
	float _mountSpeedThreshold; // 0x130
	float _unmountSpeedThreshold; // 0x134
	float _unmountInputVelocityThreshold; // 0x138
	int32_t _slotIndex; // 0x13c
	TArray<FReachableMountSlot> _reachableMountSlots; // 0x140
};

struct ABP_FootstepTracker_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USceneComponent* DefaultSceneRoot; // 0x228
	UMaterialInstanceDynamic* FoliagePositionMaterial; // 0x230
	UMaterialInstanceDynamic* FoliageOffsetMaterial; // 0x238
	FVector LastPos; // 0x240
	FVector2D GrassInfluenceDrawSize; // 0x24c
	UMaterialInstanceDynamic* FootstepsPositionMaterial; // 0x258
	UMaterialInstanceDynamic* FootstepsOffsetMaterial; // 0x260
	ACharacter* Character; // 0x268
	float footstepTimeout; // 0x270
	UMaterialInstanceDynamic* FoliageInfluenceMaterial; // 0x278
	FVector LastDirection; // 0x280
};

struct UCarouselWithLabel : UCarousel {
	UTextBlock* _name; // 0x1df0
	UImage* _focusBackgroundImage; // 0x1df8
	FText _label; // 0x1e00
	FSlateFontInfo _defaultLabelFont; // 0x1e18
	FCarouselWithLabelStyle _selectedAndFocusedCWLStyle; // 0x1e70
	FCarouselWithLabelStyle _selectedAndUnfocusedCWLStyle; // 0x1f78
	FCarouselWithLabelStyle _unselectedCWLStyle; // 0x2080
	FCarouselWithLabelStyle _highlightedCWLStyle; // 0x2188
	FCarouselWithLabelStyle _disabledCWLStyle; // 0x2290
};

struct UGraphNodeContextMenuContext : UObject {
	UBlueprint* Blueprint; // 0x28
	UEdGraph* Graph; // 0x30
	UEdGraphNode* Node; // 0x38
	bool bIsDebugging; // 0x48
};

struct UDrawPolyPathProperties : UInteractiveToolPropertySet {
	EDrawPolyPathOutputMode OutputType; // 0x60
	EDrawPolyPathWidthMode WidthMode; // 0x64
	float Width; // 0x68
	EDrawPolyPathHeightMode HeightMode; // 0x6c
	float Height; // 0x70
	float RampStartRatio; // 0x74
	bool bSnapToWorldGrid; // 0x78
};

struct ALuminAROrigin : AAROriginActor {
	UMRMeshComponent* MRMeshComponent; // 0x220
	UMaterialInterface* PlaneSurfaceMaterial; // 0x228
	UMaterialInterface* WireframeMaterial; // 0x230
};

struct UParticleModuleLocationPrimitiveBase : UParticleModuleLocationBase {
	char Positive_X : 1; // 0x30
	char Positive_Y : 1; // 0x30
	char Positive_Z : 1; // 0x30
	char Negative_X : 1; // 0x30
	char Negative_Y : 1; // 0x30
	char Negative_Z : 1; // 0x30
	char SurfaceOnly : 1; // 0x30
	char Velocity : 1; // 0x30
	FRawDistributionFloat VelocityScale; // 0x38
	FRawDistributionVector StartLocation; // 0x68
};

struct UAkMarkerCallbackInfo : UAkEventCallbackInfo {
	int32_t Identifier; // 0x38
	int32_t position; // 0x3c
	FString Label; // 0x40
};

struct APlaceableActorBaseBuilding : APlaceableActorBase {
	int32_t _maxNumberOfTiles; // 0x4c0
	float _maxHeightDifferenceForTiling; // 0x4c4
	float _maxTileHeightAdjustionUp; // 0x4c8
	float _maxTileHeightAdjustionDown; // 0x4cc
	float _tileSnappingAngle; // 0x4d0
	float _sizeVariatedTilesMaxHeightDifference; // 0x4d4
	float _maxGroundPointDistance; // 0x4d8
	float _groundPointsTraceHeight; // 0x4dc
	float _groundPointsTraceDepth; // 0x4e0
	float _maxPlacementLengthForSizeVariatedTiles; // 0x4e4
	FTilesData _tilesData; // 0x518
	UStaticMeshComponent* _flagAreaMeshComponent; // 0x530
	UMaterialInstanceDynamic* _primaryMaterialFriendlyFlag; // 0x538
	FVector _replicatedFirstPointLocation; // 0x540
	FRotator _replicatedFirstPointRotation; // 0x54c
	EPlacementBaseBuildingState _placementSubState; // 0x558
	EStateFlags _stateFlags; // 0x559
	TArray<FSizeVariatedTilesData> _sizeVariationData; // 0x590
};

struct UBaseCreateFromSelectedHandleSourceProperties : UOnAcceptHandleSourcesProperties {
	EBaseCreateFromSelectedTargetType WriteOutputTo; // 0x68
	FString OutputName; // 0x70
	FString OutputAsset; // 0x80
};

struct UAnimSharingInstance : UObject {
	TArray<AActor*> RegisteredActors; // 0x28
	UAnimationSharingStateProcessor* StateProcessor; // 0x88
	TArray<UAnimSequence*> UsedAnimationSequences; // 0xc8
	UEnum* StateEnum; // 0xe8
	AActor* SharingActor; // 0xf0
};

struct USubmixEffectFlexiverbPreset : USoundEffectSubmixPreset {
	FSubmixEffectFlexiverbSettings Settings; // 0xa0
};

struct UCableComponent : UMeshComponent {
	bool bAttachStart; // 0x470
	bool bAttachEnd; // 0x471
	FComponentReference AttachEndTo; // 0x478
	FName AttachEndToSocketName; // 0x4a0
	FVector EndLocation; // 0x4a8
	float CableLength; // 0x4b4
	int32_t NumSegments; // 0x4b8
	float SubstepTime; // 0x4bc
	int32_t SolverIterations; // 0x4c0
	bool bEnableStiffness; // 0x4c4
	bool bUseSubstepping; // 0x4c5
	bool bSkipCableUpdateWhenNotVisible; // 0x4c6
	bool bSkipCableUpdateWhenNotOwnerRecentlyRendered; // 0x4c7
	bool bEnableCollision; // 0x4c8
	float CollisionFriction; // 0x4cc
	FVector CableForce; // 0x4d0
	float CableGravityScale; // 0x4dc
	float CableWidth; // 0x4e0
	int32_t NumSides; // 0x4e4
	float TileMaterial; // 0x4e8
};

struct UChainsawAnimInstance : UItemAnimInstance {
	bool _isTurnedOn; // 0x2d0
};

struct URestrictedGameplayTagsList : UObject {
	FString ConfigFileName; // 0x28
	TArray<FRestrictedGameplayTagTableRow> RestrictedGameplayTagList; // 0x38
};

struct UAdminCommandArgumentCompletion : UObject {
	bool _canCompletionValuesBeCached; // 0x28
};

struct UUI_ComboBoxWrapper_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UComboBoxString* ComboBox; // 0x268
	bool Open; // 0x270
};

struct UAnimNotify_PlayNiagaraEffect : UAnimNotify {
	UNiagaraSystem* Template; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	bool bAbsoluteScale; // 0x64
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct UTraderMainUIController : UObject {
	UTraderBuyUIController* TraderBuyUIController; // 0x28
	UTraderSellUIController* TraderSellUIController; // 0x30
};

struct UPrisonerBodyCondition_Knockout : UPrisonerBodyCondition {
	FText _reason; // 0xa8
	float _duration; // 0xc0
	float _elapsedTime; // 0xc4
	UPrisonerBodySymptom_Unconsciousness* _unconsciousnessSymptomClass; // 0xc8
	UPrisonerBodySymptomCause_Unconsciousness* _unconsciousnessSymptomCause; // 0xd0
};

struct UBaseBuildingItemComponent : UBaseBuildingComponent {
	AItem* _itemClass; // 0x700
};

struct UParticleModuleTypeDataBeam2 : UParticleModuleTypeDataBase {
	EBeam2Method BeamMethod; // 0x30
	int32_t TextureTile; // 0x34
	float TextureTileDistance; // 0x38
	int32_t Sheets; // 0x3c
	int32_t MaxBeamCount; // 0x40
	float Speed; // 0x44
	int32_t InterpolationPoints; // 0x48
	char bAlwaysOn : 1; // 0x4c
	int32_t UpVectorStepSize; // 0x50
	FName BranchParentName; // 0x54
	FRawDistributionFloat Distance; // 0x60
	EBeamTaperMethod TaperMethod; // 0x90
	FRawDistributionFloat TaperFactor; // 0x98
	FRawDistributionFloat TaperScale; // 0xc8
	char RenderGeometry : 1; // 0xf8
	char RenderDirectLine : 1; // 0xf8
	char RenderLines : 1; // 0xf8
	char RenderTessellation : 1; // 0xf8
};

struct UAdminCommandArgumentCompletion_Widget : UAdminCommandArgumentCompletion {
	UAdminCommand_AddOrRemoveWidget* _commandClass; // 0x30
};

struct AWaterBodyRiver : AWaterBody {
	URiverGenerator* RiverGenerator; // 0xdd0
	UMaterialInterface* LakeTransitionMaterial; // 0xdd8
	UMaterialInstanceDynamic* LakeTransitionMID; // 0xde0
	UMaterialInterface* OceanTransitionMaterial; // 0xde8
	UMaterialInstanceDynamic* OceanTransitionMID; // 0xdf0
};

struct AObjective : AActor {
	TArray<FDialogueInfo> _objectivesIntroDialogues; // 0x2b0
	TArray<FDialogueInfo> _objectivesOutroSuccessDialogues; // 0x2c0
	TArray<FDialogueInfo> _objectivesOutroFailDialogues; // 0x2d0
	EObjectiveState _objectiveState; // 0x2e0
	TWeakObjectPtr<AMission> _parentMission; // 0x2e4
	FText _description; // 0x2f0
	bool _canInterruptDialogue; // 0x319
	bool _playUISounds; // 0x31a
};

struct UParticleModuleLocationPrimitiveSphere : UParticleModuleLocationPrimitiveBase {
	FRawDistributionFloat StartRadius; // 0xb0
};

struct UTraderManagingComponent : UActorComponent {
	float _pawnRelevancyRange; // 0xd0
	float _tradeOutpostsUpdateTime; // 0xd4
	float _outpostEconomyResetTimeHours; // 0xdc
	float _outpostPriceDeltasRandomizationTimeHours; // 0xe0
};

struct UPrisonerActionWashWithReplenishableResourceDescription : UCharacterActionDescription {
	UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource; // 0x80
};

struct ULevelUpNotification_C : ULevelUpNotificationWidget {
	UWidgetAnimation* LevelUpAnimation; // 0x2e0
};

struct UMaterialExpressionChannelMaskParameter : UMaterialExpressionVectorParameter {
	EChannelMaskParameterColor MaskChannel; // 0x70
};

struct UUI_CraftingAvailableItem_C : UCraftingAvailableItemWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a0
	UImage* _itemImage; // 0x2a8
	UImage* AdditionalComponentImage; // 0x2b0
	UImage* BackgroundImage; // 0x2b8
	UTextBlock* CountText; // 0x2c0
	URetainerBox* MainRetainerBox; // 0x2c8
	UUI_Border_C* UI_Border; // 0x2d0
};

struct UClothingAssetBase : UObject {
	FString ImportedFilePath; // 0x28
	FGuid AssetGuid; // 0x38
};

struct UVDRopeComponent : UBaseVDComponent {
	float StretchStiffness; // 0x678
	float BendStiffness; // 0x67c
	float Mass; // 0x680
	float DragCoefficient; // 0x684
	float Length; // 0x688
	float Width; // 0x68c
	int32_t NumSegments; // 0x690
	bool bEnforceStrictLength; // 0x694
	int32_t NumSides; // 0x698
	float TileMaterial; // 0x69c
	TArray<UVDParticleSpringConstraint*> StretchConstraints; // 0x6c0
	TArray<UVDParticleSpringConstraint*> BendConstraints; // 0x6d0
	TArray<FRopePiece> Pieces; // 0x6e0
};

struct UWaterRuntimeSettings : UDeveloperSettings {
	ECollisionChannel CollisionChannelForWaterTraces; // 0x38
	TSoftObjectPtr<UMaterialParameterCollection> MaterialParameterCollection; // 0x40
	float WaterBodyIconWorldSize; // 0x68
	float WaterBodyIconWorldZOffset; // 0x6c
	FName DefaultWaterCollisionProfileName; // 0x70
};

struct AConZSpectatorPawn : ASpectatorPawn {
	float DefaultFOV; // 0x2a8
};

struct UPauseMenu : UBaseMenu {
	UTrashMenuButton* _resume; // 0x308
	UTrashMenuButton* _clientSettings; // 0x310
	UTrashMenuButton* _adminSettings; // 0x318
	UTrashMenuButton* _addToFavourites; // 0x320
	UTrashMenuButton* _commitSuicide; // 0x328
	UTrashMenuButton* _statistics; // 0x330
	UTrashMenuButton* _mainMenu; // 0x338
	UTrashMenuButton* _quitGame; // 0x340
	UVerticalBox* _messageBoxPanel; // 0x348
	UPanelWidget* _mainPanel; // 0x350
	UPauseMenuUIController* _pauseMenuUIControllerClass; // 0x358
};

struct UPlayMontageCallbackProxy : UObject {
	FMulticastInlineDelegate OnCompleted; // 0x28
	FMulticastInlineDelegate OnBlendOut; // 0x38
	FMulticastInlineDelegate OnInterrupted; // 0x48
	FMulticastInlineDelegate OnNotifyBegin; // 0x58
	FMulticastInlineDelegate OnNotifyEnd; // 0x68
};

struct ABP_MissionObjective_C : AActor {
	USceneComponent* DefaultSceneRoot; // 0x220
	FMulticastInlineDelegate Changed; // 0x228
};

struct UUI_VehicleHUD_C : UVehicleHudWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UWidgetAnimation* Blink; // 0x288
	UProgressBar* BatteryBar; // 0x290
	UImage* EngineBrokenIndicator; // 0x298
	UProgressBar* FuelBar; // 0x2a0
	UTextBlock* Gear; // 0x2a8
	UProgressBar* HealthBar; // 0x2b0
	UImage* Image_1; // 0x2b8
	UImage* Image_2; // 0x2c0
	UImage* Image_3; // 0x2c8
	UImage* Image_4; // 0x2d0
	UImage* Image_5; // 0x2d8
	UImage* Image_6; // 0x2e0
	UOverlay* Overlay_1; // 0x2e8
	USizeBox* SizeBox_3; // 0x2f0
	USizeBox* SizeBox_4; // 0x2f8
	UTextBlock* Speed100s; // 0x300
	UTextBlock* Speed10s; // 0x308
	UTextBlock* Speed1s; // 0x310
	UTextBlock* TextBlock_2; // 0x318
	UTextBlock* TextBlock_3; // 0x320
};

struct UVoxelBlendMeshesToolProperties : UInteractiveToolPropertySet {
	double BlendPower; // 0x60
	double BlendFalloff; // 0x68
	bool bSolidifyInput; // 0x70
	bool bRemoveInternalsAfterSolidify; // 0x71
	double OffsetSolidifySurface; // 0x78
};

struct UMeshStatisticsProperties : UInteractiveToolPropertySet {
	FString Mesh; // 0x60
	FString UV; // 0x70
	FString Attributes; // 0x80
};

struct UMultiLineEditableTextBox : UTextLayoutWidget {
	FText Text; // 0x128
	FText HintText; // 0x140
	FDelegate HintTextDelegate; // 0x158
	FEditableTextBoxStyle WidgetStyle; // 0x168
	FTextBlockStyle TextStyle; // 0x960
	bool bIsReadOnly; // 0xbd0
	bool AllowContextMenu; // 0xbd1
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0xbd2
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xbd3
	USlateWidgetStyleAsset* Style; // 0xbd8
	FSlateFontInfo Font; // 0xbe0
	FLinearColor ForegroundColor; // 0xc38
	FLinearColor BackgroundColor; // 0xc48
	FLinearColor ReadOnlyForegroundColor; // 0xc58
	FMulticastInlineDelegate OnTextChanged; // 0xc68
	FMulticastInlineDelegate OnTextCommitted; // 0xc78
};

struct UAssetMappingTable : UObject {
	TArray<FAssetMapping> MappedAssets; // 0x28
};

struct UNiagaraScript : UNiagaraScriptBase {
	ENiagaraScriptUsage usage; // 0x28
	int32_t UsageIndex; // 0x2c
	FGuid UsageId; // 0x30
	FNiagaraParameterStore RapidIterationParameters; // 0x40
	FNiagaraScriptExecutionParameterStore ScriptExecutionParamStore; // 0xb8
	TArray<FNiagaraBoundParameter> ScriptExecutionBoundParameters; // 0x150
	FNiagaraVMExecutableDataId CachedScriptVMId; // 0x160
	FNiagaraVMExecutableData CachedScriptVM; // 0x1b8
	TArray<UNiagaraParameterCollection*> CachedParameterCollectionReferences; // 0x298
	TArray<FNiagaraScriptDataInterfaceInfo> CachedDefaultDataInterfaces; // 0x2a8
};

struct UChatWidget : UDesignableUserWidget {
	UImage* _backgroundImage; // 0x278
	UScrollBox* _chatScrollBox; // 0x280
	UScrollBox* _suggestionsScrollBox; // 0x288
	UOverlay* _suggestionsDropDown; // 0x290
	UEditableTextBox* _inputText; // 0x298
	UTextBlock* _chatTypeIndicator; // 0x2a0
	FLinearColor _localChatColor; // 0x2a8
	FLinearColor _globalChatColor; // 0x2b8
	FLinearColor _squadChatColor; // 0x2c8
	FLinearColor _serverChatColor; // 0x2d8
	FLinearColor _errorChatColor; // 0x2e8
	FLinearColor _defaultChatColor; // 0x2f8
	FLinearColor _commandsOnlyChatColor; // 0x308
	FLinearColor _suggestionsTextColor; // 0x318
	UAdminCommandCompletionManager* _adminCommandCompletionManager; // 0x330
};

struct UCollapsableContainer : UUserWidget {
	FText Title; // 0x260
	UTextBlock* _title; // 0x278
	UImage* _titleBackground; // 0x280
	UButton* _displayContentButton; // 0x288
	UOverlay* _contentAreaOverlay; // 0x290
	FDataTableRowHandle _titleBackgroundColor; // 0x298
	FDataTableRowHandle _titleTextColor; // 0x2a8
	FButtonStyle _buttonStyleWhenCollapsedContent; // 0x2b8
	FButtonStyle _buttonStyleWhenExpandedContent; // 0x530
};

struct USoundNodeGroupControl : USoundNode {
	TArray<int32_t> GroupSizes; // 0x48
};

struct UNiagaraComponentSettings : UObject {
	TSet<FName> SuppressActivationList; // 0x28
	TSet<FName> ForceAutoPooolingList; // 0x78
	TSet<FNiagaraEmitterNameSettingsRef> SuppressEmitterList; // 0xc8
};

struct UContainerItemDescriptor : UObject {
	UObject* _itemClass; // 0x48
	FContainerItemDescriptorData _data; // 0x68
	TScriptInterface<IInventoryContainer> _owningContainer; // 0xa8
	TScriptInterface<IInventoryNode> _owningNode; // 0xb8
	bool _firstReplication; // 0xc8
};

struct AGameEventManager : AActor {
	int32_t EventHistoryLimit; // 0x220
	TArray<AGameEventBase*> _announcedGameEvents; // 0x228
	TArray<AGameEventBase*> _currentGameEvents; // 0x238
	TArray<AGameEventBase*> _endedGameEvents; // 0x248
	UGameEventPanelWidget* _panelWidget; // 0x258
};

struct UMalfunctionWidget : UDesignableUserWidget {
	UTextBlock* _descriptionWidget; // 0x280
};

struct UReplicationGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode_ActorList {
	TArray<FAlwaysRelevantActorInfo> PastRelevantActors; // 0x110
};

struct UPrisonerBodyConditionOrSymptomSideEffect_Disorientation : UPrisonerBodyConditionOrSymptomSideEffect {
	UPrisonerBodySymptom_Disorientation* _symptomClass; // 0x30
	UPrisonerBodySymptomCause_Disorientation* _symptomCause; // 0x38
	FRuntimeFloatCurve _intensityVsSeverity; // 0x40
};

struct ABP_Weapon_Improvised_Handgun_C : AWeapon {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2dd0
	UItemObstructionTestCapsuleComponent* ItemObstructionTestCapsule; // 0x2dd8
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x2de0
};

struct UModularTooltipElement_Modifier : UModularTooltipElement {
	UTextBlock* _modifierTextBlock; // 0x2e8
	UMetabolismAdvancedProgressBar* _remainingTimeProgressBar; // 0x2f0
};

struct APrisoner_Right_Arm_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f0
};

struct UWheelBarrowPassengerMountSlot : UWheelBarrowMountSlot {
	FName _socketName; // 0x108
	UBlendSpace* _idleAnimation; // 0x110
	UVehicleWeaponAimingParameters* _vehicleWeaponAimingParameters; // 0x118
};

struct UARTextureCameraDepth : UARTexture {
	EARDepthQuality DepthQuality; // 0xf8
	EARDepthAccuracy DepthAccuracy; // 0xf9
	bool bIsTemporallySmoothed; // 0xfa
};

struct UInteractionComponent : UActorComponent {
	float ExamineChanceMultiplier; // 0xb8
	float ExamineActionDuration; // 0xbc
	float ExamineReplicationDelay; // 0xc0
	float PickupItemActionDuration; // 0xc4
	float PickupItemReplicationDelay; // 0xc8
	float StoreItemActionDuration; // 0xcc
	float TickFrequency; // 0xd0
	float MinLandscapeInteractionDistanceSquared; // 0xd4
	int32_t SavedGroundSearchLocationsCount; // 0xd8
	AActor* GhostActorToSpawnAfterExamine; // 0xe0
	int32_t InitialMinNumEmptyContainersToSearchToSpawnGhostActor; // 0xf0
	int32_t InitialMaxNumEmptyContainersToSearchToSpawnGhostActor; // 0xf4
	int32_t MinNumEmptyContainersToSearchToSpawnGhostActor; // 0xf8
	int32_t MaxNumEmptyContainersToSearchToSpawnGhostActor; // 0xfc
	bool ShouldSpawnGhostActorRelativeToExaminer; // 0x100
	float GhostActorSpawnDistanceToExaminer; // 0x104
	int64_t ExamineGhostSpawnEndTime; // 0x108
	TArray<UInteractionAction*> _actions; // 0x128
	FSpawnedItems _replicatedExamineSpawnedItems; // 0x220
	FSpawnedItems _replicatedPickupSpawnedItem; // 0x238
	float _drinkAllowedThreshold; // 0x27c
	float _reexamineFrequency; // 0x280
};

struct UCraftingRecipeWidget : UDesignableUserWidget {
	UItemClassWidget* ItemWidget; // 0x278
	int32_t RecipeID; // 0x280
	FMulticastInlineDelegate OnRecipeSelected; // 0x288
	bool _isGrayedOut; // 0x298
	UImage* _itemImage; // 0x2a0
	UTextBlock* _additionalText; // 0x2a8
	UCraftableItem* _craftableItem; // 0x2b0
	bool _isExaminable; // 0x2c0
	ERecipeAvailabilityState _availabilityState; // 0x2c1
};

struct UCompositeDataTable : UDataTable {
	TArray<UDataTable*> ParentTables; // 0xb0
	TArray<UDataTable*> OldParentTables; // 0xc0
};

struct UAddPrimitiveTool : USingleClickTool {
	UProceduralShapeToolProperties* ShapeSettings; // 0x90
	UNewMeshMaterialProperties* MaterialProperties; // 0x98
	UPreviewMesh* PreviewMesh; // 0xa0
	ULastActorInfo* LastGenerated; // 0xa8
	FString AssetName; // 0xb0
};

struct UDistributionVector : UDistribution {
	char bCanBeBaked : 1; // 0x30
	char bIsDirty : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UMaterialExpressionFunctionInput : UMaterialExpression {
	FExpressionInput Preview; // 0x40
	FName InputName; // 0x54
	FString Description; // 0x60
	FGuid ID; // 0x70
	EFunctionInputType InputType; // 0x80
	FVector4 PreviewValue; // 0x90
	char bUsePreviewValueAsDefault : 1; // 0xa0
	int32_t SortPriority; // 0xa4
	char bCompilingFunctionPreview : 1; // 0xa8
};

struct UPrisonerBodySymptom_Disorientation : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8
};

struct UPrisonerBodyCondition_Choking : UPrisonerBodyCondition {
	float _oxygenSaturationToExist; // 0xa8
};

struct UReflectionCaptureComponent : USceneComponent {
	UBillboardComponent* CaptureOffsetComponent; // 0x1f8
	EReflectionSourceType ReflectionSourceType; // 0x200
	EMobileReflectionCompression MobileReflectionCompression; // 0x201
	UTextureCube* Cubemap; // 0x208
	float SourceCubemapAngle; // 0x210
	float Brightness; // 0x214
	float AffectedBySkyLight; // 0x218
	bool bModifyMaxValueRGBM; // 0x21c
	float MaxValueRGBM; // 0x220
	FVector CaptureOffset; // 0x224
	FGuid MapBuildDataId; // 0x230
	UTextureCube* CachedEncodedHDRCubemap; // 0x250
};

struct UDrawPolyPathTool : UInteractiveTool {
	UDrawPolyPathProperties* TransformProps; // 0xa0
	UDrawPolyPathExtrudeProperties* ExtrudeProperties; // 0xa8
	UNewMeshMaterialProperties* MaterialProperties; // 0xb0
	UConstructionPlaneMechanic* PlaneMechanic; // 0x140
	UPolyEditPreviewMesh* EditPreview; // 0x1e8
	UPlaneDistanceFromHitMechanic* ExtrudeHeightMechanic; // 0x1f0
	USpatialCurveDistanceMechanic* CurveDistMechanic; // 0x1f8
	UCollectSurfacePathMechanic* SurfacePathMechanic; // 0x200
};

struct UDialogueData : UDataAsset {
	TMap<EDialogEvent, FDialogInfoContainer> Dialogs; // 0x30
};

struct AFishingAttachmentReel : AFishingAttachment {
	USkeletalMeshComponent* SkeletalMesh; // 0x7e0
	FName ReelHandIK; // 0x7e8
	float _reelHandleAcceleration; // 0x7f0
	float _fastReelHandleAcceleration; // 0x7f4
	float _reelFriction; // 0x7f8
	float _fastReelFriction; // 0x7fc
	float _reelVelocityThreshold; // 0x800
	float _reelVelocityLimit; // 0x804
	float _reelAccelerationModifier; // 0x808
	FTransform _leftHandOffset; // 0x810
	UAnimMontage* _lockAfterLongCastAnimMontage; // 0x840
	UAnimMontage* _lockAfterShortCastAnimMontage; // 0x848
	UAnimMontage* _reelCastAnimMontage; // 0x850
	UAnimSequenceBase* _reelingAnimSequence; // 0x858
	UAkAudioEvent* _reelingStartAudioEvent; // 0x860
	UAkAudioEvent* _reelingEndAudioEvent; // 0x868
	FVector _leftHandIKLocationCache; // 0x87c
};

struct URadioProgram : UObject {
	TArray<URadioCategory*> CategoryClasses; // 0x28
	TArray<URadioCategory*> Categories; // 0x38
	int32_t _categoryIndex; // 0x48
};

struct UUI_ItemTooltip_C : UItemTooltip {
	UUI_Border_C* UI_Border; // 0x2c0
};

struct UPaperTileMapComponent : UMeshComponent {
	int32_t MapWidth; // 0x470
	int32_t MapHeight; // 0x474
	int32_t TileWidth; // 0x478
	int32_t TileHeight; // 0x47c
	UPaperTileSet* DefaultLayerTileSet; // 0x480
	UMaterialInterface* Material; // 0x488
	TArray<UPaperTileLayer*> TileLayers; // 0x490
	FLinearColor TileMapColor; // 0x4a0
	int32_t UseSingleLayerIndex; // 0x4b0
	bool bUseSingleLayer; // 0x4b4
	UPaperTileMap* TileMap; // 0x4b8
};

struct UAdminCommandArgumentCompletion_Enum : UAdminCommandArgumentCompletion {
	FName _enum; // 0x30
	bool _excludeNoneEnumerator; // 0x38
	bool _excludeCountEnumerator; // 0x39
	bool _excludeAutoGeneratedEnumerator; // 0x3a
	TSet<FName> _additionalEnumeratorsToExclude; // 0x40
};

struct UBP_M1_InsertClipInsertBullet_C : UInsertMagazineInsertCartridge {
	int32_t LoadedAmmoCount; // 0xa0
};

struct UMovieScene2DTransformSection : UMovieSceneSection {
	FMovieScene2DTransformMask TransformMask; // 0xf0
	FMovieSceneFloatChannel Translation[0x2]; // 0xf8
	FMovieSceneFloatChannel Rotation; // 0x238
	FMovieSceneFloatChannel Scale[0x2]; // 0x2d8
	FMovieSceneFloatChannel Shear[0x2]; // 0x418
};

struct UMaterialExpressionAppendVector : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UAdminCommandArgumentCompletion_PrimaryAsset : UAdminCommandArgumentCompletion {
	FPrimaryAssetType _primaryAssetType; // 0x30
	TSet<FPrimaryAssetId> _primaryAssetsToExclude; // 0x38
};

struct UGarbageCollectionSettings : UDeveloperSettings {
	float TimeBetweenPurgingPendingKillObjects; // 0x38
	char FlushStreamingOnGC : 1; // 0x3c
	char AllowParallelGC : 1; // 0x3c
	char IncrementalBeginDestroyEnabled : 1; // 0x3c
	char MultithreadedDestructionEnabled : 1; // 0x3c
	char CreateGCClusters : 1; // 0x3c
	char AssetClusteringEnabled : 1; // 0x3c
	char ActorClusteringEnabled : 1; // 0x3c
	char BlueprintClusteringEnabled : 1; // 0x3c
	char UseDisregardForGCOnDedicatedServers : 1; // 0x3d
	int32_t MinGCClusterSize; // 0x40
	int32_t NumRetriesBeforeForcingGC; // 0x44
	int32_t MaxObjectsNotConsideredByGC; // 0x48
	int32_t SizeOfPermanentObjectPool; // 0x4c
	int32_t MaxObjectsInGame; // 0x50
	int32_t MaxObjectsInEditor; // 0x54
};

struct UParticleModuleMeshRotation : UParticleModuleRotationBase {
	FRawDistributionVector StartRotation; // 0x30
	char bInheritParent : 1; // 0x78
};

struct AAkReverbVolume : AVolume {
	char bEnabled : 1; // 0x258
	UAkAuxBus* AuxBus; // 0x260
	FString AuxBusName; // 0x268
	float SendLevel; // 0x278
	float FadeRate; // 0x27c
	float Priority; // 0x280
	UAkLateReverbComponent* LateReverbComponent; // 0x288
};

struct UAnimal2AnimInstance : UAnimInstance {
	UCurveFloat* InverseLocomotionBias; // 0x2b8
	float MaximumLeaningAngle; // 0x2c0
	int32_t IdleStanceIndex; // 0x2c4
	EAnimalStance stance; // 0x2c8
	FRotator SlopeRootTiltRotation; // 0x2cc
	float ABPSpeed; // 0x2d8
	float ABPTurn; // 0x2dc
	float MoveVelocity; // 0x2e0
};

struct UClothPhysicalMeshDataNv_Legacy : UClothPhysicalMeshDataBase_Legacy {
	TArray<float> MaxDistances; // 0xe0
	TArray<float> BackstopDistances; // 0xf0
	TArray<float> BackstopRadiuses; // 0x100
	TArray<float> AnimDriveMultipliers; // 0x110
};

struct UDrawFrustumComponent : UPrimitiveComponent {
	FColor FrustumColor; // 0x448
	float FrustumAngle; // 0x44c
	float FrustumAspectRatio; // 0x450
	float FrustumStartDist; // 0x454
	float FrustumEndDist; // 0x458
	UTexture* Texture; // 0x460
};

struct AVectorFieldVolume : AActor {
	UVectorFieldComponent* VectorFieldComponent; // 0x220
};

struct UOffsetMeshToolProperties : UInteractiveToolPropertySet {
	EOffsetMeshToolOffsetType OffsetType; // 0x60
	float Distance; // 0x64
	bool bCreateShell; // 0x68
};

struct UMediaPlayer : UObject {
	FMulticastInlineDelegate OnEndReached; // 0x28
	FMulticastInlineDelegate OnMediaClosed; // 0x38
	FMulticastInlineDelegate OnMediaOpened; // 0x48
	FMulticastInlineDelegate OnMediaOpenFailed; // 0x58
	FMulticastInlineDelegate OnPlaybackResumed; // 0x68
	FMulticastInlineDelegate OnPlaybackSuspended; // 0x78
	FMulticastInlineDelegate OnSeekCompleted; // 0x88
	FMulticastInlineDelegate OnTracksChanged; // 0x98
	FTimespan CacheAhead; // 0xa8
	FTimespan CacheBehind; // 0xb0
	FTimespan CacheBehindGame; // 0xb8
	bool NativeAudioOut; // 0xc0
	bool PlayOnOpen; // 0xc1
	char Shuffle : 1; // 0xc4
	char Loop : 1; // 0xc4
	UMediaPlaylist* Playlist; // 0xc8
	int32_t PlaylistIndex; // 0xd0
	FTimespan TimeDelay; // 0xd8
	float HorizontalFieldOfView; // 0xe0
	float VerticalFieldOfView; // 0xe4
	FRotator ViewRotation; // 0xe8
	FGuid PlayerGuid; // 0x120
};

struct ASkyAtmosphere : AInfo {
	USkyAtmosphereComponent* SkyAtmosphereComponent; // 0x220
};

struct UAkAudioBank : UObject {
	bool AutoLoad; // 0x28
};

struct UProceduralDiscToolProperties : UProceduralShapeToolProperties {
	float Radius; // 0x70
	int32_t RadialSlices; // 0x74
	int32_t RadialSubdivisions; // 0x78
};

struct UScrollBar : UWidget {
	FScrollBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x5d8
	bool bAlwaysShowScrollbar; // 0x5e0
	bool bAlwaysShowScrollbarTrack; // 0x5e1
	EOrientation Orientation; // 0x5e2
	FVector2D Thickness; // 0x5e4
	FMargin Padding; // 0x5ec
};

struct USkinnedMeshComponent : UMeshComponent {
	USkeletalMesh* SkeletalMesh; // 0x478
	TWeakObjectPtr<USkinnedMeshComponent> MasterPoseComponent; // 0x480
	TArray<ESkinCacheUsage> SkinCacheUsage; // 0x488
	TArray<FVertexOffsetUsage> VertexOffsetUsage; // 0x498
	UPhysicsAsset* PhysicsAssetOverride; // 0x5a0
	int32_t ForcedLodModel; // 0x5a8
	int32_t MinLodModel; // 0x5ac
	float StreamingDistanceMultiplier; // 0x5b8
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x5c8
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x5fc
	char bOverrideMinLod : 1; // 0x5fe
	char bUseBoundsFromMasterPoseComponent : 1; // 0x5fe
	char bForceWireframe : 1; // 0x5fe
	char bDisplayBones : 1; // 0x5fe
	char bDisableMorphTarget : 1; // 0x5fe
	char bHideSkin : 1; // 0x5ff
	char bPerBoneMotionBlur : 1; // 0x5ff
	char bComponentUseFixedSkelBounds : 1; // 0x5ff
	char bConsiderAllBodiesForBounds : 1; // 0x5ff
	char bSyncAttachParentLOD : 1; // 0x5ff
	char bCanHighlightSelectedSections : 1; // 0x5ff
	char bRecentlyRendered : 1; // 0x5ff
	char bCastCapsuleDirectShadow : 1; // 0x5ff
	char bCastCapsuleIndirectShadow : 1; // 0x600
	char bCPUSkinning : 1; // 0x600
	char bEnableUpdateRateOptimizations : 1; // 0x600
	char bDisplayDebugUpdateRateOptimizations : 1; // 0x600
	char bRenderStatic : 1; // 0x600
	char bIgnoreMasterPoseComponentLOD : 1; // 0x600
	char bCachedLocalBoundsUpToDate : 1; // 0x601
	char bForceMeshObjectUpdate : 1; // 0x601
	float CapsuleIndirectShadowMinVisibility; // 0x604
	FBoxSphereBounds CachedWorldSpaceBounds; // 0x618
	FMatrix CachedWorldToLocalTransform; // 0x640
};

struct UNameableItemComponentState : UItemComponentStateBase {
	FString Name; // 0x40
};

struct USearchForItemsAssetData : UInteractionAssetData {
	USearchItemDataAsset* SearchAsset; // 0x30
};

struct AAmmunitionBoxItem : AItem {
	AAmmunitionItem* AmmunitionItemClass; // 0x7c0
	AItem* ItemClassToSpawnWhenUnpacked; // 0x7c8
	int32_t MaxAmmoCount; // 0x7d0
	int32_t _ammoCount; // 0x7d4
};

struct UReplicationGraphNode_TearOff_ForConnection : UReplicationGraphNode {
	TArray<FTearOffActorInfo> TearOffActors; // 0x50
};

struct UBTTask_PlaySound : UBTTaskNode {
	USoundCue* SoundToPlay; // 0x70
};

struct AFireworksItem : AItem {
	bool _isFiring; // 0x7c0
	int32_t _totalShells; // 0x7c8
	float _secondsBetweenLaunches; // 0x7d8
	float _noiseLoudnessOnLaunch; // 0x7dc
};

struct UMaterialExpressionOneMinus : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UPowerCableMeshSet : UDataAsset {
	TArray<FPowerCableMeshInfo> Meshes; // 0x30
};

struct UHandsCorrectionsData : UDataAsset {
	FHandsPoseCorrections Corrections[0x4]; // 0x30
	FHandsPoseCorrections FirstPersonCorrections[0x4]; // 0x130
	bool OverrideFingersOnlyInProne; // 0x230
};

struct UPlaceableCraftableItem : UCraftableItem {
	float MaxPlacementAngle; // 0x128
	bool AdjustRotation; // 0x12c
	float GroundOffsetWhilePlacing; // 0x130
	float MaxDistanceFromGroundWhilePlacing; // 0x134
	float ReachabilityVerticalOffset; // 0x138
	bool IgnoreFloatingCheckWhilePlacing; // 0x13c
	FVector PlacementLocationOffset; // 0x140
	FVector BoundsExtensionWhilePlacingMin; // 0x14c
	FVector BoundsExtensionWhilePlacingMax; // 0x158
	FVector PlacementTracesBoundsExtension; // 0x164
	FVector FloatingTracesBoundsExtension; // 0x170
	FVector FloatingTracesCenterOffset; // 0x17c
	float MaxHeightAdjustmentWhilePlacing; // 0x188
	float MinHeightAdjustmentWhilePlacing; // 0x18c
	bool CanPlaceOnWater; // 0x190
	bool UseMeshCollisionForPlacement; // 0x191
	bool OnlyPlaceableInFriendlyFlagArea; // 0x192
	bool CanPlaceInEnemyFlagArea; // 0x193
	bool CheckBaseBuildingPlacementMask; // 0x194
	EPlacementAlgorithm PlacementAlgorithm; // 0x195
	float MaxMissedPlacementTracesPercent; // 0x198
	bool ShowDirectionIndicator; // 0x19c
	FVector DirectionIndicatorOffset; // 0x1a0
	float DirectionIndicatorRotation; // 0x1ac
	float DirectionIndicatorSize; // 0x1b0
	float OutlineMaterialBaseOffset; // 0x1b4
	float OutlineMaterialThinness; // 0x1b8
	bool IsOutlineMaterialTwoSided; // 0x1bc
	UMaterialInterface* PlacementAllowedMaterialOverride; // 0x1c0
	UMaterialInterface* PlacementDisallowedMaterialOverride; // 0x1c8
	UMaterialInterface* OutlineMaterialOverride; // 0x1d0
	UMaterialInterface* DepthMaterialOverride; // 0x1d8
};

struct UUI_Loading_C : ULoadingScreen {
	UImage* Image_37; // 0x280
	UImage* Image_38; // 0x288
};

struct UBP_M1_OpenInsertBulletLoop_C : UInsertCartridgeIntoMagazine {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t LoadedAmmoCount; // 0xa8
};

struct UCameraShakeBase : UObject {
	bool bSingleInstance; // 0x28
	float ShakeScale; // 0x2c
	APlayerCameraManager* cameraManager; // 0x30
};

struct UBlendSpace1D : UBlendSpaceBase {
	bool bScaleAnimation; // 0x148
};

struct UMaterialExpressionSkyAtmosphereAerialPerspective : UMaterialExpression {
	FExpressionInput WorldPosition; // 0x40
};

struct UParticleModuleKillHeight : UParticleModuleKillBase {
	FRawDistributionFloat Height; // 0x30
	char bAbsolute : 1; // 0x60
	char bFloor : 1; // 0x60
	char bApplyPSysScale : 1; // 0x60
};

struct AEmitter : AActor {
	UParticleSystemComponent* ParticleSystemComponent; // 0x220
	char bDestroyOnSystemFinish : 1; // 0x228
	char bPostUpdateTickGroup : 1; // 0x228
	char bCurrentlyActive : 1; // 0x228
	FMulticastInlineDelegate OnParticleSpawn; // 0x230
	FMulticastInlineDelegate OnParticleBurst; // 0x240
	FMulticastInlineDelegate OnParticleDeath; // 0x250
	FMulticastInlineDelegate OnParticleCollide; // 0x260
};

struct UBuoyancyComponent : UActorComponent {
	TArray<FSphericalPontoon> Pontoons; // 0xb0
	FMulticastInlineDelegate OnEnteredWaterDelegate; // 0xc0
	FMulticastInlineDelegate OnExitedWaterDelegate; // 0xd0
	FBuoyancyData BuoyancyData; // 0xe0
	TArray<AWaterBody*> CurrentWaterBodies; // 0x130
	UPrimitiveComponent* SimulatingComponent; // 0x140
};

struct UParticleModuleLight_Seeded : UParticleModuleLight {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct UAnimNotifyState_ShowAmmunitionMeshes : UAnimNotifyState {
	bool GenerateCustomMeshComponents; // 0x30
	TArray<FName> CustomMeshComponentsBoneNames; // 0x38
	bool showReversed; // 0x48
	TArray<int32_t> ammoIndices; // 0x50
};

struct UCharacterActionComponent : UActorComponent {
	bool _shouldStopMontageOnEnd; // 0xb8
};

struct UUI_BombDefusalWidget_C : UBombDefusalWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	UWidgetAnimation* ShowSuccess; // 0x2b8
	UWidgetAnimation* BlurWaitingForPlayer; // 0x2c0
	UWidgetAnimation* InfoFade; // 0x2c8
	UTextBlock* _tries; // 0x2d0
	URetainerBox* BloomRetainerBox; // 0x2d8
	UImage* Image; // 0x2e0
	UImage* Image_62; // 0x2e8
	UImage* Image_185; // 0x2f0
	UImage* Image_260; // 0x2f8
	UImage* InfinitySymbol; // 0x300
	UCanvasPanel* InfoPanelSecondary; // 0x308
	URetainerBox* MaskRetainerBox; // 0x310
	UImage* RenderedMinigame; // 0x318
	UImage* TextBackground; // 0x320
	UTextBlock* TextBlockDots; // 0x328
};

struct UAlignObjectsToolProperties : UInteractiveToolPropertySet {
	EAlignObjectsAlignTypes AlignType; // 0x60
	EAlignObjectsAlignToOptions AlignTo; // 0x64
	EAlignObjectsBoxPoint BoxPosition; // 0x68
	bool bAlignX; // 0x6c
	bool bAlignY; // 0x6d
	bool bAlignZ; // 0x6e
};

struct UCustomZoneSettingsHandlingMethodSelector : UUserWidget {
	UTextBlock* _nameText; // 0x270
	UButton* _buttonSkip; // 0x278
	UButton* _buttonAllow; // 0x280
	UButton* _buttonBlock; // 0x288
	FText _name; // 0x290
};

struct AFlashbangItem : AGrenadeItem {
	AFlashbangItemEffects* _flashbangEffectsClass; // 0x850
};

struct UDistributionFloatParameterBase : UDistributionFloatConstant {
	FName ParameterName; // 0x40
	float MinInput; // 0x48
	float MaxInput; // 0x4c
	float MinOutput; // 0x50
	float MaxOutput; // 0x54
	DistributionParamMode ParamMode; // 0x58
};

struct UMaterialExpressionDynamicParameter : UMaterialExpression {
	TArray<FString> ParamNames; // 0x40
	FLinearColor DefaultValue; // 0x50
	uint32_t ParameterIndex; // 0x60
};

struct UDcxVehicleDriveComponent4W : UDcxVehicleDriveComponent {
	FDcxVehicleDifferentialData4W DifferentialData; // 0x3b8
	float AckermannGeometryAccuracy; // 0x3d4
};

struct ULuminApplicationLifecycleComponent : UApplicationLifecycleComponent {
	FMulticastInlineDelegate DeviceHasReactivatedDelegate; // 0x140
	FMulticastInlineDelegate DeviceWillEnterRealityModeDelegate; // 0x150
	FMulticastInlineDelegate DeviceWillGoInStandbyDelegate; // 0x160
	FMulticastInlineDelegate FocusLostDelegate; // 0x170
	FMulticastInlineDelegate FocusGainedDelegate; // 0x180
};

struct UProceduralArrowToolProperties : UProceduralShapeToolProperties {
	float ShaftRadius; // 0x70
	float ShaftHeight; // 0x74
	float HeadRadius; // 0x78
	float HeadHeight; // 0x7c
	int32_t RadialSlices; // 0x80
	int32_t TotalSubdivisions; // 0x84
};

struct UBehaviorTree : UObject {
	UBTCompositeNode* RootNode; // 0x30
	UBlackboardData* BlackboardAsset; // 0x38
	TArray<UBTDecorator*> RootDecorators; // 0x40
	TArray<FBTDecoratorLogic> RootDecoratorOps; // 0x50
};

struct UClearClipPartiallyEjected : UWeaponActionClearMalfunctionSequence {
	FName MontageEndSectionName; // 0xb8
};

struct UAdminCommand_RemovePrisonerBodyEffect : UAdminCommand {
	UPrisonerBodyEffect* _bodyEffectClass; // 0x80
};

struct UPrisonerBodyConditionOrSymptomSideEffect_Weakness : UPrisonerBodyConditionOrSymptomSideEffect {
	UPrisonerBodySymptom_Weakness* _symptomClass; // 0x30
	UPrisonerBodySymptomCause_Weakness* _symptomCause; // 0x38
	FRuntimeFloatCurve _performanceScoreModifierVsSeverity; // 0x40
	float _strengthModifierPerPerformanceScoreModifier; // 0xc8
	float _constitutionModifierPerPerformanceScoreModifier; // 0xcc
	float _dexterityModifierPerPerformanceScoreModifier; // 0xd0
};

struct UDatasmithVREDSceneImportData : UDatasmithFBXSceneImportData {
	bool bMergeNodes; // 0x48
	bool bOptimizeDuplicatedNodes; // 0x49
	bool bImportMats; // 0x4a
	FString MatsPath; // 0x50
	bool bImportVar; // 0x60
	bool bCleanVar; // 0x61
	FString VarPath; // 0x68
	bool bImportLightInfo; // 0x78
	FString LightInfoPath; // 0x80
	bool bImportClipInfo; // 0x90
	FString ClipInfoPath; // 0x98
};

struct UABP_M9_Magazine_C : UWeaponAttachmentMagazineAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x398
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x3e0
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x428
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x470
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x4b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x568
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x590
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x5b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x5e0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x680
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x730
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x778
	FAnimNode_Slot AnimGraphNode_Slot; // 0x7c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x808
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x830
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x858
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x880
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x9d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0xa78
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xaf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xb98
};

struct UCircularMenuMusicPlayerToggleInfo : UCircularMenuSegmentInfo {
	EInteractionTargetType InteractionTargetType; // 0x80
	FInteractionStruct PrimaryInteractionInfo; // 0x88
	FInteractionStruct SecondaryInteractionInfo; // 0x100
	FText PrimaryCaption; // 0x178
	UCircularMenuSegmentIcons* PrimaryIcons; // 0x190
	FText SecondaryCaption; // 0x198
	UCircularMenuSegmentIcons* SecondaryIcons; // 0x1b0
	bool IsPrimaryActive; // 0x1b8
	EMusicPlayerCommandType MusicPlayerCommandType; // 0x1b9
	APrisoner* _interactionInitiator; // 0x1c0
	UObject* _interactableObject; // 0x1c8
};

struct UMovieSceneGeometryCollectionSection : UMovieSceneSection {
	FMovieSceneGeometryCollectionParams Params; // 0xe8
};

struct UMaterialExpressionDesaturation : UMaterialExpression {
	FExpressionInput Input; // 0x40
	FExpressionInput Fraction; // 0x54
	FLinearColor LuminanceFactors; // 0x68
};

struct UTradingWidget : UUserWidget {
	UButton* _purchaseButton; // 0x260
	UButton* _purchaseButton2; // 0x268
	UButton* _purchaseButton3; // 0x270
	UButton* _purchaseButton4; // 0x278
	UTextBlock* _button1TextBlock; // 0x280
	UTextBlock* _button2TextBlock; // 0x288
	UTextBlock* _button3TextBlock; // 0x290
	UTextBlock* _button4TextBlock; // 0x298
	UImage* _tradeableImage1; // 0x2a0
	UImage* _tradeableImage2; // 0x2a8
	UImage* _tradeableImage3; // 0x2b0
	UImage* _tradeableImage4; // 0x2b8
	UButton* _closeButton; // 0x2c0
	UTextBlock* _traderAvailableFundsTextBlock; // 0x2c8
	UTextBlock* _availableFundsTextBlock; // 0x2d0
	UTextBlock* _availableCashTextBlock; // 0x2d8
};

struct UMeshInspectorProperties : UInteractiveToolPropertySet {
	bool bWireframe; // 0x60
	bool bBoundaryEdges; // 0x61
	bool bBowtieVertices; // 0x62
	bool bPolygonBorders; // 0x63
	bool bUVSeams; // 0x64
	bool bUVBowties; // 0x65
	bool bNormalSeams; // 0x66
	bool bNormalVectors; // 0x67
	bool bTangentVectors; // 0x68
	float NormalLength; // 0x6c
	float TangentLength; // 0x70
};

struct UAnimSingleNodeInstance : UAnimInstance {
	UAnimationAsset* CurrentAsset; // 0x2b8
	FDelegate PostEvaluateAnimEvent; // 0x2c0
};

struct ADropZoneCargo : ADropZoneDroppable {
	UChildActorComponent* slot; // 0x288
};

struct AWeaponCrossbow : AWeapon {
	UWeaponStateFiring* FireState; // 0x2dd0
	UWeaponState* FireAndInsertArrowState; // 0x2dd8
	float _muzzleVelocity; // 0x2de0
	FCharacterAndItemAnimation _crossbowFireAnimation; // 0x2de8
	UAkAudioEvent* _crossbowFireAudioEvent; // 0x2df8
	UAkAudioEvent* _crossbowDryFireAudioEvent; // 0x2e00
	UWeaponState* _crossbowActiveState; // 0x2e08
	bool _isCocked; // 0x2e10
};

struct UUI_RewardItemWidfget_C : URewardItemWidget {
	UImage* _border; // 0x270
	UImage* _bulletBackground; // 0x278
	UImage* _textBackground; // 0x280
};

struct UFishSpeciesData : UDataAsset {
	EFishSpecies FishSpecies; // 0x30
	UStaticMesh* SingleFishStaticMesh; // 0x38
	USkeletalMesh* SingleFishSkeletalMesh; // 0x40
	UMaterialInterface* MaterialOverride; // 0x48
	UAnimSequence* CaughtFishAnimSequence; // 0x50
	AFishSchoolActor* SchoolClass; // 0x58
	AActor* caughtFishClass; // 0x60
	bool Predator; // 0x68
	float MinDepth; // 0x6c
	float MaxDepth; // 0x70
	float MinMass; // 0x74
	float MaxMass; // 0x78
	float MaxLength; // 0x7c
	EAquaticIndividualSize Size; // 0x80
	UCurveFloat* TimeOfDayPercentageCurve; // 0x88
};

struct UM1887_Reload_Event_Chamber_C : UInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t LoadedAmmoCount; // 0xa8
	int32_t MaxAmmoCount; // 0xac
};

struct UComponentDelegateBinding : UDynamicBlueprintBinding {
	TArray<FBlueprintComponentDelegateBinding> ComponentDelegateBindings; // 0x28
};

struct AStartLocationManager : AActor {
	TArray<FStartLocationDescription> _startLocationDescriptions; // 0x220
};

struct UAudioDeviceDisplay : UUserWidget {
	UTextBlock* _deviceName; // 0x260
};

struct UMaterialExpressionBlendMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput A; // 0x40
	FMaterialAttributesInput B; // 0x58
	FExpressionInput Alpha; // 0x70
	EMaterialAttributeBlend PixelAttributeBlendType; // 0x84
	EMaterialAttributeBlend VertexAttributeBlendType; // 0x85
};

struct UMaterialExpressionPreviousFrameSwitch : UMaterialExpression {
	FExpressionInput CurrentFrame; // 0x40
	FExpressionInput PreviousFrame; // 0x54
};

struct UPrisonerBodySymptom_BreathingObstructed : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8
};

struct AProceduralFoliageBlockingVolume : AVolume {
	AProceduralFoliageVolume* ProceduralFoliageVolume; // 0x258
};

struct ALevelSequenceActor : AActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x230
	ULevelSequencePlayer* SequencePlayer; // 0x248
	FSoftObjectPath LevelSequence; // 0x250
	FLevelSequenceCameraSettings CameraSettings; // 0x268
	ULevelSequenceBurnInOptions* BurnInOptions; // 0x270
	UMovieSceneBindingOverrides* BindingOverrides; // 0x278
	char bAutoPlay : 1; // 0x280
	char bOverrideInstanceData : 1; // 0x280
	char bReplicatePlayback : 1; // 0x280
	UObject* DefaultInstanceData; // 0x288
	ULevelSequenceBurnIn* BurnInInstance; // 0x290
	bool bShowBurnin; // 0x298
};

struct UMovieSceneMediaPlayerPropertySection : UMovieSceneSection {
	UMediaSource* MediaSource; // 0xe8
	bool bLoop; // 0xf0
};

struct UExplosiveAmmunitionArrowSpawningParams : UAmmunitionArrowSpawningParams {
	EPhysicalSurface HitPhysicalSurface; // 0x38
};

struct UUI_MissionPrompt_C : UMissionPrompt {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UImage* Image_11; // 0x280
	UUI_TrashMenuButton_C* NoButton; // 0x288
	UUI_TrashMenuButton_C* YesButton; // 0x290
};

struct UGroomAssetImportData : UAssetImportData {
	UGroomImportOptions* ImportOptions; // 0x28
};

struct AHandheldLightItem : AItem {
	int32_t _currentLightAngleIndex; // 0x7c0
	TArray<float> _possibleLightAngles; // 0x7c8
	float _minIntensityValue; // 0x7d8
	float _intensityChangeStep; // 0x7dc
	UBasicGameResourceContainerComponent* _resourceContainerComponent; // 0x7e0
	char _lightIntensityReplicated; // 0x7ec
	bool _canChangeLightIntensity; // 0x7ed
};

struct AGameMode : AGameModeBase {
	FName MatchState; // 0x2c0
	char bDelayedStart : 1; // 0x2c8
	int32_t NumSpectators; // 0x2cc
	int32_t NumPlayers; // 0x2d0
	int32_t NumBots; // 0x2d4
	float MinRespawnDelay; // 0x2d8
	int32_t NumTravellingPlayers; // 0x2dc
	ULocalMessage* EngineMessageClass; // 0x2e0
	TArray<APlayerState*> InactivePlayerArray; // 0x2e8
	float InactivePlayerStateLifeSpan; // 0x2f8
	int32_t MaxInactivePlayers; // 0x2fc
	bool bHandleDedicatedServerReplays; // 0x300
};

struct UArrowComponent : UPrimitiveComponent {
	FColor ArrowColor; // 0x448
	float ArrowSize; // 0x44c
	float ArrowLength; // 0x450
	float ScreenSize; // 0x454
	char bIsScreenSizeScaled : 1; // 0x458
	char bTreatAsASprite : 1; // 0x458
};

struct UParticleModuleEventGenerator : UParticleModuleEventBase {
	TArray<FParticleEvent_GenerateInfo> Events; // 0x30
};

struct ALevelScriptActor : AActor {
	char bInputEnabled : 1; // 0x220
};

struct ABP_WeaponSightBase_C : AWeaponAttachmentSight {
	FPointerToUberGraphFrame UberGraphFrame; // 0x800
};

struct AFireItem : AEquipmentItem {
	float _fuelCapacity; // 0x7d8
	float _fuelDuration; // 0x7dc
	float _burningSpeed; // 0x7e0
	float _burningSpeedRain; // 0x7e4
	FHeatSourceParameters _heatSourceParameters; // 0x7e8
	UAkAudioEvent* _startBurningAudioEvent; // 0x810
	UAkAudioEvent* _stopBurningAudioEvent; // 0x818
	UAkComponent* _fireAudioComponent; // 0x820
	UParticleSystemComponent* _fireParticlesComponent; // 0x828
	float _touchDamage; // 0x830
	bool _isBurning; // 0x834
	int32_t _burningStage; // 0x840
};

struct ULevelSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x68
	FLevelSequenceObjectReferenceMap ObjectReferences; // 0x70
	FLevelSequenceBindingReferences BindingReferences; // 0xc0
	TMap<FString, FLevelSequenceObject> PossessedObjects; // 0x160
	UObject* DirectorClass; // 0x1b0
	TArray<UAssetUserData*> AssetUserData; // 0x1b8
};

struct UUI_MusicPlayerDisplay_C : UMusicPlayerDisplayWidget {
	URetainerBox* TitleRetainer; // 0x308
};

struct UNavArea : UNavAreaBase {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UPhysicalSurfacesEffectsData : UDataAsset {
	FPhysicalSurfaceEffectsData Default; // 0x30
	FPhysicalSurfaceEffectsData grass; // 0x50
	FPhysicalSurfaceEffectsData ForrestGroundCoastal; // 0x70
	FPhysicalSurfaceEffectsData ForrestGroundContinental; // 0x90
	FPhysicalSurfaceEffectsData Rock; // 0xb0
	FPhysicalSurfaceEffectsData Stone; // 0xd0
	FPhysicalSurfaceEffectsData Gravel; // 0xf0
	FPhysicalSurfaceEffectsData GravelBeach; // 0x110
	FPhysicalSurfaceEffectsData Pebbles; // 0x130
	FPhysicalSurfaceEffectsData Snow; // 0x150
	FPhysicalSurfaceEffectsData Ice; // 0x170
	FPhysicalSurfaceEffectsData Sand; // 0x190
	FPhysicalSurfaceEffectsData Asphalt; // 0x1b0
	FPhysicalSurfaceEffectsData Dirt; // 0x1d0
	FPhysicalSurfaceEffectsData Water; // 0x1f0
	FPhysicalSurfaceEffectsData WaterOcean; // 0x210
	FPhysicalSurfaceEffectsData Cloth; // 0x230
	FPhysicalSurfaceEffectsData Metal; // 0x250
	FPhysicalSurfaceEffectsData Aluminium; // 0x270
	FPhysicalSurfaceEffectsData Concrete; // 0x290
	FPhysicalSurfaceEffectsData Brick; // 0x2b0
	FPhysicalSurfaceEffectsData Wood; // 0x2d0
	FPhysicalSurfaceEffectsData Plastic; // 0x2f0
	FPhysicalSurfaceEffectsData Rubber; // 0x310
	FPhysicalSurfaceEffectsData Glass; // 0x330
	FPhysicalSurfaceEffectsData Foliage; // 0x350
	FPhysicalSurfaceEffectsData Bark; // 0x370
	FPhysicalSurfaceEffectsData Flesh; // 0x390
	FPhysicalSurfaceEffectsData RoofTile; // 0x3b0
	FPhysicalSurfaceEffectsData CeramicTiles; // 0x3d0
	FPhysicalSurfaceEffectsData Scrap; // 0x3f0
	FPhysicalSurfaceEffectsData Trunk; // 0x410
	FPhysicalSurfaceEffectsData Leaves; // 0x430
	FPhysicalSurfaceEffectsData Fruit; // 0x450
	FPhysicalSurfaceEffectsData Cardboard; // 0x470
	FPhysicalSurfaceEffectsData Plaster; // 0x490
	FPhysicalSurfaceEffectsData Kevlar; // 0x4b0
	FPhysicalSurfaceEffectsData ForceField; // 0x4d0
	FPhysicalSurfaceEffectsData NoEffect; // 0x4f0
};

struct URemoveOccludedTrianglesTool : UMultiSelectionTool {
	URemoveOccludedTrianglesToolProperties* BasicProperties; // 0x90
	URemoveOccludedTrianglesAdvancedProperties* AdvancedProperties; // 0x98
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xa0
	TArray<UPreviewMesh*> PreviewCopies; // 0xb0
};

struct AAnimalSpawner2 : AActor {
	float MinSpawnAwayDistance; // 0x238
	float MaxSpawnAwayDistance; // 0x23c
	float _carcassSpawnChance; // 0x240
	TMap<AAnimal2*, FAnimalSpawnInfo> SpawnInfo; // 0x248
	TMap<AStaticMeshActor*, FAnimalSpawnInfo> SpawnInfoCarcasses; // 0x298
	USphereComponent* SphereComponent; // 0x2e8
	AGlobalAnimalSpawner* _globalSpawner; // 0x2f0
	float _spawnTimeDelta; // 0x304
	bool _overrideSpawnAnythingChance; // 0x308
	float _spawnAnythingChance; // 0x30c
	TArray<FAnimalManagementData> _animalsData; // 0x310
	TArray<FCarcassManagementData> _spawnedCarcasses; // 0x320
};

struct UMeshVertexSculptTool : UMeshSculptToolBase {
	UVertexBrushSculptProperties* SculptProperties; // 0x9d8
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0x9e0
};

struct UAISenseConfig : UObject {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UShapeComponent : UPrimitiveComponent {
	UBodySetup* ShapeBodySetup; // 0x448
	UNavAreaBase* AreaClass; // 0x450
	FColor ShapeColor; // 0x458
	char bDrawOnlyIfSelected : 1; // 0x45c
	char bShouldCollideWhenPlacing : 1; // 0x45c
	char bDynamicObstacle : 1; // 0x45c
};

struct UVoxelProperties : UInteractiveToolPropertySet {
	int32_t VoxelCount; // 0x60
	bool bAutoSimplify; // 0x64
	bool bRemoveInternalSurfaces; // 0x65
	double SimplifyMaxErrorFactor; // 0x68
	double CubeRootMinComponentVolume; // 0x70
};

struct UMaterialExpressionSign : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMovieSceneLevelVisibilitySection : UMovieSceneSection {
	ELevelVisibility Visibility; // 0xf0
	TArray<FName> LevelNames; // 0xf8
};

struct UAREnvironmentProbeComponent : UARComponent {
	FAREnvironmentProbeUpdatePayload ReplicatedPayload; // 0x280
};

struct UARTrackableNotifyComponent : UActorComponent {
	FMulticastInlineDelegate OnAddTrackedGeometry; // 0xb0
	FMulticastInlineDelegate OnUpdateTrackedGeometry; // 0xc0
	FMulticastInlineDelegate OnRemoveTrackedGeometry; // 0xd0
	FMulticastInlineDelegate OnAddTrackedPlane; // 0xe0
	FMulticastInlineDelegate OnUpdateTrackedPlane; // 0xf0
	FMulticastInlineDelegate OnRemoveTrackedPlane; // 0x100
	FMulticastInlineDelegate OnAddTrackedPoint; // 0x110
	FMulticastInlineDelegate OnUpdateTrackedPoint; // 0x120
	FMulticastInlineDelegate OnRemoveTrackedPoint; // 0x130
	FMulticastInlineDelegate OnAddTrackedImage; // 0x140
	FMulticastInlineDelegate OnUpdateTrackedImage; // 0x150
	FMulticastInlineDelegate OnRemoveTrackedImage; // 0x160
	FMulticastInlineDelegate OnAddTrackedFace; // 0x170
	FMulticastInlineDelegate OnUpdateTrackedFace; // 0x180
	FMulticastInlineDelegate OnRemoveTrackedFace; // 0x190
	FMulticastInlineDelegate OnAddTrackedEnvProbe; // 0x1a0
	FMulticastInlineDelegate OnUpdateTrackedEnvProbe; // 0x1b0
	FMulticastInlineDelegate OnRemoveTrackedEnvProbe; // 0x1c0
	FMulticastInlineDelegate OnAddTrackedObject; // 0x1d0
	FMulticastInlineDelegate OnUpdateTrackedObject; // 0x1e0
	FMulticastInlineDelegate OnRemoveTrackedObject; // 0x1f0
};

struct USoundfieldEffectBase : UObject {
	USoundfieldEffectSettingsBase* Settings; // 0x28
};

struct AGameModeBase : AInfo {
	FString OptionsString; // 0x220
	AGameSession* GameSessionClass; // 0x230
	AGameStateBase* GameStateClass; // 0x238
	APlayerController* PlayerControllerClass; // 0x240
	APlayerState* PlayerStateClass; // 0x248
	AHUD* HUDClass; // 0x250
	APawn* DefaultPawnClass; // 0x258
	ASpectatorPawn* SpectatorClass; // 0x260
	APlayerController* ReplaySpectatorPlayerControllerClass; // 0x268
	AServerStatReplicator* ServerStatReplicatorClass; // 0x270
	AGameSession* GameSession; // 0x278
	AGameStateBase* GameState; // 0x280
	AServerStatReplicator* ServerStatReplicator; // 0x288
	FText DefaultPlayerName; // 0x290
	char bUseSeamlessTravel : 1; // 0x2a8
	char bStartPlayersAsSpectators : 1; // 0x2a8
	char bPauseable : 1; // 0x2a8
};

struct UMovementComponent : UActorComponent {
	USceneComponent* UpdatedComponent; // 0xb0
	UPrimitiveComponent* UpdatedPrimitive; // 0xb8
	FVector Velocity; // 0xc4
	FVector PlaneConstraintNormal; // 0xd0
	FVector PlaneConstraintOrigin; // 0xdc
	char bUpdateOnlyIfRendered : 1; // 0xe8
	char bAutoUpdateTickRegistration : 1; // 0xe8
	char bTickBeforeOwner : 1; // 0xe8
	char bAutoRegisterUpdatedComponent : 1; // 0xe8
	char bConstrainToPlane : 1; // 0xe8
	char bSnapToPlaneAtStart : 1; // 0xe8
	char bAutoRegisterPhysicsVolumeUpdates : 1; // 0xe8
	char bComponentShouldUpdatePhysicsVolume : 1; // 0xe8
	EPlaneConstraintAxisSetting PlaneConstraintAxisSetting; // 0xeb
};

struct UAdminCommandCompletionManager : UObject {
	TMap<FString, UAdminCommand*> _commands; // 0x28
};

struct UMovieSceneBindingOverrides : UObject {
	TArray<FMovieSceneBindingOverrideData> BindingData; // 0x28
};

struct UInterpTrackInstAkAudioRTPC : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UPrisonerBodySymptom_PeriodicAffect : UPrisonerBodySymptom {
	FFloatInterval _affectIntervalDeviationRatio; // 0xb8
	FFloatInterval _affectDurationDeviationRatio; // 0xc0
};

struct UConZVehicleSpringArmComponent : USpringArmComponent {
	float _ownerAccelerationDirectionInterpSpeed; // 0x280
	FVector _maxCameraOffset; // 0x284
	FVector _cameraOffsetInterpSpeed; // 0x290
	float _maxCameraPitch; // 0x29c
};

struct UPrisonerMovementComponent : UConZCharacterMovementComponent {
	float CapsuleHalfHeightWhenCrouched; // 0xc18
	float CapsuleHalfHeightWhenProne; // 0xc1c
	float CapsuleHalfHeightWhenSwimming; // 0xc20
	bool UseCustomRotationRate; // 0xc24
	bool RequestedPathMovesForwardOnly; // 0xc25
	float RotationInterpolationSpeed; // 0xc28
	UCurveFloat* MaxRotationRateCurve; // 0xc30
	float RotationRateMultiplierWhenStanding; // 0xc38
	float RotationRateMultiplierWhenCrouched; // 0xc3c
	float RotationRateMultiplierWhenProne; // 0xc40
	float RotationRateMultiplierWhenSwimming; // 0xc44
	float RotationRateMultiplierWhenSwimmingAndDiving; // 0xc48
	float GroundSlopeAngleForSpeedScalingSmoothingRate; // 0xc4c
	float GroundSlopeAngleSmoothingRate; // 0xc50
	bool UseSmoothedGroundSlopeAngleForPaceChecks; // 0xc54
	float MinGroundSlopeAngleForJogging; // 0xc58
	float MaxGroundSlopeAngleForJogging; // 0xc5c
	float MinGroundSlopeAngleForRunning; // 0xc60
	float MaxGroundSlopeAngleForRunning; // 0xc64
	float MinSpeedModifierWhenMovingUphill; // 0xc68
	float BaseJumpZVelocity; // 0xc6c
	float MaxAbsoluteVelocityZAfterClimb; // 0xca8
	float StaminaUnitsToDrainOnJump; // 0xcac
	UCurveFloat* JumpZVelocityMultiplierVsSpeed; // 0xcb0
	UCurveFloat* JumpZVelocityMultiplierVsGroundSlopeAngle; // 0xcb8
	TArray<FPrisonerClimbAnimationInfo> ClimbAnimations; // 0xcc0
	float ClimbingStaminaDrainModifier; // 0xcd0
	float ClimbingPlayRateMultiplierWhenRequiredHandIsNotFree; // 0xcd4
	bool ClimbingDebuggingEnabled; // 0xcd8
	float ClimbingDebuggingDrawTime; // 0xcdc
	FVector LadderClimbingCapsuleBias; // 0xce0
	float LadderClimbingMaxSpeed; // 0xcec
	bool CanClimbOffLadderUpwardsAutomatically; // 0xcf0
	bool CanClimbOffLadderDownwardsAutomatically; // 0xcf1
	float MaxHorzDistanceToLadderForClimbing; // 0xcf4
	int32_t NumberOfLadderPeekSteps; // 0xcf8
	FVector PostLadderClimbingLaunchVelocity; // 0xcfc
	float MaxHeightToJumpOffLadderSafely; // 0xd08
	float MaxFallingSpeedAllowedForLadderClimbing; // 0xd0c
	float MaxGroundSlopeAllowedForLadderClimbing; // 0xd10
	UCurveFloat* MaxHorzDistanceToWindowForClimbingVsSpeed; // 0xd18
	TArray<FWindowClimbingAnimationInfo> WindowClimbingAnimations; // 0xd20
	float WaterImmersionToStartSwimming; // 0xd30
	float WaterImmersionToStopSwimming; // 0xd34
	float SwimmingToWalkingDepthTolerance; // 0xd38
	float SwimmingToWalkingCapsuleCollisionTolerance; // 0xd3c
	float DesiredWaterImmersion; // 0xd40
	float DesiredWaterImmersionCorrectionAcceleration; // 0xd44
	UCurveFloat* DesiredWaterImmersionCorrectionAccelerationCurve; // 0xd48
	float WaterResurfaceAcceleration; // 0xd50
	FVector2D OceanWavesAcceleration; // 0xd54
	float WaterImmersionAfterWhichRunningIsDisabled; // 0xd5c
	float ImmersionCorrectionDownMultiplier; // 0xd60
	float RotationRateMultiplierWhenImmersedInWater; // 0xd64
	float DiveInAccelerationScale; // 0xd68
	float DiveInAccelerationTimeout; // 0xd6c
	float DiveInCollisionCheckOffset; // 0xd70
	float BuoyancyWhenDiving; // 0xd74
	float BuoyancyWhenNotDiving; // 0xd78
	float RotationRatePitchWhenDiving; // 0xd7c
	float SurfaceTensionForce; // 0xd80
	float MaxWindSpeedForAerialDrag; // 0xd84
	float LongFallSpeedThreshold; // 0xd88
	float BodyRotationCorrectionRate; // 0xd8c
	FVector BodyRotationDrag; // 0xd90
	FWaterForceWhenSwimmingParams WaterForceWhenSwimmingParams; // 0xd9c
	FVector_NetQuantizeNormal _repAccelerationNormal; // 0xdb0
	char _repBuoyancy; // 0xf1c
	FLadderInfoRepData _ladderInfoRepData; // 0x10e0
	uint16_t _fallingPoseBlendRepData; // 0x1328
	char _fallingControlRepData; // 0x132a
};

struct UComboButtonWidgetStyle : USlateWidgetStyleContainerBase {
	FComboButtonStyle ComboButtonStyle; // 0x30
};

struct UUI_ItemSelectionSlotWidget_C : UItemSelectionSlotWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UScrollBox* Selection; // 0x280
	UTextBlock* TextBlock_1; // 0x288
	UVerticalBox* VerticalBox_1; // 0x290
	FText Name; // 0x298
	FMulticastInlineDelegate OnClicked; // 0x2b0
	int32_t SelectedIndex; // 0x2c0
};

struct USourceEffectEQPreset : USoundEffectSourcePreset {
	FSourceEffectEQSettings Settings; // 0xa0
};

struct ABP_Weapon_BlackHawk_Crossbow_C : AWeaponCrossbow {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e20
	UItemObstructionTestCapsuleComponent* ItemObstructionTestCapsule3; // 0x2e28
	UItemObstructionTestCapsuleComponent* ItemObstructionTestCapsule4; // 0x2e30
	UItemObstructionTestCapsuleComponent* ItemObstructionTestCapsule1; // 0x2e38
	UItemObstructionTestCapsuleComponent* ItemObstructionTestCapsule2; // 0x2e40
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x2e48
	float IronSightsHideAlpha; // 0x2e50
};

struct UInterpTrackInstParticleReplay : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UHUD_C : UHudWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x378
	UCompassWidget_C* _compassWidget; // 0x380
	UImage* _dummyImage; // 0x388
	UImage* HackImage; // 0x390
	UImage* Image_1; // 0x398
	UVerticalBox* KillNotificationsVerticalBox; // 0x3a0
	ULevelUpNotification_C* LevelUpNotification_1; // 0x3a8
	UCanvasPanel* MainCanvasPanel; // 0x3b0
	UMessageContainer_C* Messages; // 0x3b8
	UPrisonerLifeIndicatorsSprite_C* PrisonerLifeIndicatorsSprite; // 0x3c0
	UResizableWindow_C* ResizableWindowBCUICU; // 0x3c8
	UResizableWindow_C* ResizableWindowBCUMonitor; // 0x3d0
	UResizableWindow_C* ResizableWindowBCUPerformance; // 0x3d8
	UResizableWindow_C* ResizableWindowChat; // 0x3e0
	UResizableWindow_C* ResizableWindowRDANutrition; // 0x3e8
	UResizableWindow_C* ResizableWindowSkills; // 0x3f0
	UUI_TeamInfo_C* TeamInfo; // 0x3f8
	UUI_CraftingPanel_C* UI_CraftingPanel; // 0x400
	UUI_InventoryPanelThirdIteration_C* UI_InventoryPanelThirdIteration; // 0x408
	UUI_MicInputIndicator_C* UI_MicInputIndicator; // 0x410
	UUI_NotificationPanelWidget_C* UI_NotificationPanelWidget; // 0x418
	UUI_TabModeSwitcher_C* UI_TabModeSwitcher; // 0x420
	UUI_TabModeTabsContainer_C* UI_TabModeTabsContainer; // 0x428
	UTextBlock* Version_SteamID_Players; // 0x430
	UWarning_C* WarningMessage; // 0x438
	UVerticalBox* WarningsVerticalBox; // 0x440
	UTextBlock* Watermark; // 0x448
	float Threshold; // 0x450
	bool _monitorsVisible; // 0x454
	bool _isPrisonerLifeComponentValid; // 0x455
	bool _shouldRefreshBCUBodyMonitorSize; // 0x456
	bool _shouldRefreshRDAMonitorSize; // 0x457
	bool _shouldRefreshPerformanceMonitorSize; // 0x458
	bool _isValidForInitialization; // 0x459
	bool _isInitialized; // 0x45a
	float _lastBCULeftPanelDesiredHeight; // 0x45c
	UUI_NotificationWidget_C* UpdateableNotificationWidget; // 0x460
};

struct UModularTooltipElement_ValueWithModifier : UModularTooltipElement {
	UTextBlock* _nameTextBlock; // 0x2e8
	UTextBlock* _currentValueTextBlock; // 0x2f0
	UTextBlock* _baseValueTextBlock; // 0x2f8
	UTextBlock* _modifierSignTextBlock; // 0x300
	UTextBlock* _modifierTextBlock; // 0x308
};

struct UEnvQueryTest_Dot : UEnvQueryTest {
	FEnvDirection LineA; // 0x1f8
	FEnvDirection LineB; // 0x218
	EEnvTestDot TestMode; // 0x238
	bool bAbsoluteValue; // 0x239
};

struct AWeaponHolsterItem : AClothesItem {
	AWeapon* _holsteredWeaponRep; // 0x928
	FName _maxLocationSocketName; // 0x930
	FName _minLocationSocketName; // 0x938
	FName _fatLocationSocketName; // 0x940
	FName _leanLocationSocketName; // 0x948
	FName _staticMeshSocketName; // 0x950
};

struct UMeshAttributePaintTool : UDynamicMeshBrushTool {
	UMeshAttributePaintToolProperties* AttribProps; // 0x200
};

struct UUI_SpawnSectorSelector_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UButton* Button; // 0x280
	UButton* Button_1; // 0x288
	UButton* Button_2; // 0x290
	UButton* Button_3; // 0x298
	UButton* Button_4; // 0x2a0
	UButton* Button_5; // 0x2a8
	UButton* Button_6; // 0x2b0
	UButton* Button_7; // 0x2b8
	UButton* Button_8; // 0x2c0
	UButton* Button_9; // 0x2c8
	UButton* Button_10; // 0x2d0
	UButton* Button_11; // 0x2d8
	UButton* Button_12; // 0x2e0
	UButton* Button_13; // 0x2e8
	UButton* Button_14; // 0x2f0
	UButton* Button_15; // 0x2f8
	UButton* Button_16; // 0x300
	UButton* Button_17; // 0x308
	UButton* Button_18; // 0x310
	UButton* Button_19; // 0x318
	UButton* Button_20; // 0x320
	UButton* Button_21; // 0x328
	UButton* Button_22; // 0x330
	UButton* Button_23; // 0x338
	UButton* Button_24; // 0x340
	UImage* DeathImage; // 0x348
	UImage* MapImage; // 0x350
	UImage* SelectorImage; // 0x358
	UUniformGridPanel* UniformGridPanel_1; // 0x360
};

struct UUniformGridSlot : UPanelSlot {
	EHorizontalAlignment HorizontalAlignment; // 0x38
	EVerticalAlignment VerticalAlignment; // 0x39
	int32_t row; // 0x3c
	int32_t column; // 0x40
};

struct UParticleModuleSpawn : UParticleModuleSpawnBase {
	FRawDistributionFloat Rate; // 0x38
	FRawDistributionFloat RateScale; // 0x68
	EParticleBurstMethod ParticleBurstMethod; // 0x98
	TArray<FParticleBurst> BurstList; // 0xa0
	FRawDistributionFloat BurstScale; // 0xb0
	char bApplyGlobalSpawnRateScale : 1; // 0xe0
};

struct URestAssetData : UInteractionAssetData {
	EPrisonerRestingMode RestingMode; // 0x30
	UAnimSequenceBase* RestingAnimation; // 0x38
	TArray<FVector> AdditionalEndRestLocations; // 0x40
};

struct UDeviceProfileManager : UObject {
	TArray<UObject*> Profiles; // 0x28
};

struct UNiagaraDataInterfaceArrayFloat : UNiagaraDataInterfaceArray {
	TArray<float> FloatData; // 0x50
};

struct UARSessionConfig : UDataAsset {
	bool bGenerateMeshDataFromTrackedGeometry; // 0x30
	bool bGenerateCollisionForMeshData; // 0x31
	bool bGenerateNavMeshForMeshData; // 0x32
	bool bUseMeshDataForOcclusion; // 0x33
	bool bRenderMeshDataInWireframe; // 0x34
	bool bTrackSceneObjects; // 0x35
	bool bUsePersonSegmentationForOcclusion; // 0x36
	bool bUseSceneDepthForOcclusion; // 0x37
	bool bUseAutomaticImageScaleEstimation; // 0x38
	bool bUseStandardOnboardingUX; // 0x39
	EARWorldAlignment WorldAlignment; // 0x3a
	EARSessionType SessionType; // 0x3b
	EARPlaneDetectionMode PlaneDetectionMode; // 0x3c
	bool bHorizontalPlaneDetection; // 0x3d
	bool bVerticalPlaneDetection; // 0x3e
	bool bEnableAutoFocus; // 0x3f
	EARLightEstimationMode LightEstimationMode; // 0x40
	EARFrameSyncMode FrameSyncMode; // 0x41
	bool bEnableAutomaticCameraOverlay; // 0x42
	bool bEnableAutomaticCameraTracking; // 0x43
	bool bResetCameraTracking; // 0x44
	bool bResetTrackedObjects; // 0x45
	TArray<UARCandidateImage*> CandidateImages; // 0x48
	int32_t MaxNumSimultaneousImagesTracked; // 0x58
	EAREnvironmentCaptureProbeType EnvironmentCaptureProbeType; // 0x5c
	TArray<char> WorldMapData; // 0x60
	TArray<UARCandidateObject*> CandidateObjects; // 0x70
	FARVideoFormat DesiredVideoFormat; // 0x80
	bool bUseOptimalVideoFormat; // 0x8c
	EARFaceTrackingDirection FaceTrackingDirection; // 0x8d
	EARFaceTrackingUpdate FaceTrackingUpdate; // 0x8e
	int32_t MaxNumberOfTrackedFaces; // 0x90
	TArray<char> SerializedARCandidateImageDatabase; // 0x98
	EARSessionTrackingFeature EnabledSessionTrackingFeature; // 0xa8
	EARSceneReconstruction SceneReconstructionMethod; // 0xa9
	UARPlaneComponent* PlaneComponentClass; // 0xb0
	UARPointComponent* PointComponentClass; // 0xb8
	UARFaceComponent* FaceComponentClass; // 0xc0
	UARImageComponent* ImageComponentClass; // 0xc8
	UARQRCodeComponent* QRCodeComponentClass; // 0xd0
	UARPoseComponent* PoseComponentClass; // 0xd8
	UAREnvironmentProbeComponent* EnvironmentProbeComponentClass; // 0xe0
	UARObjectComponent* ObjectComponentClass; // 0xe8
	UARMeshComponent* MeshComponentClass; // 0xf0
	UARGeoAnchorComponent* GeoAnchorComponentClass; // 0xf8
	UMaterialInterface* DefaultMeshMaterial; // 0x100
	UMaterialInterface* DefaultWireframeMeshMaterial; // 0x108
};

struct UPrisonerBodyCondition_ColonFull : UPrisonerBodyCondition {
	float _colonFullnessToExist; // 0xa8
	float _colonFullnessToForceDefecate; // 0xac
	UPrisonerBodySymptom_NeedToDefecate* _needToDefecateSymptomClass; // 0xb0
	UPrisonerBodySymptomCause* _needToDefecateSymptomCause; // 0xb8
	float _colonFullnessAtWhichFartingStarts; // 0xc8
	float _fartingInterval; // 0xcc
	UPrisonerBodySymptom_Farting* _fartingSymptomClass; // 0xd0
	UPrisonerBodySymptomCause_Farting* _fartingSymptomCause; // 0xd8
};

struct UPinchBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	bool bPerpDamping; // 0x6c
};

struct UABP_MP5_Magazine_C : UWeaponAttachmentMagazineAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x360
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x3f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x438
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x4e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x510
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x538
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x560
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x600
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x6b0
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x6f8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x740
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x788
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x7b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x7d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x800
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x958
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x9d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0xa88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0xb08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0xb88
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xc08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0xca8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0xd28
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0xda8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0xe48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xec8
};

struct UAISense_Team : UAISense {
	TArray<FAITeamStimulusEvent> RegisteredEvents; // 0x80
};

struct UFishingRodState : UItemState {
	TArray<FDbIntegerId> FishingAttachments; // 0xf8
};

struct UItemSelection : UDataAsset {
	AItem* MainItem; // 0x30
	TArray<AItem*> SupportItems; // 0x38
	TArray<AItem*> Attachments; // 0x48
	UTexture2D* UnselectedIcon; // 0x58
	UTexture2D* SelectedIcon; // 0x60
	UTexture2D* DisabledIcon; // 0x68
	FText SelectionName; // 0x70
	float SizeX; // 0x88
	float SizeY; // 0x8c
	int32_t TeamIndex; // 0x90
};

struct UBuriableChestItemComponentState : UBuriableItemComponentState {
	float StoredAutoDestructTime; // 0x50
};

struct UGameplayTaskResource : UObject {
	int32_t ManualResourceID; // 0x28
	int8_t AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UMediaTexture : UTexture {
	TextureAddress AddressX; // 0xd8
	TextureAddress AddressY; // 0xd9
	bool AutoClear; // 0xda
	FLinearColor ClearColor; // 0xdc
	bool EnableGenMips; // 0xec
	char NumMips; // 0xed
	bool NewStyleOutput; // 0xee
	MediaTextureOutputFormat OutputFormat; // 0xef
	float CurrentAspectRatio; // 0xf0
	MediaTextureOrientation CurrentOrientation; // 0xf4
	UMediaPlayer* MediaPlayer; // 0xf8
};

struct UMetabolismVitaminAndMineralReserve : UUserWidget {
	FText Title; // 0x260
	UTextBlock* _title; // 0x278
	UTextBlock* _value; // 0x280
	UMetabolismSegmentedProgressBar* _spb_ReservesBar; // 0x288
};

struct UPlayerInput : UObject {
	TArray<FKeyBind> DebugExecBindings; // 0x120
	TArray<FName> InvertedAxis; // 0x160
};

struct USoundEffectSourcePresetChain : UObject {
	TArray<FSourceEffectChainEntry> Chain; // 0x28
	char bPlayEffectChainTails : 1; // 0x38
};

struct UPhysicalSurfacesData : UDataAsset {
	FPhysicalSurfaceData Default; // 0x30
	FPhysicalSurfaceData grass; // 0x48
	FPhysicalSurfaceData ForrestGroundCoastal; // 0x60
	FPhysicalSurfaceData ForrestGroundContinental; // 0x78
	FPhysicalSurfaceData Rock; // 0x90
	FPhysicalSurfaceData Stone; // 0xa8
	FPhysicalSurfaceData Gravel; // 0xc0
	FPhysicalSurfaceData GravelBeach; // 0xd8
	FPhysicalSurfaceData Pebbles; // 0xf0
	FPhysicalSurfaceData Snow; // 0x108
	FPhysicalSurfaceData Ice; // 0x120
	FPhysicalSurfaceData Sand; // 0x138
	FPhysicalSurfaceData Asphalt; // 0x150
	FPhysicalSurfaceData Dirt; // 0x168
	FPhysicalSurfaceData Water; // 0x180
	FPhysicalSurfaceData WaterOcean; // 0x198
	FPhysicalSurfaceData Cloth; // 0x1b0
	FPhysicalSurfaceData Metal; // 0x1c8
	FPhysicalSurfaceData Aluminium; // 0x1e0
	FPhysicalSurfaceData Concrete; // 0x1f8
	FPhysicalSurfaceData Brick; // 0x210
	FPhysicalSurfaceData Wood; // 0x228
	FPhysicalSurfaceData Plastic; // 0x240
	FPhysicalSurfaceData Rubber; // 0x258
	FPhysicalSurfaceData Glass; // 0x270
	FPhysicalSurfaceData Foliage; // 0x288
	FPhysicalSurfaceData Bark; // 0x2a0
	FPhysicalSurfaceData Flesh; // 0x2b8
	FPhysicalSurfaceData RoofTile; // 0x2d0
	FPhysicalSurfaceData CeramicTiles; // 0x2e8
	FPhysicalSurfaceData Scrap; // 0x300
	FPhysicalSurfaceData Trunk; // 0x318
	FPhysicalSurfaceData Leaves; // 0x330
	FPhysicalSurfaceData Fruit; // 0x348
	FPhysicalSurfaceData Cardboard; // 0x360
	FPhysicalSurfaceData Plaster; // 0x378
	FPhysicalSurfaceData Kevlar; // 0x390
	FPhysicalSurfaceData ForceField; // 0x3a8
	FPhysicalSurfaceData NoEffect; // 0x3c0
};

struct UVehicleSpawnerComponent : USceneComponent {
	TArray<FVehicleSpawnerMarker> SpawnerMarkers; // 0x1f8
};

struct UBoxMotionTriggerComponent : UMotionTriggerComponent {
	UBoxComponent* BoxCollisionComponent; // 0x518
	FVector _triggerSize; // 0x520
};

struct UEditableTextWidgetStyle : USlateWidgetStyleContainerBase {
	FEditableTextStyle EditableTextStyle; // 0x30
};

struct ABP_WeaponBullet_MetalArrow_C : AProjectileArrow {
	FPointerToUberGraphFrame UberGraphFrame; // 0x458
	UParticleSystemComponent* P_ArrowTrail; // 0x460
};

struct UPrisonerBodyConditionTreatmentItemTag : UBaseItemTag {
	FText InteractionCaption; // 0x30
	EPrisonerMontage BeginTreatmentMontage; // 0x48
	EPrisonerMontage EndTreatmentMontage; // 0x49
};

struct USubmixEffectSubmixEQPreset : USoundEffectSubmixPreset {
	FSubmixEffectSubmixEQSettings Settings; // 0xa0
};

struct UMovieSceneCameraShakeSourceShakeTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x80
};

struct AEquipmentItem : AItem {
	uint32_t MinRange; // 0x7c0
	uint32_t MaxRange; // 0x7c4
	uint32_t MinDamage; // 0x7c8
	uint32_t MaxDamage; // 0x7cc
	uint32_t AP; // 0x7d0
};

struct AOnlineBeaconHostObject : AActor {
	FString BeaconTypeName; // 0x220
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x230
	TArray<AOnlineBeaconClient*> ClientActors; // 0x238
};

struct UPreviewGeometry : UObject {
	APreviewGeometryActor* ParentActor; // 0x28
	TMap<FString, ULineSetComponent*> LineSets; // 0x30
};

struct UMetabolism_ICU_EKG_Stats : UMetabolism_ICU_Expandable_Stats {
	UTextBlock* _heartPulseBPM; // 0x278
};

struct UPrisonerBodyCondition_EnergyDeficiency : UPrisonerBodyCondition {
	FRuntimeFloatCurve _severityVsEnergyDeficiencyRatio; // 0xa8
	float _maxRatioOfAbsorbedEnergyCapacityToBeRecovered; // 0x130
	float _energyDeficiency; // 0x134
	float _energyDeficiencyToRecover; // 0x138
};

struct UModularTooltipSection : UUserWidget {
	FMargin _sectionElementsPadding; // 0x260
	UImage* _sectionSeparatorImage; // 0x270
	UTextBlock* _sectionNameTextBlock; // 0x278
	UVerticalBox* _sectionElementsVerticalBox; // 0x280
};

struct UInteractiveToolPropertySet : UObject {
	UInteractiveToolPropertySet* CachedProperties; // 0x38
	bool bIsPropertySetEnabled; // 0x40
};

struct ULevelUpNotificationWidget : UDesignableUserWidget {
	UOverlay* _overlay; // 0x278
	UImage* _backgroundImage; // 0x280
	UImage* _arrowImage; // 0x288
	UTextBlock* _skillLevelText; // 0x290
	UTextBlock* _skillNameText; // 0x298
	UAkAudioEvent* _levelUpNotificationAudioEvent; // 0x2a0
	float _displayTime; // 0x2ac
	float _slideInTime; // 0x2b0
	float _slideOutTime; // 0x2b4
};

struct UPrisonerBodyCondition_KillBoxGasPoisoning : UPrisonerBodyCondition {
	float _maxSeverity; // 0xa8
	float _poisoningDuration; // 0xac
	float _poisoningTriggerCooldown; // 0xb0
	float _poisoningTriggerTimer; // 0xb4
	float _recoveryDuration; // 0xb8
	float _damagedEffectTriggerInterval; // 0xbc
	float _damagedEffectDuration; // 0xc0
	float _damagedEffectIntensity; // 0xc4
	EPrisonerBodyConditionState _state; // 0xcc
	float _severityRatio; // 0xd4
	float _severityRatioAtRecoveryStart; // 0xd8
	float _drunkenness; // 0xdc
};

struct UMovieSceneObjectPropertySection : UMovieSceneSection {
	FMovieSceneObjectPathChannel ObjectChannel; // 0xe8
};

struct UChestItemState : UItemState {
	FDbIntegerId OwningUserProfileId; // 0xf8
	float ContainedItemsWeight; // 0x100
	EAccessLevel ActiveAccessLevel; // 0x104
	TArray<FDbIntegerId> Locks; // 0x108
};

struct UParticleModuleRotation_Seeded : UParticleModuleRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct ATargetObjective : ARequirementObjective {
	TMap<TSoftClassPtr<UObject>, FObjectiveItem> _targetClasses; // 0x330
	bool _specificTarget; // 0x380
	TMap<TSoftObjectPtr<AConZCharacter>, FObjectiveItem> _targetMeshes; // 0x388
	TArray<TSoftClassPtr<UObject>> _targetItems; // 0x3d8
};

struct UClearStuckBullet : UWeaponActionClearMalfunctionSequence {
	FName MontageEndSectionName; // 0xb8
};

struct UABP_Prisoner_Airplane_C : UPrisonerAnimInstance_Airplane {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x318
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x400
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x4a0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace; // 0x588
};

struct ABP_Survival_Blueprints_FillShelter_Objective_C : ABlueprintableItemObjective {
	USceneComponent* DefaultSceneRoot; // 0x368
};

struct ABP_Survival_Storage_CreatePlanks_Objective_C : AChoppingObjective {
	USceneComponent* DefaultSceneRoot; // 0x368
};

struct ULiveLinkComponentController : UActorComponent {
	FLiveLinkSubjectRepresentation SubjectRepresentation; // 0xb0
	TMap<ULiveLinkRole*, ULiveLinkControllerBase*> ControllerMap; // 0xc0
	bool bUpdateInEditor; // 0x110
	FMulticastInlineDelegate OnLiveLinkUpdated; // 0x118
	FComponentReference ComponentToControl; // 0x128
	bool bDisableEvaluateLiveLinkWhenSpawnable; // 0x150
	bool bEvaluateLiveLink; // 0x151
};

struct UVDSplineRopeComponent : UVDRopeComponent {
	FComponentReference SplineRef; // 0x6f8
	char bAutoAttachToSplineEndPoints : 1; // 0x720
	char bStretchToSplineLength : 1; // 0x720
	float SplineLength; // 0x724
};

struct UMovieSceneMediaTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> MediaSections; // 0x80
};

struct UMetabolism_BCU_ICU_Monitor : UUserWidget {
	UCurveFloat* TimeStretchCurveCurve; // 0x260
	UCheckBox* _chbSwitchICUState; // 0x268
	UWidgetSwitcher* _icu_Switcher; // 0x270
	UMetabolism_BCU_ICU_StatsPanel* _icu_Collapsed; // 0x278
	UMetabolism_BCU_ICU_StatsPanel* _icu_Expanded; // 0x280
};

struct UPrisonerBodyCondition_Drunkenness : UPrisonerBodyCondition {
	FRuntimeFloatCurve _severityVsAbsorbedAlcoholRatio; // 0xa8
	float _alcoholAbsorptionAtRecoveryStart; // 0x130
	EPrisonerBodyConditionState _state; // 0x134
	float _vomitCheckInterval; // 0x144
	float _alcoholInStomachRatioVomitThreshold; // 0x148
	FRuntimeFloatCurve _vomitProbabilityVsSeverity; // 0x150
};

struct ARegularDoorDestructible : ADoor {
	FRotator _openRotation; // 0x408
	FRotator _closedRotation; // 0x414
};

struct UUI_SquadPanel_C : USquadPanelWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x338
	UButton* CreateButton; // 0x340
	UButton* EditButton; // 0x348
	UBorder* EmblemBox; // 0x350
	UButton* LeaveButton; // 0x358
	UTextBlock* MemberCount; // 0x360
	UScrollBox* MemberListBox; // 0x368
	UVerticalBox* MembersList; // 0x370
	USizeBox* MessageBox; // 0x378
	UVerticalBox* RankingBox; // 0x380
	UUI_SquadEmblem_C* SquadEmblem; // 0x388
	UTextBlock* SquadMessage; // 0x390
	UTextBlock* SquadName; // 0x398
	UUI_SquadConfirmation_C* UI_SquadConfirmation; // 0x3a0
	UUI_SquadEditor_C* UI_SquadEditor; // 0x3a8
	bool InSquad; // 0x3b0
	bool CanEdit; // 0x3b1
	int32_t RankingCount; // 0x3b4
	bool MemberCountValid; // 0x3b8
};

struct UUI_HealthWidget2_C : UHealthWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x310
	UImage* Background; // 0x318
	UImage* DisabledBar; // 0x320
	UImage* HealthBar; // 0x328
	FLinearColor ColorMaxHP; // 0x330
	FLinearColor ColorMinHP; // 0x340
	UCurveFloat* ColorCurve; // 0x350
	UMaterialInstanceDynamic* _healthBarMat; // 0x358
	UMaterialInstanceDynamic* _disabledBarMat; // 0x360
};

struct UMetabolismTissueGroupCheckbox : UUserWidget {
	FText Title; // 0x260
	bool IsCheckdByDefault; // 0x278
	UTextBlock* _title; // 0x280
	UCheckBox* _checkBox; // 0x288
};

struct UTextureLODSettings : UObject {
	TArray<FTextureLODGroup> TextureLODGroups; // 0x28
};

struct ULockpickableLocksVisualComponent : USceneComponent {
	TArray<FString> _lockStaticMeshComponentNames; // 0x208
	UStaticMesh* _lockMeshPerLockDifficulty[0x4]; // 0x218
};

struct UBoxFalloff : UFieldNodeFloat {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	FTransform Transform; // 0xc0
	EFieldFalloffType Falloff; // 0xf0
};

struct UGizmoAxisScaleParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float ScaleMultiplier; // 0x68
	float Parameter; // 0x6c
	FGizmoFloatParameterChange LastChange; // 0x70
	FVector CurScaleAxis; // 0x78
	FVector CurScaleOrigin; // 0x84
	FTransform InitialTransform; // 0x90
};

struct UProceduralRoundedRectangleToolProperties : UProceduralRectangleToolProperties {
	float CornerRadius; // 0x80
	int32_t CornerSlices; // 0x84
};

struct UCombineMeshesToolProperties : UInteractiveToolPropertySet {
	bool bIsDuplicateMode; // 0x60
	ECombineTargetType WriteOutputTo; // 0x64
	FString OutputName; // 0x68
	FString OutputAsset; // 0x78
};

struct UParticleModuleSpawnBase : UParticleModule {
	char bProcessSpawnRate : 1; // 0x30
	char bProcessBurstList : 1; // 0x30
};

struct UMaterialExpressionDDY : UMaterialExpression {
	FExpressionInput Value; // 0x40
};

struct USeamSculptTool : UDynamicMeshBrushTool {
	USeamSculptToolProperties* Settings; // 0x200
	UPreviewGeometry* PreviewGeom; // 0x208
};

struct UNiagaraDataInterfaceWater : UNiagaraDataInterface {
	AWaterBody* SourceBody; // 0x38
};

struct AReplicatedExplosionEffectsActor : AReplicatedEffectsActor {
	FTransform _explosionParticlesTransform; // 0x230
	UParticleSystem* _defaultParticleSystem; // 0x260
	TMap<EPhysicalSurface, UParticleSystem*> _onImpactExplosionEffectsOverrides; // 0x268
	UAkAudioEvent* _explosionSound; // 0x2b8
};

struct ACTFBase : AActor {
	USphereComponent* SphereComponent; // 0x220
	UStaticMeshComponent* Mesh; // 0x228
	TArray<UMaterialInstance*> TeamMaterials; // 0x230
	ACTFGameEvent* _gameEvent; // 0x240
	int32_t _team; // 0x248
	float _radius; // 0x24c
};

struct UDiegeticLockState : UUserWidget {
	FSlateColor LockedColor; // 0x260
	FSlateColor UnlockedColor; // 0x288
	UTextBlock* _lockState; // 0x2b0
};

struct UNiagaraDataInterfaceCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve Curve; // 0x70
};

struct UBaseVDComponent : UMeshComponent {
	UVDSimulation* SimulationInstance; // 0x478
	UVDSimulatedObject* VDSimObject; // 0x480
	TArray<UVDSimulatedParticle*> Particles; // 0x488
	float FrictionCoefficient; // 0x498
	float RestitutionCoefficient; // 0x49c
	FVDCollisionSettings CollisionSettings; // 0x4a0
	float ParticleRadius; // 0x4e0
	bool AttachToRigids; // 0x4e4
	bool AttachToParticles; // 0x4e5
	float AttachToParticlesConstraintStiffness; // 0x4e8
	float EndOffset; // 0x4ec
	float DetectionRadiusInflationFactor; // 0x4f0
	bool CreateTensionConstraintsForSimulatingRigids; // 0x4f4
	bool bSnapToSimulatingAttachment; // 0x4f5
	bool ManuallyAttachParticles; // 0x4f6
	TArray<FVDParticleAttachment> ParticleAttachments; // 0x4f8
	float TensionForce; // 0x508
	float TensionDampening; // 0x50c
	char AdjustOtherParticleLocationsBasedOnAttachments : 1; // 0x510
	char AffectedByGlobalWind : 1; // 0x510
	char UseExplicitRigidBodyCollision : 1; // 0x510
	float WindResistance; // 0x514
	TArray<FComponentReference> AffectedByWindSources; // 0x518
	bool CheckForWindOccluders; // 0x528
	float MaxWindOccluderDistance; // 0x52c
	FVDCollisionSettings WindOccluderTraceSettings; // 0x530
	FMulticastInlineDelegate OnSimulationDataCreated; // 0x570
	FMulticastInlineDelegate OnSimulationSync; // 0x580
	char ShowParticles : 1; // 0x590
	float GravityScale; // 0x594
	float MinConstraintDistance; // 0x598
	bool SimulateOnlyWhenRendered; // 0x59c
	float SimulationToggleThreshold; // 0x5a0
	char EnableParticleToParticleCollisions : 1; // 0x5a4
	char ConsiderInnerCollisions : 1; // 0x5a4
	char SkipRelativeVelocityCheckDuringRigidBodyCollisions : 1; // 0x5a4
	char bNotifyOnVDCollision : 1; // 0x5a5
	FMulticastInlineDelegate OnVDCollisionEvent; // 0x5a8
	TMap<UVDSimulatedParticle*, FVDCollision> PendingCollisionNotifications; // 0x5b8
	TArray<UVDParticleSpringConstraint*> ConstraintsToOtherParticles; // 0x628
	char bUseLocationCache : 1; // 0x660
	char bApplyCachedStartLocationBeforeAttachToRigids : 1; // 0x660
	TArray<FVDCachedParticleStartLocation> CachedStartLocations; // 0x668
};

struct UTwistKelvinletBrushOpProps : UBaseKelvinletBrushOpProps {
	float Strength; // 0x70
	float Falloff; // 0x74
};

struct UStreamMediaSource : UBaseMediaSource {
	FString StreamUrl; // 0x88
};

struct UChaosGameplayEventDispatcher : UChaosEventListenerComponent {
	TMap<UPrimitiveComponent*, FChaosHandlerSet> CollisionEventRegistrations; // 0x1c8
	TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper> BreakEventRegistrations; // 0x218
};

struct UAnimNotify_PlayMontageNotifyWindow : UAnimNotifyState {
	FName NotifyName; // 0x30
};

struct USlateBrushAsset : UObject {
	FSlateBrush Brush; // 0x28
};

struct UBakedTexture2DImageProperties : UInteractiveToolPropertySet {
	UTexture2D* SourceTexture; // 0x60
	int32_t UVLayer; // 0x68
};

struct UUVProjectionTool : UMultiSelectionTool {
	UUVProjectionToolProperties* BasicProperties; // 0x90
	UUVProjectionAdvancedProperties* AdvancedProperties; // 0x98
	UExistingMeshMaterialProperties* MaterialSettings; // 0xa0
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xa8
	UMaterialInstanceDynamic* CheckerMaterial; // 0xb8
	TArray<UTransformGizmo*> TransformGizmos; // 0xc0
	TArray<UTransformProxy*> TransformProxies; // 0xd0
};

struct UBorder : UContentWidget {
	EHorizontalAlignment HorizontalAlignment; // 0x120
	EVerticalAlignment VerticalAlignment; // 0x121
	char bShowEffectWhenDisabled : 1; // 0x122
	FLinearColor ContentColorAndOpacity; // 0x124
	FDelegate ContentColorAndOpacityDelegate; // 0x134
	FMargin Padding; // 0x144
	FSlateBrush Background; // 0x158
	FDelegate BackgroundDelegate; // 0x1e0
	FLinearColor BrushColor; // 0x1f0
	FDelegate BrushColorDelegate; // 0x200
	FVector2D DesiredSizeScale; // 0x210
	bool bFlipForRightToLeftFlowDirection; // 0x218
	FDelegate OnMouseButtonDownEvent; // 0x21c
	FDelegate OnMouseButtonUpEvent; // 0x22c
	FDelegate OnMouseMoveEvent; // 0x23c
	FDelegate OnMouseDoubleClickEvent; // 0x24c
};

struct UShadowMapTexture2D : UTexture2D {
	EShadowMapFlags ShadowmapFlags; // 0x100
};

struct UGameResourceType_Water : UGameResourceType_Liquid {
	float Salinity; // 0x70
};

struct UEnvQueryTest_InsideWaterBody : UEnvQueryTest {
	bool bIncludeWaves; // 0x1f8
	bool bSimpleWaves; // 0x1f9
	bool bIgnoreExclusionVolumes; // 0x1fa
};

struct UPrisonerConsumableDigestionHandler_ForeignSubstance : UConsumableDigestionHandler {
	UPrisonerBodyEffect_ForeignSubstance* _bodyEffect; // 0x30
	float _substanceAmountPerAbsorbedMass; // 0x38
};

struct UVehicle2WMountSlot : UActorComponent {
	EVehicle2WType _type; // 0xb8
	FName _socketName; // 0xbc
	UAkAudioEvent* _mountAudioEvent; // 0xc8
	int32_t _mountPriority; // 0xd0
	TArray<FMountSlotEntryPoint> _entryPoints; // 0xd8
	UAkAudioEvent* _unmountAudioEvent; // 0xe8
	bool _isReachableFromSky; // 0xf0
	EMotionIntensity _mountingMotionIntensity; // 0xf1
	EMotionIntensity _unmountingMotionIntensity; // 0xf2
	FVector _mounteeCenterOfMassOffset; // 0xf4
	float _minEffectiveMounteeMass; // 0x100
	float _maxEffectiveMounteeMass; // 0x104
	UObject* _mountee; // 0x108
	UObject* _reservee; // 0x110
	bool _canMounteeBeAttackedByMelee; // 0x118
	TArray<UPhysicalMaterial*> _interactionZoneMaterials; // 0x120
	UVehicleWeaponAimingParameters* _vehicleWeaponAimingParameters; // 0x130
	float _mountSpeedThreshold; // 0x138
	float _unmountSpeedThreshold; // 0x13c
	float _unmountInputVelocityThreshold; // 0x140
};

struct UDataTable : UObject {
	UScriptStruct* RowStruct; // 0x28
	char bStripFromClientBuilds : 1; // 0x80
	char bIgnoreExtraFields : 1; // 0x80
	char bIgnoreMissingFields : 1; // 0x80
	FString ImportKeyField; // 0x88
};

struct UParticleModuleLocationPrimitiveCylinder : UParticleModuleLocationPrimitiveBase {
	char RadialVelocity : 1; // 0xb0
	FRawDistributionFloat StartRadius; // 0xb8
	FRawDistributionFloat StartHeight; // 0xe8
	CylinderHeightAxis HeightAxis; // 0x118
};

struct ABP_Survival_Storage_PlaceChestBlueprint_Objectives_C : ABlueprintableItemObjective {
	USceneComponent* DefaultSceneRoot; // 0x368
};

struct ABuilding : AActor {
	TArray<FLadderMarker> _ladderMarkers; // 0x230
	TArray<FWindowMarker> _windowMarkers; // 0x250
	TArray<FWindowMarker> _windowMarkersDynamic; // 0x260
	TArray<FWindowMarkerModifier> _windowMarkerModifiers; // 0x270
	bool _isCleared; // 0x280
	bool _isClaimable; // 0x281
	TMap<FString, ADoor*> _doors; // 0x288
	TArray<UFortificationComponent*> _fortifications; // 0x2d8
};

struct UM1887_Reload_Event_ChamberEmpty_C : UInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t LoadedAmmoCount; // 0xa8
	int32_t MaxAmmoCount; // 0xac
};

struct UParticleModuleSpawnPerUnit : UParticleModuleSpawnBase {
	float UnitScalar; // 0x38
	float MovementTolerance; // 0x3c
	FRawDistributionFloat SpawnPerUnit; // 0x40
	float MaxFrameDistance; // 0x70
	char bIgnoreSpawnRateWhenMoving : 1; // 0x74
	char bIgnoreMovementAlongX : 1; // 0x74
	char bIgnoreMovementAlongY : 1; // 0x74
	char bIgnoreMovementAlongZ : 1; // 0x74
};

struct UGeometryCacheCodecBase : UObject {
	TArray<int32_t> TopologyRanges; // 0x28
};

struct UCompassWidget : UUserWidget {
	UImage* _compassTrack; // 0x268
	UTexture2D* _compassTrackNorthOnly; // 0x270
	UTexture2D* _compassTrackCardinalOnly; // 0x278
	UTexture2D* _compassTrackCardinalAndIntercardinal; // 0x280
	UTexture2D* _compassTrackEverything; // 0x288
	FVector2D _offset; // 0x290
	float _compassTrackWidthMultiplier; // 0x298
};

struct UInputRouter : UObject {
	bool bAutoInvalidateOnHover; // 0x28
	bool bAutoInvalidateOnCapture; // 0x29
	UInputBehaviorSet* ActiveInputBehaviors; // 0x38
};

struct UAISense_Damage : UAISense {
	TArray<FAIDamageEvent> RegisteredEvents; // 0x80
};

struct UMeshSimplificationSettings : UDeveloperSettings {
	FName MeshReductionModuleName; // 0x38
};

struct UPrisonerBodySymptomUIData : UPrisonerBodyConditionOrSymptomUIData {
	TArray<UPrisonerBodySymptomCauseUIData*> _causes; // 0x90
};

struct UBP_LoadMagazine_4Bullets_LR_C : UItemActionSequenceLoadMagazine {
	FName StartSectionOneLoadedBullet; // 0x90
	FName StartSectionTwoOrEvenNumberOfLoadedBullets; // 0x98
	FName StartSectionThreeOrOddNumberOfLoadedBullets; // 0xa0
	FName EndSectionEmpty; // 0xa8
	FName EndSectionOneLoadedBullet; // 0xb0
	FName EndSectionTwoLoadedBullets; // 0xb8
	FName EndSectionThreeOrOddNumberOfLoadedBullets; // 0xc0
	FName EndSectionFourOrEvenNumberOfLoadedBullets; // 0xc8
};

struct UParticleModuleBeamSource : UParticleModuleBeamBase {
	Beam2SourceTargetMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	char bSourceAbsolute : 1; // 0x3c
	FRawDistributionVector Source; // 0x40
	char bLockSource : 1; // 0x88
	Beam2SourceTargetTangentMethod SourceTangentMethod; // 0x8c
	FRawDistributionVector SourceTangent; // 0x90
	char bLockSourceTangent : 1; // 0xd8
	FRawDistributionFloat SourceStrength; // 0xe0
	char bLockSourceStength : 1; // 0x110
};

struct UNavMovementComponent : UMovementComponent {
	FNavAgentProperties NavAgentProps; // 0xf0
	float FixedPathBrakingDistance; // 0x120
	char bUpdateNavAgentWithOwnersCollision : 1; // 0x124
	char bUseAccelerationForPaths : 1; // 0x124
	char bUseFixedBrakingDistanceForPaths : 1; // 0x124
	FMovementProperties MovementState; // 0x125
	UObject* PathFollowingComp; // 0x128
};

struct UARTrackedImage : UARTrackedGeometry {
	UARCandidateImage* DetectedImage; // 0xf8
	FVector2D EstimatedSize; // 0x100
};

struct UClothingAssetCommon : UClothingAssetBase {
	UPhysicsAsset* PhysicsAsset; // 0x48
	TMap<FName, UClothConfigBase*> ClothConfigs; // 0x50
	UClothConfigBase* ClothSharedSimConfig; // 0xa0
	UClothConfigBase* ClothSimConfig; // 0xa8
	UClothConfigBase* ChaosClothSimConfig; // 0xb0
	TArray<UClothLODDataCommon_Legacy*> ClothLODData; // 0xb8
	TArray<FClothLODDataCommon> LODData; // 0xc8
	TArray<int32_t> LodMap; // 0xd8
	TArray<FName> UsedBoneNames; // 0xe8
	TArray<int32_t> UsedBoneIndices; // 0xf8
	int32_t ReferenceBoneIndex; // 0x108
	UClothingAssetCustomData* CustomData; // 0x110
	FClothConfig_Legacy ClothConfig; // 0x118
};

struct UDepotItemUserData : UVirtualizedItemUserData {
	FDbIntegerId OwnerUserProfileId; // 0x28
	FString TraderPersistentId; // 0x30
};

struct UPaperSprite : UObject {
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FVector2D BakedSourceUV; // 0x48
	FVector2D BakedSourceDimension; // 0x50
	UTexture2D* BakedSourceTexture; // 0x58
	UMaterialInterface* DefaultMaterial; // 0x60
	UMaterialInterface* AlternateMaterial; // 0x68
	TArray<FPaperSpriteSocket> Sockets; // 0x70
	ESpriteCollisionMode SpriteCollisionDomain; // 0x80
	float PixelsPerUnrealUnit; // 0x84
	UBodySetup* BodySetup; // 0x88
	int32_t AlternateMaterialSplitIndex; // 0x90
	TArray<FVector4> BakedRenderData; // 0x98
};

struct AChoppingObjective : ARequirementObjective {
	TArray<TSoftClassPtr<UObject>> _targetActors; // 0x330
	bool _targetSpecificClothesType; // 0x340
	TArray<EClothesType> _targetClothesTypes; // 0x348
	bool _singleTarget; // 0x358
};

struct UBTDecorator_CheckGameplayTagsOnActor : UBTDecorator {
	FBlackboardKeySelector ActorToCheck; // 0x68
	EGameplayContainerMatchType TagsToMatch; // 0x90
	FGameplayTagContainer GameplayTags; // 0x98
	FString CachedDescription; // 0xb8
};

struct UUI_InspectedItem_C : UInspectedItemWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x290
	UImage* BackgroundImage; // 0x298
	UImage* ComponentOrToolImage; // 0x2a0
};

struct UInAppPurchaseCallbackProxy2 : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UPaperTerrainMaterial : UDataAsset {
	TArray<FPaperTerrainMaterialRule> Rules; // 0x30
	UPaperSprite* InteriorFill; // 0x40
};

struct UNiagaraEventReceiverEmitterAction_SpawnParticles : UNiagaraEventReceiverEmitterAction {
	uint32_t NumParticles; // 0x28
};

struct UMovieSceneParticleTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> ParticleSections; // 0x80
};

struct USharkAnimInstance : UAnimInstance {
	FName _mouthTargetName; // 0x2c8
	float _mouthMorphValueChangePerSecond; // 0x2d0
	FName _teethTargetName; // 0x2d4
	float _teethMorphValueChangePerSecond; // 0x2dc
	FName _eyesTargetName; // 0x2e0
	float _eyesMorphValueChangePerSecond; // 0x2e8
	FVector _velocity; // 0x2ec
	float _angularVelocityYaw; // 0x2f8
	float _angularVelocityPitch; // 0x2fc
	EFishBehavior _behaviorMode; // 0x300
	bool _isAlive; // 0x301
};

struct UMaterialExpressionLinearInterpolate : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Alpha; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstAlpha; // 0x84
};

struct UTextRenderComponent : UPrimitiveComponent {
	FText Text; // 0x448
	UMaterialInterface* TextMaterial; // 0x460
	UFont* Font; // 0x468
	EHorizTextAligment HorizontalAlignment; // 0x470
	EVerticalTextAligment VerticalAlignment; // 0x471
	FColor TextRenderColor; // 0x474
	float XScale; // 0x478
	float YScale; // 0x47c
	float WorldSize; // 0x480
	float InvDefaultSize; // 0x484
	float HorizSpacingAdjust; // 0x488
	float VertSpacingAdjust; // 0x48c
	char bAlwaysRenderAsText : 1; // 0x490
};

struct ALight : AActor {
	ULightComponent* LightComponent; // 0x220
	char bEnabled : 1; // 0x228
};

struct UGizmoRectangleComponent : UGizmoBaseComponent {
	FVector DirectionX; // 0x468
	FVector DirectionY; // 0x474
	float OffsetX; // 0x480
	float OffsetY; // 0x484
	float LengthX; // 0x488
	float LengthY; // 0x48c
	float Thickness; // 0x490
	char SegmentFlags; // 0x494
};

struct UItemStateBase : UObject {
	UObject* ItemClass; // 0x28
	FDbIntegerId ID; // 0x30
	FTransform Transform; // 0x40
	TArray<UItemComponentStateBase*> Components; // 0x70
};

struct UGlobalUIData : UObject {
	UModularTooltip* DefaultModularTooltipClass; // 0x28
	TMap<UModularTooltipElementData*, UModularTooltipElement*> ModularTooltipElementClassMapping; // 0x30
	UMessageBox* MessageBox; // 0x80
	ULogoutMessageBox* LogoutMessageBox; // 0x88
	UUserWidget* MessageBoxButton; // 0x90
	UUserWidget* LabeledSliderWithNumber; // 0x98
	UUserWidget* LabeledCarousel; // 0xa0
	UUserWidget* LabeledDropdown; // 0xa8
};

struct URestorableMeshInstancesManager : UActorComponent {
	float _actorsProcessingDelayOnStreamingLevelLoad; // 0x1c0
	float _processingBudgetPerTick; // 0x1c4
	float _generateMeshInstancesToRestoreUpdateInterval; // 0x330
	float _minDistanceToPlayerPawnToRestoreMeshInstance; // 0x348
};

struct UMaterialExpressionLandscapeGrassOutput : UMaterialExpressionCustomOutput {
	TArray<FGrassInput> GrassTypes; // 0x40
};

struct UDcxVehicleTire : UDataAsset {
	float LateralStiffnessX; // 0x34
	float LateralStiffnessY; // 0x38
	float LongitudinalStiffnessPerUnitGravity; // 0x3c
	float CamberStiffnessPerUnitGravity; // 0x40
	FRuntimeFloatCurve FrictionVsSlipGraph; // 0x48
	TArray<FDcxDrivableSurfaceToTireFrictionPair> DrivableSurfaceToTireFrictionPairs; // 0xd0
};

struct UUI_SquadListing_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UHorizontalBox* ContentBox; // 0x268
	UImage* highlight; // 0x270
	UImage* Image_1; // 0x278
	UImage* Image_2; // 0x280
	UImage* Image_3; // 0x288
	UHorizontalBox* SeparatorBox; // 0x290
	UTextBlock* SquadName; // 0x298
	UTextBlock* squadRank; // 0x2a0
	UTextBlock* SquadScore; // 0x2a8
	FString information; // 0x2b0
	FConZSquadEmblem emblem; // 0x2c0
	FString Name; // 0x2c8
	int32_t Rank; // 0x2d8
	int32_t Score; // 0x2dc
};

struct UCharacterPainSoundsData : UDataAsset {
	UAkAudioEvent* AudioEvent; // 0x30
};

struct UAnimCompress_RemoveEverySecondKey : UAnimCompress {
	int32_t MinKeys; // 0x40
	char bStartAtSecondKey : 1; // 0x44
};

struct UPrisonerActionEatItem : UPrisonerAction {
	UAkAudioEvent* _startEatingAudioEvent; // 0x108
	UAkAudioEvent* _stopEatingAudioEvent; // 0x110
	AFoodItem* _itemClass; // 0x118
};

struct UDepotItemState : UItemState {
	FDbIntegerId OwnerUserProfileId; // 0xf8
	FString TraderPersistentId; // 0x100
};

struct URendererSettings : UDeveloperSettings {
	char bMobileDisableVertexFog : 1; // 0x38
	int32_t MaxMobileCascades; // 0x3c
	EMobileMSAASampleCount MobileMSAASampleCount; // 0x40
	char bMobileAllowDitheredLODTransition : 1; // 0x44
	char bMobileAllowSoftwareOcclusionCulling : 1; // 0x44
	char bMobileVirtualTextures : 1; // 0x44
	char bDiscardUnusedQualityLevels : 1; // 0x44
	char bOcclusionCulling : 1; // 0x44
	float MinScreenRadiusForLights; // 0x48
	float MinScreenRadiusForEarlyZPass; // 0x4c
	float MinScreenRadiusForCSMdepth; // 0x50
	char bPrecomputedVisibilityWarning : 1; // 0x54
	char bTextureStreaming : 1; // 0x54
	char bUseDXT5NormalMaps : 1; // 0x54
	char bVirtualTextures : 1; // 0x54
	char bVirtualTexturedLightmaps : 1; // 0x54
	uint32_t VirtualTextureTileSize; // 0x58
	uint32_t VirtualTextureTileBorderSize; // 0x5c
	uint32_t VirtualTextureFeedbackFactor; // 0x60
	char bVirtualTextureEnableCompressZlib : 1; // 0x64
	char bVirtualTextureEnableCompressCrunch : 1; // 0x64
	char bClearCoatEnableSecondNormal : 1; // 0x64
	int32_t ReflectionCaptureResolution; // 0x68
	char bReflectionCaptureCompression : 1; // 0x6c
	char ReflectionEnvironmentLightmapMixBasedOnRoughness : 1; // 0x6c
	char bForwardShading : 1; // 0x6c
	char bVertexFoggingForOpaque : 1; // 0x6c
	char bAllowStaticLighting : 1; // 0x6c
	char bUseNormalMapsForStaticLighting : 1; // 0x6c
	char bGenerateMeshDistanceFields : 1; // 0x6c
	char bEightBitMeshDistanceFields : 1; // 0x6c
	char bGenerateLandscapeGIData : 1; // 0x6d
	char bCompressMeshDistanceFields : 1; // 0x6d
	float TessellationAdaptivePixelsPerTriangle; // 0x70
	char bSeparateTranslucency : 1; // 0x74
	ETranslucentSortPolicy TranslucentSortPolicy; // 0x78
	FVector TranslucentSortAxis; // 0x7c
	ECustomDepthStencil CustomDepthStencil; // 0x88
	char bCustomDepthTaaJitter : 1; // 0x8c
	EAlphaChannelMode bEnableAlphaChannelInPostProcessing; // 0x90
	char bDefaultFeatureBloom : 1; // 0x94
	char bDefaultFeatureAmbientOcclusion : 1; // 0x94
	char bDefaultFeatureAmbientOcclusionStaticFraction : 1; // 0x94
	char bDefaultFeatureAutoExposure : 1; // 0x94
	EAutoExposureMethodUI DefaultFeatureAutoExposure; // 0x98
	float DefaultFeatureAutoExposureBias; // 0x9c
	char bExtendDefaultLuminanceRangeInAutoExposureSettings : 1; // 0xa0
	char bUsePreExposure : 1; // 0xa0
	char bEnablePreExposureOnlyInTheEditor : 1; // 0xa0
	char bDefaultFeatureMotionBlur : 1; // 0xa0
	char bDefaultFeatureLensFlare : 1; // 0xa0
	char bTemporalUpsampling : 1; // 0xa0
	char bSSGI : 1; // 0xa0
	EAntiAliasingMethod DefaultFeatureAntiAliasing; // 0xa4
	ELightUnits DefaultLightUnits; // 0xa5
	EDefaultBackBufferPixelFormat DefaultBackBufferPixelFormat; // 0xa6
	char bRenderUnbuiltPreviewShadowsInGame : 1; // 0xa8
	char bStencilForLODDither : 1; // 0xa8
	EEarlyZPass EarlyZPass; // 0xac
	char bEarlyZPassOnlyMaterialMasking : 1; // 0xb0
	char bDBuffer : 1; // 0xb0
	EClearSceneOptions ClearSceneMethod; // 0xb4
	char bBasePassOutputsVelocity : 1; // 0xb8
	char bVertexDeformationOutputsVelocity : 1; // 0xb8
	char bSelectiveBasePassOutputs : 1; // 0xb8
	char bDefaultParticleCutouts : 1; // 0xb8
	int32_t GPUSimulationTextureSizeX; // 0xbc
	int32_t GPUSimulationTextureSizeY; // 0xc0
	char bGlobalClipPlane : 1; // 0xc4
	EGBufferFormat GBufferFormat; // 0xc8
	char bUseGPUMorphTargets : 1; // 0xcc
	char bNvidiaAftermathEnabled : 1; // 0xcc
	char bMultiView : 1; // 0xcc
	char bMobilePostProcessing : 1; // 0xcc
	char bMobileMultiView : 1; // 0xcc
	char bMobileUseHWsRGBEncoding : 1; // 0xcc
	char bRoundRobinOcclusion : 1; // 0xcc
	char bODSCapture : 1; // 0xcc
	char bMeshStreaming : 1; // 0xcd
	float WireframeCullThreshold; // 0xd0
	char bEnableRayTracing : 1; // 0xd4
	char bEnableRayTracingTextureLOD : 1; // 0xd4
	char bSupportStationarySkylight : 1; // 0xd4
	char bSupportLowQualityLightmaps : 1; // 0xd4
	char bSupportPointLightWholeSceneShadows : 1; // 0xd4
	char bSupportAtmosphericFog : 1; // 0xd4
	char bSupportSkyAtmosphere : 1; // 0xd4
	char bSupportSkyAtmosphereAffectsHeightFog : 1; // 0xd4
	char bSupportSkinCacheShaders : 1; // 0xd5
	ESkinCacheDefaultBehavior DefaultSkinCacheBehavior; // 0xd8
	float SkinCacheSceneMemoryLimitInMB; // 0xdc
	char bMobileEnableStaticAndCSMShadowReceivers : 1; // 0xe0
	char bMobileEnableMovableLightCSMShaderCulling : 1; // 0xe0
	char bMobileAllowDistanceFieldShadows : 1; // 0xe0
	char bMobileAllowMovableDirectionalLights : 1; // 0xe0
	uint32_t MobileNumDynamicPointLights; // 0xe4
	char bMobileDynamicPointLightsUseStaticBranch : 1; // 0xe8
	char bMobileAllowMovableSpotlights : 1; // 0xe8
	char bMobileAllowMovableSpotlightShadows : 1; // 0xe8
	char bSupport16BitBoneIndex : 1; // 0xe8
	char bGPUSkinLimit2BoneInfluences : 1; // 0xe8
	char bSupportDepthOnlyIndexBuffers : 1; // 0xe8
	char bSupportReversedIndexBuffers : 1; // 0xe8
	char bLPV : 1; // 0xe8
	char bMobileAmbientOcclusion : 1; // 0xe9
	char bUseUnlimitedBoneInfluences : 1; // 0xe9
	int32_t UnlimitedBonInfluencesThreshold; // 0xec
	EMobilePlanarReflectionMode MobilePlanarReflectionMode; // 0xf0
	FPerPlatformBool bStreamSkeletalMeshLODs; // 0xf1
	FPerPlatformBool bDiscardSkeletalMeshOptionalLODs; // 0xf2
	FSoftObjectPath VisualizeCalibrationColorMaterialPath; // 0xf8
	FSoftObjectPath VisualizeCalibrationCustomMaterialPath; // 0x110
	FSoftObjectPath VisualizeCalibrationGrayscaleMaterialPath; // 0x128
};

struct UAISense_Prediction : UAISense {
	TArray<FAIPredictionEvent> RegisteredEvents; // 0x80
};

struct UThrowingQuickAccessItemWidget : UDesignableUserWidget {
	char MaxWidth; // 0x278
	char MaxHeight; // 0x279
	UImage* _imageWidget; // 0x280
	TWeakObjectPtr<AItem> _item; // 0x288
	float DefaultWidth; // 0x290
	float DefaultHeight; // 0x294
	FVector2D DefaultPosition; // 0x298
	UImage* _additionalIcon; // 0x2a8
	UTextBlock* _additionalText; // 0x2b0
};

struct ADatasmithSceneActor : AActor {
	UDatasmithScene* Scene; // 0x220
	TMap<FName, TSoftObjectPtr<AActor>> RelatedActors; // 0x228
};

struct ABP_Survival_Tutorial_CraftWoodenSpearObjective_C : ACraftingObjective {
	USceneComponent* DefaultSceneRoot; // 0x348
};

struct UAnimNotifyState_TimedParticleEffect : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct UUI_VicinityItemContainer3_C : UVicinityContainer3 {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
};

struct UPawnMovementComponent : UNavMovementComponent {
	APawn* PawnOwner; // 0x130
};

struct ALODActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x220
	TMap<UMaterialInterface*, UInstancedStaticMeshComponent*> ImpostersStaticMeshComponents; // 0x228
	UHLODProxy* Proxy; // 0x278
	FName Key; // 0x280
	float LODDrawDistance; // 0x288
	int32_t LODLevel; // 0x28c
	TArray<AActor*> SubActors; // 0x290
	char CachedNumHLODLevels; // 0x2a0
};

struct UEnvQueryTest_GameplayTags : UEnvQueryTest {
	FGameplayTagQuery TagQueryToMatch; // 0x1f8
	bool bUpdatedToUseQuery; // 0x240
	EGameplayContainerMatchType TagsToMatch; // 0x241
	FGameplayTagContainer GameplayTags; // 0x248
};

struct UMaterialExpressionSetMaterialAttributes : UMaterialExpression {
	TArray<FExpressionInput> Inputs; // 0x40
	TArray<FGuid> AttributeSetTypes; // 0x50
};

struct UAISense_Sight : UAISense {
	int32_t MaxTracesPerTick; // 0x148
	int32_t MinQueriesPerTimeSliceCheck; // 0x14c
	double MaxTimeSlicePerTick; // 0x150
	float HighImportanceQueryDistanceThreshold; // 0x158
	float MaxQueryImportance; // 0x160
	float SightLimitQueryImportance; // 0x164
};

struct UBodySetup : UBodySetupCore {
	FKAggregateGeom AggGeom; // 0x48
	char bAlwaysFullAnimWeight : 1; // 0xa0
	char bConsiderForBounds : 1; // 0xa0
	char bMeshCollideAll : 1; // 0xa0
	char bDoubleSidedGeometry : 1; // 0xa0
	char bGenerateNonMirroredCollision : 1; // 0xa0
	char bSharedCookedData : 1; // 0xa0
	char bGenerateMirroredCollision : 1; // 0xa0
	char bSupportUVsAndFaceRemap : 1; // 0xa0
	UPhysicalMaterial* PhysMaterial; // 0xa8
	FWalkableSlopeOverride WalkableSlopeOverride; // 0xb0
	FBodyInstance DefaultInstance; // 0x128
	FVector BuildScale3D; // 0x288
};

struct UInterpTrackDirector : UInterpTrack {
	TArray<FDirectorTrackCut> CutTrack; // 0x70
	char bSimulateCameraCutsOnClients : 1; // 0x80
};

struct UMirrorToolProperties : UInteractiveToolPropertySet {
	EMirrorOperationMode OperationMode; // 0x60
	bool bCropAlongMirrorPlaneFirst; // 0x61
	bool bWeldVerticesOnMirrorPlane; // 0x62
	bool bAllowBowtieVertexCreation; // 0x63
	bool bSnapToWorldGrid; // 0x64
	EMirrorCtrlClickBehavior CtrlClickBehavior; // 0x65
	bool bButtonsOnlyChangeOrientation; // 0x66
	bool bShowPreview; // 0x67
	EMirrorSaveMode SaveMode; // 0x68
};

struct ADecalActor : AActor {
	UDecalComponent* Decal; // 0x220
};

struct UInterpTrackAkAudioEvent : UInterpTrackVectorBase {
	TArray<FAkAudioEventTrackKey> Events; // 0x90
	char bContinueEventOnMatineeEnd : 1; // 0xa0
};

struct UDeathmatchParticipantStats : UGameEventParticipantStats {
	float LongestHeadshot; // 0x48
	int32_t MeleeKills; // 0x4c
	float LongestLife; // 0x50
};

struct UABP_Prisoner_FirstPersonAimRotation_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose; // 0x2f8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0x410
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_9; // 0x430
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x538
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_8; // 0x558
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x660
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_7; // 0x700
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_6; // 0x808
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x910
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x930
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x950
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0xaa8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0xad0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_5; // 0xaf8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_4; // 0xc00
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0xd08
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0xe10
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0xf18
	float FirstPersonAimPitch; // 0x1020
	float FirstPersonAimYawDelta; // 0x1024
	bool ShouldApplyArmsPitchCorrection; // 0x1028
	EPrisonerStance stance; // 0x1029
};

struct UUI_Metabolism_CurrentStat_Light_C : UMetabolismCurrentStatLight {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b8
};

struct ABP_WeaponBullet_12Gauge_Flare_C : AProjectileFlare {
	FPointerToUberGraphFrame UberGraphFrame; // 0x478
};

struct AShelterItem : AItem {
	bool _canBeAddedToInventory; // 0x7c0
};

struct ALevelStreamingVolume : AVolume {
	TArray<FName> StreamingLevelNames; // 0x258
	char bEditorPreVisOnly : 1; // 0x268
	char bDisabled : 1; // 0x268
	EStreamingVolumeUsage StreamingUsage; // 0x26c
};

struct UTimeSynchronizableMediaSource : UBaseMediaSource {
	bool bUseTimeSynchronization; // 0x88
	int32_t FrameDelay; // 0x8c
	double TimeDelay; // 0x90
};

struct UMovieSceneAkAudioRTPCSection : UMovieSceneSection {
	FString Name; // 0xe8
	FRichCurve FloatCurve; // 0xf8
	FMovieSceneFloatChannelSerializationHelper FloatChannelSerializationHelper; // 0x178
};

struct UBrushRemeshProperties : URemeshProperties {
	bool bEnableRemeshing; // 0x70
	int32_t TriangleSize; // 0x74
	int32_t PreserveDetail; // 0x78
};

struct UParticleModuleEventReceiverKillParticles : UParticleModuleEventReceiverBase {
	char bStopSpawning : 1; // 0x40
};

struct UBCU_Body_Monitor_C : UMonitoredWindowsContent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
	UVerticalBox* BodyMonitorMainVerticalBox; // 0x300
	UMinimizableWidget_C* MinimizableWidgetBodyMonitor; // 0x308
	UMinimizableWidget_C* MinimizableWidgetLevelAttributes; // 0x310
	UMinimizableWidget_C* MinimizableWidgetSickness; // 0x318
	FLinearColor _color; // 0x320
	FText _defaultTitle; // 0x330
	FTimerHandle _updateNutritionsTimer; // 0x348
	FMulticastInlineDelegate BCUBodyMonitorSizeChangedEventDispatcher; // 0x350
	bool _isAlarmOn; // 0x360
};

struct ULightPropagationVolumeBlendable : UObject {
	FLightPropagationVolumeSettings Settings; // 0x30
	float BlendWeight; // 0x70
};

struct UAkComponent : USceneComponent {
	bool bUseSpatialAudio; // 0x1f8
	UAkAuxBus* EarlyReflectionAuxBus; // 0x200
	FString EarlyReflectionAuxBusName; // 0x208
	int32_t EarlyReflectionOrder; // 0x218
	float EarlyReflectionBusSendGain; // 0x21c
	float EarlyReflectionMaxPathLength; // 0x220
	ECollisionChannel OcclusionCollisionChannel; // 0x224
	char EnableSpotReflectors : 1; // 0x22c
	float roomReverbAuxBusGain; // 0x230
	int32_t diffractionMaxEdges; // 0x234
	int32_t diffractionMaxPaths; // 0x238
	float diffractionMaxPathLength; // 0x23c
	char DrawFirstOrderReflections : 1; // 0x240
	char DrawSecondOrderReflections : 1; // 0x240
	char DrawHigherOrderReflections : 1; // 0x240
	char DrawGeometricDiffraction : 1; // 0x240
	char DrawSoundPropagation : 1; // 0x240
	bool StopWhenOwnerDestroyed; // 0x244
	float AttenuationScalingFactor; // 0x248
	float OcclusionRefreshInterval; // 0x24c
	UAkAudioEvent* AkAudioEvent; // 0x250
	FString EventName; // 0x258
};

struct UMaterialExpressionQualitySwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x4]; // 0x54
};

struct USubmixEffectDynamicsProcessorPreset : USoundEffectSubmixPreset {
	FSubmixEffectDynamicsProcessorSettings Settings; // 0xe0
};

struct UAdminCommand_SpawnPrimaryActorAsset : UAdminCommand {
	FPrimaryAssetType _primaryAssetType; // 0x80
	TSet<FPrimaryAssetId> _primaryAssetsToExclude; // 0x88
	int32_t _countArgumentMinValue; // 0xd8
	int32_t _countArgumentMaxValue; // 0xdc
	FVector _spawnOffset; // 0xe0
};

struct ABP_WeaponBullet_WoodenArrowFeathers_C : AProjectileArrow {
	FPointerToUberGraphFrame UberGraphFrame; // 0x458
	UParticleSystemComponent* ParticleSystem; // 0x460
};

struct UServerBrowser : UBaseMenu {
	int32_t _currentIndex; // 0x260
	int32_t _widgetCount; // 0x264
	TArray<FServerInfo> _serverInfos; // 0x268
	TArray<FServerInfo> _unfilteredServerInfos; // 0x278
	TArray<FServerInfo> _serverInfosToPing; // 0x288
	TArray<FServerInfo> _serverInfosWithPing; // 0x298
	TArray<FServerInfo> _serverInfosLastPlayed; // 0x2a8
	TArray<FServerInfo> _serverInfosFavorites; // 0x2b8
	bool _requestingServerList; // 0x2c8
	float _desiredMaxPing; // 0x2cc
	FString _desiredHostName; // 0x2d0
	int32_t _desiredMinPlayers; // 0x2e0
	int32_t _desiredMaxPlayers; // 0x2e4
	bool _showFullServers; // 0x2e8
	bool _showOnlyPasswordProtectedServers; // 0x2e9
	EServerBrowserTab _currentlyOpenTab; // 0x2ea
	UVerticalBox* _serverList; // 0x2f0
	UTrashMenuButton* _connectButton; // 0x2f8
};

struct UUserDefinedImageCaptureProtocol : UUserDefinedCaptureProtocol {
	EDesiredImageFormat Format; // 0xd8
	bool bEnableCompression; // 0xd9
	int32_t CompressionQuality; // 0xdc
};

struct UBP_M1_OpenInsertClipInsertBullet_C : UInsertMagazineInsertCartridge {
	int32_t LoadedAmmoCount; // 0xa0
};

struct UUI_BasicTextWidget_C : UBasicTextWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x268
	UMultiLineEditableText* _text; // 0x270
	FString _currentInputText; // 0x278
};

struct UMaterialParameterCollection : UObject {
	FGuid StateId; // 0x28
	TArray<FCollectionScalarParameter> ScalarParameters; // 0x38
	TArray<FCollectionVectorParameter> VectorParameters; // 0x48
};

struct UBTDecorator_TimeLimit : UBTDecorator {
	float TimeLimit; // 0x68
};

struct UMagicLeapHeadTrackingNotificationsComponent : UVRNotificationsComponent {
	FMulticastInlineDelegate OnHeadTrackingLost; // 0x140
	FMulticastInlineDelegate OnHeadTrackingRecovered; // 0x150
	FMulticastInlineDelegate OnHeadTrackingRecoveryFailed; // 0x160
	FMulticastInlineDelegate OnHeadTrackingNewSessionStarted; // 0x170
};

struct UPrisonerActionDrinkFromReplenishableResourceDescription : UCharacterActionDescription {
	UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource; // 0x78
};

struct UGroomBindingAsset : UObject {
	UGroomAsset* Groom; // 0x28
	USkeletalMesh* SourceSkeletalMesh; // 0x30
	USkeletalMesh* TargetSkeletalMesh; // 0x38
	int32_t NumInterpolationPoints; // 0x40
	int32_t MatchingSection; // 0x44
	TArray<FGoomBindingGroupInfo> GroupInfos; // 0x48
};

struct UBP_LoadMagazine_3Bullets_Center_C : UItemActionSequenceLoadMagazine {
	FName StartSectionOneLoadedBullet; // 0x90
	FName StartSectionTwoOrMoreLoadedBullets; // 0x98
	FName EndSectionEmpty; // 0xa0
	FName EndSectionOneLoadedBullet; // 0xa8
	FName EndSectionTwoLoadedBullets; // 0xb0
};

struct UNetReplicationGraphConnection : UReplicationConnectionDriver {
	UNetConnection* NetConnection; // 0x28
	AReplicationGraphDebugActor* DebugActor; // 0x170
	TArray<FLastLocationGatherInfo> LastGatherLocations; // 0x188
	TArray<UReplicationGraphNode*> ConnectionGraphNodes; // 0x1a0
	UReplicationGraphNode_TearOff_ForConnection* TearOffNode; // 0x1b0
};

struct UCircularMenuWidget : UDesignableUserWidget {
	TArray<FCircularLayerData> _layerData; // 0x278
	float _centerSize; // 0x288
	bool _constrainMouseToWidget; // 0x28c
	bool _unboundOuterRadiusOnFirstInteractionLayer; // 0x28d
	TArray<FCircularSegmentContainer> _segmentsByLayer; // 0x290
	UOverlay* _mainOverlay; // 0x2a0
	UTextBlock* _actionText; // 0x2a8
};

struct UTransformGizmo : UInteractiveGizmo {
	UTransformProxy* ActiveTarget; // 0x40
	bool bSnapToWorldGrid; // 0x48
	bool bGridSizeIsExplicit; // 0x49
	FVector ExplicitGridSize; // 0x4c
	bool bRotationGridSizeIsExplicit; // 0x58
	FRotator ExplicitRotationGridSize; // 0x5c
	bool bSnapToWorldRotGrid; // 0x68
	bool bUseContextCoordinateSystem; // 0x69
	EToolContextCoordinateSystem CurrentCoordinateSystem; // 0x6c
	TArray<UPrimitiveComponent*> ActiveComponents; // 0x100
	TArray<UPrimitiveComponent*> NonuniformScaleComponents; // 0x110
	TArray<UInteractiveGizmo*> ActiveGizmos; // 0x120
	UGizmoConstantFrameAxisSource* CameraAxisSource; // 0x140
	UGizmoComponentAxisSource* AxisXSource; // 0x148
	UGizmoComponentAxisSource* AxisYSource; // 0x150
	UGizmoComponentAxisSource* AxisZSource; // 0x158
	UGizmoComponentAxisSource* UnitAxisXSource; // 0x160
	UGizmoComponentAxisSource* UnitAxisYSource; // 0x168
	UGizmoComponentAxisSource* UnitAxisZSource; // 0x170
	UGizmoTransformChangeStateTarget* StateTarget; // 0x178
	UGizmoScaledTransformSource* ScaledTransformSource; // 0x180
};

struct UBTTask_SetTagCooldown : UBTTaskNode {
	FGameplayTag CooldownTag; // 0x70
	bool bAddToExistingDuration; // 0x78
	float CooldownDuration; // 0x7c
};

struct ARabbit2AIController : ASimpleAnimalAIController {
	float MoveSegment; // 0x3c0
	float MovementPauseMinTime; // 0x3c4
	float MovementPauseMaxTime; // 0x3c8
	float AngleOffset; // 0x3cc
};

struct ACorpse : AActor {
	USkeletalMeshComponent* RagdollMeshComponent; // 0x238
	UChoppingRecipeDataAsset* ChoppingRecipeDataAsset; // 0x240
	AItem* ItemRepresentation; // 0x248
	bool IterativeChopping; // 0x250
	FName MainBoneName; // 0x254
	FCorpseSkeletalMeshRepData RagdollMeshData; // 0x260
	TArray<FCorpseStaticMeshRepData> StaticMeshData; // 0x2d0
	TArray<FCorpseSkeletalMeshRepData> SkeletalMeshData; // 0x2e0
	FCorpsePoseData PoseData; // 0x2f0
	TArray<AItem*> inventory; // 0x370
	float SearchTime; // 0x380
	float PhysicsPauseDistance; // 0x384
	UAkAudioEvent* StartSearchAudioEvent; // 0x388
	UAkAudioEvent* StopSearchAudioEvent; // 0x390
	float AutoDestructTime; // 0x398
	float AutoDestructRadius; // 0x39c
	TArray<AActor*> Attachements; // 0x3a0
	TArray<FName> AttachementSockets; // 0x3b0
	AConZCharacter* _sourceCharacter; // 0x3d8
	bool _atRest; // 0x3e8
};

struct UDecalComponent : USceneComponent {
	UMaterialInterface* DecalMaterial; // 0x1f8
	int32_t sortOrder; // 0x200
	float FadeScreenSize; // 0x204
	float FadeStartDelay; // 0x208
	float FadeDuration; // 0x20c
	float FadeInDuration; // 0x210
	float FadeInStartDelay; // 0x214
	char bDestroyOwnerAfterFade : 1; // 0x218
	FVector DecalSize; // 0x21c
};

struct UInterpTrackToggle : UInterpTrack {
	TArray<FToggleTrackKey> ToggleTrack; // 0x70
	char bActivateSystemEachUpdate : 1; // 0x80
	char bActivateWithJustAttachedFlag : 1; // 0x80
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UComplexAnimal2AnimInstance : UAnimal2AnimInstance {
	EAnimalAction CurrentAction; // 0x2f0
	float HeadLookRight; // 0x2f4
	float HeadLookUp; // 0x2f8
	float HeadMovementLerpSpeed; // 0x2fc
	float AngularVelocity; // 0x300
	FName faceMorphTargetName; // 0x304
	float InterpolationSpeed; // 0x30c
	float BlendInTime; // 0x310
	float BlendOutTime; // 0x314
	float _faceMorphValueChangePerSeconds; // 0x354
};

struct UVOIPTalker : UActorComponent {
	FVoiceSettings Settings; // 0xb0
};

struct UBlackboardKeyType_Object : UBlackboardKeyType {
	UObject* BaseClass; // 0x30
};

struct ADropZoneEquipmentTable : AActor {
	TArray<AItem*> _trackedItems; // 0x220
};

struct AGameNetworkManager : AInfo {
	float BadPacketLossThreshold; // 0x220
	float SeverePacketLossThreshold; // 0x224
	int32_t BadPingThreshold; // 0x228
	int32_t SeverePingThreshold; // 0x22c
	int32_t AdjustedNetSpeed; // 0x230
	float LastNetSpeedUpdateTime; // 0x234
	int32_t TotalNetBandwidth; // 0x238
	int32_t MinDynamicBandwidth; // 0x23c
	int32_t MaxDynamicBandwidth; // 0x240
	char bIsStandbyCheckingEnabled : 1; // 0x244
	char bHasStandbyCheatTriggered : 1; // 0x244
	float StandbyRxCheatTime; // 0x248
	float StandbyTxCheatTime; // 0x24c
	float PercentMissingForRxStandby; // 0x250
	float PercentMissingForTxStandby; // 0x254
	float PercentForBadPing; // 0x258
	float JoinInProgressStandbyWaitTime; // 0x25c
	float MoveRepSize; // 0x260
	float MAXPOSITIONERRORSQUARED; // 0x264
	float MAXNEARZEROVELOCITYSQUARED; // 0x268
	float CLIENTADJUSTUPDATECOST; // 0x26c
	float MAXCLIENTUPDATEINTERVAL; // 0x270
	float MaxClientForcedUpdateDuration; // 0x274
	float ServerForcedUpdateHitchThreshold; // 0x278
	float ServerForcedUpdateHitchCooldown; // 0x27c
	float MaxMoveDeltaTime; // 0x280
	float MaxClientSmoothingDeltaTime; // 0x284
	float ClientNetSendMoveDeltaTime; // 0x288
	float ClientNetSendMoveDeltaTimeThrottled; // 0x28c
	float ClientNetSendMoveDeltaTimeStationary; // 0x290
	int32_t ClientNetSendMoveThrottleAtNetSpeed; // 0x294
	int32_t ClientNetSendMoveThrottleOverPlayerCount; // 0x298
	bool ClientAuthorativePosition; // 0x29c
	float ClientErrorUpdateRateLimit; // 0x2a0
	float ClientNetCamUpdateDeltaTime; // 0x2a4
	float ClientNetCamUpdatePositionLimit; // 0x2a8
	bool bMovementTimeDiscrepancyDetection; // 0x2ac
	bool bMovementTimeDiscrepancyResolution; // 0x2ad
	float MovementTimeDiscrepancyMaxTimeMargin; // 0x2b0
	float MovementTimeDiscrepancyMinTimeMargin; // 0x2b4
	float MovementTimeDiscrepancyResolutionRate; // 0x2b8
	float MovementTimeDiscrepancyDriftAllowance; // 0x2bc
	bool bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x2c0
	bool bUseDistanceBasedRelevancy; // 0x2c1
};

struct UMaterialExpressionAntialiasedTextureMask : UMaterialExpressionTextureSampleParameter2D {
	float Threshold; // 0x80
	ETextureColorChannel Channel; // 0x84
};

struct UMaterialExpressionArccosine : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMetabolismHealthPanel : UUserWidget {
	UMetabolism_BCU_ICU_Monitor* _icuMonitor; // 0x260
	UMetabolismBodyOverviewPanel* _bodyOverviewPanel; // 0x268
	UMetabolismTreatmentPanel* _treatmentPanel; // 0x270
	UButton* _resetHealthPanelToSelf; // 0x278
	UPanelWidget* _healthPanelNormal; // 0x280
	UPanelWidget* _healthPanelOutOfRange; // 0x288
	UWidgetSwitcher* _healthPanelSwitcher; // 0x290
	UTextBlock* _patientName; // 0x298
};

struct ABP_Survival_Blueprints_Mission_C : AMission {
	USceneComponent* DefaultSceneRoot; // 0x468
};

struct USoundNodeConcatenator : USoundNode {
	TArray<float> InputVolume; // 0x48
};

struct UPrisonerThirdPersonAerialSubviewComponent : USceneComponent {
	float FieldOfView; // 0x200
	bool UseFieldOfViewForLOD; // 0x204
	bool ConstrainAspectRatio; // 0x205
	float AspectRatio; // 0x208
	float MinViewYaw; // 0x20c
	float MaxViewYaw; // 0x210
	float MinViewPitch; // 0x214
	float MaxViewPitch; // 0x218
	float PostProcessBlendWeight; // 0x21c
	FPostProcessSettings PostProcessSettings; // 0x220
	float blendInDuration; // 0x770
	float blendOutDuration; // 0x774
	float BaseOrbitDistance; // 0x778
	float SpeedOrbitDistanceIncreaseFactor; // 0x77c
};

struct UInterpTrackEvent : UInterpTrack {
	TArray<FEventTrackKey> EventTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
	char bUseCustomEventName : 1; // 0x80
};

struct USubmixEffectMultibandCompressorPreset : USoundEffectSubmixPreset {
	FSubmixEffectMultibandCompressorSettings Settings; // 0xb0
};

struct APaperTerrainActor : AActor {
	USceneComponent* DummyRoot; // 0x220
	UPaperTerrainSplineComponent* SplineComponent; // 0x228
	UPaperTerrainComponent* RenderComponent; // 0x230
};

struct ULightmappedSurfaceCollection : UObject {
	UModel* SourceModel; // 0x28
	TArray<int32_t> Surfaces; // 0x30
};

struct UMaterial : UMaterialInterface {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UPhysicalMaterialMask* PhysMaterialMask; // 0x90
	UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0x98
	FScalarMaterialInput Metallic; // 0xd8
	FScalarMaterialInput Specular; // 0xec
	FScalarMaterialInput Anisotropy; // 0x100
	FVectorMaterialInput Normal; // 0x114
	FVectorMaterialInput Tangent; // 0x128
	FColorMaterialInput EmissiveColor; // 0x13c
	EMaterialDomain MaterialDomain; // 0x150
	EBlendMode BlendMode; // 0x151
	EDecalBlendMode DecalBlendMode; // 0x152
	EMaterialDecalResponse MaterialDecalResponse; // 0x153
	EMaterialShadingModel ShadingModel; // 0x154
	char bCastDynamicShadowAsMasked : 1; // 0x155
	FMaterialShadingModelField ShadingModels; // 0x156
	float OpacityMaskClipValue; // 0x158
	FVectorMaterialInput WorldPositionOffset; // 0x15c
	FScalarMaterialInput Refraction; // 0x170
	FMaterialAttributesInput MaterialAttributes; // 0x184
	FScalarMaterialInput PixelDepthOffset; // 0x19c
	FShadingModelMaterialInput ShadingModelFromMaterialExpression; // 0x1b0
	char bEnableSeparateTranslucency : 1; // 0x1c4
	char bEnableResponsiveAA : 1; // 0x1c4
	char bScreenSpaceReflections : 1; // 0x1c4
	char bContactShadows : 1; // 0x1c4
	char TwoSided : 1; // 0x1c4
	char DitheredLODTransition : 1; // 0x1c4
	char DitherOpacityMask : 1; // 0x1c4
	char bAllowNegativeEmissiveColor : 1; // 0x1c4
	ETranslucencyLightingMode TranslucencyLightingMode; // 0x1c5
	char bEnableMobileSeparateTranslucency : 1; // 0x1c6
	int32_t NumCustomizedUVs; // 0x1c8
	float TranslucencyDirectionalLightingIntensity; // 0x1cc
	float TranslucentShadowDensityScale; // 0x1d0
	float TranslucentSelfShadowDensityScale; // 0x1d4
	float TranslucentSelfShadowSecondDensityScale; // 0x1d8
	float TranslucentSelfShadowSecondOpacity; // 0x1dc
	float TranslucentBackscatteringExponent; // 0x1e0
	FLinearColor TranslucentMultipleScatteringExtinction; // 0x1e4
	float TranslucentShadowStartOffset; // 0x1f4
	char bDisableDepthTest : 1; // 0x1f8
	char bWriteOnlyAlpha : 1; // 0x1f8
	char bGenerateSphericalParticleNormals : 1; // 0x1f8
	char bTangentSpaceNormal : 1; // 0x1f8
	char bUseEmissiveForDynamicAreaLighting : 1; // 0x1f8
	char bBlockGI : 1; // 0x1f8
	char bUsedAsSpecialEngineMaterial : 1; // 0x1f8
	char bUsedWithSkeletalMesh : 1; // 0x1f8
	char bUsedWithEditorCompositing : 1; // 0x1f9
	char bUsedWithParticleSprites : 1; // 0x1f9
	char bUsedWithBeamTrails : 1; // 0x1f9
	char bUsedWithMeshParticles : 1; // 0x1f9
	char bUsedWithNiagaraSprites : 1; // 0x1f9
	char bUsedWithNiagaraRibbons : 1; // 0x1f9
	char bUsedWithNiagaraMeshParticles : 1; // 0x1f9
	char bUsedWithGeometryCache : 1; // 0x1f9
	char bUsedWithStaticLighting : 1; // 0x1fa
	char bUsedWithMorphTargets : 1; // 0x1fa
	char bUsedWithSplineMeshes : 1; // 0x1fa
	char bUsedWithInstancedStaticMeshes : 1; // 0x1fa
	char bUsedWithGeometryCollections : 1; // 0x1fa
	char bUsesDistortion : 1; // 0x1fa
	char bUsedWithClothing : 1; // 0x1fa
	char bUsedWithWater : 1; // 0x1fc
	char bUsedWithHairStrands : 1; // 0x1fc
	char bUsedWithLidarPointCloud : 1; // 0x1fc
	char bUsedWithVirtualHeightfieldMesh : 1; // 0x1fc
	char bUsedWithUI : 1; // 0x200
	char bAutomaticallySetUsageInEditor : 1; // 0x200
	char bFullyRough : 1; // 0x200
	char bUseFullPrecision : 1; // 0x200
	char bUseLightmapDirectionality : 1; // 0x200
	char bUseAlphaToCoverage : 1; // 0x200
	char bForwardRenderUsePreintegratedGFForSimpleIBL : 1; // 0x204
	char bUseHQForwardReflections : 1; // 0x208
	char bUsePlanarForwardReflections : 1; // 0x208
	char bNormalCurvatureToRoughness : 1; // 0x208
	EMaterialTessellationMode D3D11TessellationMode; // 0x209
	char bEnableCrackFreeDisplacement : 1; // 0x20a
	char bEnableAdaptiveTessellation : 1; // 0x20a
	char AllowTranslucentCustomDepthWrites : 1; // 0x20a
	char Wireframe : 1; // 0x20a
	EMaterialShadingRate ShadingRate; // 0x20b
	char bCanMaskedBeAssumedOpaque : 1; // 0x20c
	char bIsMasked : 1; // 0x20c
	char bIsPreviewMaterial : 1; // 0x20c
	char bIsFunctionPreviewMaterial : 1; // 0x20c
	char bUseMaterialAttributes : 1; // 0x20c
	char bCastRayTracedShadows : 1; // 0x20c
	char bUseTranslucencyVertexFog : 1; // 0x20c
	char bApplyCloudFogging : 1; // 0x20c
	char bIsSky : 1; // 0x20d
	char bComputeFogPerPixel : 1; // 0x20d
	char bOutputTranslucentVelocity : 1; // 0x20d
	char bAllowDevelopmentShaderCompile : 1; // 0x20d
	char bIsMaterialEditorStatsMaterial : 1; // 0x20d
	EBlendableLocation BlendableLocation; // 0x20e
	char BlendableOutputAlpha : 1; // 0x20f
	char bEnableStencilTest : 1; // 0x20f
	EMaterialStencilCompare StencilCompare; // 0x210
	char StencilRefValue; // 0x211
	ERefractionMode RefractionMode; // 0x212
	int32_t BlendablePriority; // 0x214
	char bIsBlendable : 1; // 0x218
	uint32_t UsageFlagWarnings; // 0x21c
	float RefractionDepthBias; // 0x220
	FGuid StateId; // 0x224
	float MaxDisplacement; // 0x234
	FMaterialCachedExpressionData CachedExpressionData; // 0x268
};

struct UParticleModuleLocationPrimitiveTriangle : UParticleModuleLocationBase {
	FRawDistributionVector StartOffset; // 0x30
	FRawDistributionFloat Height; // 0x78
	FRawDistributionFloat Angle; // 0xa8
	FRawDistributionFloat Thickness; // 0xd8
};

struct UNiagaraDataInterfaceSkeletalMesh : UNiagaraDataInterface {
	ENDISkeletalMesh_SourceMode SourceMode; // 0x38
	AActor* Source; // 0x40
	FNiagaraUserParameterBinding MeshUserParameter; // 0x48
	USkeletalMeshComponent* SourceComponent; // 0x68
	ENDISkeletalMesh_SkinningMode SkinningMode; // 0x70
	TArray<FName> SamplingRegions; // 0x78
	int32_t WholeMeshLOD; // 0x88
	TArray<FName> FilteredBones; // 0x90
	TArray<FName> FilteredSockets; // 0xa0
	FName ExcludeBoneName; // 0xb0
	char bExcludeBone : 1; // 0xb8
	bool bRequireCurrentFrameData; // 0xb9
};

struct UAvfMediaSettings : UObject {
	bool NativeAudioOut; // 0x28
};

struct AMechanoidsManager : AActor {
	ADrone* _droneSpawnClass; // 0x240
	float _droneSpawnDistance; // 0x248
	float _droneSpawnHeight; // 0x24c
	float _droneCheckForNearbyPlayerDistance; // 0x250
	FDroneVisitTimeData _droneInitialVisitTime; // 0x254
	float _droneVisitClusterRadius; // 0x25c
	float _weightPerSightingMode[0x3]; // 0x260
	FDroneVisitTimeData _droneVisitTimeDataPerSightingMode[0x3]; // 0x26c
};

struct UImageSequenceProtocol_EXR : UImageSequenceProtocol {
	bool bCompressed; // 0xd8
	EHDRCaptureGamut CaptureGamut; // 0xd9
};

struct UMovieSceneLevelVisibilityTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UGroomAsset : UObject {
	TArray<FHairGroupInfoWithVisibility> HairGroupsInfo; // 0x30
	TArray<FHairGroupsRendering> HairGroupsRendering; // 0x40
	TArray<FHairGroupsPhysics> HairGroupsPhysics; // 0x50
	TArray<FHairGroupsInterpolation> HairGroupsInterpolation; // 0x60
	TArray<FHairGroupsLOD> HairGroupsLOD; // 0x70
	TArray<FHairGroupsCardsSourceDescription> HairGroupsCards; // 0x80
	TArray<FHairGroupsMeshesSourceDescription> HairGroupsMeshes; // 0x90
	TArray<FHairGroupsMaterial> HairGroupsMaterials; // 0xa0
	bool EnableGlobalInterpolation; // 0xc0
	EGroomInterpolationType HairInterpolationType; // 0xc1
	EHairLODSelectionType LODSelectionType; // 0xc2
	FPerPlatformInt MinLOD; // 0xc4
	FPerPlatformBool DisableBelowMinLodStripping; // 0xc8
	TArray<float> EffectiveLODBias; // 0xd0
	TArray<UAssetUserData*> AssetUserData; // 0xe0
};

struct ACan01_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UUI_MissionResultWidget_C : UMissionResult {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UWidgetAnimation* MissionResultAnimation; // 0x288
	UImage* _resultTitleBackground; // 0x290
	UImage* _spaceFillerImage; // 0x298
};

struct UPrisonerAppearanceDataAsset : UDataAsset {
	TArray<FPrisonerAppearanceData> FemaleCharacterData; // 0x30
	TArray<FPrisonerAppearanceData> MaleCharacterData; // 0x40
	TMap<FGameplayTag, FPrisonerAppearanceMeshSet> MeshSets; // 0x50
	TMap<FGameplayTag, FPrisonerAppearanceMaterialSet> MaterialSets; // 0xa0
	TArray<FPrisonerTattooMaterialSet> FemaleTattoos; // 0xf0
	TArray<FPrisonerTattooMaterialSet> MaleTattoos; // 0x100
};

struct UAnimBlueprint : UBlueprint {
	USkeleton* TargetSkeleton; // 0xa8
	TArray<FAnimGroupInfo> Groups; // 0xb0
	bool bUseMultiThreadedAnimationUpdate; // 0xc0
	bool bWarnAboutBlueprintUsage; // 0xc1
};

struct UUI_Settings_ClientSettingsMenu_C : UClientSettingsMenu {
	UImage* bottomLIne; // 0x3e8
};

struct ADogTagItem : AItem {
	FString _userProfileName; // 0x7c0
};

struct UBTDecorator_TagCooldown : UBTDecorator {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
	bool bActivatesCooldown; // 0x75
};

struct UMaterialExpressionMaterialProxyReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0x40
	FExpressionInput MaterialProxy; // 0x54
};

struct UCraftingDatabase : UDataAsset {
	TArray<UCraftableItem*> CraftableItems; // 0x30
	TArray<FString> AssetPaths; // 0x40
	UCraftingItemTag* CookableTag; // 0x50
	UCraftingItemTag* SmokableTag; // 0x58
	UCraftingItemTag* OpenItemTag; // 0x60
	UCraftingItemTag* LightFireTag; // 0x68
	UCraftingItemTag* ConservedFoodTag; // 0x70
	UItemGroup* IngredientsGroup; // 0x78
	TArray<FString> IngredientsGroupPaths; // 0x80
	TArray<FString> IngredientsExcludePaths; // 0x90
	TMap<UCraftingItemTag*, FItemClassesArray> _itemsByTags; // 0xa0
};

struct AAmbientSound : AActor {
	UAudioComponent* AudioComponent; // 0x220
};

struct UMaterialExpressionArccosineFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UArchVisCharMovementComponent : UCharacterMovementComponent {
	FRotator RotationalAcceleration; // 0xb00
	FRotator RotationalDeceleration; // 0xb0c
	FRotator MaxRotationalVelocity; // 0xb18
	float MinPitch; // 0xb24
	float MaxPitch; // 0xb28
	float WalkingFriction; // 0xb2c
	float WalkingSpeed; // 0xb30
	float WalkingAcceleration; // 0xb34
};

struct UPaperTileLayer : UObject {
	FText LayerName; // 0x28
	int32_t LayerWidth; // 0x40
	int32_t LayerHeight; // 0x44
	char bHiddenInGame : 1; // 0x48
	char bLayerCollides : 1; // 0x48
	char bOverrideCollisionThickness : 1; // 0x48
	char bOverrideCollisionOffset : 1; // 0x48
	float CollisionThicknessOverride; // 0x4c
	float CollisionOffsetOverride; // 0x50
	FLinearColor LayerColor; // 0x54
	int32_t AllocatedWidth; // 0x64
	int32_t AllocatedHeight; // 0x68
	TArray<FPaperTileInfo> AllocatedCells; // 0x70
	UPaperTileSet* TileSet; // 0x80
	TArray<int32_t> AllocatedGrid; // 0x88
};

struct UMovieSceneLiveLinkSubSection : UObject {
	FLiveLinkSubSectionData SubSectionData; // 0x28
	ULiveLinkRole* SubjectRole; // 0x38
};

struct UModularTooltipElementData_Affects : UModularTooltipElementData {
	UModularTooltipElementData* Affect; // 0x40
};

struct UMaterialExpressionTruncate : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionPanner : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	FExpressionInput Speed; // 0x68
	float SpeedX; // 0x7c
	float SpeedY; // 0x80
	uint32_t ConstCoordinate; // 0x84
	bool bFractionalPart; // 0x88
};

struct USafeZoneSlot : UPanelSlot {
	bool bIsTitleSafe; // 0x38
	FMargin SafeAreaScale; // 0x3c
	EHorizontalAlignment HAlign; // 0x4c
	EVerticalAlignment VAlign; // 0x4d
	FMargin Padding; // 0x50
};

struct URemoveOccludedTrianglesToolProperties : UInteractiveToolPropertySet {
	EOcclusionCalculationUIMode OcclusionTestMethod; // 0x60
	EOcclusionTriangleSamplingUIMode TriangleSampling; // 0x61
	double WindingIsoValue; // 0x68
	int32_t AddRandomRays; // 0x70
	int32_t AddTriangleSamples; // 0x74
	bool bOnlySelfOcclude; // 0x78
};

struct UUserWidget : UWidget {
	FLinearColor ColorAndOpacity; // 0x110
	FDelegate ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	FDelegate ForegroundColorDelegate; // 0x158
	FMulticastInlineDelegate OnVisibilityChanged; // 0x168
	FMargin Padding; // 0x190
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x1a0
	UUMGSequenceTickManager* AnimationTickManager; // 0x1b0
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x1b8
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x1c8
	UWidgetTree* WidgetTree; // 0x1d8
	int32_t Priority; // 0x1e0
	char bSupportsKeyboardFocus : 1; // 0x1e4
	char bIsFocusable : 1; // 0x1e4
	char bStopAction : 1; // 0x1e4
	char bHasScriptImplementedTick : 1; // 0x1e4
	char bHasScriptImplementedPaint : 1; // 0x1e4
	EWidgetTickFrequency TickFrequency; // 0x1f0
	UInputComponent* InputComponent; // 0x1f8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x200
};

struct UMetabolism_ICU_GraphWidget_EKG : UMetabolism_ICU_GraphWidget {
	UCurveFloat* TimeStretchCurveCurve; // 0x218
	UCurveFloat* HeartbeatIrregularitiesCurve; // 0x220
};

struct AWeatherController2 : AActor {
	float _maxHeightAboveSeaLevel; // 0x250
	UDirectionalLightComponent* _sun; // 0x258
	float _timeOfDay; // 0x260
	bool _canStartTimeOfDayBeOverridenByConfig; // 0x264
	float _timeOfDaySpeed; // 0x268
	bool _canTimeOfDaySpeedBeOverridenByConfig; // 0x26c
	float _sunIntensity; // 0x270
	float _sunFullEclipseMult; // 0x274
	float _sunAzimuthDegrees; // 0x278
	float _sunriseTime; // 0x27c
	bool _canSunriseTimeBeOverridenByConfig; // 0x280
	float _sunsetTime; // 0x284
	bool _canSunsetTimeBeOverridenByConfig; // 0x288
	float _dawnDuskTresholdAngle; // 0x28c
	UDirectionalLightComponent* _moon; // 0x298
	float _moonRotation; // 0x2a0
	float _moonIntensityMult; // 0x2a4
	FLinearColor _moonLightTint; // 0x2a8
	UMaterialInterface* _moonStarsMaterial; // 0x2b8
	UMaterialInstanceDynamic* _moonStarsMaterialDynamic; // 0x2c0
	UStaticMeshComponent* _starsSphere; // 0x2c8
	float _starsSphereDistance; // 0x2d0
	FRotator _starsSphereRotation; // 0x2d4
	UDirectionalLightComponent* _nightLight; // 0x2e0
	float _nightLightIntensity; // 0x2e8
	FFloatInterval _nightLightIntensityRange; // 0x2ec
	FLinearColor _nightLightColor; // 0x2f4
	USkyLightComponent* _skyAmbientReflEnv; // 0x308
	USkyAtmosphereComponent* _skyAtmosphere; // 0x310
	float _skyAmbientIntensity; // 0x318
	FRuntimeFloatCurve _skyAmbientOcclusionTint; // 0x320
	UVolumetricCloudComponent* _volumetricClouds; // 0x3a8
	UMaterialInterface* _volumetricCloudsMaterialLQ; // 0x3b0
	UMaterialInterface* _volumetricCloudsMaterialHQ; // 0x3b8
	UMaterialInstanceDynamic* _volumetricCloudsMaterialDynamic; // 0x3c0
	float _cirrostratusCoverage; // 0x3c8
	float _cirrostratusSunlightThroughput; // 0x3cc
	FRuntimeFloatCurve _cirrostratusCoverageMaterialParamRemap; // 0x3d0
	float _cumulonimbusCoverage; // 0x458
	float _cumulonimbusSunlightThroughput; // 0x45c
	FRuntimeFloatCurve _cumulonimbusCoverageMaterialParamRemap; // 0x460
	float _nimbostratusCoverage; // 0x4e8
	float _nimbostratusSunlightThroughput; // 0x4ec
	FRuntimeFloatCurve _nimbostratusCoverageMaterialParamRemap; // 0x4f0
	float _cloudsBaseSpeed; // 0x578
	float _cloudsWindSpeed; // 0x57c
	UParticleSystem* _lightningParticleSystem; // 0x588
	FFloatInterval _lightningParticleLifetime; // 0x590
	UAkAudioEvent* _thunderSoundEmitter; // 0x598
	FFloatInterval _thunderSoundDuration; // 0x5a0
	float _lightningRate; // 0x5a8
	float _lightningMaxDistance; // 0x5ac
	float _lightningAltitudeOffsetFromPlayer; // 0x5b0
	float _lightningAltitudeBandThickness; // 0x5b4
	USceneComponent* _precipitationEmittersRoot; // 0x5d8
	UChildActorComponent* _precipitationMaskCapture; // 0x5e0
	float _precipitationMaskUpdateInterval; // 0x5e8
	float _precipitationEmittersUpOffset; // 0x5f0
	float _precipitationEmittersForwardOffset; // 0x5f4
	float _precipitationEmittersVelocityOffset; // 0x5f8
	TArray<UParticleSystem*> _rainParticleSystems; // 0x600
	TArray<UParticleSystemComponent*> _rainEmitters; // 0x610
	float _rainIntensity; // 0x620
	TArray<UParticleSystem*> _snowParticleSystems; // 0x628
	TArray<UParticleSystemComponent*> _snowEmitters; // 0x638
	float _snowIntensity; // 0x648
	UMaterialParameterCollection* _mainMPC; // 0x650
	UMaterialParameterCollection* _foliageMPC; // 0x658
	FRuntimeFloatCurve _foliageMPCSubsurfaceColorIntensityCurve; // 0x660
	UMaterialParameterCollection* _wetnessMPC; // 0x6e8
	FRuntimeFloatCurve _wetnessMPCEmissiveIntensityCurve; // 0x6f0
	UMaterialParameterCollection* _particlesMPC; // 0x778
	FRuntimeCurveLinearColor _particlesMPCGlobalParticlesColorCurve; // 0x780
	float _baseAirTemperature; // 0x988
	FFloatInterval _baseAirTemperatureRange; // 0x98c
	float _airTemperatureHeightModifier; // 0x994
	float _waterTemperature; // 0x998
	FFloatInterval _waterTemperatureRange; // 0x99c
	float _waterTemperatureInterpSpeed; // 0x9a4
	float _waterTemperatureHeightModifier; // 0x9a8
	float _temperatureDifferenceBetweenShadeAndOnSun; // 0x9ac
	float _airRelativeHumidity; // 0x9b0
	UWindDirectionalSourceComponent* _windSourceComponent; // 0x9b8
	UParticleSystemComponent* _leavesComponent; // 0x9c0
	float _windAzimuth; // 0x9c8
	float _windIntensity; // 0x9cc
	float _windAzimuthForWaves; // 0x9d0
	float _windIntensityForWaves; // 0x9d4
	float _maxWindSpeedKph; // 0x9d8
	UExponentialHeightFogComponent* _heightFog; // 0x9e0
	float _fogDensity; // 0x9e8
	float _fogFalloff; // 0x9ec
	float _fogHeightOffset; // 0x9f0
	FLinearColor _fogBaseInscatteringColor; // 0x9f4
	FLinearColor _fogBaseDirectionalInscatteringColor; // 0xa04
	UChildActorComponent* _postProcessVolume; // 0xa18
	FRuntimeFloatCurve _exposureMinBrightness; // 0xa20
	FRuntimeFloatCurve _exposureMaxBrightness; // 0xaa8
	FRuntimeFloatCurve _exposureSpeedUp; // 0xb30
	FRuntimeFloatCurve _exposureSpeedDown; // 0xbb8
	FMultistageRandomRoll _windAzimuthRandom; // 0xc40
	FMultistageRandomRoll _windIntensityRandom; // 0xca8
	FMultistageRandomRoll _cirrostratusCoverageRandom; // 0xd10
	FMultistageRandomRoll _cumulonimbusCoverageRandom; // 0xd78
	FMultistageRandomRoll _nimbostratusCoverageRandom; // 0xde0
	FRuntimeFloatCurve _baseAirTemperatureVsTimeOfDay; // 0xe48
	FRuntimeFloatCurve _fogDensityVsSunIntensity; // 0xed0
	float _fogDensityFromCumulonimbus; // 0xf58
	float _fogRainRatioFromCumulonimbus; // 0xf5c
	float _fogDensityWhenRaining; // 0xf64
	float _fogDensityInterpSpeed; // 0xf68
	float _autoSaveInterval; // 0xf6c
	bool _shouldSerializeState; // 0xf74
	float _sendReplicatedStateSnapshotInterval; // 0xf78
	float _nighttimeDarkness; // 0xf9c
};

struct UVolumetricCloudComponent : USceneComponent {
	float LayerBottomAltitude; // 0x1f8
	float LayerHeight; // 0x1fc
	float TracingStartMaxDistance; // 0x200
	float TracingMaxDistance; // 0x204
	float PlanetRadius; // 0x208
	FColor GroundAlbedo; // 0x20c
	UMaterialInterface* Material; // 0x210
	char bUsePerSampleAtmosphericLightTransmittance : 1; // 0x218
	float SkyLightCloudBottomOcclusion; // 0x21c
	float ViewSampleCountScale; // 0x220
	float ReflectionSampleCountScale; // 0x224
	float ShadowViewSampleCountScale; // 0x228
	float ShadowReflectionSampleCountScale; // 0x22c
	float ShadowTracingDistance; // 0x230
};

struct UMockDataMeshTrackerComponent : USceneComponent {
	FMulticastInlineDelegate OnMeshTrackerUpdated; // 0x1f8
	bool ScanWorld; // 0x208
	bool RequestNormals; // 0x209
	bool RequestVertexConfidence; // 0x20a
	EMeshTrackerVertexColorMode VertexColorMode; // 0x20b
	TArray<FColor> BlockVertexColors; // 0x210
	FLinearColor VertexColorFromConfidenceZero; // 0x220
	FLinearColor VertexColorFromConfidenceOne; // 0x230
	float UpdateInterval; // 0x240
	UMRMeshComponent* MRMesh; // 0x248
};

struct ADistantLevel : AActor {
	UStaticMeshComponent* _previewMeshComponent; // 0x220
	FString _streamingLevelName; // 0x228
	EDistantMeshStreamingBehavior _meshStreamingBehavior; // 0x238
	float _maxDrawDistance; // 0x23c
	bool _neverDistanceCull; // 0x240
	FBoxSphereBounds _meshBounds; // 0x244
	TSoftObjectPtr<UStaticMesh> _collisionMesh; // 0x260
	TArray<TSoftObjectPtr<UStaticMesh>> _meshLODs; // 0x288
};

struct ANavSystemConfigOverride : AActor {
	UNavigationSystemConfig* NavigationSystemConfig; // 0x220
	ENavSystemOverridePolicy OverridePolicy; // 0x228
	char bLoadOnClient : 1; // 0x229
};

struct UInterpTrackAnimControl : UInterpTrackFloatBase {
	FName SlotName; // 0x90
	TArray<FAnimControlTrackKey> AnimSeqs; // 0x98
	char bSkipAnimNotifiers : 1; // 0xa8
};

struct UMaterialExpressionMax : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct ARuntimeVirtualTextureVolume : AActor {
	URuntimeVirtualTextureComponent* VirtualTextureComponent; // 0x220
};

struct UDoorUpgradeWidget : UWaypointWidget {
	ADoor* _door; // 0x310
};

struct AWeaponAttachmentUniversalFlashlight : AWeaponAttachmentFlashlight {
	TMap<AWeapon*, UStaticMesh*> WeaponToStaticMeshMapping; // 0x808
};

struct USourceEffectEnvelopeFollowerPreset : USoundEffectSourcePreset {
	FSourceEffectEnvelopeFollowerSettings Settings; // 0x9c
};

struct ASimpleAnimalAIController : AAIController {
	float WanderRadius; // 0x328
	float RunAwayTime; // 0x32c
	float MinActionTime; // 0x330
	float MaxActionTime; // 0x334
	float WalkSpeed; // 0x338
	float RunSpeed; // 0x33c
	float FleeSegmentDistance; // 0x340
	float AlertStartupTime; // 0x344
	float MinMoveDistance; // 0x348
	float DoNotDespawnTime; // 0x34c
};

struct USoundNodeMixer : USoundNode {
	TArray<float> InputVolume; // 0x48
};

struct APETBottle03_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UAmbisonicsEncodingSettings : USoundfieldEncodingSettingsBase {
	int32_t AmbisonicsOrder; // 0x28
};

struct USoundConcurrency : UObject {
	FSoundConcurrencySettings Concurrency; // 0x28
};

struct UTransformInputsToolProperties : UInteractiveToolPropertySet {
	bool bShowTransformUI; // 0x60
	bool bSnapToWorldGrid; // 0x61
};

struct UParticleSystem : UFXSystemAsset {
	float UpdateTime_FPS; // 0x30
	float UpdateTime_Delta; // 0x34
	float WarmupTime; // 0x38
	float WarmupTickRate; // 0x3c
	TArray<UParticleEmitter*> Emitters; // 0x40
	UParticleSystemComponent* PreviewComponent; // 0x50
	UInterpCurveEdSetup* CurveEdSetup; // 0x58
	float LODDistanceCheckTime; // 0x60
	float MacroUVRadius; // 0x64
	TArray<float> LODDistances; // 0x68
	TArray<FParticleSystemLOD> LODSettings; // 0x78
	FBox FixedRelativeBoundingBox; // 0x88
	float SecondsBeforeInactive; // 0xa4
	float Delay; // 0xa8
	float DelayLow; // 0xac
	char bOrientZAxisTowardCamera : 1; // 0xb0
	char bUseFixedRelativeBoundingBox : 1; // 0xb0
	char bShouldResetPeakCounts : 1; // 0xb0
	char bHasPhysics : 1; // 0xb0
	char bUseRealtimeThumbnail : 1; // 0xb0
	char ThumbnailImageOutOfDate : 1; // 0xb0
	char bUseDelayRange : 1; // 0xb1
	char bAllowManagedTicking : 1; // 0xb1
	char bAutoDeactivate : 1; // 0xb1
	char bRegenerateLODDuplicate : 1; // 0xb1
	EParticleSystemUpdateMode SystemUpdateMode; // 0xb2
	ParticleSystemLODMethod LODMethod; // 0xb3
	EParticleSystemInsignificanceReaction InsignificantReaction; // 0xb4
	EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod; // 0xb5
	EParticleSignificanceLevel MaxSignificanceLevel; // 0xb7
	uint32_t MinTimeBetweenTicks; // 0xb8
	float InsignificanceDelay; // 0xbc
	FVector MacroUVPosition; // 0xc0
	FBox CustomOcclusionBounds; // 0xcc
	TArray<FLODSoloTrack> SoloTracking; // 0xe8
	TArray<FNamedEmitterMaterial> NamedMaterialSlots; // 0xf8
};

struct UMeshConstraintProperties : UInteractiveToolPropertySet {
	bool bPreserveSharpEdges; // 0x60
	EMeshBoundaryConstraint MeshBoundaryConstraint; // 0x61
	EGroupBoundaryConstraint GroupBoundaryConstraint; // 0x62
	EMaterialBoundaryConstraint MaterialBoundaryConstraint; // 0x63
	bool bPreventNormalFlips; // 0x64
};

struct UProceduralMeshComponent : UMeshComponent {
	bool bUseComplexAsSimpleCollision; // 0x478
	bool bUseAsyncCooking; // 0x479
	UBodySetup* ProcMeshBodySetup; // 0x480
	TArray<FProcMeshSection> ProcMeshSections; // 0x488
	TArray<FKConvexElem> CollisionConvexElems; // 0x498
	FBoxSphereBounds LocalBounds; // 0x4a8
	TArray<UBodySetup*> AsyncBodySetupQueue; // 0x4c8
};

struct UGizmoLocalVec2ParameterSource : UGizmoBaseVec2ParameterSource {
	FVector2D Value; // 0x48
	FGizmoVec2ParameterChange LastChange; // 0x50
};

struct UKillBoxTimerWidget : UDesignableUserWidget {
	UTextBlock* _remainingTimeMinutes1; // 0x278
	UTextBlock* _remainingTimeMinutes2; // 0x280
	UTextBlock* _remainingTimeSeconds1; // 0x288
	UTextBlock* _remainingTimeSeconds2; // 0x290
};

struct AZombie_01_Left_Arm_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f0
};

struct UActorSequenceComponent : UActorComponent {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0xb0
	UActorSequence* Sequence; // 0xc8
	UActorSequencePlayer* SequencePlayer; // 0xd0
};

struct UUI_TournamentScoreboardWidget_C : UTournamentScoreboardWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UTextBlock* Instruction; // 0x280
	UVerticalBox* Table; // 0x288
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow; // 0x290
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_2; // 0x298
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_3; // 0x2a0
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_4; // 0x2a8
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_5; // 0x2b0
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_6; // 0x2b8
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_7; // 0x2c0
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_8; // 0x2c8
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_9; // 0x2d0
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_10; // 0x2d8
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_11; // 0x2e0
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_12; // 0x2e8
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_13; // 0x2f0
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_14; // 0x2f8
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_15; // 0x300
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_16; // 0x308
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_17; // 0x310
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_18; // 0x318
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_19; // 0x320
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_20; // 0x328
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_21; // 0x330
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_22; // 0x338
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_23; // 0x340
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_24; // 0x348
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_25; // 0x350
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_26; // 0x358
	UUI_TournamentScoreboardRow_C* UI_TournamentScoreboardRow_40; // 0x360
};

struct UNiagaraRendererProperties : UNiagaraMergeable {
	FNiagaraPlatformSet Platforms; // 0x28
	int32_t SortOrderHint; // 0x58
	bool bIsEnabled; // 0x5c
	bool bMotionBlurEnabled; // 0x5d
};

struct UMetabolismVitaminsPanel : UUserWidget {
	UMetabolismVitaminAndMineralReserve* _vitamin_A; // 0x260
	UMetabolismVitaminAndMineralReserve* _vitamin_B1; // 0x268
	UMetabolismVitaminAndMineralReserve* _vitamin_B2; // 0x270
	UMetabolismVitaminAndMineralReserve* _vitamin_B3; // 0x278
	UMetabolismVitaminAndMineralReserve* _vitamin_B4; // 0x280
	UMetabolismVitaminAndMineralReserve* _vitamin_B5; // 0x288
	UMetabolismVitaminAndMineralReserve* _vitamin_B6; // 0x290
	UMetabolismVitaminAndMineralReserve* _vitamin_B9; // 0x298
	UMetabolismVitaminAndMineralReserve* _vitamin_B12; // 0x2a0
	UMetabolismVitaminAndMineralReserve* _vitamin_C; // 0x2a8
	UMetabolismVitaminAndMineralReserve* _vitamin_D; // 0x2b0
	UMetabolismVitaminAndMineralReserve* _vitamin_E; // 0x2b8
	UMetabolismVitaminAndMineralReserve* _vitamin_K; // 0x2c0
};

struct UMultiLineEditableText : UTextLayoutWidget {
	FText Text; // 0x128
	FText HintText; // 0x140
	FDelegate HintTextDelegate; // 0x158
	FTextBlockStyle WidgetStyle; // 0x168
	bool bIsReadOnly; // 0x3d8
	FSlateFontInfo Font; // 0x3e0
	bool SelectAllTextWhenFocused; // 0x438
	bool ClearTextSelectionOnFocusLoss; // 0x439
	bool RevertTextOnEscape; // 0x43a
	bool ClearKeyboardFocusOnCommit; // 0x43b
	bool AllowContextMenu; // 0x43c
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x43d
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x43e
	FMulticastInlineDelegate OnTextChanged; // 0x440
	FMulticastInlineDelegate OnTextCommitted; // 0x450
};

struct URectLightComponent : ULocalLightComponent {
	float SourceWidth; // 0x340
	float SourceHeight; // 0x344
	float BarnDoorAngle; // 0x348
	float BarnDoorLength; // 0x34c
	UTexture* SourceTexture; // 0x350
};

struct UFileMediaSource : UBaseMediaSource {
	FString FilePath; // 0x88
	bool PrecacheFile; // 0x98
};

struct UNiagaraDataInterfaceGrid2DCollectionReader : UNiagaraDataInterfaceGrid2D {
	FString EmitterName; // 0xf8
	FString DIName; // 0x108
};

struct ULockpickingTensionToolItemTag : UBaseItemTag {
	UStaticMesh* Mesh; // 0x30
	FTransform TensionToolTransform; // 0x40
};

struct ABird2 : AAnimal2 {
	bool IsStaringPerched; // 0x938
	float MinFlightAltitude; // 0x93c
	float MaxFlightAltitude; // 0x940
	bool _isLanding; // 0x944
	bool _isTakingOff; // 0x945
	bool _isPerched; // 0x946
	bool _isFlying; // 0x947
	TArray<bool> _states; // 0x948
	char _repStates; // 0x958
};

struct UGizmoLineHandleComponent : UGizmoBaseComponent {
	FVector Normal; // 0x468
	float HandleSize; // 0x474
	float Thickness; // 0x478
	FVector Direction; // 0x47c
	float Length; // 0x488
	bool bImageScale; // 0x48c
};

struct UPrisonerAnimInstance_Parachute : UAnimInstance {
	UAnimSequence* _defaultOpeningAnimation; // 0x2b8
	UAnimSequence* _openingAnimation; // 0x2c0
	float _openingAnimationTime; // 0x2c8
};

struct UParticleSystemReplay : UObject {
	int32_t ClipIDNumber; // 0x28
};

struct USplineComponent : UPrimitiveComponent {
	FSplineCurves SplineCurves; // 0x448
	FInterpCurveVector SplineInfo; // 0x4b8
	FInterpCurveQuat SplineRotInfo; // 0x4d0
	FInterpCurveVector SplineScaleInfo; // 0x4e8
	FInterpCurveFloat SplineReparamTable; // 0x500
	bool bAllowSplineEditingPerInstance; // 0x518
	int32_t ReparamStepsPerSegment; // 0x51c
	float Duration; // 0x520
	bool bStationaryEndpoints; // 0x524
	bool bSplineHasBeenEdited; // 0x525
	bool bModifiedByConstructionScript; // 0x526
	bool bInputSplinePointsToConstructionScript; // 0x527
	bool bDrawDebug; // 0x528
	bool bClosedLoop; // 0x529
	bool bLoopPositionOverride; // 0x52a
	float LoopPosition; // 0x52c
	FVector DefaultUpVector; // 0x530
};

struct UPrisonerBodyConditionOrSymptomSideEffect_Fatigue : UPrisonerBodyConditionOrSymptomSideEffect {
	UPrisonerBodySymptom_Fatigue* _symptomClass; // 0x30
	UPrisonerBodySymptomCause_Fatigue* _symptomCause; // 0x38
	FRuntimeFloatCurve _maxStaminaModifierVsSeverity; // 0x40
};

struct ATrackingMarker2 : AActor {
	USceneComponent* SceneComponent; // 0x228
	UArrowComponent* DirectionArrow; // 0x230
	UDecalComponent* ConeDecal; // 0x238
	UParticleSystemComponent* Particles; // 0x240
	float TickFrequency; // 0x248
	AAnimal2* AnimalClass; // 0x250
	float Duration; // 0x258
	FVector Direction; // 0x25c
	float health; // 0x268
	EBleedingSeverity BleedingSeverity; // 0x26c
	bool ShowBleedingInfo; // 0x26d
	bool ShowWoundInfo; // 0x26e
	bool ShowBasicWoundInfo; // 0x26f
	float MaxSevereBleedTime; // 0x270
	float MaxHeavyBleedTime; // 0x274
	float MaxModerateBleedTime; // 0x278
	float MaxLightBleedTime; // 0x27c
};

struct UMaterialExpressionPerInstanceCustomData : UMaterialExpression {
	FExpressionInput DefaultValue; // 0x40
	float ConstDefaultValue; // 0x54
	uint32_t DataIndex; // 0x58
};

struct UAdminCommand_ListPrisonerBodyEffects : UAdminCommand {
	UPrisonerBodyEffect* _bodyEffectClass; // 0x80
};

struct UVDProceduralClothComponent : UBaseVDComponent {
	float StretchStiffness; // 0x678
	float BendStiffness; // 0x67c
	float Mass; // 0x680
	float DragCoefficient; // 0x684
	float Width; // 0x688
	float Height; // 0x68c
	int32_t NumParticlesWide; // 0x690
	int32_t NumParticlesHigh; // 0x694
	float TileMaterialAlongWidth; // 0x698
	float TileMaterialAlongHeight; // 0x69c
	TArray<UVDParticleSpringConstraint*> StretchConstraints; // 0x6c0
	TArray<UVDParticleSpringConstraint*> BendConstraints; // 0x6d0
};

struct UBondageComponent : USkeletalMeshComponent {
	AItem* _bondageItem; // 0xee0
	EClothesType _boundBodyPart; // 0xee8
	float _tightness; // 0xeec
};

struct UAkWwiseTreeSelector : UWidget {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnItemDragged; // 0x118
};

struct UTraderPersonalityDataAsset : UDataAsset {
	FGuid TraderPersistentId; // 0x30
	FString HumanReadableTraderName; // 0x40
};

struct UInteractiveToolManager : UObject {
	UInteractiveTool* ActiveLeftTool; // 0x30
	UInteractiveTool* ActiveRightTool; // 0x38
	TMap<FString, UInteractiveToolBuilder*> ToolBuilders; // 0x90
};

struct UWidgetAnimation : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
	TArray<FWidgetAnimationBinding> AnimationBindings; // 0x68
	bool bLegacyFinishOnStop; // 0x78
	FString DisplayLabel; // 0x80
};

struct UMovieScenePrimitiveMaterialTrack : UMovieScenePropertyTrack {
	int32_t MaterialIndex; // 0xb0
};

struct AFollowsMouseActor : AActor {
	float DistanceFromCamera; // 0x220
};

struct UInteractionGroupUserWidget : UDesignableUserWidget {
	UTextBlock* _groupText; // 0x278
	UBorder* _groupBorder; // 0x280
};

struct UInventoryItemDataDescription : UInventoryItemData {
	FText Name; // 0x30
	FText Description; // 0x48
};

struct UMetabolism_ICU_ST_Stats : UMetabolism_ICU_Expandable_Stats {
	UTextBlock* _bloodPressure_mmHg; // 0x278
	UTextBlock* _bloodPressure_kPa; // 0x280
};

struct UPawnSensingComponent : UActorComponent {
	float HearingThreshold; // 0xb0
	float LOSHearingThreshold; // 0xb4
	float SightRadius; // 0xb8
	float SensingInterval; // 0xbc
	float HearingMaxSoundAge; // 0xc0
	char bEnableSensingUpdates : 1; // 0xc4
	char bOnlySensePlayers : 1; // 0xc4
	char bSeePawns : 1; // 0xc4
	char bHearNoises : 1; // 0xc4
	FMulticastInlineDelegate OnSeePawn; // 0xd0
	FMulticastInlineDelegate OnHearNoise; // 0xe0
	float PeripheralVisionAngle; // 0xf0
	float PeripheralVisionCosine; // 0xf4
};

struct UInterpTrackMove : UInterpTrack {
	FInterpCurveVector PosTrack; // 0x70
	FInterpCurveVector EulerTrack; // 0x88
	FInterpLookupTrack LookupTrack; // 0xa0
	FName LookAtGroupName; // 0xb0
	float LinCurveTension; // 0xb8
	float AngCurveTension; // 0xbc
	char bUseQuatInterpolation : 1; // 0xc0
	char bShowArrowAtKeys : 1; // 0xc0
	char bDisableMovement : 1; // 0xc0
	char bShowTranslationOnCurveEd : 1; // 0xc0
	char bShowRotationOnCurveEd : 1; // 0xc0
	char bHide3DTrack : 1; // 0xc0
	EInterpTrackMoveRotMode RotMode; // 0xc4
};

struct UGizmoArrowComponent : UGizmoBaseComponent {
	FVector Direction; // 0x468
	float Gap; // 0x474
	float Length; // 0x478
	float Thickness; // 0x47c
};

struct UMovieSceneStringSection : UMovieSceneSection {
	FMovieSceneStringChannel StringCurve; // 0xe8
};

struct UPrisonerBodyEffectUIData : UObject {
	UPrisonerBodyEffect* _bodyEffectClass; // 0x30
};

struct UEditableGameplayTagQueryExpression_NoTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UUI_KillNotification_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UHorizontalBox* HorizontalBox_58; // 0x268
	UTextBlock* Name; // 0x270
	UTextBlock* prefix; // 0x278
	UTextBlock* suffix; // 0x280
};

struct UUI_WarningSign_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* MainImage; // 0x268
	URetainerBox* MainRetainerBox; // 0x270
	float ShowDuration; // 0x278
	float Duration; // 0x27c
	float TimeScale; // 0x280
	EWarningType warningType; // 0x284
};

struct UNiagaraDataInterfaceChaosDestruction : UNiagaraDataInterface {
	TSet<AChaosSolverActor*> ChaosSolverActorSet; // 0x38
	EDataSourceTypeEnum DataSourceType; // 0x88
	int32_t DataProcessFrequency; // 0x8c
	int32_t MaxNumberOfDataEntriesToSpawn; // 0x90
	bool DoSpawn; // 0x94
	FVector2D SpawnMultiplierMinMax; // 0x98
	float SpawnChance; // 0xa0
	FVector2D ImpulseToSpawnMinMax; // 0xa4
	FVector2D SpeedToSpawnMinMax; // 0xac
	FVector2D MassToSpawnMinMax; // 0xb4
	FVector2D ExtentMinToSpawnMinMax; // 0xbc
	FVector2D ExtentMaxToSpawnMinMax; // 0xc4
	FVector2D VolumeToSpawnMinMax; // 0xcc
	FVector2D SolverTimeToSpawnMinMax; // 0xd4
	int32_t SurfaceTypeToSpawn; // 0xdc
	ELocationFilteringModeEnum LocationFilteringMode; // 0xe0
	ELocationXToSpawnEnum LocationXToSpawn; // 0xe1
	FVector2D LocationXToSpawnMinMax; // 0xe4
	ELocationYToSpawnEnum LocationYToSpawn; // 0xec
	FVector2D LocationYToSpawnMinMax; // 0xf0
	ELocationZToSpawnEnum LocationZToSpawn; // 0xf8
	FVector2D LocationZToSpawnMinMax; // 0xfc
	EDataSortTypeEnum DataSortingType; // 0x104
	bool bGetExternalCollisionData; // 0x105
	bool DoSpatialHash; // 0x106
	FVector SpatialHashVolumeMin; // 0x108
	FVector SpatialHashVolumeMax; // 0x114
	FVector SpatialHashVolumeCellSize; // 0x120
	int32_t MaxDataPerCell; // 0x12c
	bool bApplyMaterialsFilter; // 0x130
	TSet<UPhysicalMaterial*> ChaosBreakingMaterialSet; // 0x138
	bool bGetExternalBreakingData; // 0x188
	bool bGetExternalTrailingData; // 0x189
	FVector2D RandomPositionMagnitudeMinMax; // 0x18c
	float InheritedVelocityMultiplier; // 0x194
	ERandomVelocityGenerationTypeEnum RandomVelocityGenerationType; // 0x198
	FVector2D RandomVelocityMagnitudeMinMax; // 0x19c
	float SpreadAngleMax; // 0x1a4
	FVector VelocityOffsetMin; // 0x1a8
	FVector VelocityOffsetMax; // 0x1b4
	FVector2D FinalVelocityMagnitudeMinMax; // 0x1c0
	float MaxLatency; // 0x1c8
	EDebugTypeEnum DebugType; // 0x1cc
	int32_t LastSpawnedPointID; // 0x1d0
	float LastSpawnTime; // 0x1d4
	float SolverTime; // 0x1e8
	float TimeStampOfLastProcessedData; // 0x1ec
};

struct UCraftingInfoWidget : UDesignableUserWidget {
	UInspectedItemWidget* ItemWidget; // 0x278
	UGridPanel* ComponentsGridPanel; // 0x280
	UGridPanel* CraftingGridPanel; // 0x288
	UUserWidget* ComponentsMinimizableWidget; // 0x290
	UUserWidget* CraftingMinimizableWidget; // 0x298
	AItem* _itemClass; // 0x2a0
	TArray<UPreviousNextSwitchWidget*> _switchWidgets; // 0x2f8
	TWeakObjectPtr<UPrisonerInventoryComponent> _inventoryComponent; // 0x308
	FCraftingRecipe _craftingRecipe; // 0x310
};

struct UUI_GameEventParticipantStatsWidget_C : UGameEventParticipantStatsWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	FLinearColor TextColor; // 0x2a0
	int32_t _lastTeamIndex; // 0x2b0
	FGameEventTeamColours TeamColours; // 0x2b4
};

struct UTrashNamedSliderWidget : UUserWidget {
	FMulticastInlineDelegate ValueChangedTemp_DONOTUSE; // 0x290
	USizeBox* _nameBox; // 0x2a0
	UTextBlock* _name; // 0x2a8
	USizeBox* _valueDisplayBox; // 0x2b0
	UTextBlock* _valueDisplay; // 0x2b8
	UTrashSliderWidget* _slider; // 0x2c0
	USelectionOverlayWidget* _focusBackground; // 0x2c8
	FString _label; // 0x2d0
	FText _mainLabel; // 0x2e0
	FSlateFontInfo _defaultFont; // 0x2f8
	float _stepSpeedTreshold; // 0x3a8
	float _valueDisplayWidth; // 0x3ac
	float _minValue; // 0x3b0
	float _maxValue; // 0x3b4
	int32_t _stepCount; // 0x3b8
	int32_t _decimalPlacesShown; // 0x3bc
};

struct UTexture2D : UTexture {
	int32_t LevelIndex; // 0xd8
	int32_t FirstResourceMemMip; // 0xdc
	char bTemporarilyDisableStreaming : 1; // 0xe0
	TextureAddress AddressX; // 0xe1
	TextureAddress AddressY; // 0xe2
	FIntPoint ImportedSize; // 0xe4
};

struct UTriangleSetComponent : UMeshComponent {
	FBoxSphereBounds Bounds; // 0x470
	bool bBoundsDirty; // 0x48c
};

struct UMaterialExpressionTextureSampleParameterSubUV : UMaterialExpressionTextureSampleParameter2D {
	char bBlend : 1; // 0x80
};

struct UAnimationSharingManager : UObject {
	TArray<USkeleton*> Skeletons; // 0x28
	TArray<UAnimSharingInstance*> PerSkeletonData; // 0x38
};

struct ACargoDropEvent : AWorldEvent {
	TArray<ACargoDropContainer*> CargoDropClasses; // 0x248
	FSpawnCharacterAroundInfo _characterAroundInfo; // 0x2c0
};

struct UMetabolismBasicInfoPanel : UUserWidget {
	UMetabolismCurrentStatLight* _stat_Age; // 0x260
	UMetabolismCurrentStatLight* _stat_Teeth; // 0x268
	UMetabolismCurrentStatLight* _stat_Lifetime; // 0x270
	UMetabolismCurrentStatLight* _stat_BloodType; // 0x278
	UMetabolismCurrentStatLight* _stat_Weight; // 0x280
	UMetabolismCurrentStatLight* _stat_BloodVolume; // 0x288
	UMetabolismCurrentStatLight* _stat_Health; // 0x290
	UMetabolismCurrentStatLight* _stat_Temperature; // 0x298
};

struct UInGameAdManager : UPlatformInterfaceBase {
	char bShouldPauseWhileAdOpen : 1; // 0x38
	TArray<FDelegate> ClickedBannerDelegates; // 0x40
	TArray<FDelegate> ClosedAdDelegates; // 0x50
};

struct UPrisonerSkillUIData : UObject {
	FText _description; // 0x28
	USkill* _skillClass; // 0x40
};

struct UAudioCaptureComponent : USynthComponent {
	int32_t JitterLatencyFrames; // 0x6c0
};

struct ABP_WeaponBullet_cal22_Crafted_C : AProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
};

struct ULocalLightComponent : ULightComponent {
	ELightUnits IntensityUnits; // 0x328
	float Radius; // 0x32c
	float AttenuationRadius; // 0x330
	FLightmassPointLightSettings LightmassSettings; // 0x334
};

struct UJournalObjectiveContainer : UUserWidget {
	UVerticalBox* _objectiveContainer; // 0x260
	UHorizontalBox* _rewardContainer; // 0x268
	UTextBlock* _headerNameText; // 0x270
	UTextBlock* _missionDescriptionText; // 0x278
	UImage* _missionBanner; // 0x280
	UTextBlock* _noDescriptionText; // 0x288
	UTextBlock* _noRewardsText; // 0x290
	UButton* _activateMissionButton; // 0x298
	UButton* _untrackMissionButton; // 0x2a0
	UButton* _resetMissionButton; // 0x2a8
	UButton* _restartMissionButton; // 0x2b0
	UOverlay* _activateButtonOverlay; // 0x2b8
	UOverlay* _untrackButtonOverlay; // 0x2c0
	UOverlay* _resetButtonOverlay; // 0x2c8
	UOverlay* _restartButtonOverlay; // 0x2d0
	float _objectiveItemBottomPadding; // 0x2d8
	float _objectiveItemFontSize; // 0x2dc
	TMap<FString, TWeakObjectPtr<UObjectiveItemWidget>> _objectiveItemWidgets; // 0x2f0
};

struct UBackgroundBlurSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UMetabolismPerformanceDataPanel : UUserWidget {
	UMetabolismAdvancedProgressBar* _apb_Stamina; // 0x260
	UMetabolismAdvancedProgressBar* _apb_WeightLoad; // 0x268
	UMetabolismAdvancedProgressBar* _apb_WalkSpeed; // 0x270
	UMetabolismAdvancedProgressBar* _apb_JogSpeed; // 0x278
	UMetabolismAdvancedProgressBar* _apb_RunSpeed; // 0x280
	UMetabolismAdvancedProgressBar* _apb_HealingSpeed; // 0x288
	UMetabolismAdvancedProgressBar* _apb_BloodRecoveryRate; // 0x290
	UMetabolismAdvancedProgressBar* _apb_ImmuneSystem; // 0x298
	UMetabolismAdvancedProgressBar* _apb_PerformanceScore; // 0x2a0
	UMetabolismAdvancedProgressBar* _apb_StealthFactor; // 0x2a8
	UMetabolismAdvancedProgressBar* _apb_MeleeDamage; // 0x2b0
	UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryResting; // 0x2b8
	UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryIdle; // 0x2c0
	UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryEasy; // 0x2c8
	UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryDemanding; // 0x2d0
	UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryVeryDemanding; // 0x2d8
	UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryExtremelyDemanding; // 0x2e0
	UMetabolismCurrentStatDark* _csd_OverloadPenaltyEnergy; // 0x2e8
	UMetabolismCurrentStatDark* _csd_OverloadPenaltyWater; // 0x2f0
};

struct UMovieSceneCameraCutSection : UMovieSceneSection {
	bool bLockPreviousCamera; // 0xf0
	FGuid CameraGuid; // 0xf4
	FMovieSceneObjectBindingID CameraBindingID; // 0x104
	FTransform InitialCameraCutTransform; // 0x120
	bool bHasInitialCameraCutTransform; // 0x150
};

struct AConZPlayerController : APlayerController {
	TArray<UPrimitiveComponent*> ComponentsToHide; // 0x578
	FMulticastInlineDelegate OnPrisonerSpawned; // 0x588
	UInteractionContainerUserWidget* CurrentInteractionContainerWidget; // 0x5b0
	float LocalChatDistance; // 0x5b8
	bool IsTalkButtonPressed; // 0x5bc
	UPlayerRpcChannel* _playerRpcChannel; // 0x5c0
	UUserProfile* _userProfile; // 0x630
	FString _userFakeName; // 0x648
	APawn* _possessedPawn; // 0x688
	UPawnNoiseEmitterComponent* _noiseEmitterComponent; // 0x6a0
	float _teleportWorldStreamingLocationChangeDelay; // 0x6b8
	float _teleportWorldStreamingTriggerLag; // 0x6bc
	int32_t _repFamePoints; // 0x728
	int64_t _moneyBalance; // 0x730
	int32_t _maxHistorySize; // 0x7d8
	float _weatherHeightUpdatePeriod; // 0x7f0
	UAdminCommandRegistry* _adminCommandRegistry; // 0x7f8
	AAchievementsManagerClient* _achievementsManagerClient; // 0x820
	AAchievementsManagerClient* _achievementsManagerClientClass; // 0x828
	AMissionManager* _missionManagerClass; // 0x830
	AMissionManager* _missionManager; // 0x838
	AMissionDialogueManager* _missionDialogueManagerClass; // 0x840
	float _proofOfLifeSendInterval; // 0x850
	float _proofOfLifeReceiveTimeout; // 0x854
	float _isReadyForPlayDelay; // 0x8b8
	float _reportPlayTimeInterval; // 0x8c8
	FDateTime _replicatedServerUtcNow; // 0x8d0
	UPathFollowingComponent* _pathFollowingComponent; // 0x938
	bool _forceSpawnAsDrone; // 0x940
	bool _mpSpawnDroneAndPrisoner; // 0x941
	APhotoModePawn* _photoModePawnClass; // 0x950
	float _refreshTimeForPawnLocationOnMap; // 0x974
	UMaterialParameterCollection* _mainMPC; // 0x980
};

struct UMetabolismSymptomTitle : UUserWidget {
	UTextBlock* _title; // 0x270
};

struct UCompositionGraphCaptureProtocol : UMovieSceneImageCaptureProtocolBase {
	FCompositionGraphCapturePasses IncludeRenderPasses; // 0x58
	bool bCaptureFramesInHDR; // 0x68
	int32_t HDRCompressionQuality; // 0x6c
	EHDRCaptureGamut CaptureGamut; // 0x70
	FSoftObjectPath PostProcessingMaterial; // 0x78
	bool bDisableScreenPercentage; // 0x90
	UMaterialInterface* PostProcessingMaterialPtr; // 0x98
};

struct UABP_Prisoner_WeightLoad_C : UPrisonerAnimInstance_WeightLoad {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose; // 0x2f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x410
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x430
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_7; // 0x450
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_6; // 0x558
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_5; // 0x660
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_4; // 0x768
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0x870
	FAnimNode_CopyBone AnimGraphNode_CopyBone; // 0x978
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0xa68
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0xb70
	float WeightLoadFactor; // 0xc78
};

struct UUI_ActionProgress_C : UActionProgressWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c8
	UImage* Background; // 0x2d0
	UImage* Cancel; // 0x2d8
	UTextBlock* percent; // 0x2e0
	UTextBlock* PercentageText; // 0x2e8
	UImage* progress; // 0x2f0
	UMaterialInstanceDynamic* _progressMaterial; // 0x2f8
};

struct ABP_WeaponBullet_DildoArrow_C : AProjectileArrow {
	UParticleSystemComponent* P_ArrowTrail; // 0x458
};

struct UHapticFeedbackEffect_Curve : UHapticFeedbackEffect_Base {
	FHapticFeedbackDetails_Curve HapticDetails; // 0x28
};

struct APowerNode : AActor {
	USceneComponent* _root; // 0x220
	UStaticMeshComponent* _mesh; // 0x228
	UPowerCableMeshSet* _cableMeshSet; // 0x230
	float _maxCablesDrawDistance; // 0x238
	TArray<FPowerNodeConnector> _connectors; // 0x240
	APowerNode* _connectionTarget; // 0x250
};

struct UParticleModuleMeshRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionVector StartRotationRate; // 0x30
};

struct UDatasmithActorTemplate : UDatasmithObjectTemplate {
	TSet<FName> Layers; // 0x30
	TSet<FName> Tags; // 0x80
};

struct UPolyEditCommonProperties : UInteractiveToolPropertySet {
	bool bShowWireframe; // 0x60
	bool bSelectEdgeLoops; // 0x61
	ELocalFrameMode LocalFrameMode; // 0x64
	bool bLockRotation; // 0x68
	bool bSnapToWorldGrid; // 0x69
};

struct UAISenseEvent_Hearing : UAISenseEvent {
	FAINoiseEvent Event; // 0x28
};

struct UMaterialExpressionHairColor : UMaterialExpression {
	FExpressionInput Melanin; // 0x40
	FExpressionInput Redness; // 0x54
	FExpressionInput DyeColor; // 0x68
};

struct UDrinkWaterAssetData : UInteractionAssetData {
	UGameResourceType* ResourceType; // 0x30
	float QuantityPerDrink; // 0x38
	float Salinity; // 0x3c
	UAkAudioEvent* StartDrinkingAudioEvent; // 0x40
	UAkAudioEvent* StopDrinkingAudioEvent; // 0x48
};

struct APrisonerAIController : AAIController {
	APrisoner* _prisoner; // 0x328
	UPrisonerMovementComponent* _prisonerMovementComponent; // 0x330
};

struct USledgePassengerMountSlot : USledgeMountSlot {
	UBlendSpace* _idleAnimation; // 0x128
};

struct ULandingEffects : UDataAsset {
	float MinImpactSpeedForLightEffects; // 0x30
	float MinImpactSpeedForMediumEffects; // 0x34
	float MinImpactSpeedForHeavyEffects; // 0x38
	UAkAudioEvent* ImpactAudioEvent; // 0x40
	FLandingEffectDataPerPhysicalSurface Default; // 0x48
	FLandingEffectDataPerPhysicalSurface grass; // 0x78
	FLandingEffectDataPerPhysicalSurface ForrestGroundCoastal; // 0xa8
	FLandingEffectDataPerPhysicalSurface ForrestGroundContinental; // 0xd8
	FLandingEffectDataPerPhysicalSurface Rock; // 0x108
	FLandingEffectDataPerPhysicalSurface Stone; // 0x138
	FLandingEffectDataPerPhysicalSurface Gravel; // 0x168
	FLandingEffectDataPerPhysicalSurface GravelBeach; // 0x198
	FLandingEffectDataPerPhysicalSurface Pebbles; // 0x1c8
	FLandingEffectDataPerPhysicalSurface Snow; // 0x1f8
	FLandingEffectDataPerPhysicalSurface Ice; // 0x228
	FLandingEffectDataPerPhysicalSurface Sand; // 0x258
	FLandingEffectDataPerPhysicalSurface Asphalt; // 0x288
	FLandingEffectDataPerPhysicalSurface Dirt; // 0x2b8
	FLandingEffectDataPerPhysicalSurface Water; // 0x2e8
	FLandingEffectDataPerPhysicalSurface WaterOcean; // 0x318
	FLandingEffectDataPerPhysicalSurface Cloth; // 0x348
	FLandingEffectDataPerPhysicalSurface Metal; // 0x378
	FLandingEffectDataPerPhysicalSurface Aluminium; // 0x3a8
	FLandingEffectDataPerPhysicalSurface Concrete; // 0x3d8
	FLandingEffectDataPerPhysicalSurface Brick; // 0x408
	FLandingEffectDataPerPhysicalSurface Wood; // 0x438
	FLandingEffectDataPerPhysicalSurface Plastic; // 0x468
	FLandingEffectDataPerPhysicalSurface Rubber; // 0x498
	FLandingEffectDataPerPhysicalSurface Glass; // 0x4c8
	FLandingEffectDataPerPhysicalSurface Folliage; // 0x4f8
	FLandingEffectDataPerPhysicalSurface Bark; // 0x528
	FLandingEffectDataPerPhysicalSurface Flesh; // 0x558
	FLandingEffectDataPerPhysicalSurface RoofTile; // 0x588
	FLandingEffectDataPerPhysicalSurface CeramicsTiles; // 0x5b8
	FLandingEffectDataPerPhysicalSurface Scrap; // 0x5e8
	FLandingEffectDataPerPhysicalSurface Trunk; // 0x618
	FLandingEffectDataPerPhysicalSurface Leaves; // 0x648
	FLandingEffectDataPerPhysicalSurface Plaster; // 0x678
	FLandingEffectDataPerPhysicalSurface Kevlar; // 0x6a8
	FLandingEffectDataPerPhysicalSurface ForceField; // 0x6d8
	FLandingEffectDataPerPhysicalSurface NoEffect; // 0x708
};

struct ALargeAquaticAnimal : AConZCharacter {
	float _maxHealth; // 0x7b0
	float _health; // 0x7b4
	float _maxTimeWithoutRelevantPrisoners; // 0x7c8
	EFishBehavior _behavior; // 0x7d0
	UAnimMontage* _deathAnimation; // 0x7d8
	float _deathSinkingSpeed; // 0x7e0
	float _capsuleRadiusAndHalfHeightOnDeath; // 0x7e4
};

struct UMaterialExpressionCeil : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UTextOnlyTooltip : UUserWidget {
	FText Text; // 0x260
	UTextBlock* _text; // 0x278
};

struct UMetabolismLightItemDisplayPanel : UUserWidget {
	UPanelWidget* _itemDisplayContainer; // 0x278
	UItemLightDisplay* _itemDisplayClass; // 0x280
	float _interChildDistrance; // 0x288
};

struct AWeaponAttachmentMagazine : AWeaponAttachment {
	FGameplayTagContainer AmmunitionTags; // 0x7e0
	bool RequiresFullCapacityOnLoad; // 0x800
	AAmmunitionItem* DefaultFillAmmo; // 0x808
	int32_t InitialAmmo; // 0x810
	TArray<FAmmunitionData> _ammoData; // 0x818
	TArray<FAmmunitionData> _ammoOwnerHelper; // 0x828
	int32_t _capacity; // 0x838
	TArray<UStaticMeshComponent*> _cartridgeMeshComponents; // 0x840
	USkeletalMeshComponent* _skeletalMesh; // 0x850
	TArray<UItemActionSequenceLoadMagazine*> _loadAmmoSequences; // 0x858
	URangedWeaponsSkill* _rangedWeaponsSkillClass; // 0x868
	float _loadMagazineActionSpeedMultiplier; // 0x870
	UTexture2D* _inventoryIconFull; // 0x878
};

struct ULandscapeGrassType : UObject {
	TArray<FGrassVariety> GrassVarieties; // 0x28
	char bEnableDensityScaling : 1; // 0x38
	UStaticMesh* GrassMesh; // 0x40
	float GrassDensity; // 0x48
	float PlacementJitter; // 0x4c
	int32_t StartCullDistance; // 0x50
	int32_t EndCullDistance; // 0x54
	bool RandomRotation; // 0x58
	bool AlignToSurface; // 0x59
};

struct UABP_Prisoner_Parachute_C : UPrisonerAnimInstance_Parachute {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator; // 0x318
};

struct UAkMusicSyncCallbackInfo : UAkCallbackInfo {
	int32_t PlayingID; // 0x30
	FAkSegmentInfo SegmentInfo; // 0x34
	EAkCallbackType MusicSyncType; // 0x58
	FString UserCueName; // 0x60
};

struct UTrashSliderWidget : UUserWidget {
	FMulticastInlineDelegate ValueChangedTemp_DONOTUSE; // 0x290
	FSlateBrush _emptySlider; // 0x2a0
	FSlateBrush _filledSlider; // 0x328
	FSlateBrush _selectedSlider; // 0x3b0
	FSlateBrush _normalThumb; // 0x548
	FSlateBrush _selectedThumb; // 0x5d0
	USlider* _slider; // 0x6e0
	UProgressBar* _progressBar; // 0x6e8
	FDataTableRowHandle _selectedColor; // 0x6f0
	FDataTableRowHandle _disabledColor; // 0x700
	float _minValue; // 0x710
	float _maxValue; // 0x714
	int32_t _stepCount; // 0x718
};

struct USimpleParachuteItemTag : UParachuteItemTag {
	FPrisonerAirMovementParameters MovementParameters; // 0x30
	UAnimSequence* OpeningAnimation; // 0x50
	FFloatInterval OpeningAnimationTimeRange; // 0x58
};

struct AKillBoxSpawnPoint : AActor {
	float _openDelay; // 0x220
	float _closeDelay; // 0x224
	TArray<AZombie2*> _zombieList; // 0x228
	ADoor* _door; // 0x238
	float _stableZombieProbability; // 0x258
};

struct ULevelActorContainer : UObject {
	TArray<AActor*> Actors; // 0x28
};

struct UParticleModuleBeamNoise : UParticleModuleBeamBase {
	char bLowFreq_Enabled : 1; // 0x30
	int32_t Frequency; // 0x34
	int32_t Frequency_LowRange; // 0x38
	FRawDistributionVector NoiseRange; // 0x40
	FRawDistributionFloat NoiseRangeScale; // 0x88
	char bNRScaleEmitterTime : 1; // 0xb8
	FRawDistributionVector NoiseSpeed; // 0xc0
	char bSmooth : 1; // 0x108
	float NoiseLockRadius; // 0x10c
	char bNoiseLock : 1; // 0x110
	char bOscillate : 1; // 0x110
	float NoiseLockTime; // 0x114
	float NoiseTension; // 0x118
	char bUseNoiseTangents : 1; // 0x11c
	FRawDistributionFloat NoiseTangentStrength; // 0x120
	int32_t NoiseTessellation; // 0x150
	char bTargetNoise : 1; // 0x154
	float FrequencyDistance; // 0x158
	char bApplyNoiseScale : 1; // 0x15c
	FRawDistributionFloat NoiseScale; // 0x160
};

struct UDatasmithStaticMeshGLTFImportData : UDatasmithStaticMeshImportData {
	FString SourceMeshName; // 0x28
};

struct UGraph2DWidget : UWidget {
	FSlateBrush Brush; // 0x108
	FDelegate BrushDelegate; // 0x190
	FLinearColor ColorAndOpacity; // 0x1a0
	FDelegate ColorAndOpacityDelegate; // 0x1b0
	float GraphLineThickness; // 0x1c0
	float GraphLineSpriteSpacing; // 0x1c4
	FVector2D GraphSize; // 0x1c8
	bool InitializeGraphWithDefaultValue; // 0x1d0
	int32_t SampleMax; // 0x1d4
	float DefaultSampleValue; // 0x1d8
	bool UseLineAntialiasing; // 0x1dc
};

struct UPrisonerConsumableUserData : UObject {
	EGameResourceConsumptionMethod ConsumptionMethod; // 0x28
	AItem* ItemClass; // 0x30
	UGameResourceType* ResourceTypeClass; // 0x38
};

struct AProjectileShotgun : AProjectile {
	AProjectile* projectileClass; // 0x418
	int32_t ShotsCount; // 0x420
};

struct UNiagaraPreviewAxis_InterpParamVector4 : UNiagaraPreviewAxis_InterpParamBase {
	FVector4 Min; // 0x40
	FVector4 Max; // 0x50
};

struct UPawnAction_Move : UPawnAction {
	AActor* GoalActor; // 0x98
	FVector GoalLocation; // 0xa0
	float AcceptableRadius; // 0xac
	UNavigationQueryFilter* FilterClass; // 0xb0
	char bAllowStrafe : 1; // 0xb8
	char bFinishOnOverlap : 1; // 0xb8
	char bUsePathfinding : 1; // 0xb8
	char bAllowPartialPath : 1; // 0xb8
	char bProjectGoalToNavigation : 1; // 0xb8
	char bUpdatePathToGoal : 1; // 0xb8
	char bAbortChildActionOnPathChange : 1; // 0xb8
};

struct UWheelBarrowMountSlot : UActorComponent {
	UAkAudioEvent* _mountAudioEvent; // 0xb8
	int32_t _mountPriority; // 0xc0
	float _mountUnmountDuration; // 0xc4
	TArray<FMountSlotEntryPoint> _entryPoints; // 0xc8
	UAkAudioEvent* _unmountAudioEvent; // 0xd8
	EMotionIntensity _mountingMotionIntensity; // 0xe0
	EMotionIntensity _unmountingMotionIntensity; // 0xe1
	UObject* _mountee; // 0xe8
	UObject* _reservee; // 0xf0
	TArray<UPhysicalMaterial*> _interactionZoneMaterials; // 0xf8
};

struct USTF12_Reload_Event_NoChamber_C : UInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t LoadedAmmoCount; // 0xa8
	int32_t MaxAmmoCount; // 0xac
};

struct UDatasmithFBXSceneImportData : UDatasmithSceneImportData {
	bool bGenerateLightmapUVs; // 0x28
	FString TexturesDir; // 0x30
	char IntermediateSerialization; // 0x40
	bool bColorizeMaterials; // 0x41
};

struct ACTFLocationMarker : AGameEventLocationMarker {
	FCTFParameters CTFParameters; // 0x418
	FVector CaptureOffsetA; // 0x448
	FVector CaptureOffsetB; // 0x454
	float CaptureRadiusA; // 0x460
	float CaptureRadiusB; // 0x464
	FTransform FlagOffsetA; // 0x470
	FTransform FlagOffsetB; // 0x4a0
	UStaticMeshComponent* FlagAPreviewMesh; // 0x4d0
	UStaticMeshComponent* FlagBPreviewMesh; // 0x4d8
};

struct UMovieSceneFloatSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xf0
};

struct UConstantQNRT : UAudioSynesthesiaNRT {
	UConstantQNRTSettings* Settings; // 0x78
};

struct UMaterialExpressionDepthOfFieldFunction : UMaterialExpression {
	EDepthOfFieldFunctionValue FunctionValue; // 0x40
	FExpressionInput Depth; // 0x44
};

struct UCurrencyItemComponent : UItemComponent {
	int32_t _value; // 0xb8
	int32_t _maxValue; // 0xc4
};

struct URandomVector : UFieldNodeVector {
	float Magnitude; // 0xb0
};

struct URichTextBlock : UTextLayoutWidget {
	FText Text; // 0x128
	UDataTable* TextStyleSet; // 0x140
	TArray<URichTextBlockDecorator*> DecoratorClasses; // 0x148
	bool bOverrideDefaultStyle; // 0x158
	FTextBlockStyle DefaultTextStyleOverride; // 0x160
	float MinDesiredWidth; // 0x3d0
	ETextTransformPolicy TextTransformPolicy; // 0x3d4
	FTextBlockStyle DefaultTextStyle; // 0x3d8
	TArray<URichTextBlockDecorator*> InstanceDecorators; // 0x648
};

struct UTabElement : UDesignableUserWidget {
	UWidget* CategoryNameWidget; // 0x278
	char maxIndex; // 0x280
	char Index; // 0x281
	FVector2D _initialPosition; // 0x284
	FVector2D _oldPosition; // 0x28c
	FVector2D _newPosition; // 0x294
	FVector2D _initialSize; // 0x29c
	FVector2D _oldSize; // 0x2a4
	FVector2D _newSize; // 0x2ac
	float _oldAlpha; // 0x2b4
	float _newAlpha; // 0x2b8
	float _interpolationTime; // 0x2bc
	float _interpolationDuration; // 0x2c0
};

struct UPrisonerMusicPlayerComponent : UCharacterActionComponent {
	FName _musicRootFolder; // 0xc0
	float _volumeChangeRate; // 0xc8
	int64_t _fileSizeLimitInMB; // 0xd0
	UAkAudioEvent* _turnOnAudioEvent; // 0xd8
	UAkAudioEvent* _turnOffAudioEvent; // 0xe0
	URuntimeAudioImporterLibrary* _importerLibrary; // 0xe8
	UAudioComponent* _audioComponent; // 0xf0
	URadioComponent* _radioComponent; // 0xf8
	TWeakObjectPtr<UImportedSoundWave> _playingSoundWave; // 0x100
};

struct UNiagaraPreviewAxis_InterpParamVector : UNiagaraPreviewAxis_InterpParamBase {
	FVector Min; // 0x38
	FVector Max; // 0x44
};

struct AFishingTrophyActor : AActor {
	USkeletalMeshComponent* _skeletalMeshComponent; // 0x220
	UStaticMeshComponent* _staticMeshComponent; // 0x228
};

struct UPlaceableElementWidget : UDesignableUserWidget {
	UImage* _icon; // 0x278
};

struct UGameplayTagsList : UObject {
	FString ConfigFileName; // 0x28
	TArray<FGameplayTagTableRow> GameplayTagList; // 0x38
};

struct ADropZoneDroppable : AActor {
	UStaticMeshComponent* Mesh; // 0x220
	UAkAudioEvent* LandSound; // 0x228
	ADropZoneGameEvent* _gameEvent; // 0x230
	UParticleSystemComponent* _flareParticles0; // 0x240
	UParticleSystemComponent* _flareParticles1; // 0x248
	UParticleSystemComponent* _flareParticles2; // 0x250
	FVector _endLocation; // 0x260
	float _fallingSpeed; // 0x26c
	bool _flareParticlesEnabled; // 0x270
	int32_t _flareParticlesTeam; // 0x274
};

struct ASentryAIController2 : AAIController {
	bool _canHear; // 0x3e0
	bool _canSee; // 0x3e1
	UAISenseConfig_Sight* _currentSightSenseConfig; // 0x3e8
	UAISenseConfig_Hearing* _currentHearingSenseConfig; // 0x3f0
	UAISenseConfig_Sight* _sightSenseConfigPatrolling; // 0x3f8
	UAISenseConfig_Sight* _sightSenseConfigAlerted; // 0x400
	UAISenseConfig_Sight* _sightSenseConfigCombat; // 0x408
	UAISenseConfig_Hearing* _hearingSenseConfigPatrolling; // 0x410
	UAISenseConfig_Hearing* _hearingSenseConfigAlerted; // 0x418
	UAISenseConfig_Hearing* _hearingSenseConfigCombat; // 0x420
	float _spottingTimeDecayMultiplier; // 0x428
	float _forgetKnownEnemyTime; // 0x42c
	int32_t _noiseStimuliBeforeInstantlyLocatingCharacter; // 0x430
	TArray<FName> _specialNoiseTags; // 0x438
	float _timeUntilNoiseStimuliCounterReset; // 0x448
	float _threatLevelAccumulationMultiplier; // 0x458
	float _onHearNoiseThreatLevelIncrease; // 0x45c
	float _onDamageTakeThreatLevelIncrease; // 0x460
	float _switchTargetCharacterTime; // 0x468
	FDetectionDelayTimerData _detectionDelayTimerData; // 0x46c
	float _distanceWhenConsideredCharacterEnteredHotZone; // 0x47c
	float _maxDistanceWhenTemporaryPointIsConsideredTooClose; // 0x480
	int32_t _temporaryPatrolPointVisitsUntilDeleted; // 0x484
	float _checkSurroundingsTime; // 0x48c
	float _checkSurroundingsAngle; // 0x494
	float _investigatingLocationOverallTime; // 0x49c
	float _investigatingLocationTime; // 0x4a4
	float _investigatingBuildingTime; // 0x4ac
	float _guardLocationTime; // 0x4d8
	float _guardLocationSwitchFocusTime; // 0x4e0
	float _enemySpottedWarningTime; // 0x508
	float _maxTolerance; // 0x510
	float _toleranceIncreaseForObedience; // 0x518
	float _enemySpottedOutOfSightTimeLimit; // 0x51c
	float _distanceWhenConsideredCharacterLeavingHotZone; // 0x528
	float _freezeCheckTime; // 0x52c
	float _freezeCheckToleranceDrainMultiplier; // 0x530
	int32_t _numberOfWarningShots; // 0x534
	float _raiseHandsCheckTime; // 0x53c
	float _raiseHandsCheckToleranceDrainMultiplier; // 0x540
	float _walkAwayCheckToleranceDrainMultiplier; // 0x544
	float _movingToHotZoneToleranceDrainMultiplier; // 0x548
	float _minMovingToHotZoneRange; // 0x54c
	float _otherToleranceDrainMultiplier; // 0x550
	float _minimumAlertedTime; // 0x554
	float _observeEnemyMovementTime; // 0x55c
	float _observeEnemyMovementOpenFireThreshold; // 0x564
	float _beginShootingTime; // 0x574
	float _combatSwitchVariationTimeMin; // 0x584
	float _combatSwitchVariationTimeMax; // 0x588
	float _maxFireRateTime; // 0x594
	float _fireRateAccumulationSpeed; // 0x59c
	float _startingHighFireRate; // 0x5a0
	float _highFireRateSpreadMultiplier; // 0x5a4
	float _highPrecisionShotAimTime; // 0x5ac
	float _highPrecisionShotCooldownTime; // 0x5b0
	float _combatMoveCloserDistance; // 0x5b8
	float _combatDistance; // 0x5bc
	float _noWeaponLineOfSightTime; // 0x5cc
	float _combatNoSightTime; // 0x5d4
	float _searchForEnemyAfterLostStimulusTime; // 0x5dc
	float _combatLostSightInvestigateLocationTime; // 0x5e0
	float _distanceFromActorWhenInvestigationLocationIsChanged; // 0x5e8
	float _relocatingAngle; // 0x5ec
	float _relocatingRadius; // 0x5f0
	float _destroyingVehicleGiveUpTime; // 0x5f4
	float _maximumOperatingRadius; // 0x61c
	float _movingAwayHalfAngleDegrees; // 0x62c
	float _movingTowardsHalfAngleDegrees; // 0x634
	float _acceptanceRadius; // 0x63c
	float _timeToBeConsideredStuck; // 0x650
};

struct UABP_BlackHawk_Crossbow_C : UWeaponCrossbowAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x310
	FAnimNode_Root AnimGraphNode_Root; // 0x318
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x348
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3c8
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x448
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x490
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x5e8
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x630
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x678
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x6c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x770
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x798
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x7c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x7e8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x888
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x938
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x980
	FAnimNode_Slot AnimGraphNode_Slot; // 0x9c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0xa10
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0xa38
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0xa60
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0xa88
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0xb90
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0xbb0
	FAnimNode_RigidBody AnimGraphNode_RigidBody; // 0xbd0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x1220
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x1240
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x1260
	float IronSightsHideAlpha; // 0x1300
};

struct UMessage_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UTextBlock* Text; // 0x280
	bool _shouldFade; // 0x288
	float _fadeLength; // 0x28c
};

struct AExponentialHeightFog : AInfo {
	UExponentialHeightFogComponent* Component; // 0x220
	char bEnabled : 1; // 0x228
};

struct UMaterialExpressionBlackBody : UMaterialExpression {
	FExpressionInput Temp; // 0x40
};

struct UPlaneReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadiusScale; // 0x270
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x278
	UBoxComponent* PreviewCaptureBox; // 0x280
};

struct UABP_Dick_Placeholder_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x2f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x398
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x3c0
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose_2; // 0x550
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x560
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x580
	FAnimNode_RigidBody AnimGraphNode_RigidBody; // 0x590
	bool EnabledIK; // 0xbe0
	FVector _targetIK; // 0xbe4
	bool IsPenisInHands; // 0xbf0
	FVector _handsIK; // 0xbf4
	bool IsInRange; // 0xc00
};

struct USlateVectorArtData : UObject {
	TArray<FSlateMeshVertex> VertexData; // 0x28
	TArray<uint32_t> IndexData; // 0x38
	UMaterialInterface* Material; // 0x48
	FVector2D ExtentMin; // 0x50
	FVector2D ExtentMax; // 0x58
};

struct UNiagaraLightRendererProperties : UNiagaraRendererProperties {
	char bUseInverseSquaredFalloff : 1; // 0x80
	char bAffectsTranslucency : 1; // 0x80
	float RadiusScale; // 0x84
	FVector ColorAdd; // 0x88
	FNiagaraVariableAttributeBinding LightRenderingEnabledBinding; // 0x98
	FNiagaraVariableAttributeBinding LightExponentBinding; // 0xf0
	FNiagaraVariableAttributeBinding PositionBinding; // 0x148
	FNiagaraVariableAttributeBinding ColorBinding; // 0x1a0
	FNiagaraVariableAttributeBinding RadiusBinding; // 0x1f8
	FNiagaraVariableAttributeBinding VolumetricScatteringBinding; // 0x250
};

struct UCustomZoneSettingsConfiguration : UUserWidget {
	UBorder* _border; // 0x280
	UTextBlock* _configurationName; // 0x288
	UButton* _buttonRemove; // 0x290
	FLinearColor _unhighlightedColor; // 0x298
	FLinearColor _highlightedColor; // 0x2a8
};

struct APrisonerCorpse : ACorpse {
	TArray<FCorpseStaticMeshRepData> StrippedStaticMeshData; // 0x3f8
	TArray<FCorpseSkeletalMeshRepData> StrippedSkeletalMeshData; // 0x408
	TArray<FCorpseStaticMeshRepData> StandardStaticMeshData; // 0x418
	TArray<FCorpseSkeletalMeshRepData> StandardSkeletalMeshData; // 0x428
	UChoppingRecipeDataAsset* HeadlessChoppingRecipeDataAsset; // 0x438
	APrisoner* LivingClass; // 0x440
	AGib* GibClass; // 0x448
	UParticleSystem* HeadExplosionParticles; // 0x450
	USkeletalMesh* HeadExplodedMesh; // 0x458
	TArray<UStaticMesh*> HeadExplosionGibMeshes; // 0x460
	FCorpseSkeletalMeshRepData PenisMeshData; // 0x470
	FCorpseSkeletalMeshRepData StrippedPenisMeshData; // 0x4e0
	UStaticMesh* CensorMesh; // 0x550
	UStaticMesh* CensorMesh2; // 0x558
	UMaterial* CensorMaterial; // 0x560
	USkeletalMeshComponent* PenisComponent; // 0x568
	UStaticMeshComponent* GenitalsCensorComponent; // 0x570
	UStaticMeshComponent* PenisCensorComponent; // 0x578
	UStaticMeshComponent* LeftBreastCensorComponent; // 0x580
	UStaticMeshComponent* RightBreastCensorComponent; // 0x588
	bool Headless; // 0x590
	EGender _gender; // 0x591
	float _fatness; // 0x594
	float _skinniness; // 0x598
	float _breastSize; // 0x59c
	float _penisSize; // 0x5a0
	int32_t _appearanceIndex; // 0x5a4
	FVector _penisLocationSkinny; // 0x5a8
	FVector _penisLocationFat; // 0x5b4
	bool _penisShowing; // 0x5c0
	bool _breastsShowing; // 0x5c1
	float _hairLength; // 0x5c4
	float _facialHairLength; // 0x5c8
	FString _userProfileName; // 0x5d0
	FDbIntegerId _serverUserProfileId; // 0x5e0
	FDbIntegerId _killerServerUserProfileId; // 0x5e8
	float _killClaimFamePointsReward; // 0x5f0
	bool _killClaimed; // 0x5f4
};

struct UOnlinePIESettings : UDeveloperSettings {
	bool bOnlinePIEEnabled; // 0x38
	TArray<FPIELoginSettingsInternal> Logins; // 0x40
};

struct ABP_WeaponBullet_762x54FMJ_Crafted_C : AProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
};

struct UInterpTrackParticleReplay : UInterpTrack {
	TArray<FParticleReplayTrackKey> TrackKeys; // 0x70
};

struct UPreimportedSoundAsset : UObject {
	TArray<char> AudioDataArray; // 0x28
};

struct UHapticFeedbackEffect_SoundWave : UHapticFeedbackEffect_Base {
	USoundWave* SoundWave; // 0x28
};

struct UItemWidget2 : UDesignableUserWidget {
	FMulticastInlineDelegate OnRightClicked; // 0x278
	TScriptInterface<IInventoryNode> _item; // 0x2b0
	TScriptInterface<IInventoryContainer> _container; // 0x2c0
	UObject* _itemClass; // 0x2f0
	UImage* _icon; // 0x2f8
	USizeBox* _iconSizeBox; // 0x300
	UImage* _background; // 0x308
	UInvalidationBox* _mainInvalidationBox; // 0x310
	UUniformGridPanel* _backgroundGrid; // 0x318
	UUniformGridPanel* _foregroundGrid; // 0x320
	UOverlay* _selectionOverlay; // 0x328
	EInventoryNodeWidgetType _widgetType; // 0x330
	TMap<FName, float> _numberData; // 0x338
	bool _isVicinityContainer; // 0x388
	FLinearColor _defaultBackgroundColour; // 0x38c
	FLinearColor _hoveredBackgroundColour; // 0x39c
	FLinearColor _selectedBackgroundColour; // 0x3ac
	FLinearColor _selectedHoveredBackgroundColour; // 0x3bc
	bool _shouldUpdateVisuals; // 0x3da
	UHorizontalBox* _lowerLeftBox; // 0x3f0
	UImage* _additionalIcon; // 0x3f8
	USizeBox* _additionalIconSizeBox; // 0x400
};

struct UNavAreaMeta_SwitchByAgent : UNavAreaMeta {
	UNavArea* Agent0Area; // 0x48
	UNavArea* Agent1Area; // 0x50
	UNavArea* Agent2Area; // 0x58
	UNavArea* Agent3Area; // 0x60
	UNavArea* Agent4Area; // 0x68
	UNavArea* Agent5Area; // 0x70
	UNavArea* Agent6Area; // 0x78
	UNavArea* Agent7Area; // 0x80
	UNavArea* Agent8Area; // 0x88
	UNavArea* Agent9Area; // 0x90
	UNavArea* Agent10Area; // 0x98
	UNavArea* Agent11Area; // 0xa0
	UNavArea* Agent12Area; // 0xa8
	UNavArea* Agent13Area; // 0xb0
	UNavArea* Agent14Area; // 0xb8
	UNavArea* Agent15Area; // 0xc0
};

struct UAnimBP_ImprovisedPistol50cal_C : UWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x300
	FAnimNode_Root AnimGraphNode_Root; // 0x308
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x338
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x380
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x3c8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x410
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x458
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x508
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x530
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x558
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x580
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x6d8
};

struct UMaterialExpressionArctangent2Fast : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct ADebugCameraController : APlayerController {
	char bShowSelectedInfo : 1; // 0x570
	char bIsFrozenRendering : 1; // 0x570
	char bIsOrbitingSelectedActor : 1; // 0x570
	char bOrbitPivotUseCenter : 1; // 0x570
	char bEnableBufferVisualization : 1; // 0x570
	char bEnableBufferVisualizationFullMode : 1; // 0x570
	char bIsBufferVisualizationInputSetup : 1; // 0x570
	char bLastDisplayEnabled : 1; // 0x570
	UDrawFrustumComponent* DrawFrustum; // 0x578
	AActor* SelectedActor; // 0x580
	UPrimitiveComponent* SelectedComponent; // 0x588
	FHitResult SelectedHitPoint; // 0x590
	APlayerController* OriginalControllerRef; // 0x620
	UPlayer* OriginalPlayer; // 0x628
	float SpeedScale; // 0x630
	float InitialMaxSpeed; // 0x634
	float InitialAccel; // 0x638
	float InitialDecel; // 0x63c
};

struct UDistributionFloatUniformCurve : UDistributionFloat {
	FInterpCurveVector2D ConstantCurve; // 0x38
};

struct UFontImportOptions : UObject {
	FFontImportOptionsData Data; // 0x28
};

struct ALocationObjective : AObjective {
	TSoftObjectPtr<ALocationTrigger> _locationTrigger; // 0x320
	ALocationMarker* _locationMarkerClass; // 0x348
	bool _shouldRemoveObjectiveItem; // 0x350
	AItem* _objectiveItemToRemove; // 0x358
	AActor* _locationMarker; // 0x360
};

struct UMaterialExpressionHairAttributes : UMaterialExpression {
	char bUseTangentSpace : 1; // 0x40
};

struct USoundNodeSoundClass : USoundNode {
	USoundClass* SoundClassOverride; // 0x48
};

struct UNiagaraDataInterfaceVelocityGrid : UNiagaraDataInterfaceRWBase {
	FIntVector GridSize; // 0xd8
};

struct UOceanCollisionComponent : UPrimitiveComponent {
	UBodySetup* CachedBodySetup; // 0x448
};

struct UBTService_DefaultFocus : UBTService_BlackboardBase {
	char FocusPriority; // 0x98
};

struct ULakeGenerator : UWaterBodyGenerator {
	UStaticMeshComponent* LakeMeshComp; // 0x28
	UBoxComponent* LakeCollisionComp; // 0x30
	ULakeCollisionComponent* LakeCollision; // 0x38
};

struct UPrisonerBodySymptom : UPrisonerBodyConditionOrSymptom {
	TArray<UPrisonerBodySymptomCause*> _causes; // 0xa0
	UPrisonerBodySymptomNotifier* _notifier; // 0xb0
};

struct APaperCharacter : ACharacter {
	UPaperFlipbookComponent* Sprite; // 0x4c8
};

struct UGameEventPanelWidget : UDesignableUserWidget {
	AGameEventManager* _GEManager; // 0x278
};

struct UNiagaraDataInterfaceCurveBase : UNiagaraDataInterface {
	TArray<float> ShaderLUT; // 0x38
	float LUTMinTime; // 0x48
	float LUTMaxTime; // 0x4c
	float LUTInvTimeRange; // 0x50
	float LUTNumSamplesMinusOne; // 0x54
	char bUseLUT : 1; // 0x58
	char bExposeCurve : 1; // 0x58
	FName ExposedName; // 0x5c
	UTexture2D* ExposedTexture; // 0x68
};

struct UCompassItemTag : UBaseItemTag {
	char CompassLevel; // 0x30
};

struct UNavCollision : UNavCollisionBase {
	TArray<FNavCollisionCylinder> CylinderCollision; // 0x80
	TArray<FNavCollisionBox> BoxCollision; // 0x90
	UNavArea* AreaClass; // 0xa0
	char bGatherConvexGeometry : 1; // 0xa8
	char bCreateOnClient : 1; // 0xa8
};

struct ULastActorInfo : UObject {
	AActor* Actor; // 0x38
	UStaticMesh* StaticMesh; // 0x40
	UProceduralShapeToolProperties* ShapeSettings; // 0x48
	UNewMeshMaterialProperties* MaterialProperties; // 0x50
};

struct UDistributionVectorUniformCurve : UDistributionVector {
	FInterpCurveTwoVectors ConstantCurve; // 0x38
	char bLockAxes1 : 1; // 0x50
	char bLockAxes2 : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes[0x2]; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x56
	char bUseExtremes : 1; // 0x5c
};

struct ANavigationTestingActor : AActor {
	UCapsuleComponent* CapsuleComponent; // 0x230
	UNavigationInvokerComponent* InvokerComponent; // 0x238
	char bActAsNavigationInvoker : 1; // 0x240
	FNavAgentProperties NavAgentProps; // 0x248
	FVector QueryingExtent; // 0x278
	ANavigationData* MyNavData; // 0x288
	FVector ProjectedLocation; // 0x290
	char bProjectedLocationValid : 1; // 0x29c
	char bSearchStart : 1; // 0x29c
	float CostLimitFactor; // 0x2a0
	float MinimumCostLimit; // 0x2a4
	char bBacktracking : 1; // 0x2a8
	char bUseHierarchicalPathfinding : 1; // 0x2a8
	char bGatherDetailedInfo : 1; // 0x2a8
	char bDrawDistanceToWall : 1; // 0x2a8
	char bShowNodePool : 1; // 0x2a8
	char bShowBestPath : 1; // 0x2a8
	char bShowDiffWithPreviousStep : 1; // 0x2a8
	char bShouldBeVisibleInGame : 1; // 0x2a8
	ENavCostDisplay CostDisplayMode; // 0x2ac
	FVector2D TextCanvasOffset; // 0x2b0
	char bPathExist : 1; // 0x2b8
	char bPathIsPartial : 1; // 0x2b8
	char bPathSearchOutOfNodes : 1; // 0x2b8
	float PathfindingTime; // 0x2bc
	float PathCost; // 0x2c0
	int32_t PathfindingSteps; // 0x2c4
	ANavigationTestingActor* OtherActor; // 0x2c8
	UNavigationQueryFilter* FilterClass; // 0x2d0
	int32_t ShowStepIndex; // 0x2d8
	float OffsetFromCornersDistance; // 0x2dc
};

struct UGroupEdgeInsertionOperatorFactory : UObject {
	UGroupEdgeInsertionTool* Tool; // 0x30
};

struct UConZSettingsMenu : UBaseMenu {
	UTabGroup* _coreMenuTabButtons; // 0x260
	UWidgetSwitcher* _coreMenu; // 0x268
	UPanelWidget* _controlButtonsPanel; // 0x270
	UUserWidget* _tabButtonClass; // 0x278
};

struct UNodeMappingContainer : UObject {
	TMap<FName, FNodeItem> SourceItems; // 0x28
	TMap<FName, FNodeItem> TargetItems; // 0x78
	TMap<FName, FName> SourceToTarget; // 0xc8
	TSoftObjectPtr<UObject> SourceAsset; // 0x118
	TSoftObjectPtr<UObject> TargetAsset; // 0x140
};

struct UOffsetWeightMapSetProperties : UWeightMapSetProperties {
	float MinDistance; // 0x80
};

struct UBTDecorator_SetTagCooldown : UBTDecorator {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
};

struct URangedWeaponsSkill : UStrengthSkill {
	float _clearMalfunctionBadRound; // 0xb8
	float _clearMalfunctionStovePipe; // 0xbc
	float _clearMalfunctionRoundNotLoaded; // 0xc0
	float _clearMalfunctionDoubleFeed; // 0xc4
	float _clearMalfunctionStuckBullet; // 0xc8
	float _clearMalfunctionClipPartiallyEjected; // 0xcc
	FRangedWeaponSkillParametersPerSkillLevel NoSkillParameters; // 0xd0
	FRangedWeaponSkillParametersPerSkillLevel BasicSkillParameters; // 0xd4
	FRangedWeaponSkillParametersPerSkillLevel MediumSkillParameters; // 0xd8
	FRangedWeaponSkillParametersPerSkillLevel AdvancedSkillParameters; // 0xdc
	FRangedWeaponSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0xe0
};

struct AZombieKamikazeDummyTrap : ATrapItem {
	TWeakObjectPtr<UZombieKamikazeComponent> _owningComponent; // 0x910
};

struct UGroupEdgeInsertionProperties : UInteractiveToolPropertySet {
	EGroupEdgeInsertionMode InsertionMode; // 0x60
	bool bWireframe; // 0x64
	double VertexTolerance; // 0x68
};

struct UPerformanceMonitor_C : UMonitoredWindowsContent_C {
	UMinimizableWidget_C* MinimizableWidgetPerformanceMonitor; // 0x2f8
	UMinimizableWidget_C* MinimizableWidgetPerformanceStats; // 0x300
	UMinimizableWidget_C* MinimizableWidgetSkillModifiers; // 0x308
	bool _isAlarmOn; // 0x310
};

struct ULODSyncComponent : UActorComponent {
	int32_t NumLODs; // 0xb0
	int32_t ForcedLOD; // 0xb4
	TArray<FComponentSync> ComponentsToSync; // 0xb8
	TMap<FName, FLODMappingData> CustomLODMapping; // 0xc8
	int32_t CurrentLOD; // 0x118
	int32_t CurrentNumLODs; // 0x11c
	TArray<UPrimitiveComponent*> DriveComponents; // 0x120
	TArray<UPrimitiveComponent*> SubComponents; // 0x130
};

struct UAnimBP_SVD_C : UWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x300
	FAnimNode_Root AnimGraphNode_Root; // 0x308
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x338
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x380
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x4d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x558
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x5f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x678
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x728
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x7a8
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x828
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x870
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x8b8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x900
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x9b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x9d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0xa00
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0xa28
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0xad8
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0xb20
	FAnimNode_Slot AnimGraphNode_Slot; // 0xb68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0xbb0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0xbd8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0xc00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0xc28
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xcc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xd68
};

struct UBruisingComponent : UActorComponent {
	UBruisingData* BruisingData; // 0xb0
	bool FadeBruises; // 0xb8
	float BruisesLifeTime; // 0xbc
	float BruisesFadeUpdateInterval; // 0xc0
	UTextureRenderTarget2D* _renderTargetByLayer[0x3]; // 0xc8
};

struct UCCMainWidget : UUserWidget {
	UCCBodyTypeTriangleWidget* _bodyTypeTriangleWidget; // 0x260
};

struct UPrisonerShotsFiredTrackerComponent : UActorComponent {
	int32_t _repNumShotsFired; // 0xb4
};

struct UObjectivesContainerWidget : UUserWidget {
	UMissionContainerWidget* _mainMissionContainerWidget; // 0x260
	UMissionContainerWidget* _sideMissionContainerWidget; // 0x268
	UMissionContainerWidget* _tutorialMissionContainerWidget; // 0x270
};

struct UGameplayTask_SpawnActor : UGameplayTask {
	FMulticastInlineDelegate Success; // 0x68
	FMulticastInlineDelegate DidNotSpawn; // 0x78
	AActor* ClassToSpawn; // 0xa0
};

struct UInputAxisDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputAxisDelegateBinding> InputAxisDelegateBindings; // 0x28
};

struct UAIPerceptionComponent : UActorComponent {
	TArray<UAISenseConfig*> SensesConfig; // 0xb0
	UAISense* DominantSense; // 0xc0
	AAIController* AIOwner; // 0xd8
	FMulticastInlineDelegate OnPerceptionUpdated; // 0x160
	FMulticastInlineDelegate OnTargetPerceptionUpdated; // 0x170
	FMulticastInlineDelegate OnTargetPerceptionInfoUpdated; // 0x180
};

struct UDatasmithAssetUserData : UAssetUserData {
	TMap<FName, FString> MetaData; // 0x28
};

struct UUI_Metabolism_PerformanceData_C : UMetabolismPerformanceDataPanel {
	FPointerToUberGraphFrame UberGraphFrame; // 0x300
	UUI_CollapsableContainer_C* UI_CollapsableContainer; // 0x308
};

struct UPaddleItemTag : UBaseItemTag {
	UBlendSpace* PaddlingLHandAnimation; // 0x30
	UBlendSpace* PaddlingRHandAnimation; // 0x38
	UAnimSequence* PaddlingLToRAnimation; // 0x40
	UAnimSequence* PaddlingRToLAnimation; // 0x48
};

struct UInterpTrackInstVectorProp : UInterpTrackInstProperty {
	FVector ResetVector; // 0x58
};

struct UARGetCandidateObjectAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct APAX_GameEventManager : AGameEventManager {
	AGameEventLocationMarker* EventMarker; // 0x260
	float TimeBetweenEvents; // 0x268
	bool ForceJoinOnEventStart; // 0x26c
	ADropZoneEquipmentTable* ShootingRangeTableClass; // 0x270
	ADropZoneEquipmentTable* ShootingRangeTable; // 0x278
	FVector ShootingRangeTableOffset; // 0x280
};

struct UDisplaceMeshSineWaveProperties : UInteractiveToolPropertySet {
	float SineWaveFrequency; // 0x60
	float SineWavePhaseShift; // 0x64
	FVector SineWaveDirection; // 0x68
};

struct UBorderSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UVehicleAnimInstance : UAnimInstance {
	UWheeledVehicleMovementComponent* WheeledVehicleMovementComponent; // 0xa40
};

struct UDistributionVectorUniform : UDistributionVector {
	FVector Max; // 0x38
	FVector Min; // 0x44
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x55
	char bUseExtremes : 1; // 0x58
};

struct AFlareTrapItem : ATrapItem {
	UAkAudioEvent* _triggerSound; // 0x910
	float _detonationDelay; // 0x918
	AProjectile* _projectileClass; // 0x920
	FVector _projectileLocation; // 0x928
	FRotator _projectileRotation; // 0x934
	float _projectileMuzzleVelocity; // 0x940
	float _projectileLifetime; // 0x944
};

struct UTileView : UListView {
	float EntryHeight; // 0x368
	float EntryWidth; // 0x36c
	EListItemAlignment TileAlignment; // 0x370
	bool bWrapHorizontalNavigation; // 0x371
};

struct ABP_WeaponBullet_DildoBolt_C : AProjectileArrow {
	UParticleSystemComponent* P_ArrowTrail; // 0x458
};

struct UInterpTrackMoveAxis : UInterpTrackFloatBase {
	EInterpMoveAxis MoveAxis; // 0x90
	FInterpLookupTrack LookupTrack; // 0x98
};

struct AInteractionFilterVolume : AVolume {
	TArray<EInteractionType> InteractionsToDisable; // 0x258
};

struct ABP_MainMenuGameMode_C : AMainMenuGameMode {
	FPointerToUberGraphFrame UberGraphFrame; // 0x370
	USceneComponent* DefaultSceneRoot; // 0x378
	UMenuHelpers* MenuHelpers; // 0x380
};

struct AController : AActor {
	APlayerState* PlayerState; // 0x228
	FMulticastInlineDelegate OnInstigatedAnyDamage; // 0x238
	FName StateName; // 0x248
	APawn* Pawn; // 0x250
	ACharacter* Character; // 0x260
	USceneComponent* TransformComponent; // 0x268
	FRotator ControlRotation; // 0x288
	char bAttachToPawn : 1; // 0x294
};

struct UUserDefinedEnum : UEnum {
	TMap<FName, FText> DisplayNameMap; // 0x60
};

struct UEditableGameplayTagQueryExpression_AnyExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct ABP_M1_Clip_C : AWeaponAttachmentMagazine {
	FPointerToUberGraphFrame UberGraphFrame; // 0x880
	UTexture2D* EmptyIcon; // 0x888
	FInteractionStruct EquipInteraction; // 0x890
	TArray<FInteractionStruct> ReturnInteraction; // 0x908
	TArray<FAmmoTypeVisuals> AmmunitionVisuals; // 0x918
	UTexture2D* InventoryIconToSet; // 0x928
	UTexture2D* InventoryIconInHandsToSet; // 0x930
	bool VisualsFound; // 0x938
};

struct UProgressWidgetStyle : USlateWidgetStyleContainerBase {
	FProgressBarStyle ProgressBarStyle; // 0x30
};

struct UGameplayTasksComponent : UActorComponent {
	char bIsNetDirty : 1; // 0xbc
	TArray<UGameplayTask*> SimulatedTasks; // 0xc0
	TArray<UGameplayTask*> TaskPriorityQueue; // 0xd0
	TArray<UGameplayTask*> TickingTasks; // 0xf0
	TArray<UGameplayTask*> KnownTasks; // 0x100
	FMulticastInlineDelegate OnClaimedResourcesChange; // 0x110
};

struct UTextureRenderTargetCube : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	FLinearColor ClearColor; // 0xe4
	EPixelFormat OverrideFormat; // 0xf4
	char bHDR : 1; // 0xf5
	char bForceLinearGamma : 1; // 0xf5
};

struct ULevelVariantSets : UObject {
	UObject* DirectorClass; // 0x28
	TArray<UVariantSet*> VariantSets; // 0x30
};

struct USizeBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UMeshInspectorTool : USingleSelectionTool {
	UMeshInspectorProperties* Settings; // 0x88
	UExistingMeshMaterialProperties* MaterialSettings; // 0x90
	UPreviewMesh* PreviewMesh; // 0xa0
	ULineSetComponent* DrawnLineSet; // 0xa8
	UMaterialInterface* DefaultMaterial; // 0xb0
};

struct UMovieSceneCameraShakeSourceTriggerSection : UMovieSceneSection {
	FMovieSceneCameraShakeSourceTriggerChannel Channel; // 0xe8
};

struct UAdminCommand_ListSpawnedVehicles : UAdminCommand {
	FGameplayTagContainer _vehicleSpawnGroupsByCategory[0x8]; // 0x80
};

struct UDynamicMeshBrushTool : UBaseBrushTool {
	UPreviewMesh* PreviewMesh; // 0x1c0
};

struct UWaypointScreenWidget : UDesignableUserWidget {
	UWaypointWidget* WaypointClass; // 0x278
};

struct UMaterialExpressionAtmosphericFogColor : UMaterialExpression {
	FExpressionInput WorldPosition; // 0x40
};

struct URevolveBoundaryOperatorFactory : UObject {
	URevolveBoundaryTool* RevolveBoundaryTool; // 0x30
};

struct UAISenseConfig_Damage : UAISenseConfig {
	UAISense_Damage* Implementation; // 0x48
};

struct UMovieScenePrimitiveMaterialSection : UMovieSceneSection {
	FMovieSceneObjectPathChannel MaterialChannel; // 0xe8
};

struct UButtonSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UDrinkItemState : UFoodItemState {
	float RemainingNutrientsCoefficient; // 0x110
	float Water; // 0x114
	float Sodium; // 0x118
};

struct UARPointComponent : UARComponent {
	FARPointUpdatePayload ReplicatedPayload; // 0x278
};

struct UMovieSceneSkeletalAnimationSection : UMovieSceneSection {
	FMovieSceneSkeletalAnimationParams Params; // 0xe8
	UAnimSequence* AnimSequence; // 0x1c0
	UAnimSequenceBase* Animation; // 0x1c8
	float StartOffset; // 0x1d0
	float EndOffset; // 0x1d4
	float PlayRate; // 0x1d8
	char bReverse : 1; // 0x1dc
	FName SlotName; // 0x1e0
	FVector StartLocationOffset; // 0x1e8
	FRotator StartRotationOffset; // 0x1f4
	bool bMatchWithPrevious; // 0x200
	FName MatchedBoneName; // 0x204
	FVector MatchedLocationOffset; // 0x20c
	FRotator MatchedRotationOffset; // 0x218
	bool bMatchTranslation; // 0x224
	bool bMatchIncludeZHeight; // 0x225
	bool bMatchRotationYaw; // 0x226
	bool bMatchRotationPitch; // 0x227
	bool bMatchRotationRoll; // 0x228
};

struct UMediaTimeStampInfo : UObject {
	FTimespan Time; // 0x28
	int64_t SequenceIndex; // 0x30
};

struct UUI_CustomBorder_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Bottom; // 0x268
	UImage* Left; // 0x270
	UImage* Right; // 0x278
	UImage* Top; // 0x280
	float BorderThickness; // 0x288
	FLinearColor BorderColor; // 0x28c
};

struct AEmitterCameraLensEffectBase : AEmitter {
	UParticleSystem* PS_CameraEffect; // 0x270
	UParticleSystem* PS_CameraEffectNonExtremeContent; // 0x278
	APlayerCameraManager* BaseCamera; // 0x280
	FTransform RelativeTransform; // 0x290
	float BaseFOV; // 0x2c0
	char bAllowMultipleInstances : 1; // 0x2c4
	char bResetWhenRetriggered : 1; // 0x2c4
	TArray<AEmitterCameraLensEffectBase*> EmittersToTreatAsSame; // 0x2c8
	float DistFromCamera; // 0x2d8
};

struct UMeshSelectionToolProperties : UInteractiveToolPropertySet {
	EMeshSelectionToolPrimaryMode SelectionMode; // 0x60
	float AngleTolerance; // 0x64
	bool bHitBackFaces; // 0x68
	bool bShowWireframe; // 0x69
	EMeshFacesColorMode FaceColorMode; // 0x6c
};

struct UGeometryCache : UObject {
	TArray<UMaterialInterface*> Materials; // 0x30
	TArray<UGeometryCacheTrack*> Tracks; // 0x40
	int32_t StartFrame; // 0x60
	int32_t EndFrame; // 0x64
};

struct ABeer_Waitapu_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UReplenishableResourceComponent : UInstancedStaticMeshComponent {
	FReplenishableResourceDescription _replenishableResourceDescription; // 0x588
	FFillItemWithReplenishableResourceInteractionData _replenishableResourceFillItemInteractionData; // 0x620
	float QuantityPerDrink; // 0x660
	float Salinity; // 0x664
	UAkAudioEvent* StartDrinkingAudioEvent; // 0x668
	UAkAudioEvent* StopDrinkingAudioEvent; // 0x670
	FName _replenishableResourceAmountMaterialParameterName; // 0x678
};

struct UVICODynamicsSettings : UObject {
	int32_t ReserveParticleBudget; // 0x28
	int32_t NumberOfThreadsToUse; // 0x2c
	bool EnableSelfCollision; // 0x30
	bool EnablePhysXSceneCollision; // 0x31
	bool PerformExtraCollisionResolutionLoop; // 0x32
	bool EnableExplicitRigidBodyCollision; // 0x33
	int32_t SimulationFramerate; // 0x34
	bool RunSimulationOnWorkerThread; // 0x38
	int32_t WorkerThreadCoreAffinity; // 0x3c
	int32_t SimulationIterations; // 0x40
	int32_t ConstraintIterations; // 0x44
	bool ConstrainSimulationTo2DPlane; // 0x48
	FVector PlaneOrigin; // 0x4c
	FVector PlaneNormal; // 0x58
	char bCachePerFrameResults : 1; // 0x64
	char bCacheOnlyCollisionsWithStaticRigidBodies : 1; // 0x64
	char bCacheNonHitsAlso : 1; // 0x64
	char DrawCollisionDebug : 1; // 0x64
	char bShowOnScreenStats : 1; // 0x64
};

struct AGib : AActor {
	UStaticMeshComponent* MeshComponent; // 0x220
	float ShrinkFactor; // 0x228
	float ImpulseMultiplier; // 0x22c
};

struct UBaseItemWidget : UDesignableUserWidget {
	UBaseItemContainerWidget* ParentInventory; // 0x278
	int32_t Width; // 0x288
	int32_t Height; // 0x28c
	UImage* _imageWidget; // 0x290
};

struct UTransformMeshesToolProperties : UInteractiveToolPropertySet {
	ETransformMeshesTransformMode TransformMode; // 0x60
	bool bSetPivot; // 0x61
	bool bEnableSnapDragging; // 0x62
	ETransformMeshesSnapDragSource SnapDragSource; // 0x63
	ETransformMeshesSnapDragRotationMode RotationMode; // 0x64
};

struct AGlassBottle01_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UWeaponAttachmentMagazineState : UWeaponAttachmentState {
	TArray<FAmmunitionData> ammoData; // 0xf8
};

struct AGameEventBorder : AActor {
	UStaticMeshComponent* Mesh; // 0x220
	UMaterialInstanceDynamic* Material; // 0x228
	UChildActorComponent* SoundSpline; // 0x230
	UAkAudioEvent* AudioEvent; // 0x238
	EGameEventBorderState _state; // 0x240
	float _desiredRadius; // 0x244
	FVector _desiredOffset; // 0x24c
	float _desiredHeat; // 0x264
	float _radiusChangeSpeed; // 0x26c
	float _offsetChangeSpeed; // 0x270
	float _heatChangeSpeed; // 0x274
	bool _collisionEnabled; // 0x278
	bool _blockPawns; // 0x279
};

struct UHoleFillStatisticsProperties : UInteractiveToolPropertySet {
	FString InitialHoles; // 0x60
	FString SelectedHoles; // 0x70
	FString SuccessfulFills; // 0x80
	FString FailedFills; // 0x90
	FString RemainingHoles; // 0xa0
};

struct UUniformScalar : UFieldNodeFloat {
	float Magnitude; // 0xb0
};

struct ACan02_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UBP_M1_OpenRemoveClipInsertClip_C : URemoveMagazineInsertMagazine {
	FPointerToUberGraphFrame UberGraphFrame; // 0x90
};

struct UFishingTrophyWidget : UUserWidget {
	UTextBlock* _fishNameText; // 0x290
	UTextBlock* _fishWeightText; // 0x298
	UTextBlock* _fishSizeText; // 0x2a0
	UTextBlock* _keepFishHotkeyText; // 0x2a8
	UTextBlock* _releaseFishHotkeyText; // 0x2b0
	UButton* _keepButton; // 0x2b8
	UButton* _releaseButton; // 0x2c0
};

struct ASkyLight : AInfo {
	USkyLightComponent* LightComponent; // 0x220
	char bEnabled : 1; // 0x228
};

struct ASoundSpline : ASpline {
	float MinCameraLocationDeltaForUpdate; // 0x230
	float WorldStreamedCheckInterval; // 0x234
	float MaxCameraDistance; // 0x238
	UAkAudioEvent* AudioEvent; // 0x240
	UAkAudioEvent* InsideSplineAudioEvent; // 0x248
	UAkAudioEvent* OutsideSplineAudioEvent; // 0x250
};

struct USpaceCurveDeformationMechanicPropertySet : UInteractiveToolPropertySet {
	ESpaceCurveControlPointTransformMode TransformMode; // 0x60
	ESpaceCurveControlPointOriginMode TransformOrigin; // 0x64
	float Softness; // 0x68
	ESpaceCurveControlPointFalloffType SoftFalloff; // 0x6c
};

struct ACraftingObjective : ARequirementObjective {
	TArray<TSoftClassPtr<UObject>> _targetItems; // 0x330
};

struct UMaterialExpressionSobol : UMaterialExpression {
	FExpressionInput Cell; // 0x40
	FExpressionInput Index; // 0x54
	FExpressionInput Seed; // 0x68
	uint32_t ConstIndex; // 0x7c
	FVector2D ConstSeed; // 0x80
};

struct UPullKelvinletBrushOpProps : UBaseKelvinletBrushOpProps {
	float Falloff; // 0x70
	float Depth; // 0x74
};

struct UPrisonerBodyConditionOrSymptomSideEffect_Damage : UPrisonerBodyConditionOrSymptomSideEffect {
	FRuntimeFloatCurve _damageVsSeverity; // 0x30
	FRuntimeFloatCurve _damageRatioVsSeverity; // 0xb8
	bool _useBaseMaxHealthInsteadOfMaxHealthToComputeDamageRatio; // 0x140
	bool _useSeverityToDetermineLifeThreateningStatus; // 0x141
	FFloatRange _severityRangeToBeLifeThreatening; // 0x144
};

struct UAsyncActionLoadPrimaryAssetClassList : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate completed; // 0x78
};

struct UEditUVIslandsTool : UMeshSurfacePointTool {
	UExistingMeshMaterialProperties* MaterialSettings; // 0xc8
	UMaterialInstanceDynamic* CheckerMaterial; // 0xd0
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0xd8
	UPolygonSelectionMechanic* SelectionMechanic; // 0xe0
	UMultiTransformer* MultiTransformer; // 0xf0
};

struct UGameUserSettings : UObject {
	bool bUseVSync; // 0x28
	bool bUseDynamicResolution; // 0x29
	uint32_t ResolutionSizeX; // 0x80
	uint32_t ResolutionSizeY; // 0x84
	uint32_t LastUserConfirmedResolutionSizeX; // 0x88
	uint32_t LastUserConfirmedResolutionSizeY; // 0x8c
	int32_t WindowPosX; // 0x90
	int32_t WindowPosY; // 0x94
	int32_t FullscreenMode; // 0x98
	int32_t LastConfirmedFullscreenMode; // 0x9c
	int32_t PreferredFullscreenMode; // 0xa0
	uint32_t Version; // 0xa4
	int32_t AudioQualityLevel; // 0xa8
	int32_t LastConfirmedAudioQualityLevel; // 0xac
	float FrameRateLimit; // 0xb0
	int32_t DesiredScreenWidth; // 0xb8
	bool bUseDesiredScreenHeight; // 0xbc
	int32_t DesiredScreenHeight; // 0xc0
	int32_t LastUserConfirmedDesiredScreenWidth; // 0xc4
	int32_t LastUserConfirmedDesiredScreenHeight; // 0xc8
	float LastRecommendedScreenWidth; // 0xcc
	float LastRecommendedScreenHeight; // 0xd0
	float LastCPUBenchmarkResult; // 0xd4
	float LastGPUBenchmarkResult; // 0xd8
	TArray<float> LastCPUBenchmarkSteps; // 0xe0
	TArray<float> LastGPUBenchmarkSteps; // 0xf0
	float LastGPUBenchmarkMultiplier; // 0x100
	bool bUseHDRDisplayOutput; // 0x104
	int32_t HDRDisplayOutputNits; // 0x108
	FMulticastInlineDelegate OnGameUserSettingsUINeedsUpdate; // 0x110
};

struct UAnimNotifyState_Fade : UAnimNotifyState {
	float _fadeOutRatio; // 0x30
	float _fadeInRatio; // 0x34
	AnimNotifyState_FadeForAction _forAction; // 0x38
};

struct UConZBoatMountSlot : UActorComponent {
	FName _socketName; // 0xb8
	TArray<FMountSlotEntryPoint> _entryPoints; // 0xc0
	UAkAudioEvent* _mountAudioEvent; // 0xd0
	UAkAudioEvent* _unmountAudioEvent; // 0xd8
	bool _isReachableFromSky; // 0xe0
	EMotionIntensity _mountingMotionIntensity; // 0xe1
	EMotionIntensity _unmountingMotionIntensity; // 0xe2
	UObject* _mountee; // 0xe8
	UObject* _reservee; // 0xf0
	bool _canMounteeBeAttackedByMelee; // 0xf8
	TArray<UPhysicalMaterial*> _interactionZoneMaterials; // 0x100
	EVehicleSeatType _vehicleSeatType; // 0x110
	EBoatMountControlType _mountControlType; // 0x111
};

struct UConZAssetManager : UAssetManager {
	TArray<FImageAssetToLoad> _imageAssetsToLoad; // 0x458
	TArray<UPrisonerResponseIdle*> _prisonerResponseIdleCDOs; // 0x4b8
	TArray<UPrisonerBodyEffect*> _autoAddablePrisonerBodyEffectCDOs; // 0x4d0
};

struct UUpgradeSlotWidget : UDesignableUserWidget {
	UVerticalBox* _buyableUpgradesBox; // 0x278
	UImage* _itemIcon; // 0x280
	UImage* _gridSymbol; // 0x288
	UImage* _backgroundImage; // 0x290
	UImage* _defaultImage; // 0x298
	FLinearColor _regularColour; // 0x2a0
	FLinearColor _dropUnavailableColour; // 0x2b0
	FLinearColor _dropAvailableColour; // 0x2c0
	ESlotType _slotType; // 0x2d0
	TArray<AItem*> _buyableUpgrades; // 0x2e0
};

struct URemeshMeshToolProperties : URemeshProperties {
	int32_t TargetTriangleCount; // 0x70
	ERemeshSmoothingType SmoothingType; // 0x74
	bool bDiscardAttributes; // 0x75
	bool bShowWireframe; // 0x76
	bool bShowGroupColors; // 0x77
	ERemeshType RemeshType; // 0x78
	int32_t RemeshIterations; // 0x7c
	bool bUseTargetEdgeLength; // 0x80
	float TargetEdgeLength; // 0x84
	bool bReproject; // 0x88
};

struct AGameEventTransport : AActor {
	USphereComponent* Sphere; // 0x220
	UStaticMeshComponent* PodMesh; // 0x228
	UStaticMeshComponent* TargetMesh; // 0x230
	float TravelSpeed; // 0x238
	float TravelHeight; // 0x23c
	float HoverHeight; // 0x240
	float LargerRadius; // 0x244
	float SmallerRadius; // 0x248
	EGameEventTransportState _state; // 0x24c
	FVector _lastPosition; // 0x250
	FVector _targetPosition; // 0x25c
	float _blend; // 0x268
};

struct UBTDecorator_BlackboardBase : UBTDecorator {
	FBlackboardKeySelector BlackboardKey; // 0x68
};

struct USentryAnimInstance2 : UAnimInstance {
	float InterpolationSpeed; // 0x2b8
	float BlendInTime; // 0x2bc
	float BlendOutTime; // 0x2c0
	float GunsLerpFactor; // 0x2c4
	bool ShouldUseLUWalkStopAnimation; // 0x2c8
	float stoppingDistance; // 0x2cc
	bool _isSentryCompletelyInitialized; // 0x314
	bool _shouldAimWeapon; // 0x315
	bool _wantsToMove; // 0x316
	bool _previousWantsToMove; // 0x317
	ESentryMovementPace2 _movementPace; // 0x318
	float _actualCourseAngle; // 0x31c
	float _desiredCourseAngle; // 0x320
	float _desiredCoursePitchAngle; // 0x324
	float _angularVelocity; // 0x328
	FVector _velocity; // 0x32c
	float _speed; // 0x338
	FVector _forwardVector; // 0x33c
	bool _isFalling; // 0x348
	bool _isDead; // 0x349
	FVector _gunsLookAtLocation; // 0x34c
};

struct AGlobalGuardedZoneManager : AActor {
	TArray<FGuardedZoneManagerDescription> _guardedZoneManagers; // 0x238
	float _guardedZoneTickTime; // 0x250
	float _playerLogicTickTime; // 0x254
};

struct UNiagaraDataInterfaceRenderTargetVolume : UNiagaraDataInterfaceRWBase {
	FIntVector Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe4
	char bOverrideFormat : 1; // 0xe5
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTargetVolume*> ManagedRenderTargets; // 0x108
};

struct UPrisonerBodySymptom_Pain : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8
	FFloatInterval _painkillersAmountRatioToBeSuppressedVsConstitution; // 0xbc
};

struct ABP_Survival_BagCrafting_CraftBagObjective_C : ACraftingObjective {
	USceneComponent* DefaultSceneRoot; // 0x348
};

struct UInteractionContainerWidget_C : UInteractionContainerUserWidget {
	UUI_Border_C* Border; // 0x2c0
	UUI_Border_C* UI_Border; // 0x2c8
};

struct UEnvQueryTest : UEnvQueryNode {
	int32_t TestOrder; // 0x30
	EEnvTestPurpose TestPurpose; // 0x34
	FString TestComment; // 0x38
	EEnvTestFilterOperator MultipleContextFilterOp; // 0x48
	EEnvTestScoreOperator MultipleContextScoreOp; // 0x49
	EEnvTestFilterType FilterType; // 0x4a
	FAIDataProviderBoolValue BoolValue; // 0x50
	FAIDataProviderFloatValue FloatValueMin; // 0x88
	FAIDataProviderFloatValue FloatValueMax; // 0xc0
	EEnvTestScoreEquation ScoringEquation; // 0xf9
	EEnvQueryTestClamping ClampMinType; // 0xfa
	EEnvQueryTestClamping ClampMaxType; // 0xfb
	EEQSNormalizationType NormalizationType; // 0xfc
	FAIDataProviderFloatValue ScoreClampMin; // 0x100
	FAIDataProviderFloatValue ScoreClampMax; // 0x138
	FAIDataProviderFloatValue ScoringFactor; // 0x170
	FAIDataProviderFloatValue ReferenceValue; // 0x1a8
	bool bDefineReferenceValue; // 0x1e0
	char bWorkOnFloatValues : 1; // 0x1f0
};

struct ASearchGroundObjective : AObjective {
	TArray<AItem*> _itemToSearch; // 0x320
	int32_t _itemAmount; // 0x330
};

struct APrisonerHUD : AHUD {
	UHudWidget* HudWidget; // 0x310
	UDamageDirectionIndicator* DamageDirectionIndicator; // 0x318
	bool ShouldDrawCrosshair; // 0x320
	bool ShouldDrawScreenCenterDot; // 0x321
	UMaterialInterface* TacticsMaterial; // 0x328
	ULoadingIconWidget* LoadingIconWidget; // 0x330
	USpawnScreen* SpawnScreenWidget; // 0x338
	UWaypointScreenWidget* WaypointScreenWidget; // 0x340
	FMulticastInlineDelegate OnShouldShowExtendedWidgetTooltipChanged; // 0x348
	UFont* _HUDFont; // 0x358
	float _customMapBorderWidth; // 0x398
	FLinearColor _customMapBorderColor; // 0x39c
	UPrisonerUIDataController* _prisonerUIDataController; // 0x3b0
	UPrisonerUIDataController* _otherPrisonerUIDataController; // 0x3b8
	UVehicleUIDataController* _vehicleUIDataController; // 0x3c0
	UTraderMainUIController* _traderMainUIController; // 0x3c8
	UDesignableUserWidget* _scoreboardWidget; // 0x430
	bool _shouldDrawOtherPlayerLocations; // 0x44a
	bool _shouldDrawOtherPlayerInfo; // 0x44b
	bool _isLeftMouseButtonPressed; // 0x44c
	FMapHUDPrisonerObject _prisonerMapHUDObject; // 0x480
	FMapHUDHomeLocationObject _homeLocationMapHUDObject; // 0x4c0
	FMapHUDWorldEventsObject _worldEventsMapHUDObject; // 0x508
	FMapHUDOtherPlayersObject _otherPlayersMapHUDObjects; // 0x520
	FMapHUDDroneObject _droneMapHUDObject; // 0x5e0
	FMapHUDVehiclesObject _vehicleMapHUDObjects; // 0x618
	FMapHUDFlagsObject _flagMapHUDObjects; // 0x6f8
	UItemSplitWidget* _itemSplitWidget; // 0x7e8
};

struct UMetabolism_ICU_GraphWidget_SPO2 : UMetabolism_ICU_GraphWidget {
	UCurveFloat* TimeStretchCurveCurve; // 0x218
};

struct URuntimeVirtualTextureComponent : USceneComponent {
	TSoftObjectPtr<AActor> BoundsAlignActor; // 0x1f8
	bool bSetBoundsButton; // 0x220
	bool bSnapBoundsToLandscape; // 0x221
	URuntimeVirtualTexture* VirtualTexture; // 0x228
	bool bEnableScalability; // 0x230
	uint32_t ScalabilityGroup; // 0x234
	bool bHidePrimitives; // 0x238
	UVirtualTextureBuilder* StreamingTexture; // 0x240
	int32_t StreamLowMips; // 0x248
	bool bBuildStreamingMipsButton; // 0x24c
	bool bEnableCompressCrunch; // 0x24d
	bool bUseStreamingLowMipsInEditor; // 0x24e
	bool bBuildDebugStreamingMips; // 0x24f
};

struct UMaterialExpressionSpeedTree : UMaterialExpression {
	FExpressionInput GeometryInput; // 0x40
	FExpressionInput WindInput; // 0x54
	FExpressionInput LODInput; // 0x68
	FExpressionInput ExtraBendWS; // 0x7c
	ESpeedTreeGeometryType GeometryType; // 0x90
	ESpeedTreeWindType WindType; // 0x91
	ESpeedTreeLODType LODType; // 0x92
	float BillboardThreshold; // 0x94
	bool bAccurateWindVelocities; // 0x98
};

struct USmoothMeshTool : UBaseMeshProcessingTool {
	USmoothMeshToolProperties* SmoothProperties; // 0x400
	UIterativeSmoothProperties* IterativeProperties; // 0x408
	UDiffusionSmoothProperties* DiffusionProperties; // 0x410
	UImplicitSmoothProperties* ImplicitProperties; // 0x418
	USmoothWeightMapSetProperties* WeightMapProperties; // 0x420
};

struct AHeatSourceMarker : AActor {
	USceneComponent* _sceneComponent; // 0x228
	FHeatSourceParameters _heatSourceParameters; // 0x230
};

struct ABP_WeaponBullet_ExplosiveBolt_C : AProjectileExplosiveArrow {
	UParticleSystemComponent* P_ArrowTrail; // 0x458
};

struct UNamedInterfaces : UObject {
	TArray<FNamedInterface> NamedInterfaces; // 0x28
	TArray<FNamedInterfaceDef> NamedInterfaceDefs; // 0x38
};

struct UCanvasRenderTarget2D : UTextureRenderTarget2D {
	FMulticastInlineDelegate OnCanvasRenderTargetUpdate; // 0x108
	TWeakObjectPtr<UWorld> World; // 0x118
	bool bShouldClearRenderTargetOnReceiveUpdate; // 0x120
};

struct UDrawPolyPathExtrudeProperties : UInteractiveToolPropertySet {
	EDrawPolyPathExtrudeDirection Direction; // 0x60
};

struct USoundNodeParamCrossFade : USoundNodeDistanceCrossFade {
	FName ParamName; // 0x58
};

struct UVoiceAudioComponent : UAudioComponent {
	UVoiceDecoder* VoiceDecoder; // 0x868
};

struct UWeaponAmmoDisplayWidget : UDesignableUserWidget {
	UTextBlock* _ammoCountText; // 0x278
	UImage* _ammoIcon; // 0x280
};

struct UWindDirectionalSourceComponent : USceneComponent {
	float Strength; // 0x1f8
	float Speed; // 0x1fc
	float MinGustAmount; // 0x200
	float MaxGustAmount; // 0x204
	float Radius; // 0x208
	char bPointWind : 1; // 0x20c
};

struct UScrollBox : UPanelWidget {
	FScrollBoxStyle WidgetStyle; // 0x120
	FScrollBarStyle WidgetBarStyle; // 0x348
	USlateWidgetStyleAsset* Style; // 0x818
	USlateWidgetStyleAsset* BarStyle; // 0x820
	EOrientation Orientation; // 0x828
	ESlateVisibility ScrollBarVisibility; // 0x829
	EConsumeMouseWheel ConsumeMouseWheel; // 0x82a
	FVector2D ScrollbarThickness; // 0x82c
	FMargin ScrollbarPadding; // 0x834
	bool AlwaysShowScrollbar; // 0x844
	bool AlwaysShowScrollbarTrack; // 0x845
	bool AllowOverscroll; // 0x846
	bool bAnimateWheelScrolling; // 0x847
	EDescendantScrollDestination NavigationDestination; // 0x848
	float NavigationScrollPadding; // 0x84c
	EScrollWhenFocusChanges ScrollWhenFocusChanges; // 0x850
	bool bAllowRightClickDragScrolling; // 0x851
	float WheelScrollMultiplier; // 0x854
	FMulticastInlineDelegate OnUserScrolled; // 0x858
};

struct UMaterialExpressionVectorParameter : UMaterialExpressionParameter {
	FLinearColor DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x68
	char PrimitiveDataIndex; // 0x69
};

struct UProceduralSphericalBoxToolProperties : UProceduralShapeToolProperties {
	float Radius; // 0x70
	int32_t Subdivisions; // 0x74
};

struct UEditMeshPolygonsTool : UMeshSurfacePointTool {
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0xd0
	UPolyEditCommonProperties* CommonProps; // 0xd8
	UEditMeshPolygonsToolActions* EditActions; // 0xe0
	UEditMeshPolygonsToolActions_Triangles* EditActions_Triangles; // 0xe8
	UEditMeshPolygonsToolEdgeActions* EditEdgeActions; // 0xf0
	UEditMeshPolygonsToolEdgeActions_Triangles* EditEdgeActions_Triangles; // 0xf8
	UEditMeshPolygonsToolUVActions* EditUVActions; // 0x100
	UPolyEditExtrudeProperties* ExtrudeProperties; // 0x108
	UPolyEditOffsetProperties* OffsetProperties; // 0x110
	UPolyEditInsetProperties* InsetProperties; // 0x118
	UPolyEditOutsetProperties* OutsetProperties; // 0x120
	UPolyEditCutProperties* CutProperties; // 0x128
	UPolyEditSetUVProperties* SetUVProperties; // 0x130
	UPolygonSelectionMechanic* SelectionMechanic; // 0x138
	UMultiTransformer* MultiTransformer; // 0x148
	UPolyEditPreviewMesh* EditPreview; // 0x4a0
	UPlaneDistanceFromHitMechanic* ExtrudeHeightMechanic; // 0x4b0
	USpatialCurveDistanceMechanic* CurveDistMechanic; // 0x4b8
	UCollectSurfacePathMechanic* SurfacePathMechanic; // 0x4c0
};

struct UNiagaraDataInterfaceCurlNoise : UNiagaraDataInterface {
	uint32_t Seed; // 0x38
};

struct UBTService_BlackboardBase : UBTService {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UInterpTrackInstAnimControl : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UAdminCommand_EquipParachute : UAdminCommand {
	AClothesItem* _parachuteClass; // 0x80
};

struct UPrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier : UPrisonerBodyConditionOrSymptomSideEffect {
	FRuntimeFloatCurve _modifierVsSeverity; // 0x30
};

struct ARadioItem : AItem {
	URadioComponent* _radioComponent; // 0x7c0
	UBasicGameResourceContainerComponent* _resourceContainerComponent; // 0x7c8
};

struct ATradeOutpostManager : AActor {
	UBillboardComponent* _sprite; // 0x220
	UTradingOutpostDescriptionDataAsset* _outpostDescription; // 0x228
	ETradeOutpostProsperityLevel _startingProsperityLevel; // 0x230
	TArray<ATradePost*> _assignedTradePosts; // 0x238
	TArray<ATradeOutpostBuilding*> _otherAssignedTradeOutpostBuildings; // 0x248
	float _tradePostRelevancyRange; // 0x25c
};

struct UEnvQueryTest_Volume : UEnvQueryTest {
	UEnvQueryContext* VolumeContext; // 0x1f8
	AVolume* VolumeClass; // 0x200
	char bDoComplexVolumeTest : 1; // 0x208
};

struct AZombie_01_Right_Arm_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f0
};

struct UGizmoConstantAxisSource : UObject {
	FVector Origin; // 0x30
	FVector Direction; // 0x3c
};

struct UUI_PlacedPlaceableIcon_C : UUserWidget {
	UImage* Image_bg_black; // 0x260
	UImage* Image_bg_white; // 0x268
	UImage* Image_icon; // 0x270
	UTexture2D* _icon; // 0x278
};

struct UConnectionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UJoinSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UMetabolism_ICU_TEMP_Stats : UMetabolism_ICU_Expandable_Stats {
	UTextBlock* _tempMinMax; // 0x278
	UTextBlock* _tempDeviation; // 0x280
};

struct UGenlockedTimecodeProvider : UTimecodeProvider {
	bool bUseGenlockToCount; // 0x30
};

struct UTrashCarouselWidget : UUserWidget {
	FSlateBrush _leftArrowIcon; // 0x290
	FSlateBrush _rightArrowIcon; // 0x318
	FSlateBrush _disabledLeftArrowIcon; // 0x3a0
	FSlateBrush _disabledRightArrowIcon; // 0x428
	UTextBlock* _selectionDisplay; // 0x4b0
	UButton* _leftArrow; // 0x4b8
	UButton* _rightArrow; // 0x4c0
	FSlateFontInfo _font; // 0x4c8
	TArray<FString> _possibleValues; // 0x520
	TArray<FText> _carouselValues; // 0x530
	bool _canWrap; // 0x540
};

struct UInteractionWidget_C : UInteractionUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e8
};

struct UUI_Metabolism_TreatmentPanel_C : UMetabolismTreatmentPanel {
	UImage* RecoveryBackground; // 0x298
	UImage* StabilizationBackground; // 0x2a0
	UImage* UntreatedBackground; // 0x2a8
};

struct ULiveLinkAnimationRoleToTransform : ULiveLinkFrameTranslator {
	FName BoneName; // 0x28
};

struct UCharacterImpactSoundsData : UDataAsset {
	FCharacterHeadImpactSoundsData Head; // 0x30
	FCharacterTorsoImpactSoundsData Torso; // 0x48
	FCharacterArmsImpactSoundsData Arms; // 0x60
	FCharacterLegsImpactSoundsData Legs; // 0x78
};

struct UMovieSceneAkAudioEventSection : UMovieSceneSection {
	UAkAudioEvent* Event; // 0x128
	bool RetriggerEvent; // 0x130
	int32_t ScrubTailLengthMs; // 0x134
	bool StopAtSectionEnd; // 0x138
	FString EventName; // 0x140
	float MaxSourceDuration; // 0x170
	FString MaxDurationSourceID; // 0x178
};

struct USkeletalMeshLODSettings : UDataAsset {
	FPerPlatformInt MinLOD; // 0x30
	FPerPlatformBool DisableBelowMinLodStripping; // 0x34
	bool bOverrideLODStreamingSettings; // 0x35
	FPerPlatformBool bSupportLODStreaming; // 0x36
	FPerPlatformInt MaxNumStreamedLODs; // 0x38
	FPerPlatformInt MaxNumOptionalLODs; // 0x3c
	TArray<FSkeletalMeshLODGroupSettings> LODGroups; // 0x40
};

struct UVerticalBoxSlot : UPanelSlot {
	FSlateChildSize Size; // 0x38
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UInterpTrackVectorBase : UInterpTrack {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UGizmoScaledTransformSource : UGizmoBaseTransformSource {
	TScriptInterface<IGizmoTransformSource> ChildTransformSource; // 0x48
};

struct ABP_M1_Bayonet_C : AWeaponAttachmentBayonet {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleKnife; // 0x7e0
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleBayonet; // 0x7e8
};

struct UAISense_Blueprint : UAISense {
	UUserDefinedStruct* ListenerDataType; // 0x80
	TArray<UAIPerceptionComponent*> ListenerContainer; // 0x88
	TArray<UAISenseEvent*> UnprocessedEvents; // 0x98
};

struct UChatNotificationDescription : UNotificationDescription {
	FString Message; // 0x40
	EChatType chatType; // 0x50
	bool shouldCopyToClientClipboard; // 0x51
};

struct UMetabolismSkillProgressionPanel : UUserWidget {
	UUserWidget* SkillProgressBarWidgetClass; // 0x260
	UTabGroup* _tabRow; // 0x268
	UTabButton* _tabButtonClass; // 0x270
	UWidgetSwitcher* _attributeSwitcher; // 0x278
	UMetabolismSkillProgressionTab* _STR_tab; // 0x280
	UMetabolismSkillProgressionTab* _CON_tab; // 0x288
	UMetabolismSkillProgressionTab* _DEX_tab; // 0x290
	UMetabolismSkillProgressionTab* _INT_tab; // 0x298
};

struct ANavigationObjectBase : AActor {
	UCapsuleComponent* CapsuleComponent; // 0x228
	UBillboardComponent* GoodSprite; // 0x230
	UBillboardComponent* BadSprite; // 0x238
	char bIsPIEPlayerStart : 1; // 0x240
};

struct UZombieAnimInstance2 : UAnimInstance {
	bool HasOwnerBegunPlay; // 0x2b8
	bool IsAlive; // 0x2b9
	bool IsInRagdoll; // 0x2ba
	bool IsDeadAndCompletelyInRagdoll; // 0x2bb
	EZombieStance stance; // 0x2bc
	bool IsStanceRelaxed; // 0x2bd
	bool IsStanceLying; // 0x2be
	bool IsStanceAlerted; // 0x2bf
	bool IsStanceCombat; // 0x2c0
	int32_t NumRelaxedIdleVariations; // 0x2c4
	int32_t RelaxedIdleVariationIndex; // 0x2c8
	FVector Acceleration; // 0x2cc
	bool WantsToMove; // 0x2d8
	FVector Velocity; // 0x2dc
	float Speed; // 0x2e8
	float SpeedXY; // 0x2ec
	float WalkStoppingDistance; // 0x2f0
	float WalkStoppingTime; // 0x2f4
	bool IsFalling; // 0x2f8
	bool IsJumping; // 0x2f9
	float JumpApex; // 0x2fc
	float JumpDuration; // 0x300
	FRotator AimOffset; // 0x304
	bool CanStartGoToLoop; // 0x310
	UAnimSequenceBase* RelaxedWalkLoopAnimation; // 0x318
	float RelaxedWalkLoopAnimationPlayRate; // 0x320
	UAnimSequenceBase* CombatRunStartAnimation; // 0x328
	float CombatRunStartAnimationPlayRate; // 0x330
	UAnimSequenceBase* CombatRunLoopAnimation; // 0x338
	float CombatRunLoopAnimationPlayRate; // 0x340
	UAnimSequenceBase* CombatRunStopAnimation; // 0x348
	float CombatRunStopAnimationStartTime; // 0x350
	float CombatRunStopAnimationPlayRate; // 0x354
	float MinUpperBodyBlendWeight; // 0x358
	float UpperBodyBlendMaxSpeedXY; // 0x35c
	float UpperBodyBlendWeight; // 0x360
};

struct UUI_InventoryPanelThirdIteration_C : UInventoryPanelThirdIteration {
	FPointerToUberGraphFrame UberGraphFrame; // 0x390
	UImage* Image_1; // 0x398
	UImage* Image_2; // 0x3a0
	UImage* Image_3; // 0x3a8
	UImage* Image_4; // 0x3b0
	UTextBlock* PlayerName; // 0x3b8
	USizeBox* SizeBox_1; // 0x3c0
	TMap<AItem*, UObject*> InventoryContainers; // 0x3c8
	TMap<AItem*, UScrollBoxSlot*> InventoryScrollSlots; // 0x418
};

struct URig : UObject {
	TArray<FTransformBase> TransformBases; // 0x30
	TArray<FNode> Nodes; // 0x40
};

struct UPrisonerUIDataImpl : UPrisonerUIData {
	UPrisonerSkillsUIData* SkillsUIData; // 0x840
	UPrisonerBodySimulationUIData* BodySimulationUIData; // 0x848
};

struct AProceduralFoliageVolume : AVolume {
	UProceduralFoliageComponent* ProceduralComponent; // 0x258
};

struct UConZBoatPassengerMountSlot : UConZBoatMountSlot {
	UBlendSpace* _idleAnimation; // 0x118
	UVehicleWeaponAimingParameters* _vehicleWeaponAimingParameters; // 0x120
};

struct UNetConnection : UPlayer {
	TArray<UChildConnection*> Children; // 0x48
	UNetDriver* Driver; // 0x58
	UPackageMap* PackageMapClass; // 0x60
	UPackageMap* PackageMap; // 0x68
	TArray<UChannel*> OpenChannels; // 0x70
	TArray<AActor*> SentTemporaries; // 0x80
	AActor* ViewTarget; // 0x90
	AActor* OwningActor; // 0x98
	int32_t MaxPacket; // 0xa0
	char InternalAck : 1; // 0xa4
	FUniqueNetIdRepl PlayerId; // 0x160
	double LastReceiveTime; // 0x1d0
	TArray<UChannel*> ChannelsToTick; // 0x1518
};

struct UViewport : UContentWidget {
	FLinearColor BackgroundColor; // 0x120
};

struct UDatasmithCineCameraActorTemplate : UDatasmithObjectTemplate {
	FDatasmithCameraLookatTrackingSettingsTemplate LookatTrackingSettings; // 0x30
};

struct UMaterialExpressionStaticComponentMaskParameter : UMaterialExpressionParameter {
	char DefaultR : 1; // 0x58
	char DefaultG : 1; // 0x58
	char DefaultB : 1; // 0x58
	char DefaultA : 1; // 0x58
};

struct ABP_WeaponBullet_ShotgunShell_C : AProjectileShotgun {
	FPointerToUberGraphFrame UberGraphFrame; // 0x428
};

struct UAdminCommand_SpawnItemEntity : UAdminCommand {
	FVector _spawnOffset; // 0x80
};

struct UPoseWatch : UObject {
	UEdGraphNode* Node; // 0x28
	FColor PoseWatchColour; // 0x30
};

struct ULockableItemComponent : UItemComponent {
	TArray<FLockData> _staticLocks; // 0xc0
	EAccessLevel _activeAccessLevel; // 0xd0
};

struct UOverlaySlot : UPanelSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UNiagaraComponentRendererProperties : UNiagaraRendererProperties {
	USceneComponent* ComponentType; // 0x80
	uint32_t ComponentCountLimit; // 0x88
	FNiagaraVariableAttributeBinding EnabledBinding; // 0x90
	bool bAssignComponentsOnParticleID; // 0xe8
	bool bOnlyCreateComponentsOnParticleSpawn; // 0xe9
	USceneComponent* TemplateComponent; // 0xf0
	TArray<FNiagaraComponentPropertyBinding> PropertyBindings; // 0xf8
};

struct UModularTooltipElement_Value : UModularTooltipElement {
	UTextBlock* _nameTextBlock; // 0x2e8
	UTextBlock* _valueTextBlock; // 0x2f0
};

struct UPrisonerSkillsUIDataImpl : UPrisonerSkillsUIData {
	TArray<UPrisonerSkillUIData*> SkillsUIData; // 0x28
};

struct UMovieSceneSequenceTickManager : UObject {
	TArray<AActor*> SequenceActors; // 0x28
	UMovieSceneEntitySystemLinker* Linker; // 0x38
};

struct UShelterItemState : UItemState {
	FDbIntegerId ShelterId; // 0xf8
};

struct ULightMapVirtualTexture2D : UTexture2D {
	TArray<int8_t> TypeToLayer; // 0x100
};

struct AWetnessManager : AActor {
	int32_t MaxNumberOfActiveWettables; // 0x220
	float MaxWettableLifeTime; // 0x224
	float WeatherAndWettableObjectParametersUpdateInterval; // 0x228
	UCurveFloat* WettingRateFromRainVsRainIntensity; // 0x230
	float WettingRateFromWaterImmersion; // 0x238
	float DryingRate; // 0x23c
	UCurveFloat* DryingRateModifierVsTemperature; // 0x240
	UCurveFloat* DryingRateModifierVsRelativeHumidity; // 0x248
	float AirTemperatureModifierWhenNotExposedToSunlight; // 0x250
};

struct UInputDataAsset : UDataAsset {
	TArray<FInputActionKeyMapping> ActionMappings; // 0x30
	TArray<FInputAxisKeyMapping> AxisMappings; // 0x40
};

struct UUI_ExpandableContainer_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UImage* ContentBackgroundImage; // 0x280
	UHorizontalBox* ContentHorizontalBox; // 0x288
	UOverlay* ContentOverlay; // 0x290
	UNamedSlot* ContentSlot; // 0x298
	UButton* ExpandButton; // 0x2a0
	UImage* ExpandedSpacingLine; // 0x2a8
	UImage* TitleBackgroundImage; // 0x2b0
	UTextBlock* TitleText; // 0x2b8
	int32_t FontSize; // 0x2c0
	bool EnableExpandedSpacingLine; // 0x2c4
	FMargin TitlePadding; // 0x2c8
	bool _isMinimized; // 0x2d8
	FText Title; // 0x2e0
	FMargin ContentPadding; // 0x2f8
	bool IsContentBackgroundImageVisible; // 0x308
	int32_t _alarmsCount; // 0x30c
	bool _isUnderAlarm; // 0x310
	UUI_ExpandableContainer_C* ParentContainer; // 0x318
	FMulticastInlineDelegate OnExpandChanged; // 0x320
	FMargin ContentMargins; // 0x330
	bool OnlySettableByChildren; // 0x340
};

struct UAnimNotifyState_PlaySoundOnOwnerRanged : UAnimNotifyState {
	UAkAudioEvent* BeginAudioEvent; // 0x30
	UAkAudioEvent* EndAudioEvent; // 0x38
};

struct UMeleeWeaponItemTag : UBaseItemTag {
	float CombatAnimationPlayRateModifier; // 0x30
	float StrengthBelowWhichCombatPerformanceBeginsToDrop; // 0x34
};

struct UMeshHitZones : UActorComponent {
	UMaterialInterface* _deactivationMaterial; // 0xc0
};

struct UDamageData : UDataAsset {
	FGameplayTag DamageResponseTag; // 0x30
	FGameplayTag GameEventTag; // 0x38
	FGameplayTag IgnoreForStatsTag; // 0x40
	FGameplayTag CauseHeadExplosionTag; // 0x48
	FGameplayTag ApplyBleedingOnlyTag; // 0x50
	UDataTable* WeaponDescTable; // 0x58
};

struct ATeamDeathmatchLocationMarker : AGameEventLocationMarker {
	FTeamDeathmatchParameters TeamDeathmatchParameters; // 0x418
	FVector FocusOffset; // 0x42c
	float MinimalRadius; // 0x438
};

struct UUI_CC_AttributeModifier_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UButton* DecreaseButton; // 0x280
	UImage* Image_1; // 0x288
	UButton* IncreaseButton; // 0x290
	UTextBlock* TitleText; // 0x298
	UTextBlock* ValueText; // 0x2a0
	FText Title; // 0x2a8
	FMulticastInlineDelegate OnIncrease; // 0x2c0
	FMulticastInlineDelegate OnDecrease; // 0x2d0
	float _value; // 0x2e0
	ESkillAttribute Attribute; // 0x2e4
};

struct UMovieScene3DTransformSection : UMovieSceneSection {
	FMovieSceneTransformMask TransformMask; // 0xf0
	FMovieSceneFloatChannel Translation[0x3]; // 0xf8
	FMovieSceneFloatChannel Rotation[0x3]; // 0x2d8
	FMovieSceneFloatChannel Scale[0x3]; // 0x4b8
	FMovieSceneFloatChannel ManualWeight; // 0x698
	bool bUseQuaternionInterpolation; // 0x738
};

struct UPrisonerBodyCondition_FootAbrasions : UPrisonerBodyCondition_Injury {
	FFloatInterval _baseAbrasionsRaiseRateVsConstitution; // 0xa8
	float _abrasionsWeightFactor; // 0xb0
	float _abrasionsFallRate; // 0xb4
	FRuntimeFloatCurve _severityVsAbrasions; // 0xb8
	float _abrasions; // 0x140
	float _abrasionsTreated; // 0x144
	float _abrasionsAtRecoveryStart; // 0x148
	float _bandagesProtection; // 0x14c
	float _remainingBandagesProtection; // 0x150
	UNotificationDescription* _bandagesProtectionDecreaseNotification; // 0x158
	float _bandagesProtectionDecreaseNotificationCooldown; // 0x160
	float _treatmentBaseExperienceGainVsSkillLevel[0x5]; // 0x164
	ESkillLevel _physicianSkillLevel; // 0x178
	FRuntimeFloatCurve _stabilizationDurationVsSeverity; // 0x180
	float _stabilizationDurationBiasVsSkillLevel[0x5]; // 0x208
	float _stabilizationDurationReductionByItems; // 0x21c
	FRuntimeFloatCurve _recoveryDurationVsSeverity; // 0x220
	FRuntimeFloatCurve _bleedingSeverityVsSeverity; // 0x2a8
	UPrisonerBodySymptom_Bleeding* _bleedingSymptomClass; // 0x330
	UPrisonerBodySymptomCause_Bleeding* _bleedingSymptomCause; // 0x338
	float _bloodLoss; // 0x348
	float _bloodLossToRecover; // 0x34c
	UAkAudioEvent* _painGruntAudioEvent; // 0x350
	FRuntimeFloatCurve _painGruntIntervalVsSeverity; // 0x358
	UPrisonerBodySymptom_Pain* _painSymptomClass; // 0x3e8
	UPrisonerBodySymptomCause_Pain* _painSymptomCause; // 0x3f0
	FRuntimeFloatCurve _painSymptomOverallIntensityVsSeverity; // 0x3f8
	FRuntimeFloatCurve _painSymptomLimpingIntensityVsSeverity; // 0x480
	FPrisonerMaxMovementPaceVsSeverity _painSymptomMaxMovementPaceVsSeverity; // 0x508
	FRuntimeFloatCurve _painSymptomMovementSpeedModifierVsSeverity; // 0x518
	EPrisonerBodyConditionState _state; // 0x5a0
	float _timerElapsedTime; // 0x5a8
	float _timerDuration; // 0x5ac
};

struct UInterpGroup : UObject {
	TArray<UInterpTrack*> InterpTracks; // 0x30
	FName GroupName; // 0x40
	FColor GroupColor; // 0x48
	char bCollapsed : 1; // 0x4c
	char bVisible : 1; // 0x4c
	char bIsFolder : 1; // 0x4c
	char bIsParented : 1; // 0x4c
	char bIsSelected : 1; // 0x4c
};

struct UPrisonerBodySymptom_Dizziness : UPrisonerBodySymptom_PeriodicAffect {
	FRuntimeFloatCurve _blackoutIntensityVsElapsedTime; // 0xe8
	float _unconsciousnessDelay; // 0x170
};

struct UUI_Metabolism_TreatmentItemsPanel_C : UMetabolismTreatmentItemsPanel {
	UImage* downArrow; // 0x310
	UImage* line; // 0x318
	UUI_AdjustableHorizontalSeparator_C* UI_AdjustableHorizontalSeparator; // 0x320
	UImage* upArrow; // 0x328
};

struct UGridPanel : UPanelWidget {
	TArray<float> ColumnFill; // 0x120
	TArray<float> RowFill; // 0x130
};

struct UGameResourceType : UObject {
	FText ResourceName; // 0x28
	FString ConfigSectionName; // 0x40
	bool CanWashWith; // 0x50
	bool CanPutOutFireWith; // 0x51
	FLinearColor Color; // 0x54
	UGameResourceConsumptionData* ConsumptionData; // 0x68
};

struct UDiffusionSmoothProperties : UInteractiveToolPropertySet {
	float SmoothingPerStep; // 0x60
	int32_t Steps; // 0x64
	bool bPreserveUVs; // 0x68
};

struct UPaperFlipbookComponent : UMeshComponent {
	UPaperFlipbook* SourceFlipbook; // 0x470
	UMaterialInterface* Material; // 0x478
	float PlayRate; // 0x480
	char bLooping : 1; // 0x484
	char bReversePlayback : 1; // 0x484
	char bPlaying : 1; // 0x484
	float AccumulatedTime; // 0x488
	int32_t CachedFrameIndex; // 0x48c
	FLinearColor SpriteColor; // 0x490
	UBodySetup* CachedBodySetup; // 0x4a0
	FMulticastInlineDelegate OnFinishedPlaying; // 0x4a8
};

struct UARGeoAnchorComponent : UARComponent {
	FARGeoAnchorUpdatePayload ReplicatedPayload; // 0x280
};

struct USynthSound : USoundWaveProcedural {
	USynthComponent* OwningSynthComponent; // 0x3c0
};

struct USoundNodeDelay : USoundNode {
	float DelayMin; // 0x48
	float DelayMax; // 0x4c
};

struct UConZVehicle4WDriverMountSlot : UConZVehicle4WMountSlot {
	UBlendSpace* _forwardIdleAnimation; // 0x150
	UAnimSequenceBase* _forwardSteeringAnimation; // 0x158
	UAnimSequenceBase* _forwardSteeringAnimationFP; // 0x160
	UBlendSpace* _reverseIdleAnimation; // 0x168
	UAnimSequenceBase* _reverseSteeringAnimation; // 0x170
	UAnimSequenceBase* _reverseSteeringAnimationFP; // 0x178
};

struct UMagicLeapTouchpadGesturesComponent : UActorComponent {
	FMulticastInlineDelegate OnTouchpadGestureStart; // 0xb8
	FMulticastInlineDelegate OnTouchpadGestureContinue; // 0xc8
	FMulticastInlineDelegate OnTouchpadGestureEnd; // 0xd8
};

struct UBTService : UBTAuxiliaryNode {
	float Interval; // 0x60
	float RandomDeviation; // 0x64
	char bCallTickOnSearchStart : 1; // 0x68
	char bRestartTimerOnEachActivation : 1; // 0x68
};

struct AGrenadeItem : AItem {
	float _explosionDamage; // 0x7c0
	float _explosionOuterRadius; // 0x7c4
	float _explosionInnerRadius; // 0x7c8
	float _explosionFalloff; // 0x7cc
	float _explosionDelay; // 0x7d0
	float _explosionForce; // 0x7d4
	float _explosionImpulse_OBSOLETE; // 0x7d8
	UParticleSystem* _explosionParticle; // 0x7e8
	UMatineeCameraShake* _explosionCameraShakeClass; // 0x7f0
	float _hearingDamageRadius; // 0x7f8
	UAkAudioEvent* ExplosionAudioEvent; // 0x800
	UAkAudioEvent* _explosionAudioEvent; // 0x808
	USkeletalMeshComponent* _skeletalMesh; // 0x810
	UAnimMontage* _grenadeLongThrowMontage; // 0x818
	UAnimMontage* _grenadeLongThrowLoopMontage; // 0x820
	UAnimMontage* _grenadeShortThrowMontage; // 0x828
	UAnimMontage* _grenadeThrowbackMontage; // 0x830
	FName _leverReleasedSocketName; // 0x838
	UParticleSystem* _leverReleasedPS; // 0x840
	float _netCullDistanceSquaredMeters; // 0x848
};

struct UPhysicsThrusterComponent : USceneComponent {
	float ThrustStrength; // 0x1f8
};

struct UDynamicMeshSculptTool : UMeshSurfacePointTool {
	USculptBrushProperties* BrushProperties; // 0xc0
	UBrushSculptProperties* SculptProperties; // 0xc8
	USculptMaxBrushProperties* SculptMaxBrushProperties; // 0xd0
	UKelvinBrushProperties* KelvinBrushProperties; // 0xd8
	UBrushRemeshProperties* RemeshProperties; // 0xe0
	UFixedPlaneBrushProperties* GizmoProperties; // 0xe8
	UMeshEditingViewProperties* ViewProperties; // 0xf0
	UBrushStampIndicator* BrushIndicator; // 0x130
	UMaterialInstanceDynamic* BrushIndicatorMaterial; // 0x138
	UPreviewMesh* BrushIndicatorMesh; // 0x140
	UOctreeDynamicMeshComponent* DynamicMeshComponent; // 0x148
	UMaterialInstanceDynamic* ActiveOverrideMaterial; // 0x150
	UTransformGizmo* PlaneTransformGizmo; // 0xc50
	UTransformProxy* PlaneTransformProxy; // 0xc58
};

struct UParticleModuleAttractorParticle : UParticleModuleAttractorBase {
	FName EmitterName; // 0x30
	FRawDistributionFloat Range; // 0x38
	char bStrengthByDistance : 1; // 0x68
	FRawDistributionFloat Strength; // 0x70
	char bAffectBaseVelocity : 1; // 0xa0
	EAttractorParticleSelectionMethod SelectionMethod; // 0xa4
	char bRenewSource : 1; // 0xa8
	char bInheritSourceVel : 1; // 0xa8
	int32_t LastSelIndex; // 0xac
};

struct UWorld : UObject {
	ULevel* PersistentLevel; // 0x30
	UNetDriver* NetDriver; // 0x38
	ULineBatchComponent* LineBatcher; // 0x40
	ULineBatchComponent* PersistentLineBatcher; // 0x48
	ULineBatchComponent* ForegroundLineBatcher; // 0x50
	AGameNetworkManager* NetworkManager; // 0x58
	UPhysicsCollisionHandler* PhysicsCollisionHandler; // 0x60
	TArray<UObject*> ExtraReferencedObjects; // 0x68
	TArray<UObject*> PerModuleDataObjects; // 0x78
	TArray<ULevelStreaming*> StreamingLevels; // 0x88
	FStreamingLevelsToConsider StreamingLevelsToConsider; // 0x98
	FString StreamingLevelsPrefix; // 0xc0
	ULevel* CurrentLevelPendingVisibility; // 0xd0
	ULevel* CurrentLevelPendingInvisibility; // 0xd8
	UDemoNetDriver* DemoNetDriver; // 0xe0
	AParticleEventManager* MyParticleEventManager; // 0xe8
	APhysicsVolume* DefaultPhysicsVolume; // 0xf0
	char bAreConstraintsDirty : 1; // 0x10e
	UNavigationSystemBase* NavigationSystem; // 0x110
	AGameModeBase* AuthorityGameMode; // 0x118
	AGameStateBase* GameState; // 0x120
	UAISystemBase* AISystem; // 0x128
	UAvoidanceManager* AvoidanceManager; // 0x130
	TArray<ULevel*> Levels; // 0x138
	TArray<FLevelCollection> LevelCollections; // 0x148
	UGameInstance* OwningGameInstance; // 0x180
	TArray<UMaterialParameterCollectionInstance*> ParameterCollectionInstances; // 0x188
	UCanvas* CanvasForRenderingToTarget; // 0x198
	UCanvas* CanvasForDrawMaterialToRenderTarget; // 0x1a0
	TSet<UActorComponent*> ComponentsThatNeedPreEndOfFrameSync; // 0x1f8
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate; // 0x248
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x258
	UWorldComposition* WorldComposition; // 0x5d8
	FWorldPSCPool PSCPool; // 0x668
};

struct UGameSessionSettings : UObject {
	int32_t MaxSpectators; // 0x28
	int32_t MaxPlayers; // 0x2c
	char bRequiresPushToTalk : 1; // 0x30
};

struct UMultiTransformer : UObject {
	UInteractiveGizmoManager* GizmoManager; // 0x70
	UTransformGizmo* TransformGizmo; // 0xe0
	UTransformProxy* TransformProxy; // 0xe8
};

struct AAquaticLifeSpawningVolume : AVolume {
	EWaterZoneType _waterZoneType; // 0x258
	UFishSpeciesPreset* _fishSpeciesPreset; // 0x260
	UFishSpawningPreset* _fishSpawningPreset; // 0x268
	float _requiredDepthForSpawning; // 0x270
	float _fishSchoolManagerSpawningExtent; // 0x274
	int32_t _maxSchoolsPerFishSchoolManager; // 0x278
	float _fishingZoneIndicatorMinSpawnTime; // 0x27c
	float _fishingZoneIndicatorMaxSpawnTime; // 0x280
	float _fishingZoneIndicatorMinLifetime; // 0x284
	float _fishingZoneIndicatorMaxLifetime; // 0x288
	int32_t _maxFishingZoneIndicatorPerPlayer; // 0x28c
	float _fishingZoneIndicatorMinSpawningExtent; // 0x290
	float _fishingZoneIndicatorMaxSpawningExtent; // 0x294
	float _fishingZoneIndicatorMinRadius; // 0x298
	float _fishingZoneIndicatorMaxRadius; // 0x29c
	float _requiredDepthForFishingIndicator; // 0x2a0
};

struct UModularSynthPresetBank : UObject {
	TArray<FModularSynthPresetBankEntry> Presets; // 0x28
};

struct UNoiseField : UFieldNodeFloat {
	float MinRange; // 0xb0
	float MaxRange; // 0xb4
	FTransform Transform; // 0xc0
};

struct UUI_StatisticsListRow_C : UStatisticsListRow {
	UImage* _horizontalLine; // 0x278
};

struct UAnimClassData : UObject {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x30
	USkeleton* TargetSkeleton; // 0x40
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x48
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x58
	TArray<FAnimBlueprintFunction> AnimBlueprintFunctions; // 0xa8
	TArray<FAnimBlueprintFunctionData> AnimBlueprintFunctionData; // 0xb8
	TArray<TFieldPath<FStructProperty>> AnimNodeProperties; // 0xc8
	TArray<TFieldPath<FStructProperty>> LinkedAnimGraphNodeProperties; // 0xe8
	TArray<TFieldPath<FStructProperty>> LinkedAnimLayerNodeProperties; // 0x108
	TArray<TFieldPath<FStructProperty>> PreUpdateNodeProperties; // 0x128
	TArray<TFieldPath<FStructProperty>> DynamicResetNodeProperties; // 0x148
	TArray<TFieldPath<FStructProperty>> StateMachineNodeProperties; // 0x168
	TArray<TFieldPath<FStructProperty>> InitializationNodeProperties; // 0x188
	TMap<FName, FGraphAssetPlayerInformation> GraphNameAssetPlayers; // 0x1a8
	TArray<FName> SyncGroupNames; // 0x1f8
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x208
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x218
	FPropertyAccessLibrary PropertyAccessLibrary; // 0x268
};

struct UAREnvironmentCaptureProbeTexture : UTextureCube {
	EARTextureType TextureType; // 0x130
	float Timestamp; // 0x134
	FGuid ExternalTextureGuid; // 0x138
	FVector2D Size; // 0x148
};

struct ASpline : AActor {
	USceneComponent* SceneComponent; // 0x220
	USplineComponent* SplineComponent; // 0x228
};

struct UUI_Item2_C : UItemWidget2 {
	FPointerToUberGraphFrame UberGraphFrame; // 0x440
	UWidgetAnimation* AdditionalIconFadeOut; // 0x448
	UWidgetAnimation* AdditionalIconFadeIn; // 0x450
	UWidgetAnimation* LowerLeftBoxFadeOut; // 0x458
	UWidgetAnimation* LowerLeftBoxFadeIn; // 0x460
	UTextBlock* AdditionalText; // 0x468
	UImage* AmmoIcon; // 0x470
	UImage* BackgroundBorder; // 0x478
	UImage* BackgroundHighlight; // 0x480
	UScaleBox* BackgroundScaleBox; // 0x488
	UImage* HealthBackground; // 0x490
	UScaleBox* IconScaleBox; // 0x498
	UImage* LowerBackground; // 0x4a0
	UTextBlock* LowerLeftTextFirst; // 0x4a8
	UTextBlock* LowerLeftTextSecond; // 0x4b0
	UTextBlock* LowerRightText; // 0x4b8
	USizeBox* MainSizeBox; // 0x4c0
	UImage* MiddleBackground; // 0x4c8
	UTextBlock* MiddleText; // 0x4d0
	UOverlay* Overlay_5; // 0x4d8
	UProgressBar* ProgressBarDurability; // 0x4e0
	UProgressBar* ProgressBarUses; // 0x4e8
	UImage* Temperature; // 0x4f0
	UTextBlock* TextBlock_1; // 0x4f8
	UTextBlock* TextBlock_2; // 0x500
	UUI_Border_C* UI_Border; // 0x508
	UUI_Border_C* UI_Border_C_1; // 0x510
	UImage* UpperBackground; // 0x518
	UImage* UpperLeftBackground; // 0x520
	UTextBlock* UpperLeftText; // 0x528
	UImage* UpperRightBackground; // 0x530
	UTextBlock* UpperRightText; // 0x538
	UTextBlock* UsageSeparator; // 0x540
	UImage* UsesBackground; // 0x548
	UImage* Wetness; // 0x550
	TArray<UTexture2D*> WetnessLevelImages; // 0x558
	TArray<UTexture2D*> TemperatureLevelImages; // 0x568
};

struct UVideoCaptureProtocol : UFrameGrabberProtocol {
	bool bUseCompression; // 0x68
	float CompressionQuality; // 0x6c
};

struct UUI_TrophyScreen_C : UFishingTrophyWidget {
	UImage* FishSizeIcon; // 0x2c8
	UImage* FishWeightIcon; // 0x2d0
	UImage* KeepButtonBorder; // 0x2d8
	UImage* ReleaseButtonBorder; // 0x2e0
	UImage* TopBackgroundImage; // 0x2e8
	UImage* TopBackgroundImageBorder; // 0x2f0
};

struct UWindowsContent_C : UCustomGUIWindow_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	UCustomGUIWindow_C* _parentWindow; // 0x2a0
	TArray<UCustomGUIWindow_C*> _childrenWindows; // 0x2a8
};

struct ULuminARSessionConfig : UARSessionConfig {
	FMagicLeapPlanesQuery PlanesQuery; // 0x110
	int32_t MaxPlaneQueryResults; // 0x170
	int32_t MinPlaneArea; // 0x174
	bool bArbitraryOrientationPlaneDetection; // 0x178
	FVector PlaneSearchExtents; // 0x17c
	TArray<EMagicLeapPlaneQueryFlags> PlaneQueryFlags; // 0x188
	bool bDiscardZeroExtentPlanes; // 0x198
	bool bDefaultUseUnreliablePose; // 0x199
};

struct UPrisonerDebugUI_BodyConditionEntryWidget : UUserWidget {
	UTextBlock* _nameTextBlock; // 0x268
};

struct UBaseKelvinletBrushOpProps : UMeshSculptBrushOpProps {
	float Stiffness; // 0x60
	float Incompressiblity; // 0x64
	int32_t BrushSteps; // 0x68
};

struct UInterpTrackInstToggle : UInterpTrackInst {
	ETrackToggleAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
	char bSavedActiveState : 1; // 0x30
};

struct UHitReactComponent : UActorComponent {
	TArray<UHitReactMapping*> HitReactMappings; // 0xc8
	FPhysicalHitReactData PhysicalHitReactData; // 0xd8
	FName RagdollConstraintProfileName; // 0xf0
	float RagdollRestThresholdSingleBodyMax; // 0xf8
	float RagdollRestThresholdAverageBodyMax; // 0xfc
	FName _pelvisBoneName; // 0x128
	FName _rootBoneName; // 0x130
	UAnimMontage* _getUpFromFaceMontage; // 0x138
	UAnimMontage* _getUpFromBackMontage; // 0x140
	ERagdollTransitionState _ragdollTransitionState; // 0x1ba
	FVector _serverRagollLocation; // 0x1bc
};

struct ASoundEmitter : AActor {
	UAkAudioEvent* AudioEvent; // 0x220
};

struct UWorldCraftingMarkerWidget : UWaypointWidget {
	UCraftingInfoWidget* _craftingInfo; // 0x310
};

struct UComboBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FComboBoxStyle ComboBoxStyle; // 0x30
};

struct UMovieSceneCameraAnimTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraAnimSections; // 0x80
};

struct UActorSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
	FActorSequenceObjectReferenceMap ObjectReferences; // 0x68
};

struct USourceEffectPannerPreset : USoundEffectSourcePreset {
	FSourceEffectPannerSettings Settings; // 0x98
};

struct AVehicleSpawningManager : AActor {
	int32_t _defaultMaxNumSpawnersPerSpawnGroup; // 0x340
	FGameplayTag _spawnGroupParentTag; // 0x344
	float _preferredDistanceBetweenSpawners; // 0x3a0
	float _relevantSpawnersUpdateInterval; // 0x3a4
	float _minVisitorPawnLocationDeltaToUpdateRelevantSpawners; // 0x3ac
	float _vehicleActorCullDistance; // 0x3b0
	float _addSpawnerUpdateInterval; // 0x3b4
	float _numDaysToKeepSpawnerAliveIfVehicleIsInactive; // 0x3bc
	TArray<FExpirableVehicleSpawner> _expirableSpawners; // 0x3c0
	float _newVehicleMinHealthAmount; // 0x3d0
	float _newVehicleMaxHealthAmount; // 0x3d4
	float _newVehicleMinFuelAmount; // 0x3d8
	float _newVehicleMaxFuelAmount; // 0x3dc
	float _newVehicleMinBatteryAmount; // 0x3e0
	float _newVehicleMaxBatteryAmount; // 0x3e4
	float _autoSaveCheckInterval; // 0x3e8
	float _autoSaveInterval; // 0x3f0
};

struct UWeaponAmmoDisplayContainerWidget : UDesignableUserWidget {
	UUserWidget* _ammoDisplayWidgetClass; // 0x278
	UVerticalBox* _displayList; // 0x280
	UVerticalBox* _displayListCentered; // 0x288
};

struct UGeometryCollection : UObject {
	TArray<FGeometryCollectionSource> GeometrySource; // 0x30
	TArray<UMaterialInterface*> Materials; // 0x40
	ECollisionTypeEnum CollisionType; // 0x50
	EImplicitTypeEnum ImplicitType; // 0x51
	int32_t MinLevelSetResolution; // 0x54
	int32_t MaxLevelSetResolution; // 0x58
	int32_t MinClusterLevelSetResolution; // 0x5c
	int32_t MaxClusterLevelSetResolution; // 0x60
	float CollisionObjectReductionPercentage; // 0x64
	bool bMassAsDensity; // 0x68
	float Mass; // 0x6c
	float MinimumMassClamp; // 0x70
	float CollisionParticlesFraction; // 0x74
	int32_t MaximumCollisionParticles; // 0x78
	TArray<FGeometryCollectionSizeSpecificData> SizeSpecificData; // 0x80
	bool EnableRemovePiecesOnFracture; // 0x90
	TArray<UMaterialInterface*> RemoveOnFractureMaterials; // 0x98
	FGuid PersistentGuid; // 0xa8
	FGuid StateGuid; // 0xb8
	int32_t BoneSelectedMaterialIndex; // 0xc8
};

struct ULightComponentBase : USceneComponent {
	FGuid LightGuid; // 0x1f8
	float Brightness; // 0x208
	float Intensity; // 0x20c
	FColor LightColor; // 0x210
	char bAffectsWorld : 1; // 0x214
	char CastShadows : 1; // 0x214
	char CastStaticShadows : 1; // 0x214
	char CastDynamicShadows : 1; // 0x214
	char bAffectTranslucentLighting : 1; // 0x214
	char bTransmission : 1; // 0x214
	char bCastVolumetricShadow : 1; // 0x214
	char bCastDeepShadow : 1; // 0x214
	char bCastRaytracedShadow : 1; // 0x215
	char bAffectReflection : 1; // 0x215
	char bAffectGlobalIllumination : 1; // 0x215
	float DeepShadowLayerDistribution; // 0x218
	float IndirectLightingIntensity; // 0x21c
	float VolumetricScatteringIntensity; // 0x220
	int32_t SamplesPerPixel; // 0x224
};

struct UCustomZoneSettingsDetailsDisplay : UUserWidget {
	UBorder* _displayBox; // 0x290
	UCustomZoneSettingsConfigurationDetails* _configurationDetailsWidgetClass; // 0x298
	UCustomZoneSettingsRegionDetails* _regionDetailsWidgetClass; // 0x2a0
	UCustomZoneSettingsConfigurationDetails* _configurationDetails; // 0x2a8
	UCustomZoneSettingsRegionDetails* _regionDetails; // 0x2b0
};

struct UPrisonerUIDataResponse : UPlayerRpcChannelServerDataResponse {
	UPrisonerUIData* _payload; // 0x28
};

struct UBlackboardKeyType_NativeEnum : UBlackboardKeyType {
	FString EnumName; // 0x30
	UEnum* EnumType; // 0x40
};

struct AChainsaw : AWeaponItem {
	USkeletalMeshComponent* SkeletalMesh; // 0x7f0
	FCharacterAndItemAnimation AnimationsStartEngine; // 0x7f8
	FCharacterAndItemAnimation AnimationsCheckFuelStatus; // 0x808
	UBaseItemTag* ChoppingToolItemTag; // 0x818
	UAkAudioEvent* TurnOnAudioEvent; // 0x820
	UAkAudioEvent* TurnOffAudioEvent; // 0x828
	UGameResourceType* _fuelType; // 0x830
	FGameplayTagContainer _inFuelingSocketTypes; // 0x838
	float _maxFuelAmount; // 0x858
	float _initialFuelAmount; // 0x85c
	float _fuelUsagePerHour; // 0x860
	float _fuelUsagePerHourMultiplierWhenActive; // 0x864
	float _fuelFillingDurationPerAmountFilled; // 0x868
	float _fuelFillingExperiencePerAmount; // 0x86c
	UAnimMontage* _fuelFillingMontage; // 0x870
	UMeleeSkillAnimationsPreset* _meleeSkillAnimationsPresetWhenTurnedOff; // 0x878
	UMeleeSkillAnimationsPreset* _meleeSkillAnimationsPresetWhenTurnedOn; // 0x880
	UAkAudioEvent* _fuelStartFillingAudioEvent; // 0x888
	UAkAudioEvent* _fuelStopFillingAudioEvent; // 0x890
	float _currentFuelAmount; // 0x898
	bool _turnedOn; // 0x89c
};

struct UMovieSceneSignedObject : UObject {
	FGuid Signature; // 0x28
};

struct UReplicationGraph : UReplicationDriver {
	UNetReplicationGraphConnection* ReplicationConnectionManagerClass; // 0x28
	UNetDriver* NetDriver; // 0x30
	TArray<UNetReplicationGraphConnection*> Connections; // 0x38
	TArray<UNetReplicationGraphConnection*> PendingConnections; // 0x48
	TArray<UReplicationGraphNode*> GlobalGraphNodes; // 0x98
	TArray<UReplicationGraphNode*> PrepareForReplicationNodes; // 0xa8
};

struct UGameResourceItemTag : UBaseItemTag {
	UGameResourceType* ResourceType; // 0x30
	FGameplayTagContainer SocketTypes; // 0x38
	float ResourceAmountPerUse; // 0x58
	TArray<UBaseItemTag*> RequiredItemTagsForFueling; // 0x60
};

struct UUserInterfaceSettings : UDeveloperSettings {
	ERenderFocusRule RenderFocusRule; // 0x38
	TMap<EMouseCursor, FHardwareCursorReference> HardwareCursors; // 0x40
	TMap<EMouseCursor, FSoftClassPath> SoftwareCursors; // 0x90
	FSoftClassPath DefaultCursor; // 0xe0
	FSoftClassPath TextEditBeamCursor; // 0xf8
	FSoftClassPath CrosshairsCursor; // 0x110
	FSoftClassPath HandCursor; // 0x128
	FSoftClassPath GrabHandCursor; // 0x140
	FSoftClassPath GrabHandClosedCursor; // 0x158
	FSoftClassPath SlashedCircleCursor; // 0x170
	float ApplicationScale; // 0x188
	EUIScalingRule UIScaleRule; // 0x18c
	FSoftClassPath CustomScalingRuleClass; // 0x190
	FRuntimeFloatCurve UIScaleCurve; // 0x1a8
	bool bAllowHighDPIInGameMode; // 0x230
	FIntPoint DesignScreenSize; // 0x234
	bool bLoadWidgetsOnDedicatedServer; // 0x23c
	TArray<UObject*> CursorClasses; // 0x240
	UObject* CustomScalingRuleClassInstance; // 0x250
	UDPICustomScalingRule* CustomScalingRule; // 0x258
};

struct ABuildingManager : AActor {
	TMap<ABuilding*, FBox2D> _buildings; // 0x268
	TMap<FDbIntegerId, FBuildingsArray> _buildingsOwned; // 0x2b8
	FBuildingsReplicationHelper _buildingsDataRepHelper; // 0x310
};

struct UMaterialExpressionSphericalParticleOpacity : UMaterialExpression {
	FExpressionInput Density; // 0x40
	float ConstantDensity; // 0x54
};

struct UParticleModuleLocationPrimitiveCylinder_Seeded : UParticleModuleLocationPrimitiveCylinder {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct AProjectile : AActor {
	UStaticMeshComponent* StaticMesh; // 0x220
	bool RotationFollowsVelocity; // 0x228
	bool AddImpulseOnHit; // 0x229
	float ImpulseMultiplier; // 0x22c
	float MaxImpulse; // 0x230
	UProjectileImpactEffects* ImpactEffects; // 0x238
	FProjectileData ProjectileData; // 0x240
	float MeshScaleStartLocal; // 0x290
	float MeshScaleRangeLocal; // 0x294
	float MeshScaleMinLocal; // 0x298
	float MeshScaleMaxLocal; // 0x29c
	float MeshScaleStart; // 0x2a0
	float MeshScaleRange; // 0x2a4
	float MeshScaleMin; // 0x2a8
	float MeshScaleMax; // 0x2ac
	float TraceScaleMultiplier; // 0x2b0
	float GravityScale; // 0x2b4
	float Sharpness; // 0x2b8
	UAkAudioEvent* FlyByAudioEvent; // 0x2c0
	FName ColorMaterialParameterName; // 0x2c8
	FLinearColor InitialColor; // 0x2d0
	FLinearColor FinalColor; // 0x2e0
	int32_t MaxHitCount; // 0x2f0
	float NoiseLoudnessOnHit; // 0x2f4
	bool IgnoreCallingWeaponsFiringEffects; // 0x2f8
	float ExperienceMultiplier; // 0x2fc
	bool ShouldForceStopWhenNoVelocity; // 0x300
	bool CanEverCollide; // 0x301
	UParticleSystem* WaterSplashParticleSystem; // 0x308
	bool _useFixedTimestep; // 0x328
	float _fixedTimestep; // 0x32c
	int32_t _zeroRange; // 0x348
	float _windage; // 0x34c
	float _distanceTraveled; // 0x350
	float _meshScaleFactor; // 0x354
	float _offsetFromBarrel; // 0x378
	int32_t _randomSeed; // 0x380
	bool _doNotForceInitialReplication; // 0x3d8
	float _muzzleVelocity; // 0x3dc
	bool _createdOnServer; // 0x3e0
	float _halfAngle; // 0x3e4
	EWeaponFiringMode _weaponFiringModeWhenShot; // 0x408
	FFiredShotDescriptionRep _firedShotDescriptionRep; // 0x410
};

struct UUI_ItemInventoryVicinity_C : UItemInventoryWidget2 {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f0
	UWidgetAnimation* BlinkAnim; // 0x2f8
	UHorizontalBox* _weightHorizontalBox; // 0x300
	UImage* DeadCellsImage; // 0x308
	UImage* ExtraSlotBackground; // 0x310
	UOverlay* ExtraSlotsOverlay; // 0x318
	UTextBlock* GreenText; // 0x320
	UImage* Image_1; // 0x328
	UImage* Image_2; // 0x330
	UImage* Image_3; // 0x338
	UImage* Image_4; // 0x340
	UImage* Image_5; // 0x348
	UImage* Image_7; // 0x350
	UImage* Image_84; // 0x358
	UImage* LoadingBackground; // 0x360
	UImage* MainExtraSlotImage; // 0x368
	UProgressBar* ProgressBar_1; // 0x370
	UTextBlock* RedText; // 0x378
	URetainerBox* RetainerBoxDeadCells; // 0x380
	UOverlay* SeparatorOverlay; // 0x388
	UTextBlock* SlotsText; // 0x390
	USizeBox* WeightAndExpandSizeBox; // 0x398
	TScriptInterface<IInventoryNode> _inventoryNode; // 0x3a0
	bool NewVar_1; // 0x3b0
	AItem* Item; // 0x3b8
};

struct UDistributionFloatUniform : UDistributionFloat {
	float Min; // 0x38
	float Max; // 0x3c
};

struct ALevelBounds : AActor {
	UBoxComponent* BoxComponent; // 0x220
	bool bAutoUpdateBounds; // 0x228
};

struct UVectorFieldAnimated : UVectorField {
	UTexture2D* Texture; // 0x48
	EVectorFieldConstructionOp ConstructionOp; // 0x50
	int32_t VolumeSizeX; // 0x54
	int32_t VolumeSizeY; // 0x58
	int32_t VolumeSizeZ; // 0x5c
	int32_t SubImagesX; // 0x60
	int32_t SubImagesY; // 0x64
	int32_t FrameCount; // 0x68
	float FramesPerSecond; // 0x6c
	char bLoop : 1; // 0x70
	UVectorFieldStatic* NoiseField; // 0x78
	float NoiseScale; // 0x80
	float NoiseMax; // 0x84
};

struct UAnimationSharingStateProcessor : UObject {
	TSoftObjectPtr<UEnum> AnimationStateEnum; // 0x28
};

struct USoundNodeWavePlayer : USoundNodeAssetReferencer {
	TSoftObjectPtr<USoundWave> SoundWaveAssetPtr; // 0x48
	USoundWave* SoundWave; // 0x70
	char bLooping : 1; // 0x80
};

struct UAmmunitionBoxItemState : UItemState {
	int32_t AmmoCount; // 0xf8
};

struct AExplosiveTrapItem : ATrapItem {
	float _detonationDelay; // 0x910
	FVector _trapForwardVector; // 0x914
	float _netCullDistanceSquaredMeters; // 0x920
	UAkAudioEvent* _triggerSound; // 0x928
	UAkAudioEvent* _detonationSound; // 0x930
	UParticleSystem* _detonationParticles; // 0x938
	FTransform _detonationParticlesTransform; // 0x940
	bool _hasPrimaryExplosion; // 0x970
	float _primaryBaseDamage; // 0x974
	float _primaryMinimumDamage; // 0x978
	float _primaryDamageInnerRadius; // 0x97c
	float _primaryDamageOuterRadius; // 0x980
	float _primaryDamageMinAngleDeg; // 0x984
	float _primaryDamageMaxAngleDeg; // 0x988
	float _primaryDamageChanceMultiplier; // 0x98c
	float _primaryDamageMinChance; // 0x990
	float _primaryDamageMaxChance; // 0x994
	float _primaryDamageFalloff; // 0x998
	float _primaryDamageAngleFalloff; // 0x99c
	bool _hasSecondaryExplosion; // 0x9a0
	float _secondaryBaseDamage; // 0x9a4
	float _secondaryMinimumDamage; // 0x9a8
	float _secondaryDamageInnerRadius; // 0x9ac
	float _secondaryDamageOuterRadius; // 0x9b0
	float _secondaryDamageFalloff; // 0x9b4
	bool _instantlyDestroysStructures; // 0x9b8
	float _structureDestructionRadius; // 0x9bc
	float _minimalElementAreaCovered; // 0x9c0
	float _structureDestructionMinAngleDeg; // 0x9c4
	float _structureDestructionMaxAngleDeg; // 0x9c8
	float _explosionDamagePositionOffset; // 0x9cc
	float _explosionForce; // 0x9d0
};

struct UWeldMeshEdgesTool : USingleSelectionTool {
	float Tolerance; // 0x88
	bool bOnlyUnique; // 0x8c
};

struct UMaterialExpressionCollectionParameter : UMaterialExpression {
	UMaterialParameterCollection* Collection; // 0x40
	FName ParameterName; // 0x48
	FGuid ParameterId; // 0x50
};

struct UDeviceProfile : UTextureLODSettings {
	FString DeviceType; // 0x38
	FString BaseProfileName; // 0x48
	UObject* Parent; // 0x58
	TArray<FString> CVars; // 0x88
};

struct UVoxelSolidifyMeshesTool : UBaseVoxelTool {
	UVoxelSolidifyMeshesToolProperties* SolidifyProperties; // 0x108
};

struct UBrushSculptProperties : UInteractiveToolPropertySet {
	bool bIsRemeshingEnabled; // 0x60
	EDynamicMeshSculptBrushType PrimaryBrushType; // 0x61
	float PrimaryBrushSpeed; // 0x64
	bool bPreserveUVFlow; // 0x68
	bool bFreezeTarget; // 0x69
	float SmoothBrushSpeed; // 0x6c
	bool bDetailPreservingSmooth; // 0x70
};

struct UMetabolismCurrentStatLight : UUserWidget {
	FText Title; // 0x260
	UImage* _valueBackground; // 0x278
	UTextBlock* _title; // 0x280
	URichTextBlock* _value; // 0x288
	FDataTableRowHandle _normalBackgroundColor; // 0x290
	FDataTableRowHandle _alertedBackgroundColor; // 0x2a0
};

struct ABP_ConZGameState_C : AConZGameState {
	USceneComponent* DefaultSceneRoot; // 0x690
};

struct UAsyncTaskDownloadImage : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFail; // 0x40
};

struct UNiagaraDataInterfaceTexture : UNiagaraDataInterface {
	UTexture* Texture; // 0x38
};

struct UMirrorTool : UMultiSelectionTool {
	UMirrorToolProperties* Settings; // 0x98
	UMirrorToolActionPropertySet* ToolActions; // 0xa0
	TArray<UDynamicMeshReplacementChangeTarget*> MeshesToMirror; // 0xa8
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xb8
	UConstructionPlaneMechanic* PlaneMechanic; // 0x110
};

struct UUI_CharacterCreationPanel_C : UCharacterCreationWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x270
	UOverlay* AttributeConfirmationOverlay; // 0x278
	UUI_CC_NonSelectableText_C* AttributeDisplayConstitution; // 0x280
	UUI_CC_NonSelectableText_C* AttributeDisplayDexterity; // 0x288
	UUI_CC_NonSelectableText_C* AttributeDisplayIntelligence; // 0x290
	UUI_CC_NonSelectableText_C* AttributeDisplayStrength; // 0x298
	UBorder* B_Name; // 0x2a0
	UImage* BackgroundTint; // 0x2a8
	UUI_TrashMenuButton_C* Button_CancelAttribute; // 0x2b0
	UUI_TrashMenuButton_C* Button_CancelSkill; // 0x2b8
	UUI_TrashMenuButton_C* Button_ContinueAttribute; // 0x2c0
	UUI_TrashMenuButton_C* Button_ContinueSkill; // 0x2c8
	UUI_TrashMenuButton_C* ButtonCancel; // 0x2d0
	UUI_TrashMenuButton_C* ButtonRandomizeAttributes; // 0x2d8
	UUI_TrashMenuButton_C* ButtonRandomizeSkills; // 0x2e0
	UUI_TrashMenuButton_C* ButtonSwitchToAttributes; // 0x2e8
	UUI_TrashMenuButton_C* ButtonSwitchToCriminalRecord; // 0x2f0
	UUI_TrashMenuButton_C* ButtonSwitchToSkillsPlanel; // 0x2f8
	UUI_Trash_LeftNamedCarousel_Widget_C* Carousel_Gender; // 0x300
	UUI_Trash_LeftNamedCarousel_Widget_C* Carousel_GrowOverTime; // 0x308
	UUI_Trash_LeftNamedCarousel_Widget_C* Carousel_Tattoos; // 0x310
	UCanvasPanel* ContentCanvas; // 0x318
	UOverlay* CriminalRecordOverlay; // 0x320
	UImage* Image; // 0x328
	UImage* Image_1; // 0x330
	UImage* Image_2; // 0x338
	UImage* Image_3; // 0x340
	UImage* Image_4; // 0x348
	UImage* Image_5; // 0x350
	UImage* Image_6; // 0x358
	UImage* Image_7; // 0x360
	UImage* Image_9; // 0x368
	UImage* Image_91; // 0x370
	UImage* Image_93; // 0x378
	UCanvasPanel* MainCanvas; // 0x380
	UOverlay* MenuOverlay; // 0x388
	UEditableTextBox* NameText; // 0x390
	UEditableTextBox* NameTextSecondPage; // 0x398
	UVerticalBox* SkillBoxConstitution; // 0x3a0
	UVerticalBox* SkillBoxDexterity; // 0x3a8
	UVerticalBox* SkillBoxIntelligence; // 0x3b0
	UVerticalBox* SkillBoxStrength; // 0x3b8
	UOverlay* SkillConfirmationOverlay; // 0x3c0
	UUI_CC_NonSelectableText_C* SkillPointDisplayBonus; // 0x3c8
	UUI_CC_NonSelectableText_C* SkillPointDisplayConstitution; // 0x3d0
	UUI_CC_NonSelectableText_C* SkillPointDisplayDexterity; // 0x3d8
	UUI_CC_NonSelectableText_C* SkillPointDisplayIntelligence; // 0x3e0
	UUI_CC_NonSelectableText_C* SkillPointDisplayStrength; // 0x3e8
	UUI_Trash_LeftNamedSlider_Widget_C* Slider_CON; // 0x3f0
	UUI_Trash_LeftNamedSlider_Widget_C* Slider_DEX; // 0x3f8
	UUI_Trash_LeftNamedSlider_Widget_C* Slider_Head; // 0x400
	UUI_Trash_LeftNamedSlider_Widget_C* Slider_INT; // 0x408
	UUI_Trash_LeftNamedSlider_Widget_C* Slider_PenisBreastSize; // 0x410
	UUI_Trash_LeftNamedSlider_Widget_C* Slider_STR; // 0x418
	UUI_Trash_LeftNamedSlider_Widget_C* Slider_TattooStyle; // 0x420
	UTextBlock* T_AttributeConfirmation; // 0x428
	UTextBlock* T_NameAlreadyTaken; // 0x430
	UTextBlock* T_SkillConfirmation; // 0x438
	UUI_CC_NonSelectableText_C* TextAvailableAttributePoints; // 0x440
	UImage* TextBackgroundImageSecondPanel; // 0x448
	UUI_CriminalRecord_C* UI_CriminalRecord; // 0x450
	UWidgetSwitcher* WidgetSwitcher; // 0x458
	TArray<APrisoner*> _prisoners; // 0x460
	FCharacterTemplate _characterTemplate; // 0x470
	float _attributeAdjustmentStep; // 0x4f8
	int32_t _availableAttributePoints; // 0x4fc
	bool _wereAttributesManuallyAdjusted; // 0x500
	FVector4 LastAttributeValues; // 0x510
	float _skillPointsStrength; // 0x520
	float _skillPointsConstitution; // 0x524
	float _skillPointsDexterity; // 0x528
	float _skillPointsIntelligence; // 0x52c
	int32_t _maxSkillPointsStrength; // 0x530
	int32_t _maxSkillPointsConstitution; // 0x534
	int32_t _maxSkillPointsDexterity; // 0x538
	int32_t _maxSkillPointsIntelligence; // 0x53c
	TArray<FNonImplementedSkill> _nonImplementedSkills; // 0x540
	int32_t _skillsCountStrength; // 0x550
	int32_t _skillsCountConstitution; // 0x554
	int32_t _skillsCountDexterity; // 0x558
	int32_t _skillsCountIntelligence; // 0x55c
	FText _lastName; // 0x560
	bool _nameInUse; // 0x578
	float Remaining Skill Points; // 0x57c
	bool confirmation; // 0x580
	TArray<int32_t> SkillPointsRemaining; // 0x588
	int32_t SkillPointsSum; // 0x598
	float ConfirmationTimer; // 0x59c
	float LastBreastSize; // 0x5a0
	float LastPenisSize; // 0x5a4
	bool FullyInitialized; // 0x5a8
};

struct UPolyEditOutsetProperties : UInteractiveToolPropertySet {
	float Softness; // 0x60
	bool bBoundaryOnly; // 0x64
	float AreaScale; // 0x68
};

struct AAmmunitionExplosiveArrow : AAmmunitionArrow {
	UAkAudioEvent* _startBeepingEvent; // 0x830
	UAkAudioEvent* _stopBeepingEvent; // 0x838
	float _startOfBeepingBeforeDetonation; // 0x840
	float _innerExplosionRadius; // 0x844
	float _outerExplosionRadius; // 0x848
	float _explosionBaseDamage; // 0x84c
	float _explosionMinDamage; // 0x850
	float _explosionDistanceFalloff; // 0x854
	float _explosionTimerTime; // 0x858
	float _explosionForce; // 0x85c
	FName _detonationPointSocketName; // 0x860
	AReplicatedExplosionEffectsActor* _effectsActorClass; // 0x868
	bool _shouldStartCountdown; // 0x880
};

struct UComboBoxString : UWidget {
	TArray<FString> DefaultOptions; // 0x108
	FString SelectedOption; // 0x118
	FComboBoxStyle WidgetStyle; // 0x128
	FTableRowStyle ItemStyle; // 0x518
	FMargin ContentPadding; // 0xce0
	float MaxListHeight; // 0xcf0
	bool HasDownArrow; // 0xcf4
	bool EnableGamepadNavigationMode; // 0xcf5
	FSlateFontInfo Font; // 0xcf8
	FSlateColor ForegroundColor; // 0xd50
	bool bIsFocusable; // 0xd78
	FDelegate OnGenerateWidgetEvent; // 0xd7c
	FMulticastInlineDelegate OnSelectionChanged; // 0xd90
	FMulticastInlineDelegate OnOpening; // 0xda0
};

struct UTouchInterface : UObject {
	TArray<FTouchInputControl> controls; // 0x28
	float ActiveOpacity; // 0x38
	float InactiveOpacity; // 0x3c
	float TimeUntilDeactive; // 0x40
	float TimeUntilReset; // 0x44
	float ActivationDelay; // 0x48
	bool bPreventRecenter; // 0x4c
	float StartupDelay; // 0x50
};

struct UWidgetInteractionComponent : USceneComponent {
	FMulticastInlineDelegate OnHoveredWidgetChanged; // 0x1f8
	int32_t VirtualUserIndex; // 0x218
	int32_t PointerIndex; // 0x21c
	ECollisionChannel TraceChannel; // 0x220
	float InteractionDistance; // 0x224
	EWidgetInteractionSource InteractionSource; // 0x228
	bool bEnableHitTesting; // 0x229
	bool bShowDebug; // 0x22a
	float DebugSphereLineThickness; // 0x22c
	float DebugLineThickness; // 0x230
	FLinearColor DebugColor; // 0x234
	FHitResult CustomHitResult; // 0x2c0
	FVector2D LocalHitLocation; // 0x34c
	FVector2D LastLocalHitLocation; // 0x354
	UWidgetComponent* HoveredWidgetComponent; // 0x360
	FHitResult LastHitResult; // 0x368
	bool bIsHoveredWidgetInteractable; // 0x3f4
	bool bIsHoveredWidgetFocusable; // 0x3f5
	bool bIsHoveredWidgetHitTestVisible; // 0x3f6
};

struct UBlackboardComponent : UActorComponent {
	UBrainComponent* BrainComp; // 0xb0
	UBlackboardData* DefaultBlackboardAsset; // 0xb8
	UBlackboardData* BlackboardAsset; // 0xc0
	TArray<UBlackboardKeyType*> KeyInstances; // 0xe8
};

struct UParticleModuleBeamTarget : UParticleModuleBeamBase {
	Beam2SourceTargetMethod TargetMethod; // 0x30
	FName TargetName; // 0x34
	FRawDistributionVector Target; // 0x40
	char bTargetAbsolute : 1; // 0x88
	char bLockTarget : 1; // 0x88
	Beam2SourceTargetTangentMethod TargetTangentMethod; // 0x8c
	FRawDistributionVector TargetTangent; // 0x90
	char bLockTargetTangent : 1; // 0xd8
	FRawDistributionFloat TargetStrength; // 0xe0
	char bLockTargetStength : 1; // 0x110
	float LockRadius; // 0x114
};

struct ULiveLinkAnimationVirtualSubject : ULiveLinkVirtualSubject {
	bool bAppendSubjectNameToBones; // 0xd9
};

struct UARFaceGeometry : UARTrackedGeometry {
	FVector LookAtTarget; // 0xf8
	bool bIsTracked; // 0x104
	TMap<EARFaceBlendShape, float> BlendShapes; // 0x108
	FTransform LeftEyeTransform; // 0x190
	FTransform RightEyeTransform; // 0x1c0
};

struct UImgMediaSettings : UObject {
	FFrameRate DefaultFrameRate; // 0x28
	float CacheBehindPercentage; // 0x30
	float CacheSizeGB; // 0x34
	int32_t CacheThreads; // 0x38
	int32_t CacheThreadStackSizeKB; // 0x3c
	float GlobalCacheSizeGB; // 0x40
	bool UseGlobalCache; // 0x44
	uint32_t ExrDecoderThreads; // 0x48
	FString DefaultProxy; // 0x50
	bool UseDefaultProxy; // 0x60
};

struct UMediaSoundComponent : USynthComponent {
	EMediaSoundChannels Channels; // 0x6c0
	bool DynamicRateAdjustment; // 0x6c4
	float RateAdjustmentFactor; // 0x6c8
	FFloatRange RateAdjustmentRange; // 0x6cc
	UMediaPlayer* MediaPlayer; // 0x6e0
};

struct UPrisonerBodyCondition_Test : UPrisonerBodyCondition {
	FRuntimeFloatCurve _severityVsElapsedTime; // 0xa8
	bool _shouldBeRemovedWhenTimeElapses; // 0x130
	float _elapsedTime; // 0x134
};

struct USplineMeshComponent : UStaticMeshComponent {
	FSplineMeshParams SplineParams; // 0x4e0
	FVector SplineUpDir; // 0x538
	float SplineBoundaryMin; // 0x544
	FGuid CachedMeshBodySetupGuid; // 0x548
	UBodySetup* BodySetup; // 0x558
	float SplineBoundaryMax; // 0x560
	char bAllowSplineEditingPerInstance : 1; // 0x564
	char bSmoothInterpRollScale : 1; // 0x564
	char bMeshDirty : 1; // 0x564
	ESplineMeshAxis ForwardAxis; // 0x565
	float VirtualTextureMainPassMaxDrawDistance; // 0x568
};

struct UWorldComposition : UObject {
	TArray<ULevelStreaming*> TilesStreaming; // 0x48
	double TilesStreamingTimeThreshold; // 0x58
	bool bLoadAllTilesDuringCinematic; // 0x60
	bool bRebaseOriginIn3DSpace; // 0x61
	float RebaseOriginDistance; // 0x64
};

struct ATrader : ASedentaryNPC {
	ATradePost* _assignedTradePost; // 0x7e8
	TArray<ETradeCategory> _tradeableCategories; // 0x7f0
	TArray<UObject*> _tradeableClasses; // 0x800
};

struct UAxisPositionGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoFloatParameterSource> ParameterSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bEnableSignedAxis; // 0x88
	bool bInInteraction; // 0x89
	FVector InteractionOrigin; // 0x8c
	FVector InteractionAxis; // 0x98
	FVector InteractionStartPoint; // 0xa4
	FVector InteractionCurPoint; // 0xb0
	float InteractionStartParameter; // 0xbc
	float InteractionCurParameter; // 0xc0
	float ParameterSign; // 0xc4
};

struct UEnvQueryGenerator_Donut : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue InnerRadius; // 0x80
	FAIDataProviderFloatValue OuterRadius; // 0xb8
	FAIDataProviderIntValue NumberOfRings; // 0xf0
	FAIDataProviderIntValue PointsPerRing; // 0x128
	FEnvDirection ArcDirection; // 0x160
	FAIDataProviderFloatValue ArcAngle; // 0x180
	bool bUseSpiralPattern; // 0x1b8
	UEnvQueryContext* Center; // 0x1c0
	char bDefineArc : 1; // 0x1c8
};

struct UPrisonerBodyCondition_NutrientDeficiency : UPrisonerBodyCondition {
	ENutrient _nutrient; // 0xa8
	FRuntimeFloatCurve _severityVsNutrientDeficiencyRatio; // 0xb0
	float _maxRatioOfAbsorbedNutrientCapacityToBeRecovered; // 0x138
	float _nutrientDeficiency; // 0x13c
	float _nutrientDeficiencyToRecover; // 0x140
};

struct ULandscapeLayerInfoObject : UObject {
	FName LayerName; // 0x28
	UPhysicalMaterial* PhysMaterial; // 0x30
	float Hardness; // 0x38
	FLinearColor LayerUsageDebugColor; // 0x3c
};

struct UPrisonerBodySymptom_StomachFullness : UPrisonerBodySymptom {
	FRuntimeFloatCurve _severityVsStomachFullness; // 0xb8
	FRuntimeFloatCurve _eatingSpeedModifierVsSeverity; // 0x140
};

struct ULevelSequenceDirector : UObject {
	ULevelSequencePlayer* Player; // 0x28
};

struct ABP_Survival_Storage_Mission_C : AMission {
	USceneComponent* DefaultSceneRoot; // 0x468
};

struct UMaterialInterface : UObject {
	USubsurfaceProfile* SubsurfaceProfile; // 0x38
	FLightmassMaterialInterfaceSettings LightmassSettings; // 0x50
	TArray<FMaterialTextureInfo> TextureStreamingData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct ULiveLinkComponentSettings : UObject {
	TMap<ULiveLinkRole*, ULiveLinkControllerBase*> DefaultControllerForRole; // 0x28
};

struct UUI_Metabolism_BasicInfo_C : UMetabolismBasicInfoPanel {
	UUI_CollapsableContainer_C* UI_CollapsableContainer; // 0x2a8
};

struct ABP_Survival_Storage_CraftStoneAxe_Objective_C : ACraftingObjective {
	USceneComponent* DefaultSceneRoot; // 0x348
};

struct UOnlineSessionClient : UOnlineSession {
	bool bIsFromInvite; // 0x1d8
	bool bHandlingDisconnect; // 0x1d9
};

struct USmoothWeightMapSetProperties : UWeightMapSetProperties {
	float MinSmoothMultiplier; // 0x80
};

struct UObjectReferencer : UObject {
	TArray<UObject*> ReferencedObjects; // 0x28
};

struct UMaterialExpressionLandscapeVisibilityMask : UMaterialExpression {
	FGuid ExpressionGUID; // 0x40
};

struct UBird2AnimInstance : UAnimInstance {
	float ABPSpeed; // 0x2b8
	bool IsLanding; // 0x2bc
	bool IsTakingOff; // 0x2bd
	bool IsPerched; // 0x2be
	bool IsFlying; // 0x2bf
	bool IsStaringPerched; // 0x2c0
	FRotator SlopeRootTiltRotation; // 0x2c4
};

struct ULaserTriggerComponent : UTriggerComponent {
	UBoxComponent* BoxCollisionComponent; // 0x4d0
	UStaticMeshComponent* VisualizationMeshComponent; // 0x4d8
	FVector _laserDirection; // 0x4e0
	float _maxLaserLength; // 0x4ec
	float _laserThickness; // 0x4f0
	float _laserHeight; // 0x4f4
	UStaticMesh* _visualizationMesh; // 0x4f8
	FTransform _laserMeshTransform; // 0x500
};

struct UHandheldLightItemState : UItemState {
	int32_t CurrentLightAngleIndex; // 0xf8
	float CurrentLightIntensity; // 0xfc
};

struct UMessageBox : UUserWidget {
	UTextBlock* _message; // 0x278
	UHorizontalBox* _buttonRow; // 0x280
};

struct UAnimStreamable : UAnimSequenceBase {
	int32_t NumFrames; // 0xa8
	EAnimInterpolationType Interpolation; // 0xac
	FName RetargetSource; // 0xb0
	UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xc8
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd0
	bool bEnableRootMotion; // 0xd8
	ERootMotionRootLock RootMotionRootLock; // 0xd9
	bool bForceRootLock; // 0xda
	bool bUseNormalizedRootMotionScale; // 0xdb
};

struct UM1887_InsertShell_C : UInsertCartridge {
	FWeaponReloadData ModifiedReloadData; // 0xa0
};

struct UMaterialExpressionTime : UMaterialExpression {
	char bIgnorePause : 1; // 0x40
	char bOverride_Period : 1; // 0x40
	float Period; // 0x44
};

struct UUMGSequencePlayer : UObject {
	UWidgetAnimation* Animation; // 0x410
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x420
};

struct UInAppPurchaseCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UPaperSpriteComponent : UMeshComponent {
	UPaperSprite* SourceSprite; // 0x470
	UMaterialInterface* MaterialOverride; // 0x478
	FLinearColor SpriteColor; // 0x480
};

struct UAwarenessSkill : UIntelligenceSkill {
	float StaminaConsumption; // 0xb8
	UAkAudioEvent* EnterFocusModeAudioEvent; // 0xc0
	UAkAudioEvent* LeaveFocusModeAudioEvent; // 0xc8
	float _updateTime; // 0xd0
	float _serverUpdateTime; // 0xd4
	float _basicWatchingDetectionChance; // 0xd8
	float _mediumWatchingDetectionChance; // 0xdc
	float _advancedWatchingDetectionChance; // 0xe0
	float _aboveAdvancedWatchingDetectionChance; // 0xe4
	float _noSkillItemDetectionTime; // 0xe8
	float _basicItemDetectionTime; // 0xec
	float _mediumItemDetectionTime; // 0xf0
	float _advancedItemDetectionTime; // 0xf4
	float _aboveAdvancedItemDetectionTime; // 0xf8
	float _noSkillItemDetectionRadius; // 0xfc
	float _basicItemDetectionRadius; // 0x100
	float _mediumItemDetectionRadius; // 0x104
	float _advancedItemDetectionRadius; // 0x108
	float _aboveAdvancedItemDetectionRadius; // 0x10c
	float _noSkillItemDetectionChance; // 0x110
	float _basicItemDetectionChance; // 0x114
	float _mediumItemDetectionChance; // 0x118
	float _advancedItemDetectionChance; // 0x11c
	float _aboveAdvancedItemDetectionChance; // 0x120
	float _noSkillItemHighlightByDayRadius; // 0x124
	float _basicItemHighlightByDayRadius; // 0x128
	float _mediumItemHighlightByDayRadius; // 0x12c
	float _advancedItemHighlightByDayRadius; // 0x130
	float _aboveAdvancedItemHighlightByDayRadius; // 0x134
	float _noSkillItemHighlightByNightRadius; // 0x138
	float _basicItemHighlightByNightRadius; // 0x13c
	float _mediumItemHighlightByNightRadius; // 0x140
	float _advancedItemHighlightByNightRadius; // 0x144
	float _aboveAdvancedItemHighlightByNightRadius; // 0x148
	float _noSkillWatchingDetectionRadius; // 0x14c
	float _basicWatchingDetectionRadius; // 0x150
	float _mediumWatchingDetectionRadius; // 0x154
	float _advancedWatchingDetectionRadius; // 0x158
	float _aboveAdvancedWatchingDetectionRadius; // 0x15c
	float _characterDetectionAngle; // 0x160
	float _characterDetectionTime; // 0x164
	float _characterDetectionRange; // 0x168
	float _characterDetectionPeriodicRangeIncrement; // 0x16c
	float _noSkillHiddenCharacterDetectionRange; // 0x170
	float _basicHiddenCharacterDetectionRange; // 0x174
	float _mediumHiddenCharacterDetectionRange; // 0x178
	float _advancedHiddenCharacterDetectionRange; // 0x17c
	float _aboveAdvancedHiddenCharacterDetectionRange; // 0x180
	float _noSkillHotSpotHiddenCharacterDetectionRange; // 0x184
	float _basicHotSpotHiddenCharacterDetectionRange; // 0x188
	float _mediumHotSpotHiddenCharacterDetectionRange; // 0x18c
	float _advancedHotSpotHiddenCharacterDetectionRange; // 0x190
	float _aboveAdvancedHotSpotHiddenCharacterDetectionRange; // 0x194
	float _noSkillSoundDetectionRange; // 0x198
	float _basicSoundDetectionRange; // 0x19c
	float _mediumSoundDetectionRange; // 0x1a0
	float _advancedSoundDetectionRange; // 0x1a4
	float _aboveAdvancedSoundDetectionRange; // 0x1a8
	float _notMovingFocusRangeMultiplier; // 0x1ac
	float _slowMovingFocusRangeMultiplier; // 0x1b0
	float _mediumMovingFocusRangeMultiplier; // 0x1b4
	float _fastMovingFocusRangeMultiplier; // 0x1b8
	float _noSkillFocusModeActivationTime; // 0x1bc
	float _basicFocusModeActivationTime; // 0x1c0
	float _mediumFocusModeActivationTime; // 0x1c4
	float _advancedFocusModeActivationTime; // 0x1c8
	float _aboveAdvancedFocusModeActivationTime; // 0x1cc
	float _noSkillTrackDetectionRange; // 0x1d0
	float _basicTrackDetectionRange; // 0x1d4
	float _mediumTrackDetectionRange; // 0x1d8
	float _advancedTrackDetectionRange; // 0x1dc
	float _aboveAdvancedTrackDetectionRange; // 0x1e0
	float _trackDetectionNightTimeMultiplier; // 0x1e4
	float _noSkillTrapDetectionRange; // 0x1e8
	float _basicTrapDetectionRange; // 0x1ec
	float _mediumTrapDetectionRange; // 0x1f0
	float _advancedTrapDetectionRange; // 0x1f4
	float _aboveAdvancedTrapDetectionRange; // 0x1f8
	float _noSkillFlashFadeOutDurationMultiplier; // 0x1fc
	float _basicFlashFadeOutDurationMultiplier; // 0x200
	float _mediumFlashFadeOutDurationMultiplier; // 0x204
	float _advancedFlashFadeOutDurationMultiplier; // 0x208
	float _aboveAdvancedFlashFadeOutDurationMultiplier; // 0x20c
	float _noSkillContainerItemSpawnProbabilityModifier; // 0x210
	float _basicContainerItemSpawnProbabilityModifier; // 0x214
	float _mediumContainerItemSpawnProbabilityModifier; // 0x218
	float _advancedContainerItemSpawnProbabilityModifier; // 0x21c
	float _aboveAdvancedContainerItemSpawnProbabilityModifier; // 0x220
};

struct UMoviePlayerSettings : UObject {
	bool bWaitForMoviesToComplete; // 0x28
	bool bMoviesAreSkippable; // 0x29
	TArray<FString> StartupMovies; // 0x30
};

struct UBTTask_RotateToFaceBBEntry : UBTTask_BlackboardBase {
	float Precision; // 0x98
};

struct UScaleBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UProjectileMovementComponent : UMovementComponent {
	float InitialSpeed; // 0xf0
	float MaxSpeed; // 0xf4
	char bRotationFollowsVelocity : 1; // 0xf8
	char bRotationRemainsVertical : 1; // 0xf8
	char bShouldBounce : 1; // 0xf8
	char bInitialVelocityInLocalSpace : 1; // 0xf8
	char bForceSubStepping : 1; // 0xf8
	char bSimulationEnabled : 1; // 0xf8
	char bSweepCollision : 1; // 0xf8
	char bIsHomingProjectile : 1; // 0xf8
	char bBounceAngleAffectsFriction : 1; // 0xf9
	char bIsSliding : 1; // 0xf9
	char bInterpMovement : 1; // 0xf9
	char bInterpRotation : 1; // 0xf9
	float PreviousHitTime; // 0xfc
	FVector PreviousHitNormal; // 0x100
	float ProjectileGravityScale; // 0x10c
	float Buoyancy; // 0x110
	float Bounciness; // 0x114
	float Friction; // 0x118
	float BounceVelocityStopSimulatingThreshold; // 0x11c
	float MinFrictionFraction; // 0x120
	FMulticastInlineDelegate OnProjectileBounce; // 0x128
	FMulticastInlineDelegate OnProjectileStop; // 0x138
	float HomingAccelerationMagnitude; // 0x148
	TWeakObjectPtr<USceneComponent> HomingTargetComponent; // 0x14c
	float MaxSimulationTimeStep; // 0x154
	int32_t MaxSimulationIterations; // 0x158
	int32_t BounceAdditionalIterations; // 0x15c
	float InterpLocationTime; // 0x160
	float InterpRotationTime; // 0x164
	float InterpLocationMaxLagDistance; // 0x168
	float InterpLocationSnapToTargetDistance; // 0x16c
};

struct USoundNodeDistanceCrossFade : USoundNode {
	TArray<FDistanceDatum> CrossFadeInput; // 0x48
};

struct UPolygonSelectionMechanic : UInteractionMechanic {
	UPolygonSelectionMechanicProperties* Properties; // 0x50
	APreviewGeometryActor* PreviewGeometryActor; // 0x360
	UTriangleSetComponent* DrawnTriangleSetComponent; // 0x368
	UMaterialInterface* HighlightedFaceMaterial; // 0x3c0
};

struct UConZVehicleTire : UDcxVehicleTire {
	FConZVehicleTireParticleData ParticleTrail; // 0xe0
	FConZVehicleTireParticleData ParticleWave; // 0xf4
};

struct UInputWidget_C : UInputWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UScrollBox* CombatControlsScrollBox; // 0x288
	UWidgetSwitcher* ControlsWidgetSwitcher; // 0x290
	UScrollBox* GesturesScrollBox; // 0x298
	UScrollBox* InstrumentsScrollBox; // 0x2a0
	UScrollBox* MilitaryCommandsScrollBox; // 0x2a8
	UScrollBox* ModeControlsScrollBox; // 0x2b0
	UScrollBox* MovementControlsScrollBox; // 0x2b8
	UScrollBox* QuickAccessScrollBox; // 0x2c0
	UUI_OptionsSlider_C* SectionSwitcher; // 0x2c8
	UUI_KeyBinding_C* UI_KeyBinding; // 0x2d0
	UUI_KeyBinding_C* UI_KeyBinding_90; // 0x2d8
	UUI_KeyBinding_C* UI_KeyBinding_153; // 0x2e0
	UUI_KeyBinding_C* UI_KeyBinding_203; // 0x2e8
	UUI_KeyBinding_C* UI_KeyBinding_245; // 0x2f0
	UUI_KeyBinding_C* UI_KeyBinding_364; // 0x2f8
	UScrollBox* VehiclesScrollBox; // 0x300
	UScrollBox* WeaponControlsScrollBox; // 0x308
	UWidget* _lastWidget; // 0x310
	UUI_TrashMenuButton_C* _lastButton; // 0x318
	UUI_KeyBinding_C* _widgetToRebind; // 0x320
	UUI_YesNoMenuConfirmation_C* _backConfirmationWidget; // 0x328
};

struct UMaterialExpressionArctangentFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionFrac : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UBorderFilled_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UWidgetAnimation* BackgroundImageAnimation; // 0x280
	UImage* BackgroundImage; // 0x288
	UImage* BorderImage; // 0x290
	float _marginPixelSize; // 0x298
	float _marginGap; // 0x29c
	FLinearColor _borderColor; // 0x2a0
	FLinearColor _backgroundColor; // 0x2b0
	float _marginBottomSize; // 0x2c0
};

struct ABP_WeaponBullet_ExplosiveArrow_Carbon_C : AProjectileExplosiveArrow {
	UParticleSystemComponent* P_ArrowTrail; // 0x458
};

struct UMaterialExpressionFresnel : UMaterialExpression {
	FExpressionInput ExponentIn; // 0x40
	float Exponent; // 0x54
	FExpressionInput BaseReflectFractionIn; // 0x58
	float BaseReflectFraction; // 0x6c
	FExpressionInput Normal; // 0x70
};

struct UAISystemBase : UObject {
	FSoftClassPath AISystemClassName; // 0x28
	FName AISystemModuleName; // 0x40
	bool bInstantiateAISystemOnClient; // 0x50
};

struct USoundCue : USoundBase {
	char bPrimeOnLoad : 1; // 0x1b8
	USoundNode* FirstNode; // 0x1c0
	float VolumeMultiplier; // 0x1c8
	float PitchMultiplier; // 0x1cc
	FSoundAttenuationSettings AttenuationOverrides; // 0x1d0
	float SubtitlePriority; // 0x570
	char bOverrideAttenuation : 1; // 0x578
	char bExcludeFromRandomNodeBranchCulling : 1; // 0x578
	int32_t CookedQualityIndex; // 0x57c
	char bHasPlayWhenSilent : 1; // 0x580
};

struct UAdminCommand_EnableOrDisableServer : UAdminCommand {
	bool _shouldEnableServer; // 0x80
};

struct UAnimNotify_FishingActionNotify : UAnimNotify {
	EFishingActionNotifyType FishingActionNotifyType; // 0x38
};

struct UIntSerialization : UObject {
	uint16_t UnsignedInt16Variable; // 0x28
	uint32_t UnsignedInt32Variable; // 0x2c
	uint64_t UnsignedInt64Variable; // 0x30
	int8_t SignedInt8Variable; // 0x38
	int16_t SignedInt16Variable; // 0x3a
	int64_t SignedInt64Variable; // 0x40
	char UnsignedInt8Variable; // 0x48
	int32_t SignedInt32Variable; // 0x4c
};

struct UNiagaraDataInterfaceRenderTarget2D : UNiagaraDataInterfaceRWBase {
	FIntPoint Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe0
	char bOverrideFormat : 1; // 0xe1
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTarget2D*> ManagedRenderTargets; // 0x108
};

struct UBTTaskNode : UBTNode {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct UEnvQueryTest_Pathfinding : UEnvQueryTest {
	EEnvTestPathfinding TestMode; // 0x1f8
	UEnvQueryContext* Context; // 0x200
	FAIDataProviderBoolValue PathFromContext; // 0x208
	FAIDataProviderBoolValue SkipUnreachable; // 0x240
	UNavigationQueryFilter* FilterClass; // 0x278
};

struct UMaterialExpressionMapARPassthroughCameraUV : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
};

struct ADestructibleActor : AActor {
	UDestructibleComponent* DestructibleComponent; // 0x220
	FMulticastInlineDelegate OnActorFracture; // 0x228
};

struct ABP_Mosin_Bayonet_C : AWeaponAttachmentBayonet {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleKnife; // 0x7e0
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsuleBayonet; // 0x7e8
};

struct UBaseInteractionComponent : USceneComponent {
	float _capsuleRadius; // 0x208
	float _capsuleHalfHeight; // 0x20c
};

struct ABlueprintableItemObjective : ARequirementObjective {
	EBlueprintItemActionType _actionType; // 0x330
	AActor* _targetBlueprintActor; // 0x338
	TArray<AActor*> _itemsToFill; // 0x340
};

struct UItemActionSequenceLoadMagazine : UItemActionSequence {
	int32_t _loadedAmmoCount; // 0x88
};

struct UMetabolismBodyReservesPanel : UUserWidget {
	UMetabolismRadialProgressBar* _rpb_Muscle; // 0x260
	UMetabolismRadialProgressBar* _rpb_Fat; // 0x268
};

struct UPrisonerAnimInstance_Aerial : UAnimInstance {
	EPrisonerFallingPose _upcomingPose; // 0x2b8
	EPrisonerFallingPose _previousPose; // 0x2b9
	UAnimSequence* _blendAnimationOverride; // 0x2c0
	float _blendAnimationOverrideTime; // 0x2c8
	float _poseBlendWeight; // 0x2cc
	FVector2D _fallingControl; // 0x2d0
	float _fallSpeed; // 0x2d8
	float _yawRotationRate; // 0x2dc
	bool _isInFirstPersonView; // 0x2e0
	bool _hasHandBondage; // 0x2e1
	UAnimSequenceBase* _handsBoundIdleFPAnimation; // 0x2e8
	UAnimSequenceBase* _handsBoundIdleTPAnimation; // 0x2f0
	float _distanceToJumpApexNormalized; // 0x2f8
	float _legsPoseBeforeJump; // 0x2fc
	EPrisonerMovementPace _movementPaceBeforeJump; // 0x300
};

struct ABP_WeaponBullet_50BMG_C : AProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
};

struct UVDSkinnedRopeComponent : UVDRopeComponent {
	FComponentReference PoseableMeshRef; // 0x6f8
};

struct UMovieSceneTakeSettings : UObject {
	FString HoursName; // 0x28
	FString MinutesName; // 0x38
	FString SecondsName; // 0x48
	FString FramesName; // 0x58
	FString SubFramesName; // 0x68
	FString SlateName; // 0x78
};

struct UDatasmithPointLightComponentTemplate : UDatasmithObjectTemplate {
	ELightUnits IntensityUnits; // 0x30
	float SourceRadius; // 0x34
	float SourceLength; // 0x38
	float AttenuationRadius; // 0x3c
};

struct UBTTask_WaitBlackboardTime : UBTTask_Wait {
	FBlackboardKeySelector BlackboardKey; // 0x78
};

struct UTextureRenderTargetVolume : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	int32_t SizeZ; // 0xe8
	FLinearColor ClearColor; // 0xec
	EPixelFormat OverrideFormat; // 0xfc
	char bHDR : 1; // 0xfd
	char bForceLinearGamma : 1; // 0xfd
};

struct UMaterialExpressionCosine : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct USoundAttenuation : UObject {
	FSoundAttenuationSettings Attenuation; // 0x28
};

struct AWaterBodyIsland : AActor {
	UWaterSplineComponent* SplineComp; // 0x228
};

struct UMovieSceneSequence : UMovieSceneSignedObject {
	UMovieSceneCompiledData* CompiledData; // 0x50
	EMovieSceneCompletionMode DefaultCompletionMode; // 0x58
	bool bParentContextsAreSignificant; // 0x59
	bool bPlayableDirectly; // 0x5a
	EMovieSceneSequenceFlags SequenceFlags; // 0x5b
};

struct UBondageItemTag : UBaseItemTag {
	USkeletalMesh* BondageMesh; // 0x30
	float BaseStruggleDuration; // 0x38
	float StruggleStrengthModifier; // 0x3c
	float StruggleDexterityModifier; // 0x40
	float GroundMovementSpeedMultiplier; // 0x44
	float WaterMovementSpeedMultiplier; // 0x48
	UAnimSequenceBase* HandsBoundIdleFPAnimation; // 0x50
	UAnimSequenceBase* HandsBoundIdleTPAnimation; // 0x58
	UAnimMontage* HandsBoundMontage; // 0x60
	UAnimMontage* HandsAdjustMontage; // 0x68
	UAnimMontage* HandsBoundStruggleMontage; // 0x70
	UAnimMontage* HandsFreedMontage; // 0x78
	UAnimMontage* BindingHandsMontage; // 0x80
	UAnimMontage* AdjustingHandsMontage; // 0x88
	UAnimMontage* HandsBoundSuicideMontage; // 0x90
};

struct UVoiceChatComponent : UActorComponent {
	float MaxVoiceDistance; // 0xb8
	bool ActiveTalker; // 0xbc
	float StopTalkingTimeThreshold; // 0xc0
};

struct UDistributionVectorConstant : UDistributionVector {
	FVector Constant; // 0x38
	char bLockAxes : 1; // 0x44
	EDistributionVectorLockFlags LockedAxes; // 0x48
};

struct APointLight : ALight {
	UPointLightComponent* PointLightComponent; // 0x230
};

struct UPrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect : UPrisonerBodyConditionOrSymptomSideEffect {
	UPrisonerBodySymptom_PeriodicAffect* _symptomClass; // 0x30
	UPrisonerBodySymptomCause_PeriodicAffect* _symptomCause; // 0x38
	FRuntimeFloatCurve _intervalVsSeverity; // 0x40
	FRuntimeFloatCurve _chanceVsSeverity; // 0xc8
	FFloatInterval _durationVsConstitution; // 0x150
	FFloatInterval _intensityVsConstitution; // 0x158
};

struct UGeometryCacheTrack_FlipbookAnimation : UGeometryCacheTrack {
	uint32_t NumMeshSamples; // 0x58
};

struct UAtmosphericFogComponent : USceneComponent {
	float SunMultiplier; // 0x1f8
	float FogMultiplier; // 0x1fc
	float DensityMultiplier; // 0x200
	float DensityOffset; // 0x204
	float DistanceScale; // 0x208
	float AltitudeScale; // 0x20c
	float DistanceOffset; // 0x210
	float GroundOffset; // 0x214
	float StartDistance; // 0x218
	float SunDiscScale; // 0x21c
	float DefaultBrightness; // 0x220
	FColor DefaultLightColor; // 0x224
	char bDisableSunDisk : 1; // 0x228
	char bAtmosphereAffectsSunIlluminance : 1; // 0x228
	char bDisableGroundScattering : 1; // 0x228
	FAtmospherePrecomputeParameters PrecomputeParams; // 0x22c
	UTexture2D* TransmittanceTexture; // 0x258
	UTexture2D* IrradianceTexture; // 0x260
};

struct UImgMediaSource : UBaseMediaSource {
	FFrameRate FrameRateOverride; // 0x88
	FString ProxyOverride; // 0x90
	FDirectoryPath SequencePath; // 0xa0
};

struct ARecastNavMesh : ANavigationData {
	char bDrawTriangleEdges : 1; // 0x428
	char bDrawPolyEdges : 1; // 0x428
	char bDrawFilledPolys : 1; // 0x428
	char bDrawNavMeshEdges : 1; // 0x428
	char bDrawTileBounds : 1; // 0x428
	char bDrawPathCollidingGeometry : 1; // 0x428
	char bDrawTileLabels : 1; // 0x428
	char bDrawPolygonLabels : 1; // 0x428
	char bDrawDefaultPolygonCost : 1; // 0x429
	char bDrawLabelsOnPathNodes : 1; // 0x429
	char bDrawNavLinks : 1; // 0x429
	char bDrawFailedNavLinks : 1; // 0x429
	char bDrawClusters : 1; // 0x429
	char bDrawOctree : 1; // 0x429
	char bDrawOctreeDetails : 1; // 0x429
	char bDrawMarkedForbiddenPolys : 1; // 0x429
	char bDistinctlyDrawTilesBeingBuilt : 1; // 0x42a
	float DrawOffset; // 0x42c
	char bFixedTilePoolSize : 1; // 0x430
	int32_t TilePoolSize; // 0x434
	float TileSizeUU; // 0x438
	float CellSize; // 0x43c
	float CellHeight; // 0x440
	float AgentRadius; // 0x444
	float AgentHeight; // 0x448
	float AgentMaxSlope; // 0x44c
	float AgentMaxStepHeight; // 0x450
	float MinRegionArea; // 0x454
	float MergeRegionSize; // 0x458
	float MaxSimplificationError; // 0x45c
	int32_t MaxSimultaneousTileGenerationJobsCount; // 0x460
	int32_t TileNumberHardLimit; // 0x464
	int32_t PolyRefTileBits; // 0x468
	int32_t PolyRefNavPolyBits; // 0x46c
	int32_t PolyRefSaltBits; // 0x470
	FVector NavMeshOriginOffset; // 0x474
	float DefaultDrawDistance; // 0x480
	float DefaultMaxSearchNodes; // 0x484
	float DefaultMaxHierarchicalSearchNodes; // 0x488
	ERecastPartitioning RegionPartitioning; // 0x48c
	ERecastPartitioning LayerPartitioning; // 0x48d
	int32_t RegionChunkSplits; // 0x490
	int32_t LayerChunkSplits; // 0x494
	char bSortNavigationAreasByCost : 1; // 0x498
	char bPerformVoxelFiltering : 1; // 0x498
	char bMarkLowHeightAreas : 1; // 0x498
	char bUseExtraTopCellWhenMarkingAreas : 1; // 0x498
	char bFilterLowSpanSequences : 1; // 0x498
	char bFilterLowSpanFromTileCache : 1; // 0x498
	char bDoFullyAsyncNavDataGathering : 1; // 0x498
	char bUseBetterOffsetsFromCorners : 1; // 0x498
	char bStoreEmptyTileLayers : 1; // 0x499
	char bUseVirtualFilters : 1; // 0x499
	char bAllowNavLinkAsPathEnd : 1; // 0x499
	char bUseVoxelCache : 1; // 0x499
	float TileSetUpdateInterval; // 0x49c
	float HeuristicScale; // 0x4a0
	float VerticalDeviationFromGroundCompensation; // 0x4a4
};

struct UNiagaraDataInterfaceParticleRead : UNiagaraDataInterfaceRWBase {
	FString EmitterName; // 0xd8
};

struct USentryThirdPersonViewComponent : UPrisonerViewComponent {
	FName StandingSubviewName; // 0xd0
	FName StandingAimingSubviewName; // 0xd8
};

struct UInterpTrackInstLinearColorProp : UInterpTrackInstProperty {
	FLinearColor ResetColor; // 0x58
};

struct UInstancedStaticMeshComponent : UStaticMeshComponent {
	TArray<FInstancedStaticMeshInstanceData> PerInstanceSMData; // 0x4d8
	int32_t NumCustomDataFloats; // 0x4e8
	bool bKeepInstanceBufferCPUAccess; // 0x4ec
	TArray<float> PerInstanceSMCustomData; // 0x4f0
	int32_t InstancingRandomSeed; // 0x500
	int32_t InstanceStartCullDistance; // 0x504
	int32_t InstanceEndCullDistance; // 0x508
	TArray<int32_t> InstanceReorderTable; // 0x510
	int32_t NumPendingLightmaps; // 0x568
	TArray<FInstancedStaticMeshMappingInfo> CachedMappings; // 0x570
};

struct ADeer2 : AComplexAnimal2 {
	float _hartBaseScale; // 0xab8
	float _hartScaleVariance; // 0xabc
	float _hindBaseScale; // 0xac0
	float _hindScaleVariance; // 0xac4
	float _maleChance; // 0xac8
	bool _isMale; // 0xacc
	USkeletalMesh* _maleSkeletalMesh; // 0xad0
	TArray<UStaticMesh*> _antlerMeshes; // 0xad8
	UStaticMeshComponent* _antlers; // 0xae8
	uint32_t _hartHind; // 0xaf0
	UChoppingRecipeDataAsset* _maleChoppingRecipeDataAsset; // 0xaf8
};

struct UMetabolismTitleAndAPB : UUserWidget {
	FText Title; // 0x260
	UTextBlock* _titleText; // 0x278
	UImage* _background; // 0x280
	UMetabolismAdvancedProgressBar* _apb_ValueAndProgress; // 0x288
	FDataTableRowHandle _backgroundColor; // 0x290
	FDataTableRowHandle _titleTextColor; // 0x2a0
};

struct UUI_MissionItem_C : UMissionItemWidget {
	UImage* _background; // 0x448
	UImage* _selectionBackground; // 0x450
	UImage* _selectionIcon; // 0x458
	UImage* _verticalImage; // 0x460
};

struct UUI_TooltipOverviewTextParameterElement_C : UItemTooltipPanelElement {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UImage* Image_2; // 0x288
	UTextBlock* TextBlock_1; // 0x290
	UTextBlock* TextBlock_47; // 0x298
	FSlateFontInfo Font; // 0x2a0
	FText TextFormat; // 0x2f8
	FText ParameterText; // 0x310
	int32_t MinimumIntegralDigits; // 0x328
	int32_t MaximumIntegralDigits; // 0x32c
	int32_t MinimumFractionalDigits; // 0x330
	int32_t MaximumFractionalDigits; // 0x334
};

struct USoundWave : USoundBase {
	int32_t CompressionQuality; // 0x1b8
	int32_t StreamingPriority; // 0x1bc
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x1c0
	ESoundGroup SoundGroup; // 0x1c2
	char bLooping : 1; // 0x1c3
	char bStreaming : 1; // 0x1c3
	char bSeekableStreaming : 1; // 0x1c3
	ESoundWaveLoadingBehavior LoadingBehavior; // 0x1c4
	char bMature : 1; // 0x1c5
	char bManualWordWrap : 1; // 0x1c5
	char bSingleLine : 1; // 0x1c6
	char bIsAmbisonics : 1; // 0x1c6
	TArray<float> FrequenciesToAnalyze; // 0x1c8
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x1d8
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x1e8
	int32_t InitialChunkSize; // 0x1f8
	FString SpokenText; // 0x240
	float SubtitlePriority; // 0x250
	float Volume; // 0x254
	float Pitch; // 0x258
	int32_t NumChannels; // 0x25c
	int32_t SampleRate; // 0x260
	TArray<FSubtitleCue> Subtitles; // 0x270
	UCurveTable* Curves; // 0x280
	UCurveTable* InternalCurves; // 0x288
};

struct UWaterSplineMetadata : USplineMetadata {
	FInterpCurveFloat Depth; // 0x28
	FInterpCurveFloat WaterVelocityScalar; // 0x40
	FInterpCurveFloat RiverWidth; // 0x58
	FInterpCurveFloat AudioIntensity; // 0x70
	FInterpCurveVector WaterVelocity; // 0x88
};

struct UHoleFillTool : USingleSelectionTool {
	USmoothHoleFillProperties* SmoothHoleFillProperties; // 0x98
	UHoleFillToolProperties* Properties; // 0xa0
	UHoleFillToolActions* Actions; // 0xa8
	UHoleFillStatisticsProperties* Statistics; // 0xb0
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xb8
	UPolygonSelectionMechanic* SelectionMechanic; // 0xc0
};

struct UDroneSoundComponent : UCharacterSoundComponent {
	USoundCue* IdleSound; // 0xd8
	UAkAudioEvent* IdleAudioEvent; // 0xe0
	USoundCue* AngrySound; // 0xe8
	UAkAudioEvent* AngryAudioEvent; // 0xf0
	USoundCue* AttackSound; // 0xf8
	UAkAudioEvent* AttackAudioEvent; // 0x100
	USoundCue* KillSound; // 0x108
	UAkAudioEvent* KillAudioEvent; // 0x110
	float MinSilenceTimeout; // 0x118
	float MaxSilenceTimeout; // 0x11c
};

struct UMaterialExpressionLandscapeLayerWeight : UMaterialExpression {
	FExpressionInput Base; // 0x40
	FExpressionInput Layer; // 0x54
	FName ParameterName; // 0x68
	float PreviewWeight; // 0x70
	FVector ConstBase; // 0x74
	FGuid ExpressionGUID; // 0x80
};

struct ABP_ChristmasGhost_C : AChristmasGhost {
	FPointerToUberGraphFrame UberGraphFrame; // 0x300
	USkeletalMeshComponent* Ghost; // 0x308
	USceneComponent* DefaultSceneRoot; // 0x310
	TArray<USkeletalMesh*> PossibleMeshes; // 0x318
	UAnimMontage* MontageToPlay; // 0x328
};

struct UPointSetComponent : UMeshComponent {
	UMaterialInterface* PointMaterial; // 0x470
	FBoxSphereBounds Bounds; // 0x478
	bool bBoundsDirty; // 0x494
};

struct UParticleModuleVelocityOverLifetime : UParticleModuleVelocityBase {
	FRawDistributionVector VelOverLife; // 0x38
	char Absolute : 1; // 0x80
};

struct ACan03_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UParticleModuleRotation : UParticleModuleRotationBase {
	FRawDistributionFloat StartRotation; // 0x30
};

struct UPaperGroupedSpriteComponent : UMeshComponent {
	TArray<UMaterialInterface*> InstanceMaterials; // 0x470
	TArray<FSpriteInstanceData> PerInstanceSpriteData; // 0x480
};

struct UBreathingBarLungsWidget_C : UBreathingBarLungsWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UWidgetAnimation* CriticalStateAnimation; // 0x280
};

struct UUI_YesNoMenuConfirmation_C : UUI_ConfirmationBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	UImage* Image_11; // 0x2a0
	UTextBlock* MainText; // 0x2a8
	UUI_TrashMenuButton_C* NoButton; // 0x2b0
	UUI_TrashMenuButton_C* YesButton; // 0x2b8
	FMulticastInlineDelegate YesClicked; // 0x2c0
};

struct UDisplaceMeshCommonProperties : UInteractiveToolPropertySet {
	EDisplaceMeshToolDisplaceType DisplacementType; // 0x60
	float DisplaceIntensity; // 0x64
	int32_t randomSeed; // 0x68
	int32_t Subdivisions; // 0x6c
	FName WeightMap; // 0x70
	TArray<FString> WeightMapsList; // 0x78
	bool bInvertWeightMap; // 0x88
	bool bDisableSizeWarning; // 0x89
};

struct AKicmovaca_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UParticleModuleMeshMaterial : UParticleModuleMaterialBase {
	TArray<UMaterialInterface*> MeshMaterials; // 0x30
};

struct UCanvasPanelSlot : UPanelSlot {
	FAnchorData LayoutData; // 0x38
	bool bAutoSize; // 0x60
	int32_t ZOrder; // 0x64
};

struct ADropZoneLocationMarker : AGameEventLocationMarker {
	FDropZoneParameters DropZoneParameters; // 0x418
	FVector SpawnOffsetA; // 0x444
	FVector SpawnOffsetB; // 0x450
	float SpawnRadiusA; // 0x45c
	float SpawnRadiusB; // 0x460
	FTransform CargoDropOffset; // 0x470
	FTransform CrateDropOffsetA; // 0x4a0
	FTransform CrateDropOffsetB; // 0x4d0
	UStaticMeshComponent* CrateAPreviewMesh; // 0x500
	UStaticMeshComponent* CrateBPreviewMesh; // 0x508
	UStaticMeshComponent* CargoPreviewMesh; // 0x510
};

struct UBookMark : UBookmarkBase {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	TArray<FString> HiddenLevels; // 0x40
};

struct APETBottle04_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UAnimationSettings : UDeveloperSettings {
	int32_t CompressCommandletVersion; // 0x38
	TArray<FString> KeyEndEffectorsMatchNameArray; // 0x40
	bool ForceRecompression; // 0x50
	bool bForceBelowThreshold; // 0x51
	bool bFirstRecompressUsingCurrentOrDefault; // 0x52
	bool bRaiseMaxErrorToExisting; // 0x53
	bool bEnablePerformanceLog; // 0x54
	bool bStripAnimationDataOnDedicatedServer; // 0x55
	bool bTickAnimationOnSkeletalMeshInit; // 0x56
	TArray<FCustomAttributeSetting> BoneCustomAttributesNames; // 0x58
	TArray<FString> BoneNamesWithCustomAttributes; // 0x68
	TMap<FName, ECustomAttributeBlendType> AttributeBlendModes; // 0x78
	ECustomAttributeBlendType DefaultAttributeBlendMode; // 0xc8
};

struct ATimedGiftSpawner : AActor {
	int64_t _giftSpawnTime; // 0x220
	TArray<TSoftClassPtr<UObject>> _possibleGifts; // 0x228
	TSoftClassPtr<UObject> _referenceItem; // 0x238
	float _giftOffsetFromReferenceItem; // 0x260
};

struct AWaterBodyExclusionVolume : APhysicsVolume {
	bool bIgnoreAllOverlappingWaterBodies; // 0x268
	TArray<AWaterBody*> WaterBodiesToIgnore; // 0x270
};

struct ABP_Survival_BagCrafting_CutPants_Objective_C : AChoppingObjective {
	USceneComponent* DefaultSceneRoot; // 0x368
};

struct AChaosSolverActor : AActor {
	FChaosSolverConfiguration Properties; // 0x220
	float TimeStepMultiplier; // 0x288
	int32_t CollisionIterations; // 0x28c
	int32_t PushOutIterations; // 0x290
	int32_t PushOutPairIterations; // 0x294
	float ClusterConnectionFactor; // 0x298
	EClusterConnectionTypeEnum ClusterUnionConnectionType; // 0x29c
	bool DoGenerateCollisionData; // 0x29d
	FSolverCollisionFilterSettings CollisionFilterSettings; // 0x2a0
	bool DoGenerateBreakingData; // 0x2b0
	FSolverBreakingFilterSettings BreakingFilterSettings; // 0x2b4
	bool DoGenerateTrailingData; // 0x2c4
	FSolverTrailingFilterSettings TrailingFilterSettings; // 0x2c8
	float MassScale; // 0x2d8
	bool bGenerateContactGraph; // 0x2dc
	bool bHasFloor; // 0x2dd
	float FloorHeight; // 0x2e0
	FChaosDebugSubstepControl ChaosDebugSubstepControl; // 0x2e4
	UBillboardComponent* SpriteComponent; // 0x2e8
	UChaosGameplayEventDispatcher* GameplayEventDispatcherComponent; // 0x308
};

struct UPrisonerBodySymptom_Weakness : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8
	float _maxSeverityPerformanceScoreModifier; // 0xbc
};

struct UEndTurnCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct ABP_BasicSurvivalMission_C : AMission {
	USceneComponent* DefaultSceneRoot; // 0x468
};

struct UPrisonerResponseIdle_BodyConditionOrSymptomPresence : UPrisonerResponseIdle {
	UPrisonerBodyConditionOrSymptom* BodyConditionOrSymptom; // 0x98
	FInt32Range SeverityLevels; // 0xa0
};

struct UUI_WinCounter_C : UUserWidget {
	UImage* Image_33; // 0x260
};

struct UUI_CTFMiniStatsWidget_C : UUI_GameEventParticipantStatsWidget_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x318
	UBorder* Border_87; // 0x320
	UTextBlock* Captures; // 0x328
	UTextBlock* Deaths; // 0x330
	UTextBlock* Kills; // 0x338
	UTextBlock* Number; // 0x340
	UTextBlock* PlayerName; // 0x348
	UTextBlock* Score; // 0x350
	UHorizontalBox* StatRow; // 0x358
	FLinearColor TeamColor; // 0x360
};

struct UConZBoatAnimInstance : UAnimInstance {
	bool IsAnyoneMounted; // 0x2b8
	float Speed; // 0x2bc
	float SpeedKph; // 0x2c0
	float MaxEngineSteerAngle; // 0x2c4
	float EngineSteerAngleInterpSpeed; // 0x2c8
	float CurrentEngineSteerAngle; // 0x2cc
	float PropellerRotationAngle; // 0x2d0
	float PropellerRotationSpeedScale; // 0x2d4
	float SailsRotationAngle; // 0x2d8
	bool IsMounteeDriver; // 0x2dc
	bool IsMounteeRowing; // 0x2dd
	FTransform _prisonerLHandTransform; // 0x2e0
	FTransform _prisonerRHandTransform; // 0x310
	FVector WindDirection; // 0x340
};

struct UUI_EmptySlot_C : UUserWidget {
	UImage* Image_1; // 0x260
	UImage* MainImage; // 0x268
};

struct UDatasmithSpotLightComponentTemplate : UDatasmithObjectTemplate {
	float InnerConeAngle; // 0x30
	float OuterConeAngle; // 0x34
};

struct ASentry2 : AConZCharacter {
	FName _pelvisBoneName; // 0x7c8
	FName _eyesViewPointSocketName; // 0x7d0
	FName _longRangeWeaponSocketName; // 0x7d8
	FName _longRangeWeaponBoneName; // 0x7ec
	UAkAudioEvent* _beginPlayAudioEvent; // 0x7f8
	UAkAudioEvent* _fireBulletAudioEvent; // 0x800
	UAkAudioEvent* _startHighFireRateAttack; // 0x808
	UAkAudioEvent* _endHighFireRateAttack; // 0x810
	UAkAudioEvent* _reloadAudioEvent; // 0x818
	UAkAudioEvent* _deathAudioEvent; // 0x820
	UAkAudioEvent* _freezeWarningAudioEvent; // 0x828
	UAkAudioEvent* _dropWeaponsRaiseHandsAudioEvent; // 0x830
	UAkAudioEvent* _walkAwayAudioEvent; // 0x838
	UAkAudioEvent* _beginCombatAudioEvent; // 0x840
	UAnimMontage* _reloadMontageLongRangeWeapon; // 0x848
	UAnimMontage* _deathMontage; // 0x850
	TArray<UAnimMontage*> _kickMontages; // 0x858
	float _gunsLerpFactor; // 0x868
	AProjectile* _projectileClass; // 0x888
	USentryMovementComponent* _sentryMovementComponent; // 0x898
	UHitReactComponent* _hitReactComponent; // 0x8a0
	float _maxHealth; // 0x8ac
	float _armorDamageReductionExplosion; // 0x8b8
	float _armorDamageReductionCollision; // 0x8bc
	FBodyPartData _dataPerBodyPart[0xc]; // 0x8c0
	ESentryStance _sentryStance; // 0x9b0
	bool _shouldAimWeapon; // 0x9b1
	float _longRangeWeaponFireRate; // 0x9b4
	float _longRangeWeaponHalfAngleDegrees; // 0x9b8
	int32_t _maxAmmunitionLongRangeWeapon; // 0x9bc
	int32_t _maxAmmunitionMediumRangeWeapon; // 0x9c4
	float _longRangeWeaponSpreadHalfAngle; // 0x9cc
	float _mediumRangeWeaponFireRate; // 0x9d0
	float _mediumRangeWeaponHalfAngleDegrees; // 0x9d4
	float _mediumRangeWeaponActivationDistance; // 0x9d8
	float _meleeAttackRate; // 0x9dc
	float _meleeAttackActivationDistance; // 0x9e0
	bool _isAimAtTargetOverriden; // 0x9e8
	FVector _weaponOverrideAimLocationRep; // 0x9ec
	TArray<FSentryPatrolPoint> _patrolPoints; // 0xa20
	UParticleSystem* _muzzlePS; // 0xa30
	UParticleSystemComponent* _muzzlePSC; // 0xa38
	float _muzzleEffectsScaleDistanceStart; // 0xa40
	float _muzzleEffectsScaleDistanceRange; // 0xa44
	float _muzzleEffectsScaleByDistanceFactor; // 0xa48
	UStaticMeshComponent* _spotlightLeftMesh; // 0xa50
	UStaticMeshComponent* _spotlightRightMesh; // 0xa58
	USpotLightComponent* _spotlight; // 0xa60
	FColor _normalLightColor; // 0xa68
	FColor _alertedLightColor; // 0xa6c
	FColor _combatLightColor; // 0xa70
	float _spottingPercentage; // 0xa80
	float _stompShakeEffectRadius; // 0xa84
	float _stompShakeMaxEffectRadius; // 0xa88
	float _stompShakeEffectFalloffExponent; // 0xa8c
	UMatineeCameraShake* _stompCameraShake; // 0xa90
	UStaticMeshComponent* _laserMeshComponent; // 0xa98
	bool _shouldDrawLongRangeWeaponLaser; // 0xaa0
	float _autoSaveInterval; // 0xab0
	bool _shouldSaveAndLoadSentry; // 0xab8
	TWeakObjectPtr<APawn> _foe; // 0xad0
};

struct UEndMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UInterpGroupCamera : UInterpGroup {
	UCameraAnim* CameraAnimInst; // 0x50
	float CompressTolerance; // 0x58
};

struct UUI_WaypointScreenWidget_C : UWaypointScreenWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x290
	UCanvasPanel* WaypointPanel; // 0x298
};

struct UUI_ItemInventory2_C : UItemInventoryWidget2 {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f0
	UWidgetAnimation* BlinkAnim; // 0x2f8
	UHorizontalBox* _weightHorizontalBox; // 0x300
	UImage* DeadCellsImage; // 0x308
	UImage* ExtraSlotBackground; // 0x310
	UOverlay* ExtraSlotsOverlay; // 0x318
	UTextBlock* GreenText; // 0x320
	UImage* Image_1; // 0x328
	UImage* Image_2; // 0x330
	UImage* Image_3; // 0x338
	UImage* Image_4; // 0x340
	UImage* Image_5; // 0x348
	UImage* Image_6; // 0x350
	UImage* Image_7; // 0x358
	UImage* MainExtraSlotImage; // 0x360
	UProgressBar* ProgressBar_1; // 0x368
	UTextBlock* RedText; // 0x370
	URetainerBox* RetainerBoxDeadCells; // 0x378
	UOverlay* SeparatorOverlay; // 0x380
	UTextBlock* SlotsText; // 0x388
	USizeBox* WeightAndExpandSizeBox; // 0x390
	TScriptInterface<IInventoryNode> NewVar_1; // 0x398
};

struct UParticleModuleColor : UParticleModuleColorBase {
	FRawDistributionVector StartColor; // 0x30
	FRawDistributionFloat StartAlpha; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct UInterpTrackSound : UInterpTrackVectorBase {
	TArray<FSoundTrackKey> Sounds; // 0x90
	char bPlayOnReverse : 1; // 0xa0
	char bContinueSoundOnMatineeEnd : 1; // 0xa0
	char bSuppressSubtitles : 1; // 0xa0
	char bTreatAsDialogue : 1; // 0xa0
	char bAttach : 1; // 0xa0
};

struct UCustomZoneSettingsMenu : UBaseMenu {
	UCustomZoneSettingsMap* _map; // 0x270
	UCustomZoneSettingsConfigurationsList* _configurationsList; // 0x278
	UCustomZoneSettingsRegionsList* _regionsList; // 0x280
	UCustomZoneSettingsDetailsDisplay* _detailsDisplay; // 0x288
	UCustomZoneSettingsApplyNotification* _applyNotification; // 0x290
	UVerticalBox* _messageBoxPanel; // 0x298
	UButton* _buttonBack; // 0x2a0
	UButton* _buttonApply; // 0x2a8
};

struct UMetabolism_ICU_RR_Stats : UMetabolism_ICU_Expandable_Stats {
	UTextBlock* _rrMinMax; // 0x278
	UTextBlock* _rrTextValue; // 0x280
};

struct ULandscapeSettings : UDeveloperSettings {
	int32_t MaxNumberOfLayers; // 0x38
};

struct UConZReverbComponent : UAkLateReverbComponent {
	UAkAuxBus* IndoorSmallAuxBus; // 0x238
	UAkAuxBus* IndoorMediumAuxBus; // 0x240
	UAkAuxBus* IndoorLargeAuxBus; // 0x248
	UAkAuxBus* OutdoorLargeAuxBus; // 0x250
};

struct UUI_CraftingPanel_C : UCraftingPanelWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x518
	UButton* CraftButton; // 0x520
	UImage* ExpandedSpacingLine; // 0x528
	UUI_ExpandableContainer_C* FoodContainer; // 0x530
	UImage* Image_1; // 0x538
	UImage* Image_2; // 0x540
	UImage* Image_3; // 0x548
	UImage* Image_4; // 0x550
	UUI_ExpandableContainer_C* InventoryContainer; // 0x558
	UUI_ExpandableContainer_C* ItemsContainer; // 0x560
	UCanvasPanel* MainCanvas; // 0x568
	UUI_ExpandableContainer_C* PlaceablesContainer; // 0x570
	UEditableTextBox* SearchBar; // 0x578
	UImage* SearchBarBackground; // 0x580
	UTextBlock* TextBlock_3; // 0x588
	UUI_ExpandableContainer_C* ToolsAndWeaponsContainer; // 0x590
	UUI_TrashMenuButton_C* UI_MenuButton; // 0x598
	UUI_ExpandableContainer_C* VicinityContainer; // 0x5a0
	UAkAudioEvent* CraftClickSound; // 0x5a8
	int32_t _craftingConfirmationIndex; // 0x5b0
};

struct AFishingAttachmentHook : AFishingAttachment {
	float _visibilityFactor; // 0x7e0
	float _maxTension; // 0x7e4
	float _hookedWeight; // 0x7e8
	FTransform _hookedFishTransform; // 0x7f0
	UStaticMeshComponent* _hookedFishMesh; // 0x820
	FName _hookedFishHookPositionName; // 0x828
	float _checkIfFishIsHookedRate; // 0x830
	float _timeToLooseTheFishWhenHookBitten; // 0x834
	UParticleSystemComponent* _movingRippleParticleSystemComponent; // 0x838
	UParticleSystemComponent* _splashParticleSystemComponent; // 0x840
};

struct UCommandlet : UObject {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UChaosPhysicalMaterial : UObject {
	float Friction; // 0x28
	float StaticFriction; // 0x2c
	float Restitution; // 0x30
	float LinearEtherDrag; // 0x34
	float AngularEtherDrag; // 0x38
	float SleepingLinearVelocityThreshold; // 0x3c
	float SleepingAngularVelocityThreshold; // 0x40
};

struct USceneComponent : UActorComponent {
	TWeakObjectPtr<APhysicsVolume> PhysicsVolume; // 0xb8
	USceneComponent* AttachParent; // 0xc0
	FName AttachSocketName; // 0xc8
	TArray<USceneComponent*> AttachChildren; // 0xd0
	TArray<USceneComponent*> ClientAttachedChildren; // 0xe0
	FVector RelativeLocation; // 0x11c
	FRotator RelativeRotation; // 0x128
	FVector RelativeScale3D; // 0x134
	FVector ComponentVelocity; // 0x140
	char bComponentToWorldUpdated : 1; // 0x14c
	char bAbsoluteLocation : 1; // 0x14c
	char bAbsoluteRotation : 1; // 0x14c
	char bAbsoluteScale : 1; // 0x14c
	char bVisible : 1; // 0x14c
	char bShouldBeAttached : 1; // 0x14c
	char bShouldSnapLocationWhenAttached : 1; // 0x14c
	char bShouldSnapRotationWhenAttached : 1; // 0x14d
	char bShouldUpdatePhysicsVolume : 1; // 0x14d
	char bHiddenInGame : 1; // 0x14d
	char bBoundsChangeTriggersStreamingDataRebuild : 1; // 0x14d
	char bUseAttachParentBound : 1; // 0x14d
	EComponentMobility Mobility; // 0x14f
	EDetailMode DetailMode; // 0x150
	FMulticastSparseDelegate PhysicsVolumeChangedDelegate; // 0x151
};

struct AEQSTestingPawn : ACharacter {
	UEnvQuery* QueryTemplate; // 0x4d0
	TArray<FEnvNamedValue> QueryParams; // 0x4d8
	TArray<FAIDynamicParam> QueryConfig; // 0x4e8
	float TimeLimitPerStep; // 0x4f8
	int32_t StepToDebugDraw; // 0x4fc
	EEnvQueryHightlightMode HighlightMode; // 0x500
	char bDrawLabels : 1; // 0x504
	char bDrawFailedItems : 1; // 0x504
	char bReRunQueryOnlyOnFinishedMove : 1; // 0x504
	char bShouldBeVisibleInGame : 1; // 0x504
	char bTickDuringGame : 1; // 0x504
	EEnvQueryRunMode QueryingMode; // 0x508
	FNavAgentProperties NavAgentProperties; // 0x510
};

struct UMovieSceneAudioTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AudioSections; // 0x80
};

struct AConZGameState : AGameState {
	URespawnSettings* RespawnSettings; // 0x2e0
	bool AllowSectorRespawn; // 0x2e8
	bool AllowShelterRespawn; // 0x2e9
	bool AllowSquadmateRespawn; // 0x2ea
	UCraftingDatabase* _craftingDatabase; // 0x308
	UGlobalItemSpawner* _globalItemSpawner; // 0x310
	TArray<AConZCharacter*> _registeredCharacters; // 0x338
	TArray<AConZSquad*> _squads; // 0x398
	TMap<TWeakObjectPtr<AConZCharacter>, int32_t> _currentDroneTargetDispatcherMap; // 0x3a8
	TMap<TWeakObjectPtr<AConZCharacter>, int32_t> _droneTargetDispatcherHistoryMap; // 0x3f8
	TMap<TWeakObjectPtr<AConZCharacter>, UDroneTargetData*> _droneTargetVisits; // 0x448
	ALadderMarkersRegistry* _ladderMarkersRegistryClass; // 0x4a8
	ALadderMarkersRegistry* _ladderMarkersRegistry; // 0x4b0
	AConZWaterSplineRegistry* _waterSplineRegistryClass; // 0x4b8
	AConZWaterSplineRegistry* _waterSplineRegistry; // 0x4c0
	UReplenishableResourceManager* _replenishableResourceManager; // 0x508
	URestorableMeshInstancesManager* _restorableMeshInstancesManager; // 0x510
	UResourceLockingManager* _resourceLockingManager; // 0x518
	UItemRegistry* _itemRegistry; // 0x520
	UCustomZoneRegistry* _customZoneRegistry; // 0x528
	UGameResourceContainerProxyRegistry* _gameResourceContainerProxyRegistry; // 0x530
	UInteractionFilterVolumeRegistry* _interactionFilterVolumeRegistry; // 0x538
	UStaticDoorReplicator* _staticDoorReplicator; // 0x540
	TMap<FDbIntegerId, FDbIntegerId> _prisonerKillRegistry; // 0x618
	ACustomMapBorder* _customMapBorderClass; // 0x668
	ATournament* _tournamentClass; // 0x670
	ACustomMapBorder* _customMapBorder; // 0x678
	ATournament* _tournament; // 0x680
	bool _areLockedLootContainersEnabled; // 0x689
	float _prisonerBodySimulationTimeDilation; // 0x68c
};

struct ACameraShakeSourceActor : AActor {
	UCameraShakeSourceComponent* CameraShakeSourceComponent; // 0x220
};

struct AInstrumentItem : AItem {
	int32_t _numberOfOctaves; // 0x7cc
	UAnimMontage* _playInstrumentStartMontageFP; // 0x7d0
	UAnimMontage* _playInstrumentStartMontageTP; // 0x7d8
	UAnimMontage* _playInstrumentStopMontageFP; // 0x7e0
	UAnimMontage* _playInstrumentStopMontageTP; // 0x7e8
	UAnimSequenceBase* _playInstrumentIdleAnimationFP; // 0x7f0
	UAnimSequenceBase* _playInstrumentPlayingAnimationFP; // 0x7f8
	UAnimSequenceBase* _playInstrumentIdleAnimationTP; // 0x800
	UAnimSequenceBase* _playInstrumentPlayingAnimationTP; // 0x808
	float _playingPoseHoldTime; // 0x810
	TArray<UAkAudioEvent*> _noteCStart; // 0x818
	TArray<UAkAudioEvent*> _noteCStop; // 0x828
	TArray<UAkAudioEvent*> _noteDStart; // 0x838
	TArray<UAkAudioEvent*> _noteDStop; // 0x848
	TArray<UAkAudioEvent*> _noteDbStart; // 0x858
	TArray<UAkAudioEvent*> _noteDbStop; // 0x868
	TArray<UAkAudioEvent*> _noteEStart; // 0x878
	TArray<UAkAudioEvent*> _noteEStop; // 0x888
	TArray<UAkAudioEvent*> _noteEbStart; // 0x898
	TArray<UAkAudioEvent*> _noteEbStop; // 0x8a8
	TArray<UAkAudioEvent*> _noteFStart; // 0x8b8
	TArray<UAkAudioEvent*> _noteFStop; // 0x8c8
	TArray<UAkAudioEvent*> _noteGStart; // 0x8d8
	TArray<UAkAudioEvent*> _noteGStop; // 0x8e8
	TArray<UAkAudioEvent*> _noteGbStart; // 0x8f8
	TArray<UAkAudioEvent*> _noteGbStop; // 0x908
	TArray<UAkAudioEvent*> _noteAStart; // 0x918
	TArray<UAkAudioEvent*> _noteAStop; // 0x928
	TArray<UAkAudioEvent*> _noteAbStart; // 0x938
	TArray<UAkAudioEvent*> _noteAbStop; // 0x948
	TArray<UAkAudioEvent*> _noteBStart; // 0x958
	TArray<UAkAudioEvent*> _noteBStop; // 0x968
	TArray<UAkAudioEvent*> _noteBbStart; // 0x978
	TArray<UAkAudioEvent*> _noteBbStop; // 0x988
	TArray<UAkAudioEvent*> _noteC2Start; // 0x998
	TArray<UAkAudioEvent*> _noteC2Stop; // 0x9a8
};

struct UTexture : UStreamableRenderAsset {
	FGuid LightingGuid; // 0x68
	int32_t LODBias; // 0x78
	TextureCompressionSettings CompressionSettings; // 0x7c
	TextureFilter Filter; // 0x7d
	ETextureMipLoadOptions MipLoadOptions; // 0x7e
	TextureGroup LODGroup; // 0x7f
	FPerPlatformFloat Downscale; // 0x80
	ETextureDownscaleOptions DownscaleOptions; // 0x84
	char SRGB : 1; // 0x85
	char bNoTiling : 1; // 0x85
	char VirtualTextureStreaming : 1; // 0x85
	char CompressionYCoCg : 1; // 0x85
	char bNotOfflineProcessed : 1; // 0x85
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x85
	TArray<UAssetUserData*> AssetUserData; // 0x88
};

struct UBTTask_RunBehavior : UBTTaskNode {
	UBehaviorTree* BehaviorAsset; // 0x70
};

struct UBakedOcclusionMapToolProperties : UInteractiveToolPropertySet {
	int32_t OcclusionRays; // 0x60
	float MaxDistance; // 0x64
	bool bGaussianBlur; // 0x68
	float BlurRadius; // 0x6c
	float BiasAngle; // 0x70
};

struct ASentryGuardVolume2 : AVolume {
	TArray<FVector> _hotZonesLocalLocations; // 0x278
	TArray<ABuilding*> _hotZonesBuildings; // 0x298
};

struct UCameraModifier_CameraShake : UCameraModifier {
	TArray<FActiveCameraShakeInfo> ActiveShakes; // 0x48
	TMap<UCameraShakeBase*, FPooledCameraShakes> ExpiredPooledShakesMap; // 0x58
	float SplitScreenShakeScale; // 0xa8
};

struct UPrisonerAnimInstance_Fishing : UAnimInstance {
	float _aimOffsetYaw; // 0x2b8
	float _aimOffsetPitch; // 0x2bc
	bool _isActivelyFishing; // 0x2c0
	bool _castingFinished; // 0x2c1
	bool _floaterHitWaterSurface; // 0x2c2
	bool _fishIsHooked; // 0x2c3
	EPrisonerStance _stance; // 0x2c4
	bool _isInFirstPersonView; // 0x2c5
	FRotator _armsLagRotation; // 0x2c8
	float _armsLagPitch; // 0x2d4
	float _armsLagYaw; // 0x2d8
};

struct UShowLoginUICallbackProxy : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UZombieArmorDamageReductionAssetData : UAssetUserData {
	float CollisionDamageMultiplierPerBodyPart[0xc]; // 0x28
};

struct USkeletalMeshSimulationComponent : UActorComponent {
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xb8
	AChaosSolverActor* ChaosSolverActor; // 0xc0
	UPhysicsAsset* OverridePhysicsAsset; // 0xc8
	bool bSimulating; // 0xd0
	bool bNotifyCollisions; // 0xd1
	EObjectStateTypeEnum ObjectType; // 0xd2
	float Density; // 0xd4
	float MinMass; // 0xd8
	float MaxMass; // 0xdc
	ECollisionTypeEnum CollisionType; // 0xe0
	float ImplicitShapeParticlesPerUnitArea; // 0xe4
	int32_t ImplicitShapeMinNumParticles; // 0xe8
	int32_t ImplicitShapeMaxNumParticles; // 0xec
	int32_t MinLevelSetResolution; // 0xf0
	int32_t MaxLevelSetResolution; // 0xf4
	int32_t CollisionGroup; // 0xf8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xfc
	FVector InitialLinearVelocity; // 0x100
	FVector InitialAngularVelocity; // 0x10c
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x118
};

struct APrisoner_Left_Arm_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f0
};

struct UStaticMesh : UStreamableRenderAsset {
	FPerPlatformInt MinLOD; // 0x80
	float LpvBiasMultiplier; // 0x84
	TArray<FStaticMaterial> StaticMaterials; // 0x88
	float LightmapUVDensity; // 0x98
	int32_t LightMapResolution; // 0x9c
	int32_t LightMapCoordinateIndex; // 0xa0
	float DistanceFieldSelfShadowBias; // 0xa4
	UBodySetup* BodySetup; // 0xa8
	int32_t LODForCollision; // 0xb0
	char bGenerateMeshDistanceField : 1; // 0xb4
	char bStripComplexCollisionForConsole : 1; // 0xb4
	char bHasNavigationData : 1; // 0xb4
	char bSupportUniformlyDistributedSampling : 1; // 0xb4
	char bSupportPhysicalMaterialMasks : 1; // 0xb4
	char bIsBuiltAtRuntime : 1; // 0xb4
	char bAllowCPUAccess : 1; // 0xb4
	char bSupportGpuUniformlyDistributedSampling : 1; // 0xb5
	TArray<UStaticMeshSocket*> Sockets; // 0xd8
	FVector PositiveBoundsExtension; // 0xf8
	FVector NegativeBoundsExtension; // 0x104
	FBoxSphereBounds ExtendedBounds; // 0x110
	int32_t ElementToIgnoreForTexFactor; // 0x12c
	TArray<UAssetUserData*> AssetUserData; // 0x130
	UObject* EditableMesh; // 0x140
	UNavCollisionBase* NavCollision; // 0x148
};

struct UMaterialExpressionDepthFade : UMaterialExpression {
	FExpressionInput InOpacity; // 0x40
	FExpressionInput FadeDistance; // 0x54
	float OpacityDefault; // 0x68
	float FadeDistanceDefault; // 0x6c
};

struct UAkLateReverbComponent : USceneComponent {
	char bEnable : 1; // 0x1f8
	UAkAuxBus* AuxBus; // 0x200
	FString AuxBusName; // 0x208
	float SendLevel; // 0x218
	float FadeRate; // 0x21c
	float Priority; // 0x220
	UAkLateReverbComponent* NextLowerPriorityComponent; // 0x228
};

struct UVariantSet : UObject {
	FText DisplayText; // 0x28
	bool bExpanded; // 0x58
	TArray<UVariant*> Variants; // 0x60
	UTexture2D* Thumbnail; // 0x70
};

struct UItemState : UItemStateBase {
	float normalizedHealth; // 0x80
	float maxHealth; // 0x84
	float Weight; // 0x88
	float WeightUsed; // 0x8c
	bool IsCrafted; // 0x90
	float UncraftTime; // 0x94
	int64_t LastAccessTime; // 0x98
	bool IsPartOfEvent; // 0xa0
	float WaterWeight; // 0xa4
	float Uses; // 0xa8
	bool IsInHands; // 0xac
	EPrisonerHolsterSide HolsterSide; // 0xad
	int32_t QuickAccessBarIndex; // 0xb0
	TArray<UItemStateBase*> CraftingParts; // 0xb8
	TArray<UItemStateBase*> Stacks; // 0xc8
	TArray<FDbIntegerId> _craftingPartsIds; // 0xd8
	TArray<FDbIntegerId> _stacksIds; // 0xe8
};

struct UMainMenuWidget_C : UMainMenu {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UUI_TrashMenuButton_C* _quitButton; // 0x288
	UTextBlock* GameVersionText; // 0x290
	UImage* Image_1; // 0x298
	UImage* Image_2; // 0x2a0
	UImage* Image_351; // 0x2a8
	UCanvasPanel* MainCanvasPanel; // 0x2b0
	UVerticalBox* MenuVerticalBox; // 0x2b8
	UOverlay* NameOverlay; // 0x2c0
	UTextBlock* TextBlock_1; // 0x2c8
	UUI_YesNoMenuConfirmation_C* _quitConfirmation; // 0x2d0
	UUI_ErrorMessage_C* _errorMessage; // 0x2d8
};

struct UPhysicalMaterial : UObject {
	float Friction; // 0x28
	float StaticFriction; // 0x2c
	EFrictionCombineMode FrictionCombineMode; // 0x30
	bool bOverrideFrictionCombineMode; // 0x31
	float Restitution; // 0x34
	EFrictionCombineMode RestitutionCombineMode; // 0x38
	bool bOverrideRestitutionCombineMode; // 0x39
	float Density; // 0x3c
	float SleepLinearVelocityThreshold; // 0x40
	float SleepAngularVelocityThreshold; // 0x44
	int32_t SleepCounterThreshold; // 0x48
	float RaiseMassToPower; // 0x4c
	float DestructibleDamageThresholdScale; // 0x50
	UPhysicalMaterialPropertyBase* PhysicalMaterialProperty; // 0x58
	EPhysicalSurface SurfaceType; // 0x60
};

struct UInterpTrackInstVisibility : UInterpTrackInst {
	EVisibilityTrackAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
};

struct AMagicLeapARPinInfoActorBase : AActor {
	FGuid PinId; // 0x220
	bool bVisibilityOverride; // 0x230
};

struct UMediaPlaylist : UObject {
	TArray<UMediaSource*> Items; // 0x28
};

struct ACTFFlag : AActor {
	USphereComponent* SphereComponent; // 0x220
	USkeletalMeshComponent* FlagMesh; // 0x228
	TArray<UMaterialInstance*> TeamMaterials; // 0x230
	FName AttachSocketName; // 0x240
	ACTFGameEvent* _gameEvent; // 0x248
	int32_t _team; // 0x250
	APrisoner* _carrier; // 0x258
	float _resetProgress; // 0x268
	FTransform _baseTransform; // 0x270
	FTransform _flagTransform; // 0x2a0
};

struct UMaterialExpressionConstant2Vector : UMaterialExpression {
	float R; // 0x40
	float G; // 0x44
};

struct UBTTask_Wait : UBTTaskNode {
	float WaitTime; // 0x70
	float RandomDeviation; // 0x74
};

struct USynthKnob : UWidget {
	float Value; // 0x108
	float StepSize; // 0x10c
	float MouseSpeed; // 0x110
	float MouseFineTuneSpeed; // 0x114
	char ShowTooltipInfo : 1; // 0x118
	FText ParameterName; // 0x120
	FText ParameterUnits; // 0x138
	FDelegate ValueDelegate; // 0x150
	FSynthKnobStyle WidgetStyle; // 0x160
	bool Locked; // 0x398
	bool IsFocusable; // 0x399
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x3a0
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x3b0
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x3c0
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x3d0
	FMulticastInlineDelegate OnValueChanged; // 0x3e0
};

struct UEngineeringSkill : UIntelligenceSkill {
	FEngineeringSkillExperienceAwards NoSkillExperienceAwards; // 0xa8
	FEngineeringSkillExperienceAwards BasicSkillExperienceAwards; // 0xb8
	FEngineeringSkillExperienceAwards MediumSkillExperienceAwards; // 0xc8
	FEngineeringSkillExperienceAwards AdvancedSkillExperienceAwards; // 0xd8
	FEngineeringSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0xe8
	FEngineeringSkillParametersPerSkillLevel NoSkillParameters; // 0xf8
	FEngineeringSkillParametersPerSkillLevel BasicSkillParameters; // 0x118
	FEngineeringSkillParametersPerSkillLevel MediumSkillParameters; // 0x138
	FEngineeringSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x158
	FEngineeringSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x178
};

struct UMaterialExpressionFontSampleParameter : UMaterialExpressionFontSample {
	FName ParameterName; // 0x50
	FGuid ExpressionGUID; // 0x58
	FName Group; // 0x68
};

struct UGizmoTransformChangeStateTarget : UObject {
	TScriptInterface<IToolContextTransactionProvider> TransactionManager; // 0x50
};

struct UStereoLayerShapeCylinder : UStereoLayerShape {
	float Radius; // 0x28
	float OverlayArc; // 0x2c
	int32_t Height; // 0x30
};

struct ADropZoneGameEvent : AGameEventBase {
	ADropZoneEquipmentTable* TableAClass; // 0x598
	ADropZoneEquipmentTable* TableBClass; // 0x5a0
	ADropZoneCrate* CrateClass; // 0x5a8
	ADropZoneCargo* CargoClass; // 0x5b0
	UAkAudioEvent* IntroAnnouncement; // 0x5b8
	UAkAudioEvent* LocateTheKeyAnnouncement; // 0x5c0
	UAkAudioEvent* BlueTeamFoundKeyAnnouncement; // 0x5c8
	UAkAudioEvent* BlueTeamUnlockedAnnouncement; // 0x5d0
	UAkAudioEvent* BlueTeamStolenAnnouncement; // 0x5d8
	UAkAudioEvent* RedTeamFoundKeyAnnouncement; // 0x5e0
	UAkAudioEvent* RedTeamUnlockedAnnouncement; // 0x5e8
	UAkAudioEvent* RedTeamStolenAnnouncement; // 0x5f0
	UAkAudioEvent* CargoDropAnnouncement; // 0x5f8
	UAkAudioEvent* CargoLandedAnnouncement; // 0x600
	UTexture2D* KeyIcon; // 0x608
	UTexture2D* CargoIcon; // 0x610
	FLinearColor FriendlyColor; // 0x618
	FLinearColor EnemyColor; // 0x628
	FDropZoneParameters _dropZoneParameters; // 0x638
	EDropZoneGameEventPhase _phase; // 0x670
	int32_t _capturingTeam; // 0x674
	float _phaseTimeLeft; // 0x678
	float _captureProgress; // 0x67c
	AGameEventBorder* _barrierA; // 0x688
	AGameEventBorder* _barrierB; // 0x690
	ADropZoneEquipmentTable* _tableA; // 0x698
	ADropZoneEquipmentTable* _tableB; // 0x6a0
	ADropZoneCrate* _crateA; // 0x6a8
	ADropZoneCrate* _crateB; // 0x6b0
	ADropZoneKey* _key; // 0x6b8
	APrisoner* _keyCarrier; // 0x6c0
	AActor* _topmostKeyOwner; // 0x6c8
	ADropZoneCargo* _cargo; // 0x6d0
	ADropZoneSlot* _slot; // 0x6d8
};

struct UMetabolism : UObject {
	FMetabolismState _state; // 0x100
};

struct UPawnAction_Wait : UPawnAction {
	float TimeToWait; // 0x98
};

struct ULandscapeSplineControlPoint : UObject {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	float Width; // 0x40
	float LayerWidthRatio; // 0x44
	float SideFalloff; // 0x48
	float LeftSideFalloffFactor; // 0x4c
	float RightSideFalloffFactor; // 0x50
	float LeftSideLayerFalloffFactor; // 0x54
	float RightSideLayerFalloffFactor; // 0x58
	float EndFalloff; // 0x5c
	TArray<FLandscapeSplineConnection> ConnectedSegments; // 0x60
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	UControlPointMeshComponent* LocalMeshComponent; // 0xa0
};

struct UCheckBox : UContentWidget {
	ECheckBoxState CheckedState; // 0x120
	FDelegate CheckedStateDelegate; // 0x124
	FCheckBoxStyle WidgetStyle; // 0x138
	USlateWidgetStyleAsset* Style; // 0x6b8
	USlateBrushAsset* UncheckedImage; // 0x6c0
	USlateBrushAsset* UncheckedHoveredImage; // 0x6c8
	USlateBrushAsset* UncheckedPressedImage; // 0x6d0
	USlateBrushAsset* CheckedImage; // 0x6d8
	USlateBrushAsset* CheckedHoveredImage; // 0x6e0
	USlateBrushAsset* CheckedPressedImage; // 0x6e8
	USlateBrushAsset* UndeterminedImage; // 0x6f0
	USlateBrushAsset* UndeterminedHoveredImage; // 0x6f8
	USlateBrushAsset* UndeterminedPressedImage; // 0x700
	EHorizontalAlignment HorizontalAlignment; // 0x708
	FMargin Padding; // 0x70c
	FSlateColor BorderBackgroundColor; // 0x720
	EButtonClickMethod ClickMethod; // 0x748
	EButtonTouchMethod TouchMethod; // 0x749
	EButtonPressMethod PressMethod; // 0x74a
	bool IsFocusable; // 0x74b
	FMulticastInlineDelegate OnCheckStateChanged; // 0x750
};

struct UWeaponAttachmentScopeState : UWeaponAttachmentState {
	int32_t Windage; // 0xf8
	float DisplayBrightnessMultiplier; // 0xfc
};

struct UParticleModuleSizeScale : UParticleModuleSizeBase {
	FRawDistributionVector SizeScale; // 0x30
	char EnableX : 1; // 0x78
	char EnableY : 1; // 0x78
	char EnableZ : 1; // 0x78
};

struct URadialIntMask : UFieldNodeInt {
	float Radius; // 0xb0
	FVector position; // 0xb4
	int32_t InteriorValue; // 0xc0
	int32_t ExteriorValue; // 0xc4
	ESetMaskConditionType SetMaskCondition; // 0xc8
};

struct UCameraAnim : UObject {
	UInterpGroup* CameraInterpGroup; // 0x28
	float AnimLength; // 0x30
	FBox BoundingBox; // 0x34
	char bRelativeToInitialTransform : 1; // 0x50
	char bRelativeToInitialFOV : 1; // 0x50
	float BaseFOV; // 0x54
	FPostProcessSettings BasePostProcessSettings; // 0x60
	float BasePostProcessBlendWeight; // 0x5b0
};

struct UAsyncActionHandleSaveGame : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate completed; // 0x30
	USaveGame* SaveGameObject; // 0x60
};

struct UParticleModuleMeshRotationRate_Seeded : UParticleModuleMeshRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct AAkSpotReflector : AActor {
	UAkAuxBus* AuxBus; // 0x220
	FString AuxBusName; // 0x228
	UAkAcousticTexture* AcousticTexture; // 0x238
	float DistanceScalingFactor; // 0x240
	float Level; // 0x244
};

struct UMovieSceneFolder : UObject {
	FName FolderName; // 0x28
	TArray<UMovieSceneFolder*> ChildFolders; // 0x30
	TArray<UMovieSceneTrack*> ChildMasterTracks; // 0x40
	TArray<FString> ChildObjectBindingStrings; // 0x50
};

struct UVDWindDirectionalSourceComponent : USceneComponent {
	float Radius; // 0x1f8
	float Strength; // 0x1fc
	float Speed; // 0x200
	float MinGustAmount; // 0x204
	float MaxGustAmount; // 0x208
	float MinGustDuration; // 0x20c
	float MaxGustDuration; // 0x210
	float MinGustTransitionSpeed; // 0x214
	float MaxGustTransitionSpeed; // 0x218
	float MinSecondsBetweenGusts; // 0x21c
	float MaxSecondsBetweenGusts; // 0x220
};

struct UUpgradeItemTag : UBaseItemTag {
	int32_t Price; // 0x30
};

struct ABP_WeaponBullet_WoodenArrowStoneTip_C : AProjectileArrow {
	FPointerToUberGraphFrame UberGraphFrame; // 0x458
	UParticleSystemComponent* ParticleSystem; // 0x460
};

struct AComplexAnimal2 : AAnimal2 {
	float EnergyDepletionRate; // 0x938
	float HungerDepletionRate; // 0x93c
	float HungerDepletionRateWhenResting; // 0x940
	float EnergyRefillRate; // 0x944
	float HungerRefillRate; // 0x948
	float HealthRegenerationRate; // 0x94c
	float HealthDepletionRate; // 0x950
	FAnimalPaceSettings MovementPaceSettings; // 0x954
	FAnimalStationaryRotationRateSettings RotationRateSettings; // 0x964
	FMulticastInlineDelegate OnActionChanged; // 0x9a0
	TArray<FChargeAttackData> ChargeAttacks; // 0x9b0
	TArray<FCloseRangeAttackData> CloseRangeAttacks; // 0x9c0
	FTurnMontages TurnMonatges; // 0x9d0
	FAnimalActionMontageData AnimalActions; // 0x9e0
	float AttackRotationRate; // 0x9f8
	float MinActionTime; // 0x9fc
	FGameplayTag HitReactTypeResting; // 0xa00
	FGameplayTag HitReactTypeIntimidate; // 0xa08
	uint16_t _hungerAndEnergyReplicated; // 0xa18
	FVector _lookAtPoint; // 0xa30
};

struct UBaseProgressBar_C : UWindowsContent_C {
	FText _titleBase; // 0x2b8
	float _percentage; // 0x2d0
	float _previousPercentage; // 0x2d4
	float _alarmThreshold; // 0x2d8
	bool _isClampingOn; // 0x2dc
	bool _isAlarmOn; // 0x2dd
	float _alarmThresholdHigh; // 0x2e0
	bool _isAlarmThresholdHighActive; // 0x2e4
};

struct UParticleModuleLocation_Seeded : UParticleModuleLocation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UFindTurnBasedMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UOnlineEngineInterfaceImpl : UOnlineEngineInterface {
	FName VoiceSubsystemNameOverride; // 0x28
};

struct AMagicLeapSharedWorldGameMode : AGameMode {
	FMagicLeapSharedWorldSharedData SharedWorldData; // 0x308
	FMulticastInlineDelegate OnNewLocalDataFromClients; // 0x318
	float PinSelectionConfidenceThreshold; // 0x328
	AMagicLeapSharedWorldPlayerController* ChosenOne; // 0x3d0
};

struct UEdgeLoopInsertionTool : USingleSelectionTool {
	UEdgeLoopInsertionProperties* Settings; // 0x98
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0x300
};

struct A1H_Metal_Pipe_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f0
};

struct AReplicatedEffectsActor : AActor {
	float _lifeSpan; // 0x220
};

struct ULevelSequenceBurnIn : UUserWidget {
	FLevelSequencePlayerSnapshot FrameInformation; // 0x260
	ALevelSequenceActor* LevelSequenceActor; // 0x318
};

struct UFindSessionsCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UWindowTitleBarArea : UContentWidget {
	bool bWindowButtonsEnabled; // 0x120
	bool bDoubleClickTogglesFullscreen; // 0x121
};

struct UOnAcceptHandleSourcesProperties : UInteractiveToolPropertySet {
	EHandleSourcesMethod OnToolAccept; // 0x60
};

struct UVoxelSolidifyMeshesToolProperties : UInteractiveToolPropertySet {
	double WindingThreshold; // 0x60
	double ExtendBounds; // 0x68
	int32_t SurfaceSearchSteps; // 0x70
	bool bSolidAtBoundaries; // 0x74
	bool bMakeOffsetSurfaces; // 0x75
	double OffsetThickness; // 0x78
};

struct UBTDecorator_Cooldown : UBTDecorator {
	float CoolDownTime; // 0x68
};

struct UMovieSceneByteSection : UMovieSceneSection {
	FMovieSceneByteChannel ByteCurve; // 0xe8
};

struct UPrisonerBodySymptom_Hunger : UPrisonerBodySymptom {
	FRuntimeFloatCurve _severityVsEnergyRatio; // 0xb8
};

struct UChaosSolverSettings : UDeveloperSettings {
	FSoftClassPath DefaultChaosSolverActorClass; // 0x40
};

struct URespawnSettings : UDataAsset {
	FRespawnParameters parameters; // 0x30
};

struct UMaterialExpressionStaticBool : UMaterialExpression {
	char Value : 1; // 0x40
};

struct UPhysicsObjectToolPropertySet : UInteractiveToolPropertySet {
	FString ObjectName; // 0x60
	ECollisionGeometryMode CollisionType; // 0x70
	TArray<FPhysicsSphereData> Spheres; // 0x78
	TArray<FPhysicsBoxData> Boxes; // 0x88
	TArray<FPhysicsCapsuleData> capsules; // 0x98
	TArray<FPhysicsConvexData> Convexes; // 0xa8
};

struct UNiagaraDataInterfaceAudioSubmix : UNiagaraDataInterface {
	USoundSubmix* Submix; // 0x38
};

struct UBlendSpaceBase : UAnimationAsset {
	bool bRotationBlendInMeshSpace; // 0x88
	float AnimLength; // 0x8c
	FInterpolationParameter InterpolationParam[0x3]; // 0x90
	float TargetWeightInterpolationSpeedPerSec; // 0xa8
	ENotifyTriggerMode NotifyTriggerMode; // 0xac
	TArray<FPerBoneInterpolation> PerBoneBlend; // 0xb0
	int32_t SampleIndexWithMarkers; // 0xc0
	TArray<FBlendSample> SampleData; // 0xc8
	TArray<FEditorElement> GridSamples; // 0xd8
	FBlendParameter BlendParameters[0x3]; // 0xe8
};

struct UParticleModuleEventReceiverBase : UParticleModuleEventBase {
	EParticleEventType EventGeneratorType; // 0x30
	FName EventName; // 0x34
};

struct UMenuHelpers : UDataAsset {
	UUserWidget* MainMenuClass; // 0x30
	UUserWidget* ServerBrowserClass; // 0x38
	UUserWidget* OptionsClass; // 0x40
	UUserWidget* AdvancedOptionsClass; // 0x48
	UUserWidget* CharacterCreationClass; // 0x50
	UUserWidget* CharacterSelectionClass; // 0x58
	UUserWidget* CharacterCreationSecondIterationClass; // 0x60
};

struct UMaterialFunctionInstance : UMaterialFunctionInterface {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xb0
};

struct ACineCameraActor : ACameraActor {
	FCameraLookatTrackingSettings LookatTrackingSettings; // 0x7a0
};

struct UBTDecorator : UBTAuxiliaryNode {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct UTimedTriggerComponent : UTriggerComponent {
	float _countdownDuration; // 0x4d0
	UAkAudioEvent* _countdownStartAudioEvent; // 0x4d8
	UAkAudioEvent* _countdownStopAudioEvent; // 0x4e0
	float _countdownRemainingTime; // 0x4e8
};

struct UExpandableArea : UWidget {
	FExpandableAreaStyle Style; // 0x110
	FSlateBrush BorderBrush; // 0x230
	FSlateColor BorderColor; // 0x2b8
	bool bIsExpanded; // 0x2e0
	float MaxHeight; // 0x2e4
	FMargin HeaderPadding; // 0x2e8
	FMargin AreaPadding; // 0x2f8
	FMulticastInlineDelegate OnExpansionChanged; // 0x308
	UWidget* HeaderContent; // 0x318
	UWidget* BodyContent; // 0x320
};

struct UMaterialExpressionDivide : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UAchievementWriteCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UInventoryContainerWidget2Test : UInventoryContainerWidget2 {
	UImage* _itemIcon; // 0x278
	UTextBlock* _itemCaption; // 0x280
	UVerticalBox* _itemContainer; // 0x288
};

struct URepairToolItemTag : UBaseItemTag {
	FRepairToolItemParams Params; // 0x30
};

struct UItemWeaponState : UWeaponItemState {
	int32_t ZeroRange; // 0xf8
	EWeaponFiringMode FiringMode; // 0xfc
	EWeaponMalfunction malfunction; // 0xfd
	TArray<FAmmunitionData> LoadedAmmoData; // 0x100
	TArray<FAmmunitionData> InternalMagazineAmmoData; // 0x110
	UObject* LoadedAmmunitionItemClass; // 0x120
	TArray<FDbIntegerId> WeaponAttachments; // 0x128
};

struct USystemTimeTimecodeProvider : UTimecodeProvider {
	FFrameRate FrameRate; // 0x30
	bool bGenerateFullFrame; // 0x38
	bool bUseHighPerformanceClock; // 0x39
};

struct UOnsetNRTSettings : UAudioSynesthesiaNRTSettings {
	bool bDownmixToMono; // 0x28
	float GranularityInSeconds; // 0x2c
	float Sensitivity; // 0x30
	float MinimumFrequency; // 0x34
	float MaximumFrequency; // 0x38
};

struct UParticleModuleLight : UParticleModuleLightBase {
	bool bUseInverseSquaredFalloff; // 0x30
	bool bAffectsTranslucency; // 0x31
	bool bPreviewLightRadius; // 0x32
	float SpawnFraction; // 0x34
	FRawDistributionVector ColorScaleOverLife; // 0x38
	FRawDistributionFloat BrightnessOverLife; // 0x80
	FRawDistributionFloat RadiusScale; // 0xb0
	FRawDistributionFloat LightExponent; // 0xe0
	FLightingChannels LightingChannels; // 0x110
	float VolumetricScatteringIntensity; // 0x114
	bool bHighQualityLights; // 0x118
	bool bShadowCastingLights; // 0x119
};

struct UMaterialExpressionLogarithm10 : UMaterialExpression {
	FExpressionInput X; // 0x40
};

struct UEdGraphPin_Deprecated : UObject {
	FString PinName; // 0x28
	FString PinToolTip; // 0x38
	EEdGraphPinDirection Direction; // 0x48
	FEdGraphPinType PinType; // 0x50
	FString DefaultValue; // 0xa8
	FString AutogeneratedDefaultValue; // 0xb8
	UObject* DefaultObject; // 0xc8
	FText DefaultTextValue; // 0xd0
	TArray<UEdGraphPin_Deprecated*> LinkedTo; // 0xe8
	TArray<UEdGraphPin_Deprecated*> SubPins; // 0xf8
	UEdGraphPin_Deprecated* ParentPin; // 0x108
	UEdGraphPin_Deprecated* ReferencePassThroughConnection; // 0x110
};

struct USoundNodeRandom : USoundNode {
	TArray<float> Weights; // 0x48
	TArray<bool> HasBeenUsed; // 0x58
	int32_t NumRandomUsed; // 0x68
	int32_t PreselectAtLevelLoad; // 0x6c
	char bShouldExcludeFromBranchCulling : 1; // 0x70
	char bSoundCueExcludedFromBranchCulling : 1; // 0x70
	char bRandomizeWithoutReplacement : 1; // 0x70
};

struct UInterpCurveEdSetup : UObject {
	TArray<FCurveEdTab> Tabs; // 0x28
	int32_t ActiveTab; // 0x38
};

struct UMovieSceneParticleSection : UMovieSceneSection {
	FMovieSceneParticleChannel ParticleKeys; // 0xe8
};

struct APainCausingVolume : APhysicsVolume {
	char bPainCausing : 1; // 0x268
	float DamagePerSec; // 0x26c
	UDamageType* DamageType; // 0x270
	float PainInterval; // 0x278
	char bEntryPain : 1; // 0x27c
	char BACKUP_bPainCausing : 1; // 0x27c
	AController* DamageInstigator; // 0x280
};

struct UParticleModuleLifetime_Seeded : UParticleModuleLifetime {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UEdGraphNode_Documentation : UEdGraphNode {
	FString Link; // 0x98
	FString Excerpt; // 0xa8
};

struct UHoleFillOperatorFactory : UObject {
	UHoleFillTool* FillTool; // 0x30
};

struct USetCollisionGeometryTool : UMultiSelectionTool {
	USetCollisionGeometryToolProperties* Settings; // 0x90
	UCollisionGeometryVisualizationProperties* VizSettings; // 0x98
	UPhysicsObjectToolPropertySet* CollisionProps; // 0xa0
	UMaterialInterface* LineMaterial; // 0xa8
	UPreviewGeometry* PreviewGeom; // 0xb0
};

struct UConZVehicleAnimInstance : UDcxVehicleAnimInstance {
	EVehicleEngineState EngineState; // 0xa38
	bool IsEngineRunning; // 0xa39
	float EngineRpm; // 0xa3c
	float EngineRpmInterpSpeed; // 0xa40
	float Speed; // 0xa44
	float SpeedKph; // 0xa48
	float MaxSteeringWheelSteerAngle; // 0xa4c
	float SteeringWheelSteerAngleInterpSpeed; // 0xa50
	float CurrentSteeringWheelSteerAngle; // 0xa54
	TArray<float> DoorOpenPercentage; // 0xa58
	TArray<float> DoorWindowOpenPercentage; // 0xa68
};

struct AConZWaterSplineLake : AConZWaterSpline {
	float SurfaceMeshCullingDistance; // 0x2b8
};

struct USynthComponentToneGenerator : USynthComponent {
	float Frequency; // 0x6c0
	float Volume; // 0x6c4
};

struct UParticleModuleRotationRate_Seeded : UParticleModuleRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UChildActorComponent : USceneComponent {
	AActor* ChildActorClass; // 0x1f8
	AActor* ChildActor; // 0x200
	AActor* ChildActorTemplate; // 0x208
};

struct UDefusingCuttingToolItemTag : UBaseItemTag {
	USkeletalMesh* SkeletalMesh; // 0x30
	UAnimMontage* Montage; // 0x38
};

struct AFishingAttachmentFloater : AFishingAttachment {
	UConZBuoyancyComponent* _floatingComponent; // 0x7e0
	int32_t _floaterBreakSegmentIndex; // 0x7e8
	float _sinkSpeed; // 0x7ec
	float _sinkSpeedDuringFastReel; // 0x7f0
	float _minDistanceForSizeIncrease; // 0x7f4
	float _maxDistanceForSizeIncrease; // 0x7f8
	float _maxScale; // 0x7fc
	float _velocityThreshold; // 0x800
	float _shouldCheckVelocityThreshold; // 0x804
	float _movingRippleThreshold; // 0x808
	FVector _floaterWaterCheckOffset; // 0x80c
	float _sendStateInterval; // 0x818
	UParticleSystem* _hitWaterParticles; // 0x890
	UParticleSystemComponent* _rippleParticleSystemComponent; // 0x898
	UParticleSystemComponent* _movingRippleParticleSystemComponent; // 0x8a0
	UParticleSystemComponent* _sinkParticleSystemComponent; // 0x8a8
	UMaterialInterface* _scaledMaterial; // 0x8b0
	UMaterialInterface* _storedMaterial; // 0x8b8
};

struct UProgressBar : UWidget {
	FProgressBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x2a8
	USlateBrushAsset* BackgroundImage; // 0x2b0
	USlateBrushAsset* FillImage; // 0x2b8
	USlateBrushAsset* MarqueeImage; // 0x2c0
	float percent; // 0x2c8
	EProgressBarFillType BarFillType; // 0x2cc
	bool bIsMarquee; // 0x2cd
	FVector2D BorderPadding; // 0x2d0
	FDelegate PercentDelegate; // 0x2d8
	FLinearColor FillColorAndOpacity; // 0x2e8
	FDelegate FillColorAndOpacityDelegate; // 0x2f8
};

struct UPrisonerConsumableDigestionHandler_FoodDisgust : UConsumableDigestionHandler {
	float _disgustAmountPerNutrientsInStomach; // 0x30
};

struct USoundNodeModulator : USoundNode {
	float PitchMin; // 0x48
	float PitchMax; // 0x4c
	float VolumeMin; // 0x50
	float VolumeMax; // 0x54
};

struct ANiagaraActor : AActor {
	UNiagaraComponent* NiagaraComponent; // 0x220
	char bDestroyOnSystemFinish : 1; // 0x228
};

struct UExponentialHeightFogComponent : USceneComponent {
	float FogDensity; // 0x1f8
	float FogHeightFalloff; // 0x1fc
	FExponentialHeightFogData SecondFogData; // 0x200
	FLinearColor FogInscatteringColor; // 0x20c
	UTextureCube* InscatteringColorCubemap; // 0x220
	float InscatteringColorCubemapAngle; // 0x228
	FLinearColor InscatteringTextureTint; // 0x22c
	float FullyDirectionalInscatteringColorDistance; // 0x23c
	float NonDirectionalInscatteringColorDistance; // 0x240
	float DirectionalInscatteringExponent; // 0x244
	float DirectionalInscatteringStartDistance; // 0x248
	FLinearColor DirectionalInscatteringColor; // 0x24c
	float FogMaxOpacity; // 0x25c
	float StartDistance; // 0x260
	float FogCutoffDistance; // 0x264
	bool bEnableVolumetricFog; // 0x268
	float VolumetricFogScatteringDistribution; // 0x26c
	FColor VolumetricFogAlbedo; // 0x270
	FLinearColor VolumetricFogEmissive; // 0x274
	float VolumetricFogExtinctionScale; // 0x284
	float VolumetricFogDistance; // 0x288
	float VolumetricFogStaticLightingScatteringIntensity; // 0x28c
	bool bOverrideLightColorsWithFogInscatteringColors; // 0x290
};

struct UGeneralProjectSettings : UObject {
	FString CompanyName; // 0x28
	FString CompanyDistinguishedName; // 0x38
	FString CopyrightNotice; // 0x48
	FString Description; // 0x58
	FString Homepage; // 0x68
	FString LicensingTerms; // 0x78
	FString PrivacyPolicy; // 0x88
	FGuid ProjectID; // 0x98
	FString ProjectName; // 0xa8
	FString ProjectVersion; // 0xb8
	FString SupportContact; // 0xc8
	FText ProjectDisplayedTitle; // 0xd8
	FText ProjectDebugTitleInfo; // 0xf0
	bool bShouldWindowPreserveAspectRatio; // 0x108
	bool bUseBorderlessWindow; // 0x109
	bool bStartInVR; // 0x10a
	bool bAllowWindowResize; // 0x10b
	bool bAllowClose; // 0x10c
	bool bAllowMaximize; // 0x10d
	bool bAllowMinimize; // 0x10e
};

struct UStaticMeshComponent : UMeshComponent {
	int32_t ForcedLodModel; // 0x470
	int32_t PreviousLODLevel; // 0x474
	int32_t MinLOD; // 0x478
	int32_t SubDivisionStepSize; // 0x47c
	UStaticMesh* StaticMesh; // 0x480
	FColor WireframeColorOverride; // 0x488
	char bEvaluateWorldPositionOffset : 1; // 0x48c
	char bOverrideWireframeColor : 1; // 0x48c
	char bOverrideMinLod : 1; // 0x48c
	char bOverrideNavigationExport : 1; // 0x48c
	char bForceNavigationObstacle : 1; // 0x48c
	char bDisallowMeshPaintPerInstance : 1; // 0x48c
	char bIgnoreInstanceForTextureStreaming : 1; // 0x48c
	char bOverrideLightMapRes : 1; // 0x48c
	char bCastDistanceFieldIndirectShadow : 1; // 0x48d
	char bOverrideDistanceFieldSelfShadowBias : 1; // 0x48d
	char bUseSubDivisions : 1; // 0x48d
	char bUseDefaultCollision : 1; // 0x48d
	char bReverseCulling : 1; // 0x48d
	int32_t OverriddenLightMapRes; // 0x490
	float DistanceFieldIndirectShadowMinVisibility; // 0x494
	float DistanceFieldSelfShadowBias; // 0x498
	float StreamingDistanceMultiplier; // 0x49c
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x4a0
	TArray<FStreamingTextureBuildInfo> StreamingTextureData; // 0x4b0
	FLightmassPrimitiveSettings LightmassSettings; // 0x4c0
};

struct UAnimationAsset : UObject {
	USkeleton* Skeleton; // 0x38
	TArray<UAnimMetaData*> MetaData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct UAudioImpulseResponse : UObject {
	TArray<float> ImpulseResponse; // 0x28
	int32_t NumChannels; // 0x38
	int32_t SampleRate; // 0x3c
	float NormalizationVolumeDb; // 0x40
	bool bTrueStereo; // 0x44
	TArray<float> IRData; // 0x48
};

struct USkill : UDataAsset {
	FText Caption; // 0x30
	ESkillReplicationID ReplicationID; // 0x48
	float ComboBonus; // 0x4c
	float NoSkillBonus; // 0x50
	float BasicBonus; // 0x54
	float MediumBonus; // 0x58
	float AdvancedBonus; // 0x5c
	float DisplayActionMessages; // 0x60
	bool IsAvailableInCharacterCreation; // 0x64
	UTexture2D* _skillIcon; // 0x68
	float _skillFamePointsMultiplier; // 0x9c
	UPrisonerSkillUIData* _uiDataClass; // 0xa0
};

struct UTextLayoutWidget : UWidget {
	FShapedTextOptions ShapedTextOptions; // 0x108
	ETextJustify Justification; // 0x10b
	ETextWrappingPolicy WrappingPolicy; // 0x10c
	char AutoWrapText : 1; // 0x10d
	float WrapTextAt; // 0x110
	FMargin Margin; // 0x114
	float LineHeightPercentage; // 0x124
};

struct UMovieScene : UMovieSceneSignedObject {
	TArray<FMovieSceneSpawnable> Spawnables; // 0x50
	TArray<FMovieScenePossessable> Possessables; // 0x60
	TArray<FMovieSceneBinding> ObjectBindings; // 0x70
	TMap<FName, FMovieSceneObjectBindingIDs> BindingGroups; // 0x80
	TArray<UMovieSceneTrack*> MasterTracks; // 0xd0
	UMovieSceneTrack* CameraCutTrack; // 0xe0
	FMovieSceneFrameRange SelectionRange; // 0xe8
	FMovieSceneFrameRange PlaybackRange; // 0xf8
	FFrameRate TickResolution; // 0x108
	FFrameRate DisplayRate; // 0x110
	EMovieSceneEvaluationType EvaluationType; // 0x118
	EUpdateClockSource ClockSource; // 0x119
	FSoftObjectPath CustomClockSourcePath; // 0x120
	TArray<FMovieSceneMarkedFrame> MarkedFrames; // 0x138
};

struct UTriggerComponent : UPrimitiveComponent {
	FObjectConditionContainer _triggeringActorConditions; // 0x4c0
};

struct ADamagingTrapItem : ATrapItem {
	float _initialDamageAmount; // 0x910
	float _damagePerSecond; // 0x914
	UAkAudioEvent* _triggerSound; // 0x918
};

struct UPrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace : UPrisonerBodyConditionOrSymptomSideEffect {
	FPrisonerMaxMovementPaceVsSeverity _maxMovementPaceVsSeverity; // 0x30
};

struct UHudSettings : UObject {
	char bShowHUD : 1; // 0x28
	TArray<FName> DebugDisplay; // 0x30
};

struct UUI_RewardWidget_C : UMissionRewardWidget {
	UImage* Image_1; // 0x270
};

struct ULocalizedOverlays : UOverlays {
	UBasicOverlays* DefaultOverlays; // 0x28
	TMap<FString, UBasicOverlays*> LocaleToOverlaysMap; // 0x30
};

struct ABP_Survival_Blueprints_CutBush_Objective_C : ACuttingObjective {
	USceneComponent* DefaultSceneRoot; // 0x360
};

struct UUI_OptionsSlider_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UImage* Image_1; // 0x280
	UImage* Image_2; // 0x288
	UImage* Image_3; // 0x290
	UImage* Image_4; // 0x298
	UButton* LowerButton; // 0x2a0
	UTextBlock* NameText; // 0x2a8
	UButton* RaiseButton; // 0x2b0
	USizeBox* TitleSizeBox; // 0x2b8
	USizeBox* ValueSizeBox; // 0x2c0
	UNamedSlot* ValueSlot; // 0x2c8
	UTextBlock* ValueText; // 0x2d0
	UOverlay* ValueTextOverlay; // 0x2d8
	FText Name; // 0x2e0
	TArray<FText> _keys; // 0x2f8
	TArray<FText> _values; // 0x308
	int32_t _index; // 0x318
	FMulticastInlineDelegate OnValueChanged; // 0x320
	bool Clamp; // 0x330
	float MinTitleWidth; // 0x334
	float MinSliderWidth; // 0x338
	int32_t _oldIndex; // 0x33c
	bool IncrementInSteps; // 0x340
	int32_t TitleFontSize; // 0x344
	int32_t HighlightedFontSize; // 0x348
	bool Titleless; // 0x34c
	int32_t ValueFontSize; // 0x350
	float ValuePadding; // 0x354
	FMargin ValueTextPadding; // 0x358
	EHorizontalAlignment ValueAlignment; // 0x368
	bool HasValueBackground; // 0x369
};

struct UMirrorOperatorFactory : UObject {
	UMirrorTool* MirrorTool; // 0x30
};

struct ABP_WeaponBullet_762x54FMJ_C : AProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
};

struct UNiagaraDataInterfaceArrayQuat : UNiagaraDataInterfaceArray {
	TArray<FQuat> QuatData; // 0x50
};

struct AWeaponScope_ACOG_01_C : AWeaponAttachmentScope {
	UDummyCollisionCapsule* ScopeViewCollision; // 0x950
};

struct UMaterialExpressionVolumetricAdvancedMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput PhaseG; // 0x40
	FExpressionInput PhaseG2; // 0x54
	FExpressionInput PhaseBlend; // 0x68
	FExpressionInput MultiScatteringContribution; // 0x7c
	FExpressionInput MultiScatteringOcclusion; // 0x90
	FExpressionInput MultiScatteringEccentricity; // 0xa4
	FExpressionInput ConservativeDensity; // 0xb8
	float ConstPhaseG; // 0xcc
	float ConstPhaseG2; // 0xd0
	float ConstPhaseBlend; // 0xd4
	bool PerSamplePhaseEvaluation; // 0xd8
	uint32_t MultiScatteringApproximationOctaveCount; // 0xdc
	float ConstMultiScatteringContribution; // 0xe0
	float ConstMultiScatteringOcclusion; // 0xe4
	float ConstMultiScatteringEccentricity; // 0xe8
	bool bGroundContribution; // 0xec
	bool bGrayScaleMaterial; // 0xed
	bool bRayMarchVolumeShadow; // 0xee
};

struct UPawnAction_Repeat : UPawnAction {
	UPawnAction* ActionToRepeat; // 0x98
	UPawnAction* RecentActionCopy; // 0xa0
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
};

struct UVehicleWeaponAimingParameters : UObject {
	TArray<EVehicleWeaponAimingStance> SupportedStance; // 0x28
	FVehicleWeaponAimingStanceData StanceData[0x2]; // 0x38
};

struct AWeapon : AWeaponItem {
	FMulticastInlineDelegate AttachmentAdded; // 0x7e8
	FMulticastInlineDelegate AttachmentRemoved; // 0x7f8
	USkeletalMeshComponent* SkeletalMesh; // 0x838
	EWeaponFiringStateType WeaponFiringStateType; // 0x840
	UWeaponStateFiring* TempWeaponStateFiringAutomatic; // 0x848
	UWeaponStateFiring* TempWeaponStateFiringSemiAutomatic; // 0x850
	UWeaponStateFiring* TempWeaponStateFiringManual; // 0x858
	UWeaponStateFiring* TempWeaponStateFiringBurst; // 0x860
	UWeaponStateActiveManualFiring* TempWeaponStateActiveManualFiring; // 0x868
	UWeaponStateFiring* FiringState; // 0x870
	TArray<EWeaponFiringMode> SupportedFiringModes; // 0x878
	TArray<UStaticMeshComponent*> CartridgeMeshComponents; // 0x888
	TArray<UWeaponActionReloadSequence*> ReloadActionSequenceClasses; // 0x898
	TArray<UWeaponActionUnloadAmmoSequence*> UnloadAmmoActionSequenceClasses; // 0x8a8
	TArray<UWeaponActionCheckAmmoSequence*> CheckAmmoActionSequenceClasses; // 0x8b8
	TArray<UWeaponActionReloadSequence*> ReloadActionSequences; // 0x8c8
	TArray<UWeaponActionClearMalfunctionSequence*> ClearMalfunctionActionSequences; // 0x8d8
	TArray<UWeaponActionUnloadAmmoSequence*> UnloadAmmoActionSequences; // 0x8e8
	TArray<UWeaponActionCheckAmmoSequence*> CheckAmmoActionSequences; // 0x8f8
	FGameplayTagContainer AmmunitionTags; // 0x908
	AAmmunitionItem* DefaultAmmunitionItemClass; // 0x928
	int32_t RequiredAmmoForShot; // 0x930
	int32_t MaxLoadedAmmo; // 0x934
	int32_t InitialAmmo; // 0x938
	int32_t InternalMagazineCapacity; // 0x93c
	bool UseChamberAsInternalMagazine; // 0x940
	int32_t BurstShotsCount; // 0x944
	bool IgnoreProceduralDownTheSightFiringAnimation; // 0x948
	UAnimMontage* FireAnimation; // 0x950
	UAnimMontage* FireAnimationLastRound; // 0x958
	UAnimMontage* FireAnimationBody; // 0x960
	UAnimMontage* FirstPersonFireAnimationBody; // 0x968
	UAnimMontage* FireAutomaticAnimationBody; // 0x970
	FBodyWeaponAnimation BodyWeaponAnimationChamber; // 0x978
	UAnimMontage* CheckFiringModeAnimationBody; // 0x988
	UAnimMontage* ChangeFiringModeAnimationBody; // 0x990
	TMap<AWeaponAttachment*, FWeaponAttachmentAnimations> AttachmentsAnimations; // 0x998
	FName MuzzleSocketName; // 0x9e8
	FName GripCorrectionSocketName; // 0x9f0
	FName AimingDownTheSightsCenterSocketName; // 0x9f8
	FName EjectCasingSocketName; // 0xa00
	bool IgnoreSupportingHandIK; // 0xa08
	FName SupportingHandIKSocketName; // 0xa0c
	FVector SupportingHandIKLocation; // 0xa14
	FVector AimingDownTheSightsLocationOffset; // 0xa20
	FTransform HolsteredOnPrisonerLeftOffset; // 0xa30
	FTransform HolsteredOnPrisonerRightOffset; // 0xa60
	bool UseWeaponFOVWhileScoping; // 0xa90
	float WeaponFOVWhileScoping; // 0xa94
	FVector WeaponCameraOffsetWhileScoping; // 0xa98
	FRuntimeFloatCurve OffsetPerAspectRatioWhileScoping; // 0xaa8
	bool IgnoreZeroRangeChange; // 0xb30
	int32_t ZeroRange; // 0xb34
	int32_t ZeroRangeStep; // 0xb38
	int32_t ZeroRangeMax; // 0xb3c
	UProjectileImpactEffects* InstantHitImpactEffects; // 0xb40
	float FieldOfView; // 0xb48
	float DepthOfFieldFocalDistance; // 0xb4c
	float DepthOfFieldFstop; // 0xb50
	float ObstaclesDetectionOffset; // 0xb54
	bool UseFiringModeBoneRotation; // 0xb58
	FRotator FiringModeBoneRotations[0x3]; // 0xb5c
	FPostProcessSettings PostProcessSettings; // 0xb80
	UAnimSequenceBase* RelaxedGripCorrectionAnimationPose[0x4]; // 0x10d0
	UAnimSequenceBase* AimingHipAnimationPose[0x4]; // 0x10f0
	UAnimSequenceBase* AimingDownTheSightsAnimationPose[0x4]; // 0x1110
	UAnimSequenceBase* AimingDownTheSightsStillAnimationPose[0x4]; // 0x1130
	UAnimSequenceBase* AimingDownTheSightsWalkingAnimationPose[0x4]; // 0x1150
	UAnimSequenceBase* AimingDownTheSightsLimpingWalkingAnimationPose[0x4]; // 0x1170
	UBlendSpace* WeaponAimOffsets[0x7]; // 0x1190
	EWeaponCategory WeaponCategory; // 0x11c8
	bool IgnoreAimingSpread; // 0x11c9
	bool UseCustomWeaponSpreadData; // 0x11ca
	FWeaponSpreadData WeaponSpreadData; // 0x11cc
	bool UseCustomWeaponViewKickData; // 0x120c
	FWeaponViewKickData WeaponViewKickData; // 0x1210
	float ViewKickMultiplier; // 0x1228
	float MaxRecoilOffset; // 0x122c
	float RecoilRecoverySpeed; // 0x1230
	float MuzzleEffectsScaleDistanceStart; // 0x1234
	float MuzzleEffectsScaleDistanceRange; // 0x1238
	float MuzzleEffectsScaleByDistanceFactor; // 0x123c
	float ChamberBulletDelay; // 0x1240
	bool ChamberBulletAutomatically; // 0x1244
	bool ChamberBulletWhenMagazineIsAttached; // 0x1245
	float DamagePerShot; // 0x1248
	bool TestWeapon; // 0x124c
	TArray<FFireAnimationData> WornOutFiringAnimations; // 0x1250
	bool CanBeInspectedWhenMalfunctioned; // 0x1260
	UAnimMontage* InspectModeAnimation; // 0x1268
	bool UseCustomMalfunctionChances; // 0x1270
	FWeaponMalfunctionChances MalfunctionChances; // 0x1274
	FName StovePipeSocketName; // 0x12ac
	UStaticMesh* StovePipeMesh; // 0x12b8
	FName DoubleFeedSocketName; // 0x12c0
	UStaticMesh* DoubleFeedMesh; // 0x12c8
	bool ShouldClearInspectModeWhenClearingMalfunction; // 0x12d0
	TArray<UWeaponActionClearMalfunctionSequence*> ClearMalfunctionSequenceClasses; // 0x12d8
	TMap<EWeaponMalfunction, FWeaponMalfunctionData> MalfunctionsData; // 0x12e8
	float DTSModeLerpDurationIn; // 0x1338
	float DTSModeLerpDurationOut; // 0x133c
	UCurveFloat* DownTheSightsModeLerpCurveOverride; // 0x1340
	UWeaponState* _currentState; // 0x1348
	UWeaponState* _activeState; // 0x1350
	UWeaponStateEquipping* _equippingState; // 0x1358
	UWeaponState* _unequippingStateDefault; // 0x1360
	UWeaponState* _unequippingState; // 0x1368
	UWeaponState* _inactiveState; // 0x1370
	UWeaponState* _chamberBulletState; // 0x1378
	UWeaponStateReload* _reloadState2; // 0x1380
	UWeaponStateClearMalfunction* _clearMalfunctionState; // 0x1388
	UWeaponStateUnloadAmmo* _unloadAmmoState; // 0x1390
	UWeaponStateCheckAmmo* _checkAmmoState; // 0x1398
	EWeaponMuzzleEffectsSpawType _muzzleEffectsSpawnType; // 0x13a0
	UParticleSystem* _muzzlePS; // 0x13a8
	UParticleSystem* _suppressorMuzzlePS; // 0x13b0
	UParticleSystemComponent* _muzzlePSC; // 0x13b8
	UParticleSystem* _smokeAfterShotFiredPS; // 0x13c0
	UParticleSystemComponent* _smokeAfterShotFiredPSC; // 0x13c8
	UParticleSystem* _ejectCasingPS; // 0x13d0
	UParticleSystem* _ejectLiveRoundPS; // 0x13d8
	APrisoner* _weaponOwner; // 0x13e0
	TArray<FAmmunitionData> _loadedAmmoData; // 0x13e8
	bool _shouldOverrideUseMuzzleDirectionForShooting; // 0x13fa
	bool _useMuzzleDirectionForShootingOverride; // 0x13fb
	TWeakObjectPtr<AActor> _projectileTargetLocationOverride; // 0x13fc
	EWeaponFiringMode _firingMode; // 0x1474
	TArray<AWeaponAttachment*> _weaponAttachmentsReplicated; // 0x1488
	TArray<FAmmunitionData> _internalMagazineAmmoData; // 0x14c0
	int32_t _usedAmmoCount; // 0x14d0
	bool _shouldPlayChamberOpenedIdle; // 0x14d5
	bool _isInGameEvent; // 0x14e5
	UAkAudioEvent* _fireSingleShotAudioEvent; // 0x14e8
	UAkAudioEvent* _startAutoFireAudioEvent; // 0x14f0
	UAkAudioEvent* _stopAutoFireAudioEvent; // 0x14f8
	UAkAudioEvent* _suppressorFireSingleShotAudioEvent; // 0x1500
	UAkAudioEvent* _suppressorStartAutoFireAudioEvent; // 0x1508
	UAkAudioEvent* _suppressorStopAutoFireAudioEvent; // 0x1510
	UAkAudioEvent* _improvisedSuppressorFireSingleShotAudioEvent; // 0x1518
	UAkAudioEvent* _improvisedSuppressorStartAutoFireAudioEvent; // 0x1520
	UAkAudioEvent* _improvisedSuppressorStopAutoFireAudioEvent; // 0x1528
	UAkAudioEvent* _noAmmoAudioEvent; // 0x1530
	UAkAudioEvent* _dryFireUncockedAudioEvent; // 0x1538
	UAkAudioEvent* _zeroRangeClickAudioEvent; // 0x1540
	UAkAudioEvent* _changeFiringModeAudioEvent; // 0x1548
	UAkAudioEvent* _onMalfunctionAudioEvent; // 0x1550
	UAkAudioEvent* _switchADSStateAudioEvent; // 0x1558
	UAkAudioEvent* _indoorSmallHearingDamageAudioEvent; // 0x1560
	UAkAudioEvent* _indoorMediumHearingDamageAudioEvent; // 0x1568
	UAkAudioEvent* _indoorLargeHearingDamageAudioEvent; // 0x1570
	UAkAudioEvent* _outdoorLargeHearingDamageAudioEvent; // 0x1578
	float _makeNoiseLoudness; // 0x1580
	float _staminaDrainMultiplier; // 0x1594
	EWeaponMalfunction _malfunction; // 0x15a4
	EWeaponBehaviourMode _behaviourMode; // 0x15a5
	UObject* _loadedAmmunitionItemClass; // 0x15c8
	AProjectile* _loadedProjectileClass; // 0x15d8
	AProjectile* _defaultProjectileClass; // 0x15e0
	float _totalControllerPitchAmountToAdd; // 0x15f4
	float _controllerPitchAddTimeFrame; // 0x15f8
	FWeaponStateSyncData _ownerWeaponStateSyncData; // 0x2d80
};

struct UDistributionVectorParameterBase : UDistributionVectorConstant {
	FName ParameterName; // 0x50
	FVector MinInput; // 0x58
	FVector MaxInput; // 0x64
	FVector MinOutput; // 0x70
	FVector MaxOutput; // 0x7c
	DistributionParamMode ParamModes[0x3]; // 0x88
};

struct AAmmunitionItem : AItem {
	FGameplayTag AmmunitionTag; // 0x7c0
	FString AmmunitionTypeString; // 0x7c8
	AProjectile* projectileClass; // 0x7d8
	UStaticMesh* CartridgeMesh; // 0x7e0
	UStaticMesh* CasingMesh; // 0x7e8
	UStaticMesh* UsedBadRoundMesh; // 0x7f0
	float WeaponSpreadMultiplier; // 0x7f8
	int32_t MaxAmmoCount; // 0x7fc
	int32_t _ammoCount; // 0x800
	int32_t _ammoCountOwnerHelper; // 0x804
};

struct ABP_WeaponBullet_BroadHead_CarbonArrow_C : AProjectileArrow {
	FPointerToUberGraphFrame UberGraphFrame; // 0x458
	UParticleSystemComponent* ParticleSystem; // 0x460
};

struct UPrisonerBodySymptom_DoubleVision : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8
};

struct UVehicleMountSlotWidget : UUserWidget {
	UWidgetSwitcher* _slotStateSwitcher; // 0x260
	UTextBlock* _keybindLabel; // 0x268
};

struct UFoliageType : UObject {
	FGuid UpdateGuid; // 0x28
	float Density; // 0x38
	float DensityAdjustmentFactor; // 0x3c
	float Radius; // 0x40
	bool bSingleInstanceModeOverrideRadius; // 0x44
	float SingleInstanceModeRadius; // 0x48
	EFoliageScaling Scaling; // 0x4c
	FFloatInterval ScaleX; // 0x50
	FFloatInterval ScaleY; // 0x58
	FFloatInterval ScaleZ; // 0x60
	FFoliageVertexColorChannelMask VertexColorMaskByChannel[0x4]; // 0x68
	FoliageVertexColorMask VertexColorMask; // 0x98
	float VertexColorMaskThreshold; // 0x9c
	char VertexColorMaskInvert : 1; // 0xa0
	FFloatInterval ZOffset; // 0xa4
	char AlignToNormal : 1; // 0xac
	float AlignMaxAngle; // 0xb0
	char RandomYaw : 1; // 0xb4
	float RandomPitchAngle; // 0xb8
	FFloatInterval GroundSlopeAngle; // 0xbc
	FFloatInterval Height; // 0xc4
	TArray<FName> LandscapeLayers; // 0xd0
	float MinimumLayerWeight; // 0xe0
	TArray<FName> ExclusionLandscapeLayers; // 0xe8
	float MinimumExclusionLayerWeight; // 0xf8
	FName LandscapeLayer; // 0xfc
	char CollisionWithWorld : 1; // 0x104
	FVector CollisionScale; // 0x108
	FBoxSphereBounds MeshBounds; // 0x114
	FVector LowBoundOriginRadius; // 0x130
	EComponentMobility Mobility; // 0x13c
	FInt32Interval CullDistance; // 0x140
	char bEnableStaticLighting : 1; // 0x148
	char CastShadow : 1; // 0x148
	char bAffectDynamicIndirectLighting : 1; // 0x148
	char bAffectDistanceFieldLighting : 1; // 0x148
	char bCastDynamicShadow : 1; // 0x148
	char bCastStaticShadow : 1; // 0x148
	char bCastShadowAsTwoSided : 1; // 0x148
	char bReceivesDecals : 1; // 0x148
	char bOverrideLightMapRes : 1; // 0x149
	int32_t OverriddenLightMapRes; // 0x14c
	ELightmapType LightmapType; // 0x150
	char bUseAsOccluder : 1; // 0x154
	FBodyInstance BodyInstance; // 0x158
	EHasCustomNavigableGeometry CustomNavigableGeometry; // 0x2b0
	FLightingChannels LightingChannels; // 0x2b1
	char bRenderCustomDepth : 1; // 0x2b4
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x2b8
	int32_t CustomDepthStencilValue; // 0x2bc
	int32_t TranslucencySortPriority; // 0x2c0
	float CollisionRadius; // 0x2c4
	float ShadeRadius; // 0x2c8
	int32_t NumSteps; // 0x2cc
	float InitialSeedDensity; // 0x2d0
	float AverageSpreadDistance; // 0x2d4
	float SpreadVariance; // 0x2d8
	int32_t SeedsPerStep; // 0x2dc
	int32_t DistributionSeed; // 0x2e0
	float MaxInitialSeedOffset; // 0x2e4
	bool bCanGrowInShade; // 0x2e8
	bool bSpawnsInShade; // 0x2e9
	float MaxInitialAge; // 0x2ec
	float MaxAge; // 0x2f0
	float OverlapPriority; // 0x2f4
	FFloatInterval ProceduralScale; // 0x2f8
	FRuntimeFloatCurve ScaleCurve; // 0x300
	int32_t ChangeCount; // 0x388
	char ReapplyDensity : 1; // 0x38c
	char ReapplyRadius : 1; // 0x38c
	char ReapplyAlignToNormal : 1; // 0x38c
	char ReapplyRandomYaw : 1; // 0x38c
	char ReapplyScaling : 1; // 0x38c
	char ReapplyScaleX : 1; // 0x38c
	char ReapplyScaleY : 1; // 0x38c
	char ReapplyScaleZ : 1; // 0x38c
	char ReapplyRandomPitchAngle : 1; // 0x38d
	char ReapplyGroundSlope : 1; // 0x38d
	char ReapplyHeight : 1; // 0x38d
	char ReapplyLandscapeLayers : 1; // 0x38d
	char ReapplyZOffset : 1; // 0x38d
	char ReapplyCollisionWithWorld : 1; // 0x38d
	char ReapplyVertexColorMask : 1; // 0x38d
	char bEnableDensityScaling : 1; // 0x38d
	char bEnableDiscardOnLoad : 1; // 0x38e
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x390
	int32_t VirtualTextureCullMips; // 0x3a0
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x3a4
};

struct UMaterialExpressionDecalMipmapLevel : UMaterialExpression {
	FExpressionInput TextureSize; // 0x40
	float ConstWidth; // 0x54
	float ConstHeight; // 0x58
};

struct UMaterialExpressionReflectionCapturePassSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Reflection; // 0x54
};

struct UNiagaraParameterCollectionInstance : UObject {
	UNiagaraParameterCollection* Collection; // 0x28
	TArray<FNiagaraVariable> OverridenParameters; // 0x30
	FNiagaraParameterStore ParameterStorage; // 0x40
};

struct UAnimSequenceLevelSequenceLink : UAssetUserData {
	FGuid SkelTrackGuid; // 0x28
	FSoftObjectPath PathToLevelSequence; // 0x38
};

struct UMovieSceneTakeSection : UMovieSceneSection {
	FMovieSceneIntegerChannel HoursCurve; // 0xe8
	FMovieSceneIntegerChannel MinutesCurve; // 0x178
	FMovieSceneIntegerChannel SecondsCurve; // 0x208
	FMovieSceneIntegerChannel FramesCurve; // 0x298
	FMovieSceneFloatChannel SubFramesCurve; // 0x328
	FMovieSceneStringChannel Slate; // 0x3c8
};

struct UMaterialExpressionSceneColor : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput OffsetFraction; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct UUI_SpawnMenuWidget_C : USpawnMenuWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UBorder* Border_2; // 0x280
	UOverlay* ComaTitlePanel; // 0x288
	UBorder* CombatLabel; // 0x290
	UTextBlock* CurrentFPText; // 0x298
	UOverlay* DeathTitlePanel; // 0x2a0
	UTextBlock* HealthCriticalLabel; // 0x2a8
	UImage* Image; // 0x2b0
	UImage* Image_2; // 0x2b8
	UImage* Image_3; // 0x2c0
	UImage* Image_4; // 0x2c8
	UImage* Image_5; // 0x2d0
	UBorder* LimtExceededLabel; // 0x2d8
	UVerticalBox* LocationOptions; // 0x2e0
	UBorder* NoAvailableLabel; // 0x2e8
	UUI_SpawnChoiceWidget_C* RandomLocation; // 0x2f0
	UTextBlock* RemainingFPText; // 0x2f8
	UUI_SpawnChoiceWidget_C* SectorLocation; // 0x300
	UUI_SpawnChoiceWidget_C* ShelterLocation; // 0x308
	UHorizontalBox* SpawnInterface; // 0x310
	UUI_SpawnChoiceWidget_C* SquadLocation; // 0x318
	UBorder* SuddenDeathLabel; // 0x320
	UTextBlock* Timer; // 0x328
	UTextBlock* TimerLabel; // 0x330
	UOverlay* TimerPanel; // 0x338
	UTextBlock* TotalPricetext; // 0x340
	UUI_SpawnSectorSelector_C* UI_SpawnSectorSelector; // 0x348
	UButton* WakeUpButton; // 0x350
	UOverlay* WakeUpPanel; // 0x358
	int32_t TotalPrice; // 0x360
	int32_t CurrentFP; // 0x364
	float WakeUpTimer; // 0x368
	bool Revived; // 0x36c
};

struct UPaperFlipbook : UObject {
	float FramesPerSecond; // 0x28
	TArray<FPaperFlipbookKeyFrame> KeyFrames; // 0x30
	UMaterialInterface* DefaultMaterial; // 0x40
	EFlipbookCollisionMode CollisionSource; // 0x48
};

struct UPrimaryAssetLabel : UPrimaryDataAsset {
	FPrimaryAssetRules Rules; // 0x30
	char bLabelAssetsInMyDirectory : 1; // 0x3c
	char bIsRuntimeLabel : 1; // 0x3c
	TArray<TSoftObjectPtr<UObject>> ExplicitAssets; // 0x40
	TArray<TSoftClassPtr<UObject>> ExplicitBlueprints; // 0x50
	FCollectionReference AssetCollection; // 0x60
};

struct AVDSimulationSettingsActor : AInfo {
	FVDSettings Settings; // 0x220
};

struct UClickDragInputBehavior : UAnyButtonInputBehavior {
	bool bUpdateModifiersDuringDrag; // 0x120
};

struct UMeleeSkill : UStrengthSkill {
	UMeleeSkillAnimationsPreset* AnimationsPreset; // 0xa8
	FMeleeSkillExperienceAwards _noSkillExperienceAwards; // 0xb0
	FMeleeSkillExperienceAwards _basicSkillExperienceAwards; // 0xc0
	FMeleeSkillExperienceAwards _mediumSkillExperienceAwards; // 0xd0
	FMeleeSkillExperienceAwards _advancedSkillExperienceAwards; // 0xe0
	FMeleeSkillExperienceAwards _aboveAdvancedSkillExperienceAwards; // 0xf0
};

struct ABowAttachmentSilencer : AWeaponAttachment {
	float _noiseMultiplier; // 0x7e0
};

struct UMaterialExpressionTextureSample : UMaterialExpressionTextureBase {
	FExpressionInput Coordinates; // 0x48
};

struct AAnimal2 : AConZCharacter {
	FText SpeciesName; // 0x798
	EAnimalSpecies SpeciesType; // 0x7b0
	EAnimalActivityCycle ActivityCycle; // 0x7b1
	float maxHealth; // 0x7b4
	UHitReactComponent* HitReactComponent; // 0x7b8
	FGameplayTag HitReactType; // 0x7c0
	FName EyesViewPointSocketName; // 0x7c8
	ATrackingMarker2* TrackingMarker; // 0x7d0
	ATrackingMarker2* BloodTrailMarker; // 0x7d8
	float TrackingMarkerFrequency; // 0x7e0
	float TrackingMarkerDistance; // 0x7e4
	float TrackingMarkerRadius; // 0x7e8
	float TrackingMarkerDuration; // 0x7ec
	float BleedingSpeed; // 0x7f0
	float LightWoundDamageAmount; // 0x7f4
	float MeleeBleedingThreshold; // 0x7f8
	float StuckCheckDuration; // 0x7fc
	float StuckRadius; // 0x800
	char UnstuckMode; // 0x804
	FMulticastInlineDelegate OnDamageTaken; // 0x808
	float HeadBoneRotationSendToServerInterval; // 0x818
	float SightRange; // 0x81c
	bool TiltMeshOnSlopes; // 0x820
	bool AdjustMeshHeightOnSlopes; // 0x821
	float MeshPositionLerpSpeed; // 0x824
	float BleedInterval; // 0x828
	bool ShouldGoToRagdolIfTakenDamage; // 0x82c
	float RagdollDuration; // 0x830
	float _health; // 0x834
	float _woundDamage; // 0x838
	int32_t _packSizeMin; // 0x84c
	int32_t _packSizeMax; // 0x850
	EAnimalStance _animalStance; // 0x888
	bool _shouldUpdateMovementSpeedRTPCValue; // 0x890
	bool _doNotCrumble; // 0x8e8
	float _collisionDamageMultiplierPerBodyPart[0xc]; // 0x8ec
	float _delayBetweenTakeDamageSounds; // 0x920
	bool _canDrown; // 0x924
	float _drownDamageCycleLength; // 0x928
	float _drownDamagePerCycle; // 0x92c
	float _baseEyeForwardDistance; // 0x934
};

struct UMaterialExpressionGetMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput MaterialAttributes; // 0x40
	TArray<FGuid> AttributeGetTypes; // 0x58
};

struct USoundSubmixBase : UObject {
	TArray<USoundSubmixBase*> ChildSubmixes; // 0x28
};

struct UWeightMapSetProperties : UInteractiveToolPropertySet {
	FName WeightMap; // 0x60
	TArray<FString> WeightMapsList; // 0x68
	bool bInvertWeightMap; // 0x78
};

struct ATrapItem : AItem {
	UBuriableTrapItemComponent* _buriableTrapItemComponent; // 0x7f0
	ETrapType _trapType; // 0x7f8
	float _autoDestroyTimeWhenArmed; // 0x7fc
	float _autoDestroyTimeWhenOwnerless; // 0x800
	bool _destroyAfterTriggered; // 0x804
	float _destroyDelay; // 0x808
	bool _canEverBeRefueled; // 0x80c
	UTrapRefuelItemTag* _refuelItemTag; // 0x810
	FVector _triggerForwardVector; // 0x818
	float _ragdollDuration; // 0x824
	bool _isArmedByDefault; // 0x828
	bool _shouldApplyPhysicalDamage; // 0x829
	FBox _physicalDamageBoundsBox; // 0x82c
	float _actorDestructionDelay; // 0x848
	int32_t _numRemainingDefuseAttempts; // 0x84c
	bool _numRemainingDefuseAttemptsDependsOnSkill; // 0x850
	bool _logTrapTriggered; // 0x851
	bool _hasFixedTrigger; // 0x852
	float _minDamageForTrigger; // 0x854
	bool _triggeredByRadialDamage; // 0x858
	float _maxTriggerAngle; // 0x85c
	bool _canEverShowTriggerVisuals; // 0x860
	FTransform _triggerVisualTransform; // 0x870
	AMinigame* _minigameClass; // 0x8a0
	UBaseItemTag* _minigameToolTag; // 0x8a8
	bool _isDestroyed; // 0x8b1
	bool _isArmed; // 0x8d0
	bool _wasTriggered; // 0x8d1
	bool _canBeTriggered; // 0x8d2
	ETrapTriggerType _currentTrigger; // 0x8e4
	FDbIntegerId _lastTriggerOwner; // 0x8e8
	float _quality; // 0x8f0
};

struct UGizmoBaseComponent : UPrimitiveComponent {
	FLinearColor Color; // 0x448
	float HoverSizeMultiplier; // 0x458
	float PixelHitDistanceThreshold; // 0x45c
};

struct UMovieSceneEasingExternalCurve : UObject {
	UCurveFloat* Curve; // 0x30
};

struct UInventorySizeData2D : UInventorySizeData {
	int32_t SizeX; // 0x28
	int32_t SizeY; // 0x2c
	TArray<bool> Bitmask; // 0x30
};

struct UDistributionFloatConstantCurve : UDistributionFloat {
	FInterpCurveFloat ConstantCurve; // 0x38
};

struct UInputAxisKeyDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings; // 0x28
};

struct UPrisonerBodyCondition_StomachEmpty : UPrisonerBodyCondition {
	float _stomachEmptinessToExist; // 0xa8
	float _energyRatioToExist; // 0xac
	UPrisonerBodySymptom_StomachGrowling* _stomachGrowlingSymptomClass; // 0xb0
	float _stomachGrowlingSymptomSoundInterval; // 0xb8
	UPrisonerBodySymptomCause_StomachGrowling* _stomachGrowlingSymptomCause; // 0xc0
};

struct UDatasmithLandscapeTemplate : UDatasmithObjectTemplate {
	UMaterialInterface* LandscapeMaterial; // 0x30
	int32_t StaticLightingLOD; // 0x38
};

struct UDestructibleMesh : USkeletalMesh {
	FDestructibleParameters DefaultDestructibleParameters; // 0x398
	TArray<FFractureEffect> FractureEffects; // 0x420
};

struct UBasicReplicationGraph : UReplicationGraph {
	UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x498
	UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4a0
	TArray<FConnectionAlwaysRelevantNodePair> AlwaysRelevantForConnectionList; // 0x4a8
	TArray<AActor*> ActorsWithoutNetConnection; // 0x4b8
};

struct AConZBaseManager : AActor {
	float _damageEventProcessingPeriod; // 0x280
	float _decayProcessingPeriod; // 0x284
	float _flagOvertakePeriod; // 0x288
	float _baseInteractionsPeriod; // 0x28c
	AConZBase* _baseClass; // 0x290
	AConZBaseElement* _baseElementClass; // 0x298
	AFlagAreaVisualizer* _flagAreaVisualizerClass; // 0x2a0
	FVector2D _initialBaseSize; // 0x2a8
	float _flagInfluenceRadius; // 0x2b0
	float _flagOvertakeDuration; // 0x2b4
	float _maxBaseBuildingHeight; // 0x2b8
	FConZBaseRepairAreaDuration _shortRepairDuration; // 0x2bc
	FConZBaseRepairAreaDuration _mediumRepairDuration; // 0x2c4
	FConZBaseRepairAreaDuration _longRepairDuration; // 0x2cc
	bool _useBuildingRestrictions; // 0x2e5
	bool _disableBaseBuilding; // 0x2e6
	TMap<int64_t, AConZBase*> _bases; // 0x2f0
};

struct UCustomZoneSettingsConfigurationDetails : UUserWidget {
	UEditableText* _name; // 0x270
	UCustomZoneSettingsColorPicker* _color; // 0x278
	UCustomZoneSettingsHandlingMethodSelector* _fallDamageHandlingMethodSelector; // 0x280
	UCustomZoneSettingsHandlingMethodSelector* _puppetDamageHandlingMethodSelector; // 0x288
	UCustomZoneSettingsHandlingMethodSelector* _sentryDamageHandlingMethodSelector; // 0x290
	UCustomZoneSettingsHandlingMethodSelector* _animalDamageHandlingMethodSelector; // 0x298
	UCustomZoneSettingsHandlingMethodSelector* _vehicleDamageHandlingMethodSelector; // 0x2a0
	UCustomZoneSettingsHandlingMethodSelector* _boxingDamageHandlingMethodSelector; // 0x2a8
	UCustomZoneSettingsHandlingMethodSelector* _meleeWeaponDamageHandlingMethodSelector; // 0x2b0
	UCustomZoneSettingsHandlingMethodSelector* _throwingDamageHandlingMethodSelector; // 0x2b8
	UCustomZoneSettingsHandlingMethodSelector* _projectileDamageHandlingMethodSelector; // 0x2c0
	UCustomZoneSettingsHandlingMethodSelector* _explosiveDamageHandlingMethodSelector; // 0x2c8
	UCustomZoneSettingsHandlingMethodSelector* _trapDamageHandlingMethodSelector; // 0x2d0
	UCustomZoneSettingsHandlingMethodSelector* _damageToBasesHandlingMethodSelector; // 0x2d8
	UCustomZoneSettingsHandlingMethodSelector* _damageToVehiclesHandlingMethodSelector; // 0x2e0
	UCustomZoneSettingsHandlingMethodSelector* _playerLockpickingHandlingMethodSelector; // 0x2e8
	UCustomZoneSettingsHandlingMethodSelector* _worldLockpickingHandlingMethodSelector; // 0x2f0
	UCustomZoneSettingsHandlingMethodSelector* _baseBuildingHandlingMethodSelector; // 0x2f8
	TArray<FLinearColor> _colors; // 0x300
};

struct ULiveLinkBasicFrameInterpolationProcessor : ULiveLinkFrameInterpolationProcessor {
	bool bInterpolatePropertyValues; // 0x28
};

struct UBakedOcclusionMapVisualizationProperties : UInteractiveToolPropertySet {
	float BaseGrayLevel; // 0x60
	float OcclusionMultiplier; // 0x64
};

struct UHandsHolstersWidget2 : UInventoryContainerWidget2 {
	UInventoryContainer2D* _container; // 0x278
	UInventoryContainerHandsHolsters* _handsHolstersContainer; // 0x280
	UTextBlock* _nameText; // 0x288
	UInventorySlotUserWidget* _itemSlotWidget; // 0x290
	UItemWidget2* _itemWidget; // 0x298
	UGridPanel* _inventoryGrid; // 0x2a0
	UInventorySlotUserWidget* _attachmentSlotWidget; // 0x2a8
	TArray<UInventorySlotUserWidget*> _slotsWidgets; // 0x2b0
	TArray<UItemWidget2*> _attachmentWidgets; // 0x2c0
	EHandsHolstersType _type; // 0x2d0
	TScriptInterface<IInventoryNode> _item; // 0x2d8
};

struct UMetabolismSave : UObject {
	float LeanBodyMass; // 0x28
	TArray<FDigestionItemSave> DigestionItems; // 0x30
	TArray<FConsumableDigestionHandlerSave> DigestionHandlers; // 0x40
	FNutrientsData AbsorbedNutrients; // 0x50
	FNutrientsData FecesVolumeInIntestine; // 0xd0
	FNutrientsData FecesVolumeInColon; // 0x150
	float UrineVolumeInBladder; // 0x1d0
};

struct UAudioSettings : UDeveloperSettings {
	FSoftObjectPath DefaultSoundClassName; // 0x38
	FSoftObjectPath DefaultMediaSoundClassName; // 0x50
	FSoftObjectPath DefaultSoundConcurrencyName; // 0x68
	FSoftObjectPath DefaultBaseSoundMix; // 0x80
	FSoftObjectPath VoiPSoundClass; // 0x98
	FSoftObjectPath MasterSubmix; // 0xb0
	FSoftObjectPath ReverbSubmix; // 0xc8
	FSoftObjectPath EQSubmix; // 0xe0
	EVoiceSampleRate VoiPSampleRate; // 0xf8
	float DefaultReverbSendLevel; // 0xfc
	int32_t MaximumConcurrentStreams; // 0x100
	float GlobalMinPitchScale; // 0x104
	float GlobalMaxPitchScale; // 0x108
	TArray<FAudioQualitySettings> QualityLevels; // 0x110
	char bAllowPlayWhenSilent : 1; // 0x120
	char bDisableMasterEQ : 1; // 0x120
	char bAllowCenterChannel3DPanning : 1; // 0x120
	uint32_t NumStoppingSources; // 0x124
	EPanningMethod PanningMethod; // 0x128
	EMonoChannelUpmixMethod MonoChannelUpmixMethod; // 0x129
	FString DialogueFilenameFormat; // 0x130
};

struct UMaterialExpressionTangentOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UBrushBaseProperties : UInteractiveToolPropertySet {
	float BrushSize; // 0x60
	bool bSpecifyRadius; // 0x64
	float BrushRadius; // 0x68
	float BrushStrength; // 0x6c
	float BrushFalloffAmount; // 0x70
	bool bShowStrength; // 0x74
	bool bShowFalloff; // 0x75
};

struct UAkSurfaceReflectorSetComponent : USceneComponent {
	char bEnableSurfaceReflectors : 1; // 0x1f8
	TArray<FAkPoly> AcousticPolys; // 0x200
	char bEnableDiffraction : 1; // 0x210
	char bEnableDiffractionOnBoundaryEdges : 1; // 0x210
};

struct UDatasmithStaticMeshTemplate : UDatasmithObjectTemplate {
	FDatasmithMeshSectionInfoMapTemplate SectionInfoMap; // 0x30
	int32_t LightMapCoordinateIndex; // 0x80
	int32_t LightMapResolution; // 0x84
	TArray<FDatasmithMeshBuildSettingsTemplate> BuildSettings; // 0x88
	TArray<FDatasmithStaticMaterialTemplate> StaticMaterials; // 0x98
};

struct UDialogueVoice : UObject {
	EGrammaticalGender Gender; // 0x28
	EGrammaticalNumber Plurality; // 0x29
	FGuid LocalizationGUID; // 0x2c
};

struct UIterativeOffsetProperties : UInteractiveToolPropertySet {
	int32_t Steps; // 0x60
	bool bOffsetBoundaries; // 0x64
	float SmoothingPerStep; // 0x68
	bool bReprojectSmooth; // 0x6c
};

struct UIterativeSmoothProperties : UInteractiveToolPropertySet {
	float SmoothingPerStep; // 0x60
	int32_t Steps; // 0x64
	bool bSmoothBoundary; // 0x68
};

struct UGerstnerWaterWaveGeneratorSimple : UGerstnerWaterWaveGeneratorBase {
	int32_t NumWaves; // 0x28
	int32_t Seed; // 0x2c
	float Randomness; // 0x30
	float MinWavelength; // 0x34
	float MaxWavelength; // 0x38
	float WavelengthFalloff; // 0x3c
	float MinAmplitude; // 0x40
	float MaxAmplitude; // 0x44
	float AmplitudeFalloff; // 0x48
	float WindAngleDeg; // 0x4c
	float DirectionAngularSpreadDeg; // 0x50
	float SmallWaveSteepness; // 0x54
	float LargeWaveSteepness; // 0x58
	float SteepnessFalloff; // 0x5c
};

struct UEnvQueryTest_Overlap : UEnvQueryTest {
	FEnvOverlapData OverlapData; // 0x1f8
};

struct UAdminCommand_AdminLight : UAdminCommand {
	UAdminLight* _adminLightComponent; // 0x80
	float _maxIntensityMultiplier; // 0x88
};

struct UObjectivesWidget : UUserWidget {
	UTextBlock* _objectiveDescription; // 0x260
	UHorizontalBox* _amountTracker; // 0x268
	UTextBlock* _currentAmount; // 0x270
	UTextBlock* _totalAmount; // 0x278
	FLinearColor activeObjectiveFontColor; // 0x280
	FLinearColor inctiveObjectiveFontColor; // 0x290
	int32_t activeObjectiveFontSize; // 0x2a0
	int32_t inactiveObjectiveFontSize; // 0x2a4
};

struct UCircularMenuSegmentWidget : UDesignableUserWidget {
	float _nonSelectableAlpha; // 0x278
	FLinearColor _highlightedColour; // 0x27c
	FLinearColor _unHighlightedColour; // 0x28c
	UCircularMenuSegmentInfo* _info; // 0x2a0
	UCircularMenuSegmentWidget* _parentSegmentWidget; // 0x2a8
	UImage* _segment; // 0x2b0
	UOverlay* _iconsOverlay; // 0x2b8
	USizeBox* _iconSizeBox; // 0x2c0
	UImage* _icon; // 0x2c8
	USizeBox* _overlayIconSizeBox; // 0x2d0
	UImage* _overlayIcon; // 0x2d8
};

struct USoundNodeEnveloper : USoundNode {
	float LoopStart; // 0x48
	float LoopEnd; // 0x4c
	float DurationAfterLoop; // 0x50
	int32_t LoopCount; // 0x54
	char bLoopIndefinitely : 1; // 0x58
	char bLoop : 1; // 0x58
	UDistributionFloatConstantCurve* VolumeInterpCurve; // 0x60
	UDistributionFloatConstantCurve* PitchInterpCurve; // 0x68
	FRuntimeFloatCurve VolumeCurve; // 0x70
	FRuntimeFloatCurve PitchCurve; // 0xf8
	float PitchMin; // 0x180
	float PitchMax; // 0x184
	float VolumeMin; // 0x188
	float VolumeMax; // 0x18c
};

struct UUI_DialogueContainerWidget_C : UDialogueContainerWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UWidgetAnimation* HideAvatarAnimation; // 0x288
	UWidgetAnimation* ShowAvatarAnimation; // 0x290
	UImage* _avatarImage; // 0x298
	URetainerBox* _avatarRetainer; // 0x2a0
	UImage* _whiteLine; // 0x2a8
	float _time; // 0x2b0
};

struct UListViewBase : UWidget {
	UUserWidget* EntryWidgetClass; // 0x108
	float WheelScrollMultiplier; // 0x110
	bool bEnableScrollAnimation; // 0x114
	bool bEnableFixedLineOffset; // 0x115
	float FixedLineScrollOffset; // 0x118
	FMulticastInlineDelegate BP_OnEntryGenerated; // 0x120
	FMulticastInlineDelegate BP_OnEntryReleased; // 0x130
	FUserWidgetPool EntryWidgetPool; // 0x140
};

struct UPrisonerBodyEffect_NotificationCooldown : UPrisonerBodyEffect {
	UNotificationDescription* _notificationClass; // 0x40
};

struct URunningSkill : UConstitutionSkill {
	FRunningSkillParametersPerSkillLevel NoSkillParameters; // 0xc0
	FRunningSkillParametersPerSkillLevel BasicSkillParameters; // 0xd0
	FRunningSkillParametersPerSkillLevel MediumSkillParameters; // 0xe0
	FRunningSkillParametersPerSkillLevel AdvancedSkillParameters; // 0xf0
};

struct UInAppPurchaseRestoreCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UWeaponAccuracyGroup : UDataAsset {
	float NormalStandFrom; // 0x30
	float NormalStandTo; // 0x34
	float NormalCrouchFrom; // 0x38
	float NormalCrouchTo; // 0x3c
	float NormalProneFrom; // 0x40
	float NormalProneTo; // 0x44
	float ScopedStandFrom; // 0x48
	float ScopedStandTo; // 0x4c
	float ScopedCrouchFrom; // 0x50
	float ScopedCrouchTo; // 0x54
	float ScopedProneFrom; // 0x58
	float ScopedProneTo; // 0x5c
};

struct UBakeTransformTool : UMultiSelectionTool {
	UBakeTransformToolProperties* BasicProperties; // 0x90
};

struct ATradePost : ATradeOutpostBuilding {
	TArray<FTraderMarker> _traderMarkers; // 0x380
	TArray<ATrader*> _spawnedTraders; // 0x390
	TMap<FDbIntegerId, FSpawnedDepotsHelperStruct> _spawnedDepots; // 0x3a0
};

struct UBruisingData : UDataAsset {
	TArray<FBruisePatch> Patches; // 0x30
};

struct UMusicPlayerDisplayWidget : UUserWidget {
	UImage* _shuffleImage; // 0x260
	UImage* _repeatImage; // 0x268
	UImage* _previousImage; // 0x270
	UImage* _pauseImage; // 0x278
	UImage* _playImage; // 0x280
	UImage* _nextImage; // 0x288
	UTextBlock* _songTitleText; // 0x290
	float _inactiveOpacity; // 0x298
	float _iconActivityDuration; // 0x29c
	float _trackNameDuration; // 0x2a0
	float _radioStationNameDuration; // 0x2a4
	float _trackNameOffsetStep; // 0x2a8
	float _trackNameOffsetPadding; // 0x2ac
	float _trackNameWaitingDuration; // 0x2b0
};

struct UForceFeedbackEffect : UObject {
	TArray<FForceFeedbackChannelDetails> ChannelDetails; // 0x28
	float Duration; // 0x38
};

struct UNetworkSettings : UDeveloperSettings {
	char bVerifyPeer : 1; // 0x38
	char bEnableMultiplayerWorldOriginRebasing : 1; // 0x38
	int32_t MaxRepArraySize; // 0x3c
	int32_t MaxRepArrayMemory; // 0x40
	TArray<FNetworkEmulationProfileDescription> NetworkEmulationProfiles; // 0x48
};

struct ULandscapeMeshCollisionComponent : ULandscapeHeightfieldCollisionComponent {
	FGuid MeshGuid; // 0x528
};

struct UMovieScenePropertySystem : UMovieSceneEntitySystem {
	UMovieScenePropertyInstantiatorSystem* InstantiatorSystem; // 0x40
};

struct UABP_ChristmasGhost_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_RefPose AnimGraphNode_LocalRefPose; // 0x2f8
	FAnimNode_Slot AnimGraphNode_Slot; // 0x310
};

struct UUI_Metabolism_Nutrition_C : UMetabolismNutritionPanel {
	UTextBlock* _energyTextBlock; // 0x278
	UTextBlock* _waterTextBlock; // 0x280
};

struct U590A1_Reload_Event_Chamber_C : UInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t LoadedAmmoCount; // 0xa8
	int32_t MaxAmmoCount; // 0xac
};

struct UTreeView : UListView {
	FDelegate BP_OnGetItemChildren; // 0x378
	FMulticastInlineDelegate BP_OnItemExpansionChanged; // 0x388
};

struct UAmmunitionBoneListAssetData : UAssetUserData {
	TArray<FName> CartridgeBoneNames; // 0x28
};

struct UPrisonerActionFillGameResourceContainerWithReplenishableResourceDescription : UPrisonerActionFillGameResourceContainerDescription {
	UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource; // 0x90
};

struct USquadPanelWidget : UUserWidget {
	int32_t squadRank; // 0x260
	int32_t squadIndex; // 0x264
	TArray<FString> SquadTopNames; // 0x268
	TArray<FString> SquadTopInformation; // 0x278
	TArray<FConZSquadEmblem> SquadTopEmblems; // 0x288
	TArray<float> SquadTopScore; // 0x298
	TArray<FString> SquadRankingNames; // 0x2a8
	TArray<FString> SquadRankingInformation; // 0x2b8
	TArray<FConZSquadEmblem> SquadRankingEmblems; // 0x2c8
	TArray<float> SquadRankingScore; // 0x2d8
	TArray<FDbIntegerId> MemberUserProfileIds; // 0x2e8
	TArray<FString> MemberNames; // 0x2f8
	TArray<EConZSquadMemberRank> MemberRanks; // 0x308
	TArray<float> MemberFamePoints; // 0x318
	TArray<bool> MemberOnline; // 0x328
};

struct UMaterialShaderQualitySettings : UObject {
	TMap<FName, UShaderPlatformQualitySettings*> ForwardSettingMap; // 0x28
};

struct UInterpTrackLinearColorBase : UInterpTrack {
	FInterpCurveLinearColor LinearColorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UWidgetSwitcher : UPanelWidget {
	int32_t ActiveWidgetIndex; // 0x120
};

struct UGizmoPlaneScaleParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float ScaleMultiplier; // 0xb0
	FVector2D Parameter; // 0xb4
	FGizmoVec2ParameterChange LastChange; // 0xbc
	FVector CurScaleOrigin; // 0xcc
	FVector CurScaleNormal; // 0xd8
	FVector CurScaleAxisX; // 0xe4
	FVector CurScaleAxisY; // 0xf0
	FTransform InitialTransform; // 0x100
};

struct UAnimal2MovementComponent : UConZCharacterMovementComponent {
	float GroundSlopeRotationSpeedDegrees; // 0xc18
	bool CorrectServerReceivedZ; // 0xc1c
};

struct APlanarReflection : ASceneCapture {
	UPlanarReflectionComponent* PlanarReflectionComponent; // 0x230
	bool bShowPreviewPlane; // 0x238
};

struct UVehicleMarkersResponse : UPlayerRpcChannelServerDataResponse {
	UVehicleMarkersData* _payload; // 0x28
};

struct UButtonStyleAsset : UObject {
	FButtonStyle ButtonStyle; // 0x28
};

struct UInputSettings : UObject {
	TArray<FInputAxisConfigEntry> AxisConfig; // 0x28
	char bAltEnterTogglesFullscreen : 1; // 0x38
	char bF11TogglesFullscreen : 1; // 0x38
	char bUseMouseForTouch : 1; // 0x38
	char bEnableMouseSmoothing : 1; // 0x38
	char bEnableFOVScaling : 1; // 0x38
	char bCaptureMouseOnLaunch : 1; // 0x38
	char bDefaultViewportMouseLock : 1; // 0x38
	char bAlwaysShowTouchInterface : 1; // 0x38
	char bShowConsoleOnFourFingerTap : 1; // 0x39
	char bEnableGestureRecognizer : 1; // 0x39
	bool bUseAutocorrect; // 0x3a
	TArray<FString> ExcludedAutocorrectOS; // 0x40
	TArray<FString> ExcludedAutocorrectCultures; // 0x50
	TArray<FString> ExcludedAutocorrectDeviceModels; // 0x60
	EMouseCaptureMode DefaultViewportMouseCaptureMode; // 0x70
	EMouseLockMode DefaultViewportMouseLockMode; // 0x71
	float FOVScale; // 0x74
	float DoubleClickTime; // 0x78
	TArray<FInputActionKeyMapping> ActionMappings; // 0x80
	TArray<FInputAxisKeyMapping> AxisMappings; // 0x90
	TArray<FInputActionSpeechMapping> SpeechMappings; // 0xa0
	TSoftClassPtr<UObject> DefaultPlayerInputClass; // 0xb0
	TSoftClassPtr<UObject> DefaultInputComponentClass; // 0xd8
	FSoftObjectPath DefaultTouchInterface; // 0x100
	FKey ConsoleKey; // 0x118
	TArray<FKey> ConsoleKeys; // 0x130
};

struct UInterpTrackInstDirector : UInterpTrackInst {
	AActor* OldViewTarget; // 0x28
};

struct UMaterialExpressionParameter : UMaterialExpression {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
};

struct UMaterialExpressionVirtualTextureFeatureSwitch : UMaterialExpression {
	FExpressionInput No; // 0x40
	FExpressionInput Yes; // 0x54
};

struct UParticleModuleAcceleration : UParticleModuleAccelerationBase {
	FRawDistributionVector Acceleration; // 0x38
	char bApplyOwnerScale : 1; // 0x80
};

struct UEnvQueryNode : UObject {
	int32_t VerNum; // 0x28
};

struct UPhysicsConstraintTemplate : UObject {
	FConstraintInstance DefaultInstance; // 0x28
	TArray<FPhysicsConstraintProfileHandle> ProfileHandles; // 0x1e8
	FConstraintProfileProperties DefaultProfile; // 0x1f8
};

struct UBoneMaskFilter : UObject {
	TArray<FInputBlendPose> BlendPoses; // 0x28
};

struct UMovieSceneActorReferenceSection : UMovieSceneSection {
	FMovieSceneActorReferenceData ActorReferenceData; // 0xe8
	FIntegralCurve ActorGuidIndexCurve; // 0x198
	TArray<FString> ActorGuidStrings; // 0x218
};

struct UBlackboardData : UDataAsset {
	UBlackboardData* Parent; // 0x30
	TArray<FBlackboardEntry> Keys; // 0x38
	char bHasSynchronizedKeys : 1; // 0x48
};

struct UAnimSharingAdditiveInstance : UAnimInstance {
	TWeakObjectPtr<USkeletalMeshComponent> BaseComponent; // 0x2b8
	TWeakObjectPtr<UAnimSequence> AdditiveAnimation; // 0x2c0
	float Alpha; // 0x2c8
	bool bStateBool; // 0x2cc
};

struct ABombDefusalMinigameBase : AMinigame {
	UStaticMeshComponent* _timeBomb; // 0x2e0
	UStaticMesh* _splineConnectorMesh; // 0x2e8
	FVector _wireButtonsSize; // 0x2f8
	USkeletalMeshComponent* _defusalTool; // 0x308
	float _toolMovementSensitivity; // 0x310
	FVector _minDefusingToolOffsetFromCenter; // 0x314
	FVector _maxDefusingToolOffsetFromCenter; // 0x320
	UMaterialInterface* _greenLedLight; // 0x330
	UMaterialInterface* _redLedLight; // 0x338
	UMaterialInterface* _yellowLedLight; // 0x340
	TArray<UStaticMeshComponent*> _ledLights; // 0x348
	UStaticMesh* _ledLightMesh; // 0x358
	UStaticMesh* _wireMesh; // 0x368
	TArray<EWireType> _wiresEndPositions; // 0x370
	TArray<FWireDescription> _wires; // 0x380
	TArray<FSplineDescription> _splines; // 0x3a0
	int32_t _numberOfWires; // 0x3c0
	int32_t _numberOfWirePoints; // 0x3c4
	int32_t _wiresShuffleIntensity; // 0x3c8
	int32_t _minWiresComplexity; // 0x3cc
	ESplineAxis _wiresForwardAxis; // 0x3d0
	float _wiresStartSmoothness; // 0x3d4
	float _wiresEndSmoothness; // 0x3d8
	float _wiresMiddleSmoothness; // 0x3dc
	float _wiresSharpCornerSmoothness; // 0x3e0
	float _maxSegmentSize; // 0x3e4
	float _wirePointsSpreadPositive; // 0x3e8
	float _wirePointsSpreadNegative; // 0x3ec
	float _wireHeight; // 0x3f0
	float _wireVerticalSpacing; // 0x3f4
	FVector _wirePointsOffset; // 0x3f8
	float _wireEndOffset; // 0x404
	FVector _additionalWireEndPointOffset; // 0x408
	UStaticMeshComponent* _cutWireSegment0; // 0x418
	UStaticMeshComponent* _cutWireSegment1; // 0x420
	UStaticMeshComponent* _cutWireSegment2; // 0x428
	UStaticMeshComponent* _cutWireSegment3; // 0x430
	UStaticMeshComponent* _cutWireSegment4; // 0x438
	UStaticMeshComponent* _cutWireSegment5; // 0x440
	UStaticMeshComponent* _uncutWireSegment0; // 0x448
	UStaticMeshComponent* _uncutWireSegment1; // 0x450
	UStaticMeshComponent* _uncutWireSegment2; // 0x458
	UStaticMeshComponent* _uncutWireSegment3; // 0x460
	UStaticMeshComponent* _uncutWireSegment4; // 0x468
	UStaticMeshComponent* _uncutWireSegment5; // 0x470
	UBoxComponent* _wireBox1; // 0x478
	UBoxComponent* _wireBox2; // 0x480
	UBoxComponent* _wireBox3; // 0x488
	UBoxComponent* _wireBox4; // 0x490
	UBoxComponent* _wireBox5; // 0x498
	UBoxComponent* _wireBox6; // 0x4a0
	UAkAudioEvent* _bombDefusalTimerStartSound; // 0x4a8
	UAkAudioEvent* _bombDefusalTimerStopSound; // 0x4b0
	UAkAudioEvent* _cutWireSound; // 0x4b8
	UAkAudioEvent* _bombDefusedSound; // 0x4c0
};

struct UFuelItemTag : UBaseItemTag {
	float FuelAmount; // 0x30
};

struct ADoubleRegularDoorDestructible : ADoubleDoor {
	FRotator _openRotation0; // 0x410
	FRotator _openRotation1; // 0x41c
	FRotator _closedRotation0; // 0x428
	FRotator _closedRotation1; // 0x434
};

struct UPrisonerBodyCondition_StomachFull : UPrisonerBodyCondition {
	float _stomachFullnessToExist; // 0xa8
	float _stomachFullnessToDie; // 0xac
	float _stomachFullnessToBeRecovered; // 0xb0
	float _stomachFullnessAtWhichToAutoCancelConsumptionOnce; // 0xb4
	float _stomachFullnessAtWhichToEnableAutoConsumptionCancelationAgain; // 0xb8
	float _minMaxStaminaModifierForFatigueSymptom; // 0xbc
	float _stomachFullnessAtWhichBurpingStarts; // 0xc0
	float _burpingInterval; // 0xc4
	UPrisonerBodySymptom_StomachFullness* _stomachFullnessSymptomClass; // 0xc8
	UPrisonerBodySymptomCause* _stomachFullnessSymptomCause; // 0xd0
	UPrisonerBodySymptom_Fatigue* _fatigueSymptomClass; // 0xe0
	UPrisonerBodySymptomCause_Fatigue* _fatigueSymptomCause; // 0xe8
	UPrisonerBodySymptom_Burping* _burpingSymptomClass; // 0xf8
	UPrisonerBodySymptomCause_Burping* _burpingSymptomCause; // 0x100
	UNotificationDescription* _stomachRuptureWarningNotificationClass; // 0x110
	UNotificationDescription* _stomachRuptureNotificationClass; // 0x118
};

struct UPrisonerFirstPersonSubviewComponent : UCameraComponent {
	EPrisonerFirstPersonSubview SubviewID; // 0x7c8
	float WeaponFOV; // 0x7cc
	FVector WeaponFoveationOffset; // 0x7d0
	float MinViewPitch; // 0x7dc
	float MaxViewPitch; // 0x7e0
	float MinViewYaw; // 0x7e4
	float MaxViewYaw; // 0x7e8
	UCurveLinearColor* MinMaxViewPitchByYawAndSpeed; // 0x7f0
	UCurveVector* LocalSpaceOffsetByYaw; // 0x7f8
	UCurveVector* LocalSpaceOffsetByPitch; // 0x800
	UCurveVector* ActorSpaceOffsetByYaw; // 0x808
	UCurveVector* ActorSpaceOffsetByPitch; // 0x810
	FName LockRotationToSocketAnimationCurveName; // 0x818
	FName LockRotationToSocketSocketName; // 0x820
	float ProbeSize; // 0x828
	ECollisionChannel ProbeChannel; // 0x82c
	bool DoCollisionTest; // 0x82d
	FName AnimationBobbingTXCurveName; // 0x830
	FName AnimationBobbingTYCurveName; // 0x838
	FName AnimationBobbingTZCurveName; // 0x840
	FName AnimationBobbingRYCurveName; // 0x848
	FName AnimationBobbingRPCurveName; // 0x850
	FName AnimationBobbingRRCurveName; // 0x858
	float AnimationBobbingTScale; // 0x860
	float AnimationBobbingRScale; // 0x864
	FName AnimationCameraOffsetTXCurveName; // 0x868
	FName AnimationCameraOffsetTYCurveName; // 0x870
	FName AnimationCameraOffsetTZCurveName; // 0x878
	FName AnimationCameraOffsetRYCurveName; // 0x880
	FName AnimationCameraOffsetRPCurveName; // 0x888
	FName AnimationCameraOffsetRRCurveName; // 0x890
	float AnimationCameraOffsetTScale; // 0x898
	float AnimationCameraOffsetRScale; // 0x89c
	float blendInDuration; // 0x8a0
	float blendOutDuration; // 0x8a4
	float _minFactorForPrisonerHiding; // 0x8a8
};

struct UPrisonerPhotoModeAnimInstance : UAnimInstance {
	float PoseBlendTime; // 0x2b8
	TArray<UAnimSequence*> _unarmedPoses; // 0x2c0
	TArray<UAnimSequence*> _riflePoses; // 0x2d0
	TArray<UAnimSequence*> _handgunPoses; // 0x2e0
	TArray<UAnimSequence*> _meleePoses; // 0x2f0
	TArray<UAnimSequence*> _lowerBodyPoses; // 0x300
	EPrisonerPhotoModePoseGroup _poseGroup; // 0x310
	float _spineCurvature; // 0x314
	float _spineRotation; // 0x318
	int32_t _upperBodyPoseIndex; // 0x31c
	int32_t _lowerBodyPoseIndex; // 0x320
	int32_t _lastUpperBodyPoseIndex; // 0x324
	int32_t _lastLowerBodyPoseIndex; // 0x328
	UAnimSequenceBase* _correctionPose; // 0x330
	float _upperBodyPoseBlendAlpha; // 0x338
	float _lowerBodyPoseBlendAlpha; // 0x33c
};

struct UQuickAccessItemSwitcher3 : UInventoryContainerWidget2 {
	int32_t Index; // 0x278
	UTextBlock* _nameText; // 0x280
	UInventorySlotUserWidget* _slotWidget; // 0x288
	UItemWidget2* _itemWidget; // 0x290
	UCheckBox* _throwingModeCheckbox; // 0x298
	FText _throwingModeCaption; // 0x2b8
	FText _throwingModeDescription; // 0x2d0
};

struct UVehicleSpawnerPreset : UObject {
	FVehicleSpawnerData SpawnerData; // 0x28
};

struct UMovieSceneCameraCutTrack : UMovieSceneNameableTrack {
	bool bCanBlend; // 0x78
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct UAdminCommandArgumentCompletion_Constant : UAdminCommandArgumentCompletion {
	TArray<FString> _completionValues; // 0x30
};

struct URemeshProperties : UMeshConstraintProperties {
	float SmoothingStrength; // 0x68
	bool bFlips; // 0x6c
	bool bSplits; // 0x6d
	bool bCollapses; // 0x6e
};

struct UProceduralShapeToolProperties : UInteractiveToolPropertySet {
	bool bInstanceIfPossible; // 0x60
	EMakeMeshPolygroupMode PolygroupMode; // 0x61
	EMakeMeshPlacementType PlaceMode; // 0x62
	bool bSnapToGrid; // 0x63
	EMakeMeshPivotLocation PivotLocation; // 0x64
	float Rotation; // 0x68
	bool bAlignShapeToPlacementSurface; // 0x6c
};

struct UARTrackedQRCode : UARTrackedImage {
	FString QRCode; // 0x108
	int32_t Version; // 0x118
};

struct UNiagaraDataInterfaceAudioPlayer : UNiagaraDataInterface {
	USoundBase* SoundToPlay; // 0x38
	USoundAttenuation* Attenuation; // 0x40
	USoundConcurrency* Concurrency; // 0x48
	TArray<FName> ParameterNames; // 0x50
	bool bLimitPlaysPerTick; // 0x60
	int32_t MaxPlaysPerTick; // 0x64
	bool bStopWhenComponentIsDestroyed; // 0x68
};

struct UMaterialExpressionConstant : UMaterialExpression {
	float R; // 0x40
};

struct UDoorUnlockItemComponentState : UItemComponentStateBase {
	UDoorUnlockData* DoorUnlockData; // 0x40
	int64_t ItemCreatedTimestamp; // 0x48
};

struct UPrisonerActionLoadAmmoIntoMagazine : UPrisonerAction {
	UItemActionSequenceLoadMagazine* _itemActionSequence; // 0x110
};

struct UMaterialExpressionDotProduct : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UAISenseConfig_Blueprint : UAISenseConfig {
	UAISense_Blueprint* Implementation; // 0x48
};

struct UDatasmithMaterialInstanceTemplate : UDatasmithObjectTemplate {
	TSoftObjectPtr<UMaterialInterface> ParentMaterial; // 0x30
	TMap<FName, float> ScalarParameterValues; // 0x58
	TMap<FName, FLinearColor> VectorParameterValues; // 0xa8
	TMap<FName, TSoftObjectPtr<UTexture>> TextureParameterValues; // 0xf8
	FDatasmithStaticParameterSetTemplate StaticParameters; // 0x148
};

struct UAnimNotify_PlaySoundBySurface : UAnimNotify {
	UAkAudioEvent* AudioEvent; // 0x38
	ECollisionChannel TraceChannel; // 0x40
};

struct ABP_Menu_Design_C : ABuilding {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	UParticleSystemComponent* Sparks3; // 0x330
	UParticleSystemComponent* Sparks2; // 0x338
	UParticleSystemComponent* Sparks1; // 0x340
	UParticleSystemComponent* Smoke4; // 0x348
	UParticleSystemComponent* Smoke3; // 0x350
	UParticleSystemComponent* Smoke2; // 0x358
	UParticleSystemComponent* Smoke1; // 0x360
	UChildActorComponent* SpotLight1; // 0x368
	UStaticMeshComponent* StaticMesh1; // 0x370
	UStaticMeshComponent* StaticMesh; // 0x378
	UStaticMeshComponent* SM_Monitor_LP_01; // 0x380
	UStaticMeshComponent* SM_Menu_Design_Fan_02; // 0x388
	UChildActorComponent* BP_Sliding_Doors_02; // 0x390
	UChildActorComponent* BP_Sliding_Doors_012; // 0x398
	UChildActorComponent* BP_Sliding_Doors_011; // 0x3a0
	UChildActorComponent* BP_Sliding_Doors_01; // 0x3a8
	USpotLightComponent* LightComponent024; // 0x3b0
	USpotLightComponent* LightComponent023; // 0x3b8
	USpotLightComponent* LightComponent019; // 0x3c0
	USpotLightComponent* LightComponent015; // 0x3c8
	USpotLightComponent* LightComponent013; // 0x3d0
	USpotLightComponent* LightComponent012; // 0x3d8
	USpotLightComponent* LightComponent011; // 0x3e0
	USpotLightComponent* LightComponent04; // 0x3e8
	USpotLightComponent* LightComponent01; // 0x3f0
	USpotLightComponent* LightComponent0; // 0x3f8
	UStaticMeshComponent* StaticMeshComponent0; // 0x400
	USceneComponent* SharedRoot; // 0x408
	float PrisonerMoveInsideTimeline_NewTrack_0_18E89A024149A17A3D64EEA95389DBF2; // 0x410
	ETimelineDirection PrisonerMoveInsideTimeline__Direction_18E89A024149A17A3D64EEA95389DBF2; // 0x414
	UTimelineComponent* PrisonerMoveInsideTimeline; // 0x418
	float YawAngle; // 0x420
	float RotationSpeed; // 0x424
	AActor* PrisonerHolder; // 0x428
	AActor* PrisonerHolderInitialLocationMarker; // 0x430
	AActor* PrisonerHolderFinalLocationMarker; // 0x438
	bool _isPrisonerInsideDoor; // 0x440
};

struct UPaperTileSet : UObject {
	FIntPoint TileSize; // 0x28
	UTexture2D* TileSheet; // 0x30
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FIntMargin BorderMargin; // 0x48
	FIntPoint PerTileSpacing; // 0x58
	FIntPoint DrawingOffset; // 0x60
	int32_t WidthInTiles; // 0x68
	int32_t HeightInTiles; // 0x6c
	int32_t AllocatedWidth; // 0x70
	int32_t AllocatedHeight; // 0x74
	TArray<FPaperTileMetadata> PerTileData; // 0x78
	TArray<FPaperTileSetTerrain> Terrains; // 0x88
	int32_t TileWidth; // 0x98
	int32_t TileHeight; // 0x9c
	int32_t Margin; // 0xa0
	int32_t Spacing; // 0xa4
};

struct UParticleModuleLocationEmitterDirect : UParticleModuleLocationBase {
	FName EmitterName; // 0x30
};

struct UItemActionDescriptionLoadMagazine : UItemActionSequenceDescription {
	int32_t RequestedAmmoCount; // 0x30
	AAmmunitionItem* ammoitem; // 0x38
	float PlayRate; // 0x40
};

struct UCurveFloat : UCurveBase {
	FRichCurve FloatCurve; // 0x30
	bool bIsEventCurve; // 0xb0
};

struct UVertexBrushSculptProperties : UInteractiveToolPropertySet {
	EMeshVertexSculptBrushType PrimaryBrushType; // 0x60
	EMeshSculptFalloffType PrimaryFalloffType; // 0x61
	bool bFreezeTarget; // 0x62
	bool bSmoothErases; // 0x63
};

struct UCombineMeshesTool : UMultiSelectionTool {
	UCombineMeshesToolProperties* BasicProperties; // 0x90
	UOnAcceptHandleSourcesProperties* HandleSourceProperties; // 0x98
};

struct ACullDistanceVolume : AVolume {
	TArray<FCullDistanceSizePair> CullDistances; // 0x258
	char bEnabled : 1; // 0x268
};

struct APaperSpriteActor : AActor {
	UPaperSpriteComponent* RenderComponent; // 0x220
};

struct UFieldSystemMetaDataIteration : UFieldSystemMetaData {
	int32_t Iterations; // 0xb0
};

struct UIpConnection : UNetConnection {
	float SocketErrorDisconnectDelay; // 0x1b40
};

struct UMaterialExpressionStaticBoolParameter : UMaterialExpressionParameter {
	char DefaultValue : 1; // 0x58
};

struct UGizmoUniformScaleParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float ScaleMultiplier; // 0x68
	FVector2D Parameter; // 0x6c
	FGizmoVec2ParameterChange LastChange; // 0x74
	FVector CurScaleOrigin; // 0x84
	FVector CurScaleNormal; // 0x90
	FVector CurScaleAxisX; // 0x9c
	FVector CurScaleAxisY; // 0xa8
	FTransform InitialTransform; // 0xc0
};

struct UBakeMeshAttributeMapsToolProperties : UInteractiveToolPropertySet {
	EBakeMapType MapType; // 0x60
	EBakeTextureResolution Resolution; // 0x64
	FString UVLayer; // 0x68
	TArray<FString> UVLayerNamesList; // 0x78
	bool bUseWorldSpace; // 0x88
	UTexture2D* Result; // 0x90
};

struct UMovieSceneParticleParameterTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct ADoubleSlidingDoorDestructible : ADoubleDoor {
	USceneComponent* ClosedPositionComponent0; // 0x410
	USceneComponent* ClosedPositionComponent1; // 0x418
	USceneComponent* OpenPositionComponent0; // 0x420
	USceneComponent* OpenPositionComponent1; // 0x428
};

struct UFoliageInstancedStaticMeshComponent : UHierarchicalInstancedStaticMeshComponent {
	FMulticastInlineDelegate OnInstanceTakePointDamage; // 0x670
	FMulticastInlineDelegate OnInstanceTakeRadialDamage; // 0x680
	FGuid GenerationGuid; // 0x690
};

struct UShaderPlatformQualitySettings : UObject {
	FMaterialQualityOverrides QualityOverrides[0x4]; // 0x28
};

struct UABP_Prisoner_WheelBarrow_C : UPrisonerAnimInstance_WheelBarrow {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3a0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_2; // 0x3b0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0x540
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x560
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x580
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x710
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x7f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x898
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x938
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0xa20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0xae0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0xb60
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0xc68
	FAnimNode_Root AnimGraphNode_Root; // 0xd70
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0xda0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0xe88
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0xfe0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x1008
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x1030
	FAnimNode_SpringBone AnimGraphNode_SpringBone_2; // 0x10d0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x11f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x1218
	FAnimNode_LegIK AnimGraphNode_LegIK; // 0x1238
	FAnimNode_SpringBone AnimGraphNode_SpringBone; // 0x1330
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x1458
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x14f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x1598
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x1618
};

struct UInputBehaviorSet : UObject {
	TArray<FBehaviorInfo> Behaviors; // 0x28
};

struct UUI_JournalObjectiveContainer_C : UJournalObjectiveContainer {
	UImage* _activateButtonBackground; // 0x340
	UImage* _background; // 0x348
	UImage* _descriptionBackground; // 0x350
	UImage* _dividerBottom; // 0x358
	UImage* _headerBackground; // 0x360
	UImage* _objectivesBg; // 0x368
	UImage* _resetButtonBackground; // 0x370
	UImage* _restartMissionButtonBackground; // 0x378
	UImage* _rewardsBackground; // 0x380
	UImage* _sectionBackground; // 0x388
	UImage* _untrackButtonBackground; // 0x390
};

struct ABP_ReplicatedExplosionEffectsActor_C : AReplicatedExplosionEffectsActor {
	USceneComponent* DefaultSceneRoot; // 0x2d0
};

struct UUI_CircularMenuSegment_C : UCircularMenuSegmentWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f0
};

struct UMaterialInstance : UMaterialInterface {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0x90
	UMaterialInterface* Parent; // 0xd0
	char bHasStaticPermutationResource : 1; // 0xd8
	char bOverrideSubsurfaceProfile : 1; // 0xd8
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xe0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xf0
	TArray<FTextureParameterValue> TextureParameterValues; // 0x100
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0x110
	TArray<FFontParameterValue> FontParameterValues; // 0x120
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0x130
	FStaticParameterSet StaticParameters; // 0x148
	FMaterialCachedParameters CachedLayerParameters; // 0x188
	TArray<UObject*> CachedReferencedTextures; // 0x328
};

struct USoundSimple : USoundBase {
	TArray<FSoundVariation> Variations; // 0x1b8
	USoundWave* SoundWave; // 0x1c8
};

struct UWorkPlaneProperties : UInteractiveToolPropertySet {
	bool bPropertySetEnabled; // 0x60
	bool bShowGizmo; // 0x61
	bool bSnapToGrid; // 0x62
	FVector position; // 0x64
	FQuat Rotation; // 0x70
};

struct UHandPanel3 : UDesignableUserWidget {
	UHandsHolstersWidget2* _handInventory; // 0x278
	UHandsHolstersWidget2* _holsterInventory0; // 0x280
	UHandsHolstersWidget2* _holsterInventory1; // 0x288
};

struct UGizmoPlaneTranslationParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	FVector2D Parameter; // 0xb0
	FGizmoVec2ParameterChange LastChange; // 0xb8
	FVector CurTranslationOrigin; // 0xc8
	FVector CurTranslationNormal; // 0xd4
	FVector CurTranslationAxisX; // 0xe0
	FVector CurTranslationAxisY; // 0xec
	FTransform InitialTransform; // 0x100
};

struct UMoveBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
};

struct UItemTooltip : UDesignableUserWidget {
	UItemTooltipPanel* _mainPanel; // 0x278
	UItemTooltipTab* _overviewPanels; // 0x280
	UItemTooltipTab* _additionalPanels; // 0x288
	UImage* _pageIndicatorBar; // 0x290
	UTextBlock* _expandHintText; // 0x298
	UGridPanel* _pageIndicatorGrid; // 0x2a0
};

struct UPrisonerActionMinigameDescription : UPrisonerActionDescription {
	UMinigameConfiguration* MinigameConfiguration; // 0x38
};

struct UPrisonerBodySymptom_NeedToDefecate : UPrisonerBodySymptom {
	FRuntimeFloatCurve _severityVsColonFullness; // 0xb8
};

struct UAkCallbackInfo : UObject {
	UAkComponent* AkComponent; // 0x28
};

struct USceneCaptureComponent : USceneComponent {
	ESceneCapturePrimitiveRenderMode PrimitiveRenderMode; // 0x1f8
	ESceneCaptureSource CaptureSource; // 0x1f9
	char bCaptureEveryFrame : 1; // 0x1fa
	char bCaptureOnMovement : 1; // 0x1fa
	bool bAlwaysPersistRenderingState; // 0x1fb
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenComponents; // 0x200
	TArray<AActor*> HiddenActors; // 0x210
	TArray<TWeakObjectPtr<UPrimitiveComponent>> ShowOnlyComponents; // 0x220
	TArray<AActor*> ShowOnlyActors; // 0x230
	float LODDistanceFactor; // 0x240
	float MaxViewDistanceOverride; // 0x244
	int32_t CaptureSortPriority; // 0x248
	bool bUseRayTracingIfEnabled; // 0x24c
	TArray<FEngineShowFlagsSetting> ShowFlagSettings; // 0x250
	FString ProfilingEventName; // 0x290
};

struct AArchVisCharacter : ACharacter {
	FString LookUpAxisName; // 0x4c8
	FString LookUpAtRateAxisName; // 0x4d8
	FString TurnAxisName; // 0x4e8
	FString TurnAtRateAxisName; // 0x4f8
	FString MoveForwardAxisName; // 0x508
	FString MoveRightAxisName; // 0x518
	float MouseSensitivityScale_Pitch; // 0x528
	float MouseSensitivityScale_Yaw; // 0x52c
};

struct UWeaponActionUnloadAmmoSequence : UWeaponAction {
	FBodyWeaponAnimation Animations; // 0x28
	bool CanBeInterrupted; // 0x38
};

struct UDefaultLevelSequenceInstanceData : UObject {
	AActor* TransformOriginActor; // 0x30
	FTransform TransformOrigin; // 0x40
};

struct UVariantObjectBinding : UObject {
	FString CachedActorLabel; // 0x28
	FSoftObjectPath ObjectPtr; // 0x38
	LazyObjectProperty LazyObjectPtr; // 0x50
	TArray<UPropertyValue*> CapturedProperties; // 0x70
	TArray<FFunctionCaller> FunctionCallers; // 0x80
};

struct AItemSpawnerVolume : AVolume {
	FItemLocation zone; // 0x258
	float ItemHealthMultiplier; // 0x268
	float ProbabilityMultiplier; // 0x26c
	float ExamineProbabilityMultiplier; // 0x270
};

struct UAITask : UGameplayTask {
	AAIController* OwnerController; // 0x68
};

struct UUI_Metabolism_BodyEffect_Big_ProgressBar_C : UMetabolismBodyEffectProgressBar {
	UImage* PaddedBackground; // 0x308
};

struct UStatisticsSubcategoryTab : UUserWidget {
	UTexture2D* _subcategoryIcon; // 0x278
	UImage* _tabSelectionImage; // 0x280
	UImage* _subcategoryImage; // 0x288
	UTexture2D* _selectedTabTexture; // 0x290
};

struct UCustomMeshGenerator : UWaterBodyGenerator {
	UStaticMeshComponent* MeshComp; // 0x28
};

struct UUserDefinedCaptureProtocol : UMovieSceneImageCaptureProtocolBase {
	UWorld* World; // 0x58
};

struct USoundSubmix : USoundSubmixWithParentBase {
	char bMuteWhenBackgrounded : 1; // 0x40
	TArray<USoundEffectSubmixPreset*> SubmixEffectChain; // 0x48
	USoundfieldEncodingSettingsBase* AmbisonicsPluginSettings; // 0x58
	int32_t EnvelopeFollowerAttackTime; // 0x60
	int32_t EnvelopeFollowerReleaseTime; // 0x64
	EGainParamMode GainMode; // 0x68
	float OutputVolume; // 0x6c
	float WetLevel; // 0x70
	float DryLevel; // 0x74
	FMulticastInlineDelegate OnSubmixRecordedFileDone; // 0x78
};

struct UAISense : UObject {
	float DefaultExpirationAge; // 0x28
	EAISenseNotifyType notifyType; // 0x2c
	char bWantsNewPawnNotification : 1; // 0x30
	char bAutoRegisterAllPawnsAsSources : 1; // 0x30
	UAIPerceptionSystem* PerceptionSystemInstance; // 0x38
};

struct ULiveLinkPreset : UObject {
	TArray<FLiveLinkSourcePreset> Sources; // 0x28
	TArray<FLiveLinkSubjectPreset> Subjects; // 0x38
};

struct UUI_GenericTooltip_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* BackgroundImage; // 0x268
	UExtendedRichTextBlock* DescriptionText; // 0x270
	UUI_Border_C* UI_Border_23; // 0x278
	FText TextFormat; // 0x280
	FSlateColor Color; // 0x298
	FTextBlockStyle TextStyle; // 0x2c0
};

struct UParticleModule : UObject {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMaterialExpressionCustom : UMaterialExpression {
	FString Code; // 0x40
	ECustomMaterialOutputType OutputType; // 0x50
	FString Description; // 0x58
	TArray<FCustomInput> Inputs; // 0x68
	TArray<FCustomOutput> AdditionalOutputs; // 0x78
	TArray<FCustomDefine> AdditionalDefines; // 0x88
	TArray<FString> IncludeFilePaths; // 0x98
};

struct UParticleModuleTypeDataRibbon : UParticleModuleTypeDataBase {
	int32_t MaxTessellationBetweenParticles; // 0x30
	int32_t SheetsPerTrail; // 0x34
	int32_t MaxTrailCount; // 0x38
	int32_t MaxParticleInTrailCount; // 0x3c
	char bDeadTrailsOnDeactivate : 1; // 0x40
	char bDeadTrailsOnSourceLoss : 1; // 0x40
	char bClipSourceSegement : 1; // 0x40
	char bEnablePreviousTangentRecalculation : 1; // 0x40
	char bTangentRecalculationEveryFrame : 1; // 0x40
	char bSpawnInitialParticle : 1; // 0x40
	ETrailsRenderAxisOption RenderAxis; // 0x44
	float TangentSpawningScalar; // 0x48
	char bRenderGeometry : 1; // 0x4c
	char bRenderSpawnPoints : 1; // 0x4c
	char bRenderTangents : 1; // 0x4c
	char bRenderTessellation : 1; // 0x4c
	float TilingDistance; // 0x50
	float DistanceTessellationStepSize; // 0x54
	char bEnableTangentDiffInterpScale : 1; // 0x58
	float TangentTessellationScalar; // 0x5c
};

struct UMorphTarget : UObject {
	USkeletalMesh* BaseSkelMesh; // 0x28
};

struct USoundNodeSwitch : USoundNode {
	FName IntParameterName; // 0x48
};

struct UVirtualTexturePoolConfig : UObject {
	int32_t DefaultSizeInMegabyte; // 0x28
	TArray<FVirtualTextureSpacePoolConfig> Pools; // 0x30
};

struct UPlaneCutOperatorFactory : UObject {
	UPlaneCutTool* CutTool; // 0x30
};

struct UNiagaraDataInterfaceNeighborGrid3D : UNiagaraDataInterfaceGrid3D {
	uint32_t MaxNeighborsPerCell; // 0x100
};

struct UMaterialExpressionConstantBiasScale : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Bias; // 0x54
	float Scale; // 0x58
};

struct UPrisonerLifeIndicatorsSprite : UUserWidget {
	UBreathingBarLungsWidget* _breathingBarLungsWidget; // 0x260
	UDualArcedProgressBar* _dualProgressBarBreathing; // 0x268
	UGradedArcedProgressBar* _gradedProgressBarActionDifficulty; // 0x270
	float _noiseInstigatedDelay; // 0x2dc
};

struct AStartLocation : APlayerStart {
	char TypeFlags; // 0x250
	bool IsDisabled; // 0x251
};

struct UBrushBuilder : UObject {
	FString BitmapFilename; // 0x28
	FString ToolTip; // 0x38
	char NotifyBadParams : 1; // 0x48
	TArray<FVector> Vertices; // 0x50
	TArray<FBuilderPoly> Polys; // 0x60
	FName Layer; // 0x70
	char MergeCoplanars : 1; // 0x78
};

struct UMovieSceneVectorSection : UMovieSceneSection {
	FMovieSceneFloatChannel Curves[0x4]; // 0xe8
	int32_t ChannelsUsed; // 0x368
};

struct UTraderForPlayerAndDepotItemResponse : UPlayerRpcChannelServerDataResponse {
	ATrader* _payload; // 0x28
};

struct AZombie2 : AConZCharacter {
	UNavigationInvokerComponent* _navigationInvokerComponent; // 0x7b0
	UHitReactComponent* _hitReactComponent; // 0x7b8
	UBaseInteractionComponent* _baseInteractionComponent; // 0x7c0
	TArray<FZombieMeshVariation2> _meshVariations; // 0x7c8
	TArray<FZombieRelaxedStanceVariation2> _relaxedStanceVariations; // 0x7d8
	TArray<FZombieCombatStanceVariation2> _combatStanceVariations; // 0x7e8
	FZombieTurnMontageDescription _turnMontageDescriptions[0x4]; // 0x7f8
	UAnimMontage* _gettingUpMontage; // 0x898
	TArray<UAnimMontage*> _intimidateMontages; // 0x8a0
	TArray<FZombieAttackDescription> _attacks; // 0x8b0
	FGameplayTag _hitReactType; // 0x8c0
	float _explosionDamageMultiplier; // 0x8c8
	float _ragdollHitImpulseStrengthPerUnitDamage; // 0x8cc
	float _minDynamicMovementBaseSpeedForRagdoll; // 0x8d0
	float _eyeViewPointOffset; // 0x8d4
	FName _centralBone; // 0x8d8
	float _collisionDamageMultiplierPerBodyPart[0xc]; // 0x8e0
	float _receivedDamageComboCooldown; // 0x910
	float _receivedMeleeHitComboCooldown; // 0x914
	float _inflictedMeleeHitComboCooldown; // 0x918
	float _minRagdollRecoveryTimeAfterKnockout; // 0x91c
	float _maxRagdollRecoveryTimeAfterKnockout; // 0x920
	float _minLandingImpactSpeedForDamage; // 0x924
	float _landingDamagePerImpactSpeed; // 0x928
	float _landingImpactSpeedForRagdoll; // 0x92c
	float _minRagdollRecoveryTimeAfterLanding; // 0x930
	float _maxRagdollRecoveryTimeAfterLanding; // 0x934
	ULandingEffects* _landingEffects; // 0x938
	float _corpseSearchDuration; // 0x940
	float _corpseMaxLifeTimeInMinutes; // 0x944
	float _destroyCorpseTimerInterval; // 0x948
	float _minDistanceToPlayerPawnOrSpectatorToDestroyCorpse; // 0x94c
	uint32_t _packedZombieVariationIndices; // 0x950
	float _hitPoints; // 0x954
	float _inflictedMeleeDamageMultiplier; // 0x958
	float _health; // 0x95c
	bool _isSearched; // 0x960
	EZombieStance _stance; // 0x962
	TWeakObjectPtr<APawn> _foe; // 0x964
	float _inflictedDamageMultiplierConfig; // 0x9e8
	EBodyPart _fatalBodyPartHit; // 0x9ec
	float _drownDamageCycleLength; // 0x9f0
	float _drownDamagePerCycle; // 0x9f4
};

struct UPrisonerBodySimulationSave : UObject {
	double BaseStrength; // 0x28
	double BaseConstitution; // 0x30
	double BaseDexterity; // 0x38
	double BaseIntelligence; // 0x40
	double LifeTimeSinceInitialization; // 0x48
	double LifeTimeSinceSpawn; // 0x50
	int64_t TimeOfDeath; // 0x58
	int64_t TimeOfRevive; // 0x60
	int64_t TimeOfComa; // 0x68
	int64_t TimeOfComaWakeUp; // 0x70
	float Stamina; // 0x78
	float HeartRate; // 0x7c
	float BreathingRate; // 0x80
	float OxygenSaturation; // 0x84
	float BodyTemperature; // 0x88
	TArray<FPrisonerBodyEffectSave> BodyEffects; // 0x90
	TArray<char> Metabolism; // 0xa0
};

struct UBP_ConZGameInstance_C : UConZGameInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3a8
};

struct UDropdownMenuSelectionWidget : UUserWidget {
	FDelegate OnClicked; // 0x260
	FDelegate OnUpdated; // 0x270
	bool Selected; // 0x280
	int32_t SelectionIndex; // 0x284
	bool option; // 0x288
	UDropdownMenuWidget* _dropdownMenu; // 0x290
};

struct UWidgetAnimationDelegateBinding : UDynamicBlueprintBinding {
	TArray<FBlueprintWidgetAnimationDelegateBinding> WidgetAnimationDelegateBindings; // 0x28
};

struct AItem : AActor {
	FMulticastInlineDelegate DebugTextChanged; // 0x2b0
	FMulticastInlineDelegate PickedUpState; // 0x2c0
	FMulticastInlineDelegate OnStaticMeshChanged; // 0x2d0
	FMulticastInlineDelegate OnSkeletalMeshChanged; // 0x2e0
	UStaticMeshComponent* Mesh; // 0x300
	UThrowingComponent* ThrowingComponent; // 0x328
	FText _caption; // 0x330
	FText _description; // 0x348
	int32_t _uses; // 0x360
	float _health; // 0x364
	float _maxHealth; // 0x368
	float _defaultMaxHealth; // 0x36c
	float _weight; // 0x370
	float _initialWeightUsed; // 0x374
	float _maxWaterWeightAsRatioOfWeight; // 0x378
	UChoppingRecipeDataAsset* _choppingRecipeDataAsset; // 0x380
	bool _shouldBeMaintained; // 0x388
	bool _canBeDropped; // 0x389
	bool _canBeVisibleInVicinity; // 0x38a
	bool _canPlaceItemsOn; // 0x38b
	USkeletalMesh* _overrideSkeletalMesh; // 0x390
	FTransform _overrideSkeletalMeshRelativeTransform; // 0x3a0
	EItemExhausted _ifExhausted; // 0x3d0
	float _resourceAmountUsedPerWash; // 0x3d4
	UTexture2D* _inventoryIcon; // 0x3d8
	UTexture2D* _inventoryIconInHands; // 0x3e0
	UTexture2D* _outsideInventoryIcon; // 0x3e8
	uint32_t _sizeX; // 0x3f0
	uint32_t _sizeY; // 0x3f4
	TArray<UBaseItemTag*> _inventoryWhiteList; // 0x3f8
	TArray<UBaseItemTag*> _inventoryBlackList; // 0x408
	float _maxContainedWeight; // 0x418
	bool _canContainNonEmptyItems; // 0x41c
	bool _isIgnoredBySpawners; // 0x41d
	FFloatInterval _spawnTimeoutPerPlayer; // 0x420
	FItemLocation _itemLocation; // 0x428
	EItemRarity _rarity; // 0x436
	FGameplayTagContainer _itemSpawnTypes; // 0x438
	FGameplayTag _itemSpawnGroup; // 0x458
	FVector _spawnLocationOffset; // 0x460
	FRotator _spawnRotationOffset; // 0x46c
	float _spawnRotationRandomization; // 0x478
	bool _shouldOverrideUsageWhenSpawnedBySpawners; // 0x47c
	float _initialUsageWhenSpawnedBySpawners; // 0x480
	float _randomizeUsageWhenSpawnedBySpawners; // 0x484
	TArray<UBaseItemTag*> _itemTags; // 0x488
	TArray<UBaseItemTag*> _ownedItemTags; // 0x498
	ENoiseLevel _noiseLevel; // 0x4a8
	FItemMotionNoise _motionNoise; // 0x4b0
	UAkAudioEvent* _inventoryHandlingSound; // 0x4b8
	UAkAudioEvent* _destroyedSound; // 0x4c0
	EInteractionType _craftingInteraction; // 0x4c8
	TArray<FCraftingPart> _defaultCraftingParts; // 0x4d0
	float _damageOnUse; // 0x4e0
	float _damageOverTime; // 0x4e4
	float _autoDestructTime; // 0x4e8
	bool _allowContainedItemsDecay; // 0x4ec
	bool _shouldDestroyContainedItemsOnDestroyEvent; // 0x4f4
	float _minTemperatureForHeatDamage; // 0x4f8
	float _containedDamageStartPercentage; // 0x4fc
	float _damageResponseFactor; // 0x500
	UAttachmentSocketMountType* _attachmentSocketMountType; // 0x508
	TArray<FAttachmentSocket> _attachmentSockets; // 0x510
	UAttachmentSocketMountType* _holsterAttachmentSocketMountType; // 0x520
	TMap<UAttachmentSocketMountType*, FAttachmentSocketOffset> _attachmentSocketsOffset; // 0x528
	bool _enableGlowOnBeginPlay; // 0x578
	bool _enableAwarenessGlow; // 0x579
	bool _enableHoverGlow; // 0x57a
	UStaticMesh* _placementMeshOverride; // 0x580
	UStaticMesh* _staticMeshHolsterOverride; // 0x588
	USkeletalMesh* _skeletalMeshHolsterOverride; // 0x590
	bool _hasHighLoadPriorityInVirtualization; // 0x598
	float _virtualizationDistanceOffset; // 0x59c
	bool _canEverBeVirtualized; // 0x5a0
	bool _isSubjectToAllowMinesConfig; // 0x5a2
	float _resultHealthMultiplierWhenCraftingIngredient; // 0x5a4
	float _preferredDamagePerUpdate; // 0x5a8
	FGuid _itemUniqueIdOverride; // 0x5ac
	bool _useHandCorrections; // 0x5bc
	float _vicinityCheckDistance; // 0x5c0
	TArray<UObject*> _stackableClasses; // 0x5c8
	int32_t _maxNumOfStacks; // 0x5d8
	float _bloodDryingSpeed; // 0x5dc
	FItemStackData _stackData; // 0x5e0
	TArray<UItemStateBase*> _craftingPartsData; // 0x5f8
	USkeletalMeshComponent* _skeletalMeshComponent; // 0x610
	float _weightUsed; // 0x61c
	FDbIntegerId _entityId; // 0x620
	FGuid _itemUniqueId; // 0x628
	TArray<UItemComponent*> _itemComponents; // 0x668
	AActor* _attachParentObject; // 0x678
	FVisibilityReplication _visibilityReplication; // 0x680
	float _uncraftTime; // 0x6c4
	uint64_t _replicatedState; // 0x6c8
	char _flagsReplicated; // 0x6d1
	USceneComponent* _tempSceneComponent; // 0x6f8
	int64_t _expirationTime; // 0x708
	TArray<FInventoryStackData> _stacks; // 0x710
	AItem* _stackExhaustedSuccessorItem; // 0x720
	TScriptInterface<IInventoryContainer> _parentContainer; // 0x728
	TScriptInterface<IInventoryNode> _parentInventoryNode; // 0x738
	TArray<FCraftingPart> _craftingParts; // 0x778
};

struct A1H_Wooden_club_with_wire_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f0
};

struct UBP_M1_OpenInsertClipInsertBulletLoop_C : UInsertMagazineInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t LoadedAmmoCount; // 0xa8
};

struct UTemplateSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
	TSoftClassPtr<UObject> BoundActorClass; // 0x68
	TSoftObjectPtr<AActor> BoundPreviewActor; // 0x90
	TMap<FGuid, FName> BoundActorComponents; // 0xb8
};

struct ASceneCaptureCube : ASceneCapture {
	USceneCaptureComponentCube* CaptureComponentCube; // 0x230
};

struct ATriggerBase : AActor {
	UShapeComponent* CollisionComponent; // 0x220
};

struct ASpectatorBeaconClient : AOnlineBeaconClient {
	FString DestSessionId; // 0x2e0
	FSpectatorReservation PendingReservation; // 0x2f0
	ESpectatorClientRequestType RequestType; // 0x368
	bool bPendingReservationSent; // 0x369
	bool bCancelReservation; // 0x36a
};

struct UNavLinkComponent : UPrimitiveComponent {
	TArray<FNavigationLink> Links; // 0x450
};

struct AWeaponScope_POSP_C : AWeaponAttachmentScope {
	UDummyCollisionCapsule* ScopeViewCollision; // 0x950
};

struct UDynamicEntryBox : UDynamicEntryBoxBase {
	UUserWidget* EntryWidgetClass; // 0x1d8
};

struct UMaterialExpressionDistanceToNearestSurface : UMaterialExpression {
	FExpressionInput position; // 0x40
};

struct UEraseBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct AConZWaterSpline : AActor {
	USceneComponent* SceneComponent; // 0x220
	USplineComponent* SplineComponent; // 0x228
	UStaticMeshComponent* SurfaceMeshComponent; // 0x230
	UStaticMeshComponent* SubsurfaceMeshComponent; // 0x238
	bool DrawDebug; // 0x240
	int32_t SelectRangeStart; // 0x244
	int32_t SelectRangeEnd; // 0x248
	bool SelectRange; // 0x24c
	bool FlattenZ; // 0x24d
	TArray<FConZWaterSplineControlPoint> ControlPoints; // 0x250
	float MaxDepth; // 0x260
	UStaticMesh* SurfaceMesh; // 0x268
	UStaticMesh* SubsurfaceMesh; // 0x270
	UMaterialInterface* SurfaceMeshMaterialOverride; // 0x278
	UMaterialInterface* SubsurfaceMeshMaterialOverride; // 0x280
	UMaterialInterface* UnderwaterPostProcessing; // 0x288
	TArray<UAssetUserData*> SurfaceMeshUserData; // 0x290
	TArray<FConZGerstnerWavesParameters> GerstnerWavesParameters; // 0x2a0
};

struct UDepotItemForPlayerAndTraderResponse : UPlayerRpcChannelServerDataResponse {
	ADepotItem* _payload; // 0x28
};

struct ANavMeshBoundsVolume : AVolume {
	FNavAgentSelector SupportedAgents; // 0x258
};

struct UVRNotificationsComponent : UActorComponent {
	FMulticastInlineDelegate HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate; // 0xb0
	FMulticastInlineDelegate HMDTrackingInitializedDelegate; // 0xc0
	FMulticastInlineDelegate HMDRecenteredDelegate; // 0xd0
	FMulticastInlineDelegate HMDLostDelegate; // 0xe0
	FMulticastInlineDelegate HMDReconnectedDelegate; // 0xf0
	FMulticastInlineDelegate HMDConnectCanceledDelegate; // 0x100
	FMulticastInlineDelegate HMDPutOnHeadDelegate; // 0x110
	FMulticastInlineDelegate HMDRemovedFromHeadDelegate; // 0x120
	FMulticastInlineDelegate VRControllerRecenteredDelegate; // 0x130
};

struct UEnvQueryInstanceBlueprintWrapper : UObject {
	int32_t QueryID; // 0x30
	UEnvQueryItemType* ItemType; // 0x58
	int32_t OptionIndex; // 0x60
	FMulticastInlineDelegate OnQueryFinishedEvent; // 0x68
};

struct UPrisonerRestingComponent : UCharacterActionComponent {
	FPrisonerRestingData _restingData; // 0xc0
	FPrisonerRestingDataAutonomous _restingDataAutonomous; // 0xd0
};

struct UMetabolismRightPanel : UUserWidget {
	UMetabolismNutritionPanel* _nutritionPanel; // 0x260
	UMetabolismMacronutrientReservesPanel* _macronutrientReservesPanel; // 0x268
	UMetabolismBodyReservesPanel* _bodyReservesPanel; // 0x270
	UMetabolismVitaminsPanel* _vitaminsPanel; // 0x278
	UMetabolismMineralsPanel* _mineralsPanel; // 0x280
	UMetabolismDigestionPanel* _digestionPanel; // 0x288
};

struct UPropertyBinding : UObject {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UBP_M1_OpenInsertClip_C : UInsertMagazine {
	FPointerToUberGraphFrame UberGraphFrame; // 0x90
};

struct UDialogueContainerWidget : UUserWidget {
	USubtitleWidget* _subtitleWidget; // 0x260
	UOverlay* _avatarImageOverlay; // 0x268
	UTextBlock* _actionText; // 0x270
};

struct UBP_BlackHawk_Unload_C : URemoveCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0x58
};

struct UTabGroup : UUserWidget {
	UPanelWidget* _tabPanel; // 0x290
	EUINavigation _previous; // 0x298
	EUINavigation _next; // 0x299
	EUINavigation _in; // 0x29a
	bool _canWrap; // 0x29b
	EHorizontalAlignment _tabHorizontalAlignment; // 0x29c
	EVerticalAlignment _tabVerticalAlignment; // 0x29d
};

struct UEnvQueryTest_Trace : UEnvQueryTest {
	FEnvTraceData TraceData; // 0x1f8
	FAIDataProviderBoolValue TraceFromContext; // 0x228
	FAIDataProviderFloatValue ItemHeightOffset; // 0x260
	FAIDataProviderFloatValue ContextHeightOffset; // 0x298
	UEnvQueryContext* Context; // 0x2d0
};

struct UClearBadRound : UWeaponActionClearMalfunctionSequence {
	FName MontageEndSectionName; // 0xb8
};

struct UMovieSceneCapture : UObject {
	FSoftClassPath ImageCaptureProtocolType; // 0x38
	FSoftClassPath AudioCaptureProtocolType; // 0x50
	UMovieSceneImageCaptureProtocolBase* ImageCaptureProtocol; // 0x68
	UMovieSceneAudioCaptureProtocolBase* AudioCaptureProtocol; // 0x70
	FMovieSceneCaptureSettings Settings; // 0x78
	bool bUseSeparateProcess; // 0xe8
	bool bCloseEditorWhenCaptureStarts; // 0xe9
	FString AdditionalCommandLineArguments; // 0xf0
	FString InheritedCommandLineArguments; // 0x100
};

struct AWindDirectionalSource : AInfo {
	UWindDirectionalSourceComponent* Component; // 0x220
};

struct UUniformInteger : UFieldNodeInt {
	int32_t Magnitude; // 0xb0
};

struct UUI_HandsHolstersWidget3_C : UHandsHolstersWidget2 {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e8
	UUI_Border_C* AddonsHighlightBorder; // 0x2f0
	UTextBlock* AmmoTypeText; // 0x2f8
	UImage* ExtraSlotBackground; // 0x300
	UOverlay* ExtraSlotsOverlay; // 0x308
	UGridPanel* GridPanel; // 0x310
	UUI_Border_C* HighlightBorder; // 0x318
	UImage* Image_1; // 0x320
	UImage* Image_2; // 0x328
	UImage* MainExtraSlotImage; // 0x330
	UTextBlock* SlotTypeText; // 0x338
	FText SlotName; // 0x340
};

struct UMasterAudioSubmixCaptureProtocol : UMovieSceneAudioCaptureProtocolBase {
	FString Filename; // 0x58
};

struct UParticleModuleColorScaleOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorScaleOverLife; // 0x30
	FRawDistributionFloat AlphaScaleOverLife; // 0x78
	char bEmitterTime : 1; // 0xa8
};

struct UFloatingPawnMovement : UPawnMovementComponent {
	float MaxSpeed; // 0x138
	float Acceleration; // 0x13c
	float Deceleration; // 0x140
	float TurningBoost; // 0x144
	char bPositionCorrected : 1; // 0x148
};

struct UFortificationCraftableItem : UPlaceableCraftableItem {
	UObject* FortificationClass; // 0x1e0
	UTexture2D* Icon; // 0x1e8
	FText Caption; // 0x1f0
	FText Description; // 0x208
};

struct UCheatManager : UObject {
	ADebugCameraController* DebugCameraControllerRef; // 0x28
	ADebugCameraController* DebugCameraControllerClass; // 0x30
};

struct UBrushComponent : UPrimitiveComponent {
	UModel* Brush; // 0x448
	UBodySetup* BrushBodySetup; // 0x450
};

struct UStreamingSettings : UDeveloperSettings {
	char AsyncLoadingThreadEnabled : 1; // 0x38
	char WarnIfTimeLimitExceeded : 1; // 0x38
	float TimeLimitExceededMultiplier; // 0x3c
	float TimeLimitExceededMinTime; // 0x40
	int32_t MinBulkDataSizeForAsyncLoading; // 0x44
	char UseBackgroundLevelStreaming : 1; // 0x48
	char AsyncLoadingUseFullTimeLimit : 1; // 0x48
	float AsyncLoadingTimeLimit; // 0x4c
	float PriorityAsyncLoadingExtraTime; // 0x50
	float LevelStreamingActorsUpdateTimeLimit; // 0x54
	float PriorityLevelStreamingActorsUpdateExtraTime; // 0x58
	int32_t LevelStreamingComponentsRegistrationGranularity; // 0x5c
	float LevelStreamingUnregisterComponentsTimeLimit; // 0x60
	int32_t LevelStreamingComponentsUnregistrationGranularity; // 0x64
	char FlushStreamingOnExit : 1; // 0x68
	char EventDrivenLoaderEnabled : 1; // 0x68
};

struct USphereReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadius; // 0x270
	float CaptureDistanceScale; // 0x274
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x278
};

struct UPlayer : UObject {
	APlayerController* PlayerController; // 0x30
	int32_t CurrentNetSpeed; // 0x38
	int32_t ConfiguredInternetSpeed; // 0x3c
	int32_t ConfiguredLanSpeed; // 0x40
};

struct UCustomZoneSettingsColorPicker : UUserWidget {
	UButton* _button0; // 0x270
	UButton* _button1; // 0x278
	UButton* _button2; // 0x280
	UButton* _button3; // 0x288
	UButton* _button4; // 0x290
	UButton* _button5; // 0x298
	UButton* _button6; // 0x2a0
	UButton* _button7; // 0x2a8
	UGridPanel* _border0; // 0x2b0
	UGridPanel* _border1; // 0x2b8
	UGridPanel* _border2; // 0x2c0
	UGridPanel* _border3; // 0x2c8
	UGridPanel* _border4; // 0x2d0
	UGridPanel* _border5; // 0x2d8
	UGridPanel* _border6; // 0x2e0
	UGridPanel* _border7; // 0x2e8
};

struct USelfUnionMeshesTool : UBaseCreateFromSelectedTool {
	USelfUnionMeshesToolProperties* Properties; // 0xf0
	ULineSetComponent* DrawnLineSet; // 0xf8
};

struct UNiagaraDataInterfaceVectorCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
	FRichCurve ZCurve; // 0x170
};

struct UUI_GameEventParticipantInfoCardWidget_C : UGameEventParticipantInfoCardWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UTextBlock* Assists; // 0x280
	UImage* Avatar; // 0x288
	UTextBlock* Deaths; // 0x290
	UTextBlock* FameLevel; // 0x298
	UTextBlock* Headshots; // 0x2a0
	UTextBlock* Kills; // 0x2a8
	UTextBlock* Name; // 0x2b0
	UTextBlock* ping; // 0x2b8
	UTextBlock* Revenges; // 0x2c0
	UTextBlock* SteamID; // 0x2c8
	ABP_Prisoner_C* Prisoner; // 0x2d0
};

struct USoundGroups : UObject {
	TArray<FSoundGroup> SoundGroupProfiles; // 0x28
};

struct USCS_Node : UObject {
	UObject* ComponentClass; // 0x28
	UActorComponent* ComponentTemplate; // 0x30
	FBlueprintCookedComponentInstancingData CookedComponentInstancingData; // 0x38
	FName AttachToName; // 0x80
	FName ParentComponentOrVariableName; // 0x88
	FName ParentComponentOwnerClassName; // 0x90
	bool bIsParentComponentNative; // 0x98
	TArray<USCS_Node*> ChildNodes; // 0xa0
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0xb0
	FGuid VariableGuid; // 0xc0
	FName InternalVariableName; // 0xd0
};

struct UMovieSceneEventSection : UMovieSceneSection {
	FNameCurve Events; // 0xe8
	FMovieSceneEventSectionData eventData; // 0x160
};

struct UCullingField : UFieldNodeBase {
	UFieldNodeBase* Culling; // 0xb0
	UFieldNodeBase* Field; // 0xb8
	EFieldCullingOperationType Operation; // 0xc0
};

struct UMetabolismContainerSetDisplayPanel : UUserWidget {
	UTabGroup* _containerButtons; // 0x290
	UMetabolismLightItemDisplayPanel* _containerContents; // 0x298
	UContainerDisplay* _containerButtonClass; // 0x2a0
	float _interChildDistrance; // 0x2a8
};

struct USkeletalMeshSimplificationSettings : UDeveloperSettings {
	FName SkeletalMeshReductionModuleName; // 0x38
};

struct UAISense_Hearing : UAISense {
	TArray<FAINoiseEvent> NoiseEvents; // 0x80
	float SpeedOfSoundSq; // 0x90
};

struct UPrisonerThrowComponent : UCharacterActionComponent {
	EThrowingState _throwingState; // 0xc0
	TWeakObjectPtr<AItem> _itemToThrow; // 0xc4
};

struct UConZVehicle4WPassengerMountSlot : UConZVehicle4WMountSlot {
	UBlendSpace* _idleAnimation; // 0x150
};

struct UPaperRuntimeSettings : UObject {
	bool bEnableSpriteAtlasGroups; // 0x28
	bool bEnableTerrainSplineEditing; // 0x29
	bool bResizeSpriteDataToMatchTextures; // 0x2a
};

struct AFishingRod : AItem {
	FMulticastInlineDelegate AttachmentAdded; // 0x7c0
	FMulticastInlineDelegate AttachmentRemoved; // 0x7d0
	USkeletalMeshComponent* SkeletalMesh; // 0x7e0
	float FishingAreaRadius; // 0x7e8
	APrisoner* _fishingRodOwner; // 0x7f0
	TArray<AFishingAttachment*> _fishingAttachmentsReplicated; // 0x810
	float _reelingAmount; // 0x820
	UFishSpeciesData* _fishSpeciesData; // 0x870
	AItem* _minigameCaughtItem; // 0x8f0
	AFishingTrophyActor* _minigameTrophyActor; // 0x8f8
	bool _isInTrophyState; // 0x901
	float _floaterSimulatedWeight; // 0x908
	float _floaterSimulatedWeightDuringFastReeling; // 0x90c
	float _shortCastingPower; // 0x910
	float _minCastingPower; // 0x914
	float _maxCastingPower; // 0x918
	float _safeAreaRadius; // 0x91c
	float _fishNotBitingAreaRadius; // 0x920
	float _minigameSafeAreaRadius; // 0x924
	float _baseReelingSpeed; // 0x928
	float _fastReelingSpeed; // 0x92c
	float _defaultWaterVelocityMultiplier; // 0x930
	float _shortCastingAngle; // 0x934
	float _longCastingAngle; // 0x938
	float _fishingLineTensionToHookThreshold; // 0x93c
	FTransform _caughtFishOffsetTransform; // 0x940
	AFishingTrophyActor* _trophyActorClass; // 0x970
	float _sendStateInterval; // 0x978
	float _fishIdleTimeAtStart; // 0x9f0
	float _fishStruggleOffsetAmplitude; // 0x9f4
	float _fishStruggleOffsetPeriod; // 0x9f8
	float _minDistanceToApplyStruggleOffset; // 0x9fc
	float _fishToSurfaceRadius; // 0xa00
	float _fishGenericSpeed; // 0xa04
	float _minFishDirectionChangeTime; // 0xa08
	float _maxFishDirectionChangeTime; // 0xa0c
	float _fishDrainStaminaModifier; // 0xa10
	float _fishRecoveryStaminaModifier; // 0xa14
	float _lineBreakConstant; // 0xa18
	float _reelingTensionModifier; // 0xa1c
	float _fishRecoveryRadiusBuffer; // 0xa20
	float _fishUnderWaterSurfaceOffset; // 0xa24
	float _fishStrengthModifier; // 0xa28
	float _fishingBoundsAngle; // 0xa2c
	float _fishingBoundsRadius; // 0xa30
	float _fishingLineInTensionDamageAmount; // 0xa34
	float _fishingLineOnBreakDamageAmount; // 0xa38
	float _fishStuckTimeThreshold; // 0xa3c
	float _fishNewDirectionAngleStep; // 0xa40
	bool _useRodAsRootLocation; // 0xa44
	UAkAudioEvent* _castingObjectDropToWaterAudioEvent; // 0xa48
	UAkAudioEvent* _fishHookedAudioEvent; // 0xa50
	UAkAudioEvent* _wireBreakAudioEvent; // 0xa58
	UAkAudioEvent* _wireTensionStartAudioEvent; // 0xa60
	UAkAudioEvent* _wireTensionEndAudioEvent; // 0xa68
	float _castPower; // 0xa70
	bool _shouldShortCast; // 0xa74
	float _minFishRecoveryTime; // 0xa84
	float _maxFishRecoveryTime; // 0xa88
	float _minFishStaminaDrainTime; // 0xa8c
	float _maxFishStaminaDrainTime; // 0xa90
	bool _randomFishDrainAndRecovery; // 0xa94
	bool _isFastReeling; // 0xa9c
};

struct UBaseItemContainerWidget : UDesignableUserWidget {
	FMulticastInlineDelegate ObjectAddedToContainer; // 0x278
	int32_t Columns; // 0x28c
	int32_t Rows; // 0x290
	UGridPanel* GridPanel; // 0x298
	UUserWidget* HighlightBorder; // 0x2a0
};

struct UGrenadeAnimInstance : UAnimInstance {
	EPrisonerStance _owningPrisonerStance; // 0x2c0
	bool _isOwningPrisonerInFirstPersonView; // 0x2c1
	bool _isPinPulled; // 0x2c2
};

struct UDatasmithImportOptions : UDatasmithOptionsBase {
	EDatasmithImportSearchPackagePolicy SearchPackagePolicy; // 0x28
	EDatasmithImportAssetConflictPolicy MaterialConflictPolicy; // 0x29
	EDatasmithImportAssetConflictPolicy TextureConflictPolicy; // 0x2a
	EDatasmithImportActorPolicy StaticMeshActorImportPolicy; // 0x2b
	EDatasmithImportActorPolicy LightImportPolicy; // 0x2c
	EDatasmithImportActorPolicy CameraImportPolicy; // 0x2d
	EDatasmithImportActorPolicy OtherActorImportPolicy; // 0x2e
	EDatasmithImportMaterialQuality MaterialQuality; // 0x2f
	FDatasmithImportBaseOptions BaseOptions; // 0x34
	FDatasmithReimportOptions ReimportOptions; // 0x48
	FString Filename; // 0x50
	FString FilePath; // 0x60
};

struct UDedicatedServerResponse : UObject {
	UDbConnection* _dbConnection; // 0x58
};

struct UExamineAssetData : UInteractionAssetData {
	FExamineItemSpawnerData ExamineData; // 0x30
	UAkAudioEvent* StartExamineAudioEvent; // 0xe0
	UAkAudioEvent* StopExamineAudioEvent; // 0xe8
	ENoiseLevel noiseLevel; // 0xf0
	bool CanStore; // 0xf1
	bool CanSave; // 0xf2
	bool HasCustomExpirationTime; // 0xf3
	FText Title; // 0xf8
};

struct UItemRackSlotComponent : USceneComponent {
	AItem* _placedItem; // 0x200
	TArray<UPlaceableOnRackItemTag*> _acceptableTags; // 0x210
	UAkAudioEvent* _placeItemAudioEvent; // 0x220
};

struct UWashClothesData : UDataAsset {
	TMap<AItem*, FWashItemData> WashClothes; // 0x30
	USkill* SkillToIncrease; // 0x80
	float SkillIncreaseAmount; // 0x88
	float SkillIncreaseModifier; // 0x8c
};

struct ABP_WeaponBullet_CarbonArrow_C : AProjectileArrow {
	FPointerToUberGraphFrame UberGraphFrame; // 0x458
	UParticleSystemComponent* ParticleSystem; // 0x460
};

struct UUI_CTFTeamHeaderWidget_C : UUI_GameEventTeamHeaderWidget_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UImage* BackgroundImage; // 0x288
	UHorizontalBox* LeftSideLayoutBox; // 0x290
	UHorizontalBox* LeftStarBox; // 0x298
	UTextBlock* LeftTeamScore; // 0x2a0
	UTextBlock* PlayerTextLeft; // 0x2a8
	UTextBlock* PlayerTextRight; // 0x2b0
	UHorizontalBox* RightSideLayoutBox; // 0x2b8
	UHorizontalBox* RightStarBox; // 0x2c0
	UTextBlock* RightTeamScore; // 0x2c8
	UTextBlock* TeamNameLeft; // 0x2d0
	UTextBlock* TeamNameRight; // 0x2d8
	ABP_CTFGameEvent_C* gameEvent; // 0x2e0
};

struct UCustomZoneRegistry : UActorComponent {
	UMaterialInterface* _mapMaterial; // 0xc0
	UCanvasRenderTarget2D* _mapTexture; // 0xc8
};

struct UCustomZoneSettingsConfigurationsList : UUserWidget {
	UTextBlock* _configurationCountDisplay; // 0x280
	UButton* _buttonAddConfiguration; // 0x288
	UScrollBox* _scrollBox; // 0x290
	UCustomZoneSettingsConfiguration* _configurationWidgetClass; // 0x298
};

struct UWindowFortificationsType : UDataAsset {
	TMap<UObject*, UStaticMesh*> MeshForFortification; // 0x30
};

struct AMagicLeapARPinInfoActor_C : AMagicLeapARPinInfoActorBase {
	FPointerToUberGraphFrame UberGraphFrame; // 0x238
	UStaticMeshComponent* Right; // 0x240
	UStaticMeshComponent* Forward; // 0x248
	UStaticMeshComponent* Up; // 0x250
	USphereComponent* ValidRadiusVisualizer; // 0x258
	USceneComponent* AxisRoot; // 0x260
	USceneComponent* VisualizerRoot; // 0x268
	UTextRenderComponent* TypeValue; // 0x270
	UTextRenderComponent* TransErrValue; // 0x278
	UTextRenderComponent* RotErrValue; // 0x280
	UTextRenderComponent* ConfidenceValue; // 0x288
	UTextRenderComponent* TransErrLabel; // 0x290
	UTextRenderComponent* RotErrLabel; // 0x298
	UTextRenderComponent* ConfidenceLabel; // 0x2a0
	UTextRenderComponent* PinIDValue; // 0x2a8
	USceneComponent* InfoRoot; // 0x2b0
	USceneComponent* Root; // 0x2b8
	float RotationSmoothSpeed; // 0x2c0
};

struct AHip_Flask_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UUVLayoutPreview : UObject {
	UUVLayoutPreviewProperties* Settings; // 0x28
	UPreviewMesh* PreviewMesh; // 0x30
	UTriangleSetComponent* TriangleComponent; // 0x38
	bool bShowBackingRectangle; // 0x40
	UMaterialInterface* BackingRectangleMaterial; // 0x48
};

struct UPostProcessComponent : USceneComponent {
	FPostProcessSettings Settings; // 0x200
	float Priority; // 0x750
	float BlendRadius; // 0x754
	float BlendWeight; // 0x758
	char bEnabled : 1; // 0x75c
	char bUnbound : 1; // 0x75c
};

struct APETBottle01_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UBTDecorator_ConeCheck : UBTDecorator {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector ConeDirection; // 0x98
	FBlackboardKeySelector Observed; // 0xc0
};

struct UUI_ErrorMessage_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UImage* Image_11; // 0x280
	UTextBlock* MainText; // 0x288
	UUI_TrashMenuButton_C* OkButton; // 0x290
	FMulticastInlineDelegate Dismissed; // 0x298
	UWidget* _widgetToDisable; // 0x2a8
};

struct UAnimNotify_BoatRow : UAnimNotify {
	uint32_t Flags; // 0x38
	float _rowCycleLength; // 0x3c
};

struct ATemplateSequenceActor : AActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x228
	UTemplateSequencePlayer* SequencePlayer; // 0x240
	FSoftObjectPath TemplateSequence; // 0x248
	FTemplateSequenceBindingOverrideData BindingOverride; // 0x260
};

struct UMaterialExpressionArcsineFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UAnimSequence : UAnimSequenceBase {
	int32_t NumFrames; // 0xa8
	TArray<FTrackToSkeletonMap> TrackToSkeletonMapTable; // 0xb0
	UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xd0
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd8
	EAdditiveAnimationType AdditiveAnimType; // 0x150
	EAdditiveBasePoseType RefPoseType; // 0x151
	UAnimSequence* RefPoseSeq; // 0x158
	int32_t RefFrameIndex; // 0x160
	FName RetargetSource; // 0x164
	EAnimInterpolationType Interpolation; // 0x16c
	bool bEnableRootMotion; // 0x16d
	ERootMotionRootLock RootMotionRootLock; // 0x16e
	bool bForceRootLock; // 0x16f
	bool bUseNormalizedRootMotionScale; // 0x170
	bool bRootMotionSettingsCopiedFromMontage; // 0x171
	TArray<FAnimSyncMarker> AuthoredSyncMarkers; // 0x178
	TArray<FBakedCustomAttributePerBoneData> BakedPerBoneCustomAttributeData; // 0x1a0
};

struct UMaterialExpressionRuntimeVirtualTextureReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput VirtualTextureOutput; // 0x54
};

struct UPrisonerBodySimulationComponent : UActorComponent {
	UPrisonerBodySimulationData* _data; // 0x158
	TArray<UPrisonerBodyEffect*> _bodyEffects; // 0x3a0
	UMetabolism* _metabolism; // 0x4b8
	uint64_t _repState1; // 0x4e0
	uint64_t _repState2; // 0x4e8
	uint64_t _repState3; // 0x4f0
	uint64_t _repState4; // 0x4f8
	uint64_t _repState5; // 0x500
	TArray<UPrisonerBodyEffect*> _repBodyEffects; // 0x508
};

struct UInputComponent : UActorComponent {
	TArray<FCachedKeyToActionInfo> CachedKeyToActionInfo; // 0x120
};

struct UConstructionPlaneMechanic : UInteractionMechanic {
	UTransformGizmo* PlaneTransformGizmo; // 0xc8
	UTransformProxy* PlaneTransformProxy; // 0xd0
	USingleClickInputBehavior* ClickToSetPlaneBehavior; // 0xe8
};

struct UCrowdFollowingComponent : UPathFollowingComponent {
	FVector CrowdAgentMoveDirection; // 0x268
};

struct AAmmunitionArrow : AAmmunitionItem {
	bool DestroyOnHit; // 0x810
	ABrokenArrow* BrokenArrowClass; // 0x818
	float _muzzleVelocityMultiplier; // 0x820
	float _stiffnessFactor; // 0x824
	float _flightRotationCorrectionSpeed; // 0x828
	float _elasticityFactorSpread; // 0x82c
};

struct UProceduralConeToolProperties : UProceduralShapeToolProperties {
	float Radius; // 0x70
	float Height; // 0x74
	int32_t RadialSlices; // 0x78
	int32_t HeightSubdivisions; // 0x7c
};

struct UPlaneBrushOpProps : UBasePlaneBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct UElectricianGlovesTag : UBaseItemTag {
	float PrisonerDamageModifier; // 0x30
};

struct A1H_Wooden_club_with_spikes_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f0
};

struct UARQRCodeComponent : UARComponent {
	FARQRCodeUpdatePayload ReplicatedPayload; // 0x280
};

struct UBTService_BlueprintBase : UBTService {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	char bShowPropertyDetails : 1; // 0x90
	char bShowEventDetails : 1; // 0x90
};

struct UDisplaceMeshPerlinNoiseProperties : UInteractiveToolPropertySet {
	TArray<FPerlinLayerProperties> PerlinLayerProperties; // 0x60
};

struct ABP_WeaponBullet_30_C : AProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
};

struct UNavLinkDefinition : UObject {
	TArray<FNavigationLink> Links; // 0x28
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x38
};

struct UAdminCommandRegistry : UObject {
	TArray<UAdminCommand*> _commands; // 0x28
};

struct UPlatformInterfaceBase : UObject {
	TArray<FDelegateArray> AllDelegates; // 0x28
};

struct UPrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier : UPrisonerBodyConditionOrSymptomSideEffect {
	FRuntimeFloatCurve _modifierVsSeverity; // 0x30
};

struct UPrisonerBodyCondition_HeavyInjuries : UPrisonerBodyCondition {
	FFloatInterval _injuriesDamageRatioToExistVsConstitution; // 0xa8
	float _painSymptomOverallIntensity; // 0xb0
	float _painSymptomLimpingIntensity; // 0xb4
	UPrisonerBodySymptom_Pain* _painSymptomClass; // 0xb8
	UPrisonerBodySymptomCause_Pain* _painSymptomCause; // 0xc0
};

struct ABeer_Kajel_C : ADrinkItem {
	URainCollectorComponent* RainCollector; // 0x920
};

struct UPlatformInterfaceWebResponse : UObject {
	FString OriginalURL; // 0x28
	int32_t ResponseCode; // 0x38
	int32_t Tag; // 0x3c
	FString StringResponse; // 0x40
	TArray<char> BinaryResponse; // 0x50
};

struct UDLSSSettings : UObject {
	bool bEnableDLSSD3D12; // 0x28
	bool bEnableDLSSD3D11; // 0x29
	bool bEnableDLSSVulkan; // 0x2a
	bool bEnableDLSSInEditorViewports; // 0x2b
	bool bEnableScreenpercentageManipulationInDLSSEditorViewports; // 0x2c
	bool bEnableDLSSInPlayInEditorViewports; // 0x2d
	bool bShowDLSSSDebugOnScreenMessages; // 0x2e
	FString GenericDLSSBinaryPath; // 0x30
	bool bGenericDLSSBinaryExists; // 0x40
	uint32_t NVIDIANGXApplicationId; // 0x44
	FString CustomDLSSBinaryPath; // 0x48
	bool bCustomDLSSBinaryExists; // 0x58
};

struct ACTFFlagStand : AActor {
	UStaticMeshComponent* Mesh; // 0x220
	UPointLightComponent* Light; // 0x228
	FLinearColor _lightColor; // 0x230
};

struct UCustomZoneSettingsRegion : UUserWidget {
	UBorder* _border; // 0x2a0
	UTextBlock* _regionName; // 0x2a8
	UTextBlock* _regionData; // 0x2b0
	UButton* _buttonIncreasePriority; // 0x2b8
	UButton* _buttonDecreasePriority; // 0x2c0
	UButton* _buttonRemove; // 0x2c8
	FLinearColor _unhighlightedColor; // 0x2d0
	FLinearColor _highlightedColor; // 0x2e0
};

struct UPrisonerBodySymptom_Nausea : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8
};

struct UThrowableItemTag : UBaseItemTag {
	FMeleeWeaponDesc WeaponDesc; // 0x30
};

struct UObjectiveContainer_C : UObjectivesContainerWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	FMulticastInlineDelegate ObjectiveCompleted; // 0x280
};

struct UNiagaraMeshRendererProperties : UNiagaraRendererProperties {
	UStaticMesh* ParticleMesh; // 0x80
	ENiagaraSortMode SortMode; // 0x88
	char bOverrideMaterials : 1; // 0x8c
	char bSortOnlyWhenTranslucent : 1; // 0x8c
	TArray<FNiagaraMeshMaterialOverride> OverrideMaterials; // 0x90
	FVector2D SubImageSize; // 0xa0
	char bSubImageBlend : 1; // 0xa8
	ENiagaraMeshFacingMode FacingMode; // 0xac
	char bLockedAxisEnable : 1; // 0xb0
	FVector LockedAxis; // 0xb4
	ENiagaraMeshLockedAxisSpace LockedAxisSpace; // 0xc0
	FVector PivotOffset; // 0xc4
	ENiagaraMeshPivotOffsetSpace PivotOffsetSpace; // 0xd0
	char bEnableFrustumCulling : 1; // 0xd4
	char bEnableCameraDistanceCulling : 1; // 0xd4
	float MinCameraDistance; // 0xd8
	float MaxCameraDistance; // 0xdc
	uint32_t RendererVisibility; // 0xe0
	FNiagaraVariableAttributeBinding PositionBinding; // 0xe8
	FNiagaraVariableAttributeBinding ColorBinding; // 0x140
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x198
	FNiagaraVariableAttributeBinding MeshOrientationBinding; // 0x1f0
	FNiagaraVariableAttributeBinding ScaleBinding; // 0x248
	FNiagaraVariableAttributeBinding SubImageIndexBinding; // 0x2a0
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x2f8
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x350
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x3a8
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x400
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x458
	FNiagaraVariableAttributeBinding CustomSortingBinding; // 0x4b0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x508
	FNiagaraVariableAttributeBinding CameraOffsetBinding; // 0x560
	FNiagaraVariableAttributeBinding RendererVisibilityTagBinding; // 0x5b8
};

struct USculptMaxBrushProperties : UInteractiveToolPropertySet {
	float MaxHeight; // 0x60
	bool bFreezeCurrentHeight; // 0x64
};

struct UCharacterCreationWidget : UBaseMenu {
	UTrashNamedCarouselWidget* _concealedMode; // 0x260
};

struct UKillFeedNotificationDescription : UNotificationDescription {
	FString prefix; // 0x40
	FString characterName; // 0x50
	FString suffix; // 0x60
	bool ping; // 0x70
};

struct AKillBoxManager : AActor {
	bool _isActivated; // 0x220
	bool _isFinale; // 0x221
	float _killBoxDuration; // 0x224
	float _lockdownDuration; // 0x228
	float _killBoxResetDelay; // 0x22c
	float _reductionTimeCap; // 0x230
	float _reductionTimePenalty; // 0x234
	float _saveStateInterval; // 0x238
	float _gasEntranceTime; // 0x23c
	UPrisonerBodyCondition_KillBoxGasPoisoning* _gasPoisoningCondition; // 0x240
	float _panicModeTimeCut; // 0x248
	float _laserEntranceTime; // 0x24c
	float _finaleEntranceCloseTime; // 0x250
	float _difficultyCalibrationTime; // 0x254
	int32_t _calibrationPrisonerThreshold; // 0x258
	float _zapperDamageModifierPerPrisoner; // 0x25c
	float _maxZapperDamageModifier; // 0x260
	TArray<FRoomDifficultyConfiguration> _availableDifficultyConfigurations; // 0x268
	float _laserGadgetsTopPosition; // 0x278
	float _laserGadgetsBottomPosition; // 0x27c
	float _laserMovingSpeed; // 0x280
	int32_t _maxSpawnedZombies; // 0x284
	int32_t _maxSpawnedZombiesPerMistake; // 0x288
	int32_t _prisonerNumPerGoldDoorZapper; // 0x28c
	int32_t _maxGoldDoorZappers; // 0x290
	float _specialPauseCountdownDuration; // 0x294
	int32_t _pauseMaxPrisonerCount; // 0x298
	int32_t _spawnMinPrisonerCount; // 0x29c
	float _specialEventInterval; // 0x2a0
	float _laserQuoteTimeRemainingTrigger; // 0x2a4
	float _gasQuoteTimeRemainingTrigger; // 0x2a8
	float _randomQuoteInterval; // 0x2ac
	float _timedHostBlockTime; // 0x2b0
	TArray<UAkAudioEvent*> _killBoxOpeningQuotes; // 0x2b8
	TArray<UAkAudioEvent*> _killBoxLaserAnnouncementQuotes; // 0x2c8
	TArray<UAkAudioEvent*> _killBoxDescriptionQuotes; // 0x2d8
	TArray<UAkAudioEvent*> _killBoxRandomnQuotes; // 0x2e8
	TArray<UAkAudioEvent*> _killBoxFailureQuotes; // 0x2f8
	TArray<UAkAudioEvent*> _killBoxGasAnnouncementQuotes; // 0x308
	TArray<UAkAudioEvent*> _killBoxZombieSpawnQuotes; // 0x318
	TArray<UAkAudioEvent*> _killBoxTimePauseQuotes; // 0x328
	TArray<UAkAudioEvent*> _difficultyCalibrationQuote; // 0x338
	UAkAudioEvent* KillBoxMusicStart; // 0x348
	UAkAudioEvent* _killBoxMusicStop; // 0x350
	UAkAudioEvent* _killBoxGasSound; // 0x358
	UAkAudioEvent* KillBox30SecondsMark; // 0x360
	UAkAudioEvent* KillBox10SecondsMark; // 0x368
	UAkAudioEvent* KillBox5SecondsMark; // 0x370
	UAkAudioEvent* KillBox4SecondsMark; // 0x378
	UAkAudioEvent* KillBox3SecondsMark; // 0x380
	UAkAudioEvent* KillBox2SecondsMark; // 0x388
	UAkAudioEvent* KillBox1SecondsMark; // 0x390
	UAkAudioEvent* KillBoxBuzzerSound; // 0x398
	ADoor* _killBoxEntrance; // 0x3a0
	AKillBoxDetectionField* _detectionField; // 0x3a8
	UStaticMeshComponent* _laserDevices; // 0x3b0
	UStaticMeshComponent* _laserGrid; // 0x3b8
	TArray<AKillBoxSpawnPoint*> _spawnPoints; // 0x3c0
	TArray<AKillBoxSpawnPoint*> _hardSpawnPoints; // 0x3d0
	TArray<AZombie2*> _spawnedZombies; // 0x3e0
	UAkComponent* _currentAudioComponent; // 0x3f0
	UAkComponent* _currentMusicComponent; // 0x3f8
	float _remainingTime; // 0x400
	float _unlockFailureAssistanceBonus; // 0x404
	TArray<UAkAudioEvent*> _queuedQuotes; // 0x458
	TArray<ADoor*> _electricalDoors; // 0x468
	TArray<FRoomDefinition> _roomDefinitions; // 0x478
	TArray<UKillBoxTimerWidget*> _timerWidgets; // 0x488
	TArray<UParticleSystemComponent*> _gasEmitters; // 0x498
	UParticleSystemComponent* _gasMist; // 0x4a8
	ASwitch* _panicButton; // 0x4b0
};

struct ADefaultPawn : APawn {
	float BaseTurnRate; // 0x280
	float BaseLookUpRate; // 0x284
	UPawnMovementComponent* MovementComponent; // 0x288
	USphereComponent* CollisionComponent; // 0x290
	UStaticMeshComponent* MeshComponent; // 0x298
	char bAddDefaultMovementBindings : 1; // 0x2a0
};

struct URainCollectorComponent : UItemComponent {
	FDbIntegerId _collectorID; // 0xb8
	float _fillRate; // 0xc4
	float _maxAmount; // 0xc8
	UAkAudioEvent* _collectingStartSound; // 0xd8
	UAkAudioEvent* _collectingStopSound; // 0xe0
};

struct UCompressedImageSequenceProtocol : UImageSequenceProtocol {
	int32_t CompressionQuality; // 0xd8
};

struct UInterpTrackFloatParticleParam : UInterpTrackFloatBase {
	FName ParamName; // 0x90
};

struct UConvertToPolygonsTool : USingleSelectionTool {
	UConvertToPolygonsToolProperties* Settings; // 0x88
	UPreviewMesh* PreviewMesh; // 0x90
};

struct AWeaponAttachmentGhillie : AWeaponAttachment {
	USkeletalMeshComponent* EquippedSkeletalMeshComponent; // 0x7e0
	TMap<AWeapon*, FMeshMaterialPair> WeaponToSkeletalMeshMapping; // 0x7e8
};

struct UParticleLODLevel : UObject {
	int32_t Level; // 0x28
	char bEnabled : 1; // 0x2c
	UParticleModuleRequired* RequiredModule; // 0x30
	TArray<UParticleModule*> Modules; // 0x38
	UParticleModuleTypeDataBase* TypeDataModule; // 0x48
	UParticleModuleSpawn* SpawnModule; // 0x50
	UParticleModuleEventGenerator* EventGenerator; // 0x58
	TArray<UParticleModuleSpawnBase*> SpawningModules; // 0x60
	TArray<UParticleModule*> SpawnModules; // 0x70
	TArray<UParticleModule*> UpdateModules; // 0x80
	TArray<UParticleModuleOrbit*> OrbitModules; // 0x90
	TArray<UParticleModuleEventReceiverBase*> EventReceiverModules; // 0xa0
	char ConvertedModules : 1; // 0xb0
	int32_t PeakActiveParticles; // 0xb4
};

struct UBuildPatchManifest : UObject {
	char ManifestFileVersion; // 0x28
	bool bIsFileData; // 0x29
	uint32_t AppID; // 0x2c
	FString AppName; // 0x30
	FString BuildVersion; // 0x40
	FString LaunchExe; // 0x50
	FString LaunchCommand; // 0x60
	TSet<FString> PrereqIds; // 0x70
	FString PrereqName; // 0xc0
	FString PrereqPath; // 0xd0
	FString PrereqArgs; // 0xe0
	TArray<FFileManifestData> FileManifestList; // 0xf0
	TArray<FChunkInfoData> ChunkList; // 0x100
	TArray<FCustomFieldData> CustomFields; // 0x110
};

struct UAsyncTask_LoadXRDeviceVisComponent : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnModelLoaded; // 0x30
	FMulticastInlineDelegate OnLoadFailure; // 0x40
	UPrimitiveComponent* SpawnedComponent; // 0x58
};

struct UTransformProxy : UObject {
	bool bRotatePerObject; // 0x70
	bool bSetPivotMode; // 0x71
	FTransform SharedTransform; // 0x90
	FTransform InitialSharedTransform; // 0xc0
};

struct UCharacterSoundComponent : UActorComponent {
	FName AttachedSoundsAttachPointName; // 0xb0
	UCharacterImpactSoundsData* ImpactSounds; // 0xb8
	UCharacterPainSoundsData* PainSounds; // 0xc0
	float MinDurationBetweenPainSounds; // 0xc8
	float MaxDurationBetweenPainSounds; // 0xcc
};

struct UPlaneCutToolProperties : UInteractiveToolPropertySet {
	bool bSnapToWorldGrid; // 0x60
	bool bKeepBothHalves; // 0x61
	float SpacingBetweenHalves; // 0x64
	bool bFillCutHole; // 0x68
	bool bShowPreview; // 0x69
	bool bFillSpans; // 0x6a
};

struct APot2_C : AEquipmentItem {
	UBasicGameResourceContainerComponent* BasicGameResourceContainer; // 0x7e0
	URainCollectorComponent* RainCollector; // 0x7e8
};

struct UMaterialExpressionInverseLinearInterpolate : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Value; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstValue; // 0x84
	bool bClampResult; // 0x88
};

struct USoundSubmixWithParentBase : USoundSubmixBase {
	USoundSubmixBase* ParentSubmix; // 0x38
};

struct UDeformMeshPolygonsTool : UMeshSurfacePointTool {
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0xc8
	UDeformMeshPolygonsTransformProperties* TransformProps; // 0xd0
};

struct UDestructibleComponent : USkinnedMeshComponent {
	char bFractureEffectOverride : 1; // 0x6a0
	TArray<FFractureEffect> FractureEffects; // 0x6a8
	bool bEnableHardSleeping; // 0x6b8
	float LargeChunkThreshold; // 0x6bc
	FMulticastInlineDelegate OnComponentFracture; // 0x6d0
};

struct UCSGMeshesToolProperties : UInteractiveToolPropertySet {
	ECSGOperation Operation; // 0x60
	bool bShowNewBoundaryEdges; // 0x61
	bool bAttemptFixHoles; // 0x62
	bool bOnlyUseFirstMeshMaterials; // 0x63
};

struct UMovieScenePropertyTrack : UMovieSceneNameableTrack {
	UMovieSceneSection* SectionToKey; // 0x78
	FMovieScenePropertyBinding PropertyBinding; // 0x80
	TArray<UMovieSceneSection*> Sections; // 0x98
};

struct UBuryToolItemTag : UBaseItemTag {
	bool IsSmallSizedTool; // 0x30
	int32_t BuryItemUsage; // 0x34
	float BuryDurationModifier; // 0x38
	FName BladeTipSocket; // 0x3c
	FName BladeCenterSocket; // 0x44
	float ShortToolMinBuryTime; // 0x4c
	float ShortToolMaxBuryTime; // 0x50
	float LongToolMinBuryTime; // 0x54
	float LongToolMaxBuryTime; // 0x58
};

struct UClearDoubleFeed : UWeaponActionClearMalfunctionSequence {
	FName MontageEndSectionName; // 0xb8
	int32_t _ejectedRoundsCount; // 0xc0
	AWeaponAttachmentMagazine* _magazineToRestore; // 0xc8
};

struct UInterpTrackFloatBase : UInterpTrack {
	FInterpCurveFloat FloatTrack; // 0x70
	float CurveTension; // 0x88
};

struct UBTDecorator_Loop : UBTDecorator {
	int32_t NumLoops; // 0x68
	bool bInfiniteLoop; // 0x6c
	float InfiniteLoopTimeoutTime; // 0x70
};

struct UMaterialExpressionNoise : UMaterialExpression {
	FExpressionInput position; // 0x40
	FExpressionInput FilterWidth; // 0x54
	float Scale; // 0x68
	int32_t Quality; // 0x6c
	ENoiseFunction NoiseFunction; // 0x70
	char bTurbulence : 1; // 0x74
	int32_t Levels; // 0x78
	float OutputMin; // 0x7c
	float OutputMax; // 0x80
	float LevelScale; // 0x84
	char bTiling : 1; // 0x88
	uint32_t RepeatSize; // 0x8c
};

struct UEnvQueryGenerator : UEnvQueryNode {
	FString OptionName; // 0x30
	UEnvQueryItemType* ItemType; // 0x40
	char bAutoSortTests : 1; // 0x48
};

struct USourceEffectRingModulationPreset : USoundEffectSourcePreset {
	FSourceEffectRingModulationSettings Settings; // 0xb0
};

struct UStereoLayerComponent : USceneComponent {
	char bLiveTexture : 1; // 0x1f8
	char bSupportsDepth : 1; // 0x1f8
	char bNoAlphaChannel : 1; // 0x1f8
	UTexture* Texture; // 0x200
	UTexture* LeftTexture; // 0x208
	char bQuadPreserveTextureRatio : 1; // 0x210
	FVector2D QuadSize; // 0x214
	FBox2D UVRect; // 0x21c
	float CylinderRadius; // 0x230
	float CylinderOverlayArc; // 0x234
	int32_t CylinderHeight; // 0x238
	FEquirectProps EquirectProps; // 0x23c
	EStereoLayerType StereoLayerType; // 0x284
	EStereoLayerShape StereoLayerShape; // 0x285
	UStereoLayerShape* Shape; // 0x288
	int32_t Priority; // 0x290
};

struct UUVProjectionToolProperties : UInteractiveToolPropertySet {
	EUVProjectionMethod UVProjectionMethod; // 0x60
	FVector ProjectionPrimitiveScale; // 0x64
	float CylinderProjectToTopOrBottomAngleThreshold; // 0x70
	FVector2D UVScale; // 0x74
	FVector2D UVOffset; // 0x7c
	bool bWorldSpaceUVScale; // 0x84
};

struct UWaterSubsystem : UWorldSubsystem {
	FMulticastInlineDelegate OnCameraUnderwaterStateChanged; // 0x70
	FMulticastInlineDelegate OnWaterScalabilityChanged; // 0x80
	UStaticMesh* DefaultRiverMesh; // 0x90
	UStaticMesh* DefaultLakeMesh; // 0x98
	AWaterMeshActor* WaterMeshActor; // 0xa0
	UMaterialParameterCollection* MaterialParameterCollection; // 0xd0
};

struct UInputKeySelector : UWidget {
	FButtonStyle WidgetStyle; // 0x108
	FTextBlockStyle TextStyle; // 0x380
	FInputChord SelectedKey; // 0x5f0
	FSlateFontInfo Font; // 0x610
	FMargin Margin; // 0x668
	FLinearColor ColorAndOpacity; // 0x678
	FText KeySelectionText; // 0x688
	FText NoKeySpecifiedText; // 0x6a0
	bool bAllowModifierKeys; // 0x6b8
	bool bAllowGamepadKeys; // 0x6b9
	TArray<FKey> EscapeKeys; // 0x6c0
	FMulticastInlineDelegate OnKeySelected; // 0x6d0
	FMulticastInlineDelegate OnIsSelectingKeyChanged; // 0x6e0
};

struct UAvoidanceManager : UObject {
	float DefaultTimeToLive; // 0x30
	float LockTimeAfterAvoid; // 0x34
	float LockTimeAfterClean; // 0x38
	float DeltaTimeToPredict; // 0x3c
	float ArtificialRadiusExpansion; // 0x40
	float TestHeightDifference; // 0x44
	float HeightCheckMargin; // 0x48
};

struct USourceEffectChorusPreset : USoundEffectSourcePreset {
	FSourceEffectChorusSettings Settings; // 0x108
};

struct ABowAttachmentStabilizer : ABowAttachmentSilencer {
	float _shakinessModifier; // 0x7e8
};

struct UCCBodyTypeTriangleWidget : UUserWidget {
	UCanvasPanel* _markerBackgroundCanvasPanel; // 0x278
	UImage* _markerBackgroundImage; // 0x280
	UCanvasPanel* _markerCanvasPanel; // 0x288
	UImage* _markerImage; // 0x290
};

struct UMetabolismMineralsPanel : UUserWidget {
	UMetabolismVitaminAndMineralReserve* _mineral_Ca; // 0x260
	UMetabolismVitaminAndMineralReserve* _mineral_Fe; // 0x268
	UMetabolismVitaminAndMineralReserve* _mineral_Mg; // 0x270
	UMetabolismVitaminAndMineralReserve* _mineral_P; // 0x278
	UMetabolismVitaminAndMineralReserve* _mineral_K; // 0x280
	UMetabolismVitaminAndMineralReserve* _mineral_Zn; // 0x288
	UMetabolismVitaminAndMineralReserve* _mineral_Cu; // 0x290
	UMetabolismVitaminAndMineralReserve* _mineral_Mn; // 0x298
	UMetabolismVitaminAndMineralReserve* _mineral_Se; // 0x2a0
	UMetabolismVitaminAndMineralReserve* _mineral_Na; // 0x2a8
};

struct USubmixEffectTapDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectTapDelaySettings Settings; // 0xa8
};

struct AConZBoat : APawn {
	USkeletalMeshComponent* _skeletalMeshComponent; // 0x2a0
	UVehicleCameraStabilizerComponent* _cameraStabilizer; // 0x2a8
	EConZBoatMeshType _meshType; // 0x2b0
	UConZBuoyancyComponent* _buoyancyComponent; // 0x2b8
	FVehicleSpawnParameters _spawnParameters; // 0x2c0
	TArray<FBuoyancyTestPoint> _testPoints; // 0x2f0
	uint32_t _repPackedSimulationState; // 0x300
	UBoxComponent* _sailCollisionComponent; // 0x308
	TArray<UConZBoatMountSlot*> _mountSlots; // 0x310
	FRuntimeFloatCurve _driverActionDifficultyVsSpeed; // 0x378
	FBoatParametersPerMovementPace _parametersPerMovementPace[0x4]; // 0x400
	FFloatInterval _maxSpeedModifierInterpedWithDriverDexterity; // 0x450
	FName _leftOarMeshSocketName; // 0x458
	FName _rightOarMeshSocketName; // 0x460
	FName _motorHandleSocketName; // 0x468
	FName _sailsHandleSocketName; // 0x470
	FName _rudderHandleSocketName; // 0x478
	float _engineBlockMaxHealth; // 0x484
	float _maxHealth; // 0x48c
	FRepairableParams _repairableParams; // 0x490
	UAkAudioEvent* _destroyedAudioEvent; // 0x4c8
	UParticleSystem* _destroyedParticleSystem; // 0x4d0
	float _autoHealthDrainThreshold; // 0x4d8
	float _autoHealthDrain; // 0x4dc
	float _healthDrainUpdateInterval; // 0x4e0
	FRuntimeFloatCurve _healthRatioToDensityMultiplier; // 0x4e8
	TArray<FVehicleDamagedEffectsParameters> _damagedEffects; // 0x570
	FName _damageMaterialParameterName; // 0x590
	FVehicleExhaustEffects _exhaustEffects; // 0x598
	FRuntimeFloatCurve _hitDamageVsHitImpulse; // 0x5e0
	UAkAudioEvent* _damagedByHitAudioEvent; // 0x668
	FText _healthBarCaption; // 0x670
	UUserWidget* _mountSlotIndicatorsWidget; // 0x688
	float _throttleInterpSpeed; // 0x6a8
	float _brakeInterpSpeed; // 0x6ac
	float _steerInterpSpeed; // 0x6b0
	float _maxSteeringAngle; // 0x6b4
	float _motorSteeringForce; // 0x6b8
	float _motorSteerTurnMultiplier; // 0x6bc
	float _maxSpeedForBase; // 0x6c0
	FRuntimeFloatCurve _sidewaysVelocityFalloff; // 0x6c8
	FRuntimeFloatCurve _speedKmhVsDensityMultiplier; // 0x750
	bool _isPaddleInLeftHand; // 0x7e8
	AItem* itemNeededClassToStartRowing; // 0x7f0
	float _rowingForce; // 0x7f8
	FRuntimeFloatCurve _rowForceMultiplierPerKph; // 0x800
	float _rowTurnMultiplier; // 0x888
	FRuntimeFloatCurve _rowTurnMultiplierPerKph; // 0x890
	float _desiredDriftMultiplier; // 0x918
	float _paddleDriftSteerMultiplier; // 0x91c
	uint32_t _numPaddleSwingsInOneHand; // 0x920
	UParticleSystemComponent* _LOarWaterParticles; // 0x928
	UParticleSystemComponent* _ROarWaterParticles; // 0x930
	float _maxRowingSpeed; // 0x93c
	bool _hasSails; // 0x940
	float _sailingForceMultiplier; // 0x944
	FRuntimeFloatCurve _sailingForceMultiplierPerKph; // 0x948
	float _sailingTurnMultiplier; // 0x9d0
	FRuntimeFloatCurve _sailingTurnMultiplierPerKph; // 0x9d8
	UAkAudioEvent* _sailingRudderStartAudioEvent; // 0xa60
	UAkAudioEvent* _sailingRudderEndAudioEvent; // 0xa68
	int32_t _sailsDeploySteps; // 0xa70
	float _sailsDeploySpeedMultiplier; // 0xa74
	uint32_t _sailsTurnSteps; // 0xa78
	float _sailsTurnSpeedMultiplier; // 0xa7c
	float _sailsMaxTurnAngle; // 0xa80
	float _maxSailingSpeed; // 0xa84
	FRuntimeFloatCurve _sailsDeploymentRatioVsForceMultiplier; // 0xaa0
	float _maxVehicleEnterAngle; // 0xb2c
	float _boatPushForceMagnitudeOnWater; // 0xb30
	float _boatPushForceMagnitudeOnLand; // 0xb34
	float _boatFlipForceMagnitude; // 0xb38
	FVector _debugOffset; // 0xb48
	float _debugLineLength; // 0xb54
	AVehicleItemContainer* _itemContainerClass; // 0xb58
	bool _shouldDropItemsWhenDestroyed; // 0xb60
	AVehicleItemContainer* _itemContainer; // 0xb68
	float _itemContainerContainedItemsMass; // 0xb70
	FVector _itemContainerOffset; // 0xb74
	bool _shouldEvictMounteesIfTiltedAboveThreshold; // 0xb80
	float _tiltThresholdAngleToEvictMountees; // 0xb84
	float _sendStateInterval; // 0xb88
	float _rigidBodyStatePositionErrorTolerance; // 0xb90
	float _rigidBodyStateRotationErrorTolerance; // 0xb94
	bool _isAnchored; // 0xb98
	bool _shouldBeAnchoredWhenUnmounted; // 0xb99
	UParticleSystemComponent* _bowWaterParticles; // 0xba0
	bool _hasEngine; // 0xba8
	float _maxMotorSpeed; // 0xbac
	EVehicleEngineState _engineState; // 0xbb0
	float _engineStallingForceMagnitude; // 0xbc0
	float _throttleToRpmMultiplier; // 0xc28
	float _engineIdleRpm; // 0xc38
	float _engineMaxRpm; // 0xc3c
	UParticleSystemComponent* _engineWaterParticles; // 0xcc0
	bool _canEngineBeStalledByAcceleration; // 0xcc8
	float _engineStallingByAccelerationSpeedThreshold; // 0xccc
	float _engineStallingByAccelerationOccurrenceInterval; // 0xcd0
	UAkAudioEvent* _engineStallingByAccelerationAudioEvent; // 0xcd8
	TArray<float> _engineStallingByAccelerationAudioEventTriggerTimeRatios; // 0xce0
	bool _hasFuel; // 0xcf0
	UGameResourceType* _fuelResourceType; // 0xcf8
	float _maxFuelAmount; // 0xd00
	float _fuelDrainWhenStartingEngine; // 0xd04
	FRuntimeFloatCurve _engineFuelDrainPerRpm; // 0xd08
	float _engineFuelDrainPerRpmScale; // 0xd90
	FRuntimeFloatCurve _engineFuelDrainPerRpmUnderLoad; // 0xd98
	float _engineFuelDrainPerRpmUnderLoadScale; // 0xe20
	float _fuelDrainWhenInactive; // 0xe24
	float _fuelFillingBaseDuration; // 0xe28
	float _fillingDurationPerFuelAmountFilled; // 0xe2c
	float _experienceAwardedPerFuelAmountFilled; // 0xe30
	UAnimMontage* _prisonerFillingFuelMontage; // 0xe38
	UAkAudioEvent* _startFillingFuelAudioEvent; // 0xe40
	UAkAudioEvent* _stopFillingFuelAudioEvent; // 0xe48
	UAkAudioEvent* _startFillingFuelWithReplenishableResourceAudioEvent; // 0xe50
	UAkAudioEvent* _stopFillingFuelWithReplenishableResourceAudioEvent; // 0xe58
	FVector _fillFuelWithReplenishableResourceOverlapBoxExtent; // 0xe60
	float _fuelDrainingBaseDuration; // 0xe6c
	float _drainingDurationPerFuelAmountDrained; // 0xe70
	float _experienceAwardedPerFuelAmountDrained; // 0xe74
	UAnimMontage* _prisonerDrainingFuelMontage; // 0xe78
	UAkAudioEvent* _startDrainingFuelAudioEvent; // 0xe80
	UAkAudioEvent* _stopDrainingFuelAudioEvent; // 0xe88
	FVehicleEngineStallingParameters _engineStallingParametersWhenOutOfFuel; // 0xe90
	float _fuelUpdateInterval; // 0xeec
	uint32_t _repHealthFuelBatteryAmount; // 0xef4
	bool _hasBattery; // 0xef8
	UGameResourceType* _batteryResourceType; // 0xf00
	float _maxBatteryAmount; // 0xf08
	float _batteryDrainWhenStartingEngine; // 0xf0c
	float _batteryDrainWhenHornIsActive; // 0xf10
	float _batteryDrainWhenLightsAreActive; // 0xf14
	float _batteryDrainWhenRadioIsTurnedOn; // 0xf18
	float _batteryDrainWhenInactive; // 0xf1c
	FRuntimeFloatCurve _batteryDynamoChargePerKph; // 0xf20
	float _batteryDynamoChargePerKphScale; // 0xfa8
	FRuntimeFloatCurve _batteryAlternatorChargePerRpm; // 0xfb0
	float _batteryAlternatorChargePerRpmScale; // 0x1038
	float _batteryPowerReductionThreshold; // 0x103c
	float _startEngineDurationPenaltyWhenBatteryReducedInPower; // 0x1040
	float _batteryChargingBaseDuration; // 0x1044
	float _chargingDurationPerBatteryAmountCharged; // 0x1048
	float _experienceAwardedPerBatteryAmountCharged; // 0x104c
	UAnimMontage* _prisonerChargingBatteryMontage; // 0x1050
	UAkAudioEvent* _startChargingBatteryAudioEvent; // 0x1058
	UAkAudioEvent* _stopChargingBatteryAudioEvent; // 0x1060
	float _batteryUpdateInterval; // 0x106c
	AVehicleCorpse* _corpseClass; // 0x1090
	float _activeHitTimeToLive; // 0x1098
	FVehicleImpactEffects _impactEffects[0x5]; // 0x10a0
	UCurveFloat* ImpactDamageVsNormalImpulse; // 0x11b8
	UAkAudioEvent* _engineStartingAudioEvent; // 0x11d0
	UAkAudioEvent* _engineStartedAudioEvent; // 0x11d8
	UAkAudioEvent* _engineTurnedOffAudioEvent; // 0x11e0
	UAkAudioEvent* _engineFailedToStartAudioEvent; // 0x11e8
	UAkAudioEvent* _engineFailedToStartNoFuelAudioEvent; // 0x11f0
	UAkAudioEvent* _engineFailedToStartNoBatteryAudioEvent; // 0x11f8
	UAkAudioEvent* _engineStalledAudioEvent; // 0x1200
	UAkAudioEvent* _noFuelToStartEngineAudioEvent; // 0x1208
	UAkAudioEvent* _noBatteryToStartEngineAudioEvent; // 0x1210
	UAkAudioEvent* _hornStartAudioEvent; // 0x1218
	UAkAudioEvent* _hornStopAudioEvent; // 0x1220
	UAkAudioEvent* _noBatteryToActivateHornAudioEvent; // 0x1228
	UAkAudioEvent* _lightsActivatedAudioEvent; // 0x1230
	UAkAudioEvent* _lightsDeactivatedAudioEvent; // 0x1238
	UAkAudioEvent* _noBatteryToActivateLightsAudioEvent; // 0x1240
	UAkAudioEvent* _rowingAudioEvent; // 0x1248
	float _rpmScaleForSoundWhenSpeedIsEqualOrGreaterThanZero; // 0x1250
	float _rpmScaleForSoundWhenSpeedIsLessThanZero; // 0x1254
	float _soundCullDistance; // 0x1258
	float _sailingSteerSoundMultiplier; // 0x125c
	float _makeNoiseInterval; // 0x1268
	float _maxNoiseLoudnessFromEngine; // 0x126c
	float _maxNoiseLoudnessFromSpeed; // 0x1270
	UAkAudioEvent* _waterLoopStartAudioEvent; // 0x1278
	UAkAudioEvent* _waterLoopStopAudioEvent; // 0x1280
	UAkAudioEvent* _sailsTautAudioEvent; // 0x1288
	EConZPxDominanceGroup _physicsDominanceGroup; // 0x1290
	bool _canEverBeTraded; // 0x12d0
	FTradeableTagParams _tradeableParams; // 0x12d8
};

struct ATradeOutpostBuilding : ABuilding {
	UStaticMeshComponent* _buildingMesh; // 0x328
	UBoxComponent* _interactionArea; // 0x330
	TArray<FSedentaryNPCMarker> _sedentaryNPCMarkers; // 0x358
	TArray<ASedentaryNPC*> _spawnedSedentaryNPCs; // 0x368
};

struct UEnvQueryOption : UObject {
	UEnvQueryGenerator* Generator; // 0x28
	TArray<UEnvQueryTest*> Tests; // 0x30
};

struct UPrisonerBodyCondition_FoodDisgust : UPrisonerBodyCondition {
	FFloatInterval _disgustAmountMultiplierVsConstitution; // 0xa8
	float _disgustAmountTolerated; // 0xb0
	float _disgustAmountToIssueFirstWarning; // 0xb4
	UNotificationDescription* _firstDisgustWarning; // 0xb8
	float _disgustAmountToIssueSecondWarning; // 0xc0
	UNotificationDescription* _secondDisgustWarning; // 0xc8
	float _disgustWarningCooldown; // 0xd0
	float _disgustAmountToBeAbleToVomit; // 0xdc
	float _disgustAmountToVomit; // 0xe0
	float _disgustAmountDecreaseMultiplier; // 0xe4
	float _disgustAmount; // 0xe8
	float _disgustAmountAtStabilizationStart; // 0x108
	float _disgustAmountAtRecoveryStart; // 0x10c
	UPrisonerBodySymptom_Nausea* _nauseaSymptomClass; // 0x110
};

struct UPrisonerLoadout : UDataAsset {
	AItem* primary; // 0x30
	TArray<AItem*> primaryAttachments; // 0x38
	AItem* secondary; // 0x48
	TArray<AItem*> secondaryAttachments; // 0x50
	AItem* tertiary; // 0x60
	TArray<AItem*> tertiaryAttachments; // 0x68
	TArray<AItem*> outfit; // 0x78
	TArray<AItem*> support; // 0x88
};

struct UPrisonerAnimInstance_Grappled : UAnimInstance {
	UAnimSequence* _idleAnimation; // 0x2b8
};

struct UPrisonerPrisonWalletComponent : UCharacterActionComponent {
	TArray<AItem*> _deluxeItems; // 0xc0
	TArray<AItem*> _milestoneEventItems; // 0xd0
	EPrisonWalletChoiceType _milestoneItemChoiceType; // 0xe0
	int32_t _lastMilestone; // 0xe4
};

struct UTireToSurfaceAudioData : UDataAsset {
	float _maxSoundRange; // 0x30
	UAkAudioEvent* _movementStarted; // 0x38
	UAkAudioEvent* _movementStopped; // 0x40
	UAkAudioEvent* _noSurface; // 0x48
	TArray<FTireSurfaceAudioEntry> _soundGroups; // 0x50
};

struct UVehicleMountSlotIndicators : UUserWidget {
	UImage* _backgroundGradient; // 0x260
	UContentWidget* _vehicleMountSlotsContainer; // 0x268
};

struct UUI_Metabolism_RightPanel_C : UMetabolismRightPanel {
	UImage* BackgroundImage; // 0x298
};

struct UHapticFeedbackEffect_Buffer : UHapticFeedbackEffect_Base {
	TArray<char> Amplitudes; // 0x28
	int32_t SampleRate; // 0x38
};

struct UFlattenBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct ABP_WeaponBullet_30_Crafted_C : AProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
};

struct UUI_CTFParticipantStatsWidget_C : UUI_GameEventParticipantStatsWidget_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x318
	UTextBlock* Assists; // 0x320
	UHorizontalBox* BgRow; // 0x328
	UBorder* Border_1; // 0x330
	UBorder* Border_2; // 0x338
	UBorder* Border_384; // 0x340
	UBorder* Border_386; // 0x348
	UBorder* Border_387; // 0x350
	UBorder* Border_388; // 0x358
	UBorder* Border_389; // 0x360
	UTextBlock* Captures; // 0x368
	UTextBlock* Deaths; // 0x370
	UTextBlock* Headshots; // 0x378
	UBorder* InactiveOverlay; // 0x380
	UTextBlock* Kills; // 0x388
	UTextBlock* Number; // 0x390
	UBorder* NumberBorder; // 0x398
	UTextBlock* PlayerName; // 0x3a0
	UTextBlock* Score; // 0x3a8
	UBorder* SelectedOverlay; // 0x3b0
	UHorizontalBox* StatRow; // 0x3b8
};

struct UProceduralTorusToolProperties : UProceduralShapeToolProperties {
	float MajorRadius; // 0x70
	float MinorRadius; // 0x74
	int32_t TubeSlices; // 0x78
	int32_t CrossSectionSlices; // 0x7c
};

struct UGizmoConstantFrameAxisSource : UObject {
	FVector Origin; // 0x30
	FVector Direction; // 0x3c
	FVector TangentX; // 0x48
	FVector TangentY; // 0x54
};

struct UStatisticsDetailsWidget : UUserWidget {
	UStatisticsSubcategoryTab* _generalSubcategoryTab; // 0x260
	UStatisticsSubcategoryTab* _foodSubcategoryTab; // 0x268
	UStatisticsSubcategoryTab* _huntingSubcategoryTab; // 0x270
	UStatisticsSubcategoryTab* _fishingSubcategoryTab; // 0x278
	UStatisticsSubcategoryTab* _travelSubcategoryTab; // 0x280
	UStatisticsSubcategoryTab* _metabolismSubcategoryTab; // 0x288
	UStatisticsSubcategoryTab* _craftingSubcategoryTab; // 0x290
	UStatisticsSubcategoryTab* _combatSubcategoryTab; // 0x298
	UStatisticsSubcategoryTab* _eventsSubcategoryTab; // 0x2a0
	UWidgetSwitcher* _subcategorySwitcher; // 0x2a8
	UStatisticsListWidget* _generalStatisticsList; // 0x348
	UStatisticsListWidget* _foodStatisticsList; // 0x350
	UStatisticsListWidget* _huntingStatisticsList; // 0x358
	UStatisticsListWidget* _fishingStatisticsList; // 0x360
	UStatisticsListWidget* _travelStatisticsList; // 0x368
	UStatisticsListWidget* _metabolismStatisticsList; // 0x370
	UStatisticsListWidget* _craftingStatisticsList; // 0x378
	UStatisticsListWidget* _combatStatisticsList; // 0x380
	UStatisticsListWidget* _eventsStatisticsList; // 0x388
};

struct ADrinkItem : AFoodItem {
	UBasicGameResourceContainerComponent* _gameResourceContainer; // 0x910
};

struct UVehicleHudWidget : UDesignableUserWidget {
	UVehicleMountSlotIndicators* _mountSlotIndicators; // 0x278
};

struct AWeaponItem : AItem {
	uint32_t SizeXInHands; // 0x7c0
	uint32_t SizeYInHands; // 0x7c4
	uint32_t MinRange; // 0x7c8
	uint32_t MaxRange; // 0x7cc
	uint32_t AP; // 0x7d0
	uint32_t MagazineSize; // 0x7d4
	uint32_t FireModes; // 0x7d8
	uint32_t ROF; // 0x7dc
	uint32_t ReloadTime; // 0x7e0
};

struct UUI_TabModeTab_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UImage* BackgroundImage; // 0x280
	UTextBlock* HotkeyText; // 0x288
	UImage* Icon; // 0x290
	USizeBox* MainSizeBox; // 0x298
	UTextBlock* TitleText; // 0x2a0
	FText Title; // 0x2a8
	FText Hotkey; // 0x2c0
	bool _active; // 0x2d8
	FMulticastInlineDelegate Clicked; // 0x2e0
	UTexture2D* ActiveIcon; // 0x2f0
	UTexture2D* Inactiveicon; // 0x2f8
	bool _alerted; // 0x300
	FLinearColor InactiveUnalertedColor; // 0x304
	FLinearColor InactiveAlertedColor; // 0x314
	float AlertBlinkTime; // 0x324
};

struct UAdminLight : UPointLightComponent {
	UCurveFloat* _intensityVersusTimeOfDay; // 0x360
};

struct UUI_SpawnChoiceWidget_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UBorder* Border_1; // 0x280
	UButton* ChoiceButton; // 0x288
	UTextBlock* OptionText; // 0x290
	UTextBlock* PriceText; // 0x298
	UImage* ProgressBar; // 0x2a0
	UTextBlock* ProhibitedText; // 0x2a8
	UImage* SelectionArrow; // 0x2b0
	FText Text; // 0x2b8
	bool Selected; // 0x2d0
	FMulticastInlineDelegate OnClicked; // 0x2d8
	int32_t Price; // 0x2e8
	bool Disabled; // 0x2ec
	bool Prohibited; // 0x2ed
	float BorderFill; // 0x2f0
	UMaterialInstanceDynamic* ProgressMaterial; // 0x2f8
	bool Timeout; // 0x300
};

struct UUI_MicInputIndicator_C : UMicInputIndicator {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Image_1; // 0x268
	UImage* Image_5; // 0x270
	UImage* Image_6; // 0x278
	UImage* Image_7; // 0x280
	UImage* Image_8; // 0x288
	UImage* Image_33; // 0x290
	UOverlay* Overlay_28; // 0x298
	UImage* Ring; // 0x2a0
	UOverlay* RingsOverlay; // 0x2a8
	TArray<UWidget*> _rings; // 0x2b0
	TArray<float> _scales; // 0x2c0
	UVoiceChatComponent* VoiceChatComponent; // 0x2d0
	APawn* OwningActor; // 0x2d8
};

struct UAdminCommand_AddPrisonerBodyEffect : UAdminCommand {
	UPrisonerBodyEffect* _bodyEffectClass; // 0x80
};

struct UWarning_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	URetainerBox* RetainerBox_1; // 0x280
	UTextBlock* Text; // 0x288
	bool _shouldShake; // 0x290
	float _shakeTime; // 0x294
	float _shakeLength; // 0x298
	bool _shouldFade; // 0x29c
	float _fadeLength; // 0x2a0
	float _fadeDelay; // 0x2a4
	TArray<FMessageStruct> Queue; // 0x2a8
	bool _isReadyForNextMessage; // 0x2b8
};

struct UAnimNotify_WeaponUpdateAmmunitionMeshes : UAnimNotify {
	bool showReversed; // 0x38
	TArray<int32_t> ammoIndices; // 0x40
};

struct UWidgetBlueprintGeneratedClass : UBlueprintGeneratedClass {
	UWidgetTree* WidgetTree; // 0x328
	char bClassRequiresNativeTick : 1; // 0x330
	TArray<FDelegateRuntimeBinding> Bindings; // 0x338
	TArray<UWidgetAnimation*> Animations; // 0x348
	TArray<FName> NamedSlots; // 0x358
};

struct UPolyEditCutProperties : UInteractiveToolPropertySet {
	EPolyEditCutPlaneOrientation Orientation; // 0x60
	bool bSnapToVertices; // 0x64
};

struct UStereoLayerShapeEquirect : UStereoLayerShape {
	FBox2D LeftUVRect; // 0x28
	FBox2D RightUVRect; // 0x3c
	FVector2D LeftScale; // 0x50
	FVector2D RightScale; // 0x58
	FVector2D LeftBias; // 0x60
	FVector2D RightBias; // 0x68
};

struct UAnimNotify_PlaySoundOnOwner : UAnimNotify {
	UAkAudioEvent* AudioEvent; // 0x38
};

struct UNiagaraPrecompileContainer : UObject {
	TArray<UNiagaraScript*> Scripts; // 0x28
	UNiagaraSystem* System; // 0x38
};

struct UMetabolism_ICU_SPO2_Stats : UMetabolism_ICU_Expandable_Stats {
	UTextBlock* _spo2MinMax; // 0x278
	UTextBlock* _spo2TextValue; // 0x280
	UProgressBar* _spo2ProgBar; // 0x288
};

struct UJournalPanelWidget : UUserWidget {
	UWidgetSwitcher* _journalWidgetSwitcher; // 0x260
	UJournalMissionContainer* _mainStoryContainerWidget; // 0x268
	UJournalMissionContainer* _sideStoryContainerWidget; // 0x270
	UJournalMissionContainer* _tutorialContainerWidget; // 0x278
	UJournalObjectiveContainer* _objectivesContainerWidget; // 0x280
	UMissionTabWidget* _mainStoryTab; // 0x288
	UMissionTabWidget* _sideStoryTab; // 0x290
	UMissionTabWidget* _tutorialTab; // 0x298
	UImage* _firstTabDivider; // 0x2a0
	UImage* _secondTabDivider; // 0x2a8
};

struct UUI_FoodTooltipPanelSingleUse_C : UItemTooltipPanel {
	UImage* Image_1; // 0x2c8
	UImage* Image_2; // 0x2d0
	UImage* Image_3; // 0x2d8
	UImage* Image_5; // 0x2e0
	UImage* Image_6; // 0x2e8
	UImage* Image_7; // 0x2f0
	UUI_TooltipOverviewTextElement_C* UI_TooltipOverviewTextElement; // 0x2f8
	UUI_TooltipOverviewTextElement_C* UI_TooltipOverviewTextElement_C_1; // 0x300
	UUI_TooltipOverviewTextElement_C* UI_TooltipOverviewTextElement_C_2; // 0x308
	UUI_TooltipOverviewTextElement_C* UI_TooltipOverviewTextElement_C_3; // 0x310
	UUI_TooltipOverviewTextElement_C* UI_TooltipOverviewTextElement_C_4; // 0x318
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement; // 0x320
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_2; // 0x328
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_1; // 0x330
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_2; // 0x338
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_3; // 0x340
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_4; // 0x348
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_5; // 0x350
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_6; // 0x358
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_7; // 0x360
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_8; // 0x368
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_9; // 0x370
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_10; // 0x378
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_11; // 0x380
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_12; // 0x388
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_13; // 0x390
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_14; // 0x398
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_15; // 0x3a0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_16; // 0x3a8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_17; // 0x3b0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_18; // 0x3b8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_19; // 0x3c0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_20; // 0x3c8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_21; // 0x3d0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_22; // 0x3d8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_23; // 0x3e0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_24; // 0x3e8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_25; // 0x3f0
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_26; // 0x3f8
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_27; // 0x400
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_28; // 0x408
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_37; // 0x410
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_39; // 0x418
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_40; // 0x420
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_41; // 0x428
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_42; // 0x430
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_43; // 0x438
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_44; // 0x440
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_45; // 0x448
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_46; // 0x450
	UUI_TooltipOverviewTextParameterElement_C* UI_TooltipOverviewTextParameterElement_C_47; // 0x458
};

struct UClothPhysicalMeshDataBase_Legacy : UObject {
	TArray<FVector> Vertices; // 0x28
	TArray<FVector> Normals; // 0x38
	TArray<uint32_t> Indices; // 0x48
	TArray<float> InverseMasses; // 0x58
	TArray<FClothVertBoneData> BoneData; // 0x68
	int32_t NumFixedVerts; // 0x78
	int32_t MaxBoneWeights; // 0x7c
	TArray<uint32_t> SelfCollisionIndices; // 0x80
};

struct UAnimBoneCompressionSettings : UObject {
	TArray<UAnimBoneCompressionCodec*> Codecs; // 0x28
};

struct ULiveLinkSourceSettings : UObject {
	ELiveLinkSourceMode mode; // 0x28
	FLiveLinkSourceBufferManagementSettings BufferSettings; // 0x30
	FString ConnectionString; // 0x88
	ULiveLinkSourceFactory* Factory; // 0x98
};

struct UUI_Metabolism_RadialAttributeProgressBar_C : UMetabolismRadialAttributeProgressBar {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3c0
};

struct UExteriorCharacterSpawnerComponent : UCharacterSpawnerComponent {
	ECharacterSpawnerRange Range; // 0x230
};

struct ANavLinkProxy : AActor {
	TArray<FNavigationLink> PointLinks; // 0x230
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x240
	UNavLinkCustomComponent* SmartLinkComp; // 0x250
	bool bSmartLinkIsRelevant; // 0x258
	FMulticastInlineDelegate OnSmartLinkReached; // 0x260
};

struct ULuminARLightEstimate : UARBasicLightEstimate {
	TArray<float> AmbientIntensityNits; // 0x40
};

struct UZombieSoundComponent2 : UCharacterSoundComponent {
	UAkAudioEvent* RelaxedStanceEnteredAudioEvent; // 0xd8
	UAkAudioEvent* AlertedStanceEnteredAudioEvent; // 0xe0
	UAkAudioEvent* CombatStanceEnteredAudioEvent; // 0xe8
	UAkAudioEvent* FootstepAudioEvent; // 0xf0
	UAkAudioEvent* StopAllAudioEvent; // 0xf8
	UAkAudioEvent* DeathAudioEvent; // 0x100
	UAkAudioEvent* StartSearchCorpseAudioEvent; // 0x108
	UAkAudioEvent* StopSearchCorpseAudioEvent; // 0x110
};

struct U590A1_Reload_Event_NoChamber_C : UInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t LoadedAmmoCount; // 0xa8
	int32_t MaxAmmoCount; // 0xac
};

struct UEnvQueryGenerator_OnCircle : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue circleRadius; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb8
	FAIDataProviderIntValue NumberOfPoints; // 0xf0
	EPointOnCircleSpacingMethod PointOnCircleSpacingMethod; // 0x128
	FEnvDirection ArcDirection; // 0x130
	FAIDataProviderFloatValue ArcAngle; // 0x150
	float AngleRadians; // 0x188
	UEnvQueryContext* circleCenter; // 0x190
	bool bIgnoreAnyContextActorsWhenGeneratingCircle; // 0x198
	FAIDataProviderFloatValue CircleCenterZOffset; // 0x1a0
	FEnvTraceData TraceData; // 0x1d8
	char bDefineArc : 1; // 0x208
};

struct UTacticsSkill : UIntelligenceSkill {
	float _updateTime; // 0xf8
	float _serverUpdateTime; // 0xfc
	float _noSkillDetectionRange; // 0x100
	float _basicDetectionRange; // 0x104
	float _mediumDetectionRange; // 0x108
	float _advancedDetectionRange; // 0x10c
	float _aboveAdvancedDetectionRange; // 0x110
	float _noSkillDetectionTime; // 0x114
	float _basicDetectionTime; // 0x118
	float _mediumDetectionTime; // 0x11c
	float _advancedDetectionTime; // 0x120
	float _aboveAdvancedDetectionTime; // 0x124
	float _fadeOutTime; // 0x128
	UCurveFloat* _detectionTimeDistanceScale; // 0x130
	float _noSkillExperiencePerSecond; // 0x138
	float _basicExperiencePerSecond; // 0x13c
	float _mediumExperiencePerSecond; // 0x140
	float _advancedExperiencePerSecond; // 0x144
	float _tacticsDetectionCurveCoefficient1; // 0x148
	float _tacticsDetectionCurveCoefficient2; // 0x14c
	float _tacticsDetectionCurveCoefficient3; // 0x150
};

struct USourceEffectSimpleDelayPreset : USoundEffectSourcePreset {
	FSourceEffectSimpleDelaySettings Settings; // 0xa8
};

struct UFailurePenalty : UObject {
	bool _shouldExecuteOnClients; // 0x28
};

struct UGradedArcedProgressBar : UUserWidget {
	UImage* _fillImage; // 0x260
	UMaterialInstanceConstant* _fillMaterial; // 0x268
	FLinearColor _fillColorStart; // 0x270
	FLinearColor _fillColorMiddle; // 0x280
	FLinearColor _fillColorEnd; // 0x290
	float _maxRateOfChangePerSecond; // 0x2a0
};

struct UAsyncActionLoadPrimaryAssetList : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate completed; // 0x78
};

struct UItemAction : UObject {
	UItemActionDescription* _description; // 0x40
};

struct ASwitch : AActor {
	UStaticMeshComponent* Mesh; // 0x238
	FText _interactionText; // 0x240
};

struct UCustomZoneSettingsRegionsList : UUserWidget {
	UTextBlock* _regionCountDisplay; // 0x2a0
	UButton* _buttonAddRegion; // 0x2a8
	UScrollBox* _scrollBox; // 0x2b0
	UCustomZoneSettingsRegion* _regionWidgetClass; // 0x2b8
};

struct UPhysicsHandleComponent : UActorComponent {
	UPrimitiveComponent* GrabbedComponent; // 0xb0
	char bSoftAngularConstraint : 1; // 0xc0
	char bSoftLinearConstraint : 1; // 0xc0
	char bInterpolateTarget : 1; // 0xc0
	float LinearDamping; // 0xc4
	float LinearStiffness; // 0xc8
	float AngularDamping; // 0xcc
	float AngularStiffness; // 0xd0
	float InterpolationSpeed; // 0x140
};

struct UNiagaraSystem : UFXSystemAsset {
	bool bDumpDebugSystemInfo; // 0x30
	bool bDumpDebugEmitterInfo; // 0x31
	bool bRequireCurrentFrameData; // 0x32
	char bFixedBounds : 1; // 0x34
	UNiagaraEffectType* EffectType; // 0x38
	bool bOverrideScalabilitySettings; // 0x40
	TArray<FNiagaraSystemScalabilityOverride> ScalabilityOverrides; // 0x48
	FNiagaraSystemScalabilityOverrides SystemScalabilityOverrides; // 0x58
	TArray<FNiagaraEmitterHandle> EmitterHandles; // 0x68
	TArray<UNiagaraParameterCollectionInstance*> ParameterCollectionOverrides; // 0x78
	UNiagaraScript* SystemSpawnScript; // 0x88
	UNiagaraScript* SystemUpdateScript; // 0x90
	FNiagaraSystemCompiledData SystemCompiledData; // 0xa8
	FNiagaraUserRedirectionParameterStore ExposedParameters; // 0x2c0
	FBox FixedBounds; // 0x388
	bool bAutoDeactivate; // 0x3a4
	float WarmupTime; // 0x3a8
	int32_t WarmupTickCount; // 0x3ac
	float WarmupTickDelta; // 0x3b0
	bool bHasSystemScriptDIsWithPerInstanceData; // 0x3b4
	TArray<FName> UserDINamesReadInSystemScripts; // 0x3b8
};

struct UBoxComponent : UShapeComponent {
	FVector BoxExtent; // 0x460
	float LineThickness; // 0x46c
};

struct UMovieSceneObjectPropertyTrack : UMovieScenePropertyTrack {
	UObject* PropertyClass; // 0xb0
};

struct UCircularMenuSegmentGenericInfo : UCircularMenuSegmentInfo {
	FDelegate Action; // 0x80
};

struct UParticleModuleLocationBoneSocket : UParticleModuleLocationBase {
	ELocationBoneSocketSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	TArray<FLocationBoneSocketInfo> SourceLocations; // 0x40
	ELocationBoneSocketSelectionMethod SelectionMethod; // 0x50
	char bUpdatePositionEachFrame : 1; // 0x54
	char bOrientMeshEmitters : 1; // 0x54
	char bInheritBoneVelocity : 1; // 0x54
	float InheritVelocityScale; // 0x58
	FName SkelMeshActorParamName; // 0x5c
	int32_t NumPreSelectedIndices; // 0x64
};

struct AGameEventLocationMarker : AActor {
	FText LocationName; // 0x220
	UTexture2D* LocationImage; // 0x238
	UTexture2D* LocationImageGrayscale; // 0x240
	bool EligibleForRandomPick; // 0x248
	AGameEventBase* GameEventClass; // 0x250
	FGameEventParameters GameEventParameters; // 0x258
	AGameEventBorder* BorderClass; // 0x3e0
	FVector AreaCenterOffset; // 0x3e8
	float Radius; // 0x3f4
	TArray<FSpawnArea> SpawnAreas; // 0x3f8
	USphereComponent* Sphere; // 0x408
	UBillboardComponent* Sprite; // 0x410
};

struct UPrisonerBodySymptom_FeelingHot : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8
	float _temperatureDeltaAtMaxSeverity; // 0xbc
};

struct UNavLinkCustomComponent : UNavRelevantComponent {
	uint32_t NavLinkUserId; // 0xe8
	UNavArea* EnabledAreaClass; // 0xf0
	UNavArea* DisabledAreaClass; // 0xf8
	FNavAgentSelector SupportedAgents; // 0x100
	FVector LinkRelativeStart; // 0x104
	FVector LinkRelativeEnd; // 0x110
	ENavLinkDirection LinkDirection; // 0x11c
	char bLinkEnabled : 1; // 0x120
	char bNotifyWhenEnabled : 1; // 0x120
	char bNotifyWhenDisabled : 1; // 0x120
	char bCreateBoxObstacle : 1; // 0x120
	FVector ObstacleOffset; // 0x124
	FVector ObstacleExtent; // 0x130
	UNavArea* ObstacleAreaClass; // 0x140
	float BroadcastRadius; // 0x148
	float BroadcastInterval; // 0x14c
	ECollisionChannel BroadcastChannel; // 0x150
};

struct ULevelSequenceAnimSequenceLink : UAssetUserData {
	TArray<FLevelSequenceAnimSequenceLinkItem> AnimSequenceLinks; // 0x28
};

struct UMaterialExpressionNormalize : UMaterialExpression {
	FExpressionInput VectorInput; // 0x40
};

struct UTeamInvitationWidget : UDesignableUserWidget {
	FText InvitationText; // 0x278
	APrisoner* invitor; // 0x290
	APrisoner* invited; // 0x298
};

struct UEngineMessage : ULocalMessage {
	FString FailedPlaceMessage; // 0x28
	FString MaxedOutMessage; // 0x38
	FString EnteredMessage; // 0x48
	FString LeftMessage; // 0x58
	FString GlobalNameChange; // 0x68
	FString SpecEnteredMessage; // 0x78
	FString NewPlayerMessage; // 0x88
	FString NewSpecMessage; // 0x98
};

struct UBrainComponent : UActorComponent {
	UBlackboardComponent* BlackboardComp; // 0xb8
	AAIController* AIOwner; // 0xc0
};

struct USpawnDecalWhenParticleCollides : UParticleModuleEventSendToGame {
	TArray<FParticleCollisionDecalData> Decals; // 0x28
};

struct UARCandidateObject : UDataAsset {
	TArray<char> CandidateObjectData; // 0x30
	FString FriendlyName; // 0x40
	FBox BoundingBox; // 0x50
};

struct UGameplayTagsDeveloperSettings : UDeveloperSettings {
	FString DeveloperConfigName; // 0x38
	FName FavoriteTagSource; // 0x48
};

struct UInterpGroupInst : UObject {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct UPhysicalMaterialMask : UObject {
	int32_t UVChannelIndex; // 0x28
	TextureAddress AddressX; // 0x2c
	TextureAddress AddressY; // 0x2d
};

struct UInsertCartridge : UWeaponActionReloadSequence {
	FName MontageEndSectionName; // 0x90
};

struct UMovieSceneComponentMaterialTrack : UMovieSceneMaterialTrack {
	int32_t MaterialIndex; // 0x90
};

struct UTeleportComponent : UActorComponent {
	FTeleportRepData _repData; // 0xb8
};

struct UScrollableContent_C : UWindowsContent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b8
	UEditableTextBox* InputChatLine; // 0x2c0
	UOverlay* InputLineOverlay; // 0x2c8
	USafeZone* SafeZone_1; // 0x2d0
	UScrollBox* Scroll; // 0x2d8
	TArray<FText> _messageStrings; // 0x2e0
	FLinearColor _color; // 0x2f0
	FText _defaultTitle; // 0x300
	TArray<FText> TextArray; // 0x318
};

struct UNiagaraDataInterfaceArrayColor : UNiagaraDataInterfaceArray {
	TArray<FLinearColor> ColorData; // 0x50
};

struct UInterpTrackInstProperty : UInterpTrackInst {
	TFieldPath<FProperty> InterpProperty; // 0x28
	UObject* PropertyOuterObjectInst; // 0x48
};

struct UExistingMeshMaterialProperties : UInteractiveToolPropertySet {
	ESetMeshMaterialMode MaterialMode; // 0x60
	float CheckerDensity; // 0x64
	UMaterialInterface* OverrideMaterial; // 0x68
	UMaterialInstanceDynamic* CheckerMaterial; // 0x70
};

struct UTexture2DArray : UTexture {
	TextureAddress AddressX; // 0x130
	TextureAddress AddressY; // 0x131
	TextureAddress AddressZ; // 0x132
};

struct UOnsetNRT : UAudioSynesthesiaNRT {
	UOnsetNRTSettings* Settings; // 0x78
};

struct ULiftComponent : USceneComponent {
	TArray<FAerodynamicSurface> AerodynamicSurfaces; // 0x1f8
	FVector PropellerLocation; // 0x208
	float AirDensity; // 0x214
};

struct UMovieSceneLiveLinkTrack : UMovieScenePropertyTrack {
	ULiveLinkRole* TrackRole; // 0xb0
};

struct UModularTooltipElement : UUserWidget {
	UModularTooltipElementData* _data; // 0x260
	FDataTableRowHandle _neutralDispositionColor; // 0x268
	FDataTableRowHandle _goodDispositionColor; // 0x278
	FDataTableRowHandle _badDispositionColor; // 0x288
};

struct UAnimNotifyState_DrainStamina : UAnimNotifyState {
	EAnimNotifyStaminDrainType DrainType; // 0x30
	float AmountToDrain; // 0x34
	float Duration; // 0x38
	float RecoveryDelay; // 0x3c
	float RatioToRecover; // 0x40
	float RecoveryTime; // 0x44
};

struct ADoubleSlidingDoorStatic : ADoubleDoor {
	USceneComponent* ClosedPositionComponent0; // 0x410
	USceneComponent* ClosedPositionComponent1; // 0x418
	USceneComponent* OpenPositionComponent0; // 0x420
	USceneComponent* OpenPositionComponent1; // 0x428
};

struct ABandwidthTestActor : AActor {
	FBandwidthTestGenerator BandwidthGenerator; // 0x220
};

struct UParticleModuleMeshRotationRateOverLife : UParticleModuleRotationRateBase {
	FRawDistributionVector RotRate; // 0x30
	char bScaleRotRate : 1; // 0x78
};

struct UMyPluginObject : UObject {
	FMyPluginStruct MyStruct; // 0x28
};

struct AFieldSystemActor : AActor {
	UFieldSystemComponent* FieldSystemComponent; // 0x220
};

struct AFoodItem : AItem {
	float Volume; // 0x7c0
	float Energy; // 0x7c4
	float Water; // 0x7c8
	float EatingTime; // 0x7cc
	EDigestionGroup DigestionGroup; // 0x7d0
	float Fat; // 0x7d4
	float SaturatedFat; // 0x7d8
	float Sodium; // 0x7dc
	float Carbs; // 0x7e0
	float Fiber; // 0x7e4
	float Sugar; // 0x7e8
	float Proteins; // 0x7ec
	float Alcohol; // 0x7f0
	float Vitamin_A; // 0x7f4
	float Vitamin_B1; // 0x7f8
	float Vitamin_B2; // 0x7fc
	float Vitamin_B3; // 0x800
	float Vitamin_B4; // 0x804
	float Vitamin_B5; // 0x808
	float Vitamin_B6; // 0x80c
	float Vitamin_B9; // 0x810
	float Vitamin_B12; // 0x814
	float Vitamin_C; // 0x818
	float Vitamin_D; // 0x81c
	float Vitamin_E; // 0x820
	float Vitamin_K; // 0x824
	float Calcium; // 0x828
	float Iron; // 0x82c
	float Magnesium; // 0x830
	float Phosphorus; // 0x834
	float Potassium; // 0x838
	float Zinc; // 0x83c
	float Copper; // 0x840
	float Manganese; // 0x844
	float Selenium; // 0x848
	bool Cookable; // 0x84c
	float CookingTime; // 0x850
	float MinCookingTemperature; // 0x854
	float MaxCookingTemperature; // 0x858
	float MinCookingSpeed; // 0x85c
	float MaxCookingSpeed; // 0x860
	float ThermalConductivityFactor; // 0x864
	float QualitySensitivityFactor; // 0x868
	float FreezingTemperature; // 0x86c
	float RoomTemperature; // 0x870
	bool Spoilable; // 0x874
	float ShelfLife; // 0x878
	float SpoilageRateCooked; // 0x87c
	float SpoilageRateFrozen; // 0x880
	float SpoilageRateModifierWhileSealed; // 0x884
	bool IsConsumable; // 0x888
	bool CanCheckTaste; // 0x889
	UParticleSystemComponent* SteamComponent; // 0x890
	UParticleSystem* SteamParticles; // 0x898
	UParticleSystemComponent* SmokeComponent; // 0x8a0
	UParticleSystem* SmokeParticles; // 0x8a8
	UStaticMesh* ItemOpenedMesh; // 0x8b0
	UStaticMesh* ItemEmptyMesh; // 0x8b8
	UAkAudioEvent* StartEatingAudioEvent; // 0x8c0
	UAkAudioEvent* StopEatingAudioEvent; // 0x8c8
	UAkAudioEvent* StartCookingAudioEvent; // 0x8d0
	UAkAudioEvent* StopCookingAudioEvent; // 0x8d8
	UGameResourceType* _resourceTypeForConsumption; // 0x8e0
	float _caloriesBonus; // 0x8e8
	float _catchSicknessModifier; // 0x8ec
	bool _itemOpened; // 0x8f0
	float _temperature; // 0x8f4
	float _environmentTemperature; // 0x8f8
	bool _isCooking; // 0x8fc
	float _cookedAmount; // 0x900
};

struct USynthComponentMoto : USynthComponent {
	UMotoSynthPreset* MotoSynthPreset; // 0x6c0
	float RPM; // 0x6c8
};

struct UHitReactMapping : UDataAsset {
	FGameplayTagContainer HitReactTypes; // 0x30
	float RegainControlMultiplier; // 0x50
	FHitReactMagnitudeData HeadHit; // 0x58
	FHitReactMagnitudeData BodyHit; // 0x178
	FHitReactMagnitudeData LegsHit; // 0x298
	FHitReactLandingData LandingHit; // 0x3b8
};

struct UDrawPolygonToolSnapProperties : UInteractiveToolPropertySet {
	bool bEnableSnapping; // 0x60
	bool bSnapToWorldGrid; // 0x61
	bool bSnapToVertices; // 0x62
	bool bSnapToEdges; // 0x63
	bool bSnapToAngles; // 0x64
	bool bSnapToLengths; // 0x65
	float SegmentLength; // 0x68
	bool bHitSceneObjects; // 0x6c
	float HitNormalOffset; // 0x70
};

struct ULockpickingWidget : UMinigameWidget {
	TArray<AItem*> _lockpicks; // 0x290
	TArray<AItem*> _tensionTools; // 0x2a0
};

struct AVehicleCorpse : AActor {
	UStaticMeshComponent* _mesh; // 0x228
	UParticleSystem* _explosionParticles; // 0x230
	FTransform _explosionParticlesTransform; // 0x240
	UAkAudioEvent* _explosionAudioEvent; // 0x270
	float _explosionForceMagnitude; // 0x278
	TArray<FVehicleCorpseBurningParticles> _burningParticles; // 0x280
	UAkAudioEvent* _burningAudioEvent; // 0x290
	float _endOfLifeFadingTime; // 0x298
};

struct AClothesItem : AItem {
	UInventoryItemComponent* _inventoryComponent; // 0x7c0
	EClothesType _clothesType; // 0x7c8
	char _equipmentLayer; // 0x7c9
	uint32_t _warmth; // 0x7cc
	TArray<EClothesType> _clothesTypesToUnequip; // 0x7d0
	TArray<EClothesType> _clothesTypesToHide; // 0x7e0
	uint32_t _waterResistance; // 0x7f0
	float _inwardsWaterPropagationFactor; // 0x7f4
	float _outwardsWaterPropagationFactor; // 0x7f8
	float _camouflageBonus; // 0x7fc
	float _damageWhenEquipped; // 0x800
	float _dirtinessWhenEquipped; // 0x804
	float _thermalConductivityFactor; // 0x808
	bool _canBeEquipped; // 0x80c
	float _dirtiness; // 0x810
	float _smallMaterialDamageLimit; // 0x814
	float _bigMaterialDamageLimit; // 0x818
	UStaticMesh* _femaleEquippedStaticMesh; // 0x820
	UStaticMesh* _maleEquippedStaticMesh; // 0x828
	USkeletalMesh* _femaleEquippedSkeletalMesh; // 0x830
	USkeletalMesh* _maleEquippedSkeletalMesh; // 0x838
	TArray<UMaterialInstance*> _femaleEquippedMaterialsOverride; // 0x840
	TArray<UMaterialInstance*> _maleEquippedMaterialsOverride; // 0x850
	bool _coversWrists; // 0x860
	bool _hidesHair; // 0x861
	bool _hidesFacialHair; // 0x862
	float _maxFemaleHairLength; // 0x864
	float _maxMaleHairLength; // 0x868
	float _maxFacialHairLength; // 0x86c
	float _bellyJiggleMultiplier; // 0x870
	float _breastJiggleMultiplier; // 0x874
	uint32_t _armor; // 0x878
	float _hardness; // 0x87c
	float _projectileHitEnergyAbsorption; // 0x880
	float _projectileHitEnergyDamagedAbsorption; // 0x884
	float _energyThroughputRatio; // 0x888
	float _totalEnergyAbsorption; // 0x88c
	float _sharpMeleeDamageReduction; // 0x890
	float _bluntMeleeDamageReduction; // 0x894
	uint32_t _capacityX; // 0x898
	uint32_t _capacityY; // 0x89c
	TArray<UClothesModifierItemTag*> _clothesModifierTags; // 0x8a8
	TMap<UClothesModifierItemTag*, FClothesMeshPair> _meshOverridesForModifiers; // 0x8b8
	char _materialParametersReplicated; // 0x908
	UInventoryContainer2D* _inventoryContainer2D; // 0x918
};

struct UGameplayTask : UObject {
	FName InstanceName; // 0x30
	ETaskResourceOverlapPolicy ResourceOverlapPolicy; // 0x3a
	UGameplayTask* ChildTask; // 0x60
};

struct UMessageContainer_C : UDesignableUserWidget {
	UVerticalBox* Messages; // 0x278
};

struct UCompassWidget_C : UCompassWidget {
	UImage* CompassTick; // 0x2a0
	URetainerBox* RetainerBox_1; // 0x2a8
};

struct UFoodItemState : UItemState {
	float Temperature; // 0xf8
	float EnvironmentTemperature; // 0xfc
	float CookedAmount; // 0x100
	float CookedQuality; // 0x104
	bool ItemOpened; // 0x108
};

struct UMediaComponent : UActorComponent {
	UMediaTexture* MediaTexture; // 0xb0
	UMediaPlayer* MediaPlayer; // 0xb8
};

struct UUI_ContinueOrNewCharacterDialog_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UUI_TrashMenuButton_C* ContinueButton; // 0x268
	UImage* Image_11; // 0x270
	UTextBlock* MainText; // 0x278
	UUI_TrashMenuButton_C* NewCharacterButton; // 0x280
	FMulticastInlineDelegate Continue; // 0x288
	FMulticastInlineDelegate New; // 0x298
	FString Ip; // 0x2a8
	int32_t GameplayPort; // 0x2b8
	int32_t ResponsePort; // 0x2bc
	FString AuthToken; // 0x2c0
	UCanvasPanel* Canvas; // 0x2d0
};

struct ABP_WeaponBullet_792x58_Crafted_C : AProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
};

struct UCameraModifier : UObject {
	char bDebug : 1; // 0x28
	char bExclusive : 1; // 0x28
	char Priority; // 0x2c
	APlayerCameraManager* CameraOwner; // 0x30
	float AlphaInTime; // 0x38
	float AlphaOutTime; // 0x3c
	float Alpha; // 0x40
};

struct URuntimeAudioImporterLibrary : UObject {
	FMulticastInlineDelegate OnProgress; // 0x28
	FMulticastInlineDelegate OnResult; // 0x38
};

struct UParticleModuleVectorFieldScale : UParticleModuleVectorFieldBase {
	UDistributionFloat* VectorFieldScale; // 0x30
	FRawDistributionFloat VectorFieldScaleRaw; // 0x38
};

struct USculptMaxBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float MaxHeight; // 0x68
	bool bUseFixedHeight; // 0x6c
	float FixedHeight; // 0x70
};

struct AWaterBodyCustom : AWaterBody {
	UCustomMeshGenerator* CustomGenerator; // 0xdd0
};

struct UUpdateableNotificationDescription : UBasicNotificationDescription {
	FString notificationName; // 0x58
};

struct UMaterialExpressionArctangent : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMicroTransactionBase : UPlatformInterfaceBase {
	TArray<FPurchaseInfo> AvailableProducts; // 0x38
	FString LastError; // 0x48
	FString LastErrorSolution; // 0x58
};

struct UParticleModuleSize_Seeded : UParticleModuleSize {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct UItemLightDisplay : UUserWidget {
	UImage* _itemImage; // 0x278
	UImage* _emptySlotBackground; // 0x280
	USizeBox* _sizeBox; // 0x288
	UTextBlock* _durability; // 0x290
	UTextBlock* _uses; // 0x298
	UBorder* _selectionBorder; // 0x2a0
	UOverlay* _itemDataOverlay; // 0x2a8
	UProgressBar* _durabilityProgressBar; // 0x2b0
	UProgressBar* _usesProgressBar; // 0x2b8
	float _width; // 0x2c0
	float _height; // 0x2c4
};

struct UUI_CircularMenu_C : UCircularMenuWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	UImage* CenterImage; // 0x2c8
};

struct AHUD : AActor {
	APlayerController* PlayerOwner; // 0x220
	char bLostFocusPaused : 1; // 0x228
	char bShowHUD : 1; // 0x228
	char bShowDebugInfo : 1; // 0x228
	int32_t CurrentTargetIndex; // 0x22c
	char bShowHitBoxDebugInfo : 1; // 0x230
	char bShowOverlays : 1; // 0x230
	char bEnableDebugTextShadow : 1; // 0x230
	TArray<AActor*> PostRenderedActors; // 0x238
	TArray<FName> DebugDisplay; // 0x250
	TArray<FName> ToggledDebugCategories; // 0x260
	UCanvas* Canvas; // 0x270
	UCanvas* DebugCanvas; // 0x278
	TArray<FDebugTextInfo> DebugTextList; // 0x280
	AActor* ShowDebugTargetDesiredClass; // 0x290
	AActor* ShowDebugTargetActor; // 0x298
};

struct UPlatformEventsComponent : UActorComponent {
	FMulticastInlineDelegate PlatformChangedToLaptopModeDelegate; // 0xb0
	FMulticastInlineDelegate PlatformChangedToTabletModeDelegate; // 0xc0
};

struct UNiagaraDataInterfaceVector4Curve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
	FRichCurve ZCurve; // 0x170
	FRichCurve WCurve; // 0x1f0
};

struct UEditableStaticMeshAdapter : UEditableMeshAdapter {
	UStaticMesh* StaticMesh; // 0x28
	UStaticMesh* OriginalStaticMesh; // 0x30
	int32_t StaticMeshLODIndex; // 0x38
};

struct UGroomHairGroupsPreview : UObject {
	TArray<FGroomHairGroupPreview> Groups; // 0x28
};

struct UGameEventLeaderboardWidget : UDesignableUserWidget {
	TArray<FEventsRankingStatsItem> TopPlayersStats; // 0x278
	TArray<FEventsRankingStatsItem> PlayerRankingStats; // 0x288
	int32_t playerRank; // 0x298
};

struct ULockItemTag : UUpgradeItemTag {
	FLockData LockData; // 0x38
};

struct UNiagaraComponent : UFXSystemComponent {
	UNiagaraSystem* Asset; // 0x448
	ENiagaraTickBehavior TickBehavior; // 0x450
	FNiagaraUserRedirectionParameterStore OverrideParameters; // 0x458
	char bForceSolo : 1; // 0x520
	char bEnableGpuComputeDebug : 1; // 0x520
	char bAutoDestroy : 1; // 0x54c
	char bRenderingEnabled : 1; // 0x54c
	char bAutoManageAttachment : 1; // 0x54c
	char bAutoAttachWeldSimulatedBodies : 1; // 0x54c
	float MaxTimeBeforeForceUpdateTransform; // 0x550
	TArray<FNiagaraMaterialOverride> EmitterMaterials; // 0x558
	FMulticastInlineDelegate OnSystemFinished; // 0x570
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x580
	FName AutoAttachSocketName; // 0x588
	EAttachmentRule AutoAttachLocationRule; // 0x590
	EAttachmentRule AutoAttachRotationRule; // 0x591
	EAttachmentRule AutoAttachScaleRule; // 0x592
};

struct UGameplayTagsSettings : UGameplayTagsList {
	bool ImportTagsFromConfig; // 0x48
	bool WarnOnInvalidTags; // 0x49
	bool FastReplication; // 0x4a
	FString InvalidTagCharacters; // 0x50
	TArray<FGameplayTagCategoryRemap> CategoryRemapping; // 0x60
	TArray<FSoftObjectPath> GameplayTagTableList; // 0x70
	TArray<FGameplayTagRedirect> GameplayTagRedirects; // 0x80
	TArray<FName> CommonlyReplicatedTags; // 0x90
	int32_t NumBitsForContainerSize; // 0xa0
	int32_t NetIndexFirstBitSegment; // 0xa4
	TArray<FRestrictedConfigInfo> RestrictedConfigFiles; // 0xa8
};

struct UUI_SquadMember_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UHorizontalBox* CommandBox; // 0x268
	UButton* DemoteButton; // 0x270
	UHorizontalBox* FamePointBox; // 0x278
	UTextBlock* FameText; // 0x280
	UTextBlock* FPText; // 0x288
	UButton* HoverButton; // 0x290
	UButton* KickButton; // 0x298
	UButton* MakeLeaderButton; // 0x2a0
	UTextBlock* PlayerName; // 0x2a8
	UButton* PromoteButton; // 0x2b0
	UImage* RankIcon; // 0x2b8
	FDbIntegerId UserProfileId; // 0x2c0
	EConZSquadMemberRank Rank; // 0x2c8
	bool CanBeManagedByPlayer; // 0x2c9
};

struct UConZBuoyancyComponent : UActorComponent {
	TArray<FBuoyancyTestPoint> TestPoints; // 0xb0
	int32_t NumTestPointGroups; // 0xc0
	FVector VelocityDamper; // 0xc4
	float FluidLinearDamping; // 0xd0
	float FluidAngularDamping; // 0xd4
	bool ClampMaxVelocity; // 0xd8
	float MaxUnderwaterVelocity; // 0xdc
	bool ShouldApplyWaterVelocity; // 0xe0
	float WaterVelocityMultiplier; // 0xe4
	bool bDrawDebug; // 0xe8
	bool _isUnderwater; // 0xe9
	float _densityMultiplier; // 0xec
};

struct UItemTooltipPanelElement : UDesignableUserWidget {
	FName _elementName; // 0x278
};

struct UVehicle2WAnimInstance : UDcxVehicleAnimInstance {
	float Speed; // 0xa38
	float SpeedKph; // 0xa3c
	float SteerRotation; // 0xa40
	float SteerAmount; // 0xa44
	float ThrottleAmount; // 0xa48
	float BrakeAmount; // 0xa4c
	FRotator FrontWheelRotator; // 0xa50
	FRotator RearWheelRotator; // 0xa5c
	FRotator TransmissionRotator; // 0xa68
	float FrontSuspensionOffset; // 0xa74
	float RearSuspensionRotation; // 0xa78
	FVector MeshLocation; // 0xa7c
	bool IsMounteeDriver; // 0xa88
};

struct UMovieSceneGeometryCacheTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
};

struct UUI_TeammateName_C : UUserWidget {
	UTextBlock* PlayerName; // 0x260
	FString _name; // 0x268
};

struct UReplicationGraphNode : UObject {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct ABP_Wristwatch_C : AWristwatch {
	FPointerToUberGraphFrame UberGraphFrame; // 0x250
};

struct UAssetManagerSettings : UDeveloperSettings {
	TArray<FPrimaryAssetTypeInfo> PrimaryAssetTypesToScan; // 0x38
	TArray<FDirectoryPath> DirectoriesToExclude; // 0x48
	TArray<FPrimaryAssetRulesOverride> PrimaryAssetRules; // 0x58
	TArray<FPrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules; // 0x68
	bool bOnlyCookProductionAssets; // 0x78
	bool bShouldManagerDetermineTypeAndName; // 0x79
	bool bShouldGuessTypeAndNameInEditor; // 0x7a
	bool bShouldAcquireMissingChunksOnLoad; // 0x7b
	TArray<FAssetManagerRedirect> PrimaryAssetIdRedirects; // 0x80
	TArray<FAssetManagerRedirect> PrimaryAssetTypeRedirects; // 0x90
	TArray<FAssetManagerRedirect> AssetPathRedirects; // 0xa0
	TSet<FName> MetaDataTagsForAssetRegistry; // 0xb0
};

struct USteamNetConnection : UIpConnection {
	bool bIsPassthrough; // 0x1b90
};

struct UGeometryCacheComponent : UMeshComponent {
	UGeometryCache* GeometryCache; // 0x470
	bool bRunning; // 0x478
	bool bLooping; // 0x479
	float StartTimeOffset; // 0x47c
	float PlaybackSpeed; // 0x480
	int32_t NumTracks; // 0x484
	float ElapsedTime; // 0x488
	float Duration; // 0x4bc
	bool bManualTick; // 0x4c0
};

struct ACustomMapBorder : AActor {
	UStaticMeshComponent* Mesh; // 0x220
	UStaticMeshComponent* TournamentMesh; // 0x228
	UMaterialInstanceDynamic* Material; // 0x230
	FVector2D _minCustomMapSize; // 0x238
	bool _isInTournamentMode; // 0x240
	float _tournamentModeCompletionPercentage; // 0x244
	float _nearingCompletionPercentage; // 0x248
	FVector2D _minTournamentMapSize; // 0x254
	FBox2D _tournamentFinalBorderDimensions; // 0x25c
	bool _active; // 0x270
	FBox2D _customMapDimensions; // 0x274
};

struct UInterpTrackInstFloatProp : UInterpTrackInstProperty {
	float ResetFloat; // 0x58
};

struct UImplicitSmoothProperties : UInteractiveToolPropertySet {
	float SmoothSpeed; // 0x60
	float Smoothness; // 0x64
	bool bPreserveUVs; // 0x68
	float VolumeCorrection; // 0x6c
};

struct UItemAnimInstance : UAnimInstance {
	EPrisonerStance _owningPrisonerStance; // 0x2c0
	bool _isOwningPrisonerInFirstPersonView; // 0x2c1
};

struct UTextureRenderTarget2D : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	FLinearColor ClearColor; // 0xe8
	TextureAddress AddressX; // 0xf8
	TextureAddress AddressY; // 0xf9
	char bForceLinearGamma : 1; // 0xfa
	char bHDR : 1; // 0xfa
	char bGPUSharedFlag : 1; // 0xfa
	ETextureRenderTargetFormat RenderTargetFormat; // 0xfb
	char bAutoGenerateMips : 1; // 0xfc
	TextureFilter MipsSamplerFilter; // 0xfd
	TextureAddress MipsAddressU; // 0xfe
	TextureAddress MipsAddressV; // 0xff
	EPixelFormat OverrideFormat; // 0x100
};

struct UNiagaraEmitter : UObject {
	bool bLocalSpace; // 0x28
	bool bDeterminism; // 0x29
	int32_t randomSeed; // 0x2c
	EParticleAllocationMode AllocationMode; // 0x30
	int32_t PreAllocationCount; // 0x34
	FNiagaraEmitterScriptProperties UpdateScriptProps; // 0x38
	FNiagaraEmitterScriptProperties SpawnScriptProps; // 0x60
	ENiagaraSimTarget SimTarget; // 0x88
	FBox FixedBounds; // 0x8c
	int32_t MinDetailLevel; // 0xa8
	int32_t MaxDetailLevel; // 0xac
	FNiagaraDetailsLevelScaleOverrides GlobalSpawnCountScaleOverrides; // 0xb0
	FNiagaraPlatformSet Platforms; // 0xc8
	FNiagaraEmitterScalabilityOverrides ScalabilityOverrides; // 0xf8
	char bInterpolatedSpawning : 1; // 0x108
	char bFixedBounds : 1; // 0x108
	char bUseMinDetailLevel : 1; // 0x108
	char bUseMaxDetailLevel : 1; // 0x108
	char bOverrideGlobalSpawnCountScale : 1; // 0x108
	char bRequiresPersistentIDs : 1; // 0x108
	char bCombineEventSpawn : 1; // 0x108
	float MaxDeltaTimePerTick; // 0x10c
	uint32_t DefaultShaderStageIndex; // 0x110
	uint32_t MaxUpdateIterations; // 0x114
	TSet<uint32_t> SpawnStages; // 0x118
	char bSimulationStagesEnabled : 1; // 0x168
	char bDeprecatedShaderStagesEnabled : 1; // 0x168
	char bLimitDeltaTime : 1; // 0x168
	FString UniqueEmitterName; // 0x170
	TArray<UNiagaraRendererProperties*> RendererProperties; // 0x180
	TArray<FNiagaraEventScriptProperties> EventHandlerScriptProps; // 0x190
	TArray<UNiagaraSimulationStageBase*> SimulationStages; // 0x1a0
	UNiagaraScript* GPUComputeScript; // 0x1b0
	TArray<FName> SharedEventGeneratorIds; // 0x1b8
};

struct UNotificationDescription : UObject {
	ENotificationTarget Target; // 0x28
	FDbIntegerId TargetUserProfileId; // 0x30
	bool ShouldSendIfClientOffline; // 0x38
};

struct UInterpTrackInstEvent : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UBP_M1_InsertClipInsertBulletLoop_C : UInsertMagazineInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
	int32_t LoadedAmmoCount; // 0xa8
};

struct ABP_WeaponBullet_WoodenCrossbowBolt_C : AProjectileArrow {
	FPointerToUberGraphFrame UberGraphFrame; // 0x458
	UParticleSystemComponent* ParticleSystem; // 0x460
};

struct UPawnActionsComponent : UActorComponent {
	APawn* ControlledPawn; // 0xb0
	TArray<FPawnActionStack> ActionStacks; // 0xb8
	TArray<FPawnActionEvent> ActionEvents; // 0xc8
	UPawnAction* CurrentAction; // 0xd8
};

struct UMaterialExpressionDistanceFieldGradient : UMaterialExpression {
	FExpressionInput position; // 0x40
};

struct APawn : AActor {
	char bUseControllerRotationPitch : 1; // 0x228
	char bUseControllerRotationYaw : 1; // 0x228
	char bUseControllerRotationRoll : 1; // 0x228
	char bCanAffectNavigationGeneration : 1; // 0x228
	float BaseEyeHeight; // 0x22c
	EAutoReceiveInput AutoPossessPlayer; // 0x230
	EAutoPossessAI AutoPossessAI; // 0x231
	char RemoteViewPitch; // 0x232
	AController* AIControllerClass; // 0x238
	APlayerState* PlayerState; // 0x240
	AController* LastHitBy; // 0x250
	AController* Controller; // 0x258
	FVector ControlInputVector; // 0x264
	FVector LastControlInputVector; // 0x270
};

struct UBlueprintGeneratedClass : UClass {
	int32_t NumReplicatedProperties; // 0x230
	char bHasNativizedParent : 1; // 0x234
	char bHasCookedComponentInstancingData : 1; // 0x234
	TArray<UDynamicBlueprintBinding*> DynamicBindingObjects; // 0x238
	TArray<UActorComponent*> ComponentTemplates; // 0x248
	TArray<UTimelineTemplate*> Timelines; // 0x258
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x268
	USimpleConstructionScript* SimpleConstructionScript; // 0x278
	UInheritableComponentHandler* InheritableComponentHandler; // 0x280
	UStructProperty* UberGraphFramePointerProperty; // 0x288
	UFunction* UberGraphFunction; // 0x298
	TMap<FName, FBlueprintCookedComponentInstancingData> CookedComponentInstancingData; // 0x2a0
};

struct UInteractiveTool : UObject {
	UInputBehaviorSet* InputBehaviors; // 0x48
	TArray<UObject*> ToolPropertyObjects; // 0x50
};

struct UBlueprintCore : UObject {
	UObject* SkeletonGeneratedClass; // 0x28
	UObject* GeneratedClass; // 0x30
	bool bLegacyNeedToPurgeSkelRefs; // 0x38
	FGuid BlueprintGuid; // 0x3c
};

struct UParticleModuleLocationDirect : UParticleModuleLocationBase {
	FRawDistributionVector Location; // 0x30
	FRawDistributionVector LocationOffset; // 0x78
	FRawDistributionVector ScaleFactor; // 0xc0
	FRawDistributionVector Direction; // 0x108
};

struct UDcxVehicleDriveRawInput : UDcxVehicleWheelsRawInput {
	int32_t ClutchIndex; // 0x40
	bool bGearUp; // 0x44
	bool bGearDown; // 0x45
};

struct UMissionResult : UUserWidget {
	UOverlay* _resultTitleOverlay; // 0x260
	UTextBlock* _resultTitleDescription; // 0x268
	UOverlay* _resultRewardContainerOverlay; // 0x270
	UVerticalBox* _resultRewardContainer; // 0x278
};

struct UDrawPolygonTool : UInteractiveTool {
	UDrawPolygonToolStandardProperties* PolygonProperties; // 0x88
	UDrawPolygonToolSnapProperties* SnapProperties; // 0x90
	UNewMeshMaterialProperties* MaterialProperties; // 0x98
	UPreviewMesh* PreviewMesh; // 0x150
	UTransformGizmo* PlaneTransformGizmo; // 0x158
	UTransformProxy* PlaneTransformProxy; // 0x160
	UPlaneDistanceFromHitMechanic* HeightMechanic; // 0x540
};

struct AHandheldSkeletalMeshLightItem : AHandheldLightItem {
	USkeletalMeshComponent* SkeletalMesh; // 0x7f0
};

struct UTraderSellPanel : UUserWidget {
	UVerticalBox* _sellList; // 0x260
	UTextBlock* _prisonerCashOnHand; // 0x268
	UTextBlock* _prisonerCashInBank; // 0x270
	UTextBlock* _traderFunds; // 0x278
	UTextBlock* _saleTotal; // 0x280
	UTextBlock* _warningMessage; // 0x288
	UButton* _btnCancel; // 0x290
	UButton* _btnSell; // 0x298
	UTraderSellListEntry* _sellListEntryWidgetClass; // 0x2a0
};

struct AWeaponAttachmentScopeRail : AWeaponAttachment {
	FName ScopeSocketName; // 0x7e0
};

struct UCustomGUIWindow_C : UDesignableUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	FText _title; // 0x280
};

struct UDataSingleton : UObject {
	TArray<FProjectileImpulseMultiplier> ImpulseMultipliers; // 0x28
	FCanvasIcon CrosshairIconUp; // 0x38
	FCanvasIcon CrosshairIconDown; // 0x50
	FCanvasIcon CrosshairIconLeft; // 0x68
	FCanvasIcon CrosshairIconRight; // 0x80
	FCanvasIcon CrosshairIconCenter; // 0x98
	FCanvasIcon CrosshairIconCenterThrowing; // 0xb0
	FCanvasIcon CrosshairBlockedIcon; // 0xc8
	FCanvasIcon BowSpreadCircle; // 0xe0
	UTexture2D* SingleFireIcon; // 0xf8
	UTexture2D* AutoFireIcon; // 0x100
	UTexture2D* BurstFireIcon; // 0x108
	float WeaponSpreadBase; // 0x110
	FWeaponSpreadData WeaponSpreadData[0x9]; // 0x114
	float BowArrowDeviationDegreesAngleByStep; // 0x354
	FWeaponViewKickData WeaponViewKickData[0x9]; // 0x358
	float WeaponAimingAutoCorrectAngle; // 0x430
	FWeaponMalfunctionProbabilityCurves WeaponMalfunctionProbabilityCurves; // 0x438
	float UpperBoundStaminaAmountToDrain; // 0x7f0
	float LowerBoundWeaponWeightForStaminaDrain; // 0x7f4
	float UpperBoundWeaponWeightForStaminaDrain; // 0x7f8
	FFloatInterval FOVMultiplierRange; // 0x7fc
	float WeaponFOVWhileScoping; // 0x804
	UCurveFloat* DownTheSightsModeLerpCurve; // 0x808
	UMaterialParameterCollection* WeaponFOVParameterCollection; // 0x810
	FFloatInterval LoadMagazineSpeedModifierSkillFactor; // 0x818
	FFloatInterval LoadMagazineSpeedModifierDexterityFactor; // 0x820
	FCanvasIcon InteractIcon; // 0x828
	FCanvasIcon BondageIcon; // 0x840
	UInputDataAsset* DefaultInputData; // 0x858
	UDerivedWidgetsData* Widgets; // 0x860
	UMaterialInterface* PlaceablePrimaryMatValid; // 0x868
	UMaterialInterface* PlaceablePrimaryMatInvalid; // 0x870
	UMaterialInterface* PlaceablePrimaryMatFriendlyFlag; // 0x878
	UMaterialInterface* PlaceableOutlineMat; // 0x880
	UMaterialInterface* PlaceableDepthMat; // 0x888
	UMaterialInterface* PlaceableMaterialRadiusSphere; // 0x890
	UMaterialInterface* WidgetMaterial; // 0x898
	UBaseItemTag* DivingMaskItemTag; // 0x8a0
	UBaseItemTag* ToolBoxItemTag; // 0x8a8
	UBaseItemTag* MushroomItemTag; // 0x8b0
	UBaseItemTag* AlcoholItemTag; // 0x8b8
	UBaseItemTag* SoapItemTag; // 0x8c0
	AItem* AnimalSkinItemClass; // 0x8c8
	UTrapData* TrapData; // 0x8d0
	ADogTagItem* DogTagItemClass; // 0x8d8
	ECollisionChannel ItemObstructionCollisionChannel; // 0x8e0
	bool ShouldTraceComplexCollisionForItemObstruction; // 0x8e1
	TSet<FPrimaryAssetId> AssetsHiddenFromAdminCommands; // 0x8e8
	UMissionDataGroup* MissonDataGroup; // 0x938
	UDialogueData* DialogueData; // 0x940
	USoundClass* VoiceSoundClass; // 0x948
	UNetworkDataIdAsset* NetworkDataIdAsset; // 0x950
	UWashClothesData* WashClothesData; // 0x958
	UBuryData* BuryData; // 0x960
	UEmblemData* SquadEmblemData; // 0x968
	UMaterialInterface* ItemTetrisMaterial; // 0x970
	UPhysicalSurfacesEffectsData* PhysicalSurfaceEffectsData; // 0x978
	UTexture2D* ChestLockedIcon; // 0x980
	UTexture2D* ChestUnlockedIcon; // 0x988
	UAkAudioEvent* ChestLockingSound; // 0x990
	UGlobalUIData* UIData; // 0x998
	UParticleSystem* WaterSplashParticleSystem; // 0x9a0
	UAkAudioEvent* WaterSplashAudioEvent; // 0x9a8
	TMap<FGameplayTag, float> MetabolismConsumptionDurations; // 0x9b0
	TMap<FGameplayTag, FMetabolismDigestionDurationData> MetabolismDigestionDurations; // 0xa00
	USurfaceHardnessData* SurfaceHardnessData; // 0xa50
	UDamageData* DamageData; // 0xa58
	UDamageCustomization* DefaultDamageCustomizationClass; // 0xa60
	UDamageCustomization* LandingDamageCustomizationClass; // 0xa68
	UGameResourceType* RainWaterResourceClass; // 0xa70
	TArray<FGameResourceMixingRule> GameResourceMixingRules; // 0xa78
	float _noiseLevelValues[0x6]; // 0xb70
	FAITeamAttitudeData _teamAttitudes[0x6]; // 0xb88
	float _basePriceModifierPerTradeCategory[0x1a]; // 0xc00
	float _baseSalePriceReductionModifierPerTradeCategory[0x1a]; // 0xc68
	int32_t _bankAccountInitialDeposit; // 0xcd0
	ADepotItem* _depotItemClass; // 0xcd8
	AItem* _vehicleLockItemClass; // 0xce0
};

struct UMovieSceneColorTrack : UMovieScenePropertyTrack {
	bool bIsSlateColor; // 0xb0
};

struct UPrisonerDebugUI_MainWidget : UUserWidget {
	UComboBoxString* _prisonersComboBox; // 0x260
	UTextBlock* _lifeTimeTextBlock; // 0x268
	UTextBlock* _strengthTextBlock; // 0x270
	UTextBlock* _constitutionTextBlock; // 0x278
	UTextBlock* _dexterityTextBlock; // 0x280
	UTextBlock* _intelligenceTextBlock; // 0x288
	UTextBlock* _healthTextBlock; // 0x290
	UTextBlock* _bodyTemperatureTextBlock; // 0x298
	UTextBlock* _apparentTemperatureTextBlock; // 0x2a0
	UTextBlock* _clothesTemperatureTextBlock; // 0x2a8
	UListView* _skillsListView; // 0x2b0
	UListView* _bodyConditionsListView; // 0x2b8
	UPrisonerUIData* _data; // 0x2c8
	UPrisonerUITooltipCache* _tooltipCache; // 0x2d0
	float _dataRequestTimerInterval; // 0x2dc
	float _dataApplyTimerInterval; // 0x2e4
};

struct ABP_Tournament_C : ATournament {
	USceneComponent* DefaultSceneRoot; // 0x270
};

struct UBTDecorator_DoesPathExist : UBTDecorator {
	FBlackboardKeySelector BlackboardKeyA; // 0x68
	FBlackboardKeySelector BlackboardKeyB; // 0x90
	char bUseSelf : 1; // 0xb8
	EPathExistanceQueryType PathQueryType; // 0xbc
	UNavigationQueryFilter* FilterClass; // 0xc0
};

struct UUI_GameMenu_C : UPauseMenu {
	UVerticalBox* ButtonBox; // 0x378
	UOverlay* ButtonsOverlay; // 0x380
	UImage* Image_104; // 0x388
	UTextBlock* TextBlock_116; // 0x390
};

struct UFieldSystemComponent : UPrimitiveComponent {
	UFieldSystem* FieldSystem; // 0x448
	TArray<TSoftObjectPtr<AChaosSolverActor>> SupportedSolvers; // 0x460
};

struct ULandscapeHeightfieldCollisionComponent : UPrimitiveComponent {
	TArray<ULandscapeLayerInfoObject*> ComponentLayerInfos; // 0x448
	int32_t SectionBaseX; // 0x458
	int32_t SectionBaseY; // 0x45c
	int32_t CollisionSizeQuads; // 0x460
	float CollisionScale; // 0x464
	int32_t SimpleCollisionSizeQuads; // 0x468
	TArray<char> CollisionQuadFlags; // 0x470
	FGuid HeightfieldGuid; // 0x480
	FBox CachedLocalBox; // 0x490
	LazyObjectProperty RenderComponent; // 0x4ac
	TArray<UPhysicalMaterial*> CookedPhysicalMaterials; // 0x4d8
};

struct UMeshEditingViewProperties : UInteractiveToolPropertySet {
	bool bShowWireframe; // 0x60
	EMeshEditingMaterialModes MaterialMode; // 0x64
	bool bFlatShading; // 0x68
	FLinearColor Color; // 0x6c
	UTexture2D* Image; // 0x80
};

struct ULockpickItemTag : UBaseItemTag {
	UStaticMesh* Mesh; // 0x30
	float LockpickingDurability; // 0x38
};

struct UInterpTrackBoolProp : UInterpTrack {
	TArray<FBoolTrackKey> BoolTrack; // 0x70
	FName PropertyName; // 0x80
};

struct UPrisonerInventoryComponent : UActorComponent {
	FMulticastInlineDelegate ItemEquipped; // 0xd8
	FMulticastInlineDelegate ItemUnequipped; // 0xe8
	TArray<UCraftingInfoWidget*> CraftingInfoWidgets; // 0xf8
	float AddSelectionDuration; // 0x108
	float AddSelectionReplicationDelay; // 0x10c
	float TickFrequency; // 0x110
	TArray<AClothesItem*> _startingClothesFemale; // 0x118
	TArray<AClothesItem*> _startingClothesFemaleDeluxe; // 0x128
	TArray<AClothesItem*> _startingClothesMale; // 0x138
	TArray<AClothesItem*> _startingClothesMaleDeluxe; // 0x148
	AItem* _tournamentStartingItemInHands; // 0x158
	TArray<AClothesItem*> _tournamentStartingEquipment; // 0x160
	TArray<AItem*> _tournamentStartingItems; // 0x170
	UStaticMesh* _chipMesh; // 0x188
	TMap<TWeakObjectPtr<AItem>, uint32_t> _vicinityItems; // 0x1b0
	TMap<FGameplayTag, FClothesPartSet> _clothesPartsToDamageByMeleeAttackCapsuleAttachment; // 0x208
	AClothesItem* _parachuteClass; // 0x258
	UInventoryContainerClothes* _inventoryClothes; // 0x260
	UInventoryContainerHandsHolsters* _inventoryHandsHolsters; // 0x268
	UInventoryContainerSelection* _inventorySelection2; // 0x270
	TMap<int32_t, FQuickAccessData> _quickAccessItems; // 0x2c8
};

struct USoundClass : UObject {
	FSoundClassProperties Properties; // 0x28
	TArray<USoundClass*> ChildClasses; // 0xa8
	TArray<FPassiveSoundMixModifier> PassiveSoundMixModifiers; // 0xb8
	USoundClass* ParentClass; // 0xc8
};

struct UAkAuxBus : UObject {
	UAkAudioBank* RequiredBank; // 0x28
};

struct UImplicitOffsetProperties : UInteractiveToolPropertySet {
	float Smoothness; // 0x60
	bool bPreserveUVs; // 0x64
};

struct UBasicTextWidget : UUserWidget {
	int32_t MaxTextRows; // 0x260
	int32_t MaxCharactersPerTextRow; // 0x264
};

struct UNiagaraDataInterfaceStaticMesh : UNiagaraDataInterface {
	ENDIStaticMesh_SourceMode SourceMode; // 0x38
	UStaticMesh* DefaultMesh; // 0x40
	AActor* Source; // 0x48
	UStaticMeshComponent* SourceComponent; // 0x50
	FNDIStaticMeshSectionFilter SectionFilter; // 0x58
	bool bUsePhysicsBodyVelocity; // 0x68
	TArray<FName> FilteredSockets; // 0x70
};

struct ARectLight : ALight {
	URectLightComponent* RectLightComponent; // 0x230
};

struct UHoleFillToolProperties : UInteractiveToolPropertySet {
	EHoleFillOpFillType FillType; // 0x60
	bool bRemoveIsolatedTriangles; // 0x61
};

struct AGlobalAquaticLifeManager : AActor {
	float _updateRegisteredPrisonersTickTime; // 0x220
	TMap<int64_t, FAquaticLifeSpawningVolumeDescription> _fishSpawningVolumes; // 0x1618
	float _localFishSchoolManagerRelevancyRange; // 0x1688
	float _distanceBetweenLocalFishSchoolManagers; // 0x168c
	float _localFishSchoolManagerTickTime; // 0x1690
	float _localFishSchoolManagerDestructionTime; // 0x1694
	float _prisonerWaterImmersionRelevancyThreshold; // 0x1698
	int32_t _maxSpawnedSchools; // 0x169c
	float _localFishingZoneIndicatorManagerRelevancyRange; // 0x16c0
	float _localFishingZoneIndicatorManagerTickTime; // 0x16c4
	float _localFishingZoneIndicatorManagerDestructionTime; // 0x16c8
	TMap<EAquaticIndividualSize, AFishingZoneIndicator*> _indicatorClasses; // 0x16d0
	float _fishingPrecision; // 0x1720
	UCurveFloat* _weatherPercentageCurve; // 0x1728
	int32_t _maxSpawnedIndicators; // 0x1730
	int32_t _maxLargeAquaticAnimals; // 0x1758
	TArray<ULargeAquaticAnimalSpeciesData*> _possibleLargeAquaticAnimals; // 0x1760
	float _distanceBetweenLargeAquaticAnimals; // 0x1770
	float _largeAquaticAnimalSpawningRangeMin; // 0x1774
	float _largeAquaticAnimalSpawningRangeMax; // 0x1778
	float _requiredTimeInWaterToSpawnLargeAquaticAnimal; // 0x177c
	float _requiredTimeInWaterWhileBleedingToSpawnLargeAquaticAnimal; // 0x1780
	float _timeToReenableLargeAquaticAnimalSpawnZone; // 0x1784
};

struct UNiagaraPreviewAxis_InterpParamVector2D : UNiagaraPreviewAxis_InterpParamBase {
	FVector2D Min; // 0x38
	FVector2D Max; // 0x40
};

struct UTabContainer : UUserWidget {
	UNamedSlot* _containerContent; // 0x290
	EUINavigation _previous; // 0x298
	EUINavigation _next; // 0x299
	EUINavigation _in; // 0x29a
	bool _canWrap; // 0x29b
};

struct UBP_BlackHawk_RemoveBoltInsertBolt_C : UInsertCartridge {
	FPointerToUberGraphFrame UberGraphFrame; // 0xa0
};

struct AConZBaseElement : AActor {
	USceneComponent* _weatherMaskComponentClass; // 0x248
	TMap<UStaticMesh*, UHierarchicalInstancedStaticMeshComponent*> _elementClassMap; // 0x258
};

struct UEditableGameplayTagQuery : UObject {
	FString UserDescription; // 0x28
	UEditableGameplayTagQueryExpression* RootExpression; // 0x48
	FGameplayTagQuery TagQueryExportText_Helper; // 0x50
};

struct A1H_Dildo_C : AWeaponItem {
	UMeleeAttackCollisionCapsule* MeleeAttackCollisionCapsule; // 0x7f0
};

struct URotatingMovementComponent : UMovementComponent {
	FRotator RotationRate; // 0xf0
	FVector PivotTranslation; // 0xfc
	char bRotationInLocalSpace : 1; // 0x108
};

struct UGroomCreateBindingOptions : UObject {
	USkeletalMesh* SourceSkeletalMesh; // 0x28
	USkeletalMesh* TargetSkeletalMesh; // 0x30
	int32_t NumInterpolationPoints; // 0x38
	int32_t MatchingSection; // 0x3c
};

struct UStatisticsListWidget : UUserWidget {
	FText _subcategoryName; // 0x260
	UTextBlock* _subcategoryTextBox; // 0x278
	UScrollBox* _scrollBox; // 0x280
};

struct UMaterialExpressionLandscapeLayerBlend : UMaterialExpression {
	TArray<FLayerBlendInput> Layers; // 0x40
	FGuid ExpressionGUID; // 0x50
};

struct UInteractionGroupWidget_C : UInteractionGroupUserWidget {
	UUI_Border_C* UI_Border; // 0x298
};

struct UKelvinBrushProperties : UInteractiveToolPropertySet {
	float FalloffDistance; // 0x60
	float Stiffness; // 0x64
	float Incompressiblity; // 0x68
	int32_t BrushSteps; // 0x6c
};

struct UUI_ChangeTextWidget_C : UChangeTextWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x338
	UButton* AcceptButton; // 0x340
	UImage* Image_1; // 0x348
	UImage* Image_2; // 0x350
	UEditableText* InputText; // 0x358
	int32_t MaxInputCharacters; // 0x360
	bool _isEnabled; // 0x364
	FText _currentText; // 0x368
};

struct UMovieSceneMarginSection : UMovieSceneSection {
	FMovieSceneFloatChannel TopCurve; // 0xe8
	FMovieSceneFloatChannel LeftCurve; // 0x188
	FMovieSceneFloatChannel RightCurve; // 0x228
	FMovieSceneFloatChannel BottomCurve; // 0x2c8
};

struct UParticleModuleMeshRotation_Seeded : UParticleModuleMeshRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UUI_ItemClass_C : UItemClassWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UImage* BackgroundImage; // 0x288
	UImage* MainImage; // 0x290
	bool BackgroundVisible; // 0x298
};

struct UMovieSceneNiagaraParameterTrack : UMovieSceneNiagaraTrack {
	FNiagaraVariable Parameter; // 0x88
};

struct AFireworksTrapItem : ATrapItem {
	UAkAudioEvent* _triggerSound; // 0x910
	int32_t _numShells; // 0x918
	float _shellLaunchPeriod; // 0x91c
	float _detonationDelay; // 0x920
	bool _isFiring; // 0x931
};

struct UParticleModuleParameterDynamic : UParticleModuleParameterBase {
	TArray<FEmitterDynamicParameter> DynamicParams; // 0x30
	int32_t UpdateFlags; // 0x40
	char bUsesVelocity : 1; // 0x44
};

struct ULiveLinkTimeSynchronizationSource : UTimeSynchronizationSource {
	FLiveLinkSubjectName SubjectName; // 0x30
};

struct UMetabolismMacronutrientReserve : UUserWidget {
	FText Title; // 0x260
	UTextBlock* _title; // 0x278
	UTextBlock* _value; // 0x280
	UMetabolismSegmentedProgressBar* _spb_ReservesBar; // 0x288
};

struct UThermalSensorComponent : UActorComponent {
	float _temperature; // 0xb0
	float _emissivity; // 0xb4
	float _radius; // 0xb8
	float _mass; // 0xbc
	float _specificHeatCapacity; // 0xc0
	float _thermalConductivity; // 0xc4
	char _packedTemperature; // 0xe8
	bool _temperatureReplicationEnabled; // 0xf0
	float _packTemperatureOffset; // 0xf4
	float _packTemperatureScale; // 0xf8
	float _packTemperatureGamma; // 0xfc
};

struct USynthComponent : USceneComponent {
	char bAutoDestroy : 1; // 0x1f8
	char bStopWhenOwnerDestroyed : 1; // 0x1f8
	char bAllowSpatialization : 1; // 0x1f8
	char bOverrideAttenuation : 1; // 0x1f8
	char bOutputToBusOnly : 1; // 0x1fc
	USoundAttenuation* AttenuationSettings; // 0x200
	FSoundAttenuationSettings AttenuationOverrides; // 0x208
	USoundConcurrency* ConcurrencySettings; // 0x5a8
	TSet<USoundConcurrency*> ConcurrencySet; // 0x5b0
	USoundClass* SoundClass; // 0x600
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x608
	USoundSubmixBase* SoundSubmix; // 0x610
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x618
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x628
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x638
	char bIsUISound : 1; // 0x648
	char bIsPreviewSound : 1; // 0x648
	int32_t EnvelopeFollowerAttackTime; // 0x64c
	int32_t EnvelopeFollowerReleaseTime; // 0x650
	FMulticastInlineDelegate OnAudioEnvelopeValue; // 0x658
	USynthSound* Synth; // 0x688
	UAudioComponent* AudioComponent; // 0x690
};

struct USelfUnionMeshesToolProperties : UInteractiveToolPropertySet {
	bool bAttemptFixHoles; // 0x60
	bool bShowNewBoundaryEdges; // 0x61
	bool bTrimFlaps; // 0x62
	double WindingNumberThreshold; // 0x68
	bool bOnlyUseFirstMeshMaterials; // 0x70
};

struct UAISenseEvent_Damage : UAISenseEvent {
	FAIDamageEvent Event; // 0x28
};

struct AWristwatch : AActor {
	USkeletalMeshComponent* SkeletalMesh; // 0x220
	UTextureRenderTarget2D* TextRenderTarget; // 0x228
	UFont* TimeFont; // 0x230
	float TextScaleX; // 0x238
	float TextScaleY; // 0x23c
	float Time; // 0x240
};

struct UPauseMenuUIController : UObject {
	UAkAudioEvent* _resumeAllSounds; // 0x28
	UAkAudioEvent* _stopAllSounds; // 0x30
	UAkAudioEvent* _pauseAllSounds; // 0x38
};

struct UAnimCurveCompressionSettings : UObject {
	UAnimCurveCompressionCodec* Codec; // 0x28
};

struct UPrisonerBodySimulationUIDataImpl : UPrisonerBodySimulationUIData {
	TArray<UPrisonerBodyEffectUIData*> BodyEffectsUIData; // 0xf0
	UPrisonerMetabolismUIData* MetabolismUIData; // 0x100
};

struct UPrisonerBodySymptom_PeriodicSound : UPrisonerBodySymptom {
	UAkAudioEvent* _sound; // 0xb8
	FFloatInterval _soundInitialDelay; // 0xc0
	FFloatInterval _soundIntervalDeviationRatio; // 0xc8
};

struct UHierarchicalLODSetup : UObject {
	TArray<FHierarchicalSimplification> HierarchicalLODSetup; // 0x28
	TSoftObjectPtr<UMaterialInterface> OverrideBaseMaterial; // 0x38
};

struct UMaterialExpressionWorldPosition : UMaterialExpression {
	EWorldPositionIncludedOffsets WorldPositionShaderOffset; // 0x40
};

struct UAudioComponent : USceneComponent {
	USoundBase* Sound; // 0x1f8
	TArray<FAudioComponentParam> InstanceParameters; // 0x200
	USoundClass* SoundClassOverride; // 0x210
	char bAutoDestroy : 1; // 0x218
	char bStopWhenOwnerDestroyed : 1; // 0x218
	char bShouldRemainActiveIfDropped : 1; // 0x218
	char bAllowSpatialization : 1; // 0x218
	char bOverrideAttenuation : 1; // 0x218
	char bOverrideSubtitlePriority : 1; // 0x218
	char bIsUISound : 1; // 0x218
	char bEnableLowPassFilter : 1; // 0x218
	char bOverridePriority : 1; // 0x219
	char bSuppressSubtitles : 1; // 0x219
	char bAutoManageAttachment : 1; // 0x21a
	FName AudioComponentUserID; // 0x220
	float PitchModulationMin; // 0x228
	float PitchModulationMax; // 0x22c
	float VolumeModulationMin; // 0x230
	float VolumeModulationMax; // 0x234
	float VolumeMultiplier; // 0x238
	int32_t EnvelopeFollowerAttackTime; // 0x23c
	int32_t EnvelopeFollowerReleaseTime; // 0x240
	float Priority; // 0x244
	float SubtitlePriority; // 0x248
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x250
	float PitchMultiplier; // 0x258
	float LowPassFilterFrequency; // 0x25c
	USoundAttenuation* AttenuationSettings; // 0x268
	FSoundAttenuationSettings AttenuationOverrides; // 0x270
	USoundConcurrency* ConcurrencySettings; // 0x610
	TSet<USoundConcurrency*> ConcurrencySet; // 0x618
	EAttachmentRule AutoAttachLocationRule; // 0x674
	EAttachmentRule AutoAttachRotationRule; // 0x675
	EAttachmentRule AutoAttachScaleRule; // 0x676
	FSoundModulationDefaultRoutingSettings ModulationRouting; // 0x678
	FMulticastInlineDelegate OnAudioPlayStateChanged; // 0x6c0
	FMulticastInlineDelegate OnAudioVirtualizationChanged; // 0x6e8
	FMulticastInlineDelegate OnAudioFinished; // 0x710
	FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x738
	FMulticastInlineDelegate OnAudioSingleEnvelopeValue; // 0x760
	FMulticastInlineDelegate OnAudioMultiEnvelopeValue; // 0x788
	FDelegate OnQueueSubtitles; // 0x7b0
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x7c0
	FName AutoAttachSocketName; // 0x7c8
};

struct ULandingDamageCustomization : UDamageCustomization {
	float PrisonerAnkleSprainEnergyThreshold; // 0x28
};

struct ASpotLight : ALight {
	USpotLightComponent* SpotLightComponent; // 0x230
};

struct URichTextBlockImageDecorator : URichTextBlockDecorator {
	UDataTable* ImageSet; // 0x28
};

struct UMaterialParameterCollectionInstance : UObject {
	UMaterialParameterCollection* Collection; // 0x30
};

struct UGrappleActionParameters : UDataAsset {
	bool IsGrappleAttackInWater; // 0x30
	UAnimMontage* GrapplerInitialGrabMontage; // 0x38
	UAkAudioEvent* StartGrappleAudioEvent; // 0x40
	UAkAudioEvent* StopGrappleAudioEvent; // 0x48
	FName AttackerAttachSocketName; // 0x50
	FName DefenderAttachBoneName; // 0x58
	float DefenderReleaseOffset; // 0x60
	float DefensePercentageIncreasePerInput; // 0x64
	float DefensePercentageDecreasePerSecond; // 0x68
	float DefenseBarSweetSpotSizePercentage; // 0x6c
	float ReleaseBarPercentageIncreasePerSecond; // 0x70
	float ReleaseBarPercentageDecreasePerSecond; // 0x74
	FTransform CameraSpringArmOffset; // 0x80
};

struct UPrisonerBodyCondition_HealthLow : UPrisonerBodyCondition {
	float _healthRatioToExist; // 0xa8
	FRuntimeFloatCurve _colorSaturationEffectIntensityVsEffectsIntensity; // 0xb0
};

struct UUI_CollapsableContainer_C : UCollapsableContainer {
	UNamedSlot* _contentSlot; // 0x7b0
};

struct UAnimationSharingSetup : UObject {
	TArray<FPerSkeletonAnimationSharingSetup> SkeletonSetups; // 0x28
	FAnimationSharingScalability ScalabilitySettings; // 0x38
};

struct UBlendSpace : UBlendSpaceBase {
	EBlendSpaceAxis AxisToScaleAnimation; // 0x148
};

struct UMovieSceneMaterialParameterCollectionTrack : UMovieSceneMaterialTrack {
	UMaterialParameterCollection* MPC; // 0x90
};

struct UMaterialExpressionRuntimeVirtualTextureSample : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
	FExpressionInput WorldPosition; // 0x54
	FExpressionInput MipValue; // 0x68
	URuntimeVirtualTexture* VirtualTexture; // 0x80
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x88
	bool bSinglePhysicalSpace; // 0x89
	bool bAdaptive; // 0x8a
	ERuntimeVirtualTextureMipValueMode MipValueMode; // 0x8b
	ERuntimeVirtualTextureTextureAddressMode TextureAddressMode; // 0x8c
};

struct UTextPropertyTestObject : UObject {
	FText DefaultedText; // 0x28
	FText UndefaultedText; // 0x40
	FText TransientText; // 0x58
};

struct AItemWithText : AItem {
	int32_t MaxTextCharactersPerRow; // 0x7c8
	int32_t MaxTextRows; // 0x7cc
	UWidgetComponent* _textWidgetComponent; // 0x7d0
	FString _text; // 0x7d8
	FDbIntegerId _owningUserProfileId; // 0x7e8
};

struct UProceduralFoliageComponent : UActorComponent {
	UProceduralFoliageSpawner* FoliageSpawner; // 0xb0
	float TileOverlap; // 0xb8
	AVolume* SpawningVolume; // 0xc0
	FGuid ProceduralGuid; // 0xc8
};

struct UMovieSceneNiagaraVectorParameterTrack : UMovieSceneNiagaraParameterTrack {
	int32_t ChannelsUsed; // 0xb0
};

