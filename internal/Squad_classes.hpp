// Created by BlueFire1337
// Updated 2021-11-26
// Generated 2022-02-02

namespace off {
	constexpr auto GNames = 0x4e66100;
	constexpr auto GObjects = 0x4e7d990;
	constexpr auto GWorld = 0x4f7fb38;
}

struct ASQWorldSettings : AWorldSettings {
	FVector2D MapGridSpacing; // 0x3c8
	AActor* MapTextureCornerZero; // 0x3d0
	AActor* MapTextureCornerOne; // 0x3d8
	FSQMinimapMakerSettings MinimapMakerSettings; // 0x3e0
	AActor* MapCameraLocation; // 0x930
	TArray<ASQGameRuleSet*> MapRulesets; // 0x938
	FText DisplayTitle; // 0x948
	FScriptMulticastDelegate OnMapTextureChange; // 0x960
	int SeaLevel; // 0x970
	int HelicoptersAltitudeThreshold; // 0x974
	bool bCanDriverSwitchTo3rdPerson; // 0x978
	UTexture* MapTexture; // 0x980
};

struct ABP_RPG7_Parent_C : ABP_GenericRocketLauncher_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct ABP_M9_Nickel_C : ABP_M9_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleRequired : UParticleModule {
	UMaterialInterface* Material; // 0x30
	FVector EmitterOrigin; // 0x38
	FRotator EmitterRotation; // 0x44
	EParticleScreenAlignment ScreenAlignment; // 0x50
	float MinFacingCameraBlendDistance; // 0x54
	float MaxFacingCameraBlendDistance; // 0x58
	char bUseLocalSpace : 1; // 0x5c
	char bKillOnDeactivate : 1; // 0x5c
	char bKillOnCompleted : 1; // 0x5c
	EParticleSortMode SortMode; // 0x60
	char bUseLegacyEmitterTime : 1; // 0x64
	char bRemoveHMDRoll : 1; // 0x64
	float EmitterDuration; // 0x68
	float EmitterDurationLow; // 0x6c
	char bEmitterDurationUseRange : 1; // 0x70
	char bDurationRecalcEachLoop : 1; // 0x70
	int EmitterLoops; // 0x74
	FRawDistributionFloat SpawnRate; // 0x78
	EParticleBurstMethod ParticleBurstMethod; // 0xb0
	TArray<FParticleBurst> BurstList; // 0xb8
	float EmitterDelay; // 0xc8
	float EmitterDelayLow; // 0xcc
	char bEmitterDelayUseRange : 1; // 0xd0
	char bDelayFirstLoopOnly : 1; // 0xd0
	EParticleSubUVInterpMethod InterpolationMethod; // 0xd4
	int SubImages_Horizontal; // 0xd8
	int SubImages_Vertical; // 0xdc
	char bScaleUV : 1; // 0xe0
	float RandomImageTime; // 0xe4
	int RandomImageChanges; // 0xe8
	char bOverrideSystemMacroUV : 1; // 0xec
	FVector MacroUVPosition; // 0xf0
	float MacroUVRadius; // 0xfc
	char bUseMaxDrawCount : 1; // 0x100
	int MaxDrawCount; // 0x104
	EParticleUVFlipMode UVFlippingMode; // 0x108
	UTexture2D* CutoutTexture; // 0x110
	ESubUVBoundingVertexCount BoundingMode; // 0x118
	EOpacitySourceMode OpacitySourceMode; // 0x119
	float AlphaThreshold; // 0x11c
	EEmitterNormalsMode EmitterNormalsMode; // 0x120
	FVector NormalsSphereCenter; // 0x124
	FVector NormalsCylinderDirection; // 0x130
	char bOrbitModuleAffectsVelocityAlignment : 1; // 0x13c
	TArray<FName> NamedMaterialOverrides; // 0x140
};

struct UAnimSequencerInstance : UAnimCustomInstance {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FScriptMulticastDelegate OnMontageBlendingOut; // 0x38
	FScriptMulticastDelegate OnMontageStarted; // 0x48
	FScriptMulticastDelegate OnMontageEnded; // 0x58
	FScriptMulticastDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct USQBaseGameSubsystem : UObject {
	USQGameInstance* SQGameInstance; // 0x38
};

struct APointLight : ALight {
	UPointLightComponent* PointLightComponent; // 0x258
};

struct UAIPerceptionSystem : UAISubsystem {
	TArray<UAISense*> Senses; // 0x88
	float PerceptionAgingRate; // 0x98
};

struct UMaterialFunction : UMaterialFunctionInterface {
	FString Description; // 0x40
	char bExposeToLibrary : 1; // 0x50
	char bPrefixParameterNames : 1; // 0x50
	TArray<UMaterialExpression*> FunctionExpressions; // 0x58
	char bReentrantFlag : 1; // 0x68
};

struct UWindowTitleBarAreaSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UPendingNetGame : UObject {
	UNetDriver* NetDriver; // 0x30
	UDemoNetDriver* DemoNetDriver; // 0x38
};

struct USQJoinSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
	UObject* WorldContextObject; // 0x120
};

struct UCheckBoxStyleAsset : UObject {
	FCheckBoxStyle CheckBoxStyle; // 0x28
};

struct ABP_AK74M_C : ABP_AK74_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionTextureSample : UMaterialExpressionTextureBase {
	FExpressionInput Coordinates; // 0x50
	FExpressionInput TextureObject; // 0x64
	FExpressionInput MipValue; // 0x78
	FExpressionInput CoordinatesDX; // 0x8c
	FExpressionInput CoordinatesDY; // 0xa0
	FExpressionInput AutomaticViewMipBiasValue; // 0xb4
	ETextureMipValueMode MipValueMode; // 0xc8
	ESamplerSourceMode SamplerSource; // 0xc9
	uint32 ConstCoordinate; // 0xcc
	int ConstMipValue; // 0xd0
	char AutomaticViewMipBias : 1; // 0xd4
};

struct UMaterialExpressionLightmassReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0x40
	FExpressionInput Lightmass; // 0x54
};

struct UBP_attachment_foregrip_founders_C : UBP_attachment_foregrip_C {
	FName SocketName; // 0x498
	ASQWeapon* AttachedWeapon; // 0x4a0
	bool bShowIn1P; // 0x4a8
	bool bShowIn3P; // 0x4a9
};

struct ALevelSequenceActor : AActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x258
	ULevelSequencePlayer* SequencePlayer; // 0x270
	FSoftObjectPath LevelSequence; // 0x278
	TArray<AActor*> AdditionalEventReceivers; // 0x290
	ULevelSequenceBurnInOptions* BurnInOptions; // 0x2a0
	UMovieSceneBindingOverrides* BindingOverrides; // 0x2a8
	char bAutoPlay : 1; // 0x2b0
	char bOverrideInstanceData : 1; // 0x2b0
	char bReplicatePlayback : 1; // 0x2b0
	UObject* DefaultInstanceData; // 0x2b8
	ULevelSequenceBurnIn* BurnInInstance; // 0x2c0
	bool bShowBurnin; // 0x2c8
};

struct UMaterialExpressionParticleRadius : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UVisibilityBinding : UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct ASQObjectiveSpawnLocation : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct ABP_L85A2AG36_ElcanLDS_UGL_Parent_C : ABP_L85A2AG36_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74MGP25_Rifle_1P78_Desert_C : ABP_AK74MGP25_Rifle_1P78_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74GP25_UGL_Smoke_Blue_Founders_C : ABP_AK74GP25_UGL_Smoke_Blue_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UCompositeCurveTable : UCurveTable {
	TArray<UCurveTable*> ParentTables; // 0xa0
	TArray<UCurveTable*> OldParentTables; // 0xb8
};

struct UCurveLinearColorAtlas : UTexture2D {
	uint32 TextureSize; // 0x100
	uint32 GradientPixelSize; // 0x104
	TArray<UCurveLinearColor*> GradientCurves; // 0x108
};

struct UBP_BasicHeatDamageType_C : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct ABP_40MM_VOG_Smoke_Blue_Proj2_C : ABP_40MM_VOG_Smoke_Proj2_C {
	UParticleSystemComponent* Effect; // 0x548
	UParticleSystem* SmokeEffect; // 0x550
	USoundCue* SmokeSound; // 0x558
};

struct USQInventoryWidget : USQUserWidget {
	TArray<USQInventoryGroupWidget*> GroupsArray; // 0x230
	ASQPlayerController* OwningController; // 0x240
	USQPawnInventoryComponent* RenderedInventory; // 0x248
	float MaxTranslucencyAlpha; // 0x25c
	float ItemSelectedAlpha; // 0x260
	float ItemUnselectedAlpha; // 0x264
	float FadeoutDuration; // 0x268
	float FadeoutDelay; // 0x26c
	USoundCue* ItemScrollSound; // 0x270
};

struct AAbilitySystemDebugHUD : AHUD {
	APlayerController* PlayerOwner; // 0x248
	char bLostFocusPaused : 1; // 0x250
	char bShowHUD : 1; // 0x250
	char bShowDebugInfo : 1; // 0x250
	int CurrentTargetIndex; // 0x254
	char bShowHitBoxDebugInfo : 1; // 0x258
	char bShowOverlays : 1; // 0x258
	char bEnableDebugTextShadow : 1; // 0x258
	TArray<AActor*> PostRenderedActors; // 0x260
	TArray<FName> DebugDisplay; // 0x278
	TArray<FName> ToggledDebugCategories; // 0x288
	UCanvas* Canvas; // 0x298
	UCanvas* DebugCanvas; // 0x2a0
	TArray<FDebugTextInfo> DebugTextList; // 0x2a8
	AActor* ShowDebugTargetDesiredClass; // 0x2b8
	AActor* ShowDebugTargetActor; // 0x2c0
};

struct USQRotorSetup : UDataAsset {
	FName RotorName; // 0x30
	USQRotor* RotorClass; // 0x38
	float Radius; // 0x40
	float Mass; // 0x44
	FVector ThrustAxis; // 0x48
	FVector ThrustVectoring; // 0x54
	float ThrustCoefficient; // 0x60
	FName ThrustSocketName; // 0x64
	float TorqueMultiplier; // 0x6c
	float RotationalTorqueMultiplier; // 0x70
	float ThrustMultiplier; // 0x74
	FName AnimatedSocketName; // 0x78
	float AnimationSpeedMultiplier; // 0x80
	ESQAxis AnimationAxis; // 0x84
	UCurveFloat* StartupAcceleration; // 0x88
	float StartupAccelerationFactor; // 0x90
	UCurveFloat* StoppingDeceleration; // 0x98
	float StoppingDecelerationFactor; // 0xa0
	UCurveFloat* NoInputDeceleration; // 0xa8
	float DecelerationMultiplier; // 0xb0
	UCurveFloat* InputAcceleration; // 0xb8
	float InputFactor; // 0xc0
	float MaxRPM; // 0xc4
	float IdleRPM; // 0xc8
	ESQRotorType RotorType; // 0xcc
};

struct ABP_AK74M_1P63_Tracer_Desert_C : ABP_AK74M_1P63_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74MGP25_1P63_UGL_Smoke_Red_C : ABP_AK74MGP25_1P63_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionLandscapeLayerBlend : UMaterialExpression {
	TArray<FLayerBlendInput> Layers; // 0x40
	FGuid ExpressionGUID; // 0x50
};

struct USQSquadStateDataMapMarkerObjective : USQSquadStateDataMapMarker {
	UTexture2D* Texture; // 0x180
	FLinearColor Tint; // 0x188
	int FireTeamId; // 0x198
};

struct UGameInstance : UObject {
	TArray<ULocalPlayer*> LocalPlayers; // 0x38
	UOnlineSession* OnlineSession; // 0x48
	TArray<UObject*> ReferencedObjects; // 0x50
};

struct UEditableMesh : UObject {
	TArray<UEditableMeshAdapter*> Adapters; // 0x328
	int TextureCoordinateCount; // 0x340
	int PendingCompactCounter; // 0x48c
	int SubdivisionCount; // 0x490
};

struct UMaterialExpressionLandscapeLayerSample : UMaterialExpression {
	FName ParameterName; // 0x40
	float PreviewWeight; // 0x48
	FGuid ExpressionGUID; // 0x4c
};

struct ABP_RPG7V2_Thermo_Founders_C : ABP_RPG7V2_Thermo_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UEngineMessage : ULocalMessage {
	FString FailedPlaceMessage; // 0x28
	FString MaxedOutMessage; // 0x38
	FString EnteredMessage; // 0x48
	FString LeftMessage; // 0x58
	FString GlobalNameChange; // 0x68
	FString SpecEnteredMessage; // 0x78
	FString NewPlayerMessage; // 0x88
	FString NewSpecMessage; // 0x98
};

struct ASQDeployable : AActor {
	ESQTeam InitialTeam; // 0x258
	ASQForwardBase* OwningFob; // 0x260
	float HalfBuiltTransitionHealth; // 0x268
	float FullyBuiltTransitionHealth; // 0x26c
	int Team; // 0x270
	bool bIsFob; // 0x274
	bool bPlaced; // 0x275
	UBoxComponent* StackingCollisionBox; // 0x278
	UBoxComponent* PlacementCollisionBox; // 0x280
	bool bUsePlacementCollisionBox; // 0x288
	USQCoreStateComponent* StateObject; // 0x290
	ESQExplosiveType ExplosiveType; // 0x298
	FSQUsableData UsableData; // 0x2a0
	USceneComponent* Completed; // 0x2e0
	USceneComponent* Unbuilt; // 0x2e8
	USceneComponent* HalfBuilt; // 0x2f0
	USphereComponent* SimpleDetectionSphere; // 0x2f8
	FScriptMulticastDelegate OnBuildStateChange; // 0x300
	FScriptMulticastDelegate OnDestroyedEvent; // 0x310
	ESQBuildState BuildState; // 0x320
	TArray<FSQDeployableChangeStateEffect> ChangeStateEffects; // 0x328
	TArray<FSQDeployableStateDamageEffect> DamageStateEffects; // 0x338
	int Cost; // 0x348
	float MaxHealth; // 0x34c
	float InitialHealth; // 0x350
	float Health; // 0x354
	bool bCanUnbuild; // 0x358
	TArray<FSQDamageModifier> AllowableDamageTypes; // 0x360
	ESQDeployableSize Size; // 0x370
	bool bIngoreNoResist; // 0x371
	bool bStartUnbuilt; // 0x372
	bool bTrackInFOB; // 0x373
	bool bTrackInPlayerState; // 0x374
	TArray<EObjectTypeQuery> ObjectTypesToStack; // 0x378
	bool bAllowStacking; // 0x388
	bool bAllowPlacementOnPawns; // 0x389
	bool bAllowPlacementOnSoldiers; // 0x38a
	bool bAllowPlacementOnVehicles; // 0x38b
	bool bAttachToUnderlyingActor; // 0x38c
	bool bDestroyWhenAttachedActorIsDestroyed; // 0x38d
	ESQInvalidPlacementReason bCachedPlacementResult; // 0x38e
	bool bAlignToGround; // 0x38f
	float ValidPitchRange; // 0x390
	float MaxCornerDifference; // 0x394
	bool bRequiresSameTeam; // 0x398
	bool bCantBePlacedInFOB; // 0x399
	FVector GhostOffset; // 0x39c
	ESQBuildState GhostBuildState; // 0x3a8
	UMaterialInterface* GhostMaterial; // 0x3b0
	bool bIsGhost; // 0x3b8
	float GhostRotationSpeed; // 0x3bc
	float GhostRotationDelta; // 0x3c0
	bool bAllowFireWeaponOverrideOnSQPlayerController; // 0x3c4
	bool bAllowAltFireWeaponOverrideOnSQPlayerController; // 0x3c5
	bool bRequiresFOB; // 0x3c6
	bool bDrawDebug; // 0x3c7
	UMaterialInstanceDynamic* DynGhostInstance; // 0x3d0
	USQDeployableSettings* Setting; // 0x3e8
	FDataTableRowHandle CachedInvalidPlacementReason; // 0x3f0
	UDataTable* ErrorTable; // 0x400
	bool WasEverBuilt; // 0x408
};

struct UAbilityTask_ApplyRootMotionMoveToActorForce : UAbilityTask_ApplyRootMotion_Base {
	FScriptMulticastDelegate OnFinished; // 0xb8
	FVector StartLocation; // 0xd0
	FVector TargetLocation; // 0xdc
	AActor* TargetActor; // 0xe8
	FVector TargetLocationOffset; // 0xf0
	ERootMotionMoveToActorTargetOffsetType OffsetAlignment; // 0xfc
	float Duration; // 0x100
	bool bDisableDestinationReachedInterrupt; // 0x104
	bool bSetNewMovementMode; // 0x105
	EMovementMode NewMovementMode; // 0x106
	bool bRestrictSpeedToExpected; // 0x107
	UCurveVector* PathOffsetCurve; // 0x108
	UCurveFloat* TimeMappingCurve; // 0x110
	UCurveFloat* TargetLerpSpeedHorizontalCurve; // 0x118
	UCurveFloat* TargetLerpSpeedVerticalCurve; // 0x120
};

struct UParticleModuleVectorFieldGlobal : UParticleModuleVectorFieldBase {
	char bOverrideGlobalVectorFieldTightness : 1; // 0x30
	float GlobalVectorFieldScale; // 0x34
	float GlobalVectorFieldTightness; // 0x38
};

struct ABP_AK74MGP25_UGL_HE_C : ABP_AK74MGP25_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ASpectatorPawn : ADefaultPawn {
	float BaseTurnRate; // 0x2a8
	float BaseLookUpRate; // 0x2ac
	UPawnMovementComponent* MovementComponent; // 0x2b0
	USphereComponent* CollisionComponent; // 0x2b8
	UStaticMeshComponent* MeshComponent; // 0x2c0
	char bAddDefaultMovementBindings : 1; // 0x2c8
};

struct UBP_Attachment_M4_FrontSight_Founders_C : UBP_Attachment_M4_FrontSight_C {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UDatasmithSpotLightComponentTemplate : UDatasmithObjectTemplate {
	float InnerConeAngle; // 0x30
	float OuterConeAngle; // 0x34
};

struct UMovieSceneLevelVisibilitySection : UMovieSceneSection {
	ELevelVisibility Visibility; // 0xe0
	TArray<FName> LevelNames; // 0xe8
};

struct UNetReplicationGraphConnection : UReplicationConnectionDriver {
	UNetConnection* NetConnection; // 0x28
	AReplicationGraphDebugActor* DebugActor; // 0x170
	TArray<FLastLocationGatherInfo> LastGatherLocations; // 0x190
	TArray<UReplicationGraphNode*> ConnectionGraphNodes; // 0x1a8
	UReplicationGraphNode_TearOff_ForConnection* TearOffNode; // 0x1b8
};

struct USQRestriction_Cost : USQRestriction {
	FName ID; // 0x30
	FDataTableRowHandle Data; // 0x38
	FString ModId; // 0x48
};

struct UMovieScenePropertyTrack : UMovieSceneNameableTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct USQMapSoldierIconWidget : USQMapPawnIconWidget {
	bool bIsSelfMedic; // 0x268
	bool bIsWithinMedicRange; // 0x269
	float MedicRange; // 0x26c
	bool bIsMedic; // 0x270
	bool bIsAlive; // 0x271
	bool bIsBleeding; // 0x272
	bool bIsInVehicle; // 0x273
};

struct USQKickBanComponent : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UAISense_Damage : UAISense {
	TArray<FAIDamageEvent> RegisteredEvents; // 0x80
};

struct USQMenuItemWidgetStyle : USlateWidgetStyleContainerBase {
	FSQMenuItemStyle MenuItemStyle; // 0x30
};

struct ABP_AK74M_Desert_C : ABP_AK74M_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAnimationSettings : UDeveloperSettings {
	int CompressCommandletVersion; // 0x38
	TArray<FString> KeyEndEffectorsMatchNameArray; // 0x40
	UAnimCompress* DefaultCompressionAlgorithm; // 0x50
	AnimationCompressionFormat RotationCompressionFormat; // 0x58
	AnimationCompressionFormat TranslationCompressionFormat; // 0x59
	float MaxCurveError; // 0x5c
	float AlternativeCompressionThreshold; // 0x60
	bool ForceRecompression; // 0x64
	bool bOnlyCheckForMissingSkeletalMeshes; // 0x65
	bool bForceBelowThreshold; // 0x66
	bool bFirstRecompressUsingCurrentOrDefault; // 0x67
	bool bRaiseMaxErrorToExisting; // 0x68
	bool bTryExhaustiveSearch; // 0x69
	bool bEnableSegmenting; // 0x6a
	bool bEnablePerformanceLog; // 0x6b
	bool bStripAnimationDataOnDedicatedServer; // 0x6c
	bool bTickAnimationOnSkeletalMeshInit; // 0x6d
};

struct UParticleModuleColor : UParticleModuleColorBase {
	FRawDistributionVector StartColor; // 0x30
	FRawDistributionFloat StartAlpha; // 0x80
	char bClampAlpha : 1; // 0xb8
};

struct UMaterialExpressionDivide : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct USQSquadStateMapData : USQSquadStateData {
	USQCoreStateMapWidget* MapWidgetClass; // 0x120
	float WorldLocationTolerance; // 0x128
	bool bInterpolateWorldLocation; // 0x12c
	bool bUseWorldRotation; // 0x12d
	float YawTolerance; // 0x130
	bool bInterpolateYaw; // 0x134
	FVector WorldLocation; // 0x138
	float Yaw; // 0x144
	char PackedYaw; // 0x148
	FVector_NetQuantize RepWorldLocation; // 0x154
};

struct UPlayFabGroupsAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x210
	UPlayFabJsonObject* RequestJsonObj; // 0x218
	UPlayFabJsonObject* ResponseJsonObj; // 0x220
};

struct UProceduralFoliageSpawner : UObject {
	int RandomSeed; // 0x28
	float TileSize; // 0x2c
	int NumUniqueTiles; // 0x30
	float MinimumQuadTreeSize; // 0x34
	TArray<FFoliageTypeObject> FoliageTypes; // 0x40
	bool bNeedsSimulation; // 0x50
};

struct USQWeaponAttachment_Scope : USQWeaponAttachment {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UGameplayTask_WaitDelay : UGameplayTask {
	FScriptMulticastDelegate OnFinish; // 0x68
};

struct UUpdateManager : UObject {
	float HotfixCheckCompleteDelay; // 0x88
	float UpdateCheckCompleteDelay; // 0x8c
	float HotfixAvailabilityCheckCompleteDelay; // 0x90
	float UpdateCheckAvailabilityCompleteDelay; // 0x94
	bool bCheckPlatformOSSForUpdate; // 0x98
	bool bCheckOSSForUpdate; // 0x99
	int AppSuspendedUpdateCheckTimeSeconds; // 0x9c
	bool bPlatformEnvironmentDetected; // 0xa8
	bool bInitialUpdateFinished; // 0xa9
	bool bCheckHotfixAvailabilityOnly; // 0xaa
	EUpdateState CurrentUpdateState; // 0xab
	int WorstNumFilesPendingLoadViewed; // 0xac
	EPatchCheckResult LastPatchCheckResult; // 0xb0
	EHotfixResult LastHotfixResult; // 0xb1
	FDateTime LastUpdateCheck[0x2]; // 0xe0
	EUpdateCompletionStatus LastCompletionResult[0x2]; // 0xf0
	UEnum* UpdateStateEnum; // 0x108
	UEnum* UpdateCompletionEnum; // 0x110
};

struct UParticleModuleLocationEmitter : UParticleModuleLocationBase {
	FName EmitterName; // 0x30
	ELocationEmitterSelectionMethod SelectionMethod; // 0x38
	char InheritSourceVelocity : 1; // 0x3c
	float InheritSourceVelocityScale; // 0x40
	char bInheritSourceRotation : 1; // 0x44
	float InheritSourceRotationScale; // 0x48
};

struct UAbilityTask_WaitGameplayEffectApplied_Self : UAbilityTask_WaitGameplayEffectApplied {
	FScriptMulticastDelegate OnApplied; // 0x1b8
};

struct ABP_RPG7V2_Frag_Founders_C : ABP_RPG7V2_Parent_Founders_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UInteractiveFoliageComponent : UStaticMeshComponent {
	int ForcedLodModel; // 0x430
	int PreviousLODLevel; // 0x434
	int MinLOD; // 0x438
	int SubDivisionStepSize; // 0x43c
	UStaticMesh* StaticMesh; // 0x440
	FColor WireframeColorOverride; // 0x448
	char bOverrideWireframeColor : 1; // 0x44c
	char bOverrideMinLOD : 1; // 0x44c
	char bOverrideNavigationExport : 1; // 0x44c
	char bForceNavigationObstacle : 1; // 0x44c
	char bDisallowMeshPaintPerInstance : 1; // 0x44c
	char bIgnoreInstanceForTextureStreaming : 1; // 0x44c
	char bOverrideLightMapRes : 1; // 0x44c
	char bCastDistanceFieldIndirectShadow : 1; // 0x44c
	char bOverrideDistanceFieldSelfShadowBias : 1; // 0x44d
	char bUseSubDivisions : 1; // 0x44d
	char bUseDefaultCollision : 1; // 0x44d
	char bReverseCulling : 1; // 0x44d
	int OverriddenLightMapRes; // 0x450
	float DistanceFieldIndirectShadowMinVisibility; // 0x454
	float DistanceFieldSelfShadowBias; // 0x458
	float StreamingDistanceMultiplier; // 0x45c
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x460
	TArray<FStreamingTextureBuildInfo> StreamingTextureData; // 0x470
	FLightmassPrimitiveSettings LightmassSettings; // 0x480
};

struct ULeaderboardFlushCallbackProxy : UObject {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct ABP_M4M203_M68_UGL_Parent_C : ABP_Weapon2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ULevelScriptBlueprint : UBlueprint {
	char bRecompileOnLoad : 1; // 0x50
	UObject* ParentClass; // 0x58
	char bHasBeenRegenerated : 1; // 0x60
	char bIsRegeneratingOnLoad : 1; // 0x60
	USimpleConstructionScript* SimpleConstructionScript; // 0x68
	TArray<UActorComponent*> ComponentTemplates; // 0x70
	TArray<UTimelineTemplate*> Timelines; // 0x80
	UInheritableComponentHandler* InheritableComponentHandler; // 0x90
	EBlueprintType BlueprintType; // 0x98
	int BlueprintSystemVersion; // 0x9c
	bool bNativize; // 0xd0
};

struct UMaterialExpressionDesaturation : UMaterialExpression {
	FExpressionInput Input; // 0x40
	FExpressionInput Fraction; // 0x54
	FLinearColor LuminanceFactors; // 0x68
};

struct ASQGameSpawn : APlayerStart {
	FScriptMulticastDelegate PreSiegedStateChangedSignal; // 0x280
	FScriptMulticastDelegate OnSiegedStateChangedSignal; // 0x290
	FScriptMulticastDelegate OnActivatedTimeStampChangedSignal; // 0x2a0
	FScriptMulticastDelegate PreSpawningEnabledStateChanged; // 0x2b0
	FScriptMulticastDelegate OnSpawningEnabledStateChanged; // 0x2c0
	float RespawnDelay; // 0x2d0
	float RespawnIncrease; // 0x2d4
	float SecondsOfSpawnProtection; // 0x2d8
	USQMapIconComponent* SpawnIconComponentClass; // 0x2e0
	float MaxTimeIntervalBetweenSpawnPointLocationEvaluations; // 0x2e8
	bool bSpawningEnabled; // 0x2ec
	bool bSieged; // 0x2ed
	float ActivatedTimeStamp; // 0x2f0
	USQCoreStateComponent* StateObject; // 0x2f8
	USQMapIconComponent* MapIcon; // 0x300
	USQMapIconWidget* DefaultMapIconWidget; // 0x308
	float SpawnSearchRadius; // 0x310
	float SpawnSearchHeight; // 0x314
	TArray<FVector> ValidSpawnLocations; // 0x318
	TArray<FVector> ValidOutOfSightSpawnPoints; // 0x328
	bool bHasValidSpawnLocation; // 0x338
	bool bCanEverDoNearbyEnemiesCheck; // 0x348
	bool bCanBeSiegedByVehicles; // 0x349
	float NearbyEnemiesRadius; // 0x34c
	float NearbyEnemiesCheckTickRate; // 0x350
	UCurveFloat* SiegeDistanceThreshold; // 0x358
	UCurveFloat* EnemyDistanceToRespawnDelay; // 0x360
	ESQTeam Team; // 0x3f0
	ESQSpawnPointType SpawnPointType; // 0x3f1
	float WaveIntervalTime; // 0x3f4
	float WaveSpawnStartTime; // 0x410
};

struct UAISenseConfig_Team : UAISenseConfig {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UEndTurnCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMaterialFunctionMaterialLayer : UMaterialFunction {
	FString Description; // 0x40
	char bExposeToLibrary : 1; // 0x50
	char bPrefixParameterNames : 1; // 0x50
	TArray<UMaterialExpression*> FunctionExpressions; // 0x58
	char bReentrantFlag : 1; // 0x68
};

struct ADecalActor : AActor {
	UDecalComponent* Decal; // 0x248
};

struct UEasyAntiCheatNetComponent : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct AGeometryCollectionActor : AActor {
	UGeometryCollectionComponent* GeometryCollectionComponent; // 0x248
	UGeometryCollectionDebugDrawComponent* GeometryCollectionDebugDrawComponent; // 0x250
};

struct UMovieSceneFloatSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe0
};

struct UMovieSceneFadeTrack : UMovieSceneFloatTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct USaveDataUIWrapper_C : USQSaveGameWrapper {
	USaveGame* SaveGameClass; // 0x28
	FString SlotName; // 0x30
	bool bClientOnly; // 0x40
	USaveGame* SaveGame; // 0x48
};

struct UBP_Attachment_SUSAT_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ABP_RPG7V2_Frag_2Mag_C : ABP_RPG7V2_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct ASQConnectionCheckBeaconHostObj : AOnlineBeaconHostObject {
	FString BeaconTypeName; // 0x248
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x258
	TArray<AOnlineBeaconClient*> ClientActors; // 0x260
};

struct UMaterialExpressionArccosineFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct ACableActor : AActor {
	UCableComponent* CableComponent; // 0x248
};

struct UForceFeedbackComponent : USceneComponent {
	UForceFeedbackEffect* ForceFeedbackEffect; // 0x218
	char bAutoDestroy : 1; // 0x220
	char bStopWhenOwnerDestroyed : 1; // 0x220
	char bLooping : 1; // 0x220
	char bIgnoreTimeDilation : 1; // 0x220
	char bOverrideAttenuation : 1; // 0x220
	float IntensityMultiplier; // 0x224
	UForceFeedbackAttenuation* AttenuationSettings; // 0x228
	FForceFeedbackAttenuationSettings AttenuationOverrides; // 0x230
	FScriptMulticastDelegate OnForceFeedbackFinished; // 0x2e0
};

struct UMaterialParameterCollectionInstance : UObject {
	UMaterialParameterCollection* Collection; // 0x30
};

struct USQBuffManager : UActorComponent {
	FSQBuffDesc Buffs[0x4]; // 0xd8
};

struct ASQRandomizer_SceneComponent : ASQRandomizer {
	USceneComponent* Root; // 0x248
	int RandomSeed; // 0x250
};

struct UMaterialExpressionTemporalSobol : UMaterialExpression {
	FExpressionInput Index; // 0x40
	FExpressionInput Seed; // 0x54
	uint32 ConstIndex; // 0x68
	FVector2D ConstSeed; // 0x6c
};

struct ABP_M4A1_M68_Foregrip_Tracer_Woodland_C : ABP_M4A1_M68_Foregrip_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBP_AK74MGP25_UGL_Parent_StaticInfo_C : UBP_AK74GP25_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct ABP_AK74_Recruit_C : ABP_AK74_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74GP25_Rifle_Founders_C : ABP_AK74GP25_Rifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionTransformPosition : UMaterialExpression {
	FExpressionInput Input; // 0x40
	EMaterialPositionTransformSource TransformSourceType; // 0x54
	EMaterialPositionTransformSource TransformType; // 0x55
};

struct USQCaptureZoneResourceComponent : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UParticleEmitter : UObject {
	FName EmitterName; // 0x28
	int SubUVDataOffset; // 0x30
	EEmitterRenderMode EmitterRenderMode; // 0x34
	EParticleSignificanceLevel SignificanceLevel; // 0x35
	char bUseLegacySpawningBehavior : 1; // 0x37
	char ConvertedModules : 1; // 0x37
	char bIsSoloing : 1; // 0x37
	char bCookedOut : 1; // 0x37
	char bDisabledLODsKeepEmitterAlive : 1; // 0x37
	char bDisableWhenInsignficant : 1; // 0x38
	TArray<UParticleLODLevel*> LODLevels; // 0x40
	int PeakActiveParticles; // 0x50
	int InitialAllocationCount; // 0x54
	float QualityLevelSpawnRateScale; // 0x58
	uint32 DetailModeBitmask; // 0x5c
	char bOWI_ResetOnDetailModeChanged : 1; // 0x60
};

struct ABP_L85A2_Classic_DarkEarth_SUSAT_C : ABP_L85A2_Classic_SUSAT_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct UBP_AK74MGP25_UGL_Optic_HE_StaticInfo_C : UBP_AK74MGP25_UGL_Optic_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USQRadialIconButton : USQRadialButton {
	FVector2D SmallOuterRimDistOffset; // 0x2f8
	FVector2D MediumOuterRimDistOffset; // 0x300
	FVector2D LargeOuterRimDistOffset; // 0x308
	FVector2D SmallIconDistOffset; // 0x310
	FVector2D MediumIconDistOffset; // 0x318
	FVector2D LargeIconDistOffset; // 0x320
	UImage* InnerHoverImage; // 0x328
	UImage* IconImage; // 0x330
	UImage* OuterRimImage; // 0x338
	UTexture2D* IconImageTexture; // 0x340
	FLinearColor IconImageActiveColor; // 0x348
	FLinearColor IconImageInactiveColor; // 0x358
	FLinearColor IconImageHoveredColor; // 0x368
	FLinearColor IconImagePressedColor; // 0x378
	UTexture2D* InnerHoverSmallImageTexture; // 0x388
	UTexture2D* InnerHoverMediumImageTexture; // 0x390
	UTexture2D* InnerHoverLargeImageTexture; // 0x398
	FLinearColor InnerHoverInactiveColor; // 0x3a0
	FLinearColor InnerHoverHoveredColor; // 0x3b0
	FLinearColor InnerHoverPressedColor; // 0x3c0
	UTexture2D* OuterRimSmallImageTexture; // 0x3d0
	UTexture2D* OuterRimMediumImageTexture; // 0x3d8
	UTexture2D* OuterRimLargeImageTexture; // 0x3e0
	FLinearColor OuterRimActiveColor; // 0x3e8
	FLinearColor OuterRimInactiveColor; // 0x3f8
	float IconSize; // 0x408
};

struct UParticleModuleLight_Seeded : UParticleModuleLight {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x140
};

struct ASQGroundVehicle : ASQVehicle {
	TArray<FSQVehicleEffectsQualitySetting> VehicleEffectsQualitySettings; // 0x820
	TArray<FSQVehicleEffectConfig> VehicleEffectsConfig; // 0x830
	FVector2D WheelFXSound_RPMRate; // 0x840
	FVector2D WheelFXSound_LongSlipRate; // 0x848
	FVector2D WheelFXSound_LatSlipRate; // 0x850
	bool bEjectOpenSeatsOnHardLanding; // 0x858
	bool bDrawDebugTraces; // 0x859
	FTimerHandle HardLandingCheckTimer; // 0x860
	FTimerHandle IsFlyingTimer; // 0x868
	float IsFlyingUpdateInterval; // 0x870
	float IsHardLandingUpdateInterval; // 0x874
	TArray<FName> LandingTraceSockets; // 0x878
	float LandingTraceLenght; // 0x888
	bool bIsFlying; // 0x88c
	float LastFlyingZVelocity; // 0x890
	float EjectZVelocityThreshold; // 0x894
	int EmergencyTeleportCooldownSeconds; // 0x898
	TArray<AActor*> LandingCheckActorsToIgnore; // 0x8a0
	USQVehicleCleanupComponent* VehicleCleanupComponent; // 0x8b0
	bool bShouldSimulate; // 0x8b8
	USoundCue* EngineRPMSound; // 0x8c0
	UAudioComponent* EngineRPMAC; // 0x8c8
	USoundCue* EngineExhaustSound; // 0x8d0
	UAudioComponent* EngineExhaustStartAC; // 0x8d8
	UAudioComponent* EngineExhaustAC; // 0x8e0
	UAudioComponent* EngineExhaustStopAC; // 0x8e8
	USoundCue* EngineStartSound; // 0x8f0
	UAudioComponent* EngineCompletedStartAC; // 0x8f8
	USoundCue* EngineCompletedStartSound; // 0x900
	UAudioComponent* EngineFailedStartAC; // 0x908
	USoundCue* EngineFailedStartSound; // 0x910
	UAudioComponent* EngineStartAC; // 0x918
	USoundCue* EngineStopSound; // 0x920
	UAudioComponent* EngineStopAC; // 0x928
	UAudioComponent* EngineSpeedAC; // 0x930
	UAudioComponent* WheelFXAC; // 0x938
	USoundCue* LandingSound; // 0x940
	float EngineIdleFadeInAfterEngineStartTime; // 0x948
	float EngineIdleFadeOutAfterEngineStopTime; // 0x94c
	float SpringCompressionLandingThreshold; // 0x950
	float SkidThresholdVelocity; // 0x954
	float LongSlipSkidThreshold; // 0x958
	float LateralSlipSkidThreshold; // 0x95c
	UParticleSystemComponent* ExhaustPSC; // 0x960
	bool bTiresTouchingGround; // 0x968
	bool bHandbrakeActive; // 0x969
	bool bIsEngineActive; // 0x96a
	bool bIsEngineToggleActive; // 0x96b
	bool bAllowEngineBoosting; // 0x96c
	float EngineBoostTorqueMultiplier; // 0x970
	bool bHasEngineBoostBeenPressed; // 0x974
	TArray<FSQEngineMovementSoundObject> EngineMovementSounds; // 0x978
	float ActivateEngineDelay; // 0x988
	float DeActivateEngineDelay; // 0x98c
	float GearChangingAlphaLerpSpeed; // 0x9a4
	UWheeledVehicleMovementComponent* VehicleMovement; // 0x9a8
	UBoxComponent* VehicleRagdollOverlap; // 0x9b0
	float RagollOverlapTriggerSpeed; // 0x9b8
	int CollisionKillSpeedKPH; // 0x9bc
	bool bCollisionsKillSoldiers; // 0x9c0
	float WheelInflationRate; // 0x9c4
};

struct UParticleModuleMeshRotationRateOverLife : UParticleModuleRotationRateBase {
	FRawDistributionVector RotRate; // 0x30
	char bScaleRotRate : 1; // 0x80
};

struct UAIPerceptionComponent : UActorComponent {
	TArray<UAISenseConfig*> SensesConfig; // 0xd8
	UAISense* DominantSense; // 0xe8
	AAIController* AIOwner; // 0x100
	FScriptMulticastDelegate OnPerceptionUpdated; // 0x188
	FScriptMulticastDelegate OnTargetPerceptionUpdated; // 0x198
};

struct UBP_MedShockwave_C : USQShockwave {
	ESQShockwaveEffectType ShockwaveEffectType; // 0x28
	float Strength; // 0x2c
	TArray<FSQShockwaveQualitySetting> ShockwaveQualitySettings; // 0x30
	FSQCameraShake CameraShake; // 0x40
	FSQCameraShake SecondaryCameraShake; // 0x60
	int VerticalSteps; // 0x80
	int HorizontalSteps; // 0x84
	FRotator DefaultRotation; // 0x88
	FVector DefaultLocationOffset; // 0x94
	float Range; // 0xa0
	float PitchRange; // 0xa4
	float YawRange; // 0xa8
	float CullingDistance; // 0xac
	float NearbyExplosionEventRadius; // 0xb0
	int MaxSoundsToSpawn; // 0xb4
	int MaxDecalsToSpawn; // 0xb8
	bool bDebugLines; // 0xbc
	bool bDebugSpheres; // 0xbd
	UParticleSystem* Emitter; // 0xc0
	USQPhysicalMaterialEffects* DefaultEffectsClass; // 0xc8
};

struct ABP_M4_M150_Tracer_Founders_C : ABP_M4_M150_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UCameraShake : UObject {
	char bSingleInstance : 1; // 0x28
	float OscillationDuration; // 0x2c
	float OscillationBlendInTime; // 0x30
	float OscillationBlendOutTime; // 0x34
	FROscillator RotOscillation; // 0x38
	FVOscillator LocOscillation; // 0x5c
	FFOscillator FOVOscillation; // 0x80
	float AnimPlayRate; // 0x8c
	float AnimScale; // 0x90
	float AnimBlendInTime; // 0x94
	float AnimBlendOutTime; // 0x98
	float RandomAnimSegmentDuration; // 0x9c
	UCameraAnim* Anim; // 0xa0
	char bRandomAnimSegment : 1; // 0xa8
	APlayerCameraManager* CameraOwner; // 0xc0
	float ShakeScale; // 0x148
	float OscillatorTimeRemaining; // 0x14c
	UCameraAnimInst* AnimInst; // 0x150
};

struct UMaterialExpressionSaturate : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct USQVehicleComponent : UStaticMeshComponent {
	float MaxHealth; // 0x498
	TArray<FSQDamageModifier> AllowableDamageTypes; // 0x4a0
	bool bCanBeDestroyed; // 0x4b0
	bool bCanBeRepairedAfterDestroyed; // 0x4b1
	float MaxRepairToolLimit; // 0x4b4
	UStaticMesh* FullyRepairedComponentMesh; // 0x4b8
	UStaticMesh* RepairedFromDestructionComponentMesh; // 0x4c0
	UStaticMesh* DestroyedComponentMesh; // 0x4c8
	ASQVehicle* ParentVehicle; // 0x4d0
	UParticleSystem* BurningEffect; // 0x4d8
	USoundCue* BurningSound; // 0x4e0
	UAudioComponent* BurningAudioComponent; // 0x4e8
	bool bBurningAudioInheritsScale; // 0x4f0
	UParticleSystem* DestroyedExplosion; // 0x4f8
	USoundCue* DestroyedSound; // 0x500
	FName DestructionDamageEffectSocket; // 0x508
	TArray<FSQDamageEffect> DestructionDamageEffects; // 0x510
	bool bLastingEffectInheritsScale; // 0x520
	UAudioComponent* DestroyedAudioComponent; // 0x528
	bool bDestroyedAudioInheritsScale; // 0x530
	UParticleSystemComponent* BurningParticleSystem; // 0x538
	bool bBurningEffectInheritsScale; // 0x540
	UParticleSystemComponent* DestructionParticleSystem; // 0x548
	bool bDestructionEffectInheritsScale; // 0x550
	float NormalizedHealth; // 0x554
	FScriptMulticastDelegate OnComponentDestroyedEvent; // 0x558
	FScriptMulticastDelegate OnComponentUndestroyedEvent; // 0x568
	float Health; // 0x578
	ESQVehicleComponentStates VehicleComponentState; // 0x57c
	UStaticMeshComponent* DecorativeMesh; // 0x580
};

struct UEnvQueryGenerator_PathingGrid : UEnvQueryGenerator_SimpleGrid {
	FAIDataProviderBoolValue PathToItem; // 0xe8
	UNavigationQueryFilter* NavigationFilter; // 0x118
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x120
};

struct UMovieSceneFadeSection : UMovieSceneFloatSection {
	FLinearColor FadeColor; // 0x180
	char bFadeAudio : 1; // 0x190
};

struct UWindDirectionalSourceComponent : USceneComponent {
	float Strength; // 0x218
	float Speed; // 0x21c
	float MinGustAmount; // 0x220
	float MaxGustAmount; // 0x224
	float Radius; // 0x228
	char bPointWind : 1; // 0x22c
};

struct USQFactionSetup : USQPrimaryData {
	FName FactionID; // 0x70
	USQFaction* OuterFaction; // 0x78
	USQRoleSettings* DefaultRole; // 0x80
	USQRoleSettings* DefaultSquadLeaderRole; // 0x88
	USQRoleSettings* LeaveSquadRole; // 0x90
	TArray<USQAvailability_Role*> Roles; // 0x98
	TArray<USQAvailability_Deployable*> Deployables; // 0xa8
	TArray<USQAvailability_Vehicle*> Vehicles; // 0xb8
	TArray<USQAvailability_Action*> Actions; // 0xc8
};

struct ABP_L85A2_DarkEarth_Recruit_C : ABP_L85A2_DarkEarth_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAssetExportTask : UObject {
	UObject* Object; // 0x28
	UExporter* Exporter; // 0x30
	FString Filename; // 0x38
	bool bSelected; // 0x48
	bool bReplaceIdentical; // 0x49
	bool bPrompt; // 0x4a
	bool bAutomated; // 0x4b
	bool bUseFileArchive; // 0x4c
	bool bWriteEmptyFiles; // 0x4d
	TArray<UObject*> IgnoreObjectList; // 0x50
	UObject* Options; // 0x60
	TArray<FString> Errors; // 0x68
};

struct UUniformScalar : UFieldNodeFloat {
	float Magnitude; // 0xd8
};

struct ASQTeamActor : AActor {
	ESQTeam Team; // 0x250
};

struct UButtonWidgetStyle : USlateWidgetStyleContainerBase {
	FButtonStyle ButtonStyle; // 0x30
};

struct ADetourCrowdAIController : AAIController {
	char bStopAILogicOnUnposses : 1; // 0x2f8
	char bLOSflag : 1; // 0x2f8
	char bSkipExtraLOSChecks : 1; // 0x2f8
	char bAllowStrafe : 1; // 0x2f8
	char bWantsPlayerState : 1; // 0x2f8
	char bSetControlRotationFromPawnOrientation : 1; // 0x2f8
	UPathFollowingComponent* PathFollowingComponent; // 0x300
	UBrainComponent* BrainComponent; // 0x308
	UAIPerceptionComponent* PerceptionComponent; // 0x310
	UPawnActionsComponent* ActionsComp; // 0x318
	UBlackboardComponent* Blackboard; // 0x320
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x328
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x330
	FScriptMulticastDelegate ReceiveMoveCompleted; // 0x338
};

struct APrecomputedVisibilityVolume : AVolume {
	EBrushType BrushType; // 0x248
	FColor BrushColor; // 0x24c
	int PolyFlags; // 0x250
	char bColored : 1; // 0x254
	char bSolidWhenSelected : 1; // 0x254
	char bPlaceableFromClassBrowser : 1; // 0x254
	char bNotForClientOrServer : 1; // 0x254
	UModel* Brush; // 0x258
	UBrushComponent* BrushComponent; // 0x260
	char bInManipulation : 1; // 0x268
	TArray<FGeomSelection> SavedSelections; // 0x270
};

struct USQSoundNodeWavePlayer : USoundNode {
	USoundWave* SoundWave; // 0x40
	char bLooping : 1; // 0x48
	char bRandomizeStartTime : 1; // 0x48
	float StartMin; // 0x4c
	float StartMax; // 0x50
};

struct USQAvailability : UObject {
	USQRestriction_Delay_Base* Delay; // 0x28
	USQRestriction_Cost* Cost; // 0x30
	USQRestriction_Count* LimitedCount; // 0x38
	TArray<USQRestriction_Boolean*> OtherRestrictions; // 0x40
};

struct USCS_Node : UObject {
	UObject* ComponentClass; // 0x28
	UActorComponent* ComponentTemplate; // 0x30
	FBlueprintCookedComponentInstancingData CookedComponentInstancingData; // 0x38
	FName AttachToName; // 0x88
	FName ParentComponentOrVariableName; // 0x90
	FName ParentComponentOwnerClassName; // 0x98
	bool bIsParentComponentNative; // 0xa0
	TArray<USCS_Node*> ChildNodes; // 0xa8
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0xb8
	FGuid VariableGuid; // 0xc8
	FName InternalVariableName; // 0xd8
};

struct UStereoLayerComponent : USceneComponent {
	char bLiveTexture : 1; // 0x218
	char bSupportsDepth : 1; // 0x218
	char bNoAlphaChannel : 1; // 0x218
	UTexture* Texture; // 0x220
	UTexture* LeftTexture; // 0x228
	char bQuadPreserveTextureRatio : 1; // 0x230
	FVector2D QuadSize; // 0x234
	FBox2D UVRect; // 0x23c
	float CylinderRadius; // 0x250
	float CylinderOverlayArc; // 0x254
	int CylinderHeight; // 0x258
	EStereoLayerType StereoLayerType; // 0x25c
	EStereoLayerShape StereoLayerShape; // 0x25d
	int Priority; // 0x260
};

struct USQMapGrid : USQUserWidget {
	FLinearColor MajorGridColor; // 0x230
	FLinearColor MinorGridColor; // 0x240
	FLinearColor TinyGridColor; // 0x250
	UCurveFloat* MajorGridOpacityCurve; // 0x260
	UCurveFloat* MinorGridOpacityCurve; // 0x268
	UCurveFloat* TinyGridOpacityCurve; // 0x270
	int MajorGridWidth; // 0x278
	int MinorGridWidth; // 0x27c
	int TinyGridWidth; // 0x280
	FVector2D LegendPercentageLocation; // 0x284
	FVector2D LegendTextOffset; // 0x28c
	float MaxLegendPercentageSize; // 0x294
	FSlateFontInfo LegendScaleFontInfo; // 0x298
	USQMap* OwnerMap; // 0x2e8
	bool bDrawGridMarkers; // 0x2f0
	FVector2D RealMapSize; // 0x2f4
	FVector2D RealToPixel; // 0x2fc
	FVector2D PixelSize; // 0x304
	FVector2D LinesNeeded; // 0x30c
};

struct UCheckBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FCheckBoxStyle CheckBoxStyle; // 0x30
};

struct UParticleModuleLifetimeBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UNavLinkComponent : UPrimitiveComponent {
	TArray<FNavigationLink> Links; // 0x410
};

struct UBP_Attachment_SUSAT_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USQReplaySubsystem : UGameInstanceSubsystem {
	FString DatedReplaySubDirectory; // 0x30
	FString NamedReplaySubDirectory; // 0x40
	bool bUseMultithreading; // 0x50
};

struct UOnlineSessionClient : UOnlineSession {
	bool bIsFromInvite; // 0x188
	bool bHandlingDisconnect; // 0x189
};

struct ABP_L85A2_DarkEarth_SUSAT_C : ABP_L85A2_DarkEarth_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct UInterpTrackInstFloatAnimBPParam : UInterpTrackInst {
	UAnimInstance* AnimScriptInstance; // 0x28
	float ResetFloat; // 0x30
};

struct UParticleModuleParameterDynamic : UParticleModuleParameterBase {
	TArray<FEmitterDynamicParameter> DynamicParams; // 0x30
	int UpdateFlags; // 0x40
	char bUsesVelocity : 1; // 0x44
};

struct UConsoleSettings : UObject {
	int MaxScrollbackSize; // 0x28
	TArray<FAutoCompleteCommand> ManualAutoCompleteList; // 0x30
	TArray<FString> AutoCompleteMapPaths; // 0x40
	float BackgroundOpacityPercentage; // 0x50
	bool bOrderTopToBottom; // 0x54
	FColor InputColor; // 0x58
	FColor HistoryColor; // 0x5c
	FColor AutoCompleteCommandColor; // 0x60
	FColor AutoCompleteCVarColor; // 0x64
	FColor AutoCompleteFadedColor; // 0x68
};

struct UPlaneFalloff : UFieldNodeFloat {
	float Magnitude; // 0xd8
	float MinRange; // 0xdc
	float MaxRange; // 0xe0
	float Default; // 0xe4
	float distance; // 0xe8
	FVector Position; // 0xec
	FVector Normal; // 0xf8
	EFieldFalloffType Falloff; // 0x104
};

struct ASQDeployableMortarVehicle : ASQDeployableVehicle {
	float CachedTubePitch; // 0x888
};

struct UAnimCompress_LeastDestructive : UAnimCompress {
	FString Description; // 0x28
	char bNeedsSkeleton : 1; // 0x38
	char bEnableSegmenting : 1; // 0x38
	uint32 IdealNumFramesPerSegment; // 0x3c
	uint32 MaxNumFramesPerSegment; // 0x40
	AnimationCompressionFormat TranslationCompressionFormat; // 0x44
	AnimationCompressionFormat RotationCompressionFormat; // 0x45
	AnimationCompressionFormat ScaleCompressionFormat; // 0x46
	float MaxCurveError; // 0x48
};

struct UMovieSceneStringSection : UMovieSceneSection {
	FMovieSceneStringChannel StringCurve; // 0xe0
};

struct UMasterAudioSubmixCaptureProtocol : UMovieSceneAudioCaptureProtocolBase {
	FString Filename; // 0x58
};

struct ABP_AK74MGP25_Rifle_Desert_C : ABP_AK74MGP25_Rifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMovieSceneNameableTrack : UMovieSceneTrack {
	FMovieSceneTrackEvalOptions EvalOptions; // 0x50
};

struct UBP_Attachment_1p63_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UBP_AK74M_StaticInfo_C : UBP_AK74_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USQDamageType_Explosive : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct UAITask : UGameplayTask {
	AAIController* OwnerController; // 0x68
};

struct UGeometryCacheTrack : UObject {
	float Duration; // 0x28
};

struct UMaterialInstanceDynamic : UMaterialInstance {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UMaterialInterface* Parent; // 0x90
	char bHasStaticPermutationResource : 1; // 0x9a
	char bOverrideSubsurfaceProfile : 1; // 0x9a
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xa0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xb0
	TArray<FTextureParameterValue> TextureParameterValues; // 0xc0
	TArray<FFontParameterValue> FontParameterValues; // 0xd0
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0xe0
	TArray<UObject*> PermutationTextureReferences; // 0xf8
	FStaticParameterSet StaticParameters; // 0x108
};

struct UMovieSceneEnumTrack : UMovieScenePropertyTrack {
	UEnum* Enum; // 0x88
};

struct ABP_M4A1_Woodland_C : ABP_GenericRifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UDistributionFloat : UDistribution {
	char bCanBeBaked : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UGameplayCueManager : UDataAsset {
	FGameplayCueObjectLibrary RuntimeGameplayCueObjectLibrary; // 0x48
	FGameplayCueObjectLibrary EditorGameplayCueObjectLibrary; // 0x98
	TArray<UObject*> LoadedGameplayCueNotifyClasses; // 0x2b0
	TArray<AGameplayCueNotify_Actor*> GameplayCueClassesForPreallocation; // 0x2c0
	TArray<FGameplayCuePendingExecute> PendingExecuteCues; // 0x2d0
	int GameplayCueSendContextCount; // 0x2e0
	TArray<FPreallocationInfo> PreallocationInfoList_Internal; // 0x2e8
};

struct ASQRepairEquipable : ASQEquipableItem {
	float TraceLengthCentimeters; // 0x480
	ASQVehicle* RepairTarget; // 0x488
	UAudioComponent* AudioComponent; // 0x490
};

struct ULevelSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x348
	FLevelSequenceObjectReferenceMap ObjectReferences; // 0x350
	FLevelSequenceBindingReferences BindingReferences; // 0x3a0
	TMap<FString, FLevelSequenceObject> PossessedObjects; // 0x440
	UObject* DirectorClass; // 0x490
};

struct UBP_MaterialEffects_C : USQPhysicalMaterialEffects {
	TMap<USQPhysicalMaterial*, FSQEffectsSet> Effects; // 0x28
};

struct UMaterialExpressionRuntimeVirtualTextureReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput VirtualTextureOutput; // 0x54
};

struct USQChatWidgetStyle : USlateWidgetStyleContainerBase {
	FSQChatStyle ChatStyle; // 0x30
};

struct USQRestriction_VehicleInRange : USQRestriction_Boolean {
	float Range; // 0x58
	TSet<ESQTeamRelationShip> TargetTeams; // 0x60
	int TargetCount; // 0xb0
};

struct UBTDecorator_SetTagCooldown : UBTDecorator {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
};

struct USoundNodeWavePlayer : USoundNodeAssetReferencer {
	USoundWave* SoundWaveAssetPtr; // 0x40
	USoundWave* SoundWave; // 0x68
	char bLooping : 1; // 0x70
};

struct UPropertyValue : UObject {
	TArray<UProperty*> properties; // 0x80
	TArray<int> PropertyIndices; // 0x90
	TArray<FCapturedPropSegment> CapturedPropSegments; // 0xa0
	FString FullDisplayString; // 0xb0
	FName PropertySetterName; // 0xc0
	TMap<FString, FString> PropertySetterParameterDefaults; // 0xc8
	bool bHasRecordedData; // 0x118
	UObject* LeafPropertyClass; // 0x120
	TArray<char> ValueBytes; // 0x128
	EPropertyValueCategory PropCategory; // 0x138
};

struct UMaterialExpressionAdd : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UDatasmithActorTemplate : UDatasmithObjectTemplate {
	TSet<FName> Layers; // 0x30
	TSet<FName> Tags; // 0x80
};

struct UParticleModuleLocationPrimitiveSphere_Seeded : UParticleModuleLocationPrimitiveSphere {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xf8
};

struct USQDamageType_HeatExplosive : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct UARTrackedGeometry : UObject {
	FGuid UniqueID; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct USQGameInstanceSubsystems : UGameInstanceSubsystem {
	TArray<FSQGameSubsystemObject> SquadGameSubsystemObjects; // 0x30
	TArray<UObject*> SubsystemInstances; // 0x40
};

struct USSGS_ColorEffectSpecificationRanges : USSGS_ColorEffectSpecification {
	TArray<FSSGS_ColorRange> Ranges; // 0x30
};

struct ABP_M4_M150_C : ABP_M4A1_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ATargetPoint : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct ASQMortarProjectile : ASQProjectile {
	UParticleSystem* SmokeParticleEffect; // 0x4a0
	USoundCue* SmokeSoundCue; // 0x4a8
	FLinearColor SmokeColor; // 0x4b0
	float NearGroundTriggerDistance; // 0x4c0
	float MinFlightTime; // 0x4c4
	bool bWatchFlightTime; // 0x4c8
	bool bShouldDestroyByLifespan; // 0x4c9
	UObject* LastingEffectClass; // 0x4d0
	FName SocketName; // 0x4d8
	float ImpactDamageToApply; // 0x4e0
};

struct ABP_AK74MGP25_UGL_Smoke_Red_C : ABP_AK74MGP25_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleSystem : UFXSystemAsset {
	EParticleSystemUpdateMode SystemUpdateMode; // 0x28
	float UpdateTime_FPS; // 0x2c
	float UpdateTime_Delta; // 0x30
	float WarmupTime; // 0x34
	float WarmupTickRate; // 0x38
	TArray<UParticleEmitter*> Emitters; // 0x40
	UParticleSystemComponent* PreviewComponent; // 0x50
	UInterpCurveEdSetup* CurveEdSetup; // 0x58
	char bOrientZAxisTowardCamera : 1; // 0x60
	float LODDistanceCheckTime; // 0x64
	ParticleSystemLODMethod LODMethod; // 0x68
	TArray<float> LODDistances; // 0x70
	char bRegenerateLODDuplicate : 1; // 0x80
	TArray<FParticleSystemLOD> LODSettings; // 0x88
	char bUseFixedRelativeBoundingBox : 1; // 0x98
	FBox FixedRelativeBoundingBox; // 0x9c
	float SecondsBeforeInactive; // 0xb8
	char bShouldResetPeakCounts : 1; // 0xbc
	char bHasPhysics : 1; // 0xbc
	char bUseRealtimeThumbnail : 1; // 0xbc
	char ThumbnailImageOutOfDate : 1; // 0xbc
	float Delay; // 0xc0
	float DelayLow; // 0xc4
	char bUseDelayRange : 1; // 0xc8
	char bAllowManagedTicking : 1; // 0xc8
	bool bAutoDeactivate; // 0xcc
	uint32 MinTimeBetweenTicks; // 0xd0
	TArray<uint32> LODBasedMinTimeBetweenTicks; // 0xd8
	EParticleSystemInsignificanceReaction InsignificantReaction; // 0xe8
	float InsignificanceDelay; // 0xec
	EParticleSignificanceLevel MaxSignificanceLevel; // 0xf0
	uint32 MaxPoolSize; // 0xf4
	FVector MacroUVPosition; // 0xf8
	float MacroUVRadius; // 0x104
	EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod; // 0x108
	FBox CustomOcclusionBounds; // 0x10c
	TArray<FLODSoloTrack> SoloTracking; // 0x128
	TArray<FNamedEmitterMaterial> NamedMaterialSlots; // 0x138
};

struct AInstancedFoliageActor : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UProceduralMeshComponent : UMeshComponent {
	bool bUseComplexAsSimpleCollision; // 0x438
	bool bUseAsyncCooking; // 0x439
	UBodySetup* ProcMeshBodySetup; // 0x440
	TArray<FProcMeshSection> ProcMeshSections; // 0x448
	TArray<FKConvexElem> CollisionConvexElems; // 0x458
	FBoxSphereBounds LocalBounds; // 0x468
	TArray<UBodySetup*> AsyncBodySetupQueue; // 0x488
};

struct UParticleModuleLocationPrimitiveCylinder : UParticleModuleLocationPrimitiveBase {
	char RadialVelocity : 1; // 0xc0
	FRawDistributionFloat StartRadius; // 0xc8
	FRawDistributionFloat StartHeight; // 0x100
	CylinderHeightAxis HeightAxis; // 0x138
};

struct UEditableGameplayTagQueryExpression_AllExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct ABP_M4M203_M68_UGL_Woodland_Smoke_C : ABP_M4M203_M68_UGL_Woodland_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ASQAudioVolume : AAudioVolume {
	ESQAudioVolumeType SquadAudioVolumeType; // 0x2d8
};

struct UVectorFieldAnimated : UVectorField {
	UTexture2D* Texture; // 0x48
	EVectorFieldConstructionOp ConstructionOp; // 0x50
	int VolumeSizeX; // 0x54
	int VolumeSizeY; // 0x58
	int VolumeSizeZ; // 0x5c
	int SubImagesX; // 0x60
	int SubImagesY; // 0x64
	int FrameCount; // 0x68
	float FramesPerSecond; // 0x6c
	char bLoop : 1; // 0x70
	UVectorFieldStatic* NoiseField; // 0x78
	float NoiseScale; // 0x80
	float NoiseMax; // 0x84
};

struct UParticleModuleSpawnBase : UParticleModule {
	char bProcessSpawnRate : 1; // 0x30
	char bProcessBurstList : 1; // 0x30
};

struct URequestPermissionsAsync : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct UBP_Attachment_M4M203_LadderSight_Woodland_C : UBP_Attachment_M4M203_LadderSight_C {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USQLocalAudioPlayer : USQLocalAudioEffectHandler {
	UAudioComponent* PlayingAudioComponent; // 0x28
};

struct ADatasmithAreaLightActor : AActor {
	EDatasmithAreaLightActorType LightType; // 0x248
	EDatasmithAreaLightActorShape LightShape; // 0x249
	FVector2D Dimensions; // 0x24c
	float Intensity; // 0x254
	ELightUnits IntensityUnits; // 0x258
	FLinearColor Color; // 0x25c
	float Temperature; // 0x26c
	UTextureLightProfile* IESTexture; // 0x270
	bool bUseIESBrightness; // 0x278
	float IESBrightnessScale; // 0x27c
	FRotator Rotation; // 0x280
	float SourceRadius; // 0x28c
	float SourceLength; // 0x290
	float AttenuationRadius; // 0x294
	float SpotlightInnerAngle; // 0x298
	float SpotlightOuterAngle; // 0x29c
};

struct UBP_Fragmentation_DamageType_C : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct UMaterialExpressionArcsine : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UBTTask_WaitBlackboardTime : UBTTask_Wait {
	FBlackboardKeySelector BlackboardKey; // 0x78
};

struct UAsyncTask_LoadXRDeviceVisComponent : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnModelLoaded; // 0x30
	FScriptMulticastDelegate OnLoadFailure; // 0x40
	UPrimitiveComponent* SpawnedComponent; // 0x58
};

struct ABP_Projectile_9mm_C : ASQProjectile {
	UStaticMesh* TracerMesh; // 0x490
	UMaterial* TracerMaterial; // 0x498
};

struct UBP_SQAvailability_Vehicle_C : USQAvailability_Vehicle {
	USQVehicleSettings* Setting; // 0x50
};

struct USQCheatManager : UCheatManager {
	ADebugCameraController* DebugCameraControllerRef; // 0x28
	ADebugCameraController* DebugCameraControllerClass; // 0x30
};

struct ABP_L85A2_4Mags_C : ABP_L85A2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQShockwaveDirected : USQShockwave {
	bool bFractionalOffsettingForHorizontalSteps; // 0xd0
};

struct USQReplayObject : UObject {
	FScriptMulticastDelegate RequestFullReload; // 0x28
	FScriptMulticastDelegate RequestWidgetReload; // 0x38
	FString ReplayPath; // 0x48
	FString ReplayName; // 0x58
	bool bIsNamedReplay; // 0x68
	FDateTime DateCreated; // 0x70
	int64 SizeInBytes; // 0x78
};

struct UPawnAction_Sequence : UPawnAction {
	TArray<UPawnAction*> ActionSequence; // 0x98
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
	UPawnAction* RecentActionCopy; // 0xb0
};

struct UMaterialExpressionCameraVectorWS : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USQDeployableChildActorComponent : UChildActorComponent {
	ESQBuildState SpawnBuildState; // 0x249
	ESQBuildState DespawnBuildState; // 0x24a
	bool bShouldUseSpawningTeam; // 0x24b
	char TimesSpawnable; // 0x24c
};

struct UComboBox : UWidget {
	TArray<UObject*> Items; // 0x108
	DelegateProperty OnGenerateWidgetEvent; // 0x118
	bool bIsFocusable; // 0x128
};

struct ASQObjectiveRuleset : ASQGameModeRuleset {
	int NumberOfObjectives; // 0x2a8
	int MaxNumberOfObjectivesShownAtSameTime; // 0x2ac
	int TicketsGainedUponMeetingObjective; // 0x2b0
	int TicketsLostUponLosingObjective; // 0x2b4
	ASQMapMarker* KnownAttackObjectiveMarkerClass; // 0x2b8
	ASQMapMarker* KnownDefendObjectiveMarkerClass; // 0x2c0
	ASQMapMarker* UnknownDefendObjectiveMarkerClass; // 0x2c8
	ASQMapMarker* SatisfiedObjectiveMarkerClass; // 0x2d0
	float MinObjectiveDistance; // 0x2d8
	bool bOnlyCheckMinDistanceAgainstActiveObjectives; // 0x2dc
	bool bRandomlyPickObjectiveIfAllFailDistanceCheck; // 0x2dd
	TArray<ASQMapMarker*> Markers; // 0x2e0
	TArray<FTransform> AllAvailableObjectiveLocations; // 0x2f0
	TArray<FTransform> FilteredObjectiveLocations; // 0x300
	TArray<ASQObjective*> Objectives; // 0x310
	ASQObjective* ObjectiveType; // 0x320
	float TimeSinceLastObjectiveSpawn; // 0x328
	bool bOverrideObjectiveSpawning; // 0x32c
	bool bGenerateMarkersForTeamOneUponObjectiveSpawn; // 0x32d
	bool bGenerateMarkersForTeamTwoUponObjectiveSpawn; // 0x32e
	ESQTeam WinningTeamUponAllObjectivesCompleted; // 0x32f
	ESQTeam WinningTeamUponTimerExpired; // 0x330
	ESQTeam WinningTeamIfTeamOneHasNoTickets; // 0x331
	ESQTeam WinningTeamIfTeamTwoHasNoTickets; // 0x332
};

struct ABP_SVD_Optic_C : ABP_GenericRifle_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* SVDFront; // 0x7b8
	UStaticMeshComponent* PSOScope; // 0x7c0
	bool HasBUIS; // 0x7c8
};

struct ADebugCameraHUD : AHUD {
	APlayerController* PlayerOwner; // 0x248
	char bLostFocusPaused : 1; // 0x250
	char bShowHUD : 1; // 0x250
	char bShowDebugInfo : 1; // 0x250
	int CurrentTargetIndex; // 0x254
	char bShowHitBoxDebugInfo : 1; // 0x258
	char bShowOverlays : 1; // 0x258
	char bEnableDebugTextShadow : 1; // 0x258
	TArray<AActor*> PostRenderedActors; // 0x260
	TArray<FName> DebugDisplay; // 0x278
	TArray<FName> ToggledDebugCategories; // 0x288
	UCanvas* Canvas; // 0x298
	UCanvas* DebugCanvas; // 0x2a0
	TArray<FDebugTextInfo> DebugTextList; // 0x2a8
	AActor* ShowDebugTargetDesiredClass; // 0x2b8
	AActor* ShowDebugTargetActor; // 0x2c0
};

struct UHorizontalBox : UPanelWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UBP_AK74_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UMaterialExpressionDecalDerivative : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USplineComponent : UPrimitiveComponent {
	FSplineCurves SplineCurves; // 0x408
	FInterpCurveVector SplineInfo; // 0x470
	FInterpCurveQuat SplineRotInfo; // 0x488
	FInterpCurveVector SplineScaleInfo; // 0x4a0
	FInterpCurveFloat SplineReparamTable; // 0x4b8
	bool bAllowSplineEditingPerInstance; // 0x4d0
	int ReparamStepsPerSegment; // 0x4d4
	float Duration; // 0x4d8
	bool bStationaryEndpoints; // 0x4dc
	bool bSplineHasBeenEdited; // 0x4dd
	bool bModifiedByConstructionScript; // 0x4de
	bool bInputSplinePointsToConstructionScript; // 0x4df
	bool bDrawDebug; // 0x4e0
	bool bClosedLoop; // 0x4e1
	bool bLoopPositionOverride; // 0x4e2
	float LoopPosition; // 0x4e4
	FVector DefaultUpVector; // 0x4e8
};

struct UEditableGeometryCollectionAdapter : UEditableMeshAdapter {
	UGeometryCollection* GeometryCollection; // 0x28
	UGeometryCollection* OriginalGeometryCollection; // 0x30
	int GeometryCollectionLODIndex; // 0x38
};

struct ASQVehicleTurretOpenTop : ASQVehicleTurret {
	USQRotatingMovementComponent* YawMovementComponent; // 0x3c8
	USQRotatingMovementComponent* PitchMovementComponent; // 0x3d0
};

struct UProjectile_SuppressionInfo_C : USQSuppressionInfo {
	float SuppressSwayFactorRelease; // 0x28
	float AddSuppressSway; // 0x2c
	float MinSuppressSwayFactor; // 0x30
	float MaxSuppressSwayFactor; // 0x34
	float LofSuppressRange; // 0x38
	float LofSuppressInterpSpeed; // 0x3c
	float LofSuppressAlphaFactor; // 0x40
	float LofSuppressRotationAlphaRelease; // 0x44
};

struct ABP_Projectile_Green_C : ABP_Projectile_C {
	UParticleSystemComponent* ParticleSystem; // 0x4a0
};

struct USpotLightComponent : UPointLightComponent {
	float InnerConeAngle; // 0x388
	float OuterConeAngle; // 0x38c
	float LightShaftConeAngle; // 0x390
};

struct UInterpTrackFloatBase : UInterpTrack {
	FInterpCurveFloat FloatTrack; // 0x70
	float CurveTension; // 0x88
};

struct UBP_M4_M68_StaticInfo_C : UBP_M4_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USoundNode : UObject {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct UMovieSceneWidgetMaterialTrack : UMovieSceneMaterialTrack {
	TArray<FName> BrushPropertyNamePath; // 0x68
	FName TrackName; // 0x78
};

struct UBasicOverlays : UOverlays {
	TArray<FOverlayItem> Overlays; // 0x28
};

struct ABP_AK74MGP25_1P78_UGL_Desert_Smoke_Blue_C : ABP_AK74MGP25_1P78_UGL_Desert_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQRotorComponent : USQVehicleEngineComponent {
	FScriptMulticastDelegate OnEngineActiveEvent; // 0x590
	USoundCue* EngineStartSound; // 0x5a0
	USoundCue* EngineCompletedStartSound; // 0x5a8
	USoundCue* EngineFailedStartSound; // 0x5b0
	USoundCue* EngineStopSound; // 0x5b8
	USoundCue* EngineRPMSound; // 0x5c0
	USoundCue* EngineExhaustSound; // 0x5c8
	USoundCue* LandingSound; // 0x5d0
	float EngineIdleFadeInAfterEngineStartTime; // 0x5d8
	float EngineIdleFadeOutAfterEngineStopTime; // 0x5dc
	float GearChangingAlphaLerpSpeed; // 0x5e0
	TArray<FSQEngineMovementSoundObject> EngineMovementSounds; // 0x5e8
	UAudioComponent* EngineExhaustStartAC; // 0x5f8
	UAudioComponent* EngineRPMAC; // 0x600
	UAudioComponent* EngineExhaustAC; // 0x608
	UAudioComponent* EngineExhaustStopAC; // 0x610
	UAudioComponent* EngineStartAC; // 0x618
	UAudioComponent* EngineCompletedStartAC; // 0x620
	UAudioComponent* EngineFailedStartAC; // 0x628
	UAudioComponent* EngineStopAC; // 0x630
	UAudioComponent* EngineSpeedAC; // 0x638
	UParticleSystemComponent* ExhaustPSC; // 0x640
	UCameraShake* EngineVibrationCameraShake; // 0x648
	UCurveFloat* RPMToShakeScaleCurve; // 0x650
	bool bIsEngineActive; // 0x658
	bool bIsEngineToggleActive; // 0x659
	float ActivateEngineDelay; // 0x65c
	float DeActivateEngineDelay; // 0x660
	UCameraShake* VibrationCameraShake; // 0x670
	APlayerCameraManager* VibrationCameraManager; // 0x678
};

struct UBP_AK74GP25_Rifle_StaticInfo_C : UBP_AK74_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UInitHighlights : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct AOnlineBeaconClient : AOnlineBeacon {
	AOnlineBeaconHostObject* BeaconOwner; // 0x278
	UNetConnection* BeaconConnection; // 0x280
	EBeaconConnectionState ConnectionState; // 0x288
};

struct USQLockButtonWidget : USQUserWidget {
	FLinearColor ColorAndOpacity; // 0x110
	DelegateProperty ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	DelegateProperty ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x198
	UWidgetTree* WidgetTree; // 0x1a8
	int Priority; // 0x1b0
	char bSupportsKeyboardFocus : 1; // 0x1b4
	char bIsFocusable : 1; // 0x1b4
	char bStopAction : 1; // 0x1b4
	char bHasScriptImplementedTick : 1; // 0x1b4
	char bHasScriptImplementedPaint : 1; // 0x1b4
	char bCookedWidgetTree : 1; // 0x1b4
	EWidgetTickFrequency TickFrequency; // 0x1c0
	UInputComponent* InputComponent; // 0x1c8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1d0
};

struct UHighlightsSummaryAsync : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct ADatasmithImportedSequencesActor : AActor {
	TArray<ULevelSequence*> ImportedSequences; // 0x248
};

struct USQMapWidgetSpawnPoint : USQMapWidget {
	bool bSpawnOnSingleClick; // 0x2a8
	bool bSpawnOnDoubleClick; // 0x2a9
	char bIsSelected : 1; // 0x2ac
	char bSieged : 1; // 0x2ac
	char bSpawningEnabled : 1; // 0x2ac
	float ActivatedTimeStamp; // 0x2b0
	ESQSpawnPointType SpawnPointType; // 0x2b4
	ASQGameSpawn* OwningGameSpawn; // 0x2b8
};

struct UMaterialExpressionFloor : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct AController : AActor {
	APlayerState* PlayerState; // 0x250
	FScriptMulticastDelegate OnInstigatedAnyDamage; // 0x260
	FName StateName; // 0x270
	APawn* Pawn; // 0x278
	ACharacter* Character; // 0x288
	USceneComponent* TransformComponent; // 0x290
	FRotator ControlRotation; // 0x2b0
	char bAttachToPawn : 1; // 0x2bc
};

struct UAnimBlueprintGeneratedClass : UBlueprintGeneratedClass {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x2e8
	USkeleton* TargetSkeleton; // 0x2f8
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x300
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x310
	TArray<FName> SyncGroupNames; // 0x3a0
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x3b0
};

struct UParticleModuleKillBox : UParticleModuleKillBase {
	FRawDistributionVector LowerLeftCorner; // 0x30
	FRawDistributionVector UpperRightCorner; // 0x80
	char bAbsolute : 1; // 0xd0
	char bKillInside : 1; // 0xd0
	char bAxisAlignedAndFixedSize : 1; // 0xd0
};

struct ABP_M4M203_M68_UGL_Smoke_Blue_Founders_C : ABP_M4M203_M68_UGL_Smoke_Founders_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAtmosphericFogComponent : USceneComponent {
	float SunMultiplier; // 0x218
	float FogMultiplier; // 0x21c
	float DensityMultiplier; // 0x220
	float DensityOffset; // 0x224
	float DistanceScale; // 0x228
	float AltitudeScale; // 0x22c
	float DistanceOffset; // 0x230
	float GroundOffset; // 0x234
	float StartDistance; // 0x238
	float SunDiscScale; // 0x23c
	float DefaultBrightness; // 0x240
	FColor DefaultLightColor; // 0x244
	char bDisableSunDisk : 1; // 0x248
	char bAtmosphereAffectsSunIlluminance : 1; // 0x248
	char bDisableGroundScattering : 1; // 0x248
	FAtmospherePrecomputeParameters PrecomputeParams; // 0x24c
	UTexture2D* TransmittanceTexture; // 0x278
	UTexture2D* IrradianceTexture; // 0x280
};

struct UAssetMappingTable : UObject {
	TArray<FAssetMapping> MappedAssets; // 0x28
};

struct UEnvQueryGenerator_OnCircle : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue CircleRadius; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb0
	FAIDataProviderIntValue NumberOfPoints; // 0xe0
	EPointOnCircleSpacingMethod PointOnCircleSpacingMethod; // 0x110
	FEnvDirection ArcDirection; // 0x118
	FAIDataProviderFloatValue ArcAngle; // 0x138
	float AngleRadians; // 0x168
	UEnvQueryContext* CircleCenter; // 0x170
	bool bIgnoreAnyContextActorsWhenGeneratingCircle; // 0x178
	FAIDataProviderFloatValue CircleCenterZOffset; // 0x180
	FEnvTraceData TraceData; // 0x1b0
	char bDefineArc : 1; // 0x1e0
};

struct UGameplayTask_TimeLimitedExecution : UGameplayTask {
	FScriptMulticastDelegate OnFinished; // 0x68
	FScriptMulticastDelegate OnTimeExpired; // 0x78
};

struct ULevelSequenceBurnIn : UUserWidget {
	FLevelSequencePlayerSnapshot FrameInformation; // 0x230
	ALevelSequenceActor* LevelSequenceActor; // 0x2e8
};

struct AReflectionCapture : AActor {
	UReflectionCaptureComponent* CaptureComponent; // 0x248
};

struct UWheeledVehicleMovementComponent4W : UWheeledVehicleMovementComponent {
	FVehicleEngineData EngineSetup; // 0x2d8
	FVehicleDifferential4WData DifferentialSetup; // 0x378
	float AckermannAccuracy; // 0x394
	FVehicleTransmissionData TransmissionSetup; // 0x398
	FRuntimeFloatCurve SteeringCurve; // 0x3d8
};

struct UUniformGridSlot : UPanelSlot {
	EHorizontalAlignment HorizontalAlignment; // 0x38
	EVerticalAlignment VerticalAlignment; // 0x39
	int Row; // 0x3c
	int Column; // 0x40
};

struct UBP_M4_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UBP_MortarShockwave_C : USQShockwave {
	ESQShockwaveEffectType ShockwaveEffectType; // 0x28
	float Strength; // 0x2c
	TArray<FSQShockwaveQualitySetting> ShockwaveQualitySettings; // 0x30
	FSQCameraShake CameraShake; // 0x40
	FSQCameraShake SecondaryCameraShake; // 0x60
	int VerticalSteps; // 0x80
	int HorizontalSteps; // 0x84
	FRotator DefaultRotation; // 0x88
	FVector DefaultLocationOffset; // 0x94
	float Range; // 0xa0
	float PitchRange; // 0xa4
	float YawRange; // 0xa8
	float CullingDistance; // 0xac
	float NearbyExplosionEventRadius; // 0xb0
	int MaxSoundsToSpawn; // 0xb4
	int MaxDecalsToSpawn; // 0xb8
	bool bDebugLines; // 0xbc
	bool bDebugSpheres; // 0xbd
	UParticleSystem* Emitter; // 0xc0
	USQPhysicalMaterialEffects* DefaultEffectsClass; // 0xc8
};

struct UMouseCursorBinding : UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct USQSquadStateDataVehicle : USQSquadStateDataVehicleSeat {
	USQVehicleUIStaticDataAsset* StaticUIData; // 0x1a8
	char bHoldsOccupant : 1; // 0x1b0
	char bHoldsSquadLeader : 1; // 0x1b0
	int ClaimingSquadID; // 0x1b4
	FVehicleOccupantsArray VehicleOccupants; // 0x1b8
};

struct UBTTask_RotateToFaceBBEntry : UBTTask_BlackboardBase {
	float Precision; // 0x98
};

struct USQScoreboardTeam : USQUserWidget {
	USQScoreboardTeamScore* ScoreboardTeamScore; // 0x230
	UHorizontalBox* EndOfRoundHorizontalBox; // 0x238
	UVerticalBox* TopVerticalBox; // 0x240
	USpacer* NotEndOfRoundSpacer; // 0x248
	USpacer* EnemyTeamPingAligner; // 0x250
	UHorizontalBox* TeamHorizontalBox; // 0x258
	UGridPanel* SquadsGrid; // 0x260
	UCanvasPanel* NonSquadPlayersCanvasPanel; // 0x268
	UGridPanel* PlayersGrid; // 0x270
	UBorder* ColoredHeaderTabImage; // 0x278
	UImage* RemainingTicketsImage; // 0x280
	UImage* ColoredHeaderBarImage; // 0x288
	UImage* FlagImage; // 0x290
	UTextBlock* PlayerNumberText; // 0x298
	UTextBlock* RemainingTicketsText; // 0x2a0
	UTextBlock* TeamNameText; // 0x2a8
	ASQPlayerController* SQPC; // 0x2b0
	ASQPlayerState* SQPlayerState; // 0x2b8
	ASQTeamState* SQTeamState; // 0x2c0
	ASQGameState* SQGameState; // 0x2c8
	USQScoreboardPlayer* OwnerPlayerWidget; // 0x2d0
	USQScoreboardSquad* OwnerPlayerSquadWidget; // 0x2d8
	int TeamKills; // 0x2e0
	int TeamDeaths; // 0x2e4
	int TeamIncaps; // 0x2e8
	int TeamWounds; // 0x2ec
	int TeamRevives; // 0x2f0
	int TeamHeals; // 0x2f4
	int TeamTeamKills; // 0x2f8
	int TeamTeamwork; // 0x2fc
	int TeamObjective; // 0x300
	int TeamScore; // 0x304
	FLinearColor FriendlyTeamColor; // 0x308
	FLinearColor EnemyTeamColor; // 0x318
	bool bIsFriendlyScoreboard; // 0x328
	bool bShowAllStats; // 0x329
	float EndOfRoundEnemyWidth; // 0x32c
	float DuringRoundEnemyWidth; // 0x330
	FText RemainingTicketsTextString; // 0x338
	FText PlayersText; // 0x350
	TArray<FSquadWidgetPair> DisplayedSquads; // 0x368
	TArray<FPlayerWidgetPair> DisplayedPlayers; // 0x378
	TArray<FSQRemoteTalkerDisplayInfo> FormerTalkers; // 0x388
	USQScoreboardSquad* ScoreboardSquadType; // 0x398
	USQScoreboardPlayer* ScoreboardPlayerType; // 0x3a0
};

struct AGameMode : AGameModeBase {
	FName MatchState; // 0x340
	char bDelayedStart : 1; // 0x348
	int NumSpectators; // 0x34c
	int NumPlayers; // 0x350
	int NumBots; // 0x354
	float MinRespawnDelay; // 0x358
	int NumTravellingPlayers; // 0x35c
	ULocalMessage* EngineMessageClass; // 0x368
	TArray<APlayerState*> InactivePlayerArray; // 0x370
	float InactivePlayerStateLifeSpan; // 0x380
	int MaxInactivePlayers; // 0x384
	bool bHandleDedicatedServerReplays; // 0x388
};

struct URouteSelectorPredicate2 : URouteSelectorPredicate {
	int NumLinksToChoose; // 0x28
};

struct UPathFollowingComponent : UActorComponent {
	UNavMovementComponent* MovementComp; // 0x110
	ANavigationData* MyNavData; // 0x120
};

struct URadialFalloff : UFieldNodeFloat {
	float Magnitude; // 0xd8
	float MinRange; // 0xdc
	float MaxRange; // 0xe0
	float Default; // 0xe4
	float Radius; // 0xe8
	FVector Position; // 0xec
	EFieldFalloffType Falloff; // 0xf8
};

struct UMultiPackerDataBase : UObject {
	UScriptStruct* RowStruct; // 0x28
	int VTile; // 0x30
	int HTile; // 0x34
	bool Do_SDF; // 0x38
	bool BinPack; // 0x39
	bool Alpha; // 0x3a
	EChannelTextureSave ChannelMethod; // 0x3b
	TArray<UTexture2D*> TextureOutput; // 0x40
	UMaterialParameterCollection* MaterialCollection; // 0x50
	TMap<FName, FTileDatabase> TileMap; // 0x58
	int TileSize; // 0xa8
	FLinearColor layer_bools; // 0xac
	FLinearColor Tiles_Size; // 0xbc
};

struct UMaterialExpressionTextureSampleParameterCube : UMaterialExpressionTextureSampleParameter {
	FName ParameterName; // 0xe0
	FGuid ExpressionGUID; // 0xe8
	FName Group; // 0xf8
};

struct ABP_L85A2_DarkEarth_Foregrip_Tracer_C : ABP_L85A2_DarkEarth_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UPropertyValueColor : UPropertyValue {
	TArray<UProperty*> properties; // 0x80
	TArray<int> PropertyIndices; // 0x90
	TArray<FCapturedPropSegment> CapturedPropSegments; // 0xa0
	FString FullDisplayString; // 0xb0
	FName PropertySetterName; // 0xc0
	TMap<FString, FString> PropertySetterParameterDefaults; // 0xc8
	bool bHasRecordedData; // 0x118
	UObject* LeafPropertyClass; // 0x120
	TArray<char> ValueBytes; // 0x128
	EPropertyValueCategory PropCategory; // 0x138
};

struct ABP_AK74MGP25_1P78_UGL_Smoke_Red_C : ABP_AK74MGP25_1P78_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQMapWidgetBase : UUserWidget {
	UPanelWidget* MapBody; // 0x230
};

struct UMaterialExpressionDecalLifetimeOpacity : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UBP_Attachment_LeupoldScope_Black_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ABP_L85A2_Classic_C : ABP_L85A2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UNavigationQueryFilter : UObject {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct UOnlineEngineInterfaceImpl : UOnlineEngineInterface {
	FName VoiceSubsystemNameOverride; // 0x28
};

struct UNavModifierComponent : UNavRelevantComponent {
	UNavArea* AreaClass; // 0x108
	FVector FailsafeExtent; // 0x110
	char bIncludeAgentHeight : 1; // 0x11c
};

struct USoundNodeModulator : USoundNode {
	float PitchMin; // 0x40
	float PitchMax; // 0x44
	float VolumeMin; // 0x48
	float VolumeMax; // 0x4c
};

struct UParticleSystemComponent : UFXSystemComponent {
	UParticleSystem* Template; // 0x408
	TArray<UMaterialInterface*> EmitterMaterials; // 0x410
	TArray<USkeletalMeshComponent*> SkelMeshComponents; // 0x420
	char bResetOnDetach : 1; // 0x431
	char bUpdateOnDedicatedServer : 1; // 0x431
	char bAllowRecycling : 1; // 0x431
	char bAutoManageAttachment : 1; // 0x431
	char bWarmingUp : 1; // 0x432
	char bOverrideLODMethod : 1; // 0x432
	char bSkipUpdateDynamicDataDuringTick : 1; // 0x432
	ParticleSystemLODMethod LODMethod; // 0x43d
	EParticleSignificanceLevel RequiredSignificance; // 0x43e
	TArray<FParticleSysParam> InstanceParameters; // 0x440
	FScriptMulticastDelegate OnParticleSpawn; // 0x450
	FScriptMulticastDelegate OnParticleBurst; // 0x460
	FScriptMulticastDelegate OnParticleDeath; // 0x470
	FScriptMulticastDelegate OnParticleCollide; // 0x480
	FVector OldPosition; // 0x490
	FVector PartSysVelocity; // 0x49c
	float WarmupTime; // 0x4a8
	float WarmupTickRate; // 0x4ac
	float SecondsBeforeInactive; // 0x4b4
	float MaxTimeBeforeForceUpdateTransform; // 0x4bc
	TArray<UParticleSystemReplay*> ReplayClips; // 0x4e0
	float CustomTimeDilation; // 0x4f8
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x550
	FName AutoAttachSocketName; // 0x558
	EAttachmentRule AutoAttachLocationRule; // 0x560
	EAttachmentRule AutoAttachRotationRule; // 0x561
	EAttachmentRule AutoAttachScaleRule; // 0x562
	FScriptMulticastDelegate OnSystemFinished; // 0x590
};

struct UUserDefinedEnum : UEnum {
	TMap<FName, FText> DisplayNameMap; // 0x60
};

struct UBlackboardKeyType_Class : UBlackboardKeyType {
	UObject* BaseClass; // 0x30
};

struct UGameplayEffectCalculation : UObject {
	TArray<FGameplayEffectAttributeCaptureDefinition> RelevantAttributesToCapture; // 0x28
};

struct USQCommanderInputComponent : UActorComponent {
	FScriptMulticastDelegate OnCommanderRevivedEvent; // 0xd8
};

struct USQGameUserSettings : UGameUserSettings {
	FString PlayerNamePrefix; // 0x130
	float NameTagOpacity; // 0x140
	float NameTagScale; // 0x144
	bool bShowNameTagText; // 0x148
	bool bShowNameTagKit; // 0x149
	bool bClientAutoRecord; // 0x14a
	int NumberAutoRecordedGames; // 0x14c
	int DistanceFieldShadows; // 0x150
	bool bInvertedYAxis; // 0x154
	bool bEnableMouseSmoothing; // 0x155
	bool bKeyboardHighlight; // 0x156
	FText ControlsPresetName; // 0x158
	bool bUseMenuToolTips; // 0x170
	bool bUseRadialMenuToolTips; // 0x171
	bool bUseInGameHelp; // 0x172
	int TextureStreamPoolSizeStorage; // 0x174
	float FOV; // 0x178
	float GlobalSensitivity; // 0x17c
	float DoubleKeyPressTime; // 0x180
	ESQToggleType CrouchMode; // 0x188
	ESQToggleType ADSMode; // 0x189
	ESQToggleType LeanMode; // 0x18a
	ESQToggleType FreelookMode; // 0x18b
	ESQToggleType SprintMode; // 0x18c
	float FreelookSensitivitySliderValue; // 0x190
	float FreelookSensitivity; // 0x194
	bool bHelicopterInvertMousePitch; // 0x198
	float HelicopterPitchSensitivitySliderValue; // 0x19c
	float HelicopterPitchSensitivity; // 0x1a0
	float HelicopterRollSensitivitySliderValue; // 0x1a4
	bool bUncapTexturePoolSize; // 0x1a8
	float HelicopterRollSensitivity; // 0x1ac
	bool bUseSensivityScaling; // 0x1b0
	float GlobalSensitivitySliderValue; // 0x1b4
	float SoldierSensitivitySliderValue; // 0x1b8
	float SoldierSensitivity; // 0x1bc
	TMap<float, float> SoldierZoomSensitivitiesSliderValues; // 0x1c0
	TMap<float, float> SoldierZoomSensitivities; // 0x210
	float VehicleSensitivitySliderValue; // 0x260
	float VehicleSensitivity; // 0x264
	float PostFX_BrightnessSliderValue; // 0x268
	float PostFX_Brightness; // 0x26c
	float PostFX_SharpnessSliderValue; // 0x270
	float PostFX_Sharpness; // 0x274
	float PostFX_ContrastSliderValue; // 0x278
	float PostFX_Contrast; // 0x27c
	float PostFX_SaturationSliderValue; // 0x280
	float PostFX_Saturation; // 0x284
	int ContactShadows; // 0x288
	int DisableAAValue; // 0x28c
	int DisableAA; // 0x290
	int TAASampleStorageValue; // 0x294
	int TAASampleStorage; // 0x298
	TMap<float, float> VehicleZoomSensitivitiesSliderValues; // 0x2a0
	TMap<float, float> VehicleZoomSensitivities; // 0x2f0
	bool bFreelookRecentersWeapon; // 0x340
	bool bJumpCausesUnCrouch; // 0x341
	bool bJumpCausesUnProne; // 0x342
	bool bIsDoubleTapWalkingEnabled; // 0x343
	bool bShowDiffVerServers; // 0x344
	bool bShowEmptyServers; // 0x345
	bool bShowQueuesSeparately; // 0x346
	bool bShowReservedSlots; // 0x347
	float MenuFrameRateLimit; // 0x348
	int ToneMapperQualityStorage; // 0x34c
	bool ToneMapperQualityToggle; // 0x350
	int BloomQualityStorage; // 0x354
	bool BloomQualityToggle; // 0x358
	int AmbientOcclusionLevelsStorage; // 0x35c
	bool AmbientOcclusionLevelsToggle; // 0x360
	int ShadowFilterMethod; // 0x364
	int GraphicsQuality; // 0x368
	float ScreenSharpening; // 0x36c
	int ScreenPercentage; // 0x370
	float MotionBlurAmount; // 0x374
	int FogValue; // 0x378
	int AtmosphereValue; // 0x37c
	int LensFlareQuality; // 0x380
	int AutoExposure; // 0x384
	int AntiAliasingMode; // 0x388
	int MaterialQuality; // 0x38c
	int DetailMode; // 0x390
	int Upsampling; // 0x394
	int TemporalAASamples; // 0x398
	float TemporalAACurrentFrameWeight; // 0x39c
	int MaxCSMResolution; // 0x3a0
	int MaxAnisotropy; // 0x3a4
	float MasterVolume; // 0x3a8
	float EffectsVolume; // 0x3ac
	float UIVolume; // 0x3b0
	float MusicVolume; // 0x3b4
	float SquadVoiceVolume; // 0x3b8
	float VoiceSide; // 0x3bc
	bool bApplyVoiceRadioFilter; // 0x3c0
	bool bApplyBiasWhileNonLeader; // 0x3c1
	bool bPlaySquadVOIPSounds; // 0x3c3
	bool bPlayCommandVOIPSounds; // 0x3c4
	float LocalVoIPVolume; // 0x3c8
	float CommandVoIPVolume; // 0x3cc
	float CommandVoIPSide; // 0x3d0
	float LeaderVoipDucking; // 0x3d4
	TMap<ESQJoyStickControls, FSQJoyStickConfig> JoyStickConfigurations; // 0x3d8
	bool bAlwaysFreeLook; // 0x428
	float UnfocusedVolumeMultiplier; // 0x42c
	float MaxImpactEffectDecalLifeSpan; // 0x430
	TArray<FSQOnlineInventorySetting> InventorySettings; // 0x438
	int TextureStreaming; // 0x448
	FScriptMulticastDelegate OnGameUserSettingsChanged; // 0x450
	int StreamerModeMask; // 0x460
	bool bIsLanMatch; // 0x464
	uint32 SquadIncrementalVersion; // 0x468
	uint32 SquadSettingsVersion; // 0x46c
};

struct UMovieSceneSpawnSection : UMovieSceneBoolSection {
	bool DefaultValue; // 0xe0
	FMovieSceneBoolChannel BoolCurve; // 0xe8
};

struct USceneCaptureComponent : USceneComponent {
	ESceneCapturePrimitiveRenderMode PrimitiveRenderMode; // 0x218
	ESceneCaptureSource CaptureSource; // 0x219
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenComponents; // 0x220
	TArray<AActor*> HiddenActors; // 0x230
	TArray<TWeakObjectPtr<UPrimitiveComponent>> ShowOnlyComponents; // 0x240
	TArray<AActor*> ShowOnlyActors; // 0x250
	bool bCaptureEveryFrame; // 0x260
	bool bCaptureOnMovement; // 0x261
	bool bAlwaysPersistRenderingState; // 0x262
	float LODDistanceFactor; // 0x264
	float MaxViewDistanceOverride; // 0x268
	int CaptureSortPriority; // 0x26c
	TArray<FEngineShowFlagsSetting> ShowFlagSettings; // 0x270
	FString ProfilingEventName; // 0x290
};

struct UParticleModuleRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionFloat LifeMultiplier; // 0x30
};

struct UParticleModuleSize_Seeded : UParticleModuleSize {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct ASplineMeshActor : AActor {
	USplineMeshComponent* SplineMeshComponent; // 0x248
};

struct ULevelVariantSets : UObject {
	UObject* DirectorClass; // 0x28
	TArray<UVariantSet*> VariantSets; // 0x30
};

struct ABP_AK74M_4Mags_Desert_C : ABP_AK74M_4Mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UGameplayModMagnitudeCalculation : UGameplayEffectCalculation {
	bool bAllowNonNetAuthorityDependencyRegistration; // 0x38
};

struct USQEmplacementUIStaticDataAsset : USQVehicleUIStaticDataAsset {
	UTexture2D* MapIcon; // 0x30
	float MapIconRotation; // 0x38
	UTexture2D* SideImage; // 0x40
	UTexture2D* FrontImage; // 0x48
};

struct UMaterialExpressionAtmosphericLightColor : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UParticleModuleOrientationBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UEnvQueryTest_Volume : UEnvQueryTest {
	UEnvQueryContext* VolumeContext; // 0x1c0
	AVolume* VolumeClass; // 0x1c8
	char bDoComplexVolumeTest : 1; // 0x1d0
};

struct ASQTournamentModeRuleset : ASQGameRuleSet {
	TArray<FSQSettingsRestriction> Restrictions; // 0x270
};

struct UMovieSceneMarginTrack : UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct USQPhysicalMaterial : UPhysicalMaterial {
	bool bConsiderForPenetration; // 0x80
	bool bAllowPenetration; // 0x81
	float DamageAbsorbed; // 0x84
	float ArmorDamageMultiplier; // 0x88
	bool bDamageParentActor; // 0x8c
	float WheelDampingRateMultiplier; // 0x90
	int ArmorThicknessMillimeters; // 0x94
};

struct USocialPrivateMessageChannel : USocialChatChannel {
	USocialUser* TargetUser; // 0xe8
};

struct USQTrackedVehicleMovementComponent : UWheeledVehicleMovementComponentTank {
	FVehicleTankEngineData EngineSetup; // 0x2d8
	FVehicleTankTransmissionData TransmissionSetup; // 0x378
	float RawBothTracksThrottleInput; // 0x3b8
	float RawLeftTrackThrottleInput; // 0x3bc
	float RawRightTrackThrottleInput; // 0x3c0
	float BothTracksThrottleInput; // 0x3c4
	float LeftTrackThrottleInput; // 0x3c8
	float RightTrackThrottleInput; // 0x3cc
	TArray<float> WheelSpeeds; // 0x3d0
	TArray<float> WheelAngles; // 0x3e0
	float LeftTrackSpeed; // 0x3f0
	float RightTrackSpeed; // 0x3f4
};

struct UTileView : UListView {
	float EntryHeight; // 0x358
	float EntryWidth; // 0x35c
	EListItemAlignment TileAlignment; // 0x360
	bool bWrapHorizontalNavigation; // 0x361
};

struct UBTDecorator_Loop : UBTDecorator {
	int NumLoops; // 0x68
	bool bInfiniteLoop; // 0x6c
	float InfiniteLoopTimeoutTime; // 0x70
};

struct UTextRenderComponent : UPrimitiveComponent {
	FText Text; // 0x408
	UMaterialInterface* TextMaterial; // 0x420
	UFont* Font; // 0x428
	EHorizTextAligment HorizontalAlignment; // 0x430
	EVerticalTextAligment VerticalAlignment; // 0x431
	FColor TextRenderColor; // 0x434
	float XScale; // 0x438
	float YScale; // 0x43c
	float WorldSize; // 0x440
	float InvDefaultSize; // 0x444
	float HorizSpacingAdjust; // 0x448
	float VertSpacingAdjust; // 0x44c
	char bAlwaysRenderAsText : 1; // 0x450
};

struct USQCreateSquadButton : USQBaseButton {
	bool bUsesCustomName; // 0x2e8
	ASQPlayerState* OwnerPlayerState; // 0x2f0
	ASQPlayerController* OwnerPlayerController; // 0x2f8
	UEditableTextBox* SquadNameTextBox; // 0x300
	FScriptMulticastDelegate OnNewSquadCreated; // 0x308
};

struct UDatasmithStaticMeshTemplate : UDatasmithObjectTemplate {
	FDatasmithMeshSectionInfoMapTemplate SectionInfoMap; // 0x30
	int LightMapCoordinateIndex; // 0x80
	int LightMapResolution; // 0x84
	TArray<FDatasmithMeshBuildSettingsTemplate> BuildSettings; // 0x88
	TArray<FDatasmithStaticMaterialTemplate> StaticMaterials; // 0x98
};

struct UWidgetBinding : UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct UBlackboardKeyType_NativeEnum : UBlackboardKeyType {
	FString EnumName; // 0x30
	UEnum* EnumType; // 0x40
};

struct USQVehicleBurningComponent : USceneComponent {
	FName ParticleAttachBone; // 0x218
	ASQLastingEffect* TemperatureLastingEffect; // 0x220
	bool bIsDebugging; // 0x22a
	float VehicleBurnRatePct; // 0x22c
	float VehicleFlippedBurnRatePct; // 0x230
	float VehicleAbandonedBurnRatePct; // 0x234
	float SoldierBurnRatePct; // 0x238
	float StartBurnHealthPercent; // 0x23c
	FTimerHandle EffectTimerHandle; // 0x240
	FTimerHandle BurnTimerHandle; // 0x248
};

struct ULandscapeLayerInfoObject : UObject {
	FName LayerName; // 0x28
	UPhysicalMaterial* PhysMaterial; // 0x30
	float Hardness; // 0x38
	FLinearColor LayerUsageDebugColor; // 0x3c
};

struct ABP_M4M203_M150_UGL_Smoke_C : ABP_M4M203_M150_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionDistanceFieldGradient : UMaterialExpression {
	FExpressionInput Position; // 0x40
};

struct UParticleModuleLocationPrimitiveBase : UParticleModuleLocationBase {
	char Positive_X : 1; // 0x30
	char Positive_Y : 1; // 0x30
	char Positive_Z : 1; // 0x30
	char Negative_X : 1; // 0x30
	char Negative_Y : 1; // 0x30
	char Negative_Z : 1; // 0x30
	char SurfaceOnly : 1; // 0x30
	char Velocity : 1; // 0x30
	FRawDistributionFloat VelocityScale; // 0x38
	FRawDistributionVector StartLocation; // 0x70
};

struct UMaterialExpressionFunctionInput : UMaterialExpression {
	FExpressionInput Preview; // 0x40
	FName InputName; // 0x54
	FString Description; // 0x60
	FGuid ID; // 0x70
	EFunctionInputType InputType; // 0x80
	FVector4 PreviewValue; // 0x90
	char bUsePreviewValueAsDefault : 1; // 0xa0
	int SortPriority; // 0xa4
	char bCompilingFunctionPreview : 1; // 0xa8
};

struct UHighlightsConfigureAsync : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct ABP_M9_C : ABP_GenericPistol_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQGameCommandComponent : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct ABP_AK74MGP25_1P63_UGL_Parent_C : ABP_AK74GP25_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ALightmassImportanceVolume : AVolume {
	EBrushType BrushType; // 0x248
	FColor BrushColor; // 0x24c
	int PolyFlags; // 0x250
	char bColored : 1; // 0x254
	char bSolidWhenSelected : 1; // 0x254
	char bPlaceableFromClassBrowser : 1; // 0x254
	char bNotForClientOrServer : 1; // 0x254
	UModel* Brush; // 0x258
	UBrushComponent* BrushComponent; // 0x260
	char bInManipulation : 1; // 0x268
	TArray<FGeomSelection> SavedSelections; // 0x270
};

struct AProceduralFoliageVolume : AVolume {
	UProceduralFoliageComponent* ProceduralComponent; // 0x280
};

struct UAnimClassData : UObject {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x30
	USkeleton* TargetSkeleton; // 0x40
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x48
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x58
	TArray<FAnimBlueprintFunction> AnimBlueprintFunctions; // 0xa8
	TArray<UStructProperty*> AnimNodeProperties; // 0xb8
	TArray<UStructProperty*> SubInstanceNodeProperties; // 0xc8
	TArray<UStructProperty*> LayerNodeProperties; // 0xd8
	TArray<FName> SyncGroupNames; // 0xe8
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0xf8
};

struct USkyLightComponent : ULightComponentBase {
	ESkyLightSourceType SourceType; // 0x248
	UTextureCube* Cubemap; // 0x250
	float SourceCubemapAngle; // 0x258
	int CubemapResolution; // 0x25c
	float SkyDistanceThreshold; // 0x260
	bool bCaptureEmissiveOnly; // 0x264
	bool bLowerHemisphereIsBlack; // 0x265
	FLinearColor LowerHemisphereColor; // 0x268
	float OcclusionMaxDistance; // 0x278
	float Contrast; // 0x27c
	float OcclusionExponent; // 0x280
	float MinOcclusion; // 0x284
	FColor OcclusionTint; // 0x288
	EOcclusionCombineMode OcclusionCombineMode; // 0x28c
	UTextureCube* BlendDestinationCubemap; // 0x338
};

struct UMaterialExpressionTangentOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UBrushBinding : UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct UBTDecorator_BlueprintBase : UBTDecorator {
	AAIController* AIOwner; // 0x68
	AActor* ActorOwner; // 0x70
	TArray<FName> ObservedKeyNames; // 0x78
	char bShowPropertyDetails : 1; // 0x98
	char bCheckConditionOnlyBlackBoardChanges : 1; // 0x98
	char bIsObservingBB : 1; // 0x98
};

struct UFireShake_Small_C : UCameraShake {
	char bSingleInstance : 1; // 0x28
	float OscillationDuration; // 0x2c
	float OscillationBlendInTime; // 0x30
	float OscillationBlendOutTime; // 0x34
	FROscillator RotOscillation; // 0x38
	FVOscillator LocOscillation; // 0x5c
	FFOscillator FOVOscillation; // 0x80
	float AnimPlayRate; // 0x8c
	float AnimScale; // 0x90
	float AnimBlendInTime; // 0x94
	float AnimBlendOutTime; // 0x98
	float RandomAnimSegmentDuration; // 0x9c
	UCameraAnim* Anim; // 0xa0
	char bRandomAnimSegment : 1; // 0xa8
	APlayerCameraManager* CameraOwner; // 0xc0
	float ShakeScale; // 0x148
	float OscillatorTimeRemaining; // 0x14c
	UCameraAnimInst* AnimInst; // 0x150
};

struct ABP_L85A2AG36_ACOG_UGL_HE_C : ABP_L85A2AG36_ACOG_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UEditableGameplayTagQueryExpression_NoTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct ABP_AK74MGP25_Rifle_1P63_C : ABP_AK74MGP25_Rifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAITask_MoveTo : UAITask {
	FScriptMulticastDelegate OnRequestFailed; // 0x70
	FScriptMulticastDelegate OnMoveFinished; // 0x80
	FAIMoveRequest MoveRequest; // 0x90
};

struct USQMagazineGroupWidget : USQUserWidget {
	TArray<USQMagazineWidget*> MagazineWidgets; // 0x230
};

struct UMovieSceneSection : UMovieSceneSignedObject {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int RowIndex; // 0xa8
	int OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct UMaterialExpressionShadingModel : UMaterialExpression {
	EMaterialShadingModel ShadingModel; // 0x40
};

struct UMovieScene3DAttachTrack : UMovieScene3DConstraintTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x58
};

struct UProceduralFoliageComponent : UActorComponent {
	UProceduralFoliageSpawner* FoliageSpawner; // 0xd8
	float TileOverlap; // 0xe0
	AVolume* SpawningVolume; // 0xe8
	FGuid ProceduralGuid; // 0xf0
};

struct ULandscapeSettings : UDeveloperSettings {
	int MaxNumberOfLayers; // 0x38
};

struct UGameplayTask_ClaimResource : UGameplayTask {
	FName InstanceName; // 0x30
	ETaskResourceOverlapPolicy ResourceOverlapPolicy; // 0x3a
	UGameplayTask* ChildTask; // 0x60
};

struct UMaterialExpressionComment : UMaterialExpression {
	int SizeX; // 0x40
	int SizeY; // 0x44
	FString Text; // 0x48
	FLinearColor CommentColor; // 0x58
	int FontSize; // 0x68
};

struct UPanelSlot : UVisual {
	UPanelWidget* Parent; // 0x28
	UWidget* Content; // 0x30
};

struct ABP_AK74MGP25_UGL_Smoke_C : ABP_AK74MGP25_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQCountParameter : USQCountParameterBase {
	bool UseCurve; // 0x60
	UCurveFloat* Curve; // 0x68
	float ValueToReach; // 0x70
	int FixedAvailability; // 0x74
};

struct UStreamingSettings : UDeveloperSettings {
	char AsyncLoadingThreadEnabled : 1; // 0x38
	char WarnIfTimeLimitExceeded : 1; // 0x38
	float TimeLimitExceededMultiplier; // 0x3c
	float TimeLimitExceededMinTime; // 0x40
	int MinBulkDataSizeForAsyncLoading; // 0x44
	char UseBackgroundLevelStreaming : 1; // 0x48
	char AsyncLoadingUseFullTimeLimit : 1; // 0x48
	float AsyncLoadingTimeLimit; // 0x4c
	float PriorityAsyncLoadingExtraTime; // 0x50
	float LevelStreamingActorsUpdateTimeLimit; // 0x54
	float PriorityLevelStreamingActorsUpdateExtraTime; // 0x58
	int LevelStreamingComponentsRegistrationGranularity; // 0x5c
	float LevelStreamingUnregisterComponentsTimeLimit; // 0x60
	int LevelStreamingComponentsUnregistrationGranularity; // 0x64
	char EventDrivenLoaderEnabled : 1; // 0x68
};

struct UBTDecorator_KeepInCone : UBTDecorator {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector Observed; // 0x98
	char bUseSelfAsOrigin : 1; // 0xc0
	char bUseSelfAsObserved : 1; // 0xc0
};

struct UParticleModuleCollisionBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UBP_Attachment_1p29_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ULightmappedSurfaceCollection : UObject {
	UModel* SourceModel; // 0x28
	TArray<int> Surfaces; // 0x30
};

struct UM4_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_4136E2114573D91EF6AD3BA1AB5C101C; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_04976B224AB9E867E56882809065D5A8; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_A308368548A80EEC8E7AF5B49CA45883; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_93DA30564D7FC3A0A729498FA0227F0D; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_5D7FE9164BED39B4B000E8B4CDA1A1BF; // 0x468
	FAnimNode_Slot AnimGraphNode_Slot_4F714EED40D6EF2E742D3893876618FE; // 0x4b0
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_CE504B634E54B3B14B5F30969F1111F7; // 0x4f8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2DA60691488E6DF154FD3788C73994E6; // 0x510
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_75FF0A0F40C67CA270DF58A10E5B3869; // 0x5d0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_F037B8134954E52D7FE1E9B7E033561F; // 0x6d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_7703DDA140F04C06466B7B84DB44EEEF; // 0x6f8
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_E075DB674D7B6B554DC33D8651A68456; // 0x740
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_D610FA8D4282C3DB890A77AE3050B487; // 0xb80
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_B99C6768407C6F7B2170B39FC1BB764E; // 0xba0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_60FD65CC40A067B70770749F56CD7860; // 0xc60
};

struct USQSquadStateDataRepairStation : USQSquadStateDataDeployable {
	ESQBuildState BuildState; // 0x180
};

struct UPhysicalMaterial : UObject {
	float Friction; // 0x28
	EFrictionCombineMode FrictionCombineMode; // 0x2c
	bool bOverrideFrictionCombineMode; // 0x2d
	float Restitution; // 0x30
	EFrictionCombineMode RestitutionCombineMode; // 0x34
	bool bOverrideRestitutionCombineMode; // 0x35
	float Density; // 0x38
	float RaiseMassToPower; // 0x3c
	float DestructibleDamageThresholdScale; // 0x40
	UPhysicalMaterialPropertyBase* PhysicalMaterialProperty; // 0x48
	EPhysicalSurface SurfaceType; // 0x50
	float TireFrictionScale; // 0x54
	TArray<FTireFrictionScalePair> TireFrictionScales; // 0x58
};

struct USQ_MouseCursor_C : UUserWidget {
	FLinearColor ColorAndOpacity; // 0x110
	DelegateProperty ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	DelegateProperty ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x198
	UWidgetTree* WidgetTree; // 0x1a8
	int Priority; // 0x1b0
	char bSupportsKeyboardFocus : 1; // 0x1b4
	char bIsFocusable : 1; // 0x1b4
	char bStopAction : 1; // 0x1b4
	char bHasScriptImplementedTick : 1; // 0x1b4
	char bHasScriptImplementedPaint : 1; // 0x1b4
	char bCookedWidgetTree : 1; // 0x1b4
	EWidgetTickFrequency TickFrequency; // 0x1c0
	UInputComponent* InputComponent; // 0x1c8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1d0
};

struct UBP_L85A2_SUSAT_Foregrip_StaticInfo_C : UBP_L85A2_Foregrip_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UMaterialExpressionVertexNormalWS : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct ASQDemoSpectator : APlayerController {
	UPlayer* Player; // 0x2c0
	APawn* AcknowledgedPawn; // 0x2c8
	UInterpTrackInstDirector* ControllingDirTrackInst; // 0x2d0
	AHUD* MyHUD; // 0x2d8
	APlayerCameraManager* PlayerCameraManager; // 0x2e0
	APlayerCameraManager* PlayerCameraManagerClass; // 0x2e8
	bool bAutoManageActiveCameraTarget; // 0x2f0
	FRotator TargetViewRotation; // 0x2f4
	float SmoothTargetViewRotationSpeed; // 0x30c
	TArray<AActor*> HiddenActors; // 0x318
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x328
	float LastSpectatorStateSynchTime; // 0x33c
	FVector LastSpectatorSyncLocation; // 0x340
	FRotator LastSpectatorSyncRotation; // 0x34c
	int ClientCap; // 0x358
	UCheatManager* CheatManager; // 0x360
	UCheatManager* CheatClass; // 0x368
	UPlayerInput* PlayerInput; // 0x370
	TArray<FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x378
	char bPlayerIsWaiting : 1; // 0x3f8
	char NetPlayerIndex; // 0x3fc
	UNetConnection* PendingSwapConnection; // 0x438
	UNetConnection* NetConnection; // 0x440
	float InputYawScale; // 0x454
	float InputPitchScale; // 0x458
	float InputRollScale; // 0x45c
	char bShowMouseCursor : 1; // 0x460
	char bEnableClickEvents : 1; // 0x460
	char bEnableTouchEvents : 1; // 0x460
	char bEnableMouseOverEvents : 1; // 0x460
	char bEnableTouchOverEvents : 1; // 0x460
	char bForceFeedbackEnabled : 1; // 0x460
	float ForceFeedbackScale; // 0x464
	TArray<FKey> ClickEventKeys; // 0x468
	EMouseCursor DefaultMouseCursor; // 0x478
	EMouseCursor CurrentMouseCursor; // 0x479
	ECollisionChannel DefaultClickTraceChannel; // 0x47a
	ECollisionChannel CurrentClickTraceChannel; // 0x47b
	float HitResultTraceDistance; // 0x47c
	uint16 SeamlessTravelCount; // 0x480
	uint16 LastCompletedSeamlessTravelCount; // 0x482
	UInputComponent* InactiveStateInputComponent; // 0x4f8
	char bShouldPerformFullTickWhenPaused : 1; // 0x500
	UTouchInterface* CurrentTouchInterface; // 0x518
	ASpectatorPawn* SpectatorPawn; // 0x570
	bool bIsLocalPlayerController; // 0x57c
	FVector SpawnLocation; // 0x580
};

struct AMatineeActor : AActor {
	UInterpData* MatineeData; // 0x248
	FName MatineeControllerName; // 0x250
	float PlayRate; // 0x258
	char bPlayOnLevelLoad : 1; // 0x25c
	char bForceStartPos : 1; // 0x25c
	float ForceStartPosition; // 0x260
	char bLooping : 1; // 0x264
	char bRewindOnPlay : 1; // 0x264
	char bNoResetOnRewind : 1; // 0x264
	char bRewindIfAlreadyPlaying : 1; // 0x264
	char bDisableRadioFilter : 1; // 0x264
	char bClientSideOnly : 1; // 0x264
	char bSkipUpdateIfNotVisible : 1; // 0x264
	char bIsSkippable : 1; // 0x264
	int PreferredSplitScreenNum; // 0x268
	char bDisableMovementInput : 1; // 0x26c
	char bDisableLookAtInput : 1; // 0x26c
	char bHidePlayer : 1; // 0x26c
	char bHideHud : 1; // 0x26c
	TArray<FInterpGroupActorInfo> GroupActorInfos; // 0x270
	char bShouldShowGore : 1; // 0x280
	TArray<UInterpGroupInst*> GroupInst; // 0x288
	TArray<FCameraCutInfo> CameraCuts; // 0x298
	char bIsPlaying : 1; // 0x2a8
	char bReversePlayback : 1; // 0x2a8
	char bPaused : 1; // 0x2a8
	char bPendingStop : 1; // 0x2a8
	float InterpPosition; // 0x2ac
	char ReplicationForceIsPlaying; // 0x2b4
	FScriptMulticastDelegate OnPlay; // 0x2b8
	FScriptMulticastDelegate OnStop; // 0x2c8
	FScriptMulticastDelegate OnPause; // 0x2d8
};

struct UAnimNotify_PlayMontageNotifyWindow : UAnimNotifyState {
	FName NotifyName; // 0x30
};

struct ACameraRig_Rail : AActor {
	float CurrentPositionOnRail; // 0x248
	bool bLockOrientationToRail; // 0x24c
	USceneComponent* TransformComponent; // 0x250
	USplineComponent* RailSplineComponent; // 0x258
	USceneComponent* RailCameraMount; // 0x260
};

struct UParticleModuleEventReceiverBase : UParticleModuleEventBase {
	EParticleEventType EventGeneratorType; // 0x30
	FName EventName; // 0x34
};

struct ASQVehicleTurretClosedTop : ASQVehicleTurret {
	bool bCanStabilize; // 0x3c8
	USoundBase* StabilizationToggleSound; // 0x3d0
	int GunLineOfSightSeatIndex; // 0x3d8
	USQVehicleViewWidget* TurretOverlay; // 0x3e0
	int CurrentZoom; // 0x3e8
	TArray<float> ZoomLevels; // 0x3f0
	USoundBase* ZoomToggleSound; // 0x400
	float ZoomToggleSoundPitch; // 0x408
};

struct UMaterialExpressionTextureSampleParameter : UMaterialExpressionTextureSample {
	FName ParameterName; // 0xe0
	FGuid ExpressionGUID; // 0xe8
	FName Group; // 0xf8
};

struct ULandscapeSplinesComponent : UPrimitiveComponent {
	TArray<ULandscapeSplineControlPoint*> ControlPoints; // 0x408
	TArray<ULandscapeSplineSegment*> Segments; // 0x418
	TArray<UMeshComponent*> CookedForeignMeshComponents; // 0x428
};

struct UParticleModuleEventReceiverSpawn : UParticleModuleEventReceiverBase {
	FRawDistributionFloat SpawnCount; // 0x40
	char bUseParticleTime : 1; // 0x78
	char bUsePSysLocation : 1; // 0x78
	char bInheritVelocity : 1; // 0x78
	FRawDistributionVector InheritVelocityScale; // 0x80
	TArray<UPhysicalMaterial*> PhysicalMaterials; // 0xd0
	char bBanPhysicalMaterials : 1; // 0xe0
};

struct USlider : UWidget {
	float Value; // 0x108
	DelegateProperty ValueDelegate; // 0x10c
	float MinValue; // 0x11c
	float MaxValue; // 0x120
	FSliderStyle WidgetStyle; // 0x128
	EOrientation Orientation; // 0x468
	FLinearColor SliderBarColor; // 0x46c
	FLinearColor SliderHandleColor; // 0x47c
	bool IndentHandle; // 0x48c
	bool Locked; // 0x48d
	bool MouseUsesStep; // 0x48e
	bool RequiresControllerLock; // 0x48f
	float StepSize; // 0x490
	bool IsFocusable; // 0x494
	FScriptMulticastDelegate OnMouseCaptureBegin; // 0x498
	FScriptMulticastDelegate OnMouseCaptureEnd; // 0x4a8
	FScriptMulticastDelegate OnControllerCaptureBegin; // 0x4b8
	FScriptMulticastDelegate OnControllerCaptureEnd; // 0x4c8
	FScriptMulticastDelegate OnValueChanged; // 0x4d8
};

struct UPrefabObjectExporterT3D : UPrefabExporter {
	UObject* SupportedClass; // 0x28
	UObject* ExportRootScope; // 0x30
	TArray<FString> FormatExtension; // 0x38
	TArray<FString> FormatDescription; // 0x48
	int PreferredFormatIndex; // 0x58
	int TextIndent; // 0x5c
	char bText : 1; // 0x60
	char bSelectedOnly : 1; // 0x60
	char bForceFileOperations : 1; // 0x60
	UAssetExportTask* ExportTask; // 0x68
};

struct UBP_Attachment_LeupoldScope_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UBP_AK74M_Reflex_StaticInfo_C : UBP_AK74M_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct AChaosSolverActor : AActor {
	float TimeStepMultiplier; // 0x248
	int CollisionIterations; // 0x24c
	int PushOutIterations; // 0x250
	int PushOutPairIterations; // 0x254
	float ClusterConnectionFactor; // 0x258
	EClusterConnectionTypeEnum ClusterUnionConnectionType; // 0x25c
	bool DoGenerateCollisionData; // 0x25d
	FSolverCollisionFilterSettings CollisionFilterSettings; // 0x260
	bool DoGenerateBreakingData; // 0x270
	FSolverBreakingFilterSettings BreakingFilterSettings; // 0x274
	bool DoGenerateTrailingData; // 0x284
	FSolverTrailingFilterSettings TrailingFilterSettings; // 0x288
	bool bHasFloor; // 0x298
	float FloorHeight; // 0x29c
	float MassScale; // 0x2a0
	FChaosDebugSubstepControl ChaosDebugSubstepControl; // 0x2a4
	UBillboardComponent* SpriteComponent; // 0x2a8
	UChaosGameplayEventDispatcher* GameplayEventDispatcherComponent; // 0x2b0
};

struct ADebugCameraController : APlayerController {
	char bShowSelectedInfo : 1; // 0x598
	char bIsFrozenRendering : 1; // 0x598
	char bIsOrbitingSelectedActor : 1; // 0x598
	char bOrbitPivotUseCenter : 1; // 0x598
	char bEnableBufferVisualization : 1; // 0x598
	char bEnableBufferVisualizationFullMode : 1; // 0x598
	char bIsBufferVisualizationInputSetup : 1; // 0x598
	char bLastDisplayEnabled : 1; // 0x598
	UDrawFrustumComponent* DrawFrustum; // 0x5a0
	AActor* SelectedActor; // 0x5a8
	UPrimitiveComponent* SelectedComponent; // 0x5b0
	FHitResult SelectedHitPoint; // 0x5b8
	APlayerController* OriginalControllerRef; // 0x640
	UPlayer* OriginalPlayer; // 0x648
	float SpeedScale; // 0x650
	float InitialMaxSpeed; // 0x654
	float InitialAccel; // 0x658
	float InitialDecel; // 0x65c
};

struct USQVelocityRotatingMovementComponent : USQMovementComponentPacked {
	float AngularDeltaCombineThreshold; // 0x1e0
	USceneComponent* UpdatedComponent; // 0x1e8
	float AccelerationMultiplier; // 0x1f0
	float NoInputDecelerationMultiplier; // 0x1f4
	float DecelerationMultiplier; // 0x1f8
	bool bEnableStabilization; // 0x1fc
	float StabilizationSpeed; // 0x200
	FSQRotationConstraints RotationConstraints; // 0x204
	UCurveFloat* ParentYawToMinPitch; // 0x220
	UCurveFloat* ParentYawToMaxPitch; // 0x228
	USQVelocityRotatingMovementComponent* HeadingParentComponent; // 0x230
	FSQRotationVelocityRepMovement RotationReplicatedMovement; // 0x280
	bool IsDisabled; // 0x2d0
};

struct UAnimCurveCompressionSettings : UObject {
	UAnimCurveCompressionCodec* Codec; // 0x28
};

struct USQActionSettings : USQSettings {
	bool CreateMapMarker; // 0x58
};

struct UEditableGameplayTagQueryExpression_NoExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UNoiseField : UFieldNodeFloat {
	float MinRange; // 0xd8
	float MaxRange; // 0xdc
	FTransform Transform; // 0xe0
};

struct USoundMix : UObject {
	char bApplyEQ : 1; // 0x28
	float EQPriority; // 0x2c
	FAudioEQEffect EQSettings; // 0x30
	TArray<FSoundClassAdjuster> SoundClassEffects; // 0x68
	float InitialDelay; // 0x78
	float FadeInTime; // 0x7c
	float Duration; // 0x80
	float FadeOutTime; // 0x84
};

struct UAbilityTask_ApplyRootMotionJumpForce : UAbilityTask_ApplyRootMotion_Base {
	FScriptMulticastDelegate OnFinish; // 0xb8
	FScriptMulticastDelegate OnLanded; // 0xc8
	FRotator Rotation; // 0xd8
	float distance; // 0xe4
	float Height; // 0xe8
	float Duration; // 0xec
	float MinimumLandedTriggerTime; // 0xf0
	bool bFinishOnLanded; // 0xf4
	UCurveVector* PathOffsetCurve; // 0xf8
	UCurveFloat* TimeMappingCurve; // 0x100
};

struct UBP_AK74MGP25_UGL_Reflex_HE_StaticInfo_C : UBP_AK74MGP25_UGL_Reflex_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UNetworkSettings : UDeveloperSettings {
	char bVerifyPeer : 1; // 0x38
	char bEnableMultiplayerWorldOriginRebasing : 1; // 0x38
	int MaxRepArraySize; // 0x3c
	int MaxRepArrayMemory; // 0x40
};

struct ABP_L85A2_SUSAT_Foregrip_C : ABP_L85A2_Foregrip_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct ABP_L85A2_DarkEarth_SUSAT_Foregrip_C : ABP_L85A2_DarkEarth_Foregrip_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct UCameraAnimInst : UObject {
	UCameraAnim* CamAnim; // 0x28
	UInterpGroupInst* InterpGroupInst; // 0x30
	float PlayRate; // 0x50
	UInterpTrackMove* MoveTrack; // 0x68
	UInterpTrackInstMove* MoveInst; // 0x70
	ECameraAnimPlaySpace PlaySpace; // 0x78
};

struct UBP_M4_Optic_StaticInfo_C : UBP_M4_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UCollisionProfile : UDeveloperSettings {
	TArray<FCollisionResponseTemplate> Profiles; // 0x38
	TArray<FCustomChannelSetup> DefaultChannelResponses; // 0x48
	TArray<FCustomProfile> EditProfiles; // 0x58
	TArray<FRedirector> ProfileRedirects; // 0x68
	TArray<FRedirector> CollisionChannelRedirects; // 0x78
};

struct UGridSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
	int Row; // 0x4c
	int RowSpan; // 0x50
	int Column; // 0x54
	int ColumnSpan; // 0x58
	int Layer; // 0x5c
	FVector2D Nudge; // 0x60
};

struct ULegacyLevelSequenceDirectorBlueprint : UBlueprint {
	char bRecompileOnLoad : 1; // 0x50
	UObject* ParentClass; // 0x58
	char bHasBeenRegenerated : 1; // 0x60
	char bIsRegeneratingOnLoad : 1; // 0x60
	USimpleConstructionScript* SimpleConstructionScript; // 0x68
	TArray<UActorComponent*> ComponentTemplates; // 0x70
	TArray<UTimelineTemplate*> Timelines; // 0x80
	UInheritableComponentHandler* InheritableComponentHandler; // 0x90
	EBlueprintType BlueprintType; // 0x98
	int BlueprintSystemVersion; // 0x9c
	bool bNativize; // 0xd0
};

struct ACineCameraActor : ACameraActor {
	FCameraLookatTrackingSettings LookatTrackingSettings; // 0x7b0
};

struct UInterpTrackColorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0x90
};

struct UBP_AK74MGP25_Reflex_Rifle_StaticInfo_C : UBP_AK74MGP25_Rifle_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USQRestriction : USQSettings {
	FName ID; // 0x30
	FDataTableRowHandle Data; // 0x38
	FString ModId; // 0x48
};

struct UBP_Attachment_PSO-1_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UAbilityTask_NetworkSyncPoint : UAbilityTask {
	FScriptMulticastDelegate OnSync; // 0x80
};

struct ABP_M4M203_M150_UGL_Smoke_Blue_C : ABP_M4M203_M150_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UGeometryCacheTrack_TransformGroupAnimation : UGeometryCacheTrack {
	float Duration; // 0x28
};

struct UAK74GP25_UGL_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_2717030B48BA522BE72A1895002E18E4; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_0C1CF6474C909D49F8DCA7B75FCEBA30; // 0x2e8
	FAnimNode_Slot AnimGraphNode_Slot_6A1ADD9D41DEB14EFF829D9C1F9BCE62; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_7A240C39418EA94DA763BFADD147FBB4; // 0x3f0
	FAnimNode_Slot AnimGraphNode_Slot_DFEF34044C4E88CB20FAE4AB7F965846; // 0x438
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_D7E83CB64AF7D3A9E305669818225FE5; // 0x480
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3D4E609C4B8F6B0FCE7C409148CFF6DF; // 0x4f8
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_7A628039422676C64C46CCB4C5C72D52; // 0x5b8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_EF3D8E94493768E2355645A514D16B5D; // 0x5d0
};

struct ABP_M4_4Mags_Founders_C : ABP_M4_4Mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionParticleMacroUV : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct ALevelBounds : AActor {
	bool bAutoUpdateBounds; // 0x248
};

struct UReplicationGraphNode_DormancyNode : UReplicationGraphNode_ActorList {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct UAudioCaptureComponent : USynthComponent {
	int JitterLatencyFrames; // 0x640
};

struct UExponentialHeightFogComponent : USceneComponent {
	float FogDensity; // 0x218
	float FogHeightFalloff; // 0x21c
	FExponentialHeightFogData SecondFogData; // 0x220
	FLinearColor FogInscatteringColor; // 0x22c
	UTextureCube* InscatteringColorCubemap; // 0x240
	float InscatteringColorCubemapAngle; // 0x248
	FLinearColor InscatteringTextureTint; // 0x24c
	float FullyDirectionalInscatteringColorDistance; // 0x25c
	float NonDirectionalInscatteringColorDistance; // 0x260
	float DirectionalInscatteringExponent; // 0x264
	float DirectionalInscatteringStartDistance; // 0x268
	FLinearColor DirectionalInscatteringColor; // 0x26c
	float FogMaxOpacity; // 0x27c
	float StartDistance; // 0x280
	float FogCutoffDistance; // 0x284
	bool bEnableVolumetricFog; // 0x288
	float VolumetricFogScatteringDistribution; // 0x28c
	FColor VolumetricFogAlbedo; // 0x290
	FLinearColor VolumetricFogEmissive; // 0x294
	float VolumetricFogExtinctionScale; // 0x2a4
	float VolumetricFogDistance; // 0x2a8
	float VolumetricFogStaticLightingScatteringIntensity; // 0x2ac
	bool bOverrideLightColorsWithFogInscatteringColors; // 0x2b0
};

struct ASQJoinBeaconHost : AOnlineBeaconHostObject {
	TArray<FSQServerSlot> PublicQueue; // 0x270
	TArray<FSQServerSlot> ReservedQueue; // 0x280
	TArray<FSQServerSlot> JoiningServerSlots; // 0x290
};

struct UParticleModuleAttractorBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UGeometryCollection : UObject {
	TArray<UMaterialInterface*> Materials; // 0x30
	ECollisionTypeEnum CollisionType; // 0x40
	EImplicitTypeEnum ImplicitType; // 0x41
	int MinLevelSetResolution; // 0x44
	int MaxLevelSetResolution; // 0x48
	int MinClusterLevelSetResolution; // 0x4c
	int MaxClusterLevelSetResolution; // 0x50
	float CollisionObjectReductionPercentage; // 0x54
	bool bMassAsDensity; // 0x58
	float Mass; // 0x5c
	float MinimumMassClamp; // 0x60
	float CollisionParticlesFraction; // 0x64
	int MaximumCollisionParticles; // 0x68
	TArray<FGeometryCollectionSizeSpecificData> SizeSpecificData; // 0x70
	bool EnableRemovePiecesOnFracture; // 0x80
	TArray<UMaterialInterface*> RemoveOnFractureMaterials; // 0x88
	FGuid PersistentGuid; // 0x98
	FGuid StateGuid; // 0xa8
	int BoneSelectedMaterialIndex; // 0xb8
};

struct UAbilityTask_WaitAttributeChangeThreshold : UAbilityTask {
	FScriptMulticastDelegate OnChange; // 0x80
	UAbilitySystemComponent* ExternalOwner; // 0xd0
};

struct AWindDirectionalSource : AInfo {
	UWindDirectionalSourceComponent* Component; // 0x248
};

struct ABP_AK74MGP25_1P78_UGL_Desert_Smoke_C : ABP_AK74MGP25_1P78_UGL_Desert_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBlendProfile : UObject {
	USkeleton* OwningSkeleton; // 0x30
	TArray<FBlendProfileBoneEntry> ProfileEntries; // 0x38
};

struct UBehaviorTreeManager : UObject {
	int MaxDebuggerSteps; // 0x28
	TArray<FBehaviorTreeTemplateInfo> LoadedTemplates; // 0x30
	TArray<UBehaviorTreeComponent*> ActiveComponents; // 0x40
};

struct USQRestriction_ActorsInRange : USQRestriction_Boolean {
	float Range; // 0x58
	AActor* TargetActorClass; // 0x60
	int TargetCount; // 0x68
};

struct USQSquadStateDataMapMarkerSpotted : USQSquadStateDataMapMarkerSelectable {
	USQMapIconComponent* MapIcon; // 0x1a0
};

struct ASQForwardBase : ASQDeployable {
	bool bIsSpawningEnabled; // 0x418
	float TimeToEnableSpawning; // 0x41c
	bool bCreatesFobSpawnPoints; // 0x420
	bool bSuppliesCreateSpawnPoints; // 0x421
	float SpawnPointRadius; // 0x424
	FVector SpawnOffset; // 0x428
	int EnemiesToCapture; // 0x434
	FString Name; // 0x438
	bool UseCaptureTick; // 0x448
	TArray<ASQDeployable*> TrackedDeployables; // 0x450
	FScriptMulticastDelegate OnFOBStateUpdated; // 0x460
	TArray<ASQGameSpawn*> SpawnPoints; // 0x470
	ASQGameSpawn* SpawnPointClass; // 0x480
	bool bSieged; // 0x488
	float ActivatedTime; // 0x48c
	int NumberOfTeammatesNeededToDeploy; // 0x490
	int NumberOfLogisNeededToDeploy; // 0x494
	float PercentToDisableSpawns; // 0x498
	USphereComponent* CaptureZone; // 0x4a0
	USphereComponent* DeploymentRadius; // 0x4a8
	USphereComponent* ConstructionRadius; // 0x4b0
	bool bUseResourceTickRateToUpdateResources; // 0x4b8
	float MaxTicketsPerSecond; // 0x4bc
	float TicketsPerPlayer; // 0x4c0
	int TicketsLostWhenOverrun; // 0x4c4
	int EnemiesToDisableSpawn; // 0x4c8
	float InitialConstructionPoints; // 0x4cc
	float MaxConstructionPoints; // 0x4d0
	float InitialAmmo; // 0x4d4
	float MaxAmmo; // 0x4d8
	float CPPerSecond; // 0x4dc
	float AmmoPerSecond; // 0x4e0
	float ResourceGenerationRate; // 0x4e4
	float CaptureTickRate; // 0x4e8
	float Ammo; // 0x4ec
	float ConstructionPoints; // 0x4f0
	int NearbyEnemies; // 0x4f4
	int SiegedSpawnPoints; // 0x4f8
	USQForwardBaseSettings* FOBSettings; // 0x528
	bool bIsBleeding; // 0x530
	float EnterBleedingHealth; // 0x534
	float ExitBleedingHealth; // 0x538
	float BleedOutTime; // 0x53c
	float EstimatedWorldTimeOfDeath; // 0x540
	AController* BleedStateInstigator; // 0x550
	AActor* BleedStateCauser; // 0x558
};

struct ABP_AK74M_1P78_Tracer_C : ABP_AK74M_1P78_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74MGP25_1P63_UGL_Smoke_C : ABP_AK74MGP25_1P63_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBP_L85A2AG36_ElcanLDS_StaticInfo_C : UBP_L85A2AG36_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USQPhysicalMaterialVehiclesEffects : UObject {
	TMap<USQPhysicalMaterial*, FSQVehicleEffect> Effects; // 0x28
};

struct ASQRandomizer : AActor {
	USceneComponent* Root; // 0x248
	int RandomSeed; // 0x250
};

struct ASQHealingEquipableItem : ASQEquipableItem {
	float TraceLength; // 0x480
	float TraceSphereRadius; // 0x484
	float MaxDurationForCancel; // 0x488
	FColor ErrorMessageColor; // 0x48c
	float ErrorMessageLifetime; // 0x490
	ASQSoldier* HealedTarget; // 0x498
	UAudioComponent* HealthAudioComponent; // 0x4a0
};

struct UAIResource_Logic : UGameplayTaskResource {
	int ManualResourceID; // 0x28
	uint8 AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UInterpTrack : UObject {
	TArray<UInterpTrack*> SubTracks; // 0x38
	UInterpTrackInst* TrackInstClass; // 0x48
	ETrackActiveCondition ActiveCondition; // 0x50
	FString TrackTitle; // 0x58
	char bOnePerGroup : 1; // 0x68
	char bDirGroupOnly : 1; // 0x68
	char bDisableTrack : 1; // 0x68
	char bIsSelected : 1; // 0x68
	char bIsAnimControlTrack : 1; // 0x68
	char bSubTrackOnly : 1; // 0x68
	char bVisible : 1; // 0x68
	char bIsRecording : 1; // 0x68
};

struct UBrushComponent : UPrimitiveComponent {
	UModel* Brush; // 0x408
	UBodySetup* BrushBodySetup; // 0x410
};

struct UMaterialExpressionRuntimeVirtualTextureOutput : UMaterialExpressionCustomOutput {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Specular; // 0x54
	FExpressionInput Roughness; // 0x68
	FExpressionInput Normal; // 0x7c
	FExpressionInput Opacity; // 0x90
};

struct ASceneCapture : AActor {
	UStaticMeshComponent* MeshComp; // 0x248
	USceneComponent* SceneComponent; // 0x250
};

struct USQAnimInstanceSoldier3P : USQAnimInstanceSoldier {
	bool bVaulting; // 0x420
	bool bClimbing; // 0x421
	bool bAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpEnd__rifle_stand_jumpendOrIsProne; // 0x422
	bool bAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart; // 0x423
	bool bAssetPlayerTime__GTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart; // 0x424
	bool bStateWeight__GTEOne__Stand3P__Jog; // 0x4a0
	float StateWeight__Stand3P__Jog; // 0x4a4
	bool bStateWeight__GTEOne__Stand3P__Sprint; // 0x4a8
	float StateWeight__Stand3P__Sprint; // 0x4ac
	float StateWeight__Stand3P__SprintStop; // 0x4b0
	bool bRelevantAnimTimeRemaining__LTEOne__Stand3P__SprintStop; // 0x4b4
	bool bStateWeight__GTEOne__Stand_NeutralStates__Neutral; // 0x52c
	bool bStateWeight__GTEOne__Stand_NeutralStates__TurnLeft_91; // 0x52d
	bool bStateWeight__GTEOne__Stand_NeutralStates__TurnRight_91; // 0x52e
	bool bRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnLeft_91; // 0x52f
	bool bRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnRight_91; // 0x530
	float StateWeight__Crouch3P__Sprint; // 0x5c4
	float StateWeight__Crouch3P__Walk; // 0x5c8
	bool bStateWeight__GTEOne__Crouch_NeutralStates__Neutral; // 0x606
	bool bStateWeight__GTEOne__Crouch_NeutralStates__TurnLeft_91; // 0x607
	bool bStateWeight__GTEOne__Crouch_NeutralStates__TurnRight_91; // 0x608
	float StateWeight__Prone3P__ProneMove; // 0x680
	bool bStateWeight__GTEOne__Prone_NeutralStates__Neutral; // 0x6a1
	bool bStateWeight__GTEOne__Prone_NeutralStates__TurnLeft_46; // 0x6a2
	bool bStateWeight__GTEOne__Prone_NeutralStates__TurnRight_46; // 0x6a3
	bool bStateWeight__GTEOne__SoldierMovements__Stand; // 0x6fb
	bool bStateWeight__GTEOne__SoldierMovements__Crouch; // 0x6fc
	bool bStateWeight__GTEOne__SoldierMovements__Stand2Crouch; // 0x6fd
	float StateWeight__SoldierMovements__Stand2Prone; // 0x700
	float StateWeight__SoldierMovements__Sprint2Prone; // 0x704
	float StateWeight__SoldierMovements__Prone2Stand; // 0x708
	float StateWeight__SoldierMovements__Crouch2Prone; // 0x70c
	float StateWeight__SoldierMovements__Prone2Crouch; // 0x710
	bool bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Stand2Prone__rifle_stand2prone; // 0x714
	bool bAssetPlayerTimeFromEnd__LTEPtTwo__SoldierMovements__Sprint2Prone__rifle_sprint2prone; // 0x715
	bool bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Stand__rifle_prone2stand; // 0x716
	bool bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Crouch2Prone__rifle_crouch2prone; // 0x717
	bool bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Crouch__rifle_prone2crouch; // 0x718
	bool bAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Stand2Crouch__Stand2Crouch; // 0x719
	bool bAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Crouch2Stand__Crouch2Stand; // 0x71a
	bool bIsSprinting; // 0x8fd
	float CustomNotIsFallingAlpha; // 0x900
	UBlendSpace1D* BS1D_3pStandSprintType; // 0x908
	UAnimSequence* SprintStop3p; // 0x910
	UBlendSpace1D* BS1D_3pCrouchSprintType; // 0x918
	UBlendSpace* BS_3pStandJogType; // 0x920
	UBlendSpace* BS_3pStandWalkType; // 0x928
	UBlendSpace* BS_3pCrouchWalkType; // 0x930
	UBlendSpace1D* BS1D_3pProneCrawlType; // 0x938
	UAnimSequence* StandStopMove; // 0x940
	UAnimSequence* CrouchStopMove; // 0x948
	UAnimSequence* StandLeanLeftShuffle; // 0x950
	UAnimSequence* StandLeanRightShuffle; // 0x958
	UAnimSequence* CrouchLeanLeftShuffle; // 0x960
	UAnimSequence* CrouchLeanRightShuffle; // 0x968
	UBlendSpace1D* AO1D_StandPitch; // 0x970
	UBlendSpace1D* AO1D_CrouchPitch; // 0x978
	UBlendSpace1D* AO1D_PronePitch; // 0x980
	UBlendSpace* AO_BipodStandCrouchPitch; // 0x988
	UAnimSequence* AO1D_StandYawSF; // 0x990
	UAnimSequence* AO1D_CrouchYawSF; // 0x998
	UAnimSequence* AO1D_ProneYawSF; // 0x9a0
	UAnimSequence* StandTurnRight; // 0x9a8
	UAnimSequence* StandTurnLeft; // 0x9b0
	UAnimSequence* CrouchTurnLeft; // 0x9b8
	UAnimSequence* CrouchTurnRight; // 0x9c0
	UAnimSequence* ProneTurnRight; // 0x9c8
	UAnimSequence* ProneTurnLeft; // 0x9d0
	UAnimSequence* SprintToProne3p; // 0x9d8
	UAnimSequence* StandToProne3p; // 0x9e0
	UAnimSequence* ProneToStand3p; // 0x9e8
	UAnimSequence* CrouchToProne3p; // 0x9f0
	UAnimSequence* ProneToCrouch3p; // 0x9f8
	FVector FpvLowerRootBoneOffset; // 0xa00
	float CustomSpeedMin40; // 0xa0c
	float ProneStopMoveAlpha; // 0xa10
	float CrouchStopMoveAlpha; // 0xa14
	bool bFP_HighestClimbAnim; // 0xa18
	bool bFP_T_Jump_3PJumpStartToJumpEnd; // 0xa19
	bool bFP_T_Stand3PSprintStopToJog; // 0xa1a
	bool bFP_T_Stand3PSprintToSprintStop; // 0xa1b
	bool bFP_T_Stand3PJogToSprint; // 0xa1c
	bool bFP_T_Stand_NeutralStatesTurnRight_90ToTurnLeft_91; // 0xa1d
	bool bFP_T_Stand_NeutralStatesTurnLeft_90ToTurnRight_91; // 0xa1e
	bool bFP_T_Stand_NeutralStatesNeutralToTurnLeft_91; // 0xa1f
	bool bFP_T_Stand_NeutralStatesNeutralToTurnRight_91; // 0xa20
	bool bFP_T_Crouch_NeutralStatesTurnRight_90ToNeutral; // 0xa21
	bool bFP_T_Crouch_NeutralStatesTurnRight_90ToTurnLeft_91; // 0xa22
	bool bFP_T_Crouch_NeutralStatesTurnLeft_90ToNeutral; // 0xa23
	bool bFP_T_Crouch_NeutralStatesTurnLeft_90ToTurnRight_91; // 0xa24
	bool bFP_T_Crouch_NeutralStatesNeutralToTurnLeft_91; // 0xa25
	bool bFP_T_Crouch_NeutralStatesNeutralToTurnRight_91; // 0xa26
	bool bFP_T_Prone_NeutralStatesTurnLeft_45ToNeutral; // 0xa27
	bool bFP_T_Prone_NeutralStatesTurnLeft_45ToTurnRight_46; // 0xa28
	bool bFP_T_Prone_NeutralStatesTurnRight_45ToNeutral; // 0xa29
	bool bFP_T_Prone_NeutralStatesTurnRight_45ToTurnLeft_46; // 0xa2a
	bool bFP_T_Prone_NeutralStatesNeutralToTurnLeft_46; // 0xa2b
	bool bFP_T_Prone_NeutralStatesNeutralToTurnRight_46; // 0xa2c
	bool bFP_T_SoldierMovementsCrouch2StandToStand; // 0xa2d
	bool bFP_T_SoldierMovementsStand2CrouchToCrouch2Prone; // 0xa2e
	bool bFP_T_SoldierMovementsStand2CrouchToCrouch; // 0xa2f
	bool bFP_T_SoldierMovementsCrouchToCrouch2Prone; // 0xa30
	bool bFP_T_SoldierMovements_StandToCrouch; // 0xa31
	bool bFP_T_SoldierMovementsStandToStand2Prone; // 0xa32
	bool bFP_T_SoldierMovementsStandToStand2Crouch; // 0xa33
	bool bFP_T_SoldierMovementsStandToSprint2Prone; // 0xa34
	FRotator FP_FloorAlignedRotationRightFoot; // 0xa38
	FRotator FP_FloorAlignedRotationLeftFoot; // 0xa44
	FRotator FP_FloorAlignedRotationFeetRoot; // 0xa50
	FRotator FP_FloorAlignedRotationFeetRootReverse; // 0xa5c
	FVector FP_IKFeetRootTranslation; // 0xa68
	float FP_IsNotFirstPersonVisibilityAlpha; // 0xa74
	float FP_StandIdleAlpha; // 0xa78
	float FP_CrouchProneIdleAlpha; // 0xa7c
	bool bFP_IsStanding; // 0xa80
	bool bFP_IsStandingStill; // 0xa81
	bool bFP_CanCrouchToStandingStill; // 0xa82
	bool bFP_CanCrouchToStandMoving; // 0xa83
	bool bFP_IsCrouchedInPlace; // 0xa84
	float FP_AimOffsetProneYawFrameTime; // 0xa88
	float FP_AimOffsetYawNegative; // 0xa8c
	float FP_AimOffsetProneTurnRightYawFrameTime; // 0xa90
	float FP_AimOffsetTurnRightYawNegative; // 0xa94
	float FP_AimOffsetProneTurnLeftYawFrameTime; // 0xa98
	float FP_AimOffsetTurnLeftYawNegative; // 0xa9c
	float FP_ProneWalkPlayRate; // 0xaa0
	bool bFP_IsMoving; // 0xaa4
	bool bFP_IsNotMoving; // 0xaa5
	FRotator FP_FloorAlignedRotationBody; // 0xaa8
	FRotator FP_FloorAlignedRotationBodyReverse; // 0xab4
	float FP_CustomSpeedMin40NormalizedToRange; // 0xac0
	bool bFP_IsProneAndNotDeployBipod; // 0xac4
	bool bFP_IsClimbingOrVaulting; // 0xac5
	FRotator FP_FreeLook3PHeadRotation; // 0xac8
	float FP_BipodCrouchStanceAlpha; // 0xad4
	float FP_BipodStandCrouchAimPitchAlpha; // 0xad8
	float FP_BipodProneStanceAlpha; // 0xae0
	float FP_BipodAimOffsetAlpha; // 0xae4
	float FP_BipodWeaponPosCoveredPoseAlphaDependingOnSkelMeshOffset; // 0xae8
	float FP_BipodCoveredPoseBlendAlpha; // 0xaec
	FVector FP_BipodHighPitchCoveredPoseWeaponPositionOffset; // 0xaf0
	FVector FP_BipodDynamicBodyOffset; // 0xafc
	float FP_AimOffsetCrouchYawFrameTime; // 0xb08
	float FP_AimOffsetTurnLeftYawPlayRate; // 0xb0c
	float FP_AimOffsetTurnLeftProneYawPlayRate; // 0xb10
	float FP_AimOffsetTurnLeftYawFrameTime; // 0xb14
	float FP_AimOffsetTurnRightYawPlayRate; // 0xb18
	float FP_AimOffsetTurnRightProneYawPlayRate; // 0xb1c
	float FP_AimOffsetTurnRightYawFrameTime; // 0xb20
	float FP_StandStopMoveAlpha; // 0xb24
	float FP_AimYawFrameTime2; // 0xb28
	float FP_CrouchWalkPlayRate; // 0xb2c
	float FP_AimYawJogFrameTime; // 0xb30
	float FP_AimPitchJogAlpha; // 0xb34
	float FP_JogPlayRate; // 0xb38
	float FP_SprintStopAlpha; // 0xb3c
	bool bFP_Stand3PNeutralToJogRule; // 0xb40
	bool bFP_Stand3PJogToNeutralRule; // 0xb41
	bool bFP_Stand3PSprintToNeutralRule; // 0xb42
	float FP_AimOffsetStandYawFrameTime; // 0xb44
	float FP_JumpEndAlpha; // 0xb48
	bool bFP_IsFallingAndNotJumping; // 0xb4c
	float FP_Final3PLeftHandIKOutAlpha; // 0xb50
	bool bFP_AOStandToConduit; // 0xb54
	bool bFP_AOStandSprintJog; // 0xb55
	bool bFP_AOCrouchToConduit; // 0xb56
	bool bFP_AOProneToConduit; // 0xb57
	bool bFP_AOConduitToCrouch; // 0xb58
	float FP_BS_StandSprintSpeed; // 0xb5c
	FRotator FP_SprintHeadDirection; // 0xb60
	float FP_SprintRootDirection; // 0xb6c
	float FP_BS_CrouchSprintSpeed; // 0xb70
	bool bFP_LeanHeadWhenADSAndADS; // 0xb74
	bool bFinal3pLeftHandIkOut; // 0xb75
	float CustomWeapActionsAndIsAds; // 0xb78
	float FP_WalkPlayRate; // 0xb7c
	float FP_IsNotMovingAlpha; // 0xb80
	float FP_LeanYawOffsetFrameTime; // 0xb84
	float FP_AlphaAbsIkFeetRootPitch; // 0xb88
	FRotator RawActorRotation; // 0xb8c
	FRotator SmoothedControlRotation; // 0xb98
	bool bTurnNeutAoDisabled; // 0xba4
	FRotator CachedActorYaw; // 0xba8
	bool bLeftHandIkOut; // 0xbb4
	bool bJumpEndBobbing3P; // 0xbb5
	float CustomIsSprinting; // 0xbb8
	float CustomIsAdsOrBipod; // 0xbbc
	FVector SmoothVelocity; // 0xbc0
	float AccelRateClamp; // 0xbcc
	FRotator SmoothWorldDirection; // 0xbd0
	FRotator AimRotation_3P; // 0xbdc
	FRotator AimRotation2_3P; // 0xbe8
	bool bTurnLeftAnim; // 0xbf4
	bool bFullMoveAnim; // 0xbf5
	bool bTurnRightAnim; // 0xbf6
	bool bTurnLeft; // 0xbf7
	bool bTurnRight; // 0xbf8
	bool bTurnLeftProne; // 0xbf9
	bool bTurnRightProne; // 0xbfa
	FRotator YawOffset; // 0xbfc
	FRotator YawOffsetDuringTurnLeft; // 0xc08
	FRotator YawOffsetDuringTurnRight; // 0xc14
	bool bFullSprintAnim; // 0xc20
	float LastSpeed; // 0xc24
	float SprintStopCachedSpeed; // 0xc28
	bool bCachedIsProne; // 0xc2c
	float StandStopMoveAlpha; // 0xc30
	bool bCachedIsCrouched; // 0xc34
	bool bCachedIsStand; // 0xc35
	bool bProneTransAnim; // 0xc36
	FVector PmCachedCapsuleWorldLoc1; // 0xc38
	FVector EndSprintToProneCapsuleLoc; // 0xc44
	float Alpha; // 0xc50
	float LastKnownHeight; // 0xc54
	float HeightVelocity; // 0xc58
	float LastKnownHeightVelocity; // 0xc5c
	float BipodAimUpLimit3P; // 0xc60
	float BipodAimDownLimit3P; // 0xc64
	float CustomNotVaultingAlpha; // 0xc68
	float CustomNotClimbingAlpha; // 0xc6c
	FVector CurrentFloorNormalBody; // 0xc70
	FVector CurrentFloorNormalFeet; // 0xc7c
	FRotator IkFeetRootRelRot; // 0xc88
	FVector LeftFootFloorNormal; // 0xc94
	FVector RightFootFloorNormal; // 0xca0
	float CustomIsLoweredAndNotProne; // 0xcac
	FRotator MeshRotationOffset; // 0xcb0
	FRotator CachedActorRotationNoLean; // 0xcbc
	float CachedLeanYawOffset; // 0xcc8
	bool bLeanHeadWhenAds; // 0xcd0
};

struct UGridPathFollowingComponent : UPathFollowingComponent {
	UNavLocalGridManager* GridManager; // 0x280
};

struct USQProjectileRootComponent : USphereComponent {
	float SphereRadius; // 0x420
};

struct UMaterialExpressionStaticSwitchParameter : UMaterialExpressionStaticBoolParameter {
	FExpressionInput A; // 0x60
	FExpressionInput B; // 0x74
};

struct USQAvailability_Vehicle : USQAvailability {
	USQVehicleSettings* Setting; // 0x50
};

struct ULandscapeMaterialInstanceConstant : UMaterialInstanceConstant {
	char bIsLayerThumbnail : 1; // 0x1c8
	char bDisableTessellation : 1; // 0x1c8
	char bMobile : 1; // 0x1c8
	char bEditorToolUsage : 1; // 0x1c8
};

struct UMovieSceneAudioTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AudioSections; // 0x58
};

struct AGameplayAbilityTargetActor_GroundTrace : AGameplayAbilityTargetActor_Trace {
	float CollisionRadius; // 0x370
	float CollisionHeight; // 0x374
};

struct ABP_RPG7_Heat_2Mag_C : ABP_RPG7_Heat_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UBP_Attachment_AKS74_Front_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ASQTeamStatePrivate : AInfo {
	TArray<ASQSquadStatePrivateToTeam*> IndexedTeamPrivateSquadStates; // 0x250
	TArray<ASQSquadStatePrivateToTeam*> TeamPrivateSquadStates; // 0x260
	int ID; // 0x270
};

struct UBP_HighlightsSubsystem_C : USQBaseGameSubsystem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x40
	bool HighlightsInitialized; // 0x48
	FGfeSDKHighlightOpenGroupParams HighlightOpenGroupParams; // 0x50
	FGfeSDKHighlightSummaryParams HighlightsSummaryParams; // 0xb0
	FGfeSDKHighlightConfigParams HighlightsConfigParams; // 0xc0
	int ActiveGroupId; // 0xe0
	bool DestroyHighlights; // 0xe4
	FHighlightEventStruct VehicleDestroyedEventParams; // 0xe8
	FHighlightEventStruct PlayerKilledEventParams; // 0x110
	FHighlightEventStruct IED_DetonatedEventParams; // 0x138
	EGfeSDKHighlightSignificance EventSignificance; // 0x160
	EGfeSDKHighlightType HighlightType; // 0x161
	int NumberOfHighlights; // 0x164
};

struct ANavLinkProxy : AActor {
	TArray<FNavigationLink> PointLinks; // 0x258
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x268
	UNavLinkCustomComponent* SmartLinkComp; // 0x278
	bool bSmartLinkIsRelevant; // 0x280
	FScriptMulticastDelegate OnSmartLinkReached; // 0x288
};

struct UInputAxisDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputAxisDelegateBinding> InputAxisDelegateBindings; // 0x28
};

struct ASQVehicleTurret : ASQVehicleSeat {
	float ADSSpeed; // 0x358
	float PitchLimit; // 0x35c
	float MinPitchLimit; // 0x360
	float YawLimit; // 0x364
	float MinYawLimit; // 0x368
	USQVehicleSeatComponent* ParentSeatComponent; // 0x370
	ESQListenerType ListenerType; // 0x378
	bool bIsCameraInitialized; // 0x379
	bool bShouldSendClientSideCameraUpdate; // 0x37a
	TArray<USQVehicleComponent*> VehicleComponents; // 0x380
	USQVehicleComponent* CachedVehicleEngine; // 0x390
	bool bTurnOut; // 0x398
	USQVehicleInventoryComponent* CachedVehicleInventory; // 0x3a0
	UCameraComponent* CachedCameraComponent; // 0x3a8
	float SeatHealth; // 0x3b0
	USQFreeLookComponent* FreeLookComponent; // 0x3b8
	USQMovementComponentManager* MovementComponentManager; // 0x3c0
};

struct UMovieSceneObjectPropertySection : UMovieSceneSection {
	FMovieSceneObjectPathChannel ObjectChannel; // 0xe0
};

struct ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Smoke_Red_C : ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ASQGameMode_Menu : AGameMode {
	FName MatchState; // 0x340
	char bDelayedStart : 1; // 0x348
	int NumSpectators; // 0x34c
	int NumPlayers; // 0x350
	int NumBots; // 0x354
	float MinRespawnDelay; // 0x358
	int NumTravellingPlayers; // 0x35c
	ULocalMessage* EngineMessageClass; // 0x368
	TArray<APlayerState*> InactivePlayerArray; // 0x370
	float InactivePlayerStateLifeSpan; // 0x380
	int MaxInactivePlayers; // 0x384
	bool bHandleDedicatedServerReplays; // 0x388
};

struct UMaterialExpressionParticleMotionBlurFade : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMaterialExpressionFresnel : UMaterialExpression {
	FExpressionInput ExponentIn; // 0x40
	float Exponent; // 0x54
	FExpressionInput BaseReflectFractionIn; // 0x58
	float BaseReflectFraction; // 0x6c
	FExpressionInput Normal; // 0x70
};

struct UFloatBinding : UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct UEndMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMaterialShaderQualitySettings : UObject {
	TMap<FName, UShaderPlatformQualitySettings*> ForwardSettingMap; // 0x28
};

struct USQVehicleWeaponAnimInstance : UAnimInstance {
	float Pitch; // 0x268
	float Yaw; // 0x26c
	float CurrentMagRemainingRoundsTime; // 0x270
	float CurrentMagRemainingRoundsMultiplier; // 0x274
};

struct ABP_M4M203_M150_UGL_HE_C : ABP_M4M203_M150_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UPlayFabAdminAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x760
	UPlayFabJsonObject* RequestJsonObj; // 0x768
	UPlayFabJsonObject* ResponseJsonObj; // 0x770
};

struct UBP_Attachment_LeupoldScope_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UInt32Binding : UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct UWrapBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	bool bFillEmptySpace; // 0x48
	float FillSpanWhenLessThan; // 0x4c
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct ASQInfantryWeapon : ASQWeapon {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQSoundNodeListenerType : USoundNode {
	bool bLooping; // 0x40
	bool bRestartSoundWaveWhenListenerTypeChanges; // 0x41
	float ListenerTypeCheckFrequency; // 0x44
};

struct ASQSquadRallyPoint : ASQGameRallyPoint {
	ASQSquad* AuthoritySquad; // 0x440
	ASQSquadState* SquadState; // 0x448
};

struct UAISenseConfig_Sight : UAISenseConfig {
	UAISense_Sight* Implementation; // 0x48
	float SightRadius; // 0x50
	float LoseSightRadius; // 0x54
	float PeripheralVisionAngleDegrees; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
	float AutoSuccessRangeFromLastSeenLocation; // 0x60
};

struct UAchievementQueryCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct USQSquadStateDataPlayerState : USQSquadStateData {
	char bIsSquadLeader : 1; // 0x118
	char bIsFireTeamLeader : 1; // 0x118
	int FireTeamIndex; // 0x11c
	int FireTeamPosition; // 0x120
	USQRoleSettings* DeployRole; // 0x128
	USQVehicleUIStaticDataAsset* CurrentVehicleData; // 0x130
	ASQPlayerState* PlayerState; // 0x138
	int PlayerId; // 0x140
	FSQCoreStateId SelectionComponentId; // 0x144
	ESQVoiceChannel VoipChannel; // 0x146
	bool bIsMuted; // 0x147
};

struct USQVehicleClaim : UObject {
	ASQVehicle* VehicleClaimed; // 0x28
	ASQSquad* ClaimingSquad; // 0x30
	TArray<ASQPlayerState*> PlayersPartyToClaim; // 0x38
	ESQVehicleClaimStatus Status; // 0x48
	float TimeOfClaim; // 0x4c
	float TimeOfExpiration; // 0x50
	bool bExpired; // 0x54
	FTimerHandle ExpirationTimerHandle; // 0x58
};

struct ABP_AK74_Recruit_Founders_C : ABP_AK74_Recruit_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UNavigationInvokerComponent : UActorComponent {
	float TileGenerationRadius; // 0xd8
	float TileRemovalRadius; // 0xdc
};

struct UBTTask_PushPawnAction : UBTTask_PawnActionBase {
	UPawnAction* Action; // 0x70
};

struct USQGraphRAASVisualizerComponent : USQGraphAASVisualizerComponent {
	int RouteIndex; // 0xf8
};

struct UAbilityTask_WaitGameplayEvent : UAbilityTask {
	FScriptMulticastDelegate EventReceived; // 0x80
	UAbilitySystemComponent* OptionalExternalTarget; // 0x98
};

struct ASQKillDeathRuleset : ASQGameRuleSet {
	FSQKillDeathSettings TeamOneSettings; // 0x270
	FSQKillDeathSettings TeamTwoSettings; // 0x2b0
	float SpawnDelayPenaltyForSuicide; // 0x2f0
	float SpawnDelayPenaltyForTeamKill; // 0x2f4
	FSQHealSettings TeamOneHealSettings; // 0x2f8
	FSQHealSettings TeamTwoHealSettings; // 0x31c
	int TeamkillsBeforeKick; // 0x340
	float DefaultPointsForVehicleDestroy; // 0x344
	bool bDefaultShouldDelayScoreForVehicleDestroy; // 0x348
	int DefaultTicketsLostForVehicleDestroy; // 0x34c
	bool bTKAutoKickEnabled; // 0x350
};

struct UBP_AK74MGP25_Rifle_StaticInfo_C : UBP_AK74GP25_Rifle_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct ADocumentationActor : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UStaticMeshSocket : UObject {
	FName SocketName; // 0x28
	FVector RelativeLocation; // 0x30
	FRotator RelativeRotation; // 0x3c
	FVector RelativeScale; // 0x48
	FString Tag; // 0x58
};

struct UAssetManagerSettings : UDeveloperSettings {
	TArray<FPrimaryAssetTypeInfo> PrimaryAssetTypesToScan; // 0x38
	TArray<FDirectoryPath> DirectoriesToExclude; // 0x48
	TArray<FPrimaryAssetRulesOverride> PrimaryAssetRules; // 0x58
	TArray<FPrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules; // 0x68
	bool bOnlyCookProductionAssets; // 0x78
	bool bShouldManagerDetermineTypeAndName; // 0x79
	bool bShouldGuessTypeAndNameInEditor; // 0x7a
	bool bShouldAcquireMissingChunksOnLoad; // 0x7b
	TArray<FAssetManagerRedirect> PrimaryAssetIdRedirects; // 0x80
	TArray<FAssetManagerRedirect> PrimaryAssetTypeRedirects; // 0x90
	TArray<FAssetManagerRedirect> AssetPathRedirects; // 0xa0
	TSet<FName> MetaDataTagsForAssetRegistry; // 0xb0
};

struct UHudSettings : UObject {
	char bShowHUD : 1; // 0x28
	TArray<FName> DebugDisplay; // 0x30
};

struct UPlayFabCloudScriptAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xa0
	UPlayFabJsonObject* RequestJsonObj; // 0xa8
	UPlayFabJsonObject* ResponseJsonObj; // 0xb0
};

struct UBTDecorator_IsBBEntryOfClass : UBTDecorator_BlackboardBase {
	UObject* TestClass; // 0x90
};

struct UBP_SQFaction_C : USQFaction {
	UDataTable* GruntVoiceTable; // 0x80
	UDataTable* SLVoiceTable; // 0x88
	SQEAlliance Alliance; // 0x90
	TSet<SQETheatersOfOperations> TheatersOfOperations; // 0x98
};

struct UMaterialExpressionClearCoatNormalCustomOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UViewport : UContentWidget {
	FLinearColor BackgroundColor; // 0x120
};

struct ABP_M4M203_M150_UGL_Woodland_Smoke_Blue_C : ABP_M4M203_M150_UGL_Woodland_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBP_M4M203_M68_UGL_HE_StaticInfo_C : UBP_M4M203_M68_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UBTTask_BlackboardBase : UBTTaskNode {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UMotionControllerComponent : UPrimitiveComponent {
	int PlayerIndex; // 0x408
	EControllerHand Hand; // 0x40c
	FName MotionSource; // 0x410
	char bDisableLowLatencyUpdate : 1; // 0x418
	ETrackingStatus CurrentTrackingStatus; // 0x41c
	bool bDisplayDeviceModel; // 0x41d
	FName DisplayModelSource; // 0x420
	UStaticMesh* CustomDisplayMesh; // 0x428
	TArray<UMaterialInterface*> DisplayMeshMaterialOverrides; // 0x430
	UPrimitiveComponent* DisplayComponent; // 0x4a0
};

struct ABP_AK74MGP25_UGL_Desert_Parent_C : ABP_AK74GP25_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4A1_M150_Foregrip_Founders_C : ABP_M4A1_M150_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleRotationOverLifetime : UParticleModuleRotationBase {
	FRawDistributionFloat RotationOverLife; // 0x30
	char Scale : 1; // 0x68
};

struct UInterpTrackInstFloatProp : UInterpTrackInstProperty {
	float ResetFloat; // 0x40
};

struct UVerticalBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	FSlateChildSize Size; // 0x48
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct ASQWeapon : ASQEquipableItem {
	USQWeaponStaticInfo* WeaponStaticInfo; // 0x480
	FSQAudioComponentPool FiringAudioComponentPool; // 0x488
	FTimerHandle ZoomFinishAdsTransitionTimerHandle; // 0x580
	bool bWaitingForMagazineLoad; // 0x588
	char bFiring : 1; // 0x58c
	char bReloading : 1; // 0x58c
	FSQWeaponData WeaponConfig; // 0x590
	ESQWeaponState CurrentState; // 0x650
	float ADSMoveSpeedMultiplier; // 0x654
	bool bAimingDownSights; // 0x658
	bool bFireInput; // 0x659
	bool bPendingFire; // 0x65a
	float MaxTimeToLoopSoundsAfterLastFire; // 0x668
	float ModifiedTacticalReloadDuration; // 0x66c
	float ModifiedDryReloadDuration; // 0x670
	int CurrentFireMode; // 0x690
	TArray<FSQMagazineData> Magazines; // 0x6a0
	TArray<USQWeaponAttachment*> AttachmentClasses; // 0x6b0
	TArray<USQWeaponAttachment*> Attachments; // 0x6c0
	UADSPostProcessSettings* ADSPostProcessSettings; // 0x6d0
	bool bUseStopADSPPDrawing; // 0x6d8
	bool bStopADSPPDrawing; // 0x6d9
	FSQDynamicEasingStruct HoldingZoomEasing; // 0x6dc
	float HoldingZoomEasingAlpha; // 0x6f0
	float HoldingZoomRawAlpha; // 0x6f4
	float HoldingZoomIntermediateAlpha; // 0x6f8
	float HoldingZoomTargetAlpha; // 0x6fc
	float CurrentFOV; // 0x700
	float ZoomedFOV; // 0x704
	float FocusZoomTime; // 0x708
	float FocusAdditionalZoom; // 0x70c
	float TimeSinceLastZoomToggle; // 0x710
	float LastZoomProgressAtToggle; // 0x714
	float AdjustAdsSightItemAnimPos; // 0x718
	float CachedAdjustAdsSightItemAnimPos; // 0x71c
	float NewAdjustAdsSightItemAnimPos; // 0x720
	float AdjustAdsSightItemAnimPosAlpha; // 0x724
	int MaxConcurrentSounds; // 0x728
	float MaxConcurrentSoundsFadeOut; // 0x72c
	bool bIs1PUsingSquadSoundNodeLooping; // 0x730
	bool bIs3PUsingSquadSoundNodeLooping; // 0x731
	UAudioComponent* CurrentFiringAC; // 0x738
	TArray<UAudioComponent*> FiringACs; // 0x740
	USoundCue* SemiAutoSound1P; // 0x750
	USoundCue* SemiAutoSound3P; // 0x758
	USoundCue* StartingSound1P; // 0x760
	USoundCue* StartingSound3P; // 0x768
	bool bIsModifyingZeroing; // 0x780
	int AdjustableSightItemPos; // 0x784
	float CachedLastZeroingTime; // 0x788
	float CachedLastZeroingPlayTime; // 0x78c
	int CachedLastZeroingPosition; // 0x790
	bool bCachedIsBipodDeployed; // 0x794
	bool bCachedAimProneBobbing; // 0x795
	bool bFinishedAdsTransition; // 0x796
	bool bLastNewZoom; // 0x797
	bool FireSwaySelector; // 0x798
	bool PreFireSwaySelector; // 0x799
};

struct UMaterialExpressionWorldPosition : UMaterialExpression {
	EWorldPositionIncludedOffsets WorldPositionShaderOffset; // 0x40
};

struct UMovieScene2DTransformSection : UMovieSceneSection {
	FMovieScene2DTransformMask TransformMask; // 0xe0
	FMovieSceneFloatChannel Translation[0x2]; // 0xe8
	FMovieSceneFloatChannel Rotation; // 0x228
	FMovieSceneFloatChannel Scale[0x2]; // 0x2c8
	FMovieSceneFloatChannel Shear[0x2]; // 0x408
};

struct UARSaveWorldAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FScriptMulticastDelegate OnSuccess; // 0x50
	FScriptMulticastDelegate OnFailed; // 0x60
};

struct USQTeamDataCacher : UActorComponent {
	TArray<UObject*> LoadedClasses; // 0xd8
	TArray<UObject*> LoadedCDOs; // 0xe8
};

struct UBP_L85A2_ElcanLDS_Foregrip_StaticInfo_C : UBP_L85A2_Foregrip_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UCreateSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMaterialExpressionTangent : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UMaterialExpressionRound : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UParticleModuleLifetime_Seeded : UParticleModuleLifetime {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x68
};

struct UBP_SQFactionSetup_C : USQFactionSetup {
	ESQFactionSetupType Type; // 0xd8
	TSet<ESQFactionSetupTag> Tags; // 0xe0
	bool CanUseCommanderActionNearVehicle; // 0x130
	bool HasBuddyRally; // 0x131
	TArray<FSQRoleGroupingStrategy> RoleGroupingStrategies; // 0x138
	TArray<FSQRoleGroupingStrategy> RoleCategories; // 0x148
	TArray<FSQRoleGroupingStrategy> RoleGroupingTags; // 0x158
	TArray<FSQDeployableGroupingStrategy> DeployableGroupingStrategies; // 0x168
	TArray<FSQActionGroupingStrategy> ActionGroupingStrategies; // 0x178
};

struct USQSquadStateDataMapMarker : USQSquadStateMapData {
	UTexture2D* Texture; // 0x180
	FLinearColor Tint; // 0x188
	int FireTeamId; // 0x198
};

struct USQCompassBaseUnit : USQUserWidget {
	UImage* BaseImage; // 0x230
};

struct USQMapWidgetCaptureZone : USQMapWidget {
	FText FlagName; // 0x2a8
	UTexture2D* FlagTexture; // 0x2c0
	UTexture2D* DefaultFlag; // 0x2e8
	char bUncappable : 1; // 0x310
	ESQContestingState ContestingState; // 0x314
	char OwningTeam; // 0x315
	char CapturingTeam; // 0x316
	float CapturePercent; // 0x318
};

struct UFieldSystemMetaDataProcessingResolution : UFieldSystemMetaData {
	EFieldResolutionType ResolutionType; // 0xd8
};

struct USimpleConstructionScript : UObject {
	TArray<USCS_Node*> RootNodes; // 0x28
	TArray<USCS_Node*> AllNodes; // 0x38
	USCS_Node* DefaultSceneRootNode; // 0x48
};

struct USystemTimeTimecodeProvider : UTimecodeProvider {
	FFrameRate FrameRate; // 0x28
};

struct UBTTask_SetTagCooldown : UBTTaskNode {
	FGameplayTag CooldownTag; // 0x70
	bool bAddToExistingDuration; // 0x78
	float CooldownDuration; // 0x7c
};

struct UBlackboardComponent : UActorComponent {
	UBrainComponent* BrainComp; // 0xd8
	UBlackboardData* BlackboardAsset; // 0xe0
	TArray<UBlackboardKeyType*> KeyInstances; // 0x108
};

struct UTextureCube : UTexture {
	FGuid LightingGuid; // 0x48
	int LODBias; // 0x58
	TextureCompressionSettings CompressionSettings; // 0x5c
	TextureFilter Filter; // 0x5d
	ETextureMipLoadOptions MipLoadOptions; // 0x5e
	TextureGroup LODGroup; // 0x5f
	char SRGB : 1; // 0x60
	char bNoTiling : 1; // 0x60
	char VirtualTextureStreaming : 1; // 0x60
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x68
};

struct UBP_AK74MGP25_UGL_Reflex_Parent_StaticInfo_C : UBP_AK74GP25_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UShadowMapTexture2D : UTexture2D {
	EShadowMapFlags ShadowmapFlags; // 0x100
};

struct USQMagazineWidget : USQUserWidget {
	UImage* SelectedImage; // 0x230
	UImage* AmmoImage; // 0x238
};

struct ULevel : UObject {
	UWorld* OwningWorld; // 0xb8
	UModel* Model; // 0xc0
	TArray<UModelComponent*> ModelComponents; // 0xc8
	ULevelActorContainer* ActorCluster; // 0xd8
	int NumTextureStreamingUnbuiltComponents; // 0xe0
	int NumTextureStreamingDirtyResources; // 0xe4
	ALevelScriptActor* LevelScriptActor; // 0xe8
	ANavigationObjectBase* NavListStart; // 0xf0
	ANavigationObjectBase* NavListEnd; // 0xf8
	TArray<UNavigationDataChunk*> NavDataChunks; // 0x100
	float LightmapTotalSize; // 0x110
	float ShadowmapTotalSize; // 0x114
	TArray<FVector> StaticNavigableGeometry; // 0x118
	TArray<FGuid> StreamingTextureGuids; // 0x128
	FGuid LevelBuildDataId; // 0x1d0
	UMapBuildDataRegistry* MapBuildData; // 0x1e0
	FIntVector LightBuildLevelOffset; // 0x1e8
	char bIsLightingScenario : 1; // 0x1f4
	char bTextureStreamingRotationChanged : 1; // 0x1f4
	char bStaticComponentsRegisteredInStreamingManager : 1; // 0x1f4
	char bIsVisible : 1; // 0x1f4
	AWorldSettings* WorldSettings; // 0x240
	TArray<UAssetUserData*> AssetUserData; // 0x250
	TArray<FReplicatedStaticActorDestructionInfo> DestroyedReplicatedStaticActors; // 0x270
};

struct UPlayFabClientAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xa40
	UPlayFabJsonObject* RequestJsonObj; // 0xa48
	UPlayFabJsonObject* ResponseJsonObj; // 0xa50
};

struct ABP_M110_Optic_C : ABP_GenericRifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ASQSquadStatePrivateToTeam : AInfo {
	ASQSquad* AuthoritySquad; // 0x250
	ASQTeamStatePrivate* PrivateTeamState; // 0x258
	ASQSquadState* SquadState; // 0x260
};

struct UMaterialInstanceConstant : UMaterialInstance {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UMaterialInterface* Parent; // 0x90
	char bHasStaticPermutationResource : 1; // 0x9a
	char bOverrideSubsurfaceProfile : 1; // 0x9a
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xa0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xb0
	TArray<FTextureParameterValue> TextureParameterValues; // 0xc0
	TArray<FFontParameterValue> FontParameterValues; // 0xd0
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0xe0
	TArray<UObject*> PermutationTextureReferences; // 0xf8
	FStaticParameterSet StaticParameters; // 0x108
};

struct USQMapWidgetPawn : USQMapWidget {
	char bIsOwned : 1; // 0x2a8
	char bIsOwnedBySelf : 1; // 0x2a8
	char bIsInSelfTeam : 1; // 0x2a8
	char bIsInSelfSquad : 1; // 0x2a8
	int FireTeamIndex; // 0x2ac
	float CameraRotationYaw; // 0x2b0
	float IsSelfZOrder; // 0x2b4
};

struct ULightComponentBase : USceneComponent {
	FGuid LightGuid; // 0x218
	float Brightness; // 0x228
	float Intensity; // 0x22c
	FColor LightColor; // 0x230
	char bAffectsWorld : 1; // 0x234
	char CastShadows : 1; // 0x234
	char CastStaticShadows : 1; // 0x234
	char CastDynamicShadows : 1; // 0x234
	char bAffectTranslucentLighting : 1; // 0x234
	char bTransmission : 1; // 0x234
	char bCastVolumetricShadow : 1; // 0x234
	char bCastRaytracedShadow : 1; // 0x234
	char bAffectReflection : 1; // 0x235
	char bAffectGlobalIllumination : 1; // 0x235
	float IndirectLightingIntensity; // 0x238
	float VolumetricScatteringIntensity; // 0x23c
	int SamplesPerPixel; // 0x240
};

struct USkeletalBodySetup : UBodySetup {
	bool bSkipScaleFromAnimation; // 0x240
	TArray<FPhysicalAnimationProfile> PhysicalAnimationData; // 0x248
};

struct USoundCue : USoundBase {
	char bOverrideAttenuation : 1; // 0x110
	char bExcludeFromRandomNodeBranchCulling : 1; // 0x110
	USoundNode* FirstNode; // 0x118
	float VolumeMultiplier; // 0x120
	float PitchMultiplier; // 0x124
	FSoundAttenuationSettings AttenuationOverrides; // 0x128
	float SubtitlePriority; // 0x410
	char bHasPlayWhenSilent : 1; // 0x418
};

struct ASQGameModeRuleset : ASQGameRuleSet {
	TArray<FSQInventoryMod> InventoryModifications; // 0x270
	FText PlayerJoinedMessageToPlayer; // 0x280
	TArray<FSQGameModeRules> RulesToBeShownWhenPlayersJoinATeam; // 0x298
};

struct USQCompassMarker : USQCompassBaseUnit {
	FLinearColor MarkerColor; // 0x238
	UCurveFloat* DistanceResolutionCurveInMeters; // 0x248
	ASQMapMarker* MapMarker; // 0x250
	FSQMapMarkerVisualData MapMarkerVisualData; // 0x258
	UTextBlock* DistanceTextBlock; // 0x320
	UTextBlock* MeterTextBlock; // 0x328
};

struct USQRadialButton : USQBaseButton {
	ESQRadialWidgetSizeEnum RadialWidgetSize; // 0x2e8
	float RadialWidgetAngle; // 0x2ec
	USoundCue* MouseEnterSoundCue; // 0x2f0
};

struct USQSquadStateDataAmmoCrate : USQSquadStateDataDeployable {
	ESQBuildState BuildState; // 0x180
};

struct USQFindSessionsCallbackProxy : UOnlineBlueprintCallProxyBase {
	UObject* WorldContextObject; // 0x80
};

struct USQVehicleWheel_Front : UVehicleWheel {
	UStaticMesh* CollisionMesh; // 0x28
	bool bDontCreateShape; // 0x30
	bool bAutoAdjustCollisionSize; // 0x31
	FVector Offset; // 0x34
	float ShapeRadius; // 0x40
	float ShapeWidth; // 0x44
	float Mass; // 0x48
	float DampingRate; // 0x4c
	float PhysMatDampingRateMultiplier; // 0x50
	float SteerAngle; // 0x54
	bool bAffectedByHandbrake; // 0x58
	UTireType* TireType; // 0x60
	UTireConfig* TireConfig; // 0x68
	float LatStiffMaxLoad; // 0x70
	float LatStiffValue; // 0x74
	float LongStiffValue; // 0x78
	float SuspensionForceOffset; // 0x7c
	float SuspensionMaxRaise; // 0x80
	float SuspensionMaxDrop; // 0x84
	float SuspensionNaturalFrequency; // 0x88
	float SuspensionDampingRatio; // 0x8c
	EWheelSweepType SweepType; // 0x90
	float MaxBrakeTorque; // 0x94
	float MaxHandBrakeTorque; // 0x98
	UWheeledVehicleMovementComponent* VehicleSim; // 0xa0
	int WheelIndex; // 0xa8
	float DebugLongSlip; // 0xac
	float DebugLatSlip; // 0xb0
	float DebugNormalizedTireLoad; // 0xb4
	float DebugWheelTorque; // 0xbc
	float DebugLongForce; // 0xc0
	float DebugLatForce; // 0xc4
	FVector Location; // 0xc8
	FVector OldLocation; // 0xd4
	FVector Velocity; // 0xe0
};

struct ABP_AAS_DefendMarker_C : ASQMapMarker {
	USceneComponent* DefaultSceneRoot; // 0x280
};

struct UMaterialExpressionTextureObjectParameter : UMaterialExpressionTextureSampleParameter {
	FName ParameterName; // 0xe0
	FGuid ExpressionGUID; // 0xe8
	FName Group; // 0xf8
};

struct ASQCommandActor : AActor {
	float distance; // 0x248
	USQGridData_CommandOption* Action; // 0x250
	int Team; // 0x258
	TWeakObjectPtr<AController> DamageInstigatorController; // 0x25c
};

struct UParticleModuleBeamTarget : UParticleModuleBeamBase {
	Beam2SourceTargetMethod TargetMethod; // 0x30
	FName TargetName; // 0x34
	FRawDistributionVector Target; // 0x40
	char bTargetAbsolute : 1; // 0x90
	char bLockTarget : 1; // 0x90
	Beam2SourceTargetTangentMethod TargetTangentMethod; // 0x94
	FRawDistributionVector TargetTangent; // 0x98
	char bLockTargetTangent : 1; // 0xe8
	FRawDistributionFloat TargetStrength; // 0xf0
	char bLockTargetStength : 1; // 0x128
	float LockRadius; // 0x12c
};

struct ASQBoundary : AActor {
	USplineComponent* XYBoundary; // 0x248
	bool bXYBoundaryTangetsInwards; // 0x250
	int BoundaryMaskSizeX; // 0x254
	int BoundaryMaskSizeY; // 0x258
	UTexture2D* BoundaryMask; // 0x260
	float CeilingHeight; // 0x268
	float FloorHeight; // 0x26c
	float CheckDelaySeconds; // 0x270
	bool bDefaultToInside; // 0x274
	bool bComplexCheck; // 0x275
	TMap<USQBoundaryListener*, FSQBoundaryListenerData> ListenerDatas; // 0x278
	TArray<char> BoundaryMaskData; // 0x2f0
};

struct ALandscapeMeshProxyActor : AActor {
	ULandscapeMeshProxyComponent* LandscapeMeshProxyComponent; // 0x248
};

struct UBP_Attachment_M68_NoAds_Founder_C : UBP_Attachment_M68_Founder_C {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMaterialExpressionVertexInterpolator : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct USQCoreStateComponent : UActorComponent {
	USQCoreStateData* DataClass; // 0xd8
	USQCoreStateData* DataObject; // 0xe8
	TArray<USQCoreStateConnection*> Connections; // 0xf0
};

struct UBehaviorTree : UObject {
	UBTCompositeNode* RootNode; // 0x28
	UBlackboardData* BlackboardAsset; // 0x30
	TArray<UBTDecorator*> RootDecorators; // 0x38
	TArray<FBTDecoratorLogic> RootDecoratorOps; // 0x48
};

struct UGeometryCacheCodecRaw : UGeometryCacheCodecBase {
	int DummyProperty; // 0x38
};

struct ABP_M4_Recruit_C : ABP_M4A1_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ALightmassCharacterIndirectDetailVolume : AVolume {
	EBrushType BrushType; // 0x248
	FColor BrushColor; // 0x24c
	int PolyFlags; // 0x250
	char bColored : 1; // 0x254
	char bSolidWhenSelected : 1; // 0x254
	char bPlaceableFromClassBrowser : 1; // 0x254
	char bNotForClientOrServer : 1; // 0x254
	UModel* Brush; // 0x258
	UBrushComponent* BrushComponent; // 0x260
	char bInManipulation : 1; // 0x268
	TArray<FGeomSelection> SavedSelections; // 0x270
};

struct UMovieSceneEventTrack : UMovieSceneNameableTrack {
	char bFireEventsWhenForwards : 1; // 0x58
	char bFireEventsWhenBackwards : 1; // 0x58
	EFireEventsAtPosition EventPosition; // 0x5c
	TArray<FMovieSceneObjectBindingID> EventReceivers; // 0x60
	TArray<UMovieSceneSection*> Sections; // 0x70
};

struct UBP_RPG7Parent_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USQItemAnimInstance : USQAnimInstance {
	bool bPlay1PAnimNotifiesWhenInFirstPerson; // 0x290
	bool bPlay3PAnimNotifiesWhenInFirstPerson; // 0x291
};

struct USQSquadSelection : USQUserWidget {
	ASQPlayerController* OwnerPlayerController; // 0x230
	UCanvasPanel* CreateSquadCanvas; // 0x238
	USQCreateSquadButton* CreateSquadButton; // 0x240
	UEditableTextBox* SquadNameTextBox; // 0x248
	UScrollBox* SquadsList; // 0x250
	FScriptMulticastDelegate OnNewSquadCreated; // 0x258
};

struct UMaterialExpressionConstant : UMaterialExpression {
	float R; // 0x40
};

struct UDemoNetDriver : UNetDriver {
	TMap<FString, FRollbackNetStartupActorInfo> RollbackNetStartupActors; // 0x840
	float CheckpointSaveMaxMSPerFrame; // 0xc44
	TArray<FMulticastRecordOptions> MulticastRecordOptions; // 0xc78
	bool bIsLocalReplay; // 0xc88
	TArray<APlayerController*> SpectatorControllers; // 0xc90
};

struct UMovieSceneParticleSection : UMovieSceneSection {
	FMovieSceneParticleChannel ParticleKeys; // 0xe0
};

struct ABP_AKS74_C : ABP_AK74_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UPrimaryAssetLabel : UPrimaryDataAsset {
	FPrimaryAssetRules Rules; // 0x30
	char bLabelAssetsInMyDirectory : 1; // 0x40
	char bIsRuntimeLabel : 1; // 0x40
	TArray<UObject*> ExplicitAssets; // 0x48
	TArray<UClass*> ExplicitBlueprints; // 0x58
	FCollectionReference AssetCollection; // 0x68
};

struct UWidgetComponent : UMeshComponent {
	EWidgetSpace Space; // 0x430
	EWidgetTimingPolicy TimingPolicy; // 0x431
	UUserWidget* WidgetClass; // 0x438
	FIntPoint DrawSize; // 0x440
	bool bManuallyRedraw; // 0x448
	bool bRedrawRequested; // 0x449
	float RedrawTime; // 0x44c
	FIntPoint CurrentDrawSize; // 0x458
	bool bDrawAtDesiredSize; // 0x460
	FVector2D Pivot; // 0x464
	bool bReceiveHardwareInput; // 0x46c
	bool bWindowFocusable; // 0x46d
	EWindowVisibility WindowVisibility; // 0x46e
	bool bApplyGammaCorrection; // 0x46f
	ULocalPlayer* OwnerPlayer; // 0x470
	FLinearColor BackgroundColor; // 0x478
	FLinearColor TintColorAndOpacity; // 0x488
	float OpacityFromTexture; // 0x498
	EWidgetBlendMode BlendMode; // 0x49c
	bool bIsTwoSided; // 0x49d
	bool TickWhenOffscreen; // 0x49e
	UUserWidget* Widget; // 0x4a0
	UBodySetup* BodySetup; // 0x4c8
	UMaterialInterface* TranslucentMaterial; // 0x4d0
	UMaterialInterface* TranslucentMaterial_OneSided; // 0x4d8
	UMaterialInterface* OpaqueMaterial; // 0x4e0
	UMaterialInterface* OpaqueMaterial_OneSided; // 0x4e8
	UMaterialInterface* MaskedMaterial; // 0x4f0
	UMaterialInterface* MaskedMaterial_OneSided; // 0x4f8
	UTextureRenderTarget2D* RenderTarget; // 0x500
	UMaterialInstanceDynamic* MaterialInstance; // 0x508
	bool bAddedToScreen; // 0x510
	bool bEditTimeUsable; // 0x511
	FName SharedLayerName; // 0x514
	int LayerZOrder; // 0x51c
	EWidgetGeometryMode GeometryMode; // 0x520
	float CylinderArcAngle; // 0x524
};

struct USQReplicationGraphNode_GridSpatialization2DEx : UReplicationGraphNode_GridSpatialization2D {
	TSet<UNetReplicationGraphConnection*> AvoidCullingConnections; // 0x240
};

struct USQProjectileSpawnerComponent : USceneComponent {
	UClass* ProjectileClass; // 0x218
	UClass* TracerProjectileClass; // 0x240
	float MuzzleVelocity; // 0x268
	float MaxDamageToApply; // 0x26c
	bool bCreatedOnServerForDamage; // 0x270
	float TimeBetweenShots; // 0x274
	int RoundsBetweenTracer; // 0x278
	float ShotDeviation; // 0x27c
	int ShotCounter; // 0x280
	bool bIsFiring; // 0x284
	FScriptMulticastDelegate OnFired; // 0x288
	FScriptMulticastDelegate OnStartFiring; // 0x298
	FScriptMulticastDelegate OnStopFiring; // 0x2a8
};

struct UGridPanel : UPanelWidget {
	TArray<float> ColumnFill; // 0x120
	TArray<float> RowFill; // 0x130
};

struct UInputSettings : UObject {
	TArray<FInputAxisConfigEntry> AxisConfig; // 0x28
	char bAltEnterTogglesFullscreen : 1; // 0x38
	char bF11TogglesFullscreen : 1; // 0x38
	char bUseMouseForTouch : 1; // 0x38
	char bEnableMouseSmoothing : 1; // 0x38
	char bEnableFOVScaling : 1; // 0x38
	char bCaptureMouseOnLaunch : 1; // 0x38
	char bDefaultViewportMouseLock : 1; // 0x38
	char bAlwaysShowTouchInterface : 1; // 0x38
	char bShowConsoleOnFourFingerTap : 1; // 0x39
	char bEnableGestureRecognizer : 1; // 0x39
	bool bUseAutocorrect; // 0x3a
	TArray<FString> ExcludedAutocorrectOS; // 0x40
	TArray<FString> ExcludedAutocorrectCultures; // 0x50
	TArray<FString> ExcludedAutocorrectDeviceModels; // 0x60
	EMouseCaptureMode DefaultViewportMouseCaptureMode; // 0x70
	EMouseLockMode DefaultViewportMouseLockMode; // 0x71
	float FOVScale; // 0x74
	float DoubleClickTime; // 0x78
	TArray<FInputActionKeyMapping> ActionMappings; // 0x80
	TArray<FInputAxisKeyMapping> AxisMappings; // 0x90
	TArray<FInputActionSpeechMapping> SpeechMappings; // 0xa0
	FSoftObjectPath DefaultTouchInterface; // 0xb0
	FKey ConsoleKey; // 0xc8
	TArray<FKey> ConsoleKeys; // 0xe0
};

struct UAbilityTask_WaitGameplayTag : UAbilityTask {
	UAbilitySystemComponent* OptionalExternalTarget; // 0x90
};

struct UParticleModuleAcceleration : UParticleModuleAccelerationBase {
	FRawDistributionVector Acceleration; // 0x38
	char bApplyOwnerScale : 1; // 0x88
};

struct USoundNodeDistanceCrossFade : USoundNode {
	TArray<FDistanceDatum> CrossFadeInput; // 0x40
};

struct ABP_M72A7_Founders_C : ABP_GenericRocketLauncher_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct ULineBatchComponent : UPrimitiveComponent {
	float MinDrawDistance; // 0x220
	float LDMaxDrawDistance; // 0x224
	float CachedMaxDrawDistance; // 0x228
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x22c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x22d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x22e
	ELightmapType LightmapType; // 0x22f
	char bUseMaxLODAsImposter : 1; // 0x230
	char bNeverDistanceCull : 1; // 0x230
	char bAlwaysCreatePhysicsState : 1; // 0x230
	char bGenerateOverlapEvents : 1; // 0x230
	char bGenerateLocalOverlapEvents : 1; // 0x231
	char bMultiBodyOverlap : 1; // 0x231
	char bTraceComplexOnMove : 1; // 0x231
	char bReturnMaterialOnMove : 1; // 0x231
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x231
	char bAllowCullDistanceVolume : 1; // 0x231
	char bHasMotionBlurVelocityMeshes : 1; // 0x231
	char bVisibleInReflectionCaptures : 1; // 0x232
	char bVisibleInRayTracing : 1; // 0x232
	char bRenderInMainPass : 1; // 0x232
	char bReceivesDecals : 1; // 0x232
	char bOwnerNoSee : 1; // 0x232
	char bOnlyOwnerSee : 1; // 0x232
	char bTreatAsBackgroundForOcclusion : 1; // 0x232
	char bUseAsOccluder : 1; // 0x232
	char bSelectable : 1; // 0x233
	char bForceMipStreaming : 1; // 0x233
	char bHasPerInstanceHitProxies : 1; // 0x233
	char CastShadow : 1; // 0x233
	char bAffectDynamicIndirectLighting : 1; // 0x233
	char bAffectDistanceFieldLighting : 1; // 0x233
	char bCastDynamicShadow : 1; // 0x233
	char bCastStaticShadow : 1; // 0x233
	char bCastVolumetricTranslucentShadow : 1; // 0x234
	char bSelfShadowOnly : 1; // 0x234
	char bCastFarShadow : 1; // 0x234
	char bCastInsetShadow : 1; // 0x234
	char bCastCinematicShadow : 1; // 0x234
	char bCastHiddenShadow : 1; // 0x234
	char bCastShadowAsTwoSided : 1; // 0x234
	char bLightAsIfStatic : 1; // 0x234
	char bLightAttachmentsAsGroup : 1; // 0x235
	char bReceiveMobileCSMShadows : 1; // 0x235
	char bSingleSampleShadowFromStationaryLights : 1; // 0x235
	char bIgnoreRadialImpulse : 1; // 0x235
	char bIgnoreRadialForce : 1; // 0x235
	char bApplyImpulseOnDamage : 1; // 0x235
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x235
	char AlwaysLoadOnClient : 1; // 0x235
	char AlwaysLoadOnServer : 1; // 0x236
	char bUseEditorCompositing : 1; // 0x236
	char bRenderCustomDepth : 1; // 0x236
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x237
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x239
	FLightingChannels LightingChannels; // 0x23a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x23b
	int CustomDepthStencilValue; // 0x23c
	FCustomPrimitiveData CustomPrimitiveData; // 0x240
	int TranslucencySortPriority; // 0x250
	int VisibilityId; // 0x254
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x258
	int VirtualTextureLodBias; // 0x268
	int VirtualTextureCullMips; // 0x26c
	int VirtualTextureMinCoverage; // 0x270
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x274
	float LpvBiasMultiplier; // 0x27c
	float BoundsScale; // 0x288
	TArray<AActor*> MoveIgnoreActors; // 0x298
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2a8
	FBodyInstance BodyInstance; // 0x2c8
	FScriptMulticastDelegate OnComponentHit; // 0x3d8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3d9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3da
	FScriptMulticastDelegate OnComponentWake; // 0x3db
	FScriptMulticastDelegate OnComponentSleep; // 0x3dc
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3de
	FScriptMulticastDelegate OnEndCursorOver; // 0x3df
	FScriptMulticastDelegate OnClicked; // 0x3e0
	FScriptMulticastDelegate OnReleased; // 0x3e1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3e2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3e3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3e4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3e5
	UPrimitiveComponent* LODParentPrimitive; // 0x400
};

struct UBTComposite_SimpleParallel : UBTCompositeNode {
	EBTParallelMode FinishMode; // 0x90
};

struct UInterpGroupInstDirector : UInterpGroupInst {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct USoundNodeDoppler : USoundNode {
	float DopplerIntensity; // 0x40
	bool bUseSmoothing; // 0x44
	float SmoothingInterpSpeed; // 0x48
};

struct UMaterialExpressionDepthFade : UMaterialExpression {
	FExpressionInput InOpacity; // 0x40
	FExpressionInput FadeDistance; // 0x54
	float OpacityDefault; // 0x68
	float FadeDistanceDefault; // 0x6c
};

struct UMaterialExpressionTextureBase : UMaterialExpression {
	UTexture* Texture; // 0x40
	EMaterialSamplerType SamplerType; // 0x48
	char IsDefaultMeshpaintTexture : 1; // 0x4c
};

struct UBP_Attachment_1p78_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USQVehicleSeatComponent : USceneComponent {
	FSQVehicleSeatConfig SeatConfig; // 0x218
	int AnimationSeatState; // 0x268
	ASQVehicleSeat* SeatPawn; // 0x270
	ASQPlayerState* SeatedPlayer; // 0x278
	ASQSoldier* SeatedSoldier; // 0x280
};

struct UInterpTrackAudioMaster : UInterpTrackVectorBase {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UMaterialExpressionObjectPositionWS : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct ASceneCaptureCube : ASceneCapture {
	USceneCaptureComponentCube* CaptureComponentCube; // 0x258
};

struct UBTTask_PlaySound : UBTTaskNode {
	USoundCue* SoundToPlay; // 0x70
};

struct UGeometryCacheCodecV1 : UGeometryCacheCodecBase {
	TArray<int> TopologyRanges; // 0x28
};

struct UBP_Attachment_M150_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USQAnnouncementNotifier : UUserWidget {
	FScriptMulticastDelegate OnAnnouncementChangedDelegate; // 0x230
};

struct UAISense_Prediction : UAISense {
	TArray<FAIPredictionEvent> RegisteredEvents; // 0x80
};

struct UInAppPurchaseRestoreCallbackProxy : UObject {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct ABP_M4M203_M68_UGL_Smoke_C : ABP_M4M203_M68_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleLocation : UParticleModuleLocationBase {
	FRawDistributionVector StartLocation; // 0x30
	float DistributeOverNPoints; // 0x80
	float DistributeThreshold; // 0x84
};

struct UBP_Attachment_M4M203_LadderSight_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USphereComponent : UShapeComponent {
	float SphereRadius; // 0x420
};

struct UFireShake_Medium_C : UCameraShake {
	char bSingleInstance : 1; // 0x28
	float OscillationDuration; // 0x2c
	float OscillationBlendInTime; // 0x30
	float OscillationBlendOutTime; // 0x34
	FROscillator RotOscillation; // 0x38
	FVOscillator LocOscillation; // 0x5c
	FFOscillator FOVOscillation; // 0x80
	float AnimPlayRate; // 0x8c
	float AnimScale; // 0x90
	float AnimBlendInTime; // 0x94
	float AnimBlendOutTime; // 0x98
	float RandomAnimSegmentDuration; // 0x9c
	UCameraAnim* Anim; // 0xa0
	char bRandomAnimSegment : 1; // 0xa8
	APlayerCameraManager* CameraOwner; // 0xc0
	float ShakeScale; // 0x148
	float OscillatorTimeRemaining; // 0x14c
	UCameraAnimInst* AnimInst; // 0x150
};

struct UDialogueSoundWaveProxy : USoundBase {
	USoundClass* SoundClassObject; // 0x28
	char bDebug : 1; // 0x30
	char bOverrideConcurrency : 1; // 0x30
	char bOutputToBusOnly : 1; // 0x30
	char bHasDelayNode : 1; // 0x30
	char bHasConcatenatorNode : 1; // 0x30
	char bBypassVolumeScaleForPriority : 1; // 0x30
	EVirtualizationMode VirtualizationMode; // 0x31
	TSet<USoundConcurrency*> ConcurrencySet; // 0x38
	FSoundConcurrencySettings ConcurrencyOverrides; // 0x88
	float Duration; // 0xa8
	float MaxDistance; // 0xac
	float TotalSamples; // 0xb0
	float Priority; // 0xb4
	USoundAttenuation* AttenuationSettings; // 0xb8
	FSoundModulation Modulation; // 0xc0
	USoundSubmix* SoundSubmixObject; // 0xd0
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0xd8
	USoundEffectSourcePresetChain* SourceEffectChain; // 0xe8
	TArray<FSoundSourceBusSendInfo> BusSends; // 0xf0
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x100
};

struct UAbilityTask_WaitGameplayEffectBlockedImmunity : UAbilityTask {
	FScriptMulticastDelegate bLocked; // 0x80
	UAbilitySystemComponent* ExternalOwner; // 0x118
};

struct ATextRenderActor : AActor {
	UTextRenderComponent* TextRender; // 0x248
};

struct USQProgressWidget : USQUserWidget {
	float TimerDuration; // 0x230
	float TimerEnd; // 0x234
	bool bTimerActive; // 0x238
	float TimeRemaining; // 0x23c
	FScriptMulticastDelegate OnTimerReached; // 0x240
};

struct UBTService_RunEQS : UBTService_BlackboardBase {
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0x98
};

struct UDatasmithSceneComponentTemplate : UDatasmithObjectTemplate {
	FTransform RelativeTransform; // 0x30
	EComponentMobility Mobility; // 0x60
	USceneComponent* AttachParent; // 0x68
	TSet<FName> Tags; // 0x90
};

struct UGameplayTagsSettings : UGameplayTagsList {
	bool ImportTagsFromConfig; // 0x48
	bool WarnOnInvalidTags; // 0x49
	bool FastReplication; // 0x4a
	FString InvalidTagCharacters; // 0x50
	TArray<FGameplayTagCategoryRemap> CategoryRemapping; // 0x60
	TArray<FSoftObjectPath> GameplayTagTableList; // 0x70
	TArray<FGameplayTagRedirect> GameplayTagRedirects; // 0x80
	TArray<FName> CommonlyReplicatedTags; // 0x90
	int NumBitsForContainerSize; // 0xa0
	int NetIndexFirstBitSegment; // 0xa4
	TArray<FRestrictedConfigInfo> RestrictedConfigFiles; // 0xa8
};

struct UBTDecorator : UBTAuxiliaryNode {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct ABP_L85A2AG36_ACOG_Rifle_C : ABP_L85A2AG36_Rifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74MGP25_1P78_UGL_Desert_HE_C : ABP_AK74MGP25_1P78_UGL_Desert_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleColorBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UTextureRenderTargetCube : UTextureRenderTarget {
	int SizeX; // 0xd8
	FLinearColor ClearColor; // 0xdc
	EPixelFormat OverrideFormat; // 0xec
	char bHDR : 1; // 0xed
	char bForceLinearGamma : 1; // 0xed
};

struct UDatasmithPostProcessVolumeTemplate : UDatasmithObjectTemplate {
	FDatasmithPostProcessSettingsTemplate Settings; // 0x30
	char bEnabled : 1; // 0x70
	char bUnbound : 1; // 0x70
};

struct USlateWidgetStyleAsset : UObject {
	USlateWidgetStyleContainerBase* CustomStyle; // 0x28
};

struct USQMapWidgetAmmoCrate : USQMapWidgetDeployable {
	ESQBuildState BuildState; // 0x2a8
};

struct UEditableTextBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FEditableTextBoxStyle EditableTextBoxStyle; // 0x30
};

struct UParticleModuleAttractorPoint : UParticleModuleAttractorBase {
	FRawDistributionVector Position; // 0x30
	FRawDistributionFloat Range; // 0x80
	FRawDistributionFloat Strength; // 0xb8
	char StrengthByDistance : 1; // 0xf0
	char bAffectBaseVelocity : 1; // 0xf0
	char bOverrideVelocity : 1; // 0xf0
	char bUseWorldSpacePosition : 1; // 0xf0
	char Positive_X : 1; // 0xf0
	char Positive_Y : 1; // 0xf0
	char Positive_Z : 1; // 0xf0
	char Negative_X : 1; // 0xf0
	char Negative_Y : 1; // 0xf1
	char Negative_Z : 1; // 0xf1
};

struct UBP_M72A7_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UVoiceChannel : UChannel {
	UNetConnection* Connection; // 0x28
};

struct ABP_M9_3Mags_Nickel_C : ABP_M9_3Mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAnimCustomInstance : UAnimInstance {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FScriptMulticastDelegate OnMontageBlendingOut; // 0x38
	FScriptMulticastDelegate OnMontageStarted; // 0x48
	FScriptMulticastDelegate OnMontageEnded; // 0x58
	FScriptMulticastDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct ASQLastingEffect : AActor {
	UParticleSystemComponent* ParticleSystem; // 0x248
	UAudioComponent* Audio; // 0x250
	USQShockwave* ShockwaveEffect; // 0x258
	float TimeToFireTriggerLastingEffectEventAfterBeginPlay; // 0x260
	float TimeToLiveAfterBeginPlay; // 0x264
	float TimeToLiveAfterTriggerLastingEffect; // 0x268
	bool bListenForOnActorHitEvents; // 0x26c
	bool bListenForOnDestroyedEvents; // 0x26d
	bool bActivateParticleSystemUponBeginPlay; // 0x26e
	bool bActivateParticleSystemUponTriggerLastingEffect; // 0x26f
	bool bActivateAudioUponBeginPlay; // 0x270
	bool bActivateAudioUponTriggerLastingEffect; // 0x271
	bool bActivateShockwaveUponBeginPlay; // 0x272
	bool bActivateShockwaveUponTriggerLastingEffect; // 0x273
	bool bDetachFromActorUponTriggerLastingEffect; // 0x274
	bool bDeactivateParticleSystemUponTriggerLastingEffect; // 0x275
	bool bDeactivateParticleSystemUponTriggerLastingEffectTimerExpired; // 0x276
	bool bDeactivateAudioUponTriggerLastingEffectTimerExpired; // 0x277
	bool bDestroyUponTriggerLastingEffectTimerExpired; // 0x278
	bool bDrawDebugSphere; // 0x279
	float DebugSphereRadius; // 0x27c
	int DebugSphereSegments; // 0x280
	FColor DebugSphereColor; // 0x284
};

struct UFieldNodeBase : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UWorldComposition : UObject {
	TArray<ULevelStreaming*> TilesStreaming; // 0x48
	double TilesStreamingTimeThreshold; // 0x58
	bool bLoadAllTilesDuringCinematic; // 0x60
	bool bRebaseOriginIn3DSpace; // 0x61
	float RebaseOriginDistance; // 0x64
};

struct UBP_Attachment_1p78_NoAds_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UBreakpoint : UObject {
	char bEnabled : 1; // 0x28
	UEdGraphNode* Node; // 0x30
	char bStepOnce : 1; // 0x38
	char bStepOnce_WasPreviouslyDisabled : 1; // 0x38
	char bStepOnce_RemoveAfterHit : 1; // 0x38
};

struct UBP_AK74MGP25_UGL_HE_StaticInfo_C : UBP_AK74MGP25_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UMovementComponent : UActorComponent {
	USceneComponent* UpdatedComponent; // 0xd8
	UPrimitiveComponent* UpdatedPrimitive; // 0xe0
	FVector Velocity; // 0xec
	FVector PlaneConstraintNormal; // 0xf8
	FVector PlaneConstraintOrigin; // 0x104
	char bUpdateOnlyIfRendered : 1; // 0x110
	char bAutoUpdateTickRegistration : 1; // 0x110
	char bTickBeforeOwner : 1; // 0x110
	char bAutoRegisterUpdatedComponent : 1; // 0x110
	char bConstrainToPlane : 1; // 0x110
	char bSnapToPlaneAtStart : 1; // 0x110
	char bAutoRegisterPhysicsVolumeUpdates : 1; // 0x110
	char bComponentShouldUpdatePhysicsVolume : 1; // 0x110
	EPlaneConstraintAxisSetting PlaneConstraintAxisSetting; // 0x113
};

struct UEditableGameplayTagQueryExpression_AnyExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct ABP_AK74GP25_UGL_Parent_Founders_C : ABP_AK74GP25_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMovieSceneVectorTrack : UMovieScenePropertyTrack {
	int NumChannelsUsed; // 0x88
};

struct UBTDecorator_Cooldown : UBTDecorator {
	float CoolDownTime; // 0x68
};

struct UDistributionVectorConstant : UDistributionVector {
	FVector Constant; // 0x38
	char bLockAxes : 1; // 0x44
	EDistributionVectorLockFlags LockedAxes; // 0x48
};

struct ABP_M4A1_Foregrip_Woodland_C : ABP_M4A1_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UDatasmithMaterialInstanceTemplate : UDatasmithObjectTemplate {
	TMap<FName, float> ScalarParameterValues; // 0x30
	TMap<FName, FLinearColor> VectorParameterValues; // 0x80
	TMap<FName, UTexture*> TextureParameterValues; // 0xd0
	FDatasmithStaticParameterSetTemplate StaticParameters; // 0x120
};

struct UProgressWidgetStyle : USlateWidgetStyleContainerBase {
	FProgressBarStyle ProgressBarStyle; // 0x30
};

struct ABP_M4M203_M68_UGL_Smoke_Blue_C : ABP_M4M203_M68_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ASQDeployableVehicle : ASQVehicle {
	USQVehicleInventoryComponent* InventoryComponent; // 0x820
	USQMapIconComponent* MapIconComponent; // 0x828
	USQVehicleExitPointComponent* VehicleExitPoint; // 0x830
	USkeletalMeshComponent* SwivelMeshComponent; // 0x838
	USceneComponent* GunMountComponent; // 0x840
	USceneComponent* Camera1pPositionComponent; // 0x848
	UCameraComponent* Camera1pComponent; // 0x850
	USpringArmComponent* Camera3pSpringComponent; // 0x858
	UCameraComponent* Camera3pComponent; // 0x860
	bool bIsInThirdPerson; // 0x868
	ASQDeployable* OwningDeployable; // 0x870
	USQRotatingMovementComponent* YawMovementComponent; // 0x878
	USQRotatingMovementComponent* PitchMovementComponent; // 0x880
};

struct UBP_Attachment_PGO-7_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ABP_40MM_VOG_Smoke_Proj2_C : ABP_40MM_Smoke_Proj2_C {
	UParticleSystemComponent* Effect; // 0x548
	UParticleSystem* SmokeEffect; // 0x550
	USoundCue* SmokeSound; // 0x558
};

struct UAvfMediaSettings : UObject {
	bool NativeAudioOut; // 0x28
};

struct UAISense_Hearing : UAISense {
	TArray<FAINoiseEvent> NoiseEvents; // 0x80
	float SpeedOfSoundSq; // 0x90
};

struct UCameraModifier : UObject {
	char bDebug : 1; // 0x28
	char bExclusive : 1; // 0x28
	char Priority; // 0x2c
	APlayerCameraManager* CameraOwner; // 0x30
	float AlphaInTime; // 0x38
	float AlphaOutTime; // 0x3c
	float Alpha; // 0x40
};

struct UConnectionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UBoxFalloff : UFieldNodeFloat {
	float Magnitude; // 0xd8
	float MinRange; // 0xdc
	float MaxRange; // 0xe0
	float Default; // 0xe4
	FTransform Transform; // 0xf0
	EFieldFalloffType Falloff; // 0x120
};

struct UAKS74U_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_C80011B44665BFC85CC89C907405BC3F; // 0x2b8
	FAnimNode_Slot AnimGraphNode_Slot_D91EF01D4F09CB2BF7719594C62E8F5B; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_1C771B1C42926A8083F82691D7EC067C; // 0x330
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_A1841B0C4308566854D478B5770E4BF6; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_4D56A36D4C965770826C1A93AA6C7851; // 0x468
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_5D5DC0764FC8BD37707B1D8D28EB36CC; // 0x4b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_CA75C91C4A0694E077F2ECAAB5AF6180; // 0x4c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_FB23507B455E8749703A54911185E083; // 0x588
};

struct UParticleModuleLocationBoneSocket : UParticleModuleLocationBase {
	ELocationBoneSocketSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	TArray<FLocationBoneSocketInfo> SourceLocations; // 0x40
	ELocationBoneSocketSelectionMethod SelectionMethod; // 0x50
	char bUpdatePositionEachFrame : 1; // 0x54
	char bOrientMeshEmitters : 1; // 0x54
	char bInheritBoneVelocity : 1; // 0x54
	float InheritVelocityScale; // 0x58
	FName SkelMeshActorParamName; // 0x5c
	int NumPreSelectedIndices; // 0x64
};

struct UDecalComponent : USceneComponent {
	UMaterialInterface* DecalMaterial; // 0x218
	int SortOrder; // 0x220
	float FadeScreenSize; // 0x224
	float FadeStartDelay; // 0x228
	float FadeDuration; // 0x22c
	float FadeInDuration; // 0x230
	float FadeInStartDelay; // 0x234
	char bDestroyOwnerAfterFade : 1; // 0x238
	FVector DecalSize; // 0x23c
};

struct USlateAccessibleWidgetData : UObject {
	bool bCanChildrenBeAccessible; // 0x28
	ESlateAccessibleBehavior AccessibleBehavior; // 0x29
	ESlateAccessibleBehavior AccessibleSummaryBehavior; // 0x2a
	FText AccessibleText; // 0x30
	DelegateProperty AccessibleTextDelegate; // 0x48
	FText AccessibleSummaryText; // 0x58
	DelegateProperty AccessibleSummaryTextDelegate; // 0x70
};

struct USQDamageType_ExplosiveRocket : USQDamageType_Explosive {
	bool bCanCauseBleeding; // 0x40
};

struct ABP_RPG7_Tandem_Founders_C : ABP_RPG7_Tandem_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UDistributionFloatConstant : UDistributionFloat {
	float Constant; // 0x38
};

struct UTextPropertyTestObject : UObject {
	FText DefaultedText; // 0x28
	FText UndefaultedText; // 0x40
	FText TransientText; // 0x58
};

struct ULightmassPrimitiveSettingsObject : UObject {
	FLightmassPrimitiveSettings LightmassSettings; // 0x28
};

struct ABP_RPG7V2_Tandem_Founders_C : ABP_RPG7V2_Tandem_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct USQCollisionDamage : UActorComponent {
	float MinDamage; // 0xd8
	float MaxDamage; // 0xdc
	float MinImpactForce; // 0xe0
	float MaxImpactForce; // 0xe4
	UCurveFloat* InterpCurve; // 0xe8
	USoundCue* CollisionSound; // 0xf0
	UParticleSystem* ParticleEffect; // 0xf8
	UCameraShake* CollisionCameraShake; // 0x100
	float MinShakeForce; // 0x108
	float MaxShakeForce; // 0x10c
};

struct AGameStateBase : AInfo {
	AGameModeBase* GameModeClass; // 0x248
	AGameModeBase* AuthorityGameMode; // 0x250
	ASpectatorPawn* SpectatorClass; // 0x258
	TArray<APlayerState*> PlayerArray; // 0x260
	bool bReplicatedHasBegunPlay; // 0x270
	float ReplicatedWorldTimeSeconds; // 0x274
	float ServerWorldTimeSecondsDelta; // 0x278
	float ServerWorldTimeSecondsUpdateFrequency; // 0x27c
};

struct UParticleModuleLocationWorldOffset_Seeded : UParticleModuleLocationWorldOffset {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x88
};

struct ABP_M4_M150_Tracer_C : ABP_M4_M150_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UImgMediaSettings : UObject {
	FFrameRate DefaultFrameRate; // 0x28
	float CacheBehindPercentage; // 0x30
	float CacheSizeGB; // 0x34
	int CacheThreads; // 0x38
	int CacheThreadStackSizeKB; // 0x3c
	float GlobalCacheSizeGB; // 0x40
	bool UseGlobalCache; // 0x44
	uint32 ExrDecoderThreads; // 0x48
	FString DefaultProxy; // 0x50
	bool UseDefaultProxy; // 0x60
};

struct UDistributionFloatUniform : UDistributionFloat {
	float Min; // 0x38
	float Max; // 0x3c
};

struct UInterpTrackInstProperty : UInterpTrackInst {
	UProperty* InterpProperty; // 0x28
	UObject* PropertyOuterObjectInst; // 0x30
};

struct AGameplayAbilityTargetActor_ActorPlacement : AGameplayAbilityTargetActor_GroundTrace {
	UObject* PlacedActorClass; // 0x390
	UMaterialInterface* PlacedActorMaterial; // 0x398
};

struct UWidgetAnimationPlayCallbackProxy : UObject {
	FScriptMulticastDelegate Finished; // 0x28
};

struct UMaterialExpressionSquareRoot : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UStaticMeshComponent : UMeshComponent {
	int ForcedLodModel; // 0x430
	int PreviousLODLevel; // 0x434
	int MinLOD; // 0x438
	int SubDivisionStepSize; // 0x43c
	UStaticMesh* StaticMesh; // 0x440
	FColor WireframeColorOverride; // 0x448
	char bOverrideWireframeColor : 1; // 0x44c
	char bOverrideMinLOD : 1; // 0x44c
	char bOverrideNavigationExport : 1; // 0x44c
	char bForceNavigationObstacle : 1; // 0x44c
	char bDisallowMeshPaintPerInstance : 1; // 0x44c
	char bIgnoreInstanceForTextureStreaming : 1; // 0x44c
	char bOverrideLightMapRes : 1; // 0x44c
	char bCastDistanceFieldIndirectShadow : 1; // 0x44c
	char bOverrideDistanceFieldSelfShadowBias : 1; // 0x44d
	char bUseSubDivisions : 1; // 0x44d
	char bUseDefaultCollision : 1; // 0x44d
	char bReverseCulling : 1; // 0x44d
	int OverriddenLightMapRes; // 0x450
	float DistanceFieldIndirectShadowMinVisibility; // 0x454
	float DistanceFieldSelfShadowBias; // 0x458
	float StreamingDistanceMultiplier; // 0x45c
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x460
	TArray<FStreamingTextureBuildInfo> StreamingTextureData; // 0x470
	FLightmassPrimitiveSettings LightmassSettings; // 0x480
};

struct AProceduralFoliageBlockingVolume : AVolume {
	AProceduralFoliageVolume* ProceduralFoliageVolume; // 0x280
};

struct ABP_M4A1_Foregrip_Tracer_Founder_C : ABP_M4A1_Foregrip_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQSquadStateDataCaptureZone : USQSquadStateMapData {
	FText FlagName; // 0x180
	char bUncappable : 1; // 0x198
	UTexture2D* FlagTexture; // 0x1a0
	UTexture2D* NeutralFlag; // 0x1c8
	char OwningTeam; // 0x1f0
	char CapturingTeam; // 0x1f1
	uint32 TeamCapturabilities; // 0x1f4
	float CapturePercent; // 0x1f8
};

struct UParticleModuleMeshRotationRate_Seeded : UParticleModuleMeshRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct URouteSelectorPredicate : UObject {
	int NumLinksToChoose; // 0x28
};

struct USQMapWidgetSQPawn : USQMapWidgetPawn {
	char bIsOwned : 1; // 0x2a8
	char bIsOwnedBySelf : 1; // 0x2a8
	char bIsInSelfTeam : 1; // 0x2a8
	char bIsInSelfSquad : 1; // 0x2a8
	int FireTeamIndex; // 0x2ac
	float CameraRotationYaw; // 0x2b0
	float IsSelfZOrder; // 0x2b4
};

struct UGameMapsSettings : UObject {
	FSoftObjectPath EditorStartupMap; // 0x28
	FString LocalMapOptions; // 0x40
	FSoftObjectPath TransitionMap; // 0x50
	bool bUseSplitscreen; // 0x68
	ETwoPlayerSplitScreenType TwoPlayerSplitscreenLayout; // 0x69
	EThreePlayerSplitScreenType ThreePlayerSplitscreenLayout; // 0x6a
	EFourPlayerSplitScreenType FourPlayerSplitscreenLayout; // 0x6b
	bool bOffsetPlayerGamepadIds; // 0x6c
	FSoftClassPath GameInstanceClass; // 0x70
	FSoftObjectPath GameDefaultMap; // 0x88
	FSoftObjectPath ServerDefaultMap; // 0xa0
	FSoftClassPath GlobalDefaultGameMode; // 0xb8
	FSoftClassPath GlobalDefaultServerGameMode; // 0xd0
	TArray<FGameModeName> GameModeMapPrefixes; // 0xe8
	TArray<FGameModeName> GameModeClassAliases; // 0xf8
};

struct AGeometryCollectionRenderLevelSetActor : AActor {
	UVolumeTexture* TargetVolumeTexture; // 0x248
	UMaterial* RayMarchMaterial; // 0x250
	float SurfaceTolerance; // 0x258
	float Isovalue; // 0x25c
	bool Enabled; // 0x260
	bool RenderVolumeBoundingBox; // 0x261
};

struct USQCoreStateSpawnPointsListWidget : USQCoreStateWidget {
	bool bSpawnOnSelection; // 0x258
	char bIsSelected : 1; // 0x25c
	char bSieged : 1; // 0x25c
	char bSpawningEnabled : 1; // 0x25c
	FVector SpawnPointLocation; // 0x260
	ESQSpawnPointType SpawnPointType; // 0x26c
	float ActivatedTimeStamp; // 0x270
	UTexture2D* BaseTexture; // 0x278
	UTexture2D* HABTexture; // 0x280
	UTexture2D* RallyTexture; // 0x288
	UTexture2D* CacheTexture; // 0x290
	ASQGameSpawn* OwningGameSpawn; // 0x298
};

struct UInterpTrackInstVectorProp : UInterpTrackInstProperty {
	FVector ResetVector; // 0x40
};

struct UMovieScene3DConstraintSection : UMovieSceneSection {
	FGuid ConstraintId; // 0xe0
	FMovieSceneObjectBindingID ConstraintBindingID; // 0xf0
};

struct ABP_Projectile_Red_C : ABP_Projectile_C {
	UParticleSystemComponent* ParticleSystem_Red; // 0x4a0
};

struct UMaterialExpressionLandscapeGrassOutput : UMaterialExpressionCustomOutput {
	TArray<FGrassInput> GrassTypes; // 0x40
};

struct USQGameViewportClient : UGameViewportClient {
	UConsole* ViewportConsole; // 0x40
	TArray<FDebugDisplayProperty> DebugProperties; // 0x48
	UWorld* World; // 0x78
	UGameInstance* GameInstance; // 0x80
};

struct UEnvQueryTest_Distance : UEnvQueryTest {
	EEnvTestDistance TestMode; // 0x1c0
	UEnvQueryContext* DistanceTo; // 0x1c8
};

struct UCameraComponent : USceneComponent {
	float FieldOfView; // 0x218
	float OrthoWidth; // 0x21c
	float OrthoNearClipPlane; // 0x220
	float OrthoFarClipPlane; // 0x224
	float AspectRatio; // 0x228
	char bConstrainAspectRatio : 1; // 0x22c
	char bUseFieldOfViewForLOD : 1; // 0x22c
	char bLockToHmd : 1; // 0x22c
	char bUsePawnControlRotation : 1; // 0x22c
	ECameraProjectionMode ProjectionMode; // 0x22d
	float PostProcessBlendWeight; // 0x260
	FPostProcessSettings PostProcessSettings; // 0x290
};

struct USubmixEffectDynamicsProcessorPreset : USoundEffectSubmixPreset {
	FSubmixEffectDynamicsProcessorSettings Settings; // 0x90
};

struct UAbilityTask_WaitConfirm : UAbilityTask {
	FScriptMulticastDelegate OnConfirm; // 0x80
};

struct UAbilityTask_WaitAbilityCommit : UAbilityTask {
	FScriptMulticastDelegate OnCommit; // 0x80
};

struct UReturnResultsTerminal : UFieldNodeBase {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UFileMediaSource : UBaseMediaSource {
	FString FilePath; // 0x38
	bool PrecacheFile; // 0x48
};

struct UWheeledVehicleMovementComponent : UPawnMovementComponent {
	char bDeprecatedSpringOffsetMode : 1; // 0x168
	char bReverseAsBrake : 1; // 0x168
	char bUseRVOAvoidance : 1; // 0x168
	char bRawHandbrakeInput : 1; // 0x168
	char bRawGearUpInput : 1; // 0x168
	char bRawGearDownInput : 1; // 0x168
	char bWasAvoidanceUpdated : 1; // 0x16c
	float Mass; // 0x170
	TArray<FWheelSetup> WheelSetups; // 0x178
	float DragCoefficient; // 0x188
	float ChassisWidth; // 0x18c
	float ChassisHeight; // 0x190
	float DragArea; // 0x194
	float EstimatedMaxEngineSpeed; // 0x198
	float MaxEngineRPM; // 0x19c
	float DebugDragMagnitude; // 0x1a0
	FVector InertiaTensorScale; // 0x1a4
	float MinNormalizedTireLoad; // 0x1b0
	float MinNormalizedTireLoadFiltered; // 0x1b4
	float MaxNormalizedTireLoad; // 0x1b8
	float MaxNormalizedTireLoadFiltered; // 0x1bc
	float ThresholdLongitudinalSpeed; // 0x1c0
	int LowForwardSpeedSubStepCount; // 0x1c4
	int HighForwardSpeedSubStepCount; // 0x1c8
	TArray<UVehicleWheel*> Wheels; // 0x1d0
	float RVOAvoidanceRadius; // 0x1f8
	float RVOAvoidanceHeight; // 0x1fc
	float AvoidanceConsiderationRadius; // 0x200
	float RVOSteeringStep; // 0x204
	float RVOThrottleStep; // 0x208
	int AvoidanceUID; // 0x20c
	FNavAvoidanceMask AvoidanceGroup; // 0x210
	FNavAvoidanceMask GroupsToAvoid; // 0x214
	FNavAvoidanceMask GroupsToIgnore; // 0x218
	float AvoidanceWeight; // 0x21c
	FVector PendingLaunchVelocity; // 0x220
	FReplicatedVehicleState ReplicatedState; // 0x22c
	float RawSteeringInput; // 0x244
	float RawThrottleInput; // 0x248
	float RawBrakeInput; // 0x24c
	float SteeringInput; // 0x250
	float ThrottleInput; // 0x254
	float BrakeInput; // 0x258
	float HandbrakeInput; // 0x25c
	float IdleBrakeInput; // 0x260
	float StopThreshold; // 0x264
	float WrongDirectionThreshold; // 0x268
	float InvertDirectionThreshold; // 0x26c
	float LowRPMRatio; // 0x270
	bool SpeedInsteadOfRPMRatiosForShifting; // 0x274
	FVehicleInputRate ThrottleInputRate; // 0x278
	FVehicleInputRate BrakeInputRate; // 0x280
	FVehicleInputRate HandbrakeInputRate; // 0x288
	FVehicleInputRate SteeringInputRate; // 0x290
	FVehicleInputRate EngineOffSteeringInputRate; // 0x298
	AController* OverrideController; // 0x2c8
	bool bUseCustomAutoGearBox; // 0x2d0
};

struct USQVoteSessionClient : USQVoteSession {
	FScriptMulticastDelegate AddVoteSignal; // 0x88
	FScriptMulticastDelegate RemoveVoteSignal; // 0x98
};

struct UComboBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FComboBoxStyle ComboBoxStyle; // 0x30
};

struct UGameplayTask_SpawnActor : UGameplayTask {
	FScriptMulticastDelegate Success; // 0x68
	FScriptMulticastDelegate DidNotSpawn; // 0x78
	AActor* ClassToSpawn; // 0xa0
};

struct UAbilityTask_ApplyRootMotion_Base : UAbilityTask {
	FName ForceName; // 0x80
	ERootMotionFinishVelocityMode FinishVelocityMode; // 0x88
	FVector FinishSetVelocity; // 0x8c
	float FinishClampVelocity; // 0x98
	UCharacterMovementComponent* MovementComponent; // 0xa0
};

struct UChaosSolverSettings : UDeveloperSettings {
	FSoftClassPath DefaultChaosSolverActorClass; // 0x40
};

struct UVirtualTexturePoolConfig : UObject {
	int DefaultSizeInMegabyte; // 0x28
	TArray<FVirtualTextureSpacePoolConfig> Pools; // 0x30
};

struct USQRotationMovementAudioComponent : UAudioComponent {
	USQMovementComponentBase* PitchMovementComponent; // 0x730
	USQMovementComponentBase* YawMovementComponent; // 0x738
	ESQRotationMovementState RotationMovementState; // 0x740
	USoundBase* StartingSound; // 0x748
	USoundBase* MovingSound; // 0x750
	USoundBase* StoppingSound; // 0x758
	float SlowIdleDuration; // 0x760
	float SlowIdleTickInterval; // 0x764
	float IdleFadeOutDuration; // 0x768
	float StartingDuration; // 0x76c
	float MovingToStoppingDuration; // 0x770
	float StoppingDuration; // 0x774
};

struct UParticleModuleColor_Seeded : UParticleModuleColor {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xc0
};

struct ABP_L85A2AG36_ElcanLDS_Rifle_C : ABP_L85A2AG36_Rifle_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
};

struct UMaterialExpressionTruncate : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct ABP_RPG7_Tandem_C : ABP_RPG7_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct ASQRulesetState : AInfo {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct USQVehicleEngineComponent : USQVehicleEngine {
	FScriptMulticastDelegate OnEngineActiveEvent; // 0x590
	USoundCue* EngineStartSound; // 0x5a0
	USoundCue* EngineCompletedStartSound; // 0x5a8
	USoundCue* EngineFailedStartSound; // 0x5b0
	USoundCue* EngineStopSound; // 0x5b8
	USoundCue* EngineRPMSound; // 0x5c0
	USoundCue* EngineExhaustSound; // 0x5c8
	USoundCue* LandingSound; // 0x5d0
	float EngineIdleFadeInAfterEngineStartTime; // 0x5d8
	float EngineIdleFadeOutAfterEngineStopTime; // 0x5dc
	float GearChangingAlphaLerpSpeed; // 0x5e0
	TArray<FSQEngineMovementSoundObject> EngineMovementSounds; // 0x5e8
	UAudioComponent* EngineExhaustStartAC; // 0x5f8
	UAudioComponent* EngineRPMAC; // 0x600
	UAudioComponent* EngineExhaustAC; // 0x608
	UAudioComponent* EngineExhaustStopAC; // 0x610
	UAudioComponent* EngineStartAC; // 0x618
	UAudioComponent* EngineCompletedStartAC; // 0x620
	UAudioComponent* EngineFailedStartAC; // 0x628
	UAudioComponent* EngineStopAC; // 0x630
	UAudioComponent* EngineSpeedAC; // 0x638
	UParticleSystemComponent* ExhaustPSC; // 0x640
	UCameraShake* EngineVibrationCameraShake; // 0x648
	UCurveFloat* RPMToShakeScaleCurve; // 0x650
	bool bIsEngineActive; // 0x658
	bool bIsEngineToggleActive; // 0x659
	float ActivateEngineDelay; // 0x65c
	float DeActivateEngineDelay; // 0x660
	UCameraShake* VibrationCameraShake; // 0x670
	APlayerCameraManager* VibrationCameraManager; // 0x678
};

struct ASQWheeledVehicle : ASQWheeledVehicleBase {
	float DamagedDampingRateMultiplier; // 0xa20
	float DampingRateMultiplier; // 0xa24
};

struct ATestBeaconHost : AOnlineBeaconHostObject {
	FString BeaconTypeName; // 0x248
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x258
	TArray<AOnlineBeaconClient*> ClientActors; // 0x260
};

struct ABP_RPG7V2_Heat_Founders_C : ABP_RPG7V2_Parent_Founders_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct ABP_M4_4Mags_Woodland_C : ABP_M4_4Mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UGameplayEffect : UObject {
	EGameplayEffectDurationType DurationPolicy; // 0x30
	FGameplayEffectModifierMagnitude DurationMagnitude; // 0x38
	FScalableFloat Period; // 0x1c8
	bool bExecutePeriodicEffectOnApplication; // 0x1e8
	EGameplayEffectPeriodInhibitionRemovedPolicy PeriodicInhibitionPolicy; // 0x1e9
	TArray<FGameplayModifierInfo> Modifiers; // 0x1f0
	TArray<FGameplayEffectExecutionDefinition> Executions; // 0x200
	FScalableFloat ChanceToApplyToTarget; // 0x210
	TArray<UGameplayEffectCustomApplicationRequirement*> ApplicationRequirements; // 0x230
	TArray<UGameplayEffect*> TargetEffectClasses; // 0x240
	TArray<FConditionalGameplayEffect> ConditionalGameplayEffects; // 0x250
	TArray<UGameplayEffect*> OverflowEffects; // 0x260
	bool bDenyOverflowApplication; // 0x270
	bool bClearStackOnOverflow; // 0x271
	TArray<UGameplayEffect*> PrematureExpirationEffectClasses; // 0x278
	TArray<UGameplayEffect*> RoutineExpirationEffectClasses; // 0x288
	bool bRequireModifierSuccessToTriggerCues; // 0x298
	bool bSuppressStackingCues; // 0x299
	TArray<FGameplayEffectCue> GameplayCues; // 0x2a0
	UGameplayEffectUIData* UIData; // 0x2b0
	FInheritedTagContainer InheritableGameplayEffectTags; // 0x2b8
	FInheritedTagContainer InheritableOwnedTagsContainer; // 0x318
	FGameplayTagRequirements OngoingTagRequirements; // 0x378
	FGameplayTagRequirements ApplicationTagRequirements; // 0x3b8
	FInheritedTagContainer RemoveGameplayEffectsWithTags; // 0x3f8
	FGameplayTagRequirements GrantedApplicationImmunityTags; // 0x458
	FGameplayEffectQuery GrantedApplicationImmunityQuery; // 0x498
	EGameplayEffectStackingType StackingType; // 0x5d1
	int StackLimitCount; // 0x5d4
	EGameplayEffectStackingDurationPolicy StackDurationRefreshPolicy; // 0x5d8
	EGameplayEffectStackingPeriodPolicy StackPeriodResetPolicy; // 0x5d9
	EGameplayEffectStackingExpirationPolicy StackExpirationPolicy; // 0x5da
	TArray<FGameplayAbilitySpecDef> GrantedAbilities; // 0x5e0
};

struct ABP_RPG7_Heat_Founders_C : ABP_RPG7_Parent_Founders_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UMaterialExpressionCeil : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct USQSteamInventory : UGameInstanceSubsystem {
	UDataTable* SupporterPatches; // 0x58
	UDataTable* WeaponReplacements; // 0x60
	UDataTable* ClanPacks; // 0x68
	UCoreGetAllItemsCallbackProxy* CallbackProxy; // 0x70
	int DefaultOWIClanPatchID; // 0x78
	int DefaultClanFounderPatchID; // 0x7c
	int DefaultClanFounderTagID; // 0x80
};

struct USQMovementComponentPacked : USQMovementComponentBase {
	float MaxMoveDeltaTime; // 0xf8
	float VectorEqualityTolerance; // 0xfc
	float AccelDotThresholdCombine; // 0x100
	float AccelDotThreshold; // 0x104
	float AccelMagThreshold; // 0x108
	float AngularErrorTolerance; // 0x10c
	float NetworkMaxSmoothUpdateDistance; // 0x110
	float MinCorrectionDelay; // 0x114
	float NetworkNoSmoothUpdateDistance; // 0x118
	EVectorQuantization LocationQuantizationLevel; // 0x11c
	EVectorQuantization VelocityQuantizationLevel; // 0x11d
	EVectorQuantization AccelerationQuantizationLevel; // 0x11e
	ERotatorQuantization RotationQuantizationLevel; // 0x11f
	AActor* OwnerActor; // 0x120
	AController* Controller; // 0x128
	FSQRepMovement ReplicatedMovement; // 0x178
	float MaxSpeed; // 0x1b8
};

struct URandomVector : UFieldNodeVector {
	float Magnitude; // 0xd8
};

struct APlayerCameraManager : AActor {
	APlayerController* PCOwner; // 0x248
	USceneComponent* TransformComponent; // 0x250
	float DefaultFOV; // 0x260
	float DefaultOrthoWidth; // 0x268
	float DefaultAspectRatio; // 0x270
	FCameraCacheEntry CameraCache; // 0x2c0
	FCameraCacheEntry LastFrameCameraCache; // 0x890
	FTViewTarget ViewTarget; // 0xe60
	FTViewTarget PendingViewTarget; // 0x1440
	FCameraCacheEntry CameraCachePrivate; // 0x1a40
	FCameraCacheEntry LastFrameCameraCachePrivate; // 0x2010
	TArray<UCameraModifier*> ModifierList; // 0x25e0
	TArray<UCameraModifier*> DefaultModifiers; // 0x25f0
	float FreeCamDistance; // 0x2600
	FVector FreeCamOffset; // 0x2604
	FVector ViewTargetOffset; // 0x2610
	TArray<AEmitterCameraLensEffectBase*> CameraLensEffects; // 0x2630
	UCameraModifier_CameraShake* CachedCameraShakeMod; // 0x2640
	UCameraAnimInst* AnimInstPool[0x8]; // 0x2648
	TArray<FPostProcessSettings> PostProcessBlendCache; // 0x2688
	TArray<UCameraAnimInst*> ActiveAnims; // 0x26a8
	TArray<UCameraAnimInst*> FreeAnims; // 0x26b8
	ACameraActor* AnimCameraActor; // 0x26c8
	char bIsOrthographic : 1; // 0x26d0
	char bDefaultConstrainAspectRatio : 1; // 0x26d0
	char bClientSimulatingViewTarget : 1; // 0x26d0
	char bUseClientSideCameraUpdates : 1; // 0x26d0
	char bGameCameraCutThisFrame : 1; // 0x26d1
	float ViewPitchMin; // 0x26d4
	float ViewPitchMax; // 0x26d8
	float ViewYawMin; // 0x26dc
	float ViewYawMax; // 0x26e0
	float ViewRollMin; // 0x26e4
	float ViewRollMax; // 0x26e8
	float ServerUpdateCameraTimeout; // 0x26f0
};

struct UBTDecorator_IsAtLocation : UBTDecorator_BlackboardBase {
	float AcceptableRadius; // 0x90
	FAIDataProviderFloatValue ParametrizedAcceptableRadius; // 0x98
	FAIDistanceType GeometricDistanceType; // 0xc8
	char bUseParametrizedRadius : 1; // 0xcc
	char bUseNavAgentGoalLocation : 1; // 0xcc
	char bPathFindingBasedTest : 1; // 0xcc
};

struct USQMapMarkerManagerComponent : UActorComponent {
	FSQStaticMapMarkerArray MarkerArray; // 0xd8
	FScriptMulticastDelegate MapMarkerWidgetCreatedEvent; // 0x220
	USQMapWidgetBase* RootWidget; // 0x230
	ASQHUD* RootHUD; // 0x238
	int COMarkerTypeLimits[0x8]; // 0x240
	int SLMarkerTypeLimits[0x8]; // 0x260
	int FTMarkerTypeLimits[0x8]; // 0x280
	float WidgetScale; // 0x2a0
	TMap<char, USQMapMarkerBase*> RelevantMarkerWidgets; // 0x2a8
	TMap<char, FSQMapMarkerVisualData> RelevantMarkers; // 0x2f8
	TArray<APawn*> AdminTypes; // 0x3a0
};

struct UMaterialExpressionSceneTexture : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
	ESceneTextureId SceneTextureId; // 0x54
	bool bFiltered; // 0x55
};

struct UPhysicsConstraintComponent : USceneComponent {
	AActor* ConstraintActor1; // 0x218
	FConstrainComponentPropName ComponentName1; // 0x220
	AActor* ConstraintActor2; // 0x228
	FConstrainComponentPropName ComponentName2; // 0x230
	UPhysicsConstraintTemplate* ConstraintSetup; // 0x248
	FScriptMulticastDelegate OnConstraintBroken; // 0x250
	FConstraintInstance ConstraintInstance; // 0x260
};

struct USoundNodeMature : USoundNode {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct USQCoreStateListener : UActorComponent {
	TMap<FSQCoreStateId, FSQCoreStateDataList> DataMap; // 0xf0
};

struct UReplicationGraphNode_ActorListFrequencyBuckets : UReplicationGraphNode {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct UPlayMontageCallbackProxy : UObject {
	FScriptMulticastDelegate OnCompleted; // 0x28
	FScriptMulticastDelegate OnBlendOut; // 0x38
	FScriptMulticastDelegate OnInterrupted; // 0x48
	FScriptMulticastDelegate OnNotifyBegin; // 0x58
	FScriptMulticastDelegate OnNotifyEnd; // 0x68
};

struct UPhysicsSpringComponent : USceneComponent {
	float SpringStiffness; // 0x218
	float SpringDamping; // 0x21c
	float SpringLengthAtRest; // 0x220
	float SpringRadius; // 0x224
	ECollisionChannel SpringChannel; // 0x228
	bool bIgnoreSelf; // 0x229
	float SpringCompression; // 0x22c
};

struct ABP_L85A2AG36_UGL_DarkEarth_Smoke_C : ABP_L85A2AG36_UGL_DarkEarth_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQRoleListGroup : USQUserWidget {
	ESQRoleTypeEnum RoleType; // 0x230
	FText GroupHeaderText; // 0x238
	UCanvasPanel* GroupHeader; // 0x250
	UUniformGridPanel* RoleGrid; // 0x258
};

struct UAnimSharingStateInstance : UAnimInstance {
	UAnimSequence* AnimationToPlay; // 0x268
	float PermutationTimeOffset; // 0x270
	float PlayRate; // 0x274
	bool bStateBool; // 0x278
	UAnimSharingInstance* instance; // 0x280
};

struct UBTTask_GameplayTaskBase : UBTTaskNode {
	char bWaitForGameplayTask : 1; // 0x70
};

struct UMovieSceneEulerTransformTrack : UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UBP_Attachment_1p29_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UBP_AK74M_Optic_StaticInfo_C : UBP_AK74_Optic_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UTimelineTemplate : UObject {
	float TimelineLength; // 0x28
	ETimelineLengthMode LengthMode; // 0x2c
	char bAutoPlay : 1; // 0x2d
	char bLoop : 1; // 0x2d
	char bReplicated : 1; // 0x2d
	char bIgnoreTimeDilation : 1; // 0x2d
	TArray<FTTEventTrack> EventTracks; // 0x30
	TArray<FTTFloatTrack> FloatTracks; // 0x40
	TArray<FTTVectorTrack> VectorTracks; // 0x50
	TArray<FTTLinearColorTrack> LinearColorTracks; // 0x60
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0x70
	FGuid TimelineGuid; // 0x80
	FName VariableName; // 0x90
	FName DirectionPropertyName; // 0x98
	FName UpdateFunctionName; // 0xa0
	FName FinishedFunctionName; // 0xa8
};

struct UBP_AK74GP25_UGL_Parent_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USQNetworkPollingComponent : UActorComponent {
	float RollingPacketLossTime; // 0xd8
	float TimeoutForFullPacketLoss; // 0xdc
};

struct UTextBlockWidgetStyle : USlateWidgetStyleContainerBase {
	FTextBlockStyle TextBlockStyle; // 0x30
};

struct UMovieSceneSkeletalAnimationSection : UMovieSceneSection {
	FMovieSceneSkeletalAnimationParams Params; // 0xe0
	UAnimSequence* AnimSequence; // 0x1b0
	UAnimSequenceBase* Animation; // 0x1b8
	float StartOffset; // 0x1c0
	float EndOffset; // 0x1c4
	float PlayRate; // 0x1c8
	char bReverse : 1; // 0x1cc
	FName SlotName; // 0x1d0
};

struct ACameraRig_Crane : AActor {
	float CranePitch; // 0x248
	float CraneYaw; // 0x24c
	float CraneArmLength; // 0x250
	bool bLockMountPitch; // 0x254
	bool bLockMountYaw; // 0x255
	USceneComponent* TransformComponent; // 0x258
	USceneComponent* CraneYawControl; // 0x260
	USceneComponent* CranePitchControl; // 0x268
	USceneComponent* CraneCameraMount; // 0x270
};

struct UMovieSceneActorReferenceTrack : UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct ABP_AK74MGP25_1P63_UGL_Desert_Smoke_Red_C : ABP_AK74MGP25_1P63_UGL_Desert_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UImageSequenceProtocol_JPG : UCompressedImageSequenceProtocol {
	int CompressionQuality; // 0xd8
};

struct ASQPhysicsVolume : APhysicsVolume {
	float TerminalVelocity; // 0x280
	int Priority; // 0x284
	float FluidFriction; // 0x288
	char bWaterVolume : 1; // 0x28c
	char bPhysicsOnContact : 1; // 0x28c
};

struct ABP_40MM_Smoke_Blue_Proj2_C : ABP_40MM_Smoke_Proj2_C {
	UParticleSystemComponent* Effect; // 0x548
	UParticleSystem* SmokeEffect; // 0x550
	USoundCue* SmokeSound; // 0x558
};

struct UChannel : UObject {
	UNetConnection* Connection; // 0x28
};

struct UWidgetAnimationDelegateBinding : UDynamicBlueprintBinding {
	TArray<FBlueprintWidgetAnimationDelegateBinding> WidgetAnimationDelegateBindings; // 0x28
};

struct USQSuppressionInfo : UObject {
	float SuppressSwayFactorRelease; // 0x28
	float AddSuppressSway; // 0x2c
	float MinSuppressSwayFactor; // 0x30
	float MaxSuppressSwayFactor; // 0x34
	float LofSuppressRange; // 0x38
	float LofSuppressInterpSpeed; // 0x3c
	float LofSuppressAlphaFactor; // 0x40
	float LofSuppressRotationAlphaRelease; // 0x44
};

struct UParticleModuleVectorFieldRotationRate : UParticleModuleVectorFieldBase {
	FVector RotationRate; // 0x30
};

struct UNavLinkRenderingComponent : UPrimitiveComponent {
	float MinDrawDistance; // 0x220
	float LDMaxDrawDistance; // 0x224
	float CachedMaxDrawDistance; // 0x228
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x22c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x22d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x22e
	ELightmapType LightmapType; // 0x22f
	char bUseMaxLODAsImposter : 1; // 0x230
	char bNeverDistanceCull : 1; // 0x230
	char bAlwaysCreatePhysicsState : 1; // 0x230
	char bGenerateOverlapEvents : 1; // 0x230
	char bGenerateLocalOverlapEvents : 1; // 0x231
	char bMultiBodyOverlap : 1; // 0x231
	char bTraceComplexOnMove : 1; // 0x231
	char bReturnMaterialOnMove : 1; // 0x231
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x231
	char bAllowCullDistanceVolume : 1; // 0x231
	char bHasMotionBlurVelocityMeshes : 1; // 0x231
	char bVisibleInReflectionCaptures : 1; // 0x232
	char bVisibleInRayTracing : 1; // 0x232
	char bRenderInMainPass : 1; // 0x232
	char bReceivesDecals : 1; // 0x232
	char bOwnerNoSee : 1; // 0x232
	char bOnlyOwnerSee : 1; // 0x232
	char bTreatAsBackgroundForOcclusion : 1; // 0x232
	char bUseAsOccluder : 1; // 0x232
	char bSelectable : 1; // 0x233
	char bForceMipStreaming : 1; // 0x233
	char bHasPerInstanceHitProxies : 1; // 0x233
	char CastShadow : 1; // 0x233
	char bAffectDynamicIndirectLighting : 1; // 0x233
	char bAffectDistanceFieldLighting : 1; // 0x233
	char bCastDynamicShadow : 1; // 0x233
	char bCastStaticShadow : 1; // 0x233
	char bCastVolumetricTranslucentShadow : 1; // 0x234
	char bSelfShadowOnly : 1; // 0x234
	char bCastFarShadow : 1; // 0x234
	char bCastInsetShadow : 1; // 0x234
	char bCastCinematicShadow : 1; // 0x234
	char bCastHiddenShadow : 1; // 0x234
	char bCastShadowAsTwoSided : 1; // 0x234
	char bLightAsIfStatic : 1; // 0x234
	char bLightAttachmentsAsGroup : 1; // 0x235
	char bReceiveMobileCSMShadows : 1; // 0x235
	char bSingleSampleShadowFromStationaryLights : 1; // 0x235
	char bIgnoreRadialImpulse : 1; // 0x235
	char bIgnoreRadialForce : 1; // 0x235
	char bApplyImpulseOnDamage : 1; // 0x235
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x235
	char AlwaysLoadOnClient : 1; // 0x235
	char AlwaysLoadOnServer : 1; // 0x236
	char bUseEditorCompositing : 1; // 0x236
	char bRenderCustomDepth : 1; // 0x236
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x237
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x239
	FLightingChannels LightingChannels; // 0x23a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x23b
	int CustomDepthStencilValue; // 0x23c
	FCustomPrimitiveData CustomPrimitiveData; // 0x240
	int TranslucencySortPriority; // 0x250
	int VisibilityId; // 0x254
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x258
	int VirtualTextureLodBias; // 0x268
	int VirtualTextureCullMips; // 0x26c
	int VirtualTextureMinCoverage; // 0x270
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x274
	float LpvBiasMultiplier; // 0x27c
	float BoundsScale; // 0x288
	TArray<AActor*> MoveIgnoreActors; // 0x298
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2a8
	FBodyInstance BodyInstance; // 0x2c8
	FScriptMulticastDelegate OnComponentHit; // 0x3d8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3d9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3da
	FScriptMulticastDelegate OnComponentWake; // 0x3db
	FScriptMulticastDelegate OnComponentSleep; // 0x3dc
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3de
	FScriptMulticastDelegate OnEndCursorOver; // 0x3df
	FScriptMulticastDelegate OnClicked; // 0x3e0
	FScriptMulticastDelegate OnReleased; // 0x3e1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3e2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3e3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3e4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3e5
	UPrimitiveComponent* LODParentPrimitive; // 0x400
};

struct ULandscapeGrassType : UObject {
	TArray<FGrassVariety> GrassVarieties; // 0x28
	char bEnableDensityScaling : 1; // 0x38
	UStaticMesh* GrassMesh; // 0x40
	float GrassDensity; // 0x48
	float PlacementJitter; // 0x4c
	int StartCullDistance; // 0x50
	int EndCullDistance; // 0x54
	bool RandomRotation; // 0x58
	bool AlignToSurface; // 0x59
};

struct UPrefabToolSettings : UObject {
	bool bReplaceActorsWithCreatedPrefab; // 0x28
	bool bAutoIncludeAttachedActorsWhenCreateNewPrefab; // 0x29
	bool bNestedPrefabSupport; // 0x2a
	bool bRestorePrefabActorCollapseStatusAfterPIE; // 0x2b
	bool bCollapseAllPrefabActorsAfterMapOpened; // 0x2c
	bool bMoveActorsInWorldAfterSetPrefabPivot; // 0x2d
	bool bDuplicateNoRevertWithOffset; // 0x2e
	FString NewPrefabNamePattern; // 0x30
	EPTUITheme UITheme; // 0x40
	bool bUpdateAllPrefabActorsWhenOpenMap; // 0x44
	bool bCheckPrefabChangeBeforeUpdateAllPrefabActorsWhenOpenMap; // 0x45
	bool bUpdateAllPrefabActorsWhenApply; // 0x46
	bool bApplyToNestedPrefab; // 0x47
	bool bEnableApplyFromDisconnectedPrefabActor; // 0x48
	bool bAutoAddRemoveVariantActorPrefix; // 0x49
	FString VariantActorPrefix; // 0x50
	bool bEnablePrefabComponentVisualizer; // 0x60
	EPrefabVisualizerType PrefabComponentVisualizerType; // 0x61
	bool bDisplayPrefabComponentVisualizerEvenNotSelected; // 0x62
	FColor PrefabViewVisualizerColor; // 0x64
	FColor TargetActorColor; // 0x68
	FColor UnLockedConnectedColor; // 0x6c
	FColor LockedConnectedColor; // 0x70
	FColor UnLockedDisConnectedColor; // 0x74
	FColor LockedDisConnectedColor; // 0x78
	FColor UnLockedNoPrefabAssignedColor; // 0x7c
	FColor LockedNoPrefabAssignedColor; // 0x80
	FSoftObjectPath PrefabMaterialPath; // 0x88
	bool bShadedPrefabViewVisualizer; // 0xc8
	bool bLockPrefabSelectionByDefault; // 0xc9
	bool bDisableLockPrefabSelectionFeature; // 0xca
	bool bForceApplyPerInstanceVertexColor; // 0xcb
	bool bSupportGenerateBlueprint; // 0xcd
	bool bHarvestComponentsWhenGeneratingBlueprint; // 0xce
	bool bForceMobilityToMovableWhenGeneratingBlueprint; // 0xcf
	TArray<AActor*> IgnoreActorClassesWhenGeneratingBlueprint; // 0xd8
	TArray<FName> IgnoreActorTagsWhenGeneratingBlueprint; // 0xe8
	bool bFlashPrefabWindowForTargetPrefabActor; // 0xf8
	bool bEnablePrefabTextEditor; // 0xf9
	bool bDebugMode; // 0xfa
	bool bDisableThumbnailRender; // 0xfb
	bool bShowPrefabInstanceTagInPrefabToolWindow; // 0xfc
};

struct UMovieSceneVectorSection : UMovieSceneSection {
	FMovieSceneFloatChannel Curves[0x4]; // 0xe0
	int ChannelsUsed; // 0x360
};

struct UImageSequenceProtocol_EXR : UImageSequenceProtocol {
	bool bCompressed; // 0xd8
	EHDRCaptureGamut CaptureGamut; // 0xd9
};

struct UMovieSceneMediaTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> MediaSections; // 0x58
};

struct ABP_M4M203_Rifle_Founder_C : ABP_M4M203_Rifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMovieSceneEventSectionBase : UMovieSceneSection {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int RowIndex; // 0xa8
	int OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct USQConfig : UObject {
	bool ConfigLoaded; // 0x28
	FString AnnouncementURL; // 0x270
	FString AnnouncementHeaderURL; // 0x280
};

struct UBTTask_PlayAnimation : UBTTaskNode {
	UAnimationAsset* AnimationToPlay; // 0x70
	char bLooping : 1; // 0x78
	char bNonBlocking : 1; // 0x78
	UBehaviorTreeComponent* MyOwnerComp; // 0x80
	USkeletalMeshComponent* CachedSkelMesh; // 0x88
};

struct UInterpGroupInstCamera : UInterpGroupInst {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct UNavigationSystemConfig : UObject {
	FSoftClassPath NavigationSystemClass; // 0x28
	char bIsOverriden : 1; // 0x40
};

struct UMovieScene3DConstraintTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x58
};

struct UBP_MapWidgetCameraman_C : USQMapWidgetCameraman {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b8
	UImage* Player_Cone_Image; // 0x2c0
	UImage* Player_Image; // 0x2c8
	UScaleBox* ScaleBox_1; // 0x2d0
	UOverlay* WidgetOverlay; // 0x2d8
};

struct UBP_Attachment_M68_NoAds_Woodland_C : UBP_Attachment_M68_C {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USQScoreboardPlayer : USQUserWidget {
	USQStatefulButton* TalkingButton; // 0x240
	ASQPlayerController* SQPC; // 0x248
	ASQPlayerState* SQPlayerState; // 0x250
	ASQPlayerState* OwnerSQPlayerState; // 0x258
	FLinearColor SelfColor; // 0x278
	FLinearColor OtherColor; // 0x288
	FLinearColor BleedingColor; // 0x298
	FLinearColor IncapColor; // 0x2a8
	FLinearColor DeadColor; // 0x2b8
	UTexture2D* BleedingTexture; // 0x2c8
	UTexture2D* IncapTexture; // 0x2d0
	UTexture2D* DeadTexture; // 0x2d8
	FText HealthTooltipDead; // 0x2e0
	FText HealthTooltipIncap; // 0x2f8
	FText HealthTooltipBleeding; // 0x310
	bool bShowAllStats; // 0x328
	bool bIsFriendlyScoreboard; // 0x329
	UCanvasPanel* LeaderPanel; // 0x330
	UHorizontalBox* EndOfRoundPanel; // 0x338
	USpacer* NotEndOfRoundSpacer; // 0x340
	UTextBlock* LeaderText; // 0x348
	UTextBlock* PlayerNameText; // 0x350
	UTextBlock* KillsText; // 0x358
	UTextBlock* IncapsText; // 0x360
	UTextBlock* DeathsText; // 0x368
	UTextBlock* RevivesText; // 0x370
	UTextBlock* HealsText; // 0x378
	UTextBlock* TeamworkText; // 0x380
	UTextBlock* ObjectivesText; // 0x388
	UTextBlock* ScoreText; // 0x390
	UTextBlock* PingText; // 0x398
	UImage* LeaderTypeImage; // 0x3a0
	UImage* FireteamImage; // 0x3a8
	UImage* HealthStateImage; // 0x3b0
	UImage* VehicleImage; // 0x3b8
	UImage* RoleImage; // 0x3c0
};

struct ABP_M4_M68_4Mags_C : ABP_M4_M68_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleLocationPrimitiveSphere : UParticleModuleLocationPrimitiveBase {
	FRawDistributionFloat StartRadius; // 0xc0
};

struct ASQTrackedVehicle : ASQGroundVehicle {
	TArray<FSQVehicleEffectsQualitySetting> VehicleEffectsQualitySettings; // 0x820
	TArray<FSQVehicleEffectConfig> VehicleEffectsConfig; // 0x830
	FVector2D WheelFXSound_RPMRate; // 0x840
	FVector2D WheelFXSound_LongSlipRate; // 0x848
	FVector2D WheelFXSound_LatSlipRate; // 0x850
	bool bEjectOpenSeatsOnHardLanding; // 0x858
	bool bDrawDebugTraces; // 0x859
	FTimerHandle HardLandingCheckTimer; // 0x860
	FTimerHandle IsFlyingTimer; // 0x868
	float IsFlyingUpdateInterval; // 0x870
	float IsHardLandingUpdateInterval; // 0x874
	TArray<FName> LandingTraceSockets; // 0x878
	float LandingTraceLenght; // 0x888
	bool bIsFlying; // 0x88c
	float LastFlyingZVelocity; // 0x890
	float EjectZVelocityThreshold; // 0x894
	int EmergencyTeleportCooldownSeconds; // 0x898
	TArray<AActor*> LandingCheckActorsToIgnore; // 0x8a0
	USQVehicleCleanupComponent* VehicleCleanupComponent; // 0x8b0
	bool bShouldSimulate; // 0x8b8
	USoundCue* EngineRPMSound; // 0x8c0
	UAudioComponent* EngineRPMAC; // 0x8c8
	USoundCue* EngineExhaustSound; // 0x8d0
	UAudioComponent* EngineExhaustStartAC; // 0x8d8
	UAudioComponent* EngineExhaustAC; // 0x8e0
	UAudioComponent* EngineExhaustStopAC; // 0x8e8
	USoundCue* EngineStartSound; // 0x8f0
	UAudioComponent* EngineCompletedStartAC; // 0x8f8
	USoundCue* EngineCompletedStartSound; // 0x900
	UAudioComponent* EngineFailedStartAC; // 0x908
	USoundCue* EngineFailedStartSound; // 0x910
	UAudioComponent* EngineStartAC; // 0x918
	USoundCue* EngineStopSound; // 0x920
	UAudioComponent* EngineStopAC; // 0x928
	UAudioComponent* EngineSpeedAC; // 0x930
	UAudioComponent* WheelFXAC; // 0x938
	USoundCue* LandingSound; // 0x940
	float EngineIdleFadeInAfterEngineStartTime; // 0x948
	float EngineIdleFadeOutAfterEngineStopTime; // 0x94c
	float SpringCompressionLandingThreshold; // 0x950
	float SkidThresholdVelocity; // 0x954
	float LongSlipSkidThreshold; // 0x958
	float LateralSlipSkidThreshold; // 0x95c
	UParticleSystemComponent* ExhaustPSC; // 0x960
	bool bTiresTouchingGround; // 0x968
	bool bHandbrakeActive; // 0x969
	bool bIsEngineActive; // 0x96a
	bool bIsEngineToggleActive; // 0x96b
	bool bAllowEngineBoosting; // 0x96c
	float EngineBoostTorqueMultiplier; // 0x970
	bool bHasEngineBoostBeenPressed; // 0x974
	TArray<FSQEngineMovementSoundObject> EngineMovementSounds; // 0x978
	float ActivateEngineDelay; // 0x988
	float DeActivateEngineDelay; // 0x98c
	float GearChangingAlphaLerpSpeed; // 0x9a4
	UWheeledVehicleMovementComponent* VehicleMovement; // 0x9a8
	UBoxComponent* VehicleRagdollOverlap; // 0x9b0
	float RagollOverlapTriggerSpeed; // 0x9b8
	int CollisionKillSpeedKPH; // 0x9bc
	bool bCollisionsKillSoldiers; // 0x9c0
	float WheelInflationRate; // 0x9c4
};

struct UMultiPackerLayerDatabase : UObject {
	FLayerDatabase LayerBase; // 0x28
	FLinearColor ColorOutline; // 0x80
	FLinearColor ColorInterior; // 0x90
	float OutlineThresold; // 0xa0
	float SDFThresold; // 0xa4
	UTileCopy* Button; // 0xa8
	UMaterialInstanceDynamic* Material; // 0xb0
};

struct USQRoleSettings : USQSettings {
	TArray<FSQInventoryWeaponGroupData> Inventory; // 0x58
	FName Role_Specifics_ActionName; // 0x68
	FName Role_Specifics_ActionName1; // 0x70
	UAnimMontage* SoldierMenuAnimMontage; // 0x78
	bool bLeavingSquadChangesRole; // 0x80
	bool bCanPlaceRallyPoint; // 0x81
	bool bCanSeeHealthStatus; // 0x82
	bool bIsLeader; // 0x83
	bool bIsMedic; // 0x84
	bool bIsRecruit; // 0x85
	bool bCanBuild; // 0x86
	FText DisplayName; // 0x88
	UTexture2D* UiIcon; // 0xa0
	UTexture2D* SpecialWeaponIcon; // 0xa8
	FText Role_Details; // 0xb0
	FText Role_Specifics; // 0xc8
	FSQRoleLimit DefaultLimit; // 0xe0
	ESQRoleTypeEnum RoleType; // 0x104
	UClass* SoldierClass; // 0x108
	UClass* SoldierClassDesert; // 0x130
	TArray<FSQInventoryWeaponGroupData> TestInventory; // 0x158
	ESQVehicleRoleAbility VehicleAbility; // 0x168
};

struct UBP_AK74_Optic_StaticInfo_C : UBP_AK74_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UMaterialExpressionDDY : UMaterialExpression {
	FExpressionInput Value; // 0x40
};

struct USQSquadStateDataHAB : USQSquadStateDataDeployable {
	char bSieged : 1; // 0x188
	char bSpawningEnabled : 1; // 0x188
	float ActivatedTimeStamp; // 0x18c
};

struct ASQSoundSplineActor : AActor {
	USplineComponent* Spline; // 0x248
	USphereComponent* Sphere; // 0x250
	bool bDrawDebugSphere; // 0x258
	bool bDrawDebugPoints; // 0x259
	float DistanceAccuracy; // 0x25c
	UAudioComponent* Sound; // 0x260
	APlayerCameraManager* CachedPlayerCameraManager; // 0x268
};

struct UMultiPackerMatNode : UObject {
	UMaterialInterface* MaterialBaseInput; // 0x28
	bool SDF; // 0x30
	int SDF_Radius; // 0x34
	bool Atlas; // 0x38
	int TilesVertical; // 0x3c
	int TilesHorizontal; // 0x40
	bool RectangleSize; // 0x44
	ETextureSizeOutputPersonal SetSizeByParameter; // 0x45
	int SizeVertical; // 0x48
	int SizeHorizontal; // 0x4c
};

struct ASQEquipableItem : AActor {
	USQItemStaticInfo* ItemStaticInfo; // 0x248
	USQItemStaticInfo* ItemStaticInfoClass; // 0x250
	FScriptMulticastDelegate OnPawnOwnerChangedEvent; // 0x280
	FText DisplayName; // 0x290
	FText ItemDescription; // 0x2a8
	int RearmTypesAllowed; // 0x2c0
	bool bUseOwnerAsMasterPose; // 0x2c4
	float AmmoPerRearmItem; // 0x2c8
	float UnequippedNetUpdateRate; // 0x2d0
	ESQEquippableActionState ActionState; // 0x2d4
	UBlendSpace1D* SprintBlendspace; // 0x2d8
	UAnimSequence* WalkForwardAnim; // 0x2e0
	UAnimSequence* IdleAnim; // 0x2e8
	UAnimSequence* UseAnim; // 0x2f0
	UAnimSequence* StandAnim; // 0x2f8
	UAnimSequence* EquipAnim; // 0x300
	UAnimSequence* UnequipAnim; // 0x308
	UAnimSequence* AltUseAnim; // 0x310
	UAnimSequence* Custom1Anim; // 0x318
	UAnimSequence* Custom2Anim; // 0x320
	UAnimSequence* Custom3Anim; // 0x328
	UAnimSequence* PreUseAnim; // 0x330
	UAnimSequence* PostUseAnim; // 0x338
	UAnimSequence* PreAltUseAnim; // 0x340
	UAnimSequence* PostAltUseAnim; // 0x348
	UTexture2D* HUDSelectedTexture; // 0x350
	UTexture2D* HUDTexture; // 0x358
	bool bShowItemCountInInventory; // 0x360
	bool bShowMagCountInInventory; // 0x361
	bool bShowAmmoDataInHud; // 0x362
	bool bChangeDormancyOnEquipState; // 0x363
	int ItemCount; // 0x364
	int MaxItemCount; // 0x368
	char bCannotRearm : 1; // 0x36c
	float EquipDuration; // 0x374
	float UnequipDuration; // 0x378
	float RearmCounterMultiplier; // 0x384
	USceneComponent* Root; // 0x388
	USkeletalMeshComponent* Mesh1P; // 0x390
	USkeletalMeshComponent* Mesh3P; // 0x398
	APawn* PawnOwner; // 0x3a0
	APlayerController* LocalPlayerController; // 0x3a8
	FScriptMulticastDelegate PlayAnimationEvent; // 0x3b0
	FScriptMulticastDelegate PauseAnimationEvent; // 0x3c0
	FScriptMulticastDelegate ResumeAnimationEvent; // 0x3d0
	FScriptMulticastDelegate SetAnimationPlayRateEvent; // 0x3e0
	FScriptMulticastDelegate EndLoopAnimationEvent; // 0x3f0
	FScriptMulticastDelegate StopAnimationEvent; // 0x400
	FSQAudioComponentPool AudioComponentPool; // 0x410
	UAnimInstance* CachedWeapon1pAnimInstance; // 0x430
	UAnimInstance* CachedWeapon3pAnimInstance; // 0x438
	USQAnimInstanceSoldier1P* CachedSoldier1pAnimInstance; // 0x440
	USQAnimInstanceSoldier3P* CachedSoldier3pAnimInstance; // 0x448
	float CachedEquipDuration; // 0x450
	float CachedUnequipDuration; // 0x454
	ESQEquippableState EquipState; // 0x458
	bool bCachedMoveBobbing; // 0x459
	bool bCachedSprintBobbing; // 0x45a
	bool bCachedHasMovement; // 0x45b
	bool bCachedIsPullingTrigger; // 0x45c
	bool bCachedIsLeaningRight; // 0x45d
	bool bCachedIsLeaningLeft; // 0x45e
	float CachedDeltaTime; // 0x460
};

struct USoundNodeDelay : USoundNode {
	float DelayMin; // 0x40
	float DelayMax; // 0x44
};

struct ASphereReflectionCapture : AReflectionCapture {
	UDrawSphereComponent* DrawCaptureRadius; // 0x250
};

struct USQSettings : UDataAsset {
	FName ID; // 0x30
	FDataTableRowHandle Data; // 0x38
	FString ModId; // 0x48
};

struct APrefabActor : AActor {
	UPrefabComponent* PrefabComponent; // 0x248
};

struct ABP_AK74MGP25_1P78_UGL_Parent_C : ABP_AK74GP25_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQGridData_CommandOption_Distance : USQGridData_CommandOption {
	float MinimumDistance; // 0x138
	float MaximumDistance; // 0x13c
};

struct ABP_RPG7V2_Frag_2mag_Founders_C : ABP_RPG7V2_Frag_Founders_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UAbilityTask_WaitInputRelease : UAbilityTask {
	FScriptMulticastDelegate OnRelease; // 0x80
};

struct UPawnNoiseEmitterComponent : UActorComponent {
	char bAIPerceptionSystemCompatibilityMode : 1; // 0xd8
	FVector LastRemoteNoisePosition; // 0xdc
	float NoiseLifetime; // 0xe8
	float LastRemoteNoiseVolume; // 0xec
	float LastRemoteNoiseTime; // 0xf0
	float LastLocalNoiseVolume; // 0xf4
	float LastLocalNoiseTime; // 0xf8
};

struct USQVehicleWheel_Rear : USQVehicleWheel_Front {
	UStaticMesh* CollisionMesh; // 0x28
	bool bDontCreateShape; // 0x30
	bool bAutoAdjustCollisionSize; // 0x31
	FVector Offset; // 0x34
	float ShapeRadius; // 0x40
	float ShapeWidth; // 0x44
	float Mass; // 0x48
	float DampingRate; // 0x4c
	float PhysMatDampingRateMultiplier; // 0x50
	float SteerAngle; // 0x54
	bool bAffectedByHandbrake; // 0x58
	UTireType* TireType; // 0x60
	UTireConfig* TireConfig; // 0x68
	float LatStiffMaxLoad; // 0x70
	float LatStiffValue; // 0x74
	float LongStiffValue; // 0x78
	float SuspensionForceOffset; // 0x7c
	float SuspensionMaxRaise; // 0x80
	float SuspensionMaxDrop; // 0x84
	float SuspensionNaturalFrequency; // 0x88
	float SuspensionDampingRatio; // 0x8c
	EWheelSweepType SweepType; // 0x90
	float MaxBrakeTorque; // 0x94
	float MaxHandBrakeTorque; // 0x98
	UWheeledVehicleMovementComponent* VehicleSim; // 0xa0
	int WheelIndex; // 0xa8
	float DebugLongSlip; // 0xac
	float DebugLatSlip; // 0xb0
	float DebugNormalizedTireLoad; // 0xb4
	float DebugWheelTorque; // 0xbc
	float DebugLongForce; // 0xc0
	float DebugLatForce; // 0xc4
	FVector Location; // 0xc8
	FVector OldLocation; // 0xd4
	FVector Velocity; // 0xe0
};

struct UBookMark2D : UBookmarkBase {
	float Zoom2D; // 0x28
	FIntPoint Location; // 0x2c
};

struct UMaterialExpressionMaterialAttributeLayers : UMaterialExpression {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
	FMaterialAttributesInput Input; // 0x58
	FMaterialLayersFunctions DefaultLayers; // 0x70
	TArray<UMaterialExpressionMaterialFunctionCall*> LayerCallers; // 0xb0
	int NumActiveLayerCallers; // 0xc0
	TArray<UMaterialExpressionMaterialFunctionCall*> BlendCallers; // 0xc8
	int NumActiveBlendCallers; // 0xd8
	bool bIsLayerGraphBuilt; // 0xdc
};

struct UListView : UListViewBase {
	ESelectionMode SelectionMode; // 0x2c8
	EConsumeMouseWheel ConsumeMouseWheel; // 0x2c9
	bool bClearSelectionOnClick; // 0x2ca
	bool bIsFocusable; // 0x2cb
	float EntrySpacing; // 0x2cc
	bool bReturnFocusToSelection; // 0x2d0
	TArray<UObject*> ListItems; // 0x2d8
	FScriptMulticastDelegate BP_OnEntryInitialized; // 0x2f8
	FScriptMulticastDelegate BP_OnItemClicked; // 0x308
	FScriptMulticastDelegate BP_OnItemDoubleClicked; // 0x318
	FScriptMulticastDelegate BP_OnItemIsHoveredChanged; // 0x328
	FScriptMulticastDelegate BP_OnItemSelectionChanged; // 0x338
	FScriptMulticastDelegate BP_OnItemScrolledIntoView; // 0x348
};

struct UAnimCompress_RemoveEverySecondKey : UAnimCompress {
	int MinKeys; // 0x50
	char bStartAtSecondKey : 1; // 0x54
};

struct UInterpTrackAnimControl : UInterpTrackFloatBase {
	FName SlotName; // 0x90
	TArray<FAnimControlTrackKey> AnimSeqs; // 0x98
	char bSkipAnimNotifiers : 1; // 0xa8
};

struct ASQAASGraph : ASQUndirectedGraph {
	bool bNodesHaveReplicated; // 0x280
};

struct USQSeatProgressWidget : USQProgressWidget {
	float TotalTime; // 0x250
	ASQVehicle* WithVehicle; // 0x258
	ESeatProgressMenuMode MenuMode; // 0x260
};

struct AARSharedWorldGameMode : AGameMode {
	int BufferSizePerChunk; // 0x390
};

struct UBP_Attachment_PSO-1_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USQSquadStateDataRallyPoint : USQSquadStateDataSpawnPoint {
	int NumberOfSpawns; // 0x198
};

struct UUserDefinedImageCaptureProtocol : UUserDefinedCaptureProtocol {
	EDesiredImageFormat Format; // 0xd8
	bool bEnableCompression; // 0xd9
	int CompressionQuality; // 0xdc
};

struct USteamNetConnection : UIpConnection {
	bool bIsPassthrough; // 0x1a00
};

struct ABP_AK74MGP25_UGL_Parent_C : ABP_AK74GP25_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionMapARPassthroughCameraUV : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
};

struct UEdGraphPin_Deprecated : UObject {
	FString PinName; // 0x28
	FString PinToolTip; // 0x38
	EEdGraphPinDirection Direction; // 0x48
	FEdGraphPinType PinType; // 0x50
	FString DefaultValue; // 0xa8
	FString AutogeneratedDefaultValue; // 0xb8
	UObject* DefaultObject; // 0xc8
	FText DefaultTextValue; // 0xd0
	TArray<UEdGraphPin_Deprecated*> LinkedTo; // 0xe8
	TArray<UEdGraphPin_Deprecated*> SubPins; // 0xf8
	UEdGraphPin_Deprecated* ParentPin; // 0x108
	UEdGraphPin_Deprecated* ReferencePassThroughConnection; // 0x110
};

struct UAbilityTask_WaitDelay : UAbilityTask {
	FScriptMulticastDelegate OnFinish; // 0x80
};

struct UBP_L85A2AG36_UGL_HE_StaticInfo_C : UBP_L85A2AG36_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct AHUD : AActor {
	APlayerController* PlayerOwner; // 0x248
	char bLostFocusPaused : 1; // 0x250
	char bShowHUD : 1; // 0x250
	char bShowDebugInfo : 1; // 0x250
	int CurrentTargetIndex; // 0x254
	char bShowHitBoxDebugInfo : 1; // 0x258
	char bShowOverlays : 1; // 0x258
	char bEnableDebugTextShadow : 1; // 0x258
	TArray<AActor*> PostRenderedActors; // 0x260
	TArray<FName> DebugDisplay; // 0x278
	TArray<FName> ToggledDebugCategories; // 0x288
	UCanvas* Canvas; // 0x298
	UCanvas* DebugCanvas; // 0x2a0
	TArray<FDebugTextInfo> DebugTextList; // 0x2a8
	AActor* ShowDebugTargetDesiredClass; // 0x2b8
	AActor* ShowDebugTargetActor; // 0x2c0
};

struct USQFaction : USQPrimaryData {
	TArray<USQFactionSetup*> AvailableSetups; // 0x70
};

struct USQSquadMemberListItem : USQUserWidget {
	TArray<UTexture2D*> RankTextures; // 0x230
	UButton* ActionMenuBtnCPP; // 0x240
	UButton* PromoteToSLBtnCPP; // 0x248
	UButton* KickBtnCPP; // 0x250
	UButton* SLInviteBtnCPP; // 0x258
	TArray<UVerticalBox*> MenuPanelsCPP; // 0x260
	UImage* KitBGCPP; // 0x270
	UImage* KitIconCPP; // 0x278
	UTextBlock* NamePCPP; // 0x280
	UImage* NameBGCPP; // 0x288
	UImage* RankBGCPP; // 0x290
	UImage* RankIconCPP; // 0x298
	UImage* VehicleBGCPP; // 0x2a0
	UImage* VehicleIconCPP; // 0x2a8
	UImage* WeaponIconCPP; // 0x2b0
	UTextBlock* PlayerNameCPP; // 0x2b8
	ASQPlayerState* PlayerStateIdentifier; // 0x2c0
	bool bIsHovering; // 0x2cc
	USQSquadMemberList* Manager; // 0x2d8
};

struct UBP_Attachment_PGO-7_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USpinBox : UWidget {
	float Value; // 0x108
	DelegateProperty ValueDelegate; // 0x10c
	FSpinBoxStyle WidgetStyle; // 0x120
	USlateWidgetStyleAsset* Style; // 0x408
	float Delta; // 0x410
	float SliderExponent; // 0x414
	FSlateFontInfo Font; // 0x418
	ETextJustify Justification; // 0x468
	float MinDesiredWidth; // 0x46c
	bool ClearKeyboardFocusOnCommit; // 0x470
	bool SelectAllTextOnCommit; // 0x471
	FSlateColor ForegroundColor; // 0x478
	FScriptMulticastDelegate OnValueChanged; // 0x4a0
	FScriptMulticastDelegate OnValueCommitted; // 0x4b0
	FScriptMulticastDelegate OnBeginSliderMovement; // 0x4c0
	FScriptMulticastDelegate OnEndSliderMovement; // 0x4d0
	char bOverride_MinValue : 1; // 0x4e0
	char bOverride_MaxValue : 1; // 0x4e0
	char bOverride_MinSliderValue : 1; // 0x4e0
	char bOverride_MaxSliderValue : 1; // 0x4e0
	float MinValue; // 0x4e4
	float MaxValue; // 0x4e8
	float MinSliderValue; // 0x4ec
	float MaxSliderValue; // 0x4f0
};

struct ULogoutCallbackProxy : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct ABP_M4M203_Rifle_M68_C : ABP_M4M203_Rifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAbilitySystemComponent : UGameplayTasksComponent {
	TArray<FAttributeDefaults> DefaultStartingData; // 0x158
	TArray<UAttributeSet*> SpawnedAttributes; // 0x168
	float OutgoingDuration; // 0x338
	float IncomingDuration; // 0x33c
	TArray<FString> ClientDebugStrings; // 0x360
	TArray<FString> ServerDebugStrings; // 0x370
	bool UserAbilityActivationInhibited; // 0x3e0
	bool ReplicationProxyEnabled; // 0x3e1
	bool bSuppressGrantAbility; // 0x3e2
	bool bSuppressGameplayCues; // 0x3e3
	TArray<AGameplayAbilityTargetActor*> SpawnedTargetActors; // 0x3e8
	AActor* OwnerActor; // 0x420
	AActor* AvatarActor; // 0x428
	FGameplayAbilitySpecContainer ActivatableAbilities; // 0x440
	TArray<UGameplayAbility*> AllReplicatedInstancedAbilities; // 0x590
	FGameplayAbilityRepAnimMontage RepAnimMontageInfo; // 0x770
	bool bCachedIsNetSimulated; // 0x7a0
	bool bPendingMontageRep; // 0x7a1
	FGameplayAbilityLocalAnimMontage LocalAnimMontageInfo; // 0x7a8
	FActiveGameplayEffectsContainer ActiveGameplayEffects; // 0x878
	FActiveGameplayCueContainer ActiveGameplayCues; // 0xcf8
	FActiveGameplayCueContainer MinimalReplicationGameplayCues; // 0xe20
	TArray<char> BlockedAbilityBindings; // 0x1070
	FMinimalReplicationTagCountMap MinimalReplicationTags; // 0x11a8
	FReplicatedPredictionKeyMap ReplicatedPredictionKeyMap; // 0x1218
};

struct UDemoNetConnection : UNetConnection {
	TArray<UChildConnection*> Children; // 0x48
	UNetDriver* Driver; // 0x58
	UPackageMap* PackageMapClass; // 0x60
	UPackageMap* PackageMap; // 0x68
	TArray<UChannel*> OpenChannels; // 0x70
	TArray<AActor*> SentTemporaries; // 0x80
	AActor* ViewTarget; // 0x90
	AActor* OwningActor; // 0x98
	int MaxPacket; // 0xa0
	char InternalAck : 1; // 0xa4
	FUniqueNetIdRepl PlayerId; // 0x160
	double LastReceiveTime; // 0x1f0
	TArray<UChannel*> ChannelsToTick; // 0x14b8
};

struct UTouchInterface : UObject {
	TArray<FTouchInputControl> Controls; // 0x28
	float ActiveOpacity; // 0x38
	float InactiveOpacity; // 0x3c
	float TimeUntilDeactive; // 0x40
	float TimeUntilReset; // 0x44
	float ActivationDelay; // 0x48
	bool bPreventRecenter; // 0x4c
	float StartupDelay; // 0x50
};

struct UNavArea : UNavAreaBase {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct USQArmorMeshComponent : UStaticMeshComponent {
	TArray<FSQArmorInfo> ArmorInfo; // 0x498
};

struct UListViewBase : UWidget {
	UUserWidget* EntryWidgetClass; // 0x108
	FScriptMulticastDelegate BP_OnEntryGenerated; // 0x110
	FScriptMulticastDelegate BP_OnEntryReleased; // 0x120
	FUserWidgetPool EntryWidgetPool; // 0x130
};

struct ULocalLightComponent : ULightComponent {
	ELightUnits IntensityUnits; // 0x358
	float Radius; // 0x35c
	float AttenuationRadius; // 0x360
	FLightmassPointLightSettings LightmassSettings; // 0x364
};

struct USQLevel : USQPrimaryData {
	UWorld* World; // 0x70
	bool NeverAddToRotation; // 0x98
	TArray<USQLayer*> AvailableLayers; // 0xa0
};

struct UAISenseConfig_Prediction : UAISenseConfig {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UAnimationSharingStateProcessor : UObject {
	UEnum* AnimationStateEnum; // 0x28
};

struct UFieldNodeFloat : UFieldNodeBase {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UAbilityTask_WaitMovementModeChange : UAbilityTask {
	FScriptMulticastDelegate OnChange; // 0x80
};

struct UBP_GenericWeapon_StaticInfo_C : USQWeaponStaticInfo {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UARTrackedImage : UARTrackedGeometry {
	UARCandidateImage* DetectedImage; // 0xe8
	FVector2D EstimatedSize; // 0xf0
};

struct ABP_AKS74U_C : ABP_AK74_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UReplicationGraphNode_GridCell : UReplicationGraphNode_ActorList {
	UReplicationGraphNode* DynamicNode; // 0x140
	UReplicationGraphNode_DormancyNode* DormancyNode; // 0x148
};

struct UBP_Attachment_SVDM_front_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ABP_RPG7_Heat_C : ABP_RPG7_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct USQMainPatchData : USQSteamItem {
	FSQPatchItem PatchData; // 0x40
};

struct USQSquadStateDataSpawnPoint : USQSquadStateMapData {
	ASQGameSpawn* OwningGameSpawn; // 0x180
	ESQSpawnPointType SpawnPointType; // 0x188
	char bSieged : 1; // 0x18c
	char bSpawningEnabled : 1; // 0x18c
	float ActivatedTimeStamp; // 0x190
};

struct UHighlightsSetVideoAsync : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct UMovieScene3DAttachSection : UMovieScene3DConstraintSection {
	FName AttachSocketName; // 0x108
	FName AttachComponentName; // 0x110
	EAttachmentRule AttachmentLocationRule; // 0x118
	EAttachmentRule AttachmentRotationRule; // 0x119
	EAttachmentRule AttachmentScaleRule; // 0x11a
	EDetachmentRule DetachmentLocationRule; // 0x11b
	EDetachmentRule DetachmentRotationRule; // 0x11c
	EDetachmentRule DetachmentScaleRule; // 0x11d
};

struct UBP_AK74GP25_UGL_HE_StaticInfo_C : UBP_AK74GP25_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UBP_SVDM_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UBrainComponent : UActorComponent {
	UBlackboardComponent* BlackboardComp; // 0xe0
	AAIController* AIOwner; // 0xe8
};

struct URichTextBlock : UTextLayoutWidget {
	FText Text; // 0x128
	UDataTable* TextStyleSet; // 0x140
	TArray<URichTextBlockDecorator*> DecoratorClasses; // 0x148
	bool bOverrideDefaultStyle; // 0x158
	FTextBlockStyle DefaultTextStyleOverride; // 0x160
	float MinDesiredWidth; // 0x3c8
	TArray<URichTextBlockDecorator*> InstanceDecorators; // 0x638
};

struct USQNotificationData : UDataAsset {
	FSQNotificationLayout NotificationLayouts[0xb]; // 0x30
};

struct APlaneReflectionCapture : AReflectionCapture {
	UReflectionCaptureComponent* CaptureComponent; // 0x248
};

struct USQBTTask_FindPointNearEnemy : UBTTask_BlackboardBase {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UNodeMappingContainer : UObject {
	TMap<FName, FNodeItem> SourceItems; // 0x28
	TMap<FName, FNodeItem> TargetItems; // 0x78
	TMap<FName, FName> SourceToTarget; // 0xc8
	UObject* SourceAsset; // 0x118
	UObject* TargetAsset; // 0x140
};

struct UNavAreaMeta : UNavArea {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UGameplayTasksComponent : UActorComponent {
	char bIsNetDirty : 1; // 0xe4
	TArray<UGameplayTask*> SimulatedTasks; // 0xe8
	TArray<UGameplayTask*> TaskPriorityQueue; // 0xf8
	TArray<UGameplayTask*> TickingTasks; // 0x118
	TArray<UGameplayTask*> KnownTasks; // 0x128
	FScriptMulticastDelegate OnClaimedResourcesChange; // 0x138
};

struct UMaterialExpressionPreSkinnedPosition : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USQRestriction_Count : USQRestriction {
	int BaseAvailability; // 0x58
	bool IsUniqueUsage; // 0x5c
	TArray<USQCountParameterBase*> Parameters; // 0x60
};

struct UBodySetup : UObject {
	FKAggregateGeom AggGeom; // 0x28
	FName BoneName; // 0x80
	EPhysicsType PhysicsType; // 0x88
	char bAlwaysFullAnimWeight : 1; // 0x89
	char bConsiderForBounds : 1; // 0x89
	char bMeshCollideAll : 1; // 0x89
	char bDoubleSidedGeometry : 1; // 0x89
	char bGenerateNonMirroredCollision : 1; // 0x89
	char bSharedCookedData : 1; // 0x89
	char bGenerateMirroredCollision : 1; // 0x89
	EBodyCollisionResponse CollisionReponse; // 0x8b
	ECollisionTraceFlag CollisionTraceFlag; // 0x8c
	UPhysicalMaterial* PhysMaterial; // 0x90
	FWalkableSlopeOverride WalkableSlopeOverride; // 0x98
	FBodyInstance DefaultInstance; // 0x110
	FVector BuildScale3D; // 0x228
};

struct USQMovementComponentManager : UPawnMovementComponent {
	TArray<USQMovementComponentBase*> ManagedMovementComponents; // 0x170
};

struct USimulatedClientNetConnection : UNetConnection {
	TArray<UChildConnection*> Children; // 0x48
	UNetDriver* Driver; // 0x58
	UPackageMap* PackageMapClass; // 0x60
	UPackageMap* PackageMap; // 0x68
	TArray<UChannel*> OpenChannels; // 0x70
	TArray<AActor*> SentTemporaries; // 0x80
	AActor* ViewTarget; // 0x90
	AActor* OwningActor; // 0x98
	int MaxPacket; // 0xa0
	char InternalAck : 1; // 0xa4
	FUniqueNetIdRepl PlayerId; // 0x160
	double LastReceiveTime; // 0x1f0
	TArray<UChannel*> ChannelsToTick; // 0x14b8
};

struct UParticleModuleMeshMaterial : UParticleModuleMaterialBase {
	TArray<UMaterialInterface*> MeshMaterials; // 0x30
};

struct UAISenseConfig_Blueprint : UAISenseConfig {
	UAISense_Blueprint* Implementation; // 0x48
};

struct USQVehicleWheel : USQDriveTrainComponent {
	FName BoneName; // 0x598
};

struct UDatasmithImportOptions : UObject {
	EDatasmithImportSearchPackagePolicy SearchPackagePolicy; // 0x28
	EDatasmithImportAssetConflictPolicy MaterialConflictPolicy; // 0x29
	EDatasmithImportAssetConflictPolicy TextureConflictPolicy; // 0x2a
	EDatasmithImportActorPolicy StaticMeshActorImportPolicy; // 0x2b
	EDatasmithImportActorPolicy LightImportPolicy; // 0x2c
	EDatasmithImportActorPolicy CameraImportPolicy; // 0x2d
	EDatasmithImportActorPolicy OtherActorImportPolicy; // 0x2e
	EDatasmithImportMaterialQuality MaterialQuality; // 0x2f
	FDatasmithImportBaseOptions BaseOptions; // 0x34
	FDatasmithReimportOptions ReimportOptions; // 0x48
	FString Filename; // 0x50
	FString FilePath; // 0x60
};

struct USQCoreStateConnection : UActorComponent {
	TArray<USQCoreStateComponent*> ComponentList; // 0xe8
	TMap<UActorChannel*, FSQCoreStateDataToIdMap> RemovedDataLists; // 0xf8
};

struct ABP_M4M203_Rifle_M150_C : ABP_M4M203_Rifle_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	FVector LScale; // 0x7b8
};

struct UDataTable : UObject {
	UScriptStruct* RowStruct; // 0x28
	char bStripFromClientBuilds : 1; // 0x80
	char bIgnoreExtraFields : 1; // 0x80
	char bIgnoreMissingFields : 1; // 0x80
	FString ImportKeyField; // 0x88
};

struct URichTextBlockImageDecorator : URichTextBlockDecorator {
	UDataTable* ImageSet; // 0x28
};

struct UARTrackableNotifyComponent : UActorComponent {
	FScriptMulticastDelegate OnAddTrackedGeometry; // 0xd8
	FScriptMulticastDelegate OnUpdateTrackedGeometry; // 0xe8
	FScriptMulticastDelegate OnRemoveTrackedGeometry; // 0xf8
	FScriptMulticastDelegate OnAddTrackedPlane; // 0x108
	FScriptMulticastDelegate OnUpdateTrackedPlane; // 0x118
	FScriptMulticastDelegate OnRemoveTrackedPlane; // 0x128
	FScriptMulticastDelegate OnAddTrackedPoint; // 0x138
	FScriptMulticastDelegate OnUpdateTrackedPoint; // 0x148
	FScriptMulticastDelegate OnRemoveTrackedPoint; // 0x158
	FScriptMulticastDelegate OnAddTrackedImage; // 0x168
	FScriptMulticastDelegate OnUpdateTrackedImage; // 0x178
	FScriptMulticastDelegate OnRemoveTrackedImage; // 0x188
	FScriptMulticastDelegate OnAddTrackedFace; // 0x198
	FScriptMulticastDelegate OnUpdateTrackedFace; // 0x1a8
	FScriptMulticastDelegate OnRemoveTrackedFace; // 0x1b8
	FScriptMulticastDelegate OnAddTrackedEnvProbe; // 0x1c8
	FScriptMulticastDelegate OnUpdateTrackedEnvProbe; // 0x1d8
	FScriptMulticastDelegate OnRemoveTrackedEnvProbe; // 0x1e8
	FScriptMulticastDelegate OnAddTrackedObject; // 0x1f8
	FScriptMulticastDelegate OnUpdateTrackedObject; // 0x208
	FScriptMulticastDelegate OnRemoveTrackedObject; // 0x218
};

struct UMaterialExpressionPreSkinnedNormal : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UBP_M4M203_Rifle_StaticInfo_C : UBP_M4_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UObjectReferencer : UObject {
	TArray<UObject*> ReferencedObjects; // 0x28
};

struct UGeometryCollectionComponent : UMeshComponent {
	AChaosSolverActor* ChaosSolverActor; // 0x438
	UGeometryCollection* RestCollection; // 0x520
	TArray<AFieldSystemActor*> InitializationFields; // 0x528
	bool Simulating; // 0x538
	EObjectStateTypeEnum ObjectType; // 0x540
	bool EnableClustering; // 0x541
	int ClusterGroupIndex; // 0x544
	int MaxClusterLevel; // 0x548
	TArray<float> DamageThreshold; // 0x550
	EClusterConnectionTypeEnum ClusterConnectionType; // 0x560
	int CollisionGroup; // 0x564
	float CollisionSampleFraction; // 0x568
	UChaosPhysicalMaterial* PhysicalMaterial; // 0x570
	EInitialVelocityTypeEnum InitialVelocityType; // 0x578
	FVector InitialLinearVelocity; // 0x57c
	FVector InitialAngularVelocity; // 0x588
	FGeomComponentCacheParameters CacheParameters; // 0x598
	FScriptMulticastDelegate NotifyGeometryCollectionPhysicsStateChange; // 0x5e8
	FScriptMulticastDelegate NotifyGeometryCollectionPhysicsLoadingStateChange; // 0x5f8
	FScriptMulticastDelegate OnChaosBreakEvent; // 0x638
	float DesiredCacheTime; // 0x648
	bool CachePlayback; // 0x64c
	FScriptMulticastDelegate OnChaosPhysicsCollision; // 0x650
	bool bNotifyBreaks; // 0x660
	bool bNotifyCollisions; // 0x661
	UBodySetup* DummyBodySetup; // 0x810
};

struct UScrollBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FScrollBoxStyle ScrollBoxStyle; // 0x30
};

struct ULandscapeMeshCollisionComponent : ULandscapeHeightfieldCollisionComponent {
	FGuid MeshGuid; // 0x4e8
};

struct UTcpMessagingSettings : UObject {
	bool EnableTransport; // 0x28
	FString ListenEndpoint; // 0x30
	TArray<FString> ConnectToEndpoints; // 0x40
	int ConnectionRetryDelay; // 0x50
};

struct UMaterialExpressionScreenPosition : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USQRotorWashEffectListener : UActorComponent {
	TArray<USQRotorWashEffectSender*> ActiveEmitters; // 0xd8
	float EmitterCullDistance; // 0xe8
};

struct UARGetCandidateObjectAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FScriptMulticastDelegate OnSuccess; // 0x50
	FScriptMulticastDelegate OnFailed; // 0x60
};

struct UPropertyBinding : UObject {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct UMaterialExpressionTransform : UMaterialExpression {
	FExpressionInput Input; // 0x40
	EMaterialVectorCoordTransformSource TransformSourceType; // 0x54
	EMaterialVectorCoordTransform TransformType; // 0x55
};

struct USceneCaptureComponentCube : USceneCaptureComponent {
	UTextureRenderTargetCube* TextureTarget; // 0x2b0
	bool bCaptureRotation; // 0x2b8
	UTextureRenderTargetCube* TextureTargetLeft; // 0x2c0
	UTextureRenderTargetCube* TextureTargetRight; // 0x2c8
	UTextureRenderTarget2D* TextureTargetODS; // 0x2d0
	float IPD; // 0x2d8
};

struct USoundNodeSoundClass : USoundNode {
	USoundClass* SoundClassOverride; // 0x40
};

struct USplineMeshComponent : UStaticMeshComponent {
	FSplineMeshParams SplineParams; // 0x4a0
	FVector SplineUpDir; // 0x4f8
	char bAllowSplineEditingPerInstance : 1; // 0x504
	char bSmoothInterpRollScale : 1; // 0x504
	ESplineMeshAxis ForwardAxis; // 0x508
	float SplineBoundaryMin; // 0x50c
	float SplineBoundaryMax; // 0x510
	UBodySetup* BodySetup; // 0x518
	FGuid CachedMeshBodySetupGuid; // 0x520
	char bMeshDirty : 1; // 0x530
};

struct USQSoundNodeLooping : USoundNode {
	bool bIgnoreStartingBufferRequests; // 0x40
	FName StoppingBoolParameterName; // 0x44
	FName ContinueFiringBoolParameterName; // 0x4c
	FName QueuedSoundMaxLimitParameterName; // 0x54
	TArray<USoundWave*> StartingSounds; // 0x60
	TArray<USoundWave*> LoopingSounds; // 0x70
	TArray<USoundWave*> FinishingSounds; // 0x80
	int MinSamplesToInject; // 0x90
	int MaxSamplesToInject; // 0x94
	int SampleRate; // 0x98
	bool bCreateStereoSoundWave; // 0x9c
	USoundConcurrency* SoundConcurrencySettings; // 0xa0
	float MaxDuration; // 0xa8
	int TestShotCount; // 0xac
};

struct ABP_AK74_Founders_C : ABP_AK74_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBP_M17MHS_StaticInfo_C : UBP_Glock17_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USoundWave : USoundBase {
	int CompressionQuality; // 0x110
	int StreamingPriority; // 0x114
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x118
	ESoundGroup SoundGroup; // 0x11a
	char bLooping : 1; // 0x11b
	char bStreaming : 1; // 0x11b
	char bSeekableStreaming : 1; // 0x11b
	char bMature : 1; // 0x11c
	char bManualWordWrap : 1; // 0x11c
	char bSingleLine : 1; // 0x11c
	char bIsAmbisonics : 1; // 0x11c
	TArray<float> FrequenciesToAnalyze; // 0x120
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x130
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x140
	FString SpokenText; // 0x160
	float SubtitlePriority; // 0x170
	float Volume; // 0x174
	float Pitch; // 0x178
	int NumChannels; // 0x17c
	int SampleRate; // 0x180
	TArray<FSubtitleCue> Subtitles; // 0x188
	UCurveTable* Curves; // 0x198
	UCurveTable* InternalCurves; // 0x1a0
};

struct URadialForceComponent : USceneComponent {
	float Radius; // 0x218
	ERadialImpulseFalloff Falloff; // 0x21c
	float ImpulseStrength; // 0x220
	char bImpulseVelChange : 1; // 0x224
	char bIgnoreOwningActor : 1; // 0x224
	float ForceStrength; // 0x228
	float DestructibleDamage; // 0x22c
	TArray<EObjectTypeQuery> ObjectTypesToAffect; // 0x230
};

struct UParticleModuleLight : UParticleModuleLightBase {
	bool bUseInverseSquaredFalloff; // 0x30
	bool bAffectsTranslucency; // 0x31
	bool bPreviewLightRadius; // 0x32
	float SpawnFraction; // 0x34
	FRawDistributionVector ColorScaleOverLife; // 0x38
	FRawDistributionFloat BrightnessOverLife; // 0x88
	FRawDistributionFloat RadiusScale; // 0xc0
	FRawDistributionFloat LightExponent; // 0xf8
	FLightingChannels LightingChannels; // 0x130
	float VolumetricScatteringIntensity; // 0x134
	bool bHighQualityLights; // 0x138
	bool bShadowCastingLights; // 0x139
};

struct ABP_M110_Optic_Black_C : ABP_GenericRifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleAttractorParticle : UParticleModuleAttractorBase {
	FName EmitterName; // 0x30
	FRawDistributionFloat Range; // 0x38
	char bStrengthByDistance : 1; // 0x70
	FRawDistributionFloat Strength; // 0x78
	char bAffectBaseVelocity : 1; // 0xb0
	EAttractorParticleSelectionMethod SelectionMethod; // 0xb4
	char bRenewSource : 1; // 0xb8
	char bInheritSourceVel : 1; // 0xb8
	int LastSelIndex; // 0xbc
};

struct UReplicationGraphNode_TearOff_ForConnection : UReplicationGraphNode {
	TArray<FTearOffActorInfo> TearOffActors; // 0x50
};

struct ABP_AK74M_4Mags_C : ABP_AK74M_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBTDecorator_CompareBBEntries : UBTDecorator {
	EBlackBoardEntryComparison Operator; // 0x68
	FBlackboardKeySelector BlackboardKeyA; // 0x70
	FBlackboardKeySelector BlackboardKeyB; // 0x98
};

struct ABP_AK74MGP25_Rifle_1P78_C : ABP_AK74MGP25_Rifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMovieSceneEventSection : UMovieSceneSection {
	FNameCurve Events; // 0xe0
	FMovieSceneEventSectionData EventData; // 0x158
};

struct UBP_Attachment_M4_FrontSight_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMaterialInstance : UMaterialInterface {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UMaterialInterface* Parent; // 0x90
	char bHasStaticPermutationResource : 1; // 0x9a
	char bOverrideSubsurfaceProfile : 1; // 0x9a
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xa0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xb0
	TArray<FTextureParameterValue> TextureParameterValues; // 0xc0
	TArray<FFontParameterValue> FontParameterValues; // 0xd0
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0xe0
	TArray<UObject*> PermutationTextureReferences; // 0xf8
	FStaticParameterSet StaticParameters; // 0x108
};

struct UCanvas : UObject {
	float OrgX; // 0x28
	float OrgY; // 0x2c
	float ClipX; // 0x30
	float ClipY; // 0x34
	FColor DrawColor; // 0x38
	char bCenterX : 1; // 0x3c
	char bCenterY : 1; // 0x3c
	char bNoSmooth : 1; // 0x3c
	int SizeX; // 0x40
	int SizeY; // 0x44
	FPlane ColorModulate; // 0x50
	UTexture2D* DefaultTexture; // 0x60
	UTexture2D* GradientTexture0; // 0x68
	UReporterGraph* ReporterGraph; // 0x70
};

struct UParticleModuleVelocity : UParticleModuleVelocityBase {
	FRawDistributionVector StartVelocity; // 0x38
	FRawDistributionFloat StartVelocityRadial; // 0x88
};

struct ABP_AK74GP25_UGL_HE_C : ABP_AK74GP25_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_L85A2_DarkEarth_C : ABP_GenericRifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ULightMapTexture2D : UTexture2D {
	int LevelIndex; // 0xd0
	int FirstResourceMemMip; // 0xd4
	char bTemporarilyDisableStreaming : 1; // 0xd8
	TextureAddress AddressX; // 0xd9
	TextureAddress AddressY; // 0xda
	FIntPoint ImportedSize; // 0xdc
};

struct UPostProcessComponent : USceneComponent {
	FPostProcessSettings Settings; // 0x220
	float Priority; // 0x750
	float BlendRadius; // 0x754
	float BlendWeight; // 0x758
	char bEnabled : 1; // 0x75c
	char bUnbound : 1; // 0x75c
};

struct APartyBeaconHost : AOnlineBeaconHostObject {
	UPartyBeaconState* State; // 0x270
	bool bLogoutOnSessionTimeout; // 0x2d8
	float SessionTimeoutSecs; // 0x2dc
	float TravelSessionTimeoutSecs; // 0x2e0
};

struct UAbilityTask_ApplyRootMotionMoveToForce : UAbilityTask_ApplyRootMotion_Base {
	FScriptMulticastDelegate OnTimedOut; // 0xb8
	FScriptMulticastDelegate OnTimedOutAndDestinationReached; // 0xc8
	FVector StartLocation; // 0xd8
	FVector TargetLocation; // 0xe4
	float Duration; // 0xf0
	bool bSetNewMovementMode; // 0xf4
	EMovementMode NewMovementMode; // 0xf5
	bool bRestrictSpeedToExpected; // 0xf6
	UCurveVector* PathOffsetCurve; // 0xf8
};

struct UEditableGameplayTagQueryExpression_AnyTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UInterpTrackColorScale : UInterpTrackVectorBase {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UBP_Attachment_M110_Front_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USQSquadStateDataCameraman : USQSquadStateDataPawn {
	bool bHiddenWhenUnpossessed; // 0x180
	bool bHiddenWhenNotLocallyControlled; // 0x181
	bool bHideWidgetWhenUnpossessed; // 0x182
	float CameraRotaionYawTolerance; // 0x184
	ASQPlayerState* OwnerPlayerState; // 0x188
	int CachedPlayerId; // 0x194
	int FireTeamIndex; // 0x198
	ASQPlayerState* CachedOwnerPlayerState; // 0x1a0
};

struct UARPlaneGeometry : UARTrackedGeometry {
	EARPlaneOrientation Orientation; // 0xe8
	FVector Center; // 0xec
	FVector Extent; // 0xf8
	UARPlaneGeometry* SubsumedBy; // 0x118
};

struct UParticleModuleSize : UParticleModuleSizeBase {
	FRawDistributionVector StartSize; // 0x30
};

struct USQCoreStateSelectionHUB : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UAISense_Team : UAISense {
	TArray<FAITeamStimulusEvent> RegisteredEvents; // 0x80
};

struct UMovieSceneByteSection : UMovieSceneSection {
	FMovieSceneByteChannel ByteCurve; // 0xe0
};

struct UAbilityTask_MoveToLocation : UAbilityTask {
	FScriptMulticastDelegate OnTargetLocationReached; // 0x80
	FVector StartLocation; // 0x94
	FVector TargetLocation; // 0xa0
	float DurationOfMovement; // 0xac
	UCurveFloat* LerpCurve; // 0xb8
	UCurveVector* LerpCurveVector; // 0xc0
};

struct UHorizontalBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	FSlateChildSize Size; // 0x48
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct ABP_AK74M_1P63_Tracer_C : ABP_AK74M_1P63_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UARCandidateImage : UDataAsset {
	UTexture2D* CandidateTexture; // 0x30
	FString FriendlyName; // 0x38
	float Width; // 0x48
	float Height; // 0x4c
	EARCandidateImageOrientation Orientation; // 0x50
};

struct UMaterialExpressionCameraPositionWS : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USQSoundNodePhysMatSwitch : USoundNode {
	int TestPhysMatIndex; // 0x40
	bool bPlayDefaultSoundIfPinIsEmpty; // 0x44
	TArray<UPhysicalMaterial*> PhysMatInputs; // 0x48
};

struct UCanvasRenderTarget2D : UTextureRenderTarget2D {
	FScriptMulticastDelegate OnCanvasRenderTargetUpdate; // 0x100
	TWeakObjectPtr<UWorld> World; // 0x110
	bool bShouldClearRenderTargetOnReceiveUpdate; // 0x118
};

struct UProxyLODMeshSimplificationSettings : UDeveloperSettings {
	FName ProxyLODMeshReductionModuleName; // 0x38
};

struct UBP_SQLayerTeamConfig_C : USQLayerTeamConfig {
	bool DisableVehicleDuringStaggingPhase; // 0x60
	TSet<SQEAlliance> Allowed Alliances; // 0x68
	TSet<ESQFactionSetupType> AllowedFactionSetupTypes; // 0xb8
	TSet<ESQFactionSetupTag> RequiredTags; // 0x108
	int Intelligence On Enemy; // 0x158
};

struct ABP_AKS74U_Founder_C : ABP_AKS74U_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USubmixEffectReverbPreset : USoundEffectSubmixPreset {
	FSubmixEffectReverbSettings Settings; // 0x9c
};

struct UARTexture : UTexture {
	EARTextureType TextureType; // 0xd0
	float Timestamp; // 0xd4
	FGuid ExternalTextureGuid; // 0xd8
	FVector2D Size; // 0xe8
};

struct UParticleModuleAttractorPointGravity : UParticleModuleAttractorBase {
	FVector Position; // 0x30
	float Radius; // 0x3c
	UDistributionFloat* Strength; // 0x40
	FRawDistributionFloat StrengthRaw; // 0x48
};

struct URadialIntMask : UFieldNodeInt {
	float Radius; // 0xd8
	FVector Position; // 0xdc
	int InteriorValue; // 0xe8
	int ExteriorValue; // 0xec
	ESetMaskConditionType SetMaskCondition; // 0xf0
};

struct UDirectionalLightComponent : ULightComponent {
	float ShadowCascadeBiasDistribution; // 0x358
	char bEnableLightShaftOcclusion : 1; // 0x35c
	float OcclusionMaskDarkness; // 0x360
	float OcclusionDepthRange; // 0x364
	FVector LightShaftOverrideDirection; // 0x368
	float WholeSceneDynamicShadowRadius; // 0x374
	float DynamicShadowDistanceMovableLight; // 0x378
	float DynamicShadowDistanceStationaryLight; // 0x37c
	int DynamicShadowCascades; // 0x380
	float CascadeDistributionExponent; // 0x384
	float CascadeTransitionFraction; // 0x388
	float ShadowDistanceFadeoutFraction; // 0x38c
	char bUseInsetShadowsForMovableObjects : 1; // 0x390
	int FarShadowCascadeCount; // 0x394
	float FarShadowDistance; // 0x398
	float DistanceFieldShadowDistance; // 0x39c
	float LightSourceAngle; // 0x3a0
	float LightSourceSoftAngle; // 0x3a4
	float TraceDistance; // 0x3a8
	FLightmassDirectionalLightSettings LightmassSettings; // 0x3ac
	char bCastModulatedShadows : 1; // 0x3bc
	FColor ModulatedShadowColor; // 0x3c0
	char bUsedAsAtmosphereSunLight : 1; // 0x3c4
};

struct USocialParty : UObject {
	APartyBeaconClient* ReservationBeaconClientClass; // 0x58
	ASpectatorBeaconClient* SpectatorBeaconClientClass; // 0x60
	FUniqueNetIdRepl OwningLocalUserId; // 0x78
	FUniqueNetIdRepl CurrentLeaderId; // 0xa0
	TMap<FUniqueNetIdRepl, UPartyMember*> PartyMembersById; // 0xc8
	bool bEnableAutomaticPartyRejoin; // 0x118
	APartyBeaconClient* ReservationBeaconClient; // 0x190
	ASpectatorBeaconClient* SpectatorBeaconClient; // 0x1a0
};

struct UMeshComponent : UPrimitiveComponent {
	TArray<UMaterialInterface*> OverrideMaterials; // 0x408
	bool bEnableMaterialParameterCaching; // 0x428
};

struct UButtonStyleAsset : UObject {
	FButtonStyle ButtonStyle; // 0x28
};

struct UMaterialExpressionAppendVector : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UParticleModuleSizeBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct USQCoreStateConnectionChildActorComponent : UChildActorComponent {
	float NetPriority; // 0x248
	float NetUpdateFrequency; // 0x24c
	float MinNetUpdateFrequency; // 0x250
};

struct UNavLinkTrivial : UNavLinkDefinition {
	TArray<FNavigationLink> Links; // 0x28
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x38
};

struct ABP_GenericMelee_C : ABP_Weapon2_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
};

struct UBP_M4M203_UGL_Parent_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UAnimationSharingSetup : UObject {
	TArray<FPerSkeletonAnimationSharingSetup> SkeletonSetups; // 0x28
	FAnimationSharingScalability ScalabilitySettings; // 0x38
};

struct UExpandableArea : UWidget {
	FExpandableAreaStyle Style; // 0x110
	FSlateBrush BorderBrush; // 0x230
	FSlateColor BorderColor; // 0x2b8
	bool bIsExpanded; // 0x2e0
	float MaxHeight; // 0x2e4
	FMargin HeaderPadding; // 0x2e8
	FMargin AreaPadding; // 0x2f8
	FScriptMulticastDelegate OnExpansionChanged; // 0x308
	UWidget* HeaderContent; // 0x318
	UWidget* BodyContent; // 0x320
};

struct UAnimComposite : UAnimCompositeBase {
	FAnimTrack AnimationTrack; // 0xa8
};

struct UParticleModuleLocationSkelVertSurface : UParticleModuleLocationBase {
	ELocationSkelVertSurfaceSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	char bUpdatePositionEachFrame : 1; // 0x40
	char bOrientMeshEmitters : 1; // 0x40
	char bInheritBoneVelocity : 1; // 0x40
	float InheritVelocityScale; // 0x44
	FName SkelMeshActorParamName; // 0x48
	TArray<FName> ValidAssociatedBones; // 0x50
	char bEnforceNormalCheck : 1; // 0x60
	FVector NormalToCompare; // 0x64
	float NormalCheckToleranceDegrees; // 0x70
	float NormalCheckTolerance; // 0x74
	TArray<int> ValidMaterialIndices; // 0x78
	char bInheritVertexColor : 1; // 0x88
	char bInheritUV : 1; // 0x88
	uint32 InheritUVChannel; // 0x8c
};

struct UBTDecorator_ConditionalLoop : UBTDecorator_Blackboard {
	int IntValue; // 0x90
	float FloatValue; // 0x94
	FString StringValue; // 0x98
	FString CachedDescription; // 0xa8
	char OperationType; // 0xb8
	EBTBlackboardRestart NotifyObserver; // 0xb9
};

struct ABP_RPG7_Frag_Proj2_C : ABP_RPG7_Heat_Proj2_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x520
	USkeletalMeshComponent* SkeletalMesh; // 0x528
	UParticleSystem* BPEffectOnUnderMinFlightTime; // 0x530
	USoundBase* BPSoundonUnderMinFlightTime; // 0x538
};

struct USQCountParameterBase : USQRestriction {
	ESQScalingCountingMode Operation; // 0x58
	bool UseForTeam; // 0x59
	bool UseForPlayer; // 0x5a
};

struct USQRestriction_Delay_Base : USQRestriction {
	FName ID; // 0x30
	FDataTableRowHandle Data; // 0x38
	FString ModId; // 0x48
};

struct URendererSettings : UDeveloperSettings {
	char bMobileHDR : 1; // 0x38
	char bMobileDisableVertexFog : 1; // 0x38
	int MaxMobileCascades; // 0x3c
	EMobileMSAASampleCount MobileMSAASampleCount; // 0x40
	char bMobileUseLegacyShadingModel : 1; // 0x44
	char bMobileUseHWsRGBEncoding : 1; // 0x44
	char bMobileAllowDitheredLODTransition : 1; // 0x44
	char bMobileAllowSoftwareOcclusionCulling : 1; // 0x44
	char bDiscardUnusedQualityLevels : 1; // 0x44
	char bOcclusionCulling : 1; // 0x44
	float MinScreenRadiusForLights; // 0x48
	float MinScreenRadiusForEarlyZPass; // 0x4c
	float MinScreenRadiusForCSMdepth; // 0x50
	char bPrecomputedVisibilityWarning : 1; // 0x54
	char bTextureStreaming : 1; // 0x54
	char bUseDXT5NormalMaps : 1; // 0x54
	char bVirtualTextures : 1; // 0x54
	char bVirtualTexturedLightmaps : 1; // 0x54
	uint32 VirtualTextureTileSize; // 0x58
	uint32 VirtualTextureTileBorderSize; // 0x5c
	uint32 VirtualTextureFeedbackFactor; // 0x60
	char bVirtualTextureEnableCompressZlib : 1; // 0x64
	char bVirtualTextureEnableCompressCrunch : 1; // 0x64
	char bClearCoatEnableSecondNormal : 1; // 0x64
	int ReflectionCaptureResolution; // 0x68
	char ReflectionEnvironmentLightmapMixBasedOnRoughness : 1; // 0x6c
	char bForwardShading : 1; // 0x6c
	char bVertexFoggingForOpaque : 1; // 0x6c
	char bAllowStaticLighting : 1; // 0x6c
	char bUseNormalMapsForStaticLighting : 1; // 0x6c
	char bGenerateMeshDistanceFields : 1; // 0x6c
	char bEightBitMeshDistanceFields : 1; // 0x6c
	char bGenerateLandscapeGIData : 1; // 0x6c
	char bCompressMeshDistanceFields : 1; // 0x6d
	float TessellationAdaptivePixelsPerTriangle; // 0x70
	char bSeparateTranslucency : 1; // 0x74
	ETranslucentSortPolicy TranslucentSortPolicy; // 0x78
	FVector TranslucentSortAxis; // 0x7c
	ECustomDepthStencil CustomDepthStencil; // 0x88
	char bCustomDepthTaaJitter : 1; // 0x8c
	EAlphaChannelMode bEnableAlphaChannelInPostProcessing; // 0x90
	char bDefaultFeatureBloom : 1; // 0x94
	char bDefaultFeatureAmbientOcclusion : 1; // 0x94
	char bDefaultFeatureAmbientOcclusionStaticFraction : 1; // 0x94
	char bDefaultFeatureAutoExposure : 1; // 0x94
	EAutoExposureMethodUI DefaultFeatureAutoExposure; // 0x98
	char bExtendDefaultLuminanceRangeInAutoExposureSettings : 1; // 0x9c
	char bUsePreExposure : 1; // 0x9c
	char bEnablePreExposureOnlyInTheEditor : 1; // 0x9c
	char bDefaultFeatureMotionBlur : 1; // 0x9c
	char bDefaultFeatureLensFlare : 1; // 0x9c
	char bTemporalUpsampling : 1; // 0x9c
	EAntiAliasingMethod DefaultFeatureAntiAliasing; // 0xa0
	ELightUnits DefaultLightUnits; // 0xa1
	EDefaultBackBufferPixelFormat DefaultBackBufferPixelFormat; // 0xa2
	char bRenderUnbuiltPreviewShadowsInGame : 1; // 0xa4
	char bStencilForLODDither : 1; // 0xa4
	EEarlyZPass EarlyZPass; // 0xa8
	char bEarlyZPassOnlyMaterialMasking : 1; // 0xac
	char bDBuffer : 1; // 0xac
	EClearSceneOptions ClearSceneMethod; // 0xb0
	char bBasePassOutputsVelocity : 1; // 0xb4
	char bSelectiveBasePassOutputs : 1; // 0xb4
	char bDefaultParticleCutouts : 1; // 0xb4
	int GPUSimulationTextureSizeX; // 0xb8
	int GPUSimulationTextureSizeY; // 0xbc
	char bGlobalClipPlane : 1; // 0xc0
	EGBufferFormat GBufferFormat; // 0xc4
	char bUseGPUMorphTargets : 1; // 0xc8
	char bNvidiaAftermathEnabled : 1; // 0xc8
	char bInstancedStereo : 1; // 0xc8
	char bMultiView : 1; // 0xc8
	char bMobileMultiView : 1; // 0xc8
	char bMobileMultiViewDirect : 1; // 0xc8
	char bRoundRobinOcclusion : 1; // 0xc8
	char bODSCapture : 1; // 0xc8
	float WireframeCullThreshold; // 0xcc
	char bEnableRayTracing : 1; // 0xd0
	char bSupportStationarySkylight : 1; // 0xd0
	char bSupportLowQualityLightmaps : 1; // 0xd0
	char bSupportPointLightWholeSceneShadows : 1; // 0xd0
	char bSupportAtmosphericFog : 1; // 0xd0
	char bSupportSkinCacheShaders : 1; // 0xd0
	char bMobileEnableStaticAndCSMShadowReceivers : 1; // 0xd0
	char bMobileEnableMovableLightCSMShaderCulling : 1; // 0xd0
	char bMobileAllowDistanceFieldShadows : 1; // 0xd1
	char bMobileAllowMovableDirectionalLights : 1; // 0xd1
	uint32 MobileNumDynamicPointLights; // 0xd4
	char bMobileDynamicPointLightsUseStaticBranch : 1; // 0xd8
	char bMobileAllowMovableSpotlights : 1; // 0xd8
	float SkinCacheSceneMemoryLimitInMB; // 0xdc
	char bGPUSkinLimit2BoneInfluences : 1; // 0xe0
	char bSupportDepthOnlyIndexBuffers : 1; // 0xe0
	char bSupportReversedIndexBuffers : 1; // 0xe0
	char bSupportMaterialLayers : 1; // 0xe0
};

struct USQTemperatureComponent : USceneComponent {
	ASQLastingEffect* TemperatureLastingEffect; // 0x218
	FScriptMulticastDelegate OnTemperatureIncrementEvent; // 0x220
	float IncrementalTriggerTemperature; // 0x230
	FVector2D TemperatureRange; // 0x234
	float TemperatureDrift; // 0x23c
	AController* LastTempChanger; // 0x240
	float CurrentTemperature; // 0x248
	float HigherTempTrigger; // 0x24c
	float LowerTempTrigger; // 0x250
};

struct AQosBeaconClient : AOnlineBeaconClient {
	AOnlineBeaconHostObject* BeaconOwner; // 0x278
	UNetConnection* BeaconConnection; // 0x280
	EBeaconConnectionState ConnectionState; // 0x288
};

struct USQSquadStateDataDeployable : USQSquadStateMapData {
	ESQBuildState BuildState; // 0x180
};

struct AReplicationGraphDebugActor : AActor {
	UReplicationGraph* ReplicationGraph; // 0x248
	UNetReplicationGraphConnection* ConnectionManager; // 0x250
};

struct UMRMeshComponent : UPrimitiveComponent {
	UMaterialInterface* Material; // 0x410
	bool bCreateMeshProxySections; // 0x418
	bool bUpdateNavMeshOnMeshUpdate; // 0x419
	bool bNeverCreateCollisionMesh; // 0x41a
	UBodySetup* CachedBodySetup; // 0x420
	TArray<UBodySetup*> BodySetups; // 0x428
	UMaterialInterface* WireframeMaterial; // 0x438
};

struct UMaterialExpressionMaterialFunctionCall : UMaterialExpression {
	UMaterialFunctionInterface* MaterialFunction; // 0x40
	FMaterialParameterInfo FunctionParameterInfo; // 0x48
};

struct USQBasicMoveComponent : USQNetMoveComponent {
	float MovementSpeed; // 0x250
};

struct UAbilityTask_WaitVelocityChange : UAbilityTask {
	FScriptMulticastDelegate OnVelocityChage; // 0x80
	UMovementComponent* CachedMovementComponent; // 0x90
};

struct UBP_RPG7Frag_StaticInfo_C : UBP_RPG7Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UDistributionVectorUniform : UDistributionVector {
	FVector Max; // 0x38
	FVector Min; // 0x44
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x55
	char bUseExtremes : 1; // 0x58
};

struct UWrapBox : UPanelWidget {
	FVector2D InnerSlotPadding; // 0x120
	float WrapWidth; // 0x128
	bool bExplicitWrapWidth; // 0x12c
};

struct USQItemStaticInfo : UObject {
	UAnimMontage* BaseWeaponMontage; // 0x28
	UAnimMontage* Base1pMontage; // 0x30
	UAnimMontage* Base3pMontage; // 0x38
	UAnimSequence* SprintToProne3p; // 0x40
	UAnimSequence* StandToProne3p; // 0x48
	UAnimSequence* ProneToStand3p; // 0x50
	UAnimSequence* CrouchToProne3p; // 0x58
	UAnimSequence* ProneToCrouch3p; // 0x60
	UBlendSpace1D* AO1D_StandPitch; // 0x68
	UBlendSpace1D* AO1D_CrouchPitch; // 0x70
	UBlendSpace1D* AO1D_PronePitch; // 0x78
	UBlendSpace* AO_BipodStandCrouchPitch; // 0x80
	UAnimSequence* AO1D_StandYawSF; // 0x88
	UAnimSequence* AO1D_CrouchYawSF; // 0x90
	UAnimSequence* AO1D_ProneYawSF; // 0x98
	UAnimSequence* StandTurnRight; // 0xa0
	UAnimSequence* StandTurnLeft; // 0xa8
	UAnimSequence* CrouchTurnRight; // 0xb0
	UAnimSequence* CrouchTurnLeft; // 0xb8
	UAnimSequence* ProneTurnRight; // 0xc0
	UAnimSequence* ProneTurnLeft; // 0xc8
	UAnimMontage* ReloadWeaponMontage; // 0xd0
	UAnimMontage* Reload1pMontage; // 0xd8
	UAnimMontage* Reload3pMontage; // 0xe0
	bool bCheckCurrentMagazineForEquip; // 0xe8
	bool bCheckCurrentMagazineForUnequip; // 0xe9
	UAnimMontage* EmptyEquipWeaponMontage; // 0xf0
	UAnimMontage* EmptyEquip1pMontage; // 0xf8
	UAnimMontage* EmptyEquip3pMontage; // 0x100
	UAnimMontage* EquipWeaponMontage; // 0x108
	UAnimMontage* Equip1pMontage; // 0x110
	UAnimMontage* Equip3pMontage; // 0x118
	UAnimMontage* EmptyUnequipWeaponMontage; // 0x120
	UAnimMontage* EmptyUnequip1pMontage; // 0x128
	UAnimMontage* EmptyUnequip3pMontage; // 0x130
	UAnimMontage* UnequipWeaponMontage; // 0x138
	UAnimMontage* Unequip1pMontage; // 0x140
	UAnimMontage* Unequip3pMontage; // 0x148
	UAnimMontage* BobbingSprint1pMontage; // 0x150
	UAnimMontage* BobbingEndSprint1pMontage; // 0x158
	UAnimMontage* BobbingAddSprint1pMontage; // 0x160
	UBlendSpace1D* BS1D_3pStandSprintType; // 0x168
	UBlendSpace1D* BS1D_3pCrouchSprintType; // 0x170
	UAnimSequence* SprintStop3p; // 0x178
	UBlendSpace* BS_3pStandJogType; // 0x180
	UBlendSpace* BS_3pStandWalkType; // 0x188
	UBlendSpace* BS_3pCrouchWalkType; // 0x190
	UBlendSpace1D* BS1D_3pProneCrawlType; // 0x198
	UAnimSequence* StandStopMove; // 0x1a0
	UAnimSequence* CrouchStopMove; // 0x1a8
	UAnimMontage* BobbingMove1pMontage; // 0x1b0
	UAnimMontage* Idle1pMontage; // 0x1b8
	UAnimMontage* LeanLeftBegin3pMontage; // 0x1c0
	UAnimMontage* LeanLeftEnd3pMontage; // 0x1c8
	UAnimMontage* LeanRightBegin3pMontage; // 0x1d0
	UAnimMontage* LeanRightEnd3pMontage; // 0x1d8
	UAnimSequence* StandLeanLeftShuffle; // 0x1e0
	UAnimSequence* StandLeanRightShuffle; // 0x1e8
	UAnimSequence* CrouchLeanLeftShuffle; // 0x1f0
	UAnimSequence* CrouchLeanRightShuffle; // 0x1f8
	UAnimMontage* Lowered1pMontage; // 0x200
	UAnimMontage* Lowered3pMontage; // 0x208
	UAnimMontage* LoweredCrouch3pMontage; // 0x210
	FSQMontageSectionNames MoveBobbingEndLoopSectionNames; // 0x218
	FSQMontageSectionNames SprintBobbingEndLoopSectionNames; // 0x240
	UBlendSpaceBase* BobbingProneMoveType; // 0x268
	UAnimSequence* ProneMoveTypeAdditiveReference; // 0x270
	UAnimSequence* OutProneMoveType; // 0x278
	UAnimSequence* OutProneMoveTypeNonadditive; // 0x280
	float LeftHandWeaponIkAlpha; // 0x288
	float RightHand3pWeaponIkAlpha; // 0x28c
	float JogPlayRateFactorMinRange; // 0x290
	float SprintPlayRateFactorMinRange; // 0x294
	float SprintBlendFactorMinRange; // 0x298
	float SprintBlendSpeedInterpSpeed; // 0x29c
	UAnimSequence* SprintStaticPose; // 0x2a0
	float LoweringBlendOutTime; // 0x2a8
	float IdleBlendOutTime; // 0x2ac
	TArray<FSQBoredMontageSet> BoredMontage; // 0x2b0
	float BoredMaxFrequency; // 0x2c0
	float BoredAbortBlendOutTime; // 0x2c4
	TArray<FSQMutualWeapon> MutualWeapons; // 0x2c8
	float EmptyUnequipDuration; // 0x2d8
	float EmptyEquipDuration; // 0x2dc
	bool bUseAutoLowering; // 0x2e0
	float LoweringTimer; // 0x2e4
	float ItemCollisionDistance; // 0x2e8
	bool bReturnToADSAfterItemCollision; // 0x2ec
	UCameraShake* FireShake; // 0x2f0
	FVector StandLoc; // 0x2f8
	FVector CrouchLoc; // 0x304
	FVector ProneLoc; // 0x310
	FVector BipodLoc; // 0x31c
	float StandLocBlendTime; // 0x328
	FRotator OffsetLineOfFire; // 0x32c
	FVector StandLeanLeftRootOffset; // 0x338
	FRotator StandLeanLeftWeaponRotation; // 0x344
	FRotator StandLeanLeftCameraRotation; // 0x350
	FVector StandLeanRightRootOffset; // 0x35c
	FRotator StandLeanRightWeaponRotation; // 0x368
	FRotator StandLeanRightCameraRotation; // 0x374
	FVector CrouchLeanLeftRootOffset; // 0x380
	FRotator CrouchLeanLeftWeaponRotation; // 0x38c
	FRotator CrouchLeanLeftCameraRotation; // 0x398
	FVector CrouchLeanRightRootOffset; // 0x3a4
	FRotator CrouchLeanRightWeaponRotation; // 0x3b0
	FRotator CrouchLeanRightCameraRotation; // 0x3bc
	FVector ProneLeanLeftRootOffset; // 0x3c8
	FRotator ProneLeanLeftWeaponRotation; // 0x3d4
	FRotator ProneLeanLeftCameraRotation; // 0x3e0
	FVector ProneLeanRightRootOffset; // 0x3ec
	FRotator ProneLeanRightWeaponRotation; // 0x3f8
	FRotator ProneLeanRightCameraRotation; // 0x404
	FVector FpvLowerRootBoneOffset; // 0x410
	FVector FpvTorsoCameraOffset; // 0x41c
	int WeaponSpringSide; // 0x428
	float WeaponSpringStiffness; // 0x42c
	float WeaponSpringCriticalDampingFactor; // 0x430
	float WeaponSpringMass; // 0x434
	float WeaponSpringFactor2; // 0x438
	float WeaponMeshSpringLocDelayFactor; // 0x43c
	float WeaponMeshSpringRotDelayFactor; // 0x440
	float WeaponSpringClamp; // 0x444
	float WeaponSpringTurnSpeedToFullIntensity; // 0x448
	FRotator StrafeSpringRotator; // 0x44c
	FVector StrafeSpringVector; // 0x458
	FRotator AdsStrafeSpringRotator; // 0x464
	FName SoundsSocket; // 0x470
	USoundCue* FireSound1P; // 0x478
	USoundCue* FireSound3P; // 0x480
	USoundCue* ReloadSound1P; // 0x488
	USoundCue* ReloadSound3P; // 0x490
	USoundCue* DryReloadSound1P; // 0x498
	USoundCue* DryReloadSound3P; // 0x4a0
	USoundCue* EquipSound1P; // 0x4a8
	USoundCue* EquipSound3P; // 0x4b0
	USoundCue* UnequipSound1P; // 0x4b8
	USoundCue* UnequipSound3P; // 0x4c0
	USoundBase* IntoForcedLoweringSound; // 0x4c8
	USoundBase* OutOfForcedLoweringSound; // 0x4d0
	bool bUsableInMainBase; // 0x4d8
	FText ItemUsageNullifiedText; // 0x4e0
};

struct USQSoundWaveLooping : USoundWave {
	int CompressionQuality; // 0x110
	int StreamingPriority; // 0x114
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x118
	ESoundGroup SoundGroup; // 0x11a
	char bLooping : 1; // 0x11b
	char bStreaming : 1; // 0x11b
	char bSeekableStreaming : 1; // 0x11b
	char bMature : 1; // 0x11c
	char bManualWordWrap : 1; // 0x11c
	char bSingleLine : 1; // 0x11c
	char bIsAmbisonics : 1; // 0x11c
	TArray<float> FrequenciesToAnalyze; // 0x120
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x130
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x140
	FString SpokenText; // 0x160
	float SubtitlePriority; // 0x170
	float Volume; // 0x174
	float Pitch; // 0x178
	int NumChannels; // 0x17c
	int SampleRate; // 0x180
	TArray<FSubtitleCue> Subtitles; // 0x188
	UCurveTable* Curves; // 0x198
	UCurveTable* InternalCurves; // 0x1a0
};

struct UInterpGroupCamera : UInterpGroup {
	UCameraAnim* CameraAnimInst; // 0x50
	float CompressTolerance; // 0x58
};

struct UInterpTrackFade : UInterpTrackFloatBase {
	char bPersistFade : 1; // 0x90
	char bFadeAudio : 1; // 0x90
	FLinearColor FadeColor; // 0x94
};

struct UQosRegionManager : UObject {
	int NumTestsPerRegion; // 0x28
	float PingTimeout; // 0x2c
	TArray<FQosRegionInfo> RegionDefinitions; // 0x30
	TArray<FQosDatacenterInfo> DatacenterDefinitions; // 0x40
	FDateTime LastCheckTimestamp; // 0x50
	UQosEvaluator* Evaluator; // 0x58
	EQosCompletionResult QosEvalResult; // 0x60
	TArray<FRegionQosInstance> RegionOptions; // 0x68
	FString ForceRegionId; // 0x78
	bool bRegionForcedViaCommandline; // 0x88
	FString SelectedRegionId; // 0x90
};

struct UMultiPackerSettings : UDeveloperSettings {
	EChannelTextureSave ChannelMethod; // 0x38
	bool SaveMaterialCollection; // 0x39
	bool SaveDatabase; // 0x3a
	FDirectoryPath TargetDirectory; // 0x40
	FString TextureChannelName; // 0x50
	FString DatabasePrefix; // 0x60
	FString TexturePrefix; // 0x70
	FString MaterialcollectionPrefix; // 0x80
};

struct UBlendSpace : UBlendSpaceBase {
	EBlendSpaceAxis AxisToScaleAnimation; // 0x148
};

struct UMaterialExpressionBlendMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput A; // 0x40
	FMaterialAttributesInput B; // 0x58
	FExpressionInput Alpha; // 0x70
	EMaterialAttributeBlend PixelAttributeBlendType; // 0x84
	EMaterialAttributeBlend VertexAttributeBlendType; // 0x85
};

struct UThrobber : UWidget {
	int NumberOfPieces; // 0x108
	bool bAnimateHorizontally; // 0x10c
	bool bAnimateVertically; // 0x10d
	bool bAnimateOpacity; // 0x10e
	USlateBrushAsset* PieceImage; // 0x110
	FSlateBrush Image; // 0x118
};

struct UMaterialExpressionIf : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput AGreaterThanB; // 0x68
	FExpressionInput AEqualsB; // 0x7c
	FExpressionInput ALessThanB; // 0x90
	float EqualsThreshold; // 0xa4
	float ConstB; // 0xa8
	float ConstAEqualsB; // 0xac
};

struct USQRadialCenterRoleButton : USQRadialIconButton {
	bool bIsUnavailable; // 0x410
	float Cost; // 0x414
	UTextBlock* CostBlock; // 0x418
	USQRoleSettings* ReferenceRole; // 0x420
	TScriptInterface<Class> RearmSource; // 0x428
	ASQPlayerController* OwnerPlayerController; // 0x438
};

struct UDatasmithStaticMeshGLTFImportData : UDatasmithStaticMeshImportData {
	FString SourceMeshName; // 0x28
};

struct ABP_AK74MGP25_1P63_UGL_Desert_Smoke_Blue_C : ABP_AK74MGP25_1P63_UGL_Desert_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQForwardBaseSettings : USQSettings {
	int NumberOfTeammatesNeededToDeploy; // 0x58
	int NumberOfLogisNeededToDeploy; // 0x5c
	float ExclusionRadius; // 0x60
	int SiegedMinNearbyEnemies; // 0x64
	int TicketsLostWhenOverrun; // 0x68
	float NearbyEnemiesRadius; // 0x6c
	bool HasSpawning; // 0x70
	float TimeToEnableSpawning; // 0x74
	float SpawnPointRadius; // 0x78
	FVector SpawnOffset; // 0x7c
	float HealthPercentToDisableSpawns; // 0x88
	bool UseCapture; // 0x8c
	float CaptureTickDuration; // 0x90
	float MaxCapturePctPerSecond; // 0x94
	float CapturePctPerSecondPerPlayer; // 0x98
	bool UseResourceGeneration; // 0x9c
	float ResourceGenerationTickDuration; // 0xa0
	float InitialConstructionPoints; // 0xa4
	float MaxConstructionPoints; // 0xa8
	float CPPerSecond; // 0xac
	float InitialAmmo; // 0xb0
	float MaxAmmo; // 0xb4
	float AmmoPerSecond; // 0xb8
};

struct UNamedInterfaces : UObject {
	TArray<FNamedInterface> NamedInterfaces; // 0x28
	TArray<FNamedInterfaceDef> NamedInterfaceDefs; // 0x38
};

struct UBP_SquadGameInstance_C : USQGameInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x658
	USaveDataUIWrapper_C* UISaveDataWrapper; // 0x660
	FScriptMulticastDelegate UI Data Changed; // 0x668
};

struct USafeZone : UContentWidget {
	bool PadLeft; // 0x120
	bool PadRight; // 0x121
	bool PadTop; // 0x122
	bool PadBottom; // 0x123
};

struct UNavLinkCustomComponent : UNavRelevantComponent {
	uint32 NavLinkUserId; // 0x110
	UNavArea* EnabledAreaClass; // 0x118
	UNavArea* DisabledAreaClass; // 0x120
	FNavAgentSelector SupportedAgents; // 0x128
	FVector LinkRelativeStart; // 0x12c
	FVector LinkRelativeEnd; // 0x138
	ENavLinkDirection LinkDirection; // 0x144
	char bLinkEnabled : 1; // 0x148
	char bNotifyWhenEnabled : 1; // 0x148
	char bNotifyWhenDisabled : 1; // 0x148
	char bCreateBoxObstacle : 1; // 0x148
	FVector ObstacleOffset; // 0x14c
	FVector ObstacleExtent; // 0x158
	UNavArea* ObstacleAreaClass; // 0x168
	float BroadcastRadius; // 0x170
	float BroadcastInterval; // 0x174
	ECollisionChannel BroadcastChannel; // 0x178
};

struct UBP_Attachment_M68_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UParticleModuleRotationRate_Seeded : UParticleModuleRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x68
};

struct UDatasmithCineCameraActorTemplate : UDatasmithObjectTemplate {
	FDatasmithCameraLookatTrackingSettingsTemplate LookatTrackingSettings; // 0x30
};

struct AOnlineBeaconHost : AOnlineBeacon {
	int ListenPort; // 0x278
	TArray<AOnlineBeaconClient*> ClientActors; // 0x280
};

struct UBP_AK74MGP25_UGL_Optic_Parent_StaticInfo_C : UBP_AK74GP25_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USQMapMarkerDataAsset : UPrimaryDataAsset {
	FSQMapMarkerVisualData MarkerVisualData; // 0x30
	bool bIsGlobalMarker; // 0xf8
};

struct UAbilityTask_WaitTargetData : UAbilityTask {
	FScriptMulticastDelegate ValidData; // 0x80
	FScriptMulticastDelegate Cancelled; // 0x90
	AGameplayAbilityTargetActor* TargetClass; // 0xa0
	AGameplayAbilityTargetActor* TargetActor; // 0xa8
};

struct UMovieSceneColorSection : UMovieSceneSection {
	FMovieSceneFloatChannel RedCurve; // 0xe0
	FMovieSceneFloatChannel GreenCurve; // 0x180
	FMovieSceneFloatChannel BlueCurve; // 0x220
	FMovieSceneFloatChannel AlphaCurve; // 0x2c0
};

struct ABP_L85A2AG36_UGL_HE_C : ABP_L85A2AG36_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBP_M9a1Beretta_StaticInfo_C : UBP_Glock17_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UForceFeedbackAttenuation : UObject {
	FForceFeedbackAttenuationSettings Attenuation; // 0x28
};

struct UViewsterRequestIssuesAction : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct UParticleModuleRotation_Seeded : UParticleModuleRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x68
};

struct UMaterialExpressionObjectOrientation : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct ABP_M4A1_Foregrip_Founder_C : ABP_M4A1_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQMapWidgetMapMarkerSelectable : USQMapWidgetMapMarker {
	USQMapIconComponent* MapIcon; // 0x2c8
};

struct UScrollBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UAISense_Touch : UAISense {
	TArray<FAITouchEvent> RegisteredEvents; // 0x80
};

struct UParticleModuleMeshRotation_Seeded : UParticleModuleMeshRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x88
};

struct USSGS_ColorEffectSpecificationGradient : USSGS_ColorEffectSpecification {
	FSSGS_ColorGradient Gradient; // 0x30
};

struct UMaterialExpressionPixelDepth : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USQRestriction_DeployableInRange : USQRestriction_Boolean {
	float Range; // 0x58
	TSet<ESQTeamRelationShip> TargetTeams; // 0x60
	int TargetCount; // 0xb0
	TArray<ESQBuildState> TargetBuildState; // 0xb8
};

struct ABP_M4M203_M68_UGL_Woodland_Smoke_Blue_C : ABP_M4M203_M68_UGL_Woodland_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBTTask_PawnActionBase : UBTTaskNode {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct ABP_M4A1_M68_Woodland_C : ABP_M4A1_M68_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMovieSceneSubTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct ABP_40MM_VOG_Smoke_Red_Proj2_C : ABP_40MM_VOG_Smoke_Proj2_C {
	UParticleSystemComponent* Effect; // 0x548
	UParticleSystem* SmokeEffect; // 0x550
	USoundCue* SmokeSound; // 0x558
};

struct UAudioCurveSourceComponent : UAudioComponent {
	FName CurveSourceBindingName; // 0x738
	float CurveSyncOffset; // 0x740
};

struct UPlayerInput : UObject {
	TArray<FKeyBind> DebugExecBindings; // 0x120
	TArray<FName> InvertedAxis; // 0x160
};

struct UAnimBlueprint : UBlueprint {
	USkeleton* TargetSkeleton; // 0xe0
	TArray<FAnimGroupInfo> Groups; // 0xe8
	bool bUseMultiThreadedAnimationUpdate; // 0xf8
	bool bWarnAboutBlueprintUsage; // 0xf9
};

struct ASQCommanderState : AInfo {
	bool bVoteInProgress; // 0x248
	int CommanderVoteTimestamp; // 0x24c
	int CommanderVoteTimer; // 0x250
	bool bVoteCooldownActive; // 0x254
	int VoteCooldownTimer; // 0x258
	int VoteCooldownTimeSeconds; // 0x25c
	int VoteCooldownTimestamp; // 0x260
	bool bCommanderIsActive; // 0x264
	bool bCommandActionAttempted; // 0x265
	bool bDoubleCaptureSpeed; // 0x266
	TArray<FCommanderCategory> CommanderCategories; // 0x278
	int MinimumSquadSizeForVoting; // 0x288
	int MinimumSquadsRequiredForVoting; // 0x28c
	int VotingTimeSeconds; // 0x290
	FSQCommanderActionDataArray CommandIntervals; // 0x298
	TArray<float> LastCategoryGameTime; // 0x3b0
	UDataTable* TeamCommands; // 0x3c0
	FCommanderNomineeArray NomineeStatus; // 0x3c8
	FScriptMulticastDelegate OnCommanderChangedEvent; // 0x4e8
	FScriptMulticastDelegate OnNominationAvailableEvent; // 0x4f8
	FScriptMulticastDelegate OnNominationEndedEvent; // 0x508
	FScriptMulticastDelegate OnNominationStartedEvent; // 0x518
	ASQPlayerState* CurrentCommander; // 0x528
	bool bActionsEnabled; // 0x530
};

struct ARuntimeVirtualTextureVolume : AActor {
	URuntimeVirtualTextureComponent* VirtualTextureComponent; // 0x248
};

struct APrecomputedVisibilityOverrideVolume : AVolume {
	TArray<AActor*> OverrideVisibleActors; // 0x280
	TArray<AActor*> OverrideInvisibleActors; // 0x290
	TArray<FName> OverrideInvisibleLevels; // 0x2a0
};

struct ASQObjective_Destroyable : ASQObjective {
	FText WorldText; // 0x348
	FLinearColor WorldTextColor; // 0x360
	FSQUsableData UsableData; // 0x370
	bool bHasBeenDestroyed; // 0x3b0
	float Health; // 0x3b4
	TArray<USQDamageType*> AllowableDamageTypes; // 0x3b8
	UParticleSystem* DestroyedParticleEffect; // 0x3c8
	USQShockwave* DestroyedShockwaveEffect; // 0x3d0
	USoundCue* DestroyedSound; // 0x3d8
	USoundCue* DestroyedDebrisSound; // 0x3e0
	FSQDamageTypeEffects DamageEffects; // 0x3e8
	ASQGameSpawn* SpawnClass; // 0x410
	ASQGameSpawn* SpawnPoint; // 0x418
	float SpawnLocationZOffset; // 0x420
	USQPhysicalMaterialEffects* DefaultEffectsClass; // 0x428
};

struct UNetConnection : UPlayer {
	TArray<UChildConnection*> Children; // 0x48
	UNetDriver* Driver; // 0x58
	UPackageMap* PackageMapClass; // 0x60
	UPackageMap* PackageMap; // 0x68
	TArray<UChannel*> OpenChannels; // 0x70
	TArray<AActor*> SentTemporaries; // 0x80
	AActor* ViewTarget; // 0x90
	AActor* OwningActor; // 0x98
	int MaxPacket; // 0xa0
	char InternalAck : 1; // 0xa4
	FUniqueNetIdRepl PlayerId; // 0x160
	double LastReceiveTime; // 0x1f0
	TArray<UChannel*> ChannelsToTick; // 0x14b8
};

struct AVolumetricLightmapDensityVolume : AVolume {
	FInt32Interval AllowedMipLevelRange; // 0x280
};

struct UBP_Attachment_M110_Front_Black_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UShapeComponent : UPrimitiveComponent {
	UBodySetup* ShapeBodySetup; // 0x408
	FColor ShapeColor; // 0x410
	char bDrawOnlyIfSelected : 1; // 0x414
	char bShouldCollideWhenPlacing : 1; // 0x414
	char bDynamicObstacle : 1; // 0x414
	UNavAreaBase* AreaClass; // 0x418
};

struct UCameraAnim : UObject {
	UInterpGroup* CameraInterpGroup; // 0x28
	float AnimLength; // 0x30
	FBox BoundingBox; // 0x34
	char bRelativeToInitialTransform : 1; // 0x50
	char bRelativeToInitialFOV : 1; // 0x50
	float BaseFOV; // 0x54
	FPostProcessSettings BasePostProcessSettings; // 0x60
	float BasePostProcessBlendWeight; // 0x590
};

struct UDatasmithSkyLightComponentTemplate : UDatasmithObjectTemplate {
	ESkyLightSourceType SourceType; // 0x30
	int CubemapResolution; // 0x34
	UTextureCube* Cubemap; // 0x38
};

struct UGeometryCacheComponent : UMeshComponent {
	UGeometryCache* GeometryCache; // 0x430
	bool bRunning; // 0x438
	bool bLooping; // 0x439
	float StartTimeOffset; // 0x43c
	float PlaybackSpeed; // 0x440
	int NumTracks; // 0x444
	float ElapsedTime; // 0x448
	float Duration; // 0x47c
	bool bManualTick; // 0x480
};

struct UCompositionGraphCaptureProtocol : UMovieSceneImageCaptureProtocolBase {
	FCompositionGraphCapturePasses IncludeRenderPasses; // 0x58
	bool bCaptureFramesInHDR; // 0x68
	int HDRCompressionQuality; // 0x6c
	EHDRCaptureGamut CaptureGamut; // 0x70
	FSoftObjectPath PostProcessingMaterial; // 0x78
	bool bDisableScreenPercentage; // 0x90
	UMaterialInterface* PostProcessingMaterialPtr; // 0x98
};

struct UMaterialExpressionParticleDirection : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMovieSceneImageCaptureProtocolBase : UMovieSceneCaptureProtocolBase {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UMorphTarget : UObject {
	USkeletalMesh* BaseSkelMesh; // 0x28
};

struct ASQDeployableAmmoBag : ASQDeployableItem {
	FScriptMulticastDelegate AmmoBagAmmoUpdatedEvent; // 0x438
	FScriptMulticastDelegate RearmSourceAmmoUpdatedEvent; // 0x448
	float AmmoCount; // 0x458
	float OutOfAmmoLifetime; // 0x45c
};

struct UBP_AK74_Optic_1p29_StaticInfo_C : UBP_AK74_Optic_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct ASQSoldier : ACharacter {
	FSQUsableData UsableData; // 0x670
	USkeletalMeshComponent* Mesh1P; // 0x6b0
	USkeletalMeshComponent* Mesh1PShadow; // 0x6b8
	char bEnableTickUpdateShiftMesh : 1; // 0x6c0
	FVector ShiftMeshOffset; // 0x6c4
	float Prone2SprintMovementRecovery; // 0x6d0
	float Prone2SprintAlpha; // 0x6d4
	USQConsoleVariablesComponent* ConsoleVariablesComponent; // 0x6d8
	TArray<USkeletalMesh*> SoldierMeshSkins; // 0x6e0
	UMaterialInterface* BasePatchMaterial; // 0x6f0
	UCameraComponent* FirstPersonCameraComponent; // 0x6f8
	float WeaponBasedFOV; // 0x700
	USQSoldierMovement* SoldierMovement; // 0x708
	USphereComponent* SnapZone; // 0x710
	FPostProcessSettings LowHealthPostProcessSettings; // 0x720
	FPostProcessSettings BleedingPostProcessSettings; // 0xc50
	FPostProcessSettings SuppressionPostProcessSettings; // 0x1180
	char bAllowEffectsForProjectilesFiredWithinSuppressionRange : 1; // 0x16b0
	float UnderSuppressionPercentage; // 0x16b4
	float SuppressionEffectsDecayRate; // 0x16b8
	float BaseTurnRate; // 0x16bc
	float BaseLookUpRate; // 0x16c0
	float NoADSToSprintDot; // 0x16c4
	float ADSToSprintDot; // 0x16c8
	char bIsDoubleTapWalking : 1; // 0x16cc
	FVector GunOffset; // 0x16d0
	float ProneEyeHeight; // 0x16dc
	char bIsProne : 1; // 0x16e0
	char bInThirdPersonView : 1; // 0x16f0
	char bCachedInThirdPerson : 1; // 0x16f0
	FName AttachSocket1PName; // 0x16f4
	FName AttachSocket3PName; // 0x16fc
	USQCoreStateComponent* StateObject; // 0x1708
	USQMapIconComponent* MapIcon; // 0x1710
	float SecondsUntilIgnoreDistanceForAliveTeamMates; // 0x1718
	float SecondsOfSpawnProtection; // 0x171c
	float InvulnerableDelay; // 0x1720
	float RagdollLifeSpan; // 0x1724
	float UnpossessionDelayAfterDeath; // 0x1728
	TArray<FSQBoneDamageMod> BoneDamageModifiers; // 0x1730
	char LeaningDirection; // 0x1770
	float BlockLeanTraceDistance; // 0x1774
	float PitchAngleAdjust; // 0x1778
	float BlockLeanTraceRotation; // 0x177c
	float ProneBlockLeanTraceDistance; // 0x1780
	float PronePitchAngleAdjust; // 0x1784
	float ProneBlockLeanTraceRotation; // 0x1788
	float UseInteractDistance; // 0x178c
	AActor* UseFocus; // 0x1790
	float SnapZoneRadius; // 0x179c
	float MinDistanceToSuppressedTarget; // 0x17a0
	float FullSuppressionRadius; // 0x17a4
	float SuppressionRadius; // 0x17a8
	USQVehicleSeatComponent* CurrentSeat; // 0x17b0
	char bTestingMove : 1; // 0x17b8
	float CachedMoveRotation; // 0x17bc
	FVector CachedMoveRotationPoint; // 0x17c0
	FVector CachedForwardVector; // 0x17cc
	FScriptMulticastDelegate OnChangedSeat; // 0x17d8
	char bStopADSWhenSprintPressed : 1; // 0x17e8
	char bStopADSWhenPronePressed : 1; // 0x17e8
	char bStopADSWhenUnpronePressed : 1; // 0x17e8
	char bStopSprintWhenADSPressed : 1; // 0x17e8
	char bStopUsingPrimaryItemWhenPronePressed : 1; // 0x17e8
	char bStopUsingAltItemWhenPronePressed : 1; // 0x17e8
	char bStopUsingPrimaryItemWhenUnpronePressed : 1; // 0x17e8
	char bStopUsingAltItemWhenUnpronePressed : 1; // 0x17e8
	char bItemLoweredDueToCollision : 1; // 0x17e9
	char bCachedADSDuringItemCollision : 1; // 0x17e9
	AActor* UsingObject; // 0x17f0
	int VehicleSeatEntryWeaponSlot; // 0x17f8
	int VehicleSeatEntryWeaponOffset; // 0x17fc
	FSQTakeHitInfo LastTakeHitInfo; // 0x1ad8
	char SoldierSkinIndex; // 0x1c10
	char bIsDying : 1; // 0x1c14
	char bIsBleeding : 1; // 0x1c14
	char bIsWounded : 1; // 0x1c14
	char bAllowWoundedState : 1; // 0x1c14
	float Health; // 0x1c18
	float LastHealedTime; // 0x1c1c
	float WoundedThreshold; // 0x1c20
	float HealthBleedableThreshold; // 0x1c24
	float HealthHurtMovementThreshold; // 0x1c28
	float DamageBleedableThreshold; // 0x1c2c
	float WoundedHealthLossRate; // 0x1c30
	float WoundedBandagedHealthLossRate; // 0x1c34
	float BleedingHealthLossRate; // 0x1c38
	float KillDamageThreshold; // 0x1c3c
	float HealthUponRevival; // 0x1c40
	float TimeBecameWounded; // 0x1c44
	float TimeBecameRevived; // 0x1c48
	float PostRecoveryUpdateRate; // 0x1c4c
	FTimerHandle PostRecoveryTimerHandle; // 0x1c50
	float PostRecoveryTimeLeft; // 0x1c58
	UCurveFloat* PostRecoveryRateByHealthCurve; // 0x1c60
	float CumulativeRevivePenalty; // 0x1c68
	char bIsHoldingBreath : 1; // 0x1c6c
	float BreathHoldStamina; // 0x1c70
	float BreathHoldStaminaMax; // 0x1c74
	float BreathHoldRecoveryDuration; // 0x1c78
	float BreathHoldConsumptionDuration; // 0x1c7c
	float BreathHoldFadeDuration; // 0x1c80
	float BreathHoldPct; // 0x1c84
	float FocusZoomAlpha; // 0x1c88
	UCurveFloat* FallSpeedToFallDamageCurve; // 0x1c90
	float FallingDamageMultiplier; // 0x1c98
	float MaximumSafeFallingSpeed; // 0x1c9c
	float BonkOnHeadFallDamageMultiplier; // 0x1ca0
	FScriptMulticastDelegate OnRevivedEvent; // 0x1ca8
	char bIsLeavingServer : 1; // 0x1cb8
	USoundMix* WoundedSoundMix; // 0x1cc0
	USoundMix* BleedingSoundMix; // 0x1cc8
	ESQListenerType ListenerType; // 0x1cd0
	UCurveLinearColor* HealthBasedFilterGainCurve; // 0x1cd8
	char bUseHealthBasedFilterGainCurveForWoundedSoundMix : 1; // 0x1ce0
	char bUseHealthBasedFilterGainCurveForBleedingSoundMix : 1; // 0x1ce0
	UCurveFloat* HeartbeatVolumeCurve; // 0x1ce8
	USoundBase* HeartbeatSound; // 0x1cf0
	USoundBase* HeartbeatIncapSound; // 0x1cf8
	USoundBase* DefaultLandedSound; // 0x1d00
	USoundBase* HitSound; // 0x1d08
	USoundBase* FirstPersonHitSound; // 0x1d10
	USoundBase* IncapSound; // 0x1d18
	TArray<FSQBoneHitSound> BoneHitSounds; // 0x1d20
	float IncapSoundOccurrencePercentage; // 0x1d30
	float WoundedSoundMixDelaySeconds; // 0x1d34
	char bPlayIncapSound : 1; // 0x1d38
	USoundBase* DeathSound; // 0x1d40
	USoundBase* ClothingSound; // 0x1d48
	USoundBase* EquipmentSound; // 0x1d50
	USoundBase* ResupplyCrateSound; // 0x1d58
	float DeathSoundOccurrencePercentage; // 0x1d60
	char bPlayDeathSound : 1; // 0x1d64
	UAudioComponent* FoleyAC; // 0x1d68
	UAudioComponent* HeartbeatAC; // 0x1d70
	UAudioComponent* HeartbeatIncapAC; // 0x1d78
	USQPhysicalMaterialSoldiersEffects* PhysMatEffectsClass; // 0x1d80
	char bPerfToggleMultiCastLean : 1; // 0x1d88
	FTimerHandle DelayedUnposessTimer; // 0x1d90
	UPhysicsHandleComponent* DraggingHandle; // 0x1d98
	FSQDraggingData DraggingData; // 0x1da0
	float DraggingDistanceMultiplier; // 0x1db8
	FTimerHandle StartDraggingTimerHandle; // 0x1dc0
	float StartDraggingDelay; // 0x1dc8
	TArray<FName> DraggableBones; // 0x1dd0
	USQSoldierRagdollComponent* RagdollComponent; // 0x1de0
	USQBuffManager* Buffs; // 0x1de8
	FScriptMulticastDelegate OnWoundEvent; // 0x1df0
	FScriptMulticastDelegate OnDeathEvent; // 0x1e08
	char bIsDragging : 1; // 0x1e18
	char bBodyDraggingActive : 1; // 0x1e18
	USQSoldierStaticInfo* SoldierStaticInfo; // 0x1e20
	USQPawnInventoryComponent* InventoryComponent; // 0x1e38
	USoundMix* CurrentSoundMix; // 0x1e48
};

struct ABP_Shockwave_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	USceneComponent* ShockwaveRoot; // 0x250
	UParticleSystem* Emitter Being Played; // 0x258
	int VerticalSteps; // 0x260
	int HorizontalSteps; // 0x264
	USQPhysicalMaterialEffects* EffectsClass; // 0x268
};

struct USQCoreStateSquadListWidget : USQCoreStateWidget {
	EListLayout ListLayout; // 0x258
};

struct USQClientsideWeaponSettings : UDeveloperSettings {
	float MaxVerificationAngle; // 0x38
	float ShotTimeout; // 0x3c
	float SlowProjectileTimeout; // 0x40
	bool bNotifyPlayerOnShotFail; // 0x44
	bool bNotifyAdminOnShotFail; // 0x45
	bool bNotifyPlayerOnHitFail; // 0x46
	bool bNotifyAdminOnHitFail; // 0x47
	TArray<ESQHitDetectionFailReason> NotifyOnlyOnTheseFailureReasons; // 0x48
	int ConsecutiveFailedShotKickAmount; // 0x58
	int ConsecutiveFailedHitKickAmount; // 0x5c
};

struct AParticleEventManager : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UDynamicEntryBox : UDynamicEntryBoxBase {
	UUserWidget* EntryWidgetClass; // 0x1c8
};

struct UMaterialExpressionFeatureLevelSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x4]; // 0x54
};

struct USpectatorPawnMovement : UFloatingPawnMovement {
	char bIgnoreTimeDilation : 1; // 0x178
};

struct UGeometryCacheCodecBase : UObject {
	TArray<int> TopologyRanges; // 0x28
};

struct USQSquadStateDataSquadState : USQSquadStateData {
	FString SquadName; // 0x118
	FString LeaderName; // 0x128
	char MemberNum; // 0x138
	char bIsLocked : 1; // 0x13c
	char bIsCommandSquad : 1; // 0x13c
};

struct ABP_RPG7V2_Thermo_C : ABP_RPG7V2_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UMaterialExpressionVectorNoise : UMaterialExpression {
	FExpressionInput Position; // 0x40
	EVectorNoiseFunction NoiseFunction; // 0x54
	int Quality; // 0x58
	char bTiling : 1; // 0x5c
	uint32 TileSize; // 0x60
};

struct USynthComponent : USceneComponent {
	char bAutoDestroy : 1; // 0x218
	char bStopWhenOwnerDestroyed : 1; // 0x218
	char bAllowSpatialization : 1; // 0x218
	char bOverrideAttenuation : 1; // 0x218
	char bOutputToBusOnly : 1; // 0x21c
	USoundAttenuation* AttenuationSettings; // 0x220
	FSoundAttenuationSettings AttenuationOverrides; // 0x228
	USoundConcurrency* ConcurrencySettings; // 0x510
	TSet<USoundConcurrency*> ConcurrencySet; // 0x518
	USoundClass* SoundClass; // 0x568
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x570
	USoundSubmix* SoundSubmix; // 0x578
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x580
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x590
	FSoundModulation Modulation; // 0x5a0
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x5b0
	char bIsUISound : 1; // 0x5c0
	char bIsPreviewSound : 1; // 0x5c0
	int EnvelopeFollowerAttackTime; // 0x5c4
	int EnvelopeFollowerReleaseTime; // 0x5c8
	FScriptMulticastDelegate OnAudioEnvelopeValue; // 0x5d0
	USynthSound* Synth; // 0x600
	UAudioComponent* AudioComponent; // 0x608
};

struct ULandscapeInfo : UObject {
	ALandscape* LandscapeActor; // 0x28
	FGuid LandscapeGuid; // 0x44
	int ComponentSizeQuads; // 0x54
	int SubsectionSizeQuads; // 0x58
	int ComponentNumSubsections; // 0x5c
	FVector DrawScale; // 0x60
	TSet<ALandscapeStreamingProxy*> Proxies; // 0xc0
};

struct UEnvQueryNode : UObject {
	int VerNum; // 0x28
};

struct UL85A2AG36_UGL_Skeleton_AnimBlueprint_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_607360774A7E077065C59E8E533AAC93; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2E4B03A74A5F91C1A6F7DFADE7FC29F5; // 0x2e8
	FAnimNode_Slot AnimGraphNode_Slot_0EFF9C2C463A96AFC210F8A9EB4D77A0; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_2D6527F049D5A071A255BC95F0471321; // 0x3f0
	FAnimNode_Slot AnimGraphNode_Slot_43149CEF44CCA55C4408B9ACA9362626; // 0x438
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_268FDE4848BCFC9BA5C81EB799718BB6; // 0x480
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_58C50C5C4AC58CE1D2DCC9B288D9DB92; // 0x4f8
};

struct USQRoleList : USQUserWidget {
	bool bCanRunTick; // 0x230
	TArray<USQRoleListGroup*> RoleGroupWidgets; // 0x238
	TArray<USQRoleListUnit*> RoleUnitWidgets; // 0x248
	int GridColumns; // 0x258
	ASQPlayerState* OwnerPlayerState; // 0x260
	ASQPlayerController* OwnerController; // 0x268
	TSet<FString> CachedRoles; // 0x270
	USQRoleListUnit* RoleWidgetType; // 0x2c0
};

struct UFoliageType_Actor : UFoliageType {
	AActor* ActorClass; // 0x340
};

struct UMaterialExpressionStaticComponentMaskParameter : UMaterialExpressionParameter {
	FExpressionInput Input; // 0x58
	char DefaultR : 1; // 0x6c
	char DefaultG : 1; // 0x6c
	char DefaultB : 1; // 0x6c
	char DefaultA : 1; // 0x6c
};

struct UInterpTrackBoolProp : UInterpTrack {
	TArray<FBoolTrackKey> BoolTrack; // 0x70
	FName PropertyName; // 0x80
};

struct UMovieSceneByteTrack : UMovieScenePropertyTrack {
	UEnum* Enum; // 0x88
};

struct UMovieSceneSequencePlayer : UObject {
	FScriptMulticastDelegate OnPlay; // 0x3b8
	FScriptMulticastDelegate OnPlayReverse; // 0x3c8
	FScriptMulticastDelegate OnStop; // 0x3d8
	FScriptMulticastDelegate OnPause; // 0x3e8
	FScriptMulticastDelegate OnFinished; // 0x3f8
	EMovieScenePlayerStatus Status; // 0x408
	char bReversePlayback : 1; // 0x40c
	UMovieSceneSequence* Sequence; // 0x410
	FFrameNumber StartTime; // 0x418
	int DurationFrames; // 0x41c
	int CurrentNumLoops; // 0x420
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x438
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x450
	FMovieSceneSequenceReplProperties NetSyncProps; // 0x7b8
	TScriptInterface<Class> PlaybackClient; // 0x7c8
};

struct UTimeSynchronizationSource : UObject {
	bool bUseForSynchronization; // 0x28
	int FrameOffset; // 0x2c
};

struct ABoxReflectionCapture : AReflectionCapture {
	UReflectionCaptureComponent* CaptureComponent; // 0x248
};

struct ATriggerVolume : AVolume {
	EBrushType BrushType; // 0x248
	FColor BrushColor; // 0x24c
	int PolyFlags; // 0x250
	char bColored : 1; // 0x254
	char bSolidWhenSelected : 1; // 0x254
	char bPlaceableFromClassBrowser : 1; // 0x254
	char bNotForClientOrServer : 1; // 0x254
	UModel* Brush; // 0x258
	UBrushComponent* BrushComponent; // 0x260
	char bInManipulation : 1; // 0x268
	TArray<FGeomSelection> SavedSelections; // 0x270
};

struct UImageSequenceProtocol_BMP : UImageSequenceProtocol {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UDatasmithCineCameraComponentTemplate : UDatasmithObjectTemplate {
	FDatasmithCameraFilmbackSettingsTemplate FilmbackSettings; // 0x30
	FDatasmithCameraLensSettingsTemplate LensSettings; // 0x38
	FDatasmithCameraFocusSettingsTemplate FocusSettings; // 0x3c
	float CurrentFocalLength; // 0x44
	float CurrentAperture; // 0x48
	FDatasmithPostProcessSettingsTemplate PostProcessSettings; // 0x50
};

struct ABP_M4A1_M150_Foregrip_C : ABP_M4A1_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UDistributionFloatParameterBase : UDistributionFloatConstant {
	FName ParameterName; // 0x40
	float MinInput; // 0x48
	float MaxInput; // 0x4c
	float MinOutput; // 0x50
	float MaxOutput; // 0x54
	DistributionParamMode ParamMode; // 0x58
};

struct UInterpFilter_Classes : UInterpFilter {
	FString Caption; // 0x28
};

struct UInterpTrackFloatMaterialParam : UInterpTrackFloatBase {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct ULayer : UObject {
	FName LayerName; // 0x28
	char bIsVisible : 1; // 0x30
	TArray<FLayerActorStats> ActorStats; // 0x38
};

struct USQSoundNodeRandom : USoundNode {
	TArray<USoundWave*> Sounds; // 0x40
	TArray<float> Weights; // 0x50
	int PreselectAtLevelLoad; // 0x60
	char bRandomizeWithoutReplacement : 1; // 0x64
	TArray<FSQSoundWeight> RuntimeSounds; // 0x68
	int RuntimeNumRandomSoundsUsed; // 0x78
};

struct UAsyncActionLoadPrimaryAssetClass : UAsyncActionLoadPrimaryAssetBase {
	FScriptMulticastDelegate Completed; // 0x78
};

struct UMaterialExpressionTextureSampleParameterVolume : UMaterialExpressionTextureSampleParameter {
	FName ParameterName; // 0xe0
	FGuid ExpressionGUID; // 0xe8
	FName Group; // 0xf8
};

struct UAISenseBlueprintListener : UUserDefinedStruct {
	EUserDefinedStructureStatus Status; // 0xa8
	FGuid Guid; // 0xac
};

struct USQSquadStateDataForwardBase : USQSquadStateDataDeployable {
	char bCanSpawn : 1; // 0x188
	char bSieged : 1; // 0x188
	char bIsBleeding : 1; // 0x188
	float MinActivatedTimeStamp; // 0x18c
	float ExclusionRadius; // 0x190
	float ConstructionRadius; // 0x194
	float AmmoPoints; // 0x198
	float ConstructionPoints; // 0x19c
};

struct UEnvQueryGenerator_Cone : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue AlignedPointsDistance; // 0x80
	FAIDataProviderFloatValue ConeDegrees; // 0xb0
	FAIDataProviderFloatValue AngleStep; // 0xe0
	FAIDataProviderFloatValue Range; // 0x110
	UEnvQueryContext* CenterActor; // 0x140
	char bIncludeContextLocation : 1; // 0x148
};

struct UMultiPacker : UObject {
	ETextureSizeOutput TextureTileSizeOutput; // 0x2a
	bool RectangleTiles; // 0x2b
	EFreeRectChoiceHeuristic RectangleMethod; // 0x2c
	ETextureSizeOutputPersonal OutputSizeX; // 0x2d
	ETextureSizeOutputPersonal OutputSizeY; // 0x2e
	FVector2D TilePadding; // 0x30
	EChannelTextureSave ChannelMethod; // 0x38
	bool Alpha; // 0x39
	int TileSize; // 0x3c
	bool SaveMaterialCollection; // 0x40
	bool SaveDatabase; // 0x41
	FDirectoryPath TargetDirectory; // 0x48
	FString TargetName; // 0x58
	bool EditPrefix; // 0x68
	FString DatabasePrefix; // 0x70
	FString TexturePrefix; // 0x80
	FString MaterialcollectionPrefix; // 0x90
	bool EditTexture; // 0xa0
	TextureFilter T_TextureFilter; // 0xa1
	bool Tex_SRGB; // 0xa2
	TextureAddress Tex_AddressX; // 0xa3
	TextureAddress Tex_AddressY; // 0xa4
	ETexturePowerOfTwoSetting Tex_Power; // 0xa5
	TArray<UTexture2D*> TextureOutput; // 0xa8
	UMultiPackerDataBase* Database; // 0xb8
	UMaterialParameterCollection* MaterialCollection; // 0xc0
	TMap<FName, FTileDatabase> TileMap; // 0xc8
	TArray<UTilePointer*> TilePointers; // 0x118
};

struct UChaosDestructionListener : USceneComponent {
	char bIsCollisionEventListeningEnabled : 1; // 0x218
	char bIsBreakingEventListeningEnabled : 1; // 0x218
	char bIsTrailingEventListeningEnabled : 1; // 0x218
	FChaosCollisionEventRequestSettings CollisionEventRequestSettings; // 0x21c
	FChaosBreakingEventRequestSettings BreakingEventRequestSettings; // 0x234
	FChaosTrailingEventRequestSettings TrailingEventRequestSettings; // 0x24c
	TSet<AChaosSolverActor*> ChaosSolverActors; // 0x268
	TSet<AGeometryCollectionActor*> GeometryCollectionActors; // 0x2b8
	FScriptMulticastDelegate OnCollisionEvents; // 0x308
	FScriptMulticastDelegate OnBreakingEvents; // 0x318
	FScriptMulticastDelegate OnTrailingEvents; // 0x328
};

struct UAbilityTask_WaitAttributeChangeRatioThreshold : UAbilityTask {
	FScriptMulticastDelegate OnChange; // 0x80
	UAbilitySystemComponent* ExternalOwner; // 0x108
};

struct ABP_L85A2_Recruit_C : ABP_L85A2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQLayer : USQPrimaryData {
	FName LevelId; // 0x70
	USQLevel* OuterLevel; // 0x78
	TArray<UWorld*> Worlds; // 0x80
	TArray<USQLayerTeamConfig*> TeamConfigs; // 0x90
	FSQGameFlags GameFlags; // 0xa0
};

struct ABP_AKS74U_2mags_Founders_C : ABP_AKS74U_2mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionSetMaterialAttributes : UMaterialExpression {
	TArray<FExpressionInput> Inputs; // 0x40
	TArray<FGuid> AttributeSetTypes; // 0x50
};

struct ASQPawn : APawn {
	char bClientUpdating : 1; // 0x2b0
	bool bUseEngineActorReplication; // 0x2b4
	bool bIsUsingNewMovementComponent; // 0x2b5
	ESQTeam Team; // 0x2b6
	FSQBasedMovementInfo BasedMovement; // 0x2b8
	USQCoreStateComponent* StateObject; // 0x2e8
	FVector BaseTranslationOffset; // 0x2f0
	FQuat BaseRotationOffset; // 0x300
	bool bInBaseReplication; // 0x310
	FScriptMulticastDelegate OnPawnPossessedEvent; // 0x318
	FScriptMulticastDelegate OnPawnUnPossessedEvent; // 0x328
};

struct UBoolBinding : UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct UBTDecorator_BlackboardBase : UBTDecorator {
	FBlackboardKeySelector BlackboardKey; // 0x68
};

struct ANavigationTestingActor : AActor {
	UCapsuleComponent* CapsuleComponent; // 0x258
	UNavigationInvokerComponent* InvokerComponent; // 0x260
	char bActAsNavigationInvoker : 1; // 0x268
	FNavAgentProperties NavAgentProps; // 0x270
	FVector QueryingExtent; // 0x2a0
	ANavigationData* MyNavData; // 0x2b0
	FVector ProjectedLocation; // 0x2b8
	char bProjectedLocationValid : 1; // 0x2c4
	char bSearchStart : 1; // 0x2c4
	char bBacktracking : 1; // 0x2c4
	char bUseHierarchicalPathfinding : 1; // 0x2c4
	char bGatherDetailedInfo : 1; // 0x2c4
	char bDrawDistanceToWall : 1; // 0x2c4
	char bShowNodePool : 1; // 0x2c4
	char bShowBestPath : 1; // 0x2c4
	char bShowDiffWithPreviousStep : 1; // 0x2c5
	char bShouldBeVisibleInGame : 1; // 0x2c5
	ENavCostDisplay CostDisplayMode; // 0x2c8
	FVector2D TextCanvasOffset; // 0x2cc
	char bPathExist : 1; // 0x2d4
	char bPathIsPartial : 1; // 0x2d4
	char bPathSearchOutOfNodes : 1; // 0x2d4
	float PathfindingTime; // 0x2d8
	float PathCost; // 0x2dc
	int PathfindingSteps; // 0x2e0
	ANavigationTestingActor* OtherActor; // 0x2e8
	UNavigationQueryFilter* FilterClass; // 0x2f0
	int ShowStepIndex; // 0x2f8
	float OffsetFromCornersDistance; // 0x2fc
};

struct UTexture : UStreamableRenderAsset {
	FGuid LightingGuid; // 0x48
	int LODBias; // 0x58
	TextureCompressionSettings CompressionSettings; // 0x5c
	TextureFilter Filter; // 0x5d
	ETextureMipLoadOptions MipLoadOptions; // 0x5e
	TextureGroup LODGroup; // 0x5f
	char SRGB : 1; // 0x60
	char bNoTiling : 1; // 0x60
	char VirtualTextureStreaming : 1; // 0x60
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x68
};

struct USQSquadStateDataEmplacement : USQSquadStateDataVehicle {
	USQVehicleUIStaticDataAsset* StaticUIData; // 0x1a8
	char bHoldsOccupant : 1; // 0x1b0
	char bHoldsSquadLeader : 1; // 0x1b0
	int ClaimingSquadID; // 0x1b4
	FVehicleOccupantsArray VehicleOccupants; // 0x1b8
};

struct UEnvQuery : UDataAsset {
	FName QueryName; // 0x30
	TArray<UEnvQueryOption*> Options; // 0x38
};

struct ASQSquad : AInfo {
	TArray<ASQMapMarker*> LatestSpotMarkers; // 0x248
	TArray<ASQMapMarker*> LatestActionMarkers; // 0x258
	TArray<ASQMapMarker*> LatestPOIMarkers; // 0x268
	TArray<ASQMapMarker*> LatestFireteamMarkers; // 0x278
	TArray<ASQMapMarker*> LatestRequestMarkers; // 0x288
	ASQTeam* Team; // 0x298
	ASQSquadState* SquadStateClass; // 0x2a0
	ASQSquadStatePrivateToTeam* TeamPrivateSquadStateClass; // 0x2a8
	ASQSquadRallyPoint* SquadRallyPointClass; // 0x2b0
	ASQSquadState* SquadState; // 0x2b8
	ASQSquadStatePrivateToTeam* TeamPrivateSquadState; // 0x2c0
	ASQPlayerController* Leader; // 0x2c8
	float RejoinSquadDelayAfterKick; // 0x2d0
	ASQSquadRallyPoint* rallypoint; // 0x2d8
	float RpMembersToPlaceRadius; // 0x2e0
	float RpEnemiesNearCheckRadius; // 0x2e4
	int RpNeededMembersToPlace; // 0x2e8
	int RpNonSLMemberPunishment; // 0x2ec
	FText RpMembersErrorMessage; // 0x2f0
	FText RpMembersNonSlErrorMessage; // 0x308
	FText RpTimerErrorMessage; // 0x320
	FText RpEnemiesNearErrorMessage; // 0x338
	FText PlayerJoinedMessage; // 0x350
	FText PlayerLeftMessage; // 0x368
	FText LeaderChangedMessage; // 0x380
	FText RpLeaderChangedTimeMessage; // 0x398
	float RpLastPlacementTime; // 0x3b0
	float RpTimeToReset; // 0x3b4
	float RpEnemiesNearbyTimeSubtract; // 0x3b8
	float RpLeaderChangedResetTime; // 0x3bc
	bool bRpUsesLeaderChangeResetTime; // 0x3c0
	bool RpUsesResetTimer; // 0x3c1
	float ClaimingGracePeriod; // 0x3c4
	int ClaimingTotalNumMembersNeededTogether; // 0x3c8
	float ClaimingMembersTogetherRadius; // 0x3cc
	int ClaimingNumMembersInSquadForOne; // 0x3d0
	int ClaimingNumMembersInSquadForTwo; // 0x3d4
	int ClaimingNumMembersInSquadForThree; // 0x3d8
	int ClaimingNumMembersInSquadForFour; // 0x3dc
	float ClaimingTimeToExpire; // 0x3e0
	int NumberOfMembersWithVehicleClaimToMakeSquadPartyToClaim; // 0x3e4
	TArray<USQVehicleClaim*> VehicleClaims; // 0x3e8
	FText ActiveVehicleClaimDroppedNearMainBaseMessage; // 0x3f8
	FText ActiveVehicleClaimDroppedNearFireBaseMessage; // 0x410
	FText ActiveVehicleClaimDroppedOnBattlefieldMessage; // 0x428
	FText ActiveVehicleClaimDestroyedMessage; // 0x440
	FText ActiveVehicleClaimPickedUpMessage; // 0x458
	FText NeedLeaderRoleToClaimVehicleMessage; // 0x470
	FText OverVehicleClaimingLimitMessage; // 0x488
	FText OverVehicleClaimingLimitActiveUseDetailsMessage; // 0x4a0
	FText OverVehicleClaimingLimitDestroyedDetailsMessage; // 0x4b8
	FText OverVehicleClaimingLimitLeftDetailsMessage; // 0x4d0
	FText OverVehicleClaimingLimitDestroyedOrLeftDetailsMessage; // 0x4e8
	FText OverVehicleClaimingLimitDestroyedOrLeftTimerMessage; // 0x500
	FText NotEnoughMembersForClaimingSingleVehicleMessage; // 0x518
	FText NotEnoughMembersNearToClaimVehicleMessage; // 0x530
	FText VehicleClaimSuccessMessage; // 0x548
	FText ClaimGracePeriodFailMessage; // 0x560
	FText UnableToReleaseOlderVehicleClaimMessage; // 0x578
	FText AnotherSquadClaimedOurVehicleMessage; // 0x590
	FText UnableToApproveVehicleClaimMessage; // 0x5a8
	FText KickedFromSquadMessage; // 0x5c0
	FText LeftSquadMessage; // 0x5d8
	FText ForceRecruitKitMessage; // 0x5f0
	TArray<FSQFireTeam> FireTeams; // 0x608
	USQConfig* SquadConfig; // 0x618
	ASQVehicle* LastVehicleMemberFailedToEnter; // 0x620
	FScriptMulticastDelegate OnPlayerJoinSquad; // 0x678
	FScriptMulticastDelegate OnPlayerPartSquad; // 0x688
	FScriptMulticastDelegate OnPlayerBecomeSquadLeader; // 0x698
	FScriptMulticastDelegate OnFireteamDisbanded; // 0x6a8
	FScriptMulticastDelegate OnFireteamUpdated; // 0x6b8
};

struct UMaterialExpressionQualitySwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x3]; // 0x54
};

struct USoundNodeQualityLevel : USoundNode {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct USQMortarViewWidget : USQVehicleViewWidget {
	TArray<UImage*> ZoomImages; // 0x230
	int CurrentZoomIndex; // 0x240
	TArray<UCameraShake*> IgnoredShakeClasses; // 0x248
};

struct USQInputComponent : UInputComponent {
	TArray<FCachedKeyToActionInfo> CachedKeyToActionInfo; // 0x148
};

struct UAchievementWriteCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct USubmixEffectSubmixEQPreset : USoundEffectSubmixPreset {
	FSubmixEffectSubmixEQSettings Settings; // 0x78
};

struct URadialVector : UFieldNodeVector {
	float Magnitude; // 0xd8
	FVector Position; // 0xdc
};

struct ABP_L85A2AG36_DarkEarth_Rifle_C : ABP_L85A2_DarkEarth_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBP_L85A2AG36_UGL_Parent_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UGameplayTagReponseTable : UDataAsset {
	TArray<FGameplayTagResponseTableEntry> Entries; // 0x30
};

struct ARectLight : ALight {
	URectLightComponent* RectLightComponent; // 0x258
};

struct UMaterialFunctionInterface : UObject {
	FGuid StateId; // 0x28
	EMaterialFunctionUsage MaterialFunctionUsage; // 0x38
};

struct UParticleModuleSourceMovement : UParticleModuleLocationBase {
	FRawDistributionVector SourceMovementScale; // 0x30
};

struct UAnimSet : UObject {
	char bAnimRotationOnly : 1; // 0x28
	TArray<FName> TrackBoneNames; // 0x30
	TArray<FAnimSetMeshLinkup> LinkupCache; // 0x40
	TArray<char> BoneUseAnimTranslation; // 0x50
	TArray<char> ForceUseMeshTranslation; // 0x60
	TArray<FName> UseTranslationBoneNames; // 0x70
	TArray<FName> ForceMeshTranslationBoneNames; // 0x80
	FName PreviewSkelMeshName; // 0x90
	FName BestRatioSkelMeshName; // 0x98
};

struct USQScoreboardWidgetStyle : USlateWidgetStyleContainerBase {
	FSQScoreboardStyle ScoreboardStyle; // 0x30
};

struct UAssetManager : UObject {
	TArray<UObject*> ObjectReferenceList; // 0x2c0
	bool bIsGlobalAsyncScanEnvironment; // 0x2d0
	bool bShouldGuessTypeAndName; // 0x2d1
	bool bShouldUseSynchronousLoad; // 0x2d2
	bool bIsLoadingFromPakFiles; // 0x2d3
	bool bShouldAcquireMissingChunksOnLoad; // 0x2d4
	bool bOnlyCookProductionAssets; // 0x2d5
	bool bIsBulkScanning; // 0x2d6
	bool bIsPrimaryAssetDirectoryCurrent; // 0x2d7
	bool bIsManagementDatabaseCurrent; // 0x2d8
	bool bUpdateManagementDatabaseAfterScan; // 0x2d9
	bool bIncludeOnlyOnDiskAssets; // 0x2da
	int NumberOfSpawnedNotifications; // 0x2dc
};

struct UInterpTrackVectorBase : UInterpTrack {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct USubsurfaceProfile : UObject {
	FSubsurfaceProfileStruct Settings; // 0x28
};

struct USQConsoleVariablesComponent : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UMaterialFunctionMaterialLayerBlendInstance : UMaterialFunctionInstance {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
};

struct ABP_M4M203_M150_UGL_Parent_C : ABP_Weapon2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBlueprint : UBlueprintCore {
	char bRecompileOnLoad : 1; // 0x50
	UObject* ParentClass; // 0x58
	char bHasBeenRegenerated : 1; // 0x60
	char bIsRegeneratingOnLoad : 1; // 0x60
	USimpleConstructionScript* SimpleConstructionScript; // 0x68
	TArray<UActorComponent*> ComponentTemplates; // 0x70
	TArray<UTimelineTemplate*> Timelines; // 0x80
	UInheritableComponentHandler* InheritableComponentHandler; // 0x90
	EBlueprintType BlueprintType; // 0x98
	int BlueprintSystemVersion; // 0x9c
	bool bNativize; // 0xd0
};

struct ALandscape : ALandscapeProxy {
	ULandscapeSplinesComponent* SplineComponent; // 0x248
	FGuid LandscapeGuid; // 0x250
	FIntPoint LandscapeSectionOffset; // 0x260
	int MaxLODLevel; // 0x268
	float LODDistanceFactor; // 0x26c
	ELandscapeLODFalloff LODFalloff; // 0x270
	float ComponentScreenSizeToUseSubSections; // 0x274
	float LOD0ScreenSize; // 0x278
	float LOD0DistributionSetting; // 0x27c
	float LODDistributionSetting; // 0x280
	float TessellationComponentScreenSize; // 0x284
	bool UseTessellationComponentScreenSizeFalloff; // 0x288
	float TessellationComponentScreenSizeFalloff; // 0x28c
	int OccluderGeometryLOD; // 0x290
	int StaticLightingLOD; // 0x294
	UPhysicalMaterial* DefaultPhysMaterial; // 0x298
	float StreamingDistanceMultiplier; // 0x2a0
	UMaterialInterface* LandscapeMaterial; // 0x2a8
	UMaterialInterface* LandscapeHoleMaterial; // 0x2b0
	TArray<FLandscapeProxyMaterialOverride> LandscapeMaterialsOverride; // 0x2b8
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x2c8
	int VirtualTextureNumLods; // 0x2d8
	int VirtualTextureLodBias; // 0x2dc
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x2e0
	float NegativeZBoundsExtension; // 0x2e4
	float PositiveZBoundsExtension; // 0x2e8
	TArray<ULandscapeComponent*> LandscapeComponents; // 0x2f0
	TArray<ULandscapeHeightfieldCollisionComponent*> CollisionComponents; // 0x300
	TArray<UHierarchicalInstancedStaticMeshComponent*> FoliageComponents; // 0x310
	bool bHasLandscapeGrass; // 0x384
	float StaticLightingResolution; // 0x388
	char bCastStaticShadow : 1; // 0x38c
	char bCastShadowAsTwoSided : 1; // 0x38c
	char bCastFarShadow : 1; // 0x38c
	char bAffectDistanceFieldLighting : 1; // 0x390
	FLightingChannels LightingChannels; // 0x391
	char bUseMaterialPositionOffsetInStaticLighting : 1; // 0x394
	char bRenderCustomDepth : 1; // 0x394
	int CustomDepthStencilValue; // 0x398
	float LDMaxDrawDistance; // 0x39c
	FLightmassPrimitiveSettings LightmassSettings; // 0x3a0
	int CollisionMipLevel; // 0x3b8
	int SimpleCollisionMipLevel; // 0x3bc
	float CollisionThickness; // 0x3c0
	FBodyInstance BodyInstance; // 0x3c8
	char bGenerateOverlapEvents : 1; // 0x4d8
	char bBakeMaterialPositionOffsetIntoCollision : 1; // 0x4d8
	int ComponentSizeQuads; // 0x4dc
	int SubsectionSizeQuads; // 0x4e0
	int NumSubsections; // 0x4e4
	char bUsedForNavigation : 1; // 0x4e8
	bool bUseDynamicMaterialInstance; // 0x4ec
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x4ed
	bool bUseLandscapeForCullingInvisibleHLODVertices; // 0x4ee
	bool bHasLayersContent; // 0x4ef
	TMap<UTexture2D*, ULandscapeWeightmapUsage*> WeightmapUsageMap; // 0x4f0
};

struct UStreamMediaSource : UBaseMediaSource {
	FString StreamUrl; // 0x38
};

struct UPhysicsCollisionHandler : UObject {
	float ImpactThreshold; // 0x28
	float ImpactReFireDelay; // 0x2c
	USoundBase* DefaultImpactSound; // 0x30
	float LastImpactSoundTime; // 0x38
};

struct USceneCaptureComponent2D : USceneCaptureComponent {
	ECameraProjectionMode ProjectionType; // 0x2b0
	float FOVAngle; // 0x2b4
	float OrthoWidth; // 0x2b8
	UTextureRenderTarget2D* TextureTarget; // 0x2c0
	ESceneCaptureCompositeMode CompositeMode; // 0x2c8
	FPostProcessSettings PostProcessSettings; // 0x2d0
	float PostProcessBlendWeight; // 0x800
	char bOverride_CustomNearClippingPlane : 1; // 0x804
	float CustomNearClippingPlane; // 0x808
	bool bUseCustomProjectionMatrix; // 0x80c
	FMatrix CustomProjectionMatrix; // 0x810
	bool bEnableClipPlane; // 0x850
	FVector ClipPlaneBase; // 0x854
	FVector ClipPlaneNormal; // 0x860
	char bCameraCutThisFrame : 1; // 0x86c
	char bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1; // 0x86c
};

struct UChaosEventListenerComponent : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UParticleModuleVectorFieldBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct USQGraphRAASInitializerComponent : USQGraphAASInitializerComponent {
	TArray<FSQDesignLink> DesignOutgoingLinks; // 0xd8
};

struct USQSquadStateDataMapMarkerSelectable : USQSquadStateDataMapMarker {
	USQMapIconComponent* MapIcon; // 0x1a0
};

struct UPawnAction_BlueprintBase : UPawnAction {
	UPawnAction* ChildAction; // 0x28
	UPawnAction* ParentAction; // 0x30
	UPawnActionsComponent* OwnerComponent; // 0x38
	UObject* Instigator; // 0x40
	UBrainComponent* BrainComp; // 0x48
	char bAllowNewSameClassInstance : 1; // 0x80
	char bReplaceActiveSameClassInstance : 1; // 0x80
	char bShouldPauseMovement : 1; // 0x80
	char bAlwaysNotifyOnFinished : 1; // 0x80
};

struct USQDamageType_Underwater : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct USQProjectileMovement : UProjectileMovementComponent {
	FVector ConstantAcceleration; // 0x1e0
	float ConstantAccelerationTimeout; // 0x1ec
	bool bIgnoreGravityDuringConstantAcceleration; // 0x1f0
	bool bIgnoreGravity; // 0x1f1
};

struct ASQVehicleSpawner : ASQSpawner {
	ESQTeam NeutralCopyVehicleFromTeam; // 0x2d8
	USQVehicleSettings* SpecificVehicle; // 0x2e0
};

struct ATriggerBox : ATriggerBase {
	UShapeComponent* CollisionComponent; // 0x248
};

struct UBP_SquadStateDataMapMarker_C : USQSquadStateDataMapMarker {
	UTexture2D* Texture; // 0x180
	FLinearColor Tint; // 0x188
	int FireTeamId; // 0x198
};

struct UBP_Attachment_1p88_Woodland_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UParticleModuleSizeScale : UParticleModuleSizeBase {
	FRawDistributionVector SizeScale; // 0x30
	char EnableX : 1; // 0x80
	char EnableY : 1; // 0x80
	char EnableZ : 1; // 0x80
};

struct UBP_L85A2_Foregrip_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UInterpTrackInstDirector : UInterpTrackInst {
	AActor* OldViewTarget; // 0x28
};

struct UChaosGameplayEventDispatcher : UChaosEventListenerComponent {
	TMap<UPrimitiveComponent*, FChaosHandlerSet> CollisionEventRegistrations; // 0x1a0
	TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper> BreakEventRegistrations; // 0x1f0
};

struct USQDoubleRotorAnimInstance : USQRotorsAnimInstance {
	FName Rotor1Name; // 0x2f0
	FName Rotor2Name; // 0x2f8
	FRotator Rotor1Rotation; // 0x300
	FRotator Rotor2Rotation; // 0x30c
};

struct USQChunkSettings : UDeveloperSettings {
	TArray<USQLevel*> LevelsToCook; // 0x38
	TArray<USQLayer*> LayersToCook; // 0x48
	TArray<USQFaction*> FactionsToCook; // 0x58
	TArray<USQFactionSetup*> FactionSetupsToCook; // 0x68
	TArray<FSQChunkRule> ChunkRules; // 0x78
};

struct UWidgetTree : UObject {
	UWidget* RootWidget; // 0x28
};

struct UMovieSceneColorTrack : UMovieScenePropertyTrack {
	bool bIsSlateColor; // 0x88
};

struct UEditableGameplayTagQueryExpression_AllTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UInterpTrackEvent : UInterpTrack {
	TArray<FEventTrackKey> EventTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
	char bUseCustomEventName : 1; // 0x80
};

struct UActorChannel : UChannel {
	AActor* Actor; // 0x70
	TArray<UObject*> CreateSubObjects; // 0x170
};

struct UParticleModuleAccelerationOverLifetime : UParticleModuleAccelerationBase {
	FRawDistributionVector AccelOverLife; // 0x38
};

struct USQOptionsWidgetStyle : USlateWidgetStyleContainerBase {
	FSQOptionsStyle OptionsStyle; // 0x30
};

struct UParticleModuleColorOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorOverLife; // 0x30
	FRawDistributionFloat AlphaOverLife; // 0x80
	char bClampAlpha : 1; // 0xb8
};

struct ABP_M4M203_Rifle_M150_Founders_C : ABP_M4M203_Rifle_M150_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	FVector LScale; // 0x7b8
};

struct UParticleModuleLocationDirect : UParticleModuleLocationBase {
	FRawDistributionVector Location; // 0x30
	FRawDistributionVector LocationOffset; // 0x80
	FRawDistributionVector ScaleFactor; // 0xd0
	FRawDistributionVector Direction; // 0x120
};

struct ABP_AKS74_1P29_Tracer_Founders_C : ABP_AKS74_1P29_Tracer_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Front; // 0x7b8
	UStaticMeshComponent* Scope; // 0x7c0
};

struct USkinnedMeshComponent : UMeshComponent {
	USkeletalMesh* SkeletalMesh; // 0x430
	TWeakObjectPtr<USkinnedMeshComponent> MasterPoseComponent; // 0x438
	UPhysicsAsset* PhysicsAssetOverride; // 0x538
	int ForcedLodModel; // 0x540
	int MinLodModel; // 0x544
	float StreamingDistanceMultiplier; // 0x550
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x560
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x594
	char bOverrideMinLOD : 1; // 0x596
	char bUseBoundsFromMasterPoseComponent : 1; // 0x596
	char bForceWireframe : 1; // 0x596
	char bDisplayBones : 1; // 0x596
	char bDisableMorphTarget : 1; // 0x596
	char bHideSkin : 1; // 0x596
	char bPerBoneMotionBlur : 1; // 0x597
	char bComponentUseFixedSkelBounds : 1; // 0x597
	char bConsiderAllBodiesForBounds : 1; // 0x597
	char bSyncAttachParentLOD : 1; // 0x597
	char bCanHighlightSelectedSections : 1; // 0x597
	char bRecentlyRendered : 1; // 0x597
	char bCastCapsuleDirectShadow : 1; // 0x597
	char bCastCapsuleIndirectShadow : 1; // 0x597
	char bCPUSkinning : 1; // 0x598
	char bEnableUpdateRateOptimizations : 1; // 0x598
	char bDisplayDebugUpdateRateOptimizations : 1; // 0x598
	char bRenderStatic : 1; // 0x598
	char bIgnoreMasterPoseComponentLOD : 1; // 0x598
	char bCachedLocalBoundsUpToDate : 1; // 0x598
	char bForceMeshObjectUpdate : 1; // 0x599
	float CapsuleIndirectShadowMinVisibility; // 0x59c
	FBoxSphereBounds CachedLocalBounds; // 0x5b0
};

struct USQReplicationGraphNode_PlayerStateFrequencyLimiter : UReplicationGraphNode {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct UAnimCompress_PerTrackCompression : UAnimCompress_RemoveLinearKeys {
	float MaxZeroingThreshold; // 0x70
	float MaxPosDiffBitwise; // 0x74
	float MaxAngleDiffBitwise; // 0x78
	float MaxScaleDiffBitwise; // 0x7c
	TArray<AnimationCompressionFormat> AllowedRotationFormats; // 0x80
	TArray<AnimationCompressionFormat> AllowedTranslationFormats; // 0x90
	TArray<AnimationCompressionFormat> AllowedScaleFormats; // 0xa0
	char bResampleAnimation : 1; // 0xb0
	float ResampledFramerate; // 0xb4
	int MinKeysForResampling; // 0xb8
	char bUseAdaptiveError : 1; // 0xbc
	char bUseOverrideForEndEffectors : 1; // 0xbc
	int TrackHeightBias; // 0xc0
	float ParentingDivisor; // 0xc4
	float ParentingDivisorExponent; // 0xc8
	char bUseAdaptiveError2 : 1; // 0xcc
	float RotationErrorSourceRatio; // 0xd0
	float TranslationErrorSourceRatio; // 0xd4
	float ScaleErrorSourceRatio; // 0xd8
	float MaxErrorPerTrackRatio; // 0xdc
	float PerturbationProbeSize; // 0xe0
};

struct UPacketHandlerProfileConfig : UObject {
	TArray<FString> Components; // 0x28
};

struct UAnimSequence : UAnimSequenceBase {
	int NumFrames; // 0xa8
	TArray<FTrackToSkeletonMap> TrackToSkeletonMapTable; // 0xb0
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd0
	EAdditiveAnimationType AdditiveAnimType; // 0x1a8
	EAdditiveBasePoseType RefPoseType; // 0x1a9
	UAnimSequence* RefPoseSeq; // 0x1b0
	int RefFrameIndex; // 0x1b8
	FName RetargetSource; // 0x1bc
	EAnimInterpolationType Interpolation; // 0x1c4
	bool bEnableRootMotion; // 0x1c5
	ERootMotionRootLock RootMotionRootLock; // 0x1c6
	bool bForceRootLock; // 0x1c7
	bool bUseNormalizedRootMotionScale; // 0x1c8
	bool bRootMotionSettingsCopiedFromMontage; // 0x1c9
	TArray<FAnimSyncMarker> AuthoredSyncMarkers; // 0x1d0
};

struct AGeneratedMeshAreaLight : ASpotLight {
	USpotLightComponent* SpotLightComponent; // 0x258
};

struct USQCoreStateWidgetFactory : USQCoreStateListener {
	TMap<FSQCoreStateId, USQCoreStateWidget*> Widgets; // 0x148
	TMap<USQCoreStateWidget*, FWidgetGroup> UnusedWidgets; // 0x198
	TMap<USQCoreStateData*, int> SubDataPendingSuperKey; // 0x2d8
	USQCoreStateSelectionHUB* SelectionHUB; // 0x338
};

struct UGameNetworkManagerSettings : UObject {
	int MinDynamicBandwidth; // 0x28
	int MaxDynamicBandwidth; // 0x2c
	int TotalNetBandwidth; // 0x30
	int BadPingThreshold; // 0x34
	char bIsStandbyCheckingEnabled : 1; // 0x38
	float StandbyRxCheatTime; // 0x3c
	float StandbyTxCheatTime; // 0x40
	float PercentMissingForRxStandby; // 0x44
	float PercentMissingForTxStandby; // 0x48
	float PercentForBadPing; // 0x4c
	float JoinInProgressStandbyWaitTime; // 0x50
};

struct UBP_Attachment_M4M203_LadderSight_Founders_C : UBP_Attachment_M4M203_LadderSight_C {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ULandscapeHeightfieldCollisionComponent : UPrimitiveComponent {
	TArray<ULandscapeLayerInfoObject*> ComponentLayerInfos; // 0x408
	int SectionBaseX; // 0x418
	int SectionBaseY; // 0x41c
	int CollisionSizeQuads; // 0x420
	float CollisionScale; // 0x424
	int SimpleCollisionSizeQuads; // 0x428
	TArray<char> CollisionQuadFlags; // 0x430
	FGuid HeightfieldGuid; // 0x440
	FBox CachedLocalBox; // 0x450
	ULandscapeComponent* RenderComponent; // 0x46c
	TArray<UPhysicalMaterial*> CookedPhysicalMaterials; // 0x498
};

struct UMovieSceneAudioSection : UMovieSceneSection {
	USoundBase* Sound; // 0xe0
	FFrameNumber StartFrameOffset; // 0xe8
	float StartOffset; // 0xec
	float AudioStartTime; // 0xf0
	float AudioDilationFactor; // 0xf4
	float AudioVolume; // 0xf8
	FMovieSceneFloatChannel SoundVolume; // 0x100
	FMovieSceneFloatChannel PitchMultiplier; // 0x1a0
	bool bSuppressSubtitles; // 0x240
	bool bOverrideAttenuation; // 0x241
	USoundAttenuation* AttenuationSettings; // 0x248
	DelegateProperty OnQueueSubtitles; // 0x250
	FScriptMulticastDelegate OnAudioFinished; // 0x260
	FScriptMulticastDelegate OnAudioPlaybackPercent; // 0x270
};

struct UParticleModuleAccelerationDrag : UParticleModuleAccelerationBase {
	UDistributionFloat* DragCoefficient; // 0x38
	FRawDistributionFloat DragCoefficientRaw; // 0x40
};

struct USoundSourceBus : USoundWave {
	ESourceBusChannels SourceBusChannels; // 0x2c0
	float SourceBusDuration; // 0x2c4
	char bAutoDeactivateWhenSilent : 1; // 0x2c8
};

struct UActorSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x348
	FActorSequenceObjectReferenceMap ObjectReferences; // 0x350
};

struct ABP_GenericPistol_C : ABP_Weapon2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UPhysicsThrusterComponent : USceneComponent {
	float ThrustStrength; // 0x218
};

struct UHighlightsOpenGroupAsync : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct UTexture2D : UTexture {
	int LevelIndex; // 0xd0
	int FirstResourceMemMip; // 0xd4
	char bTemporarilyDisableStreaming : 1; // 0xd8
	TextureAddress AddressX; // 0xd9
	TextureAddress AddressY; // 0xda
	FIntPoint ImportedSize; // 0xdc
};

struct UBP_Attachment_M150_SA80_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UContentWidget : UPanelWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UTestMovieSceneSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x348
};

struct UBP_Attachment_M68_NoAds_C : UBP_Attachment_M68_C {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ABP_M4M203_M150_UGL_Parent_Founders_C : ABP_Weapon2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UInterpCurveEdSetup : UObject {
	TArray<FCurveEdTab> Tabs; // 0x28
	int ActiveTab; // 0x38
};

struct ALevelScriptActor : AActor {
	char bInputEnabled : 1; // 0x248
};

struct UMaterialExpressionRuntimeVirtualTextureSample : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
	URuntimeVirtualTexture* VirtualTexture; // 0x58
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x60
};

struct USoundNodeModulatorContinuous : USoundNode {
	FModulatorContinuousParams PitchModulationParams; // 0x40
	FModulatorContinuousParams VolumeModulationParams; // 0x60
};

struct UButtonSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct ABP_RPG7_Frag_2Mag_C : ABP_RPG7_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UPropertyValueMaterial : UPropertyValue {
	TArray<UProperty*> properties; // 0x80
	TArray<int> PropertyIndices; // 0x90
	TArray<FCapturedPropSegment> CapturedPropSegments; // 0xa0
	FString FullDisplayString; // 0xb0
	FName PropertySetterName; // 0xc0
	TMap<FString, FString> PropertySetterParameterDefaults; // 0xc8
	bool bHasRecordedData; // 0x118
	UObject* LeafPropertyClass; // 0x120
	TArray<char> ValueBytes; // 0x128
	EPropertyValueCategory PropCategory; // 0x138
};

struct USQPainCausingVolumeComponent : UBoxComponent {
	char bPainCausing : 1; // 0x430
	float DamagePerSec; // 0x434
	UDamageType* DamageType; // 0x438
	float PainInterval; // 0x440
	char bEntryPain : 1; // 0x444
	AController* DamageInstigator; // 0x448
};

struct UGameplayTagsDeveloperSettings : UObject {
	FString DeveloperConfigName; // 0x28
};

struct ABP_M4M203_M68_UGL_HE_C : ABP_M4M203_M68_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQGameInstanceEvents : UObject {
	FScriptMulticastDelegate OnPlayerDestroyedVehicle; // 0x28
	FScriptMulticastDelegate OnPlayerWounded; // 0x38
	FScriptMulticastDelegate OnPlayerDetonateExplosive; // 0x48
	FScriptMulticastDelegate OnEnteredMainMenu; // 0x58
	FScriptMulticastDelegate OnGameStarted; // 0x68
	FScriptMulticastDelegate OnGameEnded; // 0x78
};

struct AGameplayAbilityWorldReticle_ActorVisualization : AGameplayAbilityWorldReticle {
	UCapsuleComponent* CollisionComponent; // 0x268
	TArray<UActorComponent*> VisualizationComponents; // 0x270
};

struct UBP_Glock17_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct ASQMarker : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UVRNotificationsComponent : UActorComponent {
	FScriptMulticastDelegate HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate; // 0xd8
	FScriptMulticastDelegate HMDTrackingInitializedDelegate; // 0xe8
	FScriptMulticastDelegate HMDRecenteredDelegate; // 0xf8
	FScriptMulticastDelegate HMDLostDelegate; // 0x108
	FScriptMulticastDelegate HMDReconnectedDelegate; // 0x118
	FScriptMulticastDelegate HMDConnectCanceledDelegate; // 0x128
	FScriptMulticastDelegate HMDPutOnHeadDelegate; // 0x138
	FScriptMulticastDelegate HMDRemovedFromHeadDelegate; // 0x148
	FScriptMulticastDelegate VRControllerRecenteredDelegate; // 0x158
};

struct ABP_M4_M68_Woodland_C : ABP_M4_M68_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4_2Mags_C : ABP_M4A1_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBP_Attachment_M150_Noads_Founders_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMaterialExpressionConstant2Vector : UMaterialExpression {
	float R; // 0x40
	float G; // 0x44
};

struct USQMap : USQUserWidget {
	float PositionUpdateRate; // 0x230
	float PositionUpdateTimer; // 0x234
	bool bIsMapFollowing; // 0x238
	bool bMapFollowToggle; // 0x239
	bool bMapFollowPlayerOnByDefault; // 0x23a
	FVector2D MapCurrentCoord; // 0x23c
	FVector2D MapCenterCoord; // 0x244
	bool bRunCameraPP; // 0x24c
	bool bRunCameraPPForward; // 0x24d
	float PPBlendMultiplier; // 0x250
	float PPBlendValue; // 0x254
	float PPBlendFarDistance; // 0x258
	float MapDrawX; // 0x25c
	float MapDrawY; // 0x260
	float MapWidth; // 0x264
	float MapHeight; // 0x268
	FVector2D WorldTR; // 0x26c
	FVector2D WorldBL; // 0x274
	float MajorGridSpacing; // 0x27c
	FVector2D MapLastClickPosition; // 0x280
	FVector2D LastMapZoomPos; // 0x288
	TArray<int> MapZoomLevels; // 0x290
	float ZoomFloatCurrent; // 0x2a0
	int ZoomStep; // 0x2a4
	int ZoomStepMax; // 0x2a8
	int ZoomStepMin; // 0x2ac
	float ZoomAlpha; // 0x2b0
	bool bIsZooming; // 0x2b4
	bool bMapIsClosing; // 0x2b5
	bool bMapIsOpening; // 0x2b6
	bool bIsSpawnScreen; // 0x2b7
	bool bIsMapOn; // 0x2b8
};

struct ABP_SVDM_Optic_Woodland_C : ABP_SVDM_Optic_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* SVDFront; // 0x7b8
	UStaticMeshComponent* PSOScope; // 0x7c0
	bool HasBUIS; // 0x7c8
};

struct URecastNavMeshDataChunk : UNavigationDataChunk {
	FName NavigationDataName; // 0x28
};

struct ABP_RPG7V2_Parent_Founders_C : ABP_RPG7V2_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UBTTask_RunBehavior : UBTTaskNode {
	UBehaviorTree* BehaviorAsset; // 0x70
};

struct UTexture2DDynamic : UTexture {
	EPixelFormat Format; // 0xd8
};

struct APostProcessVolume : AVolume {
	FPostProcessSettings Settings; // 0x290
	float Priority; // 0x7c0
	float BlendRadius; // 0x7c4
	float BlendWeight; // 0x7c8
	char bEnabled : 1; // 0x7cc
	char bUnbound : 1; // 0x7cc
};

struct USQBTDecorator_HasLoSTo : UBTDecorator {
	FBlackboardKeySelector EnemyKey; // 0x68
};

struct UArrowComponent : UPrimitiveComponent {
	FColor ArrowColor; // 0x408
	float ArrowSize; // 0x40c
	bool bIsScreenSizeScaled; // 0x410
	float ScreenSize; // 0x414
	char bTreatAsASprite : 1; // 0x418
};

struct USQMapWidgetDeployableExplosive : USQMapWidgetDeployable {
	ESQExplosiveType ExplosiveType; // 0x2b0
};

struct UParticleSystemReplay : UObject {
	int ClipIDNumber; // 0x28
};

struct ASQHUD : AHUD {
	TArray<FSQInputState> InputStateStack; // 0x338
	bool bTraceViewEnabled; // 0x348
	USQVehicleViewWidget* VehicleOverlayWidget; // 0x350
	USQBaseHudWidget* BaseHudWidget; // 0x358
	ASQMapMarker* CurrentlyShownHudMarker; // 0x360
	bool bEndOfRound; // 0x368
	float MapTopPadding; // 0x36c
	float MapRightPadding; // 0x370
	float MapBottomPadding; // 0x374
	float MapMaxWidthRatio; // 0x378
	FLinearColor MapGridLetterColor; // 0x37c
	FLinearColor SquadToSquadRadioColor; // 0x38c
	FLinearColor SquadToAllSquadsRadioColor; // 0x39c
	float MapGridLetterPadding; // 0x3ac
	float MapGridLetterScale; // 0x3b0
	TArray<AActor*> LineOfSightDrawTextCache; // 0x3b8
	USQCoreStateSelectionHUB* SelectionHUB; // 0x3c8
	USQCoreStateMapComponent* MapComponent; // 0x3d0
	USQMapWidgetBase* MapWidgetBase; // 0x3d8
	USQCoreStateSpawnPointsListComponent* SpawnPointsListComponent; // 0x3e0
	USQCoreStateSquadListComponent* SquadListComponent; // 0x3e8
	USQCoreStateRolesSquadListComponent* RoleSquadListComponent; // 0x3f0
	USQNetworkPollingComponent* NetworkPolling; // 0x3f8
	UTexture2D* HUDMainTexture; // 0x438
	UTexture2D* LowHealthOverlayTexture; // 0x440
	UMaterialInterface* CircularProgressMaterial; // 0x448
	FName CircularProgressMaterialPercentageName; // 0x450
	FName CircularProgressMaterialTransparencyName; // 0x458
	FName CircularProgressMaterialColorName; // 0x460
	TMap<ASQSoldier*, UMaterialInstanceDynamic*> CircularProgressMIDMap; // 0x468
	UTexture* MedicIconTexture; // 0x4b8
	UTexture* HealedIconTexture; // 0x4c0
	UTexture* DragIconTexture; // 0x4c8
	UTexture* VehicleRepairIconTexture; // 0x4d0
	UTexture* BleedingIconTexture; // 0x4d8
	UTexture* ItemCollisionIconTexture; // 0x4e0
	UFont* BigFont; // 0x4e8
	UFont* NormalFont; // 0x4f0
	UFont* NametagFont; // 0x4f8
	UFont* ChatMessageFont; // 0x500
	UFont* SystemMessageFont; // 0x508
	FLinearColor TicketTextColor; // 0x510
	TArray<FSQRemoteTalkerDisplayInfo> RemoteTalkers; // 0x520
	TArray<FSQRemoteTalkerDisplayInfo> TestTalkers; // 0x530
	bool bUseTestTalkers; // 0x540
	ESQVoiceChannel OwnerSpeakingState; // 0x541
	FSQMessageBoxInfo ChatBoxInfo; // 0x548
	FSQMessageBoxInfo SystemMessageBoxInfo; // 0x5c0
	FSQMessageBoxInfo GameNotificationBoxInfo; // 0x638
	FSQMessageBoxInfo PlayerNotificationBoxInfo; // 0x6b0
	FLinearColor SystemMessagesColor; // 0x728
	char bShouldOffsetSpawnText : 1; // 0x73c
	char bShouldShowEnemyFobWidgets : 1; // 0x73c
	int StartingMapZoomLevel; // 0x740
	TArray<float> MapZoomLevels; // 0x748
	USQScoreboard* ScoreBoard; // 0x788
	USQDrawChatWidget* ChatDrawingWidget; // 0x790
	float NametagDistantVisibilityDropoffStart; // 0x7a8
	float NametagDistantVisibilityDropoffFinish; // 0x7ac
	float NametagDistantVisibilitySize; // 0x7b0
	float NametagNearVerticalOffset; // 0x7b4
	float NametagFarVerticalOffset; // 0x7b8
	float NametagNearVerticalInterpStart; // 0x7bc
	float NametagFadingInterpStart; // 0x7c0
	float UsableDistantVisibilityDropoffStart; // 0x7c4
	float UsableDistantVisibilityDropoffFinish; // 0x7c8
	float UsableDistantVisibilitySize; // 0x7cc
	float UsableNearVerticalOffset; // 0x7d0
	float UsableFarVerticalOffset; // 0x7d4
	float UsableNearVerticalInterpStart; // 0x7d8
	float UsableFadingInterpStart; // 0x7dc
	FLinearColor EnemyColor; // 0x7e0
	FLinearColor TeamColor; // 0x7f0
	FLinearColor SquadColor; // 0x800
	FLinearColor FireTeamColor; // 0x810
	FLinearColor NametagOutlineColor; // 0x820
	float MaxDistanceToShowHUDIcons; // 0x830
	float MaxDistanceToShowWoundedHUDIcons; // 0x834
	float MaxDistanceToShowDragHUDIcons; // 0x838
	FName BoneForDragIcon; // 0x83c
	float DragIconXOffset; // 0x844
	float DragIconYOffset; // 0x848
	FLinearColor DragHUDIconColor; // 0x84c
	float DragHUDIconSizeMultiplier; // 0x85c
	FName BoneForBleedingIcon; // 0x860
	FVector HUDIconOffset; // 0x868
	FVector HUDIconCrouchedOffset; // 0x874
	FVector HUDIconProneOffset; // 0x880
	FVector HUDIconWoundedOffset; // 0x88c
	float HUDIconFarSize; // 0x898
	float HUDIconNearSize; // 0x89c
	FVector2D HealedIconOffset; // 0x8a0
	FVector2D HealedIconSize; // 0x8a8
	FVector2D ItemCollisionIconOffset; // 0x8b0
	FVector2D ItemCollisionIconSize; // 0x8b8
	float MaxTimeSinceLastHealedToDrawHealedIcon; // 0x8c0
	float MaxTimeSinceLastRepairedToDrawRepairedIcon; // 0x8c4
	UCurveLinearColor* HealthColorCurve; // 0x8c8
	bool bHudWidgetsEnabled; // 0x8d0
	FScriptMulticastDelegate OnChatReceived; // 0x8e8
	USoundBase* CommandVoiceStartingSound; // 0x8f8
	USoundBase* CommandVoiceEndingSound; // 0x900
	USoundBase* SquadVoiceStartingSound; // 0x908
	USoundBase* SquadVoiceEndingSound; // 0x910
	FSQLedColorScheme LedColorScheme; // 0x920
	USQColorsDataAsset* ColorsDataAsset; // 0x9f0
	UEnum* ChatEnumObj; // 0x9f8
	FScriptMulticastDelegate OnWorldOriginUpdated; // 0xa00
};

struct UBlendSpace1D : UBlendSpaceBase {
	bool bScaleAnimation; // 0x148
};

struct USQCoreStateSquadItemWidget : USQCoreStateSquadListWidget {
	ASQSquadState* SquadState; // 0x260
	int SquadId; // 0x268
	FString SquadName; // 0x270
	FString LeaderName; // 0x280
	int MemberNum; // 0x290
	int MaxMembers; // 0x294
	bool bIsSelfInSquad; // 0x298
	bool bIsCommandSquad; // 0x299
	EJoinButtonState JoinButtonState; // 0x29a
	ASQPlayerController* CachedSQPlayerController; // 0x2a0
};

struct ABP_RPG7_Frag_3Mag_Founders_C : ABP_RPG7_Frag_3Mag_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct USQDataSettings : UDeveloperSettings {
	bool UseAdditiveLayer; // 0x38
	USQLevel* LevelClass; // 0x40
	USQLayer* LayerClass; // 0x48
	USQFaction* FactionClass; // 0x50
	USQFactionSetup* FactionSetupClass; // 0x58
	int SecondsTimeForCollectingCommanderChoices; // 0x60
	int SecondsTimeForCollectingCommanderChoicesCooldown; // 0x64
	int MinimumSquadSizeForVoting; // 0x68
	int MinimumSquadsRequiredForVoting; // 0x6c
	FSQVoteConfig CommanderVoteConfig; // 0x70
	bool UseVoteLevel; // 0xb0
	int LevelCountPerVote; // 0xb4
	FSQVoteConfig LevelVoteConfig; // 0xb8
	bool UseVoteLayer; // 0xf8
	int LayerCountPerVote; // 0xfc
	FSQVoteConfig LayerVoteConfig; // 0x100
	bool UseVoteFactions; // 0x140
	bool PreventSameFaction; // 0x141
	int MaxInitializedTeamId; // 0x144
	int MaxTeamId; // 0x148
	TArray<FSQVoteConfig> FactionVoteConfigs; // 0x150
};

struct UImageSequenceProtocol_PNG : UCompressedImageSequenceProtocol {
	int CompressionQuality; // 0xd8
};

struct USQCountParameter_Legacy : USQCountParameterBase {
	TArray<FSQRoleGroupLimit> GroupLimits; // 0x60
	FSQRoleLimit RoleLimit; // 0x70
};

struct UMaterialExpressionSpeedTree : UMaterialExpression {
	FExpressionInput GeometryInput; // 0x40
	FExpressionInput WindInput; // 0x54
	FExpressionInput LODInput; // 0x68
	FExpressionInput ExtraBendWS; // 0x7c
	ESpeedTreeGeometryType GeometryType; // 0x90
	ESpeedTreeWindType WindType; // 0x91
	ESpeedTreeLODType LODType; // 0x92
	float BillboardThreshold; // 0x94
	bool bAccurateWindVelocities; // 0x98
};

struct UFireShake_Large_C : UCameraShake {
	char bSingleInstance : 1; // 0x28
	float OscillationDuration; // 0x2c
	float OscillationBlendInTime; // 0x30
	float OscillationBlendOutTime; // 0x34
	FROscillator RotOscillation; // 0x38
	FVOscillator LocOscillation; // 0x5c
	FFOscillator FOVOscillation; // 0x80
	float AnimPlayRate; // 0x8c
	float AnimScale; // 0x90
	float AnimBlendInTime; // 0x94
	float AnimBlendOutTime; // 0x98
	float RandomAnimSegmentDuration; // 0x9c
	UCameraAnim* Anim; // 0xa0
	char bRandomAnimSegment : 1; // 0xa8
	APlayerCameraManager* CameraOwner; // 0xc0
	float ShakeScale; // 0x148
	float OscillatorTimeRemaining; // 0x14c
	UCameraAnimInst* AnimInst; // 0x150
};

struct UMaterialExpressionParticleRandom : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct ABP_RPG7_Thermo_Founders_C : ABP_RPG7_Thermo_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UPawnAction_Wait : UPawnAction {
	float TimeToWait; // 0x98
};

struct USQMovementAdjustmentComponent : UBoxComponent {
	float SoldierMovementSpeedMultiplayer; // 0x430
};

struct USoundNodeDialoguePlayer : USoundNode {
	FDialogueWaveParameter DialogueWaveParameter; // 0x40
	char bLooping : 1; // 0x60
};

struct USQRotor : UObject {
	USQRotorSetup* RotorSetup; // 0x28
	UObject* WorldContextObject; // 0x58
};

struct UBP_M4M203_Rifle_M68_StaticInfo_C : UBP_M4M203_Rifle_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UBP_MaterialEffects_Frag_C : UBP_MaterialEffects_HEAT_C {
	TMap<USQPhysicalMaterial*, FSQEffectsSet> Effects; // 0x28
};

struct USQDeployableSpawnerSettings : USQSettings {
	FName ID; // 0x30
	FDataTableRowHandle Data; // 0x38
	FString ModId; // 0x48
};

struct UNavigationSystemModuleConfig : UNavigationSystemConfig {
	char bStrictlyStatic : 1; // 0x48
	char bCreateOnClient : 1; // 0x48
	char bAutoSpawnMissingNavData : 1; // 0x48
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x48
};

struct UInputKeySelector : UWidget {
	FButtonStyle WidgetStyle; // 0x108
	FTextBlockStyle TextStyle; // 0x380
	FInputChord SelectedKey; // 0x5e8
	FSlateFontInfo Font; // 0x608
	FMargin Margin; // 0x658
	FLinearColor ColorAndOpacity; // 0x668
	FText KeySelectionText; // 0x678
	FText NoKeySpecifiedText; // 0x690
	bool bAllowModifierKeys; // 0x6a8
	bool bAllowGamepadKeys; // 0x6a9
	TArray<FKey> EscapeKeys; // 0x6b0
	FScriptMulticastDelegate OnKeySelected; // 0x6c0
	FScriptMulticastDelegate OnIsSelectingKeyChanged; // 0x6d0
};

struct USQSaveGameWrapper : UObject {
	USaveGame* SaveGameClass; // 0x28
	FString SlotName; // 0x30
	bool bClientOnly; // 0x40
	USaveGame* SaveGame; // 0x48
};

struct UPlaneReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadiusScale; // 0x290
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x298
	UBoxComponent* PreviewCaptureBox; // 0x2a0
};

struct UMovieSceneParticleTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> ParticleSections; // 0x58
};

struct USQMapWidgetRallyPoint : USQMapWidgetSpawnPoint {
	int NumberOfSpawns; // 0x2c8
	int SquadId; // 0x2cc
	char bIsInSelfSquad : 1; // 0x2d0
	ASQSquadState* SquadState; // 0x2d8
};

struct ULevelActorContainer : UObject {
	TArray<AActor*> Actors; // 0x28
};

struct UParticleModuleTypeDataBeam2 : UParticleModuleTypeDataBase {
	EBeam2Method BeamMethod; // 0x30
	int TextureTile; // 0x34
	float TextureTileDistance; // 0x38
	int Sheets; // 0x3c
	int MaxBeamCount; // 0x40
	float Speed; // 0x44
	int InterpolationPoints; // 0x48
	char bAlwaysOn : 1; // 0x4c
	int UpVectorStepSize; // 0x50
	FName BranchParentName; // 0x54
	FRawDistributionFloat distance; // 0x60
	EBeamTaperMethod TaperMethod; // 0x98
	FRawDistributionFloat TaperFactor; // 0xa0
	FRawDistributionFloat TaperScale; // 0xd8
	char RenderGeometry : 1; // 0x110
	char RenderDirectLine : 1; // 0x110
	char RenderLines : 1; // 0x110
	char RenderTessellation : 1; // 0x110
};

struct AGridPathAIController : AAIController {
	char bStopAILogicOnUnposses : 1; // 0x2f8
	char bLOSflag : 1; // 0x2f8
	char bSkipExtraLOSChecks : 1; // 0x2f8
	char bAllowStrafe : 1; // 0x2f8
	char bWantsPlayerState : 1; // 0x2f8
	char bSetControlRotationFromPawnOrientation : 1; // 0x2f8
	UPathFollowingComponent* PathFollowingComponent; // 0x300
	UBrainComponent* BrainComponent; // 0x308
	UAIPerceptionComponent* PerceptionComponent; // 0x310
	UPawnActionsComponent* ActionsComp; // 0x318
	UBlackboardComponent* Blackboard; // 0x320
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x328
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x330
	FScriptMulticastDelegate ReceiveMoveCompleted; // 0x338
};

struct ASQPlayerCameraManager : APlayerCameraManager {
	TArray<UCameraShake*> IgnoredShakeClasses; // 0x26f8
	bool bDrawStencils; // 0x2708
	bool bIgnoreInactiveEffects; // 0x2709
	UMaterialInterface* StencilPostProcessMaterial; // 0x2710
	TArray<USQLocalCameraEffectHandler*> CameraEffectTypes; // 0x2718
	TArray<USQLocalCameraEffectHandler*> CameraEffects; // 0x2728
	TArray<USQLocalAudioEffectHandler*> AudioEffectTypes; // 0x2738
	TArray<USQLocalAudioEffectHandler*> AudioEffects; // 0x2748
	ASQSoldier* CurrentSoldier; // 0x2758
};

struct ALandscapeBlueprintBrushBase : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UAbilitySystemGlobals : UObject {
	FSoftClassPath AbilitySystemGlobalsClassName; // 0x28
	FGameplayTag ActivateFailIsDeadTag; // 0x68
	FName ActivateFailIsDeadName; // 0x70
	FGameplayTag ActivateFailCooldownTag; // 0x78
	FName ActivateFailCooldownName; // 0x80
	FGameplayTag ActivateFailCostTag; // 0x88
	FName ActivateFailCostName; // 0x90
	FGameplayTag ActivateFailTagsBlockedTag; // 0x98
	FName ActivateFailTagsBlockedName; // 0xa0
	FGameplayTag ActivateFailTagsMissingTag; // 0xa8
	FName ActivateFailTagsMissingName; // 0xb0
	FGameplayTag ActivateFailNetworkingTag; // 0xb8
	FName ActivateFailNetworkingName; // 0xc0
	int MinimalReplicationTagCountBits; // 0xc8
	bool bAllowGameplayModEvaluationChannels; // 0xcc
	EGameplayModEvaluationChannel DefaultGameplayModEvaluationChannel; // 0xcd
	FName GameplayModEvaluationChannelAliases[0xa]; // 0xd0
	FSoftObjectPath GlobalCurveTableName; // 0x120
	UCurveTable* GlobalCurveTable; // 0x138
	FSoftObjectPath GlobalAttributeMetaDataTableName; // 0x140
	UDataTable* GlobalAttributeMetaDataTable; // 0x158
	FSoftObjectPath GlobalAttributeSetDefaultsTableName; // 0x160
	TArray<FSoftObjectPath> GlobalAttributeSetDefaultsTableNames; // 0x178
	TArray<UCurveTable*> GlobalAttributeDefaultsTables; // 0x188
	FSoftObjectPath GlobalGameplayCueManagerClass; // 0x198
	FSoftObjectPath GlobalGameplayCueManagerName; // 0x1b0
	TArray<FString> GameplayCueNotifyPaths; // 0x1c8
	FSoftObjectPath GameplayTagResponseTableName; // 0x1d8
	UGameplayTagReponseTable* GameplayTagResponseTable; // 0x1f0
	bool PredictTargetGameplayEffects; // 0x1f8
	UGameplayCueManager* GlobalGameplayCueManager; // 0x200
};

struct ABP_RPG7_Tandem_Heat_Proj2_C : ABP_RPG7_Heat_Proj2_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x520
	USkeletalMeshComponent* SkeletalMesh; // 0x528
	UParticleSystem* BPEffectOnUnderMinFlightTime; // 0x530
	USoundBase* BPSoundonUnderMinFlightTime; // 0x538
};

struct UOverlaySlot : UPanelSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UMovieSceneFloatTrack : UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UParticleModuleSubUVBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UInterpToMovementComponent : UMovementComponent {
	float Duration; // 0x118
	char bPauseOnImpact : 1; // 0x11c
	bool bSweep; // 0x120
	ETeleportType TeleportType; // 0x121
	EInterpToBehaviourType BehaviourType; // 0x122
	bool bCheckIfStillInWorld; // 0x123
	char bForceSubStepping : 1; // 0x124
	FScriptMulticastDelegate OnInterpToReverse; // 0x128
	FScriptMulticastDelegate OnInterpToStop; // 0x138
	FScriptMulticastDelegate OnWaitBeginDelegate; // 0x148
	FScriptMulticastDelegate OnWaitEndDelegate; // 0x158
	FScriptMulticastDelegate OnResetDelegate; // 0x168
	float MaxSimulationTimeStep; // 0x178
	int MaxSimulationIterations; // 0x17c
	TArray<FInterpControlPoint> ControlPoints; // 0x180
};

struct USoundAttenuation : UObject {
	FSoundAttenuationSettings Attenuation; // 0x28
};

struct USQHelicopterCollisionDamage : USQCollisionDamage {
	float FlightDynamicImpulseMultiplier; // 0x110
};

struct USQLoadingScreenSettings : UDeveloperSettings {
	UTexture2D* DefaultLoadingScreen; // 0x38
	UTexture2D* DefaultLoadingScreenUltraWide; // 0x60
	FText NowDeployingText; // 0x88
	FSlateBrush Brush_DescriptionBorder; // 0xa0
	FSlateBrush Brush_Throbber; // 0x128
	FSlateFontInfo Font_NowDeployingText; // 0x1b0
	FSlateFontInfo Font_Description; // 0x200
	FSlateFontInfo Font_Level; // 0x250
	FSlateFontInfo Font_Layer; // 0x2a0
	FSlateFontInfo Font_GameMode; // 0x2f0
	FLinearColor Color_Base; // 0x340
	FLinearColor Color_Accent; // 0x350
};

struct UMaterialExpressionArctangent : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct ABP_M4_2Mags_Founders_C : ABP_M4_2Mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4M203_UGL_Woodland_Parent_C : ABP_M4M203_M68_UGL_Woodland_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USafeZoneSlot : UPanelSlot {
	bool bIsTitleSafe; // 0x38
	FMargin SafeAreaScale; // 0x3c
	EHorizontalAlignment HAlign; // 0x4c
	EVerticalAlignment VAlign; // 0x4d
	FMargin Padding; // 0x50
};

struct UCoreGetAllItemsCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UBP_Attachment_M150_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UClothingAsset : UClothingAssetBase {
	UPhysicsAsset* PhysicsAsset; // 0x48
	FClothConfig ClothConfig; // 0x50
	TArray<FClothLODData> LODData; // 0x128
	TArray<int> LodMap; // 0x138
	TArray<FName> UsedBoneNames; // 0x148
	TArray<int> UsedBoneIndices; // 0x158
	int ReferenceBoneIndex; // 0x168
	UClothingAssetCustomData* customData; // 0x170
};

struct UMaterialExpressionDotProduct : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UInterpGroupDirector : UInterpGroup {
	TArray<UInterpTrack*> InterpTracks; // 0x30
	FName GroupName; // 0x40
	FColor GroupColor; // 0x48
	char bCollapsed : 1; // 0x4c
	char bVisible : 1; // 0x4c
	char bIsFolder : 1; // 0x4c
	char bIsParented : 1; // 0x4c
	char bIsSelected : 1; // 0x4c
};

struct USQVoteSession : UObject {
	FSQVote Vote; // 0x28
	FSQVoteSessionInfo State; // 0x60
};

struct UBlackboardKeyType_String : UBlackboardKeyType {
	FString StringValue; // 0x30
};

struct UHapticFeedbackEffect_SoundWave : UHapticFeedbackEffect_Base {
	USoundWave* SoundWave; // 0x28
};

struct ATriggerBase : AActor {
	UShapeComponent* CollisionComponent; // 0x248
};

struct UBP_Attachment_M150_SA80_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMaterialExpressionRotateAboutAxis : UMaterialExpression {
	FExpressionInput NormalizedRotationAxis; // 0x40
	FExpressionInput RotationAngle; // 0x54
	FExpressionInput PivotPoint; // 0x68
	FExpressionInput Position; // 0x7c
	float Period; // 0x90
};

struct UAnimMontage : UAnimCompositeBase {
	FAlphaBlend BlendIn; // 0xa8
	float BlendInTime; // 0xd8
	FAlphaBlend BlendOut; // 0xe0
	float blendOutTime; // 0x110
	float BlendOutTriggerTime; // 0x114
	FName SyncGroup; // 0x118
	int SyncSlotIndex; // 0x120
	FMarkerSyncData MarkerData; // 0x128
	TArray<FCompositeSection> CompositeSections; // 0x148
	TArray<FSlotAnimationTrack> SlotAnimTracks; // 0x158
	TArray<FBranchingPoint> BranchingPoints; // 0x168
	bool bEnableRootMotionTranslation; // 0x178
	bool bEnableRootMotionRotation; // 0x179
	bool bEnableAutoBlendOut; // 0x17a
	ERootMotionRootLock RootMotionRootLock; // 0x17b
	TArray<FBranchingPointMarker> BranchingPointMarkers; // 0x180
	TArray<int> BranchingPointStateNotifyIndices; // 0x190
	FTimeStretchCurve TimeStretchCurve; // 0x1a0
	FName TimeStretchCurveName; // 0x1c8
};

struct UPlayFabProfilesAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xf0
	UPlayFabJsonObject* RequestJsonObj; // 0xf8
	UPlayFabJsonObject* ResponseJsonObj; // 0x100
};

struct ULandscapeWeightmapUsage : UObject {
	ULandscapeComponent* ChannelUsage[0x4]; // 0x28
	FGuid LayerGuid; // 0x48
};

struct ABP_M4M203_M68_UGL_Woodland_Parent_C : ABP_M4M203_M68_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UEnvQueryTest_Trace : UEnvQueryTest {
	FEnvTraceData TraceData; // 0x1c0
	FAIDataProviderBoolValue TraceFromContext; // 0x1f0
	FAIDataProviderFloatValue ItemHeightOffset; // 0x220
	FAIDataProviderFloatValue ContextHeightOffset; // 0x250
	UEnvQueryContext* Context; // 0x280
};

struct UBTDecorator_ReachedMoveGoal : UBTDecorator {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct USQCommanderVotingPlayerItem : USQUserWidget {
	bool bIsVotedByPlayer; // 0x230
	int VoteCount; // 0x234
	FString NomineeName; // 0x238
	ASQPlayerState* NomineePlayerState; // 0x248
};

struct UParticleModuleVelocityInheritParent : UParticleModuleVelocityBase {
	FRawDistributionVector Scale; // 0x38
};

struct ABP_AK74M_1P63_C : ABP_AK74M_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UReplicationGraph : UReplicationDriver {
	UNetReplicationGraphConnection* ReplicationConnectionManagerClass; // 0x28
	UNetDriver* NetDriver; // 0x30
	TArray<UNetReplicationGraphConnection*> Connections; // 0x38
	TArray<UNetReplicationGraphConnection*> PendingConnections; // 0x48
	TArray<UReplicationGraphNode*> GlobalGraphNodes; // 0x98
	TArray<UReplicationGraphNode*> PrepareForReplicationNodes; // 0xa8
};

struct UDynamicEntryBoxBase : UWidget {
	EDynamicBoxType EntryBoxType; // 0x108
	FVector2D EntrySpacing; // 0x10c
	TArray<FVector2D> SpacingPattern; // 0x118
	FSlateChildSize EntrySizeRule; // 0x128
	EHorizontalAlignment EntryHorizontalAlignment; // 0x130
	EVerticalAlignment EntryVerticalAlignment; // 0x131
	int MaxElementSize; // 0x134
	FUserWidgetPool EntryWidgetPool; // 0x148
};

struct UCheckBox : UContentWidget {
	ECheckBoxState CheckedState; // 0x120
	DelegateProperty CheckedStateDelegate; // 0x124
	FCheckBoxStyle WidgetStyle; // 0x138
	USlateWidgetStyleAsset* Style; // 0x6b8
	USlateBrushAsset* UncheckedImage; // 0x6c0
	USlateBrushAsset* UncheckedHoveredImage; // 0x6c8
	USlateBrushAsset* UncheckedPressedImage; // 0x6d0
	USlateBrushAsset* CheckedImage; // 0x6d8
	USlateBrushAsset* CheckedHoveredImage; // 0x6e0
	USlateBrushAsset* CheckedPressedImage; // 0x6e8
	USlateBrushAsset* UndeterminedImage; // 0x6f0
	USlateBrushAsset* UndeterminedHoveredImage; // 0x6f8
	USlateBrushAsset* UndeterminedPressedImage; // 0x700
	EHorizontalAlignment HorizontalAlignment; // 0x708
	FMargin Padding; // 0x70c
	FSlateColor BorderBackgroundColor; // 0x720
	bool IsFocusable; // 0x748
	FScriptMulticastDelegate OnCheckStateChanged; // 0x750
};

struct UParticleModuleColorScaleOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorScaleOverLife; // 0x30
	FRawDistributionFloat AlphaScaleOverLife; // 0x80
	char bEmitterTime : 1; // 0xb8
};

struct UBlackboardData : UDataAsset {
	UBlackboardData* Parent; // 0x30
	TArray<FBlackboardEntry> Keys; // 0x38
	char bHasSynchronizedKeys : 1; // 0x48
};

struct USQVehicleTrack : USQDriveTrainComponent {
	bool bRightSideTrack; // 0x598
	bool bLeftSideTrack; // 0x599
};

struct ABP_M72A7_C : ABP_GenericRocketLauncher_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UTestMovieSceneTrack : UMovieSceneTrack {
	bool bHighPassFilter; // 0x58
	TArray<UMovieSceneSection*> SectionArray; // 0x60
};

struct ABP_AK74MGP25_UGL_Desert_Smoke_C : ABP_AK74MGP25_UGL_Desert_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAnimCompositeBase : UAnimSequenceBase {
	TArray<FAnimNotifyEvent> Notifies; // 0x80
	float SequenceLength; // 0x90
	float RateScale; // 0x94
	FRawCurveTracks RawCurveData; // 0x98
};

struct UBuildPatchManifest : UObject {
	char ManifestFileVersion; // 0x28
	bool bIsFileData; // 0x29
	uint32 AppID; // 0x2c
	FString AppName; // 0x30
	FString BuildVersion; // 0x40
	FString LaunchExe; // 0x50
	FString LaunchCommand; // 0x60
	TSet<FString> PrereqIds; // 0x70
	FString PrereqName; // 0xc0
	FString PrereqPath; // 0xd0
	FString PrereqArgs; // 0xe0
	TArray<FFileManifestData> FileManifestList; // 0xf0
	TArray<FChunkInfoData> ChunkList; // 0x100
	TArray<FCustomFieldData> CustomFields; // 0x110
};

struct ABP_L85A2AG36_ElcanLDS_UGL_Smoke_Red_C : ABP_L85A2AG36_ElcanLDS_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct AVectorFieldVolume : AActor {
	UVectorFieldComponent* VectorFieldComponent; // 0x248
};

struct USQRotorBladesComponent : USQVehicleComponent {
	UCameraShake* DestructionCameraShake; // 0x588
	float DestructionShakeScale; // 0x590
	float CollisionDestructionThrustThreshold; // 0x594
	TArray<EObjectTypeQuery> ObjectTypes; // 0x598
	float DamagePerSec; // 0x5a8
	bool bIsMainRotor; // 0x5ac
	TArray<AActor*> IgnoredActors; // 0x5b0
	ASQHelicopter2* Owner; // 0x630
	bool bInCollision; // 0x638
	UStaticMeshComponent* OverlapMesh; // 0x640
};

struct UMaterialExpressionCollectionParameter : UMaterialExpression {
	UMaterialParameterCollection* Collection; // 0x40
	FName ParameterName; // 0x48
	FGuid ParameterId; // 0x50
};

struct UMovieScene3DPathSection : UMovieScene3DConstraintSection {
	FMovieSceneFloatChannel TimingCurve; // 0x108
	MovieScene3DPathSection_Axis FrontAxisEnum; // 0x1a8
	MovieScene3DPathSection_Axis UpAxisEnum; // 0x1a9
	char bFollow : 1; // 0x1ac
	char bReverse : 1; // 0x1ac
	char bForceUpright : 1; // 0x1ac
};

struct USQCompass : USQUserWidget {
	bool bIsOwnerMedic; // 0x230
	float RotationXFix; // 0x234
	float XScale; // 0x238
	float MaxVisibilityDistance; // 0x23c
	float YPositionOffset; // 0x240
	float TotalScale; // 0x244
	float BearingLERP; // 0x248
	bool bDoCompassLERP; // 0x24c
	bool bShouldHide; // 0x24d
};

struct UParticleModuleSizeScaleBySpeed : UParticleModuleSizeBase {
	FVector2D SpeedScale; // 0x30
	FVector2D MaxScale; // 0x38
};

struct USQAnimDataEmotes : UDataAsset {
	FSQEmoteAnims EmoteAnims[0xa]; // 0x30
	TMap<FName, FSQEmoteAnims> CustomEmotes; // 0x1c0
};

struct USQVehicleAnimInstance : UVehicleAnimInstance {
	ASQGroundVehicle* Vehicle; // 0x970
	bool bIsEngineActive; // 0x978
	FRotator SteeringWheelRotation; // 0x97c
};

struct AGeometryCacheActor : AActor {
	UGeometryCacheComponent* GeometryCacheComponent; // 0x248
};

struct ABP_M9_3Mags_C : ABP_M9_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQMapTextComponent : USQMapItemComponent {
	FText Text; // 0x130
};

struct UDialogueWave : UObject {
	char bMature : 1; // 0x28
	char bOverride_SubtitleOverride : 1; // 0x28
	FString SpokenText; // 0x30
	FString SubtitleOverride; // 0x40
	TArray<FDialogueContextMapping> ContextMappings; // 0x50
	FGuid LocalizationGUID; // 0x60
};

struct UFoliageInstancedStaticMeshComponent : UHierarchicalInstancedStaticMeshComponent {
	FScriptMulticastDelegate OnInstanceTakePointDamage; // 0x618
	FScriptMulticastDelegate OnInstanceTakeRadialDamage; // 0x628
};

struct UDestroySessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct USQSoldierRagdollComponent : UActorComponent {
	float TimeTillAutoGetUp; // 0xd8
	float AutoGetUpRetryFrequency; // 0xdc
	float RecoveryBlendSeconds; // 0xe0
	float FreezeBodyCheckFrequency; // 0xe4
	FName PelvisBoneName; // 0xe8
	UPhysicsAsset* RagdollPhysicsAsset; // 0xf0
	float CorrectionBaseRatio; // 0xf8
	float CorrectionMaxAddedRatio; // 0xfc
	float ErrorStateSecondsToMaxRatio; // 0x100
	float LinearErrorThreshold; // 0x104
	float LinearVelocitySleepThreshold; // 0x108
	float BulletImpactMultiplier; // 0x10c
	float ExplosionImpactMultiplier; // 0x110
	float SecondsWithVehicleCollision; // 0x114
	ESQSoldierRagdollReason RagdollState; // 0x119
	FVector_NetQuantize100 ServerPelvisLocationZeroBased; // 0x11c
	FVector UnragdolLocationOffset; // 0x128
	char bBodyHasSettled : 1; // 0x148
	ASQEquipableItem* DroppedWeapon; // 0x150
	ASQSoldierNew* OwnerSoldier; // 0x158
	UPhysicsHandleComponent* FreezeBodyConstraintHandle; // 0x170
};

struct USQAnimInstance : UAnimInstance {
	int LastBoredMontagePlayedIndex; // 0x268
	float BoredTargetTime; // 0x26c
	bool bIsAds; // 0x270
	bool bIsUsingItemOrIsAdsOrIsClimbing; // 0x271
	USQItemStaticInfo* CurrentItemStaticInfo; // 0x278
	ASQSoldier* Soldier; // 0x280
	ASQSoldierNew* SoldierNew; // 0x288
};

struct UPawnAction_Repeat : UPawnAction {
	UPawnAction* ActionToRepeat; // 0x98
	UPawnAction* RecentActionCopy; // 0xa0
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
};

struct USoundNodeAssetReferencer : USoundNode {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct AOnlineBeacon : AActor {
	float BeaconConnectionInitialTimeout; // 0x250
	float BeaconConnectionTimeout; // 0x254
	UNetDriver* NetDriver; // 0x258
};

struct ABP_M4A1_Foregrip_C : ABP_M4A1_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UFieldNodeVector : UFieldNodeBase {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UInterpTrackVisibility : UInterpTrack {
	TArray<FVisibilityTrackKey> VisibilityTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UAIResource_Movement : UGameplayTaskResource {
	int ManualResourceID; // 0x28
	uint8 AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UMovieSceneSkeletalAnimationTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x58
	bool bUseLegacySectionIndexBlend; // 0x68
};

struct UGameplayCueNotify_HitImpact : UGameplayCueNotify_Static {
	USoundBase* Sound; // 0x50
	UParticleSystem* ParticleSystem; // 0x58
};

struct UBP_Attachment_M68_Woodland_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMovieSceneVisibilityTrack : UMovieSceneBoolTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UActorSequenceComponent : UActorComponent {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0xd8
	UActorSequence* Sequence; // 0xf0
	UActorSequencePlayer* SequencePlayer; // 0xf8
};

struct USoundBase : UObject {
	USoundClass* SoundClassObject; // 0x28
	char bDebug : 1; // 0x30
	char bOverrideConcurrency : 1; // 0x30
	char bOutputToBusOnly : 1; // 0x30
	char bHasDelayNode : 1; // 0x30
	char bHasConcatenatorNode : 1; // 0x30
	char bBypassVolumeScaleForPriority : 1; // 0x30
	EVirtualizationMode VirtualizationMode; // 0x31
	TSet<USoundConcurrency*> ConcurrencySet; // 0x38
	FSoundConcurrencySettings ConcurrencyOverrides; // 0x88
	float Duration; // 0xa8
	float MaxDistance; // 0xac
	float TotalSamples; // 0xb0
	float Priority; // 0xb4
	USoundAttenuation* AttenuationSettings; // 0xb8
	FSoundModulation Modulation; // 0xc0
	USoundSubmix* SoundSubmixObject; // 0xd0
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0xd8
	USoundEffectSourcePresetChain* SourceEffectChain; // 0xe8
	TArray<FSoundSourceBusSendInfo> BusSends; // 0xf0
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x100
};

struct UAsyncActionChangePrimaryAssetBundles : UAsyncActionLoadPrimaryAssetBase {
	FScriptMulticastDelegate Completed; // 0x78
};

struct USteamNetDriver : UIpNetDriver {
	char LogPortUnreach : 1; // 0x748
	char AllowPlayerPortUnreach : 1; // 0x748
	uint32 MaxPortCountToTry; // 0x74c
	uint32 ServerDesiredSocketReceiveBufferBytes; // 0x75c
	uint32 ServerDesiredSocketSendBufferBytes; // 0x760
	uint32 ClientDesiredSocketReceiveBufferBytes; // 0x764
	uint32 ClientDesiredSocketSendBufferBytes; // 0x768
	double MaxSecondsInReceive; // 0x770
	int NbPacketsBetweenReceiveTimeTest; // 0x778
};

struct ABP_L85A2AG36_UGL_DarkEarth_Smoke_Blue_C : ABP_L85A2AG36_UGL_DarkEarth_Smoke_Red_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQNWheeledVehicleMovementComponent : UWheeledVehicleMovementComponentNW {
	TArray<int> WheelShaderCounts; // 0x468
	bool bEnableTurboBoost; // 0x478
	float MaxSpeedAllowedForEngineBoosting; // 0x47c
	float MaxSpeedToAssistWheels; // 0x480
	float WheelLongForceAssistMultiplier; // 0x484
	float WheelTorqueAssistMultiplier; // 0x488
	float MaxWheelRPMDuringWheelAssist; // 0x48c
};

struct ASkeletalMeshActor : AActor {
	char bShouldDoAnimNotifies : 1; // 0x250
	char bWakeOnLevelStart : 1; // 0x250
	USkeletalMeshComponent* SkeletalMeshComponent; // 0x258
	USkeletalMesh* ReplicatedMesh; // 0x260
	UPhysicsAsset* ReplicatedPhysAsset; // 0x268
	UMaterialInterface* ReplicatedMaterial0; // 0x270
	UMaterialInterface* ReplicatedMaterial1; // 0x278
};

struct UBP_AK74GP25_Rifle_Optic_StaticInfo_C : UBP_AK74GP25_Rifle_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UChildConnection : UNetConnection {
	UNetConnection* Parent; // 0x19a0
};

struct UPawnAction : UObject {
	UPawnAction* ChildAction; // 0x28
	UPawnAction* ParentAction; // 0x30
	UPawnActionsComponent* OwnerComponent; // 0x38
	UObject* Instigator; // 0x40
	UBrainComponent* BrainComp; // 0x48
	char bAllowNewSameClassInstance : 1; // 0x80
	char bReplaceActiveSameClassInstance : 1; // 0x80
	char bShouldPauseMovement : 1; // 0x80
	char bAlwaysNotifyOnFinished : 1; // 0x80
};

struct UMaterialExpressionShadingPathSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x3]; // 0x54
};

struct UPlayFabServerAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x8c0
	UPlayFabJsonObject* RequestJsonObj; // 0x8c8
	UPlayFabJsonObject* ResponseJsonObj; // 0x8d0
};

struct UMaterialExpressionSign : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMovieSceneComponentMaterialTrack : UMovieSceneMaterialTrack {
	int MaterialIndex; // 0x68
};

struct UMaterialExpressionObjectRadius : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UCineCameraComponent : UCameraComponent {
	FCameraFilmbackSettings FilmbackSettings; // 0x7c0
	FCameraLensSettings LensSettings; // 0x7cc
	FCameraFocusSettings FocusSettings; // 0x7e8
	float CurrentFocalLength; // 0x840
	float CurrentAperture; // 0x844
	float CurrentFocusDistance; // 0x848
	TArray<FNamedFilmbackPreset> FilmbackPresets; // 0x858
	TArray<FNamedLensPreset> LensPresets; // 0x868
	FString DefaultFilmbackPresetName; // 0x878
	FString DefaultLensPresetName; // 0x888
	float DefaultLensFocalLength; // 0x898
	float DefaultLensFStop; // 0x89c
};

struct ABP_40MM_Smoke_Red_Proj2_C : ABP_40MM_Smoke_Proj2_C {
	UParticleSystemComponent* Effect; // 0x548
	UParticleSystem* SmokeEffect; // 0x550
	USoundCue* SmokeSound; // 0x558
};

struct UDrawFrustumComponent : UPrimitiveComponent {
	FColor FrustumColor; // 0x408
	float FrustumAngle; // 0x40c
	float FrustumAspectRatio; // 0x410
	float FrustumStartDist; // 0x414
	float FrustumEndDist; // 0x418
	UTexture* Texture; // 0x420
};

struct USQDriveTrainComponent : USQVehicleComponent {
	float DropPercentage; // 0x588
};

struct UBP_M4_M68_Foregrip_StaticInfo_C : UBP_M4_Foregrip_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USQAmbientAndReverbComponent : USceneComponent {
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x218
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x219
	FSQReverbVolumeEffect ReverbEffectSettings; // 0x220
	UAudioComponent* SoundComponent; // 0x240
	USoundBase* SoundEffect; // 0x248
	float AmbientFadeInTime; // 0x250
	float AmbientFadeOutTime; // 0x254
};

struct AAtmosphericFog : AInfo {
	UAtmosphericFogComponent* AtmosphericFogComponent; // 0x248
};

struct ASQConstructionResource : ASQVehicleResource {
	float ResourceDropQuantity; // 0x248
	float ResourceDropRate; // 0x24c
	float ServerResourceRate; // 0x250
	ASQForwardBase* CurrentFob; // 0x258
	AActor* CurrentCaptureZone; // 0x260
	USQVehicleResourceWeaponInventoryComponent* ParentInventory; // 0x268
	int MaxResources; // 0x278
	int Resources; // 0x27c
};

struct UMovieSceneCameraShakeSection : UMovieSceneSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe0
	UCameraShake* ShakeClass; // 0x100
	float PlayScale; // 0x108
	ECameraAnimPlaySpace PlaySpace; // 0x10c
	FRotator UserDefinedPlaySpace; // 0x110
};

struct UMaterialExpressionDynamicParameter : UMaterialExpression {
	TArray<FString> ParamNames; // 0x40
	FLinearColor DefaultValue; // 0x50
	uint32 ParameterIndex; // 0x60
};

struct UMaterialExpressionPreviousFrameSwitch : UMaterialExpression {
	FExpressionInput CurrentFrame; // 0x40
	FExpressionInput PreviousFrame; // 0x54
};

struct USQHUDWidget : UObject {
	UUserWidget* UMGWidget; // 0x28
	FVector2D Position; // 0x30
	FVector2D OffsetPosition; // 0x38
	FVector2D WidgetOrigin; // 0x40
	FVector2D Size; // 0x48
	float ZOrder; // 0x50
	bool bUseScreenNormalizedCoordinates; // 0x54
	bool bBypassResolutionScaling; // 0x55
	float DesignedResolution; // 0x58
	bool bMaintainOriginalAspectRatio; // 0x5c
	float Alpha; // 0x60
	bool bHidden; // 0x64
	ASQGameState* GameState; // 0x68
	ASQHUD* HUD; // 0x70
	ASQPlayerController* PlayerController; // 0x78
	ASQPlayerState* PlayerState; // 0x80
	ASQSoldier* Soldier; // 0x88
	UCanvas* Canvas; // 0x90
	UTexture2D* DefaultTexture; // 0x98
	UTexture2D* GradientTexture0; // 0xa0
	FVector2D CanvasCenter; // 0xa8
	FVector2D CanvasSize; // 0xb0
	FVector2D DrawingPosition; // 0xb8
	FVector2D DrawingSize; // 0xc0
	float DrawingScale; // 0xc8
};

struct USocialChatManager : UObject {
	TMap<TWeakObjectPtr<USocialUser>, USocialPrivateMessageChannel*> DirectChannelsByTargetUser; // 0x78
	TMap<FString, USocialChatRoom*> ChatRoomsById; // 0xc8
	TMap<FString, USocialReadOnlyChatChannel*> ReadOnlyChannelsByDisplayName; // 0x118
	bool bEnableChatSlashCommands; // 0x168
	TMap<FUniqueNetIdRepl, USocialGroupChannel*> GroupChannels; // 0x170
};

struct ASQAIController : AAIController {
	UBlackboardComponent* BlackboardComp; // 0x350
	UBehaviorTreeComponent* BehaviorComp; // 0x358
};

struct UGameplayAbility_Montage : UGameplayAbility {
	UAnimMontage* MontageToPlay; // 0x400
	float PlayRate; // 0x408
	FName SectionName; // 0x40c
	TArray<UGameplayEffect*> GameplayEffectClassesWhileAnimating; // 0x418
	TArray<UGameplayEffect*> GameplayEffectsWhileAnimating; // 0x428
};

struct USQCaptureZoneComponent : USQGraphNodeComponent {
	char InitialTeam; // 0x150
	FText FlagName; // 0x158
	char CapturingTeam; // 0x170
	char OwningTeam; // 0x171
	char LastOwningTeam; // 0x172
	float TimeToCap; // 0x174
	bool Uncappable; // 0x178
	int PlayerAdvantageToCapture; // 0x17c
	int PlayersNeededWhenUncaptured; // 0x180
	float CapturePercent; // 0x184
	int CapturePercentDirection; // 0x188
	bool bIsLocked; // 0x18c
	FScriptMulticastDelegate CaptureStateChangeEvent; // 0x190
	USQCoreStateComponent* StateObject; // 0x1a0
	uint32 TeamCapturabilities; // 0x1c0
};

struct UTextBlock : UTextLayoutWidget {
	FText Text; // 0x128
	DelegateProperty TextDelegate; // 0x140
	FSlateColor ColorAndOpacity; // 0x150
	DelegateProperty ColorAndOpacityDelegate; // 0x178
	FSlateFontInfo Font; // 0x188
	FSlateBrush StrikeBrush; // 0x1d8
	FVector2D ShadowOffset; // 0x260
	FLinearColor ShadowColorAndOpacity; // 0x268
	DelegateProperty ShadowColorAndOpacityDelegate; // 0x278
	float MinDesiredWidth; // 0x288
	bool bWrapWithInvalidationPanel; // 0x28c
	bool bAutoWrapText; // 0x28d
	bool bSimpleTextMode; // 0x28e
};

struct ASQWheeledVehicleBase : ASQGroundVehicle {
	float DamagedDampingRateMultiplier; // 0xa20
	float DampingRateMultiplier; // 0xa24
};

struct USceneComponent : UActorComponent {
	TWeakObjectPtr<APhysicsVolume> PhysicsVolume; // 0xe0
	USceneComponent* AttachParent; // 0xe8
	FName AttachSocketName; // 0xf0
	TArray<USceneComponent*> AttachChildren; // 0xf8
	TArray<USceneComponent*> ClientAttachedChildren; // 0x108
	FVector RelativeLocation; // 0x144
	FRotator RelativeRotation; // 0x150
	FVector RelativeScale3D; // 0x15c
	FVector ComponentVelocity; // 0x168
	char bComponentToWorldUpdated : 1; // 0x174
	char bAbsoluteLocation : 1; // 0x174
	char bAbsoluteRotation : 1; // 0x174
	char bAbsoluteScale : 1; // 0x174
	char bVisible : 1; // 0x174
	char bHiddenInGame : 1; // 0x174
	char bShouldBeAttached : 1; // 0x174
	char bShouldSnapLocationWhenAttached : 1; // 0x175
	char bShouldSnapRotationWhenAttached : 1; // 0x175
	char bShouldUpdatePhysicsVolume : 1; // 0x175
	char bBoundsChangeTriggersStreamingDataRebuild : 1; // 0x175
	char bUseAttachParentBound : 1; // 0x175
	EComponentMobility Mobility; // 0x17d
	EDetailMode DetailMode; // 0x17e
	FScriptMulticastDelegate PhysicsVolumeChangedDelegate; // 0x17f
};

struct APhysicsThruster : ARigidBodyBase {
	UPhysicsThrusterComponent* ThrusterComponent; // 0x248
};

struct UVehicleWheel : UObject {
	UStaticMesh* CollisionMesh; // 0x28
	bool bDontCreateShape; // 0x30
	bool bAutoAdjustCollisionSize; // 0x31
	FVector Offset; // 0x34
	float ShapeRadius; // 0x40
	float ShapeWidth; // 0x44
	float Mass; // 0x48
	float DampingRate; // 0x4c
	float PhysMatDampingRateMultiplier; // 0x50
	float SteerAngle; // 0x54
	bool bAffectedByHandbrake; // 0x58
	UTireType* TireType; // 0x60
	UTireConfig* TireConfig; // 0x68
	float LatStiffMaxLoad; // 0x70
	float LatStiffValue; // 0x74
	float LongStiffValue; // 0x78
	float SuspensionForceOffset; // 0x7c
	float SuspensionMaxRaise; // 0x80
	float SuspensionMaxDrop; // 0x84
	float SuspensionNaturalFrequency; // 0x88
	float SuspensionDampingRatio; // 0x8c
	EWheelSweepType SweepType; // 0x90
	float MaxBrakeTorque; // 0x94
	float MaxHandBrakeTorque; // 0x98
	UWheeledVehicleMovementComponent* VehicleSim; // 0xa0
	int WheelIndex; // 0xa8
	float DebugLongSlip; // 0xac
	float DebugLatSlip; // 0xb0
	float DebugNormalizedTireLoad; // 0xb4
	float DebugWheelTorque; // 0xbc
	float DebugLongForce; // 0xc0
	float DebugLatForce; // 0xc4
	FVector Location; // 0xc8
	FVector OldLocation; // 0xd4
	FVector Velocity; // 0xe0
};

struct UMovieSceneObjectPropertyTrack : UMovieScenePropertyTrack {
	UObject* PropertyClass; // 0x88
};

struct UMovieScenePrimitiveMaterialTrack : UMovieScenePropertyTrack {
	int MaterialIndex; // 0x88
};

struct ASQVehicleResource : AActor {
	float ResourceDropQuantity; // 0x248
	float ResourceDropRate; // 0x24c
	float ServerResourceRate; // 0x250
	ASQForwardBase* CurrentFob; // 0x258
	AActor* CurrentCaptureZone; // 0x260
	USQVehicleResourceWeaponInventoryComponent* ParentInventory; // 0x268
	int MaxResources; // 0x278
	int Resources; // 0x27c
};

struct ABP_RPG7_Frag_2Mag_Founders_C : ABP_RPG7_Frag_Founders_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct USQVotingState : UActorComponent {
	TArray<USQVoteSessionAuthority*> ActiveVotes; // 0xd8
	bool LevelVoteInProgress; // 0xe8
	bool LayerVoteInProgress; // 0xe9
	bool GenericVoteProgress; // 0xea
	TArray<int> FactionVotesInProgress; // 0xf0
};

struct UInAppPurchaseCallbackProxy : UObject {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct USQMapWidgetRepairStation : USQMapWidgetDeployable {
	ESQBuildState BuildState; // 0x2a8
};

struct AOnlineBeaconHostObject : AActor {
	FString BeaconTypeName; // 0x248
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x258
	TArray<AOnlineBeaconClient*> ClientActors; // 0x260
};

struct UEdGraphNode_Documentation : UEdGraphNode {
	FString Link; // 0x98
	FString Excerpt; // 0xa8
};

struct UGameSessionSettings : UObject {
	int MaxSpectators; // 0x28
	int MaxPlayers; // 0x2c
	char bRequiresPushToTalk : 1; // 0x30
};

struct UMovieSceneCaptureProtocolBase : UObject {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct ABP_L85A2_DarkEarth_ElcanLDS_C : ABP_L85A2_DarkEarth_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
};

struct ATriggerSphere : ATriggerBase {
	UShapeComponent* CollisionComponent; // 0x248
};

struct UGeometryCollectionCache : UObject {
	FRecordedTransformTrack RecordedData; // 0x28
	UGeometryCollection* SupportedCollection; // 0x38
	FGuid CompatibleCollectionState; // 0x40
};

struct UCrowdManager : UCrowdManagerBase {
	ANavigationData* MyNavData; // 0x28
	TArray<FCrowdAvoidanceConfig> AvoidanceConfig; // 0x30
	TArray<FCrowdAvoidanceSamplingPattern> SamplingPatterns; // 0x40
	int MaxAgents; // 0x50
	float MaxAgentRadius; // 0x54
	int MaxAvoidedAgents; // 0x58
	int MaxAvoidedWalls; // 0x5c
	float NavmeshCheckInterval; // 0x60
	float PathOptimizationInterval; // 0x64
	float SeparationDirClamp; // 0x68
	float PathOffsetRadiusMultiplier; // 0x6c
	char bResolveCollisions : 1; // 0x70
};

struct UMovieSceneAudioCaptureProtocolBase : UMovieSceneCaptureProtocolBase {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UProjectile_SuppressionNone_C : USQSuppressionInfo {
	float SuppressSwayFactorRelease; // 0x28
	float AddSuppressSway; // 0x2c
	float MinSuppressSwayFactor; // 0x30
	float MaxSuppressSwayFactor; // 0x34
	float LofSuppressRange; // 0x38
	float LofSuppressInterpSpeed; // 0x3c
	float LofSuppressAlphaFactor; // 0x40
	float LofSuppressRotationAlphaRelease; // 0x44
};

struct UUserDefinedStruct : UScriptStruct {
	EUserDefinedStructureStatus Status; // 0xa8
	FGuid Guid; // 0xac
};

struct UFieldSystemComponent : UPrimitiveComponent {
	UFieldSystem* FieldSystem; // 0x408
	TArray<AChaosSolverActor*> SupportedSolvers; // 0x420
};

struct UMaterialExpressionParticleSize : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USQCompassPlayer : USQCompassBaseUnit {
	UImage* MedicIcon; // 0x238
	FLinearColor ColorHealthy; // 0x240
	FLinearColor ColorWounded; // 0x250
	FLinearColor ColorDown; // 0x260
	FLinearColor ColorInvisible; // 0x270
	UTexture2D* TexturePlayer; // 0x280
	UTexture2D* TextureSL; // 0x288
	UTexture2D* TextureMedic; // 0x290
	float PlayerIconScale; // 0x298
	float SLPlayerIconScale; // 0x29c
	float MedicPlayerIconScale; // 0x2a0
	float MedicIconScale; // 0x2a4
	ASQPlayerState* PlayerState; // 0x2a8
};

struct UWindowTitleBarArea : UContentWidget {
	bool bWindowButtonsEnabled; // 0x120
	bool bDoubleClickTogglesFullscreen; // 0x121
};

struct USQRestriction_PlayerStatus : USQRestriction_Boolean {
	TArray<ESQPlayerStatus> RequiredStatus; // 0x58
};

struct UPreviewMeshCollection : UDataAsset {
	USkeleton* Skeleton; // 0x38
	TArray<FPreviewMeshCollectionEntry> SkeletalMeshes; // 0x40
};

struct ASQDestroyedVehicle : AActor {
	UStaticMeshComponent* VehicleMesh; // 0x248
	bool bIsSimulatingInEditor; // 0x250
	bool bSimulatePhysics; // 0x251
	bool bPlayEffectsWhenReady; // 0x252
	ASQLastingEffect* TemperatureLastingEffect; // 0x258
	FName TemperatureLastingEffectAttachSocket; // 0x260
	float TemperatureLastingEffectLifetime; // 0x268
	float MinReplicationTime; // 0x26c
	ASQVehicle* OriginalVehicle; // 0x278
	UDamageType* DeathDamageType; // 0x280
	TArray<FSQVehicleDestroyEffectConfig> DeathEffectConfig; // 0x288
	FName DestroyedEffectsSocket; // 0x298
	UParticleSystem* DestroyedParticleEffect; // 0x2a0
	USQShockwave* DestroyedShockwaveEffect; // 0x2a8
	USoundCue* DestroyedSound; // 0x2b0
	USoundCue* DestroyedDebrisSound; // 0x2b8
	TArray<FSQDamageModifier> AllowableDamageTypes; // 0x2c0
	float Health; // 0x2d0
	float MaxHealth; // 0x2d4
	UDamageType* LastDamageTypeClass; // 0x2d8
	AController* LastDamageInstigator; // 0x2e0
	USQPhysicalMaterialEffects* DefaultEffectsClass; // 0x2e8
	FVector InitialVelocity; // 0x2f0
	FVector InitialAngularVelocity; // 0x2fc
	float LifespanInProtectionZone; // 0x308
};

struct UBP_M4_Optic_Foregrip_StaticInfo_C : UBP_M4_Foregrip_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UParticleModuleLocationEmitterDirect : UParticleModuleLocationBase {
	FName EmitterName; // 0x30
};

struct UBP_Attachment_L85A2_RailMount_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UParticleModuleTrailBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UParticleModuleEventReceiverKillParticles : UParticleModuleEventReceiverBase {
	char bStopSpawning : 1; // 0x40
};

struct ASQCameraMan : ACharacter {
	ESQListenerType ListenerType; // 0x660
	float BaseTurnRate; // 0x664
	float BaseLookUpRate; // 0x668
	USpringArmComponent* SpringArm; // 0x670
	UCameraComponent* FirstPersonCameraComponent; // 0x678
	UTexture* CameraManHUDIconTexture; // 0x680
	bool bIsTryingToGainAltitude; // 0x688
	bool bIsTryingToLoseAltitude; // 0x689
	USQCoreStateComponent* StateObject; // 0x6a0
};

struct USQWeaponAttachment : UStaticMeshComponent {
	FName SocketName; // 0x498
	ASQWeapon* AttachedWeapon; // 0x4a0
	bool bShowIn1P; // 0x4a8
	bool bShowIn3P; // 0x4a9
};

struct ASQTeamState : AInfo {
	int Tickets; // 0x248
	ASQTeam* AuthorityTeam; // 0x250
	USQTeamDataCacher* DataCacher; // 0x258
	int ID; // 0x260
	float Score; // 0x264
	float TeamWorkScore; // 0x268
	float ObjectiveScore; // 0x26c
	int NumKills; // 0x270
	int NumDeaths; // 0x274
	int NumWoundeds; // 0x278
	int NumWounds; // 0x27c
	int NumTeamkills; // 0x280
	float HealPoints; // 0x284
	float RevivedPoints; // 0x288
	TArray<ASQSquadState*> IndexedSquadStates; // 0x2b0
	TArray<ASQSquadState*> SquadStates; // 0x2c0
	TArray<ASQPlayerState*> PlayerStates; // 0x310
	ASQCommanderState* CommanderState; // 0x320
	FName FactionSetupId; // 0x328
	USQFactionSetup* FactionSetup; // 0x330
	FScriptMulticastDelegate OnDeployableTeamAvailabilityUpdate; // 0x338
	FScriptMulticastDelegate OnDeployablePersonalAvailabilityUpdate; // 0x348
	FScriptMulticastDelegate OnRoleTeamAvailabilityUpdate; // 0x358
	FScriptMulticastDelegate OnRolePersonalAvailabilityUpdate; // 0x368
	FScriptMulticastDelegate OnActionTeamAvailabilityUpdate; // 0x378
	FScriptMulticastDelegate OnActionPersonalAvailabilityUpdate; // 0x388
	FScriptMulticastDelegate OnVehicleTeamAvailabilityUpdate; // 0x398
	FScriptMulticastDelegate OnVehiclePersonalAvailabilityUpdate; // 0x3a8
	TArray<FSQAvailabilityState_Deployable> DeployableAvailabilities; // 0x3b8
	TArray<FSQAvailabilityState_Role> RoleAvailabilities; // 0x3c8
	TArray<FSQAvailabilityState_Action> ActionAvailabilities; // 0x3d8
	TArray<FSQAvailabilityState_Vehicle> VehicleAvailabilities; // 0x3e8
};

struct ASQVehicleWeapon : ASQWeapon_Effects {
	bool bIsOverheated; // 0xa30
	bool bInputEnabled; // 0xa31
	TArray<FSQVehicleRecoil> RecoilFactor; // 0xa38
	bool bReturnToPitchOriginOnReload; // 0xa48
	bool bReturnToYawOriginOnReload; // 0xa49
	float SecondsToReturnToOriginOnReload; // 0xa4c
	bool bReloadDirectlyFromFob; // 0xa50
	bool bIgnoreCameraChange; // 0xa53
	bool bEnableTrueFpCamera; // 0xa54
	bool bStartWithNoAmmo; // 0xa6c
};

struct UGameplayCueNotify_Static : UObject {
	FGameplayTag GameplayCueTag; // 0x28
	FGameplayTagReferenceHelper ReferenceHelper; // 0x30
	FName GameplayCueName; // 0x40
	bool IsOverride; // 0x48
};

struct USQSoundNodeEmitterListenerAudioVolumeSwitch : USoundNode {
	ESQAudioVolumeType TestAudioVolumeType; // 0x40
	bool bIsListener; // 0x41
};

struct ABP_M4_2Mags_Woodland_C : ABP_M4_2Mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4A1_M68_Foregrip_Founders_C : ABP_M4A1_M68_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleVelocity_Seeded : UParticleModuleVelocity {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xc0
};

struct UOnlinePIESettings : UDeveloperSettings {
	bool bOnlinePIEEnabled; // 0x38
	TArray<FPIELoginSettingsInternal> Logins; // 0x40
};

struct ABP_AK74M_1P78_4Mags_Desert_C : ABP_AK74M_1P78_4Mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AKS74_Founders_C : ABP_AKS74_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UGeometryCacheTrack_FlipbookAnimation : UGeometryCacheTrack {
	uint32 NumMeshSamples; // 0x58
};

struct UCrowdFollowingComponent : UPathFollowingComponent {
	UCharacterMovementComponent* CharacterMovement; // 0x288
	FVector CrowdAgentMoveDirection; // 0x290
};

struct UBP_Attachment_M150_Noads_Woodland_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UParticleModuleRotationBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UDmgTypeBP_Environmental_C : UDamageType {
	char bCausedByWorld : 1; // 0x28
	char bScaleMomentumByMass : 1; // 0x28
	char bRadialDamageVelChange : 1; // 0x28
	float DamageImpulse; // 0x2c
	float DestructibleImpulse; // 0x30
	float DestructibleDamageSpreadScale; // 0x34
	float DamageFalloff; // 0x38
};

struct ABP_AK74M_Recruit_Desert_C : ABP_AK74M_Recruit_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMovieSceneCapture : UObject {
	FSoftClassPath ImageCaptureProtocolType; // 0x38
	FSoftClassPath AudioCaptureProtocolType; // 0x50
	UMovieSceneImageCaptureProtocolBase* ImageCaptureProtocol; // 0x68
	UMovieSceneAudioCaptureProtocolBase* AudioCaptureProtocol; // 0x70
	FMovieSceneCaptureSettings Settings; // 0x78
	bool bUseSeparateProcess; // 0xe8
	bool bCloseEditorWhenCaptureStarts; // 0xe9
	FString AdditionalCommandLineArguments; // 0xf0
	FString InheritedCommandLineArguments; // 0x100
};

struct ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Parent_C : ABP_L85A2AG36_UGL_DarkEarth_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQBaseHudWidget : USQUserWidget {
	UUserWidget* StateIndicators; // 0x230
	USQAmmoWidget* AmmoWidget; // 0x238
	UUserWidget* SightRangeWidget; // 0x240
	USQCompassMK2* CompassWidget; // 0x248
	UUserWidget* CaptureZoneWidget; // 0x250
	UUserWidget* FOBStatusWidget; // 0x258
	UUserWidget* StaminaWidget; // 0x260
	UUserWidget* VehicleHealthWidget; // 0x268
	USQApprovalQueueWidget* ApprovalQueueWidget; // 0x270
	USQSeatProgressWidget* SeatProgressWidget; // 0x278
	USQStagingTimerText* StagingTimerText; // 0x280
	UUserWidget* CenterDotWidget; // 0x288
};

struct USQMapBoundarySettings : UDataAsset {
	float DefaultKillTime; // 0x30
	TMap<UObject*, float> ClassKillTimes; // 0x38
};

struct UMaterialExpressionLightVector : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UReplicationGraphNode_AlwaysRelevant : UReplicationGraphNode {
	UReplicationGraphNode* ChildNode; // 0x50
};

struct UCompressedImageSequenceProtocol : UImageSequenceProtocol {
	int CompressionQuality; // 0xd8
};

struct UAnimCompress_RemoveLinearKeys : UAnimCompress {
	float MaxPosDiff; // 0x50
	float MaxAngleDiff; // 0x54
	float MaxScaleDiff; // 0x58
	float MaxEffectorDiff; // 0x5c
	float MinEffectorDiff; // 0x60
	float EffectorDiffSocket; // 0x64
	float ParentKeyScale; // 0x68
	char bRetarget : 1; // 0x6c
	char bActuallyFilterLinearKeys : 1; // 0x6c
	char bOptimizeForForwardPlayback : 1; // 0x6c
	char bUseDecompression : 1; // 0x6c
	char bUseMultithreading : 1; // 0x6c
};

struct UInterpTrackInstVisibility : UInterpTrackInst {
	EVisibilityTrackAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
};

struct UM4M203_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_3627E3D5486F04AA38AA4B8C766C8BD8; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_15CFBAC7497005D8596A0AAAC39F85D4; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_268573CE41CEE78662001E89A8DD012B; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_9A240A4745DD4DFD819ADC92DF738370; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_D81A3FD840E7B7326A003589436EFEB8; // 0x468
	FAnimNode_Slot AnimGraphNode_Slot_D316B62C4A633DD7AEEE08A0CBD99F0C; // 0x4b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5E06D0C844B713729CFEFC8DD7576BD5; // 0x4f8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_BE9707734B8B29AAB8795B85A2534510; // 0x570
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_892407B5453A0BA3CCF190AB56FC6EC1; // 0x630
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8FD9CB30473F303BC10ADD85359415DE; // 0x648
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_4B92330C43A64B233804C98448E9D80C; // 0x708
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_C40A21674CA47855605D75B6B3FF8E85; // 0x810
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_9881EF2746DBC2CEE37099AF24B09104; // 0x830
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_B025CD7B4785343033202D89978BA013; // 0x850
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_DA251E29438C7126BB78B1AA03ADD1C9; // 0x898
	FVector LadderScaleAds; // 0x9a0
};

struct UAppleImageUtilsBaseAsyncTaskBlueprintProxy : UObject {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
	FAppleImageUtilsImageConversionResult ConversionResult; // 0x60
};

struct USquadVoiceChannel : UVoiceChannel {
	UNetConnection* Connection; // 0x28
};

struct ABP_L85A2_Foregrip_Tracer_C : ABP_L85A2_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_RPG7V2_Parent_C : ABP_GenericRocketLauncher_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UMovieSceneParameterSection : UMovieSceneSection {
	TArray<FScalarParameterNameAndCurve> ScalarParameterNamesAndCurves; // 0xe0
	TArray<FVectorParameterNameAndCurves> VectorParameterNamesAndCurves; // 0xf0
	TArray<FColorParameterNameAndCurves> ColorParameterNamesAndCurves; // 0x100
};

struct ABP_L85A2AG36_UGL_Smoke_Red_C : ABP_L85A2AG36_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UApplicationLifecycleComponent : UActorComponent {
	FScriptMulticastDelegate ApplicationWillDeactivateDelegate; // 0xd8
	FScriptMulticastDelegate ApplicationHasReactivatedDelegate; // 0xe8
	FScriptMulticastDelegate ApplicationWillEnterBackgroundDelegate; // 0xf8
	FScriptMulticastDelegate ApplicationHasEnteredForegroundDelegate; // 0x108
	FScriptMulticastDelegate ApplicationWillTerminateDelegate; // 0x118
	FScriptMulticastDelegate ApplicationShouldUnloadResourcesDelegate; // 0x128
	FScriptMulticastDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x138
	FScriptMulticastDelegate OnTemperatureChangeDelegate; // 0x148
	FScriptMulticastDelegate OnLowPowerModeDelegate; // 0x158
};

struct UCharacterMovementComponent : UPawnMovementComponent {
	ACharacter* CharacterOwner; // 0x170
	float GravityScale; // 0x178
	float MaxStepHeight; // 0x17c
	float JumpZVelocity; // 0x180
	float JumpOffJumpZFactor; // 0x184
	float WalkableFloorAngle; // 0x188
	float WalkableFloorZ; // 0x18c
	EMovementMode MovementMode; // 0x190
	char CustomMovementMode; // 0x191
	ENetworkSmoothingMode NetworkSmoothingMode; // 0x192
	float GroundFriction; // 0x194
	float MaxWalkSpeed; // 0x1bc
	float MaxWalkSpeedCrouched; // 0x1c0
	float MaxSwimSpeed; // 0x1c4
	float MaxFlySpeed; // 0x1c8
	float MaxCustomMovementSpeed; // 0x1cc
	float MaxAcceleration; // 0x1d0
	float MinAnalogWalkSpeed; // 0x1d4
	float BrakingFrictionFactor; // 0x1d8
	float BrakingFriction; // 0x1dc
	float BrakingSubStepTime; // 0x1e0
	float BrakingDecelerationWalking; // 0x1e4
	float BrakingDecelerationFalling; // 0x1e8
	float BrakingDecelerationSwimming; // 0x1ec
	float BrakingDecelerationFlying; // 0x1f0
	float AirControl; // 0x1f4
	float AirControlBoostMultiplier; // 0x1f8
	float AirControlBoostVelocityThreshold; // 0x1fc
	float FallingLateralFriction; // 0x200
	float CrouchedHalfHeight; // 0x204
	float Buoyancy; // 0x208
	float PerchRadiusThreshold; // 0x20c
	float PerchAdditionalHeight; // 0x210
	FRotator RotationRate; // 0x214
	char bUseSeparateBrakingFriction : 1; // 0x220
	char bApplyGravityWhileJumping : 1; // 0x220
	char bUseControllerDesiredRotation : 1; // 0x220
	char bOrientRotationToMovement : 1; // 0x220
	char bSweepWhileNavWalking : 1; // 0x220
	char bMovementInProgress : 1; // 0x220
	char bEnableScopedMovementUpdates : 1; // 0x220
	char bEnableServerDualMoveScopedMovementUpdates : 1; // 0x221
	char bForceMaxAccel : 1; // 0x221
	char bRunPhysicsWithNoController : 1; // 0x221
	char bForceNextFloorCheck : 1; // 0x221
	char bShrinkProxyCapsule : 1; // 0x221
	char bCanWalkOffLedges : 1; // 0x221
	char bCanWalkOffLedgesWhenCrouching : 1; // 0x221
	char bNetworkSkipProxyPredictionOnNetUpdate : 1; // 0x222
	char bNetworkAlwaysReplicateTransformUpdateTimestamp : 1; // 0x222
	char bDeferUpdateMoveComponent : 1; // 0x222
	char bEnablePhysicsInteraction : 1; // 0x222
	char bTouchForceScaledToMass : 1; // 0x222
	char bPushForceScaledToMass : 1; // 0x222
	char bPushForceUsingZOffset : 1; // 0x222
	char bScalePushForceToVelocity : 1; // 0x223
	USceneComponent* DeferredUpdatedMoveComponent; // 0x228
	float MaxOutOfWaterStepHeight; // 0x230
	float OutofWaterZ; // 0x234
	float Mass; // 0x238
	float StandingDownwardForceScale; // 0x23c
	float InitialPushForceFactor; // 0x240
	float PushForceFactor; // 0x244
	float PushForcePointZOffsetFactor; // 0x248
	float TouchForceFactor; // 0x24c
	float MinTouchForce; // 0x250
	float MaxTouchForce; // 0x254
	float RepulsionForce; // 0x258
	FVector Acceleration; // 0x25c
	FQuat LastUpdateRotation; // 0x270
	FVector LastUpdateLocation; // 0x280
	FVector LastUpdateVelocity; // 0x28c
	float ServerLastTransformUpdateTimeStamp; // 0x298
	float ServerLastClientGoodMoveAckTime; // 0x29c
	float ServerLastClientAdjustmentTime; // 0x2a0
	FVector PendingImpulseToApply; // 0x2a4
	FVector PendingForceToApply; // 0x2b0
	float AnalogInputModifier; // 0x2bc
	float MaxSimulationTimeStep; // 0x2cc
	int MaxSimulationIterations; // 0x2d0
	int MaxJumpApexAttemptsPerSimulation; // 0x2d4
	float MaxDepenetrationWithGeometry; // 0x2d8
	float MaxDepenetrationWithGeometryAsProxy; // 0x2dc
	float MaxDepenetrationWithPawn; // 0x2e0
	float MaxDepenetrationWithPawnAsProxy; // 0x2e4
	float NetworkSimulatedSmoothLocationTime; // 0x2e8
	float NetworkSimulatedSmoothRotationTime; // 0x2ec
	float ListenServerNetworkSimulatedSmoothLocationTime; // 0x2f0
	float ListenServerNetworkSimulatedSmoothRotationTime; // 0x2f4
	float NetProxyShrinkRadius; // 0x2f8
	float NetProxyShrinkHalfHeight; // 0x2fc
	float NetworkMaxSmoothUpdateDistance; // 0x300
	float NetworkNoSmoothUpdateDistance; // 0x304
	float NetworkMinTimeBetweenClientAckGoodMoves; // 0x308
	float NetworkMinTimeBetweenClientAdjustments; // 0x30c
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x310
	float NetworkLargeClientCorrectionDistance; // 0x314
	float LedgeCheckThreshold; // 0x318
	float JumpOutOfWaterPitch; // 0x31c
	FFindFloorResult CurrentFloor; // 0x320
	EMovementMode DefaultLandMovementMode; // 0x3b4
	EMovementMode DefaultWaterMovementMode; // 0x3b5
	EMovementMode GroundMovementMode; // 0x3b6
	char bMaintainHorizontalGroundVelocity : 1; // 0x3b7
	char bImpartBaseVelocityX : 1; // 0x3b7
	char bImpartBaseVelocityY : 1; // 0x3b7
	char bImpartBaseVelocityZ : 1; // 0x3b7
	char bImpartBaseAngularVelocity : 1; // 0x3b7
	char bJustTeleported : 1; // 0x3b7
	char bNetworkUpdateReceived : 1; // 0x3b7
	char bNetworkMovementModeChanged : 1; // 0x3b7
	char bIgnoreClientMovementErrorChecksAndCorrection : 1; // 0x3b8
	char bServerAcceptClientAuthoritativePosition : 1; // 0x3b8
	char bNotifyApex : 1; // 0x3b8
	char bCheatFlying : 1; // 0x3b8
	char bWantsToCrouch : 1; // 0x3b8
	char bCrouchMaintainsBaseLocation : 1; // 0x3b8
	char bIgnoreBaseRotation : 1; // 0x3b8
	char bFastAttachedMove : 1; // 0x3b8
	char bAlwaysCheckFloor : 1; // 0x3b9
	char bUseFlatBaseForFloorChecks : 1; // 0x3b9
	char bPerformingJumpOff : 1; // 0x3b9
	char bWantsToLeaveNavWalking : 1; // 0x3b9
	char bUseRVOAvoidance : 1; // 0x3b9
	char bRequestedMoveUseAcceleration : 1; // 0x3b9
	char bWasSimulatingRootMotion : 1; // 0x3b9
	char bAllowPhysicsRotationDuringAnimRootMotion : 1; // 0x3ba
	char bHasRequestedVelocity : 1; // 0x3ba
	char bRequestedMoveWithMaxSpeed : 1; // 0x3ba
	char bWasAvoidanceUpdated : 1; // 0x3ba
	char bProjectNavMeshWalking : 1; // 0x3ba
	char bProjectNavMeshOnBothWorldChannels : 1; // 0x3ba
	float AvoidanceConsiderationRadius; // 0x3cc
	FVector RequestedVelocity; // 0x3d0
	int AvoidanceUID; // 0x3dc
	FNavAvoidanceMask AvoidanceGroup; // 0x3e0
	FNavAvoidanceMask GroupsToAvoid; // 0x3e4
	FNavAvoidanceMask GroupsToIgnore; // 0x3e8
	float AvoidanceWeight; // 0x3ec
	FVector PendingLaunchVelocity; // 0x3f0
	float NavMeshProjectionInterval; // 0x4a0
	float NavMeshProjectionTimer; // 0x4a4
	float NavMeshProjectionInterpSpeed; // 0x4a8
	float NavMeshProjectionHeightScaleUp; // 0x4ac
	float NavMeshProjectionHeightScaleDown; // 0x4b0
	float NavWalkingFloorDistTolerance; // 0x4b4
	FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction; // 0x4b8
	float MinTimeBetweenTimeStampResets; // 0x528
	FRootMotionSourceGroup CurrentRootMotion; // 0x530
	FRootMotionMovementParams RootMotionParams; // 0x6c0
	FVector AnimRootMotionVelocity; // 0x700
};

struct UMaterialExpressionNormalize : UMaterialExpression {
	FExpressionInput VectorInput; // 0x40
};

struct UEnvQueryGenerator_Composite : UEnvQueryGenerator {
	TArray<UEnvQueryGenerator*> Generators; // 0x50
	char bAllowDifferentItemTypes : 1; // 0x60
	char bHasMatchingItemType : 1; // 0x60
	UEnvQueryItemType* ForcedItemType; // 0x68
};

struct UBP_SQLevel_C : USQLevel {
	ESQBiome Biome; // 0xb0
	SQETheatersOfOperations TheaterOfOperations; // 0xb1
};

struct ABP_M4M203_M150_UGL_Smoke_Red_Founders_C : ABP_M4M203_M150_UGL_Smoke_Founders_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74GP25_UGL_Smoke_Blue_C : ABP_AK74GP25_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQTabButton : USQBaseButton {
	UWidgetSwitcher* ParentWidgetSwitcher; // 0x2f0
	UImage* MainBgImage; // 0x2f8
	UTextBlock* TabTextBlock; // 0x300
	ASQPlayerState* OwnerPlayerState; // 0x308
};

struct UReplicationGraphNode_GridSpatialization2D : UReplicationGraphNode {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct USQCoreStateSquadMemberWidget : USQCoreStateSquadListWidget {
	int RootWidgetSquadId; // 0x260
	ASQPlayerState* PlayerState; // 0x268
	int SquadId; // 0x270
	char bIsPossessingPawn : 1; // 0x274
	bool bIsSquadLeader; // 0x278
	bool bIsFireTeamLeader; // 0x279
	int FireTeamIndex; // 0x27c
	int FireTeamPosition; // 0x284
	USQRoleSettings* DeployRole; // 0x290
	FString PlayerName; // 0x298
	USQVehicleUIStaticDataAsset* CurrentVehicleData; // 0x2a8
	ESQVoiceChannel VoipChannel; // 0x2b0
	bool bIsMuted; // 0x2b1
	bool bIsAlive; // 0x2b2
	bool bIsBleeding; // 0x2b3
	bool bIsWounded; // 0x2b4
};

struct AFieldSystemActor : AActor {
	UFieldSystemComponent* FieldSystemComponent; // 0x248
};

struct UBP_Attachment_AK74M_Front_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMaterialExpressionGetMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput MaterialAttributes; // 0x40
	TArray<FGuid> AttributeGetTypes; // 0x58
};

struct UCullingField : UFieldNodeBase {
	UFieldNodeBase* Culling; // 0xd8
	UFieldNodeBase* Field; // 0xe0
	EFieldCullingOperationType Operation; // 0xe8
};

struct UGameplayTagsList : UObject {
	FString ConfigFileName; // 0x28
	TArray<FGameplayTagTableRow> GameplayTagList; // 0x38
};

struct ABP_M4M203_M68_UGL_Smoke_Red_C : ABP_M4M203_M68_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UGameplayEffectExecutionCalculation : UGameplayEffectCalculation {
	bool bRequiresPassedInTags; // 0x38
};

struct USQEditorPlaySettings : UDeveloperSettings {
	UClass* DefaultPawnClassOverride; // 0x38
	UClass* DefaultWeaponClassOverride; // 0x60
	USQLayer* LayerEditorOverride; // 0x88
	bool PreventDataLoading; // 0xb0
	FSQServerSettings EditorServerSettings; // 0xb8
	bool EditorIgnoreStartupTime; // 0x290
	int RaasDefaultSeed; // 0x294
	int StartTeamOverride; // 0x298
	bool ForceDirectSpawn; // 0x29c
	bool CanDriverSwitchTo3rdPerson; // 0x29d
	bool DeployablePlacementAlwaysValid; // 0x29e
	bool ForceOutOfBoundsKillDisabled; // 0x29f
	bool ForcePlayerNotAdminInEditor; // 0x2a0
	bool ForcePlayerNotDevInEditor; // 0x2a1
	bool ForcePlayerNotQAInEditor; // 0x2a2
	bool ForcePlayerNotMemberInEditor; // 0x2a3
	USQLayer* EditorActiveLayer; // 0x2a8
	USQLevel* EditorActiveLevel; // 0x2b0
	TMap<FName, USQLevel*> AvailableLevels; // 0x2b8
	TMap<FName, USQLayer*> AvailableLayers; // 0x308
	TMap<FName, USQFaction*> AvailableFactions; // 0x358
	TMap<FName, USQFactionSetup*> AvailableFactionSetups; // 0x3a8
};

struct UMaterialExpressionBumpOffset : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Height; // 0x54
	FExpressionInput HeightRatioInput; // 0x68
	float HeightRatio; // 0x7c
	float ReferencePlane; // 0x80
	uint32 ConstCoordinate; // 0x84
};

struct USQScoreboard : USQUserWidget {
	USQScoreboardTeam* ScoreboardFriendly; // 0x230
	USQScoreboardTeam* ScoreboardEnemy; // 0x238
	ASQPlayerController* SQPC; // 0x240
	ASQGameState* SQGameState; // 0x248
	FTimerHandle UpdateStateTimerHandle; // 0x250
	USQScoreboardTeam* ScoreboardTeamType; // 0x258
	FText WinningTeamText; // 0x260
	FText TicketsRemainingText; // 0x278
	FText DrawText; // 0x290
	UImage* GameTimeClockImage; // 0x2a8
	UTextBlock* RemainingGameTimeText; // 0x2b0
	UImage* ScoreboardFlairFlag1; // 0x2b8
	UImage* ScoreboardFlairFlag2; // 0x2c0
	UTextBlock* GameResultText; // 0x2c8
	UTextBlock* GameResultTicketsRemaining; // 0x2d0
	UCanvasPanel* GameResultCanvas; // 0x2d8
};

struct ABP_L85A2_ElcanLDS_C : ABP_L85A2_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
};

struct UMaterialExpressionObjectBounds : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USpringArmComponent : USceneComponent {
	float TargetArmLength; // 0x218
	FVector SocketOffset; // 0x21c
	FVector TargetOffset; // 0x228
	float ProbeSize; // 0x234
	ECollisionChannel ProbeChannel; // 0x238
	char bDoCollisionTest : 1; // 0x23c
	char bUsePawnControlRotation : 1; // 0x23c
	char bInheritPitch : 1; // 0x23c
	char bInheritYaw : 1; // 0x23c
	char bInheritRoll : 1; // 0x23c
	char bEnableCameraLag : 1; // 0x23c
	char bEnableCameraRotationLag : 1; // 0x23c
	char bUseCameraLagSubstepping : 1; // 0x23c
	char bDrawDebugLagMarkers : 1; // 0x23d
	float CameraLagSpeed; // 0x240
	float CameraRotationLagSpeed; // 0x244
	float CameraLagMaxTimeStep; // 0x248
	float CameraLagMaxDistance; // 0x24c
};

struct UUserInterfaceSettings : UDeveloperSettings {
	ERenderFocusRule RenderFocusRule; // 0x38
	TMap<EMouseCursor, FHardwareCursorReference> HardwareCursors; // 0x40
	TMap<EMouseCursor, FSoftClassPath> SoftwareCursors; // 0x90
	FSoftClassPath DefaultCursor; // 0xe0
	FSoftClassPath TextEditBeamCursor; // 0xf8
	FSoftClassPath CrosshairsCursor; // 0x110
	FSoftClassPath HandCursor; // 0x128
	FSoftClassPath GrabHandCursor; // 0x140
	FSoftClassPath GrabHandClosedCursor; // 0x158
	FSoftClassPath SlashedCircleCursor; // 0x170
	float ApplicationScale; // 0x188
	EUIScalingRule UIScaleRule; // 0x18c
	FSoftClassPath CustomScalingRuleClass; // 0x190
	FRuntimeFloatCurve UIScaleCurve; // 0x1a8
	bool bAllowHighDPIInGameMode; // 0x230
	bool bLoadWidgetsOnDedicatedServer; // 0x231
	TArray<UObject*> CursorClasses; // 0x238
	UObject* CustomScalingRuleClassInstance; // 0x248
	UDPICustomScalingRule* CustomScalingRule; // 0x250
};

struct ASQPlayerController : APlayerController {
	ASQTeam* AuthorityTeam; // 0x5a0
	ASQTeamState* TeamState; // 0x5a8
	ASQTeamStatePrivate* PrivateTeamState; // 0x5b0
	ASQSquad* AuthoritySquad; // 0x5b8
	ASQSquadState* SquadState; // 0x5c0
	ASQSquadStatePrivateToTeam* TeamPrivateSquadState; // 0x5c8
	USQCoreStateConnection* StateConnection; // 0x5d0
	float SpawnMenuPopupDelay; // 0x5d8
	ASQSoldier* LastSpawnedSoldier; // 0x5e0
	bool AreCommunicationButtonsAllowed; // 0x5e9
	char bIsCrouchedDuringMenu : 1; // 0x5ea
	char bIsPronedDuringMenu : 1; // 0x5ea
	bool IsWinner; // 0x5eb
	float TimeBecameIncapacitated; // 0x5ec
	float SpawnDelayPenalties; // 0x5f0
	float MaxSpawnDelay; // 0x5f4
	bool bWasInVehicle; // 0x5f8
	FSQBitFlag AccessLevel; // 0x5fc
	FScriptMulticastDelegate OnPlayerEnterVehicleEvent; // 0x618
	FScriptMulticastDelegate OnPlayerExitVehicleEvent; // 0x628
	FScriptMulticastDelegate OnRallyCreated; // 0x638
	FScriptMulticastDelegate OnChatStarted; // 0x650
	USQToastWidget* ToastWidgetClass; // 0x660
	FText ChangeRoleNoAmmoText; // 0x668
	FText AmmoBagNoAmmoText; // 0x680
	FText MaxAmmoBagText; // 0x698
	FText RearmFromAmmoBagText; // 0x6b0
	FText RoleCannotPickupAmmoBagText; // 0x6c8
	FText RearmFromVehicleNoAmmoText; // 0x6e0
	FText RearmFromVehicleConfirmationText; // 0x6f8
	FText RearmFromVehiclePromptText; // 0x710
	FText CannotStartVehicleInStagingPhaseText; // 0x728
	float WalkingOriginRebaseThreshold; // 0x740
	float RidingOriginRebaseThreshold; // 0x744
	float FlyingOriginRebaseThreshold; // 0x748
	float LeaveVehicleOriginRebaseThreshold; // 0x74c
	float OriginRebaseFrequency; // 0x750
	TArray<ASQMapMarker*> MapMarkerArray; // 0x758
	USQMapMarkerInputComponent* MapMarkerInputComponent; // 0x768
	FScriptMulticastDelegate OnNewMarkerCreatedEvent; // 0x770
	USQAdminStats* AdminStats; // 0x780
	TArray<AActor*> SpawnableActors; // 0x788
	UDataTable* ApprovalMessages; // 0x798
	USQVehicleSeatComponent* CurrentSeat; // 0x7a0
	float AlwaysRenderPawnsDistance; // 0x860
	UAudioComponent* MusicAC; // 0x898
	USoundBase* MusicSound; // 0x8a0
	TArray<FSQSystemHUDMessage> QueuedSystemMessages; // 0x8a8
	TArray<APawn*> RefreshTypes; // 0x8b8
	USQDataGatheringComponent* DataGatheringComponent; // 0x8c8
	USQCommanderInputComponent* CommanderInputComponent; // 0x8d0
	USQBoundaryListener* BoundaryListener; // 0x8d8
	float OutOfMapBoundsKillTimestamp; // 0x8e0
	APawn* LastRefreshedPawn; // 0x8e8
	ASQGameSpawn* SelectedSpawn; // 0x8f0
	TMap<uint32, FSQApprovalEntryRequest> ApprovalEntries; // 0x900
	TMap<uint32, FSQApprovalEntryClientDesc> ApprovalEntriesOnClient; // 0x950
	float PawnRenderDistance; // 0x9c0
	TMap<FUniqueNetIdRepl, ASQPlayerState*> CachedPlayersToMute; // 0x9f8
	USQMovementComponentNetworker* Networker; // 0xa48
	ASQDeployable* ActiveGhost; // 0xa50
	bool IsDeployingItem; // 0xa58
	USQVotingComponent* VotingComponentClass; // 0xa60
	USQVotingComponent* VotingComponent; // 0xa68
};

struct ABP_RPG7_Frag_3Mag_C : ABP_RPG7_Frag_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct ASQVehicleSmokeGenerator : ASQVehicleWeapon {
	UAudioComponent* SmokeGeneratorSound; // 0xa70
	ASQGroundVehicle* VehicleRef; // 0xa78
	TArray<UParticleSystemComponent*> SmokeGenerators; // 0xa80
	USoundBase* LoopingSmokeGenSound; // 0xa90
	float FadeInDuration; // 0xa98
	float FadeoutDuration; // 0xa9c
	USoundBase* EndUseSound; // 0xaa0
};

struct USocialSettings : UObject {
	TArray<FName> OssNamesWithEnvironmentIdPrefix; // 0x28
	int DefaultMaxPartySize; // 0x38
	bool bPreferPlatformInvites; // 0x3c
	bool bMustSendPrimaryInvites; // 0x3d
	float UserListAutoUpdateRate; // 0x40
};

struct UBP_M4_Foregrip_StaticInfo_C : UBP_M4_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct ASQRepairTool : ASQRepairEquipable {
	USQRepairToolStaticInfo* RepairToolStaticInfo; // 0x498
	FTimerHandle TimerHandle; // 0x4a0
	bool bUseHammer; // 0x4a8
};

struct UInterpTrackVectorMaterialParam : UInterpTrackVectorBase {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct UNavigationDataChunk : UObject {
	FName NavigationDataName; // 0x28
};

struct AInfo : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UInterpTrackVectorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0x90
};

struct UParticleModuleKillHeight : UParticleModuleKillBase {
	FRawDistributionFloat Height; // 0x30
	char bAbsolute : 1; // 0x68
	char bFloor : 1; // 0x68
	char bApplyPSysScale : 1; // 0x68
};

struct UTwitterIntegrationBase : UPlatformInterfaceBase {
	TArray<FDelegateArray> AllDelegates; // 0x28
};

struct USubmixEffectReverbFastPreset : USoundEffectSubmixPreset {
	FSubmixEffectReverbFastSettings Settings; // 0x9c
};

struct UParticleModuleVectorFieldScaleOverLife : UParticleModuleVectorFieldBase {
	UDistributionFloat* VectorFieldScaleOverLife; // 0x30
	FRawDistributionFloat VectorFieldScaleOverLifeRaw; // 0x38
};

struct ASQSoldierNew : ASQSoldier {
	UAnimMontage* IdleMontage; // 0x1e80
	FSQClimbData ClimbData; // 0x1e88
	bool bClimbingEnabled; // 0x2000
	FSQClimbInfo ClimbInfo; // 0x2008
	USQBoundaryListener* BoundaryListener; // 0x20c0
	USkeletalMeshComponent* UpperMesh1P; // 0x20d0
	USpringArmComponent* SpringArm1P; // 0x20d8
	USQItemStaticInfo* CurrentItemStaticInfo; // 0x20e0
	USQBotComponent* BotComponent; // 0x20e8
	FRotator ControlRotation; // 0x20f0
	FRotator AimRotation1P; // 0x20fc
	float RequiredProneTransitionTime; // 0x2108
	bool bCachedIsUsingItem; // 0x210c
	bool bCachedIsUsingGrenade; // 0x210d
	bool bCachedLeanLeft; // 0x210e
	bool bCachedLeanRight; // 0x210f
	float CachedFwdPct; // 0x2110
	float CachedStrafePct; // 0x2114
	bool bShot; // 0x2118
	bool bWasCrouchedBeforeProne; // 0x2119
	bool bIsCameraRecoilActive; // 0x211a
	float SpringArmTargetHeight1p; // 0x211c
	float SpringArmHeight1pInterpSpeed; // 0x2120
	float TempSpringArmHeight1p; // 0x2124
	float CurrentSpringArmHeight1p; // 0x2128
	float SpringArmClimbingHeight; // 0x212c
	float SpringArmCrouchingMovingHeight; // 0x2130
	float SpringArmCrouchingStaticHeight; // 0x2134
	float SpringArmProneHeight; // 0x2138
	FVector Base1pOffset; // 0x213c
	FVector RawBase1pOffset; // 0x2148
	bool bSwitchedSoldierStance; // 0x2154
	int ViewMode3p; // 0x2158
	FVector ViewPos3p; // 0x215c
	float ViewDistance3p; // 0x2168
	FRotator ViewOrientation3p; // 0x216c
	int ViewScrollDistance3p; // 0x2178
	FRotator ViewAdjustingDelta3p; // 0x217c
	float ViewTogglePressTime; // 0x2188
	bool bAdjustingView3p; // 0x218c
	bool bLastInThirdPersonView; // 0x218d
	UAnimMontage* StartCrouch_1P_Montage; // 0x2190
	UAnimMontage* EndCrouch_1P_Montage; // 0x2198
	UAnimMontage* DraggingStart1pMontage; // 0x21a0
	UAnimMontage* DraggingStart3pMontage; // 0x21a8
	UAnimMontage* DraggingEnd1pMontage; // 0x21b0
	UAnimMontage* DraggingEnd3pMontage; // 0x21b8
	USQFreeLookComponent* FreeLookComponent; // 0x21c0
	FRotator VaultClimbAo; // 0x21c8
	FRotator CachedVaultClimbAo2; // 0x21d4
	float CachedVaultClimbAoYawInterpSpeed; // 0x21e0
	float CachedVaultClimbAoPitchInterpSpeed; // 0x21e4
	ASQEquipableItem* PreviousWeapon; // 0x21e8
	bool bPreviousWeaponMagHasAmmo; // 0x21f0
	bool bCachedIsSprinting; // 0x21f1
	USceneComponent* WeaponDeviationRot; // 0x21f8
	bool bAccuracyDebugVisible; // 0x2200
	USQAnimInstanceSoldier3P* CachedAnimInstance3p; // 0x2208
	USQAnimInstanceSoldier1P* CachedAnimInstance1p; // 0x2210
	float SoldierPlayTime1p; // 0x2218
	float SoldierPlayTime3p; // 0x221c
	float Bipod3pSkelMeshOffset; // 0x2220
	float BeginBipod3pSkelMeshOffset; // 0x2224
	float CachedBipodTransitionAlpha; // 0x2228
	bool bIsBipodDeployed; // 0x222c
	FVector BipodHitLocZeroBased; // 0x2230
	USceneComponent* BipodObject; // 0x2240
	FVector CachedDeployed1pBipodLocation; // 0x2254
	float BipodHitLocSpringArm1PHeight; // 0x2260
	float BipodNonDeployedSpringArm1pRelativeHeight; // 0x2264
	float BipodSpringArmFloorTraceLength; // 0x22dc
	float DeployedBipodCapsuleRadius; // 0x22e0
	float BipodClientServerAcceptableRange; // 0x22e4
	float BipodObjectMaxDelta; // 0x22e8
	float BipodDepth; // 0x22ec
	float BipodStandingMinDeployHeight; // 0x22f0
	float BipodStandingMaxDeployHeight; // 0x22f4
	float BipodCrouchingMinDeployHeight; // 0x22f8
	float BipodCrouchingMaxDeployHeight; // 0x22fc
	float BipodProneMinDeployHeight; // 0x2300
	float BipodProneMaxDeployHeight; // 0x2304
	float BipodCameraProbeSize; // 0x2308
	bool bWeaponLowered; // 0x2310
	FScriptMulticastDelegate OnPawnPossessedEvent; // 0x2318
	FScriptMulticastDelegate OnPawnUnPossessedEvent; // 0x2328
	USQAnimDataEmotes* EmoteData; // 0x2338
	FSQVoipAnim MouthAnim; // 0x2340
	FSQVoipAnim HandActionRadioAnim; // 0x2360
	bool bIsPlayingVoipHandAnim; // 0x2380
};

struct UParticleModuleBeamSource : UParticleModuleBeamBase {
	Beam2SourceTargetMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	char bSourceAbsolute : 1; // 0x3c
	FRawDistributionVector Source; // 0x40
	char bLockSource : 1; // 0x90
	Beam2SourceTargetTangentMethod SourceTangentMethod; // 0x94
	FRawDistributionVector SourceTangent; // 0x98
	char bLockSourceTangent : 1; // 0xe8
	FRawDistributionFloat SourceStrength; // 0xf0
	char bLockSourceStength : 1; // 0x128
};

struct USQStagingTimerText : UUserWidget {
	int NearZeroThreshold; // 0x230
	ASQTeamPrep* TeamPrepRef; // 0x238
	UTextBlock* TextBlockCPP; // 0x240
	FText StagingPhaseText; // 0x248
};

struct USQMapWidget : USQCoreStateMapWidget {
	float Angle; // 0x270
	USQColorsDataAsset* ColorsDataAsset; // 0x278
	bool bUseAngleEvent; // 0x280
	float AngleTolerance; // 0x284
	float LocationTolerance; // 0x288
};

struct UMediaSoundComponent : USynthComponent {
	EMediaSoundChannels Channels; // 0x640
	bool DynamicRateAdjustment; // 0x644
	float RateAdjustmentFactor; // 0x648
	FFloatRange RateAdjustmentRange; // 0x64c
	UMediaPlayer* MediaPlayer; // 0x660
};

struct UClothingAssetBase : UObject {
	FString ImportedFilePath; // 0x28
	FGuid AssetGuid; // 0x38
};

struct UParticleModuleLightBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UMaterialExpressionParameter : UMaterialExpression {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
};

struct USQMapWidgetVehicleSeat : USQMapWidgetSQPawn {
	char bIsOwned : 1; // 0x2a8
	char bIsOwnedBySelf : 1; // 0x2a8
	char bIsInSelfTeam : 1; // 0x2a8
	char bIsInSelfSquad : 1; // 0x2a8
	int FireTeamIndex; // 0x2ac
	float CameraRotationYaw; // 0x2b0
	float IsSelfZOrder; // 0x2b4
};

struct ABP_M4M203_UGL_Parent_C : ABP_Weapon2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionLogarithm2 : UMaterialExpression {
	FExpressionInput X; // 0x40
};

struct UBTDecorator_TimeLimit : UBTDecorator {
	float TimeLimit; // 0x68
};

struct UMaterialExpressionArccosine : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct ABP_M4_4Mags_C : ABP_M4_2Mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UTextBinding : UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct UBP_L85A2_SUSAT_StaticInfo_C : UBP_L85A2_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UMaterialExpressionAntialiasedTextureMask : UMaterialExpressionTextureSampleParameter2D {
	float Threshold; // 0x100
	ETextureColorChannel Channel; // 0x104
};

struct UGeometryCacheTrack_TransformAnimation : UGeometryCacheTrack {
	float Duration; // 0x28
};

struct URestrictedGameplayTagsList : UObject {
	FString ConfigFileName; // 0x28
	TArray<FRestrictedGameplayTagTableRow> RestrictedGameplayTagList; // 0x38
};

struct USVD_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_115B668D428E4DD65DC859B7776962A7; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_9F19172544B66D25203850843D724F6C; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_CD2DBF0C4FEDA870ABDD8BBC3073B50C; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_5ABC3CC94A9D3AAB87B349B79E941C78; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_7D10649543E1B532ADF4D99F70177E36; // 0x468
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15D2C6C14816A3103AC15EB07B959A23; // 0x4b0
	FAnimNode_Slot AnimGraphNode_Slot_833CA5EA4DD87ED7EFDD32B5E1C76631; // 0x528
};

struct UInterpTrackInstLinearColorProp : UInterpTrackInstProperty {
	FLinearColor ResetColor; // 0x40
};

struct UBP_SquadStateDataCameraman_C : USQSquadStateDataCameraman {
	bool bHiddenWhenUnpossessed; // 0x180
	bool bHiddenWhenNotLocallyControlled; // 0x181
	bool bHideWidgetWhenUnpossessed; // 0x182
	float CameraRotaionYawTolerance; // 0x184
	ASQPlayerState* OwnerPlayerState; // 0x188
	int CachedPlayerId; // 0x194
	int FireTeamIndex; // 0x198
	ASQPlayerState* CachedOwnerPlayerState; // 0x1a0
};

struct USQReconnectionCacheSubsystem : UGameInstanceSubsystem {
	float NonSeamlessReconnectionTimeout; // 0x48
};

struct USQWoundedDamageType : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct UDeviceProfileManager : UObject {
	TArray<UObject*> Profiles; // 0x28
};

struct UBTDecorator_DoesPathExist : UBTDecorator {
	FBlackboardKeySelector BlackboardKeyA; // 0x68
	FBlackboardKeySelector BlackboardKeyB; // 0x90
	char bUseSelf : 1; // 0xb8
	EPathExistanceQueryType PathQueryType; // 0xbc
	UNavigationQueryFilter* FilterClass; // 0xc0
};

struct UMaterialExpressionLandscapeLayerCoords : UMaterialExpression {
	ETerrainCoordMappingType MappingType; // 0x40
	ELandscapeCustomizedCoordType CustomUVType; // 0x41
	float MappingScale; // 0x44
	float MappingRotation; // 0x48
	float MappingPanU; // 0x4c
	float MappingPanV; // 0x50
};

struct UMaterialExpressionStaticBoolParameter : UMaterialExpressionParameter {
	char DefaultValue : 1; // 0x58
};

struct UBookMark : UBookmarkBase {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	TArray<FString> HiddenLevels; // 0x40
};

struct ABP_M4_M68_4Mags_Woodland_C : ABP_M4_M68_4Mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UDistributionFloatParticleParameter : UDistributionFloatParameterBase {
	FName ParameterName; // 0x40
	float MinInput; // 0x48
	float MaxInput; // 0x4c
	float MinOutput; // 0x50
	float MaxOutput; // 0x54
	DistributionParamMode ParamMode; // 0x58
};

struct UInputAxisKeyDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings; // 0x28
};

struct UParticleModuleEventBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct ABP_L85A2AG36_UGL_DarkEarth_Parent_C : ABP_Weapon2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UNetDriver : UObject {
	FString NetConnectionClassName; // 0x30
	FString ReplicationDriverClassName; // 0x40
	int MaxDownloadSize; // 0x50
	char bClampListenServerTickRate : 1; // 0x54
	int NetServerMaxTickRate; // 0x58
	int MaxNetTickRate; // 0x5c
	int MaxInternetClientRate; // 0x60
	int MaxClientRate; // 0x64
	float ServerTravelPause; // 0x68
	float SpawnPrioritySeconds; // 0x6c
	float RelevantTimeout; // 0x70
	float KeepAliveTime; // 0x74
	float InitialConnectTimeout; // 0x78
	float ConnectionTimeout; // 0x7c
	float TimeoutMultiplierForUnoptimizedBuilds; // 0x80
	bool bNoTimeouts; // 0x84
	UNetConnection* ServerConnection; // 0x88
	TArray<UNetConnection*> ClientConnections; // 0x90
	int RecentlyDisconnectedTrackingTime; // 0x100
	UWorld* World; // 0x140
	UPackage* WorldPackage; // 0x148
	UObject* NetConnectionClass; // 0x170
	UObject* ReplicationDriverClass; // 0x178
	UProperty* RoleProperty; // 0x180
	UProperty* RemoteRoleProperty; // 0x188
	FName NetDriverName; // 0x190
	TArray<FChannelDefinition> ChannelDefinitions; // 0x1d8
	TMap<FName, FChannelDefinition> ChannelDefinitionMap; // 0x1e8
	TArray<UChannel*> ActorChannelPool; // 0x238
	float Time; // 0x250
	UReplicationDriver* ReplicationDriver; // 0x720
};

struct UMaterialExpressionSphericalParticleOpacity : UMaterialExpression {
	FExpressionInput Density; // 0x40
	float ConstantDensity; // 0x54
};

struct UBTDecorator_TagCooldown : UBTDecorator {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
	bool bActivatesCooldown; // 0x75
};

struct USQCaptureZoneTCComponent : USQCaptureZoneComponent {
	char InitialTeam; // 0x150
	FText FlagName; // 0x158
	char CapturingTeam; // 0x170
	char OwningTeam; // 0x171
	char LastOwningTeam; // 0x172
	float TimeToCap; // 0x174
	bool Uncappable; // 0x178
	int PlayerAdvantageToCapture; // 0x17c
	int PlayersNeededWhenUncaptured; // 0x180
	float CapturePercent; // 0x184
	int CapturePercentDirection; // 0x188
	bool bIsLocked; // 0x18c
	FScriptMulticastDelegate CaptureStateChangeEvent; // 0x190
	USQCoreStateComponent* StateObject; // 0x1a0
	uint32 TeamCapturabilities; // 0x1c0
};

struct USQRotorsAnimInstance : USQAnimInstance {
	USQRotorVehicleMovementComponent* RotorMovementComponent; // 0x290
	TMap<FName, FRotator> RotationsMap; // 0x298
};

struct UParticleModuleParameterDynamic_Seeded : UParticleModuleParameterDynamic {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x48
};

struct ALandscapeGizmoActor : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UParticleModuleBeamNoise : UParticleModuleBeamBase {
	char bLowFreq_Enabled : 1; // 0x30
	int frequency; // 0x34
	int Frequency_LowRange; // 0x38
	FRawDistributionVector NoiseRange; // 0x40
	FRawDistributionFloat NoiseRangeScale; // 0x90
	char bNRScaleEmitterTime : 1; // 0xc8
	FRawDistributionVector NoiseSpeed; // 0xd0
	char bSmooth : 1; // 0x120
	float NoiseLockRadius; // 0x124
	char bNoiseLock : 1; // 0x128
	char bOscillate : 1; // 0x128
	float NoiseLockTime; // 0x12c
	float NoiseTension; // 0x130
	char bUseNoiseTangents : 1; // 0x134
	FRawDistributionFloat NoiseTangentStrength; // 0x138
	int NoiseTessellation; // 0x170
	char bTargetNoise : 1; // 0x174
	float FrequencyDistance; // 0x178
	char bApplyNoiseScale : 1; // 0x17c
	FRawDistributionFloat NoiseScale; // 0x180
};

struct USQAnimNotify_EnterSeatState : UAnimNotify {
	int SeatIndex; // 0x38
};

struct UAbilityTask_WaitConfirmCancel : UAbilityTask {
	FScriptMulticastDelegate OnConfirm; // 0x80
	FScriptMulticastDelegate OnCancel; // 0x90
};

struct UMultiPackerTextureNode : UObject {
	UTexture* TextureInput; // 0x38
	bool SDF; // 0x40
	int SDF_Radius; // 0x44
	bool MSDF; // 0x48
	int TilesVertical; // 0x4c
	int TilesHorizontal; // 0x50
	bool RectangleSize; // 0x54
	ESizeTexture AutoSizeFill; // 0x55
	ETextureSizeOutputPersonal SetSizeByParameter; // 0x56
	int SizeVertical; // 0x58
	int SizeHorizontal; // 0x5c
	ENameTexture AutoNameFill; // 0x60
	TArray<FTileThumbDatabase> ATexTileData; // 0x68
	TArray<UTilePointer*> Thumbnails; // 0x78
};

struct ABP_AKS74_1P29_C : ABP_AKS74_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Front; // 0x7b8
	UStaticMeshComponent* Scope; // 0x7c0
};

struct UAISubsystem : UObject {
	UAISystem* AISystem; // 0x30
};

struct USQVehicleEngine : USQVehicleComponent {
	UCurveFloat* HealthVsDamageCurve; // 0x588
};

struct ABP_L85A2_C : ABP_GenericRifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAISystem : UAISystemBase {
	FSoftClassPath PerceptionSystemClassName; // 0x58
	FSoftClassPath HotSpotManagerClassName; // 0x70
	float AcceptanceRadius; // 0x88
	float PathfollowingRegularPathPointAcceptanceRadius; // 0x8c
	float PathfollowingNavLinkAcceptanceRadius; // 0x90
	bool bFinishMoveOnGoalOverlap; // 0x94
	bool bAcceptPartialPaths; // 0x95
	bool bAllowStrafing; // 0x96
	bool bEnableBTAITasks; // 0x97
	bool bAllowControllersAsEQSQuerier; // 0x98
	bool bEnableDebuggerPlugin; // 0x99
	ECollisionChannel DefaultSightCollisionChannel; // 0x9a
	UBehaviorTreeManager* BehaviorTreeManager; // 0xa0
	UEnvQueryManager* EnvironmentQueryManager; // 0xa8
	UAIPerceptionSystem* PerceptionSystem; // 0xb0
	TArray<UAIAsyncTaskBlueprintProxy*> AllProxyObjects; // 0xb8
	UAIHotSpotManager* HotSpotManager; // 0xc8
	UNavLocalGridManager* NavLocalGrids; // 0xd0
};

struct ABP_AK74M_1P78_Desert_C : ABP_AK74M_1P78_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4A1_Foregrip_Tracer_C : ABP_M4A1_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQCommanderManager : UActorComponent {
	ASQCommanderState* CommanderState; // 0xd8
	UDataTable* TeamCommands; // 0xe0
	TArray<FCommanderCategory> Categories; // 0xe8
	int MinimumSquadSizeForVoting; // 0xf8
	int MinimumSquadsRequiredForVoting; // 0xfc
	int VotingTimeSeconds; // 0x100
	bool bDoubleCaptureSpeed; // 0x104
	float ActionCooldownExtensionOnNewCommander; // 0x108
	int VoteCooldownTimeSeconds; // 0x10c
	bool bCommanderActive; // 0x130
};

struct ABP_M17MHS_Black_C : ABP_M17MHS_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_L85A2_DarkEarth_SUSAT_Tracer_C : ABP_L85A2_DarkEarth_SUSAT_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct UOverlay : UPanelWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct ASQBot : ASQSoldier {
	UBehaviorTree* BotBehavior; // 0x1e50
};

struct UBP_RPG7v2Parent_StaticInfo_C : UBP_RPG7Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct ASkyLight : AInfo {
	USkyLightComponent* LightComponent; // 0x248
	char bEnabled : 1; // 0x250
};

struct UTestMovieSceneSection : UMovieSceneSection {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int RowIndex; // 0xa8
	int OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct UAnimCompress_Automatic : UAnimCompress {
	float MaxEndEffectorError; // 0x50
	char bRunCurrentDefaultCompressor : 1; // 0x54
	char bAutoReplaceIfExistingErrorTooGreat : 1; // 0x54
	char bRaiseMaxErrorToExisting : 1; // 0x54
	char bTryExhaustiveSearch : 1; // 0x54
};

struct UWidgetAnimation : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x348
	TArray<FWidgetAnimationBinding> AnimationBindings; // 0x350
	bool bLegacyFinishOnStop; // 0x360
	FString DisplayLabel; // 0x368
};

struct UBaseMediaSource : UMediaSource {
	FName PlayerName; // 0x30
};

struct USQInventoryItemWidget : USQUserWidget {
	UImage* ItemImage; // 0x230
	ASQEquipableItem* CurrentItem; // 0x238
	UTextBlock* MagTextBlock; // 0x240
	UImage* BackgroundImage; // 0x248
};

struct AARSharedWorldGameState : AGameState {
	TArray<char> PreviewImageData; // 0x2a8
	TArray<char> ARWorldData; // 0x2b8
	int PreviewImageBytesTotal; // 0x2c8
	int ARWorldBytesTotal; // 0x2cc
	int PreviewImageBytesDelivered; // 0x2d0
	int ARWorldBytesDelivered; // 0x2d4
};

struct UMovieSceneIntegerTrack : UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UMaterialExpressionCustomOutput : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USQLayerTeamConfig : UObject {
	ESQTeam Index; // 0x28
	USQFactionSetup* SpecificFactionSetup; // 0x30
	int Tickets; // 0x58
	int PlayerPercentage; // 0x5c
};

struct ASQNWheeledVehicle : ASQWheeledVehicleBase {
	float DamagedDampingRateMultiplier; // 0xa20
	float DampingRateMultiplier; // 0xa24
};

struct USQSteamItem : UObject {
	int SteamId; // 0x28
	bool bEnabled; // 0x2c
	FScriptMulticastDelegate OnStateChanged; // 0x30
};

struct ABP_L85A2_Classic_SUSAT_C : ABP_L85A2_Classic_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct ABP_M4A1_M68_Foregrip_Tracer_C : ABP_M4A1_M68_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4A1_M68_Founders_C : ABP_M4A1_M68_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMovieSceneBoolTrack : UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UBP_attachment_ANPEQ-15_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UScrollBar : UWidget {
	FScrollBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x5d8
	bool bAlwaysShowScrollbar; // 0x5e0
	bool bAlwaysShowScrollbarTrack; // 0x5e1
	EOrientation Orientation; // 0x5e2
	FVector2D Thickness; // 0x5e4
	FMargin Padding; // 0x5ec
};

struct UParticleModuleVectorFieldRotation : UParticleModuleVectorFieldBase {
	FVector MinInitialRotation; // 0x30
	FVector MaxInitialRotation; // 0x3c
};

struct UAISystemBase : UObject {
	FSoftClassPath AISystemClassName; // 0x28
	FName AISystemModuleName; // 0x40
	bool bInstantiateAISystemOnClient; // 0x50
};

struct USizeBox : UContentWidget {
	char bOverride_WidthOverride : 1; // 0x120
	char bOverride_HeightOverride : 1; // 0x120
	char bOverride_MinDesiredWidth : 1; // 0x120
	char bOverride_MinDesiredHeight : 1; // 0x120
	char bOverride_MaxDesiredWidth : 1; // 0x120
	char bOverride_MaxDesiredHeight : 1; // 0x120
	char bOverride_MinAspectRatio : 1; // 0x120
	char bOverride_MaxAspectRatio : 1; // 0x120
	float WidthOverride; // 0x124
	float HeightOverride; // 0x128
	float MinDesiredWidth; // 0x12c
	float MinDesiredHeight; // 0x130
	float MaxDesiredWidth; // 0x134
	float MaxDesiredHeight; // 0x138
	float MinAspectRatio; // 0x13c
	float MaxAspectRatio; // 0x140
};

struct UInterpGroupInst : UObject {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct UMaterialExpressionStaticSwitch : UMaterialExpression {
	char DefaultValue : 1; // 0x40
	FExpressionInput A; // 0x44
	FExpressionInput B; // 0x58
	FExpressionInput Value; // 0x6c
};

struct UMaterialExpressionMax : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UPlatformInterfaceWebResponse : UObject {
	FString OriginalURL; // 0x28
	int ResponseCode; // 0x38
	int Tag; // 0x3c
	FString StringResponse; // 0x40
	TArray<char> BinaryResponse; // 0x50
};

struct UMapBuildDataRegistry : UObject {
	ELightingBuildQuality LevelLightingQuality; // 0x28
};

struct UAbilityTask_WaitOverlap : UAbilityTask {
	FScriptMulticastDelegate OnOverlap; // 0x80
};

struct USQToastWidget : UUserWidget {
	FScriptMulticastDelegate ToastTextUpdated; // 0x230
	FText ToastText; // 0x240
	float InitialLifetime; // 0x258
};

struct ASQDeployableItem : ASQDeployable {
	ASQPlayerController* InstigatingPlayerController; // 0x410
	ASQPlayerState* InstigatingPlayerState; // 0x418
	int MaxAllowedPerPlayerInGame; // 0x420
	ESQTrackDeployableResult TrackDeployableOverMaxResult; // 0x424
	ASQEquipableItem* EquippableInstigatorClass; // 0x428
};

struct ABP_AK74M_Recruit_C : ABP_AK74M_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ACharacter : APawn {
	USkeletalMeshComponent* Mesh; // 0x2a8
	UCharacterMovementComponent* CharacterMovement; // 0x2b0
	UCapsuleComponent* CapsuleComponent; // 0x2b8
	FBasedMovementInfo BasedMovement; // 0x2c0
	FBasedMovementInfo ReplicatedBasedMovement; // 0x2f0
	float AnimRootMotionTranslationScale; // 0x320
	FVector BaseTranslationOffset; // 0x324
	FQuat BaseRotationOffset; // 0x330
	float ReplicatedServerLastTransformUpdateTimeStamp; // 0x340
	float ReplayLastTransformUpdateTimeStamp; // 0x344
	char ReplicatedMovementMode; // 0x348
	bool bInBaseReplication; // 0x349
	float CrouchedEyeHeight; // 0x34c
	char bIsCrouched : 1; // 0x350
	char bProxyIsJumpForceApplied : 1; // 0x350
	char bPressedJump : 1; // 0x350
	char bClientUpdating : 1; // 0x350
	char bClientWasFalling : 1; // 0x350
	char bClientResimulateRootMotion : 1; // 0x350
	char bClientResimulateRootMotionSources : 1; // 0x350
	char bSimGravityDisabled : 1; // 0x350
	char bClientCheckEncroachmentOnNetUpdate : 1; // 0x351
	char bServerMoveIgnoreRootMotion : 1; // 0x351
	char bWasJumping : 1; // 0x351
	float JumpKeyHoldTime; // 0x354
	float JumpForceTimeRemaining; // 0x358
	float ProxyJumpForceStartedTime; // 0x35c
	float JumpMaxHoldTime; // 0x360
	int JumpMaxCount; // 0x364
	int JumpCurrentCount; // 0x368
	FScriptMulticastDelegate OnReachedJumpApex; // 0x370
	FScriptMulticastDelegate MovementModeChangedDelegate; // 0x390
	FScriptMulticastDelegate OnCharacterMovementUpdated; // 0x3a0
	FRootMotionSourceGroup SavedRootMotion; // 0x3b0
	FRootMotionMovementParams ClientRootMotionParams; // 0x4b0
	TArray<FSimulatedRootMotionReplicatedMove> RootMotionRepMoves; // 0x4f0
	FRepRootMotionMontage RepRootMotion; // 0x500
};

struct UBP_Attachment_M150_Noads_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMaterialExpressionVirtualTextureFeatureSwitch : UMaterialExpression {
	FExpressionInput No; // 0x40
	FExpressionInput Yes; // 0x54
};

struct AWorldSettings : AInfo {
	int VisibilityCellSize; // 0x250
	EVisibilityAggressiveness VisibilityAggressiveness; // 0x254
	char bPrecomputeVisibility : 1; // 0x255
	char bPlaceCellsOnlyAlongCameraTracks : 1; // 0x255
	char bEnableWorldBoundsChecks : 1; // 0x255
	char bEnableNavigationSystem : 1; // 0x255
	char bEnableAISystem : 1; // 0x255
	char bEnableWorldComposition : 1; // 0x255
	char bUseClientSideLevelStreamingVolumes : 1; // 0x255
	char bEnableWorldOriginRebasing : 1; // 0x255
	char bWorldGravitySet : 1; // 0x256
	char bGlobalGravitySet : 1; // 0x256
	char bMinimizeBSPSections : 1; // 0x256
	char bForceNoPrecomputedLighting : 1; // 0x256
	char bHighPriorityLoading : 1; // 0x256
	char bHighPriorityLoadingLocal : 1; // 0x256
	char bOverrideDefaultBroadphaseSettings : 1; // 0x256
	UNavigationSystemConfig* NavigationSystemConfig; // 0x258
	UNavigationSystemConfig* NavigationSystemConfigOverride; // 0x260
	float WorldToMeters; // 0x268
	float KillZ; // 0x26c
	UDamageType* KillZDamageType; // 0x270
	float WorldGravityZ; // 0x278
	float GlobalGravityZ; // 0x27c
	ADefaultPhysicsVolume* DefaultPhysicsVolumeClass; // 0x280
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x288
	AGameModeBase* DefaultGameMode; // 0x290
	AGameNetworkManager* GameNetworkManagerClass; // 0x298
	int PackedLightAndShadowMapTextureSize; // 0x2a0
	FVector DefaultColorScale; // 0x2a4
	float DefaultMaxDistanceFieldOcclusionDistance; // 0x2b0
	float GlobalDistanceFieldViewDistance; // 0x2b4
	float DynamicIndirectShadowsSelfShadowingIntensity; // 0x2b8
	FReverbSettings DefaultReverbSettings; // 0x2c0
	FInteriorSettings DefaultAmbientZoneSettings; // 0x2e0
	float MonoCullingDistance; // 0x304
	USoundMix* DefaultBaseSoundMix; // 0x308
	float TimeDilation; // 0x310
	float MatineeTimeDilation; // 0x314
	float DemoPlayTimeDilation; // 0x318
	float MinGlobalTimeDilation; // 0x31c
	float MaxGlobalTimeDilation; // 0x320
	float MinUndilatedFrameTime; // 0x324
	float MaxUndilatedFrameTime; // 0x328
	FBroadphaseSettings BroadphaseSettings; // 0x32c
	APlayerState* Pauser; // 0x370
	TArray<FNetViewer> ReplicationViewers; // 0x378
	TArray<UAssetUserData*> AssetUserData; // 0x388
	APlayerState* PauserPlayerState; // 0x398
	int MaxNumberOfBookmarks; // 0x3a0
	UBookmarkBase* DefaultBookmarkClass; // 0x3a8
	TArray<UBookmarkBase*> BookmarkArray; // 0x3b0
	UBookmarkBase* LastBookmarkClass; // 0x3c0
};

struct UMovieScene3DTransformSection : UMovieSceneSection {
	FMovieSceneTransformMask TransformMask; // 0xe0
	FMovieSceneFloatChannel Translation[0x3]; // 0xe8
	FMovieSceneFloatChannel Rotation[0x3]; // 0x2c8
	FMovieSceneFloatChannel Scale[0x3]; // 0x4a8
	FMovieSceneFloatChannel ManualWeight; // 0x688
	bool bUseQuaternionInterpolation; // 0x72c
};

struct UBP_attachment_ANPEQ-15_Side_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ARigidBodyBase : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UBlueprintGeneratedClass : UClass {
	int NumReplicatedProperties; // 0x200
	char bHasNativizedParent : 1; // 0x204
	char bHasCookedComponentInstancingData : 1; // 0x204
	TArray<UDynamicBlueprintBinding*> DynamicBindingObjects; // 0x208
	TArray<UActorComponent*> ComponentTemplates; // 0x218
	TArray<UTimelineTemplate*> Timelines; // 0x228
	USimpleConstructionScript* SimpleConstructionScript; // 0x238
	UInheritableComponentHandler* InheritableComponentHandler; // 0x240
	UStructProperty* UberGraphFramePointerProperty; // 0x248
	UFunction* UberGraphFunction; // 0x250
	TMap<FName, FBlueprintCookedComponentInstancingData> CookedComponentInstancingData; // 0x258
};

struct USQColorsDataAsset : UDataAsset {
	FLinearColor TintColors[0x7]; // 0x30
	TArray<FLinearColor> FireTeamColors; // 0xa0
};

struct USQConsole : UConsole {
	ESQConsoleMessageType MessageType; // 0x130
	FString CustomMessage; // 0x138
	float LastMessageTime; // 0x148
};

struct UMaterialExpressionSubtract : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct USQPacketLossWidget : USQUserWidget {
	UImage* DisplayedImage; // 0x230
	UTextBlock* DisplayedText; // 0x238
	UMaterialInterface* PacketLossMaterial; // 0x240
	float ShowIndicatorThreasholdFrac; // 0x248
	UMaterialInstanceDynamic* PacketLossMID; // 0x258
};

struct UHighlightsSetScreenshotAsync : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct USizeBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UMaterialExpressionDeltaTime : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USmokeTestCommandlet : UCommandlet {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UCurveFloat : UCurveBase {
	FRichCurve FloatCurve; // 0x30
	bool bIsEventCurve; // 0xb0
};

struct ABP_AK74MGP25_UGL_Desert_Smoke_Red_C : ABP_AK74MGP25_UGL_Desert_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4M203_M150_UGL_Smoke_Founders_C : ABP_M4M203_M150_UGL_Parent_Founders_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQMovementComponentNetworker : UActorComponent {
	TArray<USQMovementComponentPacked*> NetworkedComponents; // 0xd8
	TArray<FAdjustPositionAndRotationPacket> PendingClientAdjustPositionAndRotation; // 0xe8
	TArray<FMovePacket> PendingServerMove; // 0xf8
};

struct USQSoundNodeFixedDistanceCrossFade : USoundNode {
	TArray<FSQDistanceDatum> CrossFadeInput; // 0x40
	float TestDistance; // 0x50
};

struct USQDataGatheringComponent : UActorComponent {
	UHeatMapRecorder* HeatMapRecorder; // 0xd8
};

struct UPrimitiveComponent : USceneComponent {
	float MinDrawDistance; // 0x220
	float LDMaxDrawDistance; // 0x224
	float CachedMaxDrawDistance; // 0x228
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x22c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x22d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x22e
	ELightmapType LightmapType; // 0x22f
	char bUseMaxLODAsImposter : 1; // 0x230
	char bNeverDistanceCull : 1; // 0x230
	char bAlwaysCreatePhysicsState : 1; // 0x230
	char bGenerateOverlapEvents : 1; // 0x230
	char bGenerateLocalOverlapEvents : 1; // 0x231
	char bMultiBodyOverlap : 1; // 0x231
	char bTraceComplexOnMove : 1; // 0x231
	char bReturnMaterialOnMove : 1; // 0x231
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x231
	char bAllowCullDistanceVolume : 1; // 0x231
	char bHasMotionBlurVelocityMeshes : 1; // 0x231
	char bVisibleInReflectionCaptures : 1; // 0x232
	char bVisibleInRayTracing : 1; // 0x232
	char bRenderInMainPass : 1; // 0x232
	char bReceivesDecals : 1; // 0x232
	char bOwnerNoSee : 1; // 0x232
	char bOnlyOwnerSee : 1; // 0x232
	char bTreatAsBackgroundForOcclusion : 1; // 0x232
	char bUseAsOccluder : 1; // 0x232
	char bSelectable : 1; // 0x233
	char bForceMipStreaming : 1; // 0x233
	char bHasPerInstanceHitProxies : 1; // 0x233
	char CastShadow : 1; // 0x233
	char bAffectDynamicIndirectLighting : 1; // 0x233
	char bAffectDistanceFieldLighting : 1; // 0x233
	char bCastDynamicShadow : 1; // 0x233
	char bCastStaticShadow : 1; // 0x233
	char bCastVolumetricTranslucentShadow : 1; // 0x234
	char bSelfShadowOnly : 1; // 0x234
	char bCastFarShadow : 1; // 0x234
	char bCastInsetShadow : 1; // 0x234
	char bCastCinematicShadow : 1; // 0x234
	char bCastHiddenShadow : 1; // 0x234
	char bCastShadowAsTwoSided : 1; // 0x234
	char bLightAsIfStatic : 1; // 0x234
	char bLightAttachmentsAsGroup : 1; // 0x235
	char bReceiveMobileCSMShadows : 1; // 0x235
	char bSingleSampleShadowFromStationaryLights : 1; // 0x235
	char bIgnoreRadialImpulse : 1; // 0x235
	char bIgnoreRadialForce : 1; // 0x235
	char bApplyImpulseOnDamage : 1; // 0x235
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x235
	char AlwaysLoadOnClient : 1; // 0x235
	char AlwaysLoadOnServer : 1; // 0x236
	char bUseEditorCompositing : 1; // 0x236
	char bRenderCustomDepth : 1; // 0x236
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x237
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x239
	FLightingChannels LightingChannels; // 0x23a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x23b
	int CustomDepthStencilValue; // 0x23c
	FCustomPrimitiveData CustomPrimitiveData; // 0x240
	int TranslucencySortPriority; // 0x250
	int VisibilityId; // 0x254
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x258
	int VirtualTextureLodBias; // 0x268
	int VirtualTextureCullMips; // 0x26c
	int VirtualTextureMinCoverage; // 0x270
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x274
	float LpvBiasMultiplier; // 0x27c
	float BoundsScale; // 0x288
	TArray<AActor*> MoveIgnoreActors; // 0x298
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2a8
	FBodyInstance BodyInstance; // 0x2c8
	FScriptMulticastDelegate OnComponentHit; // 0x3d8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3d9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3da
	FScriptMulticastDelegate OnComponentWake; // 0x3db
	FScriptMulticastDelegate OnComponentSleep; // 0x3dc
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3de
	FScriptMulticastDelegate OnEndCursorOver; // 0x3df
	FScriptMulticastDelegate OnClicked; // 0x3e0
	FScriptMulticastDelegate OnReleased; // 0x3e1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3e2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3e3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3e4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3e5
	UPrimitiveComponent* LODParentPrimitive; // 0x400
};

struct UBehaviorTreeComponent : UBrainComponent {
	TArray<UBTNode*> NodeInstances; // 0x158
};

struct UParticleModuleRotation : UParticleModuleRotationBase {
	FRawDistributionFloat StartRotation; // 0x30
};

struct USQCoreStateMapWidget : USQCoreStateWidget {
	float ZOrder; // 0x258
	bool bAutoSize; // 0x25c
	FVector2D Alignment; // 0x260
	USQCoreStateMapComponent* MapComponent; // 0x268
};

struct USQRadialIconToggleButton : USQRadialIconButton {
	bool bToggled; // 0x410
	FLinearColor InnerHoverToggledColor; // 0x414
};

struct UMaterialExpressionMaterialLayerOutput : UMaterialExpressionFunctionOutput {
	FName OutputName; // 0x40
	FString Description; // 0x48
	int SortPriority; // 0x58
	FExpressionInput A; // 0x5c
	char bLastPreviewed : 1; // 0x70
	FGuid ID; // 0x74
};

struct UBP_SmallShockwave_C : USQShockwave {
	ESQShockwaveEffectType ShockwaveEffectType; // 0x28
	float Strength; // 0x2c
	TArray<FSQShockwaveQualitySetting> ShockwaveQualitySettings; // 0x30
	FSQCameraShake CameraShake; // 0x40
	FSQCameraShake SecondaryCameraShake; // 0x60
	int VerticalSteps; // 0x80
	int HorizontalSteps; // 0x84
	FRotator DefaultRotation; // 0x88
	FVector DefaultLocationOffset; // 0x94
	float Range; // 0xa0
	float PitchRange; // 0xa4
	float YawRange; // 0xa8
	float CullingDistance; // 0xac
	float NearbyExplosionEventRadius; // 0xb0
	int MaxSoundsToSpawn; // 0xb4
	int MaxDecalsToSpawn; // 0xb8
	bool bDebugLines; // 0xbc
	bool bDebugSpheres; // 0xbd
	UParticleSystem* Emitter; // 0xc0
	USQPhysicalMaterialEffects* DefaultEffectsClass; // 0xc8
};

struct UInputKeyDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputKeyDelegateBinding> InputKeyDelegateBindings; // 0x28
};

struct ABP_RPG7V2_Tandem_C : ABP_RPG7V2_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UMaterialInterface : UObject {
	USubsurfaceProfile* SubsurfaceProfile; // 0x38
	FLightmassMaterialInterfaceSettings LightmassSettings; // 0x50
	TArray<FMaterialTextureInfo> TextureStreamingData; // 0x68
	TArray<UAssetUserData*> AssetUserData; // 0x78
};

struct USQDamageType_Collision : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct UParticleModuleKillBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UPlayFabDataAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xf0
	UPlayFabJsonObject* RequestJsonObj; // 0xf8
	UPlayFabJsonObject* ResponseJsonObj; // 0x100
};

struct ABP_AK74M_1P78_C : ABP_AK74M_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74MGP25_1P63_UGL_HE_C : ABP_AK74MGP25_1P63_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ULevelCapture : UMovieSceneCapture {
	bool bAutoStartCapture; // 0x218
	FGuid PrerequisiteActorId; // 0x224
};

struct UMaterialExpressionTextureObject : UMaterialExpressionTextureBase {
	UTexture* Texture; // 0x40
	EMaterialSamplerType SamplerType; // 0x48
	char IsDefaultMeshpaintTexture : 1; // 0x4c
};

struct UColorBinding : UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct UInterpTrackInstParticleReplay : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct USoundNodeWaveParam : USoundNode {
	FName WaveParameterName; // 0x40
};

struct UCircularThrobber : UWidget {
	int NumberOfPieces; // 0x108
	float Period; // 0x10c
	float Radius; // 0x110
	USlateBrushAsset* PieceImage; // 0x118
	FSlateBrush Image; // 0x120
	bool bEnableRadius; // 0x1a8
};

struct UWidgetBlueprintGeneratedClass : UBlueprintGeneratedClass {
	UWidgetTree* WidgetTree; // 0x2e0
	char bAllowTemplate : 1; // 0x2e8
	char bAllowDynamicCreation : 1; // 0x2e8
	char bValidTemplate : 1; // 0x2e8
	char bTemplateInitialized : 1; // 0x2e8
	char bCookedTemplate : 1; // 0x2e8
	char bClassRequiresNativeTick : 1; // 0x2e8
	TArray<FDelegateRuntimeBinding> Bindings; // 0x2f0
	TArray<UWidgetAnimation*> Animations; // 0x300
	TArray<FName> NamedSlots; // 0x310
	UUserWidget* TemplateAsset; // 0x320
	UUserWidget* Template; // 0x348
};

struct UPhysicsSettings : UDeveloperSettings {
	float DefaultGravityZ; // 0x38
	float DefaultTerminalVelocity; // 0x3c
	float DefaultFluidFriction; // 0x40
	int SimulateScratchMemorySize; // 0x44
	int RagdollAggregateThreshold; // 0x48
	float TriangleMeshTriangleMinAreaThreshold; // 0x4c
	bool bEnableShapeSharing; // 0x50
	bool bEnablePCM; // 0x51
	bool bEnableStabilization; // 0x52
	bool bWarnMissingLocks; // 0x53
	bool bEnable2DPhysics; // 0x54
	FRigidBodyErrorCorrection PhysicErrorCorrection; // 0x58
	ESettingsLockedAxis LockedAxis; // 0x8c
	ESettingsDOF DefaultDegreesOfFreedom; // 0x8d
	float BounceThresholdVelocity; // 0x90
	EFrictionCombineMode FrictionCombineMode; // 0x94
	EFrictionCombineMode RestitutionCombineMode; // 0x95
	float MaxAngularVelocity; // 0x98
	float MaxDepenetrationVelocity; // 0x9c
	float ContactOffsetMultiplier; // 0xa0
	float MinContactOffset; // 0xa4
	float MaxContactOffset; // 0xa8
	bool bSimulateSkeletalMeshOnDedicatedServer; // 0xac
	ECollisionTraceFlag DefaultShapeComplexity; // 0xad
	bool bDefaultHasComplexCollision; // 0xae
	bool bSuppressFaceRemapTable; // 0xaf
	bool bSupportUVFromHitResults; // 0xb0
	bool bDisableActiveActors; // 0xb1
	bool bDisableKinematicStaticPairs; // 0xb2
	bool bDisableKinematicKinematicPairs; // 0xb3
	bool bDisableCCD; // 0xb4
	bool bEnableEnhancedDeterminism; // 0xb5
	float AnimPhysicsMinDeltaTime; // 0xb8
	bool bSimulateAnimPhysicsAfterReset; // 0xbc
	float MaxPhysicsDeltaTime; // 0xc0
	bool bSubstepping; // 0xc4
	bool bSubsteppingAsync; // 0xc5
	float MaxSubstepDeltaTime; // 0xc8
	int MaxSubsteps; // 0xcc
	float SyncSceneSmoothingFactor; // 0xd0
	float InitialAverageFrameRate; // 0xd4
	int PhysXTreeRebuildRate; // 0xd8
	TArray<FPhysicalSurfaceName> PhysicalSurfaces; // 0xe0
	FBroadphaseSettings DefaultBroadphaseSettings; // 0xf0
	FChaosPhysicsSettings ChaosSettings; // 0x130
};

struct USphereReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadius; // 0x290
	float CaptureDistanceScale; // 0x294
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x298
};

struct UPlayFabMultiplayerAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x3c0
	UPlayFabJsonObject* RequestJsonObj; // 0x3c8
	UPlayFabJsonObject* ResponseJsonObj; // 0x3d0
};

struct ASQProjectile : AActor {
	USphereComponent* CollisionComp; // 0x248
	UProjectileMovementComponent* ProjectileMovement; // 0x250
	UDamageType* DamageTypeToApply; // 0x258
	FHitResult LastImpactHitResult; // 0x260
	bool bHasImpacted; // 0x2e8
	bool bDestroyOnImpact; // 0x2e9
	bool bAppliesSuppression; // 0x2ea
	float CollisionSize; // 0x2ec
	bool bIsExplosiveProjectile; // 0x31c
	float ExplosiveBaseDamage; // 0x320
	float ExplosiveMinimumDamage; // 0x324
	float ExplosiveKillZoneRadius; // 0x328
	float ExplosiveDamageInnerRadius; // 0x32c
	float ExplosiveDamageOuterRadius; // 0x330
	float ExplosiveDamageFalloff; // 0x334
	float ArmorPenetrationDepthMillimeters; // 0x338
	float TraceDistanceAfterPenetrationMeters; // 0x33c
	float ExplosiveDamageDistanceFromImpactNormal; // 0x340
	UAudioComponent* ProjectileAC; // 0x348
	bool bOnlyPlayFlybySoundOnProjectile; // 0x350
	USoundCue* FlybySound; // 0x358
	USQSuppressionInfo* SuppressionInfoClass; // 0x360
	TMap<USQPhysicalMaterial*, FSQProjectileImpactEffect> SpecificImpactEffects; // 0x368
	TMap<USQPhysicalMaterial*, FSQProjectileImpactEffect> SpecificThrowableEffects; // 0x3b8
	TMap<USQPhysicalMaterial*, FSQProjectileImpactEffect> SpecificExplosionEffects; // 0x408
	USQPhysicalMaterialEffects* DefaultEffectsClass; // 0x458
	bool bClientAuthoritativeImpact; // 0x460
	bool bProxiesPredictImpact; // 0x461
	AController* DamageInstigatorController; // 0x468
};

struct USQPawnInventoryComponent : UActorComponent {
	FScriptMulticastDelegate EquippedNewItemEvent; // 0xd8
	FScriptMulticastDelegate PlayAnimationEvent; // 0xe8
	FScriptMulticastDelegate PauseAnimationEvent; // 0xf8
	FScriptMulticastDelegate ResumeAnimationEvent; // 0x108
	FScriptMulticastDelegate SetAnimationPlayRateEvent; // 0x118
	FScriptMulticastDelegate EndLoopAnimationEvent; // 0x128
	FScriptMulticastDelegate StopAnimationEvent; // 0x138
	FScriptMulticastDelegate AmmoChangedEvent; // 0x148
	USQItemStaticInfo* CurrentItemStaticInfo; // 0x158
	USQItemStaticInfo* DefaultStaticInfoClass; // 0x160
	ASQEquipableItem* CurrentWeapon; // 0x168
	bool bIsInteracting; // 0x188
	bool bIsTimingOut; // 0x189
	float CurrentFadeOut; // 0x18c
	float FadeoutDuration; // 0x190
	float FadeoutDelay; // 0x194
	char bClickInventoryToggle : 1; // 0x198
	int NextItemSlot; // 0x19c
	int NextItemOffset; // 0x1a0
	int CurrentWeaponSlot; // 0x1a4
	int CurrentWeaponOffset; // 0x1a8
	TArray<FSQWeaponGroupData> Inventory; // 0x1b0
	FSQWeaponGroupDataArray RepInventory; // 0x1c0
	ASQEquipableItem* PendingWeapon; // 0x2d8
};

struct UBP_MedShockwave_notrace_C : USQShockwave {
	ESQShockwaveEffectType ShockwaveEffectType; // 0x28
	float Strength; // 0x2c
	TArray<FSQShockwaveQualitySetting> ShockwaveQualitySettings; // 0x30
	FSQCameraShake CameraShake; // 0x40
	FSQCameraShake SecondaryCameraShake; // 0x60
	int VerticalSteps; // 0x80
	int HorizontalSteps; // 0x84
	FRotator DefaultRotation; // 0x88
	FVector DefaultLocationOffset; // 0x94
	float Range; // 0xa0
	float PitchRange; // 0xa4
	float YawRange; // 0xa8
	float CullingDistance; // 0xac
	float NearbyExplosionEventRadius; // 0xb0
	int MaxSoundsToSpawn; // 0xb4
	int MaxDecalsToSpawn; // 0xb8
	bool bDebugLines; // 0xbc
	bool bDebugSpheres; // 0xbd
	UParticleSystem* Emitter; // 0xc0
	USQPhysicalMaterialEffects* DefaultEffectsClass; // 0xc8
};

struct UReplicationGraphNode_ConnectionDormancyNode : UReplicationGraphNode_ActorList {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct UParticleModuleCollision : UParticleModuleCollisionBase {
	FRawDistributionVector DampingFactor; // 0x30
	FRawDistributionVector DampingFactorRotation; // 0x80
	FRawDistributionFloat MaxCollisions; // 0xd0
	EParticleCollisionComplete CollisionCompletionOption; // 0x108
	TArray<EObjectTypeQuery> CollisionTypes; // 0x110
	char bApplyPhysics : 1; // 0x128
	char bIgnoreTriggerVolumes : 1; // 0x128
	FRawDistributionFloat ParticleMass; // 0x130
	float DirScalar; // 0x168
	char bPawnsDoNotDecrementCount : 1; // 0x16c
	char bOnlyVerticalNormalsDecrementCount : 1; // 0x16c
	float VerticalFudgeFactor; // 0x170
	FRawDistributionFloat DelayAmount; // 0x178
	char bDropDetail : 1; // 0x1b0
	char bCollideOnlyIfVisible : 1; // 0x1b0
	char bIgnoreSourceActor : 1; // 0x1b0
	float MaxCollisionDistance; // 0x1b4
	int MaxCollisionSoundsToPlay; // 0x1b8
	USoundBase* CollisionSound; // 0x1c0
};

struct UParticleModulePivotOffset : UParticleModuleLocationBase {
	FVector2D PivotOffset; // 0x30
};

struct ABP_Projectile_C : ASQProjectile {
	UStaticMesh* TracerMesh; // 0x490
	UMaterial* TracerMaterial; // 0x498
};

struct UWidgetInteractionComponent : USceneComponent {
	FScriptMulticastDelegate OnHoveredWidgetChanged; // 0x218
	int VirtualUserIndex; // 0x238
	float PointerIndex; // 0x23c
	ECollisionChannel TraceChannel; // 0x240
	float InteractionDistance; // 0x244
	EWidgetInteractionSource InteractionSource; // 0x248
	bool bEnableHitTesting; // 0x249
	bool bShowDebug; // 0x24a
	FLinearColor DebugColor; // 0x24c
	FHitResult CustomHitResult; // 0x2d8
	FVector2D LocalHitLocation; // 0x360
	FVector2D LastLocalHitLocation; // 0x368
	UWidgetComponent* HoveredWidgetComponent; // 0x370
	FHitResult LastHitResult; // 0x378
	bool bIsHoveredWidgetInteractable; // 0x400
	bool bIsHoveredWidgetFocusable; // 0x401
	bool bIsHoveredWidgetHitTestVisible; // 0x402
};

struct UExporter : UObject {
	UObject* SupportedClass; // 0x28
	UObject* ExportRootScope; // 0x30
	TArray<FString> FormatExtension; // 0x38
	TArray<FString> FormatDescription; // 0x48
	int PreferredFormatIndex; // 0x58
	int TextIndent; // 0x5c
	char bText : 1; // 0x60
	char bSelectedOnly : 1; // 0x60
	char bForceFileOperations : 1; // 0x60
	UAssetExportTask* ExportTask; // 0x68
};

struct UMaterialExpressionAbs : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMovieSceneSlomoSection : UMovieSceneFloatSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe0
};

struct ABP_L85A2AG36_ACOG_UGL_Smoke_Blue_C : ABP_L85A2AG36_ACOG_UGL_Smoke_Red_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UNavArea_Default : UNavArea {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UParticleModuleBeamBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UPawnActionsComponent : UActorComponent {
	APawn* ControlledPawn; // 0xd8
	TArray<FPawnActionStack> ActionStacks; // 0xe0
	TArray<FPawnActionEvent> ActionEvents; // 0xf0
	UPawnAction* CurrentAction; // 0x100
};

struct USQMapWidgetDeployable : USQMapWidget {
	ESQBuildState BuildState; // 0x2a8
};

struct UNavAreaMeta_SwitchByAgent : UNavAreaMeta {
	UNavArea* Agent0Area; // 0x48
	UNavArea* Agent1Area; // 0x50
	UNavArea* Agent2Area; // 0x58
	UNavArea* Agent3Area; // 0x60
	UNavArea* Agent4Area; // 0x68
	UNavArea* Agent5Area; // 0x70
	UNavArea* Agent6Area; // 0x78
	UNavArea* Agent7Area; // 0x80
	UNavArea* Agent8Area; // 0x88
	UNavArea* Agent9Area; // 0x90
	UNavArea* Agent10Area; // 0x98
	UNavArea* Agent11Area; // 0xa0
	UNavArea* Agent12Area; // 0xa8
	UNavArea* Agent13Area; // 0xb0
	UNavArea* Agent14Area; // 0xb8
	UNavArea* Agent15Area; // 0xc0
};

struct USQBaseButton : USQUserWidget {
	bool bIsHovering; // 0x230
	bool bIsActive; // 0x231
	float HoveringColorBlend; // 0x234
	float HoverColorBlendSpeed; // 0x238
	bool bIsPressing; // 0x23c
	float PressColorBlend; // 0x240
	float PressColorBlendSpeed; // 0x244
	UImage* ButtonImage; // 0x248
	UBorder* ButtonBorder; // 0x250
	UTextBlock* ButtonTextBlock; // 0x258
	FSQButtonStyle SQButtonStyle; // 0x260
	float Alpha; // 0x2e0
};

struct UBTCompositeNode : UBTNode {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct ANavModifierVolume : AVolume {
	UNavArea* AreaClass; // 0x288
};

struct UBP_Attachment_M150_Woodland_C : UBP_Attachment_M150_C {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct AGameNetworkManager : AInfo {
	float BadPacketLossThreshold; // 0x248
	float SeverePacketLossThreshold; // 0x24c
	int BadPingThreshold; // 0x250
	int SeverePingThreshold; // 0x254
	int AdjustedNetSpeed; // 0x258
	float LastNetSpeedUpdateTime; // 0x25c
	int TotalNetBandwidth; // 0x260
	int MinDynamicBandwidth; // 0x264
	int MaxDynamicBandwidth; // 0x268
	char bIsStandbyCheckingEnabled : 1; // 0x26c
	char bHasStandbyCheatTriggered : 1; // 0x26c
	float StandbyRxCheatTime; // 0x270
	float StandbyTxCheatTime; // 0x274
	float PercentMissingForRxStandby; // 0x278
	float PercentMissingForTxStandby; // 0x27c
	float PercentForBadPing; // 0x280
	float JoinInProgressStandbyWaitTime; // 0x284
	float MoveRepSize; // 0x288
	float MAXPOSITIONERRORSQUARED; // 0x28c
	float MAXNEARZEROVELOCITYSQUARED; // 0x290
	float CLIENTADJUSTUPDATECOST; // 0x294
	float MAXCLIENTUPDATEINTERVAL; // 0x298
	float MaxClientForcedUpdateDuration; // 0x29c
	float ServerForcedUpdateHitchThreshold; // 0x2a0
	float ServerForcedUpdateHitchCooldown; // 0x2a4
	float MaxMoveDeltaTime; // 0x2a8
	float MaxClientSmoothingDeltaTime; // 0x2ac
	float ClientNetSendMoveDeltaTime; // 0x2b0
	float ClientNetSendMoveDeltaTimeThrottled; // 0x2b4
	float ClientNetSendMoveDeltaTimeStationary; // 0x2b8
	int ClientNetSendMoveThrottleAtNetSpeed; // 0x2bc
	int ClientNetSendMoveThrottleOverPlayerCount; // 0x2c0
	bool ClientAuthorativePosition; // 0x2c4
	float ClientErrorUpdateRateLimit; // 0x2c8
	float ClientNetCamUpdateDeltaTime; // 0x2cc
	float ClientNetCamUpdatePositionLimit; // 0x2d0
	bool bMovementTimeDiscrepancyDetection; // 0x2d4
	bool bMovementTimeDiscrepancyResolution; // 0x2d5
	float MovementTimeDiscrepancyMaxTimeMargin; // 0x2d8
	float MovementTimeDiscrepancyMinTimeMargin; // 0x2dc
	float MovementTimeDiscrepancyResolutionRate; // 0x2e0
	float MovementTimeDiscrepancyDriftAllowance; // 0x2e4
	bool bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x2e8
	bool bUseDistanceBasedRelevancy; // 0x2e9
};

struct UBTDecorator_CheckGameplayTagsOnActor : UBTDecorator {
	FBlackboardKeySelector ActorToCheck; // 0x68
	EGameplayContainerMatchType TagsToMatch; // 0x90
	FGameplayTagContainer GameplayTags; // 0x98
	FString CachedDescription; // 0xb8
};

struct UBP_Attachment_M68_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UNamedSlot : UContentWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct USQTeamInfo : UObject {
	FString ShortName; // 0x28
	FString Name; // 0x38
	FText Description; // 0x48
	FText CommanderRequirementsText; // 0x60
	bool bBuddyRallyPointEnabled; // 0x78
	ASQSoldier* SoldierClass; // 0x80
	UStaticMesh* RallyPointMesh; // 0x88
	TArray<USQRoleSettings*> Roles; // 0x90
	TArray<FSQRoleGroupLimit> GroupLimits; // 0xa0
	TArray<FSQDeployableLimit> DeployableFOBLimits; // 0xb0
	USQRoleSettings* DefaultRole; // 0xc0
	USQRoleSettings* LeaveSquadRole; // 0xc8
	UTexture2D* MapFlag; // 0xd0
	UTexture2D* HudFlag; // 0xd8
	UTexture2D* HudBadge; // 0xe0
	UTexture2D* TeamImage; // 0xe8
	FSQCommanderSounds CommanderSoundsList; // 0xf0
	FSQTeamEventSounds TeamEventSoundsList; // 0x230
	FSQMedicCalls MedicCall; // 0x2f8
	TArray<FSQObjectiveSounds> ObjectiveSoundsList; // 0x370
};

struct UEnvQueryTest_Overlap : UEnvQueryTest {
	FEnvOverlapData OverlapData; // 0x1c0
};

struct UBP_SquadStateDataPlayerState_C : USQSquadStateDataPlayerState {
	char bIsSquadLeader : 1; // 0x118
	char bIsFireTeamLeader : 1; // 0x118
	int FireTeamIndex; // 0x11c
	int FireTeamPosition; // 0x120
	USQRoleSettings* DeployRole; // 0x128
	USQVehicleUIStaticDataAsset* CurrentVehicleData; // 0x130
	ASQPlayerState* PlayerState; // 0x138
	int PlayerId; // 0x140
	FSQCoreStateId SelectionComponentId; // 0x144
	ESQVoiceChannel VoipChannel; // 0x146
	bool bIsMuted; // 0x147
};

struct USQRotorVehicleMovementComponent : USQForceNetMovementComponent {
	TArray<USQRotorSetup*> RotorsSetup; // 0x2c8
	TArray<USQRotor*> Rotors; // 0x2d8
};

struct USQSoundNodeFlyBy : USoundNode {
	float SpeedOfSound; // 0x40
	float MidpointTime; // 0x44
	float DopplerIntensity; // 0x48
	bool bUseListenerLocationForSoundSource; // 0x4c
	bool bOverrideSpatialization; // 0x4d
	bool bUseSpatialization; // 0x4e
	float TestPitchRelativeVelocityInMeters; // 0x50
	float TestStartTime; // 0x54
};

struct UMaterialExpression : UObject {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UBTDecorator_ForceSuccess : UBTDecorator {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct UDrawSphereComponent : USphereComponent {
	float SphereRadius; // 0x420
};

struct AServerStatReplicator : AInfo {
	bool bUpdateStatNet; // 0x248
	bool bOverwriteClientStats; // 0x249
	uint32 Channels; // 0x24c
	uint32 InRate; // 0x250
	uint32 OutRate; // 0x254
	uint32 OutSaturation; // 0x258
	uint32 MaxPacketOverhead; // 0x25c
	uint32 InRateClientMax; // 0x260
	uint32 InRateClientMin; // 0x264
	uint32 InRateClientAvg; // 0x268
	uint32 InPacketsClientMax; // 0x26c
	uint32 InPacketsClientMin; // 0x270
	uint32 InPacketsClientAvg; // 0x274
	uint32 OutRateClientMax; // 0x278
	uint32 OutRateClientMin; // 0x27c
	uint32 OutRateClientAvg; // 0x280
	uint32 OutPacketsClientMax; // 0x284
	uint32 OutPacketsClientMin; // 0x288
	uint32 OutPacketsClientAvg; // 0x28c
	uint32 NetNumClients; // 0x290
	uint32 InPackets; // 0x294
	uint32 OutPackets; // 0x298
	uint32 InBunches; // 0x29c
	uint32 OutBunches; // 0x2a0
	uint32 OutLoss; // 0x2a4
	uint32 InLoss; // 0x2a8
	uint32 VoiceBytesSent; // 0x2ac
	uint32 VoiceBytesRecv; // 0x2b0
	uint32 VoicePacketsSent; // 0x2b4
	uint32 VoicePacketsRecv; // 0x2b8
	uint32 PercentInVoice; // 0x2bc
	uint32 PercentOutVoice; // 0x2c0
	uint32 NumActorChannels; // 0x2c4
	uint32 NumConsideredActors; // 0x2c8
	uint32 PrioritizedActors; // 0x2cc
	uint32 NumRelevantActors; // 0x2d0
	uint32 NumRelevantDeletedActors; // 0x2d4
	uint32 NumReplicatedActorAttempts; // 0x2d8
	uint32 NumReplicatedActors; // 0x2dc
	uint32 NumActors; // 0x2e0
	uint32 NumNetActors; // 0x2e4
	uint32 NumDormantActors; // 0x2e8
	uint32 NumInitiallyDormantActors; // 0x2ec
	uint32 NumNetGUIDsAckd; // 0x2f0
	uint32 NumNetGUIDsPending; // 0x2f4
	uint32 NumNetGUIDsUnAckd; // 0x2f8
	uint32 ObjPathBytes; // 0x2fc
	uint32 NetGUIDOutRate; // 0x300
	uint32 NetGUIDInRate; // 0x304
	uint32 NetSaturated; // 0x308
};

struct UDatasmithAreaLightActorTemplate : UDatasmithObjectTemplate {
	EDatasmithAreaLightActorType LightType; // 0x30
	EDatasmithAreaLightActorShape LightShape; // 0x31
	FVector2D Dimensions; // 0x34
	FLinearColor Color; // 0x3c
	float Intensity; // 0x4c
	ELightUnits IntensityUnits; // 0x50
	float Temperature; // 0x54
	UTextureLightProfile* IESTexture; // 0x58
	bool bUseIESBrightness; // 0x80
	float IESBrightnessScale; // 0x84
	FRotator Rotation; // 0x88
	float SourceRadius; // 0x94
	float SourceLength; // 0x98
	float AttenuationRadius; // 0x9c
};

struct USQMapWidgetVehicle : USQMapWidgetVehicleSeat {
	UTexture2D* DefaultIcon; // 0x2b8
	float DefaultIconRotation; // 0x2c0
	USQVehicleUIStaticDataAsset* StaticUIData; // 0x2c8
	bool bHoldsOccupant; // 0x2d0
	bool bHoldsSquadLeader; // 0x2d1
	bool bHoldsCommander; // 0x2d2
	int ClaimingSquadID; // 0x2d4
	char bIsInClaimingSquad : 1; // 0x2d8
	TArray<FSQVehicleOccupantInfo> VehicleOccupants; // 0x2e0
	int SelfInVehicleSeat; // 0x2f0
};

struct UMovieSceneSubSection : UMovieSceneSection {
	FMovieSceneSectionParameters Parameters; // 0xe0
	float StartOffset; // 0xf8
	float TimeScale; // 0xfc
	float PrerollTime; // 0x100
	UMovieSceneSequence* SubSequence; // 0x108
	AActor* ActorToRecord; // 0x110
	FString TargetSequenceName; // 0x130
	FDirectoryPath TargetPathToRecordTo; // 0x140
};

struct USQDrawChatWidget : USQUserWidget {
	TArray<FSQDrawChatStruct> MessagesToDraw; // 0x230
};

struct UPlayFabAuthenticationAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xa0
	UPlayFabJsonObject* RequestJsonObj; // 0xa8
	UPlayFabJsonObject* ResponseJsonObj; // 0xb0
};

struct UDamageType : UObject {
	char bCausedByWorld : 1; // 0x28
	char bScaleMomentumByMass : 1; // 0x28
	char bRadialDamageVelChange : 1; // 0x28
	float DamageImpulse; // 0x2c
	float DestructibleImpulse; // 0x30
	float DestructibleDamageSpreadScale; // 0x34
	float DamageFalloff; // 0x38
};

struct UTreeView : UListView {
	DelegateProperty BP_OnGetItemChildren; // 0x368
	FScriptMulticastDelegate BP_OnItemExpansionChanged; // 0x378
};

struct UBorderSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct USQCoreStateData : UObject {
	bool bIsGlobalData; // 0x28
	bool bAllowConfigureOnServer; // 0x29
	bool bAllowConfigureOnClient; // 0x2a
	bool bCanEverConfigureOnTick; // 0x2b
	float TickConfigureServerFrequency; // 0x2c
	float TickConfigureClientFrequency; // 0x30
	FCoreStateDataTickFunction TickFunction; // 0x38
	TArray<USQCoreStateListener*> ListenerList; // 0x98
	FSQCoreStateId RepComponentId; // 0xb0
	char bIsVisible : 1; // 0xb2
};

struct APlayerStart : ANavigationObjectBase {
	FName PlayerStartTag; // 0x270
};

struct UParticleModuleParameterBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct USQMapWidgetHAB : USQMapWidgetDeployable {
	char bSpawningEnabled : 1; // 0x2b0
	char bSieged : 1; // 0x2b0
	float ActivatedTimeStamp; // 0x2b4
};

struct UDiscordRpc : UObject {
	bool IsConnected; // 0x28
	FScriptMulticastDelegate OnConnected; // 0x30
	FScriptMulticastDelegate OnDisconnected; // 0x40
	FScriptMulticastDelegate OnErrored; // 0x50
	FScriptMulticastDelegate OnJoin; // 0x60
	FScriptMulticastDelegate OnSpectate; // 0x70
	FScriptMulticastDelegate OnJoinRequest; // 0x80
	FDiscordRichPresence RichPresence; // 0x90
};

struct AGameSession : AInfo {
	int MaxSpectators; // 0x248
	int MaxPlayers; // 0x24c
	int MaxPartySize; // 0x250
	char MaxSplitscreensPerConnection; // 0x254
	bool bRequiresPushToTalk; // 0x255
	FName SessionName; // 0x258
};

struct UProceduralFoliageTile : UObject {
	UProceduralFoliageSpawner* FoliageSpawner; // 0x28
	TArray<FProceduralFoliageInstance> InstancesArray; // 0xd0
};

struct USQCoreStateSquadListComponent : USQCoreStateWidgetFactory {
	USQCoreStateSquadItemWidget* SquadWidgetClass; // 0x340
	USQCoreStateSquadMemberWidget* PlayerWidgetClass; // 0x348
	UPanelWidget* SquadRoot; // 0x350
	UPanelWidget* UnassignedRoot; // 0x358
	UPanelWidget* CommanderRoot; // 0x360
	EListLayout ListLayout; // 0x368
	EListLayout UnassignedLayout; // 0x369
	TMap<int, USQCoreStateSquadItemWidget*> ActiveSquadWidgets; // 0x370
};

struct UMaterialExpressionLandscapeVisibilityMask : UMaterialExpression {
	FGuid ExpressionGUID; // 0x40
};

struct ARecastNavMesh : ANavigationData {
	char bDrawTriangleEdges : 1; // 0x408
	char bDrawPolyEdges : 1; // 0x408
	char bDrawFilledPolys : 1; // 0x408
	char bDrawNavMeshEdges : 1; // 0x408
	char bDrawTileBounds : 1; // 0x408
	char bDrawPathCollidingGeometry : 1; // 0x408
	char bDrawTileLabels : 1; // 0x408
	char bDrawPolygonLabels : 1; // 0x408
	char bDrawDefaultPolygonCost : 1; // 0x409
	char bDrawLabelsOnPathNodes : 1; // 0x409
	char bDrawNavLinks : 1; // 0x409
	char bDrawFailedNavLinks : 1; // 0x409
	char bDrawClusters : 1; // 0x409
	char bDrawOctree : 1; // 0x409
	char bDrawOctreeDetails : 1; // 0x409
	char bDrawMarkedForbiddenPolys : 1; // 0x409
	char bDistinctlyDrawTilesBeingBuilt : 1; // 0x40a
	char bDrawNavMesh : 1; // 0x40a
	float DrawOffset; // 0x40c
	char bFixedTilePoolSize : 1; // 0x410
	int TilePoolSize; // 0x414
	float TileSizeUU; // 0x418
	float CellSize; // 0x41c
	float CellHeight; // 0x420
	float AgentRadius; // 0x424
	float AgentHeight; // 0x428
	float AgentMaxHeight; // 0x42c
	float AgentMaxSlope; // 0x430
	float AgentMaxStepHeight; // 0x434
	float MinRegionArea; // 0x438
	float MergeRegionSize; // 0x43c
	float MaxSimplificationError; // 0x440
	int MaxSimultaneousTileGenerationJobsCount; // 0x444
	int TileNumberHardLimit; // 0x448
	int PolyRefTileBits; // 0x44c
	int PolyRefNavPolyBits; // 0x450
	int PolyRefSaltBits; // 0x454
	FVector NavMeshOriginOffset; // 0x458
	float DefaultDrawDistance; // 0x464
	float DefaultMaxSearchNodes; // 0x468
	float DefaultMaxHierarchicalSearchNodes; // 0x46c
	ERecastPartitioning RegionPartitioning; // 0x470
	ERecastPartitioning LayerPartitioning; // 0x471
	int RegionChunkSplits; // 0x474
	int LayerChunkSplits; // 0x478
	char bSortNavigationAreasByCost : 1; // 0x47c
	char bPerformVoxelFiltering : 1; // 0x47c
	char bMarkLowHeightAreas : 1; // 0x47c
	char bFilterLowSpanSequences : 1; // 0x47c
	char bFilterLowSpanFromTileCache : 1; // 0x47c
	char bDoFullyAsyncNavDataGathering : 1; // 0x47c
	char bUseBetterOffsetsFromCorners : 1; // 0x47c
	char bStoreEmptyTileLayers : 1; // 0x47c
	char bUseVirtualFilters : 1; // 0x47d
	char bAllowNavLinkAsPathEnd : 1; // 0x47d
	char bUseVoxelCache : 1; // 0x47d
	float TileSetUpdateInterval; // 0x480
	float HeuristicScale; // 0x484
	float VerticalDeviationFromGroundCompensation; // 0x488
};

struct ABP_M4M203_M150_UGL_Woodland_HE_C : ABP_M4M203_M150_UGL_Woodland_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct Urpg7v2_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_E0CECCFA49FE9389620AFE8D3096328E; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_F3B0CB6240CF145CB3E0BE937853E3AD; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_67DD363640B34E8D000E98BD2431C216; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_A0CE83B64D9CC006683F4B9B1615EDF5; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_F2287A36475278A64D137892E39E0493; // 0x468
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4228073E4B6CCBE278A3B4B0CEF1627B; // 0x4b0
	FAnimNode_Slot AnimGraphNode_Slot_508FF6F4463FDC4B045716A340994C73; // 0x570
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3B39F28040740C519198858DB53C82CB; // 0x5b8
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_DE2CF9BC492E19C2B74239870FF78791; // 0x630
};

struct ABP_M4_M68_4Mags_Founders_C : ABP_M4_M68_4Mags_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UTextureLODSettings : UObject {
	TArray<FTextureLODGroup> TextureLODGroups; // 0x28
};

struct UFontFace : UObject {
	FString SourceFilename; // 0x30
	EFontHinting Hinting; // 0x40
	EFontLoadingPolicy LoadingPolicy; // 0x41
	EFontLayoutMethod LayoutMethod; // 0x42
};

struct UInterpTrackToggle : UInterpTrack {
	TArray<FToggleTrackKey> ToggleTrack; // 0x70
	char bActivateSystemEachUpdate : 1; // 0x80
	char bActivateWithJustAttachedFlag : 1; // 0x80
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UBTAuxiliaryNode : UBTNode {
	FString NodeName; // 0x30
	UBehaviorTree* TreeAsset; // 0x40
	UBTCompositeNode* ParentNode; // 0x48
};

struct UScrollBarWidgetStyle : USlateWidgetStyleContainerBase {
	FScrollBarStyle ScrollBarStyle; // 0x30
};

struct ABP_L85A2AG36_UGL_DarkEarth_Smoke_Red_C : ABP_L85A2AG36_UGL_DarkEarth_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleOrientationAxisLock : UParticleModuleOrientationBase {
	EParticleAxisLock LockAxisFlags; // 0x30
};

struct UBP_Attachment_1p63_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USQMedicBagStaticInfo : USQItemStaticInfo {
	UAnimMontage* Healing1pBeginUseMontage; // 0x4f8
	UAnimMontage* Healing3pBeginUseMontage; // 0x500
	UAnimMontage* Healing1pEndUseMontage; // 0x508
	UAnimMontage* Healing3pEndUseMontage; // 0x510
	USoundCue* HealSelfSound; // 0x518
	USoundCue* HealOtherSound; // 0x520
	float HealingDelay; // 0x528
	float HealingAmount; // 0x52c
};

struct ABP_RPG7V2_Heat_2Mag_C : ABP_RPG7V2_Heat_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UReverbEffect : UObject {
	float Density; // 0x28
	float Diffusion; // 0x2c
	float Gain; // 0x30
	float GainHF; // 0x34
	float DecayTime; // 0x38
	float DecayHFRatio; // 0x3c
	float ReflectionsGain; // 0x40
	float ReflectionsDelay; // 0x44
	float LateGain; // 0x48
	float LateDelay; // 0x4c
	float AirAbsorptionGainHF; // 0x50
	float RoomRolloffFactor; // 0x54
};

struct ULevelStreamingPersistent : ULevelStreaming {
	UWorld* WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int LevelLODIndex; // 0xb0
	int StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xba
	char bShouldBeLoaded : 1; // 0xba
	char bLocked : 1; // 0xba
	char bIsStatic : 1; // 0xba
	char bShouldBlockOnLoad : 1; // 0xba
	char bShouldBlockOnUnload : 1; // 0xbb
	char bDisableDistanceStreaming : 1; // 0xbb
	char bDrawOnLevelStatusMap : 1; // 0xbb
	FLinearColor LevelColor; // 0xbc
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd0
	float MinTimeBetweenVolumeUnloadRequests; // 0xe0
	FScriptMulticastDelegate OnLevelLoaded; // 0xe8
	FScriptMulticastDelegate OnLevelUnloaded; // 0xf8
	FScriptMulticastDelegate OnLevelShown; // 0x108
	FScriptMulticastDelegate OnLevelHidden; // 0x118
	ULevel* LoadedLevel; // 0x128
	ULevel* PendingUnloadLevel; // 0x130
};

struct ABP_AKS74_1P29_Tracer_C : ABP_AKS74_1P29_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Front; // 0x7b8
	UStaticMeshComponent* Scope; // 0x7c0
};

struct UMaterialExpressionReflectionVectorWS : UMaterialExpression {
	FExpressionInput CustomWorldNormal; // 0x40
	char bNormalizeCustomWorldNormal : 1; // 0x54
};

struct USlateBrushAsset : UObject {
	FSlateBrush Brush; // 0x28
};

struct USkeleton : UObject {
	TArray<FBoneNode> BoneTree; // 0x38
	TArray<FTransform> RefLocalPoses; // 0x48
	FGuid VirtualBoneGuid; // 0x170
	TArray<FVirtualBone> VirtualBones; // 0x180
	TArray<USkeletalMeshSocket*> Sockets; // 0x190
	FSmartNameContainer SmartNames; // 0x1f0
	TArray<UBlendProfile*> BlendProfiles; // 0x268
	TArray<FAnimSlotGroup> SlotGroups; // 0x278
	TArray<UAssetUserData*> AssetUserData; // 0x350
};

struct USQVehicleExitPointComponent : USceneComponent {
	TWeakObjectPtr<APhysicsVolume> PhysicsVolume; // 0xe0
	USceneComponent* AttachParent; // 0xe8
	FName AttachSocketName; // 0xf0
	TArray<USceneComponent*> AttachChildren; // 0xf8
	TArray<USceneComponent*> ClientAttachedChildren; // 0x108
	FVector RelativeLocation; // 0x144
	FRotator RelativeRotation; // 0x150
	FVector RelativeScale3D; // 0x15c
	FVector ComponentVelocity; // 0x168
	char bComponentToWorldUpdated : 1; // 0x174
	char bAbsoluteLocation : 1; // 0x174
	char bAbsoluteRotation : 1; // 0x174
	char bAbsoluteScale : 1; // 0x174
	char bVisible : 1; // 0x174
	char bHiddenInGame : 1; // 0x174
	char bShouldBeAttached : 1; // 0x174
	char bShouldSnapLocationWhenAttached : 1; // 0x175
	char bShouldSnapRotationWhenAttached : 1; // 0x175
	char bShouldUpdatePhysicsVolume : 1; // 0x175
	char bBoundsChangeTriggersStreamingDataRebuild : 1; // 0x175
	char bUseAttachParentBound : 1; // 0x175
	EComponentMobility Mobility; // 0x17d
	EDetailMode DetailMode; // 0x17e
	FScriptMulticastDelegate PhysicsVolumeChangedDelegate; // 0x17f
};

struct UADSPostProcessSettings : UDataAsset {
	UCurveFloat* BlendCurve; // 0x30
	FPostProcessSettings PPSettings; // 0x40
};

struct UMaterialExpressionRotator : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	float CenterX; // 0x68
	float CenterY; // 0x6c
	float Speed; // 0x70
	uint32 ConstCoordinate; // 0x74
};

struct UVariantSet : UObject {
	FText DisplayText; // 0x28
	bool bExpanded; // 0x58
	TArray<UVariant*> Variants; // 0x60
};

struct UMaterialExpressionComponentMask : UMaterialExpression {
	FExpressionInput Input; // 0x40
	char R : 1; // 0x54
	char G : 1; // 0x54
	char B : 1; // 0x54
	char A : 1; // 0x54
};

struct UMaterialExpressionTextureCoordinate : UMaterialExpression {
	int CoordinateIndex; // 0x40
	float UTiling; // 0x44
	float VTiling; // 0x48
	char UnMirrorU : 1; // 0x4c
	char UnMirrorV : 1; // 0x4c
};

struct ULevelSequencePlayer : UMovieSceneSequencePlayer {
	FScriptMulticastDelegate OnCameraCut; // 0x818
};

struct UParticleSpriteEmitter : UParticleEmitter {
	FName EmitterName; // 0x28
	int SubUVDataOffset; // 0x30
	EEmitterRenderMode EmitterRenderMode; // 0x34
	EParticleSignificanceLevel SignificanceLevel; // 0x35
	char bUseLegacySpawningBehavior : 1; // 0x37
	char ConvertedModules : 1; // 0x37
	char bIsSoloing : 1; // 0x37
	char bCookedOut : 1; // 0x37
	char bDisabledLODsKeepEmitterAlive : 1; // 0x37
	char bDisableWhenInsignficant : 1; // 0x38
	TArray<UParticleLODLevel*> LODLevels; // 0x40
	int PeakActiveParticles; // 0x50
	int InitialAllocationCount; // 0x54
	float QualityLevelSpawnRateScale; // 0x58
	uint32 DetailModeBitmask; // 0x5c
	char bOWI_ResetOnDetailModeChanged : 1; // 0x60
};

struct UBP_attachment_foregrip_C : USQWeaponAttachment {
	FName SocketName; // 0x498
	ASQWeapon* AttachedWeapon; // 0x4a0
	bool bShowIn1P; // 0x4a8
	bool bShowIn3P; // 0x4a9
};

struct ABP_M4M203_M150_UGL_Smoke_Blue_Founders_C : ABP_M4M203_M150_UGL_Smoke_Founders_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ULeaderboardQueryCallbackProxy : UObject {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UNavArea_Obstacle : UNavArea {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UMockDataMeshTrackerComponent : USceneComponent {
	FScriptMulticastDelegate OnMeshTrackerUpdated; // 0x218
	bool ScanWorld; // 0x228
	bool RequestNormals; // 0x229
	bool RequestVertexConfidence; // 0x22a
	EMeshTrackerVertexColorMode VertexColorMode; // 0x22b
	TArray<FColor> BlockVertexColors; // 0x230
	FLinearColor VertexColorFromConfidenceZero; // 0x240
	FLinearColor VertexColorFromConfidenceOne; // 0x250
	float UpdateInterval; // 0x260
	UMRMeshComponent* MRMesh; // 0x268
};

struct UParticleLODLevel : UObject {
	int Level; // 0x28
	char bEnabled : 1; // 0x2c
	UParticleModuleRequired* RequiredModule; // 0x30
	TArray<UParticleModule*> Modules; // 0x38
	UParticleModuleTypeDataBase* TypeDataModule; // 0x48
	UParticleModuleSpawn* SpawnModule; // 0x50
	UParticleModuleEventGenerator* EventGenerator; // 0x58
	TArray<UParticleModuleSpawnBase*> SpawningModules; // 0x60
	TArray<UParticleModule*> SpawnModules; // 0x70
	TArray<UParticleModule*> UpdateModules; // 0x80
	TArray<UParticleModuleOrbit*> OrbitModules; // 0x90
	TArray<UParticleModuleEventReceiverBase*> EventReceiverModules; // 0xa0
	char ConvertedModules : 1; // 0xb0
	int PeakActiveParticles; // 0xb4
};

struct UImage : UWidget {
	FSlateBrush Brush; // 0x108
	DelegateProperty BrushDelegate; // 0x190
	FLinearColor ColorAndOpacity; // 0x1a0
	DelegateProperty ColorAndOpacityDelegate; // 0x1b0
	bool bFlipForRightToLeftFlowDirection; // 0x1c0
	DelegateProperty OnMouseButtonDownEvent; // 0x1c4
};

struct ABP_M4A1_M68_C : ABP_M4A1_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UProgressBar : UWidget {
	FProgressBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x2a8
	USlateBrushAsset* BackgroundImage; // 0x2b0
	USlateBrushAsset* FillImage; // 0x2b8
	USlateBrushAsset* MarqueeImage; // 0x2c0
	float Percent; // 0x2c8
	EProgressBarFillType BarFillType; // 0x2cc
	bool bIsMarquee; // 0x2cd
	FVector2D BorderPadding; // 0x2d0
	DelegateProperty PercentDelegate; // 0x2d8
	FLinearColor FillColorAndOpacity; // 0x2e8
	DelegateProperty FillColorAndOpacityDelegate; // 0x2f8
};

struct UBackgroundBlurSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct USQVehicleComponentBluePrintable : USQVehicleComponent {
	float MaxHealth; // 0x498
	TArray<FSQDamageModifier> AllowableDamageTypes; // 0x4a0
	bool bCanBeDestroyed; // 0x4b0
	bool bCanBeRepairedAfterDestroyed; // 0x4b1
	float MaxRepairToolLimit; // 0x4b4
	UStaticMesh* FullyRepairedComponentMesh; // 0x4b8
	UStaticMesh* RepairedFromDestructionComponentMesh; // 0x4c0
	UStaticMesh* DestroyedComponentMesh; // 0x4c8
	ASQVehicle* ParentVehicle; // 0x4d0
	UParticleSystem* BurningEffect; // 0x4d8
	USoundCue* BurningSound; // 0x4e0
	UAudioComponent* BurningAudioComponent; // 0x4e8
	bool bBurningAudioInheritsScale; // 0x4f0
	UParticleSystem* DestroyedExplosion; // 0x4f8
	USoundCue* DestroyedSound; // 0x500
	FName DestructionDamageEffectSocket; // 0x508
	TArray<FSQDamageEffect> DestructionDamageEffects; // 0x510
	bool bLastingEffectInheritsScale; // 0x520
	UAudioComponent* DestroyedAudioComponent; // 0x528
	bool bDestroyedAudioInheritsScale; // 0x530
	UParticleSystemComponent* BurningParticleSystem; // 0x538
	bool bBurningEffectInheritsScale; // 0x540
	UParticleSystemComponent* DestructionParticleSystem; // 0x548
	bool bDestructionEffectInheritsScale; // 0x550
	float NormalizedHealth; // 0x554
	FScriptMulticastDelegate OnComponentDestroyedEvent; // 0x558
	FScriptMulticastDelegate OnComponentUndestroyedEvent; // 0x568
	float Health; // 0x578
	ESQVehicleComponentStates VehicleComponentState; // 0x57c
	UStaticMeshComponent* DecorativeMesh; // 0x580
};

struct UMaterialExpressionScalarParameter : UMaterialExpressionParameter {
	float DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x5c
	char PrimitiveDataIndex; // 0x5d
};

struct UActorComponent : UObject {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct ACameraActor : AActor {
	EAutoReceiveInput AutoActivateForPlayer; // 0x248
	UCameraComponent* CameraComponent; // 0x250
	USceneComponent* SceneComponent; // 0x258
	char bConstrainAspectRatio : 1; // 0x268
	float AspectRatio; // 0x26c
	float FOVAngle; // 0x270
	float PostProcessBlendWeight; // 0x274
	FPostProcessSettings PostProcessSettings; // 0x280
};

struct USQAnimInstanceSoldier : USQAnimInstance {
	bool bDrawDebugSpheres; // 0x290
	bool bIsSoldierAlive; // 0x291
	bool bIsSoldierRagdolled; // 0x292
	FVector LeftHandIKLocation; // 0x294
	FRotator LeftHandIKRotation; // 0x2a0
	float LeftHandIKAlpha; // 0x2ac
	FVector RightHandIKLocation; // 0x2b0
	FRotator RightHandIKRotation; // 0x2bc
	float RightHandIKAlpha; // 0x2c8
	bool bIsDragging; // 0x2cc
	FRotator DraggingLeftArmRotation; // 0x2d0
	float YawDeltaRaw; // 0x2dc
	FRotator AddRotShot; // 0x2e0
	FRotator AddRotCameraShot; // 0x2ec
	FRotator AddAdsRotCameraShot; // 0x2f8
	bool bLeanConditions; // 0x304
	float BipodLength; // 0x308
	FVector BipodHeight; // 0x30c
	bool bAutoLowered; // 0x318
	FRotator OffsetLineOfFire; // 0x31c
	float LastVelocityWhenIsInAir; // 0x328
	float LeftHandWeaponIkAlpha; // 0x32c
	float RightHand3pWeaponIkAlpha; // 0x330
	float AdjustAdsSightItemAnimPos; // 0x334
	bool bVelocityProneTransAnim; // 0x338
	float Direction; // 0x33c
	bool bCanSprintToProne; // 0x340
	bool bIsCrouched; // 0x341
	bool bIsProne; // 0x342
	bool bIsJumping; // 0x343
	bool bIsFalling; // 0x344
	float Speed; // 0x348
	FVector Velocity; // 0x34c
	float PitchDeltaRaw; // 0x358
	bool bFirstPersonVisibility; // 0x35c
	FVector ClimbWeaponSocketLoc; // 0x360
	FRotator ClimbWeaponSocketRot; // 0x36c
	FRotator VaultClimbAo; // 0x378
	FRotator FreeLookRot; // 0x384
	bool bSprintToProneTransAnim; // 0x390
	bool bLeanRight; // 0x391
	bool bLeanLeft; // 0x392
	char LeaningDirection; // 0x393
	bool bBipodIsDeployed; // 0x394
	float BipodTransitionAlpha; // 0x398
	bool bShot; // 0x39c
	float SprintSpeedMultiplier; // 0x3a0
	float MaxWalkSpeedCrouched; // 0x3a4
	float MaxWalkSpeedProne; // 0x3a8
	float MaxWalkSpeed; // 0x3ac
	bool bIsInVehicle; // 0x3b0
	float VehiclePitch; // 0x3b4
	float VehicleYaw; // 0x3b8
	UAnimSequence* VehicleBaseAnim; // 0x3c0
	UBlendSpace* VehicleAimOffsets; // 0x3c8
	bool bUseWheelBlendSpace1D; // 0x3d0
	UBlendSpace1D* VehicleWheelBlendSpace1D; // 0x3d8
	float VehicleWheel; // 0x3e0
	float CustomVehicleWheel1; // 0x3e4
	float InterpSpeed; // 0x3e8
	float CustomSteeringWheelAnimExplTime; // 0x3ec
	bool bHandIKAlphaEnabled; // 0x3f0
	float SteeringWheelAnimExplTime; // 0x3f4
	float RightHandAlpha; // 0x3f8
	float LeftHandAlpha; // 0x3fc
	float LastVehicleWheelAbs; // 0x400
	float VehicleWheelAbsRate; // 0x404
	UAnimSequence* SteeringWheelSingleFrameAnimSequence; // 0x408
	float Time; // 0x410
	bool bFP_T_LeanLeftAndLeanConditions; // 0x414
	bool bFP_T_NotLeanLeftOrNotLeanConditions; // 0x415
	bool bFP_T_LeanRightAndLeanConditions; // 0x416
	bool bFP_T_NotLeanRightOrNotLeanConditions; // 0x417
	bool bIsPullingTriggerAndMagazineHasAmmo; // 0x418
};

struct ASQFieldDressing : ASQHealingEquipableItem {
	bool bWasHealingSelf; // 0x4b0
	bool bWasRevivingOther; // 0x4b1
	FTimerHandle TimerHandle; // 0x4b8
	USQFieldDressingStaticInfo* FieldDressingStaticInfo; // 0x4c0
	UAnimMontage* SelectedSoldier1pMontage; // 0x4c8
	UAnimMontage* SelectedSoldier3pMontage; // 0x4d0
	UAnimMontage* SelectedWeaponMontage; // 0x4d8
};

struct URotatingMovementComponent : UMovementComponent {
	FRotator RotationRate; // 0x118
	FVector PivotTranslation; // 0x124
	char bRotationInLocalSpace : 1; // 0x130
};

struct UNavFilter_AIControllerDefault : UNavigationQueryFilter {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct UNavigationGraphNodeComponent : USceneComponent {
	FNavGraphNode Node; // 0x218
	UNavigationGraphNodeComponent* NextNodeComponent; // 0x230
	UNavigationGraphNodeComponent* PrevNodeComponent; // 0x238
};

struct UMaterialExpressionConstant3Vector : UMaterialExpression {
	FLinearColor Constant; // 0x40
};

struct USQVehicleInventoryComponent : USQPawnInventoryComponent {
	TArray<FSQVehicleWeaponConfig> Weapons; // 0x2e0
};

struct UAbilityTask_WaitGameplayTagRemoved : UAbilityTask_WaitGameplayTag {
	FScriptMulticastDelegate Removed; // 0xa8
};

struct UDeviceProfile : UTextureLODSettings {
	FString DeviceType; // 0x38
	FString BaseProfileName; // 0x48
	UObject* Parent; // 0x58
	TArray<FString> CVars; // 0x78
};

struct UTimelineComponent : UActorComponent {
	FTimeline TheTimeline; // 0xd8
	char bIgnoreTimeDilation : 1; // 0x170
};

struct UAnimInstance : UObject {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FScriptMulticastDelegate OnMontageBlendingOut; // 0x38
	FScriptMulticastDelegate OnMontageStarted; // 0x48
	FScriptMulticastDelegate OnMontageEnded; // 0x58
	FScriptMulticastDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct UParticleModuleLocationPrimitiveCylinder_Seeded : UParticleModuleLocationPrimitiveCylinder {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x140
};

struct ABP_M4M203_UGL_Smoke_Blue_C : ABP_M4M203_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UComboBoxString : UWidget {
	TArray<FString> DefaultOptions; // 0x108
	FString SelectedOption; // 0x118
	FComboBoxStyle WidgetStyle; // 0x128
	FTableRowStyle ItemStyle; // 0x500
	FMargin ContentPadding; // 0xcc8
	float MaxListHeight; // 0xcd8
	bool HasDownArrow; // 0xcdc
	bool EnableGamepadNavigationMode; // 0xcdd
	FSlateFontInfo Font; // 0xce0
	FSlateColor ForegroundColor; // 0xd30
	bool bIsFocusable; // 0xd58
	DelegateProperty OnGenerateWidgetEvent; // 0xd5c
	FScriptMulticastDelegate OnSelectionChanged; // 0xd70
	FScriptMulticastDelegate OnOpening; // 0xd80
};

struct USQDamageType_Thermite : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct UAnimStreamable : UAnimSequenceBase {
	int NumFrames; // 0xa8
	EAnimInterpolationType Interpolation; // 0xac
	FName RetargetSource; // 0xb0
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xc8
	bool bEnableRootMotion; // 0xd0
	ERootMotionRootLock RootMotionRootLock; // 0xd1
	bool bForceRootLock; // 0xd2
	bool bUseNormalizedRootMotionScale; // 0xd3
};

struct UMaterialExpressionVertexColor : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UEnvQueryInstanceBlueprintWrapper : UObject {
	int QueryID; // 0x30
	UEnvQueryItemType* ItemType; // 0x58
	int OptionIndex; // 0x60
	FScriptMulticastDelegate OnQueryFinishedEvent; // 0x68
};

struct USQReplicationGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode {
	AActor* LastPawn; // 0x278
	TArray<FAlwaysRelevantActorInfo> PastRelevantActors; // 0x280
};

struct UIpNetDriver : UNetDriver {
	char LogPortUnreach : 1; // 0x748
	char AllowPlayerPortUnreach : 1; // 0x748
	uint32 MaxPortCountToTry; // 0x74c
	uint32 ServerDesiredSocketReceiveBufferBytes; // 0x75c
	uint32 ServerDesiredSocketSendBufferBytes; // 0x760
	uint32 ClientDesiredSocketReceiveBufferBytes; // 0x764
	uint32 ClientDesiredSocketSendBufferBytes; // 0x768
	double MaxSecondsInReceive; // 0x770
	int NbPacketsBetweenReceiveTimeTest; // 0x778
};

struct USQFriendsBrowserWidget : USQUserWidget {
	bool bCanStartNewFindFriends; // 0x230
	USQFindFriendsCallbackProxy* CurrentCallback; // 0x238
};

struct ACullDistanceVolume : AVolume {
	TArray<FCullDistanceSizePair> CullDistances; // 0x280
	char bEnabled : 1; // 0x290
};

struct ASQNoDeployZone : ATriggerBox {
	bool UseBlacklisting; // 0x250
	TArray<ASQDeployable*> AllowedDeployableClasses; // 0x258
	TArray<ASQDeployable*> DisallowedDeployableClasses; // 0x268
};

struct UFieldNodeInt : UFieldNodeBase {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct ABP_RPG7V2_Heat_2mag_Founders_C : ABP_RPG7V2_Heat_Founders_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UBP_MaterialEffects_HEAT_C : UBP_MaterialEffects_C {
	TMap<USQPhysicalMaterial*, FSQEffectsSet> Effects; // 0x28
};

struct UBP_Attachment_M150_Founders_C : UBP_Attachment_M150_C {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct USQVehicleCleanupComponent : UActorComponent {
	USQVehicleCleanupDataAsset* CleanupStaticInfo; // 0xd8
	ASQVehicle* OwnerVehicle; // 0xe8
};

struct UNavRelevantComponent : UActorComponent {
	char bAttachToOwnersRoot : 1; // 0xfc
	UObject* CachedNavParent; // 0x100
};

struct UDatasmithStaticMeshIFCImportData : UDatasmithStaticMeshImportData {
	FString SourceGlobalId; // 0x28
};

struct ASQTournamentModeRulesetState : ASQRulesetState {
	TArray<FSQSettingsRestriction> Restrictions; // 0x248
};

struct ABP_M4M203_UGL_Smoke_C : ABP_M4M203_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Smoke_Blue_C : ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMovieSceneActorReferenceSection : UMovieSceneSection {
	FMovieSceneActorReferenceData ActorReferenceData; // 0xe0
	FIntegralCurve ActorGuidIndexCurve; // 0x180
	TArray<FString> ActorGuidStrings; // 0x200
};

struct UCustomMeshComponent : UMeshComponent {
	TArray<UMaterialInterface*> OverrideMaterials; // 0x408
	bool bEnableMaterialParameterCaching; // 0x428
};

struct UMaterialExpressionPanner : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	FExpressionInput Speed; // 0x68
	float SpeedX; // 0x7c
	float SpeedY; // 0x80
	uint32 ConstCoordinate; // 0x84
	bool bFractionalPart; // 0x88
};

struct USQPhysicalMaterialEffects : UObject {
	TMap<USQPhysicalMaterial*, FSQEffectsSet> Effects; // 0x28
};

struct AWheeledVehicle : APawn {
	USkeletalMeshComponent* Mesh; // 0x2a8
	UWheeledVehicleMovementComponent* VehicleMovement; // 0x2b0
};

struct UChatroom : UObject {
	FString CurrentChatRoomId; // 0x28
	int MaxChatRoomRetries; // 0x38
	int NumChatRoomRetries; // 0x3c
};

struct UAbilityTask_WaitGameplayEffectRemoved : UAbilityTask {
	FScriptMulticastDelegate OnRemoved; // 0x80
	FScriptMulticastDelegate InvalidHandle; // 0x90
};

struct USQDamageType_Fall : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct UAbilityTask_ApplyRootMotionRadialForce : UAbilityTask_ApplyRootMotion_Base {
	FScriptMulticastDelegate OnFinish; // 0xb8
	FVector Location; // 0xc8
	AActor* LocationActor; // 0xd8
	float Strength; // 0xe0
	float Duration; // 0xe4
	float Radius; // 0xe8
	bool bIsPush; // 0xec
	bool bIsAdditive; // 0xed
	bool bNoZForce; // 0xee
	UCurveFloat* StrengthDistanceFalloff; // 0xf0
	UCurveFloat* StrengthOverTime; // 0xf8
	bool bUseFixedWorldDirection; // 0x100
	FRotator FixedWorldDirection; // 0x104
};

struct UAimOffsetBlendSpace1D : UBlendSpace1D {
	bool bScaleAnimation; // 0x148
};

struct UCurveVector : UCurveBase {
	FRichCurve FloatCurves[0x3]; // 0x30
};

struct ABP_RPG7V2_Tandem_2Mag_C : ABP_RPG7V2_Tandem_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UPrefabAsset : UObject {
	TMap<FString, FSoftObjectPath> AssetReferences; // 0x28
	FSoftObjectPath GeneratedBlueprintAssetReference; // 0x78
	FGuid PrefabId; // 0x90
	FString PrefabContent; // 0xa0
	FString PrefabHash; // 0xb0
	int NumActors; // 0xc0
	FVector PrefabPivot; // 0xc4
};

struct UBTTask_RunEQSQuery : UBTTask_BlackboardBase {
	UEnvQuery* QueryTemplate; // 0x98
	TArray<FEnvNamedValue> QueryParams; // 0xa0
	TArray<FAIDynamicParam> QueryConfig; // 0xb0
	EEnvQueryRunMode RunMode; // 0xc0
	FBlackboardKeySelector EQSQueryBlackboardKey; // 0xc8
	bool bUseBBKey; // 0xf0
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0xf8
};

struct ULocalPlayer : UPlayer {
	UGameViewportClient* ViewportClient; // 0x70
	EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x94
	APlayerController* PendingLevelPlayerControllerClass; // 0x98
	char bSentSplitJoin : 1; // 0xa0
	int ControllerId; // 0xe0
};

struct UEnvQueryTest_Project : UEnvQueryTest {
	FEnvTraceData ProjectionData; // 0x1c0
};

struct ABP_AK74GP25_UGL_Smoke_Red_C : ABP_AK74GP25_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQSquadList : USQUserWidget {
	bool bIsOpening; // 0x230
	bool bIsClosing; // 0x231
	ASQPlayerState* OwnerPlayerState; // 0x238
	ASQPlayerController* OwnerPlayerController; // 0x240
};

struct UBP_Attachment_ElcanLDS_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMaterial : UMaterialInterface {
	UPhysicalMaterial* PhysMaterial; // 0x88
	FScalarMaterialInput Metallic; // 0x90
	FScalarMaterialInput Specular; // 0xa4
	FVectorMaterialInput Normal; // 0xb8
	FColorMaterialInput EmissiveColor; // 0xcc
	EMaterialDomain MaterialDomain; // 0xe0
	EBlendMode BlendMode; // 0xe1
	EDecalBlendMode DecalBlendMode; // 0xe2
	EMaterialDecalResponse MaterialDecalResponse; // 0xe3
	EMaterialShadingModel ShadingModel; // 0xe4
	FMaterialShadingModelField ShadingModels; // 0xe6
	float OpacityMaskClipValue; // 0xe8
	char bCastDynamicShadowAsMasked : 1; // 0xec
	FVectorMaterialInput WorldPositionOffset; // 0xf0
	FScalarMaterialInput Refraction; // 0x104
	FMaterialAttributesInput MaterialAttributes; // 0x118
	FScalarMaterialInput PixelDepthOffset; // 0x130
	FShadingModelMaterialInput ShadingModelFromMaterialExpression; // 0x144
	char bEnableSeparateTranslucency : 1; // 0x158
	char bEnableMobileSeparateTranslucency : 1; // 0x158
	char bEnableResponsiveAA : 1; // 0x158
	char bScreenSpaceReflections : 1; // 0x158
	char bContactShadows : 1; // 0x158
	char TwoSided : 1; // 0x158
	char DitheredLODTransition : 1; // 0x158
	char DitherOpacityMask : 1; // 0x158
	char bAllowNegativeEmissiveColor : 1; // 0x159
	int NumCustomizedUVs; // 0x15c
	ETranslucencyLightingMode TranslucencyLightingMode; // 0x160
	float TranslucencyDirectionalLightingIntensity; // 0x164
	char AllowTranslucentCustomDepthWrites : 1; // 0x168
	float TranslucentShadowDensityScale; // 0x16c
	float TranslucentSelfShadowDensityScale; // 0x170
	float TranslucentSelfShadowSecondDensityScale; // 0x174
	float TranslucentSelfShadowSecondOpacity; // 0x178
	float TranslucentBackscatteringExponent; // 0x17c
	FLinearColor TranslucentMultipleScatteringExtinction; // 0x180
	float TranslucentShadowStartOffset; // 0x190
	char bDisableDepthTest : 1; // 0x194
	char bWriteOnlyAlpha : 1; // 0x194
	char bGenerateSphericalParticleNormals : 1; // 0x194
	char bTangentSpaceNormal : 1; // 0x194
	char bUseEmissiveForDynamicAreaLighting : 1; // 0x194
	char bBlockGI : 1; // 0x194
	char bUsedAsSpecialEngineMaterial : 1; // 0x194
	char bUsedWithSkeletalMesh : 1; // 0x194
	char bUsedWithEditorCompositing : 1; // 0x195
	char bUsedWithParticleSprites : 1; // 0x195
	char bUsedWithBeamTrails : 1; // 0x195
	char bUsedWithMeshParticles : 1; // 0x195
	char bUsedWithNiagaraSprites : 1; // 0x195
	char bUsedWithNiagaraRibbons : 1; // 0x195
	char bUsedWithNiagaraMeshParticles : 1; // 0x195
	char bUsedWithGeometryCache : 1; // 0x195
	char bUsedWithStaticLighting : 1; // 0x196
	char bUsedWithMorphTargets : 1; // 0x196
	char bUsedWithSplineMeshes : 1; // 0x196
	char bUsedWithInstancedStaticMeshes : 1; // 0x196
	char bUsedWithGeometryCollections : 1; // 0x196
	char bUsesDistortion : 1; // 0x196
	char bUsedWithClothing : 1; // 0x196
	char bUsedWithUI : 1; // 0x196
	char bAutomaticallySetUsageInEditor : 1; // 0x197
	char bFullyRough : 1; // 0x197
	char bUseFullPrecision : 1; // 0x197
	char bUseLightmapDirectionality : 1; // 0x197
	char bUseHQForwardReflections : 1; // 0x197
	char bUsePlanarForwardReflections : 1; // 0x197
	char bNormalCurvatureToRoughness : 1; // 0x197
	EMaterialTessellationMode D3D11TessellationMode; // 0x198
	char bEnableCrackFreeDisplacement : 1; // 0x19c
	char bEnableAdaptiveTessellation : 1; // 0x19c
	float MaxDisplacement; // 0x1a0
	char Wireframe : 1; // 0x1a4
	char bOutputVelocityOnBasePass : 1; // 0x1a4
	TArray<UMaterialExpression*> Expressions; // 0x1a8
	TArray<FMaterialFunctionInfo> MaterialFunctionInfos; // 0x1b8
	TArray<FMaterialParameterCollectionInfo> MaterialParameterCollectionInfos; // 0x1c8
	char bCanMaskedBeAssumedOpaque : 1; // 0x1d8
	char bIsMasked : 1; // 0x1d8
	char bIsPreviewMaterial : 1; // 0x1d8
	char bIsFunctionPreviewMaterial : 1; // 0x1d8
	char bUseMaterialAttributes : 1; // 0x1d8
	char bCastRayTracedShadows : 1; // 0x1d8
	char bUseTranslucencyVertexFog : 1; // 0x1d8
	char bComputeFogPerPixel : 1; // 0x1d8
	char bOutputTranslucentVelocity : 1; // 0x1d9
	char bAllowDevelopmentShaderCompile : 1; // 0x1d9
	char bIsMaterialEditorStatsMaterial : 1; // 0x1d9
	uint32 UsageFlagWarnings; // 0x1dc
	EBlendableLocation BlendableLocation; // 0x1e0
	int BlendablePriority; // 0x1e4
	bool BlendableOutputAlpha; // 0x1e8
	char bEnableStencilTest : 1; // 0x1e9
	EMaterialStencilCompare StencilCompare; // 0x1ea
	char StencilRefValue; // 0x1eb
	ERefractionMode RefractionMode; // 0x1ec
	float RefractionDepthBias; // 0x1f0
	FGuid StateId; // 0x1f4
	TArray<bool> CachedQualityLevelsUsed; // 0x210
	TArray<UObject*> ExpressionTextureReferences; // 0x2a0
};

struct ASQProtectionZone : AActor {
	UBoxComponent* DummyPresetCollisionCPP; // 0x250
	float KillHostileInSeconds; // 0x258
	char TeamId; // 0x288
	FText DeployableDestroyedText; // 0x290
	FText ProjectileDestroyedText; // 0x2a8
	FText AccessDeniedText; // 0x2c0
	FText EnemyProtectionZoneText; // 0x2d8
};

struct UMovieScene2DTransformTrack : UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UBTComposite_Sequence : UBTCompositeNode {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct UMovieSceneSlomoTrack : UMovieSceneFloatTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UMaterialExpressionParticleSpeed : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USQSteamInventoryUI : UGameInstanceSubsystem {
	FScriptMulticastDelegate OnCachedSteamItems; // 0x30
	TMap<int, USQSteamItem*> CachedSteamIds; // 0x40
	UCoreGetAllItemsCallbackProxy* CallbackProxy; // 0xe0
};

struct ASQVehicleWeaponTOW : ASQVehicleWeapon {
	USQVehicleViewWidget* ViewWidgetClass; // 0xa80
	UMaterial* ReticlePPMatCPP; // 0xa88
	float MissileRotationSpeed; // 0xa90
	float AimStartOffset; // 0xa94
	float AimMaxDistance; // 0xa98
	float ProjectileCorrectionDistance; // 0xa9c
	float FOVMultiplier; // 0xaa0
	float SceneFringeIntensityInZoom; // 0xaa4
	float PPBlendWeight; // 0xaa8
	float FireDelay; // 0xaac
	UCameraComponent* CameraComponent; // 0xab0
	ASQHUD* LastPlayerHud; // 0xab8
};

struct USimpleWheeledVehicleMovementComponent : UWheeledVehicleMovementComponent {
	char bDeprecatedSpringOffsetMode : 1; // 0x168
	char bReverseAsBrake : 1; // 0x168
	char bUseRVOAvoidance : 1; // 0x168
	char bRawHandbrakeInput : 1; // 0x168
	char bRawGearUpInput : 1; // 0x168
	char bRawGearDownInput : 1; // 0x168
	char bWasAvoidanceUpdated : 1; // 0x16c
	float Mass; // 0x170
	TArray<FWheelSetup> WheelSetups; // 0x178
	float DragCoefficient; // 0x188
	float ChassisWidth; // 0x18c
	float ChassisHeight; // 0x190
	float DragArea; // 0x194
	float EstimatedMaxEngineSpeed; // 0x198
	float MaxEngineRPM; // 0x19c
	float DebugDragMagnitude; // 0x1a0
	FVector InertiaTensorScale; // 0x1a4
	float MinNormalizedTireLoad; // 0x1b0
	float MinNormalizedTireLoadFiltered; // 0x1b4
	float MaxNormalizedTireLoad; // 0x1b8
	float MaxNormalizedTireLoadFiltered; // 0x1bc
	float ThresholdLongitudinalSpeed; // 0x1c0
	int LowForwardSpeedSubStepCount; // 0x1c4
	int HighForwardSpeedSubStepCount; // 0x1c8
	TArray<UVehicleWheel*> Wheels; // 0x1d0
	float RVOAvoidanceRadius; // 0x1f8
	float RVOAvoidanceHeight; // 0x1fc
	float AvoidanceConsiderationRadius; // 0x200
	float RVOSteeringStep; // 0x204
	float RVOThrottleStep; // 0x208
	int AvoidanceUID; // 0x20c
	FNavAvoidanceMask AvoidanceGroup; // 0x210
	FNavAvoidanceMask GroupsToAvoid; // 0x214
	FNavAvoidanceMask GroupsToIgnore; // 0x218
	float AvoidanceWeight; // 0x21c
	FVector PendingLaunchVelocity; // 0x220
	FReplicatedVehicleState ReplicatedState; // 0x22c
	float RawSteeringInput; // 0x244
	float RawThrottleInput; // 0x248
	float RawBrakeInput; // 0x24c
	float SteeringInput; // 0x250
	float ThrottleInput; // 0x254
	float BrakeInput; // 0x258
	float HandbrakeInput; // 0x25c
	float IdleBrakeInput; // 0x260
	float StopThreshold; // 0x264
	float WrongDirectionThreshold; // 0x268
	float InvertDirectionThreshold; // 0x26c
	float LowRPMRatio; // 0x270
	bool SpeedInsteadOfRPMRatiosForShifting; // 0x274
	FVehicleInputRate ThrottleInputRate; // 0x278
	FVehicleInputRate BrakeInputRate; // 0x280
	FVehicleInputRate HandbrakeInputRate; // 0x288
	FVehicleInputRate SteeringInputRate; // 0x290
	FVehicleInputRate EngineOffSteeringInputRate; // 0x298
	AController* OverrideController; // 0x2c8
	bool bUseCustomAutoGearBox; // 0x2d0
};

struct UMaterialExpressionCurveAtlasRowParameter : UMaterialExpressionScalarParameter {
	UCurveLinearColor* Curve; // 0x60
	UCurveLinearColorAtlas* Atlas; // 0x68
	FExpressionInput InputTime; // 0x70
};

struct UAbilityTask_StartAbilityState : UAbilityTask {
	FScriptMulticastDelegate OnStateEnded; // 0x80
	FScriptMulticastDelegate OnStateInterrupted; // 0x90
};

struct USQBlastComponent : USceneComponent {
	float ConeLength; // 0x218
	float ConeAngle; // 0x21c
	float BlockBlastTraceOriginOffset; // 0x220
	float MaxDamage; // 0x224
	bool bIsDrawDebugEnabled; // 0x228
	UDamageType* DamageType; // 0x230
	float EffectsConeLength; // 0x238
	float EffectsConeHalfAngle; // 0x23c
	USQShockwave* BlastShockwave; // 0x240
};

struct USQChatBoxInfo : UObject {
	UFont* Font; // 0x28
	TArray<FSQHUDMessage> Messages; // 0x30
	FVector2D MessageBoxLocation; // 0x40
	int MaxNumberOfMessagesToShow; // 0x48
	float MessagesLifetime; // 0x4c
	float MessagesFadeTime; // 0x50
	ESQTextHorizontalAlignment MessageHorizontalAlignment; // 0x54
	ESQTextVerticalAlignment MessageVerticalAlignment; // 0x55
	bool bOutlineMessages; // 0x56
	bool bScrollUp; // 0x57
	float TextScale; // 0x58
};

struct UAbilitySystemTestAttributeSet : UAttributeSet {
	float MaxHealth; // 0x30
	float Health; // 0x34
	float Mana; // 0x38
	float MaxMana; // 0x3c
	float damage; // 0x40
	float SpellDamage; // 0x44
	float PhysicalDamage; // 0x48
	float CritChance; // 0x4c
	float CritMultiplier; // 0x50
	float ArmorDamageReduction; // 0x54
	float DodgeChance; // 0x58
	float LifeSteal; // 0x5c
	float Strength; // 0x60
	float StackingAttribute1; // 0x64
	float StackingAttribute2; // 0x68
	float NoStackAttribute; // 0x6c
};

struct ABP_AK74MGP25_1P78_UGL_Smoke_C : ABP_AK74MGP25_1P78_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UTireType : UDataAsset {
	float FrictionScale; // 0x30
};

struct UMaterialExpressionTextureProperty : UMaterialExpression {
	FExpressionInput TextureObject; // 0x40
	EMaterialExposedTextureProperty Property; // 0x54
};

struct UMultiPackerButton : UButton {
	EMultiPackerImageLayer TypeLayerNormal; // 0x428
	bool SetAsImage; // 0x429
	bool N_layer_2; // 0x42a
	bool N_layer_3; // 0x42b
	bool N_layer_4; // 0x42c
	FLayerDatabase N_LayerBase; // 0x430
	FLayerDatabase N_LayerAddition; // 0x488
	FLayerDatabase N_LayerDetail; // 0x4e0
	EMultiPackerImageLayer TypeLayerHovered; // 0x538
	bool H_layer_2; // 0x539
	bool H_layer_3; // 0x53a
	bool H_layer_4; // 0x53b
	FLayerDatabase H_LayerBase; // 0x540
	FLayerDatabase H_LayerAddition; // 0x598
	FLayerDatabase H_LayerDetail; // 0x5f0
	EMultiPackerImageLayer TypeLayerPressed; // 0x648
	bool P_layer_2; // 0x649
	bool P_layer_3; // 0x64a
	bool P_layer_4; // 0x64b
	FLayerDatabase P_LayerBase; // 0x650
	FLayerDatabase P_LayerAddition; // 0x6a8
	FLayerDatabase P_LayerDetail; // 0x700
	bool SetDisabledStyle; // 0x758
	EMultiPackerImageLayer TypeLayerDisabled; // 0x759
	bool D_layer_2; // 0x75a
	bool D_layer_3; // 0x75b
	bool D_layer_4; // 0x75c
	FLayerDatabase D_LayerBase; // 0x760
	FLayerDatabase D_LayerAddition; // 0x7b8
	FLayerDatabase D_LayerDetail; // 0x810
	FLinearColor NormalBaseColorOutline; // 0x888
	FLinearColor NormalBaseColorInterior; // 0x898
	float NormalBaseOutlineThresold; // 0x8a8
	float NormalBaseSDFThresold; // 0x8ac
	bool N_BaseStyleChanged; // 0x8b0
	UMultiPackerLayerDatabase* LayerNormalBaseStyle; // 0x8b8
	FLinearColor NormalAdditionColorOutline; // 0x8c0
	FLinearColor NormalAdditionColorInterior; // 0x8d0
	float NormalAdditionOutlineThresold; // 0x8e0
	float NormalAdditionSDFThresold; // 0x8e4
	bool N_AdditionStyleChanged; // 0x8e8
	UMultiPackerLayerDatabase* LayerNormalAdditionStyle; // 0x8f0
	FLinearColor NormalDetailColorOutline; // 0x8f8
	FLinearColor NormalDetailColorInterior; // 0x908
	float NormalDetailOutlineThresold; // 0x918
	float NormalDetailSDFThresold; // 0x91c
	bool N_DetailStyleChanged; // 0x920
	UMultiPackerLayerDatabase* LayerNormalDetailStyle; // 0x928
	FLinearColor HoveredBaseColorOutline; // 0x930
	FLinearColor HoveredBaseColorInterior; // 0x940
	float HoveredBaseOutlineThresold; // 0x950
	float HoveredBaseSDFThresold; // 0x954
	bool H_BaseStyleChanged; // 0x958
	UMultiPackerLayerDatabase* LayerHoveredBaseStyle; // 0x960
	FLinearColor HoveredAdditionColorOutline; // 0x968
	FLinearColor HoveredAdditionColorInterior; // 0x978
	float HoveredAdditionOutlineThresold; // 0x988
	float HoveredAdditionSDFThresold; // 0x98c
	bool H_AdditionStyleChanged; // 0x990
	UMultiPackerLayerDatabase* LayerHoveredAdditionStyle; // 0x998
	FLinearColor HoveredDetailColorOutline; // 0x9a0
	FLinearColor HoveredDetailColorInterior; // 0x9b0
	float HoveredDetailOutlineThresold; // 0x9c0
	float HoveredDetailSDFThresold; // 0x9c4
	bool H_DetailStyleChanged; // 0x9c8
	UMultiPackerLayerDatabase* LayerHoveredDetailStyle; // 0x9d0
	FLinearColor PressedBaseColorOutline; // 0x9d8
	FLinearColor PressedBaseColorInterior; // 0x9e8
	float PressedBaseOutlineThresold; // 0x9f8
	float PressedBaseSDFThresold; // 0x9fc
	bool P_BaseStyleChanged; // 0xa00
	UMultiPackerLayerDatabase* LayerPressedBaseStyle; // 0xa08
	FLinearColor PressedAdditionColorOutline; // 0xa10
	FLinearColor PressedAdditionColorInterior; // 0xa20
	float PressedAdditionOutlineThresold; // 0xa30
	float PressedAdditionSDFThresold; // 0xa34
	bool P_AdditionStyleChanged; // 0xa38
	UMultiPackerLayerDatabase* LayerPressedAdditionStyle; // 0xa40
	FLinearColor PressedDetailColorOutline; // 0xa48
	FLinearColor PressedDetailColorInterior; // 0xa58
	float PressedDetailOutlineThresold; // 0xa68
	float PressedDetailSDFThresold; // 0xa6c
	bool P_DetailStyleChanged; // 0xa70
	UMultiPackerLayerDatabase* LayerPressedDetailStyle; // 0xa78
	FLinearColor DisabledBaseColorOutline; // 0xa80
	FLinearColor DisabledBaseColorInterior; // 0xa90
	float DisabledBaseOutlineThresold; // 0xaa0
	float DisabledBaseSDFThresold; // 0xaa4
	bool D_BaseStyleChanged; // 0xaa8
	UMultiPackerLayerDatabase* LayerDisabledBaseStyle; // 0xab0
	FLinearColor DisabledAdditionColorOutline; // 0xab8
	FLinearColor DisabledAdditionColorInterior; // 0xac8
	float DisabledAdditionOutlineThresold; // 0xad8
	float DisabledAdditionSDFThresold; // 0xadc
	bool D_AdditionStyleChanged; // 0xae0
	UMultiPackerLayerDatabase* LayerDisabledAdditionStyle; // 0xae8
	FLinearColor DisabledDetailColorOutline; // 0xaf0
	FLinearColor DisabledDetailColorInterior; // 0xb00
	float DisabledDetailOutlineThresold; // 0xb10
	float DisabledDetailSDFThresold; // 0xb14
	bool D_DetailStyleChanged; // 0xb18
	UMultiPackerLayerDatabase* LayerDisabledDetailStyle; // 0xb20
};

struct ALight : AActor {
	ULightComponent* LightComponent; // 0x248
	char bEnabled : 1; // 0x250
};

struct ASQGameEventRuleset : ASQGameRuleSet {
	ESQKillReportChannel JoinChannel; // 0x270
	ESQKillReportChannel PartChannel; // 0x271
};

struct ULandscapeSplineControlPoint : UObject {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	float Width; // 0x40
	float SideFalloff; // 0x44
	float EndFalloff; // 0x48
	TArray<FLandscapeSplineConnection> ConnectedSegments; // 0x50
	TArray<FLandscapeSplineInterpPoint> Points; // 0x60
	FBox Bounds; // 0x70
	UControlPointMeshComponent* LocalMeshComponent; // 0x90
};

struct UGameplayCueSet : UDataAsset {
	TArray<FGameplayCueNotifyData> GameplayCueData; // 0x30
};

struct ABP_M4A1_Foregrip_Tracer_Woodland_C : ABP_M4A1_Foregrip_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAsyncActionLoadPrimaryAssetClassList : UAsyncActionLoadPrimaryAssetBase {
	FScriptMulticastDelegate Completed; // 0x78
};

struct UInterpTrackFloatProp : UInterpTrackFloatBase {
	FName PropertyName; // 0x90
};

struct UInterpTrackInstFloatParticleParam : UInterpTrackInst {
	float ResetFloat; // 0x28
};

struct UFixedFrameRateCustomTimeStep : UEngineCustomTimeStep {
	FFrameRate FixedFrameRate; // 0x28
};

struct UDistributionFloatUniformCurve : UDistributionFloat {
	FInterpCurveVector2D ConstantCurve; // 0x38
};

struct UHLODProxy : UObject {
	TArray<FHLODProxyMesh> ProxyMeshes; // 0x28
};

struct UMultiLineEditableText : UTextLayoutWidget {
	FText Text; // 0x128
	FText HintText; // 0x140
	DelegateProperty HintTextDelegate; // 0x158
	FTextBlockStyle WidgetStyle; // 0x168
	bool bIsReadOnly; // 0x3d0
	FSlateFontInfo Font; // 0x3d8
	bool SelectAllTextWhenFocused; // 0x428
	bool ClearTextSelectionOnFocusLoss; // 0x429
	bool RevertTextOnEscape; // 0x42a
	bool ClearKeyboardFocusOnCommit; // 0x42b
	bool AllowContextMenu; // 0x42c
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x42d
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x42e
	FScriptMulticastDelegate OnTextChanged; // 0x430
	FScriptMulticastDelegate OnTextCommitted; // 0x440
};

struct UCableComponent : UMeshComponent {
	bool bAttachStart; // 0x430
	bool bAttachEnd; // 0x431
	FComponentReference AttachEndTo; // 0x438
	FName AttachEndToSocketName; // 0x460
	FVector EndLocation; // 0x468
	float CableLength; // 0x474
	int NumSegments; // 0x478
	float SubstepTime; // 0x47c
	int SolverIterations; // 0x480
	bool bEnableStiffness; // 0x484
	bool bEnableCollision; // 0x485
	float CollisionFriction; // 0x488
	FVector CableForce; // 0x48c
	float CableGravityScale; // 0x498
	float CableWidth; // 0x49c
	int NumSides; // 0x4a0
	float TileMaterial; // 0x4a4
};

struct USQGridMarkerUnit : USQUserWidget {
	bool bIsVertical; // 0x230
	float DefaultSize; // 0x234
	UCanvasPanel* SizeCanvas; // 0x238
	UTextBlock* TextBlock; // 0x240
};

struct ARadialForceActor : ARigidBodyBase {
	URadialForceComponent* ForceComponent; // 0x248
};

struct USSGS_FrameObject : USSGS_Frame {
	TArray<FSSGS_KeyValuePair> properties; // 0x30
};

struct UAbilityTask_ApplyRootMotionConstantForce : UAbilityTask_ApplyRootMotion_Base {
	FScriptMulticastDelegate OnFinish; // 0xb8
	FVector WorldDirection; // 0xc8
	float Strength; // 0xd4
	float Duration; // 0xd8
	bool bIsAdditive; // 0xdc
	UCurveFloat* StrengthOverTime; // 0xe0
};

struct AAIController : AController {
	char bStopAILogicOnUnposses : 1; // 0x2f8
	char bLOSflag : 1; // 0x2f8
	char bSkipExtraLOSChecks : 1; // 0x2f8
	char bAllowStrafe : 1; // 0x2f8
	char bWantsPlayerState : 1; // 0x2f8
	char bSetControlRotationFromPawnOrientation : 1; // 0x2f8
	UPathFollowingComponent* PathFollowingComponent; // 0x300
	UBrainComponent* BrainComponent; // 0x308
	UAIPerceptionComponent* PerceptionComponent; // 0x310
	UPawnActionsComponent* ActionsComp; // 0x318
	UBlackboardComponent* Blackboard; // 0x320
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x328
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x330
	FScriptMulticastDelegate ReceiveMoveCompleted; // 0x338
};

struct AGeometryCollectionDebugDrawActor : AActor {
	FGeometryCollectionDebugDrawWarningMessage WarningMessage; // 0x248
	FGeometryCollectionDebugDrawActorSelectedRigidBody SelectedRigidBody; // 0x250
	bool bDebugDrawWholeCollection; // 0x268
	bool bDebugDrawHierarchy; // 0x269
	bool bDebugDrawClustering; // 0x26a
	EGeometryCollectionDebugDrawActorHideGeometry HideGeometry; // 0x26b
	bool bShowRigidBodyId; // 0x26c
	bool bShowRigidBodyCollision; // 0x26d
	bool bCollisionAtOrigin; // 0x26e
	bool bShowRigidBodyTransform; // 0x26f
	bool bShowRigidBodyInertia; // 0x270
	bool bShowRigidBodyVelocity; // 0x271
	bool bShowRigidBodyForce; // 0x272
	bool bShowRigidBodyInfos; // 0x273
	bool bShowTransformIndex; // 0x274
	bool bShowTransform; // 0x275
	bool bShowParent; // 0x276
	bool bShowLevel; // 0x277
	bool bShowConnectivityEdges; // 0x278
	bool bShowGeometryIndex; // 0x279
	bool bShowGeometryTransform; // 0x27a
	bool bShowBoundingBox; // 0x27b
	bool bShowFaces; // 0x27c
	bool bShowFaceIndices; // 0x27d
	bool bShowFaceNormals; // 0x27e
	bool bShowSingleFace; // 0x27f
	int SingleFaceIndex; // 0x280
	bool bShowVertices; // 0x284
	bool bShowVertexIndices; // 0x285
	bool bShowVertexNormals; // 0x286
	bool bUseActiveVisualization; // 0x287
	float PointThickness; // 0x288
	float LineThickness; // 0x28c
	bool bTextShadow; // 0x290
	float TextScale; // 0x294
	float NormalScale; // 0x298
	float AxisScale; // 0x29c
	float ArrowScale; // 0x2a0
	FColor RigidBodyIdColor; // 0x2a4
	float RigidBodyTransformScale; // 0x2a8
	FColor RigidBodyCollisionColor; // 0x2ac
	FColor RigidBodyInertiaColor; // 0x2b0
	FColor RigidBodyVelocityColor; // 0x2b4
	FColor RigidBodyForceColor; // 0x2b8
	FColor RigidBodyInfoColor; // 0x2bc
	FColor TransformIndexColor; // 0x2c0
	float TransformScale; // 0x2c4
	FColor LevelColor; // 0x2c8
	FColor ParentColor; // 0x2cc
	float ConnectivityEdgeThickness; // 0x2d0
	FColor GeometryIndexColor; // 0x2d4
	float GeometryTransformScale; // 0x2d8
	FColor BoundingBoxColor; // 0x2dc
	FColor FaceColor; // 0x2e0
	FColor FaceIndexColor; // 0x2e4
	FColor FaceNormalColor; // 0x2e8
	FColor SingleFaceColor; // 0x2ec
	FColor VertexColor; // 0x2f0
	FColor VertexIndexColor; // 0x2f4
	FColor VertexNormalColor; // 0x2f8
	UBillboardComponent* SpriteComponent; // 0x300
};

struct ABP_EnemyScalingSpawn_C : ASQGameSpawn {
	FPointerToUberGraphFrame UberGraphFrame; // 0x420
	USphereComponent* EnemyDetectionRadius; // 0x428
	int EnemiesInRadius; // 0x430
	float RespawnDelayPerPerson; // 0x434
	int NumEnemiesToDisable; // 0x438
};

struct UBP_Attachment_1p78_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ABP_AK74M_1P63_Desert_C : ABP_AK74M_1P63_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UConsole : UObject {
	ULocalPlayer* ConsoleTargetPlayer; // 0x38
	UTexture2D* DefaultTexture_Black; // 0x40
	UTexture2D* DefaultTexture_White; // 0x48
	TArray<FString> HistoryBuffer; // 0x68
};

struct USQLocalCameraEffectHandler : UObject {
	FPostProcessSettings Effect; // 0x30
	float BlendValue; // 0x560
};

struct APainCausingVolume : APhysicsVolume {
	char bPainCausing : 1; // 0x290
	float DamagePerSec; // 0x294
	UDamageType* DamageType; // 0x298
	float PainInterval; // 0x2a0
	char bEntryPain : 1; // 0x2a4
	char BACKUP_bPainCausing : 1; // 0x2a4
	AController* DamageInstigator; // 0x2a8
};

struct USQWeaponStaticInfo : USQItemStaticInfo {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UParticleModuleSizeMultiplyLife : UParticleModuleSizeBase {
	FRawDistributionVector LifeMultiplier; // 0x30
	char MultiplyX : 1; // 0x80
	char MultiplyY : 1; // 0x80
	char MultiplyZ : 1; // 0x80
};

struct USoundNodeRandom : USoundNode {
	TArray<float> Weights; // 0x40
	int PreselectAtLevelLoad; // 0x50
	char bShouldExcludeFromBranchCulling : 1; // 0x54
	char bSoundCueExcludedFromBranchCulling : 1; // 0x54
	char bRandomizeWithoutReplacement : 1; // 0x58
	TArray<bool> HasBeenUsed; // 0x60
	int NumRandomUsed; // 0x70
};

struct UMaterialExpressionBentNormalCustomOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UVectorFieldStatic : UVectorField {
	int SizeX; // 0x48
	int SizeY; // 0x4c
	int SizeZ; // 0x50
	bool bAllowCPUAccess; // 0x54
	TArray<FVector4> CPUData; // 0xf0
};

struct USQSquadStateDataPawn : USQSquadStateMapData {
	bool bHiddenWhenUnpossessed; // 0x180
	bool bHiddenWhenNotLocallyControlled; // 0x181
	bool bHideWidgetWhenUnpossessed; // 0x182
	float CameraRotaionYawTolerance; // 0x184
	ASQPlayerState* OwnerPlayerState; // 0x188
	int CachedPlayerId; // 0x194
	int FireTeamIndex; // 0x198
	ASQPlayerState* CachedOwnerPlayerState; // 0x1a0
};

struct USQSimpleMovementComponent : USQMovementComponentBase {
	TScriptInterface<Class> UpdatedMeshOwner; // 0x1c0
	float LocationInputAcceleration; // 0x1f4
	float RotationInputAcceleration; // 0x1f8
};

struct UToFloatField : UFieldNodeFloat {
	UFieldNodeInt* IntField; // 0xd8
};

struct ATestBeaconClient : AOnlineBeaconClient {
	AOnlineBeaconHostObject* BeaconOwner; // 0x278
	UNetConnection* BeaconConnection; // 0x280
	EBeaconConnectionState ConnectionState; // 0x288
};

struct UTextureRenderTarget : UTexture {
	float TargetGamma; // 0xd0
};

struct AMeshMergeCullingVolume : AVolume {
	EBrushType BrushType; // 0x248
	FColor BrushColor; // 0x24c
	int PolyFlags; // 0x250
	char bColored : 1; // 0x254
	char bSolidWhenSelected : 1; // 0x254
	char bPlaceableFromClassBrowser : 1; // 0x254
	char bNotForClientOrServer : 1; // 0x254
	UModel* Brush; // 0x258
	UBrushComponent* BrushComponent; // 0x260
	char bInManipulation : 1; // 0x268
	TArray<FGeomSelection> SavedSelections; // 0x270
};

struct UEditableStaticMeshAdapter : UEditableMeshAdapter {
	UStaticMesh* StaticMesh; // 0x28
	UStaticMesh* OriginalStaticMesh; // 0x30
	int StaticMeshLODIndex; // 0x38
};

struct UParticleModuleSpawn : UParticleModuleSpawnBase {
	FRawDistributionFloat Rate; // 0x38
	FRawDistributionFloat RateScale; // 0x70
	EParticleBurstMethod ParticleBurstMethod; // 0xa8
	TArray<FParticleBurst> BurstList; // 0xb0
	FRawDistributionFloat BurstScale; // 0xc0
	char bApplyGlobalSpawnRateScale : 1; // 0xf8
};

struct UAnimNotify_PlayParticleEffect : UAnimNotify {
	UParticleSystem* PSTemplate; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct UNavArea_Null : UNavArea {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct ABP_L85A2_SUSAT_C : ABP_L85A2_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct UMenuAnchor : UContentWidget {
	UUserWidget* MenuClass; // 0x120
	DelegateProperty OnGetMenuContentEvent; // 0x128
	EMenuPlacement Placement; // 0x138
	bool bFitInWindow; // 0x139
	bool ShouldDeferPaintingAfterWindowContent; // 0x13a
	bool UseApplicationMenuStack; // 0x13b
	FScriptMulticastDelegate OnMenuOpenChanged; // 0x140
};

struct ASQDeployableInteractable : ASQDeployableItem {
	ASQPlayerController* InstigatingPlayerController; // 0x410
	ASQPlayerState* InstigatingPlayerState; // 0x418
	int MaxAllowedPerPlayerInGame; // 0x420
	ESQTrackDeployableResult TrackDeployableOverMaxResult; // 0x424
	ASQEquipableItem* EquippableInstigatorClass; // 0x428
};

struct ABP_M4_M68_Founder_C : ABP_M4_M68_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74MGP25_1P78_UGL_HE_C : ABP_AK74MGP25_1P78_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UFindSessionsCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct ABP_M4A1_M68_Foregrip_C : ABP_M4A1_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ULightComponent : ULightComponentBase {
	float Temperature; // 0x248
	float MaxDrawDistance; // 0x24c
	float MaxDistanceFadeRange; // 0x250
	char bUseTemperature : 1; // 0x254
	int ShadowMapChannel; // 0x258
	float MinRoughness; // 0x260
	float SpecularScale; // 0x264
	float ShadowResolutionScale; // 0x268
	float ShadowBias; // 0x26c
	float ShadowSlopeBias; // 0x270
	float ShadowSharpen; // 0x274
	float ContactShadowLength; // 0x278
	char ContactShadowLengthInWS : 1; // 0x27c
	char InverseSquaredFalloff : 1; // 0x27c
	char CastTranslucentShadows : 1; // 0x27c
	char bCastShadowsFromCinematicObjectsOnly : 1; // 0x27c
	char bAffectDynamicIndirectLighting : 1; // 0x27c
	char bForceCachedShadowsForMovablePrimitives : 1; // 0x27c
	FLightingChannels LightingChannels; // 0x280
	UMaterialInterface* LightFunctionMaterial; // 0x288
	FVector LightFunctionScale; // 0x290
	UTextureLightProfile* IESTexture; // 0x2a0
	char bUseIESBrightness : 1; // 0x2a8
	float IESBrightnessScale; // 0x2ac
	float LightFunctionFadeDistance; // 0x2b0
	float DisabledBrightness; // 0x2b4
	char bEnableLightShaftBloom : 1; // 0x2b8
	float BloomScale; // 0x2bc
	float BloomThreshold; // 0x2c0
	FColor BloomTint; // 0x2c4
	bool bUseRayTracedDistanceFieldShadows; // 0x2c8
	float RayStartOffsetDepthScale; // 0x2cc
};

struct USVDM_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_8E8FAD8547A5B4F6412A22AD077CEA2F; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_102101704678B5ED4015D38213F21464; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_77E5606B47C74B63198714B41BF6E659; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_2083513D40927972A58C6EBB4545DFA6; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_B8536ACC4E13D9A0DD2182B205D3AD7F; // 0x468
	FAnimNode_Slot AnimGraphNode_Slot_FD0B640A4C0B17735569479A9A569C11; // 0x4b0
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_CD8B78BC4DE589DD1C62F8B8BCC33332; // 0x4f8
	FAnimNode_Slot AnimGraphNode_Slot_17CCF19149A0B4AF597201ADC57F3315; // 0x510
};

struct UBTTask_Wait : UBTTaskNode {
	float WaitTime; // 0x70
	float RandomDeviation; // 0x74
};

struct UImgMediaSource : UBaseMediaSource {
	FFrameRate FrameRateOverride; // 0x38
	FString ProxyOverride; // 0x40
	FDirectoryPath SequencePath; // 0x50
};

struct UParticleModuleCameraOffset : UParticleModuleCameraBase {
	FRawDistributionFloat CameraOffset; // 0x30
	char bSpawnTimeOnly : 1; // 0x68
	EParticleCameraOffsetUpdateMethod UpdateMethod; // 0x6c
};

struct ABP_AK74M_1P78_4Mags_C : ABP_AK74M_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UNavLinkDefinition : UObject {
	TArray<FNavigationLink> Links; // 0x28
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x38
};

struct UScaleBox : UContentWidget {
	EStretch Stretch; // 0x120
	EStretchDirection StretchDirection; // 0x121
	float UserSpecifiedScale; // 0x124
	bool IgnoreInheritedScale; // 0x128
	bool bSingleLayoutPass; // 0x129
};

struct ABP_M4_M68_C : ABP_M4A1_M68_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQVehicleWheel_Tracked : UVehicleWheel {
	FVector SuspensionDirection; // 0xf8
};

struct UBillboardComponent : UPrimitiveComponent {
	UTexture2D* Sprite; // 0x408
	char bIsScreenSizeScaled : 1; // 0x410
	float ScreenSize; // 0x414
	float U; // 0x418
	float UL; // 0x41c
	float V; // 0x420
	float VL; // 0x424
};

struct UHapticFeedbackEffect_Buffer : UHapticFeedbackEffect_Base {
	TArray<char> Amplitudes; // 0x28
	int SampleRate; // 0x38
};

struct UMaterialExpressionTime : UMaterialExpression {
	char bIgnorePause : 1; // 0x40
	char bOverride_Period : 1; // 0x40
	float Period; // 0x44
};

struct UBP_HAT_DamageType_C : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct UMaterialExpressionConstantBiasScale : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Bias; // 0x54
	float Scale; // 0x58
};

struct USlateVectorArtData : UObject {
	TArray<FSlateMeshVertex> VertexData; // 0x28
	TArray<uint32> IndexData; // 0x38
	UMaterialInterface* Material; // 0x48
	FVector2D ExtentMin; // 0x50
	FVector2D ExtentMax; // 0x58
};

struct UMultiPackerRuntimeGraph : UObject {
	ETextureSizeOutputPersonal RenderTargetSizeOutput; // 0x28
	bool Alpha; // 0x29
	UMultiPackerRuntimeBinPack* RuntimeData; // 0x30
	int Size; // 0x38
	int Pages; // 0x3c
	TMap<FName, FMaterialDataBinPack> MaterialMap; // 0x40
	TArray<UTextureRenderTarget2D*> RenderTargetPages; // 0x90
};

struct UMaterialExpressionActorPositionWS : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct ABP_SVDM_Optic_C : ABP_SVD_Optic_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* SVDFront; // 0x7b8
	UStaticMeshComponent* PSOScope; // 0x7c0
	bool HasBUIS; // 0x7c8
};

struct ABP_AK74MGP25_UGL_Desert_HE_C : ABP_AK74MGP25_UGL_Desert_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQDeployableSettings : USQSettings {
	bool ShouldBeTrackedByFOB; // 0x58
};

struct UInterpData : UObject {
	float InterpLength; // 0x28
	float PathBuildTime; // 0x2c
	TArray<UInterpGroup*> InterpGroups; // 0x30
	UInterpCurveEdSetup* CurveEdSetup; // 0x40
	float EdSectionStart; // 0x48
	float EdSectionEnd; // 0x4c
	char bShouldBakeAndPrune : 1; // 0x50
	UInterpGroupDirector* CachedDirectorGroup; // 0x58
	TArray<FName> AllEventNames; // 0x60
};

struct UAnimNotify_PlayMontageNotify : UAnimNotify {
	FName NotifyName; // 0x38
};

struct UParticleModuleMeshRotation : UParticleModuleRotationBase {
	FRawDistributionVector StartRotation; // 0x30
	char bInheritParent : 1; // 0x80
};

struct USynthSound : USoundWaveProcedural {
	USynthComponent* OwningSynthComponent; // 0x310
};

struct URetainerBox : UContentWidget {
	bool RenderOnInvalidation; // 0x120
	bool RenderOnPhase; // 0x121
	int Phase; // 0x124
	int PhaseCount; // 0x128
	UMaterialInterface* EffectMaterial; // 0x130
	FName TextureParameter; // 0x138
};

struct ASQWeapon_Effects : ASQWeapon {
	FSQWeaponSounds WeaponSounds; // 0x7a0
	FSQWeaponAnims WeaponAnimations; // 0x828
	FSQRecoilData RecoilData; // 0x870
	FSQWeaponEffects WeaponEffects; // 0x8b8
	FSQWeaponSpring WeaponSpringConfig; // 0x8f0
	UCurveFloat* RecoilCurve; // 0x918
	FVector WeaponOffset; // 0x920
	FVector SightsViewOffset; // 0x92c
};

struct UEnvQueryTest_GameplayTags : UEnvQueryTest {
	FGameplayTagQuery TagQueryToMatch; // 0x1c0
	bool bUpdatedToUseQuery; // 0x208
	EGameplayContainerMatchType TagsToMatch; // 0x209
	FGameplayTagContainer GameplayTags; // 0x210
};

struct UBP_SQLayer_C : USQLayer {
	FDataTableRowHandle GameMode; // 0xb0
	TArray<FSQVehicleCountModifier> Vehicle Count Modifiers; // 0xc0
	FDataTableRowHandle FobRadius; // 0xd0
};

struct UNullAudioCaptureProtocol : UMovieSceneAudioCaptureProtocolBase {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct USQPawnMovementComponent : UPawnMovementComponent {
	FSQMovePostPhysicsTickFunction PostPhysicsTickFunction; // 0x160
	char bJustTeleported : 1; // 0x1e0
	char bIgnoreBaseRotation : 1; // 0x1e0
	char bUseControllerDesiredRotation : 1; // 0x1e0
	char bOrientRotationToMovement : 1; // 0x1e0
	char bFastAttachedMove : 1; // 0x1e0
	char bRunPhysicsWithNoController : 1; // 0x1e0
};

struct USQMapIconComponent : USQMapItemComponent {
	UTexture* Texture; // 0x130
	ESQMapIconSelectionGroup SelectionGroup; // 0x138
	UTexture* SelectedTexture; // 0x140
	FLinearColor SelectedTint; // 0x148
};

struct USQOrderLines : USQMapLattice {
	bool bShowTeamOrderLines; // 0x250
	float SelfSquadLineThickness; // 0x254
	float OtherSquadLineThickness; // 0x258
	USQMapMarkerManagerComponent* MapMarkerManagerComponent; // 0x260
};

struct ANavigationObjectBase : AActor {
	UCapsuleComponent* CapsuleComponent; // 0x250
	UBillboardComponent* GoodSprite; // 0x258
	UBillboardComponent* BadSprite; // 0x260
	char bIsPIEPlayerStart : 1; // 0x268
};

struct UMaterialExpressionNoise : UMaterialExpression {
	FExpressionInput Position; // 0x40
	FExpressionInput FilterWidth; // 0x54
	float Scale; // 0x68
	int Quality; // 0x6c
	ENoiseFunction NoiseFunction; // 0x70
	char bTurbulence : 1; // 0x74
	int Levels; // 0x78
	float OutputMin; // 0x7c
	float OutputMax; // 0x80
	float LevelScale; // 0x84
	char bTiling : 1; // 0x88
	uint32 RepeatSize; // 0x8c
};

struct UAIDataProvider_Random : UAIDataProvider_QueryParams {
	float Min; // 0x40
	float Max; // 0x44
	char bInteger : 1; // 0x48
};

struct ABP_L85A2_DarkEarth_Foregrip_C : ABP_L85A2_DarkEarth_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USoundNodeSwitch : USoundNode {
	FName IntParameterName; // 0x40
};

struct USQRoleListUnit : USQUserWidget {
	bool bCanTick; // 0x230
	UCanvasPanel* SizeCanvas; // 0x238
	UImage* MainBgImage; // 0x240
	UImage* KitNameBgImage; // 0x248
	UImage* KitIcon; // 0x250
	UImage* SpecialIcon; // 0x258
	UTextBlock* KitNameTextBlock; // 0x260
	UTextBlock* KitCountTeamTextBlock; // 0x268
	UTextBlock* KitCountTextBlock; // 0x270
	UUserWidget* RoleToolTipWidgetClass; // 0x278
	FLinearColor BgColorSelectedRole; // 0x280
	FLinearColor BgColorNotAvaliable; // 0x290
	FLinearColor BgColorNotSelectedRole; // 0x2a0
	FLinearColor ColorKitIconAvailable; // 0x2b0
	FLinearColor ColorKitIconUnavailable; // 0x2c0
	UTexture2D* SquadLeaderAbilityIcon; // 0x2d0
	UTexture2D* MedicAbilityIcon; // 0x2d8
	USQRoleSettings* RoleReference; // 0x2e0
	ASQPlayerController* OwnerPlayerController; // 0x2e8
	UWidgetAnimation* OpenAnimation; // 0x2f0
	USoundCue* MouseEnterSoundCue; // 0x2f8
};

struct UBP_SquadStateDataSquadState_C : USQSquadStateDataSquadState {
	FString SquadName; // 0x118
	FString LeaderName; // 0x128
	char MemberNum; // 0x138
	char bIsLocked : 1; // 0x13c
	char bIsCommandSquad : 1; // 0x13c
};

struct USkeletalMeshLODSettings : UDataAsset {
	FPerPlatformInt MinLOD; // 0x30
	FPerPlatformBool DisableBelowMinLodStripping; // 0x34
	TArray<FSkeletalMeshLODGroupSettings> LODGroups; // 0x38
};

struct UBP_SmallArms_DamageType_C : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct ABP_L85A2AG36_Rifle_C : ABP_L85A2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQScoreboardSquad : USQUserWidget {
	ASQPlayerController* SQPC; // 0x230
	ASQSquadState* SquadState; // 0x238
	TArray<FPlayerWidgetPair> DisplayedPlayers; // 0x240
	bool bShowAllStats; // 0x250
	bool bUseAccumulativeLifetimeScores; // 0x251
	FLinearColor OwnSquadColor; // 0x254
	FLinearColor FriendlySquadColor; // 0x264
	FLinearColor EnemySquadColor; // 0x274
	bool bIsFriendlyScoreboard; // 0x284
	USQScoreboardPlayer* ScoreboardPlayerType; // 0x288
	UHorizontalBox* EndOfRoundHorizontalBox; // 0x290
	UGridPanel* PlayersGrid; // 0x298
	USpacer* NotEndOfRoundSpacer; // 0x2a0
	UTextBlock* SquadNumberText; // 0x2a8
	UTextBlock* SquadNameText; // 0x2b0
	UTextBlock* SquadKillsText; // 0x2b8
	UTextBlock* SquadIncapsText; // 0x2c0
	UTextBlock* SquadDeathsText; // 0x2c8
	UTextBlock* SquadRevivesText; // 0x2d0
	UTextBlock* SquadHealsText; // 0x2d8
	UTextBlock* SquadTeamworkText; // 0x2e0
	UTextBlock* SquadObjectiveText; // 0x2e8
	UTextBlock* SquadScoreText; // 0x2f0
	UImage* SquadColorImage; // 0x2f8
	UImage* SquadTalkingImage; // 0x300
};

struct UMaterialExpressionParticleColor : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMaterialExpressionDDX : UMaterialExpression {
	FExpressionInput Value; // 0x40
};

struct UAvoidanceManager : UObject {
	float DefaultTimeToLive; // 0x30
	float LockTimeAfterAvoid; // 0x34
	float LockTimeAfterClean; // 0x38
	float DeltaTimeToPredict; // 0x3c
	float ArtificialRadiusExpansion; // 0x40
	float TestHeightDifference; // 0x44
	float HeightCheckMargin; // 0x48
};

struct UMaterialFunctionMaterialLayerInstance : UMaterialFunctionInstance {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
};

struct ASQTeamSpawnGroup : ASQGameSpawn {
	TArray<ASQTeamSpawnPoint*> SpawnPoints; // 0x420
};

struct UMaterialExpressionEyeAdaptation : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UBP_Attachment_M68_Founder_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMovieSceneTransformTrack : UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UParticleModuleLocationPrimitiveTriangle : UParticleModuleLocationBase {
	FRawDistributionVector StartOffset; // 0x30
	FRawDistributionFloat Height; // 0x80
	FRawDistributionFloat Angle; // 0xb8
	FRawDistributionFloat Thickness; // 0xf0
};

struct UEngine : UObject {
	UFont* TinyFont; // 0x30
	FSoftObjectPath TinyFontName; // 0x38
	UFont* SmallFont; // 0x50
	FSoftObjectPath SmallFontName; // 0x58
	UFont* MediumFont; // 0x70
	FSoftObjectPath MediumFontName; // 0x78
	UFont* LargeFont; // 0x90
	FSoftObjectPath LargeFontName; // 0x98
	UFont* SubtitleFont; // 0xb0
	FSoftObjectPath SubtitleFontName; // 0xb8
	TArray<UFont*> AdditionalFonts; // 0xd0
	TArray<FString> AdditionalFontNames; // 0xe8
	UConsole* ConsoleClass; // 0xf8
	FSoftClassPath ConsoleClassName; // 0x100
	UGameViewportClient* GameViewportClientClass; // 0x118
	FSoftClassPath GameViewportClientClassName; // 0x120
	ULocalPlayer* LocalPlayerClass; // 0x138
	FSoftClassPath LocalPlayerClassName; // 0x140
	AWorldSettings* WorldSettingsClass; // 0x158
	FSoftClassPath WorldSettingsClassName; // 0x160
	FSoftClassPath NavigationSystemClassName; // 0x178
	UNavigationSystemBase* NavigationSystemClass; // 0x190
	FSoftClassPath NavigationSystemConfigClassName; // 0x198
	UNavigationSystemConfig* NavigationSystemConfigClass; // 0x1b0
	FSoftClassPath AvoidanceManagerClassName; // 0x1b8
	UAvoidanceManager* AvoidanceManagerClass; // 0x1d0
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x1d8
	FSoftClassPath PhysicsCollisionHandlerClassName; // 0x1e0
	FSoftClassPath GameUserSettingsClassName; // 0x1f8
	UGameUserSettings* GameUserSettingsClass; // 0x210
	FSoftClassPath AIControllerClassName; // 0x218
	UGameUserSettings* GameUserSettings; // 0x230
	ALevelScriptActor* LevelScriptActorClass; // 0x238
	FSoftClassPath LevelScriptActorClassName; // 0x240
	FSoftClassPath DefaultBlueprintBaseClassName; // 0x258
	FSoftClassPath GameSingletonClassName; // 0x270
	UObject* GameSingleton; // 0x288
	FSoftClassPath AssetManagerClassName; // 0x290
	UAssetManager* AssetManager; // 0x2a8
	UTexture2D* DefaultTexture; // 0x2b0
	FSoftObjectPath DefaultTextureName; // 0x2b8
	UTexture* DefaultDiffuseTexture; // 0x2d0
	FSoftObjectPath DefaultDiffuseTextureName; // 0x2d8
	UTexture2D* DefaultBSPVertexTexture; // 0x2f0
	FSoftObjectPath DefaultBSPVertexTextureName; // 0x2f8
	UTexture2D* HighFrequencyNoiseTexture; // 0x310
	FSoftObjectPath HighFrequencyNoiseTextureName; // 0x318
	UTexture2D* DefaultBokehTexture; // 0x330
	FSoftObjectPath DefaultBokehTextureName; // 0x338
	UTexture2D* DefaultBloomKernelTexture; // 0x350
	FSoftObjectPath DefaultBloomKernelTextureName; // 0x358
	UMaterial* WireframeMaterial; // 0x370
	FString WireframeMaterialName; // 0x378
	UMaterial* DebugMeshMaterial; // 0x388
	FSoftObjectPath DebugMeshMaterialName; // 0x390
	UMaterial* EmissiveMeshMaterial; // 0x3a8
	FSoftObjectPath EmissiveMeshMaterialName; // 0x3b0
	UMaterial* LevelColorationLitMaterial; // 0x3c8
	FString LevelColorationLitMaterialName; // 0x3d0
	UMaterial* LevelColorationUnlitMaterial; // 0x3e0
	FString LevelColorationUnlitMaterialName; // 0x3e8
	UMaterial* LightingTexelDensityMaterial; // 0x3f8
	FString LightingTexelDensityName; // 0x400
	UMaterial* ShadedLevelColorationLitMaterial; // 0x410
	FString ShadedLevelColorationLitMaterialName; // 0x418
	UMaterial* ShadedLevelColorationUnlitMaterial; // 0x428
	FString ShadedLevelColorationUnlitMaterialName; // 0x430
	UMaterial* RemoveSurfaceMaterial; // 0x440
	FSoftObjectPath RemoveSurfaceMaterialName; // 0x448
	UMaterial* VertexColorMaterial; // 0x460
	FString VertexColorMaterialName; // 0x468
	UMaterial* VertexColorViewModeMaterial_ColorOnly; // 0x478
	FString VertexColorViewModeMaterialName_ColorOnly; // 0x480
	UMaterial* VertexColorViewModeMaterial_AlphaAsColor; // 0x490
	FString VertexColorViewModeMaterialName_AlphaAsColor; // 0x498
	UMaterial* VertexColorViewModeMaterial_RedOnly; // 0x4a8
	FString VertexColorViewModeMaterialName_RedOnly; // 0x4b0
	UMaterial* VertexColorViewModeMaterial_GreenOnly; // 0x4c0
	FString VertexColorViewModeMaterialName_GreenOnly; // 0x4c8
	UMaterial* VertexColorViewModeMaterial_BlueOnly; // 0x4d8
	FString VertexColorViewModeMaterialName_BlueOnly; // 0x4e0
	FSoftObjectPath DebugEditorMaterialName; // 0x4f0
	UMaterial* ConstraintLimitMaterial; // 0x508
	UMaterialInstanceDynamic* ConstraintLimitMaterialX; // 0x510
	UMaterialInstanceDynamic* ConstraintLimitMaterialXAxis; // 0x518
	UMaterialInstanceDynamic* ConstraintLimitMaterialY; // 0x520
	UMaterialInstanceDynamic* ConstraintLimitMaterialYAxis; // 0x528
	UMaterialInstanceDynamic* ConstraintLimitMaterialZ; // 0x530
	UMaterialInstanceDynamic* ConstraintLimitMaterialZAxis; // 0x538
	UMaterialInstanceDynamic* ConstraintLimitMaterialPrismatic; // 0x540
	UMaterial* InvalidLightmapSettingsMaterial; // 0x548
	FSoftObjectPath InvalidLightmapSettingsMaterialName; // 0x550
	UMaterial* PreviewShadowsIndicatorMaterial; // 0x568
	FSoftObjectPath PreviewShadowsIndicatorMaterialName; // 0x570
	UMaterial* ArrowMaterial; // 0x588
	UMaterialInstanceDynamic* ArrowMaterialYellow; // 0x590
	FSoftObjectPath ArrowMaterialName; // 0x598
	FLinearColor LightingOnlyBrightness; // 0x5b0
	TArray<FLinearColor> ShaderComplexityColors; // 0x5c0
	TArray<FLinearColor> QuadComplexityColors; // 0x5d0
	TArray<FLinearColor> LightComplexityColors; // 0x5e0
	TArray<FLinearColor> StationaryLightOverlapColors; // 0x5f0
	TArray<FLinearColor> LODColorationColors; // 0x600
	TArray<FLinearColor> HLODColorationColors; // 0x610
	TArray<FLinearColor> StreamingAccuracyColors; // 0x620
	float MaxPixelShaderAdditiveComplexityCount; // 0x630
	float MaxES2PixelShaderAdditiveComplexityCount; // 0x634
	float MaxES3PixelShaderAdditiveComplexityCount; // 0x638
	float MinLightMapDensity; // 0x63c
	float IdealLightMapDensity; // 0x640
	float MaxLightMapDensity; // 0x644
	char bRenderLightMapDensityGrayscale : 1; // 0x648
	float RenderLightMapDensityGrayscaleScale; // 0x64c
	float RenderLightMapDensityColorScale; // 0x650
	FLinearColor LightMapDensityVertexMappedColor; // 0x654
	FLinearColor LightMapDensitySelectedColor; // 0x664
	TArray<FStatColorMapping> StatColorMappings; // 0x678
	UPhysicalMaterial* DefaultPhysMaterial; // 0x688
	FSoftObjectPath DefaultPhysMaterialName; // 0x690
	TArray<FGameNameRedirect> ActiveGameNameRedirects; // 0x6a8
	TArray<FClassRedirect> ActiveClassRedirects; // 0x6b8
	TArray<FPluginRedirect> ActivePluginRedirects; // 0x6c8
	TArray<FStructRedirect> ActiveStructRedirects; // 0x6d8
	UTexture2D* PreIntegratedSkinBRDFTexture; // 0x6e8
	FSoftObjectPath PreIntegratedSkinBRDFTextureName; // 0x6f0
	UTexture2D* BlueNoiseTexture; // 0x708
	FSoftObjectPath BlueNoiseTextureName; // 0x710
	UTexture2D* MiniFontTexture; // 0x728
	FSoftObjectPath MiniFontTextureName; // 0x730
	UTexture* WeightMapPlaceholderTexture; // 0x748
	FSoftObjectPath WeightMapPlaceholderTextureName; // 0x750
	UTexture2D* LightMapDensityTexture; // 0x768
	FSoftObjectPath LightMapDensityTextureName; // 0x770
	UGameViewportClient* GameViewport; // 0x790
	TArray<FString> DeferredCommands; // 0x798
	int TickCycles; // 0x7a8
	int GameCycles; // 0x7ac
	int ClientCycles; // 0x7b0
	float NearClipPlane; // 0x7b4
	char bHardwareSurveyEnabled : 1; // 0x7b8
	char bSubtitlesEnabled : 1; // 0x7b8
	char bSubtitlesForcedOff : 1; // 0x7b8
	int MaximumLoopIterationCount; // 0x7bc
	char bCanBlueprintsTickByDefault : 1; // 0x7c0
	char bOptimizeAnimBlueprintMemberVariableAccess : 1; // 0x7c0
	char bAllowMultiThreadedAnimationUpdate : 1; // 0x7c0
	char bEnableEditorPSysRealtimeLOD : 1; // 0x7c0
	char bSmoothFrameRate : 1; // 0x7c0
	char bUseFixedFrameRate : 1; // 0x7c0
	float FixedFrameRate; // 0x7c4
	FFloatRange SmoothedFrameRateRange; // 0x7c8
	UEngineCustomTimeStep* DefaultCustomTimeStep; // 0x7d8
	UEngineCustomTimeStep* CurrentCustomTimeStep; // 0x7e0
	FSoftClassPath CustomTimeStepClassName; // 0x7e8
	UTimecodeProvider* DefaultTimecodeProvider; // 0x800
	UTimecodeProvider* CustomTimecodeProvider; // 0x808
	FSoftClassPath DefaultTimecodeProviderClassName; // 0x810
	FSoftClassPath TimecodeProviderClassName; // 0x828
	FFrameRate DefaultTimecodeFrameRate; // 0x840
	char bCheckForMultiplePawnsSpawnedInAFrame : 1; // 0x848
	int NumPawnsAllowedToBeSpawnedInAFrame; // 0x84c
	char bShouldGenerateLowQualityLightmaps : 1; // 0x850
	FColor C_WorldBox; // 0x854
	FColor C_BrushWire; // 0x858
	FColor C_AddWire; // 0x85c
	FColor C_SubtractWire; // 0x860
	FColor C_SemiSolidWire; // 0x864
	FColor C_NonSolidWire; // 0x868
	FColor C_WireBackground; // 0x86c
	FColor C_ScaleBoxHi; // 0x870
	FColor C_VolumeCollision; // 0x874
	FColor C_BSPCollision; // 0x878
	FColor C_OrthoBackground; // 0x87c
	FColor C_Volume; // 0x880
	FColor C_BrushShape; // 0x884
	float StreamingDistanceFactor; // 0x888
	FDirectoryPath GameScreenshotSaveDirectory; // 0x890
	ETransitionType TransitionType; // 0x8a0
	FString TransitionDescription; // 0x8a8
	FString TransitionGameMode; // 0x8b8
	float MeshLODRange; // 0x8c8
	char bAllowMatureLanguage : 1; // 0x8cc
	float CameraRotationThreshold; // 0x8d0
	float CameraTranslationThreshold; // 0x8d4
	float PrimitiveProbablyVisibleTime; // 0x8d8
	float MaxOcclusionPixelsFraction; // 0x8dc
	char bPauseOnLossOfFocus : 1; // 0x8e0
	int MaxParticleResize; // 0x8e4
	int MaxParticleResizeWarn; // 0x8e8
	TArray<FDropNoteInfo> PendingDroppedNotes; // 0x8f0
	float NetClientTicksPerSecond; // 0x900
	float DisplayGamma; // 0x904
	float MinDesiredFrameRate; // 0x908
	FLinearColor DefaultSelectedMaterialColor; // 0x90c
	FLinearColor SelectedMaterialColor; // 0x91c
	FLinearColor SelectionOutlineColor; // 0x92c
	FLinearColor SubduedSelectionOutlineColor; // 0x93c
	FLinearColor SelectedMaterialColorOverride; // 0x94c
	bool bIsOverridingSelectedColor; // 0x95c
	char bEnableOnScreenDebugMessages : 1; // 0x960
	char bEnableOnScreenDebugMessagesDisplay : 1; // 0x960
	char bSuppressMapWarnings : 1; // 0x960
	char bDisableAILogging : 1; // 0x960
	uint32 bEnableVisualLogRecordingOnStart; // 0x964
	int ScreenSaverInhibitorSemaphore; // 0x96c
	char bLockReadOnlyLevels : 1; // 0x970
	FString ParticleEventManagerClassPath; // 0x978
	float SelectionHighlightIntensity; // 0x998
	float BSPSelectionHighlightIntensity; // 0x99c
	float SelectionHighlightIntensityBillboards; // 0x9a0
	TArray<FNetDriverDefinition> NetDriverDefinitions; // 0xbd0
	TArray<FString> ServerActors; // 0xbe0
	TArray<FString> RuntimeServerActors; // 0xbf0
	float NetErrorLogInterval; // 0xc00
	char bStartedLoadMapMovie : 1; // 0xc04
	int NextWorldContextHandle; // 0xc20
};

struct USQSoundNodeRandomStart : USoundNode {
	float StartMin; // 0x40
	float StartMax; // 0x44
};

struct UAIPerceptionStimuliSourceComponent : UActorComponent {
	char bAutoRegisterAsSource : 1; // 0xd8
	TArray<UAISense*> RegisterAsSourceForSenses; // 0xe0
};

struct ABP_M4A1_M150_Foregrip_Tracer_Founders_C : ABP_M4A1_M150_Foregrip_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQMapIconWidget : UUserWidget {
	USQMapItemComponent* RefItem; // 0x230
	int MapZOrder; // 0x238
	USQToolTipBaseWidget* TooltipType; // 0x240
	USQMap* ParentMap; // 0x248
};

struct UBlueprintCore : UObject {
	UObject* SkeletonGeneratedClass; // 0x28
	UObject* GeneratedClass; // 0x30
	bool bLegacyNeedToPurgeSkelRefs; // 0x38
	FGuid BlueprintGuid; // 0x3c
};

struct ASQGameRuleSet : AActor {
	ASQRulesetState* RulesetStateClass; // 0x248
	ASQRulesetState* RulesetState; // 0x250
	bool bUseTickets; // 0x258
	int RoundTimeOverride; // 0x25c
	FString DisplayName; // 0x260
};

struct UMovieSceneBuiltInEasingFunction : UObject {
	EMovieSceneBuiltInEasing Type; // 0x30
};

struct UMovieSceneCameraCutTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UEditableGameplayTagQuery : UObject {
	FString UserDescription; // 0x28
	UEditableGameplayTagQueryExpression* RootExpression; // 0x48
	FGameplayTagQuery TagQueryExportText_Helper; // 0x50
};

struct UInterpFilter_Custom : UInterpFilter {
	FString Caption; // 0x28
};

struct UPluginCommandlet : UCommandlet {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct ULocalizedOverlays : UOverlays {
	UBasicOverlays* DefaultOverlays; // 0x28
	TMap<FString, UBasicOverlays*> LocaleToOverlaysMap; // 0x30
};

struct ABP_M4A1_M150_Foregrip_Tracer_C : ABP_M4A1_M150_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBP_M4M203_M68_UGL_Parent_StaticInfo_C : UBP_M4M203_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UPawnMovementComponent : UNavMovementComponent {
	APawn* PawnOwner; // 0x158
};

struct UAITask_RunEQS : UAITask {
	AAIController* OwnerController; // 0x68
};

struct UPrefabVariantAsset : UPrefabAsset {
	UPrefabAsset* Parent; // 0xd0
};

struct ALobbyBeaconState : AInfo {
	int MaxPlayers; // 0x248
	ALobbyBeaconPlayerState* LobbyBeaconPlayerStateClass; // 0x250
	bool bLobbyStarted; // 0x260
	float WaitForPlayersTimeRemaining; // 0x264
	FLobbyPlayerStateInfoArray Players; // 0x268
};

struct ABP_RPG7_Thermo_Proj2_C : ABP_RPG7_Tandem_Heat_Proj2_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x520
	USkeletalMeshComponent* SkeletalMesh; // 0x528
	UParticleSystem* BPEffectOnUnderMinFlightTime; // 0x530
	USoundBase* BPSoundonUnderMinFlightTime; // 0x538
};

struct USQFreeLookComponent : UActorComponent {
	APawn* OuterPawn; // 0xe0
	UCameraComponent* FreeLookCamera; // 0x100
	bool bCanFreelookWhileADS; // 0x108
	bool bFreelookCanRecenterWeapons; // 0x109
	FVector2D PitchLimits; // 0x10c
	FVector2D YawLimits; // 0x114
	FVector2D RotationSpeed; // 0x11c
	float ResetSpeed; // 0x124
	FSQRotator_NetQuantizeBytes ReplicatedFreeLookRot; // 0x148
	EFreeLookMode FreelookMode; // 0x154
	bool bReplicateFreeLookRotation; // 0x155
};

struct ASQLogisticsRuleSet : ASQGameRuleSet {
	FSQLogisticsSettings RuleSettings; // 0x270
};

struct URig : UObject {
	TArray<FTransformBase> TransformBases; // 0x30
	TArray<FNode> Nodes; // 0x40
};

struct UParticleModuleVelocityBase : UParticleModule {
	char bInWorldSpace : 1; // 0x30
	char bApplyOwnerScale : 1; // 0x30
};

struct APlayerState : AInfo {
	float Score; // 0x248
	FString PlayerName; // 0x250
	int PlayerId; // 0x270
	char Ping; // 0x274
	char bShouldUpdateReplicatedPing : 1; // 0x276
	char bIsSpectator : 1; // 0x276
	char bOnlySpectator : 1; // 0x276
	char bIsABot : 1; // 0x276
	char bIsInactive : 1; // 0x276
	char bFromPreviousLevel : 1; // 0x276
	int StartTime; // 0x278
	ULocalMessage* EngineMessageClass; // 0x280
	FString SavedNetworkAddress; // 0x290
	FUniqueNetIdRepl UniqueID; // 0x2a0
	APawn* PawnPrivate; // 0x2d0
	FString PlayerNamePrivate; // 0x350
};

struct UMovieSceneBindingOverrides : UObject {
	TArray<FMovieSceneBindingOverrideData> BindingData; // 0x28
};

struct UBP_Attachment_M4_FrontSight_Woodland_C : UBP_Attachment_M4_FrontSight_C {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UInterpTrackSound : UInterpTrackVectorBase {
	TArray<FSoundTrackKey> Sounds; // 0x90
	char bPlayOnReverse : 1; // 0xa0
	char bContinueSoundOnMatineeEnd : 1; // 0xa0
	char bSuppressSubtitles : 1; // 0xa0
	char bTreatAsDialogue : 1; // 0xa0
	char bAttach : 1; // 0xa0
};

struct USQGridData_BaseOption : UObject {
	FString DisplayName; // 0x28
	FString Description; // 0x38
	UTexture2D* Texture; // 0x48
	FLinearColor Tint; // 0x50
};

struct UMovieSceneMarginSection : UMovieSceneSection {
	FMovieSceneFloatChannel TopCurve; // 0xe0
	FMovieSceneFloatChannel LeftCurve; // 0x180
	FMovieSceneFloatChannel RightCurve; // 0x220
	FMovieSceneFloatChannel BottomCurve; // 0x2c0
};

struct UAbilityTask_PlayMontageAndWait : UAbilityTask {
	FScriptMulticastDelegate OnCompleted; // 0x80
	FScriptMulticastDelegate OnBlendOut; // 0x90
	FScriptMulticastDelegate OnInterrupted; // 0xa0
	FScriptMulticastDelegate OnCancelled; // 0xb0
	UAnimMontage* MontageToPlay; // 0xe8
	float Rate; // 0xf0
	FName StartSection; // 0xf4
	float AnimRootMotionTranslationScale; // 0xfc
	bool bStopWhenAbilityEnds; // 0x100
};

struct UStreamableRenderAsset : UObject {
	double ForceMipLevelsToBeResidentTimestamp; // 0x28
	int NumCinematicMipLevels; // 0x30
	int StreamingIndex; // 0x34
	int CachedCombinedLODBias; // 0x38
	char CachedNumResidentLODs; // 0x3c
	char bCachedReadyForStreaming : 1; // 0x3d
	char NeverStream : 1; // 0x3d
	char bGlobalForceMipLevelsToBeResident : 1; // 0x3d
	char bIsStreamable : 1; // 0x3d
	char bHasStreamingUpdatePending : 1; // 0x3d
	char bForceMiplevelsToBeResident : 1; // 0x3d
	char bIgnoreStreamingMipBias : 1; // 0x3d
	char bUseCinematicMipLevels : 1; // 0x3d
};

struct ABP_RPG7V2_Frag_C : ABP_RPG7V2_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UStaticMeshSimulationComponent : UActorComponent {
	bool Simulating; // 0xe0
	bool bNotifyCollisions; // 0xe1
	EObjectStateTypeEnum ObjectType; // 0xe2
	float Mass; // 0xe4
	ECollisionTypeEnum CollisionType; // 0xe8
	EImplicitTypeEnum ImplicitType; // 0xe9
	int MinLevelSetResolution; // 0xec
	int MaxLevelSetResolution; // 0xf0
	EInitialVelocityTypeEnum InitialVelocityType; // 0xf4
	FVector InitialLinearVelocity; // 0xf8
	FVector InitialAngularVelocity; // 0x104
	float DamageThreshold; // 0x110
	UChaosPhysicalMaterial* PhysicalMaterial; // 0x118
	AChaosSolverActor* ChaosSolverActor; // 0x120
	FScriptMulticastDelegate OnChaosPhysicsCollision; // 0x128
	TArray<UPrimitiveComponent*> SimulatedComponents; // 0x148
};

struct UTextureRenderTarget2D : UTextureRenderTarget {
	int SizeX; // 0xd8
	int SizeY; // 0xdc
	FLinearColor ClearColor; // 0xe0
	TextureAddress AddressX; // 0xf0
	TextureAddress AddressY; // 0xf1
	char bForceLinearGamma : 1; // 0xf2
	char bHDR : 1; // 0xf2
	char bGPUSharedFlag : 1; // 0xf2
	ETextureRenderTargetFormat RenderTargetFormat; // 0xf3
	char bAutoGenerateMips : 1; // 0xf4
	TextureFilter MipsSamplerFilter; // 0xf5
	TextureAddress MipsAddressU; // 0xf6
	TextureAddress MipsAddressV; // 0xf7
	EPixelFormat OverrideFormat; // 0xf8
};

struct UBlackboardKeyType_Object : UBlackboardKeyType {
	UObject* BaseClass; // 0x30
};

struct UPointLightComponent : ULocalLightComponent {
	char bUseInverseSquaredFalloff : 1; // 0x370
	float LightFalloffExponent; // 0x374
	float SourceRadius; // 0x378
	float SoftSourceRadius; // 0x37c
	float SourceLength; // 0x380
};

struct ULightMapVirtualTexture2D : UTexture2D {
	TArray<uint8> TypeToLayer; // 0x100
};

struct USQDamageType : UDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct USQGameEngine : UGameEngine {
	USQConfig* SquadConfig; // 0xe08
};

struct UInputActionDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputActionDelegateBinding> InputActionDelegateBindings; // 0x28
};

struct USocialToolkit : UObject {
	USocialUser* LocalUser; // 0x60
	TArray<USocialUser*> AllUsers; // 0x68
	ULocalPlayer* LocalPlayerOwner; // 0xc8
	USocialChatManager* SocialChatManager; // 0xd0
};

struct UARTrackedPose : UARTrackedGeometry {
	FGuid UniqueID; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct USQVehicleGasCan : USQVehicleComponent {
	float BaseDamage; // 0x588
	float MinimumDamage; // 0x58c
	float KillZoneRadius; // 0x590
	float DamageInnerRadius; // 0x594
	float DamageOuterRadius; // 0x598
	float DamageFalloff; // 0x59c
};

struct UMovieSceneGeometryCacheSection : UMovieSceneSection {
	FMovieSceneGeometryCacheParams Params; // 0xe0
};

struct UBTTask_BlueprintBase : UBTTaskNode {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	char bShowPropertyDetails : 1; // 0x98
};

struct ALobbyBeaconClient : AOnlineBeaconClient {
	ALobbyBeaconState* LobbyState; // 0x2c8
	ALobbyBeaconPlayerState* PlayerState; // 0x2d0
	ELobbyBeaconJoinState LobbyJoinServerState; // 0x2d9
};

struct USQPrimaryData : UPrimaryDataAsset {
	FName ID; // 0x30
	FDataTableRowHandle Data; // 0x38
	FString ModId; // 0x48
	FPrimaryAssetRules PackingRules; // 0x58
	char bLabelAssetsInMyDirectory : 1; // 0x68
};

struct UBP_M4M203_M150_UGL_Parent_StaticInfo_C : UBP_M4M203_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct USoundWaveProcedural : USoundWave {
	int CompressionQuality; // 0x110
	int StreamingPriority; // 0x114
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x118
	ESoundGroup SoundGroup; // 0x11a
	char bLooping : 1; // 0x11b
	char bStreaming : 1; // 0x11b
	char bSeekableStreaming : 1; // 0x11b
	char bMature : 1; // 0x11c
	char bManualWordWrap : 1; // 0x11c
	char bSingleLine : 1; // 0x11c
	char bIsAmbisonics : 1; // 0x11c
	TArray<float> FrequenciesToAnalyze; // 0x120
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x130
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x140
	FString SpokenText; // 0x160
	float SubtitlePriority; // 0x170
	float Volume; // 0x174
	float Pitch; // 0x178
	int NumChannels; // 0x17c
	int SampleRate; // 0x180
	TArray<FSubtitleCue> Subtitles; // 0x188
	UCurveTable* Curves; // 0x198
	UCurveTable* InternalCurves; // 0x1a0
};

struct ABP_AK74M_Tracer_Desert_C : ABP_AK74M_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4A1_Founder_C : ABP_GenericRifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMicroTransactionBase : UPlatformInterfaceBase {
	TArray<FPurchaseInfo> AvailableProducts; // 0x38
	FString LastError; // 0x48
	FString LastErrorSolution; // 0x58
};

struct ABP_GenericRocketLauncher_C : ABP_Weapon2_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UBlendSpaceBase : UAnimationAsset {
	bool bRotationBlendInMeshSpace; // 0x88
	float AnimLength; // 0x8c
	FInterpolationParameter InterpolationParam[0x3]; // 0x90
	float TargetWeightInterpolationSpeedPerSec; // 0xa8
	ENotifyTriggerMode NotifyTriggerMode; // 0xac
	TArray<FPerBoneInterpolation> PerBoneBlend; // 0xb0
	int SampleIndexWithMarkers; // 0xc0
	TArray<FBlendSample> SampleData; // 0xc8
	TArray<FEditorElement> GridSamples; // 0xd8
	FBlendParameter BlendParameters[0x3]; // 0xe8
};

struct UPhysicsHandleComponent : UActorComponent {
	UPrimitiveComponent* GrabbedComponent; // 0xd8
	char bSoftAngularConstraint : 1; // 0xe8
	char bSoftLinearConstraint : 1; // 0xe8
	char bInterpolateTarget : 1; // 0xe8
	float LinearDamping; // 0xec
	float LinearStiffness; // 0xf0
	float AngularDamping; // 0xf4
	float AngularStiffness; // 0xf8
	float InterpolationSpeed; // 0x160
};

struct AAROriginActor : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UParticleModuleVelocityCone : UParticleModuleVelocityBase {
	FRawDistributionFloat Angle; // 0x38
	FRawDistributionFloat Velocity; // 0x70
	FVector Direction; // 0xa8
};

struct UBTDecorator_ConeCheck : UBTDecorator {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector ConeDirection; // 0x98
	FBlackboardKeySelector Observed; // 0xc0
};

struct UControlPointMeshComponent : UStaticMeshComponent {
	int ForcedLodModel; // 0x430
	int PreviousLODLevel; // 0x434
	int MinLOD; // 0x438
	int SubDivisionStepSize; // 0x43c
	UStaticMesh* StaticMesh; // 0x440
	FColor WireframeColorOverride; // 0x448
	char bOverrideWireframeColor : 1; // 0x44c
	char bOverrideMinLOD : 1; // 0x44c
	char bOverrideNavigationExport : 1; // 0x44c
	char bForceNavigationObstacle : 1; // 0x44c
	char bDisallowMeshPaintPerInstance : 1; // 0x44c
	char bIgnoreInstanceForTextureStreaming : 1; // 0x44c
	char bOverrideLightMapRes : 1; // 0x44c
	char bCastDistanceFieldIndirectShadow : 1; // 0x44c
	char bOverrideDistanceFieldSelfShadowBias : 1; // 0x44d
	char bUseSubDivisions : 1; // 0x44d
	char bUseDefaultCollision : 1; // 0x44d
	char bReverseCulling : 1; // 0x44d
	int OverriddenLightMapRes; // 0x450
	float DistanceFieldIndirectShadowMinVisibility; // 0x454
	float DistanceFieldSelfShadowBias; // 0x458
	float StreamingDistanceMultiplier; // 0x45c
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x460
	TArray<FStreamingTextureBuildInfo> StreamingTextureData; // 0x470
	FLightmassPrimitiveSettings LightmassSettings; // 0x480
};

struct UAbilityTask_WaitGameplayEffectApplied_Target : UAbilityTask_WaitGameplayEffectApplied {
	FScriptMulticastDelegate OnApplied; // 0x1b8
};

struct ABP_M4M203_Rifle_C : ABP_M4A1_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct Um110_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_36FDDCA44952F901FCE3BDA066C27974; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_FC069B8C463AB2CB5B94C582D3432967; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_474E5D2C4415F326C524A583A116D6D2; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_77F7315042296431690793920DE9889C; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_B5C87E874575BD8A9FCCDDBD88109C56; // 0x468
	FAnimNode_Slot AnimGraphNode_Slot_A4B7138D41D663F9DAD6C8B3F26A3E2F; // 0x4b0
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_3E507276417096D02E5A27982E17835A; // 0x4f8
	FAnimNode_Slot AnimGraphNode_Slot_0FC4B1F8462AADA666FB1ABD5DBE91F8; // 0x510
};

struct ASQGrenade : ASQEquipableItem {
	ESQGrenadeState GrenadeState; // 0x480
	FSQGrenadeData GrenadeConfig; // 0x488
	USQGrenadeStaticInfo* GrenadeStaticInfo; // 0x4e8
	bool bCachedOverhandPinpull; // 0x4f0
	bool bCachedOverhandThrow; // 0x4f1
	bool bCachedUnderhandPinpull; // 0x4f2
	bool bCachedUnderhandThrow; // 0x4f3
	bool bCachedReloading; // 0x4f4
	UAnimMontage* WeaponOverhandPinpull1pMontage; // 0x4f8
	UAnimMontage* WeaponOverhandPinpull3pMontage; // 0x500
	UAnimMontage* OverhandPinpull1pMontage; // 0x508
	UAnimMontage* OverhandPinpull3pMontage; // 0x510
	UAnimMontage* WeaponOverhandThrow1pMontage; // 0x518
	UAnimMontage* WeaponOverhandThrow3pMontage; // 0x520
	UAnimMontage* OverhandThrow1pMontage; // 0x528
	UAnimMontage* OverhandThrow3pMontage; // 0x530
	UAnimMontage* WeaponUnderhandPinpull1pMontage; // 0x538
	UAnimMontage* WeaponUnderhandPinpull3pMontage; // 0x540
	UAnimMontage* UnderhandPinpull1pMontage; // 0x548
	UAnimMontage* UnderhandPinpull3pMontage; // 0x550
	UAnimMontage* WeaponUnderhandThrow1pMontage; // 0x558
	UAnimMontage* WeaponUnderhandThrow3pMontage; // 0x560
	UAnimMontage* UnderhandThrow1pMontage; // 0x568
	UAnimMontage* UnderhandThrow3pMontage; // 0x570
};

struct UAITask_LockLogic : UAITask {
	AAIController* OwnerController; // 0x68
};

struct UEnvQueryTest_Dot : UEnvQueryTest {
	FEnvDirection LineA; // 0x1c0
	FEnvDirection LineB; // 0x1e0
	EEnvTestDot TestMode; // 0x200
	bool bAbsoluteValue; // 0x201
};

struct UMovieSceneCameraCutSection : UMovieSceneSection {
	FGuid CameraGuid; // 0xe0
	FMovieSceneObjectBindingID CameraBindingID; // 0xf0
};

struct USoundClass : UObject {
	FSoundClassProperties properties; // 0x28
	TArray<USoundClass*> ChildClasses; // 0x58
	TArray<FPassiveSoundMixModifier> PassiveSoundMixModifiers; // 0x68
	USoundClass* ParentClass; // 0x78
};

struct UAISenseConfig_Damage : UAISenseConfig {
	UAISense_Damage* Implementation; // 0x48
};

struct UFieldSystemMetaData : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UMediaTexture : UTexture {
	TextureAddress AddressX; // 0xd0
	TextureAddress AddressY; // 0xd1
	bool AutoClear; // 0xd2
	FLinearColor ClearColor; // 0xd4
	UMediaPlayer* MediaPlayer; // 0xe8
};

struct UMovieSceneMaterialParameterCollectionTrack : UMovieSceneMaterialTrack {
	UMaterialParameterCollection* MPC; // 0x68
};

struct UBTTask_MoveTo : UBTTask_BlackboardBase {
	float AcceptableRadius; // 0x98
	UNavigationQueryFilter* FilterClass; // 0xa0
	float ObservedBlackboardValueTolerance; // 0xa8
	char bObserveBlackboardValue : 1; // 0xac
	char bAllowStrafe : 1; // 0xac
	char bAllowPartialPath : 1; // 0xac
	char bTrackMovingGoal : 1; // 0xac
	char bProjectGoalLocation : 1; // 0xac
	char bReachTestIncludesAgentRadius : 1; // 0xac
	char bReachTestIncludesGoalRadius : 1; // 0xac
	char bStopOnOverlap : 1; // 0xac
	char bStopOnOverlapNeedsUpdate : 1; // 0xad
};

struct ABP_AAS_AttackMarker_C : ASQMapMarker {
	USceneComponent* DefaultSceneRoot; // 0x280
};

struct UInputVectorAxisDelegateBinding : UInputAxisKeyDelegateBinding {
	TArray<FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings; // 0x28
};

struct ABP_M4M203_M150_UGL_Woodland_Parent_C : ABP_Weapon2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UGameplayTask : UObject {
	FName InstanceName; // 0x30
	ETaskResourceOverlapPolicy ResourceOverlapPolicy; // 0x3a
	UGameplayTask* ChildTask; // 0x60
};

struct USQCompassMK2 : USQCompass {
	UCanvasPanel* MainP; // 0x250
	UTextBlock* CompassBearingText; // 0x258
	UImage* LeftArrow; // 0x260
	UImage* RightArrow; // 0x268
	UMaterialInstanceDynamic* CompassMID; // 0x270
	FName BearingMatParamName; // 0x278
	ASQPlayerState* InitialPlayerState; // 0x280
	float MarkerYPositionOffset; // 0x288
	TArray<USQCompassPlayer*> TrackedSquadMatesWidgets; // 0x290
	UCurveFloat* DistanceCurve; // 0x2a0
	bool bAlwaysShowSquadLeader; // 0x2a8
	TArray<USQCompassMarker*> TrackedMarkerWidgets; // 0x2b0
	TArray<ESQMapMarkerType> MarkerTypesToTrack; // 0x2c0
	float CompassEdgeFadePercentage; // 0x2d0
	float CompassEdgeMinFade; // 0x2d4
	USQCompassPlayer* CompassPlayerType; // 0x2d8
	USQCompassMarker* CompassMarkerType; // 0x2e0
};

struct UDragDropOperation : UObject {
	FString Tag; // 0x28
	UObject* Payload; // 0x38
	UWidget* DefaultDragVisual; // 0x40
	EDragPivot Pivot; // 0x48
	FVector2D Offset; // 0x4c
	FScriptMulticastDelegate OnDrop; // 0x58
	FScriptMulticastDelegate OnDragCancelled; // 0x68
	FScriptMulticastDelegate OnDragged; // 0x78
};

struct USoundGroups : UObject {
	TArray<FSoundGroup> SoundGroupProfiles; // 0x28
};

struct UUMGSequencePlayer : UObject {
	UWidgetAnimation* Animation; // 0x3b8
};

struct ASQAction : AActor {
	USQActionSettings* Setting; // 0x248
	FSQActionParameters Parameters; // 0x250
	int Team; // 0x290
	TWeakObjectPtr<AController> DamageInstigatorController; // 0x294
};

struct USQMapMarkerBase : UUserWidget {
	UImage* MarkerImage; // 0x230
	UCanvasPanelSlot* CanvasPanelSlot; // 0x238
	float AnimationEpsilon; // 0x240
	USQColorsDataAsset* ColorsDataAsset; // 0x248
	FSQMapMarkerVisualData MarkerData; // 0x250
	bool bHasFaded; // 0x318
};

struct UChaosPhysicalMaterial : UObject {
	float Friction; // 0x28
	float Restitution; // 0x2c
	float SleepingLinearVelocityThreshold; // 0x30
	float SleepingAngularVelocityThreshold; // 0x34
};

struct USQStatefulButton : USQUserWidget {
	TArray<UTexture2D*> StateImages; // 0x230
	FLinearColor NormalTint; // 0x240
	FLinearColor HoveredTint; // 0x250
	UImage* CurrentImage; // 0x260
	bool bIsHovering; // 0x268
	float HoveringColorBlend; // 0x26c
	float HoverColorBlendSpeed; // 0x270
};

struct UMaterialExpressionFmod : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UAbilityTask_WaitGameplayTagAdded : UAbilityTask_WaitGameplayTag {
	FScriptMulticastDelegate Added; // 0xa8
};

struct UPlayFabRuntimeSettings : UObject {
	FString ProductionEnvironmentURL; // 0x28
	FString TitleId; // 0x38
	FString DeveloperSecretKey; // 0x48
};

struct USQRadialDeployableButton : USQRadialIconButton {
	FLinearColor TextUnAvailableColor; // 0x410
	FLinearColor TextAvailableColor; // 0x420
	FLinearColor RimAvailableColor; // 0x430
	FLinearColor RimUnAvailableColor; // 0x440
	FLinearColor IconUnavailableColor; // 0x450
	FLinearColor InnerHoverUnavailableColor; // 0x460
	FSQAvailabilityState_Deployable RelatedDeployableState; // 0x470
};

struct USQForceMovementComponentSettings : UDataAsset {
	float Mass; // 0x30
	float MaxSpeed; // 0x34
	FRotator MaxRotationalVelocity; // 0x38
	float Length; // 0x44
	float Width; // 0x48
	float Height; // 0x4c
	UCurveFloat* AirDensityByHeight; // 0x50
	float DragCoefficient; // 0x58
	float Gravity; // 0x5c
	bool bApplyGravity; // 0x60
	bool bApplyDrag; // 0x61
	FName DragApplicationSocket; // 0x64
	FVector DragTorqueMultiplier; // 0x6c
	bool bApplyCentripedalForce; // 0x78
	bool bUsePhysX; // 0x79
	bool bDebugForces; // 0x7a
	float AngularDamping; // 0x7c
	float LinearDamping; // 0x80
};

struct UParticleModuleMeshRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionVector StartRotationRate; // 0x30
};

struct UEnvQueryGenerator_Donut : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue InnerRadius; // 0x80
	FAIDataProviderFloatValue OuterRadius; // 0xb0
	FAIDataProviderIntValue NumberOfRings; // 0xe0
	FAIDataProviderIntValue PointsPerRing; // 0x110
	FEnvDirection ArcDirection; // 0x140
	FAIDataProviderFloatValue ArcAngle; // 0x160
	bool bUseSpiralPattern; // 0x190
	UEnvQueryContext* Center; // 0x198
	char bDefineArc : 1; // 0x1a0
};

struct ADatasmithSceneActor : AActor {
	UDatasmithScene* Scene; // 0x248
	TMap<FName, AActor*> RelatedActors; // 0x250
};

struct USQUpdateSessionsCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
	UObject* WorldContextObject; // 0xf0
};

struct USQRestriction_PlayerInRange : USQRestriction_Boolean {
	float Range; // 0x58
	TSet<ESQTeamRelationShip> TargetTeams; // 0x60
	int TargetCount; // 0xb0
};

struct UComboButtonWidgetStyle : USlateWidgetStyleContainerBase {
	FComboButtonStyle ComboButtonStyle; // 0x30
};

struct UUniformInteger : UFieldNodeInt {
	int Magnitude; // 0xd8
};

struct USQMenuSoundsWidgetStyle : USlateWidgetStyleContainerBase {
	FSQMenuSoundsStyle SoundsStyle; // 0x30
};

struct UReplicationGraphNode_DynamicSpatialFrequency : UReplicationGraphNode_ActorList {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct UBP_AKS74_StaticInfo_C : UBP_AK74_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UControlChannel : UChannel {
	UNetConnection* Connection; // 0x28
};

struct UBorder : UContentWidget {
	EHorizontalAlignment HorizontalAlignment; // 0x120
	EVerticalAlignment VerticalAlignment; // 0x121
	char bShowEffectWhenDisabled : 1; // 0x122
	FLinearColor ContentColorAndOpacity; // 0x124
	DelegateProperty ContentColorAndOpacityDelegate; // 0x134
	FMargin Padding; // 0x144
	FSlateBrush Background; // 0x158
	DelegateProperty BackgroundDelegate; // 0x1e0
	FLinearColor BrushColor; // 0x1f0
	DelegateProperty BrushColorDelegate; // 0x200
	FVector2D DesiredSizeScale; // 0x210
	bool bFlipForRightToLeftFlowDirection; // 0x218
	DelegateProperty OnMouseButtonDownEvent; // 0x21c
	DelegateProperty OnMouseButtonUpEvent; // 0x22c
	DelegateProperty OnMouseMoveEvent; // 0x23c
	DelegateProperty OnMouseDoubleClickEvent; // 0x24c
};

struct ABP_M4M203_Rifle_M150_Woodland_C : ABP_M4M203_Rifle_M150_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	FVector LScale; // 0x7b8
};

struct USQCoreStateRolesSquadListComponent : USQCoreStateSquadListComponent {
	USQCoreStateSquadItemWidget* SquadWidgetClass; // 0x340
	USQCoreStateSquadMemberWidget* PlayerWidgetClass; // 0x348
	UPanelWidget* SquadRoot; // 0x350
	UPanelWidget* UnassignedRoot; // 0x358
	UPanelWidget* CommanderRoot; // 0x360
	EListLayout ListLayout; // 0x368
	EListLayout UnassignedLayout; // 0x369
	TMap<int, USQCoreStateSquadItemWidget*> ActiveSquadWidgets; // 0x370
};

struct ALobbyBeaconPlayerState : AInfo {
	FText DisplayName; // 0x248
	FUniqueNetIdRepl UniqueID; // 0x260
	FUniqueNetIdRepl PartyOwnerUniqueId; // 0x288
	bool bInLobby; // 0x2b0
	AOnlineBeaconClient* ClientActor; // 0x2b8
};

struct UEnvQueryGenerator_BlueprintBase : UEnvQueryGenerator {
	FText GeneratorsActionDescription; // 0x50
	UEnvQueryContext* Context; // 0x68
	UEnvQueryItemType* GeneratedItemType; // 0x70
};

struct USQSoundNodeFixedDistanceSwitch : USoundNode {
	TArray<float> TransitionDistancesInMeters; // 0x40
	TArray<float> InputVolumes; // 0x50
	float TestDistance; // 0x60
};

struct ASQFlagScoringRuleset : ASQGameRuleSet {
	float RateOfScoreTick; // 0x270
	FSQFlagScoreInfo TeamOneFlagScores; // 0x274
	FSQFlagScoreInfo TeamTwoFlagScores; // 0x290
	TArray<USQCaptureZoneComponent*> CaptureZones; // 0x2b0
};

struct ABP_L85A2AG36_UGL_DarkEarth_HE_C : ABP_L85A2AG36_UGL_DarkEarth_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionArctangentFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionConstant4Vector : UMaterialExpression {
	FLinearColor Constant; // 0x40
};

struct UWheeledVehicleMovementComponentTank : UWheeledVehicleMovementComponent {
	FVehicleTankEngineData EngineSetup; // 0x2d8
	FVehicleTankTransmissionData TransmissionSetup; // 0x378
	float RawBothTracksThrottleInput; // 0x3b8
	float RawLeftTrackThrottleInput; // 0x3bc
	float RawRightTrackThrottleInput; // 0x3c0
	float BothTracksThrottleInput; // 0x3c4
	float LeftTrackThrottleInput; // 0x3c8
	float RightTrackThrottleInput; // 0x3cc
	TArray<float> WheelSpeeds; // 0x3d0
	TArray<float> WheelAngles; // 0x3e0
	float LeftTrackSpeed; // 0x3f0
	float RightTrackSpeed; // 0x3f4
};

struct USQSupporterPatchData : USQSteamItem {
	FSQPatchItem PatchData; // 0x40
};

struct UPropertyValueTransform : UPropertyValue {
	TArray<UProperty*> properties; // 0x80
	TArray<int> PropertyIndices; // 0x90
	TArray<FCapturedPropSegment> CapturedPropSegments; // 0xa0
	FString FullDisplayString; // 0xb0
	FName PropertySetterName; // 0xc0
	TMap<FString, FString> PropertySetterParameterDefaults; // 0xc8
	bool bHasRecordedData; // 0x118
	UObject* LeafPropertyClass; // 0x120
	TArray<char> ValueBytes; // 0x128
	EPropertyValueCategory PropCategory; // 0x138
};

struct UInheritableComponentHandler : UObject {
	TArray<FComponentOverrideRecord> Records; // 0x28
	TArray<UActorComponent*> UnnecessaryComponents; // 0x38
};

struct UMaterialExpressionSceneColor : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput OffsetFraction; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct UParticleModuleAccelerationDragScaleOverLife : UParticleModuleAccelerationBase {
	UDistributionFloat* DragScale; // 0x38
	FRawDistributionFloat DragScaleRaw; // 0x40
};

struct UMediaPlaylist : UObject {
	TArray<UMediaSource*> Items; // 0x28
};

struct UEditableTextWidgetStyle : USlateWidgetStyleContainerBase {
	FEditableTextStyle EditableTextStyle; // 0x30
};

struct UMaterialExpressionDecalMipmapLevel : UMaterialExpression {
	FExpressionInput TextureSize; // 0x40
	float ConstWidth; // 0x54
	float ConstHeight; // 0x58
};

struct UBP_L85A2_ElcanLDS_StaticInfo_C : UBP_L85A2_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UDistributionVectorParameterBase : UDistributionVectorConstant {
	FName ParameterName; // 0x50
	FVector MinInput; // 0x58
	FVector MaxInput; // 0x64
	FVector MinOutput; // 0x70
	FVector MaxOutput; // 0x7c
	DistributionParamMode ParamModes[0x3]; // 0x88
};

struct USQSwitchTeamButton : USQBaseButton {
	ASQPlayerController* OwnerPlayerController; // 0x2e8
};

struct AAbilitySystemTestPawn : ADefaultPawn {
	UAbilitySystemComponent* AbilitySystemComponent; // 0x2e8
};

struct UAbilityTask : UGameplayTask {
	UGameplayAbility* Ability; // 0x68
	UAbilitySystemComponent* AbilitySystemComponent; // 0x70
};

struct UMaterialExpressionSceneTexelSize : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct ABP_L85A2AG36_ACOG_UGL_Parent_C : ABP_L85A2AG36_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UInterpTrackInstToggle : UInterpTrackInst {
	ETrackToggleAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
	char bSavedActiveState : 1; // 0x30
};

struct USQVehicleAmmoBox : USQVehicleComponent {
	FSQAmmoReductionConfig AmmoReduction; // 0x588
	int DamageToParentWhenBurning; // 0x5a8
	int SecondsBetweenDamageEvents; // 0x5ac
	float DamageToParentOnDetonation; // 0x5b0
	float MinBurningTimeBeforeDetonation; // 0x5b4
	float MaxBurningTimeBeforeDetonation; // 0x5b8
	float BaseTimeToDetonation; // 0x5bc
	bool bEnableDetonationByOverdamage; // 0x5c0
	float OverdamageForInstantDetonation; // 0x5c4
	UDamageType* DetonationDamageType; // 0x5c8
	UDamageType* BurningDamageType; // 0x5d0
	float TimePercentageLeftForDetonation; // 0x5d8
};

struct AKillZVolume : APhysicsVolume {
	float TerminalVelocity; // 0x280
	int Priority; // 0x284
	float FluidFriction; // 0x288
	char bWaterVolume : 1; // 0x28c
	char bPhysicsOnContact : 1; // 0x28c
};

struct ULevelSequenceDirector : UObject {
	ULevelSequencePlayer* Player; // 0x28
};

struct UAbilityTask_WaitInputPress : UAbilityTask {
	FScriptMulticastDelegate OnPress; // 0x80
};

struct UFindTurnBasedMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMaterialExpressionFrac : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionFunctionOutput : UMaterialExpression {
	FName OutputName; // 0x40
	FString Description; // 0x48
	int SortPriority; // 0x58
	FExpressionInput A; // 0x5c
	char bLastPreviewed : 1; // 0x70
	FGuid ID; // 0x74
};

struct USQInventoryGroupWidget : USQUserWidget {
	TArray<USQInventoryItemWidget*> ItemsArray; // 0x230
	UCanvasPanel* UnselectedGroupPanel; // 0x240
	UHorizontalBox* ItemWidgetsHorizontalBox; // 0x248
	UImage* UnselectedImage; // 0x250
	UTextBlock* GroupNumber; // 0x258
	UImage* GroupImage; // 0x260
	UTextBlock* ItemNameTextBlock; // 0x268
	FText GroupName; // 0x270
};

struct UUdpMessagingSettings : UObject {
	bool EnableTransport; // 0x28
	FString UnicastEndpoint; // 0x30
	FString MulticastEndpoint; // 0x40
	char MulticastTimeToLive; // 0x50
	TArray<FString> StaticEndpoints; // 0x58
	bool EnableTunnel; // 0x68
	FString TunnelUnicastEndpoint; // 0x70
	FString TunnelMulticastEndpoint; // 0x80
	TArray<FString> RemoteTunnelEndpoints; // 0x90
};

struct USoundNodeEnveloper : USoundNode {
	float LoopStart; // 0x40
	float LoopEnd; // 0x44
	float DurationAfterLoop; // 0x48
	int LoopCount; // 0x4c
	char bLoopIndefinitely : 1; // 0x50
	char bLoop : 1; // 0x50
	UDistributionFloatConstantCurve* VolumeInterpCurve; // 0x58
	UDistributionFloatConstantCurve* PitchInterpCurve; // 0x60
	FRuntimeFloatCurve VolumeCurve; // 0x68
	FRuntimeFloatCurve PitchCurve; // 0xf0
	float PitchMin; // 0x178
	float PitchMax; // 0x17c
	float VolumeMin; // 0x180
	float VolumeMax; // 0x184
};

struct ABP_M4M203_Rifle_M68_Founder_C : ABP_M4M203_Rifle_M68_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionTwoSidedSign : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UJoinSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UCameraModifier_CameraShake : UCameraModifier {
	TArray<UCameraShake*> ActiveShakes; // 0x48
	TMap<UCameraShake*, FPooledCameraShakes> ExpiredPooledShakesMap; // 0x58
	float SplitScreenShakeScale; // 0xa8
};

struct AGameplayAbilityTargetActor_Trace : AGameplayAbilityTargetActor {
	float MaxRange; // 0x358
	FCollisionProfileName TraceProfile; // 0x35c
	bool bTraceAffectsAimPitch; // 0x364
};

struct ANote : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UMaterialExpressionPrecomputedAOMask : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMovieSceneBoolSection : UMovieSceneSection {
	bool DefaultValue; // 0xe0
	FMovieSceneBoolChannel BoolCurve; // 0xe8
};

struct UInGameAdManager : UPlatformInterfaceBase {
	char bShouldPauseWhileAdOpen : 1; // 0x38
	TArray<DelegateProperty> ClickedBannerDelegates; // 0x40
	TArray<DelegateProperty> ClosedAdDelegates; // 0x50
};

struct UMovieSceneCameraShakeTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x58
};

struct USQTurretMovementComponent : USQVelocityRotatingMovementComponent {
	USceneComponent* UpdatedPitchComponent; // 0x2d8
	USceneComponent* UpdatedYawComponent; // 0x2e0
	float YawStabilizationSpeed; // 0x2e8
	float PitchStabilizationSpeed; // 0x2ec
	float MaxYawSpeed; // 0x2f0
	float MaxPitchSpeed; // 0x2f4
};

struct UNativeWidgetHost : UWidget {
	UPanelSlot* Slot; // 0x28
	DelegateProperty bIsEnabledDelegate; // 0x30
	FText ToolTipText; // 0x40
	DelegateProperty ToolTipTextDelegate; // 0x58
	UWidget* ToolTipWidget; // 0x68
	DelegateProperty ToolTipWidgetDelegate; // 0x70
	DelegateProperty VisibilityDelegate; // 0x80
	FWidgetTransform RenderTransform; // 0x90
	FVector2D RenderTransformPivot; // 0xac
	char bIsVariable : 1; // 0xb4
	char bCreatedByConstructionScript : 1; // 0xb4
	char bIsEnabled : 1; // 0xb4
	char bOverride_Cursor : 1; // 0xb4
	USlateAccessibleWidgetData* AccessibleWidgetData; // 0xb8
	char bIsVolatile : 1; // 0xc0
	EMouseCursor cursor; // 0xc1
	EWidgetClipping Clipping; // 0xc2
	ESlateVisibility Visibility; // 0xc3
	float RenderOpacity; // 0xc4
	UWidgetNavigation* Navigation; // 0xc8
	EFlowDirectionPreference FlowDirectionPreference; // 0xd0
	TArray<UPropertyBinding*> NativeBindings; // 0xf8
};

struct ASpotLight : ALight {
	USpotLightComponent* SpotLightComponent; // 0x258
};

struct UBTTask_MoveDirectlyToward : UBTTask_MoveTo {
	char bDisablePathUpdateOnGoalLocationChange : 1; // 0xb0
	char bProjectVectorGoalToNavigation : 1; // 0xb0
	char bUpdatedDeprecatedProperties : 1; // 0xb0
};

struct ULandscapeMeshProxyComponent : UStaticMeshComponent {
	FGuid LandscapeGuid; // 0x498
	TArray<FIntPoint> ProxyComponentBases; // 0x4a8
	uint8 ProxyLOD; // 0x4b8
};

struct USQVehicleSpawnerSettings : USQSettings {
	FName ID; // 0x30
	FDataTableRowHandle Data; // 0x38
	FString ModId; // 0x48
};

struct UBTDecorator_Blackboard : UBTDecorator_BlackboardBase {
	int IntValue; // 0x90
	float FloatValue; // 0x94
	FString StringValue; // 0x98
	FString CachedDescription; // 0xa8
	char OperationType; // 0xb8
	EBTBlackboardRestart NotifyObserver; // 0xb9
};

struct UHighlightsGetNumberAsync : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct UARCandidateObject : UDataAsset {
	TArray<char> CandidateObjectData; // 0x30
	FString FriendlyName; // 0x40
	FBox BoundingBox; // 0x50
};

struct UBP_MapWidgetMapMarker_C : USQMapWidgetMapMarker {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c8
	UImage* MarkerImage; // 0x2d0
	UScaleBox* ScaleBox_1; // 0x2d8
};

struct UAISenseEvent_Damage : UAISenseEvent {
	FAIDamageEvent Event; // 0x28
};

struct UEnvQueryGenerator_ProjectedPoints : UEnvQueryGenerator {
	FEnvTraceData ProjectionData; // 0x50
};

struct USQAdminStats : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct UVolumeTexture : UTexture {
	FGuid LightingGuid; // 0x48
	int LODBias; // 0x58
	TextureCompressionSettings CompressionSettings; // 0x5c
	TextureFilter Filter; // 0x5d
	ETextureMipLoadOptions MipLoadOptions; // 0x5e
	TextureGroup LODGroup; // 0x5f
	char SRGB : 1; // 0x60
	char bNoTiling : 1; // 0x60
	char VirtualTextureStreaming : 1; // 0x60
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x68
};

struct USoundNodeMixer : USoundNode {
	TArray<float> InputVolume; // 0x40
};

struct ASQMapBoundary : ASQBoundary {
	USQMapBoundarySettings* CommonSettings; // 0x308
	bool bOverrideDefaultKillTime; // 0x310
	float DefaultKillTime; // 0x314
	TMap<UObject*, float> ClassKillTimes; // 0x318
};

struct UBP_Marker_Widget_Objective_C : USQMapIconWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x250
	UImage* MarkerImage; // 0x258
};

struct ASQVehicleSeat : ASQPawn {
	float ADSSpeed; // 0x358
	float PitchLimit; // 0x35c
	float MinPitchLimit; // 0x360
	float YawLimit; // 0x364
	float MinYawLimit; // 0x368
	USQVehicleSeatComponent* ParentSeatComponent; // 0x370
	ESQListenerType ListenerType; // 0x378
	bool bIsCameraInitialized; // 0x379
	bool bShouldSendClientSideCameraUpdate; // 0x37a
	TArray<USQVehicleComponent*> VehicleComponents; // 0x380
	USQVehicleComponent* CachedVehicleEngine; // 0x390
	bool bTurnOut; // 0x398
	USQVehicleInventoryComponent* CachedVehicleInventory; // 0x3a0
	UCameraComponent* CachedCameraComponent; // 0x3a8
	float SeatHealth; // 0x3b0
	USQFreeLookComponent* FreeLookComponent; // 0x3b8
	USQMovementComponentManager* MovementComponentManager; // 0x3c0
};

struct UScaleBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct AStaticMeshActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x248
	bool bStaticMeshReplicateMovement; // 0x250
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x251
};

struct UNavigationPath : UObject {
	FScriptMulticastDelegate PathUpdatedNotifier; // 0x28
	TArray<FVector> PathPoints; // 0x38
	ENavigationOptionFlag RecalculateOnInvalidation; // 0x48
};

struct USQAvailability_Role : USQAvailability {
	USQRoleSettings* Setting; // 0x50
};

struct UBP_Attachment_SVDM_Front_Woodland_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMaterialExpressionArcsineFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct ABP_M4M203_Rifle_M68_Woodland_C : ABP_M4M203_Rifle_M68_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UDatasmithLightComponentTemplate : UDatasmithObjectTemplate {
	char bVisible : 1; // 0x30
	char CastShadows : 1; // 0x34
	char bUseTemperature : 1; // 0x34
	char bUseIESBrightness : 1; // 0x34
	float Intensity; // 0x38
	float Temperature; // 0x3c
	float IESBrightnessScale; // 0x40
	FLinearColor LightColor; // 0x44
	UMaterialInterface* LightFunctionMaterial; // 0x58
	UTextureLightProfile* IESTexture; // 0x60
};

struct UParticleModuleRotationRateBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct USubUVAnimation : UObject {
	UTexture2D* SubUVTexture; // 0x28
	int SubImages_Horizontal; // 0x30
	int SubImages_Vertical; // 0x34
	ESubUVBoundingVertexCount BoundingMode; // 0x38
	EOpacitySourceMode OpacitySourceMode; // 0x39
	float AlphaThreshold; // 0x3c
};

struct USQCaptureZoneInvasionComponent : USQCaptureZoneComponent {
	int TeamToLockFor; // 0x1d0
};

struct UMovieSceneStringTrack : UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct USQCoreStateSpawnPointsListComponent : USQCoreStateWidgetFactory {
	USQCoreStateSpawnPointsListWidget* WidgetClass; // 0x340
	UGridPanel* BaseRoot; // 0x348
	UGridPanel* HABRoot; // 0x350
	UGridPanel* RallyRoot; // 0x358
};

struct USQInteractableWidgetList : UUserWidget {
	FLinearColor ColorAndOpacity; // 0x110
	DelegateProperty ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	DelegateProperty ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x198
	UWidgetTree* WidgetTree; // 0x1a8
	int Priority; // 0x1b0
	char bSupportsKeyboardFocus : 1; // 0x1b4
	char bIsFocusable : 1; // 0x1b4
	char bStopAction : 1; // 0x1b4
	char bHasScriptImplementedTick : 1; // 0x1b4
	char bHasScriptImplementedPaint : 1; // 0x1b4
	char bCookedWidgetTree : 1; // 0x1b4
	EWidgetTickFrequency TickFrequency; // 0x1c0
	UInputComponent* InputComponent; // 0x1c8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1d0
};

struct USQVehicleCleanupDataAsset : UDataAsset {
	TArray<EObjectTypeQuery> ObjectCollisionTypes; // 0x30
	TArray<AActor*> ObjectClasses; // 0x40
	float ScanRadius; // 0x50
	float ScanFrequency; // 0x54
	float SelfDestructionTime; // 0x58
};

struct ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_HE_C : ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UTimeSynchronizableMediaSource : UBaseMediaSource {
	bool bUseTimeSynchronization; // 0x38
};

struct ABP_AK74MGP25_1P63_UGL_Desert_Parent_C : ABP_AK74MGP25_UGL_Desert_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4M203_Rifle_Woodland_C : ABP_M4M203_Rifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBTTask_FinishWithResult : UBTTaskNode {
	EBTNodeResult Result; // 0x70
};

struct UBoxReflectionCaptureComponent : UReflectionCaptureComponent {
	float BoxTransitionDistance; // 0x290
	UBoxComponent* PreviewInfluenceBox; // 0x298
	UBoxComponent* PreviewCaptureBox; // 0x2a0
};

struct AExponentialHeightFog : AInfo {
	UExponentialHeightFogComponent* Component; // 0x248
	char bEnabled : 1; // 0x250
};

struct USQApprovalEntryWidget : USQUserWidget {
	UTextBlock* TextBlockCPP; // 0x230
	UImage* IconImageCPP; // 0x238
	UTextBlock* DescriptionTextCPP; // 0x240
};

struct USQMapItemComponent : UActorComponent {
	FLinearColor Tint; // 0xd8
	FVector2D CustomWorldPosition; // 0xe8
	bool bUseCustomWorldPosition; // 0xf0
	bool bUseWorldRotation; // 0xf1
	float Rotation; // 0xf4
	FVector2D RotPivot; // 0xf8
	FVector2D Size; // 0x100
	FVector2D Offset; // 0x108
	ESQMapItemDrawMode DrawModeX; // 0x110
	ESQMapItemDrawMode DrawModeY; // 0x111
	bool bIsVisible; // 0x112
	int TeamIndex; // 0x114
	int SquadId; // 0x118
	ESQMapMarkerType MapMarkerType; // 0x11c
	ESQMapMarkerVisibleTo MapMarkerVisibleTo; // 0x11d
	ESQMapItemType Type; // 0x11e
	USQMapIconWidget* CustomMapWidget; // 0x120
};

struct ABrush : AActor {
	EBrushType BrushType; // 0x248
	FColor BrushColor; // 0x24c
	int PolyFlags; // 0x250
	char bColored : 1; // 0x254
	char bSolidWhenSelected : 1; // 0x254
	char bPlaceableFromClassBrowser : 1; // 0x254
	char bNotForClientOrServer : 1; // 0x254
	UModel* Brush; // 0x258
	UBrushComponent* BrushComponent; // 0x260
	char bInManipulation : 1; // 0x268
	TArray<FGeomSelection> SavedSelections; // 0x270
};

struct UMaterialExpressionDeriveNormalZ : UMaterialExpression {
	FExpressionInput InXY; // 0x40
};

struct UMaterialExpressionLinearInterpolate : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Alpha; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstAlpha; // 0x84
};

struct USkeletalMesh : UObject {
	USkeleton* Skeleton; // 0x48
	FBoxSphereBounds ImportedBounds; // 0x50
	FBoxSphereBounds ExtendedBounds; // 0x6c
	FVector PositiveBoundsExtension; // 0x88
	FVector NegativeBoundsExtension; // 0x94
	TArray<FSkeletalMaterial> Materials; // 0xa0
	TArray<FBoneMirrorInfo> SkelMirrorTable; // 0xb0
	TArray<FSkeletalMeshLODInfo> LODInfo; // 0xc0
	FPerPlatformInt MinLOD; // 0x120
	FPerPlatformBool DisableBelowMinLodStripping; // 0x124
	EAxis SkelMirrorAxis; // 0x125
	EAxis SkelMirrorFlipAxis; // 0x126
	char bUseFullPrecisionUVs : 1; // 0x127
	char bUseHighPrecisionTangentBasis : 1; // 0x127
	char bHasBeenSimplified : 1; // 0x127
	char bHasVertexColors : 1; // 0x127
	char bEnablePerPolyCollision : 1; // 0x127
	UBodySetup* BodySetup; // 0x128
	UPhysicsAsset* PhysicsAsset; // 0x130
	UPhysicsAsset* ShadowPhysicsAsset; // 0x138
	TArray<UNodeMappingContainer*> NodeMappingData; // 0x140
	TArray<UMorphTarget*> MorphTargets; // 0x150
	UAnimInstance* PostProcessAnimBlueprint; // 0x2d8
	TArray<UClothingAssetBase*> MeshClothingAssets; // 0x2e0
	FSkeletalMeshSamplingInfo SamplingInfo; // 0x2f0
	TArray<UAssetUserData*> AssetUserData; // 0x320
	TArray<USkeletalMeshSocket*> Sockets; // 0x330
	TArray<FSkinWeightProfileInfo> SkinWeightProfiles; // 0x350
};

struct ANavigationData : AActor {
	UPrimitiveComponent* RenderingComp; // 0x250
	FNavDataConfig NavDataConfig; // 0x258
	char bEnableDrawing : 1; // 0x2c0
	char bForceRebuildOnLoad : 1; // 0x2c0
	char bCanBeMainNavData : 1; // 0x2c0
	char bCanSpawnOnRebuild : 1; // 0x2c0
	char bRebuildAtRuntime : 1; // 0x2c0
	ERuntimeGenerationType RuntimeGeneration; // 0x2c4
	float ObservedPathsTickInterval; // 0x2c8
	uint32 DataVersion; // 0x2cc
	TArray<FSupportedAreaData> SupportedAreas; // 0x3a0
};

struct USQVehicleResourceWeaponInventoryComponent : USQVehicleInventoryComponent {
	FScriptMulticastDelegate OnResourcesChangedEvent; // 0x2f0
	bool bSpawnWithMaxResources; // 0x300
	int CurrentConstructionAmount; // 0x328
	int CurrentAmmoAmount; // 0x32c
	int TotalSharedResourceAmount; // 0x330
	TArray<ASQVehicleResource*> ResourceClasses; // 0x338
	TArray<ASQVehicleResource*> Resources; // 0x348
};

struct ASQWaterVolume : APhysicsVolume {
	float WaterForce; // 0x290
	TArray<TWeakObjectPtr<ASQSoldier>> SoldiersInVolume; // 0x298
};

struct UEnvQueryTest_Random : UEnvQueryTest {
	int TestOrder; // 0x30
	EEnvTestPurpose TestPurpose; // 0x34
	FString TestComment; // 0x38
	EEnvTestFilterOperator MultipleContextFilterOp; // 0x48
	EEnvTestScoreOperator MultipleContextScoreOp; // 0x49
	EEnvTestFilterType FilterType; // 0x4a
	FAIDataProviderBoolValue BoolValue; // 0x50
	FAIDataProviderFloatValue FloatValueMin; // 0x80
	FAIDataProviderFloatValue FloatValueMax; // 0xb0
	EEnvTestScoreEquation ScoringEquation; // 0xe1
	EEnvQueryTestClamping ClampMinType; // 0xe2
	EEnvQueryTestClamping ClampMaxType; // 0xe3
	EEQSNormalizationType NormalizationType; // 0xe4
	FAIDataProviderFloatValue ScoreClampMin; // 0xe8
	FAIDataProviderFloatValue ScoreClampMax; // 0x118
	FAIDataProviderFloatValue ScoringFactor; // 0x148
	FAIDataProviderFloatValue ReferenceValue; // 0x178
	bool bDefineReferenceValue; // 0x1a8
	char bWorkOnFloatValues : 1; // 0x1b8
};

struct UGameplayAbility : UObject {
	FGameplayTagContainer AbilityTags; // 0xa8
	bool bReplicateInputDirectly; // 0xc8
	bool RemoteInstanceEnded; // 0xc9
	EGameplayAbilityReplicationPolicy ReplicationPolicy; // 0xce
	EGameplayAbilityInstancingPolicy InstancingPolicy; // 0xcf
	bool bServerRespectsRemoteAbilityCancellation; // 0xd0
	bool bRetriggerInstancedAbility; // 0xd1
	FGameplayAbilityActivationInfo CurrentActivationInfo; // 0xd8
	FGameplayEventData CurrentEventData; // 0xf8
	EGameplayAbilityNetExecutionPolicy NetExecutionPolicy; // 0x1a8
	UGameplayEffect* CostGameplayEffectClass; // 0x1b0
	TArray<FAbilityTriggerData> AbilityTriggers; // 0x1b8
	UGameplayEffect* CooldownGameplayEffectClass; // 0x1c8
	FGameplayTagQuery CancelAbilitiesMatchingTagQuery; // 0x1d0
	FGameplayTagContainer CancelAbilitiesWithTag; // 0x218
	FGameplayTagContainer BlockAbilitiesWithTag; // 0x238
	FGameplayTagContainer ActivationOwnedTags; // 0x258
	FGameplayTagContainer ActivationRequiredTags; // 0x278
	FGameplayTagContainer ActivationBlockedTags; // 0x298
	FGameplayTagContainer SourceRequiredTags; // 0x2b8
	FGameplayTagContainer SourceBlockedTags; // 0x2d8
	FGameplayTagContainer TargetRequiredTags; // 0x2f8
	FGameplayTagContainer TargetBlockedTags; // 0x318
	TArray<UGameplayTask*> ActiveTasks; // 0x358
	UAnimMontage* CurrentMontage; // 0x378
	bool bIsActive; // 0x3e0
	bool bIsCancelable; // 0x3e1
	bool bIsBlockingOtherAbilities; // 0x3e2
	bool bMarkPendingKillOnAbilityEnd; // 0x3f8
};

struct UAISenseConfig_Hearing : UAISenseConfig {
	UAISense_Hearing* Implementation; // 0x48
	float HearingRange; // 0x50
	float LoSHearingRange; // 0x54
	char bUseLoSHearing : 1; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
};

struct AARSharedWorldPlayerController : APlayerController {
	UPlayer* Player; // 0x2c0
	APawn* AcknowledgedPawn; // 0x2c8
	UInterpTrackInstDirector* ControllingDirTrackInst; // 0x2d0
	AHUD* MyHUD; // 0x2d8
	APlayerCameraManager* PlayerCameraManager; // 0x2e0
	APlayerCameraManager* PlayerCameraManagerClass; // 0x2e8
	bool bAutoManageActiveCameraTarget; // 0x2f0
	FRotator TargetViewRotation; // 0x2f4
	float SmoothTargetViewRotationSpeed; // 0x30c
	TArray<AActor*> HiddenActors; // 0x318
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x328
	float LastSpectatorStateSynchTime; // 0x33c
	FVector LastSpectatorSyncLocation; // 0x340
	FRotator LastSpectatorSyncRotation; // 0x34c
	int ClientCap; // 0x358
	UCheatManager* CheatManager; // 0x360
	UCheatManager* CheatClass; // 0x368
	UPlayerInput* PlayerInput; // 0x370
	TArray<FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x378
	char bPlayerIsWaiting : 1; // 0x3f8
	char NetPlayerIndex; // 0x3fc
	UNetConnection* PendingSwapConnection; // 0x438
	UNetConnection* NetConnection; // 0x440
	float InputYawScale; // 0x454
	float InputPitchScale; // 0x458
	float InputRollScale; // 0x45c
	char bShowMouseCursor : 1; // 0x460
	char bEnableClickEvents : 1; // 0x460
	char bEnableTouchEvents : 1; // 0x460
	char bEnableMouseOverEvents : 1; // 0x460
	char bEnableTouchOverEvents : 1; // 0x460
	char bForceFeedbackEnabled : 1; // 0x460
	float ForceFeedbackScale; // 0x464
	TArray<FKey> ClickEventKeys; // 0x468
	EMouseCursor DefaultMouseCursor; // 0x478
	EMouseCursor CurrentMouseCursor; // 0x479
	ECollisionChannel DefaultClickTraceChannel; // 0x47a
	ECollisionChannel CurrentClickTraceChannel; // 0x47b
	float HitResultTraceDistance; // 0x47c
	uint16 SeamlessTravelCount; // 0x480
	uint16 LastCompletedSeamlessTravelCount; // 0x482
	UInputComponent* InactiveStateInputComponent; // 0x4f8
	char bShouldPerformFullTickWhenPaused : 1; // 0x500
	UTouchInterface* CurrentTouchInterface; // 0x518
	ASpectatorPawn* SpectatorPawn; // 0x570
	bool bIsLocalPlayerController; // 0x57c
	FVector SpawnLocation; // 0x580
};

struct UFoliageType_InstancedStaticMesh : UFoliageType {
	UStaticMesh* Mesh; // 0x340
	TArray<UMaterialInterface*> OverrideMaterials; // 0x348
	UFoliageInstancedStaticMeshComponent* ComponentClass; // 0x358
};

struct AGameplayAbilityTargetActor : AActor {
	bool ShouldProduceTargetDataOnServer; // 0x248
	FGameplayAbilityTargetingLocationInfo StartLocation; // 0x250
	APlayerController* MasterPC; // 0x2f0
	UGameplayAbility* OwningAbility; // 0x2f8
	bool bDestroyOnConfirmation; // 0x300
	AActor* SourceActor; // 0x308
	FWorldReticleParameters ReticleParams; // 0x310
	AGameplayAbilityWorldReticle* ReticleClass; // 0x320
	FGameplayTargetDataFilterHandle Filter; // 0x328
	bool bDebug; // 0x338
	UAbilitySystemComponent* GenericDelegateBoundASC; // 0x350
};

struct UDemoPendingNetGame : UPendingNetGame {
	UNetDriver* NetDriver; // 0x30
	UDemoNetDriver* DemoNetDriver; // 0x38
};

struct UBP_SQVehicleSettings_C : USQVehicleSettings {
	ESQVehicle VehicleType; // 0x58
	TSet<ESQVehicleTag> VehicleTags; // 0x60
	TArray<FSQVehicleVersion> VehicleVersions; // 0xb0
	ESQVehicleSpawnerSize SpawnerSize; // 0xc0
};

struct UBP_L85A2AG36_ACOG_StaticInfo_C : UBP_L85A2AG36_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UTextLayoutWidget : UWidget {
	FShapedTextOptions ShapedTextOptions; // 0x108
	ETextJustify Justification; // 0x10b
	ETextWrappingPolicy WrappingPolicy; // 0x10c
	char AutoWrapText : 1; // 0x10d
	float WrapTextAt; // 0x110
	FMargin Margin; // 0x114
	float LineHeightPercentage; // 0x124
};

struct ABP_Projectile_Melee_C : ABP_Projectile_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x4a0
};

struct UMaterialExpressionViewProperty : UMaterialExpression {
	EMaterialExposedViewProperty Property; // 0x40
};

struct UHierarchicalLODSetup : UObject {
	TArray<FHierarchicalSimplification> HierarchicalLODSetup; // 0x28
	UMaterialInterface* OverrideBaseMaterial; // 0x38
};

struct UMaterialExpressionClamp : UMaterialExpression {
	FExpressionInput Input; // 0x40
	FExpressionInput Min; // 0x54
	FExpressionInput Max; // 0x68
	EClampMode ClampMode; // 0x7c
	float MinDefault; // 0x80
	float MaxDefault; // 0x84
};

struct USocialManager : UObject {
	TArray<USocialToolkit*> SocialToolkits; // 0x48
	USocialDebugTools* SocialDebugTools; // 0x58
	bool bLeavePartyOnDisconnect; // 0x62
};

struct UBP_Melee_C : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct UAudioComponent : USceneComponent {
	USoundBase* Sound; // 0x218
	TArray<FAudioComponentParam> InstanceParameters; // 0x220
	USoundClass* SoundClassOverride; // 0x230
	char bAutoDestroy : 1; // 0x238
	char bStopWhenOwnerDestroyed : 1; // 0x238
	char bShouldRemainActiveIfDropped : 1; // 0x238
	char bAllowSpatialization : 1; // 0x238
	char bOverrideAttenuation : 1; // 0x238
	char bOverrideSubtitlePriority : 1; // 0x238
	char bIsUISound : 1; // 0x238
	char bEnableLowPassFilter : 1; // 0x238
	char bOverridePriority : 1; // 0x239
	char bSuppressSubtitles : 1; // 0x239
	char bAutoManageAttachment : 1; // 0x23a
	FName AudioComponentUserID; // 0x240
	char bIsFadingOut : 1; // 0x248
	float StartedPlayingTime; // 0x24c
	float PitchModulationMin; // 0x250
	float PitchModulationMax; // 0x254
	float VolumeModulationMin; // 0x258
	float VolumeModulationMax; // 0x25c
	float VolumeMultiplier; // 0x260
	int EnvelopeFollowerAttackTime; // 0x264
	int EnvelopeFollowerReleaseTime; // 0x268
	float Priority; // 0x26c
	float SubtitlePriority; // 0x270
	float PitchMultiplier; // 0x274
	float LowPassFilterFrequency; // 0x278
	USoundAttenuation* AttenuationSettings; // 0x280
	FSoundAttenuationSettings AttenuationOverrides; // 0x288
	USoundConcurrency* ConcurrencySettings; // 0x570
	TSet<USoundConcurrency*> ConcurrencySet; // 0x578
	EAttachmentRule AutoAttachLocationRule; // 0x5cc
	EAttachmentRule AutoAttachRotationRule; // 0x5cd
	EAttachmentRule AutoAttachScaleRule; // 0x5ce
	FScriptMulticastDelegate OnAudioFinished; // 0x5d0
	FScriptMulticastDelegate OnAudioPlaybackPercent; // 0x5f8
	FScriptMulticastDelegate OnAudioSingleEnvelopeValue; // 0x620
	FScriptMulticastDelegate OnAudioMultiEnvelopeValue; // 0x648
	FSoundModulation Modulation; // 0x670
	DelegateProperty OnQueueSubtitles; // 0x680
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x690
	FName AutoAttachSocketName; // 0x698
};

struct USQReplicationGraph : UReplicationGraph {
	TArray<UObject*> SpatializedClasses; // 0x498
	TArray<UObject*> NonSpatializedChildClasses; // 0x4a8
	TArray<UObject*> AlwaysRelevantClasses; // 0x4b8
	UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4c8
	UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x4d0
	TMap<int, USQReplicationGraphNode_GridSpatialization2DEx*> TeamGridNodes; // 0x4d8
	TMap<int, UReplicationGraphNode_ActorList*> TeamAlwaysRelevantNodes; // 0x528
	TMap<FTeamSquadId, UReplicationGraphNode_ActorList*> TeamSquadsAlwaysRelevantNodes; // 0x578
};

struct USQStaticTurretMovementComponent : USQNetMoveComponent {
	bool bApplyRotationToUpdatedComponent; // 0x250
	USceneComponent* YawComponent; // 0x258
	USceneComponent* PitchComponent; // 0x260
};

struct UInterpTrackInstSound : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
	UAudioComponent* PlayAudioComp; // 0x30
};

struct UAISenseConfig : UObject {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UBTService_BlackboardBase : UBTService {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct ANavigationGraph : ANavigationData {
	UPrimitiveComponent* RenderingComp; // 0x250
	FNavDataConfig NavDataConfig; // 0x258
	char bEnableDrawing : 1; // 0x2c0
	char bForceRebuildOnLoad : 1; // 0x2c0
	char bCanBeMainNavData : 1; // 0x2c0
	char bCanSpawnOnRebuild : 1; // 0x2c0
	char bRebuildAtRuntime : 1; // 0x2c0
	ERuntimeGenerationType RuntimeGeneration; // 0x2c4
	float ObservedPathsTickInterval; // 0x2c8
	uint32 DataVersion; // 0x2cc
	TArray<FSupportedAreaData> SupportedAreas; // 0x3a0
};

struct UPoseableMeshComponent : USkinnedMeshComponent {
	USkeletalMesh* SkeletalMesh; // 0x430
	TWeakObjectPtr<USkinnedMeshComponent> MasterPoseComponent; // 0x438
	UPhysicsAsset* PhysicsAssetOverride; // 0x538
	int ForcedLodModel; // 0x540
	int MinLodModel; // 0x544
	float StreamingDistanceMultiplier; // 0x550
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x560
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x594
	char bOverrideMinLOD : 1; // 0x596
	char bUseBoundsFromMasterPoseComponent : 1; // 0x596
	char bForceWireframe : 1; // 0x596
	char bDisplayBones : 1; // 0x596
	char bDisableMorphTarget : 1; // 0x596
	char bHideSkin : 1; // 0x596
	char bPerBoneMotionBlur : 1; // 0x597
	char bComponentUseFixedSkelBounds : 1; // 0x597
	char bConsiderAllBodiesForBounds : 1; // 0x597
	char bSyncAttachParentLOD : 1; // 0x597
	char bCanHighlightSelectedSections : 1; // 0x597
	char bRecentlyRendered : 1; // 0x597
	char bCastCapsuleDirectShadow : 1; // 0x597
	char bCastCapsuleIndirectShadow : 1; // 0x597
	char bCPUSkinning : 1; // 0x598
	char bEnableUpdateRateOptimizations : 1; // 0x598
	char bDisplayDebugUpdateRateOptimizations : 1; // 0x598
	char bRenderStatic : 1; // 0x598
	char bIgnoreMasterPoseComponentLOD : 1; // 0x598
	char bCachedLocalBoundsUpToDate : 1; // 0x598
	char bForceMeshObjectUpdate : 1; // 0x599
	float CapsuleIndirectShadowMinVisibility; // 0x59c
	FBoxSphereBounds CachedLocalBounds; // 0x5b0
};

struct UBP_SVD_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct ABP_M4M203_M68_UGL_Parent_Founders_C : ABP_M4M203_M68_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74GP25_UGL_Smoke_Red_Founders_C : ABP_AK74GP25_UGL_Smoke_Red_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_Weapon2_C : ASQInfantryWeapon {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialFunctionInstance : UMaterialFunctionInterface {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
};

struct USQShovelStaticInfo : USQItemStaticInfo {
	UAnimMontage* DigWeaponMontage; // 0x4f8
	UAnimMontage* Dig1pMontage; // 0x500
	UAnimMontage* Dig3pMontage; // 0x508
	UAnimMontage* DestroyWeaponMontage; // 0x510
	UAnimMontage* Destroy1pMontage; // 0x518
	UAnimMontage* Destroy3pMontage; // 0x520
};

struct UParticleModuleTypeDataMesh : UParticleModuleTypeDataBase {
	UStaticMesh* Mesh; // 0x30
	bool bUseStaticMeshLODs; // 0x38
	float LODSizeScale; // 0x3c
	char CastShadows : 1; // 0x40
	char DoCollisions : 1; // 0x40
	EMeshScreenAlignment MeshAlignment; // 0x44
	char bOverrideMaterial : 1; // 0x48
	char bOverrideDefaultMotionBlurSettings : 1; // 0x48
	char bEnableMotionBlur : 1; // 0x48
	float Pitch; // 0x4c
	float Roll; // 0x50
	float Yaw; // 0x54
	FRawDistributionVector RollPitchYawRange; // 0x58
	EParticleAxisLock AxisLockOption; // 0xb0
	char bCameraFacing : 1; // 0xb4
	EMeshCameraFacingUpAxis CameraFacingUpAxisOption; // 0xb8
	EMeshCameraFacingOptions CameraFacingOption; // 0xb9
	char bApplyParticleRotationAsSpin : 1; // 0xbc
	char bFaceCameraDirectionRatherThanPosition : 1; // 0xbc
	char bCollisionsConsiderPartilceSize : 1; // 0xbc
};

struct UBTNode : UObject {
	FString NodeName; // 0x30
	UBehaviorTree* TreeAsset; // 0x40
	UBTCompositeNode* ParentNode; // 0x48
};

struct UBTComposite_Selector : UBTCompositeNode {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct UReflectionCaptureComponent : USceneComponent {
	UBillboardComponent* CaptureOffsetComponent; // 0x218
	EReflectionSourceType ReflectionSourceType; // 0x220
	UTextureCube* Cubemap; // 0x228
	float SourceCubemapAngle; // 0x230
	float Brightness; // 0x234
	FVector CaptureOffset; // 0x238
	FGuid MapBuildDataId; // 0x244
};

struct USoundNodeConcatenator : USoundNode {
	TArray<float> InputVolume; // 0x40
};

struct UInterpTrackInstMove : UInterpTrackInst {
	FVector ResetLocation; // 0x28
	FRotator ResetRotation; // 0x34
};

struct UAbilityTask_WaitAbilityActivate : UAbilityTask {
	FScriptMulticastDelegate OnActivate; // 0x80
};

struct UMaterialExpressionLogarithm10 : UMaterialExpression {
	FExpressionInput X; // 0x40
};

struct UInterpTrackMoveAxis : UInterpTrackFloatBase {
	EInterpMoveAxis MoveAxis; // 0x90
	FInterpLookupTrack LookupTrack; // 0x98
};

struct UDatasmithStaticMeshComponentTemplate : UDatasmithObjectTemplate {
	UStaticMesh* StaticMesh; // 0x30
	TArray<UMaterialInterface*> OverrideMaterials; // 0x38
};

struct UGameplayTaskResource : UObject {
	int ManualResourceID; // 0x28
	uint8 AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UAbilityTask_WaitAttributeChange : UAbilityTask {
	FScriptMulticastDelegate OnChange; // 0x80
	UAbilitySystemComponent* ExternalOwner; // 0xd8
};

struct UMaterialExpressionShadowReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Shadow; // 0x54
};

struct UL85A2AG36_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_FB5A4E614A3D3B8A8D1AD180931EFF57; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_50C0996949FB66745593D5BD8741A339; // 0x2e8
	FAnimNode_Slot AnimGraphNode_Slot_1DE308F14B55FBE4C7E49292F5D9706A; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_420808144DD67C4EED76428C383413A1; // 0x3f0
	FAnimNode_Slot AnimGraphNode_Slot_DFF0EDA0424C3383B54689ADAED273F9; // 0x438
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_A3F40E0445CC703B4FEED5B2EF089026; // 0x480
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_B0FF18D3411206771324F3AA7F3ABC6E; // 0x540
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_D53F20E54B31D6C41876A58092C5F115; // 0x5b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7238F9D34A80B86B1E00CF88B886F8DC; // 0x630
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_227B4361422F7B20CCDBDFA5258D4C2E; // 0x6f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_2C9D8B09413DE0A510FB2595B68ACFC9; // 0x768
};

struct ABP_LastingEffect_TANDEM_C : ASQLastingEffect {
	UParticleSystemComponent* ParticleSystem; // 0x248
	UAudioComponent* Audio; // 0x250
	USQShockwave* ShockwaveEffect; // 0x258
	float TimeToFireTriggerLastingEffectEventAfterBeginPlay; // 0x260
	float TimeToLiveAfterBeginPlay; // 0x264
	float TimeToLiveAfterTriggerLastingEffect; // 0x268
	bool bListenForOnActorHitEvents; // 0x26c
	bool bListenForOnDestroyedEvents; // 0x26d
	bool bActivateParticleSystemUponBeginPlay; // 0x26e
	bool bActivateParticleSystemUponTriggerLastingEffect; // 0x26f
	bool bActivateAudioUponBeginPlay; // 0x270
	bool bActivateAudioUponTriggerLastingEffect; // 0x271
	bool bActivateShockwaveUponBeginPlay; // 0x272
	bool bActivateShockwaveUponTriggerLastingEffect; // 0x273
	bool bDetachFromActorUponTriggerLastingEffect; // 0x274
	bool bDeactivateParticleSystemUponTriggerLastingEffect; // 0x275
	bool bDeactivateParticleSystemUponTriggerLastingEffectTimerExpired; // 0x276
	bool bDeactivateAudioUponTriggerLastingEffectTimerExpired; // 0x277
	bool bDestroyUponTriggerLastingEffectTimerExpired; // 0x278
	bool bDrawDebugSphere; // 0x279
	float DebugSphereRadius; // 0x27c
	int DebugSphereSegments; // 0x280
	FColor DebugSphereColor; // 0x284
};

struct ABP_M4M203_M150_UGL_Woodland_Smoke_Red_C : ABP_M4M203_M150_UGL_Woodland_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleLocationWorldOffset : UParticleModuleLocation {
	FRawDistributionVector StartLocation; // 0x30
	float DistributeOverNPoints; // 0x80
	float DistributeThreshold; // 0x84
};

struct ASQFloatingVehicle : ASQPawn {
	USQSimpleMovementComponent* SimpleMovementComponent; // 0x340
	UCameraComponent* CameraComponent; // 0x348
	USpringArmComponent* SpringArm; // 0x350
	USkeletalMeshComponent* SkeletalMeshComponent; // 0x358
	UCapsuleComponent* CapsuleComponent; // 0x360
};

struct UAIDataProvider_QueryParams : UAIDataProvider {
	FName ParamName; // 0x28
	float FloatValue; // 0x30
	int IntValue; // 0x34
	bool BoolValue; // 0x38
};

struct UMovieSceneCinematicShotSection : UMovieSceneSubSection {
	FString ShotDisplayName; // 0x150
	FText DisplayName; // 0x160
};

struct UAbilityTask_WaitGameplayEffectApplied : UAbilityTask {
	UAbilitySystemComponent* ExternalOwner; // 0x1a8
};

struct UParticleModuleAttractorLine : UParticleModuleAttractorBase {
	FVector EndPoint0; // 0x30
	FVector EndPoint1; // 0x3c
	FRawDistributionFloat Range; // 0x48
	FRawDistributionFloat Strength; // 0x80
};

struct USQScoreboardTeamScore : USQUserWidget {
	UHorizontalBox* EndOfRoundPanel; // 0x230
	USpacer* NotEndOfRoundSpacer; // 0x238
	UTextBlock* KillsText; // 0x240
	UTextBlock* IncapsText; // 0x248
	UTextBlock* DeathsText; // 0x250
	UTextBlock* RevivesText; // 0x258
	UTextBlock* HealsText; // 0x260
	UTextBlock* TeamworkText; // 0x268
	UTextBlock* ObjectivesText; // 0x270
	UTextBlock* ScoreText; // 0x278
};

struct ABP_40MM_Proj2_C : ASQMortarProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x520
	UChildActorComponent* Shockwave; // 0x528
	USkeletalMeshComponent* SkeletalMesh; // 0x530
	UParticleSystem* BPEffectOnUnderMinFlightTime; // 0x538
	USoundBase* BPSoundonUnderMinFlightTime; // 0x540
};

struct UMediaPlayer : UObject {
	FScriptMulticastDelegate OnEndReached; // 0x28
	FScriptMulticastDelegate OnMediaClosed; // 0x38
	FScriptMulticastDelegate OnMediaOpened; // 0x48
	FScriptMulticastDelegate OnMediaOpenFailed; // 0x58
	FScriptMulticastDelegate OnPlaybackResumed; // 0x68
	FScriptMulticastDelegate OnPlaybackSuspended; // 0x78
	FScriptMulticastDelegate OnSeekCompleted; // 0x88
	FScriptMulticastDelegate OnTracksChanged; // 0x98
	FTimespan CacheAhead; // 0xa8
	FTimespan CacheBehind; // 0xb0
	FTimespan CacheBehindGame; // 0xb8
	bool NativeAudioOut; // 0xc0
	bool PlayOnOpen; // 0xc1
	char Shuffle : 1; // 0xc4
	char Loop : 1; // 0xc4
	UMediaPlaylist* Playlist; // 0xc8
	int PlaylistIndex; // 0xd0
	FTimespan TimeDelay; // 0xd8
	float HorizontalFieldOfView; // 0xe0
	float VerticalFieldOfView; // 0xe4
	FRotator ViewRotation; // 0xe8
	FGuid PlayerGuid; // 0x120
};

struct UMovieSceneEnumSection : UMovieSceneSection {
	FMovieSceneByteChannel EnumCurve; // 0xe0
};

struct ULevelSequenceBurnInOptions : UObject {
	bool bUseBurnIn; // 0x28
	FSoftClassPath BurnInClass; // 0x30
	ULevelSequenceBurnInInitSettings* Settings; // 0x48
};

struct UGameplayAbilityBlueprint : UBlueprint {
	char bRecompileOnLoad : 1; // 0x50
	UObject* ParentClass; // 0x58
	char bHasBeenRegenerated : 1; // 0x60
	char bIsRegeneratingOnLoad : 1; // 0x60
	USimpleConstructionScript* SimpleConstructionScript; // 0x68
	TArray<UActorComponent*> ComponentTemplates; // 0x70
	TArray<UTimelineTemplate*> Timelines; // 0x80
	UInheritableComponentHandler* InheritableComponentHandler; // 0x90
	EBlueprintType BlueprintType; // 0x98
	int BlueprintSystemVersion; // 0x9c
	bool bNativize; // 0xd0
};

struct UParticleModuleTypeDataBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UWidgetNavigation : UObject {
	FWidgetNavigationData Up; // 0x28
	FWidgetNavigationData Down; // 0x4c
	FWidgetNavigationData Left; // 0x70
	FWidgetNavigationData Right; // 0x94
	FWidgetNavigationData Next; // 0xb8
	FWidgetNavigationData Previous; // 0xdc
};

struct UEQSRenderingComponent : UPrimitiveComponent {
	float MinDrawDistance; // 0x220
	float LDMaxDrawDistance; // 0x224
	float CachedMaxDrawDistance; // 0x228
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x22c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x22d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x22e
	ELightmapType LightmapType; // 0x22f
	char bUseMaxLODAsImposter : 1; // 0x230
	char bNeverDistanceCull : 1; // 0x230
	char bAlwaysCreatePhysicsState : 1; // 0x230
	char bGenerateOverlapEvents : 1; // 0x230
	char bGenerateLocalOverlapEvents : 1; // 0x231
	char bMultiBodyOverlap : 1; // 0x231
	char bTraceComplexOnMove : 1; // 0x231
	char bReturnMaterialOnMove : 1; // 0x231
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x231
	char bAllowCullDistanceVolume : 1; // 0x231
	char bHasMotionBlurVelocityMeshes : 1; // 0x231
	char bVisibleInReflectionCaptures : 1; // 0x232
	char bVisibleInRayTracing : 1; // 0x232
	char bRenderInMainPass : 1; // 0x232
	char bReceivesDecals : 1; // 0x232
	char bOwnerNoSee : 1; // 0x232
	char bOnlyOwnerSee : 1; // 0x232
	char bTreatAsBackgroundForOcclusion : 1; // 0x232
	char bUseAsOccluder : 1; // 0x232
	char bSelectable : 1; // 0x233
	char bForceMipStreaming : 1; // 0x233
	char bHasPerInstanceHitProxies : 1; // 0x233
	char CastShadow : 1; // 0x233
	char bAffectDynamicIndirectLighting : 1; // 0x233
	char bAffectDistanceFieldLighting : 1; // 0x233
	char bCastDynamicShadow : 1; // 0x233
	char bCastStaticShadow : 1; // 0x233
	char bCastVolumetricTranslucentShadow : 1; // 0x234
	char bSelfShadowOnly : 1; // 0x234
	char bCastFarShadow : 1; // 0x234
	char bCastInsetShadow : 1; // 0x234
	char bCastCinematicShadow : 1; // 0x234
	char bCastHiddenShadow : 1; // 0x234
	char bCastShadowAsTwoSided : 1; // 0x234
	char bLightAsIfStatic : 1; // 0x234
	char bLightAttachmentsAsGroup : 1; // 0x235
	char bReceiveMobileCSMShadows : 1; // 0x235
	char bSingleSampleShadowFromStationaryLights : 1; // 0x235
	char bIgnoreRadialImpulse : 1; // 0x235
	char bIgnoreRadialForce : 1; // 0x235
	char bApplyImpulseOnDamage : 1; // 0x235
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x235
	char AlwaysLoadOnClient : 1; // 0x235
	char AlwaysLoadOnServer : 1; // 0x236
	char bUseEditorCompositing : 1; // 0x236
	char bRenderCustomDepth : 1; // 0x236
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x237
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x239
	FLightingChannels LightingChannels; // 0x23a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x23b
	int CustomDepthStencilValue; // 0x23c
	FCustomPrimitiveData CustomPrimitiveData; // 0x240
	int TranslucencySortPriority; // 0x250
	int VisibilityId; // 0x254
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x258
	int VirtualTextureLodBias; // 0x268
	int VirtualTextureCullMips; // 0x26c
	int VirtualTextureMinCoverage; // 0x270
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x274
	float LpvBiasMultiplier; // 0x27c
	float BoundsScale; // 0x288
	TArray<AActor*> MoveIgnoreActors; // 0x298
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2a8
	FBodyInstance BodyInstance; // 0x2c8
	FScriptMulticastDelegate OnComponentHit; // 0x3d8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3d9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3da
	FScriptMulticastDelegate OnComponentWake; // 0x3db
	FScriptMulticastDelegate OnComponentSleep; // 0x3dc
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3de
	FScriptMulticastDelegate OnEndCursorOver; // 0x3df
	FScriptMulticastDelegate OnClicked; // 0x3e0
	FScriptMulticastDelegate OnReleased; // 0x3e1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3e2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3e3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3e4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3e5
	UPrimitiveComponent* LODParentPrimitive; // 0x400
};

struct UMultiPackerImage : UImage {
	EMultiPackerImageLayer TypeLayer; // 0x210
	bool Layer_2; // 0x211
	bool Layer_3; // 0x212
	bool Layer_4; // 0x213
	FLayerDatabase LayerBase; // 0x218
	FLayerDatabase LayerAddition; // 0x270
	FLayerDatabase LayerDetail; // 0x2c8
	FLinearColor BaseColorOutline; // 0x320
	FLinearColor BaseColorInterior; // 0x330
	float BaseOutlineThresold; // 0x340
	float BaseSDFThresold; // 0x344
	bool BaseStyleChanged; // 0x348
	UMultiPackerLayerDatabase* LayerBaseStyle; // 0x350
	FLinearColor AdditionColorOutline; // 0x358
	FLinearColor AdditionColorInterior; // 0x368
	float AdditionOutlineThresold; // 0x378
	float AdditionSDFThresold; // 0x37c
	bool AdditionStyleChanged; // 0x380
	UMultiPackerLayerDatabase* LayerAdditionStyle; // 0x388
	FLinearColor DetailColorOutline; // 0x390
	FLinearColor DetailColorInterior; // 0x3a0
	float DetailOutlineThresold; // 0x3b0
	float DetailSDFThresold; // 0x3b4
	bool DetailStyleChanged; // 0x3b8
	UMultiPackerLayerDatabase* LayerDetailStyle; // 0x3c0
};

struct USQAnimInstanceSoldier1P : USQAnimInstanceSoldier {
	bool bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__St2P; // 0x420
	bool bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__P2St; // 0x421
	bool bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__Sp2P; // 0x422
	bool bStateWeight__GTEOne__ProneStates__ProneMove; // 0x504
	bool bRelevantAnimTimeRemaining__LTEPtTwo__ProneStates__OutProneMove; // 0x505
	bool bCurrentTime__GTEPtThree__Jump1P__JumpStart__rifle_1ptop_jumpstart; // 0x578
	bool bTimeRemaining__LTEPtTwo__Jump1P__JumpEnd__rifle_1ptop_jumpend; // 0x579
	bool bTimeRemaining__LTEPtTwo__Jump1P__JumpStart__rifle_1ptop_jumpstart; // 0x57a
	FRotator Zeroing; // 0x5f4
	UBlendSpaceBase* ProneMoveType; // 0x600
	UAnimSequence* ProneMoveTypeAdditiveReference; // 0x608
	UAnimSequence* OutProneMoveType; // 0x610
	UAnimSequence* OutProneMoveTypeNonadditive; // 0x618
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x620
	float HasAdjustableSightAlpha; // 0x628
	FVector StandLoc; // 0x62c
	FVector CrouchLoc; // 0x638
	FVector ProneLoc; // 0x644
	FVector BipodLoc; // 0x650
	float StandLocBlendTime; // 0x65c
	FVector NegFpvTorsoCameraOffset; // 0x660
	FVector DeviationVisuFb; // 0x66c
	FRotator Sway; // 0x678
	FVector StrafeVector; // 0x684
	FRotator StrafeRotator; // 0x690
	FRotator AdsStrafeRotator; // 0x69c
	float BaseAimPitchPct; // 0x6a8
	FVector WeapRecoilRelLoc; // 0x6ac
	FRotator GlobalDeltaRotDeltaSpring; // 0x6b8
	FRotator GlobalDeltaRotDeltaSpringRoll; // 0x6c4
	FVector GlobalDeltaLocDeltaSpringWeaponMesh; // 0x6d0
	float LeftHandIKSpringAlpha; // 0x6dc
	FVector Aim1pWeaponMeshPosition; // 0x6e0
	FVector Aim1pWeaponMeshRescale; // 0x6ec
	FVector StandLeanLeftRootOffset; // 0x6f8
	FRotator StandLeanLeftWeaponRotation; // 0x704
	FRotator StandLeanLeftCameraRotation; // 0x710
	FVector StandLeanRightRootOffset; // 0x71c
	FRotator StandLeanRightWeaponRotation; // 0x728
	FRotator StandLeanRightCameraRotation; // 0x734
	FVector CrouchLeanLeftRootOffset; // 0x740
	FRotator CrouchLeanLeftWeaponRotation; // 0x74c
	FRotator CrouchLeanLeftCameraRotation; // 0x758
	FVector CrouchLeanRightRootOffset; // 0x764
	FRotator CrouchLeanRightWeaponRotation; // 0x770
	FRotator CrouchLeanRightCameraRotation; // 0x77c
	FVector ProneLeanLeftRootOffset; // 0x788
	FRotator ProneLeanLeftWeaponRotation; // 0x794
	FRotator ProneLeanLeftCameraRotation; // 0x7a0
	FVector ProneLeanRightRootOffset; // 0x7ac
	FRotator ProneLeanRightWeaponRotation; // 0x7b8
	FRotator ProneLeanRightCameraRotation; // 0x7c4
	float FP_HasSway; // 0x7d0
	float FP_JumpStartLoopAlpha; // 0x7d4
	float FP_JumpEndBobbingBlendAlpha; // 0x7d8
	float FP_JumpEndBobbingAdditiveAlpha; // 0x7dc
	float FP_JumpEndCameraRootMotionAlphaBlend; // 0x7e0
	bool bFP_IsFallingAndNotJumping; // 0x7e4
	float FP_St2P_RootMotionBlendAlpha; // 0x7e8
	float FP_P2St_RootMotionBlendAlpha; // 0x7ec
	bool bFP_IsProneAndIsSprintingAndCanSprintToProne; // 0x7f0
	bool bFP_SwitchedProneAndNotIsProne; // 0x7f1
	bool bFP_SwitchedProneAndIsProne; // 0x7f2
	FRotator FP_ProneMoveIkWeaponHandRootRotFromGroundAngle; // 0x7f4
	FRotator FP_ProneMoveIkWeaponHandRootRotFromActorPitch; // 0x800
	bool bFP_ProneMoveWeaponAligningConditions; // 0x80c
	FRotator FP_ProneMoveIkWeaponRightClavicleRot; // 0x810
	float FP_ProneMoveBobPlayRate; // 0x81c
	bool bFP_SpeedHigherThanZeroAndNotIsProneTransition; // 0x820
	bool bFP_SpeedHigherThanZero; // 0x821
	bool bFP_HvdXorClAndClOrHvdXorVaAndVaOrBipod; // 0x822
	bool bFP_ClimbAnimNotEqual1; // 0x823
	bool bFP_ClimbAndClimbAnim1; // 0x824
	FRotator FP_ClimbAndClimbAnim1_AimRotator; // 0x828
	bool bFP_1pLeftHandIkConditions; // 0x834
	float FP_1pLeftHandIKConditionsAlpha; // 0x838
	float FP_IsUsingItemAlpha; // 0x83c
	float FP_IsProneAlpha; // 0x840
	bool bFP_T_ProneStatesProneMoveToOutProneMove; // 0x844
	bool bFP_T_Jump1pJumpStartToJumpEnd; // 0x845
	bool bFP_T_ToADS_Hipfire; // 0x846
	bool bCachedIsPullingTriggerAndMagazineHasAmmo; // 0x847
	float ToADS_Hipfire_RemainingTIme; // 0x848
	float Steady1pHipFireDuration; // 0x84c
	bool bFP_T_StandToADS_Grenade; // 0x850
	bool bFP_T_WeaponBobbing1P_ADSToStand; // 0x851
	bool bFP_T_WeaponBobbing1P_ADSToProne; // 0x852
	bool bFP_T_WeaponBobbing1P_ProneToADS; // 0x853
	float FP_CustomIsCrouchedAlpha; // 0x854
	float FP_HasAdjustableSightAlphaTimesIsAdsAlpha; // 0x858
	bool bProneMoveBobbing; // 0x85c
	bool bLeftHandIkOut1P; // 0x85d
	bool bSwitchedProne; // 0x85e
	bool bLastProneStance; // 0x85f
	float MoveDeviationFactor; // 0x860
	float ShotDeviationFactor; // 0x864
	FVector4 FinalDeviation; // 0x870
	FVector2D DeviationVisuFbZY; // 0x880
	FRotator AddRotGoingShot; // 0x888
	float RecoilReleaseInterpSpeed; // 0x894
	float RecoilWeaponLimit; // 0x898
	float MoveRecoilFactor; // 0x89c
	float RecoilCanRelease; // 0x8a0
	FVector FinalRecoilSigma; // 0x8a4
	FVector FinalRecoilMean; // 0x8b0
	float MoveSwayFactor; // 0x8bc
	float CustomSwayMin; // 0x8c0
	FVector2D SwayZY; // 0x8c4
	float StrafeSpringFactor; // 0x8cc
	FRotator LastKnownRot1; // 0x8d0
	FVector CtrlRotVectorDeltaSpring; // 0x8dc
	FRotator LastKnownRot2; // 0x8e8
	float CtrlRotDeltaSpringLerpAlpha; // 0x8f4
	float WeaponSpringTurnSpeedToFullIntensity; // 0x8f8
	FRotator StrafeSpringRotator; // 0x8fc
	FVector StrafeSpringVector; // 0x908
	FRotator AdsStrafeSpringRotator; // 0x914
	float CustomNotIsAds; // 0x920
	UCameraShake* FireShake; // 0x928
	int WeaponSpringSide; // 0x930
	float WeaponSpringStiffness; // 0x934
	float WeaponSpringCriticalDampingFactor; // 0x938
	float WeaponSpringMass; // 0x93c
	float WeaponSpringFactor; // 0x940
	float WeaponMeshSpringLocDelayFactor; // 0x944
	float WeaponSpringClamp; // 0x948
	float WeaponMeshSpringRotDelayFactor; // 0x94c
	float AddMoveDeviation; // 0x950
	float MoveDeviationFactorRelease; // 0x954
	float MaxMoveDeviationFactor; // 0x958
	float MinMoveDeviationFactor; // 0x95c
	float FullStaminaDeviationFactor; // 0x960
	float LowStaminaDeviationFactor; // 0x964
	float AddShotDeviationFactor; // 0x968
	float AddShotDeviationFactorAds; // 0x96c
	float ShotDeviationFactorRelease; // 0x970
	float MinShotDeviationFactor; // 0x974
	float MaxShotDeviationFactor; // 0x978
	float DeviationVisuFbInterpSpeed_YZ; // 0x97c
	float DeviationVisuFbMax; // 0x980
	float DeviationVisuFbInterpSpeed_Final; // 0x984
	float MinBipodAdsDeviation; // 0x988
	float MinBipodDeviation; // 0x98c
	float MinProneAdsDeviation; // 0x990
	float MinProneDeviation; // 0x994
	float MinCrouchAdsDeviation; // 0x998
	float MinCrouchDeviation; // 0x99c
	float MinStandAdsDeviation; // 0x9a0
	float MinStandDeviation; // 0x9a4
	float MinProneTransitionDeviation; // 0x9a8
	float MaxMoveRecoilFactor; // 0x9ac
	float AddMoveRecoil; // 0x9b0
	float MinMoveRecoilFactor; // 0x9b4
	float MoveRecoilFactorRelease; // 0x9b8
	float FullStaminaRecoilFactor; // 0x9bc
	float LowStaminaRecoilFactor; // 0x9c0
	float RecoilCameraOffsetFactor; // 0x9c4
	float RecoilLofCameraOffsetLimit; // 0x9c8
	float RecoilLofAttackInterpSpeed; // 0x9cc
	float RecoilCanReleaseInterpSpeed; // 0x9d0
	float RecoilCameraOffsetInterpSpeed; // 0x9d4
	float RecoilLofReleaseInterpSpeed; // 0x9d8
	float WeapRecoilRelLocFactor; // 0x9dc
	float RecoilCameraShotInterpSpeed; // 0x9e0
	float RecoilAdsCameraShotInterpSpeed; // 0x9e4
	FVector ProneAdsRecoilMean; // 0x9e8
	FVector ProneAdsRecoilSigma; // 0x9f4
	FVector ProneRecoilMean; // 0xa00
	FVector ProneRecoilSigma; // 0xa0c
	FVector CrouchAdsRecoilMean; // 0xa18
	FVector CrouchAdsRecoilSigma; // 0xa24
	FVector CrouchRecoilMean; // 0xa30
	FVector CrouchRecoilSigma; // 0xa3c
	FVector StandAdsRecoilMean; // 0xa48
	FVector StandAdsRecoilSigma; // 0xa54
	FVector StandRecoilMean; // 0xa60
	FVector StandRecoilSigma; // 0xa6c
	FVector ProneTransitionRecoilMean; // 0xa78
	FVector ProneTransitionRecoilSigma; // 0xa84
	FVector BipodAdsRecoilMean; // 0xa90
	FVector BipodAdsRecoilSigma; // 0xa9c
	FVector BipodRecoilMean; // 0xaa8
	FVector BipodRecoilSigma; // 0xab4
	float FullStaminaSwayFactor; // 0xac0
	float LowStaminaSwayFactor; // 0xac4
	float AddMoveSway; // 0xac8
	float MaxMoveSwayFactor; // 0xacc
	float MinMoveSwayFactor; // 0xad0
	float MoveSwayFactorRelease; // 0xad4
	float SwayInterpSpeed_YZ; // 0xad8
	float SwayInterpSpeed_Final; // 0xadc
	float ProneAdsSwayMin; // 0xae0
	float ProneSwayMin; // 0xae4
	float CrouchAdsSwayMin; // 0xae8
	float CrouchSwayMin; // 0xaec
	float StandAdsSwayMin; // 0xaf0
	float StandSwayMin; // 0xaf4
	float ProneTransitionSwayMin; // 0xaf8
	float HoldingBreathSwayFactor; // 0xafc
	float CustomSpeed; // 0xb00
	USQSuppressionInfo* LastSuppressionInfoClass; // 0xb08
	FRotator SmoothFinalLofSuppressRotation; // 0xb4c
	float LofSuppressRotationAlpha; // 0xb5c
	bool bWasCrouchedBeforeProne; // 0xb70
	FVector CustomCurrentFloorNormal1; // 0xb74
	float FP_SprintBlendAlpha; // 0xb80
	bool bIsSprint1pLoopSection; // 0xb84
	UAnimSequence* SprintStaticPose; // 0xb88
	UAnimMontage* BobbingMove1pMontage; // 0xbb0
	UAnimMontage* BobbingSprint1pMontage; // 0xbb8
};

struct USQHelicopterMovementComponent : USQMovementComponentBase {
	float BrakingDecelerationFlying; // 0x1c0
	float MaxFlySpeed; // 0x1c4
	float MaxAcceleration; // 0x1c8
	float AirFriction; // 0x1cc
	float BrakingFriction; // 0x1d0
	float BrakingFrictionFactor; // 0x1d4
	float LinearDamping; // 0x1d8
	UCurveFloat* LinearDampingCurve; // 0x1e0
	char bUseSeparateBrakingFriction : 1; // 0x1e8
	float GravityScale; // 0x1ec
	float Mass; // 0x1f0
	char bEnablePhysicsInteraction : 1; // 0x1f4
	float TouchForceFactor; // 0x1f8
	float MinTouchForce; // 0x1fc
	float MaxTouchForce; // 0x200
	char bTouchForceScaledToMass : 1; // 0x204
	float PenetrationPullbackDistance; // 0x208
	float PenetrationOverlapCheckInflation; // 0x20c
	bool MoveIgnoreFirstBlockingOverlap; // 0x210
	FScriptMulticastDelegate OnImpact; // 0x218
	FScriptMulticastDelegate OnRep_Physics; // 0x228
	float AllowablePositionErrorSquared; // 0x238
	float MinProxyMovementPredictionSpeed; // 0x23c
	float AnalogInputModifier; // 0x240
	FVector PendingImpulseToApply; // 0x244
	FVector PendingForceToApply; // 0x250
	char bForceMaxAccel : 1; // 0x25c
	APawn* PawnOwner; // 0x260
	UPrimitiveComponent* UpdatedComponent; // 0x268
	bool bIsSimulatingPhysics; // 0x280
};

struct UGeneralProjectSettings : UObject {
	FString CompanyName; // 0x28
	FString CompanyDistinguishedName; // 0x38
	FString CopyrightNotice; // 0x48
	FString Description; // 0x58
	FString Homepage; // 0x68
	FString LicensingTerms; // 0x78
	FString PrivacyPolicy; // 0x88
	FGuid ProjectID; // 0x98
	FString ProjectName; // 0xa8
	FString ProjectVersion; // 0xb8
	FString SupportContact; // 0xc8
	FText ProjectDisplayedTitle; // 0xd8
	FText ProjectDebugTitleInfo; // 0xf0
	bool bShouldWindowPreserveAspectRatio; // 0x108
	bool bUseBorderlessWindow; // 0x109
	bool bStartInVR; // 0x10a
	bool bStartInAR; // 0x10b
	bool bSupportAR; // 0x10c
	bool bAllowWindowResize; // 0x10d
	bool bAllowClose; // 0x10e
	bool bAllowMaximize; // 0x10f
	bool bAllowMinimize; // 0x110
};

struct UParticleModuleLocation_Seeded : UParticleModuleLocation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x88
};

struct ABP_GenericRifle_C : ABP_Weapon2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UEnvQueryGenerator_ActorsOfClass : UEnvQueryGenerator {
	AActor* SearchedActorClass; // 0x50
	FAIDataProviderBoolValue GenerateOnlyActorsInRadius; // 0x58
	FAIDataProviderFloatValue SearchRadius; // 0x88
	UEnvQueryContext* SearchCenter; // 0xb8
};

struct UMaterialExpressionPerInstanceRandom : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UAnimNotify_PlaySound : UAnimNotify {
	USoundBase* Sound; // 0x38
	float VolumeMultiplier; // 0x40
	float PitchMultiplier; // 0x44
	char bFollow : 1; // 0x48
	FName AttachName; // 0x4c
};

struct USQRotatingMovementComponent : USQMovementComponentPacked {
	USceneComponent* UpdatedComponent; // 0x1e0
	float InputMultiplier; // 0x1e8
	float ErrorTolerance; // 0x1ec
	float AngularDeltaCombineThreshold; // 0x1f0
	FSQRotationConstraints RotationConstraints; // 0x1f4
	FSQRotationRepMovement RotationReplicatedMovement; // 0x240
};

struct UParticleModuleTypeDataRibbon : UParticleModuleTypeDataBase {
	int MaxTessellationBetweenParticles; // 0x30
	int SheetsPerTrail; // 0x34
	int MaxTrailCount; // 0x38
	int MaxParticleInTrailCount; // 0x3c
	char bDeadTrailsOnDeactivate : 1; // 0x40
	char bDeadTrailsOnSourceLoss : 1; // 0x40
	char bClipSourceSegement : 1; // 0x40
	char bEnablePreviousTangentRecalculation : 1; // 0x40
	char bTangentRecalculationEveryFrame : 1; // 0x40
	char bSpawnInitialParticle : 1; // 0x40
	ETrailsRenderAxisOption RenderAxis; // 0x44
	float TangentSpawningScalar; // 0x48
	char bRenderGeometry : 1; // 0x4c
	char bRenderSpawnPoints : 1; // 0x4c
	char bRenderTangents : 1; // 0x4c
	char bRenderTessellation : 1; // 0x4c
	float TilingDistance; // 0x50
	float DistanceTessellationStepSize; // 0x54
	char bEnableTangentDiffInterpScale : 1; // 0x58
	float TangentTessellationScalar; // 0x5c
};

struct UBP_M110_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UMultiPackerRuntimeMatNode : UObject {
	UMaterialInterface* MaterialBaseInput; // 0x28
	int Height; // 0x30
	int Width; // 0x34
	ETextureSizeOutputPersonal MaterialSize; // 0x38
};

struct UDistributionVectorConstantCurve : UDistributionVector {
	FInterpCurveVector ConstantCurve; // 0x38
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
};

struct UMaterialExpressionPixelNormalWS : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UEnvQueryGenerator_SimpleGrid : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue GridSize; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb0
	UEnvQueryContext* GenerateAround; // 0xe0
};

struct UQosEvaluator : UObject {
	bool bInProgress; // 0x48
	bool bCancelOperation; // 0x49
	TArray<FDatacenterQosInstance> Datacenters; // 0x50
};

struct UBP_Attachment_ElcanLDS_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct AEmitter : AActor {
	UParticleSystemComponent* ParticleSystemComponent; // 0x248
	char bDestroyOnSystemFinish : 1; // 0x250
	char bPostUpdateTickGroup : 1; // 0x250
	char bCurrentlyActive : 1; // 0x250
	FScriptMulticastDelegate OnParticleSpawn; // 0x258
	FScriptMulticastDelegate OnParticleBurst; // 0x268
	FScriptMulticastDelegate OnParticleDeath; // 0x278
	FScriptMulticastDelegate OnParticleCollide; // 0x288
};

struct UParticleModuleMaterialBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct URuntimeVirtualTextureComponent : USceneComponent {
	URuntimeVirtualTexture* VirtualTexture; // 0x218
	AActor* BoundsSourceActor; // 0x220
};

struct UAutomationTestSettings : UObject {
	TArray<FString> EngineTestModules; // 0x28
	TArray<FString> EditorTestModules; // 0x38
	FSoftObjectPath AutomationTestmap; // 0x48
	TArray<FEditorMapPerformanceTestDefinition> EditorPerformanceTestMaps; // 0x60
	TArray<FSoftObjectPath> AssetsToOpen; // 0x70
	FBuildPromotionTestSettings BuildPromotionTest; // 0x80
	FMaterialEditorPromotionSettings MaterialEditorPromotionTest; // 0x270
	FParticleEditorPromotionSettings ParticleEditorPromotionTest; // 0x2a0
	FBlueprintEditorPromotionSettings BlueprintEditorPromotionTest; // 0x2b0
	TArray<FString> TestLevelFolders; // 0x2e0
	TArray<FExternalToolDefinition> ExternalTools; // 0x2f0
	TArray<FEditorImportExportTestDefinition> ImportExportTestDefinitions; // 0x300
	TArray<FLaunchOnTestSettings> LaunchOnSettings; // 0x310
	FIntPoint DefaultScreenshotResolution; // 0x320
};

struct USquadVoiceOutput : USoundWave {
	int CompressionQuality; // 0x110
	int StreamingPriority; // 0x114
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x118
	ESoundGroup SoundGroup; // 0x11a
	char bLooping : 1; // 0x11b
	char bStreaming : 1; // 0x11b
	char bSeekableStreaming : 1; // 0x11b
	char bMature : 1; // 0x11c
	char bManualWordWrap : 1; // 0x11c
	char bSingleLine : 1; // 0x11c
	char bIsAmbisonics : 1; // 0x11c
	TArray<float> FrequenciesToAnalyze; // 0x120
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x130
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x140
	FString SpokenText; // 0x160
	float SubtitlePriority; // 0x170
	float Volume; // 0x174
	float Pitch; // 0x178
	int NumChannels; // 0x17c
	int SampleRate; // 0x180
	TArray<FSubtitleCue> Subtitles; // 0x188
	UCurveTable* Curves; // 0x198
	UCurveTable* InternalCurves; // 0x1a0
};

struct UAnimSharingAdditiveInstance : UAnimInstance {
	TWeakObjectPtr<USkeletalMeshComponent> BaseComponent; // 0x268
	TWeakObjectPtr<UAnimSequence> AdditiveAnimation; // 0x270
	float Alpha; // 0x278
	bool bStateBool; // 0x27c
};

struct UMovieSceneMediaSection : UMovieSceneSection {
	UMediaSource* MediaSource; // 0xe0
	bool bLooping; // 0xe8
	FFrameNumber StartFrameOffset; // 0xec
	UMediaTexture* MediaTexture; // 0xf0
	UMediaSoundComponent* MediaSoundComponent; // 0xf8
	bool bUseExternalMediaPlayer; // 0x100
	UMediaPlayer* ExternalMediaPlayer; // 0x108
};

struct UNavMovementComponent : UMovementComponent {
	FNavAgentProperties NavAgentProps; // 0x118
	float FixedPathBrakingDistance; // 0x148
	char bUpdateNavAgentWithOwnersCollision : 1; // 0x14c
	char bUseAccelerationForPaths : 1; // 0x14c
	char bUseFixedBrakingDistanceForPaths : 1; // 0x14c
	FMovementProperties MovementState; // 0x14d
	UObject* PathFollowingComp; // 0x150
};

struct UMaterialExpressionRayTracingQualitySwitch : UMaterialExpression {
	FExpressionInput Normal; // 0x40
	FExpressionInput RayTraced; // 0x54
};

struct USlateSettings : UObject {
	bool bExplicitCanvasChildZOrder; // 0x28
};

struct UGameplayAbilitySet : UDataAsset {
	TArray<FGameplayAbilityBindInfo> Abilities; // 0x30
};

struct USQGrenadeStaticInfo : USQItemStaticInfo {
	UAnimMontage* WeaponOverhandPinpull1pMontage; // 0x4f8
	UAnimMontage* WeaponOverhandPinpull3pMontage; // 0x500
	UAnimMontage* OverhandPinpull1pMontage; // 0x508
	UAnimMontage* OverhandPinpull3pMontage; // 0x510
	UAnimMontage* WeaponOverhandThrow1pMontage; // 0x518
	UAnimMontage* WeaponOverhandThrow3pMontage; // 0x520
	UAnimMontage* OverhandThrow1pMontage; // 0x528
	UAnimMontage* OverhandThrow3pMontage; // 0x530
	UAnimMontage* WeaponUnderhandPinpull1pMontage; // 0x538
	UAnimMontage* WeaponUnderhandPinpull3pMontage; // 0x540
	UAnimMontage* UnderhandPinpull1pMontage; // 0x548
	UAnimMontage* UnderhandPinpull3pMontage; // 0x550
	UAnimMontage* WeaponUnderhandThrow1pMontage; // 0x558
	UAnimMontage* WeaponUnderhandThrow3pMontage; // 0x560
	UAnimMontage* UnderhandThrow1pMontage; // 0x568
	UAnimMontage* UnderhandThrow3pMontage; // 0x570
};

struct UBP_L85A2AG36_StaticInfo_C : UBP_L85A2_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct ABP_M72A7_Rocket_Proj2_C : ASQMortarProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x520
	USkeletalMeshComponent* SkeletalMesh; // 0x528
	USoundBase* BPSoundonUnderMinFlightTime; // 0x530
	UParticleSystem* BPEffectOnUnderMinFlightTime; // 0x538
};

struct UDataAsset : UObject {
	UDataAsset* NativeClass; // 0x28
};

struct UInterpTrackInstAnimControl : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UForceFeedbackEffect : UObject {
	TArray<FForceFeedbackChannelDetails> ChannelDetails; // 0x28
	float Duration; // 0x38
};

struct UNavCollisionBase : UObject {
	char bIsDynamicObstacle : 1; // 0x28
};

struct ABP_M4M203_UGL_Smoke_Red_C : ABP_M4M203_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionSobol : UMaterialExpression {
	FExpressionInput Cell; // 0x40
	FExpressionInput Index; // 0x54
	FExpressionInput Seed; // 0x68
	uint32 ConstIndex; // 0x7c
	FVector2D ConstSeed; // 0x80
};

struct ASQUndirectedGraph : AActor {
	USceneComponent* Root; // 0x248
	FScriptMulticastDelegate OnLatticeUpdated; // 0x250
	TArray<USQGraphNodeComponent*> Nodes; // 0x260
	TArray<FSQGraphLink> Links; // 0x270
};

struct ASQInstancedStaticMeshActor : AActor {
	UInstancedStaticMeshComponent* InstancedStaticMeshComponent; // 0x248
};

struct ABP_M4M203_M68_UGL_HE_Founders_C : ABP_M4M203_M68_UGL_Parent_Founders_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ASpectatorBeaconHost : AOnlineBeaconHostObject {
	USpectatorBeaconState* State; // 0x270
	bool bLogoutOnSessionTimeout; // 0x2d8
	float SessionTimeoutSecs; // 0x2dc
	float TravelSessionTimeoutSecs; // 0x2e0
};

struct UModelComponent : UPrimitiveComponent {
	UBodySetup* ModelBodySetup; // 0x420
};

struct UInterpGroup : UObject {
	TArray<UInterpTrack*> InterpTracks; // 0x30
	FName GroupName; // 0x40
	FColor GroupColor; // 0x48
	char bCollapsed : 1; // 0x4c
	char bVisible : 1; // 0x4c
	char bIsFolder : 1; // 0x4c
	char bIsParented : 1; // 0x4c
	char bIsSelected : 1; // 0x4c
};

struct UInterpTrackLinearColorBase : UInterpTrack {
	FInterpCurveLinearColor LinearColorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UParticleModuleLocationBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct URendererOverrideSettings : UDeveloperSettings {
	char bSupportAllShaderPermutations : 1; // 0x38
	char bForceRecomputeTangents : 1; // 0x38
};

struct ABP_AK74MGP25_1P63_UGL_Desert_HE_C : ABP_AK74MGP25_1P63_UGL_Desert_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_L85A2_SUSAT_Tracer_C : ABP_L85A2_SUSAT_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct UPartyBeaconState : UObject {
	FName SessionName; // 0x28
	int NumConsumedReservations; // 0x30
	int MaxReservations; // 0x34
	int NumTeams; // 0x38
	int NumPlayersPerTeam; // 0x3c
	FName TeamAssignmentMethod; // 0x40
	int ReservedHostTeamNum; // 0x48
	int ForceTeamNum; // 0x4c
	bool bRestrictCrossConsole; // 0x50
	TArray<FPartyReservation> Reservations; // 0x58
};

struct USQGridData_CommandOption : USQGridData_BaseOption {
	char CategoryId; // 0x60
	ASQCommandActor* CommandActor; // 0x68
	UUserWidget* ControlWidget; // 0x70
	float EnrouteDuration; // 0x78
	float ActiveDuration; // 0x7c
	float CooldownDuration; // 0x80
	float IconAngleOffset; // 0x84
	float MaxAngleFromBase; // 0x88
	bool CreateMapMarker; // 0x8c
	bool bAllowedInVehicle; // 0x8d
	bool bIgnoreActionEnabled; // 0x8e
	ASQMapMarker* MapMarkerClass; // 0x90
	FSQCommanderActionSounds CommanderActionSoundsList; // 0x98
};

struct UMovieSceneSpawnTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
	FGuid ObjectGuid; // 0x68
};

struct ADirectionalLight : ALight {
	ULightComponent* LightComponent; // 0x248
	char bEnabled : 1; // 0x250
};

struct USkeletalMeshSocket : UObject {
	FName SocketName; // 0x28
	FName BoneName; // 0x30
	FVector RelativeLocation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale; // 0x50
	bool bForceAlwaysAnimated; // 0x5c
};

struct UMaterialExpressionMakeMaterialAttributes : UMaterialExpression {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Metallic; // 0x54
	FExpressionInput Specular; // 0x68
	FExpressionInput Roughness; // 0x7c
	FExpressionInput EmissiveColor; // 0x90
	FExpressionInput Opacity; // 0xa4
	FExpressionInput OpacityMask; // 0xb8
	FExpressionInput Normal; // 0xcc
	FExpressionInput WorldPositionOffset; // 0xe0
	FExpressionInput WorldDisplacement; // 0xf4
	FExpressionInput TessellationMultiplier; // 0x108
	FExpressionInput SubsurfaceColor; // 0x11c
	FExpressionInput ClearCoat; // 0x130
	FExpressionInput ClearCoatRoughness; // 0x144
	FExpressionInput AmbientOcclusion; // 0x158
	FExpressionInput Refraction; // 0x16c
	FExpressionInput CustomizedUVs[0x8]; // 0x180
	FExpressionInput PixelDepthOffset; // 0x220
	FExpressionInput ShadingModel; // 0x234
};

struct APartyBeaconClient : AOnlineBeaconClient {
	FString DestSessionId; // 0x2f8
	FPartyReservation PendingReservation; // 0x308
	EClientRequestType RequestType; // 0x358
	bool bPendingReservationSent; // 0x359
	bool bCancelReservation; // 0x35a
};

struct AArchVisCharacter : ACharacter {
	FString LookUpAxisName; // 0x658
	FString LookUpAtRateAxisName; // 0x668
	FString TurnAxisName; // 0x678
	FString TurnAtRateAxisName; // 0x688
	FString MoveForwardAxisName; // 0x698
	FString MoveRightAxisName; // 0x6a8
	float MouseSensitivityScale_Pitch; // 0x6b8
	float MouseSensitivityScale_Yaw; // 0x6bc
};

struct ABP_RPG7_Frag_Founders_C : ABP_RPG7_Parent_Founders_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct USpinBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FSpinBoxStyle SpinBoxStyle; // 0x30
};

struct UDistributionVector : UDistribution {
	char bCanBeBaked : 1; // 0x30
	char bIsDirty : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UMaterialFunctionMaterialLayerBlend : UMaterialFunction {
	FString Description; // 0x40
	char bExposeToLibrary : 1; // 0x50
	char bPrefixParameterNames : 1; // 0x50
	TArray<UMaterialExpression*> FunctionExpressions; // 0x58
	char bReentrantFlag : 1; // 0x68
};

struct URuntimeVirtualTexture : UObject {
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x28
	bool bCompressTextures; // 0x2c
	int Size; // 0x30
	int TileSize; // 0x34
	int TileBorderSize; // 0x38
	int RemoveLowMips; // 0x3c
	bool bEnable; // 0x40
};

struct UDatasmithCommonTessellationOptions : UObject {
	FDatasmithTessellationOptions Options; // 0x28
};

struct UNavArea_LowHeight : UNavArea {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UAsyncActionHandleSaveGame : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate Completed; // 0x30
	USaveGame* SaveGameObject; // 0x60
};

struct UComponentDelegateBinding : UDynamicBlueprintBinding {
	TArray<FBlueprintComponentDelegateBinding> ComponentDelegateBindings; // 0x28
};

struct UParticleModuleCollisionGPU : UParticleModuleCollisionBase {
	FRawDistributionFloat Resilience; // 0x30
	FRawDistributionFloat ResilienceScaleOverLife; // 0x68
	float Friction; // 0xa0
	float RandomSpread; // 0xa4
	float RandomDistribution; // 0xa8
	float RadiusScale; // 0xac
	float RadiusBias; // 0xb0
	EParticleCollisionResponse response; // 0xb4
	EParticleCollisionMode CollisionMode; // 0xb5
};

struct UFXSystemComponent : UPrimitiveComponent {
	float MinDrawDistance; // 0x220
	float LDMaxDrawDistance; // 0x224
	float CachedMaxDrawDistance; // 0x228
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x22c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x22d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x22e
	ELightmapType LightmapType; // 0x22f
	char bUseMaxLODAsImposter : 1; // 0x230
	char bNeverDistanceCull : 1; // 0x230
	char bAlwaysCreatePhysicsState : 1; // 0x230
	char bGenerateOverlapEvents : 1; // 0x230
	char bGenerateLocalOverlapEvents : 1; // 0x231
	char bMultiBodyOverlap : 1; // 0x231
	char bTraceComplexOnMove : 1; // 0x231
	char bReturnMaterialOnMove : 1; // 0x231
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x231
	char bAllowCullDistanceVolume : 1; // 0x231
	char bHasMotionBlurVelocityMeshes : 1; // 0x231
	char bVisibleInReflectionCaptures : 1; // 0x232
	char bVisibleInRayTracing : 1; // 0x232
	char bRenderInMainPass : 1; // 0x232
	char bReceivesDecals : 1; // 0x232
	char bOwnerNoSee : 1; // 0x232
	char bOnlyOwnerSee : 1; // 0x232
	char bTreatAsBackgroundForOcclusion : 1; // 0x232
	char bUseAsOccluder : 1; // 0x232
	char bSelectable : 1; // 0x233
	char bForceMipStreaming : 1; // 0x233
	char bHasPerInstanceHitProxies : 1; // 0x233
	char CastShadow : 1; // 0x233
	char bAffectDynamicIndirectLighting : 1; // 0x233
	char bAffectDistanceFieldLighting : 1; // 0x233
	char bCastDynamicShadow : 1; // 0x233
	char bCastStaticShadow : 1; // 0x233
	char bCastVolumetricTranslucentShadow : 1; // 0x234
	char bSelfShadowOnly : 1; // 0x234
	char bCastFarShadow : 1; // 0x234
	char bCastInsetShadow : 1; // 0x234
	char bCastCinematicShadow : 1; // 0x234
	char bCastHiddenShadow : 1; // 0x234
	char bCastShadowAsTwoSided : 1; // 0x234
	char bLightAsIfStatic : 1; // 0x234
	char bLightAttachmentsAsGroup : 1; // 0x235
	char bReceiveMobileCSMShadows : 1; // 0x235
	char bSingleSampleShadowFromStationaryLights : 1; // 0x235
	char bIgnoreRadialImpulse : 1; // 0x235
	char bIgnoreRadialForce : 1; // 0x235
	char bApplyImpulseOnDamage : 1; // 0x235
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x235
	char AlwaysLoadOnClient : 1; // 0x235
	char AlwaysLoadOnServer : 1; // 0x236
	char bUseEditorCompositing : 1; // 0x236
	char bRenderCustomDepth : 1; // 0x236
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x237
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x239
	FLightingChannels LightingChannels; // 0x23a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x23b
	int CustomDepthStencilValue; // 0x23c
	FCustomPrimitiveData CustomPrimitiveData; // 0x240
	int TranslucencySortPriority; // 0x250
	int VisibilityId; // 0x254
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x258
	int VirtualTextureLodBias; // 0x268
	int VirtualTextureCullMips; // 0x26c
	int VirtualTextureMinCoverage; // 0x270
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x274
	float LpvBiasMultiplier; // 0x27c
	float BoundsScale; // 0x288
	TArray<AActor*> MoveIgnoreActors; // 0x298
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2a8
	FBodyInstance BodyInstance; // 0x2c8
	FScriptMulticastDelegate OnComponentHit; // 0x3d8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3d9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3da
	FScriptMulticastDelegate OnComponentWake; // 0x3db
	FScriptMulticastDelegate OnComponentSleep; // 0x3dc
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3de
	FScriptMulticastDelegate OnEndCursorOver; // 0x3df
	FScriptMulticastDelegate OnClicked; // 0x3e0
	FScriptMulticastDelegate OnReleased; // 0x3e1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3e2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3e3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3e4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3e5
	UPrimitiveComponent* LODParentPrimitive; // 0x400
};

struct USkeletalMeshSimplificationSettings : UDeveloperSettings {
	FName SkeletalMeshReductionModuleName; // 0x38
};

struct UBP_AKS74U_StaticInfo_C : UBP_AK74_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UAnimCompress_BitwiseCompressOnly : UAnimCompress {
	FString Description; // 0x28
	char bNeedsSkeleton : 1; // 0x38
	char bEnableSegmenting : 1; // 0x38
	uint32 IdealNumFramesPerSegment; // 0x3c
	uint32 MaxNumFramesPerSegment; // 0x40
	AnimationCompressionFormat TranslationCompressionFormat; // 0x44
	AnimationCompressionFormat RotationCompressionFormat; // 0x45
	AnimationCompressionFormat ScaleCompressionFormat; // 0x46
	float MaxCurveError; // 0x48
};

struct USQForceNetMovementComponent : USQNetMoveComponent {
	FVector TorqueInput; // 0x260
	FVector ForceInput; // 0x26c
	FRotator CurrentRotationalVelocity; // 0x278
	USQForceMovementComponentSettings* ForceComponentSettings; // 0x2a8
	USceneComponent* CenterOfMass; // 0x2b0
};

struct UIpConnection : UNetConnection {
	float SocketErrorDisconnectDelay; // 0x19f0
};

struct UWmfMediaSettings : UObject {
	bool AllowNonStandardCodecs; // 0x28
	bool LowLatency; // 0x29
	bool NativeAudioOut; // 0x2a
	bool HardwareAcceleratedVideoDecoding; // 0x2b
};

struct USQServerListItemWidget : UUserWidget {
	int ItemIndex; // 0x230
	FBlueprintSessionResult SessionResult; // 0x238
	FString ServerName; // 0x2f0
	bool bAnticheatProtected; // 0x300
	bool bIsModded; // 0x301
	bool bIsWhitelisted; // 0x302
	FString GameVersion; // 0x308
	FSQSessionFlagStruct SessionFlagStruct; // 0x318
	int ServerHealth; // 0x320
	bool bLicensedServer; // 0x324
	int MatchTimeout; // 0x328
	bool bPasswordProtected; // 0x32c
	FString LayerNameString; // 0x330
	USQLayer* Layer; // 0x340
	FText LayerName; // 0x348
	FTimespan PlayedTime; // 0x360
	USQFactionSetup* TeamOneFactionSetup; // 0x368
	USQFactionSetup* TeamTwoFactionSetup; // 0x370
	FString GameMode; // 0x378
	int Ping; // 0x388
	int NumPlayers; // 0x38c
	int MaxNumPlayers; // 0x390
	int NumReservedSlots; // 0x394
	int NumQueuedTotal; // 0x398
	int NumQueuedPublic; // 0x39c
	int PublicQueueLimit; // 0x3a0
	int NumQueuedReservedMembers; // 0x3a4
	FSQModInfoRequest ModDetailsRequest; // 0x3a8
	TArray<FSQModLoadProgress> ModLoadProgressArray; // 0x3c0
};

struct UCommandlet : UObject {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UAbilityTask_VisualizeTargeting : UAbilityTask {
	FScriptMulticastDelegate TimeElapsed; // 0x80
};

struct AGameplayAbilityTargetActor_Radius : AGameplayAbilityTargetActor {
	float Radius; // 0x358
};

struct ABP_RPG7_Heat_2mag_Founders_C : ABP_RPG7_Heat_Founders_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct ASQPlayerState : APlayerState {
	bool bUseCustomPingReplicationRate; // 0x3a0
	float SecondsBetweenPingUpdate; // 0x3a4
	float TimeBetweenPlayerCacheChecking; // 0x3ac
	FScriptMulticastDelegate OnTeamStateChangedEvent; // 0x3d8
	FScriptMulticastDelegate OnRoleChangedEvent; // 0x3e8
	TArray<ASQMapMarker*> RelevantMapMarkers; // 0x410
	int TeamId; // 0x420
	int LastTeamChangeTime; // 0x424
	TArray<ASQSoldier*> SoldiersOnScreenSortedByNearestDistanceCache; // 0x488
	TArray<ASQSoldier*> SoldiersHaveLineOfSightCache; // 0x498
	TArray<ASQSoldier*> EnemiesHaveLineOfSightCache; // 0x4a8
	TArray<ASQSoldier*> FriendliesHaveLineOfSightCache; // 0x4b8
	TArray<ASQSoldier*> AllSoldiersCache; // 0x4c8
	TArray<ASQSoldier*> EnemiesCache; // 0x4d8
	TArray<ASQSoldier*> FriendliesCache; // 0x4e8
	TArray<ASQSoldier*> AllSoldiersSortedByNearestDistanceCache; // 0x4f8
	TArray<APawn*> PawnsOnScreenSortedByNearestDistanceCache; // 0x508
	TArray<APawn*> PawnsHaveLineOfSightCache; // 0x518
	TArray<APawn*> EnemyPawnsHaveLineOfSightCache; // 0x528
	TArray<APawn*> FriendlyPawnsHaveLineOfSightCache; // 0x538
	TArray<APawn*> AllPawnsCache; // 0x548
	TArray<APawn*> EnemyPawnsCache; // 0x558
	TArray<APawn*> FriendlyPawnsCache; // 0x568
	TArray<APawn*> AllPawnsSortedByNearestDistanceCache; // 0x578
	TArray<USQVehicleClaim*> AuthorityVehicleClaimsNotExpired; // 0x588
	FDeployableItemsArray PlacedDeployablesArray; // 0x598
	FPlayerStateDataObject PlayerStateData; // 0x6b0
	USQVehicleSeatComponent* CurrentSeat; // 0x718
	ASQTeamState* TeamState; // 0x720
	ASQSquadState* SquadState; // 0x728
	ASQSoldier* Soldier; // 0x730
	APawn* CurrentPawn; // 0x738
	FName CurrentRoleId; // 0x740
	FName DeployRoleId; // 0x748
	USQRoleSettings* CurrentRole; // 0x750
	USQRoleSettings* DeployRole; // 0x758
	FSQPersistedAmmoState PersistedAmmoState; // 0x760
	TMap<UObject*, UObject*> ReplacementClassesMap; // 0x778
	USQCoreStateComponent* StateObject; // 0x7d0
};

struct UMaterialExpressionDepthOfFieldFunction : UMaterialExpression {
	EDepthOfFieldFunctionValue FunctionValue; // 0x40
	FExpressionInput Depth; // 0x44
};

struct UMaterialExpressionSine : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UAnimSharingInstance : UObject {
	TArray<AActor*> RegisteredActors; // 0x28
	UAnimationSharingStateProcessor* StateProcessor; // 0xa8
	TArray<UAnimSequence*> UsedAnimationSequences; // 0xe8
	UEnum* StateEnum; // 0x108
	AActor* SharingActor; // 0x110
};

struct ABP_L85A2_DarkEarth_SUSAT_4mags_C : ABP_L85A2_DarkEarth_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct UBP_Attachment_1p88_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ABP_L85A2AG36_ACOG_UGL_Smoke_C : ABP_L85A2AG36_ACOG_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UCloudStorageBase : UPlatformInterfaceBase {
	TArray<FString> LocalCloudFiles; // 0x38
	char bSuppressDelegateCalls : 1; // 0x48
};

struct ASQHelicopter2 : ASQVehicle {
	USQVehicleCleanupComponent* VehicleCleanupComponent; // 0x828
	float PhysicsToggleThreshold; // 0x830
	float MaxDeltaTime; // 0x834
	float FixedTimestep; // 0x838
	UBoxComponent* BoxCollider; // 0x840
	UCameraComponent* ExternalCamera; // 0x848
	USpringArmComponent* SpringArm; // 0x850
	USQHelicopterMovementComponent* MovementComponent; // 0x858
	USQVehicleEngineComponent* Engine; // 0x860
	USQRotorBladesComponent* MainRotor; // 0x868
	USQRotorBladesComponent* TailRotor; // 0x870
	UStaticMeshComponent* MainBladesCollision; // 0x878
	UStaticMeshComponent* TailBladesCollision; // 0x880
};

struct UBP_RPG7Tandem_StaticInfo_C : UBP_RPG7Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UParticleModuleLifetime : UParticleModuleLifetimeBase {
	FRawDistributionFloat Lifetime; // 0x30
};

struct USQDeployableItemStaticInfo : USQItemStaticInfo {
	UAnimMontage* PlacingDeployableWeaponMontage; // 0x4f8
	UAnimMontage* PlacingDeployable1pMontage; // 0x500
	UAnimMontage* PlacingDeployable3pMontage; // 0x508
	ASQDeployableItem* DeployableClass; // 0x510
	USQDeployableSettings* Deployable; // 0x518
	float PlacingDeployableDuration; // 0x520
	float FinishPlacingDeployableBlendOutDuration; // 0x524
};

struct UMultiLineEditableTextBox : UTextLayoutWidget {
	FText Text; // 0x128
	FText HintText; // 0x140
	DelegateProperty HintTextDelegate; // 0x158
	FEditableTextBoxStyle WidgetStyle; // 0x168
	FTextBlockStyle TextStyle; // 0x958
	bool bIsReadOnly; // 0xbc0
	bool AllowContextMenu; // 0xbc1
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0xbc2
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xbc3
	USlateWidgetStyleAsset* Style; // 0xbc8
	FSlateFontInfo Font; // 0xbd0
	FLinearColor ForegroundColor; // 0xc20
	FLinearColor BackgroundColor; // 0xc30
	FLinearColor ReadOnlyForegroundColor; // 0xc40
	FScriptMulticastDelegate OnTextChanged; // 0xc50
	FScriptMulticastDelegate OnTextCommitted; // 0xc60
};

struct USQRepairToolStaticInfo : USQItemStaticInfo {
	UAnimMontage* RepairingWeaponBeginUseMontage; // 0x4f8
	UAnimMontage* Repairing1pBeginUseMontage; // 0x500
	UAnimMontage* Repairing3pBeginUseMontage; // 0x508
	UAnimMontage* RepairingWeaponEndUseMontage; // 0x510
	UAnimMontage* Repairing1pEndUseMontage; // 0x518
	UAnimMontage* Repairing3pEndUseMontage; // 0x520
	UAnimMontage* AltRepairingWeaponBeginUseMontage; // 0x528
	UAnimMontage* AltRepairing1pBeginUseMontage; // 0x530
	UAnimMontage* AltRepairing3pBeginUseMontage; // 0x538
	UAnimMontage* AltRepairingWeaponEndUseMontage; // 0x540
	UAnimMontage* AltRepairing1pEndUseMontage; // 0x548
	UAnimMontage* AltRepairing3pEndUseMontage; // 0x550
	USoundCue* RepairingSound; // 0x558
	float RepairingInterval; // 0x560
	float RepairAmount; // 0x564
};

struct USoundNodeOscillator : USoundNode {
	char bModulateVolume : 1; // 0x40
	char bModulatePitch : 1; // 0x40
	float AmplitudeMin; // 0x44
	float AmplitudeMax; // 0x48
	float FrequencyMin; // 0x4c
	float FrequencyMax; // 0x50
	float OffsetMin; // 0x54
	float OffsetMax; // 0x58
	float CenterMin; // 0x5c
	float CenterMax; // 0x60
};

struct ANavMeshBoundsVolume : AVolume {
	FNavAgentSelector SupportedAgents; // 0x280
};

struct UMaterialExpressionBlackBody : UMaterialExpression {
	FExpressionInput Temp; // 0x40
};

struct UMaterialExpressionSceneDepth : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput Coordinates; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct USQMapPawnIconWidget : USQMapIconWidget {
	bool bIsSL; // 0x250
	bool bIsInSameSquad; // 0x251
	bool bIsInSameTeam; // 0x252
	ASQTeamState* CurrentTeam; // 0x258
	bool bIsSelf; // 0x260
};

struct USQRotorWashEffectSender : USceneComponent {
	TArray<USQRotorWashEffectListener*> ActiveListeners; // 0x218
	float EffectRadius; // 0x228
	FRotorWashData EmitterData; // 0x230
};

struct USQMapVehicleIconWidget : USQMapPawnIconWidget {
	bool bIsSL; // 0x250
	bool bIsInSameSquad; // 0x251
	bool bIsInSameTeam; // 0x252
	ASQTeamState* CurrentTeam; // 0x258
	bool bIsSelf; // 0x260
};

struct UStaticCableComponent : UCableComponent {
	float SleepMoveSensitivity; // 0x4c0
	float SleepTimeSensitivity; // 0x4c4
};

struct USaveData_UI_C : USaveGame {
	bool Show Map Roles; // 0x28
	bool SL Icon Always On; // 0x29
	bool Show Stance Indicator; // 0x2a
	bool Show FOB Radius; // 0x2b
	bool Show FOB Supplies; // 0x2c
	bool Show Team Waypoints; // 0x2d
	bool Show Grid; // 0x2e
	bool Show Spawns; // 0x2f
	bool Show Weapons in Deployment; // 0x30
	bool Show FT In Name Tag; // 0x31
	float Map Marker Scale; // 0x34
	float Lattice Opacity; // 0x38
	float Grid Opacity; // 0x3c
	bool SkipGiveUpOption; // 0x40
	bool Show Fireteam Letters; // 0x41
	bool Show Deployment Tutorial; // 0x42
	bool Show Game Mode Animation; // 0x43
	bool Show Whitelist Mods; // 0x44
	bool Show Modded Servers; // 0x45
	bool Show Vehicle Keybinds; // 0x46
	bool Show TC Zones; // 0x47
	bool Play Capture Sounds; // 0x48
	TArray<FString> FavouriteServers; // 0x50
	bool Show Favourites Only; // 0x60
	bool Show Full Servers; // 0x61
	E_SortType LastSortType; // 0x62
	bool LastAscendingSortType; // 0x63
	bool DisableOnScreenChat; // 0x64
	bool Show Director Lines; // 0x65
};

struct UParticleModuleCameraBase : UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UMovieSceneIntegerSection : UMovieSceneSection {
	FMovieSceneIntegerChannel IntegerCurve; // 0xe0
};

struct UMovieSceneCameraAnimTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraAnimSections; // 0x58
};

struct ABP_M4M203_M68_UGL_Woodland_Smoke_Red_C : ABP_M4M203_M68_UGL_Woodland_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_L85A2AG36_ElcanLDS_UGL_Smoke_Blue_C : ABP_L85A2AG36_ElcanLDS_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionBreakMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput MaterialAttributes; // 0x40
};

struct UMaterialParameterCollection : UObject {
	FGuid StateId; // 0x28
	TArray<FCollectionScalarParameter> ScalarParameters; // 0x38
	TArray<FCollectionVectorParameter> VectorParameters; // 0x48
};

struct ABP_M4A1_M68_Foregrip_Tracer_Founders_C : ABP_M4A1_M68_Foregrip_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAbilityTask_WaitGameplayEffectStackChange : UAbilityTask {
	FScriptMulticastDelegate OnChange; // 0x80
	FScriptMulticastDelegate InvalidHandle; // 0x90
};

struct UM9A1_beretta_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_8E65C44940820A1F12B793937B1D8535; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_64C8B407467B62C8941E248426E538A6; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_36AA9BB84117A4D6C9B8D6B0A4126E88; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_AD09D28A4DA793462E295EB32C138F1B; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_167736564A33C82E1DA081A7B9B97975; // 0x468
	FAnimNode_Slot AnimGraphNode_Slot_932A6F5C4EB65633CEC5DA872A7F7D4B; // 0x4b0
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_1ADEA3D9497AF5DE4789A5BD8D5FE6C9; // 0x4f8
};

struct ULevelStreamingAlwaysLoaded : ULevelStreaming {
	UWorld* WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int LevelLODIndex; // 0xb0
	int StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xba
	char bShouldBeLoaded : 1; // 0xba
	char bLocked : 1; // 0xba
	char bIsStatic : 1; // 0xba
	char bShouldBlockOnLoad : 1; // 0xba
	char bShouldBlockOnUnload : 1; // 0xbb
	char bDisableDistanceStreaming : 1; // 0xbb
	char bDrawOnLevelStatusMap : 1; // 0xbb
	FLinearColor LevelColor; // 0xbc
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd0
	float MinTimeBetweenVolumeUnloadRequests; // 0xe0
	FScriptMulticastDelegate OnLevelLoaded; // 0xe8
	FScriptMulticastDelegate OnLevelUnloaded; // 0xf8
	FScriptMulticastDelegate OnLevelShown; // 0x108
	FScriptMulticastDelegate OnLevelHidden; // 0x118
	ULevel* LoadedLevel; // 0x128
	ULevel* PendingUnloadLevel; // 0x130
};

struct USQSoldierMedicalComponent : USceneComponent {
	float SoldierHealthPerSecond; // 0x218
	float ConstructionPointsPerSecondHealth; // 0x21c
	float AmmoPointsPerSecondHealth; // 0x220
};

struct ABP_AK74MGP25_1P78_UGL_Desert_Smoke_Red_C : ABP_AK74MGP25_1P78_UGL_Desert_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UGameViewportClient : UScriptViewportClient {
	UConsole* ViewportConsole; // 0x40
	TArray<FDebugDisplayProperty> DebugProperties; // 0x48
	UWorld* World; // 0x78
	UGameInstance* GameInstance; // 0x80
};

struct ASQMedicBag : ASQHealingEquipableItem {
	USQMedicBagStaticInfo* MedicBagStaticInfo; // 0x528
	FTimerHandle TimerHandle; // 0x530
};

struct UFrameGrabberProtocol : UMovieSceneImageCaptureProtocolBase {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UFont : UObject {
	EFontCacheType FontCacheType; // 0x30
	TArray<FFontCharacter> Characters; // 0x38
	TArray<UTexture2D*> Textures; // 0x48
	int IsRemapped; // 0x58
	float EmScale; // 0x5c
	float Ascent; // 0x60
	float Descent; // 0x64
	float Leading; // 0x68
	int Kerning; // 0x6c
	FFontImportOptionsData ImportOptions; // 0x70
	int NumCharacters; // 0x120
	TArray<int> MaxCharHeight; // 0x128
	float ScalingFactor; // 0x138
	int LegacyFontSize; // 0x13c
	FName LegacyFontName; // 0x140
	FCompositeFont CompositeFont; // 0x148
};

struct UParticleModuleOrbitBase : UParticleModule {
	char bUseEmitterTime : 1; // 0x30
};

struct USQUISettings : UDeveloperSettings {
	FColor Yellow; // 0x38
	FColor Grey; // 0x3c
	FColor Other; // 0x40
	FLinearColor NeutralColor; // 0x44
	FLinearColor FriendlyColor; // 0x54
	FLinearColor EnemyColor; // 0x64
	FLinearColor SquadColor; // 0x74
};

struct USQVoteSessionAuthority : USQVoteSession {
	ESQAdminAccessLevels AccessFilter; // 0x88
	TArray<int> TeamFilter; // 0x90
	TArray<USQVotingComponent*> Voters; // 0xa0
	TArray<FName> RecordedVotes; // 0xb0
	FScriptMulticastDelegate RS_OnResult; // 0xc0
	FScriptMulticastDelegate RS_OnPresentationEnded; // 0xd0
	bool HasChanges; // 0xe0
	bool IsFinished; // 0xe1
	bool HasPresentationEnded; // 0xe2
	FName WinnerId; // 0xe4
};

struct ABP_RPG7V2_Heat_C : ABP_RPG7V2_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UBP_MaterialEffects_Frag_40mm_C : UBP_MaterialEffects_Frag_C {
	TMap<USQPhysicalMaterial*, FSQEffectsSet> Effects; // 0x28
};

struct UPawnAction_Move : UPawnAction {
	AActor* GoalActor; // 0x98
	FVector GoalLocation; // 0xa0
	float AcceptableRadius; // 0xac
	UNavigationQueryFilter* FilterClass; // 0xb0
	char bAllowStrafe : 1; // 0xb8
	char bFinishOnOverlap : 1; // 0xb8
	char bUsePathfinding : 1; // 0xb8
	char bAllowPartialPath : 1; // 0xb8
	char bProjectGoalToNavigation : 1; // 0xb8
	char bUpdatePathToGoal : 1; // 0xb8
	char bAbortChildActionOnPathChange : 1; // 0xb8
};

struct USQVehicleUIStaticDataAsset : UDataAsset {
	UTexture2D* MapIcon; // 0x30
	float MapIconRotation; // 0x38
	UTexture2D* SideImage; // 0x40
	UTexture2D* FrontImage; // 0x48
};

struct ABP_M4A1_C : ABP_GenericRifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UPanelWidget : UWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct AInteractiveFoliageActor : AStaticMeshActor {
	UCapsuleComponent* CapsuleComponent; // 0x258
	FVector TouchingActorEntryPosition; // 0x260
	FVector FoliageVelocity; // 0x26c
	FVector FoliageForce; // 0x278
	FVector FoliagePosition; // 0x284
	float FoliageDamageImpulseScale; // 0x290
	float FoliageTouchImpulseScale; // 0x294
	float FoliageStiffness; // 0x298
	float FoliageStiffnessQuadratic; // 0x29c
	float FoliageDamping; // 0x2a0
	float MaxDamageImpulse; // 0x2a4
	float MaxTouchImpulse; // 0x2a8
	float MaxForce; // 0x2ac
	float Mass; // 0x2b0
};

struct UDefaultLevelSequenceInstanceData : UObject {
	AActor* TransformOriginActor; // 0x30
	FTransform TransformOrigin; // 0x40
};

struct UHapticFeedbackEffect_Curve : UHapticFeedbackEffect_Base {
	FHapticFeedbackDetails_Curve HapticDetails; // 0x28
};

struct ASQMapMarker : ASQTeamActor {
	USQMapIconComponent* MapIcon; // 0x260
	USQCoreStateComponent* StateObject; // 0x268
	int Squad; // 0x270
	int FireTeamId; // 0x274
	ESQEmotes PlacementEmote; // 0x278
};

struct UMaterialExpressionGIReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput StaticIndirect; // 0x54
	FExpressionInput DynamicIndirect; // 0x68
};

struct ABP_L85A2_Foregrip_C : ABP_L85A2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74_C : ABP_GenericRifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UInvalidationBox : UContentWidget {
	bool bCanCache; // 0x120
	bool CacheRelativeTransforms; // 0x121
};

struct AMaterialInstanceActor : AActor {
	TArray<AActor*> TargetActors; // 0x248
};

struct UFieldSystemMetaDataIteration : UFieldSystemMetaData {
	int Iterations; // 0xd8
};

struct UMaterialExpressionCosine : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UPrefabLevelExporter : UPrefabExporter {
	UObject* SupportedClass; // 0x28
	UObject* ExportRootScope; // 0x30
	TArray<FString> FormatExtension; // 0x38
	TArray<FString> FormatDescription; // 0x48
	int PreferredFormatIndex; // 0x58
	int TextIndent; // 0x5c
	char bText : 1; // 0x60
	char bSelectedOnly : 1; // 0x60
	char bForceFileOperations : 1; // 0x60
	UAssetExportTask* ExportTask; // 0x68
};

struct ASQAASRuleset : ASQGameModeRuleset {
	ASQAASGraph* GraphActor; // 0x2a8
};

struct UEnvQueryTest : UEnvQueryNode {
	int TestOrder; // 0x30
	EEnvTestPurpose TestPurpose; // 0x34
	FString TestComment; // 0x38
	EEnvTestFilterOperator MultipleContextFilterOp; // 0x48
	EEnvTestScoreOperator MultipleContextScoreOp; // 0x49
	EEnvTestFilterType FilterType; // 0x4a
	FAIDataProviderBoolValue BoolValue; // 0x50
	FAIDataProviderFloatValue FloatValueMin; // 0x80
	FAIDataProviderFloatValue FloatValueMax; // 0xb0
	EEnvTestScoreEquation ScoringEquation; // 0xe1
	EEnvQueryTestClamping ClampMinType; // 0xe2
	EEnvQueryTestClamping ClampMaxType; // 0xe3
	EEQSNormalizationType NormalizationType; // 0xe4
	FAIDataProviderFloatValue ScoreClampMin; // 0xe8
	FAIDataProviderFloatValue ScoreClampMax; // 0x118
	FAIDataProviderFloatValue ScoringFactor; // 0x148
	FAIDataProviderFloatValue ReferenceValue; // 0x178
	bool bDefineReferenceValue; // 0x1a8
	char bWorkOnFloatValues : 1; // 0x1b8
};

struct UMultiPackerRuntimeBinPack : UObject {
	TArray<UMaxRectsBinPack*> BinPackPages; // 0x28
	TArray<UTextureRenderTarget2D*> RenderTargetPages; // 0x38
	UObject* WorldContext; // 0x48
	int Size; // 0x50
	bool Alpha; // 0x54
	TMap<FName, FMaterialDataBinPack> MaterialMap; // 0x58
};

struct UPartyMember : UObject {
	USocialUser* SocialUser; // 0x68
};

struct UReplicationGraphNode_ActorList : UReplicationGraphNode {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct ALandscapeGizmoActiveActor : ALandscapeGizmoActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct UVOIPTalker : UActorComponent {
	FVoiceSettings Settings; // 0xd8
};

struct UInterpTrackInstFloatMaterialParam : UInterpTrackInst {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<float> ResetFloats; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackFloatMaterialParam* InstancedTrack; // 0x58
};

struct UPhysicsAsset : UObject {
	TArray<int> BoundsBodies; // 0x30
	TArray<USkeletalBodySetup*> SkeletalBodySetups; // 0x40
	TArray<UPhysicsConstraintTemplate*> ConstraintSetup; // 0x50
	char bNotForDedicatedServer : 1; // 0x60
	UThumbnailInfo* ThumbnailInfo; // 0x108
	TArray<UBodySetup*> BodySetup; // 0x110
};

struct UCheatManager : UObject {
	ADebugCameraController* DebugCameraControllerRef; // 0x28
	ADebugCameraController* DebugCameraControllerClass; // 0x30
};

struct ABP_M4M203_M68_UGL_Woodland_HE_C : ABP_M4M203_M68_UGL_Woodland_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct AGameState : AGameStateBase {
	FName MatchState; // 0x288
	FName PreviousMatchState; // 0x290
	int ElapsedTime; // 0x298
};

struct UVariantObjectBinding : UObject {
	FSoftObjectPath ObjectPtr; // 0x28
	UObject* LazyObjectPtr; // 0x40
	TArray<UPropertyValue*> CapturedProperties; // 0x60
	TArray<FFunctionCaller> FunctionCallers; // 0x70
};

struct ABP_AK74M_1P78_Tracer_Desert_C : ABP_AK74M_1P78_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UPlayFabEventsAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xa0
	UPlayFabJsonObject* RequestJsonObj; // 0xa8
	UPlayFabJsonObject* ResponseJsonObj; // 0xb0
};

struct ABP_M4M203_M150_UGL_Woodland_Smoke_C : ABP_M4M203_M150_UGL_Woodland_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBP_Attachment_1p88_Blur_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UObjectLibrary : UObject {
	UObject* ObjectBaseClass; // 0x28
	bool bHasBlueprintClasses; // 0x30
	TArray<UObject*> Objects; // 0x38
	TArray<TWeakObjectPtr<UObject>> WeakObjects; // 0x48
	bool bUseWeakReferences; // 0x58
	bool bIsFullyLoaded; // 0x59
};

struct UAISenseConfig_Touch : UAISenseConfig {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UParticleModuleSpawnPerUnit : UParticleModuleSpawnBase {
	float UnitScalar; // 0x38
	FRawDistributionFloat SpawnPerUnit; // 0x40
	char bIgnoreSpawnRateWhenMoving : 1; // 0x78
	float MovementTolerance; // 0x7c
	float MaxFrameDistance; // 0x80
	char bIgnoreMovementAlongX : 1; // 0x84
	char bIgnoreMovementAlongY : 1; // 0x84
	char bIgnoreMovementAlongZ : 1; // 0x84
};

struct USQSoldierMovement : UCharacterMovementComponent {
	UCurveFloat* SoldierDefaultInclineMovementSpeedCurve; // 0x730
	float WalkSpeedMultiplier; // 0x738
	float StrafeSpeedMultiplier; // 0x73c
	float LeaningStandSpeedMultiplier; // 0x740
	float LeaningCrouchSpeedMultiplier; // 0x744
	float BackwardsWalkSpeedMultiplier; // 0x748
	float DraggingSpeedMultiplier; // 0x74c
	float OutsidePhysicsSpeedMultiplier; // 0x750
	float AnimationSpeedLimiter; // 0x754
	float SprintSpeedMultiplier; // 0x758
	float MaxSprintAcceleration; // 0x75c
	bool WasRunning; // 0x760
	float MaxWalkSpeedProne; // 0x764
	float ProneHalfHeight; // 0x768
	char bCanWalkOffLedgesWhenProne : 1; // 0x76c
	char bCanSprintWhenCrouched : 1; // 0x76c
	char bWantsToProne : 1; // 0x76c
	char bProneMaintainsBaseLocation : 1; // 0x76c
	float StickyGroundMultiplier; // 0x770
	float Stamina; // 0x774
	float StaminaMax; // 0x778
	float TiredThreshold; // 0x77c
	float ExhaustedThreshold; // 0x780
	float ExhaustedPenalty; // 0x784
	bool bStaminaExhausted; // 0x788
	float StaminaRegenRate; // 0x78c
	float HurtStaminaRegenRate; // 0x790
	bool bIsHurt; // 0x794
	float UpdateStaminaFrequency; // 0x798
	FTimerHandle StaminaUpdateTimerHandle; // 0x7a0
	float WalkPenalty; // 0x7a8
	float ClimbingPenalty; // 0x7ac
	float MovePenalty; // 0x7b0
	float SprintPenalty; // 0x7b4
	float CrouchPenalty; // 0x7b8
	float CrouchSprintPenalty; // 0x7bc
	float PronePenalty; // 0x7c0
	float ProneSprintPenalty; // 0x7c4
	float DraggingPenalty; // 0x7c8
	float StandLeanPenalty; // 0x7cc
	float CrouchLeanPenalty; // 0x7d0
	float BurstLeanPenalty; // 0x7d4
	float StandStaminaRegenMultiplier; // 0x7d8
	float CrouchStaminaRegenMultiplier; // 0x7dc
	float ProneStaminaRegenMultiplier; // 0x7e0
	char bLimitConsecutiveJumping : 1; // 0x7e8
	float ConsecutiveJumpingPenaltyReductionTime; // 0x7ec
	TArray<float> ConsecutiveJumpingVelocityMultipliers; // 0x7f0
	int ConsecutiveJumpingArrayIndex; // 0x800
	float LastJumpPenaltyChangeTime; // 0x804
	char bStaminaLimitsRunning : 1; // 0x808
	char bStaminaLimitsJumping : 1; // 0x808
	float StaminaUseThreshold; // 0x80c
	char bJumpingUsesStamina : 1; // 0x810
	float StaminaLossPerJump; // 0x814
	TArray<FVector> ClimbMovePath; // 0x820
	TArray<float> ClimbInterpolationTimes; // 0x830
	float BipodMaxAnglePerIteration; // 0x840
	ASQSoldier* SquadCharacterOwner; // 0x858
	int ServerUpdateRate; // 0x860
	int NonRenderedUpdateRate; // 0x864
	int NearByNonRenderedUpdateRate; // 0x868
	int NearByNonRenderedUpdateRateDistance; // 0x86c
	TArray<float> DistanceFactorThesholds; // 0x870
	TArray<USkinnedMeshComponent*> SkinnedComponents; // 0x880
	char bAimDownSights : 1; // 0x898
};

struct UInterpTrackInstEvent : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UHierarchicalInstancedStaticMeshComponent : UInstancedStaticMeshComponent {
	TArray<int> SortedInstances; // 0x538
	int NumBuiltInstances; // 0x548
	FBox BuiltInstanceBounds; // 0x550
	FBox UnbuiltInstanceBounds; // 0x56c
	TArray<FBox> UnbuiltInstanceBoundsList; // 0x588
	char bEnableDensityScaling : 1; // 0x598
	int OcclusionLayerNumNodes; // 0x5a0
	FBoxSphereBounds CacheMeshExtendedBounds; // 0x5a4
	bool bDisableCollision; // 0x5c4
	int InstanceCountToRender; // 0x5c8
};

struct ABP_M4_Recruit_Founders_C : ABP_M4_Recruit_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UChildActorComponent : USceneComponent {
	AActor* ChildActorClass; // 0x218
	AActor* ChildActor; // 0x220
	AActor* ChildActorTemplate; // 0x228
};

struct UAimOffsetBlendSpace : UBlendSpace {
	EBlendSpaceAxis AxisToScaleAnimation; // 0x148
};

struct UMaterialExpressionArctangent2Fast : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct UMaterialExpressionPower : UMaterialExpression {
	FExpressionInput Base; // 0x40
	FExpressionInput Exponent; // 0x54
	float ConstExponent; // 0x68
};

struct USpacer : UWidget {
	FVector2D Size; // 0x108
};

struct UWidget : UVisual {
	UPanelSlot* Slot; // 0x28
	DelegateProperty bIsEnabledDelegate; // 0x30
	FText ToolTipText; // 0x40
	DelegateProperty ToolTipTextDelegate; // 0x58
	UWidget* ToolTipWidget; // 0x68
	DelegateProperty ToolTipWidgetDelegate; // 0x70
	DelegateProperty VisibilityDelegate; // 0x80
	FWidgetTransform RenderTransform; // 0x90
	FVector2D RenderTransformPivot; // 0xac
	char bIsVariable : 1; // 0xb4
	char bCreatedByConstructionScript : 1; // 0xb4
	char bIsEnabled : 1; // 0xb4
	char bOverride_Cursor : 1; // 0xb4
	USlateAccessibleWidgetData* AccessibleWidgetData; // 0xb8
	char bIsVolatile : 1; // 0xc0
	EMouseCursor cursor; // 0xc1
	EWidgetClipping Clipping; // 0xc2
	ESlateVisibility Visibility; // 0xc3
	float RenderOpacity; // 0xc4
	UWidgetNavigation* Navigation; // 0xc8
	EFlowDirectionPreference FlowDirectionPreference; // 0xd0
	TArray<UPropertyBinding*> NativeBindings; // 0xf8
};

struct URelativeCanvasPanel : UCanvasPanel {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct ASQDeployableSpawner : ASQSpawner {
	ESQTeam NeutralCopyDeployableFromTeam; // 0x2d8
	USQDeployableSettings* SpecificDeployable; // 0x2e0
};

struct ABP_AK74GP25_UGL_Smoke_Founders_C : ABP_AK74GP25_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UEnvQueryTest_PathfindingBatch : UEnvQueryTest_Pathfinding {
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x238
};

struct UEnvQueryManager : UAISubsystem {
	TArray<FEnvQueryInstanceCache> InstanceCache; // 0xa8
	TArray<UEnvQueryContext*> LocalContexts; // 0xb8
	TArray<UEnvQueryInstanceBlueprintWrapper*> GCShieldedWrappers; // 0xc8
	float MaxAllowedTestingTime; // 0x12c
	bool bTestQueriesUsingBreadth; // 0x130
	int QueryCountWarningThreshold; // 0x134
	double QueryCountWarningInterval; // 0x138
};

struct UToIntegerField : UFieldNodeInt {
	UFieldNodeFloat* FloatField; // 0xd8
};

struct UButton : UContentWidget {
	USlateWidgetStyleAsset* Style; // 0x120
	FButtonStyle WidgetStyle; // 0x128
	FLinearColor ColorAndOpacity; // 0x3a0
	FLinearColor BackgroundColor; // 0x3b0
	EButtonClickMethod ClickMethod; // 0x3c0
	EButtonTouchMethod TouchMethod; // 0x3c1
	EButtonPressMethod PressMethod; // 0x3c2
	bool IsFocusable; // 0x3c3
	FScriptMulticastDelegate OnClicked; // 0x3c8
	FScriptMulticastDelegate OnPressed; // 0x3d8
	FScriptMulticastDelegate OnReleased; // 0x3e8
	FScriptMulticastDelegate OnHovered; // 0x3f8
	FScriptMulticastDelegate OnUnhovered; // 0x408
};

struct USQVehicleDepotComponent : USceneComponent {
	float SecondsPerMag; // 0x220
	float VehicleHealthPerSecond; // 0x224
	float ConstructionPointsPerSecondRepair; // 0x228
	float SoldierHealthPerSecond; // 0x22c
	TMap<ASQVehicle*, float> TimeInRearm; // 0x230
	TArray<AActor*> CurrentOverlappedActors; // 0x280
};

struct UGameplayEffectUIData_TextOnly : UGameplayEffectUIData {
	FText Description; // 0x28
};

struct APlayerController : AController {
	UPlayer* Player; // 0x2c0
	APawn* AcknowledgedPawn; // 0x2c8
	UInterpTrackInstDirector* ControllingDirTrackInst; // 0x2d0
	AHUD* MyHUD; // 0x2d8
	APlayerCameraManager* PlayerCameraManager; // 0x2e0
	APlayerCameraManager* PlayerCameraManagerClass; // 0x2e8
	bool bAutoManageActiveCameraTarget; // 0x2f0
	FRotator TargetViewRotation; // 0x2f4
	float SmoothTargetViewRotationSpeed; // 0x30c
	TArray<AActor*> HiddenActors; // 0x318
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x328
	float LastSpectatorStateSynchTime; // 0x33c
	FVector LastSpectatorSyncLocation; // 0x340
	FRotator LastSpectatorSyncRotation; // 0x34c
	int ClientCap; // 0x358
	UCheatManager* CheatManager; // 0x360
	UCheatManager* CheatClass; // 0x368
	UPlayerInput* PlayerInput; // 0x370
	TArray<FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x378
	char bPlayerIsWaiting : 1; // 0x3f8
	char NetPlayerIndex; // 0x3fc
	UNetConnection* PendingSwapConnection; // 0x438
	UNetConnection* NetConnection; // 0x440
	float InputYawScale; // 0x454
	float InputPitchScale; // 0x458
	float InputRollScale; // 0x45c
	char bShowMouseCursor : 1; // 0x460
	char bEnableClickEvents : 1; // 0x460
	char bEnableTouchEvents : 1; // 0x460
	char bEnableMouseOverEvents : 1; // 0x460
	char bEnableTouchOverEvents : 1; // 0x460
	char bForceFeedbackEnabled : 1; // 0x460
	float ForceFeedbackScale; // 0x464
	TArray<FKey> ClickEventKeys; // 0x468
	EMouseCursor DefaultMouseCursor; // 0x478
	EMouseCursor CurrentMouseCursor; // 0x479
	ECollisionChannel DefaultClickTraceChannel; // 0x47a
	ECollisionChannel CurrentClickTraceChannel; // 0x47b
	float HitResultTraceDistance; // 0x47c
	uint16 SeamlessTravelCount; // 0x480
	uint16 LastCompletedSeamlessTravelCount; // 0x482
	UInputComponent* InactiveStateInputComponent; // 0x4f8
	char bShouldPerformFullTickWhenPaused : 1; // 0x500
	UTouchInterface* CurrentTouchInterface; // 0x518
	ASpectatorPawn* SpectatorPawn; // 0x570
	bool bIsLocalPlayerController; // 0x57c
	FVector SpawnLocation; // 0x580
};

struct USoundEffectSourcePresetChain : UObject {
	TArray<FSourceEffectChainEntry> Chain; // 0x28
	char bPlayEffectChainTails : 1; // 0x38
};

struct UNavigationSystemV1 : UNavigationSystemBase {
	ANavigationData* MainNavData; // 0x28
	ANavigationData* AbstractNavData; // 0x30
	UClass* CrowdManagerClass; // 0x38
	char bAutoCreateNavigationData : 1; // 0x60
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x60
	char bAllowClientSideNavigation : 1; // 0x60
	char bShouldDiscardSubLevelNavData : 1; // 0x60
	char bTickWhilePaused : 1; // 0x60
	char bSupportRebuilding : 1; // 0x60
	char bInitialBuildingLocked : 1; // 0x60
	char bSkipAgentHeightCheckWhenPickingNavData : 1; // 0x61
	ENavDataGatheringModeConfig DataGatheringMode; // 0x64
	char bGenerateNavigationOnlyAroundNavigationInvokers : 1; // 0x68
	float ActiveTilesUpdateInterval; // 0x6c
	TArray<FNavDataConfig> SupportedAgents; // 0x70
	float DirtyAreasUpdateFreq; // 0x80
	TArray<ANavigationData*> NavDataSet; // 0x88
	TArray<ANavigationData*> NavDataRegistrationQueue; // 0x98
	FScriptMulticastDelegate OnNavDataRegisteredEvent; // 0x108
	FScriptMulticastDelegate OnNavigationGenerationFinishedDelegate; // 0x118
	FNavigationSystemRunMode OperationMode; // 0x204
};

struct UInterpTrackFloatParticleParam : UInterpTrackFloatBase {
	FName ParamName; // 0x90
};

struct UEdGraph : UObject {
	UEdGraphSchema* Schema; // 0x28
	TArray<UEdGraphNode*> Nodes; // 0x30
	char bEditable : 1; // 0x40
	char bAllowDeletion : 1; // 0x40
	char bAllowRenaming : 1; // 0x40
};

struct UMaterialExpressionMaterialProxyReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0x40
	FExpressionInput MaterialProxy; // 0x54
};

struct ATriggerCapsule : ATriggerBase {
	UShapeComponent* CollisionComponent; // 0x248
};

struct UBP_Attachment_SVD_front_wood_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UM17MHS_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_2F110A8A4C4870BD3803E0B08100DC0B; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_ABC0F150423DB5FD9540FDAC46008E83; // 0x2e8
	FAnimNode_Slot AnimGraphNode_Slot_20D0922F4F9EB6A8D8A038B83E0658E7; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_DA358E70404CBAAE0B1D6E9CBE766235; // 0x3f0
	FAnimNode_Slot AnimGraphNode_Slot_176B52864E0B78B665C825839B683C00; // 0x438
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34CDCDFB4A0665B613B8199D8AE1D2C6; // 0x480
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_F35D1E5F4AE30D719F7940824FB010A3; // 0x4f8
};

struct UMaterialExpressionStaticBool : UMaterialExpression {
	char Value : 1; // 0x40
};

struct AVolume : ABrush {
	EBrushType BrushType; // 0x248
	FColor BrushColor; // 0x24c
	int PolyFlags; // 0x250
	char bColored : 1; // 0x254
	char bSolidWhenSelected : 1; // 0x254
	char bPlaceableFromClassBrowser : 1; // 0x254
	char bNotForClientOrServer : 1; // 0x254
	UModel* Brush; // 0x258
	UBrushComponent* BrushComponent; // 0x260
	char bInManipulation : 1; // 0x268
	TArray<FGeomSelection> SavedSelections; // 0x270
};

struct USQRichTextBlock : UWidget {
	FText Text; // 0x108
	DelegateProperty TextDelegate; // 0x120
	FSlateFontInfo Font; // 0x130
	FLinearColor Color; // 0x180
	FSlateFontInfo HyperlinkFont; // 0x190
	FLinearColor HyperlinkColor; // 0x1e0
	ETextJustify Justification; // 0x1f0
	bool AutoWrapText; // 0x1f1
	float WrapTextAt; // 0x1f4
	FMargin Margin; // 0x1f8
	float LineHeightPercentage; // 0x208
	FText TextWithMarkup; // 0x210
};

struct USQApprovalQueueWidget : USQUserWidget {
	USQApprovalEntryWidget* ApprovalEntry; // 0x230
	UScrollBox* ScrollBoxCPP; // 0x238
	TMap<uint32, USQApprovalEntryWidget*> EntryWidgets; // 0x240
	UTextBlock* ApprovalKeyTextCPP; // 0x290
	UTextBlock* DisapprovalKeyTextCPP; // 0x298
};

struct UEnvQueryTest_Pathfinding : UEnvQueryTest {
	EEnvTestPathfinding TestMode; // 0x1c0
	UEnvQueryContext* Context; // 0x1c8
	FAIDataProviderBoolValue PathFromContext; // 0x1d0
	FAIDataProviderBoolValue SkipUnreachable; // 0x200
	UNavigationQueryFilter* FilterClass; // 0x230
};

struct ABP_L85A2_DarkEarth_ElcanLDS_Foregrip_C : ABP_L85A2_DarkEarth_Foregrip_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
};

struct UParticleModuleEventGenerator : UParticleModuleEventBase {
	TArray<FParticleEvent_GenerateInfo> Events; // 0x30
};

struct UMaterialExpressionCustom : UMaterialExpression {
	FString code; // 0x40
	ECustomMaterialOutputType OutputType; // 0x50
	FString Description; // 0x58
	TArray<FCustomInput> Inputs; // 0x68
};

struct URectLightComponent : ULocalLightComponent {
	float SourceWidth; // 0x370
	float SourceHeight; // 0x374
	float BarnDoorAngle; // 0x378
	float BarnDoorLength; // 0x37c
	UTexture* SourceTexture; // 0x380
};

struct USQMapWidgetSoldier : USQMapWidgetPawn {
	char bIsWounded : 1; // 0x2b8
	char bIsBleeding : 1; // 0x2b8
	char bIsAlive : 1; // 0x2b8
	char bIsInVehicle : 1; // 0x2b8
	char bIsUsingFreeLook : 1; // 0x2b8
	ESQAuthorityTypes LeaderState; // 0x2bc
	int SquadId; // 0x2c0
	int FireTeamId; // 0x2c4
	char bIsMedic : 1; // 0x2c8
	char bIsWithinCanSelfSeeHealthSatusRange : 1; // 0x2c8
	char bCanSelfSeeHealthStatus : 1; // 0x2c8
	float HealthStatusRange; // 0x2cc
	FVector SoldierLocation; // 0x2d0
	USQRoleSettings* CurrentRole; // 0x2e0
	FSQSoldierInfo SoldierInfo; // 0x2e8
	float SquadLeaderZOrder; // 0x310
	float MedicZOrder; // 0x314
	float VehicleViewConeZOrder; // 0x318
};

struct UAnimNotifyState_TimedParticleEffect : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct AActor : UObject {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct USQMapLattice : USQUserWidget {
	TArray<FSQLatticeLine> LatticeLines; // 0x230
	USQCoreStateMapComponent* MapComponent; // 0x240
};

struct UGameEngine : UEngine {
	float MaxDeltaTime; // 0xdb8
	float ServerFlushLogInterval; // 0xdbc
	UGameInstance* GameInstance; // 0xdc0
};

struct UNavCollision : UNavCollisionBase {
	TArray<FNavCollisionCylinder> CylinderCollision; // 0x80
	TArray<FNavCollisionBox> BoxCollision; // 0x90
	UNavArea* AreaClass; // 0xa0
	char bGatherConvexGeometry : 1; // 0xa8
	char bCreateOnClient : 1; // 0xa8
};

struct ABP_AK74MGP25_Rifle_C : ABP_AK74GP25_Rifle_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAsyncActionLoadPrimaryAssetList : UAsyncActionLoadPrimaryAssetBase {
	FScriptMulticastDelegate Completed; // 0x78
};

struct UMaterialExpressionChannelMaskParameter : UMaterialExpressionVectorParameter {
	EChannelMaskParameterColor MaskChannel; // 0x70
	FExpressionInput Input; // 0x74
};

struct UParticleModuleVectorFieldScale : UParticleModuleVectorFieldBase {
	UDistributionFloat* VectorFieldScale; // 0x30
	FRawDistributionFloat VectorFieldScaleRaw; // 0x38
};

struct UInterpTrackFloatAnimBPParam : UInterpTrackFloatBase {
	UObject* AnimBlueprintClass; // 0x90
	UAnimInstance* AnimClass; // 0x98
	FName ParamName; // 0xa0
};

struct UVideoCaptureProtocol : UFrameGrabberProtocol {
	bool bUseCompression; // 0x68
	float CompressionQuality; // 0x6c
};

struct UBP_attachment_SA80_AcogMount_C : USQWeaponAttachment_Scope {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct ABP_L85A2AG36_ACOG_UGL_Smoke_Red_C : ABP_L85A2AG36_ACOG_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleAccelerationBase : UParticleModule {
	char bAlwaysInWorldSpace : 1; // 0x30
};

struct UAK74M_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_53045A3D481E9BCD744378950CF2F784; // 0x2b8
	FAnimNode_Slot AnimGraphNode_Slot_B5DC3B564C87BDB0145E61AEC640C19D; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7B34720F433C890EADEDB39B7AB8A2F5; // 0x330
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7443B5984913D8A6F3EA3BA3CAAB00A0; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_CF85BB6A46D7213AA31533BCEFE0F78F; // 0x468
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_B86637DB4524ACCCB3E0E389D4346D87; // 0x4b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_B4F00A10437E73764F34B1A493BE99C3; // 0x4c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_6074C4954FD40735219BE68D510946DF; // 0x588
};

struct UDialogueVoice : UObject {
	EGrammaticalGender Gender; // 0x28
	EGrammaticalNumber Plurality; // 0x29
	FGuid LocalizationGUID; // 0x2c
};

struct UMovieSceneGeometryCacheTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x58
};

struct UCoreSerializeItemSetCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct ABP_M4A1_M150_Foregrip_Woodland_C : ABP_M4A1_M150_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74MGP25_1P63_UGL_Desert_Smoke_C : ABP_AK74MGP25_1P63_UGL_Desert_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQSquadMemberList : USQUserWidget {
	USQSquadMemberListItem* SquadMemberListItemClass; // 0x230
	UImage* BG_IMGCPP; // 0x238
	UImage* IconImageCPP; // 0x240
	UButton* InviteButtonCPP; // 0x248
	UTextBlock* InviteButtonTextCPP; // 0x250
	UTextBlock* MemberCountCPP; // 0x258
	UButton* LockButtonCPP; // 0x260
	UTextBlock* SquadNameCPP; // 0x268
	UTextBlock* SquadNumberCPP; // 0x270
	UVerticalBox* MemberListBoxCPP; // 0x278
	ASQPlayerController* ParentPC; // 0x280
	ASQPlayerState* CurrentlyOpenedItemPS; // 0x2a0
};

struct USQCoreStateWidget : UUserWidget {
	ESlateVisibility UnconfiguredVisibility; // 0x230
	USQCoreStateWidgetFactory* SourceComponent; // 0x238
	ESQSelectionState SelectionState; // 0x240
	UObject* SelectionInstigator; // 0x248
};

struct ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Smoke_C : ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4M203_M150_UGL_HE_Founders_C : ABP_M4M203_M150_UGL_Parent_Founders_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UGameplayAbility_CharacterJump : UGameplayAbility {
	FGameplayTagContainer AbilityTags; // 0xa8
	bool bReplicateInputDirectly; // 0xc8
	bool RemoteInstanceEnded; // 0xc9
	EGameplayAbilityReplicationPolicy ReplicationPolicy; // 0xce
	EGameplayAbilityInstancingPolicy InstancingPolicy; // 0xcf
	bool bServerRespectsRemoteAbilityCancellation; // 0xd0
	bool bRetriggerInstancedAbility; // 0xd1
	FGameplayAbilityActivationInfo CurrentActivationInfo; // 0xd8
	FGameplayEventData CurrentEventData; // 0xf8
	EGameplayAbilityNetExecutionPolicy NetExecutionPolicy; // 0x1a8
	UGameplayEffect* CostGameplayEffectClass; // 0x1b0
	TArray<FAbilityTriggerData> AbilityTriggers; // 0x1b8
	UGameplayEffect* CooldownGameplayEffectClass; // 0x1c8
	FGameplayTagQuery CancelAbilitiesMatchingTagQuery; // 0x1d0
	FGameplayTagContainer CancelAbilitiesWithTag; // 0x218
	FGameplayTagContainer BlockAbilitiesWithTag; // 0x238
	FGameplayTagContainer ActivationOwnedTags; // 0x258
	FGameplayTagContainer ActivationRequiredTags; // 0x278
	FGameplayTagContainer ActivationBlockedTags; // 0x298
	FGameplayTagContainer SourceRequiredTags; // 0x2b8
	FGameplayTagContainer SourceBlockedTags; // 0x2d8
	FGameplayTagContainer TargetRequiredTags; // 0x2f8
	FGameplayTagContainer TargetBlockedTags; // 0x318
	TArray<UGameplayTask*> ActiveTasks; // 0x358
	UAnimMontage* CurrentMontage; // 0x378
	bool bIsActive; // 0x3e0
	bool bIsCancelable; // 0x3e1
	bool bIsBlockingOtherAbilities; // 0x3e2
	bool bMarkPendingKillOnAbilityEnd; // 0x3f8
};

struct UFoliageType : UObject {
	FGuid UpdateGuid; // 0x28
	float Density; // 0x38
	float DensityAdjustmentFactor; // 0x3c
	float Radius; // 0x40
	EFoliageScaling Scaling; // 0x44
	FFloatInterval ScaleX; // 0x48
	FFloatInterval ScaleY; // 0x50
	FFloatInterval ScaleZ; // 0x58
	FFoliageVertexColorChannelMask VertexColorMaskByChannel[0x4]; // 0x60
	FoliageVertexColorMask VertexColorMask; // 0x90
	float VertexColorMaskThreshold; // 0x94
	char VertexColorMaskInvert : 1; // 0x98
	FFloatInterval ZOffset; // 0x9c
	char AlignToNormal : 1; // 0xa4
	float AlignMaxAngle; // 0xa8
	char RandomYaw : 1; // 0xac
	float RandomPitchAngle; // 0xb0
	FFloatInterval GroundSlopeAngle; // 0xb4
	FFloatInterval Height; // 0xbc
	TArray<FName> LandscapeLayers; // 0xc8
	FName LandscapeLayer; // 0xd8
	char CollisionWithWorld : 1; // 0xe0
	FVector CollisionScale; // 0xe4
	float MinimumLayerWeight; // 0xf0
	FBoxSphereBounds MeshBounds; // 0xf4
	FVector LowBoundOriginRadius; // 0x110
	EComponentMobility Mobility; // 0x11c
	FInt32Interval CullDistance; // 0x120
	char bEnableStaticLighting : 1; // 0x128
	char CastShadow : 1; // 0x128
	char bAffectDynamicIndirectLighting : 1; // 0x128
	char bAffectDistanceFieldLighting : 1; // 0x128
	char bCastDynamicShadow : 1; // 0x128
	char bCastStaticShadow : 1; // 0x128
	char bCastShadowAsTwoSided : 1; // 0x128
	char bReceivesDecals : 1; // 0x128
	char bOverrideLightMapRes : 1; // 0x129
	int OverriddenLightMapRes; // 0x12c
	ELightmapType LightmapType; // 0x130
	char bUseAsOccluder : 1; // 0x134
	FBodyInstance BodyInstance; // 0x138
	EHasCustomNavigableGeometry CustomNavigableGeometry; // 0x248
	FLightingChannels LightingChannels; // 0x249
	char bRenderCustomDepth : 1; // 0x24c
	int CustomDepthStencilValue; // 0x250
	int TranslucencySortPriority; // 0x254
	float CollisionRadius; // 0x258
	float ShadeRadius; // 0x25c
	int NumSteps; // 0x260
	float InitialSeedDensity; // 0x264
	float AverageSpreadDistance; // 0x268
	float SpreadVariance; // 0x26c
	int SeedsPerStep; // 0x270
	int DistributionSeed; // 0x274
	float MaxInitialSeedOffset; // 0x278
	bool bCanGrowInShade; // 0x27c
	bool bSpawnsInShade; // 0x27d
	float MaxInitialAge; // 0x280
	float MaxAge; // 0x284
	float OverlapPriority; // 0x288
	FFloatInterval ProceduralScale; // 0x28c
	FRuntimeFloatCurve ScaleCurve; // 0x298
	int ChangeCount; // 0x320
	char ReapplyDensity : 1; // 0x324
	char ReapplyRadius : 1; // 0x324
	char ReapplyAlignToNormal : 1; // 0x324
	char ReapplyRandomYaw : 1; // 0x324
	char ReapplyScaling : 1; // 0x324
	char ReapplyScaleX : 1; // 0x324
	char ReapplyScaleY : 1; // 0x324
	char ReapplyScaleZ : 1; // 0x324
	char ReapplyRandomPitchAngle : 1; // 0x325
	char ReapplyGroundSlope : 1; // 0x325
	char ReapplyHeight : 1; // 0x325
	char ReapplyLandscapeLayers : 1; // 0x325
	char ReapplyZOffset : 1; // 0x325
	char ReapplyCollisionWithWorld : 1; // 0x325
	char ReapplyVertexColorMask : 1; // 0x325
	char bEnableDensityScaling : 1; // 0x325
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x328
	int VirtualTextureCullMips; // 0x338
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x33c
};

struct ASQGameSession : AGameSession {
	int NumPlayersDiffForTeamChanges; // 0x3e8
	bool bAllowTeamChanges; // 0x3ec
	bool bPreventTeamChangeIfUnbalanced; // 0x3ed
	USQConfig* SquadConfig; // 0x4c8
};

struct UActorSequencePlayer : UMovieSceneSequencePlayer {
	FScriptMulticastDelegate OnPlay; // 0x3b8
	FScriptMulticastDelegate OnPlayReverse; // 0x3c8
	FScriptMulticastDelegate OnStop; // 0x3d8
	FScriptMulticastDelegate OnPause; // 0x3e8
	FScriptMulticastDelegate OnFinished; // 0x3f8
	EMovieScenePlayerStatus Status; // 0x408
	char bReversePlayback : 1; // 0x40c
	UMovieSceneSequence* Sequence; // 0x410
	FFrameNumber StartTime; // 0x418
	int DurationFrames; // 0x41c
	int CurrentNumLoops; // 0x420
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x438
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x450
	FMovieSceneSequenceReplProperties NetSyncProps; // 0x7b8
	TScriptInterface<Class> PlaybackClient; // 0x7c8
};

struct UAbilityTask_WaitCancel : UAbilityTask {
	FScriptMulticastDelegate OnCancel; // 0x80
};

struct USQMapWidgetCameraman : USQMapWidgetPawn {
	char bIsOwned : 1; // 0x2a8
	char bIsOwnedBySelf : 1; // 0x2a8
	char bIsInSelfTeam : 1; // 0x2a8
	char bIsInSelfSquad : 1; // 0x2a8
	int FireTeamIndex; // 0x2ac
	float CameraRotationYaw; // 0x2b0
	float IsSelfZOrder; // 0x2b4
};

struct UAnimCompress : UObject {
	FString Description; // 0x28
	char bNeedsSkeleton : 1; // 0x38
	char bEnableSegmenting : 1; // 0x38
	uint32 IdealNumFramesPerSegment; // 0x3c
	uint32 MaxNumFramesPerSegment; // 0x40
	AnimationCompressionFormat TranslationCompressionFormat; // 0x44
	AnimationCompressionFormat RotationCompressionFormat; // 0x45
	AnimationCompressionFormat ScaleCompressionFormat; // 0x46
	float MaxCurveError; // 0x48
};

struct UArchVisCharMovementComponent : UCharacterMovementComponent {
	FRotator RotationalAcceleration; // 0x730
	FRotator RotationalDeceleration; // 0x73c
	FRotator MaxRotationalVelocity; // 0x748
	float MinPitch; // 0x754
	float MaxPitch; // 0x758
	float WalkingFriction; // 0x75c
	float WalkingSpeed; // 0x760
	float WalkingAcceleration; // 0x764
};

struct UStaticMesh : UStreamableRenderAsset {
	FPerPlatformInt MinLOD; // 0x60
	float LpvBiasMultiplier; // 0x64
	TArray<FStaticMaterial> StaticMaterials; // 0x68
	float LightmapUVDensity; // 0x78
	int LightMapResolution; // 0x7c
	int LightMapCoordinateIndex; // 0x80
	float DistanceFieldSelfShadowBias; // 0x84
	UBodySetup* BodySetup; // 0x88
	int LODForCollision; // 0x90
	char bGenerateMeshDistanceField : 1; // 0x94
	char bStripComplexCollisionForConsole : 1; // 0x94
	char bHasNavigationData : 1; // 0x94
	char bSupportUniformlyDistributedSampling : 1; // 0x94
	char bAllowCPUAccess : 1; // 0x94
	char bSupportGpuUniformlyDistributedSampling : 1; // 0x94
	TArray<UStaticMeshSocket*> Sockets; // 0xb8
	FVector PositiveBoundsExtension; // 0xd8
	FVector NegativeBoundsExtension; // 0xe4
	FBoxSphereBounds ExtendedBounds; // 0xf0
	int ElementToIgnoreForTexFactor; // 0x10c
	TArray<UAssetUserData*> AssetUserData; // 0x110
	UObject* EditableMesh; // 0x128
	UStaticMesh* ComplexCollisionMesh; // 0x130
	UNavCollisionBase* NavCollision; // 0x138
};

struct UARTrackedPoint : UARTrackedGeometry {
	FGuid UniqueID; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct ULandscapeSplineSegment : UObject {
	FLandscapeSplineSegmentConnection Connections[0x2]; // 0x28
	FInterpCurveVector SplineInfo; // 0x58
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	TArray<USplineMeshComponent*> LocalMeshComponents; // 0xa0
};

struct APlayerStartPIE : APlayerStart {
	FName PlayerStartTag; // 0x270
};

struct UWidgetSwitcher : UPanelWidget {
	int ActiveWidgetIndex; // 0x120
};

struct UMovieSceneParticleParameterTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct ABP_AK74GP25_UGL_Parent_C : ABP_Weapon2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4_Recruit_Woodland_C : ABP_M4_Recruit_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBTService_BlueprintBase : UBTService {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	char bShowPropertyDetails : 1; // 0x90
	char bShowEventDetails : 1; // 0x90
};

struct UAREnvironmentCaptureProbe : UARTrackedGeometry {
	UAREnvironmentCaptureProbeTexture* EnvironmentCaptureTexture; // 0xf8
};

struct ABP_L85A2_SUSAT_4mags_C : ABP_L85A2_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct UTilePointer : UObject {
	UTextureRenderTarget2D* TileRT; // 0x28
	UTexture2D* TileTexture; // 0x30
	FString NameUTile; // 0x38
	uint16 TileWidth; // 0x48
	uint16 TileHeight; // 0x4a
	FVector2D TilePadding; // 0x4c
	FTileDatabase TileDatabase; // 0x58
	TArray<UTilePointer*> TileBinPack; // 0xa8
	TArray<FColor> TileData; // 0xb8
	uint32 TileDimension; // 0xc8
};

struct USQAvailability_Action : USQAvailability {
	USQActionSettings* Setting; // 0x50
};

struct ABP_RPG7_Parent_Founders_C : ABP_RPG7_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct AGameplayCueNotify_Actor : AActor {
	bool bAutoDestroyOnRemove; // 0x248
	float AutoDestroyDelay; // 0x24c
	bool WarnIfTimelineIsStillRunning; // 0x250
	bool WarnIfLatentActionIsStillRunning; // 0x251
	FGameplayTag GameplayCueTag; // 0x254
	FGameplayTagReferenceHelper ReferenceHelper; // 0x260
	FName GameplayCueName; // 0x270
	bool bAutoAttachToOwner; // 0x278
	bool IsOverride; // 0x279
	bool bUniqueInstancePerInstigator; // 0x27a
	bool bUniqueInstancePerSourceObject; // 0x27b
	bool bAllowMultipleOnActiveEvents; // 0x27c
	bool bAllowMultipleWhileActiveEvents; // 0x27d
	int NumPreallocatedInstances; // 0x280
};

struct USQMapWidgetForwardBase : USQMapWidgetDeployable {
	char bCanSpawn : 1; // 0x2b0
	char bSieged : 1; // 0x2b0
	char bIsBleeding : 1; // 0x2b0
	float MinActivatedTimeStamp; // 0x2b4
	float ExclusionRadius; // 0x2b8
	float ConstructionRadius; // 0x2bc
	float AmmoPoints; // 0x2c0
	float ConstructionPoints; // 0x2c4
};

struct USQMovementComponentBase : UActorComponent {
	float MaxMoveDeltaTime; // 0xf8
	float VectorEqualityTolerance; // 0xfc
	float AccelDotThresholdCombine; // 0x100
	float AccelDotThreshold; // 0x104
	float AccelMagThreshold; // 0x108
	float AngularErrorTolerance; // 0x10c
	float NetworkMaxSmoothUpdateDistance; // 0x110
	float MinCorrectionDelay; // 0x114
	float NetworkNoSmoothUpdateDistance; // 0x118
	EVectorQuantization LocationQuantizationLevel; // 0x11c
	EVectorQuantization VelocityQuantizationLevel; // 0x11d
	EVectorQuantization AccelerationQuantizationLevel; // 0x11e
	ERotatorQuantization RotationQuantizationLevel; // 0x11f
	AActor* OwnerActor; // 0x120
	AController* Controller; // 0x128
	FSQRepMovement ReplicatedMovement; // 0x178
	float MaxSpeed; // 0x1b8
};

struct UOnlineHotfixManager : UObject {
	FString OssName; // 0x1e0
	FString HotfixManagerClassName; // 0x1f0
	FString DebugPrefix; // 0x200
	TArray<UObject*> AssetsHotfixedFromIniFiles; // 0x210
};

struct UPoseAsset : UAnimationAsset {
	FPoseDataContainer PoseContainer; // 0x80
	bool bAdditivePose; // 0x110
	int BasePoseIndex; // 0x114
	FName RetargetSource; // 0x118
};

struct UMaterialExpressionDistance : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UBP_M4M203_M150_UGL_HE_StaticInfo_C : UBP_M4M203_M150_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct ABP_AK74GP25_UGL_HE_Founders_C : ABP_AK74GP25_UGL_HE_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ALevelVariantSetsActor : AActor {
	FSoftObjectPath LevelVariantSets; // 0x248
};

struct ABP_M4M203_M68_UGL_Smoke_Founders_C : ABP_M4M203_M68_UGL_Parent_Founders_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UAnimSingleNodeInstance : UAnimInstance {
	UAnimationAsset* CurrentAsset; // 0x268
	DelegateProperty PostEvaluateAnimEvent; // 0x270
};

struct UMaterialBillboardComponent : UPrimitiveComponent {
	TArray<FMaterialSpriteElement> Elements; // 0x408
};

struct UInstancedStaticMeshComponent : UStaticMeshComponent {
	TArray<FInstancedStaticMeshInstanceData> PerInstanceSMData; // 0x498
	int InstancingRandomSeed; // 0x4a8
	int InstanceStartCullDistance; // 0x4ac
	int InstanceEndCullDistance; // 0x4b0
	TArray<int> InstanceReorderTable; // 0x4b8
	int NumPendingLightmaps; // 0x510
	TArray<FInstancedStaticMeshMappingInfo> CachedMappings; // 0x518
};

struct UPlayFabMatchmakerAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xd0
	UPlayFabJsonObject* RequestJsonObj; // 0xd8
	UPlayFabJsonObject* ResponseJsonObj; // 0xe0
};

struct USSGS_ScreenDataSpecificationStatic : USSGS_ScreenDataSpecification {
	TArray<FSSGS_FrameData> datas; // 0x30
};

struct ALODActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x248
	TMap<UMaterialInterface*, UInstancedStaticMeshComponent*> ImpostersStaticMeshComponents; // 0x250
	UHLODProxy* Proxy; // 0x2a0
	FName Key; // 0x2a8
	float LODDrawDistance; // 0x2b0
	int LODLevel; // 0x2b4
	TArray<AActor*> SubActors; // 0x2b8
	char CachedNumHLODLevels; // 0x2c8
};

struct UMaterialExpressionLandscapeLayerSwitch : UMaterialExpression {
	FExpressionInput LayerUsed; // 0x40
	FExpressionInput LayerNotUsed; // 0x54
	FName ParameterName; // 0x68
	char PreviewUsed : 1; // 0x70
	FGuid ExpressionGUID; // 0x74
};

struct ABP_L85A2_SUSAT_Foregrip_Tracer_C : ABP_L85A2_SUSAT_Foregrip_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct UBP_Knife_Reversegrip_StaticInfo_C : UBP_GenericMelee_StaticInfo_C {
	UAnimMontage* BP_MeleeNoHitSoldier1pMontage; // 0x950
	UAnimMontage* BP_MeleeHitSoldier1pMontage; // 0x958
	UAnimMontage* BP_MeleeNoHitSoldier3pMontage; // 0x960
	UAnimMontage* BP_MeleeNoHitSoldierWeaponMontage; // 0x968
	UAnimMontage* BP_MeleeHitSoldier3pMontage; // 0x970
	UAnimMontage* BP_MeleeHitSoldierWeaponMontage; // 0x978
};

struct UARFaceGeometry : UARTrackedGeometry {
	FVector LookAtTarget; // 0xe8
	bool bIsTracked; // 0xf4
	TMap<EARFaceBlendShape, float> BlendShapes; // 0xf8
};

struct USQMapWidgetMapMarker : USQMapWidget {
	UTexture2D* Texture; // 0x2a8
	FLinearColor Tint; // 0x2b0
	int SquadId; // 0x2c0
	int FireTeamId; // 0x2c4
};

struct UAnimationAsset : UObject {
	USkeleton* Skeleton; // 0x38
	TArray<UAnimMetaData*> MetaData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct ABP_L85A2AG36_UGL_Smoke_Blue_C : ABP_L85A2AG36_UGL_Smoke_Red_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionParticlePositionWS : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UAnimSharingTransitionInstance : UAnimInstance {
	TWeakObjectPtr<USkeletalMeshComponent> FromComponent; // 0x268
	TWeakObjectPtr<USkeletalMeshComponent> ToComponent; // 0x270
	float BlendTime; // 0x278
	bool bBlendBool; // 0x27c
};

struct USQShockwave : UObject {
	ESQShockwaveEffectType ShockwaveEffectType; // 0x28
	float Strength; // 0x2c
	TArray<FSQShockwaveQualitySetting> ShockwaveQualitySettings; // 0x30
	FSQCameraShake CameraShake; // 0x40
	FSQCameraShake SecondaryCameraShake; // 0x60
	int VerticalSteps; // 0x80
	int HorizontalSteps; // 0x84
	FRotator DefaultRotation; // 0x88
	FVector DefaultLocationOffset; // 0x94
	float Range; // 0xa0
	float PitchRange; // 0xa4
	float YawRange; // 0xa8
	float CullingDistance; // 0xac
	float NearbyExplosionEventRadius; // 0xb0
	int MaxSoundsToSpawn; // 0xb4
	int MaxDecalsToSpawn; // 0xb8
	bool bDebugLines; // 0xbc
	bool bDebugSpheres; // 0xbd
	UParticleSystem* Emitter; // 0xc0
	USQPhysicalMaterialEffects* DefaultEffectsClass; // 0xc8
};

struct USQInteractableWidgetItem : UUserWidget {
	FLinearColor ColorAndOpacity; // 0x110
	DelegateProperty ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	DelegateProperty ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x198
	UWidgetTree* WidgetTree; // 0x1a8
	int Priority; // 0x1b0
	char bSupportsKeyboardFocus : 1; // 0x1b4
	char bIsFocusable : 1; // 0x1b4
	char bStopAction : 1; // 0x1b4
	char bHasScriptImplementedTick : 1; // 0x1b4
	char bHasScriptImplementedPaint : 1; // 0x1b4
	char bCookedWidgetTree : 1; // 0x1b4
	EWidgetTickFrequency TickFrequency; // 0x1c0
	UInputComponent* InputComponent; // 0x1c8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1d0
};

struct ASpectatorBeaconClient : AOnlineBeaconClient {
	FString DestSessionId; // 0x2f8
	FSpectatorReservation PendingReservation; // 0x308
	ESpectatorClientRequestType RequestType; // 0x380
	bool bPendingReservationSent; // 0x381
	bool bCancelReservation; // 0x382
};

struct UPlatformMediaSource : UMediaSource {
	UMediaSource* MediaSource; // 0x30
};

struct ALobbyBeaconHost : AOnlineBeaconHostObject {
	UClass* LobbyStateClass; // 0x278
	ALobbyBeaconState* LobbyState; // 0x2a0
};

struct UBP_L85A2_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct ABP_L85A2_DarkEarth_4Mags_C : ABP_L85A2_DarkEarth_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4_M150_Founders_C : ABP_M4_M150_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UScrollBox : UPanelWidget {
	FScrollBoxStyle WidgetStyle; // 0x120
	FScrollBarStyle WidgetBarStyle; // 0x348
	USlateWidgetStyleAsset* Style; // 0x818
	USlateWidgetStyleAsset* BarStyle; // 0x820
	EOrientation Orientation; // 0x828
	ESlateVisibility ScrollBarVisibility; // 0x829
	EConsumeMouseWheel ConsumeMouseWheel; // 0x82a
	FVector2D ScrollbarThickness; // 0x82c
	FMargin ScrollbarPadding; // 0x834
	bool AlwaysShowScrollbar; // 0x844
	bool AlwaysShowScrollbarTrack; // 0x845
	bool AllowOverscroll; // 0x846
	EDescendantScrollDestination NavigationDestination; // 0x847
	float NavigationScrollPadding; // 0x848
	bool bAllowRightClickDragScrolling; // 0x84c
	FScriptMulticastDelegate OnUserScrolled; // 0x850
};

struct USQMapMK2 : USQMap {
	USQGridMarkerBase* TopGrid; // 0x2c0
	USQGridMarkerBase* BottomGrid; // 0x2c8
	USQGridMarkerBase* LeftGrid; // 0x2d0
	USQGridMarkerBase* RightGrid; // 0x2d8
	UCanvasPanel* MapCanvas; // 0x2e0
	UCanvasPanel* RootMapPanel; // 0x2e8
};

struct UM4M203_Carryhandle_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_BDE1EE544F8916819737EF8129D9FA1D; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_878F702E4E159DBC7D6BF28B948E0737; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_453B952A44CB9A0CAB9D888796C7D582; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_DD9766F64B96AB42BEE76AA81E7B6F81; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_90D8BF4D4D5A6E61188C07AD50DA7988; // 0x468
	FAnimNode_Slot AnimGraphNode_Slot_ACCF408E4AE15B7056E8439FA3D8529F; // 0x4b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5160BECF4519C7149676B58A645142DE; // 0x4f8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_0886B387432268103374128DADCEF80D; // 0x570
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_255B99E543E6D3B0793DD7B7EA2DD844; // 0x630
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_D049EFB04855AA5EF0B738889D868A34; // 0x648
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_10DA121F4751C4F8CEA6FFB0BA2458D8; // 0x750
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8681A21B4F78142DC15D5E9E22581B7C; // 0x770
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_B2669F85444346146226F386963648A7; // 0x790
	FVector LadderScaleAds; // 0x898
};

struct UMaterialExpressionPreSkinnedLocalBounds : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct ABP_RPG7_Frag_C : ABP_RPG7_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct ABP_M4M203_UGL_HE_C : ABP_M4M203_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_M4_M150_Tracer_Woodland_C : ABP_M4_M150_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct APawn : AActor {
	char bUseControllerRotationPitch : 1; // 0x250
	char bUseControllerRotationYaw : 1; // 0x250
	char bUseControllerRotationRoll : 1; // 0x250
	char bCanAffectNavigationGeneration : 1; // 0x250
	float BaseEyeHeight; // 0x254
	EAutoReceiveInput AutoPossessPlayer; // 0x258
	EAutoPossessAI AutoPossessAI; // 0x259
	char RemoteViewPitch; // 0x25a
	AController* AIControllerClass; // 0x260
	APlayerState* PlayerState; // 0x268
	AController* LastHitBy; // 0x278
	AController* Controller; // 0x280
	FVector ControlInputVector; // 0x28c
	FVector LastControlInputVector; // 0x298
};

struct ALandscapeStreamingProxy : ALandscapeProxy {
	ALandscape* LandscapeActor; // 0x548
};

struct UPlayFabAuthenticationContext : UObject {
	FString ClientSessionTicket; // 0x28
	FString EntityToken; // 0x38
	FString DeveloperSecretKey; // 0x48
	FString PlayFabId; // 0x58
};

struct USQVehicleViewWidget : USQUserWidget {
	TArray<UImage*> ZoomImages; // 0x230
	int CurrentZoomIndex; // 0x240
	TArray<UCameraShake*> IgnoredShakeClasses; // 0x248
};

struct UAudioSettings : UDeveloperSettings {
	FSoftObjectPath DefaultSoundClassName; // 0x38
	FSoftObjectPath DefaultMediaSoundClassName; // 0x50
	FSoftObjectPath DefaultSoundConcurrencyName; // 0x68
	FSoftObjectPath DefaultBaseSoundMix; // 0x80
	FSoftObjectPath VoiPSoundClass; // 0x98
	EVoiceSampleRate VoiPSampleRate; // 0xb0
	float VoipBufferingDelay; // 0xb4
	float DefaultReverbSendLevel; // 0xb8
	char bEnableLegacyReverb : 1; // 0xbc
	int MaximumConcurrentStreams; // 0xc0
	float GlobalMinPitchScale; // 0xc4
	float GlobalMaxPitchScale; // 0xc8
	TArray<FAudioQualitySettings> QualityLevels; // 0xd0
	char bAllowPlayWhenSilent : 1; // 0xe0
	char bDisableMasterEQ : 1; // 0xe0
	char bAllowCenterChannel3DPanning : 1; // 0xe0
	uint32 NumStoppingSources; // 0xe4
	EPanningMethod PanningMethod; // 0xe8
	EMonoChannelUpmixMethod MonoChannelUpmixMethod; // 0xe9
	FString DialogueFilenameFormat; // 0xf0
};

struct UGameUserSettings : UObject {
	bool bUseVSync; // 0x28
	bool bUseDynamicResolution; // 0x29
	uint32 ResolutionSizeX; // 0x78
	uint32 ResolutionSizeY; // 0x7c
	uint32 LastUserConfirmedResolutionSizeX; // 0x80
	uint32 LastUserConfirmedResolutionSizeY; // 0x84
	int WindowPosX; // 0x88
	int WindowPosY; // 0x8c
	int FullscreenMode; // 0x90
	int LastConfirmedFullscreenMode; // 0x94
	int PreferredFullscreenMode; // 0x98
	uint32 Version; // 0x9c
	int AudioQualityLevel; // 0xa0
	int LastConfirmedAudioQualityLevel; // 0xa4
	float FrameRateLimit; // 0xa8
	int DesiredScreenWidth; // 0xb0
	bool bUseDesiredScreenHeight; // 0xb4
	int DesiredScreenHeight; // 0xb8
	int LastUserConfirmedDesiredScreenWidth; // 0xbc
	int LastUserConfirmedDesiredScreenHeight; // 0xc0
	float LastRecommendedScreenWidth; // 0xc4
	float LastRecommendedScreenHeight; // 0xc8
	float LastCPUBenchmarkResult; // 0xcc
	float LastGPUBenchmarkResult; // 0xd0
	TArray<float> LastCPUBenchmarkSteps; // 0xd8
	TArray<float> LastGPUBenchmarkSteps; // 0xe8
	float LastGPUBenchmarkMultiplier; // 0xf8
	bool bUseHDRDisplayOutput; // 0xfc
	int HDRDisplayOutputNits; // 0x100
	FScriptMulticastDelegate OnGameUserSettingsUINeedsUpdate; // 0x108
};

struct ABP_AK74MGP25_Rifle_1P63_Desert_C : ABP_AK74MGP25_Rifle_1P63_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQToolTipBaseWidget : UUserWidget {
	USQMap* OwnerMap; // 0x230
	USQMapIconWidget* ParentWidget; // 0x238
};

struct UInAppPurchaseQueryCallbackProxy : UObject {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMaterialExpressionMultiply : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct USQDetonatorStaticInfo : USQItemStaticInfo {
	UAnimMontage* DetonatorUseWeaponMontage; // 0x4f8
	UAnimMontage* DetonatorUse1pMontage; // 0x500
	UAnimMontage* DetonatorUse3pMontage; // 0x508
	ASQDeployableItem* IEDClass; // 0x510
	FVector2D RandomDetonationDelayRange; // 0x518
	float DetonationDelay; // 0x520
	float DetonatorUseDuration; // 0x524
	bool bUseRandomDetonationDelay; // 0x528
};

struct UARSessionConfig : UDataAsset {
	bool bGenerateMeshDataFromTrackedGeometry; // 0x30
	bool bGenerateCollisionForMeshData; // 0x31
	bool bGenerateNavMeshForMeshData; // 0x32
	bool bUseMeshDataForOcclusion; // 0x33
	bool bRenderMeshDataInWireframe; // 0x34
	bool bTrackSceneObjects; // 0x35
	bool bUsePersonSegmentationForOcclusion; // 0x36
	EARWorldAlignment WorldAlignment; // 0x37
	EARSessionType SessionType; // 0x38
	EARPlaneDetectionMode PlaneDetectionMode; // 0x39
	bool bHorizontalPlaneDetection; // 0x3a
	bool bVerticalPlaneDetection; // 0x3b
	bool bEnableAutoFocus; // 0x3c
	EARLightEstimationMode LightEstimationMode; // 0x3d
	EARFrameSyncMode FrameSyncMode; // 0x3e
	bool bEnableAutomaticCameraOverlay; // 0x3f
	bool bEnableAutomaticCameraTracking; // 0x40
	bool bResetCameraTracking; // 0x41
	bool bResetTrackedObjects; // 0x42
	TArray<UARCandidateImage*> CandidateImages; // 0x48
	int MaxNumSimultaneousImagesTracked; // 0x58
	EAREnvironmentCaptureProbeType EnvironmentCaptureProbeType; // 0x5c
	TArray<char> WorldMapData; // 0x60
	TArray<UARCandidateObject*> CandidateObjects; // 0x70
	FARVideoFormat DesiredVideoFormat; // 0x80
	EARFaceTrackingDirection FaceTrackingDirection; // 0x8c
	EARFaceTrackingUpdate FaceTrackingUpdate; // 0x8d
	TArray<char> SerializedARCandidateImageDatabase; // 0x90
	EARSessionTrackingFeature EnabledSessionTrackingFeature; // 0xa0
};

struct USQGraphNodeComponent : UActorComponent {
	URouteSelectorPredicate* RouteSelectorPredicate; // 0xd8
	URouteSelectorPredicate* RouteSelectorVisualizerPredicate; // 0xe0
	URouteCombinerPredicate* RouteCombinerPredicate; // 0xe8
	TSet<USQGraphNodeComponent*> DesignOutgoingLinks; // 0xf0
	TArray<USQGraphNodeComponent*> Neighbors; // 0x140
};

struct UBP_attachment_foregrip_woodland_C : UBP_attachment_foregrip_C {
	FName SocketName; // 0x498
	ASQWeapon* AttachedWeapon; // 0x4a0
	bool bShowIn1P; // 0x4a8
	bool bShowIn3P; // 0x4a9
};

struct UMovieSceneEventRepeaterSection : UMovieSceneEventSectionBase {
	FMovieSceneEvent Event; // 0xe0
};

struct UCheckedStateBinding : UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x60
};

struct USQAmmoWidget : USQUserWidget {
	TArray<USQMagazineGroupWidget*> MagazineGroupWidgets; // 0x230
	UCanvasPanel* HighestLevelCanvas; // 0x240
	UTextBlock* FiremodeTextBlock; // 0x248
	UTextBlock* AmmoCountTextBlock; // 0x250
	UTextBlock* ZeroingTextBlock; // 0x258
	UImage* RoundInChamberImage; // 0x260
	bool bShowFireSelectorInfo; // 0x268
	bool bShowAmmoInMag; // 0x269
	ASQPlayerController* PlayerController; // 0x270
	ASQPlayerState* PlayerState; // 0x278
	FLinearColor RefillableMagazineColor; // 0x280
	FLinearColor FullMagazineColor; // 0x290
	FLinearColor NearlyFullMagazineColor; // 0x2a0
	FLinearColor HalfMagazineColor; // 0x2b0
	FLinearColor EmptyMagazineColor; // 0x2c0
	FText FireModeAutoText; // 0x2d0
	FText SightRangeText; // 0x2e8
	FText FireModeSingleText; // 0x300
	FText FireModeBurstText; // 0x318
	ASQEquipableItem* CachedCurrentWeapon; // 0x330
};

struct ASQFoliageBender : AActor {
	UMaterialParameterCollection* FoliageMaterialParameterCollection; // 0x248
	USphereComponent* Sphere; // 0x250
	float StandSpreadMultiplier; // 0x258
	float ProneSpreadMultiplier; // 0x25c
	bool bDrawDebugSpheres; // 0x260
	bool bDrawDebugPoints; // 0x261
};

struct ABP_AK74MGP25_1P78_UGL_Smoke_Blue_C : ABP_AK74MGP25_1P78_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQAdminPanel : UUserWidget {
	FLinearColor ColorAndOpacity; // 0x110
	DelegateProperty ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	DelegateProperty ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x198
	UWidgetTree* WidgetTree; // 0x1a8
	int Priority; // 0x1b0
	char bSupportsKeyboardFocus : 1; // 0x1b4
	char bIsFocusable : 1; // 0x1b4
	char bStopAction : 1; // 0x1b4
	char bHasScriptImplementedTick : 1; // 0x1b4
	char bHasScriptImplementedPaint : 1; // 0x1b4
	char bCookedWidgetTree : 1; // 0x1b4
	EWidgetTickFrequency TickFrequency; // 0x1c0
	UInputComponent* InputComponent; // 0x1c8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1d0
};

struct USignificanceManager : UObject {
	FSoftClassPath SignificanceManagerClassName; // 0x100
};

struct UInterpTrackDirector : UInterpTrack {
	TArray<FDirectorTrackCut> CutTrack; // 0x70
	char bSimulateCameraCutsOnClients : 1; // 0x80
};

struct USQVehicleSettings : USQSettings {
	FName ID; // 0x30
	FDataTableRowHandle Data; // 0x38
	FString ModId; // 0x48
};

struct URejoinCheck : UObject {
	ERejoinStatus LastKnownStatus; // 0x28
	bool bRejoinAfterCheck; // 0x29
	bool bAttemptingRejoin; // 0x2a
};

struct UPropertyValueVisibility : UPropertyValue {
	TArray<UProperty*> properties; // 0x80
	TArray<int> PropertyIndices; // 0x90
	TArray<FCapturedPropSegment> CapturedPropSegments; // 0xa0
	FString FullDisplayString; // 0xb0
	FName PropertySetterName; // 0xc0
	TMap<FString, FString> PropertySetterParameterDefaults; // 0xc8
	bool bHasRecordedData; // 0x118
	UObject* LeafPropertyClass; // 0x120
	TArray<char> ValueBytes; // 0x128
	EPropertyValueCategory PropCategory; // 0x138
};

struct ASQCoreStateConnectionActor : AInfo {
	USQCoreStateConnection* StateConnection; // 0x248
};

struct UVariant : UObject {
	FText DisplayText; // 0x28
	TArray<UVariantObjectBinding*> ObjectBindings; // 0x58
};

struct UMovieSceneLevelVisibilityTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UBTTask_MakeNoise : UBTTaskNode {
	float Loudnes; // 0x70
};

struct ASQTeamPrep : AActor {
	int TeamId; // 0x248
	UPrimitiveComponent* VehicleStagingPrimitive; // 0x250
	float StagingTimeInSeconds; // 0x270
	int ReplicatedRemainingTime; // 0x274
	ASQSoldier* LocalSoldier; // 0x290
};

struct UEnvQueryGenerator_CurrentLocation : UEnvQueryGenerator {
	UEnvQueryContext* QueryContext; // 0x50
};

struct UM72A7_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_AE13B2F040E71F49D77D46A569567D64; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7FF17B5346C322495714388DC17B9C84; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_868D44D040DE66A171BF828DE548272D; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_822278C540717052E069228E2FB05EE5; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_862635C3411FAFDE3B8AE69E160053E8; // 0x468
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_94DA38D34100202FF037FEAF90FF99F4; // 0x4b0
	FAnimNode_Slot AnimGraphNode_Slot_748AB4DA441263691C3706BA2A3566F5; // 0x570
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_14DDF007420CB05B1E41D1B6F2C4AC24; // 0x5b8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_4E4BC9104D30EC69E4BAFF9F5F4B1EC0; // 0x5d0
};

struct Urpg7_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_D3039831434C290B6E1745A3EB65C855; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_C2EDF3F342118F92A296B694AAC1846E; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5DBC40A34183D36062AAE3BBCECEBB78; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_6BFABE4C419A1B216FA277B5FBC640EF; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_1D6B67FC40C9DEE889753D99C7E8A2F1; // 0x468
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8BD4EFC1442C3058A381FBA4B37A711E; // 0x4b0
	FAnimNode_Slot AnimGraphNode_Slot_C7B8AB884297E29470433A9BF9E360E1; // 0x570
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_18A5BD6B46C2CCFBD3708B89E65A3478; // 0x5b8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_9F1F0D3147CAB8F0CA11B3A266C4CAF8; // 0x5d0
};

struct ASQConnectionCheckBeaconClient : AOnlineBeaconClient {
	USQServerListItemWidget* ServerWidget; // 0x2c8
};

struct ASQJoinBeaconClient : AOnlineBeaconClient {
	int PlayerCount; // 0x2c8
	int QueuePosition; // 0x2cc
	int ReservedQueueCount; // 0x2d0
	int PublicQueueCount; // 0x2d4
	bool bIsReservedMember; // 0x2d8
	bool bHasReplicated; // 0x2d9
	USQServerListItemWidget* ServerWidget; // 0x2e0
	double SecondsToKeepAttemptingReconnect; // 0x2e8
};

struct USQJoinBeaconState : UObject {
	TArray<FSQServerSlot> PublicQueue; // 0x28
	TArray<FSQServerSlot> ReservedQueue; // 0x38
	TArray<FSQServerSlot> JoiningServerSlots; // 0x48
};

struct UBoneMaskFilter : UObject {
	TArray<FInputBlendPose> BlendPoses; // 0x28
};

struct UCurveLinearColor : UCurveBase {
	FRichCurve FloatCurves[0x4]; // 0x30
	float AdjustHue; // 0x230
	float AdjustSaturation; // 0x234
	float AdjustBrightness; // 0x238
	float AdjustBrightnessCurve; // 0x23c
	float AdjustVibrance; // 0x240
	float AdjustMinAlpha; // 0x244
	float AdjustMaxAlpha; // 0x248
};

struct ABP_M4M203_UGL_Woodland_HE_C : ABP_M4M203_UGL_Woodland_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_AK74GP25_UGL_Smoke_C : ABP_AK74GP25_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UTireConfig : UDataAsset {
	float FrictionScale; // 0x30
	TArray<FTireConfigMaterialFriction> TireFrictionScales; // 0x38
};

struct UParticleModuleTypeDataAnimTrail : UParticleModuleTypeDataBase {
	char bDeadTrailsOnDeactivate : 1; // 0x30
	char bEnablePreviousTangentRecalculation : 1; // 0x30
	char bTangentRecalculationEveryFrame : 1; // 0x30
	float TilingDistance; // 0x34
	float DistanceTessellationStepSize; // 0x38
	float TangentTessellationStepSize; // 0x3c
	float WidthTessellationStepSize; // 0x40
};

struct UNetAnalyticsAggregatorConfig : UObject {
	TArray<FNetAnalyticsDataConfig> NetAnalyticsData; // 0x28
};

struct UParticleModuleBeamModifier : UParticleModuleBeamBase {
	BeamModifierType ModifierType; // 0x30
	FBeamModifierOptions PositionOptions; // 0x34
	FRawDistributionVector Position; // 0x38
	FBeamModifierOptions TangentOptions; // 0x88
	FRawDistributionVector Tangent; // 0x90
	char bAbsoluteTangent : 1; // 0xe0
	FBeamModifierOptions StrengthOptions; // 0xe4
	FRawDistributionFloat Strength; // 0xe8
};

struct UParticleModuleTypeDataGpu : UParticleModuleTypeDataBase {
	FGPUSpriteEmitterInfo EmitterInfo; // 0x30
	FGPUSpriteResourceData ResourceData; // 0x2f0
	float CameraMotionBlurAmount; // 0x450
	char bClearExistingParticlesOnInit : 1; // 0x454
};

struct UAISenseEvent_Hearing : UAISenseEvent {
	FAINoiseEvent Event; // 0x28
};

struct ABP_BackBlastShockWave_C : ABP_Shockwave_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x270
};

struct USoundNodeBranch : USoundNode {
	FName BoolParameterName; // 0x40
};

struct UBoxComponent : UShapeComponent {
	FVector BoxExtent; // 0x420
	float LineThickness; // 0x42c
};

struct USQGraphInitializerComponent : UActorComponent {
	TArray<FSQDesignLink> DesignOutgoingLinks; // 0xd8
};

struct ABP_LastingEffect_RpgHEAT_C : ASQLastingEffect {
	UParticleSystemComponent* ParticleSystem; // 0x248
	UAudioComponent* Audio; // 0x250
	USQShockwave* ShockwaveEffect; // 0x258
	float TimeToFireTriggerLastingEffectEventAfterBeginPlay; // 0x260
	float TimeToLiveAfterBeginPlay; // 0x264
	float TimeToLiveAfterTriggerLastingEffect; // 0x268
	bool bListenForOnActorHitEvents; // 0x26c
	bool bListenForOnDestroyedEvents; // 0x26d
	bool bActivateParticleSystemUponBeginPlay; // 0x26e
	bool bActivateParticleSystemUponTriggerLastingEffect; // 0x26f
	bool bActivateAudioUponBeginPlay; // 0x270
	bool bActivateAudioUponTriggerLastingEffect; // 0x271
	bool bActivateShockwaveUponBeginPlay; // 0x272
	bool bActivateShockwaveUponTriggerLastingEffect; // 0x273
	bool bDetachFromActorUponTriggerLastingEffect; // 0x274
	bool bDeactivateParticleSystemUponTriggerLastingEffect; // 0x275
	bool bDeactivateParticleSystemUponTriggerLastingEffectTimerExpired; // 0x276
	bool bDeactivateAudioUponTriggerLastingEffectTimerExpired; // 0x277
	bool bDestroyUponTriggerLastingEffectTimerExpired; // 0x278
	bool bDrawDebugSphere; // 0x279
	float DebugSphereRadius; // 0x27c
	int DebugSphereSegments; // 0x280
	FColor DebugSphereColor; // 0x284
};

struct ABP_L85A2AG36_ElcanLDS_UGL_HE_C : ABP_L85A2AG36_ElcanLDS_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQSquadStateDataSQPawn : USQSquadStateDataPawn {
	bool bHiddenWhenUnpossessed; // 0x180
	bool bHiddenWhenNotLocallyControlled; // 0x181
	bool bHideWidgetWhenUnpossessed; // 0x182
	float CameraRotaionYawTolerance; // 0x184
	ASQPlayerState* OwnerPlayerState; // 0x188
	int CachedPlayerId; // 0x194
	int FireTeamIndex; // 0x198
	ASQPlayerState* CachedOwnerPlayerState; // 0x1a0
};

struct UMaterialExpressionDistanceCullFade : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USQMapWidgetEmplacement : USQMapWidgetVehicle {
	int TeamId; // 0x310
	TArray<APawn*> AdminTypes; // 0x318
};

struct USkeletalMeshSimulationComponent : UActorComponent {
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xe0
	AChaosSolverActor* ChaosSolverActor; // 0xe8
	UPhysicsAsset* OverridePhysicsAsset; // 0xf0
	bool bSimulating; // 0xf8
	bool bNotifyCollisions; // 0xf9
	EObjectStateTypeEnum ObjectType; // 0xfa
	float Density; // 0xfc
	float MinMass; // 0x100
	float MaxMass; // 0x104
	ECollisionTypeEnum CollisionType; // 0x108
	float ImplicitShapeParticlesPerUnitArea; // 0x10c
	int ImplicitShapeMinNumParticles; // 0x110
	int ImplicitShapeMaxNumParticles; // 0x114
	int MinLevelSetResolution; // 0x118
	int MaxLevelSetResolution; // 0x11c
	int CollisionGroup; // 0x120
	EInitialVelocityTypeEnum InitialVelocityType; // 0x124
	FVector InitialLinearVelocity; // 0x128
	FVector InitialAngularVelocity; // 0x134
	FScriptMulticastDelegate OnChaosPhysicsCollision; // 0x140
};

struct UMaterialExpressionArctangent2 : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct USQMenuWidgetStyle : USlateWidgetStyleContainerBase {
	FSQMenuStyle MenuStyle; // 0x30
};

struct UARTrackedObject : UARTrackedGeometry {
	UARCandidateObject* DetectedObject; // 0xe8
};

struct UBP_M4M203_Rifle_Optic_StaticInfo_C : UBP_M4M203_Rifle_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UInterpTrackSlomo : UInterpTrackFloatBase {
	FInterpCurveFloat FloatTrack; // 0x70
	float CurveTension; // 0x88
};

struct ABP_L85A2AG36_UGL_Parent_C : ABP_Weapon2_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ASQVehicle : ASQVehicleSeat {
	FSQUsableData UsableData; // 0x3d8
	ASQDestroyedVehicle* DefaultDestroyedVehicleActorClass; // 0x418
	TArray<FSQVehicleDestroyedConfig> DestroyedVehicleConfig; // 0x420
	ASQLastingEffect* TemperatureLastingEffectClass; // 0x430
	FName TemperatureLastingEffectAttachSocket; // 0x438
	ASQLastingEffect* TemperatureLastingEffect; // 0x440
	USQVehicleBurningComponent* BurningComponent; // 0x448
	UCameraShake* ImpactCameraShake; // 0x450
	float ImpactEffectNormalForceThreshold; // 0x458
	USoundCue* LightImpactSound; // 0x460
	UParticleSystem* LightImpactEffect; // 0x468
	USoundCue* ImpactSound; // 0x470
	UParticleSystem* ImpactEffect; // 0x478
	bool bDoParticlesUseRotation; // 0x480
	USQPhysicalMaterialVehiclesEffects* PhysMatEffectsClass; // 0x488
	FScriptMulticastDelegate OnVehicleRepairEvent; // 0x490
	ASQDestroyedVehicle* DestroyedVehicleActor; // 0x4a0
	USQVehicleClaim* ClaimInfo; // 0x4a8
	ASQSquadState* ClaimedBySquad; // 0x4b0
	bool bClaimable; // 0x4b8
	bool bEnterableWithoutClaim; // 0x4b9
	bool bDrivableWithoutClaim; // 0x4ba
	bool bNonSquadMembersMayEnterWhenClaimed; // 0x4bb
	FText NotClaimedCantEnterErrorMessage; // 0x4c0
	FText FullVehicleCantEnterErrorMessage; // 0x4d8
	FText EnemyVehicleCantEnterErrorMessage; // 0x4f0
	FText NotClaimedNeedsApprovalErrorMessage; // 0x508
	FText NotClaimedNotInSquadErrorMessage; // 0x520
	FText WrongRoleForClaimErrorMessage; // 0x538
	FText WrongRoleForSeatErrorMessage; // 0x550
	FText FullVehicleOrWrongRoleCantEnterErrorMessage; // 0x568
	FText SeatFilledErrorMessage; // 0x580
	FText SeatBeingEnteredErrorMessage; // 0x598
	FText ClaimedByAnotherSquadCantEnterErrorMessage; // 0x5b0
	FText CrewmanRole; // 0x5c8
	FText PilotRole; // 0x5e0
	UCurveFloat* VelocityVsCollisionDamageCurve; // 0x5f8
	float CollisionDamageThesholdGs; // 0x600
	float CollisionsDamageVelocityThreshold; // 0x604
	float VehicleToOccupantCollisionDamageScaler; // 0x608
	USQBoundaryListener* BoundaryListener; // 0x610
	USQCollisionDamage* CollisionDamage; // 0x618
	ESQVehicleType VehicleType; // 0x628
	UTexture* VehicleIconTexture; // 0x630
	FLinearColor VehicleIconColor; // 0x638
	FVector2D VehicleIconOffset; // 0x648
	FVector2D VehicleIconSize; // 0x650
	float LastRepairedTime; // 0x658
	float PercentDriverGetsForKill; // 0x65c
	float LastSeatEventTime; // 0x660
	bool bPreventVehicleEntrance; // 0x664
	float MaxVehicleEntryDistance; // 0x668
	FSQVehicleSeatConfig DriverSeatConfig; // 0x670
	TArray<FSQVehicleSeatConfig> AdditionalSeatsConfig; // 0x6c0
	TArray<USQVehicleSeatComponent*> VehicleSeats; // 0x6d0
	USkeletalMeshComponent* VehicleMesh; // 0x6e0
	bool bIsVehicleDamagedByRadialExplosions; // 0x6e8
	FScriptMulticastDelegate OnVehicleDestroyed; // 0x6f0
	FScriptMulticastDelegate OnPlayerEntered; // 0x700
	FScriptMulticastDelegate OnPlayerExited; // 0x710
	FScriptMulticastDelegate OnPlayerSwitchedSeats; // 0x720
	FScriptMulticastDelegate AmmoUpdatedEvent; // 0x730
	USoundCue* OnVehicleEnterSound; // 0x740
	USoundCue* OnVehicleExitSound; // 0x748
	USoundCue* OnSeatSwitchSound; // 0x750
	USQBuffManager* Buffs; // 0x758
	float Health; // 0x760
	float MaxHealth; // 0x764
	UDamageType* LastDamageTypeClass; // 0x768
	AController* LastDamageInstigator; // 0x770
	bool bCanStackRepairers; // 0x778
	float MaxRepairToolLimit; // 0x77c
	float LastDamageInstigatorTimeoutThreshold; // 0x780
	float FlipPitchThreshold; // 0x78c
	float FlipRollThreshold; // 0x790
	float FlipSpeedThreshold; // 0x794
	float FlipRotationExceededTimeThreshold; // 0x79c
	float DestroyTime; // 0x7a0
	bool bHasBeenDestroyed; // 0x7a4
	TArray<FSQDamageModifier> AllowableDamageTypes; // 0x7a8
	FSQDamageTypeEffects DamageEffects; // 0x7b8
	USQVehicleUIStaticDataAsset* StaticUIData; // 0x7e0
	float MaxThrottle; // 0x7e8
	TArray<FSQVehicleQueueEntry> PlayerSeatPairInfoArray; // 0x7f0
	TArray<AActor*> CurrentRepairers; // 0x808
	USQVehicleSettings* Setting; // 0x818
};

struct UMaterialExpressionFontSampleParameter : UMaterialExpressionFontSample {
	FName ParameterName; // 0x50
	FGuid ExpressionGUID; // 0x58
	FName Group; // 0x68
};

struct UVectorFieldComponent : UPrimitiveComponent {
	UVectorField* VectorField; // 0x408
	float Intensity; // 0x410
	float Tightness; // 0x414
	char bPreviewVectorField : 1; // 0x418
};

struct AAmbientSound : AActor {
	UAudioComponent* AudioComponent; // 0x248
};

struct UMovieSceneSignedObject : UObject {
	FGuid Signature; // 0x28
};

struct UBP_GenericMelee_StaticInfo_C : UBP_GenericWeapon_StaticInfo_C {
	UAnimMontage* BP_MeleeNoHitSoldier1pMontage; // 0x950
	UAnimMontage* BP_MeleeHitSoldier1pMontage; // 0x958
	UAnimMontage* BP_MeleeNoHitSoldier3pMontage; // 0x960
	UAnimMontage* BP_MeleeNoHitSoldierWeaponMontage; // 0x968
	UAnimMontage* BP_MeleeHitSoldier3pMontage; // 0x970
	UAnimMontage* BP_MeleeHitSoldierWeaponMontage; // 0x978
};

struct UMaterialExpressionLandscapeLayerWeight : UMaterialExpression {
	FExpressionInput Base; // 0x40
	FExpressionInput Layer; // 0x54
	FName ParameterName; // 0x68
	float PreviewWeight; // 0x70
	FVector ConstBase; // 0x74
	FGuid ExpressionGUID; // 0x80
};

struct UParticleModuleSubUV : UParticleModuleSubUVBase {
	USubUVAnimation* Animation; // 0x30
	FRawDistributionFloat SubImageIndex; // 0x38
	char bUseRealTime : 1; // 0x70
};

struct APhysicsVolume : AVolume {
	float TerminalVelocity; // 0x280
	int Priority; // 0x284
	float FluidFriction; // 0x288
	char bWaterVolume : 1; // 0x28c
	char bPhysicsOnContact : 1; // 0x28c
};

struct USQServerBrowserWidget : USQUserWidget {
	ESQSortStates ServerNameSortedState; // 0x230
	ESQSortStates MapNameSortedState; // 0x231
	ESQSortStates GameModeSortedState; // 0x232
	ESQSortStates NumPlayersSortedState; // 0x233
	ESQSortStates PingSortedState; // 0x234
	TArray<USQServerListItemWidget*> SessionList; // 0x238
	TArray<UUserWidget*> SessionSortList; // 0x248
	bool bCanStartNewFindSessions; // 0x258
	USQFindSessionsCallbackProxy* CurrentCallback; // 0x260
};

struct UShowLoginUICallbackProxy : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct UMovieSceneFolder : UObject {
	FName FolderName; // 0x28
	TArray<UMovieSceneFolder*> ChildFolders; // 0x30
	TArray<UMovieSceneTrack*> ChildMasterTracks; // 0x40
	TArray<FString> ChildObjectBindingStrings; // 0x50
};

struct UMovieSceneSequence : UMovieSceneSignedObject {
	FMovieSceneEvaluationTemplate PrecompiledEvaluationTemplate; // 0x50
	EMovieSceneCompletionMode DefaultCompletionMode; // 0x340
	bool bParentContextsAreSignificant; // 0x341
};

struct UDistributionVectorParticleParameter : UDistributionVectorParameterBase {
	FName ParameterName; // 0x50
	FVector MinInput; // 0x58
	FVector MaxInput; // 0x64
	FVector MinOutput; // 0x70
	FVector MaxOutput; // 0x7c
	DistributionParamMode ParamModes[0x3]; // 0x88
};

struct USQWeaponAnimInstance : USQItemAnimInstance {
	bool bMagHasAmmo; // 0x298
	bool bIsWeaponFiring; // 0x299
	bool bIsReloading; // 0x29a
	float MagHasAmmoAlpha; // 0x29c
	float NotMagHasAmmoAlpha; // 0x2a0
	float CurrentMagRemainingRoundsTime; // 0x2a4
	float CurrentMagRemainingRoundsMultiplier; // 0x2a8
	float AdjustAdsSightItemAnimPos; // 0x2ac
};

struct USkeletalMeshComponent : USkinnedMeshComponent {
	UObject* AnimBlueprintGeneratedClass; // 0x5f0
	UAnimInstance* AnimClass; // 0x5f8
	UAnimInstance* AnimScriptInstance; // 0x600
	TArray<UAnimInstance*> SubInstances; // 0x608
	UAnimInstance* PostProcessAnimInstance; // 0x618
	FSingleAnimationPlayData AnimationData; // 0x620
	FVector RootBoneTranslation; // 0x648
	FVector LineCheckBoundsScale; // 0x654
	TArray<FTransform> CachedBoneSpaceTransforms; // 0x680
	TArray<FTransform> CachedComponentSpaceTransforms; // 0x690
	float GlobalAnimRateScale; // 0x6c0
	EKinematicBonesUpdateToPhysics KinematicBonesUpdateType; // 0x6c4
	EPhysicsTransformUpdateMode PhysicsTransformUpdateMode; // 0x6c5
	EAnimationMode AnimationMode; // 0x6c7
	char bDisablePostProcessBlueprint : 1; // 0x6c9
	char bUpdateOverlapsOnAnimationFinalize : 1; // 0x6c9
	char bHasValidBodies : 1; // 0x6c9
	char bBlendPhysics : 1; // 0x6c9
	char bEnablePhysicsOnDedicatedServer : 1; // 0x6c9
	char bUpdateJointsFromAnimation : 1; // 0x6ca
	char bDisableClothSimulation : 1; // 0x6ca
	char bAllowAnimCurveEvaluation : 1; // 0x6ca
	char bDisableAnimCurves : 1; // 0x6ca
	char bCollideWithEnvironment : 1; // 0x6ca
	char bCollideWithAttachedChildren : 1; // 0x6cb
	char bLocalSpaceSimulation : 1; // 0x6cb
	char bResetAfterTeleport : 1; // 0x6cb
	char bDeferKinematicBoneUpdate : 1; // 0x6cb
	char bNoSkeletonUpdate : 1; // 0x6cb
	char bPauseAnims : 1; // 0x6cb
	char bUseRefPoseOnInitAnim : 1; // 0x6cb
	char bEnablePerPolyCollision : 1; // 0x6cc
	char bForceRefpose : 1; // 0x6cc
	char bOnlyAllowAutonomousTickPose : 1; // 0x6cc
	char bIsAutonomousTickPose : 1; // 0x6cc
	char bOldForceRefPose : 1; // 0x6cc
	char bShowPrePhysBones : 1; // 0x6cc
	char bRequiredBonesUpToDate : 1; // 0x6cc
	char bAnimTreeInitialised : 1; // 0x6cc
	char bIncludeComponentLocationIntoBounds : 1; // 0x6cd
	char bEnableLineCheckWithBounds : 1; // 0x6cd
	char bUseBendingElements : 1; // 0x6cd
	char bUseTetrahedralConstraints : 1; // 0x6cd
	char bUseThinShellVolumeConstraints : 1; // 0x6cd
	char bUseSelfCollisions : 1; // 0x6cd
	char bUseContinuousCollisionDetection : 1; // 0x6cd
	char bPropagateCurvesToSlaves : 1; // 0x6cd
	char bSkipKinematicUpdateWhenInterpolating : 1; // 0x6ce
	char bSkipBoundsUpdateWhenInterpolating : 1; // 0x6ce
	char bNeedsQueuedAnimEventsDispatched : 1; // 0x6ce
	uint16 CachedAnimCurveUidVersion; // 0x6d0
	float ClothBlendWeight; // 0x6d4
	float EdgeStiffness; // 0x6d8
	float BendingStiffness; // 0x6dc
	float AreaStiffness; // 0x6e0
	float VolumeStiffness; // 0x6e4
	float StrainLimitingStiffness; // 0x6e8
	float ShapeTargetStiffness; // 0x6ec
	TArray<FName> DisallowedAnimCurves; // 0x6f0
	UBodySetup* BodySetup; // 0x700
	FScriptMulticastDelegate OnConstraintBroken; // 0x710
	UClothingSimulationFactory* ClothingSimulationFactory; // 0x720
	float TeleportDistanceThreshold; // 0x820
	float TeleportRotationThreshold; // 0x824
	uint32 LastPoseTickFrame; // 0x830
	UClothingSimulationInteractor* ClothingInteractor; // 0x890
	FScriptMulticastDelegate OnAnimInitialized; // 0x960
};

struct UNavMeshRenderingComponent : UPrimitiveComponent {
	float MinDrawDistance; // 0x220
	float LDMaxDrawDistance; // 0x224
	float CachedMaxDrawDistance; // 0x228
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x22c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x22d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x22e
	ELightmapType LightmapType; // 0x22f
	char bUseMaxLODAsImposter : 1; // 0x230
	char bNeverDistanceCull : 1; // 0x230
	char bAlwaysCreatePhysicsState : 1; // 0x230
	char bGenerateOverlapEvents : 1; // 0x230
	char bGenerateLocalOverlapEvents : 1; // 0x231
	char bMultiBodyOverlap : 1; // 0x231
	char bTraceComplexOnMove : 1; // 0x231
	char bReturnMaterialOnMove : 1; // 0x231
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x231
	char bAllowCullDistanceVolume : 1; // 0x231
	char bHasMotionBlurVelocityMeshes : 1; // 0x231
	char bVisibleInReflectionCaptures : 1; // 0x232
	char bVisibleInRayTracing : 1; // 0x232
	char bRenderInMainPass : 1; // 0x232
	char bReceivesDecals : 1; // 0x232
	char bOwnerNoSee : 1; // 0x232
	char bOnlyOwnerSee : 1; // 0x232
	char bTreatAsBackgroundForOcclusion : 1; // 0x232
	char bUseAsOccluder : 1; // 0x232
	char bSelectable : 1; // 0x233
	char bForceMipStreaming : 1; // 0x233
	char bHasPerInstanceHitProxies : 1; // 0x233
	char CastShadow : 1; // 0x233
	char bAffectDynamicIndirectLighting : 1; // 0x233
	char bAffectDistanceFieldLighting : 1; // 0x233
	char bCastDynamicShadow : 1; // 0x233
	char bCastStaticShadow : 1; // 0x233
	char bCastVolumetricTranslucentShadow : 1; // 0x234
	char bSelfShadowOnly : 1; // 0x234
	char bCastFarShadow : 1; // 0x234
	char bCastInsetShadow : 1; // 0x234
	char bCastCinematicShadow : 1; // 0x234
	char bCastHiddenShadow : 1; // 0x234
	char bCastShadowAsTwoSided : 1; // 0x234
	char bLightAsIfStatic : 1; // 0x234
	char bLightAttachmentsAsGroup : 1; // 0x235
	char bReceiveMobileCSMShadows : 1; // 0x235
	char bSingleSampleShadowFromStationaryLights : 1; // 0x235
	char bIgnoreRadialImpulse : 1; // 0x235
	char bIgnoreRadialForce : 1; // 0x235
	char bApplyImpulseOnDamage : 1; // 0x235
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x235
	char AlwaysLoadOnClient : 1; // 0x235
	char AlwaysLoadOnServer : 1; // 0x236
	char bUseEditorCompositing : 1; // 0x236
	char bRenderCustomDepth : 1; // 0x236
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x237
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x239
	FLightingChannels LightingChannels; // 0x23a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x23b
	int CustomDepthStencilValue; // 0x23c
	FCustomPrimitiveData CustomPrimitiveData; // 0x240
	int TranslucencySortPriority; // 0x250
	int VisibilityId; // 0x254
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x258
	int VirtualTextureLodBias; // 0x268
	int VirtualTextureCullMips; // 0x26c
	int VirtualTextureMinCoverage; // 0x270
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x274
	float LpvBiasMultiplier; // 0x27c
	float BoundsScale; // 0x288
	TArray<AActor*> MoveIgnoreActors; // 0x298
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2a8
	FBodyInstance BodyInstance; // 0x2c8
	FScriptMulticastDelegate OnComponentHit; // 0x3d8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3d9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3da
	FScriptMulticastDelegate OnComponentWake; // 0x3db
	FScriptMulticastDelegate OnComponentSleep; // 0x3dc
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3de
	FScriptMulticastDelegate OnEndCursorOver; // 0x3df
	FScriptMulticastDelegate OnClicked; // 0x3e0
	FScriptMulticastDelegate OnReleased; // 0x3e1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3e2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3e3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3e4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3e5
	UPrimitiveComponent* LODParentPrimitive; // 0x400
};

struct USQSquadStateDataVehicleSeat : USQSquadStateDataSQPawn {
	bool bHiddenWhenUnpossessed; // 0x180
	bool bHiddenWhenNotLocallyControlled; // 0x181
	bool bHideWidgetWhenUnpossessed; // 0x182
	float CameraRotaionYawTolerance; // 0x184
	ASQPlayerState* OwnerPlayerState; // 0x188
	int CachedPlayerId; // 0x194
	int FireTeamIndex; // 0x198
	ASQPlayerState* CachedOwnerPlayerState; // 0x1a0
};

struct ASQGameMode : AGameMode {
	bool bTournamentMode; // 0x390
	float CheckEndMatchConditionsTimeInterval; // 0x394
	int InitialLives; // 0x398
	int StartupTime; // 0x39c
	int RoundTime; // 0x3a0
	int TimeBetweenMatches; // 0x3a4
	ASQTeam* WinnerTeam; // 0x3a8
	ASQTeam* TeamClass; // 0x3b0
	ASQSquad* SquadClass; // 0x3b8
	TArray<ASQGameRuleSet*> RuleSetClasses; // 0x3c0
	TArray<ASQGameRuleSet*> RuleSets; // 0x3d0
	TArray<ASQTeam*> Teams; // 0x3e0
	TArray<ASQTeam*> IndexedTeams; // 0x3f0
	FText DisplayName; // 0x450
	bool ConfigureFactionInProgress; // 0x6fc
};

struct UMovieSceneEventTriggerSection : UMovieSceneEventSectionBase {
	FMovieSceneEventChannel EventChannel; // 0xe0
};

struct UMaterialExpressionParticleRelativeTime : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct ABP_M4M203_M150_UGL_Smoke_Red_C : ABP_M4M203_M150_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ABP_L85A2_DarkEarth_SUSAT_Foregrip_Tracer_C : ABP_L85A2_DarkEarth_SUSAT_Foregrip_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Scope; // 0x7b8
};

struct ASQGameRallyPoint : ASQGameSpawn {
	UStaticMeshComponent* Mesh; // 0x420
	USQMapIconComponent* RallyPointMapIcon; // 0x428
	USoundBase* PlacementSound; // 0x430
	int NumberOfSpawns; // 0x438
};

struct ASQGrenadeProjectile : ASQProjectile {
	float MinimumVelocityToPlayThrowableEffects; // 0x490
	float FuseTime; // 0x494
	bool bIsExploding; // 0x498
	bool bExplodeOnFuse; // 0x499
	bool bExplodeOnLifeSpanExpired; // 0x49a
	bool bExplodeOnLifeSpanExpiredAfterImpact; // 0x49b
};

struct UDebugCameraControllerSettings : UDeveloperSettings {
	TArray<FDebugCameraControllerSettingsViewModeIndex> CycleViewModes; // 0x38
};

struct USocialGroupChannel : UObject {
	USocialUser* SocialUser; // 0x28
	FUniqueNetIdRepl GroupId; // 0x30
	FText DisplayName; // 0x58
	TArray<USocialUser*> Members; // 0x70
};

struct UARTextureCameraImage : UARTexture {
	EARTextureType TextureType; // 0xd0
	float Timestamp; // 0xd4
	FGuid ExternalTextureGuid; // 0xd8
	FVector2D Size; // 0xe8
};

struct USQVotingComponent : UActorComponent {
	FName PlayerName; // 0xd8
	TArray<FSQVoteStateContainer> ActiveVoteStates; // 0xe0
	TMap<FName, USQVoteSession*> ActiveVotes; // 0xf0
	FScriptMulticastDelegate RS_OnVoteStart; // 0x140
	FScriptMulticastDelegate RS_OnVoteUpdate; // 0x150
	FScriptMulticastDelegate RS_OnVoteEnded; // 0x160
	FScriptMulticastDelegate RS_OnVoteDisplayResults; // 0x170
};

struct AMatineeActorCameraAnim : AMatineeActor {
	UCameraAnim* CameraAnim; // 0x2f0
};

struct ASQPlayerController_Menu : ASQPlayerController {
	ASQTeam* AuthorityTeam; // 0x5a0
	ASQTeamState* TeamState; // 0x5a8
	ASQTeamStatePrivate* PrivateTeamState; // 0x5b0
	ASQSquad* AuthoritySquad; // 0x5b8
	ASQSquadState* SquadState; // 0x5c0
	ASQSquadStatePrivateToTeam* TeamPrivateSquadState; // 0x5c8
	USQCoreStateConnection* StateConnection; // 0x5d0
	float SpawnMenuPopupDelay; // 0x5d8
	ASQSoldier* LastSpawnedSoldier; // 0x5e0
	bool AreCommunicationButtonsAllowed; // 0x5e9
	char bIsCrouchedDuringMenu : 1; // 0x5ea
	char bIsPronedDuringMenu : 1; // 0x5ea
	bool IsWinner; // 0x5eb
	float TimeBecameIncapacitated; // 0x5ec
	float SpawnDelayPenalties; // 0x5f0
	float MaxSpawnDelay; // 0x5f4
	bool bWasInVehicle; // 0x5f8
	FSQBitFlag AccessLevel; // 0x5fc
	FScriptMulticastDelegate OnPlayerEnterVehicleEvent; // 0x618
	FScriptMulticastDelegate OnPlayerExitVehicleEvent; // 0x628
	FScriptMulticastDelegate OnRallyCreated; // 0x638
	FScriptMulticastDelegate OnChatStarted; // 0x650
	USQToastWidget* ToastWidgetClass; // 0x660
	FText ChangeRoleNoAmmoText; // 0x668
	FText AmmoBagNoAmmoText; // 0x680
	FText MaxAmmoBagText; // 0x698
	FText RearmFromAmmoBagText; // 0x6b0
	FText RoleCannotPickupAmmoBagText; // 0x6c8
	FText RearmFromVehicleNoAmmoText; // 0x6e0
	FText RearmFromVehicleConfirmationText; // 0x6f8
	FText RearmFromVehiclePromptText; // 0x710
	FText CannotStartVehicleInStagingPhaseText; // 0x728
	float WalkingOriginRebaseThreshold; // 0x740
	float RidingOriginRebaseThreshold; // 0x744
	float FlyingOriginRebaseThreshold; // 0x748
	float LeaveVehicleOriginRebaseThreshold; // 0x74c
	float OriginRebaseFrequency; // 0x750
	TArray<ASQMapMarker*> MapMarkerArray; // 0x758
	USQMapMarkerInputComponent* MapMarkerInputComponent; // 0x768
	FScriptMulticastDelegate OnNewMarkerCreatedEvent; // 0x770
	USQAdminStats* AdminStats; // 0x780
	TArray<AActor*> SpawnableActors; // 0x788
	UDataTable* ApprovalMessages; // 0x798
	USQVehicleSeatComponent* CurrentSeat; // 0x7a0
	float AlwaysRenderPawnsDistance; // 0x860
	UAudioComponent* MusicAC; // 0x898
	USoundBase* MusicSound; // 0x8a0
	TArray<FSQSystemHUDMessage> QueuedSystemMessages; // 0x8a8
	TArray<APawn*> RefreshTypes; // 0x8b8
	USQDataGatheringComponent* DataGatheringComponent; // 0x8c8
	USQCommanderInputComponent* CommanderInputComponent; // 0x8d0
	USQBoundaryListener* BoundaryListener; // 0x8d8
	float OutOfMapBoundsKillTimestamp; // 0x8e0
	APawn* LastRefreshedPawn; // 0x8e8
	ASQGameSpawn* SelectedSpawn; // 0x8f0
	TMap<uint32, FSQApprovalEntryRequest> ApprovalEntries; // 0x900
	TMap<uint32, FSQApprovalEntryClientDesc> ApprovalEntriesOnClient; // 0x950
	float PawnRenderDistance; // 0x9c0
	TMap<FUniqueNetIdRepl, ASQPlayerState*> CachedPlayersToMute; // 0x9f8
	USQMovementComponentNetworker* Networker; // 0xa48
	ASQDeployable* ActiveGhost; // 0xa50
	bool IsDeployingItem; // 0xa58
	USQVotingComponent* VotingComponentClass; // 0xa60
	USQVotingComponent* VotingComponent; // 0xa68
};

struct UParticleModule : UObject {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2c
};

struct UDatasmithGLTFSceneImportData : UDatasmithSceneImportData {
	FString Generator; // 0x28
	float Version; // 0x38
	FString Author; // 0x40
	FString License; // 0x50
	FString Source; // 0x60
};

struct ABP_M4_M150_Woodland_C : ABP_M4_M150_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQSquadStateDataSoldier : USQSquadStateDataPawn {
	float HealthStatusRange; // 0x1a8
	char bIsBleeding : 1; // 0x1ac
	char bIsWounded : 1; // 0x1ac
	char bIsAlive : 1; // 0x1ac
	char bIsInVehicle : 1; // 0x1ac
	char bIsUsingFreeLook : 1; // 0x1ac
	char bIsMedic : 1; // 0x1ac
	FSQSoldierInfo SoldierInfo; // 0x1b0
};

struct USQCoreStateMapComponent : USQCoreStateWidgetFactory {
	UPanelWidget* RootWidget; // 0x340
	USQMapWidgetBase* MapWidgetBase; // 0x348
	float WidgetScale; // 0x350
};

struct USSGS_ScreenDataSpecificationRanges : USSGS_ScreenDataSpecification {
	TArray<FSSGS_FrameDataRange> datas; // 0x30
};

struct UEditableTextBox : UWidget {
	FText Text; // 0x108
	DelegateProperty TextDelegate; // 0x120
	FEditableTextBoxStyle WidgetStyle; // 0x130
	USlateWidgetStyleAsset* Style; // 0x920
	FText HintText; // 0x928
	DelegateProperty HintTextDelegate; // 0x940
	FSlateFontInfo Font; // 0x950
	FLinearColor ForegroundColor; // 0x9a0
	FLinearColor BackgroundColor; // 0x9b0
	FLinearColor ReadOnlyForegroundColor; // 0x9c0
	bool IsReadOnly; // 0x9d0
	bool IsPassword; // 0x9d1
	float MinimumDesiredWidth; // 0x9d4
	FMargin Padding; // 0x9d8
	bool IsCaretMovedWhenGainFocus; // 0x9e8
	bool SelectAllTextWhenFocused; // 0x9e9
	bool RevertTextOnEscape; // 0x9ea
	bool ClearKeyboardFocusOnCommit; // 0x9eb
	bool SelectAllTextOnCommit; // 0x9ec
	bool AllowContextMenu; // 0x9ed
	EVirtualKeyboardType KeyboardType; // 0x9ee
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x9ef
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x9f0
	ETextJustify Justification; // 0x9f1
	FShapedTextOptions ShapedTextOptions; // 0x9f2
	FScriptMulticastDelegate OnTextChanged; // 0x9f8
	FScriptMulticastDelegate OnTextCommitted; // 0xa08
};

struct UAsyncActionLoadPrimaryAsset : UAsyncActionLoadPrimaryAssetBase {
	FScriptMulticastDelegate Completed; // 0x78
};

struct UInterpTrackInstBoolProp : UInterpTrackInstProperty {
	UBoolProperty* BoolProperty; // 0x40
	bool ResetBool; // 0x48
};

struct UMoviePlayerSettings : UObject {
	bool bWaitForMoviesToComplete; // 0x28
	bool bMoviesAreSkippable; // 0x29
	TArray<FString> StartupMovies; // 0x30
};

struct UBP_RPG7v2Tandem_StaticInfo_C : UBP_RPG7v2Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UMaterialExpressionSphereMask : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Radius; // 0x68
	FExpressionInput Hardness; // 0x7c
	float AttenuationRadius; // 0x90
	float HardnessPercent; // 0x94
};

struct ABP_AK74MGP25_1P63_UGL_Smoke_Blue_C : ABP_AK74MGP25_1P63_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBrushBuilder : UObject {
	FString BitmapFilename; // 0x28
	FString Tooltip; // 0x38
	char NotifyBadParams : 1; // 0x48
	TArray<FVector> Vertices; // 0x50
	TArray<FBuilderPoly> Polys; // 0x60
	FName Layer; // 0x70
	char MergeCoplanars : 1; // 0x78
};

struct UGeometryCacheTrackStreamable : UGeometryCacheTrack {
	UGeometryCacheCodecBase* Codec; // 0x58
	float StartSampleTime; // 0x188
};

struct UDatasmithPointLightComponentTemplate : UDatasmithObjectTemplate {
	ELightUnits IntensityUnits; // 0x30
	float SourceRadius; // 0x34
	float SourceLength; // 0x38
	float AttenuationRadius; // 0x3c
};

struct ABP_M17MHS_C : ABP_GenericPistol_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UCapsuleComponent : UShapeComponent {
	float CapsuleHalfHeight; // 0x420
	float CapsuleRadius; // 0x424
};

struct USQBurningDamage : USQDamageType {
	bool bCanCauseBleeding; // 0x40
};

struct ASQSpectatorMan : ASpectatorPawn {
	ESQListenerType ListenerType; // 0x2d8
	USpringArmComponent* SpringArm; // 0x2e0
	UCameraComponent* FirstPersonCameraComponent; // 0x2e8
	UTexture* CameraManHUDIconTexture; // 0x2f0
	bool bIsTryingToGainAltitude; // 0x2f8
	bool bIsTryingToLoseAltitude; // 0x2f9
};

struct USpectatorBeaconState : UObject {
	FName SessionName; // 0x28
	int NumConsumedReservations; // 0x30
	int MaxReservations; // 0x34
	bool bRestrictCrossConsole; // 0x38
	TArray<FSpectatorReservation> Reservations; // 0x40
};

struct UMovieScene3DPathTrack : UMovieScene3DConstraintTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x58
};

struct UARTextureCameraDepth : UARTexture {
	EARDepthQuality DepthQuality; // 0xf0
	EARDepthAccuracy DepthAccuracy; // 0xf1
	bool bIsTemporallySmoothed; // 0xf2
};

struct UMovieSceneEasingExternalCurve : UObject {
	UCurveFloat* Curve; // 0x30
};

struct ABP_L85A2AG36_DarkEarth_ElcanLDS_Rifle_C : ABP_L85A2AG36_DarkEarth_Rifle_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
};

struct ABP_40MM_VOG_Proj2_C : ASQMortarProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x520
	USkeletalMeshComponent* SkeletalMesh; // 0x528
	UChildActorComponent* Shockwave; // 0x530
	UParticleSystem* BPEffectOnUnderMinFlightTime; // 0x538
	USoundBase* BPSoundonUnderMinFlightTime; // 0x540
};

struct UMaterialExpressionAtmosphericLightVector : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USoundNodeLooping : USoundNode {
	int LoopCount; // 0x40
	char bLoopIndefinitely : 1; // 0x44
};

struct ABP_AK74MGP25_1P78_UGL_Desert_Parent_C : ABP_AK74MGP25_UGL_Desert_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UPlatformInterfaceBase : UObject {
	TArray<FDelegateArray> AllDelegates; // 0x28
};

struct USQMapWidgetMapMarkerWaypoint : USQMapWidgetMapMarkerSelectable {
	USQMapIconComponent* MapIcon; // 0x2c8
};

struct UMeshSimplificationSettings : UDeveloperSettings {
	FName MeshReductionModuleName; // 0x38
};

struct UImageSequenceProtocol : UFrameGrabberProtocol {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UGarbageCollectionSettings : UDeveloperSettings {
	float TimeBetweenPurgingPendingKillObjects; // 0x38
	char FlushStreamingOnGC : 1; // 0x3c
	char AllowParallelGC : 1; // 0x3c
	char IncrementalBeginDestroyEnabled : 1; // 0x3c
	char MultithreadedDestructionEnabled : 1; // 0x3c
	char CreateGCClusters : 1; // 0x3c
	char ActorClusteringEnabled : 1; // 0x3c
	char BlueprintClusteringEnabled : 1; // 0x3c
	char UseDisregardForGCOnDedicatedServers : 1; // 0x3c
	int MinGCClusterSize; // 0x40
	int NumRetriesBeforeForcingGC; // 0x44
	int MaxObjectsNotConsideredByGC; // 0x48
	int SizeOfPermanentObjectPool; // 0x4c
	int MaxObjectsInGame; // 0x50
	int MaxObjectsInEditor; // 0x54
};

struct ABP_AKS74_1P29_Founders_C : ABP_AKS74_1P29_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UStaticMeshComponent* Front; // 0x7b8
	UStaticMeshComponent* Scope; // 0x7c0
};

struct ABP_RPG7_Heat_Proj2_C : ASQMortarProjectile {
	FPointerToUberGraphFrame UberGraphFrame; // 0x520
	USkeletalMeshComponent* SkeletalMesh; // 0x528
	UParticleSystem* BPEffectOnUnderMinFlightTime; // 0x530
	USoundBase* BPSoundonUnderMinFlightTime; // 0x538
};

struct UAnimSequenceBase : UAnimationAsset {
	TArray<FAnimNotifyEvent> Notifies; // 0x80
	float SequenceLength; // 0x90
	float RateScale; // 0x94
	FRawCurveTracks RawCurveData; // 0x98
};

struct USoundSubmix : UObject {
	TArray<USoundSubmix*> ChildSubmixes; // 0x28
	USoundSubmix* ParentSubmix; // 0x38
	ESubmixChannelFormat ChannelFormat; // 0x40
	char bMuteWhenBackgrounded : 1; // 0x41
	TArray<USoundEffectSubmixPreset*> SubmixEffectChain; // 0x48
	UAmbisonicsSubmixSettingsBase* AmbisonicsPluginSettings; // 0x58
	int EnvelopeFollowerAttackTime; // 0x60
	int EnvelopeFollowerReleaseTime; // 0x64
	float OutputVolume; // 0x68
	FScriptMulticastDelegate OnSubmixRecordedFileDone; // 0x70
};

struct UAISense_Sight : UAISense {
	int MaxTracesPerTick; // 0x130
	int MinQueriesPerTimeSliceCheck; // 0x134
	double MaxTimeSlicePerTick; // 0x138
	float HighImportanceQueryDistanceThreshold; // 0x140
	float MaxQueryImportance; // 0x148
	float SightLimitQueryImportance; // 0x14c
};

struct AGameplayAbilityWorldReticle : AActor {
	FWorldReticleParameters Parameters; // 0x248
	bool bFaceOwnerFlat; // 0x254
	bool bSnapToTargetedActor; // 0x255
	bool bIsTargetValid; // 0x256
	bool bIsTargetAnActor; // 0x257
	APlayerController* MasterPC; // 0x258
	AActor* TargetingActor; // 0x260
};

struct ABP_Projectile_7_62mm_C : ASQProjectile {
	UStaticMesh* TracerMesh; // 0x490
	UMaterial* TracerMaterial; // 0x498
};

struct USQSoldierStaticInfo : UDataAsset {
	float MaximumReviveTime; // 0x30
	float ReviveRecoveryPerSecond; // 0x34
	float HorizontalFallingDamageMultiplier; // 0x38
	float MaximumHorizontalSafeFallingSpeed; // 0x3c
	UCurveFloat* DamageRevivePenaltyCurve; // 0x40
	float GrabbingDistance; // 0x48
	float DraggingDropThresholdAngle; // 0x4c
	float GrabbingSphereRadius; // 0x50
	float MinBipodPronePitch; // 0x54
	float MaxBipodPronePitch; // 0x58
};

struct UBP_MaterialEffects_Tandem_C : UBP_MaterialEffects_HEAT_C {
	TMap<USQPhysicalMaterial*, FSQEffectsSet> Effects; // 0x28
};

struct ANavigationGraphNode : AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x80
	char bNetTemporary : 1; // 0x80
	char bNetStartup : 1; // 0x80
	char bOnlyRelevantToOwner : 1; // 0x80
	char bAlwaysRelevant : 1; // 0x80
	char bReplicateMovement : 1; // 0x80
	char bTearOff : 1; // 0x80
	char bExchangedRoles : 1; // 0x80
	char bNetLoadOnClient : 1; // 0x81
	char bNetUseOwnerRelevancy : 1; // 0x81
	char bRelevantForNetworkReplays : 1; // 0x81
	char bRelevantForLevelBounds : 1; // 0x81
	char bReplayRewindable : 1; // 0x81
	char bAllowTickBeforeBeginPlay : 1; // 0x81
	char bAutoDestroyWhenFinished : 1; // 0x81
	char bBlockInput : 1; // 0x81
	char bCanBeDamaged : 1; // 0x82
	char bCollideWhenPlacing : 1; // 0x82
	char bFindCameraComponentWhenViewTarget : 1; // 0x82
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x82
	char bIgnoresOriginShifting : 1; // 0x82
	char bEnableAutoLODGeneration : 1; // 0x82
	char bIsEditorOnlyActor : 1; // 0x82
	char bActorSeamlessTraveled : 1; // 0x82
	char bReplicates : 1; // 0x83
	char bCanBeInCluster : 1; // 0x83
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x83
	char bActorEnableCollision : 1; // 0x84
	char bActorIsBeingDestroyed : 1; // 0x84
	ENetRole RemoteRole; // 0x85
	FRepMovement ReplicatedMovement; // 0x88
	float InitialLifeSpan; // 0xbc
	float CustomTimeDilation; // 0xc0
	FRepAttachment AttachmentReplication; // 0xc8
	AActor* Owner; // 0x108
	FName NetDriverName; // 0x110
	ENetRole Role; // 0x118
	ENetDormancy NetDormancy; // 0x119
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x11a
	EAutoReceiveInput AutoReceiveInput; // 0x11b
	int InputPriority; // 0x11c
	UInputComponent* InputComponent; // 0x120
	float NetCullDistanceSquared; // 0x128
	int NetTag; // 0x12c
	float NetUpdateFrequency; // 0x130
	float MinNetUpdateFrequency; // 0x134
	char bUseRelativeNetUpdateFrequency : 1; // 0x138
	char bUseOwnerRelativeNetUpdateFrequency : 1; // 0x138
	float MinRelativeNetUpdateEvaluationFrequency; // 0x13c
	float NetPriority; // 0x140
	APawn* Instigator; // 0x148
	TArray<AActor*> Children; // 0x150
	USceneComponent* RootComponent; // 0x160
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x168
	TArray<FName> Layers; // 0x180
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x190
	TArray<FName> Tags; // 0x198
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x1a8
	FScriptMulticastDelegate OnTakePointDamage; // 0x1a9
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x1aa
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x1ab
	FScriptMulticastDelegate OnActorEndOverlap; // 0x1ac
	FScriptMulticastDelegate OnBeginCursorOver; // 0x1ad
	FScriptMulticastDelegate OnEndCursorOver; // 0x1ae
	FScriptMulticastDelegate OnClicked; // 0x1af
	FScriptMulticastDelegate OnReleased; // 0x1b0
	FScriptMulticastDelegate OnInputTouchBegin; // 0x1b1
	FScriptMulticastDelegate OnInputTouchEnd; // 0x1b2
	FScriptMulticastDelegate OnInputTouchEnter; // 0x1b3
	FScriptMulticastDelegate OnInputTouchLeave; // 0x1b4
	FScriptMulticastDelegate OnActorHit; // 0x1b5
	FScriptMulticastDelegate OnDestroyed; // 0x1b6
	FScriptMulticastDelegate OnEndPlay; // 0x1b7
	TArray<UActorComponent*> InstanceComponents; // 0x218
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x228
};

struct ASQTeamSpawnPoint : ASQGameSpawn {
	ASQTeamSpawnGroup* Group; // 0x420
};

struct ABP_L85A2AG36_UGL_Smoke_C : ABP_L85A2AG36_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UEnvQueryOption : UObject {
	UEnvQueryGenerator* Generator; // 0x28
	TArray<UEnvQueryTest*> Tests; // 0x30
};

struct UPrefabExporter : UExporter {
	UObject* SupportedClass; // 0x28
	UObject* ExportRootScope; // 0x30
	TArray<FString> FormatExtension; // 0x38
	TArray<FString> FormatDescription; // 0x48
	int PreferredFormatIndex; // 0x58
	int TextIndent; // 0x5c
	char bText : 1; // 0x60
	char bSelectedOnly : 1; // 0x60
	char bForceFileOperations : 1; // 0x60
	UAssetExportTask* ExportTask; // 0x68
};

struct USQMapWidgetMapMarkerObjective : USQMapWidgetMapMarker {
	UTexture2D* Texture; // 0x2a8
	FLinearColor Tint; // 0x2b0
	int SquadId; // 0x2c0
	int FireTeamId; // 0x2c4
};

struct UAnimCompress_RemoveTrivialKeys : UAnimCompress {
	float MaxPosDiff; // 0x50
	float MaxAngleDiff; // 0x54
	float MaxScaleDiff; // 0x58
};

struct URecastFilter_UseDefaultArea : UNavigationQueryFilter {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct USQBotComponent : UActorComponent {
	ASQSoldierNew* TargetEnemy; // 0xd8
	ASQSoldierNew* OwnerSoldier; // 0xe0
	float TargetingRange; // 0xec
	float CheckAtFloorDistance; // 0xf0
	float RandomHeadingYawRange; // 0xf4
	float RandomHeadingPitchRange; // 0xf8
	float TargetingMaxPitchDelta; // 0xfc
};

struct UAsyncTaskDownloadImage : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct ASQSquadState : AInfo {
	ASQSquad* AuthoritySquad; // 0x248
	int MaxSize; // 0x250
	int NumKills; // 0x254
	int NumDeaths; // 0x258
	int NumWoundeds; // 0x25c
	int NumWounds; // 0x260
	int NumTeamkills; // 0x264
	float Score; // 0x268
	float TeamWorkScore; // 0x26c
	float ObjectiveScore; // 0x270
	float HealPoints; // 0x274
	float RevivedPoints; // 0x278
	USQCoreStateComponent* StateObject; // 0x280
	bool bIsCommandSquad; // 0x288
	int ID; // 0x28c
	int TeamId; // 0x290
	TArray<ASQPlayerState*> PlayerStates; // 0x298
	ASQPlayerState* LeaderState; // 0x2a8
	FString Name; // 0x2b0
	bool bIsLocked; // 0x2c0
	float CreationTimeStamp; // 0x2c4
	FString SquadCreatorName; // 0x2c8
	FString SquadCreatorSteamID; // 0x2d8
};

struct USQGameInstance : UGameInstance {
	TArray<FSQSoliderNetPriorityObject> SoliderNetPriorities; // 0x168
	float SoldierNetPriorityConeSensitivity; // 0x178
	float SoldierNetPriorityConeFactor; // 0x17c
	ASQConnectionCheckBeaconHostObj* SQConnectionCheckHost; // 0x180
	ASQJoinBeaconHost* SQJoinQueueHost; // 0x188
	AOnlineBeaconHost* BeaconHost; // 0x190
	ASQJoinBeaconClient* JoinQueueClient; // 0x198
	USQServerListItemWidget* LastServerAttemptWidget; // 0x1a0
	USQFindSessionsCallbackProxy* ActiveFindSessionsCallback; // 0x1a8
	USQFindFriendsCallbackProxy* ActiveFindFriendsCallback; // 0x1b0
	TMap<FString, ASQConnectionCheckBeaconClient*> ConnectionCheckClients; // 0x1b8
	bool bSaveServerBrowserResultsToFile; // 0x224
	USQGameInstanceEvents* GameInstanceEvents; // 0x340
	USQConfig* SquadConfig; // 0x348
	FScriptMulticastDelegate OnMapIconCreated; // 0x350
	FScriptMulticastDelegate OnMapIconDestroyed; // 0x360
	FScriptMulticastDelegate OnWorldOriginLocationChangedEvent; // 0x370
	FString UserEnteredPassword; // 0x380
	UAudioComponent* MusicAudioComponent; // 0x390
	USoundBase* MusicSoundCue; // 0x398
	FBlueprintSessionResult PendingServer; // 0x3a0
	bool bHasPendingServer; // 0x458
	TArray<char> LastTicket; // 0x460
	FDateTime LastTicketRefresh; // 0x470
	FString ServerPartMessage; // 0x480
	TArray<FModdingRuntimeModInfoDetails> ModInfo; // 0x490
	FString MainMenuMap; // 0x4a0
	USQLevel* CurrentLevel; // 0x4b0
	USQLayer* CurrentLayer; // 0x4b8
	USQLayer* NextLayer; // 0x4c0
	USQLevel* NextLevel; // 0x4c8
	bool InitialGameDiscoveryCompleted; // 0x4fb
	TMap<FName, USQLevel*> AvailableLevels; // 0x500
	TMap<FName, USQLayer*> AvailableLayers; // 0x550
	TMap<FName, USQFaction*> AvailableFactions; // 0x5a0
	TMap<FName, USQFactionSetup*> AvailableFactionSetups; // 0x5f0
	bool InitialModDiscoveryCompleted; // 0x650
};

struct UCanvasPanel : UPanelWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct USoundNodeAttenuation : USoundNode {
	USoundAttenuation* AttenuationSettings; // 0x40
	FSoundAttenuationSettings AttenuationOverrides; // 0x48
	char bOverrideAttenuation : 1; // 0x330
};

struct UPlanarReflectionComponent : USceneCaptureComponent {
	UBoxComponent* PreviewBox; // 0x2b0
	float NormalDistortionStrength; // 0x2b8
	float PrefilterRoughness; // 0x2bc
	float PrefilterRoughnessDistance; // 0x2c0
	int ScreenPercentage; // 0x2c4
	float ExtraFOV; // 0x2c8
	float DistanceFromPlaneFadeStart; // 0x2cc
	float DistanceFromPlaneFadeEnd; // 0x2d0
	float DistanceFromPlaneFadeoutStart; // 0x2d4
	float DistanceFromPlaneFadeoutEnd; // 0x2d8
	float AngleFromPlaneFadeStart; // 0x2dc
	float AngleFromPlaneFadeEnd; // 0x2e0
	bool bShowPreviewPlane; // 0x2e4
	bool bRenderSceneTwoSided; // 0x2e5
};

struct ABP_AK74_Tracer_C : ABP_AK74_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UFontImportOptions : UObject {
	FFontImportOptionsData Data; // 0x28
};

struct UWheeledVehicleMovementComponentNW : UWheeledVehicleMovementComponent {
	FVehicleNWEngineData EngineSetup; // 0x2d8
	TArray<FVehicleNWWheelDifferentialData> DifferentialSetup; // 0x378
	FVehicleNWTransmissionData TransmissionSetup; // 0x388
	FRuntimeFloatCurve SteeringCurve; // 0x3c8
};

struct UDistributionVectorUniformCurve : UDistributionVector {
	FInterpCurveTwoVectors ConstantCurve; // 0x38
	char bLockAxes1 : 1; // 0x50
	char bLockAxes2 : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes[0x2]; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x56
	char bUseExtremes : 1; // 0x5c
};

struct UInterpTrackLinearColorProp : UInterpTrackLinearColorBase {
	FName PropertyName; // 0x90
};

struct ABP_AK74GP25_Rifle_C : ABP_AK74_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UPrimaryDataAsset : UDataAsset {
	UDataAsset* NativeClass; // 0x28
};

struct UInputTouchDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputTouchDelegateBinding> InputTouchDelegateBindings; // 0x28
};

struct UMaterialExpressionCrossProduct : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UCompositeDataTable : UDataTable {
	TArray<UDataTable*> ParentTables; // 0xb0
	TArray<UDataTable*> OldParentTables; // 0xc8
};

struct ULightmassPortalComponent : USceneComponent {
	UBoxComponent* PreviewBox; // 0x218
};

struct UMaterialExpressionLightmapUVs : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UPoseWatch : UObject {
	UEdGraphNode* Node; // 0x28
	FColor PoseWatchColour; // 0x30
};

struct UReplicationGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode_ActorList {
	TArray<FAlwaysRelevantActorInfo> PastRelevantActors; // 0x110
	AActor* LastViewer; // 0x120
	AActor* LastViewTarget; // 0x128
};

struct UParticleModuleRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionFloat StartRotationRate; // 0x30
};

struct ABP_AK74_Tracer_Founder_C : ABP_AK74_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UPlayFabLocalizationAPI : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnPlayFabResponse; // 0x28
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x90
	UPlayFabJsonObject* RequestJsonObj; // 0x98
	UPlayFabJsonObject* ResponseJsonObj; // 0xa0
};

struct ABP_L85A2_ElcanLDS_Foregrip_C : ABP_L85A2_Foregrip_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
};

struct UAREnvironmentCaptureProbeTexture : UTextureCube {
	EARTextureType TextureType; // 0x128
	float Timestamp; // 0x12c
	FGuid ExternalTextureGuid; // 0x130
	FVector2D Size; // 0x140
};

struct UBP_Attachment_AK74M_Front_Desert_C : UBP_Attachment_AK74M_Front_C {
	float MeshTransitionPercentage; // 0x4b0
	UStaticMesh* ADSMesh; // 0x4b8
	FTransform ADSMeshTransform; // 0x4c0
	UStaticMesh* NonADSMesh; // 0x4f0
	FTransform NonADSMeshTransform; // 0x500
	TArray<FSQMeshTransitionSettings> InToADSMeshTransitionSettings; // 0x530
	TArray<FSQMeshTransitionSettings> OutFromADSMeshTransitionSettings; // 0x540
};

struct UMovieScenePrimitiveMaterialSection : UMovieSceneSection {
	FMovieSceneObjectPathChannel MaterialChannel; // 0xe0
};

struct UReplicationGraphNode : UObject {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct ASQSpawner : AActor {
	FTimespan MinimumDelayBetweenSpawn; // 0x250
	float SpawnPositionHeightCheck; // 0x258
	float SpawnPositionOffset; // 0x25c
	ESQTeam Team; // 0x260
	TArray<EObjectTypeQuery> ObjectCollisionTypes; // 0x268
	bool SpawnInProgress; // 0x278
	bool SpawnOverlapped; // 0x279
	FDateTime SpawnerLockedUntil; // 0x280
	FTransform SpawnPosition; // 0x290
	FVector SpawnBound; // 0x2c0
	ASQTeam* TeamAuthority; // 0x2d0
};

struct UHighlightsCloseGroupAsync : UBlueprintAsyncActionBase {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct UInterpFilter : UObject {
	FString Caption; // 0x28
};

struct ABrushShape : ABrush {
	EBrushType BrushType; // 0x248
	FColor BrushColor; // 0x24c
	int PolyFlags; // 0x250
	char bColored : 1; // 0x254
	char bSolidWhenSelected : 1; // 0x254
	char bPlaceableFromClassBrowser : 1; // 0x254
	char bNotForClientOrServer : 1; // 0x254
	UModel* Brush; // 0x258
	UBrushComponent* BrushComponent; // 0x260
	char bInManipulation : 1; // 0x268
	TArray<FGeomSelection> SavedSelections; // 0x270
};

struct ABP_AK74MGP25_UGL_Smoke_Blue_C : ABP_AK74MGP25_UGL_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct USQCommanderVotingWidget : USQUserWidget {
	bool bIsVotingAvailable; // 0x230
	bool bIsVotePending; // 0x231
	bool bIsVoteInProgress; // 0x232
	USQCommanderVotingPlayerItem* VoteItemClass; // 0x238
	UPanelWidget* VoteItemsParent; // 0x240
};

struct ADefaultPhysicsVolume : APhysicsVolume {
	float TerminalVelocity; // 0x280
	int Priority; // 0x284
	float FluidFriction; // 0x288
	char bWaterVolume : 1; // 0x28c
	char bPhysicsOnContact : 1; // 0x28c
};

struct ASQAmmoResource : ASQVehicleResource {
	float ResourceDropQuantity; // 0x248
	float ResourceDropRate; // 0x24c
	float ServerResourceRate; // 0x250
	ASQForwardBase* CurrentFob; // 0x258
	AActor* CurrentCaptureZone; // 0x260
	USQVehicleResourceWeaponInventoryComponent* ParentInventory; // 0x268
	int MaxResources; // 0x278
	int Resources; // 0x27c
};

struct USQWeaponSkinData : USQSteamItem {
	FSQWeaponReplacementItem ReplacementData; // 0x40
};

struct USoundConcurrency : UObject {
	FSoundConcurrencySettings Concurrency; // 0x28
};

struct UBP_M4M203_UGL_HE_StaticInfo_C : UBP_M4M203_UGL_Parent_StaticInfo_C {
	UAnimMontage* ReloadBipodWeaponMontage; // 0x4f8
	UAnimMontage* ReloadBipod1pMontage; // 0x500
	UAnimMontage* ReloadBipod3pMontage; // 0x508
	UAnimMontage* ReloadDryWeaponMontage; // 0x510
	UAnimMontage* ReloadDry1pMontage; // 0x518
	UAnimMontage* ReloadDry3pMontage; // 0x520
	UAnimMontage* ReloadDryBipodWeaponMontage; // 0x528
	UAnimMontage* ReloadDryBipod1pMontage; // 0x530
	UAnimMontage* ReloadDryBipod3pMontage; // 0x538
	TArray<UAnimMontage*> RandomFire1pMontage; // 0x540
	UAnimMontage* FireAdd3pMontage; // 0x550
	UAnimMontage* FireTriggerWeaponMontage; // 0x558
	UAnimMontage* FireTrigger1pMontage; // 0x560
	UAnimMontage* FireTrigger3pMontage; // 0x568
	UAnimMontage* FireSway1pMontage; // 0x570
	UAnimMontage* FireSway1pBlendInMontage; // 0x578
	UAnimMontage* FireAds1pMontage; // 0x580
	UAnimMontage* FireAds3pMontage; // 0x588
	UAnimMontage* FireBipodWeaponMontage; // 0x590
	UAnimMontage* FireBipod1pMontage; // 0x598
	UAnimMontage* FireBipod3pMontage; // 0x5a0
	UAnimMontage* FireAddBipod1pMontage; // 0x5a8
	UAnimMontage* FireAddBipod3pMontage; // 0x5b0
	FSQMontageSectionNames BipodEndLoopSectionNames; // 0x5b8
	UAnimMontage* BipodWeaponMontage; // 0x5e0
	UAnimMontage* Bipod1pMontage; // 0x5e8
	UAnimMontage* Bipod3pMontage; // 0x5f0
	UAnimMontage* FiremodeBipodMontage; // 0x5f8
	UAnimMontage* FiremodeBipodWeaponMontage; // 0x600
	UAnimMontage* FiremodeMontage; // 0x608
	UAnimMontage* FiremodeWeaponMontage; // 0x610
	UAnimMontage* BobbingAimProneSway1pMontage; // 0x618
	UAnimMontage* BobbingAim1pMontage; // 0x620
	float MuzzleFlashCullDistanceInMeters; // 0x628
	FName MuzzleFlashEffectSocket; // 0x62c
	UParticleSystem* MuzzleFlashEffect1P; // 0x638
	UParticleSystem* MuzzleFlashEffect3P; // 0x640
	float ShellEjectionCullDistanceInMeters; // 0x648
	FName ShellEjectionEffectSocket; // 0x64c
	UParticleSystem* ShellEjectionEffect1p; // 0x658
	UParticleSystem* ShellEjectionEffect3p; // 0x660
	float RecoilCameraOffsetFactor; // 0x668
	float RecoilCameraOffsetInterpSpeed; // 0x66c
	float RecoilLofCameraOffsetLimit; // 0x670
	float RecoilLofAttackInterpSpeed; // 0x674
	float RecoilCanReleaseInterpSpeed; // 0x678
	float RecoilLofReleaseInterpSpeed; // 0x67c
	float RecoilWeaponRelLocFactor; // 0x680
	float RecoilCameraShotInterpSpeed; // 0x684
	float RecoilAdsCameraShotInterpSpeed; // 0x688
	float MoveRecoilFactorRelease; // 0x68c
	float AddMoveRecoil; // 0x690
	float MaxMoveRecoilFactor; // 0x694
	float MinMoveRecoilFactor; // 0x698
	float LowStaminaRecoilFactor; // 0x69c
	float FullStaminaRecoilFactor; // 0x6a0
	FVector ProneAdsRecoilMean; // 0x6a4
	FVector ProneAdsRecoilSigma; // 0x6b0
	FVector ProneRecoilMean; // 0x6bc
	FVector ProneRecoilSigma; // 0x6c8
	FVector CrouchAdsRecoilMean; // 0x6d4
	FVector CrouchAdsRecoilSigma; // 0x6e0
	FVector CrouchRecoilMean; // 0x6ec
	FVector CrouchRecoilSigma; // 0x6f8
	FVector StandAdsRecoilMean; // 0x704
	FVector StandAdsRecoilSigma; // 0x710
	FVector StandRecoilMean; // 0x71c
	FVector StandRecoilSigma; // 0x728
	FVector ProneTransitionRecoilMean; // 0x734
	FVector ProneTransitionRecoilSigma; // 0x740
	FVector BipodAdsRecoilMean; // 0x74c
	FVector BipodAdsRecoilSigma; // 0x758
	FVector BipodRecoilMean; // 0x764
	FVector BipodRecoilSigma; // 0x770
	float DeviationVisuFbInterpSpeed_YZ; // 0x77c
	float DeviationVisuFbInterpSpeed_Final; // 0x780
	float DeviationVisuFbMax; // 0x784
	float MinShotDeviationFactor; // 0x788
	float MaxShotDeviationFactor; // 0x78c
	float AddShotDeviationFactor; // 0x790
	float AddShotDeviationFactorAds; // 0x794
	float ShotDeviationFactorRelease; // 0x798
	float LowStaminaDeviationFactor; // 0x79c
	float FullStaminaDeviationFactor; // 0x7a0
	float MoveDeviationFactorRelease; // 0x7a4
	float AddMoveDeviation; // 0x7a8
	float MaxMoveDeviationFactor; // 0x7ac
	float MinMoveDeviationFactor; // 0x7b0
	float MinBipodAdsDeviation; // 0x7b4
	float MinBipodDeviation; // 0x7b8
	float MinProneAdsDeviation; // 0x7bc
	float MinProneDeviation; // 0x7c0
	float MinCrouchAdsDeviation; // 0x7c4
	float MinCrouchDeviation; // 0x7c8
	float MinStandAdsDeviation; // 0x7cc
	float MinStandDeviation; // 0x7d0
	float MinProneTransitionDeviation; // 0x7d4
	float SwayInterpSpeed_YZ; // 0x7d8
	float SwayInterpSpeed_Final; // 0x7dc
	float HasSway; // 0x7e0
	float MoveSwayFactorRelease; // 0x7e4
	float AddMoveSway; // 0x7e8
	float MinMoveSwayFactor; // 0x7ec
	float MaxMoveSwayFactor; // 0x7f0
	float LowStaminaSwayFactor; // 0x7f4
	float FullStaminaSwayFactor; // 0x7f8
	float HoldingBreathSwayFactor; // 0x7fc
	float ProneAdsSwayMin; // 0x800
	float ProneSwayMin; // 0x804
	float CrouchAdsSwayMin; // 0x808
	float CrouchSwayMin; // 0x80c
	float StandAdsSwayMin; // 0x810
	float StandSwayMin; // 0x814
	float ProneTransitionSwayMin; // 0x818
	bool bHasBipod; // 0x81c
	float BipodLength; // 0x820
	float BipodHeightRaw; // 0x824
	bool bHasAdjustableSight; // 0x828
	bool bLeanHeadWhenAds; // 0x829
	TArray<FSQAdjustableSightMontageSet> AdsSightsAnim; // 0x830
	UAnimMontage* BaseAds1pMontage; // 0x840
	UAnimMontage* AdsTransition1pMontage; // 0x848
	UAnimMontage* FromAdsTransition1pMontage; // 0x850
	UAnimSequence* AdjustableAdsSightItemAnim; // 0x858
	float AdjustableAdsSightItemFrameRate; // 0x860
	bool bHasAdsTransition; // 0x864
	FVector Aim1pWeaponMeshPosition; // 0x868
	FVector Aim1pWeaponMeshRescale; // 0x874
	float Steady1pHipFireDuration; // 0x880
	bool bPlaySoundOnMagEmpty; // 0x884
	int PlaySoundOnEmptyUse; // 0x888
	int PlaySoundOnEmptyAltUse; // 0x88c
	USoundCue* ToggleFiremodeSound1P; // 0x890
	USoundCue* ToggleFiremodeSound3P; // 0x898
	USoundCue* FromAdsSound1p; // 0x8a0
	USoundCue* FromAdsSound3p; // 0x8a8
	USoundCue* ToAdsSound1p; // 0x8b0
	USoundCue* ToAdsSound3p; // 0x8b8
	USoundCue* SightSwitchingSound1p; // 0x8c0
	USoundCue* SightSwitchingSound3p; // 0x8c8
	USoundCue* MagEmptySound1p; // 0x8d0
	USoundCue* MagEmptySound3p; // 0x8d8
	USoundCue* EmptyUseSound1p; // 0x8e0
	USoundCue* EmptyUseSound3p; // 0x8e8
	USoundCue* EmptyAltUseSound1p; // 0x8f0
	USoundCue* EmptyAltUseSound3p; // 0x8f8
	FSQMontageSectionNames BobbingAimEndLoopSectionNames; // 0x900
	FText DefaultZeroingText; // 0x928
	FName AimDirectionSocketName; // 0x940
	bool bShowZeroingInHud; // 0x948
};

struct UPlatformEventsComponent : UActorComponent {
	FScriptMulticastDelegate PlatformChangedToLaptopModeDelegate; // 0xd8
	FScriptMulticastDelegate PlatformChangedToTabletModeDelegate; // 0xe8
};

struct UARBasicLightEstimate : UARLightEstimate {
	float AmbientIntensityLumens; // 0x28
	float AmbientColorTemperatureKelvin; // 0x2c
	FLinearColor AmbientColor; // 0x30
};

struct USQAvailability_Deployable : USQAvailability {
	USQDeployableSettings* Setting; // 0x50
};

struct USoundNodeGroupControl : USoundNode {
	TArray<int> GroupSizes; // 0x40
};

struct ASQGameState : AGameState {
	FScriptMulticastDelegate RS_OnMatchStart; // 0x2a8
	bool bTimerPaused; // 0x2b8
	bool bIsTicketBasedGame; // 0x2b9
	bool bAllowPublicClientsToRecord; // 0x2ba
	bool bTeamPrepsActive; // 0x2bb
	TArray<ASQTeamState*> TeamStates; // 0x2f8
	TArray<ASQTeamState*> IndexedTeamStates; // 0x308
	int ChangeTeamWaitTime; // 0x318
	ASQTeamState* WinningTeam; // 0x320
	int WinningTeamTickets; // 0x328
	float ServerTickRate; // 0x32c
	FString GameModeName; // 0x330
	TArray<FSQGameModeRules> GameModeRules; // 0x340
	FString NextMapName; // 0x350
	USQGameCommandComponent* GameCommandComponent; // 0x360
	USQGameCommandComponent* GameCommandComponentClass; // 0x368
	int MaxFireTeamCount; // 0x370
	int MaxFireTeamSize; // 0x374
	USQVotingState* VotingState; // 0x378
	FString MapName; // 0x380
	int MaxPlayers; // 0x390
	FString ServerName; // 0x398
	FString MessageOfTheDay; // 0x3a8
	USQCoreStateConnectionChildActorComponent* CoreStateConnectionChildActorComponent; // 0x3b8
	float TimeOfCompletion; // 0x3c0
	int ServerStartTimeStamp; // 0x3d8
	USQMapMarkerManagerComponent* MapMarkerManagerComponent; // 0x3e0
	FSQGameFlags GameFlags; // 0x3e8
	FSQServerSettings ServerSettings; // 0x3f8
};

struct UBTService : UBTAuxiliaryNode {
	float Interval; // 0x60
	float RandomDeviation; // 0x64
	char bCallTickOnSearchStart : 1; // 0x68
	char bRestartTimerOnEachActivation : 1; // 0x68
};

struct UOperatorField : UFieldNodeBase {
	float Magnitude; // 0xd8
	UFieldNodeBase* RightField; // 0xe0
	UFieldNodeBase* LeftField; // 0xe8
	EFieldOperationType Operation; // 0xf0
};

struct UShockwaveCameraShake_Long_C : UCameraShake {
	char bSingleInstance : 1; // 0x28
	float OscillationDuration; // 0x2c
	float OscillationBlendInTime; // 0x30
	float OscillationBlendOutTime; // 0x34
	FROscillator RotOscillation; // 0x38
	FVOscillator LocOscillation; // 0x5c
	FFOscillator FOVOscillation; // 0x80
	float AnimPlayRate; // 0x8c
	float AnimScale; // 0x90
	float AnimBlendInTime; // 0x94
	float AnimBlendOutTime; // 0x98
	float RandomAnimSegmentDuration; // 0x9c
	UCameraAnim* Anim; // 0xa0
	char bRandomAnimSegment : 1; // 0xa8
	APlayerCameraManager* CameraOwner; // 0xc0
	float ShakeScale; // 0x148
	float OscillatorTimeRemaining; // 0x14c
	UCameraAnimInst* AnimInst; // 0x150
};

struct ADefaultPawn : APawn {
	float BaseTurnRate; // 0x2a8
	float BaseLookUpRate; // 0x2ac
	UPawnMovementComponent* MovementComponent; // 0x2b0
	USphereComponent* CollisionComponent; // 0x2b8
	UStaticMeshComponent* MeshComponent; // 0x2c0
	char bAddDefaultMovementBindings : 1; // 0x2c8
};

struct ALightmassPortal : AActor {
	ULightmassPortalComponent* PortalComponent; // 0x248
};

struct UWidgetSwitcherSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct ASQInsurgencyRuleset : ASQObjectiveRuleset {
	int IntelligencePoints; // 0x338
	ESQTeam CoalitionTeam; // 0x33c
	ESQTeam InsurgentTeam; // 0x33d
	int MaxNumberOfFirstCachesToShowCoalition; // 0x340
	FVector2D TimeDelayToShowFirstCache; // 0x344
	FVector2D TimeDelayToShowNextCache; // 0x34c
	FVector2D TimeDelayToNotifyCoalitionOfFirstCaches; // 0x354
	FVector2D TimeDelayToNotifyCoalitionOfCache; // 0x35c
	int IntelligencePointsPerInsurgentKilled; // 0x364
	int IntelligencePointsPerInsurgentArrested; // 0x368
	int IntelligencePointsPerCivilianKilled; // 0x36c
	TArray<FSQPlayerLimiter> IntelligencePointsRequiredToShowCache; // 0x370
	USQRoleSettings* CivilianRole; // 0x380
};

struct USQNetMoveComponent : USQPawnMovementComponent {
	bool bPerformMoveOnServer; // 0x1f0
	float MaxPendingMoveDelay; // 0x1f4
	float MaxStartLocationDifference; // 0x1f8
	float MoveTimestampQuantum; // 0x1fc
	bool bShouldInterpolate; // 0x200
	float MinTimeBetweenTimeStampResets; // 0x204
	float MaxSmoothNetUpdateDist; // 0x208
	float NoSmoothNetUpdateDist; // 0x20c
	TArray<char> LatestPackedMove; // 0x218
};

struct USQGridMarkerBase : USQUserWidget {
	bool bDrawVerticalNumbers; // 0x230
	bool bDrawHorizontalLetters; // 0x231
	FSlateFontInfo GridMarkerFontInfo; // 0x238
	FLinearColor GridMarkerFontColor; // 0x288
	FVector2D GridMarkerFontOffset; // 0x298
	ESQTextHorizontalAlignment HorizontalAlignment; // 0x2a0
	ESQTextVerticalAlignment VerticalAlignment; // 0x2a1
	USQMap* OwnerMap; // 0x2a8
};

struct UParticleModuleVectorFieldLocal : UParticleModuleVectorFieldBase {
	UVectorField* VectorField; // 0x30
	FVector RelativeTranslation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale3D; // 0x50
	float Intensity; // 0x5c
	float Tightness; // 0x60
	char bIgnoreComponentTransform : 1; // 0x64
	char bTileX : 1; // 0x64
	char bTileY : 1; // 0x64
	char bTileZ : 1; // 0x64
	char bUseFixDT : 1; // 0x64
};

struct UParticleModuleOrbit : UParticleModuleOrbitBase {
	EOrbitChainMode ChainMode; // 0x38
	FRawDistributionVector OffsetAmount; // 0x40
	FOrbitOptions OffsetOptions; // 0x90
	FRawDistributionVector RotationAmount; // 0x98
	FOrbitOptions RotationOptions; // 0xe8
	FRawDistributionVector RotationRateAmount; // 0xf0
	FOrbitOptions RotationRateOptions; // 0x140
};

struct ABP_RPG7V2_Tandem_2mag_Founders_C : ABP_RPG7V2_Tandem_Founders_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct UAISense : UObject {
	float DefaultExpirationAge; // 0x28
	EAISenseNotifyType NotifyType; // 0x2c
	char bWantsNewPawnNotification : 1; // 0x30
	char bAutoRegisterAllPawnsAsSources : 1; // 0x30
	UAIPerceptionSystem* PerceptionSystemInstance; // 0x38
};

struct UNullNavSysConfig : UNavigationSystemConfig {
	FSoftClassPath NavigationSystemClass; // 0x28
	char bIsOverriden : 1; // 0x40
};

struct UAIAsyncTaskBlueprintProxy : UObject {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFail; // 0x38
};

struct UInterpTrackInstSlomo : UInterpTrackInst {
	float OldTimeDilation; // 0x28
};

struct UMaterialExpressionMin : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMaterialExpressionTextureSampleParameterSubUV : UMaterialExpressionTextureSampleParameter2D {
	char bBlend : 1; // 0x100
};

struct USQSquadStateDataDeployableExplosive : USQSquadStateDataDeployable {
	ESQExplosiveType ExplosiveType; // 0x188
};

struct UBlackboardKeyType_Enum : UBlackboardKeyType {
	UEnum* EnumType; // 0x30
	FString EnumName; // 0x38
	char bIsEnumNameValid : 1; // 0x48
};

struct ABP_M4M203_M68_UGL_Smoke_Red_Founders_C : ABP_M4M203_M68_UGL_Smoke_Founders_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBP_MapWidgetMapMarkerObjective_C : USQMapWidgetMapMarkerObjective {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c8
	UImage* MarkerImage; // 0x2d0
	UScaleBox* ScaleBox_1; // 0x2d8
};

struct UAISense_Blueprint : UAISense {
	UUserDefinedStruct* ListenerDataType; // 0x80
	TArray<UAIPerceptionComponent*> ListenerContainer; // 0x88
	TArray<UAISenseEvent*> UnprocessedEvents; // 0x98
};

struct USQFieldDressingStaticInfo : USQItemStaticInfo {
	UAnimMontage* HealingSelfRightArm1pMontage; // 0x4f8
	UAnimMontage* HealingSelfRightArm3pMontage; // 0x500
	UAnimMontage* HealingSelfRightArm1pWeaponMontage; // 0x508
	UAnimMontage* HealingSelfRightArm3pWeaponMontage; // 0x510
	UAnimMontage* HealingSelfLeftArm1pMontage; // 0x518
	UAnimMontage* HealingSelfLeftArm3pMontage; // 0x520
	UAnimMontage* HealingSelfLeftArm1pWeaponMontage; // 0x528
	UAnimMontage* HealingSelfLeftArm3pWeaponMontage; // 0x530
	UAnimMontage* HealingSelfEnd1pMontage; // 0x538
	UAnimMontage* HealingSelfEnd3pMontage; // 0x540
	UAnimMontage* HealingSelfEnd1pWeaponMontage; // 0x548
	UAnimMontage* HealingSelfEnd3pWeaponMontage; // 0x550
	UAnimMontage* Healing1pMontage; // 0x558
	UAnimMontage* Healing3pMontage; // 0x560
	UAnimMontage* HealingEnd1pMontage; // 0x568
	UAnimMontage* HealingEnd3pMontage; // 0x570
	UAnimMontage* Healing1pWeaponMontage; // 0x578
	UAnimMontage* Healing3pWeaponMontage; // 0x580
	UAnimMontage* HealingEnd1pWeaponMontage; // 0x588
	UAnimMontage* HealingEnd3pWeaponMontage; // 0x590
	UAnimMontage* Reviving1pMontage; // 0x598
	UAnimMontage* Reviving3pMontage; // 0x5a0
	UAnimMontage* RevivingEnd1pMontage; // 0x5a8
	UAnimMontage* RevivingEnd3pMontage; // 0x5b0
	UAnimMontage* Reviving1pWeaponMontage; // 0x5b8
	UAnimMontage* Reviving3pWeaponMontage; // 0x5c0
	UAnimMontage* RevivingEnd1pWeaponMontage; // 0x5c8
	UAnimMontage* RevivingEnd3pWeaponMontage; // 0x5d0
	USoundCue* HealSelfSound; // 0x5d8
	USoundCue* HealOtherSound; // 0x5e0
	USoundCue* ReviveOtherSound; // 0x5e8
	float NormalReviveDuration; // 0x5f0
	float MedicReviveDuration; // 0x5f4
	float NormalStopBleedingOtherDuration; // 0x5f8
	float NormalStopBleedingSelfDuration; // 0x5fc
	float MedicStopBleedingOtherDuration; // 0x600
	float MedicStopBleedingSelfDuration; // 0x604
	float AnimPlayRateMultiplier; // 0x608
};

struct USQSoundNodeDistanceDelay : USoundNode {
	float SpeedOfSound; // 0x40
	float DelayMax; // 0x44
	float TestDistance; // 0x48
};

struct UNavTestRenderingComponent : UPrimitiveComponent {
	float MinDrawDistance; // 0x220
	float LDMaxDrawDistance; // 0x224
	float CachedMaxDrawDistance; // 0x228
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x22c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x22d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x22e
	ELightmapType LightmapType; // 0x22f
	char bUseMaxLODAsImposter : 1; // 0x230
	char bNeverDistanceCull : 1; // 0x230
	char bAlwaysCreatePhysicsState : 1; // 0x230
	char bGenerateOverlapEvents : 1; // 0x230
	char bGenerateLocalOverlapEvents : 1; // 0x231
	char bMultiBodyOverlap : 1; // 0x231
	char bTraceComplexOnMove : 1; // 0x231
	char bReturnMaterialOnMove : 1; // 0x231
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x231
	char bAllowCullDistanceVolume : 1; // 0x231
	char bHasMotionBlurVelocityMeshes : 1; // 0x231
	char bVisibleInReflectionCaptures : 1; // 0x232
	char bVisibleInRayTracing : 1; // 0x232
	char bRenderInMainPass : 1; // 0x232
	char bReceivesDecals : 1; // 0x232
	char bOwnerNoSee : 1; // 0x232
	char bOnlyOwnerSee : 1; // 0x232
	char bTreatAsBackgroundForOcclusion : 1; // 0x232
	char bUseAsOccluder : 1; // 0x232
	char bSelectable : 1; // 0x233
	char bForceMipStreaming : 1; // 0x233
	char bHasPerInstanceHitProxies : 1; // 0x233
	char CastShadow : 1; // 0x233
	char bAffectDynamicIndirectLighting : 1; // 0x233
	char bAffectDistanceFieldLighting : 1; // 0x233
	char bCastDynamicShadow : 1; // 0x233
	char bCastStaticShadow : 1; // 0x233
	char bCastVolumetricTranslucentShadow : 1; // 0x234
	char bSelfShadowOnly : 1; // 0x234
	char bCastFarShadow : 1; // 0x234
	char bCastInsetShadow : 1; // 0x234
	char bCastCinematicShadow : 1; // 0x234
	char bCastHiddenShadow : 1; // 0x234
	char bCastShadowAsTwoSided : 1; // 0x234
	char bLightAsIfStatic : 1; // 0x234
	char bLightAttachmentsAsGroup : 1; // 0x235
	char bReceiveMobileCSMShadows : 1; // 0x235
	char bSingleSampleShadowFromStationaryLights : 1; // 0x235
	char bIgnoreRadialImpulse : 1; // 0x235
	char bIgnoreRadialForce : 1; // 0x235
	char bApplyImpulseOnDamage : 1; // 0x235
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x235
	char AlwaysLoadOnClient : 1; // 0x235
	char AlwaysLoadOnServer : 1; // 0x236
	char bUseEditorCompositing : 1; // 0x236
	char bRenderCustomDepth : 1; // 0x236
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x237
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x239
	FLightingChannels LightingChannels; // 0x23a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x23b
	int CustomDepthStencilValue; // 0x23c
	FCustomPrimitiveData CustomPrimitiveData; // 0x240
	int TranslucencySortPriority; // 0x250
	int VisibilityId; // 0x254
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x258
	int VirtualTextureLodBias; // 0x268
	int VirtualTextureCullMips; // 0x26c
	int VirtualTextureMinCoverage; // 0x270
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x274
	float LpvBiasMultiplier; // 0x27c
	float BoundsScale; // 0x288
	TArray<AActor*> MoveIgnoreActors; // 0x298
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2a8
	FBodyInstance BodyInstance; // 0x2c8
	FScriptMulticastDelegate OnComponentHit; // 0x3d8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3d9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3da
	FScriptMulticastDelegate OnComponentWake; // 0x3db
	FScriptMulticastDelegate OnComponentSleep; // 0x3dc
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3de
	FScriptMulticastDelegate OnEndCursorOver; // 0x3df
	FScriptMulticastDelegate OnClicked; // 0x3e0
	FScriptMulticastDelegate OnReleased; // 0x3e1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3e2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3e3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3e4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3e5
	UPrimitiveComponent* LODParentPrimitive; // 0x400
};

struct UBP_SquadStateDataMapMarkerObjective_C : USQSquadStateDataMapMarkerObjective {
	UTexture2D* Texture; // 0x180
	FLinearColor Tint; // 0x188
	int FireTeamId; // 0x198
};

struct ABP_L85A2AG36_ElcanLDS_UGL_Smoke_C : ABP_L85A2AG36_ElcanLDS_UGL_Parent_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMaterialExpressionOneMinus : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UEdGraphNode : UObject {
	TArray<UEdGraphPin_Deprecated*> DeprecatedPins; // 0x38
	int NodePosX; // 0x48
	int NodePosY; // 0x4c
	int NodeWidth; // 0x50
	int NodeHeight; // 0x54
	ENodeAdvancedPins AdvancedPinDisplay; // 0x58
	ENodeEnabledState EnabledState; // 0x59
	char bDisplayAsDisabled : 1; // 0x5b
	char bUserSetEnabledState : 1; // 0x5b
	char bIsNodeEnabled : 1; // 0x5b
	char bHasCompilerMessage : 1; // 0x5b
	FString NodeComment; // 0x60
	int ErrorType; // 0x70
	FString ErrorMsg; // 0x78
	FGuid NodeGuid; // 0x88
};

struct USQAASGraphLattice : USQMapLattice {
	bool bHidesUncapLinks; // 0x250
	FLinearColor LatticeNeutralColor; // 0x254
	FLinearColor LatticeEnemyColor; // 0x264
	FLinearColor LatticeFriendlyColor; // 0x274
	float LineThickness; // 0x284
	ASQAASGraph* lattice; // 0x288
};

struct UPhysicsConstraintTemplate : UObject {
	FConstraintInstance DefaultInstance; // 0x28
	TArray<FPhysicsConstraintProfileHandle> ProfileHandles; // 0x1e0
	FConstraintProfileProperties DefaultProfile; // 0x1f0
};

struct USQSquadStateDataMapMarkerWaypoint : USQSquadStateDataMapMarkerSelectable {
	USQMapIconComponent* MapIcon; // 0x1a0
};

struct USSGS_ColorEffectSpecificationStatic : USSGS_ColorEffectSpecification {
	FSSGS_RGB Color; // 0x30
};

struct UTextureLightProfile : UTexture2D {
	float Brightness; // 0x100
	float TextureMultiplier; // 0x104
};

struct USQLocalAudioMix : USQLocalAudioEffectHandler {
	USoundMix* AudioEffect; // 0x28
};

struct UAnimationSharingManager : UObject {
	TArray<USkeleton*> Skeletons; // 0x28
	TArray<UAnimSharingInstance*> PerSkeletonData; // 0x38
};

struct APlanarReflection : ASceneCapture {
	UPlanarReflectionComponent* PlanarReflectionComponent; // 0x258
	bool bShowPreviewPlane; // 0x260
};

struct UPawnSensingComponent : UActorComponent {
	float HearingThreshold; // 0xd8
	float LOSHearingThreshold; // 0xdc
	float SightRadius; // 0xe0
	float SensingInterval; // 0xe4
	float HearingMaxSoundAge; // 0xe8
	char bEnableSensingUpdates : 1; // 0xec
	char bOnlySensePlayers : 1; // 0xec
	char bSeePawns : 1; // 0xec
	char bHearNoises : 1; // 0xec
	FScriptMulticastDelegate OnSeePawn; // 0xf8
	FScriptMulticastDelegate OnHearNoise; // 0x108
	float PeripheralVisionAngle; // 0x118
	float PeripheralVisionCosine; // 0x11c
};

struct APhysicsConstraintActor : ARigidBodyBase {
	UPhysicsConstraintComponent* ConstraintComp; // 0x248
	AActor* ConstraintActor1; // 0x250
	AActor* ConstraintActor2; // 0x258
	char bDisableCollision : 1; // 0x260
};

struct ULandscapeComponent : UPrimitiveComponent {
	int SectionBaseX; // 0x408
	int SectionBaseY; // 0x40c
	int ComponentSizeQuads; // 0x410
	int SubsectionSizeQuads; // 0x414
	int NumSubsections; // 0x418
	UMaterialInterface* OverrideMaterial; // 0x420
	UMaterialInterface* OverrideHoleMaterial; // 0x428
	TArray<FLandscapeComponentMaterialOverride> OverrideMaterials; // 0x430
	TArray<UMaterialInstanceConstant*> MaterialInstances; // 0x440
	TArray<UMaterialInstanceDynamic*> MaterialInstancesDynamic; // 0x450
	TArray<uint8> LODIndexToMaterialIndex; // 0x460
	TArray<uint8> MaterialIndexToDisabledTessellationMaterial; // 0x470
	UTexture2D* XYOffsetmapTexture; // 0x480
	FVector4 WeightmapScaleBias; // 0x490
	float WeightmapSubsectionOffset; // 0x4a0
	FVector4 HeightmapScaleBias; // 0x4b0
	FBox CachedLocalBox; // 0x4c0
	ULandscapeHeightfieldCollisionComponent* CollisionComponent; // 0x4dc
	UTexture2D* HeightmapTexture; // 0x4f8
	TArray<FWeightmapLayerAllocationInfo> WeightmapLayerAllocations; // 0x500
	TArray<UTexture2D*> WeightmapTextures; // 0x510
	FGuid MapBuildDataId; // 0x520
	TArray<FGuid> IrrelevantLights; // 0x530
	int CollisionMipLevel; // 0x540
	int SimpleCollisionMipLevel; // 0x544
	float NegativeZBoundsExtension; // 0x548
	float PositiveZBoundsExtension; // 0x54c
	float StaticLightingResolution; // 0x550
	int ForcedLOD; // 0x554
	int LODBias; // 0x558
	FGuid StateId; // 0x55c
	FGuid BakedTextureMaterialGuid; // 0x56c
	UTexture2D* GIBakedBaseColorTexture; // 0x580
	char MobileBlendableLayerMask; // 0x588
	UMaterialInterface* MobileMaterialInterface; // 0x590
	TArray<UMaterialInterface*> MobileMaterialInterfaces; // 0x598
	TArray<UTexture2D*> MobileWeightmapTextures; // 0x5a8
};

struct UVerticalBox : UPanelWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UBasicReplicationGraph : UReplicationGraph {
	UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x498
	UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4a0
	TArray<FConnectionAlwaysRelevantNodePair> AlwaysRelevantForConnectionList; // 0x4a8
	TArray<AActor*> ActorsWithoutNetConnection; // 0x4b8
};

struct AARSkyLight : ASkyLight {
	UAREnvironmentCaptureProbe* CaptureProbe; // 0x258
};

struct UEditableText : UWidget {
	FText Text; // 0x108
	DelegateProperty TextDelegate; // 0x120
	FText HintText; // 0x130
	DelegateProperty HintTextDelegate; // 0x148
	FEditableTextStyle WidgetStyle; // 0x158
	USlateWidgetStyleAsset* Style; // 0x370
	USlateBrushAsset* BackgroundImageSelected; // 0x378
	USlateBrushAsset* BackgroundImageComposing; // 0x380
	USlateBrushAsset* CaretImage; // 0x388
	FSlateFontInfo Font; // 0x390
	FSlateColor ColorAndOpacity; // 0x3e0
	bool IsReadOnly; // 0x408
	bool IsPassword; // 0x409
	float MinimumDesiredWidth; // 0x40c
	bool IsCaretMovedWhenGainFocus; // 0x410
	bool SelectAllTextWhenFocused; // 0x411
	bool RevertTextOnEscape; // 0x412
	bool ClearKeyboardFocusOnCommit; // 0x413
	bool SelectAllTextOnCommit; // 0x414
	bool AllowContextMenu; // 0x415
	EVirtualKeyboardType KeyboardType; // 0x416
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x417
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x418
	ETextJustify Justification; // 0x419
	FShapedTextOptions ShapedTextOptions; // 0x41a
	FScriptMulticastDelegate OnTextChanged; // 0x420
	FScriptMulticastDelegate OnTextCommitted; // 0x430
};

struct UUserWidget : UWidget {
	FLinearColor ColorAndOpacity; // 0x110
	DelegateProperty ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	DelegateProperty ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x198
	UWidgetTree* WidgetTree; // 0x1a8
	int Priority; // 0x1b0
	char bSupportsKeyboardFocus : 1; // 0x1b4
	char bIsFocusable : 1; // 0x1b4
	char bStopAction : 1; // 0x1b4
	char bHasScriptImplementedTick : 1; // 0x1b4
	char bHasScriptImplementedPaint : 1; // 0x1b4
	char bCookedWidgetTree : 1; // 0x1b4
	EWidgetTickFrequency TickFrequency; // 0x1c0
	UInputComponent* InputComponent; // 0x1c8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1d0
};

struct ABP_M4A1_M150_Foregrip_Tracer_Woodland_C : ABP_M4A1_M150_Foregrip_Tracer_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UQuitMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UParticleModuleVelocityOverLifetime : UParticleModuleVelocityBase {
	FRawDistributionVector VelOverLife; // 0x38
	char Absolute : 1; // 0x88
};

struct UUserDefinedCaptureProtocol : UMovieSceneImageCaptureProtocolBase {
	UWorld* World; // 0x58
};

struct UParticleModuleSubUVMovie : UParticleModuleSubUV {
	char bUseEmitterTime : 1; // 0x78
	FRawDistributionFloat FrameRate; // 0x80
	int StartingFrame; // 0xb8
};

struct ACameraBlockingVolume : AVolume {
	EBrushType BrushType; // 0x248
	FColor BrushColor; // 0x24c
	int PolyFlags; // 0x250
	char bColored : 1; // 0x254
	char bSolidWhenSelected : 1; // 0x254
	char bPlaceableFromClassBrowser : 1; // 0x254
	char bNotForClientOrServer : 1; // 0x254
	UModel* Brush; // 0x258
	UBrushComponent* BrushComponent; // 0x260
	char bInManipulation : 1; // 0x268
	TArray<FGeomSelection> SavedSelections; // 0x270
};

struct USQPhysicalMaterialSoldiersEffects : UObject {
	TMap<USQPhysicalMaterial*, FSQSoldierEffect> Effects; // 0x28
};

struct UIntSerialization : UObject {
	uint16 UnsignedInt16Variable; // 0x28
	uint32 UnsignedInt32Variable; // 0x2c
	uint64 UnsignedInt64Variable; // 0x30
	uint8 SignedInt8Variable; // 0x38
	int16 SignedInt16Variable; // 0x3a
	int64 SignedInt64Variable; // 0x40
	char UnsignedInt8Variable; // 0x48
	int SignedInt32Variable; // 0x4c
};

struct UDistributionFloatConstantCurve : UDistributionFloat {
	FInterpCurveFloat ConstantCurve; // 0x38
};

struct UM4M203_UGL_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_A5DA3A2D41272C408240AFBC21242F96; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_108AC6484E23052C43CD249C697A3716; // 0x2e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_74B9493B4723CE0E7D775CB49FD1AAA9; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_EC71264B4935EBD7C7E5DCA4AF790395; // 0x420
	FAnimNode_Slot AnimGraphNode_Slot_B749BD224A77ADFC8C342AA19B90E7CA; // 0x468
	FAnimNode_Slot AnimGraphNode_Slot_210093224A609FAE79ABAEAC97C1BE8B; // 0x4b0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_316B4F6F41DF4916B94409B19664C5CB; // 0x4f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_E604F74B4A72166BEE2328AA8FFA4285; // 0x600
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_D057CE2D40CA064150A19BB5F321B1AB; // 0x620
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_CF3F7B3742ED288361AC1B8BBE33CE17; // 0x640
};

struct UMaterialExpressionReroute : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct USQAssetManager : UAssetManager {
	TArray<UObject*> ObjectReferenceList; // 0x2c0
	bool bIsGlobalAsyncScanEnvironment; // 0x2d0
	bool bShouldGuessTypeAndName; // 0x2d1
	bool bShouldUseSynchronousLoad; // 0x2d2
	bool bIsLoadingFromPakFiles; // 0x2d3
	bool bShouldAcquireMissingChunksOnLoad; // 0x2d4
	bool bOnlyCookProductionAssets; // 0x2d5
	bool bIsBulkScanning; // 0x2d6
	bool bIsPrimaryAssetDirectoryCurrent; // 0x2d7
	bool bIsManagementDatabaseCurrent; // 0x2d8
	bool bUpdateManagementDatabaseAfterScan; // 0x2d9
	bool bIncludeOnlyOnDiskAssets; // 0x2da
	int NumberOfSpawnedNotifications; // 0x2dc
};

struct ULandscapeGizmoRenderComponent : UPrimitiveComponent {
	float MinDrawDistance; // 0x220
	float LDMaxDrawDistance; // 0x224
	float CachedMaxDrawDistance; // 0x228
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x22c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x22d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x22e
	ELightmapType LightmapType; // 0x22f
	char bUseMaxLODAsImposter : 1; // 0x230
	char bNeverDistanceCull : 1; // 0x230
	char bAlwaysCreatePhysicsState : 1; // 0x230
	char bGenerateOverlapEvents : 1; // 0x230
	char bGenerateLocalOverlapEvents : 1; // 0x231
	char bMultiBodyOverlap : 1; // 0x231
	char bTraceComplexOnMove : 1; // 0x231
	char bReturnMaterialOnMove : 1; // 0x231
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x231
	char bAllowCullDistanceVolume : 1; // 0x231
	char bHasMotionBlurVelocityMeshes : 1; // 0x231
	char bVisibleInReflectionCaptures : 1; // 0x232
	char bVisibleInRayTracing : 1; // 0x232
	char bRenderInMainPass : 1; // 0x232
	char bReceivesDecals : 1; // 0x232
	char bOwnerNoSee : 1; // 0x232
	char bOnlyOwnerSee : 1; // 0x232
	char bTreatAsBackgroundForOcclusion : 1; // 0x232
	char bUseAsOccluder : 1; // 0x232
	char bSelectable : 1; // 0x233
	char bForceMipStreaming : 1; // 0x233
	char bHasPerInstanceHitProxies : 1; // 0x233
	char CastShadow : 1; // 0x233
	char bAffectDynamicIndirectLighting : 1; // 0x233
	char bAffectDistanceFieldLighting : 1; // 0x233
	char bCastDynamicShadow : 1; // 0x233
	char bCastStaticShadow : 1; // 0x233
	char bCastVolumetricTranslucentShadow : 1; // 0x234
	char bSelfShadowOnly : 1; // 0x234
	char bCastFarShadow : 1; // 0x234
	char bCastInsetShadow : 1; // 0x234
	char bCastCinematicShadow : 1; // 0x234
	char bCastHiddenShadow : 1; // 0x234
	char bCastShadowAsTwoSided : 1; // 0x234
	char bLightAsIfStatic : 1; // 0x234
	char bLightAttachmentsAsGroup : 1; // 0x235
	char bReceiveMobileCSMShadows : 1; // 0x235
	char bSingleSampleShadowFromStationaryLights : 1; // 0x235
	char bIgnoreRadialImpulse : 1; // 0x235
	char bIgnoreRadialForce : 1; // 0x235
	char bApplyImpulseOnDamage : 1; // 0x235
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x235
	char AlwaysLoadOnClient : 1; // 0x235
	char AlwaysLoadOnServer : 1; // 0x236
	char bUseEditorCompositing : 1; // 0x236
	char bRenderCustomDepth : 1; // 0x236
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x237
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x239
	FLightingChannels LightingChannels; // 0x23a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x23b
	int CustomDepthStencilValue; // 0x23c
	FCustomPrimitiveData CustomPrimitiveData; // 0x240
	int TranslucencySortPriority; // 0x250
	int VisibilityId; // 0x254
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x258
	int VirtualTextureLodBias; // 0x268
	int VirtualTextureCullMips; // 0x26c
	int VirtualTextureMinCoverage; // 0x270
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x274
	float LpvBiasMultiplier; // 0x27c
	float BoundsScale; // 0x288
	TArray<AActor*> MoveIgnoreActors; // 0x298
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2a8
	FBodyInstance BodyInstance; // 0x2c8
	FScriptMulticastDelegate OnComponentHit; // 0x3d8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3d9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3da
	FScriptMulticastDelegate OnComponentWake; // 0x3db
	FScriptMulticastDelegate OnComponentSleep; // 0x3dc
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3de
	FScriptMulticastDelegate OnEndCursorOver; // 0x3df
	FScriptMulticastDelegate OnClicked; // 0x3e0
	FScriptMulticastDelegate OnReleased; // 0x3e1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3e2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3e3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3e4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3e5
	UPrimitiveComponent* LODParentPrimitive; // 0x400
};

struct UDatasmithAssetUserData : UAssetUserData {
	TMap<FName, FString> MetaData; // 0x28
};

struct UShockwaveCameraShake_Short_C : UCameraShake {
	char bSingleInstance : 1; // 0x28
	float OscillationDuration; // 0x2c
	float OscillationBlendInTime; // 0x30
	float OscillationBlendOutTime; // 0x34
	FROscillator RotOscillation; // 0x38
	FVOscillator LocOscillation; // 0x5c
	FFOscillator FOVOscillation; // 0x80
	float AnimPlayRate; // 0x8c
	float AnimScale; // 0x90
	float AnimBlendInTime; // 0x94
	float AnimBlendOutTime; // 0x98
	float RandomAnimSegmentDuration; // 0x9c
	UCameraAnim* Anim; // 0xa0
	char bRandomAnimSegment : 1; // 0xa8
	APlayerCameraManager* CameraOwner; // 0xc0
	float ShakeScale; // 0x148
	float OscillatorTimeRemaining; // 0x14c
	UCameraAnimInst* AnimInst; // 0x150
};

struct UMovieSceneTrack : UMovieSceneSignedObject {
	FMovieSceneTrackEvalOptions EvalOptions; // 0x50
};

struct USQWheeledVehicleMovementComponent : UWheeledVehicleMovementComponent4W {
	FVehicleEngineData EngineSetup; // 0x2d8
	FVehicleDifferential4WData DifferentialSetup; // 0x378
	float AckermannAccuracy; // 0x394
	FVehicleTransmissionData TransmissionSetup; // 0x398
	FRuntimeFloatCurve SteeringCurve; // 0x3d8
};

struct UMovieScene : UMovieSceneSignedObject {
	TArray<FMovieSceneSpawnable> Spawnables; // 0x50
	TArray<FMovieScenePossessable> Possessables; // 0x60
	TArray<FMovieSceneBinding> ObjectBindings; // 0x70
	TArray<UMovieSceneTrack*> MasterTracks; // 0x80
	UMovieSceneTrack* CameraCutTrack; // 0x90
	FMovieSceneFrameRange SelectionRange; // 0x98
	FMovieSceneFrameRange PlaybackRange; // 0xa8
	FFrameRate TickResolution; // 0xb8
	FFrameRate DisplayRate; // 0xc0
	EMovieSceneEvaluationType EvaluationType; // 0xc8
	EUpdateClockSource ClockSource; // 0xc9
	TArray<FMovieSceneMarkedFrame> MarkedFrames; // 0xd0
};

struct ABP_AKS74U_2mags_C : ABP_AKS74U_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UBackgroundBlur : UContentWidget {
	FMargin Padding; // 0x120
	EHorizontalAlignment HorizontalAlignment; // 0x130
	EVerticalAlignment VerticalAlignment; // 0x131
	bool bApplyAlphaToBlur; // 0x132
	float BlurStrength; // 0x134
	bool bOverrideAutoRadiusCalculation; // 0x138
	int BlurRadius; // 0x13c
	FSlateBrush LowQualityFallbackBrush; // 0x140
};

struct UVoipListenerSynthComponent : USynthComponent {
	char bAutoDestroy : 1; // 0x218
	char bStopWhenOwnerDestroyed : 1; // 0x218
	char bAllowSpatialization : 1; // 0x218
	char bOverrideAttenuation : 1; // 0x218
	char bOutputToBusOnly : 1; // 0x21c
	USoundAttenuation* AttenuationSettings; // 0x220
	FSoundAttenuationSettings AttenuationOverrides; // 0x228
	USoundConcurrency* ConcurrencySettings; // 0x510
	TSet<USoundConcurrency*> ConcurrencySet; // 0x518
	USoundClass* SoundClass; // 0x568
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x570
	USoundSubmix* SoundSubmix; // 0x578
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x580
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x590
	FSoundModulation Modulation; // 0x5a0
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x5b0
	char bIsUISound : 1; // 0x5c0
	char bIsPreviewSound : 1; // 0x5c0
	int EnvelopeFollowerAttackTime; // 0x5c4
	int EnvelopeFollowerReleaseTime; // 0x5c8
	FScriptMulticastDelegate OnAudioEnvelopeValue; // 0x5d0
	USynthSound* Synth; // 0x600
	UAudioComponent* AudioComponent; // 0x608
};

struct UInterpTrackMove : UInterpTrack {
	FInterpCurveVector PosTrack; // 0x70
	FInterpCurveVector EulerTrack; // 0x88
	FInterpLookupTrack LookupTrack; // 0xa0
	FName LookAtGroupName; // 0xb0
	float LinCurveTension; // 0xb8
	float AngCurveTension; // 0xbc
	char bUseQuatInterpolation : 1; // 0xc0
	char bShowArrowAtKeys : 1; // 0xc0
	char bDisableMovement : 1; // 0xc0
	char bShowTranslationOnCurveEd : 1; // 0xc0
	char bShowRotationOnCurveEd : 1; // 0xc0
	char bHide3DTrack : 1; // 0xc0
	EInterpTrackMoveRotMode RotMode; // 0xc4
};

struct USQLoginCallbackProxy : UOnlineBlueprintCallProxyBase {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
	UObject* WorldContextObject; // 0x88
};

struct ULevelStreamingDynamic : ULevelStreaming {
	char bInitiallyLoaded : 1; // 0x148
	char bInitiallyVisible : 1; // 0x148
};

struct UMaterialExpressionViewSize : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UParticleModuleTrailSource : UParticleModuleTrailBase {
	ETrail2SourceMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	FRawDistributionFloat SourceStrength; // 0x40
	char bLockSourceStength : 1; // 0x78
	int SourceOffsetCount; // 0x7c
	TArray<FVector> SourceOffsetDefaults; // 0x80
	EParticleSourceSelectionMethod SelectionMethod; // 0x90
	char bInheritRotation : 1; // 0x94
};

struct UMovieScene3DTransformTrack : UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UMaterialExpressionPerInstanceFadeAmount : UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UBTTaskNode : UBTNode {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct UARPin : UObject {
	UARTrackedGeometry* TrackedGeometry; // 0x28
	USceneComponent* PinnedComponent; // 0x30
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	FScriptMulticastDelegate OnARTrackingStateChanged; // 0xc0
	FScriptMulticastDelegate OnARTransformUpdated; // 0xd0
};

struct UInterpTrackInstVectorMaterialParam : UInterpTrackInst {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<FVector> ResetVectors; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackVectorMaterialParam* InstancedTrack; // 0x58
};

struct UAbilityTask_SpawnActor : UAbilityTask {
	FScriptMulticastDelegate Success; // 0x80
	FScriptMulticastDelegate DidNotSpawn; // 0x90
};

struct AAudioVolume : AVolume {
	float Priority; // 0x280
	int AudioVolumeType; // 0x284
	char bEnabled : 1; // 0x288
	FReverbSettings Settings; // 0x290
	FInteriorSettings AmbientZoneSettings; // 0x2b0
};

struct ULightPropagationVolumeBlendable : UObject {
	FLightPropagationVolumeSettings Settings; // 0x30
	float BlendWeight; // 0x70
};

struct AGameModeBase : AInfo {
	FString OptionsString; // 0x248
	AGameSession* GameSessionClass; // 0x258
	AGameStateBase* GameStateClass; // 0x260
	APlayerController* PlayerControllerClass; // 0x268
	APlayerState* PlayerStateClass; // 0x270
	AHUD* HUDClass; // 0x278
	APawn* DefaultPawnClass; // 0x280
	ASpectatorPawn* SpectatorClass; // 0x288
	APlayerController* ReplaySpectatorPlayerControllerClass; // 0x290
	AServerStatReplicator* ServerStatReplicatorClass; // 0x298
	AGameSession* GameSession; // 0x2a0
	AGameStateBase* GameState; // 0x2a8
	AServerStatReplicator* ServerStatReplicator; // 0x2b0
	FText DefaultPlayerName; // 0x308
	char bUseSeamlessTravel : 1; // 0x320
	char bStartPlayersAsSpectators : 1; // 0x320
	char bPauseable : 1; // 0x320
};

struct ALevelStreamingVolume : AVolume {
	TArray<FName> StreamingLevelNames; // 0x280
	char bEditorPreVisOnly : 1; // 0x290
	char bDisabled : 1; // 0x290
	EStreamingVolumeUsage StreamingUsage; // 0x294
};

struct ASQTeam : AInfo {
	ASQTeamState* TeamStateClass; // 0x248
	ASQTeamStatePrivate* PrivateTeamStateClass; // 0x250
	ASQTeamState* TeamState; // 0x258
	ASQTeamStatePrivate* PrivateTeamState; // 0x260
	TArray<ASQSquad*> Squads; // 0x268
	TArray<ASQSquad*> IndexedSquads; // 0x278
	ASQPlayerController* Commander; // 0x288
	ASQSquad* CommandSquad; // 0x290
	USQCommanderManager* CommanderManager; // 0x298
	USQLayerTeamConfig* TeamLayerConfig; // 0x2a0
};

struct USQRestriction_Delay : USQRestriction_Delay_Base {
	FTimespan InitialDelay; // 0x58
	int NumberOfDelayedUsage; // 0x60
	FTimespan Delay; // 0x68
	bool ApplyDelayOnAddUsage; // 0x70
	bool ApplyDelayOnRemoveUsage; // 0x71
};

struct UMaterialExpressionVectorParameter : UMaterialExpressionParameter {
	FLinearColor DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x68
	char PrimitiveDataIndex; // 0x69
};

struct USQFindFriendsCallbackProxy : UOnlineBlueprintCallProxyBase {
	APlayerController* PlayerController; // 0x50
};

struct UCanvasPanelSlot : UPanelSlot {
	FAnchorData LayoutData; // 0x38
	bool bAutoSize; // 0x60
	int ZOrder; // 0x64
};

struct AAbstractNavData : ANavigationData {
	UPrimitiveComponent* RenderingComp; // 0x250
	FNavDataConfig NavDataConfig; // 0x258
	char bEnableDrawing : 1; // 0x2c0
	char bForceRebuildOnLoad : 1; // 0x2c0
	char bCanBeMainNavData : 1; // 0x2c0
	char bCanSpawnOnRebuild : 1; // 0x2c0
	char bRebuildAtRuntime : 1; // 0x2c0
	ERuntimeGenerationType RuntimeGeneration; // 0x2c4
	float ObservedPathsTickInterval; // 0x2c8
	uint32 DataVersion; // 0x2cc
	TArray<FSupportedAreaData> SupportedAreas; // 0x3a0
};

struct USQLocalPlayer : ULocalPlayer {
	UGameViewportClient* ViewportClient; // 0x70
	EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x94
	APlayerController* PendingLevelPlayerControllerClass; // 0x98
	char bSentSplitJoin : 1; // 0xa0
	int ControllerId; // 0xe0
};

struct UPlatformGameInstance : UGameInstance {
	FScriptMulticastDelegate ApplicationWillDeactivateDelegate; // 0x168
	FScriptMulticastDelegate ApplicationHasReactivatedDelegate; // 0x178
	FScriptMulticastDelegate ApplicationWillEnterBackgroundDelegate; // 0x188
	FScriptMulticastDelegate ApplicationHasEnteredForegroundDelegate; // 0x198
	FScriptMulticastDelegate ApplicationWillTerminateDelegate; // 0x1a8
	FScriptMulticastDelegate ApplicationShouldUnloadResourcesDelegate; // 0x1b8
	FScriptMulticastDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x1c8
	FScriptMulticastDelegate ApplicationRegisteredForRemoteNotificationsDelegate; // 0x1d8
	FScriptMulticastDelegate ApplicationRegisteredForUserNotificationsDelegate; // 0x1e8
	FScriptMulticastDelegate ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x1f8
	FScriptMulticastDelegate ApplicationReceivedRemoteNotificationDelegate; // 0x208
	FScriptMulticastDelegate ApplicationReceivedLocalNotificationDelegate; // 0x218
	FScriptMulticastDelegate ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x228
};

struct UShaderPlatformQualitySettings : UObject {
	FMaterialQualityOverrides QualityOverrides[0x3]; // 0x28
};

struct ABP_M4A1_M68_Foregrip_Woodland_C : ABP_M4A1_M68_Foregrip_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UMovieSceneCameraAnimSection : UMovieSceneSection {
	FMovieSceneCameraAnimSectionData AnimData; // 0xe0
	UCameraAnim* CameraAnim; // 0x100
	float PlayRate; // 0x108
	float PlayScale; // 0x10c
	float BlendInTime; // 0x110
	float blendOutTime; // 0x114
	bool bLooping; // 0x118
};

struct ABP_AK74M_Tracer_C : ABP_AK74M_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct ANavSystemConfigOverride : AActor {
	UNavigationSystemConfig* NavigationSystemConfig; // 0x248
	char bLoadOnClient : 1; // 0x250
};

struct USoundNodeParamCrossFade : USoundNodeDistanceCrossFade {
	FName ParamName; // 0x50
};

struct UAnimNotifyState_Trail : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName FirstSocketName; // 0x38
	FName SecondSocketName; // 0x40
	ETrailWidthMode WidthScaleMode; // 0x48
	FName WidthScaleCurve; // 0x4c
	char bRecycleSpawnedSystems : 1; // 0x54
};

struct AEmitterCameraLensEffectBase : AEmitter {
	UParticleSystem* PS_CameraEffect; // 0x298
	UParticleSystem* PS_CameraEffectNonExtremeContent; // 0x2a0
	APlayerCameraManager* BaseCamera; // 0x2a8
	FTransform RelativeTransform; // 0x2b0
	float BaseFOV; // 0x2e0
	char bAllowMultipleInstances : 1; // 0x2e4
	char bResetWhenRetriggered : 1; // 0x2e4
	TArray<AEmitterCameraLensEffectBase*> EmittersToTreatAsSame; // 0x2e8
	float DistFromCamera; // 0x2f8
};

struct UMaterialExpressionParticleSubUV : UMaterialExpressionTextureSample {
	char bBlend : 1; // 0xe0
};

struct UBTService_DefaultFocus : UBTService_BlackboardBase {
	char FocusPriority; // 0x98
};

struct UMovieSceneMaterialTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UPrefabComponent : UPrimitiveComponent {
	char bConnected : 1; // 0x408
	char bLockSelection : 1; // 0x408
	UPrefabAsset* Prefab; // 0x410
	UBlueprint* GeneratedBlueprint; // 0x418
	TMap<FName, AActor*> PrefabInstancesMap; // 0x420
	TArray<FPrefabVariantRule> VariantRulesOverwrite; // 0x470
	char bTransient : 1; // 0x480
};

struct ABlockingVolume : AVolume {
	EBrushType BrushType; // 0x248
	FColor BrushColor; // 0x24c
	int PolyFlags; // 0x250
	char bColored : 1; // 0x254
	char bSolidWhenSelected : 1; // 0x254
	char bPlaceableFromClassBrowser : 1; // 0x254
	char bNotForClientOrServer : 1; // 0x254
	UModel* Brush; // 0x258
	UBrushComponent* BrushComponent; // 0x260
	char bInManipulation : 1; // 0x268
	TArray<FGeomSelection> SavedSelections; // 0x270
};

struct USQGraphAASInitializerComponent : USQGraphInitializerComponent {
	TArray<FSQDesignLink> DesignOutgoingLinks; // 0xd8
};

struct UMaterialExpressionDistanceToNearestSurface : UMaterialExpression {
	FExpressionInput Position; // 0x40
};

struct UVectorField : UObject {
	FBox Bounds; // 0x28
	float Intensity; // 0x44
};

struct UDatasmithLandscapeTemplate : UDatasmithObjectTemplate {
	UMaterialInterface* LandscapeMaterial; // 0x30
	int StaticLightingLOD; // 0x38
};

struct USQGraphAASVisualizerComponent : USQGraphVisualizerComponent {
	bool bShowDebugInfo; // 0xd8
	float DebugNodeRadius; // 0xdc
	float DebugNodeHeightOffset; // 0xe0
	float DebugLineHeightOffset; // 0xe4
};

struct UGameplayTagsManager : UObject {
	TArray<FGameplayTagSource> TagSources; // 0xc0
	TArray<UDataTable*> GameplayTagTables; // 0x150
};

struct UProjectileMovementComponent : UMovementComponent {
	float InitialSpeed; // 0x118
	float MaxSpeed; // 0x11c
	char bRotationFollowsVelocity : 1; // 0x120
	char bRotationRemainsVertical : 1; // 0x120
	char bShouldBounce : 1; // 0x120
	char bInitialVelocityInLocalSpace : 1; // 0x120
	char bForceSubStepping : 1; // 0x120
	char bSimulationEnabled : 1; // 0x120
	char bSweepCollision : 1; // 0x120
	char bIsHomingProjectile : 1; // 0x120
	char bBounceAngleAffectsFriction : 1; // 0x121
	char bIsSliding : 1; // 0x121
	char bInterpMovement : 1; // 0x121
	char bInterpRotation : 1; // 0x121
	float PreviousHitTime; // 0x124
	FVector PreviousHitNormal; // 0x128
	float ProjectileGravityScale; // 0x134
	float Buoyancy; // 0x138
	float Bounciness; // 0x13c
	float Friction; // 0x140
	float BounceVelocityStopSimulatingThreshold; // 0x144
	float MinFrictionFraction; // 0x148
	FScriptMulticastDelegate OnProjectileBounce; // 0x150
	FScriptMulticastDelegate OnProjectileStop; // 0x160
	float HomingAccelerationMagnitude; // 0x170
	TWeakObjectPtr<USceneComponent> HomingTargetComponent; // 0x174
	float MaxSimulationTimeStep; // 0x17c
	int MaxSimulationIterations; // 0x180
	int BounceAdditionalIterations; // 0x184
	float InterpLocationTime; // 0x188
	float InterpRotationTime; // 0x18c
	float InterpLocationMaxLagDistance; // 0x190
	float InterpLocationSnapToTargetDistance; // 0x194
};

struct ASQRandomizer_StaticMesh : ASQRandomizer {
	UStaticMeshComponent* MeshComponent; // 0x260
	TArray<UStaticMesh*> Meshes; // 0x268
};

struct UMaterialExpressionTextureSampleParameter2D : UMaterialExpressionTextureSampleParameter {
	FName ParameterName; // 0xe0
	FGuid ExpressionGUID; // 0xe8
	FName Group; // 0xf8
};

struct ASQDeployableTripodVehicle : ASQDeployableVehicle {
	USceneComponent* AdsCamera1pPositionComponent; // 0x888
};

struct USQMapWidgetMapMarkerSpotted : USQMapWidgetMapMarkerSelectable {
	USQMapIconComponent* MapIcon; // 0x2c8
};

struct UFloatingPawnMovement : UPawnMovementComponent {
	float MaxSpeed; // 0x160
	float Acceleration; // 0x164
	float Deceleration; // 0x168
	float TurningBoost; // 0x16c
	char bPositionCorrected : 1; // 0x170
};

struct UEnvQueryGenerator : UEnvQueryNode {
	FString OptionName; // 0x30
	UEnvQueryItemType* ItemType; // 0x40
	char bAutoSortTests : 1; // 0x48
};

struct UMovieSceneCinematicShotTrack : UMovieSceneSubTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct ASQObjective : ASQTeamActor {
	int TicketAdjustmentByObjectiveMeetingTeamUponObjectiveBeingMet; // 0x2a0
	int TicketAdjustmentByOwningTeamUponObjectiveBeingMet; // 0x2a4
	int TicketAdjustmentByOpposingTeamUponObjectiveBeingMet; // 0x2a8
	bool bHasObjectiveBeenMet; // 0x2ac
	FText ObjectiveMetOwningTeamMessage; // 0x2b0
	FText ObjectiveMetOpposingTeamMessage; // 0x2c8
	FText ObjectiveShownOwningTeamMessage; // 0x2e0
	FText ObjectiveShownOpposingTeamMessage; // 0x2f8
	bool bIsKnownToEveryone; // 0x310
	bool bIsWaitingToBeShown; // 0x311
	bool bHiddenUponSpawn; // 0x312
	FVector2D DistanceRangeForAttackMarker; // 0x314
	FVector2D DistanceRangeForDefendMarker; // 0x31c
	FVector TeamOneLocationZeroBased; // 0x324
	FVector TeamTwoLocationZeroBased; // 0x330
	ESQTeam ObjectiveMetByTeam; // 0x33c
};

struct UAbilityTask_Repeat : UAbilityTask {
	FScriptMulticastDelegate OnPerformAction; // 0x80
	FScriptMulticastDelegate OnFinished; // 0x90
};

struct UVehicleAnimInstance : UAnimInstance {
	UWheeledVehicleMovementComponent* WheeledVehicleMovementComponent; // 0x960
};

struct UPhysicalAnimationComponent : UActorComponent {
	float StrengthMultiplyer; // 0xd8
	USkeletalMeshComponent* SkeletalMeshComponent; // 0xe0
};

struct UUniformVector : UFieldNodeVector {
	float Magnitude; // 0xd8
	FVector Direction; // 0xdc
};

struct AGameplayAbilityTargetActor_SingleLineTrace : AGameplayAbilityTargetActor_Trace {
	float MaxRange; // 0x358
	FCollisionProfileName TraceProfile; // 0x35c
	bool bTraceAffectsAimPitch; // 0x364
};

struct UMaterialExpressionFontSample : UMaterialExpression {
	UFont* Font; // 0x40
	int FontTexturePage; // 0x48
};

struct USQRestriction_Boolean : USQRestriction {
	FName ID; // 0x30
	FDataTableRowHandle Data; // 0x38
	FString ModId; // 0x48
};

struct UL85A2_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_764FA1B24B7B018D5DC7E6BBF40379D2; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_AAC78BDC44E34EE01451369FF3EA74D4; // 0x2e8
	FAnimNode_Slot AnimGraphNode_Slot_587E3C564CD28AB2C068B0A6CA8CAEF8; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_3F4676704855C483B8EC51AF6EBD8F41; // 0x3f0
	FAnimNode_Slot AnimGraphNode_Slot_18055FA543289D3A789A6F876187CD42; // 0x438
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_46D479134B9FE7748EF1D29E167C5C4E; // 0x480
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_A9F6ED6847C2AC707E8D148053E62C2A; // 0x498
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14075E9A45A7B80C978C79B58A039FC0; // 0x558
	FAnimNode_Slot AnimGraphNode_Slot_51BB5685405CCA4F243504B529D0731F; // 0x5d0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_F29826FB404F0195EBAF46A1552053E4; // 0x618
};

struct USQMapMarkerInputComponent : UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x88
	TArray<UAssetUserData*> AssetUserData; // 0x98
	char bReplicates : 1; // 0xac
	char bNetAddressable : 1; // 0xac
	char bAutoActivate : 1; // 0xad
	char bIsActive : 1; // 0xae
	char bEditableWhenInherited : 1; // 0xae
	char bCanEverAffectNavigation : 1; // 0xae
	char bIsEditorOnly : 1; // 0xae
	EComponentCreationMethod CreationMethod; // 0xb0
	FScriptMulticastDelegate OnComponentActivated; // 0xb1
	FScriptMulticastDelegate OnComponentDeactivated; // 0xb2
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xb8
};

struct ABP_RPG7_Thermo_C : ABP_RPG7_Parent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7b0
	UParticleSystemComponent* MuzzleFlashRearComponent3P; // 0x7b8
	UChildActorComponent* BackBlastComponent3P; // 0x7c0
	UParticleSystemComponent* MuzzleFlashRearComponent1P; // 0x7c8
	USQBlastComponent* SquadBlast; // 0x7d0
	UChildActorComponent* BackBlastComponent1P; // 0x7d8
	FName BackblastSocket; // 0x7e0
	UParticleSystem* BackblastEffect1P; // 0x7e8
	UParticleSystem* BackblastEffect3P; // 0x7f0
};

struct AQosBeaconHost : AOnlineBeaconHostObject {
	FString BeaconTypeName; // 0x248
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x258
	TArray<AOnlineBeaconClient*> ClientActors; // 0x260
};

struct ABP_AK74MGP25_UGL_Desert_Smoke_Blue_C : ABP_AK74MGP25_UGL_Desert_Smoke_C {
	UMaterialParameterCollection* AdsScopeFovParameterCollection; // 0x7a0
	FName AdsScopeFovParameterName; // 0x7a8
};

struct UParticleModuleMeshRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionVector LifeMultiplier; // 0x30
};

struct ASceneCapture2D : ASceneCapture {
	USceneCaptureComponent2D* CaptureComponent2D; // 0x258
};

struct UBTTask_RunBehaviorDynamic : UBTTaskNode {
	FGameplayTag InjectionTag; // 0x70
	UBehaviorTree* DefaultBehaviorAsset; // 0x78
	UBehaviorTree* BehaviorAsset; // 0x80
};

struct USQUserWidget : UUserWidget {
	FLinearColor ColorAndOpacity; // 0x110
	DelegateProperty ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	DelegateProperty ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x198
	UWidgetTree* WidgetTree; // 0x1a8
	int Priority; // 0x1b0
	char bSupportsKeyboardFocus : 1; // 0x1b4
	char bIsFocusable : 1; // 0x1b4
	char bStopAction : 1; // 0x1b4
	char bHasScriptImplementedTick : 1; // 0x1b4
	char bHasScriptImplementedPaint : 1; // 0x1b4
	char bCookedWidgetTree : 1; // 0x1b4
	EWidgetTickFrequency TickFrequency; // 0x1c0
	UInputComponent* InputComponent; // 0x1c8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1d0
};

struct USQBoundaryListener : UActorComponent {
	bool bRegisterToAllBoundaries; // 0xd8
	TArray<ASQBoundary*> TargetBoundaryClasses; // 0xe0
	FScriptMulticastDelegate OnEnterBoundarySignal; // 0xf0
	FScriptMulticastDelegate OnExitBoundarySignal; // 0x100
	AActor* OverrideTargetActor; // 0x110
	TArray<ASQBoundary*> Boundaries; // 0x118
};

struct UParticleModuleAccelerationConstant : UParticleModuleAccelerationBase {
	FVector Acceleration; // 0x38
};

struct USQRadialRoleIconButton : USQRadialIconButton {
	bool bIsUnavailable; // 0x410
	float Cost; // 0x414
	UTextBlock* CostBlock; // 0x418
	FLinearColor RimAvailableColor; // 0x420
	FLinearColor RimUnAvailableColor; // 0x430
	FLinearColor IconUnavailableColor; // 0x440
	FLinearColor InnerHoverUnavailableColor; // 0x450
	USQRoleSettings* ReferenceRole; // 0x460
	TScriptInterface<Class> RearmSource; // 0x468
	ASQPlayerController* OwnerPlayerController; // 0x478
};

struct USQRestriction_FOBInRange : USQRestriction_Boolean {
	float Range; // 0x58
	FString FobRadiusTableColumnName; // 0x60
	TSet<ESQTeamRelationShip> TargetTeams; // 0x70
	int TargetCount; // 0xc0
};

struct ULevelStreaming : UObject {
	UWorld* WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int LevelLODIndex; // 0xb0
	int StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xba
	char bShouldBeLoaded : 1; // 0xba
	char bLocked : 1; // 0xba
	char bIsStatic : 1; // 0xba
	char bShouldBlockOnLoad : 1; // 0xba
	char bShouldBlockOnUnload : 1; // 0xbb
	char bDisableDistanceStreaming : 1; // 0xbb
	char bDrawOnLevelStatusMap : 1; // 0xbb
	FLinearColor LevelColor; // 0xbc
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd0
	float MinTimeBetweenVolumeUnloadRequests; // 0xe0
	FScriptMulticastDelegate OnLevelLoaded; // 0xe8
	FScriptMulticastDelegate OnLevelUnloaded; // 0xf8
	FScriptMulticastDelegate OnLevelShown; // 0x108
	FScriptMulticastDelegate OnLevelHidden; // 0x118
	ULevel* LoadedLevel; // 0x128
	ULevel* PendingUnloadLevel; // 0x130
};

struct USQSquadStateData : USQCoreStateData {
	ESQMapMarkerVisibleTo Visibility; // 0xd0
	TArray<APawn*> AdminTypes; // 0xd8
	bool bVisibleWhenNeutral; // 0xe8
	ASQSquadState* SquadState; // 0xf0
	int SquadId; // 0xf8
	int TeamId; // 0xfc
	ASQSquadState* CachedSquadState; // 0x108
};

struct UInterpTrackParticleReplay : UInterpTrack {
	TArray<FParticleReplayTrackKey> TrackKeys; // 0x70
};

struct ALandscapeProxy : AActor {
	ULandscapeSplinesComponent* SplineComponent; // 0x248
	FGuid LandscapeGuid; // 0x250
	FIntPoint LandscapeSectionOffset; // 0x260
	int MaxLODLevel; // 0x268
	float LODDistanceFactor; // 0x26c
	ELandscapeLODFalloff LODFalloff; // 0x270
	float ComponentScreenSizeToUseSubSections; // 0x274
	float LOD0ScreenSize; // 0x278
	float LOD0DistributionSetting; // 0x27c
	float LODDistributionSetting; // 0x280
	float TessellationComponentScreenSize; // 0x284
	bool UseTessellationComponentScreenSizeFalloff; // 0x288
	float TessellationComponentScreenSizeFalloff; // 0x28c
	int OccluderGeometryLOD; // 0x290
	int StaticLightingLOD; // 0x294
	UPhysicalMaterial* DefaultPhysMaterial; // 0x298
	float StreamingDistanceMultiplier; // 0x2a0
	UMaterialInterface* LandscapeMaterial; // 0x2a8
	UMaterialInterface* LandscapeHoleMaterial; // 0x2b0
	TArray<FLandscapeProxyMaterialOverride> LandscapeMaterialsOverride; // 0x2b8
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x2c8
	int VirtualTextureNumLods; // 0x2d8
	int VirtualTextureLodBias; // 0x2dc
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x2e0
	float NegativeZBoundsExtension; // 0x2e4
	float PositiveZBoundsExtension; // 0x2e8
	TArray<ULandscapeComponent*> LandscapeComponents; // 0x2f0
	TArray<ULandscapeHeightfieldCollisionComponent*> CollisionComponents; // 0x300
	TArray<UHierarchicalInstancedStaticMeshComponent*> FoliageComponents; // 0x310
	bool bHasLandscapeGrass; // 0x384
	float StaticLightingResolution; // 0x388
	char bCastStaticShadow : 1; // 0x38c
	char bCastShadowAsTwoSided : 1; // 0x38c
	char bCastFarShadow : 1; // 0x38c
	char bAffectDistanceFieldLighting : 1; // 0x390
	FLightingChannels LightingChannels; // 0x391
	char bUseMaterialPositionOffsetInStaticLighting : 1; // 0x394
	char bRenderCustomDepth : 1; // 0x394
	int CustomDepthStencilValue; // 0x398
	float LDMaxDrawDistance; // 0x39c
	FLightmassPrimitiveSettings LightmassSettings; // 0x3a0
	int CollisionMipLevel; // 0x3b8
	int SimpleCollisionMipLevel; // 0x3bc
	float CollisionThickness; // 0x3c0
	FBodyInstance BodyInstance; // 0x3c8
	char bGenerateOverlapEvents : 1; // 0x4d8
	char bBakeMaterialPositionOffsetIntoCollision : 1; // 0x4d8
	int ComponentSizeQuads; // 0x4dc
	int SubsectionSizeQuads; // 0x4e0
	int NumSubsections; // 0x4e4
	char bUsedForNavigation : 1; // 0x4e8
	bool bUseDynamicMaterialInstance; // 0x4ec
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x4ed
	bool bUseLandscapeForCullingInvisibleHLODVertices; // 0x4ee
	bool bHasLayersContent; // 0x4ef
	TMap<UTexture2D*, ULandscapeWeightmapUsage*> WeightmapUsageMap; // 0x4f0
};

struct UGeometryCollectionDebugDrawComponent : UActorComponent {
	AGeometryCollectionDebugDrawActor* GeometryCollectionDebugDrawActor; // 0xd8
	AGeometryCollectionRenderLevelSetActor* GeometryCollectionRenderLevelSetActor; // 0xe0
};

struct UGeometryCache : UObject {
	TArray<UMaterialInterface*> Materials; // 0x30
	TArray<UGeometryCacheTrack*> Tracks; // 0x40
	int StartFrame; // 0x60
	int EndFrame; // 0x64
};

struct UWorld : UObject {
	ULevel* PersistentLevel; // 0x30
	UNetDriver* NetDriver; // 0x38
	ULineBatchComponent* LineBatcher; // 0x40
	ULineBatchComponent* PersistentLineBatcher; // 0x48
	ULineBatchComponent* ForegroundLineBatcher; // 0x50
	AGameNetworkManager* NetworkManager; // 0x58
	UPhysicsCollisionHandler* PhysicsCollisionHandler; // 0x60
	TArray<UObject*> ExtraReferencedObjects; // 0x68
	TArray<UObject*> PerModuleDataObjects; // 0x78
	TArray<AActor*> LevelSequenceActors; // 0x88
	TArray<ULevelStreaming*> StreamingLevels; // 0x98
	FStreamingLevelsToConsider StreamingLevelsToConsider; // 0xa8
	FString StreamingLevelsPrefix; // 0xd0
	ULevel* CurrentLevelPendingVisibility; // 0xe0
	ULevel* CurrentLevelPendingInvisibility; // 0xe8
	UDemoNetDriver* DemoNetDriver; // 0xf0
	AParticleEventManager* MyParticleEventManager; // 0xf8
	APhysicsVolume* DefaultPhysicsVolume; // 0x100
	char bAreConstraintsDirty : 1; // 0x11e
	UNavigationSystemBase* NavigationSystem; // 0x120
	AGameModeBase* AuthorityGameMode; // 0x128
	AGameStateBase* GameState; // 0x130
	UAISystemBase* AISystem; // 0x138
	UAvoidanceManager* AvoidanceManager; // 0x140
	TArray<ULevel*> Levels; // 0x148
	TArray<FLevelCollection> LevelCollections; // 0x158
	UGameInstance* OwningGameInstance; // 0x170
	TArray<UMaterialParameterCollectionInstance*> ParameterCollectionInstances; // 0x178
	UCanvas* CanvasForRenderingToTarget; // 0x188
	UCanvas* CanvasForDrawMaterialToRenderTarget; // 0x190
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate; // 0x1e8
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x1f8
	UWorldComposition* WorldComposition; // 0x568
	FWorldPSCPool PSCPool; // 0x5e0
};

struct UPlayer : UObject {
	APlayerController* PlayerController; // 0x30
	int CurrentNetSpeed; // 0x38
	int ConfiguredInternetSpeed; // 0x3c
	int ConfiguredLanSpeed; // 0x40
};

struct UUniformGridPanel : UPanelWidget {
	FMargin SlotPadding; // 0x120
	float MinDesiredSlotWidth; // 0x130
	float MinDesiredSlotHeight; // 0x134
};

struct USQPerformanceCollectorSubsystem : UGameInstanceSubsystem {
	float Deep_FrameSamplingFrequency; // 0x34
	float Deep_PlayerSamplingFrequency; // 0x38
	int Deep_RecordSize; // 0x3c
	float FrameSamplingFrequency; // 0x40
	float PlayerSamplingFrequency; // 0x44
	int RecordSize; // 0x48
};

struct AEQSTestingPawn : ACharacter {
	UEnvQuery* QueryTemplate; // 0x660
	TArray<FEnvNamedValue> QueryParams; // 0x668
	TArray<FAIDynamicParam> QueryConfig; // 0x678
	float TimeLimitPerStep; // 0x688
	int StepToDebugDraw; // 0x68c
	EEnvQueryHightlightMode HighlightMode; // 0x690
	char bDrawLabels : 1; // 0x694
	char bDrawFailedItems : 1; // 0x694
	char bReRunQueryOnlyOnFinishedMove : 1; // 0x694
	char bShouldBeVisibleInGame : 1; // 0x694
	char bTickDuringGame : 1; // 0x694
	EEnvQueryRunMode QueryingMode; // 0x698
	FNavAgentProperties NavAgentProperties; // 0x6a0
};

struct ABP_40MM_Smoke_Proj2_C : ABP_40MM_Proj2_C {
	UParticleSystemComponent* Effect; // 0x548
	UParticleSystem* SmokeEffect; // 0x550
	USoundCue* SmokeSound; // 0x558
};

struct UAK74GP25_Skeleton_AnimBlueprint_C : USQWeaponAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	FAnimNode_Root AnimGraphNode_Root_DB8541964BD8693C6A9EE29B968E2E7E; // 0x2b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_056725A145C3A633CDDDA2809A20EF64; // 0x2e8
	FAnimNode_Slot AnimGraphNode_Slot_80B2654E49E74054EEB42D9F7A72A707; // 0x3a8
	FAnimNode_Slot AnimGraphNode_Slot_6A7290AA41579C4942FD49B07CD52D8C; // 0x3f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_CEA31C31408BD3D6710D7685B523FCF4; // 0x438
	FAnimNode_Slot AnimGraphNode_Slot_13142A3F46DEBC3355E6C5BCDDF8BC3B; // 0x4b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31EFDE5C4490D099E0C0B4803287FCCB; // 0x4f8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_74E29BCB4628460CF6451EB7AD02388C; // 0x570
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_761FC29B41EF535FB2C591B7FE699905; // 0x630
};

struct USQGraphVisualizerComponent : UActorComponent {
	bool bShowDebugInfo; // 0xd8
	float DebugNodeRadius; // 0xdc
	float DebugNodeHeightOffset; // 0xe0
	float DebugLineHeightOffset; // 0xe4
};

struct UInputComponent : UActorComponent {
	TArray<FCachedKeyToActionInfo> CachedKeyToActionInfo; // 0x148
};

struct UInterpTrackInstColorProp : UInterpTrackInstProperty {
	FColor ResetColor; // 0x40
};

struct UMaterialExpressionAtmosphericFogColor : UMaterialExpression {
	FExpressionInput WorldPosition; // 0x40
};

