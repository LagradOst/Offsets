namespace off {
	constexpr auto GNames = 0x61a9b40;
	constexpr auto GObjects = 0x61c22d0;
	constexpr auto GWorld = 0x62f8800;
}
struct UCrowReplicationGraphSettings {
	TArray<FCrowReplicationRPCPolicyInfo> RPC_PolicySettingsList; // 0x38
	FCrowRepGraphSettings DefaultReplicationSettings; // 0x48
	TArray<FCrowRepGraphSettings> ReplicationSettingsList; // 0xb0
	bool OverrideReplicationSettings; // 0xc0
	uint32_t OverrideReplicationSettingsIndex; // 0xc4
	TArray<float> ScopeSightRateHalfFOVArray; // 0xc8
	TArray<float> ScopeSightRateDistanceDivider; // 0xd8
	bool ShowConnectionReplicationLog; // 0xe8
	bool ShowAlwaysRelevantReplicationLog; // 0xe9
	bool ShowPawnReplicationLog; // 0xea
	bool ShowGridReplicationLog; // 0xeb
	bool ShowPlayerStateReplicationLog; // 0xec
	uint32_t ReplicationSettingsIndex; // 0xf0
};

struct UDynamicMeshBrushTool {
	UPreviewMesh* PreviewMesh; // 0x1c0
};

struct UNiagaraDataInterfaceCamera {
	int32_t PlayerControllerIndex; // 0x38
	bool bRequireCurrentFrameData; // 0x3c
};

struct UCrowTabMenuWeaponCategoryWidget {
	UCrowCustomizeItemDescWidget* CustomizeItemDescWidget; // 0x380
};

struct UWB_Crosshair_Mh6_Flare_C {
	UImage* IMG_ZoomIn; // 0x460
	UImage* IMG_ZoomIn_5; // 0x468
};

struct ACrowWorldEventSupply {
	UStaticMeshComponent* StartPoint; // 0x370
	UStaticMeshComponent* EndPoint; // 0x378
	float MovingSpeed; // 0x380
	ACrowSupplyEventPlaneActor* TransportActor; // 0x388
	ACrowSupplyEventBoxActor* SupplyBoxActor; // 0x390
	float DelayTimeMin; // 0x398
	float DelayTimeMax; // 0x39c
	int32_t SupplyDropBoxCount; // 0x3a0
	float DropIntervalTimeMin; // 0x3a4
	float DropIntervalTimeMax; // 0x3a8
	TArray<int32_t> FixItemIndexArray; // 0x3b0
	ACrowSupplyEventPlaneActor* PlaneActor; // 0x3c0
};

struct UMaterialExpressionLandscapeGrassOutput {
	TArray<FGrassInput> GrassTypes; // 0x40
};

struct UNiagaraComponentPool {
	TMap<UNiagaraSystem*, FNCPool> WorldParticleSystemPools; // 0x28
};

struct UAnimInstance {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bReceiveNotifiesFromLinkedInstances : 1; // 0x31
	char bPropagateNotifiesToLinkedInstances : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FMulticastInlineDelegate OnMontageBlendingOut; // 0x38
	FMulticastInlineDelegate OnMontageStarted; // 0x48
	FMulticastInlineDelegate OnMontageEnded; // 0x58
	FMulticastInlineDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct UWaterSplineComponent {
	FWaterSplineCurveDefaults WaterSplineDefaults; // 0x538
	FWaterSplineCurveDefaults PreviousWaterSplineDefaults; // 0x548
};

struct UUserDefinedStruct {
	EUserDefinedStructureStatus Status; // 0xc0
	FGuid Guid; // 0xc4
};

struct UCrowCloudScapeDataAsset {
	TArray<FCrowCloudScapeSetting> Settings; // 0x30
};

struct ACrowMeshDestructionActor {
	USceneComponent* SceneRoot; // 0x220
	UCrowWorldDestructionAUD* DestructionAUD; // 0x228
	UCrowChainExplosionDamageType* ChainExplosionDamageType; // 0x230
	ECrowWorldDestructionCause DestructionCause; // 0x240
	bool IsDedicatedServer; // 0x241
	USkeletalMeshComponent* SimulationSKC; // 0x248
	ADestructibleActor* DestructibleActor; // 0x250
	UDestructibleComponent* DestructibleComponent; // 0x258
	float DestroyTime; // 0x260
	FTimerHandle DestroyTimerHandle; // 0x268
	float ExplosionDamage; // 0x270
	float ExplosionDamageRadius; // 0x274
	float ExplosionDamageTime; // 0x278
	float HitGroundTime; // 0x27c
	int32_t HitGroundCount; // 0x280
	TArray<UFXSystemComponent*> FxComponents; // 0x288
	TArray<UFXSystemComponent*> FxComponentsAttached; // 0x298
	TArray<UPrimitiveComponent*> TemporalMeshes; // 0x2a8
};

struct UMovieSceneEventTriggerSection {
	FMovieSceneEventChannel EventChannel; // 0xf0
};

struct UMovieScenePrimitiveMaterialSection {
	FMovieSceneObjectPathChannel MaterialChannel; // 0xe8
};

struct ACrowSupplyEventBoxActor {
	ACrowWorldIconActor* RewardIconActor; // 0x2c8
	UParticleSystemComponent* RewardSmokeEffect; // 0x2d0
	UCrowSimpleBuoyancyComponent* BuoyancyComponent; // 0x2d8
	int32_t DefaultItemIndex; // 0x2e0
	ACrowSupplyEventParachuteActor* ParachuteClass; // 0x2e8
	UAnimationAsset* ParachuteDownAni; // 0x2f0
	UAnimationAsset* ParachuteUpAni; // 0x2f8
	float DropHeight; // 0x300
	float MaxSpeed; // 0x304
	UParticleSystem* EffectSmoke; // 0x308
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x310
	UParticleSystemComponent* EffectSmokeComp; // 0x398
	ACrowSupplyEventParachuteActor* ParachuteActor; // 0x3a0
	ECrowSupplyEventState EventState; // 0x3a8
	char OwnerTeamID; // 0x3a9
	char SquadRewardIndex; // 0x3aa
};

struct AInteractiveFoliageActor {
	UCapsuleComponent* CapsuleComponent; // 0x230
	FVector TouchingActorEntryPosition; // 0x238
	FVector FoliageVelocity; // 0x244
	FVector FoliageForce; // 0x250
	FVector FoliagePosition; // 0x25c
	float FoliageDamageImpulseScale; // 0x268
	float FoliageTouchImpulseScale; // 0x26c
	float FoliageStiffness; // 0x270
	float FoliageStiffnessQuadratic; // 0x274
	float FoliageDamping; // 0x278
	float MaxDamageImpulse; // 0x27c
	float MaxTouchImpulse; // 0x280
	float MaxForce; // 0x284
	float Mass; // 0x288
};

struct ATemplateSequenceActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x228
	UTemplateSequencePlayer* SequencePlayer; // 0x240
	FSoftObjectPath TemplateSequence; // 0x248
	FTemplateSequenceBindingOverrideData BindingOverride; // 0x260
};

struct ULocationServicesImpl {
	FMulticastInlineDelegate OnLocationChanged; // 0x28
};

struct UCrowSquadLoadoutWidget {
	UCrowCountdownWidget* WB_Objective_CountDown; // 0x368
	UCrowButton* BT_EscBack; // 0x370
	UCrowButton* BT_SelectComplete; // 0x378
	UHorizontalBox* HB_Weapon_Main; // 0x380
	UHorizontalBox* HB_Weapon_Sub; // 0x388
	UHorizontalBox* HB_Weapon_Melee; // 0x390
	UHorizontalBox* HB_Gadget_Throwable; // 0x398
	UHorizontalBox* HB_Gadget_Healkit; // 0x3a0
	TArray<UCrowSquadLoadoutSlotWeaponWidget*> WeaponMainWidgetArray; // 0x3a8
	TArray<UCrowSquadLoadoutSlotWeaponWidget*> WeaponSubWidgetArray; // 0x3b8
	TArray<UCrowSquadLoadoutSlotWeaponWidget*> WeaponMeleeWidgetArray; // 0x3c8
	TArray<UCrowSquadLoadoutSlotGadgetWidget*> GadgetThrowableWidgetArray; // 0x3d8
	TArray<UCrowSquadLoadoutSlotGadgetWidget*> GadgetHealkitWidgetArray; // 0x3e8
};

struct UCrowRankingDateInfoTableManager {
	TMap<uint32_t, FCrowRankingDateInfoTableRow> RankingDateInfoTable; // 0x28
};

struct UMultiTransformer {
	UInteractiveGizmoManager* GizmoManager; // 0x70
	UTransformGizmo* TransformGizmo; // 0xe0
	UTransformProxy* TransformProxy; // 0xe8
};

struct UParticleModuleSpawnPerUnit {
	float UnitScalar; // 0x38
	float MovementTolerance; // 0x3c
	FRawDistributionFloat SpawnPerUnit; // 0x40
	float MaxFrameDistance; // 0x70
	char bIgnoreSpawnRateWhenMoving : 1; // 0x74
	char bIgnoreMovementAlongX : 1; // 0x74
	char bIgnoreMovementAlongY : 1; // 0x74
	char bIgnoreMovementAlongZ : 1; // 0x74
};

struct UAmbisonicsEncodingSettings {
	int32_t AmbisonicsOrder; // 0x28
};

struct ACrowItemVehicleSkin {
	FCrowItemData ItemData; // 0x2b8
	FCrowVehicleSkinTableRow ItemTable; // 0x2e8
	TArray<UObject*> VehicleClassArray; // 0x4a0
};

struct UMeshSimplificationSettings {
	FName MeshReductionModuleName; // 0x38
};

struct UTextureLightProfile {
	float Brightness; // 0x100
	float TextureMultiplier; // 0x104
};

struct UCrowKeyGuideSlotWidget {
	URichTextBlock* RTBMessage; // 0x348
	UTextBlock* TBDescription; // 0x350
};

struct ACrowSafeBoxEventBox {
	USceneComponent* EffectNormal; // 0x388
	USkeletalMeshComponent* BoxMesh; // 0x390
};

struct UCrowScoreBoardConquestUserWidget {
	UWidgetSwitcher* WS_ScoreBoard; // 0x348
	UCrowButton* BT_EscBack; // 0x350
	UImage* IMG_AllyIcon; // 0x358
	UImage* IMG_EnemyIcon; // 0x360
	UCrowScoreInfoConquestUserSummary* WB_ConquestScoreAlly; // 0x368
	UCrowScoreInfoConquestUserSummary* WB_ConqestScoreEnemy; // 0x370
	FSlateBrush RedTeamImage; // 0x378
	FSlateBrush BlueTeamImage; // 0x400
	ACrowGameStateConquest* CrowGameStateConquest; // 0x488
	ACrowPlayerStateBase* LocalPlayerState; // 0x490
};

struct UFieldSystemMetaDataProcessingResolution {
	EFieldResolutionType ResolutionType; // 0xb0
};

struct UInterpTrackInstSlomo {
	float OldTimeDilation; // 0x28
};

struct UAkXboxOneInitializationSettings {
	FAkCommonInitializationSettings CommonSettings; // 0x28
	FAkXboxOneApuHeapInitializationSettings ApuHeapSettings; // 0x88
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkXboxOneAdvancedInitializationSettings AdvancedSettings; // 0xb8
};

struct UOperatorField {
	float Magnitude; // 0xb0
	UFieldNodeBase* RightField; // 0xb8
	UFieldNodeBase* LeftField; // 0xc0
	EFieldOperationType Operation; // 0xc8
};

struct AGroomActor {
	UGroomComponent* GroomComponent; // 0x220
};

struct USteamVRHQStereoLayerShape {
	bool bCurved; // 0x28
	bool bAntiAlias; // 0x29
	float AutoCurveMinDistance; // 0x2c
	float AutoCurveMaxDistance; // 0x30
};

struct UMaterialExpressionStaticBool {
	char Value : 1; // 0x40
};

struct UGeometryCacheTrack_FlipbookAnimation {
	uint32_t NumMeshSamples; // 0x58
};

struct UBTDecorator_ConeCheck {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector ConeDirection; // 0x98
	FBlackboardKeySelector Observed; // 0xc0
};

struct UCrowConquestAreaGaugeHQ {
	UPaperSprite* RedMyTeam; // 0x558
	UPaperSprite* RedEnemy; // 0x560
	UPaperSprite* BlueMyTeam; // 0x568
	UPaperSprite* BlueEnemy; // 0x570
	UImage* IMG_Icon; // 0x578
};

struct USourceEffectEnvelopeFollowerPreset {
	FSourceEffectEnvelopeFollowerSettings Settings; // 0x9c
};

struct UPlaneFalloff {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	float Distance; // 0xc0
	FVector position; // 0xc4
	FVector Normal; // 0xd0
	EFieldFalloffType Falloff; // 0xdc
};

struct UARSaveWorldAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UBP_MachineGunAnimInst_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x2f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x308
	FAnimNode_MachineGunHandler AnimGraphNode_MachineGun; // 0x328
	FAnimNode_Slot AnimGraphNode_Slot; // 0x418
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x460
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x480
};

struct UMaterialExpressionFresnel {
	FExpressionInput ExponentIn; // 0x40
	float Exponent; // 0x54
	FExpressionInput BaseReflectFractionIn; // 0x58
	float BaseReflectFraction; // 0x6c
	FExpressionInput Normal; // 0x70
};

struct UDatasmithVREDSceneImportData {
	bool bMergeNodes; // 0x48
	bool bOptimizeDuplicatedNodes; // 0x49
	bool bImportMats; // 0x4a
	FString MatsPath; // 0x50
	bool bImportVar; // 0x60
	bool bCleanVar; // 0x61
	FString VarPath; // 0x68
	bool bImportLightInfo; // 0x78
	FString LightInfoPath; // 0x80
	bool bImportClipInfo; // 0x90
	FString ClipInfoPath; // 0x98
};

struct UCrowMultiSystemMessageBoxWidget {
	UCrowMultiSystemMessageWidget* WB_MultiSystemMessage_2; // 0x348
	UCrowMultiSystemMessageWidget* WB_MultiSystemMessage_3; // 0x350
	UCrowMultiSystemMessageWidget* WB_MultiSystemMessage_4; // 0x358
	TArray<UCrowMultiSystemMessageWidget*> MessageBoxArray; // 0x360
	float HideTime; // 0x370
};

struct UCrowWidgetConquestVehicleButton {
	UCrowToggleButton* BT_ConquestRespawn; // 0x348
	UImage* IMG_Icon; // 0x350
	UImage* IMG_Icon_2; // 0x358
	UCrowConquestAreaVehicleSpawner* TargetComponent; // 0x360
};

struct ULevelSequenceAnimSequenceLink {
	TArray<FLevelSequenceAnimSequenceLinkItem> AnimSequenceLinks; // 0x28
};

struct UCrowSocialWidget {
	UCrowTabMenuSocialWidget* WB_TabMenu_Social; // 0x348
	UWidgetSwitcher* WS_Social; // 0x350
	UCanvasPanel* CP_FriendList; // 0x358
	UWidgetSwitcher* WS_FriendList; // 0x360
	UGridPanel* GP_UserList_Friend; // 0x368
	UCanvasPanel* CP_RequestFriend; // 0x370
	UCanvasPanel* CP_GetRquest; // 0x378
	UTextBlock* TB_GetCount; // 0x380
	UWidgetSwitcher* WS_GetRequest; // 0x388
	UScrollBox* SB_GetRequest; // 0x390
	UCanvasPanel* CP_SendRquest; // 0x398
	UTextBlock* TB_SendCount; // 0x3a0
	UWidgetSwitcher* WS_SendRequest; // 0x3a8
	UScrollBox* SB_SendRequest; // 0x3b0
	UCanvasPanel* CP_Recent; // 0x3b8
	UWidgetSwitcher* WS_RecentList; // 0x3c0
	UGridPanel* GP_UserList_Recent; // 0x3c8
	UCanvasPanel* CP_SearchFriend; // 0x3d0
	UEditableTextBox* TB_TypingUserName; // 0x3d8
	UCrowButton* BT_Search; // 0x3e0
	UWidgetSwitcher* WS_SearchList; // 0x3e8
	UGridPanel* GP_UserList_Search; // 0x3f0
	UHorizontalBox* HB_Page; // 0x3f8
	UCrowButton* BT_Prev; // 0x400
	UCrowButton* BT_Next; // 0x408
	UTextBlock* TB_Page; // 0x410
	UCrowButton* BT_Prev_Search; // 0x418
	UCrowButton* BT_Next_Search; // 0x420
	UTextBlock* TB_Page_Search; // 0x428
	UCrowFriendSlotWidget* FriendSlotWidgetClass; // 0x430
	char SearchUserNameLegnthMin; // 0x438
	ESocialTabType CurrentTabType; // 0x439
	ACrowSceneLobby* SceneLobby; // 0x440
	uint32_t CurrentPage; // 0x448
	uint32_t PageMax; // 0x44c
};

struct ASwitchActor {
	USceneComponent* SceneComponent; // 0x238
	int32_t LastSelectedOption; // 0x240
};

struct ACrowWeaponRocketLauncher {
	UParticleSystem* BottomBlastEffect; // 0x1eb8
};

struct UMaterialParameterCollectionInstance {
	UMaterialParameterCollection* Collection; // 0x30
};

struct UViewAlignedPlaneBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct UCrowWeaponListItemBase {
	TArray<UWidget*> WeaponPanel; // 0x670
	ACrowWeaponBase* WeaponBase; // 0x680
	FCrowWeaponTableRow WeaponTable; // 0x690
	FCrowWeaponData WeaponData; // 0x18b0
	int32_t SlotIndex; // 0x1a18
	int32_t CurrAmmoCount; // 0x1a1c
	ECrowWeaponSubType WeaponSubType; // 0x1a20
	UWidgetSwitcher* WS_AmmoCount; // 0x1a28
	UCrowWidgetImage* IMG_Weapon; // 0x1a30
	UTextBlock* TB_RemainAmmo; // 0x1a38
	UTexture2D* WeaponIconImage; // 0x1a40
};

struct UCrowPlatformSteam {
	UTexture2D* DefaultTexture; // 0x80
	TMap<uint64_t, UTexture2D*> TexCache; // 0x88
};

struct UCrowVehicleMovementRotor {
	UCrowRotorConfigHeli* BodyConfig; // 0x190
	APawn* VehiclePawn; // 0x198
	UPrimitiveComponent* PhysicsBody; // 0x1a0
	FCrowRotorBodySetting PhysicsParam; // 0x1a8
	float IdleHoverForce; // 0x248
	float WorldOceanZ; // 0x24c
	float WorldAltitudeLimitZ; // 0x250
	int32_t RotorType; // 0x254
	float TorqueToAccel; // 0x258
	bool IsDirtyClientInput; // 0x25c
	FCrowMovementRotorValues ClientRawInput; // 0x260
	FCrowMovementRotorValues ReceivedInput; // 0x278
	FCrowMovementRotorValues CalculatedInput; // 0x290
	FCrowMovementRotorValues ForceAndTorque; // 0x2a8
	FCrowMovementRotorValues ForceAndTorqueCurrent; // 0x2c0
	FVector PhysicsBodyForward; // 0x3a0
	FVector PhysicsBodyRight; // 0x3ac
	FVector PhysicsBodyUp; // 0x3b8
	FVector PlanarForward; // 0x3c4
	FVector PlanarRight; // 0x3d0
	FVector PhysicsBodyVelocity; // 0x3dc
	FVector DirectionalVelocity; // 0x3e8
	FVector DragForce; // 0x3f4
	FVector IdleDampingForce; // 0x400
	float CurrentCollectiveForce; // 0x40c
	bool IsEngineStart; // 0x410
	FCrowMovementRotorValues DamagedEffectInput; // 0x414
	float DamagedEffectEnginePower; // 0x42c
	float DamagedInputFactor; // 0x430
};

struct UBakedTexture2DImageProperties {
	UTexture2D* SourceTexture; // 0x60
	int32_t UVLayer; // 0x68
};

struct UCrowTabGenderWidget {
	UCrowCustomizeCharacterDescWidget* CustomizeCharacterDescWidget; // 0x380
};

struct UMaterialShaderQualitySettings {
	TMap<FName, UShaderPlatformQualitySettings*> ForwardSettingMap; // 0x28
};

struct ACrowWorldActor {
	USceneComponent* SceneRoot; // 0x220
	UCrowWorldAnimator* WorldAnimator; // 0x228
	ACrowWorldReplicationActor* ReplicationActor; // 0x230
	UCrowWorldLODUpdater* LODUpdater; // 0x238
	char UseActorDestruction : 1; // 0x240
	char UseWorldActorLOD : 1; // 0x240
	char DestroyedFlagInCluster : 1; // 0x240
	char DestroyedFlagInLandmark : 1; // 0x240
	char SkipItemDestroyedFlag : 1; // 0x240
	char InitializedLayoutItems : 1; // 0x240
	char InitializedLOD : 1; // 0x240
	char FullyDestroyed : 1; // 0x240
	int16_t ActorLayoutIndex; // 0x242
	uint32_t WorldActorIndex; // 0x244
	uint32_t SectorIndex; // 0x248
	uint32_t ClusterIndex; // 0x24c
	int16_t ActorDestructibleFlagLookupInSector; // 0x250
	int16_t ActorDestructibleFlagLookupInCluster; // 0x252
	int16_t ActorDestructibleFlagLookupInLandmark; // 0x254
	int16_t LayoutItemDestructibleFlagOrigin; // 0x256
	int16_t LayoutItemDynamicStateOrigin; // 0x258
	FCrowWorldActorLayoutItemLookups LayoutItemLookups; // 0x260
	TArray<FCrowWorldActorLayoutItemInstance> LayoutItemInstances; // 0x2a0
	FCrowWorldActorDestructionState ActorDestructionState; // 0x2b0
	TArray<FCrowWorldActorLODState> ActorLODStates; // 0x2d8
};

struct USphereComponent {
	float SphereRadius; // 0x458
};

struct UNiagaraSimulationStageGeneric {
	ENiagaraIterationSource IterationSource; // 0x40
	int32_t Iterations; // 0x44
	char bSpawnOnly : 1; // 0x48
	char bDisablePartialParticleUpdate : 1; // 0x48
	FNiagaraVariableDataInterfaceBinding DataInterface; // 0x50
};

struct UGroupEdgeInsertionOperatorFactory {
	UGroupEdgeInsertionTool* Tool; // 0x30
};

struct UBaseKelvinletBrushOpProps {
	float Stiffness; // 0x60
	float Incompressiblity; // 0x64
	int32_t BrushSteps; // 0x68
};

struct ACrowWorldReplicationController {
	USceneComponent* SceneRoot; // 0x220
	APlayerController* PlayerController; // 0x228
	ACrowWorldReplicationActor* ReplicationActor; // 0x230
};

struct UPaperSpriteComponent {
	UPaperSprite* SourceSprite; // 0x468
	UMaterialInterface* MaterialOverride; // 0x470
	FLinearColor SpriteColor; // 0x478
};

struct UMaterialExpressionShadingModel {
	EMaterialShadingModel ShadingModel; // 0x40
};

struct UParticleModuleSize {
	FRawDistributionVector StartSize; // 0x30
};

struct UActorSequenceComponent {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0xb0
	UActorSequence* Sequence; // 0xc8
	UActorSequencePlayer* SequencePlayer; // 0xd0
};

struct USourceEffectStereoDelayPreset {
	FSourceEffectStereoDelaySettings Settings; // 0xb4
};

struct UGerstnerWaterWaves {
	UGerstnerWaterWaveGeneratorBase* GerstnerWaveGenerator; // 0x28
	TArray<FGerstnerWave> GerstnerWaves; // 0x30
	float MaxWaveHeight; // 0x40
};

struct UCrowScoreRankSlotModeWidget {
	UTextBlock* TB_Rank; // 0x350
	UTextBlock* TB_Class; // 0x358
	UTextBlock* TB_ID; // 0x360
	UTextBlock* TB_Score; // 0x368
	UTextBlock* TB_PlayTime; // 0x370
	UTextBlock* TB_PlayCount; // 0x378
	UTextBlock* TB_AverageScore; // 0x380
};

struct USoundNodeWavePlayer {
	TSoftObjectPtr<USoundWave> SoundWaveAssetPtr; // 0x48
	USoundWave* SoundWave; // 0x70
	char bLooping : 1; // 0x80
};

struct UTMG_CustomMesh {
	FCustomMeshProperties Properties; // 0x28
};

struct UCrowBattleMenuInput {
	APlayerController* PlayerController; // 0x140
};

struct UAkRoomComponent {
	char bEnable : 1; // 0x218
	UAkRoomComponent* NextLowerPriorityComponent; // 0x220
	float Priority; // 0x228
	float WallOcclusion; // 0x22c
	float AuxSendLevel; // 0x230
	bool AutoPost; // 0x234
};

struct UCrowVehicleCrosshairMh6Minigun {
	UImage* IMG_Overheating_Gauge; // 0x428
	UMaterialInstanceDynamic* ImgOverheatingGuageMaterial; // 0x430
	UCurveLinearColor* OverheatingCurve; // 0x438
	bool IsCooling; // 0x440
	UCrowWeaponInfoWidget* WeaponInfoWidget; // 0x448
};

struct ABP_CrowWeaponPartsLaserSight_Side_LPX8_C {
	UParticleSystemComponent* FX_Wp_LaserLight_M001; // 0x260
	UCrowLaserBeamComponent* CrowLaserBeam; // 0x268
	USkeletalMeshComponent* AK_LasersightSIDE; // 0x270
};

struct UCanvasRenderTarget2D {
	FMulticastInlineDelegate OnCanvasRenderTargetUpdate; // 0x108
	TWeakObjectPtr<UWorld> World; // 0x118
	bool bShouldClearRenderTargetOnReceiveUpdate; // 0x120
};

struct AUPSFormation_FromFormationPoints {
	TArray<UUPSFormationPointComponent*> FormationPointComponents; // 0x280
};

struct UInAppPurchaseComponent {
	FMulticastInlineDelegate InAppPurchaseLogMessage; // 0xb0
	FMulticastInlineDelegate GetItemsDetailsSuccess; // 0xc0
	FMulticastInlineDelegate GetItemsDetailsFailure; // 0xd0
	FMulticastInlineDelegate PurchaseConfirmationSuccess; // 0xe0
	FMulticastInlineDelegate PurchaseConfirmationFailure; // 0xf0
	FMulticastInlineDelegate GetPurchaseHistorySuccess; // 0x100
	FMulticastInlineDelegate GetPurchaseHistoryFailure; // 0x110
};

struct ANavigationTestingActor {
	UCapsuleComponent* CapsuleComponent; // 0x230
	UNavigationInvokerComponent* InvokerComponent; // 0x238
	char bActAsNavigationInvoker : 1; // 0x240
	FNavAgentProperties NavAgentProps; // 0x248
	FVector QueryingExtent; // 0x278
	ANavigationData* MyNavData; // 0x288
	FVector ProjectedLocation; // 0x290
	char bProjectedLocationValid : 1; // 0x29c
	char bSearchStart : 1; // 0x29c
	float CostLimitFactor; // 0x2a0
	float MinimumCostLimit; // 0x2a4
	char bBacktracking : 1; // 0x2a8
	char bUseHierarchicalPathfinding : 1; // 0x2a8
	char bGatherDetailedInfo : 1; // 0x2a8
	char bDrawDistanceToWall : 1; // 0x2a8
	char bShowNodePool : 1; // 0x2a8
	char bShowBestPath : 1; // 0x2a8
	char bShowDiffWithPreviousStep : 1; // 0x2a8
	char bShouldBeVisibleInGame : 1; // 0x2a8
	ENavCostDisplay CostDisplayMode; // 0x2ac
	FVector2D TextCanvasOffset; // 0x2b0
	char bPathExist : 1; // 0x2b8
	char bPathIsPartial : 1; // 0x2b8
	char bPathSearchOutOfNodes : 1; // 0x2b8
	float PathfindingTime; // 0x2bc
	float PathCost; // 0x2c0
	int32_t PathfindingSteps; // 0x2c4
	ANavigationTestingActor* OtherActor; // 0x2c8
	UNavigationQueryFilter* FilterClass; // 0x2d0
	int32_t ShowStepIndex; // 0x2d8
	float OffsetFromCornersDistance; // 0x2dc
};

struct UCrowFoliageParamSetting {
	FName MeshHeightParamName; // 0x28
	FName BendingPowerName; // 0x30
	FName MaxRotationParamName; // 0x38
	FName DynamicFoliageMaskName; // 0x40
	FName DynamicFoliageMaskSizeName; // 0x48
	FName AddSineName1; // 0x50
	FName AddSineName2; // 0x58
	TSet<FString> IgnoreContainKeywords; // 0x60
	TSet<FString> ValidParentMaterialNames; // 0xb0
	TArray<FCrowFoliageParam> GrassParams; // 0x100
	TArray<FCrowFoliageParam> BushParams; // 0x110
	TArray<FCrowFoliageParam> TreeParams; // 0x120
};

struct UCrowDotDamageComponent {
	FTimerHandle DestroyTimerHandle; // 0xb0
	FTimerHandle ActivateTimerHandle; // 0xb8
	TArray<FCrowDotDamageFxInfo> CrowDotDamageFxInfo; // 0xc0
	float ActivateDamageTimeSecond; // 0xd0
	float RunningTime; // 0xd4
	float Damage; // 0xd8
	bool bCreateFx; // 0xdc
	TArray<UParticleSystemComponent*> FXParticlesComps; // 0xe0
};

struct UMenuAnchor {
	UUserWidget* MenuClass; // 0x120
	FDelegate OnGetMenuContentEvent; // 0x128
	FDelegate OnGetUserMenuContentEvent; // 0x138
	EMenuPlacement Placement; // 0x148
	bool bFitInWindow; // 0x149
	bool ShouldDeferPaintingAfterWindowContent; // 0x14a
	bool UseApplicationMenuStack; // 0x14b
	FMulticastInlineDelegate OnMenuOpenChanged; // 0x150
};

struct UCrowPreviewActorComponent {
	AActor* TargetActor; // 0xb0
	TArray<UMeshComponent*> MeshCompArray; // 0xb8
};

struct UCrowRotorAnimInstance {
	FCrowRotorAnimInstanceProxy AnimInstanceProxy; // 0x2c0
	ACrowVehiclePawn* VehiclePawn; // 0xa30
};

struct USphereReflectionCaptureComponent {
	float InfluenceRadius; // 0x270
	float CaptureDistanceScale; // 0x274
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x278
};

struct UCurveLinearColor {
	FRichCurve FloatCurves[0x4]; // 0x30
	float AdjustHue; // 0x230
	float AdjustSaturation; // 0x234
	float AdjustBrightness; // 0x238
	float AdjustBrightnessCurve; // 0x23c
	float AdjustVibrance; // 0x240
	float AdjustMinAlpha; // 0x244
	float AdjustMaxAlpha; // 0x248
};

struct UOffsetWeightMapSetProperties {
	float MinDistance; // 0x80
};

struct ACrowRandomBoxTriggerActor {
	UCrowRandomBoxWidget* BoxWidgetClass; // 0x220
	ULevelSequencePlayer* LevelSequencePlayer; // 0x228
	UCrowRandomBoxWidget* BoxWidget; // 0x230
	int32_t CurrMessageIndex; // 0x238
	bool IsTouch; // 0x23c
};

struct UUMGSequenceTickManager {
	TSet<TWeakObjectPtr<UUserWidget>> WeakUserWidgets; // 0x28
	UMovieSceneEntitySystemLinker* Linker; // 0x78
};

struct UGeometryCacheCodecRaw {
	int32_t DummyProperty; // 0x38
};

struct ACrowKitBomberProjectile {
	int32_t AmmoTableIndex; // 0x1840
	float Speed; // 0x1844
	FWeaponDamageSettings DamageSetting; // 0x1848
	UDamageType* DamegeType; // 0x1870
	UMatineeCameraShake* CameraShakeFP; // 0x1878
	UMatineeCameraShake* CameraShakeTP; // 0x1880
	FVector Dir; // 0x1888
	ACrowKitBomber* BomberActor; // 0x1898
	FVector TargetActorPos; // 0x18a0
};

struct AAmbientSound {
	UAudioComponent* AudioComponent; // 0x220
};

struct UMovieSceneSequence {
	UMovieSceneCompiledData* CompiledData; // 0x50
	EMovieSceneCompletionMode DefaultCompletionMode; // 0x58
	bool bParentContextsAreSignificant; // 0x59
	bool bPlayableDirectly; // 0x5a
	EMovieSceneSequenceFlags SequenceFlags; // 0x5b
};

struct UWB_HUD_M1Abrams_Crosshair_Machinegun_First_C {
	UImage* Image; // 0x438
	UImage* Image_372; // 0x440
	UImage* IMG_Box_CrossHair; // 0x448
	UImage* IMG_Crosshair_Gauge; // 0x450
	UImage* IMG_Crosshair_Gauge_Base; // 0x458
	UImage* IMG_Crosshair_Moving; // 0x460
	UImage* IMG_CrosshairFrame; // 0x468
	UImage* IMG_FPS_CMG_Down; // 0x470
	UImage* IMG_FPS_CMG_Down_3; // 0x478
	UImage* IMG_FPS_CMG_Left; // 0x480
	UImage* IMG_FPS_CMG_Left_3; // 0x488
	UImage* IMG_FPS_CMG_Right; // 0x490
	UImage* IMG_FPS_CMG_Right_3; // 0x498
	UImage* IMG_FPS_CMG_Up; // 0x4a0
	UImage* IMG_FPS_CMG_Up_3; // 0x4a8
	UImage* IMG_ZoomIn; // 0x4b0
	UImage* IMG_ZoomIn_2; // 0x4b8
	UImage* IMG_ZoomIn_3; // 0x4c0
	UImage* IMG_ZoomIn_4; // 0x4c8
	UImage* IMG_ZoomIn_5; // 0x4d0
	UImage* IMG_ZoomIn_6; // 0x4d8
};

struct UPlatformInterfaceBase {
	TArray<FDelegateArray> AllDelegates; // 0x28
};

struct UMovieSceneSection {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int32_t RowIndex; // 0xa8
	int32_t OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct UBoundsCopyComponent {
	TSoftObjectPtr<AActor> BoundsSourceActor; // 0xb0
	bool bUseCollidingComponentsForSourceBounds; // 0xd8
	bool bKeepOwnBoundsScale; // 0xd9
	bool bUseCollidingComponentsForOwnBounds; // 0xda
	FTransform PostTransform; // 0xe0
	bool bCopyXBounds; // 0x110
	bool bCopyYBounds; // 0x111
	bool bCopyZBounds; // 0x112
};

struct UM2_Browning_Boat_Back_Anim_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x318
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x328
	FAnimNode_Slot AnimGraphNode_Slot; // 0x348
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x390
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x3b0
	FAnimNode_VehicleWeaponHandler AnimGraphNode_VehicleWeapon; // 0x3d0
};

struct UParticleModuleSubUVMovie {
	char bUseEmitterTime : 1; // 0x70
	FRawDistributionFloat FrameRate; // 0x78
	int32_t StartingFrame; // 0xa8
};

struct UPaperTerrainComponent {
	UPaperTerrainMaterial* TerrainMaterial; // 0x440
	bool bClosedSpline; // 0x448
	bool bFilledSpline; // 0x449
	UPaperTerrainSplineComponent* AssociatedSpline; // 0x450
	int32_t RandomSeed; // 0x458
	float SegmentOverlapAmount; // 0x45c
	FLinearColor TerrainColor; // 0x460
	int32_t ReparamStepsPerSegment; // 0x470
	ESpriteCollisionMode SpriteCollisionDomain; // 0x474
	float CollisionThickness; // 0x478
	UBodySetup* CachedBodySetup; // 0x480
};

struct UTileView {
	float EntryHeight; // 0x368
	float EntryWidth; // 0x36c
	EListItemAlignment TileAlignment; // 0x370
	bool bWrapHorizontalNavigation; // 0x371
};

struct UBreakpoint {
	char bEnabled : 1; // 0x28
	UEdGraphNode* Node; // 0x30
	char bStepOnce : 1; // 0x38
	char bStepOnce_WasPreviouslyDisabled : 1; // 0x38
	char bStepOnce_RemoveAfterHit : 1; // 0x38
};

struct UCrowPingIndicatorWidget {
	UCanvasPanel* CP_Root; // 0x348
	UCanvasPanel* CP_LocateArrow; // 0x350
	UCanvasPanel* CP_Ping; // 0x358
	UImage* IMG_LocateArrow; // 0x360
	UImage* IMG_Ping_Point; // 0x368
	UImage* IMG_Ping_BG; // 0x370
	UImage* IMG_Ping; // 0x378
	UImage* IMG_Ping_Active_2; // 0x380
	UImage* IMG_Ping_Active_3; // 0x388
	UTextBlock* TB_Distance; // 0x390
	UTextBlock* TB_Name; // 0x398
	UWidgetAnimation* AniWidgetActive; // 0x3a0
	ACrowPingBase* TargetActor; // 0x3a8
	UImage* ImgPingBG_Small; // 0x3b0
	UBorder* BorderPingItem_BG; // 0x3b8
	UImage* ImgPing_Item; // 0x3c0
	UBorder* BorderPingItem_Grade; // 0x3c8
};

struct ACrowProjectileTankSmoke {
	FVector VehicleVelocity; // 0x18d0
	UParticleSystem* SmokeEffect; // 0x18e0
	UAkAudioEvent* ExplosionSound; // 0x18e8
	AActor* ImpedimentsActorClass; // 0x18f0
};

struct ABP_CrowWeaponPartsLaserSight_C {
	UParticleSystemComponent* FX_Wp_LaserLight_M001; // 0x260
	UCrowLaserBeamComponent* CrowLaserBeam; // 0x268
	USkeletalMeshComponent* HG_Lasersight_SIDE; // 0x270
};

struct UParticleModuleColorOverLife {
	FRawDistributionVector ColorOverLife; // 0x30
	FRawDistributionFloat AlphaOverLife; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct UInterpTrackInstLinearColorProp {
	FLinearColor ResetColor; // 0x58
};

struct UCrowScoreInfoDeathMatchListItem {
	UImage* IMG_BackGround; // 0x348
	UImage* IMG_SquadLeader; // 0x350
	UImage* IMG_LocalPlayer; // 0x358
	UImage* IMG_SideLineL; // 0x360
	UImage* IMG_SideLineR; // 0x368
	UHorizontalBox* HB_Contents; // 0x370
	UWidgetSwitcher* WS_Status; // 0x378
	UTextBlock* TB_PlayerRank; // 0x380
	UTextBlock* TB_PlayerName; // 0x388
	UTextBlock* TB_KillCount; // 0x390
	UTextBlock* TB_DeathCount; // 0x398
	FLinearColor LocalPlayerBackColor; // 0x3a0
	FLinearColor LocalPlayerTextColor; // 0x3b0
	FLinearColor DefaultBackColor; // 0x3c0
	FLinearColor DefaultTextColor; // 0x3d0
	float SquadListAlpha; // 0x3e0
};

struct UCrowLobbyProfileSeasonWidget {
	UCrowDropDownWidget* Dropdown_All; // 0x348
	UCrowDropDownWidget* Dropdown_Time; // 0x350
	UTextBlock* TB_Rank; // 0x358
	UTextBlock* TB_Level; // 0x360
	UTextBlock* TB_Kill; // 0x368
	UTextBlock* TB_Assist; // 0x370
	UTextBlock* TB_Death; // 0x378
	UTextBlock* TB_Faint; // 0x380
	UTextBlock* TB_TotalScore; // 0x388
	UTextBlock* TB_AverageScore; // 0x390
	UTextBlock* TB_WinLose; // 0x398
	UTextBlock* TB_PlayTime; // 0x3a0
};

struct AProceduralFoliageBlockingVolume {
	AProceduralFoliageVolume* ProceduralFoliageVolume; // 0x258
};

struct UCrowInvenCenterPanelWidget {
	UTextBlock* TB_Item_Category; // 0x348
	UTextBlock* TB_WeaponName; // 0x350
	UTextBlock* TB_ItemDesc_Text; // 0x358
	UTextBlock* TB_Value_Amount; // 0x360
	UTextBlock* TB_Value_Split; // 0x368
	UTextBlock* TB_AmmoType; // 0x370
	UTextBlock* TB_CurrentAmmo; // 0x378
	UTextBlock* TB_ReaminAmmo; // 0x380
	UTextBlock* TB_MenuTitle; // 0x388
	UCrowWidgetImage* IMG_Weapon; // 0x390
	UCrowWidgetImage* IMG_Item; // 0x398
	UWidgetSwitcher* WS_ItemTypeAction; // 0x3a0
	UWidgetSwitcher* WS_WeaponType; // 0x3a8
	UWidgetSwitcher* WS_ItemIcon; // 0x3b0
	UCrowItemStatusDescWidget* WB_Item_Status_Desc0; // 0x3b8
	UCrowItemStatusDescWidget* WB_Item_Status_Desc1; // 0x3c0
	UCrowItemStatusDescWidget* WB_Item_Status_Desc2; // 0x3c8
	UCrowItemStatusDescWidget* WB_Item_Status_Desc3; // 0x3d0
	UCrowItemStatusDescWidget* WB_Item_Status_Desc4; // 0x3d8
	UCrowItemStatusDescWidget* WB_Item_Status_Desc5; // 0x3e0
	UCrowItemStatusDescWidget* WB_Item_Status_Desc6; // 0x3e8
	UUserWidget* WB_Item_DamageDrop; // 0x3f0
	UVerticalBox* VB_WeaponStat; // 0x3f8
	UVerticalBox* VB_AmmoType; // 0x400
	USlider* Slider_SplitSlider; // 0x408
	UHorizontalBox* HB_AmmoType; // 0x410
	UHorizontalBox* HB_BurstType; // 0x418
	UImage* IMG_Seperate; // 0x420
	UCanvasPanel* CP_ItemSplitInfo; // 0x428
	UTextBlock* TB_ReaminAmmoBar; // 0x430
	UTextBlock* TB_Descripction; // 0x438
	float MaxAmountValue; // 0x440
	bool IsDropMode; // 0x444
};

struct UCrowPlayMontageCallbackProxy {
	FMulticastInlineDelegate OnCompleted; // 0x28
	FMulticastInlineDelegate OnBlendOut; // 0x38
	FMulticastInlineDelegate OnInterrupted; // 0x48
	FMulticastInlineDelegate OnNotifyBegin; // 0x58
	FMulticastInlineDelegate OnNotifyEnd; // 0x68
};

struct ULocalPlayer {
	UGameViewportClient* ViewportClient; // 0x70
	EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x94
	APlayerController* PendingLevelPlayerControllerClass; // 0x98
	char bSentSplitJoin : 1; // 0xa0
	int32_t ControllerId; // 0xb8
};

struct ULogoutCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct ACrowItemTableOverviewSMC {
	UStaticMeshComponent* Mesh; // 0x228
};

struct UMovementComponent {
	USceneComponent* UpdatedComponent; // 0xb0
	UPrimitiveComponent* UpdatedPrimitive; // 0xb8
	FVector Velocity; // 0xc4
	FVector PlaneConstraintNormal; // 0xd0
	FVector PlaneConstraintOrigin; // 0xdc
	char bUpdateOnlyIfRendered : 1; // 0xe8
	char bAutoUpdateTickRegistration : 1; // 0xe8
	char bTickBeforeOwner : 1; // 0xe8
	char bAutoRegisterUpdatedComponent : 1; // 0xe8
	char bConstrainToPlane : 1; // 0xe8
	char bSnapToPlaneAtStart : 1; // 0xe8
	char bAutoRegisterPhysicsVolumeUpdates : 1; // 0xe8
	char bComponentShouldUpdatePhysicsVolume : 1; // 0xe8
	EPlaneConstraintAxisSetting PlaneConstraintAxisSetting; // 0xeb
};

struct UFontImportOptions {
	FFontImportOptionsData Data; // 0x28
};

struct UWB_EnemyWatching_PlayerIndicator_C {
	UImage* Image; // 0x370
	UImage* Image_23; // 0x378
	UImage* IMG_LocateArrow; // 0x380
};

struct ACrowGameStateBombMission {
	TArray<FCrowScoreInfoBombMission> ScoreArray; // 0x410
	TArray<ACrowPlayerStartTDM*> RedTeamPlayerStartArray; // 0x420
	TArray<ACrowPlayerStartTDM*> BlueTeamPlayerStartArray; // 0x430
	ECrowGameRoundState CrowGameRoundState; // 0x440
	float RoundTimeSec; // 0x444
	char CurrentRoundCount; // 0x448
	char CurrentRoundTransitionCount; // 0x449
	bool bIsWinToTimeout; // 0x44a
	float FirstRoundWaitTimeSec; // 0x44c
	float RoundWaitTimeSec; // 0x450
	float RoundMatchTimeSec; // 0x454
	float RoundFinishTimeSec; // 0x458
	char TotalRoundCount; // 0x45c
	char RoundTransitionCount; // 0x45d
	float LoadoutTimeSec; // 0x460
	float CompositionCTimeSec; // 0x464
	char AttackerTeam; // 0x468
	float SpectatorModeWaitTimeSec; // 0x46c
	bool bIsAvailableLoadout; // 0x470
	char RedTeamWinCount; // 0x471
	char BlueTeamWinCount; // 0x472
	char RoundWinTeamID; // 0x473
	char UnearnedWinTeamID; // 0x474
	bool bIsPlantCompositionC; // 0x475
	int32_t PlantCompositionCPlayerId; // 0x478
	char TeamWinByPlantCompositionC; // 0x47c
	char TeamWinByDefuseCompositionC; // 0x47d
	ACrowPlayerStateBase* CompositionCHolderPlayer; // 0x480
	bool bIsSelectedCompositionCHolder; // 0x488
	TMap<char, FCrowTeamInfoBombMission> TeamInfoMap; // 0x490
	TMap<char, FCrowPlayerCountInfoBombMission> PlayerCountMap; // 0x4e0
	UCrowRemainTimeSync* RemainRoundTime; // 0x530
};

struct ACrowImpedimentsActor {
	UParticleSystemComponent* ImpedimentsParticleComp; // 0x220
};

struct UGroomHairGroupsPreview {
	TArray<FGroomHairGroupPreview> Groups; // 0x28
};

struct UCrowDynamicFoliageManager {
	FLinearColor ClearColor; // 0xb0
	float PixelSizePerMeter; // 0xc0
	float CaptureSize; // 0xc4
	UTextureRenderTarget2D* RenderTarget; // 0xc8
	UMaterialParameterCollection* CrowParamCollection; // 0xd0
	UCrowDynamicFoliageConfig* DynamicFoliageConfig; // 0xd8
	UCrowFoliageParamSetting* FoliageParamSetting; // 0xe0
	float MaskRotation; // 0xe8
	UCrowDynamicFoliageDrawComponent* DrawComponent; // 0xf0
	bool bNeedCleanup; // 0xf8
	int32_t FrameCount; // 0xfc
	TArray<int32_t> RemoveAffectorList; // 0x100
	TArray<TWeakObjectPtr<UCrowFoliageAffectorComponent>> AddAffectorList; // 0x110
	TMap<int32_t, TWeakObjectPtr<UCrowFoliageAffectorComponent>> MapFoliageAffector; // 0x120
};

struct ALandscapeMeshProxyActor {
	ULandscapeMeshProxyComponent* LandscapeMeshProxyComponent; // 0x220
};

struct UVectorFieldStatic {
	int32_t SizeX; // 0x48
	int32_t SizeY; // 0x4c
	int32_t SizeZ; // 0x50
	bool bAllowCPUAccess; // 0x54
};

struct UParticleModuleOrbit {
	EOrbitChainMode ChainMode; // 0x38
	FRawDistributionVector OffsetAmount; // 0x40
	FOrbitOptions OffsetOptions; // 0x88
	FRawDistributionVector RotationAmount; // 0x90
	FOrbitOptions RotationOptions; // 0xd8
	FRawDistributionVector RotationRateAmount; // 0xe0
	FOrbitOptions RotationRateOptions; // 0x128
};

struct UBTTask_FinishWithResult {
	EBTNodeResult Result; // 0x70
};

struct UReflectionCaptureComponent {
	UBillboardComponent* CaptureOffsetComponent; // 0x1f8
	EReflectionSourceType ReflectionSourceType; // 0x200
	EMobileReflectionCompression MobileReflectionCompression; // 0x201
	UTextureCube* Cubemap; // 0x208
	float SourceCubemapAngle; // 0x210
	float Brightness; // 0x214
	bool bModifyMaxValueRGBM; // 0x218
	float MaxValueRGBM; // 0x21c
	FVector CaptureOffset; // 0x220
	FGuid MapBuildDataId; // 0x22c
	UTextureCube* CachedEncodedHDRCubemap; // 0x250
};

struct UCrowReplayPlayerWidget {
	UUserWidget* BookMarkWidget; // 0x348
	FVector2D BookMarkSize; // 0x350
	UCrowButton* BT_Pause; // 0x358
	UCrowButton* BT_Play; // 0x360
	UCrowButton* BT_PlayRatePlus; // 0x368
	UCrowButton* BT_PlayRateMinus; // 0x370
	UCrowButton* BT_Next; // 0x378
	UCrowButton* BT_Prev; // 0x380
	UCrowButton* BT_BookMarkPlus; // 0x388
	UCrowButton* BT_BookMarkMinus; // 0x390
	UTextBlock* TB_Username; // 0x398
	UTextBlock* TB_Playrate; // 0x3a0
	UTextBlock* TB_CurrentGameTime; // 0x3a8
	UTextBlock* TB_MaxGameTime; // 0x3b0
	UCanvasPanel* CP_TrackBar; // 0x3b8
	UCanvasPanel* CP_HelpBar; // 0x3c0
	UCanvasPanel* CP_BookMarkArea; // 0x3c8
	UCanvasPanel* CP_PlayTime; // 0x3d0
	UWidgetSwitcher* WS_ViewMode; // 0x3d8
	UWidgetSwitcher* PlayPauseSwitcher; // 0x3e0
	USlider* SB_PlayScroll; // 0x3e8
	TWeakObjectPtr<ACrowPlayerControllerReplay> ReplayController; // 0x3f0
	UCrowBookMarkWidget* SelectedBookMark; // 0x3f8
};

struct UCrowVehiclePhysicalMaterial {
	float MaxEngineRPMForwardMultiply; // 0x80
	float MaxEngineRPMReverseMultiply; // 0x84
	float MaxEngineTorqueMultiply; // 0x88
	float WheelFrictionMultiply; // 0x8c
	UParticleSystem* ImpactFx; // 0x90
	bool IgnoreMetalFx; // 0x98
};

struct UCrowServerOnlyCharacterControll {
	ACrowCharacterPawn* CharacterOwner; // 0xb0
	FCrowServerOnlyCharacterInfo MoveTypeInfo; // 0xb8
	FCrowServerOnlyCharacterInfo MoveForwardInfo; // 0xd0
	FCrowServerOnlyCharacterInfo MoveRightInfo; // 0xe8
	FCrowServerOnlyCharacterInfo LookRightInfo; // 0x100
	FCrowServerOnlyCharacterInfo LookUpInfo; // 0x118
	FCrowServerOnlyCharacterInfo WeaponFire; // 0x130
};

struct UCrowSquadNotiTimerWidget {
	UTextBlock* TB_Timer; // 0x370
};

struct UEnvQueryGenerator_ProjectedPoints {
	FEnvTraceData ProjectionData; // 0x50
};

struct UWB_Vehicle_Warning_Heli_C {
	UWidgetAnimation* Ani_Damage_Orange; // 0x418
	UWidgetAnimation* Ani_Damage_Yellow; // 0x420
	UWidgetAnimation* NewAnimation; // 0x428
	UWidgetAnimation* Ani_MissileIncoming; // 0x430
	UWidgetAnimation* Ani_Damage_Red; // 0x438
	UImage* IMG_Base_BG; // 0x440
	UImage* IMG_BG; // 0x448
	UImage* IMG_IMG_Effect; // 0x450
	UImage* IMG_Missile; // 0x458
	UImage* IMG_Warning; // 0x460
};

struct UEnvQueryManager {
	TArray<FEnvQueryInstanceCache> InstanceCache; // 0xa8
	TArray<UEnvQueryContext*> LocalContexts; // 0xb8
	TArray<UEnvQueryInstanceBlueprintWrapper*> GCShieldedWrappers; // 0xc8
	float MaxAllowedTestingTime; // 0x12c
	bool bTestQueriesUsingBreadth; // 0x130
	int32_t QueryCountWarningThreshold; // 0x134
	double QueryCountWarningInterval; // 0x138
};

struct UCrowObjectiveBoardWidget {
	UUserWidget* WB_Objective_WIdget; // 0x348
	UCrowSquadWidget* WB_SquadWidget; // 0x350
};

struct UMaterialExpressionPanner {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	FExpressionInput Speed; // 0x68
	float SpeedX; // 0x7c
	float SpeedY; // 0x80
	uint32_t ConstCoordinate; // 0x84
	bool bFractionalPart; // 0x88
};

struct ACrowAIZoneRewardBase {
	ACrowSupplyEventBoxActor* RewardSupplyBoxActor; // 0x220
	TArray<int32_t> FixItemIndexList; // 0x228
};

struct ULevel {
	UWorld* OwningWorld; // 0xb8
	UModel* Model; // 0xc0
	TArray<UModelComponent*> ModelComponents; // 0xc8
	ULevelActorContainer* ActorCluster; // 0xd8
	int32_t NumTextureStreamingUnbuiltComponents; // 0xe0
	int32_t NumTextureStreamingDirtyResources; // 0xe4
	ALevelScriptActor* LevelScriptActor; // 0xe8
	ANavigationObjectBase* NavListStart; // 0xf0
	ANavigationObjectBase* NavListEnd; // 0xf8
	TArray<UNavigationDataChunk*> NavDataChunks; // 0x100
	float LightmapTotalSize; // 0x110
	float ShadowmapTotalSize; // 0x114
	TArray<FVector> StaticNavigableGeometry; // 0x118
	TArray<FGuid> StreamingTextureGuids; // 0x128
	FGuid LevelBuildDataId; // 0x1d0
	UMapBuildDataRegistry* MapBuildData; // 0x1e0
	FIntVector LightBuildLevelOffset; // 0x1e8
	char bIsLightingScenario : 1; // 0x1f4
	char bTextureStreamingRotationChanged : 1; // 0x1f4
	char bStaticComponentsRegisteredInStreamingManager : 1; // 0x1f4
	char bIsVisible : 1; // 0x1f4
	AWorldSettings* WorldSettings; // 0x258
	TArray<UAssetUserData*> AssetUserData; // 0x268
	TArray<FReplicatedStaticActorDestructionInfo> DestroyedReplicatedStaticActors; // 0x288
};

struct UHierarchicalLODSetup {
	TArray<FHierarchicalSimplification> HierarchicalLODSetup; // 0x28
	TSoftObjectPtr<UMaterialInterface> OverrideBaseMaterial; // 0x38
};

struct UClothingAssetBase {
	FString ImportedFilePath; // 0x28
	FGuid AssetGuid; // 0x38
};

struct UDatasmithDeltaGenSceneImportData {
	bool bMergeNodes; // 0x48
	bool bOptimizeDuplicatedNodes; // 0x49
	bool bRemoveInvisibleNodes; // 0x4a
	bool bSimplifyNodeHierarchy; // 0x4b
	bool bImportVar; // 0x4c
	FString VarPath; // 0x50
	bool bImportPos; // 0x60
	FString PosPath; // 0x68
	bool bImportTml; // 0x78
	FString TmlPath; // 0x80
};

struct AGameMode {
	FName MatchState; // 0x2c0
	char bDelayedStart : 1; // 0x2c8
	int32_t NumSpectators; // 0x2cc
	int32_t NumPlayers; // 0x2d0
	int32_t NumBots; // 0x2d4
	float MinRespawnDelay; // 0x2d8
	int32_t NumTravellingPlayers; // 0x2dc
	ULocalMessage* EngineMessageClass; // 0x2e0
	TArray<APlayerState*> InactivePlayerArray; // 0x2e8
	float InactivePlayerStateLifeSpan; // 0x2f8
	int32_t MaxInactivePlayers; // 0x2fc
	bool bHandleDedicatedServerReplays; // 0x300
};

struct ADatasmithSceneActor {
	UDatasmithScene* Scene; // 0x220
	TMap<FName, TSoftObjectPtr<AActor>> RelatedActors; // 0x228
};

struct UAkMarkerCallbackInfo {
	int32_t Identifier; // 0x38
	int32_t position; // 0x3c
	FString Label; // 0x40
};

struct UDrawPolyPathProperties {
	EDrawPolyPathOutputMode OutputType; // 0x60
	EDrawPolyPathWidthMode WidthMode; // 0x64
	float Width; // 0x68
	EDrawPolyPathHeightMode HeightMode; // 0x6c
	float Height; // 0x70
	float RampStartRatio; // 0x74
	bool bSnapToWorldGrid; // 0x78
};

struct UProgressBar {
	FProgressBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x2a8
	USlateBrushAsset* BackgroundImage; // 0x2b0
	USlateBrushAsset* FillImage; // 0x2b8
	USlateBrushAsset* MarqueeImage; // 0x2c0
	float Percent; // 0x2c8
	EProgressBarFillType BarFillType; // 0x2cc
	bool bIsMarquee; // 0x2cd
	FVector2D BorderPadding; // 0x2d0
	FDelegate PercentDelegate; // 0x2d8
	FLinearColor FillColorAndOpacity; // 0x2e8
	FDelegate FillColorAndOpacityDelegate; // 0x2f8
};

struct UCrowCharacterAnimTableManager {
	UDataTable* PrivateTP; // 0x28
	UDataTable* PrivateFP; // 0x30
	UDataTable* PrivateShoot; // 0x38
	UDataTable* PrivateReload; // 0x40
	UDataTable* ItemAction; // 0x48
	UDataTable* OnVehicle; // 0x50
	UDataTable* Common; // 0x58
	UDataTable* GroundPoseTable; // 0x60
	UDataTable* VehiclePoseTable; // 0x68
	UDataTable* GripPoseTable; // 0x70
	UDataTable* CommonAnimTable; // 0x78
};

struct ACrowSceneGame {
	ULevelStreamingDynamic* WeaponLoadOutLevel; // 0x940
	ACrowWeaponLoadoutObjectBider* WeaponLoadoutObjectBider; // 0x948
	ACrowWeaponLobby* IngameCustomWeapon; // 0x950
	ACrowWeaponLobby* TestCustomWeapon; // 0x958
	TArray<ASkyLight*> SkyLightArray; // 0x960
	FRotator DefaultCustomWeaponRotion; // 0x970
	FRotator DragStartCustomWeaponRotion; // 0x97c
	FVector2D DragStartScreenPosition; // 0x988
	ERotationMode WeaponRotationMode; // 0x990
	ELoadOutMode CurrentLoadOutMode; // 0x991
	int32_t SaveValueMapIndex; // 0x994
	int64_t SaveValueWeaponIndex; // 0x998
	int8_t SaveValueWeaponSlot; // 0x9a0
	int64_t SaveValueUserServerKey; // 0x9a8
	int32_t SaveValueAppearanceIndex[0x8]; // 0x9b0
	FString SaveNickName; // 0x9d0
	ECrowCharacterAppearanceType CurrentCameraAppearanceType; // 0x9e0
	AActor* CurrCamera; // 0x9e8
};

struct ABP_SkydivingPawn_C {
	UArrowComponent* Vel_Arrow_Z; // 0xac0
	UArrowComponent* Vel_Arrow_Y; // 0xac8
	UArrowComponent* Vel_Arrow_X; // 0xad0
	UCameraComponent* Camera; // 0xad8
	UCrowSpringArmComponent* CrowSpringArm; // 0xae0
	UArrowComponent* Vel_Arrow; // 0xae8
};

struct UShaderPlatformQualitySettings {
	FMaterialQualityOverrides QualityOverrides[0x4]; // 0x28
};

struct UFoliageType_Actor {
	AActor* ActorClass; // 0x3a8
	bool bShouldAttachToBaseComponent; // 0x3b0
};

struct UPlayer {
	APlayerController* PlayerController; // 0x30
	int32_t CurrentNetSpeed; // 0x38
	int32_t ConfiguredInternetSpeed; // 0x3c
	int32_t ConfiguredLanSpeed; // 0x40
};

struct UPaperFlipbook {
	float FramesPerSecond; // 0x28
	TArray<FPaperFlipbookKeyFrame> KeyFrames; // 0x30
	UMaterialInterface* DefaultMaterial; // 0x40
	EFlipbookCollisionMode CollisionSource; // 0x48
};

struct UDatasmithImportOptions {
	EDatasmithImportSearchPackagePolicy SearchPackagePolicy; // 0x28
	EDatasmithImportAssetConflictPolicy MaterialConflictPolicy; // 0x29
	EDatasmithImportAssetConflictPolicy TextureConflictPolicy; // 0x2a
	EDatasmithImportActorPolicy StaticMeshActorImportPolicy; // 0x2b
	EDatasmithImportActorPolicy LightImportPolicy; // 0x2c
	EDatasmithImportActorPolicy CameraImportPolicy; // 0x2d
	EDatasmithImportActorPolicy OtherActorImportPolicy; // 0x2e
	EDatasmithImportMaterialQuality MaterialQuality; // 0x2f
	FDatasmithImportBaseOptions BaseOptions; // 0x34
	FDatasmithReimportOptions ReimportOptions; // 0x48
	FString Filename; // 0x50
	FString FilePath; // 0x60
};

struct ACharacter {
	USkeletalMeshComponent* Mesh; // 0x280
	UCharacterMovementComponent* CharacterMovement; // 0x288
	UCapsuleComponent* CapsuleComponent; // 0x290
	FBasedMovementInfo BasedMovement; // 0x298
	FBasedMovementInfo ReplicatedBasedMovement; // 0x2c8
	float AnimRootMotionTranslationScale; // 0x2f8
	FVector BaseTranslationOffset; // 0x2fc
	FQuat BaseRotationOffset; // 0x310
	float ReplicatedServerLastTransformUpdateTimeStamp; // 0x320
	float ReplayLastTransformUpdateTimeStamp; // 0x324
	char ReplicatedMovementMode; // 0x328
	bool bInBaseReplication; // 0x329
	float CrouchedEyeHeight; // 0x32c
	char bIsCrouched : 1; // 0x330
	char bProxyIsJumpForceApplied : 1; // 0x330
	char bPressedJump : 1; // 0x330
	char bClientUpdating : 1; // 0x330
	char bClientWasFalling : 1; // 0x330
	char bClientResimulateRootMotion : 1; // 0x330
	char bClientResimulateRootMotionSources : 1; // 0x330
	char bSimGravityDisabled : 1; // 0x330
	char bClientCheckEncroachmentOnNetUpdate : 1; // 0x331
	char bServerMoveIgnoreRootMotion : 1; // 0x331
	char bWasJumping : 1; // 0x331
	float JumpKeyHoldTime; // 0x334
	float JumpForceTimeRemaining; // 0x338
	float ProxyJumpForceStartedTime; // 0x33c
	float JumpMaxHoldTime; // 0x340
	int32_t JumpMaxCount; // 0x344
	int32_t JumpCurrentCount; // 0x348
	int32_t JumpCurrentCountPreJump; // 0x34c
	FMulticastInlineDelegate OnReachedJumpApex; // 0x358
	FMulticastInlineDelegate MovementModeChangedDelegate; // 0x378
	FMulticastInlineDelegate OnCharacterMovementUpdated; // 0x388
	FRootMotionSourceGroup SavedRootMotion; // 0x398
	FRootMotionMovementParams ClientRootMotionParams; // 0x3d0
	TArray<FSimulatedRootMotionReplicatedMove> RootMotionRepMoves; // 0x410
	FRepRootMotionMontage RepRootMotion; // 0x420
};

struct ACrowLobbyBinderSwitchActor {
	ELobbySceneMode SceneMode; // 0x220
	ECrowSampleCharacterCount CharacterCount; // 0x224
	FCrowSampleCharacterInfo SampleCharacterInfo; // 0x228
	FCrowSampleWeaponInfo LobbyWeaponInfo_Primary; // 0x240
	FCrowSampleWeaponInfo LobbyWeaponInfo_Secondary; // 0x258
	FCrowSampleWeaponInfo LobbyWeaponInfo_Melee; // 0x270
	FCrowSampleWeaponInfo LobbyWeaponInfo_Throw1; // 0x288
	FCrowSampleWeaponInfo LobbyWeaponInfo_Throw2; // 0x2a0
	FCrowSampleWeaponInfo SampleWeaponInfo; // 0x2b8
	USceneComponent* SwitchRoot; // 0x2d0
	UStaticMeshComponent* SphereMesh; // 0x2d8
	int32_t FrameCount; // 0x2e0
	APlayerController* InputPlayerController; // 0x2e8
	TMap<char, ACrowLobbyCharacterPawn*> MainCharacters; // 0x2f0
	TMap<char, ACrowWeaponLobby*> MainCharacterWeapons; // 0x340
	ACrowLobbyCharacterPawn* CustomCharacterPawn; // 0x390
	ACrowWeaponLobby* CustomCharacterWeapon; // 0x398
	ACrowWeaponLobby* LobbyWeapon; // 0x3a0
	TArray<ACrowWeaponLobby*> LobbySampleWeapons; // 0x3a8
};

struct UInterpToMovementComponent {
	float Duration; // 0xf0
	char bPauseOnImpact : 1; // 0xf4
	bool bSweep; // 0xf8
	ETeleportType TeleportType; // 0xf9
	EInterpToBehaviourType BehaviourType; // 0xfa
	bool bCheckIfStillInWorld; // 0xfb
	char bForceSubStepping : 1; // 0xfc
	FMulticastInlineDelegate OnInterpToReverse; // 0x100
	FMulticastInlineDelegate OnInterpToStop; // 0x110
	FMulticastInlineDelegate OnWaitBeginDelegate; // 0x120
	FMulticastInlineDelegate OnWaitEndDelegate; // 0x130
	FMulticastInlineDelegate OnResetDelegate; // 0x140
	float MaxSimulationTimeStep; // 0x150
	int32_t MaxSimulationIterations; // 0x154
	TArray<FInterpControlPoint> ControlPoints; // 0x158
};

struct UCrowVehicleCrosshairAbramCannon {
	UImage* IMG_Crosshair_Gauge_Base; // 0x428
	UImage* IMG_Crosshair_Gauge; // 0x430
	UTextBlock* AmmoTypeTextBlock; // 0x438
	UMaterialInstanceDynamic* ImgCrosshairGuageMaterial; // 0x440
	UCrowWeaponInfoWidget* WeaponInfoWidget; // 0x448
};

struct UMaterialExpressionRuntimeVirtualTextureOutput {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Specular; // 0x54
	FExpressionInput Roughness; // 0x68
	FExpressionInput Normal; // 0x7c
	FExpressionInput WorldHeight; // 0x90
	FExpressionInput Opacity; // 0xa4
	FExpressionInput Mask; // 0xb8
};

struct UBTTask_Wait {
	float WaitTime; // 0x70
	float RandomDeviation; // 0x74
};

struct UBTTask_GameplayTaskBase {
	char bWaitForGameplayTask : 1; // 0x70
};

struct UHudSettings {
	char bShowHUD : 1; // 0x28
	TArray<FName> DebugDisplay; // 0x30
};

struct UCrowWorldMapIconPing {
	bool VisibleWorldMap; // 0x1b0
	bool VisibleMiniMap; // 0x1b1
	bool VisibleRespawnMap; // 0x1b2
	ACrowPingBase* TargetPing; // 0x1b8
};

struct UDialogueVoice {
	EGrammaticalGender Gender; // 0x28
	EGrammaticalNumber Plurality; // 0x29
	FGuid LocalizationGUID; // 0x2c
};

struct UAnimSingleNodeInstance {
	UAnimationAsset* CurrentAsset; // 0x2b8
	FDelegate PostEvaluateAnimEvent; // 0x2c0
};

struct UCrowCustomizeEmotionRadialWidget {
	UCrowRadialMenuButtonWidget* WB_Customize_EmotionRadialMenu_5Button_1; // 0x3d0
	UCrowRadialMenuButtonWidget* WB_Customize_EmotionRadialMenu_5Button_2; // 0x3d8
	UCrowRadialMenuButtonWidget* WB_Customize_EmotionRadialMenu_5Button_3; // 0x3e0
	UCrowRadialMenuButtonWidget* WB_Customize_EmotionRadialMenu_5Button_4; // 0x3e8
	UCrowRadialMenuButtonWidget* WB_Customize_EmotionRadialMenu_5Button_5; // 0x3f0
	UImage* IMG_CircleSelect; // 0x3f8
	UCanvasPanel* CP_MouseTip; // 0x400
	UCanvasPanel* CP_HoverIcon; // 0x408
	ECrowCustomizeEmotionRadialState State; // 0x410
	UWidgetAnimation* RegistAnimation; // 0x418
};

struct UCrowVehicleHUDBase {
	ACrowVehiclePawn* VehiclePawn; // 0x348
	USizeBox* SB_Vehicle_Croshair; // 0x350
	USizeBox* SB_Buttom; // 0x358
	UCanvasPanel* CP_HUD_Vehicle; // 0x360
	UUserWidget* WB_LockOnAlert; // 0x368
	UCrowWeaponCrosshairBase* crosshairWidget; // 0x370
	UCrowWeaponCrosshairBase* SpecialCrosshairWidget; // 0x378
	UAkAudioEvent* LockOnStartEvent; // 0x380
	int32_t LockOnEventID; // 0x388
};

struct AUPSGroupMemberMovementPoint {
	UBillboardComponent* BillboardComponent; // 0x220
};

struct UCrowReplayListItemWidget {
	UCrowToggleButton* BT_ListSlot; // 0x348
	UImage* IMG_Lock; // 0x350
	UTextBlock* TB_Date; // 0x358
	UTextBlock* TB_MapMode; // 0x360
	UTextBlock* TB_TotalTime; // 0x368
	UTextBlock* TB_FileSize; // 0x370
	UTextBlock* TB_Version; // 0x378
	UTextBlock* TB_Usable; // 0x380
	UImage* IMG_Deselect; // 0x388
	UImage* IMG_Lock_Select; // 0x390
	UTextBlock* TB_Date_Select; // 0x398
	UTextBlock* TB_MapMode_Select; // 0x3a0
	UTextBlock* TB_TotalTime_Select; // 0x3a8
	UTextBlock* TB_FileSize_Select; // 0x3b0
	UTextBlock* TB_Version_Select; // 0x3b8
	UTextBlock* TB_Usable_Select; // 0x3c0
	UCrowReplayWidget* RootWidget; // 0x3c8
	UCrowReplayInfo* Info; // 0x3d0
};

struct UInterpTrackInstFloatMaterialParam {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<float> ResetFloats; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackFloatMaterialParam* InstancedTrack; // 0x58
};

struct UAvfMediaSettings {
	bool NativeAudioOut; // 0x28
};

struct UCrowReplayInfo {
	FString ReplayName; // 0x28
	FString FriendlyName; // 0x38
	FDateTime Timestamp; // 0x48
	int32_t LengthInMS; // 0x50
	int32_t SizeOfByte; // 0x54
	int32_t Version; // 0x58
	bool bLock; // 0x5c
	int32_t MapIndex; // 0x60
	uint64_t ServerKey; // 0x68
	FString MyPlayerName; // 0x70
	TArray<FString> MySquadList; // 0x80
	TArray<FTimespan> CheckPointList; // 0x90
};

struct UCrowSettingsDefaultConfig {
	TArray<FKeySlotCategoryInfo> KeySlotCategoryInfos; // 0x28
	TArray<FKeySlotCategoryInfo> KeySlotUICategoryInfos; // 0x38
	TArray<FActionKeySlot> ActionKeySlots; // 0x48
	TArray<FAxisKeySlot> AxisKeySlots; // 0x58
	TArray<FSettingItem> SettingItems; // 0x68
	TArray<FKey> FixedKeys; // 0x78
	TArray<FOptionExplanation> OptionExplanations; // 0x88
	TArray<FAxisNameToBehaviourName> AxisToBehaviourNames; // 0x98
	TArray<FIntPoint> AllowedResolutions; // 0xa8
};

struct UAISenseConfig_Hearing {
	UAISense_Hearing* Implementation; // 0x48
	float HearingRange; // 0x50
	float LoSHearingRange; // 0x54
	char bUseLoSHearing : 1; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
};

struct UButtonSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UCrowGRACWidget {
	FName HideAnimationName; // 0x358
	float DisplayTime; // 0x360
};

struct UOceanGenerator {
	TArray<UOceanBoxCollisionComponent*> CollisionBoxes; // 0x28
	TArray<UOceanCollisionComponent*> CollisionHullSets; // 0x38
};

struct UBTDecorator_BlueprintBase {
	AAIController* AIOwner; // 0x68
	AActor* ActorOwner; // 0x70
	TArray<FName> ObservedKeyNames; // 0x78
	char bShowPropertyDetails : 1; // 0x98
	char bCheckConditionOnlyBlackBoardChanges : 1; // 0x98
	char bIsObservingBB : 1; // 0x98
};

struct AUPSGroupMovementAIController {
	FMulticastInlineDelegate OnAIStartMovementToLocationDelegate; // 0x328
	FMulticastInlineDelegate OnAIStartMovementToActorDelegate; // 0x338
};

struct UCrowWeaponManagerComponent {
	ACrowCharacterPawn* CharacterOwner; // 0xb0
	UCrowGameInvenComponent* GameInventory; // 0xb8
	bool IsPrewWeaponAiming; // 0xc0
	ACrowGameHUDBase* CrowInGameHUD; // 0xc8
};

struct UNavAreaMeta_SwitchByAgent {
	UNavArea* Agent0Area; // 0x48
	UNavArea* Agent1Area; // 0x50
	UNavArea* Agent2Area; // 0x58
	UNavArea* Agent3Area; // 0x60
	UNavArea* Agent4Area; // 0x68
	UNavArea* Agent5Area; // 0x70
	UNavArea* Agent6Area; // 0x78
	UNavArea* Agent7Area; // 0x80
	UNavArea* Agent8Area; // 0x88
	UNavArea* Agent9Area; // 0x90
	UNavArea* Agent10Area; // 0x98
	UNavArea* Agent11Area; // 0xa0
	UNavArea* Agent12Area; // 0xa8
	UNavArea* Agent13Area; // 0xb0
	UNavArea* Agent14Area; // 0xb8
	UNavArea* Agent15Area; // 0xc0
};

struct UMaterialExpressionMaterialFunctionCall {
	UMaterialFunctionInterface* MaterialFunction; // 0x40
	FMaterialParameterInfo FunctionParameterInfo; // 0x48
};

struct ADefaultPawn {
	float BaseTurnRate; // 0x280
	float BaseLookUpRate; // 0x284
	UPawnMovementComponent* MovementComponent; // 0x288
	USphereComponent* CollisionComponent; // 0x290
	UStaticMeshComponent* MeshComponent; // 0x298
	char bAddDefaultMovementBindings : 1; // 0x2a0
};

struct UArrowComponent {
	FColor ArrowColor; // 0x440
	float ArrowSize; // 0x444
	float ArrowLength; // 0x448
	float ScreenSize; // 0x44c
	char bIsScreenSizeScaled : 1; // 0x450
	char bTreatAsASprite : 1; // 0x450
};

struct UCrowBoatsConfigEngine {
	bool Debug; // 0x28
	FName BodySocketName; // 0x2c
	float EngineSizeRadius; // 0x34
	float MinWaterDepthForEngine; // 0x38
	float SpeedMaxKmPH; // 0x3c
	float SpeedReverseMaxKmPH; // 0x40
	float SpeedIdleKmPH; // 0x44
	float BrakeStrength; // 0x48
	float AccelerationTime; // 0x4c
	float SteeringMultiply; // 0x50
	float SteeringRatioMax; // 0x54
	float SteeringSpeedMax; // 0x58
	FCrowVehicleInputSetting AccelerationInputSetting; // 0x5c
	FCrowVehicleInputSetting SteeringInputSetting; // 0x64
};

struct UMovieSceneSpawnTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
	FGuid ObjectGuid; // 0x88
};

struct UNavArea {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UPoseWatch {
	UEdGraphNode* Node; // 0x28
	FColor PoseWatchColour; // 0x30
};

struct UWB_EnemyWatching_EnemyIndicator_C {
	UImage* IMG_LocateArrow; // 0x370
};

struct UAndroidPermissionCallbackProxy {
	FMulticastInlineDelegate OnPermissionsGrantedDynamicDelegate; // 0x28
};

struct UParticleModuleBeamSource {
	Beam2SourceTargetMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	char bSourceAbsolute : 1; // 0x3c
	FRawDistributionVector Source; // 0x40
	char bLockSource : 1; // 0x88
	Beam2SourceTargetTangentMethod SourceTangentMethod; // 0x8c
	FRawDistributionVector SourceTangent; // 0x90
	char bLockSourceTangent : 1; // 0xd8
	FRawDistributionFloat SourceStrength; // 0xe0
	char bLockSourceStength : 1; // 0x110
};

struct UDatasmithDecalComponentTemplate {
	int32_t SortOrder; // 0x30
	FVector DecalSize; // 0x34
	UMaterialInterface* Material; // 0x40
};

struct AMagicLeapSharedWorldGameState {
	FMagicLeapSharedWorldSharedData SharedWorldData; // 0x290
	FMagicLeapSharedWorldAlignmentTransforms AlignmentTransforms; // 0x2a0
	FMulticastInlineDelegate OnSharedWorldDataUpdated; // 0x2b0
	FMulticastInlineDelegate OnAlignmentTransformsUpdated; // 0x2c0
};

struct USourceEffectFilterPreset {
	FSourceEffectFilterSettings Settings; // 0xb0
};

struct APaperGroupedSpriteActor {
	UPaperGroupedSpriteComponent* RenderComponent; // 0x220
};

struct UAkMusicSyncCallbackInfo {
	int32_t PlayingID; // 0x30
	FAkSegmentInfo SegmentInfo; // 0x34
	EAkCallbackType MusicSyncType; // 0x58
	FString UserCueName; // 0x60
};

struct UInputAxisDelegateBinding {
	TArray<FBlueprintInputAxisDelegateBinding> InputAxisDelegateBindings; // 0x28
};

struct UNiagaraSimulationStageBase {
	UNiagaraScript* Script; // 0x28
	FName SimulationStageName; // 0x30
	char bEnabled : 1; // 0x38
};

struct UMovieSceneObjectPropertySection {
	FMovieSceneObjectPathChannel ObjectChannel; // 0xe8
};

struct UMaterialExpressionSquareRoot {
	FExpressionInput Input; // 0x40
};

struct UAudioAnalyzerNRT {
	USoundWave* Sound; // 0x28
	float DurationInSeconds; // 0x30
};

struct UCrowHUDWeaponUnlockWidget {
	UTextBlock* TB_Level; // 0x348
	UTextBlock* TB_LevelUpMsg; // 0x350
	UTextBlock* TB_UnLockMsg; // 0x358
	UImage* IMG_Icon; // 0x360
	UWidgetAnimation* AniShowWeaponLevelUp; // 0x368
	UWidgetAnimation* AniShowWeaponUnlock; // 0x370
	UWidgetAnimation* AniHide; // 0x378
};

struct USynthKnob {
	float Value; // 0x108
	float StepSize; // 0x10c
	float MouseSpeed; // 0x110
	float MouseFineTuneSpeed; // 0x114
	char ShowTooltipInfo : 1; // 0x118
	FText ParameterName; // 0x120
	FText ParameterUnits; // 0x138
	FDelegate ValueDelegate; // 0x150
	FSynthKnobStyle WidgetStyle; // 0x160
	bool Locked; // 0x398
	bool IsFocusable; // 0x399
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x3a0
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x3b0
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x3c0
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x3d0
	FMulticastInlineDelegate OnValueChanged; // 0x3e0
};

struct UCrowVehicleHUDMh6 {
	UCanvasPanel* CP_FPView; // 0x390
	UCrowVehicleWidgetLevel* WB_Vehicle_Level; // 0x398
	TArray<UImage*> CrosshairImages; // 0x3a0
};

struct UNavLinkComponent {
	TArray<FNavigationLink> Links; // 0x448
};

struct UCrowdFollowingComponent {
	FVector CrowdAgentMoveDirection; // 0x268
};

struct UNiagaraSettings {
	FSoftObjectPath DefaultEffectType; // 0x38
	TArray<FText> QualityLevels; // 0x50
	TMap<FString, FText> ComponentRendererWarningsPerClass; // 0x60
	ETextureRenderTargetFormat DefaultRenderTargetFormat; // 0xb0
	ENiagaraGpuBufferFormat DefaultGridFormat; // 0xb1
	UNiagaraEffectType* DefaultEffectTypePtr; // 0xb8
};

struct UInAppPurchaseCallbackProxy2 {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UParticleModuleTrailSource {
	ETrail2SourceMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	FRawDistributionFloat SourceStrength; // 0x40
	char bLockSourceStength : 1; // 0x70
	int32_t SourceOffsetCount; // 0x74
	TArray<FVector> SourceOffsetDefaults; // 0x78
	EParticleSourceSelectionMethod SelectionMethod; // 0x88
	char bInheritRotation : 1; // 0x8c
};

struct ULeaderboardFlushCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UBTTask_RotateToFaceBBEntry {
	float Precision; // 0x98
};

struct UCrowBinderTargetBase {
	APawn* RootPawn; // 0x28
	UCrowBinderActorComponent* OwnerBinder; // 0x30
	int32_t BindingFlags; // 0x38
};

struct UCrowScoreInfoConquestUSItem {
	UImage* IMG_BackGround; // 0x348
	UImage* IMG_Class; // 0x350
	UImage* IMG_IsLocalPlayer; // 0x358
	UTextBlock* TB_NickName; // 0x360
	UTextBlock* TB_Score; // 0x368
	UTextBlock* TB_CurrentRanking; // 0x370
	UTextBlock* TB_EnemyDying; // 0x378
	UTextBlock* TB_Kill; // 0x380
	UTextBlock* TB_Death; // 0x388
	UTextBlock* TB_Latency; // 0x390
	UCanvasPanel* CP_Squad; // 0x398
	UImage* IMG_SquadColor; // 0x3a0
	UTextBlock* TB_SquadIndex; // 0x3a8
	UImage* IMG_SquadLeader; // 0x3b0
	FLinearColor LocalPlayerColor; // 0x3b8
	FLinearColor EvenCurrentRankingBackgroundColor; // 0x3c8
	FLinearColor OddCurrentRankingBackgroundColor; // 0x3d8
};

struct USceneCaptureComponent2D {
	ECameraProjectionMode ProjectionType; // 0x2b0
	float FOVAngle; // 0x2b4
	float OrthoWidth; // 0x2b8
	UTextureRenderTarget2D* TextureTarget; // 0x2c0
	ESceneCaptureCompositeMode CompositeMode; // 0x2c8
	FPostProcessSettings PostProcessSettings; // 0x2d0
	float PostProcessBlendWeight; // 0x820
	char bOverride_CustomNearClippingPlane : 1; // 0x824
	float CustomNearClippingPlane; // 0x828
	bool bUseCustomProjectionMatrix; // 0x82c
	FMatrix CustomProjectionMatrix; // 0x830
	bool bEnableClipPlane; // 0x870
	FVector ClipPlaneBase; // 0x874
	FVector ClipPlaneNormal; // 0x880
	char bCameraCutThisFrame : 1; // 0x88c
	char bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1; // 0x88c
	bool bDisableFlipCopyGLES; // 0x890
};

struct UCrowVehicleWidgetSeat {
	TArray<FCrowVehicleSeatCell> SeatCellInfos; // 0x358
	TArray<FCrowVehicleWidgetSeatIcon> SeatIcons; // 0x368
	TArray<UImage*> SeatIconImageList; // 0x378
	TArray<UCrowSeatSquadIconWidget*> SeatIconSquadWidgetList; // 0x388
};

struct UUPSAITask_AIRotateToTarget {
	FMulticastInlineDelegate OnRotationTaskFinished; // 0x68
	AAIController* AIC; // 0x78
	ACharacter* Character; // 0x80
	AActor* TargetActor; // 0x88
};

struct ANiagaraActor {
	UNiagaraComponent* NiagaraComponent; // 0x220
	char bDestroyOnSystemFinish : 1; // 0x228
};

struct UNiagaraPreviewAxis_InterpParamVector4 {
	FVector4 Min; // 0x40
	FVector4 Max; // 0x50
};

struct ACLSCharacter {
	bool IsPressSprintKey; // 0x4c8
	AActor* CurrentLadder; // 0x4d0
	char bIsProned : 1; // 0x4d8
	char bIsSprinted : 1; // 0x4d8
	char bIsWalked : 1; // 0x4d8
	char bIsLookedFocus : 1; // 0x4d8
	char bRightShoulder : 1; // 0x4d8
	char bIsLookAround : 1; // 0x4d8
	char bUnresolvedReplication_IsProned : 1; // 0x4d8
	char bUnresolvedReplication_IsCrouched : 1; // 0x4d8
	char bUnresolvedReplication_IsSprint : 1; // 0x4d9
	char bUnresolvedReplication_IsWalk : 1; // 0x4d9
	char bUnresolvedReplication_IsLookFocus : 1; // 0x4d9
	float LookUpDownRate; // 0x4dc
	float LookLeftRightRate; // 0x4e0
	float LookDeltaSeconds; // 0x4e4
	float StandToCrouchAnimRate; // 0x4e8
	float StandToProneAnimRate; // 0x4ec
	float CrouchToStandAnimRate; // 0x4f0
	float CrouchToProneAnimRate; // 0x4f4
	float ProneToStandAnimRate; // 0x4f8
	float ProneToCrouchAnimRate; // 0x4fc
	char bUseProneLimitedArea : 1; // 0x500
	UCLSCharacterMovement* CachedCharacterMovement; // 0x508
	ECLSRotationMode AdjustClientRotationMode; // 0x510
	UTimelineComponent* VaultTimeline; // 0x518
	UCurveFloat* VaultTimelineCurve; // 0x520
	ECLSRotationMode RotationMode; // 0x528
	ECLSViewMode DesiredViewMode; // 0x529
	ECLSViewMode ViewMode; // 0x52a
	ECLSRotationMode DesiredRotationMode; // 0x52b
	ECLSMovementMode CurrentMovementMode; // 0x52c
	ECLSMovementMode PrevMovementMode; // 0x52d
	ECLSMovementAction MovementAction; // 0x52e
	ECLSWeaponAction WeaponAction; // 0x52f
	ECLSCommonAction CommonAction; // 0x530
	ECLSBattleStance BattleStance; // 0x531
	ECLSOverlayState OverlayState; // 0x532
	ECLSPeekState DesiredPeekState; // 0x533
	ECLSPeekState ActualPeekState; // 0x534
	bool bDesiredFiringState; // 0x535
	bool bActualFiringState; // 0x536
	ECLSLadderState LadderState; // 0x537
	FRotator LookingRotation; // 0x538
	FRotator LookAroundRotation; // 0x544
	FVector Acceleration; // 0x550
	bool bIsMoving; // 0x55c
	bool bHasMovementInput; // 0x55d
	FRotator LastVelocityRotation; // 0x560
	FRotator LastMovementInputRotation; // 0x56c
	float Speed; // 0x578
	float MovementInputAmount; // 0x57c
	float AimYawRate; // 0x580
	FVector SubRootOffset; // 0x584
	float CurrentSlopeAngle; // 0x590
	bool bUseArmLOverwrite; // 0x594
	FCLSCameraParameters CameraParameters; // 0x595
	FDataTableRowHandle MovementModel; // 0x598
	FCLSMovementSettingsData MovementData; // 0x5a8
	FRotator SmoothTargetRotation; // 0x6c8
	FRotator TurnTargetRotation; // 0x6d4
	FRotator InAirRotation; // 0x6e0
	float YawOffset; // 0x6ec
	bool bRotateOnChangingProne; // 0x6f0
	bool bPendingGroundRotate; // 0x6f1
	bool bIsKeepWalking; // 0x6f2
	FCLSVaultParams VaultParams; // 0x6f8
	FCLSComponentTransform VaultLedgeLS; // 0x720
	FTransform VaultTarget; // 0x840
	FTransform VaultActualStartOffset; // 0x870
	FTransform VaultAnimatedStartOffset; // 0x8a0
	FCLSVaultTraceSettings GroundedTraceSettings; // 0x8d0
	FCLSVaultTraceSettings FallingTraceSettings; // 0x8ec
	FVector RagdollLocation; // 0x908
	FVector RagdollVelocity; // 0x914
	bool bRagdollOnGround; // 0x920
	bool bRagdollFaceUp; // 0x921
	FVector PreviousVelocity; // 0x924
	float PreviousAimYaw; // 0x930
	float PreviousSlopeAngle; // 0x934
	FCLSCharacterBattleStanceTime BattleStanceTimeSetting; // 0x938
	UCurveVector* Vault1MCurve; // 0x948
	UCurveVector* Vault2MCurve; // 0x950
	FCLSVaultAsset Vault_2M_Default; // 0x958
	FCLSVaultAsset Vault_1M_Default; // 0x998
	FCLSVaultAsset Vault_1M_RH; // 0x9d8
	FCLSVaultAsset Vault_1M_LH; // 0xa18
	FCLSVaultAsset Vault_1M_2H; // 0xa58
	FCLSVaultAsset Vault_1M_Box; // 0xa98
	FCLSVaultAsset Vault_Low70; // 0xad8
	FCLSVaultAsset Vault_Low70_Melee; // 0xb18
	FCLSVaultAsset JumpOver_Low70; // 0xb58
	FCLSVaultAsset JumpOver_Low70_Melee; // 0xb98
	FCLSVaultAsset JumpOver_1M; // 0xbd8
	FCLSVaultAsset JumpOver_1M_Under; // 0xc18
	FCLSVaultAsset JumpOver_1M_Damage; // 0xc58
	FCLSVaultAsset JumpOver_1M_Dying; // 0xc98
	FCLSVaultAsset JumpOver_1M_Dead; // 0xcd8
	FCLSVaultAsset JumpOver_2M; // 0xd18
	FCLSVaultAsset JumpOver2M_Damage; // 0xd58
	FCLSVaultAsset JumpOver_2M_Under; // 0xd98
	FCLSVaultAsset JumpOver_2M_Dying; // 0xdd8
	FCLSVaultAsset JumpOver_2M_Dead; // 0xe18
	FCLSVaultAsset JumpOver_Window; // 0xe58
	FCLSVaultAsset JumpOver_Window_Under; // 0xe98
	FVector NotMovingPivotOffset; // 0xed8
	FVector WalkingPivotOffset; // 0xee4
	FVector RunningPivotOffset; // 0xef0
	FVector SprintingPivotOffset; // 0xefc
	FVector CrouchSprintingPivotOffset; // 0xf08
	float CrouchPivotOffsetZRatio; // 0xf14
	float PronePivotOffsetZRatio; // 0xf18
	FVector AddPronePivotOffset; // 0xf1c
	FVector WalkingPivotLerpSpeed; // 0xf28
	FVector RunningPivotLerpSpeed; // 0xf34
	FVector SprintingPivotLerpSpeed; // 0xf40
	FVector CrouchSprintingPivotLerpSpeed; // 0xf4c
	float WalkingAddFOV; // 0xf58
	float RunningAddFOV; // 0xf5c
	float SprintingAddFOV; // 0xf60
	float CrouchSprintingAddFOV; // 0xf64
	float WalkingAddFOVLerpSpeed; // 0xf68
	float RunningAddFOVLerpSpeed; // 0xf6c
	float SprintingAddFOVLerpSpeed; // 0xf70
	float CrouchSprintingAddFOVLerpSpeed; // 0xf74
	FVector DeadPivotOffset; // 0xf78
	float ShoulderViewChangedInterpolationSpeed; // 0xf84
	FVector FPStandingOffset; // 0xf88
	FVector FPCrouchingOffset; // 0xf94
	FVector PrePivot; // 0xfa0
	bool bShoulderViewChanged; // 0xfac
	float PrevPivotY; // 0xfb0
	FVector CurrentAdditionalFPCameraOffset; // 0xfb4
	bool IsJumping; // 0x10cc
	bool IsJumpOverVault; // 0x10cd
	ECLSVaultType CurrVaultType; // 0x10ce
	bool IsPlayingVault; // 0x10cf
	FVector PrevVaultPos; // 0x10d0
	float StartVaultPosition; // 0x10dc
	float PrevZValue; // 0x10e0
};

struct UMaterialExpressionSceneColor {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput OffsetFraction; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct UUPSEnemyAction {
	FMulticastInlineDelegate OnActionFinishedDelegate; // 0x30
	ACharacter* Character; // 0x40
	TArray<UUPSEnemyActionScript*> EnemyActionScripts; // 0x50
	TArray<UUPSActionCondition*> ActionConditions; // 0x60
};

struct UMaterialExpressionAtmosphericFogColor {
	FExpressionInput WorldPosition; // 0x40
};

struct UCrowWorldLightProbeVolume {
	FVector LightForward; // 0x460
	FRotator LightRotation; // 0x46c
	FCrowWorldLightProbeSetting LightProbeSetting; // 0x478
	FCrowWorldLightProbeVolumeSetting LightProbeVolumeSetting; // 0x4c4
	TArray<FCrowWorldLightGroup> LightGroups; // 0x4e8
	TArray<UCrowWorldLightProbe*> LightProbes; // 0x4f8
};

struct UAkMacInitializationSettings {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkAdvancedInitializationSettingsWithMultiCoreRendering AdvancedSettings; // 0xb8
};

struct UCrowConquestMeteorShowerPoint {
	UBillboardComponent* Billboard; // 0x1f8
	float IconScale; // 0x200
};

struct UOverlaySlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UDeviceProfileManager {
	TArray<UObject*> Profiles; // 0x28
};

struct UUMGSequencePlayer {
	UWidgetAnimation* Animation; // 0x410
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x420
};

struct UInterpTrackInstAkAudioRTPC {
	float LastUpdatePosition; // 0x28
};

struct UCrowLobbyProfileMercenaryWidget {
	UCrowDropDownWidget* Dropdown_All; // 0x348
	UCrowDropDownWidget* Dropdown_Time; // 0x350
	UTextBlock* TB_Rank; // 0x358
	UTextBlock* TB_Grade; // 0x360
	UTextBlock* TB_Kill; // 0x368
	UTextBlock* TB_Assist; // 0x370
	UTextBlock* TB_Death; // 0x378
	UTextBlock* TB_Faint; // 0x380
	UTextBlock* TB_TotalScore; // 0x388
	UTextBlock* TB_AverageScore; // 0x390
	UTextBlock* TB_WinLose; // 0x398
	UTextBlock* TB_PlayTime; // 0x3a0
};

struct UCrowCharacterAliveIconWidget {
	UCanvasPanel* CP_DisconnectIcon; // 0x3c8
	UImage* IMG_Icon; // 0x3d0
	UTextBlock* TB_SquadNum; // 0x3d8
	ACrowPlayerStateBase* LocalPlayerState; // 0x3e0
	ACrowPlayerStateBase* TargetPlayerState; // 0x3e8
	ACrowCharacterPawn* CharacterPawn; // 0x3f0
};

struct UMovieSceneFolder {
	FName FolderName; // 0x28
	TArray<UMovieSceneFolder*> ChildFolders; // 0x30
	TArray<UMovieSceneTrack*> ChildMasterTracks; // 0x40
	TArray<FString> ChildObjectBindingStrings; // 0x50
};

struct UDrawPolygonToolStandardProperties {
	EDrawPolygonDrawMode PolygonType; // 0x60
	EDrawPolygonOutputMode OutputMode; // 0x61
	float FeatureSizeRatio; // 0x64
	float ExtrudeHeight; // 0x68
	int32_t Steps; // 0x6c
	bool bAllowSelfIntersections; // 0x70
	bool bShowGizmo; // 0x71
};

struct UCrowVehicleFSM {
	FName VehicleName; // 0xb0
	ACrowVehiclePawn* VehiclePawn; // 0xb8
	ECrowVehicleState CurrentStateID; // 0xc0
	UCrowVehicleStateBase* CurrentState; // 0xc8
	TMap<ECrowVehicleState, UCrowVehicleStateBase*> StateMap; // 0xd0
	TMap<ECrowVehicleTask, UCrowVehicleTaskBase*> TaskMap; // 0x120
};

struct UCrowRotorTaskBase {
	UCrowRotorFSM* RotorFSM; // 0x38
};

struct UAISense {
	float DefaultExpirationAge; // 0x28
	EAISenseNotifyType NotifyType; // 0x2c
	char bWantsNewPawnNotification : 1; // 0x30
	char bAutoRegisterAllPawnsAsSources : 1; // 0x30
	UAIPerceptionSystem* PerceptionSystemInstance; // 0x38
};

struct ACrowWeaponMelee {
	FVector SavePos; // 0x1eb8
	FVector CurrPos; // 0x1ec4
	float SaveTime; // 0x1ed0
	float AddDeltaTime; // 0x1ed4
	TArray<FVector> TimeStack; // 0x1ed8
	bool HasCheck; // 0x1ee8
	FCrowWeaponTableRow OverrideWeaponTable; // 0x1ef0
	FCrowAmmoTableRow OverrideAmmoTable; // 0x3110
	FTimerHandle ThrowablePoseOnVehicleHandle; // 0x3338
};

struct ABP_SkydivingSkillPawn_C {
	UArrowComponent* Vel_Arrow_Z; // 0xac0
	UArrowComponent* Vel_Arrow_Y; // 0xac8
	UArrowComponent* Vel_Arrow_X; // 0xad0
	UCameraComponent* Camera; // 0xad8
	UCrowSpringArmComponent* CrowSpringArm; // 0xae0
	UArrowComponent* Vel_Arrow; // 0xae8
};

struct UMaterialExpressionSign {
	FExpressionInput Input; // 0x40
};

struct UInterpTrackInstVectorProp {
	FVector ResetVector; // 0x58
};

struct USceneComponent {
	TWeakObjectPtr<APhysicsVolume> PhysicsVolume; // 0xb8
	USceneComponent* AttachParent; // 0xc0
	FName AttachSocketName; // 0xc8
	TArray<USceneComponent*> AttachChildren; // 0xd0
	TArray<USceneComponent*> ClientAttachedChildren; // 0xe0
	FVector RelativeLocation; // 0x11c
	FRotator RelativeRotation; // 0x128
	FVector RelativeScale3D; // 0x134
	FVector ComponentVelocity; // 0x140
	char bComponentToWorldUpdated : 1; // 0x14c
	char bAbsoluteLocation : 1; // 0x14c
	char bAbsoluteRotation : 1; // 0x14c
	char bAbsoluteScale : 1; // 0x14c
	char bVisible : 1; // 0x14c
	char bShouldBeAttached : 1; // 0x14c
	char bShouldSnapLocationWhenAttached : 1; // 0x14c
	char bShouldSnapRotationWhenAttached : 1; // 0x14d
	char bShouldUpdatePhysicsVolume : 1; // 0x14d
	char bHiddenInGame : 1; // 0x14d
	char bBoundsChangeTriggersStreamingDataRebuild : 1; // 0x14d
	char bUseAttachParentBound : 1; // 0x14d
	EComponentMobility Mobility; // 0x14f
	EDetailMode DetailMode; // 0x150
	FMulticastSparseDelegate PhysicsVolumeChangedDelegate; // 0x151
};

struct UBTTask_RunBehavior {
	UBehaviorTree* BehaviorAsset; // 0x70
};

struct UUPSGroupMovementVisualizer {
	TMap<TWeakObjectPtr<AUPSMovementGroup>, bool> MovementGroups; // 0x38
};

struct ACrowDeathZoneVolume {
	float DefaultTimeToDieTimeSecond; // 0x258
	UUserWidget* DeathZoneWidgetClass; // 0x260
	APostProcessVolume* DeathZonePostProcessVolume; // 0x268
	UCrowDeathZoneWidget* DeathZoneWidget; // 0x270
	TArray<FCrowDeathZoneVolumeActor> EnterActors; // 0x278
};

struct URevolveBoundaryOperatorFactory {
	URevolveBoundaryTool* RevolveBoundaryTool; // 0x30
};

struct ULandscapeGrassType {
	TArray<FGrassVariety> GrassVarieties; // 0x28
	char bEnableDensityScaling : 1; // 0x38
	UStaticMesh* GrassMesh; // 0x40
	float GrassDensity; // 0x48
	float PlacementJitter; // 0x4c
	int32_t StartCullDistance; // 0x50
	int32_t EndCullDistance; // 0x54
	bool RandomRotation; // 0x58
	bool AlignToSurface; // 0x59
};

struct UBoxReflectionCaptureComponent {
	float BoxTransitionDistance; // 0x270
	UBoxComponent* PreviewInfluenceBox; // 0x278
	UBoxComponent* PreviewCaptureBox; // 0x280
};

struct UGarbageCollectionSettings {
	float TimeBetweenPurgingPendingKillObjects; // 0x38
	char FlushStreamingOnGC : 1; // 0x3c
	char AllowParallelGC : 1; // 0x3c
	char IncrementalBeginDestroyEnabled : 1; // 0x3c
	char MultithreadedDestructionEnabled : 1; // 0x3c
	char CreateGCClusters : 1; // 0x3c
	char AssetClusteringEnabled : 1; // 0x3c
	char ActorClusteringEnabled : 1; // 0x3c
	char BlueprintClusteringEnabled : 1; // 0x3c
	char UseDisregardForGCOnDedicatedServers : 1; // 0x3d
	int32_t MinGCClusterSize; // 0x40
	int32_t NumRetriesBeforeForcingGC; // 0x44
	int32_t MaxObjectsNotConsideredByGC; // 0x48
	int32_t SizeOfPermanentObjectPool; // 0x4c
	int32_t MaxObjectsInGame; // 0x50
	int32_t MaxObjectsInEditor; // 0x54
};

struct UCrowWeaponZoomDistWidget {
	UTextBlock* TB_Distance; // 0x370
};

struct UAnimNotify_PlayMontageNotify {
	FName NotifyName; // 0x38
};

struct UAnimNotify_PlayParticleEffect {
	UParticleSystem* PSTemplate; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct UPawnAction_Sequence {
	TArray<UPawnAction*> ActionSequence; // 0x98
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
	UPawnAction* RecentActionCopy; // 0xb0
};

struct USubmixEffectSubmixEQPreset {
	FSubmixEffectSubmixEQSettings Settings; // 0xa0
};

struct UDistributionFloatUniformCurve {
	FInterpCurveVector2D ConstantCurve; // 0x38
};

struct ARectLight {
	URectLightComponent* RectLightComponent; // 0x230
};

struct UDrawFrustumComponent {
	FColor FrustumColor; // 0x440
	float FrustumAngle; // 0x444
	float FrustumAspectRatio; // 0x448
	float FrustumStartDist; // 0x44c
	float FrustumEndDist; // 0x450
	UTexture* Texture; // 0x458
};

struct UCrowIndicatorViewInfoPing {
	UCrowPingIndicatorWidget* PingIndicatorWidget; // 0x198
};

struct ACrowPlayerStateSquadMatch {
	FCrowSquadBattleInfo SquadBattleInfo; // 0xb78
	uint32_t AssistCount; // 0xb80
	bool bIsReserveZombie; // 0xb84
	int32_t AttachedSpectatorCount; // 0xb88
	FCrowSquadMatchResultInfo SquadMatchResultInfo; // 0xb90
	ACrowMiningPointActor* OverlappedMiningPoint; // 0xbb0
	ACrowTargetTraceEffect* ChageZombieEffectComp; // 0xbb8
	TArray<FCrowSquadRewardInfo> RewardInfoArray; // 0xbc0
};

struct ACrowPlayerControllerReplay {
	UCrowWidgetBase* ReplayPlayerWidget; // 0xf20
	uint64_t CacheAttachedServerKey; // 0xf28
	char CacheTeamId; // 0xf30
};

struct UParticleModuleEventReceiverSpawn {
	FRawDistributionFloat SpawnCount; // 0x40
	char bUseParticleTime : 1; // 0x70
	char bUsePSysLocation : 1; // 0x70
	char bInheritVelocity : 1; // 0x70
	FRawDistributionVector InheritVelocityScale; // 0x78
	TArray<UPhysicalMaterial*> PhysicalMaterials; // 0xc0
	char bBanPhysicalMaterials : 1; // 0xd0
};

struct ACrowGameHUD_BombMission {
	UUserWidget* MainBombMissionWidgetClass; // 0x5f0
	UCrowInGameLoadoutWidget* InGameLoadoutWidgetClass; // 0x5f8
	UCrowInGameLoadoutPopupWidget* InGameLoadoutPopupWidgetClass; // 0x600
	UUserWidget* ObjectiveBombMissionWidgetClass; // 0x608
	UUserWidget* ResultScoreBombMissionWidgetClass; // 0x610
	UUserWidget* StartMatchWidgetClass; // 0x618
	UUserWidget* PositionChangeWidgetClass; // 0x620
	UCrowHUDBombMissionWidget* MainBombMissionWidget; // 0x628
	UCrowInGameLoadoutWidget* InGameLoadoutWidget; // 0x630
	UCrowInGameLoadoutPopupWidget* InGameLoadoutPopupWidget; // 0x638
	UCrowObjectiveBombMissionWidget* ObjectiveBombMissionWidget; // 0x640
	UCrowBombMissionScoreBoardWidget* BombMissionScoreBoardWidget; // 0x648
	UCrowResultScoreBombMissionWidget* ResultScoreBombMissionWidget; // 0x650
	UCrowBMStartMatchWidget* StartMatchWidget; // 0x658
	UCrowBMPositionChangeWidget* PositionChangeWidget; // 0x660
	char PrevTeamID; // 0x668
	char PrevAttackerTeamID; // 0x669
	float DelayedShowPositionChangeWidgetTimeSec; // 0x66c
	FTimerHandle ShowPositionChangeWidgetHandle; // 0x670
	FTimerHandle ShowMatchPointWidgetHandle; // 0x678
	FTimerHandle PlayCountdownTimerHandle; // 0x680
	bool bIsBlockScreen; // 0x688
};

struct UCrowVehicleCrosshairTankSmoke {
	URichTextBlock* RTB_Smoke_Ready; // 0x428
	URichTextBlock* RTB_Smoke_Timer; // 0x430
	FString TimerTextKey; // 0x438
	FString ReadyTextKey; // 0x448
	UCrowStatusWidget* StatusWidget; // 0x458
};

struct UMaterialExpressionSkyAtmosphereLightIlluminance {
	int32_t LightIndex; // 0x40
	FExpressionInput WorldPosition; // 0x44
};

struct UMagicLeapSettings {
	bool bEnableZI; // 0x28
	bool bUseVulkanForZI; // 0x29
	bool bUseMLAudioForZI; // 0x2a
};

struct ACameraRig_Crane {
	float CranePitch; // 0x220
	float CraneYaw; // 0x224
	float CraneArmLength; // 0x228
	bool bLockMountPitch; // 0x22c
	bool bLockMountYaw; // 0x22d
	USceneComponent* TransformComponent; // 0x230
	USceneComponent* CraneYawControl; // 0x238
	USceneComponent* CranePitchControl; // 0x240
	USceneComponent* CraneCameraMount; // 0x248
};

struct USpacer {
	FVector2D Size; // 0x108
};

struct UGameUserSettings {
	bool bUseVSync; // 0x28
	bool bUseDynamicResolution; // 0x29
	uint32_t ResolutionSizeX; // 0x80
	uint32_t ResolutionSizeY; // 0x84
	uint32_t LastUserConfirmedResolutionSizeX; // 0x88
	uint32_t LastUserConfirmedResolutionSizeY; // 0x8c
	int32_t WindowPosX; // 0x90
	int32_t WindowPosY; // 0x94
	int32_t FullscreenMode; // 0x98
	int32_t LastConfirmedFullscreenMode; // 0x9c
	int32_t PreferredFullscreenMode; // 0xa0
	uint32_t Version; // 0xa4
	int32_t AudioQualityLevel; // 0xa8
	int32_t LastConfirmedAudioQualityLevel; // 0xac
	float FrameRateLimit; // 0xb0
	int32_t DesiredScreenWidth; // 0xb8
	bool bUseDesiredScreenHeight; // 0xbc
	int32_t DesiredScreenHeight; // 0xc0
	int32_t LastUserConfirmedDesiredScreenWidth; // 0xc4
	int32_t LastUserConfirmedDesiredScreenHeight; // 0xc8
	float LastRecommendedScreenWidth; // 0xcc
	float LastRecommendedScreenHeight; // 0xd0
	float LastCPUBenchmarkResult; // 0xd4
	float LastGPUBenchmarkResult; // 0xd8
	TArray<float> LastCPUBenchmarkSteps; // 0xe0
	TArray<float> LastGPUBenchmarkSteps; // 0xf0
	float LastGPUBenchmarkMultiplier; // 0x100
	bool bUseHDRDisplayOutput; // 0x104
	int32_t HDRDisplayOutputNits; // 0x108
	FMulticastInlineDelegate OnGameUserSettingsUINeedsUpdate; // 0x110
};

struct UMaterialExpressionRuntimeVirtualTextureSampleParameter {
	FName ParameterName; // 0x90
	FGuid ExpressionGUID; // 0x98
	FName Group; // 0xa8
};

struct UCrowInGameMissionAlarmWidget {
	UVerticalBox* VB_List; // 0x348
	UCrowInGameMissionAlarmItem* ComplateItem; // 0x350
	UCrowInGameMissionAlarmItem* CountingItem; // 0x358
};

struct UCrowZombieWaitingWidget {
	UTextBlock* TB_Timer; // 0x348
	UWidgetAnimation* AniShow; // 0x350
};

struct UMirrorToolProperties {
	EMirrorOperationMode OperationMode; // 0x60
	bool bCropAlongMirrorPlaneFirst; // 0x61
	bool bWeldVerticesOnMirrorPlane; // 0x62
	bool bAllowBowtieVertexCreation; // 0x63
	bool bSnapToWorldGrid; // 0x64
	EMirrorCtrlClickBehavior CtrlClickBehavior; // 0x65
	bool bButtonsOnlyChangeOrientation; // 0x66
	bool bShowPreview; // 0x67
	EMirrorSaveMode SaveMode; // 0x68
};

struct UMaterialExpressionComment {
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FString Text; // 0x48
	FLinearColor CommentColor; // 0x58
	int32_t FontSize; // 0x68
};

struct UWidgetBlueprintGeneratedClass {
	UWidgetTree* WidgetTree; // 0x328
	char bClassRequiresNativeTick : 1; // 0x330
	TArray<FDelegateRuntimeBinding> Bindings; // 0x338
	TArray<UWidgetAnimation*> Animations; // 0x348
	TArray<FName> NamedSlots; // 0x358
};

struct UBTDecorator_TagCooldown {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
	bool bActivatesCooldown; // 0x75
};

struct USequenceCameraShakeSequencePlayer {
	UObject* BoundObjectOverride; // 0x480
	UMovieSceneSequence* Sequence; // 0x488
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x490
};

struct ACrowParachuteSupplyActor {
	UProjectileMovementComponent* MovementComp; // 0x220
	USkeletalMeshComponent* ParachuteMesh; // 0x228
	float MaxSpeed; // 0x230
	float DestroyRateSecond; // 0x234
	TWeakObjectPtr<AActor> AttachTargetActor; // 0x238
	FTimerHandle Timer_Destroy; // 0x240
	UAnimMontage* AnimMontage; // 0x248
};

struct UParticleModuleLocationPrimitiveCylinder_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct APaperTerrainActor {
	USceneComponent* DummyRoot; // 0x220
	UPaperTerrainSplineComponent* SplineComponent; // 0x228
	UPaperTerrainComponent* RenderComponent; // 0x230
};

struct ULightPropagationVolumeBlendable {
	FLightPropagationVolumeSettings Settings; // 0x30
	float BlendWeight; // 0x70
};

struct UCrowMailPopupSlotWidget {
	UWidgetSwitcher* WS_SlotTitle; // 0x368
	UTextBlock* TB_Username; // 0x370
	UTextBlock* TB_RewardTitle; // 0x378
	UCrowWidgetImage* IMG_Reward; // 0x380
	UTextBlock* TB_RemainTime; // 0x388
	UTextBlock* TB_RewardName; // 0x390
	UWidgetSwitcher* WS_ButtonStatus; // 0x398
	UCrowButton* BT_Reward; // 0x3a0
	UCrowButton* BT_Delete; // 0x3a8
	int64_t MailNo; // 0x3b0
	char MailType; // 0x3b8
	FDateTime RewardEndDateTime; // 0x3c0
	bool bIsUpdateRemainTime; // 0x3c8
};

struct ACrowWorldOverviewActor {
	UStaticMeshComponent* SphereMesh; // 0x220
	bool AutoCollectSyncHub; // 0x228
	float SizeColumn; // 0x22c
	float SizeRow; // 0x230
	float RandomYaw; // 0x234
	float RandomScale; // 0x238
	int32_t CountInRow; // 0x23c
	int32_t RepeatWhole; // 0x240
	int32_t RepeatItem; // 0x244
	FCrowBuildingEditorPreview EditorPreview; // 0x248
	TArray<UBlueprint*> ActorAssets; // 0x250
	TArray<AActor*> ActorInstances; // 0x260
};

struct UChaosClothConfig {
	EClothMassMode MassMode; // 0x28
	float UniformMass; // 0x2c
	float TotalMass; // 0x30
	float Density; // 0x34
	float MinPerParticleMass; // 0x38
	float EdgeStiffness; // 0x3c
	float BendingStiffness; // 0x40
	bool bUseBendingElements; // 0x44
	float AreaStiffness; // 0x48
	float VolumeStiffness; // 0x4c
	float StrainLimitingStiffness; // 0x50
	float LimitScale; // 0x54
	EChaosClothTetherMode TetherMode; // 0x58
	bool bUseGeodesicDistance; // 0x59
	float ShapeTargetStiffness; // 0x5c
	float CollisionThickness; // 0x60
	float FrictionCoefficient; // 0x64
	bool bUseSelfCollisions; // 0x68
	float SelfCollisionThickness; // 0x6c
	bool bUseLegacyBackstop; // 0x70
	float DampingCoefficient; // 0x74
	bool bUsePointBasedWindModel; // 0x78
	float DragCoefficient; // 0x7c
	float LiftCoefficient; // 0x80
	bool bUseGravityOverride; // 0x84
	float GravityScale; // 0x88
	FVector Gravity; // 0x8c
	float AnimDriveSpringStiffness; // 0x98
	FVector LinearVelocityScale; // 0x9c
	float AngularVelocityScale; // 0xa8
	bool bUseTetrahedralConstraints; // 0xac
	bool bUseThinShellVolumeConstraints; // 0xad
	bool bUseContinuousCollisionDetection; // 0xae
};

struct UM2_Browning_Boat_Front_Anim_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x318
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x328
	FAnimNode_Slot AnimGraphNode_Slot; // 0x348
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x390
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x3b0
	FAnimNode_VehicleWeaponHandler AnimGraphNode_VehicleWeapon; // 0x3d0
};

struct UConvertToPolygonsTool {
	UConvertToPolygonsToolProperties* Settings; // 0x88
	UPreviewMesh* PreviewMesh; // 0x90
};

struct UMaterialExpressionAdd {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x78
	FMovieScenePropertyBinding PropertyBinding; // 0x80
	TArray<UMovieSceneSection*> Sections; // 0x98
};

struct UFieldSystemMetaDataIteration {
	int32_t Iterations; // 0xb0
};

struct UEnvQueryGenerator {
	FString OptionName; // 0x30
	UEnvQueryItemType* ItemType; // 0x40
	char bAutoSortTests : 1; // 0x48
};

struct UGranularSynth {
	USoundWave* GranulatedSoundWave; // 0x6c0
};

struct UCrowCharacterHUD {
	FCrowCharacterHUDSetting HudSetting; // 0x260
};

struct UCrowLoadingWidget {
	UTextBlock* TB_MapName; // 0x348
	UTextBlock* TB_GameMode; // 0x350
	UTextBlock* TB_TipDesc; // 0x358
	UImage* IMG_LoadingIMG; // 0x360
	UImage* TipImage; // 0x368
	UImage* IMG_Loading_In; // 0x370
	UVerticalBox* VB_ModeDescList; // 0x378
	UWidgetAnimation* AniStart; // 0x380
	UUMGSequencePlayer* AniStartPlayer; // 0x388
};

struct UCameraShakeSourceComponent {
	ECameraShakeAttenuation Attenuation; // 0x1f8
	float InnerAttenuationRadius; // 0x1fc
	float OuterAttenuationRadius; // 0x200
	UCameraShakeBase* CameraShake; // 0x208
	bool bAutoStart; // 0x210
};

struct UParticleModuleLocationDirect {
	FRawDistributionVector Location; // 0x30
	FRawDistributionVector LocationOffset; // 0x78
	FRawDistributionVector ScaleFactor; // 0xc0
	FRawDistributionVector Direction; // 0x108
};

struct UCrowCharacterAnimInstBase {
	ECrowWeaponSubType CurrentWeaponType; // 0x2b8
	ECrowRotationMode RotationMode; // 0x2b9
	ECrowMovementMode CurrentMovementMode; // 0x2ba
	ECrowMovementMode PrevMovementMode; // 0x2bb
	ECrowCharacterAnimStance CurrentStance; // 0x2bc
	ECrowCharacterAnimStance TransitionStance; // 0x2bd
	ECrowCharacterBattleStance BattleStance; // 0x2be
	bool bIsMoving; // 0x2bf
	FVector Velocity; // 0x2c0
	FVector2D AimOffset; // 0x2cc
	float MoveDirection; // 0x2d4
	float GaitValue; // 0x2d8
	float PlayRateStand; // 0x2dc
	float PlayRateCrouch; // 0x2e0
	float PlayRateProne; // 0x2e4
	bool bIsTurnInPlace; // 0x2e8
	float StanceBlendingTime; // 0x2ec
	bool bIsWeaponRightHanded; // 0x2f0
	bool bIsProneMoving; // 0x2f1
	bool bIsOnInteract; // 0x2f2
};

struct UCrowWorldSplineDeformComponent {
	bool bLeftsideDeform; // 0xb0
	bool bRightsideDeform; // 0xb1
	UCrowWorldSplineComponent* CrowSplineComponent; // 0xb8
	bool bInitialized; // 0xc0
	TArray<FCrowLandscapeSplineInterpPoint> CachedPoints; // 0xc8
	int32_t CachedPointsFalloffTrace; // 0xd8
};

struct ULandscapeSplineSegment {
	FLandscapeSplineSegmentConnection Connections[0x2]; // 0x28
	FInterpCurveVector SplineInfo; // 0x58
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	TArray<USplineMeshComponent*> LocalMeshComponents; // 0xa0
};

struct UCrowBattleInventoryWidget {
	UCrowInventoryInputEventHandler* DragStartInputHandler; // 0x368
	UCrowInventoryInputEventHandler* DragEndInputHandler; // 0x370
	UCrowInvenItemSlot* DragStartWidget; // 0x378
	UCrowInvenItemSlot* DragEndWidget; // 0x380
	UCrowBackPackInfoWidget* WB_BackPackInfo; // 0x388
	UCrowLoadoutInfoWidget* WB_LoadoutInfo; // 0x390
	UCrowTutorialInventoryWidget* WB_Tutorial_Inventory_2; // 0x398
	UCrowTutorialInventoryWidget* WB_Tutorial_Inventory_3; // 0x3a0
	UCrowTutorialInventoryWidget* WB_Tutorial_Inventory_4; // 0x3a8
	UCrowTutorialInventoryWidget* WB_Tutorial_Inventory_5; // 0x3b0
	UCrowTutorialInventoryWidget* WB_Tutorial_Inventory_6; // 0x3b8
	UCrowInvenArmorInfoWidget* WB_InvenArmorInfo; // 0x3c0
	UCrowDropBoxWidget* WB_DropBox_L; // 0x3c8
	UCrowDropBoxWidget* WB_DropBox__R; // 0x3d0
	UButton* BTN_PIE_Exit; // 0x3d8
	TArray<UCrowTutorialInventoryWidget*> DiscriptionWidgetList; // 0x3e0
	TWeakObjectPtr<UCrowGameInvenComponent> CrowGameInvenComponent; // 0x3f0
	UCrowInventoryInputEventHandler* SelectDragWidget; // 0x3f8
};

struct UClothConfigNv {
	EClothingWindMethodNv ClothingWindMethod; // 0x28
	FClothConstraintSetupNv VerticalConstraint; // 0x2c
	FClothConstraintSetupNv HorizontalConstraint; // 0x3c
	FClothConstraintSetupNv BendConstraint; // 0x4c
	FClothConstraintSetupNv ShearConstraint; // 0x5c
	float SelfCollisionRadius; // 0x6c
	float SelfCollisionStiffness; // 0x70
	float SelfCollisionCullScale; // 0x74
	FVector Damping; // 0x78
	float Friction; // 0x84
	float WindDragCoefficient; // 0x88
	float WindLiftCoefficient; // 0x8c
	FVector LinearDrag; // 0x90
	FVector AngularDrag; // 0x9c
	FVector LinearInertiaScale; // 0xa8
	FVector AngularInertiaScale; // 0xb4
	FVector CentrifugalInertiaScale; // 0xc0
	float SolverFrequency; // 0xcc
	float StiffnessFrequency; // 0xd0
	float GravityScale; // 0xd4
	FVector GravityOverride; // 0xd8
	bool bUseGravityOverride; // 0xe4
	float TetherStiffness; // 0xe8
	float TetherLimit; // 0xec
	float CollisionThickness; // 0xf0
	float AnimDriveSpringStiffness; // 0xf4
	float AnimDriveDamperStiffness; // 0xf8
	EClothingWindMethod_Legacy WindMethod; // 0xfc
	FClothConstraintSetup_Legacy VerticalConstraintConfig; // 0x100
	FClothConstraintSetup_Legacy HorizontalConstraintConfig; // 0x110
	FClothConstraintSetup_Legacy BendConstraintConfig; // 0x120
	FClothConstraintSetup_Legacy ShearConstraintConfig; // 0x130
};

struct UCrowPartyWidget {
	UCrowFriendSlotWidget* WB_LocalPlayer; // 0x348
	UVerticalBox* VB_EmptySlot; // 0x350
	UVerticalBox* VB_PartySlot; // 0x358
	UCrowButton* BT_Close; // 0x360
	UCrowButton* BT_Promote; // 0x368
	UCrowButton* BT_CancelPromote; // 0x370
	UCrowButton* BT_ExitParty; // 0x378
	UCrowButton* BT_AddParty_2; // 0x380
	UCrowButton* BT_AddParty_3; // 0x388
	UCrowButton* BT_AddParty_4; // 0x390
	UCrowFriendSlotWidget* FriendSlotWidgetClass; // 0x398
	ACrowSceneLobby* SceneLobby; // 0x3a0
	bool PromoteMode; // 0x3a8
};

struct UGeometryCache {
	TArray<UMaterialInterface*> Materials; // 0x30
	TArray<UGeometryCacheTrack*> Tracks; // 0x40
	int32_t StartFrame; // 0x60
	int32_t EndFrame; // 0x64
};

struct URestrictedGameplayTagsList {
	FString ConfigFileName; // 0x28
	TArray<FRestrictedGameplayTagTableRow> RestrictedGameplayTagList; // 0x38
};

struct UCrowFoliageAffectorComponent {
	bool bLoop; // 0x1f8
	FMulticastInlineDelegate OnTimeAnimationFinished; // 0x200
	bool bVolatileAffector; // 0x210
	bool bAlwaysRender; // 0x211
	bool bWindAffector; // 0x212
	bool bStartWithBeginPlay; // 0x213
	bool bChangeViewModeLocation; // 0x214
	FVector Location_FP; // 0x218
	FVector Location_TP; // 0x224
	UMaterialInterface* MI; // 0x230
	FCrowFoliageAffectByDistance AffectByDistance; // 0x238
	UCrowFoliageAffectorAnimData* AnimData; // 0x258
	bool IsVehicle; // 0x260
	TSet<ECrowVehicleState> BindVehicleState; // 0x268
	float ScaleMultiplier; // 0x2b8
	float PowerMultiplier; // 0x2bc
	UMaterialInstanceDynamic* MIDBrush; // 0x2c0
	UCrowRotorFSM* RotorFSM; // 0x2c8
	UCrowFoliageAffectorAnimData* AnimDataInstance; // 0x2d0
	FCrowFoliageAffectorDrawParam DrawParam; // 0x2d8
	bool bRegisted; // 0x310
	bool bNeedRegister; // 0x311
	FVector LocationByViewMode; // 0x314
	ECrowVehicleState CurrentVehicleState; // 0x320
};

struct UCrowUserExpTableManager {
	TMap<int32_t, FCrowUserExpTableRow> UserExpData; // 0x28
};

struct UCrowCustomCursorSpaceWidget {
	UCanvasPanel* CP_Root; // 0x348
	UCrowCustomCursorBase* CustomCursor; // 0x350
	UCanvasPanelSlot* CursorPanelSlot; // 0x358
};

struct UCrowTriggerCommandGaugeBar {
	UCrowProgressBarWidget* GaugeWidget; // 0x128
};

struct UOnsetNRTSettings {
	bool bDownmixToMono; // 0x28
	float GranularityInSeconds; // 0x2c
	float Sensitivity; // 0x30
	float MinimumFrequency; // 0x34
	float MaximumFrequency; // 0x38
};

struct UBackgroundBlurSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UGeometryCacheTrack {
	float Duration; // 0x28
};

struct UCrowGameModWidget {
	UCrowSelectWorldButtonWidget* SelectWorldButtonWidgetClass; // 0x348
	UHorizontalBox* HB_ModeList; // 0x350
	UHorizontalBox* HB_MapList; // 0x358
	UTextBlock* TB_SelectModeName; // 0x360
	UTextBlock* TB_StageName; // 0x368
	UCrowButton* BT_Apply; // 0x370
	UCrowSelectModButtonWidget* WB_SelectModButton_SM; // 0x378
	UCrowSelectModButtonWidget* WB_SelectModButton_SO; // 0x380
	UCrowSelectModButtonWidget* WB_SelectModButton_TDE; // 0x388
	UCrowSelectModButtonWidget* WB_SelectModButton_TG; // 0x390
	ECrowGameMode CurrentGameMode; // 0x398
	uint32_t CurrentMapIndex; // 0x39c
	TArray<UCrowSelectModButtonWidget*> ModButtonWidgetArray; // 0x3a0
};

struct UCrowSquadInfo {
	char TeamID; // 0x34
	FString SquadKey; // 0x38
	FString SquadName; // 0x48
	TArray<FCrowSquadPlayer> PlayerArray; // 0x58
	int32_t PlayerCount; // 0x68
	uint32_t SquadPoint; // 0x6c
	ACrowMissionArea* WaitRespawnArea; // 0x70
	uint32_t TotalRetreivedMineral; // 0x78
	TArray<ECrowModPointIndex> UpdateModePointIndexArray; // 0x80
	TArray<FCrowPingData> PingDataArray; // 0x90
	TArray<FCrowSquadRewardInfo> RewardInfoArray; // 0xa0
};

struct UAnimNotify_CLSWeaponAction {
	ECLSWeaponAction WeaponAction; // 0x30
};

struct UCrowWorldSyncHubStatisticsComp {
	TArray<FCrowWorldSyncBuildingLink> CollectionBuildingLink; // 0xb0
	TArray<FCrowWorldSyncBuildingPropLink> CollectionBuildingPropLink; // 0xc0
	TArray<FCrowWorldSyncWorldPropLink> CollectionWorldPropLink; // 0xd0
};

struct USkeletalMeshSocket {
	FName SocketName; // 0x28
	FName BoneName; // 0x30
	FVector RelativeLocation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale; // 0x50
	bool bForceAlwaysAnimated; // 0x5c
};

struct UARTextureCameraDepth {
	EARDepthQuality DepthQuality; // 0xf8
	EARDepthAccuracy DepthAccuracy; // 0xf9
	bool bIsTemporallySmoothed; // 0xfa
};

struct UWidgetComponent {
	EWidgetSpace Space; // 0x468
	EWidgetTimingPolicy TimingPolicy; // 0x469
	UUserWidget* WidgetClass; // 0x470
	FIntPoint DrawSize; // 0x478
	bool bManuallyRedraw; // 0x480
	bool bRedrawRequested; // 0x481
	float RedrawTime; // 0x484
	FIntPoint CurrentDrawSize; // 0x490
	bool bDrawAtDesiredSize; // 0x498
	FVector2D Pivot; // 0x49c
	bool bReceiveHardwareInput; // 0x4a4
	bool bWindowFocusable; // 0x4a5
	EWindowVisibility WindowVisibility; // 0x4a6
	bool bApplyGammaCorrection; // 0x4a7
	ULocalPlayer* OwnerPlayer; // 0x4a8
	FLinearColor BackgroundColor; // 0x4b0
	FLinearColor TintColorAndOpacity; // 0x4c0
	float OpacityFromTexture; // 0x4d0
	EWidgetBlendMode BlendMode; // 0x4d4
	bool bIsTwoSided; // 0x4d5
	bool TickWhenOffscreen; // 0x4d6
	UBodySetup* BodySetup; // 0x4d8
	UMaterialInterface* TranslucentMaterial; // 0x4e0
	UMaterialInterface* TranslucentMaterial_OneSided; // 0x4e8
	UMaterialInterface* OpaqueMaterial; // 0x4f0
	UMaterialInterface* OpaqueMaterial_OneSided; // 0x4f8
	UMaterialInterface* MaskedMaterial; // 0x500
	UMaterialInterface* MaskedMaterial_OneSided; // 0x508
	UTextureRenderTarget2D* RenderTarget; // 0x510
	UMaterialInstanceDynamic* MaterialInstance; // 0x518
	bool bAddedToScreen; // 0x520
	bool bEditTimeUsable; // 0x521
	FName SharedLayerName; // 0x524
	int32_t LayerZOrder; // 0x52c
	EWidgetGeometryMode GeometryMode; // 0x530
	float CylinderArcAngle; // 0x534
	ETickMode TickMode; // 0x538
	UUserWidget* Widget; // 0x560
};

struct AGameModeBase {
	FString OptionsString; // 0x220
	AGameSession* GameSessionClass; // 0x230
	AGameStateBase* GameStateClass; // 0x238
	APlayerController* PlayerControllerClass; // 0x240
	APlayerState* PlayerStateClass; // 0x248
	AHUD* HUDClass; // 0x250
	APawn* DefaultPawnClass; // 0x258
	ASpectatorPawn* SpectatorClass; // 0x260
	APlayerController* ReplaySpectatorPlayerControllerClass; // 0x268
	AServerStatReplicator* ServerStatReplicatorClass; // 0x270
	AGameSession* GameSession; // 0x278
	AGameStateBase* GameState; // 0x280
	AServerStatReplicator* ServerStatReplicator; // 0x288
	FText DefaultPlayerName; // 0x290
	char bUseSeamlessTravel : 1; // 0x2a8
	char bStartPlayersAsSpectators : 1; // 0x2a8
	char bPauseable : 1; // 0x2a8
};

struct AOnlineBeaconHost {
	int32_t ListenPort; // 0x250
	TArray<AOnlineBeaconClient*> ClientActors; // 0x258
};

struct UPaperGroupedSpriteComponent {
	TArray<UMaterialInterface*> InstanceMaterials; // 0x468
	TArray<FSpriteInstanceData> PerInstanceSpriteData; // 0x478
};

struct UTcpMessagingSettings {
	bool EnableTransport; // 0x28
	FString ListenEndpoint; // 0x30
	TArray<FString> ConnectToEndpoints; // 0x40
	int32_t ConnectionRetryDelay; // 0x50
	bool bStopServiceWhenAppDeactivates; // 0x54
};

struct UMaterialExpressionAbs {
	FExpressionInput Input; // 0x40
};

struct UCrowCharacterMainAnimBase {
	FCrowCharacterMontageDepends MontagesDepends; // 0x2f8
	UCrowCharacterAnimInstBase* MontagesOwner; // 0x348
	UAnimMontage* CachedTurnMontage; // 0x350
	ECrowCharacterHandIKType HandIKType; // 0x358
	FTransform LeftHandIKTransform; // 0x360
	ECrowCharacterVehicleAnimType VehicleType; // 0x390
	float ElapsedHandIK; // 0x394
	float AlphaHandIK; // 0x398
};

struct UTemplateSequence {
	UMovieScene* MovieScene; // 0x60
	TSoftClassPtr<UObject> BoundActorClass; // 0x68
	TSoftObjectPtr<AActor> BoundPreviewActor; // 0x90
	TMap<FGuid, FName> BoundActorComponents; // 0xb8
};

struct UWB_HUD_M1Abrams_Crosshair_Machinegun_Third_C {
	UImage* IMG_Crosshair_Gauge; // 0x438
	UImage* IMG_Crosshair_Gauge_Base; // 0x440
	UImage* IMG_Crosshair_Moving; // 0x448
	UImage* IMG_Crosshair_Point_2; // 0x450
	UImage* IMG_Crosshair_Spread; // 0x458
	UImage* IMG_Crosshair_Spread_2; // 0x460
};

struct UParticleModuleKillBox {
	FRawDistributionVector LowerLeftCorner; // 0x30
	FRawDistributionVector UpperRightCorner; // 0x78
	char bAbsolute : 1; // 0xc0
	char bKillInside : 1; // 0xc0
	char bAxisAlignedAndFixedSize : 1; // 0xc0
};

struct UMaterialExpressionHairAttributes {
	char bUseTangentSpace : 1; // 0x40
};

struct ACrowSpectatorPawnBombMission {
	ACrowPlayerStateBombMission* AttachedPlayerStateBombMission; // 0x2f8
};

struct UCrowMainMedalManager {
	TMap<uint32_t, FCrowMainMedalInfos> MainMedalInfos; // 0x28
	TMap<uint32_t, FCrowMainMedalGroupInfo> MainMedalGroupInfos; // 0x78
	UCrowWidgetBase* ReqMedalGroupRewardWidget; // 0xc8
};

struct UWB_SettingsSlot_C {
	UImage* IMG_BG; // 0x530
	UImage* IMG_Blue00; // 0x538
	UWB_CrossHairPreset_C* WB_CrossHairPreset; // 0x540
};

struct UInGameAdManager {
	char bShouldPauseWhileAdOpen : 1; // 0x38
	TArray<FDelegate> ClickedBannerDelegates; // 0x40
	TArray<FDelegate> ClosedAdDelegates; // 0x50
};

struct UMovieSceneEntitySystem {
	UMovieSceneEntitySystemLinker* Linker; // 0x28
};

struct ACrowDebugSceneLoadActor {
	uint32_t LoadMapIndex; // 0x220
};

struct USubUVAnimation {
	UTexture2D* SubUVTexture; // 0x28
	int32_t SubImages_Horizontal; // 0x30
	int32_t SubImages_Vertical; // 0x34
	ESubUVBoundingVertexCount BoundingMode; // 0x38
	EOpacitySourceMode OpacitySourceMode; // 0x39
	float AlphaThreshold; // 0x3c
};

struct UNiagaraDataInterfaceVectorCurve {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
	FRichCurve ZCurve; // 0x170
};

struct USoundNodeModulatorContinuous {
	FModulatorContinuousParams PitchModulationParams; // 0x48
	FModulatorContinuousParams VolumeModulationParams; // 0x68
};

struct UCrowLoadingModeTextWidget {
	UTextBlock* TB_ModeDesc; // 0x260
};

struct UDatasmithAreaLightActorTemplate {
	EDatasmithAreaLightActorType LightType; // 0x30
	EDatasmithAreaLightActorShape LightShape; // 0x31
	FVector2D Dimensions; // 0x34
	FLinearColor Color; // 0x3c
	float Intensity; // 0x4c
	ELightUnits IntensityUnits; // 0x50
	float Temperature; // 0x54
	TSoftObjectPtr<UTextureLightProfile> IESTexture; // 0x58
	bool bUseIESBrightness; // 0x80
	float IESBrightnessScale; // 0x84
	FRotator Rotation; // 0x88
	float SourceRadius; // 0x94
	float SourceLength; // 0x98
	float AttenuationRadius; // 0x9c
};

struct UDisplaceMeshPerlinNoiseProperties {
	TArray<FPerlinLayerProperties> PerlinLayerProperties; // 0x60
};

struct UPawnMovementComponent {
	APawn* PawnOwner; // 0x130
};

struct AArchVisCharacter {
	FString LookUpAxisName; // 0x4b8
	FString LookUpAtRateAxisName; // 0x4c8
	FString TurnAxisName; // 0x4d8
	FString TurnAtRateAxisName; // 0x4e8
	FString MoveForwardAxisName; // 0x4f8
	FString MoveRightAxisName; // 0x508
	float MouseSensitivityScale_Pitch; // 0x518
	float MouseSensitivityScale_Yaw; // 0x51c
};

struct ACrowCharacterBase {
	FCrowCharacterAppearance ReplicatedAppearance; // 0x10f0
	TArray<FCrowClothItemData> DefaultClothesList; // 0x10f8
	TArray<uint32_t> DefaultTattooIndexList; // 0x1108
	uint32_t DefaultResultMVPIndex; // 0x1118
	bool bIsHuman; // 0x111c
	FName PelvisBoneName; // 0x1120
	float ElapsedForceSyncRotation; // 0x1128
	char bIsWeaponFiring : 1; // 0x112c
	float PronedEyeHeight; // 0x1130
	UCrowCharacterMovement* CrowMovement; // 0x1138
	UCrowProneCapsuleComponent* ProneCollisionCapsuleComponent; // 0x1140
	UCrowClothActorComponent* TP_ClothComponent; // 0x1148
	FCrowCharacterAppearance CurrentAppearance; // 0x1150
	uint32_t CurrentTattooFaceIndex; // 0x1158
	uint32_t CurrentTattooArmIndex; // 0x115c
	UPhysicsAsset* CharacterPhysicsAsset; // 0x1160
	UPhysicsAsset* RagdollPhysicsAsset; // 0x1168
	UCrowLibraryMergeSKCTask* MergeMeshTask; // 0x1170
	USkeletalMesh* OptimizationWeaponMesh; // 0x1180
	USkeletalMesh* OptimizationCharacterMesh; // 0x1188
	USkeletalMesh* BackupNoOptimizationCharacterMesh; // 0x1190
	UMaterialInterface* BackupNoOptimizationCharacterMaterial; // 0x1198
	int32_t CacheMergedMeshIndex; // 0x11a0
	UObject* BackupAnimClass; // 0x11a8
};

struct UPrimaryAssetLabel {
	FPrimaryAssetRules Rules; // 0x30
	char bLabelAssetsInMyDirectory : 1; // 0x3c
	char bIsRuntimeLabel : 1; // 0x3c
	TArray<TSoftObjectPtr<UObject>> ExplicitAssets; // 0x40
	TArray<TSoftClassPtr<UObject>> ExplicitBlueprints; // 0x50
	FCollectionReference AssetCollection; // 0x60
};

struct UCrowWeaponExpTableManager {
	TMap<int32_t, FCrowWeaponExpTableRow> WeaponExpData; // 0x28
};

struct UGameplayTagsDeveloperSettings {
	FString DeveloperConfigName; // 0x38
	FName FavoriteTagSource; // 0x48
};

struct UUdpMessagingSettings {
	bool EnabledByDefault; // 0x28
	bool EnableTransport; // 0x29
	bool bAutoRepair; // 0x2a
	bool bStopServiceWhenAppDeactivates; // 0x2b
	FString UnicastEndpoint; // 0x30
	FString MulticastEndpoint; // 0x40
	EUdpMessageFormat MessageFormat; // 0x50
	char MulticastTimeToLive; // 0x51
	TArray<FString> StaticEndpoints; // 0x58
	bool EnableTunnel; // 0x68
	FString TunnelUnicastEndpoint; // 0x70
	FString TunnelMulticastEndpoint; // 0x80
	TArray<FString> RemoteTunnelEndpoints; // 0x90
};

struct UNiagaraDataInterfaceRenderTarget2DArray {
	FIntVector Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe4
	char bOverrideFormat : 1; // 0xe5
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTarget2DArray*> ManagedRenderTargets; // 0x108
};

struct USoundMix {
	char bApplyEQ : 1; // 0x28
	float EQPriority; // 0x2c
	FAudioEQEffect EQSettings; // 0x30
	TArray<FSoundClassAdjuster> SoundClassEffects; // 0x70
	float InitialDelay; // 0x80
	float FadeInTime; // 0x84
	float Duration; // 0x88
	float FadeOutTime; // 0x8c
};

struct UCrowConquestHeavyBomberIcon {
	ACrowConquestHeavyBomberActor* HeavyBomberActor; // 0x3d8
};

struct UMaterialExpressionRayTracingQualitySwitch {
	FExpressionInput Normal; // 0x40
	FExpressionInput RayTraced; // 0x54
};

struct UParticleModuleVelocityInheritParent {
	FRawDistributionVector Scale; // 0x38
};

struct UMaterialExpressionReflectionVectorWS {
	FExpressionInput CustomWorldNormal; // 0x40
	char bNormalizeCustomWorldNormal : 1; // 0x54
};

struct UInterpTrackMoveAxis {
	EInterpMoveAxis MoveAxis; // 0x90
	FInterpLookupTrack LookupTrack; // 0x98
};

struct UVRNotificationsComponent {
	FMulticastInlineDelegate HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate; // 0xb0
	FMulticastInlineDelegate HMDTrackingInitializedDelegate; // 0xc0
	FMulticastInlineDelegate HMDRecenteredDelegate; // 0xd0
	FMulticastInlineDelegate HMDLostDelegate; // 0xe0
	FMulticastInlineDelegate HMDReconnectedDelegate; // 0xf0
	FMulticastInlineDelegate HMDConnectCanceledDelegate; // 0x100
	FMulticastInlineDelegate HMDPutOnHeadDelegate; // 0x110
	FMulticastInlineDelegate HMDRemovedFromHeadDelegate; // 0x120
	FMulticastInlineDelegate VRControllerRecenteredDelegate; // 0x130
};

struct UCollisionGeometryVisualizationProperties {
	float LineThickness; // 0x60
	bool bShowHidden; // 0x64
	FColor Color; // 0x68
};

struct UNiagaraDataInterfacePhysicsAsset {
	UPhysicsAsset* DefaultSource; // 0x38
	AActor* SourceActor; // 0x40
};

struct UMaterialExpressionAppendVector {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UProceduralFoliageTile {
	UProceduralFoliageSpawner* FoliageSpawner; // 0x28
	TArray<FProceduralFoliageInstance> InstancesArray; // 0xd0
};

struct UBaseMediaSource {
	FName PlayerName; // 0x80
};

struct ATriggerBase {
	UShapeComponent* CollisionComponent; // 0x220
};

struct AWaterBodyOcean {
	UOceanGenerator* OceanGenerator; // 0xdd0
	FVector CollisionExtents; // 0xdd8
	float HeightOffset; // 0xde4
};

struct UDataTable {
	UScriptStruct* RowStruct; // 0x28
	char bStripFromClientBuilds : 1; // 0x80
	char bIgnoreExtraFields : 1; // 0x80
	char bIgnoreMissingFields : 1; // 0x80
	FString ImportKeyField; // 0x88
};

struct UCameraModifier_CameraShake {
	TArray<FActiveCameraShakeInfo> ActiveShakes; // 0x48
	TMap<UCameraShakeBase*, FPooledCameraShakes> ExpiredPooledShakesMap; // 0x58
	float SplitScreenShakeScale; // 0xa8
};

struct UReplicationGraphNode_TearOff_ForConnection {
	TArray<FTearOffActorInfo> TearOffActors; // 0x50
};

struct UWidgetSwitcherSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UAkLuminInitializationSettings {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkAdvancedInitializationSettingsWithMultiCoreRendering AdvancedSettings; // 0xb8
};

struct UAkWwiseTree {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnItemDragged; // 0x118
};

struct UVehicleWheel {
	UStaticMesh* CollisionMesh; // 0x28
	bool bDontCreateShape; // 0x30
	bool bAutoAdjustCollisionSize; // 0x31
	FVector Offset; // 0x34
	float ShapeRadius; // 0x40
	float ShapeWidth; // 0x44
	float Mass; // 0x48
	float DampingRate; // 0x4c
	float SteerAngle; // 0x50
	bool bAffectedByHandbrake; // 0x54
	UTireType* TireType; // 0x58
	UTireConfig* TireConfig; // 0x60
	float LatStiffMaxLoad; // 0x68
	float LatStiffValue; // 0x6c
	float LongStiffValue; // 0x70
	float SuspensionForceOffset; // 0x74
	float SuspensionMaxRaise; // 0x78
	float SuspensionMaxDrop; // 0x7c
	float SuspensionNaturalFrequency; // 0x80
	float SuspensionDampingRatio; // 0x84
	EWheelSweepType SweepType; // 0x88
	float MaxBrakeTorque; // 0x8c
	float MaxHandBrakeTorque; // 0x90
	UWheeledVehicleMovementComponent* VehicleSim; // 0x98
	int32_t WheelIndex; // 0xa0
	float DebugLongSlip; // 0xa4
	float DebugLatSlip; // 0xa8
	float DebugNormalizedTireLoad; // 0xac
	float DebugWheelTorque; // 0xb4
	float DebugLongForce; // 0xb8
	float DebugLatForce; // 0xbc
	FVector Location; // 0xc0
	FVector OldLocation; // 0xcc
	FVector Velocity; // 0xd8
};

struct UCrowProjectileISMC {
	UStaticMesh* StaticMeshAsset; // 0x578
	TArray<UMaterialInstance*> MaterialAssetOverrides; // 0x580
	TMap<uint32_t, int32_t> UIDtoIndexArray; // 0x590
	TArray<int32_t> IdleIndexArray; // 0x5e0
	TArray<USceneComponent*> ComponentArray; // 0x5f0
};

struct UCrowRespawnMapWidget {
	ACameraActor* RespawnCamera; // 0x368
	UCrowRespawnButton* RespawnButtonClass; // 0x370
	UCrowRespawnButton* RespawnButtonSmallClass; // 0x378
	bool SelectedSkydivingPoint; // 0x380
	UCrowWorldMap* WB_Map; // 0x388
	UCrowProgressBarWidget* WB_RespawnProgressBar; // 0x390
	UCrowRespawnSelectInfoWidget* WB_RespawnSelectInfo; // 0x398
	UTextBlock* TB_MessageTitle; // 0x3a0
	UTextBlock* TB_Message; // 0x3a8
	UCanvasPanel* CP_SelectPoint; // 0x3b0
	UCanvasPanel* CP_OutAreaAlram; // 0x3b8
	UCanvasPanel* CP_RespawnPoint; // 0x3c0
	UCrowButton* BT_FastRespawn; // 0x3c8
	UTextBlock* TB_FastRespawnPrice; // 0x3d0
	UTextBlock* TB_FastRespawnPriceDisable; // 0x3d8
	UTextBlock* TB_HaveBattleMoney; // 0x3e0
	UWidgetSwitcher* WS_FastRespawnButton; // 0x3e8
	UProgressBar* PB_FastRespawn; // 0x3f0
	UBorder* BD_FastRespawnDisable; // 0x3f8
	UImage* IMG_ImPossibleRespawnArea; // 0x400
	UTextBlock* TB_AlarmMessage; // 0x408
	UCrowInGameLoadoutPopupWidget* WB_Popup_Loadout_Ingame; // 0x410
	UCrowButton* BT_Loadout; // 0x418
	UCanvasPanel* CP_DiveRespawnAlarm; // 0x420
	UCanvasPanel* CP_SquadMatch; // 0x428
	UCanvasPanel* CP_Conquest; // 0x430
	UCanvasPanel* CP_FastRespawnRoot; // 0x438
	float RespawnDelaySeconds; // 0x440
	UWidgetAnimation* AnimShow; // 0x448
	UWidgetAnimation* AnimUnselectable; // 0x450
	UWidgetAnimation* AnimSelectPointActive; // 0x458
	UWidgetAnimation* AnimSelectFastActive; // 0x460
	UWidgetAnimation* AnimRespawnAlram; // 0x468
	FName AnimShowName; // 0x470
	FName AnimUnselectableName; // 0x478
	FName AnimSelectPointActiveName; // 0x480
	FName AnimSelectFastActiveName; // 0x488
	FName AnimRespawnAlramName; // 0x490
	float FastRespawnButtonNeedPressSecond; // 0x498
	float FastRespawnPressedSecond; // 0x49c
};

struct UCrowWidgetTrainingGroundResult {
	UCrowCountdownWidget* WB_Objective_CountDown; // 0x368
	UCrowButton* BT_ReturnLobby; // 0x370
};

struct UNiagaraMeshRendererProperties {
	UStaticMesh* ParticleMesh; // 0x80
	ENiagaraSortMode SortMode; // 0x88
	char bOverrideMaterials : 1; // 0x8c
	char bSortOnlyWhenTranslucent : 1; // 0x8c
	TArray<FNiagaraMeshMaterialOverride> OverrideMaterials; // 0x90
	FVector2D SubImageSize; // 0xa0
	char bSubImageBlend : 1; // 0xa8
	ENiagaraMeshFacingMode FacingMode; // 0xac
	char bLockedAxisEnable : 1; // 0xb0
	FVector LockedAxis; // 0xb4
	ENiagaraMeshLockedAxisSpace LockedAxisSpace; // 0xc0
	FVector PivotOffset; // 0xc4
	ENiagaraMeshPivotOffsetSpace PivotOffsetSpace; // 0xd0
	char bEnableFrustumCulling : 1; // 0xd4
	char bEnableCameraDistanceCulling : 1; // 0xd4
	float MinCameraDistance; // 0xd8
	float MaxCameraDistance; // 0xdc
	uint32_t RendererVisibility; // 0xe0
	FNiagaraVariableAttributeBinding PositionBinding; // 0xe8
	FNiagaraVariableAttributeBinding ColorBinding; // 0x140
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x198
	FNiagaraVariableAttributeBinding MeshOrientationBinding; // 0x1f0
	FNiagaraVariableAttributeBinding ScaleBinding; // 0x248
	FNiagaraVariableAttributeBinding SubImageIndexBinding; // 0x2a0
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x2f8
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x350
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x3a8
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x400
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x458
	FNiagaraVariableAttributeBinding CustomSortingBinding; // 0x4b0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x508
	FNiagaraVariableAttributeBinding CameraOffsetBinding; // 0x560
	FNiagaraVariableAttributeBinding RendererVisibilityTagBinding; // 0x5b8
};

struct ULuminARSessionConfig {
	FMagicLeapPlanesQuery PlanesQuery; // 0x110
	int32_t MaxPlaneQueryResults; // 0x170
	int32_t MinPlaneArea; // 0x174
	bool bArbitraryOrientationPlaneDetection; // 0x178
	FVector PlaneSearchExtents; // 0x17c
	TArray<EMagicLeapPlaneQueryFlags> PlaneQueryFlags; // 0x188
	bool bDiscardZeroExtentPlanes; // 0x198
	bool bDefaultUseUnreliablePose; // 0x199
};

struct UTextureRenderTarget {
	float TargetGamma; // 0xd8
};

struct ACrowPlayerStateConquest {
	UCrowConquestSkillManager* SkillManager; // 0xb78
	ACrowConquestArea* CurrentConquestArea; // 0xb80
	FCrowConquestResultInfo ConquestResultInfo; // 0xb88
};

struct UBlackboardComponent {
	UBrainComponent* BrainComp; // 0xb0
	UBlackboardData* DefaultBlackboardAsset; // 0xb8
	UBlackboardData* BlackboardAsset; // 0xc0
	TArray<UBlackboardKeyType*> KeyInstances; // 0xe8
};

struct UPaperTileMap {
	int32_t MapWidth; // 0x28
	int32_t MapHeight; // 0x2c
	int32_t TileWidth; // 0x30
	int32_t TileHeight; // 0x34
	float PixelsPerUnrealUnit; // 0x38
	float SeparationPerTileX; // 0x3c
	float SeparationPerTileY; // 0x40
	float SeparationPerLayer; // 0x44
	TSoftObjectPtr<UPaperTileSet> SelectedTileSet; // 0x48
	UMaterialInterface* Material; // 0x70
	TArray<UPaperTileLayer*> TileLayers; // 0x78
	float CollisionThickness; // 0x88
	ESpriteCollisionMode SpriteCollisionDomain; // 0x8c
	ETileMapProjectionMode ProjectionMode; // 0x8d
	int32_t HexSideLength; // 0x90
	UBodySetup* BodySetup; // 0x98
	int32_t LayerNameIndex; // 0xa0
};

struct ACableActor {
	UCableComponent* CableComponent; // 0x220
};

struct UBTTask_MakeNoise {
	float Loudnes; // 0x70
};

struct UDatasmithFBXSceneImportData {
	bool bGenerateLightmapUVs; // 0x28
	FString TexturesDir; // 0x30
	char IntermediateSerialization; // 0x40
	bool bColorizeMaterials; // 0x41
};

struct UCrowLibraryMergeSKCTask {
	UCrowSkeletalMeshMerge* SkeletalMeshMerge; // 0x28
	FSkeletalMeshMergeParams MergeParams; // 0x30
	USkeletalMesh* PoseOverride; // 0x90
	int32_t CacheMergedMeshIndex; // 0x98
	UWorld* World; // 0xa0
	USkeletalMesh* GeneratedSkeletalMesh; // 0xa8
};

struct UTextureRenderTargetVolume {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	int32_t SizeZ; // 0xe8
	FLinearColor ClearColor; // 0xec
	EPixelFormat OverrideFormat; // 0xfc
	char bHDR : 1; // 0xfd
	char bForceLinearGamma : 1; // 0xfd
};

struct UCrowWidgetDying {
	UTextBlock* TB_Message; // 0x348
	UCrowHealGauge* WB_HealGauge; // 0x350
	UBackgroundBlur* BG_Blur; // 0x358
	UImage* IMG_Vignette; // 0x360
	float MaxBlurValue; // 0x368
	FName NormalLoopAniName; // 0x36c
	FName StopBleedingAnimName; // 0x374
	FName FastBleedingAnimName; // 0x37c
	FName CallHelpAnimName; // 0x384
	UAkAudioEvent* HelpSoundEvent; // 0x390
	ECrowBleedingType PreBleedingType; // 0x398
};

struct UEnvQuery {
	FName QueryName; // 0x30
	TArray<UEnvQueryOption*> Options; // 0x38
};

struct UTestMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
};

struct UCrowWorldEditorCollectActorArray {
	TArray<AActor*> AllActors; // 0x28
};

struct UCrowMissionResultWidget {
	UTextBlock* TXT_MissionResult; // 0x348
	UWidgetAnimation* SuccessAnimation; // 0x350
	UWidgetAnimation* FadeAnimation; // 0x358
};

struct UCrowWorldIconWidgetContamination {
	UImage* IMG_AreaGoal; // 0x3d8
};

struct ULevelSequenceBurnIn {
	FLevelSequencePlayerSnapshot FrameInformation; // 0x260
	ALevelSequenceActor* LevelSequenceActor; // 0x318
};

struct UCrowSoundCrossFadeByDistance {
	float SpeedOfSound; // 0x48
	float DelayMax; // 0x4c
	float TestDistance; // 0x50
};

struct UCrowWorldAssetPointLight {
	UPointLightComponent* PointLightData; // 0x28
};

struct ACrowSoundStateVolume {
	ECrowSoundStateType SoundStateType; // 0x220
	TArray<UStaticMeshComponent*> SoundVolumes; // 0x228
};

struct UMaterialExpressionStep {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
	float ConstY; // 0x68
	float ConstX; // 0x6c
};

struct UParticleModuleVectorFieldRotation {
	FVector MinInitialRotation; // 0x30
	FVector MaxInitialRotation; // 0x3c
};

struct UCrowVehicleDamageHandler {
	ACrowVehiclePawn* Vehicle; // 0xb0
	AActor* DestroyedVehicle; // 0xb8
	UCrowVehicleParam* VehicleParam; // 0xc0
	UCrowBattleStatus* BattleStatus; // 0xc8
	FCrowVehicleDamageSetup DamageSetup; // 0xd0
	FTimerHandle Timer_Burning; // 0x170
	float LastTakeHitTimeTimeout; // 0x178
	FCrowVehicleDamageEffect CurrentDamageEffect; // 0x180
	UDamageType* DamageType; // 0x1c0
	FTimerHandle EnginePowerDropEndTimerHandle; // 0x1c8
	FTimerHandle EnginePowerDropRecoverTimerHandle; // 0x1d0
	float EnginePowerDropRecoverTimeSecond; // 0x1d8
};

struct UWindDirectionalSourceComponent {
	float Strength; // 0x1f8
	float Speed; // 0x1fc
	float MinGustAmount; // 0x200
	float MaxGustAmount; // 0x204
	float Radius; // 0x208
	char bPointWind : 1; // 0x20c
};

struct UCrowGameResultTDMWidget {
	UTextBlock* TXT_Result; // 0x368
	UTextBlock* TXT_TimeResult; // 0x370
	UTextBlock* TXT_BlueScore; // 0x378
	UTextBlock* TXT_RedScore; // 0x380
	UWidgetSwitcher* WS_Status; // 0x388
	UCrowButton* WB_BT_Exit; // 0x390
	UWidgetAnimation* AniResultStart; // 0x398
	UWidgetAnimation* AniBlueTeamWin; // 0x3a0
	UWidgetAnimation* AniRedTeamWin; // 0x3a8
	UWidgetAnimation* AniDraw; // 0x3b0
};

struct ACrowWorldEventBase {
	UBoxComponent* Root; // 0x228
	USceneComponent* IconLocation; // 0x230
	bool Reactivation; // 0x238
	float LeftTimeAfterActivation; // 0x23c
	float TimeLimit; // 0x240
	FText EventActivationTitle; // 0x248
	FText EventActivationDescription; // 0x260
	TArray<FString> EventActivationDescriptionList; // 0x278
	FText BeforeObjectiveTitle; // 0x288
	FText BeforeObjective; // 0x2a0
	FText AfterObjectiveTitle; // 0x2b8
	FText AfterObjective; // 0x2d0
	bool DisplaySuccessUI; // 0x2e8
	FText SuccessText; // 0x2f0
	UObject* SuccessIcon; // 0x308
	bool DisplayFailUI; // 0x310
	FText FailText; // 0x318
	UObject* FailIcon; // 0x330
	FWorldEventInfo EventInfo; // 0x338
	TArray<AActor*> EventObjectiveActorArray; // 0x340
	ACrowWorldEventSetting* WorldEventSetting; // 0x350
};

struct USelfUnionMeshesToolProperties {
	bool bAttemptFixHoles; // 0x60
	bool bShowNewBoundaryEdges; // 0x61
	bool bTrimFlaps; // 0x62
	double WindingNumberThreshold; // 0x68
	bool bOnlyUseFirstMeshMaterials; // 0x70
};

struct AMatineeActorCameraAnim {
	UCameraAnim* CameraAnim; // 0x2c8
};

struct ACrowRaymarchActor {
	UMaterialInterface* MaterialInterface; // 0x230
	UMaterialInstanceDynamic* Mid; // 0x238
};

struct UEditableGameplayTagQueryExpression_AllExprMatch {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UMovieSceneCapture {
	FSoftClassPath ImageCaptureProtocolType; // 0x38
	FSoftClassPath AudioCaptureProtocolType; // 0x50
	UMovieSceneImageCaptureProtocolBase* ImageCaptureProtocol; // 0x68
	UMovieSceneAudioCaptureProtocolBase* AudioCaptureProtocol; // 0x70
	FMovieSceneCaptureSettings Settings; // 0x78
	bool bUseSeparateProcess; // 0xe8
	bool bCloseEditorWhenCaptureStarts; // 0xe9
	FString AdditionalCommandLineArguments; // 0xf0
	FString InheritedCommandLineArguments; // 0x100
};

struct UCrowConqustVehicleDestroyer {
	ACrowVehiclePawn* VehiclePawn; // 0xb0
	ACrowGameStateConquest* GameStateConquest; // 0xb8
};

struct UCSGMeshesTool {
	UCSGMeshesToolProperties* CSGProperties; // 0xf0
	ULineSetComponent* DrawnLineSet; // 0x108
};

struct UOculusMR_Settings {
	EOculusMR_ClippingReference ClippingReference; // 0x28
	bool bUseTrackedCameraResolution; // 0x29
	int32_t WidthPerView; // 0x2c
	int32_t HeightPerView; // 0x30
	float CastingLatency; // 0x34
	FColor BackdropColor; // 0x38
	float HandPoseStateLatency; // 0x3c
	FColor ChromaKeyColor; // 0x40
	float ChromaKeySimilarity; // 0x44
	float ChromaKeySmoothRange; // 0x48
	float ChromaKeySpillRange; // 0x4c
	EOculusMR_PostProcessEffects ExternalCompositionPostProcessEffects; // 0x50
	bool bIsCasting; // 0x51
	EOculusMR_CompositionMethod CompositionMethod; // 0x52
	EOculusMR_CameraDeviceEnum CapturingCamera; // 0x53
};

struct UConstantQNRTSettings {
	float StartingFrequency; // 0x28
	int32_t NumBands; // 0x2c
	float NumBandsPerOctave; // 0x30
	float AnalysisPeriod; // 0x34
	bool bDownmixToMono; // 0x38
	EConstantQFFTSizeEnum FFTSize; // 0x39
	EFFTWindowType WindowType; // 0x3a
	EAudioSpectrumType SpectrumType; // 0x3b
	float BandWidthStretch; // 0x3c
	EConstantQNormalizationEnum CQTNormalization; // 0x40
	float NoiseFloorDb; // 0x44
};

struct UMockDataMeshTrackerComponent {
	FMulticastInlineDelegate OnMeshTrackerUpdated; // 0x1f8
	bool ScanWorld; // 0x208
	bool RequestNormals; // 0x209
	bool RequestVertexConfidence; // 0x20a
	EMeshTrackerVertexColorMode VertexColorMode; // 0x20b
	TArray<FColor> BlockVertexColors; // 0x210
	FLinearColor VertexColorFromConfidenceZero; // 0x220
	FLinearColor VertexColorFromConfidenceOne; // 0x230
	float UpdateInterval; // 0x240
	UMRMeshComponent* MRMesh; // 0x248
};

struct ACrowItemWeaponParts {
	bool UseDefaultSettings; // 0x308
	ECrowItemType PartsType; // 0x309
	uint32_t PartsIndex; // 0x30c
	FCrowWeaponPartsTableRow ItemTable; // 0x318
};

struct UTextBlockWidgetStyle {
	FTextBlockStyle TextBlockStyle; // 0x30
};

struct UCrowScoreInfoDeathMatchWidget {
	UCrowScoreInfoDeathMatchListItem* ScoreInfoListItem; // 0x368
	ACrowGameStateBase* CrowGameStateBase; // 0x370
	ACrowPlayerStateBase* LocalPlayerState; // 0x378
	UVerticalBox* VB_RedTeamList; // 0x380
	UImage* IMG_RedTeamIcon; // 0x388
	UTextBlock* TB_RedTeamName; // 0x390
	UTextBlock* TB_RedTeamScore; // 0x398
	UVerticalBox* VB_BlueTeamList; // 0x3a0
	UImage* IMG_BlueTeamIcon; // 0x3a8
	UTextBlock* TB_BlueTeamScore; // 0x3b0
	UTextBlock* TB_BlueTeamName; // 0x3b8
	UCrowObjectiveTimeWidget* TimeWidget; // 0x3c0
	TArray<FCrowScoreListItemData> RedTeamPlayerList; // 0x3c8
	TArray<FCrowScoreListItemData> BlueTeamPlayerList; // 0x3d8
};

struct UShadowMapTexture2D {
	EShadowMapFlags ShadowmapFlags; // 0x100
};

struct UBrushRemeshProperties {
	bool bEnableRemeshing; // 0x70
	int32_t TriangleSize; // 0x74
	int32_t PreserveDetail; // 0x78
};

struct UGameplayTask_WaitDelay {
	FMulticastInlineDelegate OnFinish; // 0x68
};

struct UPaperTileMapComponent {
	int32_t MapWidth; // 0x468
	int32_t MapHeight; // 0x46c
	int32_t TileWidth; // 0x470
	int32_t TileHeight; // 0x474
	UPaperTileSet* DefaultLayerTileSet; // 0x478
	UMaterialInterface* Material; // 0x480
	TArray<UPaperTileLayer*> TileLayers; // 0x488
	FLinearColor TileMapColor; // 0x498
	int32_t UseSingleLayerIndex; // 0x4a8
	bool bUseSingleLayer; // 0x4ac
	UPaperTileMap* TileMap; // 0x4b0
};

struct UBasicReplicationGraph {
	UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x498
	UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4a0
	TArray<FConnectionAlwaysRelevantNodePair> AlwaysRelevantForConnectionList; // 0x4a8
	TArray<AActor*> ActorsWithoutNetConnection; // 0x4b8
};

struct UParticleModuleParameterDynamic_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x48
};

struct UCrowClanNoticeWidget {
	UEditableText* ETB_NoticeInput; // 0x348
	UCrowButton* BT_Confirm; // 0x350
	UCrowButton* BT_Cancel; // 0x358
};

struct UBodySetup {
	FKAggregateGeom AggGeom; // 0x48
	char bAlwaysFullAnimWeight : 1; // 0xa0
	char bConsiderForBounds : 1; // 0xa0
	char bMeshCollideAll : 1; // 0xa0
	char bDoubleSidedGeometry : 1; // 0xa0
	char bGenerateNonMirroredCollision : 1; // 0xa0
	char bSharedCookedData : 1; // 0xa0
	char bGenerateMirroredCollision : 1; // 0xa0
	char bSupportUVsAndFaceRemap : 1; // 0xa0
	UPhysicalMaterial* PhysMaterial; // 0xa8
	FWalkableSlopeOverride WalkableSlopeOverride; // 0xb0
	FBodyInstance DefaultInstance; // 0x128
	FVector BuildScale3D; // 0x288
};

struct APlanarReflection {
	UPlanarReflectionComponent* PlanarReflectionComponent; // 0x230
	bool bShowPreviewPlane; // 0x238
};

struct UCrowHUDWidgetFullScreenBottom {
	UCrowWeaponZoomWidget* WB_ScopeZoomWidget; // 0x348
	UCrowDamageEffectWidget* WB_DamageEffect; // 0x350
	UCrowDamageIndicatorWidget* WB_DamageIndicator; // 0x358
	UCanvasPanel* CP_ZetaHUD; // 0x360
	UCanvasPanel* CP_ZombieHUD; // 0x368
	UCrowZombieHealWidget* WB_ZombieHeal; // 0x370
};

struct USynthComponentMonoWaveTable {
	FMulticastInlineDelegate OnTableAltered; // 0x6c0
	FMulticastInlineDelegate OnNumTablesChanged; // 0x6d0
	UMonoWaveTableSynthPreset* CurrentPreset; // 0x6e0
};

struct UCrowUAVSupportTargetIcon {
	UImage* IMG_Effect; // 0x3d8
};

struct USoundNodeBranch {
	FName BoolParameterName; // 0x48
};

struct UCrowWheeledStateBase {
	UCrowWheeledFSM* WheeledFSM; // 0x48
};

struct UPolyEditSetUVProperties {
	bool bShowMaterial; // 0x60
};

struct UAnimSharingStateInstance {
	UAnimSequence* AnimationToPlay; // 0x2b8
	float PermutationTimeOffset; // 0x2c0
	float PlayRate; // 0x2c4
	bool bStateBool; // 0x2c8
	UAnimSharingInstance* Instance; // 0x2d0
};

struct UInAppPurchaseRestoreCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UCrowVoiceChatTableManager {
	TMap<ECrowVoiceChannel, FCrowVoiceChatChannelTableRow> VoiceChatChannelList; // 0x28
};

struct ACrowSpectatorPawnBase {
	ACrowPlayerStateBase* AttachedPlayerState; // 0x2a8
	ACrowGameHUDBase* GameHUDBase; // 0x2b0
	APawn* LastViewTarget; // 0x2b8
	ACrowSpectatorIconActor* LocalBodyIconActor; // 0x2c0
	ACrowSpectatorIconActor* KillerIconActor; // 0x2c8
	bool bIsFreeView; // 0x2d0
	bool bIsBoardVehicle; // 0x2d1
	int8_t VehicleSeatIndex; // 0x2d2
	bool bIsSkydiving; // 0x2d3
	char CameraMode; // 0x2d4
	bool bIsLockToggleView; // 0x2d5
	FVector2D ViewPitchMinMax; // 0x2d8
	uint64_t WaitAttachedServerKey; // 0x2e0
	bool bIsWaitAttachedPawnToReplicated; // 0x2e8
	float WaitAttachedPawnRate; // 0x2ec
};

struct UParticleModuleKillHeight {
	FRawDistributionFloat Height; // 0x30
	char bAbsolute : 1; // 0x60
	char bFloor : 1; // 0x60
	char bApplyPSysScale : 1; // 0x60
};

struct UMaterialFunctionInterface {
	FGuid StateId; // 0x28
	EMaterialFunctionUsage MaterialFunctionUsage; // 0x38
};

struct UCrowCustomInvitePopupWidget {
	UCrowButton* BT_Close; // 0x348
	UScrollBox* SB_FriendsList; // 0x350
	UCrowFriendSlotWidget* FriendSlotWidgetClass; // 0x358
};

struct UGameMapsSettings {
	FString LocalMapOptions; // 0x28
	FSoftObjectPath TransitionMap; // 0x38
	bool bUseSplitscreen; // 0x50
	ETwoPlayerSplitScreenType TwoPlayerSplitscreenLayout; // 0x51
	EThreePlayerSplitScreenType ThreePlayerSplitscreenLayout; // 0x52
	EFourPlayerSplitScreenType FourPlayerSplitscreenLayout; // 0x53
	bool bOffsetPlayerGamepadIds; // 0x54
	FSoftClassPath GameInstanceClass; // 0x58
	FSoftObjectPath GameDefaultMap; // 0x70
	FSoftObjectPath ServerDefaultMap; // 0x88
	FSoftClassPath GlobalDefaultGameMode; // 0xa0
	FSoftClassPath GlobalDefaultServerGameMode; // 0xb8
	TArray<FGameModeName> GameModeMapPrefixes; // 0xd0
	TArray<FGameModeName> GameModeClassAliases; // 0xe0
};

struct UDistributionFloatConstantCurve {
	FInterpCurveFloat ConstantCurve; // 0x38
};

struct UNavRelevantComponent {
	char bAttachToOwnersRoot : 1; // 0xd4
	UObject* CachedNavParent; // 0xd8
};

struct UVirtualTextureBuilder {
	UVirtualTexture2D* Texture; // 0x28
	uint64_t BuildHash; // 0x30
};

struct UMaterialExpressionTangent {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UProceduralCylinderToolProperties {
	float Radius; // 0x70
	float Height; // 0x74
	int32_t RadialSlices; // 0x78
	int32_t HeightSubdivisions; // 0x7c
};

struct UCrowKillFeedIconTableManager {
	TMap<ECrowDamageCauser, UPaperSprite*> KillFeedIconTable; // 0x28
};

struct UBTService_BlackboardBase {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UCrowKitBomberIconWidget {
	UImage* IMG_Icon; // 0x348
	ACrowKitBomber* BomberActor; // 0x350
};

struct UCrowParachuteStatusWidget {
	UCanvasPanel* CP_Root; // 0x348
	UTextBlock* TB_Count; // 0x350
	URichTextBlock* RTB_BindedKey; // 0x358
	uint32_t PrevCount; // 0x360
};

struct UConnectionCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UCrowHUDWidgetDefault {
	UCrowStatusWidget* WB_StatusWidget; // 0x348
	UCrowToastMessageWidget* WB_ToastMessage; // 0x350
	UCrowCompassInfoWIdget* WB_CompassInfo; // 0x358
	UCrowKillFeedWidget* WB_KillfeedWidget; // 0x360
	UCrowProgressBarWidget* WB_InteractionProgress; // 0x368
	UCrowTutorialInfoWidget* WB_TutorialInfo_01; // 0x370
	UCrowTutorialInfoWidget* WB_TutorialInfo; // 0x378
	UCrowTutorialInfoWidget* WB_TutorialInfo_02; // 0x380
	UCrowTutorialInfoWidget* WB_TutorialDoor; // 0x388
	UCrowMedalInfoWidget* WB_MedalInfo; // 0x390
	UCrowMinimapInfoWidget* WB_Minimap; // 0x398
	UCrowHealWidget* WB_HealWidget; // 0x3a0
	UCrowHitMarkerWidget* WB_HitMarker; // 0x3a8
	UCrowPlayerWeaponListWidget* WB_Weapon_List_Player; // 0x3b0
	UCrowToolTipPingWidget* WB_ToolTip_Ping; // 0x3b8
	UCrowInteractionProgressCircleWidget* WB_InteractionProgress_Circle; // 0x3c0
	UCrowZeroingWidget* WB_zeroing; // 0x3c8
	UCrowInGameMissionAlarmWidget* WB_InGameMissionAlarm; // 0x3d0
	UCrowFPSWidget* WB_CrowHUD_FPS; // 0x3d8
	UCrowGuideMessageWidget* WB_Tutorial_Heal_Bottom; // 0x3e0
	UCrowHUDWeaponUnlockWidget* WB_HUD_WeaponUnlock; // 0x3e8
	UCrowGasMaskStatusWidget* WB_StatusGasMask; // 0x3f0
	UCrowParachuteStatusWidget* WB_StatusParachute; // 0x3f8
	UCrowSupplyGainMessage* WB_DeathMatch_Obtain; // 0x400
	UWidgetAnimation* HideAnimation; // 0x408
	UCrowObjectiveWidget* WB_Objective_Mod; // 0x410
	UCrowObjectiveBombMissionWidget* WB_Objective_BombMission; // 0x418
	ACrowCharacterPawn* CrowCharacterPawn; // 0x420
	TMap<AActor*, UCrowIndicatorInfo*> Indicators; // 0x428
	TArray<FCrowWeaponEventInfo> WeaponUIEventInfoQueue; // 0x478
};

struct UNiagaraEffectType {
	ENiagaraScalabilityUpdateFrequency UpdateFrequency; // 0x28
	ENiagaraCullReaction CullReaction; // 0x2c
	UNiagaraSignificanceHandler* SignificanceHandler; // 0x30
	TArray<FNiagaraSystemScalabilitySettings> DetailLevelScalabilitySettings; // 0x38
	FNiagaraSystemScalabilitySettingsArray SystemScalabilitySettings; // 0x48
	FNiagaraEmitterScalabilitySettingsArray EmitterScalabilitySettings; // 0x58
};

struct UInAppPurchaseQueryCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UReplicationGraphNode_AlwaysRelevant_ForConnection {
	TArray<FAlwaysRelevantActorInfo> PastRelevantActors; // 0x110
};

struct UCrowWorldLODSetting {
	FMeshProxySettings ActorLODMeshSetting; // 0x28
	FName MeshLODGroupName; // 0xd0
	TArray<float> MeshLODScreenSizeArray; // 0xd8
};

struct UMovieSceneTrackInstanceSystem {
	UMovieSceneTrackInstanceInstantiator* Instantiator; // 0x40
};

struct UMaterialExpressionShadowReplace {
	FExpressionInput Default; // 0x40
	FExpressionInput Shadow; // 0x54
};

struct UMagicLeapARPinComponent {
	FString ObjectUID; // 0x1f8
	int32_t UserIndex; // 0x208
	EMagicLeapAutoPinType AutoPinType; // 0x20c
	bool bShouldPinActor; // 0x20d
	UMagicLeapARPinSaveGame* PinDataClass; // 0x210
	TSet<EMagicLeapARPinType> SearchPinTypes; // 0x218
	USphereComponent* SearchVolume; // 0x268
	FMulticastInlineDelegate OnPersistentEntityPinned; // 0x270
	FMulticastInlineDelegate OnPersistentEntityPinLost; // 0x280
	FMulticastInlineDelegate OnPinDataLoadAttemptCompleted; // 0x290
	FGuid PinnedCFUID; // 0x2a0
	USceneComponent* PinnedSceneComponent; // 0x2b0
	UMagicLeapARPinSaveGame* PinData; // 0x2b8
};

struct UBTService {
	float Interval; // 0x60
	float RandomDeviation; // 0x64
	char bCallTickOnSearchStart : 1; // 0x68
	char bRestartTimerOnEachActivation : 1; // 0x68
};

struct USourceEffectEQPreset {
	FSourceEffectEQSettings Settings; // 0xa0
};

struct UCrowWorldSplineHavestComponent {
	float HavestDistance; // 0xc0
	TArray<UStaticMesh*> VariationMeshes; // 0xc8
};

struct UMaterialExpressionInverseLinearInterpolate {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Value; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstValue; // 0x84
	bool bClampResult; // 0x88
};

struct UCrowColorTableManager {
	TMap<FString, FCrowColorTableRow> ColorData; // 0x28
};

struct ULandscapeComponent {
	int32_t SectionBaseX; // 0x440
	int32_t SectionBaseY; // 0x444
	int32_t ComponentSizeQuads; // 0x448
	int32_t SubsectionSizeQuads; // 0x44c
	int32_t NumSubsections; // 0x450
	UMaterialInterface* OverrideMaterial; // 0x458
	UMaterialInterface* OverrideHoleMaterial; // 0x460
	TArray<FLandscapeComponentMaterialOverride> OverrideMaterials; // 0x468
	TArray<UMaterialInstanceConstant*> MaterialInstances; // 0x478
	TArray<UMaterialInstanceDynamic*> MaterialInstancesDynamic; // 0x488
	TArray<int8_t> LODIndexToMaterialIndex; // 0x498
	TArray<int8_t> MaterialIndexToDisabledTessellationMaterial; // 0x4a8
	UTexture2D* XYOffsetmapTexture; // 0x4b8
	FVector4 WeightmapScaleBias; // 0x4c0
	float WeightmapSubsectionOffset; // 0x4d0
	FVector4 HeightmapScaleBias; // 0x4e0
	FBox CachedLocalBox; // 0x4f0
	LazyObjectProperty CollisionComponent; // 0x50c
	UTexture2D* HeightmapTexture; // 0x528
	TArray<FWeightmapLayerAllocationInfo> WeightmapLayerAllocations; // 0x530
	TArray<UTexture2D*> WeightmapTextures; // 0x540
	ULandscapeLODStreamingProxy* LODStreamingProxy; // 0x550
	FGuid MapBuildDataId; // 0x558
	TArray<FGuid> IrrelevantLights; // 0x568
	int32_t CollisionMipLevel; // 0x578
	int32_t SimpleCollisionMipLevel; // 0x57c
	float NegativeZBoundsExtension; // 0x580
	float PositiveZBoundsExtension; // 0x584
	float StaticLightingResolution; // 0x588
	int32_t ForcedLOD; // 0x58c
	int32_t LODBias; // 0x590
	FGuid StateId; // 0x594
	FGuid BakedTextureMaterialGuid; // 0x5a4
	UTexture2D* GIBakedBaseColorTexture; // 0x5b8
	char MobileBlendableLayerMask; // 0x5c0
	UMaterialInterface* MobileMaterialInterface; // 0x5c8
	TArray<UMaterialInterface*> MobileMaterialInterfaces; // 0x5d0
	TArray<UTexture2D*> MobileWeightmapTextures; // 0x5e0
};

struct USlateBrushAsset {
	FSlateBrush Brush; // 0x28
};

struct UGeometryCacheCodecBase {
	TArray<int32_t> TopologyRanges; // 0x28
};

struct UCrowCharacterSubAnimBase {
	bool bIsPeekLeft; // 0x2f8
	bool bIsPeekRight; // 0x2f9
	bool bUseMotionlessOnAim; // 0x2fa
	bool bIsHandlingWeapon; // 0x2fb
};

struct UARComponent {
	FGuid NativeID; // 0x1f8
	bool bUseDefaultReplication; // 0x238
	UMaterialInterface* DefaultMeshMaterial; // 0x240
	UMaterialInterface* DefaultWireframeMeshMaterial; // 0x248
	UMRMeshComponent* MRMeshComponent; // 0x250
	UARTrackedGeometry* MyTrackedGeometry; // 0x258
};

struct ACrowMapZoneMarker {
	FCrowGameIconDisplayInfo MapZoneMarkerIcon; // 0x220
	FText ZoneName; // 0x2a8
};

struct UCrowWorldDestroyer {
	AActor* MeteorRTMask; // 0xb0
	UTextureRenderTarget2D* RenderTargetTexture; // 0xb8
};

struct ACameraRig_Rail {
	float CurrentPositionOnRail; // 0x220
	bool bLockOrientationToRail; // 0x224
	USceneComponent* TransformComponent; // 0x228
	USplineComponent* RailSplineComponent; // 0x230
	USceneComponent* RailCameraMount; // 0x238
};

struct ULandscapeHeightfieldCollisionComponent {
	TArray<ULandscapeLayerInfoObject*> ComponentLayerInfos; // 0x440
	int32_t SectionBaseX; // 0x450
	int32_t SectionBaseY; // 0x454
	int32_t CollisionSizeQuads; // 0x458
	float CollisionScale; // 0x45c
	int32_t SimpleCollisionSizeQuads; // 0x460
	TArray<char> CollisionQuadFlags; // 0x468
	FGuid HeightfieldGuid; // 0x478
	FBox CachedLocalBox; // 0x488
	LazyObjectProperty RenderComponent; // 0x4a4
	TArray<UPhysicalMaterial*> CookedPhysicalMaterials; // 0x4d0
};

struct UGeometryCollectionCache {
	FRecordedTransformTrack RecordedData; // 0x28
	UGeometryCollection* SupportedCollection; // 0x38
	FGuid CompatibleCollectionState; // 0x40
};

struct UCrowCharacterSkydivingComponent {
	ECrowSkydivingState State; // 0xb0
	ECrowSkydivingAnimState AnimState; // 0xb1
	ACrowSkydivingPawn* SkydivingPawnClass; // 0xb8
	ACrowSkydivingPawn* ParachuteSkillClass; // 0xc0
	ACrowSkydivingPawn* SkydivingPawn; // 0xc8
	bool bIsReadyToSkydiving; // 0xd0
	char ParachuteSkillCount; // 0xd1
	FTimerHandle AltitudeTimerHandle; // 0xd8
	float ParachuteSpreadHeight; // 0xe0
	float ParachuteSpreadCheckOffsetX; // 0xe4
	float ParachuteSpreadCheckOffsetZ; // 0xe8
	float ParachuteSpreadCheckDist; // 0xec
	FVector ParachuteSpreadCheckBoxHalfSize; // 0xf0
	FName ParachuteSkillKeyName; // 0xfc
	bool bReadyToUseParachuteSkill; // 0x104
	bool bUseDebugAltitude; // 0x105
	ACrowCharacterPawn* CharacterPawn; // 0x108
};

struct UCrowCharacterSubAnimOnGround {
	FCrowCharacterAimOffsetDepends AimOffsetDepends; // 0x300
	FCrowCharacterMontageDepends MontagesDepends; // 0x350
	float LerpedGaitValue; // 0x3a0
	float SprintBlendSpeed; // 0x3a4
};

struct UCrowGameModDetailWidget {
	UCrowSelectModButtonWidget* SelectModButtonWidgetClass; // 0x348
	UCrowMapSelectButtonWidget* MapSelectButtonWidgetClass; // 0x350
	UCanvasPanel* CP_Gamemod_QuickplaySetting; // 0x358
	UVerticalBox* VB_QuickModList; // 0x360
	UScrollBox* SCB_QuickMapList; // 0x368
	UTextBlock* TB_QuickMODName; // 0x370
	UTextBlock* TB_QuickMapName; // 0x378
	UTextBlock* TB_QuickMapDescription; // 0x380
	UCrowButton* BT_QuickDefault; // 0x388
	UCrowButton* BT_QuickApply; // 0x390
	UCanvasPanel* CP_Gamemod_Setting; // 0x398
	UImage* IMG_GameMod; // 0x3a0
	UTextBlock* TB_LeftModName; // 0x3a8
	UTextBlock* TB_LeftModDescription; // 0x3b0
	UScrollBox* SCB_MapList; // 0x3b8
	UTextBlock* TB_MODName; // 0x3c0
	UTextBlock* TB_MapName; // 0x3c8
	UTextBlock* TB_MapDescription; // 0x3d0
	UCrowButton* BT_Apply; // 0x3d8
	UCanvasPanel* CP_Gamemod_Select; // 0x3e0
	UCrowSelectModButtonBigWidget* WB_ModQuickMatch_button; // 0x3e8
	UCrowSelectModButtonBigWidget* WB_ModSquadMatch_button; // 0x3f0
	UCrowSelectModButtonBigWidget* WB_ModConquestMatch_button; // 0x3f8
	UCrowSelectModButtonBigWidget* WB_ModCustomMatch_button; // 0x400
	UCrowSelectModButtonBigWidget* WB_ModTraining_button; // 0x408
	UCrowCustomWaitingRoomWidget* WB_CustomWaitingRoom; // 0x410
	ECrowGameMode SelectedGameMode; // 0x418
	uint32_t SelectedMapIndex; // 0x41c
	ECrowGameMode SelectedQuickGameMode; // 0x420
	TArray<FCrowMatchInfo> SelectedQuickMatchInfos; // 0x428
	TArray<UCrowSelectModButtonBigWidget*> ModButtonBigWidgetArray; // 0x438
};

struct USmoothMeshTool {
	USmoothMeshToolProperties* SmoothProperties; // 0x400
	UIterativeSmoothProperties* IterativeProperties; // 0x408
	UDiffusionSmoothProperties* DiffusionProperties; // 0x410
	UImplicitSmoothProperties* ImplicitProperties; // 0x418
	USmoothWeightMapSetProperties* WeightMapProperties; // 0x420
};

struct ASceneCapture2D {
	USceneCaptureComponent2D* CaptureComponent2D; // 0x230
};

struct UCrowInvenItemSlot {
	bool IsShowMouseDesc; // 0x348
	ACrowItemBase* ItemData; // 0x350
	FCrowWeaponPartsTableRow WeaponPartsTableRow; // 0x358
	UCrowItemInfoWidget* ItemInfoWidget; // 0x650
	UUserWidget* ItemToolTipWidget; // 0x658
};

struct UCrowMiningPointIcon {
	UTextBlock* TB_Time; // 0x3c8
	float DisplayTimeMinDistance; // 0x3d0
	float DisplayTimeMaxDistance; // 0x3d4
};

struct ULuminRuntimeSettings {
	FString PackageName; // 0x28
	FString ApplicationDisplayName; // 0x38
	ELuminFrameTimingHint FrameTimingHint; // 0x48
	bool bProtectedContent; // 0x49
	bool bManualCallToAppReady; // 0x4a
	bool bUseMobileRendering; // 0x4b
	bool bUseVulkan; // 0x4c
	FFilePath Certificate; // 0x50
	FDirectoryPath IconModelPath; // 0x60
	FDirectoryPath IconPortalPath; // 0x70
	FLocalizedIconInfos LocalizedIconInfos; // 0x80
	int32_t VersionCode; // 0x90
	int32_t MinimumAPILevel; // 0x94
	TArray<ELuminPrivilege> AppPrivileges; // 0x98
	TArray<FLuminComponentSubElement> ExtraComponentSubElements; // 0xa8
	TArray<FLuminComponentElement> ExtraComponentElements; // 0xb8
	FString SpatializationPlugin; // 0xc8
	FString ReverbPlugin; // 0xd8
	FString OcclusionPlugin; // 0xe8
	int32_t SoundCueCookQualityIndex; // 0xf8
	bool bRemoveDebugInfo; // 0xfc
	FDirectoryPath VulkanValidationLayerLibs; // 0x100
	bool bFrameVignette; // 0x110
	TArray<FLocalizedAppName> LocalizedAppNames; // 0x118
};

struct ACrowConquestHeavyBomberActor {
	float StartDelayMin; // 0x220
	float StartDelayMax; // 0x224
	float AttackRadius; // 0x228
	char AttackCount; // 0x22c
	FWeaponDamageSettings Damage; // 0x230
	UDamageType* DamegeType; // 0x258
	float AttackDelayMin; // 0x260
	float AttackDelayMax; // 0x264
	UParticleSystem* ExplosionEffect; // 0x268
	UAkAudioEvent* FlyBySound; // 0x270
	UAkAudioEvent* ExplosionSound; // 0x278
	UAkAudioEvent* WarningFriendlySound; // 0x280
	UAkAudioEvent* WarningEnemySound; // 0x288
	UAkAudioEvent* AttackStartSound; // 0x290
	UAkAudioEvent* AttackEndSound; // 0x298
	UMatineeCameraShake* CameraShake; // 0x2a0
	float CameraShakeMinDistance; // 0x2a8
	float CameraShakeMaxDistance; // 0x2ac
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x2b0
	ECrowConquestHeavyBomberState CurrentState; // 0x338
	char OwnerTeamID; // 0x339
	uint64_t OwnerServerKey; // 0x340
	ACrowPlayerControllerBase* OwnerController; // 0x348
	TArray<FCrowHeavyBomberInfo> FireInfoArray; // 0x350
	TArray<FCrowHeavyBomberInfo> FlyByInfoArray; // 0x360
};

struct UCrowHealWidget {
	UCrowHealGauge* WB_HealGauge; // 0x348
	UCanvasPanel* CP_Message; // 0x350
	UImage* IMG_Box1; // 0x358
	UImage* IMG_Box2; // 0x360
	UTextBlock* TB_Message; // 0x368
};

struct UButton {
	USlateWidgetStyleAsset* Style; // 0x120
	FButtonStyle WidgetStyle; // 0x128
	FLinearColor ColorAndOpacity; // 0x3a0
	FLinearColor BackgroundColor; // 0x3b0
	EButtonClickMethod ClickMethod; // 0x3c0
	EButtonTouchMethod TouchMethod; // 0x3c1
	EButtonPressMethod PressMethod; // 0x3c2
	bool IsFocusable; // 0x3c3
	FMulticastInlineDelegate OnClicked; // 0x3c8
	FMulticastInlineDelegate OnPressed; // 0x3d8
	FMulticastInlineDelegate OnReleased; // 0x3e8
	FMulticastInlineDelegate OnHovered; // 0x3f8
	FMulticastInlineDelegate OnUnhovered; // 0x408
};

struct UScrollBar {
	FScrollBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x5d8
	bool bAlwaysShowScrollbar; // 0x5e0
	bool bAlwaysShowScrollbarTrack; // 0x5e1
	EOrientation Orientation; // 0x5e2
	FVector2D Thickness; // 0x5e4
	FMargin Padding; // 0x5ec
};

struct UCrowCustomizeEmotionDescWidget {
	UCrowTabOutfitWidget* WB_Customize_TopMenu; // 0x348
	UHorizontalBox* HB_CustomizeEmotion_Shop_Button; // 0x350
	UCrowButton* BT_AddShoppingBag; // 0x358
	UCrowButton* BT_Buy; // 0x360
	UCrowShoppingBagWidget* WB_Shop_Popup_ExclusivePurchase_Quick; // 0x368
	ECrowCustomizeEmotionDescState State; // 0x370
	UCrowWidgetToggleButton* CategoryEmotionWidget; // 0x378
	UCrowWidgetToggleButton* CategoryResultMVPWidget; // 0x380
	UCrowCustomizeEmotionListWidget* EmotionListWidget; // 0x388
	UCrowCustomizeEmotionRadialWidget* EmotionRadialWidget; // 0x390
	UCrowCustomizeEmotionListWidget* ResultMVPListWidget; // 0x398
	UCrowCustomizeEmotionSlotWidget* SelectedSlotWidget; // 0x3a0
	ACrowSceneLobby* SceneLobby; // 0x3a8
	ACrowLobbyCharacterPawn* LobbyCharacterPawn; // 0x3b0
	TArray<ASkeletalMeshActor*> SkeletalMeshActors; // 0x3b8
	FTimerHandle EndPlayMontageTimerHandle; // 0x3c8
	FCrowCustomizeEmotionListInfo EmotionListInfo; // 0x3d8
	FCrowCustomizeEmotionListInfo ResultMVPListInfo; // 0x400
	UAnimMontage* CurrentAnimMontage; // 0x428
	bool IsOwnList; // 0x430
};

struct UClothLODDataCommon_Legacy {
	UClothPhysicalMeshDataBase_Legacy* PhysicalMeshData; // 0x28
	FClothPhysicalMeshData ClothPhysicalMeshData; // 0x30
	FClothCollisionData CollisionData; // 0x128
};

struct ANavigationObjectBase {
	UCapsuleComponent* CapsuleComponent; // 0x228
	UBillboardComponent* GoodSprite; // 0x230
	UBillboardComponent* BadSprite; // 0x238
	char bIsPIEPlayerStart : 1; // 0x240
};

struct UEnvQueryTest {
	int32_t TestOrder; // 0x30
	EEnvTestPurpose TestPurpose; // 0x34
	FString TestComment; // 0x38
	EEnvTestFilterOperator MultipleContextFilterOp; // 0x48
	EEnvTestScoreOperator MultipleContextScoreOp; // 0x49
	EEnvTestFilterType FilterType; // 0x4a
	FAIDataProviderBoolValue BoolValue; // 0x50
	FAIDataProviderFloatValue FloatValueMin; // 0x88
	FAIDataProviderFloatValue FloatValueMax; // 0xc0
	EEnvTestScoreEquation ScoringEquation; // 0xf9
	EEnvQueryTestClamping ClampMinType; // 0xfa
	EEnvQueryTestClamping ClampMaxType; // 0xfb
	EEQSNormalizationType NormalizationType; // 0xfc
	FAIDataProviderFloatValue ScoreClampMin; // 0x100
	FAIDataProviderFloatValue ScoreClampMax; // 0x138
	FAIDataProviderFloatValue ScoringFactor; // 0x170
	FAIDataProviderFloatValue ReferenceValue; // 0x1a8
	bool bDefineReferenceValue; // 0x1e0
	char bWorkOnFloatValues : 1; // 0x1f0
};

struct USoundNodeDistanceCrossFade {
	TArray<FDistanceDatum> CrossFadeInput; // 0x48
};

struct ACrowEscapePointActor {
	UBoxComponent* BoxComponent; // 0x220
	USceneComponent* IconLocation; // 0x228
	UStaticMeshComponent* SmokeMesh; // 0x230
	USceneComponent* SmokeEffectLocation; // 0x238
	UParticleSystem* SmokeEffect; // 0x240
	UParticleSystem* DustEffect; // 0x248
	UAkAudioEvent* SmokeSoundLoop; // 0x250
	UAkAudioEvent* SmokeSoundEnd; // 0x258
	bool bEmergency; // 0x260
	ACrowEscapeHeliPawn* EscapeVehicleClass; // 0x268
	float SpawnVehicleTime; // 0x270
	float VehicleWaitTime; // 0x274
	float MoveVehicleTime; // 0x278
	FCrowGameIconDisplayInfo IconCalled; // 0x280
	FCrowGameIconDisplayInfo IconComplete; // 0x308
	ECrowEscapePointState CurrentState; // 0x390
	uint16_t PointID; // 0x392
	ACrowEscapeHeliPawn* EscapeHeliPawn; // 0x398
	char CallTeam; // 0x3a0
	USplineComponent* SplineBeginComp; // 0x3a8
	USplineComponent* SplineEndComp; // 0x3b0
	UParticleSystemComponent* SmokeEffectComponent; // 0x3b8
	UParticleSystemComponent* DustEffectComponent; // 0x3c0
};

struct UCrowLobbyLoadoutListWidget {
	UCrowButton* BT_NameChange; // 0x380
};

struct UCrowWorldOcclusion {
	char IsGridOcclusionEnabled : 1; // 0x28
	char IsVisibleGridInitialized : 1; // 0x28
	char IsPersistentLevelInitialized : 1; // 0x28
	UWorld* World; // 0x30
	UCrowWorldMapConfig* MapConfig; // 0x38
	APlayerController* PlayerController; // 0x40
	float UpdateDelay; // 0x48
	FVector ControllerLocation; // 0x4c
	TMap<ULevelStreaming*, FCrowWorldLevelStreamData> ActiveStreamingLevels; // 0x58
	FCrowWorldGrid GridOcclusion; // 0xa8
	uint32_t CurrentGridIndex; // 0xc0
	FBox CurrentGridBox; // 0xc4
	TSet<uint32_t> VisibleGridIndexes; // 0xe0
	TArray<ULevelStreaming*> LoadedLevelsCached; // 0x130
};

struct UWrapBox {
	FVector2D InnerSlotPadding; // 0x120
	float WrapWidth; // 0x128
	float WrapSize; // 0x12c
	bool bExplicitWrapWidth; // 0x130
	bool bExplicitWrapSize; // 0x131
	EOrientation Orientation; // 0x132
};

struct UPhysicsConstraintComponent {
	AActor* ConstraintActor1; // 0x1f8
	FConstrainComponentPropName ComponentName1; // 0x200
	AActor* ConstraintActor2; // 0x208
	FConstrainComponentPropName ComponentName2; // 0x210
	UPhysicsConstraintTemplate* ConstraintSetup; // 0x228
	FMulticastInlineDelegate OnConstraintBroken; // 0x230
	FConstraintInstance ConstraintInstance; // 0x240
};

struct UCrowPlayerIndicatorOutside {
	UCrowPlayerIndicatorOutSideItem* IndicatorItemClass; // 0x348
	TArray<ACrowCharacterPawn*> ArrayOutsidePlayerPawns; // 0x350
	TArray<UCrowPlayerIndicatorOutSideItem*> ArrayOutSideIndicators; // 0x360
};

struct ACrowItemCurrencyBase {
	FCrowCurrencyTableRow ItemTable; // 0x318
	bool UseDefaultSettings; // 0x4c8
	ECrowItemType CurrencyType; // 0x4c9
	uint32_t ItemIndex; // 0x4cc
	uint32_t ItemCount; // 0x4d0
};

struct UCrowLedgeComponent {
	ECrowLedgeVaultType VaultType; // 0x468
	ECrowLedgeTraceType TraceType; // 0x469
};

struct UCrowLobbySlotNameChangeWidget {
	UTextBlock* TB_CurrentSlotname; // 0x368
	UEditableTextBox* TB_Slotname_Text; // 0x370
	UCrowButton* BT_Ok; // 0x378
	UCrowButton* BT_Cancel; // 0x380
	ECrowLobbySlotType LobbySlotType; // 0x388
	int32_t TargetSlotIndex; // 0x38c
};

struct UCrowRadialMenuButtonWidget {
	UCanvasPanel* CP_Contents; // 0x348
	UCrowButton* Radial_BTN; // 0x350
	UImage* IMG_SelectRadial_BTN; // 0x358
	UImage* IMG_ItemBG; // 0x360
	UImage* IMG_ItemIcon; // 0x368
	UTextBlock* TB_Item_Name; // 0x370
	UTextBlock* TB_Item_Amount; // 0x378
	float IconAngle; // 0x3b0
	float ActivateAngleMin; // 0x3b4
	float ActivateAngleMax; // 0x3b8
	bool HideAmount; // 0x3bc
	int32_t SprayIndex; // 0x3c0
};

struct UCrowRankingScheduleTableManager {
	TMap<uint32_t, FCrowRankingScheduleTableRow> RankingScheduleTable; // 0x28
};

struct UInterpTrackInstSound {
	float LastUpdatePosition; // 0x28
	UAudioComponent* PlayAudioComp; // 0x30
};

struct UParticleModuleMeshRotationRate_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct UClothPhysicalMeshDataBase_Legacy {
	TArray<FVector> Vertices; // 0x28
	TArray<FVector> Normals; // 0x38
	TArray<uint32_t> Indices; // 0x48
	TArray<float> InverseMasses; // 0x58
	TArray<FClothVertBoneData> BoneData; // 0x68
	int32_t NumFixedVerts; // 0x78
	int32_t MaxBoneWeights; // 0x7c
	TArray<uint32_t> SelfCollisionIndices; // 0x80
};

struct UCrowCustomAppearanceListWidget {
	UGridPanel* GD_ItemList; // 0x348
	UBorder* BD_SubTitle_Color; // 0x350
	UGridPanel* GD_ColorItemList; // 0x358
	UScrollBox* SCB_Itemlist; // 0x360
	UImage* IMG_Line; // 0x368
	UTextBlock* TB_Title; // 0x370
	UHorizontalBox* HB_Appearance_SaveBT; // 0x378
	UCrowButton* WB_BT_APPLY; // 0x380
	UCrowButton* WB_BT_RESET; // 0x388
	UCrowCustomizeOutfitSlotWidget* CustomizeOutfitSlotWidgetClass; // 0x390
	UCrowItemSlotMiniWidget* CrowItemSlotMiniWidgetClass; // 0x398
	ACrowSceneLobby* SceneLobby; // 0x3a0
	UCrowCategorySlotBigWidget* CurrentCategorySlotWidget; // 0x3a8
	bool IsOwnList; // 0x3b0
	ECrowTattooType CurrTattooType; // 0x3b1
};

struct UCrowItemSlotWidget {
	UImage* IMG_Selected; // 0x348
	UImage* IMG_Equiped; // 0x350
	UCrowButton* BT_Customize_List_Slot; // 0x358
	UTextBlock* TB_ItemName; // 0x360
	UTextBlock* TB_Status; // 0x368
	UImage* IMG_Armory_Bg; // 0x370
	UCanvasPanel* CP_Lock_Armory; // 0x378
	UCanvasPanel* CP_Cost; // 0x380
	UTextBlock* TB_Label_Money; // 0x388
	UWidgetSwitcher* WS_IconIMG; // 0x390
	UImage* IMG_IconIMG_Weapon; // 0x398
	UImage* IMG_IcomIMG_Parts; // 0x3a0
	UCanvasPanel* CP_Lock; // 0x3a8
	UImage* IMG_Lock; // 0x3b0
	UTextBlock* TB_LockLv; // 0x3b8
	UImage* IMG_New; // 0x3c0
	UHorizontalBox* HB_WeaponInfo; // 0x3c8
	UTextBlock* TB_WeaponLV; // 0x3d0
	UCrowProgressBar* PB_WeaponLV; // 0x3d8
	UTextBlock* TBItemName_Sel; // 0x420
	bool Selected; // 0x428
	bool Equiped; // 0x429
	bool UnEquipBtn; // 0x42a
	bool useDeselect; // 0x42b
	bool Locked; // 0x42c
	int32_t SlotValue; // 0x430
	int32_t IntValue; // 0x434
	FCrowWeaponPartsTableRow CurrentWeaponPartsTable; // 0x438
	FCrowWeaponTableRow CurrentWeaponTable; // 0x730
	FCrowWeaponData CurrentWeaponData; // 0x1950
	FCrowWeaponAccData CurrentWeaponAccData; // 0x1ab8
	ECrowItemSlotWSType CurrentItemSlotWSType; // 0x1b68
};

struct UCrowScoreRankSlotData {
	int32_t Index; // 0x28
};

struct UPawnAction {
	UPawnAction* ChildAction; // 0x28
	UPawnAction* ParentAction; // 0x30
	UPawnActionsComponent* OwnerComponent; // 0x38
	UObject* Instigator; // 0x40
	UBrainComponent* BrainComp; // 0x48
	char bAllowNewSameClassInstance : 1; // 0x80
	char bReplaceActiveSameClassInstance : 1; // 0x80
	char bShouldPauseMovement : 1; // 0x80
	char bAlwaysNotifyOnFinished : 1; // 0x80
};

struct ABandwidthTestActor {
	FBandwidthTestGenerator BandwidthGenerator; // 0x220
};

struct UInterpTrackInstAnimControl {
	float LastUpdatePosition; // 0x28
};

struct USignificanceManager {
	FSoftClassPath SignificanceManagerClassName; // 0x108
};

struct ASpectatorBeaconHost {
	USpectatorBeaconState* State; // 0x248
	bool bLogoutOnSessionTimeout; // 0x2b0
	float SessionTimeoutSecs; // 0x2b4
	float TravelSessionTimeoutSecs; // 0x2b8
};

struct UMaterialExpressionRotator {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	float CenterX; // 0x68
	float CenterY; // 0x6c
	float Speed; // 0x70
	uint32_t ConstCoordinate; // 0x74
};

struct USubmixEffectReverbPreset {
	FSubmixEffectReverbSettings Settings; // 0xd0
};

struct UCrowWidgetCircleGauge {
	FSlateBrush BackBrush; // 0x378
	FSlateBrush GaugeBrush; // 0x400
	UMaterialInterface* GaugeMaterial; // 0x488
	float Value; // 0x490
	UMaterialInstanceDynamic* DynamicMaterial; // 0x498
	UImage* IMG_Gauge; // 0x4a0
};

struct UCrowSettingsSlotKeyBindingWidget {
	UWidgetSwitcher* WS_KeyBinding_First; // 0x348
	UImage* IMG_SavedKeyBindingIcon_First; // 0x350
	UImage* IMG_ChangeKeyBindingIcon_First; // 0x358
	UCrowButton* BT_KeyBinding_First; // 0x360
	UWidgetSwitcher* WS_KeyBinding_Second; // 0x368
	UCrowButton* BT_KeyBinding_Second; // 0x370
	UImage* IMG_SavedKeyBindingIcon_Second; // 0x378
	UImage* IMG_ChangeKeyBindingIcon_Second; // 0x380
	UImage* IMG_SavedKeyBindingIcon_First_C1; // 0x388
	UImage* IMG_SavedKeyBindingIcon_First_C2; // 0x390
	UImage* IMG_ChangeKeyBindingIcon_First_C1; // 0x398
	UImage* IMG_ChangeKeyBindingIcon_First_C2; // 0x3a0
	UImage* IMG_SavedKeyBindingIcon_Second_C1; // 0x3a8
	UImage* IMG_SavedKeyBindingIcon_Second_C2; // 0x3b0
	UImage* IMG_ChangeKeyBindingIcon_Second_C1; // 0x3b8
	UImage* IMG_ChangeKeyBindingIcon_Second_C2; // 0x3c0
	UImage* IMG_Combination_Mark; // 0x3c8
	TArray<UImage*> SavedKeyBindingIcons; // 0x3d0
	TArray<UImage*> ChangeKeyBindingIcons; // 0x3e0
	TArray<UImage*> CombinationSavedKeyBindingIcons; // 0x3f0
	TArray<UImage*> CombinationChangKeyBindingIcons; // 0x400
	TArray<FActionKeySlot> ActionSlots; // 0x410
	TArray<FAxisKeySlot> AxisSlots; // 0x420
	bool bIsEditingMode; // 0x430
	bool bIsAxisSlot; // 0x431
	UCrowSettingsSlotWidget* OwnerSlot; // 0x438
};

struct UWB_HUD_M1Abrams_Crosshair_Smoke_TP_C {
	UImage* IMG_ZoomIn_2; // 0x460
	UImage* IMG_ZoomIn_4; // 0x468
};

struct UCrowWeaponPartsUnlockTableManager {
	TMap<int32_t, FCrowWeaponPartsUnlockTableRow> UnlockWeaponPartsData; // 0x28
};

struct UWB_HUD_M1Abrams_Crosshair_Tusk_Third_C {
	UBorder* b_Crosshair; // 0x438
	UImage* ImageCenter; // 0x440
	UImage* ImageCenterBorder; // 0x448
	UImage* ImageDown; // 0x450
	UImage* ImageDownBorder; // 0x458
	UImage* ImageLeft; // 0x460
	UImage* ImageLeftBorder; // 0x468
	UImage* ImageRight; // 0x470
	UImage* ImageRightBorder; // 0x478
	UImage* ImageUp; // 0x480
	UImage* ImageUpBorder; // 0x488
	UImage* IMG_Box_CrossHair; // 0x490
};

struct UARTrackableNotifyComponent {
	FMulticastInlineDelegate OnAddTrackedGeometry; // 0xb0
	FMulticastInlineDelegate OnUpdateTrackedGeometry; // 0xc0
	FMulticastInlineDelegate OnRemoveTrackedGeometry; // 0xd0
	FMulticastInlineDelegate OnAddTrackedPlane; // 0xe0
	FMulticastInlineDelegate OnUpdateTrackedPlane; // 0xf0
	FMulticastInlineDelegate OnRemoveTrackedPlane; // 0x100
	FMulticastInlineDelegate OnAddTrackedPoint; // 0x110
	FMulticastInlineDelegate OnUpdateTrackedPoint; // 0x120
	FMulticastInlineDelegate OnRemoveTrackedPoint; // 0x130
	FMulticastInlineDelegate OnAddTrackedImage; // 0x140
	FMulticastInlineDelegate OnUpdateTrackedImage; // 0x150
	FMulticastInlineDelegate OnRemoveTrackedImage; // 0x160
	FMulticastInlineDelegate OnAddTrackedFace; // 0x170
	FMulticastInlineDelegate OnUpdateTrackedFace; // 0x180
	FMulticastInlineDelegate OnRemoveTrackedFace; // 0x190
	FMulticastInlineDelegate OnAddTrackedEnvProbe; // 0x1a0
	FMulticastInlineDelegate OnUpdateTrackedEnvProbe; // 0x1b0
	FMulticastInlineDelegate OnRemoveTrackedEnvProbe; // 0x1c0
	FMulticastInlineDelegate OnAddTrackedObject; // 0x1d0
	FMulticastInlineDelegate OnUpdateTrackedObject; // 0x1e0
	FMulticastInlineDelegate OnRemoveTrackedObject; // 0x1f0
};

struct UMyPluginObject {
	FMyPluginStruct MyStruct; // 0x28
};

struct UARCandidateImage {
	UTexture2D* CandidateTexture; // 0x30
	FString FriendlyName; // 0x38
	float Width; // 0x48
	float Height; // 0x4c
	EARCandidateImageOrientation Orientation; // 0x50
};

struct USourceEffectBitCrusherPreset {
	FSourceEffectBitCrusherSettings Settings; // 0xc0
};

struct UParticleModuleCollisionGPU {
	FRawDistributionFloat Resilience; // 0x30
	FRawDistributionFloat ResilienceScaleOverLife; // 0x60
	float Friction; // 0x90
	float RandomSpread; // 0x94
	float RandomDistribution; // 0x98
	float RadiusScale; // 0x9c
	float RadiusBias; // 0xa0
	EParticleCollisionResponse Response; // 0xa4
	EParticleCollisionMode CollisionMode; // 0xa5
};

struct UCrowDebugLogger {
	TArray<ACrowCharacterPawn*> CharArray; // 0x30
	TArray<ACrowVehiclePawn*> VehicleArray; // 0x40
	TArray<ACrowWeaponBase*> WeaponArray; // 0x50
	TSet<ACrowItemBase*> ItemArray; // 0x60
	TSet<ACrowPickupInventory*> InventoryArray; // 0xb0
};

struct UAnimSequenceLevelSequenceLink {
	FGuid SkelTrackGuid; // 0x28
	FSoftObjectPath PathToLevelSequence; // 0x38
};

struct UCrowBoatsSimEngine {
	int32_t EngineIndex; // 0x1f8
	USkeletalMeshComponent* BodyMesh; // 0x200
	UCrowBoatsConfigEngine* EngineConfig; // 0x208
	UCrowBoatsConfigBody* BodyConfig; // 0x210
	UCrowVehicleOceanTracker* OceanTracker; // 0x218
	FTransform InitialTransform; // 0x220
	FVector SubstepLocation; // 0x250
	FVector SubstepLinearForce; // 0x25c
	FVector SubstepAngularForce; // 0x268
	FCrowVehicleInputValue AccelerationInput; // 0x274
	float TargetAccelerationInput; // 0x27c
	FCrowVehicleInputValue SteeringInput; // 0x280
	float TargetSteeringInput; // 0x288
	float DebugEngineDepthRatio; // 0x28c
};

struct UNoiseField {
	float MinRange; // 0xb0
	float MaxRange; // 0xb4
	FTransform Transform; // 0xc0
};

struct UBTDecorator_CompareBBEntries {
	EBlackBoardEntryComparison Operator; // 0x68
	FBlackboardKeySelector BlackboardKeyA; // 0x70
	FBlackboardKeySelector BlackboardKeyB; // 0x98
};

struct UListViewBase {
	UUserWidget* EntryWidgetClass; // 0x108
	float WheelScrollMultiplier; // 0x110
	bool bEnableScrollAnimation; // 0x114
	bool bEnableFixedLineOffset; // 0x115
	float FixedLineScrollOffset; // 0x118
	FMulticastInlineDelegate BP_OnEntryGenerated; // 0x120
	FMulticastInlineDelegate BP_OnEntryReleased; // 0x130
	FUserWidgetPool EntryWidgetPool; // 0x140
};

struct UEnvQueryTest_Pathfinding {
	EEnvTestPathfinding TestMode; // 0x1f8
	UEnvQueryContext* Context; // 0x200
	FAIDataProviderBoolValue PathFromContext; // 0x208
	FAIDataProviderBoolValue SkipUnreachable; // 0x240
	UNavigationQueryFilter* FilterClass; // 0x278
};

struct UBTTask_CrowFindRandomPatrol {
	float PatrolRadius; // 0x98
};

struct UOceanCollisionComponent {
	UBodySetup* CachedBodySetup; // 0x440
};

struct UCrowWebEventManager {
	UCrowHttpDownloader* HttpDownloader; // 0x28
};

struct UMaterialExpressionDivide {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UCrowCustomWaitingRoomWidget {
	UCrowCustomWaitingRoomSlotWidget* CustomWaitingRoomSlotClass; // 0x348
	UCrowCustomUserSlotWidget* CustomUserSlotWidgetClass; // 0x350
	float RoomListRefreshTime; // 0x358
	uint32_t MinUser; // 0x35c
	uint32_t TeamMinUser; // 0x360
	UWidgetSwitcher* WS_CustomMod; // 0x368
	UMultiLineEditableText* EDB_SearchCustomName; // 0x370
	UCrowButton* BT_Refresh; // 0x378
	UCrowSortButtonWidget* WB_Button_Sorting_Room; // 0x380
	UCrowSortButtonWidget* WB_Button_Sorting_Mode; // 0x388
	UCrowSortButtonWidget* WB_Button_Sorting_Map; // 0x390
	UCrowSortButtonWidget* WB_Button_Sorting_UserCount; // 0x398
	UCrowSortButtonWidget* WB_Button_Sorting_State; // 0x3a0
	UVerticalBox* VB_FilterState; // 0x3a8
	UVerticalBox* VB_FilterMode; // 0x3b0
	UVerticalBox* VB_FilterMaxUser; // 0x3b8
	UVerticalBox* VB_FilterRemainSlot; // 0x3c0
	UScrollBox* SB_SessionList; // 0x3c8
	UCrowButton* BT_Join; // 0x3d0
	UCrowButton* BT_Create; // 0x3d8
	UCrowButton* BT_WaitingRoomExit; // 0x3e0
	UCrowToggleButton* BT_Customfilter; // 0x3e8
	UCanvasPanel* CP_FilterPopup; // 0x3f0
	UCrowButton* BT_FilterCancel; // 0x3f8
	UCrowButton* BT_FilterOK; // 0x400
	UWidgetSwitcher* WS_SwitchMod; // 0x408
	UVerticalBox* VB_Ateam; // 0x410
	UVerticalBox* VB_Bteam; // 0x418
	UScrollBox* SB_SquadList; // 0x420
	UVerticalBox* VB_SquadList; // 0x428
	UCanvasPanel* CP_Spctating; // 0x430
	UGridPanel* GP_SpectatingList; // 0x438
	UCanvasPanel* CP_unassigned; // 0x440
	UGridPanel* GP_unassignedList; // 0x448
	UCrowButton* BT_Setting; // 0x450
	UCrowButton* BT_Invite; // 0x458
	UCrowButton* BT_Exit; // 0x460
	UCanvasPanel* CP_CustomListDesc; // 0x468
	UCrowWidgetImage* IMG_Map; // 0x470
	UTextBlock* TB_RoomName; // 0x478
	UTextBlock* TB_ModeName; // 0x480
	UTextBlock* TB_MapName; // 0x488
	UTextBlock* TB_RoomOnwer; // 0x490
	UTextBlock* TB_UserCount; // 0x498
	UTextBlock* TB_PlayTime; // 0x4a0
	UHorizontalBox* HB_WinPoint; // 0x4a8
	UTextBlock* TB_WinPoint; // 0x4b0
	UCrowCustomCreateRoomPopupWidget* WB_Custom_CreateSession_Popup; // 0x4b8
	UCrowCustomInvitePopupWidget* WB_CustomInvitePopup; // 0x4c0
	UCrowCustomPasswordPopupWidget* WB_CustomPasswordPopup; // 0x4c8
	UCrowButton* BT_Play; // 0x4d0
	ECrowCustomMode CurrentCustomMode; // 0x4d8
	FCrowCustomDisplayRoomInfo SelectedRoomInfo; // 0x4e0
	UCrowCustomUserSlotWidget* SelectedCustomUserSlot; // 0x528
	FTimerHandle RoomListTimerHandle; // 0x530
	uint64_t KickUserID; // 0x538
	TArray<UCrowSortButtonWidget*> SortButtonList; // 0x540
	FCrowCustomFilterInfo FilterInfo; // 0x550
	FCrowCustomFilterInfo FilterInfoTemp; // 0x55c
	TMap<char, UCrowCustomSquadSlotWidget*> CustomATeamSquadMap; // 0x568
	TMap<char, UCrowCustomSquadSlotWidget*> CustomBTeamSquadMap; // 0x5b8
	TMap<char, UCrowCustomSquadSlotWidget*> CustomSquadMap; // 0x608
	TMap<char, UCrowCustomUserSlotWidget*> CustomWatcherMap; // 0x658
	TMap<char, UCrowCustomUserSlotWidget*> CustomMisassignMap; // 0x6a8
	TArray<UCrowCustomFilterSlotWidge*> FilterSlotStateArray; // 0x6f8
	TArray<UCrowCustomFilterSlotWidge*> FilterSlotGameModeArray; // 0x708
	TArray<UCrowCustomFilterSlotWidge*> FilterSlotMaxUserArray; // 0x718
	TArray<UCrowCustomFilterSlotWidge*> FilterSlotReaminSlotArray; // 0x728
	FString SearchName; // 0x738
};

struct UCrowRotorFSM {
	FCrowRotorSpinSetup SpinSetup; // 0x170
	UDataTable* GroundFxDataTable; // 0x1a0
	USoundCue* EjectWarningAudioTamplate; // 0x1a8
	UAkAudioEvent* EjectCaution_W; // 0x1b0
	UCrowCameraPivotHeliComponent* CameraPivotTP; // 0x1b8
	float RotorSpinFactor; // 0x1c0
};

struct UWidgetAnimationDelegateBinding {
	TArray<FBlueprintWidgetAnimationDelegateBinding> WidgetAnimationDelegateBindings; // 0x28
};

struct UCrowTCCompositionCDefuseHUD {
	UCrowTriggerCommandGaugeBar* TriggerCommandGaugeBar; // 0xc0
	UCrowTriggerControlComponent* TargetTriggerControlComponent; // 0xc8
};

struct UWidgetInteractionComponent {
	FMulticastInlineDelegate OnHoveredWidgetChanged; // 0x1f8
	int32_t VirtualUserIndex; // 0x218
	int32_t PointerIndex; // 0x21c
	ECollisionChannel TraceChannel; // 0x220
	float InteractionDistance; // 0x224
	EWidgetInteractionSource InteractionSource; // 0x228
	bool bEnableHitTesting; // 0x229
	bool bShowDebug; // 0x22a
	float DebugSphereLineThickness; // 0x22c
	float DebugLineThickness; // 0x230
	FLinearColor DebugColor; // 0x234
	FHitResult CustomHitResult; // 0x2c0
	FVector2D LocalHitLocation; // 0x34c
	FVector2D LastLocalHitLocation; // 0x354
	UWidgetComponent* HoveredWidgetComponent; // 0x360
	FHitResult LastHitResult; // 0x368
	bool bIsHoveredWidgetInteractable; // 0x3f4
	bool bIsHoveredWidgetFocusable; // 0x3f5
	bool bIsHoveredWidgetHitTestVisible; // 0x3f6
};

struct UDatasmithStaticMeshIFCImportData {
	FString SourceGlobalId; // 0x28
};

struct UPlatformEventsComponent {
	FMulticastInlineDelegate PlatformChangedToLaptopModeDelegate; // 0xb0
	FMulticastInlineDelegate PlatformChangedToTabletModeDelegate; // 0xc0
};

struct UMaterialExpressionSetMaterialAttributes {
	TArray<FExpressionInput> Inputs; // 0x40
	TArray<FGuid> AttributeSetTypes; // 0x50
};

struct UCrowDeathZoneManager {
	float DeathZoneLifeTime; // 0xb0
	TMap<uint32_t, FCrowDeathZoneOverlapRef> DeathZoneOverlapRefMap; // 0xb8
	UCrowLocalPostProcessComponent* PostProcessComp; // 0x108
	UCrowDeathZoneWidget* DeathZoneWidget; // 0x110
	TArray<ACrowDeathZoneMesh*> DeathZoneArray; // 0x118
};

struct UPlayerInput {
	TArray<FKeyBind> DebugExecBindings; // 0x120
	TArray<FName> InvertedAxis; // 0x160
};

struct UMeshSelectionTool {
	UMeshSelectionToolProperties* SelectionProps; // 0x200
	UMeshSelectionEditActions* SelectionActions; // 0x208
	UMeshSelectionToolActionPropertySet* EditActions; // 0x210
	UMeshSelectionSet* Selection; // 0x218
	TArray<AActor*> SpawnedActors; // 0x220
};

struct UPolyEditOffsetProperties {
	bool bUseFaceNormals; // 0x60
};

struct ASkyLight {
	USkyLightComponent* LightComponent; // 0x220
	char bEnabled : 1; // 0x228
};

struct UMaterialExpressionReroute {
	FExpressionInput Input; // 0x40
};

struct UNiagaraDataInterfaceExport {
	FNiagaraUserParameterBinding CallbackHandlerParameter; // 0x38
	ENDIExport_GPUAllocationMode GPUAllocationMode; // 0x58
	int32_t GPUAllocationFixedSize; // 0x5c
	float GPUAllocationPerParticleSize; // 0x60
};

struct UIterativeOffsetProperties {
	int32_t Steps; // 0x60
	bool bOffsetBoundaries; // 0x64
	float SmoothingPerStep; // 0x68
	bool bReprojectSmooth; // 0x6c
};

struct UMovieSceneEnumTrack {
	UEnum* Enum; // 0xb0
};

struct ACrowFxRandomActivator {
	UParticleSystem* ParticleFX; // 0x220
	bool StartPlay; // 0x228
	float StartPlayDelayTime; // 0x22c
	float TimeMin; // 0x230
	float TimeMax; // 0x234
	TArray<UAkAudioEvent*> LobbyAudioEvents; // 0x238
	TArray<UAkAudioEvent*> LobbyAudioStopEvents; // 0x248
	AActor* AudioTarget; // 0x258
	USphereComponent* SphereComponent; // 0x270
	UParticleSystemComponent* FxParticlesComp; // 0x278
};

struct UCrowPlayerIndicatorOutSideItem {
	USizeBox* SB_Indicator; // 0x348
	ACrowCharacterPawn* TargetPawn; // 0x350
};

struct UEnvQueryGenerator_Cone {
	FAIDataProviderFloatValue AlignedPointsDistance; // 0x80
	FAIDataProviderFloatValue ConeDegrees; // 0xb8
	FAIDataProviderFloatValue AngleStep; // 0xf0
	FAIDataProviderFloatValue Range; // 0x128
	UEnvQueryContext* CenterActor; // 0x160
	char bIncludeContextLocation : 1; // 0x168
};

struct ACrowSpectatorPawnCustomMode {
	bool bIsVisiblePlayerList; // 0x348
};

struct UCrowWorldMapLocationWidget {
	float GridSize; // 0x348
	TArray<FText> ArrayHorizonText; // 0x350
	TArray<FText> ArrayVerticalText; // 0x360
	UHorizontalBox* GridPanelX; // 0x378
	UVerticalBox* GridPanelY; // 0x380
	TArray<UCrowWorldMapLocationSlot*> HorizontalSlotList; // 0x388
	TArray<UCrowWorldMapLocationSlot*> VerticalSlotList; // 0x398
	UUserWidget* GridSlot; // 0x3a8
	UCanvasPanelSlot* PanelSlotX; // 0x3b0
	UCanvasPanelSlot* PanelSlotY; // 0x3b8
	FVector2D DefaultSlotPosX; // 0x3c0
	FVector2D DefaultSlotPosY; // 0x3c8
};

struct UTestMovieSceneSubTrack {
	TArray<UMovieSceneSection*> SectionArray; // 0x88
};

struct USkinnedMeshComponent {
	USkeletalMesh* SkeletalMesh; // 0x470
	TWeakObjectPtr<USkinnedMeshComponent> MasterPoseComponent; // 0x478
	TArray<ESkinCacheUsage> SkinCacheUsage; // 0x480
	TArray<FVertexOffsetUsage> VertexOffsetUsage; // 0x490
	UPhysicsAsset* PhysicsAssetOverride; // 0x598
	int32_t ForcedLodModel; // 0x5a0
	int32_t MinLodModel; // 0x5a4
	float StreamingDistanceMultiplier; // 0x5b0
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x5c0
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x5f4
	char bOverrideMinLod : 1; // 0x5f6
	char bUseBoundsFromMasterPoseComponent : 1; // 0x5f6
	char bForceWireframe : 1; // 0x5f6
	char bDisplayBones : 1; // 0x5f6
	char bDisableMorphTarget : 1; // 0x5f6
	char bHideSkin : 1; // 0x5f7
	char bPerBoneMotionBlur : 1; // 0x5f7
	char bComponentUseFixedSkelBounds : 1; // 0x5f7
	char bConsiderAllBodiesForBounds : 1; // 0x5f7
	char bSyncAttachParentLOD : 1; // 0x5f7
	char bCanHighlightSelectedSections : 1; // 0x5f7
	char bRecentlyRendered : 1; // 0x5f7
	char bCastCapsuleDirectShadow : 1; // 0x5f7
	char bCastCapsuleIndirectShadow : 1; // 0x5f8
	char bCPUSkinning : 1; // 0x5f8
	char bEnableUpdateRateOptimizations : 1; // 0x5f8
	char bDisplayDebugUpdateRateOptimizations : 1; // 0x5f8
	char bRenderStatic : 1; // 0x5f8
	char bIgnoreMasterPoseComponentLOD : 1; // 0x5f8
	char bCachedLocalBoundsUpToDate : 1; // 0x5f9
	char bForceMeshObjectUpdate : 1; // 0x5f9
	float CapsuleIndirectShadowMinVisibility; // 0x5fc
	FBoxSphereBounds CachedWorldSpaceBounds; // 0x610
	FMatrix CachedWorldToLocalTransform; // 0x630
};

struct UMaterialExpressionMaterialProxyReplace {
	FExpressionInput Realtime; // 0x40
	FExpressionInput MaterialProxy; // 0x54
};

struct AMagicLeapARPinInfoActorBase {
	FGuid PinId; // 0x220
	bool bVisibilityOverride; // 0x230
};

struct ACrowRespawnPickupInventory {
	UParticleSystemComponent* EffectActive; // 0x2b8
	UAnimationAsset* AniClose; // 0x2c0
	UAnimationAsset* AniAjar; // 0x2c8
	UAnimationAsset* AniOpen; // 0x2d0
	UAnimationAsset* AniCloseToAjar; // 0x2d8
	UAnimationAsset* AniAjarToClose; // 0x2e0
	UAnimationAsset* AniAjarToOpen; // 0x2e8
	UAnimationAsset* AniOpenToClose; // 0x2f0
	UAkAudioEvent* SoundLoop; // 0x2f8
	UAkAudioEvent* SoundLoopEnd; // 0x300
};

struct UBTNode {
	FString NodeName; // 0x30
	UBehaviorTree* TreeAsset; // 0x40
	UBTCompositeNode* ParentNode; // 0x48
};

struct ABP_CrowPickupInventory_C {
	USkeletalMeshComponent* CorpseBag1; // 0x2b8
};

struct USubsurfaceProfile {
	FSubsurfaceProfileStruct Settings; // 0x28
};

struct UWB_A10Bombard_Worldmap_C {
	UWidgetAnimation* Ani_Striking; // 0x358
};

struct UAkSettingsPerUser {
	FDirectoryPath WwiseWindowsInstallationPath; // 0x28
	FFilePath WwiseMacInstallationPath; // 0x38
	bool EnableAutomaticAssetSynchronization; // 0x48
	FString WaapiIPAddress; // 0x50
	uint32_t WaapiPort; // 0x60
	bool bAutoConnectToWAAPI; // 0x64
	bool AutoSyncSelection; // 0x65
	bool SuppressWwiseProjectPathWarnings; // 0x66
	bool SoundDataGenerationSkipLanguage; // 0x67
};

struct UBTTask_MoveTo {
	float AcceptableRadius; // 0x98
	UNavigationQueryFilter* FilterClass; // 0xa0
	float ObservedBlackboardValueTolerance; // 0xa8
	char bObserveBlackboardValue : 1; // 0xac
	char bAllowStrafe : 1; // 0xac
	char bAllowPartialPath : 1; // 0xac
	char bTrackMovingGoal : 1; // 0xac
	char bProjectGoalLocation : 1; // 0xac
	char bReachTestIncludesAgentRadius : 1; // 0xac
	char bReachTestIncludesGoalRadius : 1; // 0xac
	char bStopOnOverlap : 1; // 0xac
	char bStopOnOverlapNeedsUpdate : 1; // 0xad
};

struct UWB_BombMission_CompositionCArea_WorldMapIcon_C {
	UCrowWidgetImage* IMG_bombC4_2; // 0x348
};

struct ABP_C4_Ammo_C {
	USkeletalMeshComponent* SkeletalMesh; // 0x1960
};

struct USetCollisionGeometryToolProperties {
	ECollisionGeometryType GeometryType; // 0x60
	ESetCollisionGeometryInputMode InputMode; // 0x64
	bool bUseWorldSpace; // 0x68
	bool bRemoveContained; // 0x69
	bool bEnableMaxCount; // 0x6a
	int32_t MaxCount; // 0x6c
	float MinThickness; // 0x70
	bool bDetectBoxes; // 0x74
	bool bDetectSpheres; // 0x75
	bool bDetectCapsules; // 0x76
	bool bSimplifyHulls; // 0x77
	int32_t HullTargetFaceCount; // 0x78
	bool bSimplifyPolygons; // 0x7c
	float HullTolerance; // 0x80
	EProjectedHullAxis SweepAxis; // 0x84
	bool bAppendToExisting; // 0x88
	ECollisionGeometryMode SetCollisionType; // 0x8c
};

struct UVariant {
	TArray<FVariantDependency> Dependencies; // 0x28
	FText DisplayText; // 0x38
	TArray<UVariantObjectBinding*> ObjectBindings; // 0x68
	UTexture2D* Thumbnail; // 0x78
};

struct USynth2DSlider {
	float ValueX; // 0x108
	float ValueY; // 0x10c
	FDelegate ValueXDelegate; // 0x110
	FDelegate ValueYDelegate; // 0x120
	FSynth2DSliderStyle WidgetStyle; // 0x130
	FLinearColor SliderHandleColor; // 0x3e8
	bool IndentHandle; // 0x3f8
	bool Locked; // 0x3f9
	float StepSize; // 0x3fc
	bool IsFocusable; // 0x400
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x408
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x418
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x428
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x438
	FMulticastInlineDelegate OnValueChangedX; // 0x448
	FMulticastInlineDelegate OnValueChangedY; // 0x458
};

struct UMaterialExpressionIf {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput AGreaterThanB; // 0x68
	FExpressionInput AEqualsB; // 0x7c
	FExpressionInput ALessThanB; // 0x90
	float EqualsThreshold; // 0xa4
	float ConstB; // 0xa8
	float ConstAEqualsB; // 0xac
};

struct AVolumetricLightmapDensityVolume {
	FInt32Interval AllowedMipLevelRange; // 0x258
};

struct UCrowBuildingHISMCDetailCache {
	TMap<UStaticMesh*, FCrowBuildingHISMCDetail> CachedDetails; // 0x28
};

struct UCrowLoadingManager {
	ULevelStreamingDynamic* WeaponLoadOutLevel; // 0x30
	FCrowSceneTableRow SceneData; // 0x38
};

struct UCrowWeaponSpreadComponent {
	ECrowMovementFlags LastMovementFlags; // 0xb0
	FWeaponSpreadInfo NormalSpreadInfo; // 0xb8
	FCrowLinearCurve NormalLinearCurve; // 0x168
	FWeaponSpreadInfo AimSpreadInfo; // 0x198
	FCrowLinearCurve AimLinearCurve; // 0x248
	ECrowWeaponState WeaponState; // 0x278
	FCrowWeaponPartsOptions PartsOptions; // 0x27c
};

struct UNiagaraDataInterfaceFieldSystem {
	UBlueprint* BlueprintSource; // 0x38
	AActor* SourceActor; // 0x40
	FIntVector FieldDimensions; // 0x48
	FVector MinBounds; // 0x54
	FVector MaxBounds; // 0x60
};

struct UCrowLaserBeamComponent {
	UStaticMeshComponent* LineMesh01; // 0x1f8
	UStaticMeshComponent* LineMesh02; // 0x200
	UMaterialInterface* LaserBeamMaterial; // 0x208
	UMaterialInterface* LaserBeamSmallDecal; // 0x210
	UMaterialInterface* LaserBeamBigDecal; // 0x218
	float LaserBeamMaxDistance; // 0x220
	float LaserBeamWidth; // 0x224
	float BigDecalMaxDistance; // 0x228
	FLinearColor LaserBeamColor; // 0x22c
	float LaserBeamThickness; // 0x23c
	float LaserBeamBright; // 0x240
	bool LaserBeamVisible; // 0x244
	UMaterialInstanceDynamic* MaterialDynamic; // 0x248
	UDecalComponent* SmallDecal; // 0x250
	UDecalComponent* BigDecal; // 0x258
	TArray<AActor*> IgnoreActorArray; // 0x260
};

struct UFieldSystemComponent {
	UFieldSystem* FieldSystem; // 0x440
	TArray<TSoftObjectPtr<AChaosSolverActor>> SupportedSolvers; // 0x458
};

struct UNiagaraDataInterfaceArrayQuat {
	TArray<FQuat> QuatData; // 0x50
};

struct ACrowSupplyEventPlaneActor {
	UBoxComponent* BoxComponent; // 0x220
	UProjectileMovementComponent* MovementComp; // 0x228
	FVector StartLocation; // 0x230
	FVector EndLocation; // 0x23c
	float Speed; // 0x248
	UAkAudioEvent* SoundFlight; // 0x250
};

struct UBlackboardKeyType_Object {
	UObject* BaseClass; // 0x30
};

struct ABP_CrowWeaponPartsLaserSight_HG002_C {
	UParticleSystemComponent* FX_Wp_LaserLight_M001; // 0x260
	UCrowLaserBeamComponent* CrowLaserBeam; // 0x268
	USkeletalMeshComponent* HG_Lasersight_DOWN; // 0x270
};

struct ABP_ClaymoreMine_Ammo_C {
	UCrowLaserBeamComponent* CrowLaserBeam_R; // 0x19e0
	UCrowLaserBeamComponent* CrowLaserBeam_L; // 0x19e8
	USphereComponent* Look; // 0x19f0
	USphereComponent* Enter; // 0x19f8
	UCrowTriggerComponent* CrowTrigger; // 0x1a00
	USkeletalMeshComponent* SkeletalMesh; // 0x1a08
};

struct ACrowItemTableOverviewSKC {
	USkeletalMeshComponent* Mesh; // 0x228
};

struct UPhysicsSpringComponent {
	float SpringStiffness; // 0x1f8
	float SpringDamping; // 0x1fc
	float SpringLengthAtRest; // 0x200
	float SpringRadius; // 0x204
	ECollisionChannel SpringChannel; // 0x208
	bool bIgnoreSelf; // 0x209
	float SpringCompression; // 0x20c
};

struct UCrowProgressBar {
	bool bIsVolatilityEffect; // 0x330
	bool bIsOnlyVisibleWhileProcessing; // 0x331
	bool bUseBackgroundColorWhenReachTheZero; // 0x332
	float IncreasePercentageEffectTimeSeconds; // 0x334
	float DecreasePercentageEffectTimeSeconds; // 0x338
	FLinearColor NormalColor; // 0x33c
	FLinearColor IncreaseVolatilityColor; // 0x34c
	FLinearColor DecreaseVolatilityColor; // 0x35c
	FLinearColor BackgroundColorWhenReachTheZero; // 0x36c
	bool bIsProcess; // 0x37c
	bool bIsIncrease; // 0x37d
	float VolatilityStartPercentage; // 0x380
	float VolatilityTargetPercentage; // 0x384
	float VolatilityStartTimeSeconds; // 0x388
	FLinearColor BackgroundColor; // 0x38c
};

struct UParticleModuleColorScaleOverLife {
	FRawDistributionVector ColorScaleOverLife; // 0x30
	FRawDistributionFloat AlphaScaleOverLife; // 0x78
	char bEmitterTime : 1; // 0xa8
};

struct URevolveToolProperties {
	bool bConnectOpenProfileToAxis; // 0xb0
	bool bSnapToWorldGrid; // 0xb1
	FVector DrawPlaneOrigin; // 0xb4
	FRotator DrawPlaneOrientation; // 0xc0
	bool bEnableSnapping; // 0xcc
	bool bAllowedToEditDrawPlane; // 0xcd
};

struct UParticleModuleRequired {
	UMaterialInterface* Material; // 0x30
	float MinFacingCameraBlendDistance; // 0x38
	float MaxFacingCameraBlendDistance; // 0x3c
	FVector EmitterOrigin; // 0x40
	FRotator EmitterRotation; // 0x4c
	EParticleScreenAlignment ScreenAlignment; // 0x58
	char bUseLocalSpace : 1; // 0x59
	char bKillOnDeactivate : 1; // 0x59
	char bKillOnCompleted : 1; // 0x59
	EParticleSortMode SortMode; // 0x5a
	char bUseLegacyEmitterTime : 1; // 0x5b
	char bRemoveHMDRoll : 1; // 0x5b
	char bEmitterDurationUseRange : 1; // 0x5b
	float EmitterDuration; // 0x5c
	FRawDistributionFloat SpawnRate; // 0x60
	TArray<FParticleBurst> BurstList; // 0x90
	float EmitterDelay; // 0xa0
	float EmitterDelayLow; // 0xa4
	char bDelayFirstLoopOnly : 1; // 0xa8
	EParticleSubUVInterpMethod InterpolationMethod; // 0xa9
	char bScaleUV : 1; // 0xaa
	char bEmitterDelayUseRange : 1; // 0xaa
	EParticleBurstMethod ParticleBurstMethod; // 0xab
	char bOverrideSystemMacroUV : 1; // 0xac
	char bUseMaxDrawCount : 1; // 0xac
	EOpacitySourceMode OpacitySourceMode; // 0xad
	EEmitterNormalsMode EmitterNormalsMode; // 0xae
	char bOrbitModuleAffectsVelocityAlignment : 1; // 0xaf
	int32_t SubImages_Horizontal; // 0xb0
	int32_t SubImages_Vertical; // 0xb4
	float RandomImageTime; // 0xb8
	int32_t RandomImageChanges; // 0xbc
	FVector MacroUVPosition; // 0xc0
	float MacroUVRadius; // 0xcc
	EParticleUVFlipMode UVFlippingMode; // 0xd0
	ESubUVBoundingVertexCount BoundingMode; // 0xd1
	char bDurationRecalcEachLoop : 1; // 0xd2
	FVector NormalsSphereCenter; // 0xd4
	float AlphaThreshold; // 0xe0
	int32_t EmitterLoops; // 0xe4
	UTexture2D* CutoutTexture; // 0xe8
	int32_t MaxDrawCount; // 0xf0
	float EmitterDurationLow; // 0xf4
	FVector NormalsCylinderDirection; // 0xf8
	TArray<FName> NamedMaterialOverrides; // 0x108
};

struct UCrowPrepareMatchSquadMatchWidget {
	UTextBlock* TB_Player; // 0x348
	UTextBlock* TB_PlayerCount; // 0x350
	ECrowMatchWidgetType WidgetType; // 0x364
};

struct UMaterialExpressionDesaturation {
	FExpressionInput Input; // 0x40
	FExpressionInput Fraction; // 0x54
	FLinearColor LuminanceFactors; // 0x68
};

struct UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UCrowWheeledFSM {
	float EngineStartTime; // 0x170
	float ShutDownTime; // 0x174
	FCrowWheeledFxSetup FxSetup; // 0x178
};

struct UIpConnection {
	float SocketErrorDisconnectDelay; // 0x1b40
};

struct APlayerStart {
	FName PlayerStartTag; // 0x248
};

struct UMaterialExpressionLinearInterpolate {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Alpha; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstAlpha; // 0x84
};

struct UCombineMeshesToolProperties {
	bool bIsDuplicateMode; // 0x60
	ECombineTargetType WriteOutputTo; // 0x64
	FString OutputName; // 0x68
	FString OutputAsset; // 0x78
};

struct UAudioCaptureComponent {
	int32_t JitterLatencyFrames; // 0x6c0
};

struct UCrowCharacterSKC {
	float ComponentTransformUpdateDelayMin; // 0xed0
	float ComponentTransformUpdateDelayMax; // 0xed4
	float ComponentTransformUpdateDistanceMin; // 0xed8
	FTransform CachedWorldTransform; // 0xee0
	FTransform RootBoneRelativeTransform; // 0xf10
	float TransformUpdateDelay; // 0xf40
};

struct ACrowPlayerStateBase {
	FString PlayerNickName; // 0x328
	FCrowTeamInfo TeamInfo; // 0x338
	ECrowPlayerState CurrentState; // 0x368
	uint32_t RevivalCount; // 0x36c
	uint32_t EnemyDyingCount; // 0x370
	uint32_t KillCount; // 0x374
	uint32_t DeathCount; // 0x378
	uint32_t ComboKillCount; // 0x37c
	uint32_t Level; // 0x380
	uint64_t UserExp; // 0x388
	uint32_t PreLevel; // 0x390
	uint64_t PreUserExp; // 0x398
	uint32_t SquadScore; // 0x3a0
	ECrowBleedingType BleedingType; // 0x3a4
	float AddedDyingSecond; // 0x3a8
	bool IsReviving; // 0x3ac
	bool bIsFirstRespawnSelected; // 0x3ad
	FCrowSaveGameServerExpInfo SaveGameServerExpInfo; // 0x3b0
	FCrowTakeExpInfo TakeExpInfo; // 0x408
	uint32_t TakeTotalExp; // 0x498
	uint32_t TotalScore; // 0x49c
	uint64_t ServerKey; // 0x4a0
	int8_t VehicleSeatIndex; // 0x4a8
	int32_t BattleMoneyCount; // 0x4ac
	bool bIsDisconnected; // 0x4b0
	ECrowSkydivingState SkydivingState; // 0x4b1
	float CurrentFilterDurability; // 0x4b4
	bool bGasMaskOn; // 0x4b8
	FTimerHandle FilterContaminateTimerHandle; // 0x4c0
	FCharacterHitInfo LastHitInfo; // 0x4c8
	UCrowGameInvenComponent* GameInventory; // 0x5f8
	TArray<FCrowWeaponData> DefaultWeaponArray; // 0x600
	TArray<FCrowItemData> DefaultEquipItemArray; // 0x610
	TArray<FCrowItemData> DefaultInvenItemArray; // 0x620
	UObject* PickupInventoryClass; // 0x630
	ACrowCharacterPawn* LastCharacterPawn; // 0x638
	APawn* LastReplicatedPawn; // 0x640
	UCrowSquadInfo* SquadInfo; // 0x648
	UCrowWidgetDying* DyingWidget; // 0x650
	FCharacterHitInfo DyingLastHitInfo; // 0x658
	UCrowIngameChatHandler* ChatHandler; // 0x788
	UCrowPassengerInventory* PassengerInventory; // 0x790
	FTimerHandle SpectatingWaitTimerHandle; // 0x798
	FTransform LastCharacterPawnTransform; // 0x7a0
	FCrowResultTopPlayerInfo BackupPlayerInfo; // 0x7d0
	UCrowIngameRecordManager* IngameRecordManager; // 0x978
	int32_t SquadNumber; // 0x980
	float FilterContaminationPerSecond; // 0x984
	float MaxFilterDurablility; // 0x988
	uint32_t SupplyTableIndex; // 0x998
	TMap<EVehicleIdentity, int32_t> DestroyVehicleInfoMap; // 0x9a0
	uint32_t KillVehicleWeaponCount; // 0x9f0
	FTimerHandle GodModeTimerHandle; // 0xa28
	ACrowPlayerControllerBase* OwnerPlayerController; // 0xa30
	TArray<ACrowPlayerStateBase*> ArrayKillPlayerState; // 0xa60
	ACrowPlayerStateBase* LastKillMePlayerState; // 0xa70
	AActor* KitBomberTargetActor; // 0xa78
	FVector KitBomberUsePos; // 0xa80
	FVector KitBomberTargetPos; // 0xa8c
	int32_t BombingTableIndex; // 0xa98
	UCrowWorldMapIcon* WorldMapIcon; // 0xaa0
	int32_t RemainSquadRespawnCount; // 0xaa8
	UCrowMissionSystemManager* MissionSystem; // 0xb18
	TMap<ECrowSupplyBoxType, float> SupplyBoxPublicLastUsingTimes; // 0xb20
	UCrowBattleStatus* BattleStatus; // 0xb70
};

struct UCrowTriggerCommandDrawOutline {
	UPrimitiveComponent* TargetPrimitive; // 0xc0
};

struct UMovieSceneLevelVisibilitySection {
	ELevelVisibility Visibility; // 0xf0
	TArray<FName> LevelNames; // 0xf8
};

struct UDatasmithPointLightComponentTemplate {
	ELightUnits IntensityUnits; // 0x30
	float SourceRadius; // 0x34
	float SourceLength; // 0x38
	float AttenuationRadius; // 0x3c
};

struct UCrowCustomFilterSlotWidge {
	UCrowToggleButton* BT_Toggle; // 0x348
	UTextBlock* TB_SlotName; // 0x350
	UTextBlock* TB_SelectedSlotName; // 0x358
	uint32_t SlotValue; // 0x370
	FText LabelName; // 0x378
};

struct UFixedPlaneBrushProperties {
	bool bPropertySetEnabled; // 0x60
	bool bShowGizmo; // 0x61
	bool bSnapToGrid; // 0x62
	FVector position; // 0x64
	FQuat Rotation; // 0x70
};

struct ASphereReflectionCapture {
	UDrawSphereComponent* DrawCaptureRadius; // 0x228
};

struct UCrowHUDBombMissionWidget {
	UImage* IMGLoadout; // 0x348
	UImage* IMGBombPossession; // 0x350
	UTextBlock* TBTeamPosition; // 0x358
	UImage* IMGTeamPositionBG; // 0x360
	UCanvasPanel* CPLoadoutMessage; // 0x368
	UCrowBombMissionResultRoundWidget* ResultRoundWidget; // 0x370
	ACrowPlayerStateBombMission* PlayerStateBombMission; // 0x378
	FLinearColor RedTeamColor; // 0x380
	FLinearColor BlueTeamColor; // 0x390
	UTextBlock* TBStartMessage; // 0x3a0
	UWidgetAnimation* AniStartMessage; // 0x3a8
	UCrowStatusPlayerInfo* WB_StatusPlayerInfo_BoomMission; // 0x3b0
};

struct ALevelSequenceActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x230
	ULevelSequencePlayer* SequencePlayer; // 0x248
	FSoftObjectPath LevelSequence; // 0x250
	FLevelSequenceCameraSettings CameraSettings; // 0x268
	ULevelSequenceBurnInOptions* BurnInOptions; // 0x270
	UMovieSceneBindingOverrides* BindingOverrides; // 0x278
	char bAutoPlay : 1; // 0x280
	char bOverrideInstanceData : 1; // 0x280
	char bReplicatePlayback : 1; // 0x280
	UObject* DefaultInstanceData; // 0x288
	ULevelSequenceBurnIn* BurnInInstance; // 0x290
	bool bShowBurnin; // 0x298
};

struct UCrowStatusPlayerInfo {
	bool IsHidePlayerNum; // 0x348
	bool IsHidePlayerName; // 0x349
	float BaseSeriousWoundHPPercentage; // 0x34c
	FLinearColor NormalHPColor; // 0x350
	FLinearColor SeriousWoundHPColor; // 0x360
	UCanvasPanel* CP_PlayerName; // 0x370
	UCanvasPanel* CP_PlayerNum; // 0x378
	UCanvasPanel* CP_Dive; // 0x380
	UTextBlock* TB_NickName; // 0x388
	UTextBlock* TB_SquadNum; // 0x390
	UImage* IMG_SquadBack; // 0x398
	UImage* IMG_SquadLeader; // 0x3a0
	UImage* IMG_RankIcon; // 0x3a8
	UProgressBar* PB_NomalHPBar; // 0x3b0
	UCrowProgressBar* PB_DamagedHPBar; // 0x3b8
	UTextBlock* TB_Health; // 0x3c0
	UWidgetSwitcher* VoiceSwitcher; // 0x3c8
	UHorizontalBox* HB_UnderBar; // 0x3d0
	UCrowVivoxManager* VivoxManager; // 0x3e8
};

struct UNiagaraPreviewAxis_InterpParamLinearColor {
	FLinearColor Min; // 0x38
	FLinearColor Max; // 0x48
};

struct UMaterialExpressionGIReplace {
	FExpressionInput Default; // 0x40
	FExpressionInput StaticIndirect; // 0x54
	FExpressionInput DynamicIndirect; // 0x68
};

struct UMaterialExpressionComponentMask {
	FExpressionInput Input; // 0x40
	char R : 1; // 0x54
	char G : 1; // 0x54
	char B : 1; // 0x54
	char A : 1; // 0x54
};

struct UVoxelProperties {
	int32_t VoxelCount; // 0x60
	bool bAutoSimplify; // 0x64
	bool bRemoveInternalSurfaces; // 0x65
	double SimplifyMaxErrorFactor; // 0x68
	double CubeRootMinComponentVolume; // 0x70
};

struct UBTDecorator_CrowCooldown {
	bool ResetCooldownTimeOnInitialize; // 0x70
};

struct UDisplaceMeshSineWaveProperties {
	float SineWaveFrequency; // 0x60
	float SineWavePhaseShift; // 0x64
	FVector SineWaveDirection; // 0x68
};

struct UNiagaraDataInterfaceHairStrands {
	UGroomAsset* DefaultSource; // 0x38
	AActor* SourceActor; // 0x40
};

struct AAkSpotReflector {
	UAkAuxBus* EarlyReflectionAuxBus; // 0x220
	FString EarlyReflectionAuxBusName; // 0x228
	UAkAcousticTexture* AcousticTexture; // 0x238
	float DistanceScalingFactor; // 0x240
	float Level; // 0x244
};

struct ACLSPlayerCameraManager {
	USkeletalMeshComponent* CameraBehavior; // 0x27b0
	FTransform SmoothedPivotTarget; // 0x27c0
	FVector PivotLocation; // 0x27f0
	FVector TargetCameraLocation; // 0x27fc
	FRotator TargetCameraRotation; // 0x2808
	float SmoothedAddFOV; // 0x2814
	float PeekOffset; // 0x2818
	float PeekToNoneBlendTime; // 0x281c
	float NoneToPeekBlendTime; // 0x2820
	float CameraPeekWeight; // 0x2824
	ECLSPeekState PrePeekState; // 0x2828
	float PeekCameraInterpoationSpeed; // 0x282c
};

struct UCrowStatusSquadMatchWidget {
	UCanvasPanel* CP_Spectating; // 0x348
	UTextBlock* TB_SpectatorCount; // 0x350
	UTextBlock* TB_KillCount; // 0x358
	UTextBlock* TB_PlayerCount; // 0x360
};

struct UCrowKeyGuideWidget {
	FLinearColor BasicCategoryColor; // 0x368
	FLinearColor CombatCategoryColor; // 0x378
	FLinearColor ComunicationCategoryColor; // 0x388
	FLinearColor VehicleCategoryColor; // 0x398
};

struct UCrowObjectiveBombMissionWidget {
	UTexture2D* RedTeamBg; // 0x348
	UTexture2D* BlueTeamBg; // 0x350
	UTextBlock* TBRoundCount; // 0x358
	UTextBlock* TBEnemyTeamRoundCount; // 0x360
	UTextBlock* TBEnemyTeamPlayerCount; // 0x368
	UTextBlock* TBMyTeamRoundCount; // 0x370
	UTextBlock* TBMyTeamPlayerCount; // 0x378
	UImage* IMGEnemyTeamIconAttacker; // 0x380
	UImage* IMGEnemyTeamIconDefencer; // 0x388
	UImage* IMGMyTeamIconAttacker; // 0x390
	UImage* IMGMyTeamIconDefencer; // 0x398
	TArray<UImage*> IMGEnemyTeams; // 0x3a0
	TArray<UImage*> IMGEnemyTeamDeads; // 0x3b0
	TArray<UImage*> IMGMyTeams; // 0x3c0
	TArray<UImage*> IMGMyTeamDeads; // 0x3d0
	UImage* IMGEnemyTeamBg; // 0x3e0
	UImage* IMGMyTeamBG; // 0x3e8
	UImage* IMGBombInstall; // 0x3f0
	UImage* IMGBombInstallBG; // 0x3f8
	UWidgetAnimation* AniBombInstallAlarm; // 0x400
	UCrowObjectiveTimeWidget* TimerWidget; // 0x408
	ACrowGameStateBombMission* GameStateBombMission; // 0x410
	ECrowGameRoundState PrevGameRoundState; // 0x418
	char MAX_PLAYER_COUNT; // 0x419
};

struct UCrowdManager {
	ANavigationData* MyNavData; // 0x28
	TArray<FCrowdAvoidanceConfig> AvoidanceConfig; // 0x30
	TArray<FCrowdAvoidanceSamplingPattern> SamplingPatterns; // 0x40
	int32_t MaxAgents; // 0x50
	float MaxAgentRadius; // 0x54
	int32_t MaxAvoidedAgents; // 0x58
	int32_t MaxAvoidedWalls; // 0x5c
	float NavmeshCheckInterval; // 0x60
	float PathOptimizationInterval; // 0x64
	float SeparationDirClamp; // 0x68
	float PathOffsetRadiusMultiplier; // 0x6c
	char bResolveCollisions : 1; // 0x70
};

struct AAudioVolume {
	float Priority; // 0x258
	char bEnabled : 1; // 0x25c
	FReverbSettings Settings; // 0x260
	FInteriorSettings AmbientZoneSettings; // 0x280
	TArray<FAudioVolumeSubmixSendSettings> SubmixSendSettings; // 0x2a8
	TArray<FAudioVolumeSubmixOverrideSettings> SubmixOverrideSettings; // 0x2b8
};

struct UMagicLeapHeadTrackingNotificationsComponent {
	FMulticastInlineDelegate OnHeadTrackingLost; // 0x140
	FMulticastInlineDelegate OnHeadTrackingRecovered; // 0x150
	FMulticastInlineDelegate OnHeadTrackingRecoveryFailed; // 0x160
	FMulticastInlineDelegate OnHeadTrackingNewSessionStarted; // 0x170
};

struct UBTDecorator_IsAtLocation {
	float AcceptableRadius; // 0x90
	FAIDataProviderFloatValue ParametrizedAcceptableRadius; // 0x98
	FAIDistanceType GeometricDistanceType; // 0xd0
	char bUseParametrizedRadius : 1; // 0xd4
	char bUseNavAgentGoalLocation : 1; // 0xd4
	char bPathFindingBasedTest : 1; // 0xd4
};

struct ALevelScriptActor {
	char bInputEnabled : 1; // 0x220
};

struct ULiveLinkVirtualSubject {
	ULiveLinkRole* Role; // 0x30
	TArray<FLiveLinkSubjectName> Subjects; // 0x38
	TArray<ULiveLinkFrameTranslator*> FrameTranslators; // 0x48
};

struct UParticleModuleLocation {
	FRawDistributionVector StartLocation; // 0x30
	float DistributeOverNPoints; // 0x78
	float DistributeThreshold; // 0x7c
};

struct UCrowCustomizeWeaponAccSlotWidget {
	UImage* IMG_Selected; // 0x348
	UImage* IMG_Equiped; // 0x350
	UImage* IMG_Lock; // 0x358
	UImage* IMG_Icon; // 0x360
	UWidgetSwitcher* WS_Grade; // 0x368
	UCrowButton* BT_WeaponAccSlot; // 0x370
	UTextBlock* TB_Name; // 0x378
	UCanvasPanel* CP_Cost; // 0x380
	UTextBlock* TB_Label_Money; // 0x388
	bool Selected; // 0x3d0
	bool Equiped; // 0x3d1
	bool useDeselect; // 0x3d2
	bool Locked; // 0x3d3
	uint32_t AccIndex; // 0x3d4
	ECrowWeaponAccType AccType; // 0x3d8
	FCrowWeaponStickerInfo StickerInfo; // 0x3dc
	FCrowShopTableRow ShopTableData; // 0x3e8
};

struct UCrowMissionTabWidget {
	UCrowWidgetToggleButton* WB_MisstionTab_Daily; // 0x380
};

struct UCrowGameModeSettingsTableManager {
	TMap<ECrowGameMode, FCrowGameModeSettingsTableRow> TableMap; // 0x28
};

struct UCrowTriggerUIBase {
	ACrowCharacterPawn* CharacterOwner; // 0x28
};

struct UCrowWeaponPartsPrimarySight {
	FCrowWeaponPartsPrimarySightTableRow PartsTable; // 0x320
	FCrowWeaponPartsPrimarySightTableRow DefaultPartsData; // 0xe50
	UObject* AimMesh; // 0x1980
	UObject* AimLensMesh; // 0x1988
	UObject* DefaultMesh; // 0x1990
	UMeshComponent* DefaultMeshComponent; // 0x1998
	UCrowZeroingInfo* ZeroingInfo; // 0x19a0
};

struct ACrowWorldGridActor {
	USceneComponent* GridRoot; // 0x220
	UStaticMeshComponent* SphereMesh; // 0x228
	FCrowWorldGridZ WorldGrid; // 0x230
	FVector WorldOrigin; // 0x248
	int32_t CellSizeBits; // 0x254
	TSet<uint32_t> ResultIndexes; // 0x258
	TMap<int32_t, TWeakObjectPtr<UCrowWorldGridQueryComponent>> RegistedQueryComps; // 0x2a8
};

struct UWB_CrossHair_Landrover_Mount_C {
	UBorder* b_Crosshair; // 0x450
	UImage* ImageCenter; // 0x458
	UImage* ImageCenterBorder; // 0x460
	UImage* ImageDown; // 0x468
	UImage* ImageDownBorder; // 0x470
	UImage* ImageLeft; // 0x478
	UImage* ImageLeftBorder; // 0x480
	UImage* ImageRight; // 0x488
	UImage* ImageRightBorder; // 0x490
	UImage* ImageUp; // 0x498
	UImage* ImageUpBorder; // 0x4a0
};

struct USkeletalMeshComponent {
	UObject* AnimBlueprintGeneratedClass; // 0x690
	UAnimInstance* AnimClass; // 0x698
	UAnimInstance* AnimScriptInstance; // 0x6a0
	UAnimInstance* PostProcessAnimInstance; // 0x6a8
	FSingleAnimationPlayData AnimationData; // 0x6b0
	FVector RootBoneTranslation; // 0x6d8
	FVector LineCheckBoundsScale; // 0x6e4
	TArray<UAnimInstance*> LinkedInstances; // 0x720
	TArray<FTransform> CachedBoneSpaceTransforms; // 0x730
	TArray<FTransform> CachedComponentSpaceTransforms; // 0x740
	float GlobalAnimRateScale; // 0x8a0
	EKinematicBonesUpdateToPhysics KinematicBonesUpdateType; // 0x8a4
	EPhysicsTransformUpdateMode PhysicsTransformUpdateMode; // 0x8a5
	EAnimationMode AnimationMode; // 0x8a7
	char bDisablePostProcessBlueprint : 1; // 0x8a9
	char bUpdateOverlapsOnAnimationFinalize : 1; // 0x8a9
	char bHasValidBodies : 1; // 0x8a9
	char bBlendPhysics : 1; // 0x8a9
	char bEnablePhysicsOnDedicatedServer : 1; // 0x8a9
	char bUpdateJointsFromAnimation : 1; // 0x8a9
	char bDisableClothSimulation : 1; // 0x8aa
	char bDisableRigidBodyAnimNode : 1; // 0x8b0
	char bAllowAnimCurveEvaluation : 1; // 0x8b0
	char bDisableAnimCurves : 1; // 0x8b0
	char bCollideWithEnvironment : 1; // 0x8b0
	char bCollideWithAttachedChildren : 1; // 0x8b1
	char bLocalSpaceSimulation : 1; // 0x8b1
	char bResetAfterTeleport : 1; // 0x8b1
	char bDeferKinematicBoneUpdate : 1; // 0x8b1
	char bNoSkeletonUpdate : 1; // 0x8b1
	char bPauseAnims : 1; // 0x8b1
	char bUseRefPoseOnInitAnim : 1; // 0x8b1
	char bEnablePerPolyCollision : 1; // 0x8b2
	char bForceRefpose : 1; // 0x8b2
	char bOnlyAllowAutonomousTickPose : 1; // 0x8b2
	char bIsAutonomousTickPose : 1; // 0x8b2
	char bOldForceRefPose : 1; // 0x8b2
	char bShowPrePhysBones : 1; // 0x8b2
	char bRequiredBonesUpToDate : 1; // 0x8b2
	char bAnimTreeInitialised : 1; // 0x8b2
	char bIncludeComponentLocationIntoBounds : 1; // 0x8b3
	char bEnableLineCheckWithBounds : 1; // 0x8b3
	char bUseBendingElements : 1; // 0x8b3
	char bUseTetrahedralConstraints : 1; // 0x8b3
	char bUseThinShellVolumeConstraints : 1; // 0x8b3
	char bUseSelfCollisions : 1; // 0x8b3
	char bUseContinuousCollisionDetection : 1; // 0x8b3
	char bPropagateCurvesToSlaves : 1; // 0x8b3
	char bSkipKinematicUpdateWhenInterpolating : 1; // 0x8b4
	char bSkipBoundsUpdateWhenInterpolating : 1; // 0x8b4
	char bNeedsQueuedAnimEventsDispatched : 1; // 0x8b4
	uint16_t CachedAnimCurveUidVersion; // 0x8b6
	EClothMassMode MassMode; // 0x8b8
	float UniformMass; // 0x8bc
	float TotalMass; // 0x8c0
	float Density; // 0x8c4
	float MinPerParticleMass; // 0x8c8
	float ClothBlendWeight; // 0x8cc
	float EdgeStiffness; // 0x8d0
	float BendingStiffness; // 0x8d4
	float AreaStiffness; // 0x8d8
	float VolumeStiffness; // 0x8dc
	float StrainLimitingStiffness; // 0x8e0
	float ShapeTargetStiffness; // 0x8e4
	bool bWaitForParallelClothTask; // 0x8e8
	TArray<FName> DisallowedAnimCurves; // 0x8f0
	UBodySetup* BodySetup; // 0x900
	FMulticastInlineDelegate OnConstraintBroken; // 0x910
	UClothingSimulationFactory* ClothingSimulationFactory; // 0x920
	float TeleportDistanceThreshold; // 0x9f8
	float TeleportRotationThreshold; // 0x9fc
	uint32_t LastPoseTickFrame; // 0xa08
	UClothingSimulationInteractor* ClothingInteractor; // 0xa60
	FMulticastInlineDelegate OnAnimInitialized; // 0xb30
};

struct UDatasmithAssetUserData {
	TMap<FName, FString> MetaData; // 0x28
};

struct UMeshSelectionSet {
	TArray<int32_t> Vertices; // 0x40
	TArray<int32_t> Edges; // 0x50
	TArray<int32_t> Faces; // 0x60
	TArray<int32_t> Groups; // 0x70
};

struct UMovieSceneAkTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
	char bIsAMasterTrack : 1; // 0x88
};

struct UPaperSprite {
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FVector2D BakedSourceUV; // 0x48
	FVector2D BakedSourceDimension; // 0x50
	UTexture2D* BakedSourceTexture; // 0x58
	UMaterialInterface* DefaultMaterial; // 0x60
	UMaterialInterface* AlternateMaterial; // 0x68
	TArray<FPaperSpriteSocket> Sockets; // 0x70
	ESpriteCollisionMode SpriteCollisionDomain; // 0x80
	float PixelsPerUnrealUnit; // 0x84
	UBodySetup* BodySetup; // 0x88
	int32_t AlternateMaterialSplitIndex; // 0x90
	TArray<FVector4> BakedRenderData; // 0x98
};

struct UCrowDamageIndicatorItemWidget {
	UCanvasPanel* CP_Root; // 0x348
};

struct UCrowDragItem {
	UImage* IMG_ItemIcon; // 0x348
};

struct UCrowWorldRemainSMC {
	int16_t RemainMeshIndex; // 0x4d0
	int16_t LayoutItemIndex; // 0x4d2
};

struct UAkGeometryComponent {
	AkMeshType MeshType; // 0x1f8
	int32_t LOD; // 0x1fc
	float WeldingThreshold; // 0x200
	TMap<UMaterialInterface*, FAkGeometrySurfaceOverride> StaticMeshSurfaceOverride; // 0x208
	FAkGeometrySurfaceOverride CollisionMeshSurfaceOverride; // 0x258
	char bEnableDiffraction : 1; // 0x268
	char bEnableDiffractionOnBoundaryEdges : 1; // 0x268
	AActor* AssociatedRoom; // 0x270
	FAkGeometryData GeometryData; // 0x288
	TMap<UMaterialInterface*, FAkGeometrySurfaceOverride> PreviousStaticMeshSurfaceOverride; // 0x2d8
};

struct UCrowMissionQuickListItem {
	UTextBlock* TB_MissionTitle; // 0x348
	UTextBlock* TB_MissionCount; // 0x350
	UWidgetSwitcher* WS_IMG; // 0x358
	UImage* IMG_Reward00; // 0x360
	UImage* IMG_Reward01; // 0x368
	UImage* IMG_Reward02; // 0x370
	UImage* IMG_Reward03; // 0x378
	UImage* IMG_Reward04; // 0x380
};

struct USequenceCameraShake {
	UCameraAnimationSequence* Sequence; // 0x98
	float PlayRate; // 0xa0
	float Scale; // 0xa4
	float BlendInTime; // 0xa8
	float BlendOutTime; // 0xac
	float RandomSegmentDuration; // 0xb0
	bool bRandomSegment; // 0xb4
	USequenceCameraShakeSequencePlayer* Player; // 0xb8
	USequenceCameraShakeCameraStandIn* CameraStandIn; // 0xc0
};

struct UCrowCloudScapeComponent {
	bool bEnvCloud; // 0x1f8
	bool bNoCollision; // 0x1f9
	bool bMove; // 0x1fa
	bool bScale; // 0x1fb
	float MaxScaleZ; // 0x1fc
	float Density; // 0x200
	float CloudMoveTime; // 0x204
	float RotationRate; // 0x208
	UCurveFloat* ScaleAnimCurve; // 0x210
	UCurveFloat* MoveRateCurve; // 0x218
	UCurveFloat* DensityCurve; // 0x220
	UCurveFloat* HeightCurve; // 0x228
	UCrowCloudDamage* CloudDamageSetting; // 0x230
};

struct UCrowMiningScanEffectWidget {
	UImage* IMG_Scan_effect; // 0x3d8
	UWidgetAnimation* AniMiningScan; // 0x3e0
};

struct UCrowCustomCursorUAV {
	UCanvasPanel* CP_Area; // 0x350
};

struct UCrowLockonIndicator {
	ACrowCharacterPawn* OwnerPawn; // 0x348
	bool IsVehicle; // 0x350
	bool IsInDistance; // 0x351
	UCanvasPanel* CP_Main; // 0x358
	UCanvasPanel* CP_LockOn; // 0x360
	UCanvasPanel* CP_TargetBase; // 0x368
	UCanvasPanel* CP_NonTarget; // 0x370
	UImage* IMG_TargetingBase; // 0x378
	UImage* IMG_TargetingCross; // 0x380
	UImage* IMG_Base; // 0x388
	UImage* IMG_Base_LockOn; // 0x390
	AActor* TargetActor; // 0x398
	UUMGSequencePlayer* TargetingAni; // 0x3a0
	UUMGSequencePlayer* LockOnAni; // 0x3a8
	FGeometry ParentGeometry; // 0x3b0
	FVector2D DefaultSize; // 0x3e8
	UCanvasPanelSlot* PanelSlot; // 0x3f0
	float MinScale; // 0x3f8
	float MaxScale; // 0x3fc
	FLinearColor DefaultColor; // 0x400
};

struct UCrowCustomOutfitItemListWidget {
	UGridPanel* GD_ItemList; // 0x348
	UScrollBox* SCB_Itemlist; // 0x350
	UTextBlock* TB_Title; // 0x358
	UCrowClothItemDescWidget* WB_Function_Tooltip; // 0x360
	UCrowCustomizeOutfitSlotWidget* CustomizeOutfitSlotWidgetClass; // 0x368
	ACrowSceneLobby* SceneLobby; // 0x370
	UCrowCategorySlotSmallWidget* CurrentCategorySlotSmallWidget; // 0x378
	bool IsOwnMode; // 0x380
	UCrowCustomizeOutfitSlotWidget* ShopModeSelectItem; // 0x388
	float ItemSize; // 0x390
};

struct UMaterialExpressionParticleSubUV {
	char bBlend : 1; // 0x60
};

struct UStereoLayerShapeEquirect {
	FBox2D LeftUVRect; // 0x28
	FBox2D RightUVRect; // 0x3c
	FVector2D LeftScale; // 0x50
	FVector2D RightScale; // 0x58
	FVector2D LeftBias; // 0x60
	FVector2D RightBias; // 0x68
};

struct ACrowConsoleInitializer {
	TArray<FString> ConsoleCommands; // 0x220
};

struct UEnvQueryTest_Distance {
	EEnvTestDistance TestMode; // 0x1f8
	UEnvQueryContext* DistanceTo; // 0x200
};

struct UCrowWeaponSubStateFireGatling {
	ACrowWeaponVehicle* WeaponVehicle; // 0x48
	UCrowWeaponAnimGatling* WeaponAnimGatlingComponent; // 0x50
	float FireDelay; // 0x58
	float PreHeating; // 0x5c
	float CurrentPreHeating; // 0x60
	float OverHeating; // 0x64
	float CurrentOverHeating; // 0x68
	float Cooling; // 0x6c
	float CurrentCooling; // 0x70
	float ApproachOverHeating; // 0x74
	bool bIsApproachOverHeating; // 0x78
	bool bIsCooling; // 0x79
	UCrowVehicleCrosshairBase* crosshairWidget; // 0x80
	float PrevTimeSeconds; // 0x88
	bool bIsFiring; // 0x8c
	bool bPlayFireAnimation; // 0x8d
	UAkComponent* AkComponent; // 0x90
};

struct UHapticFeedbackEffect_Buffer {
	TArray<char> Amplitudes; // 0x28
	int32_t SampleRate; // 0x38
};

struct UTimelineTemplate {
	float TimelineLength; // 0x28
	ETimelineLengthMode LengthMode; // 0x2c
	char bAutoPlay : 1; // 0x2d
	char bLoop : 1; // 0x2d
	char bReplicated : 1; // 0x2d
	char bIgnoreTimeDilation : 1; // 0x2d
	TArray<FTTEventTrack> EventTracks; // 0x30
	TArray<FTTFloatTrack> FloatTracks; // 0x40
	TArray<FTTVectorTrack> VectorTracks; // 0x50
	TArray<FTTLinearColorTrack> LinearColorTracks; // 0x60
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0x70
	FGuid TimelineGuid; // 0x80
	FName VariableName; // 0x90
	FName DirectionPropertyName; // 0x98
	FName UpdateFunctionName; // 0xa0
	FName FinishedFunctionName; // 0xa8
};

struct UCrowRadialMenuWidgetBase {
	UCanvasPanel* CP_RadialMenu; // 0x368
	UImage* IMG_Circle; // 0x370
	UImage* IMG_CircleArrow; // 0x378
	UImage* HoverIcon; // 0x380
	UTextBlock* HoverText; // 0x388
	TArray<FString> ItemTextIndexes; // 0x390
	UWidgetAnimation* AniWidgetShow; // 0x3a0
	bool InitializeRadialMenu; // 0x3a8
	int32_t SelectedIndex; // 0x3ac
	bool Hiding; // 0x3b0
	UCrowWidgetTweenAlpha* WidgetTweenAlpha; // 0x3b8
	TArray<UCrowRadialMenuButtonWidget*> Radial_MenuBTN_Array; // 0x3c0
};

struct ULODSyncComponent {
	int32_t NumLODs; // 0xb0
	int32_t ForcedLOD; // 0xb4
	TArray<FComponentSync> ComponentsToSync; // 0xb8
	TMap<FName, FLODMappingData> CustomLODMapping; // 0xc8
	int32_t CurrentLOD; // 0x118
	int32_t CurrentNumLODs; // 0x11c
	TArray<UPrimitiveComponent*> DriveComponents; // 0x120
	TArray<UPrimitiveComponent*> SubComponents; // 0x130
};

struct UInterpTrackAnimControl {
	FName SlotName; // 0x90
	TArray<FAnimControlTrackKey> AnimSeqs; // 0x98
	char bSkipAnimNotifiers : 1; // 0xa8
};

struct UCrowWorldMapIconPS {
	ACrowPlayerStateBase* TargetPlayerState; // 0x1b0
};

struct ABp_CrowProjectileTank_C {
	UStaticMeshComponent* SM_G67; // 0x1840
};

struct UMaterialExpressionTextureCoordinate {
	int32_t CoordinateIndex; // 0x40
	float UTiling; // 0x44
	float VTiling; // 0x48
	char UnMirrorU : 1; // 0x4c
	char UnMirrorV : 1; // 0x4c
};

struct URig {
	TArray<FTransformBase> TransformBases; // 0x30
	TArray<FNode> Nodes; // 0x40
};

struct UEditUVIslandsTool {
	UExistingMeshMaterialProperties* MaterialSettings; // 0xc8
	UMaterialInstanceDynamic* CheckerMaterial; // 0xd0
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0xd8
	UPolygonSelectionMechanic* SelectionMechanic; // 0xe0
	UMultiTransformer* MultiTransformer; // 0xf0
};

struct UCrowBomBardRouteWidget {
	UCanvasPanel* CP_route; // 0x348
	UBorder* BD_Zone; // 0x350
	UImage* IMG_Effect; // 0x358
};

struct UCrowCustomizeItemDescWidget {
	UCanvasPanel* CP_Lobby_MOD; // 0x348
	UTextBlock* TB_Item_Category; // 0x350
	UTextBlock* TB_AmmoType; // 0x358
	UTextBlock* TB_ItemName; // 0x360
	URichTextBlock* TB_ItemCompare; // 0x368
	UMultiLineEditableText* MLETB_ItemDesc; // 0x370
	UVerticalBox* VB_ItemName; // 0x378
	UHorizontalBox* HB_WeaponParts; // 0x380
	UHorizontalBox* HB_AmmoType; // 0x388
	UCanvasPanel* CP_WeaponStatus; // 0x390
	UCanvasPanel* CP_WeaponStat; // 0x398
	UVerticalBox* VB_WeaponInfo; // 0x3a0
	UVerticalBox* VB_WeaponProgress; // 0x3a8
	UTextBlock* TB_FireMode; // 0x3b0
	UHorizontalBox* HB_FireModeIcon; // 0x3b8
	UCrowWidgetImage* IMG_FireMode_Semiauto; // 0x3c0
	UCrowWidgetImage* IMG_FireMode_Burst; // 0x3c8
	UCrowWidgetImage* IMG_FireMode_auto; // 0x3d0
	UTextBlock* TB_Ammo; // 0x3d8
	UTextBlock* TB_AmmoCount; // 0x3e0
	UTextBlock* TB_Damage; // 0x3e8
	UProgressBar* PB_Damage; // 0x3f0
	UProgressBar* PB_Damage_Compare; // 0x3f8
	UTextBlock* TB_Accuracy; // 0x400
	UProgressBar* PB_Accuracy; // 0x408
	UProgressBar* PB_Accuracy_Compare; // 0x410
	UTextBlock* TB_Control; // 0x418
	UProgressBar* PB_Control; // 0x420
	UProgressBar* PB_Control_Compare; // 0x428
	UTextBlock* TB_FireSpeed; // 0x430
	UProgressBar* PB_FireSpeed; // 0x438
	UProgressBar* PB_FireSpeed_Compare; // 0x440
	UTextBlock* TB_Distance; // 0x448
	UProgressBar* PB_Distance; // 0x450
	UProgressBar* PB_Distance_Compare; // 0x458
	UTextBlock* TB_Reload; // 0x460
	UProgressBar* PB_Reload; // 0x468
	UProgressBar* PB_Reload_Compare; // 0x470
	UCrowButton* WB_BT_MOD; // 0x478
	UCrowButton* WB_BT_ARMORY; // 0x480
	UCrowButton* WB_BT_Back; // 0x488
	UCrowButton* WB_BT_Home; // 0x490
	UCrowButton* WB_BT_RESET; // 0x498
	UCrowButton* WB_BT_LevelJump; // 0x4a0
	UHorizontalBox* HB_Tutorial_Customize; // 0x4a8
	UCrowLobbyLoadoutListWidget* WB_Lobby_LoadoutList; // 0x4b0
	UCrowLobbyLoadoutWidget* WB_Lobby_Loadout; // 0x4b8
	UCrowWeaponPartsListWidget* WB_WeaponPartsList; // 0x4c0
	UCanvasPanel* CP_PartAdditionalEffect; // 0x4c8
	UVerticalBox* VB_Advantage; // 0x4d0
	UCrowTabMenuWeaponCategoryWidget* WB_TabMenuWeaponCategory; // 0x4d8
	UCrowTabMenuWeaponSettingWidget* WB_TabMenu_WeaponSetting; // 0x4e0
	UCrowCustomizeCategryBigWidget* WB_TabMenuWeaponPartsCategory; // 0x4e8
	UCrowCustomizeItemListWidget* WB_CustomizeItemlist; // 0x4f0
	UCrowCustomizeWeaponAccWidget* WB_Customize_WeaponAcc; // 0x4f8
	UCrowCustomizeWeaponNumSlotList* WB_Customize_WeaponAccNumberSlot; // 0x500
	UCrowLobbyShopMenuTabWidget* WB_TabMenu_WeaponCategory; // 0x508
	UHorizontalBox* HB_CustomizeWeapon_Shop_Button; // 0x510
	UCrowShoppingBagWidget* WB_Shop_Popup_ExclusivePurchase_Quick; // 0x518
	UCrowButton* BT_AddShoppingBag; // 0x520
	UCrowButton* BT_Buy; // 0x528
	UCrowWeaponLevelJumpPopupWidget* WB_WeaponLevelJumpPopup; // 0x530
	UCrowLobbySlotPurchasePopupWidget* WB_LobbySlotPurchasePopup; // 0x538
	FLinearColor NormalColor; // 0x540
	FLinearColor IncreaseColor; // 0x550
	FLinearColor DecreaseColor; // 0x560
	FCrowWeaponData CurrentWeaponData; // 0x570
	FCrowWeaponTableRow WeaponItemTable; // 0x6e0
	ACrowSceneLobby* SceneLobby; // 0x1900
	ACrowSceneGame* SceneGame; // 0x1908
	UCrowInventoryInputEventHandler* SelectDragWidget; // 0x1910
	float ProgressMaxValue; // 0x1918
	bool StatusMoved; // 0x191c
	bool IsCustomizeSticker; // 0x191d
	TArray<UTextBlock*> PartsOptionArray; // 0x1920
	bool IsWeaponCustomizeMode; // 0x1930
	UCrowCustomizeWeaponAccSlotWidget* CurrentWeaponAccSlotWidget; // 0x1938
};

struct UMaterialExpressionTextureProperty {
	FExpressionInput TextureObject; // 0x40
	EMaterialExposedTextureProperty Property; // 0x54
};

struct UMovieSceneCameraShakeSourceShakeTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x80
};

struct UCrowSimpleBuoyancyComponent {
	UPrimitiveComponent* TargetComponent; // 0xc0
	UPhysicalMaterial* WaterMaterial; // 0xc8
	float MinWaveMoveValue; // 0xd0
	float WaveMoveDecreaseRate; // 0xd4
};

struct UAIDataProvider_Random {
	float Min; // 0x40
	float Max; // 0x44
	char bInteger : 1; // 0x48
};

struct UCrowActorComponentBreakableMesh {
	UStaticMeshComponent* SM_Default; // 0x1f8
	UStaticMeshComponent* SM_Broken; // 0x200
	UStaticMeshComponent* SM_CustomDepth; // 0x208
};

struct UAlignObjectsTool {
	UAlignObjectsToolProperties* AlignProps; // 0x98
};

struct ACrowCollisionPreviewActor {
	USceneComponent* SceneComponent; // 0x220
	UBoxComponent* BoxComponent; // 0x228
	FText BuildText; // 0x230
	FText CancelText; // 0x248
	ACrowPlayerControllerBase* PlayerController; // 0x260
	ACrowPlayerStateBase* PlayerState; // 0x268
	ACrowCharacterPawn* CharacterPawn; // 0x270
	TArray<UMeshComponent*> MeshCompArray; // 0x278
};

struct AController {
	APlayerState* PlayerState; // 0x228
	FMulticastInlineDelegate OnInstigatedAnyDamage; // 0x238
	FName StateName; // 0x248
	APawn* Pawn; // 0x250
	ACharacter* Character; // 0x260
	USceneComponent* TransformComponent; // 0x268
	FRotator ControlRotation; // 0x288
	char bAttachToPawn : 1; // 0x294
};

struct UTextPropertyTestObject {
	FText DefaultedText; // 0x28
	FText UndefaultedText; // 0x40
	FText TransientText; // 0x58
};

struct UCrowTriggerCommandNearFar {
	UStaticMeshComponent* Near; // 0xc0
	UStaticMeshComponent* Far; // 0xc8
};

struct UCrowBattleShape {
	AActor* OwnerActor; // 0x28
	UPrimitiveComponent* CenterComponent; // 0x30
};

struct UMaterialExpressionSine {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct USeamSculptTool {
	USeamSculptToolProperties* Settings; // 0x200
	UPreviewGeometry* PreviewGeom; // 0x208
};

struct UCrowCloudVisualizerComponent {
	UCrowCloudDrawComponent* CloudDrawComponent; // 0x150
	UMaterialInstanceDynamic* CloudScapeMID; // 0x158
	UMaterialInstanceDynamic* ReservedCloudScapeMID; // 0x160
	TArray<FCrowCloudVisualizeMesh> VisualizeMeshes; // 0x168
	TArray<FCrowCloudVisualizeParticle> VisualizeParticles; // 0x178
	bool bChangeMaterial; // 0x188
	bool bPlayerIsInside; // 0x189
	float TransitionWeight; // 0x18c
	FVector FirstLocation; // 0x190
	TMap<int32_t, FCrowCloudScapeMaterialParamName> MaterialParamNameInfo; // 0x1a0
};

struct UMaterialExpressionConstant2Vector {
	float R; // 0x40
	float G; // 0x44
};

struct UCrowMultiSystemMessageWidget {
	URichTextBlock* RTB_Message; // 0x348
	UCanvasPanel* CP_MessageBox; // 0x350
	UWidgetAnimation* Animation_Move_1; // 0x358
	UWidgetAnimation* Animation_Move_2; // 0x360
	UWidgetAnimation* Animation_Move_3; // 0x368
	UWidgetAnimation* Animation_Fade_Out_1; // 0x370
	UWidgetAnimation* Animation_Fade_Out_2; // 0x378
	UWidgetAnimation* Animation_Fade_Out_3; // 0x380
};

struct UCrowMissionAreaComponent {
	ACrowMissionArea* ParentArea; // 0x1f8
};

struct UCrowVehicleBoatEffectSetting {
	FName AttachSocketName; // 0x28
	float SurfaceOffsetZ; // 0x30
	UParticleSystem* FxDriving; // 0x38
	UParticleSystem* FxIdle; // 0x40
	float SpeedForwardMax; // 0x48
	float SpeedRightMax; // 0x4c
	FName ParamNameSpeedForward; // 0x50
	FName ParamNameSpeedRight; // 0x58
	bool UseVirtualTexture; // 0x60
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x68
	int8_t VirtualTextureLodBias; // 0x78
	int8_t VirtualTextureCullMips; // 0x79
	int8_t VirtualTextureMinCoverage; // 0x7a
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x7b
};

struct USlateVectorArtData {
	TArray<FSlateMeshVertex> VertexData; // 0x28
	TArray<uint32_t> IndexData; // 0x38
	UMaterialInterface* Material; // 0x48
	FVector2D ExtentMin; // 0x50
	FVector2D ExtentMax; // 0x58
};

struct UGizmoWorldAxisSource {
	FVector Origin; // 0x30
	int32_t AxisIndex; // 0x3c
};

struct UUPSMovementGroupsSettings {
	FColor LineBetweenGroupLeaderAndGroupActorColor; // 0x38
	FColor LineBetweenGroupMemberAndLeaderColor; // 0x3c
	float LineBetweenGroupLeaderAndGroupActorThickness; // 0x40
	float LineBetweenGroupMemberAndLeaderThickness; // 0x44
	FName GroupMovementPointBBName; // 0x48
};

struct UCrowSettingsSlotDropdownWidget {
	TArray<FString> SelectionDatas; // 0x348
	int32_t SelectedIndex; // 0x358
	UCrowSettingsSlotWidget* OwnerSlot; // 0x360
	UCrowSettingsSlotDropdownSlot* DropdownSlotClass; // 0x368
	float DropdownSlotHeight; // 0x370
	float DropdownSlotMaxHeight; // 0x374
	UCrowToggleButton* BT_Dropdown; // 0x378
	UTextBlock* TB_SelectedItem; // 0x380
	UCanvasPanel* CP_Dropdown; // 0x388
	UScrollBox* SB_Dropdown; // 0x390
	bool bNeedResize; // 0x398
};

struct UCrowToolTipPingWidget {
	UTextBlock* TB_OwnerName; // 0x348
	UScaleBox* SB_Cancel; // 0x350
	UScaleBox* SB_OK; // 0x358
	UScaleBox* SB_Icon; // 0x360
};

struct UCrowShopPackagePopupWidget {
	bool IsSendPacket; // 0x348
	UGridPanel* GP_ItemListPanel; // 0x350
	UCrowShopItemSlotWidget* WB_Shop_Itemslot_Wide; // 0x358
	UCrowButton* WB_BT_Change; // 0x360
	UCrowButton* WB_BT_EscBack; // 0x368
	UTextBlock* TB_ItemName; // 0x370
	UTextBlock* TB_ItemDesc; // 0x378
	UImage* IMG_SelectItemIcon; // 0x380
	UUserWidget* GridSlotItem; // 0x388
	FCrowShopTableRow ShopData; // 0x390
};

struct UNavModifierComponent {
	UNavArea* AreaClass; // 0xe0
	FVector FailsafeExtent; // 0xe8
	char bIncludeAgentHeight : 1; // 0xf4
};

struct UNavLinkDefinition {
	TArray<FNavigationLink> Links; // 0x28
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x38
};

struct ACrowAICharacterSpawner {
	bool DisableSpawner; // 0x268
	FCrowAICharacterSpawnData SpawnData; // 0x270
	ECrowAISpawnerState SpawnerState; // 0x2b8
	FTimerHandle ProcessSpawnerTimerHandle; // 0x2c0
	ACrowAIZoneBase* AIZone; // 0x2c8
	float WaitTimeForSpawn; // 0x2d0
	uint32_t SpawnedAICharacterNum; // 0x2d4
	uint32_t DeadAICharacterNum; // 0x2d8
	TArray<ACrowAICharacterPawn*> SpawnedAICharacterPawnList; // 0x2e0
};

struct UHorizontalBoxSlot {
	FMargin Padding; // 0x40
	FSlateChildSize Size; // 0x50
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UAITask_MoveTo {
	FMulticastInlineDelegate OnRequestFailed; // 0x70
	FMulticastInlineDelegate OnMoveFinished; // 0x80
	FAIMoveRequest MoveRequest; // 0x90
};

struct AHUD {
	APlayerController* PlayerOwner; // 0x220
	char bLostFocusPaused : 1; // 0x228
	char bShowHUD : 1; // 0x228
	char bShowDebugInfo : 1; // 0x228
	int32_t CurrentTargetIndex; // 0x22c
	char bShowHitBoxDebugInfo : 1; // 0x230
	char bShowOverlays : 1; // 0x230
	char bEnableDebugTextShadow : 1; // 0x230
	TArray<AActor*> PostRenderedActors; // 0x238
	TArray<FName> DebugDisplay; // 0x250
	TArray<FName> ToggledDebugCategories; // 0x260
	UCanvas* Canvas; // 0x270
	UCanvas* DebugCanvas; // 0x278
	TArray<FDebugTextInfo> DebugTextList; // 0x280
	AActor* ShowDebugTargetDesiredClass; // 0x290
	AActor* ShowDebugTargetActor; // 0x298
};

struct UCrowSpringArmComponent {
	char SpringArmId; // 0x280
	FName InheritYawBoneName; // 0x284
	bool UseLocalInheritYaw; // 0x28c
	bool UseDriverRotation; // 0x28d
	bool UseStabilizationPitch; // 0x28e
	float AmountStabilizationPitch; // 0x290
	float DriverRotationMaxPitch; // 0x294
	float DriverRotationMaxYaw; // 0x298
	float DriverRotationMaxRoll; // 0x29c
	bool UseTickGroupOverride; // 0x2a0
	ETickingGroup TickGroupOverride; // 0x2a1
	bool IgnoreAddedInput; // 0x2a2
	bool UseCameraRotationLagWeight; // 0x2a3
	float CameraRotationLagWeight; // 0x2a4
	FVector2D YawMinMax; // 0x2a8
	FVector2D PitchMinMax; // 0x2b0
	UCameraComponent* ChildCamera; // 0x2b8
	TArray<AActor*> SkipCollisionActorList; // 0x2c0
	USceneComponent* DefaultParent; // 0x2d0
	FName DefaultParentSocketName; // 0x2d8
	FTransform DefaultLocalTransform; // 0x2e0
	FTransform DefaultCameraLocalTransform; // 0x310
	FTransform DefaultRootWorldTransform; // 0x340
	FRotator AddedInputRotation; // 0x370
	FRotator RootMovedRotation; // 0x37c
	FRotator DriverRotation; // 0x388
	FRotator StabilizationRotation; // 0x394
};

struct UCrowTriggerComponent {
	FTriggerCheckDistance TriggerCheckDistance; // 0x1f8
	UCrowTriggerCommandBase* DefaultCommandDistance; // 0x220
	UCrowTriggerCommandBase* CommandDistance; // 0x228
	FTriggerCheckMouseOver TriggerCheckMouseOver; // 0x230
	UCrowTriggerCommandBase* DefaultCommandMouseOver; // 0x240
	UCrowTriggerCommandBase* CommandMouseOver; // 0x248
	FTriggerInput TriggerInput; // 0x250
	UCrowTriggerCommandBase* DefaultCommandInput; // 0x268
	FString WidgetMessage; // 0x270
	FText WidgetMessageText; // 0x280
	TArray<ETriggerMessageParamType> ParamTypes; // 0x298
	float MessageDisplayTime; // 0x2a8
	UCrowTriggerCommandBase* CommandInput; // 0x2b0
	bool ProgressDistanceEvent; // 0x2b8
	bool ProgressMouseOverEvent; // 0x2b9
	FTimerHandle PressInputTimerHandle; // 0x2c0
	FName CurrentOverlapID; // 0x2c8
	FName CurrentMouseOverID; // 0x2d0
	float TotalPressInputTime; // 0x2d8
};

struct USpotLightComponent {
	float InnerConeAngle; // 0x358
	float OuterConeAngle; // 0x35c
};

struct UWB_SettingsExplanation_C {
	UImage* IMG_InfomationBg; // 0x400
};

struct UNavMovementComponent {
	FNavAgentProperties NavAgentProps; // 0xf0
	float FixedPathBrakingDistance; // 0x120
	char bUpdateNavAgentWithOwnersCollision : 1; // 0x124
	char bUseAccelerationForPaths : 1; // 0x124
	char bUseFixedBrakingDistanceForPaths : 1; // 0x124
	FMovementProperties MovementState; // 0x125
	UObject* PathFollowingComp; // 0x128
};

struct UM240B_AnimBlueprint_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x318
	FAnimNode_Slot AnimGraphNode_Slot; // 0x338
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x380
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x3a0
	FAnimNode_VehicleWeaponHandler AnimGraphNode_VehicleWeapon_2; // 0x3c0
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x4c0
	FAnimNode_VehicleWeaponHandler AnimGraphNode_VehicleWeapon; // 0x4d0
};

struct UMaterialExpressionBumpOffset {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Height; // 0x54
	FExpressionInput HeightRatioInput; // 0x68
	float HeightRatio; // 0x7c
	float ReferencePlane; // 0x80
	uint32_t ConstCoordinate; // 0x84
};

struct UCrowCustomizeItemListWidget {
	UScrollBox* SCB_Itemlist; // 0x348
	UTextBlock* TB_Title; // 0x350
	UCrowItemSlotWidget* ItemSlotWidgetClass; // 0x358
	ACrowSceneLobby* SceneLobby; // 0x360
	ACrowSceneGame* SceneGame; // 0x368
	UCrowCategorySlotBigWidget* CurrentCategorySlotBigWidget; // 0x370
	ECrowWeaponUIType CurrentWeaponUIType; // 0x378
	UCrowItemSlotWidget* SelectedWidgetItem; // 0x380
	bool NotSave; // 0x389
	bool IsShopMode; // 0x38a
	float ItemSize; // 0x38c
};

struct UWB_CuonExtractor_WorldMapIndicator_C {
	UWidgetAnimation* Ani_PingTargetLoop; // 0x378
	UImage* IMG_Effect; // 0x380
	UImage* IMG_Effect_3; // 0x388
	UImage* IMG_Effect_Glow; // 0x390
	UImage* IMG_Icon; // 0x398
	UImage* IMG_IconBg; // 0x3a0
	UImage* IMG_LocateArrow; // 0x3a8
	UImage* IMG_Ping; // 0x3b0
};

struct ULevelCapture {
	bool bAutoStartCapture; // 0x220
	FGuid PrerequisiteActorId; // 0x22c
};

struct UParticleModuleLocationPrimitiveSphere {
	FRawDistributionFloat StartRadius; // 0xb0
};

struct ACrowPlayerControllerBase {
	bool bIsStartSpectating; // 0x571
	APawn* PawnBeforeSpectatingState; // 0x578
	bool bIsCharacterDesytroyWhenEndSpectating; // 0x580
	FCrowUserInfoBase ServerUserInfo; // 0x588
	bool bEnablePickingItem; // 0xdc1
	UCrowTriggerDisplay* TriggerDisplay; // 0xde0
	char bAllowGameActions : 1; // 0xdec
	UMaterialParameterCollection* WeaponFOVCollection; // 0xdf0
	TArray<uint32_t> EmotionIndexsInSlot; // 0xdf8
	UCrowPassenger* Passenger; // 0xe08
	AActor* BaseControlActor; // 0xe10
	FRotator BaseControlRotation; // 0xe18
	FVector2D BaseControlPitchMinMax; // 0xe24
	FVector2D BaseControlYawMinMax; // 0xe2c
	FRotator BaseControlAddedRotation; // 0xe34
	FRotator CharacterLookingRotation; // 0xe40
	FName PrevCharacterCamera; // 0xe4c
	APawn* RespawnTargetPawn; // 0xe58
	UCrowProjectileChecker* ProjectileChecker; // 0xe60
	ECrowCameraLimitMode CameraLimitMode; // 0xe68
	FVector LastDeathLocation; // 0xe84
	FRotator LastInputAxis; // 0xe90
	FString DoorTriggerMessage; // 0xea0
	bool bIsObserver; // 0xef2
};

struct UCrowVehicleFloodingEffectSetting {
	UParticleSystem* FxImmerge; // 0x28
	FName AttachSocketName_Bubble; // 0x30
	UParticleSystem* FxBubble; // 0x38
	FName AttachSocketName_DrivingForward; // 0x40
	FName AttachSocketName_DrivingBackward; // 0x48
	UParticleSystem* FxDriving; // 0x50
	UParticleSystem* FxGroundDust; // 0x58
	float SpeedForwardMax; // 0x60
	float SpeedRightMax; // 0x64
	FName ParamNameSpeedForward; // 0x68
	FName ParamNameSpeedRight; // 0x70
};

struct ACrowConquestMeteorPieceActor {
	FVector EndLocation; // 0x220
	float SmallMeteorSpeed; // 0x22c
	ECrowMMeteorPieceState MeteorState; // 0x230
	UBoxComponent* Root; // 0x240
	ACrowConquestMeteorSettings* MeteorSettingsActor; // 0x248
	ACrowTargetTraceEffect* SmallMeteorComp; // 0x250
	UParticleSystemComponent* GasComp; // 0x258
	float MeteorDistance; // 0x260
};

struct URotatingMovementComponent {
	FRotator RotationRate; // 0xf0
	FVector PivotTranslation; // 0xfc
	char bRotationInLocalSpace : 1; // 0x108
};

struct UCrowWeaponPartsMagazine {
	FCrowWeaponPartsMagazineTableRow PartsTable; // 0x320
	FCrowWeaponPartsMagazineTableRow DefaultPartsData; // 0x770
};

struct UGroomBindingAsset {
	UGroomAsset* Groom; // 0x28
	USkeletalMesh* SourceSkeletalMesh; // 0x30
	USkeletalMesh* TargetSkeletalMesh; // 0x38
	int32_t NumInterpolationPoints; // 0x40
	int32_t MatchingSection; // 0x44
	TArray<FGoomBindingGroupInfo> GroupInfos; // 0x48
};

struct UActorSequence {
	UMovieScene* MovieScene; // 0x60
	FActorSequenceObjectReferenceMap ObjectReferences; // 0x68
};

struct ULandscapeLayerInfoObject {
	FName LayerName; // 0x28
	UPhysicalMaterial* PhysMaterial; // 0x30
	float Hardness; // 0x38
	FLinearColor LayerUsageDebugColor; // 0x3c
};

struct UUPSAITask_ExecuteEnemyAction {
	FMulticastInlineDelegate OnEnemyActionFinishedDelegate; // 0x68
	UUPSEnemyAction* EnemyAction; // 0x78
	ACharacter* Character; // 0x80
};

struct UAnimCurveCompressionSettings {
	UAnimCurveCompressionCodec* Codec; // 0x28
};

struct UStreamingSettings {
	char AsyncLoadingThreadEnabled : 1; // 0x38
	char WarnIfTimeLimitExceeded : 1; // 0x38
	float TimeLimitExceededMultiplier; // 0x3c
	float TimeLimitExceededMinTime; // 0x40
	int32_t MinBulkDataSizeForAsyncLoading; // 0x44
	char UseBackgroundLevelStreaming : 1; // 0x48
	char AsyncLoadingUseFullTimeLimit : 1; // 0x48
	float AsyncLoadingTimeLimit; // 0x4c
	float PriorityAsyncLoadingExtraTime; // 0x50
	float LevelStreamingActorsUpdateTimeLimit; // 0x54
	float PriorityLevelStreamingActorsUpdateExtraTime; // 0x58
	int32_t LevelStreamingComponentsRegistrationGranularity; // 0x5c
	float LevelStreamingUnregisterComponentsTimeLimit; // 0x60
	int32_t LevelStreamingComponentsUnregistrationGranularity; // 0x64
	char FlushStreamingOnExit : 1; // 0x68
	char EventDrivenLoaderEnabled : 1; // 0x68
};

struct UTetherGuideSplineComponent {
	UTetherGuideSplineMetadata* MetaData; // 0x568
};

struct UMaterialExpressionAntialiasedTextureMask {
	float Threshold; // 0x80
	ETextureColorChannel Channel; // 0x84
};

struct UMovieSceneWidgetMaterialTrack {
	TArray<FName> BrushPropertyNamePath; // 0x90
	FName TrackName; // 0xa0
};

struct UParticleModuleBeamModifier {
	BeamModifierType ModifierType; // 0x30
	FBeamModifierOptions PositionOptions; // 0x34
	FRawDistributionVector position; // 0x38
	FBeamModifierOptions TangentOptions; // 0x80
	FRawDistributionVector Tangent; // 0x88
	char bAbsoluteTangent : 1; // 0xd0
	FBeamModifierOptions StrengthOptions; // 0xd4
	FRawDistributionFloat Strength; // 0xd8
};

struct UParticleModuleTypeDataRibbon {
	int32_t MaxTessellationBetweenParticles; // 0x30
	int32_t SheetsPerTrail; // 0x34
	int32_t MaxTrailCount; // 0x38
	int32_t MaxParticleInTrailCount; // 0x3c
	char bDeadTrailsOnDeactivate : 1; // 0x40
	char bDeadTrailsOnSourceLoss : 1; // 0x40
	char bClipSourceSegement : 1; // 0x40
	char bEnablePreviousTangentRecalculation : 1; // 0x40
	char bTangentRecalculationEveryFrame : 1; // 0x40
	char bSpawnInitialParticle : 1; // 0x40
	ETrailsRenderAxisOption RenderAxis; // 0x44
	float TangentSpawningScalar; // 0x48
	char bRenderGeometry : 1; // 0x4c
	char bRenderSpawnPoints : 1; // 0x4c
	char bRenderTangents : 1; // 0x4c
	char bRenderTessellation : 1; // 0x4c
	float TilingDistance; // 0x50
	float DistanceTessellationStepSize; // 0x54
	char bEnableTangentDiffInterpScale : 1; // 0x58
	float TangentTessellationScalar; // 0x5c
};

struct USimpleDynamicMeshComponent {
	EDynamicMeshTangentCalcType TangentsType; // 0x4b0
	bool bInvalidateProxyOnChange; // 0x4b1
	bool bExplicitShowWireframe; // 0x4e8
	bool bDrawOnTop; // 0x530
};

struct UMagicLeapLightingTrackingComponent {
	bool UseGlobalAmbience; // 0xb0
	bool UseColorTemp; // 0xb1
};

struct ACrowDamageCauserActor {
	ECrowDamageCauser DamageCauser; // 0x220
	ECrowItemType ItemType; // 0x221
	uint16_t ItemIndex; // 0x222
	FString EffectKey; // 0x228
	AActor* OwnerActor; // 0x238
};

struct ULevelStreaming {
	TSoftObjectPtr<UWorld> WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int32_t LevelLODIndex; // 0xb0
	int32_t StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xba
	char bShouldBeLoaded : 1; // 0xba
	char bLocked : 1; // 0xba
	char bIsStatic : 1; // 0xba
	char bShouldBlockOnLoad : 1; // 0xba
	char bShouldBlockOnUnload : 1; // 0xbb
	char bDisableDistanceStreaming : 1; // 0xbb
	char bDrawOnLevelStatusMap : 1; // 0xbb
	FLinearColor LevelColor; // 0xbc
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd0
	float MinTimeBetweenVolumeUnloadRequests; // 0xe0
	FMulticastInlineDelegate OnLevelLoaded; // 0xe8
	FMulticastInlineDelegate OnLevelUnloaded; // 0xf8
	FMulticastInlineDelegate OnLevelShown; // 0x108
	FMulticastInlineDelegate OnLevelHidden; // 0x118
	ULevel* LoadedLevel; // 0x128
	ULevel* PendingUnloadLevel; // 0x130
};

struct UAkCheckBox {
	ECheckBoxState CheckedState; // 0x4b8
	FDelegate CheckedStateDelegate; // 0x4bc
	FCheckBoxStyle WidgetStyle; // 0x4d0
	EHorizontalAlignment HorizontalAlignment; // 0xa50
	bool IsFocusable; // 0xa51
	FAkBoolPropertyToControl ThePropertyToControl; // 0xa58
	FAkWwiseItemToControl ItemToControl; // 0xa68
	FMulticastInlineDelegate AkOnCheckStateChanged; // 0xaa8
	FMulticastInlineDelegate OnItemDropped; // 0xab8
	FMulticastInlineDelegate OnPropertyDropped; // 0xac8
};

struct ACrowWorldPropActor {
	USceneComponent* PropRoot; // 0x228
	UStaticMeshComponent* MainMeshComponent; // 0x230
	bool bUtilityPole; // 0x238
	TArray<FCrowWorldPropSetting> PropSettings; // 0x240
	UCrowWorldDestructionAUD* DestructionAUD; // 0x250
};

struct UPolyEditInsetProperties {
	bool bReproject; // 0x60
	float Softness; // 0x64
	bool bBoundaryOnly; // 0x68
	float AreaScale; // 0x6c
};

struct ABP_Rocket_70mm_C {
	USkeletalMeshComponent* M4_Projectile_Root; // 0x1840
};

struct UOnsetNRT {
	UOnsetNRTSettings* Settings; // 0x78
};

struct UDialogueWave {
	char bMature : 1; // 0x28
	char bOverride_SubtitleOverride : 1; // 0x28
	FString SpokenText; // 0x30
	FString SubtitleOverride; // 0x40
	TArray<FDialogueContextMapping> ContextMappings; // 0x50
	FGuid LocalizationGUID; // 0x60
};

struct ULiveLinkSubjectSettings {
	TArray<ULiveLinkFramePreProcessor*> PreProcessors; // 0x28
	ULiveLinkFrameInterpolationProcessor* InterpolationProcessor; // 0x38
	TArray<ULiveLinkFrameTranslator*> Translators; // 0x40
	ULiveLinkRole* Role; // 0x50
	FFrameRate FrameRate; // 0x58
	bool bRebroadcastSubject; // 0x60
};

struct UCrowWorldSplineFenceComponent {
	bool bStairMode; // 0xc0
	bool bMeshSnap; // 0xc1
	TArray<UStaticMesh*> VariationMeshes; // 0xc8
};

struct UAnimNotify_PlayMontageNotifyWindow {
	FName NotifyName; // 0x30
};

struct UNiagaraDataInterfaceRenderTargetVolume {
	FIntVector Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe4
	char bOverrideFormat : 1; // 0xe5
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTargetVolume*> ManagedRenderTargets; // 0x108
};

struct UDistributionFloatParameterBase {
	FName ParameterName; // 0x40
	float MinInput; // 0x48
	float MaxInput; // 0x4c
	float MinOutput; // 0x50
	float MaxOutput; // 0x54
	DistributionParamMode ParamMode; // 0x58
};

struct UPaperTileLayer {
	FText LayerName; // 0x28
	int32_t LayerWidth; // 0x40
	int32_t LayerHeight; // 0x44
	char bHiddenInGame : 1; // 0x48
	char bLayerCollides : 1; // 0x48
	char bOverrideCollisionThickness : 1; // 0x48
	char bOverrideCollisionOffset : 1; // 0x48
	float CollisionThicknessOverride; // 0x4c
	float CollisionOffsetOverride; // 0x50
	FLinearColor LayerColor; // 0x54
	int32_t AllocatedWidth; // 0x64
	int32_t AllocatedHeight; // 0x68
	TArray<FPaperTileInfo> AllocatedCells; // 0x70
	UPaperTileSet* TileSet; // 0x80
	TArray<int32_t> AllocatedGrid; // 0x88
};

struct UScaleBox {
	EStretch Stretch; // 0x120
	EStretchDirection StretchDirection; // 0x121
	float UserSpecifiedScale; // 0x124
	bool IgnoreInheritedScale; // 0x128
};

struct ACrowWorldEventSafeBox {
	TArray<ACrowSafeBoxEventActor*> SafeBoxList; // 0x370
	int32_t ActivationSafeBoxCount; // 0x380
	TArray<FCrowSafeBoxAreaInfo> SafeBoxAreaList; // 0x388
	FCrowGameIconDisplayInfo AreaDisplayInfo; // 0x398
	TArray<UCrowWorldMapIcon*> AreaIconArray; // 0x420
};

struct UEdgeLoopInsertionOperatorFactory {
	UEdgeLoopInsertionTool* Tool; // 0x30
};

struct UBTTask_MoveDirectlyToward {
	char bDisablePathUpdateOnGoalLocationChange : 1; // 0xb0
	char bProjectVectorGoalToNavigation : 1; // 0xb0
	char bUpdatedDeprecatedProperties : 1; // 0xb0
};

struct UCrowPingWidgetBase {
	AActor* PingTargetActor; // 0x348
	UCanvasPanel* CP_Ping; // 0x350
	UWidgetAnimation* AniPingTargetStart; // 0x358
	UWidgetAnimation* AniPingTargetLoop; // 0x360
	UWidgetAnimation* AniPingHoverLoop; // 0x368
};

struct UParticleModuleColor {
	FRawDistributionVector StartColor; // 0x30
	FRawDistributionFloat StartAlpha; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct UCrowChatWidget {
	UCrowChatTyping* WB_CrowChatTyping; // 0x348
	UScrollBox* SCB_ChatList; // 0x350
	UVerticalBox* VB_ChatList; // 0x358
	UWidgetSwitcher* WS_ChatSatus; // 0x360
	UCanvasPanel* CP_ToolTip; // 0x368
	UCanvasPanel* CP_ChatBG; // 0x370
	UCrowButton* BT_StartTyping; // 0x378
	UCrowChatMessageItem* WB_CrowChatMessageItem; // 0x380
	UCrowChatMessageItem* ItemChatMsgItemWidgetClass; // 0x388
	float LastChatCheckSec; // 0x390
	float ChatListFadeOutSecond; // 0x394
	int32_t ChatListMAX; // 0x398
	FName HoverAnim; // 0x39c
};

struct ALODActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x220
	TMap<UMaterialInterface*, UInstancedStaticMeshComponent*> ImpostersStaticMeshComponents; // 0x228
	UHLODProxy* Proxy; // 0x278
	FName Key; // 0x280
	float LODDrawDistance; // 0x288
	int32_t LODLevel; // 0x28c
	TArray<AActor*> SubActors; // 0x290
	char CachedNumHLODLevels; // 0x2a0
};

struct ACrowPlayerStateBombMission {
	char PlantCompositionCCount; // 0xb78
	char DefuseCompositionCCount; // 0xb79
	bool bIsCompositionCHolder; // 0xb7a
	ECrowGameRoundState CrowGameRoundState; // 0xb7b
	bool bIsPossibleConstructCompositionC; // 0xb7c
	ACrowCompositionCVolume* CompositionCVolume; // 0xb80
};

struct ACrowAICharacterController {
	FCrowAICharacterData Setup_AICharacterData; // 0x350
	FCrowAICharacterParameter Setup_AICharacterParameter; // 0x3b0
	FCrowAIFireTargetData Setup_AIFireTargetData; // 0x3d0
	ACrowAICharacterPawn* AIPawn; // 0x3e8
	ACrowAICharacterSpawner* AISpawner; // 0x3f0
	FTimerHandle UpdateAIPerceptionTimerHandle; // 0x3f8
	bool bStartFire; // 0x400
};

struct ACrowBuildingActor {
	bool LockPropTransforms; // 0x228
	FCrowBuildingEditorPreview EditorPreview; // 0x229
	FCrowBuildingCustomLOD BuildingLOD; // 0x230
	bool IsMergingLODBody; // 0x2a8
	FCrowBuildingDemolitionSetting DemolitionSetting; // 0x2b0
	FCrowBuildingEditorLayout BuildingLayout; // 0x320
	TArray<FCrowBuildingDecalData> DecalDatas; // 0x370
	TArray<FCrowBuildingReflectionData> ReflectionDatas; // 0x380
	bool bIsIndestructible; // 0x390
	float MaxHealth; // 0x394
	float LightProbeRatioMultiplier; // 0x398
	bool bForceMoveToBldLevel; // 0x39c
	bool ClusterSyncActor; // 0x39d
	UCrowWorldDamageCheckerBase* DamageChecker; // 0x3a0
	UCrowWorldDestructionAUD* DestructionAUD; // 0x3a8
	FCrowBuildingVisualizer Visualizer; // 0x3b0
	FBoxSphereBounds BuildingBounds; // 0x408
	FBox BuildingBoundingBox; // 0x424
	bool IsUsingSyncHub; // 0x440
	ACrowWorldSyncHubActor* SyncHubActor; // 0x448
	int32_t PartsCount; // 0x450
	TArray<FCrowBuildingPartsState> RawPartsStates; // 0x458
	TArray<FCrowBuildingHISMCInfo> HISMCInfoArray; // 0x468
	bool HasCleanedUpForDestroy; // 0x478
	TArray<UDecalComponent*> AdditionalDecals; // 0x480
	USceneComponent* BuildRoot; // 0x490
	USceneComponent* PositionRoot; // 0x498
	UCrowBuildingModularBuilder* ModularBuilder; // 0x4a0
	UCrowSoundStateVolumeComponent* SoundStateVolumeComponent; // 0x4a8
};

struct UCrowSquadSummaryWidget {
	TArray<UCrowSquadSummarySlotWidget*> SquadSlotList; // 0x368
	UCrowSquadSummarySlotWidget* WB_SquadSummarySlot1; // 0x378
	UCrowSquadSummarySlotWidget* WB_SquadSummarySlot2; // 0x380
	UCrowSquadSummarySlotWidget* WB_SquadSummarySlot3; // 0x388
	UCrowSquadSummarySlotWidget* WB_SquadSummarySlot4; // 0x390
	UProgressBar* PB_ResourceCount; // 0x398
	UCrowButton* BT_Spectating; // 0x3a0
	UCrowButton* BT_Nexttolobby; // 0x3a8
	UTextBlock* TB_CurrencyCount; // 0x3b0
	UTextBlock* TB_TagetCurrency; // 0x3b8
};

struct UCrowWorldIconWidgetBase {
	UCanvasPanel* CP_Root; // 0x378
	UCanvasPanel* CP_LocateArrow; // 0x380
	UCanvasPanel* CP_AnchorRoot; // 0x388
	UCanvasPanel* CP_Icon; // 0x390
	UTextBlock* TB_Name; // 0x398
	UTextBlock* TB_Distance; // 0x3a0
	TArray<UWidget*> IconLOD; // 0x3a8
	AActor* TargetActor; // 0x3b8
};

struct UMRMeshComponent {
	UMaterialInterface* Material; // 0x450
	UMaterialInterface* WireframeMaterial; // 0x458
	bool bCreateMeshProxySections; // 0x460
	bool bUpdateNavMeshOnMeshUpdate; // 0x461
	bool bNeverCreateCollisionMesh; // 0x462
	UBodySetup* CachedBodySetup; // 0x468
	TArray<UBodySetup*> BodySetups; // 0x470
};

struct UMaterialExpressionSphericalParticleOpacity {
	FExpressionInput Density; // 0x40
	float ConstantDensity; // 0x54
};

struct UAkMediaAssetData {
	bool IsStreamed; // 0x28
	bool UseDeviceMemory; // 0x29
};

struct UCrowLocalBodyIconWidget {
	UCanvasPanel* CP_Root; // 0x348
	UCanvasPanel* CP_LocateArrow; // 0x350
	UCanvasPanel* CP_AnchorRoot; // 0x358
	UCanvasPanel* CP_Icon; // 0x360
	UTextBlock* TB_Distance; // 0x368
};

struct UNiagaraPreviewAxis_InterpParamBase {
	FName Param; // 0x28
	int32_t Count; // 0x30
};

struct UGetGeoLocationAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UJoinSessionCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UCrowSelectWorldButtonWidget {
	UImage* IMG_World; // 0x348
	UTextBlock* TB_WorldName; // 0x350
	UCrowToggleButton* CTB_WorldSelect; // 0x358
	UCanvasPanel* CP_Info; // 0x360
	UCanvasPanel* CP_Lock; // 0x368
	FCrowSceneTableRow SceneTableRow; // 0x380
};

struct UCrowSquadMatchRespawnWidget {
	USizeBox* SB_BT_RedeployMember00; // 0x368
	UTextBlock* TB_SquadNum; // 0x370
	UImage* IMG_SquadBack; // 0x378
	UTextBlock* TB_MenuTitle_12; // 0x380
	UTextBlock* TB_CoolTime_2; // 0x388
	UCrowButton* WB_BT_RedeployMember00; // 0x390
	USizeBox* SB_BT_RedeployMember01; // 0x398
	UTextBlock* TB_SquadNum_2; // 0x3a0
	UImage* IMG_SquadBack_2; // 0x3a8
	UTextBlock* TB_MenuTitle; // 0x3b0
	UTextBlock* TB_CoolTime_3; // 0x3b8
	UCrowButton* WB_BT_RedeployMember01; // 0x3c0
	USizeBox* SB_BT_RedeployMember02; // 0x3c8
	UTextBlock* TB_SquadNum_3; // 0x3d0
	UImage* IMG_SquadBack_3; // 0x3d8
	UTextBlock* TB_MenuTitle_2; // 0x3e0
	UTextBlock* TB_CoolTime_4; // 0x3e8
	UCrowButton* WB_BT_RedeployMember02; // 0x3f0
	UCanvasPanel* CP_MemberEmpty; // 0x3f8
	TArray<FCrowSquadMatchRespawnInfo> InfoArray; // 0x400
};

struct USoundCue {
	char bPrimeOnLoad : 1; // 0x1b8
	USoundNode* FirstNode; // 0x1c0
	float VolumeMultiplier; // 0x1c8
	float PitchMultiplier; // 0x1cc
	FSoundAttenuationSettings AttenuationOverrides; // 0x1d0
	float SubtitlePriority; // 0x570
	char bOverrideAttenuation : 1; // 0x578
	char bExcludeFromRandomNodeBranchCulling : 1; // 0x578
	int32_t CookedQualityIndex; // 0x57c
	char bHasPlayWhenSilent : 1; // 0x580
};

struct ANiagaraPreviewGrid {
	UNiagaraSystem* System; // 0x220
	ENiagaraPreviewGridResetMode ResetMode; // 0x228
	UNiagaraPreviewAxis* PreviewAxisX; // 0x230
	UNiagaraPreviewAxis* PreviewAxisY; // 0x238
	ANiagaraPreviewBase* PreviewClass; // 0x240
	float SpacingX; // 0x248
	float SpacingY; // 0x24c
	int32_t NumX; // 0x250
	int32_t NumY; // 0x254
	TArray<UChildActorComponent*> PreviewComponents; // 0x258
};

struct UCrowVehicleMovementLandWheels {
	UCrowLandWheelsConfigEngine* EngineConfigClass; // 0x190
	UCrowLandWheelsConfigBody* BodyConfigClass; // 0x198
	FCrowLandWheelsEngineSetting EngineSetting; // 0x1a0
	TArray<FCrowLandWheelsSingleWheelState> WheelStates; // 0x280
	int32_t UpdateCacheIndex; // 0x290
	TMap<AActor*, FCrowLandWheelsSqueezeDamage> DamagesByWheel; // 0x298
	float LastDamageTime; // 0x2e8
};

struct UNiagaraPreviewAxis_InterpParamInt32 {
	int32_t Min; // 0x38
	int32_t Max; // 0x3c
};

struct UBTCompositeNode {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct UMaterialExpressionNoise {
	FExpressionInput position; // 0x40
	FExpressionInput FilterWidth; // 0x54
	float Scale; // 0x68
	int32_t Quality; // 0x6c
	ENoiseFunction NoiseFunction; // 0x70
	char bTurbulence : 1; // 0x74
	int32_t Levels; // 0x78
	float OutputMin; // 0x7c
	float OutputMax; // 0x80
	float LevelScale; // 0x84
	char bTiling : 1; // 0x88
	uint32_t RepeatSize; // 0x8c
};

struct UCrowGameOpeningWidget {
	UTextBlock* Text_Title; // 0x348
	UTextBlock* Text_SubTitle; // 0x350
	UTextBlock* Text_Gamemode; // 0x358
};

struct UDrawPolyPathTool {
	UDrawPolyPathProperties* TransformProps; // 0xa0
	UDrawPolyPathExtrudeProperties* ExtrudeProperties; // 0xa8
	UNewMeshMaterialProperties* MaterialProperties; // 0xb0
	UConstructionPlaneMechanic* PlaneMechanic; // 0x140
	UPolyEditPreviewMesh* EditPreview; // 0x1e8
	UPlaneDistanceFromHitMechanic* ExtrudeHeightMechanic; // 0x1f0
	USpatialCurveDistanceMechanic* CurveDistMechanic; // 0x1f8
	UCollectSurfacePathMechanic* SurfacePathMechanic; // 0x200
};

struct UAISense_Team {
	TArray<FAITeamStimulusEvent> RegisteredEvents; // 0x80
};

struct UMovieSceneCameraCutTrack {
	bool bCanBlend; // 0x78
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct UGizmoPlaneTranslationParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	FVector2D Parameter; // 0xb0
	FGizmoVec2ParameterChange LastChange; // 0xb8
	FVector CurTranslationOrigin; // 0xc8
	FVector CurTranslationNormal; // 0xd4
	FVector CurTranslationAxisX; // 0xe0
	FVector CurTranslationAxisY; // 0xec
	FTransform InitialTransform; // 0x100
};

struct UPolyEditCommonProperties {
	bool bShowWireframe; // 0x60
	bool bSelectEdgeLoops; // 0x61
	ELocalFrameMode LocalFrameMode; // 0x64
	bool bLockRotation; // 0x68
	bool bSnapToWorldGrid; // 0x69
};

struct UHoleFillTool {
	USmoothHoleFillProperties* SmoothHoleFillProperties; // 0x98
	UHoleFillToolProperties* Properties; // 0xa0
	UHoleFillToolActions* Actions; // 0xa8
	UHoleFillStatisticsProperties* Statistics; // 0xb0
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xb8
	UPolygonSelectionMechanic* SelectionMechanic; // 0xc0
};

struct UCrowLobbySlotToggleButton {
	UVerticalBox* VB_PurchaseStatus; // 0x5a8
	UImage* IMG_PurchaseIcon; // 0x5b0
	UWidgetSwitcher* WS_LockStatus; // 0x5b8
	UTextBlock* TB_Timer; // 0x5c0
	ECrowLobbySlotType LobbySlotType; // 0x5c8
	bool bLocked; // 0x5c9
	float DeltaTime; // 0x5cc
};

struct UCrowNoticeWebBrowser {
	UWidget* WB_Notice; // 0x348
	UCrowButton* BT_Exit; // 0x350
	UTextBlock* TB_Title; // 0x358
};

struct ULightComponent {
	float Temperature; // 0x228
	float MaxDrawDistance; // 0x22c
	float MaxDistanceFadeRange; // 0x230
	char bUseTemperature : 1; // 0x234
	int32_t ShadowMapChannel; // 0x238
	float MinRoughness; // 0x240
	float SpecularScale; // 0x244
	float ShadowResolutionScale; // 0x248
	float ShadowBias; // 0x24c
	float ShadowSlopeBias; // 0x250
	float ShadowSharpen; // 0x254
	float ContactShadowLength; // 0x258
	char ContactShadowLengthInWS : 1; // 0x25c
	char InverseSquaredFalloff : 1; // 0x25c
	char CastTranslucentShadows : 1; // 0x25c
	char bCastShadowsFromCinematicObjectsOnly : 1; // 0x25c
	char bAffectDynamicIndirectLighting : 1; // 0x25c
	char bForceCachedShadowsForMovablePrimitives : 1; // 0x25c
	FLightingChannels LightingChannels; // 0x260
	UMaterialInterface* LightFunctionMaterial; // 0x268
	FVector LightFunctionScale; // 0x270
	UTextureLightProfile* IESTexture; // 0x280
	char bUseIESBrightness : 1; // 0x288
	float IESBrightnessScale; // 0x28c
	float LightFunctionFadeDistance; // 0x290
	float DisabledBrightness; // 0x294
	char bEnableLightShaftBloom : 1; // 0x298
	float BloomScale; // 0x29c
	float BloomThreshold; // 0x2a0
	float BloomMaxBrightness; // 0x2a4
	FColor BloomTint; // 0x2a8
	bool bUseRayTracedDistanceFieldShadows; // 0x2ac
	float RayStartOffsetDepthScale; // 0x2b0
};

struct ULocalizedOverlays {
	UBasicOverlays* DefaultOverlays; // 0x28
	TMap<FString, UBasicOverlays*> LocaleToOverlaysMap; // 0x30
};

struct UMaterialExpressionFunctionOutput {
	FName OutputName; // 0x40
	FString Description; // 0x48
	int32_t SortPriority; // 0x58
	FExpressionInput A; // 0x5c
	char bLastPreviewed : 1; // 0x70
	FGuid ID; // 0x74
};

struct AUPSGroupMovementFormation {
	UArrowComponent* RootArrowComponent; // 0x220
	TSet<ACharacter*> CharactersInFormation; // 0x228
	ACharacter* LeaderCharacter; // 0x278
};

struct UEditableGeometryCollectionAdapter {
	UGeometryCollection* GeometryCollection; // 0x28
	UGeometryCollection* OriginalGeometryCollection; // 0x30
	int32_t GeometryCollectionLODIndex; // 0x38
};

struct UGizmoAxisIntervalParameterSource {
	TScriptInterface<IGizmoFloatParameterSource> FloatParameterSource; // 0x48
	float MinParameter; // 0x58
	float MaxParameter; // 0x5c
};

struct UDisplaceMeshTextureMapProperties {
	UTexture2D* DisplacementMap; // 0x60
};

struct UDynamicMeshSculptTool {
	USculptBrushProperties* BrushProperties; // 0xc0
	UBrushSculptProperties* SculptProperties; // 0xc8
	USculptMaxBrushProperties* SculptMaxBrushProperties; // 0xd0
	UKelvinBrushProperties* KelvinBrushProperties; // 0xd8
	UBrushRemeshProperties* RemeshProperties; // 0xe0
	UFixedPlaneBrushProperties* GizmoProperties; // 0xe8
	UMeshEditingViewProperties* ViewProperties; // 0xf0
	UBrushStampIndicator* BrushIndicator; // 0x130
	UMaterialInstanceDynamic* BrushIndicatorMaterial; // 0x138
	UPreviewMesh* BrushIndicatorMesh; // 0x140
	UOctreeDynamicMeshComponent* DynamicMeshComponent; // 0x148
	UMaterialInstanceDynamic* ActiveOverrideMaterial; // 0x150
	UTransformGizmo* PlaneTransformGizmo; // 0xc50
	UTransformProxy* PlaneTransformProxy; // 0xc58
};

struct UVertexBrushSculptProperties {
	EMeshVertexSculptBrushType PrimaryBrushType; // 0x60
	EMeshSculptFalloffType PrimaryFalloffType; // 0x61
	bool bFreezeTarget; // 0x62
	bool bSmoothErases; // 0x63
};

struct UMovieSceneCameraAnimTrack {
	TArray<UMovieSceneSection*> CameraAnimSections; // 0x80
};

struct UCrowDOFComponent {
	bool IsActiveDOF; // 0xb0
	FCrowDOFSetting DOFSetting; // 0xc0
	UStaticMeshComponent* UnaffectedDOFMeshComp; // 0x640
	bool bInitialized; // 0x648
};

struct UCrowObjectiveConquestWidget {
	UPaperSprite* RedMyTeam; // 0x4b8
	UPaperSprite* RedEnemy; // 0x4c0
	UPaperSprite* BlueMyTeam; // 0x4c8
	UPaperSprite* BlueEnemy; // 0x4d0
	UCrowConquestGaugeNumber* ConquestGaugeNumberClass; // 0x4d8
	UTextBlock* TB_SubMessage; // 0x4e0
	UBorder* BD_SubMessage; // 0x4e8
	UCanvasPanel* CP_ConquestIconRoot; // 0x4f0
	UCanvasPanel* CP_OverLoadAlarm; // 0x4f8
	UTextBlock* TB_OverloadTimer; // 0x500
	UCanvasPanel* CP_OverLoadStart; // 0x508
	UCanvasPanel* CP_AllyTicket_Decrease; // 0x510
	UCanvasPanel* CP_EnemyTicket_Decrease; // 0x518
	UCanvasPanel* CP_AllyNumber; // 0x520
	UCanvasPanel* CP_EnemyNumber; // 0x528
	UCanvasPanel* CP_FastWidget_Ally; // 0x530
	UCanvasPanel* CP_FastWidget_Enemy; // 0x538
	UImage* IMG_AllyFast; // 0x540
	UImage* IMG_EnemyFast; // 0x548
	UCrowWidgetBase* WB_DiveActive_Ally_HUD; // 0x550
	UCrowWidgetBase* WB_DiveActive_Enemy_HUD; // 0x558
	UWidgetAnimation* AniMessageShow; // 0x560
	UWidgetAnimation* AniMessageHide; // 0x568
	UWidgetAnimation* AniAllyTicket_Decrease; // 0x570
	UWidgetAnimation* AniEnemyTicket_Decrease; // 0x578
	UWidgetAnimation* AniOverloadTimerShow; // 0x580
	UWidgetAnimation* AniOverloadTimerHide; // 0x588
	float SubMessageDisplayTime; // 0x590
	TArray<FText> SubMessageArray; // 0x598
};

struct UCrowRewardTableManager {
	TMap<uint32_t, FCrowRewardTableRow> RewardTable; // 0x70
	FString RewardLog; // 0xc0
};

struct AStaticMeshActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x220
	bool bStaticMeshReplicateMovement; // 0x228
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x229
};

struct UCrowScoreInfoConquestUserSummary {
	bool IsEnemy; // 0x348
	UCrowScoreInfoConquestUSItem* UserSummaryItem; // 0x350
	UScrollBox* SB_TeamSummary; // 0x358
	UImage* IMG_TeamColor; // 0x360
	TArray<UCrowScoreInfoConquestUSItem*> UserUIArray; // 0x368
};

struct AWaterBodyIsland {
	UWaterSplineComponent* SplineComp; // 0x228
};

struct ACrowPlayerStartTDM {
	ECrowTeam_RedBlue SpawnTeam; // 0x250
};

struct UCrowSpectatorCustomModeWidget {
	UTextBlock* TB_Squad; // 0x348
	UImage* IMG_Squad_Color; // 0x350
	UTextBlock* TB_KillCount; // 0x358
	UTextBlock* TB_PlayerName; // 0x360
	UImage* IMG_PrevIcon; // 0x368
	UImage* IMG_NextIcon; // 0x370
	UImage* IMG_ClosePlayerList; // 0x378
	UCrowSpectatorTargetListWidget* WB_SpectatorTargetList; // 0x380
	UCanvasPanel* CP_Watching; // 0x388
	ACrowPlayerStateBase* AttachedPlayerState; // 0x390
};

struct UCrowLibraryTime {
	TArray<FCrowTimeInfo> TimeInfoArray; // 0x30
};

struct UCrowBombMissionResultRoundWidget {
	UImage* IMGWinAttackerIcon; // 0x348
	UImage* IMGWinDefencerIcon; // 0x350
	UImage* IMGLoseAttackerIcon; // 0x358
	UImage* IMGLoseDefencerIcon; // 0x360
	UWidgetAnimation* AniShow; // 0x368
	UWidgetAnimation* AniWin; // 0x370
	UWidgetAnimation* AniLose; // 0x378
};

struct UPawnNoiseEmitterComponent {
	char bAIPerceptionSystemCompatibilityMode : 1; // 0xb0
	FVector LastRemoteNoisePosition; // 0xb4
	float NoiseLifetime; // 0xc0
	float LastRemoteNoiseVolume; // 0xc4
	float LastRemoteNoiseTime; // 0xc8
	float LastLocalNoiseVolume; // 0xcc
	float LastLocalNoiseTime; // 0xd0
};

struct UMaterialExpressionDeriveNormalZ {
	FExpressionInput InXY; // 0x40
};

struct UCrowWorldMapLocationSlot {
	bool bIsHorizontal; // 0x348
	UWidgetSwitcher* WS; // 0x350
	UImage* H_LeftSpacer; // 0x358
	UImage* H_RightSpacer; // 0x360
	UImage* V_LeftSpacer; // 0x368
	UImage* V_RightSpacer; // 0x370
	UTextBlock* TB_HLocation; // 0x378
	UTextBlock* TB_VLocation; // 0x380
};

struct UPostProcessComponent {
	FPostProcessSettings Settings; // 0x200
	float Priority; // 0x750
	float BlendRadius; // 0x754
	float BlendWeight; // 0x758
	char bEnabled : 1; // 0x75c
	char bUnbound : 1; // 0x75c
};

struct UAREnvironmentCaptureProbe {
	FVector Extent; // 0xf8
	UAREnvironmentCaptureProbeTexture* EnvironmentCaptureTexture; // 0x108
};

struct UCrowWorldSyncHubConfig {
	FCrowWorldSyncDataSetting SyncDataSetting; // 0x28
	FCrowWorldGenerateSubLevelSetting EditorSubLevelSetting; // 0x40
	FCrowWorldGenerateHLODSetting EditorHLODSetting; // 0xa8
};

struct ULandscapeSplinesComponent {
	TArray<ULandscapeSplineControlPoint*> ControlPoints; // 0x440
	TArray<ULandscapeSplineSegment*> Segments; // 0x450
	TArray<UMeshComponent*> CookedForeignMeshComponents; // 0x460
};

struct ACrowRocketLauncherTrail {
	UParticleSystem* TrailParticle; // 0x220
	UParticleSystemComponent* TrailParticleSystemComp; // 0x228
};

struct AGameStateBase {
	AGameModeBase* GameModeClass; // 0x220
	AGameModeBase* AuthorityGameMode; // 0x228
	ASpectatorPawn* SpectatorClass; // 0x230
	TArray<APlayerState*> PlayerArray; // 0x238
	bool bReplicatedHasBegunPlay; // 0x248
	float ReplicatedWorldTimeSeconds; // 0x24c
	float ServerWorldTimeSecondsDelta; // 0x250
	float ServerWorldTimeSecondsUpdateFrequency; // 0x254
};

struct UProceduralShapeToolProperties {
	bool bInstanceIfPossible; // 0x60
	EMakeMeshPolygroupMode PolygroupMode; // 0x61
	EMakeMeshPlacementType PlaceMode; // 0x62
	bool bSnapToGrid; // 0x63
	EMakeMeshPivotLocation PivotLocation; // 0x64
	float Rotation; // 0x68
	bool bAlignShapeToPlacementSurface; // 0x6c
};

struct UEndMatchCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UCrowItemInfoWidget {
	UCanvasPanel* CP_Main; // 0x350
	UCanvasPanel* CP_Desc; // 0x358
	UCanvasPanel* CP_EquipArmorInfo; // 0x360
	UWidgetSwitcher* WS_Title; // 0x368
	UImage* IMG_FirstKeyX; // 0x370
	UImage* IMG_SecondKeyX; // 0x378
	UTextBlock* TB_ItemCategory; // 0x380
	UTextBlock* TB_ItemName; // 0x388
	UTextBlock* TB_TitleText; // 0x390
	UTextBlock* TB_Amount; // 0x398
	UTextBlock* TB_FirstKey; // 0x3a0
	UTextBlock* TB_SecondKey; // 0x3a8
	UTextBlock* TB_ThirdKey; // 0x3b0
	UTextBlock* TB_PartsName; // 0x3b8
	UTextBlock* TB_HelpText; // 0x3c0
	UTextBlock* TB_Desc; // 0x3c8
	URichTextBlock* RTB_ItemGrade; // 0x3d0
	UImage* IMG_Bg_ItemGrade; // 0x3d8
	UImage* IMG_EquipPartsSlot_ItemGrade; // 0x3e0
	UCrowProgressBar* CPB_EquipProgressBar; // 0x3e8
	UHorizontalBox* HB_Equip; // 0x3f0
	UHorizontalBox* HB_Get; // 0x3f8
	UCanvasPanel* CP_MyWeapon; // 0x400
	USizeBox* SB_WeaponPartsInfo; // 0x408
	UCrowWeaponPartsListWidget* WB_WeaponPartsList; // 0x410
	UCrowWeaponPartsListWidget* WB_WeaponPartsList_Equip; // 0x418
	UCrowWidgetImage* IMG_Item; // 0x420
	UCrowWidgetImage* IMG_weapon00; // 0x428
	UCrowWidgetImage* IMG_weapon01; // 0x430
	UCrowWidgetImage* IMG_weapon02; // 0x438
	UCanvasPanel* CP_Helmet; // 0x440
	UCanvasPanel* CP_Armor; // 0x448
	UCanvasPanel* CP_ArmorInfo; // 0x450
	UCanvasPanel* CP_UseWeapon; // 0x458
	UProgressBar* PB_ArmorBar; // 0x460
	UProgressBar* PB_HelmetBar; // 0x468
	UTextBlock* TB_Armor; // 0x470
	UTextBlock* TB_Helmet; // 0x478
	UTextBlock* TB_CannotEquip; // 0x480
	UTextBlock* TB_ItemName_Equipped; // 0x488
	UTextBlock* TB_EquipWeaponCategory; // 0x490
	UCanvasPanel* CP_EquipParts; // 0x498
	UCanvasPanel* CP_EquipPartsSlot; // 0x4a0
	UCrowWidgetImage* IMG_PartsEquipWeapon; // 0x4a8
	UCrowWidgetImage* IMG_Parts_Equipped; // 0x4b0
	UCrowWidgetImage* IMG_Parts; // 0x4b8
	UImage* IMG_Arrow; // 0x4c0
	UWidgetSwitcher* WS_ItemGrade_Equip; // 0x4c8
	USizeBox* SB_WeaponPartsInfo_Equip; // 0x4d0
	UWidgetSwitcher* WS_ThirdKey; // 0x4d8
	UTextBlock* TB_EquipArmorPercent; // 0x4e0
	UProgressBar* PB_EquipArmorBar; // 0x4e8
	UWidgetSwitcher* WS_ItemGrade; // 0x4f0
	UWidgetSwitcher* WS_ItemGrade_Parts; // 0x4f8
	UWidgetSwitcher* WS_Status; // 0x500
	UWidgetSwitcher* WS_ItemDetail_Equipped; // 0x508
	UWidgetSwitcher* WS_DescKey; // 0x510
	UWidgetSwitcher* WS_FirstKey; // 0x518
	UWidgetSwitcher* WS_SecondKey; // 0x520
	UWidgetSwitcher* WS_ItemDetail; // 0x528
	UWidgetSwitcher* WS_ArmorGauge; // 0x530
	UCrowInputMappingWidget* RTB_FirstKey; // 0x538
	UCrowInputMappingWidget* RTB_SecondKey; // 0x540
	UCrowInputMappingWidget* RTB_DeskKey_Brief; // 0x548
	UCrowInputMappingWidget* RTB_DeskKey_Detail; // 0x550
	float EquipTime; // 0x558
	UImage* IMG_FirstKey; // 0x560
	UImage* IMG_SecondKey; // 0x568
	UPaperSprite* MouseLeftButton; // 0x570
	UPaperSprite* MouseWheelButton; // 0x578
	UPaperSprite* FKeySprite; // 0x580
	UPaperSprite* XKeySprite; // 0x588
	ACrowCharacterPawn* CrowCharacterPawn; // 0x590
	UCrowGameInvenComponent* InvenComp; // 0x598
	ACrowItemBase* TargetItem; // 0x5a0
	FText EquipText; // 0x5a8
	FText SecondText; // 0x5c0
	bool IsEquip; // 0x5d8
	bool IsGet; // 0x5d9
	bool IsEquipTimeComplete; // 0x5da
	UCrowInvenItemSlot* CurrentInvenItemSlot; // 0x5e0
	char PartsEquipSlot; // 0x5f3
	ACrowPickupInventory* CurrPickupInventory; // 0x5f8
	int32_t PickupInvenSlot; // 0x600
	TArray<UCrowWidgetImage*> CanEquipWeaponImages; // 0x608
};

struct UCrowTopBarDescWidget {
	UWidgetSwitcher* WS_TopBar_Desc; // 0x348
};

struct UDrawPolygonToolSnapProperties {
	bool bEnableSnapping; // 0x60
	bool bSnapToWorldGrid; // 0x61
	bool bSnapToVertices; // 0x62
	bool bSnapToEdges; // 0x63
	bool bSnapToAngles; // 0x64
	bool bSnapToLengths; // 0x65
	float SegmentLength; // 0x68
	bool bHitSceneObjects; // 0x6c
	float HitNormalOffset; // 0x70
};

struct UCrowWeaponPartItemWidget {
	UImage* IMG_Frame; // 0x670
	UCrowWidgetImage* IMG_PartsIcon; // 0x678
	UCrowDragDropWidgetBase* WB_CrowDragDropPanel; // 0x680
	UCrowInvenWeaponInfoWidget* WeaponInfoWidget; // 0x688
	ECrowWeaponPartsType PartsType; // 0x690
	bool IsDefaultParts; // 0x691
	FCrowItemData InvenData; // 0x698
};

struct UCrowWeaponStateBase {
	ACrowWeaponBase* WeaponBase; // 0x28
	ACrowCharacterPawn* CharacterOwner; // 0x30
};

struct UARTrackedPose {
	FARPose3D TrackedPose; // 0xf8
};

struct URendererOverrideSettings {
	char bSupportAllShaderPermutations : 1; // 0x38
	char bForceRecomputeTangents : 1; // 0x38
};

struct UAkAssetPlatformData {
	UAkAssetData* CurrentAssetData; // 0x28
};

struct UCrowRadialButtonConquestSkill {
	FLinearColor EnableTextColor; // 0x3c8
	FLinearColor DisableTextColor; // 0x3d8
	UImage* IMG_DisableBG; // 0x3e8
	UCanvasPanel* CP_CoolTimeContents; // 0x3f0
	UTextBlock* TB_CoolTime; // 0x3f8
};

struct UParticleModuleAccelerationDragScaleOverLife {
	UDistributionFloat* DragScale; // 0x38
	FRawDistributionFloat DragScaleRaw; // 0x40
};

struct UCrowWidgetIconToggleButton {
	UImage* IMG_Icon; // 0x5a8
	UImage* IMG_SelectIcon; // 0x5b0
	FSlateBrush ButtonIcon; // 0x5b8
	FSlateBrush ButtonSelectIcon; // 0x640
};

struct ACrowWorldPropLocator {
	float Radius; // 0x220
	int32_t RandomSeed; // 0x224
	int32_t DuplicateCount; // 0x228
	FCrowWorldPropLocatorSetting Setting; // 0x22c
	TArray<UObject*> PropAssets; // 0x248
	bool SkipRearrange; // 0x258
	USphereComponent* Sphere; // 0x260
	TArray<FCrowWorldPropLocatorItem> PropItems; // 0x268
};

struct UPhysicsThrusterComponent {
	float ThrustStrength; // 0x1f8
};

struct UCrowWorldTrigger {
	ACrowWorldActor* WorldActor; // 0x440
	UCrowWorldAnimator* WorldAnimator; // 0x448
	int16_t LayoutItemIndex; // 0x450
	ECrowWorldGeomType GeometryType; // 0x452
	ECrowWorldTriggerType TriggerType; // 0x453
	int8_t TriggerState; // 0x454
	UBodySetup* TriggerBodySetup; // 0x458
	FString LocalTextKey_Open; // 0x460
	FString LocalTextKey_Close; // 0x470
};

struct ABP_CrowCharacterPawn_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1b10
	UCrowFoliageAffectorComponent* CrowFoliageAffector; // 0x1b18
	UBoxComponent* Box_Trigger; // 0x1b20
	UBoxComponent* Box_Interaction; // 0x1b28
	UCrowTriggerComponent* CrowTrigger_Revive; // 0x1b30
};

struct UFloatingPawnMovement {
	float MaxSpeed; // 0x138
	float Acceleration; // 0x13c
	float Deceleration; // 0x140
	float TurningBoost; // 0x144
	char bPositionCorrected : 1; // 0x148
};

struct ACrowMissionArea {
	UBoxComponent* Root; // 0x228
	USceneComponent* IconLocation; // 0x230
	UStaticMeshComponent* AreaRotation; // 0x238
	TArray<ECrowGameMode> EnableGameModes; // 0x240
	bool bIsEnableIndicatorPing; // 0x250
	float IndicatorPingLifeTime; // 0x254
	TMap<uint32_t, FCrowActorOverlapRef> ActorOverlapRefMap; // 0x258
	TArray<UShapeComponent*> CollisionShapeArray; // 0x2a8
	TArray<UCrowMissionAreaComponent*> ComponentArray; // 0x2b8
	UCrowMissionAreaRespawn* RespawnComponent; // 0x2c8
	uint32_t AreaID; // 0x2d0
};

struct UUniformVector {
	float Magnitude; // 0xb0
	FVector Direction; // 0xb4
};

struct UUPSEnemyPointActionComponent {
	ACharacter* CharacterOnPoint; // 0x1f8
	FGameplayTag PointTag; // 0x218
	UAnimSequenceBase* PreviewAnim; // 0x220
	float PreviewAnimStartTime; // 0x228
	float ArrowSize; // 0x22c
	float ArrowOffset; // 0x230
	float BillboardSize; // 0x234
	FRotator MeshRotationOffset; // 0x238
	bool bOverrideProjectSettingsMesh; // 0x244
	bool bOverrideProjectSettingsMaterial; // 0x245
	bool bOverrideProjectSettingsSprite; // 0x246
	USkeletalMesh* OverrideEnemyActionPointComponentMesh; // 0x248
	UMaterialInterface* OverrideEnemyActionPointComponentMeshMaterial; // 0x250
	UTexture2D* OverrideEnemyActionPointComponentBillboardSprite; // 0x258
};

struct UCrowClanUserSlotWidget {
	UCrowButton* BT_Slot_ClanUserList; // 0x348
	UWidgetSwitcher* WS_Slot_UserList; // 0x350
	UImage* IMG_Selected; // 0x358
	UWidgetSwitcher* WS_UserMark; // 0x360
	UImage* IMG_UserMark; // 0x368
	UImage* IMG_UserList_ClassMark; // 0x370
	UTextBlock* TB_UserList_Level; // 0x378
	UTextBlock* TB_UserList_Name; // 0x380
	UWidgetSwitcher* WS_OddSwitcher; // 0x388
	UWidgetSwitcher* WS_Online_Offline; // 0x390
	UTextBlock* TB_UserList_ClanPoint; // 0x398
	UTextBlock* TB_UserList_LastPlayTime; // 0x3a0
	UCanvasPanel* CP_Offline; // 0x3a8
	UCrowButton* WB_BT_Invited; // 0x3b0
	UImage* IMG_UserInvite_ClassMark; // 0x3b8
	UTextBlock* TB_UserInvite_Level; // 0x3c0
	UTextBlock* TB_UserInvite_Name; // 0x3c8
	UCrowButton* WB_BT_Cancel; // 0x3d0
	UImage* IMG_UserCancel_ClassMark; // 0x3d8
	UTextBlock* TB_UserCancel_Level; // 0x3e0
	UTextBlock* TB_UserCancel_Name; // 0x3e8
	UCrowButton* WB_BT_JoinSetOK; // 0x3f0
	UCrowButton* WB_BT_JoinSetCancel; // 0x3f8
	UImage* IMG_UserJoinSet_ClassMark; // 0x400
	UTextBlock* TB_UserJoinSet_Level; // 0x408
	UTextBlock* TB_UserJoinSet_Name; // 0x410
};

struct UBTTaskNode {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct UCrowCompassInfoWIdget {
	UMaterialInstance* CompassMaterialIns; // 0x348
	UMaterialInstanceDynamic* CompassMaterialInsDynamic; // 0x350
	UTextBlock* TB_CurrentAngle; // 0x358
	UImage* IMG_Compass; // 0x360
	UImage* IMG_EnemyFire_Left; // 0x368
	UImage* IMG_EnemyFire_Right; // 0x370
	URetainerBox* RetainerBox_EnemyFire; // 0x378
	UOverlay* Overlay_EnemyFire; // 0x380
	UUserWidget* EnemyFireMarker; // 0x388
	TArray<UCrowCompassEnemyFireMarker*> EnemyFireMarkerArray; // 0x390
};

struct UCrowChatMessageItem {
	UTextBlock* TB_ChatType; // 0x348
	URichTextBlock* TB_ChatMessage; // 0x350
	URichTextBlock* TB_ChatSystemMessage; // 0x358
	UCrowButton* BT_WisperChat; // 0x360
	UWidgetSwitcher* WS_ChatMessage; // 0x368
	FCrowChatData ChatData; // 0x370
};

struct UCrowImpactDamageControl {
	float HideObjectSecond; // 0xc0
	float MultiplyImpulse; // 0xc4
	float TireDestroyDistanceDriven; // 0xc8
	bool bIsTakeDamageImpulse; // 0xcc
	float TakeMultiplyImpactDamage; // 0xd0
	float MultiplyImpactDivideDamge; // 0xd4
	bool bIsTakeDamageUnderCharacter; // 0xd8
	float IgnoreOtherActorTakeDamage; // 0xdc
	TMap<FName, FST_BrokenBone> ArrayCanBrokenBones; // 0xe0
	TMap<FName, FST_DamageMaterial> ArrayDamageMaterials; // 0x130
	TMap<FName, FST_DamageWheel> ArrayCanBrokenWheel; // 0x180
	TArray<FName> IgnorePrimitiveNames; // 0x1d0
	UDamageType* DamageType; // 0x1e0
	USkeletalMeshComponent* BodySKC; // 0x1e8
	float BodyMass; // 0x1f0
	FTimerHandle TickTimerHandle; // 0x1f8
	TMap<int32_t, FST_PreImpactInfo> ImpactActorInfos; // 0x200
	TMap<FName, float> ImpactBoneInfos; // 0x250
	TMap<FName, float> BonesToHide; // 0x2a0
	float fImpactDivideDamage; // 0x2f0
	float LastSpawnImpactFxTime; // 0x2f4
};

struct AOnlineBeaconClient {
	AOnlineBeaconHostObject* BeaconOwner; // 0x250
	UNetConnection* BeaconConnection; // 0x258
	EBeaconConnectionState ConnectionState; // 0x260
};

struct UCrowRecordWeaponInfoWidget {
	UWidgetSwitcher* WSWeaponInfo; // 0x348
	UTextBlock* TBKill; // 0x350
	UTextBlock* TBHeadShot; // 0x358
	UTextBlock* TBFaint; // 0x360
	UTextBlock* TBLv; // 0x368
	UProgressBar* PBExp; // 0x370
	UTextBlock* TBExp; // 0x378
	UTextBlock* TBMaxExp; // 0x380
	UTextBlock* TBKill_2; // 0x388
	UTextBlock* TBFaint_2; // 0x390
	UTextBlock* TBUse_2; // 0x398
	UTextBlock* TBLv_2; // 0x3a0
	UProgressBar* PBExp_2; // 0x3a8
	UTextBlock* TBExp_2; // 0x3b0
	UTextBlock* TBMaxExp_2; // 0x3b8
	UTextBlock* TBUse_3; // 0x3c0
	UTextBlock* TBLv_3; // 0x3c8
	UProgressBar* PBExp_3; // 0x3d0
	UTextBlock* TBExp_3; // 0x3d8
	UTextBlock* TBMaxExp_3; // 0x3e0
	UTextBlock* TBFaint_4; // 0x3e8
	UTextBlock* TBAssi_4; // 0x3f0
	UTextBlock* TBLv_4; // 0x3f8
	UProgressBar* PBExp_4; // 0x400
	UTextBlock* TBExp_4; // 0x408
	UTextBlock* TBMaxExp_4; // 0x410
};

struct AChaosSolverActor {
	FChaosSolverConfiguration Properties; // 0x220
	float TimeStepMultiplier; // 0x288
	int32_t CollisionIterations; // 0x28c
	int32_t PushOutIterations; // 0x290
	int32_t PushOutPairIterations; // 0x294
	float ClusterConnectionFactor; // 0x298
	EClusterConnectionTypeEnum ClusterUnionConnectionType; // 0x29c
	bool DoGenerateCollisionData; // 0x29d
	FSolverCollisionFilterSettings CollisionFilterSettings; // 0x2a0
	bool DoGenerateBreakingData; // 0x2b0
	FSolverBreakingFilterSettings BreakingFilterSettings; // 0x2b4
	bool DoGenerateTrailingData; // 0x2c4
	FSolverTrailingFilterSettings TrailingFilterSettings; // 0x2c8
	float MassScale; // 0x2d8
	bool bGenerateContactGraph; // 0x2dc
	bool bHasFloor; // 0x2dd
	float FloorHeight; // 0x2e0
	FChaosDebugSubstepControl ChaosDebugSubstepControl; // 0x2e4
	UBillboardComponent* SpriteComponent; // 0x2e8
	UChaosGameplayEventDispatcher* GameplayEventDispatcherComponent; // 0x308
};

struct UListView {
	EOrientation Orientation; // 0x2d8
	ESelectionMode SelectionMode; // 0x2d9
	EConsumeMouseWheel ConsumeMouseWheel; // 0x2da
	bool bClearSelectionOnClick; // 0x2db
	bool bIsFocusable; // 0x2dc
	float EntrySpacing; // 0x2e0
	bool bReturnFocusToSelection; // 0x2e4
	TArray<UObject*> ListItems; // 0x2e8
	FMulticastInlineDelegate BP_OnEntryInitialized; // 0x308
	FMulticastInlineDelegate BP_OnItemClicked; // 0x318
	FMulticastInlineDelegate BP_OnItemDoubleClicked; // 0x328
	FMulticastInlineDelegate BP_OnItemIsHoveredChanged; // 0x338
	FMulticastInlineDelegate BP_OnItemSelectionChanged; // 0x348
	FMulticastInlineDelegate BP_OnItemScrolledIntoView; // 0x358
};

struct UCrowESCMenuWidget {
	UCrowButton* BT_Continue; // 0x368
	UCrowButton* BT_Settings; // 0x370
	UCrowButton* BT_ReturnToLobby; // 0x378
	UCrowButton* BT_Quit; // 0x380
	UTextBlock* TB_Continue; // 0x388
	UTextBlock* TB_Settings; // 0x390
	UTextBlock* TB_ReturnToLobby; // 0x398
	UTextBlock* TB_Quit; // 0x3a0
};

struct UCrowRespawnButton {
	float ButtonSize; // 0x348
	UCrowToggleButton* BT_ConquestRespawn; // 0x350
	UCanvasPanel* CP_Root; // 0x358
	UCrowWidgetBase* ParentWidget; // 0x360
	UCrowWorldMapIcon* WorldMapIcon; // 0x368
	UCrowRespawnMapWidget* RespawnMapWidget; // 0x370
	AActor* TargetActor; // 0x378
};

struct UCrowWidgetPIEEntry {
	UEditableText* ET_IP; // 0x348
	UEditableText* ET_Port; // 0x350
	UButton* BTN_Connect; // 0x358
};

struct UAnimationDataSourceRegistry {
	TMap<FName, TWeakObjectPtr<UObject>> DataSources; // 0x28
};

struct UPhysicalMaterial {
	float Friction; // 0x28
	float StaticFriction; // 0x2c
	EFrictionCombineMode FrictionCombineMode; // 0x30
	bool bOverrideFrictionCombineMode; // 0x31
	float Restitution; // 0x34
	EFrictionCombineMode RestitutionCombineMode; // 0x38
	bool bOverrideRestitutionCombineMode; // 0x39
	float Density; // 0x3c
	float SleepLinearVelocityThreshold; // 0x40
	float SleepAngularVelocityThreshold; // 0x44
	int32_t SleepCounterThreshold; // 0x48
	float RaiseMassToPower; // 0x4c
	float DestructibleDamageThresholdScale; // 0x50
	UPhysicalMaterialPropertyBase* PhysicalMaterialProperty; // 0x58
	EPhysicalSurface SurfaceType; // 0x60
};

struct UCrowLobbyLoadoutWidget {
	UCrowLoadoutWeaponInfoWidget* WB_Loadout_WeaponInfo_Primary_2; // 0x348
	UCrowLoadoutWeaponInfoWidget* WB_Loadout_WeaponInfo_Primary_3; // 0x350
	UCrowLoadoutWeaponSubInfoWidget* WB_Loadout_SubWeapon_Slot1; // 0x358
	UCrowLoadoutWeaponSubInfoWidget* WB_Loadout_SubWeapon_Slot2; // 0x360
	TArray<UCrowWeaponListItemBase*> WeaponWidgetList; // 0x368
};

struct USoundNodeGroupControl {
	TArray<int32_t> GroupSizes; // 0x48
};

struct UMaterialExpressionSpriteTextureSampler {
	bool bSampleAdditionalTextures; // 0x80
	int32_t AdditionalSlotIndex; // 0x84
	FText SlotDisplayName; // 0x88
};

struct UAudioImpulseResponse {
	TArray<float> ImpulseResponse; // 0x28
	int32_t NumChannels; // 0x38
	int32_t SampleRate; // 0x3c
	float NormalizationVolumeDb; // 0x40
	bool bTrueStereo; // 0x44
	TArray<float> IRData; // 0x48
};

struct UAnimationSettings {
	int32_t CompressCommandletVersion; // 0x38
	TArray<FString> KeyEndEffectorsMatchNameArray; // 0x40
	bool ForceRecompression; // 0x50
	bool bForceBelowThreshold; // 0x51
	bool bFirstRecompressUsingCurrentOrDefault; // 0x52
	bool bRaiseMaxErrorToExisting; // 0x53
	bool bEnablePerformanceLog; // 0x54
	bool bStripAnimationDataOnDedicatedServer; // 0x55
	bool bTickAnimationOnSkeletalMeshInit; // 0x56
	TArray<FCustomAttributeSetting> BoneCustomAttributesNames; // 0x58
	TArray<FString> BoneNamesWithCustomAttributes; // 0x68
	TMap<FName, ECustomAttributeBlendType> AttributeBlendModes; // 0x78
	ECustomAttributeBlendType DefaultAttributeBlendMode; // 0xc8
};

struct UBlackboardKeyType_Enum {
	UEnum* EnumType; // 0x30
	FString enumName; // 0x38
	char bIsEnumNameValid : 1; // 0x48
};

struct UCrowClanListSlotWidget {
	UCrowClanEmblemWidget* WB_Info_ClanEmblem; // 0x358
	UWidgetSwitcher* WS_Slot_ClanList; // 0x360
	UWidgetSwitcher* WS_JoinState; // 0x368
	UWidgetSwitcher* WS_ClanListSubType; // 0x370
	UCrowButton* WB_BT_JoinAccept; // 0x378
	UCrowButton* WB_BT_JoinAdmiss; // 0x380
	UTextBlock* TB_Join_ClanLevel; // 0x388
	UTextBlock* TB_Join_ClanName; // 0x390
	UTextBlock* TB_ContributionPoint; // 0x398
	UTextBlock* TB_Join_ClanMemberCurrent; // 0x3a0
	UTextBlock* TB_Join_ClanMemberMax; // 0x3a8
	UCrowButton* WB_BT_ReceptionAccept; // 0x3b0
	UCrowButton* WB_BT_ReceptionAdmiss; // 0x3b8
	UCrowButton* WB_BT_Cancel; // 0x3c0
	UTextBlock* TB_Reception_ClanLevel; // 0x3c8
	UTextBlock* TB_Reception_ClanName; // 0x3d0
	UTextBlock* TB_Sent_ClanLevel; // 0x3d8
	UTextBlock* TB_Sent_ClanName; // 0x3e0
	UTextBlock* TB_RankNum; // 0x3e8
	UTextBlock* TB_Rank_ClanLevel; // 0x3f0
	UTextBlock* TB_Ranking_ClanName; // 0x3f8
	UTextBlock* TB_Rank_ContributionPoint; // 0x400
	UCrowClanEmblemWidget* WB_Rank_ClanEmblem; // 0x408
	UWidgetSwitcher* WS_OddSwitcher; // 0x410
};

struct UCrowCustomSprayItemListWidget {
	UCrowCustomizeSpraySlotWidget* SpraySlotWidgetClass; // 0x350
	UGridPanel* GD_ItemList; // 0x358
	UCrowCustomizeEtcDescWidget* ParentWidget; // 0x360
	UCrowCustomizeSpraySlotWidget* CurrSelectSlot; // 0x368
};

struct ACrowProjectileMeshBase {
	UStaticMeshComponent* MeshRoot; // 0x17c8
};

struct UCrowLobbySlotPurchasePopupWidget {
	UCrowLobbySlotPurchaseItemWidget* PurchaseItemClass; // 0x348
	UTextBlock* TB_Title; // 0x350
	UTextBlock* TB_SlotName; // 0x358
	UVerticalBox* VB_ItemList; // 0x360
	UCrowButton* BT_Close; // 0x368
	ECrowLobbySlotType LobbySlotType; // 0x370
	int32_t TargetSlotIndex; // 0x374
	FText TargetName; // 0x378
};

struct UBTComposite_SimpleParallel {
	EBTParallelMode FinishMode; // 0x90
};

struct ACrowWorldSimulationActor {
	USceneComponent* SceneRoot; // 0x220
	USceneComponent* ImpactPoint; // 0x228
	char UseMassMultiply : 1; // 0x230
	float MassMultiply; // 0x234
	FCrowWorldDestructionFxHitGround FxHitGroundSetting; // 0x238
	TArray<UFXSystemComponent*> FxComponents; // 0x268
	FName CollisionProfileName; // 0x278
	FVector ImpactLocation; // 0x280
	FVector ImpactNormal; // 0x28c
	float ImpulseMagnitude; // 0x298
	float PendingTime; // 0x29c
	float DestroyTime; // 0x2a0
	float ElapsedTime; // 0x2a4
	int32_t CountHiddenSMC; // 0x2a8
	TArray<UStaticMeshComponent*> SMCList; // 0x2b0
	FTimerHandle DestroyTimerHandle; // 0x2c0
};

struct ACrowSkydivingPawn {
	ECrowSkydivingState SkydivingState; // 0x4b8
	ECrowSkydivingState LocalSkydivingState; // 0x4b9
	ECrowSkydivingAnimState SkydivingAnimState; // 0x4ba
	FName ParachuteSpreadKeyName; // 0x4bc
	FName LeftHandSocketName; // 0x4c4
	FName RightHandSocketName; // 0x4cc
	FName SpineSocketName; // 0x4d4
	float RecoverLookAroundSpeed; // 0x4dc
	float GodModeTime; // 0x4e0
	UMaterialInstance* BlurMaterialInst; // 0x4e8
	UMaterialInstanceDynamic* BlurMaterialInstDynamic; // 0x4f0
	float BlurMaxVelocityZ; // 0x4f8
	float BlurDistParam; // 0x4fc
	float DisapearTimeSecond; // 0x500
	ECrowSkydivingParachuteState ParachuteState; // 0x504
	uint32_t ParachuteSkinIndex; // 0x508
	FName ParachuteSocketName; // 0x50c
	bool bUseParachuteBoneTransform; // 0x514
	UAnimSequence* ParachuteAnimSpread; // 0x518
	UAnimSequence* ParachuteAnimFall; // 0x520
	UAnimSequence* ParachuteAnimLand; // 0x528
	uint32_t DefaultClothBackpackIndex; // 0x530
	UAkAudioEvent* FreeFallSound; // 0x538
	UAkAudioEvent* FreeFallSound_End; // 0x540
	UAkAudioEvent* ParachuteSound; // 0x548
	UAkAudioEvent* ParachuteSound_End; // 0x550
	UAkComponent* AkComponent; // 0x558
	bool bForceThirdCamera; // 0x560
	UMatineeCameraShake* FreeFallCameraShakeClass; // 0x568
	float ViewPitchDirectionValue; // 0x570
	float FreeFallAnimRollChangeValue; // 0x574
	float FreeFallAnimRollInSpeed; // 0x578
	float FreeFallAnimRollOutSpeed; // 0x57c
	float ReadyToSpreadParachuteHeight; // 0x580
	float ParachuteSpreadLimitZ; // 0x584
	float ReadyToLandLimitZ; // 0x588
	float ReadyToLandLimitZWood; // 0x58c
	float ParachuteApproachTime; // 0x590
	float MinViewPitchDirectionRate; // 0x594
	float ReadyToLandVelocityScale; // 0x598
	FString FreeFallDialogRowName; // 0x5a0
	FString ParachuteDialogRowName; // 0x5b0
	FVector AddedFarViewSocketOffset; // 0x5c0
	FCrowSkydivingSettingss NoneSettings; // 0x5d0
	FCrowSkydivingSettingss FreeFallSettings; // 0x668
	FCrowSkydivingSettingss ParachuteSpreadSettings; // 0x700
	FCrowSkydivingSettingss ParachuteSettings; // 0x798
	FCrowSkydivingSettingss ReadyToLandSettings; // 0x830
	FCrowSkydivingSettingss LandSettings; // 0x8c8
	float WalkLandSpeed; // 0x960
	float RollingLandSpeed; // 0x964
	UAnimMontage* WalkLandAnim; // 0x968
	UAnimMontage* RollingLandAnim; // 0x970
	float ForwardRate; // 0x978
	float RightRate; // 0x97c
	float DownRate; // 0x980
	float DefaultMinScaleValue; // 0x984
	float DefaultIdleScaleValue; // 0x988
	float ForwardMaxScaleValue; // 0x98c
	float InputYawScale; // 0x990
	float InputPitchScale; // 0x994
	float InputRollScale; // 0x998
	float AnimationAxisForwardValueScale; // 0x99c
	float AnimationAxisRightValueScale; // 0x9a0
	FVector TargetCameraSocketOffset; // 0x9a4
	FRotator CameraRotation; // 0x9b0
	UCameraShakeBase* FreeFallCameraShake; // 0x9c0
	float ViewPitchDirectionRate; // 0x9c8
	float ControlRotYawInterpValue; // 0x9cc
	float AnimationAxisForwardValue; // 0x9d0
	float AnimationAxisRightValue; // 0x9d4
	float AnimationAxisRollValue; // 0x9d8
	ACrowCharacterPawn* CharacterPawn; // 0x9e0
	UCrowSpringArmComponent* TPSpringArm; // 0x9e8
	float LandHeight; // 0x9f0
	float DistanceLandToMe; // 0x9f4
	float StateTimeSecond; // 0x9f8
	float CameraDirectingTimeSecond; // 0x9fc
	float GlobalTimeSecond; // 0xa00
	bool bLookAround; // 0xa04
	bool bRecoverLookAround; // 0xa05
	FRotator RecoverLookingRotation; // 0xa08
	bool bFarView; // 0xa14
	bool bUpdateCameraTransform; // 0xa15
	bool bIsReadyToParachuteSpread; // 0xa16
	bool bIsInitCharacterPawn; // 0xa17
	bool bIsReadyLocalCharacterSetting; // 0xa18
	bool bEquipDefaultClothBackpack; // 0xa19
	bool bRevertFirstCamera; // 0xa1a
	bool bOnWater; // 0xa1b
	float ApproachAlpha; // 0xa1c
	float PrevAxisForwardValue; // 0xa20
	char AxisForwardState; // 0xa24
	char AxisRightState; // 0xa25
	ACrowPlayerControllerBase* PC; // 0xa28
	ACrowPlayerStateBase* PS; // 0xa30
	bool bIsCameraBlendComplete; // 0xa40
	bool bIsChangeFreeFallSection; // 0xa41
	bool bIsChangeParachuteSection; // 0xa42
	bool bIsChangeLandSection; // 0xa43
	FVector ReadyToLandPos; // 0xa44
	float ReadyToLandSpeed; // 0xa50
	bool bIsSpectating; // 0xa54
	bool bUseLagSubstepping; // 0xa55
	float RotationLagSpeed; // 0xa58
	FRotator PrevControlRotation; // 0xa5c
	float LagMaxTimeStep; // 0xa68
	bool bIsCameraDirecting; // 0xa6c
	float SkydivingTargetArmLength; // 0xa70
	FRotator SkydivingCameraForward; // 0xa74
	FRotator SkydivingActorRotation; // 0xa80
	bool bCheckGSTSpreadParachute; // 0xa8f
	bool bCheckGSTReadToLand; // 0xa90
	bool bCheckGSTLand; // 0xa91
	bool bCheckGSTNone; // 0xa92
	bool bCheckHit; // 0xa93
	bool bUseSceneTableValue; // 0xa94
	ECrowSkydivingAnimState PlayLandAnimState; // 0xa95
	ECrowSkydivingState PlayCameraDirectionState; // 0xa96
	bool bIsPlayCameraDirection; // 0xa97
	UArrowComponent* VelArrow; // 0xa98
	UArrowComponent* VelArrowX; // 0xaa0
	UArrowComponent* VelArrowY; // 0xaa8
	UArrowComponent* VelArrowZ; // 0xab0
	bool bShowDebugSkydivingPawn; // 0xab8
	bool bDebugFreeFallCameraShake; // 0xab9
};

struct UCrowWorldSyncClientWorker {
	char bInitControllerRequested : 1; // 0x28
	char bEnabledVisualConfig : 1; // 0x28
	int32_t ClientFrameKey; // 0x2c
	UWorld* World; // 0x30
	APlayerController* PlayerController; // 0x38
	UCrowWorldMapConfig* MapConfig; // 0x40
	UCrowWorldDataCollectionAsset* WorldDataAsset; // 0x48
	ACrowWorldReplicationActor* ReplicationActor; // 0x50
	ACrowWorldReplicationController* ReplicationController; // 0x58
	FCrowWorldGrid SectorGrid; // 0x60
	UCrowWorldLODUpdater* LODUpdater; // 0x78
	UCrowWorldOcclusion* WorldOcclusion; // 0x80
	UCrowWorldFoliage* WorldFoliage; // 0x88
	UCrowWorldTerrainSetup* WorldTerrainSetup; // 0x90
	TArray<UFXSystemComponent*> FollowingFxComponents; // 0x98
	TArray<FCrowWorldMaterialParameterOverride> MPCBackups; // 0xa8
	TArray<FCrowWorldMaterialParameterOverride> MPCRestores; // 0xb8
	TMap<uint32_t, FCrowWorldSectorData> SectorDataAssets; // 0xc8
	TMap<uint32_t, FCrowWorldClusterData> ClusterDataAssets; // 0x118
	FCrowWorldLandmarkData LandmarkDataAsset; // 0x168
	TMap<UObject*, int32_t> AssetReferenceCounts; // 0x178
	FCrowWorldReplicationLandmark ActiveLandmarkData; // 0x1c8
	TMap<uint32_t, FCrowWorldClientCluster> ActiveClusters; // 0x1e0
	TMap<uint32_t, FCrowWorldClientSector> ActiveSectors; // 0x230
	TMap<uint32_t, ACrowWorldActor*> ActiveActors; // 0x280
	int32_t DebugFrameCount; // 0x2d0
	TArray<FCrowWorldReplicationCluster> ReceivedClusters; // 0x2d8
	TArray<FCrowWorldReplicationSector> ReceivedSectors; // 0x2e8
	TArray<FCrowWorldClientDropClusterIndex> ReceivedDropClusters; // 0x2f8
	TArray<FCrowWorldClientDropSectorIndex> ReceivedDropSectors; // 0x308
	TArray<ACrowWorldActor*> DropClusterActorQueue; // 0x318
	TArray<ACrowWorldActor*> DropSectorActorQueue; // 0x328
	uint32_t GeneratingSectorIndex; // 0x338
	TArray<FCrowWorldClientClusterActorKey> ClusterActorKeyArray; // 0x340
	int16_t GeneratingClusterActorKeyCursor; // 0x350
	int16_t GeneratingSectorActorCursor; // 0x352
	int16_t CollectAssetLayoutCursor; // 0x354
	FCrowWorldDestructionLink DestructionLink; // 0x358
};

struct UWB_SettingsSlotOnOff_C {
	UImage* IMG_BG; // 0x380
	UImage* IMG_Blue00; // 0x388
	UImage* IMG_Frame; // 0x390
	UImage* IMG_OffBG; // 0x398
	UImage* IMG_OnBG; // 0x3a0
};

struct USteamNetConnection {
	bool bIsPassthrough; // 0x1b90
};

struct UWB_SettingsSlotDropdown_C {
	UImage* Image_20; // 0x3a0
	UImage* IMG_Frame; // 0x3a8
	UImage* IMG_Icon_Arrow; // 0x3b0
	UImage* IMG_ListBg; // 0x3b8
};

struct AUPSPointActionMovementHandler {
	ACharacter* MovementCharacter; // 0x238
	UUPSEnemyPointActionComponent* PointActionComponent; // 0x240
};

struct UGroomCreateBindingOptions {
	USkeletalMesh* SourceSkeletalMesh; // 0x28
	USkeletalMesh* TargetSkeletalMesh; // 0x30
	int32_t NumInterpolationPoints; // 0x38
	int32_t MatchingSection; // 0x3c
};

struct UMaterialExpressionDotProduct {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UCrowShopMainWidget {
	UCrowShopItemSlotWidget* CategoryItemWidget; // 0x348
	UCrowShopItemSlotWidget* CategoryItemWideWidget; // 0x350
	UCrowShopPackagePopupWidget* ShopPackagePopupWidgetclass; // 0x358
	UCrowChangeNicknameWidget* ChangeNicnameWidgetClass; // 0x360
	UCrowRandomBoxInfoWidget* RandomBoxInfoWidgetClass; // 0x368
	float DesconstructEffectTime; // 0x370
	UCrowShopItemSlotWidget* CurrSelectSlotWidget; // 0x378
	UCrowWidgetToggleButton* WB_LobbyButton_HOTNEW; // 0x380
	UCrowWidgetToggleButton* WB_LobbyButton_Basic; // 0x388
	UCrowWidgetToggleButton* WB_LobbyButton_Package; // 0x390
	UCrowWidgetToggleButton* WB_LobbyButton_Battlepass; // 0x398
	UCrowWidgetToggleButton* WB_LobbyButton_Deconstrct; // 0x3a0
	UCanvasPanel* CP_HotandNew; // 0x3a8
	UCanvasPanel* CP_Normal_Package_Shop; // 0x3b0
	UCrowShopCategoryWidget* WB_ShopCategory; // 0x3b8
	UCrowShopSlotDropDownWidget* WB_Shop_SlotDropDown; // 0x3c0
	UCrowDeconstructWidget* WB_Shop_Deconstruct; // 0x3c8
	UCrowBattlePassWidget* WB_BattlePass; // 0x3d0
	UCrowButton* WB_BT_OwnList; // 0x3d8
	UCrowButton* WB_BT_EscBack; // 0x3e0
	UCrowWidgetToggleButton* WB_LobbyButton_OwnList; // 0x3e8
	UCanvasPanel* CP_Normal_Package_ShopInfo; // 0x3f0
	UCanvasPanel* CP_Normal_OwnList; // 0x3f8
	UGridPanel* GP_NormalShopList; // 0x400
	UGridPanel* GP_NormalOwnShopList; // 0x408
	UCrowShopPackagePopupWidget* WB_Shop_Popup_ExclusivePurchase_wide; // 0x410
	TArray<UCrowWidgetToggleButton*> ButtonList; // 0x418
	UCrowChangeNicknameWidget* WB_ChangeNicknameWidget; // 0x428
	UCrowRandomBoxInfoWidget* RandomBoxInfoWidget; // 0x430
	ECrowShopProductType CurrentProductType; // 0x438
	ECrowShopProductType PrevProductType; // 0x439
	ECrowShopProductSubType CurrentProductSubType; // 0x43a
	ECrowShopSortType CurrentSortType; // 0x43b
	UCrowBannerWidget* Banner1; // 0x440
	UCrowBannerWidget* Banner2; // 0x448
	UCrowBannerWidget* Banner3; // 0x450
	UCrowBannerWidget* Banner4; // 0x458
	UCrowBannerWidget* Banner5; // 0x460
	UCrowBannerWidget* Banner6; // 0x468
	TArray<UCrowBannerWidget*> BannerList; // 0x470
};

struct UClothingAssetCommon {
	UPhysicsAsset* PhysicsAsset; // 0x48
	TMap<FName, UClothConfigBase*> ClothConfigs; // 0x50
	UClothConfigBase* ClothSharedSimConfig; // 0xa0
	UClothConfigBase* ClothSimConfig; // 0xa8
	UClothConfigBase* ChaosClothSimConfig; // 0xb0
	TArray<UClothLODDataCommon_Legacy*> ClothLODData; // 0xb8
	TArray<FClothLODDataCommon> LODData; // 0xc8
	TArray<int32_t> LodMap; // 0xd8
	TArray<FName> UsedBoneNames; // 0xe8
	TArray<int32_t> UsedBoneIndices; // 0xf8
	int32_t ReferenceBoneIndex; // 0x108
	UClothingAssetCustomData* CustomData; // 0x110
	FClothConfig_Legacy ClothConfig; // 0x118
};

struct UPhysicsObjectToolPropertySet {
	FString ObjectName; // 0x60
	ECollisionGeometryMode CollisionType; // 0x70
	TArray<FPhysicsSphereData> Spheres; // 0x78
	TArray<FPhysicsBoxData> Boxes; // 0x88
	TArray<FPhysicsCapsuleData> Capsules; // 0x98
	TArray<FPhysicsConvexData> Convexes; // 0xa8
};

struct ACrowBuildingEditorChecker {
	USceneComponent* SceneRoot; // 0x220
	UTextRenderComponent* TextRender; // 0x228
	UStaticMeshComponent* CubeMesh; // 0x230
	bool HideInformation; // 0x238
	TArray<TWeakObjectPtr<AActor>> CollectedActors; // 0x240
	TArray<TWeakObjectPtr<AActor>> AddedActors; // 0x250
	TArray<TWeakObjectPtr<AActor>> MovedActors; // 0x260
	TArray<TWeakObjectPtr<AActor>> EditorRootActors; // 0x270
	TArray<TWeakObjectPtr<AActor>> EditorCheckerActors; // 0x280
	bool IsActivateChecker; // 0x290
};

struct USourceEffectRingModulationPreset {
	FSourceEffectRingModulationSettings Settings; // 0xb0
};

struct UCrowDeathZoneWidget {
	UTextBlock* TB_WarningTimer; // 0x348
	UTextBlock* TB_WarningAlarm; // 0x350
	UTextBlock* TB_WarningDesc; // 0x358
};

struct UWB_SettingsSlotSlider_C {
	UImage* Image_52; // 0x368
};

struct UAITask {
	AAIController* OwnerController; // 0x68
};

struct USubmixEffectStereoDelayPreset {
	FSubmixEffectStereoDelaySettings Settings; // 0xb4
};

struct UARPoseComponent {
	FARPoseUpdatePayload ReplicatedPayload; // 0x280
};

struct UGameplayTask_SpawnActor {
	FMulticastInlineDelegate Success; // 0x68
	FMulticastInlineDelegate DidNotSpawn; // 0x78
	AActor* ClassToSpawn; // 0xa0
};

struct UMaterialExpressionRotateAboutAxis {
	FExpressionInput NormalizedRotationAxis; // 0x40
	FExpressionInput RotationAngle; // 0x54
	FExpressionInput PivotPoint; // 0x68
	FExpressionInput position; // 0x7c
	float Period; // 0x90
};

struct ADestructibleActor {
	UDestructibleComponent* DestructibleComponent; // 0x220
	FMulticastInlineDelegate OnActorFracture; // 0x228
};

struct UMovieScene {
	TArray<FMovieSceneSpawnable> Spawnables; // 0x50
	TArray<FMovieScenePossessable> Possessables; // 0x60
	TArray<FMovieSceneBinding> ObjectBindings; // 0x70
	TMap<FName, FMovieSceneObjectBindingIDs> BindingGroups; // 0x80
	TArray<UMovieSceneTrack*> MasterTracks; // 0xd0
	UMovieSceneTrack* CameraCutTrack; // 0xe0
	FMovieSceneFrameRange SelectionRange; // 0xe8
	FMovieSceneFrameRange PlaybackRange; // 0xf8
	FFrameRate TickResolution; // 0x108
	FFrameRate DisplayRate; // 0x110
	EMovieSceneEvaluationType EvaluationType; // 0x118
	EUpdateClockSource ClockSource; // 0x119
	FSoftObjectPath CustomClockSourcePath; // 0x120
	TArray<FMovieSceneMarkedFrame> MarkedFrames; // 0x138
};

struct UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct ADecalActor {
	UDecalComponent* Decal; // 0x220
};

struct UMovieSceneBuiltInEasingFunction {
	EMovieSceneBuiltInEasing Type; // 0x30
};

struct UDrawPolygonTool {
	UDrawPolygonToolStandardProperties* PolygonProperties; // 0x88
	UDrawPolygonToolSnapProperties* SnapProperties; // 0x90
	UNewMeshMaterialProperties* MaterialProperties; // 0x98
	UPreviewMesh* PreviewMesh; // 0x150
	UTransformGizmo* PlaneTransformGizmo; // 0x158
	UTransformProxy* PlaneTransformProxy; // 0x160
	UPlaneDistanceFromHitMechanic* HeightMechanic; // 0x540
};

struct UComboBox {
	TArray<UObject*> Items; // 0x108
	FDelegate OnGenerateWidgetEvent; // 0x118
	bool bIsFocusable; // 0x128
};

struct USoundSubmix {
	char bMuteWhenBackgrounded : 1; // 0x40
	TArray<USoundEffectSubmixPreset*> SubmixEffectChain; // 0x48
	USoundfieldEncodingSettingsBase* AmbisonicsPluginSettings; // 0x58
	int32_t EnvelopeFollowerAttackTime; // 0x60
	int32_t EnvelopeFollowerReleaseTime; // 0x64
	EGainParamMode GainMode; // 0x68
	float OutputVolume; // 0x6c
	float WetLevel; // 0x70
	float DryLevel; // 0x74
	FMulticastInlineDelegate OnSubmixRecordedFileDone; // 0x78
};

struct UOnAcceptHandleSourcesProperties {
	EHandleSourcesMethod OnToolAccept; // 0x60
};

struct UParticleModuleTypeDataMesh {
	UStaticMesh* Mesh; // 0x30
	float LODSizeScale; // 0x40
	char bUseStaticMeshLODs : 1; // 0x44
	char CastShadows : 1; // 0x44
	char DoCollisions : 1; // 0x44
	EMeshScreenAlignment MeshAlignment; // 0x45
	char bOverrideMaterial : 1; // 0x46
	char bOverrideDefaultMotionBlurSettings : 1; // 0x46
	char bEnableMotionBlur : 1; // 0x46
	FRawDistributionVector RollPitchYawRange; // 0x48
	EParticleAxisLock AxisLockOption; // 0x90
	char bCameraFacing : 1; // 0x91
	EMeshCameraFacingUpAxis CameraFacingUpAxisOption; // 0x92
	EMeshCameraFacingOptions CameraFacingOption; // 0x93
	char bApplyParticleRotationAsSpin : 1; // 0x94
	char bFaceCameraDirectionRatherThanPosition : 1; // 0x94
	char bCollisionsConsiderPartilceSize : 1; // 0x94
};

struct UMovieSceneCameraShakeSourceTriggerTrack {
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct ACrowEquipmentBase {
	bool bIsSelected; // 0x308
	bool bIsVisible; // 0x309
	char SlotIndex; // 0x30a
};

struct UCrowWorldLevelOfDetailAUD {
	ECrowWorldLODGroup CrowWorldLOD; // 0x28
	float OverrideCameraDistanceMax; // 0x2c
	char IgnoreCrowLightProbe : 1; // 0x30
	char ClientDecorationOnly : 1; // 0x30
	char AlwaysDisableCollision : 1; // 0x30
	char StaticWorldMesh : 1; // 0x30
	char WorldHLOD : 1; // 0x30
};

struct UParticleSystemWidget {
	UParticleSystem* ParticleSystemTemplate; // 0x108
	bool bAutoActivate; // 0x110
	bool bReactivate; // 0x111
	UUIParticleComponent* WorldParticleComponent; // 0x118
	AActor* WorldParticleActor; // 0x120
};

struct UCrowDistanceBasedFXManager {
	TMap<int64_t, FName> WeaponSubTypeNames; // 0x30
};

struct UMaterialExpressionQualitySwitch {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x4]; // 0x54
};

struct USceneCaptureComponent {
	ESceneCapturePrimitiveRenderMode PrimitiveRenderMode; // 0x1f8
	ESceneCaptureSource CaptureSource; // 0x1f9
	char bCaptureEveryFrame : 1; // 0x1fa
	char bCaptureOnMovement : 1; // 0x1fa
	bool bAlwaysPersistRenderingState; // 0x1fb
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenComponents; // 0x200
	TArray<AActor*> HiddenActors; // 0x210
	TArray<TWeakObjectPtr<UPrimitiveComponent>> ShowOnlyComponents; // 0x220
	TArray<AActor*> ShowOnlyActors; // 0x230
	float LODDistanceFactor; // 0x240
	float MaxViewDistanceOverride; // 0x244
	int32_t CaptureSortPriority; // 0x248
	bool bUseRayTracingIfEnabled; // 0x24c
	TArray<FEngineShowFlagsSetting> ShowFlagSettings; // 0x250
	FString ProfilingEventName; // 0x290
};

struct UParticleModuleLocationWorldOffset_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UARSessionConfig {
	bool bGenerateMeshDataFromTrackedGeometry; // 0x30
	bool bGenerateCollisionForMeshData; // 0x31
	bool bGenerateNavMeshForMeshData; // 0x32
	bool bUseMeshDataForOcclusion; // 0x33
	bool bRenderMeshDataInWireframe; // 0x34
	bool bTrackSceneObjects; // 0x35
	bool bUsePersonSegmentationForOcclusion; // 0x36
	bool bUseSceneDepthForOcclusion; // 0x37
	bool bUseAutomaticImageScaleEstimation; // 0x38
	bool bUseStandardOnboardingUX; // 0x39
	EARWorldAlignment WorldAlignment; // 0x3a
	EARSessionType SessionType; // 0x3b
	EARPlaneDetectionMode PlaneDetectionMode; // 0x3c
	bool bHorizontalPlaneDetection; // 0x3d
	bool bVerticalPlaneDetection; // 0x3e
	bool bEnableAutoFocus; // 0x3f
	EARLightEstimationMode LightEstimationMode; // 0x40
	EARFrameSyncMode FrameSyncMode; // 0x41
	bool bEnableAutomaticCameraOverlay; // 0x42
	bool bEnableAutomaticCameraTracking; // 0x43
	bool bResetCameraTracking; // 0x44
	bool bResetTrackedObjects; // 0x45
	TArray<UARCandidateImage*> CandidateImages; // 0x48
	int32_t MaxNumSimultaneousImagesTracked; // 0x58
	EAREnvironmentCaptureProbeType EnvironmentCaptureProbeType; // 0x5c
	TArray<char> WorldMapData; // 0x60
	TArray<UARCandidateObject*> CandidateObjects; // 0x70
	FARVideoFormat DesiredVideoFormat; // 0x80
	bool bUseOptimalVideoFormat; // 0x8c
	EARFaceTrackingDirection FaceTrackingDirection; // 0x8d
	EARFaceTrackingUpdate FaceTrackingUpdate; // 0x8e
	int32_t MaxNumberOfTrackedFaces; // 0x90
	TArray<char> SerializedARCandidateImageDatabase; // 0x98
	EARSessionTrackingFeature EnabledSessionTrackingFeature; // 0xa8
	EARSceneReconstruction SceneReconstructionMethod; // 0xa9
	UARPlaneComponent* PlaneComponentClass; // 0xb0
	UARPointComponent* PointComponentClass; // 0xb8
	UARFaceComponent* FaceComponentClass; // 0xc0
	UARImageComponent* ImageComponentClass; // 0xc8
	UARQRCodeComponent* QRCodeComponentClass; // 0xd0
	UARPoseComponent* PoseComponentClass; // 0xd8
	UAREnvironmentProbeComponent* EnvironmentProbeComponentClass; // 0xe0
	UARObjectComponent* ObjectComponentClass; // 0xe8
	UARMeshComponent* MeshComponentClass; // 0xf0
	UARGeoAnchorComponent* GeoAnchorComponentClass; // 0xf8
	UMaterialInterface* DefaultMeshMaterial; // 0x100
	UMaterialInterface* DefaultWireframeMeshMaterial; // 0x108
};

struct UEraseBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct ACrowGameStateTG {
	TArray<ACrowTGStealthSpawner*> ArrayBomberSpawner; // 0x410
	FTimerHandle StealthSpawnerTimer; // 0x420
	float BomberRespawnTime; // 0x428
};

struct ACrowLoadoutVolume {
	ECrowTeam_RedBlue TeamID; // 0x258
};

struct UCrowDamageEffect {
	TArray<FCrowDamageCameraShake> CameraShake; // 0x28
	float SmallBloodPercent; // 0x38
	float LargeBloodPercent; // 0x3c
	UCurveFloat* VignetteCurve; // 0x40
	UMatineeCameraShake* ContaminationAreaCameraShake; // 0x48
};

struct UCrowSettingsUserConfig {
	TArray<FActionKeySlot> ActionKeySlots; // 0x28
	TArray<FAxisKeySlot> AxisKeySlots; // 0x38
	TArray<FSettingUserConfigItem> Options; // 0x48
};

struct UCrowSpectatorSquadSlotWidget {
	UVerticalBox* VB_List; // 0x348
	UTextBlock* TB_SquadNumber; // 0x350
	UImage* IMG_SquadColor; // 0x358
	UCrowSpectatorPlayerSlotWidget* PlayerSlotWidgetClass; // 0x360
	TMap<uint64_t, UCrowSpectatorPlayerSlotWidget*> PlayerSlotMap; // 0x368
	FString SquadKey; // 0x3b8
	int32_t SquadNumber; // 0x3c8
	FLinearColor SquadColor; // 0x3cc
};

struct UPlaneCutTool {
	UPlaneCutToolProperties* BasicProperties; // 0x98
	UAcceptOutputProperties* AcceptProperties; // 0xa0
	FVector CutPlaneOrigin; // 0xa8
	FQuat CutPlaneOrientation; // 0xc0
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xd0
	TArray<UDynamicMeshReplacementChangeTarget*> MeshesToCut; // 0xe0
	UTransformGizmo* PlaneTransformGizmo; // 0x158
	UTransformProxy* PlaneTransformProxy; // 0x160
};

struct ACrowSwitchingActor {
	bool bSwitchOn; // 0x220
	TArray<TSoftObjectPtr<AActor>> SwitcingOnActors; // 0x228
	TArray<TSoftObjectPtr<AActor>> SwitcingOffActors; // 0x238
	UStaticMeshComponent* SphereMesh; // 0x248
};

struct UMovieSceneObjectPropertyTrack {
	UObject* PropertyClass; // 0xb0
};

struct UNiagaraDataInterfaceGrid3DCollection {
	int32_t NumAttributes; // 0x100
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0x108
	ENiagaraGpuBufferFormat BufferFormat; // 0x128
};

struct UBTService_CrowUpdateTargetState {
	FBlackboardKeySelector TargetInSight; // 0x98
};

struct UCrowBuildingDynamicPartsTableRef {
	TMap<FName, FCrowBuildingDynamicParts> PartsMap; // 0x28
};

struct UCrowObserverIndicatorWidget {
	UImage* IMG_SquadColor; // 0x3c8
	UTextBlock* TB_SquadNumber; // 0x3d0
	UProgressBar* PB_HealthPoint; // 0x3d8
	ACrowPlayerStateBase* LocalPlayerState; // 0x3e0
	ACrowPlayerStateBase* TargetPlayerState; // 0x3e8
	ACrowCharacterPawn* CharacterPawn; // 0x3f0
};

struct UCrowUserPopupWidget {
	UCrowWidgetImage* IMG_UserThumenail; // 0x348
	UCrowWidgetImage* IMG_Rank; // 0x350
	UTextBlock* TB_UserLevel; // 0x358
	UTextBlock* TB_Username; // 0x360
	UCrowButton* BT_Profile; // 0x368
	UCrowButton* BT_Invite; // 0x370
	UCrowButton* BT_Kick; // 0x378
	UCrowButton* BT_Promote; // 0x380
	UCrowButton* BT_RequestFriend; // 0x388
	UCrowButton* BT_DeleteFriend; // 0x390
	UCrowButton* BT_Wisper; // 0x398
	UCrowButton* BT_Join; // 0x3a0
	UCrowButton* BT_Report; // 0x3a8
	UCrowButton* BT_Close; // 0x3b0
	FCrowGamePlayUserPopupInfo CurrentPlayUserPopupInfo; // 0x3b8
	EFriendSlotType CurrentSlotType; // 0x3f0
	ACrowSceneLobby* SceneLobby; // 0x3f8
};

struct ACrowWeaponTablet {
	ECrowCameraMode BackupCameraMode; // 0x1ec0
};

struct ACrowWeaponTimeBombForBombMission {
	AActor* CompositionCClass; // 0x1ec0
	UCrowHealWidget* ProgressWidget; // 0x1ec8
	UCrowTriggerUIBase* CancelTrigger; // 0x1ed0
	bool bIsPlantCompositionC; // 0x1ed8
};

struct UMaterialExpressionLandscapeVisibilityMask {
	FGuid ExpressionGUID; // 0x40
};

struct UMoviePlayerSettings {
	bool bWaitForMoviesToComplete; // 0x28
	bool bMoviesAreSkippable; // 0x29
	TArray<FString> StartupMovies; // 0x30
};

struct ACrowLadderActor {
	UStaticMesh* LadderStair; // 0x228
	UBoxComponent* TriggerBox; // 0x230
	USceneComponent* Top; // 0x238
	USceneComponent* Bottom; // 0x240
	USceneComponent* TopEnter; // 0x248
	USceneComponent* BottomEnter; // 0x250
	USceneComponent* BottomExit; // 0x258
	UStaticMeshComponent* LadderBodyMeshComponent; // 0x260
	UCrowTriggerComponent* TopEnterTrigger; // 0x268
	bool bUseTopEnterTrigger; // 0x270
	int32_t StepCount; // 0x274
	float StepHeight; // 0x278
	int32_t TopExitStepNumberFromTop; // 0x27c
	float BottomAllowableEntryAngle; // 0x280
	float BottomAllowableEntryXYSize; // 0x284
	float BottomAllowableEntryHeight; // 0x288
};

struct AOculusMR_CastingCameraActor {
	UVRNotificationsComponent* VRNotificationComponent; // 0x238
	UTexture2D* CameraColorTexture; // 0x240
	UTexture2D* CameraDepthTexture; // 0x248
	UOculusMR_PlaneMeshComponent* PlaneMeshComponent; // 0x250
	UMaterial* ChromaKeyMaterial; // 0x258
	UMaterial* OpaqueColoredMaterial; // 0x260
	UMaterialInstanceDynamic* ChromaKeyMaterialInstance; // 0x268
	UMaterialInstanceDynamic* CameraFrameMaterialInstance; // 0x270
	UMaterialInstanceDynamic* BackdropMaterialInstance; // 0x278
	UTexture2D* DefaultTexture_White; // 0x280
	TArray<UTextureRenderTarget2D*> BackgroundRenderTargets; // 0x2d8
	ASceneCapture2D* ForegroundCaptureActor; // 0x2e8
	TArray<UTextureRenderTarget2D*> ForegroundRenderTargets; // 0x2f0
	TArray<double> PoseTimes; // 0x300
	UOculusMR_Settings* MRSettings; // 0x310
	UOculusMR_State* MRState; // 0x318
};

struct UCrowTutorialInfoWidget {
	URichTextBlock* RTB_Message; // 0x348
	UImage* IMG_BackGround; // 0x350
	FTimerHandle VisibleTimer; // 0x358
	FLinearColor BackgroundBlockColor; // 0x360
	FLinearColor BackgroundRedColor; // 0x370
};

struct UPropertyValue {
	TArray<TFieldPath<FProperty>> Properties; // 0x88
	TArray<int32_t> PropertyIndices; // 0x98
	TArray<FCapturedPropSegment> CapturedPropSegments; // 0xa8
	FString FullDisplayString; // 0xb8
	FName PropertySetterName; // 0xc8
	TMap<FString, FString> PropertySetterParameterDefaults; // 0xd0
	bool bHasRecordedData; // 0x120
	UObject* LeafPropertyClass; // 0x128
	TArray<char> ValueBytes; // 0x138
	EPropertyValueCategory PropCategory; // 0x148
};

struct ACrowLoadoutBoxActor {
	ACrowWorldIconActor* RewardIconActor; // 0x230
	UParticleSystemComponent* RewardSmokeEffect; // 0x238
	UBoxComponent* BoxComponent; // 0x240
	USceneComponent* IconLocation; // 0x248
	UCrowSimpleBuoyancyComponent* BuoyancyComponent; // 0x250
	ACrowSupplyEventParachuteActor* ParachuteClass; // 0x258
	UAnimationAsset* ParachuteDownAni; // 0x260
	UAnimationAsset* ParachuteUpAni; // 0x268
	float DropHeight; // 0x270
	float MaxSpeed; // 0x274
	uint32_t MaxSupplyCount; // 0x278
	UAkAudioEvent* UseSound; // 0x280
	float LifeTime; // 0x288
	float HP; // 0x28c
	UParticleSystem* DestroyEffect; // 0x290
	UAkAudioEvent* DestroySound; // 0x298
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x2a0
	char BoxTeam; // 0x328
	char SquadRewardIndex; // 0x329
	uint32_t RemainSupplyCount; // 0x32c
	float RemainLifeTime; // 0x330
	TArray<uint64_t> UsedPlayerArray; // 0x338
	ECrowLoadoutBoxState LoadoutBoxState; // 0x348
	ACrowSupplyEventParachuteActor* ParachuteActor; // 0x350
	float CurrentHP; // 0x358
	bool bUpdateIcon; // 0x35c
	FTimerHandle CheckLifeTimer; // 0x360
	bool bIsSpawned; // 0x368
	FVector LandLocation; // 0x36c
	bool bIsAttachedParachute; // 0x378
};

struct UCrowVehicleManager {
	TArray<AActor*> VehicleArray; // 0x28
	TArray<AActor*> VehicleImpedimentsArray; // 0x38
};

struct UTextBlock {
	FText Text; // 0x128
	FDelegate TextDelegate; // 0x140
	FSlateColor ColorAndOpacity; // 0x150
	FDelegate ColorAndOpacityDelegate; // 0x178
	FSlateFontInfo Font; // 0x188
	FSlateBrush StrikeBrush; // 0x1e0
	FVector2D ShadowOffset; // 0x268
	FLinearColor ShadowColorAndOpacity; // 0x270
	FDelegate ShadowColorAndOpacityDelegate; // 0x280
	float MinDesiredWidth; // 0x290
	bool bWrapWithInvalidationPanel; // 0x294
	bool bAutoWrapText; // 0x295
	ETextTransformPolicy TextTransformPolicy; // 0x296
	bool bSimpleTextMode; // 0x297
};

struct ACrowGameModeSquadMatch {
	ACrowBomberActor* StealthBomberClass; // 0x518
	ACrowSupplyAmmoActor* MorphineBoxClass; // 0x520
	ACrowLoadoutBoxActor* LoadoutBoxClass; // 0x528
	TArray<UCrowSquadInfo*> ResultArray; // 0x530
	TMap<FString, char> SquadTeamMap; // 0x540
};

struct UCrowWeaponSubStateBase {
	ACrowWeaponBase* WeaponBase; // 0x28
	ACrowCharacterPawn* CharacterOwner; // 0x30
};

struct ALuminAROrigin {
	UMRMeshComponent* MRMeshComponent; // 0x220
	UMaterialInterface* PlaneSurfaceMaterial; // 0x228
	UMaterialInterface* WireframeMaterial; // 0x230
};

struct UBTDecorator_Loop {
	int32_t NumLoops; // 0x68
	bool bInfiniteLoop; // 0x6c
	float InfiniteLoopTimeoutTime; // 0x70
};

struct UCrowPassenger {
	ACrowPlayerControllerBase* PlayerController; // 0xc0
	ACrowVehiclePawn* VehiclePawn; // 0xc8
	APawn* PassengerPawn; // 0xd0
	int32_t ClientSeatIndex; // 0xd8
	UCrowPassengerManager* ClientPassengerManager; // 0xe0
	FName VehicleName; // 0xe8
	EVehicleIdentity VehicleIdentity; // 0xf0
	UCrowPassengerInput* PassengerInput; // 0xf8
	ECrowCameraMode DefaultCameraMode; // 0x100
	ECrowCameraMode CurrentCameraMode; // 0x101
	bool bIsChangedCameraModeAtAimView; // 0x102
	FTimerHandle WaitTimeWhenChangingSeatHandler; // 0x108
	ACrowVehiclePawn* LastVehiclePawn; // 0x110
	ACrowGameStateBase* GameState; // 0x118
};

struct UMaterialExpressionTextureBase {
	UTexture* Texture; // 0x40
};

struct UMaterialExpressionSubtract {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UInputAxisKeyDelegateBinding {
	TArray<FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings; // 0x28
};

struct UCrowInputCharacterOnVehicle {
	ACrowPlayerControllerBase* PlayerController; // 0x140
};

struct UWB_ExplosiveIndicator_C {
	UWidgetAnimation* Ani_Active_In6m; // 0x388
	UWidgetAnimation* Ani_Active_Out6m; // 0x390
	UImage* IMG_Base; // 0x398
	UImage* IMG_Base_2; // 0x3a0
	UImage* IMG_LocateArrow; // 0x3a8
};

struct UArchVisCharMovementComponent {
	FRotator RotationalAcceleration; // 0xb00
	FRotator RotationalDeceleration; // 0xb0c
	FRotator MaxRotationalVelocity; // 0xb18
	float MinPitch; // 0xb24
	float MaxPitch; // 0xb28
	float WalkingFriction; // 0xb2c
	float WalkingSpeed; // 0xb30
	float WalkingAcceleration; // 0xb34
};

struct UMovieSceneIntegerSection {
	FMovieSceneIntegerChannel IntegerCurve; // 0xe8
};

struct UAnimNotifyState_TimedParticleEffect {
	UParticleSystem* PSTemplate; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct UMovieSceneCinematicShotSection {
	FString ShotDisplayName; // 0x160
	FText DisplayName; // 0x170
};

struct UParticleModuleMeshRotationRate {
	FRawDistributionVector StartRotationRate; // 0x30
};

struct UWB_HUD_M1Abrams_Crosshair_SubMachinegun_Third_C {
	UImage* IMG_Crosshair_Gauge; // 0x438
	UImage* IMG_Crosshair_Gauge_Base; // 0x440
	UImage* IMG_Crosshair_Moving; // 0x448
	UImage* IMG_Crosshair_Point_2; // 0x450
	UImage* IMG_TPS_Down; // 0x458
	UImage* IMG_TPS_Down_2; // 0x460
	UImage* IMG_TPS_Left; // 0x468
	UImage* IMG_TPS_Left_2; // 0x470
	UImage* IMG_TPS_Right; // 0x478
	UImage* IMG_TPS_Right_2; // 0x480
	UImage* IMG_TPS_Up; // 0x488
	UImage* IMG_TPS_Up_2; // 0x490
};

struct UCrowGetSquadPointWidget {
	UTextBlock* TB_PointEvent; // 0x348
	UCanvasPanel* CP_PointEvent; // 0x350
	UWidgetAnimation* Animation_Move_1; // 0x358
	UWidgetAnimation* Animation_Move_2; // 0x360
	UWidgetAnimation* Animation_Move_3; // 0x368
	UWidgetAnimation* Animation_Fade_Out_1; // 0x370
	UWidgetAnimation* Animation_Fade_Out_2; // 0x378
	UWidgetAnimation* Animation_Fade_Out_3; // 0x380
};

struct UCrowCharacterMainAnimFPArm {
	FVector2D WeaponFollowValue; // 0x3ac
	ACrowWeaponBase* CurrentWeapon; // 0x3b8
	ECrowPrivateWeaponAnimType WeaponAnimType; // 0x3c0
};

struct USoundNodeWaveParam {
	FName WaveParameterName; // 0x48
};

struct UMaterialExpressionSobol {
	FExpressionInput Cell; // 0x40
	FExpressionInput Index; // 0x54
	FExpressionInput Seed; // 0x68
	uint32_t ConstIndex; // 0x7c
	FVector2D ConstSeed; // 0x80
};

struct UMaterialExpressionTransform {
	FExpressionInput Input; // 0x40
	EMaterialVectorCoordTransformSource TransformSourceType; // 0x54
	EMaterialVectorCoordTransform TransformType; // 0x55
};

struct UMagicLeapMeshTrackerComponent {
	FMulticastInlineDelegate OnMeshTrackerUpdated; // 0x200
	bool ScanWorld; // 0x210
	EMagicLeapMeshType MeshType; // 0x211
	UBoxComponent* BoundingVolume; // 0x218
	EMagicLeapMeshLOD LevelOfDetail; // 0x220
	float PerimeterOfGapsToFill; // 0x224
	bool Planarize; // 0x228
	float DisconnectedSectionArea; // 0x22c
	bool RequestNormals; // 0x230
	bool RequestVertexConfidence; // 0x231
	EMagicLeapMeshVertexColorMode VertexColorMode; // 0x232
	TArray<FColor> BlockVertexColors; // 0x238
	FLinearColor VertexColorFromConfidenceZero; // 0x248
	FLinearColor VertexColorFromConfidenceOne; // 0x258
	bool RemoveOverlappingTriangles; // 0x268
	UMRMeshComponent* MRMesh; // 0x270
	int32_t BricksPerFrame; // 0x278
};

struct URetainerBox {
	bool bRetainRender; // 0x120
	bool RenderOnInvalidation; // 0x121
	bool RenderOnPhase; // 0x122
	int32_t Phase; // 0x124
	int32_t PhaseCount; // 0x128
	UMaterialInterface* EffectMaterial; // 0x130
	FName TextureParameter; // 0x138
};

struct UParticleSystemComponent {
	UParticleSystem* Template; // 0x440
	TArray<UMaterialInterface*> EmitterMaterials; // 0x448
	TArray<USkeletalMeshComponent*> SkelMeshComponents; // 0x458
	char bResetOnDetach : 1; // 0x469
	char bUpdateOnDedicatedServer : 1; // 0x469
	char bAllowRecycling : 1; // 0x469
	char bAutoManageAttachment : 1; // 0x469
	char bAutoAttachWeldSimulatedBodies : 1; // 0x469
	char bWarmingUp : 1; // 0x46a
	char bOverrideLODMethod : 1; // 0x46a
	char bSkipUpdateDynamicDataDuringTick : 1; // 0x46a
	ParticleSystemLODMethod LODMethod; // 0x475
	EParticleSignificanceLevel RequiredSignificance; // 0x476
	TArray<FParticleSysParam> InstanceParameters; // 0x478
	FMulticastInlineDelegate OnParticleSpawn; // 0x488
	FMulticastInlineDelegate OnParticleBurst; // 0x498
	FMulticastInlineDelegate OnParticleDeath; // 0x4a8
	FMulticastInlineDelegate OnParticleCollide; // 0x4b8
	bool bOldPositionValid; // 0x4c8
	FVector OldPosition; // 0x4cc
	FVector PartSysVelocity; // 0x4d8
	float WarmupTime; // 0x4e4
	float WarmupTickRate; // 0x4e8
	float SecondsBeforeInactive; // 0x4f0
	float MaxTimeBeforeForceUpdateTransform; // 0x4f8
	TArray<UParticleSystemReplay*> ReplayClips; // 0x518
	float CustomTimeDilation; // 0x530
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x588
	FName AutoAttachSocketName; // 0x590
	EAttachmentRule AutoAttachLocationRule; // 0x598
	EAttachmentRule AutoAttachRotationRule; // 0x599
	EAttachmentRule AutoAttachScaleRule; // 0x59a
	FMulticastInlineDelegate OnSystemFinished; // 0x5c8
};

struct USourceEffectSimpleDelayPreset {
	FSourceEffectSimpleDelaySettings Settings; // 0xa8
};

struct UMaterialExpressionMaterialAttributeLayers {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
	FMaterialAttributesInput Input; // 0x58
	FMaterialLayersFunctions DefaultLayers; // 0x70
	TArray<UMaterialExpressionMaterialFunctionCall*> LayerCallers; // 0xb0
	int32_t NumActiveLayerCallers; // 0xc0
	TArray<UMaterialExpressionMaterialFunctionCall*> BlendCallers; // 0xc8
	int32_t NumActiveBlendCallers; // 0xd8
	bool bIsLayerGraphBuilt; // 0xdc
};

struct UMaterialExpressionDecalMipmapLevel {
	FExpressionInput TextureSize; // 0x40
	float ConstWidth; // 0x54
	float ConstHeight; // 0x58
};

struct UNiagaraDataInterfaceSpline {
	AActor* Source; // 0x38
};

struct UBTDecorator_CheckGameplayTagsOnActor {
	FBlackboardKeySelector ActorToCheck; // 0x68
	EGameplayContainerMatchType TagsToMatch; // 0x90
	FGameplayTagContainer GameplayTags; // 0x98
	FString CachedDescription; // 0xb8
};

struct ASplineMeshActor {
	USplineMeshComponent* SplineMeshComponent; // 0x220
};

struct UCrowRequirePointWidget {
	UTextBlock* TB_Point; // 0x348
	float DisplayTime; // 0x350
	bool AddPlusText; // 0x354
	UWidgetAnimation* ShowAnim; // 0x358
	UWidgetAnimation* HideAnim; // 0x360
};

struct UNiagaraPrecompileContainer {
	TArray<UNiagaraScript*> Scripts; // 0x28
	UNiagaraSystem* System; // 0x38
};

struct UInterpTrackParticleReplay {
	TArray<FParticleReplayTrackKey> TrackKeys; // 0x70
};

struct UCrowBombMissionBattleMenuInput {
	APlayerController* PC; // 0x140
	bool bRepeatThrow; // 0x148
};

struct ULakeGenerator {
	UStaticMeshComponent* LakeMeshComp; // 0x28
	UBoxComponent* LakeCollisionComp; // 0x30
	ULakeCollisionComponent* LakeCollision; // 0x38
};

struct UCrowCameraPivotHeliComponent {
	float MinPitch; // 0x1f8
	float MaxPitch; // 0x1fc
	UCurveFloat* RollCurve; // 0x200
};

struct USubmixEffectFlexiverbPreset {
	FSubmixEffectFlexiverbSettings Settings; // 0xa0
};

struct ACrowItemInvenBag {
	FCrowInvenBagRow ItemTable; // 0x318
	bool UseDefaultSettings; // 0x4b0
	uint32_t ItemIndex; // 0x4b4
};

struct UTwistKelvinletBrushOpProps {
	float Strength; // 0x70
	float Falloff; // 0x74
};

struct UCrowClanEmblemWidget {
	int32_t EmblemIndex; // 0x358
	int32_t BGIndex; // 0x35c
	UImage* IMG_ClanEmblem_Bg; // 0x360
	UImage* IMG_ClanEmblem_Mark; // 0x368
	UImage* IMG_Select; // 0x370
	UCrowButton* BT_Select; // 0x378
	UCanvasPanel* CP_Cost; // 0x380
	UTextBlock* TB_Label_Money; // 0x388
};

struct UConstructionPlaneMechanic {
	UTransformGizmo* PlaneTransformGizmo; // 0xc8
	UTransformProxy* PlaneTransformProxy; // 0xd0
	USingleClickInputBehavior* ClickToSetPlaneBehavior; // 0xe8
};

struct UMovieSceneByteTrack {
	UEnum* Enum; // 0xb0
};

struct UCrowLobbyBoardWidget {
	UTextBlock* TB_ContentsTitle; // 0x348
	UCanvasPanel* CP_Indicator; // 0x350
	FText ContentsTitle; // 0x358
	bool ShowDotIndicator; // 0x370
};

struct AGeometryCollectionRenderLevelSetActor {
	UVolumeTexture* TargetVolumeTexture; // 0x220
	UMaterial* RayMarchMaterial; // 0x228
	float SurfaceTolerance; // 0x230
	float Isovalue; // 0x234
	bool Enabled; // 0x238
	bool RenderVolumeBoundingBox; // 0x239
};

struct UPreviewMesh {
	bool bBuildSpatialDataStructure; // 0x40
	bool bDrawOnTop; // 0x41
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0x50
};

struct UCrowBannerIndicatorBtnWidget {
	UCrowButton* IndicatorBtn; // 0x350
	TWeakObjectPtr<UCrowWidgetBase> BannerWidget; // 0x358
};

struct UCharacterMovementComponent {
	ACharacter* CharacterOwner; // 0x148
	float GravityScale; // 0x150
	float MaxStepHeight; // 0x154
	float JumpZVelocity; // 0x158
	float JumpOffJumpZFactor; // 0x15c
	float WalkableFloorAngle; // 0x160
	float WalkableFloorZ; // 0x164
	EMovementMode MovementMode; // 0x168
	char CustomMovementMode; // 0x169
	ENetworkSmoothingMode NetworkSmoothingMode; // 0x16a
	float GroundFriction; // 0x16c
	float MaxWalkSpeed; // 0x18c
	float MaxWalkSpeedCrouched; // 0x190
	float MaxSwimSpeed; // 0x194
	float MaxFlySpeed; // 0x198
	float MaxCustomMovementSpeed; // 0x19c
	float MaxAcceleration; // 0x1a0
	float MinAnalogWalkSpeed; // 0x1a4
	float BrakingFrictionFactor; // 0x1a8
	float BrakingFriction; // 0x1ac
	float BrakingSubStepTime; // 0x1b0
	float BrakingDecelerationWalking; // 0x1b4
	float BrakingDecelerationFalling; // 0x1b8
	float BrakingDecelerationSwimming; // 0x1bc
	float BrakingDecelerationFlying; // 0x1c0
	float AirControl; // 0x1c4
	float AirControlBoostMultiplier; // 0x1c8
	float AirControlBoostVelocityThreshold; // 0x1cc
	float FallingLateralFriction; // 0x1d0
	float CrouchedHalfHeight; // 0x1d4
	float Buoyancy; // 0x1d8
	float PerchRadiusThreshold; // 0x1dc
	float PerchAdditionalHeight; // 0x1e0
	FRotator RotationRate; // 0x1e4
	char bUseSeparateBrakingFriction : 1; // 0x1f0
	char bApplyGravityWhileJumping : 1; // 0x1f0
	char bUseControllerDesiredRotation : 1; // 0x1f0
	char bOrientRotationToMovement : 1; // 0x1f0
	char bSweepWhileNavWalking : 1; // 0x1f0
	char bMovementInProgress : 1; // 0x1f0
	char bEnableScopedMovementUpdates : 1; // 0x1f0
	char bEnableServerDualMoveScopedMovementUpdates : 1; // 0x1f1
	char bForceMaxAccel : 1; // 0x1f1
	char bRunPhysicsWithNoController : 1; // 0x1f1
	char bForceNextFloorCheck : 1; // 0x1f1
	char bShrinkProxyCapsule : 1; // 0x1f1
	char bCanWalkOffLedges : 1; // 0x1f1
	char bCanWalkOffLedgesWhenCrouching : 1; // 0x1f1
	char bNetworkSkipProxyPredictionOnNetUpdate : 1; // 0x1f2
	char bNetworkAlwaysReplicateTransformUpdateTimestamp : 1; // 0x1f2
	char bDeferUpdateMoveComponent : 1; // 0x1f2
	char bEnablePhysicsInteraction : 1; // 0x1f2
	char bTouchForceScaledToMass : 1; // 0x1f2
	char bPushForceScaledToMass : 1; // 0x1f2
	char bPushForceUsingZOffset : 1; // 0x1f2
	char bScalePushForceToVelocity : 1; // 0x1f3
	USceneComponent* DeferredUpdatedMoveComponent; // 0x1f8
	float MaxOutOfWaterStepHeight; // 0x200
	float OutofWaterZ; // 0x204
	float Mass; // 0x208
	float StandingDownwardForceScale; // 0x20c
	float InitialPushForceFactor; // 0x210
	float PushForceFactor; // 0x214
	float PushForcePointZOffsetFactor; // 0x218
	float TouchForceFactor; // 0x21c
	float MinTouchForce; // 0x220
	float MaxTouchForce; // 0x224
	float RepulsionForce; // 0x228
	FVector Acceleration; // 0x22c
	FQuat LastUpdateRotation; // 0x240
	FVector LastUpdateLocation; // 0x250
	FVector LastUpdateVelocity; // 0x25c
	float ServerLastTransformUpdateTimeStamp; // 0x268
	float ServerLastClientGoodMoveAckTime; // 0x26c
	float ServerLastClientAdjustmentTime; // 0x270
	FVector PendingImpulseToApply; // 0x274
	FVector PendingForceToApply; // 0x280
	float AnalogInputModifier; // 0x28c
	float MaxSimulationTimeStep; // 0x29c
	int32_t MaxSimulationIterations; // 0x2a0
	int32_t MaxJumpApexAttemptsPerSimulation; // 0x2a4
	float MaxDepenetrationWithGeometry; // 0x2a8
	float MaxDepenetrationWithGeometryAsProxy; // 0x2ac
	float MaxDepenetrationWithPawn; // 0x2b0
	float MaxDepenetrationWithPawnAsProxy; // 0x2b4
	float NetworkSimulatedSmoothLocationTime; // 0x2b8
	float NetworkSimulatedSmoothRotationTime; // 0x2bc
	float ListenServerNetworkSimulatedSmoothLocationTime; // 0x2c0
	float ListenServerNetworkSimulatedSmoothRotationTime; // 0x2c4
	float NetProxyShrinkRadius; // 0x2c8
	float NetProxyShrinkHalfHeight; // 0x2cc
	float NetworkMaxSmoothUpdateDistance; // 0x2d0
	float NetworkNoSmoothUpdateDistance; // 0x2d4
	float NetworkMinTimeBetweenClientAckGoodMoves; // 0x2d8
	float NetworkMinTimeBetweenClientAdjustments; // 0x2dc
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x2e0
	float NetworkLargeClientCorrectionDistance; // 0x2e4
	float LedgeCheckThreshold; // 0x2e8
	float JumpOutOfWaterPitch; // 0x2ec
	FFindFloorResult CurrentFloor; // 0x2f0
	EMovementMode DefaultLandMovementMode; // 0x388
	EMovementMode DefaultWaterMovementMode; // 0x389
	EMovementMode GroundMovementMode; // 0x38a
	char bMaintainHorizontalGroundVelocity : 1; // 0x38b
	char bImpartBaseVelocityX : 1; // 0x38b
	char bImpartBaseVelocityY : 1; // 0x38b
	char bImpartBaseVelocityZ : 1; // 0x38b
	char bImpartBaseAngularVelocity : 1; // 0x38b
	char bJustTeleported : 1; // 0x38b
	char bNetworkUpdateReceived : 1; // 0x38b
	char bNetworkMovementModeChanged : 1; // 0x38b
	char bIgnoreClientMovementErrorChecksAndCorrection : 1; // 0x38c
	char bServerAcceptClientAuthoritativePosition : 1; // 0x38c
	char bNotifyApex : 1; // 0x38c
	char bCheatFlying : 1; // 0x38c
	char bWantsToCrouch : 1; // 0x38c
	char bCrouchMaintainsBaseLocation : 1; // 0x38c
	char bIgnoreBaseRotation : 1; // 0x38c
	char bFastAttachedMove : 1; // 0x38c
	char bAlwaysCheckFloor : 1; // 0x38d
	char bUseFlatBaseForFloorChecks : 1; // 0x38d
	char bPerformingJumpOff : 1; // 0x38d
	char bWantsToLeaveNavWalking : 1; // 0x38d
	char bUseRVOAvoidance : 1; // 0x38d
	char bRequestedMoveUseAcceleration : 1; // 0x38d
	char bWasSimulatingRootMotion : 1; // 0x38d
	char bAllowPhysicsRotationDuringAnimRootMotion : 1; // 0x38e
	char bHasRequestedVelocity : 1; // 0x38e
	char bRequestedMoveWithMaxSpeed : 1; // 0x38e
	char bWasAvoidanceUpdated : 1; // 0x38e
	char bProjectNavMeshWalking : 1; // 0x38e
	char bProjectNavMeshOnBothWorldChannels : 1; // 0x38e
	float AvoidanceConsiderationRadius; // 0x3a0
	FVector RequestedVelocity; // 0x3a4
	int32_t AvoidanceUID; // 0x3b0
	FNavAvoidanceMask AvoidanceGroup; // 0x3b4
	FNavAvoidanceMask GroupsToAvoid; // 0x3b8
	FNavAvoidanceMask GroupsToIgnore; // 0x3bc
	float AvoidanceWeight; // 0x3c0
	FVector PendingLaunchVelocity; // 0x3c4
	float NavMeshProjectionInterval; // 0x474
	float NavMeshProjectionTimer; // 0x478
	float NavMeshProjectionInterpSpeed; // 0x47c
	float NavMeshProjectionHeightScaleUp; // 0x480
	float NavMeshProjectionHeightScaleDown; // 0x484
	float NavWalkingFloorDistTolerance; // 0x488
	FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction; // 0x490
	float MinTimeBetweenTimeStampResets; // 0x4d8
	FRootMotionSourceGroup CurrentRootMotion; // 0x988
	FRootMotionSourceGroup ServerCorrectionRootMotion; // 0x9c0
	FRootMotionMovementParams RootMotionParams; // 0xa90
	FVector AnimRootMotionVelocity; // 0xad0
};

struct ACrowCharacterMesh {
	int32_t FaceIndex; // 0x220
	int32_t TopIndex; // 0x224
	int32_t BottomIndex; // 0x228
	int32_t GlovesIndex; // 0x22c
	int32_t ShoesIndex; // 0x230
	int32_t OuterIndex; // 0x234
	int32_t BackPackIndex; // 0x238
	int32_t GlassesIndex; // 0x23c
	int32_t MaskIndex; // 0x240
	int32_t HeadIndex; // 0x244
	int32_t HairIndex; // 0x248
	USkeletalMeshComponent* FaceMeshComp; // 0x250
	USkeletalMeshComponent* HairMeshComp; // 0x258
	USkeletalMeshComponent* TopMeshComp; // 0x260
	USkeletalMeshComponent* BottomMeshComp; // 0x268
	USkeletalMeshComponent* GlovesMeshComp; // 0x270
	USkeletalMeshComponent* ShoesMeshComp; // 0x278
	USkeletalMeshComponent* OuterMeshComp; // 0x280
	USkeletalMeshComponent* BackPackMeshComp; // 0x288
	USkeletalMeshComponent* GlassesMeshComp; // 0x290
	USkeletalMeshComponent* MaskMeshComp; // 0x298
	USkeletalMeshComponent* HeadMeshComp; // 0x2a0
	UCrowLibraryMergeSKCTask* MergeMeshTask; // 0x2a8
};

struct UCrowCloudDamage {
	float DamageTime; // 0x30
	float MinDamage; // 0x34
	float MaxDamage; // 0x38
	UDamageType* DamageType; // 0x40
};

struct UMaterialExpressionBentNormalCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UAkAuxBus {
	UAkAudioBank* RequiredBank; // 0x58
};

struct UCrowMissionQuickListWidget {
	UCrowMissionQuickListItem* MissionListItemClass; // 0x348
	UTextBlock* TB_Title; // 0x350
	UCrowButton* BT_ListButtonSelect; // 0x358
	UCrowWidgetToggleButton* BT_Weekly; // 0x360
	UCrowWidgetToggleButton* BT_Daily; // 0x368
	UCrowMissionTimerWidget* WB_MissionResetTime; // 0x370
	UCanvasPanel* CP_QuickList; // 0x378
	UImage* IMG_BackGround_F; // 0x380
	UScrollBox* SCB_MissionList; // 0x388
	TArray<UCrowMissionQuickListItem*> ItemList; // 0x390
	int32_t CurrUserLevel; // 0x3a0
	bool IsDailyMission; // 0x3a4
};

struct UCrowCloudCollisionEventHandler {
	UCrowCloudDamageHandler* CloudDamageHandler; // 0xb0
	TMap<int32_t, FCrowCloudCollisionEvent> OverlapEvents; // 0xb8
	AActor* OwnerActor; // 0x108
};

struct ALevelStreamingVolume {
	TArray<FName> StreamingLevelNames; // 0x258
	char bEditorPreVisOnly : 1; // 0x268
	char bDisabled : 1; // 0x268
	EStreamingVolumeUsage StreamingUsage; // 0x26c
};

struct UCrowPassengerInput {
	ACrowVehiclePawn* VehiclePawn; // 0x138
	ACrowPlayerControllerBase* PlayerController; // 0x140
	int32_t SeatIndex; // 0x148
};

struct UCrowRankWidget {
	UTextBlock* TB_RankLevel; // 0x348
	UTextBlock* TB_Username; // 0x350
	UCrowWidgetImage* IMG_RankIcon; // 0x358
	UProgressBar* PB_Rank; // 0x360
};

struct UEnvQueryGenerator_Donut {
	FAIDataProviderFloatValue InnerRadius; // 0x80
	FAIDataProviderFloatValue OuterRadius; // 0xb8
	FAIDataProviderIntValue NumberOfRings; // 0xf0
	FAIDataProviderIntValue PointsPerRing; // 0x128
	FEnvDirection ArcDirection; // 0x160
	FAIDataProviderFloatValue ArcAngle; // 0x180
	bool bUseSpiralPattern; // 0x1b8
	UEnvQueryContext* Center; // 0x1c0
	char bDefineArc : 1; // 0x1c8
};

struct UCrowWidgetToggleButton {
	UImage* IMG_SelectBackGround; // 0x430
	UImage* IMG_SelectFrame; // 0x438
	UTextBlock* TB_SelectLabel; // 0x440
	UWidgetSwitcher* WS_SelectSwitcher; // 0x448
	bool bIsSelect; // 0x450
	FText SeletedButtonLabel; // 0x468
	FSlateBrush SeletedButtonBackGround; // 0x480
	FSlateBrush SeletedButtonFrame; // 0x508
	char ButtonIndex; // 0x590
	bool bIsToggle; // 0x591
	bool bIsDisable; // 0x592
	bool bNotUse; // 0x593
	UImage* IMGNew; // 0x598
	UImage* IMGNew_Deselect; // 0x5a0
};

struct UParticleModuleLocationPrimitiveSphere_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xe0
};

struct ACrowWeaponHealKit {
	UCrowHealWidget* HealWidget; // 0x1ec0
	UCrowTriggerUIBase* CancelTrigger; // 0x1ec8
};

struct ULevelSequenceDirector {
	ULevelSequencePlayer* Player; // 0x28
};

struct UMovieSceneFadeSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe8
	FLinearColor FadeColor; // 0x188
	char bFadeAudio : 1; // 0x198
};

struct UNetReplicationGraphConnection {
	UNetConnection* NetConnection; // 0x28
	AReplicationGraphDebugActor* DebugActor; // 0x170
	TArray<FLastLocationGatherInfo> LastGatherLocations; // 0x188
	TArray<UReplicationGraphNode*> ConnectionGraphNodes; // 0x1a0
	UReplicationGraphNode_TearOff_ForConnection* TearOffNode; // 0x1b0
};

struct UTransformProxy {
	bool bRotatePerObject; // 0x70
	bool bSetPivotMode; // 0x71
	FTransform SharedTransform; // 0x90
	FTransform InitialSharedTransform; // 0xc0
};

struct UAnimSharingAdditiveInstance {
	TWeakObjectPtr<USkeletalMeshComponent> BaseComponent; // 0x2b8
	TWeakObjectPtr<UAnimSequence> AdditiveAnimation; // 0x2c0
	float Alpha; // 0x2c8
	bool bStateBool; // 0x2cc
};

struct UMovieSceneAkAudioRTPCSection {
	UAkRtpc* RTPC; // 0xe8
	FString Name; // 0xf0
	FRichCurve FloatCurve; // 0x100
	FMovieSceneFloatChannelSerializationHelper FloatChannelSerializationHelper; // 0x180
	FMovieSceneFloatChannel RTPCChannel; // 0x1b0
};

struct USingleClickInputBehavior {
	bool HitTestOnRelease; // 0xc0
};

struct UCrowPassengerManager {
	char OwnerTeamID; // 0xc0
	float WaitTimeBeforeAction; // 0xc4
	FName DefaultExitSocketName; // 0xc8
	TArray<FName> EmergencyExitSocketName; // 0xd0
	float DefaultCameraSpeed; // 0xe0
	TArray<FPassengerSeatData> SeatDatas; // 0xe8
	TArray<FPassengerSeat> PassengerSeats; // 0xf8
	USkeletalMeshComponent* VehicleBody; // 0x108
};

struct UInAppPurchaseCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UCrowCustomSettingSlotWidget {
	UTextBlock* TB_SlotName; // 0x348
	UTextBlock* TB_SelectedItem; // 0x350
	UCrowButton* BT_Prev; // 0x358
	UCrowButton* BT_Next; // 0x360
	FText SlotName; // 0x368
};

struct UMaterialExpressionFloor {
	FExpressionInput Input; // 0x40
};

struct AVolumetricCloud {
	UVolumetricCloudComponent* VolumetricCloudComponent; // 0x220
};

struct UTextureRenderTargetCube {
	int32_t SizeX; // 0xe0
	FLinearColor ClearColor; // 0xe4
	EPixelFormat OverrideFormat; // 0xf4
	char bHDR : 1; // 0xf5
	char bForceLinearGamma : 1; // 0xf5
};

struct UMaterialExpressionLandscapeLayerWeight {
	FExpressionInput Base; // 0x40
	FExpressionInput Layer; // 0x54
	FName ParameterName; // 0x68
	float PreviewWeight; // 0x70
	FVector ConstBase; // 0x74
	FGuid ExpressionGUID; // 0x80
};

struct UForceFeedbackComponent {
	UForceFeedbackEffect* ForceFeedbackEffect; // 0x1f8
	char bAutoDestroy : 1; // 0x200
	char bStopWhenOwnerDestroyed : 1; // 0x200
	char bLooping : 1; // 0x200
	char bIgnoreTimeDilation : 1; // 0x200
	char bOverrideAttenuation : 1; // 0x200
	float IntensityMultiplier; // 0x204
	UForceFeedbackAttenuation* AttenuationSettings; // 0x208
	FForceFeedbackAttenuationSettings AttenuationOverrides; // 0x210
	FMulticastInlineDelegate OnForceFeedbackFinished; // 0x2c0
};

struct UGridPanel {
	TArray<float> ColumnFill; // 0x120
	TArray<float> RowFill; // 0x130
};

struct UBTService_DefaultFocus {
	char FocusPriority; // 0x98
};

struct UCrowShopDropDownItemSlot {
	UTextBlock* TB_DeselectedText; // 0x348
	UTextBlock* TB_SelectedText; // 0x350
	UImage* IMG_SelectIcon; // 0x358
	UCrowButton* BT_Dropdown; // 0x360
	FString ButtonTextKey; // 0x368
	int32_t ButtonIndex; // 0x378
};

struct UTextLayoutWidget {
	FShapedTextOptions ShapedTextOptions; // 0x108
	ETextJustify Justification; // 0x10b
	ETextWrappingPolicy WrappingPolicy; // 0x10c
	char AutoWrapText : 1; // 0x10d
	float WrapTextAt; // 0x110
	FMargin Margin; // 0x114
	float LineHeightPercentage; // 0x124
};

struct URectLightComponent {
	float SourceWidth; // 0x340
	float SourceHeight; // 0x344
	float BarnDoorAngle; // 0x348
	float BarnDoorLength; // 0x34c
	UTexture* SourceTexture; // 0x350
};

struct APhysicsThruster {
	UPhysicsThrusterComponent* ThrusterComponent; // 0x220
};

struct UEditMeshPolygonsTool {
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0xd0
	UPolyEditCommonProperties* CommonProps; // 0xd8
	UEditMeshPolygonsToolActions* EditActions; // 0xe0
	UEditMeshPolygonsToolActions_Triangles* EditActions_Triangles; // 0xe8
	UEditMeshPolygonsToolEdgeActions* EditEdgeActions; // 0xf0
	UEditMeshPolygonsToolEdgeActions_Triangles* EditEdgeActions_Triangles; // 0xf8
	UEditMeshPolygonsToolUVActions* EditUVActions; // 0x100
	UPolyEditExtrudeProperties* ExtrudeProperties; // 0x108
	UPolyEditOffsetProperties* OffsetProperties; // 0x110
	UPolyEditInsetProperties* InsetProperties; // 0x118
	UPolyEditOutsetProperties* OutsetProperties; // 0x120
	UPolyEditCutProperties* CutProperties; // 0x128
	UPolyEditSetUVProperties* SetUVProperties; // 0x130
	UPolygonSelectionMechanic* SelectionMechanic; // 0x138
	UMultiTransformer* MultiTransformer; // 0x148
	UPolyEditPreviewMesh* EditPreview; // 0x4a0
	UPlaneDistanceFromHitMechanic* ExtrudeHeightMechanic; // 0x4b0
	USpatialCurveDistanceMechanic* CurveDistMechanic; // 0x4b8
	UCollectSurfacePathMechanic* SurfacePathMechanic; // 0x4c0
};

struct UEditPivotToolActionPropertySet {
	bool bUseWorldBox; // 0x68
};

struct UTouchInterface {
	TArray<FTouchInputControl> Controls; // 0x28
	float ActiveOpacity; // 0x38
	float InactiveOpacity; // 0x3c
	float TimeUntilDeactive; // 0x40
	float TimeUntilReset; // 0x44
	float ActivationDelay; // 0x48
	bool bPreventRecenter; // 0x4c
	float StartupDelay; // 0x50
};

struct UAkAudioEvent {
	TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>> LocalizedPlatformAssetDataMap; // 0x58
	UAkAudioBank* RequiredBank; // 0xa8
	UAkAssetPlatformData* CurrentLocalizedPlatformData; // 0xb8
	float MaxAttenuationRadius; // 0xc0
	bool IsInfinite; // 0xc4
	float MinimumDuration; // 0xc8
	float MaximumDuration; // 0xcc
};

struct USubmixEffectTapDelayPreset {
	FSubmixEffectTapDelaySettings Settings; // 0xa8
};

struct UCrowCustomCreateRoomPopupWidget {
	UTextBlock* TB_Title; // 0x348
	UEditableText* ET_RoomName; // 0x350
	UEditableText* ET_RoomPass; // 0x358
	UCrowButton* BT_Ok; // 0x360
	UCrowButton* BT_ChangeOK; // 0x368
	UCrowButton* BT_Cancel; // 0x370
	UCrowCustomSettingSlotWidget* WB_CustomSettingSlot_Mode; // 0x378
	UCrowCustomSettingSlotWidget* WB_CustomSettingSlot_Map; // 0x380
	UCrowCustomSettingSlotWidget* WB_CustomSettingSlot_MaxPlayer; // 0x388
	UCrowCustomSettingSlotWidget* WB_CustomSettingSlot_PlayTime; // 0x390
	UCrowCustomSettingSlotWidget* WB_CustomSettingSlot_WinPoint; // 0x398
	TArray<int32_t> SquadMatchMaxUsers; // 0x3a0
	int32_t SquadMatchMaxUser; // 0x3b0
	TArray<int32_t> TeamMatchMaxUsers; // 0x3b8
	int32_t TeamMatchMaxUser; // 0x3c8
	TArray<int32_t> WinPoints; // 0x3d0
	int32_t WinPoint; // 0x3e0
	TArray<int32_t> PlayTimes; // 0x3e8
	int32_t PlayTime; // 0x3f8
	bool CreateMode; // 0x3fc
	FCrowCustomRoomSettingInfo CurrentRoomSettingInfo; // 0x400
	TArray<FCrowMatchInfo> GameModeInfoArray; // 0x440
};

struct UCrowMovieWidget {
	UBorder* BD_Subtitle_01; // 0x368
	UImage* IMG_ProgressCircle; // 0x370
	UTextBlock* TB_Description; // 0x378
	UHorizontalBox* HB_Skip; // 0x380
	UMediaPlayer* MediaPlayer; // 0x388
	UMediaSource* MediaSourceSynopsis; // 0x390
	UMediaSource* MediaSourceLogo; // 0x398
	UMediaSoundComponent* MediaSoundComp; // 0x3a0
	int32_t SubtitleIndex; // 0x3a8
	TArray<FCrowSubTitleInfo> CurInfo; // 0x3b0
};

struct USculptMaxBrushProperties {
	float MaxHeight; // 0x60
	bool bFreezeCurrentHeight; // 0x64
};

struct UCrowSettingsSubsystem {
	TArray<FActionKeySlot> ModifiedActionKeySlots; // 0x60
	TArray<FAxisKeySlot> ModifiedAxisKeySlots; // 0x70
	TArray<FSettingItem> ModifiedSettingItems; // 0x80
	TArray<FSettingItem> UserSettingItems; // 0x90
	TArray<FIntPoint> DisplayAllowedResolutions; // 0xa0
	bool bIsModified; // 0xb0
	bool bIsLoadedServerOption; // 0xb1
	UCrowSettingsDefaultConfig* CrowSettingsDefaultConfig; // 0xb8
	UCrowSettingsUserConfig* CrowSettingsUserConfig; // 0xc0
	UCrowSettingUIInfomation* CrowSettingUIInfomation; // 0xc8
};

struct UParticleModuleRotationRate_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UCrowSceneManager {
	TMap<uint32_t, FCrowSceneTableRow> SceneTable; // 0x28
	ACrowSceneBase* CurrentScene; // 0x78
	FCrowSceneTableRow CurrentSceneData; // 0xa0
	FCrowSceneTableRow PrevSceneData; // 0x770
};

struct UCrowSquadSummarySlotWidget {
	UTextBlock* TB_PlayerName; // 0x348
	UTextBlock* TB_Kill_Count; // 0x350
	UTextBlock* TB_SurvivalTime_Count; // 0x358
	UTextBlock* TB_Damagel_Count; // 0x360
	UImage* IMG_SquadBack; // 0x368
	UTextBlock* TB_SquadNum; // 0x370
	UTextBlock* TB_Assist_Count; // 0x378
	UImage* IMG_IsLocalPlayer; // 0x380
	UImage* IMG_Icon_unconnected; // 0x388
	UImage* IMG_Class; // 0x390
	UImage* IMG_SquadLeader; // 0x398
};

struct UNavigationPath {
	FMulticastInlineDelegate PathUpdatedNotifier; // 0x28
	TArray<FVector> PathPoints; // 0x38
	ENavigationOptionFlag RecalculateOnInvalidation; // 0x48
};

struct UBTTask_PlaySound {
	USoundCue* SoundToPlay; // 0x70
};

struct UUniformScalar {
	float Magnitude; // 0xb0
};

struct UStaticMesh {
	FPerPlatformInt MinLOD; // 0x80
	float LpvBiasMultiplier; // 0x84
	TArray<FStaticMaterial> StaticMaterials; // 0x88
	float LightmapUVDensity; // 0x98
	int32_t LightMapResolution; // 0x9c
	int32_t LightMapCoordinateIndex; // 0xa0
	float DistanceFieldSelfShadowBias; // 0xa4
	UBodySetup* BodySetup; // 0xa8
	int32_t LODForCollision; // 0xb0
	char bGenerateMeshDistanceField : 1; // 0xb4
	char bStripComplexCollisionForConsole : 1; // 0xb4
	char bHasNavigationData : 1; // 0xb4
	char bSupportUniformlyDistributedSampling : 1; // 0xb4
	char bSupportPhysicalMaterialMasks : 1; // 0xb4
	char bIsBuiltAtRuntime : 1; // 0xb4
	char bAllowCPUAccess : 1; // 0xb4
	char bSupportGpuUniformlyDistributedSampling : 1; // 0xb5
	TArray<UStaticMeshSocket*> Sockets; // 0xd8
	FVector PositiveBoundsExtension; // 0xf8
	FVector NegativeBoundsExtension; // 0x104
	FBoxSphereBounds ExtendedBounds; // 0x110
	int32_t ElementToIgnoreForTexFactor; // 0x12c
	TArray<UAssetUserData*> AssetUserData; // 0x130
	UObject* EditableMesh; // 0x140
	UNavCollisionBase* NavCollision; // 0x148
};

struct UEnvQueryTest_Trace {
	FEnvTraceData TraceData; // 0x1f8
	FAIDataProviderBoolValue TraceFromContext; // 0x228
	FAIDataProviderFloatValue ItemHeightOffset; // 0x260
	FAIDataProviderFloatValue ContextHeightOffset; // 0x298
	UEnvQueryContext* Context; // 0x2d0
};

struct UCrowSoundStateComponent {
	float CheckInterval; // 0xb0
	TArray<FSoundStateInfo> SoundStateInfos; // 0xb8
	ECrowSoundStateType CurrentSoundState; // 0xc8
};

struct UWB_LoadingModeDescSlot_C {
	UImage* Image_34; // 0x268
};

struct UCameraShakeBase {
	bool bSingleInstance; // 0x28
	float ShakeScale; // 0x2c
	APlayerCameraManager* CameraManager; // 0x30
};

struct ACrowWeaponTestActor {
	bool DoNotFire; // 0x220
	bool UseRandomDelay; // 0x221
	float FireRepeatDelay; // 0x224
	float SpreadDegree; // 0x228
	int32_t ShootCount; // 0x22c
	float ReloadDelay; // 0x230
	uint32_t WeaponIndex; // 0x234
	uint32_t PartsBarrel; // 0x238
	uint32_t PartsMagazine; // 0x23c
	uint32_t PartsMuzzle; // 0x240
	uint32_t PartsPistolGrip; // 0x244
	uint32_t PartsPrimarySight; // 0x248
	uint32_t PartsSecondarySight; // 0x24c
	uint32_t PartsSideBarrel; // 0x250
	uint32_t PartsStock; // 0x254
	uint32_t PartsUnderBarrel; // 0x258
	UStaticMeshComponent* SphereMesh; // 0x260
	ACrowWeaponBase* WeaponActor; // 0x268
	char bIsReloading : 1; // 0x270
	float FireRepeatRemainTime; // 0x274
	float ReloadRemainTime; // 0x278
	int32_t RemainShootCount; // 0x27c
};

struct ABP_MeleeThrow_WoodenKnife_C {
	USkeletalMeshComponent* Dagger001; // 0x1940
};

struct UChaosSolverSettings {
	FSoftClassPath DefaultChaosSolverActorClass; // 0x40
};

struct AWorldSettings {
	int32_t VisibilityCellSize; // 0x228
	EVisibilityAggressiveness VisibilityAggressiveness; // 0x22c
	char bPrecomputeVisibility : 1; // 0x22d
	char bPlaceCellsOnlyAlongCameraTracks : 1; // 0x22d
	char bEnableWorldBoundsChecks : 1; // 0x22d
	char bEnableNavigationSystem : 1; // 0x22d
	char bEnableAISystem : 1; // 0x22d
	char bEnableWorldComposition : 1; // 0x22d
	char bUseClientSideLevelStreamingVolumes : 1; // 0x22d
	char bEnableWorldOriginRebasing : 1; // 0x22d
	char bWorldGravitySet : 1; // 0x22e
	char bGlobalGravitySet : 1; // 0x22e
	char bMinimizeBSPSections : 1; // 0x22e
	char bForceNoPrecomputedLighting : 1; // 0x22e
	char bHighPriorityLoading : 1; // 0x22e
	char bHighPriorityLoadingLocal : 1; // 0x22e
	char bOverrideDefaultBroadphaseSettings : 1; // 0x22e
	UNavigationSystemConfig* NavigationSystemConfig; // 0x230
	UNavigationSystemConfig* NavigationSystemConfigOverride; // 0x238
	float WorldToMeters; // 0x240
	float KillZ; // 0x244
	UDamageType* KillZDamageType; // 0x248
	float WorldGravityZ; // 0x250
	float GlobalGravityZ; // 0x254
	ADefaultPhysicsVolume* DefaultPhysicsVolumeClass; // 0x258
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x260
	AGameModeBase* DefaultGameMode; // 0x268
	AGameNetworkManager* GameNetworkManagerClass; // 0x270
	int32_t PackedLightAndShadowMapTextureSize; // 0x278
	FVector DefaultColorScale; // 0x27c
	float DefaultMaxDistanceFieldOcclusionDistance; // 0x288
	float GlobalDistanceFieldViewDistance; // 0x28c
	float DynamicIndirectShadowsSelfShadowingIntensity; // 0x290
	FReverbSettings DefaultReverbSettings; // 0x298
	FInteriorSettings DefaultAmbientZoneSettings; // 0x2b8
	float MonoCullingDistance; // 0x2dc
	USoundMix* DefaultBaseSoundMix; // 0x2e0
	float TimeDilation; // 0x2e8
	float MatineeTimeDilation; // 0x2ec
	float DemoPlayTimeDilation; // 0x2f0
	float MinGlobalTimeDilation; // 0x2f4
	float MaxGlobalTimeDilation; // 0x2f8
	float MinUndilatedFrameTime; // 0x2fc
	float MaxUndilatedFrameTime; // 0x300
	FBroadphaseSettings BroadphaseSettings; // 0x304
	APlayerState* Pauser; // 0x348
	TArray<FNetViewer> ReplicationViewers; // 0x350
	TArray<UAssetUserData*> AssetUserData; // 0x360
	APlayerState* PauserPlayerState; // 0x370
	int32_t MaxNumberOfBookmarks; // 0x378
	UBookmarkBase* DefaultBookmarkClass; // 0x380
	TArray<UBookmarkBase*> BookmarkArray; // 0x388
	UBookmarkBase* LastBookmarkClass; // 0x398
};

struct UGameplayTaskResource {
	int32_t ManualResourceID; // 0x28
	int8_t AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UInputKeyDelegateBinding {
	TArray<FBlueprintInputKeyDelegateBinding> InputKeyDelegateBindings; // 0x28
};

struct AReflectionCapture {
	UReflectionCaptureComponent* CaptureComponent; // 0x220
};

struct UAxisPositionGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoFloatParameterSource> ParameterSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bEnableSignedAxis; // 0x88
	bool bInInteraction; // 0x89
	FVector InteractionOrigin; // 0x8c
	FVector InteractionAxis; // 0x98
	FVector InteractionStartPoint; // 0xa4
	FVector InteractionCurPoint; // 0xb0
	float InteractionStartParameter; // 0xbc
	float InteractionCurParameter; // 0xc0
	float ParameterSign; // 0xc4
};

struct UMovieScenePropertySystem {
	UMovieScenePropertyInstantiatorSystem* InstantiatorSystem; // 0x40
};

struct UBasicOverlays {
	TArray<FOverlayItem> Overlays; // 0x28
};

struct UCrowConquestLineWidget {
	UImage* IMG_BothArrow; // 0x348
	UImage* IMG_Arrow; // 0x350
	UImage* IMG_Dotline; // 0x358
	UImage* IMG_Line; // 0x360
	UWidgetAnimation* AniArrowClash; // 0x368
};

struct UCrowGasMaskStatusWidget {
	FVector2D position; // 0x348
	FVector2D Size; // 0x350
	UCrowProgressBar* PB_FilterGauge; // 0x358
	UTextBlock* TB_FilterCount; // 0x360
	UImage* IMG_AlertEffect; // 0x368
	UImage* IMG_Icon_Usable; // 0x370
	URichTextBlock* RTB_BindedKey; // 0x378
	UWidgetAnimation* AniNoFilter; // 0x380
};

struct UARBasicLightEstimate {
	float AmbientIntensityLumens; // 0x28
	float AmbientColorTemperatureKelvin; // 0x2c
	FLinearColor AmbientColor; // 0x30
};

struct UMaterialExpressionFeatureLevelSwitch {
	FExpressionInput Default; // 0x40
};

struct ASkyCreator {
	USceneComponent* Root; // 0x220
	UBillboardComponent* Billboard; // 0x228
	UStaticMeshComponent* Compass; // 0x230
	USkyAtmosphereComponent* SkyAtmosphere; // 0x238
	UVolumetricCloudComponent* VolumetricCloud; // 0x240
	USkyLightComponent* SkyLight; // 0x248
	UDirectionalLightComponent* SunLight; // 0x250
	UDirectionalLightComponent* MoonLight; // 0x258
	UExponentialHeightFogComponent* ExponentialHeightFog; // 0x260
	UPostProcessComponent* Exposure; // 0x268
	UStaticMeshComponent* StarMap; // 0x270
	UStaticMeshComponent* SunSphere; // 0x278
	UStaticMeshComponent* MoonSphere; // 0x280
	UNiagaraComponent* WeatherFX; // 0x288
	UStaticMeshComponent* SkySphere; // 0x290
	UMaterialInterface* SkySphereMaterial; // 0x298
	UMaterialInstanceDynamic* SkySphereMID; // 0x2a0
	float EditorTimeOfDay; // 0x2a8
	ESkyCreatorEditorWeatherType EditorWeatherType; // 0x2ac
	USkyCreatorWeatherPreset* EditorWeatherPreset; // 0x2b0
	FSkyCreatorWeatherSettings EditorWeatherSettings; // 0x2b8
	bool bIsEditorTickEnabled; // 0x500
	float SkySphereRadius; // 0x504
	bool bLightOptimization; // 0x508
	EComponentMobility SkyAtmosphereMobility; // 0x509
	ESkyAtmosphereTransformMode TransformMode; // 0x50a
	float PlanetRadius; // 0x50c
	float AtmosphereHeight; // 0x510
	float TraceSampleCountScale; // 0x514
	float LayerBottomAttitude; // 0x518
	float LayerHeight; // 0x51c
	float TracingStartMaxDistance; // 0x520
	float TracingMaxDistance; // 0x524
	bool bPerSampleAtmosphericLightTransmittance; // 0x528
	bool bGroundContribution; // 0x529
	int32_t MultiScatteringApproximationOctaveCount; // 0x52c
	float ViewSampleCountScale; // 0x530
	float ReflectionSampleCountScale; // 0x534
	float ShadowViewSampleCountScale; // 0x538
	float ShadowReflectionSampleCountScale; // 0x53c
	float ShadowTracingDistance; // 0x540
	float LowCloudMapScale; // 0x544
	FVector2D LowCloudMapOffset; // 0x548
	float HighCloudMapScale; // 0x550
	FVector2D HighCloudMapOffset; // 0x554
	float HighCloudHorizonFadeHardness; // 0x55c
	bool bAutoScale; // 0x560
	float ShapeNoiseScale; // 0x564
	float DetailNoiseScale; // 0x568
	EComponentMobility SkyLightMobility; // 0x56c
	bool bRealTimeCapture; // 0x56d
	EComponentMobility SunLightMobility; // 0x56e
	bool bControlSunDirection; // 0x56f
	bool bSunUseTemperature; // 0x570
	float SunAngularDiameter; // 0x574
	bool bSunConstantAtmosphereDiskColorScale; // 0x578
	FLinearColor SunAtmosphereDiskColorScale; // 0x57c
	ESkyCreatorSunOrbitType SunOrbitType; // 0x58c
	float SunriseTime; // 0x590
	float SunsetTime; // 0x594
	float SunDawnOffsetTime; // 0x598
	float SunDuskOffsetTime; // 0x59c
	float SunDawnTime; // 0x5a0
	float SunDuskTime; // 0x5a4
	float SunElevation; // 0x5a8
	float SunAzimuth; // 0x5ac
	float SunMinAngleAtDawnDusk; // 0x5b0
	float SunFadeInOutTime; // 0x5b4
	EComponentMobility MoonLightMobility; // 0x5b8
	bool bControlMoonDirection; // 0x5b9
	bool bMoonUseTemperature; // 0x5ba
	float MoonAngularDiameter; // 0x5bc
	bool bMoonConstantAtmosphereDiskColorScale; // 0x5c0
	FLinearColor MoonAtmosphereDiskColorScale; // 0x5c4
	float MoonPhase; // 0x5d4
	float MoonRotation; // 0x5d8
	ESkyCreatorMoonOrbitType MoonOrbitType; // 0x5dc
	float MoonriseTime; // 0x5e0
	float MoonsetTime; // 0x5e4
	float MoonElevation; // 0x5e8
	float MoonAzimuth; // 0x5ec
	float MoonFadeInOutTime; // 0x5f0
	EComponentMobility ExponentialHeightFogMobility; // 0x5f4
	bool bEnableExponentialHeightFog; // 0x5f5
	bool bVolumetricFog; // 0x5f6
	float FogHeightOffset; // 0x5f8
	float SecondFogHeightOffset; // 0x5fc
	UTexture2D* StarMapTexture; // 0x600
	ESkyCreatorStarMapRotationType StarMapRotationType; // 0x608
	FRotator StarMapAdditionalRotation; // 0x60c
	bool bSpawnOnlyUnderClouds; // 0x618
	float PrecipitationSpawnRadius; // 0x61c
	float MaxRainParticles; // 0x620
	float MaxSnowParticles; // 0x624
	bool bEnableWind; // 0x628
	bool bIndependentWindControl; // 0x629
	FSkyCreatorWindSettings EditorIndependentWindSettings; // 0x62c
	float CloudWindSkewAmount; // 0x650
	bool bUseBuiltInExposureSettings; // 0x654
	FCameraExposureSettings ExposureSettings; // 0x658
	FPostProcessSettings PostProcessSettings; // 0x6a0
	float TimeOfDay; // 0xbf0
	FSkyCreatorWeatherSettings WeatherSettings; // 0xbf4
	FSkyCreatorVolumetricCloudMaterials VolumetricCloudMaterials; // 0xe40
	UMaterialInterface* CurrentVolumetricCloudMaterial; // 0xe70
	UMaterialInstanceDynamic* VolumetricCloudMID; // 0xe78
	float CurrentShapeNoiseScale; // 0xe80
	float CurrentDetailNoiseScale; // 0xe84
	FVector LowCloudWindOffset; // 0xe88
	FVector LowCloudWindSkewDirection; // 0xe94
	float LowCloudWindSkewForce; // 0xea0
	FVector HighCloudWindOffset; // 0xea4
	FVector CloudNoiseWindOffset; // 0xeb0
};

struct UReplicationGraphNode_GridCell {
	UReplicationGraphNode* DynamicNode; // 0x140
	UReplicationGraphNode_DormancyNode* DormancyNode; // 0x148
};

struct UBaseCreateFromSelectedHandleSourceProperties {
	EBaseCreateFromSelectedTargetType WriteOutputTo; // 0x68
	FString OutputName; // 0x70
	FString OutputAsset; // 0x80
};

struct USoundNodeLooping {
	int32_t LoopCount; // 0x48
	char bLoopIndefinitely : 1; // 0x4c
};

struct UInterpGroup {
	TArray<UInterpTrack*> InterpTracks; // 0x30
	FName GroupName; // 0x40
	FColor GroupColor; // 0x48
	char bCollapsed : 1; // 0x4c
	char bVisible : 1; // 0x4c
	char bIsFolder : 1; // 0x4c
	char bIsParented : 1; // 0x4c
	char bIsSelected : 1; // 0x4c
};

struct UMaterialExpressionArccosine {
	FExpressionInput Input; // 0x40
};

struct UPlatformGameInstance {
	FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0x1a8
	FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0x1b8
	FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0x1c8
	FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0x1d8
	FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0x1e8
	FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x1f8
	FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x208
	FMulticastInlineDelegate ApplicationRegisteredForRemoteNotificationsDelegate; // 0x218
	FMulticastInlineDelegate ApplicationRegisteredForUserNotificationsDelegate; // 0x228
	FMulticastInlineDelegate ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x238
	FMulticastInlineDelegate ApplicationReceivedRemoteNotificationDelegate; // 0x248
	FMulticastInlineDelegate ApplicationReceivedLocalNotificationDelegate; // 0x258
	FMulticastInlineDelegate ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x268
};

struct UCrowWorldMapVisualConfig {
	TArray<FCrowWorldCameraAttachedFX> CameraAttachedFxAssets; // 0x30
	FCrowWorldMapLightSetting MapLightSettings; // 0x40
	TArray<FCrowWorldMaterialParameterOverride> MPCOverrides; // 0x58
};

struct URespawnParachute_Default_skin_Skeleton_Anim_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x378
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x3f8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0x418
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x520
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x540
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x648
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x6f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x778
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x7f8
	FTransform LeftHandSocketTransform; // 0x900
	FTransform RightHandSocketTransform; // 0x930
	ECrowSkydivingParachuteState ParachuteState; // 0x960
	UAnimSequenceBase* SpreadAnimation; // 0x968
	UAnimSequenceBase* FallAnimation; // 0x970
	UAnimSequenceBase* LandAnimation; // 0x978
	float BoneTransformAlpha; // 0x980
	FTransform SpineSocketTransform; // 0x990
};

struct UBTTask_CrowSetBlackboardBool {
	bool IsSet; // 0x98
};

struct APaperCharacter {
	UPaperFlipbookComponent* Sprite; // 0x4b8
};

struct UAnimSharingInstance {
	TArray<AActor*> RegisteredActors; // 0x28
	UAnimationSharingStateProcessor* StateProcessor; // 0x88
	TArray<UAnimSequence*> UsedAnimationSequences; // 0xc8
	UEnum* StateEnum; // 0xe8
	AActor* SharingActor; // 0xf0
};

struct UDisplaceMeshTool {
	UDisplaceMeshCommonProperties* CommonProperties; // 0x88
	UDisplaceMeshDirectionalFilterProperties* DirectionalFilterProperties; // 0x90
	UDisplaceMeshTextureMapProperties* TextureMapProperties; // 0x98
	UDisplaceMeshPerlinNoiseProperties* NoiseProperties; // 0xa0
	UDisplaceMeshSineWaveProperties* SineWaveProperties; // 0xa8
};

struct UCrowAnimNotify_AkEvent {
	FName AttoachPointName; // 0x38
	UAkAudioEvent* FPEvent; // 0x40
	UAkAudioEvent* TPEvent; // 0x48
};

struct ACrowBombingKit {
	AActor* TargetClass; // 0x1ec8
	UCrowWidgetBase* BinocularsLenzWidget; // 0x1ed0
	float FOVValue; // 0x1ed8
	float Time; // 0x1edc
	float RespondSoundTime; // 0x1ee0
	UAkAudioEvent* PointSetEvent; // 0x1ee8
	UAkAudioEvent* RequestEvent; // 0x1ef0
	UAkAudioEvent* RespondEvent; // 0x1ef8
	UCrowWidgetBase* ScopeWidget; // 0x1f00
	float CameraFOV; // 0x1f08
	float CurrFOV; // 0x1f0c
	float TargetFOV; // 0x1f10
	float CurrTime; // 0x1f14
	FTimerHandle TimeHandle; // 0x1f18
	FKey AimKey; // 0x1f20
	FName AimKeyName; // 0x1f38
	UObject* BomberActor; // 0x1f40
	UObject* KitTargetClass; // 0x1f48
	ACrowKitBomberTarget* KitTargetActor; // 0x1f50
	FTransform TargetTran; // 0x1f60
	FVector FireCharacterPos; // 0x1f90
};

struct UCrowPingItemInfoWidget {
	UWidgetSwitcher* WS_LowMax; // 0x348
	UWidgetSwitcher* WS_PickupInven; // 0x350
	UVerticalBox* VB_PingItemInfo; // 0x358
	UCrowItemInfoWidget* WB_Inventory_ItemInfo; // 0x360
	UCrowWidgetImage* IMG_Icon; // 0x368
	UBorder* BD_Item_Grade; // 0x370
	UBorder* BD_Ping_Item_BG; // 0x378
	UPaperSprite* PickupInvenIcon; // 0x380
	UImage* IMG_Key_X; // 0x388
	UImage* IMG_Key_X_2; // 0x390
	AActor* ItemActor; // 0x398
	EPingWidgetType WidgetType; // 0x3a0
	bool IsPressUSEKey; // 0x3a1
};

struct UCrowRemainTimeSync {
	float TotalTime; // 0xc0
};

struct UCrowStatusCurrencyWidget {
	UPaperSprite* IconSprite; // 0x348
	ECrowItemType CurrencyType; // 0x350
	UImage* IMG_Icon; // 0x358
	UTextBlock* TB_CurrencyCount; // 0x360
	UWidgetAnimation* AniGetMoney; // 0x368
};

struct UDatasmithCineCameraComponentTemplate {
	FDatasmithCameraFilmbackSettingsTemplate FilmbackSettings; // 0x30
	FDatasmithCameraLensSettingsTemplate LensSettings; // 0x38
	FDatasmithCameraFocusSettingsTemplate FocusSettings; // 0x3c
	float CurrentFocalLength; // 0x44
	float CurrentAperture; // 0x48
	FDatasmithPostProcessSettingsTemplate PostProcessSettings; // 0x50
};

struct UCrowVehicleHUDAbramCannon {
	UCanvasPanel* CP_Speed; // 0x398
	UCanvasPanel* SpeedCanvasPanel; // 0x3a0
	UTextBlock* SpeedTextBlock; // 0x3a8
};

struct UTextureRenderTarget2DArray {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	int32_t Slices; // 0xe8
	FLinearColor ClearColor; // 0xec
	EPixelFormat OverrideFormat; // 0xfc
	char bHDR : 1; // 0xfd
	char bForceLinearGamma : 1; // 0xfd
};

struct UAIPerceptionComponent {
	TArray<UAISenseConfig*> SensesConfig; // 0xb0
	UAISense* DominantSense; // 0xc0
	AAIController* AIOwner; // 0xd8
	FMulticastInlineDelegate OnPerceptionUpdated; // 0x160
	FMulticastInlineDelegate OnTargetPerceptionUpdated; // 0x170
	FMulticastInlineDelegate OnTargetPerceptionInfoUpdated; // 0x180
};

struct AARSkyLight {
	UAREnvironmentCaptureProbe* CaptureProbe; // 0x230
};

struct UMovieSceneParameterSection {
	TArray<FBoolParameterNameAndCurve> BoolParameterNamesAndCurves; // 0xe8
	TArray<FScalarParameterNameAndCurve> ScalarParameterNamesAndCurves; // 0xf8
	TArray<FVector2DParameterNameAndCurves> Vector2DParameterNamesAndCurves; // 0x108
	TArray<FVectorParameterNameAndCurves> VectorParameterNamesAndCurves; // 0x118
	TArray<FColorParameterNameAndCurves> ColorParameterNamesAndCurves; // 0x128
	TArray<FTransformParameterNameAndCurves> TransformParameterNamesAndCurves; // 0x138
};

struct UCrowWeaponSkinTableManager {
	TMap<char, FCrowWeaponSkinTableData> WeaponSkinData; // 0x28
};

struct UCrowWorldMapPlayerMarker {
	bool bUseColorLocalSquadRole; // 0x3c8
	UOverlay* DirectionOverlay; // 0x3d0
	UOverlay* LeaderOverlay; // 0x3d8
	UOverlay* MemberOverlay; // 0x3e0
	UWidgetSwitcher* WS_DeathAlive; // 0x3e8
	UImage* IMG_BG_SL; // 0x3f0
	UImage* IMG_Icon_SquadLeader; // 0x3f8
	UImage* IMG_Indoor_SquadLeader; // 0x400
	UImage* IMG_BG_S; // 0x408
	UImage* IMG_Squad_Color; // 0x410
	UImage* IMG_Squad_Indoor; // 0x418
	UImage* IMG_Death; // 0x420
	UImage* IMG_Death_Indoor; // 0x428
	ACrowCharacterPawn* CharacterOwner; // 0x430
	ACrowPlayerStateBase* PlayerStateOwner; // 0x438
	UWidgetAnimation* AniHit; // 0x440
	UWidgetAnimation* AniCallHelp; // 0x448
};

struct UImageSequenceProtocol_EXR {
	bool bCompressed; // 0xd8
	EHDRCaptureGamut CaptureGamut; // 0xd9
};

struct UDatasmithLightComponentTemplate {
	char bVisible : 1; // 0x30
	char CastShadows : 1; // 0x34
	char bUseTemperature : 1; // 0x34
	char bUseIESBrightness : 1; // 0x34
	float Intensity; // 0x38
	float Temperature; // 0x3c
	float IESBrightnessScale; // 0x40
	FLinearColor LightColor; // 0x44
	UMaterialInterface* LightFunctionMaterial; // 0x58
	UTextureLightProfile* IESTexture; // 0x60
};

struct UCrowCharacterMainAnimTP {
	FCrowCharacterAimOffsetDepends AimOffsetDepends; // 0x3a0
	FCrowCharacterAimOffsetVehicle AimOffsetVehicle; // 0x3f0
	UAnimMontage* MontageLandAdditive; // 0x448
	TMap<ECrowCharacterHitParts, UAnimMontage*> HitAnims; // 0x450
	TMap<ECrowCharacterAnimStance, FCrowCharacterDeathAnimByDirection> GroundDeathAnims; // 0x4a0
	FVector2D LeanOnVehicle; // 0x4f0
	ECrowCharacterPeekState PeekState; // 0x4f8
};

struct ABP_CrowProjectileTankSmoke_C {
	UStaticMeshComponent* Abrams_SmokeGrenade; // 0x1900
};

struct UNiagaraPreviewAxis_InterpParamFloat {
	float Min; // 0x38
	float Max; // 0x3c
};

struct UMaterialExpressionMultiply {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UFoliageInstancedStaticMeshComponent {
	FMulticastInlineDelegate OnInstanceTakePointDamage; // 0x668
	FMulticastInlineDelegate OnInstanceTakeRadialDamage; // 0x678
	FGuid GenerationGuid; // 0x688
};

struct UViewport {
	FLinearColor BackgroundColor; // 0x120
};

struct APlayerState {
	float Score; // 0x220
	int32_t playerId; // 0x224
	char Ping; // 0x228
	char bShouldUpdateReplicatedPing : 1; // 0x22a
	char bIsSpectator : 1; // 0x22a
	char bOnlySpectator : 1; // 0x22a
	char bIsABot : 1; // 0x22a
	char bIsInactive : 1; // 0x22a
	char bFromPreviousLevel : 1; // 0x22a
	int32_t StartTime; // 0x22c
	ULocalMessage* EngineMessageClass; // 0x230
	FString SavedNetworkAddress; // 0x240
	FUniqueNetIdRepl UniqueId; // 0x250
	APawn* PawnPrivate; // 0x280
	FString PlayerNamePrivate; // 0x300
};

struct UCrowCompositionCIconWidget {
	UCanvasPanel* CPRoot; // 0x348
	UCanvasPanel* CPLocateArrow; // 0x350
	UCanvasPanel* CPIcon; // 0x358
	UTextBlock* TBName; // 0x360
	UTextBlock* TBDistance; // 0x368
	UImage* IMGBase; // 0x370
	int32_t DistanceDisplayCompositinCColorWhenPlant; // 0x378
};

struct UGizmoBoxComponent {
	FVector Origin; // 0x460
	FQuat Rotation; // 0x470
	FVector Dimensions; // 0x480
	float LineThickness; // 0x48c
	bool bRemoveHiddenLines; // 0x490
	bool bEnableAxisFlip; // 0x491
};

struct UCrowDropBoxWidget {
	UCrowInventoryInputEventHandler* WB_CrowDragDropPanel; // 0x668
	UCanvasPanel* CP_ImagePanel; // 0x670
};

struct UCrowWorldDataCollectionAsset {
	TArray<UBodySetup*> BodySetupArray; // 0x30
	TArray<FCrowWorldActorLayout> LayoutArray; // 0x40
	TArray<FCrowWorldSectorData> SectorArray; // 0x50
	TArray<FCrowWorldClusterData> ClusterArray; // 0x60
	FCrowWorldLandmarkData LandmarkData; // 0x70
	TArray<FCrowWorldLinkedActorData> LinkedActorsArray; // 0x80
};

struct ACrowSceneBase {
	UCrowSceneManager* SceneManager; // 0x228
	UCrowWidgetManager* WidgetManager; // 0x230
	UCrowClientManager* ClientManager; // 0x238
	UCrowItemTableManager* ItemTableManager; // 0x240
	UCrowVivoxManager* VivoxManager; // 0x248
	FCrowSceneTableRow TableData; // 0x260
};

struct UARTrackedQRCode {
	FString QRCode; // 0x108
	int32_t Version; // 0x118
};

struct UParticleModuleRotationOverLifetime {
	FRawDistributionFloat RotationOverLife; // 0x30
	char Scale : 1; // 0x60
};

struct UDatasmithSkyLightComponentTemplate {
	ESkyLightSourceType SourceType; // 0x30
	int32_t CubemapResolution; // 0x34
	UTextureCube* Cubemap; // 0x38
};

struct UAISenseEvent_Hearing {
	FAINoiseEvent Event; // 0x28
};

struct UCrowInputSynopsis {
	UCrowMovieWidget* OwnerWidget; // 0x140
};

struct ACrowWeaponVehicleDualWiedling {
	bool SignalDistributor; // 0x31e8
};

struct UAudioBus {
	EAudioBusChannels AudioBusChannels; // 0x28
	bool bIsAutomatic; // 0x29
};

struct UUPSMoveToEnemyPointAction {
	FMulticastInlineDelegate OnMoveToEnemyPointActionFinishedDelegate; // 0x70
	ACharacter* MoveChracter; // 0x80
	FUPSMoveParams MoveParams; // 0xa0
};

struct UMaterialExpressionRuntimeVirtualTextureSample {
	FExpressionInput Coordinates; // 0x40
	FExpressionInput WorldPosition; // 0x54
	FExpressionInput MipValue; // 0x68
	URuntimeVirtualTexture* VirtualTexture; // 0x80
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x88
	bool bSinglePhysicalSpace; // 0x89
	bool bAdaptive; // 0x8a
	ERuntimeVirtualTextureMipValueMode MipValueMode; // 0x8b
	ERuntimeVirtualTextureTextureAddressMode TextureAddressMode; // 0x8c
};

struct ACrowSceneLobby {
	ACrowLobbyObjectBider* LobbyObjectBider; // 0x938
	ACrowLobbyMainObjectBider* LobbyMainObjectBider; // 0x940
	ACrowWeaponLoadoutObjectBider* WeaponLoadoutObjectBider; // 0x948
	TMap<ELobbyMainSpawnSlot, ACrowLobbyCharacterPawn*> LobbyCharacterPawnMap; // 0x950
	TMap<ELobbyMainSpawnSlot, ACrowWeaponLobby*> LobbyCharacterWeaponMap; // 0x9a0
	TArray<ACrowWeaponLobby*> LobbyLoadoutWeaponArray; // 0x9f0
	ACrowLobbyCharacterPawn* LobbyCharacterCustomPawn; // 0xa00
	ACrowWeaponLobby* LobbyCharacterCustomWeapon; // 0xa08
	ACrowWeaponLobby* LobbyCustomWeapon; // 0xa10
	ACrowSprayActor* LobbySprayActor; // 0xa18
	ELobbySceneMode CurrentLobbySceneMode; // 0xa20
	float TimeToNextCameraChange; // 0xa24
	FRotator DefaultCharacterCustomPawnRotion; // 0xa28
	FRotator DragStartCharacterCustomPawnRotion; // 0xa34
	FRotator DefaultCustomWeaponRotion; // 0xa40
	FRotator DragStartCustomWeaponRotion; // 0xa4c
	FRotator CurrentCustomWeaponRotion; // 0xa58
	FVector2D DragStartScreenPosition; // 0xa64
	EStartGameType StartGameType; // 0xa6c
	ERotationMode WeaponRotationMode; // 0xa6d
	bool IsRotatingCharacterCustomPawn; // 0xa6e
	FRotator CharacterRotationFrom; // 0xa70
	FRotator CharacterRotationTo; // 0xa7c
	bool bUpdateCharacterRotation; // 0xa88
	float CharacterRotationTime; // 0xa8c
	float CurrentCharacterRotationTime; // 0xa90
	bool bPlayingCameraMode; // 0xa94
	int32_t SaveValueMapIndex; // 0xa98
	int64_t SaveValueWeaponIndex; // 0xaa0
	int8_t SaveValueWeaponSlot; // 0xaa8
	int64_t SaveValueUserServerKey; // 0xab0
	bool SaveValuePartyJoin; // 0xab8
	int32_t SaveValueAppearanceIndex[0x8]; // 0xabc
	FString SaveNickName; // 0xae0
	ECharacterCustomCameraType CurrentCharacterCustomCameraType; // 0xaf0
	EMainCameraType CurrentMainCameraType; // 0xaf1
	bool bClothTestMode; // 0xb80
};

struct UCrowVehicleSeatInfoWidget {
	UTextBlock* TXT_Squad_ID; // 0x348
};

struct ACrowVehicleParachuteActor {
	USkeletalMeshComponent* SkeletalMeshComp; // 0x220
	UProjectileMovementComponent* MovementComp; // 0x228
	float MaxSpeed; // 0x230
	float LifeTime; // 0x234
	int32_t VehicleIndex; // 0x238
	ACrowVehiclePawn* VehiclePawn; // 0x240
	UAnimMontage* AnimMontage; // 0x248
	FVector CurrentLocation; // 0x250
	ECrowVehicleParachuteState ParachuteState; // 0x25c
};

struct ACrowItemTableOverview {
	int32_t CountInRow; // 0x220
	float SizeRow; // 0x224
	float SizeColumn; // 0x228
	UStaticMeshComponent* SphereMesh; // 0x230
	UStaticMesh* RowIndicatorMesh; // 0x238
	FVector RowIndicatorScale; // 0x240
	FRotator DefaultRotation; // 0x24c
	TArray<AActor*> IndicatorActors; // 0x258
	TArray<AActor*> SpawnedActors; // 0x268
	int32_t LODIndex; // 0x278
	TArray<FCrowItemAssetRow> ItemRows; // 0x280
	TMap<AActor*, int32_t> ActorRowNumbers; // 0x290
	TArray<FCrowItemAssetRowViewer> ItemRowViewers; // 0x2e0
};

struct UCrowLootingSlotItem {
	ACrowPickupInventory* PickUpInven; // 0x668
	int32_t PickupInvenSlotIndex; // 0x670
	float ItemIconImageSize; // 0x674
	UCanvasPanel* CP_Item; // 0x678
	UTextBlock* TB_ItemName; // 0x680
	UCrowWidgetImage* IMG_ItemIcon; // 0x688
	UTextBlock* TB_ItemAmount; // 0x690
	UImage* IMG_BGFrame; // 0x698
	UImage* IMG_X; // 0x6a0
	UImage* IMG_Frame; // 0x6a8
	UImage* IMG_Grade; // 0x6b0
	UHorizontalBox* HB_Tablet; // 0x6b8
	UTextBlock* TB_Count; // 0x6c0
	UVerticalBox* VerticalBox_92; // 0x6c8
	UWidgetSwitcher* WS_Grade; // 0x6d0
	UCrowLootingSlotEventHandler* InputHandler; // 0x6d8
};

struct UMovieSceneCompiledData {
	FMovieSceneEvaluationTemplate EvaluationTemplate; // 0x28
	FMovieSceneSequenceHierarchy Hierarchy; // 0x188
	FMovieSceneEntityComponentField EntityComponentField; // 0x2a0
	FMovieSceneEvaluationField TrackTemplateField; // 0x390
	TArray<FFrameTime> DeterminismFences; // 0x3c0
	FGuid CompiledSignature; // 0x3d0
	FGuid CompilerVersion; // 0x3e0
	FMovieSceneSequenceCompilerMaskStruct AccumulatedMask; // 0x3f0
	FMovieSceneSequenceCompilerMaskStruct AllocatedMask; // 0x3f1
	EMovieSceneSequenceFlags AccumulatedFlags; // 0x3f2
};

struct UUVLayoutPreview {
	UUVLayoutPreviewProperties* Settings; // 0x28
	UPreviewMesh* PreviewMesh; // 0x30
	UTriangleSetComponent* TriangleComponent; // 0x38
	bool bShowBackingRectangle; // 0x40
	UMaterialInterface* BackingRectangleMaterial; // 0x48
};

struct UAkWwiseTreeSelector {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnItemDragged; // 0x118
};

struct USoundNodeParamCrossFade {
	FName ParamName; // 0x58
};

struct UCrowBattlePassTableManager {
	TMap<char, FCrowBattlePassCostTableRow> BattlePassCostTableRows; // 0x28
	TMap<FName, FCrowBattlePassSeasonTableRow> SeasonTableRows; // 0x78
	TMap<char, FCrowBattlePassPackageData> PackageDatas; // 0xc8
	TMap<int32_t, FCrowBattlePassFreePassCostTableRow> FreePassCostTableRows; // 0x118
	TMap<int32_t, FCrowBattlePassLevelInfoTableRow> LevelInfoTableRows; // 0x168
};

struct UWB_Crosshair_Mh6_RocketFord_Thrid_C {
	UImage* IMG_Cross; // 0x428
	UImage* IMG_Cross_2; // 0x430
	UImage* IMG_Crosshair_Gauge; // 0x438
	UImage* IMG_Crosshair_Gauge_2; // 0x440
	UImage* IMG_Crosshair_Moving; // 0x448
	UWB_Vehicle_Warning_Heli_C* WB_Vehicle_Damage; // 0x450
};

struct USoundNode {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct UCrowComponentContainer {
	TMap<UObject*, UCrowBinderActorComponent*> Binders; // 0xb0
	TMap<UObject*, UCrowActorComponentBase*> CrowComponents; // 0x100
	TMap<uint32_t, UCrowObjectBase*> CrowObjects; // 0x150
	AActor* OwnerActor; // 0x1a0
};

struct ACrowConquestMeteorSettings {
	float Chance; // 0x220
	float LargeMeteorSpeed; // 0x224
	float LargeMeteorLifeTime; // 0x228
	UAkAudioEvent* LargeMeteorFlyByLoopSound; // 0x230
	UAkAudioEvent* LargeMeteorFlyByLoopEndSound; // 0x238
	UAkAudioEvent* LargeMeteorExplosionSound; // 0x240
	UParticleSystem* LargeMeteor; // 0x248
	UParticleSystem* LargeMeteorExplosion01; // 0x250
	UParticleSystem* LargeMeteorExplosion02; // 0x258
	float SmallMeteorSpeedMin; // 0x260
	float SmallMeteorSpeedMax; // 0x264
	int32_t SmallMeteorCountMin; // 0x268
	int32_t SmallMeteorCountMax; // 0x26c
	float SmallMeteorFireDelayMin; // 0x270
	float SmallMeteorFireDelayMax; // 0x274
	FWeaponDamageSettings SmallMeteorDamage; // 0x278
	UDamageType* SmallMeteorDamegeType; // 0x2a0
	UMatineeCameraShake* CameraShake; // 0x2a8
	float CameraShakeMinDistance; // 0x2b0
	float CameraShakeMaxDistance; // 0x2b4
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x2b8
	UAkAudioEvent* SmallMeteorFlyByLoopSound; // 0x340
	UAkAudioEvent* SmallMeteorFlyByLoopEndSound; // 0x348
	UAkAudioEvent* SmallMeteorExplosionSound; // 0x350
	UParticleSystem* SmallMeteor; // 0x358
	UParticleSystem* SmallMeteorExplosion; // 0x360
	float GasAreaRadiuse; // 0x368
	float GasLifeTime; // 0x36c
	UParticleSystem* Gas; // 0x370
	AActor* GasActor; // 0x378
	UBoxComponent* Root; // 0x3b8
	TArray<ACrowConquestMeteorPieceActor*> SmallMeteorArray; // 0x3c0
};

struct UBrushStampIndicator {
	float BrushRadius; // 0x38
	float BrushFalloff; // 0x3c
	FVector BrushPosition; // 0x40
	FVector BrushNormal; // 0x4c
	bool bDrawIndicatorLines; // 0x58
	bool bDrawRadiusCircle; // 0x59
	int32_t SampleStepCount; // 0x5c
	FLinearColor LineColor; // 0x60
	float LineThickness; // 0x70
	bool bDepthTested; // 0x74
	bool bDrawSecondaryLines; // 0x75
	float SecondaryLineThickness; // 0x78
	FLinearColor SecondaryLineColor; // 0x7c
	UPrimitiveComponent* AttachedComponent; // 0x90
};

struct UCrowGameResultSquadRankWidget {
	TArray<UCrowResultSquadSlotWidget*> SquadSlotList; // 0x368
	UCrowResultSquadSlotWidget* WB_Result_SquadSlot_2; // 0x378
	UCrowResultSquadSlotWidget* WB_Result_SquadSlot_3; // 0x380
	UCrowResultSquadSlotWidget* WB_Result_SquadSlot_4; // 0x388
	UCrowResultSquadSlotWidget* WB_Result_SquadSlot_5; // 0x390
	UCrowButton* WB_BT_Skip; // 0x398
	UWidgetAnimation* GameOverAniStart; // 0x3a0
	UWidgetAnimation* GameOverAniEnd; // 0x3a8
	UWidgetAnimation* VictoryAniStart; // 0x3b0
	UWidgetAnimation* VictoryAniEnd; // 0x3b8
};

struct UVectorFieldComponent {
	UVectorField* VectorField; // 0x440
	float Intensity; // 0x448
	float Tightness; // 0x44c
	char bPreviewVectorField : 1; // 0x450
};

struct UEnvQueryTest_Volume {
	UEnvQueryContext* VolumeContext; // 0x1f8
	AVolume* VolumeClass; // 0x200
	char bDoComplexVolumeTest : 1; // 0x208
};

struct UEdGraphPin_Deprecated {
	FString PinName; // 0x28
	FString PinToolTip; // 0x38
	EEdGraphPinDirection Direction; // 0x48
	FEdGraphPinType PinType; // 0x50
	FString DefaultValue; // 0xa8
	FString AutogeneratedDefaultValue; // 0xb8
	UObject* DefaultObject; // 0xc8
	FText DefaultTextValue; // 0xd0
	TArray<UEdGraphPin_Deprecated*> LinkedTo; // 0xe8
	TArray<UEdGraphPin_Deprecated*> SubPins; // 0xf8
	UEdGraphPin_Deprecated* ParentPin; // 0x108
	UEdGraphPin_Deprecated* ReferencePassThroughConnection; // 0x110
};

struct UWB_Crosshair_Mh6_Minigun_First_C {
	UCrowWidgetImage* CrowWidgetImage; // 0x450
	UCrowWidgetImage* CrowWidgetImage_143; // 0x458
	UImage* IMG_Crosshair_Point_2; // 0x460
	UCrowWidgetImage* IMG_Down_3; // 0x468
	UCrowWidgetImage* IMG_Down_4; // 0x470
	UCrowWidgetImage* IMG_Left_3; // 0x478
	UCrowWidgetImage* IMG_Left_4; // 0x480
	UImage* IMG_Overheating_Gauge_2; // 0x488
	UImage* IMG_Point; // 0x490
	UCrowWidgetImage* IMG_Right_3; // 0x498
	UCrowWidgetImage* IMG_Right_4; // 0x4a0
	UCrowWidgetImage* IMG_Up_3; // 0x4a8
	UCrowWidgetImage* IMG_Up_4; // 0x4b0
	UWB_Vehicle_Warning_Heli_C* WB_Vehicle_Damage; // 0x4b8
	UWidgetSwitcher* WidgetSwitcher_38; // 0x4c0
};

struct UBTDecorator_SetTagCooldown {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
};

struct UNiagaraDataInterfaceVector4Curve {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
	FRichCurve ZCurve; // 0x170
	FRichCurve WCurve; // 0x1f0
};

struct UCrowRotorStateBase {
	UCrowRotorFSM* RotorFSM; // 0x48
};

struct UMagicLeapTouchpadGesturesComponent {
	FMulticastInlineDelegate OnTouchpadGestureStart; // 0xb8
	FMulticastInlineDelegate OnTouchpadGestureContinue; // 0xc8
	FMulticastInlineDelegate OnTouchpadGestureEnd; // 0xd8
};

struct UProceduralConeToolProperties {
	float Radius; // 0x70
	float Height; // 0x74
	int32_t RadialSlices; // 0x78
	int32_t HeightSubdivisions; // 0x7c
};

struct URichTextBlock {
	FText Text; // 0x128
	UDataTable* TextStyleSet; // 0x140
	TArray<URichTextBlockDecorator*> DecoratorClasses; // 0x148
	bool bOverrideDefaultStyle; // 0x158
	FTextBlockStyle DefaultTextStyleOverride; // 0x160
	float MinDesiredWidth; // 0x3d0
	ETextTransformPolicy TextTransformPolicy; // 0x3d4
	FTextBlockStyle DefaultTextStyle; // 0x3d8
	TArray<URichTextBlockDecorator*> InstanceDecorators; // 0x648
};

struct UGizmoComponentWorldTransformSource {
	USceneComponent* Component; // 0x48
	bool bModifyComponentOnTransform; // 0x50
};

struct UCrowLobbyRecordWeaponWidget {
	UCrowRecordWeaponInfoWidget* WB_Record_WeaponInfo; // 0x348
	UScrollBox* SB_WeaponList; // 0x350
	UCrowRecordWeaponInfoSlotWidget* RecordWeaponInfoSlotWidgetClass; // 0x358
	ACrowSceneLobby* SceneLobby; // 0x360
	FCrowWeaponData SpawnWeaponData; // 0x368
	FCrowWeaponAccData SpawnWeaponAccData; // 0x4d0
	ECrowWeaponUIType CurrentWeaponUIType; // 0x580
};

struct UCrowPartDamageBox {
	float DamageMultiply; // 0x468
};

struct UNavigationInvokerComponent {
	float TileGenerationRadius; // 0xb0
	float TileRemovalRadius; // 0xb4
};

struct UCrowPostProcessBloodComponent {
	UMaterialParameterCollectionInstance* ParamInstance; // 0xb0
	FName BloodParam; // 0xb8
	FName BloodScreenParam; // 0xc0
	UCurveFloat* CurveAppearBlood; // 0xc8
	UCurveFloat* CurveDisappearBlood; // 0xd0
	UCurveFloat* CurveAppearBloodScreen; // 0xd8
	UCurveFloat* CurveDisappearBloodScreen; // 0xe0
	FName ZombieCurveParamX; // 0xe8
	FName ZombieCurveParamY; // 0xf0
	FName ZombieCurveParamZ; // 0xf8
	FVector DefaultZombieParamValue; // 0x100
	UCurveVector* CurveZombieBloodBlur; // 0x110
	FCrowBloodPostProcessEffect BloodMaterials; // 0x118
	float BloodValue; // 0x170
	float BloodScreenValue; // 0x174
	FVector ZombieCurveValue; // 0x178
	float LastHPRate; // 0x184
	bool bDirtyAnyValue; // 0x188
	bool bHuman; // 0x189
	TMap<ECrowBloodAnimType, FCrowBloodAnim> MapBloodAnim; // 0x190
	TWeakObjectPtr<UCrowLocalPostProcessComponent> CachedPostProcessComp; // 0x1e0
};

struct ACrowLobbyHUD {
	UUserWidget* LobbyMainWidget; // 0x310
	UUserWidget* CountdownWidgetClass; // 0x318
	UCrowRejoinMsgWidget* RejoinMsgWidgetClass; // 0x320
	UCrowLobbyMainWidget* MainWidget; // 0x328
	UCrowCountdownWidget* CountdownWidget; // 0x330
	UCrowRejoinMsgWidget* RejoinMsgWidget; // 0x338
};

struct ASceneCaptureCube {
	USceneCaptureComponentCube* CaptureComponentCube; // 0x230
};

struct UMovieSceneTrackInstance {
	UObject* AnimatedObject; // 0x28
	bool bIsMasterTrackInstance; // 0x30
	UMovieSceneEntitySystemLinker* Linker; // 0x38
	TArray<FMovieSceneTrackInstanceInput> Inputs; // 0x40
};

struct ACrowWorldEditorHelper {
	float DistanceLOD1; // 0x220
	float DistanceLOD2; // 0x224
	float DistanceLOD3; // 0x228
	UStaticMeshComponent* SphereMesh; // 0x230
	int32_t LastPropActorStaticMeshMode; // 0x238
	bool UpdateStaticMeshActor; // 0x23c
	bool UpdateBuildingActor; // 0x23d
	bool UpdatePropActor; // 0x23e
	UMaterialInterface* SearchMaterial; // 0x240
	TArray<AActor*> FoundActorsUsingMaterial; // 0x248
	bool IsEditorHelperInitialized; // 0x258
};

struct UWaterWavesAssetReference {
	UWaterWavesAsset* WaterWavesAsset; // 0x28
};

struct UEnvQueryTest_Dot {
	FEnvDirection LineA; // 0x1f8
	FEnvDirection LineB; // 0x218
	EEnvTestDot TestMode; // 0x238
	bool bAbsoluteValue; // 0x239
};

struct UDatasmithStaticMeshComponentTemplate {
	UStaticMesh* StaticMesh; // 0x30
	TArray<UMaterialInterface*> OverrideMaterials; // 0x38
};

struct UCrowMissionComplatePopup {
	UTextBlock* TB_MissionName; // 0x348
	UImage* IMG_TitleBg_2; // 0x350
	UImage* IMG_TitleBg_LIne; // 0x358
	UImage* IMG_Deco_01; // 0x360
	UImage* IMG_Deco_02; // 0x368
	float OpenTime; // 0x370
	TArray<int32_t> MissionIDs; // 0x378
	float MissionPopupCloseTime; // 0x388
	bool IsAddNewMission; // 0x38c
};

struct UCrowCharacterMovement {
	float RotationRateMultiplier; // 0xb7c
	FCrowMovementSetting MovementSetting; // 0xb80
	float DiveImpactDelayElapsed; // 0xbe0
	char bWantsToWeaponFiring : 1; // 0xbe4
	bool bSaveAimState; // 0xbe5
	ECrowCharacterFallType FallType; // 0xbe6
	float TargetTimeLandDelay; // 0xbe8
	float ElapsedTimeLandDelay; // 0xbec
	float PenetrationOverlapCheckInflation; // 0xbf4
	ACrowCharacterPawn* CachedCrowCharacter; // 0xbf8
	UCrowProneCapsuleComponent* ProneUpdatedComponent; // 0xc00
	UPrimitiveComponent* LastBlockedComponent; // 0xc08
	FCrowCharacterMovementWaterInfo WaterInfo; // 0xc10
	uint32_t ReceivedWorldActorIndex; // 0xc70
	int16_t ReceivedLayoutItemIndex; // 0xc74
	bool UseReceivedIndex; // 0xc76
};

struct UCrowProjectileChecker {
	TMap<uint32_t, FCrowProjectileCheckInfo> CheckInfoMap; // 0x68
	TMap<uint32_t, FCrowWeaponCheckInfo> WeaponInfoMap; // 0xb8
	FCrowWeaponTimeChecker WeaponTimeChecker; // 0x108
	FCrowWeaponSpreadChecker WeaponSpreadChecker; // 0x190
	int32_t YellowFlagCount; // 0x198
	int32_t RedFlagCount; // 0x19c
	ACrowPlayerControllerBase* PlayerController; // 0x1a0
};

struct ACrowGameStateConquest {
	TArray<FString> RedIconSequence; // 0x4d8
	TArray<FString> BlueIconSequence; // 0x4e8
	UAkAudioEvent* StartSound; // 0x4f8
	UAkAudioEvent* BGM_EndSound_Loop; // 0x500
	UAkAudioEvent* BGM_EndSound_End; // 0x508
	UAkAudioEvent* BGM_ResultSound_Loop; // 0x510
	UAkAudioEvent* BGM_ResultSound_End; // 0x518
	UAkAudioEvent* VictorySound; // 0x520
	UAkAudioEvent* DefeatSound; // 0x528
	float SkydivingRespawnTime; // 0x530
	TArray<FString> SkillTextIndexArray; // 0x538
	FCrowSkyRespawnCondition SkyRespawnCondition; // 0x548
	FCrowFreeConquestCondition FreeConquestCondition; // 0x564
	TArray<FCrowConquestPointRate> PointAcceleration; // 0x578
	FCrowConquestMeteorInfo MeteorInfo; // 0x588
	int32_t RedTeamConquestPoint; // 0x5d8
	int32_t BlueTeamConquestPoint; // 0x5dc
	int32_t ObjectivePoint; // 0x5e0
	TArray<FString> ConquestSequenceRedTeam; // 0x5e8
	float FreeConquestDestTime; // 0x5f8
	bool RedSkyRespawn; // 0x5fc
	bool BlueSkyRespawn; // 0x5fd
	TArray<FString> ConquestSequenceBlueTeam; // 0x600
	TArray<ACrowConquestArea*> ConquestAreaArray; // 0x610
	TArray<ACrowConquestSpawnPoint*> RedSpawnPointArray; // 0x620
	TArray<ACrowConquestSpawnPoint*> BlueSpawnPointArray; // 0x630
	TArray<ACrowConquestSkyRespawnPoint*> SkyRespawnPointArray; // 0x640
	TArray<ACrowConquestMeteorSettings*> MeteorArray; // 0x650
};

struct UCrowBattleHUDCrosshair {
	UOverlay* OV_Crosshair; // 0x280
};

struct UCineCameraComponent {
	FCameraFilmbackSettings FilmbackSettings; // 0x7c0
	FCameraFilmbackSettings Filmback; // 0x7cc
	FCameraLensSettings LensSettings; // 0x7d8
	FCameraFocusSettings FocusSettings; // 0x7f0
	float CurrentFocalLength; // 0x848
	float CurrentAperture; // 0x84c
	float CurrentFocusDistance; // 0x850
	TArray<FNamedFilmbackPreset> FilmbackPresets; // 0x860
	TArray<FNamedLensPreset> LensPresets; // 0x870
	FString DefaultFilmbackPresetName; // 0x880
	FString DefaultFilmbackPreset; // 0x890
	FString DefaultLensPresetName; // 0x8a0
	float DefaultLensFocalLength; // 0x8b0
	float DefaultLensFStop; // 0x8b4
};

struct ACrowWeaponLoadoutObjectBider {
	TArray<AActor*> WeaponCustomActors; // 0x220
	AActor* WeaponCustom_Camera; // 0x230
	AActor* WeaponCustom_Camera_Sticker; // 0x238
	AActor* WeaponCustom_Camera_Sub; // 0x240
	AActor* WeaponCustom_Camera_Throw; // 0x248
	AActor* WeaponCustom_Camera_Melee; // 0x250
	AActor* WeaponCustom_Camera_Kit; // 0x258
	AActor* WeaponCustom_Camera_HealKit; // 0x260
	AActor* WeaponCustom_Camera_Primary_RL; // 0x268
	AActor* WeaponCustom_SpawnPoint; // 0x270
	AActor* WeaponCustom_SpawnPoint_Sub; // 0x278
	AActor* WeaponCustom_SpawnPoint_Throw; // 0x280
	AActor* WeaponCustom_SpawnPoint_Melee; // 0x288
	AActor* WeaponCustom_SpawnPoint_Kit; // 0x290
	AActor* WeaponCustom_SpawnPoint_HealKit; // 0x298
	AActor* WeaponCustom_SpawnPoint_Primary_RL; // 0x2a0
	bool UseCustomWeaponRotation; // 0x2a8
	float CustomWeaponRotationSpeed; // 0x2ac
	TArray<ACrowFxActivator*> FxActivators; // 0x2b0
};

struct UMaterialExpressionTextureSampleParameter {
	FName ParameterName; // 0x60
	FGuid ExpressionGUID; // 0x68
	FName Group; // 0x78
};

struct UAsyncTask_LoadXRDeviceVisComponent {
	FMulticastInlineDelegate OnModelLoaded; // 0x30
	FMulticastInlineDelegate OnLoadFailure; // 0x40
	UPrimitiveComponent* SpawnedComponent; // 0x58
};

struct UBaseBrushTool {
	UBrushBaseProperties* BrushProperties; // 0xc0
	bool bInBrushStroke; // 0xc8
	float WorldToLocalScale; // 0xcc
	FBrushStampData LastBrushStamp; // 0xd0
	TSoftClassPtr<UObject> PropertyClass; // 0x190
	UBrushStampIndicator* BrushStampIndicator; // 0x1b8
};

struct UWaterWavesAsset {
	UWaterWaves* WaterWaves; // 0x28
};

struct UCrowLobbyRecordWidget {
	UCrowButtonContainerBase* WB_RecordTab; // 0x348
	UCrowButtonContainerBase* WB_RecordTab_Weapon; // 0x350
	UCrowLobbyRecordScoreWidget* WB_RecordScore; // 0x358
	UCrowLobbyRecordWeaponWidget* WB_RecordWeapon; // 0x360
	UCrowReplayWidget* WB_Replay; // 0x368
	UCrowLobbyMainMedalWidget* WB_Medal; // 0x370
	ECrowLobbyRecordTab CurrentRecordTab; // 0x378
	ECrowWeaponUIType CurrentWeaponUIType; // 0x379
};

struct UCrowLandWheelsConfigBody {
	FCrowLandWheelsBodySetting Setting; // 0x28
};

struct UCrowShellShockComponent {
	UMaterialParameterCollection* ParamCollection; // 0xb0
	FName CurveParamX; // 0xb8
	FName CurveParamY; // 0xc0
	FName CurveParamZ; // 0xc8
	UCurveVector* CurveShellSockParam; // 0xd0
	UMaterialInterface* ShellShockMaterial; // 0xd8
	TWeakObjectPtr<UCrowLocalPostProcessComponent> CachedPostProcessComp; // 0xe0
	UMaterialParameterCollectionInstance* ParamInstance; // 0xe8
	bool bPlay; // 0xf0
	float ElapsedTime; // 0xf4
	float fPower; // 0xf8
	int32_t ShellShockMaterialIndex; // 0xfc
	float CurveParamMaxTime; // 0x100
};

struct UMaterialExpressionClearCoatNormalCustomOutput {
	FExpressionInput Input; // 0x40
};

struct AAkReverbVolume {
	char bEnabled : 1; // 0x258
	UAkAuxBus* AuxBus; // 0x260
	FString AuxBusName; // 0x268
	float SendLevel; // 0x278
	float FadeRate; // 0x27c
	float Priority; // 0x280
	UAkLateReverbComponent* LateReverbComponent; // 0x288
};

struct UBTTask_PushPawnAction {
	UPawnAction* Action; // 0x70
};

struct UCrowLobbySlotPurchaseItemWidget {
	UTextBlock* TB_SlotName; // 0x348
	UTextBlock* TB_Price; // 0x350
	UCrowButton* BT_Buy; // 0x358
	ECrowLobbySlotType LobbySlotType; // 0x360
	uint32_t ShopIndex; // 0x364
	uint32_t SlotIndex; // 0x368
	uint32_t Price; // 0x36c
	FText ItemName; // 0x370
};

struct UMaterialExpressionArctangent2 {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct UParticleModuleSizeScaleBySpeed {
	FVector2D SpeedScale; // 0x30
	FVector2D MaxScale; // 0x38
};

struct UCrowHazardGasGuideWidget {
	UImage* IMG_Icon_User_Crowcolor; // 0x348
	UProgressBar* PB_GasFromDist; // 0x350
	UWidgetSwitcher* WS_GasStateSwitcher; // 0x358
	UCanvasPanel* CP_DistArrow; // 0x360
	UTextBlock* TB_Status; // 0x368
	UAkAudioEvent* NearHazardSound; // 0x370
	UAkAudioEvent* InHazardSound; // 0x378
	UAkAudioEvent* StartHazardZoneSound; // 0x380
	UAkAudioEvent* EndHazardZoneSound; // 0x388
	int32_t GasNearUIDist; // 0x390
	int32_t GasNearSoundDist; // 0x394
	UAkComponent* CurrentComponent; // 0x398
};

struct UAsyncActionLoadPrimaryAsset {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UPawnSensingComponent {
	float HearingThreshold; // 0xb0
	float LOSHearingThreshold; // 0xb4
	float SightRadius; // 0xb8
	float SensingInterval; // 0xbc
	float HearingMaxSoundAge; // 0xc0
	char bEnableSensingUpdates : 1; // 0xc4
	char bOnlySensePlayers : 1; // 0xc4
	char bSeePawns : 1; // 0xc4
	char bHearNoises : 1; // 0xc4
	FMulticastInlineDelegate OnSeePawn; // 0xd0
	FMulticastInlineDelegate OnHearNoise; // 0xe0
	float PeripheralVisionAngle; // 0xf0
	float PeripheralVisionCosine; // 0xf4
};

struct UMaterialExpressionArccosineFast {
	FExpressionInput Input; // 0x40
};

struct ACrowGameModeConquest {
	char MinUserCountConquest; // 0x518
	uint32_t ObjectivePoint; // 0x51c
	char RespawnDecreasePoint; // 0x520
	TArray<FString> ConquestSequence; // 0x528
	ACrowSupplyAmmoActor* MorphineBoxClass; // 0x538
	uint32_t MorphineBoxCountLimit; // 0x540
};

struct UCrowHealGauge {
	UImage* IMG_Gauge; // 0x348
	UWidgetSwitcher* WS_Center; // 0x350
	UTextBlock* TB_HealCount; // 0x358
	UMaterialInstanceDynamic* GaugeMaterial; // 0x360
	FLinearColor Color_Bleeding; // 0x368
	FName InjuredLoopAnimName; // 0x378
};

struct UCrowCloudDrawComponent {
	UTextureRenderTarget2D* RenderTarget; // 0xb0
	FVector2D RenderTargetSize; // 0xb8
	float PixelSize; // 0xc0
	float WorldSizeKM; // 0xc4
	UCanvas* Canvas; // 0xc8
	FDrawToRenderTargetContext DrawToRTContext; // 0xd0
};

struct ACrowLobbyMainObjectBider {
	TArray<AActor*> MainMenuActors; // 0x220
	AActor* MainMenu_Camera; // 0x230
	AActor* MainMenu_Camera_L; // 0x238
	AActor* MainMenu_Camera_R; // 0x240
	float CameraChangingTime; // 0x248
	TArray<AActor*> MainMenu_SpawnPoint; // 0x250
	ACrowLobbyCharacterPawn* CrowLobbyCharacterPawnClass; // 0x260
	bool LobbyTestMode; // 0x268
	TArray<FCrowLobbyNoiseAnimInfo> LobbyNoiseAnimInfos; // 0x270
	TMap<ECrowItemGrade, FSoftObjectPath> RandomBoxSequences; // 0x280
	TArray<ACrowFxRandomActivator*> FxRandomActivators; // 0x2d0
	TArray<ACrowFxActivator*> MainMenu_SpawnPointFxActivators; // 0x2e0
	TArray<UAkAudioEvent*> LobbyAudioEvents; // 0x2f0
	TArray<UAkAudioEvent*> LobbyAudioStopEvents; // 0x300
	AActor* AudioTarget; // 0x310
};

struct UCrowSelectModButtonWidget {
	UTextBlock* TB_Select_ModeName; // 0x348
	UTextBlock* TB_Deselect_ModeName; // 0x350
	UCrowToggleButton* CTB_ModSelect_Button; // 0x358
	UCanvasPanel* CP_Lock; // 0x360
	UCrowToggleButton* CTB_CheckBox; // 0x368
	ECrowGameMode GameMod; // 0x390
	FText GameModName; // 0x398
};

struct UGameSessionSettings {
	int32_t MaxSpectators; // 0x28
	int32_t MaxPlayers; // 0x2c
	char bRequiresPushToTalk : 1; // 0x30
};

struct ULightComponentBase {
	FGuid LightGuid; // 0x1f8
	float Brightness; // 0x208
	float Intensity; // 0x20c
	FColor LightColor; // 0x210
	char bAffectsWorld : 1; // 0x214
	char CastShadows : 1; // 0x214
	char CastStaticShadows : 1; // 0x214
	char CastDynamicShadows : 1; // 0x214
	char bAffectTranslucentLighting : 1; // 0x214
	char bTransmission : 1; // 0x214
	char bCastVolumetricShadow : 1; // 0x214
	char bCastDeepShadow : 1; // 0x214
	char bCastRaytracedShadow : 1; // 0x215
	char bAffectReflection : 1; // 0x215
	char bAffectGlobalIllumination : 1; // 0x215
	float DeepShadowLayerDistribution; // 0x218
	float IndirectLightingIntensity; // 0x21c
	float VolumetricScatteringIntensity; // 0x220
	int32_t SamplesPerPixel; // 0x224
};

struct ACrowWorldProperty {
	UStaticMeshComponent* SphereMesh; // 0x220
	FCrowWorldPropertyVehicle PropertyVehicle; // 0x228
	FCrowDOFPropertyScope PropertyScopeDOF; // 0x230
};

struct UDefaultLevelSequenceInstanceData {
	AActor* TransformOriginActor; // 0x30
	FTransform TransformOrigin; // 0x40
};

struct UCrowPingManager {
	TMap<uint16_t, FCrowPingData> PingDataMap; // 0x28
	TMap<uint16_t, ACrowPingBase*> PingActorMap; // 0x78
	FCrowPingData SaveListPingData; // 0xc8
	FTimerHandle PingCountTimerHandle; // 0x138
	FTimerHandle PingLockTimerHandle; // 0x140
};

struct UMaterialExpressionTransformPosition {
	FExpressionInput Input; // 0x40
	EMaterialPositionTransformSource TransformSourceType; // 0x54
	EMaterialPositionTransformSource TransformType; // 0x55
};

struct UMovieSceneParticleSection {
	FMovieSceneParticleChannel ParticleKeys; // 0xe8
};

struct UWB_MessageBox_C {
	UImage* IMG_BackGround; // 0x3e0
	UImage* IMG_MessageButton_2; // 0x3e8
	UImage* IMG_MessageButton_3; // 0x3f0
	UImage* IMG_MessageButton_1_Hover; // 0x3f8
	UImage* IMG_MessageButton_2_Hover; // 0x400
};

struct UCrowWorldFoliage {
	char IsWorldFoliageEnabled : 1; // 0x28
	UWorld* World; // 0x30
	UCrowWorldMapConfig* MapConfig; // 0x38
	APlayerController* PlayerController; // 0x40
	TSet<ULevelStreaming*> ActiveStreamingLevels; // 0x48
	TArray<ULevelStreaming*> LoadedLevelsCached; // 0x98
};

struct UNavigationQueryFilter {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct UNiagaraDataInterface2DArrayTexture {
	UTexture2DArray* Texture; // 0x38
};

struct UNiagaraDataInterfaceColorCurve {
	FRichCurve RedCurve; // 0x70
	FRichCurve GreenCurve; // 0xf0
	FRichCurve BlueCurve; // 0x170
	FRichCurve AlphaCurve; // 0x1f0
};

struct UMeshAnalysisProperties {
	FString SurfaceArea; // 0x60
	FString Volume; // 0x70
};

struct UNiagaraDataInterfaceAudioSpectrum {
	int32_t Resolution; // 0x40
	float MinimumFrequency; // 0x44
	float MaximumFrequency; // 0x48
	float NoiseFloorDb; // 0x4c
};

struct UCrowPlayerReportWidget {
	UTextBlock* TBPlayerName; // 0x348
	UCrowDropDownWidget* WBPlayerReportDropDown; // 0x350
	UCanvasPanel* CPReport; // 0x358
	UCrowButton* BTReport; // 0x360
	UTextBlock* TBReport; // 0x368
	UCrowButton* BTClose; // 0x370
	uint64_t ServerKey; // 0x378
	int32_t SelectedDropDownSlotIndex; // 0x380
};

struct UParticleModuleVectorFieldRotationRate {
	FVector RotationRate; // 0x30
};

struct UConvertToPolygonsToolProperties {
	EConvertToPolygonsMode ConversionMode; // 0x60
	float AngleTolerance; // 0x64
	bool bCalculateNormals; // 0x68
	bool bShowGroupColors; // 0x69
};

struct UMoveBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
};

struct UCrowAudioCheckComponent {
	TArray<UShapeComponent*> Collision; // 0x1f8
	EActorType ActorType; // 0x208
};

struct UUniformGridPanel {
	FMargin SlotPadding; // 0x120
	float MinDesiredSlotWidth; // 0x130
	float MinDesiredSlotHeight; // 0x134
};

struct UCrowVehicleMovementBoats {
	UCrowBoatsConfigEngine* EngineConfigClass; // 0x190
	UCrowBoatsConfigBody* BodyConfigClass; // 0x198
	UCrowBoatsConfigEngine* EngineConfig; // 0x1a0
	UCrowBoatsConfigBody* BodyConfig; // 0x1a8
	UCrowBoatsSimEngine* EngineComponent; // 0x1b0
	TArray<UCrowBoatsSimFloatingVolume*> FloatingVolumeInstances; // 0x1b8
	FVector ChasisDragArea; // 0x1c8
	float CachedDeltaTime; // 0x1d4
	FVector PrevBodyVelocity; // 0x1d8
	FVector SubstepLinearForce; // 0x1e4
	FVector SubstepAngularTorque; // 0x1f0
};

struct APaperSpriteActor {
	UPaperSpriteComponent* RenderComponent; // 0x220
};

struct UGizmoCircleComponent {
	FVector Normal; // 0x460
	float Radius; // 0x46c
	float Thickness; // 0x470
	int32_t NumSides; // 0x474
	bool bViewAligned; // 0x478
	bool bOnlyAllowFrontFacingHits; // 0x479
};

struct ACrowRecoilPainter {
	FGuideConfig GuideConfig; // 0x280
	float MaxRecoilNum; // 0x284
	int32_t Distance; // 0x288
	UDataTable* ImportTable; // 0x290
	UDataTable* ExportTable; // 0x298
	UCrowRecoilUI* RecoilUI; // 0x2a0
	ACrowRecoilEditorBoard* RecoilBoard; // 0x2a8
	bool bEditOnePoint; // 0x2b0
	FString DataTablePrefix; // 0x2b8
	FString DataTablePath; // 0x2c8
	ACrowRecoilEditorBoard* TempleteBoardClass; // 0x2d8
	APlayerController* MyPC; // 0x2e0
};

struct UAkComponent {
	bool bUseSpatialAudio; // 0x218
	ECollisionChannel OcclusionCollisionChannel; // 0x220
	char EnableSpotReflectors : 1; // 0x224
	UAkAuxBus* EarlyReflectionAuxBus; // 0x228
	FString EarlyReflectionAuxBusName; // 0x230
	int32_t EarlyReflectionOrder; // 0x240
	float EarlyReflectionBusSendGain; // 0x244
	float EarlyReflectionMaxPathLength; // 0x248
	float roomReverbAuxBusGain; // 0x24c
	int32_t diffractionMaxEdges; // 0x250
	int32_t diffractionMaxPaths; // 0x254
	float diffractionMaxPathLength; // 0x258
	char DrawFirstOrderReflections : 1; // 0x25c
	char DrawSecondOrderReflections : 1; // 0x25c
	char DrawHigherOrderReflections : 1; // 0x25c
	char DrawDiffraction : 1; // 0x25c
	bool StopWhenOwnerDestroyed; // 0x260
	float AttenuationScalingFactor; // 0x264
	float OcclusionRefreshInterval; // 0x268
	bool bUseReverbVolumes; // 0x26c
};

struct UCrowSaveGame {
	FString UserId; // 0x28
	FString SaveSlotName; // 0x38
	uint32_t UserIndex; // 0x48
	TArray<uint32_t> NewItemsIndex; // 0x50
	TArray<char> NewItemsType; // 0x60
};

struct ACrowWorldFoliageActor {
	UFoliageType* FoliageType; // 0x230
};

struct ANavMeshBoundsVolume {
	FNavAgentSelector SupportedAgents; // 0x258
};

struct UMovieSceneSignedObject {
	FGuid Signature; // 0x28
};

struct UCrowMissionRewardInfoWidget {
	UCrowMissionRewardSlotWidget* WB_MissionRewardSlot_2; // 0x348
	UCrowMissionRewardSlotWidget* WB_MissionRewardSlot_3; // 0x350
	UCrowMissionRewardSlotWidget* WB_MissionRewardSlot_4; // 0x358
	UCrowMissionRewardSlotWidget* WB_MissionRewardSlot_5; // 0x360
	UCrowMissionRewardSlotWidget* WB_MissionRewardSlot_6; // 0x368
	UCrowMissionRewardSlotWidget* WB_MissionRewardSlot_7; // 0x370
	TArray<UCrowMissionRewardSlotWidget*> RewardSlotArray; // 0x378
};

struct ACrowEnvEmitterActor {
	float MinValue; // 0x270
	float MaxValue; // 0x274
	float DefaultValue; // 0x278
	FName ParameterName; // 0x27c
	bool bOverlapEvent; // 0x284
};

struct ACrowWorldReplicationActor {
	USceneComponent* SceneRoot; // 0x220
	UCrowWorldMapConfig* MapConfig; // 0x228
	TArray<FCrowWorldGrid> WorldGridArray; // 0x230
	UCrowWorldSyncServerWorker* ServerWorker; // 0x240
	UCrowWorldSyncClientWorker* FirstClientWorker; // 0x248
	FCrowWorldClientObjects ClientObjects; // 0x250
	TMap<APlayerController*, FCrowWorldPlayerControllerInfo> ControllerInfos; // 0x270
	bool IsWaitingACK; // 0x2c0
	bool ReceivedUpdateLocationACK; // 0x2c1
};

struct ACrowRespawnCamera {
	USphereComponent* EndSensor; // 0x7a0
	USplineComponent* RailSplineComponent; // 0x7a8
	float CurrentCameraPositionOnRail; // 0x7b0
	AActor* AttachedActor; // 0x7b8
	float MoveSecond; // 0x7c0
	float DelaySecond; // 0x7c4
	FVector OffsetLocation; // 0x7c8
	EEasingFunc EasingType; // 0x7d4
	ACrowPlayerControllerBase* PlayerController; // 0x7d8
	ACrowConquestArea* ConquestArea; // 0x7e0
	float CurrentTime; // 0x7e8
	bool IsReachedEnd; // 0x7ec
};

struct UMh6_MachineGun_03_Anim_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	float RotorRoll; // 0x318
};

struct AControlPointMeshActor {
	UControlPointMeshComponent* ControlPointMeshComponent; // 0x220
};

struct AExponentialHeightFog {
	UExponentialHeightFogComponent* Component; // 0x220
	char bEnabled : 1; // 0x228
};

struct UParticleModuleSizeScale {
	FRawDistributionVector SizeScale; // 0x30
	char EnableX : 1; // 0x78
	char EnableY : 1; // 0x78
	char EnableZ : 1; // 0x78
};

struct UCrowCustomSquadSlotWidget {
	UTextBlock* TB_SquadName; // 0x348
	UCrowCustomUserSlotWidget* WB_CustomUserSlot_2; // 0x350
	UCrowCustomUserSlotWidget* WB_CustomUserSlot_3; // 0x358
	UCrowCustomUserSlotWidget* WB_CustomUserSlot_4; // 0x360
	UCrowCustomUserSlotWidget* WB_CustomUserSlot_5; // 0x368
	ECrowCustomTeamType TeamType; // 0x370
	char SquadIndex; // 0x371
	TArray<UCrowCustomUserSlotWidget*> CustomUserSlotArray; // 0x378
};

struct ACrowFoliageAffectorActor {
	bool bNeedDestroy; // 0x220
	float ScaleMultiplier; // 0x224
	TArray<UCrowFoliageAffectorComponent*> FoliageAffectors; // 0x228
};

struct UCrowFlashBangFxWidget {
	UImage* IMG_White; // 0x348
	UImage* IMG_ScreenShot; // 0x350
	ACrowFlashBangCaptureActor* CaptureClass; // 0x358
	ACrowFlashBangCaptureActor* CaptureActor; // 0x360
	UAkAudioEvent* LoopSound; // 0x368
	UAkAudioEvent* EndSound; // 0x370
};

struct ACrowProjectileBullet {
	bool UseProjectileISM; // 0x17c8
	float ProjectileSizeMultiply; // 0x17cc
	UParticleSystem* TracerFX_1P; // 0x17d0
	UNiagaraSystem* TracerFX_1P_N; // 0x17d8
	UParticleSystem* TracerFX_3P; // 0x17e0
	UNiagaraSystem* TracerFX_3P_N; // 0x17e8
	UParticleSystem* TracerFX_3P_Trail; // 0x17f0
	UNiagaraSystem* TracerFX_3P_Trail_N; // 0x17f8
	float TrailFX_LifeTime; // 0x1800
	UAkAudioEvent* FlyBySound_W; // 0x1808
	float FlyBySoundRadius; // 0x1810
	AActor* SoundTargetActor; // 0x1818
	UParticleSystemComponent* TracerFXComp_1P; // 0x1820
	UParticleSystemComponent* TracerFXComp_3P; // 0x1828
	UParticleSystemComponent* TrailFXComp; // 0x1830
};

struct ACrowRuntimeVirtualTextureVolume {
	URuntimeVirtualTextureComponent* RVTComponent; // 0x220
	UBoxComponent* RVTBounds; // 0x228
	TArray<AActor*> CookWith; // 0x230
};

struct UNiagaraPreviewAxis_InterpParamVector {
	FVector Min; // 0x38
	FVector Max; // 0x44
};

struct UCrowResultScoreBombMissionWidget {
	UWidgetAnimation* AniShow; // 0x368
	UWidgetAnimation* AniWin; // 0x370
	UWidgetAnimation* AniLose; // 0x378
	UTextBlock* TBRoundResult; // 0x380
};

struct ACrowShootingTargetActor {
	USceneComponent* RootComp; // 0x220
	USkeletalMeshComponent* MeshComponent; // 0x228
	TArray<USceneComponent*> PointCompList; // 0x230
	UAnimMontage* Montage; // 0x240
	float MaxHealth; // 0x248
	float RespawnTime; // 0x24c
	float CurrentHealth; // 0x250
	bool IsReady; // 0x254
	float RestartTime; // 0x258
};

struct UCrowWorldEventGroup {
	TArray<ACrowWorldEventBase*> DisableEventList; // 0xb8
	FCrowWorldEventGroupInfo GroupInfo; // 0xc8
};

struct UCrowIndicatorSpaceWidget {
	UCanvasPanel* CP_Root; // 0x348
	UCanvasPanel* CP_TopLeft; // 0x350
	UCanvasPanel* CP_BottomRight; // 0x358
	ACrowPlayerControllerBase* PlayerController; // 0x360
};

struct UMaterialExpressionHairColor {
	FExpressionInput Melanin; // 0x40
	FExpressionInput Redness; // 0x54
	FExpressionInput DyeColor; // 0x68
};

struct UInterpTrackSound {
	TArray<FSoundTrackKey> Sounds; // 0x90
	char bPlayOnReverse : 1; // 0xa0
	char bContinueSoundOnMatineeEnd : 1; // 0xa0
	char bSuppressSubtitles : 1; // 0xa0
	char bTreatAsDialogue : 1; // 0xa0
	char bAttach : 1; // 0xa0
};

struct ANavLinkProxy {
	TArray<FNavigationLink> PointLinks; // 0x230
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x240
	UNavLinkCustomComponent* SmartLinkComp; // 0x250
	bool bSmartLinkIsRelevant; // 0x258
	FMulticastInlineDelegate OnSmartLinkReached; // 0x260
};

struct UDiffusionSmoothProperties {
	float SmoothingPerStep; // 0x60
	int32_t Steps; // 0x64
	bool bPreserveUVs; // 0x68
};

struct UMovieScene3DAttachSection {
	FName AttachSocketName; // 0x118
	FName AttachComponentName; // 0x120
	EAttachmentRule AttachmentLocationRule; // 0x128
	EAttachmentRule AttachmentRotationRule; // 0x129
	EAttachmentRule AttachmentScaleRule; // 0x12a
	EDetachmentRule DetachmentLocationRule; // 0x12b
	EDetachmentRule DetachmentRotationRule; // 0x12c
	EDetachmentRule DetachmentScaleRule; // 0x12d
};

struct USpectatorPawnMovement {
	char bIgnoreTimeDilation : 1; // 0x150
};

struct UHLODProxy {
	TArray<FHLODProxyMesh> ProxyMeshes; // 0x28
	TMap<UHLODProxyDesc*, FHLODProxyMesh> HLODActors; // 0x38
};

struct UTireConfig {
	float FrictionScale; // 0x30
	TArray<FTireConfigMaterialFriction> TireFrictionScales; // 0x38
};

struct UMaterialExpressionLightmassReplace {
	FExpressionInput Realtime; // 0x40
	FExpressionInput Lightmass; // 0x54
};

struct UAchievementWriteCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct USkeletalMeshSimplificationSettings {
	FName SkeletalMeshReductionModuleName; // 0x38
};

struct UHapticFeedbackEffect_Curve {
	FHapticFeedbackDetails_Curve HapticDetails; // 0x28
};

struct UCrowVehicleWidgetSeatRoadRover {
	USizeBox* SB_Seat_FrontMG; // 0x3b8
	USizeBox* SB_Seat_MG; // 0x3c0
	USizeBox* SB_Seat_UserWeapon_1; // 0x3c8
};

struct UCrowWidgetTweenBase {
	UWidget* TargetWidget; // 0x28
};

struct UCrowWorldSplinePoleComponent {
	ACrowWorldPropActor* WorldPropTemplete; // 0xc0
	float CableGravityScale; // 0xc8
	bool bUpdateCable; // 0xcc
	TMap<FString, FCrowWorldSplinePoleConnectionInfo> PoleConnectionInfo; // 0xd0
};

struct UAISense_Hearing {
	TArray<FAINoiseEvent> NoiseEvents; // 0x80
	float SpeedOfSoundSq; // 0x90
};

struct UCrowLocalPostProcessComponent {
	FPostProcessSettings Settings; // 0x200
	bool bIsEnablePostProcess; // 0x750
	float Priority; // 0x754
};

struct ABP_Grenade_EscapeM18Ammo_C {
	USkeletalMeshComponent* SK_G67_02; // 0x18d0
};

struct UNiagaraDataInterfaceCurve {
	FRichCurve Curve; // 0x70
};

struct UPlaneBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct UParticleModuleLight_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct UAkAssetDataWithMedia {
	TArray<TSoftObjectPtr<UAkMediaAsset>> MediaList; // 0x70
};

struct UCrowMinimapInfoWidget {
	UAkAudioEvent* UAVSpottedSound_Loop; // 0x348
	UAkAudioEvent* UAVSpottedSound_End; // 0x350
	UCrowWorldMap* WB_Map; // 0x358
	UCanvasPanel* CompassOverlay; // 0x360
	UCanvasPanel* MapOverlay; // 0x368
	UTextBlock* TB_ZoomRange; // 0x370
	TArray<float> ArrayZoomMeter; // 0x378
	int32_t CurrIndex; // 0x388
	bool IsRotation; // 0x38c
	float PrevAngle; // 0x390
	FVector2D CompassBaseSize; // 0x394
	UTexture2D* WorldMapImage; // 0x3a0
	UWidgetAnimation* AniEnemyPatrolZoneStart; // 0x3a8
	UWidgetAnimation* AniEnemyPatrolZoneLoop; // 0x3b0
	UWidgetAnimation* AniEnemyPatrolZoneEnd; // 0x3b8
};

struct USoundWave {
	int32_t CompressionQuality; // 0x1b8
	int32_t StreamingPriority; // 0x1bc
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x1c0
	ESoundGroup SoundGroup; // 0x1c2
	char bLooping : 1; // 0x1c3
	char bStreaming : 1; // 0x1c3
	char bSeekableStreaming : 1; // 0x1c3
	ESoundWaveLoadingBehavior LoadingBehavior; // 0x1c4
	char bMature : 1; // 0x1c5
	char bManualWordWrap : 1; // 0x1c5
	char bSingleLine : 1; // 0x1c6
	char bIsAmbisonics : 1; // 0x1c6
	TArray<float> FrequenciesToAnalyze; // 0x1c8
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x1d8
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x1e8
	int32_t InitialChunkSize; // 0x1f8
	FString SpokenText; // 0x240
	float SubtitlePriority; // 0x250
	float Volume; // 0x254
	float Pitch; // 0x258
	int32_t NumChannels; // 0x25c
	int32_t SampleRate; // 0x260
	TArray<FSubtitleCue> Subtitles; // 0x270
	UCurveTable* Curves; // 0x280
	UCurveTable* InternalCurves; // 0x288
};

struct USkyLightComponent {
	bool bRealTimeCapture; // 0x228
	ESkyLightSourceType SourceType; // 0x229
	UTextureCube* Cubemap; // 0x230
	float SourceCubemapAngle; // 0x238
	int32_t CubemapResolution; // 0x23c
	float SkyDistanceThreshold; // 0x240
	bool bCaptureEmissiveOnly; // 0x244
	bool bLowerHemisphereIsBlack; // 0x245
	FLinearColor LowerHemisphereColor; // 0x248
	float OcclusionMaxDistance; // 0x258
	float Contrast; // 0x25c
	float OcclusionExponent; // 0x260
	float MinOcclusion; // 0x264
	FColor OcclusionTint; // 0x268
	char bCloudAmbientOcclusion : 1; // 0x26c
	float CloudAmbientOcclusionStrength; // 0x270
	float CloudAmbientOcclusionExtent; // 0x274
	float CloudAmbientOcclusionMapResolutionScale; // 0x278
	float CloudAmbientOcclusionApertureScale; // 0x27c
	EOcclusionCombineMode OcclusionCombineMode; // 0x280
	UTextureCube* BlendDestinationCubemap; // 0x338
};

struct UStereoLayerComponent {
	char bLiveTexture : 1; // 0x1f8
	char bSupportsDepth : 1; // 0x1f8
	char bNoAlphaChannel : 1; // 0x1f8
	UTexture* Texture; // 0x200
	UTexture* LeftTexture; // 0x208
	char bQuadPreserveTextureRatio : 1; // 0x210
	FVector2D QuadSize; // 0x214
	FBox2D UVRect; // 0x21c
	float CylinderRadius; // 0x230
	float CylinderOverlayArc; // 0x234
	int32_t CylinderHeight; // 0x238
	FEquirectProps EquirectProps; // 0x23c
	EStereoLayerType StereoLayerType; // 0x284
	EStereoLayerShape StereoLayerShape; // 0x285
	UStereoLayerShape* Shape; // 0x288
	int32_t Priority; // 0x290
};

struct UEditableMesh {
	TArray<UEditableMeshAdapter*> Adapters; // 0x3b8
	int32_t TextureCoordinateCount; // 0x3d0
	int32_t PendingCompactCounter; // 0x51c
	int32_t SubdivisionCount; // 0x520
};

struct ULuminApplicationLifecycleComponent {
	FMulticastInlineDelegate DeviceHasReactivatedDelegate; // 0x140
	FMulticastInlineDelegate DeviceWillEnterRealityModeDelegate; // 0x150
	FMulticastInlineDelegate DeviceWillGoInStandbyDelegate; // 0x160
	FMulticastInlineDelegate FocusLostDelegate; // 0x170
	FMulticastInlineDelegate FocusGainedDelegate; // 0x180
};

struct UEnvQueryTest_InsideWaterBody {
	bool bIncludeWaves; // 0x1f8
	bool bSimpleWaves; // 0x1f9
	bool bIgnoreExclusionVolumes; // 0x1fa
};

struct UAISense_Sight {
	int32_t MaxTracesPerTick; // 0x148
	int32_t MinQueriesPerTimeSliceCheck; // 0x14c
	double MaxTimeSlicePerTick; // 0x150
	float HighImportanceQueryDistanceThreshold; // 0x158
	float MaxQueryImportance; // 0x160
	float SightLimitQueryImportance; // 0x164
};

struct UCrowBannerItem {
	UImage* BannerImage; // 0x348
};

struct ACrowProjectileLockOnLauncher {
	float MinSpeed; // 0x1840
	float MaxSpeed; // 0x1844
	float ForwardMeter; // 0x1848
	float DisableLockOnMeter; // 0x184c
	UCurveFloat* MoveLineCurve; // 0x1850
	UCurveFloat* InterpSpeedCurve; // 0x1858
	FVector PrevPosition; // 0x1860
	FVector CurrPosition; // 0x186c
	FVector CurrDirection; // 0x1878
	float MaxDistancePrevPos; // 0x1884
	float CurrSpeed; // 0x1888
	float AddValue; // 0x188c
	bool DisableLockon; // 0x1890
	float FireDist; // 0x1894
	bool IsLockOn; // 0x1898
	FVector FireStartPosition; // 0x189c
	FVector EndPosition; // 0x18a8
	FVector TargetActorPosition; // 0x18b4
	AActor* LockOnActor; // 0x18c0
};

struct USoundGroups {
	TArray<FSoundGroup> SoundGroupProfiles; // 0x28
};

struct UMaterialExpressionVirtualTextureFeatureSwitch {
	FExpressionInput No; // 0x40
	FExpressionInput Yes; // 0x54
};

struct UParticleLODLevel {
	int32_t Level; // 0x28
	char bEnabled : 1; // 0x2c
	UParticleModuleRequired* RequiredModule; // 0x30
	TArray<UParticleModule*> Modules; // 0x38
	UParticleModuleTypeDataBase* TypeDataModule; // 0x48
	UParticleModuleSpawn* SpawnModule; // 0x50
	UParticleModuleEventGenerator* EventGenerator; // 0x58
	TArray<UParticleModuleSpawnBase*> SpawningModules; // 0x60
	TArray<UParticleModule*> SpawnModules; // 0x70
	TArray<UParticleModule*> UpdateModules; // 0x80
	TArray<UParticleModuleOrbit*> OrbitModules; // 0x90
	TArray<UParticleModuleEventReceiverBase*> EventReceiverModules; // 0xa0
	char ConvertedModules : 1; // 0xb0
	int32_t PeakActiveParticles; // 0xb4
};

struct UParticleModuleVectorFieldLocal {
	UVectorField* VectorField; // 0x30
	FVector RelativeTranslation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale3D; // 0x50
	float Intensity; // 0x5c
	float Tightness; // 0x60
	char bIgnoreComponentTransform : 1; // 0x64
	char bTileX : 1; // 0x64
	char bTileY : 1; // 0x64
	char bTileZ : 1; // 0x64
	char bUseFixDT : 1; // 0x64
};

struct UARCandidateObject {
	TArray<char> CandidateObjectData; // 0x30
	FString FriendlyName; // 0x40
	FBox BoundingBox; // 0x50
};

struct UDatasmithStaticMeshGLTFImportData {
	FString SourceMeshName; // 0x28
};

struct UGizmoScaledTransformSource {
	TScriptInterface<IGizmoTransformSource> ChildTransformSource; // 0x48
};

struct UBakeMeshAttributeMapsTool {
	UBakeMeshAttributeMapsToolProperties* Settings; // 0x90
	UBakedNormalMapToolProperties* NormalMapProps; // 0x98
	UBakedOcclusionMapToolProperties* OcclusionMapProps; // 0xa0
	UBakedCurvatureMapToolProperties* CurvatureMapProps; // 0xa8
	UBakedTexture2DImageProperties* Texture2DProps; // 0xb0
	UBakedOcclusionMapVisualizationProperties* VisualizationProps; // 0xb8
	UMaterialInstanceDynamic* PreviewMaterial; // 0xd0
	UTexture2D* CachedNormalMap; // 0x430
	UTexture2D* CachedOcclusionMap; // 0x450
	UTexture2D* CachedCurvatureMap; // 0x480
	UTexture2D* CachedMeshPropertyMap; // 0x498
	UTexture2D* CachedTexture2DImageMap; // 0x4b0
	UTexture2D* EmptyNormalMap; // 0x4b8
	UTexture2D* EmptyColorMapBlack; // 0x4c0
	UTexture2D* EmptyColorMapWhite; // 0x4c8
};

struct UCrowBoatsConfigBody {
	bool DrawDebugInfo; // 0x28
	bool SimulationGenerateHitEvents; // 0x29
	bool LocalSpaceKinematics; // 0x2a
	bool BeginWithReadyForDriving; // 0x2b
	float AccelerationTilt; // 0x2c
	float AccelerationRollForce; // 0x30
	float AccelerationPitchForce; // 0x34
	float AccelerationCameraYaw; // 0x38
	float AccelerationCameraSpeed; // 0x3c
	float InAirAngularResistance; // 0x40
	float InAirAngularRecoverRoll; // 0x44
	float InAirAngularRecoverPitch; // 0x48
	float ChasisMass; // 0x4c
	FVector ChasisSize; // 0x50
	FVector DirectionalDragRatio; // 0x5c
	FVector LinearDampingRatio; // 0x68
	float PitchDampingRatio; // 0x74
	float RollDampingRatio; // 0x78
	float YawDampingRatio; // 0x7c
	float DepthOffset; // 0x80
	float SpeedDragThreshold; // 0x84
	float MaxTiltSpeed; // 0x88
	float SteeringRollDegree; // 0x8c
	float ThrottlePitchDegree; // 0x90
	float InterpolationSpeedRoll; // 0x94
	float InterpolationSpeedPitch; // 0x98
	float InterpolationSpeed; // 0x9c
	float RecoverAxisSpringConstant; // 0xa0
	float RecoverMaxPitchTorque; // 0xa4
	float RecoverMaxRollTorque; // 0xa8
	ECollisionChannel OceanTraceChannel; // 0xac
	TArray<FCrowBoatsFloatingVolumeSetup> FloatingVolumes; // 0xb0
};

struct ACrowPingBase {
	UCapsuleComponent* CollisionComp; // 0x220
	USceneComponent* IconLocation; // 0x228
	FCrowPingData PingData; // 0x230
	UCrowWorldMapIconPing* MapIcon; // 0x290
	UCrowIndicatorViewInfoPing* IndicatorViewInfo; // 0x298
	UCrowPingIndicatorWidget* IconIndicator; // 0x2a0
	bool Aimed; // 0x2a8
	bool Replyed; // 0x2a9
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x2b0
	UParticleSystemComponent* FxParticlesComp; // 0x338
	FCrowPingTableRow PingTable; // 0x340
};

struct UEdGraphNode_Documentation {
	FString Link; // 0x98
	FString Excerpt; // 0xa8
};

struct UMeshComponent {
	TArray<UMaterialInterface*> OverrideMaterials; // 0x440
	char bEnableMaterialParameterCaching : 1; // 0x460
};

struct UDamageType {
	char bCausedByWorld : 1; // 0x28
	char bScaleMomentumByMass : 1; // 0x28
	char bRadialDamageVelChange : 1; // 0x28
	float DamageImpulse; // 0x2c
	float DestructibleImpulse; // 0x30
	float DestructibleDamageSpreadScale; // 0x34
	float DamageFalloff; // 0x38
};

struct USystemTimeTimecodeProvider {
	FFrameRate FrameRate; // 0x30
	bool bGenerateFullFrame; // 0x38
	bool bUseHighPerformanceClock; // 0x39
};

struct UBTTask_CrowMoveTo {
	ECrowAICharacterStance Stance; // 0xb0
	ECrowAICharacterMoveMode MoveMode; // 0xb1
};

struct UCrowCustomizeSpraySlotWidget {
	UImage* IMG_Icon; // 0x348
	UImage* IMG_Lock; // 0x350
	UImage* IMG_Equiped; // 0x358
	UImage* IMG_Selected; // 0x360
	UImage* IMG_NewIcon; // 0x368
	UWidgetSwitcher* WS_Grade; // 0x370
	UCrowButton* BT_Customize_Spray_Slot; // 0x378
	UCanvasPanel* CP_Cost; // 0x380
	UTextBlock* TB_Label_Money; // 0x388
	bool IsShopMode; // 0x613
	FCrowShopTableRow CurrentShopTable; // 0x618
};

struct ACrowGameHUDBase {
	UCrowHUDWidgetDefault* MainWidgetClassDefault; // 0x310
	UCrowHUDWidgetFullScreenBottom* MainWidgetClassFullScreenBottom; // 0x318
	UCrowHUDWidgetFullScreenTop* MainWidgetClassFullScreenTop; // 0x320
	UCrowSquadWidget* InGameSquadWidgetClass; // 0x328
	UUserWidget* InvetoryWidget; // 0x330
	UUserWidget* WorldMapWidgetClass; // 0x338
	UUserWidget* RespawnMapWidgetClass; // 0x340
	UUserWidget* ObjectiveWidgetClass; // 0x348
	UUserWidget* IndicatorSpaceClass; // 0x350
	UUserWidget* RadialMenuThrowWidgetClass; // 0x358
	UUserWidget* RadialMenuHealKitWidgetClass; // 0x360
	UUserWidget* RadialMenuPingWidgetClass; // 0x368
	UUserWidget* RadialMenuSprayWidgetClass; // 0x370
	UUserWidget* RadialMenuEmotionWidgetClass; // 0x378
	UUserWidget* PingWorldMapWidgetClass; // 0x380
	UUserWidget* PingIndicatorWidgetClass; // 0x388
	UUserWidget* GetItemIndicatorClass; // 0x390
	UUserWidget* CountdownWidgetClass; // 0x398
	UUserWidget* FadeScreenWidgetClass; // 0x3a0
	UUserWidget* LootInventoryWidget; // 0x3a8
	UUserWidget* RequireMineralWidgetClass; // 0x3b0
	UUserWidget* RequireBattleMoneyWidgetClass; // 0x3b8
	UUserWidget* ResultSceneWidgetClass; // 0x3c0
	UUserWidget* ResultSceneIconWidgetClass; // 0x3c8
	UUserWidget* ESCMenuWidgetClass; // 0x3d0
	UUserWidget* InputGuideWidgeteClass; // 0x3d8
	UUserWidget* DialogTooltipWidgetClass; // 0x3e0
	UUserWidget* ScoreBoardWidgetClass; // 0x3e8
	UUserWidget* GameResultWidgetClass; // 0x3f0
	UUserWidget* ChatWidgetClass; // 0x3f8
	UUserWidget* SpectatorModeWidgetClass; // 0x400
	UUserWidget* SpectatorCustomModeWidgetClass; // 0x408
	UUserWidget* TooltipWidgetClass; // 0x410
	UUserWidget* CustomCursorSpaceClass; // 0x418
	UUserWidget* InGameModeGuideWidgetClass; // 0x420
	UUserWidget* GasMaskFilterWidgetClass; // 0x428
	UCrowFlashBangFxWidget* FlashBangFxWidgetClass; // 0x430
	UCrowFlashBangFxWidget* ExplosionFxWidgetClass; // 0x438
	UCrowMissionComplatePopup* MissionComplatePopupClass; // 0x440
	UParticleSystem* BurningFX; // 0x448
	float ShowPingWidgetDistanceLow; // 0x450
	float ShowPingWidgetDistanceFar; // 0x454
	UParticleSystemComponent* AttachedBurningFX; // 0x458
	bool SkipHUD; // 0x460
	UCrowHUDWidgetDefault* MainWidgetDefault; // 0x468
	UCrowHUDWidgetFullScreenBottom* MainWidgetFullScreenBottom; // 0x470
	UCrowHUDWidgetFullScreenTop* MainWidgetFullScreenTop; // 0x478
	TArray<UCrowHUDWidgetBase*> MainWidgetArray; // 0x480
	TArray<UCrowWidgetBase*> SubWidgetArray; // 0x490
	ACrowWeaponBase* CurrentWeaponBase; // 0x4a0
	UCrowBattleInventoryWidget* CrowInventory; // 0x4a8
	UCrowPingItemInfoWidget* CrowGetItemDescWidget; // 0x4b0
	UCrowWorldMapWidget* WorldMapWidget; // 0x4b8
	UCrowRespawnMapWidget* RespawnMapWidget; // 0x4c0
	UCrowObjectiveWidget* ObjectiveWidget; // 0x4c8
	UCrowIndicatorSpaceWidget* IndicatorSpaceWidget; // 0x4d0
	UCrowRadialMenuThrowWidget* RadialMenuThrowWidget; // 0x4d8
	UCrowRadialMenuHealKitWidget* RadialMenuHealKitWidget; // 0x4e0
	UCrowRadialMenuSprayWidget* RadialMenuSprayWidget; // 0x4e8
	UCrowRadialMenuPingWidget* RadialMenuPingWidget; // 0x4f0
	UCrowRadialMenuEmotionWidget* RadialMenuEmotionWidget; // 0x4f8
	UCrowWidgetBase* ScoreBoardWidget; // 0x500
	UCrowCountdownWidget* CountdownWidget; // 0x508
	UCrowFadeScreenWidget* FadeScreenWidget; // 0x510
	UCrowBattleInventoryLoot* CrowLootInventory; // 0x518
	UCrowRequirePointWidget* RequireMineralWidget; // 0x520
	UCrowRequirePointWidget* RequireBattleMoneyWidget; // 0x528
	UCrowResultSceneWidget* ResultSceneWidget; // 0x530
	UCrowESCMenuWidget* ESCMenuWidget; // 0x538
	UCrowWidgetBase* InputGuideWidget; // 0x540
	UCrowDialogTooltip* DialogTooltipWidget; // 0x548
	UCrowWidgetBase* GameResultWidget; // 0x550
	UCrowChatWidget* ChatWidget; // 0x558
	UCrowWidgetTooltip* ToolTipWidget; // 0x560
	UCrowCustomCursorSpaceWidget* CustomCursorSpace; // 0x568
	UCrowSquadWidget* SquadWidget; // 0x570
	UCrowInGameModeGuideWidget* InGameModeGuideWidget; // 0x578
	UCrowGasMaskFilterWidget* GasMaskFilterWidget; // 0x580
	UCrowFlashBangFxWidget* FlashBangFxWidget; // 0x588
	UCrowFlashBangFxWidget* ExplosionFxWidget; // 0x590
	bool IsVehicleMode; // 0x598
	ACrowSceneGame* SceneGame; // 0x5a0
	AActor* PreCameraTarget; // 0x5a8
	char PrevSpectatorCameraMode; // 0x5b0
	ACrowWeaponBase* CurrentAttachedWeapon; // 0x5b8
	UCrowWeaponCrosshairBase* AttachedWeaponCrosshairWidget; // 0x5c0
	UCrowSpectatorWidget* SpectatorModeWidget; // 0x5c8
	UCrowSpectatorCustomModeWidget* SpectatorCustomModeWidget; // 0x5d0
	bool bIsSpectatorMode; // 0x5d8
	UCrowMissionComplatePopup* MissionComplatePopup; // 0x5e0
};

struct ACrowGameHUD_SquadMatch {
	UCrowHUDWidgetSquadMatch* MainWidgetClassSquadMatch; // 0x5f0
	UCrowSquadLoadoutWidget* SquadLoadoutWidgetClass; // 0x5f8
	UCrowSelectLoadoutBoxWidget* LoadoutBoxWidgetClass; // 0x600
	UCrowSquadSummaryWidget* SquadSummaryWidgetClass; // 0x608
	UCrowGameResultSquadRankWidget* GameOverWidgetClass; // 0x610
	UCrowSquadMatchRespawnWidget* SquadMatchRespawnWidgetClass; // 0x618
	UCrowSquadMatchRespawnMsgWidget* SquadMatchRespawnMsgWidgetClass; // 0x620
	UCrowSquadNotiWidget* EscapeTimerClass; // 0x628
	UCrowSquadNotiWidget* ReturnTimerClass; // 0x630
	UCrowSquadNotiWidget* EscapeArrivalClass; // 0x638
	UCrowSquadNotiWidget* EscapeEmergencyClass; // 0x640
	UCrowRadialMenuSquadMatch* RadialMenuSquadMatchClass; // 0x648
	UAkAudioEvent* PlayCountdownSound; // 0x650
	UCrowHUDWidgetSquadMatch* MainWidgetSquadMatch; // 0x658
	UCrowSquadLoadoutWidget* SquadLoadoutWidget; // 0x660
	UCrowSelectLoadoutBoxWidget* LoadoutBoxWidget; // 0x668
	UCrowSquadSummaryWidget* SquadSummaryWidget; // 0x670
	UCrowGameResultSquadRankWidget* GameOverWidget; // 0x678
	UCrowSquadMatchRespawnWidget* SquadMatchRespawnWidget; // 0x680
	UCrowSquadMatchRespawnMsgWidget* SquadMatchRespawnMsgWidget; // 0x688
	UCrowSquadNotiTimerWidget* EscapeTimerWidget; // 0x690
	UCrowSquadNotiTimerWidget* ReturnTimerWidget; // 0x698
	UCrowSquadNotiWidget* EscapeArrivalWidget; // 0x6a0
	UCrowSquadNotiWidget* EscapeEmergencyWidget; // 0x6a8
	ESquadHUDState HUDState; // 0x6b0
	UCrowRadialMenuSquadMatch* RadialMenuSquadMatch; // 0x6b8
};

struct ACrowGameStateBase {
	TArray<ACrowPlayerStateBase*> CrowPlayerArray; // 0x298
	TArray<ACrowPlayerStateBase*> CrowObserverPlayerArray; // 0x2a8
	float StartCameraWorkTime; // 0x2b8
	UCrowRemainTimeSync* TimeSync; // 0x2c0
	TArray<UCrowSquadInfo*> SquadArray; // 0x2c8
	float TotalBattleTime; // 0x2d8
	bool bIsDeleteWorldItem; // 0x2dc
	FCrowRespawnTimeInfo RespawnTimeInfo; // 0x2e0
	bool bIsShareAmmo; // 0x2f4
	TArray<ACrowMissionArea*> MissionAreaArray; // 0x2f8
	TArray<ACrowMissionArea*> WaitRespawnAreaArray; // 0x308
	ACrowResultSceneInfo* ResultSceneActor; // 0x318
	TArray<ACrowRespawnPickupInventory*> RespawnFixInvenArray; // 0x320
	ACrowItemSpawnerGridActor* ItemSpawnerGridActor; // 0x330
	UCrowDeathZoneManager* DeathZoneManager; // 0x338
	ACrowVehicleSpawnerGroup* VehicleSpawnerGroup; // 0x340
	UCrowLevelSequencePlayer* LevelSequencePlayer; // 0x348
	FTimerHandle HandleEndSequence; // 0x350
	TMap<UObject*, int32_t> AssetReferenceCounts; // 0x358
	FCrowActiveSpawnerCount WaitUserSpawnerCount; // 0x3b0
	FCrowActiveSpawnerCount MatchSpawnerCount; // 0x3d4
};

struct UCrowObjectiveSquadMatchWidget {
	UProgressBar* PB_ResourceCount; // 0x348
	UTextBlock* TB_CurrencyCount; // 0x350
	UTextBlock* TB_TagetCurrency; // 0x358
	UCanvasPanel* CP_CuonRewardBox; // 0x360
	UCrowSquadPointRewardItemWidget* RewardItemClass; // 0x368
	UWidgetAnimation* AniFull; // 0x370
	UWidgetAnimation* AniChange; // 0x378
	TArray<UCrowSquadPointRewardItemWidget*> RewardItemArray; // 0x380
};

struct ACrowProjectileIncendiaryGrenade {
	UCapsuleComponent* FireCollisionComp; // 0x18d0
	UCapsuleComponent* SparkCollisionComp; // 0x18d8
	UParticleSystem* IncendiaryParticle; // 0x18e0
	float TimeToActivation; // 0x18e8
	float RunningTime; // 0x18ec
	float ActivateDamageTimeSecond; // 0x18f0
	float VehicleDamageRate; // 0x18f4
	float FireRadius; // 0x18f8
	float FireHalfHeight; // 0x18fc
	float FireDamage; // 0x1900
	float SparkRadius; // 0x1904
	float SparkHalfHeight; // 0x1908
	float SparkDamageMin; // 0x190c
	float SparkDamageMax; // 0x1910
	float EllipseTime; // 0x1914
	bool ActivatedDamage; // 0x1918
	UAkAudioEvent* EffectStartSound_W; // 0x1920
	UAkAudioEvent* EffectLoopSound_W; // 0x1928
	UAkAudioEvent* EffectEndSound_W; // 0x1930
	TMap<FString, AActor*> OverlapFireMap; // 0x1938
	TMap<FString, AActor*> OverlapSparkMap; // 0x1988
	UParticleSystemComponent* IncendiaryParticleComp; // 0x19d8
	bool bExplosion; // 0x19e0
	bool bDestroy; // 0x19e1
	UAkComponent* AkComponent; // 0x19e8
};

struct UCrowVehicleCrosshairM1Machinegun {
	UCurveLinearColor* OverheatingCurve; // 0x428
	UCrowWeaponInfoWidget* WeaponInfoWidget; // 0x430
};

struct ACrowWorldSyncHubActor {
	USceneComponent* HubRoot; // 0x220
	UCrowFoliageParamSetting* FoliageParamSetting; // 0x228
	bool CrowSyncEnabled; // 0x230
	UCrowWorldSyncHubConfig* SyncHubConfig; // 0x238
	bool LoadAllLevelsBeforeCollect; // 0x240
	bool ShowStatisticsPersistentLevel; // 0x241
	UCrowWorldDestroyer* WorldDestroyer; // 0x248
	UMaterialParameterCollection* CrowGlobalParamCollection; // 0x250
	FVector BoundingBoxExtents; // 0x258
	FVector2D WorldOrigin2D; // 0x264
	float SyncAreaSize; // 0x26c
	int32_t SyncAreaDistance; // 0x270
	float SyncNodeSize; // 0x274
	int32_t SyncNodeDistance; // 0x278
	int32_t ClientNodeDistance; // 0x27c
	TArray<UBlueprint*> OverrideBuildingBP; // 0x280
	bool SkipBuilding; // 0x290
	bool SkipBuildingProps; // 0x291
	bool SkipWorldProps; // 0x292
	bool ShowIndestructible; // 0x293
	int32_t InstancedFoliageRequiredCount; // 0x294
	FCrowWorldSyncCameraInfo ClientCameraInfo; // 0x2a0
	bool IsWorldReadyToInitHub; // 0x310
	bool HubInitialized; // 0x311
	UStaticMeshComponent* SphereMesh; // 0x318
	UBoxComponent* BoundingBox; // 0x320
	FVector2D CachedCameraLocation2D; // 0x328
	int32_t CachedTileCount; // 0x330
	int32_t CachedTileInitCount; // 0x334
};

struct ACameraShakeSourceActor {
	UCameraShakeSourceComponent* CameraShakeSourceComponent; // 0x220
};

struct UDestructibleFractureSettings {
	int32_t CellSiteCount; // 0x28
	FFractureMaterial FractureMaterialDesc; // 0x2c
	int32_t RandomSeed; // 0x50
	TArray<FVector> VoronoiSites; // 0x58
	int32_t OriginalSubmeshCount; // 0x68
	TArray<UMaterialInterface*> Materials; // 0x70
	TArray<FDestructibleChunkParameters> ChunkParameters; // 0x80
};

struct UCrowZombieComponent {
	ACrowCharacterPawn* CharacterPawn; // 0xb0
	UCrowZombieEnergyGaugeWidget* EnergyGaugeWidget; // 0xb8
	UCrowLocalPostProcessComponent* PostProcessComp; // 0xc0
	FCrowZombieInfo ZombieInfo; // 0xd0
};

struct UMaterialExpressionLandscapeLayerBlend {
	TArray<FLayerBlendInput> Layers; // 0x40
	FGuid ExpressionGUID; // 0x50
};

struct UMaterialExpressionLandscapeLayerSwitch {
	FExpressionInput LayerUsed; // 0x40
	FExpressionInput LayerNotUsed; // 0x54
	FName ParameterName; // 0x68
	char PreviewUsed : 1; // 0x70
	FGuid ExpressionGUID; // 0x74
};

struct UWB_Scope_Type_02_C {
	UWidgetAnimation* Ani_Aim_3; // 0x370
	UWidgetAnimation* Ani_Shot3; // 0x378
	UWidgetAnimation* Ani_Shot4; // 0x380
	UWidgetAnimation* Ani_Shot; // 0x388
	UWidgetAnimation* Ani_Shot1; // 0x390
	UWidgetAnimation* Ani_Aim; // 0x398
	UImage* Image_98; // 0x3a0
};

struct ABP_Grenade_M26Ammo_C {
	USkeletalMeshComponent* SK_G67_02; // 0x18d0
	UParticleSystemComponent* DynamicRicochet_Trail_Generic_thin; // 0x18d8
};

struct UGridSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
	int32_t Row; // 0x4c
	int32_t RowSpan; // 0x50
	int32_t Column; // 0x54
	int32_t ColumnSpan; // 0x58
	int32_t Layer; // 0x5c
	FVector2D Nudge; // 0x60
};

struct UInterpFilter {
	FString Caption; // 0x28
};

struct UMovieSceneByteSection {
	FMovieSceneByteChannel ByteCurve; // 0xe8
};

struct UAkAssetBase {
	UAkAssetPlatformData* PlatformAssetData; // 0x40
};

struct UAnimCompress_RemoveTrivialKeys {
	float MaxPosDiff; // 0x40
	float MaxAngleDiff; // 0x44
	float MaxScaleDiff; // 0x48
};

struct UCrowDeathInfoWidget {
	UTextBlock* TB_Killer; // 0x348
	UCrowWidgetImage* IMG_RankIcon; // 0x350
	UCrowWidgetImage* IMG_Weapon; // 0x358
	UTextBlock* TB_WeaponName; // 0x360
	UCanvasPanel* CP_Squad; // 0x368
	UImage* IMG_SquadColor; // 0x370
	UTextBlock* TB_SquadNum; // 0x378
	FText UnknownID; // 0x380
};

struct UCrowDeconstructSlotWidget {
	UImage* IMG_Icon; // 0x348
	UImage* IMG_Selected; // 0x350
	UCrowButton* BT_Slot; // 0x358
	UWidgetSwitcher* WS_Grade; // 0x360
};

struct UMaterialExpressionLogarithm2 {
	FExpressionInput X; // 0x40
};

struct UCrowReplicationGraphNode_AlwaysRelevant_ForConnection {
	TArray<FAlwaysRelevantActorInfo> PastRelevantActors; // 0x298
};

struct UCompositeCurveTable {
	TArray<UCurveTable*> ParentTables; // 0xa0
	TArray<UCurveTable*> OldParentTables; // 0xb0
};

struct UCrowMissionSlotWidget {
	UWidgetSwitcher* WS_MissionProgress; // 0x348
	UTextBlock* TB_SlotName; // 0x350
	UTextBlock* TB_Count; // 0x358
	UTextBlock* TB_GoalCount; // 0x360
	UImage* IMG_Reward00; // 0x368
	UImage* IMG_Reward01; // 0x370
	UImage* IMG_Reward02; // 0x378
	UImage* IMG_Reward03; // 0x380
	UImage* IMG_Reward04; // 0x388
	UCrowButton* BT_SlotHover; // 0x390
	UImage* IMG_Blue; // 0x398
	UImage* IMG_BG; // 0x3a0
	UImage* IMG_Select; // 0x3a8
	TArray<UImage*> RewardImageArray; // 0x3b0
	FCrowMissionInfo MissionInfo; // 0x3c0
};

struct UParticleModuleTypeDataAnimTrail {
	char bDeadTrailsOnDeactivate : 1; // 0x30
	char bEnablePreviousTangentRecalculation : 1; // 0x30
	char bTangentRecalculationEveryFrame : 1; // 0x30
	float TilingDistance; // 0x34
	float DistanceTessellationStepSize; // 0x38
	float TangentTessellationStepSize; // 0x3c
	float WidthTessellationStepSize; // 0x40
};

struct UMaterialExpressionTemporalSobol {
	FExpressionInput Index; // 0x40
	FExpressionInput Seed; // 0x54
	uint32_t ConstIndex; // 0x68
	FVector2D ConstSeed; // 0x6c
};

struct UTextureRenderTarget2D {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	FLinearColor ClearColor; // 0xe8
	TextureAddress AddressX; // 0xf8
	TextureAddress AddressY; // 0xf9
	char bForceLinearGamma : 1; // 0xfa
	char bHDR : 1; // 0xfa
	char bGPUSharedFlag : 1; // 0xfa
	ETextureRenderTargetFormat RenderTargetFormat; // 0xfb
	char bAutoGenerateMips : 1; // 0xfc
	TextureFilter MipsSamplerFilter; // 0xfd
	TextureAddress MipsAddressU; // 0xfe
	TextureAddress MipsAddressV; // 0xff
	EPixelFormat OverrideFormat; // 0x100
};

struct UMaterialExpressionBreakMaterialAttributes {
	FMaterialAttributesInput MaterialAttributes; // 0x40
};

struct UAISense_Prediction {
	TArray<FAIPredictionEvent> RegisteredEvents; // 0x80
};

struct UAudioCurveSourceComponent {
	FName CurveSourceBindingName; // 0x868
	float CurveSyncOffset; // 0x870
};

struct UCrowCustomCursorBase {
	UAkAudioEvent* ClickSound; // 0x348
};

struct UInputKeySelector {
	FButtonStyle WidgetStyle; // 0x108
	FTextBlockStyle TextStyle; // 0x380
	FInputChord SelectedKey; // 0x5f0
	FSlateFontInfo Font; // 0x610
	FMargin Margin; // 0x668
	FLinearColor ColorAndOpacity; // 0x678
	FText KeySelectionText; // 0x688
	FText NoKeySpecifiedText; // 0x6a0
	bool bAllowModifierKeys; // 0x6b8
	bool bAllowGamepadKeys; // 0x6b9
	TArray<FKey> EscapeKeys; // 0x6c0
	FMulticastInlineDelegate OnKeySelected; // 0x6d0
	FMulticastInlineDelegate OnIsSelectingKeyChanged; // 0x6e0
};

struct UAkGameObject {
	UAkAudioEvent* AkAudioEvent; // 0x1f8
	FString EventName; // 0x200
};

struct UGameplayTasksComponent {
	char bIsNetDirty : 1; // 0xbc
	TArray<UGameplayTask*> SimulatedTasks; // 0xc0
	TArray<UGameplayTask*> TaskPriorityQueue; // 0xd0
	TArray<UGameplayTask*> TickingTasks; // 0xf0
	TArray<UGameplayTask*> KnownTasks; // 0x100
	FMulticastInlineDelegate OnClaimedResourcesChange; // 0x110
};

struct UCrowCustomizeItemListMiniWidget {
	UGridPanel* GD_ItemList; // 0x348
	ACrowSceneLobby* SceneLobby; // 0x350
	UCrowCategorySlotBigWidget* CurrentCategorySlotBigWidget; // 0x358
	bool NotSave; // 0x360
};

struct UBTDecorator_Cooldown {
	float CoolDownTime; // 0x68
};

struct UCrowMercenaryLevelTableManager {
	TMap<int32_t, FCrowMercenaryLevelTableRow> MercenaryLevelData; // 0x28
};

struct UPhysicsCollisionHandler {
	float ImpactThreshold; // 0x28
	float ImpactReFireDelay; // 0x2c
	USoundBase* DefaultImpactSound; // 0x30
	float LastImpactSoundTime; // 0x38
};

struct UMaterialExpressionVectorNoise {
	FExpressionInput position; // 0x40
	EVectorNoiseFunction NoiseFunction; // 0x54
	int32_t Quality; // 0x58
	char bTiling : 1; // 0x5c
	uint32_t TileSize; // 0x60
};

struct UCrowTankFreeSightComponent {
	bool IsReversePitchAxis; // 0x1f8
	float YawMultiplier; // 0x1fc
	float PitchMultiplier; // 0x200
	float MinPitch; // 0x204
	float MaxPitch; // 0x208
};

struct USkeleton {
	TArray<FBoneNode> BoneTree; // 0x38
	TArray<FTransform> RefLocalPoses; // 0x48
	FGuid VirtualBoneGuid; // 0x170
	TArray<FVirtualBone> VirtualBones; // 0x180
	TArray<USkeletalMeshSocket*> Sockets; // 0x190
	FSmartNameContainer SmartNames; // 0x1f0
	TArray<UBlendProfile*> BlendProfiles; // 0x270
	TArray<FAnimSlotGroup> SlotGroups; // 0x280
	TArray<UAssetUserData*> AssetUserData; // 0x358
};

struct ACrowConqeustChinookSpawner {
	float SpawnDelay; // 0x250
};

struct UCrowLoadoutInfoWidget {
	UCrowInvenWeaponInfoWidget* WB_WeaponInfo_Primary_2; // 0x348
	UCrowInvenWeaponInfoWidget* WB_WeaponInfo_Primary_3; // 0x350
	UCrowInvenWeaponInfoWidget* WB_WeaponInfo_Sub; // 0x358
	UCrowInvenWeaponListSubItemWidget* WB_SubWeapon_Slot1; // 0x360
	UCrowInvenWeaponListSubItemWidget* WB_SubWeapon_Slot2; // 0x368
	UCrowInvenWeaponListSubItemWidget* WB_SubWeapon_Slot3; // 0x370
	UCrowInvenWeaponListSubItemWidget* WB_SubWeapon_Slot4; // 0x378
	TArray<UCrowWeaponListItemBase*> WeaponWidgetList; // 0x380
};

struct UCrowZeroingWidget {
	UTextBlock* TB_Zeroing_Distance; // 0x348
	UCanvasPanel* CP_HoldBreath; // 0x350
	UCanvasPanel* CP_ZoomDistance; // 0x358
};

struct UCrowFriendsWidget {
	UCrowButton* BT_FriendSetting; // 0x348
	UCrowButton* BT_FriendExit; // 0x350
	UCrowButton* BT_FriendSearch; // 0x358
	UCrowFriendTabMenuWidget* WB_FriendTabMenu; // 0x360
	UWidgetSwitcher* WS_FriendTabList; // 0x368
	UScrollBox* SCB_Friend_List; // 0x370
	UScrollBox* SCB_Recent_List; // 0x378
	UScrollBox* SCB_Party_List; // 0x380
	UEditableTextBox* ETB_Search; // 0x388
	UTextBlock* TB_FriendOnLine; // 0x390
	UTextBlock* TB_FriendOnLine_Count; // 0x398
	UCrowToggleButton* BT_ToggleList_OnLine; // 0x3a0
	UScrollBox* SB_FriendSlotList_OnLine; // 0x3a8
	UTextBlock* TB_FriendOffLine; // 0x3b0
	UTextBlock* TB_FriendOffLine_Count; // 0x3b8
	UCrowToggleButton* BT_ToggleList_OffLine; // 0x3c0
	UScrollBox* SB_FriendSlotList_OffLine; // 0x3c8
	UWidgetSwitcher* WS_PromoteMode; // 0x3d0
	UCrowButton* BT_PartyExit; // 0x3d8
	UCrowButton* BT_PromoteCancel; // 0x3e0
	UCrowFriendSlotWidget* FriendSlotWidgetClass; // 0x3e8
	EFriendTabType CurrentTabType; // 0x3f0
	ACrowSceneLobby* SceneLobby; // 0x3f8
	bool PromoteMode; // 0x400
};

struct UWB_ClaymoreMine_Indicator_C {
	UWidgetAnimation* Ani_Active_In6m; // 0x378
	UWidgetAnimation* Ani_Active_Out6m; // 0x380
	UImage* IMG_LocateArrow; // 0x388
};

struct UParticleModuleMeshRotation {
	FRawDistributionVector StartRotation; // 0x30
	char bInheritParent : 1; // 0x78
};

struct UActorChannel {
	AActor* Actor; // 0x70
	TArray<UObject*> CreateSubObjects; // 0x160
};

struct UVectorFieldAnimated {
	UTexture2D* Texture; // 0x48
	EVectorFieldConstructionOp ConstructionOp; // 0x50
	int32_t VolumeSizeX; // 0x54
	int32_t VolumeSizeY; // 0x58
	int32_t VolumeSizeZ; // 0x5c
	int32_t SubImagesX; // 0x60
	int32_t SubImagesY; // 0x64
	int32_t FrameCount; // 0x68
	float FramesPerSecond; // 0x6c
	char bLoop : 1; // 0x70
	UVectorFieldStatic* NoiseField; // 0x78
	float NoiseScale; // 0x80
	float NoiseMax; // 0x84
};

struct UCrowReplicationGraph {
	TArray<UObject*> SpatializedClasses; // 0x498
	TArray<UObject*> NonSpatializedChildClasses; // 0x4a8
	TArray<UObject*> AlwaysRelevantClasses; // 0x4b8
	UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x4c8
	UReplicationGraphNode* PawnNode; // 0x4d0
	UReplicationGraphNode* AlwaysRelevantNode; // 0x4d8
	UCrowReplicationGraphNode_PlayerStateFrequencyLimiter* PlayerStateNode; // 0x4e0
};

struct ACrowWorldSplinePainterVolume {
	UBoxComponent* Volume; // 0x220
	FVector BoxExtent; // 0x228
	float RandomMin; // 0x234
	float RandomMax; // 0x238
	FCrowMeshPaintParameters PaintParameter; // 0x23c
	int32_t DebugTotalPoints; // 0x25c
	TArray<FVector> PaintedPosition; // 0x260
};

struct UAsyncActionLoadPrimaryAssetClassList {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UARTexture {
	EARTextureType TextureType; // 0xd8
	float Timestamp; // 0xdc
	FGuid ExternalTextureGuid; // 0xe0
	FVector2D Size; // 0xf0
};

struct UWB_Scope_Telescope_C {
	UWidgetAnimation* Ani_Aim_3; // 0x370
	UWidgetAnimation* Ani_Shot3; // 0x378
	UWidgetAnimation* Ani_Shot4; // 0x380
	UWidgetAnimation* Ani_Shot; // 0x388
	UWidgetAnimation* Ani_Shot1; // 0x390
	UWidgetAnimation* Ani_Aim; // 0x398
	UImage* Image_98; // 0x3a0
};

struct UAsyncActionLoadPrimaryAssetList {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UNiagaraDataInterfaceVelocityGrid {
	FIntVector GridSize; // 0xd8
};

struct ACrowProjectileThrow {
	float ExplosionTime; // 0x17d0
	FVector vAngularImpulse; // 0x17d4
	float WeightInKg; // 0x17e0
	float LinearDamping; // 0x17e4
	float AngularDamping; // 0x17e8
	UPhysicalMaterial* PhysicalMaterialOverride; // 0x17f0
	UCurveFloat* ThrowVelocityFactorCurve; // 0x17f8
	bool bIgnoreDestroyedExplosion; // 0x1800
	float WaterDampingFactor; // 0x1804
	UMatineeCameraShake* CameraShake; // 0x1808
	float CameraShakeMinDistance; // 0x1810
	float CameraShakeMaxDistance; // 0x1814
	bool IsShowExplosionWidget; // 0x1818
	UAkAudioEvent* LoopSound; // 0x1820
	UAkAudioEvent* EndSound; // 0x1828
	FCrowGameIconDisplayInfo IconDisplayInfoProjectileThrow; // 0x1830
	USceneComponent* IconLocation; // 0x18b8
	bool bIsRightClickAction; // 0x18c0
};

struct AOnlineBeaconHostObject {
	FString BeaconTypeName; // 0x220
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x230
	TArray<AOnlineBeaconClient*> ClientActors; // 0x238
};

struct ACrowSupplyWeaponActor {
	UBoxComponent* BoxComponent; // 0x220
	USceneComponent* IconLocation; // 0x228
	ECrowSupplyBoxType SupplyBoxType; // 0x230
	FCrowTestWeapon WeaponSetting; // 0x238
	UAkAudioEvent* UseSound; // 0x278
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x280
	UStaticMeshComponent* WeaponBoxStaticMeshComponent; // 0x308
	ACrowWeaponBase* SupplyWeapon; // 0x310
};

struct UCrowCharacterAnimator {
	UDataTable* CharacterAnimationTable; // 0xb0
	UAnimInstance* AI_Mesh3P; // 0xb8
	UAnimInstance* AI_Mesh1PLowBody; // 0xc0
	UAnimInstance* AI_Mesh1PArm; // 0xc8
	char bIsAnimInstanceInitialized : 1; // 0xd0
};

struct UPawnAction_Move {
	AActor* GoalActor; // 0x98
	FVector GoalLocation; // 0xa0
	float AcceptableRadius; // 0xac
	UNavigationQueryFilter* FilterClass; // 0xb0
	char bAllowStrafe : 1; // 0xb8
	char bFinishOnOverlap : 1; // 0xb8
	char bUsePathfinding : 1; // 0xb8
	char bAllowPartialPath : 1; // 0xb8
	char bProjectGoalToNavigation : 1; // 0xb8
	char bUpdatePathToGoal : 1; // 0xb8
	char bAbortChildActionOnPathChange : 1; // 0xb8
};

struct UCrowListItemVehicleSkin {
	UHorizontalBox* HB_ShopInfo; // 0x4e8
	UTextBlock* TB_Label_Back; // 0x4f0
	FCrowVehicleSkinTableRow VehicleSkinTable; // 0x4f8
	FCrowShopTableRow ShopTableData; // 0x6b0
	bool IsShopList; // 0x728
};

struct UCrowWorldMap {
	FVector2D WorldSize; // 0x384
	TArray<UCrowWorldMapIcon*> IconArray; // 0x390
	TMap<uint32_t, UCrowWidgetBase*> IconWidgetMap; // 0x3a0
	UCanvasPanel* CP_MapImage; // 0x3f0
	UCanvasPanel* CP_Location; // 0x3f8
	UCanvasPanel* CP_Grid; // 0x400
	UCanvasPanel* LinePanel; // 0x408
	UCanvasPanel* IconPanel; // 0x410
	UImage* IMG_Map; // 0x418
	UImage* IMG_Ping; // 0x420
	UImage* IMG_SupplyPing; // 0x428
	UCanvasPanel* CP_MapGridLangh; // 0x430
	UCanvasPanel* CP_MapGridLanghMeter; // 0x438
	UTextBlock* TB_GridSize; // 0x440
	UTextBlock* TB_GridSizeMeter; // 0x448
	UCanvasPanel* GasAreaPanel; // 0x450
	UCrowWorldMapGridWidget* GridKm; // 0x458
	UCrowWorldMapGridWidget* GridM; // 0x460
	UCrowWorldMapLocationWidget* GridLocation; // 0x468
	UCrowBomBardRouteWidget* WB_BombardRoute; // 0x470
	UImage* PanelSize; // 0x478
	UCrowConquestLineWidget* ConquestLineClass; // 0x480
	FVector2D LimitSize; // 0x488
	FVector2D MapStartPos; // 0x490
	EMapType MapType; // 0x498
	FLinearColor KMGridColor; // 0x49c
	FLinearColor MGridColor; // 0x4ac
	float MaxZoomMultiply; // 0x4bc
	float LerpsTime; // 0x4c0
	float ZoomSpeed; // 0x4c4
	FVector2D MapSizeDefault; // 0x4c8
	FVector2D MapSizeCurrent; // 0x4d0
	FVector2D MapSizeMax; // 0x4d8
	TArray<float> ArrayZoomMultiply; // 0x4e0
	TArray<float> ArrayWorldMapZoomMultiply; // 0x4f0
	TArray<float> ArrayMinimapZoomMultiply; // 0x500
	FVector2D ScreenSize; // 0x510
	FVector2D ZoomPosition; // 0x518
	FVector2D SelectMouseMapPos; // 0x520
	FVector2D CurrentMouseMapPos; // 0x528
	FVector2D StartBombingPos; // 0x530
	FVector SelectMouseWorldPos; // 0x538
	bool bIsCheckMapReady; // 0x544
	bool bIsObjectReady; // 0x545
	UCanvasPanelSlot* ClipingPanelSlot; // 0x548
	UCanvasPanelSlot* LocationPanelSlot; // 0x550
	UCanvasPanelSlot* GridLenthPanelSlot; // 0x558
	UCanvasPanelSlot* GridLenthPanelSlotMeter; // 0x560
	UCrowConquestLineLink* ConquestLineLink; // 0x568
	float PrevMagnification; // 0x570
	float Magnification; // 0x574
	float MaxMagnification; // 0x578
	float CurrentTime; // 0x57c
	float PivotTime; // 0x580
	int32_t CurrentZoomIndex; // 0x584
	bool IsEnableIconScale; // 0x588
	FVector TopLeftPos; // 0x58c
	FVector BottomRightPos; // 0x598
	FVector CharacterPosAddValue; // 0x5a4
	FVector2D BombingAreaSize; // 0x5b0
	bool bIsEnableZoom; // 0x5b8
	float GridScale; // 0x5bc
	FVector2D SelectPivot; // 0x5c0
	bool bIsMoving; // 0x5cb
	FVector2D OriginMousePos; // 0x5cc
	FVector2D OriginMapPos; // 0x5d4
	FVector2D PrevMapPos; // 0x5dc
	FVector BombingTopLeft; // 0x5e4
	FVector BombingBottomRight; // 0x5f0
	FVector2D SupplyPingPivot; // 0x5fc
	FVector2D BombingPivot; // 0x604
	float SupplySpawnDistance; // 0x60c
};

struct UScrollBarWidgetStyle {
	FScrollBarStyle ScrollBarStyle; // 0x30
};

struct ALightmassPortal {
	ULightmassPortalComponent* PortalComponent; // 0x220
};

struct USourceEffectMidSideSpreaderPreset {
	FSourceEffectMidSideSpreaderSettings Settings; // 0x98
};

struct UInputSettings {
	TArray<FInputAxisConfigEntry> AxisConfig; // 0x28
	char bAltEnterTogglesFullscreen : 1; // 0x38
	char bF11TogglesFullscreen : 1; // 0x38
	char bUseMouseForTouch : 1; // 0x38
	char bEnableMouseSmoothing : 1; // 0x38
	char bEnableFOVScaling : 1; // 0x38
	char bCaptureMouseOnLaunch : 1; // 0x38
	char bDefaultViewportMouseLock : 1; // 0x38
	char bAlwaysShowTouchInterface : 1; // 0x38
	char bShowConsoleOnFourFingerTap : 1; // 0x39
	char bEnableGestureRecognizer : 1; // 0x39
	bool bUseAutocorrect; // 0x3a
	TArray<FString> ExcludedAutocorrectOS; // 0x40
	TArray<FString> ExcludedAutocorrectCultures; // 0x50
	TArray<FString> ExcludedAutocorrectDeviceModels; // 0x60
	EMouseCaptureMode DefaultViewportMouseCaptureMode; // 0x70
	EMouseLockMode DefaultViewportMouseLockMode; // 0x71
	float FOVScale; // 0x74
	float DoubleClickTime; // 0x78
	TArray<FInputActionKeyMapping> ActionMappings; // 0x80
	TArray<FInputAxisKeyMapping> AxisMappings; // 0x90
	TArray<FInputActionSpeechMapping> SpeechMappings; // 0xa0
	TSoftClassPtr<UObject> DefaultPlayerInputClass; // 0xb0
	TSoftClassPtr<UObject> DefaultInputComponentClass; // 0xd8
	FSoftObjectPath DefaultTouchInterface; // 0x100
	FKey ConsoleKey; // 0x118
	TArray<FKey> ConsoleKeys; // 0x130
};

struct UCrowSquadPointRewardItemWidget {
	UTextBlock* TB_GoalCount; // 0x348
	UImage* IMG_Bar; // 0x350
	UImage* IMG_BG; // 0x358
	UImage* IMG_Icon_Item; // 0x360
	UImage* IMG_Icon_Loadout; // 0x368
	UImage* IMG_Icon_Vehicle; // 0x370
	UWidgetSwitcher* WS_RewardType; // 0x378
};

struct ACrowLobbyObjectBider {
	TArray<AActor*> CharacterCustomActors; // 0x220
	TArray<AActor*> VehicleCustomActors; // 0x230
	TArray<AActor*> SprayCustomActors; // 0x240
	AActor* CharacterCustom_Camera; // 0x250
	AActor* CharacterEmotion_Camera; // 0x258
	AActor* CharacterAppearance_Camera; // 0x260
	AActor* CharacterrTattooArm_Camera; // 0x268
	AActor* CharacterCustom_SpawnPoint; // 0x270
	AActor* CharacterPreview_Camera; // 0x278
	AActor* Loadout_Camera; // 0x280
	AActor* WeaponLocation_Primary; // 0x288
	AActor* WeaponLocation_Secondary; // 0x290
	AActor* WeaponLocation_Melee; // 0x298
	AActor* WeaponLocation_Throw1; // 0x2a0
	AActor* WeaponLocation_Throw2; // 0x2a8
	AActor* VehicleSkin_RootActor; // 0x2b0
	ACrowVehicleSpawner* VehicleSkin_Spawner; // 0x2b8
	ACameraActor* VehicleSkin_Camera_Near; // 0x2c0
	ACameraActor* VehicleSkin_Camera_Far; // 0x2c8
	ACameraActor* VehicleSkinPreview_Camera_Near; // 0x2d0
	ACameraActor* VehicleSkinPreview_Camera_Far; // 0x2d8
	AActor* ParachuteSkin_RootActor; // 0x2e0
	ACrowSkydivingSpawner* ParachuteSkin_Spawner; // 0x2e8
	AActor* SprayCustom_Camera; // 0x2f0
	AActor* SprayCustom_SpawnPoint; // 0x2f8
	AActor* CameraCharacter_Eye; // 0x300
	AActor* CameraCharacter_Upper; // 0x308
	AActor* CameraCharacter_Lower; // 0x310
	float CameraChangingTime; // 0x318
	bool UseCustomCharacterRotation; // 0x31c
	float CustomCharacterRotationSpeed; // 0x320
	UAnimMontage* Rotation_LeftAnimations; // 0x328
	UAnimMontage* Rotation_RightAnimations; // 0x330
};

struct UPhysicalMaterialMask {
	int32_t UVChannelIndex; // 0x28
	TextureAddress AddressX; // 0x2c
	TextureAddress AddressY; // 0x2d
};

struct UComponentDelegateBinding {
	TArray<FBlueprintComponentDelegateBinding> ComponentDelegateBindings; // 0x28
};

struct UEnvQueryTest_Overlap {
	FEnvOverlapData OverlapData; // 0x1f8
};

struct UCombineMeshesTool {
	UCombineMeshesToolProperties* BasicProperties; // 0x90
	UOnAcceptHandleSourcesProperties* HandleSourceProperties; // 0x98
};

struct UFixedPlaneBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct UCrowRotorConfigHeli {
	FCrowRotorBodySetting Setting; // 0x28
	FCrowRotorBodySetting Setting_Accel; // 0xc8
};

struct UCrowCharacterAimComponent {
	UCrowWeaponPartsPrimarySight* PrimarySightPart; // 0x108
	UCrowWeaponPartsPrimarySight* SecondarySightPart; // 0x110
	UCrowWeaponPartsPrimarySight* CurrentSightPart; // 0x118
	UCrowWeaponZoomWidget* ZoomWidget; // 0x120
	UCrowLocalPostProcessComponent* PostProcessComp; // 0x128
	FTransform WeaponRootTransform; // 0x130
	ACrowCharacterPawn* CharacterPawn; // 0x160
	UCurveFloat* AimCurveX; // 0x168
	UCurveFloat* AimCurveY; // 0x170
	UCrowDOFComponent* DOFComponent; // 0x178
	TArray<FCrowAimEvent> AimEventArray; // 0x180
};

struct AMatineeActor {
	UInterpData* MatineeData; // 0x220
	FName MatineeControllerName; // 0x228
	float PlayRate; // 0x230
	char bPlayOnLevelLoad : 1; // 0x234
	char bForceStartPos : 1; // 0x234
	float ForceStartPosition; // 0x238
	char bLooping : 1; // 0x23c
	char bRewindOnPlay : 1; // 0x23c
	char bNoResetOnRewind : 1; // 0x23c
	char bRewindIfAlreadyPlaying : 1; // 0x23c
	char bDisableRadioFilter : 1; // 0x23c
	char bClientSideOnly : 1; // 0x23c
	char bSkipUpdateIfNotVisible : 1; // 0x23c
	char bIsSkippable : 1; // 0x23c
	int32_t PreferredSplitScreenNum; // 0x240
	char bDisableMovementInput : 1; // 0x244
	char bDisableLookAtInput : 1; // 0x244
	char bHidePlayer : 1; // 0x244
	char bHideHud : 1; // 0x244
	TArray<FInterpGroupActorInfo> GroupActorInfos; // 0x248
	char bShouldShowGore : 1; // 0x258
	TArray<UInterpGroupInst*> GroupInst; // 0x260
	TArray<FCameraCutInfo> CameraCuts; // 0x270
	char bIsPlaying : 1; // 0x280
	char bReversePlayback : 1; // 0x280
	char bPaused : 1; // 0x280
	char bPendingStop : 1; // 0x280
	float InterpPosition; // 0x284
	char ReplicationForceIsPlaying; // 0x28c
	FMulticastInlineDelegate OnPlay; // 0x290
	FMulticastInlineDelegate OnStop; // 0x2a0
	FMulticastInlineDelegate OnPause; // 0x2b0
};

struct UProxyLODMeshSimplificationSettings {
	FName ProxyLODMeshReductionModuleName; // 0x38
};

struct UCrowSettingsSlotSelectionWidget {
	TArray<FString> SelectionDatas; // 0x348
	int32_t SelectedIndex; // 0x358
	UCrowButton* BT_Prev; // 0x360
	UCrowButton* BT_Next; // 0x368
	UTextBlock* TB_SelectedItem; // 0x370
	UCrowSettingsSlotWidget* OwnerSlot; // 0x378
};

struct USpectatorBeaconState {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	bool bRestrictCrossConsole; // 0x38
	TArray<FSpectatorReservation> Reservations; // 0x40
};

struct UAnimBlueprintGeneratedClass {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x330
	USkeleton* TargetSkeleton; // 0x340
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x348
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x358
	TArray<FName> SyncGroupNames; // 0x428
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x438
	TMap<FName, FGraphAssetPlayerInformation> GraphAssetPlayerInformation; // 0x448
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x498
	FPropertyAccessLibrary PropertyAccessLibrary; // 0x4e8
};

struct UCrowMapSelectButtonWidget {
	UImage* IMG_Map; // 0x348
	UTextBlock* TB_MapName; // 0x350
	UTextBlock* TB_MapName_Select; // 0x358
	UCrowToggleButton* CTB_Mod_MapSelect; // 0x360
	UCanvasPanel* CP_Lock; // 0x368
	UCrowToggleButton* CTB_CheckBox; // 0x370
	FCrowSceneTableRow SceneTableRow; // 0x398
};

struct UCrowWeaponCrosshairBase {
	FLinearColor CrosshairColor; // 0x350
};

struct ALandscapeStreamingProxy {
	LazyObjectProperty LandscapeActor; // 0x598
};

struct UNavCollision {
	TArray<FNavCollisionCylinder> CylinderCollision; // 0x80
	TArray<FNavCollisionBox> BoxCollision; // 0x90
	UNavArea* AreaClass; // 0xa0
	char bGatherConvexGeometry : 1; // 0xa8
	char bCreateOnClient : 1; // 0xa8
};

struct AOnlineBeacon {
	float BeaconConnectionInitialTimeout; // 0x228
	float BeaconConnectionTimeout; // 0x22c
	UNetDriver* NetDriver; // 0x230
};

struct ACrowDoorActor {
	UStaticMeshComponent* Mesh; // 0x220
	bool Play; // 0x228
	bool Closed; // 0x229
	float ElapsedTime; // 0x22c
	float TotalAnimationTime; // 0x230
	FRotator StartRotator; // 0x234
	FRotator EndRotator; // 0x240
};

struct UWB_Scope_LockOn_C {
	UWidgetAnimation* Ani_Aim_3; // 0x3f8
	UWidgetAnimation* Ani_Shot3; // 0x400
	UWidgetAnimation* Ani_Shot4; // 0x408
	UWidgetAnimation* Ani_Shot; // 0x410
	UWidgetAnimation* Ani_Shot1; // 0x418
	UWidgetAnimation* Ani_Aim; // 0x420
	UImage* IMG_Area_2; // 0x428
	UImage* IMG_Bottom; // 0x430
	UImage* IMG_Bottom_2; // 0x438
	UImage* IMG_CornerBL; // 0x440
	UImage* IMG_CornerBL_2; // 0x448
	UImage* IMG_CornerBR; // 0x450
	UImage* IMG_CornerBR_2; // 0x458
	UImage* IMG_CornerTL; // 0x460
	UImage* IMG_CornerTL_2; // 0x468
	UImage* IMG_CornerTR; // 0x470
	UImage* IMG_CornerTR_2; // 0x478
	UImage* IMG_FilterColor; // 0x480
	UImage* IMG_FilterEffect; // 0x488
	UImage* IMG_Left; // 0x490
	UImage* IMG_Left_2; // 0x498
	UImage* IMG_Right; // 0x4a0
	UImage* IMG_Right_2; // 0x4a8
	UImage* IMG_Top; // 0x4b0
	UImage* IMG_Top_2; // 0x4b8
};

struct UAkLinuxInitializationSettings {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkAdvancedInitializationSettingsWithMultiCoreRendering AdvancedSettings; // 0xb8
};

struct UCrowGradeInfoPopupWidget {
	UCrowWidgetImage* IMG_Rank_Now; // 0x348
	UTextBlock* TB_Rank_Now; // 0x350
	UCrowWidgetImage* IMG_Rank_After; // 0x358
	UTextBlock* TB_Rank_After; // 0x360
	UCrowProgressBar* PB_Level; // 0x368
	UTextBlock* TB_Level; // 0x370
	UScrollBox* SB_Record_GradeListSlot_List; // 0x378
	UCrowButton* BT_Close; // 0x380
	UCrowGradeInfoPopupSlotWidget* SlotWidgetClass; // 0x388
};

struct UCrowSquadLoadoutSlotGadgetWidget {
	UCrowButton* BT_LoadoutSlot; // 0x358
	UTextBlock* TB_ItemName; // 0x360
	UTextBlock* TB_ItemCount; // 0x368
	UImage* IMG_ItemIcon; // 0x370
	UImage* IMG_Selected; // 0x378
	UImage* IMG_Equiped; // 0x380
	UTextBlock* TBItemName_Sel; // 0x388
	bool Selected; // 0x390
	bool Equiped; // 0x391
	FCrowSquadWeapon SquadWeapon; // 0x394
	FCrowWeaponData WeaponData; // 0x3a0
};

struct APainCausingVolume {
	char bPainCausing : 1; // 0x268
	float DamagePerSec; // 0x26c
	UDamageType* DamageType; // 0x270
	float PainInterval; // 0x278
	char bEntryPain : 1; // 0x27c
	char BACKUP_bPainCausing : 1; // 0x27c
	AController* DamageInstigator; // 0x280
};

struct USynthComponentMoto {
	UMotoSynthPreset* MotoSynthPreset; // 0x6c0
	float RPM; // 0x6c8
};

struct UCrowVehicleFacadeHeli {
	int32_t RotorType; // 0xe0
	UCrowVehicleMovementRotor* VehicleMovement; // 0xe8
	FRotator LastActorRotation; // 0xf0
};

struct APawn {
	char bUseControllerRotationPitch : 1; // 0x228
	char bUseControllerRotationYaw : 1; // 0x228
	char bUseControllerRotationRoll : 1; // 0x228
	char bCanAffectNavigationGeneration : 1; // 0x228
	float BaseEyeHeight; // 0x22c
	EAutoReceiveInput AutoPossessPlayer; // 0x230
	EAutoPossessAI AutoPossessAI; // 0x231
	char RemoteViewPitch; // 0x232
	AController* AIControllerClass; // 0x238
	APlayerState* PlayerState; // 0x240
	AController* LastHitBy; // 0x250
	AController* Controller; // 0x258
	FVector ControlInputVector; // 0x264
	FVector LastControlInputVector; // 0x270
};

struct UNiagaraDataInterfaceArray {
	int32_t MaxElements; // 0x40
};

struct ABP_LockOnRocket_C {
	USkeletalMeshComponent* M4_Projectile_Root; // 0x18d0
};

struct UWB_SystemMessageBox_C {
	UImage* Image; // 0x368
	UImage* Image_1; // 0x370
};

struct UMagicLeapARPinSaveGame {
	FGuid PinnedID; // 0x28
	FTransform ComponentWorldTransform; // 0x40
	FTransform PinTransform; // 0x70
	bool bShouldPinActor; // 0xa0
};

struct UEnvQueryOption {
	UEnvQueryGenerator* Generator; // 0x28
	TArray<UEnvQueryTest*> Tests; // 0x30
};

struct UCrowWeaponPartsUnderBarrel {
	FCrowWeaponPartsUnderBarrelTableRow PartsTable; // 0x320
	FCrowWeaponPartsUnderBarrelTableRow DefaultPartsData; // 0x628
};

struct UCheckBox {
	ECheckBoxState CheckedState; // 0x120
	FDelegate CheckedStateDelegate; // 0x124
	FCheckBoxStyle WidgetStyle; // 0x138
	USlateWidgetStyleAsset* Style; // 0x6b8
	USlateBrushAsset* UncheckedImage; // 0x6c0
	USlateBrushAsset* UncheckedHoveredImage; // 0x6c8
	USlateBrushAsset* UncheckedPressedImage; // 0x6d0
	USlateBrushAsset* CheckedImage; // 0x6d8
	USlateBrushAsset* CheckedHoveredImage; // 0x6e0
	USlateBrushAsset* CheckedPressedImage; // 0x6e8
	USlateBrushAsset* UndeterminedImage; // 0x6f0
	USlateBrushAsset* UndeterminedHoveredImage; // 0x6f8
	USlateBrushAsset* UndeterminedPressedImage; // 0x700
	EHorizontalAlignment HorizontalAlignment; // 0x708
	FMargin Padding; // 0x70c
	FSlateColor BorderBackgroundColor; // 0x720
	EButtonClickMethod ClickMethod; // 0x748
	EButtonTouchMethod TouchMethod; // 0x749
	EButtonPressMethod PressMethod; // 0x74a
	bool IsFocusable; // 0x74b
	FMulticastInlineDelegate OnCheckStateChanged; // 0x750
};

struct ANavSystemConfigOverride {
	UNavigationSystemConfig* NavigationSystemConfig; // 0x220
	ENavSystemOverridePolicy OverridePolicy; // 0x228
	char bLoadOnClient : 1; // 0x229
};

struct UCurveControlPointsMechanic {
	USingleClickInputBehavior* ClickBehavior; // 0x40
	UMouseHoverBehavior* HoverBehavior; // 0x48
	APreviewGeometryActor* PreviewGeometryActor; // 0x4e8
	UPointSetComponent* DrawnControlPoints; // 0x4f0
	ULineSetComponent* DrawnControlSegments; // 0x4f8
	UPointSetComponent* PreviewPoint; // 0x500
	ULineSetComponent* PreviewSegment; // 0x508
	UTransformProxy* PointTransformProxy; // 0x588
	UTransformGizmo* PointTransformGizmo; // 0x590
};

struct UTexture {
	FGuid LightingGuid; // 0x68
	int32_t LODBias; // 0x78
	TextureCompressionSettings CompressionSettings; // 0x7c
	TextureFilter Filter; // 0x7d
	ETextureMipLoadOptions MipLoadOptions; // 0x7e
	TextureGroup LODGroup; // 0x7f
	FPerPlatformFloat Downscale; // 0x80
	ETextureDownscaleOptions DownscaleOptions; // 0x84
	char SRGB : 1; // 0x85
	char bNoTiling : 1; // 0x85
	char VirtualTextureStreaming : 1; // 0x85
	char CompressionYCoCg : 1; // 0x85
	char bNotOfflineProcessed : 1; // 0x85
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x85
	TArray<UAssetUserData*> AssetUserData; // 0x88
};

struct UMeshSculptToolBase {
	USculptBrushProperties* BrushProperties; // 0xc0
	UWorkPlaneProperties* GizmoProperties; // 0xc8
	TMap<int32_t, UMeshSculptBrushOpProps*> BrushOpPropSets; // 0x1b0
	TMap<int32_t, UMeshSculptBrushOpProps*> SecondaryBrushOpPropSets; // 0x250
	UMeshEditingViewProperties* ViewProperties; // 0x870
	UMaterialInstanceDynamic* ActiveOverrideMaterial; // 0x878
	UBrushStampIndicator* BrushIndicator; // 0x880
	UMaterialInstanceDynamic* BrushIndicatorMaterial; // 0x888
	UPreviewMesh* BrushIndicatorMesh; // 0x890
	UTransformGizmo* PlaneTransformGizmo; // 0x898
	UTransformProxy* PlaneTransformProxy; // 0x8a0
};

struct ACrowPickupInventory {
	TArray<ACrowItemBase*> PickupInvenItemList; // 0x220
	FString PlayerNickName; // 0x230
	ECrowPickupInventoryState InvenState; // 0x240
	float RemainTime; // 0x244
	float BaseLimitTime; // 0x248
	bool bIsWorldSpawned; // 0x24c
	UBoxComponent* BoxComponent; // 0x250
	TArray<UMeshComponent*> MeshComponent; // 0x258
	TArray<UMaterialInstanceDynamic*> DynamicMaterialArray; // 0x268
	ACrowItemSpawner* OwnerSpawner; // 0x278
	float CorpseLootBoxLimitTime; // 0x280
	float CorpseLootBoxDelayTime; // 0x284
	float CorpseLootBoxFadeTime; // 0x288
	ACrowCharacterPawn* InvenUser; // 0x290
};

struct AUPSPatrolPoint {
	UBillboardComponent* BillboardComponent; // 0x228
	FPatrolPointSettings PatrolPointSettings; // 0x230
	UArrowComponent* ArrowComponent; // 0x270
	TArray<FPatrolPointLink> PatrolPointLinks; // 0x278
	TArray<FPatrolPointLink> BackwardPatrolPointLinks; // 0x288
	TArray<FPatrolPointLink> CachedPatrolPointLinks; // 0x298
};

struct UCheatManager {
	ADebugCameraController* DebugCameraControllerRef; // 0x28
	ADebugCameraController* DebugCameraControllerClass; // 0x30
};

struct ULoudnessNRT {
	ULoudnessNRTSettings* Settings; // 0x78
};

struct UExpandableArea {
	FExpandableAreaStyle Style; // 0x110
	FSlateBrush BorderBrush; // 0x230
	FSlateColor BorderColor; // 0x2b8
	bool bIsExpanded; // 0x2e0
	float MaxHeight; // 0x2e4
	FMargin HeaderPadding; // 0x2e8
	FMargin AreaPadding; // 0x2f8
	FMulticastInlineDelegate OnExpansionChanged; // 0x308
	UWidget* HeaderContent; // 0x318
	UWidget* BodyContent; // 0x320
};

struct UCrowLobbyShopPopupWidget {
	UCrowShoppingBagWidget* WB_Shop_Popup_ExclusivePurchase_Quick; // 0x348
	UCrowShopPurchasePopup* WB_Shop_Popup_ExclusivePurchase; // 0x350
};

struct UAISystemBase {
	FSoftClassPath AISystemClassName; // 0x28
	FName AISystemModuleName; // 0x40
	bool bInstantiateAISystemOnClient; // 0x50
};

struct UCrowZombieHealWidget {
	UWidgetAnimation* AniHeal; // 0x348
};

struct UMaterialExpressionSaturate {
	FExpressionInput Input; // 0x40
};

struct ACrowGameplayStarter {
	float Radius; // 0x220
	TArray<FString> SkipSubLevels; // 0x228
	TSet<FString> ExceptLayers; // 0x238
	USphereComponent* Sphere; // 0x288
	UStaticMeshComponent* SphereMesh; // 0x290
	bool bPlayAllLevels; // 0x298
	TSet<FString> CollectedLevelNames; // 0x2a0
};

struct UAIPerceptionSystem {
	TArray<UAISense*> Senses; // 0x88
	float PerceptionAgingRate; // 0x98
};

struct UParticleEmitter {
	FName EmitterName; // 0x28
	int32_t SubUVDataOffset; // 0x30
	EEmitterRenderMode EmitterRenderMode; // 0x34
	EParticleSignificanceLevel SignificanceLevel; // 0x35
	char bUseLegacySpawningBehavior : 1; // 0x37
	char ConvertedModules : 1; // 0x37
	char bIsSoloing : 1; // 0x37
	char bCookedOut : 1; // 0x37
	char bDisabledLODsKeepEmitterAlive : 1; // 0x37
	char bDisableWhenInsignficant : 1; // 0x38
	TArray<UParticleLODLevel*> LODLevels; // 0x40
	int32_t PeakActiveParticles; // 0x50
	int32_t InitialAllocationCount; // 0x54
	float QualityLevelSpawnRateScale; // 0x58
	uint32_t DetailModeBitmask; // 0x5c
};

struct UAISenseEvent_Damage {
	FAIDamageEvent Event; // 0x28
};

struct UFoliageType {
	FGuid UpdateGuid; // 0x28
	float Density; // 0x38
	float DensityAdjustmentFactor; // 0x3c
	float Radius; // 0x40
	bool bSingleInstanceModeOverrideRadius; // 0x44
	float SingleInstanceModeRadius; // 0x48
	EFoliageScaling Scaling; // 0x4c
	FFloatInterval ScaleX; // 0x50
	FFloatInterval ScaleY; // 0x58
	FFloatInterval ScaleZ; // 0x60
	FFoliageVertexColorChannelMask VertexColorMaskByChannel[0x4]; // 0x68
	FoliageVertexColorMask VertexColorMask; // 0x98
	float VertexColorMaskThreshold; // 0x9c
	char VertexColorMaskInvert : 1; // 0xa0
	FFloatInterval ZOffset; // 0xa4
	char AlignToNormal : 1; // 0xac
	float AlignMaxAngle; // 0xb0
	char RandomYaw : 1; // 0xb4
	float RandomPitchAngle; // 0xb8
	FFloatInterval GroundSlopeAngle; // 0xbc
	FFloatInterval Height; // 0xc4
	TArray<FName> LandscapeLayers; // 0xd0
	float MinimumLayerWeight; // 0xe0
	TArray<FName> ExclusionLandscapeLayers; // 0xe8
	float MinimumExclusionLayerWeight; // 0xf8
	FName LandscapeLayer; // 0xfc
	char CollisionWithWorld : 1; // 0x104
	FVector CollisionScale; // 0x108
	FBoxSphereBounds MeshBounds; // 0x114
	FVector LowBoundOriginRadius; // 0x130
	EComponentMobility Mobility; // 0x13c
	FInt32Interval CullDistance; // 0x140
	char bEnableStaticLighting : 1; // 0x148
	char CastShadow : 1; // 0x148
	char bAffectDynamicIndirectLighting : 1; // 0x148
	char bAffectDistanceFieldLighting : 1; // 0x148
	char bCastDynamicShadow : 1; // 0x148
	char bCastStaticShadow : 1; // 0x148
	char bCastShadowAsTwoSided : 1; // 0x148
	char bReceivesDecals : 1; // 0x148
	char bOverrideLightMapRes : 1; // 0x149
	int32_t OverriddenLightMapRes; // 0x14c
	ELightmapType LightmapType; // 0x150
	char bUseAsOccluder : 1; // 0x154
	FBodyInstance BodyInstance; // 0x158
	EHasCustomNavigableGeometry CustomNavigableGeometry; // 0x2b0
	FLightingChannels LightingChannels; // 0x2b1
	char bRenderCustomDepth : 1; // 0x2b4
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x2b8
	int32_t CustomDepthStencilValue; // 0x2bc
	int32_t TranslucencySortPriority; // 0x2c0
	float CollisionRadius; // 0x2c4
	float ShadeRadius; // 0x2c8
	int32_t NumSteps; // 0x2cc
	float InitialSeedDensity; // 0x2d0
	float AverageSpreadDistance; // 0x2d4
	float SpreadVariance; // 0x2d8
	int32_t SeedsPerStep; // 0x2dc
	int32_t DistributionSeed; // 0x2e0
	float MaxInitialSeedOffset; // 0x2e4
	bool bCanGrowInShade; // 0x2e8
	bool bSpawnsInShade; // 0x2e9
	float MaxInitialAge; // 0x2ec
	float MaxAge; // 0x2f0
	float OverlapPriority; // 0x2f4
	FFloatInterval ProceduralScale; // 0x2f8
	FRuntimeFloatCurve ScaleCurve; // 0x300
	int32_t ChangeCount; // 0x388
	char ReapplyDensity : 1; // 0x38c
	char ReapplyRadius : 1; // 0x38c
	char ReapplyAlignToNormal : 1; // 0x38c
	char ReapplyRandomYaw : 1; // 0x38c
	char ReapplyScaling : 1; // 0x38c
	char ReapplyScaleX : 1; // 0x38c
	char ReapplyScaleY : 1; // 0x38c
	char ReapplyScaleZ : 1; // 0x38c
	char ReapplyRandomPitchAngle : 1; // 0x38d
	char ReapplyGroundSlope : 1; // 0x38d
	char ReapplyHeight : 1; // 0x38d
	char ReapplyLandscapeLayers : 1; // 0x38d
	char ReapplyZOffset : 1; // 0x38d
	char ReapplyCollisionWithWorld : 1; // 0x38d
	char ReapplyVertexColorMask : 1; // 0x38d
	char bEnableDensityScaling : 1; // 0x38d
	char bEnableDiscardOnLoad : 1; // 0x38e
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x390
	int32_t VirtualTextureCullMips; // 0x3a0
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x3a4
};

struct UMaterialExpressionConstantBiasScale {
	FExpressionInput Input; // 0x40
	float Bias; // 0x54
	float Scale; // 0x58
};

struct UCrowResultWeaponPartsSlotWidget {
	UImage* IMG_WeaponParts; // 0x348
	UTextBlock* TB_WeaponPartsName; // 0x350
	UWidgetAnimation* AniShow; // 0x358
};

struct UCrowTriggerCommandEnterVehicle {
	FTimerHandle WaitAnimHandle; // 0xc0
	ACrowVehiclePawn* VehiclePawn; // 0xc8
	ACrowCharacterPawn* CharacterPawn; // 0xd0
};

struct URemoveOccludedTrianglesOperatorFactory {
	URemoveOccludedTrianglesTool* Tool; // 0x30
};

struct UCrowVehicleWidgetSeatVisual {
	UImage* IMG_Vehicle_Base; // 0x398
	TArray<UImage*> TireList; // 0x3a0
	UWidgetAnimation* LowHPAnim; // 0x3b0
};

struct ACrowWeaponVehicle {
	bool bInitializeVehicleInfo; // 0x1e10
	UCrowWeaponAnimGatling* WeaponAnimGatlingComponent; // 0x1e18
	ACrowVehiclePawn* VehicleOwner; // 0x1e20
	UCrowVehicleParam* VehicleParam; // 0x1e28
	ACrowCharacterPawn* CharacterOwner; // 0x1e30
	FCrowWeaponVehicleTableRow WeaponVehicleTable; // 0x1e40
	char SpringArmId; // 0x3150
	float TurnAlpha; // 0x3154
	UAudioComponent* BarrelMoveAC; // 0x3158
	float BarrelMoveVolume; // 0x3160
	UAkComponent* AkComponent; // 0x3168
	FRotator BarrelViewPoint; // 0x3170
	FRotator IntervalBetweenViewToBarrel; // 0x317c
	FRotator BarrelForward; // 0x3188
	float BarrelLerpSpeed; // 0x3194
	TArray<AActor*> IgnoredActorList; // 0x3198
	FRotator StartBarrelViewPoint; // 0x31a8
	FRotator EndBarrelViewPoint; // 0x31b4
	float BarrelViewPointAlpha; // 0x31c0
	FRotator StartAddedInputRotation; // 0x31c4
	FRotator EndAddedInputRotation; // 0x31d0
	float AddedInputAlpha; // 0x31dc
	float IncAddedInputAlpha; // 0x31e0
};

struct UCrowWorldMapWidget {
	UCrowWorldMap* WB_Map; // 0x368
	UCanvasPanel* CP_HotKey; // 0x370
	UCanvasPanel* CP_Legend_Training; // 0x378
	UCanvasPanel* CP_Legend_SquadMatch; // 0x380
	UCanvasPanel* CP_Legend_Conquest; // 0x388
	UCanvasPanel* CP_SkillTitle_UAVPatrol; // 0x390
	UCanvasPanel* CP_SkillTitle_HeavyStrike; // 0x398
	UCanvasPanel* CP_SkillControl; // 0x3a0
	UCanvasPanel* CP_SkillControl_UAVPatrol; // 0x3a8
	UCanvasPanel* CP_SkillControl_HeavyStrike; // 0x3b0
	UImage* IMG_Key_CancelStrike; // 0x3b8
	UImage* IMG_Key_CancelPatrol; // 0x3c0
	UButton* BTN_PIE_Exit; // 0x3c8
};

struct AWindDirectionalSource {
	UWindDirectionalSourceComponent* Component; // 0x220
};

struct UAIPerceptionStimuliSourceComponent {
	char bAutoRegisterAsSource : 1; // 0xb0
	TArray<UAISense*> RegisterAsSourceForSenses; // 0xb8
};

struct UCrowKillFeedItemWidget {
	ACrowPlayerStateBase* LocalPlayerState; // 0x348
	UTextBlock* TB_Killer; // 0x350
	UTextBlock* TB_Victim; // 0x358
	UCrowWidgetImage* IMG_KillFeedIcon; // 0x360
	UHorizontalBox* HB_KillFeedItem; // 0x368
	UHorizontalBox* HB_HeadShot; // 0x370
	UCanvasPanel* CP_Killer_Squad; // 0x378
	UImage* IMG_Killer_SquadColor; // 0x380
	UTextBlock* TB_Killer_SquadNum; // 0x388
	UCanvasPanel* CP_Victim_Squad; // 0x390
	UImage* IMG_Victim_SquadColor; // 0x398
	UTextBlock* TB_Victim_SquadNum; // 0x3a0
	UCanvasPanel* CP_Killer_Zombie; // 0x3a8
	UCanvasPanel* CP_Victim_Zombie; // 0x3b0
	FTimerHandle HideTimerHandle; // 0x3b8
	float hideTimeDelaySecond; // 0x3c0
	float hideSmoothSecond; // 0x3c4
};

struct UParticleModuleLocationBoneSocket {
	ELocationBoneSocketSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	TArray<FLocationBoneSocketInfo> SourceLocations; // 0x40
	ELocationBoneSocketSelectionMethod SelectionMethod; // 0x50
	char bUpdatePositionEachFrame : 1; // 0x54
	char bOrientMeshEmitters : 1; // 0x54
	char bInheritBoneVelocity : 1; // 0x54
	float InheritVelocityScale; // 0x58
	FName SkelMeshActorParamName; // 0x5c
	int32_t NumPreSelectedIndices; // 0x64
};

struct UVerticalBoxSlot {
	FSlateChildSize Size; // 0x38
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UWrapBoxSlot {
	FMargin Padding; // 0x38
	bool bFillEmptySpace; // 0x48
	float FillSpanWhenLessThan; // 0x4c
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UCrowWorldMapIcon {
	ECrowWorldMapIconType IconType; // 0x28
	AActor* TargetActor; // 0x30
	AActor* ParentActor; // 0x38
	TArray<UCrowWidgetBase*> IconWidgetArray; // 0x40
	FCrowGameIconDisplayInfo DisplayInfo; // 0x50
	FVector2D IconOffset; // 0xd8
	bool bIsVisible; // 0xe0
	FCrowEventParam EventParam; // 0xe8
	bool bIsEnableScale; // 0x118
	bool bIsUseMapScale; // 0x119
	FCrowPingData PingData; // 0x120
};

struct UCrowHUDWidgetConquest {
	UCanvasPanel* CP_ConquestIcon; // 0x348
	UCrowMissionResultWidget* WB_MainMissionResult; // 0x350
	UCrowPrepareMatchWidget* WB_ConquestPrepareMatch; // 0x358
	UProgressBar* PB_PointRatio; // 0x360
	UCrowConquestOpeningEffectWidget* WB_ConquestOpeningEffect; // 0x368
	UCrowWidgetBase* WB_StatusSkill; // 0x370
};

struct UVectorField {
	FBox Bounds; // 0x28
	float Intensity; // 0x44
};

struct UBookMark2D {
	float Zoom2D; // 0x28
	FIntPoint Location; // 0x2c
};

struct UInputActionDelegateBinding {
	TArray<FBlueprintInputActionDelegateBinding> InputActionDelegateBindings; // 0x28
};

struct UEditPivotToolProperties {
	bool bEnableSnapDragging; // 0x60
	EEditPivotSnapDragRotationMode RotationMode; // 0x61
};

struct UAkCallbackInfo {
	UAkComponent* AkComponent; // 0x28
};

struct UMaterialExpressionDepthOfFieldFunction {
	EDepthOfFieldFunctionValue FunctionValue; // 0x40
	FExpressionInput Depth; // 0x44
};

struct UCrowBMPositionChangeWidget {
	UTextBlock* TBMapName; // 0x348
	UTextBlock* TBRound; // 0x350
	UTextBlock* TBTeamPosition; // 0x358
	UTextBlock* TBMyTeamName; // 0x360
	UImage* IMGMyTeamIcon; // 0x368
	UImage* IMGMyTeamIconChange; // 0x370
	UImage* IMGMyTeamBg00; // 0x378
	UImage* IMGMyTeamBg01; // 0x380
	UImage* IMGMyTeamBg02; // 0x388
	UImage* IMGMyTeamEffect00; // 0x390
	UImage* IMGMyTeamEffect01; // 0x398
	UTextBlock* TBEnemyTeamName; // 0x3a0
	UImage* IMGEnemyTeamIcon; // 0x3a8
	UImage* IMGEnemyTeamIconChange; // 0x3b0
	UImage* IMGEnemyTeamBg; // 0x3b8
	UWidgetAnimation* AniStart; // 0x3c0
	UWidgetAnimation* AniStartMatchPoint; // 0x3c8
	UTexture2D* AttackerTeamIcon; // 0x3d0
	UTexture2D* DefencerTeamIcon; // 0x3d8
	FLinearColor RedTeamBg00Color; // 0x3e0
	FLinearColor RedTeamBg01Color; // 0x3f0
	FLinearColor RedTeamBg02Color; // 0x400
	FLinearColor RedTeamEffect00Color; // 0x410
	FLinearColor RedTeamEffect01Color; // 0x420
	FLinearColor BlueTeamBg00Color; // 0x430
	FLinearColor BlueTeamBg01Color; // 0x440
	FLinearColor BlueTeamBg02Color; // 0x450
	FLinearColor BlueTeamEffect00Color; // 0x460
	FLinearColor BlueTeamEffect01Color; // 0x470
};

struct UEnvQueryNode {
	int32_t VerNum; // 0x28
};

struct ACrowItemArmor {
	float HP; // 0x314
	float MaxHP; // 0x318
	FCrowArmorTableRow ItemTable; // 0x320
	bool UseDefaultSettings; // 0x4d8
	uint32_t ArmorIndex; // 0x4dc
};

struct USmoothHoleFillProperties {
	bool bConstrainToHoleInterior; // 0x60
	int32_t RemeshingExteriorRegionWidth; // 0x64
	int32_t SmoothingExteriorRegionWidth; // 0x68
	int32_t SmoothingInteriorRegionWidth; // 0x6c
	float InteriorSmoothness; // 0x70
	double FillDensityScalar; // 0x78
	bool bProjectDuringRemesh; // 0x80
};

struct UAREnvironmentProbeComponent {
	FAREnvironmentProbeUpdatePayload ReplicatedPayload; // 0x280
};

struct UObjectLibrary {
	UObject* ObjectBaseClass; // 0x28
	bool bHasBlueprintClasses; // 0x30
	TArray<UObject*> Objects; // 0x38
	TArray<TWeakObjectPtr<UObject>> WeakObjects; // 0x48
	bool bUseWeakReferences; // 0x58
	bool bIsFullyLoaded; // 0x59
};

struct ACrowWeaponHeliFlare {
	float FireDelayTime; // 0x31e8
	float FlareFireCount; // 0x31ec
	TArray<FTransform> SmokeFireArray; // 0x31f0
	FTimerHandle FireTimeHandle; // 0x3200
	int32_t CurrFireCount; // 0x3208
	USkeletalMeshComponent* FireMeshComponent; // 0x3210
	UParticleSystem* TracerFX_Fire; // 0x3218
};

struct USpaceDeformerOperatorFactory {
	UMeshSpaceDeformerTool* SpaceDeformerTool; // 0x30
};

struct UCrowSpectatorPlayerSlotWidget {
	UCrowToggleButton* BT_Spectating; // 0x358
	UWidgetSwitcher* WS_PlayerName; // 0x360
	UTextBlock* TB_DeselectPlayerName; // 0x368
	UTextBlock* TB_SelectPlayerName; // 0x370
	UImage* IMG_Dying; // 0x378
	UImage* IMG_Death; // 0x380
	ACrowPlayerStateBase* TargetPlayerState; // 0x388
	float CurrentTimeSecond; // 0x390
};

struct AGeometryCacheActor {
	UGeometryCacheComponent* GeometryCacheComponent; // 0x220
};

struct UParticleModuleRotation_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UGroomAsset {
	TArray<FHairGroupInfoWithVisibility> HairGroupsInfo; // 0x30
	TArray<FHairGroupsRendering> HairGroupsRendering; // 0x40
	TArray<FHairGroupsPhysics> HairGroupsPhysics; // 0x50
	TArray<FHairGroupsInterpolation> HairGroupsInterpolation; // 0x60
	TArray<FHairGroupsLOD> HairGroupsLOD; // 0x70
	TArray<FHairGroupsCardsSourceDescription> HairGroupsCards; // 0x80
	TArray<FHairGroupsMeshesSourceDescription> HairGroupsMeshes; // 0x90
	TArray<FHairGroupsMaterial> HairGroupsMaterials; // 0xa0
	bool EnableGlobalInterpolation; // 0xc0
	EGroomInterpolationType HairInterpolationType; // 0xc1
	EHairLODSelectionType LODSelectionType; // 0xc2
	FPerPlatformInt MinLOD; // 0xc4
	FPerPlatformBool DisableBelowMinLodStripping; // 0xc8
	TArray<float> EffectiveLODBias; // 0xd0
	TArray<UAssetUserData*> AssetUserData; // 0xe0
};

struct UModularSynthComponent {
	int32_t VoiceCount; // 0x6c0
};

struct ACrowItemMeshActor {
	USceneComponent* SceneComponent; // 0x220
	TArray<UMeshComponent*> MeshArray; // 0x228
	UParticleSystemComponent* Particle; // 0x238
};

struct UCrowMedalInfoWidget {
	UCanvasPanel* MedalListPanel; // 0x348
	UTextBlock* TB_MedalTitle; // 0x350
	UTextBlock* TB_TotalEXP; // 0x358
	UCanvasPanel* CP_TextList; // 0x360
	TArray<UCrowMedalAniWidgetBase*> MedalIconList; // 0x390
	TArray<FCrowMedalCountInfo> MedalTextArray; // 0x3a0
	UUserWidget* MedalIconClass; // 0x3b0
	float IconSpawnDelayTime; // 0x3b8
	float RemainIconSpawnDelayTime; // 0x3bc
	UUserWidget* MedalTextClass; // 0x3c0
	TArray<UCrowGetEXPPointItemWidget*> TextItemArray; // 0x3c8
	float TextSpawnDelayTime; // 0x3d8
	float TextDisplayTime; // 0x3dc
	UAkAudioEvent* TextEventSound; // 0x3e0
	UAkAudioEvent* HeadShotEventSound; // 0x3e8
	float RemainTextSpawnDelayTime; // 0x3f0
};

struct UCrowLandWheelsConfigTank {
	FCrowLandWheelsTankSetting Setting; // 0x28
};

struct UTexture2D {
	int32_t LevelIndex; // 0xd8
	int32_t FirstResourceMemMip; // 0xdc
	char bTemporarilyDisableStreaming : 1; // 0xe0
	TextureAddress AddressX; // 0xe1
	TextureAddress AddressY; // 0xe2
	FIntPoint ImportedSize; // 0xe4
};

struct UPullKelvinletBrushOpProps {
	float Falloff; // 0x70
	float Depth; // 0x74
};

struct UMeshBoundaryToolBase {
	UPolygonSelectionMechanic* SelectionMechanic; // 0x138
	USingleClickInputBehavior* LoopSelectClickBehavior; // 0x140
};

struct UCrowClanExpTableManager {
	TMap<int32_t, FCrowClanExpTableRow> ClanExpData; // 0x28
};

struct URendererSettings {
	char bMobileDisableVertexFog : 1; // 0x38
	int32_t MaxMobileCascades; // 0x3c
	EMobileMSAASampleCount MobileMSAASampleCount; // 0x40
	char bMobileAllowDitheredLODTransition : 1; // 0x44
	char bMobileAllowSoftwareOcclusionCulling : 1; // 0x44
	char bMobileVirtualTextures : 1; // 0x44
	char bDiscardUnusedQualityLevels : 1; // 0x44
	char bOcclusionCulling : 1; // 0x44
	float MinScreenRadiusForLights; // 0x48
	float MinScreenRadiusForEarlyZPass; // 0x4c
	float MinScreenRadiusForCSMdepth; // 0x50
	char bPrecomputedVisibilityWarning : 1; // 0x54
	char bTextureStreaming : 1; // 0x54
	char bUseDXT5NormalMaps : 1; // 0x54
	char bVirtualTextures : 1; // 0x54
	char bVirtualTexturedLightmaps : 1; // 0x54
	uint32_t VirtualTextureTileSize; // 0x58
	uint32_t VirtualTextureTileBorderSize; // 0x5c
	uint32_t VirtualTextureFeedbackFactor; // 0x60
	char bVirtualTextureEnableCompressZlib : 1; // 0x64
	char bVirtualTextureEnableCompressCrunch : 1; // 0x64
	char bClearCoatEnableSecondNormal : 1; // 0x64
	int32_t ReflectionCaptureResolution; // 0x68
	char bReflectionCaptureCompression : 1; // 0x6c
	char ReflectionEnvironmentLightmapMixBasedOnRoughness : 1; // 0x6c
	char bForwardShading : 1; // 0x6c
	char bVertexFoggingForOpaque : 1; // 0x6c
	char bAllowStaticLighting : 1; // 0x6c
	char bUseNormalMapsForStaticLighting : 1; // 0x6c
	char bGenerateMeshDistanceFields : 1; // 0x6c
	char bEightBitMeshDistanceFields : 1; // 0x6c
	char bGenerateLandscapeGIData : 1; // 0x6d
	char bCompressMeshDistanceFields : 1; // 0x6d
	float TessellationAdaptivePixelsPerTriangle; // 0x70
	char bSeparateTranslucency : 1; // 0x74
	ETranslucentSortPolicy TranslucentSortPolicy; // 0x78
	FVector TranslucentSortAxis; // 0x7c
	ECustomDepthStencil CustomDepthStencil; // 0x88
	char bCustomDepthTaaJitter : 1; // 0x8c
	EAlphaChannelMode bEnableAlphaChannelInPostProcessing; // 0x90
	char bDefaultFeatureBloom : 1; // 0x94
	char bDefaultFeatureAmbientOcclusion : 1; // 0x94
	char bDefaultFeatureAmbientOcclusionStaticFraction : 1; // 0x94
	char bDefaultFeatureAutoExposure : 1; // 0x94
	EAutoExposureMethodUI DefaultFeatureAutoExposure; // 0x98
	float DefaultFeatureAutoExposureBias; // 0x9c
	char bExtendDefaultLuminanceRangeInAutoExposureSettings : 1; // 0xa0
	char bUsePreExposure : 1; // 0xa0
	char bEnablePreExposureOnlyInTheEditor : 1; // 0xa0
	char bDefaultFeatureMotionBlur : 1; // 0xa0
	char bDefaultFeatureLensFlare : 1; // 0xa0
	char bTemporalUpsampling : 1; // 0xa0
	char bSSGI : 1; // 0xa0
	EAntiAliasingMethod DefaultFeatureAntiAliasing; // 0xa4
	ELightUnits DefaultLightUnits; // 0xa5
	EDefaultBackBufferPixelFormat DefaultBackBufferPixelFormat; // 0xa6
	char bRenderUnbuiltPreviewShadowsInGame : 1; // 0xa8
	char bStencilForLODDither : 1; // 0xa8
	EEarlyZPass EarlyZPass; // 0xac
	char bEarlyZPassOnlyMaterialMasking : 1; // 0xb0
	char bDBuffer : 1; // 0xb0
	EClearSceneOptions ClearSceneMethod; // 0xb4
	char bBasePassOutputsVelocity : 1; // 0xb8
	char bVertexDeformationOutputsVelocity : 1; // 0xb8
	char bSelectiveBasePassOutputs : 1; // 0xb8
	char bDefaultParticleCutouts : 1; // 0xb8
	int32_t GPUSimulationTextureSizeX; // 0xbc
	int32_t GPUSimulationTextureSizeY; // 0xc0
	char bGlobalClipPlane : 1; // 0xc4
	EGBufferFormat GBufferFormat; // 0xc8
	char bUseGPUMorphTargets : 1; // 0xcc
	char bNvidiaAftermathEnabled : 1; // 0xcc
	char bMultiView : 1; // 0xcc
	char bMobilePostProcessing : 1; // 0xcc
	char bMobileMultiView : 1; // 0xcc
	char bMobileUseHWsRGBEncoding : 1; // 0xcc
	char bRoundRobinOcclusion : 1; // 0xcc
	char bODSCapture : 1; // 0xcc
	char bMeshStreaming : 1; // 0xcd
	float WireframeCullThreshold; // 0xd0
	char bEnableRayTracing : 1; // 0xd4
	char bEnableRayTracingTextureLOD : 1; // 0xd4
	char bSupportStationarySkylight : 1; // 0xd4
	char bSupportLowQualityLightmaps : 1; // 0xd4
	char bSupportPointLightWholeSceneShadows : 1; // 0xd4
	char bSupportAtmosphericFog : 1; // 0xd4
	char bSupportSkyAtmosphere : 1; // 0xd4
	char bSupportSkyAtmosphereAffectsHeightFog : 1; // 0xd4
	char bSupportSkinCacheShaders : 1; // 0xd5
	ESkinCacheDefaultBehavior DefaultSkinCacheBehavior; // 0xd8
	float SkinCacheSceneMemoryLimitInMB; // 0xdc
	char bMobileEnableStaticAndCSMShadowReceivers : 1; // 0xe0
	char bMobileEnableMovableLightCSMShaderCulling : 1; // 0xe0
	char bMobileAllowDistanceFieldShadows : 1; // 0xe0
	char bMobileAllowMovableDirectionalLights : 1; // 0xe0
	uint32_t MobileNumDynamicPointLights; // 0xe4
	char bMobileDynamicPointLightsUseStaticBranch : 1; // 0xe8
	char bMobileAllowMovableSpotlights : 1; // 0xe8
	char bMobileAllowMovableSpotlightShadows : 1; // 0xe8
	char bSupport16BitBoneIndex : 1; // 0xe8
	char bGPUSkinLimit2BoneInfluences : 1; // 0xe8
	char bSupportDepthOnlyIndexBuffers : 1; // 0xe8
	char bSupportReversedIndexBuffers : 1; // 0xe8
	char bLPV : 1; // 0xe8
	char bMobileAmbientOcclusion : 1; // 0xe9
	char bUseUnlimitedBoneInfluences : 1; // 0xe9
	int32_t UnlimitedBonInfluencesThreshold; // 0xec
	EMobilePlanarReflectionMode MobilePlanarReflectionMode; // 0xf0
	FPerPlatformBool bStreamSkeletalMeshLODs; // 0xf1
	FPerPlatformBool bDiscardSkeletalMeshOptionalLODs; // 0xf2
	FSoftObjectPath VisualizeCalibrationColorMaterialPath; // 0xf8
	FSoftObjectPath VisualizeCalibrationCustomMaterialPath; // 0x110
	FSoftObjectPath VisualizeCalibrationGrayscaleMaterialPath; // 0x128
};

struct UMaterialExpressionCollectionParameter {
	UMaterialParameterCollection* Collection; // 0x40
	FName ParameterName; // 0x48
	FGuid ParameterId; // 0x50
};

struct AWaterBodyCustom {
	UCustomMeshGenerator* CustomGenerator; // 0xdd0
};

struct UCrowAimComponentVehicle {
	UCrowVehicleSightComponent* VehicleSight; // 0x108
	FTimerHandle BeginTimerHandle; // 0x110
	FTimerHandle EndTimerHandle; // 0x118
	UCurveVector* AimSocketOffsetCurve; // 0x120
	float AimSocketOffsetCurveTime; // 0x128
	float AimElapsedTimeSecond; // 0x12c
};

struct UTimeSynchronizableMediaSource {
	bool bUseTimeSynchronization; // 0x88
	int32_t FrameDelay; // 0x8c
	double TimeDelay; // 0x90
};

struct UCrowConquestLineLink {
	UCrowConquestLineWidget* ConquestLineClass; // 0x28
	UCanvasPanel* LinePanel; // 0x30
	TArray<FCrowConquestIconAreaPair> IconAreaArray; // 0x38
	TArray<FCrowConquestLineInfo> LineArray; // 0x48
	TArray<FString> ConquestSequenceRedTeam; // 0x58
};

struct ACrowPostProcessVolume {
	UMaterialParameterCollection* ParamCollection; // 0x220
	TMap<int32_t, FCrowPostProcessQualitySetting> QualitySettings; // 0x228
	TMap<ECrowPostProcess, UMaterialInterface*> OtherPostProcessMaterials; // 0x278
	UCrowLocalPostProcessComponent* CrowLocalPostProcessComp; // 0x2c8
	UCrowUnderWaterComponent* UnderWaterComponent; // 0x2d0
	UCrowPostProcessBloodComponent* BloodComponent; // 0x2d8
	UCrowShellShockComponent* ShellShockComponent; // 0x2e0
	int32_t LastHumanState; // 0x2e8
	UMaterialParameterCollectionInstance* ParamInstance; // 0x2f0
	TArray<TWeakObjectPtr<APostProcessVolume>> CachedPostProcessVolumes; // 0x2f8
	TMap<FString, int32_t> OtherPPMaterialRef; // 0x308
	bool bInitialized; // 0x358
};

struct UCrowCharacterAnimInst {
	ECrowMovementMode MovementMode; // 0x2b8
	ECrowCharacterAnimStance TargetStance; // 0x2b9
	ECrowCharacterAnimInAir InAir; // 0x2ba
	ECrowCharacterPeekState PeekState; // 0x2bb
	bool bIsOnCombat; // 0x2bc
	bool bIsOnAim; // 0x2bd
	bool bIsMoving; // 0x2be
	float MoveDirection; // 0x2c0
	float GaitValue; // 0x2c4
	ECrowWeaponSubType WeaponType; // 0x2c8
	ECrowCharacterAnimWeapon WeaponAction; // 0x2c9
	bool bIsWeaponStartFire; // 0x2ca
	bool bIsWeaponLoopFire; // 0x2cb
	bool bIsAimSecondarySight; // 0x2cc
	FRotator LeftArmAdjustedOnSlopeRotation; // 0x2d0
	FRotator AimingRotation; // 0x2dc
	ECrowCharacterAnimStance CurrentStance; // 0x2e8
	ECrowCharacterBattleStance BattleStance; // 0x2e9
	ECrowCharacterAnimActionType ActionType; // 0x2ea
	float MovementPlayRateStand; // 0x2ec
	float MovementPlayRateCrouch; // 0x2f0
	float MovementPlayRateProne; // 0x2f4
	bool bIsOnAimLocal; // 0x2f8
	bool bIsShootAction; // 0x2f9
	float AimOffsetAlpha; // 0x2fc
	float HandIKAlpha; // 0x300
	float OverlayLeftHand; // 0x304
	float OverlayRightHand; // 0x308
	bool bIsFallFlail; // 0x30c
	FTransform PrivateWeaponIKTarget; // 0x310
	FTransform VehicleLeftHandIK; // 0x340
	FTransform VehicleRightHandIK; // 0x370
	EVehicleSeatType VehicleSeatType; // 0x3a0
	char VehicleSeatIndex; // 0x3a1
	bool bIsInjured; // 0x3a2
	bool bIsSkydiving; // 0x3a3
	char SkydivingState; // 0x3a4
	float AnimatedWalkSpeed; // 0x3a8
	float AnimatedRunSpeed; // 0x3ac
	float AnimatedSprintSpeed; // 0x3b0
	float AnimatedCrouchWalkSpeed; // 0x3b4
	float AnimatedCrouchRunSpeed; // 0x3b8
	float AnimatedCrouchSprintSpeed; // 0x3bc
	float AnimatedProneSpeed; // 0x3c0
	float AnimatedProneWalkSpeed; // 0x3c4
	float SkydivingForwardValue; // 0x3c8
	float SkydivingRightValue; // 0x3cc
	FTransform ParachuteGripLeftTransform; // 0x3d0
	FTransform ParachuteGripRightTransform; // 0x400
	ACrowCharacterPawn* CharacterOwner; // 0x430
	UCrowCharacterMovement* CharacterMovement; // 0x438
	ACrowWeaponBase* WeaponActor; // 0x440
	ACrowVehiclePawn* VehiclePawn; // 0x448
	FName NamePrivateBase; // 0x450
	FName NamePrivateShoot; // 0x458
	FName NamePrivateReload; // 0x460
	FName NameItemAction; // 0x468
	FName NameOnVehicle; // 0x470
};

struct USoundNodeDoppler {
	float DopplerIntensity; // 0x48
	bool bUseSmoothing; // 0x4c
	float SmoothingInterpSpeed; // 0x50
};

struct ACrowProjectileBase {
	USceneComponent* SceneRoot; // 0x220
	UProjectileMovementComponent* MovementComp; // 0x228
	FName ProjectileCollisionProfileName; // 0x230
	UCrowTrajectoryMovement* TrajectoryMovement; // 0x238
	uint16_t WeaponIndex; // 0x240
	uint16_t AmmoIndex; // 0x242
	char ItemType; // 0x244
	FCrowProjectileFireData FireData; // 0x250
	FVector LastProjectileLocation; // 0x1720
	TArray<FHitResult> HitResultsOnMove; // 0x1730
	AWaterBody* CachedOceanActor; // 0x1750
	int32_t CachedLOD; // 0x1758
	FCrowWeaponPartsOptions PartsOptions; // 0x175c
};

struct UCrowWeaponPartsBarrel {
	FCrowWeaponPartsBarrelTableRow PartsTable; // 0x320
	FCrowWeaponPartsBarrelTableRow DefaultPartsData; // 0x628
};

struct UAnimCompress_RemoveLinearKeys {
	float MaxPosDiff; // 0x40
	float MaxAngleDiff; // 0x44
	float MaxScaleDiff; // 0x48
	float MaxEffectorDiff; // 0x4c
	float MinEffectorDiff; // 0x50
	float EffectorDiffSocket; // 0x54
	float ParentKeyScale; // 0x58
	char bRetarget : 1; // 0x5c
	char bActuallyFilterLinearKeys : 1; // 0x5c
};

struct UProjectileMovementComponent {
	float InitialSpeed; // 0xf0
	float MaxSpeed; // 0xf4
	char bRotationFollowsVelocity : 1; // 0xf8
	char bRotationRemainsVertical : 1; // 0xf8
	char bShouldBounce : 1; // 0xf8
	char bInitialVelocityInLocalSpace : 1; // 0xf8
	char bForceSubStepping : 1; // 0xf8
	char bSimulationEnabled : 1; // 0xf8
	char bSweepCollision : 1; // 0xf8
	char bIsHomingProjectile : 1; // 0xf8
	char bBounceAngleAffectsFriction : 1; // 0xf9
	char bIsSliding : 1; // 0xf9
	char bInterpMovement : 1; // 0xf9
	char bInterpRotation : 1; // 0xf9
	float PreviousHitTime; // 0xfc
	FVector PreviousHitNormal; // 0x100
	float ProjectileGravityScale; // 0x10c
	float Buoyancy; // 0x110
	float Bounciness; // 0x114
	float Friction; // 0x118
	float BounceVelocityStopSimulatingThreshold; // 0x11c
	float MinFrictionFraction; // 0x120
	FMulticastInlineDelegate OnProjectileBounce; // 0x128
	FMulticastInlineDelegate OnProjectileStop; // 0x138
	float HomingAccelerationMagnitude; // 0x148
	TWeakObjectPtr<USceneComponent> HomingTargetComponent; // 0x14c
	float MaxSimulationTimeStep; // 0x154
	int32_t MaxSimulationIterations; // 0x158
	int32_t BounceAdditionalIterations; // 0x15c
	float InterpLocationTime; // 0x160
	float InterpRotationTime; // 0x164
	float InterpLocationMaxLagDistance; // 0x168
	float InterpLocationSnapToTargetDistance; // 0x16c
};

struct UMovieSceneBindingOverrides {
	TArray<FMovieSceneBindingOverrideData> BindingData; // 0x28
};

struct UCrowTeleportationActorComponent {
	ACrowTeleportationArea* CrowTeleportationArea; // 0xb0
	UCrowDeathZoneWidget* DeathZoneWidget; // 0xb8
	FTimerHandle CountDownHandle; // 0xc0
	float Countdown; // 0xc8
};

struct UEnvQueryGenerator_SimpleGrid {
	FAIDataProviderFloatValue GridSize; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb8
	UEnvQueryContext* GenerateAround; // 0xf0
};

struct UPanelWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct URandomVector {
	float Magnitude; // 0xb0
};

struct UMaterialExpressionMin {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UParticleModuleParameterDynamic {
	TArray<FEmitterDynamicParameter> DynamicParams; // 0x30
	int32_t UpdateFlags; // 0x40
	char bUsesVelocity : 1; // 0x44
};

struct AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bHidden : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bCanBeDamaged : 1; // 0x59
	char bBlockInput : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x170
	FMulticastSparseDelegate OnTakeAnyDamage; // 0x180
	FMulticastSparseDelegate OnTakePointDamage; // 0x181
	FMulticastSparseDelegate OnTakeRadialDamage; // 0x182
	FMulticastSparseDelegate OnActorBeginOverlap; // 0x183
	FMulticastSparseDelegate OnActorEndOverlap; // 0x184
	FMulticastSparseDelegate OnBeginCursorOver; // 0x185
	FMulticastSparseDelegate OnEndCursorOver; // 0x186
	FMulticastSparseDelegate OnClicked; // 0x187
	FMulticastSparseDelegate OnReleased; // 0x188
	FMulticastSparseDelegate OnInputTouchBegin; // 0x189
	FMulticastSparseDelegate OnInputTouchEnd; // 0x18a
	FMulticastSparseDelegate OnInputTouchEnter; // 0x18b
	FMulticastSparseDelegate OnInputTouchLeave; // 0x18c
	FMulticastSparseDelegate OnActorHit; // 0x18d
	FMulticastSparseDelegate OnDestroyed; // 0x18e
	FMulticastSparseDelegate OnEndPlay; // 0x18f
	TArray<UActorComponent*> InstanceComponents; // 0x1f0
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x200
};

struct URevolveOperatorFactory {
	UDrawAndRevolveTool* RevolveTool; // 0x30
};

struct UAssetExportTask {
	UObject* Object; // 0x28
	UExporter* Exporter; // 0x30
	FString Filename; // 0x38
	bool bSelected; // 0x48
	bool bReplaceIdentical; // 0x49
	bool bPrompt; // 0x4a
	bool bAutomated; // 0x4b
	bool bUseFileArchive; // 0x4c
	bool bWriteEmptyFiles; // 0x4d
	TArray<UObject*> IgnoreObjectList; // 0x50
	UObject* Options; // 0x60
	TArray<FString> Errors; // 0x68
};

struct UMaterialExpressionDynamicParameter {
	TArray<FString> ParamNames; // 0x40
	FLinearColor DefaultValue; // 0x50
	uint32_t ParameterIndex; // 0x60
};

struct UInterpTrack {
	TArray<UInterpTrack*> SubTracks; // 0x38
	UInterpTrackInst* TrackInstClass; // 0x48
	ETrackActiveCondition ActiveCondition; // 0x50
	FString TrackTitle; // 0x58
	char bOnePerGroup : 1; // 0x68
	char bDirGroupOnly : 1; // 0x68
	char bDisableTrack : 1; // 0x68
	char bIsSelected : 1; // 0x68
	char bIsAnimControlTrack : 1; // 0x68
	char bSubTrackOnly : 1; // 0x68
	char bVisible : 1; // 0x68
	char bIsRecording : 1; // 0x68
};

struct UBTTask_RunBehaviorDynamic {
	FGameplayTag InjectionTag; // 0x70
	UBehaviorTree* DefaultBehaviorAsset; // 0x78
	UBehaviorTree* BehaviorAsset; // 0x80
};

struct UBakeTransformToolProperties {
	bool bBakeRotation; // 0x60
	EBakeScaleMethod BakeScale; // 0x61
	bool bRecenterPivot; // 0x62
};

struct UMeshAttributePaintTool {
	UMeshAttributePaintToolProperties* AttribProps; // 0x200
};

struct UCrowCharacterSubAnimOnVehicle {
	TMap<int32_t, FCrowCharacterAimOffsetVehicle> AimOffsetVehicle; // 0x300
	EVehicleSeatType SeatType; // 0x350
	int32_t SeatIndex; // 0x354
	int32_t PrevSeatIndex; // 0x358
};

struct UCrowResultSquadSlotWidget {
	UTextBlock* TB_PlayerName; // 0x348
	UTextBlock* TB_Kill_Count; // 0x350
	UTextBlock* TB_SurvivalTime_Count; // 0x358
	UTextBlock* TB_Damagel_Count; // 0x360
	UImage* IMG_SquadBack; // 0x368
	UTextBlock* TB_SquadNum; // 0x370
	UTextBlock* TB_Assist_Count; // 0x378
	UImage* IMG_BG; // 0x380
};

struct UMovieSceneEventRepeaterSection {
	FMovieSceneEvent Event; // 0xf0
};

struct UGizmoArrowComponent {
	FVector Direction; // 0x460
	float Gap; // 0x46c
	float Length; // 0x470
	float Thickness; // 0x474
};

struct UMultiLineEditableText {
	FText Text; // 0x128
	FText HintText; // 0x140
	FDelegate HintTextDelegate; // 0x158
	FTextBlockStyle WidgetStyle; // 0x168
	bool bIsReadOnly; // 0x3d8
	FSlateFontInfo Font; // 0x3e0
	bool SelectAllTextWhenFocused; // 0x438
	bool ClearTextSelectionOnFocusLoss; // 0x439
	bool RevertTextOnEscape; // 0x43a
	bool ClearKeyboardFocusOnCommit; // 0x43b
	bool AllowContextMenu; // 0x43c
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x43d
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x43e
	FMulticastInlineDelegate OnTextChanged; // 0x440
	FMulticastInlineDelegate OnTextCommitted; // 0x450
};

struct UMovieSceneParticleTrack {
	TArray<UMovieSceneSection*> ParticleSections; // 0x80
};

struct UCrowVehicleMovementTank {
	UCrowLandWheelsConfigTank* TankConfigClass; // 0x2f0
	UCrowLandWheelsConfigTireAndWheel* VirtualWheelConfigClass; // 0x2f8
	bool IsFirstUpdate; // 0x308
	float DistanceAlwaysVisible; // 0x30c
	float DistanceFar; // 0x310
};

struct UCrowVehicleCrosshairRoadRoverMG {
	UImage* IMG_Overheating_Gauge; // 0x428
	UMaterialInstanceDynamic* ImgOverheatingGuageMaterial; // 0x430
	UCurveLinearColor* OverheatingCurve; // 0x438
	bool IsCooling; // 0x440
	UCrowWeaponInfoWidget* WeaponInfoWidget; // 0x448
};

struct ACrowWeaponClaymoreMine {
	float OperationWaitingTime; // 0x1ed0
	float ActivityTimeLimit; // 0x1ed4
	float RangeAngle; // 0x1ed8
};

struct UMirrorTool {
	UMirrorToolProperties* Settings; // 0x98
	UMirrorToolActionPropertySet* ToolActions; // 0xa0
	TArray<UDynamicMeshReplacementChangeTarget*> MeshesToMirror; // 0xa8
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xb8
	UConstructionPlaneMechanic* PlaneMechanic; // 0x110
};

struct UProceduralRectangleToolProperties {
	float Width; // 0x70
	float Depth; // 0x74
	int32_t WidthSubdivisions; // 0x78
	int32_t DepthSubdivisions; // 0x7c
};

struct UMaterialExpressionFrac {
	FExpressionInput Input; // 0x40
};

struct UWeldMeshEdgesTool {
	float Tolerance; // 0x88
	bool bOnlyUnique; // 0x8c
};

struct UMediaTimeStampInfo {
	FTimespan Time; // 0x28
	int64_t SequenceIndex; // 0x30
};

struct AEmitter {
	UParticleSystemComponent* ParticleSystemComponent; // 0x220
	char bDestroyOnSystemFinish : 1; // 0x228
	char bPostUpdateTickGroup : 1; // 0x228
	char bCurrentlyActive : 1; // 0x228
	FMulticastInlineDelegate OnParticleSpawn; // 0x230
	FMulticastInlineDelegate OnParticleBurst; // 0x240
	FMulticastInlineDelegate OnParticleDeath; // 0x250
	FMulticastInlineDelegate OnParticleCollide; // 0x260
};

struct UGeometryCollectionComponent {
	AChaosSolverActor* ChaosSolverActor; // 0x470
	UGeometryCollection* RestCollection; // 0x558
	TArray<AFieldSystemActor*> InitializationFields; // 0x560
	bool Simulating; // 0x570
	EObjectStateTypeEnum ObjectType; // 0x578
	bool EnableClustering; // 0x579
	int32_t ClusterGroupIndex; // 0x57c
	int32_t MaxClusterLevel; // 0x580
	TArray<float> DamageThreshold; // 0x588
	EClusterConnectionTypeEnum ClusterConnectionType; // 0x598
	int32_t CollisionGroup; // 0x59c
	float CollisionSampleFraction; // 0x5a0
	float LinearEtherDrag; // 0x5a4
	float AngularEtherDrag; // 0x5a8
	UChaosPhysicalMaterial* PhysicalMaterial; // 0x5b0
	EInitialVelocityTypeEnum InitialVelocityType; // 0x5b8
	FVector InitialLinearVelocity; // 0x5bc
	FVector InitialAngularVelocity; // 0x5c8
	UPhysicalMaterial* PhysicalMaterialOverride; // 0x5d8
	FGeomComponentCacheParameters CacheParameters; // 0x5e0
	FMulticastInlineDelegate NotifyGeometryCollectionPhysicsStateChange; // 0x630
	FMulticastInlineDelegate NotifyGeometryCollectionPhysicsLoadingStateChange; // 0x640
	FMulticastInlineDelegate OnChaosBreakEvent; // 0x668
	float DesiredCacheTime; // 0x678
	bool CachePlayback; // 0x67c
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x680
	bool bNotifyBreaks; // 0x690
	bool bNotifyCollisions; // 0x691
	bool bEnableReplication; // 0x692
	bool bEnableAbandonAfterLevel; // 0x693
	int32_t ReplicationAbandonClusterLevel; // 0x694
	FGeometryCollectionRepData RepData; // 0x698
	UBodySetup* DummyBodySetup; // 0x8c8
};

struct UGizmoUniformScaleParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float ScaleMultiplier; // 0x68
	FVector2D Parameter; // 0x6c
	FGizmoVec2ParameterChange LastChange; // 0x74
	FVector CurScaleOrigin; // 0x84
	FVector CurScaleNormal; // 0x90
	FVector CurScaleAxisX; // 0x9c
	FVector CurScaleAxisY; // 0xa8
	FTransform InitialTransform; // 0xc0
};

struct UBorder {
	EHorizontalAlignment HorizontalAlignment; // 0x120
	EVerticalAlignment VerticalAlignment; // 0x121
	char bShowEffectWhenDisabled : 1; // 0x122
	FLinearColor ContentColorAndOpacity; // 0x124
	FDelegate ContentColorAndOpacityDelegate; // 0x134
	FMargin Padding; // 0x144
	FSlateBrush Background; // 0x158
	FDelegate BackgroundDelegate; // 0x1e0
	FLinearColor BrushColor; // 0x1f0
	FDelegate BrushColorDelegate; // 0x200
	FVector2D DesiredSizeScale; // 0x210
	bool bFlipForRightToLeftFlowDirection; // 0x218
	FDelegate OnMouseButtonDownEvent; // 0x21c
	FDelegate OnMouseButtonUpEvent; // 0x22c
	FDelegate OnMouseMoveEvent; // 0x23c
	FDelegate OnMouseDoubleClickEvent; // 0x24c
};

struct ACrowProjectileShell {
	int32_t MaxWeaponLOD; // 0x17d0
};

struct UCurveVector {
	FRichCurve FloatCurves[0x3]; // 0x30
};

struct UNiagaraDataInterfaceParticleRead {
	FString EmitterName; // 0xd8
};

struct UAssetMappingTable {
	TArray<FAssetMapping> MappedAssets; // 0x28
};

struct UBrushBuilder {
	FString BitmapFilename; // 0x28
	FString ToolTip; // 0x38
	char NotifyBadParams : 1; // 0x48
	TArray<FVector> Vertices; // 0x50
	TArray<FBuilderPoly> Polys; // 0x60
	FName Layer; // 0x70
	char MergeCoplanars : 1; // 0x78
};

struct UBlackboardData {
	UBlackboardData* Parent; // 0x30
	TArray<FBlackboardEntry> Keys; // 0x38
	char bHasSynchronizedKeys : 1; // 0x48
};

struct UMovieSceneNiagaraParameterTrack {
	FNiagaraVariable Parameter; // 0x88
};

struct UOculusHMDRuntimeSettings {
	bool bAutoEnabled; // 0x28
	TArray<FOculusSplashDesc> SplashDescs; // 0x30
	bool bEnableSpecificColorGamut; // 0x40
	EColorSpace ColorSpace; // 0x41
	bool bSupportsDash; // 0x42
	bool bCompositesDepth; // 0x43
	bool bHQDistortion; // 0x44
	float PixelDensityMin; // 0x48
	float PixelDensityMax; // 0x4c
	int32_t CPULevel; // 0x50
	int32_t GPULevel; // 0x54
	EFixedFoveatedRenderingLevel FFRLevel; // 0x58
	bool FFRDynamic; // 0x59
	bool bChromaCorrection; // 0x5a
	bool bRecenterHMDWithController; // 0x5b
	bool bFocusAware; // 0x5c
	bool bRequiresSystemKeyboard; // 0x5d
	EHandTrackingSupport HandTrackingSupport; // 0x5e
};

struct AWaterBodyRiver {
	URiverGenerator* RiverGenerator; // 0xdd0
	UMaterialInterface* LakeTransitionMaterial; // 0xdd8
	UMaterialInstanceDynamic* LakeTransitionMID; // 0xde0
	UMaterialInterface* OceanTransitionMaterial; // 0xde8
	UMaterialInstanceDynamic* OceanTransitionMID; // 0xdf0
};

struct ULiveLinkCurveRemapSettings {
	FLiveLinkCurveConversionSettings CurveConversionSettings; // 0xa0
};

struct UParticleModuleBeamNoise {
	char bLowFreq_Enabled : 1; // 0x30
	int32_t Frequency; // 0x34
	int32_t Frequency_LowRange; // 0x38
	FRawDistributionVector NoiseRange; // 0x40
	FRawDistributionFloat NoiseRangeScale; // 0x88
	char bNRScaleEmitterTime : 1; // 0xb8
	FRawDistributionVector NoiseSpeed; // 0xc0
	char bSmooth : 1; // 0x108
	float NoiseLockRadius; // 0x10c
	char bNoiseLock : 1; // 0x110
	char bOscillate : 1; // 0x110
	float NoiseLockTime; // 0x114
	float NoiseTension; // 0x118
	char bUseNoiseTangents : 1; // 0x11c
	FRawDistributionFloat NoiseTangentStrength; // 0x120
	int32_t NoiseTessellation; // 0x150
	char bTargetNoise : 1; // 0x154
	float FrequencyDistance; // 0x158
	char bApplyNoiseScale : 1; // 0x15c
	FRawDistributionFloat NoiseScale; // 0x160
};

struct UTexture2DArray {
	TextureAddress AddressX; // 0x130
	TextureAddress AddressY; // 0x131
	TextureAddress AddressZ; // 0x132
};

struct UDatasmithCommonTessellationOptions {
	FDatasmithTessellationOptions Options; // 0x28
};

struct USizeBox {
	float WidthOverride; // 0x130
	float HeightOverride; // 0x134
	float MinDesiredWidth; // 0x138
	float MinDesiredHeight; // 0x13c
	float MaxDesiredWidth; // 0x140
	float MaxDesiredHeight; // 0x144
	float MinAspectRatio; // 0x148
	float MaxAspectRatio; // 0x14c
	char bOverride_WidthOverride : 1; // 0x150
	char bOverride_HeightOverride : 1; // 0x150
	char bOverride_MinDesiredWidth : 1; // 0x150
	char bOverride_MinDesiredHeight : 1; // 0x150
	char bOverride_MaxDesiredWidth : 1; // 0x150
	char bOverride_MaxDesiredHeight : 1; // 0x150
	char bOverride_MinAspectRatio : 1; // 0x150
	char bOverride_MaxAspectRatio : 1; // 0x150
};

struct USoundfieldEffectBase {
	USoundfieldEffectSettingsBase* Settings; // 0x28
};

struct UCrowCharacterDeathIconWidget {
	UCanvasPanel* CP_DisconnectIcon; // 0x3c8
	ACrowPlayerStateBase* TargetPlayerState; // 0x3d0
};

struct UCrowInGameMissionTutorialAlarm {
	UTextBlock* TB_MissionTitle; // 0x348
	UWidgetAnimation* ShowAnimation; // 0x350
	UWidgetAnimation* RemoveAni; // 0x358
};

struct UCrowInputMappingWidget {
	bool bIsActionKey; // 0x678
	FName BehaviourName; // 0x67c
};

struct UCrowMailManager {
	TMap<int64_t, FCrowAccountMailInfo> AccountMailInfos; // 0x28
	TMap<int64_t, FCrowPersonalMailInfo> PersonalMailInfos; // 0x78
	UCrowWidgetBase* ReqNewMailWidget; // 0xc8
	UCrowWidgetBase* ReqMailListWidget; // 0xd0
	UCrowWidgetBase* ReqReceiveMailItemWidget; // 0xd8
	UCrowWidgetBase* ReqDeleteMailWidget; // 0xe0
	UCrowWidgetBase* ReqAllReceiveMailItemWidget; // 0xe8
	bool bIsAllReceiveMailItem; // 0xf0
	TArray<FCrowRewardItem> RewardItemDatas; // 0xf8
};

struct UProgressWidgetStyle {
	FProgressBarStyle ProgressBarStyle; // 0x30
};

struct UWB_Loading_C {
	UWidgetAnimation* ANI_LoadingStart; // 0x398
	UWidgetAnimation* ANI_Loading; // 0x3a0
	UImage* Image_31; // 0x3a8
	UImage* IMG_ContentBG; // 0x3b0
	UCrowWidgetImage* IMG_Loading_In_2; // 0x3b8
	UWB_LoadingModeDescSlot_C* WB_LoadingModeDescSlot_1; // 0x3c0
	UWB_LoadingModeDescSlot_C* WB_LoadingModeDescSlot_2; // 0x3c8
	UWB_LoadingModeDescSlot_C* WB_LoadingModeDescSlot_3; // 0x3d0
};

struct UWB_Crosshair_Mh6_RocketFord_First_C {
	UImage* IMG_Crosshair_Gauge; // 0x428
	UImage* IMG_Crosshair_Gauge_2; // 0x430
	UImage* IMG_Crosshair_Moving; // 0x438
	UImage* IMG_Crosshair_Point_2; // 0x440
	UWB_Vehicle_Warning_Heli_C* WB_Vehicle_Damage; // 0x448
};

struct UDistributionVectorConstant {
	FVector Constant; // 0x38
	char bLockAxes : 1; // 0x44
	EDistributionVectorLockFlags LockedAxes; // 0x48
};

struct UMeshInspectorProperties {
	bool bWireframe; // 0x60
	bool bBoundaryEdges; // 0x61
	bool bBowtieVertices; // 0x62
	bool bPolygonBorders; // 0x63
	bool bUVSeams; // 0x64
	bool bUVBowties; // 0x65
	bool bNormalSeams; // 0x66
	bool bNormalVectors; // 0x67
	bool bTangentVectors; // 0x68
	float NormalLength; // 0x6c
	float TangentLength; // 0x70
};

struct UVirtualTexture2D {
	FVirtualTextureBuildSettings Settings; // 0x100
	bool bContinuousUpdate; // 0x10c
	bool bSinglePhysicalSpace; // 0x10d
};

struct UOculusResourceHolder {
	UMaterial* PokeAHoleMaterial; // 0x28
};

struct UGroomCreateFollicleMaskOptions {
	int32_t Resolution; // 0x28
	int32_t RootRadius; // 0x2c
	TArray<FFollicleMaskOptions> Grooms; // 0x30
};

struct UNamedInterfaces {
	TArray<FNamedInterface> NamedInterfaces; // 0x28
	TArray<FNamedInterfaceDef> NamedInterfaceDefs; // 0x38
};

struct UCrowFullScreenWidgetBase {
	TArray<FCrowHideWidgetInfo> HideWidgetArray; // 0x350
};

struct UCrowLootingSlotWidget {
	UCrowLootingSlotItem* SlotItem; // 0x348
	UTextBlock* TXT_ItemSlot; // 0x350
	UVerticalBox* VB_ItemList; // 0x358
};

struct UCrowLobbyShopMenuTabWidget {
	UCrowWidgetToggleButton* WeaponModList; // 0x348
	UCrowWidgetToggleButton* WeaponModShopList; // 0x350
};

struct UVoxelBlendMeshesTool {
	UVoxelBlendMeshesToolProperties* BlendProperties; // 0x108
};

struct UTimecodeProvider {
	float FrameDelay; // 0x28
};

struct UNiagaraDataInterfaceAudioPlayer {
	USoundBase* SoundToPlay; // 0x38
	USoundAttenuation* Attenuation; // 0x40
	USoundConcurrency* Concurrency; // 0x48
	TArray<FName> ParameterNames; // 0x50
	bool bLimitPlaysPerTick; // 0x60
	int32_t MaxPlaysPerTick; // 0x64
	bool bStopWhenComponentIsDestroyed; // 0x68
};

struct UWB_A10Bombard_Indicator_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3c0
	UImage* IMG_Icon_A10; // 0x3c8
	UImage* IMG_Icon_Laser; // 0x3d0
	UImage* IMG_Icon_Strike; // 0x3d8
};

struct ABP_CrowWeaponPartsLaserSight_Side_M4A1_UNIQ_C {
	UParticleSystemComponent* FX_Wp_LaserLight_M001; // 0x260
	UCrowLaserBeamComponent* CrowLaserBeam; // 0x268
	USkeletalMeshComponent* M4A1_UNIQ_Lasersight_round; // 0x270
};

struct UNiagaraEmitter {
	bool bLocalSpace; // 0x28
	bool bDeterminism; // 0x29
	int32_t RandomSeed; // 0x2c
	EParticleAllocationMode AllocationMode; // 0x30
	int32_t PreAllocationCount; // 0x34
	FNiagaraEmitterScriptProperties UpdateScriptProps; // 0x38
	FNiagaraEmitterScriptProperties SpawnScriptProps; // 0x60
	ENiagaraSimTarget SimTarget; // 0x88
	FBox FixedBounds; // 0x8c
	int32_t MinDetailLevel; // 0xa8
	int32_t MaxDetailLevel; // 0xac
	FNiagaraDetailsLevelScaleOverrides GlobalSpawnCountScaleOverrides; // 0xb0
	FNiagaraPlatformSet Platforms; // 0xc8
	FNiagaraEmitterScalabilityOverrides ScalabilityOverrides; // 0xf8
	char bInterpolatedSpawning : 1; // 0x108
	char bFixedBounds : 1; // 0x108
	char bUseMinDetailLevel : 1; // 0x108
	char bUseMaxDetailLevel : 1; // 0x108
	char bOverrideGlobalSpawnCountScale : 1; // 0x108
	char bRequiresPersistentIDs : 1; // 0x108
	char bCombineEventSpawn : 1; // 0x108
	float MaxDeltaTimePerTick; // 0x10c
	uint32_t DefaultShaderStageIndex; // 0x110
	uint32_t MaxUpdateIterations; // 0x114
	TSet<uint32_t> SpawnStages; // 0x118
	char bSimulationStagesEnabled : 1; // 0x168
	char bDeprecatedShaderStagesEnabled : 1; // 0x168
	char bLimitDeltaTime : 1; // 0x168
	FString UniqueEmitterName; // 0x170
	TArray<UNiagaraRendererProperties*> RendererProperties; // 0x180
	TArray<FNiagaraEventScriptProperties> EventHandlerScriptProps; // 0x190
	TArray<UNiagaraSimulationStageBase*> SimulationStages; // 0x1a0
	UNiagaraScript* GPUComputeScript; // 0x1b0
	TArray<FName> SharedEventGeneratorIds; // 0x1b8
};

struct UEditNormalsTool {
	UEditNormalsToolProperties* BasicProperties; // 0x90
	UEditNormalsAdvancedProperties* AdvancedProperties; // 0x98
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xa0
};

struct UWorldComposition {
	TArray<ULevelStreaming*> TilesStreaming; // 0x48
	double TilesStreamingTimeThreshold; // 0x58
	bool bLoadAllTilesDuringCinematic; // 0x60
	bool bRebaseOriginIn3DSpace; // 0x61
	float RebaseOriginDistance; // 0x64
};

struct UMovieSceneTrack {
	FMovieSceneTrackEvalOptions EvalOptions; // 0x50
	bool bIsEvalDisabled; // 0x55
	FGuid EvaluationFieldGuid; // 0x58
	FMovieSceneTrackEvaluationField EvaluationField; // 0x68
};

struct UBTDecorator_Blackboard {
	int32_t IntValue; // 0x90
	float FloatValue; // 0x94
	FString StringValue; // 0x98
	FString CachedDescription; // 0xa8
	char OperationType; // 0xb8
	EBTBlackboardRestart NotifyObserver; // 0xb9
};

struct ACrowMergedSkeletalMeshCacheActor {
	TMap<int32_t, FCrowMergedMeshShareData> MapMergedMeshShareData; // 0x220
	TArray<UCrowLibraryMergeSKCTask*> QueuedAsyncTaskArray; // 0x270
};

struct UGizmoLocalVec2ParameterSource {
	FVector2D Value; // 0x48
	FGizmoVec2ParameterChange LastChange; // 0x50
};

struct UMovieSceneSkeletalAnimationTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
	bool bUseLegacySectionIndexBlend; // 0x90
	FMovieSceneSkeletalAnimRootMotionTrackParams RootMotionParams; // 0x98
	bool bBlendFirstChildOfRoot; // 0xc8
};

struct UAnimNotify_CLSCameraShake {
	UMatineeCameraShake* ShakeClass; // 0x38
	float Scale; // 0x40
};

struct UPawnAction_Repeat {
	UPawnAction* ActionToRepeat; // 0x98
	UPawnAction* RecentActionCopy; // 0xa0
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
};

struct UCrowCloudUIHandler {
	FCrowGameIconDisplayInfo GameIconDisplayInfo; // 0xb0
	TMap<int32_t, UCrowWorldMapIcon*> ContaminationAreaIcons; // 0x138
};

struct UCrowRecordScoreRankWidget {
	UListView* LV_Rank; // 0x378
	UCrowDropDownWidget* WB_Record_DropDown; // 0x380
	UCrowScoreRankSlotWidget* WB_RecordScoreRankSlot_My; // 0x388
	UCrowButton* GradeInfoButton; // 0x390
	FDateTime CurrentDateTime; // 0x398
	int32_t SelectedRankingScheduleIndex; // 0x3a0
	int32_t SelectedRankingDateInfoIndex; // 0x3a4
	ECrowRankingRecordType RankingRecordType; // 0x3a8
	ECrowRankingPeriodType RankingPeriodType; // 0x3a9
};

struct UCrowItemTableManager {
	TMap<UObject*, int32_t> AssetReferenceCache; // 0x28
	TArray<FCrowItemAssetElement> AssetReferenceArray; // 0x78
	TMap<uint32_t, FCrowWeaponTableRow> WeaponTable_I; // 0x88
	TMap<FString, FCrowWeaponTableRow> WeaponTable_S; // 0xd8
	TMap<uint32_t, FCrowWeaponVehicleTableRow> WeaponVehicleTable_I; // 0x128
	TMap<FString, FCrowWeaponVehicleTableRow> WeaponVehicleTable_S; // 0x178
	TMap<uint32_t, FCrowWeaponPartsBarrelTableRow> WeaponPartsBarrelTable_I; // 0x1c8
	TMap<FString, FCrowWeaponPartsBarrelTableRow> WeaponPartsBarrelTable_S; // 0x218
	TMap<uint32_t, FCrowWeaponPartsMagazineTableRow> WeaponPartsMagazineTable_I; // 0x268
	TMap<FString, FCrowWeaponPartsMagazineTableRow> WeaponPartsMagazineTable_S; // 0x2b8
	TMap<uint32_t, FCrowWeaponPartsMuzzleTableRow> WeaponPartsMuzzleTable_I; // 0x308
	TMap<FString, FCrowWeaponPartsMuzzleTableRow> WeaponPartsMuzzleTable_S; // 0x358
	TMap<uint32_t, FCrowWeaponPartsPistolGripTableRow> WeaponPartsPistolGripTable_I; // 0x3a8
	TMap<FString, FCrowWeaponPartsPistolGripTableRow> WeaponPartsPistolGripTable_S; // 0x3f8
	TMap<uint32_t, FCrowWeaponPartsPrimarySightTableRow> WeaponPartsPrimarySightTable_I; // 0x448
	TMap<FString, FCrowWeaponPartsPrimarySightTableRow> WeaponPartsPrimarySightTable_S; // 0x498
	TMap<uint32_t, FCrowWeaponPartsSecondarySightTableRow> WeaponPartsSecondarySightTable_I; // 0x4e8
	TMap<FString, FCrowWeaponPartsSecondarySightTableRow> WeaponPartsSecondarySightTable_S; // 0x538
	TMap<uint32_t, FCrowWeaponPartsSideBarrelTableRow> WeaponPartsSideBarrelTable_I; // 0x588
	TMap<FString, FCrowWeaponPartsSideBarrelTableRow> WeaponPartsSideBarrelTable_S; // 0x5d8
	TMap<uint32_t, FCrowWeaponPartsStockTableRow> WeaponPartsStockTable_I; // 0x628
	TMap<FString, FCrowWeaponPartsStockTableRow> WeaponPartsStockTable_S; // 0x678
	TMap<uint32_t, FCrowWeaponPartsUnderBarrelTableRow> WeaponPartsUnderBarrelTable_I; // 0x6c8
	TMap<FString, FCrowWeaponPartsUnderBarrelTableRow> WeaponPartsUnderBarrelTable_S; // 0x718
	TMap<uint32_t, FCrowAmmoTableRow> WeaponAmmoTable_I; // 0x768
	TMap<FString, FCrowAmmoTableRow> WeaponAmmoTable_S; // 0x7b8
	TMap<uint32_t, FCrowCharacterTableRow> CharacterTable_I; // 0x808
	TMap<FString, FCrowCharacterTableRow> CharacterTable_S; // 0x858
	TMap<uint32_t, FCrowClothHairTableRow> ClothItemTableHair_I; // 0x8a8
	TMap<uint32_t, FCrowClothHeadTableRow> ClothItemTableHead_I; // 0x8f8
	TMap<uint32_t, FCrowClothGlassesTableRow> ClothItemTableGlasses_I; // 0x948
	TMap<uint32_t, FCrowClothMaskTableRow> ClothItemTableMask_I; // 0x998
	TMap<uint32_t, FCrowClothTopTableRow> ClothItemTableTop_I; // 0x9e8
	TMap<uint32_t, FCrowClothTableBaseRow> ClothItemTableGloves_I; // 0xa38
	TMap<uint32_t, FCrowClothTableBaseRow> ClothItemTableBottom_I; // 0xa88
	TMap<uint32_t, FCrowClothTableBaseRow> ClothItemTableShoes_I; // 0xad8
	TMap<uint32_t, FCrowClothTableBaseRow> ClothItemTableOuter_I; // 0xb28
	TMap<uint32_t, FCrowClothTableBaseRow> ClothItemTableBackPack_I; // 0xb78
	TMap<uint32_t, FCrowClothTableBaseRow> ClothItemTableCostume_I; // 0xbc8
	TMap<uint32_t, FCrowClothBeardTableRow> ClothItemTableBeard_I; // 0xc18
	TMap<uint32_t, FCrowClothPatchTableRow> ClothItemTablePatch_I; // 0xc68
	TMap<FString, FCrowClothHairTableRow> ClothItemTableHair_S; // 0xcb8
	TMap<FString, FCrowClothHeadTableRow> ClothItemTableHead_S; // 0xd08
	TMap<FString, FCrowClothGlassesTableRow> ClothItemTableGlasses_S; // 0xd58
	TMap<FString, FCrowClothMaskTableRow> ClothItemTableMask_S; // 0xda8
	TMap<FString, FCrowClothTopTableRow> ClothItemTableTop_S; // 0xdf8
	TMap<FString, FCrowClothTableBaseRow> ClothItemTableGloves_S; // 0xe48
	TMap<FString, FCrowClothTableBaseRow> ClothItemTableBottom_S; // 0xe98
	TMap<FString, FCrowClothTableBaseRow> ClothItemTableShoes_S; // 0xee8
	TMap<FString, FCrowClothTableBaseRow> ClothItemTableOuter_S; // 0xf38
	TMap<FString, FCrowClothTableBaseRow> ClothItemTableBackPack_S; // 0xf88
	TMap<FString, FCrowClothTableBaseRow> ClothItemTableCostume_S; // 0xfd8
	TMap<FString, FCrowClothBeardTableRow> ClothItemTableBeard_S; // 0x1028
	TMap<FString, FCrowClothPatchTableRow> ClothItemTablePatch_S; // 0x1078
	TMap<uint32_t, FCrowArmorTableRow> ArmorTable_I; // 0x10c8
	TMap<FString, FCrowArmorTableRow> ArmorTable_S; // 0x1118
	TMap<uint32_t, FCrowInvenBagRow> InvenBagTable_I; // 0x1168
	TMap<FString, FCrowInvenBagRow> InvenBagTable_S; // 0x11b8
	TMap<uint32_t, FCrowCurrencyTableRow> CurrencyTable_I; // 0x1208
	TMap<FString, FCrowCurrencyTableRow> CurrencyTable_S; // 0x1258
	TMap<uint32_t, FCrowItemColorTableRowBase> ItemColorTableHair_I; // 0x12a8
	TMap<uint32_t, FCrowItemColorTableRowBase> ItemColorTableBeard_I; // 0x12f8
	TMap<uint32_t, FCrowVictoryPoseTableRow> VictoryPoseTable_I; // 0x1348
	TMap<uint32_t, FCrowVehicleTableRow> VehicleTable_I; // 0x1398
	TMap<FString, FCrowVehicleTableRow> VehicleTable_S; // 0x13e8
	TMap<uint32_t, FCrowWeaponCharmTableRow> WeaponPartsCharm_I; // 0x1438
	TMap<FString, FCrowWeaponCharmTableRow> WeaponPartsCharm_S; // 0x1488
	TMap<uint32_t, FCrowWeaponStickerTableRow> WeaponStickerTable_I; // 0x14d8
	TMap<FString, FCrowWeaponStickerTableRow> WeaponStickerTable_S; // 0x1528
	TMap<uint32_t, FCrowEtcTableRow> EtcTable_I; // 0x1578
	TMap<FString, FCrowEtcTableRow> EtcTable_S; // 0x15c8
	TMap<uint32_t, FCrowVehicleSkinTableRow> VehicleSkinTable_I; // 0x1618
	TMap<FString, FCrowVehicleSkinTableRow> VehicleSkinTable_S; // 0x1668
	TMap<uint32_t, FCrowBuffTableRow> BuffTable_I; // 0x16b8
	TMap<uint32_t, FCrowEyeColorTableBaseRow> ItemTableEyeColor_I; // 0x1708
	TMap<uint32_t, FCrowTattooTableRow> TattooTable_I; // 0x1758
	TMap<uint32_t, FCrowEmotionTableRow> EmotionTable_I; // 0x17a8
	TMap<uint32_t, FCrowSprayTableRow> SprayTable_I; // 0x17f8
	TMap<uint32_t, FCrowClanMarkTableRow> ClanMark_I; // 0x1848
	TMap<uint32_t, FCrowResultMVPTableRow> ResultMVPTable_I; // 0x1898
	TArray<FCrowItemRankPointTableRow> ItemRankPointTable_I; // 0x18e8
	TArray<FCrowCanEquipParts> WeaponCanEquipPartsArray; // 0x18f8
	TMap<uint32_t, FCrowRandomBoxTableRow> RandomBoxTable_I; // 0x1908
	TMap<uint32_t, FCrowParachuteSkinTableRow> ParachuteSkinTable_I; // 0x1958
};

struct ULightmassPortalComponent {
	UBoxComponent* PreviewBox; // 0x1f8
};

struct UCrowSettingsSlotWidget {
	TArray<FActionKeySlot> ActionSlots; // 0x360
	TArray<FAxisKeySlot> AxisSlots; // 0x370
	FSettingItem SettingItem; // 0x380
	FSettingItem PrevSettedItem; // 0x420
	ESettingKeySlotType RequestedKeySlotType; // 0x4c0
	TArray<UCrowSettingsSlotWidget*> SubItemWidgets; // 0x4c8
	bool bIsAxisKey; // 0x4d8
	UTextBlock* TB_SlotName; // 0x4e0
	UCrowButton* BT_SlotHover; // 0x4e8
	UWidgetSwitcher* WS_SlotTypes; // 0x4f0
	UCrowSettingsSlotKeyBindingWidget* WB_SettingsSlotKeyBinding; // 0x4f8
	UCrowSettingsSlotOnOffWidget* WB_SettingsSlotOnOff; // 0x500
	UCrowSettingsSlotSliderWidget* WB_SettingsSlotSlider; // 0x508
	UCrowSettingsSlotSelectionWidget* WB_SettingsSlotSelection; // 0x510
	UCrowSettingsSlotDropdownWidget* WB_SettingsSlotDropdown; // 0x518
	UCrowSettingsSlotButtonWidget* WB_SettingSlotButton; // 0x520
	UCrowSettingsSlotWidget* ParentSlotWidget; // 0x528
};

struct UCrowShopRewardPopupWidget {
	UCrowCustomizeOutfitSlotWidget* RewardItemWidget; // 0x348
	float ItemCreateDelayTime; // 0x350
	float PopupRemoveTime; // 0x354
	FString BuyComplateStringKey; // 0x358
	FString DesComplateStringKey; // 0x368
	UHorizontalBox* HB_RewardSlot; // 0x378
	UCrowButton* WB_BT_Confirm; // 0x380
	UTextBlock* TB_Package; // 0x388
	TArray<FCrowRewardItem> ItemList; // 0x390
	int32_t CurrentListIndex; // 0x3a0
	FTimerHandle CreateTimerHandle; // 0x3a8
	UUMGSequencePlayer* AnimPlayer; // 0x3b0
};

struct UMotoSynthSource {
	bool bConvertTo8Bit; // 0x28
	float DownSampleFactor; // 0x2c
	FRuntimeFloatCurve RPMCurve; // 0x30
	TArray<float> SourceData; // 0xb8
	TArray<int16_t> SourceDataPCM; // 0xc8
	int32_t SourceSampleRate; // 0xd8
	TArray<FGrainTableEntry> GrainTable; // 0xe0
};

struct UARPin {
	UARTrackedGeometry* TrackedGeometry; // 0x28
	USceneComponent* PinnedComponent; // 0x30
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	FMulticastInlineDelegate OnARTrackingStateChanged; // 0xc0
	FMulticastInlineDelegate OnARTransformUpdated; // 0xd0
};

struct APlayerController {
	UPlayer* Player; // 0x298
	APawn* AcknowledgedPawn; // 0x2a0
	UInterpTrackInstDirector* ControllingDirTrackInst; // 0x2a8
	AHUD* MyHUD; // 0x2b0
	APlayerCameraManager* PlayerCameraManager; // 0x2b8
	APlayerCameraManager* PlayerCameraManagerClass; // 0x2c0
	bool bAutoManageActiveCameraTarget; // 0x2c8
	FRotator TargetViewRotation; // 0x2cc
	float SmoothTargetViewRotationSpeed; // 0x2e4
	TArray<AActor*> HiddenActors; // 0x2f0
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x300
	float LastSpectatorStateSynchTime; // 0x314
	FVector LastSpectatorSyncLocation; // 0x318
	FRotator LastSpectatorSyncRotation; // 0x324
	int32_t ClientCap; // 0x330
	UCheatManager* CheatManager; // 0x338
	UCheatManager* CheatClass; // 0x340
	UPlayerInput* PlayerInput; // 0x348
	TArray<FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x350
	char bPlayerIsWaiting : 1; // 0x3d0
	char NetPlayerIndex; // 0x3d4
	UNetConnection* PendingSwapConnection; // 0x410
	UNetConnection* NetConnection; // 0x418
	float InputYawScale; // 0x42c
	float InputPitchScale; // 0x430
	float InputRollScale; // 0x434
	char bShowMouseCursor : 1; // 0x438
	char bEnableClickEvents : 1; // 0x438
	char bEnableTouchEvents : 1; // 0x438
	char bEnableMouseOverEvents : 1; // 0x438
	char bEnableTouchOverEvents : 1; // 0x438
	char bForceFeedbackEnabled : 1; // 0x438
	float ForceFeedbackScale; // 0x43c
	TArray<FKey> ClickEventKeys; // 0x440
	EMouseCursor DefaultMouseCursor; // 0x450
	EMouseCursor CurrentMouseCursor; // 0x451
	ECollisionChannel DefaultClickTraceChannel; // 0x452
	ECollisionChannel CurrentClickTraceChannel; // 0x453
	float HitResultTraceDistance; // 0x454
	uint16_t SeamlessTravelCount; // 0x458
	uint16_t LastCompletedSeamlessTravelCount; // 0x45a
	UInputComponent* InactiveStateInputComponent; // 0x4d0
	char bShouldPerformFullTickWhenPaused : 1; // 0x4d8
	UTouchInterface* CurrentTouchInterface; // 0x4f0
	ASpectatorPawn* SpectatorPawn; // 0x548
	bool bIsLocalPlayerController; // 0x554
	FVector SpawnLocation; // 0x558
};

struct UNiagaraLightRendererProperties {
	char bUseInverseSquaredFalloff : 1; // 0x80
	char bAffectsTranslucency : 1; // 0x80
	float RadiusScale; // 0x84
	FVector ColorAdd; // 0x88
	FNiagaraVariableAttributeBinding LightRenderingEnabledBinding; // 0x98
	FNiagaraVariableAttributeBinding LightExponentBinding; // 0xf0
	FNiagaraVariableAttributeBinding PositionBinding; // 0x148
	FNiagaraVariableAttributeBinding ColorBinding; // 0x1a0
	FNiagaraVariableAttributeBinding RadiusBinding; // 0x1f8
	FNiagaraVariableAttributeBinding VolumetricScatteringBinding; // 0x250
};

struct ACrowBuildingSelectableActorBase {
	char bIsSelectable : 1; // 0x220
};

struct APartyBeaconHost {
	UPartyBeaconState* State; // 0x248
	bool bLogoutOnSessionTimeout; // 0x2b0
	float SessionTimeoutSecs; // 0x2b4
	float TravelSessionTimeoutSecs; // 0x2b8
};

struct UCrowWorldInteractionAUD {
	bool IsAnimationStateHolder; // 0x28
	UStaticMesh* TriggerDataMesh; // 0x30
	FString LocalTextKey_Open; // 0x38
	FString LocalTextKey_Close; // 0x48
	FCrowWorldLayoutItemAnim AnimOpen; // 0x58
	FCrowWorldLayoutItemAnim AnimClose; // 0x88
	FCrowWorldLayoutItemAnim AnimBlocked; // 0xb8
};

struct UCrowCloudUpdaterComponent {
	bool bInitialized; // 0xb0
	TArray<FCrowCloudScapeUpdateData> ReservedRegisterData; // 0xb8
	UCrowCloudScapeDataAsset* DataAsset; // 0xc8
	TArray<FCrowCloudScapeUpdateData> CloudScapeDatas; // 0xd0
	TArray<FCrowCloudScapeUpdateData> HasCollisionCloudDatas; // 0xe0
	TMap<int32_t, int32_t> CloudScapeDataIndexMap; // 0xf0
};

struct UScrollBoxWidgetStyle {
	FScrollBoxStyle ScrollBoxStyle; // 0x30
};

struct ULevelSequencePlayer {
	FMulticastInlineDelegate OnCameraCut; // 0x680
};

struct AIntervalGizmoActor {
	UGizmoLineHandleComponent* UpIntervalComponent; // 0x220
	UGizmoLineHandleComponent* DownIntervalComponent; // 0x228
	UGizmoLineHandleComponent* ForwardIntervalComponent; // 0x230
};

struct USmoothWeightMapSetProperties {
	float MinSmoothMultiplier; // 0x80
};

struct UCrowDialogTooltip {
	URichTextBlock* TB_DialogSubTitle; // 0x348
	UImage* IMG_SoundEffect; // 0x350
	UImage* IMG_SoundBG; // 0x358
	UCrowDialogImageGuide* WB_DialogInfo; // 0x360
	UCanvasPanel* CP_Icon; // 0x368
	UImage* IMG_Icon; // 0x370
	UImage* IMG_Effect; // 0x378
	UWidgetAnimation* AniToolTipStart; // 0x380
	UWidgetAnimation* AniToolTipLoop; // 0x388
	UWidgetAnimation* AniToolTipEnd; // 0x390
	TArray<FCrowDialogTableRow> TableArray; // 0x398
	FName CurrentRowName; // 0x3a8
	ACrowWidgetParticle* CaptureClass; // 0x3b0
	UMaterialInterface* EffectMaterial; // 0x3b8
	ACrowWidgetParticle* CaptureActor; // 0x3c0
	UMaterialInstanceDynamic* DynamicMaterial; // 0x3c8
};

struct URuntimeVirtualTextureComponent {
	TSoftObjectPtr<AActor> BoundsAlignActor; // 0x1f8
	bool bSetBoundsButton; // 0x220
	bool bSnapBoundsToLandscape; // 0x221
	URuntimeVirtualTexture* VirtualTexture; // 0x228
	bool bEnableScalability; // 0x230
	uint32_t ScalabilityGroup; // 0x234
	bool bHidePrimitives; // 0x238
	UVirtualTextureBuilder* StreamingTexture; // 0x240
	int32_t StreamLowMips; // 0x248
	bool bBuildStreamingMipsButton; // 0x24c
	bool bEnableCompressCrunch; // 0x24d
	bool bUseStreamingLowMipsInEditor; // 0x24e
	bool bBuildDebugStreamingMips; // 0x24f
};

struct UBTTask_WaitBlackboardTime {
	FBlackboardKeySelector BlackboardKey; // 0x78
};

struct UVoxelMorphologyMeshesToolProperties {
	EMorphologyOperation Operation; // 0x60
	double Distance; // 0x68
	bool bSolidifyInput; // 0x70
	bool bRemoveInternalsAfterSolidify; // 0x71
	double OffsetSolidifySurface; // 0x78
};

struct UCrowConstructProgress {
	UProgressBar* PB_Progress; // 0x348
	UTextBlock* TXT_Progress; // 0x350
	FTimerHandle ProgressTimerHandle; // 0x368
	float BuildTime; // 0x370
	float StartBuildTime; // 0x374
};

struct UCrowListViewWidget {
	UCrowListItemWidget* ItemClass; // 0x348
	int32_t ColumnCount; // 0x350
	bool bIsMultiSelect; // 0x354
	UGridPanel* GD_ItemList; // 0x358
	TArray<UCrowListItemWidget*> ItemArray; // 0x360
};

struct UCrowDragDropWidgetBase {
	UImage* IMG_BackGround; // 0x360
	UCrowWidgetBase* ParentsWidgetClass; // 0x368
	UPaperSprite* DragItemImage; // 0x370
	bool LockDrag; // 0x378
	bool NotUseMouseButtonR; // 0x379
	bool UseLobby; // 0x37a
	UCrowDragItem* DragItem; // 0x380
	TArray<UWidget*> ActiveImageList; // 0x388
	UCrowWidgetBase* CreateDragItem; // 0x398
	UDragDropOperation* DragAndDropOperation; // 0x3a0
	UUserWidget* DragItemSubClass; // 0x3a8
};

struct UCrowObjectiveTimeWidget {
	UTextBlock* TB_Minute; // 0x348
	bool UseUpdate; // 0x350
	FSlateFontInfo UpdateFontInfo; // 0x358
};

struct UCrowSettingsExplanationWidget {
	UTextBlock* TB_Title; // 0x348
	UImage* IMG_Explanation; // 0x350
	UTextBlock* TB_Explanation; // 0x358
	FSettingItem ExplanationSettingItem; // 0x360
};

struct UMicroTransactionBase {
	TArray<FPurchaseInfo> AvailableProducts; // 0x38
	FString LastError; // 0x48
	FString LastErrorSolution; // 0x58
};

struct ULevelVariantSets {
	UObject* DirectorClass; // 0x28
	TArray<UVariantSet*> VariantSets; // 0x30
};

struct UARObjectComponent {
	FARObjectUpdatePayload ReplicatedPayload; // 0x280
};

struct ACrowWeaponRespawnKit {
	UObject* SquadRespawnRedClass; // 0x1ec8
	UObject* SquadRespawnBlueClass; // 0x1ed0
};

struct UCrowNetworkClient {
	FString ServerIP; // 0x30
	FString ServerPort; // 0x40
	ACrowSceneBase* CurrentScene; // 0x50
	FString UserId; // 0x58
	FString UserPassword; // 0x68
};

struct ACrowContaminationAreaEventActor {
	UBoxComponent* Root; // 0x220
	UStaticMeshComponent* OutsideMesh; // 0x228
	UStaticMeshComponent* InsideMesh; // 0x230
	bool IsActiveStart; // 0x238
	ECrowContaminationAreaType AreaType; // 0x239
	UStaticMesh* AreaShape; // 0x240
	UMaterialInterface* OutSideMaterial; // 0x248
	UMaterialInterface* InSideMaterial; // 0x250
	FVector DefaultAreaScale; // 0x258
	bool ShowNextExpansionAreaUI; // 0x264
	TArray<FContaminationAreaExpansionInfo> AreaExpansion; // 0x268
	float DamageTime; // 0x278
	int32_t MinDamage; // 0x27c
	int32_t MaxDamage; // 0x280
	UDamageType* DamageType; // 0x288
	FCrowGameIconDisplayInfo IconDisplayInfoActive; // 0x290
	bool ShowDebugShape; // 0x318
	float ScaleSyncTime; // 0x31c
	float ScaleSyncDistinction; // 0x320
	TArray<AActor*> OverlapUserArray; // 0x328
	FTimerHandle DmageTimerHandle; // 0x338
	bool bIsCheckStart; // 0x340
	int32_t CurrentExpansionStep; // 0x344
	ECrowContaminationAreaEventState CrowContaminationAreaState; // 0x348
	UCrowWorldMapIcon* ContaminationAreaIcon; // 0x350
	ACrowGameStateBase* GameState; // 0x358
	UCrowLocalPostProcessComponent* PostProcessComp; // 0x360
	float ScaleSyncDeletaTime; // 0x368
};

struct URiverGenerator {
	TArray<USplineMeshComponent*> SplineMeshComponents; // 0x28
};

struct UQuitMatchCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UBakeTransformTool {
	UBakeTransformToolProperties* BasicProperties; // 0x90
};

struct UCrowBattleIdentity {
	AActor* OwnerActor; // 0xb0
	FText UIName; // 0xb8
};

struct UWB_HUD_M1Abrams_Crosshair_Cannon_Third_C {
	UImage* IMG_Crosshair_Moving; // 0x450
	UImage* IMG_Crosshair_Moving_2; // 0x458
	UImage* IMG_Crosshair_Point_2; // 0x460
};

struct UParticleModuleTypeDataGpu {
	FGPUSpriteEmitterInfo EmitterInfo; // 0x30
	FGPUSpriteResourceData ResourceData; // 0x2b0
	float CameraMotionBlurAmount; // 0x410
	char bClearExistingParticlesOnInit : 1; // 0x414
};

struct UShapeComponent {
	UBodySetup* ShapeBodySetup; // 0x440
	UNavAreaBase* AreaClass; // 0x448
	FColor ShapeColor; // 0x450
	char bDrawOnlyIfSelected : 1; // 0x454
	char bShouldCollideWhenPlacing : 1; // 0x454
	char bDynamicObstacle : 1; // 0x454
};

struct UNiagaraComponent {
	UNiagaraSystem* Asset; // 0x440
	ENiagaraTickBehavior TickBehavior; // 0x448
	FNiagaraUserRedirectionParameterStore OverrideParameters; // 0x450
	char bForceSolo : 1; // 0x518
	char bEnableGpuComputeDebug : 1; // 0x518
	char bAutoDestroy : 1; // 0x544
	char bRenderingEnabled : 1; // 0x544
	char bAutoManageAttachment : 1; // 0x544
	char bAutoAttachWeldSimulatedBodies : 1; // 0x544
	float MaxTimeBeforeForceUpdateTransform; // 0x548
	TArray<FNiagaraMaterialOverride> EmitterMaterials; // 0x550
	FMulticastInlineDelegate OnSystemFinished; // 0x568
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x578
	FName AutoAttachSocketName; // 0x580
	EAttachmentRule AutoAttachLocationRule; // 0x588
	EAttachmentRule AutoAttachRotationRule; // 0x589
	EAttachmentRule AutoAttachScaleRule; // 0x58a
};

struct UARPointComponent {
	FARPointUpdatePayload ReplicatedPayload; // 0x278
};

struct AProceduralFoliageVolume {
	UProceduralFoliageComponent* ProceduralComponent; // 0x258
};

struct UCrowWorldHLODSettingAUD {
	int32_t LODLevel; // 0x28
};

struct UCrowButtonContainerBase {
	TArray<UCrowWidgetToggleButton*> ButtonList; // 0x348
	UCanvasPanel* CP_Main; // 0x358
	UWidget* MainTabPanel; // 0x360
	char DefaultIndex; // 0x368
	bool IsStartSelectDefaultIndex; // 0x369
	bool IsStartSelectAction; // 0x36a
	bool UseAutoButtonIndex; // 0x36b
};

struct USplineMeshComponent {
	FSplineMeshParams SplineParams; // 0x4d8
	FVector SplineUpDir; // 0x530
	float SplineBoundaryMin; // 0x53c
	FGuid CachedMeshBodySetupGuid; // 0x540
	UBodySetup* BodySetup; // 0x550
	float SplineBoundaryMax; // 0x558
	char bAllowSplineEditingPerInstance : 1; // 0x55c
	char bSmoothInterpRollScale : 1; // 0x55c
	char bMeshDirty : 1; // 0x55c
	ESplineMeshAxis ForwardAxis; // 0x55d
	float VirtualTextureMainPassMaxDrawDistance; // 0x560
};

struct UTetherPointSegmentDefinition {
	float Slack; // 0x28
	FTetherSegmentSimulationOptions SimulationOptions; // 0x2c
};

struct UCrowHitMarkerWidget {
	UWidgetSwitcher* WS_HitMarker; // 0x348
	UWidgetSwitcher* WS_HitMarker_Icon; // 0x350
	UWidgetAnimation* AniHit; // 0x358
	UWidgetAnimation* AniHitIcon; // 0x360
};

struct UInterpTrackColorProp {
	FName PropertyName; // 0x90
};

struct UInterpTrackVectorProp {
	FName PropertyName; // 0x90
};

struct UReverbEffect {
	bool bBypassEarlyReflections; // 0x28
	float ReflectionsDelay; // 0x2c
	float GainHF; // 0x30
	float ReflectionsGain; // 0x34
	bool bBypassLateReflections; // 0x38
	float LateDelay; // 0x3c
	float DecayTime; // 0x40
	float Density; // 0x44
	float Diffusion; // 0x48
	float AirAbsorptionGainHF; // 0x4c
	float DecayHFRatio; // 0x50
	float LateGain; // 0x54
	float Gain; // 0x58
	float RoomRolloffFactor; // 0x5c
};

struct UImplicitSmoothProperties {
	float SmoothSpeed; // 0x60
	float Smoothness; // 0x64
	bool bPreserveUVs; // 0x68
	float VolumeCorrection; // 0x6c
};

struct UVehicleAnimInstance {
	UWheeledVehicleMovementComponent* WheeledVehicleMovementComponent; // 0xa40
};

struct USmoothBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	bool bPreserveUVFlow; // 0x68
};

struct USoundNodeQualityLevel {
	int32_t CookedQualityLevelIndex; // 0x48
};

struct USharpPullKelvinletBrushOpProps {
	float Falloff; // 0x70
	float Depth; // 0x74
};

struct UParticleModuleVelocityCone {
	FRawDistributionFloat Angle; // 0x38
	FRawDistributionFloat Velocity; // 0x68
	FVector Direction; // 0x98
};

struct ACrowGameModeDM {
	uint32_t PlayerKillLimit; // 0x4a8
	uint32_t GodModeTime; // 0x4ac
	bool IsEnableFastRespawn; // 0x4b0
	int32_t FastRespawnPrice; // 0x4b4
	FTimerHandle TimerHandle_ReturnToEntry; // 0x4b8
	TArray<uint32_t> WinnerPlayerArray; // 0x4c0
};

struct UCrowMessageBoxWidget {
	FCrowMessageBoxInfo CurrentMBInfo; // 0x350
	UCanvasPanel* CP_Contents; // 0x380
	URichTextBlock* RTB_MessageContents; // 0x388
	UHorizontalBox* HB_CrowWidgetButtons; // 0x390
	USpacer* SP_CrowWidgetSpacer; // 0x398
	UCrowButton* BT_MessageButton_2; // 0x3a0
	UTextBlock* TB_MessageButton_2; // 0x3a8
	UCrowButton* BT_MessageButton_3; // 0x3b0
	UTextBlock* TB_MessageButton_3; // 0x3b8
	UBackgroundBlur* BackgroundBlur; // 0x3c0
	UWidgetSwitcher* WS_MessageSwitcher; // 0x3c8
	UImage* IMG_MessageContents; // 0x3d0
	URichTextBlock* RTB_IconBoxMessage; // 0x3d8
};

struct ACrowSkydivingSpawner {
	ACrowSkydivingPawn* SkydivingPawnClass; // 0x220
};

struct UCrowWorldMapGridWidget {
	float CurrMagnification; // 0x348
	UUserWidget* GridSlot; // 0x350
	FVector2D GridLineSize; // 0x358
	float GridSize; // 0x360
	UPaperSprite* HorizentalImage; // 0x368
	UPaperSprite* VerticalImage; // 0x370
	bool TileImage; // 0x378
	UHorizontalBox* GridPanelX; // 0x380
	UVerticalBox* GridPanelY; // 0x388
	TArray<UCrowWorldMapGridSlot*> HorizontalSlotList; // 0x390
	TArray<UCrowWorldMapGridSlot*> VerticalSlotList; // 0x3a0
};

struct UParticleModuleAttractorParticle {
	FName EmitterName; // 0x30
	FRawDistributionFloat Range; // 0x38
	char bStrengthByDistance : 1; // 0x68
	FRawDistributionFloat Strength; // 0x70
	char bAffectBaseVelocity : 1; // 0xa0
	EAttractorParticleSelectionMethod SelectionMethod; // 0xa4
	char bRenewSource : 1; // 0xa8
	char bInheritSourceVel : 1; // 0xa8
	int32_t LastSelIndex; // 0xac
};

struct UNiagaraDataInterfacePlatformSet {
	FNiagaraPlatformSet Platforms; // 0x38
};

struct UPlaneCutOperatorFactory {
	UPlaneCutTool* CutTool; // 0x30
};

struct UMovieSceneActorReferenceSection {
	FMovieSceneActorReferenceData ActorReferenceData; // 0xe8
	FIntegralCurve ActorGuidIndexCurve; // 0x198
	TArray<FString> ActorGuidStrings; // 0x218
};

struct ACrowConquestUAVSupportActor {
	float StartDelay; // 0x220
	float ReconTime; // 0x224
	float ReconRadius; // 0x228
	UAkAudioEvent* MoveStartSound; // 0x230
	UAkAudioEvent* StartSound; // 0x238
	UAkAudioEvent* EndSound; // 0x240
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x248
	char OwnerTeamID; // 0x2d0
	uint64_t OwnerServerKey; // 0x2d8
	ECrowConquestUAVSupportState CurrentState; // 0x2e0
	ACrowGameStateConquest* GameState; // 0x2e8
};

struct UCrowHUDWidgetFullScreenTop {
	UCrowDeathInfoWidget* WB_DeathInfo; // 0x348
	UCrowWidgetDying* WB_2ndWindWidget; // 0x350
	UCrowStartModeTitleWidget* WB_StartModTitle; // 0x358
};

struct ACrowRespawnAirPlaneCamera {
	UBoxComponent* BoxCollision; // 0x220
	UCrowSpringArmComponent* SpringArmComp; // 0x228
	UCameraComponent* CameraComp; // 0x230
	UMatineeCameraShake* CameraShake; // 0x238
	ACrowAirPlaneRespawnSplineActor* SelectedSplineActor; // 0x240
	ACrowRespawnAirPlaneActor* TargetActor; // 0x248
};

struct UNiagaraRendererProperties {
	FNiagaraPlatformSet Platforms; // 0x28
	int32_t SortOrderHint; // 0x58
	bool bIsEnabled; // 0x5c
	bool bMotionBlurEnabled; // 0x5d
};

struct UBTTask_CrowFireTarget {
	float FireTime; // 0x98
	float CoolDownTime; // 0x9c
	float CooldownRandomDeviation; // 0xa0
};

struct UCrowModSelectButtonWidget {
	UImage* IMG_ModIcon; // 0x348
	UTextBlock* TB_MOD_Name; // 0x350
	UTextBlock* TB_Mod_Name_Select; // 0x358
	UTextBlock* TB_Mod_Desc; // 0x360
	UCrowToggleButton* CTB_Select_Mod; // 0x368
	USizeBox* SB_ModIcon; // 0x370
	ECrowGameMode GameMod; // 0x388
	FSlateBrush ModIcon; // 0x390
	FText GameModName; // 0x418
	FText GameModDescription; // 0x430
	float DefaultButtonBottom; // 0x448
	float SelectedButtonBottom; // 0x44c
};

struct UAkAudioEventData {
	float MaxAttenuationRadius; // 0xb8
	bool IsInfinite; // 0xbc
	float MinimumDuration; // 0xc0
	float MaximumDuration; // 0xc4
	TMap<FString, UAkAssetDataSwitchContainer*> LocalizedMedia; // 0xc8
	TSet<UAkAudioEvent*> PostedEvents; // 0x118
	TSet<UAkAuxBus*> UserDefinedSends; // 0x168
	TSet<UAkTrigger*> PostedTriggers; // 0x1b8
	TSet<UAkGroupValue*> GroupValues; // 0x208
};

struct UAcceptOutputProperties {
	bool bExportSeparatedPiecesAsNewMeshAssets; // 0x60
};

struct USoundSubmixWithParentBase {
	USoundSubmixBase* ParentSubmix; // 0x38
};

struct UEnvQueryGenerator_ActorsOfClass {
	AActor* SearchedActorClass; // 0x50
	FAIDataProviderBoolValue GenerateOnlyActorsInRadius; // 0x58
	FAIDataProviderFloatValue SearchRadius; // 0x90
	UEnvQueryContext* SearchCenter; // 0xc8
};

struct UCrowLobbyOutfitSlotListWidget {
	UCrowButton* BT_NameChange; // 0x380
};

struct UCrowWeaponRecoilComponent {
	AController* Controller; // 0xb0
	ACrowPlayerControllerBase* PlayerController; // 0xb8
	FWeaponRecoilInfo NormalRecoilInfo; // 0xc0
	TArray<FRotator> NormalRotationArray; // 0xe0
	FWeaponRecoilInfo AimRecoilInfo; // 0xf0
	TArray<FRotator> AimRotationArray; // 0x110
	UCurveFloat* IncreaseCurve; // 0x148
	FCrowWeaponTableRow WeaponTable; // 0x180
	FCrowWeaponPartsOptions PartsOptions; // 0x13a0
};

struct UMovieSceneVectorTrack {
	int32_t NumChannelsUsed; // 0xb0
};

struct USpringArmComponent {
	float TargetArmLength; // 0x1f8
	FVector SocketOffset; // 0x1fc
	FVector TargetOffset; // 0x208
	float ProbeSize; // 0x214
	ECollisionChannel ProbeChannel; // 0x218
	char bDoCollisionTest : 1; // 0x21c
	char bUsePawnControlRotation : 1; // 0x21c
	char bInheritPitch : 1; // 0x21c
	char bInheritYaw : 1; // 0x21c
	char bInheritRoll : 1; // 0x21c
	char bEnableCameraLag : 1; // 0x21c
	char bEnableCameraRotationLag : 1; // 0x21c
	char bUseCameraLagSubstepping : 1; // 0x21c
	char bDrawDebugLagMarkers : 1; // 0x21d
	float CameraLagSpeed; // 0x220
	float CameraRotationLagSpeed; // 0x224
	float CameraLagMaxTimeStep; // 0x228
	float CameraLagMaxDistance; // 0x22c
};

struct UNiagaraDataInterfaceGrid2DCollection {
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xf8
	ENiagaraGpuBufferFormat OverrideBufferFormat; // 0x118
	char bOverrideFormat : 1; // 0x119
	TMap<uint64_t, UTextureRenderTarget2DArray*> ManagedRenderTargets; // 0x170
};

struct ACrowWorldEventMeteor {
	TArray<FCrowMeteorInfo> MeteorInfoArray; // 0x370
	TArray<ACrowEscapePointActor*> EscapePointArray; // 0x380
	int32_t EscapePointSpawnCount; // 0x390
};

struct UCurveLinearColorAtlas {
	uint32_t TextureSize; // 0x100
	TArray<UCurveLinearColor*> GradientCurves; // 0x108
};

struct UMaterialExpressionConstant4Vector {
	FLinearColor Constant; // 0x40
};

struct UMovieSceneCameraShakeTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x80
};

struct UOnlineEngineInterfaceImpl {
	FName VoiceSubsystemNameOverride; // 0x28
};

struct UInterpTrackInstBoolProp {
	bool ResetBool; // 0x60
};

struct USoundConcurrency {
	FSoundConcurrencySettings Concurrency; // 0x28
};

struct UEnvQueryTest_PathfindingBatch {
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x280
};

struct UEdGraph {
	UEdGraphSchema* Schema; // 0x28
	TArray<UEdGraphNode*> Nodes; // 0x30
	char bEditable : 1; // 0x40
	char bAllowDeletion : 1; // 0x40
	char bAllowRenaming : 1; // 0x40
};

struct USoundfieldSubmix {
	FName SoundfieldEncodingFormat; // 0x40
	USoundfieldEncodingSettingsBase* EncodingSettings; // 0x48
	TArray<USoundfieldEffectBase*> SoundfieldEffectChain; // 0x50
	USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x60
};

struct UTriangleSetComponent {
	FBoxSphereBounds Bounds; // 0x468
	bool bBoundsDirty; // 0x484
};

struct UAnimationSharingStateProcessor {
	TSoftObjectPtr<UEnum> AnimationStateEnum; // 0x28
};

struct UCrowConquestAreaGauge {
	UWidgetAnimation* AnimIdle; // 0x4a8
	UWidgetAnimation* AnimHover; // 0x4b0
	UWidgetAnimation* AnimClick; // 0x4b8
	UWidgetAnimation* AnimDisableActive; // 0x4c0
	UCanvasPanel* CP_Root; // 0x4c8
	UCanvasPanel* CP_LocateArrow; // 0x4d0
	UCanvasPanel* CP_AnchorRoot; // 0x4d8
	UCanvasPanel* CP_Icon; // 0x4e0
	UCanvasPanel* CP_Vehicle; // 0x4e8
	UTextBlock* TB_Name; // 0x4f0
	UTextBlock* TB_Distance; // 0x4f8
	UTextBlock* TB_BaseAlphabet; // 0x500
	ACrowConquestArea* TargetActor; // 0x508
	TArray<UCrowWidgetConquestVehicleButton*> SpawnerButtonArray; // 0x510
	UCrowRespawnMapWidget* RespawnMapWidget; // 0x520
};

struct UCrowFadeScreenWidget {
	UImage* IMG_FadeCutton; // 0x348
	UWidgetAnimation* AniFadeScreen; // 0x350
};

struct UCrowLobbyProfileWidget {
	UCrowWidgetImage* IMG_UserInfoBg; // 0x348
	UTextBlock* TB_UserID; // 0x350
	UCrowWidgetImage* IMG_LvIcon; // 0x358
	UTextBlock* TB_UserLevel; // 0x360
	UCrowClanEmblemWidget* WB_ClanEmblem; // 0x368
	UTextBlock* TB_ClanName; // 0x370
	UCrowButtonContainerBase* WB_Profile_Tab; // 0x378
	UWidgetSwitcher* WS_ProfileInfo; // 0x380
	UCrowLobbyProfileMercenaryWidget* WB_ProfileMercenary; // 0x388
	UCrowLobbyProfileSeasonWidget* WB_ProfileSeason; // 0x390
	UCrowButton* BT_Close; // 0x398
	ACrowSceneLobby* SceneLobby; // 0x3a0
	FDateTime CurrentDateTime; // 0x3a8
	FString UserNickName; // 0x3b0
	ECrowRankingRecordType SelectedTabType; // 0x3c0
	ECrowLobbyProfileRecordType SelectedMercemaryRecordType; // 0x3c1
	int32_t SelectedMercemaryRankingDateInfoIndex; // 0x3c4
	ECrowLobbyProfileRecordType SelectedSeasonRecordType; // 0x3c8
	int32_t SelectedSeasonRankingDateInfoIndex; // 0x3cc
};

struct UCrowRotorTaskGroundFx {
	UDataTable* GroundFxDataTable; // 0x40
	UParticleSystemComponent* GroundFx; // 0x48
	EPhysicalSurface CurrentSurfaceType; // 0x50
};

struct UCrowShopPurchasePopup {
	UCrowShopItemSlotWidget* WB_Shop_Itemslot; // 0x348
	UTextBlock* TB_ItemName; // 0x350
	UTextBlock* TB_ItemDesc; // 0x358
	UTextBlock* TB_Money; // 0x360
	UScaleBox* SCB_US; // 0x368
	UImage* IMG_GoldIcon; // 0x370
	UCrowButton* BT_Buy; // 0x378
	UCrowButton* BT_Cancel; // 0x380
	ECrowSpecificPurchaseType PurchaseType; // 0x388
	int32_t FreePassTargetLevel; // 0x38c
	uint64_t FreePassRCPCost; // 0x390
	FCrowShopTableRow ShopData; // 0x398
};

struct UOctreeDynamicMeshComponent {
	bool bExplicitShowWireframe; // 0x4c8
};

struct UAkLateReverbComponent {
	char bEnable : 1; // 0x1f8
	UAkAuxBus* AuxBus; // 0x200
	FString AuxBusName; // 0x208
	float SendLevel; // 0x218
	float FadeRate; // 0x21c
	float Priority; // 0x220
	UAkLateReverbComponent* NextLowerPriorityComponent; // 0x228
};

struct UOnlinePIESettings {
	bool bOnlinePIEEnabled; // 0x38
	TArray<FPIELoginSettingsInternal> Logins; // 0x40
};

struct UCrowRadialMenuSquadMatch {
	UCrowRadialButtonSquadMatch* WB_RadialMenu_5Button_1; // 0x3d0
	UCrowRadialButtonSquadMatch* WB_RadialMenu_5Button_2; // 0x3d8
	UCrowRadialButtonSquadMatch* WB_RadialMenu_5Button_3; // 0x3e0
	UCrowRadialButtonSquadMatch* WB_RadialMenu_5Button_4; // 0x3e8
	UCrowRadialButtonSquadMatch* WB_RadialMenu_5Button_5; // 0x3f0
	UTextBlock* TB_Money; // 0x3f8
};

struct UToIntegerField {
	UFieldNodeFloat* FloatField; // 0xb0
};

struct UARQRCodeComponent {
	FARQRCodeUpdatePayload ReplicatedPayload; // 0x280
};

struct UPcMNew_FP_Test_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x6f0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3; // 0x6f8
	FAnimNode_Fabrik AnimGraphNode_Fabrik_3; // 0x720
	FAnimNode_Fabrik AnimGraphNode_Fabrik_2; // 0x8b0
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0xa40
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0xbd0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator; // 0xc90
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_10; // 0xce0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_16; // 0xe38
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_15; // 0xe60
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_9; // 0xe88
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_14; // 0xfe0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x1008
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_13; // 0x10c8
	FAnimNode_Root AnimGraphNode_Root_2; // 0x10f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x1120
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x1148
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x1170
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x1198
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x11c0
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x11e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x1218
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x1298
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x12c8
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x1348
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x1378
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x1418
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x1498
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x1518
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x15b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x1658
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x16d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x1758
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x17d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1888
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x1908
	FAnimNode_StateMachine AnimGraphNode_StateMachine_5; // 0x1938
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x19e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x1a10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x1a38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x1a60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x1a88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x1ab0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x1ad8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x1b00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x1b28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x1b50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x1b78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x1ba0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x1bc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x1bf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x1c18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x1c40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x1c68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x1c90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x1cb8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x1ce0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_12; // 0x1da0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x1dc8
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x1e48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x1e78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x1ea0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x1ec8
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x1f48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x1f78
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x1ff8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2028
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x20a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x20d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x2100
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x21e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x2268
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x2308
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x23a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x2428
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x2510
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x25c0
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x26a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_11; // 0x26d8
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x2700
	FAnimNode_StateMachine AnimGraphNode_StateMachine_4; // 0x2730
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_8; // 0x27e0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_7; // 0x2938
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_6; // 0x2a90
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0x2be8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3; // 0x2d40
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_2; // 0x2d60
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK; // 0x2f40
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_10; // 0x3120
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x3148
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x3170
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_9; // 0x3198
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x31c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0x31f0
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x3218
	FAnimNode_StateMachine AnimGraphNode_StateMachine_3; // 0x3248
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0x32f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0x3450
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0x3478
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x35d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x35f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x3620
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x3648
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x3670
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x3698
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x36c0
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x36e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x3718
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x3740
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x3770
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x3798
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x37c8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x3878
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x39d0
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x39f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x3a40
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive; // 0x3b28
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x3bf8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x3c40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3d28
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x3da8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x3e48
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x3e78
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x3f28
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose; // 0x4080
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x4198
	FAnimNode_Slot AnimGraphNode_Slot; // 0x41c0
	FAnimNode_CopyPoseFromMesh AnimGraphNode_CopyPoseFromMesh; // 0x4208
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x43e0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x4408
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x44c8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_4; // 0x4590
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0x4698
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x46b8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0x46d8
	FAnimNode_AimLocationGather AnimGraphNode_CharacterAimLocationGather; // 0x47e0
	FAnimNode_Root AnimGraphNode_Root; // 0x4810
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x4840
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x4948
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer; // 0x4968
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x4a18
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x4b20
	USkeletalMeshComponent* TargetMesh; // 0x4b40
};

struct USizeBoxSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct ACrowIronShieldActor {
	UBoxComponent* BoxComponent; // 0x220
	USkeletalMeshComponent* MeshComponent; // 0x228
	float HP; // 0x230
	float LifeTime; // 0x234
	float BuildDistance; // 0x238
	UAnimationAsset* BuildAni; // 0x240
	UParticleSystem* DestroyEffect; // 0x248
	UAkAudioEvent* DestroySound; // 0x250
	float BuildHeight; // 0x258
	ACrowPlayerControllerBase* PlayerController; // 0x260
	ACrowCharacterPawn* CharacterPawn; // 0x268
};

struct UAnimSharingTransitionInstance {
	TWeakObjectPtr<USkeletalMeshComponent> FromComponent; // 0x2b8
	TWeakObjectPtr<USkeletalMeshComponent> ToComponent; // 0x2c0
	float BlendTime; // 0x2c8
	bool bBlendBool; // 0x2cc
};

struct UWindowTitleBarArea {
	bool bWindowButtonsEnabled; // 0x120
	bool bDoubleClickTogglesFullscreen; // 0x121
};

struct ACrowGameStartCameraWork {
	UStaticMeshComponent* CameraSpot; // 0x7a0
	int32_t MapIndex; // 0x7a8
	float PlayTime; // 0x7ac
	UAkAudioEvent* BGMSound_Loop; // 0x7b0
	UAkAudioEvent* BGMSound_End; // 0x7b8
	UCrowGameOpeningWidget* WidgetClass; // 0x7c0
	TArray<FCrowStartCameraWorkInfo> InfoArray; // 0x7c8
	UCrowGameOpeningWidget* OpeningWidget; // 0x7d8
	FCrowStartCameraWorkInfo CurrentInfo; // 0x7e8
};

struct ACrowItemTableOverviewElement {
	ACrowItemTableOverview* OverviewActor; // 0x220
};

struct UMaterialExpressionSphereMask {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Radius; // 0x68
	FExpressionInput Hardness; // 0x7c
	float AttenuationRadius; // 0x90
	float HardnessPercent; // 0x94
};

struct UDistributionVectorUniform {
	FVector Max; // 0x38
	FVector Min; // 0x44
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x55
	char bUseExtremes : 1; // 0x58
};

struct UEditNormalsToolProperties {
	bool bRecomputeNormals; // 0x60
	ENormalCalculationMethod NormalCalculationMethod; // 0x61
	bool bFixInconsistentNormals; // 0x62
	bool bInvertNormals; // 0x63
	ESplitNormalMethod SplitNormalMethod; // 0x64
	float SharpEdgeAngleThreshold; // 0x68
	bool bAllowSharpVertices; // 0x6c
};

struct UHoleFillOperatorFactory {
	UHoleFillTool* FillTool; // 0x30
};

struct UDistributionFloatUniform {
	float Min; // 0x38
	float Max; // 0x3c
};

struct UDisplaceMeshDirectionalFilterProperties {
	bool bEnableFilter; // 0x60
	FVector FilterDirection; // 0x64
	float FilterWidth; // 0x70
};

struct UTetherGuideSplineMetadata {
	TArray<UTetherPointSegmentDefinition*> PointSegmentDefinitions; // 0x28
};

struct ADebugCameraController {
	char bShowSelectedInfo : 1; // 0x570
	char bIsFrozenRendering : 1; // 0x570
	char bIsOrbitingSelectedActor : 1; // 0x570
	char bOrbitPivotUseCenter : 1; // 0x570
	char bEnableBufferVisualization : 1; // 0x570
	char bEnableBufferVisualizationFullMode : 1; // 0x570
	char bIsBufferVisualizationInputSetup : 1; // 0x570
	char bLastDisplayEnabled : 1; // 0x570
	UDrawFrustumComponent* DrawFrustum; // 0x578
	AActor* SelectedActor; // 0x580
	UPrimitiveComponent* SelectedComponent; // 0x588
	FHitResult SelectedHitPoint; // 0x590
	APlayerController* OriginalControllerRef; // 0x620
	UPlayer* OriginalPlayer; // 0x628
	float SpeedScale; // 0x630
	float InitialMaxSpeed; // 0x634
	float InitialAccel; // 0x638
	float InitialDecel; // 0x63c
};

struct AAkAmbientSound {
	UAkAudioEvent* AkAudioEvent; // 0x220
	UAkComponent* AkComponent; // 0x228
	bool StopWhenOwnerIsDestroyed; // 0x230
	bool AutoPost; // 0x231
};

struct ULayer {
	FName LayerName; // 0x28
	char bIsVisible : 1; // 0x30
	TArray<FLayerActorStats> ActorStats; // 0x38
};

struct UMovieSceneLevelVisibilityTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct ACrowAttachedWorldIcon {
	USceneComponent* IconLocation; // 0x220
	ECrowIconType IconType; // 0x228
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x230
	AActor* ParentActor; // 0x2b8
	UCrowWorldIconWidgetBase* Indicator; // 0x2c0
};

struct UCrowConquestGroupWidget {
	UWidgetAnimation* AniConquest; // 0x348
};

struct UCrowDialogImageGuide {
	UTextBlock* TB_GuideTitle; // 0x348
	UImage* IMG_Guide; // 0x350
	UTextBlock* TB_GuideDesc; // 0x358
	UWidgetAnimation* AniShow; // 0x360
	UWidgetAnimation* AniHide; // 0x368
};

struct AAkAcousticPortal {
	AkAcousticPortalState InitialState; // 0x258
	float ObstructionRefreshInterval; // 0x25c
	ECollisionChannel ObstructionCollisionChannel; // 0x260
};

struct UCrowLobbyRecordScoreWidget {
	UCrowButtonContainerBase* WB_RecordTab_Vertical; // 0x348
	UWidgetSwitcher* WS_Total; // 0x350
	UCrowRecordScoreTotalRankWidget* WB_RecordScoreTotalRank; // 0x358
	UCrowRecordScoreRankWidget* WB_RecordScoreRank_Grade; // 0x360
	UCrowRecordScoreRankWidget* WB_RecordScoreRank_Season; // 0x368
	UCrowRecordScoreRankWidget* WB_RecordScoreRank_Conquest; // 0x370
	UCrowRecordScoreRankWidget* WB_RecordScoreRank_Squad; // 0x378
	UCrowGradeInfoPopupWidget* WB_GradeInfoPopup; // 0x380
	UCrowScoreRankSlotGradeData* MyGradeData; // 0x388
	UCrowScoreRankSlotGradeData* MySeasonData; // 0x390
	UCrowScoreRankSlotModeData* MyConquestData; // 0x398
	UCrowScoreRankSlotModeData* MySquadData; // 0x3a0
	ECrowLobbyRecordScoreTab CurrentRecordScoreTab; // 0x3a8
	UCrowRecordScoreRankWidget* CurrentRecordScoreRankWidget; // 0x3b0
	UCrowScoreRankSlotData* CurrentMyData; // 0x3b8
	bool bDoEntryInitialized; // 0x3d4
	float EntryInitializedTimer; // 0x3d8
	int32_t LastEntryInitializedIndex; // 0x3dc
};

struct ACrowPlayerControllerBombMission {
	bool bIsInLoadoutVolume; // 0xef8
};

struct UCrowSquadMatchMineralWidget {
	UProgressBar* PB_ResourceCount; // 0x348
	UTextBlock* TB_CurrencyCount; // 0x350
	UTextBlock* TB_TagetCurrency; // 0x358
};

struct UMaterialFunctionInstance {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xb0
};

struct UCrowBombMissionTeamScoreWidget {
	UImage* IMGTeamIconAttack; // 0x348
	UImage* IMGTeamIconDefence; // 0x350
	UTextBlock* TBRound; // 0x358
	UTextBlock* TBTeamName; // 0x360
	UTextBlock* TBScore; // 0x368
	FLinearColor RedTeamColor; // 0x370
	FLinearColor BlueTeamColor; // 0x380
};

struct ACrowSprayActor {
	UCrowDecalComponent* DecalComponent; // 0x228
};

struct UAkAssetData {
	uint32_t CachedHash; // 0x28
};

struct UCrowSeatSquadIconWidget {
	UImage* IMG_Icon_Driver; // 0x348
	UImage* IMG_Icon_AssistDriver; // 0x350
	UImage* IMG_Icon_Shooter; // 0x358
	UImage* IMG_Icon_ArmedPassenger; // 0x360
	UImage* IMG_Icon_Passenger; // 0x368
	UTextBlock* TB_Index; // 0x370
	ECrowSquadRole PrevSquadRole; // 0x378
};

struct UCrowWorldTerrainSetup {
	FName TAG_HIDE_SPLINE; // 0x28
	FName TAG_HIDE_FOLIAGE; // 0x30
	UWorld* World; // 0x38
	TSet<ULevelStreaming*> ActiveStreamingLevels; // 0x40
	TArray<ULevelStreaming*> LoadedLevelsCached; // 0x90
};

struct UAREnvironmentCaptureProbeTexture {
	EARTextureType TextureType; // 0x130
	float Timestamp; // 0x134
	FGuid ExternalTextureGuid; // 0x138
	FVector2D Size; // 0x148
};

struct ACrowEscapeVehicleLadder {
	USkeletalMeshComponent* LadderMesh; // 0x290
	UBoxComponent* CharacterBlocker; // 0x298
	bool bIsLadderDown; // 0x2a0
	UAnimMontage* AniLadder_Idle; // 0x2a8
	UAnimMontage* AniLadder_Down; // 0x2b0
	UAnimMontage* AniLadder_Up; // 0x2b8
};

struct UCrowButton {
	FMulticastInlineDelegate OnDoubleClicked; // 0x430
	TArray<UCrowWidgetTweenBase*> TweenerArray; // 0x440
	float DisableOpacity; // 0x450
	float DoubleClickTime; // 0x454
	TArray<UImage*> ImageTweenColorArray; // 0x458
	TArray<UTextBlock*> TextBlockTweenColorArray; // 0x468
	TArray<UImage*> IconTweenColorArray; // 0x478
	FLinearColor OnPressColorFrom; // 0x488
	FLinearColor OnPressColorEnd; // 0x498
	float OnPressTweenTime; // 0x4a8
	FLinearColor OnPressTextColorFrom; // 0x4ac
	FLinearColor OnPressTextColorEnd; // 0x4bc
	float OnPressTextTweenTime; // 0x4cc
	FLinearColor OnPressIconColorFrom; // 0x4d0
	FLinearColor OnPressIconColorEnd; // 0x4e0
	float OnPressIconTweenTime; // 0x4f0
	FLinearColor OnReleaseColorFrom; // 0x4f4
	FLinearColor OnReleaseColorEnd; // 0x504
	float OnReleaseTweenTime; // 0x514
	FLinearColor OnReleaseTextColorFrom; // 0x518
	FLinearColor OnReleaseTextColorEnd; // 0x528
	float OnReleaseTextTweenTime; // 0x538
	FLinearColor OnReleaseIconColorFrom; // 0x53c
	FLinearColor OnReleaseIconColorEnd; // 0x54c
	float OnReleaseIconTweenTime; // 0x55c
	FLinearColor OnHoverColorFrom; // 0x560
	FLinearColor OnHoverColorEnd; // 0x570
	float OnHoverTweenTime; // 0x580
	FLinearColor OnHoverTextColorFrom; // 0x584
	FLinearColor OnHoverTextColorEnd; // 0x594
	float OnHoverTextTweenTime; // 0x5a4
	FLinearColor OnHoverIconColorFrom; // 0x5a8
	FLinearColor OnHoverIconColorEnd; // 0x5b8
	float OnHoverIconTweenTime; // 0x5c8
	bool UseLegacy; // 0x5cc
	FLinearColor OnUnHoverColorFrom; // 0x5d0
	FLinearColor OnUnHoverColorEnd; // 0x5e0
	float OnUnHoverTweenTime; // 0x5f0
	FLinearColor OnUnHoverTextColorFrom; // 0x5f4
	FLinearColor OnUnHoverTextColorEnd; // 0x604
	float OnUnHoverTextTweenTime; // 0x614
	FLinearColor OnUnHoverIconColorFrom; // 0x618
	FLinearColor OnUnHoverIconColorEnd; // 0x628
	float OnUnHoverIconTweenTime; // 0x638
	UAkAudioEvent* AudioEvent_Clicked; // 0x640
	bool UseHoveredSound; // 0x648
	UAkAudioEvent* AudioEvent_Hovered; // 0x650
	float PreOpacity; // 0x664
	UCrowWidgetBase* EventHandler; // 0x668
	UCrowWidgetBase* HandlerClass; // 0x670
	FString HandlerName; // 0x678
	ECrowEvent Event; // 0x688
	bool ClickCaptured; // 0x68c
	float CapturedDelta; // 0x690
	bool EnableHoverdTween; // 0x694
};

struct UCrowLobbyMainMedalSlotWidget {
	UWidgetSwitcher* WS_MedalStatus; // 0x358
	UCrowToggleButton* BT_MedalToggle_Continue; // 0x360
	UCrowToggleButton* BT_MedalToggle_Complete; // 0x368
	UCrowWidgetImage* IMG_Medal_Continue; // 0x370
	UCrowWidgetImage* IMG_Medal_Complete; // 0x378
	UTextBlock* TB_DeselectMedalName_Continue; // 0x380
	UTextBlock* TB_SelectMedalName_Continue; // 0x388
	UTextBlock* TB_DeselectMedalName_Complete; // 0x390
	UTextBlock* TB_SelectMedalName_Complete; // 0x398
	UTextBlock* TB_DeselectMedalCount_Continue; // 0x3a0
	UTextBlock* TB_SelectMedalCount_Continue; // 0x3a8
	UTextBlock* TB_DeselectMedalCount_Complete; // 0x3b0
	UTextBlock* TB_SelectMedalCount_Complete; // 0x3b8
	UWidgetSwitcher* WS_Complete_Icon; // 0x3c0
	uint32_t MedalIndex; // 0x3c8
	uint32_t MedalGroupIndex; // 0x3cc
};

struct UCrowMedalIconWidget {
	UImage* IMG_Medal_Spawn; // 0x378
};

struct UCrowSupplyBoxTableManager {
	TMap<ECrowSupplyBoxType, FCrowSupplyBoxRow> SupplyBoxRows; // 0x28
};

struct UCrowMailPopupWidget {
	UCrowButtonContainerBase* WB_TabMenu_Post; // 0x348
	UCrowButton* BT_Close; // 0x350
	UCrowButton* BT_AllReward; // 0x358
	UWidgetSwitcher* WS_RewardList; // 0x360
	UScrollBox* SB_PersonalRewardList; // 0x368
	UScrollBox* SB_AccountRewardList; // 0x370
	UCanvasPanel* CP_Empty; // 0x378
	UCrowMailPopupSlotWidget* SlotWidgetClass; // 0x380
	ECrowMailPopupState MailPopupState; // 0x388
};

struct UMovieSceneVectorSection {
	FMovieSceneFloatChannel Curves[0x4]; // 0xe8
	int32_t ChannelsUsed; // 0x368
};

struct UCrowTriggerDisplay {
	FCrowTriggerTutorialHUD TutorialHUDInfo; // 0x28
	ACrowPlayerControllerBase* CrowPlayerController; // 0x40
};

struct UMaterialExpressionArctangentFast {
	FExpressionInput Input; // 0x40
};

struct UNiagaraSpriteRendererProperties {
	UMaterialInterface* Material; // 0x80
	ENiagaraRendererSourceDataMode SourceMode; // 0x88
	FNiagaraUserParameterBinding MaterialUserParamBinding; // 0x90
	ENiagaraSpriteAlignment Alignment; // 0xb0
	ENiagaraSpriteFacingMode FacingMode; // 0xb1
	FVector2D PivotInUVSpace; // 0xb4
	ENiagaraSortMode SortMode; // 0xbc
	FVector2D SubImageSize; // 0xc0
	char bSubImageBlend : 1; // 0xc8
	char bRemoveHMDRollInVR : 1; // 0xc8
	char bSortOnlyWhenTranslucent : 1; // 0xc8
	char bGpuLowLatencyTranslucency : 1; // 0xc8
	float MinFacingCameraBlendDistance; // 0xcc
	float MaxFacingCameraBlendDistance; // 0xd0
	char bEnableCameraDistanceCulling : 1; // 0xd4
	float MinCameraDistance; // 0xd8
	float MaxCameraDistance; // 0xdc
	uint32_t RendererVisibility; // 0xe0
	FNiagaraVariableAttributeBinding PositionBinding; // 0xe8
	FNiagaraVariableAttributeBinding ColorBinding; // 0x140
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x198
	FNiagaraVariableAttributeBinding SpriteRotationBinding; // 0x1f0
	FNiagaraVariableAttributeBinding SpriteSizeBinding; // 0x248
	FNiagaraVariableAttributeBinding SpriteFacingBinding; // 0x2a0
	FNiagaraVariableAttributeBinding SpriteAlignmentBinding; // 0x2f8
	FNiagaraVariableAttributeBinding SubImageIndexBinding; // 0x350
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x3a8
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x400
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x458
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x4b0
	FNiagaraVariableAttributeBinding CameraOffsetBinding; // 0x508
	FNiagaraVariableAttributeBinding UVScaleBinding; // 0x560
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x5b8
	FNiagaraVariableAttributeBinding CustomSortingBinding; // 0x610
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x668
	FNiagaraVariableAttributeBinding RendererVisibilityTagBinding; // 0x6c0
	TArray<FNiagaraMaterialAttributeBinding> MaterialParameterBindings; // 0x718
};

struct UVOIPTalker {
	FVoiceSettings Settings; // 0xb0
};

struct UNiagaraDataInterfaceGrid2DCollectionReader {
	FString EmitterName; // 0xf8
	FString DIName; // 0x108
};

struct UBTTask_RunEQSQuery {
	UEnvQuery* QueryTemplate; // 0x98
	TArray<FEnvNamedValue> QueryParams; // 0xa0
	TArray<FAIDynamicParam> QueryConfig; // 0xb0
	EEnvQueryRunMode RunMode; // 0xc0
	FBlackboardKeySelector EQSQueryBlackboardKey; // 0xc8
	bool bUseBBKey; // 0xf0
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0xf8
};

struct APostProcessVolume {
	FPostProcessSettings Settings; // 0x260
	float Priority; // 0x7b0
	float BlendRadius; // 0x7b4
	float BlendWeight; // 0x7b8
	char bEnabled : 1; // 0x7bc
	char bUnbound : 1; // 0x7bc
};

struct UAxisAngleGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoFloatParameterSource> AngleSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bInInteraction; // 0x88
	FVector RotationOrigin; // 0x8c
	FVector RotationAxis; // 0x98
	FVector RotationPlaneX; // 0xa4
	FVector RotationPlaneY; // 0xb0
	FVector InteractionStartPoint; // 0xbc
	FVector InteractionCurPoint; // 0xc8
	float InteractionStartAngle; // 0xd4
	float InteractionCurAngle; // 0xd8
};

struct UInteractiveGizmoManager {
	TArray<FActiveGizmo> ActiveGizmos; // 0x30
	TMap<FString, UInteractiveGizmoBuilder*> GizmoBuilders; // 0x58
};

struct UCrowCustomWaitingRoomSlotWidget {
	UCrowToggleButton* BT_RoomSlot; // 0x348
	UImage* IMG_Deselec_01; // 0x350
	UImage* IMG_Deselect_02; // 0x358
	UImage* IMG_DeselecLock; // 0x360
	UImage* IMG_SelectLock; // 0x368
	UTextBlock* TB_RoomName; // 0x370
	UTextBlock* TB_ModeName; // 0x378
	UTextBlock* TB_MapName; // 0x380
	UTextBlock* TB_UserCount; // 0x388
	UTextBlock* TB_State; // 0x390
	UTextBlock* TB_RoomName_Select; // 0x398
	UTextBlock* TB_ModeName_Select; // 0x3a0
	UTextBlock* TB_MapName_Select; // 0x3a8
	UTextBlock* TB_UserCount_Select; // 0x3b0
	UTextBlock* TB_State_Select; // 0x3b8
	FCrowCustomDisplayRoomInfo SelectedRoomInfo; // 0x3d0
};

struct UCrowSoundBranchActor {
	EActorType ActorType; // 0x48
};

struct UMovieSceneSlomoSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe8
};

struct UARLifeCycleComponent {
	FMulticastInlineDelegate OnARActorSpawnedDelegate; // 0x1f8
	FMulticastInlineDelegate OnARActorToBeDestroyedDelegate; // 0x208
};

struct UHoleFillToolProperties {
	EHoleFillOpFillType FillType; // 0x60
	bool bRemoveIsolatedTriangles; // 0x61
};

struct UFileMediaSource {
	FString FilePath; // 0x88
	bool PrecacheFile; // 0x98
};

struct UCrowWeaponAnimGatling {
	ECrowWeaponAnimGatlingState State; // 0xb0
	float Speed; // 0xb4
	FRotator RotorRotator; // 0xb8
	float Accelerator; // 0xc4
	float RotatorPerSecond; // 0xc8
};

struct UBuildPatchManifest {
	char ManifestFileVersion; // 0x28
	bool bIsFileData; // 0x29
	uint32_t AppID; // 0x2c
	FString AppName; // 0x30
	FString BuildVersion; // 0x40
	FString LaunchExe; // 0x50
	FString LaunchCommand; // 0x60
	TSet<FString> PrereqIds; // 0x70
	FString PrereqName; // 0xc0
	FString PrereqPath; // 0xd0
	FString PrereqArgs; // 0xe0
	TArray<FFileManifestData> FileManifestList; // 0xf0
	TArray<FChunkInfoData> ChunkList; // 0x100
	TArray<FCustomFieldData> CustomFields; // 0x110
};

struct UControlPointMeshComponent {
	float VirtualTextureMainPassMaxDrawDistance; // 0x4d0
};

struct ULandscapeMeshProxyComponent {
	FGuid LandscapeGuid; // 0x4d0
	TArray<FIntPoint> ProxyComponentBases; // 0x4e0
	int8_t ProxyLOD; // 0x4f0
};

struct UCrowGradeInfoPopupSlotWidget {
	UCrowWidgetImage* IMG_RankIcon; // 0x348
	UTextBlock* TB_Rank; // 0x350
	UTextBlock* TB_Exp; // 0x358
};

struct ACrowRecoilEditorItem {
	FDecalData DefaultDecal; // 0x220
	UDecalComponent* DecalComp; // 0x260
};

struct UCrowAISettings {
	float ArrowSize; // 0x38
	float ArrowOffset; // 0x3c
	TSoftObjectPtr<UTexture2D> BillboardSprite; // 0x40
	float BillboardSize; // 0x68
	TSoftObjectPtr<USkeletalMesh> CharacterMesh; // 0x70
	TSoftObjectPtr<UMaterialInterface> CharacterMeshMaterial; // 0x98
	TSoftObjectPtr<UAnimSequenceBase> CharacterPreviewAnim; // 0xc0
	FRotator CharacterMeshRotationOffset; // 0xe8
};

struct UDecalComponent {
	UMaterialInterface* DecalMaterial; // 0x1f8
	int32_t SortOrder; // 0x200
	float FadeScreenSize; // 0x204
	float FadeStartDelay; // 0x208
	float FadeDuration; // 0x20c
	float FadeInDuration; // 0x210
	float FadeInStartDelay; // 0x214
	char bDestroyOwnerAfterFade : 1; // 0x218
	FVector DecalSize; // 0x21c
};

struct USplineComponent {
	FSplineCurves SplineCurves; // 0x440
	FInterpCurveVector SplineInfo; // 0x4b0
	FInterpCurveQuat SplineRotInfo; // 0x4c8
	FInterpCurveVector SplineScaleInfo; // 0x4e0
	FInterpCurveFloat SplineReparamTable; // 0x4f8
	bool bAllowSplineEditingPerInstance; // 0x510
	int32_t ReparamStepsPerSegment; // 0x514
	float Duration; // 0x518
	bool bStationaryEndpoints; // 0x51c
	bool bSplineHasBeenEdited; // 0x51d
	bool bModifiedByConstructionScript; // 0x51e
	bool bInputSplinePointsToConstructionScript; // 0x51f
	bool bDrawDebug; // 0x520
	bool bClosedLoop; // 0x521
	bool bLoopPositionOverride; // 0x522
	float LoopPosition; // 0x524
	FVector DefaultUpVector; // 0x528
};

struct ALandscapeProxy {
	ULandscapeSplinesComponent* SplineComponent; // 0x220
	FGuid LandscapeGuid; // 0x228
	FIntPoint LandscapeSectionOffset; // 0x238
	int32_t MaxLODLevel; // 0x240
	float LODDistanceFactor; // 0x244
	ELandscapeLODFalloff LODFalloff; // 0x248
	float ComponentScreenSizeToUseSubSections; // 0x24c
	float LOD0ScreenSize; // 0x250
	float LOD0DistributionSetting; // 0x254
	float LODDistributionSetting; // 0x258
	float TessellationComponentScreenSize; // 0x25c
	bool UseTessellationComponentScreenSizeFalloff; // 0x260
	float TessellationComponentScreenSizeFalloff; // 0x264
	int32_t OccluderGeometryLOD; // 0x268
	int32_t StaticLightingLOD; // 0x26c
	UPhysicalMaterial* DefaultPhysMaterial; // 0x270
	float StreamingDistanceMultiplier; // 0x278
	UMaterialInterface* LandscapeMaterial; // 0x280
	UMaterialInterface* LandscapeHoleMaterial; // 0x2a8
	TArray<FLandscapeProxyMaterialOverride> LandscapeMaterialsOverride; // 0x2b0
	bool bMeshHoles; // 0x2c0
	char MeshHolesMaxLod; // 0x2c1
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x2c8
	int32_t VirtualTextureNumLods; // 0x2d8
	int32_t VirtualTextureLodBias; // 0x2dc
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x2e0
	float NegativeZBoundsExtension; // 0x2e4
	float PositiveZBoundsExtension; // 0x2e8
	TArray<ULandscapeComponent*> LandscapeComponents; // 0x2f0
	TArray<ULandscapeHeightfieldCollisionComponent*> CollisionComponents; // 0x300
	TArray<UHierarchicalInstancedStaticMeshComponent*> FoliageComponents; // 0x310
	bool bHasLandscapeGrass; // 0x384
	float StaticLightingResolution; // 0x388
	char CastShadow : 1; // 0x38c
	char bCastDynamicShadow : 1; // 0x38c
	char bCastStaticShadow : 1; // 0x38c
	char bCastFarShadow : 1; // 0x390
	char bCastHiddenShadow : 1; // 0x394
	char bCastShadowAsTwoSided : 1; // 0x398
	char bAffectDistanceFieldLighting : 1; // 0x39c
	FLightingChannels LightingChannels; // 0x39d
	char bUseMaterialPositionOffsetInStaticLighting : 1; // 0x3a0
	char bRenderCustomDepth : 1; // 0x3a0
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x3a4
	int32_t CustomDepthStencilValue; // 0x3a8
	float LDMaxDrawDistance; // 0x3ac
	FLightmassPrimitiveSettings LightmassSettings; // 0x3b0
	int32_t CollisionMipLevel; // 0x3c8
	int32_t SimpleCollisionMipLevel; // 0x3cc
	float CollisionThickness; // 0x3d0
	FBodyInstance BodyInstance; // 0x3d8
	char bGenerateOverlapEvents : 1; // 0x530
	char bBakeMaterialPositionOffsetIntoCollision : 1; // 0x530
	int32_t ComponentSizeQuads; // 0x534
	int32_t SubsectionSizeQuads; // 0x538
	int32_t NumSubsections; // 0x53c
	char bUsedForNavigation : 1; // 0x540
	char bFillCollisionUnderLandscapeForNavmesh : 1; // 0x540
	bool bUseDynamicMaterialInstance; // 0x544
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x545
	bool bUseLandscapeForCullingInvisibleHLODVertices; // 0x546
	bool bHasLayersContent; // 0x547
	TMap<UTexture2D*, ULandscapeWeightmapUsage*> WeightmapUsageMap; // 0x548
};

struct UCrowVehicleWheelEffect {
	ACrowVehiclePawn* VehiclePawn; // 0xc0
	UCrowVehicleParam* VehicleParam; // 0xc8
	UCrowImpactDamageControl* ImpactDamageControl; // 0xd0
	TArray<FName> ParticleSystemParameterNames; // 0xd8
	UCurveFloat* EffectCurveRotation; // 0xe8
	float MaxWheelRotationSpeed; // 0xf0
	UCurveFloat* EffectCurveSlip; // 0xf8
	float MaxWheelSlip; // 0x100
	float WheelLatSlipMultiplier; // 0x104
	bool UseWheelRotationBlur; // 0x108
	float WheelBlurRotationSpeed; // 0x10c
	UParticleSystem* FxDefaultWheelBlur; // 0x110
	TArray<FCrowWheelEffectBlur> WheelBlurOverrides; // 0x118
	UAkAudioEvent* WheelRotationSoundStart; // 0x128
	UAkAudioEvent* WheelRotationSoundEnd; // 0x130
	int32_t WheelCount; // 0x138
	TArray<UParticleSystemComponent*> WheelParticles; // 0x140
	TArray<UParticleSystemComponent*> WheelBlurParticles; // 0x150
	TArray<FCrowWheelEffectDissolve> DissolvingParticles; // 0x160
	TArray<UParticleSystemComponent*> WheelSlipParticles; // 0x170
	TArray<FCrowWheelEffectDissolve> DissolvingSlipParticles; // 0x180
	TArray<UAkComponent*> WheelRotationSounds; // 0x190
	TArray<bool> IsSkiddings; // 0x1a0
	TArray<ETireState> TireStates; // 0x1b0
	float SkiddingValue; // 0x1c0
	float SkiddingFlatValue; // 0x1c4
	float SkiddingDestroyValue; // 0x1c8
	FString ContactPhysicalMatName; // 0x1d0
	float WheelSpin; // 0x1e0
	bool IsInAirNow; // 0x1e4
	float InAirZ; // 0x1e8
};

struct ACrowWeaponCharacter {
	bool bIsAutoSelect; // 0x1e10
	UMeshComponent* WeaponModelThirdAttached; // 0x1e18
	ACrowCharacterPawn* CharacterOwner; // 0x1e20
	UCrowCharacterMovement* CharacterMovement; // 0x1e28
	UCrowWeaponSubStateFire* CharacterSubStateFire; // 0x1e30
	UCrowCharacterAimComponent* CharacterAimComponent; // 0x1e38
	FTimerHandle LongPressedAimTimerHandler; // 0x1e68
	UCrowZeroingInfo* ZeroingInfo; // 0x1e70
	ACrowWeaponDummyParts* DummyMagazine1P; // 0x1e78
	ACrowWeaponDummyParts* DummyMagazine3P; // 0x1e80
};

struct UCrowInvenArmorInfoWidget {
	UCrowInvenWeaponListSubItemWidget* WB_HelmetSlot; // 0x348
	UCrowInvenWeaponListSubItemWidget* WB_ArmorSlot; // 0x350
	UCrowInvenWeaponListSubItemWidget* WB_BackPackSlot; // 0x358
	TArray<UCrowInvenWeaponListSubItemWidget*> SlotList; // 0x360
};

struct UParticleModuleMeshRotationRateMultiplyLife {
	FRawDistributionVector LifeMultiplier; // 0x30
};

struct UCrowSpectatorWidget {
	float StartedCountdownEffect; // 0x348
	ACrowPlayerStateBase* AttachedPlayerState; // 0x350
	UCanvasPanel* CP_Common; // 0x360
	UCanvasPanel* CP_Conquest; // 0x368
	UCanvasPanel* CP_SquadOperation; // 0x370
	UCanvasPanel* CP_Squad; // 0x378
	UHorizontalBox* HB_Timer_2; // 0x380
	UHorizontalBox* HB_Changeview_2; // 0x388
	UHorizontalBox* HB_Skip_3; // 0x390
	UCrowButton* WB_BT_ResturnToLobby_2; // 0x398
	UCrowButton* WB_BT_Report_2; // 0x3a0
	UTextBlock* TB_Username_2; // 0x3a8
	UTextBlock* TB_Timer_Effect_2; // 0x3b0
	UTextBlock* TB_Timer_2; // 0x3b8
	UTextBlock* TB_TimerText; // 0x3c0
	UTextBlock* TB_SquadNum; // 0x3c8
	UImage* IMG_SkipKeyImage_3; // 0x3d0
	UImage* IMG_RankIcon; // 0x3d8
	UImage* IMG_SquadColor; // 0x3e0
	UWidgetAnimation* AniConquestCountdown; // 0x3e8
};

struct USourceEffectWaveShaperPreset {
	FSourceEffectWaveShaperSettings Settings; // 0x98
};

struct UCrowCompassInfoMarker {
	UUserWidget* WB_Objective_Icon_Blu; // 0x348
	UUserWidget* WB_Objective_Icon_Gen; // 0x350
	UUserWidget* WB_Objective_Icon_Red; // 0x358
	UUserWidget* WB_SquadIcon; // 0x360
	UUserWidget* WB_VehicleIcon; // 0x368
	UUserWidget* WB_AllyIcon; // 0x370
	UUserWidget* WB_CompassInfo_Range_Direction; // 0x378
	EIndicatorType indicatorType; // 0x380
};

struct AARSharedWorldGameMode {
	int32_t BufferSizePerChunk; // 0x308
};

struct UCrowInventoryCategoryWidget {
	UImage* IMG_Loadout_Panel; // 0x348
	UImage* ING_BackPack_Panel; // 0x350
	FLinearColor NotSelectColor; // 0x358
};

struct ULandscapeMaterialInstanceConstant {
	TArray<FLandscapeMaterialTextureStreamingInfo> TextureStreamingInfo; // 0x368
	char bIsLayerThumbnail : 1; // 0x378
	char bDisableTessellation : 1; // 0x378
	char bMobile : 1; // 0x378
	char bEditorToolUsage : 1; // 0x378
};

struct ABP_MeleeThrow_CombatKnife_C {
	USkeletalMeshComponent* Dagger001; // 0x1940
};

struct UBlackboardKeyType_Class {
	UObject* BaseClass; // 0x30
};

struct UWB_SettingsSlotKeyBinding_C {
	UImage* IMG_BackGround; // 0x440
	UImage* IMG_BackGround_2; // 0x448
	UImage* IMG_BackGround_3; // 0x450
	UImage* IMG_BackGround_Second_2; // 0x458
	UImage* IMG_Blue00; // 0x460
	UImage* IMG_Blue00_2; // 0x468
	UImage* IMG_Blue00_3; // 0x470
	UImage* IMG_ChangeKeyBackGround; // 0x478
	UImage* IMG_ChangeKeyBackGround_2; // 0x480
	UImage* IMG_ChangeKeyBackGround_Second; // 0x488
	UImage* IMG_ChangeKeyBackGround_Second_2; // 0x490
};

struct UCrowINDCCharacterBMWidget {
	UCanvasPanel* CPIndicator; // 0x348
	UImage* IMGTeamIcon; // 0x350
	UTextBlock* TBUserNickName; // 0x358
	UCanvasPanel* CPCompositionC; // 0x360
	UWidgetSwitcher* WSStatusIcon; // 0x368
	ACrowPlayerStateBombMission* PlayerStateBombMission; // 0x370
	ACrowPlayerStateBombMission* TargetPlayerStateBombMission; // 0x378
	ECrowPlayerState PrevPlayerState; // 0x380
	bool bIsCompositionCHolder; // 0x381
	bool bIsInit; // 0x382
};

struct UCrowClothItemDescWidget {
	UTextBlock* TB_ItemName; // 0x348
	UTextBlock* TB_ItemDesc_01; // 0x350
	UTextBlock* TB_ItemDesc_02; // 0x358
};

struct UDLSSOverrideSettings {
	EDLSSSettingOverride EnableDLSSInEditorViewportsOverride; // 0x28
	EDLSSSettingOverride EnableScreenpercentageManipulationInDLSSEditorViewportsOverride; // 0x29
	EDLSSSettingOverride EnableDLSSInPlayInEditorViewportsOverride; // 0x2a
	bool bShowDLSSIncompatiblePluginsToolsWarnings; // 0x2b
	EDLSSSettingOverride ShowDLSSSDebugOnScreenMessages; // 0x2c
};

struct UCrowSkydivingWidget {
	UCanvasPanel* CP_PlayerInfo; // 0x348
	UTextBlock* TB_Altitude; // 0x350
	UTextBlock* TB_Speed; // 0x358
	UImage* IMG_Altitude; // 0x360
	UOverlay* OV_Altitude; // 0x368
	UImage* IMG_Land; // 0x370
	UImage* IMG_parachutePoint; // 0x378
	UCrowTutorialInfoWidget* WB_TutorialInfo; // 0x380
	float SeaLevel; // 0x388
	float SkydivingRespawnZ; // 0x38c
	FVector2D DefaultPlayerInfoTranslation; // 0x390
	FVector2D DefaultParachutePointTranslation; // 0x398
	float ParachutePointZ; // 0x3a0
};

struct UNiagaraParameterCollectionInstance {
	UNiagaraParameterCollection* Collection; // 0x28
	TArray<FNiagaraVariable> OverridenParameters; // 0x30
	FNiagaraParameterStore ParameterStorage; // 0x40
};

struct UCrowBoatStateBase {
	UCrowVehicleBoatFSM* BoatFSM; // 0x48
};

struct UCrowBuildingModularBuilder {
	TArray<FCrowBuildingGeneratedParts> GeneratedPartsArray; // 0xb0
	bool IsFirstShowHideProps; // 0xc0
	bool IsHidingProps; // 0xc1
	TArray<TWeakObjectPtr<ACrowWorldPropActor>> ChildProps; // 0xc8
	TArray<TWeakObjectPtr<ACrowItemSpawner>> ChildItemSpawners; // 0xd8
};

struct ACrowFirstRespawnArea {
	ECrowSpawnerType SpawnerType; // 0x2f0
};

struct USoundEffectSourcePresetChain {
	TArray<FSourceEffectChainEntry> Chain; // 0x28
	char bPlayEffectChainTails : 1; // 0x38
};

struct ACrowCompositionCAreaIcon {
	FCrowGameIconDisplayInfo GameIconDisplayInfo; // 0x220
	UCrowWorldMapIcon* WorldMapIcon; // 0x2a8
	UCrowCompositionCAreaIconWidget* IndicatorIconWidget; // 0x2b0
	bool bIsPlantCompositionC; // 0x2b8
};

struct AMagicLeapARPinInfoActor_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x238
	UStaticMeshComponent* Right; // 0x240
	UStaticMeshComponent* Forward; // 0x248
	UStaticMeshComponent* Up; // 0x250
	USphereComponent* ValidRadiusVisualizer; // 0x258
	USceneComponent* AxisRoot; // 0x260
	USceneComponent* VisualizerRoot; // 0x268
	UTextRenderComponent* TypeValue; // 0x270
	UTextRenderComponent* TransErrValue; // 0x278
	UTextRenderComponent* RotErrValue; // 0x280
	UTextRenderComponent* ConfidenceValue; // 0x288
	UTextRenderComponent* TransErrLabel; // 0x290
	UTextRenderComponent* RotErrLabel; // 0x298
	UTextRenderComponent* ConfidenceLabel; // 0x2a0
	UTextRenderComponent* PinIDValue; // 0x2a8
	USceneComponent* InfoRoot; // 0x2b0
	USceneComponent* Root; // 0x2b8
	float RotationSmoothSpeed; // 0x2c0
};

struct UDataAsset {
	UDataAsset* NativeClass; // 0x28
};

struct UWheeledVehicleMovementComponent {
	char bDeprecatedSpringOffsetMode : 1; // 0x140
	char bReverseAsBrake : 1; // 0x140
	char bUseRVOAvoidance : 1; // 0x140
	char bRawHandbrakeInput : 1; // 0x140
	char bRawGearUpInput : 1; // 0x140
	char bRawGearDownInput : 1; // 0x140
	char bWasAvoidanceUpdated : 1; // 0x144
	float Mass; // 0x148
	TArray<FWheelSetup> WheelSetups; // 0x150
	float DragCoefficient; // 0x160
	float ChassisWidth; // 0x164
	float ChassisHeight; // 0x168
	float DragArea; // 0x16c
	float EstimatedMaxEngineSpeed; // 0x170
	float MaxEngineRPM; // 0x174
	float DebugDragMagnitude; // 0x178
	FVector InertiaTensorScale; // 0x17c
	float MinNormalizedTireLoad; // 0x188
	float MinNormalizedTireLoadFiltered; // 0x18c
	float MaxNormalizedTireLoad; // 0x190
	float MaxNormalizedTireLoadFiltered; // 0x194
	float ThresholdLongitudinalSpeed; // 0x198
	int32_t LowForwardSpeedSubStepCount; // 0x19c
	int32_t HighForwardSpeedSubStepCount; // 0x1a0
	TArray<UVehicleWheel*> Wheels; // 0x1a8
	float RVOAvoidanceRadius; // 0x1d0
	float RVOAvoidanceHeight; // 0x1d4
	float AvoidanceConsiderationRadius; // 0x1d8
	float RVOSteeringStep; // 0x1dc
	float RVOThrottleStep; // 0x1e0
	int32_t AvoidanceUID; // 0x1e4
	FNavAvoidanceMask AvoidanceGroup; // 0x1e8
	FNavAvoidanceMask GroupsToAvoid; // 0x1ec
	FNavAvoidanceMask GroupsToIgnore; // 0x1f0
	float AvoidanceWeight; // 0x1f4
	FVector PendingLaunchVelocity; // 0x1f8
	FReplicatedVehicleState ReplicatedState; // 0x204
	float RawSteeringInput; // 0x21c
	float RawThrottleInput; // 0x220
	float RawBrakeInput; // 0x224
	float SteeringInput; // 0x228
	float ThrottleInput; // 0x22c
	float BrakeInput; // 0x230
	float HandbrakeInput; // 0x234
	float IdleBrakeInput; // 0x238
	float StopThreshold; // 0x23c
	float WrongDirectionThreshold; // 0x240
	FVehicleInputRate ThrottleInputRate; // 0x244
	FVehicleInputRate BrakeInputRate; // 0x24c
	FVehicleInputRate HandbrakeInputRate; // 0x254
	FVehicleInputRate SteeringInputRate; // 0x25c
	AController* OverrideController; // 0x288
};

struct UNiagaraDataInterfaceArrayColor {
	TArray<FLinearColor> ColorData; // 0x50
};

struct ACrowVehiclesPropertyActor {
	UStaticMeshComponent* SphereMesh; // 0x220
	UCrowVehicleOceanTracker* OceanTracker; // 0x228
};

struct UPathFollowingComponent {
	UNavMovementComponent* MovementComp; // 0xe8
	ANavigationData* MyNavData; // 0xf8
};

struct UAISystem {
	FSoftClassPath PerceptionSystemClassName; // 0x58
	FSoftClassPath HotSpotManagerClassName; // 0x70
	float AcceptanceRadius; // 0x88
	float PathfollowingRegularPathPointAcceptanceRadius; // 0x8c
	float PathfollowingNavLinkAcceptanceRadius; // 0x90
	bool bFinishMoveOnGoalOverlap; // 0x94
	bool bAcceptPartialPaths; // 0x95
	bool bAllowStrafing; // 0x96
	bool bEnableBTAITasks; // 0x97
	bool bAllowControllersAsEQSQuerier; // 0x98
	bool bEnableDebuggerPlugin; // 0x99
	bool bForgetStaleActors; // 0x9a
	bool bAddBlackboardSelfKey; // 0x9b
	ECollisionChannel DefaultSightCollisionChannel; // 0x9c
	UBehaviorTreeManager* BehaviorTreeManager; // 0xa0
	UEnvQueryManager* EnvironmentQueryManager; // 0xa8
	UAIPerceptionSystem* PerceptionSystem; // 0xb0
	TArray<UAIAsyncTaskBlueprintProxy*> AllProxyObjects; // 0xb8
	UAIHotSpotManager* HotSpotManager; // 0xc8
	UNavLocalGridManager* NavLocalGrids; // 0xd0
};

struct UCrowResultSceneWidget {
	float AutoNextTime; // 0x368
	FTimerHandle AutoNextTimeHandle; // 0x370
	UCrowButton* WB_BT_Skip; // 0x378
};

struct UMeshEditingViewProperties {
	bool bShowWireframe; // 0x60
	EMeshEditingMaterialModes MaterialMode; // 0x64
	bool bFlatShading; // 0x68
	FLinearColor Color; // 0x6c
	UTexture2D* Image; // 0x80
};

struct USlateSettings {
	bool bExplicitCanvasChildZOrder; // 0x28
};

struct UARTrackedGeometry {
	FGuid UniqueId; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int32_t LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct UInflateBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct UCrowTabMenuWeaponSettingWidget {
	UCrowWidgetToggleButton* WB_LobbyButton_Tab_Acc; // 0x380
	UCrowCustomizeItemDescWidget* CustomizeItemDescWidget; // 0x388
};

struct UInterpTrackInstVisibility {
	EVisibilityTrackAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
};

struct UMaterialExpressionVertexInterpolator {
	FExpressionInput Input; // 0x40
};

struct UAnimNotify_AkEvent_C {
	FString Attach Name; // 0x38
	UAkAudioEvent* Event; // 0x48
	bool Follow; // 0x50
	FString EventName; // 0x58
};

struct UWB_SettingsSlotTitle_C {
	UImage* IMG_BG; // 0x358
};

struct ACrowLoginHUD {
	UUserWidget* LoginMainWidget; // 0x310
	UCrowLoginWidget* MainWidget; // 0x318
};

struct ACrowVolumetricCloudEditorActor {
	int32_t PreviewIndex; // 0x2c8
	UStaticMesh* MeshForFixArtifacts; // 0x2d0
	TArray<ACrowCloudScapeActor*> SpawnedActors; // 0x2d8
	bool bLivePreview; // 0x2e8
	bool bEnablePreview; // 0x2e9
	bool bHuman; // 0x2ea
	bool bDisplayResultScene; // 0x2eb
	FCrowVoluemetricCloudSetting TestSetting; // 0x2f0
};

struct UPaperTileSet {
	FIntPoint TileSize; // 0x28
	UTexture2D* TileSheet; // 0x30
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FIntMargin BorderMargin; // 0x48
	FIntPoint PerTileSpacing; // 0x58
	FIntPoint DrawingOffset; // 0x60
	int32_t WidthInTiles; // 0x68
	int32_t HeightInTiles; // 0x6c
	int32_t AllocatedWidth; // 0x70
	int32_t AllocatedHeight; // 0x74
	TArray<FPaperTileMetadata> PerTileData; // 0x78
	TArray<FPaperTileSetTerrain> Terrains; // 0x88
	int32_t TileWidth; // 0x98
	int32_t TileHeight; // 0x9c
	int32_t Margin; // 0xa0
	int32_t Spacing; // 0xa4
};

struct UMaterialExpressionSkyAtmosphereLightDiskLuminance {
	int32_t LightIndex; // 0x40
};

struct UCrowActorInitializerBase {
	AActor* TargetActor; // 0xb0
	UCrowComponentContainer* ComponentContainer; // 0xb8
};

struct UNiagaraDataInterfaceArrayBool {
	TArray<bool> BoolData; // 0x50
};

struct UTransformGizmo {
	UTransformProxy* ActiveTarget; // 0x40
	bool bSnapToWorldGrid; // 0x48
	bool bGridSizeIsExplicit; // 0x49
	FVector ExplicitGridSize; // 0x4c
	bool bRotationGridSizeIsExplicit; // 0x58
	FRotator ExplicitRotationGridSize; // 0x5c
	bool bSnapToWorldRotGrid; // 0x68
	bool bUseContextCoordinateSystem; // 0x69
	EToolContextCoordinateSystem CurrentCoordinateSystem; // 0x6c
	TArray<UPrimitiveComponent*> ActiveComponents; // 0x100
	TArray<UPrimitiveComponent*> NonuniformScaleComponents; // 0x110
	TArray<UInteractiveGizmo*> ActiveGizmos; // 0x120
	UGizmoConstantFrameAxisSource* CameraAxisSource; // 0x140
	UGizmoComponentAxisSource* AxisXSource; // 0x148
	UGizmoComponentAxisSource* AxisYSource; // 0x150
	UGizmoComponentAxisSource* AxisZSource; // 0x158
	UGizmoComponentAxisSource* UnitAxisXSource; // 0x160
	UGizmoComponentAxisSource* UnitAxisYSource; // 0x168
	UGizmoComponentAxisSource* UnitAxisZSource; // 0x170
	UGizmoTransformChangeStateTarget* StateTarget; // 0x178
	UGizmoScaledTransformSource* ScaledTransformSource; // 0x180
};

struct UWB_HUD_M1Abrams_Crosshair_SubMachinegun_First_C {
	UImage* Image_372; // 0x438
	UImage* IMG_Box_CrossHair; // 0x440
	UImage* IMG_Crosshair_Gauge; // 0x448
	UImage* IMG_Crosshair_Gauge_Base; // 0x450
	UImage* IMG_Crosshair_Moving; // 0x458
	UImage* IMG_CrosshairFrame; // 0x460
	UImage* IMG_Range_BG; // 0x468
	UImage* IMG_Range_Frame; // 0x470
	UImage* IMG_Range_Shadow; // 0x478
	UImage* IMG_TPS_Down; // 0x480
	UImage* IMG_TPS_Down_2; // 0x488
	UImage* IMG_TPS_Left; // 0x490
	UImage* IMG_TPS_Left_2; // 0x498
	UImage* IMG_TPS_Right; // 0x4a0
	UImage* IMG_TPS_Right_2; // 0x4a8
	UImage* IMG_TPS_Up; // 0x4b0
	UImage* IMG_TPS_Up_2; // 0x4b8
	UImage* IMG_ZoomIn_BG; // 0x4c0
	UImage* IMG_ZoomIn_Frame; // 0x4c8
	UImage* IMG_ZoomIn_Shadow; // 0x4d0
};

struct UCrowFoliageISMC {
	TMap<int32_t, float> InstanceDamageTotal; // 0x698
	TMap<int32_t, FCrowWorldSMCShakingState> ShakingStates; // 0x6e8
};

struct UPhysicsHandleComponent {
	UPrimitiveComponent* GrabbedComponent; // 0xb0
	char bSoftAngularConstraint : 1; // 0xc0
	char bSoftLinearConstraint : 1; // 0xc0
	char bInterpolateTarget : 1; // 0xc0
	float LinearDamping; // 0xc4
	float LinearStiffness; // 0xc8
	float AngularDamping; // 0xcc
	float AngularStiffness; // 0xd0
	float InterpolationSpeed; // 0x140
};

struct UDirectionalLightComponent {
	float ShadowCascadeBiasDistribution; // 0x328
	char bEnableLightShaftOcclusion : 1; // 0x32c
	float OcclusionMaskDarkness; // 0x330
	float OcclusionDepthRange; // 0x334
	FVector LightShaftOverrideDirection; // 0x338
	float WholeSceneDynamicShadowRadius; // 0x344
	float DynamicShadowDistanceMovableLight; // 0x348
	float DynamicShadowDistanceStationaryLight; // 0x34c
	int32_t DynamicShadowCascades; // 0x350
	float CascadeDistributionExponent; // 0x354
	float CascadeTransitionFraction; // 0x358
	float ShadowDistanceFadeoutFraction; // 0x35c
	char bUseInsetShadowsForMovableObjects : 1; // 0x360
	int32_t FarShadowCascadeCount; // 0x364
	float FarShadowDistance; // 0x368
	float DistanceFieldShadowDistance; // 0x36c
	float LightSourceAngle; // 0x370
	float LightSourceSoftAngle; // 0x374
	float ShadowSourceAngleFactor; // 0x378
	float TraceDistance; // 0x37c
	char bUsedAsAtmosphereSunLight : 1; // 0x380
	int32_t AtmosphereSunLightIndex; // 0x384
	FLinearColor AtmosphereSunDiskColorScale; // 0x388
	char bPerPixelAtmosphereTransmittance : 1; // 0x398
	char bCastShadowsOnClouds : 1; // 0x398
	char bCastShadowsOnAtmosphere : 1; // 0x398
	char bCastCloudShadows : 1; // 0x398
	float CloudShadowStrength; // 0x39c
	float CloudShadowOnAtmosphereStrength; // 0x3a0
	float CloudShadowOnSurfaceStrength; // 0x3a4
	float CloudShadowDepthBias; // 0x3a8
	float CloudShadowExtent; // 0x3ac
	float CloudShadowMapResolutionScale; // 0x3b0
	float CloudShadowRaySampleCountScale; // 0x3b4
	FLinearColor CloudScatteredLuminanceScale; // 0x3b8
	FLightmassDirectionalLightSettings LightmassSettings; // 0x3c8
	char bCastModulatedShadows : 1; // 0x3d8
	FColor ModulatedShadowColor; // 0x3dc
	float ShadowAmount; // 0x3e0
};

struct UCrowActorRotatorWidget {
	bool bIsRotateHorizontal; // 0x348
	bool bIsRotateVertical; // 0x349
	bool bInverseHorizontal; // 0x34a
	bool bInversVertical; // 0x34b
	AActor* TargetActor; // 0x350
};

struct UCrowWeaponInfoWidget {
	UWidgetSwitcher* WS_WeaponMode; // 0x348
	UWidgetSwitcher* WS_VehicleAmmoCount; // 0x350
	UWidgetSwitcher* WS_NomalAmmoCount; // 0x358
	UCrowWidgetImage* IMG_Weapon; // 0x360
	UTextBlock* TB_WeaponName; // 0x368
	UTextBlock* TB_VehicleAmmo; // 0x370
	UTextBlock* TB_AmmoCount; // 0x378
	UTextBlock* TB_ReaminAmmo; // 0x380
	UHorizontalBox* HB_BurstType; // 0x388
	UVerticalBox* VB_AmmoInfo; // 0x390
	UCanvasPanel* CP_VehicleReload; // 0x398
	UImage* IMG_Gauge_Reload; // 0x3a0
	UCanvasPanel* CP_VehicleHeat; // 0x3a8
	UImage* IMG_Gauge_Heat; // 0x3b0
	UBorder* BD_SemiAuto; // 0x3b8
	UImage* IMG_SemiAuto; // 0x3c0
	UBorder* BD_Burst; // 0x3c8
	UImage* IMG_Burst; // 0x3d0
	UBorder* BD_Auto; // 0x3d8
	UImage* IMG_Auto; // 0x3e0
	UCrowInputMappingWidget* RTB_Key_ChangeType; // 0x3e8
	UMaterialInstanceDynamic* GaugeReloadMaterial; // 0x3f0
	UMaterialInstanceDynamic* GaugeHeatMaterial; // 0x3f8
	TArray<UImage*> BurstImageList; // 0x400
	UTextBlock* TB_AmmoType; // 0x410
	ECrowWeaponFireMode PrevFireMode; // 0x418
	bool IsGun; // 0x419
};

struct ALevelSequenceMediaController {
	ALevelSequenceActor* Sequence; // 0x228
	UMediaComponent* MediaComponent; // 0x230
	float ServerStartTimeSeconds; // 0x238
};

struct ACrowFoliageReplicationActor {
	USceneComponent* SceneRoot; // 0x220
	FBitFlagArray BitFlagArray; // 0x228
};

struct ABP_CrowWeaponPartsLaserSight_Side_BAR_C {
	UParticleSystemComponent* FX_Wp_LaserLight_M001; // 0x260
	UCrowLaserBeamComponent* CrowLaserBeam; // 0x268
	USkeletalMeshComponent* BAR_LasersightSIDE; // 0x270
};

struct UAnimMontage {
	FAlphaBlend BlendIn; // 0xa8
	float BlendInTime; // 0xd8
	FAlphaBlend BlendOut; // 0xe0
	float BlendOutTime; // 0x110
	float BlendOutTriggerTime; // 0x114
	FName SyncGroup; // 0x118
	int32_t SyncSlotIndex; // 0x120
	FMarkerSyncData MarkerData; // 0x128
	TArray<FCompositeSection> CompositeSections; // 0x148
	TArray<FSlotAnimationTrack> SlotAnimTracks; // 0x158
	TArray<FBranchingPoint> BranchingPoints; // 0x168
	bool bEnableRootMotionTranslation; // 0x178
	bool bEnableRootMotionRotation; // 0x179
	bool bEnableAutoBlendOut; // 0x17a
	ERootMotionRootLock RootMotionRootLock; // 0x17b
	TArray<FBranchingPointMarker> BranchingPointMarkers; // 0x180
	TArray<int32_t> BranchingPointStateNotifyIndices; // 0x190
	FTimeStretchCurve TimeStretchCurve; // 0x1a0
	FName TimeStretchCurveName; // 0x1c8
};

struct UCrowCharacterSwimTableManager {
	UDataTable* LoadedTable; // 0x28
	TMap<FName, FCrowCharacterSwimTableRow> SwimTableMap; // 0x30
};

struct UCrowVehicleCrosshairBase {
	UImage* IMG_Crosshair_Point; // 0x360
	UOverlay* OverlayCrosshairPoint; // 0x368
	UOverlay* OverlayCrosshairMoving; // 0x370
	UWidget* CrosshairRoot; // 0x378
	UTextBlock* TXT_Aim_Zoom; // 0x380
	UTextBlock* TXT_Aim_Range; // 0x388
	UTextBlock* TXT_Crosshair_Status; // 0x390
	UCanvasPanel* CPLeft; // 0x398
	UCanvasPanel* CPRight; // 0x3a0
	UCanvasPanel* CPUp; // 0x3a8
	UCanvasPanel* CPDown; // 0x3b0
	FVector2D LeftTranslation; // 0x3b8
	FVector2D RightTranslation; // 0x3c0
	FVector2D UpTranslation; // 0x3c8
	FVector2D DownTranslation; // 0x3d0
	FVector2D DefaultCrosshairMovingTranslation; // 0x3d8
	float MaxRange; // 0x3e0
	bool bIsHiddenCrosshairAtAiming; // 0x3e4
	UCrowSpringArmComponent* SpringArm; // 0x3e8
	APawn* VehiclePawn; // 0x3f0
	FCrowLerpTranslationInfo LerpCrosshairMoving; // 0x3f8
};

struct UCrowCustomizeWeaponAccWidget {
	UGridPanel* GD_SlotList; // 0x348
	UScrollBox* SCB_Itemlist; // 0x350
	UCrowCustomizeWeaponAccSlotWidget* WeaponAccSlotWidgetClass; // 0x358
	ACrowSceneLobby* SceneLobby; // 0x360
	ACrowSceneGame* SceneGame; // 0x368
	TArray<UCrowCustomizeWeaponAccSlotWidget*> WeaponAccSlotWidgetArray; // 0x370
	FCrowWeaponStickerInfo CurrentStickerSlotInfo; // 0x380
	ECrowWeaponAccType CurrentAccType; // 0x388
	bool IsShopMode; // 0x389
};

struct UComboBoxWidgetStyle {
	FComboBoxStyle ComboBoxStyle; // 0x30
};

struct UMaterialExpressionDepthFade {
	FExpressionInput InOpacity; // 0x40
	FExpressionInput FadeDistance; // 0x54
	float OpacityDefault; // 0x68
	float FadeDistanceDefault; // 0x6c
};

struct UMovieSceneEnumSection {
	FMovieSceneByteChannel EnumCurve; // 0xe8
};

struct ACrowConquestArea {
	FText AreaName; // 0x2f0
	FString AlphabetName; // 0x308
	FString GroupKey; // 0x318
	ECrowTeam_RedBlue InitialTeam; // 0x328
	bool bIsEnableConquest; // 0x329
	char ResourcePointAdd; // 0x32a
	char ResourcePointAddTime; // 0x32b
	char ConquestPoint; // 0x32c
	FCrowConquestPointInfo ConquestPointInfo; // 0x32d
	char NeturalRecoveryPoint; // 0x33d
	char NeturalRecoveryTimeLimit; // 0x33e
	char ConquestRecoveryPoint; // 0x33f
	char ConquestRecoveryTimeLimit; // 0x340
	int32_t SupplyBaseTableIndex; // 0x344
	UAkAudioEvent* CaptureCompleteSound; // 0x348
	UAkAudioEvent* CapturingSound; // 0x350
	UAkAudioEvent* LosingSound; // 0x358
	UAkAudioEvent* LostSound; // 0x360
	FCrowGameIconDisplayInfo IconNeutralityNormal; // 0x368
	FCrowGameIconDisplayInfo IconMyTeamNormal; // 0x3f0
	FCrowGameIconDisplayInfo IconEnemyNormal; // 0x478
	FCrowGameIconDisplayInfo IconNeutralityChange; // 0x500
	FCrowGameIconDisplayInfo IconMyTeamChange; // 0x588
	FCrowGameIconDisplayInfo IconEnemyChange; // 0x610
	FCrowGameIconDisplayInfo IconNeutralityNormalDisable; // 0x698
	FCrowGameIconDisplayInfo IconMyTeamNormalDisable; // 0x720
	FCrowGameIconDisplayInfo IconEnemyNormalDisable; // 0x7a8
	FCrowGameIconDisplayInfo IconNeutralityChangeDisable; // 0x830
	FCrowGameIconDisplayInfo IconMyTeamChangeDisable; // 0x8b8
	FCrowGameIconDisplayInfo IconEnemyChangeDisable; // 0x940
	bool bIsDisplayHUD; // 0x9c8
	UCrowWidgetBase* HUD_IconNeutrality; // 0x9d0
	UCrowWidgetBase* HUD_IconMyTeam; // 0x9d8
	UCrowWidgetBase* HUD_IconEnemy; // 0x9e0
	UCrowWidgetBase* HUD_IconNeutralityDisable; // 0x9e8
	UCrowWidgetBase* HUD_IconMyTeamDisable; // 0x9f0
	UCrowWidgetBase* HUD_IconEnemyDisable; // 0x9f8
	FCrowGameIconDisplayInfo AreaMinimapIcon; // 0xa00
	UCrowGaugeInterpolate* RedGaugeInterpolate; // 0xa88
	UCrowGaugeInterpolate* BlueGaugeInterpolate; // 0xa90
	UCrowConquestAreaGauge* IconIndicator; // 0xa98
	UCrowIndicatorViewInfo* IndicatorViewInfo; // 0xaa0
	TArray<ACrowConquestVehicleSpawnerGround*> ConquestVehicleSpawnerGroundArray; // 0xaa8
	FCrowConquestAreaInfo ConquestAreaInfo; // 0xac8
	TArray<UCrowConquestAreaVehicleSpawner*> VehicleSpawnerArray; // 0xae8
};

struct UEditableGameplayTagQuery {
	FString UserDescription; // 0x28
	UEditableGameplayTagQueryExpression* RootExpression; // 0x48
	FGameplayTagQuery TagQueryExportText_Helper; // 0x50
};

struct UAISense_Blueprint {
	UUserDefinedStruct* ListenerDataType; // 0x80
	TArray<UAIPerceptionComponent*> ListenerContainer; // 0x88
	TArray<UAISenseEvent*> UnprocessedEvents; // 0x98
};

struct UAkInitBankAssetData {
	TArray<FAkPluginInfo> PluginInfos; // 0x90
};

struct UCrowRespawnProgress {
	FTimerHandle Timer_Respawning; // 0x348
	float fRespawnSecond; // 0x350
	float fRespawnStartTimeSecond; // 0x354
	UProgressBar* PB_RespawnProgress; // 0x358
	UTextBlock* TXT_RespawnProgress; // 0x360
};

struct UCrowVehicleWeaponManager {
	TArray<ACrowWeaponVehicle*> EmptyWeapons; // 0xb0
	TMap<int32_t, FCrowVehicleSeatWeaponData> EquipmentWeaponMap; // 0xc0
	TMap<int32_t, ACrowWeaponVehicle*> SpecialWeaponMap; // 0x110
	TArray<AActor*> ChildActorList; // 0x160
};

struct ABP_GBU31_Missile_C {
	USkeletalMeshComponent* GBU31; // 0x240
};

struct UBehaviorTreeComponent {
	TArray<UBTNode*> NodeInstances; // 0x128
	UBehaviorTree* DefaultBehaviorTreeAsset; // 0x278
};

struct UFindSessionsCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UAnimNotify_CLSMovementAction {
	ECLSMovementAction MovementAction; // 0x30
};

struct ALight {
	ULightComponent* LightComponent; // 0x220
	char bEnabled : 1; // 0x228
};

struct UMaterialExpressionShaderStageSwitch {
	FExpressionInput PixelShader; // 0x40
	FExpressionInput VertexShader; // 0x54
};

struct UWaterSubsystem {
	FMulticastInlineDelegate OnCameraUnderwaterStateChanged; // 0x70
	FMulticastInlineDelegate OnWaterScalabilityChanged; // 0x80
	UStaticMesh* DefaultRiverMesh; // 0x90
	UStaticMesh* DefaultLakeMesh; // 0x98
	AWaterMeshActor* WaterMeshActor; // 0xa0
	UMaterialParameterCollection* MaterialParameterCollection; // 0xd0
};

struct UBrushComponent {
	UModel* Brush; // 0x440
	UBodySetup* BrushBodySetup; // 0x448
};

struct UMeshVertexSculptTool {
	UVertexBrushSculptProperties* SculptProperties; // 0x9d8
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0x9e0
};

struct UCrowBookMarkWidget {
	UCrowButton* BT_BookMark; // 0x358
	UTextBlock* TB_BookmarkTimer; // 0x360
};

struct UCrowIndicatorCompositionC {
	UCanvasPanel* CP_Root; // 0x348
	UCanvasPanel* CP_LocateArrow; // 0x350
	UCanvasPanel* CP_Icon; // 0x358
	UImage* IMG_Icon; // 0x360
	APawn* InstalledPawn; // 0x368
	uint32_t InstalledPawnPlayerID; // 0x370
	char InstalledPawnTeamID; // 0x374
};

struct UCanvas {
	float OrgX; // 0x28
	float OrgY; // 0x2c
	float ClipX; // 0x30
	float ClipY; // 0x34
	FColor DrawColor; // 0x38
	char bCenterX : 1; // 0x3c
	char bCenterY : 1; // 0x3c
	char bNoSmooth : 1; // 0x3c
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FPlane ColorModulate; // 0x50
	UTexture2D* DefaultTexture; // 0x60
	UTexture2D* GradientTexture0; // 0x68
	UReporterGraph* ReporterGraph; // 0x70
};

struct UParticleModuleVelocity {
	FRawDistributionVector StartVelocity; // 0x38
	FRawDistributionFloat StartVelocityRadial; // 0x80
};

struct UStaticMeshSocket {
	FName SocketName; // 0x28
	FVector RelativeLocation; // 0x30
	FRotator RelativeRotation; // 0x3c
	FVector RelativeScale; // 0x48
	FString Tag; // 0x58
};

struct UMaterialExpressionCosine {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct USeamSculptToolProperties {
	bool bShowWireframe; // 0x60
	bool bHitBackFaces; // 0x61
};

struct UBTDecorator_BlackboardBase {
	FBlackboardKeySelector BlackboardKey; // 0x68
};

struct USynthSamplePlayer {
	USoundWave* SoundWave; // 0x6c0
	FMulticastInlineDelegate OnSampleLoaded; // 0x6c8
	FMulticastInlineDelegate OnSamplePlaybackProgress; // 0x6d8
};

struct ACrowAkAmbientSoundFade {
	FString RTPC_Name; // 0x268
	UAkAudioEvent* EnterEvent; // 0x278
	UAkAudioEvent* ExitEvent; // 0x280
};

struct UCrowObserverMapIconWidget {
	UImage* IMG_SquadColor; // 0x3c8
	UTextBlock* TB_SquadNumber; // 0x3d0
	UCrowButton* BT_Button; // 0x3d8
	ACrowPlayerStateBase* LocalPlayerState; // 0x3e0
	ACrowPlayerStateBase* TargetPlayerState; // 0x3e8
	ACrowCharacterPawn* TargetCharacter; // 0x3f0
	ECrowPlayerState PrevPlayerState; // 0x3f8
};

struct UMediaPlayer {
	FMulticastInlineDelegate OnEndReached; // 0x28
	FMulticastInlineDelegate OnMediaClosed; // 0x38
	FMulticastInlineDelegate OnMediaOpened; // 0x48
	FMulticastInlineDelegate OnMediaOpenFailed; // 0x58
	FMulticastInlineDelegate OnPlaybackResumed; // 0x68
	FMulticastInlineDelegate OnPlaybackSuspended; // 0x78
	FMulticastInlineDelegate OnSeekCompleted; // 0x88
	FMulticastInlineDelegate OnTracksChanged; // 0x98
	FTimespan CacheAhead; // 0xa8
	FTimespan CacheBehind; // 0xb0
	FTimespan CacheBehindGame; // 0xb8
	bool NativeAudioOut; // 0xc0
	bool PlayOnOpen; // 0xc1
	char Shuffle : 1; // 0xc4
	char Loop : 1; // 0xc4
	UMediaPlaylist* Playlist; // 0xc8
	int32_t PlaylistIndex; // 0xd0
	FTimespan TimeDelay; // 0xd8
	float HorizontalFieldOfView; // 0xe0
	float VerticalFieldOfView; // 0xe4
	FRotator ViewRotation; // 0xe8
	FGuid PlayerGuid; // 0x120
};

struct USoundNodeSwitch {
	FName IntParameterName; // 0x48
};

struct UDeformMeshPolygonsTool {
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0xc8
	UDeformMeshPolygonsTransformProperties* TransformProps; // 0xd0
};

struct UCrowLandWheelsConfigTireAndWheel {
	FCrowTireAndWheelSetting Setting; // 0x28
};

struct UCrowPassengerInventory {
	TArray<ACrowWeaponVehicle*> EquipArray; // 0xb0
	TArray<ACrowWeaponVehicle*> PrevEquipArray; // 0xc0
	ACrowWeaponVehicle* SpecialWeapon; // 0xd0
	ACrowWeaponVehicle* PrevSpecialWeapon; // 0xd8
	int8_t CurrentSlotIndex; // 0xe0
	int8_t CurrentWeaponKey; // 0xe1
	ACrowPlayerControllerBase* PlayerController; // 0xe8
	ACrowGameHUDBase* CrowInGameHUD; // 0xf0
};

struct UCrowRankingAlarm {
	UWidgetSwitcher* WS_Rank; // 0x348
	UTextBlock* TB_Rank; // 0x350
	UTextBlock* TB_SubRank; // 0x358
	UTextBlock* TB_RankDesc; // 0x360
	uint32_t CurrentRank; // 0x368
};

struct UPhysicsSettings {
	FRigidBodyErrorCorrection PhysicErrorCorrection; // 0xe0
	ESettingsLockedAxis LockedAxis; // 0x114
	ESettingsDOF DefaultDegreesOfFreedom; // 0x115
	bool bSuppressFaceRemapTable; // 0x116
	bool bSupportUVFromHitResults; // 0x117
	bool bDisableActiveActors; // 0x118
	bool bDisableKinematicStaticPairs; // 0x119
	bool bDisableKinematicKinematicPairs; // 0x11a
	bool bDisableCCD; // 0x11b
	bool bEnableEnhancedDeterminism; // 0x11c
	float AnimPhysicsMinDeltaTime; // 0x120
	bool bSimulateAnimPhysicsAfterReset; // 0x124
	float MaxPhysicsDeltaTime; // 0x128
	bool bSubstepping; // 0x12c
	bool bSubsteppingAsync; // 0x12d
	float MaxSubstepDeltaTime; // 0x130
	int32_t MaxSubsteps; // 0x134
	float SyncSceneSmoothingFactor; // 0x138
	float InitialAverageFrameRate; // 0x13c
	int32_t PhysXTreeRebuildRate; // 0x140
	TArray<FPhysicalSurfaceName> PhysicalSurfaces; // 0x148
	FBroadphaseSettings DefaultBroadphaseSettings; // 0x158
	float MinDeltaVelocityForHitEvents; // 0x198
	FChaosPhysicsSettings ChaosSettings; // 0x19c
};

struct UGizmoLocalFloatParameterSource {
	float Value; // 0x48
	FGizmoFloatParameterChange LastChange; // 0x4c
};

struct UCrowRecoilUI {
	UTextBlock* TextCurrIndex; // 0x260
	UTextBlock* TextCoord; // 0x268
	UTextBlock* TextDistance; // 0x270
	UTextBlock* TextImportFilename; // 0x278
	UTextBlock* TextExportFilename; // 0x280
	UTextBlock* TextRemainCount; // 0x288
	UTextBlock* TextMaxCount; // 0x290
	UTextBlock* TextTablePath; // 0x298
	UTextBlock* TextEditPointMode; // 0x2a0
	FString ExportFileName; // 0x2a8
	FString ImportFileName; // 0x2b8
	ACrowRecoilPainter* recoilPainter; // 0x2c8
};

struct UCrowCharacterMainAnimFPBody {
	USkeletalMeshComponent* MeshForPoseCopy; // 0x3a0
};

struct UCrowScoreRankSlotGradeWidget {
	UTextBlock* TB_Rank; // 0x350
	UTextBlock* TB_Class; // 0x358
	UTextBlock* TB_Level; // 0x360
	UTextBlock* TB_ID; // 0x368
	UTextBlock* TB_Score; // 0x370
	UTextBlock* TB_PlayTime; // 0x378
	UTextBlock* TB_PlayCount; // 0x380
};

struct UCrowWidgetTooltip {
	UBorder* BD_Tooltip; // 0x348
	UTextBlock* TB_ToolTip; // 0x350
	UWidget* LastTargetWidget; // 0x358
};

struct UVariantObjectBinding {
	FString CachedActorLabel; // 0x28
	FSoftObjectPath ObjectPtr; // 0x38
	LazyObjectProperty LazyObjectPtr; // 0x50
	TArray<UPropertyValue*> CapturedProperties; // 0x70
	TArray<FFunctionCaller> FunctionCallers; // 0x80
};

struct UComboButtonWidgetStyle {
	FComboButtonStyle ComboButtonStyle; // 0x30
};

struct UBodySetupCore {
	FName BoneName; // 0x28
	EPhysicsType PhysicsType; // 0x30
	ECollisionTraceFlag CollisionTraceFlag; // 0x31
	EBodyCollisionResponse CollisionReponse; // 0x32
};

struct ACrowConquestMeteorActor {
	UBoxComponent* Root; // 0x220
	ACrowConquestMeteorSettings* MeteorSettingsActor; // 0x228
	TArray<ACrowConquestMeteorPieceActor*> SmallMeteorArray; // 0x230
	ACrowTargetTraceEffect* LargeMeteorEffect; // 0x240
	bool bIsFired; // 0x248
	float MeteorDistance; // 0x24c
};

struct ACrowGameModeTG {
	float EndWidgetVisibleTime; // 0x4a8
	float VehicleLifeSpanTime; // 0x4ac
	float BomberRespawnTime; // 0x4b0
};

struct UEditableGameplayTagQueryExpression_NoTagsMatch {
	FGameplayTagContainer Tags; // 0x28
};

struct UAvoidanceManager {
	float DefaultTimeToLive; // 0x30
	float LockTimeAfterAvoid; // 0x34
	float LockTimeAfterClean; // 0x38
	float DeltaTimeToPredict; // 0x3c
	float ArtificialRadiusExpansion; // 0x40
	float TestHeightDifference; // 0x44
	float HeightCheckMargin; // 0x48
};

struct UMovieWidget_C {
	UWidgetAnimation* Hide; // 0x3d0
	UWidgetAnimation* Show; // 0x3d8
	UImage* IMG_BG; // 0x3e0
	UImage* IMG_Keyboard_Space; // 0x3e8
};

struct UVideoCaptureProtocol {
	bool bUseCompression; // 0x68
	float CompressionQuality; // 0x6c
};

struct ULightmappedSurfaceCollection {
	UModel* SourceModel; // 0x28
	TArray<int32_t> Surfaces; // 0x30
};

struct UCrowSelectModButtonBigWidget {
	UImage* IMG_ModIcon; // 0x348
	UTextBlock* TB_MODName; // 0x350
	UTextBlock* TB_ModDesc; // 0x358
	UTextBlock* TB_DeselectModName; // 0x360
	UTextBlock* TB_DeselectModDesc; // 0x368
	UCrowToggleButton* CTB_ModSelect_Button; // 0x370
	ECrowGameMode GameMod; // 0x388
};

struct UToFloatField {
	UFieldNodeInt* IntField; // 0xb0
};

struct UParticleSystemReplay {
	int32_t ClipIDNumber; // 0x28
};

struct URadialFalloff {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	float Radius; // 0xc0
	FVector position; // 0xc4
	EFieldFalloffType Falloff; // 0xd0
};

struct UMediaComponent {
	UMediaTexture* MediaTexture; // 0xb0
	UMediaPlayer* MediaPlayer; // 0xb8
};

struct UCrowTriggerCommandSafeBox {
	ACrowSafeBoxEventActor* SafeBoxActor; // 0xc0
};

struct UConsoleSettings {
	int32_t MaxScrollbackSize; // 0x28
	TArray<FAutoCompleteCommand> ManualAutoCompleteList; // 0x30
	TArray<FString> AutoCompleteMapPaths; // 0x40
	float BackgroundOpacityPercentage; // 0x50
	bool bOrderTopToBottom; // 0x54
	bool bDisplayHelpInAutoComplete; // 0x55
	FColor InputColor; // 0x58
	FColor HistoryColor; // 0x5c
	FColor AutoCompleteCommandColor; // 0x60
	FColor AutoCompleteCVarColor; // 0x64
	FColor AutoCompleteFadedColor; // 0x68
};

struct USteamVRChaperoneComponent {
	FMulticastInlineDelegate OnLeaveBounds; // 0xb0
	FMulticastInlineDelegate OnReturnToBounds; // 0xc0
};

struct UBoxComponent {
	FVector BoxExtent; // 0x458
	float LineThickness; // 0x464
};

struct UMaterialExpressionChannelMaskParameter {
	EChannelMaskParameterColor MaskChannel; // 0x70
};

struct UAkTVOSInitializationSettings {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkAudioSession AudioSession; // 0x90
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0xa0
	FAkAdvancedInitializationSettings AdvancedSettings; // 0xc8
};

struct UChaosDestructionListener {
	char bIsCollisionEventListeningEnabled : 1; // 0x1f8
	char bIsBreakingEventListeningEnabled : 1; // 0x1f8
	char bIsTrailingEventListeningEnabled : 1; // 0x1f8
	FChaosCollisionEventRequestSettings CollisionEventRequestSettings; // 0x1fc
	FChaosBreakingEventRequestSettings BreakingEventRequestSettings; // 0x214
	FChaosTrailingEventRequestSettings TrailingEventRequestSettings; // 0x22c
	TSet<AChaosSolverActor*> ChaosSolverActors; // 0x248
	TSet<AGeometryCollectionActor*> GeometryCollectionActors; // 0x298
	FMulticastInlineDelegate OnCollisionEvents; // 0x2e8
	FMulticastInlineDelegate OnBreakingEvents; // 0x2f8
	FMulticastInlineDelegate OnTrailingEvents; // 0x308
};

struct UCrowBuffWidget {
	UCrowButton* BT_BuffSlot_1; // 0x260
	UImage* IMG_Buff_1; // 0x268
	UCrowButton* BT_BuffSlot_2; // 0x270
	UImage* IMG_Buff_2; // 0x278
	UCrowButton* BT_BuffSlot_3; // 0x280
	UImage* IMG_Buff_3; // 0x288
	UCrowButton* BT_BuffSlot_4; // 0x290
	UImage* IMG_Buff_4; // 0x298
	UCrowButton* BT_BuffSlot_5; // 0x2a0
	UImage* IMG_Buff_5; // 0x2a8
	UCrowButton* BT_BuffSlot_6; // 0x2b0
	UImage* IMG_Buff_6; // 0x2b8
	UCrowButton* BT_BuffSlot_7; // 0x2c0
	UImage* IMG_Buff_7; // 0x2c8
	UCrowButton* BT_BuffSlot_8; // 0x2d0
	UImage* IMG_Buff_8; // 0x2d8
	UCrowButton* BT_BuffSlot_9; // 0x2e0
	UImage* IMG_Buff_9; // 0x2e8
	UCanvasPanel* CP_Buff_ToolTip; // 0x2f0
	UTextBlock* TB_Name; // 0x2f8
	UTextBlock* TB_Desc; // 0x300
	UTextBlock* TB_RemainTime; // 0x308
	TArray<FCrowBuffIconInfo> BuffIconInfoArray; // 0x310
};

struct UAddPatchTool {
	UAddPatchToolProperties* ShapeSettings; // 0x90
	UNewMeshMaterialProperties* MaterialProperties; // 0x98
	UPreviewMesh* PreviewMesh; // 0xa0
};

struct UMovieSceneFloatSection {
	FMovieSceneFloatChannel FloatCurve; // 0xf0
};

struct UGizmoLineHandleComponent {
	FVector Normal; // 0x460
	float HandleSize; // 0x46c
	float Thickness; // 0x470
	FVector Direction; // 0x474
	float Length; // 0x480
	bool bImageScale; // 0x484
};

struct ATetherCableActor {
	FTetherCableProperties CableProperties; // 0x220
	bool bLockCurrentState; // 0x2c0
	UStaticMeshComponent* StaticMeshComponent; // 0x2c8
	bool bSynchronousRealtime; // 0x2d0
	float RealtimeInEditorTimeDilation; // 0x2d4
	bool bDebugVisualizeSimulationParticles; // 0x2d8
	bool bDebugVisualizeSimulationCollision; // 0x2d9
	bool bDebugVisualizeBuiltStaticMeshPoints; // 0x2da
	bool bDebugVisualizeContactPoints; // 0x2db
	bool bDebugVisualizeComponentLocations; // 0x2dc
	bool bDebugVisualizeTangents; // 0x2dd
	bool bVisible; // 0x2de
	USceneComponent* SceneRoot; // 0x2e0
	FDateTime TimeCreated; // 0x2e8
	UTetherGuideSplineComponent* GuideSpline; // 0x2f0
	FTetherSimulationModel ActiveSimulationModel; // 0x300
	UStaticMesh* StaticMesh; // 0x350
	FCableMeshGenerationCurveDescription BuiltCurveDescriptionLocalSpaceSimplified; // 0x358
	UTetherCableMeshComponent* DynamicPreviewMesh; // 0x380
	UTetherMeshGenerator* MeshGenerator; // 0x388
};

struct UAddPatchToolProperties {
	float Width; // 0x60
	float Rotation; // 0x64
	int32_t Subdivisions; // 0x68
	float Shift; // 0x6c
};

struct AVectorFieldVolume {
	UVectorFieldComponent* VectorFieldComponent; // 0x220
};

struct USubmixEffectDelayPreset {
	FSubmixEffectDelaySettings Settings; // 0x9c
	FSubmixEffectDelaySettings DynamicSettings; // 0xa8
};

struct UAudioSettings {
	FSoftObjectPath DefaultSoundClassName; // 0x38
	FSoftObjectPath DefaultMediaSoundClassName; // 0x50
	FSoftObjectPath DefaultSoundConcurrencyName; // 0x68
	FSoftObjectPath DefaultBaseSoundMix; // 0x80
	FSoftObjectPath VoiPSoundClass; // 0x98
	FSoftObjectPath MasterSubmix; // 0xb0
	FSoftObjectPath ReverbSubmix; // 0xc8
	FSoftObjectPath EQSubmix; // 0xe0
	EVoiceSampleRate VoiPSampleRate; // 0xf8
	float DefaultReverbSendLevel; // 0xfc
	int32_t MaximumConcurrentStreams; // 0x100
	float GlobalMinPitchScale; // 0x104
	float GlobalMaxPitchScale; // 0x108
	TArray<FAudioQualitySettings> QualityLevels; // 0x110
	char bAllowPlayWhenSilent : 1; // 0x120
	char bDisableMasterEQ : 1; // 0x120
	char bAllowCenterChannel3DPanning : 1; // 0x120
	uint32_t NumStoppingSources; // 0x124
	EPanningMethod PanningMethod; // 0x128
	EMonoChannelUpmixMethod MonoChannelUpmixMethod; // 0x129
	FString DialogueFilenameFormat; // 0x130
};

struct UCompositeDataTable {
	TArray<UDataTable*> ParentTables; // 0xb0
	TArray<UDataTable*> OldParentTables; // 0xc0
};

struct UMaterialExpressionLogarithm10 {
	FExpressionInput X; // 0x40
};

struct ACrowTeleportationArea {
	UBoxComponent* CollisionComponent; // 0x220
	bool bInsideEntryingType; // 0x228
	float ExecutionDelay; // 0x22c
	float ExecutionCountDown; // 0x230
	AActor* TeleportationDestinationActor; // 0x238
	AActor* TeleportationDestinationActorOnSeaVehicle; // 0x240
	float TeleportationRandomRadius; // 0x248
	TArray<FCrowTeleportationTargetInfo> TeleportationTargetInfos; // 0x250
};

struct UNiagaraPreviewAxis_InterpParamVector2D {
	FVector2D Min; // 0x38
	FVector2D Max; // 0x40
};

struct UCrowSquadPointWidget {
	UTextBlock* TB_SquadPoint; // 0x348
};

struct ASpotLight {
	USpotLightComponent* SpotLightComponent; // 0x230
};

struct UNiagaraDataInterfaceArrayFloat3 {
	TArray<FVector> FloatData; // 0x50
};

struct UProceduralTorusToolProperties {
	float MajorRadius; // 0x70
	float MinorRadius; // 0x74
	int32_t TubeSlices; // 0x78
	int32_t CrossSectionSlices; // 0x7c
};

struct UCrowIndicatorSupplyAmmoWidget {
	UTextBlock* TB_CoolTime; // 0x3c8
	float DisplayCoolMinDistance; // 0x3d0
	float DisplayCoolMaxDistance; // 0x3d4
};

struct UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UCrowRadialMenuEmotionWidget {
	UCrowRadialMenuButtonWidget* RadialMenuButtonWidget_1; // 0x3d0
	UCrowRadialMenuButtonWidget* RadialMenuButtonWidget_2; // 0x3d8
	UCrowRadialMenuButtonWidget* RadialMenuButtonWidget_3; // 0x3e0
	UCrowRadialMenuButtonWidget* RadialMenuButtonWidget_4; // 0x3e8
	UCrowRadialMenuButtonWidget* RadialMenuButtonWidget_5; // 0x3f0
};

struct UCrowVehicleWidgetSeatTank {
	UOverlay* OV_Tank_Cannon; // 0x3b8
	USizeBox* SB_Seat_RWS; // 0x3c0
	USizeBox* SB_Seat_Tusk; // 0x3c8
};

struct UGizmoBaseComponent {
	FLinearColor Color; // 0x440
	float HoverSizeMultiplier; // 0x450
	float PixelHitDistanceThreshold; // 0x454
};

struct UBoneMaskFilter {
	TArray<FInputBlendPose> BlendPoses; // 0x28
};

struct UCrowRadialMenuSprayWidget {
	UCrowRadialMenuButtonWidget* WB_Customize_SprayRadialMenu_8Button_1; // 0x3d0
	UCrowRadialMenuButtonWidget* WB_Customize_SprayRadialMenu_8Button_2; // 0x3d8
	UCrowRadialMenuButtonWidget* WB_Customize_SprayRadialMenu_8Button_3; // 0x3e0
	UCrowRadialMenuButtonWidget* WB_Customize_SprayRadialMenu_8Button_4; // 0x3e8
	UCrowRadialMenuButtonWidget* WB_Customize_SprayRadialMenu_8Button_5; // 0x3f0
	UCrowRadialMenuButtonWidget* WB_Customize_SprayRadialMenu_8Button_6; // 0x3f8
	UCrowRadialMenuButtonWidget* WB_Customize_SprayRadialMenu_8Button_7; // 0x400
	UCrowRadialMenuButtonWidget* WB_Customize_SprayRadialMenu_8Button_8; // 0x408
	UImage* IMG_CircleSelect; // 0x410
	UCanvasPanel* CP_MouseTip; // 0x418
	UHorizontalBox* HB_Registration; // 0x420
	UHorizontalBox* HB_Cancel; // 0x428
	UWidgetAnimation* RegistAnimation; // 0x430
	UCrowCustomizeEtcDescWidget* ParentWidget; // 0x438
};

struct UAnimCompress {
	char bNeedsSkeleton : 1; // 0x38
	AnimationCompressionFormat TranslationCompressionFormat; // 0x3c
	AnimationCompressionFormat RotationCompressionFormat; // 0x3d
	AnimationCompressionFormat ScaleCompressionFormat; // 0x3e
};

struct UBlueprint {
	UObject* ParentClass; // 0x50
	EBlueprintType BlueprintType; // 0x58
	char bRecompileOnLoad : 1; // 0x59
	char bHasBeenRegenerated : 1; // 0x59
	char bIsRegeneratingOnLoad : 1; // 0x59
	int32_t BlueprintSystemVersion; // 0x5c
	USimpleConstructionScript* SimpleConstructionScript; // 0x60
	TArray<UActorComponent*> ComponentTemplates; // 0x68
	TArray<UTimelineTemplate*> Timelines; // 0x78
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x88
	UInheritableComponentHandler* InheritableComponentHandler; // 0x98
};

struct UParticleModuleMeshRotationRateOverLife {
	FRawDistributionVector RotRate; // 0x30
	char bScaleRotRate : 1; // 0x78
};

struct URuntimeVirtualTexture {
	int32_t TileCount; // 0x28
	int32_t TileSize; // 0x2c
	int32_t TileBorderSize; // 0x30
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x34
	bool bCompressTextures; // 0x35
	bool bClearTextures; // 0x36
	bool bSinglePhysicalSpace; // 0x37
	bool bPrivateSpace; // 0x38
	bool bAdaptive; // 0x39
	bool bContinuousUpdate; // 0x3a
	int32_t RemoveLowMips; // 0x3c
	TextureGroup LODGroup; // 0x40
	int32_t Size; // 0x44
	URuntimeVirtualTextureStreamingProxy* StreamingTexture; // 0x48
};

struct UCrowLootingSlotEventHandler {
	FVector2D CurrMousePos; // 0x3b0
};

struct UInterpTrackMove {
	FInterpCurveVector PosTrack; // 0x70
	FInterpCurveVector EulerTrack; // 0x88
	FInterpLookupTrack LookupTrack; // 0xa0
	FName LookAtGroupName; // 0xb0
	float LinCurveTension; // 0xb8
	float AngCurveTension; // 0xbc
	char bUseQuatInterpolation : 1; // 0xc0
	char bShowArrowAtKeys : 1; // 0xc0
	char bDisableMovement : 1; // 0xc0
	char bShowTranslationOnCurveEd : 1; // 0xc0
	char bShowRotationOnCurveEd : 1; // 0xc0
	char bHide3DTrack : 1; // 0xc0
	EInterpTrackMoveRotMode RotMode; // 0xc4
};

struct ACrowConquestVehicleSpawnerGround {
	float CoolTime; // 0x288
	bool IsNeutralityCheck; // 0x28c
	int32_t NeutralityCheckTime; // 0x290
	float NeutralityCharacterRadius; // 0x294
	float NeutralitySpawnerDist; // 0x298
	float NeutralityDotDamage; // 0x29c
};

struct UCrowTabMenuFriendWidget {
	UCrowSocialWidget* SocialWidget; // 0x380
};

struct UCrowVehicleWidgetWarningHeli {
	FCrowVehicleWarning StatusWarning; // 0x350
	FCrowVehicleWarning MissileWarning; // 0x370
	FCrowVehicleWarning DamageWarning; // 0x390
	UCanvasPanel* CP_StatusWarning; // 0x3b0
	UTextBlock* TB_StatusWarning; // 0x3b8
	UCanvasPanel* CP_MissileWarning; // 0x3c0
	UTextBlock* TB_MissileWarning; // 0x3c8
	UCanvasPanel* CP_DamageWarning; // 0x3d0
	UImage* IMG_Tail; // 0x3d8
	UImage* IMG_Base; // 0x3e0
	UImage* IMG_Main; // 0x3e8
	float FirstStepHP; // 0x3f0
	float SecondStepHP; // 0x3f4
	float ThirdStepHP; // 0x3f8
	UWidgetAnimation* AniDamageYellow; // 0x400
	UWidgetAnimation* AniDamageOrange; // 0x408
	UWidgetAnimation* AniDamageRed; // 0x410
};

struct UGizmoRectangleComponent {
	FVector DirectionX; // 0x460
	FVector DirectionY; // 0x46c
	float OffsetX; // 0x478
	float OffsetY; // 0x47c
	float LengthX; // 0x480
	float LengthY; // 0x484
	float Thickness; // 0x488
	char SegmentFlags; // 0x48c
};

struct UGroupEdgeInsertionTool {
	UGroupEdgeInsertionProperties* Settings; // 0x98
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xa0
};

struct UNavigationGraphNodeComponent {
	FNavGraphNode Node; // 0x1f8
	UNavigationGraphNodeComponent* NextNodeComponent; // 0x210
	UNavigationGraphNodeComponent* PrevNodeComponent; // 0x218
};

struct UCrowTriggerControlComponent {
	FCrowBuildingTriggerConfig BuildingTriggerConfig; // 0xb0
	FTimerHandle LineTraceHandle; // 0xb8
	TArray<UCrowTriggerComponent*> DynamicTargetList; // 0xc0
	TWeakObjectPtr<UCrowWorldTrigger> CurrentWorldTrigger; // 0xd0
	TArray<UCrowTriggerUIBase*> DynamicUIList; // 0xd8
};

struct UCrowSkeletalMeshMerge {
	USkeletalMesh* MergeMesh; // 0x28
	TArray<USkeletalMesh*> SrcMeshList; // 0x30
	TArray<FCrowSkeletalMeshMergeMaterials> MaterialsToMerge; // 0x40
	TArray<int32_t> MaterialIds; // 0x188
};

struct UBTDecorator_TimeLimit {
	float TimeLimit; // 0x68
};

struct USpinBox {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	FSpinBoxStyle WidgetStyle; // 0x120
	USlateWidgetStyleAsset* Style; // 0x408
	int32_t MinFractionalDigits; // 0x410
	int32_t MaxFractionalDigits; // 0x414
	bool bAlwaysUsesDeltaSnap; // 0x418
	float Delta; // 0x41c
	float SliderExponent; // 0x420
	FSlateFontInfo Font; // 0x428
	ETextJustify Justification; // 0x480
	float MinDesiredWidth; // 0x484
	bool ClearKeyboardFocusOnCommit; // 0x488
	bool SelectAllTextOnCommit; // 0x489
	FSlateColor ForegroundColor; // 0x490
	FMulticastInlineDelegate OnValueChanged; // 0x4b8
	FMulticastInlineDelegate OnValueCommitted; // 0x4c8
	FMulticastInlineDelegate OnBeginSliderMovement; // 0x4d8
	FMulticastInlineDelegate OnEndSliderMovement; // 0x4e8
	char bOverride_MinValue : 1; // 0x4f8
	char bOverride_MaxValue : 1; // 0x4f8
	char bOverride_MinSliderValue : 1; // 0x4f8
	char bOverride_MaxSliderValue : 1; // 0x4f8
	float MinValue; // 0x4fc
	float MaxValue; // 0x500
	float MinSliderValue; // 0x504
	float MaxSliderValue; // 0x508
};

struct UCrowCustomModeManager {
	TArray<FCrowCustomDisplayRoomInfo> CustomDisplayRoomInfoArray; // 0x28
	FCrowCustomRoomInfo CurrentCustomRoomInfo; // 0x38
	TMap<uint64_t, FCrowCustomModeInvitation> ReceivedCustomModeInvitationMap; // 0xf0
	bool IsStart; // 0x140
};

struct ACrowProjectileFlashBang {
	float MaxTime; // 0x18d0
	UCurveFloat* DistanceCurve; // 0x18d8
	UCurveFloat* AngleCurve; // 0x18e0
};

struct UParticleModuleSize_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct UGizmoConstantAxisSource {
	FVector Origin; // 0x30
	FVector Direction; // 0x3c
};

struct UCrowMissionTimerWidget {
	UTextBlock* TB_Timer; // 0x350
	bool IsDailyTime; // 0x358
	int32_t DailyMissionEndSec; // 0x35c
	int32_t WeeklyMissionEndSec; // 0x360
	int32_t CurrDailyMissionTime; // 0x364
	int32_t CurrWeeklyMissionTime; // 0x368
	int32_t CurrTime; // 0x36c
};

struct APhysicsVolume {
	float TerminalVelocity; // 0x258
	int32_t Priority; // 0x25c
	float FluidFriction; // 0x260
	char bWaterVolume : 1; // 0x264
	char bPhysicsOnContact : 1; // 0x264
};

struct UImplicitOffsetProperties {
	float Smoothness; // 0x60
	bool bPreserveUVs; // 0x64
};

struct UCrowHUDWidgetTrainning {
	UCrowStatusPlayerInfo* WB_StatusPlayerInfo_TG; // 0x348
	UCrowInGameMissionTutorialAlarm* WB_MissionCount_Alarm_Tutorial; // 0x350
};

struct UMaterialExpressionCustom {
	FString Code; // 0x40
	ECustomMaterialOutputType OutputType; // 0x50
	FString Description; // 0x58
	TArray<FCustomInput> Inputs; // 0x68
	TArray<FCustomOutput> AdditionalOutputs; // 0x78
	TArray<FCustomDefine> AdditionalDefines; // 0x88
	TArray<FString> IncludeFilePaths; // 0x98
};

struct ACrowEscapeHeliPawn {
	UBoxComponent* Root; // 0x220
	UBoxComponent* CharacterOverlap; // 0x228
	USceneComponent* IconLocation; // 0x230
	USkeletalMeshComponent* HeliMesh; // 0x238
	UCrowSpringArmComponent* SpringArmComp; // 0x240
	UCameraComponent* CameraComp; // 0x248
	float VehicleSpeed; // 0x250
	UCurveFloat* VehicleSpeedCurve; // 0x258
	UAnimMontage* AniHeli_CloseIdle; // 0x260
	UAnimMontage* AniHeli_OpenIdle; // 0x268
	UAnimMontage* AniHeli_SpeedDown; // 0x270
	UAnimMontage* AniHeli_DoorOpen; // 0x278
	UAnimMontage* AniHeli_DoorClose; // 0x280
	UAnimMontage* AniPassenger; // 0x288
	UAkAudioEvent* HeliSound_Loop; // 0x290
	FCrowGameIconDisplayInfo Icon; // 0x298
	ACrowEscapeVehicleLadder* LadderClass; // 0x320
	uint16_t EscapePointID; // 0x328
	float MoveElapseTime; // 0x32c
	bool bIsMoveSpline; // 0x330
	bool bIsMoveToPoint; // 0x331
	ACrowEscapeVehicleLadder* LadderActor; // 0x338
	USplineComponent* SplineComp; // 0x340
};

struct UMovieSceneParticleParameterTrack {
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct UNiagaraDataInterfaceLandscape {
	AActor* SourceLandscape; // 0x38
};

struct ACrowCompositionC {
	float BuildTime; // 0x230
	USkeletalMeshComponent* Body; // 0x238
	char OwnerTeamID; // 0x240
	bool bIsInCompositionCVolume; // 0x241
	UParticleSystem* FXLight; // 0x248
	UParticleSystem* FXScreen; // 0x250
	UParticleSystem* FXExplosion; // 0x258
	UParticleSystemComponent* FXLightComponent; // 0x260
	UParticleSystemComponent* FXScreenComponent; // 0x268
	TArray<FCrowCompositionCStepInfo> StepInfos; // 0x270
	int32_t CurrentStepInfoIndex; // 0x280
	ACrowGameStateBombMission* GameStateBombMission; // 0x288
	UCrowTriggerComponent* TrigerComponent; // 0x290
	bool bIsReadyToTimer; // 0x298
	float DamageRadius; // 0x29c
};

struct UPointLightComponent {
	char bUseInverseSquaredFalloff : 1; // 0x340
	float LightFalloffExponent; // 0x344
	float SourceRadius; // 0x348
	float SoftSourceRadius; // 0x34c
	float SourceLength; // 0x350
};

struct UParticleModuleOrbitBase {
	char bUseEmitterTime : 1; // 0x30
};

struct UAssetManager {
	TArray<UObject*> ObjectReferenceList; // 0x2c0
	bool bIsGlobalAsyncScanEnvironment; // 0x2d0
	bool bShouldGuessTypeAndName; // 0x2d1
	bool bShouldUseSynchronousLoad; // 0x2d2
	bool bIsLoadingFromPakFiles; // 0x2d3
	bool bShouldAcquireMissingChunksOnLoad; // 0x2d4
	bool bOnlyCookProductionAssets; // 0x2d5
	bool bIsBulkScanning; // 0x2d6
	bool bIsPrimaryAssetDirectoryCurrent; // 0x2d7
	bool bIsManagementDatabaseCurrent; // 0x2d8
	bool bUpdateManagementDatabaseAfterScan; // 0x2d9
	bool bIncludeOnlyOnDiskAssets; // 0x2da
	bool bHasCompletedInitialScan; // 0x2db
	int32_t NumberOfSpawnedNotifications; // 0x2dc
};

struct USoundNodeDelay {
	float DelayMin; // 0x48
	float DelayMax; // 0x4c
};

struct UDatasmithLandscapeTemplate {
	UMaterialInterface* LandscapeMaterial; // 0x30
	int32_t StaticLightingLOD; // 0x38
};

struct UCrowCustomDepthDecal {
	UMaterialInstanceDynamic* MaterialDynamic; // 0x4d0
	UCurveFloat* FadeOutCurve; // 0x4d8
	FName AttachedBoneName; // 0x4e0
	UCrowDecalManager* DecalManager; // 0x4e8
};

struct ACrowMiningPointActor {
	UBoxComponent* BoxComponent; // 0x220
	UBoxComponent* CollisionCheckBox; // 0x228
	UCrowPingTargetBoxComponent* PingArea; // 0x230
	FCrowMiningPointInfo MiningPointInfo; // 0x238
	uint16_t PointID; // 0x23a
	uint16_t MineralCount; // 0x23c
	USkeletalMeshComponent* MiningMachineMeshComp; // 0x240
	USceneComponent* IconLocation; // 0x248
	USceneComponent* PointEffectLocation; // 0x250
	USceneComponent* CollectEffectLocation; // 0x258
	float MiningTimeRatio; // 0x260
	uint16_t MineralMin; // 0x264
	uint16_t MineralMax; // 0x266
	FText InstallMiningMachineInteractionText; // 0x268
	float CollectMiningMachineInteractionTime; // 0x280
	FText CollectMiningMachineInteractionText; // 0x288
	FSoftObjectPath MiningMachinePath; // 0x2a0
	UAnimMontage* AniStart; // 0x2b8
	UAnimMontage* AniLoop; // 0x2c0
	UAnimMontage* AniEnd; // 0x2c8
	UAnimMontage* AniDeactive; // 0x2d0
	float EffectDistance; // 0x2d8
	UParticleSystem* EffectPoint; // 0x2e0
	UParticleSystem* EffectStartMining; // 0x2e8
	UParticleSystem* EffectEndMining; // 0x2f0
	UParticleSystem* EffectGlow; // 0x2f8
	UParticleSystem* EffectSmoke; // 0x300
	UParticleSystem* EffectFloorSmoke; // 0x308
	UParticleSystem* EffectCollect; // 0x310
	UAkAudioEvent* SoundCollect; // 0x318
	UParticleSystemComponent* EffectPointComponent; // 0x320
	UParticleSystemComponent* EffectEndMiningComponent; // 0x328
	UParticleSystemComponent* EffectGlowComponent; // 0x330
	UParticleSystemComponent* EffectSmokeComponent; // 0x338
	UParticleSystemComponent* EffectFloorSmokeComponent; // 0x340
	FCrowGameIconDisplayInfo IconActive; // 0x348
	FCrowGameIconDisplayInfo IconMining_MySquad; // 0x3d0
	FCrowGameIconDisplayInfo IconComplete_MySquad; // 0x458
	FCrowGameIconDisplayInfo IconMining_Enemy; // 0x4e0
	FCrowGameIconDisplayInfo IconComplete_Enemy; // 0x568
};

struct UGameplayTask_TimeLimitedExecution {
	FMulticastInlineDelegate OnFinished; // 0x68
	FMulticastInlineDelegate OnTimeExpired; // 0x78
};

struct ACrowConquestSkyRespawnPoint {
	UBoxComponent* BoxComponent; // 0x220
	ECrowTeam_RedBlue Team; // 0x228
	FCrowGameIconDisplayInfo IconInfo; // 0x230
};

struct UCrowMissionAreaRespawn {
	TArray<UShapeComponent*> RespawnShapeArray; // 0x210
};

struct UAnimNotifyState_TimedNiagaraEffect {
	UNiagaraSystem* Template; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct UEndpointSubmix {
	FName EndpointType; // 0x38
	UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40
	UAudioEndpointSettingsBase* EndpointSettings; // 0x48
};

struct UProceduralArrowToolProperties {
	float ShaftRadius; // 0x70
	float ShaftHeight; // 0x74
	float HeadRadius; // 0x78
	float HeadHeight; // 0x7c
	int32_t RadialSlices; // 0x80
	int32_t TotalSubdivisions; // 0x84
};

struct UAnimSequence {
	int32_t NumFrames; // 0xa8
	TArray<FTrackToSkeletonMap> TrackToSkeletonMapTable; // 0xb0
	UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xd0
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd8
	EAdditiveAnimationType AdditiveAnimType; // 0x150
	EAdditiveBasePoseType RefPoseType; // 0x151
	UAnimSequence* RefPoseSeq; // 0x158
	int32_t RefFrameIndex; // 0x160
	FName RetargetSource; // 0x164
	EAnimInterpolationType Interpolation; // 0x16c
	bool bEnableRootMotion; // 0x16d
	ERootMotionRootLock RootMotionRootLock; // 0x16e
	bool bForceRootLock; // 0x16f
	bool bUseNormalizedRootMotionScale; // 0x170
	bool bRootMotionSettingsCopiedFromMontage; // 0x171
	TArray<FAnimSyncMarker> AuthoredSyncMarkers; // 0x178
	TArray<FBakedCustomAttributePerBoneData> BakedPerBoneCustomAttributeData; // 0x1a0
};

struct USoundNodeDialoguePlayer {
	FDialogueWaveParameter DialogueWaveParameter; // 0x48
	char bLooping : 1; // 0x68
};

struct UDrawAndRevolveTool {
	UCurveControlPointsMechanic* ControlPointsMechanic; // 0xf8
	UConstructionPlaneMechanic* PlaneMechanic; // 0x100
	URevolveToolProperties* Settings; // 0x108
	UNewMeshMaterialProperties* MaterialProperties; // 0x110
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0x118
};

struct UCrowIndicatorLoadoutBoxWidget {
	UTextBlock* TB_CoolTime; // 0x3c8
	float DisplayCoolMinDistance; // 0x3d0
	float DisplayCoolMaxDistance; // 0x3d4
};

struct UCrowLobbyMainWidget {
	UCrowGameModDetailWidget* WB_GameModDetail; // 0x348
	UCanvasPanel* CP_Main; // 0x350
	UVerticalBox* VB_Lobby_Play; // 0x358
	UCrowModInfoButtonWidget* WB_LobbyModInfoButton; // 0x360
	UCrowButton* BT_Play; // 0x368
	UCrowButton* BT_Matching; // 0x370
	UCrowButton* BT_Join; // 0x378
	UCrowLocalSelectSlotWidget* LocalSelectSlotWidgetClass; // 0x380
	UCanvasPanel* CP_LocalSelect; // 0x388
	UCrowToggleButton* BT_Toggle_LocalSelect; // 0x390
	UTextBlock* TB_CurrentLocal; // 0x398
	UVerticalBox* VB_LocalSelect_List; // 0x3a0
	UWidgetSwitcher* WS_CameraView; // 0x3a8
	UCrowButton* BT_CameraFront; // 0x3b0
	UCrowButton* BT_CameraLeft; // 0x3b8
	UCrowButton* BT_CameraRight; // 0x3c0
	UHorizontalBox* HB_Tutorial_Customize; // 0x3c8
	UCanvasPanel* CP_LobbyTabPanel; // 0x3d0
	UCrowTopMainMenuWidget* WB_TopMainMenu; // 0x3d8
	UCrowTopBarDescWidget* WB_TopBar_Desc; // 0x3e0
	UCrowPlaySettingWidget* WB_PlaySetting; // 0x3e8
	UCanvasPanel* CP_TopRightMenu; // 0x3f0
	UCrowButton* BT_Social; // 0x3f8
	UCrowRankWidget* WB_RankWidget; // 0x400
	UWidgetSwitcher* WS_MesseageMode; // 0x408
	UCrowButton* BT_AllAllow; // 0x410
	UCrowButton* BT_FriendsOnly; // 0x418
	UCrowButton* BT_AllRefuse; // 0x420
	UCrowUserProfileWidget* WB_UserProfile; // 0x428
	UCrowButton* BT_InviteMail; // 0x430
	UImage* IMG_Icon_Invite_New; // 0x438
	UCrowButton* BT_Setting; // 0x440
	UCrowButton* BT_PostMail; // 0x448
	UCrowInviteMessageWidget* InviteMessageWidgetClass; // 0x450
	UCanvasPanel* CP_InviteList; // 0x458
	UCrowButton* BT_InviteExit; // 0x460
	UScrollBox* SB_InviteList; // 0x468
	UCrowButton* BT_LocalPlayerSlot; // 0x470
	UImage* IMG_LocalThumbnail; // 0x478
	UCrowButton* BT_PartySlot_1; // 0x480
	UImage* IMG_UserThumbnail_1; // 0x488
	UImage* IMG_Respond_1; // 0x490
	UCrowButton* BT_PartySlot_2; // 0x498
	UImage* IMG_UserThumbnail_2; // 0x4a0
	UImage* IMG_Respond_2; // 0x4a8
	UCrowButton* BT_PartySlot_3; // 0x4b0
	UImage* IMG_UserThumbnail_3; // 0x4b8
	UImage* IMG_Respond_3; // 0x4c0
	UCrowCustomizeCharacterDescWidget* WB_CharacterCustomizeDesc; // 0x4c8
	UCrowCustomizeEtcDescWidget* WB_CustomizeEtcDesc; // 0x4d0
	UCrowCustomizeItemDescWidget* WB_CustomizeItemDesc; // 0x4d8
	UCrowShopMainWidget* WB_Shop; // 0x4e0
	UCrowCustomizeEmotionDescWidget* WB_CustomizeEmotionDesc; // 0x4e8
	UCrowReplayWidget* WB_Replay; // 0x4f0
	UCrowLobbyRecordWidget* WB_Record; // 0x4f8
	UCrowButton* WB_BT_EscBack; // 0x500
	UCrowButton* WB_BT_Home; // 0x508
	UCrowLobbyVehicleSkinWidget* WB_CustomizeVehicleDesc; // 0x510
	UCanvasPanel* CP_Indicator; // 0x518
	UCrowLobbyIndicatorWidget* WB_LobbyIndicator_2; // 0x520
	UCrowLobbyIndicatorWidget* WB_LobbyIndicator_3; // 0x528
	UCrowLobbyIndicatorWidget* WB_LobbyIndicator_4; // 0x530
	UCrowLobbyIndicatorWidget* WB_LobbyIndicator_5; // 0x538
	UCanvasPanel* CP_PauseMenu; // 0x540
	UCrowButton* WB_BT_Continue; // 0x548
	UCrowButton* WB_BT_Setting; // 0x550
	UCrowButton* WB_BT_Quitgame; // 0x558
	UCrowChatWidget* WB_CrowChatInfo; // 0x560
	UCrowMissionWidget* WB_Mission; // 0x568
	UCrowMissionQuickListWidget* WB_MissionQuickList; // 0x570
	UCrowSocialWidget* WB_Social; // 0x578
	UCrowPartyWidget* WB_Party; // 0x580
	UImage* IMG_PartyBg; // 0x588
	UCrowUserPopupWidget* WB_UserPopup; // 0x590
	UBorder* BD_ReplayError; // 0x598
	UCrowFPSWidget* WB_CrowHUD_FPS; // 0x5a0
	UCrowClanMainWidget* WB_Clan; // 0x5a8
	UCrowLobbyProfileWidget* WB_Profile; // 0x5b0
	UCrowPlayerReportWidget* WB_PlayerReport; // 0x5b8
	UCrowMailPopupWidget* WB_MailPopup; // 0x5c0
	UCrowShopRewardPopupWidget* WB_RewardPopup; // 0x5c8
	UCrowLobbySlotNameChangeWidget* LobbySlotNameChangeWidgetClass; // 0x5d0
	UCrowNoticeWebBrowser* NoticeWebBrowser; // 0x5d8
	UCanvasPanel* CP_ServerNotice; // 0x5e0
	UScrollBox* SB_NoticeScroll; // 0x5e8
	UTextBlock* TB_NoticeText; // 0x5f0
	UCrowLobbyShopPopupWidget* WB_ShopPopupWidget; // 0x608
	bool IsContinueOpenRandomBox; // 0x610
	TArray<UCrowLobbyIndicatorWidget*> LobbyIndicatorWidgets; // 0x618
	TArray<UImage*> PartyUserThumbnails; // 0x628
	UWidgetAnimation* AniPartyWidgetShow; // 0x638
	UWidgetAnimation* AniInvitePopup; // 0x640
	ELobbyUIMode CurrentLobbyUIMode; // 0x648
	ELobbyUIMode PrevLobbyUIMode; // 0x649
	UCrowInventoryInputEventHandler* SelectDragWidget; // 0x650
	FCrowWeaponData CurrentSeletedWeaponData; // 0x658
	FCrowWeaponAccData CurrentSeletedWeaponAccData; // 0x7c0
	int32_t CurrentSeletedSlotIndex; // 0x870
	bool OpenedPartyWidget; // 0x874
	bool OpenedInvitePopup; // 0x875
	UCrowLobbySlotNameChangeWidget* WB_LobbySlotNameChangeWidget; // 0x878
	ACrowSceneLobby* SceneLobby; // 0x880
	bool bUseCharacterRotation; // 0x888
	bool IsRotation; // 0x889
	bool PartyMode; // 0x88a
	bool bReverseCamera; // 0x88b
	bool bShowNotice; // 0x88c
	int32_t NoticeCount; // 0x890
	bool IsStartMatch; // 0x894
	int32_t LastGPoint; // 0x898
	int32_t LastRCPPoint; // 0x89c
	FCrowRewardItem LastRandomBoxItem; // 0x8a0
	int32_t LastRandomBoxIndex; // 0x8d0
	ALevelSequenceActor* LevelSequenceActor; // 0x8d8
	FTimerHandle RegionTimerHandle; // 0x8e0
	float RegionRefreshTime; // 0x8e8
	UWidgetAnimation* AniLocalSelect; // 0x8f0
	ECrowMatchingState CurrentMatchingState; // 0x8f8
};

struct UBaseVoxelTool {
	UVoxelProperties* VoxProperties; // 0xf0
};

struct UCrowWeaponZoomWidget {
	UWidgetAnimation* AimAnimation; // 0x348
	UWidgetAnimation* ShotAnimation; // 0x350
	UImage* IMG_CrossHair; // 0x358
	ACrowPlayerControllerBase* PlayerController; // 0x360
	ACrowCharacterPawn* CharacterPawn; // 0x368
};

struct UCrowSquadWidget {
	UCrowSquadWidgetItem* SquadItemClass; // 0x348
	UGridPanel* RootGridPanel; // 0x350
	UCrowSquadPointWidget* WB_SquadPoint; // 0x358
	UCrowSquadPointWidget* WB_ResourcePoint; // 0x360
	UCrowWidgetBase* WB_StatusPlayerInfo; // 0x368
	TMap<ACrowPlayerStateBase*, UCrowSquadWidgetItem*> SquadItemMap; // 0x370
};

struct UCrowTrajectoryMovement {
	USceneComponent* SceneComponent; // 0xb8
	TArray<FHitResult> HitResultsOnMove; // 0xc0
	FCrowProjectileFireData FireData; // 0xd0
	AWaterBody* CachedOceanActor; // 0x1640
};

struct ULevelSequence {
	UMovieScene* MovieScene; // 0x68
	FLevelSequenceObjectReferenceMap ObjectReferences; // 0x70
	FLevelSequenceBindingReferences BindingReferences; // 0xc0
	TMap<FString, FLevelSequenceObject> PossessedObjects; // 0x160
	UObject* DirectorClass; // 0x1b0
	TArray<UAssetUserData*> AssetUserData; // 0x1b8
};

struct ACrowCompositionCVolume {
	ACrowCompositionCAreaIcon* CompositionCAreaIcon; // 0x258
};

struct UTextRenderComponent {
	FText Text; // 0x440
	UMaterialInterface* TextMaterial; // 0x458
	UFont* Font; // 0x460
	EHorizTextAligment HorizontalAlignment; // 0x468
	EVerticalTextAligment VerticalAlignment; // 0x469
	FColor TextRenderColor; // 0x46c
	float XScale; // 0x470
	float YScale; // 0x474
	float WorldSize; // 0x478
	float InvDefaultSize; // 0x47c
	float HorizSpacingAdjust; // 0x480
	float VertSpacingAdjust; // 0x484
	char bAlwaysRenderAsText : 1; // 0x488
};

struct UCrowFriendListWidget {
	UTextBlock* TB_Title; // 0x348
	UCrowToggleButton* BT_ToggleListOpen; // 0x350
	UVerticalBox* VB_SlotList; // 0x358
	FText TitleLabel; // 0x360
};

struct UCrowKillerIconWidget {
	UCanvasPanel* CP_Root; // 0x348
	UCanvasPanel* CP_AnchorRoot; // 0x350
	UCanvasPanel* CP_Icon; // 0x358
	UImage* IMG_BG; // 0x360
	UImage* IMG_Arrow; // 0x368
};

struct ULuminARLightEstimate {
	TArray<float> AmbientIntensityNits; // 0x40
};

struct UCrowEventPageManager {
	TMap<int32_t, FCrowEventPageTableRow> EventPageData; // 0x28
};

struct UCrowGetEXPPointItemWidget {
	UTextBlock* TB_EXPType; // 0x348
	UTextBlock* TB_Multiply; // 0x350
};

struct UDatasmithSceneComponentTemplate {
	FTransform RelativeTransform; // 0x30
	EComponentMobility Mobility; // 0x60
	TSoftObjectPtr<USceneComponent> AttachParent; // 0x68
	bool bVisible; // 0x90
	TSet<FName> Tags; // 0x98
};

struct UCrowModCategoryTableManager {
	TMap<ECrowGameMode, FCrowModCategoryTableRow> ModCategoryData; // 0x28
};

struct UParticleModuleMeshMaterial {
	TArray<UMaterialInterface*> MeshMaterials; // 0x30
};

struct UMeshSelectionToolProperties {
	EMeshSelectionToolPrimaryMode SelectionMode; // 0x60
	float AngleTolerance; // 0x64
	bool bHitBackFaces; // 0x68
	bool bShowWireframe; // 0x69
	EMeshFacesColorMode FaceColorMode; // 0x6c
};

struct UOffsetMeshTool {
	UOffsetMeshToolProperties* OffsetProperties; // 0x400
	UIterativeOffsetProperties* IterativeProperties; // 0x408
	UImplicitOffsetProperties* ImplicitProperties; // 0x410
	UOffsetWeightMapSetProperties* WeightMapProperties; // 0x418
};

struct UCrowPlayerWeaponListWidget {
	UCrowPlayerWeaponListItemWidget* WB_WeaponList_Primary_2; // 0x348
	UCrowPlayerWeaponListItemWidget* WB_WeaponList_Primary_3; // 0x350
	UCrowPlayerWeaponListItemWidget* WB_WeaponList_Extra_2; // 0x358
	UCrowPlayerWeaponListItemWidget* WB_WeaponList_Extra_3; // 0x360
	UCrowPlayerWeaponListItemWidget* WB_Equipment_Melee; // 0x368
	UCrowPlayerWeaponListItemWidget* WB_Equipment_Throwable; // 0x370
	UCrowPlayerWeaponListItemWidget* WB_Equipment_HealKit; // 0x378
	UWidgetSwitcher* WS_ExtraSlot; // 0x380
	TArray<UCrowPlayerWeaponListItemWidget*> WeaponList; // 0x390
	TArray<UCrowPlayerWeaponListItemWidget*> VehicleWeaponList; // 0x3a0
	ACrowWeaponBase* CurrentWeapon; // 0x3b0
	ACrowWeaponBase* PrevWeapon; // 0x3b8
	int32_t CurrentWeaponIndex; // 0x3c0
	TArray<ACrowWeaponBase*> ClientWeaponList; // 0x3c8
	float DelayTime; // 0x3d8
	float CurrTime; // 0x3dc
	bool IsShowing; // 0x3e0
};

struct UAnimClassData {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x30
	USkeleton* TargetSkeleton; // 0x40
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x48
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x58
	TArray<FAnimBlueprintFunction> AnimBlueprintFunctions; // 0xa8
	TArray<FAnimBlueprintFunctionData> AnimBlueprintFunctionData; // 0xb8
	TArray<TFieldPath<FStructProperty>> AnimNodeProperties; // 0xc8
	TArray<TFieldPath<FStructProperty>> LinkedAnimGraphNodeProperties; // 0xe8
	TArray<TFieldPath<FStructProperty>> LinkedAnimLayerNodeProperties; // 0x108
	TArray<TFieldPath<FStructProperty>> PreUpdateNodeProperties; // 0x128
	TArray<TFieldPath<FStructProperty>> DynamicResetNodeProperties; // 0x148
	TArray<TFieldPath<FStructProperty>> StateMachineNodeProperties; // 0x168
	TArray<TFieldPath<FStructProperty>> InitializationNodeProperties; // 0x188
	TMap<FName, FGraphAssetPlayerInformation> GraphNameAssetPlayers; // 0x1a8
	TArray<FName> SyncGroupNames; // 0x1f8
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x208
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x218
	FPropertyAccessLibrary PropertyAccessLibrary; // 0x268
};

struct UWB_HUD_M1Abrams_Crosshair_Cannon_First_C {
	UImage* Image; // 0x450
	UImage* Image_372; // 0x458
	UImage* IMG_Box_CrossHair; // 0x460
	UImage* IMG_Crosshair_Moving; // 0x468
	UImage* IMG_CrosshairFrame; // 0x470
	UImage* IMG_FPS_Cannon_Left; // 0x478
	UImage* IMG_FPS_Cannon_Left_2; // 0x480
	UImage* IMG_FPS_Cannon_Left_3; // 0x488
	UImage* IMG_FPS_Cannon_Left_4; // 0x490
	UImage* IMG_FPS_Cannon_Left_5; // 0x498
	UImage* IMG_FPS_Cannon_Left_6; // 0x4a0
	UImage* IMG_FPS_Cannon_Left_7; // 0x4a8
	UImage* IMG_FPS_Cannon_Left_8; // 0x4b0
	UImage* IMG_FPS_Cannon_Left_9; // 0x4b8
	UImage* IMG_FPS_Cannon_Left_10; // 0x4c0
	UImage* IMG_FPS_Cannon_Right; // 0x4c8
	UImage* IMG_FPS_Cannon_Right_2; // 0x4d0
	UImage* IMG_FPS_Cannon_Right_3; // 0x4d8
	UImage* IMG_FPS_Cannon_Right_4; // 0x4e0
	UImage* IMG_FPS_Cannon_Right_5; // 0x4e8
	UImage* IMG_FPS_Cannon_Right_6; // 0x4f0
	UImage* IMG_FPS_Cannon_Right_7; // 0x4f8
	UImage* IMG_FPS_Cannon_Right_8; // 0x500
	UImage* IMG_FPS_Cannon_Right_9; // 0x508
	UImage* IMG_FPS_Cannon_Right_10; // 0x510
	UImage* IMG_FPS_Cannon_Right_11; // 0x518
	UImage* IMG_FPS_Cannon_Right_12; // 0x520
	UImage* IMG_Range_BG; // 0x528
	UImage* IMG_Range_Frame; // 0x530
	UImage* IMG_Range_Shadow; // 0x538
	UImage* IMG_ZoomIn_BG; // 0x540
	UImage* IMG_ZoomIn_Frame; // 0x548
	UImage* IMG_ZoomIn_Shadow; // 0x550
};

struct ACrowRespawnAirPlaneActor {
	UBoxComponent* BoxCollision; // 0x220
	UCrowSpringArmComponent* SpringArmComp; // 0x228
	UCameraComponent* CameraComp; // 0x230
	USkeletalMeshComponent* SkeletalMeshComp; // 0x238
	float MinPitchAngle; // 0x240
	float MaxPitchAngle; // 0x244
	float DestroyDelayTime; // 0x248
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x250
	UAkAudioEvent* FlightLoopSound; // 0x2d8
	UAkAudioEvent* CanDropSound; // 0x2e0
	ACrowAirPlaneRespawnSplineActor* SelectedSplineActor; // 0x2e8
	ACrowRespawnAirPlaneCamera* CameraActor; // 0x2f0
};

struct UMaterialInstanceConstant {
	UPhysicalMaterialMask* PhysMaterialMask; // 0x360
};

struct UDestructibleMesh {
	FDestructibleParameters DefaultDestructibleParameters; // 0x398
	TArray<FFractureEffect> FractureEffects; // 0x420
};

struct UCrowWorldAssetUserData {
	bool ExcludeForHLOD; // 0x28
	bool LargeActorSubLevel; // 0x29
};

struct UPlaneReflectionCaptureComponent {
	float InfluenceRadiusScale; // 0x270
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x278
	UBoxComponent* PreviewCaptureBox; // 0x280
};

struct ACrowWorldEventSetting {
	UBoxComponent* Root; // 0x228
	bool bIsEnableEvent; // 0x230
	FCrowWorldEventModeInfo EventInfo; // 0x238
	bool bIsDisplayUI; // 0x250
	TArray<UCrowWorldEventGroup*> GroupArray; // 0x258
	TArray<ACrowWorldEventBase*> ActiveEventArray; // 0x268
	TArray<FCrowWorldEventWidgetInfo> EventInfoArray; // 0x280
	UCrowWorldEventAlarmWidget* WB_EventAlarm; // 0x290
	UCrowWorldEventAlarmWidget* WB_EventSuccess; // 0x298
	UCrowWorldEventAlarmWidget* WB_EventFail; // 0x2a0
	FCrowWorldEventWidgetInfo CurrentEventInfo; // 0x2a8
};

struct UMh6_MachineGun_01_Anim_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x318
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x328
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x430
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x538
	float RotorRoll; // 0x558
};

struct UWB_Settings_C {
	UCrowWidgetImage* CrowWidgetImage_74; // 0x470
	UImage* Image_64; // 0x478
	UImage* Image_Icon_ESC_2; // 0x480
	UImage* IMG_Apply_BackGround; // 0x488
	UImage* IMG_Apply_BackGround_2; // 0x490
	UImage* IMG_Apply_Hover; // 0x498
	UImage* IMG_Back_Effect; // 0x4a0
	UImage* IMG_Blue00; // 0x4a8
	UImage* IMG_Default_BackGround; // 0x4b0
	UCrowWidgetImage* IMG_GRAC_GameInfo00; // 0x4b8
	UCrowWidgetImage* IMG_GRAC_GameInfo01; // 0x4c0
	UCrowWidgetImage* IMG_GRAC_GameInfo02; // 0x4c8
	UCrowWidgetImage* IMG_GRAC_GameInfo03; // 0x4d0
	UCrowWidgetImage* IMG_GRAC_GameInfo04; // 0x4d8
	UCrowWidgetImage* IMG_GRAC_GameInfo05; // 0x4e0
	UCrowWidgetImage* IMG_GRAC_GameInfo06; // 0x4e8
	UCrowWidgetImage* IMG_GRAC_GameInfo07; // 0x4f0
	UCrowWidgetImage* IMG_GRAC_rating; // 0x4f8
	UImage* IMG_OptionBg; // 0x500
	UImage* IMG_OptionContentsBg; // 0x508
	UImage* IMG_ResetAll_BackGround_2; // 0x510
	UImage* IMG_ResetAll_Hover; // 0x518
	UTextBlock* TB_Label_Back_2; // 0x520
	UTextBlock* TB_MenuTitle; // 0x528
	UTextBlock* TB_MenuTitle_Apply; // 0x530
	UTextBlock* TB_MenuTitle_ResetAll; // 0x538
};

struct UCrowDeathCameraComponent {
	ACrowPlayerStateBase* KillerPS; // 0x28
	ACrowSpectatorIconActor* KillerIconActor; // 0x30
};

struct UUVProjectionOperatorFactory {
	UUVProjectionTool* Tool; // 0x30
};

struct UCrowRotorHitResponseComponent {
	bool bIsClockWise; // 0xb0
	float UpdateClientTerm; // 0xb4
	float UpdateServerTerm; // 0xb8
	float CollisionDamage; // 0xbc
	UDamageType* DamageType; // 0xc0
	UParticleSystem* CollisionConcreteFX; // 0xc8
	UParticleSystem* CollisionMetalFX; // 0xd0
	UParticleSystem* CollisonWoodFX; // 0xd8
	UParticleSystem* CollisionMudFX; // 0xe0
	UParticleSystem* CollisionSoilFX; // 0xe8
	UParticleSystem* CollisionWaterFX; // 0xf0
	FString RotorBoxCollisionNames[0x2]; // 0x118
	FCrowRotorHitCaculationInfo RotorHitCaculationInfos[0x2]; // 0x138
};

struct UInterpTrackAkAudioRTPC {
	FString Param; // 0x90
	char bPlayOnReverse : 1; // 0xa0
	char bContinueRTPCOnMatineeEnd : 1; // 0xa0
};

struct UMaterialExpressionSceneTexture {
	FExpressionInput Coordinates; // 0x40
	ESceneTextureId SceneTextureId; // 0x54
	bool bFiltered; // 0x55
};

struct UParticleModuleVelocityBase {
	char bInWorldSpace : 1; // 0x30
	char bApplyOwnerScale : 1; // 0x30
};

struct UChildActorComponent {
	AActor* ChildActorClass; // 0x1f8
	AActor* ChildActor; // 0x200
	AActor* ChildActorTemplate; // 0x208
};

struct UParticleModuleLocationPrimitiveCylinder {
	char RadialVelocity : 1; // 0xb0
	FRawDistributionFloat StartRadius; // 0xb8
	FRawDistributionFloat StartHeight; // 0xe8
	CylinderHeightAxis HeightAxis; // 0x118
};

struct UDatasmithStaticMeshTemplate {
	FDatasmithMeshSectionInfoMapTemplate SectionInfoMap; // 0x30
	int32_t LightMapCoordinateIndex; // 0x80
	int32_t LightMapResolution; // 0x84
	TArray<FDatasmithMeshBuildSettingsTemplate> BuildSettings; // 0x88
	TArray<FDatasmithStaticMaterialTemplate> StaticMaterials; // 0x98
};

struct UNiagaraDataInterfaceCurlNoise {
	uint32_t Seed; // 0x38
};

struct UIntervalGizmo {
	UGizmoTransformChangeStateTarget* StateTarget; // 0x38
	UTransformProxy* TransformProxy; // 0x50
	TArray<UPrimitiveComponent*> ActiveComponents; // 0x58
	TArray<UInteractiveGizmo*> ActiveGizmos; // 0x68
	UGizmoComponentAxisSource* AxisYSource; // 0x90
	UGizmoComponentAxisSource* AxisZSource; // 0x98
};

struct UObjectReferencer {
	TArray<UObject*> ReferencedObjects; // 0x28
};

struct UVoxelSolidifyMeshesToolProperties {
	double WindingThreshold; // 0x60
	double ExtendBounds; // 0x68
	int32_t SurfaceSearchSteps; // 0x70
	bool bSolidAtBoundaries; // 0x74
	bool bMakeOffsetSurfaces; // 0x75
	double OffsetThickness; // 0x78
};

struct UAnimSet {
	char bAnimRotationOnly : 1; // 0x28
	TArray<FName> TrackBoneNames; // 0x30
	TArray<FAnimSetMeshLinkup> LinkupCache; // 0x40
	TArray<char> BoneUseAnimTranslation; // 0x50
	TArray<char> ForceUseMeshTranslation; // 0x60
	TArray<FName> UseTranslationBoneNames; // 0x70
	TArray<FName> ForceMeshTranslationBoneNames; // 0x80
	FName PreviewSkelMeshName; // 0x90
	FName BestRatioSkelMeshName; // 0x98
};

struct UCrowWeaponPartsBase {
	TArray<UCrowDecalComponent*> StickerDecalComp; // 0xc0
	ACrowWeaponBase* WeaponActor; // 0xd8
	TArray<FCrowPartsMeshInfo> MeshCompArray; // 0xe0
	ACrowWeaponPartsActor* PartsActor; // 0xf0
	USceneComponent* ParentComponent; // 0xf8
	USceneComponent* ParentRootComponent; // 0x100
	UAnimInstance* AnimInstance; // 0x108
	AActor* OwnerActor; // 0x110
	USkeletalMesh* SkeletalMeshAsset; // 0x118
	UAnimInstance* SkeletalMeshAnimClass; // 0x120
	UPrimitiveComponent* CreatedMeshComponent; // 0x128
	FCrowPartModelInfo PartsModelInfo; // 0x130
	TArray<FName> StickerSocketNames; // 0x1b8
	TArray<int32_t> StickerIndexs; // 0x1c8
	FCrowPartModelInfo MountModelInfo; // 0x1d8
	TMap<FName, FTransform> SocketTransforms; // 0x290
};

struct UCrowDamageType {
	float KillImpulse; // 0x40
	EDamageSourceType DamageSourceType; // 0x44
	float BuildingDamageMultiply; // 0x48
	float PropDamageMultiply; // 0x4c
	bool IsForcedDamageToArmor; // 0x50
	float ArmorMultiflyDamge; // 0x54
};

struct UMaterialExpressionFontSample {
	UFont* Font; // 0x40
	int32_t FontTexturePage; // 0x48
};

struct UCrowVehicleMovementBase {
	bool UseSubstepping; // 0xc0
	APawn* OwnerPawn; // 0xc8
	UPrimitiveComponent* BodyComponent; // 0xd0
	USkeletalMeshComponent* SkeletalMesh; // 0xd8
	USpringArmComponent* SpringArm; // 0xe0
	FRotator SpringArmInitialRotation; // 0xe8
	FRotator SpringArmCurrentRotation; // 0xf4
	FTransform RootBoneRelativeTransform; // 0x100
	float CurrentThrottleInput; // 0x130
	float CurrentSteeringInput; // 0x134
	float LastRequestThrottleInput; // 0x138
	float LastRequestSteeringInput; // 0x13c
	float BoundsRadius; // 0x140
	bool IsReadyForDriving; // 0x144
	bool IsBlockedPhysics; // 0x145
	float LinearDamping; // 0x148
	float LimitSteeringRatio; // 0x14c
};

struct UWebBrowser {
	FMulticastInlineDelegate OnUrlChanged; // 0x108
	FMulticastInlineDelegate OnBeforePopup; // 0x118
	FString InitialURL; // 0x128
	bool bSupportsTransparency; // 0x138
};

struct UWB_BombMission_CompositionCIndicator_C {
	UWidgetAnimation* ChangeColor; // 0x380
	UImage* IMG_Base; // 0x388
	UImage* IMG_Border; // 0x390
	UImage* IMG_Gauge; // 0x398
	UImage* IMG_LocateArrow; // 0x3a0
};

struct UWB_SettingsSlotDropdownSlot_C {
	UImage* Image_149; // 0x388
	UImage* Image_Icon_Select; // 0x390
};

struct UMaterialExpressionFontSampleParameter {
	FName ParameterName; // 0x50
	FGuid ExpressionGUID; // 0x58
	FName Group; // 0x68
};

struct UVolumetricCloudComponent {
	float LayerBottomAltitude; // 0x1f8
	float LayerHeight; // 0x1fc
	float TracingStartMaxDistance; // 0x200
	float TracingMaxDistance; // 0x204
	float PlanetRadius; // 0x208
	FColor GroundAlbedo; // 0x20c
	UMaterialInterface* Material; // 0x210
	char bUsePerSampleAtmosphericLightTransmittance : 1; // 0x218
	float SkyLightCloudBottomOcclusion; // 0x21c
	float ViewSampleCountScale; // 0x220
	float ReflectionSampleCountScale; // 0x224
	float ShadowViewSampleCountScale; // 0x228
	float ShadowReflectionSampleCountScale; // 0x22c
	float ShadowTracingDistance; // 0x230
};

struct UGerstnerWaterWaveGeneratorSimple {
	int32_t NumWaves; // 0x28
	int32_t Seed; // 0x2c
	float Randomness; // 0x30
	float MinWavelength; // 0x34
	float MaxWavelength; // 0x38
	float WavelengthFalloff; // 0x3c
	float MinAmplitude; // 0x40
	float MaxAmplitude; // 0x44
	float AmplitudeFalloff; // 0x48
	float WindAngleDeg; // 0x4c
	float DirectionAngularSpreadDeg; // 0x50
	float SmallWaveSteepness; // 0x54
	float LargeWaveSteepness; // 0x58
	float SteepnessFalloff; // 0x5c
};

struct UCheckBoxWidgetStyle {
	FCheckBoxStyle CheckBoxStyle; // 0x30
};

struct UCrowVehicleParam {
	FVehicleSetup Setup; // 0xc0
	FCrowVehicleDamageSetup DamageSetup; // 0xd0
	UCrowVehicleDustType* DustType; // 0x170
	FVehicleEffectSetup EffectSetup; // 0x178
	UCameraComponent* Camera; // 0x180
	EVehicleShieldingType VehicleShieldingType; // 0x188
	UCrowVehicleSightComponent* VehicleSight; // 0x190
	UCrowVehicleWheelEffect* WheelEffect; // 0x198
	UCrowPassengerManager* PassengerManager; // 0x1a0
	UCrowVehicleEventDispatcher* EventDispatcher; // 0x1a8
	UWidgetComponent* IndicatorWidgetComp; // 0x1b0
	TArray<UCrowPartDamageBox*> PartDamageBoxList; // 0x1b8
	UCrowVehicleWeaponManager* WeaponManager; // 0x1c8
	UCrowVehicleFloodingComponent* FloodingComp; // 0x1d0
};

struct UWB_LoadingBox_C {
	UImage* IMG_BG; // 0x368
	UImage* IMG_Loading; // 0x370
};

struct UParticleModuleSourceMovement {
	FRawDistributionVector SourceMovementScale; // 0x30
};

struct UCrowClanMainWidget {
	UUserWidget* ClanListItemClass; // 0x348
	UUserWidget* UserListItemClass; // 0x350
	UUserWidget* EmblemWidgetClass; // 0x358
	UWidgetSwitcher* WS_Clan; // 0x360
	UCrowButton* WB_BT_EscBack; // 0x368
	UCrowClanTabWidget* WB_ClanTab_Defualt; // 0x398
	UCrowClanSubTabWidget* WB_ClanTab_Ranking; // 0x3a0
	UWidgetSwitcher* WS_Clan_Defualt; // 0x3a8
	UScrollBox* SCB_RecommendClanList; // 0x3b0
	UScrollBox* SCB_InviteClanList; // 0x3b8
	UCrowButton* BT_ClanSearch; // 0x3c0
	UMultiLineEditableText* EDB_SearchClanName; // 0x3c8
	UVerticalBox* VB_SearchResultClan; // 0x3d0
	UTextBlock* TB_NoClanInvite; // 0x3d8
	UCrowSpinSelectionWidget* WB_Clan_SlotSelection; // 0x3e0
	UMultiLineEditableText* EDB_CreateClanName; // 0x3e8
	UCrowButton* WB_BT_CreationClan; // 0x3f0
	UCrowButton* WB_BT_ResetEmblemMark; // 0x3f8
	UCrowButton* WB_BT_ResetEmblemBG; // 0x400
	UCrowClanEmblemWidget* WB_ClanCreate_EmblemWidget; // 0x408
	UImage* IMG_ClanCreateEmblem_Mark; // 0x410
	UImage* IMG_ClanCreateEmblem_Bg; // 0x418
	UGridPanel* GD_EmbleItemList; // 0x420
	UCrowCategorySlotSmallWidget* BT_ClanEmblem_Mark; // 0x428
	UCrowCategorySlotSmallWidget* BT_ClanEmblem_Bg; // 0x430
	UCanvasPanel* CP_Clan_InfoSetting_L; // 0x438
	UCanvasPanel* CP_Clan_InfoSetting_R; // 0x440
	UCanvasPanel* CP_Clan_Info; // 0x448
	UCanvasPanel* CP_ClanDismantleInfo; // 0x450
	UCrowButton* WB_BT_ClanSetting; // 0x458
	UCrowButton* WB_BT_ClanNotice; // 0x460
	UScrollBox* SB_ClanMember; // 0x468
	UCrowClanEmblemWidget* WB_ClanEmblem; // 0x470
	UTextBlock* TB_ClanInfo_ClanName; // 0x478
	UTextBlock* TB_ClanInfo_ClanLevel; // 0x480
	UTextBlock* TB_ClanInfo_ClanRanking; // 0x488
	UTextBlock* TB_ClanInfo_TotalPoint; // 0x490
	UTextBlock* TB_ClanInfo_MonthPoint; // 0x498
	URichTextBlock* RT_ClanInfo_NoticeText; // 0x4a0
	UTextBlock* TB_ClanOnlineUser; // 0x4a8
	UTextBlock* TB_ClanMaxUser; // 0x4b0
	UTextBlock* TB_ClanInfoHappyTime; // 0x4b8
	UTextBlock* TB_HappyTimeTipText; // 0x4c0
	UTextBlock* TB_ClanInfo_DismantleTimer; // 0x4c8
	UCrowClanNoticeWidget* WB_Clan_PopupClanNotice; // 0x4d0
	UCanvasPanel* CP_Clan_Setting; // 0x4d8
	UCanvasPanel* CP_HappyTime; // 0x4e0
	UCanvasPanel* CP_ClanUserList; // 0x4e8
	UCanvasPanel* CP_ClanInvitedSetting; // 0x4f0
	UCanvasPanel* CP_ClanInvited; // 0x4f8
	UCanvasPanel* CP_ClanDismantle; // 0x500
	UCrowHappyTimeTabWidget* WB_Clan_PopupHappyTime; // 0x508
	UBorder* BD_HappyTime; // 0x510
	UBorder* BD_MemberSetting; // 0x518
	UBorder* BD_OwnerSetting; // 0x520
	UCrowCategorySlotSmallWidget* BT_HappytimeSet; // 0x528
	UCrowCategorySlotSmallWidget* BT_AddCommander; // 0x530
	UCrowCategorySlotSmallWidget* BT_CommanderSetDel; // 0x538
	UCrowCategorySlotSmallWidget* BT_ClanInvited; // 0x540
	UCrowCategorySlotSmallWidget* BT_KickClanUser; // 0x548
	UCrowCategorySlotSmallWidget* BT_ClanInvitedSet; // 0x550
	UCrowCategorySlotSmallWidget* BT_CaptainTransfer; // 0x558
	UCrowCategorySlotSmallWidget* BT_Dismantle; // 0x560
	UCrowCategorySlotSmallWidget* BT_ClanSecession; // 0x568
	TArray<UCrowCategorySlotSmallWidget*> ClanSettingBtnList; // 0x570
	UCrowButton* WB_BT_degrade; // 0x580
	UCrowButton* WB_BT_Expulsion; // 0x588
	UCrowButton* WB_BT_Transferring; // 0x590
	UCrowButton* WB_BT_Appointment; // 0x598
	UTextBlock* TB_ClanDismantleTimer; // 0x5a0
	UWidgetSwitcher* WS_Dismantle; // 0x5a8
	UCrowButton* WB_BT_Dismantle; // 0x5b0
	UCrowButton* WB_BT_DeleteClan; // 0x5b8
	UCrowButton* WB_BT_CancelDismantle; // 0x5c0
	UCrowSpinSelectionWidget* WB_Clan_InviteSetting; // 0x5c8
	UCrowButton* WB_BT_SaveInviteSetting; // 0x5d0
	UScrollBox* SB_JoinRequestList; // 0x5d8
	UTextBlock* JoinRequest_Empty; // 0x5e0
	UMultiLineEditableText* EB_UserSearchEditBox; // 0x5e8
	UCrowButton* BT_UserSearch; // 0x5f0
	UScrollBox* SB_SearchUser; // 0x5f8
	UScrollBox* SB_InviteUser; // 0x600
	UTextBlock* InviteRequest_Empty; // 0x608
	UCanvasPanel* CP_ClanRankingInfo; // 0x610
	UWidgetSwitcher* WS_ClanRanking; // 0x618
	UScrollBox* SCB_TotalScoreRankingList; // 0x620
	UScrollBox* SCB_MonthScoreList; // 0x628
	UScrollBox* SCB_MyClanRanking; // 0x630
	UCanvasPanel* CP_ClanEmblemSetting; // 0x638
	UCanvasPanel* CP_ClanEmblemSetPage; // 0x640
	UHorizontalBox* HB_CustomizeClan_Shop_Button; // 0x648
	UCrowClanSubTabWidget* WB_ClanTab_Emblem; // 0x650
	UCrowCategorySlotSmallWidget* BT_ClanEmblemChange_Mark; // 0x658
	UCrowCategorySlotSmallWidget* BT_ClanEmblemChange_Bg; // 0x660
	UCrowButton* WB_BT_ChangeResetEmblemMark; // 0x668
	UCrowButton* WB_BT_ChangeResetEmblemBG; // 0x670
	UCrowButton* BT_Buy; // 0x678
	UCrowButton* BT_AddShoppingBag; // 0x680
	UImage* IMG_ChangeClanEmblemMark; // 0x688
	UImage* IMG_ChangeClanEmblemBG; // 0x690
	UCrowButton* WB_BT_ChangeEmblemSave; // 0x698
	UCrowClanEmblemWidget* WB_Change_EmblemWidget; // 0x6a0
	UGridPanel* GD_ChangeEmbleItemList; // 0x6a8
};

struct ACrowKitBomber {
	USplineComponent* MoveSpline; // 0x220
	UParticleSystem* ProjectileEffect; // 0x228
	UParticleSystem* MuzzleEffect; // 0x230
	UParticleSystem* BulletTargetEffect01; // 0x238
	UParticleSystem* BulletTargetEffect02; // 0x240
	UParticleSystem* FlareEffect; // 0x248
	bool IsFlareAttach; // 0x250
	UAkAudioEvent* FireEvent; // 0x258
	TArray<UAkAudioEvent*> FlyingEvent; // 0x260
	UAkAudioEvent* AttackingEvent; // 0x270
	UAkAudioEvent* ReturnEvent; // 0x278
	FCrowGameIconDisplayInfo DisplayInfo; // 0x280
	USkeletalMeshComponent* MeshComponent; // 0x308
	USceneComponent* RootComp; // 0x310
	USceneComponent* MeshRootComp; // 0x318
	bool IsSpawnEffect; // 0x320
	float TotalPathTime; // 0x324
	int32_t BombingPoint; // 0x328
	int32_t FireStartPoint; // 0x32c
	int32_t FlareFirePoint; // 0x330
	int32_t EndSoundPoint; // 0x334
	UAkAudioEvent* EffectSound; // 0x338
	UMatineeCameraShake* CameraShake; // 0x340
	float CameraShakeMinDistance; // 0x348
	float CameraShakeMaxDistance; // 0x34c
	FVector RealTartgetPos; // 0x350
	FRotator MeshRotation; // 0x35c
	UCrowKitBomberIndicatorWidget* IconIndicator; // 0x368
	UCrowIndicatorViewInfo* IndicatorViewInfo; // 0x370
	float StartTime; // 0x378
	bool IsFire; // 0x37c
	bool IsPlayFireSound; // 0x37d
	bool IsPlayReturnSound; // 0x37e
	bool IsFireFlare; // 0x37f
	FVector BombingPosition; // 0x380
	ACrowWeaponBase* WeaponBase; // 0x390
	AActor* TargetActor; // 0x398
	AActor* ProjectileSubClass; // 0x3a0
	int32_t AuthItemKeyIndex; // 0x3a8
};

struct UGameViewportClient {
	UConsole* ViewportConsole; // 0x40
	TArray<FDebugDisplayProperty> DebugProperties; // 0x48
	int32_t MaxSplitscreenPlayers; // 0x68
	UWorld* World; // 0x78
	UGameInstance* GameInstance; // 0x80
};

struct UViewAlignedSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct ACrowWorldMediatorActor {
	USceneComponent* SceneRoot; // 0x220
	TArray<AActor*> WorldSetupActorTypes; // 0x228
	TArray<UActorComponent*> WorldSetupComponentTypes; // 0x238
	TArray<UActorComponent*> WorldSetupComponentTypesBeginPlay; // 0x248
	UStaticMeshComponent* SphereMesh; // 0x258
	ACrowWorldReplicationActor* WorldReplicationActor; // 0x260
	TArray<UActorComponent*> WorldSetupComponents; // 0x268
	TArray<AActor*> WorldSetupActorReferences; // 0x278
	TArray<UActorComponent*> WorldSetupComponentReferences; // 0x288
};

struct UMorphTarget {
	USkeletalMesh* BaseSkelMesh; // 0x28
};

struct UPoseAsset {
	FPoseDataContainer PoseContainer; // 0x80
	bool bAdditivePose; // 0x110
	int32_t BasePoseIndex; // 0x114
	FName RetargetSource; // 0x118
};

struct UButtonStyleAsset {
	FButtonStyle ButtonStyle; // 0x28
};

struct ACrowCloudScapeActor {
	int32_t Index; // 0x220
	UStaticMeshComponent* CloudMesh; // 0x228
	UStaticMeshComponent* BoundaryMesh_Inside; // 0x230
	UStaticMeshComponent* BoundaryMesh_Outside; // 0x238
	UStaticMeshComponent* MeshForFixArtifacts; // 0x240
	UMaterialInterface* CloudMaterial; // 0x248
	UCrowCloudScapeCollision* CloudCollision; // 0x250
	UBillboardComponent* BillboardComp; // 0x258
	UCrowCloudScapeComponent* CloudScapeComp; // 0x260
	USplineComponent* CloudScapePath; // 0x268
};

struct UUserWidget {
	FLinearColor ColorAndOpacity; // 0x110
	FDelegate ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	FDelegate ForegroundColorDelegate; // 0x158
	FMulticastInlineDelegate OnVisibilityChanged; // 0x168
	FMargin Padding; // 0x190
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x1a0
	UUMGSequenceTickManager* AnimationTickManager; // 0x1b0
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x1b8
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x1c8
	UWidgetTree* WidgetTree; // 0x1d8
	int32_t Priority; // 0x1e0
	char bSupportsKeyboardFocus : 1; // 0x1e4
	char bIsFocusable : 1; // 0x1e4
	char bStopAction : 1; // 0x1e4
	char bHasScriptImplementedTick : 1; // 0x1e4
	char bHasScriptImplementedPaint : 1; // 0x1e4
	EWidgetTickFrequency TickFrequency; // 0x1f0
	UInputComponent* InputComponent; // 0x1f8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x200
};

struct UParticleModuleVectorFieldGlobal {
	char bOverrideGlobalVectorFieldTightness : 1; // 0x30
	float GlobalVectorFieldScale; // 0x34
	float GlobalVectorFieldTightness; // 0x38
};

struct UOculusHandComponent {
	EOculusHandType SkeletonType; // 0x7e8
	EOculusHandType MeshType; // 0x7e9
	EConfidenceBehavior ConfidenceBehavior; // 0x7ea
	ESystemGestureBehavior SystemGestureBehavior; // 0x7eb
	UMaterialInterface* SystemGestureMaterial; // 0x7f0
	bool bInitializePhysics; // 0x7f8
	bool bUpdateHandScale; // 0x7f9
	UMaterialInterface* MaterialOverride; // 0x800
	TMap<EBone, FName> BoneNameMappings; // 0x808
	TArray<FOculusCapsuleCollider> CollisionCapsules; // 0x858
	bool bSkeletalMeshInitialized; // 0x868
};

struct UCrowDynamicHeightFogComponent {
	float LerpStartZ; // 0xb0
	float LerpStartZ_FogHeightFalloff; // 0xb4
	float LerpEndZ; // 0xb8
	bool bClientReadyToPlay; // 0xbc
	bool bValidComponent; // 0xbd
	float LerpHeight; // 0xc0
	float LerpEndZ_FogHeightFalloff; // 0xc4
	TWeakObjectPtr<AExponentialHeightFog> CachedExponentialHeightFog; // 0xc8
};

struct UBakedOcclusionMapVisualizationProperties {
	float BaseGrayLevel; // 0x60
	float OcclusionMultiplier; // 0x64
};

struct UUserDefinedCaptureProtocol {
	UWorld* World; // 0x58
};

struct UParticleModuleLocationPrimitiveBase {
	char Positive_X : 1; // 0x30
	char Positive_Y : 1; // 0x30
	char Positive_Z : 1; // 0x30
	char Negative_X : 1; // 0x30
	char Negative_Y : 1; // 0x30
	char Negative_Z : 1; // 0x30
	char SurfaceOnly : 1; // 0x30
	char Velocity : 1; // 0x30
	FRawDistributionFloat VelocityScale; // 0x38
	FRawDistributionVector StartLocation; // 0x68
};

struct USoundfieldEndpointSubmix {
	FName SoundfieldEndpointType; // 0x38
	UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40
	USoundfieldEndpointSettingsBase* EndpointSettings; // 0x48
	USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x50
	USoundfieldEncodingSettingsBase* EncodingSettings; // 0x58
	TArray<USoundfieldEffectBase*> SoundfieldEffectChain; // 0x60
};

struct UARGetCandidateObjectAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct ACrowItemMesh {
	UMeshComponent* MeshComponent; // 0x2b8
	UParticleSystemComponent* MeshParticleComponent; // 0x2c0
	ACrowItemMeshActor* MeshActor; // 0x2c8
	bool bIsMoveMeshOrigin; // 0x2d0
	FCrowItemData ItemData; // 0x2d8
};

struct UCrowToggleButton {
	TArray<UWidgetSwitcher*> ToggleSwitcherArray; // 0x6a8
	bool IsStartChecked; // 0x6b8
	bool NotUseDeChecked; // 0x6b9
	bool bNotUse; // 0x6ba
	bool bUseCheckedHover; // 0x6bb
};

struct UCrowLobbyMainMedalWidget {
	UCrowButtonContainerBase* WB_TabMenu_Medal; // 0x348
	UCrowWidgetImage* IMG_Reward; // 0x350
	UTextBlock* TB_RewardName; // 0x358
	UCanvasPanel* CP_Reward; // 0x360
	UCrowButton* BT_Reward; // 0x368
	UWidgetSwitcher* WS_RewardStatus; // 0x370
	UTextBlock* TB_MedalProgress; // 0x378
	UProgressBar* PB_MedalProgress; // 0x380
	UTextBlock* TB_ProgressPercent; // 0x388
	UWidgetSwitcher* WS_MedalList; // 0x390
	UGridPanel* GP_AllMedalList; // 0x398
	UGridPanel* GP_KillstreakMedalList; // 0x3a0
	UGridPanel* GP_VehicleBoomMedalList; // 0x3a8
	UGridPanel* GP_LongshotMedalList; // 0x3b0
	UGridPanel* GP_CombatMedalList; // 0x3b8
	UGridPanel* GP_BomberMedalList; // 0x3c0
	UCrowLobbyMainMedalSlotWidget* SlotWidgetClass; // 0x3c8
	ECrowMainMedalUIType SelectedUIType; // 0x3d0
	uint32_t ProgressGroupIndex; // 0x3d4
	uint32_t RewardGroupIndex; // 0x3d8
	UCrowLobbyMainMedalSlotWidget* SelectedSlotWidget; // 0x3e0
};

struct UParticleModuleVectorFieldScaleOverLife {
	UDistributionFloat* VectorFieldScaleOverLife; // 0x30
	FRawDistributionFloat VectorFieldScaleOverLifeRaw; // 0x38
};

struct ACrowProjectileSphereBase {
	USphereComponent* CollisionRoot; // 0x17c8
};

struct UInterpTrackFade {
	char bPersistFade : 1; // 0x90
	char bFadeAudio : 1; // 0x90
	FLinearColor FadeColor; // 0x94
};

struct UInterpCurveEdSetup {
	TArray<FCurveEdTab> Tabs; // 0x28
	int32_t ActiveTab; // 0x38
};

struct UParticleModuleColor_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct ACrowEnvTriggerScanner {
	USceneComponent* SelectorRoot; // 0x220
	UStaticMeshComponent* SphereMeshComponent; // 0x228
	USphereComponent* SphereCollisionComponent; // 0x230
	bool bSelectMode; // 0x238
	bool bShowSettingState; // 0x239
	float SphereScale; // 0x23c
	int32_t TotalTriggerNum; // 0x240
	int32_t UsedTriggerNum; // 0x244
	int32_t UnusedTriggerNum; // 0x248
	TArray<UCrowEnvTriggerComponent*> EnvTriggers; // 0x250
	FTimerHandle TimerHandleScanFoliage; // 0x270
	bool bRandomPlayTreeEffect; // 0x278
};

struct ACrowFlashBangCaptureActor {
	UCrowSceneCaptureComponent2D* SceneCapture; // 0x220
};

struct UCrowInvenWeaponInfoWidget {
	UWidgetSwitcher* WS_SlotType; // 0x1a48
	UTextBlock* TB_MaxAmmo; // 0x1a50
	UTextBlock* TB_WeaponName; // 0x1a58
	UTextBlock* TB_AmmoType; // 0x1a60
	UTextBlock* TB_WeaponSlotType; // 0x1a68
	UCanvasPanel* CP_Primary_weapon_Slot; // 0x1a70
	UImage* IMG_Frame; // 0x1a78
	UImage* IMG_WeaponBack; // 0x1a80
	UImage* IMG_Back; // 0x1a88
	UImage* IMG_Ammo; // 0x1a90
	UImage* IMG_Line_Vertical; // 0x1a98
	UImage* IMG_HotKey_2; // 0x1aa0
	UCrowButton* BT_Loadout_Button; // 0x1aa8
	UHorizontalBox* HB_Weapon_LV; // 0x1ab0
	UTextBlock* TB_WeaponLV; // 0x1ab8
	UCrowProgressBar* PB_WeaponLV; // 0x1ac0
	UScaleBox* SB_WeaponImg; // 0x1ac8
	UScaleBox* SB_WeaponCombine; // 0x1ad0
	UCrowWeaponCombinedIconWidget* WB_FireArm_Combine; // 0x1ad8
	UCrowDragDropWidgetBase* WB_CrowDragDropPanel; // 0x1ae0
	UCrowWeaponPartsListWidget* WB_WeaponPartsList; // 0x1ae8
	FLinearColor TextDefaultColor; // 0x1af0
	FLinearColor TextSelectColor; // 0x1b00
	FText DefaultSlotTypeName; // 0x1b10
	UPaperSprite* HotKeySprite; // 0x1b28
};

struct UEdgeLoopInsertionProperties {
	EEdgeLoopPositioningMode PositionMode; // 0x60
	EEdgeLoopInsertionMode InsertionMode; // 0x64
	int32_t NumLoops; // 0x68
	double ProportionOffset; // 0x70
	double DistanceOffset; // 0x78
	bool bInteractive; // 0x80
	bool bFlipOffsetDirection; // 0x81
	bool bWireframe; // 0x82
	double VertexTolerance; // 0x88
};

struct USafeZoneSlot {
	bool bIsTitleSafe; // 0x38
	FMargin SafeAreaScale; // 0x3c
	EHorizontalAlignment HAlign; // 0x4c
	EVerticalAlignment VAlign; // 0x4d
	FMargin Padding; // 0x50
};

struct UCrowWorldmapZoneNameWidget {
	UTextBlock* TB_Name; // 0x348
};

struct UParticleModuleVectorFieldScale {
	UDistributionFloat* VectorFieldScale; // 0x30
	FRawDistributionFloat VectorFieldScaleRaw; // 0x38
};

struct UCrowLandWheelsConfigEngine {
	bool Debug; // 0x28
	FCrowLandWheelsEngineSetting Setting; // 0x30
};

struct UNewMeshMaterialProperties {
	TWeakObjectPtr<UMaterialInterface> Material; // 0x60
	float UVScale; // 0x68
	bool bWorldSpaceUVScale; // 0x6c
	bool bWireframe; // 0x6d
	bool bShowExtendedOptions; // 0x6e
};

struct UMaterialExpressionRound {
	FExpressionInput Input; // 0x40
};

struct UBTTask_PlayAnimation {
	UAnimationAsset* AnimationToPlay; // 0x70
	char bLooping : 1; // 0x78
	char bNonBlocking : 1; // 0x78
	UBehaviorTreeComponent* MyOwnerComp; // 0x80
	USkeletalMeshComponent* CachedSkelMesh; // 0x88
};

struct UMaterialExpressionPreviousFrameSwitch {
	FExpressionInput CurrentFrame; // 0x40
	FExpressionInput PreviousFrame; // 0x54
};

struct ACrowAICharacterCoverPoint {
	ACrowAICharacterPawn* OccupyedAICharacter; // 0x268
	bool IsCollectable; // 0x270
	ECrowAICharacterStance OccupyStance; // 0x271
	UAnimSequenceBase* PreviewAnimStand; // 0x278
	UAnimSequenceBase* PreviewAnimCrouch; // 0x280
	UAnimSequenceBase* PreviewAnimProne; // 0x288
};

struct UEditableGameplayTagQueryExpression_AnyTagsMatch {
	FGameplayTagContainer Tags; // 0x28
};

struct UGizmoAxisRotationParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float Angle; // 0xb0
	FGizmoFloatParameterChange LastChange; // 0xb4
	FVector CurRotationAxis; // 0xbc
	FVector CurRotationOrigin; // 0xc8
	FTransform InitialTransform; // 0xe0
};

struct UEnvQueryTest_GameplayTags {
	FGameplayTagQuery TagQueryToMatch; // 0x1f8
	bool bUpdatedToUseQuery; // 0x240
	EGameplayContainerMatchType TagsToMatch; // 0x241
	FGameplayTagContainer GameplayTags; // 0x248
};

struct UInteractiveToolManager {
	UInteractiveTool* ActiveLeftTool; // 0x30
	UInteractiveTool* ActiveRightTool; // 0x38
	TMap<FString, UInteractiveToolBuilder*> ToolBuilders; // 0x90
};

struct UInterpTrackVectorBase {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UAkSlider {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	FSliderStyle WidgetStyle; // 0x120
	EOrientation Orientation; // 0x460
	FLinearColor SliderBarColor; // 0x464
	FLinearColor SliderHandleColor; // 0x474
	bool IndentHandle; // 0x484
	bool Locked; // 0x485
	float StepSize; // 0x488
	bool IsFocusable; // 0x48c
	FAkPropertyToControl ThePropertyToControl; // 0x490
	FAkWwiseItemToControl ItemToControl; // 0x4a0
	FMulticastInlineDelegate OnValueChanged; // 0x4e0
	FMulticastInlineDelegate OnItemDropped; // 0x4f0
	FMulticastInlineDelegate OnPropertyDropped; // 0x500
};

struct UVariantSet {
	FText DisplayText; // 0x28
	bool bExpanded; // 0x58
	TArray<UVariant*> Variants; // 0x60
	UTexture2D* Thumbnail; // 0x70
};

struct UPawnActionsComponent {
	APawn* ControlledPawn; // 0xb0
	TArray<FPawnActionStack> ActionStacks; // 0xb8
	TArray<FPawnActionEvent> ActionEvents; // 0xc8
	UPawnAction* CurrentAction; // 0xd8
};

struct UMeshConstraintProperties {
	bool bPreserveSharpEdges; // 0x60
	EMeshBoundaryConstraint MeshBoundaryConstraint; // 0x61
	EGroupBoundaryConstraint GroupBoundaryConstraint; // 0x62
	EMaterialBoundaryConstraint MaterialBoundaryConstraint; // 0x63
	bool bPreventNormalFlips; // 0x64
};

struct UCrowBattlePassWidget {
	UCrowBattlePassItemSlotWidget* BattlePassItemSlotWidget; // 0x348
	float EffectProducingTime; // 0x350
	UWidgetSwitcher* WS_BattlePass_PurchaseImageState; // 0x358
	UWidgetSwitcher* WS_BattlePass_PurchaseInfoState; // 0x360
	UTextBlock* TB_BattlePass_Inactive_Season; // 0x368
	UTextBlock* TB_BattlePass_Active_Season; // 0x370
	UTextBlock* TB_BattlePass_Inactive_Season_Period; // 0x378
	UTextBlock* TB_BattlePass_Active_Season_Period; // 0x380
	UButton* BT_BattlePass_Purchase; // 0x388
	UButton* BT_BattlePass_FreePass; // 0x390
	UWidgetSwitcher* WS_BattlePass_FreePass; // 0x398
	UTextBlock* TB_BattlePass_FreePass_SelectedLevel; // 0x3a0
	UButton* BT_Arrow_L; // 0x3a8
	UButton* BT_Arrow_R; // 0x3b0
	UScrollBox* SB_BattlePass_ItemSlots; // 0x3b8
	TMap<int32_t, UCrowBattlePassItemSlotWidget*> BattlePassItemSlotWidgets; // 0x3c0
	bool bIsActivated; // 0x410
	char SeasonIndex; // 0x411
	uint64_t UserBattlePassExp; // 0x418
	int32_t UserBattlePassLevel; // 0x420
	int32_t PrevRewardedFreeItemLevel; // 0x424
	int32_t PrevRewardedPaidItemLevel; // 0x428
	int32_t RewardedFreeItemLevel; // 0x42c
	int32_t RewardedPaidItemLevel; // 0x430
	int16_t FreePassTargetLevel; // 0x434
	char InProgressSeasonIndex; // 0x436
	FDateTime InProgressSeasonStartDateTime; // 0x438
	FDateTime InProgressSeasonEndDateTime; // 0x440
	bool bIsSetItemSlotWidth; // 0x448
	float BattlePassItemSlotWidth; // 0x44c
	bool bIsRewardDirecting; // 0x450
	ECrowBattlePassRewardProducingType ProducingType; // 0x451
	int32_t CurrentDirectingBattlePassLevel; // 0x454
	float ElapsedRewardDirectingByStep; // 0x458
	float ProducingTargetScrollOffset; // 0x45c
};

struct UInterpTrackLinearColorBase {
	FInterpCurveLinearColor LinearColorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UPostEventAsync {
	FMulticastInlineDelegate Completed; // 0x30
};

struct UInterpTrackInstFloatProp {
	float ResetFloat; // 0x58
};

struct UUPSFormationPointComponent {
	ACharacter* CharacterOnPoint; // 0x460
};

struct UChildConnection {
	UNetConnection* Parent; // 0x1af0
};

struct UCrowFoliageAffectorAnimData {
	ECrowFoliageAffectorAnimType AffectorAnimType; // 0x28
	float AnimTime; // 0x2c
	UCurveFloat* AlphaCurveData; // 0x30
	UCurveVector* ScaleCurveData; // 0x38
};

struct UCrowMovementRotor {
	bool UseSubstepping; // 0xb0
	FCrowRotorPhysicsParameter PhysicsSetup; // 0xb4
	ACrowVehiclePawn* VehiclePawn; // 0x118
	UPrimitiveComponent* PhysicsBody; // 0x120
	FCrowRotorPhysicsParameter PhysicsParam; // 0x128
	bool IsBlockedPhysics; // 0x188
	float IdleHoverForce; // 0x18c
	float WorldOceanZ; // 0x190
	float WorldAltitudeLimitZ; // 0x194
	bool IsDirtyClientInput; // 0x198
	FCrowMovementHeliValues ClientRawInput; // 0x19c
	FCrowMovementHeliValues ReceivedInput; // 0x1ac
	FCrowMovementHeliValues CalculatedInput; // 0x1bc
	FCrowMovementHeliValues ForceAndTorque; // 0x1cc
	FCrowMovementHeliValues ForceAndTorqueCurrent; // 0x1dc
	FVector PhysicsBodyForward; // 0x270
	FVector PhysicsBodyRight; // 0x27c
	FVector PhysicsBodyUp; // 0x288
	FVector PlanarForward; // 0x294
	FVector PlanarRight; // 0x2a0
	FVector DirectionalVelocity; // 0x2ac
	FVector DragForce; // 0x2b8
	FVector IdleDampingForce; // 0x2c4
	float CurrentCollectiveForce; // 0x2d0
	bool IsEngineStart; // 0x2d4
	float DebugHoverForceSize; // 0x2d8
	FVector DebugRotorForce; // 0x2dc
	FCrowMovementHeliValues DamagedEffectInput; // 0x2f8
	float DamagedEffectEnginePower; // 0x308
	float DamagedInputFactor; // 0x30c
};

struct UCrowPlayerConstruction {
	ECrowPlayerConstructionState State; // 0xb0
	AActor* ClientTarget; // 0xb8
	ACrowCharacterPawn* OwnerPawn; // 0xc0
	UObject* AgentObject; // 0xc8
	UObject* TargetClass; // 0xd0
	FVector TargetBodySize; // 0xd8
	FVector Offset; // 0xe4
	float BuildTime; // 0xf0
	FName CheckBuildableCollisionPreset; // 0xf4
	bool bIsFindFloorWhenWall; // 0xfc
	bool bLetSeeFront; // 0xfd
	FName BuildKeyName; // 0x100
	FName CancelKeyName; // 0x108
	FCrowPlayerConstructionMessage DisplayedMessage; // 0x110
	FName TargetTransformCollisionPresetName; // 0x160
	FVector PrevTargetLocation; // 0x168
	bool bIsBuildable; // 0x174
};

struct UCrowSelfSquadSummaryWidget {
	UCrowSquadSummarySlotWidget* WB_MyResult; // 0x368
};

struct UTexture2DDynamic {
	EPixelFormat Format; // 0xe0
};

struct UCapsuleComponent {
	float CapsuleHalfHeight; // 0x458
	float CapsuleRadius; // 0x45c
};

struct UCloudStorageBase {
	TArray<FString> LocalCloudFiles; // 0x38
	char bSuppressDelegateCalls : 1; // 0x48
};

struct UMaterialInterface {
	USubsurfaceProfile* SubsurfaceProfile; // 0x38
	FLightmassMaterialInterfaceSettings LightmassSettings; // 0x50
	TArray<FMaterialTextureInfo> TextureStreamingData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct UMovieSceneSubSection {
	FMovieSceneSectionParameters Parameters; // 0xe8
	float StartOffset; // 0x10c
	float TimeScale; // 0x110
	float PrerollTime; // 0x114
	UMovieSceneSequence* SubSequence; // 0x118
	LazyObjectProperty ActorToRecord; // 0x120
	FString TargetSequenceName; // 0x140
	FDirectoryPath TargetPathToRecordTo; // 0x150
};

struct ULuminARCandidateImage {
	bool bUseUnreliablePose; // 0x58
	bool bImageIsStationary; // 0x59
	EMagicLeapImageTargetOrientation AxisOrientation; // 0x5a
};

struct UBTService_RunEQS {
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0x98
};

struct UProceduralBoxToolProperties {
	float Height; // 0x80
	int32_t HeightSubdivisions; // 0x84
};

struct UPlaneCutToolProperties {
	bool bSnapToWorldGrid; // 0x60
	bool bKeepBothHalves; // 0x61
	float SpacingBetweenHalves; // 0x64
	bool bFillCutHole; // 0x68
	bool bShowPreview; // 0x69
	bool bFillSpans; // 0x6a
};

struct UImage {
	FSlateBrush Brush; // 0x108
	FDelegate BrushDelegate; // 0x190
	FLinearColor ColorAndOpacity; // 0x1a0
	FDelegate ColorAndOpacityDelegate; // 0x1b0
	bool bFlipForRightToLeftFlowDirection; // 0x1c0
	FDelegate OnMouseButtonDownEvent; // 0x1c4
};

struct UMovieScene2DTransformSection {
	FMovieScene2DTransformMask TransformMask; // 0xf0
	FMovieSceneFloatChannel Translation[0x2]; // 0xf8
	FMovieSceneFloatChannel Rotation; // 0x238
	FMovieSceneFloatChannel Scale[0x2]; // 0x2d8
	FMovieSceneFloatChannel Shear[0x2]; // 0x418
};

struct UCrowRadialMenuConquestSkill {
	UCrowRadialButtonConquestSkill* WB_RadialMenu_6Button_1; // 0x3d0
	UCrowRadialButtonConquestSkill* WB_RadialMenu_6Button_2; // 0x3d8
	UCrowRadialButtonConquestSkill* WB_RadialMenu_6Button_3; // 0x3e0
	UCrowRadialButtonConquestSkill* WB_RadialMenu_6Button_4; // 0x3e8
	UCrowRadialButtonConquestSkill* WB_RadialMenu_6Button_5; // 0x3f0
	UCrowRadialButtonConquestSkill* WB_RadialMenu_6Button_6; // 0x3f8
	UTextBlock* TB_Money; // 0x400
	UCrowConquestSkillManager* SkillManager; // 0x408
};

struct UCrowSubTitleTableManager {
	TMap<int32_t, FCrowSubTitleDataRow> SubTitleDataRows; // 0x28
};

struct UVoxelSolidifyMeshesTool {
	UVoxelSolidifyMeshesToolProperties* SolidifyProperties; // 0x108
};

struct UCrowMissionAreaSquadRespawn {
	bool IsSpawned; // 0x220
	float BuildTime; // 0x224
	UParticleSystem* SpawnEffect; // 0x228
	FName SpawnEffectSocketName; // 0x230
	UParticleSystem* DestroyEffect; // 0x238
	FName DestroyEffectSocketName; // 0x240
};

struct ACrowWeaponPartsActor {
	UBoxComponent* BoxComponent; // 0x220
	UMeshComponent* MeshComponent; // 0x228
	ACrowWeaponBase* WeaponActor; // 0x230
};

struct UCrowWWiseSoundEvents {
	UAkAudioEvent* GasHitSound; // 0x28
	UAkAudioEvent* HitSound; // 0x30
	UAkAudioEvent* KillSound; // 0x38
	TMap<EHittingAreaType, UAkAudioEvent*> HitMarks; // 0x40
};

struct UTimeSynchronizationSource {
	bool bUseForSynchronization; // 0x28
	int32_t FrameOffset; // 0x2c
};

struct UMaterialExpressionTime {
	char bIgnorePause : 1; // 0x40
	char bOverride_Period : 1; // 0x40
	float Period; // 0x44
};

struct UNiagaraDataInterfaceAudioOscilloscope {
	USoundSubmix* Submix; // 0x38
	int32_t Resolution; // 0x40
	float ScopeInMilliseconds; // 0x44
};

struct UGroupEdgeInsertionProperties {
	EGroupEdgeInsertionMode InsertionMode; // 0x60
	bool bWireframe; // 0x64
	double VertexTolerance; // 0x68
};

struct UKelvinBrushProperties {
	float FalloffDistance; // 0x60
	float Stiffness; // 0x64
	float Incompressiblity; // 0x68
	int32_t BrushSteps; // 0x6c
};

struct UCrowWorldEventListWidget {
	UCanvasPanel* CP_Root; // 0x348
	UCrowWorldEventListItemWidget* WorldEventItem; // 0x350
	TArray<UCrowWorldEventListItemWidget*> ItemArray; // 0x358
};

struct ABP_ImpedimentsActor_C {
	UBoxComponent* Box; // 0x230
	USceneComponent* DefaultSceneRoot; // 0x238
};

struct UCrowWorldLODUpdater {
	int32_t CoreCountAvailable; // 0x28
	int32_t MinNumberOfCores; // 0x2c
	int32_t MinCountPerThread; // 0x30
	TArray<float> LODLevelCameraDistance; // 0x38
	APlayerController* PlayerController; // 0xe0
	TArray<FCrowWorldLODState> WorldActorLODStates; // 0xe8
	TArray<FCrowWorldLODData> WorldActorLODDatas; // 0xf8
	TMap<uint32_t, int32_t> WorldActorLODStateIndexes; // 0x108
	TArray<int16_t> StateIndexPool; // 0x158
};

struct UNiagaraDataInterfaceArrayInt32 {
	TArray<int32_t> IntData; // 0x50
};

struct ACrowSafeBoxEventActor {
	UBoxComponent* Root; // 0x220
	USceneComponent* IconLocation; // 0x228
	float InteractionTime; // 0x230
	UParticleSystem* SparkEffect; // 0x238
	FCrowDecalInfo WeldingDecal; // 0x240
	float WeldingDecalSpawnLength; // 0x290
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x298
	UAkAudioEvent* SoundCutting; // 0x320
	UAkAudioEvent* SoundEndCutting; // 0x328
	UAkAudioEvent* SoundComplete; // 0x330
	float CuttingViewAngle; // 0x338
	ECrowSafeBoxEventState EventState; // 0x33c
	UCrowInteractionProgressCircleWidget* GaugeWidget; // 0x340
	ACrowPlayerStateBase* OpenPlayerState; // 0x348
	TArray<USplineComponent*> SplineArray; // 0x350
	UParticleSystemComponent* SparkEffectComponent; // 0x360
};

struct UCrowPrepareMatchWidget {
	UTextBlock* TB_AllyNum; // 0x348
	UTextBlock* TB_EnemyNum; // 0x350
};

struct UNavigationSystemV1 {
	ANavigationData* MainNavData; // 0x28
	ANavigationData* AbstractNavData; // 0x30
	FName DefaultAgentName; // 0x38
	TSoftClassPtr<UObject> CrowdManagerClass; // 0x40
	char bAutoCreateNavigationData : 1; // 0x68
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x68
	char bAllowClientSideNavigation : 1; // 0x68
	char bShouldDiscardSubLevelNavData : 1; // 0x68
	char bTickWhilePaused : 1; // 0x68
	char bSupportRebuilding : 1; // 0x68
	char bInitialBuildingLocked : 1; // 0x68
	char bSkipAgentHeightCheckWhenPickingNavData : 1; // 0x69
	char bGenerateNavigationOnlyAroundNavigationInvokers : 1; // 0x69
	float ActiveTilesUpdateInterval; // 0x6c
	ENavDataGatheringModeConfig DataGatheringMode; // 0x70
	float DirtyAreaWarningSizeThreshold; // 0x74
	TArray<FNavDataConfig> SupportedAgents; // 0x78
	FNavAgentSelector SupportedAgentsMask; // 0x88
	TArray<ANavigationData*> NavDataSet; // 0x90
	TArray<ANavigationData*> NavDataRegistrationQueue; // 0xa0
	FMulticastInlineDelegate OnNavDataRegisteredEvent; // 0xc0
	FMulticastInlineDelegate OnNavigationGenerationFinishedDelegate; // 0xd0
	FNavigationSystemRunMode OperationMode; // 0x1bc
	float DirtyAreasUpdateFreq; // 0x15bc
};

struct UCameraAnimInst {
	UCameraAnim* CamAnim; // 0x28
	UInterpGroupInst* InterpGroupInst; // 0x30
	float PlayRate; // 0x50
	UInterpTrackMove* MoveTrack; // 0x68
	UInterpTrackInstMove* MoveInst; // 0x70
	ECameraShakePlaySpace PlaySpace; // 0x78
};

struct UMeshOpPreviewWithBackgroundCompute {
	UPreviewMesh* PreviewMesh; // 0x58
	TArray<UMaterialInterface*> StandardMaterials; // 0x60
	UMaterialInterface* OverrideMaterial; // 0x70
	UMaterialInterface* WorkingMaterial; // 0x78
};

struct UDisplaceMeshCommonProperties {
	EDisplaceMeshToolDisplaceType DisplacementType; // 0x60
	float DisplaceIntensity; // 0x64
	int32_t RandomSeed; // 0x68
	int32_t Subdivisions; // 0x6c
	FName WeightMap; // 0x70
	TArray<FString> WeightMapsList; // 0x78
	bool bInvertWeightMap; // 0x88
	bool bDisableSizeWarning; // 0x89
};

struct UInterpTrackInstParticleReplay {
	float LastUpdatePosition; // 0x28
};

struct UVoxelMorphologyMeshesTool {
	UVoxelMorphologyMeshesToolProperties* MorphologyProperties; // 0x108
};

struct UCrowCharacterAnimNotify_Swim {
	bool IsFP; // 0x38
	ECrowCharacterSwimAction Action; // 0x39
	char Speed; // 0x3a
	ECrowCharacterSwimBodyParts BodyParts; // 0x3b
	FName SocketName; // 0x3c
	FVector LocationOffset; // 0x44
	FRotator RotationOffset; // 0x50
	bool bIsAttachedBone; // 0x5c
	FName PreviewMaterialName; // 0x60
	bool PreviewIsDiving; // 0x68
};

struct UInterpTrackVectorMaterialParam {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct UCrowProgressBarWidget {
	UProgressBar* PB_Progress; // 0x348
	UTextBlock* TXT_Progress; // 0x350
	UBorder* BD_Notice; // 0x358
	URichTextBlock* RTXT_Notice; // 0x360
	FTimerHandle ProgressTimerHandle; // 0x388
	float RunningTimeSecond; // 0x390
	float StartTimeSeconds; // 0x394
};

struct ACrowProjectileRocketLauncher {
	float ProjectileGravityScale; // 0x17d0
	UParticleSystem* TracerFX_1P; // 0x17d8
	UParticleSystem* TracerFX_3P; // 0x17e0
	AActor* SubTrailEffectActor; // 0x17e8
	UAkAudioEvent* SoundMove; // 0x17f0
	UAkAudioEvent* FlyBySound; // 0x17f8
	float FlyBySoundRadius; // 0x1800
	UMatineeCameraShake* CameraShake; // 0x1808
	float CameraShakeMinDistance; // 0x1810
	float CameraShakeMaxDistance; // 0x1814
	AActor* SoundTargetActor; // 0x1818
	ACrowRocketLauncherTrail* TrailEffectActor; // 0x1820
	bool bIsUpdateFlyBySound; // 0x1828
	UParticleSystemComponent* TracerFXComp_1P; // 0x1830
	UParticleSystemComponent* TracerFXComp_3P; // 0x1838
};

struct AWaterMeshActor {
	UTexture2D* WaterVelocityTexture; // 0x220
	UWaterMeshComponent* WaterMesh; // 0x228
};

struct ATransformGizmoActor {
	UPrimitiveComponent* TranslateX; // 0x220
	UPrimitiveComponent* TranslateY; // 0x228
	UPrimitiveComponent* TranslateZ; // 0x230
	UPrimitiveComponent* TranslateYZ; // 0x238
	UPrimitiveComponent* TranslateXZ; // 0x240
	UPrimitiveComponent* TranslateXY; // 0x248
	UPrimitiveComponent* RotateX; // 0x250
	UPrimitiveComponent* RotateY; // 0x258
	UPrimitiveComponent* RotateZ; // 0x260
	UPrimitiveComponent* UniformScale; // 0x268
	UPrimitiveComponent* AxisScaleX; // 0x270
	UPrimitiveComponent* AxisScaleY; // 0x278
	UPrimitiveComponent* AxisScaleZ; // 0x280
	UPrimitiveComponent* PlaneScaleYZ; // 0x288
	UPrimitiveComponent* PlaneScaleXZ; // 0x290
	UPrimitiveComponent* PlaneScaleXY; // 0x298
};

struct UWaterRuntimeSettings {
	ECollisionChannel CollisionChannelForWaterTraces; // 0x38
	TSoftObjectPtr<UMaterialParameterCollection> MaterialParameterCollection; // 0x40
	float WaterBodyIconWorldSize; // 0x68
	float WaterBodyIconWorldZOffset; // 0x6c
	FName DefaultWaterCollisionProfileName; // 0x70
};

struct ACrowProjectileSmokeGrenade {
	FVector SmokeOriginLocation; // 0x18d0
	UParticleSystem* SmokeParticle; // 0x18e0
	float TimeToActivation; // 0x18e8
	float LifeTime; // 0x18ec
	UAkAudioEvent* EffectSound_W; // 0x18f0
	UParticleSystemComponent* SmokeParticleComp; // 0x18f8
	bool bExplosion; // 0x1900
};

struct UDistributionFloat {
	char bCanBeBaked : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UMaterialExpressionParameter {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
};

struct UCrowSlangManager {
	FString SpecialSymbols; // 0x28
};

struct UCrowBuildingSMC {
	bool Preview; // 0x4d0
	char LODType; // 0x4d1
	int32_t LODLevel; // 0x4d4
	FCrowBuildingPartsInfo PartsInfo; // 0x4e0
	TWeakObjectPtr<UStaticMeshComponent> DecalReceiver; // 0x520
	UMaterialInterface* DecalReceiverMaterial; // 0x528
	UStaticMesh* RemainMesh; // 0x530
	bool bIsDestructible; // 0x538
	bool UsingTriggerMesh; // 0x539
	bool bIsGlassMaterial; // 0x53a
	FVector DestructibleSocket; // 0x53c
	FVector BoundingBoxCenter; // 0x548
	FCrowBuildingHISMCDetail MeshDetail; // 0x558
	TArray<FKAggregateGeom> Geometries; // 0x5c0
	TArray<UBodySetup*> BodySetups; // 0x5d0
	char MeshGeometryFlag; // 0x5e0
	UStaticMesh* TriggerMesh; // 0x5e8
};

struct ACrowSpectatorIconActor {
	USceneComponent* IconLocation; // 0x220
	ACrowPlayerStateBase* TargetPS; // 0x228
	APawn* TargetPawn; // 0x230
	UCrowIndicatorViewInfo* IndicatorViewInfo; // 0x238
	FCrowGameIconDisplayInfo LocalBodyIconInfo; // 0x240
	FCrowGameIconDisplayInfo KillerIconInfo; // 0x2c8
};

struct UCrowStatusBreathWidget {
	float BreathFadeInTime; // 0x348
	float BreathFadeOutTime; // 0x34c
	FName AniBreathEmptyName; // 0x350
	UCanvasPanel* CP_Breath; // 0x358
	UCrowProgressBar* PB_Breath; // 0x360
	UCrowWidgetTweenAlpha* BreathTweenAlpha; // 0x368
	UCrowWidgetTweenAlpha* FadeTweenAlpha; // 0x370
	UWidgetAnimation* AniBreathEmpty; // 0x378
};

struct UCrowWeaponPartsSideBarrel {
	FCrowWeaponPartsSideBarrelTableRow PartsTable; // 0x320
	FCrowWeaponPartsSideBarrelTableRow DefaultPartsData; // 0x628
};

struct UCrowRadialMenuHealKitWidget {
	UCrowRadialMenuButtonWidget* WB_RadialMenu_4Button_1; // 0x3d0
	UCrowRadialMenuButtonWidget* WB_RadialMenu_4Button_2; // 0x3d8
	UCrowRadialMenuButtonWidget* WB_RadialMenu_4Button_3; // 0x3e0
	UCrowRadialMenuButtonWidget* WB_RadialMenu_4Button_4; // 0x3e8
	UCrowRadialMenuButtonWidget* WB_RadialMenu_4Button_5; // 0x3f0
	FString EquipedAmmoTextIndex; // 0x3f8
};

struct UNiagaraDataInterfaceCurveBase {
	TArray<float> ShaderLUT; // 0x38
	float LUTMinTime; // 0x48
	float LUTMaxTime; // 0x4c
	float LUTInvTimeRange; // 0x50
	float LUTNumSamplesMinusOne; // 0x54
	char bUseLUT : 1; // 0x58
	char bExposeCurve : 1; // 0x58
	FName ExposedName; // 0x5c
	UTexture2D* ExposedTexture; // 0x68
};

struct UGeometryCollectionDebugDrawComponent {
	AGeometryCollectionDebugDrawActor* GeometryCollectionDebugDrawActor; // 0xb0
	AGeometryCollectionRenderLevelSetActor* GeometryCollectionRenderLevelSetActor; // 0xb8
};

struct UWB_MatchingTimer_C {
	UWidgetAnimation* Ani_Show; // 0x3a8
	UImage* IMG_BackGround; // 0x3b0
	UImage* IMG_BackGround_2; // 0x3b8
	UImage* IMG_BG; // 0x3c0
	UImage* IMG_Cancel_BackGround; // 0x3c8
	UImage* IMG_Cancel_Hover; // 0x3d0
	UImage* IMG_MatchingComplete_Bg; // 0x3d8
	UImage* IMG_MatchingComplete_DecoT; // 0x3e0
	UImage* MatchingComplete_DecoB; // 0x3e8
	UTextBlock* TB_MenuTitle_2; // 0x3f0
};

struct UCrowConquestSkillManager {
	ACrowPlayerStateConquest* PlayerState; // 0xb0
	UCrowGameInvenComponent* GameInventory; // 0xb8
	TArray<FCrowConquestSkillInfo> SkillArray; // 0xc0
	TMap<FString, float> SkillCoolMap; // 0xd0
	TArray<ACrowIronShieldActor*> IronShieldArray; // 0x120
};

struct ACrowItemSpawner {
	ECrowSpawnerType SpawnerType; // 0x220
	bool bIsSpawnRandom; // 0x221
	uint32_t RandomIndex; // 0x224
	bool bIsSpawnGroup; // 0x228
	uint32_t GroupIndex; // 0x22c
	bool bIsSpawnMineral; // 0x230
	uint32_t MineralIndex; // 0x234
	int32_t MineralType; // 0x238
	bool bIsSpawnFix; // 0x23c
	uint32_t FixIndex; // 0x240
	bool bIsSpawnRespawnFix; // 0x244
	uint32_t RespawnFixIndex; // 0x248
	TArray<ACrowItemBase*> SpawnedItemArray; // 0x280
	TArray<ACrowPickupInventory*> SpawnedInvenArray; // 0x290
};

struct UCrowEnvTriggerComponent {
	FName RowName; // 0x460
	FString SocketName; // 0x468
	TMap<int32_t, FCrowEnvOverlapInfo> OverlapInfos; // 0x478
};

struct UNiagaraDataInterfaceArrayFloat2 {
	TArray<FVector2D> FloatData; // 0x50
};

struct UCrowCharacterMovementCollision {
	bool bActiveHeadCollision; // 0x1f8
	bool bHitHead; // 0x1f9
	bool bSimulating; // 0x1fa
	float HeadCollisionRadius; // 0x1fc
	FQuat HeadRotation; // 0x200
	UCrowCharacterMovement* CrowMovement; // 0x210
};

struct UMotionControllerComponent {
	int32_t PlayerIndex; // 0x440
	EControllerHand hand; // 0x444
	FName MotionSource; // 0x448
	char bDisableLowLatencyUpdate : 1; // 0x450
	ETrackingStatus CurrentTrackingStatus; // 0x454
	bool bDisplayDeviceModel; // 0x455
	FName DisplayModelSource; // 0x458
	UStaticMesh* CustomDisplayMesh; // 0x460
	TArray<UMaterialInterface*> DisplayMeshMaterialOverrides; // 0x468
	UPrimitiveComponent* DisplayComponent; // 0x4e0
};

struct UParticleModulePivotOffset {
	FVector2D PivotOffset; // 0x30
};

struct UCrowClanManager {
	TArray<FClanListItem> JoinClanList; // 0x38
	TArray<FClanListItem> InviteClanList; // 0x48
	TArray<FClanListItem> RecommandClanList; // 0x58
	TArray<FClanListItem> RankingTotalClanList; // 0x68
	TArray<FClanListItem> RankingMonthClanList; // 0x78
	FClanListItem SearchClanInfo; // 0x88
	FSearchUserInfo SearchUserInfo; // 0xc8
	TArray<FSearchUserInfo> InviteUserList; // 0xf0
	TArray<FSearchUserInfo> RequestUserList; // 0x100
	FClanInfo MyClanInfo; // 0x110
	TArray<uint32_t> UnlockClanMark; // 0x188
};

struct UNiagaraDataInterfaceVectorField {
	UVectorField* Field; // 0x38
	bool bTileX; // 0x40
	bool bTileY; // 0x41
	bool bTileZ; // 0x42
};

struct ACrowDrawVolumeTextureActor {
	UCanvas* Canvas; // 0x220
	FDrawToRenderTargetContext DrawToRTContext; // 0x228
	UMaterialInstanceDynamic* Mid; // 0x238
	FVector2D Resolution; // 0x240
	float NumberOfCellsRendered; // 0x248
	float FlipCellsCurrent; // 0x24c
	float CellsPerRow; // 0x250
	float CurrentRow; // 0x254
	float CurrentColumn; // 0x258
	float FlipCellsMax; // 0x25c
	float FlipRes; // 0x260
	bool bDraw; // 0x264
	UMaterialInterface* Material; // 0x268
	UStaticMeshComponent* ScanMesh; // 0x270
	UTextureRenderTarget2D* RenderTarget; // 0x278
	UTextureRenderTarget2D* CaptureTarget; // 0x280
};

struct UMovieSceneMarginSection {
	FMovieSceneFloatChannel TopCurve; // 0xe8
	FMovieSceneFloatChannel LeftCurve; // 0x188
	FMovieSceneFloatChannel RightCurve; // 0x228
	FMovieSceneFloatChannel BottomCurve; // 0x2c8
};

struct ACrowFxSpawnTesterActor {
	USceneComponent* SceneRoot; // 0x220
	UStaticMeshComponent* SphereMesh; // 0x228
	bool StopSpawn; // 0x230
	UParticleSystem* FxAsset; // 0x238
	UAkAudioEvent* SoundAsset; // 0x240
	int32_t CountX; // 0x248
	int32_t CountY; // 0x24c
	bool UseRandomBeginTiming; // 0x250
	float DurationMin; // 0x254
	float DurationMax; // 0x258
	float GridSize; // 0x25c
	float JitterSize; // 0x260
	bool UsePool; // 0x264
	TArray<FCrowFxSpawnTesterItem> Items; // 0x268
	TArray<UParticleSystemComponent*> Pool; // 0x278
};

struct ACrowGameStateSquadMatch {
	uint32_t ObjectiveMineralCount; // 0x4d8
	int32_t DefaultDropMineralCountMin; // 0x4dc
	int32_t DefaultDropMineralCountMax; // 0x4e0
	uint16_t ActiveMiningCountMin; // 0x4e4
	uint16_t ActiveMiningCountMax; // 0x4e6
	uint16_t MaxMiningMachineCount; // 0x4e8
	FString InstallMiningMachineDialogKey; // 0x4f0
	FString MiningCompleteDialogKey; // 0x500
	float PlayDialogEnemyInstallDistance; // 0x510
	FString BeforeReachTheGoalDialogKey; // 0x518
	UAkAudioEvent* BeforeReachTheGoalEffectSound; // 0x528
	float EnableEscapeTimeMin; // 0x530
	float EnableEscapeTimeMax; // 0x534
	float ReCallCoolTime; // 0x538
	float AutoCallTime; // 0x53c
	float ReturnAutoCallTime; // 0x540
	UAkAudioEvent* CallTheHeliEffectSound; // 0x548
	FString AnotherSquadDialogKey; // 0x550
	UAkAudioEvent* AnotherSquadEffectSound; // 0x560
	FString EscapeSpawnVehicleDialogKey; // 0x568
	UAkAudioEvent* EscapeSpawnVehicleSound; // 0x578
	float EnableRespawnDelayAfterDead; // 0x580
	float SquadRespawnCoolTime; // 0x584
	UAkAudioEvent* GetPointSound; // 0x588
	FCrowZombieInfo ZombieInfo; // 0x590
	UAkAudioEvent* WalkieTalkieUse; // 0xc00
	UAkAudioEvent* WalkieTalkieUseEnd; // 0xc08
	UAkAudioEvent* Voice_Skill_Respawn_Selector_WT; // 0xc10
	UAkAudioEvent* Voice_Skill_Respawn_SelectOther_WT; // 0xc18
	TArray<FCrowProcessMineralInfo> ProceedingCuonArray; // 0xc20
	ACrowRespawnAirPlaneActor* RespawnAirPlaneActorClass; // 0xc30
	ACrowRespawnAirPlaneCamera* RespawnAirPlaneCameraActorClass; // 0xc38
	float RespawnAirPlaneSpawnDelay; // 0xc40
	float RespawnAirPlaneSpeed; // 0xc44
	float RespawnAirPlaneCameraSpeed; // 0xc48
	float RespawnAirPlaneCameraAttachDist; // 0xc4c
	ACrowAirPlaneRespawnSplineActor* SelectedSplineActor; // 0xc50
	float SplineRandomAngle; // 0xc58
	float EnableEscapeTime; // 0xc5c
	ECrowGameStateSquadMatch CrowGameStateSquadMatch; // 0xc60
	bool bIsReCall; // 0xc61
	bool bIsEmergencyCall; // 0xc62
	TArray<ACrowMiningPointActor*> MiningPointArray; // 0xc68
	TArray<ACrowEscapePointActor*> EscapePointArray; // 0xc78
	FCrowTeamInfo WinnerTeamInfo; // 0xc88
	ACrowRespawnAirPlaneActor* AirPlaneActor; // 0xcb8
	ACrowRespawnAirPlaneCamera* AirPlaneCameraActor; // 0xcc0
	TArray<FCrowCharacterPartsInfo> CharacterPartsInfoArray; // 0xcc8
	ACrowCloudScapeReplicationActor* CloudReplicationActor; // 0xcd8
};

struct UGridPathFollowingComponent {
	UNavLocalGridManager* GridManager; // 0x250
};

struct USetCollisionGeometryTool {
	USetCollisionGeometryToolProperties* Settings; // 0x90
	UCollisionGeometryVisualizationProperties* VizSettings; // 0x98
	UPhysicsObjectToolPropertySet* CollisionProps; // 0xa0
	UMaterialInterface* LineMaterial; // 0xa8
	UPreviewGeometry* PreviewGeom; // 0xb0
};

struct UMovieScene3DPathSection {
	FMovieSceneFloatChannel TimingCurve; // 0x110
	MovieScene3DPathSection_Axis FrontAxisEnum; // 0x1b0
	MovieScene3DPathSection_Axis UpAxisEnum; // 0x1b1
	char bFollow : 1; // 0x1b4
	char bReverse : 1; // 0x1b4
	char bForceUpright : 1; // 0x1b4
};

struct ACrowLobbyCharacterPawn {
	UCharacterMovementComponent* LobbyCharacterMovement; // 0x11b0
	ACrowWeaponLobby* CurrrentWeapon; // 0x11f0
};

struct ALevelBounds {
	UBoxComponent* BoxComponent; // 0x220
	bool bAutoUpdateBounds; // 0x228
};

struct UCrowFPSEditorSettings {
	bool IntrusionTest; // 0x28
	bool ReplicationGraphTest; // 0x29
};

struct UCrowNetworkDediServer {
	FString ServerIP; // 0x30
	FString ServerPort; // 0x40
	FString ProcessName; // 0x50
	FString ManagerAddr; // 0x60
	ACrowSceneBase* CurrentScene; // 0x70
};

struct UCrowSelectMapWidget {
	UTextBlock* TB_StageName; // 0x348
	UImage* IMG_Map; // 0x350
	UCheckBox* CB_DotIndicator; // 0x358
	UHorizontalBox* HB_SelectMap; // 0x360
};

struct UCrowSupplyGainMessage {
	UImage* IMG_Weapon; // 0x348
};

struct ACineCameraActor {
	FCameraLookatTrackingSettings LookatTrackingSettings; // 0x7a0
};

struct UBTTask_CrowSetStance {
	ECrowAICharacterStance Stance; // 0x98
	ECrowAICharacterMoveMode MoveMode; // 0x99
};

struct UMaterialExpressionConstant3Vector {
	FLinearColor Constant; // 0x40
};

struct UMaterialExpressionDistance {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UMaterialExpressionRuntimeVirtualTextureReplace {
	FExpressionInput Default; // 0x40
	FExpressionInput VirtualTextureOutput; // 0x54
};

struct UMh6_MachineGun_02_Anim_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x318
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x420
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x528
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x548
	float RotorRoll; // 0x558
};

struct UCrowMissionSystemManager {
	TArray<FCrowMissionInfo> ArrayDailyMission; // 0x28
	TArray<FCrowMissionInfo> ArrayWeeklyMission; // 0x38
	TArray<FCrowMissionInfo> ArrayCurrentPlayingMission; // 0x48
	TArray<FCrowMissionInfo> TutorialMissionList; // 0x58
	TMap<int32_t, FCrowMissionTableRow> MapMissionTable; // 0x68
	ACrowPlayerStateBase* PlayerState; // 0xb8
};

struct AWaterBodyLake {
	ULakeGenerator* LakeGenerator; // 0xdd0
};

struct UCrowStartModeTitleWidget {
	UTextBlock* TB_ModTitle; // 0x348
	float visibleSecond; // 0x350
	UWidgetAnimation* Anim_Show; // 0x358
	UWidgetAnimation* Anim_Fade; // 0x360
};

struct UNiagaraDataInterfaceTexture {
	UTexture* Texture; // 0x38
};

struct UGizmoComponentHitTarget {
	UPrimitiveComponent* Component; // 0x30
};

struct UARPlaneGeometry {
	EARPlaneOrientation Orientation; // 0xf8
	FVector Center; // 0xfc
	FVector Extent; // 0x108
	TArray<FVector> BoundaryPolygon; // 0x118
	UARPlaneGeometry* SubsumedBy; // 0x128
};

struct UHapticFeedbackEffect_SoundWave {
	USoundWave* SoundWave; // 0x28
};

struct UBehaviorTreeManager {
	int32_t MaxDebuggerSteps; // 0x28
	TArray<FBehaviorTreeTemplateInfo> LoadedTemplates; // 0x30
	TArray<UBehaviorTreeComponent*> ActiveComponents; // 0x40
};

struct UDatasmithMaterialInstanceTemplate {
	TSoftObjectPtr<UMaterialInterface> ParentMaterial; // 0x30
	TMap<FName, float> ScalarParameterValues; // 0x58
	TMap<FName, FLinearColor> VectorParameterValues; // 0xa8
	TMap<FName, TSoftObjectPtr<UTexture>> TextureParameterValues; // 0xf8
	FDatasmithStaticParameterSetTemplate StaticParameters; // 0x148
};

struct UGizmoConstantFrameAxisSource {
	FVector Origin; // 0x30
	FVector Direction; // 0x3c
	FVector TangentX; // 0x48
	FVector TangentY; // 0x54
};

struct APointLight {
	UPointLightComponent* PointLightComponent; // 0x230
};

struct UPlanarReflectionComponent {
	UBoxComponent* PreviewBox; // 0x2b0
	float NormalDistortionStrength; // 0x2b8
	float PrefilterRoughness; // 0x2bc
	float PrefilterRoughnessDistance; // 0x2c0
	int32_t ScreenPercentage; // 0x2c4
	float ExtraFOV; // 0x2c8
	float DistanceFromPlaneFadeStart; // 0x2cc
	float DistanceFromPlaneFadeEnd; // 0x2d0
	float DistanceFromPlaneFadeoutStart; // 0x2d4
	float DistanceFromPlaneFadeoutEnd; // 0x2d8
	float AngleFromPlaneFadeStart; // 0x2dc
	float AngleFromPlaneFadeEnd; // 0x2e0
	bool bShowPreviewPlane; // 0x2e4
	bool bRenderSceneTwoSided; // 0x2e5
};

struct UGizmoTransformProxyTransformSource {
	UTransformProxy* Proxy; // 0x48
};

struct ACrowBomberProjectileActor {
	UCapsuleComponent* CollisionComp; // 0x220
	UProjectileMovementComponent* MovementComp; // 0x228
	FVector TargetPosition; // 0x230
};

struct UCrowIndicatorViewInfo {
	AActor* TargetActor; // 0x28
	USceneComponent* TargetComponent; // 0x30
	USkeletalMeshComponent* TargetSkeletalMesh; // 0x38
	FCrowPingData PingData; // 0x40
	FCrowGameIconDisplayInfo DisplayInfo; // 0xa8
	UCrowWidgetBase* MainWidget; // 0x130
	UWidget* RootWidget; // 0x138
	UWidget* ArrowPanel; // 0x140
	TArray<UWidget*> IconArray; // 0x148
	TArray<UWidget*> NameArray; // 0x158
	TArray<UTextBlock*> DistanceArray; // 0x168
	float PrevScale; // 0x178
	FVector2D PrevPixelPos; // 0x17c
	float PrevArrowAngle; // 0x184
};

struct UCrowBombMissionScoreBoardWidget {
	UCrowBombMissionScoreSlotWidget* ScoreInfoListItem; // 0x350
	UTextBlock* TBRound; // 0x358
	UVerticalBox* VBMyTeamList; // 0x360
	UVerticalBox* VBEnemyTeamList; // 0x368
	UCrowBombMissionTeamScoreWidget* MyTeamScoreWidget; // 0x370
	UCrowBombMissionTeamScoreWidget* EnemyTeamScoreWidget; // 0x378
	TArray<FCrowBombMissionScoreListItemData> RedTeamPlayerList; // 0x380
	TArray<FCrowBombMissionScoreListItemData> BlueTeamPlayerList; // 0x390
	ACrowPlayerStateBombMission* LocalPlayerState; // 0x3a0
	ACrowGameStateBombMission* GameStateBombMission; // 0x3a8
	FCrowBombMissionTeamScoreData RedTeamScoreData; // 0x3b0
	FCrowBombMissionTeamScoreData BlueTeamScoreData; // 0x3c0
	UBorder* BDMyTeam; // 0x3d0
	UBorder* BDEnemyTeam; // 0x3d8
	FLinearColor RedTeamColor; // 0x3e0
	FLinearColor BlueTeamColor; // 0x3f0
};

struct ACrowItemMeshLODViewer {
	USceneComponent* SceneRoot; // 0x220
	TArray<USkeletalMesh*> ItemMeshAssets; // 0x228
	TArray<ACrowItemTableOverviewSKC*> SKCActors; // 0x238
	int32_t LODIndex; // 0x248
};

struct UCrowPhysicalMaterial {
	bool IsEnablePenetration; // 0xa0
	float PenetrationResistance; // 0xa4
};

struct UNavLinkCustomComponent {
	uint32_t NavLinkUserId; // 0xe8
	UNavArea* EnabledAreaClass; // 0xf0
	UNavArea* DisabledAreaClass; // 0xf8
	FNavAgentSelector SupportedAgents; // 0x100
	FVector LinkRelativeStart; // 0x104
	FVector LinkRelativeEnd; // 0x110
	ENavLinkDirection LinkDirection; // 0x11c
	char bLinkEnabled : 1; // 0x120
	char bNotifyWhenEnabled : 1; // 0x120
	char bNotifyWhenDisabled : 1; // 0x120
	char bCreateBoxObstacle : 1; // 0x120
	FVector ObstacleOffset; // 0x124
	FVector ObstacleExtent; // 0x130
	UNavArea* ObstacleAreaClass; // 0x140
	float BroadcastRadius; // 0x148
	float BroadcastInterval; // 0x14c
	ECollisionChannel BroadcastChannel; // 0x150
};

struct USoundNodeAttenuation {
	USoundAttenuation* AttenuationSettings; // 0x48
	FSoundAttenuationSettings AttenuationOverrides; // 0x50
	char bOverrideAttenuation : 1; // 0x3f0
};

struct UCrowRadialMenuInput {
	APlayerController* PC; // 0x140
};

struct UAnimCompress_PerTrackCompression {
	float MaxZeroingThreshold; // 0x60
	float MaxPosDiffBitwise; // 0x64
	float MaxAngleDiffBitwise; // 0x68
	float MaxScaleDiffBitwise; // 0x6c
	TArray<AnimationCompressionFormat> AllowedRotationFormats; // 0x70
	TArray<AnimationCompressionFormat> AllowedTranslationFormats; // 0x80
	TArray<AnimationCompressionFormat> AllowedScaleFormats; // 0x90
	char bResampleAnimation : 1; // 0xa0
	float ResampledFramerate; // 0xa4
	int32_t MinKeysForResampling; // 0xa8
	char bUseAdaptiveError : 1; // 0xac
	char bUseOverrideForEndEffectors : 1; // 0xac
	int32_t TrackHeightBias; // 0xb0
	float ParentingDivisor; // 0xb4
	float ParentingDivisorExponent; // 0xb8
	char bUseAdaptiveError2 : 1; // 0xbc
	float RotationErrorSourceRatio; // 0xc0
	float TranslationErrorSourceRatio; // 0xc4
	float ScaleErrorSourceRatio; // 0xc8
	float MaxErrorPerTrackRatio; // 0xcc
	float PerturbationProbeSize; // 0xd0
};

struct UCrowCompassEnemyFireMarker {
	UImage* IMG_EnemyCompass; // 0x348
	UMaterialInstance* CompassMaterialIns; // 0x350
	UMaterialInstanceDynamic* CompassMaterialInsDynamic; // 0x358
	FVector TargetActorLocation; // 0x360
	float Offset; // 0x36c
	UCrowCompassInfoWIdget* ParentWidget; // 0x370
	FName TargetActorName; // 0x378
};

struct UCrowModExpTableManager {
	TMap<ECrowGameMode, FCrowModExpTableRow> ModExpData; // 0x28
};

struct UCircularThrobber {
	int32_t NumberOfPieces; // 0x108
	float Period; // 0x10c
	float Radius; // 0x110
	USlateBrushAsset* PieceImage; // 0x118
	FSlateBrush Image; // 0x120
	bool bEnableRadius; // 0x1a8
};

struct UParticleModuleAccelerationDrag {
	UDistributionFloat* DragCoefficient; // 0x38
	FRawDistributionFloat DragCoefficientRaw; // 0x40
};

struct UCrowIndicatorControll {
	TArray<UCanvasPanel*> PanelIcon; // 0x108
	TArray<UTextBlock*> TextName; // 0x118
	TArray<UTextBlock*> TextDistance; // 0x128
};

struct UAISubsystem {
	UAISystem* AISystem; // 0x30
};

struct UWidgetAnimation {
	UMovieScene* MovieScene; // 0x60
	TArray<FWidgetAnimationBinding> AnimationBindings; // 0x68
	bool bLegacyFinishOnStop; // 0x78
	FString DisplayLabel; // 0x80
};

struct UCrowRandomBoxInfoWidget {
	UCrowCustomizeOutfitSlotWidget* ItemSlotWidgetClass; // 0x348
	UCrowShopItemSlotWidget* WB_Shop_Itemslot; // 0x350
	UGridPanel* GP_ItemList; // 0x358
	UCanvasPanel* CP_Gacha_Percent; // 0x360
	UCrowButton* BT_Open; // 0x368
	UCrowButton* BT_Buy; // 0x370
	UCrowButton* BT_BuyGPoint; // 0x378
	UCrowButton* BT_BuyRCP; // 0x380
	UCrowButton* BT_Cancel; // 0x388
	UCrowButton* BT_GachaPercent; // 0x390
	UCrowButton* BT_Close; // 0x398
	UTextBlock* TB_ItemName; // 0x3a0
	UTextBlock* TXT_Legendary_Percent; // 0x3a8
	UTextBlock* TXT_Epic_Percent; // 0x3b0
	UTextBlock* TXT_Rare_Percent; // 0x3b8
	UTextBlock* TXT_Uncommon_Percent; // 0x3c0
	UTextBlock* TXT_Common_Percent; // 0x3c8
	UHorizontalBox* HB_Legendary; // 0x3d0
	UHorizontalBox* HB_Epic; // 0x3d8
	UHorizontalBox* HB_Rare; // 0x3e0
	UHorizontalBox* HB_Uncommon; // 0x3e8
	UHorizontalBox* HB_Common; // 0x3f0
	UCanvasPanel* CP_GachaInfo_Rare; // 0x3f8
	UCanvasPanel* CP_GachaInfo_Uncommon; // 0x400
	UCanvasPanel* CP_GachaInfo_Common; // 0x408
	UCanvasPanel* CP_GachaInfo_Epic; // 0x410
	UCanvasPanel* CP_GachaInfo_Legendary; // 0x418
	FCrowRandomBoxTableRow RandomBoxTable; // 0x420
	FCrowShopTableRow ShopTableData; // 0x5d8
};

struct UUPSActionCondition {
	bool bInverseCondition; // 0x28
};

struct UFXSystemAsset {
	uint32_t MaxPoolSize; // 0x28
	uint32_t PoolPrimeSize; // 0x2c
};

struct UGeometryCacheTrackStreamable {
	UGeometryCacheCodecBase* Codec; // 0x58
	float StartSampleTime; // 0xc8
};

struct UCrowLocalSelectSlotWidget {
	UCrowToggleButton* BT_Toggle; // 0x348
	UTextBlock* TB_SlotName; // 0x350
	UTextBlock* TB_SlotState; // 0x358
	FLinearColor SmoothlyColor; // 0x360
	FLinearColor FewColor; // 0x370
	FCrowServerRegion ServerRegionInfo; // 0x390
	bool bIsAuto; // 0x3c0
};

struct UCrowSettingsCategoryContentsWidget {
	ESettingCategoryType MyCategory; // 0x348
	UCrowSettingsSlotTitleWidget* CrowSettingsSlotTitleWidgetClass; // 0x350
	UCrowSettingsSlotWidget* CrowSettingsSlotWidgetClass; // 0x358
	UTextBlock* TB_CategoryName; // 0x360
	UVerticalBox* VB_CategoryContents; // 0x368
	TArray<UCrowSettingsSlotTitleWidget*> CrowSettingsSlotTitles; // 0x370
	TArray<UCrowSettingsSlotWidget*> CrowSettingSlots; // 0x380
};

struct UARImageComponent {
	FARImageUpdatePayload ReplicatedPayload; // 0x280
};

struct UMovieSceneEasingExternalCurve {
	UCurveFloat* Curve; // 0x30
};

struct UMovieSceneCameraAnimSection {
	FMovieSceneCameraAnimSectionData AnimData; // 0xe8
	UCameraAnim* CameraAnim; // 0x108
	float PlayRate; // 0x110
	float PlayScale; // 0x114
	float BlendInTime; // 0x118
	float BlendOutTime; // 0x11c
	bool bLooping; // 0x120
};

struct UCrowCharacterPostAnimTP {
	FCrowCharacterFootIKSetup FootIKSetup; // 0x2b8
	FCrowCharacterProneIKSetup ProneIKSetup; // 0x308
	ACrowCharacterPawn* CharacterPawn; // 0x360
	UCrowCharacterMovement* Movement; // 0x368
	USkeletalMeshComponent* CharacterMesh; // 0x370
	FFootIKOffsets FootIKOffset; // 0x378
	FProneIKOffsets ProneIKOffset; // 0x394
	FRagdollIKOffsets RagdollIKOffset; // 0x400
	EStance Stance; // 0x460
	ECrowMovementMode MovementMode; // 0x461
	bool bEnableProneIK; // 0x462
	bool bEnableFootIK; // 0x463
	bool bDontUsePostAnims; // 0x464
};

struct UCrowCustomFxLODManager {
	TMap<FString, FCrowCustomFxLODRow> TableMap; // 0x28
};

struct ACrowUserEscapePointActor {
	UBoxComponent* Box_Heli; // 0x3d8
	UBoxComponent* Box_Ladder; // 0x3e0
	TArray<UBoxComponent*> CollisionArray; // 0x3e8
};

struct ASkeletalMeshActor {
	char bShouldDoAnimNotifies : 1; // 0x228
	char bWakeOnLevelStart : 1; // 0x228
	USkeletalMeshComponent* SkeletalMeshComponent; // 0x230
	USkeletalMesh* ReplicatedMesh; // 0x238
	UPhysicsAsset* ReplicatedPhysAsset; // 0x240
	UMaterialInterface* ReplicatedMaterial0; // 0x248
	UMaterialInterface* ReplicatedMaterial1; // 0x250
};

struct ACrowAIZoneBase {
	int32_t SapwnAICharacterNum; // 0x220
	ECrowAIZoneState ZoneState; // 0x224
	TArray<ACrowAIZoneRewardBase*> AIZoneRewardList; // 0x228
	TArray<ACrowAICharacterSpawner*> AICharacterSpawnerList; // 0x238
	TArray<ACrowAICharacterCoverPoint*> AICharacterCoverPointList; // 0x248
	TArray<FCrowTeamPawnPair> TeamCharacterArray; // 0x258
	FTimerHandle UpdateAIZoneTimerHandle; // 0x268
};

struct UCrowCameraModifierFlashBang {
	UMaterialInstance* FlashBangBlindMaterialInstance; // 0x48
	UMaterialInstance* FlashBangAfterImageMaterialInstance; // 0x50
	UMaterialInstanceDynamic* FlashBangBlindMaterialInsDynamic; // 0x58
	UMaterialInstanceDynamic* FlashBangAfterImageMaterialInsDynamic; // 0x60
};

struct UBillboardComponent {
	UTexture2D* Sprite; // 0x440
	char bIsScreenSizeScaled : 1; // 0x448
	float ScreenSize; // 0x44c
	float U; // 0x450
	float UL; // 0x454
	float V; // 0x458
	float VL; // 0x45c
};

struct UCrowReplayManager {
	TArray<UCrowReplayInfo*> ReplayList; // 0x68
	bool bFindReplay; // 0x78
	bool bIsRecording; // 0x79
	bool bIsLoading; // 0x7a
	FString CacheReplayName; // 0x80
	FString CacheFriendlyName; // 0x90
	UCrowReplayInfo* CachePlayedReplay; // 0xa0
	UCrowLoadingWidget* CrowLoadingWidget; // 0xa8
};

struct UCrowSpectatorTargetListWidget {
	UScrollBox* SCB_SquadList; // 0x348
	UCrowSpectatorSquadSlotWidget* SquadSlotWidgetClass; // 0x350
	TMap<FString, UCrowSpectatorSquadSlotWidget*> SquadSlotMap; // 0x358
	UCrowSpectatorPlayerSlotWidget* SelectedPlayerSlotWidget; // 0x3a8
};

struct UMaterialExpressionTruncate {
	FExpressionInput Input; // 0x40
};

struct UMovieSceneComponentMaterialTrack {
	int32_t MaterialIndex; // 0x90
};

struct UCrowClanSubTabWidget {
	UCrowWidgetToggleButton* WB_RankingTotal; // 0x348
	UCrowWidgetToggleButton* WB_RankingMonth; // 0x350
	UCrowWidgetToggleButton* WB_EmblemSet; // 0x358
	UCrowWidgetToggleButton* WB_ClanShop; // 0x360
};

struct UGroomImportOptions {
	FGroomConversionSettings ConversionSettings; // 0x28
	TArray<FHairGroupsInterpolation> InterpolationSettings; // 0x40
};

struct UMaterialExpressionPower {
	FExpressionInput Base; // 0x40
	FExpressionInput Exponent; // 0x54
	float ConstExponent; // 0x68
};

struct UCrowBackPackInfoWidget {
	UGridPanel* GP_BackPackSlot; // 0x348
	UCrowInventoryInputEventHandler* WB_CrowDragDropPanel; // 0x350
	UBorder* BD_BackGround_ItemSlot; // 0x358
	UUserWidget* BackPackListItem; // 0x360
	int32_t RowCount; // 0x368
	int32_t ColumnCount; // 0x36c
	TArray<UCrowBackPackListItemWidget*> BackPackItemList; // 0x370
	UCrowGameInvenComponent* CrowGameInvenComponent; // 0x380
};

struct UCrowSubWeaponListItemWidget {
	ECrowWeaponSubType SelectWeaponSubType; // 0x1ae0
	UCrowWidgetImage* IMG_Weapon_Slot3; // 0x1ae8
	UCrowWidgetImage* IMG_Weapon_Slot2; // 0x1af0
	UCrowWidgetImage* IMG_Weapon_Slot1; // 0x1af8
	UImage* IMG_Slot3_Empty; // 0x1b00
	UImage* IMG_Slot2_Empty; // 0x1b08
	UImage* IMG_Slot1_Empty; // 0x1b10
	UTextBlock* TB_RemainAmmo_Slot3; // 0x1b18
	UTextBlock* TB_RemainAmmo_Slot2; // 0x1b20
	UTextBlock* TB_RemainAmmo_Slot1; // 0x1b28
	UCanvasPanel* CP_ItemList_4; // 0x1b30
	UCanvasPanel* CP_ItemList_3; // 0x1b38
	UCanvasPanel* CP_ItemList_2; // 0x1b40
	TArray<UCrowWidgetImage*> ImageList; // 0x1b48
	TArray<UImage*> EmptyImageList; // 0x1b58
	TArray<UTextBlock*> AmmoCountTextList; // 0x1b68
	TArray<UCanvasPanel*> CanvasPanelList; // 0x1b78
	TMap<int32_t, int32_t> ItemList; // 0x1b88
	UWidgetAnimation* ChangeEquipAnimation; // 0x1bd8
	ACrowItemBase* PrevItem; // 0x1be0
};

struct ULightMapVirtualTexture2D {
	TArray<int8_t> TypeToLayer; // 0x100
};

struct UGerstnerWaterWaveGeneratorSpectrum {
	EWaveSpectrumType SpectrumType; // 0x28
	TArray<FGerstnerWaveOctave> Octaves; // 0x30
};

struct APaperTileMapActor {
	UPaperTileMapComponent* RenderComponent; // 0x220
};

struct UUPSEditorDrawer {
	TArray<FDrawerItemInfo> TextToDraw; // 0x28
};

struct UProceduralRoundedRectangleToolProperties {
	float CornerRadius; // 0x80
	int32_t CornerSlices; // 0x84
};

struct UCrowRejoinMsgWidget {
	UTextBlock* TB_ModeName; // 0x368
	UTextBlock* TB_WorldName; // 0x370
	UImage* IMG_World; // 0x378
	UCrowButton* BT_MessageOk; // 0x380
	UCrowButton* BT_MessageCancel; // 0x388
	ACrowSceneLobby* SceneLobby; // 0x390
};

struct UCrowInvenWeaponListSubItemWidget {
	UTextBlock* TB_Name; // 0x1a48
	UCrowWidgetImage* IMG_BackIcon; // 0x1a50
	UImage* IMG_Frame; // 0x1a58
	UImage* IMG_HotKey_2; // 0x1a60
	UImage* IMG_BackGround_Melee; // 0x1a68
	UImage* IMG_BackGround; // 0x1a70
	UCrowDragDropWidgetBase* WB_CrowDragDropPanel; // 0x1a78
	UCrowButton* BT_Loadout_Button; // 0x1a80
	UHorizontalBox* HB_Hotkey; // 0x1a88
	UCanvasPanel* MainPanel; // 0x1a90
	UHorizontalBox* HB_WeaponLv; // 0x1a98
	UTextBlock* TB_WeaponLV; // 0x1aa0
	UCrowProgressBar* PB_WeaponLV; // 0x1aa8
	FText DefaultSlotText; // 0x1ab0
	UPaperSprite* BackIconSprite; // 0x1ac8
	bool IsArmorSlot; // 0x1ad0
	bool HiddeIcon; // 0x1ad1
};

struct UMapBuildDataRegistry {
	ELightingBuildQuality LevelLightingQuality; // 0x28
};

struct UMaterialExpressionStaticSwitch {
	char DefaultValue : 1; // 0x40
	FExpressionInput A; // 0x44
	FExpressionInput B; // 0x58
	FExpressionInput Value; // 0x6c
};

struct UCrowVehicleSettings {
	FCrowVehicleUpdaterSetting CrowVehicleUpdaterSetting; // 0x38
};

struct ACrowTargetTraceEffect {
	USceneComponent* TargetComponent; // 0x228
	USkeletalMeshComponent* TargetSkeletalMesh; // 0x230
	UParticleSystemComponent* Effect; // 0x238
};

struct ARecastNavMesh {
	char bDrawTriangleEdges : 1; // 0x428
	char bDrawPolyEdges : 1; // 0x428
	char bDrawFilledPolys : 1; // 0x428
	char bDrawNavMeshEdges : 1; // 0x428
	char bDrawTileBounds : 1; // 0x428
	char bDrawPathCollidingGeometry : 1; // 0x428
	char bDrawTileLabels : 1; // 0x428
	char bDrawPolygonLabels : 1; // 0x428
	char bDrawDefaultPolygonCost : 1; // 0x429
	char bDrawLabelsOnPathNodes : 1; // 0x429
	char bDrawNavLinks : 1; // 0x429
	char bDrawFailedNavLinks : 1; // 0x429
	char bDrawClusters : 1; // 0x429
	char bDrawOctree : 1; // 0x429
	char bDrawOctreeDetails : 1; // 0x429
	char bDrawMarkedForbiddenPolys : 1; // 0x429
	char bDistinctlyDrawTilesBeingBuilt : 1; // 0x42a
	float DrawOffset; // 0x42c
	char bFixedTilePoolSize : 1; // 0x430
	int32_t TilePoolSize; // 0x434
	float TileSizeUU; // 0x438
	float CellSize; // 0x43c
	float CellHeight; // 0x440
	float AgentRadius; // 0x444
	float AgentHeight; // 0x448
	float AgentMaxSlope; // 0x44c
	float AgentMaxStepHeight; // 0x450
	float MinRegionArea; // 0x454
	float MergeRegionSize; // 0x458
	float MaxSimplificationError; // 0x45c
	int32_t MaxSimultaneousTileGenerationJobsCount; // 0x460
	int32_t TileNumberHardLimit; // 0x464
	int32_t PolyRefTileBits; // 0x468
	int32_t PolyRefNavPolyBits; // 0x46c
	int32_t PolyRefSaltBits; // 0x470
	FVector NavMeshOriginOffset; // 0x474
	float DefaultDrawDistance; // 0x480
	float DefaultMaxSearchNodes; // 0x484
	float DefaultMaxHierarchicalSearchNodes; // 0x488
	ERecastPartitioning RegionPartitioning; // 0x48c
	ERecastPartitioning LayerPartitioning; // 0x48d
	int32_t RegionChunkSplits; // 0x490
	int32_t LayerChunkSplits; // 0x494
	char bSortNavigationAreasByCost : 1; // 0x498
	char bPerformVoxelFiltering : 1; // 0x498
	char bMarkLowHeightAreas : 1; // 0x498
	char bUseExtraTopCellWhenMarkingAreas : 1; // 0x498
	char bFilterLowSpanSequences : 1; // 0x498
	char bFilterLowSpanFromTileCache : 1; // 0x498
	char bDoFullyAsyncNavDataGathering : 1; // 0x498
	char bUseBetterOffsetsFromCorners : 1; // 0x498
	char bStoreEmptyTileLayers : 1; // 0x499
	char bUseVirtualFilters : 1; // 0x499
	char bAllowNavLinkAsPathEnd : 1; // 0x499
	char bUseVoxelCache : 1; // 0x499
	float TileSetUpdateInterval; // 0x49c
	float HeuristicScale; // 0x4a0
	float VerticalDeviationFromGroundCompensation; // 0x4a4
};

struct UCrowStatusConquestSkillWidget {
	UImage* IMG_Skill_Usable; // 0x348
	ACrowPlayerStateBase* PlayerState; // 0x350
};

struct UCrowDecalManager {
	TArray<FCrowDecalTypeArray> DecalTypeArray; // 0x28
	TArray<FCrowDecalTypeArray> FadingDecalTypeArray; // 0x38
	TArray<TWeakObjectPtr<UCrowCustomDepthDecal>> CustomDepthDecalArray; // 0x48
};

struct UPacketHandlerProfileConfig {
	TArray<FString> Components; // 0x28
};

struct UCrowWorldMapConfig {
	bool DoNotUseCrowWorld; // 0x30
	UCrowWorldMapVisualConfig* MapVisualConfig; // 0x38
	bool UseLightProbe; // 0x40
	FCrowWorldLightProbeSetting LightProbeSetting; // 0x44
	bool UseWorldOriginRebase; // 0x90
	float RebaseOriginDistance; // 0x94
	float ClusterSize; // 0x98
	int32_t ClusterSyncDistance; // 0x9c
	float ClusterHeightMax; // 0xa0
	float SectorSize; // 0xa4
	int32_t SectorSyncDistance; // 0xa8
	float SectorHeightMax; // 0xac
	float ClientUpdateVehicleDistance; // 0xb0
	float ClientUpdateVehicleMargin; // 0xb4
	bool UseOcclusionGrid; // 0xb8
	float OcclusionSize; // 0xbc
	int32_t OcclusionDistance; // 0xc0
	float OcclusionHeightMax; // 0xc4
	float SyncUpdateDelayMin; // 0xc8
	float SyncUpdateDelayMax; // 0xcc
	FVector2D WorldOrigin2D; // 0xd0
	float AutoDetectParentMeshDistance; // 0xd8
	FCrowWorldSoundSetting SoundSetting; // 0xdc
	FCrowWorldActorLODSetting LODSetting; // 0xe0
	UCrowWorldDataCollectionAsset* WorldDataAsset; // 0x100
	FCrowWorldTriggerCollisionSetting TriggerCollisionSetting; // 0x108
	TArray<FCrowWorldDataHandlerActorItem> ActorItems; // 0x128
	TArray<FCrowWorldDataHandlerComponentItem> ComponentItems; // 0x138
};

struct UCrowDamageEffectWidget {
	UImage* IMG_Shock; // 0x348
	UImage* IMG_SmallBleed; // 0x350
	UImage* IMG_LargeBleed; // 0x358
	UImage* IMG_Hit; // 0x360
	UImage* IMG_Hit_2; // 0x368
	UImage* IMG_Hit_3; // 0x370
	UBackgroundBlur* BackgroundBlur_20; // 0x378
	UWidgetAnimation* AniDamageHit; // 0x380
	UCrowDamageEffect* DamageEffect; // 0x388
};

struct UStaticMeshSimulationComponent {
	bool Simulating; // 0xb8
	bool bNotifyCollisions; // 0xb9
	EObjectStateTypeEnum ObjectType; // 0xba
	float Mass; // 0xbc
	ECollisionTypeEnum CollisionType; // 0xc0
	EImplicitTypeEnum ImplicitType; // 0xc1
	int32_t MinLevelSetResolution; // 0xc4
	int32_t MaxLevelSetResolution; // 0xc8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xcc
	FVector InitialLinearVelocity; // 0xd0
	FVector InitialAngularVelocity; // 0xdc
	float DamageThreshold; // 0xe8
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xf0
	AChaosSolverActor* ChaosSolverActor; // 0xf8
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x100
	TArray<UPrimitiveComponent*> SimulatedComponents; // 0x120
};

struct APartyBeaconClient {
	FString DestSessionId; // 0x2e0
	FPartyReservation PendingReservation; // 0x2f0
	EClientRequestType RequestType; // 0x340
	bool bPendingReservationSent; // 0x341
	bool bCancelReservation; // 0x342
};

struct UMaterialExpressionDistanceFieldGradient {
	FExpressionInput position; // 0x40
};

struct UCreateSessionCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct APlayerCameraManager {
	APlayerController* PCOwner; // 0x220
	USceneComponent* TransformComponent; // 0x228
	float DefaultFOV; // 0x238
	float DefaultOrthoWidth; // 0x240
	float DefaultAspectRatio; // 0x248
	FCameraCacheEntry CameraCache; // 0x290
	FCameraCacheEntry LastFrameCameraCache; // 0x880
	FTViewTarget ViewTarget; // 0xe70
	FTViewTarget PendingViewTarget; // 0x1470
	FCameraCacheEntry CameraCachePrivate; // 0x1aa0
	FCameraCacheEntry LastFrameCameraCachePrivate; // 0x2090
	TArray<UCameraModifier*> ModifierList; // 0x2680
	TArray<UCameraModifier*> DefaultModifiers; // 0x2690
	float FreeCamDistance; // 0x26a0
	FVector FreeCamOffset; // 0x26a4
	FVector ViewTargetOffset; // 0x26b0
	FMulticastInlineDelegate OnAudioFadeChangeEvent; // 0x26c0
	TArray<AEmitterCameraLensEffectBase*> CameraLensEffects; // 0x26e0
	UCameraModifier_CameraShake* CachedCameraShakeMod; // 0x26f0
	UCameraAnimInst* AnimInstPool[0x8]; // 0x26f8
	TArray<FPostProcessSettings> PostProcessBlendCache; // 0x2738
	TArray<UCameraAnimInst*> ActiveAnims; // 0x2758
	TArray<UCameraAnimInst*> FreeAnims; // 0x2768
	ACameraActor* AnimCameraActor; // 0x2778
	char bIsOrthographic : 1; // 0x2780
	char bDefaultConstrainAspectRatio : 1; // 0x2780
	char bClientSimulatingViewTarget : 1; // 0x2780
	char bUseClientSideCameraUpdates : 1; // 0x2780
	char bGameCameraCutThisFrame : 1; // 0x2781
	float ViewPitchMin; // 0x2784
	float ViewPitchMax; // 0x2788
	float ViewYawMin; // 0x278c
	float ViewYawMax; // 0x2790
	float ViewRollMin; // 0x2794
	float ViewRollMax; // 0x2798
	float ServerUpdateCameraTimeout; // 0x27a0
};

struct URemeshProperties {
	float SmoothingStrength; // 0x68
	bool bFlips; // 0x6c
	bool bSplits; // 0x6d
	bool bCollapses; // 0x6e
};

struct AUPSEnemyPointAction {
	UUPSEnemyPointActionComponent* DefaultEnemyPointActionComponent; // 0x228
	USceneComponent* RootSceneComponent; // 0x230
	TArray<UUPSEnemyPointActionComponent*> EnemyActionPointComponents; // 0x238
	TSet<ACharacter*> CharactersReachedPoint; // 0x248
	TMap<ACharacter*, AUPSPointActionMovementHandler*> CharacterMovementHandlers; // 0x298
	TMap<TWeakObjectPtr<ACharacter>, FDelegate> ActionFinishedCallbacks; // 0x2e8
	TSet<ACharacter*> CharactersStartedPointAction; // 0x338
	AUPSPointActionMovementHandler* MovementHandlerClass; // 0x388
	FGameplayTag PointTag; // 0x390
	bool bFinishActionAfterCharacterAbort; // 0x398
};

struct ACrowAIObjectCharacterBase {
	bool bOverrideCrowAIObjectBillboardSprite; // 0x220
	bool bOverrideCrowAIObjectCharacterMesh; // 0x221
	bool bOverrideCrowAIObjectCharacterMeshMaterial; // 0x222
	bool bOverrideCrowAIObjectCharacterPreviewAnim; // 0x223
	UTexture2D* OverrideCrowAIObjectBillboardSprite; // 0x228
	USkeletalMesh* OverrideCrowAIObjectCharacterMesh; // 0x230
	UMaterialInterface* OverrideCrowAIObjectCharacterMeshMaterial; // 0x238
	UAnimSequenceBase* OverrideCrowAIObjectCharacterPreviewAnim; // 0x240
	USceneComponent* RootSceneComponent; // 0x248
};

struct ACrowBomberActor {
	FVector TopLeftPoint; // 0x220
	FVector BottomRightPoint; // 0x22c
	AActor* ProjectileSubClass; // 0x248
	int32_t ProjectileCount; // 0x250
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x258
	USceneComponent* RootComp; // 0x2e0
	FVector TargetLoc; // 0x2e8
	bool IsFire; // 0x2f4
	float FirePosDir; // 0x2f8
	AActor* SpawnTargetAreaActor; // 0x300
	UCrowWorldMapIcon* Icon; // 0x308
	FVector PrevBombingTargetPos; // 0x310
	float IntervalTime; // 0x31c
	int32_t CurrentCounting; // 0x320
	FVector PrevBombingPos; // 0x328
	float Dir; // 0x334
};

struct UCrowWeaponModel {
	TArray<UCrowWeaponPartsBase*> PartsArray; // 0x200
	UCrowWeaponPartsBase* PartsMainBody; // 0x210
	UCrowWeaponPartsAccCharm* WeaponCharm; // 0x218
	USceneComponent* DefaultParent; // 0x220
	UPointLightComponent* DynamicLight; // 0x228
	ACrowWeaponBase* WeaponActor; // 0x230
	TArray<FCrowWeaponStickerInfo> WeaponModelStickerSlots; // 0x288
	TArray<UCrowDecalComponent*> StickerSlotDecalList; // 0x298
	ACrowFoliageAffectorActor* FoliageAffector; // 0x2a8
	FCrowWeaponTableRow WeaponTable; // 0x2b0
	FCrowAmmoTableRow AmmoTable; // 0x14d0
	FCrowWeaponData WeaponData; // 0x16f8
	FCrowWeaponAccData WeaponAccData; // 0x1860
	UParticleSystemComponent* MuzzleSmokeEffect; // 0x1910
	bool bIsFirstPerson; // 0x19a0
	int32_t CachedSimpleMainBodyIndex; // 0x19a8
	int32_t CachedPrimarySightIndex; // 0x19ac
	USkeletalMeshComponent* SimplePartsMainBody; // 0x19b0
	USkeletalMeshComponent* SimplePartsPrimarySight; // 0x19b8
};

struct UMovieSceneNiagaraTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UWB_SettingSlotButton_C {
	UImage* IMG_BackGround; // 0x358
	UImage* IMG_Hover; // 0x360
};

struct ACrowGameModeBombMission {
	bool bIsTeamBalance; // 0x4a8
	char bIsFriendlyFire : 1; // 0x4a9
	float FirstRoundWaitTimeSec; // 0x4ac
	float RoundWaitTimeSec; // 0x4b0
	float RoundMatchTimeSec; // 0x4b4
	float RoundFinishTimeSec; // 0x4b8
	int8_t TotalRoundCount; // 0x4bc
	int8_t RoundTransitionCount; // 0x4bd
	float LoadoutTimeSec; // 0x4c0
	float CompositionCTimeSec; // 0x4c4
	ECrowTeam_RedBlue FirstAttackerTeamID; // 0x4c8
	FString CompositionCTextIndex; // 0x4d0
	bool bIsTeamUnbalance; // 0x4e0
	ACrowGameStateBombMission* CrowGameStateBombMission; // 0x4e8
	ECrowGameRoundState CrowGameRoundState; // 0x4f0
	FTimerHandle GameRoundStateTimer; // 0x4f8
	FTimerHandle LoadoutTimer; // 0x500
};

struct UOnlineSessionClient {
	bool bIsFromInvite; // 0x1d8
	bool bHandlingDisconnect; // 0x1d9
};

struct UParticleModuleVelocity_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct UInteractiveToolPropertySet {
	UInteractiveToolPropertySet* CachedProperties; // 0x38
	bool bIsPropertySetEnabled; // 0x40
};

struct UMovieSceneMediaSection {
	UMediaSource* MediaSource; // 0xe8
	bool bLooping; // 0xf0
	FFrameNumber StartFrameOffset; // 0xf4
	UMediaTexture* MediaTexture; // 0xf8
	UMediaSoundComponent* MediaSoundComponent; // 0x100
	bool bUseExternalMediaPlayer; // 0x108
	UMediaPlayer* ExternalMediaPlayer; // 0x110
};

struct UAssetManagerSettings {
	TArray<FPrimaryAssetTypeInfo> PrimaryAssetTypesToScan; // 0x38
	TArray<FDirectoryPath> DirectoriesToExclude; // 0x48
	TArray<FPrimaryAssetRulesOverride> PrimaryAssetRules; // 0x58
	TArray<FPrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules; // 0x68
	bool bOnlyCookProductionAssets; // 0x78
	bool bShouldManagerDetermineTypeAndName; // 0x79
	bool bShouldGuessTypeAndNameInEditor; // 0x7a
	bool bShouldAcquireMissingChunksOnLoad; // 0x7b
	TArray<FAssetManagerRedirect> PrimaryAssetIdRedirects; // 0x80
	TArray<FAssetManagerRedirect> PrimaryAssetTypeRedirects; // 0x90
	TArray<FAssetManagerRedirect> AssetPathRedirects; // 0xa0
	TSet<FName> MetaDataTagsForAssetRegistry; // 0xb0
};

struct UGizmoTransformChangeStateTarget {
	TScriptInterface<IToolContextTransactionProvider> TransactionManager; // 0x50
};

struct UMovieSceneMediaTrack {
	TArray<UMovieSceneSection*> MediaSections; // 0x80
};

struct UWidgetAnimationPlayCallbackProxy {
	FMulticastInlineDelegate Finished; // 0x28
};

struct UMeshSpaceDeformerTool {
	ENonlinearOperationType SelectedOperationType; // 0xc0
	float UpperBoundsInterval; // 0xc4
	float LowerBoundsInterval; // 0xc8
	float ModifierPercent; // 0xcc
	bool bSnapToWorldGrid; // 0xd0
	UGizmoTransformChangeStateTarget* StateTarget; // 0xd8
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xe8
	FVector GizmoCenter; // 0x110
	FQuat GizmoOrientation; // 0x120
	UIntervalGizmo* IntervalGizmo; // 0x130
	UTransformGizmo* TransformGizmo; // 0x138
	UTransformProxy* TransformProxy; // 0x140
	UGizmoLocalFloatParameterSource* UpIntervalSource; // 0x148
	UGizmoLocalFloatParameterSource* DownIntervalSource; // 0x150
	UGizmoLocalFloatParameterSource* ForwardIntervalSource; // 0x158
};

struct ACrowSceneLogin {
	ACrowLoginHUD* LoginHUD; // 0x938
	FString SaveNickName; // 0x940
};

struct UNavigationDataChunk {
	FName NavigationDataName; // 0x28
};

struct UCrowClanTabWidget {
	UWidgetSwitcher* WS_ClanTabMenu; // 0x350
	UCrowWidgetToggleButton* WB_LobbyButton_Recommend; // 0x358
	UCrowWidgetToggleButton* WB_LobbyButton_Creation; // 0x360
	UCrowWidgetToggleButton* WB_LobbyButton_ClanRanking; // 0x368
	UCrowWidgetToggleButton* WB_LobbyButton_ClanInfo; // 0x370
	UCrowWidgetToggleButton* WB_LobbyButton_ClanEmblem; // 0x378
	UCrowWidgetToggleButton* WB_LobbyButton_ClanRanking_2; // 0x380
};

struct UAchievementQueryCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UCrowInviteMessageWidget {
	UWidgetSwitcher* WS_InviteStatus; // 0x348
	UTextBlock* TB_InviteStatus; // 0x350
	UTextBlock* TB_InviteUserName; // 0x358
	URichTextBlock* TB_Message; // 0x360
	UCrowButton* BT_Accept; // 0x368
	UCrowButton* BT_Reject; // 0x370
	FCrowPartyInvitation PartyInvitationData; // 0x3a8
	FCrowCustomModeInvitation CustomModeInvitationData; // 0x3c0
	FCrowGameFriendInfo RequestFriendInfoData; // 0x3e0
	ECrowLobbyNoticeType NoticeType; // 0x410
};

struct UCrowWorldSplineRoadComponent {
	bool bOldWay; // 0xc0
};

struct UNiagaraDataInterfaceVector2DCurve {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
};

struct UCrowShoppingBagWidget {
	UCrowCustomizeOutfitSlotWidget* ItemSlotWidgetClass; // 0x348
	UGridPanel* GP_ShoppingList; // 0x350
	UCrowCustomizeOutfitSlotWidget* WB_Customize_Outfit_SmallSlot; // 0x358
	UTextBlock* TB_LastItemName; // 0x360
	UTextBlock* TB_LastItemDesc; // 0x368
	UTextBlock* TB_TotalMoney; // 0x370
	UCrowButton* BT_Buy; // 0x378
	UCrowButton* BT_Cancel; // 0x380
	UImage* IMG_GoldIcon; // 0x388
	bool IsSendPacket; // 0x390
	FCrowItemData LastItemData; // 0x398
	TArray<FCrowShopTableRow> ItemsInShopppingBag; // 0x3c8
	TArray<FCrowItemData> ItemsDataInShopppingBag; // 0x3d8
};

struct UCrowRadialMenuThrowWidget {
	UCrowRadialMenuButtonWidget* RadialMenu_6Button_1; // 0x3d0
	UCrowRadialMenuButtonWidget* RadialMenu_6Button_2; // 0x3d8
	UCrowRadialMenuButtonWidget* RadialMenu_6Button_3; // 0x3e0
	UCrowRadialMenuButtonWidget* RadialMenu_6Button_4; // 0x3e8
	UCrowRadialMenuButtonWidget* RadialMenu_6Button_5; // 0x3f0
	UCrowRadialMenuButtonWidget* RadialMenu_6Button_6; // 0x3f8
	FString EquipedAmmoTextIndex; // 0x400
};

struct UCrowSettingsSlotButtonWidget {
	UCrowButton* BT_ClickButton; // 0x348
	UCrowSettingsSlotWidget* OwnerSlot; // 0x350
};

struct UCrowCharacterAnimNotify_CameraShake {
	UMatineeCameraShake* ShakeClass; // 0x38
	float Scale; // 0x40
};

struct UBakedCurvatureMapToolProperties {
	EBakedCurvatureTypeMode CurvatureType; // 0x60
	EBakedCurvatureColorMode ColorMode; // 0x64
	float RangeMultiplier; // 0x68
	float MinRangeMultiplier; // 0x6c
	EBakedCurvatureClampMode Clamping; // 0x70
	bool bGaussianBlur; // 0x74
	float BlurRadius; // 0x78
};

struct UCrowCustomizeCategorySmallWidget {
	UVerticalBox* VB_Custmize_Outfitlist; // 0x348
	UCrowCustomOutfitItemListWidget* CustomOutfitItemListWidget; // 0x350
	UCrowCustomAppearanceListWidget* CustomAppearanceListWidget; // 0x358
	TArray<UCrowCategorySlotSmallWidget*> OutFitSlotWidgetArray; // 0x360
	ACrowSceneLobby* SceneLobby; // 0x370
	UCrowCategorySlotSmallWidget* CurrentCategorySlot; // 0x378
	bool IsOwnItemList; // 0x380
};

struct UPlayMontageCallbackProxy {
	FMulticastInlineDelegate OnCompleted; // 0x28
	FMulticastInlineDelegate OnBlendOut; // 0x38
	FMulticastInlineDelegate OnInterrupted; // 0x48
	FMulticastInlineDelegate OnNotifyBegin; // 0x58
	FMulticastInlineDelegate OnNotifyEnd; // 0x68
};

struct UFoliageType_InstancedStaticMesh {
	UStaticMesh* Mesh; // 0x3a8
	TArray<UMaterialInterface*> OverrideMaterials; // 0x3b0
	UFoliageInstancedStaticMeshComponent* ComponentClass; // 0x3c0
};

struct URevolveBoundaryToolProperties {
	bool bDisplayOriginalMesh; // 0xb0
	FVector AxisOrigin; // 0xb4
	float AxisYaw; // 0xc0
	float AxisPitch; // 0xc4
	bool bSnapToWorldGrid; // 0xc8
};

struct ACrowAICharacterPawn {
	ACrowAICharacterController* AIController; // 0x1b08
	ACrowAICharacterCoverPoint* OccupyedCoverPoint; // 0x1b10
};

struct ABP_CrowWeaponPartsLaserSight_Side_C {
	UParticleSystemComponent* FX_Wp_LaserLight_M001; // 0x260
	UCrowLaserBeamComponent* CrowLaserBeam; // 0x268
	USkeletalMeshComponent* AR_LASERSIGHTSIDE; // 0x270
};

struct UCSGMeshesToolProperties {
	ECSGOperation Operation; // 0x60
	bool bShowNewBoundaryEdges; // 0x61
	bool bAttemptFixHoles; // 0x62
	bool bOnlyUseFirstMeshMaterials; // 0x63
};

struct UAsyncActionHandleSaveGame {
	FMulticastInlineDelegate Completed; // 0x30
	USaveGame* SaveGameObject; // 0x60
};

struct UForceFeedbackAttenuation {
	FForceFeedbackAttenuationSettings Attenuation; // 0x28
};

struct UCrowDialogTableManager {
	TMap<FName, FCrowDialogTableRow> TableMap; // 0x28
};

struct ACrowGameHUD_Conquest {
	UCrowHUDWidgetConquest* MainWidgetClassConquest; // 0x5f0
	UUserWidget* SubSpactatorWidget; // 0x5f8
	UUserWidget* ResultScoreConquestWidgetClass; // 0x600
	UCrowRadialMenuConquestSkill* RadialMenuConquestSkillClass; // 0x608
	UCrowInGameLoadoutWidget* InGameLoadoutWidgetClass; // 0x610
	UAkAudioEvent* PlayCountdownSound; // 0x618
	UCrowHUDWidgetConquest* MainWidgetConquest; // 0x620
	UCrowRadialMenuConquestSkill* RadialMenuConquestSkill; // 0x628
	UCrowInGameLoadoutWidget* InGameLoadoutWidget; // 0x630
	UCrowGameResultConquestWidget* ModeResultWidget; // 0x638
	TArray<UCrowConquestLineLink*> ConquestLineLinkArray; // 0x640
};

struct UInteractiveGizmo {
	UInputBehaviorSet* InputBehaviors; // 0x30
};

struct USmoothMeshToolProperties {
	ESmoothMeshToolSmoothType SmoothingType; // 0x60
};

struct UMovieSceneCameraShakeSourceTriggerSection {
	FMovieSceneCameraShakeSourceTriggerChannel Channel; // 0xe8
};

struct UCrowIndexTableManager {
	TMap<uint32_t, FCrowRandomSetTableRow> RandomSetTable; // 0x28
	TMap<uint32_t, FCrowRandomItemTableRow> RandomItemTable; // 0x78
	TMap<uint32_t, FCrowFixSetTableRow> FixSetTable; // 0xc8
	TMap<uint32_t, FCrowFixItemTableRow> FixItemTable; // 0x118
	TMap<uint32_t, FCrowGroupSetTableRow> GroupSetTable; // 0x168
	TMap<uint32_t, FCrowGroupItemTableRow> GroupItemTable; // 0x1b8
	TMap<uint32_t, FCrowFixSetTableRow> RespawnFixSetTable; // 0x208
	TMap<uint32_t, FCrowFixItemTableRow> RespawnFixItemTable; // 0x258
	TMap<uint32_t, FCrowMineralItemTableRow> MineralItemTable; // 0x2a8
};

struct ACrowMeteorEventActor {
	UBoxComponent* Root; // 0x220
	USceneComponent* IconLocation; // 0x228
	UStaticMeshComponent* StartingPoint; // 0x230
	UStaticMeshComponent* LandingPoint; // 0x238
	UParticleSystem* EffectEnterAtmosphere; // 0x240
	UParticleSystem* EffectMeteor; // 0x248
	UParticleSystem* EffectExplosion; // 0x250
	float Speed; // 0x258
	FWeaponDamageSettings DamageSettings; // 0x260
	UDamageType* DamegeType; // 0x288
	UMatineeCameraShake* CameraShake; // 0x290
	float CameraShakeMinDistance; // 0x298
	float CameraShakeMaxDistance; // 0x29c
	FCrowGameIconDisplayInfo IconDisplayInfoWait; // 0x2a0
	FCrowGameIconDisplayInfo IconDisplayInfoActive; // 0x328
	UAkAudioEvent* SoundMove; // 0x3b0
	UAkAudioEvent* SoundExplosion; // 0x3b8
	UAkAudioEvent* SoundEnterAtmosphere; // 0x3c0
	TArray<FWorldMeteorObjectInfo> ObjectsCreatedAfterLanding; // 0x3c8
	TArray<FWorldMeteorObjectInfo> EffectsCreatedAfterLanding; // 0x3d8
	TArray<ACrowContaminationAreaEventActor*> ContaminationAreaAfterExplosion; // 0x3e8
	int32_t ContaminationIndex; // 0x3f8
	float ContaminationAreaActiveDelay; // 0x3fc
	AActor* MeteorActor; // 0x400
	UParticleSystemComponent* MeteorComponent; // 0x408
	FWorldMeteorEventInfo EventInfo; // 0x410
};

struct UCrowMainMedalTableManager {
	TMap<uint32_t, FCrowMainMedalTableRow> MainMedalTable; // 0x28
	TMap<uint32_t, FCrowMainMedalGroupTableRow> MainMedalGroupTable; // 0x78
};

struct ACrowWorldEventContaminationArea {
	TArray<ACrowContaminationAreaEventActor*> ContaminationAreaArray; // 0x370
};

struct ULandscapeSettings {
	int32_t MaxNumberOfLayers; // 0x38
};

struct UMaterialExpressionLandscapeLayerSample {
	FName ParameterName; // 0x40
	float PreviewWeight; // 0x48
	FGuid ExpressionGUID; // 0x4c
};

struct UCrowConquestMeteorStart {
	UBillboardComponent* Billboard; // 0x1f8
	float IconScale; // 0x200
};

struct UCrowRadialMenuPingWidget {
	UCrowRadialMenuButtonWidget* WB_RadialMenu_8Button_1; // 0x3d0
	UCrowRadialMenuButtonWidget* WB_RadialMenu_8Button_2; // 0x3d8
	UCrowRadialMenuButtonWidget* WB_RadialMenu_8Button_3; // 0x3e0
	UCrowRadialMenuButtonWidget* WB_RadialMenu_8Button_4; // 0x3e8
	UCrowRadialMenuButtonWidget* WB_RadialMenu_8Button_5; // 0x3f0
	UCrowRadialMenuButtonWidget* WB_RadialMenu_8Button_6; // 0x3f8
	UCrowRadialMenuButtonWidget* WB_RadialMenu_8Button_7; // 0x400
	UCrowRadialMenuButtonWidget* WB_RadialMenu_8Button_8; // 0x408
	TArray<ECrowPingType> ItemPingTypes; // 0x410
};

struct ULocalLightComponent {
	ELightUnits IntensityUnits; // 0x328
	float Radius; // 0x32c
	float AttenuationRadius; // 0x330
	FLightmassPointLightSettings LightmassSettings; // 0x334
};

struct UParticleModuleMeshRotation_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UWaterMeshComponent {
	int32_t ForceCollapseDensityLevel; // 0x468
	float TileSize; // 0x46c
	FIntPoint ExtentInTiles; // 0x470
	UMaterialInterface* FarDistanceMaterial; // 0x478
	float FarDistanceMeshExtent; // 0x480
	FVector RTWorldLocation; // 0x484
	FVector RTWorldSizeVector; // 0x490
	int32_t TessellationFactor; // 0x580
	float LODScale; // 0x584
};

struct UMaterialExpressionSpeedTree {
	FExpressionInput GeometryInput; // 0x40
	FExpressionInput WindInput; // 0x54
	FExpressionInput LODInput; // 0x68
	FExpressionInput ExtraBendWS; // 0x7c
	ESpeedTreeGeometryType GeometryType; // 0x90
	ESpeedTreeWindType WindType; // 0x91
	ESpeedTreeLODType LODType; // 0x92
	float BillboardThreshold; // 0x94
	bool bAccurateWindVelocities; // 0x98
};

struct UMovieScenePrimitiveMaterialTrack {
	int32_t MaterialIndex; // 0xb0
};

struct UAkAssetDataSwitchContainer {
	TArray<UAkAssetDataSwitchContainerData*> SwitchContainers; // 0x90
	UAkGroupValue* DefaultGroupValue; // 0xa0
};

struct UFindTurnBasedMatchCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct ACrowWorldObjectDestroyerForTest {
	TArray<AActor*> FogArray; // 0x220
	TArray<AActor*> IFAArray; // 0x230
	TArray<AActor*> RoadArray; // 0x240
	TArray<AActor*> SMArray; // 0x250
	TArray<AActor*> WaterArray; // 0x260
	TArray<AActor*> SkySphereArray; // 0x270
	TArray<AActor*> LandscapeArray; // 0x280
	TArray<AActor*> BuildingArray; // 0x290
	TArray<AActor*> WorldPropArray; // 0x2a0
	TArray<AActor*> EtcArray; // 0x2b0
	bool LastShowFog; // 0x2c0
	bool LastShowIFA; // 0x2c1
	bool LastShowRoad; // 0x2c2
	bool LastShowWater; // 0x2c3
	bool LastShowStaticMesh; // 0x2c4
	bool LastShowSkySphere; // 0x2c5
	bool LastShowLandscape; // 0x2c6
	bool LastShowBuilding; // 0x2c7
	bool LastShowWorldProp; // 0x2c8
	bool LastShowEtc; // 0x2c9
	bool bCollected; // 0x2ca
};

struct UUVLayoutPreviewProperties {
	bool bVisible; // 0x60
	float ScaleFactor; // 0x64
	EUVLayoutPreviewSide WhichSide; // 0x68
	bool bShowWireframe; // 0x6c
	FVector2D Shift; // 0x70
};

struct UCrowWidgetImage {
	ECrowImageLimitType LimitType; // 0x210
	float LimitValue; // 0x214
};

struct UBrowning_Anim_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x318
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x328
	FAnimNode_Slot AnimGraphNode_Slot; // 0x348
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x390
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x3b0
	FAnimNode_VehicleWeaponHandler AnimGraphNode_VehicleWeapon_2; // 0x3d0
	FAnimNode_VehicleWeaponHandler AnimGraphNode_VehicleWeapon; // 0x4d0
	float AimYaw; // 0x5d0
	float AimPitch; // 0x5d4
};

struct UParticleModuleVelocityOverLifetime {
	FRawDistributionVector VelOverLife; // 0x38
	char Absolute : 1; // 0x80
};

struct UNetDriver {
	FString NetConnectionClassName; // 0x30
	FString ReplicationDriverClassName; // 0x40
	int32_t MaxDownloadSize; // 0x50
	char bClampListenServerTickRate : 1; // 0x54
	int32_t NetServerMaxTickRate; // 0x58
	int32_t MaxNetTickRate; // 0x5c
	int32_t MaxInternetClientRate; // 0x60
	int32_t MaxClientRate; // 0x64
	float ServerTravelPause; // 0x68
	float SpawnPrioritySeconds; // 0x6c
	float RelevantTimeout; // 0x70
	float KeepAliveTime; // 0x74
	float InitialConnectTimeout; // 0x78
	float ConnectionTimeout; // 0x7c
	float TimeoutMultiplierForUnoptimizedBuilds; // 0x80
	bool bNoTimeouts; // 0x84
	bool bNeverApplyNetworkEmulationSettings; // 0x85
	UNetConnection* ServerConnection; // 0x88
	TArray<UNetConnection*> ClientConnections; // 0x90
	int32_t RecentlyDisconnectedTrackingTime; // 0x100
	UWorld* World; // 0x140
	UPackage* WorldPackage; // 0x148
	UObject* NetConnectionClass; // 0x170
	UObject* ReplicationDriverClass; // 0x178
	FName NetDriverName; // 0x190
	TArray<FChannelDefinition> ChannelDefinitions; // 0x198
	TMap<FName, FChannelDefinition> ChannelDefinitionMap; // 0x1a8
	TArray<UChannel*> ActorChannelPool; // 0x1f8
	float Time; // 0x210
	UReplicationDriver* ReplicationDriver; // 0x6e8
};

struct UCrowLandWheelsAnimInstance {
	UCrowVehicleMovementLandWheels* LandWheelsMovement; // 0x2b8
	UCrowVehicleMovementBoats* BoatsMovement; // 0x2c0
};

struct UCrowInGameModeGuideWidget {
	UWidgetSwitcher* WS_IngameGuide; // 0x368
};

struct UChaosClothSharedSimConfig {
	int32_t IterationCount; // 0x28
	int32_t SubdivisionCount; // 0x2c
	float SelfCollisionThickness; // 0x30
	float CollisionThickness; // 0x34
	bool bUseDampingOverride; // 0x38
	float Damping; // 0x3c
	bool bUseGravityOverride; // 0x40
	float GravityScale; // 0x44
	FVector Gravity; // 0x48
	bool bUseLocalSpaceSimulation; // 0x54
	bool bUseXPBDConstraints; // 0x55
};

struct UCrowWorldEventListItemWidget {
	UTextBlock* TB_Title; // 0x348
	UTextBlock* TB_Desc; // 0x350
	UTextBlock* TB_Timer; // 0x358
	ACrowWorldEventBase* TargetActor; // 0x360
	UWidgetAnimation* AniShow; // 0x368
	UWidgetAnimation* AniHide; // 0x370
	UWidgetAnimation* AniChangeTitle; // 0x378
	UWidgetAnimation* AniChangeDesc; // 0x380
	UCrowWidgetBase* ParentWidget; // 0x388
};

struct UNiagaraDataInterfaceSkeletalMesh {
	ENDISkeletalMesh_SourceMode SourceMode; // 0x38
	AActor* Source; // 0x40
	FNiagaraUserParameterBinding MeshUserParameter; // 0x48
	USkeletalMeshComponent* SourceComponent; // 0x68
	ENDISkeletalMesh_SkinningMode SkinningMode; // 0x70
	TArray<FName> SamplingRegions; // 0x78
	int32_t WholeMeshLOD; // 0x88
	TArray<FName> FilteredBones; // 0x90
	TArray<FName> FilteredSockets; // 0xa0
	FName ExcludeBoneName; // 0xb0
	char bExcludeBone : 1; // 0xb8
	bool bRequireCurrentFrameData; // 0xb9
};

struct UDatasmithActorTemplate {
	TSet<FName> Layers; // 0x30
	TSet<FName> Tags; // 0x80
};

struct ACrowWeaponBase {
	bool bVisibleInVehicle; // 0x320
	FCrowWeaponData WeaponData; // 0x328
	ECrowWeaponKeyFlags WeaponKeyFlags; // 0x490
	FCrowWeaponAccData WeaponAccData; // 0x498
	FCrowWeaponData ClientWeaponData; // 0x550
	FCrowWeaponAccData ClientWeaponAccData; // 0x6b8
	FTimerHandle LimitHoldBreath; // 0x770
	FTimerHandle HoldBreathCoolTimeHandle; // 0x778
	UCrowWeaponModel* WeaponModelFirst; // 0x780
	UCrowWeaponModel* WeaponModelThird; // 0x788
	UCrowWeaponSpreadComponent* SpreadComponent; // 0x790
	UCrowWeaponRecoilComponent* RecoilComponent; // 0x798
	ACrowPlayerControllerBase* PlayerController; // 0x7a0
	AController* Controller; // 0x7a8
	APawn* WeaponOwner; // 0x7b0
	UCrowAimComponentBase* AimComponent; // 0x7b8
	UCrowWeaponCrosshairBase* crosshairWidget; // 0x7c0
	UCrowGameInvenComponent* GameInventory; // 0x7c8
	UMaterialParameterCollectionInstance* MPCWeaponFOVInstance; // 0x7d0
	ACrowProjectileBase* ProjectileClass; // 0x7d8
	TArray<UCrowWeaponStateBase*> WeaponStateArray; // 0x7e0
	UCrowWeaponStateBase* WeaponStateCurrent; // 0x7f0
	UCrowWeaponStateReload* WeaponStateReload; // 0x7f8
	UCrowWeaponSubStateBase* WeaponSubStateFire; // 0x800
	UCrowWeaponSubStateAim* WeaponSubStateAim; // 0x808
	bool bIsFirstPerson; // 0x810
	ECrowWeaponState WeaponState; // 0x811
	bool bIsAI; // 0x812
	ECrowItemSpawnType SpawnType; // 0x813
	float DefaultFOV; // 0x814
	bool bIsAimming; // 0x818
	FCrowWeaponTableRow WeaponTable; // 0x820
	FCrowAmmoTableRow AmmoTable; // 0x1a40
	FCrowWeaponAniStateInfo WeaponAniStateInfo; // 0x1c6a
	FCrowCharacterAnimWeapon AnimWeaponFirst; // 0x1c70
	FCrowCharacterAnimWeapon AnimWeaponThird; // 0x1cb0
	FCrowWeaponPartsOptions PartsOptions; // 0x1cf0
	bool UseDefaultSettings; // 0x1d78
	uint32_t WeaponIndex; // 0x1d7c
	uint32_t PartsBarrel; // 0x1d80
	uint32_t PartsMagazine; // 0x1d84
	uint32_t PartsMuzzle; // 0x1d88
	uint32_t PartsPistolGrip; // 0x1d8c
	uint32_t PartsPrimarySight; // 0x1d90
	uint32_t PartsSecondarySight; // 0x1d94
	uint32_t PartsSideBarrel; // 0x1d98
	uint32_t PartsStock; // 0x1d9c
	uint32_t PartsUnderBarrel; // 0x1da0
	USkeletalMesh* BackupNoOptimizationWeaponMesh; // 0x1da8
	UMaterialInterface* BackupNoOptimizationWeaponMaterial; // 0x1db0
	bool bSkipOptimizationMeshTick; // 0x1db8
	TMap<ECrowWeaponPartsType, FCrowOptimizationPartsInfo> OptimizationMeshList; // 0x1dc0
};

struct UPolyEditCutProperties {
	EPolyEditCutPlaneOrientation Orientation; // 0x60
	bool bSnapToVertices; // 0x64
};

struct UMovieSceneMaterialParameterCollectionTrack {
	UMaterialParameterCollection* MPC; // 0x90
};

struct UMaterialExpressionDDY {
	FExpressionInput Value; // 0x40
};

struct UCrowInGameLoadoutPopupWidget {
	UCrowLobbyLoadoutListWidget* WB_Lobby_LoadoutList; // 0x348
	UCrowLobbyLoadoutWidget* WB_Lobby_Loadout; // 0x350
	UCrowButton* WB_BT_EscBack; // 0x358
	UCrowInventoryInputEventHandler* SelectDragWidget; // 0x360
	UWidgetAnimation* AniShow; // 0x368
};

struct UBakedOcclusionMapToolProperties {
	int32_t OcclusionRays; // 0x60
	float MaxDistance; // 0x64
	bool bGaussianBlur; // 0x68
	float BlurRadius; // 0x6c
	float BiasAngle; // 0x70
};

struct ACrowWeaponLockonLauncher {
	AActor* LockOnActor; // 0x1ec0
	AActor* TargetingActor; // 0x1ec8
	ACrowImpedimentsActor* CurrImpedimentsActor; // 0x1ed0
	TArray<AActor*> ArrayActorInLockonArea; // 0x1ed8
	UCrowScopeLockOnWidget* LockonWidget; // 0x1ee8
	float LockOnEndTime; // 0x1ef0
	bool IsVehicleMode; // 0x1ef4
	float LockOnTime; // 0x1ef8
	float LockOnMinDistance; // 0x1efc
	float LockOnMaxDistance; // 0x1f00
	FVector2D LockOnAreaSize; // 0x1f04
	UAkAudioEvent* LockOnStartEvent; // 0x1f10
	UAkAudioEvent* LockOnCompleteEvent; // 0x1f18
};

struct UCrowCarAnimInstance {
	float WheelMaxAngleToSteeringMaxAngle; // 0x2c8
	UCrowVehicleEventDispatcher* EventDispatcher; // 0x2d0
	UCrowVehicleSightComponent* Sight; // 0x2d8
	TArray<FCrowCarWeaponAnimData> WeaponAnimDatas; // 0x2e0
};

struct UForceFeedbackEffect {
	TArray<FForceFeedbackChannelDetails> ChannelDetails; // 0x28
	float Duration; // 0x38
};

struct UInterpTrackInstFloatParticleParam {
	float ResetFloat; // 0x28
};

struct UExponentialHeightFogComponent {
	float FogDensity; // 0x1f8
	float FogHeightFalloff; // 0x1fc
	FExponentialHeightFogData SecondFogData; // 0x200
	FLinearColor FogInscatteringColor; // 0x20c
	UTextureCube* InscatteringColorCubemap; // 0x220
	float InscatteringColorCubemapAngle; // 0x228
	FLinearColor InscatteringTextureTint; // 0x22c
	float FullyDirectionalInscatteringColorDistance; // 0x23c
	float NonDirectionalInscatteringColorDistance; // 0x240
	float DirectionalInscatteringExponent; // 0x244
	float DirectionalInscatteringStartDistance; // 0x248
	FLinearColor DirectionalInscatteringColor; // 0x24c
	float FogMaxOpacity; // 0x25c
	float StartDistance; // 0x260
	float FogCutoffDistance; // 0x264
	bool bEnableVolumetricFog; // 0x268
	float VolumetricFogScatteringDistribution; // 0x26c
	FColor VolumetricFogAlbedo; // 0x270
	FLinearColor VolumetricFogEmissive; // 0x274
	float VolumetricFogExtinctionScale; // 0x284
	float VolumetricFogDistance; // 0x288
	float VolumetricFogStaticLightingScatteringIntensity; // 0x28c
	bool bOverrideLightColorsWithFogInscatteringColors; // 0x290
};

struct UUVProjectionToolProperties {
	EUVProjectionMethod UVProjectionMethod; // 0x60
	FVector ProjectionPrimitiveScale; // 0x64
	float CylinderProjectToTopOrBottomAngleThreshold; // 0x70
	FVector2D UVScale; // 0x74
	FVector2D UVOffset; // 0x7c
	bool bWorldSpaceUVScale; // 0x84
};

struct UCrowBuildingEditorDefaultLODTableRef {
	TMap<FString, FCrowBuildingLODTableRowInfo> StaticMeshMap; // 0x28
	TMap<FString, FCrowBuildingLODTableRowInfo> PartsActorMap; // 0x78
};

struct UCrowConquestSupply {
	TArray<FCrowSupplySpawnInfo> ArrSupplySpawnedInfo; // 0x218
};

struct UBTTask_CrowOccupyCoverPoint {
	ECrowAIFindCoverPointMode FindMode; // 0xb8
};

struct UInterpGroupInst {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct UWB_CuonExtractor_Indicator_C {
	UWidgetAnimation* Ani_PingTargetLoop; // 0x3c8
	UImage* IMG_Effect; // 0x3d0
	UImage* IMG_Effect_3; // 0x3d8
	UImage* IMG_Effect_Glow; // 0x3e0
	UImage* IMG_Icon; // 0x3e8
	UImage* IMG_IconBg; // 0x3f0
	UImage* IMG_LocateArrow; // 0x3f8
	UImage* IMG_Ping; // 0x400
};

struct UCameraAnim {
	UInterpGroup* CameraInterpGroup; // 0x28
	float AnimLength; // 0x30
	FBox BoundingBox; // 0x34
	char bRelativeToInitialTransform : 1; // 0x50
	char bRelativeToInitialFOV : 1; // 0x50
	float BaseFOV; // 0x54
	FPostProcessSettings BasePostProcessSettings; // 0x60
	float BasePostProcessBlendWeight; // 0x5b0
};

struct UCrowConquestAreaVehicleSpawner {
	TArray<FString> VehicleTextIndexArray; // 0x218
	float CoolTime; // 0x228
	float SpawnHeight; // 0x22c
	float ActiveTime; // 0x230
	float ActiveGaugePercent; // 0x234
	bool IsNeutralityCheck; // 0x238
	int32_t NeutralityCheckTime; // 0x23c
	float NeutralityCharacterRadius; // 0x240
	float NeutralitySpawnerDist; // 0x244
	float NeutralityDotDamage; // 0x248
	FCrowSpecialVehicleCondition SpecialVehicleCondition; // 0x250
	char SpawnerID; // 0x270
	ECrowConquestAreaVehicleSpawnerState State; // 0x271
	char VehicleArrayIndex; // 0x272
	bool Red_SpecialVehicle; // 0x273
	bool Blue_SpecialVehicle; // 0x274
};

struct UDestroySessionCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UMeshAttributePaintToolProperties {
	TArray<FName> Attributes; // 0x60
	int32_t SelectedAttribute; // 0x70
	FString AttributeName; // 0x78
};

struct UCrowWorldDestructionCache {
	TMap<uint32_t, FCrowWorldDestructionCacheItem> DestructionActors; // 0xb0
	TMap<uint32_t, FCrowWorldDestructionCacheItem> ClientOnlyDestructionActors; // 0x100
};

struct UCrowWeaponLevelJumpPopupWidget {
	UTextBlock* TB_maximumlevel; // 0x348
	UTextBlock* TB_Mylevel; // 0x350
	UTextBlock* TB_TotalMoney; // 0x358
	UImage* IMG_GoldIcon; // 0x360
	UScaleBox* SCB_US; // 0x368
	USlider* SL_Value; // 0x370
	UCrowButton* BT_Minus; // 0x378
	UCrowButton* BT_Plus; // 0x380
	UCrowButton* BT_Max; // 0x388
	UCrowButton* BT_Buy; // 0x390
	UCrowButton* BT_Cancel; // 0x398
	FCrowWeaponData CurrWeaponData; // 0x3a0
	int32_t StartLevel; // 0x508
	float CurrentValue; // 0x50c
	float MinValue; // 0x510
	float MaxValue; // 0x514
	int32_t UseRCPPointValue; // 0x518
};

struct UMaterialExpressionSceneDepthWithoutWater {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FVector2D ConstInput; // 0x58
	float FallbackDepth; // 0x60
};

struct UParticleModuleLocationEmitter {
	FName EmitterName; // 0x30
	ELocationEmitterSelectionMethod SelectionMethod; // 0x38
	char InheritSourceVelocity : 1; // 0x3c
	float InheritSourceVelocityScale; // 0x40
	char bInheritSourceRotation : 1; // 0x44
	float InheritSourceRotationScale; // 0x48
};

struct UMaterialExpressionVolumetricAdvancedMaterialOutput {
	FExpressionInput PhaseG; // 0x40
	FExpressionInput PhaseG2; // 0x54
	FExpressionInput PhaseBlend; // 0x68
	FExpressionInput MultiScatteringContribution; // 0x7c
	FExpressionInput MultiScatteringOcclusion; // 0x90
	FExpressionInput MultiScatteringEccentricity; // 0xa4
	FExpressionInput ConservativeDensity; // 0xb8
	float ConstPhaseG; // 0xcc
	float ConstPhaseG2; // 0xd0
	float ConstPhaseBlend; // 0xd4
	bool PerSamplePhaseEvaluation; // 0xd8
	uint32_t MultiScatteringApproximationOctaveCount; // 0xdc
	float ConstMultiScatteringContribution; // 0xe0
	float ConstMultiScatteringOcclusion; // 0xe4
	float ConstMultiScatteringEccentricity; // 0xe8
	bool bGroundContribution; // 0xec
	bool bGrayScaleMaterial; // 0xed
	bool bRayMarchVolumeShadow; // 0xee
};

struct UCrowCustomizeCharacterDescWidget {
	UCrowLobbyOutfitSlotListWidget* WB_Lobby_OutfitSlotList; // 0x348
	UCrowCustomizeCategorySmallWidget* WB_CustomizeCategoryOutfit; // 0x350
	UCrowCustomOutfitItemListWidget* WB_CustomizeOutfitItemlist; // 0x358
	UCrowCategoryAppearanceWidget* WB_CustomizeCategoryAppearance; // 0x360
	UCrowCustomAppearanceListWidget* WB_CustomizeAppearanceItemlist; // 0x368
	UCrowShoppingBagWidget* WB_Shop_Popup_ExclusivePurchase_Quick; // 0x370
	UCrowLobbySlotPurchasePopupWidget* WB_LobbySlotPurchasePopup; // 0x378
	UCrowButton* WB_BT_Change; // 0x380
	UCrowButton* WB_BT_Back; // 0x388
	UCrowButton* WB_BT_Home; // 0x390
	UCrowButton* WB_BT_RESET; // 0x398
	UCrowButton* BT_Buy; // 0x3a0
	UCrowButton* BT_AddShoppingBag; // 0x3a8
	UCrowTabGenderWidget* WB_TabGender; // 0x3b0
	UCrowTabOutfitWidget* WB_TabMenuOutfit; // 0x3b8
	UCrowTabOutfitWidget* WB_TabMenu_AppearanceCategory; // 0x3c0
	UVerticalBox* VB_TattooSlotList; // 0x3c8
	UHorizontalBox* HB_CustomizeOutfit_Shop_Button; // 0x3d0
	UHorizontalBox* HB_Tutorial_Customize; // 0x3d8
	UImage* IMG_New; // 0x3e0
	UCrowButton* BtCustomizeTattooFace; // 0x3e8
	UImage* ImgTattooFaceSelect; // 0x3f0
	UImage* ImgSelectedTattooFace; // 0x3f8
	UTextBlock* TbTattooFace; // 0x400
	UCrowButton* BtCustomizeTattooArm; // 0x408
	UImage* ImgTattooArmSelect; // 0x410
	UImage* ImgTattooArmHover; // 0x418
	UImage* ImgSelectedTattooArm; // 0x420
	UImage* ImgHoveredTattooArm; // 0x428
	UTextBlock* TbTattooArm; // 0x430
	FLinearColor NormalTattooTextColor; // 0x438
	FLinearColor HoverTattooTextColor; // 0x448
	FLinearColor SelectTattooTextColor; // 0x458
	ECrowTattooType CurrentTatooType; // 0x468
	UCrowCustomizeOutfitSlotWidget* CurrentOutfitSlot; // 0x470
	ACrowSceneLobby* SceneLobby; // 0x478
};

struct UCrowFPSWidget {
	UCanvasPanel* CP_FPS; // 0x348
	UCanvasPanel* CP_Ping; // 0x350
	UTextBlock* FPSText; // 0x358
	UTextBlock* PingText; // 0x360
};

struct UCrowInvenWeaponListItemWidget {
	UWidgetSwitcher* WS_SlotType; // 0x1a48
	UTextBlock* TB_MaxAmmo; // 0x1a50
	UTextBlock* TB_WeaponName; // 0x1a58
	UCanvasPanel* CP_Primary_weapon_Slot; // 0x1a60
};

struct UCrowIngameRecordManager {
	bool bIsShowLog; // 0x28
	FCrowIngameReplicatedRecord ReplicatedRecord; // 0x2c
	ECrowWinLose WinLose; // 0x38
	FCrowIngameBattleRecord BattleRecord; // 0x40
	FCrowIngameVehicleRecord VehicleRecord; // 0x98
	FCrowIngameTimeRecord TimeRecord; // 0xf0
	TMap<uint32_t, FCrowIngameWeaponCharacterRecord> CharacterWeaponRecords; // 0x160
	TMap<uint32_t, FCrowIngameWeaponVehicleRecord> VehicleWeaponRecords; // 0x1b0
	TMap<ECrowConquestSkill, FCrowIngameSkillRecord> SkillRecords; // 0x200
	TMap<ECrowMedalType, FCrowIngameMedalRecord> MedalRecords; // 0x250
	FString UserNickName; // 0x2a0
	ACrowPlayerStateBase* OwnerPlayerState; // 0x2b0
	TArray<FString> Logs; // 0x2b8
};

struct UMatineeCameraShake {
	float OscillationDuration; // 0x98
	float OscillationBlendInTime; // 0x9c
	float OscillationBlendOutTime; // 0xa0
	FROscillator RotOscillation; // 0xa4
	FVOscillator LocOscillation; // 0xc8
	FFOscillator FOVOscillation; // 0xec
	float AnimPlayRate; // 0xf8
	float AnimScale; // 0xfc
	float AnimBlendInTime; // 0x100
	float AnimBlendOutTime; // 0x104
	float RandomAnimSegmentDuration; // 0x108
	UCameraAnim* Anim; // 0x110
	char bRandomAnimSegment : 1; // 0x118
	float OscillatorTimeRemaining; // 0x11c
	UCameraAnimInst* AnimInst; // 0x120
};

struct UBackgroundBlur {
	FMargin Padding; // 0x120
	EHorizontalAlignment HorizontalAlignment; // 0x130
	EVerticalAlignment VerticalAlignment; // 0x131
	bool bApplyAlphaToBlur; // 0x132
	float BlurStrength; // 0x134
	bool bOverrideAutoRadiusCalculation; // 0x138
	int32_t BlurRadius; // 0x13c
	FSlateBrush LowQualityFallbackBrush; // 0x140
};

struct UCrowCheatManager {
	FCrowCountingLog ActorCountingLog; // 0x78
	FCrowCountingLog ComponentCountingLog; // 0xc8
	FCrowCountingLog OwnerActorCountingLog; // 0x118
};

struct ACrowWorldIconActor {
	UBoxComponent* Root; // 0x220
	USceneComponent* IconLocation; // 0x228
	AActor* TargetActor; // 0x230
};

struct UCrowWidgetBase {
	UCrowWidgetBase* EventHandler; // 0x268
	UCrowWidgetBase* EventHandlerWidgetType; // 0x270
	FString HandlerWidgetName; // 0x278
	ECrowEvent Event; // 0x288
	UAkAudioEvent* VisibleSound; // 0x290
	UAkAudioEvent* InvisibleSound; // 0x298
	TMap<FName, UWidgetAnimation*> AnimationsMap; // 0x2a0
	TArray<UCrowWidgetTweenBase*> TweenerArray; // 0x300
	UCrowWidgetManager* WidgetManager; // 0x310
	UCrowWidgetBase* MasterWidget; // 0x318
};

struct UInAppPurchaseQueryCallbackProxy2 {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UScrollBoxSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UWB_LockOnIndicator_C {
	UWidgetAnimation* Ani_LockOnComplete; // 0x410
	UWidgetAnimation* Ani_LockOnTargeting; // 0x418
	UImage* IMG_NonTarget; // 0x420
	UImage* IMG_NonTarget_2; // 0x428
	UImage* IMG_NonTarget_3; // 0x430
};

struct UAkEventCallbackInfo {
	int32_t PlayingID; // 0x30
	int32_t EventId; // 0x34
};

struct UMaterialExpressionArctangent {
	FExpressionInput Input; // 0x40
};

struct UCrowZeroingInfo {
	TArray<FZeroingInfo> ZeroingInfoArray; // 0x38
};

struct ULiveLinkSourceSettings {
	ELiveLinkSourceMode Mode; // 0x28
	FLiveLinkSourceBufferManagementSettings BufferSettings; // 0x30
	FString ConnectionString; // 0x88
	ULiveLinkSourceFactory* Factory; // 0x98
};

struct UComboBoxString {
	TArray<FString> DefaultOptions; // 0x108
	FString SelectedOption; // 0x118
	FComboBoxStyle WidgetStyle; // 0x128
	FTableRowStyle ItemStyle; // 0x518
	FMargin ContentPadding; // 0xce0
	float MaxListHeight; // 0xcf0
	bool HasDownArrow; // 0xcf4
	bool EnableGamepadNavigationMode; // 0xcf5
	FSlateFontInfo Font; // 0xcf8
	FSlateColor ForegroundColor; // 0xd50
	bool bIsFocusable; // 0xd78
	FDelegate OnGenerateWidgetEvent; // 0xd7c
	FMulticastInlineDelegate OnSelectionChanged; // 0xd90
	FMulticastInlineDelegate OnOpening; // 0xda0
};

struct UMovieSceneSkeletalAnimationSection {
	FMovieSceneSkeletalAnimationParams Params; // 0xe8
	UAnimSequence* AnimSequence; // 0x1c0
	UAnimSequenceBase* Animation; // 0x1c8
	float StartOffset; // 0x1d0
	float EndOffset; // 0x1d4
	float PlayRate; // 0x1d8
	char bReverse : 1; // 0x1dc
	FName SlotName; // 0x1e0
	FVector StartLocationOffset; // 0x1e8
	FRotator StartRotationOffset; // 0x1f4
	bool bMatchWithPrevious; // 0x200
	FName MatchedBoneName; // 0x204
	FVector MatchedLocationOffset; // 0x20c
	FRotator MatchedRotationOffset; // 0x218
	bool bMatchTranslation; // 0x224
	bool bMatchIncludeZHeight; // 0x225
	bool bMatchRotationYaw; // 0x226
	bool bMatchRotationPitch; // 0x227
	bool bMatchRotationRoll; // 0x228
};

struct ABP_CrowProjectileHeliFlare_C {
	UStaticMeshComponent* Sphere; // 0x1940
	UParticleSystemComponent* ParticleSystem; // 0x1948
};

struct AMaterialInstanceActor {
	TArray<AActor*> TargetActors; // 0x220
};

struct UScaleKelvinletBrushOpProps {
	float Strength; // 0x70
	float Falloff; // 0x74
};

struct UCrowCharacterAnimNoitfy_TurnInPlace {
	UCurveFloat* RotationCurveAsset; // 0x30
};

struct UCrowCustomPasswordPopupWidget {
	UTextBlock* TB_SessionName_Value; // 0x348
	UEditableTextBox* ETB_Password; // 0x350
	UCrowButton* BT_Ok; // 0x358
	UCrowButton* BT_Cancel; // 0x360
	FCrowCustomDisplayRoomInfo SelectedRoomInfo; // 0x368
};

struct UCrowPersonalResultWidget {
	UAkAudioEvent* AudioEvent_ExpCounting; // 0x368
	UAkAudioEvent* AudioEvent_ExpCountingEnd; // 0x370
	UAkAudioEvent* AudioEvent_ExpProgress; // 0x378
	UAkAudioEvent* AudioEvent_ExpProgressEnd; // 0x380
	float ExpEventPlayTime; // 0x388
	float WeaponPartsEventDelayTime; // 0x38c
	float WeaponPartsEventPlayTime; // 0x390
	ACrowPlayerStateBase* PlayerState; // 0x398
	ACrowGameStateConquest* CrowGameStateConquest; // 0x3a0
	TArray<FCrowPersonalResultItem> ResultItemArray; // 0x3a8
	UWidgetAnimation* AniResult; // 0x3b8
	UWidgetAnimation* AniResultLevelUP; // 0x3c0
	UWidgetAnimation* AniResultWeaponLevelUP; // 0x3c8
	UWidgetAnimation* AniResultRank; // 0x3d0
	UWidgetAnimation* AniResultRankUp; // 0x3d8
	UCrowButton* WB_BT_Exit; // 0x3e0
	UCrowButton* BT_Arrow_L; // 0x3e8
	UCrowButton* BT_Arrow_R; // 0x3f0
	UImage* IMG_Icon_Rank; // 0x3f8
	UImage* IMG_Icon_Rank_levelup; // 0x400
	UImage* IMG_Icon_Rank_levelup_Effect; // 0x408
	UTextBlock* TB_LevelExp; // 0x410
	UTextBlock* TB_TotalEXP_Value; // 0x418
	UCrowProgressBar* PB_ExpProgressbar; // 0x420
	UTextBlock* TB_CurrentLV; // 0x428
	UTextBlock* TB_NextLV; // 0x430
	UTextBlock* TB_RankExp_Value; // 0x438
	UCrowProgressBar* PB_ExpRankProgressbar; // 0x440
	UTextBlock* TB_CurrentRank; // 0x448
	UTextBlock* TB_NextRank; // 0x450
	UTextBlock* TB_ClassName; // 0x458
	UTextBlock* TB_ClassRankName; // 0x460
	UTextBlock* TB_NextClassName; // 0x468
	UTextBlock* TB_NextClassRankName; // 0x470
	UCrowResultRewardSlotWidget* WB_Result_RewardSlot_Kill; // 0x478
	UCrowResultRewardSlotWidget* WB_Result_RewardSlot_Battle; // 0x480
	UCrowResultRewardSlotWidget* WB_Result_RewardSlot_Medal; // 0x488
	UCrowResultRewardSlotWidget* WB_Result_RewardSlot_Mission; // 0x490
	UCrowResultRewardSlotWidget* WB_Result_RewardSlot_Conquest; // 0x498
	UCrowResultRewardSlotWidget* WB_Result_RewardSlot_Squad; // 0x4a0
	UVerticalBox* VB_WeaponLevelUp; // 0x4a8
	UTextBlock* TB_WeaponEventTitle; // 0x4b0
	UTextBlock* TB_WeaponLevel; // 0x4b8
	UTextBlock* TB_WeaponName; // 0x4c0
	UTextBlock* TB_WeaponType; // 0x4c8
	UImage* IMG_WeaponIcon; // 0x4d0
	UCrowResultWeaponPartsSlotWidget* WB_Result_WeaponPartsSlot_1; // 0x4d8
	UCrowResultWeaponPartsSlotWidget* WB_Result_WeaponPartsSlot_2; // 0x4e0
	UCrowResultWeaponPartsSlotWidget* WB_Result_WeaponPartsSlot_3; // 0x4e8
	UCrowResultWeaponPartsSlotWidget* WB_Result_WeaponPartsSlot_4; // 0x4f0
	ECrowResultWidgetState ResultWidgetState; // 0x4f8
	ECrowResultEventState ResultEventState; // 0x4fc
	float ExpCountingTime; // 0x500
	bool StartEventExpProgressbar; // 0x504
	bool StartEventRankExpProgressbar; // 0x505
	float NormalizeTimeProgressbar; // 0x508
	uint32_t PreSaveLevel; // 0x50c
	bool bIsLevelUp; // 0x510
	float AniEllipseTime; // 0x514
	bool bIsEndAllEvent; // 0x518
	TArray<UCrowResultRewardSlotWidget*> RewardSlotArray; // 0x520
	TArray<UCrowResultWeaponPartsSlotWidget*> WeaponPartsSlotArray; // 0x530
	TArray<FCrowPersonalResultWeaponEvent> ResultWeaponEventArray; // 0x540
	FTimerHandle ExpEventTimerHandle; // 0x550
	FTimerHandle DelayTimerHandle; // 0x558
	FTimerHandle WeaponPartsEventTimerHandle; // 0x560
};

struct UCrowSystemMessageBoxWidget {
	URichTextBlock* RTB_Message; // 0x348
	UCanvasPanel* CP_Contents; // 0x350
	FTimerHandle TimerHandle; // 0x358
	float HideTime; // 0x360
};

struct UCrowBoatsSimFloatingVolume {
	int32_t VolumeIndex; // 0x1f8
	USkeletalMeshComponent* BodyMesh; // 0x200
	FCrowBoatsFloatingVolumeSetup VolumeSetup; // 0x208
	UCrowBoatsConfigBody* BodyConfig; // 0x240
	UCrowVehicleOceanTracker* OceanTracker; // 0x248
	FTransform InitialTransform; // 0x250
	float SubstepDepthRatio; // 0x280
	FVector SubstepBuoyancy; // 0x284
	FVector SubstepLinearDamping; // 0x290
	FVector SubstepAngularDamping; // 0x29c
	float DebugBuoyanceDepth; // 0x2a8
};

struct ACrowConquestMeteorGasActor {
	USceneComponent* SceneComponent; // 0x220
	UStaticMeshComponent* StaticMeshComponent; // 0x228
	float FadeOutTime; // 0x230
	FTimerHandle TimerHandler; // 0x238
	UMaterialInstanceDynamic* Mid; // 0x240
	float ElapsedTime; // 0x248
};

struct UCrowVehicleDustType {
	TMap<EPhysicalSurface, FVehicleDustInfo> DustTypes; // 0x30
	FVehicleDustInfo DefaultDustInfo; // 0x80
};

struct UCrowWorldMapGridSlot {
	bool bIsHorizontal; // 0x348
	float GridSize; // 0x34c
	float LineSizeH; // 0x350
	float LineSizeV; // 0x354
	float LineLength; // 0x358
	UWidgetSwitcher* WS; // 0x360
	UImage* H_Spacer; // 0x368
	UImage* H_Line; // 0x370
	UImage* V_Spacer; // 0x378
	UImage* V_Line; // 0x380
};

struct USelfUnionMeshesTool {
	USelfUnionMeshesToolProperties* Properties; // 0xf0
	ULineSetComponent* DrawnLineSet; // 0xf8
};

struct ACrowVehicleRandomSpawner {
	UBoxComponent* BoxComponent; // 0x220
	TArray<FCrowVehicleSpawnWeight> VehicleArray; // 0x228
	ACrowVehicleSpawnerGroup* OwnerGroup; // 0x238
	FString GroupName; // 0x240
};

struct UStreamableRenderAsset {
	double ForceMipLevelsToBeResidentTimestamp; // 0x40
	int32_t NumCinematicMipLevels; // 0x48
	int32_t StreamingIndex; // 0x4c
	int32_t CachedCombinedLODBias; // 0x50
	char NeverStream : 1; // 0x54
	char bGlobalForceMipLevelsToBeResident : 1; // 0x54
	char bHasStreamingUpdatePending : 1; // 0x54
	char bForceMiplevelsToBeResident : 1; // 0x54
	char bIgnoreStreamingMipBias : 1; // 0x54
	char bUseCinematicMipLevels : 1; // 0x54
};

struct USCS_Node {
	UObject* ComponentClass; // 0x28
	UActorComponent* ComponentTemplate; // 0x30
	FBlueprintCookedComponentInstancingData CookedComponentInstancingData; // 0x38
	FName AttachToName; // 0x80
	FName ParentComponentOrVariableName; // 0x88
	FName ParentComponentOwnerClassName; // 0x90
	bool bIsParentComponentNative; // 0x98
	TArray<USCS_Node*> ChildNodes; // 0xa0
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0xb0
	FGuid VariableGuid; // 0xc0
	FName InternalVariableName; // 0xd0
};

struct UCrowMissionWidget {
	bool IsSetMissionList; // 0x348
	UCrowMissionCategoryWidget* MissionCategoryWidget; // 0x350
	UCrowMissionTabWidget* WB_TabMenu_Mission; // 0x358
	UVerticalBox* VB_MissionDatas; // 0x360
	UCrowMissionRewardInfoWidget* WB_MissionRewardInfo; // 0x368
	UCrowMissionTimerWidget* WB_MissionResetTime; // 0x370
	TArray<FCrowMissionInfo> ServerMissionInfoArray; // 0x378
	TMap<char, UCrowMissionCategoryWidget*> CategoryWidgetMap; // 0x388
	ECrowMissionType CurrentMissionType; // 0x3d8
};

struct UCrowSprayManager {
	float SprayDistance; // 0x28
	float CoolTime; // 0x2c
	UAkAudioEvent* SpraySound; // 0x30
	int32_t SprayMaxCount; // 0x38
	TMap<int32_t, int32_t> SpraySlotMap; // 0x40
	TArray<ACrowSprayActor*> SpawndSprayArray; // 0x98
};

struct UCrowStatusPlayerInfoSquad {
	UCanvasPanel* CP_Zombie; // 0x400
	UCrowWidgetBase* WB_HeadArmorBar; // 0x408
	UCrowWidgetBase* WB_BodyArmorBar; // 0x410
	UWidgetSwitcher* WS_HPStatus; // 0x418
	UProgressBar* PB_ZombieHPBar; // 0x420
	UProgressBar* PB_ZetaHPBar; // 0x428
	float PrevPercentage; // 0x430
};

struct USlateWidgetStyleAsset {
	USlateWidgetStyleContainerBase* CustomStyle; // 0x28
};

struct UExporter {
	UObject* SupportedClass; // 0x28
	UObject* ExportRootScope; // 0x30
	TArray<FString> FormatExtension; // 0x38
	TArray<FString> FormatDescription; // 0x48
	int32_t PreferredFormatIndex; // 0x58
	int32_t TextIndent; // 0x5c
	char bText : 1; // 0x60
	char bSelectedOnly : 1; // 0x60
	char bForceFileOperations : 1; // 0x60
	UAssetExportTask* ExportTask; // 0x68
};

struct UInterpTrackInstDirector {
	AActor* OldViewTarget; // 0x28
};

struct UTMG_Basic {
	FBasicMeshProperties Properties; // 0x28
};

struct UInterpTrackLinearColorProp {
	FName PropertyName; // 0x90
};

struct UMovieScene3DConstraintSection {
	FGuid ConstraintId; // 0xe8
	FMovieSceneObjectBindingID ConstraintBindingID; // 0xf8
};

struct UCrowListItemWidget {
	UCrowButton* BT_ItemSlot; // 0x348
	UImage* IMG_ItemIcon; // 0x350
	UImage* IMG_Selected; // 0x358
	UImage* IMG_Equiped; // 0x360
	UWidgetSwitcher* WS_Grade; // 0x368
	UImage* IMG_NewIcon; // 0x370
	FCrowItemTableBaseRow TableBase; // 0x378
};

struct UCrowSpectatorSpringArmComponent {
	float TargetArmLength; // 0x1f8
	FVector SocketOffset; // 0x1fc
	FVector TargetOffset; // 0x208
	float ProbeSize; // 0x214
	ECollisionChannel ProbeChannel; // 0x218
	FName ID; // 0x21c
	UCameraComponent* ChildCamera; // 0x228
	TArray<AActor*> IgnoreActorArray; // 0x230
};

struct ACrowVehicleSpawnerGroup {
	uint32_t DefaultGroupMaxSpawnCount; // 0x220
	float DefaultGroupSpawnDelay; // 0x224
	uint32_t DefaultGroupSpawnLimit; // 0x228
	TMap<FString, FCrowVehicleGroup> VehicleGroup; // 0x230
};

struct UWB_Scope_RocketLauncher_C {
	UWidgetAnimation* Ani_Aim_3; // 0x378
	UWidgetAnimation* Ani_Shot3; // 0x380
	UWidgetAnimation* Ani_Shot4; // 0x388
	UWidgetAnimation* Ani_Shot; // 0x390
	UWidgetAnimation* Ani_Shot1; // 0x398
	UWidgetAnimation* Ani_Aim; // 0x3a0
	UImage* Image_98; // 0x3a8
	UImage* IMG_CrossHair_2; // 0x3b0
	UImage* IMG_CrossHair_3; // 0x3b8
};

struct UBehaviorTree {
	UBTCompositeNode* RootNode; // 0x30
	UBlackboardData* BlackboardAsset; // 0x38
	TArray<UBTDecorator*> RootDecorators; // 0x40
	TArray<FBTDecoratorLogic> RootDecoratorOps; // 0x50
};

struct UCrowLoadoutWeaponInfoWidget {
	UWidgetSwitcher* WS_SlotType; // 0x1a48
	UTextBlock* TB_WeaponName; // 0x1a50
	UTextBlock* TB_WeaponSlotType; // 0x1a58
	UCanvasPanel* CP_Primary_weapon_Slot; // 0x1a60
	UImage* IMG_Frame; // 0x1a68
	UImage* IMG_WeaponBack; // 0x1a70
	UImage* IMG_Back; // 0x1a78
	UImage* IMG_HotKey_2; // 0x1a80
	UImage* IMG_Setting; // 0x1a88
	UCrowButton* BT_Loadout_Button; // 0x1a90
	UHorizontalBox* HB_Weapon_LV; // 0x1a98
	UTextBlock* TB_WeaponLV; // 0x1aa0
	UCrowProgressBar* PB_WeaponLV; // 0x1aa8
	UScaleBox* SB_WeaponImg; // 0x1ab0
	UScaleBox* SB_WeaponCombine; // 0x1ab8
	UCrowWeaponCombinedIconWidget* WB_FireArm_Combine; // 0x1ac0
	UCrowDragDropWidgetBase* WB_CrowDragDropPanel; // 0x1ac8
	FLinearColor TextDefaultColor; // 0x1ad0
	FLinearColor TextSelectColor; // 0x1ae0
	FText DefaultSlotTypeName; // 0x1af0
	UPaperSprite* HotKeySprite; // 0x1b08
	UImage* IMGNew; // 0x1b10
};

struct UCrowChatTyping {
	UEditableText* TB_InputTyping; // 0x348
	UTextBlock* TB_TypingType; // 0x350
	UWidgetSwitcher* WS_LanguageSwap; // 0x358
	TArray<FCrowChatTypeText> ChatTypeTexts; // 0x360
	ECrowChatType CurrentChatType; // 0x370
	TArray<ECrowChatType> EnableChatTypeArray; // 0x378
	FCrowChatData TargetWhisperData; // 0x388
};

struct ACrowFxActivator {
	UParticleSystem* ParticleFX; // 0x220
	bool StartPlay; // 0x228
	bool UseLoadout; // 0x229
	TArray<UAkAudioEvent*> LobbyAudioEvents; // 0x230
	TArray<UAkAudioEvent*> LobbyAudioStopEvents; // 0x240
	AActor* AudioTarget; // 0x250
	USphereComponent* SphereComponent; // 0x258
	UParticleSystemComponent* FxParticlesComp; // 0x260
};

struct UPointSetComponent {
	UMaterialInterface* PointMaterial; // 0x468
	FBoxSphereBounds Bounds; // 0x470
	bool bBoundsDirty; // 0x48c
};

struct UGizmoPlaneScaleParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float ScaleMultiplier; // 0xb0
	FVector2D Parameter; // 0xb4
	FGizmoVec2ParameterChange LastChange; // 0xbc
	FVector CurScaleOrigin; // 0xcc
	FVector CurScaleNormal; // 0xd8
	FVector CurScaleAxisX; // 0xe4
	FVector CurScaleAxisY; // 0xf0
	FTransform InitialTransform; // 0x100
};

struct UAkAndroidInitializationSettings {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkAndroidAdvancedInitializationSettings AdvancedSettings; // 0xb8
};

struct UCrowPCM_AnimBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xbf0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_11; // 0xbf8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_31; // 0xc18
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_30; // 0xd20
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_4; // 0xe30
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_11; // 0x1010
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_29; // 0x1030
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_28; // 0x1138
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_27; // 0x1240
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_3; // 0x1350
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_26; // 0x1530
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_25; // 0x1638
	FAnimNode_Root AnimGraphNode_Root_14; // 0x1740
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_368; // 0x1770
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_367; // 0x1798
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_185; // 0x17c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_43; // 0x1888
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_366; // 0x1970
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_365; // 0x1998
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_364; // 0x19c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_363; // 0x19e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_362; // 0x1a10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_361; // 0x1a38
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_198; // 0x1a60
	FAnimNode_StateResult AnimGraphNode_StateResult_184; // 0x1a88
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_197; // 0x1ab8
	FAnimNode_StateResult AnimGraphNode_StateResult_183; // 0x1ae0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_196; // 0x1b10
	FAnimNode_StateResult AnimGraphNode_StateResult_182; // 0x1b38
	FAnimNode_StateMachine AnimGraphNode_StateMachine_40; // 0x1b68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_195; // 0x1c18
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_184; // 0x1c40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_183; // 0x1d08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_42; // 0x1dd0
	FAnimNode_StateResult AnimGraphNode_StateResult_181; // 0x1eb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_360; // 0x1ee8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_359; // 0x1f10
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_320; // 0x1f38
	FAnimNode_StateResult AnimGraphNode_StateResult_180; // 0x1f88
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_319; // 0x1fb8
	FAnimNode_StateResult AnimGraphNode_StateResult_179; // 0x2008
	FAnimNode_StateMachine AnimGraphNode_StateMachine_39; // 0x2038
	FAnimNode_StateResult AnimGraphNode_StateResult_178; // 0x20e8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_38; // 0x2118
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_358; // 0x21c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_357; // 0x21f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_356; // 0x2218
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_355; // 0x2240
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_354; // 0x2268
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_353; // 0x2290
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_352; // 0x22b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_351; // 0x22e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_350; // 0x2308
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_349; // 0x2330
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_348; // 0x2358
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_347; // 0x2380
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_346; // 0x23a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_345; // 0x23d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_344; // 0x23f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_343; // 0x2420
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_342; // 0x2448
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_341; // 0x2470
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_340; // 0x2498
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_339; // 0x24c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_194; // 0x24e8
	FAnimNode_StateResult AnimGraphNode_StateResult_177; // 0x2510
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_48; // 0x2540
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_41; // 0x25e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_40; // 0x26c8
	FAnimNode_StateResult AnimGraphNode_StateResult_176; // 0x27b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_39; // 0x27e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_38; // 0x28c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_47; // 0x29b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_338; // 0x2a50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_337; // 0x2a78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_336; // 0x2aa0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_335; // 0x2ac8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_334; // 0x2af0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_333; // 0x2b18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_332; // 0x2b40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_331; // 0x2b68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_330; // 0x2b90
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_33; // 0x2bb8
	FAnimNode_StateResult AnimGraphNode_StateResult_175; // 0x2ca8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_32; // 0x2cd8
	FAnimNode_StateResult AnimGraphNode_StateResult_174; // 0x2dc8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_31; // 0x2df8
	FAnimNode_StateResult AnimGraphNode_StateResult_173; // 0x2ee8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_30; // 0x2f18
	FAnimNode_StateResult AnimGraphNode_StateResult_172; // 0x3008
	FAnimNode_StateMachine AnimGraphNode_StateMachine_37; // 0x3038
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_182; // 0x30e8
	FAnimNode_StateResult AnimGraphNode_StateResult_171; // 0x31b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_37; // 0x31e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_46; // 0x32c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_36; // 0x3368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_329; // 0x3450
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_328; // 0x3478
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_327; // 0x34a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_326; // 0x34c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_325; // 0x34f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_324; // 0x3518
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_323; // 0x3540
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_322; // 0x3568
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_321; // 0x3590
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_29; // 0x35b8
	FAnimNode_StateResult AnimGraphNode_StateResult_170; // 0x36a8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_28; // 0x36d8
	FAnimNode_StateResult AnimGraphNode_StateResult_169; // 0x37c8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_27; // 0x37f8
	FAnimNode_StateResult AnimGraphNode_StateResult_168; // 0x38e8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_26; // 0x3918
	FAnimNode_StateResult AnimGraphNode_StateResult_167; // 0x3a08
	FAnimNode_StateMachine AnimGraphNode_StateMachine_36; // 0x3a38
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_181; // 0x3ae8
	FAnimNode_StateResult AnimGraphNode_StateResult_166; // 0x3bb0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_35; // 0x3be0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_45; // 0x3cc8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_34; // 0x3d68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_320; // 0x3e50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_319; // 0x3e78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_318; // 0x3ea0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_317; // 0x3ec8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_316; // 0x3ef0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_315; // 0x3f18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_314; // 0x3f40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_313; // 0x3f68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_312; // 0x3f90
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_25; // 0x3fb8
	FAnimNode_StateResult AnimGraphNode_StateResult_165; // 0x40a8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_24; // 0x40d8
	FAnimNode_StateResult AnimGraphNode_StateResult_164; // 0x41c8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_23; // 0x41f8
	FAnimNode_StateResult AnimGraphNode_StateResult_163; // 0x42e8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_22; // 0x4318
	FAnimNode_StateResult AnimGraphNode_StateResult_162; // 0x4408
	FAnimNode_StateMachine AnimGraphNode_StateMachine_35; // 0x4438
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_180; // 0x44e8
	FAnimNode_StateResult AnimGraphNode_StateResult_161; // 0x45b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_33; // 0x45e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_44; // 0x46c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_32; // 0x4768
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_311; // 0x4850
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_310; // 0x4878
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_309; // 0x48a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_308; // 0x48c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_307; // 0x48f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_306; // 0x4918
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_305; // 0x4940
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_304; // 0x4968
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_303; // 0x4990
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_21; // 0x49b8
	FAnimNode_StateResult AnimGraphNode_StateResult_160; // 0x4aa8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_20; // 0x4ad8
	FAnimNode_StateResult AnimGraphNode_StateResult_159; // 0x4bc8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_19; // 0x4bf8
	FAnimNode_StateResult AnimGraphNode_StateResult_158; // 0x4ce8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_18; // 0x4d18
	FAnimNode_StateResult AnimGraphNode_StateResult_157; // 0x4e08
	FAnimNode_StateMachine AnimGraphNode_StateMachine_34; // 0x4e38
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_179; // 0x4ee8
	FAnimNode_StateResult AnimGraphNode_StateResult_156; // 0x4fb0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_31; // 0x4fe0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_43; // 0x50c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_30; // 0x5168
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_302; // 0x5250
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_301; // 0x5278
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_300; // 0x52a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_299; // 0x52c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_298; // 0x52f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_297; // 0x5318
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_296; // 0x5340
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_295; // 0x5368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_294; // 0x5390
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_17; // 0x53b8
	FAnimNode_StateResult AnimGraphNode_StateResult_155; // 0x54a8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_16; // 0x54d8
	FAnimNode_StateResult AnimGraphNode_StateResult_154; // 0x55c8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_15; // 0x55f8
	FAnimNode_StateResult AnimGraphNode_StateResult_153; // 0x56e8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_14; // 0x5718
	FAnimNode_StateResult AnimGraphNode_StateResult_152; // 0x5808
	FAnimNode_StateMachine AnimGraphNode_StateMachine_33; // 0x5838
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_178; // 0x58e8
	FAnimNode_StateResult AnimGraphNode_StateResult_151; // 0x59b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_29; // 0x59e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_42; // 0x5ac8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_28; // 0x5b68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_293; // 0x5c50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_292; // 0x5c78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_291; // 0x5ca0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_290; // 0x5cc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_289; // 0x5cf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_288; // 0x5d18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_287; // 0x5d40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_286; // 0x5d68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_285; // 0x5d90
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_13; // 0x5db8
	FAnimNode_StateResult AnimGraphNode_StateResult_150; // 0x5ea8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_12; // 0x5ed8
	FAnimNode_StateResult AnimGraphNode_StateResult_149; // 0x5fc8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_11; // 0x5ff8
	FAnimNode_StateResult AnimGraphNode_StateResult_148; // 0x60e8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_10; // 0x6118
	FAnimNode_StateResult AnimGraphNode_StateResult_147; // 0x6208
	FAnimNode_StateMachine AnimGraphNode_StateMachine_32; // 0x6238
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_177; // 0x62e8
	FAnimNode_StateResult AnimGraphNode_StateResult_146; // 0x63b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_27; // 0x63e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_26; // 0x64c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_41; // 0x65b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_284; // 0x6650
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_283; // 0x6678
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_282; // 0x66a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_281; // 0x66c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_280; // 0x66f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_279; // 0x6718
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_278; // 0x6740
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_277; // 0x6768
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_276; // 0x6790
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_9; // 0x67b8
	FAnimNode_StateResult AnimGraphNode_StateResult_145; // 0x68a8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_8; // 0x68d8
	FAnimNode_StateResult AnimGraphNode_StateResult_144; // 0x69c8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_7; // 0x69f8
	FAnimNode_StateResult AnimGraphNode_StateResult_143; // 0x6ae8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_6; // 0x6b18
	FAnimNode_StateResult AnimGraphNode_StateResult_142; // 0x6c08
	FAnimNode_StateMachine AnimGraphNode_StateMachine_31; // 0x6c38
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_176; // 0x6ce8
	FAnimNode_StateResult AnimGraphNode_StateResult_141; // 0x6db0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_275; // 0x6de0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_193; // 0x6e08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_25; // 0x6e30
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_175; // 0x6f18
	FAnimNode_StateResult AnimGraphNode_StateResult_140; // 0x6fe0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_30; // 0x7010
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_64; // 0x70c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_274; // 0x7218
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_273; // 0x7240
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_272; // 0x7268
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_271; // 0x7290
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_270; // 0x72b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_269; // 0x72e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_268; // 0x7308
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_267; // 0x7330
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_5; // 0x7358
	FAnimNode_StateResult AnimGraphNode_StateResult_139; // 0x7448
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_4; // 0x7478
	FAnimNode_StateResult AnimGraphNode_StateResult_138; // 0x7568
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_3; // 0x7598
	FAnimNode_StateResult AnimGraphNode_StateResult_137; // 0x7688
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator_2; // 0x76b8
	FAnimNode_StateResult AnimGraphNode_StateResult_136; // 0x77a8
	FAnimNode_BlendSpaceEvaluator AnimGraphNode_BlendSpaceEvaluator; // 0x77d8
	FAnimNode_StateResult AnimGraphNode_StateResult_135; // 0x78c8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_29; // 0x78f8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_63; // 0x79a8
	FAnimNode_Root AnimGraphNode_Root_13; // 0x7b00
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_31; // 0x7b30
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_30; // 0x7c48
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_29; // 0x7d60
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_28; // 0x7e78
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_27; // 0x7f90
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_26; // 0x80a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_266; // 0x81c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_265; // 0x81e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_264; // 0x8210
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_263; // 0x8238
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_262; // 0x8260
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_261; // 0x8288
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_260; // 0x82b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_259; // 0x82d8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_71; // 0x8300
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_52; // 0x8358
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_192; // 0x83a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_191; // 0x83d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_190; // 0x83f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_189; // 0x8420
	FAnimNode_StateResult AnimGraphNode_StateResult_134; // 0x8448
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_70; // 0x8478
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_51; // 0x84d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_188; // 0x8520
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_187; // 0x8548
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_186; // 0x8570
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_185; // 0x8598
	FAnimNode_StateResult AnimGraphNode_StateResult_133; // 0x85c0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_69; // 0x85f0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_50; // 0x8648
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_184; // 0x8698
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_183; // 0x86c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_182; // 0x86e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_181; // 0x8710
	FAnimNode_StateResult AnimGraphNode_StateResult_132; // 0x8738
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_68; // 0x8768
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_49; // 0x87c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_180; // 0x8810
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_179; // 0x8838
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_178; // 0x8860
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_177; // 0x8888
	FAnimNode_StateResult AnimGraphNode_StateResult_131; // 0x88b0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_67; // 0x88e0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_176; // 0x8938
	FAnimNode_StateResult AnimGraphNode_StateResult_130; // 0x8960
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_66; // 0x8990
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_175; // 0x89e8
	FAnimNode_StateResult AnimGraphNode_StateResult_129; // 0x8a10
	FAnimNode_StateMachine AnimGraphNode_StateMachine_28; // 0x8a40
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_62; // 0x8af0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_61; // 0x8c48
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_60; // 0x8da0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_59; // 0x8ef8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_58; // 0x9050
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_57; // 0x91a8
	FAnimNode_Root AnimGraphNode_Root_12; // 0x9300
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_25; // 0x9330
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_24; // 0x9448
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_23; // 0x9560
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_22; // 0x9678
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_21; // 0x9790
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_20; // 0x98a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_258; // 0x99c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_257; // 0x99e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_256; // 0x9a10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_255; // 0x9a38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_254; // 0x9a60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_253; // 0x9a88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_252; // 0x9ab0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_251; // 0x9ad8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_65; // 0x9b00
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_48; // 0x9b58
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_174; // 0x9ba8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_173; // 0x9bd0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_172; // 0x9bf8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_171; // 0x9c20
	FAnimNode_StateResult AnimGraphNode_StateResult_128; // 0x9c48
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_64; // 0x9c78
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_47; // 0x9cd0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_170; // 0x9d20
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_169; // 0x9d48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_168; // 0x9d70
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_167; // 0x9d98
	FAnimNode_StateResult AnimGraphNode_StateResult_127; // 0x9dc0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_63; // 0x9df0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_46; // 0x9e48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_166; // 0x9e98
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_165; // 0x9ec0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_164; // 0x9ee8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_163; // 0x9f10
	FAnimNode_StateResult AnimGraphNode_StateResult_126; // 0x9f38
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_62; // 0x9f68
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_45; // 0x9fc0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_162; // 0xa010
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_161; // 0xa038
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_160; // 0xa060
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_159; // 0xa088
	FAnimNode_StateResult AnimGraphNode_StateResult_125; // 0xa0b0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_61; // 0xa0e0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_158; // 0xa138
	FAnimNode_StateResult AnimGraphNode_StateResult_124; // 0xa160
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_157; // 0xa190
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_156; // 0xa1b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_155; // 0xa1e0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_154; // 0xa208
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_60; // 0xa230
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_44; // 0xa288
	FAnimNode_StateResult AnimGraphNode_StateResult_123; // 0xa2d8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_27; // 0xa308
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_56; // 0xa3b8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_55; // 0xa510
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_54; // 0xa668
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_53; // 0xa7c0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_52; // 0xa918
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_51; // 0xaa70
	FAnimNode_Root AnimGraphNode_Root_11; // 0xabc8
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_19; // 0xabf8
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_18; // 0xad10
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_17; // 0xae28
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_16; // 0xaf40
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_15; // 0xb058
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_14; // 0xb170
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_250; // 0xb288
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_249; // 0xb2b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_248; // 0xb2d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_247; // 0xb300
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_246; // 0xb328
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_245; // 0xb350
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_244; // 0xb378
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_243; // 0xb3a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_153; // 0xb3c8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_59; // 0xb3f0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_43; // 0xb448
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_152; // 0xb498
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_151; // 0xb4c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_150; // 0xb4e8
	FAnimNode_StateResult AnimGraphNode_StateResult_122; // 0xb510
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_149; // 0xb540
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_58; // 0xb568
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_42; // 0xb5c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_148; // 0xb610
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_147; // 0xb638
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_146; // 0xb660
	FAnimNode_StateResult AnimGraphNode_StateResult_121; // 0xb688
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_145; // 0xb6b8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_57; // 0xb6e0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_41; // 0xb738
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_144; // 0xb788
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_143; // 0xb7b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_142; // 0xb7d8
	FAnimNode_StateResult AnimGraphNode_StateResult_120; // 0xb800
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_141; // 0xb830
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_56; // 0xb858
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_40; // 0xb8b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_140; // 0xb900
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_139; // 0xb928
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_138; // 0xb950
	FAnimNode_StateResult AnimGraphNode_StateResult_119; // 0xb978
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_137; // 0xb9a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_136; // 0xb9d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_135; // 0xb9f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_134; // 0xba20
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_55; // 0xba48
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_39; // 0xbaa0
	FAnimNode_StateResult AnimGraphNode_StateResult_118; // 0xbaf0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_133; // 0xbb20
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_132; // 0xbb48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_131; // 0xbb70
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_130; // 0xbb98
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_54; // 0xbbc0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_38; // 0xbc18
	FAnimNode_StateResult AnimGraphNode_StateResult_117; // 0xbc68
	FAnimNode_StateMachine AnimGraphNode_StateMachine_26; // 0xbc98
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_50; // 0xbd48
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_49; // 0xbea0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_48; // 0xbff8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_47; // 0xc150
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_46; // 0xc2a8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_45; // 0xc400
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_129; // 0xc558
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_128; // 0xc580
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_13; // 0xc5a8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_44; // 0xc6c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_127; // 0xc818
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_43; // 0xc840
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_174; // 0xc998
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_25; // 0xca60
	FAnimNode_Root AnimGraphNode_Root_10; // 0xcb10
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_12; // 0xcb40
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_11; // 0xcc58
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_10; // 0xcd70
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_9; // 0xce88
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_8; // 0xcfa0
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_7; // 0xd0b8
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_6; // 0xd1d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_242; // 0xd2e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_241; // 0xd310
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_240; // 0xd338
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_239; // 0xd360
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_238; // 0xd388
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_237; // 0xd3b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_236; // 0xd3d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_235; // 0xd400
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_53; // 0xd428
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_126; // 0xd480
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_125; // 0xd4a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_124; // 0xd4d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_123; // 0xd4f8
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_37; // 0xd520
	FAnimNode_StateResult AnimGraphNode_StateResult_116; // 0xd570
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_52; // 0xd5a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_122; // 0xd5f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_121; // 0xd620
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_36; // 0xd648
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_120; // 0xd698
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_119; // 0xd6c0
	FAnimNode_StateResult AnimGraphNode_StateResult_115; // 0xd6e8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_51; // 0xd718
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_118; // 0xd770
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_117; // 0xd798
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_35; // 0xd7c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_116; // 0xd810
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_115; // 0xd838
	FAnimNode_StateResult AnimGraphNode_StateResult_114; // 0xd860
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_50; // 0xd890
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_114; // 0xd8e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_113; // 0xd910
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_112; // 0xd938
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_111; // 0xd960
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_34; // 0xd988
	FAnimNode_StateResult AnimGraphNode_StateResult_113; // 0xd9d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_110; // 0xda08
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_109; // 0xda30
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_108; // 0xda58
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_107; // 0xda80
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_49; // 0xdaa8
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_33; // 0xdb00
	FAnimNode_StateResult AnimGraphNode_StateResult_112; // 0xdb50
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_106; // 0xdb80
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_105; // 0xdba8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_104; // 0xdbd0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_103; // 0xdbf8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_48; // 0xdc20
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_32; // 0xdc78
	FAnimNode_StateResult AnimGraphNode_StateResult_111; // 0xdcc8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_25; // 0xdcf8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_42; // 0xdda8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_41; // 0xdf00
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_40; // 0xe058
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_39; // 0xe1b0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_38; // 0xe308
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_37; // 0xe460
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_36; // 0xe5b8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_35; // 0xe710
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_173; // 0xe868
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_102; // 0xe930
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_101; // 0xe958
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_100; // 0xe980
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_24; // 0xe9a8
	FAnimNode_Root AnimGraphNode_Root_9; // 0xea58
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_5; // 0xea88
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_4; // 0xeba0
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_3; // 0xecb8
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive_6; // 0xedd0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_172; // 0xeea0
	FAnimNode_Slot AnimGraphNode_Slot_15; // 0xef68
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive_5; // 0xefb0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_171; // 0xf080
	FAnimNode_Slot AnimGraphNode_Slot_14; // 0xf148
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive_4; // 0xf190
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_170; // 0xf260
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose_2; // 0xf328
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive_3; // 0xf440
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_169; // 0xf510
	FAnimNode_Slot AnimGraphNode_Slot_13; // 0xf5d8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_168; // 0xf620
	FAnimNode_Slot AnimGraphNode_Slot_12; // 0xf6e8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_167; // 0xf730
	FAnimNode_Slot AnimGraphNode_Slot_11; // 0xf7f8
	FAnimNode_Slot AnimGraphNode_Slot_10; // 0xf840
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_99; // 0xf888
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_166; // 0xf8b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_98; // 0xf978
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_22; // 0xf9a0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_21; // 0xfa60
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_20; // 0xfb20
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_97; // 0xfbe0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_19; // 0xfc08
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_18; // 0xfcc8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_96; // 0xfd88
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_17; // 0xfdb0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_95; // 0xfe70
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_16; // 0xfe98
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_15; // 0xff58
	FAnimNode_Slot AnimGraphNode_Slot_9; // 0x10018
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_34; // 0x10060
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_41; // 0x101b8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_40; // 0x10280
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_14; // 0x10348
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_94; // 0x10408
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_93; // 0x10430
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_165; // 0x10458
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_164; // 0x10520
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_163; // 0x105e8
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_31; // 0x106b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_92; // 0x10700
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_33; // 0x10728
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_91; // 0x10880
	FAnimNode_Slot AnimGraphNode_Slot_8; // 0x108a8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_13; // 0x108f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_90; // 0x109b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_89; // 0x109d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_88; // 0x10a00
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_87; // 0x10a28
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_86; // 0x10a50
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_85; // 0x10a78
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_84; // 0x10aa0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_83; // 0x10ac8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_82; // 0x10af0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_81; // 0x10b18
	FAnimNode_MakeDynamicAdditive AnimGraphNode_MakeDynamicAdditive_5; // 0x10b40
	FAnimNode_MakeDynamicAdditive AnimGraphNode_MakeDynamicAdditive_4; // 0x10b78
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_80; // 0x10bb0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_79; // 0x10bd8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_78; // 0x10c00
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_77; // 0x10c28
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_32; // 0x10c50
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_31; // 0x10da8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_30; // 0x10f00
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_29; // 0x11058
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_28; // 0x111b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_76; // 0x11308
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_75; // 0x11330
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_27; // 0x11358
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_26; // 0x114b0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_25; // 0x11608
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_74; // 0x11760
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_73; // 0x11788
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_72; // 0x117b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_71; // 0x117d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_24; // 0x11800
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_23; // 0x11958
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_70; // 0x11ab0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_22; // 0x11ad8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_69; // 0x11c30
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_68; // 0x11c58
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_67; // 0x11c80
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_66; // 0x11ca8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_65; // 0x11cd0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_64; // 0x11cf8
	FAnimNode_Root AnimGraphNode_Root_8; // 0x11d20
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_63; // 0x11d50
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_62; // 0x11d78
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_61; // 0x11da0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_60; // 0x11dc8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_59; // 0x11df0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_58; // 0x11e18
	FAnimNode_Root AnimGraphNode_Root_7; // 0x11e40
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_318; // 0x11e70
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_30; // 0x11ec0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_317; // 0x11f10
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_316; // 0x11f60
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_10; // 0x11fb0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_24; // 0x11fd0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_23; // 0x120d8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_22; // 0x121e0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_21; // 0x122e8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_20; // 0x123f0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_10; // 0x124f8
	FAnimNode_Root AnimGraphNode_Root_6; // 0x12518
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_234; // 0x12548
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_233; // 0x12570
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_232; // 0x12598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_231; // 0x125c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_230; // 0x125e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_229; // 0x12610
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_228; // 0x12638
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_227; // 0x12660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_226; // 0x12688
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_225; // 0x126b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_224; // 0x126d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_223; // 0x12700
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_222; // 0x12728
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_221; // 0x12750
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_220; // 0x12778
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_219; // 0x127a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_218; // 0x127c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_217; // 0x127f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_23; // 0x12818
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_40; // 0x128c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_315; // 0x12968
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_314; // 0x129b8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_22; // 0x12a08
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_313; // 0x12ab8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_312; // 0x12b08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_216; // 0x12b58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_215; // 0x12b80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_214; // 0x12ba8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_213; // 0x12bd0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_212; // 0x12bf8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_211; // 0x12c20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_210; // 0x12c48
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_162; // 0x12c70
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_311; // 0x12d38
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_310; // 0x12d88
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_161; // 0x12dd8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_309; // 0x12ea0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_308; // 0x12ef0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_160; // 0x12f40
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_47; // 0x13008
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_159; // 0x13060
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_307; // 0x13128
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_306; // 0x13178
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_305; // 0x131c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_304; // 0x13218
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_88; // 0x13268
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_39; // 0x132e8
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_29; // 0x133b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_158; // 0x13400
	FAnimNode_StateResult AnimGraphNode_StateResult_110; // 0x134c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_157; // 0x134f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_39; // 0x135c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_303; // 0x13660
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_302; // 0x136b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_156; // 0x13700
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_301; // 0x137c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_300; // 0x13818
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_38; // 0x13868
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_299; // 0x13908
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_298; // 0x13958
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_155; // 0x139a8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_297; // 0x13a70
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_154; // 0x13ac0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_296; // 0x13b88
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_295; // 0x13bd8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_153; // 0x13c28
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_294; // 0x13cf0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_293; // 0x13d40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_152; // 0x13d90
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_292; // 0x13e58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_87; // 0x13ea8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_38; // 0x13f28
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_28; // 0x13ff0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_151; // 0x14040
	FAnimNode_StateResult AnimGraphNode_StateResult_109; // 0x14108
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_150; // 0x14138
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_37; // 0x14200
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_291; // 0x142a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_290; // 0x142f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_149; // 0x14340
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_289; // 0x14408
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_288; // 0x14458
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_36; // 0x144a8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_287; // 0x14548
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_286; // 0x14598
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_148; // 0x145e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_285; // 0x146b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_147; // 0x14700
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_284; // 0x147c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_283; // 0x14818
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_146; // 0x14868
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_46; // 0x14930
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_145; // 0x14988
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_282; // 0x14a50
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_281; // 0x14aa0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_280; // 0x14af0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_279; // 0x14b40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_86; // 0x14b90
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_37; // 0x14c10
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_144; // 0x14cd8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_143; // 0x14da0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_27; // 0x14e68
	FAnimNode_StateResult AnimGraphNode_StateResult_108; // 0x14eb8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_24; // 0x14ee8
	FAnimNode_StateResult AnimGraphNode_StateResult_107; // 0x14f98
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_21; // 0x14fc8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_20; // 0x15078
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_35; // 0x15128
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_278; // 0x151c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_277; // 0x15218
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_276; // 0x15268
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_275; // 0x152b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_209; // 0x15308
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_208; // 0x15330
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_207; // 0x15358
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_206; // 0x15380
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_205; // 0x153a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_204; // 0x153d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_203; // 0x153f8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_142; // 0x15420
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_274; // 0x154e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_273; // 0x15538
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_141; // 0x15588
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_272; // 0x15650
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_271; // 0x156a0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_140; // 0x156f0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_45; // 0x157b8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_139; // 0x15810
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_270; // 0x158d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_269; // 0x15928
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_268; // 0x15978
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_267; // 0x159c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_85; // 0x15a18
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_36; // 0x15a98
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_26; // 0x15b60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_138; // 0x15bb0
	FAnimNode_StateResult AnimGraphNode_StateResult_106; // 0x15c78
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_137; // 0x15ca8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_34; // 0x15d70
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_266; // 0x15e10
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_265; // 0x15e60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_136; // 0x15eb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_264; // 0x15f78
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_263; // 0x15fc8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_33; // 0x16018
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_262; // 0x160b8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_261; // 0x16108
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_135; // 0x16158
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_260; // 0x16220
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_134; // 0x16270
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_259; // 0x16338
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_258; // 0x16388
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_133; // 0x163d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_257; // 0x164a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_256; // 0x164f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_132; // 0x16540
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_255; // 0x16608
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_84; // 0x16658
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_35; // 0x166d8
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_25; // 0x167a0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_131; // 0x167f0
	FAnimNode_StateResult AnimGraphNode_StateResult_105; // 0x168b8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_130; // 0x168e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_32; // 0x169b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_254; // 0x16a50
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_253; // 0x16aa0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_129; // 0x16af0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_252; // 0x16bb8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_251; // 0x16c08
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_31; // 0x16c58
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_250; // 0x16cf8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_249; // 0x16d48
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_128; // 0x16d98
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_248; // 0x16e60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_127; // 0x16eb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_247; // 0x16f78
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_246; // 0x16fc8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_126; // 0x17018
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_44; // 0x170e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_125; // 0x17138
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_245; // 0x17200
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_244; // 0x17250
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_243; // 0x172a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_242; // 0x172f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_83; // 0x17340
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_34; // 0x173c0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_124; // 0x17488
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_123; // 0x17550
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_24; // 0x17618
	FAnimNode_StateResult AnimGraphNode_StateResult_104; // 0x17668
	FAnimNode_StateMachine AnimGraphNode_StateMachine_23; // 0x17698
	FAnimNode_StateResult AnimGraphNode_StateResult_103; // 0x17748
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_19; // 0x17778
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_18; // 0x17828
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_30; // 0x178d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_241; // 0x17978
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_240; // 0x179c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_239; // 0x17a18
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_238; // 0x17a68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_202; // 0x17ab8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_201; // 0x17ae0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_200; // 0x17b08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_199; // 0x17b30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_198; // 0x17b58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_197; // 0x17b80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_196; // 0x17ba8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_122; // 0x17bd0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_237; // 0x17c98
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_236; // 0x17ce8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_121; // 0x17d38
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_235; // 0x17e00
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_234; // 0x17e50
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_120; // 0x17ea0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_43; // 0x17f68
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_119; // 0x17fc0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_233; // 0x18088
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_232; // 0x180d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_231; // 0x18128
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_230; // 0x18178
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_82; // 0x181c8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_33; // 0x18248
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_23; // 0x18310
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_118; // 0x18360
	FAnimNode_StateResult AnimGraphNode_StateResult_102; // 0x18428
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_117; // 0x18458
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_29; // 0x18520
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_229; // 0x185c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_228; // 0x18610
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_116; // 0x18660
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_227; // 0x18728
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_226; // 0x18778
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_28; // 0x187c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_225; // 0x18868
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_224; // 0x188b8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_115; // 0x18908
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_223; // 0x189d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_114; // 0x18a20
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_222; // 0x18ae8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_221; // 0x18b38
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_113; // 0x18b88
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_220; // 0x18c50
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_219; // 0x18ca0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_112; // 0x18cf0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_218; // 0x18db8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_81; // 0x18e08
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_32; // 0x18e88
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_22; // 0x18f50
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_111; // 0x18fa0
	FAnimNode_StateResult AnimGraphNode_StateResult_101; // 0x19068
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_110; // 0x19098
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_27; // 0x19160
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_217; // 0x19200
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_216; // 0x19250
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_109; // 0x192a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_215; // 0x19368
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_214; // 0x193b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_26; // 0x19408
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_213; // 0x194a8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_212; // 0x194f8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_108; // 0x19548
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_211; // 0x19610
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_107; // 0x19660
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_210; // 0x19728
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_209; // 0x19778
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_106; // 0x197c8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_42; // 0x19890
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_105; // 0x198e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_208; // 0x199b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_207; // 0x19a00
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_206; // 0x19a50
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_205; // 0x19aa0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_80; // 0x19af0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_31; // 0x19b70
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_104; // 0x19c38
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_103; // 0x19d00
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_21; // 0x19dc8
	FAnimNode_StateResult AnimGraphNode_StateResult_100; // 0x19e18
	FAnimNode_StateMachine AnimGraphNode_StateMachine_22; // 0x19e48
	FAnimNode_StateResult AnimGraphNode_StateResult_99; // 0x19ef8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_17; // 0x19f28
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_16; // 0x19fd8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_25; // 0x1a088
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_204; // 0x1a128
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_203; // 0x1a178
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_202; // 0x1a1c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_201; // 0x1a218
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_195; // 0x1a268
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_194; // 0x1a290
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_193; // 0x1a2b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_192; // 0x1a2e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_191; // 0x1a308
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_190; // 0x1a330
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_189; // 0x1a358
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_102; // 0x1a380
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_200; // 0x1a448
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_199; // 0x1a498
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_101; // 0x1a4e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_198; // 0x1a5b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_197; // 0x1a600
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_100; // 0x1a650
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_41; // 0x1a718
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_99; // 0x1a770
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_196; // 0x1a838
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_195; // 0x1a888
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_194; // 0x1a8d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_193; // 0x1a928
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_79; // 0x1a978
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_30; // 0x1a9f8
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_20; // 0x1aac0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_98; // 0x1ab10
	FAnimNode_StateResult AnimGraphNode_StateResult_98; // 0x1abd8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_97; // 0x1ac08
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_24; // 0x1acd0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_192; // 0x1ad70
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_191; // 0x1adc0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_96; // 0x1ae10
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_190; // 0x1aed8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_189; // 0x1af28
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_23; // 0x1af78
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_188; // 0x1b018
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_187; // 0x1b068
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_95; // 0x1b0b8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_186; // 0x1b180
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_94; // 0x1b1d0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_185; // 0x1b298
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_184; // 0x1b2e8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_93; // 0x1b338
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_183; // 0x1b400
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_182; // 0x1b450
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_92; // 0x1b4a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_181; // 0x1b568
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_78; // 0x1b5b8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_29; // 0x1b638
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_19; // 0x1b700
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_91; // 0x1b750
	FAnimNode_StateResult AnimGraphNode_StateResult_97; // 0x1b818
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_90; // 0x1b848
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_22; // 0x1b910
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_180; // 0x1b9b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_179; // 0x1ba00
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_89; // 0x1ba50
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_178; // 0x1bb18
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_177; // 0x1bb68
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_21; // 0x1bbb8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_176; // 0x1bc58
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_175; // 0x1bca8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_88; // 0x1bcf8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_174; // 0x1bdc0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_87; // 0x1be10
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_173; // 0x1bed8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_172; // 0x1bf28
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_86; // 0x1bf78
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_40; // 0x1c040
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_85; // 0x1c098
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_171; // 0x1c160
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_170; // 0x1c1b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_169; // 0x1c200
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_168; // 0x1c250
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_77; // 0x1c2a0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_28; // 0x1c320
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_84; // 0x1c3e8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_83; // 0x1c4b0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_18; // 0x1c578
	FAnimNode_StateResult AnimGraphNode_StateResult_96; // 0x1c5c8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_21; // 0x1c5f8
	FAnimNode_StateResult AnimGraphNode_StateResult_95; // 0x1c6a8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_27; // 0x1c6d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_76; // 0x1c7a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_167; // 0x1c820
	FAnimNode_StateResult AnimGraphNode_StateResult_94; // 0x1c870
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_15; // 0x1c8a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_20; // 0x1c950
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_166; // 0x1c9f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_165; // 0x1ca40
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_14; // 0x1ca90
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_164; // 0x1cb40
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_163; // 0x1cb90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_188; // 0x1cbe0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_187; // 0x1cc08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_186; // 0x1cc30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_185; // 0x1cc58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_184; // 0x1cc80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_183; // 0x1cca8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_182; // 0x1ccd0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_181; // 0x1ccf8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_180; // 0x1cd20
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_82; // 0x1cd48
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_162; // 0x1ce10
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_161; // 0x1ce60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_81; // 0x1ceb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_160; // 0x1cf78
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_159; // 0x1cfc8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_80; // 0x1d018
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_39; // 0x1d0e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_79; // 0x1d138
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_158; // 0x1d200
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_157; // 0x1d250
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_156; // 0x1d2a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_155; // 0x1d2f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_75; // 0x1d340
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_26; // 0x1d3c0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_17; // 0x1d488
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_78; // 0x1d4d8
	FAnimNode_StateResult AnimGraphNode_StateResult_93; // 0x1d5a0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_77; // 0x1d5d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_19; // 0x1d698
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_154; // 0x1d738
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_153; // 0x1d788
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_76; // 0x1d7d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_152; // 0x1d8a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_151; // 0x1d8f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_18; // 0x1d940
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_150; // 0x1d9e0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_149; // 0x1da30
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_75; // 0x1da80
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_148; // 0x1db48
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_74; // 0x1db98
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_147; // 0x1dc60
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_146; // 0x1dcb0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_73; // 0x1dd00
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_145; // 0x1ddc8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_144; // 0x1de18
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_72; // 0x1de68
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_143; // 0x1df30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_74; // 0x1df80
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_25; // 0x1e000
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_16; // 0x1e0c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_71; // 0x1e118
	FAnimNode_StateResult AnimGraphNode_StateResult_92; // 0x1e1e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_70; // 0x1e210
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_17; // 0x1e2d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_142; // 0x1e378
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_141; // 0x1e3c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_69; // 0x1e418
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_140; // 0x1e4e0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_139; // 0x1e530
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_16; // 0x1e580
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_138; // 0x1e620
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_137; // 0x1e670
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_68; // 0x1e6c0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_136; // 0x1e788
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_67; // 0x1e7d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_135; // 0x1e8a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_134; // 0x1e8f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_66; // 0x1e940
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_38; // 0x1ea08
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_65; // 0x1ea60
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_133; // 0x1eb28
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_132; // 0x1eb78
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_131; // 0x1ebc8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_130; // 0x1ec18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_73; // 0x1ec68
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_24; // 0x1ece8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_64; // 0x1edb0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_63; // 0x1ee78
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_15; // 0x1ef40
	FAnimNode_StateResult AnimGraphNode_StateResult_91; // 0x1ef90
	FAnimNode_StateMachine AnimGraphNode_StateMachine_20; // 0x1efc0
	FAnimNode_StateResult AnimGraphNode_StateResult_90; // 0x1f070
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_13; // 0x1f0a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_15; // 0x1f150
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_129; // 0x1f1f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_128; // 0x1f240
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_127; // 0x1f290
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_126; // 0x1f2e0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_12; // 0x1f330
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_179; // 0x1f3e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_178; // 0x1f408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_177; // 0x1f430
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_176; // 0x1f458
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_175; // 0x1f480
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_174; // 0x1f4a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_173; // 0x1f4d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_172; // 0x1f4f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_171; // 0x1f520
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_62; // 0x1f548
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_125; // 0x1f610
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_124; // 0x1f660
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_61; // 0x1f6b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_123; // 0x1f778
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_122; // 0x1f7c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_60; // 0x1f818
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_37; // 0x1f8e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_59; // 0x1f938
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_121; // 0x1fa00
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_120; // 0x1fa50
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_119; // 0x1faa0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_118; // 0x1faf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_72; // 0x1fb40
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_23; // 0x1fbc0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_14; // 0x1fc88
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_58; // 0x1fcd8
	FAnimNode_StateResult AnimGraphNode_StateResult_89; // 0x1fda0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_57; // 0x1fdd0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_14; // 0x1fe98
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_117; // 0x1ff38
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_116; // 0x1ff88
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_56; // 0x1ffd8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_115; // 0x200a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_114; // 0x200f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_13; // 0x20140
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_113; // 0x201e0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_112; // 0x20230
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_55; // 0x20280
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_111; // 0x20348
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_54; // 0x20398
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_110; // 0x20460
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_109; // 0x204b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_53; // 0x20500
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_108; // 0x205c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_107; // 0x20618
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_52; // 0x20668
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_106; // 0x20730
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_71; // 0x20780
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_22; // 0x20800
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_13; // 0x208c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_51; // 0x20918
	FAnimNode_StateResult AnimGraphNode_StateResult_88; // 0x209e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_50; // 0x20a10
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_12; // 0x20ad8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_105; // 0x20b78
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_104; // 0x20bc8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_49; // 0x20c18
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_103; // 0x20ce0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_102; // 0x20d30
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_11; // 0x20d80
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_101; // 0x20e20
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_100; // 0x20e70
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_48; // 0x20ec0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_99; // 0x20f88
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_47; // 0x20fd8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_98; // 0x210a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_97; // 0x210f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_46; // 0x21140
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_36; // 0x21208
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_45; // 0x21260
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_96; // 0x21328
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_95; // 0x21378
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_94; // 0x213c8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_93; // 0x21418
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_70; // 0x21468
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_21; // 0x214e8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_44; // 0x215b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_43; // 0x21678
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_12; // 0x21740
	FAnimNode_StateResult AnimGraphNode_StateResult_87; // 0x21790
	FAnimNode_StateMachine AnimGraphNode_StateMachine_19; // 0x217c0
	FAnimNode_StateResult AnimGraphNode_StateResult_86; // 0x21870
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_10; // 0x218a0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_92; // 0x21940
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_91; // 0x21990
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_11; // 0x219e0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_90; // 0x21a90
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_10; // 0x21ae0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_89; // 0x21b90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_170; // 0x21be0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_169; // 0x21c08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_168; // 0x21c30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_167; // 0x21c58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_166; // 0x21c80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_165; // 0x21ca8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_164; // 0x21cd0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_163; // 0x21cf8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_162; // 0x21d20
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_42; // 0x21d48
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_88; // 0x21e10
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_87; // 0x21e60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_41; // 0x21eb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_86; // 0x21f78
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_85; // 0x21fc8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_40; // 0x22018
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_35; // 0x220e0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_84; // 0x22138
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_83; // 0x22188
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_82; // 0x221d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_81; // 0x22228
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_80; // 0x22278
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_12; // 0x222c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_69; // 0x22388
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_39; // 0x22408
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_20; // 0x224d0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_11; // 0x22598
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_38; // 0x225e8
	FAnimNode_StateResult AnimGraphNode_StateResult_85; // 0x226b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_37; // 0x226e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0x227a8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_79; // 0x22848
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_78; // 0x22898
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x228e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_77; // 0x22988
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_76; // 0x229d8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_36; // 0x22a28
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_35; // 0x22af0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_75; // 0x22bb8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_74; // 0x22c08
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_34; // 0x22c58
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_73; // 0x22d20
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_72; // 0x22d70
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_33; // 0x22dc0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_71; // 0x22e88
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_70; // 0x22ed8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_69; // 0x22f28
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_68; // 0x22f78
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_67; // 0x22fc8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_11; // 0x23018
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_68; // 0x230d8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_32; // 0x23158
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_19; // 0x23220
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_10; // 0x232e8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_31; // 0x23338
	FAnimNode_StateResult AnimGraphNode_StateResult_84; // 0x23400
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_66; // 0x23430
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_65; // 0x23480
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_30; // 0x234d0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_64; // 0x23598
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_34; // 0x235e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_63; // 0x23640
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_62; // 0x23690
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_61; // 0x236e0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_60; // 0x23730
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_59; // 0x23780
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x237d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_29; // 0x23870
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_28; // 0x23938
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_58; // 0x23a00
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_10; // 0x23a50
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_27; // 0x23b10
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_26; // 0x23bd8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_25; // 0x23ca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_67; // 0x23d68
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_18; // 0x23de8
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_9; // 0x23eb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_57; // 0x23f00
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_24; // 0x23f50
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_56; // 0x24018
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_55; // 0x24068
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x240b8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_23; // 0x24158
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_54; // 0x24220
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_53; // 0x24270
	FAnimNode_StateResult AnimGraphNode_StateResult_83; // 0x242c0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_18; // 0x242f0
	FAnimNode_StateResult AnimGraphNode_StateResult_82; // 0x243a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_161; // 0x243d0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_52; // 0x243f8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_51; // 0x24448
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_50; // 0x24498
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_49; // 0x244e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_48; // 0x24538
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_22; // 0x24588
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_21; // 0x24650
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_20; // 0x24718
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_8; // 0x247e0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_47; // 0x24830
	FAnimNode_StateResult AnimGraphNode_StateResult_81; // 0x24880
	FAnimNode_StateMachine AnimGraphNode_StateMachine_17; // 0x248b0
	FAnimNode_Inertialization AnimGraphNode_Inertialization_3; // 0x24960
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_160; // 0x249d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_159; // 0x249f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_66; // 0x24a20
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_17; // 0x24aa0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_46; // 0x24b68
	FAnimNode_StateResult AnimGraphNode_StateResult_80; // 0x24bb8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_16; // 0x24be8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_65; // 0x24cb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_45; // 0x24d30
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_44; // 0x24d80
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_43; // 0x24dd0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_42; // 0x24e20
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_41; // 0x24e70
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_40; // 0x24ec0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_19; // 0x24f10
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_18; // 0x24fd8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_17; // 0x250a0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_7; // 0x25168
	FAnimNode_StateResult AnimGraphNode_StateResult_79; // 0x251b8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_16; // 0x251e8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_9; // 0x25298
	FAnimNode_Root AnimGraphNode_Root_5; // 0x25348
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_158; // 0x25378
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_157; // 0x253a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_156; // 0x253c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_155; // 0x253f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_154; // 0x25418
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_153; // 0x25440
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_152; // 0x25468
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_151; // 0x25490
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_150; // 0x254b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_149; // 0x254e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_148; // 0x25508
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_147; // 0x25530
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_64; // 0x25558
	FAnimNode_StateResult AnimGraphNode_StateResult_78; // 0x255d8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_33; // 0x25608
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_63; // 0x25660
	FAnimNode_StateResult AnimGraphNode_StateResult_77; // 0x256e0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_32; // 0x25710
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_62; // 0x25768
	FAnimNode_StateResult AnimGraphNode_StateResult_76; // 0x257e8
	FAnimNode_StateResult AnimGraphNode_StateResult_75; // 0x25818
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_31; // 0x25848
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_61; // 0x258a0
	FAnimNode_StateResult AnimGraphNode_StateResult_74; // 0x25920
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_13; // 0x25950
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_60; // 0x25a00
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_30; // 0x25a80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_59; // 0x25ad8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_58; // 0x25b58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_57; // 0x25bd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_56; // 0x25c58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_55; // 0x25cd8
	FAnimNode_StateResult AnimGraphNode_StateResult_73; // 0x25d58
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_29; // 0x25d88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_54; // 0x25de0
	FAnimNode_StateResult AnimGraphNode_StateResult_72; // 0x25e60
	FAnimNode_StateMachine AnimGraphNode_StateMachine_15; // 0x25e90
	FAnimNode_Root AnimGraphNode_Root_4; // 0x25f40
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_9; // 0x25f70
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_9; // 0x25f90
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_39; // 0x25fb0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_38; // 0x26000
	FAnimNode_MakeDynamicAdditive AnimGraphNode_MakeDynamicAdditive_3; // 0x26050
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_15; // 0x26088
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_19; // 0x26150
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8; // 0x26258
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8; // 0x26278
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_18; // 0x26298
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x263a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_53; // 0x26440
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_16; // 0x264c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_24; // 0x26588
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_23; // 0x26670
	FAnimNode_Root AnimGraphNode_Root_3; // 0x26758
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_146; // 0x26788
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_145; // 0x267b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_144; // 0x267d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_143; // 0x26800
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_142; // 0x26828
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_141; // 0x26850
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_140; // 0x26878
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_139; // 0x268a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_138; // 0x268c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_137; // 0x268f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_136; // 0x26918
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_135; // 0x26940
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_134; // 0x26968
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_133; // 0x26990
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_132; // 0x269b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_131; // 0x269e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_130; // 0x26a08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_129; // 0x26a30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_128; // 0x26a58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_127; // 0x26a80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_126; // 0x26aa8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_125; // 0x26ad0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_124; // 0x26af8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_123; // 0x26b20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_122; // 0x26b48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_121; // 0x26b70
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_57; // 0x26b98
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_28; // 0x26bc0
	FAnimNode_StateResult AnimGraphNode_StateResult_71; // 0x26c18
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_8; // 0x26c48
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_22; // 0x26cf8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_21; // 0x26de0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_14; // 0x26ec8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_13; // 0x26f90
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_37; // 0x27058
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace; // 0x270a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x27238
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_36; // 0x272d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_35; // 0x27328
	FAnimNode_StateResult AnimGraphNode_StateResult_70; // 0x27378
	FAnimNode_Inertialization AnimGraphNode_Inertialization_2; // 0x273a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_120; // 0x27418
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_119; // 0x27440
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_118; // 0x27468
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_117; // 0x27490
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_116; // 0x274b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_115; // 0x274e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_114; // 0x27508
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_113; // 0x27530
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_112; // 0x27558
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_52; // 0x27580
	FAnimNode_StateResult AnimGraphNode_StateResult_69; // 0x27600
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_56; // 0x27630
	FAnimNode_StateResult AnimGraphNode_StateResult_68; // 0x27658
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_51; // 0x27688
	FAnimNode_StateResult AnimGraphNode_StateResult_67; // 0x27708
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_50; // 0x27738
	FAnimNode_StateResult AnimGraphNode_StateResult_66; // 0x277b8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_20; // 0x277e8
	FAnimNode_StateResult AnimGraphNode_StateResult_65; // 0x278d0
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x27900
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_49; // 0x27948
	FAnimNode_StateResult AnimGraphNode_StateResult_64; // 0x279c8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_12; // 0x279f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_19; // 0x27ac0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_18; // 0x27ba8
	FAnimNode_StateResult AnimGraphNode_StateResult_63; // 0x27c90
	FAnimNode_StateMachine AnimGraphNode_StateMachine_14; // 0x27cc0
	FAnimNode_StateResult AnimGraphNode_StateResult_62; // 0x27d70
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_27; // 0x27da0
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_12; // 0x27df8
	FAnimNode_StateResult AnimGraphNode_StateResult_61; // 0x27ea8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_111; // 0x27ed8
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive_2; // 0x27f00
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_26; // 0x27fd0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_55; // 0x28028
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_48; // 0x28050
	FAnimNode_StateResult AnimGraphNode_StateResult_60; // 0x280d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_110; // 0x28100
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_109; // 0x28128
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_47; // 0x28150
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_25; // 0x281d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_15; // 0x28228
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_24; // 0x282f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_14; // 0x28348
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_46; // 0x28410
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_45; // 0x28490
	FAnimNode_StateResult AnimGraphNode_StateResult_59; // 0x28510
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_23; // 0x28540
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_11; // 0x28598
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_17; // 0x28660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_108; // 0x28748
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_107; // 0x28770
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_106; // 0x28798
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_105; // 0x287c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_104; // 0x287e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_44; // 0x28810
	FAnimNode_StateResult AnimGraphNode_StateResult_58; // 0x28890
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_43; // 0x288c0
	FAnimNode_StateResult AnimGraphNode_StateResult_57; // 0x28940
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_13; // 0x28970
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_42; // 0x28a38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_41; // 0x28ab8
	FAnimNode_StateResult AnimGraphNode_StateResult_56; // 0x28b38
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_12; // 0x28b68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_40; // 0x28c30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_39; // 0x28cb0
	FAnimNode_StateResult AnimGraphNode_StateResult_55; // 0x28d30
	FAnimNode_StateResult AnimGraphNode_StateResult_54; // 0x28d60
	FAnimNode_StateMachine AnimGraphNode_StateMachine_13; // 0x28d90
	FAnimNode_StateResult AnimGraphNode_StateResult_53; // 0x28e40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_11; // 0x28e70
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_34; // 0x28f38
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_33; // 0x28f88
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_10; // 0x28fd8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_22; // 0x290a0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_9; // 0x290f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_38; // 0x291c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_37; // 0x29240
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_16; // 0x292c0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_10; // 0x293a8
	FAnimNode_StateResult AnimGraphNode_StateResult_52; // 0x29470
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_54; // 0x294a0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_21; // 0x294c8
	FAnimNode_StateResult AnimGraphNode_StateResult_51; // 0x29520
	FAnimNode_StateMachine AnimGraphNode_StateMachine_12; // 0x29550
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_103; // 0x29600
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_102; // 0x29628
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_101; // 0x29650
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_100; // 0x29678
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_99; // 0x296a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_98; // 0x296c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_97; // 0x296f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_96; // 0x29718
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_95; // 0x29740
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_94; // 0x29768
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_93; // 0x29790
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_92; // 0x297b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_91; // 0x297e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_90; // 0x29808
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_89; // 0x29830
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_88; // 0x29858
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_87; // 0x29880
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_86; // 0x298a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_85; // 0x298d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_84; // 0x298f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_83; // 0x29920
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_82; // 0x29948
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_81; // 0x29970
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_80; // 0x29998
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_79; // 0x299c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_78; // 0x299e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_77; // 0x29a10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_76; // 0x29a38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_75; // 0x29a60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_74; // 0x29a88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_73; // 0x29ab0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_72; // 0x29ad8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_53; // 0x29b00
	FAnimNode_StateResult AnimGraphNode_StateResult_50; // 0x29b28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_36; // 0x29b58
	FAnimNode_StateResult AnimGraphNode_StateResult_49; // 0x29bd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_35; // 0x29c08
	FAnimNode_StateResult AnimGraphNode_StateResult_48; // 0x29c88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34; // 0x29cb8
	FAnimNode_StateResult AnimGraphNode_StateResult_47; // 0x29d38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0x29d68
	FAnimNode_StateResult AnimGraphNode_StateResult_46; // 0x29de8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_52; // 0x29e18
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_20; // 0x29e40
	FAnimNode_StateResult AnimGraphNode_StateResult_45; // 0x29e98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_71; // 0x29ec8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_70; // 0x29ef0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x29f18
	FAnimNode_StateResult AnimGraphNode_StateResult_44; // 0x29f98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x29fc8
	FAnimNode_StateResult AnimGraphNode_StateResult_43; // 0x2a048
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_51; // 0x2a078
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_19; // 0x2a0a0
	FAnimNode_StateResult AnimGraphNode_StateResult_42; // 0x2a0f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_50; // 0x2a128
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_18; // 0x2a150
	FAnimNode_StateResult AnimGraphNode_StateResult_41; // 0x2a1a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_49; // 0x2a1d8
	FAnimNode_StateResult AnimGraphNode_StateResult_40; // 0x2a200
	FAnimNode_StateMachine AnimGraphNode_StateMachine_11; // 0x2a230
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x2a2e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_8; // 0x2a380
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0x2a448
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0x2a4c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_15; // 0x2a548
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x2a630
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_11; // 0x2a6d0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7; // 0x2a780
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7; // 0x2a7a0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_17; // 0x2a7c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_14; // 0x2a8c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_7; // 0x2a9b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x2aa78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x2aaf8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_13; // 0x2ab78
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_9; // 0x2ac60
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_12; // 0x2ad28
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_11; // 0x2ae10
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_10; // 0x2aef8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x2afe0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x2b0c8
	FAnimNode_StateResult AnimGraphNode_StateResult_39; // 0x2b1b0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_10; // 0x2b1e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_69; // 0x2b290
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_68; // 0x2b2b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_67; // 0x2b2e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_66; // 0x2b308
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_65; // 0x2b330
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_64; // 0x2b358
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0x2b380
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0x2b3a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0x2b3d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x2b3f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x2b420
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x2b448
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_48; // 0x2b470
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x2b498
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x2b518
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x2b598
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x2b618
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_6; // 0x2b698
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_8; // 0x2b6e8
	FAnimNode_StateResult AnimGraphNode_StateResult_38; // 0x2b7b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x2b7e0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_47; // 0x2b808
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x2b830
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x2b8b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x2b930
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x2b9b0
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_5; // 0x2ba30
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_7; // 0x2ba80
	FAnimNode_StateResult AnimGraphNode_StateResult_37; // 0x2bb48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_46; // 0x2bb78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x2bba0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x2bc20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x2bca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x2bd20
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_4; // 0x2bda0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_6; // 0x2bdf0
	FAnimNode_StateResult AnimGraphNode_StateResult_36; // 0x2beb8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_45; // 0x2bee8
	FAnimNode_StateResult AnimGraphNode_StateResult_35; // 0x2bf10
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_44; // 0x2bf40
	FAnimNode_StateResult AnimGraphNode_StateResult_34; // 0x2bf68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_43; // 0x2bf98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x2bfc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x2c040
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x2c0c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x2c140
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_3; // 0x2c1c0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_5; // 0x2c210
	FAnimNode_StateResult AnimGraphNode_StateResult_33; // 0x2c2d8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_9; // 0x2c308
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x2c3b8
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_10; // 0x2c438
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6; // 0x2c4e8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6; // 0x2c508
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_16; // 0x2c528
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x2c630
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_32; // 0x2c718
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_6; // 0x2c768
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x2c830
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x2c918
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x2ca00
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x2cae8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x2cbd0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x2ccb8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_4; // 0x2cda0
	FAnimNode_StateResult AnimGraphNode_StateResult_32; // 0x2ce68
	FAnimNode_StateMachine AnimGraphNode_StateMachine_8; // 0x2ce98
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x2cf48
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_21; // 0x2cf90
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_20; // 0x2d0e8
	FAnimNode_Inertialization AnimGraphNode_Inertialization; // 0x2d240
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_19; // 0x2d2b0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_18; // 0x2d408
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_17; // 0x2d560
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_16; // 0x2d6b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x2d810
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x2d838
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x2d860
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0x2d888
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0x2d8b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0x2d8d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0x2d900
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0x2d928
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0x2d950
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0x2d978
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0x2d9a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0x2d9c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0x2d9f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x2da18
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_9; // 0x2da40
	FAnimNode_StateResult AnimGraphNode_StateResult_31; // 0x2daf0
	FAnimNode_CLSDistanceMatch AnimGraphNode_CLSDistanceMatch_4; // 0x2db20
	FAnimNode_StateResult AnimGraphNode_StateResult_30; // 0x2dbb0
	FAnimNode_CLSDistanceMatch AnimGraphNode_CLSDistanceMatch_3; // 0x2dbe0
	FAnimNode_StateResult AnimGraphNode_StateResult_29; // 0x2dc70
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_42; // 0x2dca0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_31; // 0x2dcc8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_30; // 0x2dd18
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_9; // 0x2dd68
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_17; // 0x2de28
	FAnimNode_StateResult AnimGraphNode_StateResult_28; // 0x2de80
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_41; // 0x2deb0
	FAnimNode_StateResult AnimGraphNode_StateResult_27; // 0x2ded8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_29; // 0x2df08
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_28; // 0x2df58
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_7; // 0x2dfa8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_16; // 0x2e058
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x2e0b0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_15; // 0x2e0f8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_27; // 0x2e150
	FAnimNode_StateResult AnimGraphNode_StateResult_26; // 0x2e1a0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_7; // 0x2e1d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x2e280
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x2e2a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x2e2d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x2e2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x2e320
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x2e348
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x2e370
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x2e398
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x2e3c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x2e3e8
	FAnimNode_StateResult AnimGraphNode_StateResult_25; // 0x2e410
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_14; // 0x2e440
	FAnimNode_CLSDistanceMatch AnimGraphNode_CLSDistanceMatch_2; // 0x2e498
	FAnimNode_StateResult AnimGraphNode_StateResult_24; // 0x2e528
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_13; // 0x2e558
	FAnimNode_CLSDistanceMatch AnimGraphNode_CLSDistanceMatch; // 0x2e5b0
	FAnimNode_StateResult AnimGraphNode_StateResult_23; // 0x2e640
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x2e670
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x2e698
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x2e6c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x2e6e8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_6; // 0x2e710
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_5; // 0x2e7c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_40; // 0x2e870
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_26; // 0x2e898
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_25; // 0x2e8e8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_24; // 0x2e938
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_23; // 0x2e988
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend_2; // 0x2e9d8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_22; // 0x2ea28
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_21; // 0x2ea78
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8; // 0x2eac8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_12; // 0x2eb88
	FAnimNode_StateResult AnimGraphNode_StateResult_22; // 0x2ebe0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_4; // 0x2ec10
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x2ecc0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_39; // 0x2ed70
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_20; // 0x2ed98
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_19; // 0x2ede8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_18; // 0x2ee38
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_17; // 0x2ee88
	FAnimNode_MultiWayBlend AnimGraphNode_MultiWayBlend; // 0x2eed8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_16; // 0x2ef28
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_15; // 0x2ef78
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7; // 0x2efc8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_11; // 0x2f088
	FAnimNode_StateResult AnimGraphNode_StateResult_21; // 0x2f0e0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_10; // 0x2f110
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_38; // 0x2f168
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0x2f190
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_9; // 0x2f1c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_37; // 0x2f218
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0x2f240
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x2f270
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x2f298
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_36; // 0x2f2c0
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x2f2e8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_6; // 0x2f318
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x2f3c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_35; // 0x2f3f8
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x2f420
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_14; // 0x2f450
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_13; // 0x2f4a0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x2f4f0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_12; // 0x2f5a0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_8; // 0x2f5f0
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x2f648
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_7; // 0x2f690
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x2f6e8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_5; // 0x2f718
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_15; // 0x2f7c8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_14; // 0x2f920
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x2fa78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x2faa0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x2fac8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x2faf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x2fb18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x2fb40
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_11; // 0x2fb68
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x2fbb8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_34; // 0x2fbe8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_10; // 0x2fc10
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_9; // 0x2fc60
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0x2fcb0
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_6; // 0x2fd70
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x2fdc8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_5; // 0x2fdf8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_33; // 0x2fe50
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x2fe78
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_4; // 0x2fea8
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_3; // 0x2ff00
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve_2; // 0x2ff58
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_8; // 0x2ffb0
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x30000
	FAnimNode_StateMachine AnimGraphNode_StateMachine_4; // 0x30030
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_7; // 0x300e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_5; // 0x30130
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x301f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x30278
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x302f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x30378
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x303f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x30478
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_8; // 0x304f8
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x305a8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_3; // 0x305d8
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x30688
	FAnimNode_Root AnimGraphNode_Root_2; // 0x306d0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5; // 0x30700
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_2; // 0x30720
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK; // 0x30900
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_13; // 0x30ae0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x30c38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x30c60
	FAnimNode_PoseSnapshot AnimGraphNode_PoseSnapshot; // 0x30c88
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x30d18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x30d48
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x30dc8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x30df8
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_7; // 0x30ea8
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_6; // 0x30f58
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_5; // 0x31008
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_4; // 0x310b8
	FAnimNode_ApplyMeshSpaceAdditive AnimGraphNode_ApplyMeshSpaceAdditive; // 0x31168
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_32; // 0x31238
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_3; // 0x31260
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_12; // 0x31310
	FAnimNode_CopyBone AnimGraphNode_CopyBone; // 0x31468
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5; // 0x31558
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4; // 0x31578
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_31; // 0x31598
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4; // 0x315c0
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose; // 0x315e0
	FAnimNode_Root AnimGraphNode_Root; // 0x316f8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_11; // 0x31728
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_2; // 0x31880
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x31930
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_30; // 0x31978
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_29; // 0x319a0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_10; // 0x319c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_28; // 0x31b20
	FAnimNode_Slot AnimGraphNode_Slot; // 0x31b48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_27; // 0x31b90
	FAnimNode_MakeDynamicAdditive AnimGraphNode_MakeDynamicAdditive_2; // 0x31bb8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_9; // 0x31bf0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_26; // 0x31d48
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_3; // 0x31d70
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_25; // 0x31e38
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_24; // 0x31e60
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0x31e88
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_23; // 0x31f48
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0x31f70
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x32030
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_22; // 0x320f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_21; // 0x32120
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x32148
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x32208
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_20; // 0x322c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_19; // 0x322f0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_8; // 0x32318
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_18; // 0x32470
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_7; // 0x32498
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_17; // 0x325f0
	FAnimNode_BlendBoneByChannel AnimGraphNode_BlendBoneByChannel_2; // 0x32618
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_15; // 0x32680
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3; // 0x32788
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3; // 0x327a8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_6; // 0x327c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_16; // 0x32920
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_15; // 0x32948
	FAnimNode_MakeDynamicAdditive AnimGraphNode_MakeDynamicAdditive; // 0x32970
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0x329a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_14; // 0x32b00
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_13; // 0x32b28
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_2; // 0x32b50
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_12; // 0x32c18
	FAnimNode_BlendBoneByChannel AnimGraphNode_BlendBoneByChannel; // 0x32c40
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_6; // 0x32ca8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x32cf8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_11; // 0x32da8
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer; // 0x32dd0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x32e80
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_14; // 0x32f48
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_13; // 0x33050
	FAnimNode_Fabrik AnimGraphNode_Fabrik_5; // 0x33160
	FAnimNode_Fabrik AnimGraphNode_Fabrik_4; // 0x332f0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_3; // 0x33480
	FAnimNode_Fabrik AnimGraphNode_Fabrik_2; // 0x33610
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x337a0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_12; // 0x33930
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_11; // 0x33a38
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0x33b40
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x33b60
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_10; // 0x33b80
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_9; // 0x33c88
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0x33d90
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_5; // 0x33ee8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_10; // 0x33f38
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x33f60
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0x34028
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_9; // 0x34180
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0x341a8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_8; // 0x341d0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_7; // 0x342d8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_6; // 0x343e0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_5; // 0x344e8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x345f0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x34610
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x34630
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0x34788
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x347b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x347d8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_4; // 0x348a0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0x349a8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x34ab0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x34bb8
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_4; // 0x34cc0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x34d10
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x34e68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x34e90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x34eb8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive; // 0x34f38
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x35000
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x350c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x35160
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x35188
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x351b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x351d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x35200
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x35228
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x35250
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x35278
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x352a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x352c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x352f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x35318
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x35340
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x35368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x35390
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x353b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x353e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x35408
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x35430
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x35458
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x35488
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x354b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x354e0
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x35508
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_3; // 0x35538
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x35588
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_2; // 0x355b8
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x35608
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator; // 0x35638
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x35688
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x356b8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x35738
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x35768
	FAnimNode_ModifyCurve AnimGraphNode_ModifyCurve; // 0x35818
	USkeletalMeshComponent* MeshReference; // 0x35870
};

struct ACrowSelectItemSpawner {
	ECrowItemType ItemType; // 0x228
	int32_t ItemIndex; // 0x22c
	int32_t ItemCount; // 0x230
	ECrowSpawnerType SpawnerType; // 0x234
	float SpawnDelay; // 0x238
	ACrowItemBase* CreateItem; // 0x240
};

struct UMaterialInstance {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0x90
	UMaterialInterface* Parent; // 0xd0
	char bHasStaticPermutationResource : 1; // 0xd8
	char bOverrideSubsurfaceProfile : 1; // 0xd8
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xe0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xf0
	TArray<FTextureParameterValue> TextureParameterValues; // 0x100
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0x110
	TArray<FFontParameterValue> FontParameterValues; // 0x120
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0x130
	FStaticParameterSet StaticParameters; // 0x148
	FMaterialCachedParameters CachedLayerParameters; // 0x188
	TArray<UObject*> CachedReferencedTextures; // 0x328
};

struct UPolyEditExtrudeProperties {
	EPolyEditExtrudeDirection Direction; // 0x60
	bool bShellsToSolids; // 0x64
};

struct AAkSpatialAudioVolume {
	UAkSurfaceReflectorSetComponent* SurfaceReflectorSet; // 0x258
	UAkLateReverbComponent* LateReverb; // 0x260
	UAkRoomComponent* Room; // 0x268
};

struct UCrowAimComponentBase {
	UCameraComponent* AimMainCamera; // 0xc0
	ACrowWeaponBase* CrowWeaponBase; // 0xc8
	ACrowPlayerControllerBase* PlayerController; // 0xd0
};

struct UMaterialFunction {
	FString Description; // 0x40
	char bExposeToLibrary : 1; // 0x50
	char bPrefixParameterNames : 1; // 0x50
};

struct UAnimBoneCompressionCodec {
	FString Description; // 0x28
};

struct UInteractiveTool {
	UInputBehaviorSet* InputBehaviors; // 0x48
	TArray<UObject*> ToolPropertyObjects; // 0x50
};

struct UCheckBoxStyleAsset {
	FCheckBoxStyle CheckBoxStyle; // 0x28
};

struct UCustomMeshGenerator {
	UStaticMeshComponent* MeshComp; // 0x28
};

struct UEnvelopeFollowerListener {
	FMulticastInlineDelegate OnEnvelopeFollowerUpdate; // 0xb0
};

struct USourceEffectPannerPreset {
	FSourceEffectPannerSettings Settings; // 0x98
};

struct ACrowCloudScapeReplicationActor {
	FCrowVoluemetricCloudSetting VolumetricCloudSetting; // 0x220
	ACrowVolumetricCloudActor* VolumetricCloudActorTemplate; // 0x228
	UCrowCloudUIHandler* CloudUIHandler; // 0x230
	UCrowCloudCollisionEventHandler* CollisionEventHandler; // 0x238
	UCrowCloudDamageHandler* CloudDamageHandler; // 0x240
	UCrowCloudUpdaterComponent* CloudUpdaterComp; // 0x248
	bool bActivate; // 0x250
	float RemainReplicationTime; // 0x254
	ACrowVolumetricCloudActor* VolumetricCloudActor; // 0x258
	TArray<FCrowCloudScapeReplication> ReplicationDatas; // 0x260
};

struct UCrowRandomBoxWidget {
	UCanvasPanel* CP_Open_Before; // 0x348
	UCanvasPanel* CP_Card; // 0x350
	UCanvasPanel* CP_Result; // 0x358
	UTextBlock* TB_Message; // 0x360
	UCrowCustomizeOutfitSlotWidget* WB_Customize_Outfit_SmallSlot; // 0x368
	URichTextBlock* RTB_ItemGrade; // 0x370
	UTextBlock* TB_ItemCategory; // 0x378
	URichTextBlock* TB_ItemName; // 0x380
	URichTextBlock* RTB_Grade; // 0x388
	UTextBlock* Text_GuageCount; // 0x390
	UTextBlock* Text_TotalCount; // 0x398
	UTextBlock* TB_RCPtext; // 0x3a0
	UTextBlock* TB_GPoint; // 0x3a8
	UTextBlock* TB_Bar; // 0x3b0
	UCrowButton* BT_Confirm; // 0x3b8
	UCrowButton* BT_RCPBuy; // 0x3c0
	UCrowButton* BT_GCoinBuy; // 0x3c8
	UCrowButton* BT_NoncashBuy; // 0x3d0
	UHorizontalBox* HB_BTBuy; // 0x3d8
	UProgressBar* ProgressBar_Ing; // 0x3e0
	UProgressBar* ProgressBar_Complete; // 0x3e8
	FCrowRandomBoxTableRow CurrentBoxTable; // 0x400
};

struct UCrowChatTableManager {
	TArray<FString> SlangArray; // 0x28
	TMap<ECrowGameMode, FCrowModeEnableChatTableRow> ModeChatTypeList; // 0x38
};

struct UMagicLeapARPinContentBindings {
	TMap<FGuid, FMagicLeapARPinObjectIdList> AllContentBindings; // 0x28
};

struct UCrowTabMenuSocialWidget {
	UCrowSocialWidget* SocialWidget; // 0x380
};

struct ABP_CrowWeaponPartsLaserSight_Side_ADE_C {
	UCrowLaserBeamComponent* CrowLaserBeam; // 0x260
	UParticleSystemComponent* FX_Wp_LaserLight_M001; // 0x268
	USkeletalMeshComponent* ADE_LasersightSIDE; // 0x270
};

struct UMaterialExpressionCurveAtlasRowParameter {
	UCurveLinearColor* Curve; // 0x60
	UCurveLinearColorAtlas* Atlas; // 0x68
	FExpressionInput InputTime; // 0x70
};

struct UWaterSplineMetadata {
	FInterpCurveFloat Depth; // 0x28
	FInterpCurveFloat WaterVelocityScalar; // 0x40
	FInterpCurveFloat RiverWidth; // 0x58
	FInterpCurveFloat AudioIntensity; // 0x70
	FInterpCurveVector WaterVelocity; // 0x88
};

struct UChaosGameplayEventDispatcher {
	TMap<UPrimitiveComponent*, FChaosHandlerSet> CollisionEventRegistrations; // 0x1c8
	TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper> BreakEventRegistrations; // 0x218
};

struct UCrowSquadMatchRespawnMsgWidget {
	UTextBlock* TB_Timer_2; // 0x368
	UTextBlock* TB_Timer_Effect_2; // 0x370
	UWidgetAnimation* Ani_Show; // 0x378
	UWidgetAnimation* Ani_Countdown; // 0x380
};

struct UBlueprintCore {
	UObject* SkeletonGeneratedClass; // 0x28
	UObject* GeneratedClass; // 0x30
	bool bLegacyNeedToPurgeSkelRefs; // 0x38
	FGuid BlueprintGuid; // 0x3c
};

struct ABP_FoliageAffector_RocketLauncher_C {
	UCrowFoliageAffectorComponent* CrowFoliageAffector_Trail; // 0x238
	UCrowFoliageAffectorComponent* CrowFoliageAffector_AroundCharacter; // 0x240
	USceneComponent* DefaultSceneRoot; // 0x248
};

struct UARFaceComponent {
	EARFaceTransformMixing TransformSetting; // 0x278
	bool bUpdateVertexNormal; // 0x279
	bool bFaceOutOfScreen; // 0x27a
	FARFaceUpdatePayload ReplicatedPayload; // 0x280
};

struct ACrowWorldLightProbeVolumeActor {
	UCrowWorldLightProbeVolume* RootVolume; // 0x220
	bool ShowDebug; // 0x228
	FCrowWorldLightProbeSetting LightProbeSetting; // 0x22c
	FCrowWorldLightProbeVolumeSetting LightProbeVolumeSetting; // 0x278
};

struct UFixedFrameRateCustomTimeStep {
	FFrameRate FixedFrameRate; // 0x28
};

struct UWB_AreaWarning_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x360
	UWidgetAnimation* Ani_Loop; // 0x368
	UWidgetAnimation* Ani_Show; // 0x370
	UImage* Image_64; // 0x378
	UImage* Image_119; // 0x380
};

struct USoundNodeRandom {
	TArray<float> Weights; // 0x48
	TArray<bool> HasBeenUsed; // 0x58
	int32_t NumRandomUsed; // 0x68
	int32_t PreselectAtLevelLoad; // 0x6c
	char bShouldExcludeFromBranchCulling : 1; // 0x70
	char bSoundCueExcludedFromBranchCulling : 1; // 0x70
	char bRandomizeWithoutReplacement : 1; // 0x70
};

struct UWB_HUD_M1Abrams_Crosshair_Tusk_First_C {
	UBorder* b_Crosshair; // 0x438
	UImage* ImageCenter; // 0x440
	UImage* ImageCenterBorder; // 0x448
	UImage* ImageDown; // 0x450
	UImage* ImageDownBorder; // 0x458
	UImage* ImageLeft; // 0x460
	UImage* ImageLeftBorder; // 0x468
	UImage* ImageRight; // 0x470
	UImage* ImageRightBorder; // 0x478
	UImage* ImageUp; // 0x480
	UImage* ImageUpBorder; // 0x488
	UImage* IMG_Box_CrossHair; // 0x490
};

struct UMovieSceneGeometryCollectionSection {
	FMovieSceneGeometryCollectionParams Params; // 0xe8
};

struct UCrowCountdownWidget {
	UCanvasPanel* CP_Blocker; // 0x348
	UCanvasPanel* CP_Countdown_Normal; // 0x350
	UTextBlock* TB_Countdown_Normal; // 0x358
	UTextBlock* TB_Countdown_Normal_Effect; // 0x360
	UWidgetAnimation* AniCountNormal; // 0x368
	UCanvasPanel* CP_Countdown_Focus; // 0x370
	UTextBlock* TB_Countdown_Focus; // 0x378
	UTextBlock* TB_Countdown_Focus_Effect; // 0x380
	UWidgetAnimation* AniCountFocus; // 0x388
	UCrowRemainTimeSync* RemainTimeSync; // 0x398
	UAkAudioEvent* TotalCountSound; // 0x3a8
	UAkAudioEvent* FocusCountSound; // 0x3b8
};

struct USpaceCurveDeformationMechanicPropertySet {
	ESpaceCurveControlPointTransformMode TransformMode; // 0x60
	ESpaceCurveControlPointOriginMode TransformOrigin; // 0x64
	float Softness; // 0x68
	ESpaceCurveControlPointFalloffType SoftFalloff; // 0x6c
};

struct USourceEffectFoldbackDistortionPreset {
	FSourceEffectFoldbackDistortionSettings Settings; // 0x9c
};

struct UCrowWeaponAnimInstance {
	UCrowVehicleSightComponent* Sight; // 0x2b8
	TArray<FCrowWeaponAnimData> WeaponAnimDatas; // 0x2c0
	ACrowWeaponBase* WeaponActor; // 0x2d0
};

struct UMaterialExpressionLandscapeLayerCoords {
	ETerrainCoordMappingType MappingType; // 0x40
	ELandscapeCustomizedCoordType CustomUVType; // 0x41
	float MappingScale; // 0x44
	float MappingRotation; // 0x48
	float MappingPanU; // 0x4c
	float MappingPanV; // 0x50
};

struct UAnimationSharingManager {
	TArray<USkeleton*> Skeletons; // 0x28
	TArray<UAnimSharingInstance*> PerSkeletonData; // 0x38
};

struct UCameraComponent {
	float FieldOfView; // 0x1f8
	float OrthoWidth; // 0x1fc
	float OrthoNearClipPlane; // 0x200
	float OrthoFarClipPlane; // 0x204
	float AspectRatio; // 0x208
	char bConstrainAspectRatio : 1; // 0x20c
	char bUseFieldOfViewForLOD : 1; // 0x20c
	char bLockToHmd : 1; // 0x20c
	char bUsePawnControlRotation : 1; // 0x20c
	ECameraProjectionMode ProjectionMode; // 0x20d
	float PostProcessBlendWeight; // 0x240
	FPostProcessSettings PostProcessSettings; // 0x270
};

struct UMaterialExpressionStaticBoolParameter {
	char DefaultValue : 1; // 0x58
};

struct UPositionPlaneGizmo {
	UPreviewMesh* CenterBallShape; // 0x88
	UMaterialInstance* CenterBallMaterial; // 0x90
};

struct UNiagaraDataInterfaceRenderTarget2D {
	FIntPoint Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe0
	char bOverrideFormat : 1; // 0xe1
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTarget2D*> ManagedRenderTargets; // 0x108
};

struct ACrowWeaponCompositionC {
	float TimeToExplosion; // 0x1ed0
	float CurrentTimeToExplosion; // 0x1ed4
};

struct UTransformMeshesToolProperties {
	ETransformMeshesTransformMode TransformMode; // 0x60
	bool bSetPivot; // 0x61
	bool bEnableSnapDragging; // 0x62
	ETransformMeshesSnapDragSource SnapDragSource; // 0x63
	ETransformMeshesSnapDragRotationMode RotationMode; // 0x64
};

struct UCrowCustomUserSlotWidget {
	UCrowToggleButton* BT_Toggle; // 0x348
	UCrowButton* BT_Change; // 0x350
	UCrowButton* BT_Profile; // 0x358
	UCrowButton* BT_Kick; // 0x360
	UCrowWidgetImage* IMG_SessionLeader; // 0x368
	UTextBlock* TB_Username; // 0x370
	UWidgetSwitcher* WS_Status; // 0x378
	ECrowCustomTeamType TeamType; // 0x3d0
	char SquadIndex; // 0x3d1
	char SlotIndex; // 0x3d2
	FCrowCustomUserInfo CustomUserInfo; // 0x3d8
};

struct USoundNodeModulator {
	float PitchMin; // 0x48
	float PitchMax; // 0x4c
	float VolumeMin; // 0x50
	float VolumeMax; // 0x54
};

struct USubmixEffectConvolutionReverbPreset {
	UAudioImpulseResponse* ImpulseResponse; // 0x68
	FSubmixEffectConvolutionReverbSettings Settings; // 0x70
	ESubmixEffectConvolutionReverbBlockSize BlockSize; // 0x98
	bool bEnableHardwareAcceleration; // 0x99
};

struct UDatasmithCineCameraActorTemplate {
	FDatasmithCameraLookatTrackingSettingsTemplate LookatTrackingSettings; // 0x30
};

struct UWB_Crosshair_Mh6_HMG_First_C {
	UImage* IMG_Crosshair_Gauge_3; // 0x428
	UImage* IMG_Crosshair_Gauge_4; // 0x430
	UImage* IMG_Crosshair_Point_2; // 0x438
	UCrowWidgetImage* IMG_Down_3; // 0x440
	UCrowWidgetImage* IMG_Down_4; // 0x448
	UCrowWidgetImage* IMG_Left_3; // 0x450
	UCrowWidgetImage* IMG_Left_4; // 0x458
	UImage* IMG_Point; // 0x460
	UCrowWidgetImage* IMG_Right_3; // 0x468
	UCrowWidgetImage* IMG_Right_4; // 0x470
	UCrowWidgetImage* IMG_Up_3; // 0x478
	UCrowWidgetImage* IMG_Up_4; // 0x480
	UWB_Vehicle_Warning_Heli_C* WB_Vehicle_Damage; // 0x488
};

struct UParticleModuleBeamTarget {
	Beam2SourceTargetMethod TargetMethod; // 0x30
	FName TargetName; // 0x34
	FRawDistributionVector Target; // 0x40
	char bTargetAbsolute : 1; // 0x88
	char bLockTarget : 1; // 0x88
	Beam2SourceTargetTangentMethod TargetTangentMethod; // 0x8c
	FRawDistributionVector TargetTangent; // 0x90
	char bLockTargetTangent : 1; // 0xd8
	FRawDistributionFloat TargetStrength; // 0xe0
	char bLockTargetStength : 1; // 0x110
	float LockRadius; // 0x114
};

struct ULeaderboardQueryCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UPcMNew_FPBody_Test_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_CopyPoseFromMesh AnimGraphNode_CopyPoseFromMesh; // 0x2f8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x4d0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x5d8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x6e0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x700
	USkeletalMeshComponent* TargetMesh; // 0x720
};

struct USoundBase {
	USoundClass* SoundClassObject; // 0x30
	char bDebug : 1; // 0x38
	char bOverrideConcurrency : 1; // 0x38
	char bOutputToBusOnly : 1; // 0x38
	char bHasDelayNode : 1; // 0x38
	char bHasConcatenatorNode : 1; // 0x38
	char bBypassVolumeScaleForPriority : 1; // 0x38
	EVirtualizationMode VirtualizationMode; // 0x39
	TSet<USoundConcurrency*> ConcurrencySet; // 0x90
	FSoundConcurrencySettings ConcurrencyOverrides; // 0xe0
	float Duration; // 0x108
	float MaxDistance; // 0x10c
	float TotalSamples; // 0x110
	float Priority; // 0x114
	USoundAttenuation* AttenuationSettings; // 0x118
	FSoundModulationDefaultRoutingSettings ModulationSettings; // 0x120
	USoundSubmixBase* SoundSubmixObject; // 0x168
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x170
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x180
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x188
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x198
	TArray<UAssetUserData*> AssetUserData; // 0x1a8
};

struct UInterpTrackInstFloatAnimBPParam {
	UAnimInstance* AnimScriptInstance; // 0x28
	float ResetFloat; // 0x30
};

struct UMaterialExpressionFmod {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UParticleModuleTypeDataBeam2 {
	EBeam2Method BeamMethod; // 0x30
	int32_t TextureTile; // 0x34
	float TextureTileDistance; // 0x38
	int32_t Sheets; // 0x3c
	int32_t MaxBeamCount; // 0x40
	float Speed; // 0x44
	int32_t InterpolationPoints; // 0x48
	char bAlwaysOn : 1; // 0x4c
	int32_t UpVectorStepSize; // 0x50
	FName BranchParentName; // 0x54
	FRawDistributionFloat Distance; // 0x60
	EBeamTaperMethod TaperMethod; // 0x90
	FRawDistributionFloat TaperFactor; // 0x98
	FRawDistributionFloat TaperScale; // 0xc8
	char RenderGeometry : 1; // 0xf8
	char RenderDirectLine : 1; // 0xf8
	char RenderLines : 1; // 0xf8
	char RenderTessellation : 1; // 0xf8
};

struct UMediaTexture {
	TextureAddress AddressX; // 0xd8
	TextureAddress AddressY; // 0xd9
	bool AutoClear; // 0xda
	FLinearColor ClearColor; // 0xdc
	bool EnableGenMips; // 0xec
	char NumMips; // 0xed
	bool NewStyleOutput; // 0xee
	MediaTextureOutputFormat OutputFormat; // 0xef
	float CurrentAspectRatio; // 0xf0
	MediaTextureOrientation CurrentOrientation; // 0xf4
	UMediaPlayer* MediaPlayer; // 0xf8
};

struct UCameraModifier {
	char bDebug : 1; // 0x28
	char bExclusive : 1; // 0x28
	char Priority; // 0x2c
	APlayerCameraManager* CameraOwner; // 0x30
	float AlphaInTime; // 0x38
	float AlphaOutTime; // 0x3c
	float Alpha; // 0x40
};

struct ULoudnessNRTSettings {
	float AnalysisPeriod; // 0x28
	float MinimumFrequency; // 0x2c
	float MaximumFrequency; // 0x30
	ELoudnessNRTCurveTypeEnum CurveType; // 0x34
	float NoiseFloorDb; // 0x38
};

struct UCrowVehicleBoatEffect {
	UCrowVehicleBoatEffectSetting* BoatEffectSettingClass; // 0xc0
	UCrowVehicleBoatEffectSetting* BoatEffectSetting; // 0xc8
	ACrowVehiclePawn* VehiclePawn; // 0xd0
	UCrowVehicleParam* VehicleParam; // 0xd8
	UCrowVehicleFacadeBoat* VehicleFacade; // 0xe0
	UParticleSystemComponent* ParticleComponentDriving; // 0xe8
	UParticleSystemComponent* ParticleComponentIdle; // 0xf0
	FTransform ParticleComponentTransform; // 0x100
};

struct UEnvQueryTest_Project {
	FEnvTraceData ProjectionData; // 0x1f8
};

struct UCrowWorldDamageCheckerByAmmoType {
	char IgnoreAllPointDamage : 1; // 0x28
	char IgnoreAllRadialDamage : 1; // 0x28
	char IgnoreAllVehicleImpactDamage : 1; // 0x28
	char UseDamageMultiplyPhysicalMaterial : 1; // 0x28
	TMap<FString, FCrowWorldAmmoTypeDamageSetting> AmmoTypeSetting; // 0x30
	TMap<EVehicleIdentity, FCrowWorldAmmoTypeDamageSetting> VehicleImpactDamageByType; // 0x80
};

struct USkeletalMeshLODSettings {
	FPerPlatformInt MinLOD; // 0x30
	FPerPlatformBool DisableBelowMinLodStripping; // 0x34
	bool bOverrideLODStreamingSettings; // 0x35
	FPerPlatformBool bSupportLODStreaming; // 0x36
	FPerPlatformInt MaxNumStreamedLODs; // 0x38
	FPerPlatformInt MaxNumOptionalLODs; // 0x3c
	TArray<FSkeletalMeshLODGroupSettings> LODGroups; // 0x40
};

struct UAISense_Damage {
	TArray<FAIDamageEvent> RegisteredEvents; // 0x80
};

struct USubmixEffectFilterPreset {
	FSubmixEffectFilterSettings Settings; // 0x9c
};

struct UCLSCharacterMovement {
	bool bUseSlopeSpeedAtteunation; // 0xb00
	bool bUseSprintInhibitionSlope; // 0xb01
	FCLSSpeedAtteunationOnSlope SpeedAtteunationOnSlopeInfo; // 0xb04
	float StandedHalfHeight; // 0xb14
	float PronedHalfHeight; // 0xb18
	char bWantsToProne : 1; // 0xb1c
	char bWantsToSprint : 1; // 0xb1c
	char bWantsToWalk : 1; // 0xb1c
	char bWantsToLookFocus : 1; // 0xb1c
	float SwimImmersionDepth; // 0xb20
	FVector WaterPlaneLocation; // 0xb24
	FVector WaterWaveLocation; // 0xb30
	FVector WaterSurfaceNormal; // 0xb3c
	TWeakObjectPtr<APhysicsVolume> WaterVolumePtr; // 0xb48
	TWeakObjectPtr<AWaterBody> WaterBodyPtr; // 0xb50
	TWeakObjectPtr<AActor> WaterPlanePtr; // 0xb58
	float WaterBodyImmersionDepth; // 0xb60
	ACLSCharacter* CachedCharacter; // 0xb68
};

struct USoundAttenuation {
	FSoundAttenuationSettings Attenuation; // 0x28
};

struct UAkAudioBank {
	bool AutoLoad; // 0x58
	TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>> LocalizedPlatformAssetDataMap; // 0x60
	TSet<TSoftObjectPtr<UAkAudioEvent>> LinkedAkEvents; // 0xb0
	UAkAssetPlatformData* CurrentLocalizedPlatformAssetData; // 0x100
};

struct UCrowConquestGaugeNumber {
	UTextBlock* TB_Tick; // 0x348
};

struct ACrowServerOnlyCharSpawner {
	float SpawnDelay; // 0x220
	uint32_t SpawnCount; // 0x224
};

struct UWB_CrowWeaponCrosshairShotgun_C {
	UBorder* b_Crosshair; // 0x3a0
	UImage* ImageCenter; // 0x3a8
	UImage* ImageCenterBorder; // 0x3b0
	UImage* ImageDown; // 0x3b8
	UImage* ImageDownBorder; // 0x3c0
	UImage* ImageLeft; // 0x3c8
	UImage* ImageLeftBorder; // 0x3d0
	UImage* ImageRight; // 0x3d8
	UImage* ImageRightBorder; // 0x3e0
	UImage* ImageUp; // 0x3e8
	UImage* ImageUpBorder; // 0x3f0
};

struct UTusk_Anim_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	FAnimNode_Root AnimGraphNode_Root; // 0x2e8
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x318
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x328
	FAnimNode_Slot AnimGraphNode_Slot; // 0x348
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x390
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x3b0
	FAnimNode_VehicleWeaponHandler AnimGraphNode_VehicleWeapon_2; // 0x3d0
	FAnimNode_VehicleWeaponHandler AnimGraphNode_VehicleWeapon; // 0x4d0
};

struct UCrowCharacterDamageHandler {
	ACrowCharacterPawn* Character; // 0xb0
	UCrowBattleStatus* BattleStatus; // 0xb8
	FCharacterHitInfo LastTakeHitInfo; // 0xc0
};

struct UCrowVehicleWidgetHP {
	UProgressBar* PB_Hp; // 0x350
	UProgressBar* PB_HP_Damage; // 0x358
	UTextBlock* TXT_Hp; // 0x360
	UWidgetAnimation* AniHP_Low; // 0x368
};

struct UBrushSculptProperties {
	bool bIsRemeshingEnabled; // 0x60
	EDynamicMeshSculptBrushType PrimaryBrushType; // 0x61
	float PrimaryBrushSpeed; // 0x64
	bool bPreserveUVFlow; // 0x68
	bool bFreezeTarget; // 0x69
	float SmoothBrushSpeed; // 0x6c
	bool bDetailPreservingSmooth; // 0x70
};

struct UNetAnalyticsAggregatorConfig {
	TArray<FNetAnalyticsDataConfig> NetAnalyticsData; // 0x28
};

struct UAkInitBank {
	TArray<FString> AvailableAudioCultures; // 0x58
	FString DefaultLanguage; // 0x68
};

struct UCLSPlayerCameraAnimInstance {
	APawn* ControlledPawn; // 0x2b8
	ECLSMovementMode MovementMode; // 0x2c0
	ECLSMovementAction MovementAction; // 0x2c1
	ECLSRotationMode RotationMode; // 0x2c2
	ECLSGait Gait; // 0x2c3
	ECLSStance Stance; // 0x2c4
	ECLSBattleStance BattleStance; // 0x2c5
	ECLSViewMode ViewMode; // 0x2c6
	ECLSPeekState PeekState; // 0x2c7
	bool bIsMoving; // 0x2c8
	bool bRightShoulder; // 0x2c9
};

struct USkeletalMesh {
	USkeleton* Skeleton; // 0x80
	FBoxSphereBounds ImportedBounds; // 0x88
	FBoxSphereBounds ExtendedBounds; // 0xa4
	FVector PositiveBoundsExtension; // 0xc0
	FVector NegativeBoundsExtension; // 0xcc
	TArray<FSkeletalMaterial> Materials; // 0xd8
	TArray<FBoneMirrorInfo> SkelMirrorTable; // 0xe8
	TArray<FSkeletalMeshLODInfo> LODInfo; // 0xf8
	FPerPlatformInt MinLOD; // 0x158
	FPerPlatformBool DisableBelowMinLodStripping; // 0x15c
	EAxis SkelMirrorAxis; // 0x15d
	EAxis SkelMirrorFlipAxis; // 0x15e
	char bUseFullPrecisionUVs : 1; // 0x15f
	char bUseHighPrecisionTangentBasis : 1; // 0x15f
	char bHasBeenSimplified : 1; // 0x15f
	char bHasVertexColors : 1; // 0x15f
	char bEnablePerPolyCollision : 1; // 0x15f
	UBodySetup* BodySetup; // 0x160
	UPhysicsAsset* PhysicsAsset; // 0x168
	UPhysicsAsset* ShadowPhysicsAsset; // 0x170
	TArray<UNodeMappingContainer*> NodeMappingData; // 0x178
	TArray<UMorphTarget*> MorphTargets; // 0x188
	UAnimInstance* PostProcessAnimBlueprint; // 0x310
	TArray<UClothingAssetBase*> MeshClothingAssets; // 0x318
	FSkeletalMeshSamplingInfo SamplingInfo; // 0x328
	TArray<UAssetUserData*> AssetUserData; // 0x358
	TArray<USkeletalMeshSocket*> Sockets; // 0x368
	TArray<FSkinWeightProfileInfo> SkinWeightProfiles; // 0x388
};

struct UNodeMappingContainer {
	TMap<FName, FNodeItem> SourceItems; // 0x28
	TMap<FName, FNodeItem> TargetItems; // 0x78
	TMap<FName, FName> SourceToTarget; // 0xc8
	TSoftObjectPtr<UObject> SourceAsset; // 0x118
	TSoftObjectPtr<UObject> TargetAsset; // 0x140
};

struct URemoveOccludedTrianglesTool {
	URemoveOccludedTrianglesToolProperties* BasicProperties; // 0x90
	URemoveOccludedTrianglesAdvancedProperties* AdvancedProperties; // 0x98
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xa0
	TArray<UPreviewMesh*> PreviewCopies; // 0xb0
};

struct UCrowBombardTargetWidget {
	UCanvasPanel* CP_Timer; // 0x348
	UTextBlock* TB_Time; // 0x350
	UBorder* BD_Zone; // 0x358
};

struct UCrowShopItemSlotWidget {
	UImage* IMG_GoldIcon; // 0x348
	UCrowWidgetImage* IMG_Icon; // 0x350
	UImage* IMG_KeyOn; // 0x358
	UImage* IMG_KeyOff; // 0x360
	UImage* IMG_NewIcon; // 0x368
	UWidgetSwitcher* WS_ItemStatus; // 0x370
	UCrowButton* BT_Buy; // 0x378
	UCrowButton* WB_BT_Preview; // 0x380
	UTextBlock* TB_ItemName; // 0x388
	UTextBlock* TB_LimitTime; // 0x390
	UTextBlock* TB_ItemCount; // 0x398
	UTextBlock* TB_MoneyValue; // 0x3a0
	UTextBlock* TB_Bar; // 0x3a8
	UTextBlock* TB_GuageCount; // 0x3b0
	UTextBlock* TB_TotalCount; // 0x3b8
	UScaleBox* SCB_US; // 0x3c0
	UWidgetSwitcher* WS_Grade; // 0x3c8
	UWidgetSwitcher* WS_PayProgressBar; // 0x3d0
	UProgressBar* ProgressBar_Ing; // 0x3d8
	UCanvasPanel* CP_SlotButton; // 0x3e0
	UVerticalBox* VB_ItemNamePanel; // 0x3e8
	URichTextBlock* RTB_ComplateText; // 0x3f0
	UHorizontalBox* HB_ProgressText; // 0x3f8
	UCanvasPanel* CP_SoldOut; // 0x400
	ShopItemSlotType SlotType; // 0x408
	FCrowShopTableRow ShopTableData; // 0x410
	FCrowItemData ItemData; // 0x488
	UImage* IMG_Icon_Package; // 0x4b8
};

struct UAnimBoneCompressionSettings {
	TArray<UAnimBoneCompressionCodec*> Codecs; // 0x28
};

struct UDistributionVectorUniformCurve {
	FInterpCurveTwoVectors ConstantCurve; // 0x38
	char bLockAxes1 : 1; // 0x50
	char bLockAxes2 : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes[0x2]; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x56
	char bUseExtremes : 1; // 0x5c
};

struct ABP_Grenade_LoadoutBoxM18Ammo_C {
	USphereComponent* Sphere; // 0x1910
	USkeletalMeshComponent* SK_G67_02; // 0x1918
	UParticleSystemComponent* DynamicRicochet_Trail_Generic_thin; // 0x1920
};

struct UCrowStartPlaneRouteWidget {
	ACrowAirPlaneRespawnSplineActor* TargetAirSplineActor; // 0x348
	USizeBox* SB_PlaneLine; // 0x350
	UProgressBar* PB_Route_2; // 0x358
	UCanvasPanel* CP_StartPlane; // 0x360
};

struct UCrowSettingsTabWidget {
	UCrowWidgetToggleButton* BT_All; // 0x390
	UCrowWidgetToggleButton* BT_Display; // 0x398
	UCrowWidgetToggleButton* BT_Audio; // 0x3a0
	UCrowWidgetToggleButton* BT_CharacterInput; // 0x3a8
	UCrowWidgetToggleButton* BT_Gameplay; // 0x3b0
	UCrowWidgetToggleButton* BT_Control; // 0x3b8
	UCrowWidgetToggleButton* BT_Etc; // 0x3c0
	TArray<UCrowSettingsCategoryContentsWidget*> Categories; // 0x3c8
};

struct UDistributionVectorConstantCurve {
	FInterpCurveVector ConstantCurve; // 0x38
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
};

struct UCrowWorldSplineMeshContainer {
	AActor* ActorTemplate; // 0x1f8
	TArray<FCrowWorldSplineSegmentPropInfo> SegmentPropInfos; // 0x200
	TArray<FCrowWorldSplineSegmentMeshInfo> SegmentMeshInfos; // 0x210
	FCrowWorldSplineSegmentMeshInfo StartEndMeshInfos; // 0x220
};

struct UCrowCharacterAnimNotify_FootStep {
	ECrowCharacterFootStepType FootStepType; // 0x38
	float Loudness; // 0x3c
	FName BoneName; // 0x40
	FName ToeName; // 0x48
};

struct UParticleModuleAttractorLine {
	FVector EndPoint0; // 0x30
	FVector EndPoint1; // 0x3c
	FRawDistributionFloat Range; // 0x48
	FRawDistributionFloat Strength; // 0x78
};

struct ABP_CrowSpectatorIconActor_C {
	USceneComponent* DefaultSceneRoot; // 0x350
};

struct UFontFace {
	FString SourceFilename; // 0x30
	EFontHinting Hinting; // 0x40
	EFontLoadingPolicy LoadingPolicy; // 0x41
	EFontLayoutMethod LayoutMethod; // 0x42
};

struct UEnvQueryGenerator_OnCircle {
	FAIDataProviderFloatValue CircleRadius; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb8
	FAIDataProviderIntValue NumberOfPoints; // 0xf0
	EPointOnCircleSpacingMethod PointOnCircleSpacingMethod; // 0x128
	FEnvDirection ArcDirection; // 0x130
	FAIDataProviderFloatValue ArcAngle; // 0x150
	float AngleRadians; // 0x188
	UEnvQueryContext* CircleCenter; // 0x190
	bool bIgnoreAnyContextActorsWhenGeneratingCircle; // 0x198
	FAIDataProviderFloatValue CircleCenterZOffset; // 0x1a0
	FEnvTraceData TraceData; // 0x1d8
	char bDefineArc : 1; // 0x208
};

struct AEQSTestingPawn {
	UEnvQuery* QueryTemplate; // 0x4c0
	TArray<FEnvNamedValue> QueryParams; // 0x4c8
	TArray<FAIDynamicParam> QueryConfig; // 0x4d8
	float TimeLimitPerStep; // 0x4e8
	int32_t StepToDebugDraw; // 0x4ec
	EEnvQueryHightlightMode HighlightMode; // 0x4f0
	char bDrawLabels : 1; // 0x4f4
	char bDrawFailedItems : 1; // 0x4f4
	char bReRunQueryOnlyOnFinishedMove : 1; // 0x4f4
	char bShouldBeVisibleInGame : 1; // 0x4f4
	char bTickDuringGame : 1; // 0x4f4
	EEnvQueryRunMode QueryingMode; // 0x4f8
	FNavAgentProperties NavAgentProperties; // 0x500
};

struct ACrowWeaponKitShield {
	ACrowIronShieldActor* PreviewShieldActor; // 0x1ec0
};

struct UMaterialExpressionReflectionCapturePassSwitch {
	FExpressionInput Default; // 0x40
	FExpressionInput Reflection; // 0x54
};

struct UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	int32_t UCSSerializationIndex; // 0x84
	char bNetAddressable : 1; // 0x88
	char bReplicates : 1; // 0x88
	char bAutoActivate : 1; // 0x89
	char bIsActive : 1; // 0x8a
	char bEditableWhenInherited : 1; // 0x8a
	char bCanEverAffectNavigation : 1; // 0x8a
	char bIsEditorOnly : 1; // 0x8a
	EComponentCreationMethod CreationMethod; // 0x8c
	FMulticastSparseDelegate OnComponentActivated; // 0x8d
	FMulticastSparseDelegate OnComponentDeactivated; // 0x8e
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UPlatformInterfaceWebResponse {
	FString OriginalURL; // 0x28
	int32_t ResponseCode; // 0x38
	int32_t Tag; // 0x3c
	FString StringResponse; // 0x40
	TArray<char> BinaryResponse; // 0x50
};

struct UBorderSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UBrainComponent {
	UBlackboardComponent* BlackboardComp; // 0xb8
	AAIController* AIOwner; // 0xc0
};

struct UWidgetNavigation {
	FWidgetNavigationData Up; // 0x28
	FWidgetNavigationData Down; // 0x4c
	FWidgetNavigationData Left; // 0x70
	FWidgetNavigationData Right; // 0x94
	FWidgetNavigationData Next; // 0xb8
	FWidgetNavigationData Previous; // 0xdc
};

struct ACrowDeathZoneMesh {
	USceneComponent* Root; // 0x220
	ECrowTeam_RedBlue Team; // 0x228
};

struct UCrowPlaySettingWidget {
	UCrowButton* BT_WeaponSetting; // 0x348
	UCrowButton* BT_OutfitManagement; // 0x350
	UCrowButton* BT_ChangeCharaterAppearance; // 0x358
	UCrowButton* BT_Emotion; // 0x360
	UCrowButton* BT_Spray; // 0x368
	UCrowButton* BT_VehicleSkin; // 0x370
	UImage* IMG_OutfilNew; // 0x378
	UImage* IMG_AppearanceNew; // 0x380
	UImage* IMG_EmotionNew; // 0x388
	UImage* IMG_SprayNew; // 0x390
	UImage* IMG_VehicleNew; // 0x398
	UImage* IMG_WeaponNew; // 0x3a0
};

struct UCrowVehicleBoatFSM {
	float EngineStartTime; // 0x170
	float ShutDownTime; // 0x174
	FCrowVehicleBoatFxSetup FxSetup; // 0x178
};

struct UBookMark {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	TArray<FString> HiddenLevels; // 0x40
};

struct UEngineMessage {
	FString FailedPlaceMessage; // 0x28
	FString MaxedOutMessage; // 0x38
	FString EnteredMessage; // 0x48
	FString LeftMessage; // 0x58
	FString GlobalNameChange; // 0x68
	FString SpecEnteredMessage; // 0x78
	FString NewPlayerMessage; // 0x88
	FString NewSpecMessage; // 0x98
};

struct UTestMovieSceneTrack {
	bool bHighPassFilter; // 0x80
	TArray<UMovieSceneSection*> SectionArray; // 0x88
};

struct ACrowItemSpawnerGridActor {
	TMap<ACrowPlayerControllerBase*, int32_t> PlayerControllerMap; // 0x220
	TArray<FCrowControllerGridInfo> PlayerControllerArray; // 0x270
	TMap<uint32_t, FCrowSpawnerGridInfo> SpanwnerGridMap; // 0x280
	TArray<int32_t> CountArray; // 0x2d0
};

struct ABP_FoliageAffector_AssultRifle_C {
	UCrowFoliageAffectorComponent* CrowFoliageAffector_Trail; // 0x238
	UCrowFoliageAffectorComponent* CrowFoliageAffector; // 0x240
	USceneComponent* DefaultSceneRoot; // 0x248
};

struct USoundClass {
	FSoundClassProperties Properties; // 0x28
	TArray<USoundClass*> ChildClasses; // 0xa8
	TArray<FPassiveSoundMixModifier> PassiveSoundMixModifiers; // 0xb8
	USoundClass* ParentClass; // 0xc8
};

struct UInputBehaviorSet {
	TArray<FBehaviorInfo> Behaviors; // 0x28
};

struct UPolygonSelectionMechanicProperties {
	bool bSelectFaces; // 0x60
	bool bSelectEdges; // 0x61
	bool bSelectVertices; // 0x62
	bool bPreferProjectedElement; // 0x63
	bool bSelectDownRay; // 0x64
	bool bIgnoreOcclusion; // 0x65
};

struct UCrowBattlePassItemSlotWidget {
	UCrowBattlePassWidget* BattlePassWidget; // 0x348
	uint16_t NeededLevel; // 0x350
	int64_t NeededExp; // 0x358
	int64_t RequiredTotalExp; // 0x360
	FCrowRewardItem FreeRewardItem; // 0x368
	FCrowRewardItem PaidRewardItem; // 0x398
	bool bIsHoverdFreeItem; // 0x3c8
	bool bIsHoverdPaidItem; // 0x3c9
	bool bEnoughLevel; // 0x3ca
	bool bWasRewardedFreeItem; // 0x3cb
	bool bWasRewardedPaidItem; // 0x3cc
	UButton* BT_FreeItem; // 0x3d0
	UCanvasPanel* CP_FreeItem; // 0x3d8
	UImage* IMG_FreeItem_Inactive_BG; // 0x3e0
	UImage* IMG_FreeItem_Inactive_BG2; // 0x3e8
	UImage* IMG_FreeItem_Active_BG; // 0x3f0
	UImage* IMG_FreeItem_Active_BG2; // 0x3f8
	UImage* IMG_FreeItem; // 0x400
	UImage* IMG_FreeItem_Check; // 0x408
	UTextBlock* TB_Level; // 0x410
	UImage* IMG_Lock; // 0x418
	UProgressBar* PB_BattlePassExp; // 0x420
	UButton* BT_PaidItem; // 0x428
	UCanvasPanel* CP_PaidItem; // 0x430
	UImage* IMG_PaidItem_Inactive_BG; // 0x438
	UImage* IMG_PaidItem_Inactive_BG2; // 0x440
	UImage* IMG_PaidItem_Active_BG; // 0x448
	UImage* IMG_PaidItem_Active_BG2; // 0x450
	UImage* IMG_PaidItem; // 0x458
	UImage* IMG_PaidItem_Check; // 0x460
};

struct UCrowPingTableManager {
	TMap<ECrowPingType, FCrowPingTableRow> PingData; // 0x28
};

struct UAkSwitchInitializationSettings {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithCommSelection CommunicationSettings; // 0x90
	FAkAdvancedInitializationSettingsWithMultiCoreRendering AdvancedSettings; // 0xb8
};

struct UCrowBinderActorComponent {
	UCrowComponentContainer* OwnerContainer; // 0xb0
	AActor* CrowComponentOwnerActor; // 0xb8
};

struct UCrowWeaponPartsMuzzle {
	FCrowWeaponPartsMuzzleTableRow PartsTable; // 0x320
	FCrowWeaponPartsMuzzleTableRow DefaultPartsData; // 0x690
};

struct USlider {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	float MinValue; // 0x11c
	float MaxValue; // 0x120
	FSliderStyle WidgetStyle; // 0x128
	EOrientation Orientation; // 0x468
	FLinearColor SliderBarColor; // 0x46c
	FLinearColor SliderHandleColor; // 0x47c
	bool IndentHandle; // 0x48c
	bool Locked; // 0x48d
	bool MouseUsesStep; // 0x48e
	bool RequiresControllerLock; // 0x48f
	float StepSize; // 0x490
	bool IsFocusable; // 0x494
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x498
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x4a8
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x4b8
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x4c8
	FMulticastInlineDelegate OnValueChanged; // 0x4d8
};

struct UParticleModuleAttractorPointGravity {
	FVector position; // 0x30
	float Radius; // 0x3c
	UDistributionFloat* Strength; // 0x40
	FRawDistributionFloat StrengthRaw; // 0x48
};

struct URadialForceComponent {
	float Radius; // 0x1f8
	ERadialImpulseFalloff Falloff; // 0x1fc
	float ImpulseStrength; // 0x200
	char bImpulseVelChange : 1; // 0x204
	char bIgnoreOwningActor : 1; // 0x204
	float ForceStrength; // 0x208
	float DestructibleDamage; // 0x20c
	TArray<EObjectTypeQuery> ObjectTypesToAffect; // 0x210
};

struct UAnimationAsset {
	USkeleton* Skeleton; // 0x38
	TArray<UAnimMetaData*> MetaData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct UBTDecorator_IsBBEntryOfClass {
	UObject* TestClass; // 0x90
};

struct UGizmoAxisTranslationParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float Parameter; // 0xb0
	FGizmoFloatParameterChange LastChange; // 0xb4
	FVector CurTranslationAxis; // 0xbc
	FVector CurTranslationOrigin; // 0xc8
	FTransform InitialTransform; // 0xe0
};

struct ACrowWorldPingAliveActor {
	USceneComponent* SceneRoot; // 0x220
};

struct UIterativeSmoothProperties {
	float SmoothingPerStep; // 0x60
	int32_t Steps; // 0x64
	bool bSmoothBoundary; // 0x68
};

struct UAkPS4InitializationSettings {
	FAkCommonInitializationSettings CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x88
	FAkPS4AdvancedInitializationSettings AdvancedSettings; // 0xb0
};

struct UCrowIndicatorInfo {
	UCanvasPanel* CP_IndicatorInSide; // 0x378
	UCanvasPanel* CP_LocateArrow; // 0x380
	UCanvasPanel* CP_VehicleIcon; // 0x388
	UCanvasPanel* CP_MyTeamIcon; // 0x390
	UVerticalBox* VB_DriverNickName; // 0x398
	UVerticalBox* VB_UserNickName; // 0x3a0
	UVerticalBox* VB_Name; // 0x3a8
	UTextBlock* TB_UserDistance; // 0x3b0
	UTextBlock* TB_VehicleName; // 0x3b8
	UTextBlock* TB_VehicleDistance; // 0x3c0
	ACrowPlayerControllerBase* LocalPlayerController; // 0x3c8
	ACrowPlayerStateBase* LocalPlayerState; // 0x3d0
	ACrowPlayerStateBase* TargetPlayerState; // 0x3d8
	USizeBox* SB_MyTeam; // 0x3e0
	USizeBox* SB_Vehicle; // 0x3e8
	UTextBlock* TB_UserNickName; // 0x3f0
	UImage* IMG_VehicleIcon; // 0x3f8
	UWidgetSwitcher* WS_AllyIcon; // 0x400
	UImage* IMG_Icon_SquadLeader; // 0x408
	UImage* IMG_Squad_Color; // 0x410
	UWidgetSwitcher* WS_StatusIcon; // 0x418
	UTextBlock* TB_SquadNum; // 0x420
	UImage* IMG_2ndWindGauge; // 0x428
	UMaterialInstanceDynamic* GaugeMaterial; // 0x430
	FSlateBrush IMG_Icon_Tank; // 0x440
	FSlateBrush IMG_Icon_Helicopter; // 0x4c8
	FSlateBrush IMG_Icon_Car; // 0x550
	FSlateBrush IMG_Icon_Boat; // 0x5d8
	FLinearColor colorVehicleEmpty; // 0x660
	FLinearColor colorVehicleMyTeam; // 0x670
	FLinearColor colorVehicleMySquad; // 0x680
	AActor* TargetActor; // 0x690
	EIndicatorType indicatorType; // 0x698
	FCrowGameIconDisplayInfo DisplayInfo; // 0x6a0
	FName StopBleedingAnimName; // 0x728
	FName FastBleedingAnimName; // 0x730
	FName CallHelpAnimName; // 0x738
};

struct UCrowWorldAssetLightProbe {
	FTransform LightPathTransform; // 0x30
	FVector SeperationNormalFromSurface; // 0x60
	float OpenRatio; // 0x6c
};

struct UCrowRespawnSelectInfoWidget {
	UImage* IMG_BackGround; // 0x348
	UButton* BTN_Respawn; // 0x350
	UWidgetSwitcher* WS_Status; // 0x358
	UTextBlock* TB_Respawn; // 0x360
	UTextBlock* TB_Disable; // 0x368
	UBorder* BD_RespawnDisable; // 0x370
	FLinearColor RespawnWaitColor; // 0x378
	FLinearColor RespawnPossibleColor; // 0x388
	FLinearColor RespawnImpossibleColor; // 0x398
	UCanvasPanel* IconPanel; // 0x3a8
	TMap<uint32_t, UCrowRespawnButton*> RespawnButtonMap; // 0x3b0
	ECrowRespawnSelecteInfoWidgetState State; // 0x400
	UCrowRespawnMapWidget* RespawnMapWidget; // 0x408
	UCrowWidgetConquestVehicleButton* VehicleSpawnerButton; // 0x410
	float WaitSeconds; // 0x418
};

struct UMaterialExpressionWorldPosition {
	EWorldPositionIncludedOffsets WorldPositionShaderOffset; // 0x40
};

struct UBaseCreateFromSelectedTool {
	UTransformInputsToolProperties* TransformProperties; // 0x98
	UBaseCreateFromSelectedHandleSourceProperties* HandleSourcesProperties; // 0xa0
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xa8
	TArray<UTransformProxy*> TransformProxies; // 0xb0
	TArray<UTransformGizmo*> TransformGizmos; // 0xc0
	TArray<FVector> TransformInitialScales; // 0xd0
};

struct UCrowWorldDestructionAUD {
	UStaticMesh* RemainMesh; // 0x28
	TArray<UMaterialInterface*> RemainMeshMaterialOverrides; // 0x30
	TArray<FCrowWorldDestructionMeshData> AdditionalRemainMesh; // 0x40
	FName RemainMeshCollisionProfileName; // 0x50
	UStaticMesh* TemporalMesh; // 0x58
	TArray<UMaterialInterface*> TemporalMeshMaterialOverrides; // 0x60
	FName TemporalMeshCollisionProfileName; // 0x70
	bool UseCollapseByImpact; // 0x78
	bool UseExplosionByDamage; // 0x79
	FCrowWorldDestructionSetting CollapseSetting; // 0x80
	FCrowWorldDestructionSetting ExplosionSetting; // 0x1c0
};

struct UMaterialParameterCollection {
	FGuid StateId; // 0x28
	TArray<FCollectionScalarParameter> ScalarParameters; // 0x38
	TArray<FCollectionVectorParameter> VectorParameters; // 0x48
};

struct UMovieSceneStringSection {
	FMovieSceneStringChannel StringCurve; // 0xe8
};

struct UUPSPatrolVisualizer {
	TArray<FUPSPatrolPointPathData> PatrolPointsPathData; // 0x68
	TArray<FUPSPatrolComponentPathData> PatrolComponentsPathData; // 0x78
	TArray<FVisitedPoint> VisitedPoints; // 0x88
};

struct UPrimitiveComponent {
	float MinDrawDistance; // 0x200
	float LDMaxDrawDistance; // 0x204
	float CachedMaxDrawDistance; // 0x208
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x20c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x20d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x20e
	ELightmapType LightmapType; // 0x20f
	char bUseMaxLODAsImposter : 1; // 0x210
	char bBatchImpostersAsInstances : 1; // 0x210
	char bNeverDistanceCull : 1; // 0x210
	char bAlwaysCreatePhysicsState : 1; // 0x210
	char bGenerateOverlapEvents : 1; // 0x211
	char bMultiBodyOverlap : 1; // 0x211
	char bTraceComplexOnMove : 1; // 0x211
	char bReturnMaterialOnMove : 1; // 0x211
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x211
	char bAllowCullDistanceVolume : 1; // 0x211
	char bHasMotionBlurVelocityMeshes : 1; // 0x211
	char bVisibleInReflectionCaptures : 1; // 0x211
	char bVisibleInRealTimeSkyCaptures : 1; // 0x212
	char bVisibleInRayTracing : 1; // 0x212
	char bRenderInMainPass : 1; // 0x212
	char bRenderInDepthPass : 1; // 0x212
	char bReceivesDecals : 1; // 0x212
	char bOwnerNoSee : 1; // 0x212
	char bOnlyOwnerSee : 1; // 0x212
	char bTreatAsBackgroundForOcclusion : 1; // 0x212
	char bUseAsOccluder : 1; // 0x213
	char bSelectable : 1; // 0x213
	char bForceMipStreaming : 1; // 0x213
	char bHasPerInstanceHitProxies : 1; // 0x213
	char CastShadow : 1; // 0x213
	char bAffectDynamicIndirectLighting : 1; // 0x213
	char bAffectDistanceFieldLighting : 1; // 0x213
	char bCastDynamicShadow : 1; // 0x213
	char bCastStaticShadow : 1; // 0x214
	char bCastVolumetricTranslucentShadow : 1; // 0x214
	char bCastContactShadow : 1; // 0x214
	char bSelfShadowOnly : 1; // 0x214
	char bCastFarShadow : 1; // 0x214
	char bCastInsetShadow : 1; // 0x214
	char bCastCinematicShadow : 1; // 0x214
	char bCastHiddenShadow : 1; // 0x214
	char bCastShadowAsTwoSided : 1; // 0x215
	char bLightAsIfStatic : 1; // 0x215
	char bLightAttachmentsAsGroup : 1; // 0x215
	char bExcludeFromLightAttachmentGroup : 1; // 0x215
	char bReceiveMobileCSMShadows : 1; // 0x215
	char bSingleSampleShadowFromStationaryLights : 1; // 0x215
	char bIgnoreRadialImpulse : 1; // 0x215
	char bIgnoreRadialForce : 1; // 0x215
	char bApplyImpulseOnDamage : 1; // 0x216
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x216
	char bFillCollisionUnderneathForNavmesh : 1; // 0x216
	char AlwaysLoadOnClient : 1; // 0x216
	char AlwaysLoadOnServer : 1; // 0x216
	char bUseEditorCompositing : 1; // 0x216
	char bRenderCustomDepth : 1; // 0x216
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x217
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x219
	FLightingChannels LightingChannels; // 0x21a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x21b
	int32_t CustomDepthStencilValue; // 0x21c
	FCustomPrimitiveData CustomPrimitiveData; // 0x220
	FCustomPrimitiveData CustomPrimitiveDataInternal; // 0x230
	int32_t TranslucencySortPriority; // 0x248
	int32_t VisibilityId; // 0x24c
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x250
	int8_t VirtualTextureLodBias; // 0x260
	int8_t VirtualTextureCullMips; // 0x261
	int8_t VirtualTextureMinCoverage; // 0x262
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x263
	float LpvBiasMultiplier; // 0x268
	float BoundsScale; // 0x274
	TArray<AActor*> MoveIgnoreActors; // 0x288
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x298
	FBodyInstance BodyInstance; // 0x2b8
	FMulticastSparseDelegate OnComponentHit; // 0x410
	FMulticastSparseDelegate OnComponentBeginOverlap; // 0x411
	FMulticastSparseDelegate OnComponentEndOverlap; // 0x412
	FMulticastSparseDelegate OnComponentWake; // 0x413
	FMulticastSparseDelegate OnComponentSleep; // 0x414
	FMulticastSparseDelegate OnBeginCursorOver; // 0x416
	FMulticastSparseDelegate OnEndCursorOver; // 0x417
	FMulticastSparseDelegate OnClicked; // 0x418
	FMulticastSparseDelegate OnReleased; // 0x419
	FMulticastSparseDelegate OnInputTouchBegin; // 0x41a
	FMulticastSparseDelegate OnInputTouchEnd; // 0x41b
	FMulticastSparseDelegate OnInputTouchEnter; // 0x41c
	FMulticastSparseDelegate OnInputTouchLeave; // 0x41d
	UPrimitiveComponent* LODParentPrimitive; // 0x438
};

struct UMaterialExpressionOneMinus {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionGetMaterialAttributes {
	FMaterialAttributesInput MaterialAttributes; // 0x40
	TArray<FGuid> AttributeGetTypes; // 0x58
};

struct UNiagaraDataInterfaceAudioSubmix {
	USoundSubmix* Submix; // 0x38
};

struct USimpleConstructionScript {
	TArray<USCS_Node*> RootNodes; // 0x28
	TArray<USCS_Node*> AllNodes; // 0x38
	USCS_Node* DefaultSceneRootNode; // 0x48
};

struct UMovieSceneGeometryCacheTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
};

struct ACrowKitBomberTarget {
	int32_t IndicatorTime; // 0x230
	bool IsCoolTiming; // 0x234
	float DecalSize; // 0x238
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x240
	UCrowKitBomberTargetIcon* IndicatorWidget; // 0x2c8
	USceneComponent* RootComp; // 0x2d0
	UDecalComponent* DecalComponent; // 0x2d8
	float DestroyTime; // 0x2e0
	float CurrentTime; // 0x2e4
};

struct UCrowMedalAniWidgetBase {
	float DelayTime; // 0x348
	float CurrTime; // 0x34c
	TArray<UWidgetAnimation*> AnimationList; // 0x360
	int32_t CurrentAniIndex; // 0x370
	bool IsPlayingFinishAni; // 0x374
};

struct UCrowCategoryAppearanceWidget {
	UVerticalBox* VB_Custmize_Appearance; // 0x348
	UHorizontalBox* HB_Appearance; // 0x350
	UCrowCustomAppearanceListWidget* CustomAppearanceListWidget; // 0x358
	TArray<UCrowCategorySlotBigWidget*> AppearanceSlotWidgetArray; // 0x360
	ACrowSceneLobby* SceneLobby; // 0x370
};

struct UCrowMissionAreaFirstRespawn {
	TArray<FCrowFirstRespawnInfo> PlayerArray; // 0x220
};

struct ULakeCollisionComponent {
	UBodySetup* CachedBodySetup; // 0x440
	FVector BoxExtent; // 0x448
};

struct ACrowSquadIconActor {
	UBoxComponent* BoxComponent; // 0x220
	USceneComponent* IconLocation; // 0x228
	ACrowPlayerStateBase* PlayerState; // 0x230
	UCrowWorldMapIcon* WorldMapIcon; // 0x238
	UCrowIndicatorViewInfo* Indicator; // 0x240
};

struct USpaceCurveDeformationMechanic {
	USingleClickInputBehavior* ClickBehavior; // 0x40
	UMouseHoverBehavior* HoverBehavior; // 0x48
	USpaceCurveDeformationMechanicPropertySet* TransformProperties; // 0x68
	APreviewGeometryActor* PreviewGeometryActor; // 0x168
	UPointSetComponent* RenderPoints; // 0x170
	ULineSetComponent* RenderSegments; // 0x178
	UTransformProxy* PointTransformProxy; // 0x1b8
	UTransformGizmo* PointTransformGizmo; // 0x1c0
};

struct UCrowRecordWeaponInfoSlotWidget {
	UCrowButton* BT_Customize_List_Slot; // 0x358
	UImage* IMG_Selected; // 0x360
	UImage* IMGHover; // 0x368
	UImage* IMGSelected; // 0x370
	UImage* IMGIcon; // 0x378
	UTextBlock* TBName; // 0x380
	UTextBlock* TBLv; // 0x388
	UProgressBar* PBLv; // 0x390
	uint32_t Index; // 0x398
};

struct UCrowScoreRankSlotGradeData {
	uint32_t Rank; // 0x30
	FText Class; // 0x38
	uint32_t Level; // 0x50
	FString ID; // 0x58
	uint32_t Score; // 0x68
	FString PlayTime; // 0x70
	uint32_t PlayCount; // 0x80
};

struct UBTTask_BlueprintBase {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	FIntervalCountdown TickInterval; // 0x80
	char bShowPropertyDetails : 1; // 0xa0
};

struct UCrowStatusEquipItemBar {
	UPaperSprite* EquipImage; // 0x348
	FLinearColor EquipColor; // 0x350
	FLinearColor UnEquipColor; // 0x360
	ECrowEquipmentSlotType EquipSlotType; // 0x370
	UWidgetSwitcher* WS_EquipStatus; // 0x378
	UWidgetSwitcher* WS_Item_Tier; // 0x380
	UImage* IMG_Equip; // 0x388
	UImage* IMG_UnEquip; // 0x390
	UCrowProgressBar* PB_Bar; // 0x398
	UTextBlock* TB_Percent; // 0x3a0
};

struct URevolveBoundaryTool {
	URevolveBoundaryToolProperties* Settings; // 0x160
	UNewMeshMaterialProperties* MaterialProperties; // 0x168
	UConstructionPlaneMechanic* PlaneMechanic; // 0x170
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0x178
};

struct UMasterAudioSubmixCaptureProtocol {
	FString Filename; // 0x58
};

struct UWB_KitBomberIndicator_C {
	UImage* IMG_Icon; // 0x3c8
};

struct ASceneCapture {
	UStaticMeshComponent* MeshComp; // 0x220
	USceneComponent* SceneComponent; // 0x228
};

struct UPawnAction_Wait {
	float TimeToWait; // 0x98
};

struct UEnvQueryGenerator_BlueprintBase {
	FText GeneratorsActionDescription; // 0x50
	UEnvQueryContext* Context; // 0x68
	UEnvQueryItemType* GeneratedItemType; // 0x70
};

struct UCrowCategorySlotSmallWidget {
	UImage* IMG_Selected; // 0x348
	UImage* IMG_New; // 0x350
	UCrowButton* BT_Customize_SmallSlot; // 0x358
	UTextBlock* TB_CategoryName; // 0x360
	UWidgetSwitcher* WS_ItemIMG; // 0x368
	UImage* IMG_IconIMG_Category; // 0x370
	UImage* IMG_IconIMG_Item; // 0x378
	FText CategoryContentsName; // 0x390
	FSlateBrush CategoryDefaultImage; // 0x3a8
	FSlateBrush CategoryItemImage; // 0x430
	ECrowItemType ItemCategoryType; // 0x4b8
	ECrowCharacterAppearanceType AppearanceCategoryType; // 0x4b9
	bool Equiped; // 0x4ba
	bool Disabled; // 0x4bb
	UTextBlock* TBCategoryName_Sel; // 0x4c0
	bool Selected; // 0x4c8
	int32_t ButtonIndex; // 0x4cc
};

struct ACrowVehicleDestroyedBase {
	USkeletalMeshComponent* Body; // 0x220
	float LifeTime; // 0x228
	FCrowVehicleDamageSetup DamageSetup; // 0x230
	bool IsExplosion; // 0x2d0
	UAkAudioEvent* ExplosionSound; // 0x2d8
	FName ExplosionSoundAttachedSocketName; // 0x2e0
	UAkAudioEvent* FireSound; // 0x2e8
	UAkAudioEvent* FireStopSound; // 0x2f0
	FName FireSoundAttachedSocketName; // 0x2f8
	UParticleSystem* FXExplosion; // 0x300
	UNiagaraSystem* FxExplosion_N; // 0x308
	FName FxExplosionAttachedSocketName; // 0x310
	UParticleSystem* FxFire; // 0x318
	UNiagaraSystem* FxFire_N; // 0x320
	FName FxFireAttachedSocketName; // 0x328
	UParticleSystem* FxSmoke; // 0x330
	UNiagaraSystem* FxSmoke_N; // 0x338
	FName FxSmokeAttachedSocketName; // 0x340
	UParticleSystem* DestroyEffect; // 0x348
	UAkAudioEvent* DestroySound; // 0x350
	UMatineeCameraShake* CameraShake; // 0x358
	float OuterRadius; // 0x360
	bool OrientShakeTowardsEpicenter; // 0x364
	FVector AddForce; // 0x368
	FName AddForceBoneName; // 0x374
	UBoxComponent* ExplosionBurningArea; // 0x380
	float BurningAreaDamageTerm; // 0x388
	float BurningAreaDamage; // 0x38c
	float HP; // 0x390
	UParticleSystemComponent* DestroyFireFxComp; // 0x398
	UParticleSystemComponent* DestroySmokeFxComp; // 0x3a0
};

struct ACrowConquestFlagActor {
	UBoxComponent* Root; // 0x220
	float Top; // 0x228
	float Bottom; // 0x22c
	UMaterialInterface* RedTeamMaterial; // 0x230
	UMaterialInterface* BlueTeamMaterial; // 0x238
	UMaterialInterface* NoTeamMaterial; // 0x240
	UAnimMontage* AniIdle; // 0x248
	UAnimMontage* AniStart; // 0x250
	UAnimMontage* AniLoop; // 0x258
	UAnimMontage* AniEnd; // 0x260
	UParticleSystem* EffectGlow; // 0x268
	UParticleSystem* EffectSmoke; // 0x270
	UParticleSystem* EffectFloorSmoke; // 0x278
	UParticleSystem* EffectLCD_On; // 0x280
	UParticleSystem* EffectLCD_Off; // 0x288
	UParticleSystemComponent* EffectGlowComponent; // 0x290
	UParticleSystemComponent* EffectSmokeComponent; // 0x298
	UParticleSystemComponent* EffectFloorSmokeComponent; // 0x2a0
	UParticleSystemComponent* EffectLCD_OnComponent; // 0x2a8
	UParticleSystemComponent* EffectLCD_OffComponent; // 0x2b0
	ACrowConquestArea* TargetActor; // 0x2b8
	UMeshComponent* FlagMeshComponent; // 0x2c0
	USkeletalMeshComponent* BodyMeshComponent; // 0x2c8
};

struct USubmixEffectMultibandCompressorPreset {
	FSubmixEffectMultibandCompressorSettings Settings; // 0xb0
};

struct UNiagaraSystem {
	bool bDumpDebugSystemInfo; // 0x30
	bool bDumpDebugEmitterInfo; // 0x31
	bool bRequireCurrentFrameData; // 0x32
	char bFixedBounds : 1; // 0x34
	UNiagaraEffectType* EffectType; // 0x38
	bool bOverrideScalabilitySettings; // 0x40
	TArray<FNiagaraSystemScalabilityOverride> ScalabilityOverrides; // 0x48
	FNiagaraSystemScalabilityOverrides SystemScalabilityOverrides; // 0x58
	TArray<FNiagaraEmitterHandle> EmitterHandles; // 0x68
	TArray<UNiagaraParameterCollectionInstance*> ParameterCollectionOverrides; // 0x78
	UNiagaraScript* SystemSpawnScript; // 0x88
	UNiagaraScript* SystemUpdateScript; // 0x90
	FNiagaraSystemCompiledData SystemCompiledData; // 0xa8
	FNiagaraUserRedirectionParameterStore ExposedParameters; // 0x2c0
	FBox FixedBounds; // 0x388
	bool bAutoDeactivate; // 0x3a4
	float WarmupTime; // 0x3a8
	int32_t WarmupTickCount; // 0x3ac
	float WarmupTickDelta; // 0x3b0
	bool bHasSystemScriptDIsWithPerInstanceData; // 0x3b4
	TArray<FName> UserDINamesReadInSystemScripts; // 0x3b8
};

struct UCrowCompositionCAreaIconWidget {
	UCanvasPanel* CPRoot; // 0x348
	UCanvasPanel* CPLocateArrow; // 0x350
	UCanvasPanel* CPIcon; // 0x358
	UTextBlock* TBName; // 0x360
	UTextBlock* TBDistance; // 0x368
	UImage* IMGBase; // 0x370
	bool bIsPlantCompositionC; // 0x378
	bool bIsNearPlantCompositionC; // 0x379
	int32_t DistanceDisplayCompositinCColorWhenPlant; // 0x37c
	FLinearColor NormalColor; // 0x380
	FLinearColor PlantCompositionCColor; // 0x390
};

struct ACrowGameModeTDM {
	char bIsFriendlyFire : 1; // 0x4d0
	bool bIsTeamBalance; // 0x4d1
	uint32_t TeamKillLimit; // 0x4d4
	FCrowTeamInfo WinnerTeam; // 0x4d8
};

struct UCrowTabOutfitWidget {
	char CurrentSelectIndex; // 0x390
};

struct UCrowToastMessageWidget {
	URichTextBlock* RTB_Message; // 0x348
	UCrowWidgetTweenAlpha* AlphaTweener; // 0x350
};

struct UCrowVehicleWidgetSeatList {
	TArray<UCrowVehicleWidgetSeatCell*> SeatCellWidgets; // 0x398
};

struct ACrowPlayerCameraManager {
	UCrowDeathCameraComponent* DeathCameraComponent; // 0x2868
};

struct UCrowIconZOrderTableManager {
	TArray<FCrowIconZOrderTableRow> TableArray; // 0x28
};

struct UCrowWeaponPartsListWidget {
	UPaperSprite* StockSprite; // 0x348
	UPaperSprite* PistolGripSprite; // 0x350
	UPaperSprite* MagazineSprite; // 0x358
	UPaperSprite* UnderBarrelSprite; // 0x360
	UPaperSprite* BarrelSprite; // 0x368
	UPaperSprite* MuzzleSprite; // 0x370
	UPaperSprite* SecondarySightSprite; // 0x378
	UPaperSprite* PrimarySightSprite; // 0x380
	UPaperSprite* SideBarrelSprite; // 0x388
	UCrowWeaponPartItemWidget* Stock; // 0x390
	UCrowWeaponPartItemWidget* PistolGrip; // 0x398
	UCrowWeaponPartItemWidget* Magazine; // 0x3a0
	UCrowWeaponPartItemWidget* SideBarrel; // 0x3a8
	UCrowWeaponPartItemWidget* PrimarySight; // 0x3b0
	UCrowWeaponPartItemWidget* UnderBarrel; // 0x3b8
	UCrowWeaponPartItemWidget* SecondarySight; // 0x3c0
	UCrowWeaponPartItemWidget* Barrel; // 0x3c8
	UCrowWeaponPartItemWidget* Muzzle; // 0x3d0
	USizeBox* SB_Slot_Stock; // 0x3d8
	USizeBox* SB_Slot_PistolGrip; // 0x3e0
	USizeBox* SB_Slot_Magazine; // 0x3e8
	USizeBox* SB_Slot_SecondarySight; // 0x3f0
	USizeBox* SB_Slot_PrimarySight; // 0x3f8
	USizeBox* SB_Slot_UnderBarrel; // 0x400
	USizeBox* SB_Slot_SideBarrel; // 0x408
	USizeBox* SB_Slot_Barrel; // 0x410
	USizeBox* SB_Slot_Muzzle; // 0x418
	TArray<USizeBox*> SizeBoxArray; // 0x420
	TArray<UCrowWeaponPartItemWidget*> PartsArray; // 0x430
	TArray<UPaperSprite*> DefaultTextureArray; // 0x440
	UCrowInvenWeaponInfoWidget* WeaponInfoWidget; // 0x450
	bool IsPictogramIcon; // 0x458
};

struct ATextRenderActor {
	UTextRenderComponent* TextRender; // 0x220
};

struct UCableComponent {
	bool bAttachStart; // 0x468
	bool bAttachEnd; // 0x469
	FComponentReference AttachEndTo; // 0x470
	FName AttachEndToSocketName; // 0x498
	FVector EndLocation; // 0x4a0
	float CableLength; // 0x4ac
	int32_t NumSegments; // 0x4b0
	float SubstepTime; // 0x4b4
	int32_t SolverIterations; // 0x4b8
	bool bEnableStiffness; // 0x4bc
	bool bUseSubstepping; // 0x4bd
	bool bSkipCableUpdateWhenNotVisible; // 0x4be
	bool bSkipCableUpdateWhenNotOwnerRecentlyRendered; // 0x4bf
	bool bEnableCollision; // 0x4c0
	float CollisionFriction; // 0x4c4
	FVector CableForce; // 0x4c8
	float CableGravityScale; // 0x4d4
	float CableWidth; // 0x4d8
	int32_t NumSides; // 0x4dc
	float TileMaterial; // 0x4e0
};

struct ACrowWeaponDummyParts {
	UBoxComponent* BoxComponent; // 0x220
	UMeshComponent* MeshComponent; // 0x228
};

struct UBrushBaseProperties {
	float BrushSize; // 0x60
	bool bSpecifyRadius; // 0x64
	float BrushRadius; // 0x68
	float BrushStrength; // 0x6c
	float BrushFalloffAmount; // 0x70
	bool bShowStrength; // 0x74
	bool bShowFalloff; // 0x75
};

struct UMaterialExpressionTextureSampleParameterSubUV {
	char bBlend : 1; // 0x80
};

struct UThrobber {
	int32_t NumberOfPieces; // 0x108
	bool bAnimateHorizontally; // 0x10c
	bool bAnimateVertically; // 0x10d
	bool bAnimateOpacity; // 0x10e
	USlateBrushAsset* PieceImage; // 0x110
	FSlateBrush Image; // 0x118
};

struct UMaterialExpressionBlendMaterialAttributes {
	FMaterialAttributesInput A; // 0x40
	FMaterialAttributesInput B; // 0x58
	FExpressionInput Alpha; // 0x70
	EMaterialAttributeBlend PixelAttributeBlendType; // 0x84
	EMaterialAttributeBlend VertexAttributeBlendType; // 0x85
};

struct ABP_RocketLauncher_Hydra70_C {
	UStaticMeshComponent* SM_G67; // 0x1840
};

struct UVoxelBlendMeshesToolProperties {
	double BlendPower; // 0x60
	double BlendFalloff; // 0x68
	bool bSolidifyInput; // 0x70
	bool bRemoveInternalsAfterSolidify; // 0x71
	double OffsetSolidifySurface; // 0x78
};

struct UTireType {
	float FrictionScale; // 0x30
};

struct UCrowVehicleImpactDamageTableManager {
	TArray<FCrowVehicleImpactDamageTableRow> DamageTable; // 0x28
};

struct UBlendSpaceBase {
	bool bRotationBlendInMeshSpace; // 0x88
	float AnimLength; // 0x8c
	FInterpolationParameter InterpolationParam[0x3]; // 0x90
	float TargetWeightInterpolationSpeedPerSec; // 0xa8
	ENotifyTriggerMode NotifyTriggerMode; // 0xac
	TArray<FPerBoneInterpolation> PerBoneBlend; // 0xb0
	int32_t SampleIndexWithMarkers; // 0xc0
	TArray<FBlendSample> SampleData; // 0xc8
	TArray<FEditorElement> GridSamples; // 0xd8
	FBlendParameter BlendParameters[0x3]; // 0xe8
};

struct UMovieSceneSubTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UInheritableComponentHandler {
	TArray<FComponentOverrideRecord> Records; // 0x28
	TArray<UActorComponent*> UnnecessaryComponents; // 0x38
};

struct UWidgetTree {
	UWidget* RootWidget; // 0x28
};

struct UMediaSoundComponent {
	EMediaSoundChannels Channels; // 0x6c0
	bool DynamicRateAdjustment; // 0x6c4
	float RateAdjustmentFactor; // 0x6c8
	FFloatRange RateAdjustmentRange; // 0x6cc
	UMediaPlayer* MediaPlayer; // 0x6e0
};

struct UCrowDynamicFoliageConfig {
	FVector2D WindDirection; // 0x28
	FCrowDynamicFoliageWindSetting WindSettingMin; // 0x30
	FCrowDynamicFoliageWindSetting WindSettingMax; // 0x4c
};

struct AUPSFormation_FromGeneratedPoints {
	FFormationPointsGenerationSettings PointsGenerationSettings; // 0x280
};

struct UCrowDeconstructWidget {
	UMaterialInstanceDynamic* DconstructGage; // 0x348
	UMaterialInstanceDynamic* DconstructGageBase; // 0x350
	UCrowDeconstructSlotWidget* SlotWidgetClass; // 0x358
	UCrowCustomizeOutfitSlotWidget* OwnListSlotClass; // 0x360
	UGridPanel* GP_ItemList; // 0x368
	UGridPanel* GP_SelectItemList; // 0x370
	UCanvasPanel* CP_DeconstructPreview; // 0x378
	UWidgetSwitcher* WS_InvenState; // 0x380
	UTextBlock* TB_GPointValue; // 0x388
	UCrowButton* BT_RegisterAll; // 0x390
	UCrowButton* BT_UnregisterAll; // 0x398
	UCrowButton* BT_Deconstruct; // 0x3a0
	UCanvasPanel* CP_Gauge; // 0x3a8
	UImage* IMG_Gauge; // 0x3b0
	UImage* IMG_Gauge_Base; // 0x3b8
	UCanvasPanel* CP_GaugeEffect; // 0x3c0
	float DeconstructTime; // 0x3c8
	float LimitTime; // 0x3cc
	bool IsSendPacket; // 0x3d0
	TArray<UCrowDeconstructSlotWidget*> SlotWidgetList; // 0x3e8
};

struct UCrowLoginWidget {
	UCanvasPanel* CP_CreateNickname; // 0x348
	UEditableTextBox* TB_TypingPassword_2; // 0x350
	UCrowButton* BT_Login_2; // 0x358
	UCanvasPanel* CP_LoginMain; // 0x360
	UCanvasPanel* CP_LoginMessage; // 0x368
	UTextBlock* TB_LoginMessage; // 0x370
	UEditableTextBox* TB_TypingUserName; // 0x378
	UEditableTextBox* TB_TypingPassword; // 0x380
	UCrowButton* BT_Login; // 0x388
	UWidgetSwitcher* WS_Platform; // 0x390
	UImage* IMG_Loading_In; // 0x398
	UCrowNoticeWebBrowser* NoticeWebViewer; // 0x3a0
	UCrowGRACWidget* WB_CrowGRAC; // 0x3a8
	FName NickNameCreateAnim; // 0x3b4
	FName LoginErrorMessageAnim; // 0x3bc
	FName LoopEffectAnim; // 0x3c4
	FName LoginAnimName; // 0x3cc
	char NickNameLegnthMin; // 0x3d4
	char NickNameLegnthMax; // 0x3d5
};

struct UCrowVehicleWidgetSeatDagor {
	USizeBox* SB_Seat_MG; // 0x3b8
};

struct ACrowWidgetParticle {
	USceneComponent* SceneComponent; // 0x220
	USceneComponent* ParticleLocation; // 0x228
	USceneCaptureComponent2D* SceneCapture; // 0x230
	UParticleSystem* Particle; // 0x238
	bool IsLoop; // 0x240
	UParticleSystemComponent* ParticleComponent; // 0x248
};

struct UIntSerialization {
	uint16_t UnsignedInt16Variable; // 0x28
	uint32_t UnsignedInt32Variable; // 0x2c
	uint64_t UnsignedInt64Variable; // 0x30
	int8_t SignedInt8Variable; // 0x38
	int16_t SignedInt16Variable; // 0x3a
	int64_t SignedInt64Variable; // 0x40
	char UnsignedInt8Variable; // 0x48
	int32_t SignedInt32Variable; // 0x4c
};

struct UBTDecorator_KeepInCone {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector Observed; // 0x98
	char bUseSelfAsOrigin : 1; // 0xc0
	char bUseSelfAsObserved : 1; // 0xc0
};

struct URemoveOccludedTrianglesToolProperties {
	EOcclusionCalculationUIMode OcclusionTestMethod; // 0x60
	EOcclusionTriangleSamplingUIMode TriangleSampling; // 0x61
	double WindingIsoValue; // 0x68
	int32_t AddRandomRays; // 0x70
	int32_t AddTriangleSamples; // 0x74
	bool bOnlySelfOcclude; // 0x78
};

struct ACrowThrowProjectileTrajectory {
	USplineComponent* SplineComp; // 0x220
};

struct UNiagaraDataInterfaceNeighborGrid3D {
	uint32_t MaxNeighborsPerCell; // 0x100
};

struct UCLSCharacterAnimInstance {
	ACharacter* Character; // 0x2c0
	float CurrentDeltaSeconds; // 0x2c8
	float ConstFloatOne; // 0x2cc
	float ConstFloatZero; // 0x2d0
	float SecondaryMotionAlpha; // 0x2d4
	ECLSMovementMode CurrentMovementMode; // 0x2d8
	ECLSMovementMode PrevMovementMode; // 0x2d9
	ECLSMovementAction MovementAction; // 0x2da
	ECLSWeaponAction WeaponAction; // 0x2db
	ECLSRotationMode RotationMode; // 0x2dc
	ECLSGait Gait; // 0x2dd
	ECLSStance Stance; // 0x2de
	ECLSBattleStance BattleStance; // 0x2df
	ECLSViewMode ViewMode; // 0x2e0
	ECLSOverlayState OverlayState; // 0x2e1
	ECLSPeekState PeekState; // 0x2e2
	bool bUsingFPCam; // 0x2e3
	FRotator AimingRotation; // 0x2e4
	FRotator CDBoneAimingRotation; // 0x2f0
	FVector Velocity; // 0x2fc
	FVector RelativeVelocityDirection; // 0x308
	FVector Acceleration; // 0x314
	FVector MovementInput; // 0x320
	bool bIsMoving; // 0x32c
	bool bHasMovementInput; // 0x32d
	float Speed; // 0x330
	float MovementInputAmount; // 0x334
	float AimYawRate; // 0x338
	float ZoomAmount; // 0x33c
	bool bIsUsingProneOffset; // 0x340
	float StandToCrouchAnimRate; // 0x344
	float StandToProneAnimRate; // 0x348
	float CrouchToStandAnimRate; // 0x34c
	float CrouchToProneAnimRate; // 0x350
	float ProneToStandAnimRate; // 0x354
	float ProneToCrouchAnimRate; // 0x358
	ECLSAdditionalState AdditionalMainState; // 0x35c
	char AdditionalSubState; // 0x35d
	ECLSMovementDirection MovementDirection; // 0x35e
	ECLSHipsDirection TrackedHipDirection; // 0x35f
	FVector RelativeAccelerationAmount; // 0x360
	bool bShouldMove; // 0x36c
	bool bRotate_L; // 0x36d
	bool bRotate_R; // 0x36e
	bool bPivot; // 0x36f
	bool bSkipFootIK; // 0x370
	bool bSkipHandIK; // 0x371
	bool bStopLookAndIK; // 0x372
	bool bStopFootLock; // 0x373
	float RotateOffset; // 0x374
	float RotateDistance; // 0x378
	float RotateRate; // 0x37c
	float RotationScale; // 0x380
	float DiagonalScaleAmount; // 0x384
	float WalkRunBlend; // 0x388
	float StandingPlayRate; // 0x38c
	float CrouchingPlayRate; // 0x390
	float PronePlayRate; // 0x394
	float SwimPlayRate; // 0x398
	float StrideBlend; // 0x39c
	float CrouchingStrideBlend; // 0x3a0
	FCLSVelocityBlend VelocityBlend; // 0x3a4
	FCLSLeanAmount LeanAmount; // 0x3b4
	float FYaw; // 0x3bc
	float BYaw; // 0x3c0
	float LYaw; // 0x3c4
	float RYaw; // 0x3c8
	ECLSVehicleType VehicleType; // 0x3cc
	ECLSVehicleSeatType VehicleSeatType; // 0x3cd
	float VehicleMovingDirectionForwardRatio; // 0x3d0
	float VehicleMovingDirectionRightRatio; // 0x3d4
	bool bVehicleInvalidData; // 0x3d8
	FRotator PeekLeftRotation; // 0x3dc
	FRotator PeekRightRotation; // 0x3e8
	float PeekLeftWeight; // 0x3f4
	float PeekRightWeight; // 0x3f8
	bool bJumped; // 0x3fc
	float JumpPlayRate; // 0x400
	float FallSpeed; // 0x404
	float LandPrediction; // 0x408
	float SwimImmersionDepth; // 0x40c
	float SwimPelvisAdjust; // 0x410
	float SwimPelvisPitch; // 0x414
	FVector2D SkyDivingInput; // 0x418
	float SkyDivingRoll; // 0x420
	FRotator SmoothedAimingRotation; // 0x424
	FRotator SpineRotation; // 0x430
	FVector2D AimingAngle; // 0x43c
	FVector2D SmoothedAimingAngle; // 0x444
	FVector2D AimOffsetAngle; // 0x44c
	float AimSweepTime; // 0x454
	float InputYawOffsetTime; // 0x458
	float ForwardYawTime; // 0x45c
	float LeftYawTime; // 0x460
	float RightYawTime; // 0x464
	float Enable_SecondarySight; // 0x468
	FVector CDBoneModificationBySituation; // 0x46c
	float LadderStepHeight; // 0x478
	float LadderStepPosition; // 0x47c
	ECLSLadderState LadderState; // 0x480
	bool bIsAliving; // 0x481
	ECLSStance AlivingStance; // 0x482
	bool bIsUpSlope; // 0x483
	float SlopePoseBlendingAlpha; // 0x484
	float FlailRate; // 0x488
	int32_t OverlayOverrideState; // 0x48c
	float Enable_AimOffset; // 0x490
	float Enable_AfterAimOffsetL; // 0x494
	float Enable_AfterAimOffsetR; // 0x498
	float BasePose_Stand; // 0x49c
	float BasePose_Crouch; // 0x4a0
	float BasePose_Prone; // 0x4a4
	float Arm_L; // 0x4a8
	float Arm_L_Add; // 0x4ac
	float Arm_L_LS; // 0x4b0
	float Arm_L_MS; // 0x4b4
	float Arm_R; // 0x4b8
	float Arm_R_Add; // 0x4bc
	float Arm_R_LS; // 0x4c0
	float Arm_R_MS; // 0x4c4
	float hand_l; // 0x4c8
	float hand_r; // 0x4cc
	float Legs; // 0x4d0
	float Legs_Add; // 0x4d4
	float Pelvis; // 0x4d8
	float Pelvis_Add; // 0x4dc
	float Spine; // 0x4e0
	float Spine_Add; // 0x4e4
	float Head; // 0x4e8
	float Head_Add; // 0x4ec
	float Enable_GripIK_L; // 0x4f0
	float Enable_GripIK_R; // 0x4f4
	int32_t GripIKLFindPriorityIndex; // 0x4f8
	float Enable_HandIK_L; // 0x4fc
	float Enable_HandIK_R; // 0x500
	float Enable_TargetIK_L; // 0x504
	float Enable_TargetIK_R; // 0x508
	float Enable_HandsFollowToHead; // 0x50c
	float Enable_HandLFollowToHead; // 0x510
	float Arm_L_Overwrite; // 0x514
	FTransform LeftHandIK; // 0x520
	FTransform RightHandIK; // 0x550
	bool bLeftValidHandIKTransform; // 0x580
	bool bRightValidHandIKTransform; // 0x581
	float Enable_GripPose_L; // 0x584
	float Enable_GripPose_R; // 0x588
	FRotator LastUpdatedRotation; // 0x58c
	float FootLock_L_Alpha; // 0x598
	float FootLock_R_Alpha; // 0x59c
	FVector FootLock_L_Location; // 0x5a0
	FVector FootLock_R_Location; // 0x5ac
	FRotator FootLock_L_Rotation; // 0x5b8
	FRotator FootLock_R_Rotation; // 0x5c4
	FVector FootOffset_L_Location; // 0x5d0
	FVector FootOffset_R_Location; // 0x5dc
	FRotator FootOffset_L_Rotation; // 0x5e8
	FRotator FootOffset_R_Rotation; // 0x5f4
	FVector PelvisOffset; // 0x600
	FVector PelvisTranslation; // 0x60c
	float PelvisAlpha; // 0x618
	FVector ProneNormal_Pelvis; // 0x61c
	FVector ProneOffset_Pelvis; // 0x628
	FVector ProneOffset_Spine; // 0x634
	FVector ProneOffset_Calf_L; // 0x640
	FVector ProneOffset_Calf_R; // 0x64c
	FCLSCharacterAimBobInfo AimBobInfo; // 0x658
	float AimBobAlpha; // 0x688
	float AimBobStartRatio; // 0x68c
	float AimBobPlayRate; // 0x690
	float AimBobElapsed; // 0x694
	float TurnCheckMinAngle; // 0x698
	float Turn180Threshold; // 0x69c
	float AimYawRateLimit; // 0x6a0
	float ElapsedDelayTime; // 0x6a4
	float MinAngleDelay; // 0x6a8
	float MaxAngleDelay; // 0x6ac
	bool bIsBlendingNoOffset; // 0x6b0
	FCLSTurnInPlaceAsset Stand_TurnIP_L90; // 0x6b8
	FCLSTurnInPlaceAsset Stand_TurnIP_R90; // 0x6d8
	FCLSTurnInPlaceAsset Stand_TurnIP_L180; // 0x6f8
	FCLSTurnInPlaceAsset Stand_TurnIP_R180; // 0x718
	FCLSTurnInPlaceAsset Crouch_TurnIP_L90; // 0x738
	FCLSTurnInPlaceAsset Crouch_TurnIP_R90; // 0x758
	FCLSTurnInPlaceAsset Crouch_TurnIP_L180; // 0x778
	FCLSTurnInPlaceAsset Crouch_TurnIP_R180; // 0x798
	float RotateMinThreshold; // 0x7b8
	float RotateMaxThreshold; // 0x7bc
	float AimYawRateMinRange; // 0x7c0
	float AimYawRateMaxRange; // 0x7c4
	float MinPlayRate; // 0x7c8
	float MaxPlayRate; // 0x7cc
	UCurveFloat* DiagonalScaleAmountCurve; // 0x7d0
	UCurveFloat* StrideBlend_Stand_Walk; // 0x7d8
	UCurveFloat* StrideBlend_Stand_Run; // 0x7e0
	UCurveFloat* StrideBlend_Crouch_Walk; // 0x7e8
	UCurveFloat* StrideBlend_Crouch_Run; // 0x7f0
	UCurveFloat* StrideBlend_Prone_Walk; // 0x7f8
	UCurveFloat* LandPredictionCurve; // 0x800
	UCurveFloat* LeanInAirCurve; // 0x808
	UCurveVector* YawOffset_FB; // 0x810
	UCurveVector* YawOffset_LR; // 0x818
	float AnimatedWalkSpeed; // 0x820
	float AnimatedRunSpeed; // 0x824
	float AnimatedSprintSpeed; // 0x828
	float AnimatedCrouchWalkSpeed; // 0x82c
	float AnimatedCrouchRunSpeed; // 0x830
	float AnimatedCrouchSprintSpeed; // 0x834
	float AnimatedProneSpeed; // 0x838
	float AnimatedProneWalkSpeed; // 0x83c
	float AnimatedSwimSpeed; // 0x840
	float AnimatedSwimSprintSpeed; // 0x844
	float VelocityBlendInterpSpeed; // 0x848
	float GroundedLeanInterpSpeed; // 0x84c
	float InAirLeanInterpSpeed; // 0x850
	float VehicleLeanInterpSpeed; // 0x854
	float SmoothedAimingRotationInterpSpeed; // 0x858
	float InputYawOffsetInterpSpeed; // 0x85c
	float TriggerPivotSpeedLimit; // 0x860
	float FootHeight; // 0x864
	float IK_TraceDistanceAboveFoot; // 0x868
	float IK_TraceDistanceBelowFoot; // 0x86c
	float IK_TraceDistanceBelowFootOnProne; // 0x870
	float PelvisDownwardTraceDistance; // 0x874
	float PelvisOffsetLerpSpeed; // 0x878
	bool bCanPlayDynamicTransition; // 0x87c
	FCLSGroundPose GroundPose; // 0x880
	FCLSVehiclePose VehiclePose; // 0x8d8
	FCLSGripPose GripPose; // 0x900
	UAnimSequenceBase* AnimOnStandStopR; // 0x910
	UAnimSequenceBase* AnimOnStandStopL; // 0x918
	UAnimSequenceBase* AnimOnCrouchStop; // 0x920
	UAnimSequenceBase* AnimOnStandQuickStop; // 0x928
	UAnimSequenceBase* AnimOnRollToIdle; // 0x930
	UAnimSequenceBase* AnimOnLandToIdle; // 0x938
	UAnimSequenceBase* AnimOnRelaxedToReady; // 0x940
	UAnimSequenceBase* AnimOnReadyToRelaxed; // 0x948
	UAnimSequenceBase* AnimOnBowRelaxedToReady; // 0x950
	UAnimSequenceBase* AnimOnBowReadyToRelaxed; // 0x958
	UAnimSequenceBase* AnimOnM4A1RelaxedToReady; // 0x960
	UAnimSequenceBase* AnimOnM4A1ReadyToRelaxed; // 0x968
	UAnimSequenceBase* AnimOnPistol1HRelaxedToReady; // 0x970
	UAnimSequenceBase* AnimOnPistol1HReadyToRelaxed; // 0x978
	UAnimSequenceBase* AnimOnPistol2HRelaxedToReady; // 0x980
	UAnimSequenceBase* AnimOnPistol2HReadyToRelaxed; // 0x988
	UAnimSequenceBase* AnimOnTransitionR; // 0x990
	UAnimSequenceBase* AnimOnTransitionL; // 0x998
	float StandRelaxedPauseTime; // 0x9a0
	float StandRelaxedUpSlopePauseTime; // 0x9a4
	float StandRelaxedDownSlopePauseTime; // 0x9a8
	float StandRelaxedMovingPauseTime; // 0x9ac
	float StandReadyPauseTime; // 0x9b0
	float StandReadyMovingPauseTime; // 0x9b4
	float StandBattlePauseTime; // 0x9b8
	float StandBattleUpSlopePauseTime; // 0x9bc
	float StandBattleDownSlopePauseTime; // 0x9c0
	float StandBattleMovingPauseTime; // 0x9c4
	float StandAimPauseTime; // 0x9c8
	float StandAimMovingPauseTime; // 0x9cc
	float StandSprintPauseTime; // 0x9d0
	float CrouchRelaxedPauseTime; // 0x9d4
	float CrouchRelaxedUpSlopePauseTime; // 0x9d8
	float CrouchRelaxedDownSlopePauseTime; // 0x9dc
	float CrouchRelaxedMovingPauseTime; // 0x9e0
	float CrouchReadyPauseTime; // 0x9e4
	float CrouchReadyMovingPauseTime; // 0x9e8
	float CrouchBattlePauseTime; // 0x9ec
	float CrouchBattleUpSlopePauseTime; // 0x9f0
	float CrouchBattleDownSlopePauseTime; // 0x9f4
	float CrouchBattleMovingPauseTime; // 0x9f8
	float CrouchAimPauseTime; // 0x9fc
	float CrouchAimMovingPauseTime; // 0xa00
	float ProneRelaxedPauseTime; // 0xa04
	float ProneRelaxedMovingPauseTime; // 0xa08
	float ProneReadyPauseTime; // 0xa0c
	float ProneReadyMovingPauseTime; // 0xa10
	float ProneBattlePauseTime; // 0xa14
	float ProneBattleMovingPauseTime; // 0xa18
	float ProneAimPauseTime; // 0xa1c
	float ProneAimMovingPauseTime; // 0xa20
	float FallingPauseTime; // 0xa24
	float LandPredictionPauseTime; // 0xa28
	float FallingBattlePauseTime; // 0xa2c
	float LandPredictionBattlePauseTime; // 0xa30
	float VaultLowPauseTime; // 0xa34
	float VaultHighPauseTime; // 0xa38
	float GetUpDefaultPauseTime; // 0xa3c
	float GetUpInjuredPauseTime; // 0xa40
	float VehicleBoardingPauseTime; // 0xa44
	float OnVehiclePauseTime; // 0xa48
	float OnVehicleBattlePauseTime; // 0xa4c
	float OnHellicopterBattlePauseTime; // 0xa50
	float VehicleRelaxedPauseTime; // 0xa54
	float VehicleBattlePauseTime; // 0xa58
	char EqualBattleStance_Relaxed : 1; // 0xa5c
	char EqualBattleStance_Ready : 1; // 0xa5c
	char EqualBattleStance_Directed : 1; // 0xa5c
	char EqualBattleStance_Aiming : 1; // 0xa5c
	char EqualOrMoreBattleStance_Relaxed : 1; // 0xa5c
	char EqualOrMoreBattleStance_Ready : 1; // 0xa5c
	char EqualOrMoreBattleStance_Directed : 1; // 0xa5c
	char EqualOrMoreBattleStance_Aiming : 1; // 0xa5c
	char EqualOrLessBattleStance_Relaxed : 1; // 0xa5d
	char EqualOrLessBattleStance_Ready : 1; // 0xa5d
	char EqualOrLessBattleStance_Directed : 1; // 0xa5d
	char EqualOrLessBattleStance_Aiming : 1; // 0xa5d
	char EqualOrMoreBattleStance_Drected_OnVehicle : 1; // 0xa5d
	char EqualOverlayState_Default : 1; // 0xa5d
	char EqualOverlayState_Rifle : 1; // 0xa5d
	char EqualOverlayState_HandGun1H : 1; // 0xa5d
	char EqualOverlayState_HandGun2H : 1; // 0xa5e
	char EqualOverlayState_Melee1H : 1; // 0xa5e
	char EqualOverlayState_Melee2H : 1; // 0xa5e
	char EqualOverlayState_Item1H : 1; // 0xa5e
	char EqualOverlayState_Item2H : 1; // 0xa5e
	char EqualOverlayState_VehicleWeapon : 1; // 0xa5e
	char EqualOverlayState_NotLayering : 1; // 0xa5e
	char NotOverlayState_Default : 1; // 0xa5e
	char NotOverlayState_Rifle : 1; // 0xa5f
	char NotOverlayState_HandGun1H : 1; // 0xa5f
	char NotOverlayState_HandGun2H : 1; // 0xa5f
	char NotOverlayState_Melee1H : 1; // 0xa5f
	char NotOverlayState_Melee2H : 1; // 0xa5f
	char NotOverlayState_Item1H : 1; // 0xa5f
	char NotOverlayState_Item2H : 1; // 0xa5f
	char NotOverlayState_VehicleWeapon : 1; // 0xa5f
	char NotOverlayState_NotLayering : 1; // 0xa60
	char UseOverlayState : 1; // 0xa60
	FCLSLadderAnimSet LaddAnimSet; // 0xa68
	char CLSTest_UseMovingAnimationOnSlope : 1; // 0xb58
	float HoldBreathUpTime; // 0xb5c
	float HoldBreathDownTime; // 0xb60
	FCLSLeanAmount PrevVehicleLeanAmmount; // 0xb64
};

struct UCrowCharacterAnimNotify_GasMask {
	ECrowCharacterGasMaskNotifyType NotifyType; // 0x38
};

struct UCrowBattleInventoryLoot {
	UUserWidget* SlotWidget; // 0x368
	UUserWidget* ItemToolTipWidget; // 0x370
	float CloseDistance; // 0x378
	UCrowBackPackInfoWidget* WB_BackPackInfo; // 0x380
	UScrollBox* SCB_LootingSlotWidget; // 0x388
	UCanvasPanel* ItemPanel; // 0x390
	UCrowInvenWeaponListSubItemWidget* WB_HelmetSlot; // 0x398
	UCrowInvenWeaponListSubItemWidget* WB_ArmorSlot; // 0x3a0
	UCrowInvenWeaponListSubItemWidget* WB_BackPackSlot; // 0x3a8
	UCrowInvenWeaponListSubItemWidget* WB_KitSlot; // 0x3b0
	UTextBlock* TB_InvenType; // 0x3b8
	UCrowGameInvenComponent* InvenComponent; // 0x3c0
	UCrowLootInvenItemInfo* ItemInfoWidget; // 0x3c8
	ACrowItemBase* CurrArmorItem; // 0x3d0
	ACrowItemBase* CurrHelmetItem; // 0x3d8
	ACrowItemBase* CurrBackPackItem; // 0x3e0
	ACrowItemBase* CurrKitItem; // 0x3e8
	ACrowItemBase* CurrentItem; // 0x3f0
	ACrowPickupInventory* CurrentPickupInven; // 0x3f8
	int32_t CurrentCount; // 0x400
	int32_t PickupInvenIndex; // 0x404
	FVector2D CurrentMousePosition; // 0x408
};

struct ULineSetComponent {
	UMaterialInterface* LineMaterial; // 0x468
	FBoxSphereBounds Bounds; // 0x470
	bool bBoundsDirty; // 0x48c
};

struct UBTService_BlueprintBase {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	char bShowPropertyDetails : 1; // 0x90
	char bShowEventDetails : 1; // 0x90
};

struct UCrowWeaponPartsPistolGrip {
	FCrowWeaponPartsPistolGripTableRow PartsTable; // 0x320
	FCrowWeaponPartsPistolGripTableRow DefaultPartsData; // 0x628
};

struct UConsole {
	ULocalPlayer* ConsoleTargetPlayer; // 0x38
	UTexture2D* DefaultTexture_Black; // 0x40
	UTexture2D* DefaultTexture_White; // 0x48
	TArray<FString> HistoryBuffer; // 0x68
};

struct UMaterialExpressionArcsine {
	FExpressionInput Input; // 0x40
};

struct UCommandlet {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UCrowActorComponentBase {
	UCrowComponentContainer* OwnerContainer; // 0xb0
	AActor* CrowComponentOwnerActor; // 0xb8
};

struct ACrowBuildingEditorNode {
	USceneComponent* LinkRoot; // 0x228
	char NodeIndex; // 0x230
};

struct UAsyncTaskDownloadImage {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFail; // 0x40
};

struct ACrowDynamicFoliageSetup {
	UCrowDynamicFoliageManager* FoliageManager; // 0x220
	bool bDebug; // 0x228
};

struct URemeshMeshToolProperties {
	int32_t TargetTriangleCount; // 0x70
	ERemeshSmoothingType SmoothingType; // 0x74
	bool bDiscardAttributes; // 0x75
	bool bShowWireframe; // 0x76
	bool bShowGroupColors; // 0x77
	ERemeshType RemeshType; // 0x78
	int32_t RemeshIterations; // 0x7c
	bool bUseTargetEdgeLength; // 0x80
	float TargetEdgeLength; // 0x84
	bool bReproject; // 0x88
};

struct USlateAccessibleWidgetData {
	bool bCanChildrenBeAccessible; // 0x28
	ESlateAccessibleBehavior AccessibleBehavior; // 0x29
	ESlateAccessibleBehavior AccessibleSummaryBehavior; // 0x2a
	FText AccessibleText; // 0x30
	FDelegate AccessibleTextDelegate; // 0x48
	FText AccessibleSummaryText; // 0x58
	FDelegate AccessibleSummaryTextDelegate; // 0x70
};

struct UCrowBattleHUDWeaponState {
	UTextBlock* TextVehicleSpeed; // 0x260
};

struct URemeshMeshTool {
	URemeshMeshToolProperties* BasicProperties; // 0x98
	UMeshStatisticsProperties* MeshStatisticsProperties; // 0xa0
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xa8
};

struct UCrowTutorialInventoryWidget {
	UImage* IMG_Key_2; // 0x348
	UImage* IMG_Key_3; // 0x350
	UCanvasPanel* CP_PlusPanel; // 0x358
	UTextBlock* TB_Tutorial_Desc; // 0x360
	TArray<UTexture2D*> KeyImageList; // 0x368
	TArray<UTexture2D*> MouseKeyImageList; // 0x378
};

struct UCrowModInfoButtonWidget {
	UImage* IMG_World; // 0x348
	UTextBlock* TB_ModeName; // 0x350
	UTextBlock* TB_WorldName; // 0x358
	UCrowButton* BT_ModInfoButton; // 0x360
	UImage* IMG_Icon; // 0x368
	UCanvasPanel* CP_Lock; // 0x370
	bool IsLocked; // 0x378
};

struct UCrowMissionAlarmWidget {
	UTextBlock* TXT_MissionAlarm; // 0x348
	UWidgetAnimation* WidgetAnimation; // 0x350
};

struct ULandscapeSplineControlPoint {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	float Width; // 0x40
	float LayerWidthRatio; // 0x44
	float SideFalloff; // 0x48
	float LeftSideFalloffFactor; // 0x4c
	float RightSideFalloffFactor; // 0x50
	float LeftSideLayerFalloffFactor; // 0x54
	float RightSideLayerFalloffFactor; // 0x58
	float EndFalloff; // 0x5c
	TArray<FLandscapeSplineConnection> ConnectedSegments; // 0x60
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	UControlPointMeshComponent* LocalMeshComponent; // 0xa0
};

struct UMovieSceneBoolSection {
	bool DefaultValue; // 0xe8
	FMovieSceneBoolChannel BoolCurve; // 0xf0
};

struct UUniformInteger {
	int32_t Magnitude; // 0xb0
};

struct USkeletalBodySetup {
	bool bSkipScaleFromAnimation; // 0x2a0
	TArray<FPhysicalAnimationProfile> PhysicalAnimationData; // 0x2a8
};

struct UInterpTrackAkAudioEvent {
	TArray<FAkAudioEventTrackKey> Events; // 0x90
	char bContinueEventOnMatineeEnd : 1; // 0xa0
};

struct ACrowGameHUD_TG {
	UCrowHUDWidgetTrainning* MainWidgetClassTrainning; // 0x5f0
	UCrowHUDWidgetTrainning* MainWidgetTrainning; // 0x5f8
};

struct UInterpTrackFloatBase {
	FInterpCurveFloat FloatTrack; // 0x70
	float CurveTension; // 0x88
};

struct UInterpTrackInstVectorMaterialParam {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<FVector> ResetVectors; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackVectorMaterialParam* InstancedTrack; // 0x58
};

struct UDistributionVector {
	char bCanBeBaked : 1; // 0x30
	char bIsDirty : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UARPlaneComponent {
	FARPlaneUpdatePayload ReplicatedPayload; // 0x280
};

struct UCrowWorldSMC {
	int16_t LayoutItemIndex; // 0x4e8
	char bDestroyByShockwave : 1; // 0x4ea
	char bDestroyOnThrowWeaponHit : 1; // 0x4ea
	char bDestroyOnCharacterAnimation : 1; // 0x4ea
	char bSlideOnBeginVaultAction : 1; // 0x4ea
	char bIgnoreCharacterInteraction : 1; // 0x4ea
	char bBlockCharacterMoveThrough : 1; // 0x4ea
	char bPreventAttachChild : 1; // 0x4ea
	char bDestroyAttachChildOnExplosion : 1; // 0x4ea
	char bDestroyAttachChildOnImpactCollapse : 1; // 0x4eb
	float DecalScaleMultiply; // 0x4ec
	FCrowWorldSMCShakingState ShakingState; // 0x4f0
	TMap<USceneComponent*, FTransform> VirtualChildren; // 0x580
};

struct UCrowCategorySlotBigWidget {
	UImage* IMG_Selected; // 0x348
	UCrowButton* BT_Slot; // 0x350
	UTextBlock* TB_Name; // 0x358
	UImage* IMG_Used; // 0x360
	UImage* IMG_New; // 0x368
	FText SlotName; // 0x380
	ECrowItemType ItemCategoryType; // 0x398
	ECrowWeaponUIType WeaponCategoryType; // 0x399
	ECrowWeaponAccType WeaponAccCategoryType; // 0x39a
	ECrowCharacterAppearanceType AppearanceCategoryType; // 0x39b
	UTextBlock* TBName_Seleted; // 0x3a0
	bool Selected; // 0x3a8
	bool Used; // 0x3a9
};

struct ACrowInDoorTriggerVolume {
	int32_t Group; // 0x258
	int32_t Order; // 0x25c
	UTexture2D* MinimapImage; // 0x260
};

struct UCrowCustomizeWeaponNumSlotList {
	UHorizontalBox* HB_Buttons; // 0x348
	TArray<UCrowCustomizeWeaponNumSlotWidget*> ButtonList; // 0x350
	ACrowSceneLobby* SceneLobby; // 0x360
	ACrowSceneGame* SceneGame; // 0x368
};

struct UNavCollisionBase {
	char bIsDynamicObstacle : 1; // 0x28
};

struct UParticleModuleRotation {
	FRawDistributionFloat StartRotation; // 0x30
};

struct UAnimSequenceBase {
	TArray<FAnimNotifyEvent> Notifies; // 0x80
	float SequenceLength; // 0x90
	float RateScale; // 0x94
	FRawCurveTracks RawCurveData; // 0x98
};

struct UMaterialExpressionArcsineFast {
	FExpressionInput Input; // 0x40
};

struct UMovieSceneColorTrack {
	bool bIsSlateColor; // 0xb0
};

struct UCrowLobbyCharacterAnimInstance {
	EAnimLobbyIdle AnimLobbyIdle; // 0x2b8
	FTransform LeftHandIK; // 0x2c0
	FTransform RightHandIK; // 0x2f0
	float Enable_GripIK_L; // 0x320
	float Enable_GripIK_R; // 0x324
	int32_t GripIKLFindPriorityIndex; // 0x328
	float Enable_HandIK_L; // 0x32c
	float Enable_HandIK_R; // 0x330
	float Enable_TargetIK_L; // 0x334
	float Enable_TargetIK_R; // 0x338
	float Enable_GripPose_L; // 0x33c
	float Enable_GripPose_R; // 0x340
	FCLSGripPose GripPose; // 0x348
	ACrowLobbyCharacterPawn* CharacterOwner; // 0x358
	UAnimSequenceBase* CurrentAnimeSequence; // 0x360
};

struct UCrowResultRewardSlotWidget {
	UImage* IMG_BattleRewardIcon; // 0x348
	UTextBlock* TB_Name; // 0x350
	UTextBlock* TB_Exp; // 0x358
	UCanvasPanel* CP_BattleRewardBonus; // 0x360
	UTextBlock* TB_BuffRate; // 0x368
	FText SlotName; // 0x370
	UPaperSprite* RewardIconSprite; // 0x388
	UWidgetAnimation* AniShow; // 0x390
};

struct UMaterialExpressionDDX {
	FExpressionInput Value; // 0x40
};

struct UMovieSceneSequenceTickManager {
	TArray<AActor*> SequenceActors; // 0x28
	UMovieSceneEntitySystemLinker* Linker; // 0x38
};

struct USecondarySmoothBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	bool bPreserveUVFlow; // 0x68
};

struct UDistributionFloatConstant {
	float Constant; // 0x38
};

struct UMaterialExpressionScalarParameter {
	float DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x5c
	char PrimitiveDataIndex; // 0x5d
};

struct ABP_GBU31_Explosion_C {
	UParticleSystemComponent* ParticleSystem; // 0x220
	USceneComponent* DefaultSceneRoot; // 0x228
};

struct UWB_CrowWeaponCrosshairMelee_C {
	UBorder* b_Crosshair; // 0x3a0
	UImage* ImageCenter; // 0x3a8
	UImage* ImageCenterBorder; // 0x3b0
	UImage* ImageDown; // 0x3b8
	UImage* ImageDownBorder; // 0x3c0
	UImage* ImageLeft; // 0x3c8
	UImage* ImageLeftBorder; // 0x3d0
	UImage* ImageRight; // 0x3d8
	UImage* ImageRightBorder; // 0x3e0
	UImage* ImageUp; // 0x3e8
	UImage* ImageUpBorder; // 0x3f0
};

struct UMaterialExpressionSkyAtmosphereAerialPerspective {
	FExpressionInput WorldPosition; // 0x40
};

struct UAkWindowsInitializationSettings {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkWindowsAdvancedInitializationSettings AdvancedSettings; // 0xb8
};

struct UCrowFaceTableManager {
	TMap<uint32_t, FCrowFaceTableBaseRow> FaceData_I; // 0x28
	TMap<FString, FCrowFaceTableBaseRow> FaceData_S; // 0x78
};

struct UCrowLobbyIndicatorWidget {
	UTextBlock* TB_NickName; // 0x348
	UHorizontalBox* HB_Leader; // 0x350
	UWidgetSwitcher* WS_Status; // 0x358
	UImage* IMG_LeaderIcon; // 0x360
	UImage* IMG_NotReadyIcon; // 0x368
	UImage* IMG_Offline; // 0x370
	UImage* IMG_ReadyIcon; // 0x378
	UImage* IMG_PlayingIcon; // 0x380
	UWidgetSwitcher* WS_Voice; // 0x388
	UImage* IMG_RankIcon; // 0x390
	uint64_t MemberServerKey; // 0x398
	UCrowVivoxManager* VivoxManager; // 0x3a8
};

struct UMaterialExpressionSingleLayerWaterMaterialOutput {
	FExpressionInput ScatteringCoefficients; // 0x40
	FExpressionInput AbsorptionCoefficients; // 0x54
	FExpressionInput PhaseG; // 0x68
	FExpressionInput ColorScaleBehindWater; // 0x7c
};

struct UOculusMR_State {
	FTrackedCamera TrackedCamera; // 0x28
	USceneComponent* TrackingReferenceComponent; // 0xa0
	double ScalingFactor; // 0xa8
	bool ChangeCameraStateRequested; // 0xb4
	bool BindToTrackedCameraIndexRequested; // 0xb5
};

struct APaperFlipbookActor {
	UPaperFlipbookComponent* RenderComponent; // 0x220
};

struct UCrowSquadWidgetItem {
	FLinearColor ColorHPGaugeNormal; // 0x348
	FLinearColor ColorHPGaugeInjured; // 0x358
	FLinearColor ColorHPGaugeDead; // 0x368
	float DeadPlayerAlpha; // 0x378
	UCanvasPanel* RootCanvas; // 0x380
	UCanvasPanel* CP_MemberIndexIcon; // 0x388
	UWidgetSwitcher* RoleSwitcher; // 0x390
	UCanvasPanel* LeaderCanvas; // 0x398
	UCanvasPanel* MemberCanvas; // 0x3a0
	UCanvasPanel* DyingCanvas; // 0x3a8
	UCanvasPanel* DeadCanvas; // 0x3b0
	UTextBlock* NickNameText; // 0x3b8
	UWidgetSwitcher* VoiceSwitcher; // 0x3c0
	UWidgetSwitcher* WS_HPStatus; // 0x3c8
	UProgressBar* HPProgressBar; // 0x3d0
	UProgressBar* PB_ZombieHPBar; // 0x3d8
	UProgressBar* PB_ZetaHPBar; // 0x3e0
	UWidgetSwitcher* StateSwitcher; // 0x3e8
	UImage* IMG_Icon_SquadLeader; // 0x3f0
	UImage* IMG_Squad_Color; // 0x3f8
	UImage* IMG_SquadLeader; // 0x400
	UImage* IMG_RankIcon; // 0x408
	UTextBlock* TB_Index; // 0x410
	UProgressBar* PB_HelmetBar; // 0x418
	UProgressBar* PB_ArmorBar; // 0x420
	UCrowVivoxManager* VivoxManager; // 0x440
};

struct UEndTurnCallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct ULevelSequenceBurnInOptions {
	bool bUseBurnIn; // 0x28
	FSoftClassPath BurnInClass; // 0x30
	ULevelSequenceBurnInInitSettings* Settings; // 0x48
};

struct UUserInterfaceSettings {
	ERenderFocusRule RenderFocusRule; // 0x38
	TMap<EMouseCursor, FHardwareCursorReference> HardwareCursors; // 0x40
	TMap<EMouseCursor, FSoftClassPath> SoftwareCursors; // 0x90
	FSoftClassPath DefaultCursor; // 0xe0
	FSoftClassPath TextEditBeamCursor; // 0xf8
	FSoftClassPath CrosshairsCursor; // 0x110
	FSoftClassPath HandCursor; // 0x128
	FSoftClassPath GrabHandCursor; // 0x140
	FSoftClassPath GrabHandClosedCursor; // 0x158
	FSoftClassPath SlashedCircleCursor; // 0x170
	float ApplicationScale; // 0x188
	EUIScalingRule UIScaleRule; // 0x18c
	FSoftClassPath CustomScalingRuleClass; // 0x190
	FRuntimeFloatCurve UIScaleCurve; // 0x1a8
	bool bAllowHighDPIInGameMode; // 0x230
	FIntPoint DesignScreenSize; // 0x234
	bool bLoadWidgetsOnDedicatedServer; // 0x23c
	TArray<UObject*> CursorClasses; // 0x240
	UObject* CustomScalingRuleClassInstance; // 0x250
	UDPICustomScalingRule* CustomScalingRule; // 0x258
};

struct UWB_CrowWeaponCrosshairRifle_C {
	UBorder* b_Crosshair; // 0x3a0
	UImage* ImageCenter; // 0x3a8
	UImage* ImageCenterBorder; // 0x3b0
	UImage* ImageDown; // 0x3b8
	UImage* ImageDownBorder; // 0x3c0
	UImage* ImageLeft; // 0x3c8
	UImage* ImageLeftBorder; // 0x3d0
	UImage* ImageRight; // 0x3d8
	UImage* ImageRightBorder; // 0x3e0
	UImage* ImageUp; // 0x3e8
	UImage* ImageUpBorder; // 0x3f0
};

struct UExtractCollisionGeometryTool {
	UCollisionGeometryVisualizationProperties* VizSettings; // 0x88
	UPhysicsObjectToolPropertySet* ObjectProps; // 0x90
	UPreviewGeometry* PreviewElements; // 0x98
	UPreviewMesh* PreviewMesh; // 0xa0
};

struct UGeometryCacheComponent {
	UGeometryCache* GeometryCache; // 0x468
	bool bRunning; // 0x470
	bool bLooping; // 0x471
	float StartTimeOffset; // 0x474
	float PlaybackSpeed; // 0x478
	int32_t NumTracks; // 0x47c
	float ElapsedTime; // 0x480
	float Duration; // 0x4b4
	bool bManualTick; // 0x4b8
};

struct UBTTask_BlackboardBase {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UMovieSceneCameraShakeSourceShakeSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe8
};

struct USteamVRTrackingReferences {
	FMulticastInlineDelegate OnTrackedDeviceActivated; // 0xb0
	FMulticastInlineDelegate OnTrackedDeviceDeactivated; // 0xc0
	float ActiveDevicePollFrequency; // 0xd0
	FVector TrackingReferenceScale; // 0xd4
	TArray<UStaticMeshComponent*> TrackingReferences; // 0xe0
};

struct UCrowZombieEnergyGaugeWidget {
	UProgressBar* PB_Gauge; // 0x348
	UCanvasPanel* CP_Tutorial_Heal; // 0x350
	UWidgetAnimation* AniHeartBeat; // 0x358
	TArray<FCrowZombieHeartBeatInfo> HeartBeatInfoArray; // 0x360
};

struct UCrowWorldAssetStaticMesh {
	TSoftObjectPtr<UStaticMesh> StaticMesh; // 0x28
	TArray<TSoftObjectPtr<UMaterialInterface>> MaterialOverrides; // 0x50
	UStaticMesh* LoadedMesh; // 0x60
	TArray<UMaterialInterface*> LoadedMaterials; // 0x68
};

struct ACrowBuildingEditorRoot {
	char bHideInGame : 1; // 0x238
	char bHideAfterCreating : 1; // 0x238
	char bHideInformation : 1; // 0x238
	FCrowBuildingEditorLayout CachedLayout; // 0x240
	TMap<int16_t, TWeakObjectPtr<ACrowBuildingEditorPartsActor>> CachedParts; // 0x290
	UCrowBuildingEditorHelper* EditorHelper; // 0x2e0
	UTextRenderComponent* TextRender; // 0x2e8
	UStaticMeshComponent* SphereMesh; // 0x2f0
	FCrowBuildingDemolitionSetting DemolitionSetting; // 0x2f8
	UStaticMesh* LODBodyAsset; // 0x368
	UStaticMesh* LODExtraAsset; // 0x370
	bool SkipLODExtraMesh; // 0x378
	bool bIsIndestructible; // 0x379
	float MaxHealth; // 0x37c
	float LightProbeRatioMultiplier; // 0x380
	bool bForceMoveToBldLevel; // 0x384
	bool ClusterSyncActor; // 0x385
	UCrowWorldDamageCheckerBase* DamageChecker; // 0x388
	UCrowWorldDestructionAUD* DestructionAUD; // 0x390
};

struct UPreviewMeshCollection {
	USkeleton* Skeleton; // 0x38
	TArray<FPreviewMeshCollectionEntry> SkeletalMeshes; // 0x40
};

struct ACrowSupplyTablet {
	USkeletalMeshComponent* SkeletalMesh; // 0x1eb8
	UWidgetComponent* WidgetComp; // 0x1ec0
	UMaterialInstance* Mat_1P; // 0x1ec8
	UMaterialInstance* Mat_3P; // 0x1ed0
	UMaterialInstance* WidgetMat_1P; // 0x1ed8
	UMaterialInstance* WidgetMat_3P; // 0x1ee0
};

struct UGroomCreateStrandsTexturesOptions {
	int32_t Resolution; // 0x28
	EStrandsTexturesTraceType TraceType; // 0x2c
	float TraceDistance; // 0x30
	EStrandsTexturesMeshType MeshType; // 0x34
	UStaticMesh* StaticMesh; // 0x38
	USkeletalMesh* SkeletalMesh; // 0x40
	int32_t LODIndex; // 0x48
	int32_t SectionIndex; // 0x4c
	int32_t UVChannelIndex; // 0x50
	TArray<int32_t> GroupIndex; // 0x58
};

struct UCrowInputBase {
	UObject* BindObject; // 0x138
};

struct UCrowLevelSequencePlayer {
	ALevelSequenceActor* LevelSequenceActor; // 0x38
};

struct UOculusSceneCaptureCubemap {
	TArray<USceneCaptureComponent2D*> CaptureComponents; // 0x38
};

struct ABP_Grenade_M18Ammo_C {
	USphereComponent* Sphere; // 0x1910
	USkeletalMeshComponent* SK_G67_02; // 0x1918
	UParticleSystemComponent* DynamicRicochet_Trail_Generic_thin; // 0x1920
};

struct UDemoNetDriver {
	TMap<FString, FRollbackNetStartupActorInfo> RollbackNetStartupActors; // 0x840
	float CheckpointSaveMaxMSPerFrame; // 0x9ec
	TArray<FMulticastRecordOptions> MulticastRecordOptions; // 0xa10
	bool bIsLocalReplay; // 0xa20
	TArray<APlayerController*> SpectatorControllers; // 0xa28
};

struct UEdGraphNode {
	TArray<UEdGraphPin_Deprecated*> DeprecatedPins; // 0x38
	int32_t NodePosX; // 0x48
	int32_t NodePosY; // 0x4c
	int32_t NodeWidth; // 0x50
	int32_t NodeHeight; // 0x54
	ENodeAdvancedPins AdvancedPinDisplay; // 0x58
	ENodeEnabledState EnabledState; // 0x59
	char bDisplayAsDisabled : 1; // 0x5b
	char bUserSetEnabledState : 1; // 0x5b
	char bIsNodeEnabled : 1; // 0x5b
	char bHasCompilerMessage : 1; // 0x5b
	FString NodeComment; // 0x60
	int32_t ErrorType; // 0x70
	FString errorMsg; // 0x78
	FGuid NodeGuid; // 0x88
};

struct UBlendSpace {
	EBlendSpaceAxis AxisToScaleAnimation; // 0x148
};

struct AWaterBodyExclusionVolume {
	bool bIgnoreAllOverlappingWaterBodies; // 0x268
	TArray<AWaterBody*> WaterBodiesToIgnore; // 0x270
};

struct UParticleModuleOrientationAxisLock {
	EParticleAxisLock LockAxisFlags; // 0x30
};

struct UARFaceGeometry {
	FVector LookAtTarget; // 0xf8
	bool bIsTracked; // 0x104
	TMap<EARFaceBlendShape, float> BlendShapes; // 0x108
	FTransform LeftEyeTransform; // 0x190
	FTransform RightEyeTransform; // 0x1c0
};

struct UDynamicEntryBoxBase {
	EDynamicBoxType EntryBoxType; // 0x108
	FVector2D EntrySpacing; // 0x10c
	TArray<FVector2D> SpacingPattern; // 0x118
	FSlateChildSize EntrySizeRule; // 0x128
	EHorizontalAlignment EntryHorizontalAlignment; // 0x130
	EVerticalAlignment EntryVerticalAlignment; // 0x131
	int32_t MaxElementSize; // 0x134
	FRadialBoxSettings RadialBoxSettings; // 0x138
	FUserWidgetPool EntryWidgetPool; // 0x158
};

struct USoundNodeOscillator {
	char bModulateVolume : 1; // 0x48
	char bModulatePitch : 1; // 0x48
	float AmplitudeMin; // 0x4c
	float AmplitudeMax; // 0x50
	float FrequencyMin; // 0x54
	float FrequencyMax; // 0x58
	float OffsetMin; // 0x5c
	float OffsetMax; // 0x60
	float CenterMin; // 0x64
	float CenterMax; // 0x68
};

struct UCrowWorldAnimator {
	char IsInitialized : 1; // 0x28
	char TriggersEnabled : 1; // 0x28
	UCrowWorldMapConfig* MapConfig; // 0x30
	ACrowWorldActor* WorldActor; // 0x38
	bool IsAnimationBlocked; // 0x40
	TArray<FCrowWorldLayoutItemAnimation> AnimationDatas; // 0x48
	TArray<FCrowWorldAnimationInstance> AnimationInstances; // 0x58
	TArray<FCrowWorldAnimationState> ActiveAnimationStates; // 0x68
	TArray<UCrowWorldSMC*> ShakingSMCArray; // 0x78
};

struct UStreamMediaSource {
	FString StreamUrl; // 0x88
};

struct UAkItemProperties {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnPropertyDragged; // 0x118
};

struct UCrowLobbyRecordManager {
	TMap<FString, FCrowLobbyProfileRecord> UserProfileList; // 0x28
	TMap<int32_t, FCrowLobbyRankRecord> MyRankRecords; // 0x78
	FCrowLobbyWeaponRecord MyFavoriteWeaponRecord; // 0xc8
	TArray<FCrowLobbyWeaponRecord> MyWeaponRecords; // 0x118
	TMap<int32_t, FCrowLobbyRankRecords> RankRecordList; // 0x128
	UCrowWidgetBase* ProfileRecordWidget; // 0x178
	UCrowWidgetBase* MyFavoriteWeaponRecordWidget; // 0x180
	UCrowWidgetBase* MyWeaponRecordsWidget; // 0x188
	UCrowWidgetBase* MyRankRecordsWidget; // 0x190
	UCrowWidgetBase* RankRecordsWidget; // 0x198
	FCrowLobbyProfileRecord DefaultLobbyProfileRecord; // 0x1a0
	FCrowLobbyRankRecord DefaultLobbyRankRecord; // 0x238
};

struct UDebugCameraControllerSettings {
	TArray<FDebugCameraControllerSettingsViewModeIndex> CycleViewModes; // 0x38
};

struct UFont {
	EFontCacheType FontCacheType; // 0x30
	TArray<FFontCharacter> Characters; // 0x38
	TArray<UTexture2D*> Textures; // 0x48
	int32_t IsRemapped; // 0x58
	float EmScale; // 0x5c
	float Ascent; // 0x60
	float Descent; // 0x64
	float Leading; // 0x68
	int32_t Kerning; // 0x6c
	FFontImportOptionsData ImportOptions; // 0x70
	int32_t NumCharacters; // 0x120
	TArray<int32_t> MaxCharHeight; // 0x128
	float ScalingFactor; // 0x138
	int32_t LegacyFontSize; // 0x13c
	FName LegacyFontName; // 0x140
	FCompositeFont CompositeFont; // 0x148
};

struct UWB_Crosshair_Mh6_Flare_TP_C {
	UImage* IMG_ZoomIn_2; // 0x460
	UImage* IMG_ZoomIn_4; // 0x468
};

struct UAkSettings {
	char MaxSimultaneousReverbVolumes; // 0x28
	FFilePath WwiseProjectPath; // 0x30
	FDirectoryPath WwiseSoundDataFolder; // 0x40
	bool bAutoConnectToWAAPI; // 0x50
	ECollisionChannel DefaultOcclusionCollisionChannel; // 0x51
	TMap<TSoftObjectPtr<UPhysicalMaterial>, FAkGeometrySurfacePropertiesToMap> AkGeometryMap; // 0x58
	bool SplitSwitchContainerMedia; // 0xa8
	bool SplitMediaPerFolder; // 0xa9
	bool UseEventBasedPackaging; // 0xaa
	bool EnableAutomaticAssetSynchronization; // 0xab
	FString CommandletCommitMessage; // 0xb0
	TMap<FString, FString> UnrealCultureToWwiseCulture; // 0xc0
	bool AskedToUseNewAssetManagement; // 0x110
	bool bEnableMultiCoreRendering; // 0x111
	bool MigratedEnableMultiCoreRendering; // 0x112
	bool FixupRedirectorsDuringMigration; // 0x113
	FDirectoryPath WwiseWindowsInstallationPath; // 0x118
	FFilePath WwiseMacInstallationPath; // 0x128
};

struct UMovieSceneAudioSection {
	USoundBase* Sound; // 0xe8
	FFrameNumber StartFrameOffset; // 0xf0
	float StartOffset; // 0xf4
	float AudioStartTime; // 0xf8
	float AudioDilationFactor; // 0xfc
	float AudioVolume; // 0x100
	FMovieSceneFloatChannel SoundVolume; // 0x108
	FMovieSceneFloatChannel PitchMultiplier; // 0x1a8
	FMovieSceneActorReferenceData AttachActorData; // 0x248
	bool bLooping; // 0x2f8
	bool bSuppressSubtitles; // 0x2f9
	bool bOverrideAttenuation; // 0x2fa
	USoundAttenuation* AttenuationSettings; // 0x300
	FDelegate OnQueueSubtitles; // 0x308
	FMulticastInlineDelegate OnAudioFinished; // 0x318
	FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x328
};

struct UInputTouchDelegateBinding {
	TArray<FBlueprintInputTouchDelegateBinding> InputTouchDelegateBindings; // 0x28
};

struct UParticleModuleLocationPrimitiveTriangle {
	FRawDistributionVector StartOffset; // 0x30
	FRawDistributionFloat Height; // 0x78
	FRawDistributionFloat Angle; // 0xa8
	FRawDistributionFloat Thickness; // 0xd8
};

struct UDeformMeshPolygonsTransformProperties {
	EGroupTopologyDeformationStrategy DeformationStrategy; // 0x60
	EQuickTransformerMode TransformMode; // 0x61
	bool bSelectFaces; // 0x62
	bool bSelectEdges; // 0x63
	bool bSelectVertices; // 0x64
	bool bSnapToWorldGrid; // 0x65
	bool bShowWireframe; // 0x66
	EWeightScheme SelectedWeightScheme; // 0x68
	double HandleWeight; // 0x70
	bool bPostFixHandles; // 0x78
};

struct UCrowLootInvenItemInfo {
	UCrowItemInfoWidget* LootItemInfo; // 0x348
	UCrowItemInfoWidget* MyItemInfo; // 0x350
};

struct UCrowMissionRewardSlotWidget {
	UTextBlock* TB_Exp; // 0x348
};

struct UCrowReplayWidget {
	UUserWidget* ItemWidgetClass; // 0x348
	UCrowButton* BT_Play; // 0x350
	UCrowButton* BT_Lock; // 0x358
	UCrowButton* BT_Delete; // 0x360
	UCrowButton* BT_Refresh; // 0x368
	UCanvasPanel* CP_ReplayDesc; // 0x370
	UTextBlock* TB_CurrentNumReplay; // 0x378
	UTextBlock* TB_MaxNumReplay; // 0x380
	UTextBlock* TB_TotalTime; // 0x388
	UTextBlock* TB_Lock; // 0x390
	UImage* IMG_Map; // 0x398
	UTextBlock* TB_MapName; // 0x3a0
	UTextBlock* TB_MapMode; // 0x3a8
	UTextBlock* TB_TotalCapacity; // 0x3b0
	UScrollBox* SB_ReplayList; // 0x3b8
	UHorizontalBox* SquadFirst; // 0x3c0
	UHorizontalBox* SquadSecond; // 0x3c8
	UHorizontalBox* SquadThird; // 0x3d0
	UHorizontalBox* SquadFourth; // 0x3d8
	UCrowSortButtonWidget* WB_Button_Sorting_Date; // 0x3e0
	UCrowSortButtonWidget* WB_Button_Sorting_Mode; // 0x3e8
	UCrowSortButtonWidget* WB_Button_Sorting_PlayTime; // 0x3f0
	UCrowSortButtonWidget* WB_Button_Sorting_Capacity; // 0x3f8
	UCrowSortButtonWidget* WB_Button_Sorting_GamerVer; // 0x400
	UCrowSortButtonWidget* WB_Button_Sorting_Playable; // 0x408
	UTextBlock* TB_SquadName_First; // 0x410
	UTextBlock* TB_SquadName_Second; // 0x418
	UTextBlock* TB_SquadName_Third; // 0x420
	UTextBlock* TB_SquadName_Fourth; // 0x428
	TArray<UHorizontalBox*> SquadBoxList; // 0x430
	TArray<UTextBlock*> SquadNameList; // 0x440
	TArray<UCrowReplayInfo*> ReplayInfoList; // 0x450
	TArray<UCrowSortButtonWidget*> SortButtonList; // 0x460
};

struct UAISenseConfig {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UMagicLeapARPinSettings {
	float UpdateCheckFrequency; // 0x28
	FMagicLeapARPinState OnUpdatedEventTriggerDelta; // 0x2c
};

struct UProceduralFoliageComponent {
	UProceduralFoliageSpawner* FoliageSpawner; // 0xb0
	float TileOverlap; // 0xb8
	AVolume* SpawningVolume; // 0xc0
	FGuid ProceduralGuid; // 0xc8
};

struct UCrowSoundRandomLoopingPlayer {
	TSoftObjectPtr<USoundWave> SoundWaveAssetPtr; // 0x48
	USoundWave* SoundWave; // 0x70
	char bLooping : 1; // 0x78
	char bRandomizeStartTime : 1; // 0x78
	float StartTimeMin; // 0x7c
	float StartTimeMax; // 0x80
};

struct UEditableTextWidgetStyle {
	FEditableTextStyle EditableTextStyle; // 0x30
};

struct UFlattenBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct UMovieScene3DConstraintTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x78
};

struct UCrowIndicatorClaymoreMine {
	UCanvasPanel* CP_Root; // 0x348
	UCanvasPanel* CP_LocateArrow; // 0x350
	UCanvasPanel* CP_Icon; // 0x358
	UImage* IMG_Icon; // 0x360
	APawn* InstalledPawn; // 0x368
	uint32_t InstalledPawnPlayerID; // 0x370
	char InstalledPawnTeamID; // 0x374
};

struct UCrowVehiclePreHUDCameraCover {
	UImage* CameraCoverImage; // 0x348
};

struct UBlueprintGeneratedClass {
	int32_t NumReplicatedProperties; // 0x230
	char bHasNativizedParent : 1; // 0x234
	char bHasCookedComponentInstancingData : 1; // 0x234
	TArray<UDynamicBlueprintBinding*> DynamicBindingObjects; // 0x238
	TArray<UActorComponent*> ComponentTemplates; // 0x248
	TArray<UTimelineTemplate*> Timelines; // 0x258
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x268
	USimpleConstructionScript* SimpleConstructionScript; // 0x278
	UInheritableComponentHandler* InheritableComponentHandler; // 0x280
	UStructProperty* UberGraphFramePointerProperty; // 0x288
	UFunction* UberGraphFunction; // 0x298
	TMap<FName, FBlueprintCookedComponentInstancingData> CookedComponentInstancingData; // 0x2a0
};

struct USceneCaptureComponentCube {
	UTextureRenderTargetCube* TextureTarget; // 0x2b0
	bool bCaptureRotation; // 0x2b8
	UTextureRenderTargetCube* TextureTargetLeft; // 0x2c0
	UTextureRenderTargetCube* TextureTargetRight; // 0x2c8
	UTextureRenderTarget2D* TextureTargetODS; // 0x2d0
	float IPD; // 0x2d8
};

struct UDestructibleComponent {
	char bFractureEffectOverride : 1; // 0x690
	TArray<FFractureEffect> FractureEffects; // 0x698
	bool bEnableHardSleeping; // 0x6a8
	float LargeChunkThreshold; // 0x6ac
	FMulticastInlineDelegate OnComponentFracture; // 0x6c0
};

struct UEditableTextBox {
	FText Text; // 0x108
	FDelegate TextDelegate; // 0x120
	FEditableTextBoxStyle WidgetStyle; // 0x130
	USlateWidgetStyleAsset* Style; // 0x928
	FText HintText; // 0x930
	FDelegate HintTextDelegate; // 0x948
	FSlateFontInfo Font; // 0x958
	FLinearColor ForegroundColor; // 0x9b0
	FLinearColor BackgroundColor; // 0x9c0
	FLinearColor ReadOnlyForegroundColor; // 0x9d0
	bool IsReadOnly; // 0x9e0
	bool IsPassword; // 0x9e1
	float MinimumDesiredWidth; // 0x9e4
	FMargin Padding; // 0x9e8
	bool IsCaretMovedWhenGainFocus; // 0x9f8
	bool SelectAllTextWhenFocused; // 0x9f9
	bool RevertTextOnEscape; // 0x9fa
	bool ClearKeyboardFocusOnCommit; // 0x9fb
	bool SelectAllTextOnCommit; // 0x9fc
	bool AllowContextMenu; // 0x9fd
	EVirtualKeyboardType KeyboardType; // 0x9fe
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x9ff
	EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0xa00
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xa01
	ETextJustify Justification; // 0xa02
	FShapedTextOptions ShapedTextOptions; // 0xa03
	FMulticastInlineDelegate OnTextChanged; // 0xa08
	FMulticastInlineDelegate OnTextCommitted; // 0xa18
};

struct UCrowMissionCategoryWidget {
	UCrowMissionSlotWidget* MissionSlotWidget; // 0x348
	UTextBlock* TB_CategoryName; // 0x350
	UVerticalBox* VB_CategoryContents; // 0x358
	char CurrMissionModeType; // 0x360
	bool IsBG; // 0x361
};

struct UDistributionVectorParameterBase {
	FName ParameterName; // 0x50
	FVector MinInput; // 0x58
	FVector MaxInput; // 0x64
	FVector MinOutput; // 0x70
	FVector MaxOutput; // 0x7c
	DistributionParamMode ParamModes[0x3]; // 0x88
};

struct UMovieSceneNiagaraVectorParameterTrack {
	int32_t ChannelsUsed; // 0xb0
};

struct UMeshStatisticsProperties {
	FString Mesh; // 0x60
	FString UV; // 0x70
	FString Attributes; // 0x80
};

struct UCrowSettingsWidget {
	UCrowSettingsCategoryContentsWidget* CategoryContentsWidgetClass; // 0x388
	UCrowSettingsTabWidget* WB_SettingsTab; // 0x390
	UScrollBox* SB_SettingsDatas; // 0x398
	UVerticalBox* VB_SettingsDatas; // 0x3a0
	UCrowButton* BT_Default; // 0x3a8
	UCrowButton* BT_ResetAll; // 0x3b0
	UCrowButton* BT_Apply; // 0x3b8
	UCrowButton* BT_ESC; // 0x3c0
	UButton* BT_EditingMode; // 0x3c8
	UCrowSettingsPopupWidget* WB_SettingsPopup; // 0x3d0
	UCrowSettingsExplanationWidget* WB_SettingsExplanation; // 0x3d8
	UHorizontalBox* HB_Icon_GRAC; // 0x3e0
	TArray<UCrowSettingsCategoryContentsWidget*> Categories; // 0x3e8
	FActionKeySlot EditingActionSlot; // 0x3f8
	FAxisKeySlot EditingAxisSlot; // 0x428
	FString EditingDropdownSlotItemUniqueName; // 0x460
};

struct ACrowProjectileHeliFlare {
	FVector ProjectileDir; // 0x18d0
	UParticleSystem* TracerFX_1P; // 0x18e0
	UParticleSystem* TracerFX_3P; // 0x18e8
	UParticleSystemComponent* TracerFXComp_1P; // 0x18f0
	UParticleSystemComponent* TracerFXComp_3P; // 0x18f8
	UParticleSystem* SmokeEffect; // 0x1900
	UAkAudioEvent* ExplosionSound; // 0x1908
	float RandRangeSpeedMin; // 0x1910
	float RandRangeSpeedMax; // 0x1914
	AActor* ImpedimentsActorClass; // 0x1918
	AActor* ImpedimentsActor; // 0x1920
	float AddValue; // 0x1928
	FVector PrevVelocity; // 0x192c
	float ReduceValue; // 0x1938
};

struct ABP_CrowWeaponPartsLasersight_uzi001_C {
	UParticleSystemComponent* FX_Wp_LaserLight_M001; // 0x260
	UCrowLaserBeamComponent* CrowLaserBeam; // 0x268
	USkeletalMeshComponent* UZI001_LasersightSIDE; // 0x270
};

struct UShowLoginUICallbackProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UCrowTimeSync {
	float ElapsedTime; // 0xb0
	bool bIsActiveTimer; // 0xb4
};

struct UIpNetDriver {
	char LogPortUnreach : 1; // 0x748
	char AllowPlayerPortUnreach : 1; // 0x748
	uint32_t MaxPortCountToTry; // 0x74c
	uint32_t ServerDesiredSocketReceiveBufferBytes; // 0x75c
	uint32_t ServerDesiredSocketSendBufferBytes; // 0x760
	uint32_t ClientDesiredSocketReceiveBufferBytes; // 0x764
	uint32_t ClientDesiredSocketSendBufferBytes; // 0x768
	double MaxSecondsInReceive; // 0x770
	int32_t NbPacketsBetweenReceiveTimeTest; // 0x778
	float ResolutionConnectionTimeout; // 0x77c
};

struct UNiagaraDataInterfaceWater {
	AWaterBody* SourceBody; // 0x38
};

struct UCrowWorldAssetSpotLight {
	USpotLightComponent* SpotLightData; // 0x28
};

struct UUPSGroupMovementManager {
	TSet<TWeakObjectPtr<AUPSMovementGroup>> MovementGroups; // 0x28
};

struct UCrowSettingsPopupWidget {
	UTextBlock* TB_Title; // 0x348
	UTextBlock* TB_Message; // 0x350
	UCrowButton* BT_Close; // 0x358
	UCrowButton* BT_Confirm; // 0x360
	UCrowButton* BT_Cancel; // 0x368
};

struct ABP_Grenade_M84Ammo_C {
	USkeletalMeshComponent* SK_G67_02; // 0x18f0
	UParticleSystemComponent* DynamicRicochet_Trail_Generic_thin; // 0x18f8
};

struct UAkSurfaceReflectorSetComponent {
	char bEnableSurfaceReflectors : 1; // 0x1f8
	TArray<FAkPoly> AcousticPolys; // 0x200
	char bEnableDiffraction : 1; // 0x210
	char bEnableDiffractionOnBoundaryEdges : 1; // 0x210
	AActor* AssociatedRoom; // 0x218
};

struct UEditableGameplayTagQueryExpression_NoExprMatch {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct ACrowCloudRenderActor {
	UCurveVector* CurveScale; // 0x220
	UCurveVector* CurveLocation; // 0x228
	UMaterialInterface* MaterialInstance; // 0x230
	USceneComponent* SceneComp; // 0x238
	UStaticMeshComponent* PreviewMesh; // 0x240
	UStaticMeshComponent* PlaneMesh; // 0x248
	UTextureRenderTarget2D* RenderTarget; // 0x250
	FCrowCloudAnimInfo LocationAnimInfo; // 0x258
	FCrowCloudAnimInfo ScaleAnimInfo; // 0x26c
	FTransform TM; // 0x280
	UMaterialInstanceDynamic* Mid; // 0x2b0
	bool bRendering; // 0x2b8
};

struct UCrowCustomizeWeaponNumSlotWidget {
	UTextBlock* TB_Number; // 0x348
	UImage* IMG_Acc; // 0x350
	UImage* IMG_Hover; // 0x358
	UImage* IMG_Select; // 0x360
	UCrowButton* BT_Customize_WeaponAccNumberSlot; // 0x368
	UWidgetSwitcher* WS_NumberEquip; // 0x370
	FLinearColor NormalTextColor; // 0x3a8
	FLinearColor HoverTextColor; // 0x3b8
	FCrowWeaponStickerInfo SlotInfo; // 0x3c8
	bool bIsSelect; // 0x3d0
};

struct UCrowConquestAreaComponent {
	ACrowConquestArea* ParentConquestArea; // 0x210
};

struct UPolygonSelectionMechanic {
	UPolygonSelectionMechanicProperties* Properties; // 0x50
	APreviewGeometryActor* PreviewGeometryActor; // 0x360
	UTriangleSetComponent* DrawnTriangleSetComponent; // 0x368
	UMaterialInterface* HighlightedFaceMaterial; // 0x3c0
};

struct UEdgeLoopInsertionTool {
	UEdgeLoopInsertionProperties* Settings; // 0x98
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0x300
};

struct AMagicLeapARPinRenderer {
	bool bInfoActorsVisibilityOverride; // 0x220
	TMap<FGuid, AMagicLeapARPinInfoActorBase*> AllInfoActors; // 0x228
	AMagicLeapARPinInfoActorBase* ClassToSpawn; // 0x280
};

struct ACrowSupplyEventParachuteActor {
	UBoxComponent* BoxComponent; // 0x220
	UProjectileMovementComponent* MovementComp; // 0x228
	USkeletalMeshComponent* Mesh; // 0x230
};

struct UCrowInGameMissionAlarmItem {
	bool IsComplateWidget; // 0x348
	UTextBlock* TB_MissionTitle; // 0x350
	UTextBlock* TB_Count; // 0x358
	UTextBlock* TB_WidgetTitle; // 0x360
	float RemoveTime; // 0x368
};

struct UMaterialExpressionVectorParameter {
	FLinearColor DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x68
	char PrimitiveDataIndex; // 0x69
};

struct UPhysicsConstraintTemplate {
	FConstraintInstance DefaultInstance; // 0x28
	TArray<FPhysicsConstraintProfileHandle> ProfileHandles; // 0x1e8
	FConstraintProfileProperties DefaultProfile; // 0x1f8
};

struct UTreeView {
	FDelegate BP_OnGetItemChildren; // 0x378
	FMulticastInlineDelegate BP_OnItemExpansionChanged; // 0x388
};

struct UProceduralPuncturedDiscToolProperties {
	float HoleRadius; // 0x80
};

struct UMovieSceneEventSection {
	FNameCurve Events; // 0xe8
	FMovieSceneEventSectionData EventData; // 0x160
};

struct UCrowCloudDamageHandler {
	TMap<int32_t, float> LastDamagedTimeData; // 0xb0
};

struct ULightmassPrimitiveSettingsObject {
	FLightmassPrimitiveSettings LightmassSettings; // 0x28
};

struct USubmixEffectDynamicsProcessorPreset {
	FSubmixEffectDynamicsProcessorSettings Settings; // 0xe0
};

struct UCrowSettingsSlotTitleWidget {
	UTextBlock* TB_Title; // 0x348
};

struct UNiagaraEventReceiverEmitterAction_SpawnParticles {
	uint32_t NumParticles; // 0x28
};

struct UPendingNetGame {
	UNetDriver* NetDriver; // 0x30
	UDemoNetDriver* DemoNetDriver; // 0x38
};

struct UCrowItemStatusDescWidget {
	UTextBlock* TB_Item_Status; // 0x348
	UTextBlock* TB_Status_Num; // 0x350
	UWidgetSwitcher* WS_UpdownIcon; // 0x358
};

struct UCrowVehicleEventDispatcher {
	FVehicleEventSetup EventSetup; // 0xb0
	ACrowVehiclePawn* VehiclePawn; // 0xe0
	TArray<FVehicleEvent> EventList; // 0xe8
	TArray<FVehicleEvent> SubEventList; // 0xf8
	TArray<FVehicleEventSync> EventListReplicated; // 0x108
	TArray<FVehicleEventSync> SubEventListReplicated; // 0x118
	bool bIsFirstPlayerOnBoardingFP; // 0x128
};

struct UMovieSceneCameraCutSection {
	bool bLockPreviousCamera; // 0xf0
	FGuid CameraGuid; // 0xf4
	FMovieSceneObjectBindingID CameraBindingID; // 0x104
	FTransform InitialCameraCutTransform; // 0x120
	bool bHasInitialCameraCutTransform; // 0x150
};

struct UCrowSettingsSlotDropdownSlot {
	UCrowSettingsSlotDropdownWidget* OwnerSlotWidget; // 0x348
	UCrowButton* BT_Dropdown; // 0x350
	UWidgetSwitcher* WS_Select; // 0x358
	UTextBlock* TB_SelectedText; // 0x360
	UTextBlock* TB_DeselectedText; // 0x368
	FString Key; // 0x370
	uint32_t Index; // 0x380
};

struct UCrowConquestMeteorExplosionPoint {
	UBillboardComponent* Billboard; // 0x1f8
	float IconScale; // 0x200
};

struct UCrowWeaponPartsSlotDetailWidget {
	UImage* IMG_Default; // 0x348
	UImage* IMG_Parts; // 0x350
	UWidgetSwitcher* WS_Parts; // 0x358
	UCrowButton* BT_PartsSlotDetail; // 0x360
	UPaperSprite* DefaultSprite; // 0x368
	ECrowOffSetType OffsetType; // 0x370
};

struct UWB_CrossHair_Landrover_Mount_Third_C {
	UBorder* b_Crosshair; // 0x450
	UImage* ImageCenter; // 0x458
	UImage* ImageCenterBorder; // 0x460
	UImage* ImageDown; // 0x468
	UImage* ImageDownBorder; // 0x470
	UImage* ImageLeft; // 0x478
	UImage* ImageLeftBorder; // 0x480
	UImage* ImageRight; // 0x488
	UImage* ImageRightBorder; // 0x490
	UImage* ImageUp; // 0x498
	UImage* ImageUpBorder; // 0x4a0
};

struct USoundSubmixBase {
	TArray<USoundSubmixBase*> ChildSubmixes; // 0x28
};

struct UPanelSlot {
	UPanelWidget* Parent; // 0x28
	UWidget* Content; // 0x30
};

struct USculptBrushProperties {
	float Depth; // 0x78
	bool bHitBackFaces; // 0x7c
	float Lazyness; // 0x80
	bool bShowPerBrushProps; // 0x84
};

struct ACrowWorldEditorActor {
	USceneComponent* SceneRoot; // 0x220
	bool SmallActor; // 0x228
	bool StaticLargeActor; // 0x229
	bool LandmarkActor; // 0x22a
	float LightProbeRatioMultiplier; // 0x22c
	FCrowWorldActorDestruction ActorDestruction; // 0x230
	UCrowWorldLODSetting* LODSettingOverride; // 0x248
	TArray<FCrowWorldActorMeshLOD> MeshLODArray; // 0x250
	ECrowWorldEditorActorLOD PreviewLOD; // 0x260
	UCrowWorldMapConfig* CachedMapConfig; // 0x268
	TArray<UStaticMeshComponent*> DebugMeshLODArray; // 0x270
};

struct AGameSession {
	int32_t MaxSpectators; // 0x220
	int32_t MaxPlayers; // 0x224
	int32_t MaxPartySize; // 0x228
	char MaxSplitscreensPerConnection; // 0x22c
	bool bRequiresPushToTalk; // 0x22d
	FName SessionName; // 0x230
};

struct UCrowSortButtonWidget {
	FText ButtonName; // 0x358
	UWidgetSwitcher* WS_Sorting; // 0x370
	UTextBlock* TB_Base; // 0x378
	UTextBlock* TB_Ascending; // 0x380
	UTextBlock* TB_Descending; // 0x388
	UCrowButton* BT_Base; // 0x390
	UCrowButton* BT_Ascending; // 0x398
	UCrowButton* BT_Descending; // 0x3a0
	TArray<UCrowButton*> ButtonList; // 0x3a8
};

struct UMaterialExpressionViewProperty {
	EMaterialExposedViewProperty Property; // 0x40
};

struct UStandardSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct USmoothFillBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	bool bPreserveUVFlow; // 0x68
};

struct UWB_SettingsSlotSelection_C {
	UImage* IMG_BG; // 0x388
	UImage* IMG_Next_Bg; // 0x390
	UImage* IMG_Next_Icon; // 0x398
	UImage* IMG_Prev_Bg; // 0x3a0
	UImage* IMG_Prev_Icon; // 0x3a8
};

struct UCrowMatchingTimerWidget {
	UTextBlock* TB_MOD_Name; // 0x348
	UTextBlock* TB_Map_Name; // 0x350
	UTextBlock* TB_Timer; // 0x358
	USpacer* SP_Player; // 0x360
	UTextBlock* TB_MatchingPlayer; // 0x368
	UTextBlock* TB_Player; // 0x370
	UCrowButton* BT_Cancel; // 0x378
	UCanvasPanel* CP_MatchingMessage; // 0x380
	UTextBlock* TB_Message; // 0x388
	UWidgetAnimation* AniMatchingTimerShow; // 0x390
	ACrowSceneLobby* SceneLobby; // 0x398
	bool OpenedWidget; // 0x3a0
	bool SoloMatch; // 0x3a1
	float DurationTime; // 0x3a4
};

struct UMaterialExpressionSkyAtmosphereLightDirection {
	int32_t LightIndex; // 0x40
};

struct UCrowWorldEventAlarmWidget {
	UTextBlock* TB_Title; // 0x348
	UTextBlock* TB_Desc; // 0x350
	UImage* IMG_Icon; // 0x358
	UWidgetAnimation* AniShow; // 0x360
	UWidgetAnimation* AniHide; // 0x368
	ACrowWorldEventSetting* WorldEventSetting; // 0x370
};

struct UCrowScoreRankSlotModeData {
	uint32_t Rank; // 0x30
	FText Class; // 0x38
	FString ID; // 0x50
	uint32_t Score; // 0x60
	FString PlayTime; // 0x68
	uint32_t PlayCount; // 0x78
	uint32_t AverageScore; // 0x7c
};

struct UTransformMeshesTool {
	UTransformMeshesToolProperties* TransformProps; // 0x98
	TArray<FTransformMeshesTarget> ActiveGizmos; // 0xb0
};

struct UInterpTrackInstColorProp {
	FColor ResetColor; // 0x58
};

struct UEnvQueryGenerator_Composite {
	TArray<UEnvQueryGenerator*> Generators; // 0x50
	char bAllowDifferentItemTypes : 1; // 0x60
	char bHasMatchingItemType : 1; // 0x60
	UEnvQueryItemType* ForcedItemType; // 0x68
};

struct UMediaPlaylist {
	TArray<UMediaSource*> Items; // 0x28
};

struct UCrowProjectileThrowIndicator {
	UCanvasPanel* CP_Root; // 0x348
	UCanvasPanel* CP_LocateArrow; // 0x350
	UCanvasPanel* CP_Icon; // 0x358
	UImage* IMG_Icon; // 0x360
	FName NearAnim; // 0x368
	FName FarAnim; // 0x370
	float NearDist; // 0x378
	float FarDist; // 0x37c
	AActor* OwnerActor; // 0x380
};

struct UWB_SystemMessageBox_Bottom_C {
	UImage* Image_75; // 0x368
};

struct UCrowWorldSplineMetaComponent {
	TMap<int32_t, FCrowWorldSplineLinkedPoint> PointMeta; // 0xb0
	FCrowWorldSplineUID SplineUID; // 0x100
	TMap<int32_t, FCrowWorldSplineUID> LinkedSplineUIDs; // 0x110
};

struct UUserDefinedEnum {
	TMap<FName, FText> DisplayNameMap; // 0x60
};

struct UCrowCharacterDyingIconWidget {
	UCanvasPanel* CP_DisconnectIcon; // 0x3c8
	UImage* IMG_2ndWindGauge; // 0x3d0
	ACrowPlayerStateBase* TargetPlayerState; // 0x3d8
	ACrowCharacterPawn* CharacterPawn; // 0x3e0
	UMaterialInstanceDynamic* GaugeMaterial; // 0x3e8
	UWidgetAnimation* AniFastBleeding; // 0x3f0
	UWidgetAnimation* AniStopBleeding; // 0x3f8
	UWidgetAnimation* AniCallHelp; // 0x400
};

struct UCrowCustomizeEmotionSlotWidget {
	UImage* IMG_Icon; // 0x348
	UWidgetSwitcher* WS_Grade; // 0x350
	UImage* IMG_Lock; // 0x358
	UImage* IMG_Equiped; // 0x360
	UImage* IMG_Selected; // 0x368
	UImage* IMG_NewIcon; // 0x370
	UCrowButton* BT_Customize_Slot; // 0x378
	UCanvasPanel* CP_Cost; // 0x380
	UTextBlock* TB_Label_Money; // 0x388
	uint32_t ItemIndex; // 0x390
	bool bIsSelect; // 0x394
	bool bIsEquip; // 0x395
	bool bIsEmotion; // 0x396
	float DelayTimeHover; // 0x398
	FTimerHandle DelayTimeHoverTimerHandle; // 0x3a0
	FCrowShopTableRow ShopTableRow; // 0x3a8
	FCrowItemData ItemData; // 0x420
};

struct UAIAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFail; // 0x38
};

struct UInterpGroupCamera {
	UCameraAnim* CameraAnimInst; // 0x50
	float CompressTolerance; // 0x58
};

struct UMaterialExpressionPerInstanceCustomData {
	FExpressionInput DefaultValue; // 0x40
	float ConstDefaultValue; // 0x54
	uint32_t DataIndex; // 0x58
};

struct UParticleModuleAcceleration {
	FRawDistributionVector Acceleration; // 0x38
	char bApplyOwnerScale : 1; // 0x80
};

struct UParticleModuleAccelerationConstant {
	FVector Acceleration; // 0x38
};

struct UEnvQueryGenerator_PathingGrid {
	FAIDataProviderBoolValue PathToItem; // 0xf8
	UNavigationQueryFilter* NavigationFilter; // 0x130
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x138
};

struct UPhysicsInspectorTool {
	UCollisionGeometryVisualizationProperties* VizSettings; // 0x90
	TArray<UPhysicsObjectToolPropertySet*> ObjectData; // 0x98
	UMaterialInterface* LineMaterial; // 0xa8
	TArray<UPreviewGeometry*> PreviewElements; // 0xb0
};

struct UScaleBoxSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UInputComponent {
	TArray<FCachedKeyToActionInfo> CachedKeyToActionInfo; // 0x120
};

struct URichTextBlockImageDecorator {
	UDataTable* ImageSet; // 0x28
};

struct UBlackboardKeyType_NativeEnum {
	FString enumName; // 0x30
	UEnum* EnumType; // 0x40
};

struct UParticleModuleAccelerationBase {
	char bAlwaysInWorldSpace : 1; // 0x30
};

struct UTextureLODSettings {
	TArray<FTextureLODGroup> TextureLODGroups; // 0x28
};

struct UEditNormalsOperatorFactory {
	UEditNormalsTool* Tool; // 0x30
};

struct UCrowChangeNicknameWidget {
	UCrowButton* BT_Ok; // 0x368
	UCrowButton* BT_Cancel; // 0x370
	UEditableTextBox* TB_Nickname_Text; // 0x378
	UTextBlock* TB_CurrentNickname; // 0x380
	int32_t ChangeNicknameItemIndex; // 0x388
};

struct UParticleSystem {
	float UpdateTime_FPS; // 0x30
	float UpdateTime_Delta; // 0x34
	float WarmupTime; // 0x38
	float WarmupTickRate; // 0x3c
	TArray<UParticleEmitter*> Emitters; // 0x40
	UParticleSystemComponent* PreviewComponent; // 0x50
	UInterpCurveEdSetup* CurveEdSetup; // 0x58
	float LODDistanceCheckTime; // 0x60
	float MacroUVRadius; // 0x64
	TArray<float> LODDistances; // 0x68
	TArray<FParticleSystemLOD> LODSettings; // 0x78
	FBox FixedRelativeBoundingBox; // 0x88
	float SecondsBeforeInactive; // 0xa4
	float Delay; // 0xa8
	float DelayLow; // 0xac
	char bOrientZAxisTowardCamera : 1; // 0xb0
	char bUseFixedRelativeBoundingBox : 1; // 0xb0
	char bShouldResetPeakCounts : 1; // 0xb0
	char bHasPhysics : 1; // 0xb0
	char bUseRealtimeThumbnail : 1; // 0xb0
	char ThumbnailImageOutOfDate : 1; // 0xb0
	char bUseDelayRange : 1; // 0xb1
	char bAllowManagedTicking : 1; // 0xb1
	char bAutoDeactivate : 1; // 0xb1
	char bRegenerateLODDuplicate : 1; // 0xb1
	EParticleSystemUpdateMode SystemUpdateMode; // 0xb2
	ParticleSystemLODMethod LODMethod; // 0xb3
	EParticleSystemInsignificanceReaction InsignificantReaction; // 0xb4
	EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod; // 0xb5
	EParticleSignificanceLevel MaxSignificanceLevel; // 0xb7
	uint32_t MinTimeBetweenTicks; // 0xb8
	float InsignificanceDelay; // 0xbc
	FVector MacroUVPosition; // 0xc0
	FBox CustomOcclusionBounds; // 0xcc
	TArray<FLODSoloTrack> SoloTracking; // 0xe8
	TArray<FNamedEmitterMaterial> NamedMaterialSlots; // 0xf8
};

struct ACrowConquestSpawnPoint {
	ECrowTeam_RedBlue Team; // 0x220
};

struct UCrowFriendSlotWidget {
	UCrowWidgetImage* IMG_UserThumenail; // 0x348
	UCrowWidgetImage* IMG_Rank; // 0x350
	UTextBlock* TB_UserLevel; // 0x358
	UTextBlock* TB_Username; // 0x360
	UTextBlock* TB_UserStatus; // 0x368
	UTextBlock* TB_RecentTimer; // 0x370
	UScaleBox* SB_Rank; // 0x378
	UImage* IMG_ParyOwner; // 0x380
	UImage* IMG_OnlineBG; // 0x388
	UCanvasPanel* CP_ExSquad; // 0x390
	UCrowButton* BT_Slot; // 0x398
	UCrowButton* BT_UserInfo; // 0x3a0
	UWidgetSwitcher* WS_ButtonStauts; // 0x3a8
	UCrowButton* BT_InviteParty; // 0x3b0
	UCrowButton* BT_CancelInvite; // 0x3b8
	UCrowButton* BT_JoinParty; // 0x3c0
	UCrowButton* BT_PlayWith; // 0x3c8
	UCrowButton* BT_InviteSession; // 0x3d0
	UCrowButton* BT_RecentInviteParty; // 0x3d8
	UCrowButton* BT_RecentCancelInvite; // 0x3e0
	UCrowButton* BT_RecentRequsetFriend; // 0x3e8
	UCrowButton* BT_KIckUser; // 0x3f0
	UCrowButton* BT_PromotedUser; // 0x3f8
	UCrowButton* BT_SearchInviteParty; // 0x400
	UCrowButton* BT_SearchCancelInvite; // 0x408
	UCrowButton* BT_SearchRequsetFriend; // 0x410
	UCrowButton* BT_Accept; // 0x418
	UCrowButton* BT_Reject; // 0x420
	UCrowButton* BT_CancelRequest; // 0x428
	UCanvasPanel* CP_ButtonToolTip; // 0x430
	UTextBlock* TB_ToolTip; // 0x438
	FLinearColor StateColor_OnLine; // 0x450
	FLinearColor StateColor_OffLine; // 0x460
	FLinearColor StateColor_Party; // 0x470
	FLinearColor StateColor_PartyFull; // 0x480
	FLinearColor StateColor_GamePlay; // 0x490
	FCrowGameFriendInfo FriendInfo; // 0x4a0
	FCrowRecentGamePlayUserInfo RecentGamePlayUserInfo; // 0x4d0
	FCrowPartyMember PartyMemberInfo; // 0x510
	EFriendSlotType CurrentSlotType; // 0x638
};

struct UCrowItemSlotMiniWidget {
	UImage* IMG_Selected; // 0x348
	UImage* IMG_Equiped; // 0x350
	UCrowButton* BT_Customize_List_Slot; // 0x358
	UTextBlock* TB_ItemName; // 0x360
	UTextBlock* TB_Status; // 0x368
	UWidgetSwitcher* WS_IconIMG; // 0x370
	UImage* IMG_IconIMG_Color; // 0x378
	bool Selected; // 0x3c0
	bool Equiped; // 0x3c1
	bool UnEquipBtn; // 0x3c2
	bool useDeselect; // 0x3c3
	int32_t SlotValue; // 0x3c4
	int32_t IntValue; // 0x3c8
	FCrowItemColorTableRowBase CurrentColorTable; // 0x3d0
	ECrowItemSlotMiniWSType CurrentItemSlotMiniWSType; // 0x400
	ECrowCharacterAppearanceType CurrentCategoryType; // 0x401
	ACrowSceneLobby* SceneLobby; // 0x408
};

struct AGameNetworkManager {
	float BadPacketLossThreshold; // 0x220
	float SeverePacketLossThreshold; // 0x224
	int32_t BadPingThreshold; // 0x228
	int32_t SeverePingThreshold; // 0x22c
	int32_t AdjustedNetSpeed; // 0x230
	float LastNetSpeedUpdateTime; // 0x234
	int32_t TotalNetBandwidth; // 0x238
	int32_t MinDynamicBandwidth; // 0x23c
	int32_t MaxDynamicBandwidth; // 0x240
	char bIsStandbyCheckingEnabled : 1; // 0x244
	char bHasStandbyCheatTriggered : 1; // 0x244
	float StandbyRxCheatTime; // 0x248
	float StandbyTxCheatTime; // 0x24c
	float PercentMissingForRxStandby; // 0x250
	float PercentMissingForTxStandby; // 0x254
	float PercentForBadPing; // 0x258
	float JoinInProgressStandbyWaitTime; // 0x25c
	float MoveRepSize; // 0x260
	float MAXPOSITIONERRORSQUARED; // 0x264
	float MAXNEARZEROVELOCITYSQUARED; // 0x268
	float CLIENTADJUSTUPDATECOST; // 0x26c
	float MAXCLIENTUPDATEINTERVAL; // 0x270
	float MaxClientForcedUpdateDuration; // 0x274
	float ServerForcedUpdateHitchThreshold; // 0x278
	float ServerForcedUpdateHitchCooldown; // 0x27c
	float MaxMoveDeltaTime; // 0x280
	float MaxClientSmoothingDeltaTime; // 0x284
	float ClientNetSendMoveDeltaTime; // 0x288
	float ClientNetSendMoveDeltaTimeThrottled; // 0x28c
	float ClientNetSendMoveDeltaTimeStationary; // 0x290
	int32_t ClientNetSendMoveThrottleAtNetSpeed; // 0x294
	int32_t ClientNetSendMoveThrottleOverPlayerCount; // 0x298
	bool ClientAuthorativePosition; // 0x29c
	float ClientErrorUpdateRateLimit; // 0x2a0
	float ClientNetCamUpdateDeltaTime; // 0x2a4
	float ClientNetCamUpdatePositionLimit; // 0x2a8
	bool bMovementTimeDiscrepancyDetection; // 0x2ac
	bool bMovementTimeDiscrepancyResolution; // 0x2ad
	float MovementTimeDiscrepancyMaxTimeMargin; // 0x2b0
	float MovementTimeDiscrepancyMinTimeMargin; // 0x2b4
	float MovementTimeDiscrepancyResolutionRate; // 0x2b8
	float MovementTimeDiscrepancyDriftAllowance; // 0x2bc
	bool bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x2c0
	bool bUseDistanceBasedRelevancy; // 0x2c1
};

struct UCrowLoadingBoxWidget {
	ELoadingState CurrentState; // 0x348
	float ReadyTime; // 0x34c
	float StartTime; // 0x350
	float IdleTime; // 0x354
	float EndTime; // 0x358
	float DeltaTime; // 0x35c
	float Progress; // 0x360
};

struct UCrowVehicleTaskBase {
	ECrowVehicleTask TaskID; // 0x28
	UCrowVehicleFSM* FSM; // 0x30
};

struct UCrowSquadMemberKillWidget {
	UTextBlock* TB_NickName; // 0x348
	UTextBlock* TB_Count; // 0x350
	UImage* IMG_Level; // 0x358
	UImage* IMG_SquadColor; // 0x360
	UTextBlock* TB_Squad_Number; // 0x368
	UWidgetAnimation* AniStartEnd; // 0x370
	TArray<FCrowSquadMemberKillInfo> InfoArray; // 0x378
};

struct ULandscapeInfo {
	LazyObjectProperty LandscapeActor; // 0x28
	FGuid LandscapeGuid; // 0x44
	int32_t ComponentSizeQuads; // 0x54
	int32_t SubsectionSizeQuads; // 0x58
	int32_t ComponentNumSubsections; // 0x5c
	FVector DrawScale; // 0x60
	TArray<ALandscapeStreamingProxy*> Proxies; // 0x110
};

struct UCrowWeaponPartsStock {
	FCrowWeaponPartsStockTableRow PartsTable; // 0x320
	FCrowWeaponPartsStockTableRow DefaultPartsData; // 0x628
};

struct UAutomationTestSettings {
	TArray<FString> EngineTestModules; // 0x28
	TArray<FString> EditorTestModules; // 0x38
	FSoftObjectPath AutomationTestmap; // 0x48
	TArray<FEditorMapPerformanceTestDefinition> EditorPerformanceTestMaps; // 0x60
	TArray<FSoftObjectPath> AssetsToOpen; // 0x70
	TArray<FString> MapsToPIETest; // 0x80
	FBuildPromotionTestSettings BuildPromotionTest; // 0x90
	FMaterialEditorPromotionSettings MaterialEditorPromotionTest; // 0x280
	FParticleEditorPromotionSettings ParticleEditorPromotionTest; // 0x2b0
	FBlueprintEditorPromotionSettings BlueprintEditorPromotionTest; // 0x2c0
	TArray<FString> TestLevelFolders; // 0x2f0
	TArray<FExternalToolDefinition> ExternalTools; // 0x300
	TArray<FEditorImportExportTestDefinition> ImportExportTestDefinitions; // 0x310
	TArray<FLaunchOnTestSettings> LaunchOnSettings; // 0x320
	FIntPoint DefaultScreenshotResolution; // 0x330
	float PIETestDuration; // 0x338
};

struct ULevelStreamingDynamic {
	char bInitiallyLoaded : 1; // 0x148
	char bInitiallyVisible : 1; // 0x148
};

struct UMaterialExpressionSceneDepth {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput Coordinates; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct ACrowWorldClusterActor {
	USceneComponent* SceneRoot; // 0x220
	int32_t Value; // 0x228
};

struct UAkItemBoolProperties {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnPropertyDragged; // 0x118
};

struct ACrowGameStateTDM {
	TArray<FCrowScoreInfoTDM> ScoreArray; // 0x420
	uint32_t TeamKillLimit; // 0x430
	TMap<char, FCrowTeamInfoTDM> TeamInfoMap; // 0x438
	TMap<char, FCrowPlayerCountInfoTDM> PlayerCountMap; // 0x488
};

struct UCrowLobbyMenuListWidget {
	UHorizontalBox* HB_Title; // 0x348
	UImage* IMG_WaitingRoomBack; // 0x350
	UCrowModInfoButtonWidget* WB_LobbyModInfoButton; // 0x358
	UCrowWidgetToggleButton* WB_ReadyBT_Toggle; // 0x360
	UCrowWidgetToggleButton* WB_MatchingBT_Toggle; // 0x368
	UCrowButton* BT_QuickPlay; // 0x370
	UCrowButton* BT_Join; // 0x378
	UCrowButton* BT_ChangeMod; // 0x380
	UCrowButton* BT_Tutorial; // 0x388
	UCrowButton* BT_Customize; // 0x390
	UCrowButton* BT_Store; // 0x398
	UCrowButton* BT_Setting; // 0x3a0
	UCrowButton* BT_Profile; // 0x3a8
	UCrowButton* BT_Quit; // 0x3b0
	bool PartyMode; // 0x3b8
	ACrowSceneLobby* SceneLobby; // 0x3c0
};

struct UPhysicsSettingsCore {
	float DefaultGravityZ; // 0x38
	float DefaultTerminalVelocity; // 0x3c
	float DefaultFluidFriction; // 0x40
	int32_t SimulateScratchMemorySize; // 0x44
	int32_t RagdollAggregateThreshold; // 0x48
	float TriangleMeshTriangleMinAreaThreshold; // 0x4c
	bool bEnableShapeSharing; // 0x50
	bool bEnablePCM; // 0x51
	bool bEnableStabilization; // 0x52
	bool bWarnMissingLocks; // 0x53
	bool bEnable2DPhysics; // 0x54
	bool bDefaultHasComplexCollision; // 0x55
	float BounceThresholdVelocity; // 0x58
	EFrictionCombineMode FrictionCombineMode; // 0x5c
	EFrictionCombineMode RestitutionCombineMode; // 0x5d
	float MaxAngularVelocity; // 0x60
	float MaxDepenetrationVelocity; // 0x64
	float ContactOffsetMultiplier; // 0x68
	float MinContactOffset; // 0x6c
	float MaxContactOffset; // 0x70
	bool bSimulateSkeletalMeshOnDedicatedServer; // 0x74
	ECollisionTraceFlag DefaultShapeComplexity; // 0x75
	FChaosSolverConfiguration SolverOptions; // 0x78
};

struct UCrowShopCashWidget {
	UTextBlock* TB_CashValue; // 0x348
	UTextBlock* TB_GPointValue; // 0x350
};

struct UNiagaraDataInterfaceArrayFloat4 {
	TArray<FVector4> FloatData; // 0x50
};

struct ACrowVehicleSpawner {
	ECrowSpawnerType SpawnerType; // 0x220
	ACrowVehiclePawn* VehicleClass; // 0x228
	float SpawnDelay; // 0x230
	uint32_t SpawnLimit; // 0x234
};

struct UBoxFalloff {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	FTransform Transform; // 0xc0
	EFieldFalloffType Falloff; // 0xf0
};

struct UCrowVehicleWidgetLevel {
	USizeBox* SB_Level; // 0x350
};

struct UWB_C4_Indicator_C {
	UWidgetAnimation* Ani_Active_In6m; // 0x378
	UWidgetAnimation* Ani_Active_Out6m; // 0x380
	UImage* IMG_LocateArrow; // 0x388
};

struct UCrowWeaponCombinedIconWidget {
	UImage* IMG_Magazine; // 0x348
	UImage* IMG_Stock; // 0x350
	UImage* IMG_Barrel; // 0x358
	UImage* IMG_Reciever; // 0x360
	UImage* IMG_Muzzle; // 0x368
	UImage* IMG_UnderBarrel; // 0x370
	UImage* IMG_SideBarrel; // 0x378
	UImage* IMG_MainSight; // 0x380
	UImage* IMG_CantedSight; // 0x388
	UImage* IMG_Grip; // 0x390
	TArray<UImage*> WeaponPartsArray; // 0x398
};

struct UPlanePositionGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoVec2ParameterSource> ParameterSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bEnableSignedAxis; // 0x88
	bool bFlipX; // 0x89
	bool bFlipY; // 0x8a
	bool bInInteraction; // 0x8b
	FVector InteractionOrigin; // 0x8c
	FVector InteractionNormal; // 0x98
	FVector InteractionAxisX; // 0xa4
	FVector InteractionAxisY; // 0xb0
	FVector InteractionStartPoint; // 0xbc
	FVector InteractionCurPoint; // 0xc8
	FVector2D InteractionStartParameter; // 0xd4
	FVector2D InteractionCurParameter; // 0xdc
	FVector2D ParameterSigns; // 0xe4
};

struct UWorld {
	ULevel* PersistentLevel; // 0x30
	UNetDriver* NetDriver; // 0x38
	ULineBatchComponent* LineBatcher; // 0x40
	ULineBatchComponent* PersistentLineBatcher; // 0x48
	ULineBatchComponent* ForegroundLineBatcher; // 0x50
	AGameNetworkManager* NetworkManager; // 0x58
	UPhysicsCollisionHandler* PhysicsCollisionHandler; // 0x60
	TArray<UObject*> ExtraReferencedObjects; // 0x68
	TArray<UObject*> PerModuleDataObjects; // 0x78
	TArray<ULevelStreaming*> StreamingLevels; // 0x88
	FStreamingLevelsToConsider StreamingLevelsToConsider; // 0x98
	FString StreamingLevelsPrefix; // 0xc0
	ULevel* CurrentLevelPendingVisibility; // 0xd0
	ULevel* CurrentLevelPendingInvisibility; // 0xd8
	UDemoNetDriver* DemoNetDriver; // 0xe0
	AParticleEventManager* MyParticleEventManager; // 0xe8
	APhysicsVolume* DefaultPhysicsVolume; // 0xf0
	char bAreConstraintsDirty : 1; // 0x10e
	UNavigationSystemBase* NavigationSystem; // 0x110
	AGameModeBase* AuthorityGameMode; // 0x118
	AGameStateBase* GameState; // 0x120
	UAISystemBase* AISystem; // 0x128
	UAvoidanceManager* AvoidanceManager; // 0x130
	TArray<ULevel*> Levels; // 0x138
	TArray<FLevelCollection> LevelCollections; // 0x148
	UGameInstance* OwningGameInstance; // 0x180
	TArray<UMaterialParameterCollectionInstance*> ParameterCollectionInstances; // 0x188
	UCanvas* CanvasForRenderingToTarget; // 0x198
	UCanvas* CanvasForDrawMaterialToRenderTarget; // 0x1a0
	TSet<UActorComponent*> ComponentsThatNeedPreEndOfFrameSync; // 0x1f8
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate; // 0x248
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x258
	UWorldComposition* WorldComposition; // 0x5d8
	FWorldPSCPool PSCPool; // 0x668
};

struct UParticleModuleSubUV {
	USubUVAnimation* Animation; // 0x30
	FRawDistributionFloat SubImageIndex; // 0x38
	char bUseRealTime : 1; // 0x68
};

struct UCrowWorldDataCollector {
	UCrowWorldMapConfig* MapConfig; // 0xb0
	AActor* SingleTargetActor; // 0xb8
	FString ActorNameFilter; // 0xc0
	TArray<UCrowWorldLightProbe*> TemporalLightProbes; // 0xd0
	FCrowWorldEditorActorBuildCache EditorActorBuildCache; // 0xe0
};

struct UWB_Crosshair_Mh6_Minigun_Thrid_C {
	UCrowWidgetImage* CrowWidgetImage; // 0x450
	UCrowWidgetImage* CrowWidgetImage_143; // 0x458
	UImage* IMG_Cross; // 0x460
	UImage* IMG_Cross_2; // 0x468
	UCrowWidgetImage* IMG_Down; // 0x470
	UCrowWidgetImage* IMG_Down_2; // 0x478
	UCrowWidgetImage* IMG_Left; // 0x480
	UCrowWidgetImage* IMG_Left_2; // 0x488
	UImage* IMG_Overheating_Gauge_2; // 0x490
	UCrowWidgetImage* IMG_Right; // 0x498
	UCrowWidgetImage* IMG_Right_2; // 0x4a0
	UCrowWidgetImage* IMG_Up; // 0x4a8
	UCrowWidgetImage* IMG_Up_2; // 0x4b0
	UWB_Vehicle_Warning_Heli_C* WB_Vehicle_Damage; // 0x4b8
};

struct UInterpTrackInstProperty {
	TFieldPath<FProperty> InterpProperty; // 0x28
	UObject* PropertyOuterObjectInst; // 0x48
};

struct UConstantQNRT {
	UConstantQNRTSettings* Settings; // 0x78
};

struct UGameplayTagsSettings {
	bool ImportTagsFromConfig; // 0x48
	bool WarnOnInvalidTags; // 0x49
	bool FastReplication; // 0x4a
	FString InvalidTagCharacters; // 0x50
	TArray<FGameplayTagCategoryRemap> CategoryRemapping; // 0x60
	TArray<FSoftObjectPath> GameplayTagTableList; // 0x70
	TArray<FGameplayTagRedirect> GameplayTagRedirects; // 0x80
	TArray<FName> CommonlyReplicatedTags; // 0x90
	int32_t NumBitsForContainerSize; // 0xa0
	int32_t NetIndexFirstBitSegment; // 0xa4
	TArray<FRestrictedConfigInfo> RestrictedConfigFiles; // 0xa8
};

struct UInteractiveToolsContext {
	UInputRouter* InputRouter; // 0x58
	UInteractiveToolManager* ToolManager; // 0x60
	UInteractiveGizmoManager* GizmoManager; // 0x68
	TSoftClassPtr<UObject> ToolManagerClass; // 0x70
};

struct ACullDistanceVolume {
	TArray<FCullDistanceSizePair> CullDistances; // 0x258
	char bEnabled : 1; // 0x268
};

struct UPreviewGeometry {
	APreviewGeometryActor* ParentActor; // 0x28
	TMap<FString, ULineSetComponent*> LineSets; // 0x30
};

struct UEditableTextBoxWidgetStyle {
	FEditableTextBoxStyle EditableTextBoxStyle; // 0x30
};

struct UMovieSceneEntitySystemLinker {
	FMovieSceneEntitySystemGraph SystemGraph; // 0x238
};

struct AAIController {
	char bStartAILogicOnPossess : 1; // 0x2d0
	char bStopAILogicOnUnposses : 1; // 0x2d0
	char bLOSflag : 1; // 0x2d0
	char bSkipExtraLOSChecks : 1; // 0x2d0
	char bAllowStrafe : 1; // 0x2d0
	char bWantsPlayerState : 1; // 0x2d0
	char bSetControlRotationFromPawnOrientation : 1; // 0x2d0
	UPathFollowingComponent* PathFollowingComponent; // 0x2d8
	UBrainComponent* BrainComponent; // 0x2e0
	UAIPerceptionComponent* PerceptionComponent; // 0x2e8
	UPawnActionsComponent* ActionsComp; // 0x2f0
	UBlackboardComponent* Blackboard; // 0x2f8
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x300
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x308
	FMulticastInlineDelegate ReceiveMoveCompleted; // 0x310
};

struct USoundNodeMixer {
	TArray<float> InputVolume; // 0x48
};

struct UAkGroupValue {
	uint32_t GroupShortID; // 0x40
};

struct UNavigationSystemModuleConfig {
	char bStrictlyStatic : 1; // 0x50
	char bCreateOnClient : 1; // 0x50
	char bAutoSpawnMissingNavData : 1; // 0x50
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x50
};

struct UMovieSceneEventTrack {
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	EFireEventsAtPosition EventPosition; // 0x84
	TArray<UMovieSceneSection*> Sections; // 0x88
};

struct UMaterialExpressionThinTranslucentMaterialOutput {
	FExpressionInput TransmittanceColor; // 0x40
};

struct UHoleFillStatisticsProperties {
	FString InitialHoles; // 0x60
	FString SelectedHoles; // 0x70
	FString SuccessfulFills; // 0x80
	FString FailedFills; // 0x90
	FString RemainingHoles; // 0xa0
};

struct AFieldSystemActor {
	UFieldSystemComponent* FieldSystemComponent; // 0x220
};

struct UCrowResultSceneIconWidget {
	UCanvasPanel* CP_Root; // 0x348
	UCanvasPanel* CP_MVP_Mark; // 0x350
	UTextBlock* TB_Name; // 0x358
};

struct UARMeshComponent {
	FARMeshUpdatePayload ReplicatedPayload; // 0x280
};

struct UReplicationGraphNode {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct UInvalidationBox {
	bool bCanCache; // 0x120
	bool CacheRelativeTransforms; // 0x121
};

struct UAnimCompress_RemoveEverySecondKey {
	int32_t MinKeys; // 0x40
	char bStartAtSecondKey : 1; // 0x44
};

struct APrecomputedVisibilityOverrideVolume {
	TArray<AActor*> OverrideVisibleActors; // 0x258
	TArray<AActor*> OverrideInvisibleActors; // 0x268
	TArray<FName> OverrideInvisibleLevels; // 0x278
};

struct USynthComponent {
	char bAutoDestroy : 1; // 0x1f8
	char bStopWhenOwnerDestroyed : 1; // 0x1f8
	char bAllowSpatialization : 1; // 0x1f8
	char bOverrideAttenuation : 1; // 0x1f8
	char bOutputToBusOnly : 1; // 0x1fc
	USoundAttenuation* AttenuationSettings; // 0x200
	FSoundAttenuationSettings AttenuationOverrides; // 0x208
	USoundConcurrency* ConcurrencySettings; // 0x5a8
	TSet<USoundConcurrency*> ConcurrencySet; // 0x5b0
	USoundClass* SoundClass; // 0x600
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x608
	USoundSubmixBase* SoundSubmix; // 0x610
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x618
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x628
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x638
	char bIsUISound : 1; // 0x648
	char bIsPreviewSound : 1; // 0x648
	int32_t EnvelopeFollowerAttackTime; // 0x64c
	int32_t EnvelopeFollowerReleaseTime; // 0x650
	FMulticastInlineDelegate OnAudioEnvelopeValue; // 0x658
	USynthSound* Synth; // 0x688
	UAudioComponent* AudioComponent; // 0x690
};

struct UCrowEventPageTable {
	TArray<FCrowEventPageTableRow> DataTableRow; // 0xb0
};

struct UCrowSettingsSlotOnOffWidget {
	UWidgetSwitcher* WS_OnOff; // 0x348
	UTextBlock* TB_Off; // 0x350
	UCrowWidgetImage* IMG_OffIcon; // 0x358
	UTextBlock* TB_On; // 0x360
	UCrowWidgetImage* IMG_OnIcon; // 0x368
	UCrowToggleButton* BT_OnOff; // 0x370
	UCrowSettingsSlotWidget* OwnerSlot; // 0x378
};

struct UBaseMeshProcessingTool {
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xb0
};

struct UUniformGridSlot {
	EHorizontalAlignment HorizontalAlignment; // 0x38
	EVerticalAlignment VerticalAlignment; // 0x39
	int32_t Row; // 0x3c
	int32_t Column; // 0x40
};

struct UCrowSoundStateVolumeComponent {
	ECrowSoundStateType SoundStateType; // 0x1f8
	TArray<UStaticMeshComponent*> SoundVolumes; // 0x200
};

struct UMaterialExpressionMapARPassthroughCameraUV {
	FExpressionInput Coordinates; // 0x40
};

struct UCrowIndicatorSupplyWeaponWidget {
	UImage* IMG_Icon; // 0x3c8
	UTextBlock* TB_CoolTime; // 0x3d0
	float DisplayCoolMinDistance; // 0x3d8
	float DisplayCoolMaxDistance; // 0x3dc
};

struct UGameNetworkManagerSettings {
	int32_t MinDynamicBandwidth; // 0x28
	int32_t MaxDynamicBandwidth; // 0x2c
	int32_t TotalNetBandwidth; // 0x30
	int32_t BadPingThreshold; // 0x34
	char bIsStandbyCheckingEnabled : 1; // 0x38
	float StandbyRxCheatTime; // 0x3c
	float StandbyTxCheatTime; // 0x40
	float PercentMissingForRxStandby; // 0x44
	float PercentMissingForTxStandby; // 0x48
	float PercentForBadPing; // 0x4c
	float JoinInProgressStandbyWaitTime; // 0x50
};

struct UNiagaraScript {
	ENiagaraScriptUsage Usage; // 0x28
	int32_t UsageIndex; // 0x2c
	FGuid UsageId; // 0x30
	FNiagaraParameterStore RapidIterationParameters; // 0x40
	FNiagaraScriptExecutionParameterStore ScriptExecutionParamStore; // 0xb8
	TArray<FNiagaraBoundParameter> ScriptExecutionBoundParameters; // 0x150
	FNiagaraVMExecutableDataId CachedScriptVMId; // 0x160
	FNiagaraVMExecutableData CachedScriptVM; // 0x1b8
	TArray<UNiagaraParameterCollection*> CachedParameterCollectionReferences; // 0x298
	TArray<FNiagaraScriptDataInterfaceInfo> CachedDefaultDataInterfaces; // 0x2a8
};

struct UAutoDestroySubsystem {
	TArray<AActor*> ActorsToPoll; // 0x38
};

struct UMaterialExpressionBlackBody {
	FExpressionInput Temp; // 0x40
};

struct UDeviceProfile {
	FString DeviceType; // 0x38
	FString BaseProfileName; // 0x48
	UObject* Parent; // 0x58
	TArray<FString> CVars; // 0x88
};

struct UProceduralMeshComponent {
	bool bUseComplexAsSimpleCollision; // 0x470
	bool bUseAsyncCooking; // 0x471
	UBodySetup* ProcMeshBodySetup; // 0x478
	TArray<FProcMeshSection> ProcMeshSections; // 0x480
	TArray<FKConvexElem> CollisionConvexElems; // 0x490
	FBoxSphereBounds LocalBounds; // 0x4a0
	TArray<UBodySetup*> AsyncBodySetupQueue; // 0x4c0
};

struct UMonoWaveTableSynthPreset {
	FString PresetName; // 0x28
	char bLockKeyframesToGridBool : 1; // 0x38
	int32_t LockKeyframesToGrid; // 0x3c
	int32_t WaveTableResolution; // 0x40
	TArray<FRuntimeFloatCurve> WaveTable; // 0x48
	char bNormalizeWaveTables : 1; // 0x58
};

struct UCrowInteractionProgressCircleWidget {
	UImage* IMG_Gauge; // 0x348
	UWidgetSwitcher* WS_Type; // 0x350
	UImage* IMG_Key; // 0x358
	UTextBlock* TB_Progress; // 0x360
	UTextBlock* TB_Countdown_Timer; // 0x368
	UMaterialInstanceDynamic* GaugeMaterial; // 0x370
};

struct UCrowMinimapVehicleMarker {
	ACrowVehiclePawn* MarkerOwnerPawn; // 0x348
	USizeBox* MarkerSizeBox; // 0x358
	UOverlay* IconOverlay; // 0x360
	UImage* TankIcon; // 0x368
	UImage* HeliIcon; // 0x370
	UImage* CarIcon; // 0x378
	UImage* BoatIcon; // 0x380
	FLinearColor ColorNoTeam; // 0x388
	FLinearColor ColorAllies; // 0x398
	FLinearColor ColorEnemies; // 0x3a8
	FLinearColor ColorSquadLeader; // 0x3b8
	FLinearColor ColorSquadAssistant; // 0x3c8
	FLinearColor ColorSquadMember01; // 0x3d8
	FLinearColor ColorSquadMember02; // 0x3e8
};

struct ACrowProjectileMeleeThrow {
	UParticleSystem* TracerFX_1P; // 0x18d0
	UParticleSystem* TracerFX_3P; // 0x18d8
	UParticleSystem* TracerFX_InWater; // 0x18e0
	UParticleSystem* TracerFX_3P_Trail; // 0x18e8
	float TrailFX_LifeTime; // 0x18f0
	float WaterDestroyTime; // 0x18f4
	UAkAudioEvent* FlyBySound_W; // 0x18f8
	float FlyBySoundRadius; // 0x1900
	FTimerHandle WaterDestroyTimerHandle; // 0x1908
	AActor* SoundTargetActor; // 0x1910
	UParticleSystemComponent* TracerFXComp_1P; // 0x1918
	UParticleSystemComponent* TracerFXComp_3P; // 0x1920
	UParticleSystemComponent* TrailFXComp; // 0x1928
};

struct ACrowTGStealthBomberActor {
	USkeletalMeshComponent* MeshComponent; // 0x220
	USceneComponent* RootComp; // 0x228
};

struct ABP_MeleeThrowDagger_C {
	USkeletalMeshComponent* Dagger001; // 0x1940
};

struct USourceEffectChorusPreset {
	FSourceEffectChorusSettings Settings; // 0x108
};

struct ULandscapeWeightmapUsage {
	ULandscapeComponent* ChannelUsage[0x4]; // 0x28
	FGuid LayerGuid; // 0x48
};

struct UModularSynthPresetBank {
	TArray<FModularSynthPresetBankEntry> Presets; // 0x28
};

struct UCrowSupplyBaseTableManager {
	TMap<FString, FCrowSupplyBaseDataRow> SupplyItemDataRows; // 0x28
};

struct AWaterBody {
	UPhysicalMaterial* PhysicalMaterial; // 0x230
	float TargetWaveMaskDepth; // 0x238
	float MaxWaveHeightOffset; // 0x23c
	int32_t WaterBodyIndex; // 0x240
	bool bFillCollisionUnderWaterBodiesForNavmesh; // 0x244
	FUnderwaterPostProcessSettings UnderwaterPostProcessSettings; // 0x250
	EWaterBodyType WaterBodyType; // 0x7c0
	FWaterCurveSettings CurveSettings; // 0x7c8
	UMaterialInterface* WaterMaterial; // 0x7e8
	UMaterialInterface* UnderwaterPostProcessMaterial; // 0x7f0
	bool bAffectsLandscape; // 0x7f8
	bool bGenerateCollisions; // 0x7f9
	bool bOverrideWaterMesh; // 0x7fa
	UStaticMesh* WaterMeshOverride; // 0x800
	int32_t OverlapMaterialPriority; // 0x808
	FName CollisionProfileName; // 0x80c
	UWaterSplineComponent* SplineComp; // 0x818
	UWaterSplineMetadata* WaterSplineMetadata; // 0x820
	UMaterialInstanceDynamic* WaterMID; // 0x828
	UMaterialInstanceDynamic* UnderwaterPostProcessMID; // 0x830
	TArray<LazyObjectProperty> Islands; // 0x838
	TArray<LazyObjectProperty> ExclusionVolumes; // 0x848
	TWeakObjectPtr<ALandscapeProxy> Landscape; // 0x858
	FPostProcessSettings CurrentPostProcessSettings; // 0x860
	bool bCanAffectNavigation; // 0xdb0
	UNavAreaBase* WaterNavAreaClass; // 0xdb8
	UWaterWavesBase* WaterWaves; // 0xdc0
	bool bHasWaveSpectrumSettings; // 0xdc8
	bool bHasTerrainCarvingSettingsSettings; // 0xdc9
};

struct UOffsetMeshToolProperties {
	EOffsetMeshToolOffsetType OffsetType; // 0x60
	float Distance; // 0x64
	bool bCreateShell; // 0x68
};

struct USpinBoxWidgetStyle {
	FSpinBoxStyle SpinBoxStyle; // 0x30
};

struct UARTrackedObject {
	UARCandidateObject* DetectedObject; // 0xf8
};

struct ACrowAkAmbientSound {
	bool bUseReplay; // 0x260
	bool bIgnoreCurrentPlaying; // 0x261
	float ReplayTerm; // 0x264
	bool bUsingEndEvent; // 0x268
	UAkAudioEvent* EndEvent; // 0x270
	float EndEventTerm; // 0x278
	float EndEventCoolTime; // 0x27c
	bool bDrawDebugInfo; // 0x280
	bool bUseSoundStateTest; // 0x281
	float SoundStateRadius; // 0x284
	ECrowSoundStateType SoundStateType; // 0x288
	ATextRenderActor* TRA; // 0x2a8
};

struct UEditableStaticMeshAdapter {
	UStaticMesh* StaticMesh; // 0x28
	UStaticMesh* OriginalStaticMesh; // 0x30
	int32_t StaticMeshLODIndex; // 0x38
};

struct ACrowGameStateDM {
	bool IsEnableFastRespawn; // 0x410
	int32_t FastRespawnPrice; // 0x414
};

struct UAudioComponent {
	USoundBase* Sound; // 0x1f8
	TArray<FAudioComponentParam> InstanceParameters; // 0x200
	USoundClass* SoundClassOverride; // 0x210
	char bAutoDestroy : 1; // 0x218
	char bStopWhenOwnerDestroyed : 1; // 0x218
	char bShouldRemainActiveIfDropped : 1; // 0x218
	char bAllowSpatialization : 1; // 0x218
	char bOverrideAttenuation : 1; // 0x218
	char bOverrideSubtitlePriority : 1; // 0x218
	char bIsUISound : 1; // 0x218
	char bEnableLowPassFilter : 1; // 0x218
	char bOverridePriority : 1; // 0x219
	char bSuppressSubtitles : 1; // 0x219
	char bAutoManageAttachment : 1; // 0x21a
	FName AudioComponentUserID; // 0x220
	float PitchModulationMin; // 0x228
	float PitchModulationMax; // 0x22c
	float VolumeModulationMin; // 0x230
	float VolumeModulationMax; // 0x234
	float VolumeMultiplier; // 0x238
	int32_t EnvelopeFollowerAttackTime; // 0x23c
	int32_t EnvelopeFollowerReleaseTime; // 0x240
	float Priority; // 0x244
	float SubtitlePriority; // 0x248
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x250
	float PitchMultiplier; // 0x258
	float LowPassFilterFrequency; // 0x25c
	USoundAttenuation* AttenuationSettings; // 0x268
	FSoundAttenuationSettings AttenuationOverrides; // 0x270
	USoundConcurrency* ConcurrencySettings; // 0x610
	TSet<USoundConcurrency*> ConcurrencySet; // 0x618
	EAttachmentRule AutoAttachLocationRule; // 0x674
	EAttachmentRule AutoAttachRotationRule; // 0x675
	EAttachmentRule AutoAttachScaleRule; // 0x676
	FSoundModulationDefaultRoutingSettings ModulationRouting; // 0x678
	FMulticastInlineDelegate OnAudioPlayStateChanged; // 0x6c0
	FMulticastInlineDelegate OnAudioVirtualizationChanged; // 0x6e8
	FMulticastInlineDelegate OnAudioFinished; // 0x710
	FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x738
	FMulticastInlineDelegate OnAudioSingleEnvelopeValue; // 0x760
	FMulticastInlineDelegate OnAudioMultiEnvelopeValue; // 0x788
	FDelegate OnQueueSubtitles; // 0x7b0
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x7c0
	FName AutoAttachSocketName; // 0x7c8
};

struct UCrowFxManager {
	UCrowPhysicalMatSound* PhysicalMatSound; // 0x28
	TArray<FCrowFxTypeArrayy> CrowFxTypeArrayList; // 0x48
};

struct UPaperFlipbookComponent {
	UPaperFlipbook* SourceFlipbook; // 0x468
	UMaterialInterface* Material; // 0x470
	float PlayRate; // 0x478
	char bLooping : 1; // 0x47c
	char bReversePlayback : 1; // 0x47c
	char bPlaying : 1; // 0x47c
	float AccumulatedTime; // 0x480
	int32_t CachedFrameIndex; // 0x484
	FLinearColor SpriteColor; // 0x488
	UBodySetup* CachedBodySetup; // 0x498
	FMulticastInlineDelegate OnFinishedPlaying; // 0x4a0
};

struct UCrowLobbyIdleAnimTableManager {
	TMap<EAnimLobbyIdle, FCrowLobbyIdleAnimTableRow> UserLobbyIdleAnimInfoData; // 0x28
};

struct USynthComponentToneGenerator {
	float Frequency; // 0x6c0
	float Volume; // 0x6c4
};

struct USkyAtmosphereComponent {
	ESkyAtmosphereTransformMode TransformMode; // 0x1f8
	float BottomRadius; // 0x1fc
	FColor GroundAlbedo; // 0x200
	float AtmosphereHeight; // 0x204
	float MultiScatteringFactor; // 0x208
	float TraceSampleCountScale; // 0x20c
	float RayleighScatteringScale; // 0x210
	FLinearColor RayleighScattering; // 0x214
	float RayleighExponentialDistribution; // 0x224
	float MieScatteringScale; // 0x228
	FLinearColor MieScattering; // 0x22c
	float MieAbsorptionScale; // 0x23c
	FLinearColor MieAbsorption; // 0x240
	float MieAnisotropy; // 0x250
	float MieExponentialDistribution; // 0x254
	float OtherAbsorptionScale; // 0x258
	FLinearColor OtherAbsorption; // 0x25c
	FTentDistribution OtherTentDistribution; // 0x26c
	FLinearColor SkyLuminanceFactor; // 0x278
	float AerialPespectiveViewDistanceScale; // 0x288
	float HeightFogContribution; // 0x28c
	float TransmittanceMinLightElevationAngle; // 0x290
	float AerialPerspectiveStartDepth; // 0x294
	FGuid bStaticLightingBuiltGUID; // 0x2bc
};

struct UReplicationGraphNode_AlwaysRelevant {
	UReplicationGraphNode* ChildNode; // 0x50
};

struct UWidget {
	UPanelSlot* Slot; // 0x28
	FDelegate bIsEnabledDelegate; // 0x30
	FText ToolTipText; // 0x40
	FDelegate ToolTipTextDelegate; // 0x58
	UWidget* ToolTipWidget; // 0x68
	FDelegate ToolTipWidgetDelegate; // 0x70
	FDelegate VisibilityDelegate; // 0x80
	FWidgetTransform RenderTransform; // 0x90
	FVector2D RenderTransformPivot; // 0xac
	char bIsVariable : 1; // 0xb4
	char bCreatedByConstructionScript : 1; // 0xb4
	char bIsEnabled : 1; // 0xb4
	char bOverride_Cursor : 1; // 0xb4
	USlateAccessibleWidgetData* AccessibleWidgetData; // 0xb8
	char bIsVolatile : 1; // 0xc0
	EMouseCursor Cursor; // 0xc1
	EWidgetClipping Clipping; // 0xc2
	ESlateVisibility Visibility; // 0xc3
	float RenderOpacity; // 0xc4
	UWidgetNavigation* Navigation; // 0xc8
	EFlowDirectionPreference FlowDirectionPreference; // 0xd0
	TArray<UPropertyBinding*> NativeBindings; // 0xf8
};

struct UCrowClothActorComponent {
	TMap<ECrowClothPartsMesh, FCrowClothItem> ClothMeshesList; // 0x28
	TMap<ECrowClothPartsMesh, USkeletalMesh*> DefaultClothMeshesList; // 0x78
	AActor* OwnerActor; // 0xc8
	USkeletalMeshComponent* MasterMesh; // 0xd0
	bool bUseTestHide; // 0xd8
	bool bUseMeshMerge; // 0xd9
	ECrowClothComponentType ComponentType; // 0xda
};

struct UCrowShopCategoryWidget {
	UVerticalBox* VB_Category; // 0x348
	UCrowCategorySlotSmallWidget* CategoryItemWidget; // 0x360
};

struct ACrowWeaponGasCutter {
	UParticleSystem* EffectTemplet; // 0x1ec0
	UParticleSystemComponent* EffectComponent; // 0x1ec8
};

struct UCrowVehicleFloodingComponent {
	float TimeSecondToFlooding; // 0x4b8
	float FloodingDamageTime; // 0x4bc
	float FloodingDamage; // 0x4c0
	UCurveFloat* WaterCrashImpulseCurve; // 0x4c8
	UCurveFloat* Immerge_LinearDampingCurve; // 0x4d0
	UCurveFloat* WaterLinearDampingCurve; // 0x4d8
	bool bCheckValidHeight; // 0x4e0
	float ValidHeight_DrivingFX; // 0x4e4
	UCrowVehicleFloodingEffectSetting* FloodingEffectSettingClass; // 0x4e8
	FCrowVehicleMovementWaterInfo WaterInfo; // 0x4f0
	UPrimitiveComponent* UpdatedComponent; // 0x550
	ECrowVehicleFloodingWaterType LastFloodingWaterType; // 0x558
	UCrowVehicleFloodingEffectSetting* FloodingEffectSetting; // 0x560
	ECrowVehicleFloodingState FloodingState; // 0x568
	bool bFlooding; // 0x569
	float ElapsedOverlapTime; // 0x56c
	float ElapsedFloodingTime; // 0x570
	float DamageTimer; // 0x574
	float CurrentFloodingDepth; // 0x578
	float CurrentFloodingDepthClamped; // 0x57c
	float WaterLinearDamping; // 0x580
	float PrevOwnerVelocityZ; // 0x584
	float WaterCrashImpulse; // 0x588
	UParticleSystemComponent* ParticleComponentImmerge; // 0x590
	UParticleSystemComponent* ParticleComponentBubble; // 0x598
	UParticleSystemComponent* ParticleComponentDrivingForward; // 0x5a0
	UParticleSystemComponent* ParticleComponentDrivingBackward; // 0x5a8
	UParticleSystemComponent* ParticleComponentGroundDust; // 0x5b0
	FTransform RelativeTM_Bubble; // 0x5c0
	FTransform RelativeTM_Driving; // 0x5f0
	FTransform RelativeTM; // 0x620
	UPrimitiveComponent* BodyComponent; // 0x650
	bool bFadeOutDrivingParticle; // 0x658
};

struct UCrowFallsDamageTableManager {
	TArray<FCrowFallsDamageTableRow> DamageTable; // 0x28
	TArray<FCrowVehicleFallsDamageTableRow> VehicleDamageTable; // 0x38
};

struct UCrowBombMissionScoreSlotWidget {
	UTextBlock* TBPlayerName; // 0x348
	UTextBlock* TBScore; // 0x350
	UTextBlock* TBKillCount; // 0x358
	UTextBlock* TBDeathCount; // 0x360
	UTextBlock* TBPlantCompositoinCCount; // 0x368
	UTextBlock* TBDefuseCompositionCCount; // 0x370
	UImage* IMGCompositionC; // 0x378
	UImage* IMGBackgroundPlayer; // 0x380
	UImage* IMGBackgroundBlue0; // 0x388
	UImage* IMGBackgroundBlue1; // 0x390
	UImage* IMGBackgroundOrange0; // 0x398
	UImage* IMGBackgroundOrange1; // 0x3a0
	UImage* IMGBackgroundDeath; // 0x3a8
};

struct UCrowBombingTableManager {
	TArray<FCrowBombingTableRow> ArrayBombingTableRow; // 0x28
	float BombingAngle; // 0x38
	FVector TargetPos; // 0x3c
	FVector2D MapSizeRatio; // 0x48
};

struct UDLSSSettings {
	bool bEnableDLSSD3D12; // 0x28
	bool bEnableDLSSD3D11; // 0x29
	bool bEnableDLSSVulkan; // 0x2a
	bool bEnableDLSSInEditorViewports; // 0x2b
	bool bEnableScreenpercentageManipulationInDLSSEditorViewports; // 0x2c
	bool bEnableDLSSInPlayInEditorViewports; // 0x2d
	bool bShowDLSSSDebugOnScreenMessages; // 0x2e
	FString GenericDLSSBinaryPath; // 0x30
	bool bGenericDLSSBinaryExists; // 0x40
	uint32_t NVIDIANGXApplicationId; // 0x44
	FString CustomDLSSBinaryPath; // 0x48
	bool bCustomDLSSBinaryExists; // 0x58
};

struct UCrowSettingsSlotSliderWidget {
	UTextBlock* TB_Value; // 0x348
	USlider* SL_Value; // 0x350
	UCrowSettingsSlotWidget* OwnerSlot; // 0x358
};

struct UClickDragInputBehavior {
	bool bUpdateModifiersDuringDrag; // 0x120
};

struct UUPSPatrolComponent {
	AUPSPatrolPoint* InitialMovementPatrolPoint; // 0xb0
	EPatrolMovementType PatrolMovementDirection; // 0xb8
	bool bDisableVisualization; // 0xb9
	AUPSPatrolPoint* CurrentPatrolPoint; // 0xc0
};

struct UMovieSceneAudioTrack {
	TArray<UMovieSceneSection*> AudioSections; // 0x80
};

struct UCrowLoadoutWeaponSubInfoWidget {
	UWidgetSwitcher* WS_SlotType; // 0x1a48
	UTextBlock* TB_WeaponName; // 0x1a50
	UTextBlock* TB_WeaponSlotType; // 0x1a58
	UImage* IMG_Frame; // 0x1a60
	UImage* IMG_HotKey_2; // 0x1a68
	UImage* IMG_Setting; // 0x1a70
	UImage* IMG_BackGround_Melee; // 0x1a78
	UImage* IMG_BackGround; // 0x1a80
	UCrowDragDropWidgetBase* WB_CrowDragDropPanel; // 0x1a88
	UCrowButton* BT_Loadout_Button; // 0x1a90
	UHorizontalBox* HB_Hotkey; // 0x1a98
	UCanvasPanel* MainPanel; // 0x1aa0
	UHorizontalBox* HB_WeaponLv; // 0x1aa8
	UTextBlock* TB_WeaponLV; // 0x1ab0
	UCrowProgressBar* PB_WeaponLV; // 0x1ab8
	FText DefaultSlotTypeName; // 0x1ac0
	UPaperSprite* HotKeySprite; // 0x1ad8
	bool IsArmorSlot; // 0x1ae0
	bool HiddeIcon; // 0x1ae1
};

struct UCrowWeaponPartsAccCharm {
	USceneComponent* ParentComponent; // 0x30
	UMeshComponent* MeshComponent; // 0x38
	UBoxComponent* BoxComponent; // 0x40
};

struct URadialVector {
	float Magnitude; // 0xb0
	FVector position; // 0xb4
};

struct ABP_CrowProjectileRocketLauncher_C {
	USkeletalMeshComponent* M4_Projectile_Root; // 0x1840
};

struct UNetworkSettings {
	char bVerifyPeer : 1; // 0x38
	char bEnableMultiplayerWorldOriginRebasing : 1; // 0x38
	int32_t MaxRepArraySize; // 0x3c
	int32_t MaxRepArrayMemory; // 0x40
	TArray<FNetworkEmulationProfileDescription> NetworkEmulationProfiles; // 0x48
};

struct UHierarchicalInstancedStaticMeshComponent {
	TArray<int32_t> SortedInstances; // 0x588
	int32_t NumBuiltInstances; // 0x598
	FBox BuiltInstanceBounds; // 0x5a0
	FBox UnbuiltInstanceBounds; // 0x5bc
	TArray<FBox> UnbuiltInstanceBoundsList; // 0x5d8
	char bEnableDensityScaling : 1; // 0x5e8
	int32_t OcclusionLayerNumNodes; // 0x5f0
	FBoxSphereBounds CacheMeshExtendedBounds; // 0x5f4
	bool bDisableCollision; // 0x610
	int32_t InstanceCountToRender; // 0x614
};

struct UNiagaraComponentSettings {
	TSet<FName> SuppressActivationList; // 0x28
	TSet<FName> ForceAutoPooolingList; // 0x78
	TSet<FNiagaraEmitterNameSettingsRef> SuppressEmitterList; // 0xc8
};

struct UEnvQueryGenerator_CurrentLocation {
	UEnvQueryContext* QueryContext; // 0x50
};

struct UCrowFloodingCheckComponent {
	float FloodingCheckRate; // 0xb0
	float TimeSecondToFlooding; // 0xb4
	float FloodingDamage; // 0xb8
	float FloodingDepth; // 0xbc
};

struct ADatasmithAreaLightActor {
	EDatasmithAreaLightActorType LightType; // 0x220
	EDatasmithAreaLightActorShape LightShape; // 0x221
	FVector2D Dimensions; // 0x224
	float Intensity; // 0x22c
	ELightUnits IntensityUnits; // 0x230
	FLinearColor Color; // 0x234
	float Temperature; // 0x244
	UTextureLightProfile* IESTexture; // 0x248
	bool bUseIESBrightness; // 0x250
	float IESBrightnessScale; // 0x254
	FRotator Rotation; // 0x258
	float SourceRadius; // 0x264
	float SourceLength; // 0x268
	float AttenuationRadius; // 0x26c
	float SpotlightInnerAngle; // 0x270
	float SpotlightOuterAngle; // 0x274
};

struct UParticleModuleSizeMultiplyLife {
	FRawDistributionVector LifeMultiplier; // 0x30
	char MultiplyX : 1; // 0x78
	char MultiplyY : 1; // 0x78
	char MultiplyZ : 1; // 0x78
};

struct UGroomAssetImportData {
	UGroomImportOptions* ImportOptions; // 0x28
};

struct UPaperRuntimeSettings {
	bool bEnableSpriteAtlasGroups; // 0x28
	bool bEnableTerrainSplineEditing; // 0x29
	bool bResizeSpriteDataToMatchTextures; // 0x2a
};

struct UCrowInputManager {
	APlayerController* PlayerController; // 0x28
	ACrowCharacterPawn* CrowCharacterPawn; // 0x30
	ECrowCharacterInputMode CurrentInputMode; // 0x38
	TArray<FCrowInputStackInfo> InputStack; // 0x40
	TArray<UCrowInputBase*> InputBaseArray; // 0x50
	UCrowInputBase* InputWeaponManager; // 0x60
	UCrowInputBase* InputDefault; // 0x68
	UCrowInputBase* InputCharacterOnVehicle; // 0x70
	UCrowInputBase* InputCharacterOnlyRot; // 0x78
	UCrowInputBase* InputFindConstructionSite; // 0x80
	UCrowInputBase* InputFindBombKitTarget; // 0x88
	UCrowInputBase* InputCharacterSkydiving; // 0x90
	UCrowInputBase* InputConstruction; // 0x98
	UCrowInputBase* InputUI; // 0xa0
	UCrowInputBase* InputWorldMapUI; // 0xa8
	UCrowInputBase* InputRadialMenu; // 0xb0
	UCrowInputBase* InputDyingCharacter; // 0xb8
	UCrowInputBase* InputRespawnAirPlane; // 0xc0
	UCrowInputBase* InputOnlyTrigger; // 0xc8
	UCrowInputBase* InputSpectator; // 0xd0
	UCrowInputBase* InputBombMissionPlayCountdown; // 0xd8
	UCrowInputBase* InputSquadMatchRespawn; // 0xe0
	UCrowInputBase* InputEmotion; // 0xe8
	UCrowInputBase* InputReplay; // 0xf0
	UCrowInputBase* InputSynopsis; // 0xf8
	UCrowInputBase* InputAnyKey; // 0x100
};

struct UCrowUserProfileWidget {
	UTextBlock* TB_Username; // 0x348
	UTextBlock* TB_PlayTime; // 0x350
	UWidgetSwitcher* WS_Follow; // 0x358
	UCrowButton* BT_Exit; // 0x360
	UCrowButton* BT_Follow; // 0x368
	UCrowButton* BT_UnFollow; // 0x370
	UCrowButton* BT_Profile; // 0x378
	uint64_t TargetUesrServerKey; // 0x380
	ACrowSceneLobby* SceneLobby; // 0x388
};

struct UBakeMeshAttributeMapsToolProperties {
	EBakeMapType MapType; // 0x60
	EBakeTextureResolution Resolution; // 0x64
	FString UVLayer; // 0x68
	TArray<FString> UVLayerNamesList; // 0x78
	bool bUseWorldSpace; // 0x88
	UTexture2D* Result; // 0x90
};

struct UCrowWorldGridQueryComponent {
	ACrowWorldGridActor* CachedWorldGrid; // 0xb0
	TArray<int32_t> LastQueryResult; // 0xb8
	bool bEnableQuery; // 0xc8
	int32_t QueryCellRange; // 0xcc
};

struct UCrowInGameLoadoutWidget {
	UCrowTopBarDescWidget* WB_TopBar_Desc; // 0x368
	UCrowCustomizeItemDescWidget* WB_CustomizeItemDesc; // 0x370
	FCrowWeaponData CurrentSeletedWeaponData; // 0x378
	FCrowWeaponAccData CurrentSelectedWeaponAccData; // 0x4e0
	int32_t CurrentSeletedSlotIndex; // 0x590
	bool IsRotation; // 0x594
	ELoadOutUIMode CurrentLoadOutUIMode; // 0x595
};

struct UCurveFloat {
	FRichCurve FloatCurve; // 0x30
	bool bIsEventCurve; // 0xb0
};

struct UDynamicEntryBox {
	UUserWidget* EntryWidgetClass; // 0x1d8
};

struct UCrowCustomizeEmotionListWidget {
	UCrowCustomizeEmotionSlotWidget* SlotWidgetClass; // 0x348
	UGridPanel* GD_ItemList; // 0x350
	UCrowCustomizeEmotionSlotWidget* SelectedSlotWidget; // 0x358
};

struct UCrowPhysicalMatTableManager {
	FCrowPhysicalMatTableRow DefaultTableRow; // 0x28
	TMap<FName, FCrowPhysicalMatTableRow> PhysMatTable; // 0x910
	TSet<FName> LoadedRows; // 0x960
	TSet<UObject*> LoadedAssets; // 0x9b0
};

struct UInterpTrackInstToggle {
	ETrackToggleAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
	char bSavedActiveState : 1; // 0x30
};

struct UMovieSceneNiagaraSystemSpawnSection {
	ENiagaraSystemSpawnSectionStartBehavior SectionStartBehavior; // 0xe8
	ENiagaraSystemSpawnSectionEvaluateBehavior SectionEvaluateBehavior; // 0xec
	ENiagaraSystemSpawnSectionEndBehavior SectionEndBehavior; // 0xf0
	ENiagaraAgeUpdateMode AgeUpdateMode; // 0xf4
};

struct UCrowVehicleIconWidget {
	ACrowPlayerStateBase* LocalPlayerState; // 0x3c8
	UImage* IMG_VehicleIcon; // 0x3d0
};

struct UAsyncActionChangePrimaryAssetBundles {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UStaticMeshComponent {
	int32_t ForcedLodModel; // 0x468
	int32_t PreviousLODLevel; // 0x46c
	int32_t MinLOD; // 0x470
	int32_t SubDivisionStepSize; // 0x474
	UStaticMesh* StaticMesh; // 0x478
	FColor WireframeColorOverride; // 0x480
	char bEvaluateWorldPositionOffset : 1; // 0x484
	char bOverrideWireframeColor : 1; // 0x484
	char bOverrideMinLod : 1; // 0x484
	char bOverrideNavigationExport : 1; // 0x484
	char bForceNavigationObstacle : 1; // 0x484
	char bDisallowMeshPaintPerInstance : 1; // 0x484
	char bIgnoreInstanceForTextureStreaming : 1; // 0x484
	char bOverrideLightMapRes : 1; // 0x484
	char bCastDistanceFieldIndirectShadow : 1; // 0x485
	char bOverrideDistanceFieldSelfShadowBias : 1; // 0x485
	char bUseSubDivisions : 1; // 0x485
	char bUseDefaultCollision : 1; // 0x485
	char bReverseCulling : 1; // 0x485
	int32_t OverriddenLightMapRes; // 0x488
	float DistanceFieldIndirectShadowMinVisibility; // 0x48c
	float DistanceFieldSelfShadowBias; // 0x490
	float StreamingDistanceMultiplier; // 0x494
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x498
	TArray<FStreamingTextureBuildInfo> StreamingTextureData; // 0x4a8
	FLightmassPrimitiveSettings LightmassSettings; // 0x4b8
};

struct AARSharedWorldGameState {
	TArray<char> PreviewImageData; // 0x290
	TArray<char> ARWorldData; // 0x2a0
	int32_t PreviewImageBytesTotal; // 0x2b0
	int32_t ARWorldBytesTotal; // 0x2b4
	int32_t PreviewImageBytesDelivered; // 0x2b8
	int32_t ARWorldBytesDelivered; // 0x2bc
};

struct UPolyEditOutsetProperties {
	float Softness; // 0x60
	bool bBoundaryOnly; // 0x64
	float AreaScale; // 0x68
};

struct UInterpTrackInstEvent {
	float LastUpdatePosition; // 0x28
};

struct UCrowDynamicFoliageDrawComponent {
	float PixelSizePerMeter; // 0xb0
	UCanvas* Canvas; // 0xb8
	FVector2D RenderTargetSize; // 0xc0
	FDrawToRenderTargetContext DrawToRTContext; // 0xc8
	FCrowDynamicFoliageRenderTarget RenderTarget; // 0xd8
};

struct UParticleModuleAttractorPoint {
	FRawDistributionVector position; // 0x30
	FRawDistributionFloat Range; // 0x78
	FRawDistributionFloat Strength; // 0xa8
	char StrengthByDistance : 1; // 0xd8
	char bAffectBaseVelocity : 1; // 0xd8
	char bOverrideVelocity : 1; // 0xd8
	char bUseWorldSpacePosition : 1; // 0xd8
	char Positive_X : 1; // 0xd8
	char Positive_Y : 1; // 0xd8
	char Positive_Z : 1; // 0xd8
	char Negative_X : 1; // 0xd8
	char Negative_Y : 1; // 0xd9
	char Negative_Z : 1; // 0xd9
};

struct AUPSMovementHandlerDefault {
	FUPSMoveParams MoveParams; // 0x248
	bool bRotateOnPoint; // 0x260
	UGameplayTask* ActiveGameplayTask; // 0x268
};

struct UGameEngine {
	float MaxDeltaTime; // 0xde0
	float ServerFlushLogInterval; // 0xde4
	UGameInstance* GameInstance; // 0xde8
};

struct UCrowBattleHUDMain {
	UCrowBattleHUDCrosshair* crosshairWidget; // 0x260
	UCrowBattleHUDWeaponState* weaponStateWidget; // 0x268
};

struct UCrowProceedingMineralWidget {
	UCrowProgressBar* PB_Gauge; // 0x348
	UTextBlock* TB_Point_Current; // 0x350
	UTextBlock* TB_Point_Total; // 0x358
	UWidgetAnimation* AniStart; // 0x360
};

struct UNavigationSystemConfig {
	FSoftClassPath NavigationSystemClass; // 0x28
	FNavAgentSelector SupportedAgentsMask; // 0x40
	FName DefaultAgentName; // 0x44
	char bIsOverriden : 1; // 0x4c
};

struct USafeZone {
	bool PadLeft; // 0x120
	bool PadRight; // 0x121
	bool PadTop; // 0x122
	bool PadBottom; // 0x123
};

struct ACrowGameHUD_TDM {
	UCrowHUDWidgetTDM* MainWidgetClassTDM; // 0x5f0
	UUserWidget* SubSpactatorWidget; // 0x5f8
	UCrowHUDWidgetTDM* MainWidgetTDM; // 0x600
};

struct UMaterialExpressionTextureSample {
	FExpressionInput Coordinates; // 0x48
};

struct UStereoLayerShapeCylinder {
	float Radius; // 0x28
	float OverlayArc; // 0x2c
	int32_t Height; // 0x30
};

struct UImgMediaSource {
	FFrameRate FrameRateOverride; // 0x88
	FString ProxyOverride; // 0x90
	FDirectoryPath SequencePath; // 0xa0
};

struct ACrowPIEEntryHUD {
	UUserWidget* WidgetEntry; // 0x310
};

struct UCrowBattleStatus {
	AActor* OwnerActor; // 0xb0
	float Health; // 0xb8
	float MaxHealth; // 0xbc
	float DyingHealth; // 0xc0
	float HeadArmorCurrent; // 0xc4
	float HeadArmorMax; // 0xc8
	float BodyArmorCurrent; // 0xcc
	float BodyArmorMax; // 0xd0
};

struct UMovieSceneGeometryCacheSection {
	FMovieSceneGeometryCacheParams Params; // 0xe8
};

struct UCrowInventoryInputEventHandler {
	UCrowGameInvenComponent* CrowInvenComponent; // 0x3b0
	UCrowBackPackInfoWidget* BackPackInfoWIdget; // 0x3b8
	ACrowPlayerControllerBase* CrowPlayerController; // 0x3c0
	TArray<UCrowInventoryInputEventHandler*> ActiveFrameList; // 0x3c8
	TArray<UCrowDropBoxWidget*> DropBoxWidgetList; // 0x3d8
	UUserWidget* WeaponItemWidget; // 0x3e8
	bool IsSelect; // 0x3f0
};

struct UBP_LSAT_MagazineAnimInst_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x2f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x308
	FAnimNode_Slot AnimGraphNode_Slot; // 0x328
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x370
	FAnimNode_MachineGunHandler AnimGraphNode_MachineGun; // 0x390
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x480
};

struct UInterpTrackEvent {
	TArray<FEventTrackKey> EventTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
	char bUseCustomEventName : 1; // 0x80
};

struct UCrowClientManager {
	ACrowGameStateBase* GameState; // 0x40
	ACrowPlayerStateBase* PlayerState; // 0x48
	ACrowPlayerControllerBase* PlayerController; // 0x50
	ACrowCharacterPawn* Character; // 0x58
	ACrowPostProcessVolume* PostProcessVolume; // 0x60
	ACrowMergedSkeletalMeshCacheActor* MergedSkeletalMeshCacheActor; // 0x68
	FCrowUserInfoBase UserInfo; // 0x70
	TArray<UCrowWorldMapIcon*> WorldMapIconArray; // 0x8a0
	TArray<UCrowIndicatorViewInfo*> IndicatorArray; // 0x8b0
	UCrowHUDWidgetDefault* MainWidgetDefault; // 0x8c0
	UCrowHUDWidgetFullScreenBottom* MainWidgetFullScreenBottom; // 0x8c8
	UCrowHUDWidgetFullScreenTop* MainWidgetFullScreenTop; // 0x8d0
	TMap<uint64_t, ACrowPlayerStateBase*> TeamPlayerStateMap; // 0x8d8
	FCrowScopeEffect ScopeEffect; // 0x928
	TArray<ACrowPlayerStateBase*> AddPlayerArray; // 0x998
	TArray<ACrowPlayerStateBase*> RemovePlayerArray; // 0x9a8
	FCrowGameModeInfo GemeModeInfo; // 0x9b8
	int32_t GetExpInfo; // 0x9f0
	FVector ViewMatrices_ViewOrigin; // 0x9f4
	FMatrix ViewMatrices_ProjectionMatrix; // 0xa00
	TArray<FCrowModPointInfo> ModPointInfoArray; // 0xa80
	TArray<ECrowMedalType> MedalTypeArray; // 0xa90
	TArray<FCrowLobbyNoticeInfo> LobbyNoticeInfoArray; // 0xaa0
	TArray<FCrowAdjustMapInfo> AdjustMapInfoArray; // 0xab0
	FCrowTeamInfo InvalidTeam; // 0xba8
};

struct UWeightMapSetProperties {
	FName WeightMap; // 0x60
	TArray<FString> WeightMapsList; // 0x68
	bool bInvertWeightMap; // 0x78
};

struct UCrowShopSlotDropDownWidget {
	TArray<FString> ButtonTitleList; // 0x348
	UTextBlock* TB_SelectedItem; // 0x358
	UCrowButton* BT_Dropdown; // 0x360
	UCanvasPanel* CP_Dropdown; // 0x368
	UCrowShopDropDownItemSlot* WB_Shop_SlotListDropDown; // 0x370
	UCrowShopDropDownItemSlot* WB_Shop_SlotListDropDown_2; // 0x378
	UCrowShopDropDownItemSlot* WB_Shop_SlotListDropDown_3; // 0x380
	UCrowShopDropDownItemSlot* WB_Shop_SlotListDropDown_4; // 0x388
	UCrowShopDropDownItemSlot* WB_Shop_SlotListDropDown_5; // 0x390
	TArray<UCrowShopDropDownItemSlot*> ButtonList; // 0x398
	UCrowShopDropDownItemSlot* CurrentShopListItem; // 0x3a8
};

struct UGameplayTask {
	FName InstanceName; // 0x30
	ETaskResourceOverlapPolicy ResourceOverlapPolicy; // 0x3a
	UGameplayTask* ChildTask; // 0x60
};

struct UBlendSpace1D {
	bool bScaleAnimation; // 0x148
};

struct UCrowVehicleSKC {
	float ComponentTransformUpdateDelayMin; // 0xed4
	float ComponentTransformUpdateDelayMax; // 0xed8
	float ComponentTransformUpdateDistanceMin; // 0xedc
	FTransform CachedWorldTransform; // 0xee0
	FTransform RootBoneRelativeTransform; // 0xf10
	FVector ReplicatedLocation; // 0xf40
	float ElapsedTimeAfterReplication; // 0xf4c
	float TransformUpdateDelay; // 0xf50
	int32_t TickUpdateCount; // 0xf54
};

struct UAISenseConfig_Blueprint {
	UAISense_Blueprint* Implementation; // 0x48
};

struct AUPSMovementGroup {
	ACharacter* GroupLeader; // 0x228
	TMap<ACharacter*, FMovementGroupMemberInfo> MovementGroupMembers; // 0x230
	bool bRotateMovementPointsAroundLeader; // 0x280
	AUPSGroupMovementFormation* Formation; // 0x288
	float MembersMovementReactionTime; // 0x290
	float MembersMovementReactionTimeRandomDiviation; // 0x294
	AUPSGroupMovementAIController* GroupMovementLeaderAIC; // 0x298
	UBillboardComponent* BillboardComponent; // 0x2a0
	AUPSGroupMovementFormation* SpawnedFormation; // 0x2a8
	TMap<ACharacter*, FDelayedGroupMovement> DelayedMovement; // 0x2e0
};

struct UCrowGasMaskComponent {
	UAnimMontage* MaskOn_FP; // 0xb0
	UAnimMontage* MaskOn_TP; // 0xb8
	UAnimMontage* MaskOff_FP; // 0xc0
	UAnimMontage* MaskOff_TP; // 0xc8
	uint32_t GasMaskIndex; // 0xd0
	UAkAudioEvent* MaskOn_Sound; // 0xd8
	UAkAudioEvent* MaskOff_Sound; // 0xe0
	UAkAudioEvent* FilterDurabilityZero_Sound; // 0xe8
	UAkAudioEvent* Idle_Sound; // 0xf0
	UAkAudioEvent* Moving_Sound; // 0xf8
	UAkAudioEvent* Sprinting_Sound; // 0x100
	UAkAudioEvent* Moving_End_Sound; // 0x108
	USkeletalMeshComponent* GasMaskDummyComponent1P; // 0x110
	USkeletalMeshComponent* GasMaskDummyComponent3P; // 0x118
	bool bZeroFilterSoundFlag; // 0x120
	bool bMovingEndSoundPlaying; // 0x121
	bool bInside; // 0x122
	ECrowGasMaskSoundState GasMaskSoundState; // 0x123
};

struct UCrowMissionTableManager {
	TMap<int32_t, FCrowMissionTableRow> MapMissionTable; // 0x28
};

struct UMaterialExpressionShadingPathSwitch {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x3]; // 0x54
};

struct UCrowSquadMatchRewardTableManager {
	TMap<FString, FCrowSquadMatchRewardTableRow> TableMap; // 0x28
};

struct UParticleModuleRotationRateMultiplyLife {
	FRawDistributionFloat LifeMultiplier; // 0x30
};

struct USourceEffectDynamicsProcessorPreset {
	FSourceEffectDynamicsProcessorSettings Settings; // 0xb8
};

struct USoundNodeSoundClass {
	USoundClass* SoundClassOverride; // 0x48
};

struct UProceduralSphereToolProperties {
	float Radius; // 0x70
	int32_t LatitudeSlices; // 0x74
	int32_t LongitudeSlices; // 0x78
};

struct UWidgetSwitcher {
	int32_t ActiveWidgetIndex; // 0x120
};

struct UCrowSpinSelectionWidget {
	UCrowButton* BT_Prev; // 0x348
	UCrowButton* BT_Next; // 0x350
	UTextBlock* TB_SelectedItem; // 0x358
	TArray<FText> ItemList; // 0x360
};

struct UInstancedStaticMeshComponent {
	TArray<FInstancedStaticMeshInstanceData> PerInstanceSMData; // 0x4d0
	int32_t NumCustomDataFloats; // 0x4e0
	TArray<float> PerInstanceSMCustomData; // 0x4e8
	int32_t InstancingRandomSeed; // 0x4f8
	int32_t InstanceStartCullDistance; // 0x4fc
	int32_t InstanceEndCullDistance; // 0x500
	TArray<int32_t> InstanceReorderTable; // 0x508
	int32_t NumPendingLightmaps; // 0x560
	TArray<FInstancedStaticMeshMappingInfo> CachedMappings; // 0x568
};

struct AServerStatReplicator {
	bool bUpdateStatNet; // 0x220
	bool bOverwriteClientStats; // 0x221
	uint32_t Channels; // 0x224
	uint32_t InRate; // 0x228
	uint32_t OutRate; // 0x22c
	uint32_t MaxPacketOverhead; // 0x234
	uint32_t InRateClientMax; // 0x238
	uint32_t InRateClientMin; // 0x23c
	uint32_t InRateClientAvg; // 0x240
	uint32_t InPacketsClientMax; // 0x244
	uint32_t InPacketsClientMin; // 0x248
	uint32_t InPacketsClientAvg; // 0x24c
	uint32_t OutRateClientMax; // 0x250
	uint32_t OutRateClientMin; // 0x254
	uint32_t OutRateClientAvg; // 0x258
	uint32_t OutPacketsClientMax; // 0x25c
	uint32_t OutPacketsClientMin; // 0x260
	uint32_t OutPacketsClientAvg; // 0x264
	uint32_t NetNumClients; // 0x268
	uint32_t InPackets; // 0x26c
	uint32_t OutPackets; // 0x270
	uint32_t InBunches; // 0x274
	uint32_t OutBunches; // 0x278
	uint32_t OutLoss; // 0x27c
	uint32_t InLoss; // 0x280
	uint32_t VoiceBytesSent; // 0x284
	uint32_t VoiceBytesRecv; // 0x288
	uint32_t VoicePacketsSent; // 0x28c
	uint32_t VoicePacketsRecv; // 0x290
	uint32_t PercentInVoice; // 0x294
	uint32_t PercentOutVoice; // 0x298
	uint32_t NumActorChannels; // 0x29c
	uint32_t NumConsideredActors; // 0x2a0
	uint32_t PrioritizedActors; // 0x2a4
	uint32_t NumRelevantActors; // 0x2a8
	uint32_t NumRelevantDeletedActors; // 0x2ac
	uint32_t NumReplicatedActorAttempts; // 0x2b0
	uint32_t NumReplicatedActors; // 0x2b4
	uint32_t NumActors; // 0x2b8
	uint32_t NumNetActors; // 0x2bc
	uint32_t NumDormantActors; // 0x2c0
	uint32_t NumInitiallyDormantActors; // 0x2c4
	uint32_t NumNetGUIDsAckd; // 0x2c8
	uint32_t NumNetGUIDsPending; // 0x2cc
	uint32_t NumNetGUIDsUnAckd; // 0x2d0
	uint32_t ObjPathBytes; // 0x2d4
	uint32_t NetGUIDOutRate; // 0x2d8
	uint32_t NetGUIDInRate; // 0x2dc
	uint32_t NetSaturated; // 0x2e0
};

struct UAnimNotify_CLSEarlyBlendOut {
	float BlendOutTime; // 0x30
	TArray<ECLSMovementMode> MovementModes; // 0x38
	TArray<ECLSStance> Stances; // 0x48
	bool bCheckMovementInput; // 0x58
	bool bCheckRotationInput; // 0x59
};

struct UPaperTerrainMaterial {
	TArray<FPaperTerrainMaterialRule> Rules; // 0x30
	UPaperSprite* InteriorFill; // 0x40
};

struct UCrowStatusWidget {
	UWidgetSwitcher* WS_CharacterState; // 0x348
	UCrowWeaponInfoWidget* CrowWeaponInfoWidget; // 0x350
	UWidgetSwitcher* WS_EquipGadget; // 0x358
	UWidgetSwitcher* WS_EquipHeal; // 0x360
	UWidgetSwitcher* WS_EquipGrenade; // 0x368
	UImage* IMG_Item_G; // 0x370
	UImage* IMG_Item_H; // 0x378
	UImage* IMG_Item_T; // 0x380
	UTextBlock* TB_RemainCount_G; // 0x388
	UTextBlock* TB_RemainCount_H; // 0x390
	UTextBlock* TB_RemainCount_T; // 0x398
	UCrowInputMappingWidget* RTB_Key_Gadget; // 0x3a0
	UCrowInputMappingWidget* RTB_Key_Gadget_BombMission; // 0x3a8
	UCrowInputMappingWidget* RTB_Key_Heal; // 0x3b0
	UCrowInputMappingWidget* RTB_Key_Grenade; // 0x3b8
	UImage* IMG_Gauge_G; // 0x3c0
	UCanvasPanel* CP_Gadget; // 0x3c8
	UCanvasPanel* CP_Grenade; // 0x3d0
	UCanvasPanel* CP_Heal; // 0x3d8
	UMaterialInstanceDynamic* GrenadeCoolTimeGauge; // 0x3e0
	UCrowWidgetTweenAlpha* FadeTweenAlpha; // 0x3e8
	UCrowVivoxManager* VivoxManager; // 0x3f8
	FName GrenadeBehaviorName; // 0x424
	FName SpecialWeaponBehaviorName; // 0x42c
};

struct UMaterialExpressionCrossProduct {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UPinchBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	bool bPerpDamping; // 0x6c
};

struct UCrowCharacterFallsComponent {
	bool bIsFalling; // 0xc0
	ACrowCharacterPawn* CharacterPawn; // 0xc8
	UCrowCharacterMovement* CrowMovementComp; // 0xd0
	EVehicleIdentity CurrentVehicleType; // 0xd8
	ECrowFallsDamageType DamageType; // 0xd9
	float Damage; // 0xdc
	FVector StartPosition; // 0xe0
	EPhysicalSurface SurfaceType; // 0xec
};

struct AReplicationGraphDebugActor {
	UReplicationGraph* ReplicationGraph; // 0x220
	UNetReplicationGraphConnection* ConnectionManager; // 0x228
};

struct UAnimNotify_PlaySound {
	USoundBase* Sound; // 0x38
	float VolumeMultiplier; // 0x40
	float PitchMultiplier; // 0x44
	char bFollow : 1; // 0x48
	FName AttachName; // 0x4c
};

struct UCrowSoundSwitchFadeByDistance {
	TArray<float> DistanceArrayOfMeter; // 0x48
	TArray<float> InputVolumes; // 0x58
	float TestDistance; // 0x68
};

struct USourceEffectPhaserPreset {
	FSourceEffectPhaserSettings Settings; // 0xa0
};

struct USkyCreatorWeatherPreset {
	FText Description; // 0x30
	FSkyCreatorSkyAtmosphereSettings SkyAtmosphereSettings; // 0x48
	FSkyCreatorVolumetricCloudSettings VolumetricCloudSettings; // 0xb4
	FSkyCreatorSkyLightSettings SkyLightSettings; // 0x140
	FSkyCreatorSunLightSettings SunLightSettings; // 0x154
	FSkyCreatorMoonLightSettings MoonLightSettings; // 0x180
	FSkyCreatorExponentialHeightFogSettings ExponentialHeightFogSettings; // 0x1ac
	FSkyCreatorStarMapSettings StarMapSettings; // 0x210
	FSkyCreatorWeatherFXSettings WeatherFXSettings; // 0x244
	FSkyCreatorWindSettings WindSettings; // 0x268
	FSkyCreatorExposureSettings ExposureSettings; // 0x28c
};

struct UBP_PKM_MagazineAnimInst_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_MeshSpaceRefPose AnimGraphNode_MeshRefPose; // 0x2f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x308
	FAnimNode_Slot AnimGraphNode_Slot; // 0x328
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x370
	FAnimNode_MachineGunHandler AnimGraphNode_MachineGun; // 0x390
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x480
};

struct UChannel {
	UNetConnection* Connection; // 0x28
};

struct UMaterialExpressionNormalize {
	FExpressionInput VectorInput; // 0x40
};

struct UNiagaraRibbonRendererProperties {
	UMaterialInterface* Material; // 0x80
	FNiagaraUserParameterBinding MaterialUserParamBinding; // 0x88
	ENiagaraRibbonFacingMode FacingMode; // 0xa8
	FNiagaraRibbonUVSettings UV0Settings; // 0xac
	FNiagaraRibbonUVSettings UV1Settings; // 0xd0
	ENiagaraRibbonDrawDirection DrawDirection; // 0xf4
	float CurveTension; // 0xf8
	ENiagaraRibbonTessellationMode TessellationMode; // 0xfc
	int32_t TessellationFactor; // 0x100
	bool bUseConstantFactor; // 0x104
	float TessellationAngle; // 0x108
	bool bScreenSpaceTessellation; // 0x10c
	FNiagaraVariableAttributeBinding PositionBinding; // 0x110
	FNiagaraVariableAttributeBinding ColorBinding; // 0x168
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x1c0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x218
	FNiagaraVariableAttributeBinding RibbonTwistBinding; // 0x270
	FNiagaraVariableAttributeBinding RibbonWidthBinding; // 0x2c8
	FNiagaraVariableAttributeBinding RibbonFacingBinding; // 0x320
	FNiagaraVariableAttributeBinding RibbonIdBinding; // 0x378
	FNiagaraVariableAttributeBinding RibbonLinkOrderBinding; // 0x3d0
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x428
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x480
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x4d8
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x530
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x588
	FNiagaraVariableAttributeBinding U0OverrideBinding; // 0x5e0
	FNiagaraVariableAttributeBinding V0RangeOverrideBinding; // 0x638
	FNiagaraVariableAttributeBinding U1OverrideBinding; // 0x690
	FNiagaraVariableAttributeBinding V1RangeOverrideBinding; // 0x6e8
};

struct UCrowWorldSettings {
	UCrowWorldLODSetting* CrowWorldLODSetting; // 0x38
};

struct UCrowCustomizeOutfitSlotWidget {
	UImage* IMG_Selected; // 0x348
	UImage* IMG_Equiped; // 0x350
	UImage* IMG_NewIcon; // 0x358
	UCrowButton* BT_Customize_List_Slot; // 0x360
	UTextBlock* TB_ItemName; // 0x368
	UWidgetSwitcher* WS_IconIMG; // 0x370
	UImage* IMG_IconIMG_OutFit; // 0x378
	UImage* IMG_IconIMG_Appearance; // 0x380
	UImage* IMG_MoneyIcon; // 0x388
	UImage* IMG_MoneyBack; // 0x390
	UTextBlock* TB_Label_Money; // 0x398
	UHorizontalBox* HB_Cost; // 0x3a0
	UWidgetSwitcher* WS_Grade; // 0x3a8
	UCanvasPanel* CP_RewardPanel; // 0x3b0
	UCanvasPanel* CP_Count; // 0x3b8
	UTextBlock* TB_ItemCount; // 0x3c0
	UPaperSprite* GPointIcon; // 0x3c8
	UPaperSprite* RCPIcon; // 0x3d0
	UTextBlock* TBItemName_Sel; // 0x418
	bool Selected; // 0x420
	bool Equiped; // 0x421
	bool useDeselect; // 0x422
	bool IsShopItem; // 0x423
	int32_t SlotValue; // 0x424
	int32_t IntValue; // 0x428
	FCrowItemTableBaseRow CurrentItemTable; // 0x430
	FCrowItemData CurrentItemData; // 0x598
	ECrowCustomizeCategoryType CurrentItemSlotType; // 0x5c8
	ECrowCharacterAppearanceType AppearanceCategoryType; // 0x5c9
	ACrowSceneLobby* SceneLobby; // 0x5d0
	FCrowShopTableRow ShopTableData; // 0x5d8
	int32_t GridRow; // 0x650
};

struct ACrowDistanceBasedFXTestActor {
	UStaticMeshComponent* SphereMesh; // 0x220
	ECrowWeaponSubType WeaponSubType; // 0x228
	FCrowWeaponGroundDustEffect TestFX; // 0x230
	bool bDrawForDebug; // 0x2e0
	float ImpactPointSize; // 0x2e4
	float CurrParam; // 0x2e8
	float currDist; // 0x2ec
	bool bInitialized; // 0x2f0
	FName WeaponSubTypeName; // 0x2f4
	TMap<int64_t, FName> WeaponSubTypeNames; // 0x300
	UCrowDistanceBasedFXManager* FXManager; // 0x350
	UArrowComponent* ArrowComp; // 0x358
};

struct UInterpTrackFloatMaterialParam {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct UCrowMailTableManager {
	TMap<uint32_t, FCrowMailAccountReward> AccountRewardTable; // 0x28
	TMap<uint32_t, FCrowMailRewardSentence> RewardSentenseTable; // 0x78
	TMap<uint32_t, FCrowMailRewardTime> RewardTimeTable; // 0xc8
};

struct ASkyAtmosphere {
	USkyAtmosphereComponent* SkyAtmosphereComponent; // 0x220
};

struct ACrowSupplyAmmoActor {
	TArray<FCrowSupplyAmmoInfo> ArraySupplyAmmoInfo; // 0x220
	UBoxComponent* BoxComponent; // 0x230
	USceneComponent* IconLocation; // 0x238
	FName SupplyBoxTableKey; // 0x240
	ECrowSupplyBoxType SupplyBoxType; // 0x248
	uint32_t MaxSupplyCount; // 0x24c
	UAkAudioEvent* UseSound; // 0x250
	float LifeTime; // 0x258
	float CoolTime; // 0x25c
	float HP; // 0x260
	UParticleSystem* DestroyEffect; // 0x268
	UAkAudioEvent* DestroySound; // 0x270
	FCrowGameIconDisplayInfo IconDisplayInfo; // 0x278
	char BoxTeam; // 0x300
	uint32_t RemainSupplyCount; // 0x304
	ACrowPlayerStateBase* InstallPlayerState; // 0x308
};

struct UWebBrowserAssetManager {
	TSoftObjectPtr<UMaterial> DefaultMaterial; // 0x28
};

struct UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UImgMediaSettings {
	FFrameRate DefaultFrameRate; // 0x28
	float CacheBehindPercentage; // 0x30
	float CacheSizeGB; // 0x34
	int32_t CacheThreads; // 0x38
	int32_t CacheThreadStackSizeKB; // 0x3c
	float GlobalCacheSizeGB; // 0x40
	bool UseGlobalCache; // 0x44
	uint32_t ExrDecoderThreads; // 0x48
	FString DefaultProxy; // 0x50
	bool UseDefaultProxy; // 0x60
};

struct UCrowVirtualISMC {
	TArray<FCrowVirtualISMCInstance> VirtualInstances; // 0x668
	TArray<int32_t> LookupVirtualInstanceIndex; // 0x678
	TArray<int32_t> RecycleVirtualIndexes; // 0x688
	int32_t ShowVirtualInstanceCount; // 0x698
};

struct UCrowGameInvenComponent {
	TArray<ACrowItemBase*> EquipArray; // 0xb0
	TArray<ACrowItemBase*> InvenArray; // 0xc0
	uint32_t CurrentWeaponKey; // 0xd0
	char CurrentWeaponSlotIndex; // 0xd4
	char EquipCount; // 0xd5
	TArray<ACrowItemBase*> ServerOnlyItemArray; // 0xd8
	ACrowWeaponBase* CachedCurrentWeapon; // 0xf0
	TArray<ACrowItemBase*> LearLootItemList; // 0xf8
	ACrowCharacterPawn* CharacterOwner; // 0x108
	int32_t InvenSlotCount; // 0x110
	ACrowPickupInventory* CurrentPickupInventory; // 0x118
	float CurrentRot; // 0x120
	float CurrentDist; // 0x124
	float DropAddDist; // 0x128
};

struct ULevelActorContainer {
	TArray<AActor*> Actors; // 0x28
};

struct UWorkPlaneProperties {
	bool bPropertySetEnabled; // 0x60
	bool bShowGizmo; // 0x61
	bool bSnapToGrid; // 0x62
	FVector position; // 0x64
	FQuat Rotation; // 0x70
};

struct UInterpTrackDirector {
	TArray<FDirectorTrackCut> CutTrack; // 0x70
	char bSimulateCameraCutsOnClients : 1; // 0x80
};

struct ACrowSceneDediServer {
	TMap<uint64_t, FCrowWaitUserInfo> WaitUserMap; // 0x940
	ACrowWorldPingAliveActor* PingAliveActor; // 0x990
};

struct UCrowSelectModWidget {
	UTextBlock* TB_MODName; // 0x348
	UTextBlock* TB_GameModDesc; // 0x350
	UCrowSelectMapWidget* WB_SelectMap; // 0x358
	UCrowButton* BT_MatchButton; // 0x360
	UTextBlock* TB_MatchLabel; // 0x368
	UImage* IMG_DisableCover; // 0x370
	uint32_t MapIndex; // 0x378
	uint32_t GameMode; // 0x37c
};

struct UCrowDecalComponent {
	UMaterialInstanceDynamic* MaterialDynamic; // 0x238
	UCurveFloat* FadeInCurve; // 0x240
	UCurveFloat* FadeOutCurve; // 0x248
	UCurveFloat* EmissiveInCurve; // 0x250
	UCurveFloat* EmissiveOutCurve; // 0x258
};

struct UBTDecorator {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct ACrowVehiclePawn {
	ACrowWorldIconActor* RewardIconActor; // 0x2a8
	UParticleSystemComponent* RewardSmokeEffect; // 0x2b0
	uint32_t VehicleIndex; // 0x2b8
	FString VehicleTextIndex; // 0x2c0
	FName SkidMarkIndex; // 0x2d0
	UCrowComponentContainer* ComponentContainer; // 0x2d8
	UCrowVehicleFacadeBase* VehicleFacadeClass; // 0x2e0
	FRepMovementTolerance ReplicatedMovementTolerance; // 0x2e8
	UCrowVehicleParam* VehicleParam; // 0x2f8
	USceneComponent* SceneComp; // 0x300
	TMap<ECrowVehicleState, UCrowFoliageAffectorComponent*> MapVehicleFoliageAffector; // 0x308
	TArray<UCrowFoliageAffectorComponent*> FoliageAffectors; // 0x358
	UCrowVehicleFacadeBase* VehicleFacade; // 0x368
	FRigidBodyState CachedRigidBodyState; // 0x370
	UCrowVehicleFSM* FSM; // 0x3b0
	UCrowRotorFSM* RotorFSM; // 0x3b8
	UCrowVehicleEventDispatcher* EventDispatcher; // 0x3c0
	UCrowVehicleFloodingComponent* VehicleFloodingComponent; // 0x3c8
	UCrowImpactDamageControl* VehicleImpactDamageControl; // 0x3d0
	FCrowBattleContainer BattleContainer; // 0x3d8
	bool bPostEditMoveInit; // 0x3f8
	FRotator DefaultCamera3PRotate; // 0x3fc
	ECrowIconType IconType; // 0x408
	uint32_t EmptySeatCount; // 0x40c
	UCrowWorldMapIcon* MapIcon; // 0x410
	UCrowIndicatorViewInfo* IndiViewInfo; // 0x418
	bool bVehicleAir; // 0x420
	ECrowVehicleState LastVehicleState; // 0x424
	TMap<uint64_t, FCrowDamageExpInfo> DamageExpMap; // 0x428
	FVector PrevVelocity; // 0x47c
	FVector DebugSpawnerLocation; // 0x488
	FVector DebugSpawnerLocationTeleport; // 0x494
	EVehicleIdentity VehicleType; // 0x4a0
	UAkAudioEvent* ImpactSound; // 0x4a8
	FCrowGameIconDisplayInfo IconDisplayInfoLocal; // 0x4b0
	FCrowGameIconDisplayInfo IconDisplayInfoMySquad; // 0x538
	FCrowGameIconDisplayInfo IconDisplayInfoMyTeam; // 0x5c0
	FCrowGameIconDisplayInfo IconDisplayInfoEnemy; // 0x648
	FCrowGameIconDisplayInfo IconDisplayInfoEmpty; // 0x6d0
	TMap<ECrowGameMode, FCrowVehicleIconInfo> ModeIconSet; // 0x758
	float MaxLeanAccelerationForward; // 0x7a8
	float MaxLeanAccelerationRight; // 0x7ac
	TArray<FCrowVehicleDeltaVelocity> CachedDeltaVelocities; // 0x7b0
	FVector CachedBodyVelocity; // 0x7c0
	FVector2D PassengerLeanValue; // 0x7cc
	int32_t ReadyFrameCount; // 0x7d4
	float SyncPhysicsIgnoreTime; // 0x7d8
	FVector PrevWorldOrigin; // 0x7dc
	UBoxComponent* FloodingCheckBox; // 0x7e8
	uint32_t OverrideSkinIndex; // 0x7f0
	bool bIsFlooding; // 0x7f4
	char SquadRewardIndex; // 0x7f5
	FTimerHandle FloodingCheckTimerHandle; // 0x7f8
	float CurrentFloodingSecond; // 0x800
	bool IsCrowVehicleComponentUpdated; // 0x804
	char OwnerTeamID; // 0x805
	EVehicleLockOnState LockOnState; // 0x806
	UPhysicalMaterial* RadialDamagePhysicsMaterial; // 0x808
	TArray<ACrowCharacterPawn*> LockOnCharacterList; // 0x818
	TArray<ACrowCharacterPawn*> TargetingCharacterList; // 0x828
};

struct UCompositionGraphCaptureProtocol {
	FCompositionGraphCapturePasses IncludeRenderPasses; // 0x58
	bool bCaptureFramesInHDR; // 0x68
	int32_t HDRCompressionQuality; // 0x6c
	EHDRCaptureGamut CaptureGamut; // 0x70
	FSoftObjectPath PostProcessingMaterial; // 0x78
	bool bDisableScreenPercentage; // 0x90
	UMaterialInterface* PostProcessingMaterialPtr; // 0x98
};

struct UEnvQueryInstanceBlueprintWrapper {
	int32_t QueryID; // 0x30
	UEnvQueryItemType* ItemType; // 0x58
	int32_t OptionIndex; // 0x60
	FMulticastInlineDelegate OnQueryFinishedEvent; // 0x68
};

struct UMovieSceneCaptureProtocolBase {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UChaosPhysicalMaterial {
	float Friction; // 0x28
	float StaticFriction; // 0x2c
	float Restitution; // 0x30
	float LinearEtherDrag; // 0x34
	float AngularEtherDrag; // 0x38
	float SleepingLinearVelocityThreshold; // 0x3c
	float SleepingAngularVelocityThreshold; // 0x40
};

struct UModelComponent {
	UBodySetup* ModelBodySetup; // 0x458
};

struct UNiagaraDataInterfaceArrayFloat {
	TArray<float> FloatData; // 0x50
};

struct UDatasmithGLTFSceneImportData {
	FString Generator; // 0x28
	float Version; // 0x38
	FString Author; // 0x40
	FString License; // 0x50
	FString Source; // 0x60
};

struct UCrowBoardWidget {
	UCrowButton* BT_Banner_2; // 0x348
	UCrowButton* BT_Banner_3; // 0x350
	UCrowButton* BT_Banner_4; // 0x358
	UCrowButton* BT_Banner_5; // 0x360
};

struct AMagicLeapSharedWorldGameMode {
	FMagicLeapSharedWorldSharedData SharedWorldData; // 0x308
	FMulticastInlineDelegate OnNewLocalDataFromClients; // 0x318
	float PinSelectionConfidenceThreshold; // 0x328
	AMagicLeapSharedWorldPlayerController* ChosenOne; // 0x3d0
};

struct UCompressedImageSequenceProtocol {
	int32_t CompressionQuality; // 0xd8
};

struct UClothPhysicalMeshDataNv_Legacy {
	TArray<float> MaxDistances; // 0xe0
	TArray<float> BackstopDistances; // 0xf0
	TArray<float> BackstopRadiuses; // 0x100
	TArray<float> AnimDriveMultipliers; // 0x110
};

struct UCrowShootingTargetPointComponent {
	int32_t Point; // 0x468
};

struct URadialIntMask {
	float Radius; // 0xb0
	FVector position; // 0xb4
	int32_t InteriorValue; // 0xc0
	int32_t ExteriorValue; // 0xc4
	ESetMaskConditionType SetMaskCondition; // 0xc8
};

struct UCrowWidgetButtonBase {
	UButton* BTN_Main; // 0x2b0
	UImage* IMG_BackGround; // 0x2b8
	UImage* IMG_Frame; // 0x2c0
	UTextBlock* TB_Label; // 0x2c8
	FText ButtonLabel; // 0x2d0
	FSlateBrush ButtonBackGround; // 0x2e8
	FSlateBrush ButtonFrame; // 0x370
	UAkAudioEvent* AudioEvent_Clicked; // 0x3f8
	bool UseHoveredSound; // 0x400
	UAkAudioEvent* AudioEvent_Hovered; // 0x408
};

struct UApplicationLifecycleComponent {
	FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0xb0
	FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0xc0
	FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0xd0
	FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0xe0
	FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0xf0
	FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x100
	FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x110
	FMulticastInlineDelegate OnTemperatureChangeDelegate; // 0x120
	FMulticastInlineDelegate OnLowPowerModeDelegate; // 0x130
};

struct UDatasmithPostProcessVolumeTemplate {
	FDatasmithPostProcessSettingsTemplate Settings; // 0x30
	char bEnabled : 1; // 0x70
	char bUnbound : 1; // 0x70
};

struct UMaterialExpressionCeil {
	FExpressionInput Input; // 0x40
};

struct UMovieSceneAkAudioEventSection {
	UAkAudioEvent* Event; // 0x128
	bool RetriggerEvent; // 0x130
	int32_t ScrubTailLengthMs; // 0x134
	bool StopAtSectionEnd; // 0x138
	FString EventName; // 0x140
	float MaxSourceDuration; // 0x170
	FString MaxDurationSourceID; // 0x178
};

struct UMaterialExpressionMax {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UEditPivotTool {
	UEditPivotToolProperties* TransformProps; // 0x98
	UEditPivotToolActionPropertySet* EditPivotActions; // 0xa0
	TArray<FEditPivotTarget> ActiveGizmos; // 0x178
};

struct UMovieSceneColorSection {
	FMovieSceneFloatChannel RedCurve; // 0xe8
	FMovieSceneFloatChannel GreenCurve; // 0x188
	FMovieSceneFloatChannel BlueCurve; // 0x228
	FMovieSceneFloatChannel AlphaCurve; // 0x2c8
};

struct ACrowRecoilEditorBoard {
	FVector vOrigin; // 0x220
	ACrowRecoilEditorItem* TempleteItemClass; // 0x230
	TArray<ACrowRecoilEditorItem*> ArrItem; // 0x238
	TArray<int32_t> ArrDeleteIndex; // 0x258
};

struct ANavModifierVolume {
	UNavArea* AreaClass; // 0x260
	bool bMaskFillCollisionUnderneathForNavmesh; // 0x268
};

struct ACameraActor {
	EAutoReceiveInput AutoActivateForPlayer; // 0x220
	UCameraComponent* CameraComponent; // 0x228
	USceneComponent* SceneComponent; // 0x230
	char bConstrainAspectRatio : 1; // 0x240
	float AspectRatio; // 0x244
	float FOVAngle; // 0x248
	float PostProcessBlendWeight; // 0x24c
	FPostProcessSettings PostProcessSettings; // 0x250
};

struct UDrawPolyPathExtrudeProperties {
	EDrawPolyPathExtrudeDirection Direction; // 0x60
};

struct URevolveProperties {
	double RevolutionDegrees; // 0x60
	double RevolutionDegreesOffset; // 0x68
	int32_t Steps; // 0x70
	bool bReverseRevolutionDirection; // 0x74
	bool bFlipMesh; // 0x75
	bool bProfileIsCrossSectionOfSide; // 0x76
	ERevolvePropertiesPolygroupMode PolygroupMode; // 0x77
	ERevolvePropertiesQuadSplit QuadSplitMode; // 0x78
	double DiagonalProportionTolerance; // 0x80
	ERevolvePropertiesCapFillMode CapFillMode; // 0x88
	bool bWeldFullRevolution; // 0x89
	bool bWeldVertsOnAxis; // 0x8a
	double AxisWeldTolerance; // 0x90
	bool bSharpNormals; // 0x98
	double SharpNormalAngleTolerance; // 0xa0
	bool bFlipVs; // 0xa8
	bool bUVsSkipFullyWeldedEdges; // 0xa9
};

struct UInAppPurchaseRestoreCallbackProxy2 {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct ACrowSceneIndexOverride {
	uint32_t SceneIndex; // 0x220
};

struct UCrowSquadLoadoutSlotWeaponWidget {
	UCrowButton* BT_LoadoutSlot; // 0x358
	UTextBlock* TB_ItemName; // 0x360
	UImage* IMG_Selected; // 0x368
	UImage* IMG_Equiped; // 0x370
	UWidgetSwitcher* WS_IconIMG; // 0x378
	UImage* IMG_ItemIcon; // 0x380
	UCrowWeaponCombinedIconWidget* WB_FireArm_Combine; // 0x388
	UCanvasPanel* CP_LoadOutBox; // 0x390
	UTextBlock* TB_LoadoutName; // 0x398
	UImage* IMG_Loadout_Lock; // 0x3a0
	UTextBlock* TBItemName_Sel; // 0x3a8
	bool Selected; // 0x3b0
	bool Equiped; // 0x3b1
	FCrowSquadWeapon SquadWeapon; // 0x3b4
	FCrowWeaponSlot LoadoutWeapon; // 0x3c0
	FCrowWeaponData WeaponData; // 0x3f0
	FCrowWeaponTableRow WeaponTable; // 0x560
	int32_t PresetIndex; // 0x1780
};

struct UInterpTrackFloatProp {
	FName PropertyName; // 0x90
};

struct UCrowFxReplicatorComponent {
	FInitializeFxReplicator InitializeData; // 0xb0
	TArray<UParticleSystemComponent*> CreatedFxList; // 0x100
	TArray<UAudioComponent*> CreatedAudioList; // 0x110
	TArray<FWwiseEventPlayingInfo> WwiseEventPlayingInfos; // 0x120
	bool IsVehicleFx; // 0x130
	TWeakObjectPtr<ACrowVehiclePawn> VehiclePawn; // 0x134
	TWeakObjectPtr<USkeletalMeshComponent> BodySKC; // 0x13c
	float SpeedMax; // 0x144
};

struct UBlendProfile {
	USkeleton* OwningSkeleton; // 0x30
	TArray<FBlendProfileBoneEntry> ProfileEntries; // 0x38
};

struct UTimelineComponent {
	FTimeline TheTimeline; // 0xb0
	char bIgnoreTimeDilation : 1; // 0x148
};

struct UPhysicsAsset {
	TArray<int32_t> BoundsBodies; // 0x30
	TArray<USkeletalBodySetup*> SkeletalBodySetups; // 0x40
	TArray<UPhysicsConstraintTemplate*> ConstraintSetup; // 0x50
	FSolverIterations SolverIterations; // 0x60
	char bNotForDedicatedServer : 1; // 0x7c
	UThumbnailInfo* ThumbnailInfo; // 0x120
	TArray<UBodySetup*> BodySetup; // 0x128
};

struct UCrowTriggerCommandGaugeCircle {
	UCrowInteractionProgressCircleWidget* GaugeWidget; // 0x128
};

struct UCrowVehicleWidgetStatus {
	UTextBlock* TXT_Name; // 0x350
	UTextBlock* TXT_Speed; // 0x358
	UTextBlock* TXT_Altitude; // 0x360
};

struct AEmitterCameraLensEffectBase {
	UParticleSystem* PS_CameraEffect; // 0x270
	UParticleSystem* PS_CameraEffectNonExtremeContent; // 0x278
	APlayerCameraManager* BaseCamera; // 0x280
	FTransform RelativeTransform; // 0x290
	float BaseFOV; // 0x2c0
	char bAllowMultipleInstances : 1; // 0x2c4
	char bResetWhenRetriggered : 1; // 0x2c4
	TArray<AEmitterCameraLensEffectBase*> EmittersToTreatAsSame; // 0x2c8
	float DistFromCamera; // 0x2d8
};

struct ACrowItemAmmo {
	FCrowAmmoTableRow ItemTable; // 0x310
	bool UseDefaultSettings; // 0x538
	uint32_t AmmoIndex; // 0x53c
	uint32_t AmmoCount; // 0x540
};

struct UCrowWidgetManager {
	TArray<UCrowWidgetBase*> WidgetClassList; // 0x28
	TMap<FClassMapKey, UCrowWeaponCrosshairBase*> CrosshairMap; // 0x38
	UUserWidget* CurrentFocusWidget; // 0x88
	TMap<FClassMapKey, UCrowWeaponZoomWidget*> ZoomWidgetMap; // 0x90
	TArray<FCrowMessageBoxInfo> MessageBoxInfoQueue; // 0xe0
	UCrowMessageBoxWidget* MessageBoxWidget; // 0xf0
	UCrowLoadingBoxWidget* LoadingBoxWidget; // 0xf8
	UCrowSystemMessageBoxWidget* SystemMessageBoxWidget; // 0x100
	UCrowSystemMessageBoxWidget* SystemMessageBoxBottomWidget; // 0x108
	UCrowMultiSystemMessageBoxWidget* MultiSystemMessageBoxWidget; // 0x110
	UCrowMatchingTimerWidget* MatchingTimerWidget; // 0x118
	UCrowFullScreenWidgetBase* CurrentFullScreenWidget; // 0x120
	UCrowSettingsWidget* CrowSettingsWidget; // 0x128
	UCrowMovieWidget* CrowMovieWidget; // 0x130
	FTimerHandle WidgetInteractionTimer; // 0x148
	UCrowMessageBoxWidget* CrowMessageBoxWidgetClass; // 0x150
	UCrowLoadingBoxWidget* CrowLoadingBoxWidgetClass; // 0x158
	UCrowSystemMessageBoxWidget* CrowSysteMessageBoxWidgetClass; // 0x160
	UCrowSystemMessageBoxWidget* CrowSysteMessageBoxBottomWidgetClass; // 0x168
	UCrowMultiSystemMessageBoxWidget* CrowMultiSystemMessageBoxWidgetClass; // 0x170
	UCrowMatchingTimerWidget* CrowMatchingTimerWidgetClass; // 0x178
	UCrowSettingsWidget* CrowSettingsWidgetClass; // 0x180
	UCrowMovieWidget* CrowMovieWidgetClass; // 0x188
	UAkAudioEvent* Default_AudioEvent_Clicked; // 0x190
	UAkAudioEvent* Default_AudioEvent_Hovered; // 0x198
};

struct AAtmosphericFog {
	UAtmosphericFogComponent* AtmosphericFogComponent; // 0x220
};

struct UEditableGameplayTagQueryExpression_AllTagsMatch {
	FGameplayTagContainer Tags; // 0x28
};

struct UParticleModuleSpawnBase {
	char bProcessSpawnRate : 1; // 0x30
	char bProcessBurstList : 1; // 0x30
};

struct USoundNodeConcatenator {
	TArray<float> InputVolume; // 0x48
};

struct UCrowWorldSplineMeshComponent {
	ECrowWorldSplineMeshAxis Axis; // 0x568
	int32_t PointIndex; // 0x56c
	int32_t MeshIndex; // 0x570
	bool IsStartMesh; // 0x574
	bool IsEndMesh; // 0x575
	float DistanceAlongSpline; // 0x578
};

struct UBTTask_SetTagCooldown {
	FGameplayTag CooldownTag; // 0x70
	bool bAddToExistingDuration; // 0x78
	float CooldownDuration; // 0x7c
};

struct UCrowWorldSyncServerWorker {
	UWorld* World; // 0x28
	UCrowWorldMapConfig* MapConfig; // 0x30
	UCrowWorldDataCollectionAsset* WorldDataAsset; // 0x38
	ACrowWorldReplicationActor* ReplicationActor; // 0x40
	UCrowWorldFoliage* WorldFoliage; // 0x48
	TArray<FCrowWorldGrid> WorldGridArray; // 0x50
	FCrowWorldReplicationLandmark LandmarkData; // 0x60
	TMap<uint32_t, FCrowWorldReplicationCluster> Clusters; // 0x78
	TMap<uint32_t, FCrowWorldReplicationSector> Sectors; // 0xc8
	TMap<uint32_t, ACrowWorldActor*> ActorInstances; // 0x118
	TMap<ACrowWorldReplicationController*, FCrowWorldSyncServerPlayerState> SyncPlayerStates; // 0x168
	TMap<uint32_t, FCrowWorldSyncServerControllerContainer> SectorStates; // 0x1b8
	TMap<uint32_t, FCrowWorldSyncServerControllerContainer> ClusterStates; // 0x208
	TArray<uint32_t> TempGridIndexes; // 0x258
	TArray<ACrowWorldReplicationController*> TempArrayControllers; // 0x268
	FCrowWorldDestructionSyncCache DestructionSyncCache; // 0x278
	FCrowWorldDestructionLink DestructionLink; // 0x2e0
};

struct UCrowDamageIndicatorWidget {
	UCanvasPanel* CP_IndicatorList; // 0x348
	UCrowDamageIndicatorItemWidget* IndicatorItem; // 0x350
	float DisplayTime; // 0x358
	float FadeOutTime; // 0x35c
};

struct UCrowGetItemDescWidget {
	UTextBlock* TB_GetDesc; // 0x348
	UTextBlock* TB_Item_Name; // 0x350
	AActor* ItemActor; // 0x358
};

struct UCrowPlayerWeaponListItemWidget {
	UTextBlock* TB_SlotNumber; // 0x1a48
	UTextBlock* TB_WeaponName; // 0x1a50
	UCanvasPanel* CP_WeaponPanel; // 0x1a58
	UCanvasPanel* CP_Unequipped; // 0x1a60
	UCanvasPanel* CP_Equip; // 0x1a68
	UImage* IMG_NumBack; // 0x1a70
	UImage* IMG_BackGround; // 0x1a78
	UImage* IMG_Infinite; // 0x1a80
	UImage* IMG_Cover_Empty; // 0x1a88
	UCrowInputMappingWidget* RTB_Key; // 0x1a90
	UProgressBar* PB_WeaponGauge; // 0x1a98
	UPaperSprite* HotKeySprite; // 0x1aa0
	UWidgetAnimation* ChoseAnimation; // 0x1aa8
	FLinearColor BlackColor; // 0x1ab0
	FLinearColor WhiteColor; // 0x1ac0
	ACrowWeaponBase* CurrentWeapon; // 0x1ad0
	bool IsSelectWeapon; // 0x1ad8
	bool IsInfinteAmmo; // 0x1ad9
};

struct ULandscapeMeshCollisionComponent {
	FGuid MeshGuid; // 0x520
};

struct UMaterialExpressionClamp {
	FExpressionInput Input; // 0x40
	FExpressionInput Min; // 0x54
	FExpressionInput Max; // 0x68
	EClampMode ClampMode; // 0x7c
	float MinDefault; // 0x80
	float MaxDefault; // 0x84
};

struct UCrowSelectLoadoutBoxWidget {
	UCrowButton* BT_EscBack; // 0x368
	UCrowButton* BT_SelectComplete; // 0x370
	UGridPanel* GP_WeaponList; // 0x378
	UTextBlock* TB_RemainTime_Value; // 0x380
	UTextBlock* TB_UseCount_Value; // 0x388
	TArray<UCrowSquadLoadoutSlotWeaponWidget*> WeaponMainWidgetArray; // 0x390
	ACrowLoadoutBoxActor* TargetActor; // 0x3a0
};

struct ACrowWaterInitializeActor {
	UPhysicalMaterial* WaterPhysicalMaterial; // 0x220
	FName WaterPlaneTag; // 0x228
};

struct UMaterialExpressionArctangent2Fast {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct ANavigationData {
	UPrimitiveComponent* RenderingComp; // 0x228
	FNavDataConfig NavDataConfig; // 0x230
	char bEnableDrawing : 1; // 0x2a8
	char bForceRebuildOnLoad : 1; // 0x2a8
	char bAutoDestroyWhenNoNavigation : 1; // 0x2a8
	char bCanBeMainNavData : 1; // 0x2a8
	char bCanSpawnOnRebuild : 1; // 0x2a8
	char bRebuildAtRuntime : 1; // 0x2a8
	ERuntimeGenerationType RuntimeGeneration; // 0x2ac
	float ObservedPathsTickInterval; // 0x2b0
	uint32_t DataVersion; // 0x2b4
	TArray<FSupportedAreaData> SupportedAreas; // 0x3c0
};

struct UPlatformMediaSource {
	UMediaSource* MediaSource; // 0x80
};

struct UCrowGameInstance {
	float DeathZoneLifeTime; // 0x1a8
	UUserWidget* DeathZoneWidgetClass; // 0x1b0
	FPostProcessSettings DeathZonePostProcess; // 0x1c0
	TArray<FString> EquipmentWeaponsIndex; // 0x710
	FText NickName; // 0x720
	FName DedicateAddress; // 0x738
	UCrowWidgetManager* CrowWidgetManagerClass; // 0x740
	TArray<TSoftObjectPtr<UObject>> PackagingAssetsList; // 0x748
	UCrowPackagingAssets* StringTableClass; // 0x758
	UUserWidget* LoadingWidget; // 0x760
	UCrowPhysicalMatSound* PhysicalMatSoundClass; // 0x768
	UCrowWWiseSoundEvents* WWiseSoundEventsClass; // 0x770
	UCrowDamageEffect* DamageEffectClass; // 0x778
	ACrowSpectatorIconActor* SpectatorIconActorClass; // 0x780
	UCrowVehicleManager* CrowVehicleManagerClass; // 0x788
	UCrowSprayManager* CrowSprayManagerClass; // 0x790
	UCrowPlatformSteam* CrowSteamManagerClass; // 0x798
	UMaterialParameterCollection* MPCWeaponFOV; // 0x7a0
	UCrowInputManager* InputManager; // 0x7a8
	UCrowWidgetManager* WidgetManager; // 0x7b0
	UCrowClientManager* ClientManager; // 0x7b8
	UCrowFxManager* FXManager; // 0x7c0
	UCrowDistanceBasedFXManager* DistanceBasedFXManager; // 0x7c8
	UCrowDecalManager* DecalManager; // 0x7d0
	UCrowNetworkClient* NetworkClient; // 0x7d8
	UCrowNetworkDediServer* NetworkDediServer; // 0x7e0
	UCrowSceneManager* SceneManager; // 0x7e8
	UCrowPingManager* PingManager; // 0x7f0
	UCrowPhysicalMatSound* PhysicalMatSound; // 0x7f8
	UCrowWWiseSoundEvents* WWiseSoundEvents; // 0x800
	UCrowChatManager* ChatManager; // 0x808
	UCrowSlangManager* SlangManager; // 0x810
	UCrowVivoxManager* VivoxManager; // 0x818
	UCrowPlatformSteam* SteamManager; // 0x820
	UCrowDamageEffect* DamageEffect; // 0x828
	UCrowDediLogIPC* DediLogIPC; // 0x830
	UCrowLoadingManager* LoadingManager; // 0x838
	UCrowLibraryTime* LibraryTime; // 0x840
	UCrowVehicleManager* VehicleManager; // 0x848
	UCrowSprayManager* SprayManager; // 0x850
	UCrowReplayManager* ReplayManager; // 0x858
	UCrowClanManager* ClanManager; // 0x860
	UCrowLobbyRecordManager* LobbyRecordManager; // 0x868
	UCrowMailManager* MailManager; // 0x870
	UCrowMainMedalManager* MainMedalManager; // 0x878
	UCrowCustomModeManager* CustomModeManager; // 0x880
	UCrowWebEventManager* NoticeManager; // 0x888
	UCrowModCategoryTableManager* ModCategoryTableManager; // 0x890
	UCrowDebugLogger* DebugLogger; // 0x898
	TWeakObjectPtr<ACrowSwitchingActor> SwitchingActor; // 0x8a0
	TWeakObjectPtr<ACrowWorldProperty> WorldProperty; // 0x8a8
	TWeakObjectPtr<ACrowSceneCaptureOwner> SceneCaptureOwner; // 0x8b0
	UAntiHackModule* AntiHackModule; // 0x8b8
	TMap<FClassMapKey, UObject*> SingleClasses; // 0x8c0
	ULocalPlayer* PIE_LocalPlayer; // 0x910
};

struct UBTDecorator_DoesPathExist {
	FBlackboardKeySelector BlackboardKeyA; // 0x68
	FBlackboardKeySelector BlackboardKeyB; // 0x90
	char bUseSelf : 1; // 0xb8
	EPathExistanceQueryType PathQueryType; // 0xbc
	UNavigationQueryFilter* FilterClass; // 0xc0
};

struct ALevelVariantSetsActor {
	FSoftObjectPath LevelVariantSets; // 0x220
};

struct UCrowPlayerLevelRewardTableManager {
	TMap<int32_t, FCrowPlayerLevelRewardTableRow> UnlockItemData; // 0x28
};

struct UGraphNodeContextMenuContext {
	UBlueprint* Blueprint; // 0x28
	UEdGraph* Graph; // 0x30
	UEdGraphNode* Node; // 0x38
	bool bIsDebugging; // 0x48
};

struct ABP_Grenade_AN-M14Ammo_C {
	USphereComponent* Sphere; // 0x1a00
	USkeletalMeshComponent* SK_G67_02; // 0x1a08
	UParticleSystemComponent* DynamicRicochet_Trail_Generic_thin; // 0x1a10
};

struct UCollisionProfile {
	TArray<FCollisionResponseTemplate> Profiles; // 0x38
	TArray<FCustomChannelSetup> DefaultChannelResponses; // 0x48
	TArray<FCustomProfile> EditProfiles; // 0x58
	TArray<FRedirector> ProfileRedirects; // 0x68
	TArray<FRedirector> CollisionChannelRedirects; // 0x78
};

struct UParticleModuleLocation_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UProceduralFoliageSpawner {
	int32_t RandomSeed; // 0x28
	float TileSize; // 0x2c
	int32_t NumUniqueTiles; // 0x30
	float MinimumQuadTreeSize; // 0x34
	TArray<FFoliageTypeObject> FoliageTypes; // 0x40
};

struct UCrowVehicleFreeSightControl {
	UCrowVehicleParam* VehicleParam; // 0xc0
};

struct UCrowVehicleWidgetSeatCell {
	UTextBlock* TXT_Squad_ID; // 0x350
	UCrowSeatSquadIconWidget* WB_SeatSquadIcon; // 0x358
};

struct UDatasmithSpotLightComponentTemplate {
	float InnerConeAngle; // 0x30
	float OuterConeAngle; // 0x34
};

struct UCrowCustomizeEtcDescWidget {
	UCrowCustomSprayItemListWidget* WB_Cutomize_SprayList; // 0x348
	UCrowRadialMenuSprayWidget* WB_Customize_SprayRadialMenu; // 0x350
	UCrowTabOutfitWidget* WB_Customize_TopMenu; // 0x358
	UCrowButton* BT_AddShoppingBag; // 0x360
	UCrowButton* BT_Buy; // 0x368
	UCrowShoppingBagWidget* WB_Shop_Popup_ExclusivePurchase_Quick; // 0x370
	UHorizontalBox* HB_CustomizeSpray_Shop_Button; // 0x378
	bool IsOwnList; // 0x384
};

struct UMovieSceneSequencePlayer {
	FMulticastInlineDelegate OnPlay; // 0x410
	FMulticastInlineDelegate OnPlayReverse; // 0x420
	FMulticastInlineDelegate OnStop; // 0x430
	FMulticastInlineDelegate OnPause; // 0x440
	FMulticastInlineDelegate OnFinished; // 0x450
	EMovieScenePlayerStatus Status; // 0x460
	char bReversePlayback : 1; // 0x464
	UMovieSceneSequence* Sequence; // 0x468
	FFrameNumber StartTime; // 0x470
	int32_t DurationFrames; // 0x474
	float DurationSubFrames; // 0x478
	int32_t CurrentNumLoops; // 0x47c
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x480
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x498
	FMovieSceneSequenceReplProperties NetSyncProps; // 0x5e8
	TScriptInterface<IMovieScenePlaybackClient> PlaybackClient; // 0x5f8
	UMovieSceneSequenceTickManager* TickManager; // 0x608
};

struct UGizmoComponentAxisSource {
	USceneComponent* Component; // 0x30
	int32_t AxisIndex; // 0x38
	bool bLocalAxes; // 0x3c
};

struct ACrowBuildingEditorPartsActor {
	TArray<FCrowBuildingEditorSubMesh> SubMeshList; // 0x228
	UStaticMeshComponent* MainMeshComponent; // 0x238
};

struct UCrowRecordScoreTotalRankWidget {
	UCrowDropDownWidget* WB_Record_DropDown; // 0x348
	UCrowWidgetImage* IMG_Class; // 0x350
	UTextBlock* TB_Class; // 0x358
	UTextBlock* TB_SeasonLv; // 0x360
	UTextBlock* TB_RankLv; // 0x368
	UTextBlock* TB_PlayTime; // 0x370
	UTextBlock* TB_TotalPlayCount; // 0x378
	UTextBlock* TB_ConquestWinCount; // 0x380
	UTextBlock* TB_ConquestLoseCount; // 0x388
	UTextBlock* TB_SquadBestRank; // 0x390
	UTextBlock* TB_TotalKillCount; // 0x398
	UTextBlock* TB_TotalDeathCount; // 0x3a0
	UTextBlock* TB_Rate; // 0x3a8
	UTextBlock* TB_ExpPerMinute; // 0x3b0
	UTextBlock* TB_FavoriteWeaponKillCount; // 0x3b8
	UCrowWidgetImage* IMG_Favoriteweapon_Icon; // 0x3c0
	FDateTime CurrentDateTime; // 0x3c8
	FString UserNickName; // 0x3d0
	int32_t SelectedRankingDateInfoIndex; // 0x3e0
};

struct UParticleModuleEventReceiverKillParticles {
	char bStopSpawning : 1; // 0x40
};

struct UMaterialExpressionTangentOutput {
	FExpressionInput Input; // 0x40
};

struct UBuoyancyComponent {
	TArray<FSphericalPontoon> Pontoons; // 0xb0
	FMulticastInlineDelegate OnEnteredWaterDelegate; // 0xc0
	FMulticastInlineDelegate OnExitedWaterDelegate; // 0xd0
	FBuoyancyData BuoyancyData; // 0xe0
	TArray<AWaterBody*> CurrentWaterBodies; // 0x130
	UPrimitiveComponent* SimulatingComponent; // 0x140
};

struct UParticleModuleSpawn {
	FRawDistributionFloat Rate; // 0x38
	FRawDistributionFloat RateScale; // 0x68
	EParticleBurstMethod ParticleBurstMethod; // 0x98
	TArray<FParticleBurst> BurstList; // 0xa0
	FRawDistributionFloat BurstScale; // 0xb0
	char bApplyGlobalSpawnRateScale : 1; // 0xe0
};

struct UMultiLineEditableTextBox {
	FText Text; // 0x128
	FText HintText; // 0x140
	FDelegate HintTextDelegate; // 0x158
	FEditableTextBoxStyle WidgetStyle; // 0x168
	FTextBlockStyle TextStyle; // 0x960
	bool bIsReadOnly; // 0xbd0
	bool AllowContextMenu; // 0xbd1
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0xbd2
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xbd3
	USlateWidgetStyleAsset* Style; // 0xbd8
	FSlateFontInfo Font; // 0xbe0
	FLinearColor ForegroundColor; // 0xc38
	FLinearColor BackgroundColor; // 0xc48
	FLinearColor ReadOnlyForegroundColor; // 0xc58
	FMulticastInlineDelegate OnTextChanged; // 0xc68
	FMulticastInlineDelegate OnTextCommitted; // 0xc78
};

struct UCrowWorldIconWidgetArea {
	UImage* IMG_Area; // 0x3c8
};

struct UCrowShopTableManager {
	TMap<int32_t, FCrowShopTableRow> ShopTableMap; // 0x28
};

struct UCrowDropDownSlotWidget {
	UTextBlock* TBTitle; // 0x358
	UCrowButton* BTDropdown; // 0x360
	int32_t Index; // 0x368
};

struct ACrowProjectileCompositionC {
	bool bIsInstalled; // 0x18d0
	FRotator InstalledRotation; // 0x18d4
	bool bPlayBeepSound; // 0x18e0
	float TimeToExplosion; // 0x18e4
	float TimeToPlayBeepSound; // 0x18e8
	UAkAudioEvent* BeepSound; // 0x18f0
	float DistanceToAttachSurface; // 0x18f8
	float DetachImpulse; // 0x18fc
	float DetachAngularImpulseInRadian; // 0x1900
	ACrowBuildingActor* AttachedBuildingActor; // 0x1908
	int16_t AttachedPartsIndexInLayout; // 0x1910
	APawn* InstalledPawn; // 0x1918
	APlayerController* InstalledController; // 0x1920
	FVector CachedVelocity; // 0x1928
	UCrowIndicatorCompositionC* IndiWidget; // 0x1938
	UAkComponent* AkComponent; // 0x1940
	UCrowWorldSMC* AttachParentWorldSMC; // 0x1948
};

struct UAISenseConfig_Damage {
	UAISense_Damage* Implementation; // 0x48
};

struct ARadialForceActor {
	URadialForceComponent* ForceComponent; // 0x220
};

struct UMovieSceneGeometryCollectionTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
};

struct UAkDurationCallbackInfo {
	float Duration; // 0x38
	float EstimatedDuration; // 0x3c
	int32_t AudioNodeID; // 0x40
	int32_t MediaID; // 0x44
	bool bStreaming; // 0x48
};

struct ABrush {
	EBrushType BrushType; // 0x220
	FColor BrushColor; // 0x224
	int32_t PolyFlags; // 0x228
	char bColored : 1; // 0x22c
	char bSolidWhenSelected : 1; // 0x22c
	char bPlaceableFromClassBrowser : 1; // 0x22c
	char bNotForClientOrServer : 1; // 0x22c
	UModel* Brush; // 0x230
	UBrushComponent* BrushComponent; // 0x238
	char bInManipulation : 1; // 0x240
	TArray<FGeomSelection> SavedSelections; // 0x248
};

struct UCrowSquadNotiWidget {
	UWidgetAnimation* AniShow; // 0x348
	UWidgetAnimation* AniLoop; // 0x350
	UWidgetAnimation* AniHide; // 0x358
	UCrowSquadNotiWidget* NextNotiWidget; // 0x360
};

struct UCrowWorldDamageType {
	ECrowWorldDamageType DamageSourceType; // 0x40
};

struct UEditableGameplayTagQueryExpression_AnyExprMatch {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UWB_SettingsPopup_C {
	UImage* Image_50; // 0x380
	UImage* IMG_BG; // 0x388
	UImage* IMG_Cancel_BackGround; // 0x390
	UImage* IMG_Confirm_BackGround; // 0x398
	UImage* IMG_Exit; // 0x3a0
	UTextBlock* TB_Cancel; // 0x3a8
	UTextBlock* TB_Confirm; // 0x3b0
};

struct UNetConnection {
	TArray<UChildConnection*> Children; // 0x48
	UNetDriver* Driver; // 0x58
	UPackageMap* PackageMapClass; // 0x60
	UPackageMap* PackageMap; // 0x68
	TArray<UChannel*> OpenChannels; // 0x70
	TArray<AActor*> SentTemporaries; // 0x80
	AActor* ViewTarget; // 0x90
	AActor* OwningActor; // 0x98
	int32_t MaxPacket; // 0xa0
	char InternalAck : 1; // 0xa4
	FUniqueNetIdRepl playerId; // 0x160
	double LastReceiveTime; // 0x1d0
	TArray<UChannel*> ChannelsToTick; // 0x1518
};

struct UNiagaraDataInterfaceGrid2D {
	int32_t NumCellsX; // 0xd8
	int32_t NumCellsY; // 0xdc
	int32_t NumCellsMaxAxis; // 0xe0
	int32_t NumAttributes; // 0xe4
	bool SetGridFromMaxAxis; // 0xe8
	FVector2D WorldBBoxSize; // 0xec
};

struct UNiagaraDataInterfaceStaticMesh {
	ENDIStaticMesh_SourceMode SourceMode; // 0x38
	UStaticMesh* DefaultMesh; // 0x40
	AActor* Source; // 0x48
	UStaticMeshComponent* SourceComponent; // 0x50
	FNDIStaticMeshSectionFilter SectionFilter; // 0x58
	bool bUsePhysicsBodyVelocity; // 0x68
	TArray<FName> FilteredSockets; // 0x70
};

struct UBlackboardKeyType_String {
	FString StringValue; // 0x30
};

struct UARGeoAnchorComponent {
	FARGeoAnchorUpdatePayload ReplicatedPayload; // 0x280
};

struct UARTrackedImage {
	UARCandidateImage* DetectedImage; // 0xf8
	FVector2D EstimatedSize; // 0x100
};

struct UTransformInputsToolProperties {
	bool bShowTransformUI; // 0x60
	bool bSnapToWorldGrid; // 0x61
};

struct UCrowBannerWidget {
	UUserWidget* ChildClass; // 0x348
	UUserWidget* IndicatorClass; // 0x350
	UScrollBox* ScrollBoxWidget; // 0x358
	UHorizontalBox* Indicator; // 0x360
};

struct ACrowAirPlaneRespawnSplineActor {
	float CameraAttachDist; // 0x220
	float CameraAttachHeight; // 0x224
	float DroppingPossibleDist; // 0x228
	float ForcedDroppingDist; // 0x22c
	USplineComponent* SplineComponent; // 0x230
	float RandomAngle; // 0x238
	FCrowGameIconDisplayInfo IconDisplayInfoRoute; // 0x240
	UCrowWorldMapIcon* IconRoute; // 0x2c8
};

struct USkeletalMeshSimulationComponent {
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xb8
	AChaosSolverActor* ChaosSolverActor; // 0xc0
	UPhysicsAsset* OverridePhysicsAsset; // 0xc8
	bool bSimulating; // 0xd0
	bool bNotifyCollisions; // 0xd1
	EObjectStateTypeEnum ObjectType; // 0xd2
	float Density; // 0xd4
	float MinMass; // 0xd8
	float MaxMass; // 0xdc
	ECollisionTypeEnum CollisionType; // 0xe0
	float ImplicitShapeParticlesPerUnitArea; // 0xe4
	int32_t ImplicitShapeMinNumParticles; // 0xe8
	int32_t ImplicitShapeMaxNumParticles; // 0xec
	int32_t MinLevelSetResolution; // 0xf0
	int32_t MaxLevelSetResolution; // 0xf4
	int32_t CollisionGroup; // 0xf8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xfc
	FVector InitialLinearVelocity; // 0x100
	FVector InitialAngularVelocity; // 0x10c
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x118
};

struct UWmfMediaSettings {
	bool AllowNonStandardCodecs; // 0x28
	bool LowLatency; // 0x29
	bool NativeAudioOut; // 0x2a
	bool HardwareAcceleratedVideoDecoding; // 0x2b
};

struct UCrowResultBombMissionWidget {
	UAkAudioEvent* AudioEvent_ExpCounting; // 0x368
	UAkAudioEvent* AudioEvent_ExpCountingEnd; // 0x370
	UAkAudioEvent* AudioEvent_ExpProgress; // 0x378
	UAkAudioEvent* AudioEvent_ExpProgressEnd; // 0x380
	UCrowButton* BTExitWidget; // 0x388
	float ExpCountingTime; // 0x390
	UWidgetAnimation* AniEXP; // 0x398
	UCanvasPanel* CPExpList; // 0x3a0
	UTextBlock* TBMoneyEXPValue; // 0x3a8
	UTextBlock* TBResourceEXPValue; // 0x3b0
	UTextBlock* TBMissionEXPValue; // 0x3b8
	UTextBlock* TBBattleEXPValue; // 0x3c0
	UTextBlock* TBRankEXPValue; // 0x3c8
	bool StartEventMoneyEXP; // 0x3d0
	bool StartEventResourceEXP; // 0x3d1
	bool StartEventMissionEXP; // 0x3d2
	bool StartEventBattleEXP; // 0x3d3
	bool StartEventRankEXP; // 0x3d4
	UWidgetAnimation* AniAllEXP; // 0x3d8
	UWidgetAnimation* AniAllEXPLevelUP; // 0x3e0
	UVerticalBox* VBLevelUp; // 0x3e8
	UImage* IMGIconRank; // 0x3f0
	UImage* IMGIconRanklevelup; // 0x3f8
	UTextBlock* TBLevelExp; // 0x400
	UTextBlock* TBClassName; // 0x408
	UTextBlock* TBClassRankName; // 0x410
	UTextBlock* TBTotalEXPValue; // 0x418
	UCrowProgressBar* PBExpProgressbar; // 0x420
	bool StartEventTotalEXP; // 0x428
	bool StartEventExpProgressbar; // 0x429
	float NormalizeTime; // 0x42c
	float NormalizeTimeProgressbar; // 0x430
	uint32_t PreSaveLevel; // 0x434
	bool bIsLevelUp; // 0x438
	UCanvasPanel* CPResult; // 0x440
	UCrowBombMissionScoreBoardWidget* ResultScoreBoardWidget; // 0x448
	ACrowPlayerStateBombMission* PlayerStateBombMission; // 0x450
	bool StartProgressbarSound; // 0x458
	float AniEllipseTime; // 0x45c
};

struct ULastActorInfo {
	AActor* Actor; // 0x38
	UStaticMesh* StaticMesh; // 0x40
	UProceduralShapeToolProperties* ShapeSettings; // 0x48
	UNewMeshMaterialProperties* MaterialProperties; // 0x50
};

struct UCrowBMStartMatchWidget {
	UTextBlock* TBMapName; // 0x348
	UTextBlock* TBRound; // 0x350
	UTextBlock* TBTeamPosition; // 0x358
	UTextBlock* TBMyTeamName; // 0x360
	UImage* IMGMyTeamIcon; // 0x368
	UImage* IMGMyTeamBg00; // 0x370
	UImage* IMGMyTeamBg01; // 0x378
	UImage* IMGMyTeamBg02; // 0x380
	UImage* IMGMyTeamEffect00; // 0x388
	UImage* IMGMyTeamEffect01; // 0x390
	UTextBlock* TBEnemyTeamName; // 0x398
	UImage* IMGEnemyTeamIcon; // 0x3a0
	UImage* IMGEnemyTeamBg; // 0x3a8
	UWidgetAnimation* AniStart; // 0x3b0
	UWidgetAnimation* AniStartMatchPoint; // 0x3b8
	UTexture2D* AttackerTeamIcon; // 0x3c0
	UTexture2D* DefencerTeamIcon; // 0x3c8
	FLinearColor RedTeamBg00Color; // 0x3d0
	FLinearColor RedTeamBg01Color; // 0x3e0
	FLinearColor RedTeamBg02Color; // 0x3f0
	FLinearColor RedTeamEffect00Color; // 0x400
	FLinearColor RedTeamEffect01Color; // 0x410
	FLinearColor BlueTeamBg00Color; // 0x420
	FLinearColor BlueTeamBg01Color; // 0x430
	FLinearColor BlueTeamBg02Color; // 0x440
	FLinearColor BlueTeamEffect00Color; // 0x450
	FLinearColor BlueTeamEffect01Color; // 0x460
	FTimerHandle WaitRPCTeamInfoTimerHandle; // 0x470
};

struct ACrowProjectileClaymoreMine {
	USphereComponent* DetectionRangeComponent; // 0x18d0
	FTransform ClaymoreMineTrans; // 0x18e0
	ECrowClaymoreMineState State; // 0x1910
	ECrowClaymoreMineState LocalState; // 0x1911
	APawn* InstalledPawn; // 0x1918
	AController* InstalledPawnController; // 0x1920
	FString SelfDestructEffectKey; // 0x1928
	FWeaponDamageSettings SelfDestructDamageSetting; // 0x1938
	UAkAudioEvent* DetectSound; // 0x1960
	UAkAudioEvent* ActiveSound; // 0x1968
	float OperationWaitingTime; // 0x1970
	float ActivityTimeLimit; // 0x1974
	float RangeAngle; // 0x1978
	float RangeDistance; // 0x197c
	float TimeFromDetectionToExplosion; // 0x1980
	float DetectionRate; // 0x1984
	float CurrentTime; // 0x1988
	float CurrentTimeFromDetectionToExplosion; // 0x198c
	TArray<APawn*> PawnInDetectionRangeList; // 0x1990
	FTimerHandle ServerDestroyTimerHandle; // 0x19a0
	UCrowIndicatorClaymoreMine* IndiWidget; // 0x19a8
	UCrowLaserBeamComponent* LaserBeamLeft; // 0x19b0
	UCrowLaserBeamComponent* LaserBeamRight; // 0x19b8
	bool bNeedPlayInstallSound; // 0x19c0
	UCrowWorldSMC* AttachParentWorldSMC; // 0x19c8
};

struct UMovieSceneCameraShakeSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe8
	UMatineeCameraShake* ShakeClass; // 0x108
	float PlayScale; // 0x110
	ECameraShakePlaySpace PlaySpace; // 0x114
	FRotator UserDefinedPlaySpace; // 0x118
};

struct UParticleModuleLocationSkelVertSurface {
	ELocationSkelVertSurfaceSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	char bUpdatePositionEachFrame : 1; // 0x40
	char bOrientMeshEmitters : 1; // 0x40
	char bInheritBoneVelocity : 1; // 0x40
	float InheritVelocityScale; // 0x44
	FName SkelMeshActorParamName; // 0x48
	TArray<FName> ValidAssociatedBones; // 0x50
	char bEnforceNormalCheck : 1; // 0x60
	FVector NormalToCompare; // 0x64
	float NormalCheckToleranceDegrees; // 0x70
	float NormalCheckTolerance; // 0x74
	TArray<int32_t> ValidMaterialIndices; // 0x78
	char bInheritVertexColor : 1; // 0x88
	char bInheritUV : 1; // 0x88
	uint32_t InheritUVChannel; // 0x8c
};

struct UNiagaraDataInterfaceRWBase {
	TSet<int32_t> OutputShaderStages; // 0x38
	TSet<int32_t> IterationShaderStages; // 0x88
};

struct UNiagaraParameterCollection {
	FName Namespace; // 0x28
	TArray<FNiagaraVariable> Parameters; // 0x30
	UMaterialParameterCollection* SourceMaterialCollection; // 0x40
	UNiagaraParameterCollectionInstance* DefaultInstance; // 0x48
	FGuid CompileId; // 0x50
};

struct UCrowObjectBase {
	UCrowComponentContainer* OwnerContainer; // 0x28
	AActor* CrowComponentOwnerActor; // 0x30
};

struct UAkSoundAUD {
	bool IsSoundOccluder; // 0x28
	int32_t OcclusionPercent; // 0x2c
};

struct UUPSEnemyActionsPreset {
	TArray<FEnemyActionSelector> EnemyActions; // 0x30
};

struct AWheeledVehicle {
	USkeletalMeshComponent* Mesh; // 0x280
	UWheeledVehicleMovementComponent* VehicleMovement; // 0x288
};

struct UInputRouter {
	bool bAutoInvalidateOnHover; // 0x28
	bool bAutoInvalidateOnCapture; // 0x29
	UInputBehaviorSet* ActiveInputBehaviors; // 0x38
};

struct ACrowGameModeBase {
	uint32_t BattleTimeSec; // 0x318
	bool IsUseGameStartSystem; // 0x31c
	char CountdownStartUserCount; // 0x31d
	float CountdownWaitTime; // 0x320
	float PlayCountdownTime; // 0x324
	FCrowRespawnTimeInfo RespawnTimeInfo; // 0x328
	float RespawnWaitTime_WaitUser; // 0x33c
	float BodyLifeTime; // 0x340
	FCrowActiveSpawnerCount WaitUserSpawnerCount; // 0x344
	FCrowActiveSpawnerCount MatchSpawnerCount; // 0x368
	float SkydivingRespawnZ; // 0x38c
	bool IsCanDying; // 0x390
	bool IsDeleteWorldItem; // 0x391
	int32_t SquadRespawnCountLimit; // 0x394
	uint32_t SceneIndex; // 0x398
	TArray<FCrowTestWeapon> WeaponArray; // 0x3a0
	TArray<FCrowItemData> ItemArray; // 0x3b0
	TArray<FCrowItemData> ClothesArray; // 0x3c0
	int32_t MaxSquadPlayers; // 0x3d0
	bool UseLoadOutTest; // 0x3d4
	bool UseSquadLoadOutTest; // 0x3d5
	bool UseTestFemale; // 0x3d6
	char FaceIndex; // 0x3d7
	char HairColorIndex; // 0x3d8
	char BeardColorIndex; // 0x3d9
	uint32_t FaceTattooIndex; // 0x3dc
	uint32_t ArmTattooIndex; // 0x3e0
	uint32_t DefaultBattleMoneyCount; // 0x3e4
	bool IsShareAmmo; // 0x3e8
	ECrowCameraLimitMode CameraLimitMode; // 0x3e9
	TMap<uint64_t, ACrowPlayerControllerBase*> PlayerControllerMap; // 0x3f0
	TArray<uint64_t> ObserverArray; // 0x440
	bool bUseObserverMode; // 0x450
	bool bFirstPlayerObserver; // 0x451
	FTimerHandle TimerHandle_BattleTimer; // 0x458
	ACrowGameStateBase* CrowGameStateBase; // 0x460
	UCrowDediLogIPC* DediLogIPC; // 0x468
};

struct UCrowHappyTimeTabWidget {
	UCrowButton* BT_Arrow_HourL; // 0x348
	UCrowButton* BT_Arrow_HourR; // 0x350
	UCrowButton* BT_Arrow_MinuteL; // 0x358
	UCrowButton* BT_Arrow_MinuteR; // 0x360
	UTextBlock* TB_HourText; // 0x368
	UTextBlock* TB_MinuteText; // 0x370
	UCrowButton* WB_BT_OK; // 0x378
};

struct UMotoSynthPreset {
	FMotoSynthRuntimeSettings Settings; // 0x28
};

struct UNiagaraDataInterfaceGrid3D {
	FIntVector NumCells; // 0xd8
	float CellSize; // 0xe4
	int32_t NumCellsMaxAxis; // 0xe8
	ESetResolutionMethod SetResolutionMethod; // 0xec
	FVector WorldBBoxSize; // 0xf0
};

struct UCrowPackagingAssets {
	TArray<TSoftObjectPtr<UObject>> Assets; // 0x28
};

struct UMovieSceneMediaPlayerPropertySection {
	UMediaSource* MediaSource; // 0xe8
	bool bLoop; // 0xf0
};

struct UCrowWorldBreakableAUD {
	UCrowWorldDamageCheckerBase* DamageChecker; // 0x28
	char Unbreakable : 1; // 0x30
	char TreatAsTerrain : 1; // 0x30
	char DestroyParent : 1; // 0x30
	char AutoDetectParent : 1; // 0x30
	char DestroyOnVehicleOverlap : 1; // 0x30
	char DestroyOnThrowWeaponHit : 1; // 0x30
	char DestroyOnCharacterAnimation : 1; // 0x30
	char SlideOnBeginVaultAction : 1; // 0x30
	char DestroyByShockwave : 1; // 0x31
	char NeedDecalReceiver : 1; // 0x31
	char NetworkSyncToLargeArea : 1; // 0x31
	char VehicleWheelCrushDamage : 1; // 0x31
	char ShakeOnDamage : 1; // 0x31
	char PreventAttachChild : 1; // 0x31
	float AttachChildDistance; // 0x34
	char DestroyAttachChildOnImpactCollapse : 1; // 0x38
	char DestroyAttachChildOnExplosion : 1; // 0x38
	float ShakeDuration; // 0x3c
	float ShakeOffset; // 0x40
	char ClientOnlyDestroy : 1; // 0x44
	float RelayDamageRatioToParent; // 0x48
	float MaxHP; // 0x4c
	float OverlapImpactResistRatio; // 0x50
	float OverlapImpactResistMax; // 0x54
	float DecalScaleMultiply; // 0x58
};

struct UCrowKillFeedWidget {
	UVerticalBox* VB_KillfeedList; // 0x348
	UCrowKillFeedItemWidget* KillFeedItem; // 0x350
	int32_t KillFeedListMAX; // 0x358
	TArray<UVerticalBoxSlot*> Arr_KillFeedItems; // 0x360
};

struct UMaterial {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UPhysicalMaterialMask* PhysMaterialMask; // 0x90
	UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0x98
	FScalarMaterialInput Metallic; // 0xd8
	FScalarMaterialInput Specular; // 0xec
	FScalarMaterialInput Anisotropy; // 0x100
	FVectorMaterialInput Normal; // 0x114
	FVectorMaterialInput Tangent; // 0x128
	FColorMaterialInput EmissiveColor; // 0x13c
	EMaterialDomain MaterialDomain; // 0x150
	EBlendMode BlendMode; // 0x151
	EDecalBlendMode DecalBlendMode; // 0x152
	EMaterialDecalResponse MaterialDecalResponse; // 0x153
	EMaterialShadingModel ShadingModel; // 0x154
	char bCastDynamicShadowAsMasked : 1; // 0x155
	FMaterialShadingModelField ShadingModels; // 0x156
	float OpacityMaskClipValue; // 0x158
	FVectorMaterialInput WorldPositionOffset; // 0x15c
	FScalarMaterialInput Refraction; // 0x170
	FMaterialAttributesInput MaterialAttributes; // 0x184
	FScalarMaterialInput PixelDepthOffset; // 0x19c
	FShadingModelMaterialInput ShadingModelFromMaterialExpression; // 0x1b0
	char bEnableSeparateTranslucency : 1; // 0x1c4
	char bEnableResponsiveAA : 1; // 0x1c4
	char bScreenSpaceReflections : 1; // 0x1c4
	char bContactShadows : 1; // 0x1c4
	char TwoSided : 1; // 0x1c4
	char DitheredLODTransition : 1; // 0x1c4
	char DitherOpacityMask : 1; // 0x1c4
	char bAllowNegativeEmissiveColor : 1; // 0x1c4
	ETranslucencyLightingMode TranslucencyLightingMode; // 0x1c5
	char bEnableMobileSeparateTranslucency : 1; // 0x1c6
	int32_t NumCustomizedUVs; // 0x1c8
	float TranslucencyDirectionalLightingIntensity; // 0x1cc
	float TranslucentShadowDensityScale; // 0x1d0
	float TranslucentSelfShadowDensityScale; // 0x1d4
	float TranslucentSelfShadowSecondDensityScale; // 0x1d8
	float TranslucentSelfShadowSecondOpacity; // 0x1dc
	float TranslucentBackscatteringExponent; // 0x1e0
	FLinearColor TranslucentMultipleScatteringExtinction; // 0x1e4
	float TranslucentShadowStartOffset; // 0x1f4
	char bDisableDepthTest : 1; // 0x1f8
	char bWriteOnlyAlpha : 1; // 0x1f8
	char bGenerateSphericalParticleNormals : 1; // 0x1f8
	char bTangentSpaceNormal : 1; // 0x1f8
	char bUseEmissiveForDynamicAreaLighting : 1; // 0x1f8
	char bBlockGI : 1; // 0x1f8
	char bUsedAsSpecialEngineMaterial : 1; // 0x1f8
	char bUsedWithSkeletalMesh : 1; // 0x1f8
	char bUsedWithEditorCompositing : 1; // 0x1f9
	char bUsedWithParticleSprites : 1; // 0x1f9
	char bUsedWithBeamTrails : 1; // 0x1f9
	char bUsedWithMeshParticles : 1; // 0x1f9
	char bUsedWithNiagaraSprites : 1; // 0x1f9
	char bUsedWithNiagaraRibbons : 1; // 0x1f9
	char bUsedWithNiagaraMeshParticles : 1; // 0x1f9
	char bUsedWithGeometryCache : 1; // 0x1f9
	char bUsedWithStaticLighting : 1; // 0x1fa
	char bUsedWithMorphTargets : 1; // 0x1fa
	char bUsedWithSplineMeshes : 1; // 0x1fa
	char bUsedWithInstancedStaticMeshes : 1; // 0x1fa
	char bUsedWithGeometryCollections : 1; // 0x1fa
	char bUsesDistortion : 1; // 0x1fa
	char bUsedWithClothing : 1; // 0x1fa
	char bUsedWithWater : 1; // 0x1fc
	char bUsedWithHairStrands : 1; // 0x1fc
	char bUsedWithLidarPointCloud : 1; // 0x1fc
	char bUsedWithVirtualHeightfieldMesh : 1; // 0x1fc
	char bUsedWithUI : 1; // 0x200
	char bAutomaticallySetUsageInEditor : 1; // 0x200
	char bFullyRough : 1; // 0x200
	char bUseFullPrecision : 1; // 0x200
	char bUseLightmapDirectionality : 1; // 0x200
	char bUseAlphaToCoverage : 1; // 0x200
	char bForwardRenderUsePreintegratedGFForSimpleIBL : 1; // 0x204
	char bUseHQForwardReflections : 1; // 0x208
	char bUsePlanarForwardReflections : 1; // 0x208
	char bNormalCurvatureToRoughness : 1; // 0x208
	EMaterialTessellationMode D3D11TessellationMode; // 0x209
	char bEnableCrackFreeDisplacement : 1; // 0x20a
	char bEnableAdaptiveTessellation : 1; // 0x20a
	char AllowTranslucentCustomDepthWrites : 1; // 0x20a
	char Wireframe : 1; // 0x20a
	EMaterialShadingRate ShadingRate; // 0x20b
	char bCanMaskedBeAssumedOpaque : 1; // 0x20c
	char bIsMasked : 1; // 0x20c
	char bIsPreviewMaterial : 1; // 0x20c
	char bIsFunctionPreviewMaterial : 1; // 0x20c
	char bUseMaterialAttributes : 1; // 0x20c
	char bCastRayTracedShadows : 1; // 0x20c
	char bUseTranslucencyVertexFog : 1; // 0x20c
	char bApplyCloudFogging : 1; // 0x20c
	char bIsSky : 1; // 0x20d
	char bComputeFogPerPixel : 1; // 0x20d
	char bOutputTranslucentVelocity : 1; // 0x20d
	char bAllowDevelopmentShaderCompile : 1; // 0x20d
	char bIsMaterialEditorStatsMaterial : 1; // 0x20d
	EBlendableLocation BlendableLocation; // 0x20e
	char BlendableOutputAlpha : 1; // 0x20f
	char bEnableStencilTest : 1; // 0x20f
	EMaterialStencilCompare StencilCompare; // 0x210
	char StencilRefValue; // 0x211
	ERefractionMode RefractionMode; // 0x212
	int32_t BlendablePriority; // 0x214
	char bIsBlendable : 1; // 0x218
	uint32_t UsageFlagWarnings; // 0x21c
	float RefractionDepthBias; // 0x220
	FGuid StateId; // 0x224
	float MaxDisplacement; // 0x234
	FMaterialCachedExpressionData CachedExpressionData; // 0x268
};

struct UInterpTrackInstMove {
	FVector ResetLocation; // 0x28
	FRotator ResetRotation; // 0x34
};

struct ASpectatorBeaconClient {
	FString DestSessionId; // 0x2e0
	FSpectatorReservation PendingReservation; // 0x2f0
	ESpectatorClientRequestType RequestType; // 0x368
	bool bPendingReservationSent; // 0x369
	bool bCancelReservation; // 0x36a
};

struct UCrowVehicleStateBase {
	ECrowVehicleState StateId; // 0x28
	UCrowVehicleFSM* FSM; // 0x30
	uint32_t InputBlockMask; // 0x38
	FCrowVehicleStateParameter StateParameter; // 0x40
};

struct UCrowWeaponCrosshairRifle {
	UCanvasPanel* CP_Left; // 0x360
	UCanvasPanel* CP_Right; // 0x368
	UCanvasPanel* CP_Up; // 0x370
	UCanvasPanel* CP_Down; // 0x378
};

struct ABP_CrowWeaponPartsLasersight_uzi002_C {
	UParticleSystemComponent* FX_Wp_LaserLight_M001; // 0x260
	UCrowLaserBeamComponent* CrowLaserBeam; // 0x268
	USkeletalMeshComponent* UZI002_LasersightSIDE; // 0x270
};

struct AGeometryCollectionActor {
	UGeometryCollectionComponent* GeometryCollectionComponent; // 0x220
	UGeometryCollectionDebugDrawComponent* GeometryCollectionDebugDrawComponent; // 0x228
};

struct UAnimNotify_PlayNiagaraEffect {
	UNiagaraSystem* Template; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	bool bAbsoluteScale; // 0x64
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct ACrowVehicleUpdater {
	USphereComponent* SceneRoot; // 0x230
	bool UseClientUpdateAlways; // 0x238
	UStaticMeshComponent* SphereMesh; // 0x240
	TArray<FCrowVehicleUpdaterItem> UpdateItems; // 0x248
	TArray<int32_t> IndexToRemoveList; // 0x258
	FCrowVehiclesCameraInfo CameraInfo; // 0x268
	FCrowVehicleForceAndDamage ForceAndDamageCache; // 0x2a0
	float LastDamageTime; // 0x360
	float CameraDistanceMin; // 0x364
	float CameraDistanceMax; // 0x368
	bool InitializedUpdater; // 0x36c
	int32_t AvailableCoreCount; // 0x370
	FCrowVehicleEntityPoolLandWheels PoolLandWheels; // 0x378
	FCrowVehicleEntityPoolTank PoolTankEntity; // 0x3a0
	FCrowVehiclePoolVirtualSuspension PoolTankVirtualSuspensions; // 0x3c8
	TArray<FCrowVehiclePoolSuspension> PoolSuspensionLandWheelsArray; // 0x3f0
	TMap<int32_t, int32_t> LookupWheelCountToPoolIndex; // 0x400
	TArray<FCrowVehicleUpdaterSweepItem> SweepItems; // 0x450
};

struct ACrowCharacterPawn {
	bool bStopAdditionalCollision; // 0x11c0
	bool bUseViewDependsOnManager; // 0x11c1
	ACrowPlayerStateBase* SavedPlayerState; // 0x1210
	FVector ServerHeadLocation; // 0x121c
	bool bEnableDrownedMoving; // 0x1228
	FName HeadCollisionSocketName; // 0x122c
	FName NeckBoneName; // 0x1234
	float SprintingAngleLimit; // 0x123c
	FName CamSocketName; // 0x1240
	float TurnOffsetTest; // 0x1248
	FCrowCharacterLookLimitStance LimitControlRotation; // 0x124c
	FCrowCharacterLookLimitStance LimitAimOffset; // 0x12f8
	float ProneLimitCheckDistance; // 0x13a4
	float ProneLimitCheckRadius; // 0x13a8
	float ProneLimitFrontBackVelocityFactor; // 0x13ac
	float ProneLimitSideVelocityFactor; // 0x13b0
	float ProneLimitNotMovingBaseLength; // 0x13b4
	float ProneLimitNotMovingCheckDistance; // 0x13b8
	ACrowVehiclePawn* ReservedVehicle; // 0x13c0
	bool bIsReservedVehicle; // 0x13c8
	ACrowVehiclePawn* BoardingVehicle; // 0x13d0
	FName VehicleName; // 0x13d8
	char SeatIndex; // 0x13e0
	EVehicleSeatType SeatType; // 0x13e1
	float SeatLeanForward; // 0x13e4
	float SeatLeanBackward; // 0x13e8
	float SeatLeanSide; // 0x13ec
	float ProneAddedPitchValue; // 0x13f0
	FRotator DefaultVehicleControlInput; // 0x13f4
	FVector2D VehicleControlPitchMinMax; // 0x1400
	FVector2D VehicleControlYawMinMax; // 0x1408
	FVector2D VehicleControlFirePitchMinMax; // 0x1410
	FVector2D VehicleControlFireYawMinMax; // 0x1418
	UCapsuleComponent* PickupItemChecker; // 0x1420
	float PickupItemCheckerSize; // 0x1428
	bool IsPressUSEKey; // 0x142d
	bool IsPressSubUSEKey; // 0x142e
	UCrowInputBase* InputDefault; // 0x1438
	UCrowInputBase* InputFindConstructionSite; // 0x1440
	UCrowInputBase* InputConstruction; // 0x1448
	UCrowInputBase* InputUI; // 0x1450
	UCrowInputBase* InputOnTablet; // 0x1458
	TArray<ACrowItemBase*> NearItemList; // 0x1460
	UCrowTeleportationActorComponent* CrowTeleportationActorComponent; // 0x1470
	UCrowGasMaskComponent* CrowGasMaskComponent; // 0x1478
	FCrowCharacterPeekSetup PeekSetup; // 0x1480
	bool bIsLeftFoot; // 0x1488
	bool bIsShootablePose; // 0x1489
	FVector UpdatedAnimationPelvisOffset; // 0x1490
	float AimDelayDefault; // 0x14ac
	float AimDelaySlow; // 0x14b0
	UCrowLibraryMergeSKCTask* MergeMeshTask_FPArm; // 0x14b8
	UCrowLibraryMergeSKCTask* MergeMeshTask_FPBody; // 0x14c0
	bool bSkipOptimizationByScreensize; // 0x14c8
	ECrowConditionFlags CrowConditionFlags; // 0x14cc
	bool bIsSkydivingMode; // 0x14d0
	UCrowCharacterSkydivingComponent* SkydivingComponent; // 0x14d8
	bool bResetRelativeMeshTransform; // 0x14e0
	UCrowWorldMapIcon* WorldMapIcon; // 0x14e8
	UCrowIndicatorViewInfo* IndicatorInfo; // 0x14f0
	bool bIsSpectatorMode; // 0x14f8
	bool bIsAimAtSpectatorMode; // 0x14f9
	char SpectatorCameraMode; // 0x14fa
	char PrevSpectatorCameraMode; // 0x14fb
	FTimerHandle EndPlayEmotionTimerHandle; // 0x1500
	char PrevEmotionCameraMode; // 0x1508
	bool bIsPlayEmotion; // 0x1509
	uint32_t CurrentEmotionIndex; // 0x150c
	float SwimingOxygen; // 0x1510
	UCrowZombieComponent* ZombieComponent; // 0x1518
	float MaxSwimingOxygen; // 0x1520
	float ConsumeOxygen; // 0x1524
	float ConsumeOxygenPerSecond; // 0x1528
	float RecoveryOxygen; // 0x152c
	float RecoveryOxygenPerSecond; // 0x1530
	float LackOfOxygenDamage; // 0x1534
	float SwimGroundDustDelay; // 0x1538
	FTimerHandle ConsumeOxygenTimerHandle; // 0x1540
	FTimerHandle RecoveryOxygenTimerHandler; // 0x1548
	float PrevSwimImmersionDepth; // 0x1550
	float SwimGroundDustTime; // 0x1554
	float RandSwimGroundDustDelay; // 0x1558
	FName PrevPhysicsVolumeName; // 0x155c
	float ElapsedNotMovementTime; // 0x1564
	float ElapsedHeadLocationUpdateTime; // 0x1568
	UCrowStatusBreathWidget* StatusWidget; // 0x1570
	UCrowVehicleOceanTracker* OceanTracker; // 0x1578
	FCrowBattleSetup BattleSetup; // 0x1584
	FCrowCharacterSoundSetup SoundSetup; // 0x15a8
	FCrowCharacterSoundSetup ZombieSoundSetup; // 0x1638
	FCrowCharacterSoundSetup CurrentSoundSetup; // 0x16c8
	FCrowBattleContainer BattleContainer; // 0x1758
	UCrowSpringArmComponent* SpringArmTP; // 0x1778
	UCameraComponent* CameraTP; // 0x1780
	UCameraComponent* CameraFP; // 0x1788
	USceneComponent* FPMeshPeekAxis; // 0x1790
	USceneComponent* FPMeshSightAxis; // 0x1798
	USkeletalMeshComponent* MeshFPBody; // 0x17a0
	USkeletalMeshComponent* MeshFPArm; // 0x17a8
	UPointLightComponent* LightFP; // 0x17b0
	UPointLightComponent* LightFPType; // 0x17b8
	FVector LightFPOffset; // 0x17c0
	UCrowClothActorComponent* FPBody_ClothComponent; // 0x17d0
	UCrowClothActorComponent* FPArm_ClothComponent; // 0x17d8
	UCrowCharacterMovementCollision* CharacterMovementCollision; // 0x17e0
	UCrowCharacterTriggerControl* TriggerControl; // 0x17e8
	UCrowGameInvenComponent* GameInventory; // 0x17f0
	UCrowPlayerConstruction* PlayerConstruction; // 0x17f8
	UCrowWeaponManagerComponent* WeaponManagerComponent; // 0x1800
	AActor* TargetActor; // 0x1808
	UCrowCharacterFallsComponent* FallsComp; // 0x1810
	UArrowComponent* ThrowProjectileFireDirection; // 0x1818
	UUserWidget* hudWidgetClass; // 0x1820
	FCrowGameIconDisplayInfo IconDisplayInfoEnemy; // 0x1830
	USceneComponent* IconLocation; // 0x18b8
	float SoundSprinTime; // 0x18c0
	UAkComponent* IdleBreathSoundComponent; // 0x18c8
	UAkComponent* GasMaskSoundComponent; // 0x18d0
	float SoundBreathTime; // 0x18d8
	TArray<ACrowInDoorTriggerVolume*> InDoorTriggerList; // 0x18e8
	USkeletalMeshComponent* SaveHealKitMeshComp; // 0x1908
	USkeletalMesh* SaveHealKitSkelMesh_1P; // 0x1910
	USkeletalMesh* SaveHealKitSkelMesh_3P; // 0x1918
	FCrowDecalInfo InjuredBloodOnGroundDecal; // 0x1920
	float InjuredBloodDecalDist; // 0x1970
	int32_t CurrentReviveCnt; // 0x1974
	float AddedMoveDist; // 0x1978
	UCrowSoundStateComponent* SoundStateComponent; // 0x1980
	TArray<FCrowDotDamageInfo> DotDamageArray; // 0x1988
	TMap<uint64_t, FCrowDamageExpInfo> DamageExpMap; // 0x19a8
	FCLSAnimation AniFlashBangBegin; // 0x19f8
	FCLSAnimation AniFlashBangLoop; // 0x1a18
	FCLSAnimation AniFlashBangEnd; // 0x1a38
	int32_t SequencePawnID; // 0x1a58
	TMap<uint64_t, AActor*> UAVReconMap; // 0x1a60
	TArray<UCrowFoliageAffectorComponent*> FoliageAffectors; // 0x1ab8
	UAnimMontage* LookingWeaponMontage; // 0x1ad0
	bool IsLookingWeapon; // 0x1ad8
	TArray<FCrowSoundScriptData> SoundScriptDatas; // 0x1af0
	float SoundScriptExecutableTime; // 0x1b00
	ECrowScopeSightRate ServerCurrentScopeSightRate; // 0x1b04
};

struct UMovieSceneCompiledDataManager {
	TMap<int32_t, FMovieSceneSequenceHierarchy> Hierarchies; // 0xd8
	TMap<int32_t, FMovieSceneEvaluationTemplate> TrackTemplates; // 0x128
	TMap<int32_t, FMovieSceneEvaluationField> TrackTemplateFields; // 0x178
	TMap<int32_t, FMovieSceneEntityComponentField> EntityComponentFields; // 0x1c8
};

struct UAnimStreamable {
	int32_t NumFrames; // 0xa8
	EAnimInterpolationType Interpolation; // 0xac
	FName RetargetSource; // 0xb0
	UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xc8
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd0
	bool bEnableRootMotion; // 0xd8
	ERootMotionRootLock RootMotionRootLock; // 0xd9
	bool bForceRootLock; // 0xda
	bool bUseNormalizedRootMotionScale; // 0xdb
};

struct UCrowConquestSkillTableManager {
	TMap<FString, FCrowConquestSkillTableRow> TableMap; // 0x28
};

struct UCrowGuideMessageWidget {
	UWidgetAnimation* AniHealAlarm; // 0x348
};

struct UCrowMiningStateWidget {
	UTextBlock* TB_Status; // 0x348
	UWidgetSwitcher* WS_Status; // 0x350
	UCanvasPanel* CP_GaugeProgressEffect; // 0x358
	ACrowMiningPointActor* TargetActor; // 0x360
};

struct UInterpTrackBoolProp {
	TArray<FBoolTrackKey> BoolTrack; // 0x70
	FName PropertyName; // 0x80
};

struct UMaterialExpressionDistanceToNearestSurface {
	FExpressionInput position; // 0x40
};

struct UParticleModuleLocationEmitterDirect {
	FName EmitterName; // 0x30
};

struct UGizmoAxisScaleParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float ScaleMultiplier; // 0x68
	float Parameter; // 0x6c
	FGizmoFloatParameterChange LastChange; // 0x70
	FVector CurScaleAxis; // 0x78
	FVector CurScaleOrigin; // 0x84
	FTransform InitialTransform; // 0x90
};

struct UAtmosphericFogComponent {
	float SunMultiplier; // 0x1f8
	float FogMultiplier; // 0x1fc
	float DensityMultiplier; // 0x200
	float DensityOffset; // 0x204
	float DistanceScale; // 0x208
	float AltitudeScale; // 0x20c
	float DistanceOffset; // 0x210
	float GroundOffset; // 0x214
	float StartDistance; // 0x218
	float SunDiscScale; // 0x21c
	float DefaultBrightness; // 0x220
	FColor DefaultLightColor; // 0x224
	char bDisableSunDisk : 1; // 0x228
	char bAtmosphereAffectsSunIlluminance : 1; // 0x228
	char bDisableGroundScattering : 1; // 0x228
	FAtmospherePrecomputeParameters PrecomputeParams; // 0x22c
	UTexture2D* TransmittanceTexture; // 0x258
	UTexture2D* IrradianceTexture; // 0x260
};

struct UAkAssetDataSwitchContainerData {
	TSoftObjectPtr<UAkGroupValue> GroupValue; // 0x28
	UAkGroupValue* DefaultGroupValue; // 0x50
	TArray<TSoftObjectPtr<UAkMediaAsset>> MediaList; // 0x58
	TArray<UAkAssetDataSwitchContainerData*> Children; // 0x68
};

struct UParticleModuleEventReceiverBase {
	EParticleEventType EventGeneratorType; // 0x30
	FName EventName; // 0x34
};

struct UInterpTrackInstAkAudioEvent {
	float LastUpdatePosition; // 0x28
};

struct UCanvasPanelSlot {
	FAnchorData LayoutData; // 0x38
	bool bAutoSize; // 0x60
	int32_t ZOrder; // 0x64
};

struct UAddPrimitiveTool {
	UProceduralShapeToolProperties* ShapeSettings; // 0x90
	UNewMeshMaterialProperties* MaterialProperties; // 0x98
	UPreviewMesh* PreviewMesh; // 0xa0
	ULastActorInfo* LastGenerated; // 0xa8
	FString AssetName; // 0xb0
};

struct UCrowCharacterAnimInstFP {
	FCrowCharacterAnimPrivateWeaponFPRow PrivateBaseAnim; // 0x478
	FRotator LastLookRotation; // 0x518
	FVector2D WeaponSway; // 0x524
	FVector2D LastWeaponSway; // 0x52c
	float EndWeaponSway; // 0x534
	FTransform WeaponRootTransform; // 0x540
	ACrowWeaponBase* CurrentAnimWeapon; // 0x570
	FTransform LeftHandIK; // 0x580
	FTransform RightHandIK; // 0x5b0
	float Enable_GripIK_L; // 0x5e0
	float Enable_GripIK_R; // 0x5e4
	int32_t GripIKLFindPriorityIndex; // 0x5e8
	float Enable_HandIK_L; // 0x5ec
	float Enable_HandIK_R; // 0x5f0
	float Enable_TargetIK_L; // 0x5f4
	float Enable_TargetIK_R; // 0x5f8
	float Enable_GripPose_L; // 0x5fc
	float Enable_GripPose_R; // 0x600
	float CameraAnimRelative; // 0x604
	float CopyToFPArmCurveValue; // 0x608
	FTransform Clavicle_L_TR; // 0x610
	FTransform Clavicle_R_TR; // 0x640
	FMatrix CDInverseM; // 0x670
	bool bIsWeaponFiring; // 0x6b0
	FRotator LookingDirection; // 0x6b4
	FVector SubRootOffset; // 0x6c0
	bool EnableAdjustLeftArmOnSlope; // 0x6cc
	USkeletalMeshComponent* TPMeshComponent; // 0x6d0
	FCLSGripPose GripPose; // 0x6d8
};

struct UCrowBackPackListItemWidget {
	int32_t SlotIndex; // 0x668
	ACrowPickupInventory* PickUpInven; // 0x670
	UImage* IMG_Frame; // 0x678
	UImage* IMG_ItemIcon; // 0x680
	UImage* IMG_Lock; // 0x688
	UTextBlock* TB_ItemAmount; // 0x690
	UTextBlock* TB_ItemName; // 0x698
	UCrowDragDropWidgetBase* WB_CrowDragDropPanel; // 0x6a0
	UImage* IMG_WeaponBack; // 0x6a8
	UImage* IMG_Back; // 0x6b0
	UCrowDragItem* DragItem; // 0x6b8
	bool bIsLock; // 0x6c0
};

struct ACrowEditorTickActor {
	USceneComponent* ActorRoot; // 0x220
};

struct AGeometryCollectionDebugDrawActor {
	FGeometryCollectionDebugDrawWarningMessage WarningMessage; // 0x220
	FGeometryCollectionDebugDrawActorSelectedRigidBody SelectedRigidBody; // 0x228
	bool bDebugDrawWholeCollection; // 0x240
	bool bDebugDrawHierarchy; // 0x241
	bool bDebugDrawClustering; // 0x242
	EGeometryCollectionDebugDrawActorHideGeometry HideGeometry; // 0x243
	bool bShowRigidBodyId; // 0x244
	bool bShowRigidBodyCollision; // 0x245
	bool bCollisionAtOrigin; // 0x246
	bool bShowRigidBodyTransform; // 0x247
	bool bShowRigidBodyInertia; // 0x248
	bool bShowRigidBodyVelocity; // 0x249
	bool bShowRigidBodyForce; // 0x24a
	bool bShowRigidBodyInfos; // 0x24b
	bool bShowTransformIndex; // 0x24c
	bool bShowTransform; // 0x24d
	bool bShowParent; // 0x24e
	bool bShowLevel; // 0x24f
	bool bShowConnectivityEdges; // 0x250
	bool bShowGeometryIndex; // 0x251
	bool bShowGeometryTransform; // 0x252
	bool bShowBoundingBox; // 0x253
	bool bShowFaces; // 0x254
	bool bShowFaceIndices; // 0x255
	bool bShowFaceNormals; // 0x256
	bool bShowSingleFace; // 0x257
	int32_t SingleFaceIndex; // 0x258
	bool bShowVertices; // 0x25c
	bool bShowVertexIndices; // 0x25d
	bool bShowVertexNormals; // 0x25e
	bool bUseActiveVisualization; // 0x25f
	float PointThickness; // 0x260
	float LineThickness; // 0x264
	bool bTextShadow; // 0x268
	float TextScale; // 0x26c
	float NormalScale; // 0x270
	float AxisScale; // 0x274
	float ArrowScale; // 0x278
	FColor RigidBodyIdColor; // 0x27c
	float RigidBodyTransformScale; // 0x280
	FColor RigidBodyCollisionColor; // 0x284
	FColor RigidBodyInertiaColor; // 0x288
	FColor RigidBodyVelocityColor; // 0x28c
	FColor RigidBodyForceColor; // 0x290
	FColor RigidBodyInfoColor; // 0x294
	FColor TransformIndexColor; // 0x298
	float TransformScale; // 0x29c
	FColor LevelColor; // 0x2a0
	FColor ParentColor; // 0x2a4
	float ConnectivityEdgeThickness; // 0x2a8
	FColor GeometryIndexColor; // 0x2ac
	float GeometryTransformScale; // 0x2b0
	FColor BoundingBoxColor; // 0x2b4
	FColor FaceColor; // 0x2b8
	FColor FaceIndexColor; // 0x2bc
	FColor FaceNormalColor; // 0x2c0
	FColor SingleFaceColor; // 0x2c4
	FColor VertexColor; // 0x2c8
	FColor VertexIndexColor; // 0x2cc
	FColor VertexNormalColor; // 0x2d0
	UBillboardComponent* SpriteComponent; // 0x2d8
};

struct UVirtualTexturePoolConfig {
	int32_t DefaultSizeInMegabyte; // 0x28
	TArray<FVirtualTextureSpacePoolConfig> Pools; // 0x30
};

struct UCrowVehicleSightComponent {
	TMap<char, FCrowVehicleSightInfo> SightInfos; // 0xb0
	TMap<char, FCrowBarrelInfo> BarrelInfos; // 0x100
	UCrowSpringArmComponent* CurrentSpringArm; // 0x150
	bool IsBarrelMode; // 0x158
	FCrowInputLerp YawInputLerp; // 0x15c
	FCrowInputLerp PitchInputLerp; // 0x16c
	FCrowInputLerp YawBarrelModeInputLerp; // 0x17c
	FCrowInputLerp PitchBarrelModeInputLerp; // 0x18c
	ACrowPlayerControllerBase* PlayerController; // 0x1a0
};

struct UWB_MultiSystemMessage_C {
	UWidgetAnimation* Ani_Fade_Out_3; // 0x398
	UWidgetAnimation* Ani_Fade_Out_1; // 0x3a0
	UWidgetAnimation* Ani_Fade_Out_2; // 0x3a8
	UWidgetAnimation* Ani_Move_3; // 0x3b0
	UWidgetAnimation* Ani_Move_2; // 0x3b8
	UWidgetAnimation* Ani_Move_1; // 0x3c0
	UImage* Image; // 0x3c8
	UImage* Image_75; // 0x3d0
};

struct UWB_CrossHairPreset_C {
	UCrowButton* BT_Blue; // 0x260
	UCrowButton* BT_Green; // 0x268
	UCrowButton* BT_Navy; // 0x270
	UCrowButton* BT_Orange; // 0x278
	UCrowButton* BT_Red; // 0x280
	UCrowButton* BT_Violet; // 0x288
	UCrowButton* BT_Yellow; // 0x290
	UImage* IMG_Blue_BackGround; // 0x298
	UImage* IMG_Green_BackGround; // 0x2a0
	UImage* IMG_Navy_BackGround; // 0x2a8
	UImage* IMG_Navy_BackGround_2; // 0x2b0
	UImage* IMG_Orange_BackGround; // 0x2b8
	UImage* IMG_Red_BackGround; // 0x2c0
	UImage* IMG_Yellow_BackGround; // 0x2c8
};

struct UAkMediaAsset {
	uint32_t ID; // 0x28
	TArray<UObject*> UserData; // 0x30
	UAkMediaAssetData* CurrentMediaAssetData; // 0x40
};

struct UGeometryCollection {
	TArray<FGeometryCollectionSource> GeometrySource; // 0x30
	TArray<UMaterialInterface*> Materials; // 0x40
	ECollisionTypeEnum CollisionType; // 0x50
	EImplicitTypeEnum ImplicitType; // 0x51
	int32_t MinLevelSetResolution; // 0x54
	int32_t MaxLevelSetResolution; // 0x58
	int32_t MinClusterLevelSetResolution; // 0x5c
	int32_t MaxClusterLevelSetResolution; // 0x60
	float CollisionObjectReductionPercentage; // 0x64
	bool bMassAsDensity; // 0x68
	float Mass; // 0x6c
	float MinimumMassClamp; // 0x70
	float CollisionParticlesFraction; // 0x74
	int32_t MaximumCollisionParticles; // 0x78
	TArray<FGeometryCollectionSizeSpecificData> SizeSpecificData; // 0x80
	bool EnableRemovePiecesOnFracture; // 0x90
	TArray<UMaterialInterface*> RemoveOnFractureMaterials; // 0x98
	FGuid PersistentGuid; // 0xa8
	FGuid StateGuid; // 0xb8
	int32_t BoneSelectedMaterialIndex; // 0xc8
};

struct UNiagaraComponentRendererProperties {
	USceneComponent* ComponentType; // 0x80
	uint32_t ComponentCountLimit; // 0x88
	FNiagaraVariableAttributeBinding EnabledBinding; // 0x90
	bool bAssignComponentsOnParticleID; // 0xe8
	bool bOnlyCreateComponentsOnParticleSpawn; // 0xe9
	USceneComponent* TemplateComponent; // 0xf0
	TArray<FNiagaraComponentPropertyBinding> PropertyBindings; // 0xf8
};

struct ACrowWeaponTankSmoke {
	TArray<FTransform> SmokeFireArray; // 0x31e8
};

struct UNiagaraDataInterfaceVolumeTexture {
	UVolumeTexture* Texture; // 0x38
};

struct UGeneralProjectSettings {
	FString CompanyName; // 0x28
	FString CompanyDistinguishedName; // 0x38
	FString CopyrightNotice; // 0x48
	FString Description; // 0x58
	FString Homepage; // 0x68
	FString LicensingTerms; // 0x78
	FString PrivacyPolicy; // 0x88
	FGuid ProjectID; // 0x98
	FString ProjectName; // 0xa8
	FString ProjectVersion; // 0xb8
	FString SupportContact; // 0xc8
	FText ProjectDisplayedTitle; // 0xd8
	FText ProjectDebugTitleInfo; // 0xf0
	bool bShouldWindowPreserveAspectRatio; // 0x108
	bool bUseBorderlessWindow; // 0x109
	bool bStartInVR; // 0x10a
	bool bAllowWindowResize; // 0x10b
	bool bAllowClose; // 0x10c
	bool bAllowMaximize; // 0x10d
	bool bAllowMinimize; // 0x10e
};

struct UParticleModuleLifetime_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UGameplayTagsList {
	FString ConfigFileName; // 0x28
	TArray<FGameplayTagTableRow> GameplayTagList; // 0x38
};

struct UPartyBeaconState {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	int32_t NumTeams; // 0x38
	int32_t NumPlayersPerTeam; // 0x3c
	FName TeamAssignmentMethod; // 0x40
	int32_t ReservedHostTeamNum; // 0x48
	int32_t ForceTeamNum; // 0x4c
	bool bRestrictCrossConsole; // 0x50
	bool bEnableRemovalRequests; // 0x51
	TArray<FPartyReservation> Reservations; // 0x58
};

struct UWB_WorldMapPlayerMarker_C {
	UWidgetAnimation* Ani_CallHelp; // 0x460
	UWidgetAnimation* Ani_StopBleeding; // 0x468
	UCrowWidgetImage* IMG_2ndWind; // 0x470
	UCrowWidgetImage* IMG_2ndWind_Indoor; // 0x478
	UCrowWidgetImage* IMG_bombC4_2; // 0x480
	UImage* IMG_CallHelp; // 0x488
};

struct UParticleModuleCameraOffset {
	FRawDistributionFloat CameraOffset; // 0x30
	char bSpawnTimeOnly : 1; // 0x60
	EParticleCameraOffsetUpdateMethod UpdateMethod; // 0x64
};

struct UCrowRadialButtonSquadMatch {
	UWidgetSwitcher* WS_SlotStatus; // 0x408
};

struct UGameplayTagsManager {
	TArray<FGameplayTagSource> TagSources; // 0xc0
	TArray<UDataTable*> GameplayTagTables; // 0x1b0
};

struct UMovieSceneMaterialTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UAnimBlueprint {
	USkeleton* TargetSkeleton; // 0xa8
	TArray<FAnimGroupInfo> Groups; // 0xb0
	bool bUseMultiThreadedAnimationUpdate; // 0xc0
	bool bWarnAboutBlueprintUsage; // 0xc1
};

struct AGameState {
	FName MatchState; // 0x270
	FName PreviousMatchState; // 0x278
	int32_t ElapsedTime; // 0x280
};

struct UEngine {
	UFont* TinyFont; // 0x30
	FSoftObjectPath TinyFontName; // 0x38
	UFont* SmallFont; // 0x50
	FSoftObjectPath SmallFontName; // 0x58
	UFont* MediumFont; // 0x70
	FSoftObjectPath MediumFontName; // 0x78
	UFont* LargeFont; // 0x90
	FSoftObjectPath LargeFontName; // 0x98
	UFont* SubtitleFont; // 0xb0
	FSoftObjectPath SubtitleFontName; // 0xb8
	TArray<UFont*> AdditionalFonts; // 0xd0
	TArray<FString> AdditionalFontNames; // 0xe0
	UConsole* ConsoleClass; // 0xf0
	FSoftClassPath ConsoleClassName; // 0xf8
	UGameViewportClient* GameViewportClientClass; // 0x110
	FSoftClassPath GameViewportClientClassName; // 0x118
	ULocalPlayer* LocalPlayerClass; // 0x130
	FSoftClassPath LocalPlayerClassName; // 0x138
	AWorldSettings* WorldSettingsClass; // 0x150
	FSoftClassPath WorldSettingsClassName; // 0x158
	FSoftClassPath NavigationSystemClassName; // 0x170
	UNavigationSystemBase* NavigationSystemClass; // 0x188
	FSoftClassPath NavigationSystemConfigClassName; // 0x190
	UNavigationSystemConfig* NavigationSystemConfigClass; // 0x1a8
	FSoftClassPath AvoidanceManagerClassName; // 0x1b0
	UAvoidanceManager* AvoidanceManagerClass; // 0x1c8
	FSoftClassPath AIControllerClassName; // 0x1d0
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x1e8
	FSoftClassPath PhysicsCollisionHandlerClassName; // 0x1f0
	FSoftClassPath GameUserSettingsClassName; // 0x208
	UGameUserSettings* GameUserSettingsClass; // 0x220
	UGameUserSettings* GameUserSettings; // 0x228
	ALevelScriptActor* LevelScriptActorClass; // 0x230
	FSoftClassPath LevelScriptActorClassName; // 0x238
	FSoftClassPath DefaultBlueprintBaseClassName; // 0x250
	FSoftClassPath GameSingletonClassName; // 0x268
	UObject* GameSingleton; // 0x280
	FSoftClassPath AssetManagerClassName; // 0x288
	UAssetManager* AssetManager; // 0x2a0
	UTexture2D* DefaultTexture; // 0x2a8
	FSoftObjectPath DefaultTextureName; // 0x2b0
	UTexture* DefaultDiffuseTexture; // 0x2c8
	FSoftObjectPath DefaultDiffuseTextureName; // 0x2d0
	UTexture2D* DefaultBSPVertexTexture; // 0x2e8
	FSoftObjectPath DefaultBSPVertexTextureName; // 0x2f0
	UTexture2D* HighFrequencyNoiseTexture; // 0x308
	FSoftObjectPath HighFrequencyNoiseTextureName; // 0x310
	UTexture2D* DefaultBokehTexture; // 0x328
	FSoftObjectPath DefaultBokehTextureName; // 0x330
	UTexture2D* DefaultBloomKernelTexture; // 0x348
	FSoftObjectPath DefaultBloomKernelTextureName; // 0x350
	UMaterial* WireframeMaterial; // 0x368
	FString WireframeMaterialName; // 0x370
	UMaterial* DebugMeshMaterial; // 0x380
	FSoftObjectPath DebugMeshMaterialName; // 0x388
	UMaterial* EmissiveMeshMaterial; // 0x3a0
	FSoftObjectPath EmissiveMeshMaterialName; // 0x3a8
	UMaterial* LevelColorationLitMaterial; // 0x3c0
	FString LevelColorationLitMaterialName; // 0x3c8
	UMaterial* LevelColorationUnlitMaterial; // 0x3d8
	FString LevelColorationUnlitMaterialName; // 0x3e0
	UMaterial* LightingTexelDensityMaterial; // 0x3f0
	FString LightingTexelDensityName; // 0x3f8
	UMaterial* ShadedLevelColorationLitMaterial; // 0x408
	FString ShadedLevelColorationLitMaterialName; // 0x410
	UMaterial* ShadedLevelColorationUnlitMaterial; // 0x420
	FString ShadedLevelColorationUnlitMaterialName; // 0x428
	UMaterial* RemoveSurfaceMaterial; // 0x438
	FSoftObjectPath RemoveSurfaceMaterialName; // 0x440
	UMaterial* VertexColorMaterial; // 0x458
	FString VertexColorMaterialName; // 0x460
	UMaterial* VertexColorViewModeMaterial_ColorOnly; // 0x470
	FString VertexColorViewModeMaterialName_ColorOnly; // 0x478
	UMaterial* VertexColorViewModeMaterial_AlphaAsColor; // 0x488
	FString VertexColorViewModeMaterialName_AlphaAsColor; // 0x490
	UMaterial* VertexColorViewModeMaterial_RedOnly; // 0x4a0
	FString VertexColorViewModeMaterialName_RedOnly; // 0x4a8
	UMaterial* VertexColorViewModeMaterial_GreenOnly; // 0x4b8
	FString VertexColorViewModeMaterialName_GreenOnly; // 0x4c0
	UMaterial* VertexColorViewModeMaterial_BlueOnly; // 0x4d0
	FString VertexColorViewModeMaterialName_BlueOnly; // 0x4d8
	FSoftObjectPath DebugEditorMaterialName; // 0x4e8
	UMaterial* ConstraintLimitMaterial; // 0x500
	UMaterialInstanceDynamic* ConstraintLimitMaterialX; // 0x508
	UMaterialInstanceDynamic* ConstraintLimitMaterialXAxis; // 0x510
	UMaterialInstanceDynamic* ConstraintLimitMaterialY; // 0x518
	UMaterialInstanceDynamic* ConstraintLimitMaterialYAxis; // 0x520
	UMaterialInstanceDynamic* ConstraintLimitMaterialZ; // 0x528
	UMaterialInstanceDynamic* ConstraintLimitMaterialZAxis; // 0x530
	UMaterialInstanceDynamic* ConstraintLimitMaterialPrismatic; // 0x538
	UMaterial* InvalidLightmapSettingsMaterial; // 0x540
	FSoftObjectPath InvalidLightmapSettingsMaterialName; // 0x548
	UMaterial* PreviewShadowsIndicatorMaterial; // 0x560
	FSoftObjectPath PreviewShadowsIndicatorMaterialName; // 0x568
	UMaterial* ArrowMaterial; // 0x580
	UMaterialInstanceDynamic* ArrowMaterialYellow; // 0x588
	FSoftObjectPath ArrowMaterialName; // 0x590
	FLinearColor LightingOnlyBrightness; // 0x5a8
	TArray<FLinearColor> ShaderComplexityColors; // 0x5b8
	TArray<FLinearColor> QuadComplexityColors; // 0x5c8
	TArray<FLinearColor> LightComplexityColors; // 0x5d8
	TArray<FLinearColor> StationaryLightOverlapColors; // 0x5e8
	TArray<FLinearColor> LODColorationColors; // 0x5f8
	TArray<FLinearColor> HLODColorationColors; // 0x608
	TArray<FLinearColor> StreamingAccuracyColors; // 0x618
	float MaxPixelShaderAdditiveComplexityCount; // 0x628
	float MaxES3PixelShaderAdditiveComplexityCount; // 0x62c
	float MinLightMapDensity; // 0x630
	float IdealLightMapDensity; // 0x634
	float MaxLightMapDensity; // 0x638
	char bRenderLightMapDensityGrayscale : 1; // 0x63c
	float RenderLightMapDensityGrayscaleScale; // 0x640
	float RenderLightMapDensityColorScale; // 0x644
	FLinearColor LightMapDensityVertexMappedColor; // 0x648
	FLinearColor LightMapDensitySelectedColor; // 0x658
	TArray<FStatColorMapping> StatColorMappings; // 0x668
	UPhysicalMaterial* DefaultPhysMaterial; // 0x678
	FSoftObjectPath DefaultPhysMaterialName; // 0x680
	TArray<FGameNameRedirect> ActiveGameNameRedirects; // 0x698
	TArray<FClassRedirect> ActiveClassRedirects; // 0x6a8
	TArray<FPluginRedirect> ActivePluginRedirects; // 0x6b8
	TArray<FStructRedirect> ActiveStructRedirects; // 0x6c8
	UTexture2D* PreIntegratedSkinBRDFTexture; // 0x6d8
	FSoftObjectPath PreIntegratedSkinBRDFTextureName; // 0x6e0
	UTexture2D* BlueNoiseTexture; // 0x6f8
	FSoftObjectPath BlueNoiseTextureName; // 0x700
	UTexture2D* MiniFontTexture; // 0x718
	FSoftObjectPath MiniFontTextureName; // 0x720
	UTexture* WeightMapPlaceholderTexture; // 0x738
	FSoftObjectPath WeightMapPlaceholderTextureName; // 0x740
	UTexture2D* LightMapDensityTexture; // 0x758
	FSoftObjectPath LightMapDensityTextureName; // 0x760
	UGameViewportClient* GameViewport; // 0x780
	TArray<FString> DeferredCommands; // 0x788
	float NearClipPlane; // 0x798
	char bSubtitlesEnabled : 1; // 0x79c
	char bSubtitlesForcedOff : 1; // 0x79c
	int32_t MaximumLoopIterationCount; // 0x7a0
	char bCanBlueprintsTickByDefault : 1; // 0x7a4
	char bOptimizeAnimBlueprintMemberVariableAccess : 1; // 0x7a4
	char bAllowMultiThreadedAnimationUpdate : 1; // 0x7a4
	char bEnableEditorPSysRealtimeLOD : 1; // 0x7a4
	char bSmoothFrameRate : 1; // 0x7a4
	char bUseFixedFrameRate : 1; // 0x7a4
	float FixedFrameRate; // 0x7a8
	FFloatRange SmoothedFrameRateRange; // 0x7ac
	UEngineCustomTimeStep* CustomTimeStep; // 0x7c0
	FSoftClassPath CustomTimeStepClassName; // 0x7e8
	UTimecodeProvider* TimecodeProvider; // 0x800
	FSoftClassPath TimecodeProviderClassName; // 0x828
	bool bGenerateDefaultTimecode; // 0x840
	FFrameRate GenerateDefaultTimecodeFrameRate; // 0x844
	float GenerateDefaultTimecodeFrameDelay; // 0x84c
	char bCheckForMultiplePawnsSpawnedInAFrame : 1; // 0x850
	int32_t NumPawnsAllowedToBeSpawnedInAFrame; // 0x854
	char bShouldGenerateLowQualityLightmaps : 1; // 0x858
	FColor C_WorldBox; // 0x85c
	FColor C_BrushWire; // 0x860
	FColor C_AddWire; // 0x864
	FColor C_SubtractWire; // 0x868
	FColor C_SemiSolidWire; // 0x86c
	FColor C_NonSolidWire; // 0x870
	FColor C_WireBackground; // 0x874
	FColor C_ScaleBoxHi; // 0x878
	FColor C_VolumeCollision; // 0x87c
	FColor C_BSPCollision; // 0x880
	FColor C_OrthoBackground; // 0x884
	FColor C_Volume; // 0x888
	FColor C_BrushShape; // 0x88c
	float StreamingDistanceFactor; // 0x890
	FDirectoryPath GameScreenshotSaveDirectory; // 0x898
	ETransitionType TransitionType; // 0x8a8
	FString TransitionDescription; // 0x8b0
	FString TransitionGameMode; // 0x8c0
	char bAllowMatureLanguage : 1; // 0x8d0
	float CameraRotationThreshold; // 0x8d4
	float CameraTranslationThreshold; // 0x8d8
	float PrimitiveProbablyVisibleTime; // 0x8dc
	float MaxOcclusionPixelsFraction; // 0x8e0
	char bPauseOnLossOfFocus : 1; // 0x8e4
	int32_t MaxParticleResize; // 0x8e8
	int32_t MaxParticleResizeWarn; // 0x8ec
	TArray<FDropNoteInfo> PendingDroppedNotes; // 0x8f0
	float NetClientTicksPerSecond; // 0x900
	float DisplayGamma; // 0x904
	float MinDesiredFrameRate; // 0x908
	FLinearColor DefaultSelectedMaterialColor; // 0x90c
	FLinearColor SelectedMaterialColor; // 0x91c
	FLinearColor SelectionOutlineColor; // 0x92c
	FLinearColor SubduedSelectionOutlineColor; // 0x93c
	FLinearColor SelectedMaterialColorOverride; // 0x94c
	bool bIsOverridingSelectedColor; // 0x95c
	char bEnableOnScreenDebugMessages : 1; // 0x960
	char bEnableOnScreenDebugMessagesDisplay : 1; // 0x960
	char bSuppressMapWarnings : 1; // 0x960
	char bDisableAILogging : 1; // 0x960
	uint32_t bEnableVisualLogRecordingOnStart; // 0x964
	int32_t ScreenSaverInhibitorSemaphore; // 0x968
	char bLockReadOnlyLevels : 1; // 0x96c
	FString ParticleEventManagerClassPath; // 0x970
	float SelectionHighlightIntensity; // 0x980
	float BSPSelectionHighlightIntensity; // 0x984
	float SelectionHighlightIntensityBillboards; // 0x988
	TArray<FNetDriverDefinition> NetDriverDefinitions; // 0xbf8
	TArray<FString> ServerActors; // 0xc08
	TArray<FString> RuntimeServerActors; // 0xc18
	float NetErrorLogInterval; // 0xc28
	char bStartedLoadMapMovie : 1; // 0xc2c
	int32_t NextWorldContextHandle; // 0xc48
};

struct UMaterialExpressionStaticComponentMaskParameter {
	char DefaultR : 1; // 0x58
	char DefaultG : 1; // 0x58
	char DefaultB : 1; // 0x58
	char DefaultA : 1; // 0x58
};

struct UMovieScene3DTransformSection {
	FMovieSceneTransformMask TransformMask; // 0xf0
	FMovieSceneFloatChannel Translation[0x3]; // 0xf8
	FMovieSceneFloatChannel Rotation[0x3]; // 0x2d8
	FMovieSceneFloatChannel Scale[0x3]; // 0x4b8
	FMovieSceneFloatChannel ManualWeight; // 0x698
	bool bUseQuaternionInterpolation; // 0x738
};

struct APhysicsConstraintActor {
	UPhysicsConstraintComponent* ConstraintComp; // 0x220
	AActor* ConstraintActor1; // 0x228
	AActor* ConstraintActor2; // 0x230
	char bDisableCollision : 1; // 0x238
};

struct UAISense_Touch {
	TArray<FAITouchEvent> RegisteredEvents; // 0x80
};

struct UCrowGameResultConquestWidget {
	UTextBlock* TXT_MyScore; // 0x368
	UTextBlock* TXT_EnemyScore; // 0x370
	UTextBlock* TB_Ranking; // 0x378
	UTextBlock* TB_RankingMax; // 0x380
	UTextBlock* TB_Kill; // 0x388
	UTextBlock* TB_Death; // 0x390
	UTextBlock* TB_Score; // 0x398
	UCrowButton* WB_BT_Exit; // 0x3a0
	UCrowScoreInfoConquestUserSummary* WB_ConquestScoreAlly; // 0x3a8
	UCrowScoreInfoConquestUserSummary* WB_ConqestScoreEnemy; // 0x3b0
	UWidgetAnimation* AniWin; // 0x3b8
	UWidgetAnimation* AniLose; // 0x3c0
	UWidgetAnimation* AniDraw; // 0x3c8
	ACrowGameStateConquest* GameStateConquest; // 0x3d0
	ACrowPlayerStateBase* LocalPlayerState; // 0x3d8
};

struct ACrowWeaponPartsLightActor {
	USceneComponent* LightRoot; // 0x240
};

struct UButtonWidgetStyle {
	FButtonStyle ButtonStyle; // 0x30
};

struct UCrowVehicleFacadeBoat {
	UCrowVehicleMovementBoats* VehicleMovement; // 0xe0
	UCrowVehicleBoatEffect* BoatEffect; // 0xe8
};

struct UCrowCharacterPartDamageTableManager {
	TMap<FName, FCrowCharacterPartDamageData> TableMap; // 0x28
};

struct UMaterialExpressionLandscapePhysicalMaterialOutput {
	TArray<FPhysicalMaterialInput> Inputs; // 0x40
};

struct UCrowMassOverridingComponent {
	float Mass; // 0xb0
};

struct UAnimComposite {
	FAnimTrack AnimationTrack; // 0xa8
};

struct UExistingMeshMaterialProperties {
	ESetMeshMaterialMode MaterialMode; // 0x60
	float CheckerDensity; // 0x64
	UMaterialInterface* OverrideMaterial; // 0x68
	UMaterialInstanceDynamic* CheckerMaterial; // 0x70
};

struct UAkIOSInitializationSettings {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkAudioSession AudioSession; // 0x90
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0xa0
	FAkAdvancedInitializationSettings AdvancedSettings; // 0xc8
};

struct ACrowItemBase {
	float MeshBoundsScale; // 0x220
	UBoxComponent* BoxComponent; // 0x228
	UCrowItemTableManager* TableManager; // 0x230
	ACrowItemSpawner* ParentItemSpawner; // 0x238
	TArray<UMaterialInstanceDynamic*> DynamicMaterialArray; // 0x240
	UCrowIndicatorViewInfo* ItemDropIndicatorViewInfo; // 0x2a8
	UCrowWorldMapIcon* ItemDropWorldMapIcon; // 0x2b0
};

struct ACrowResultSceneInfo {
	ACameraActor* CameraBegin; // 0x220
	ACameraActor* CameraEnd; // 0x228
	float CameraMoveTime; // 0x230
	UCurveFloat* CameraMoveCurve; // 0x238
	FCrowResultScenePlayer Player01; // 0x240
	FCrowResultScenePlayer Player02; // 0x250
	FCrowResultScenePlayer Player03; // 0x260
	FCrowResultScenePlayer Player04; // 0x270
	TArray<FCrowResultTopPlayerInfo> PlayerArray; // 0x280
	TArray<FCrowResultScenePlayer> TransformArray; // 0x290
	TArray<ACrowCharacterPawn*> ResultPawnArray; // 0x2a0
	UCrowResultSceneWidget* ResultSceneWidget; // 0x2b0
};

struct UParticleModuleLifetime {
	FRawDistributionFloat LifeTime; // 0x30
};

struct USculptMaxBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float MaxHeight; // 0x68
	bool bUseFixedHeight; // 0x6c
	float FixedHeight; // 0x70
};

struct UCrowVehicleOceanTracker {
	UMaterialParameterCollection* TargetCollection; // 0xb0
	bool DrawDebugInfo; // 0xb8
	float OceanDefaultZ; // 0xbc
	float Intensity1; // 0xc0
	float Intensity2; // 0xc4
	float Intensity3; // 0xc8
	float Speed1; // 0xcc
	float Speed2; // 0xd0
	float Speed3; // 0xd4
	float WaveScale1; // 0xd8
	float WaveScale2; // 0xdc
	float WaveScale3; // 0xe0
	float MasterSpeed; // 0xe4
	float MasterIntensity; // 0xe8
	float Offset; // 0xec
	float ServerWorldTime; // 0xf0
	bool OceanFollowCamera; // 0xf4
	AActor* OceanActor; // 0xf8
	FVector OceanActorLocation; // 0x100
	AWaterBody* WaterBodyOceanActor; // 0x110
};

struct UBTService_CrowFindTarget {
	FBlackboardKeySelector TargetInSight; // 0x98
};

struct UMaterialExpressionFunctionInput {
	FExpressionInput Preview; // 0x40
	FName InputName; // 0x54
	FString Description; // 0x60
	FGuid ID; // 0x70
	EFunctionInputType InputType; // 0x80
	FVector4 PreviewValue; // 0x90
	char bUsePreviewValueAsDefault : 1; // 0xa0
	int32_t SortPriority; // 0xa4
	char bCompilingFunctionPreview : 1; // 0xa8
};

struct UCrowSettingUIInfomation {
	TArray<FKeyToTexture> KeyToTextures; // 0x28
	UTexture2D* CtrlTexture; // 0x38
	UPaperSprite* CtrlSprite; // 0x40
	UTexture2D* AltTexture; // 0x48
	UPaperSprite* AltSprite; // 0x50
};

struct UCrowVehicleFacadeCar {
	UCrowVehicleMovementLandWheels* VehicleMovement; // 0xe0
};

struct UReplicationGraph {
	UNetReplicationGraphConnection* ReplicationConnectionManagerClass; // 0x28
	UNetDriver* NetDriver; // 0x30
	TArray<UNetReplicationGraphConnection*> Connections; // 0x38
	TArray<UNetReplicationGraphConnection*> PendingConnections; // 0x48
	TArray<UReplicationGraphNode*> GlobalGraphNodes; // 0x98
	TArray<UReplicationGraphNode*> PrepareForReplicationNodes; // 0xa8
};

struct UGameInstance {
	TArray<ULocalPlayer*> LocalPlayers; // 0x38
	UOnlineSession* OnlineSession; // 0x48
	TArray<UObject*> ReferencedObjects; // 0x50
	FMulticastInlineDelegate OnPawnControllerChangedDelegates; // 0x78
};

struct UDragDropOperation {
	FString Tag; // 0x28
	UObject* Payload; // 0x38
	UWidget* DefaultDragVisual; // 0x40
	EDragPivot Pivot; // 0x48
	FVector2D Offset; // 0x4c
	FMulticastInlineDelegate OnDrop; // 0x58
	FMulticastInlineDelegate OnDragCancelled; // 0x68
	FMulticastInlineDelegate OnDragged; // 0x78
};

struct UCrowMinimapPlayerMarker {
	bool bUseColorLocalSquadRole; // 0x348
	FLinearColor ColorLocalPlayer; // 0x34c
	FLinearColor ColorSquadLeader; // 0x35c
	FLinearColor ColorSquadAssistant; // 0x36c
	FLinearColor ColorSquadMember01; // 0x37c
	FLinearColor ColorSquadMember02; // 0x38c
	FLinearColor ColorOtherAllies; // 0x39c
	FLinearColor ColorEnemy; // 0x3ac
	UOverlay* DirectionOverlay; // 0x3c0
	USizeBox* MarkerSizeBox; // 0x3c8
	UOverlay* LeaderOverlay; // 0x3d0
	UOverlay* MemberOverlay; // 0x3d8
	ACrowPlayerStateBase* MarkerOwnerState; // 0x3e0
};

struct UCrowProgressBarInterp {
	float Percent; // 0x260
	float InterpolationTime; // 0x264
	ECrowProgressBarFillType BarFillType; // 0x268
	FSlateBrush BackgroundBrush; // 0x270
	FSlateBrush MiddleBrush; // 0x2f8
	FSlateBrush ForegroundBrush; // 0x380
	UCanvasPanel* CP_Root; // 0x408
	UImage* IMG_BackGround; // 0x410
	UImage* IMG_Middle; // 0x418
	UImage* IMG_Foreground; // 0x420
};

struct UAIDataProvider_QueryParams {
	FName ParamName; // 0x28
	float FloatValue; // 0x30
	int32_t IntValue; // 0x34
	bool BoolValue; // 0x38
};

struct UProceduralDiscToolProperties {
	float Radius; // 0x70
	int32_t RadialSlices; // 0x74
	int32_t RadialSubdivisions; // 0x78
};

struct UAlignObjectsToolProperties {
	EAlignObjectsAlignTypes AlignType; // 0x60
	EAlignObjectsAlignToOptions AlignTo; // 0x64
	EAlignObjectsBoxPoint BoxPosition; // 0x68
	bool bAlignX; // 0x6c
	bool bAlignY; // 0x6d
	bool bAlignZ; // 0x6e
};

struct UPhysicalAnimationComponent {
	float StrengthMultiplyer; // 0xb0
	USkeletalMeshComponent* SkeletalMeshComponent; // 0xb8
};

struct UCrowKitBomberTargetIcon {
	float TimerTick; // 0x348
	UTextBlock* TB_Distance; // 0x350
	UTextBlock* TB_OverDistance; // 0x358
	UTextBlock* TB_Timer; // 0x360
	UCanvasPanel* CP_AnchorRoot; // 0x368
	UScaleBox* SB_IconStrike; // 0x370
	UScaleBox* SB_IconLaser; // 0x378
	UCanvasPanel* CP_Root; // 0x380
	UCanvasPanel* CP_Icon; // 0x388
	AActor* TargetActor; // 0x390
	int32_t MaxDistance; // 0x398
	UCanvasPanelSlot* IconPanelSlot; // 0x3a0
	bool IsFinishBuild; // 0x3a8
	float FireDelayTime; // 0x3ac
	float CurrentTime; // 0x3b0
	FTimerHandle TimeHandle; // 0x3b8
};

struct ADatasmithImportedSequencesActor {
	TArray<ULevelSequence*> ImportedSequences; // 0x220
};

struct ACrowSceneCaptureActor {
	USceneCaptureComponent2D* CaptureComponent2D; // 0x230
	UStaticMeshComponent* RenderTextureDefaultColor; // 0x238
	ECrowSceneCaptureType SceneCaptureType; // 0x240
	UMaterialParameterCollection* CaptureParamCollection; // 0x248
	float HeightOffset; // 0x250
	UMaterialParameterCollectionInstance* CaptureParamInstance; // 0x258
};

struct UCrowUnderWaterComponent {
	UMaterialParameterCollectionInstance* ParamInstance; // 0xc0
	FName WaterPlaneZParam; // 0xc8
	TMap<FName, UMaterialInterface*> UnderWaterMaterialByTag; // 0xd0
	TMap<FString, int32_t> UnderWaterRef; // 0x120
	bool bUnderWaterEnable; // 0x170
	TWeakObjectPtr<UCrowLocalPostProcessComponent> CachedPostProcessComp; // 0x174
};

struct UCrowVehicleSkinLeftWidget {
	UHorizontalBox* ContainerPanel; // 0x380
	UCrowWidgetToggleButton* ButtonClass; // 0x388
};

struct UAppleImageUtilsBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
	FAppleImageUtilsImageConversionResult ConversionResult; // 0x60
};

struct ACrowWeaponPartsLaserSightActor {
	USceneComponent* LaserSightRoot; // 0x240
	TArray<USceneComponent*> ChildArray; // 0x248
};

struct UGenlockedTimecodeProvider {
	bool bUseGenlockToCount; // 0x30
};

struct UAnimNotifyState_Trail {
	UParticleSystem* PSTemplate; // 0x30
	FName FirstSocketName; // 0x38
	FName SecondSocketName; // 0x40
	ETrailWidthMode WidthScaleMode; // 0x48
	FName WidthScaleCurve; // 0x4c
	char bRecycleSpawnedSystems : 1; // 0x54
};

struct UMeshInspectorTool {
	UMeshInspectorProperties* Settings; // 0x88
	UExistingMeshMaterialProperties* MaterialSettings; // 0x90
	UPreviewMesh* PreviewMesh; // 0xa0
	ULineSetComponent* DrawnLineSet; // 0xa8
	UMaterialInterface* DefaultMaterial; // 0xb0
};

struct UCrowLobbyVehicleSkinWidget {
	UCrowActorRotatorWidget* WB_VehicleSkinActorRotator; // 0x348
	UCrowVehicleSkinTopWidget* WB_TabMenu_Vehicle; // 0x350
	UCrowVehicleSkinLeftWidget* WB_Cusomize_Category_Vehicle; // 0x358
	UCrowListViewVehicleSkin* WB_Customize_Vehicle_Itemlist; // 0x360
	UCrowTabOutfitWidget* WB_TabMenu_ShopCategory; // 0x368
	UHorizontalBox* HB_Shop_Buttons; // 0x370
	UCrowButton* BT_AddShoppingBag; // 0x378
	UCrowButton* BT_Buy; // 0x380
	ACrowSceneLobby* SceneLobby; // 0x388
	ACrowVehiclePawn* VehiclePawn; // 0x390
	ACameraActor* VehicleCameraFar; // 0x398
	ACameraActor* VehicleCameraNear; // 0x3a0
	ACameraActor* VehiclePreviewCameraFar; // 0x3a8
	ACameraActor* VehiclePreviewCameraNear; // 0x3b0
	AActor* VehicleRootActor; // 0x3b8
	ACrowVehicleSpawner* VehicleSpawner; // 0x3c0
	UCrowListItemVehicleSkin* SelectVehicleSkin; // 0x3c8
	ECrowLobbyVehicleEtcType SelectedEtcType; // 0x3d0
	AActor* ParachuteRootActor; // 0x3d8
	ACrowSkydivingPawn* ParachutePawn; // 0x3e0
	ACrowSkydivingSpawner* ParachuteSpawner; // 0x3e8
};

struct UUVProjectionTool {
	UUVProjectionToolProperties* BasicProperties; // 0x90
	UUVProjectionAdvancedProperties* AdvancedProperties; // 0x98
	UExistingMeshMaterialProperties* MaterialSettings; // 0xa0
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xa8
	UMaterialInstanceDynamic* CheckerMaterial; // 0xb8
	TArray<UTransformGizmo*> TransformGizmos; // 0xc0
	TArray<UTransformProxy*> TransformProxies; // 0xd0
};

struct UParticleModuleAccelerationOverLifetime {
	FRawDistributionVector AccelOverLife; // 0x38
};

struct ARuntimeVirtualTextureVolume {
	URuntimeVirtualTextureComponent* VirtualTextureComponent; // 0x220
};

struct UPostEventAtLocationAsync {
	FMulticastInlineDelegate Completed; // 0x30
};

struct UCrowWorldMapVehicleMarker {
	ACrowVehiclePawn* MarkerOwnerPawn; // 0x348
	UCanvasPanel* IconOverlay; // 0x350
	UImage* TankIcon; // 0x358
	UImage* HeliIcon; // 0x360
	UImage* CarIcon; // 0x368
	UImage* BoatIcon; // 0x370
};

struct UAnimNotify_CLSOverlayOverride {
	int32_t OverlayOverrideState; // 0x30
};

struct UParticleModuleRotationRate {
	FRawDistributionFloat StartRotationRate; // 0x30
};

struct UAnimationSharingSetup {
	TArray<FPerSkeletonAnimationSharingSetup> SkeletonSetups; // 0x28
	FAnimationSharingScalability ScalabilitySettings; // 0x38
};

struct UUserDefinedImageCaptureProtocol {
	EDesiredImageFormat Format; // 0xd8
	bool bEnableCompression; // 0xd9
	int32_t CompressionQuality; // 0xdc
};

struct UWB_LobbyButton_Tab_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x5a8
	UWidgetAnimation* Ani_Hover_End; // 0x5b0
	UWidgetAnimation* Ani_Hover_Select; // 0x5b8
	UWidgetAnimation* Ani_Hover_DeSelect; // 0x5c0
	UImage* IMG_New; // 0x5c8
};

struct UWB_Crosshair_Mh6_HMG_Thrid_C {
	UImage* IMG_Cross; // 0x428
	UImage* IMG_Cross_2; // 0x430
	UImage* IMG_Crosshair_Gauge_3; // 0x438
	UImage* IMG_Crosshair_Gauge_4; // 0x440
	UCrowWidgetImage* IMG_Down_3; // 0x448
	UCrowWidgetImage* IMG_Down_4; // 0x450
	UCrowWidgetImage* IMG_Left_3; // 0x458
	UCrowWidgetImage* IMG_Left_4; // 0x460
	UCrowWidgetImage* IMG_Right_3; // 0x468
	UCrowWidgetImage* IMG_Right_4; // 0x470
	UCrowWidgetImage* IMG_Up_3; // 0x478
	UCrowWidgetImage* IMG_Up_4; // 0x480
	UWB_Vehicle_Warning_Heli_C* WB_Vehicle_Damage; // 0x488
};

struct ABP_KitBomber_C {
	UParticleSystemComponent* ParticleSystem1; // 0x3b0
	UParticleSystemComponent* ParticleSystem; // 0x3b8
};

struct ABP_Grenade_40mmShell_C {
	UParticleSystemComponent* Tail_Effect; // 0x17e0
	UStaticMeshComponent* SM_Shell_Empty; // 0x17e8
};

struct UMaterialExpressionMakeMaterialAttributes {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Metallic; // 0x54
	FExpressionInput Specular; // 0x68
	FExpressionInput Roughness; // 0x7c
	FExpressionInput Anisotropy; // 0x90
	FExpressionInput EmissiveColor; // 0xa4
	FExpressionInput Opacity; // 0xb8
	FExpressionInput OpacityMask; // 0xcc
	FExpressionInput Normal; // 0xe0
	FExpressionInput Tangent; // 0xf4
	FExpressionInput WorldPositionOffset; // 0x108
	FExpressionInput WorldDisplacement; // 0x11c
	FExpressionInput TessellationMultiplier; // 0x130
	FExpressionInput SubsurfaceColor; // 0x144
	FExpressionInput ClearCoat; // 0x158
	FExpressionInput ClearCoatRoughness; // 0x16c
	FExpressionInput AmbientOcclusion; // 0x180
	FExpressionInput Refraction; // 0x194
	FExpressionInput CustomizedUVs[0x8]; // 0x1a8
	FExpressionInput PixelDepthOffset; // 0x248
	FExpressionInput ShadingModel; // 0x25c
};

struct UAISenseConfig_Sight {
	UAISense_Sight* Implementation; // 0x48
	float SightRadius; // 0x50
	float LoseSightRadius; // 0x54
	float PeripheralVisionAngleDegrees; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
	float AutoSuccessRangeFromLastSeenLocation; // 0x60
	float PointOfViewBackwardOffset; // 0x64
	float NearClippingRadius; // 0x68
};

struct UAkAudioType {
	uint32_t ShortID; // 0x28
	TArray<UObject*> UserData; // 0x30
};

struct UCrowObjectiveWidget {
	UCrowObjectiveTimeWidget* TimerWidget; // 0x348
	UImage* IMG_MyTeamIcon; // 0x350
	UTextBlock* TB_MyTeamCount; // 0x358
	UCrowProgressBarInterp* PB_MyTeam; // 0x360
	UImage* IMG_EnemyIcon; // 0x368
	UTextBlock* TB_EnemyCount; // 0x370
	UCrowProgressBarInterp* PB_Enemy; // 0x378
	UTextBlock* TB_ObjectiveCount; // 0x380
	FSlateBrush RedTeamIcon; // 0x388
	FSlateBrush BlueTeamIcon; // 0x410
};

struct UCrowSquadIconWidget {
	UWidgetSwitcher* WS_Back; // 0x348
	UCanvasPanel* CP_Leader; // 0x350
	UCanvasPanel* CP_Member; // 0x358
	UImage* IMG_Icon_SquadLeader; // 0x360
	UImage* IMG_Squad_Color; // 0x368
	UTextBlock* TB_Index; // 0x370
};

struct UMagicLeapImageTrackerComponent {
	UTexture2D* TargetImageTexture; // 0x1f8
	FString Name; // 0x200
	float LongerDimension; // 0x210
	bool bIsStationary; // 0x214
	bool bUseUnreliablePose; // 0x215
	EMagicLeapImageTargetOrientation AxisOrientation; // 0x216
	FMulticastInlineDelegate OnSetImageTargetSucceeded; // 0x218
	FMulticastInlineDelegate OnSetImageTargetFailed; // 0x228
	FMulticastInlineDelegate OnImageTargetFound; // 0x238
	FMulticastInlineDelegate OnImageTargetLost; // 0x248
	FMulticastInlineDelegate OnImageTargetUnreliableTracking; // 0x258
};

struct UCrowHUDWidgetSquadMatch {
	UCanvasPanel* CP_SquadMatch; // 0x348
	UCrowSkydivingWidget* WB_Respawn_DiveInfo; // 0x350
	UCrowWorldEventAlarmWidget* WB_EventAlram; // 0x358
	UCrowWorldEventAlarmWidget* WB_Event_Success; // 0x360
	UCrowWorldEventAlarmWidget* WB_Event_Failed; // 0x368
	UCrowWorldEventListWidget* WB_EventBox; // 0x370
	UCrowPrepareMatchSquadMatchWidget* WB_PrepareMatch_SquadMatch; // 0x378
	UCrowWidgetBase* WB_SelectLoadoutTutorial; // 0x380
	UCrowWidgetBase* WB_SquadOperation_WaitingSpectating; // 0x388
	UCrowWidgetBase* WB_SquadOperation_SquadAnnihilation; // 0x390
	UCrowMiningStateWidget* WB_SquadOperation_MiningStatus; // 0x398
	UCrowZombieEnergyGaugeWidget* WB_Zombie_TimerGauge; // 0x3a0
	UCrowSquadMemberKillWidget* WB_SquadMember_Kill_Alarm; // 0x3a8
	UCrowProceedingMineralWidget* WB_Proceeding_Cuon; // 0x3b0
	UCrowZombieWaitingWidget* WB_ZombieWaiting; // 0x3b8
	UCrowHazardGasGuideWidget* WB_Conquest_GasStatus; // 0x3c0
};

struct UCrowDropDownWidget {
	bool bUseAutoSlotIndex; // 0x358
	UCrowDropDownSlotWidget* DropDownSlotWidgetClass; // 0x360
	FName RootPanelWidgetName; // 0x368
	FName PanelWidgetName; // 0x370
	UTextBlock* TB_SelectedItem; // 0x378
	UCrowButton* BT_Dropdown; // 0x380
	UPanelWidget* RootPanelWidget; // 0x388
	UPanelWidget* PanelWidget; // 0x390
	TArray<UCrowDropDownSlotWidget*> SlotList; // 0x398
	int32_t SelectSlotIndex; // 0x3a8
};

struct USoundSourceBus {
	ESourceBusChannels SourceBusChannels; // 0x370
	float SourceBusDuration; // 0x374
	UAudioBus* AudioBus; // 0x378
	char bAutoDeactivateWhenSilent : 1; // 0x380
};

struct UMaterialExpressionConstant {
	float R; // 0x40
};

struct UCrowWorldLightProbe {
	float OpenRatio; // 0x358
	FTransform LightHitTransform; // 0x360
	FTransform LightPathTransform; // 0x390
	TArray<FVector> OpenLocations; // 0x3c0
};

struct UMirrorOperatorFactory {
	UMirrorTool* MirrorTool; // 0x30
};

struct UCrowConquestAreaMinimapWidget {
	UImage* IMG_Area; // 0x348
};

struct UCrowVehicleFacadeBase {
	ACrowVehiclePawn* VehiclePawn; // 0xc0
	TArray<FVehicleDamageParameter> DamageParameterList; // 0xc8
	float PrevSpeed; // 0xd8
};

struct UParticleModuleLight {
	bool bUseInverseSquaredFalloff; // 0x30
	bool bAffectsTranslucency; // 0x31
	bool bPreviewLightRadius; // 0x32
	float SpawnFraction; // 0x34
	FRawDistributionVector ColorScaleOverLife; // 0x38
	FRawDistributionFloat BrightnessOverLife; // 0x80
	FRawDistributionFloat RadiusScale; // 0xb0
	FRawDistributionFloat LightExponent; // 0xe0
	FLightingChannels LightingChannels; // 0x110
	float VolumetricScatteringIntensity; // 0x114
	bool bHighQualityLights; // 0x118
	bool bShadowCastingLights; // 0x119
};

struct UProceduralSphericalBoxToolProperties {
	float Radius; // 0x70
	int32_t Subdivisions; // 0x74
};

struct UMaterialBillboardComponent {
	TArray<FMaterialSpriteElement> Elements; // 0x440
};

struct UCrowWorldSplineComponent {
	FCrowWorldSplinePointSettingEdit SelectedPointEdit; // 0x538
	FCrowWorldSplinePointSetting DefaultSetting; // 0x560
	int32_t UpdateMeshRange; // 0x580
	int32_t UpdateDeformRange; // 0x584
	ESnapToGroundMode SnapToGroundMode; // 0x588
	TArray<FCrowWorldSplinePointSetting> PointSettings; // 0x590
	FCrowWorldSplineAddMeshSetting AddMeshSetting; // 0x5a0
	FCrowWorldSplinePropSetting StartEndPropSetting; // 0x5c8
	UCrowWorldSplineMeshContainer* MeshContainer; // 0x5e8
	TSet<int32_t> CurrSelectedKeys; // 0x5f0
	bool bIgnorePostEditChangeProperty; // 0x640
	UStaticMesh* LastDefaultMesh; // 0x648
	bool IsDeformMode; // 0x650
	UCrowWorldSplineDeformComponent* DeformComp; // 0x658
	UCrowWorldSplineActorComponent* SplineActorComponent; // 0x660
	ECrowWorldSplineMode SplineMode; // 0x668
	bool bCheckIgnoreAlwayFit; // 0x669
};

struct UParticleModuleEventGenerator {
	TArray<FParticleEvent_GenerateInfo> Events; // 0x30
};

struct UCullingField {
	UFieldNodeBase* Culling; // 0xb0
	UFieldNodeBase* Field; // 0xb8
	EFieldCullingOperationType Operation; // 0xc0
};

struct ACrowSafeBoxEventCar {
	USceneComponent* EffectNormal; // 0x388
	UAnimationAsset* CompleteAnimation; // 0x390
	USkeletalMeshComponent* CarMesh; // 0x398
};

struct USoundNodeEnveloper {
	float LoopStart; // 0x48
	float LoopEnd; // 0x4c
	float DurationAfterLoop; // 0x50
	int32_t LoopCount; // 0x54
	char bLoopIndefinitely : 1; // 0x58
	char bLoop : 1; // 0x58
	UDistributionFloatConstantCurve* VolumeInterpCurve; // 0x60
	UDistributionFloatConstantCurve* PitchInterpCurve; // 0x68
	FRuntimeFloatCurve VolumeCurve; // 0x70
	FRuntimeFloatCurve PitchCurve; // 0xf8
	float PitchMin; // 0x180
	float PitchMax; // 0x184
	float VolumeMin; // 0x188
	float VolumeMax; // 0x18c
};

struct ACrowConquestAreaSquadRespawn {
	float MaxConstructDistance; // 0xb40
	float MaxHealth; // 0xb44
	float CurrentHealth; // 0xb48
	USkeletalMeshComponent* Body; // 0xb50
	char RespawnCount; // 0xb58
	char RemainRespawnCount; // 0xb59
	FString SquadKey; // 0xb60
	ACrowPlayerStateBase* OwnerPlayerState; // 0xb70
};

struct UAkHololensInitializationSettings {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkHololensAdvancedInitializationSettings AdvancedSettings; // 0xb8
};

struct UCrowRandomBoxListTableManager {
	TArray<FCrowRandomBoxItemListTableRow> TableList; // 0x28
};

struct UWindowTitleBarAreaSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct ACrowItemCommon {
	FCrowItemTableBaseRow ItemTable; // 0x2b8
	FCrowItemData ItemData; // 0x420
};

struct USequenceCameraShakeCameraStandIn {
	float FieldOfView; // 0x30
};

struct UInterpData {
	float InterpLength; // 0x28
	float PathBuildTime; // 0x2c
	TArray<UInterpGroup*> InterpGroups; // 0x30
	UInterpCurveEdSetup* CurveEdSetup; // 0x40
	float EdSectionStart; // 0x48
	float EdSectionEnd; // 0x4c
	char bShouldBakeAndPrune : 1; // 0x50
	UInterpGroupDirector* CachedDirectorGroup; // 0x58
	TArray<FName> AllEventNames; // 0x60
};

struct UCrowWeaponCharacterAnimInst {
	ACrowWeaponCharacter* WeaponCharacter; // 0x2b8
};

struct UInterpTrackVisibility {
	TArray<FVisibilityTrackKey> VisibilityTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UCrowCustomizeCategryBigWidget {
	UHorizontalBox* HB_WeaponParts; // 0x348
	UCrowCategorySlotBigWidget* WB_Customize_Category_Barrel; // 0x350
	UCrowCategorySlotBigWidget* WB_Customize_Category_Magazine; // 0x358
	UCrowCategorySlotBigWidget* WB_Customize_Category_Muzzle; // 0x360
	UCrowCategorySlotBigWidget* WB_Customize_Category_PistolGrip; // 0x368
	UCrowCategorySlotBigWidget* WB_Customize_Category_PrimarySight; // 0x370
	UCrowCategorySlotBigWidget* WB_Customize_Category_SecondarySight; // 0x378
	UCrowCategorySlotBigWidget* WB_Customize_Category_SideBarrel; // 0x380
	UCrowCategorySlotBigWidget* WB_Customize_Category_Stock; // 0x388
	UCrowCategorySlotBigWidget* WB_Customize_Category_UnderBarrel; // 0x390
	TArray<UCrowCategorySlotBigWidget*> WeaponPartsSlotWidgetArray; // 0x398
	UCrowCustomizeItemDescWidget* CustomizeItemDescWidget; // 0x3a8
};

struct UCrowTriggerCommandBase {
	UCrowTriggerComponent* TriggerComp; // 0xb0
	bool OnEventOnce; // 0xb8
};

struct UInterpTrackToggle {
	TArray<FToggleTrackKey> ToggleTrack; // 0x70
	char bActivateSystemEachUpdate : 1; // 0x80
	char bActivateWithJustAttachedFlag : 1; // 0x80
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UScrollBox {
	FScrollBoxStyle WidgetStyle; // 0x120
	FScrollBarStyle WidgetBarStyle; // 0x348
	USlateWidgetStyleAsset* Style; // 0x818
	USlateWidgetStyleAsset* BarStyle; // 0x820
	EOrientation Orientation; // 0x828
	ESlateVisibility ScrollBarVisibility; // 0x829
	EConsumeMouseWheel ConsumeMouseWheel; // 0x82a
	FVector2D ScrollbarThickness; // 0x82c
	FMargin ScrollbarPadding; // 0x834
	bool AlwaysShowScrollbar; // 0x844
	bool AlwaysShowScrollbarTrack; // 0x845
	bool AllowOverscroll; // 0x846
	bool bAnimateWheelScrolling; // 0x847
	EDescendantScrollDestination NavigationDestination; // 0x848
	float NavigationScrollPadding; // 0x84c
	EScrollWhenFocusChanges ScrollWhenFocusChanges; // 0x850
	bool bAllowRightClickDragScrolling; // 0x851
	float WheelScrollMultiplier; // 0x854
	FMulticastInlineDelegate OnUserScrolled; // 0x858
};

struct UUPSSettings {
	FColor PathLinesColor; // 0x38
	FColor LinesBetweenPointsColor; // 0x3c
	FColor LineFromPatrolComponentOwnerColor; // 0x40
	FColor ErrorLineColor; // 0x44
	float DefaultLinesThickness; // 0x48
	float ErrorLinesThickness; // 0x4c
	float PatrolPointArrowOffset; // 0x50
	float PatrolPointArrowSize; // 0x54
	float PatrolPointSmallArrowSize; // 0x58
	float ArrowMovementSpeed; // 0x5c
	float DistanceBetweenArrows; // 0x60
	FColor ReachRadiusColor; // 0x64
	float ReachRadiusThickness; // 0x68
	FKey KeyToAddNewPoint; // 0x70
	ECollisionChannel PatrolBuilderTraceChannel; // 0x88
	float CheckDistanceBetweenPoints; // 0x8c
	TSoftObjectPtr<USkeletalMesh> EnemyActionPointComponentMesh; // 0x90
	TSoftObjectPtr<UMaterialInterface> EnemyActionPointComponentMeshMaterial; // 0xb8
	TSoftObjectPtr<UTexture2D> EnemyActionPointComponentBillboardSprite; // 0xe0
	FVector DebugPointActionOffset; // 0x108
	FColor DebugPointActionColor; // 0x114
	float DebugPointActionArrowSize; // 0x118
	float DebugPointActionLineThickness; // 0x11c
	FName CurrentPatrolPointBBName; // 0x120
};

struct UMagicLeapPlanesComponent {
	TArray<EMagicLeapPlaneQueryFlags> QueryFlags; // 0x1f8
	UBoxComponent* SearchVolume; // 0x208
	int32_t MaxResults; // 0x210
	float MinHolePerimeter; // 0x214
	float MinPlaneArea; // 0x218
	EMagicLeapPlaneQueryType QueryType; // 0x21c
	float SimilarityThreshold; // 0x220
	FMulticastInlineDelegate OnPlanesQueryResult; // 0x228
	FMulticastInlineDelegate OnPersistentPlanesQueryResult; // 0x238
};

struct UCrowWorldAssetItemSpawner {
	ACrowItemSpawner* ItemSpawnerAsset; // 0x28
};

struct UParticleModuleCollision {
	FRawDistributionVector DampingFactor; // 0x30
	FRawDistributionVector DampingFactorRotation; // 0x78
	FRawDistributionFloat MaxCollisions; // 0xc0
	EParticleCollisionComplete CollisionCompletionOption; // 0xf0
	TArray<EObjectTypeQuery> CollisionTypes; // 0xf8
	char bApplyPhysics : 1; // 0x110
	char bIgnoreTriggerVolumes : 1; // 0x110
	FRawDistributionFloat ParticleMass; // 0x118
	float DirScalar; // 0x148
	char bPawnsDoNotDecrementCount : 1; // 0x14c
	char bOnlyVerticalNormalsDecrementCount : 1; // 0x14c
	float VerticalFudgeFactor; // 0x150
	FRawDistributionFloat DelayAmount; // 0x158
	char bDropDetail : 1; // 0x188
	char bCollideOnlyIfVisible : 1; // 0x188
	char bIgnoreSourceActor : 1; // 0x188
	float MaxCollisionDistance; // 0x18c
};

struct UEditableText {
	FText Text; // 0x108
	FDelegate TextDelegate; // 0x120
	FText HintText; // 0x130
	FDelegate HintTextDelegate; // 0x148
	FEditableTextStyle WidgetStyle; // 0x158
	USlateWidgetStyleAsset* Style; // 0x378
	USlateBrushAsset* BackgroundImageSelected; // 0x380
	USlateBrushAsset* BackgroundImageComposing; // 0x388
	USlateBrushAsset* CaretImage; // 0x390
	FSlateFontInfo Font; // 0x398
	FSlateColor ColorAndOpacity; // 0x3f0
	bool IsReadOnly; // 0x418
	bool IsPassword; // 0x419
	float MinimumDesiredWidth; // 0x41c
	bool IsCaretMovedWhenGainFocus; // 0x420
	bool SelectAllTextWhenFocused; // 0x421
	bool RevertTextOnEscape; // 0x422
	bool ClearKeyboardFocusOnCommit; // 0x423
	bool SelectAllTextOnCommit; // 0x424
	bool AllowContextMenu; // 0x425
	EVirtualKeyboardType KeyboardType; // 0x426
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x427
	EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0x428
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x429
	ETextJustify Justification; // 0x42a
	FShapedTextOptions ShapedTextOptions; // 0x42b
	FMulticastInlineDelegate OnTextChanged; // 0x430
	FMulticastInlineDelegate OnTextCommitted; // 0x440
};

struct ACrowWorldSpline {
	ECrowWorldSplineMode CrowSplineMode; // 0x220
	UCrowWorldSplineComponent* SplineComp; // 0x228
	UCrowWorldSplineMeshContainer* SplineMeshContainer; // 0x230
	UCrowWorldSplineDeformComponent* DeformComp; // 0x238
	UCrowWorldSplineRoadComponent* RoadComp; // 0x240
	UCrowWorldSplineFenceComponent* FenceComp; // 0x248
	UCrowWorldSplinePoleComponent* PoleComp; // 0x250
	UCrowWorldSplineHavestComponent* HavestComp; // 0x258
	UCrowWorldSplineMetaComponent* MetaComp; // 0x260
	int32_t MergeMeshIndex; // 0x268
	USceneComponent* RootComp; // 0x270
	bool bFirstConstruction; // 0x278
	FCrowWorldSplineUID SplineUID; // 0x27c
};

struct UCrowPhysicalMatSound {
	UAkAudioEvent* CharacterWalk; // 0x28
	UAkAudioEvent* CharacterRun; // 0x30
	UAkAudioEvent* CharacterSprint; // 0x38
	UAkAudioEvent* CharacterProne; // 0x40
	UAkAudioEvent* CharacterWalk_3P; // 0x48
	UAkAudioEvent* CharacterRun_3P; // 0x50
	UAkAudioEvent* CharacterSprint_3P; // 0x58
	UAkAudioEvent* CharacterProne_3P; // 0x60
	UAkAudioEvent* CharacterRotateStand_91; // 0x68
	UAkAudioEvent* CharacterRotateStand_181; // 0x70
	UAkAudioEvent* CharacterRotateCrouch_91; // 0x78
	UAkAudioEvent* CharacterRotateCrouch_181; // 0x80
	UAkAudioEvent* CharacterRotateProne_91; // 0x88
	UAkAudioEvent* Ammo_Bullet_5_56mm; // 0x90
	UAkAudioEvent* Ammo_Bullet_7_62mm; // 0x98
	UAkAudioEvent* Ammo_Bullet_9mm; // 0xa0
	UAkAudioEvent* Ammo_Bullet_338_LMag; // 0xa8
	UAkAudioEvent* Ammo_Bullet_12_7mm; // 0xb0
	UAkAudioEvent* Ammo_Bullet_12_7mm_Ground; // 0xb8
	UAkAudioEvent* Ammo_Bullet_0_44Mag; // 0xc0
	UAkAudioEvent* Ammo_Bullet_00BuckShot; // 0xc8
	UAkAudioEvent* Ammo_Bullet_14_5mm; // 0xd0
	UAkAudioEvent* Ammo_Bullet_25mm; // 0xd8
	UAkAudioEvent* Ammo_Grenade_M26; // 0xe0
	UAkAudioEvent* Ammo_Grenade_M18; // 0xe8
	UAkAudioEvent* Ammo_Grenade_AN_M14; // 0xf0
	UAkAudioEvent* Ammo_Grenade_M84; // 0xf8
	UAkAudioEvent* Ammo_Grenade_40mm; // 0x100
	UAkAudioEvent* Ammo_Cannon_120mmAP; // 0x108
	UAkAudioEvent* Ammo_Cannon_120mmHE; // 0x110
	UAkAudioEvent* Ammo_Smoke_66mm; // 0x118
	UAkAudioEvent* Ammo_Rocket_66mm; // 0x120
	UAkAudioEvent* Ammo_Rocket_70mm; // 0x128
	UAkAudioEvent* Ammo_Rocket_85mm; // 0x130
	UAkAudioEvent* Ammo_Missile_70mm; // 0x138
	UAkAudioEvent* Ammo_Missile_127mm; // 0x140
	UAkAudioEvent* Ammo_Melee_Knife; // 0x148
	UAkAudioEvent* Ammo_C4; // 0x150
	UAkAudioEvent* Ammo_ClaymoreMine; // 0x158
	UAkAudioEvent* Ammo_ZombiePunch; // 0x160
	UAkAudioEvent* Explosion_Grenade_M26; // 0x168
	UAkAudioEvent* Explosion_Grenade_M18; // 0x170
	UAkAudioEvent* Explosion_Grenade_AN_M14; // 0x178
	UAkAudioEvent* Explosion_Grenade_M84; // 0x180
	UAkAudioEvent* Explosion_Grenade_40mm; // 0x188
	UAkAudioEvent* Explosion_Cannon_120mmAP; // 0x190
	UAkAudioEvent* Explosion_Cannon_120mmHE; // 0x198
	UAkAudioEvent* Explosion_Smoke_66mm; // 0x1a0
	UAkAudioEvent* Explosion_Rocket_66mm; // 0x1a8
	UAkAudioEvent* Explosion_Rocket_70mm; // 0x1b0
	UAkAudioEvent* Explosion_Rocket_85mm; // 0x1b8
	UAkAudioEvent* Explosion_Missile_70mm; // 0x1c0
	UAkAudioEvent* Explosion_Missile_127mm; // 0x1c8
	UAkAudioEvent* Explosion_C4; // 0x1d0
	UAkAudioEvent* Explosion_ClaymoreMine; // 0x1d8
	UAkAudioEvent* Shell_Bullet_5_56mm; // 0x1e0
	UAkAudioEvent* Shell_Bullet_7_62mm; // 0x1e8
	UAkAudioEvent* Shell_Bullet_9mm; // 0x1f0
	UAkAudioEvent* Shell_Bullet_338_LMag; // 0x1f8
	UAkAudioEvent* Shell_Bullet_12_7mm; // 0x200
	UAkAudioEvent* Shell_Bullet_12_7mm_Ground; // 0x208
	UAkAudioEvent* Shell_Bullet_0_44Mag; // 0x210
	UAkAudioEvent* Shell_Bullet_00BuckShot; // 0x218
	UAkAudioEvent* Shell_Bullet_14_5mm; // 0x220
	UAkAudioEvent* Shell_Bullet_25mm; // 0x228
};

struct USynthSound {
	USynthComponent* OwningSynthComponent; // 0x3c0
};

struct ACrowTGStealthSpawner {
	USplineComponent* BomberMoveSpline; // 0x220
	USceneComponent* Root; // 0x228
	ACrowTGStealthBomberActor* Bomber; // 0x230
	ACrowTGStealthBomberActor* BomberClass; // 0x238
	float TotalPathTimeController; // 0x240
};

struct UWB_HUD_M1Abrams_Crosshair_Smoke_C {
	UImage* IMG_ZoomIn; // 0x460
	UImage* IMG_ZoomIn_5; // 0x468
};

struct UInterpTrackFloatParticleParam {
	FName ParamName; // 0x90
};

struct UNiagaraDataInterfaceChaosDestruction {
	TSet<AChaosSolverActor*> ChaosSolverActorSet; // 0x38
	EDataSourceTypeEnum DataSourceType; // 0x88
	int32_t DataProcessFrequency; // 0x8c
	int32_t MaxNumberOfDataEntriesToSpawn; // 0x90
	bool DoSpawn; // 0x94
	FVector2D SpawnMultiplierMinMax; // 0x98
	float SpawnChance; // 0xa0
	FVector2D ImpulseToSpawnMinMax; // 0xa4
	FVector2D SpeedToSpawnMinMax; // 0xac
	FVector2D MassToSpawnMinMax; // 0xb4
	FVector2D ExtentMinToSpawnMinMax; // 0xbc
	FVector2D ExtentMaxToSpawnMinMax; // 0xc4
	FVector2D VolumeToSpawnMinMax; // 0xcc
	FVector2D SolverTimeToSpawnMinMax; // 0xd4
	int32_t SurfaceTypeToSpawn; // 0xdc
	ELocationFilteringModeEnum LocationFilteringMode; // 0xe0
	ELocationXToSpawnEnum LocationXToSpawn; // 0xe1
	FVector2D LocationXToSpawnMinMax; // 0xe4
	ELocationYToSpawnEnum LocationYToSpawn; // 0xec
	FVector2D LocationYToSpawnMinMax; // 0xf0
	ELocationZToSpawnEnum LocationZToSpawn; // 0xf8
	FVector2D LocationZToSpawnMinMax; // 0xfc
	EDataSortTypeEnum DataSortingType; // 0x104
	bool bGetExternalCollisionData; // 0x105
	bool DoSpatialHash; // 0x106
	FVector SpatialHashVolumeMin; // 0x108
	FVector SpatialHashVolumeMax; // 0x114
	FVector SpatialHashVolumeCellSize; // 0x120
	int32_t MaxDataPerCell; // 0x12c
	bool bApplyMaterialsFilter; // 0x130
	TSet<UPhysicalMaterial*> ChaosBreakingMaterialSet; // 0x138
	bool bGetExternalBreakingData; // 0x188
	bool bGetExternalTrailingData; // 0x189
	FVector2D RandomPositionMagnitudeMinMax; // 0x18c
	float InheritedVelocityMultiplier; // 0x194
	ERandomVelocityGenerationTypeEnum RandomVelocityGenerationType; // 0x198
	FVector2D RandomVelocityMagnitudeMinMax; // 0x19c
	float SpreadAngleMax; // 0x1a4
	FVector VelocityOffsetMin; // 0x1a8
	FVector VelocityOffsetMax; // 0x1b4
	FVector2D FinalVelocityMagnitudeMinMax; // 0x1c0
	float MaxLatency; // 0x1c8
	EDebugTypeEnum DebugType; // 0x1cc
	int32_t LastSpawnedPointID; // 0x1d0
	float LastSpawnTime; // 0x1d4
	float SolverTime; // 0x1e8
	float TimeStampOfLastProcessedData; // 0x1ec
};

struct UMaterialExpressionSmoothStep {
	FExpressionInput Min; // 0x40
	FExpressionInput Max; // 0x54
	FExpressionInput Value; // 0x68
	float ConstMin; // 0x7c
	float ConstMax; // 0x80
	float ConstValue; // 0x84
};

struct UGroomComponent {
	UGroomAsset* GroomAsset; // 0x470
	TArray<UNiagaraComponent*> NiagaraComponents; // 0x478
	USkeletalMesh* SourceSkeletalMesh; // 0x488
	UGroomBindingAsset* BindingAsset; // 0x490
	UPhysicsAsset* PhysicsAsset; // 0x498
	UMaterialInterface* Strands_DebugMaterial; // 0x4a0
	UMaterialInterface* Strands_DefaultMaterial; // 0x4a8
	UMaterialInterface* Cards_DefaultMaterial; // 0x4b0
	UMaterialInterface* Meshes_DefaultMaterial; // 0x4b8
	UNiagaraSystem* AngularSpringsSystem; // 0x4c0
	UNiagaraSystem* CosseratRodsSystem; // 0x4c8
	FString AttachmentName; // 0x4d0
	TArray<FHairGroupDesc> GroomGroupsDesc; // 0x530
};

struct UWheeledVehicleMovementComponent4W {
	FVehicleEngineData EngineSetup; // 0x290
	FVehicleDifferential4WData DifferentialSetup; // 0x330
	float AckermannAccuracy; // 0x34c
	FVehicleTransmissionData TransmissionSetup; // 0x350
	FRuntimeFloatCurve SteeringCurve; // 0x380
};

struct UCrowScopeLockOnWidget {
	UCanvasPanel* CP_LockonCrossHair; // 0x370
	UCanvasPanel* CP_LockOnArea; // 0x378
	UTextBlock* TB_Targeting; // 0x380
	FLinearColor TargettingColor; // 0x388
	FLinearColor LockOnColor; // 0x398
	FLinearColor OutOfRangeColor; // 0x3a8
	FLinearColor NomalColor; // 0x3b8
	UUserWidget* LockOnIndicator; // 0x3c8
	UCanvasPanelSlot* LockOnCrossHairPanel; // 0x3d0
	TArray<UCrowLockonIndicator*> LockOnIndicatorArray; // 0x3d8
	TArray<AActor*> ActorList; // 0x3e8
};

struct ACrowVolumetricCloudActor {
	UPostProcessComponent* PostProcessComp; // 0x220
	UVolumetricCloudComponent* VolumetricCloudComp; // 0x228
	UCrowCloudVisualizerComponent* CloudVisualizerComp; // 0x230
	UCrowCloudDrawComponent* CloudDrawComponent; // 0x238
	UNiagaraSystem* NiagaraTemplate; // 0x240
	UParticleSystem* ParticleTemplate; // 0x248
	bool bInitialized; // 0x250
	UCrowCloudScapeDataAsset* DataAsset; // 0x258
	int32_t CurrMIDMaxCount; // 0x260
	TSet<int32_t> ActivatedIndexList; // 0x268
	TArray<FCrowVloumetricCloudMaterialDynamic> MIDs; // 0x2b8
};

struct UBTTask_CrowFindCoverPoint {
	ECrowAIFindCoverPointMode FindMode; // 0x98
};

struct UAsyncActionLoadPrimaryAssetClass {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UCrowWorldSplineActorComponent {
	UCrowWorldSplineComponent* SplineComp; // 0xb0
	UCrowWorldSplineMetaComponent* MetaComp; // 0xb8
};

struct UInterpTrackFloatAnimBPParam {
	UObject* AnimBlueprintClass; // 0x90
	UAnimInstance* AnimClass; // 0x98
	FName ParamName; // 0xa0
};

