namespace off {
	constexpr auto GNames = 0x5e51500;
	constexpr auto GObjects = 0x5e68df0;
	constexpr auto GWorld = 0x5f50610;
}
struct UMaterialExpressionShadingPathSwitch {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x3]; // 0x54
};

struct UMM_OptionNum {
	UImage* Img_Icon; // 0x2f0
	UTextBlock* Txt_OptionName; // 0x2f8
	UTextBlock* Txt_OptionNum; // 0x300
};

struct UDialogueCameraData {
	TArray<FActorPlacement> CameraDataArray; // 0x30
};

struct UMM_Ranking_Reward_Popup {
	UMirButton* m_pBtnClose; // 0x2f0
	UMM_Common_Btn_Symbol* m_pBtnXClose; // 0x2f8
	UMirCheckBox* m_pCheckBoxDaily; // 0x300
	UMirCheckBox* m_pCheckBoxWeekly; // 0x308
	UMirCheckBox* m_pCheckBoxSeason; // 0x310
	UMirButton* m_pBtnSeason; // 0x318
	UMirCheckBox* m_pCheckBoxDailyTwoTab; // 0x320
	UMirCheckBox* m_pCheckBoxWeeklyTwoTab; // 0x328
	UCanvasPanel* m_pCanCheckBox; // 0x330
	UCanvasPanel* m_pCanCheckBoxTwoTab; // 0x338
	UMirScrollBox* m_pScrollList; // 0x340
	UMirTextBlock* m_pTxtDaily; // 0x348
	UMirTextBlock* m_pTxtWeekly; // 0x350
	UMirTextBlock* m_pTxtSeason; // 0x358
	UMirTextBlock* m_pTxtDailyTwoTab; // 0x360
	UMirTextBlock* m_pTxtWeeklyTwoTab; // 0x368
	UCanvasPanel* m_pCanRewardInfo; // 0x370
	UCanvasPanel* m_pCanRewardDetailPanel01; // 0x378
	UCanvasPanel* m_pCanRewardDetailPanel02; // 0x380
	UCanvasPanel* m_pCanRewardDetailPanel03; // 0x388
	UCanvasPanel* m_pCanRewardDetailPanel04; // 0x390
	UMM_Ranking_Reward_Item* m_pRewardDetailItem1; // 0x398
	UMM_Ranking_Reward_Item* m_pRewardDetailItem2; // 0x3a0
	UMM_Ranking_Reward_Item* m_pRewardDetailItem3; // 0x3a8
	UMM_Ranking_Reward_Item* m_pRewardDetailItem4; // 0x3b0
	UMirTextBlock* m_pTxtRewardDetail1; // 0x3b8
	UMirTextBlock* m_pTxtRewardDetail2; // 0x3c0
	UMirTextBlock* m_pTxtRewardDetail3; // 0x3c8
	UMirTextBlock* m_pTxtRewardDetail4; // 0x3d0
	UMirButton* m_pBtnRewardDetailClose; // 0x3d8
	TArray<UCanvasPanel*> m_RewardDetailPanelList; // 0x3e0
	TArray<UMM_Ranking_Reward_Item*> m_RewardDetailItemList; // 0x3f0
	TArray<UMirTextBlock*> m_RewardDetailDescList; // 0x400
};

struct UPopup_WorldBossFailRewardInfo {
	UHorizontalBox* HorizontalBox_reward02; // 0x2e0
	UHorizontalBox* HorizontalBox_4; // 0x2e8
	UMirTextBlock* txtFixedRewardNotice; // 0x2f0
	UMirTextBlock* txtRewardTitle; // 0x2f8
	UMirTextBlock* txtFailReason; // 0x300
	UMM_Slot_Material* slotReward[0x7]; // 0x308
};

struct UMovieSceneVectorSection {
	FMovieSceneFloatChannel Curves[0x4]; // 0xe0
	int32_t ChannelsUsed; // 0x360
};

struct APlayerStartPIE {
	FName PlayerStartTag; // 0x240
};

struct UMM_Occupation_Rank_List {
	UMM_Slot_Rank* Slot_Rank; // 0x2e0
	UMirImage* Img_Background_Other; // 0x2e8
	UMirImage* Img_Background_Mine; // 0x2f0
	UMirImage* Img_GuildMark; // 0x2f8
	UMirImage* Img_GuildMarkEdge; // 0x300
	UMirImage* Img_Grade; // 0x308
	UMirTextBlock* Txt_Camp; // 0x310
	UMirTextBlock* Txt_GuildName; // 0x318
	UMirTextBlock* Txt_UserName; // 0x320
	UMirTextBlock* Txt_KillScore; // 0x328
	UMirTextBlock* Txt_OccupationScore; // 0x330
	UMirTextBlock* Txt_DestroyScore; // 0x338
};

struct UBaseMediaSource {
	FName PlayerName; // 0x80
};

struct USlateAccessibleWidgetData {
	bool bCanChildrenBeAccessible; // 0x28
	ESlateAccessibleBehavior AccessibleBehavior; // 0x29
	ESlateAccessibleBehavior AccessibleSummaryBehavior; // 0x2a
	FText AccessibleText; // 0x30
	DelegateProperty AccessibleTextDelegate; // 0x48
	FText AccessibleSummaryText; // 0x58
	DelegateProperty AccessibleSummaryTextDelegate; // 0x70
};

struct UMM_PetStatSlot {
	UMirTextBlock* m_Txt_StatType; // 0x2e0
	UMirTextBlock* m_Txt_StatValue; // 0x2e8
};

struct UInterpTrackEvent {
	TArray<FEventTrackKey> EventTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
	char bUseCustomEventName : 1; // 0x80
};

struct USoundNodeBranch {
	FName BoolParameterName; // 0x40
};

struct USoundNodeSwitch {
	FName IntParameterName; // 0x40
};

struct UMM_Popup_GuildOtherMembers {
	UMirScrollBox* sb_member; // 0x2f0
	UMM_Common_Board_Notice* bn_empty; // 0x2f8
	UMM_Common_Btn* btn_confirm; // 0x300
	UMM_Common_Btn_Symbol* btn_close; // 0x308
	UMirTextBlock* Txt_Title; // 0x310
};

struct UMM_Popup_SquareStageList_Slot {
	UMirTextBlock* txtRoomNum; // 0x2e0
	UMirTextBlock* txtRoomName; // 0x2e8
	UMirTextBlock* txtProbability; // 0x2f0
	UMirTextBlock* txtPercent; // 0x2f8
	UButton* m_pBtn_Info; // 0x300
};

struct UMM_CustomTitleSetting {
	int32_t STRING_TITLE; // 0x2e0
	int32_t STRING_GUIDE_NEW; // 0x2e4
	int32_t STRING_GUIDE_PERIOD; // 0x2e8
	int32_t STRING_GUIDE_MESSAGE_RESET; // 0x2ec
	int32_t STRING_REMAIN_DAY; // 0x2f0
	int32_t STRING_REMAIN_HOUR; // 0x2f4
	int32_t STRING_REMAIN_SOON; // 0x2f8
	int32_t STRING_DEL_TITLE; // 0x2fc
	int32_t STRING_BUTTON_CANCEL; // 0x300
	int32_t STRING_BUTTON_OK; // 0x304
	int32_t STRING_ERROR_EMPTY_MATERIAL; // 0x308
	int32_t STRING_ERROR_RULE_VIOLATION_2; // 0x30c
	int32_t STRING_ERROR_RULE_VIOLATION_3; // 0x310
	int32_t STRING_ERROR_RULE_VIOLATION_4; // 0x314
	UMirTextBlock* Txt_Title; // 0x318
	UMirTextBlock* Txt_GuideMsg1; // 0x320
	UMirTextBlock* Txt_GuideMsg2; // 0x328
	UPanelWidget* Pan_Remain; // 0x330
	UMirTextBlock* Txt_RemainDay; // 0x338
	UMirTextBlock* Txt_RemainDay_Del; // 0x340
	UMirEditableText* EditTxt_CustomTitle; // 0x348
	UMM_Slot_Material* Slot_Material; // 0x350
	UMirCanvasPanel* Pan_Edit; // 0x358
	UMM_Common_Btn* Btn_Cancel_Edit; // 0x360
	UMM_Common_Btn_Cost* Btn_Ok_Edit; // 0x368
	UMirCanvasPanel* Pan_Del; // 0x370
	UMM_Common_Btn* Btn_Cancel_Del; // 0x378
	UMM_Common_Btn* Btn_Ok_Del; // 0x380
	UMM_Common_Btn_Symbol* m_CloseBtn; // 0x388
	FString m_CustomTitle; // 0x390
};

struct UBTTask_PlaySound {
	USoundCue* SoundToPlay; // 0x70
};

struct UMM_Customizing_Costume_Palette {
	TArray<UMM_Customizing_PaletteItem*> m_PaletteItemArray; // 0x300
	UWrapBox* m_pColorListBox; // 0x310
	UMM_Customizing_PaletteItem* m_MainColor; // 0x318
	UMM_Customizing_PaletteItem* m_SubColor; // 0x320
	UMM_Common_Btn_IconText* m_pBtnRandomColor; // 0x328
	UMM_Common_Btn_IconText* m_pBtnPresetPopup; // 0x330
};

struct UMM_Auction_Slot_Result {
	UMM_Slot_Inventory* m_pSlotItem; // 0x348
	UMirTextBlock* m_pTxtName; // 0x350
	UMirTextBlock* m_pTxtSellPrice; // 0x358
	UMirTextBlock* m_pTxtRealSellPrice; // 0x360
	UMirRichTextBlock* m_pTxtRemainTime; // 0x368
	UMM_Common_Btn* m_pBtnCancle; // 0x370
};

struct UMM_Popup_NPCShopBuyCount {
	UMM_Slot_Material* mat_slot; // 0x2e0
	UMirTextBlock* Txt_Title; // 0x2e8
	UMirTextBlock* txt_item_name; // 0x2f0
	UMirTextBlock* txt_item_count; // 0x2f8
	UMM_Item_Make_Slider* make_slider; // 0x300
	UMM_Common_Btn* btn_cancle; // 0x308
	UMM_Common_Btn_Cost* btn_bye; // 0x310
	UMM_Common_Btn_Symbol* btn_close; // 0x318
	UMirCanvasPanel* m_pNoticePanel; // 0x320
	UMirRichTextBlock* Txt_Notice; // 0x328
	int32_t STR_SELECT_COUNT; // 0x330
};

struct UMM_CharAbility_Info_Guild {
	UMirTextBlock* m_MirTextBlock_GuildName; // 0x2f0
	UMirTextBlock* m_MirTextBlock_GuildGrade; // 0x2f8
	UMirTextBlock* m_MirTextBlock_Custom; // 0x300
	UMirTextBlock* m_MirTextBlock_GuildNo; // 0x308
	UVerticalBox* m_GuildInfo; // 0x310
	UMirImage* m_Img_GuildMark; // 0x318
	UMirImage* m_Img_GuildMark_Frame; // 0x320
	UCanvasPanel* m_CanvasPanel_BtnOtherGuild; // 0x328
	UMirButton* m_Btn_GoOtherGuild; // 0x330
	UMM_Common_Btn_Symbol* m_Btn_SaveClipBoard; // 0x338
};

struct UMM_CommonVerticalTabSet {
	int32_t m_iFontSize; // 0x2f0
	bool m_bUseBg; // 0x2f4
	bool m_bHideInsteadOfLock; // 0x2f5
	UMirScrollBox* m_Scr_Main; // 0x328
	TArray<UMM_CommonVerticalTabBtn*> m_arTab; // 0x330
	UEffectWidgetBase* m_SelectedEffect; // 0x340
};

struct UBTTask_ExecuteSkill {
	FString Desc; // 0x78
};

struct UMM_Popup_CollectComplete {
	UMirButton* m_Btn_Bg; // 0x2e0
	UPanelWidget* m_Panel_Effect; // 0x2e8
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMirTextBlock* m_Txt_Info; // 0x2f8
	UMirImage* m_Img_Effect; // 0x300
	UMirTextBlock* m_Txt_Effect; // 0x308
	UWidgetAnimation* m_OpenAni; // 0x310
	int32_t m_TitleStrID; // 0x318
	int32_t m_CloseStrID; // 0x31c
};

struct UAISense_Damage {
	TArray<FAIDamageEvent> RegisteredEvents; // 0x80
};

struct APostProcessVolume {
	FPostProcessSettings Settings; // 0x260
	float Priority; // 0x790
	float BlendRadius; // 0x794
	float BlendWeight; // 0x798
	char bEnabled : 1; // 0x79c
	char bUnbound : 1; // 0x79c
};

struct UAISense_Prediction {
	TArray<FAIPredictionEvent> RegisteredEvents; // 0x80
};

struct ULandscapeGrassType {
	TArray<FGrassVariety> GrassVarieties; // 0x28
	char bEnableDensityScaling : 1; // 0x38
	UStaticMesh* GrassMesh; // 0x40
	float GrassDensity; // 0x48
	float PlacementJitter; // 0x4c
	int32_t StartCullDistance; // 0x50
	int32_t EndCullDistance; // 0x54
	bool RandomRotation; // 0x58
	bool AlignToSurface; // 0x59
};

struct UMaterialExpressionDeltaTime {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMovieSceneFolder {
	FName FolderName; // 0x28
	TArray<UMovieSceneFolder*> ChildFolders; // 0x30
	TArray<UMovieSceneTrack*> ChildMasterTracks; // 0x40
	TArray<FString> ChildObjectBindingStrings; // 0x50
};

struct UMM_Popup_Occupation_Auction {
	UMM_Occupation_BidHistory* BidHistory_01; // 0x2e0
	UMM_Occupation_BidHistory* BidHistory_02; // 0x2e8
	UMirTextBlock* Txt_Title; // 0x2f0
	UMirTextBlock* Txt_MinimumBidAmount; // 0x2f8
	UMirTextBlock* Txt_BidAmount; // 0x300
	UMirTextBlock* Txt_GuildHoldinAmount; // 0x308
	UMirTextBlock* Txt_RemainTime; // 0x310
	UMirTextBlock* Txt_Description; // 0x318
	UMM_Common_Btn* btn_refresh; // 0x320
	UMM_Common_Btn* Btn_Bid; // 0x328
	UMM_Common_Btn_Symbol* Btn_Left_Amount; // 0x330
	UMM_Common_Btn_Symbol* Btn_Right_Amount; // 0x338
	UMM_Common_Btn_Symbol* btn_close; // 0x340
	UMirImage* Img_Guild_Coin1; // 0x348
	UMirImage* Img_Guild_Coin2; // 0x350
	UMirButton* Btn_OpenNumPad; // 0x358
};

struct USourceEffectFilterPreset {
	FSourceEffectFilterSettings Settings; // 0x74
};

struct UParticleEffectNotify {
	bool m_bUseMainPC; // 0x50
	bool UseElement; // 0x51
	EParticleEffectElementType TestElementType; // 0x52
	bool m_bUseColor; // 0x53
	FLinearColor m_bEnemyColor; // 0x54
	UParticleSystem* PSTemplate; // 0x68
	AActor* SkeletalEffect; // 0x70
	UAnimationAsset* SkeletalEffecthAnimation; // 0x78
	FVector LocationOffset; // 0x80
	FRotator RotationOffset; // 0x8c
	FVector Scale; // 0x98
	bool Attached; // 0xa4
	bool m_bUseSkelVert; // 0xa5
	FName SocketName; // 0xa8
	FVector ParamSize; // 0xb0
};

struct UMM_CharAbility_Info_Rating {
	UMM_Common_Btn_Symbol* m_Btn_CustomTitle; // 0x300
	UHorizontalBox* m_Grid_CustomTitle; // 0x308
	UMirTextBlock* m_MirTextBlock_NickTitle; // 0x310
	UMirTextBlock* m_MirTextBlock_Nick; // 0x318
	UMirTextBlock* m_MirTextBlock_CombatTitle; // 0x320
	UMirTextBlock* m_MirTextBlock_Attck; // 0x328
	UMirTextBlock* m_MirTextBlock_TendGradeTitle; // 0x330
	UMirTextBlock* m_MirTextBlock_TendGrade; // 0x338
	UMirTextBlock* m_MirTextBlock_TendGradeValue; // 0x340
	UMM_Common_Btn_Symbol* m_Btn_TitleEdit; // 0x348
	UMM_Common_Btn_Symbol* m_Btn_TitleDel; // 0x350
};

struct UFacebookQueryUserInfo {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_New_Force_Ability_Slot {
	UMirImage* m_C_Img_Ability; // 0x2f8
	UMirTextBlock* m_C_Txt_AbilityName; // 0x300
	UMirTextBlock* m_C_Txt_AbilityLevel; // 0x308
	UMirTextBlock* m_C_Txt_AbilityValue; // 0x310
	UMirImage* m_C_Img_Selected; // 0x318
	UMirTextBlock* m_Txt_BloodName; // 0x320
	UPanelWidget* m_Grid_Ability; // 0x328
	UMirTextBlock* m_Txt_NextAbility; // 0x330
	UMirTextBlock* m_Txt_PenaltyAbility; // 0x338
	UMirButton* m_C_Btn_Main; // 0x340
	UPanelWidget* m_Grid_Effect; // 0x348
	UMirImage* m_C_Img_Indicator; // 0x350
};

struct UAISense_Sight {
	int32_t MaxTracesPerTick; // 0x130
	int32_t MinQueriesPerTimeSliceCheck; // 0x134
	double MaxTimeSlicePerTick; // 0x138
	float HighImportanceQueryDistanceThreshold; // 0x140
	float MaxQueryImportance; // 0x148
	float SightLimitQueryImportance; // 0x14c
};

struct UMM_B_Dominion {
	UMM_CommonHorizontalTabSet* m_pTabDominion; // 0x300
	UWidgetSwitcher* m_pSwitchDominion; // 0x308
	UMM_Dominion_Castle* m_pDominionCastle; // 0x310
	UMM_Dominion_Base* m_pDominionBase; // 0x318
};

struct UMM_TutorialStart {
	UMirTextBlock* m_pTitleText; // 0x2e0
	UMM_Common_Btn* m_pSkipButton; // 0x2e8
	UMM_Common_Btn* m_pConfirmButton; // 0x2f0
};

struct UAnimCustomInstance {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FScriptMulticastDelegate OnMontageBlendingOut; // 0x38
	FScriptMulticastDelegate OnMontageStarted; // 0x48
	FScriptMulticastDelegate OnMontageEnded; // 0x58
	FScriptMulticastDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct UMM_B_MysticalPiece {
	UImage* m_RenderTargetImage; // 0x2f0
	UImage* m_TargetPos; // 0x2f8
	UMM_CombatPoint* m_CombatPoint; // 0x300
	UMirButton* m_Btn_SelectDeck; // 0x308
	UMM_MysticalPieceQuickTab* m_DeckTab; // 0x310
	UMirTextBlock* m_Txt_SelectDeckIndex; // 0x318
	UMirTextBlock* m_Txt_SelectDeck; // 0x320
	UCanvasPanel* m_Can_GoToTranscend; // 0x328
	UMirImage* m_Img_Transcend; // 0x330
	UMirButton* m_Btn_GoToTranscend; // 0x338
	UMirTextBlock* m_Txt_Transcend; // 0x340
	TArray<UMirCanvasPanel*> m_Can_EquipSlots; // 0x348
	TArray<UMirImage*> m_Img_EquipBGs; // 0x358
	TArray<UMM_MysticalPieceSlot*> m_EquipSlots; // 0x368
	UOverlay* m_Overlay_Stats; // 0x378
	UMirTextBlock* m_Txt_ItemName; // 0x380
	UMM_Slot_Inventory* m_Slot_MysticalPiece; // 0x388
	UMirRichTextBlock* m_Rtxt_DescTitle; // 0x390
	UMirRichTextBlock* m_Rtxt_Desc; // 0x398
	UMM_Mystical_ItemInfo_Ability* m_ItemInfo_Passive; // 0x3a0
	TArray<UMM_Mystical_ItemInfo_Ability*> m_ItemInfo_Abilitys; // 0x3a8
	UMM_Inventory_MysticalPiece* m_Inven_MysticalPiece; // 0x3b8
	UMM_Common_Btn_Symbol* m_Btn_DetailInfos; // 0x3c0
	UMM_Popup_MysticalPieces_Infos* m_Popup_Attribute; // 0x3c8
	UMirButton* m_Btn_ItemInfoBack; // 0x3d0
	UWidgetAnimation* m_DecShow; // 0x3e0
	UWidgetAnimation* m_DecHide; // 0x3e8
	UWidgetAnimation* m_SlotOpen; // 0x3f0
	UWidgetAnimation* m_InvenOpen; // 0x3f8
};

struct UMM_CustomizingScreenShot {
	AMM_PhotoModeCharacter* m_pPhotoModeCharacter; // 0x2e0
	UPhotoModeData* m_pPhotoModeData; // 0x2e8
	AMM_CharacterCustomizingActor* pCustomizingActor; // 0x2f0
	AMM_CustomizingLevelActor* pCustomizingLevelActor; // 0x2f8
	TMap<EPhotoModeOptionType, FPhotoMode_Option> m_mapOption; // 0x3c0
};

struct UMM_GameViewportClient {
	AActor* m_pSignificanceTarget; // 0x2f0
	UCurveFloat* m_FadeInCurve; // 0x2f8
	UCurveFloat* m_FadeOutCurve; // 0x300
	UCurveFloat* m_CurFadeCurve; // 0x308
};

struct UMM_Slot_Simple_Jewel {
	UMirImage* Img_JewelLock; // 0x3e8
};

struct USteamLogin {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_B_NewGuild {
	UMM_CommonHorizontalTabSet* m_CT_HrzTabSet; // 0x308
	UMM_Guild_MainHome* m_Guild_MainHome; // 0x310
	UMM_GuildMembers* guild_member; // 0x318
	UMM_GuildOption* guild_option; // 0x320
};

struct UMM_Party_Member_Slot {
	UMirCanvasPanel* m_Canvas_User; // 0x2f0
	UMirImage* m_Img_Icn_Leader; // 0x2f8
	UMirImage* m_Img_Icn_Class; // 0x300
	UMirTextBlock* m_Txt_Level; // 0x308
	UMirTextBlock* m_Txt_Nickname; // 0x310
	UMirTextBlock* m_Txt_CombatPoint; // 0x318
	UMirCanvasPanel* m_Canvas_Menu; // 0x320
	UPanelWidget* m_Grid_Kick; // 0x328
	UPanelWidget* m_Grid_Detail; // 0x330
	UPanelWidget* m_Grid_ChangeLeader; // 0x338
	UMM_Common_Btn_Symbol* m_C_Btn_ChangeLeader; // 0x340
	UMM_Common_Btn_Symbol* m_C_Btn_Kick; // 0x348
	UMM_Common_Btn_Symbol* m_C_Btn_Detail; // 0x350
	UMirCanvasPanel* m_Can_Mine; // 0x358
	UMirTextBlock* m_Txt_UserStage; // 0x360
	UMirTextBlock* m_Txt_ChangeLeader; // 0x368
	UMirCanvasPanel* m_Canvas_Slot; // 0x370
	UMirImage* m_Img_Bg_Lock; // 0x378
	UMirImage* m_Img_Bg_Unlock; // 0x380
	UMirImage* m_Img_All; // 0x388
	UMirImage* m_Img_Lock; // 0x390
	UMirImage* m_Img_Able_Class; // 0x398
	UMirTextBlock* m_Txt_Able_Class; // 0x3a0
	UMirButton* m_Btn_Option; // 0x3a8
	UMirButton* m_Btn_Invite; // 0x3b0
	UMirButton* m_Btn_Main; // 0x3b8
};

struct UDistributionFloat {
	char bCanBeBaked : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct ADecalActor {
	UDecalComponent* Decal; // 0x218
};

struct UParticleModuleLocationPrimitiveBase {
	char Positive_X : 1; // 0x30
	char Positive_Y : 1; // 0x30
	char Positive_Z : 1; // 0x30
	char Negative_X : 1; // 0x30
	char Negative_Y : 1; // 0x30
	char Negative_Z : 1; // 0x30
	char SurfaceOnly : 1; // 0x30
	char Velocity : 1; // 0x30
	FRawDistributionFloat VelocityScale; // 0x38
	FRawDistributionVector StartLocation; // 0x68
};

struct UNavigationSystemModuleConfig {
	char bStrictlyStatic : 1; // 0x50
	char bCreateOnClient : 1; // 0x50
	char bAutoSpawnMissingNavData : 1; // 0x50
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x50
};

struct UMovieSceneEulerTransformTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UInterpTrackVectorMaterialParam {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct UVerticalBoxSlot {
	FSlateChildSize Size; // 0x38
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UCheckBoxWidgetStyle {
	FCheckBoxStyle CheckBoxStyle; // 0x30
};

struct USubmixEffectFlexiverbPreset {
	FSubmixEffectFlexiverbSettings Settings; // 0x78
};

struct UMM_PopupPartyPWKeypad {
	UMM_Common_Btn* btn_back; // 0x2e0
	UMirTextBlock* txt_number; // 0x2e8
	UMM_Common_Btn_Symbol* btn_close; // 0x2f0
	UMM_Common_Btn* Btn_Cancel; // 0x2f8
	UMM_Common_Btn* btn_confirm; // 0x300
	UMirButton* lst_btn_number[0xa]; // 0x308
	UMirButton* btn_reset; // 0x358
	UMirButton* btn_remove; // 0x360
};

struct UMaterialExpressionMapARPassthroughCameraUV {
	FExpressionInput Coordinates; // 0x40
};

struct UMM_Popup_XsollaIAP {
	UMirWebBrowser* m_WebBrowser; // 0x2e0
	UMirButton* m_Btn_Close; // 0x2e8
	FTimerHandle DelayCloseTimeHandle; // 0x2f0
};

struct UMovieSceneSlomoSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe0
};

struct UMM_HudAutoBattle_Element {
	TMap<EAutoBattleState, FBrushObject> AuotBattleStateIcon; // 0x2f0
	UMirButton* ElementButton; // 0x340
	UMirImage* IconImage; // 0x348
};

struct UBTNode {
	FString NodeName; // 0x30
	UBehaviorTree* TreeAsset; // 0x40
	UBTCompositeNode* ParentNode; // 0x48
};

struct UMM_Hud_Chat_Popup {
	UWidgetAnimation* m_AniStart; // 0x300
	UWidgetAnimation* m_AniEnd; // 0x308
	UPanelWidget* Panel_Main; // 0x310
	UPanelWidget* Panel_LeftMenu; // 0x318
	UMM_Hud_Chat_Indicator* Chat_TotalIndicator; // 0x320
	UWidgetSwitcher* m_ContentWidgetSwitcher; // 0x328
	UWidgetSwitcher* m_ChatAreaPopupSwitcher; // 0x330
	UMM_Hud_Chat_ChattingRoom* m_ChattingRoom; // 0x338
	UMM_Hud_Chat_SearchWhisper* m_SearchWhisper; // 0x340
	UMM_Hud_Chat_EmptyGuild* m_EmptyGuild; // 0x348
	UMM_Popup_Chat_Macro* m_PopupMacro; // 0x350
	UMM_Popup_Chat_VoiceOption* m_PopupVoiceOption; // 0x358
	UMM_Popup_Chat_UserInfo* m_PopupUserInteraction; // 0x360
	UMM_Common_Btn_Symbol* m_CloseButton; // 0x368
	UMirCheckBox* Toggle_Setting; // 0x370
	UMirCheckBox* Toggle_WhisperChat; // 0x378
	UMirCheckBox* Toggle_Menu; // 0x380
	UMM_Hud_Chat_Area* m_ChatArea; // 0x388
	UMirListView* m_ListView_ChannelList; // 0x390
	TArray<UHudChatTabSlotObj*> m_arChannelSlotObj; // 0x398
	UMM_Common_Btn_Symbol* m_StageInfoButton; // 0x3a8
};

struct UWidgetAnimation {
	UMovieScene* MovieScene; // 0x348
	TArray<FWidgetAnimationBinding> AnimationBindings; // 0x350
	bool bLegacyFinishOnStop; // 0x360
	FString DisplayLabel; // 0x368
};

struct AMiniMapNaviDataExporter {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMM_PopUp_Costume_Palette {
	UWidgetAnimation* m_AniStart; // 0x300
	UWidgetAnimation* m_AniEnd; // 0x308
	UMM_Customizing_PaletteItem* Palette_Main; // 0x310
	UMM_Customizing_PaletteItem* Palette_Sub; // 0x318
	UVerticalBox* Grid_Main; // 0x320
	UVerticalBox* Grid_Sub; // 0x328
	UMM_Common_Btn_IconText* Btn_Random; // 0x330
	UMM_Common_Btn_IconText* Btn_Go_Preset; // 0x338
	UMM_Common_Btn* Btn_Cancel; // 0x340
	UMM_Common_Btn_Cost* Btn_Cost; // 0x348
	UCanvasPanel* Panel_Summary; // 0x350
	UMirCanvasPanel* Panel_Color; // 0x358
	UMM_Common_Btn_Symbol* Btn_PaletteClose; // 0x360
	UMirTextBlock* Txt_Title; // 0x368
	UMirTextBlock* Txt_PaletteTitle; // 0x370
	TArray<UMM_Slot_Costume_Palette*> PaletteSlotList; // 0x378
	TArray<UMM_Slot_Costume_Palette*> PaletteSlotList_Direct_CH1; // 0x388
	TArray<UMM_Slot_Costume_Palette*> PaletteSlotList_Direct_CH2; // 0x398
	UMM_Common_Btn_Symbol* btn_close; // 0x3a8
	UMirWrapScrollBox* Scroll_WrapBox_Preset; // 0x3b0
	UMirWrapScrollBox* Scroll_WrapBox_Direct_Main; // 0x3b8
	UMirWrapScrollBox* Scroll_WrapBox_Direct_Sub; // 0x3c0
	UMM_Costume_SlideBar* SlideBar_Main; // 0x3c8
	UMM_Costume_SlideBar* SlideBar_Sub; // 0x3d0
	int32_t SelectCostumeID; // 0x3d8
	bool DirtyFlag; // 0x3dc
	bool WarrnigUseID; // 0x3dd
	int32_t ItemUseId; // 0x3e0
	int32_t m_MaxSlotCount; // 0x3e4
	int32_t m_CurrentSlotCount; // 0x3e8
	int32_t Select_PaletteNumber_CH1; // 0x3ec
	int32_t Select_PaletteNumber_CH2; // 0x3f0
	int32_t m_MaxSlotCount_Direct_CH1; // 0x3f4
	int32_t m_CurrentSlotCount_Direct_CH1; // 0x3f8
	int32_t m_MaxSlotCount_Direct_CH2; // 0x3fc
	int32_t m_CurrentSlotCount_Direct_CH2; // 0x400
	int32_t STRING_BTN_PURCHASE; // 0x404
	int32_t STRING_TITLE_PALETTE; // 0x408
	int32_t STRING_TITLE_PRESET; // 0x40c
	int32_t STRING_MAIN_COLOR; // 0x410
	int32_t STRING_SUB_COLOR; // 0x414
};

struct UMM_Guild_DevItemSlot {
	UMirImage* mImgIcon; // 0x2f0
	UMirImage* mImgLock; // 0x2f8
	UMirTextBlock* mTxtCount; // 0x300
	UMirTextBlock* mTxtFixedSuccess; // 0x308
	UMirTextBlock* mTxtLockLevel; // 0x310
	UMirButton* mBtnGotoGuildDev; // 0x318
};

struct UTextureRenderTarget {
	float TargetGamma; // 0xd0
};

struct UMM_Popup_ClosedTraining_Ability {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e8
	UVerticalBox* m_VBox_1; // 0x2f0
	UVerticalBox* m_VBox_2; // 0x2f8
};

struct AMM_TotemObject {
	UMM_ExecuteDecalComponent* ExecuteDecalComponent; // 0x400
};

struct UMM_WemixWebBrowser {
	FString m_WemixAuth; // 0x2e0
	FString DracoContractAddress; // 0x370
	FString CharacterContractAddress; // 0x380
	FString BaseItemURI; // 0x390
	UPanelWidget* m_Panel_Main; // 0x3a0
	UMirWebBrowser* m_Web_Main; // 0x3a8
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x3b0
};

struct UCheatManager {
	ADebugCameraController* DebugCameraControllerRef; // 0x28
	ADebugCameraController* DebugCameraControllerClass; // 0x30
};

struct UDecalComponent {
	UMaterialInterface* DecalMaterial; // 0x220
	int32_t SortOrder; // 0x228
	float FadeScreenSize; // 0x22c
	float FadeStartDelay; // 0x230
	float FadeDuration; // 0x234
	float FadeInDuration; // 0x238
	float FadeInStartDelay; // 0x23c
	char bDestroyOwnerAfterFade : 1; // 0x240
	FVector DecalSize; // 0x244
};

struct UMaterialExpressionNormalize {
	FExpressionInput VectorInput; // 0x40
};

struct AImmediatelyKillTrigger {
	FVector m_BoxExtent; // 0x218
	FColor m_BoxColor; // 0x224
};

struct UTimelineComponent {
	FTimeline TheTimeline; // 0xb0
	char bIgnoreTimeDilation : 1; // 0x148
};

struct UMirScrollBox {
	EStyle_MirScrollBox m_eStyle; // 0x880
};

struct UMM_ServerRelocationGroup_Global {
	UMirTextBlock* m_Txt_ServerGroup; // 0x2e0
	UMirButton* m_Btn_Fold; // 0x2e8
	UMirCheckBox* m_CheckBox_Flod; // 0x2f0
	UWrapBox* m_Wrap_ServerList; // 0x2f8
};

struct AScriptMonsterKillCountTrigger {
	TArray<int32_t> m_MonsterIDArray; // 0x298
	TArray<int32_t> m_MonsterOrderIDArray; // 0x2a8
};

struct UMM_Auction_Slot_Material {
	UMM_Slot_Inventory* m_pSlotItem; // 0x340
	UMirTextBlock* m_pTxtName; // 0x348
	UMirTextBlock* m_pTxtEachPrice; // 0x350
	UMirTextBlock* m_pTxtTotalPrice; // 0x358
	UMirTextBlock* m_pTxtRemainTime; // 0x360
	UMirButton* m_pBtnItem; // 0x368
	UMirButton* m_pBtnClick; // 0x370
};

struct UUserDefinedEnum {
	TMap<FName, FText> DisplayNameMap; // 0x60
};

struct UMM_Customizing_Picker_DetailBar {
	UMirTextBlock* Txt_Detail; // 0x2f0
	int32_t m_CustomizingType; // 0x2f8
};

struct UParticleModuleParameterDynamic {
	TArray<FEmitterDynamicParameter> DynamicParams; // 0x30
	int32_t UpdateFlags; // 0x40
	char bUsesVelocity : 1; // 0x44
};

struct UMM_ClassSelect {
	UMM_MoviePlayerWidget* m_pMoviePlayerWidget; // 0x2f0
	UMirImage* m_pClassSymbolImage; // 0x2f8
	FText m_ClassNameText; // 0x300
	FText m_ClassDescriptionText; // 0x318
	UMM_Common_Btn* m_pClassConfirmBtn; // 0x330
	UMirButton* m_pMovieReplayButton; // 0x338
	UMirButton* m_pBackButton; // 0x340
	UWidgetAnimation* Ani_ClassSlot; // 0x348
	TArray<UMM_ClassSelect_Slot*> m_SelectSlotArray; // 0x350
};

struct UMM_CharacterSelect {
	UPanelWidget* Panel_DeleteInfo; // 0x2f0
	UPanelWidget* Panel_GuildName; // 0x2f8
	UPanelWidget* Panel_GuildPosition; // 0x300
	UMM_Common_Btn_Symbol* Btn_DeleteCharacterCancel; // 0x308
	UMirTextBlock* Txt_DeleteTime; // 0x310
	TArray<UMM_CharacterSelect_Slot*> SelectList; // 0x318
	UMirButton* Btn_HistoryBack; // 0x328
	UMirImage* Img_ClassSymbol; // 0x330
	UMirTextBlock* txt_nickname; // 0x338
	UMirTextBlock* txt_level; // 0x340
	UMirTextBlock* Txt_CombatPoint; // 0x348
	UMirTextBlock* Txt_GuildName; // 0x350
	UMirTextBlock* Txt_GuildPosition; // 0x358
	UMirTextBlock* Txt_Position; // 0x360
	UMM_Common_Btn* Btn_DeleteCharacter; // 0x368
	UMM_Common_Btn* Btn_GameStart; // 0x370
	UMM_Common_Btn* Btn_FaceJob; // 0x378
	UMirButton* Btn_GameOption; // 0x380
	UMirButton* Btn_VoiceDownload; // 0x388
	UPanelWidget* Panel_VoiceDownload; // 0x390
	UPanelWidget* Panel_VoiceDownload_Btn; // 0x398
	UPanelWidget* Panel_VoiceDownload_Progress; // 0x3a0
	UMM_Common_Btn* btn_nft_import; // 0x3a8
	int32_t STRING_TIME_DAYS; // 0x3b0
	int32_t STRING_TIME_HOURS; // 0x3b4
	int32_t STRING_TIME_MINUTES; // 0x3b8
	int32_t STRING_TIME_SECONDS; // 0x3bc
	int32_t STRING_REMAIN_TIME; // 0x3c0
	int32_t STRING_CHARACTER_DELETE_TITLE; // 0x3c4
	int32_t STRING_EMPTY_GUILD_NAME; // 0x3c8
	int32_t m_CharacterDeleteTime; // 0x3cc
	float m_CurrentDeltaTime; // 0x3d0
	FString m_DayString; // 0x3d8
	FString m_HourString; // 0x3e8
	FString m_MinuteString; // 0x3f8
	FString m_SecondString; // 0x408
	UPanelWidget* m_Can_Ping; // 0x420
	UMirImage* m_Img_Ping; // 0x428
	UMirTextBlock* m_Txt_Ping; // 0x430
};

struct UMM_Dominion_Title_ListBase {
	UVerticalBox* m_pVertBox; // 0x2e0
	UMirTextBlock* m_pTxtTitle; // 0x2e8
};

struct UMM_PopUp_InventoryExtend {
	UMM_Item_Make_Slider* m_InputSlider; // 0x2f8
	UMM_Common_Btn* m_CB_Cancel; // 0x300
	UMM_Common_Btn_Cost* m_CB_Buy; // 0x308
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x310
	UMirRichTextBlock* m_RTxt_Notice; // 0x318
	UMirTextBlock* m_Txt_Title; // 0x320
	UMM_Common_ToolTipBtn* m_C_Btn_ToolTip; // 0x328
};

struct UMM_Ranking_Reward_List_New {
	UMirImage* m_pImgRank; // 0x2e0
	UMirTextBlock* m_pTxtRankValue; // 0x2e8
	UMM_Slot_New_Ranking_Reward_Buff* m_RewardItem1; // 0x2f0
	UMM_Slot_New_Ranking_Reward_Buff* m_RewardItem2; // 0x2f8
	UMM_Slot_New_Ranking_Reward_Buff* m_RewardItem3; // 0x300
	UMM_Slot_New_Ranking_Reward_Buff* m_RewardItem4; // 0x308
};

struct UBTDecorator_TagCooldown {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
	bool bActivatesCooldown; // 0x75
};

struct UInterpGroupInstDirector {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct UPawnMovementComponent {
	APawn* PawnOwner; // 0x130
};

struct UInterpTrackFloatProp {
	FName PropertyName; // 0x90
};

struct UEnvQueryGenerator_ProjectedPoints {
	FEnvTraceData ProjectionData; // 0x50
};

struct USourceEffectWaveShaperPreset {
	FSourceEffectWaveShaperSettings Settings; // 0x70
};

struct UMovieSceneCinematicShotSection {
	FString ShotDisplayName; // 0x150
	FText DisplayName; // 0x160
};

struct UMovieSceneParticleParameterTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UMirImage {
	FSlateBrush Brush; // 0x108
	DelegateProperty BrushDelegate; // 0x190
	FLinearColor ColorAndOpacity; // 0x1a0
	DelegateProperty ColorAndOpacityDelegate; // 0x1b0
	bool bFlipForRightToLeftFlowDirection; // 0x1c0
	DelegateProperty OnMouseButtonDownEvent; // 0x1c4
};

struct UMM_TemplateManager {
	TMap<ETableType, UDataTable*> m_TableMap; // 0x28
	TArray<UDataTable*> m_CustomizingBoneDataTables; // 0x78
	TArray<UDataTable*> m_CustomizingPresetDataTables; // 0x88
	TArray<UDataTable*> m_CustomizingSettingDataTables; // 0x98
	UDataTable* m_CustomizingTypeDataTable; // 0xa8
	TArray<UDataTable*> m_StoryQuestTables; // 0xb0
	UDataTable* m_QuestTableSet; // 0xc0
	FString m_strCSVPath; // 0x2a8
	TArray<FString> m_arTableNameNotUseCSV; // 0x2b8
	bool m_bInit; // 0x2c8
};

struct UMM_MakeItem_Slot_Special {
	UMirImage* m_Img_GradeBgEffect; // 0x440
	UMirImage* m_ImgEquipMaark; // 0x448
	UMirImage* m_ImgTypeImage; // 0x450
	UMirButton* m_BtnSetItem; // 0x458
	UPanelWidget* m_ImgRemoveItemPanel; // 0x460
	UMM_Common_Btn_Symbol* m_ImgRemoveItemBtn; // 0x468
	UMirTextBlock* m_TxtItemSmeltingLevel; // 0x470
	UMirImage* m_ImgPlusSpecial; // 0x478
	UMM_ItemMake_Switch* Material_Switch; // 0x480
	EMakeItemType m_MakeType; // 0x488
	UMirImage* m_Img_Tier; // 0x490
};

struct UEnvQueryTest_Distance {
	EEnvTestDistance TestMode; // 0x1c0
	UEnvQueryContext* DistanceTo; // 0x1c8
};

struct UMM_Occupation_KillLog_Slot {
	UWidgetAnimation* AnimationStart; // 0x2e0
	UWidgetAnimation* AnimationEnd; // 0x2e8
	UWidgetSwitcher* Switcher_KillLog; // 0x2f0
	UMirTextBlock* Txt_KillLog01; // 0x2f8
	UMirTextBlock* Txt_KillLog02; // 0x300
	UMirTextBlock* Txt_KillLog03; // 0x308
	FTimerHandle TimeHandle_EndLog; // 0x310
	FTimerHandle TimeHandle_FinishLog; // 0x318
	TWeakObjectPtr<UMM_Occupation_KillLog> OwnerObjectWeakPtr; // 0x320
	UMirImage* m_img_KillLog; // 0x328
};

struct UUserInterfaceSettings {
	ERenderFocusRule RenderFocusRule; // 0x38
	TMap<EMouseCursor, FHardwareCursorReference> HardwareCursors; // 0x40
	TMap<EMouseCursor, FSoftClassPath> SoftwareCursors; // 0x90
	FSoftClassPath DefaultCursor; // 0xe0
	FSoftClassPath TextEditBeamCursor; // 0xf8
	FSoftClassPath CrosshairsCursor; // 0x110
	FSoftClassPath HandCursor; // 0x128
	FSoftClassPath GrabHandCursor; // 0x140
	FSoftClassPath GrabHandClosedCursor; // 0x158
	FSoftClassPath SlashedCircleCursor; // 0x170
	float ApplicationScale; // 0x188
	EUIScalingRule UIScaleRule; // 0x18c
	FSoftClassPath CustomScalingRuleClass; // 0x190
	FRuntimeFloatCurve UIScaleCurve; // 0x1a8
	bool bAllowHighDPIInGameMode; // 0x230
	bool bLoadWidgetsOnDedicatedServer; // 0x231
	TArray<UObject*> CursorClasses; // 0x238
	UObject* CustomScalingRuleClassInstance; // 0x248
	UDPICustomScalingRule* CustomScalingRule; // 0x250
	bool bForceCalculateScale; // 0x258
};

struct UDistributionVectorUniform {
	FVector Max; // 0x38
	FVector Min; // 0x44
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x55
	char bUseExtremes : 1; // 0x58
};

struct UFrameGrabberProtocol {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UMM_RelationQuestList {
	TMap<int32_t, int32_t> m_CategoryToStr; // 0x2f0
	UMirListView* m_ListView_GroupList; // 0x340
	UMirListView* m_ListView_RelationList; // 0x348
	UMM_CommonHorizontalTabSet* m_CategorySet; // 0x350
	UMM_QuestRelation_Progress* m_QuestRelationProg; // 0x358
	TArray<URelationGroupSlotObj*> m_arRelationGroupSlotObj; // 0x370
	TArray<URelationSlotObj*> m_arRelationSlotObj; // 0x380
};

struct ATimerTrigger {
	float m_Time; // 0x278
	bool m_bShowLimitTimeWidget; // 0x27c
};

struct UMM_MysticalPieceQuickTab {
	UMM_MysticalPieceQuickSlotBtn* m_arQuickBtn[0x5]; // 0x2f0
};

struct UMM_Popup_FriendlyCharacter {
	UMM_Common_Btn_Symbol* btn_close; // 0x2e0
	UMM_Common_Btn* btn_search; // 0x2e8
	UMM_Common_Btn* btn_confirm; // 0x2f0
	UMirScrollBox* sb_member; // 0x2f8
	UMM_Common_Board_Notice* empty_notice; // 0x300
};

struct UMM_Slot_Rank {
	UMirImage* img_rank; // 0x2e0
	UMirTextBlock* txt_rank; // 0x2e8
};

struct AMyDrawDebug {
	TArray<ABlockingVolume*> m_BlockingVolumeArray; // 0x218
	FColor m_BoxColor; // 0x228
	FColor m_BoxBoardColor; // 0x22c
};

struct AReflectionCapture {
	UReflectionCaptureComponent* CaptureComponent; // 0x218
};

struct UParticleModuleLocationEmitter {
	FName EmitterName; // 0x30
	ELocationEmitterSelectionMethod SelectionMethod; // 0x38
	char InheritSourceVelocity : 1; // 0x3c
	float InheritSourceVelocityScale; // 0x40
	char bInheritSourceRotation : 1; // 0x44
	float InheritSourceRotationScale; // 0x48
	char bApplyOrbitOffset : 1; // 0x4c
};

struct UMovieSceneSubSection {
	FMovieSceneSectionParameters Parameters; // 0xe0
	float StartOffset; // 0xf8
	float TimeScale; // 0xfc
	float PrerollTime; // 0x100
	UMovieSceneSequence* SubSequence; // 0x108
	AActor* ActorToRecord; // 0x110
	FString TargetSequenceName; // 0x130
	FDirectoryPath TargetPathToRecordTo; // 0x140
};

struct UOnlineEngineInterfaceImpl {
	FName VoiceSubsystemNameOverride; // 0x28
};

struct UMM_Customizing_Scroll {
	UMirScrollBox* m_ScrollBox; // 0x308
	TArray<UMM_Customizing_ListItem*> m_ListSlotArray; // 0x310
};

struct UMM_Dominion_Base_List {
	UMirListView* m_ListView_DominionList; // 0x2f0
	TArray<UDominionSlotObj*> m_arDominionSlotObj; // 0x310
};

struct UMM_GameOption_Switch {
	UTextBlock* Txt_MainTitle; // 0x2f8
	UCheckBox* Chk_MainSwitch; // 0x300
	UMirButton* Btn_CheckDisable; // 0x308
	int32_t SwitchFlag; // 0x310
};

struct UMaterialExpressionStaticComponentMaskParameter {
	FExpressionInput Input; // 0x58
	char DefaultR : 1; // 0x6c
	char DefaultG : 1; // 0x6c
	char DefaultB : 1; // 0x6c
	char DefaultA : 1; // 0x6c
};

struct UGeometryCacheComponent {
	UGeometryCache* GeometryCache; // 0x440
	bool bRunning; // 0x448
	bool bLooping; // 0x449
	float StartTimeOffset; // 0x44c
	float PlaybackSpeed; // 0x450
	int32_t NumTracks; // 0x454
	float ElapsedTime; // 0x458
	float Duration; // 0x48c
	bool bManualTick; // 0x490
};

struct UMM_B_Shop_NPC {
	UMM_B_Shop_ListElement* ListElementClass; // 0x2f0
	int32_t m_TestValue; // 0x2f8
	UWidgetAnimation* m_Anim_Open; // 0x300
	UWidgetAnimation* m_Anim_Close; // 0x308
	UMM_Common_Btn_Symbol* m_BtnClose; // 0x310
	UMM_Goods_Slot* m_Goods; // 0x318
	UTextBlock* m_TitleText; // 0x320
	UMirScrollBox* m_ScrollBox; // 0x328
	UMirScrollBox* m_GuildScrollBox; // 0x330
	UMM_Common_Btn* btn_reset; // 0x338
	UMirTextBlock* txt_time_value; // 0x340
	UMirTextBlock* txt_time; // 0x348
	UGridPanel* gp_normal; // 0x350
	UGridPanel* gp_black_iron; // 0x358
	UMM_GuildIcon* guild_icon; // 0x360
	UMirRichTextBlock* txt_guild_name; // 0x368
	UMirTextBlock* txt_remain_count; // 0x370
	UMirTextBlock* txt_remain_time; // 0x378
	UMM_ShopNpcGoods* shop_npc_goods; // 0x380
	UMirCanvasPanel* m_CanvasEventGoods; // 0x388
	UMirImage* m_Img_CostIcon; // 0x390
	UMirTextBlock* m_Txt_CostValue; // 0x398
	UMM_Common_ToolTipBtn* m_pBtnCommToolTip; // 0x3a0
};

struct UMM_PieceItemSlot {
	UWidgetAnimation* m_Effect; // 0x2e0
	UMM_Slot_Material* m_PieceItemSlot; // 0x2e8
};

struct USceneCaptureComponent2D {
	ECameraProjectionMode ProjectionType; // 0x2d0
	float FOVAngle; // 0x2d4
	float OrthoWidth; // 0x2d8
	UTextureRenderTarget2D* TextureTarget; // 0x2e0
	ESceneCaptureCompositeMode CompositeMode; // 0x2e8
	FPostProcessSettings PostProcessSettings; // 0x2f0
	float PostProcessBlendWeight; // 0x820
	char bOverride_CustomNearClippingPlane : 1; // 0x824
	float CustomNearClippingPlane; // 0x828
	bool bUseCustomProjectionMatrix; // 0x82c
	FMatrix CustomProjectionMatrix; // 0x830
	bool bEnableClipPlane; // 0x870
	FVector ClipPlaneBase; // 0x874
	FVector ClipPlaneNormal; // 0x880
	char bCameraCutThisFrame : 1; // 0x88c
	char bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1; // 0x88c
};

struct USourceEffectPhaserPreset {
	FSourceEffectPhaserSettings Settings; // 0x78
};

struct UMM_Popup_ServerSelect_Global {
	FLinearColor ServerCongestion_Normal; // 0x2e0
	FLinearColor ServerCongestion_Busy; // 0x2f0
	FLinearColor ServerCongestion_Saturation; // 0x300
	FLinearColor Filter_Normal; // 0x310
	FLinearColor Filter_Selected; // 0x320
	UPanelWidget* m_Can_ServerSelect; // 0x360
	UPanelWidget* m_Can_FindChar; // 0x368
	UMirImage* m_Img_TotalFilter_Selected; // 0x370
	UMirImage* m_Img_RecommendFilter_Selected; // 0x378
	UMirImage* m_Img_MyFilter_Selected; // 0x380
	UMirTextBlock* m_Txt_TotalFilter; // 0x388
	UMirTextBlock* m_Txt_RecommendFilter; // 0x390
	UMirTextBlock* m_Txt_MyFilter; // 0x398
	UMirButton* m_Btn_TotalFilter; // 0x3a0
	UMirButton* m_Btn_RecommendFilter; // 0x3a8
	UMirButton* m_Btn_MyFilter; // 0x3b0
	UMirImage* m_Img_ServerCongestionInfo_1; // 0x3b8
	UMirImage* m_Img_ServerCongestionInfo_2; // 0x3c0
	UMirImage* m_Img_ServerCongestionInfo_3; // 0x3c8
	UMirTextBlock* m_Txt_ServerCongestionInfo_1; // 0x3d0
	UMirTextBlock* m_Txt_ServerCongestionInfo_2; // 0x3d8
	UMirTextBlock* m_Txt_ServerCongestionInfo_3; // 0x3e0
	UMM_Common_Btn_Symbol* m_CB_ServerSelectClose; // 0x3e8
	UMirScrollBox* m_Scr_RegionList; // 0x3f0
	UMirScrollBox* m_Scr_ServerList; // 0x3f8
	TArray<UMM_RegionSlot_Global*> m_arRegionSlot; // 0x400
	TArray<UMM_ServerGroup_Global*> m_arServerGroup; // 0x410
	UPanelWidget* m_Can_TopArrow; // 0x420
	UPanelWidget* m_Can_BottomArrow; // 0x428
	UWidgetAnimation* m_Ani_Arrow; // 0x430
	UMirTextBlock* m_Txt_RecentServer; // 0x438
	UMM_Common_Btn_Symbol* m_CB_ServerSelectRefresh; // 0x440
	UMM_Common_Btn* m_CB_GoToFindChar; // 0x448
	UMM_Common_Btn_Symbol* m_CB_FindCharClose; // 0x450
	UMirScrollBox* m_Scr_FindCharList; // 0x458
	TArray<UMM_FindCharSlot_Global*> m_arCharSlot; // 0x460
};

struct UMM_State_Item {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMovieSceneCameraCutTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UMM_QuestBaseMsg {
	UMirRichTextBlock* m_Txt_Message; // 0x2e0
	int32_t m_RARE_QUEST_ICON; // 0x2e8
	int32_t m_HERO_QUEST_ICON; // 0x2ec
	int32_t m_LEGEND_QUEST_ICON; // 0x2f0
	UWidgetAnimation* m_OpenAni; // 0x300
	UWidgetAnimation* m_CloseAni; // 0x308
};

struct UMovieSceneIntegerSection {
	FMovieSceneIntegerChannel IntegerCurve; // 0xe0
};

struct UMM_Popup_GuildInvite {
	UMM_Common_Btn_Symbol* btn_close; // 0x2f0
	UMM_Common_Btn_Symbol* btn_search; // 0x2f8
	UMM_Common_Btn* btn_confirm; // 0x300
	UMM_Common_Btn* btn_refresh; // 0x308
	UMirScrollBox* sb_recommend; // 0x310
	UMM_Common_Board_Notice* notice; // 0x318
	UMirEditableText* edit_txt_search; // 0x320
	UMirCanvasPanel* cp_invite; // 0x328
	UMirCanvasPanel* cp_search; // 0x330
	UMM_Common_Btn_Symbol* btn_prev; // 0x338
	UMM_Common_Btn_Symbol* btn_next; // 0x340
	UMirTextBlock* txt_page; // 0x348
	UMM_Common_Btn* btn_search_cancel; // 0x350
	UMM_Common_Btn* btn_confirm_search; // 0x358
};

struct AWallTrigger {
	UBoxComponent* m_pBoxCollision; // 0x278
	bool m_bWallActivated; // 0x280
};

struct UGameplayTagsDeveloperSettings {
	FString DeveloperConfigName; // 0x28
};

struct UButtonSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UMM_AchievementSlot {
	UMM_Condition_info* ConditionInfo; // 0x2e8
	TArray<UMM_Slot_Material*> RewardList; // 0x2f0
	UMM_Common_Btn* Btn_Receive; // 0x300
	int32_t m_AchievementID; // 0x308
	UMirImage* m_CompleteImg; // 0x310
	UPanelWidget* m_PanelReward; // 0x318
	UPanelWidget* m_PanelBtn; // 0x320
	UMirButton* m_SelectBtn; // 0x328
	UMirImage* m_FocusImg; // 0x330
};

struct UPhysicsThrusterComponent {
	float ThrustStrength; // 0x220
};

struct UMM_PKRecordList {
	UTextBlock* m_Txt_Time; // 0x2e8
	UImage* m_Img_Win; // 0x2f0
	UImage* m_Img_Die; // 0x2f8
	UImage* m_Img_UserClassMark; // 0x300
	UTextBlock* m_Txt_UserName; // 0x308
	UTextBlock* m_Txt_UserCombatPoint; // 0x310
	UImage* m_Img_Frame; // 0x318
	UImage* m_Img_Symbol; // 0x320
	UTextBlock* m_Txt_GuildName; // 0x328
	UMM_Common_Btn* m_ActionBtn; // 0x330
};

struct UBorderSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UHitPostProcessMatNotify {
	FHitPostProcessMaterialData HitPostProcessData; // 0x38
};

struct ALevel_Master_C {
	char bInputEnabled : 1; // 0x218
};

struct UMM_B_Party_List {
	UMM_Party_LeftTab* m_Tab_Left; // 0x2f0
	UMirCheckBox* m_CheckBox_Alarm; // 0x2f8
	UMirCheckBox* m_CheckBox_Guild; // 0x300
	UMirTextBlock* m_Txt_MinLv; // 0x308
	UMirTextBlock* m_Txt_MaxLv; // 0x310
	UMirButton* m_Btn_MinLv; // 0x318
	UMirButton* m_Btn_MaxLv; // 0x320
	UMM_Common_Btn_Symbol* m_C_Btn_ResetSearchRange; // 0x328
	UMM_Common_Board_Notice* m_C_Empty_Notice; // 0x330
	UMirListView* m_ListView_PartyList; // 0x338
	UMM_Common_Btn* m_C_Btn_Refresh; // 0x340
	UMirCanvasPanel* m_Canvas_List; // 0x348
	TArray<UPartySlotObj*> m_arPartySlotObj; // 0x358
};

struct UAppleLogin {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_UIAction_ItemGetWay {
	int32_t STR_NPCSTORE_GRADE1_TITLE; // 0x130
	int32_t STR_NPCSTORE_GRADE2_TITLE; // 0x134
	int32_t STR_QUEST_LOCK_MESSAGE; // 0x138
	int32_t STR_QUEST_LOCK_COMMONMESSAGE; // 0x13c
	int32_t STR_QUEST_MISSION_COMPLETE; // 0x140
	int32_t STR_QUEST_REQUEST_TITLE; // 0x144
	int32_t STR_QUEST_REQUEST_COMPLETE; // 0x148
	int32_t STRID_NOVALIDATE; // 0x14c
	int32_t STRID_NOVALIDATE_COST; // 0x150
};

struct UFirebaseFutureUser {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct UMM_Popup_GuildDonation {
	UMM_Common_Btn_Symbol* btn_close; // 0x2f0
	UMM_Common_Btn* Btn_Cancel; // 0x2f8
	UMM_Common_Btn* btn_details; // 0x300
	UMM_Common_Btn* btn_confirm; // 0x308
	UMM_Common_Btn* btn_confirm_lock; // 0x310
	TArray<UMM_Popup_GuildDonationSelectSlot*> lst_slot; // 0x318
	UMirImage* img_send; // 0x328
	UMirImage* img_recv; // 0x330
	UMirImage* img_possession; // 0x338
	UMirTextBlock* txt_send_name; // 0x340
	UMirTextBlock* txt_send; // 0x348
	UMirTextBlock* txt_recv; // 0x350
	UMirTextBlock* txt_possession; // 0x358
	UMirImage* img_donation; // 0x360
	UMirTextBlock* txt_donation_name; // 0x368
	UMirTextBlock* txt_donation; // 0x370
	UMirCanvasPanel* cp_commission; // 0x378
	UMirTextBlock* txt_commission; // 0x380
	UMM_Item_Make_Slider* item_make_slider; // 0x388
	UWidgetSwitcher* switcher; // 0x390
	UMirImage* img_dev; // 0x398
	UMirTextBlock* txt_dev_title; // 0x3a0
	UMirTextBlock* txt_dev; // 0x3a8
	UMirTextBlock* Txt_Title; // 0x3b0
	UMirTextBlock* Txt_Desc; // 0x3b8
	UMirCanvasPanel* cp_reward; // 0x3c0
	UMirImage* img_reward_exp; // 0x3c8
	UMirTextBlock* txt_reward_exp; // 0x3d0
	UMirImage* img_reward_money; // 0x3d8
	UMirTextBlock* txt_reward_money; // 0x3e0
};

struct AMM_BattleTestGameMode {
	UMaterialParameterCollection* m_pBackgroundParamCollection; // 0x330
	AMM_Monster* m_pFriendMonster; // 0x338
	AMM_CharacterPawnBase* m_pSelectTarget; // 0x340
	AMM_CharacterPawnBase* m_pLockOnTarget; // 0x348
	bool EndLevelTravel; // 0x350
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x400
	AMM_SituationDirectiveEffect* SituationDirectiveActor; // 0x408
	TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>> MapQuestArrivalDisplayActor; // 0x410
	AMM_HQPlayerReferenceActor* m_pHQPlayer; // 0x460
	AMM_PortraitCaptureActor* m_pPortraitCaptureActor; // 0x468
	UCanvasRenderTarget2D* m_pPlayerPortraitRenderTarget; // 0x470
	AContentsLightManager* m_pContentsLightManager; // 0x478
	FString MyEditorCulture; // 0x490
};

struct UMM_Dominion_Title_SlotBase {
	UMirTextBlock* m_pTxtClass; // 0x2e0
	UMirTextBlock* m_pTxtName; // 0x2e8
	UMM_Common_Btn_Symbol* m_pBtnInfo; // 0x2f0
	UMM_GuildMemberPortrait* m_pPortrait; // 0x2f8
	UMirButton* m_pBtnClick; // 0x300
};

struct UInterpTrackInstVectorMaterialParam {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<FVector> ResetVectors; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackVectorMaterialParam* InstancedTrack; // 0x58
};

struct UMirScaleBox {
	float m_fUserSpecifiedScaleOnFold; // 0x140
	UWNAndroidDeviceState* m_pDeviceStateListener; // 0x148
};

struct UMovieSceneMarginTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UDamageType {
	char bCausedByWorld : 1; // 0x28
	char bScaleMomentumByMass : 1; // 0x28
	char bRadialDamageVelChange : 1; // 0x28
	float DamageImpulse; // 0x2c
	float DestructibleImpulse; // 0x30
	float DestructibleDamageSpreadScale; // 0x34
	float DamageFalloff; // 0x38
};

struct UMaterialExpressionTransformPosition {
	FExpressionInput Input; // 0x40
	EMaterialPositionTransformSource TransformSourceType; // 0x54
	EMaterialPositionTransformSource TransformType; // 0x55
};

struct UMM_B_Request {
	int32_t m_WatchingAllQuestToStr; // 0x2f0
	UMM_CommonVerticalTabSet* m_VerticalSet; // 0x2f8
	UMirListView* m_ListView_RequestList; // 0x300
	UMirCheckBox* m_CheckCompleteQuest; // 0x308
	UMirTextBlock* m_CompleteQuest; // 0x310
	UMirTextBlock* m_Msg; // 0x318
	UPanelWidget* m_Grid_Panel; // 0x320
	UMM_Common_Board_Notice* m_pCommNotice_Empty; // 0x328
	TArray<URequestSlotObj*> m_arRequestSlotObj; // 0x330
};

struct UMM_UserEvent_GachaResultSlot {
	UMM_Slot_Inventory* m_pSlotItem; // 0x2f0
	UMirTextBlock* m_pTxtItemName; // 0x2f8
	UMirTextBlock* m_Txt_Seal; // 0x300
	UMirCanvasPanel* m_pCanvasItemName; // 0x308
	UMirImage* m_Img_Gold_Card_Squre_Fx; // 0x310
	UWidgetAnimation* m_pCardOpenAni; // 0x318
	UWidgetAnimation* m_pHeroCardOpenAni; // 0x320
	UWidgetAnimation* m_pLegendCardOpenAni; // 0x328
	UWidgetAnimation* m_pSlotStartAni; // 0x330
	UWidgetAnimation* m_pBounceAni; // 0x338
	UWidgetAnimation* m_pCardTurnOpen; // 0x340
	UGridPanel* m_Grid_Card_Turn_Effect; // 0x348
	UEffectWidgetBase* m_WE_Unsealing_Complete02; // 0x350
	UMirButton* m_pBtnClick; // 0x358
	UMirCanvasPanel* m_pPanelCover; // 0x360
	UMirImage* m_Img_Cover; // 0x368
	UScaleBox* m_pScaleSeal; // 0x370
	UGridPanel* m_Effect_Panel; // 0x378
	UEffectWidgetBase* m_Effect_Widget; // 0x380
	UWidgetAnimation* m_pGreatHeroOpenAni; // 0x388
	UWidgetAnimation* m_pHeroAppearAni; // 0x390
};

struct UMovieScene3DConstraintSection {
	FGuid ConstraintId; // 0xe0
	FMovieSceneObjectBindingID ConstraintBindingID; // 0xf0
};

struct UEnvQueryGenerator_ActorsOfClass {
	AActor* SearchedActorClass; // 0x50
	FAIDataProviderBoolValue GenerateOnlyActorsInRadius; // 0x58
	FAIDataProviderFloatValue SearchRadius; // 0x88
	UEnvQueryContext* SearchCenter; // 0xb8
};

struct UHorizontalBoxSlot {
	FMargin Padding; // 0x40
	FSlateChildSize Size; // 0x50
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UDistributionFloatUniformCurve {
	FInterpCurveVector2D ConstantCurve; // 0x38
};

struct UParticleModuleMeshRotationRateMultiplyLife {
	FRawDistributionVector LifeMultiplier; // 0x30
};

struct URadialVector {
	float Magnitude; // 0xb0
	FVector Position; // 0xb4
};

struct UTextBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UAnimCompress_RemoveEverySecondKey {
	int32_t MinKeys; // 0x50
	char bStartAtSecondKey : 1; // 0x54
};

struct UBTService_BlueprintBase {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	char bShowPropertyDetails : 1; // 0x90
	char bShowEventDetails : 1; // 0x90
};

struct UMM_PopupEdit {
	UMirCanvasPanel* cp_change; // 0x2e0
	UMirCanvasPanel* cp_reset; // 0x2e8
	UMirTextBlock* Txt_Title; // 0x2f0
	UMirEditableText* edit_txt; // 0x2f8
	UMM_Common_Btn* Btn_Cancel; // 0x300
	UMM_Common_Btn* btn_confirm; // 0x308
	UMM_Common_Btn_Symbol* btn_close; // 0x310
	UMirTextBlock* txt_custom_title_reset; // 0x318
};

struct UMirCanvasPanel {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UWidget {
	UPanelSlot* Slot; // 0x28
	DelegateProperty bIsEnabledDelegate; // 0x30
	FText ToolTipText; // 0x40
	DelegateProperty ToolTipTextDelegate; // 0x58
	UWidget* ToolTipWidget; // 0x68
	DelegateProperty ToolTipWidgetDelegate; // 0x70
	DelegateProperty VisibilityDelegate; // 0x80
	FWidgetTransform RenderTransform; // 0x90
	FVector2D RenderTransformPivot; // 0xac
	char bIsVariable : 1; // 0xb4
	char bCreatedByConstructionScript : 1; // 0xb4
	char bIsEnabled : 1; // 0xb4
	char bOverride_Cursor : 1; // 0xb4
	USlateAccessibleWidgetData* AccessibleWidgetData; // 0xb8
	char bIsVolatile : 1; // 0xc0
	EMouseCursor Cursor; // 0xc1
	EWidgetClipping Clipping; // 0xc2
	ESlateVisibility Visibility; // 0xc3
	float RenderOpacity; // 0xc4
	UWidgetNavigation* Navigation; // 0xc8
	EFlowDirectionPreference FlowDirectionPreference; // 0xd0
	TArray<UPropertyBinding*> NativeBindings; // 0xf8
};

struct UImgMediaSource {
	FFrameRate FrameRateOverride; // 0x88
	FString ProxyOverride; // 0x90
	FDirectoryPath SequencePath; // 0xa0
};

struct UMM_Option_Ability_Compare {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_PKModeSlot {
	FScriptMulticastDelegate OnSelectedModeEvent; // 0x2e0
	UButton* m_Btn_Base; // 0x2f0
	UImage* m_Image_Mode; // 0x2f8
	UTextBlock* m_TextBlock_Mode; // 0x300
	UImage* m_Image_Selected; // 0x308
	EPKModeType m_ModeType; // 0x310
	bool m_IsSelected; // 0x311
};

struct UBeamAnimNotifyState {
	int32_t EffectId; // 0x30
};

struct UMM_Auction_ComboSlot {
	UMirTextBlock* m_pTxtName; // 0x2e0
	UMirImage* m_pImgSelect; // 0x2e8
	UMirButton* m_pBtnMain; // 0x2f0
};

struct UFirebaseFutureFetchProvideResult {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct UGoogleLoginSubSystem {
	UFirebaseCredential* m_WindowFirebaseCredential; // 0x40
	UFirebaseGoogleCredential* m_GoogleCredential; // 0x48
};

struct UMM_CharAbility_Info_Fame {
	UMirTextBlock* Txt_Fame_Level; // 0x2f0
	UMirProgressBar* PB_Fame; // 0x2f8
	UMirTextBlock* Txt_Pb; // 0x300
	UMirTextBlock* Txt_Fame_Title; // 0x308
	UMirTextBlock* Txt_Fame_Value; // 0x310
	UMM_Common_Btn_Symbol* Btn_Fame_Info; // 0x318
	UMirScrollBox* ScrollBox_Fame; // 0x320
	TArray<UMM_Fame_List_MainSlot*> FameMainSlot_List; // 0x328
	int32_t m_MaxFameSlotCount; // 0x338
	int32_t m_CurrentFameSlotCount; // 0x33c
};

struct UMM_Fame_DetailInfo_Slot {
	UMirTextBlock* Txt_Title; // 0x2e0
	UMirTextBlock* Txt_Value; // 0x2e8
	int32_t STRID_POINT; // 0x2f0
};

struct UMM_New_Force_Ability_Icon {
	FLinearColor m_SelectColor; // 0x300
	FLinearColor m_MaxLevelSelectColor; // 0x310
	UMirImage* m_C_Img_Ability; // 0x328
	UMirImage* m_C_Img_Indicator; // 0x330
	UPanelWidget* m_C_Grid_Effect; // 0x338
	UPanelWidget* m_C_Img_Selected; // 0x340
	UPanelWidget* m_C_Grid_Grade; // 0x348
	UMirTextBlock* m_C_Txt_Grade; // 0x350
	UMirButton* m_C_Btn_Main; // 0x358
	UMirImage* m_SelectEffect; // 0x360
	UWidgetAnimation* m_AuiGuide; // 0x368
};

struct UEdGraphNode_Documentation {
	FString link; // 0x98
	FString Excerpt; // 0xa8
};

struct UMovieSceneSpawnSection {
	bool DefaultValue; // 0xe0
	FMovieSceneBoolChannel BoolCurve; // 0xe8
};

struct UMM_Popup_UserEvent {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x2f8
	UMirScrollBox* m_ScrollBox_Tab; // 0x300
	UMirCanvasPanel* m_Can_List; // 0x308
	UMirCanvasPanel* m_Can_Event; // 0x310
	UMM_UserEvent_Attendance_Month* m_UserEvent_Attendance_Month; // 0x318
	UMM_UserEvent_Attendance_Day* m_UserEvent_Attendance_Day; // 0x320
	UMM_UserEvent_Attendance_Day_02* m_UserEvent_Attendance_Day_02; // 0x328
	UMM_UserEvent_BattlePass* m_UserEvent_BattlePass; // 0x330
	UMM_UserEvent_Goal* m_UserEvent_Goal; // 0x338
	UMM_UserEvent_WebBrowser* m_UserEvent_WebBrowser; // 0x340
	UMM_UserEvent_Gacha* m_UserEvent_Gacha; // 0x348
	UMM_UserEvent_Benediction* m_UserEvent_Benediction; // 0x350
	UMM_UserEvent_Siege* m_UserEvent_Siege; // 0x358
	UMM_USerEvent_BP_Attendance* m_UserEvent_BattlePass_Attendance; // 0x360
	UMM_Common_Board_Notice* m_C_Empty_Notice; // 0x368
};

struct AGuardNpcSpawnTrigger {
	int32_t m_FriendMonsterID; // 0x278
	int32_t m_MonsterOrderID; // 0x27c
	ATriggerWayPoint* m_pWayPoint; // 0x280
	AMM_Monster* m_pGuardNpc; // 0x288
};

struct UMaterialExpressionChannelMaskParameter {
	EChannelMaskParameterColor MaskChannel; // 0x70
	FExpressionInput Input; // 0x74
};

struct UMM_Scroll_Dots {
	int32_t m_iDotsMaxCount; // 0x2f0
	TArray<UMirImage*> ImgList_ON; // 0x2f8
	TArray<UMirCanvasPanel*> PanelList; // 0x308
	int32_t CurrentDot; // 0x318
};

struct ANavigationTestingActor {
	UCapsuleComponent* CapsuleComponent; // 0x228
	UNavigationInvokerComponent* InvokerComponent; // 0x230
	char bActAsNavigationInvoker : 1; // 0x238
	FNavAgentProperties NavAgentProps; // 0x240
	FVector QueryingExtent; // 0x270
	ANavigationData* MyNavData; // 0x280
	FVector ProjectedLocation; // 0x288
	char bProjectedLocationValid : 1; // 0x294
	char bSearchStart : 1; // 0x294
	char bBacktracking : 1; // 0x294
	char bUseHierarchicalPathfinding : 1; // 0x294
	char bGatherDetailedInfo : 1; // 0x294
	char bDrawDistanceToWall : 1; // 0x294
	char bShowNodePool : 1; // 0x294
	char bShowBestPath : 1; // 0x294
	char bShowDiffWithPreviousStep : 1; // 0x295
	char bShouldBeVisibleInGame : 1; // 0x295
	ENavCostDisplay CostDisplayMode; // 0x298
	FVector2D TextCanvasOffset; // 0x29c
	char bPathExist : 1; // 0x2a4
	char bPathIsPartial : 1; // 0x2a4
	char bPathSearchOutOfNodes : 1; // 0x2a4
	float PathfindingTime; // 0x2a8
	float PathCost; // 0x2ac
	int32_t PathfindingSteps; // 0x2b0
	ANavigationTestingActor* OtherActor; // 0x2b8
	UNavigationQueryFilter* FilterClass; // 0x2c0
	int32_t ShowStepIndex; // 0x2c8
	float OffsetFromCornersDistance; // 0x2cc
};

struct UMM_B_DominionWanted {
	UMM_CommonVerticalTabSet* m_pTab_Vertical; // 0x2f0
	UMirListView* m_pListView_WantedList; // 0x2f8
	UMM_Common_Board_Notice* m_pEmpty_Notice; // 0x300
	UMM_Common_Btn* m_pBtnAddWanted; // 0x308
	TArray<UDominionWantedSlotObj*> m_arWantedSlotObj; // 0x310
};

struct ALandscapeStreamingProxy {
	ALandscape* LandscapeActor; // 0x510
};

struct UFieldSystemMetaDataIteration {
	int32_t Iterations; // 0xb0
};

struct UMaterialExpressionWorldPosition {
	EWorldPositionIncludedOffsets WorldPositionShaderOffset; // 0x40
};

struct UMM_Popup_Occupation_Rank {
	TArray<UMM_Occupation_Rank_List*> RankList; // 0x2f0
	UMM_Occupation_Rank_List* MyRankInfo; // 0x300
	UMM_Common_Btn_Symbol* btn_close; // 0x308
	UMM_Common_Btn* Btn_Ok; // 0x310
	UMirButton* Btn_Close_BG; // 0x318
};

struct AMatineeActor {
	UInterpData* MatineeData; // 0x218
	FName MatineeControllerName; // 0x220
	float PlayRate; // 0x228
	char bPlayOnLevelLoad : 1; // 0x22c
	char bForceStartPos : 1; // 0x22c
	float ForceStartPosition; // 0x230
	char bLooping : 1; // 0x234
	char bRewindOnPlay : 1; // 0x234
	char bNoResetOnRewind : 1; // 0x234
	char bRewindIfAlreadyPlaying : 1; // 0x234
	char bDisableRadioFilter : 1; // 0x234
	char bClientSideOnly : 1; // 0x234
	char bSkipUpdateIfNotVisible : 1; // 0x234
	char bIsSkippable : 1; // 0x234
	int32_t PreferredSplitScreenNum; // 0x238
	char bDisableMovementInput : 1; // 0x23c
	char bDisableLookAtInput : 1; // 0x23c
	char bHidePlayer : 1; // 0x23c
	char bHideHud : 1; // 0x23c
	TArray<FInterpGroupActorInfo> GroupActorInfos; // 0x240
	char bShouldShowGore : 1; // 0x250
	TArray<UInterpGroupInst*> GroupInst; // 0x258
	TArray<FCameraCutInfo> CameraCuts; // 0x268
	char bIsPlaying : 1; // 0x278
	char bReversePlayback : 1; // 0x278
	char bPaused : 1; // 0x278
	char bPendingStop : 1; // 0x278
	float InterpPosition; // 0x27c
	char ReplicationForceIsPlaying; // 0x284
	FScriptMulticastDelegate OnPlay; // 0x288
	FScriptMulticastDelegate OnStop; // 0x298
	FScriptMulticastDelegate OnPause; // 0x2a8
};

struct UTextLayoutWidget {
	FShapedTextOptions ShapedTextOptions; // 0x108
	ETextJustify Justification; // 0x10b
	ETextWrappingPolicy WrappingPolicy; // 0x10c
	char AutoWrapText : 1; // 0x10d
	float WrapTextAt; // 0x110
	FMargin Margin; // 0x114
	float LineHeightPercentage; // 0x124
};

struct UParticleModulePivotOffset {
	FVector2D PivotOffset; // 0x30
};

struct UParticleModuleLocationSkelVertSurface {
	ELocationSkelVertSurfaceSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	char bUpdatePositionEachFrame : 1; // 0x40
	char bOrientMeshEmitters : 1; // 0x40
	char bInheritBoneVelocity : 1; // 0x40
	float InheritVelocityScale; // 0x44
	FName SkelMeshActorParamName; // 0x48
	TArray<FName> ValidAssociatedBones; // 0x50
	char bEnforceNormalCheck : 1; // 0x60
	FVector NormalToCompare; // 0x64
	float NormalCheckToleranceDegrees; // 0x70
	float NormalCheckTolerance; // 0x74
	TArray<int32_t> ValidMaterialIndices; // 0x78
	char bInheritVertexColor : 1; // 0x88
	char bInheritUV : 1; // 0x88
	uint32_t InheritUVChannel; // 0x8c
};

struct UMaterialExpressionScreenPosition {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_Popup_Restore_Exp {
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x2f8
	UMM_Common_Btn* m_pBtnRestore; // 0x300
	UMM_Common_Btn_Cost* m_pBtnRestore_Item; // 0x308
	UMirTextBlock* m_pTxtTitle; // 0x310
	UMirTextBlock* m_pTxtTab_General; // 0x318
	UMirTextBlock* m_pTxtTab_Advanced; // 0x320
	UMirTextBlock* m_pTxtNum; // 0x328
	UMirTextBlock* m_pTxtRate; // 0x330
	UMirCheckBox* m_pBtnTab_General; // 0x338
	UMirCheckBox* m_pBtnTab_Advanced; // 0x340
	UMirScrollBox* m_pScrollList; // 0x348
	UMM_Common_Board_Notice* m_pEmptyNoticeBoard; // 0x350
};

struct UMovieSubtitleData {
	TArray<FMovieSubtitleInfo> SubtitleDataList; // 0x30
};

struct UMM_TotalQuickSlot_Potion {
	int32_t OpenShopBuyID; // 0x2f0
	UMM_GameOption_Slider* m_pHPAutoPercent; // 0x2f8
	UMM_GameOption_Slider* m_pMPAutoPercent; // 0x300
	UMirButton* m_pBtnOpenShop; // 0x308
	UMirButton* m_pBtnSortGrade; // 0x310
	UMirImage* m_pImgSortGrade_Up; // 0x318
	UMirImage* m_pImgSortGrade_Down; // 0x320
	UMM_SharedScrollBox* m_pScrollBox_ItemSlot; // 0x330
	UMirTextBlock* m_pTxtItemName; // 0x338
	UMM_Common_Btn* m_pBtnUseItem; // 0x340
	UMM_Common_Board_Notice* m_pCommNotice; // 0x348
	UMirTextBlock* m_pTxtShop; // 0x350
	UMirTextBlock* m_pTxtSortGrade; // 0x358
};

struct UMM_Dungeon_List_Slot {
	int32_t NeedLvStrID; // 0x2f0
	float NormalOpacity; // 0x2f4
	float DisableOpacity; // 0x2f8
	UMirTextBlock* Txt_Title; // 0x300
	UMirImage* Img_Thumbnail; // 0x308
	UMirImage* Img_Lock; // 0x310
	UMirImage* Img_DisableBG; // 0x318
	UMirImage* Img_Select; // 0x320
	UMirImage* Img_Indicaotr; // 0x328
	UMirImage* Img_QuestIcon; // 0x330
	UMirTextBlock* txt_level; // 0x338
	UMirTextBlock* Txt_LevelNum; // 0x340
	UMirRichTextBlock* Txt_NeedLevel; // 0x348
	UMirImage* ImgBossIcon; // 0x350
	UMirImage* imgBattle; // 0x358
};

struct UMM_SpecialAbility {
	UPanelWidget* m_SpecialAbilityGrid; // 0x2e0
	UMirTextBlock* m_SpecialAbilityName; // 0x2e8
	UMirRichTextBlock* m_SpecialAbilityDesc; // 0x2f0
	int32_t m_SkillPassiveID; // 0x2f8
	int32_t STR_MSGID_PASSIVE; // 0x2fc
};

struct UMovieSceneFloatTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UInterpFilter {
	FString Caption; // 0x28
};

struct UGameplayTask_TimeLimitedExecution {
	FScriptMulticastDelegate OnFinished; // 0x68
	FScriptMulticastDelegate OnTimeExpired; // 0x78
};

struct UParticleModuleSizeBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct USynthComponent {
	char bAutoDestroy : 1; // 0x220
	char bStopWhenOwnerDestroyed : 1; // 0x220
	char bAllowSpatialization : 1; // 0x220
	char bOverrideAttenuation : 1; // 0x220
	char bOutputToBusOnly : 1; // 0x224
	USoundAttenuation* AttenuationSettings; // 0x228
	FSoundAttenuationSettings AttenuationOverrides; // 0x230
	USoundConcurrency* ConcurrencySettings; // 0x520
	TSet<USoundConcurrency*> ConcurrencySet; // 0x528
	USoundClass* SoundClass; // 0x578
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x580
	USoundSubmix* SoundSubmix; // 0x588
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x590
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x5a0
	FSoundModulation Modulation; // 0x5b0
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x5c0
	char bIsUISound : 1; // 0x5d0
	char bIsPreviewSound : 1; // 0x5d0
	int32_t EnvelopeFollowerAttackTime; // 0x5d4
	int32_t EnvelopeFollowerReleaseTime; // 0x5d8
	FScriptMulticastDelegate OnAudioEnvelopeValue; // 0x5e0
	USynthSound* Synth; // 0x610
	UAudioComponent* AudioComponent; // 0x618
};

struct USceneCaptureTool {
	TWeakObjectPtr<ADirectionalLight> DirLight; // 0x2e0
	USceneCaptureTool_Slider* Slider_CameraRotator; // 0x2e8
	USceneCaptureTool_Slider* Slider_DirLight; // 0x2f0
	UComboBoxString* ComboBox_ChangePC; // 0x2f8
	UComboBoxString* ComboBox_ChangeUI; // 0x300
	UButton* Btn_Reset_01; // 0x308
	UButton* Btn_Reset_02; // 0x310
	UButton* Btn_Reset_03; // 0x318
	UButton* Btn_Save_01; // 0x320
	UButton* Btn_Save_02; // 0x328
	UButton* Btn_Save_03; // 0x330
	UMirTextBlock* Txt_Location; // 0x338
	UMirTextBlock* Txt_Rotator; // 0x340
	UMirTextBlock* Txt_FOV; // 0x348
	UMirTextBlock* Txt_Sensitivity; // 0x350
	USlider* Slider_Opacity; // 0x358
	UMirTextBlock* Txt_Opacity; // 0x360
};

struct UMM_DungeonCommonTitle3 {
	UMirImage* imgBoss[0x5]; // 0x2e0
};

struct UMM_GM_Msg {
	float m_fMoveSpeed; // 0x2f0
	float m_fShowTime; // 0x2f4
	UMirRichTextBlock* m_RTxt_Message; // 0x2f8
	UMirCanvasPanel* m_pPanelArea; // 0x300
	UMirImage* m_Img_Bg; // 0x308
};

struct UAIResource_Logic {
	int32_t ManualResourceID; // 0x28
	uint8_t AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UAnimBlueprintGeneratedClass {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x308
	USkeleton* TargetSkeleton; // 0x318
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x320
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x330
	TArray<FName> SyncGroupNames; // 0x400
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x410
	TMap<FName, FGraphAssetPlayerInformation> GraphAssetPlayerInformation; // 0x420
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x470
};

struct UPaperFlipbookComponent {
	UPaperFlipbook* SourceFlipbook; // 0x440
	UMaterialInterface* Material; // 0x448
	float PlayRate; // 0x450
	char bLooping : 1; // 0x454
	char bReversePlayback : 1; // 0x454
	char bPlaying : 1; // 0x454
	float AccumulatedTime; // 0x458
	int32_t CachedFrameIndex; // 0x45c
	FLinearColor SpriteColor; // 0x460
	UBodySetup* CachedBodySetup; // 0x470
	FScriptMulticastDelegate OnFinishedPlaying; // 0x478
};

struct UMM_CrowdControlComponent {
	AMM_CharacterPawnBase* m_pCharBase; // 0xb0
	TMap<int32_t, FCrowdControlData> m_mapCCData; // 0xb8
};

struct UNavigationInvokerComponent {
	float TileGenerationRadius; // 0xb0
	float TileRemovalRadius; // 0xb4
};

struct UMM_SiegeObserver_Situationboard {
	UMM_Occupation_Minimap* m_SiegeMinimap; // 0x300
	UMM_Occupation_BattleFieldInfo* m_SiegeBattleFieldInfo; // 0x308
	UMirTextBlock* m_Txt_Offense_CombatPoint; // 0x310
	UMirTextBlock* m_Txt_Defense_CombatPoint; // 0x318
	UMirImage* m_Img_Offense_CombatPoint; // 0x320
	UMirProgressBar* m_Progress_Defense_CombatPoint; // 0x328
	UMirTextBlock* m_Txt_Offense_Warrior; // 0x330
	UMirTextBlock* m_Txt_Defense_Warrior; // 0x338
	UMirImage* m_Img_Offense_Warrior; // 0x340
	UMirProgressBar* m_Progress_Defense_Warrior; // 0x348
	UMirTextBlock* m_Txt_Offense_Magician; // 0x350
	UMirTextBlock* m_Txt_Defense_Magician; // 0x358
	UMirImage* m_Img_Offense_Magician; // 0x360
	UMirProgressBar* m_Progress_Defense_Magician; // 0x368
	UMirTextBlock* m_Txt_Offense_Taoist; // 0x370
	UMirTextBlock* m_Txt_Defense_Taoist; // 0x378
	UMirImage* m_Img_Offense_Taoist; // 0x380
	UMirProgressBar* m_Progress_Defense_Taoist; // 0x388
	UMirTextBlock* m_Txt_Offense_Assassin; // 0x390
	UMirTextBlock* m_Txt_Defense_Assassin; // 0x398
	UMirImage* m_Img_Offense_Assassin; // 0x3a0
	UMirProgressBar* m_Progress_Defense_Assassin; // 0x3a8
	UMirTextBlock* m_Txt_Offense_Berserker; // 0x3b0
	UMirTextBlock* m_Txt_Defense_Berserker; // 0x3b8
	UMirImage* m_Img_Offense_Berserker; // 0x3c0
	UMirProgressBar* m_Progress_Defense_Berserker; // 0x3c8
};

struct APatchActor {
	int32_t m_iActiveDownloadPakMax; // 0x390
	UMM_PatchWidget* m_PatchWidget; // 0x3c0
	AMiniGame_ManagerActor* m_MiniGameActor; // 0x3f0
};

struct AGuardNpcEnterCheckTrigger {
	AGuardNpcSpawnTrigger* m_pFriendNpcTrigger; // 0x288
	UBoxComponent* m_pBoxCollision; // 0x290
	AActor* m_pDelayInitActor; // 0x298
};

struct UWidgetNavigation {
	FWidgetNavigationData Up; // 0x28
	FWidgetNavigationData Down; // 0x4c
	FWidgetNavigationData Left; // 0x70
	FWidgetNavigationData Right; // 0x94
	FWidgetNavigationData Next; // 0xb8
	FWidgetNavigationData Previous; // 0xdc
};

struct UMM_Customizing_Preset {
	UVerticalBox* m_pVerticalBox; // 0x2e0
	UWrapBox* m_pWrapBox; // 0x2e8
	TArray<UMM_Customizing_PresetItem*> m_PresetArray; // 0x2f0
};

struct ADebugCameraHUD {
	APlayerController* PlayerOwner; // 0x218
	char bLostFocusPaused : 1; // 0x220
	char bShowHUD : 1; // 0x220
	char bShowDebugInfo : 1; // 0x220
	int32_t CurrentTargetIndex; // 0x224
	char bShowHitBoxDebugInfo : 1; // 0x228
	char bShowOverlays : 1; // 0x228
	char bEnableDebugTextShadow : 1; // 0x228
	TArray<AActor*> PostRenderedActors; // 0x230
	TArray<FName> DebugDisplay; // 0x248
	TArray<FName> ToggledDebugCategories; // 0x258
	UCanvas* Canvas; // 0x268
	UCanvas* DebugCanvas; // 0x270
	TArray<FDebugTextInfo> DebugTextList; // 0x278
	AActor* ShowDebugTargetDesiredClass; // 0x288
	AActor* ShowDebugTargetActor; // 0x290
};

struct UPaperTileSet {
	FIntPoint TileSize; // 0x28
	UTexture2D* TileSheet; // 0x30
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FIntMargin BorderMargin; // 0x48
	FIntPoint PerTileSpacing; // 0x58
	FIntPoint DrawingOffset; // 0x60
	int32_t WidthInTiles; // 0x68
	int32_t HeightInTiles; // 0x6c
	int32_t AllocatedWidth; // 0x70
	int32_t AllocatedHeight; // 0x74
	TArray<FPaperTileMetadata> PerTileData; // 0x78
	TArray<FPaperTileSetTerrain> Terrains; // 0x88
	int32_t TileWidth; // 0x98
	int32_t TileHeight; // 0x9c
	int32_t Margin; // 0xa0
	int32_t Spacing; // 0xa4
};

struct UMM_Popup_Addressbook_TabSlot {
	int32_t STRING_TAB_NAME_ID; // 0x2f0
	EMail_AddressbookTab ETabType; // 0x2f4
	UMirImage* m_Img_Selected; // 0x2f8
	UMirTextBlock* m_Txt_TabName; // 0x300
	UMirButton* m_Btn_Main; // 0x308
};

struct UMM_Popup_Contents_Notice {
	float m_fShowTime; // 0x2e0
	UWidgetAnimation* m_AniStart; // 0x2e8
	UWidgetAnimation* m_AniEnd; // 0x2f0
	UMirImage* m_Img_Symbol; // 0x308
	UMirTextBlock* m_Txt_Title; // 0x310
	UMirTextBlock* m_Txt_Description; // 0x318
};

struct UMM_DominionWanted_Slot {
	UMirImage* m_Img_CharacterClass; // 0x2e8
	UMirTextBlock* m_Txt_CharacterName; // 0x2f0
	UMirTextBlock* m_Txt_CombatPoint; // 0x2f8
	UMirImage* m_pImgOnline; // 0x300
	UMirTextBlock* m_TxtOnline; // 0x308
	UMM_GuildIcon* m_GuildIcon; // 0x310
	UMirTextBlock* m_Txt_GuildName; // 0x318
	UMirTextBlock* m_Txt_GuildEmpty; // 0x320
	UMirImage* m_Img_RewardCost; // 0x328
	UMirTextBlock* m_Txt_RewardCost; // 0x330
	UWidgetSwitcher* m_WidgetSwitcher_Chase; // 0x338
	UMirTextBlock* m_Txt_RemainTime; // 0x340
	UMirImage* m_Img_Disable; // 0x348
	UMirButton* m_pBtnClick; // 0x350
};

struct UMM_Item_Make_Special_Popup {
	UMirTextBlock* m_Txt_None; // 0x2f0
	UMirTextBlock* m_Item_Name; // 0x2f8
	UMM_Common_Btn* m_Regist_Complete_Btn; // 0x300
	UMM_Common_Btn_Symbol* m_Close_Btn; // 0x308
	TArray<UMM_MakeItem_Slot_Special*> m_Material_Slot_Array; // 0x310
	UMM_SharedScrollBox* m_ScrollBox; // 0x320
	TArray<UMM_Slot_Inventory*> InventoryList; // 0x328
	uint32_t mMakeItemID; // 0x338
	uint32_t SPECIAL_MATERIAL_TITLE_NAME; // 0x33c
	uint32_t SPECIAL_MATERIAL_WEAPON; // 0x340
	uint32_t SPECIAL_MATERIAL_ARMOR; // 0x344
	uint32_t SPECIAL_MATERIAL_ACCESSORY; // 0x348
};

struct UMM_RelationQuestMsg {
	UMirImage* m_Img_Icon; // 0x318
	UMirImage* m_Img_Rare_Icon; // 0x320
	UMirImage* m_Img_Hero_Icon; // 0x328
	UMirImage* m_Img_Legend_Icon; // 0x330
};

struct UMaterialExpressionDecalDerivative {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UAITask {
	AAIController* OwnerController; // 0x68
};

struct ALightmassPortal {
	ULightmassPortalComponent* PortalComponent; // 0x218
};

struct UParticleModuleParameterBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct AMonsterMoveTrigger {
	int32_t m_MonsterOrderID; // 0x278
	TArray<AMM_Monster*> m_MonsterArray; // 0x280
};

struct UCompositeCurveTable {
	TArray<UCurveTable*> ParentTables; // 0xa0
	TArray<UCurveTable*> OldParentTables; // 0xb0
};

struct ACameraControlBase {
	ECollisionChannel ProbeChannel; // 0x780
	float StartCollisionGap; // 0x784
	float CollisionSphere; // 0x788
	float CollisionPullSpeed; // 0x78c
	float CollisionReturnSpeed; // 0x790
	bool m_bDoCollision; // 0x794
	UMaterialParameterCollection* DarkChangeCollection; // 0x898
	UMaterialParameterCollection* FlyDashCollection; // 0x8a0
	TArray<UParticleSystem*> m_pFlyDashParticle; // 0x8a8
};

struct UMM_B_XdracoSealing {
	UMM_Common_Board_Notice* m_pNotice; // 0x2f0
	UMM_CommonHorizontalTabSet* m_pMainMenuTab; // 0x2f8
	UMM_CommonVerticalTabSet* m_pSubMenuTab; // 0x300
	UMM_Common_ToggleBtn* m_pToggle_MakeFilter; // 0x308
	UCanvasPanel* m_pPanel_SealingInvenRect; // 0x310
	UMM_Xdraco_SealingInventory* m_pSealing_List; // 0x318
	UMM_Xdraco_SealingInfo* m_pSealing_Info; // 0x320
};

struct UMaterialExpressionCustomOutput {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UAnimSequence {
	int32_t NumFrames; // 0xa8
	TArray<FTrackToSkeletonMap> TrackToSkeletonMapTable; // 0xb0
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd0
	EAdditiveAnimationType AdditiveAnimType; // 0x1a8
	EAdditiveBasePoseType RefPoseType; // 0x1a9
	UAnimSequence* RefPoseSeq; // 0x1b0
	int32_t RefFrameIndex; // 0x1b8
	FName RetargetSource; // 0x1bc
	EAnimInterpolationType Interpolation; // 0x1c4
	bool bEnableRootMotion; // 0x1c5
	ERootMotionRootLock RootMotionRootLock; // 0x1c6
	bool bForceRootLock; // 0x1c7
	bool bUseNormalizedRootMotionScale; // 0x1c8
	bool bRootMotionSettingsCopiedFromMontage; // 0x1c9
	TArray<FAnimSyncMarker> AuthoredSyncMarkers; // 0x1d0
};

struct UTexture {
	FGuid LightingGuid; // 0x48
	int32_t LODBias; // 0x58
	TextureCompressionSettings CompressionSettings; // 0x5c
	TextureFilter Filter; // 0x5d
	ETextureMipLoadOptions MipLoadOptions; // 0x5e
	TextureGroup LODGroup; // 0x5f
	char SRGB : 1; // 0x60
	char bNoTiling : 1; // 0x60
	char VirtualTextureStreaming : 1; // 0x60
	char CompressionYCoCg : 1; // 0x60
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x68
};

struct AWindDirectionalSource {
	UWindDirectionalSourceComponent* Component; // 0x218
};

struct UMM_HudBtnAction {
	TArray<FBrushObject> m_arrBrushActionBG; // 0x2e0
	TArray<FBrushObject> m_arrBrushAction; // 0x2f0
	FLinearColor m_CooltimeColorOpacity; // 0x300
	bool m_OnRoundCoolTime; // 0x310
	UWidgetAnimation* m_AniPress; // 0x318
	int32_t m_iEffectID_Open; // 0x320
	int32_t m_iEffectID_Continue; // 0x324
	int32_t m_iEffectID_EndCooltime; // 0x328
	int32_t m_iEffectID_UseOK; // 0x32c
	int32_t m_iEffectID_Touched; // 0x330
	UImage* m_pImgActionBG; // 0x338
	UImage* m_pImgAction; // 0x340
	UImage* m_pImgCooltime; // 0x348
	UMirButton* m_pBtnAction; // 0x350
	UPanelWidget* m_pGridEffect; // 0x358
	UEffectWidgetBase* m_pContinueEffect; // 0x360
	UEffectWidgetBase* m_pEndCooltimeEffect; // 0x368
	UImage* m_pImg_RoundCooltime; // 0x380
	UPanelWidget* m_pGrd_RoundCooltime; // 0x388
};

struct UMaterialExpressionTruncate {
	FExpressionInput Input; // 0x40
};

struct UMM_Collect_TierList {
	int32_t m_TierStrID; // 0x2e0
	int32_t m_AllStrID; // 0x2e4
	int32_t m_OneTierStrID; // 0x2e8
	int32_t m_TwoTierStrID; // 0x2ec
	int32_t m_ThreeTierStrID; // 0x2f0
	int32_t m_FourTierStrID; // 0x2f4
	UMirTextBlock* m_Txt_Title; // 0x2f8
	UMM_Auction_Enchant_ComboList* m_CollectTierList; // 0x300
};

struct AMM_MainPC {
	APlayerController* m_pPlayerController; // 0xc08
	UObject* m_pRefVehicleMesh; // 0xc10
	UObject* m_pRefVehicleAnimBP; // 0xc18
	UParticleSystemComponent* m_TargetLockOnEffect; // 0xc20
	UParticleSystemComponent* m_pSharedTargetEffect; // 0xc28
	float NearAttackRange; // 0xc98
	AMM_AutoBehaviorAIController* m_pAutoBehaviorAIController; // 0xcd0
	bool isWallOverlap; // 0xd36
	UMM_GhostTrailComponent* m_GhostComponet; // 0xdc0
	UMM_GuideDecalComponent* GuideDecalComponent; // 0xdc8
	UParticleSystemComponent* SubTargetLineEffect; // 0xeb0
	UParticleSystemComponent* MainTargetLineEffect; // 0xeb8
	EAutoMoveState OldAutoMoveState; // 0xec0
	EAutoMoveState CurrentAutoMoveState; // 0xec1
	EBehaviorType OldBehaviorType; // 0xecf
	EBehaviorType BehaviorType; // 0xed0
	float DarkTime; // 0xee0
	UCurveFloat* DarkCurve; // 0xee8
};

struct UMM_ItemSynthesis {
	int32_t STRING_ID_GREAT_SUCCESS; // 0x2f0
	int32_t STRING_ID_SUCCESS; // 0x2f4
	TArray<int32_t> arICON_ITEM_GRADE; // 0x2f8
	FLinearColor AURAEFFECT_COLOR_GRADE_EPIC; // 0x308
	FLinearColor AURAEFFECT_COLOR_GRADE_LEGNED; // 0x318
	int32_t STRING_ID_POINT_DEACTIVE; // 0x328
	int32_t STRING_ID_POINT_LACK; // 0x32c
	int32_t STRING_ID_POINT_ENOUGH; // 0x330
	int32_t STRING_ID_CENSER_NAME_NONE; // 0x334
	int32_t STRING_ID_CENSER_NAME_EPIC; // 0x338
	int32_t STRING_ID_CENSER_NAME_LEGNED; // 0x33c
	UMM_ItemSynthesis_List* m_arItemSynthesisList[0xa]; // 0x340
	UMM_Common_Btn* m_C_Btn_AutoReg; // 0x390
	UMM_Common_Btn* m_C_Btn_Make; // 0x398
	UMirTextBlock* m_Txt_Desc; // 0x3a0
	UMirCanvasPanel* m_Can_Censer; // 0x3a8
	UMirCanvasPanel* m_Can_AuraEffect; // 0x3b0
	UMirCanvasPanel* m_Can_ItemGrade_Effect; // 0x3b8
	UMirImage* m_Img_IcnItemGrade; // 0x3c0
	UMirImage* m_Img_AuraEffect_Left; // 0x3c8
	UMirImage* m_Img_AuraEffect_Right; // 0x3d0
	UMirButton* m_Btn_PointReward; // 0x3d8
	UMirRichTextBlock* m_RTxt_Point; // 0x3e0
	UMirTextBlock* m_Txt_Desc_2; // 0x3e8
	UMirRichTextBlock* m_RTxt_CenserGrade; // 0x3f0
	UMirImage* m_Img_CenserHead; // 0x3f8
	UMirImage* m_Img_CenserBody; // 0x400
	UMirImage* m_Img_Indicator; // 0x408
	UImage* m_Img_ItemGrade_Epic; // 0x410
	UImage* m_Img_ItemGrade_Legned; // 0x418
	UMirScrollBox* m_ScrollBox; // 0x420
	UWidgetAnimation* m_AniPointUP; // 0x428
};

struct UMaterialExpressionRuntimeVirtualTextureOutput {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Specular; // 0x54
	FExpressionInput Roughness; // 0x68
	FExpressionInput Normal; // 0x7c
	FExpressionInput WorldHeight; // 0x90
	FExpressionInput Opacity; // 0xa4
};

struct UMM_PopupExpBooster {
	UMirTextBlock* Txt_Title; // 0x2e0
	UMirRichTextBlock* txt_time; // 0x2e8
	UMirRichTextBlock* txt_2; // 0x2f0
	UMirTextBlock* txt_exp_booster; // 0x2f8
	UMirRichTextBlock* txt_active; // 0x300
	UMM_Common_Btn_Symbol* btn_close; // 0x308
	UMirScrollBox* sb_status; // 0x310
	UMM_Common_Btn* btn_go_to_shop; // 0x318
};

struct UPopup_DungeonReward_Info3 {
	UMirTextBlock* txtDifficulty; // 0x2e0
	UMirImage* arImgDifficultStar[0x5]; // 0x2e8
	UMirTextBlock* txtFixedDeadNum; // 0x310
	UMirTextBlock* txtDeadNum; // 0x318
	UMirCanvasPanel* canReward; // 0x320
};

struct UStreamableRenderAsset {
	double ForceMipLevelsToBeResidentTimestamp; // 0x28
	int32_t NumCinematicMipLevels; // 0x30
	int32_t StreamingIndex; // 0x34
	int32_t CachedCombinedLODBias; // 0x38
	char CachedNumResidentLODs; // 0x3c
	char bCachedReadyForStreaming : 1; // 0x3d
	char NeverStream : 1; // 0x3d
	char bGlobalForceMipLevelsToBeResident : 1; // 0x3d
	char bIsStreamable : 1; // 0x3d
	char bHasStreamingUpdatePending : 1; // 0x3d
	char bForceMiplevelsToBeResident : 1; // 0x3d
	char bIgnoreStreamingMipBias : 1; // 0x3d
	char bUseCinematicMipLevels : 1; // 0x3d
};

struct UStaticMeshComponent {
	int32_t ForcedLodModel; // 0x440
	int32_t PreviousLODLevel; // 0x444
	int32_t MinLOD; // 0x448
	int32_t SubDivisionStepSize; // 0x44c
	UStaticMesh* StaticMesh; // 0x450
	FColor WireframeColorOverride; // 0x458
	char bEvaluateWorldPositionOffset : 1; // 0x45c
	char bOverrideWireframeColor : 1; // 0x45c
	char bOverrideMinLOD : 1; // 0x45c
	char bOverrideNavigationExport : 1; // 0x45c
	char bForceNavigationObstacle : 1; // 0x45c
	char bDisallowMeshPaintPerInstance : 1; // 0x45c
	char bIgnoreInstanceForTextureStreaming : 1; // 0x45c
	char bOverrideLightMapRes : 1; // 0x45c
	char bCastDistanceFieldIndirectShadow : 1; // 0x45d
	char bOverrideDistanceFieldSelfShadowBias : 1; // 0x45d
	char bUseSubDivisions : 1; // 0x45d
	char bUseDefaultCollision : 1; // 0x45d
	char bForceReceiveCSMForLM : 1; // 0x45d
	char bReverseCulling : 1; // 0x45d
	int32_t OverriddenLightMapRes; // 0x460
	float DistanceFieldIndirectShadowMinVisibility; // 0x464
	float DistanceFieldSelfShadowBias; // 0x468
	float StreamingDistanceMultiplier; // 0x46c
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x470
	TArray<FStreamingTextureBuildInfo> StreamingTextureData; // 0x480
	FLightmassPrimitiveSettings LightmassSettings; // 0x490
};

struct UMM_Achievement_Option_Slot {
	UMirTextBlock* Txt_OptionName; // 0x2e0
	UMirTextBlock* Txt_OptionValue; // 0x2e8
};

struct UMM_Common_GuideBtn {
	int32_t GuideId; // 0x2f0
	bool UseAutoContentsType; // 0x2f4
	UMirButton* m_Btn_Main; // 0x2f8
	UMirImage* m_Img_Icon; // 0x300
};

struct UMMUIDirectionalLightComponent {
	UMaterialParameterCollection* UICharacterMaterialParameterCollection; // 0x220
	FColor LightColor; // 0x228
	float LightIntensity; // 0x22c
	bool IsSecondLight; // 0x230
};

struct UParticleModuleMeshRotationRateOverLife {
	FRawDistributionVector RotRate; // 0x30
	char bScaleRotRate : 1; // 0x78
};

struct UMM_HudMagicSquareMenu {
	int32_t m_iStringID_BtnExit; // 0x2f0
	int32_t m_iStringID_BtnCancel; // 0x2f4
	int32_t m_iStringID_ExitMessage; // 0x2f8
	int32_t m_iStringID_TimerNotiTitle; // 0x2fc
	int32_t m_iStringID_TimerNotiMessage; // 0x300
	int32_t m_iStringID_Move; // 0x304
	int32_t m_iNextMoveEffectID; // 0x308
	ULimitTimerWidget* m_pLimitTimerWidget; // 0x310
	UCanvasPanel* canNextMove; // 0x318
	UCanvasPanel* canExit; // 0x320
	UCanvasPanel* canDrop; // 0x328
	UCanvasPanel* canInfo; // 0x330
	UButton* m_pBtn_NextMove; // 0x338
	UButton* m_pBtn_Exit; // 0x340
	UMirTextBlock* m_pTextChangeTimer; // 0x348
	UButton* m_pBtn_Info; // 0x350
	UMM_Common_Btn_Symbol* m_pBtn_Drop; // 0x358
	UPanelWidget* m_pGridEffect; // 0x360
	UEffectWidgetBase* m_pEffectNextMove; // 0x368
	UMirButton* btnAddTime; // 0x370
	UWidgetAnimation* aniRotation; // 0x378
};

struct APrecomputedVisibilityVolume {
	EBrushType BrushType; // 0x218
	FColor BrushColor; // 0x21c
	int32_t PolyFlags; // 0x220
	char bColored : 1; // 0x224
	char bSolidWhenSelected : 1; // 0x224
	char bPlaceableFromClassBrowser : 1; // 0x224
	char bNotForClientOrServer : 1; // 0x224
	UModel* Brush; // 0x228
	UBrushComponent* BrushComponent; // 0x230
	char bInManipulation : 1; // 0x238
	TArray<FGeomSelection> SavedSelections; // 0x240
};

struct UInterpTrackInstMove {
	FVector ResetLocation; // 0x28
	FRotator ResetRotation; // 0x34
};

struct UDistributionVectorUniformCurve {
	FInterpCurveTwoVectors ConstantCurve; // 0x38
	char bLockAxes1 : 1; // 0x50
	char bLockAxes2 : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes[0x2]; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x56
	char bUseExtremes : 1; // 0x5c
};

struct UMaterialExpressionSceneDepth {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput Coordinates; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct ASkeletalMeshActor {
	char bShouldDoAnimNotifies : 1; // 0x220
	char bWakeOnLevelStart : 1; // 0x220
	USkeletalMeshComponent* SkeletalMeshComponent; // 0x228
	USkeletalMesh* ReplicatedMesh; // 0x230
	UPhysicsAsset* ReplicatedPhysAsset; // 0x238
	UMaterialInterface* ReplicatedMaterial0; // 0x240
	UMaterialInterface* ReplicatedMaterial1; // 0x248
};

struct USoundNodeAssetReferencer {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct UMaterialExpressionParticleColor {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USoundNodeQualityLevel {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct UMM_CheckBox_Switch {
	UWidgetSwitcher* m_WidgetSwitcher; // 0x2f0
	UMirButton* m_Btn_Main; // 0x2f8
	UMirImage* m_ImgOn; // 0x300
	UMirImage* m_ImgOff; // 0x308
	UMirTextBlock* m_Txt_On; // 0x310
	UMirTextBlock* m_Txt_Off; // 0x318
	ESwitchBox m_ESwitchStatus; // 0x320
};

struct UMM_Hud_ServerVisitMenu {
	UCanvasPanel* m_CanvasPanel; // 0x2f0
	UTextBlock* m_Txt_LimitTime; // 0x2f8
	UTextBlock* m_Txt_Time; // 0x300
	UTextBlock* m_Txt_LifeCount; // 0x308
	UButton* m_Btn_Exit; // 0x310
	UButton* m_Btn_ShowVisitMembers; // 0x318
	UButton* m_Btn_ShowWaypoints; // 0x320
	UWidgetAnimation* m_Ani_Limit_Loop; // 0x328
};

struct UMovieSceneBoolSection {
	bool DefaultValue; // 0xe0
	FMovieSceneBoolChannel BoolCurve; // 0xe8
};

struct UBrushComponent {
	UModel* Brush; // 0x418
	UBodySetup* BrushBodySetup; // 0x420
};

struct UMovieSceneParticleSection {
	FMovieSceneParticleChannel ParticleKeys; // 0xe0
};

struct ULevelCapture {
	bool bAutoStartCapture; // 0x220
	FGuid PrerequisiteActorId; // 0x22c
};

struct UMM_B_MagicStone {
	UMM_NewInventory_MagicStone* inventory; // 0x2f0
	UMM_Common_Btn* btn_equip; // 0x2f8
	UMM_Common_Btn* btn_go_to_compose; // 0x300
	UMM_MagicStoneEquip* magic_stone_equip; // 0x308
	UMM_Popup_MagicStone_Attribute* popup_attribute; // 0x310
	UMM_SortListBtn* btn_sort; // 0x318
	UMM_MagicStoneDetailInfo* detail_info; // 0x320
	UMirTextBlock* txt_select_deckIndex; // 0x328
	UMirTextBlock* txt_select_deck; // 0x330
	UMirTextBlock* txt_forge; // 0x338
	UMirButton* btn_deck; // 0x340
	UMirButton* btn_transcend; // 0x348
	UVerticalBox* transcend_slot; // 0x350
	UMM_MagicStoneQuickTab* quick_tab; // 0x358
	UMirCanvasPanel* cp_quick_tab; // 0x360
	UMirCanvasPanel* cp_quick_tab_bg; // 0x368
};

struct UMM_Exchange_Tab_HorizonBtn {
	UMirTextBlock* m_Txt_TabName; // 0x2f0
	UMirImage* m_Img_Selected; // 0x2f8
	UMirButton* m_Btn_Main; // 0x300
	UTutorialHighlightWidget* m_TutorialHighLight; // 0x308
};

struct UParticleModuleSize_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct UMM_PopupGuildGiveOtherSlot {
	UMirTextBlock* txt_relation; // 0x2e0
	UMirImage* img_online; // 0x2e8
	UMM_GuildMemberPortrait* Portrait; // 0x2f0
	UMirTextBlock* txt_nickname; // 0x2f8
	UMirTextBlock* txt_custom_title; // 0x300
	UMirTextBlock* txt_level; // 0x308
	UMirImage* img_class; // 0x310
	UMirTextBlock* txt_class; // 0x318
	UMirTextBlock* txt_combat_power; // 0x320
	UMirButton* btn_select; // 0x328
	UMirImage* img_guild_symbol; // 0x330
	UMirImage* img_guild_frame; // 0x338
	UMirTextBlock* txt_guild_name; // 0x340
	UMirCheckBox* cb_selected; // 0x348
};

struct UMM_UserEvent_Tab_Slot {
	UMirCanvasPanel* m_Can_Tab; // 0x2f0
	UMM_UserEvent_WebBanner* m_WebBanner; // 0x2f8
	UMirTextBlock* m_Txt_Name; // 0x300
	UMirImage* m_Img_Thumb; // 0x308
	UMirImage* m_Img_Alarm; // 0x310
	UMirImage* m_Img_Selected; // 0x318
	UMirImage* m_Img_Banner; // 0x320
	UMirButton* m_Btn_Main; // 0x328
};

struct USoundNodeWavePlayer {
	USoundWave* SoundWaveAssetPtr; // 0x40
	USoundWave* SoundWave; // 0x68
	char bLooping : 1; // 0x70
};

struct UComboWidget {
	FLinearColor Color_2; // 0x910
	FLinearColor Color_11; // 0x920
	FLinearColor Color_101; // 0x930
	FSlateBrush Number_1; // 0x940
	FSlateBrush Number_2; // 0x9c8
	FSlateBrush Number_3; // 0xa50
	FSlateBrush Number_4; // 0xad8
	FSlateBrush Number_5; // 0xb60
	FSlateBrush Number_6; // 0xbe8
	FSlateBrush Number_7; // 0xc70
	FSlateBrush Number_8; // 0xcf8
	FSlateBrush Number_9; // 0xd80
	FSlateBrush Number_10; // 0xe08
	UWidgetAnimation* m_pAnimFadeIn; // 0xe90
	UWidgetAnimation* m_pAnimChangeNum; // 0xe98
	UWidgetAnimation* m_pAnimFadeOut; // 0xea0
	UMirImage* m_Img_Combo; // 0xee8
};

struct UListView {
	EOrientation Orientation; // 0x7c8
	ESelectionMode SelectionMode; // 0x7c9
	EConsumeMouseWheel ConsumeMouseWheel; // 0x7ca
	bool bClearSelectionOnClick; // 0x7cb
	bool bIsFocusable; // 0x7cc
	float EntrySpacing; // 0x7d0
	bool bReturnFocusToSelection; // 0x7d4
	TArray<UObject*> listItems; // 0x7d8
	FScriptMulticastDelegate BP_OnEntryInitialized; // 0x7f8
	FScriptMulticastDelegate BP_OnItemClicked; // 0x808
	FScriptMulticastDelegate BP_OnItemDoubleClicked; // 0x818
	FScriptMulticastDelegate BP_OnItemIsHoveredChanged; // 0x828
	FScriptMulticastDelegate BP_OnItemSelectionChanged; // 0x838
	FScriptMulticastDelegate BP_OnItemScrolledIntoView; // 0x848
};

struct UMM_Costume_SlideBar {
	float SLIDER_MAX_SIZE; // 0x2f0
	float SliderCorrectionValue; // 0x2f4
	ESLIDEBAR_TYPE SlideBar_Channel; // 0x2f8
	UMirButton* Btn_Minus; // 0x300
	UMirButton* Btn_Plus; // 0x308
	UMM_UI_Drag* UIDrag_Slide; // 0x310
	UMirTextBlock* Txt_Value; // 0x318
	UCanvasPanel* m_SliderBG_Parent; // 0x320
	USpacer* m_SliderBG; // 0x328
	int32_t m_SliderValue; // 0x330
	float m_ControlPosX; // 0x334
	float m_ControlRatio; // 0x338
	int32_t AddBtnValue; // 0x33c
	float AddValueUpdateTime; // 0x340
	bool Btn_Pressed_Down; // 0x344
	bool Btn_Pressed_Up; // 0x345
	int32_t STR_PERCENT; // 0x348
};

struct UMM_Popup_Auto_OptionChange {
	UMM_Common_Btn_Symbol* m_pBtn_Close; // 0x318
	UHorizontalBox* m_pGrade1Box; // 0x320
	UHorizontalBox* m_pGrade2Box; // 0x328
	UHorizontalBox* m_pGrade3Box; // 0x330
	UMM_Common_Btn_Symbol* m_pBtn_Box1_Decrease; // 0x338
	UMM_Common_Btn_Symbol* m_pBtn_Box1_Increase; // 0x340
	UMM_Common_Btn_Symbol* m_pBtn_Box2_Decrease; // 0x348
	UMM_Common_Btn_Symbol* m_pBtn_Box2_Increase; // 0x350
	UMM_Common_Btn_Symbol* m_pBtn_Box3_Decrease; // 0x358
	UMM_Common_Btn_Symbol* m_pBtn_Box3_Increase; // 0x360
	UMirImage* m_pImg_Box1_Grade; // 0x368
	UMirImage* m_pImg_Box2_Grade; // 0x370
	UMirImage* m_pImg_Box3_Grade; // 0x378
	UMirTextBlock* m_pTxt_Box1_GradeCount; // 0x380
	UMirTextBlock* m_pTxt_Box2_GradeCount; // 0x388
	UMirTextBlock* m_pTxt_Box3_GradeCount; // 0x390
	UMirImage* m_pImg_Material1; // 0x398
	UMirImage* m_pImg_Material2; // 0x3a0
	UMirImage* m_pImg_Material3; // 0x3a8
	UMirTextBlock* m_pTxt_MaterialCount1; // 0x3b0
	UMirTextBlock* m_pTxt_MaterialCount2; // 0x3b8
	UMirTextBlock* m_pTxt_MaterialCount3; // 0x3c0
	UMM_Item_Make_Slider* m_pNumInput; // 0x3c8
	UMM_Common_Btn* m_pBtn_StartOptionChange; // 0x3d0
	UMirTextBlock* m_pTxt_Info; // 0x3d8
};

struct UBTDecorator_ReachedMoveGoal {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct ULandscapeMeshCollisionComponent {
	FGuid MeshGuid; // 0x4f8
};

struct UMM_Hud_Chat_BroadCast_MSG {
	UMirButton* Btn_ItemInfo; // 0x2e0
	UMirRichTextBlock* m_Txt_Notice; // 0x2e8
	int64_t m_SendUserUID; // 0x2f0
	int64_t m_ShareItemUID; // 0x2f8
	int32_t m_SmeltingLv; // 0x300
};

struct UMM_Popup_Chat_Macro {
	UMM_Common_Btn_Symbol* btn_close; // 0x2e0
	TArray<UMM_Hud_Chat_MacroSlot*> m_SlotList; // 0x2e8
};

struct UBTTask_SelfComeBack {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct UMM_Guild_DiplomacyTopMenuSlot {
	UMirTextBlock* m_Txt_MenuTitle; // 0x2e0
	UMirTextBlock* m_Txt_MenuValue; // 0x2e8
};

struct UMM_Common_Popup_ItemInfo {
	UMM_PopUp_ItemInfo* m_ItemInfo_Left; // 0x2e0
	UMM_PopUp_ItemInfo* m_ItemInfo_Right; // 0x2e8
};

struct UGhostTrailMeshData {
	TArray<UStaticMeshComponent*> BaseStaticMeshComponents; // 0x28
	TArray<UStaticMeshComponent*> GhostStaticMeshComponents; // 0x38
	TArray<USkeletalMeshComponent*> BaseSkeletalMeshComponents; // 0x48
	TArray<UPoseableMeshComponent*> GhostPoseableMeshComponents; // 0x58
	TArray<USkeletalMeshComponent*> MasterSkeletalMeshComponents; // 0x68
	TArray<UMaterialInstanceDynamic*> MIDArray; // 0x78
};

struct UMM_ProgressBar_Tail {
	UMirImage* Image_BG; // 0x318
	UProgressBar* ProgressBar_Tail; // 0x320
	UProgressBar* ProgressBar_Contents; // 0x328
	UTextBlock* TextBlock_Text; // 0x330
	FPorgressColor DefaultColor; // 0x338
};

struct UHapticFeedbackEffect_SoundWave {
	USoundWave* SoundWave; // 0x28
};

struct UParticleModuleAccelerationDragScaleOverLife {
	UDistributionFloat* DragScale; // 0x38
	FRawDistributionFloat DragScaleRaw; // 0x40
};

struct UMM_Login_VersionSlot {
	UMirTextBlock* m_pTxtName; // 0x2e0
	UMirImage* m_pImgSelect; // 0x2e8
	UMirButton* m_pBtnMain; // 0x2f0
};

struct UMM_Popup_WebBrowser {
	UPanelWidget* m_Can_Back; // 0x300
	UMirButton* m_Btn_Back; // 0x308
	UMirWebBrowser* m_C_WebBrowser; // 0x310
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x318
	UMM_Common_Btn_Symbol* m_CB_Home; // 0x320
};

struct ANavigationData {
	UPrimitiveComponent* RenderingComp; // 0x220
	FNavDataConfig NavDataConfig; // 0x228
	char bEnableDrawing : 1; // 0x2a0
	char bForceRebuildOnLoad : 1; // 0x2a0
	char bAutoDestroyWhenNoNavigation : 1; // 0x2a0
	char bCanBeMainNavData : 1; // 0x2a0
	char bCanSpawnOnRebuild : 1; // 0x2a0
	char bRebuildAtRuntime : 1; // 0x2a0
	ERuntimeGenerationType RuntimeGeneration; // 0x2a4
	float ObservedPathsTickInterval; // 0x2a8
	uint32_t DataVersion; // 0x2ac
	TArray<FSupportedAreaData> SupportedAreas; // 0x390
};

struct UMM_PopupGuildPartnerSlot {
	UMirImage* img_online; // 0x2e0
	UMM_GuildMemberPortrait* Portrait; // 0x2e8
	UMirTextBlock* txt_grade; // 0x2f0
	UMirTextBlock* txt_nickname; // 0x2f8
	UMirTextBlock* txt_custom_title; // 0x300
	UMirTextBlock* txt_level; // 0x308
	UMirImage* img_class; // 0x310
	UMirTextBlock* txt_class; // 0x318
	UMirTextBlock* txt_combat_power; // 0x320
	UMirTextBlock* txt_daily_contribution; // 0x328
	UMirTextBlock* txt_total_contribution; // 0x330
	UMirTextBlock* txt_is_partner; // 0x338
	UMirImage* Img_Select; // 0x340
	UMirButton* btn_select; // 0x348
};

struct UMM_Mastery_Slot {
	UMirImage* mImgSelected; // 0x300
	UMirImage* mImgLimited; // 0x308
	UMirImage* mImgIcon; // 0x310
	UMirTextBlock* mTxtLevel; // 0x318
	UMirImage* mImgIndicator; // 0x320
	UMirButton* mBtnMain; // 0x328
	UPanelWidget* mGridEffect; // 0x330
	UWidgetAnimation* mAuiGuide; // 0x338
};

struct UMaterialExpressionShadowReplace {
	FExpressionInput Default; // 0x40
	FExpressionInput shadow; // 0x54
};

struct UMM_GuildReportSlot {
	UMirImage* Img_Icon; // 0x2e0
	UMirTextBlock* Txt_Name; // 0x2e8
	UMirProgressBar* pb_progress; // 0x2f0
	UMirTextBlock* txt_progress; // 0x2f8
	UMirTextBlock* txt_daily_mission; // 0x300
	UMM_Common_Btn_Symbol* btn_reward0; // 0x308
	UMirTextBlock* txt_reward0; // 0x310
	UMM_Common_Btn_Symbol* btn_reward1; // 0x318
	UMirTextBlock* txt_reward1; // 0x320
	UMM_Common_Btn_Symbol* btn_reward2; // 0x328
	UMirTextBlock* txt_reward2; // 0x330
	UMM_Common_Btn* btn_recv; // 0x338
	UMirImage* img_clear; // 0x340
	UMirImage* img_complete; // 0x348
};

struct ABeginPlayTrigger {
	FString m_EditorTriggerName; // 0x220
	TArray<AActivateTrigger*> m_pActiveTriggerArray; // 0x230
	int32_t m_TriggerIndex; // 0x240
	ETriggerType m_TriggerType; // 0x244
	bool m_bActiveTriggerCondition; // 0x268
	bool m_bActivated; // 0x269
	AMM_TriggerManager* m_pTriggerManager; // 0x270
};

struct UMM_ItemResult_FailInfo {
	int32_t FailGuideStrID; // 0x2e0
	int32_t NextPercentStrID; // 0x2e4
};

struct UMaterialExpressionArctangent {
	FExpressionInput Input; // 0x40
};

struct UMovieSceneTrack {
	FMovieSceneTrackEvalOptions EvalOptions; // 0x50
	bool bIsEvalDisabled; // 0x55
};

struct UMM_B_Skill {
	UMirScrollBox* mScrollBoxSkillList; // 0x2f0
	UMirTextBlock* mTxtSkillName; // 0x2f8
	UMirTextBlock* mTxtSkillEffectInfo; // 0x300
	UMirRichTextBlock* mRtSkillDesc; // 0x308
	UMirButton* mBtnAwaken; // 0x310
	UMirTextBlock* mTxtAwaken; // 0x318
	UMirTextBlock* mTxtSpecialDesc; // 0x320
	UMM_Common_Btn_Symbol* mCBPrev; // 0x328
	UMM_Common_Btn_Symbol* mCBNext; // 0x330
	UMM_Skill_Info* mSkillInfo; // 0x338
	UMM_Skill_DeckSetting* mSkillDeckSetting; // 0x340
	TArray<UMM_Skill_ListSlot*> mSkillList; // 0x348
	TArray<UMirRichTextBlock*> mRtSkillEffectDescList; // 0x358
};

struct AARSkyLight {
	UAREnvironmentCaptureProbe* CaptureProbe; // 0x228
};

struct UMasterAudioSubmixCaptureProtocol {
	FString Filename; // 0x58
};

struct USoundNodeRandom {
	TArray<float> Weights; // 0x40
	TArray<bool> HasBeenUsed; // 0x50
	int32_t NumRandomUsed; // 0x60
	int32_t PreselectAtLevelLoad; // 0x64
	char bShouldExcludeFromBranchCulling : 1; // 0x68
	char bSoundCueExcludedFromBranchCulling : 1; // 0x68
	char bRandomizeWithoutReplacement : 1; // 0x68
};

struct USoundSimple : USoundBase {
	TArray<FSoundVariation> Variations; // 0x160
	USoundWave* SoundWave; // 0x170
};

struct UMM_UIAction_QuestObtain {
	int32_t m_MissionZoneToStr; // 0x68
};

struct UMM_New_Occupation_Ranking_List {
	UMirTextBlock* m_Txt_Rank; // 0x2e8
	UMirImage* m_img_Ranking; // 0x2f0
	UMirTextBlock* m_Txt_Name; // 0x2f8
	UMirTextBlock* m_Txt_Info; // 0x300
	UMirTextBlock* m_Txt_Point; // 0x308
	UMirImage* m_img_MyRank; // 0x310
	UMirImage* m_img_GuildMarkIcon; // 0x318
	UMirImage* m_img_GuildMarkFrame; // 0x320
	UMirButton* m_RankButton; // 0x328
};

struct UAnimNotify_PlayParticleEffect {
	UParticleSystem* PSTemplate; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct UMM_ServerSlot {
	UPanelWidget* m_Can_Recommend; // 0x2e8
	UMirImage* m_Img_New; // 0x2f0
	UMirImage* m_Img_ServerCongestionInfo; // 0x2f8
	UMirTextBlock* m_Txt_ServerName; // 0x300
	UMirTextBlock* m_Txt_Peace; // 0x308
	UMirTextBlock* m_Txt_ServerNotice; // 0x310
	UPanelWidget* m_Hrz_CharCount; // 0x318
	UMirTextBlock* m_Txt_CharCount; // 0x320
	UMirButton* m_Btn_Main; // 0x328
};

struct ANetworkGenManager {
	bool m_bNamingPosID; // 0x218
};

struct UEnvQueryTest_PathfindingBatch {
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x238
};

struct UMM_Popup_Auction_GuildSlot {
	UMirCanvasPanel* m_pCanvasGuild; // 0x2e0
	UMirCanvasPanel* m_pCanvasNoGuild; // 0x2e8
	UMirImage* m_pImgGuildBg; // 0x2f0
	UMirImage* m_pImgGuildMark; // 0x2f8
	UMirTextBlock* m_pTxtGuildName; // 0x300
	UMirTextBlock* m_pTxtGuildMaster; // 0x308
};

struct URichTextBoxDecorator {
	bool bReveal; // 0x28
	int32_t RevealedIndex; // 0x2c
};

struct UPanelSlot {
	UPanelWidget* Parent; // 0x28
	UWidget* Content; // 0x30
};

struct UMM_ClosedTraining_Slot_BaseSphere {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_Popup_Appearance_Slot {
	UMirTextBlock* Txt_Name; // 0x2e0
	UMirTextBlock* Txt_Value; // 0x2e8
	UMirImage* Img_Icon; // 0x2f0
};

struct UMM_UserEvent_WebBanner {
	FVector2D BannerSize; // 0x2e0
	UImage* m_Img_Banner; // 0x2e8
	UAsyncTaskDownloadImage* mDownloadImage; // 0x2f0
};

struct UFoliageInstancedStaticMeshComponent {
	FScriptMulticastDelegate OnInstanceTakePointDamage; // 0x628
	FScriptMulticastDelegate OnInstanceTakeRadialDamage; // 0x638
};

struct UInterpGroupDirector {
	TArray<UInterpTrack*> InterpTracks; // 0x30
	FName GroupName; // 0x40
	FColor GroupColor; // 0x48
	char bCollapsed : 1; // 0x4c
	char bVisible : 1; // 0x4c
	char bIsFolder : 1; // 0x4c
	char bIsParented : 1; // 0x4c
	char bIsSelected : 1; // 0x4c
};

struct UMaterialExpressionConstant3Vector {
	FLinearColor Constant; // 0x40
};

struct UPopup_DungeonReward_PartySlot {
	UMirTextBlock* txtRank; // 0x2e0
	UMirImage* imgClassIcon; // 0x2e8
	UMirTextBlock* txtNickName; // 0x2f0
	UMirTextBlock* txtLevel; // 0x2f8
	UMirRichTextBlock* rtxtContribution; // 0x300
	UMirCanvasPanel* canParty; // 0x308
	UMirTextBlock* txtNoParty; // 0x310
};

struct UMaterialExpressionFunctionOutput {
	FName OutputName; // 0x40
	FString Description; // 0x48
	int32_t SortPriority; // 0x58
	FExpressionInput A; // 0x5c
	char bLastPreviewed : 1; // 0x70
	FGuid ID; // 0x74
};

struct UFacebookLogout {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_Customizing_MainCategoryItem {
	UMirImage* m_pMainCategoryImage; // 0x2e0
	UMirImage* m_pMainSelectImage; // 0x2e8
	UMirButton* m_MainCategorySelectBtn; // 0x2f0
};

struct UMaterialExpressionShaderStageSwitch {
	FExpressionInput PixelShader; // 0x40
	FExpressionInput VertexShader; // 0x54
};

struct UMM_HudProgressBar {
	UWidgetAnimation* m_pAnim_Progress_End; // 0x2e0
	UWidgetAnimation* m_pAnim_Progress_Loof; // 0x2e8
	UCanvasPanel* m_CanProgressObj; // 0x2f0
	UCanvasPanel* m_CanLoopEffect; // 0x2f8
	UProgressBar* Pro_Guage; // 0x300
	UTextBlock* txt_progress; // 0x308
	UHorizontalBox* m_RemainCountHorizontalBox; // 0x310
	UTextBlock* m_Txt_RemainCount; // 0x318
	UMM_Common_Btn_Symbol* btn_gather_info; // 0x320
	UMirRichTextBlock* txtTitle; // 0x328
	UOverlay* ovlBuff; // 0x330
	UVerticalBox* vtcBuffInfo; // 0x338
	UMirButton* btnBuffTooltip; // 0x340
	UImage* imgBuffIcon[0x2]; // 0x348
	UBuffInfoSlotWidget* wgtBuffInfoSlot[0x2]; // 0x358
};

struct UMM_TotalMenu_SubSlot {
	int32_t m_iSubSlot_Row; // 0x308
	int32_t m_iSubSlot_Col; // 0x30c
	UMirTextBlock* m_Txt_Name; // 0x318
	UMirButton* m_Btn_Main; // 0x320
	UPanelWidget* m_Grid_OpenEffect; // 0x328
	UMirImage* m_Img_Indicator; // 0x330
	UEffectWidgetBase* m_OpenEffect; // 0x338
};

struct UAISenseConfig_Team {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UMM_Slot_RelationQuest {
	FLinearColor m_DisableColor; // 0x2e8
	FLinearColor m_OnGoingColor; // 0x2f8
	FLinearColor m_EndColor; // 0x308
	UMirImage* m_Img_Frame; // 0x318
	UMirTextBlock* m_Txt_Title; // 0x320
	UMirButton* m_Btn_Open; // 0x328
	UMirImage* m_Img_Indicator; // 0x330
	UMirImage* m_Img_Complete; // 0x338
	UMirTextBlock* m_Txt_Percent; // 0x340
	int32_t m_RARE_QUEST_ICON; // 0x348
	int32_t m_HERO_QUEST_ICON; // 0x34c
	int32_t m_LEGEND_QUEST_ICON; // 0x350
};

struct UMM_QuestRelation_Progress {
	UMirTextBlock* m_TxtProgressValue; // 0x2f0
	UMirProgressBar* m_ProgressQuest; // 0x2f8
	UMirButton* m_BtnReward; // 0x300
	UMirImage* m_ImgRewardIcon; // 0x308
	UMirImage* m_Imgindicator; // 0x310
	UMirImage* m_ImgComplete; // 0x318
};

struct UMM_Hud_Chat_Area {
	UPanelWidget* Panel_VoiceOption; // 0x2f0
	UMirCheckBox* Toggle_Macro; // 0x2f8
	UMirCheckBox* Toggle_VoiceChat_Off; // 0x300
	UMirCheckBox* Toggle_VoiceChat_On; // 0x308
	UMirEditableText* EditTxt_Chatting; // 0x310
	int32_t STRING_UNABLE_MESSAGE; // 0x318
	int32_t STRING_ENABLE_MESSAGE; // 0x31c
};

struct UGeometryCacheTrackStreamable {
	UGeometryCacheCodecBase* Codec; // 0x58
	float StartSampleTime; // 0x188
};

struct UTutorialHighlightWidget {
	int32_t m_MainTypeID; // 0x240
	FName m_TargetIndex; // 0x244
};

struct UMM_ItemResult_SingleAbilityInfo {
	UMirImage* Img_Before_Symbol; // 0x2e0
	UMirRichTextBlock* RichTxt_Before_AbilityOption; // 0x2e8
	UMirImage* Img_After_Symbol; // 0x2f0
	UMirRichTextBlock* RichTxt_After_AbilityOption; // 0x2f8
	UMirImage* Img_Arrow; // 0x300
};

struct UMovieSceneCameraCutSection {
	FGuid CameraGuid; // 0xe0
	FMovieSceneObjectBindingID CameraBindingID; // 0xf0
};

struct UGranularSynth {
	USoundWave* GranulatedSoundWave; // 0x650
};

struct UMaterialExpressionPreSkinnedLocalBounds {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UAnimCompress_RemoveLinearKeys {
	float MaxPosDiff; // 0x50
	float MaxAngleDiff; // 0x54
	float MaxScaleDiff; // 0x58
	float MaxEffectorDiff; // 0x5c
	float MinEffectorDiff; // 0x60
	float EffectorDiffSocket; // 0x64
	float ParentKeyScale; // 0x68
	char bRetarget : 1; // 0x6c
	char bActuallyFilterLinearKeys : 1; // 0x6c
	char bOptimizeForForwardPlayback : 1; // 0x6c
	char bUseDecompression : 1; // 0x6c
	char bUseMultithreading : 1; // 0x6c
};

struct UParticleModuleRotationOverLifetime {
	FRawDistributionFloat RotationOverLife; // 0x30
	char Scale : 1; // 0x60
};

struct UMM_B_XdracoStorage {
	int32_t INVENTORY_ID; // 0x2e0
	UMM_Xdraco_InvenLeft* m_InvenLeft; // 0x2e8
	UMM_Xdraco_InvenRight* m_InvenRight; // 0x2f0
};

struct UCapsuleComponent {
	float CapsuleHalfHeight; // 0x430
	float CapsuleRadius; // 0x434
};

struct AParticleEventManager {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMM_TotalQuick_SkillSlot {
	UMirImage* m_pImgSkillIcon; // 0x2e0
	UImage* m_pImgSlotDirBg; // 0x2e8
	UCanvasPanel* m_pCan_AutoSetOn; // 0x2f0
	UCanvasPanel* m_pCan_AutoSetOff; // 0x2f8
	UMirImage* m_pImgBookmarkOff; // 0x300
	UMirImage* m_pImgBookmarkOn; // 0x308
	UButton* m_pBtnClick; // 0x310
};

struct UParticleModuleEventGenerator {
	TArray<FParticleEvent_GenerateInfo> Events; // 0x30
};

struct UMM_Popup_Passive_Option_Info {
	UMirTextBlock* Txt_SkillPassiveName; // 0x2e0
	UMirTextBlock* Txt_SkillPassiveState; // 0x2e8
	UMirRichTextBlock* Txt_SkillPassiveExplain; // 0x2f0
	UMirRichTextBlock* Txt_SkillPassiveExplain_Short; // 0x2f8
	UPanelWidget* Panel_Main; // 0x300
	UButton* btn_close; // 0x308
};

struct UARGetCandidateObjectAsyncTaskBlueprintProxy {
	FScriptMulticastDelegate OnSuccess; // 0x50
	FScriptMulticastDelegate OnFailed; // 0x60
};

struct UMovieSceneStringTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct USpinBox {
	float Value; // 0x108
	DelegateProperty ValueDelegate; // 0x10c
	FSpinBoxStyle WidgetStyle; // 0x120
	USlateWidgetStyleAsset* Style; // 0x408
	float Delta; // 0x410
	float SliderExponent; // 0x414
	FSlateFontInfo Font; // 0x418
	ETextJustify Justification; // 0x468
	float MinDesiredWidth; // 0x46c
	bool ClearKeyboardFocusOnCommit; // 0x470
	bool SelectAllTextOnCommit; // 0x471
	FSlateColor ForegroundColor; // 0x478
	FScriptMulticastDelegate OnValueChanged; // 0x4a0
	FScriptMulticastDelegate OnValueCommitted; // 0x4b0
	FScriptMulticastDelegate OnBeginSliderMovement; // 0x4c0
	FScriptMulticastDelegate OnEndSliderMovement; // 0x4d0
	char bOverride_MinValue : 1; // 0x4e0
	char bOverride_MaxValue : 1; // 0x4e0
	char bOverride_MinSliderValue : 1; // 0x4e0
	char bOverride_MaxSliderValue : 1; // 0x4e0
	float MinValue; // 0x4e4
	float MaxValue; // 0x4e8
	float MinSliderValue; // 0x4ec
	float MaxSliderValue; // 0x4f0
};

struct UAnimCompress_LeastDestructive {
	FString Description; // 0x28
	char bNeedsSkeleton : 1; // 0x38
	char bEnableSegmenting : 1; // 0x38
	uint32_t IdealNumFramesPerSegment; // 0x3c
	uint32_t MaxNumFramesPerSegment; // 0x40
	AnimationCompressionFormat TranslationCompressionFormat; // 0x44
	AnimationCompressionFormat RotationCompressionFormat; // 0x45
	AnimationCompressionFormat ScaleCompressionFormat; // 0x46
	float MaxCurveError; // 0x48
};

struct UMaterialExpressionFloor {
	FExpressionInput Input; // 0x40
};

struct UBTDecorator_DoesPathExist {
	FBlackboardKeySelector BlackboardKeyA; // 0x68
	FBlackboardKeySelector BlackboardKeyB; // 0x90
	char bUseSelf : 1; // 0xb8
	EPathExistanceQueryType PathQueryType; // 0xbc
	UNavigationQueryFilter* FilterClass; // 0xc0
};

struct UAnimationSharingSetup {
	TArray<FPerSkeletonAnimationSharingSetup> SkeletonSetups; // 0x28
	FAnimationSharingScalability ScalabilitySettings; // 0x38
};

struct UMM_Force_SimpleInfo {
	UMirTextBlock* m_C_Txt_ForceName; // 0x2e0
	UMirTextBlock* m_C_Txt_ForceLevel; // 0x2e8
	UMirProgressBar* m_C_Pgr_Exp; // 0x2f0
	UMirImage* m_C_Img_Ability; // 0x2f8
	UMirTextBlock* m_C_Txt_AbilityName; // 0x300
	UMirTextBlock* m_C_Txt_AbilityValue; // 0x308
	UMirImage* m_C_Img_ArrowUp; // 0x310
};

struct USoundBase {
	USoundClass* SoundClassObject; // 0x28
	char bDebug : 1; // 0x30
	char bOverrideConcurrency : 1; // 0x30
	char bOutputToBusOnly : 1; // 0x30
	char bHasDelayNode : 1; // 0x30
	char bHasConcatenatorNode : 1; // 0x30
	char bBypassVolumeScaleForPriority : 1; // 0x30
	EVirtualizationMode VirtualizationMode; // 0x31
	TSet<USoundConcurrency*> ConcurrencySet; // 0x88
	FSoundConcurrencySettings ConcurrencyOverrides; // 0xd8
	float Duration; // 0xf8
	float MaxDistance; // 0xfc
	float TotalSamples; // 0x100
	float Priority; // 0x104
	USoundAttenuation* AttenuationSettings; // 0x108
	FSoundModulation Modulation; // 0x110
	USoundSubmix* SoundSubmixObject; // 0x120
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x128
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x138
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x140
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x150
};

struct UMM_Occupation_Observer {
	UMirTextBlock* m_Txt_RemainTime; // 0x300
	UMirTextBlock* m_Txt_Defence_Guild_Name; // 0x308
	UMirTextBlock* m_Txt_Offence_Guild_Name; // 0x310
	UMM_GuildIcon* m_GuildIcon_Defence; // 0x318
	UMM_GuildIcon* m_GuildIcon_Offence; // 0x320
	UMirTextBlock* m_Txt_Catapult_Count; // 0x328
	UMirTextBlock* m_Txt_Gate_HP; // 0x330
	UMirTextBlock* m_Txt_Target_Capture_HP; // 0x338
	UMirTextBlock* m_Txt_Defence_Flag_Count; // 0x340
	UMirTextBlock* m_Txt_Siege_Tower_Count; // 0x348
	UMirTextBlock* m_Txt_Offence_Flag_Count; // 0x350
	UMirTextBlock* m_Txt_ServerName; // 0x358
	UMM_Occupation_Observer_KillLog* m_KillLog_Defence; // 0x360
	UMM_Occupation_Observer_KillLog* m_KillLog_Offence; // 0x368
	UMirButton* m_Btn_Gate; // 0x370
	UMirButton* m_Btn_Capture; // 0x378
	UMM_Occupation_Observer_TargetHP* m_SiegeObserver_HP; // 0x380
};

struct APortalInfoExporter {
	bool m_bExport; // 0x218
	bool m_bImport; // 0x219
};

struct UMovieSceneComponentMaterialTrack {
	int32_t MaterialIndex; // 0x68
};

struct UMM_ContentsPoint {
	UMirRichTextBlock* m_RTxt_Title; // 0x2e0
	UMM_Common_Btn_Symbol* m_CB_Detail; // 0x2e8
	UMirImage* m_Img_Point; // 0x2f0
	UMirTextBlock* m_Txt_Point; // 0x2f8
};

struct UMaterialExpressionFontSampleParameter {
	FName ParameterName; // 0x50
	FGuid ExpressionGUID; // 0x58
	FName Group; // 0x68
};

struct UMovieSceneEasingExternalCurve {
	UCurveFloat* Curve; // 0x30
};

struct UMM_MessageWidgetBase {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_MagicStoneQuickTab {
	UMM_MagicStoneQuickTabSlot* lst_slot[0x5]; // 0x2f0
};

struct UMaterialExpressionDDX {
	FExpressionInput Value; // 0x40
};

struct UAISense_Team {
	TArray<FAITeamStimulusEvent> RegisteredEvents; // 0x80
};

struct UBlackboardKeyType_Enum {
	UEnum* EnumType; // 0x30
	FString EnumName; // 0x38
	char bIsEnumNameValid : 1; // 0x48
};

struct UMovieSceneObjectPropertySection {
	FMovieSceneObjectPathChannel ObjectChannel; // 0xe0
};

struct UAISystemBase {
	FSoftClassPath AISystemClassName; // 0x28
	FName AISystemModuleName; // 0x40
	bool bInstantiateAISystemOnClient; // 0x50
};

struct UMaterialExpressionArctangentFast {
	FExpressionInput Input; // 0x40
};

struct ACinematicDialogue {
	UDialogueCameraData* m_pDialogueCameraPreset; // 0x238
	TArray<UObject*> m_ResourceArray; // 0x240
	bool m_bTest; // 0x250
	int32_t m_TestDirectingID; // 0x254
	ALevelSequenceActor* m_pLevelSequenceActor; // 0x2b0
	ULevelSequencePlayer* m_pLevelSequencePlayer; // 0x2b8
	ACutsceneCamera* m_pCutsceneCamera; // 0x2c0
	UCutsceneDialogueWidget* m_pDialogueWidget; // 0x2c8
	UObject* m_pCallbackObject; // 0x328
};

struct UAISenseBlueprintListener {
	EUserDefinedStructureStatus Status; // 0xa8
	FGuid Guid; // 0xac
};

struct UBTService_BlackboardBase {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UMaterialExpressionSkyAtmosphereLightIlluminance {
	int32_t LightIndex; // 0x40
	FExpressionInput WorldPosition; // 0x44
};

struct UMaterialExpressionDepthFade {
	FExpressionInput InOpacity; // 0x40
	FExpressionInput FadeDistance; // 0x54
	float OpacityDefault; // 0x68
	float FadeDistanceDefault; // 0x6c
};

struct APainCausingVolume {
	char bPainCausing : 1; // 0x260
	float DamagePerSec; // 0x264
	UDamageType* DamageType; // 0x268
	float PainInterval; // 0x270
	char bEntryPain : 1; // 0x274
	char BACKUP_bPainCausing : 1; // 0x274
	AController* DamageInstigator; // 0x278
};

struct UGameplayTasksComponent {
	char bIsNetDirty : 1; // 0xbc
	TArray<UGameplayTask*> SimulatedTasks; // 0xc0
	TArray<UGameplayTask*> TaskPriorityQueue; // 0xd0
	TArray<UGameplayTask*> TickingTasks; // 0xf0
	TArray<UGameplayTask*> KnownTasks; // 0x100
	FScriptMulticastDelegate OnClaimedResourcesChange; // 0x110
};

struct UComboBoxString {
	TArray<FString> DefaultOptions; // 0x108
	FString SelectedOption; // 0x118
	FComboBoxStyle WidgetStyle; // 0x128
	FTableRowStyle ItemStyle; // 0x500
	FMargin ContentPadding; // 0xcc8
	float MaxListHeight; // 0xcd8
	bool HasDownArrow; // 0xcdc
	bool EnableGamepadNavigationMode; // 0xcdd
	FSlateFontInfo Font; // 0xce0
	FSlateColor ForegroundColor; // 0xd30
	bool bIsFocusable; // 0xd58
	DelegateProperty OnGenerateWidgetEvent; // 0xd5c
	FScriptMulticastDelegate OnSelectionChanged; // 0xd70
	FScriptMulticastDelegate OnOpening; // 0xd80
};

struct ADirectingTrigger {
	int32_t m_SequencePlayID; // 0x278
	EDirectingTriggerType m_DirectingState; // 0x27c
};

struct UMM_Popup_Dominion_TaxDetail {
	UMirScrollBox* ScrollBox_Main; // 0x2f0
	UMM_Common_Btn_Symbol* btn_close; // 0x2f8
	UMM_Common_Btn* m_pBtnOut; // 0x300
	UMirButton* Btn_Background; // 0x308
};

struct UUIParticleEmitterAsset {
	EEmitterType EmitterType; // 0x28
	float EmitSeconds; // 0x2c
	FUIParticleProperty MaxParticleCount; // 0x30
	FUIParticleProperty SpawnParticlePerSecond; // 0x818
	FUIParticleProperty ParticleEmitAngle; // 0x1000
	FRange_Vector2D EmitPosRange; // 0x17e8
	FPosotion_Vector2DCurve EmitPosition; // 0x1800
	bool AutoEmitPosRange; // 0x27d0
	bool AutoScale; // 0x27d1
	bool ScaleByX; // 0x27d2
	FVector2D DesignSize; // 0x27d4
	EPositionType PositionType; // 0x27dc
	FUIParticleProperty LifeSpan; // 0x27e0
	FUIParticleProperty Size; // 0x2fc8
	FUIParticleProperty Pivot; // 0x37b0
	FUIParticleProperty RotationStart; // 0x3f98
	FUIParticleProperty RotationSpeed; // 0x4780
	FUIParticleProperty Color; // 0x4f68
	UObject* ResourceObject; // 0x5750
	bool RotationFollowSpeed; // 0x5758
	bool UseSeparateSize; // 0x5759
	FUIParticleProperty Gravity; // 0x5760
	FUIParticleProperty StartSpeed; // 0x5f48
	FUIParticleProperty AirResistance; // 0x6730
	FUIParticleProperty RadialAcceleration; // 0x6f18
	FUIParticleProperty TangentialAcceleration; // 0x7700
	FUIParticleProperty Radius; // 0x7ee8
	FUIParticleProperty DegreePerSecond; // 0x86d0
	FUIParticleProperty PositionX; // 0x8eb8
	FUIParticleProperty PositionY; // 0x96a0
	TArray<FChildEmitter> ChildrenEmitters; // 0x9e88
	TArray<FScalarParamCurve> ScalarParams; // 0x9e98
	TArray<FScalarParamCurve> ScalarParamsWhenStart; // 0x9ea8
	EParticleDrawEffect DrawEffect; // 0x9eb8
	bool UseScaleFollowSpeedDirection; // 0x9eb9
	FUIParticleProperty ScaleFollowSpeedDirection; // 0x9ec0
	bool UseScaleFollowSpeedVertical; // 0xa6a8
	FUIParticleProperty ScaleFollowSpeedVertical; // 0xa6b0
	FUIParticleProperty DirectionScale; // 0xae98
	FUIParticleProperty VerticalDirectionScale; // 0xb680
	FUIParticleProperty SineDirectionStart; // 0xbe68
	FUIParticleProperty SineDirectionSpeed; // 0xc650
	FUIParticleProperty SineDirectionRange; // 0xce38
};

struct APawn {
	char bUseControllerRotationPitch : 1; // 0x220
	char bUseControllerRotationYaw : 1; // 0x220
	char bUseControllerRotationRoll : 1; // 0x220
	char bCanAffectNavigationGeneration : 1; // 0x220
	float BaseEyeHeight; // 0x224
	EAutoReceiveInput AutoPossessPlayer; // 0x228
	EAutoPossessAI AutoPossessAI; // 0x229
	char RemoteViewPitch; // 0x22a
	AController* AIControllerClass; // 0x230
	APlayerState* PlayerState; // 0x238
	AController* LastHitBy; // 0x248
	AController* Controller; // 0x250
	FVector ControlInputVector; // 0x25c
	FVector LastControlInputVector; // 0x268
};

struct UJoinSessionCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UCameraShakeNotify {
	UCameraShake* CameraShakeClass; // 0x38
	float ShakeScale; // 0x40
	float ShakeDistance; // 0x44
};

struct UDistributionVectorConstant {
	FVector Constant; // 0x38
	char bLockAxes : 1; // 0x44
	EDistributionVectorLockFlags LockedAxes; // 0x48
};

struct ULimitTimerWidget {
	UTextBlock* txtLimitTime; // 0x2f0
	UTextBlock* txtTime; // 0x2f8
	UMirButton* btnExtend; // 0x300
	UMirButton* btnExtend2; // 0x308
	UImage* imgExtend; // 0x310
	UMM_Common_Popup_Outgame* m_pOutgamePopupExtendTime; // 0x318
	UMirCanvasPanel* canAutoExtending; // 0x320
	UEffectWidgetBase* eftAutoExtendWgt; // 0x328
	UMirTextBlock* txtAutoExtendCount; // 0x330
	UMirButton* btnAutoExtending; // 0x338
	UWidgetAnimation* StartWarnAni; // 0x358
};

struct UMaterialExpressionParticleDirection {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UInterpTrackFloatParticleParam {
	FName ParamName; // 0x90
};

struct AMirSkySphereActor {
	bool UseLightMap; // 0x218
	bool ColorsDeterminedBySunPosition; // 0x219
	float SunBrightness; // 0x21c
	float CloudSpeed; // 0x220
	float CloudOpacity; // 0x224
	float StarsBrightness; // 0x228
	float SunHeight; // 0x22c
	float SunRadius; // 0x230
	float HorizonFalloff; // 0x234
	FLinearColor ZenithColor; // 0x238
	FLinearColor HorizonColor; // 0x248
	FLinearColor CloudColor; // 0x258
	FLinearColor OverallColor; // 0x268
};

struct UGridSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
	int32_t Row; // 0x4c
	int32_t RowSpan; // 0x50
	int32_t Column; // 0x54
	int32_t ColumnSpan; // 0x58
	int32_t Layer; // 0x5c
	FVector2D Nudge; // 0x60
};

struct UMM_HudDungeonMenu {
	int32_t m_iStringID_BtnCancel; // 0x2f0
	int32_t m_iStringID_BtnExit; // 0x2f4
	int32_t m_iStringID_ExitDungeon; // 0x2f8
	int32_t m_iStringID_ExitSecretDungeon_Item; // 0x2fc
	int32_t m_iStringID_ExitSecretDungeon_Quest; // 0x300
	UWidgetAnimation* m_pAniDoingEffect; // 0x308
	UWidgetAnimation* m_pAniAttentionEffect; // 0x310
	UMirCanvasPanel* m_pCan_Tracker; // 0x318
	UMirTextBlock* m_pText_Title; // 0x320
	UMirTextBlock* m_pText_Mission; // 0x328
	UButton* m_pBtn_Tracker; // 0x330
	ULimitTimerWidget* m_pLimitTimerWidget; // 0x338
	UButton* m_pBtn_DropInfo; // 0x340
	UButton* m_pBtn_Exit; // 0x348
	UImage* m_imgBtn_DropInfo; // 0x350
	UImage* m_imgBtn_Exit; // 0x358
	UCanvasPanel* m_pCanDoingEffect; // 0x360
	UCanvasPanel* m_pCanAttentionEffect; // 0x368
	UCanvasPanel* canDropInfo; // 0x370
	UCanvasPanel* canExit; // 0x378
};

struct UMM_Popup_Auction_ItemInfoSlot {
	UMirScrollBox* m_pScrollInfo; // 0x2e0
	UMM_Slot_Inventory* m_pSlotInven; // 0x2e8
	UMirTextBlock* m_pTxtItemName; // 0x2f0
	UMirTextBlock* m_pTxtItemTranscend; // 0x2f8
	UMirTextBlock* m_pTxtItemClass; // 0x300
	UGridPanel* m_pGridDesc; // 0x308
	UGridPanel* m_pGridCombat; // 0x310
	UGridPanel* m_pGridAbility; // 0x318
	UGridPanel* m_pGridAddOption; // 0x320
	UMM_PopUp_ItemInfo_Ability* m_pCombatPoint; // 0x328
	TArray<UMM_PopUp_ItemInfo_Ability*> m_arrAbility; // 0x330
	TArray<UMM_PopUp_ItemInfo_Ability*> m_arrOption; // 0x340
	UMirTextBlock* m_pTxtDesc; // 0x350
	UMM_Common_Btn* m_pBtnItemCompare; // 0x358
	UMM_SpecialAbility* m_pSpecialAbility; // 0x360
};

struct UMM_UserEvent_Goal_Slot {
	UMirTextBlock* m_Txt_RelationTitle; // 0x2e0
	UMirRichTextBlock* m_RTxt_LevelUpTitle; // 0x2e8
	UMirTextBlock* m_Txt_Description; // 0x2f0
	UMirImage* m_Img_CompleteBg; // 0x2f8
	UMirImage* m_Img_CompleteMark; // 0x300
	UMirImage* m_Img_Lock; // 0x308
	UMM_Slot_Material* m_RewardItemSlot[0x2]; // 0x310
	UMM_Common_Btn* m_C_Btn_Progress; // 0x320
	UMM_Common_Btn* m_C_Btn_Complete; // 0x328
	UMirCanvasPanel* m_Can_Relation; // 0x330
	UMirCanvasPanel* m_Can_LevelUp; // 0x338
};

struct UMM_Map_Player {
	float m_fRaderScale; // 0x2e0
	USpacer* m_SpcMain; // 0x2e8
	UImage* m_ImgView; // 0x2f0
	UImage* m_ImgPlayer; // 0x2f8
};

struct UMM_CostumeAbility_Part_Option {
	UMirImage* Img_Icon; // 0x2e0
	UMirTextBlock* Txt_Type; // 0x2e8
	UMirTextBlock* Txt_Value; // 0x2f0
	TArray<UMM_CostumeAbility_Info*> AbilityInfoList; // 0x2f8
	int32_t STRID_COUNT; // 0x308
	int32_t MAX_INFO; // 0x30c
};

struct UGameplayTask_ClaimResource {
	FName InstanceName; // 0x30
	ETaskResourceOverlapPolicy ResourceOverlapPolicy; // 0x3a
	UGameplayTask* ChildTask; // 0x60
};

struct UMM_Common_PartyMember {
	UMirImage* m_pImgParty; // 0x2f0
	UMirTextBlock* m_pTxtMemberCount; // 0x2f8
};

struct AOnlineBeaconHostObject {
	FString BeaconTypeName; // 0x218
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x228
	TArray<AOnlineBeaconClient*> ClientActors; // 0x230
};

struct UImageSequenceProtocol_EXR {
	bool bCompressed; // 0xd8
	EHDRCaptureGamut CaptureGamut; // 0xd9
};

struct UMaterialExpressionLandscapeLayerWeight {
	FExpressionInput Base; // 0x40
	FExpressionInput Layer; // 0x54
	FName ParameterName; // 0x68
	float PreviewWeight; // 0x70
	FVector ConstBase; // 0x74
	FGuid ExpressionGUID; // 0x80
};

struct ASpeechBalloonUI {
	USpeechBalloonWidget* m_pSpeechBalloonWidget; // 0x218
	USkeletalMeshComponent* m_pTargetMesh; // 0x220
	AMM_CharacterPawnBase* m_pTarget; // 0x228
};

struct UMovieScene3DPathTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x58
};

struct UBTTask_SetTagCooldown {
	FGameplayTag CooldownTag; // 0x70
	bool bAddToExistingDuration; // 0x78
	float CooldownDuration; // 0x7c
};

struct AGeometryCacheActor {
	UGeometryCacheComponent* GeometryCacheComponent; // 0x218
};

struct UMM_PopupWorldBossChannel {
	UMM_Common_Btn_Symbol* btnClose; // 0x2f0
	UWidgetAnimation* m_StartAni; // 0x2f8
	UWidgetAnimation* m_EndAni; // 0x300
};

struct UMM_NFTRelocation_SetList {
	UMirTextBlock* m_Txt_Message; // 0x2e0
	UMM_Common_Btn* m_Btn_Move; // 0x2e8
};

struct UAnimCompress_ACLCustom {
	float DefaultVirtualVertexDistance; // 0x50
	float SafeVirtualVertexDistance; // 0x54
	ACLCompressionLevel CompressionLevel; // 0x58
	ACLRotationFormat RotationFormat; // 0x59
	ACLVectorFormat TranslationFormat; // 0x5a
	ACLVectorFormat ScaleFormat; // 0x5b
	float ErrorThreshold; // 0x5c
	float ConstantRotationThresholdAngle; // 0x60
	float ConstantTranslationThreshold; // 0x64
	float ConstantScaleThreshold; // 0x68
	char bClipRangeReduceRotations : 1; // 0x6c
	char bClipRangeReduceTranslations : 1; // 0x6c
	char bClipRangeReduceScales : 1; // 0x6c
	char EnableSegmenting : 1; // 0x6c
	char bSegmentRangeReduceRotations : 1; // 0x6c
	char bSegmentRangeReduceTranslations : 1; // 0x6c
	char bSegmentRangeReduceScales : 1; // 0x6c
	uint16_t IdealNumKeyFramesPerSegment; // 0x70
	uint16_t MaxNumKeyFramesPerSegment; // 0x72
};

struct USafeZone {
	bool PadLeft; // 0x120
	bool PadRight; // 0x121
	bool PadTop; // 0x122
	bool PadBottom; // 0x123
};

struct UBrushBuilder {
	FString BitmapFilename; // 0x28
	FString ToolTip; // 0x38
	char NotifyBadParams : 1; // 0x48
	TArray<FVector> Vertices; // 0x50
	TArray<FBuilderPoly> Polys; // 0x60
	FName Layer; // 0x70
	char MergeCoplanars : 1; // 0x78
};

struct UInterpTrackDirector {
	TArray<FDirectorTrackCut> CutTrack; // 0x70
	char bSimulateCameraCutsOnClients : 1; // 0x80
};

struct UMaterialExpressionTangentOutput {
	FExpressionInput Input; // 0x40
};

struct UPlatformInterfaceBase {
	TArray<FDelegateArray> AllDelegates; // 0x28
};

struct UARFaceGeometry {
	FVector LookAtTarget; // 0xe8
	bool bIsTracked; // 0xf4
	TMap<EARFaceBlendShape, float> BlendShapes; // 0xf8
};

struct UNavTestRenderingComponent {
	float MinDrawDistance; // 0x228
	float LDMaxDrawDistance; // 0x22c
	float CachedMaxDrawDistance; // 0x230
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x234
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x235
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x236
	ELightmapType LightmapType; // 0x237
	char bUseMaxLODAsImposter : 1; // 0x238
	float CachedBoundsSphereDiameter; // 0x23c
	char bBatchImpostersAsInstances : 1; // 0x240
	char bNeverDistanceCull : 1; // 0x240
	char bAlwaysCreatePhysicsState : 1; // 0x240
	char bGenerateOverlapEvents : 1; // 0x240
	char bMultiBodyOverlap : 1; // 0x241
	char bTraceComplexOnMove : 1; // 0x241
	char bReturnMaterialOnMove : 1; // 0x241
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x241
	char bAllowCullDistanceVolume : 1; // 0x241
	char bHasMotionBlurVelocityMeshes : 1; // 0x241
	char bVisibleInReflectionCaptures : 1; // 0x241
	char bVisibleInRayTracing : 1; // 0x241
	char bRenderInMainPass : 1; // 0x242
	char bRenderInDepthPass : 1; // 0x242
	char bReceivesDecals : 1; // 0x242
	char bOwnerNoSee : 1; // 0x242
	char bOnlyOwnerSee : 1; // 0x242
	char bTreatAsBackgroundForOcclusion : 1; // 0x242
	char bUseAsOccluder : 1; // 0x242
	char bSelectable : 1; // 0x242
	char bForceMipStreaming : 1; // 0x243
	char bHasPerInstanceHitProxies : 1; // 0x243
	char CastShadow : 1; // 0x243
	char bAffectDynamicIndirectLighting : 1; // 0x243
	char bAffectDistanceFieldLighting : 1; // 0x243
	char bCastDynamicShadow : 1; // 0x243
	char bCastStaticShadow : 1; // 0x243
	char bCastVolumetricTranslucentShadow : 1; // 0x243
	char bSelfShadowOnly : 1; // 0x244
	char bCastFarShadow : 1; // 0x244
	char bCastInsetShadow : 1; // 0x244
	char bCastCinematicShadow : 1; // 0x244
	char bCastHiddenShadow : 1; // 0x244
	char bCastShadowAsTwoSided : 1; // 0x244
	char bLightAsIfStatic : 1; // 0x244
	char bLightAttachmentsAsGroup : 1; // 0x244
	char bExcludeFromLightAttachmentGroup : 1; // 0x245
	char bReceiveMobileCSMShadows : 1; // 0x245
	char bSingleSampleShadowFromStationaryLights : 1; // 0x245
	char bIgnoreRadialImpulse : 1; // 0x245
	char bIgnoreRadialForce : 1; // 0x245
	char bApplyImpulseOnDamage : 1; // 0x245
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x245
	char AlwaysLoadOnClient : 1; // 0x245
	char AlwaysLoadOnServer : 1; // 0x246
	char bUseEditorCompositing : 1; // 0x246
	char bRenderCustomDepth : 1; // 0x246
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x247
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x249
	FLightingChannels LightingChannels; // 0x24a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x24b
	int32_t CustomDepthStencilValue; // 0x24c
	FCustomPrimitiveData CustomPrimitiveData; // 0x250
	int32_t TranslucencySortPriority; // 0x260
	int32_t VisibilityId; // 0x264
	char bIgnoreOcclusionVolume : 1; // 0x268
	int32_t OcclusionVolumeId; // 0x26c
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x270
	uint8_t VirtualTextureLodBias; // 0x280
	uint8_t VirtualTextureCullMips; // 0x281
	uint8_t VirtualTextureMinCoverage; // 0x282
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x283
	float LpvBiasMultiplier; // 0x288
	float BoundsScale; // 0x294
	TArray<AActor*> MoveIgnoreActors; // 0x2a8
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2b8
	FBodyInstance BodyInstance; // 0x2d8
	FScriptMulticastDelegate OnComponentHit; // 0x3e8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3e9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3ea
	FScriptMulticastDelegate OnComponentWake; // 0x3eb
	FScriptMulticastDelegate OnComponentSleep; // 0x3ec
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3ee
	FScriptMulticastDelegate OnEndCursorOver; // 0x3ef
	FScriptMulticastDelegate OnClicked; // 0x3f0
	FScriptMulticastDelegate OnReleased; // 0x3f1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3f2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3f3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3f4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3f5
	UPrimitiveComponent* LODParentPrimitive; // 0x410
};

struct UMM_Dominion_Title_Tooltip {
	UMirTextBlock* m_pTxtName; // 0x2e0
	UMirTextBlock* m_pTxtValue; // 0x2e8
	UGridPanel* m_pGridPanel; // 0x2f0
	UMirImage* m_pImgIcon; // 0x2f8
	URichTextBox* m_pTxtBuffInfo; // 0x300
};

struct AMM_MonsterAIController {
	AMM_Monster* m_Monster; // 0x3a0
	EMonsterAttackType LastAttackType; // 0x3a8
	int32_t CurrentShortSkillSetIndex; // 0x3ac
	bool HasShortSkills; // 0x3b0
	int32_t CurrentLongSkillSetIndex; // 0x3b4
	bool HasLongSkills; // 0x3b8
	bool EnoughAttackToUseSkill; // 0x3b9
	int32_t PickupedNormalAttackCount; // 0x3bc
	int32_t NormalAttackCount; // 0x3c0
	int32_t CurAttackTID; // 0x3c4
};

struct UEngineMessage {
	FString FailedPlaceMessage; // 0x28
	FString MaxedOutMessage; // 0x38
	FString EnteredMessage; // 0x48
	FString LeftMessage; // 0x58
	FString GlobalNameChange; // 0x68
	FString SpecEnteredMessage; // 0x78
	FString NewPlayerMessage; // 0x88
	FString NewSpecMessage; // 0x98
};

struct UMM_Guild_BlackIron_Title {
	UMirTextBlock* m_pTxtTitle; // 0x2e0
	UMM_Common_ToolTipBtn* m_pInfo; // 0x2e8
};

struct UMM_Popup_Siege_Command_EditText {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e0
	UMirEditableText* m_InputText; // 0x2e8
	UMirButton* m_Btn_Macro; // 0x2f0
	UMM_Common_Btn* m_Btn_Ok; // 0x2f8
	UMM_Common_Btn* m_Btn_Cancel; // 0x300
	UMirCanvasPanel* m_Macro_Canvas; // 0x308
	UMirButton* m_Btn_Attack; // 0x310
	UMirButton* m_Btn_Assemble; // 0x318
	UMirButton* m_Btn_Defence; // 0x320
	UMirButton* m_Btn_Retreat; // 0x328
	UMirButton* m_Btn_Wait; // 0x330
	UMirImage* m_arSelectImg[0x5]; // 0x338
	UMirImage* m_ImgSelectMark; // 0x360
};

struct UMaterialExpressionDecalLifetimeOpacity {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UAudioCurveSourceComponent {
	FName CurveSourceBindingName; // 0x758
	float CurveSyncOffset; // 0x760
};

struct UMM_ItemSynthesis_ListSlot {
	UGridPanel* m_Grid_Effect; // 0x2e0
	UMM_Slot_Material* m_Slot_Material; // 0x2e8
	UEffectWidgetBase* m_Effect; // 0x2f0
};

struct UAssetManager {
	TArray<UObject*> ObjectReferenceList; // 0x2c0
	bool bIsGlobalAsyncScanEnvironment; // 0x2d0
	bool bShouldGuessTypeAndName; // 0x2d1
	bool bShouldUseSynchronousLoad; // 0x2d2
	bool bIsLoadingFromPakFiles; // 0x2d3
	bool bShouldAcquireMissingChunksOnLoad; // 0x2d4
	bool bOnlyCookProductionAssets; // 0x2d5
	bool bIsBulkScanning; // 0x2d6
	bool bIsPrimaryAssetDirectoryCurrent; // 0x2d7
	bool bIsManagementDatabaseCurrent; // 0x2d8
	bool bUpdateManagementDatabaseAfterScan; // 0x2d9
	bool bIncludeOnlyOnDiskAssets; // 0x2da
	int32_t NumberOfSpawnedNotifications; // 0x2dc
};

struct USizeBox {
	float WidthOverride; // 0x130
	float HeightOverride; // 0x134
	float MinDesiredWidth; // 0x138
	float MinDesiredHeight; // 0x13c
	float MaxDesiredWidth; // 0x140
	float MaxDesiredHeight; // 0x144
	float MinAspectRatio; // 0x148
	float MaxAspectRatio; // 0x14c
	char bOverride_WidthOverride : 1; // 0x150
	char bOverride_HeightOverride : 1; // 0x150
	char bOverride_MinDesiredWidth : 1; // 0x150
	char bOverride_MinDesiredHeight : 1; // 0x150
	char bOverride_MaxDesiredWidth : 1; // 0x150
	char bOverride_MaxDesiredHeight : 1; // 0x150
	char bOverride_MinAspectRatio : 1; // 0x150
	char bOverride_MaxAspectRatio : 1; // 0x150
};

struct UMaterialExpressionCeil {
	FExpressionInput Input; // 0x40
};

struct UMM_CommonVerticalTabTreeBtn {
	UVerticalBox* m_pVrtSubTree; // 0x340
	UMirImage* m_pImgArrowUp; // 0x348
	UMirImage* m_pImgArrowDown; // 0x350
};

struct UMM_HudPotionSlot {
	TArray<FBrushObject> m_arrBrushCoolTimeFont; // 0x2f0
	int32_t m_iEffectID_UsePotion; // 0x300
	int32_t m_iEffectID_EndCooltime; // 0x304
	float m_fPressedSelectTime; // 0x308
	UMirTextBlock* m_TextCount; // 0x310
	UMirImage* m_pImgIcon; // 0x318
	int32_t NotAutoUseItemStringID; // 0x320
	UPanelWidget* m_pCanSlot; // 0x328
	UMirTextBlock* m_Txt_CoolTime; // 0x330
	UImage* m_pImgPotionCool; // 0x338
	UPanelWidget* m_pGridEffect; // 0x340
	UMirButton* m_pBtnPotionArea; // 0x348
	UMirImage* m_Img_Empty; // 0x350
	UMirImage* m_Img_Effect_Auto; // 0x358
	UMirCanvasPanel* m_Can_AutoState; // 0x360
	UWidgetAnimation* m_pAnim_AutoOn; // 0x368
	UWidgetAnimation* m_pAnim_AutoOff; // 0x370
	UMirCanvasPanel* m_Can_AniAuto; // 0x378
	UMirCanvasPanel* m_Can_AniManual; // 0x380
	UEffectWidgetBase* m_Effect_Use; // 0x388
	UMirCanvasPanel* m_pCanRemove; // 0x390
	UMirButton* m_pBtnRemove; // 0x398
};

struct UMM_GuildJoinReqeustListSlot {
	UMirImage* img_rank; // 0x2e0
	UMirTextBlock* txt_rank; // 0x2e8
	UMirImage* img_class; // 0x2f0
	UMirTextBlock* Txt_Name; // 0x2f8
	UMirTextBlock* txt_level; // 0x300
	UMirTextBlock* txt_join_type; // 0x308
	UMirTextBlock* txt_time; // 0x310
	UMirButton* Btn_Main; // 0x318
	UMM_Common_CombatPoint* CombatPoint; // 0x320
};

struct UMovieSceneFadeSection {
	FLinearColor FadeColor; // 0x180
	char bFadeAudio : 1; // 0x190
};

struct UMM_New_Force_Tab {
	UMirImage* m_C_Img_Select; // 0x2f8
	UMirImage* m_C_Img_Icon; // 0x300
	UMirImage* m_C_Img_Indicator; // 0x308
	UMirImage* m_C_Img_Lock; // 0x310
	UMirTextBlock* m_C_Txt_State; // 0x318
	UMirTextBlock* m_C_Txt_Percent; // 0x320
	UMirTextBlock* m_C_Txt_Name; // 0x328
	UMirButton* m_C_Btn_Tab; // 0x330
};

struct URichTextBlockImageDecorator {
	UDataTable* ImageSet; // 0x28
};

struct UMaterialInstanceConstant {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UMaterialInterface* Parent; // 0x90
	char bHasStaticPermutationResource : 1; // 0x98
	char bOverrideSubsurfaceProfile : 1; // 0x98
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xa0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xb0
	TArray<FTextureParameterValue> TextureParameterValues; // 0xc0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xd0
	TArray<FFontParameterValue> FontParameterValues; // 0xe0
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0xf0
	TArray<UObject*> PermutationTextureReferences; // 0x108
	FStaticParameterSet StaticParameters; // 0x118
};

struct UOnlineSubsystemExtendedSteamWebBrowser {
	FScriptMulticastDelegate OnUrlChanged; // 0x108
	FString InitialURL; // 0x118
	bool bSupportsTransparency; // 0x128
};

struct UMM_Map_Waypoint_List {
	UMM_MAP_Waypoint_Category* m_arWaypointCategroy[0x8]; // 0x2f8
	UMM_Map_CheckBtn* m_arMapCheckBtn[0x2]; // 0x348
	UMirTextBlock* m_Txt_Channel; // 0x358
	UScrollBox* m_Scr_WaypointList; // 0x360
	UMM_Common_Btn* m_CB_ChannelChange; // 0x368
	UMM_Common_Btn* m_CB_Move; // 0x370
	UMM_Common_Btn_Cost* m_CB_Immedi_Move; // 0x378
	UHorizontalBox* m_Hrz_Notice; // 0x380
	UMirRichTextBlock* m_RTxt_Notice; // 0x388
	UMirRichTextBlock* m_Txt_MapType; // 0x390
	UMM_Common_Btn* m_btn_ChangeMapType; // 0x398
};

struct UMM_UIActionManager {
	TMap<EMirUIActionType, UMM_UIAction*> m_ActionMap; // 0x28
};

struct UUserDefinedImageCaptureProtocol {
	EDesiredImageFormat Format; // 0xd8
	bool bEnableCompression; // 0xd9
	int32_t CompressionQuality; // 0xdc
};

struct UTestMovieSceneSequence {
	UMovieScene* MovieScene; // 0x348
};

struct ABandwidthTestActor {
	FBandwidthTestGenerator BandwidthGenerator; // 0x218
};

struct UMM_GameOption_InGame {
	UMM_CommonVerticalTabSet* InGameTabSet; // 0x2f0
	UWidgetSwitcher* WidgetSwitcher; // 0x2f8
	UMM_GameOption_InGame_Battle* InGame_Battle; // 0x300
	UMM_GameOption_InGame_QuickSlot* InGame_QuickSlot; // 0x308
	UMM_GameOption_InGame_HUD* InGame_HUD; // 0x310
	UMM_GameOption_InGame_Convenience* InGame_Convenience; // 0x318
	UMM_GameOption_InGame_Community* InGame_Community; // 0x320
	UMM_GameOption_InGame_Target* InGame_Target; // 0x328
	UMM_GameOption_InGame_Alarm* InGame_Alarm; // 0x330
};

struct UMaterialFunctionInstance {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xb0
};

struct UParticleModuleLocationBoneSocket {
	ELocationBoneSocketSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	TArray<FLocationBoneSocketInfo> SourceLocations; // 0x40
	ELocationBoneSocketSelectionMethod SelectionMethod; // 0x50
	char bUpdatePositionEachFrame : 1; // 0x54
	char bOrientMeshEmitters : 1; // 0x54
	char bInheritBoneVelocity : 1; // 0x54
	float InheritVelocityScale; // 0x58
	FName SkelMeshActorParamName; // 0x5c
	int32_t NumPreSelectedIndices; // 0x64
};

struct UMM_IAPManager {
	UIAPStoreModuleBase* MirStoreModule; // 0x110
};

struct USplineMeshComponent {
	FSplineMeshParams SplineParams; // 0x4b0
	FVector SplineUpDir; // 0x508
	float SplineBoundaryMin; // 0x514
	FGuid CachedMeshBodySetupGuid; // 0x518
	UBodySetup* BodySetup; // 0x528
	float SplineBoundaryMax; // 0x530
	char bAllowSplineEditingPerInstance : 1; // 0x534
	char bSmoothInterpRollScale : 1; // 0x534
	char bMeshDirty : 1; // 0x534
	ESplineMeshAxis ForwardAxis; // 0x535
	float VirtualTextureMainPassMaxDrawDistance; // 0x538
};

struct UHapticFeedbackEffect_Buffer {
	TArray<char> amplitudes; // 0x28
	int32_t SampleRate; // 0x38
};

struct UMM_UserEvent_Attendance_Month {
	UMirTextBlock* m_Txt_Name; // 0x2f0
	UMirImage* m_Img_Thumb; // 0x2f8
	UWrapBox* m_WrapBox; // 0x300
	UMM_UserEvent_WebBanner* m_WebBanner; // 0x308
};

struct UMM_PopupGuildPartner {
	UMirScrollBox* sb_member; // 0x2f0
	UMM_Common_Board_Notice* bn_empty; // 0x2f8
	UMM_Common_Btn* btn_confirm; // 0x300
	UMM_Common_Btn* Btn_Cancel; // 0x308
	UMM_Common_Btn_Symbol* btn_close; // 0x310
	UMirTextBlock* Txt_Title; // 0x318
	UMirTextBlock* txt_sort; // 0x320
	UMirCheckBox* cb_sort; // 0x328
	UMirCanvasPanel* cp_sort; // 0x330
	UMirButton* btn_sort_combat_point; // 0x338
	UMirButton* btn_sort_level; // 0x340
	UMirButton* btn_sort_grade; // 0x348
	UMirImage* img_sort_combat_point; // 0x350
	UMirImage* img_sort_level; // 0x358
	UMirImage* img_sort_grade; // 0x360
	UMirTextBlock* txt_last; // 0x368
	UMM_Common_ToolTipBtn* tooltip_partner; // 0x370
};

struct UFontImportOptions {
	FFontImportOptionsData Data; // 0x28
};

struct UContentsLightData {
	TMap<EPlayerClassID, FContentsLightValue> CustomizingClassLight; // 0x30
	TMap<EPlayerClassID, FContentsPostProcessValue> CustomizingClassPostProcess; // 0x80
	TMap<EPlayerClassID, FContentsLightValue> UIClassLight; // 0xd0
	TMap<EPlayerClassID, FContentsPostProcessValue> UIClassPostProcess; // 0x120
	TMap<EPlayerClassID, FContentsLightValue> UIForceLight; // 0x170
	TMap<EPlayerClassID, FContentsPostProcessValue> UIForcePostProcess; // 0x1c0
	FContentsLightValue VehicleLight; // 0x210
	FContentsPostProcessValue VehiclePostProcess; // 0x254
	FContentsLightValue DarkPetLight; // 0x270
	FContentsPostProcessValue DarkPetPostProcess; // 0x2b4
	FContentsLightValue BrightPetLight; // 0x2d0
	FContentsPostProcessValue BrightPetPostProcess; // 0x314
};

struct UMM_Dominion_Title_NormalSlot {
	UMirTextBlock* m_pTxtClass; // 0x2e0
	UMirTextBlock* m_pTxtName; // 0x2e8
	UMM_Common_Btn_Symbol* m_pBtnInfo; // 0x2f0
	UMM_GuildMemberPortrait* m_pPortrait; // 0x2f8
	UMirButton* m_pBtnClick; // 0x300
};

struct UNavigationSystemConfig {
	FSoftClassPath NavigationSystemClass; // 0x28
	FNavAgentSelector SupportedAgentsMask; // 0x40
	FName DefaultAgentName; // 0x44
	char bIsOverriden : 1; // 0x4c
};

struct URuntimeVirtualTextureStreamingProxy {
	FVirtualTextureBuildSettings Settings; // 0x100
	bool bSinglePhysicalSpace; // 0x10c
	uint32_t BuildHash; // 0x110
};

struct UMM_CharacterPartsComponent {
	FString m_AnimPath; // 0x100
	TArray<int32_t> m_DontDestroyPartsIndex; // 0x150
	UAnimInstance* m_pMainAnimInstance; // 0x160
	TMap<int32_t, USkeletalMeshComponent*> m_mapSkeletalMeshComponent; // 0x238
	TMap<int32_t, UStaticMeshComponent*> m_mapStaticMeshComponent; // 0x288
	char bDoneUseMaterialUpdate : 1; // 0x3d1
	char bUseAttachParentBound : 1; // 0x3d1
	char bComponentUseFixedSkelBounds : 1; // 0x3d1
	FVector BoundsMin; // 0x3d4
	FVector BoundsMax; // 0x3e0
	char bCustomBoundsExtension : 1; // 0x3ec
	FVector PositiveBounds; // 0x3f0
	FVector NegativeBounds; // 0x3fc
	FLinearColor m_BurstEmissive_DCOlor; // 0x408
	float m_fBurstFresnel_Exponenth; // 0x418
	float m_fBurstFresnel_BaseReflect; // 0x41c
	float m_fBurstFresnel_power; // 0x420
	FLinearColor m_HitColorLow; // 0x424
	float m_fHitFresnel_Exponenth; // 0x434
	float m_fHitFresnel_BaseReflect; // 0x438
	float m_fConstFlashTime; // 0x43c
	float m_fConstGuardHitFlashTime; // 0x440
	float DieEffectTime; // 0x444
	float Dissolve; // 0x448
	float EmissiveBurn; // 0x44c
	FLinearColor EmissiveBurn_Color; // 0x450
	TMap<int32_t, FCharacterPartsMID> m_mapCharacterMID; // 0x488
	TMap<int32_t, FCharacterPartsMID> m_mapDieMID; // 0x4d8
	TMap<int32_t, FCharacterPartsMID> m_mapMaskedMID; // 0x528
	TMap<int32_t, FCharacterPartsMID> m_mapCachedMID; // 0x578
	UMaterialInstance* m_CustomMaterialInstance; // 0x5c8
	TMap<FString, UObject*> m_mapCachedAnim; // 0x5d0
	TMap<int32_t, UObject*> m_mapCachedMesh; // 0x620
};

struct UClothPhysicalMeshDataNv {
	TArray<float> MaxDistances; // 0xe0
	TArray<float> BackstopDistances; // 0xf0
	TArray<float> BackstopRadiuses; // 0x100
	TArray<float> AnimDriveMultipliers; // 0x110
};

struct UAIDataProvider_QueryParams {
	FName ParamName; // 0x28
	float FloatValue; // 0x30
	int32_t IntValue; // 0x34
	bool BoolValue; // 0x38
};

struct UMM_USerEvent_BP_Attendance {
	int32_t STRING_ID_BTN_BUY; // 0x2f0
	int32_t STRING_ID_BTN_ACTIVE; // 0x2f4
	UMirTextBlock* m_Txt_Name; // 0x2f8
	UMirImage* m_Img_Thumb; // 0x300
	UMM_UserEvent_WebBanner* m_WebBanner; // 0x308
	UMirScrollBox* m_ScrollBox; // 0x310
	UMirTextBlock* m_Txt_Season_Schedule; // 0x318
	UMirTextBlock* m_Txt_Btn_Name1; // 0x320
	UMirTextBlock* m_Txt_Btn_Name2; // 0x328
	UMirButton* m_Btn_Buy1; // 0x330
	UMirButton* m_Btn_Buy2; // 0x338
	UMirImage* m_Img_Indicator_1; // 0x340
	UMirImage* m_Img_Indicator_2; // 0x348
	UMM_Common_Btn* m_C_Btn_ReceiveAll; // 0x350
};

struct UMM_Slot_Refund_Sanctions_List {
	UMirTextBlock* m_Txt_PayTime; // 0x350
	UMirTextBlock* m_Txt_ProductName; // 0x358
	UMirTextBlock* m_Txt_PayNumber; // 0x360
	UPanelWidget* m_Can_PayButton; // 0x368
	UMirTextBlock* m_Txt_PayCost; // 0x370
	UMirButton* m_Btn_Pay; // 0x378
	UMirTextBlock* m_Txt_PayComplete; // 0x380
};

struct UMM_Occupation_Observer_KillLog_Slot {
	FLinearColor Defence_Name_Color; // 0x2e0
	FLinearColor Offence_Name_Color; // 0x2f0
	UMirTextBlock* m_Txt_AttackerName; // 0x300
	UMirTextBlock* m_Txt_TargetName; // 0x308
	UMirImage* m_Img_Defence_Attack_Icon; // 0x310
	UMirImage* m_Img_Offence_Attack_Icon; // 0x318
	UMirImage* m_Img_Background; // 0x320
	UWidgetAnimation* AnimationStart_Left; // 0x328
	UWidgetAnimation* AnimationStart_Right; // 0x330
	UWidgetAnimation* AnimationEnd_Left; // 0x338
	UWidgetAnimation* AnimationEnd_Right; // 0x340
	TWeakObjectPtr<UMM_Occupation_Observer_KillLog> m_OwnerWidget; // 0x348
};

struct UMovieSceneGeometryCacheTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x58
};

struct UAnimNotifyState_TimedParticleEffect {
	UParticleSystem* PSTemplate; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct UMM_HudPartyUser {
	FLinearColor COLOR_HP_BAR_YELLOW; // 0x2f0
	FLinearColor COLOR_HP_BAR_RED; // 0x300
	UCanvasPanel* m_Can_Panel; // 0x318
	UMirImage* m_Img_VoiceChat_On; // 0x320
	UMirImage* m_Img_VoiceChat_Off; // 0x328
	UImage* m_Img_Leader; // 0x330
	UImage* m_Img_Class; // 0x338
	UTextBlock* m_TxtNickName; // 0x340
	UImage* m_Img_Invite; // 0x348
	UPanelWidget* m_Grid_HP; // 0x350
	UProgressBar* m_Prg_HP; // 0x358
	UProgressBar* m_Prg_Shield; // 0x360
	UPanelWidget* m_Can_PrgEffect_1; // 0x368
	UPanelWidget* m_Grid_Revival; // 0x370
	UMirTextBlock* m_Txt_Revival; // 0x378
	UMirButton* m_Btn_Main; // 0x380
	UMirButton* m_Btn_Invite; // 0x388
};

struct UMM_Slot_Occupation_Ranking {
	UMirListView* m_ranking_ListView; // 0x2e0
	TArray<URankingSlotObj*> m_rankSlot_List; // 0x2e8
};

struct UMM_Inventory_AutoSmelt {
	UMM_NewInventoryTab* m_InvenTab; // 0x2f8
	UMM_NewInventory* m_Inven; // 0x300
};

struct ACameraRig_Rail {
	float CurrentPositionOnRail; // 0x218
	bool bLockOrientationToRail; // 0x21c
	USceneComponent* TransformComponent; // 0x220
	USplineComponent* RailSplineComponent; // 0x228
	USceneComponent* RailCameraMount; // 0x230
};

struct UAnimCompress_BitwiseCompressOnly {
	FString Description; // 0x28
	char bNeedsSkeleton : 1; // 0x38
	char bEnableSegmenting : 1; // 0x38
	uint32_t IdealNumFramesPerSegment; // 0x3c
	uint32_t MaxNumFramesPerSegment; // 0x40
	AnimationCompressionFormat TranslationCompressionFormat; // 0x44
	AnimationCompressionFormat RotationCompressionFormat; // 0x45
	AnimationCompressionFormat ScaleCompressionFormat; // 0x46
	float MaxCurveError; // 0x48
};

struct UMM_PopUp_GuildJoinOrCreation {
	UMirTextBlock* Txt_Title; // 0x2e0
	UMirRichTextBlock* r_txt_message; // 0x2e8
	UMM_Common_Btn* Btn_First; // 0x2f0
	UMM_Common_Btn* Btn_Second; // 0x2f8
	UMM_Common_Btn_Symbol* btn_close; // 0x300
};

struct UAndroidPermissionCallbackProxy {
	FScriptMulticastDelegate OnPermissionsGrantedDynamicDelegate; // 0x28
};

struct UParticleModuleVectorFieldLocal {
	UVectorField* VectorField; // 0x30
	FVector RelativeTranslation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale3D; // 0x50
	float Intensity; // 0x5c
	float Tightness; // 0x60
	char bIgnoreComponentTransform : 1; // 0x64
	char bTileX : 1; // 0x64
	char bTileY : 1; // 0x64
	char bTileZ : 1; // 0x64
	char bUseFixDT : 1; // 0x64
};

struct UMM_ContentsGetItemMsg {
	EContentsGetItemMsgType m_eWidgetType; // 0x2f0
	float m_fSettingTime_NextMessage; // 0x2f4
	float m_fSettingTime_NextMessage_MakeItem; // 0x2f8
	float m_fSettingTime_TitleEffect; // 0x2fc
	float m_fSettingTime_StartDisplaySlot; // 0x300
	float m_fSettingTime_NextSlot; // 0x304
	float m_fSettingTime_SlotOpacity; // 0x308
	float m_fSettingTime_SlotEffect; // 0x30c
	UWidgetAnimation* m_AniStart_Single_Item; // 0x310
	UWidgetAnimation* m_AniStart_Single_Cost; // 0x318
	UWidgetAnimation* m_AniStart_Multiple; // 0x320
	UWidgetAnimation* m_AniStart_Special; // 0x328
	UWidgetAnimation* m_AniStart_MakeSuccess_Item; // 0x330
	UWidgetAnimation* m_AniStart_MakeSuccessBonus_Item; // 0x338
	UWidgetAnimation* m_AniStart_MakeFail_Item; // 0x340
	UWidgetAnimation* m_AniEnd; // 0x348
	UMirButton* m_Btn_Main; // 0x450
	UMM_Slot_Registered_Circle* m_ItemSlot_Title; // 0x458
	UMirRichTextBlock* m_RTxt_TitleMain; // 0x460
	UMirImage* m_Img_Polish_One; // 0x468
	UMirImage* m_Img_Polish_All; // 0x470
	UPanelWidget* m_Hrz_TitleInfoDeco; // 0x478
	UMirRichTextBlock* m_RTxt_TitleSub; // 0x480
	UMirRichTextBlock* m_RTxt_AddedOptionName; // 0x488
	UMirRichTextBlock* m_RTxt_AddedOptionValue; // 0x490
	UMM_Slot_Material* m_arItemSlot[0xa]; // 0x498
	UGridSlot* m_arItemSlot_GridSlot[0xa]; // 0x4e8
	UPanelWidget* m_arItemSlot_EffectPanel[0xa]; // 0x538
};

struct UMovieSceneTransformTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UCanvasPanelSlot {
	FAnchorData LayoutData; // 0x38
	bool bAutoSize; // 0x60
	int32_t ZOrder; // 0x64
};

struct UMM_Map_Rader {
	float m_fRotateSpeed; // 0x2e0
	UTextBlock* m_TxtMapName; // 0x2f0
	UTextBlock* m_TxtChannel; // 0x2f8
	UTextBlock* m_TxtAreaInfo; // 0x300
	UPanelWidget* m_GridMapDetail; // 0x308
	UPanelWidget* m_GridMapDetailRotate; // 0x310
	UMM_Map_Detail* m_MapDetail; // 0x318
	UButton* m_BtnMapDetail; // 0x320
};

struct UMM_GameOption_PC {
	UMM_CommonVerticalTabSet* PC_TabSet; // 0x2f0
	UWidgetSwitcher* WidgetSwitcher; // 0x2f8
	UMM_GameOption_KeySetting* game_option_key_setting; // 0x300
};

struct UMaterialExpressionFrac {
	FExpressionInput Input; // 0x40
};

struct UMM_Map_Waypoint_List_Slot {
	int32_t m_iIcon_NormalWaypoint; // 0x2f0
	int32_t m_iIcon_UnableWaypoint; // 0x2f4
	int32_t IconAbleFixedNPC; // 0x2f8
	int32_t IconAble_NPC_Shop; // 0x2fc
	int32_t IconAble_NPC_ItemMake; // 0x300
	int32_t IconAble_NPC_Exchange; // 0x304
	int32_t IconAble_NPC_BeautySalon; // 0x308
	int32_t IconAbleEventNPC; // 0x30c
	int32_t IconAbleInventoryNPC; // 0x310
	int32_t IconAble_Relation; // 0x314
	int32_t IconAbleNamed; // 0x318
	int32_t IconUnableNamed; // 0x31c
	int32_t IconAbleBoss; // 0x320
	int32_t IconUnableBoss; // 0x324
	int32_t IconAbleFieldBoss; // 0x328
	int32_t IconUnableFieldBoss; // 0x32c
	int32_t IconAbleWorldBoss; // 0x330
	int32_t IconUnableWorldBoss; // 0x334
	int32_t IconAbleEliteModeType; // 0x338
	int32_t IconUnableEliteModeType; // 0x33c
	int32_t IconAbleMining; // 0x340
	int32_t IconUnableMining; // 0x344
	int32_t IconAbleGather; // 0x348
	int32_t IconUnableGather; // 0x34c
	int32_t IconAbleBMining; // 0x350
	int32_t IconUnableBMining; // 0x354
	int32_t IconAbleZinki; // 0x358
	int32_t IconUnableZinki; // 0x35c
	int32_t IconAbleMonsterSpawn; // 0x360
	int32_t IconUnableMonsterSpawn; // 0x364
	FVector2D m_vIconSize; // 0x368
	int32_t IconAbleSanctum; // 0x370
	int32_t IconUnableSanctum; // 0x374
	int32_t IconAbleDascoMeltingNPC; // 0x378
	UMirImage* m_Img_Icon; // 0x390
	UMirTextBlock* m_Txt_Name; // 0x398
	UMirTextBlock* m_Txt_Explored; // 0x3a0
	UMirImage* m_Img_Selected; // 0x3a8
	UPanelWidget* m_Grid_Disabled; // 0x3b0
	UMirButton* m_Btn_Main; // 0x3b8
};

struct UMaterialExpressionLinearInterpolate {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Alpha; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstAlpha; // 0x84
};

struct UMM_Passive_RandomSlot {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_Map_Minimap {
	UMM_Map_Detail* m_MapDetail; // 0x300
	UMM_CommonHorizontalTabSet* m_CTHrzTabSet; // 0x308
	UMM_Map_Waypoint_List* m_MapWaypointList; // 0x310
	UMM_Map_Occupation* m_MapOccupation; // 0x318
	UPanelWidget* m_Grid_DropItem; // 0x320
	UMirListView* m_ListView_DropItemList; // 0x328
	UMirCheckBox* m_CheckBox_SectorGrade; // 0x330
	UMM_Common_ToolTipBtn* m_pBtnCommToolTip; // 0x338
	TArray<UMaterialSlotObj*> m_arDropItemSlotObj; // 0x340
	UHorizontalBox* m_Hrz_Sanctum; // 0x350
	UMirTextBlock* m_Txt_Sanctum; // 0x358
	int32_t m_iFontSize; // 0x364
	int32_t m_iMiddleFontSize; // 0x368
	int32_t m_iSmallFontSize; // 0x36c
	int32_t m_iBidoFontSize; // 0x370
	int32_t m_iEliteFontSize; // 0x374
};

struct UWeaponMaterialNotify {
	TArray<FWeaponMaterialData> m_arrWeaponMaterial; // 0x30
};

struct UBTComposite_Selector {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct UMM_Popup_ServerVisit_GuildAlly_Slot {
	UMirTextBlock* m_Txt_GuildName; // 0x2e0
	UMM_Common_Btn_Symbol* m_Btn_Add_GuildList; // 0x2e8
	UMM_Common_Btn_Symbol* m_Btn_Remove_GuildList; // 0x2f0
};

struct UEnvQueryGenerator_Donut {
	FAIDataProviderFloatValue InnerRadius; // 0x80
	FAIDataProviderFloatValue OuterRadius; // 0xb0
	FAIDataProviderIntValue NumberOfRings; // 0xe0
	FAIDataProviderIntValue PointsPerRing; // 0x110
	FEnvDirection ArcDirection; // 0x140
	FAIDataProviderFloatValue ArcAngle; // 0x160
	bool bUseSpiralPattern; // 0x190
	UEnvQueryContext* Center; // 0x198
	char bDefineArc : 1; // 0x1a0
};

struct AGeometryCollectionDebugDrawActor {
	FGeometryCollectionDebugDrawWarningMessage WarningMessage; // 0x218
	FGeometryCollectionDebugDrawActorSelectedRigidBody SelectedRigidBody; // 0x220
	bool bDebugDrawWholeCollection; // 0x238
	bool bDebugDrawHierarchy; // 0x239
	bool bDebugDrawClustering; // 0x23a
	EGeometryCollectionDebugDrawActorHideGeometry HideGeometry; // 0x23b
	bool bShowRigidBodyId; // 0x23c
	bool bShowRigidBodyCollision; // 0x23d
	bool bCollisionAtOrigin; // 0x23e
	bool bShowRigidBodyTransform; // 0x23f
	bool bShowRigidBodyInertia; // 0x240
	bool bShowRigidBodyVelocity; // 0x241
	bool bShowRigidBodyForce; // 0x242
	bool bShowRigidBodyInfos; // 0x243
	bool bShowTransformIndex; // 0x244
	bool bShowTransform; // 0x245
	bool bShowParent; // 0x246
	bool bShowLevel; // 0x247
	bool bShowConnectivityEdges; // 0x248
	bool bShowGeometryIndex; // 0x249
	bool bShowGeometryTransform; // 0x24a
	bool bShowBoundingBox; // 0x24b
	bool bShowFaces; // 0x24c
	bool bShowFaceIndices; // 0x24d
	bool bShowFaceNormals; // 0x24e
	bool bShowSingleFace; // 0x24f
	int32_t SingleFaceIndex; // 0x250
	bool bShowVertices; // 0x254
	bool bShowVertexIndices; // 0x255
	bool bShowVertexNormals; // 0x256
	bool bUseActiveVisualization; // 0x257
	float PointThickness; // 0x258
	float LineThickness; // 0x25c
	bool bTextShadow; // 0x260
	float TextScale; // 0x264
	float NormalScale; // 0x268
	float AxisScale; // 0x26c
	float ArrowScale; // 0x270
	FColor RigidBodyIdColor; // 0x274
	float RigidBodyTransformScale; // 0x278
	FColor RigidBodyCollisionColor; // 0x27c
	FColor RigidBodyInertiaColor; // 0x280
	FColor RigidBodyVelocityColor; // 0x284
	FColor RigidBodyForceColor; // 0x288
	FColor RigidBodyInfoColor; // 0x28c
	FColor TransformIndexColor; // 0x290
	float TransformScale; // 0x294
	FColor LevelColor; // 0x298
	FColor ParentColor; // 0x29c
	float ConnectivityEdgeThickness; // 0x2a0
	FColor GeometryIndexColor; // 0x2a4
	float GeometryTransformScale; // 0x2a8
	FColor BoundingBoxColor; // 0x2ac
	FColor FaceColor; // 0x2b0
	FColor FaceIndexColor; // 0x2b4
	FColor FaceNormalColor; // 0x2b8
	FColor SingleFaceColor; // 0x2bc
	FColor VertexColor; // 0x2c0
	FColor VertexIndexColor; // 0x2c4
	FColor VertexNormalColor; // 0x2c8
	UBillboardComponent* SpriteComponent; // 0x2d0
};

struct UMM_Popup_Loading {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMovieSceneMediaSection {
	UMediaSource* MediaSource; // 0xe0
	bool bLooping; // 0xe8
	FFrameNumber StartFrameOffset; // 0xec
	UMediaTexture* MediaTexture; // 0xf0
	UMediaSoundComponent* MediaSoundComponent; // 0xf8
	bool bUseExternalMediaPlayer; // 0x100
	UMediaPlayer* ExternalMediaPlayer; // 0x108
};

struct UGuildWarMonsterComponent {
	TWeakObjectPtr<AMM_Monster> m_Owner; // 0xb0
};

struct UOnlineSubsystemExtendedSteamWidget {
	UOnlineSubsystemExtendedSteamWebBrowser* WebBrowser; // 0x240
	UButton* m_Btn_Close; // 0x268
};

struct UMM_Slot_Inventory_BG {
	UMirImage* slot_inventory_bg; // 0x510
	UPanelWidget* slot_inventory; // 0x518
};

struct UInterpTrackFloatBase {
	FInterpCurveFloat FloatTrack; // 0x70
	float CurveTension; // 0x88
};

struct UParticleModuleTypeDataGpu {
	FGPUSpriteEmitterInfo EmitterInfo; // 0x30
	FGPUSpriteResourceData ResourceData; // 0x2b0
	float CameraMotionBlurAmount; // 0x410
	char bClearExistingParticlesOnInit : 1; // 0x414
};

struct UMM_Popup_Relation_RewardInfo {
	UMirButton* m_Btn_BG_Close; // 0x2e0
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e8
	UMirListView* m_ListView_RewardList; // 0x2f0
	TArray<URelationRewardInfoSlotObj*> m_arRewardSlotObj; // 0x310
};

struct UInAppPurchaseCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct USoundNodeModulator {
	float PitchMin; // 0x40
	float PitchMax; // 0x44
	float VolumeMin; // 0x48
	float VolumeMax; // 0x4c
};

struct UMM_GetItemWayListSlot_Category {
	UMirButton* m_Btn_Main; // 0x2f0
	UPanelWidget* m_Grid_Effect; // 0x2f8
	UMirTextBlock* m_Txt_Name; // 0x300
	UMirImage* m_Img_Icon; // 0x308
	UMirImage* m_Img_Lock; // 0x310
	UMirImage* m_Img_Disable; // 0x318
	UMirTextBlock* m_Txt_Title; // 0x320
	URichTextBox* Txt_StageTitle; // 0x328
	UMM_Common_Btn* m_Btn_Go; // 0x330
	UWidgetSwitcher* WSwitcher; // 0x338
	int32_t m_Type; // 0x340
	int32_t m_SubType; // 0x344
	FString m_strName; // 0x348
	int32_t m_StageLock; // 0x358
	bool m_StageEnableCombatPower; // 0x35c
	int32_t STRID_STAGELOCK_LEVEL; // 0x360
	int32_t STRID_STAGELOCK_QUEST; // 0x364
	int32_t STRID_STAGELOCK_COMBATPOWER; // 0x368
	int32_t STRID_STAGELOCK_NOGUILD; // 0x36c
	int32_t STRID_STAGELEVEL; // 0x370
};

struct UInterpTrackInstFloatParticleParam {
	float ResetFloat; // 0x28
};

struct UMaterialExpressionArccosineFast {
	FExpressionInput Input; // 0x40
};

struct UMM_Popup_Auction_ItemSlot {
	UMirTextBlock* m_pTxtSellCount; // 0x2e0
	UMirScrollBox* m_pScrollList; // 0x2e8
};

struct UMMRichTextBox {
	FText Text; // 0x2e0
	FSlateFontInfo Font; // 0x2f8
	FVector2D ShadowOffset; // 0x348
	FLinearColor ShadowColorAndOpacity; // 0x350
	float MinDesiredWidth; // 0x360
	ETextJustify Justification; // 0x364
	FMargin Margin; // 0x368
	float LineHeightPercentage; // 0x378
	bool AutoWrapText; // 0x37c
	float WrapTextAt; // 0x380
	ETextWrappingPolicy WrappingPolicy; // 0x384
	URichTextBox* m_RTxt_Content; // 0x388
};

struct UInputTouchDelegateBinding {
	TArray<FBlueprintInputTouchDelegateBinding> InputTouchDelegateBindings; // 0x28
};

struct UBlendSpaceBase {
	bool bRotationBlendInMeshSpace; // 0x88
	float AnimLength; // 0x8c
	FInterpolationParameter InterpolationParam[0x3]; // 0x90
	float TargetWeightInterpolationSpeedPerSec; // 0xa8
	ENotifyTriggerMode NotifyTriggerMode; // 0xac
	TArray<FPerBoneInterpolation> PerBoneBlend; // 0xb0
	int32_t SampleIndexWithMarkers; // 0xc0
	TArray<FBlendSample> SampleData; // 0xc8
	TArray<FEditorElement> GridSamples; // 0xd8
	FBlendParameter BlendParameters[0x3]; // 0xe8
};

struct UPhotoModeData {
	float DefaultHeight; // 0x30
	float DefaultYaw; // 0x34
	float DefaultPitch; // 0x38
	float DefaultDistance; // 0x3c
	FPhotoMode_ValueRange CameraWidthRagne; // 0x40
	FPhotoMode_ValueRange CameraHighRange; // 0x48
	FPhotoMode_ValueRange CameraPitchRange; // 0x50
	FPhotoMode_ValueRange CameraDistanceRange; // 0x58
	TMap<int32_t, UAnimBlueprint*> Map_PtrClassAnimBP; // 0x60
	TArray<FPhotoMode_Pose> Class1_PoseData; // 0xb0
	TArray<FPhotoMode_Pose> Class2_PoseData; // 0xc0
	TArray<FPhotoMode_Pose> Class3_PoseData; // 0xd0
	TArray<FPhotoMode_Pose> Class4_PoseData; // 0xe0
	TArray<FPhotoMode_Pose> Class5_PoseData; // 0xf0
	TArray<FPhotoMode_Filter> FilterData; // 0x100
	float DOF_FocalDistance_Def; // 0x110
	float DOF_FocalDistance_Min; // 0x114
	float DOF_FocalDistance_Max; // 0x118
	float FOV_Def; // 0x11c
	float FOV_Min; // 0x120
	float FOV_Max; // 0x124
	float Brightness_Def; // 0x128
	float Brightness_Min; // 0x12c
	float Brightness_Max; // 0x130
	TMap<EPhotoModeOptionType, FPhotoMode_Option> Map_Option; // 0x138
	int32_t STRID_PoseTitle; // 0x188
	int32_t STRID_FilterTitle; // 0x18c
	int32_t STRID_DOFTitle; // 0x190
	int32_t STRID_FOVTitle; // 0x194
	int32_t STRID_BrightnessTitle; // 0x198
	int32_t STRID_PhotoModeOption; // 0x19c
	int32_t STRID_CharShowOption; // 0x1a0
	int32_t STRID_CharNameTagShowOption; // 0x1a4
	int32_t STRID_GuildMarkOption; // 0x1a8
	int32_t STRID_GuildNameOption; // 0x1ac
};

struct UARTrackedPoint {
	FGuid UniqueId; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int32_t LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct USpectatorBeaconState {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	bool bRestrictCrossConsole; // 0x38
	TArray<FSpectatorReservation> Reservations; // 0x40
};

struct UAREnvironmentCaptureProbeTexture {
	EARTextureType TextureType; // 0x128
	float Timestamp; // 0x12c
	FGuid ExternalTextureGuid; // 0x130
	FVector2D Size; // 0x140
};

struct UMM_CharAbility_Info_Pet {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UEditableStaticMeshAdapter {
	UStaticMesh* StaticMesh; // 0x28
	UStaticMesh* OriginalStaticMesh; // 0x30
	int32_t StaticMeshLODIndex; // 0x38
};

struct UAutomationTestSettings {
	TArray<FString> EngineTestModules; // 0x28
	TArray<FString> EditorTestModules; // 0x38
	FSoftObjectPath AutomationTestmap; // 0x48
	TArray<FEditorMapPerformanceTestDefinition> EditorPerformanceTestMaps; // 0x60
	TArray<FSoftObjectPath> AssetsToOpen; // 0x70
	FBuildPromotionTestSettings BuildPromotionTest; // 0x80
	FMaterialEditorPromotionSettings MaterialEditorPromotionTest; // 0x270
	FParticleEditorPromotionSettings ParticleEditorPromotionTest; // 0x2a0
	FBlueprintEditorPromotionSettings BlueprintEditorPromotionTest; // 0x2b0
	TArray<FString> TestLevelFolders; // 0x2e0
	TArray<FExternalToolDefinition> ExternalTools; // 0x2f0
	TArray<FEditorImportExportTestDefinition> ImportExportTestDefinitions; // 0x300
	TArray<FLaunchOnTestSettings> LaunchOnSettings; // 0x310
	FIntPoint DefaultScreenshotResolution; // 0x320
};

struct UFacebookLoginSubSystem {
	UFirebaseCredential* m_WindowFirebaseCredential; // 0x40
};

struct UTouchInterface {
	TArray<FTouchInputControl> Controls; // 0x28
	float ActiveOpacity; // 0x38
	float InactiveOpacity; // 0x3c
	float TimeUntilDeactive; // 0x40
	float TimeUntilReset; // 0x44
	float ActivationDelay; // 0x48
	bool bPreventRecenter; // 0x4c
	float StartupDelay; // 0x50
};

struct UMM_UIAction_GuildExpedition {
	UMM_B_DungeonCommon* m_pCurDungeonWidget; // 0x90
};

struct APhysicsThruster {
	UPhysicsThrusterComponent* ThrusterComponent; // 0x218
};

struct UGameSessionSettings {
	int32_t MaxSpectators; // 0x28
	int32_t MaxPlayers; // 0x2c
	char bRequiresPushToTalk : 1; // 0x30
};

struct UMM_B_Smite {
	UWidgetAnimation* m_AniLoop; // 0x2e0
};

struct UMovieSceneSlomoTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UParticleEmitter {
	FName EmitterName; // 0x28
	int32_t SubUVDataOffset; // 0x30
	EEmitterRenderMode EmitterRenderMode; // 0x34
	EParticleSignificanceLevel SignificanceLevel; // 0x35
	char bUseLegacySpawningBehavior : 1; // 0x37
	char ConvertedModules : 1; // 0x37
	char bIsSoloing : 1; // 0x37
	char bCookedOut : 1; // 0x37
	char bDisabledLODsKeepEmitterAlive : 1; // 0x37
	char bDisableWhenInsignficant : 1; // 0x38
	TArray<UParticleLODLevel*> LODLevels; // 0x40
	int32_t PeakActiveParticles; // 0x50
	int32_t InitialAllocationCount; // 0x54
	float QualityLevelSpawnRateScale; // 0x58
	uint32_t DetailModeBitmask; // 0x5c
};

struct UParticleModuleSubUVBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMM_UIShopPeriodDetailSlot {
	UMirTextBlock* mTxtPeriodTitle; // 0x2e0
};

struct UFoliageType {
	FGuid UpdateGuid; // 0x28
	float Density; // 0x38
	float DensityAdjustmentFactor; // 0x3c
	float Radius; // 0x40
	bool bSingleInstanceModeOverrideRadius; // 0x44
	float SingleInstanceModeRadius; // 0x48
	EFoliageScaling Scaling; // 0x4c
	FFloatInterval ScaleX; // 0x50
	FFloatInterval ScaleY; // 0x58
	FFloatInterval ScaleZ; // 0x60
	FFoliageVertexColorChannelMask VertexColorMaskByChannel[0x4]; // 0x68
	FoliageVertexColorMask VertexColorMask; // 0x98
	float VertexColorMaskThreshold; // 0x9c
	char VertexColorMaskInvert : 1; // 0xa0
	FFloatInterval ZOffset; // 0xa4
	char AlignToNormal : 1; // 0xac
	float AlignMaxAngle; // 0xb0
	char RandomYaw : 1; // 0xb4
	float RandomPitchAngle; // 0xb8
	FFloatInterval GroundSlopeAngle; // 0xbc
	FFloatInterval Height; // 0xc4
	TArray<FName> LandscapeLayers; // 0xd0
	float MinimumLayerWeight; // 0xe0
	TArray<FName> ExclusionLandscapeLayers; // 0xe8
	float MinimumExclusionLayerWeight; // 0xf8
	FName LandscapeLayer; // 0xfc
	char CollisionWithWorld : 1; // 0x104
	FVector CollisionScale; // 0x108
	FBoxSphereBounds MeshBounds; // 0x114
	FVector LowBoundOriginRadius; // 0x130
	EComponentMobility Mobility; // 0x13c
	FInt32Interval CullDistance; // 0x140
	char bEnableStaticLighting : 1; // 0x148
	char CastShadow : 1; // 0x148
	char bAffectDynamicIndirectLighting : 1; // 0x148
	char bAffectDistanceFieldLighting : 1; // 0x148
	char bCastDynamicShadow : 1; // 0x148
	char bCastStaticShadow : 1; // 0x148
	char bCastShadowAsTwoSided : 1; // 0x148
	char bReceivesDecals : 1; // 0x148
	char bOverrideLightMapRes : 1; // 0x149
	int32_t OverriddenLightMapRes; // 0x14c
	ELightmapType LightmapType; // 0x150
	char bUseAsOccluder : 1; // 0x154
	FBodyInstance BodyInstance; // 0x158
	EHasCustomNavigableGeometry CustomNavigableGeometry; // 0x268
	FLightingChannels LightingChannels; // 0x269
	char bRenderCustomDepth : 1; // 0x26c
	int32_t CustomDepthStencilValue; // 0x270
	int32_t TranslucencySortPriority; // 0x274
	float CollisionRadius; // 0x278
	float ShadeRadius; // 0x27c
	int32_t NumSteps; // 0x280
	float InitialSeedDensity; // 0x284
	float AverageSpreadDistance; // 0x288
	float SpreadVariance; // 0x28c
	int32_t SeedsPerStep; // 0x290
	int32_t DistributionSeed; // 0x294
	float MaxInitialSeedOffset; // 0x298
	bool bCanGrowInShade; // 0x29c
	bool bSpawnsInShade; // 0x29d
	float MaxInitialAge; // 0x2a0
	float MaxAge; // 0x2a4
	float OverlapPriority; // 0x2a8
	FFloatInterval ProceduralScale; // 0x2ac
	FRuntimeFloatCurve ScaleCurve; // 0x2b8
	int32_t ChangeCount; // 0x340
	char ReapplyDensity : 1; // 0x344
	char ReapplyRadius : 1; // 0x344
	char ReapplyAlignToNormal : 1; // 0x344
	char ReapplyRandomYaw : 1; // 0x344
	char ReapplyScaling : 1; // 0x344
	char ReapplyScaleX : 1; // 0x344
	char ReapplyScaleY : 1; // 0x344
	char ReapplyScaleZ : 1; // 0x344
	char ReapplyRandomPitchAngle : 1; // 0x345
	char ReapplyGroundSlope : 1; // 0x345
	char ReapplyHeight : 1; // 0x345
	char ReapplyLandscapeLayers : 1; // 0x345
	char ReapplyZOffset : 1; // 0x345
	char ReapplyCollisionWithWorld : 1; // 0x345
	char ReapplyVertexColorMask : 1; // 0x345
	char bEnableDensityScaling : 1; // 0x345
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x348
	int32_t VirtualTextureCullMips; // 0x358
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x35c
};

struct UMaterialExpressionFeatureLevelSwitch {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x4]; // 0x54
};

struct UMM_GameOption_Account {
	UMirTextBlock* Txt_CharacterName; // 0x2f0
	UMirTextBlock* Txt_AccountName; // 0x2f8
	UMM_Common_Btn_Symbol* Btn_EditNickName; // 0x300
	UMM_Common_Btn_Symbol* Btn_Account_Apple; // 0x308
	UMirTextBlock* Txt_Account_Apple; // 0x310
	UMM_Common_Btn_Symbol* Btn_Account_Google; // 0x318
	UMirTextBlock* Txt_Account_Google; // 0x320
	UMM_Common_Btn_Symbol* Btn_Account_Facebook; // 0x328
	UMirTextBlock* Txt_Account_Facebook; // 0x330
	UMM_Common_Btn_Symbol* Btn_Account_Steam; // 0x338
	UMirTextBlock* Txt_Account_Steam; // 0x340
	UMirCanvasPanel* Can_Slot_Steam; // 0x348
	UPanelWidget* Slot_Guest; // 0x350
	UMirTextBlock* Txt_Account_Guest; // 0x358
	UPanelWidget* Slot_GuestContinue; // 0x360
	UMM_Common_Btn_Symbol* Btn_Account_GuestContinue; // 0x368
	UMM_Common_Btn* m_CB_Help; // 0x370
	UMM_Common_Btn* m_CB_Customer; // 0x378
	UMM_Common_Btn* m_CB_ServicePolicy; // 0x380
	UMM_Common_Btn* m_CB_PrivacyPolicy; // 0x388
	UMM_Common_Btn* m_CB_Withdraw; // 0x390
	UMM_Common_Btn* m_CB_Coupon; // 0x398
	UMM_Common_Btn* m_CB_Community; // 0x3a0
	UMM_Common_Btn* m_CB_OneStoreLogout; // 0x3a8
	UMM_Common_Btn* m_CB_ChangeCharacter; // 0x3b0
	UMM_Common_Btn* m_CB_Logout; // 0x3b8
	UMM_Common_Btn* m_CB_MistranslationReport; // 0x3c0
	UMirTextBlock* m_Txt_VersionValue; // 0x3c8
	UMirTextBlock* m_Txt_WhiteListVersionValue; // 0x3d0
};

struct UMM_Xdraco_SealingInfo {
	UMM_Item_Make_Slot_Registered* m_pSlot_SealingItem; // 0x2f0
	TArray<UMM_ItemSealing_Material_Slot*> Slot_Material; // 0x2f8
	UPanelWidget* Grid_NeedCost1; // 0x308
	UMirImage* Img_NeedCost1; // 0x310
	UMirTextBlock* Txt_NeedCost1; // 0x318
	UMM_Common_Btn_Symbol* m_pBtn_NeedCost1; // 0x320
	UMirButton* m_pBtnMain_NeedCost1; // 0x328
	UPanelWidget* Grid_NeedCost2; // 0x330
	UMirImage* Img_NeedCost2; // 0x338
	UMirTextBlock* Txt_NeedCost2; // 0x340
	UMM_Common_Btn_Symbol* m_pBtn_NeedCost2; // 0x348
	UMirButton* m_pBtnMain_NeedCost2; // 0x350
	int32_t m_CostType_2; // 0x358
	int32_t m_CostType_3; // 0x35c
	UMirCanvasPanel* m_pPanel_Bottom; // 0x360
	UMM_Common_Btn* m_pBtn_Make; // 0x368
	UPanelWidget* m_pDecoEffectPanel; // 0x370
	UMirCanvasPanel* m_pPanel_Effect_Basic; // 0x378
	uint32_t m_iMakeItemID; // 0x380
	UVerticalBox* Panel_Notice_MinReserve; // 0x388
	UMirTextBlock* Txt_Notice_MinReserve; // 0x390
	UMirRichTextBlock* RTxt_Notice_MinReserve; // 0x398
};

struct UMovieSceneSpawnTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
	FGuid ObjectGuid; // 0x68
};

struct UMM_Popup_Teleport {
	UMirButton* m_pBtnBGClose; // 0x2f0
	UMM_Common_Btn_Symbol* m_pBtnSymClose; // 0x2f8
	UMM_Common_Btn* m_pBtnSymTeleport; // 0x300
	UMirScrollBox* m_pScrollBox; // 0x308
	UMM_Common_Board_Notice* m_pCommonBoard; // 0x310
};

struct AProceduralFoliageVolume {
	UProceduralFoliageComponent* ProceduralComponent; // 0x250
};

struct UMM_Common_Item_NameTag {
	UMirTextBlock* Txt_TargetItemName; // 0x2f0
	UMirTextBlock* Txt_TargetItemSmeltingLv; // 0x2f8
	UMirImage* Img_TargetItemTier; // 0x300
	UPanelWidget* Panel_TargetItemGradePanel; // 0x308
	UMirTextBlock* Txt_TargetItemGrade; // 0x310
	UPanelWidget* Panel_TargetItemPolishPanel; // 0x318
	UMirImage* Img_TargetItemPolishEffect_One; // 0x320
	UMirImage* Img_TargetItemPolishEffect_All; // 0x328
	UPanelWidget* Panel_TargetItemSetPanel; // 0x330
	UPanelWidget* m_GridTier; // 0x338
};

struct UEnvQueryManager {
	TArray<FEnvQueryInstanceCache> InstanceCache; // 0xa8
	TArray<UEnvQueryContext*> LocalContexts; // 0xb8
	TArray<UEnvQueryInstanceBlueprintWrapper*> GCShieldedWrappers; // 0xc8
	float MaxAllowedTestingTime; // 0x12c
	bool bTestQueriesUsingBreadth; // 0x130
	int32_t QueryCountWarningThreshold; // 0x134
	double QueryCountWarningInterval; // 0x138
};

struct UWidgetTree {
	UWidget* RootWidget; // 0x28
};

struct UMM_ShortCutKey {
	UMirCanvasPanel* cp_slot; // 0x2e0
	UMirButton* Btn_BG; // 0x2e8
};

struct UMM_SubTarget {
	UWidgetAnimation* m_Ani_SubTarget; // 0x2e0
};

struct UParticleModuleSubUVMovie {
	char bUseEmitterTime : 1; // 0x70
	FRawDistributionFloat FrameRate; // 0x78
	int32_t StartingFrame; // 0xa8
};

struct UShowLoginUICallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct AMyNpcSpawner {
	USkeletalMeshComponent* m_pMesh; // 0x218
	FVector m_BoxExtend; // 0x220
	FVector m_WarpCoordinate; // 0x22c
	float m_fCapsuleHalfHeigth; // 0x238
	float m_fCapsuleRadius; // 0x23c
	int32_t m_NpcID; // 0x240
	FString m_NpcNameTitle; // 0x248
	FString m_NpcName; // 0x258
	float m_InteractionRange; // 0x268
	float m_SightRange; // 0x26c
	bool m_bShowInteractionRange; // 0x270
	bool m_bSightRange; // 0x271
};

struct UMM_B_Login {
	bool m_bAbleTick; // 0x2f0
	float m_fProgressSpeed; // 0x2f4
	FLinearColor ServerCongestion_Normal; // 0x2f8
	FLinearColor ServerCongestion_Busy; // 0x308
	FLinearColor ServerCongestion_Saturation; // 0x318
	FLinearColor ServerState_Closed; // 0x328
	float m_fShowLoginInfoTime; // 0x338
	UPanelWidget* m_Grid_TouchNotice; // 0x350
	UMirTextBlock* m_Txt_ServerName; // 0x358
	UMirTextBlock* m_Txt_Peace; // 0x360
	UMirTextBlock* m_Txt_ServerState; // 0x368
	UMirButton* m_Btn_ServerChange; // 0x370
	UMirTextBlock* m_Txt_Version; // 0x378
	UMirTextBlock* m_Txt_LoadingPercent; // 0x380
	UPanelWidget* m_Can_Logout; // 0x388
	UMirImage* m_Img_LogoutIcon; // 0x390
	UMirButton* m_Btn_Logout; // 0x398
	UPanelWidget* m_Can_Option; // 0x3a0
	UMirButton* m_Btn_Option; // 0x3a8
	UPanelWidget* m_Overlay_GameStart; // 0x3b0
	UMirButton* m_Btn_GameStart; // 0x3b8
	UMirButton* m_Btn_Screen; // 0x3c0
	UMM_VolumeController* m_VolumeController; // 0x3c8
	UMirButton* m_Btn_AccountPopup; // 0x3d0
	UMirButton* m_Btn_BlockScreen; // 0x3d8
};

struct UMM_PKMode {
	UWidgetAnimation* m_pAnim_Start; // 0x2f0
	UWidgetAnimation* m_pAnim_End; // 0x2f8
	UMM_PKModeSlot* ListElementClass; // 0x300
	UMirWrapScrollBox* m_ScrollBoxList; // 0x308
	TArray<UMM_PKModeSlot*> PKSlotList; // 0x310
	int32_t m_TestValue; // 0x320
	int32_t ScrollBox_Offset; // 0x324
	float SkipTimer_ScrollBox; // 0x328
	UMirTextBlock* m_TextTitle; // 0x330
	UTextBlock* m_TextBlock_TendGrade; // 0x338
	UTextBlock* m_TextBlock_TendValue; // 0x340
	UTextBlock* m_TextPKExplain_1; // 0x348
	UTextBlock* m_TextPKExplain_2; // 0x350
	UCheckBox* m_CheckBox_OnlyUserTarget; // 0x358
	UTextBlock* m_TextBlock_OnlyUserTargetNotice; // 0x360
	UMM_Common_Btn* m_Btn_PKRecord; // 0x368
	UMirButton* Btn_Background; // 0x370
	UMM_Common_Btn_Symbol* btn_close; // 0x378
	UMM_Common_ToolTipBtn* Btn_Tooltip_Mode; // 0x380
	UMM_Common_ToolTipBtn* Btn_Tooltip_ModeChange; // 0x388
	UVerticalBox* m_VBox_1; // 0x390
	UVerticalBox* m_VBox_2; // 0x398
	UVerticalBox* m_VBox_3; // 0x3a0
	UVerticalBox* m_VBox_4; // 0x3a8
	TArray<UMM_Option_Ability*> m_SlotList_1; // 0x3b0
	TArray<UMM_Option_Ability*> m_SlotList_2; // 0x3c0
	TArray<UMM_Option_Ability*> m_SlotList_3; // 0x3d0
	TArray<UMM_Option_Ability*> m_SlotList_4; // 0x3e0
	UMM_Option_Ability* m_pRefWidget; // 0x3f0
	UMM_Scroll_Dots* m_ScrollDots; // 0x3f8
	int32_t ScrollBox_Offset_Old; // 0x404
	bool EventSkip; // 0x408
	UMirCanvasPanel* Can_AllyListBtn; // 0x410
	UMirButton* Btn_AllyList; // 0x418
};

struct UMM_Popup_Restore_Item {
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x2f0
	UMM_Common_Btn* m_pBtnMove; // 0x2f8
	UMirScrollBox* m_pScrollList; // 0x300
};

struct UMaterialInstance {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UMaterialInterface* Parent; // 0x90
	char bHasStaticPermutationResource : 1; // 0x98
	char bOverrideSubsurfaceProfile : 1; // 0x98
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xa0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xb0
	TArray<FTextureParameterValue> TextureParameterValues; // 0xc0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xd0
	TArray<FFontParameterValue> FontParameterValues; // 0xe0
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0xf0
	TArray<UObject*> PermutationTextureReferences; // 0x108
	FStaticParameterSet StaticParameters; // 0x118
};

struct UMM_WarpMoveManager {
	bool bSendWarp; // 0x48
	bool UsedPortal; // 0x49
	bool WarpInProgress; // 0x4a
	EWarpMethodType WarpMethodType; // 0x4b
	EWarpContentsType WarpContentsType; // 0x4c
	int32_t StageId; // 0x50
	FVector DestLocation; // 0x54
	FRotator DestRotator; // 0x60
	int32_t RecvStageID; // 0x6c
	EAutoMoveState ReservedAutoMoveState; // 0x70
	EAutoBattleState ReservedAutoBattleState; // 0x71
	EBehaviorType ReservedBehaviorType; // 0x72
	int32_t TargetID; // 0x74
	int32_t TriggerPortalID; // 0x78
	int32_t ActiveQuestID; // 0x7c
	int32_t ActiveQuestType; // 0x80
	int32_t MoveRequestID; // 0x84
	int32_t MoveRequestNpcID; // 0x88
	int32_t ServerWarpMethod; // 0x8c
	bool ScriptWarp; // 0x90
	bool bChannelWaiting; // 0x91
	int32_t iChannelWaitingWarpTID; // 0x94
	int64_t iChannelWaitingZoneUID; // 0x98
	int64_t ZoneUniqueID; // 0xa0
};

struct UBTTask_DisableCounterAttack {
	EBTNodeResult ReturnResult; // 0x70
};

struct UParticleModuleOrbitBase {
	char bUseEmitterTime : 1; // 0x30
};

struct UMM_B_Synthesis {
	UMM_CommonVerticalTabSet* m_C_Tab_Vertical; // 0x2e0
	UMM_CommonHorizontalTabSet* m_C_Tab_Horizon; // 0x2e8
	UMM_ItemSynthesis* m_ItemSynthesis; // 0x2f0
	UMM_ItemSynthesis_Inven* m_ItemSynthesis_Inven; // 0x2f8
};

struct UMM_PopUp_ItemInfo_List {
	UMM_PopUp_ItemInfo_Ability* Combat_Ability; // 0x2e8
	UPanelWidget* m_CombatGrid; // 0x2f0
	UTextBlock* m_CombatTxt; // 0x2f8
	UPanelWidget* m_ItemNameEquipLVGrid; // 0x300
	UPanelWidget* m_NameGrid; // 0x308
	UTextBlock* m_ItemName; // 0x310
	UTextBlock* m_OverlapEquipAble; // 0x318
	UPanelWidget* m_EquipLvGrid; // 0x320
	UTextBlock* m_EquipLvTxt; // 0x328
	UTextBlock* m_JobTxt; // 0x330
	bool isShowItemLine; // 0x338
	UPanelWidget* m_ItemLine; // 0x340
	UPanelWidget* m_SmeltGrid; // 0x348
	UTextBlock* m_SmeltValue; // 0x350
	UPanelWidget* m_SpecialAbilityGrid; // 0x358
	UPanelWidget* m_AbilityLine; // 0x360
	UPanelWidget* m_AbilityGrid; // 0x368
	TArray<UMM_PopUp_ItemInfo_Ability*> m_Abilities; // 0x370
	UMirCanvasPanel* m_Grid_Trade; // 0x380
	UMM_Common_Btn_Symbol* m_AddOptionBtn; // 0x388
	UPanelWidget* m_OptionGrid; // 0x3a0
	UMirTextBlock* m_OptionName; // 0x3a8
	UImage* Img_OptionBG; // 0x3b0
	TArray<UMM_PopUp_ItemInfo_Ability*> m_OptionAbilities; // 0x3b8
	UPanelWidget* m_ItemSetGrid; // 0x3c8
	UTextBlock* m_SetNameCount; // 0x3d0
	UPanelWidget* m_SetAbilityGrid; // 0x3d8
	TArray<UMM_PopUp_ItemInfo_Ability*> m_SetItemAbillities; // 0x3e0
	UPanelWidget* m_ItemDescGrid; // 0x3f0
	UTextBlock* m_ItemDesc; // 0x3f8
	UPanelWidget* m_Grid_Unsealing; // 0x400
	UMirTextBlock* m_Txt_UnsealingTime; // 0x408
	UPanelWidget* m_Grid_TermTime; // 0x410
	UMirTextBlock* m_Txt_TermTime; // 0x418
	UPanelWidget* m_DurabilityGrid; // 0x420
	UMirTextBlock* m_Txt_Durability; // 0x428
	UPanelWidget* m_ItemSellGrid; // 0x430
	UMirTextBlock* m_ItemSellTitle; // 0x438
	UMirTextBlock* m_ItemSellPrice; // 0x440
	UMirTextBlock* m_OptionMaxStr; // 0x448
	UMirScrollBox* m_ScrollInfo; // 0x450
	UMirCanvasPanel* m_Panel_Package; // 0x458
	UMM_Common_Btn_Symbol* m_PackageBtn; // 0x460
	UPanelWidget* m_Panel_Source; // 0x468
	UMirTextBlock* m_Txt_SourceTitle; // 0x470
	UMirTextBlock* m_Txt_Source; // 0x478
	UMirTextBlock* m_Txt_CreateDate; // 0x480
	UMirTextBlock* m_Txt_Serial; // 0x488
	UMirTextBlock* m_Txt_SerialNumber; // 0x490
	UMirTextBlock* m_Txt_Limited; // 0x498
	UMirTextBlock* m_Txt_LimitedNumber; // 0x4a0
	UImage* m_Line_4; // 0x4a8
	TArray<UMirTextBlock*> m_Txt_StatNames; // 0x4b0
	bool m_IsLeftSide; // 0x4c0
	int32_t STRID_ITEM_DURABILITY; // 0x4c4
	int32_t STRID_MSG_TRADABLE; // 0x4c8
	int32_t STRID_MSG_REINFORCE_STATE; // 0x4cc
	int32_t STRID_MSG_REINFORCE; // 0x4d0
};

struct UMM_Popup_UIShopStepGoodsList {
	UMirTextBlock* m_TxtTitle; // 0x2f0
	UMirTextBlock* m_TxtDesc; // 0x2f8
	UMirListView* m_ListView; // 0x300
	UMM_Common_Btn_Symbol* m_BtnClose; // 0x308
};

struct UMM_PopupCharacterSearch {
	UMM_Common_Btn_Symbol* btn_close; // 0x2e0
	UMM_Common_Btn_Symbol* btn_prev; // 0x2e8
	UMM_Common_Btn_Symbol* btn_next; // 0x2f0
	UMM_Common_Btn* btn_confirm; // 0x2f8
	UMirTextBlock* txt_page; // 0x300
	UMirTextBlock* Txt_Title; // 0x308
	UMirTextBlock* Txt_Search; // 0x310
	UMirScrollBox* sb_list; // 0x318
};

struct UDemoNetDriver {
	TMap<FString, FRollbackNetStartupActorInfo> RollbackNetStartupActors; // 0x800
	float CheckpointSaveMaxMSPerFrame; // 0xc14
	TArray<FMulticastRecordOptions> MulticastRecordOptions; // 0xc48
	bool bIsLocalReplay; // 0xc58
	TArray<APlayerController*> SpectatorControllers; // 0xc60
};

struct ASkeletalEffect {
	USkeletalMeshComponent* m_pSkelMesh; // 0x218
};

struct URadialFalloff {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	float Radius; // 0xc0
	FVector Position; // 0xc4
	EFieldFalloffType Falloff; // 0xd0
};

struct UParticleModuleSizeMultiplyLife {
	FRawDistributionVector LifeMultiplier; // 0x30
	char MultiplyX : 1; // 0x78
	char MultiplyY : 1; // 0x78
	char MultiplyZ : 1; // 0x78
};

struct UMM_Popup_GuestContinueSetting {
	UMM_Common_Btn* m_Btn_Confirm; // 0x2e0
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e8
	UMM_Common_Btn* m_Btn_LinkIDCopy; // 0x2f0
	UMirTextBlock* m_Txt_LinkID; // 0x2f8
	UMirEditableText* m_Edit_Password; // 0x300
	UMirTextBlock* m_Txt_Password_Empty; // 0x308
	UMirTextBlock* m_Txt_Password_Complete; // 0x310
};

struct UMM_Fame_List {
	UCanvasPanel* CanvasPanel; // 0x2e0
	UPanelWidget* Grid_Title_Info; // 0x2e8
	UMirScrollBox* ScrollBox_Info; // 0x2f0
	UPanelWidget* Grid_Board; // 0x2f8
	UMirScrollBox* ScrollBox_Board; // 0x300
	UMirTextBlock* Txt_Title_Info; // 0x308
	UMM_Common_Btn_Symbol* Btn_Close_Info; // 0x310
	UMirTextBlock* Txt_Title_Board; // 0x318
	UMM_Common_Btn_Symbol* Btn_Close_Board; // 0x320
	TArray<UMM_Fame_List_SubSlot*> InfoSlot_List; // 0x328
	TArray<UMM_Fame_DetailInfo_Slot*> BoardSlot_List; // 0x338
	int32_t m_MaxInfoSlotCount; // 0x348
	int32_t m_CurrentInfoSlotCount; // 0x34c
	int32_t m_MaxBoardSlotCount; // 0x350
	int32_t m_CurrentBoardSlotCount; // 0x354
	int32_t STRID_BOARD_TITLE; // 0x358
};

struct UParticleModuleColorBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UScriptSubtitleWidget {
	FText m_SubtitleText; // 0x2e0
};

struct AGameStateBase {
	AGameModeBase* GameModeClass; // 0x218
	AGameModeBase* AuthorityGameMode; // 0x220
	ASpectatorPawn* SpectatorClass; // 0x228
	TArray<APlayerState*> PlayerArray; // 0x230
	bool bReplicatedHasBegunPlay; // 0x240
	float ReplicatedWorldTimeSeconds; // 0x244
	float ServerWorldTimeSecondsDelta; // 0x248
	float ServerWorldTimeSecondsUpdateFrequency; // 0x24c
};

struct UMM_B_UIShopAds {
	UMirCanvasPanel* m_Panel_MainTabBG; // 0x2f0
	UMirScrollBox* m_MainTabScrollBox; // 0x2f8
	UMirCanvasPanel* m_PanelSubTabLine; // 0x300
	UMirScrollBox* m_SubTabScrollBox; // 0x308
	UMM_UIShopGoodsListNormal* m_UIShopGoodsList; // 0x310
	UMirCanvasPanel* m_Panel_Ads; // 0x318
	UMirTextBlock* m_Txt_AdsTooltipTitle; // 0x320
	UMirTextBlock* m_Txt_AdsCoolTime; // 0x328
	UMirCheckBox* m_CheckBoxSkip; // 0x330
	UMirTextBlock* m_Txt_Skip; // 0x338
	UMM_Common_Btn_Cost* m_Btn_StartAds; // 0x340
	UMM_UIShopAdsRewardBox* m_AdsRewardBox; // 0x348
	UMM_UIShopAdsMovieWidget* m_MoviePlayerWidget; // 0x350
	UFadeWidget* m_FadeWidget; // 0x358
};

struct UMM_AdManager {
	FTimerHandle m_DelayHideBlockScreenTimeHandle; // 0x48
	FTimerHandle m_DelayRetryTimeHandle; // 0x50
	UObject* AdObject; // 0x88
};

struct UInGameAdManager {
	char bShouldPauseWhileAdOpen : 1; // 0x38
	TArray<DelegateProperty> ClickedBannerDelegates; // 0x40
	TArray<DelegateProperty> ClosedAdDelegates; // 0x50
};

struct UMaterialExpressionSquareRoot {
	FExpressionInput Input; // 0x40
};

struct UChaosPhysicalMaterial {
	float Friction; // 0x28
	float Restitution; // 0x2c
	float SleepingLinearVelocityThreshold; // 0x30
	float SleepingAngularVelocityThreshold; // 0x34
};

struct UCustomizingComponentBase {
	UMirTextBlock* m_Txt_Title; // 0x2e0
};

struct UMM_B_Guild_MarkChange {
	int32_t m_iCreateCost; // 0x300
	UWidgetAnimation* m_AniStart; // 0x308
	UWidgetAnimation* m_AniEnd; // 0x310
	UTextBlock* m_Txt_Notice; // 0x328
	UImage* m_Img_Frame; // 0x330
	UImage* m_Img_Symbol; // 0x338
	UEditableText* m_Edit_GuildName; // 0x340
	UScrollBox* m_Scr_SymbolList; // 0x348
	UScrollBox* m_Scr_FrameList; // 0x350
	TArray<UMM_GuildIconSlot*> m_arSymbolList; // 0x358
	TArray<UMM_GuildIconSlot*> m_arFrameList; // 0x368
	UMM_Common_Btn_Symbol* m_CB_SymbolList_Left; // 0x378
	UMM_Common_Btn_Symbol* m_CB_SymbolList_Right; // 0x380
	UMM_Common_Btn_Symbol* m_CB_FrameList_Left; // 0x388
	UMM_Common_Btn_Symbol* m_CB_FrameList_Right; // 0x390
	UMM_Common_Btn_Cost* m_CB_Create; // 0x398
};

struct UMM_BP_Attendance_Day_Slot {
	UPanelWidget* m_Panel_Today; // 0x2e0
	UPanelWidget* m_Panel_Oneday; // 0x2e8
	UMirTextBlock* m_Txt_Name; // 0x2f0
	UMM_Slot_Material* m_ItemSlot_2; // 0x2f8
	UMM_Slot_Material* m_ItemSlot_3; // 0x300
	UPanelWidget* m_Panel_Yellow; // 0x308
	UPanelWidget* m_Panel_Blue; // 0x310
	UMirImage* m_Img_Yellow; // 0x318
	UMirImage* m_Img_Blue; // 0x320
	UMM_Common_Btn* m_C_Btn_Main; // 0x328
};

struct UMM_Common_Btn_Base {
	ECommonBtnType m_eCommonBtnType; // 0x2e0
	float m_fLockTime; // 0x2e4
	bool m_bUseClickAnimation; // 0x2e8
	UMirWidgetData* m_WidgetData; // 0x2f0
	UWidgetAnimation* m_AniClick; // 0x2f8
	UMirImage* m_ImgBg; // 0x308
	UMirImage* m_ImgBgShadow; // 0x310
	UMirButton* m_BtnMain; // 0x318
	FScriptMulticastDelegate m_OnClickedEvent; // 0x330
};

struct UMM_Hud_PKPenalty {
	UPanelWidget* Panel_Effect; // 0x2f0
	UMirImage* Img_PenaltyIcon; // 0x2f8
	UMirButton* Btn_Penalty; // 0x300
	UMM_Popup_DeathPenalty* PopupDeathPenalty; // 0x308
};

struct UFindSessionsCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct APlayerCameraManager {
	APlayerController* PCOwner; // 0x218
	USceneComponent* TransformComponent; // 0x220
	float DefaultFOV; // 0x230
	float DefaultOrthoWidth; // 0x238
	float DefaultAspectRatio; // 0x240
	FCameraCacheEntry CameraCache; // 0x290
	FCameraCacheEntry LastFrameCameraCache; // 0x860
	FTViewTarget ViewTarget; // 0xe30
	FTViewTarget PendingViewTarget; // 0x1410
	FCameraCacheEntry CameraCachePrivate; // 0x1a10
	FCameraCacheEntry LastFrameCameraCachePrivate; // 0x1fe0
	TArray<UCameraModifier*> ModifierList; // 0x25b0
	TArray<UCameraModifier*> DefaultModifiers; // 0x25c0
	float FreeCamDistance; // 0x25d0
	FVector FreeCamOffset; // 0x25d4
	FVector ViewTargetOffset; // 0x25e0
	TArray<AEmitterCameraLensEffectBase*> CameraLensEffects; // 0x2600
	UCameraModifier_CameraShake* CachedCameraShakeMod; // 0x2610
	UCameraAnimInst* AnimInstPool[0x8]; // 0x2618
	TArray<FPostProcessSettings> PostProcessBlendCache; // 0x2658
	TArray<UCameraAnimInst*> ActiveAnims; // 0x2678
	TArray<UCameraAnimInst*> FreeAnims; // 0x2688
	ACameraActor* AnimCameraActor; // 0x2698
	char bIsOrthographic : 1; // 0x26a0
	char bDefaultConstrainAspectRatio : 1; // 0x26a0
	char bClientSimulatingViewTarget : 1; // 0x26a0
	char bUseClientSideCameraUpdates : 1; // 0x26a0
	char bGameCameraCutThisFrame : 1; // 0x26a1
	float ViewPitchMin; // 0x26a4
	float ViewPitchMax; // 0x26a8
	float ViewYawMin; // 0x26ac
	float ViewYawMax; // 0x26b0
	float ViewRollMin; // 0x26b4
	float ViewRollMax; // 0x26b8
	float ServerUpdateCameraTimeout; // 0x26c0
};

struct UPatchTableData {
	TArray<FName> ExcludeFileNameList; // 0x30
	TArray<FName> PatchFolderList; // 0x40
};

struct UReturnResultsTerminal {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UBlueprintGeneratedClass {
	int32_t NumReplicatedProperties; // 0x210
	char bHasNativizedParent : 1; // 0x214
	char bHasCookedComponentInstancingData : 1; // 0x214
	TArray<UDynamicBlueprintBinding*> DynamicBindingObjects; // 0x218
	TArray<UActorComponent*> ComponentTemplates; // 0x228
	TArray<UTimelineTemplate*> Timelines; // 0x238
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x248
	USimpleConstructionScript* SimpleConstructionScript; // 0x258
	UInheritableComponentHandler* InheritableComponentHandler; // 0x260
	UStructProperty* UberGraphFramePointerProperty; // 0x268
	UFunction* UberGraphFunction; // 0x270
	TMap<FName, FBlueprintCookedComponentInstancingData> CookedComponentInstancingData; // 0x278
};

struct UGameplayTask_WaitDelay {
	FScriptMulticastDelegate OnFinish; // 0x68
};

struct UMM_UserEvent_BenedictionSlot {
	UMirImage* m_Img_GradeBgEffect; // 0x3f8
	UMirImage* m_ImgDisabled; // 0x400
	UMirImage* m_ImgCurrSelected; // 0x408
	UMirImage* m_Img_Complete; // 0x410
	UEffectWidgetBase* m_Effect; // 0x418
};

struct USoundWaveProcedural {
	int32_t CompressionQuality; // 0x160
	int32_t StreamingPriority; // 0x164
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x168
	ESoundGroup SoundGroup; // 0x16a
	char bLooping : 1; // 0x16b
	char bStreaming : 1; // 0x16b
	char bSeekableStreaming : 1; // 0x16b
	ESoundWaveLoadingBehavior LoadingBehavior; // 0x16c
	char bMature : 1; // 0x16d
	char bManualWordWrap : 1; // 0x16d
	char bSingleLine : 1; // 0x16d
	char bIsAmbisonics : 1; // 0x16d
	TArray<float> FrequenciesToAnalyze; // 0x170
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x180
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x190
	int32_t InitialChunkSize; // 0x1a0
	FString SpokenText; // 0x1e8
	float SubtitlePriority; // 0x1f8
	float Volume; // 0x1fc
	float Pitch; // 0x200
	int32_t NumChannels; // 0x204
	int32_t SampleRate; // 0x208
	TArray<FSubtitleCue> Subtitles; // 0x218
	UCurveTable* Curves; // 0x228
	UCurveTable* InternalCurves; // 0x230
};

struct UMM_HudTargetBuffInfo {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UNavigationQueryFilter {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct UMM_Popup_GuestContinue {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e0
	UMM_Common_Btn* m_Btn_LoadAccount; // 0x2e8
	UMirEditableText* m_Edit_Code; // 0x2f0
	UMirEditableText* m_Edit_Password; // 0x2f8
};

struct UMM_DailyWork_Progress {
	UMM_Slot_DailyWork_Reward* Slot_Plus_Reward01; // 0x2e0
	UMirTextBlock* Txt_PlusReward_2; // 0x2e8
	UMirImage* Img_Check_PlusReward_2; // 0x2f0
	UMM_Slot_DailyWork_Reward* Slot_Plus_Reward02; // 0x2f8
	UMirTextBlock* Txt_PlusReward_3; // 0x300
	UMirImage* Img_Check_PlusReward_3; // 0x308
	UMirRichTextBlock* RichTxt_Progress; // 0x310
	UMirProgressBar* Progress_DailyWork; // 0x318
	UMirTextBlock* Txt_Title; // 0x320
	UMM_Common_Btn* Btn_ReceiveAll; // 0x328
	int32_t STRING_DAILY_WORK_TITLE; // 0x330
	int32_t STRING_DAILY_WORK_PLUS_REWARD_2; // 0x334
	int32_t STRING_DAILY_WORK_PLUS_REWARD_3; // 0x338
	int32_t ALL_RECIEVE_BTN_EFECT_ID; // 0x33c
};

struct UMM_Hud_QuestMessage {
	UPanelWidget* m_Hor_NormalBg; // 0x318
	UPanelWidget* m_Hor_NormalLine; // 0x320
	UPanelWidget* m_Hor_RelationBg; // 0x328
	UPanelWidget* m_Hor_RelationLine; // 0x330
};

struct UMM_BattlePass_Menu_Btn {
	EBattlePassMenu MENU_BTN_TYPE; // 0x2f0
	int32_t STRING_ID_MENU_BTN; // 0x2f4
	UMirImage* m_Img_Selected; // 0x2f8
	UMirImage* m_Img_Locked; // 0x300
	UMirTextBlock* m_Txt_TabName; // 0x308
	UMirImage* m_Img_Indicator; // 0x310
	UMirButton* m_Btn_Main; // 0x318
};

struct UMM_Item_Make_Slot_Registered {
	UMirImage* m_Img_GradeBgEffect; // 0x3e8
	UMirTextBlock* m_TxtName; // 0x3f0
	UMirImage* m_ImgEquiped; // 0x3f8
	UMirTextBlock* m_TxtCount; // 0x400
	UMirImage* m_ImgTier; // 0x408
	UGridPanel* m_PanelName; // 0x410
	int32_t SLOT_EFFECT_INDEX; // 0x418
};

struct UMM_Popup_Auction_Count {
	UMM_Popup_Auction_ItemSlot* m_pItemSlot; // 0x2e0
	UMirTextBlock* m_pTxtTheme; // 0x2e8
	UMirRichTextBlock* m_pTxtSellCount; // 0x2f0
	UMirTextBlock* m_pTxtPrice; // 0x2f8
	UMirTextBlock* m_pTxtCommision; // 0x300
	UMirTextBlock* m_pTxtTotalPrice; // 0x308
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x310
	UMM_Common_Btn* m_pBtnOk; // 0x318
	UMM_Common_Btn* m_pBtnCancle; // 0x320
};

struct UMM_GuildShortCut {
	UMirButton* btn_close; // 0x2e0
	UMM_Common_Btn* btn_character_detail; // 0x2e8
	UMM_Common_Btn* btn_guild_grade; // 0x2f0
};

struct UMM_HudPetBuffIcon {
	UMirImage* m_Img_TierBg; // 0x2e8
	UMirImage* m_Img_PetIcon; // 0x2f0
	UMirTextBlock* m_Txt_BuffTime; // 0x2f8
	UMirButton* m_Btn_Main; // 0x300
};

struct UExporter {
	UObject* SupportedClass; // 0x28
	UObject* ExportRootScope; // 0x30
	TArray<FString> FormatExtension; // 0x38
	TArray<FString> FormatDescription; // 0x48
	int32_t PreferredFormatIndex; // 0x58
	int32_t TextIndent; // 0x5c
	char bText : 1; // 0x60
	char bSelectedOnly : 1; // 0x60
	char bForceFileOperations : 1; // 0x60
	UAssetExportTask* ExportTask; // 0x68
};

struct AMirLevelSequenceActor {
	ULevelSequencePlayer* m_pLevelSequencePlayer; // 0x238
	ALevelSequenceActor* m_pLevelSequenceActor; // 0x240
};

struct UMM_Occupation_Revival_Flag {
	FLinearColor neutralGaugeColor; // 0x2e0
	FLinearColor defenseGaugeColor; // 0x2f0
	FLinearColor offenseGaugeColor; // 0x300
	UCanvasPanel* rootPanel; // 0x310
	UCanvasPanel* guildMarkPanel; // 0x318
	UCanvasPanel* gaugePanel; // 0x320
	UCanvasPanel* lockTimePanel; // 0x328
	UTextBlock* revivalFlagName; // 0x330
	UTextBlock* ownerGuildName; // 0x338
	UImage* ownerGuildMark; // 0x340
	UImage* ownerGuildFrame; // 0x348
	UImage* dominanceGlow; // 0x350
	UImage* dominanceLine; // 0x358
	UImage* ownerGauge; // 0x360
	UImage* dominanceGauge; // 0x368
	UImage* lockTimeGauge; // 0x370
	UImage* gaugeHighlight_Home; // 0x378
	UImage* gaugeHighlight_Away; // 0x380
	UWidgetAnimation* animRotation_Home; // 0x388
	UWidgetAnimation* animRotation_Away; // 0x390
	UWidgetAnimation* animAwayIn; // 0x398
};

struct UMM_Popup_ClosedTraining_Collect {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UMirTextBlock* m_Txt_Desc; // 0x2e8
	UMirScrollBox* m_ScrollBox; // 0x2f0
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f8
};

struct UMM_GuildWanted {
	UMirCanvasPanel* mPanelWanted; // 0x2f0
	UMirTextBlock* txt_count; // 0x2f8
	UMirButton* btn_search; // 0x300
	UMirScrollBox* sb_wanted; // 0x308
	UMM_Common_Board_Notice* bn_empty; // 0x310
	UMM_GuildDevLock* mPanelDevLock; // 0x318
};

struct UWidgetBlueprintGeneratedClass {
	UWidgetTree* WidgetTree; // 0x300
	char bAllowTemplate : 1; // 0x308
	char bAllowDynamicCreation : 1; // 0x308
	char bValidTemplate : 1; // 0x308
	char bTemplateInitialized : 1; // 0x308
	char bCookedTemplate : 1; // 0x308
	char bClassRequiresNativeTick : 1; // 0x308
	TArray<FDelegateRuntimeBinding> Bindings; // 0x310
	TArray<UWidgetAnimation*> Animations; // 0x320
	TArray<FName> NamedSlots; // 0x330
	UUserWidget* TemplateAsset; // 0x340
	UUserWidget* Template; // 0x368
};

struct ASpectatorPawn {
	float BaseTurnRate; // 0x278
	float BaseLookUpRate; // 0x27c
	UPawnMovementComponent* MovementComponent; // 0x280
	USphereComponent* CollisionComponent; // 0x288
	UStaticMeshComponent* MeshComponent; // 0x290
	char bAddDefaultMovementBindings : 1; // 0x298
};

struct UMM_Dominion_Title_NormalList {
	UVerticalBox* m_pVertBox; // 0x2e0
	UMirTextBlock* m_pTxtTitle; // 0x2e8
};

struct ASpectatorBeaconClient {
	FString DestSessionId; // 0x2d8
	FSpectatorReservation PendingReservation; // 0x2e8
	ESpectatorClientRequestType RequestType; // 0x360
	bool bPendingReservationSent; // 0x361
	bool bCancelReservation; // 0x362
};

struct UMM_Slot_Material_CircleA {
	UMirTextBlock* m_Smelt; // 0x440
};

struct UMM_UIAction_Achievement {
	int32_t STRING_ERROR_ACHIEVEMNT_COMPLETE; // 0x154
	int32_t STRING_ERROR_EMPTY_RECEIVEALL; // 0x158
	int32_t STRING_ERROR_NOTENOUGH_INVENTORY; // 0x15c
	int32_t STRING_ERROR_ACHIEVEMENT_END; // 0x160
	int32_t STRING_ERROR_ACHIEVEMENT_MAX_MONEY; // 0x164
	bool m_IsLevelUp; // 0x16c
	int32_t m_PrevLevel; // 0x170
	bool m_IsNotRecieve; // 0x174
	int32_t STRING_ERROR_MAX_VALUE_GOLD_COIN; // 0x17c
	int32_t STRING_ERROR_MAX_VALUE_SILVER_COIN; // 0x180
	int32_t STRING_ERROR_MAX_VALUE_COIN; // 0x184
	int32_t STRING_ERROR_MAX_VALUE_SAPPHIRE; // 0x188
	int32_t STRING_ERROR_MAX_VALUE_ENERGY_POINT; // 0x18c
	int32_t STRING_ERROR_MAX_VALUE_BLACK_IRON; // 0x190
	int32_t STRING_ERROR_MAX_VALUE_COMBAT_JADE; // 0x194
	int32_t STRING_ERROR_MAX_VALUE_PVP_SCORE; // 0x198
	int32_t STRING_ERROR_MAX_VALUE_GUILD_COIN; // 0x19c
	int32_t STRING_ERROR_MAX_VALUE_FRIENDSHIP_SCORE; // 0x1a0
};

struct UComboButtonWidgetStyle {
	FComboButtonStyle ComboButtonStyle; // 0x30
};

struct UChaosDebugDrawComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UAnimationSharingManager {
	TArray<USkeleton*> Skeletons; // 0x28
	TArray<UAnimSharingInstance*> PerSkeletonData; // 0x38
};

struct UMM_B_NPCMenu {
	UMM_Common_Btn_Symbol* m_Btn_Menu1; // 0x2e0
	UMM_Common_Btn_Symbol* m_Btn_Menu2; // 0x2e8
	UMM_Common_Btn_Symbol* m_Btn_Menu3; // 0x2f0
	UMM_Common_Btn_Symbol* m_Btn_Menu4; // 0x2f8
	TArray<UMM_Common_Btn_Symbol*> BtnMenuArray; // 0x300
	UTextBlock* m_Txt_Menu1; // 0x310
	UTextBlock* m_Txt_Menu2; // 0x318
	UTextBlock* m_Txt_Menu3; // 0x320
	UTextBlock* m_Txt_Menu4; // 0x328
	TArray<UTextBlock*> TxtMenuArray; // 0x330
	UPanelWidget* m_Grd_Menu1; // 0x340
	UPanelWidget* m_Grd_Menu2; // 0x348
	UPanelWidget* m_Grd_Menu3; // 0x350
	UPanelWidget* m_Grd_Menu4; // 0x358
	TArray<UPanelWidget*> GridMenuArray; // 0x360
	UMM_Common_Btn_Symbol* m_Btn_MenuRelation; // 0x380
	UTextBlock* m_Txt_MenuRelation; // 0x388
	UPanelWidget* m_Grd_MenuRelation; // 0x390
};

struct UGeometryCollectionComponent {
	AChaosSolverActor* ChaosSolverActor; // 0x448
	UGeometryCollection* RestCollection; // 0x530
	TArray<AFieldSystemActor*> InitializationFields; // 0x538
	bool Simulating; // 0x548
	EObjectStateTypeEnum ObjectType; // 0x550
	bool EnableClustering; // 0x551
	int32_t ClusterGroupIndex; // 0x554
	int32_t MaxClusterLevel; // 0x558
	TArray<float> DamageThreshold; // 0x560
	EClusterConnectionTypeEnum ClusterConnectionType; // 0x570
	int32_t CollisionGroup; // 0x574
	float CollisionSampleFraction; // 0x578
	UChaosPhysicalMaterial* PhysicalMaterial; // 0x580
	EInitialVelocityTypeEnum InitialVelocityType; // 0x588
	FVector InitialLinearVelocity; // 0x58c
	FVector InitialAngularVelocity; // 0x598
	FGeomComponentCacheParameters CacheParameters; // 0x5a8
	FScriptMulticastDelegate NotifyGeometryCollectionPhysicsStateChange; // 0x5f8
	FScriptMulticastDelegate NotifyGeometryCollectionPhysicsLoadingStateChange; // 0x608
	FScriptMulticastDelegate OnChaosBreakEvent; // 0x630
	float DesiredCacheTime; // 0x640
	bool CachePlayback; // 0x644
	FScriptMulticastDelegate OnChaosPhysicsCollision; // 0x648
	bool bNotifyBreaks; // 0x658
	bool bNotifyCollisions; // 0x659
	UBodySetup* DummyBodySetup; // 0x808
};

struct APaperGroupedSpriteActor {
	UPaperGroupedSpriteComponent* RenderComponent; // 0x218
};

struct AController {
	APlayerState* PlayerState; // 0x220
	FScriptMulticastDelegate OnInstigatedAnyDamage; // 0x230
	FName StateName; // 0x240
	APawn* Pawn; // 0x248
	ACharacter* Character; // 0x258
	USceneComponent* TransformComponent; // 0x260
	FRotator ControlRotation; // 0x280
	char bAttachToPawn : 1; // 0x28c
};

struct ARectLight {
	URectLightComponent* RectLightComponent; // 0x228
};

struct UMM_Dominion_Base_StrongPoint {
	UMM_GuildIcon* m_pGuildIcon; // 0x308
	UMirTextBlock* m_pTxtGuildName; // 0x310
	UMirTextBlock* m_pTxtGuildMaster; // 0x318
	UMM_Common_Btn_Symbol* m_pBtnGuildInfo; // 0x320
	UMirTextBlock* m_pTxtGuildEmpty; // 0x328
	UWidgetSwitcher* m_pSwitcherGuild; // 0x330
	UMirTextBlock* m_pTxtOccupationDur; // 0x338
	UMirTextBlock* m_pTxtOccupationState; // 0x340
	UMirTextBlock* m_pTxtBlackIronValue; // 0x348
	UMirTextBlock* m_pTxtStorageBlackIronValue; // 0x350
	UMirTextBlock* m_pTxtSellBlackIronValue; // 0x358
	UMM_Common_Btn* m_pBtnBlackIronStorage; // 0x360
	UMirImage* img_black_iron_indicator; // 0x368
	UMirButton* m_pBtnInfoBlackIron; // 0x370
	UMirButton* m_pBtnInfoBlackIronStorage; // 0x378
	UMirButton* m_pBtnInfoBlackIronSell; // 0x380
	UMM_Common_Board_Notice* m_pEmptyCommonBoard; // 0x388
	UMM_Common_Btn_Translation* m_pBtnTranslation_Notice; // 0x390
	UMM_Common_Btn* m_pBtn_Send_Notice; // 0x398
	UMirScrollBox* m_pScr_Edit_Notice; // 0x3a0
	UMirMultiLineEditableText* m_pEdit_Notice; // 0x3a8
	UMirScrollBox* m_pScr_Txt_Notice; // 0x3b0
	UMirTextBlock* m_pTxt_Notice; // 0x3b8
};

struct AMode_Unified_C {
	USceneComponent* DefaultSceneRoot; // 0x4a0
	UMediaPlayer* LogoMedia; // 0x4a8
};

struct UMM_UIShopGoodsBigSlot {
	UMirCanvasPanel* m_Panel_GoodsInfo; // 0x440
	UMirScrollBox* m_ScrollBox_DetailSlot; // 0x448
	UMirCanvasPanel* m_Panel_OnlyDesc; // 0x450
	UMirRichTextBlock* m_RTxt_OnlyDesc; // 0x458
	UScaleBox* m_ScaleBox_Period; // 0x460
	UMirTextBlock* m_Txt_PeriodDesc; // 0x468
	UMirImage* m_Img_PeriodIndicator; // 0x470
};

struct UTimeSynchronizableMediaSource {
	bool bUseTimeSynchronization; // 0x88
	int32_t FrameDelay; // 0x8c
	double TimeDelay; // 0x90
};

struct UBTTask_FinishWithResult {
	EBTNodeResult Result; // 0x70
};

struct UMM_Popup_GuildDevShortCut {
	UPanelWidget* mGridShortCut; // 0x2e8
	UMirTextBlock* mTxtShortCutName; // 0x2f0
	UMirTextBlock* mTxtShortCutDesc; // 0x2f8
	UMirImage* mImgIcon; // 0x300
	UMM_Common_Btn* mBtnShortCut; // 0x308
	UMM_Common_Btn_Symbol* mBtnClose; // 0x310
};

struct UMovieSceneColorSection {
	FMovieSceneFloatChannel RedCurve; // 0xe0
	FMovieSceneFloatChannel GreenCurve; // 0x180
	FMovieSceneFloatChannel BlueCurve; // 0x220
	FMovieSceneFloatChannel AlphaCurve; // 0x2c0
};

struct UMM_ServerSlot_Global {
	FLinearColor SlotBG_CurRegion; // 0x2e0
	FLinearColor SlotBG_OtherRegion; // 0x2f0
	UMirImage* m_Img_Bg; // 0x318
	UMirImage* m_Img_Selected; // 0x320
	UPanelWidget* m_Can_Recommend; // 0x328
	UMirImage* m_Img_New; // 0x330
	UMirTextBlock* m_Txt_ServerName; // 0x338
	UMirTextBlock* m_Txt_Peace; // 0x340
	UMirImage* m_Img_ServerCongestionInfo; // 0x348
	UMirTextBlock* m_Txt_ServerNotice; // 0x350
	UPanelWidget* m_Hrz_CharCount; // 0x358
	UMirTextBlock* m_Txt_CharCount; // 0x360
	UMirButton* m_Btn_Main; // 0x368
};

struct UVectorFieldStatic {
	int32_t SizeX; // 0x48
	int32_t SizeY; // 0x4c
	int32_t SizeZ; // 0x50
	bool bAllowCPUAccess; // 0x54
	TArray<FVector4> CPUData; // 0xf0
};

struct UMM_Slot_Costume_Palette {
	int32_t Palette_RowID_CH1; // 0x300
	int32_t Palette_RowID_CH2; // 0x304
	int32_t Palette_CostumeID; // 0x308
	float Palette_Density_CH1; // 0x30c
	float Palette_Density_CH2; // 0x310
	int32_t Palette_Color_CH1; // 0x314
	int32_t Palette_Color_CH2; // 0x318
	int32_t Palette_DyeingType; // 0x31c
	UMirImage* Img_Color_1; // 0x320
	UMirImage* Img_Color_2; // 0x328
	UMirImage* Img_Checked; // 0x330
	UMirImage* img_selected; // 0x338
	UMirButton* m_BtnMain; // 0x340
};

struct UCurveLinearColorAtlas {
	uint32_t TextureSize; // 0x100
	TArray<UCurveLinearColor*> GradientCurves; // 0x108
};

struct UMM_Popup_Xdraco_Sealing {
	int32_t STRING_SEAL_TITLE; // 0x2e0
	int32_t STRING_UNSEAL_TITLE; // 0x2e4
	int32_t STRING_SEAL_DESC; // 0x2e8
	int32_t STRING_SEAL_DELAY_DESC; // 0x2ec
	int32_t STRING_UNSEAL_DESC; // 0x2f0
	UMirTextBlock* m_Txt_Title; // 0x2f8
	UMirTextBlock* m_Txt_ItemName; // 0x300
	UMM_Slot_Material* m_Slot_Item; // 0x308
	UMirRichTextBlock* m_Rtxt_Desc; // 0x310
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x318
	UMM_Common_Btn* m_C_Btn_Cancel; // 0x320
	UMM_Common_Btn* m_C_Btn_UnSeal; // 0x328
	UMM_Common_Btn_Cost* m_C_Btn_Seal; // 0x330
};

struct UMM_Common_CombatPoint {
	UMirImage* Img_Icon; // 0x2f8
	UMirTextBlock* Txt_Value; // 0x300
	UMirButton* Btn_Main; // 0x308
	int32_t CombatValue; // 0x310
};

struct USlateBrushAsset {
	FSlateBrush Brush; // 0x28
};

struct UMM_CharacterSelect_Slot {
	UPanelWidget* Panel_SelectBG; // 0x2e0
	UMirImage* Img_ClassSymbol; // 0x2e8
	UMirTextBlock* Txt_CharacterLevel; // 0x2f0
	UMirTextBlock* Txt_CharacterName; // 0x2f8
	UMirTextBlock* Txt_DeleteTime; // 0x300
	UMirButton* Btn_SelectSlot; // 0x308
	UPanelWidget* Panel_Info; // 0x310
	UPanelWidget* Panel_Lock; // 0x318
	UPanelWidget* Panel_Empty; // 0x320
	UPanelWidget* Panel_Delete; // 0x328
	UOverlay* m_Overlay_NFT; // 0x330
	uint64_t m_CharacterUID; // 0x338
	uint32_t m_SlotIndex; // 0x340
	int32_t STRING_TIME_DAYS; // 0x344
	int32_t STRING_TIME_HOURS; // 0x348
	int32_t STRING_TIME_MINUTES; // 0x34c
	UPanelWidget* Panel_ServerChange; // 0x360
};

struct UMaterialFunction {
	FString Description; // 0x40
	TArray<UMaterialExpression*> FunctionExpressions; // 0x50
	char bExposeToLibrary : 1; // 0x60
	char bPrefixParameterNames : 1; // 0x60
	char bReentrantFlag : 1; // 0x60
};

struct UMM_Secret_Popup {
	int32_t PartyMatchingStrID; // 0x2f0
	int32_t EnterStrID; // 0x2f4
	int32_t MoveStrID; // 0x2f8
	UMM_Common_Btn_Symbol* btn_close; // 0x300
	UMirTextBlock* Txt_Title; // 0x308
	UMirTextBlock* Txt_Explanation; // 0x310
	UMirTextBlock* Txt_FixedNowBP; // 0x318
	UMirTextBlock* Txt_NowBPNum; // 0x320
	UMirTextBlock* Txt_FixedRecommendBP; // 0x328
	UMirTextBlock* Txt_RecommendBPNum; // 0x330
	UMirTextBlock* Txt_Stage; // 0x338
	UMirTextBlock* Txt_DifficultyNum; // 0x340
	UMM_Common_Btn_Symbol* Btn_LvDown; // 0x348
	UMM_Common_Btn_Symbol* Btn_LvUp; // 0x350
	UMirImage* Img_SelectDungeon; // 0x358
	UMirImage* Img_Disabled; // 0x360
	UMM_Slot_Material* Img_NeedCost; // 0x368
	UMirTextBlock* Txt_NeedCostTitle; // 0x370
	UMirTextBlock* Txt_NeedCost; // 0x378
	UMM_Slot_Material* Img_NeedItem; // 0x380
	UMirTextBlock* Txt_NeedItemTitle; // 0x388
	UMirTextBlock* Txt_NeedItem; // 0x390
	UMirTextBlock* Txt_FixedHaveTicket; // 0x398
	UMirTextBlock* txtFixedDisabled; // 0x3a0
	UPanelWidget* Pan_RewardList; // 0x3a8
	TArray<UMM_Slot_Material*> slot_reward; // 0x3b0
	UMM_Common_Btn* Btn_PartyMatching; // 0x3c0
	UMM_Common_Btn* Btn_DungeonEnter; // 0x3c8
	UMM_DungeonQuestSlotWidget* wgtNeedQuest; // 0x3d0
	UButton* Btn_Disable; // 0x3d8
};

struct AMM_GameStateBase {
	AGameModeBase* GameModeClass; // 0x218
	AGameModeBase* AuthorityGameMode; // 0x220
	ASpectatorPawn* SpectatorClass; // 0x228
	TArray<APlayerState*> PlayerArray; // 0x230
	bool bReplicatedHasBegunPlay; // 0x240
	float ReplicatedWorldTimeSeconds; // 0x244
	float ServerWorldTimeSecondsDelta; // 0x248
	float ServerWorldTimeSecondsUpdateFrequency; // 0x24c
};

struct UARCandidateImage {
	UTexture2D* CandidateTexture; // 0x30
	FString FriendlyName; // 0x38
	float Width; // 0x48
	float Height; // 0x4c
	EARCandidateImageOrientation Orientation; // 0x50
};

struct UEnvQueryGenerator_SimpleGrid {
	FAIDataProviderFloatValue GridSize; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb0
	UEnvQueryContext* GenerateAround; // 0xe0
};

struct ULeaderboardFlushCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMM_CostumeAbility_Select {
	UMirTextBlock* Txt_Title; // 0x2f0
	TArray<UMM_PopUp_ItemInfo_Ability*> arrSelect_Ability; // 0x2f8
};

struct UMaterialExpressionConstantBiasScale {
	FExpressionInput Input; // 0x40
	float Bias; // 0x54
	float Scale; // 0x58
};

struct UMM_HudLeftTabMenuSlot {
	int32_t SymbolIconID; // 0x2e0
	int32_t SymbolGuildIconID; // 0x2e4
	ELeftTabMenuSlotType eMenuSlotType; // 0x2e8
	int32_t m_iEffectID_Touched; // 0x2ec
	UImage* m_pImgSelected; // 0x2f0
	UButton* m_pBtnTab; // 0x2f8
	UMirImage* m_Img_IcnMake; // 0x300
	UPanelWidget* m_pGridEffect; // 0x308
	UMirImage* m_Img_Symbol_Select; // 0x310
	UPanelWidget* m_Grid_Indicator; // 0x318
	UImage* m_Img_Indicator; // 0x320
	UMirTextBlock* m_Txt_Indicator; // 0x328
	UMirTextBlock* m_Txt_PartyMemberCount; // 0x330
	UEffectWidgetBase* m_Effect_FullParty; // 0x338
};

struct UMM_FindCharSlot_Global {
	UMirTextBlock* m_Txt_ServerName; // 0x2f8
	UMirTextBlock* m_Txt_CharLevel; // 0x300
	UMirImage* m_Img_CharClass; // 0x308
	UMirTextBlock* m_Txt_CharName; // 0x310
	UMirTextBlock* m_Txt_LastLogin; // 0x318
	UMM_Common_Btn* m_CB_ServerSelect; // 0x320
};

struct UMM_SynthesisResult_Slot {
	UMM_Slot_Inventory* m_pSlotItem; // 0x2f0
	UMirTextBlock* m_pTxtItemName; // 0x2f8
	UMirTextBlock* m_Txt_Seal; // 0x300
	UMirCanvasPanel* m_pCanvasItemName; // 0x308
	UMirImage* m_Img_Gold_Card_Squre_Fx; // 0x310
	UWidgetAnimation* m_pCardOpenAni; // 0x318
	UWidgetAnimation* m_pCardOpenGreatSuccessAni; // 0x320
	UWidgetAnimation* m_pHeroCardOpenAni; // 0x328
	UWidgetAnimation* m_pHeroCardOpenGreatSuccessAni; // 0x330
	UWidgetAnimation* m_pLegendCardOpenAni; // 0x338
	UWidgetAnimation* m_pLegendCardOpenGreatSuccessAni; // 0x340
	UWidgetAnimation* m_pSlotStartAni; // 0x348
	UWidgetAnimation* m_pBounceAni; // 0x350
	UWidgetAnimation* m_pCardTurnOpen; // 0x358
	UWidgetAnimation* m_pCenserBounceAni; // 0x360
	UMirImage* m_pSuccessBounceImage; // 0x368
	UWidgetAnimation* m_pGreatSuccessAni; // 0x370
	UGridPanel* m_Grid_Card_Turn_Effect; // 0x378
	UEffectWidgetBase* m_WE_Unsealing_Complete02; // 0x380
	UMirButton* m_pBtnClick; // 0x388
	UMirCanvasPanel* m_pPanelCover; // 0x390
	UMirImage* m_Img_Cover; // 0x398
	UScaleBox* m_pScaleSeal; // 0x3a0
	UGridPanel* m_Effect_Panel; // 0x3a8
	UEffectWidgetBase* m_Effect_Widget; // 0x3b0
	UWidgetAnimation* m_pGreatHeroOpenAni; // 0x3b8
	UWidgetAnimation* m_pHeroAppearAni; // 0x3c0
};

struct UPhysicsConstraintComponent {
	AActor* ConstraintActor1; // 0x220
	FConstrainComponentPropName ComponentName1; // 0x228
	AActor* ConstraintActor2; // 0x230
	FConstrainComponentPropName ComponentName2; // 0x238
	UPhysicsConstraintTemplate* ConstraintSetup; // 0x250
	FScriptMulticastDelegate OnConstraintBroken; // 0x258
	FConstraintInstance ConstraintInstance; // 0x268
};

struct UMM_Customizing_Component {
	UPanelWidget* m_ComponentPanel; // 0x2e0
	UCanvasPanel* m_ComponentCanvasPanel; // 0x2e8
	TArray<UPanelWidget*> m_ComponentList; // 0x2f0
	UMirScrollBox* m_ScrollBox; // 0x300
};

struct UMM_Xdraco_SealingInventory {
	int32_t MAX_SLOT; // 0x2f0
	int32_t MAX_LINE_SLOT; // 0x2f4
	UMirWrapScrollBox* m_pScrollBox; // 0x2f8
	TArray<UMM_ItemSealing_Slot*> InvenSlotList; // 0x300
	int32_t m_MaxSlotCount; // 0x310
	int32_t m_CurrentSlotCount; // 0x314
};

struct UInterpTrackColorScale {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UFloatTextWidget {
	FVector2D WidgetSIze; // 0x870
	float OverlapRandomOffsetMin; // 0x878
	float OverlapRandomOffsetMax; // 0x87c
	FSlateBrush Number_1; // 0x880
	FSlateBrush Number_2; // 0x908
	FSlateBrush Number_3; // 0x990
	FSlateBrush Number_4; // 0xa18
	FSlateBrush Number_5; // 0xaa0
	FSlateBrush Number_6; // 0xb28
	FSlateBrush Number_7; // 0xbb0
	FSlateBrush Number_8; // 0xc38
	FSlateBrush Number_9; // 0xcc0
	FSlateBrush Number_10; // 0xd48
	FSlateBrush ImageFont_Critical; // 0xdd0
	int32_t IconID_Critical; // 0xe58
	FSlateBrush ImageFont_Unbeatable; // 0xe60
	int32_t IconID_Unbeatable; // 0xee8
	FSlateBrush ImageFont_ImmuneDamage; // 0xef0
	int32_t IconID_ImmuneDamage; // 0xf78
	FSlateBrush ImageFont_Immortal; // 0xf80
	int32_t IconID_Immortal; // 0x1008
	FSlateBrush ImageFont_Dodge; // 0x1010
	int32_t IconID_Dodge; // 0x1098
	FSlateBrush ImageFont_Miss; // 0x10a0
	int32_t IconID_Miss; // 0x1128
	FSlateBrush ImageFont_Defense; // 0x1130
	int32_t IconID_Defense; // 0x11b8
	FSlateBrush ImageFont_Shield; // 0x11c0
	int32_t IconID_Shield; // 0x1248
	FSlateBrush ImageFont_Absorb; // 0x1250
	int32_t IconID_Absorb; // 0x12d8
	FSlateBrush ImageFont_ProtectPVP; // 0x12e0
	int32_t IconID_ProtectPVP; // 0x1368
	FSlateBrush ImageFont_Spirit; // 0x1370
	int32_t IconID_Spirit; // 0x13f8
	FSlateBrush ImageFont_SiegeGuard; // 0x1400
	int32_t IconID_SiegeGuard; // 0x1488
	FVector2D Offset_My_Damage; // 0x148c
	FVector2D Offset_My_Unbeatable; // 0x1494
	FVector2D Offset_My_ImmuneDamage; // 0x149c
	FVector2D Offset_My_Immortal; // 0x14a4
	FVector2D Offset_My_Dodge; // 0x14ac
	FVector2D Offset_My_Shield; // 0x14b4
	FVector2D Offset_My_Absorb; // 0x14bc
	FVector2D Offset_My_Gain; // 0x14c4
	FVector2D Offset_My_GainHP; // 0x14cc
	FVector2D Offset_My_GainMP; // 0x14d4
	FVector2D Offset_My_GainSP; // 0x14dc
	FVector2D Offset_My_Lost; // 0x14e4
	FVector2D Offset_My_LostMP; // 0x14ec
	FVector2D Offset_My_LostSP; // 0x14f4
	FVector2D Offset_My_ProtectPVP; // 0x14fc
	FVector2D Offset_My_SiegeGuard; // 0x1504
	FVector2D Offset_Other_Damage; // 0x150c
	FVector2D Offset_Other_Unbeatable; // 0x1514
	FVector2D Offset_Other_ImmuneDamage; // 0x151c
	FVector2D Offset_Other_Immortal; // 0x1524
	FVector2D Offset_Other_Dodge; // 0x152c
	FVector2D Offset_Other_Shield; // 0x1534
	FVector2D Offset_Other_Absorb; // 0x153c
	FVector2D Offset_Other_Gain; // 0x1544
	FVector2D Offset_Other_GainHP; // 0x154c
	FVector2D Offset_Other_GainMP; // 0x1554
	FVector2D Offset_Other_GainSP; // 0x155c
	FVector2D Offset_Other_Lost; // 0x1564
	FVector2D Offset_Other_LostMP; // 0x156c
	FVector2D Offset_Other_LostSP; // 0x1574
	FVector2D Offset_Other_ProtectPVP; // 0x157c
	FVector2D Offset_Other_SiegeGuard; // 0x1584
	FVector2D Offset_LinkAttack; // 0x158c
	FSlateBrush PlusMinus_Plus; // 0x1598
	FSlateBrush PlusMinus_Minus; // 0x1620
	UWidgetAnimation* WidgetAnim_My_Damage; // 0x16a8
	UWidgetAnimation* WidgetAnim_My_Smite; // 0x16b0
	UWidgetAnimation* WidgetAnim_My_Critical; // 0x16b8
	UWidgetAnimation* WidgetAnim_My_TextFont; // 0x16c0
	UWidgetAnimation* WidgetAnim_My_Gain; // 0x16c8
	UWidgetAnimation* WidgetAnim_My_Lost; // 0x16d0
	UWidgetAnimation* WidgetAnim_Other_Damage; // 0x16d8
	UWidgetAnimation* WidgetAnim_Other_Smite; // 0x16e0
	UWidgetAnimation* WidgetAnim_Other_Critical; // 0x16e8
	UWidgetAnimation* WidgetAnim_Other_TextFont; // 0x16f0
	UWidgetAnimation* WidgetAnim_Other_Gain; // 0x16f8
	UWidgetAnimation* WidgetAnim_Other_Lost; // 0x1700
	UImage* m_pImg_100001; // 0x1708
	UImage* m_pImg_10001; // 0x1710
	UImage* m_pImg_1001; // 0x1718
	UImage* m_pImg_101; // 0x1720
	UImage* m_pImg_11; // 0x1728
	UImage* m_pImg_2; // 0x1730
	UImage* m_pImg_Txt; // 0x1738
	UImage* m_pImg_PlusMinus; // 0x1740
	UImage* m_pImg_Blood; // 0x1748
	UGridPanel* BaseGridPanel; // 0x1750
};

struct AEmitter {
	UParticleSystemComponent* ParticleSystemComponent; // 0x218
	char bDestroyOnSystemFinish : 1; // 0x220
	char bPostUpdateTickGroup : 1; // 0x220
	char bCurrentlyActive : 1; // 0x220
	FScriptMulticastDelegate OnParticleSpawn; // 0x228
	FScriptMulticastDelegate OnParticleBurst; // 0x238
	FScriptMulticastDelegate OnParticleDeath; // 0x248
	FScriptMulticastDelegate OnParticleCollide; // 0x258
};

struct AMM_CharacterCustomizingActor {
	UPoseableMeshComponent* m_pFaceControlMesh; // 0x228
	UMaterialInstanceDynamic* m_pFaceAreaMarkMID; // 0x230
	USkeletalMeshComponent* m_pMainFaceMesh; // 0x2f8
	UPoseableMeshComponent* m_pCopyFaceMesh; // 0x300
	UMM_CharacterPartsComponent* m_pPartsComponent; // 0x318
	TMap<int32_t, USkeletalMeshComponent*> m_mapCustomizingMeshParts; // 0x320
	UPoseableMeshComponent* m_pPoseableFaceMesh; // 0x370
	TMap<int32_t, FCharacterPartsMID> m_mapCharacterMID; // 0x378
};

struct ATriggerSphere {
	UShapeComponent* CollisionComponent; // 0x218
};

struct UMM_CostumeAbility_Info {
	UMirImage* Img_Icon; // 0x2e0
	UMirTextBlock* Txt_Type; // 0x2e8
	UMirTextBlock* Txt_Value; // 0x2f0
};

struct UMM_PetGradeUp_InfoSlot {
	UMirTextBlock* m_Txt_Level; // 0x2e0
	UMirTextBlock* m_Txt_EquipSlotCount; // 0x2e8
	UMM_PetAbilitySlot* m_arSkillSlot[0x4]; // 0x2f0
};

struct UAsyncActionLoadPrimaryAssetClassList {
	FScriptMulticastDelegate Completed; // 0x78
};

struct UCreateSessionCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UOnlineSessionClient {
	bool bIsFromInvite; // 0x188
	bool bHandlingDisconnect; // 0x189
};

struct AMM_PhotoModeCharacter {
	TArray<int32_t> m_MeshIDArray; // 0x238
	FString m_AnimPath; // 0x248
	UPhotoModeData* m_pPhotoModeData; // 0x258
	USpringArmComponent* m_pSprintArm; // 0x260
	UCameraComponent* m_pCamera; // 0x268
	USkeletalMeshComponent* m_pMesh; // 0x270
	UMM_CharacterPartsComponent* m_pPartsComponent; // 0x278
	bool m_bMyCharacterHide; // 0x280
	UMM_PhotoModeAnimInstance* m_pPhotoModeAnimInstance; // 0x2b0
	UMM_PhotoModeWidget* m_pPhotoModeWidget; // 0x2b8
};

struct USourceEffectPannerPreset {
	FSourceEffectPannerSettings Settings; // 0x70
};

struct UEditableText {
	FText Text; // 0x108
	DelegateProperty TextDelegate; // 0x120
	FText HintText; // 0x130
	DelegateProperty HintTextDelegate; // 0x148
	FEditableTextStyle WidgetStyle; // 0x158
	USlateWidgetStyleAsset* Style; // 0x370
	USlateBrushAsset* BackgroundImageSelected; // 0x378
	USlateBrushAsset* BackgroundImageComposing; // 0x380
	USlateBrushAsset* CaretImage; // 0x388
	FSlateFontInfo Font; // 0x390
	FSlateColor ColorAndOpacity; // 0x3e0
	bool IsReadOnly; // 0x408
	bool IsPassword; // 0x409
	float MinimumDesiredWidth; // 0x40c
	bool IsCaretMovedWhenGainFocus; // 0x410
	bool SelectAllTextWhenFocused; // 0x411
	bool RevertTextOnEscape; // 0x412
	bool ClearKeyboardFocusOnCommit; // 0x413
	bool SelectAllTextOnCommit; // 0x414
	bool AllowContextMenu; // 0x415
	EVirtualKeyboardType KeyboardType; // 0x416
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x417
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x418
	ETextJustify Justification; // 0x419
	FShapedTextOptions ShapedTextOptions; // 0x41a
	FScriptMulticastDelegate OnTextChanged; // 0x420
	FScriptMulticastDelegate OnTextCommitted; // 0x430
};

struct UMovieSceneColorTrack {
	bool bIsSlateColor; // 0x88
};

struct UNoiseField {
	float MinRange; // 0xb0
	float MaxRange; // 0xb4
	FTransform Transform; // 0xc0
};

struct UMM_Mystical_ItemInfo_Ability {
	UMirImage* m_AbilityIcon; // 0x2e0
	UTextBlock* m_AbilityName; // 0x2e8
	UMirTextBlock* m_AbilityValue; // 0x2f0
	UMirTextBlock* m_AbilityValueDefault; // 0x2f8
	UMirTextBlock* m_AbilityAddValue; // 0x300
	UTextBlock* m_Txt1; // 0x308
	UTextBlock* m_Txt2; // 0x310
	int32_t m_WidgetIndex; // 0x318
	UMirImage* Img_Arrow; // 0x320
	UMirTextBlock* Txt_Point; // 0x328
	UProgressBar* m_PolishProgressBar; // 0x330
	UTextBlock* m_PolishStatValue; // 0x338
	UMirImage* m_Img_Grade; // 0x340
	UTextBlock* m_Txt_OptionValue; // 0x348
	UTextBlock* m_Txt_OptionMin; // 0x350
	UTextBlock* m_Txt_OptionMax; // 0x358
	UTextBlock* m_Txt11; // 0x360
	UTextBlock* m_Txt12; // 0x368
	UTextBlock* m_Txt13; // 0x370
	UMirImage* m_Img_Ability; // 0x378
	UTextBlock* m_Txt_Title_SetItem; // 0x380
	UTextBlock* m_Txt_Desc_SetItem; // 0x388
	UTextBlock* m_Txt_Value_SetItem; // 0x390
	UMirTextBlock* Txt_Value_Durability; // 0x398
	UMirTextBlock* Txt_Value_Penalty; // 0x3a0
	UMirImage* Img_Arrow_Penalty; // 0x3a8
	UMirTextBlock* Txt_Point_Penalty; // 0x3b0
	UHorizontalBox* m_Panel_2; // 0x3b8
	UPanelWidget* m_Panel_3; // 0x3c0
	UPanelWidget* m_Panel_4; // 0x3c8
	UPanelWidget* m_Panel_5; // 0x3d0
	UPanelWidget* m_Panel_6; // 0x3d8
	int32_t RESOURCE_ICONID_LOCK; // 0x3e0
};

struct AMirSplineActor {
	USplineComponent* SplineComponent; // 0x218
};

struct UFirebaseFacebookCredential {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct UMM_Hud_Chat_EmptyGuild {
	UMM_Common_Btn* Btn_JoinGuild; // 0x2e0
};

struct USoundCue {
	char bPrimeOnLoad : 1; // 0x160
	USoundNode* FirstNode; // 0x168
	float VolumeMultiplier; // 0x170
	float PitchMultiplier; // 0x174
	FSoundAttenuationSettings AttenuationOverrides; // 0x178
	float SubtitlePriority; // 0x468
	char bOverrideAttenuation : 1; // 0x470
	char bExcludeFromRandomNodeBranchCulling : 1; // 0x470
	char bHasPlayWhenSilent : 1; // 0x470
};

struct UListViewBase {
	FScrollBarStyle WidgetBarStyle; // 0x108
	ESlateVisibility ScrollBarVisibility; // 0x5d8
	FVector2D ScrollbarThickness; // 0x5dc
	FMargin ScrollbarPadding; // 0x5e4
	bool AlwaysShowScrollbar; // 0x5f4
	bool AlwaysShowScrollbarTrack; // 0x5f5
	UUserWidget* EntryWidgetClass; // 0x5f8
	float WheelScrollMultiplier; // 0x600
	bool bEnableScrollAnimation; // 0x604
	bool bEnableFixedLineOffset; // 0x605
	float FixedLineScrollOffset; // 0x608
	FScriptMulticastDelegate BP_OnEntryGenerated; // 0x610
	FScriptMulticastDelegate BP_OnEntryReleased; // 0x620
	FUserWidgetPool EntryWidgetPool; // 0x630
};

struct UAnimNotify_PlayMontageNotify {
	FName NotifyName; // 0x38
};

struct UPrimitiveComponent {
	float MinDrawDistance; // 0x228
	float LDMaxDrawDistance; // 0x22c
	float CachedMaxDrawDistance; // 0x230
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x234
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x235
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x236
	ELightmapType LightmapType; // 0x237
	char bUseMaxLODAsImposter : 1; // 0x238
	float CachedBoundsSphereDiameter; // 0x23c
	char bBatchImpostersAsInstances : 1; // 0x240
	char bNeverDistanceCull : 1; // 0x240
	char bAlwaysCreatePhysicsState : 1; // 0x240
	char bGenerateOverlapEvents : 1; // 0x240
	char bMultiBodyOverlap : 1; // 0x241
	char bTraceComplexOnMove : 1; // 0x241
	char bReturnMaterialOnMove : 1; // 0x241
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x241
	char bAllowCullDistanceVolume : 1; // 0x241
	char bHasMotionBlurVelocityMeshes : 1; // 0x241
	char bVisibleInReflectionCaptures : 1; // 0x241
	char bVisibleInRayTracing : 1; // 0x241
	char bRenderInMainPass : 1; // 0x242
	char bRenderInDepthPass : 1; // 0x242
	char bReceivesDecals : 1; // 0x242
	char bOwnerNoSee : 1; // 0x242
	char bOnlyOwnerSee : 1; // 0x242
	char bTreatAsBackgroundForOcclusion : 1; // 0x242
	char bUseAsOccluder : 1; // 0x242
	char bSelectable : 1; // 0x242
	char bForceMipStreaming : 1; // 0x243
	char bHasPerInstanceHitProxies : 1; // 0x243
	char CastShadow : 1; // 0x243
	char bAffectDynamicIndirectLighting : 1; // 0x243
	char bAffectDistanceFieldLighting : 1; // 0x243
	char bCastDynamicShadow : 1; // 0x243
	char bCastStaticShadow : 1; // 0x243
	char bCastVolumetricTranslucentShadow : 1; // 0x243
	char bSelfShadowOnly : 1; // 0x244
	char bCastFarShadow : 1; // 0x244
	char bCastInsetShadow : 1; // 0x244
	char bCastCinematicShadow : 1; // 0x244
	char bCastHiddenShadow : 1; // 0x244
	char bCastShadowAsTwoSided : 1; // 0x244
	char bLightAsIfStatic : 1; // 0x244
	char bLightAttachmentsAsGroup : 1; // 0x244
	char bExcludeFromLightAttachmentGroup : 1; // 0x245
	char bReceiveMobileCSMShadows : 1; // 0x245
	char bSingleSampleShadowFromStationaryLights : 1; // 0x245
	char bIgnoreRadialImpulse : 1; // 0x245
	char bIgnoreRadialForce : 1; // 0x245
	char bApplyImpulseOnDamage : 1; // 0x245
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x245
	char AlwaysLoadOnClient : 1; // 0x245
	char AlwaysLoadOnServer : 1; // 0x246
	char bUseEditorCompositing : 1; // 0x246
	char bRenderCustomDepth : 1; // 0x246
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x247
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x249
	FLightingChannels LightingChannels; // 0x24a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x24b
	int32_t CustomDepthStencilValue; // 0x24c
	FCustomPrimitiveData CustomPrimitiveData; // 0x250
	int32_t TranslucencySortPriority; // 0x260
	int32_t VisibilityId; // 0x264
	char bIgnoreOcclusionVolume : 1; // 0x268
	int32_t OcclusionVolumeId; // 0x26c
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x270
	uint8_t VirtualTextureLodBias; // 0x280
	uint8_t VirtualTextureCullMips; // 0x281
	uint8_t VirtualTextureMinCoverage; // 0x282
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x283
	float LpvBiasMultiplier; // 0x288
	float BoundsScale; // 0x294
	TArray<AActor*> MoveIgnoreActors; // 0x2a8
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2b8
	FBodyInstance BodyInstance; // 0x2d8
	FScriptMulticastDelegate OnComponentHit; // 0x3e8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3e9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3ea
	FScriptMulticastDelegate OnComponentWake; // 0x3eb
	FScriptMulticastDelegate OnComponentSleep; // 0x3ec
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3ee
	FScriptMulticastDelegate OnEndCursorOver; // 0x3ef
	FScriptMulticastDelegate OnClicked; // 0x3f0
	FScriptMulticastDelegate OnReleased; // 0x3f1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3f2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3f3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3f4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3f5
	UPrimitiveComponent* LODParentPrimitive; // 0x410
};

struct ASkyLight {
	USkyLightComponent* LightComponent; // 0x218
	char bEnabled : 1; // 0x220
};

struct UParticleModuleEventReceiverBase {
	EParticleEventType EventGeneratorType; // 0x30
	FName EventName; // 0x34
};

struct UMM_Occupation_Observer_TargetHP {
	UMirTextBlock* m_Txt_Name; // 0x3a0
	UMirImage* m_Img_Icon; // 0x3a8
};

struct UPaperSprite {
	FVector2D BakedSourceUV; // 0x38
	FVector2D BakedSourceDimension; // 0x40
	UTexture2D* BakedSourceTexture; // 0x48
	UMaterialInterface* DefaultMaterial; // 0x50
	UMaterialInterface* AlternateMaterial; // 0x58
	TArray<FPaperSpriteSocket> Sockets; // 0x60
	ESpriteCollisionMode SpriteCollisionDomain; // 0x70
	float PixelsPerUnrealUnit; // 0x74
	UBodySetup* BodySetup; // 0x78
	int32_t AlternateMaterialSplitIndex; // 0x80
	TArray<FVector4> BakedRenderData; // 0x88
};

struct ARigidBodyBase {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMM_Popup_Chat_UserInfo {
	UMirTextBlock* Txt_UserNickname; // 0x300
	UMM_Common_Btn* Btn_CharacterDetail; // 0x308
	UMM_Common_Btn* Btn_PartyInvite; // 0x310
	UMM_Common_Btn* Btn_WhisperChat; // 0x318
	UMM_Common_Btn* Btn_BlockUser; // 0x320
	UMM_Common_Btn_Symbol* btn_close; // 0x328
	UMM_Common_Btn* Btn_NickNameCopy; // 0x330
	UMM_Common_Btn* Btn_MessageCopy; // 0x338
};

struct AMoveTrigger {
	FVector m_BoxExtent; // 0x280
	AMoveTrigger* Next; // 0x290
	AMoveTrigger* prev; // 0x298
};

struct UMM_CharAbility_Info_Rank {
	TArray<UMM_PlayerRank*> PlayerRankList; // 0x2f0
};

struct UMaterialExpressionRayTracingQualitySwitch {
	FExpressionInput Normal; // 0x40
	FExpressionInput RayTraced; // 0x54
};

struct UAISenseConfig_Sight {
	UAISense_Sight* Implementation; // 0x48
	float SightRadius; // 0x50
	float LoseSightRadius; // 0x54
	float PeripheralVisionAngleDegrees; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
	float AutoSuccessRangeFromLastSeenLocation; // 0x60
};

struct UWriteAndFlushLeaderboards {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UActorSequencePlayer {
	FScriptMulticastDelegate OnPlay; // 0x408
	FScriptMulticastDelegate OnPlayReverse; // 0x418
	FScriptMulticastDelegate OnStop; // 0x428
	FScriptMulticastDelegate OnPause; // 0x438
	FScriptMulticastDelegate OnFinished; // 0x448
	EMovieScenePlayerStatus Status; // 0x458
	char bReversePlayback : 1; // 0x45c
	UMovieSceneSequence* Sequence; // 0x460
	FFrameNumber StartTime; // 0x468
	int32_t DurationFrames; // 0x46c
	int32_t CurrentNumLoops; // 0x470
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x488
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x4a0
	FMovieSceneSequenceReplProperties NetSyncProps; // 0x810
	TScriptInterface<Class> PlaybackClient; // 0x820
};

struct UMovieScene3DPathSection {
	FMovieSceneFloatChannel TimingCurve; // 0x108
	MovieScene3DPathSection_Axis FrontAxisEnum; // 0x1a8
	MovieScene3DPathSection_Axis UpAxisEnum; // 0x1a9
	char bFollow : 1; // 0x1ac
	char bReverse : 1; // 0x1ac
	char bForceUpright : 1; // 0x1ac
};

struct UEditableGameplayTagQuery {
	FString UserDescription; // 0x28
	UEditableGameplayTagQueryExpression* RootExpression; // 0x48
	FGameplayTagQuery TagQueryExportText_Helper; // 0x50
};

struct AFieldSystemActor {
	UFieldSystemComponent* FieldSystemComponent; // 0x218
};

struct USourceEffectEQPreset {
	FSourceEffectEQSettings Settings; // 0x78
};

struct UMM_CharacterCustomizingModule {
	TWeakObjectPtr<UMM_CharacterPartsComponent> m_pPartsComponent; // 0x7c
};

struct UMM_Popup_GuildHostility {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMirTextBlock* m_Txt_Desc; // 0x2f8
	UMirTextBlock* m_Txt_MyGuildName; // 0x300
	UMirTextBlock* m_Txt_MyGuildCombatPower; // 0x308
	UMM_GuildIcon* m_MyGuildIcon; // 0x310
	UMirTextBlock* m_Txt_GuildName; // 0x318
	UMirTextBlock* m_Txt_GuildCombatPower; // 0x320
	UMM_GuildIcon* m_GuildIcon; // 0x328
	UMirCanvasPanel* m_Panel_EndTime; // 0x330
	UMirTextBlock* m_Txt_EndTime; // 0x338
	UHorizontalBox* m_Panel_Cost; // 0x340
	UMirTextBlock* m_Txt_CostTitle; // 0x348
	UMirImage* m_Img_WarCostIcon; // 0x350
	UMirTextBlock* m_Txt_WarCostCount; // 0x358
	UMM_Common_Btn* m_CB_StartHostility; // 0x360
	UMM_Common_Btn* m_CB_CancelHostility; // 0x368
	UMM_Common_Btn* m_CB_Cancel; // 0x370
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x378
	UMirTextBlock* m_Txt_RemindTime; // 0x380
	UWidgetAnimation* m_OpenAni; // 0x388
	UWidgetAnimation* m_CloseAni; // 0x390
};

struct UInterpTrackInstToggle {
	ETrackToggleAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
	char bSavedActiveState : 1; // 0x30
};

struct AGhostSkeletalMesh {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UFieldNodeFloat {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct AProceduralFoliageBlockingVolume {
	AProceduralFoliageVolume* ProceduralFoliageVolume; // 0x250
};

struct UParticleModuleKillHeight {
	FRawDistributionFloat Height; // 0x30
	char bAbsolute : 1; // 0x60
	char bFloor : 1; // 0x60
	char bApplyPSysScale : 1; // 0x60
};

struct UMM_PopupGuildSearchSlot {
	UMirImage* img_rank; // 0x2e0
	UMirTextBlock* txt_rank; // 0x2e8
	UMM_GuildIcon* guild_icon; // 0x2f0
	UMirTextBlock* Txt_Name; // 0x2f8
	UMirTextBlock* txt_master_name; // 0x300
	UMirTextBlock* txt_combatpower; // 0x308
	UMirTextBlock* txt_level; // 0x310
	UMirTextBlock* txt_member; // 0x318
	UMirButton* Btn_Main; // 0x320
};

struct UMM_Dominion_Base {
	UMirImage* m_pImgPerson; // 0x2f0
	UMirTextBlock* m_pTxtUserCount; // 0x2f8
	UMM_Common_Btn_Cost* m_pBtnFastEnter; // 0x300
	UMM_Common_Btn* m_pBtnEnter; // 0x308
	UMM_Dominion_Base_List* m_pBaseList; // 0x310
	UMM_Dominion_Base_StrongPoint* m_pBaseStrongPoint; // 0x318
};

struct UMM_DungeonCommonGuildExpTicket {
	UMirCanvasPanel* canCreateState; // 0x2e0
	UMirTextBlock* txtFixNeedTicket; // 0x2e8
	UMM_Slot_Material_Item* slotNeedTicket1; // 0x2f0
	UMM_Slot_Material_Item* slotNeedTicket2; // 0x2f8
	UMM_Slot_Material_Item* slotNeedTicket3; // 0x300
	UMirCanvasPanel* canReadyState; // 0x308
	UMirTextBlock* txtNoti1; // 0x310
	UMirRichTextBlock* rtxtNoti2; // 0x318
	UMirCanvasPanel* canRunState; // 0x320
	UMirCanvasPanel* canLeftState; // 0x328
	UMirTextBlock* txtLeftState1; // 0x330
	UMirTextBlock* txtLeftState2; // 0x338
	UMirCanvasPanel* canRightState; // 0x340
	UMirTextBlock* txtRightState1; // 0x348
	UMirTextBlock* txtRightState2; // 0x350
	UMM_Common_ToolTipBtn* BtnTooltip; // 0x358
};

struct UMM_Popup_GuildCommandMark {
	UMirTextBlock* m_TxtTargetName; // 0x2e0
	TArray<UMM_GuildCommandMark_Slot*> m_MarkSlots; // 0x2e8
	UMirButton* m_BtnClose; // 0x2f8
};

struct UMM_HudTargetInfo {
	UCanvasPanel* Can_Mana; // 0x2e0
	TArray<UMM_BuffIconWidget*> buffIconWidget; // 0x2e8
	UMM_HudTargetBuffInfo* BuffInfoList; // 0x2f8
	UMirImage* Img_MaintargetIcon_BG; // 0x300
	UMirRichTextBlock* Txt_Maintarget_Grade; // 0x308
	UMM_ProgressBar_HP_Stack* Progressbar_TargetHP; // 0x310
	UProgressBar* targetManaPrg; // 0x318
	UMirTextBlock* Text_Mana; // 0x320
	UMirTextBlock* levelTxt; // 0x328
	UMirTextBlock* nameTxt; // 0x330
	UMirButton* MainTargetButton; // 0x338
	UCanvasPanel* Can_SubTargetInfo; // 0x340
	UMirTextBlock* Text_SubtargetHP; // 0x348
	UProgressBar* Prg_SubTargetHp; // 0x350
	UMirTextBlock* Txt_SubTarget_Level; // 0x358
	UMirTextBlock* Txt_SubTarget_Name; // 0x360
	UMirButton* Btn_Sub_Close; // 0x368
	UCanvasPanel* Can_Worldboss_Con; // 0x370
	UMirButton* Btn_WorldBoss_Contribution; // 0x378
	UMirButton* SubTargetButton; // 0x380
	UMM_HudTargetSubMenu* m_pMainTargetSubMenu; // 0x388
	UMM_HudTargetSubMenu* m_pSubTargetSubMenu; // 0x390
	UMirButton* btn_lock; // 0x398
	UMirImage* Img_Unlock; // 0x3a0
	UMirImage* Img_Lock; // 0x3a8
	UHorizontalBox* HorizontalBox_MainBuffListArea; // 0x3b0
	UCanvasPanel* Can_Target_Sharing; // 0x3b8
	UMirButton* Btn_Target_Sharing; // 0x3c0
	UWidgetAnimation* aniTargetSharing; // 0x3c8
	UWidgetAnimation* m_BuffInfoStartAni; // 0x3f0
	UWidgetAnimation* m_BuffInfoStartAniShort; // 0x3f8
	FLinearColor SPBarColor_2; // 0x400
	FLinearColor SPBarColor_3; // 0x410
	float RecoverSPLimitTime; // 0x420
	int32_t ShieldType; // 0x424
	bool UnbeatableShield; // 0x428
	bool InRecover; // 0x430
	bool RecoveryComplete; // 0x431
	float ProductionTime; // 0x434
	float StartTime; // 0x438
};

struct ULightmappedSurfaceCollection {
	UModel* SourceModel; // 0x28
	TArray<int32_t> Surfaces; // 0x30
};

struct UMM_Guild_DevList {
	TArray<UCanvasPanel*> m_arCanSlot; // 0x2f0
	TArray<UMM_Guild_DevSlot*> m_arSlot1; // 0x300
	TArray<UMM_Guild_DevSlot*> m_arSlot2; // 0x310
	TArray<UMM_Guild_DevSlot*> m_arSlot3; // 0x320
	TArray<UMM_Guild_DevSlot*> m_arSlot4; // 0x330
	TArray<UMM_Guild_DevSlot*> m_arUsedDevSlot; // 0x348
};

struct UMM_B_PopupNFTCharacterListSlot {
	UMirTextBlock* txt_region; // 0x2e0
	UMirTextBlock* txt_world; // 0x2e8
	UMirImage* img_character_icon; // 0x2f0
	UMirTextBlock* txt_nickname; // 0x2f8
	UMirTextBlock* txt_level; // 0x300
	UMirImage* img_cost; // 0x308
	UMirTextBlock* txt_cost; // 0x310
	UMirTextBlock* txt_collection; // 0x318
	UMirImage* img_selected; // 0x320
	UMirButton* btn_selected; // 0x328
};

struct UMM_HeadlineMsg {
	float m_fMoveSpeed; // 0x2f0
	UWidgetAnimation* m_AniStart; // 0x2f8
	UPanelWidget* m_Grid_DisplayArea; // 0x328
	UMirRichTextBlock* m_RTxt_Message; // 0x330
	UCanvasPanel* m_Canvas_TextArea; // 0x338
};

struct UMM_TotalMenu {
	TArray<UMM_TotalMenu_SlotBase*> m_arTotalMenuSlot; // 0x300
	UWidgetAnimation* m_AniStart; // 0x310
	UWidgetAnimation* m_AniShowSubSlot_1; // 0x318
	UWidgetAnimation* m_AniShowSubSlot_2; // 0x320
	UWidgetAnimation* m_AniShowSubSlot_3; // 0x328
	UWidgetAnimation* m_AniShowSubSlot_4; // 0x330
	UWidgetAnimation* m_AniShowSubSlot_5; // 0x338
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x340
	UMM_Goods_Detail* m_Goods_Detail; // 0x348
	UMirButton* m_Btn_Screen; // 0x350
	UMirCanvasPanel* m_Canvas_Info; // 0x358
	UMM_Common_Btn_Symbol* m_Btn_InfoClose; // 0x360
	UMM_Common_Btn* m_Btn_Achieve; // 0x368
	UMirTextBlock* m_Txt_CostValue; // 0x370
	UMirImage* m_Img_Icon; // 0x378
	UMirTextBlock* m_Txt_Desc; // 0x380
	UMirCanvasPanel* m_Canvas_SimpleGraphic; // 0x388
	UMM_Common_Btn_Symbol* m_Btn_SimpleGraphicClose; // 0x390
	UMirCheckBox* m_Check_Graphic; // 0x398
	UMirCheckBox* m_Check_Name; // 0x3a0
	UMirCheckBox* m_Check_GuildMark; // 0x3a8
	UPanelWidget* m_Can_ServerTime; // 0x3b0
	UMirTextBlock* m_Txt_ServerTime; // 0x3b8
};

struct UUniformInteger {
	int32_t Magnitude; // 0xb0
};

struct AMatineeActorCameraAnim {
	UCameraAnim* CameraAnim; // 0x2c0
};

struct UCinematicAnimInstance {
	float m_FirstAnimationLength; // 0x290
	float m_SecondAnimationLength; // 0x294
	bool m_FirstAniLoop; // 0x298
	bool m_SecondAniLoop; // 0x299
	bool m_bChangeFirstAnim; // 0x29a
	EPlayAniType m_PlayAniState; // 0x29b
	float m_Speed; // 0x29c
	float m_LookAtAlpha; // 0x2a0
	FVector m_LookAtLocation; // 0x2a4
	UAnimSequenceBase* m_pFirstSequence; // 0x2c0
	UAnimSequenceBase* m_pSecondSequence; // 0x2c8
};

struct UAssetManagerSettings {
	TArray<FPrimaryAssetTypeInfo> PrimaryAssetTypesToScan; // 0x38
	TArray<FDirectoryPath> DirectoriesToExclude; // 0x48
	TArray<FPrimaryAssetRulesOverride> PrimaryAssetRules; // 0x58
	TArray<FPrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules; // 0x68
	bool bOnlyCookProductionAssets; // 0x78
	bool bShouldManagerDetermineTypeAndName; // 0x79
	bool bShouldGuessTypeAndNameInEditor; // 0x7a
	bool bShouldAcquireMissingChunksOnLoad; // 0x7b
	TArray<FAssetManagerRedirect> PrimaryAssetIdRedirects; // 0x80
	TArray<FAssetManagerRedirect> PrimaryAssetTypeRedirects; // 0x90
	TArray<FAssetManagerRedirect> AssetPathRedirects; // 0xa0
	TSet<FName> MetaDataTagsForAssetRegistry; // 0xb0
};

struct UParticleModuleColorScaleOverLife {
	FRawDistributionVector ColorScaleOverLife; // 0x30
	FRawDistributionFloat AlphaScaleOverLife; // 0x78
	char bEmitterTime : 1; // 0xa8
};

struct UMaterialExpressionRuntimeVirtualTextureReplace {
	FExpressionInput Default; // 0x40
	FExpressionInput VirtualTextureOutput; // 0x54
};

struct UMaterialExpressionSphereMask {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Radius; // 0x68
	FExpressionInput Hardness; // 0x7c
	float AttenuationRadius; // 0x90
	float HardnessPercent; // 0x94
};

struct UMM_Auction_Tab_Search {
	UMM_Common_Board_Notice* m_pNotice; // 0x300
	UMM_CommonVerticalTabTreeSet* m_pTabSearchList; // 0x308
	UMirCanvasPanel* m_pCanvalBack; // 0x310
	UMirButton* m_pBtnBack; // 0x318
	UMirListView* m_pListView; // 0x320
	UMM_Auction_Tab_Search_TabGroup* m_pFilterGroup; // 0x328
	UMM_Auction_Tab_Search_ColumnName* m_pColumnName; // 0x330
};

struct AMM_CustomActorBase {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct AMM_Monster {
	int32_t MonDebugFSMLogCount; // 0xa48
	TArray<FString> m_MonDebugFSMLogList; // 0xa50
	TArray<FString> m_MonDebugLog; // 0xa60
	bool m_bDrawPushPullLocation; // 0xa70
	TArray<FVector> m_PushPullLocationList; // 0xa78
	float TestFloat; // 0xa88
	bool m_bPoolingObject; // 0xa8c
	UMM_B_MonNameTag* m_pMonNameTag; // 0xad8
	AMonsterGroupTrigger* m_pMonsterGroup; // 0xae8
	float m_fDeleteTime; // 0xb64
	bool m_bHideNameTag; // 0xb68
	UMonsterEntityComponent* m_pMonsterEntityComp; // 0xbc8
	int32_t SPState; // 0xed0
	float SPUpdateTime; // 0xed4
	float SPStateLimitTime; // 0xed8
};

struct UMM_New_Force_Detail_Info {
	UHorizontalBox* m_CurInfo; // 0x2f0
	UMirTextBlock* m_Txt_ForceName; // 0x2f8
	UMM_Common_Btn_Symbol* m_Btn_Detail; // 0x300
	UHorizontalBox* m_NextInfo; // 0x308
	UMirTextBlock* m_Txt_NextForceName; // 0x310
	UMM_Common_Btn_Symbol* m_Btn_NextDetail; // 0x318
};

struct ALevelScriptActor {
	char bInputEnabled : 1; // 0x218
};

struct UBTTask_WaitBlackboardTime {
	FBlackboardKeySelector BlackboardKey; // 0x78
};

struct UChaosSolverSettings {
	FSoftClassPath DefaultChaosSolverActorClass; // 0x40
};

struct UMonsterEntityComponent {
	TWeakObjectPtr<AMM_Monster> m_Owner; // 0xb0
};

struct AMM_BlueprintActionEffect {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct USourceEffectMidSideSpreaderPreset {
	FSourceEffectMidSideSpreaderSettings Settings; // 0x74
};

struct UMM_Force_LevelUp {
	UMirImage* Img_Symbol; // 0x2e0
	UMirTextBlock* Txt_Title; // 0x2e8
	UMirTextBlock* Txt_Description; // 0x2f0
};

struct UActorChannel {
	AActor* Actor; // 0x70
	TArray<UObject*> CreateSubObjects; // 0x160
};

struct UMM_GameOption_Environment {
	UMM_CommonVerticalTabSet* EnvironmentTabSet; // 0x2f0
	UWidgetSwitcher* WidgetSwitcher; // 0x2f8
	UMM_GameOption_Graphic* Environment_Graphic; // 0x300
	UMM_GameOption_Sound* Environment_Sound; // 0x308
	UMM_GameOption_Language* Environment_Language; // 0x310
};

struct UMaterialExpressionFunctionInput {
	FExpressionInput Preview; // 0x40
	FName InputName; // 0x54
	FString Description; // 0x60
	FGuid ID; // 0x70
	EFunctionInputType InputType; // 0x80
	FVector4 PreviewValue; // 0x90
	char bUsePreviewValueAsDefault : 1; // 0xa0
	int32_t SortPriority; // 0xa4
	char bCompilingFunctionPreview : 1; // 0xa8
};

struct UMM_UIShopBtnCashBag {
	UMirTextBlock* mTxtTabName; // 0x2f0
	UMirImage* mImgSelected; // 0x2f8
	UMirImage* mImgIndicator; // 0x300
	UMirButton* mBtnCashBag; // 0x308
};

struct UEnvQueryTest_Random {
	int32_t TestOrder; // 0x30
	EEnvTestPurpose TestPurpose; // 0x34
	FString TestComment; // 0x38
	EEnvTestFilterOperator MultipleContextFilterOp; // 0x48
	EEnvTestScoreOperator MultipleContextScoreOp; // 0x49
	EEnvTestFilterType FilterType; // 0x4a
	FAIDataProviderBoolValue BoolValue; // 0x50
	FAIDataProviderFloatValue FloatValueMin; // 0x80
	FAIDataProviderFloatValue FloatValueMax; // 0xb0
	EEnvTestScoreEquation ScoringEquation; // 0xe1
	EEnvQueryTestClamping ClampMinType; // 0xe2
	EEnvQueryTestClamping ClampMaxType; // 0xe3
	EEQSNormalizationType NormalizationType; // 0xe4
	FAIDataProviderFloatValue ScoreClampMin; // 0xe8
	FAIDataProviderFloatValue ScoreClampMax; // 0x118
	FAIDataProviderFloatValue ScoringFactor; // 0x148
	FAIDataProviderFloatValue ReferenceValue; // 0x178
	bool bDefineReferenceValue; // 0x1a8
	char bWorkOnFloatValues : 1; // 0x1b8
};

struct UInteractiveFoliageComponent {
	int32_t ForcedLodModel; // 0x440
	int32_t PreviousLODLevel; // 0x444
	int32_t MinLOD; // 0x448
	int32_t SubDivisionStepSize; // 0x44c
	UStaticMesh* StaticMesh; // 0x450
	FColor WireframeColorOverride; // 0x458
	char bEvaluateWorldPositionOffset : 1; // 0x45c
	char bOverrideWireframeColor : 1; // 0x45c
	char bOverrideMinLOD : 1; // 0x45c
	char bOverrideNavigationExport : 1; // 0x45c
	char bForceNavigationObstacle : 1; // 0x45c
	char bDisallowMeshPaintPerInstance : 1; // 0x45c
	char bIgnoreInstanceForTextureStreaming : 1; // 0x45c
	char bOverrideLightMapRes : 1; // 0x45c
	char bCastDistanceFieldIndirectShadow : 1; // 0x45d
	char bOverrideDistanceFieldSelfShadowBias : 1; // 0x45d
	char bUseSubDivisions : 1; // 0x45d
	char bUseDefaultCollision : 1; // 0x45d
	char bForceReceiveCSMForLM : 1; // 0x45d
	char bReverseCulling : 1; // 0x45d
	int32_t OverriddenLightMapRes; // 0x460
	float DistanceFieldIndirectShadowMinVisibility; // 0x464
	float DistanceFieldSelfShadowBias; // 0x468
	float StreamingDistanceMultiplier; // 0x46c
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x470
	TArray<FStreamingTextureBuildInfo> StreamingTextureData; // 0x480
	FLightmassPrimitiveSettings LightmassSettings; // 0x490
};

struct AMM_GachaInteractionObjectActor {
	EGachaBoxType TestGacha; // 0x218
	EGachaResultType TestGachaResult; // 0x219
	int32_t TestItemID; // 0x21c
	UPetCameraData* m_pPetCameraData; // 0x220
	USkeletalMeshComponent* GachaMeshComponent; // 0x228
	USkeletalMeshComponent* ResultMeshComponent; // 0x230
	UParticleSystemComponent* DefaultParticleComponent; // 0x238
	UParticleSystemComponent* InteractionParticleComponent; // 0x240
	UGachaDirectingData* GachaDirectingData; // 0x248
	UAnimSequenceBase* m_pIdleAnimation; // 0x250
	UAnimSequenceBase* m_pOpenAnimation; // 0x258
	UAnimSequenceBase* m_pEndAnimation; // 0x260
	AMM_GachaManagerActor* GachaManagerActor; // 0x268
	UParticleSystem* m_pInteractionEffect; // 0x270
	UParticleSystem* m_pInteractionOpenEffect; // 0x278
	UParticleSystem* m_pInteractionMaterialEffect; // 0x280
	UObject* m_pResultAnimation; // 0x288
};

struct UMM_RefuseRebirthGauge {
	UMirImage* m_RefuseRebirthGauge; // 0x2e0
	UCanvasPanel* m_Canvas_PartyMember; // 0x2e8
};

struct UOnlineSubsystemExtendedFacebookWebBrowser {
	FScriptMulticastDelegate OnUrlChanged; // 0x108
	FString InitialURL; // 0x118
	bool bSupportsTransparency; // 0x128
};

struct UMM_CommonVerticalTabBtn_Symbol {
	UMirTextBlock* m_Txt_TabName; // 0x2f0
	UMirImage* m_Img_Locked; // 0x2f8
	UMirImage* m_Img_Selected; // 0x300
	UMirButton* m_Btn_Main; // 0x308
	UMirImage* m_Img_Indicator; // 0x310
	UPanelWidget* m_Grid_Effect_1; // 0x318
	UPanelWidget* m_Grid_Effect_2; // 0x320
	UMirTextBlock* m_Txt_Name; // 0x328
	UMirImage* m_Img_Icon; // 0x330
	UMirImage* m_Img_SelectedBG; // 0x338
	int32_t TypeID; // 0x340
	int32_t CostTypeID; // 0x344
};

struct UTestMovieSceneSection {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int32_t RowIndex; // 0xa8
	int32_t OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct UMM_ExecuteDecalComponent {
	FName InsideName; // 0xb0
	float ElapsedTime; // 0xb8
	float ScalingTime; // 0xbc
	float AliveTime; // 0xc0
	float CharScale; // 0xc4
	UDecalComponent* ExecuteDecal; // 0xc8
	UMaterialInstanceDynamic* ExecuteMaterialInstanceDynamic; // 0xd0
};

struct UAnimationAsset {
	USkeleton* Skeleton; // 0x38
	TArray<UAnimMetaData*> metadata; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct UMaterialExpressionSign {
	FExpressionInput Input; // 0x40
};

struct UMM_Guild_MainHome {
	FLinearColor m_Color_DominionGrade_2; // 0x36c
	FLinearColor m_Color_DominionGrade_3; // 0x37c
	FLinearColor m_Color_DominionGrade_4; // 0x38c
	UMirImage* m_Img_Frame; // 0x3a0
	UMirImage* m_Img_Symbol; // 0x3a8
	UMirTextBlock* m_Txt_Leader_Title; // 0x3b0
	UMirTextBlock* m_Txt_Leader; // 0x3b8
	UMirTextBlock* m_Txt_Member_Title; // 0x3c0
	UMirTextBlock* m_Txt_Member_Count; // 0x3c8
	UMirTextBlock* m_Txt_Guild_Dominion; // 0x3d0
	UMirImage* m_Img_Guild_Dominion; // 0x3d8
	UMirTextBlock* m_Txt_Guild_Name; // 0x3e0
	UMirTextBlock* m_Txt_Guild_Lv; // 0x3e8
	UMirTextBlock* m_Txt_CombatPower_Title; // 0x3f0
	UMirTextBlock* m_Txt_CombatPower_Value; // 0x3f8
	UMirProgressBar* m_Prog_Guild_Exp; // 0x400
	UMirTextBlock* m_Txt_Guild_Exp_Value; // 0x408
	UMirTextBlock* m_Txt_GuildDev_Point; // 0x410
	UMM_Guild_Info_Btn* m_CB_GuildDevGroup_2; // 0x418
	UMM_Guild_Info_Btn* m_CB_GuildDevGroup_3; // 0x420
	UMM_Guild_Info_Btn* m_CB_GuildDevGroup_4; // 0x428
	UMirTextBlock* m_Txt_Pr_Title; // 0x430
	UMirScrollBox* m_Scr_Edit_PR; // 0x438
	UMirMultiLineEditableText* m_Edit_PR; // 0x440
	UMirScrollBox* m_Scr_Txt_PR; // 0x448
	UMirTextBlock* m_Txt_PR; // 0x450
	UCanvasPanel* m_Can_Send_PR; // 0x458
	UMM_Common_Btn* m_Btn_Send_PR; // 0x460
	UMM_Common_Btn_Translation* m_Btn_Translation; // 0x468
	UMirCanvasPanel* m_Panel_MyInfo; // 0x470
	UMM_Guild_Slot_Btn* m_CB_Support; // 0x478
	UMM_Guild_Slot_Btn* m_CB_Diplomacy; // 0x480
	UMM_Guild_Slot_Btn* m_CB_Wanted; // 0x488
	UMM_Guild_Slot_Btn* m_CB_Event; // 0x490
	UMM_Guild_Slot_Btn* m_CB_Develop; // 0x498
	UMM_Guild_Slot_Btn* m_CB_Inventory; // 0x4a0
	UMM_Guild_Slot_Btn* m_CB_GuildShop; // 0x4a8
	UMM_Guild_Slot_Btn* m_CB_GuildSupply; // 0x4b0
	UMirTextBlock* m_Txt_JoinLimitCombatPoint; // 0x4b8
	UMM_Common_Btn* m_CB_Applicant; // 0x4c0
	UMM_Common_Btn* m_CB_ApplicantCancel; // 0x4c8
	UMM_Common_Btn* m_CB_InviteAgree; // 0x4d0
	UMM_Common_Btn* m_CB_InviteDisAgree; // 0x4d8
	UMM_Common_Btn* m_CB_ReqAlliance; // 0x4e0
	UMM_Common_Btn* m_CB_ReqAllianceCancel; // 0x4e8
	UMM_Common_Btn* m_CB_AllianceDisAgree; // 0x4f0
	UMM_Common_Btn* m_CB_AllianceAgree; // 0x4f8
	UMM_Common_Btn* m_CB_AllianceClear; // 0x500
	UMM_Common_Btn* m_CB_Hostility; // 0x508
	UMM_Common_Btn* m_CB_HostilityCancel; // 0x510
	UMM_Common_Btn* m_CB_GuildMember; // 0x518
	UMM_Common_Btn_Symbol* m_CB_Contribute; // 0x520
	UMirCanvasPanel* m_Panel_OtherInfo; // 0x528
	UMirImage* m_Img_OtherIcon; // 0x530
	UMirRichTextBlock* m_RichTxt_OtherStatus; // 0x538
	UHorizontalBox* m_DevSkillBox; // 0x540
	TArray<UMirImage*> m_Img_SkillIcons; // 0x548
	TArray<UMirButton*> m_Btn_SkillIcons; // 0x558
	UMirCanvasPanel* m_Panel_MaxMembers; // 0x568
	UMirRichTextBlock* m_RichTxt_MaxMembers; // 0x570
	UMM_Common_ToolTipBtn* m_BtnTooltip_GuildInfo; // 0x578
	UMM_Common_ToolTipBtn* m_BtnTooltip_GuildDev; // 0x580
	UMirCanvasPanel* m_Panel_Sanctum; // 0x588
	UMirCanvasPanel* m_Panel_SanctumTime; // 0x590
	UMirTextBlock* m_Txt_Sanctum_RemaindTime; // 0x598
	UMirImage* m_Img_Sanctum; // 0x5a0
	UMirButton* m_Btn_Sanctum; // 0x5a8
	UWidgetAnimation* m_Ani_Sanctum; // 0x5b0
	UMM_Common_Btn_Symbol* m_Btn_SaveClipBoard; // 0x5b8
};

struct USubUVAnimation {
	UTexture2D* SubUVTexture; // 0x28
	int32_t SubImages_Horizontal; // 0x30
	int32_t SubImages_Vertical; // 0x34
	ESubUVBoundingVertexCount BoundingMode; // 0x38
	EOpacitySourceMode OpacitySourceMode; // 0x39
	float AlphaThreshold; // 0x3c
};

struct UNavLinkCustomComponent {
	uint32_t NavLinkUserId; // 0xe8
	UNavArea* EnabledAreaClass; // 0xf0
	UNavArea* DisabledAreaClass; // 0xf8
	FNavAgentSelector SupportedAgents; // 0x100
	FVector LinkRelativeStart; // 0x104
	FVector LinkRelativeEnd; // 0x110
	ENavLinkDirection LinkDirection; // 0x11c
	char bLinkEnabled : 1; // 0x120
	char bNotifyWhenEnabled : 1; // 0x120
	char bNotifyWhenDisabled : 1; // 0x120
	char bCreateBoxObstacle : 1; // 0x120
	FVector ObstacleOffset; // 0x124
	FVector ObstacleExtent; // 0x130
	UNavArea* ObstacleAreaClass; // 0x140
	float BroadcastRadius; // 0x148
	float BroadcastInterval; // 0x14c
	ECollisionChannel BroadcastChannel; // 0x150
};

struct UMM_ScreenMsg {
	float m_fShowTime; // 0x2f0
	UWidgetAnimation* m_AniStart; // 0x2f8
	UMirRichTextBlock* m_RTxt_Message; // 0x328
};

struct UMaterialExpressionParticleMotionBlurFade {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UBookMark2D {
	float Zoom2D; // 0x28
	FIntPoint Location; // 0x2c
};

struct UParticleModuleBeamSource {
	Beam2SourceTargetMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	char bSourceAbsolute : 1; // 0x3c
	FRawDistributionVector Source; // 0x40
	char bLockSource : 1; // 0x88
	Beam2SourceTargetTangentMethod SourceTangentMethod; // 0x8c
	FRawDistributionVector SourceTangent; // 0x90
	char bLockSourceTangent : 1; // 0xd8
	FRawDistributionFloat SourceStrength; // 0xe0
	char bLockSourceStength : 1; // 0x110
};

struct UMM_Popup_GuildMembersGradeSlot {
	UMirImage* Img_Grade; // 0x2e0
	UMirImage* img_selected; // 0x2e8
	UMirTextBlock* txt_grade_name; // 0x2f0
	UMirTextBlock* txt_count; // 0x2f8
	UMirButton* Btn_Main; // 0x300
};

struct AGameModeBase {
	FString OptionsString; // 0x218
	AGameSession* GameSessionClass; // 0x228
	AGameStateBase* GameStateClass; // 0x230
	APlayerController* PlayerControllerClass; // 0x238
	APlayerState* PlayerStateClass; // 0x240
	AHUD* HUDClass; // 0x248
	APawn* DefaultPawnClass; // 0x250
	ASpectatorPawn* SpectatorClass; // 0x258
	APlayerController* ReplaySpectatorPlayerControllerClass; // 0x260
	AServerStatReplicator* ServerStatReplicatorClass; // 0x268
	AGameSession* GameSession; // 0x270
	AGameStateBase* GameState; // 0x278
	AServerStatReplicator* ServerStatReplicator; // 0x280
	FText DefaultPlayerName; // 0x288
	char bUseSeamlessTravel : 1; // 0x2a0
	char bStartPlayersAsSpectators : 1; // 0x2a0
	char bPauseable : 1; // 0x2a0
};

struct UInterpTrackVisibility {
	TArray<FVisibilityTrackKey> VisibilityTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UParticleModuleRotation {
	FRawDistributionFloat StartRotation; // 0x30
};

struct UMM_Dominion_Castle_Log {
	UMirImage* m_pImgIcon; // 0x2e8
	UMirTextBlock* m_pTxtTaxValue; // 0x2f0
	UMM_Common_Btn_Symbol* m_pBtnSetTax; // 0x2f8
};

struct UMM_Popup_MysticalPieces_Infos {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e8
	UMirScrollBox* m_MirScrollBox; // 0x2f0
	TArray<UMM_PopUp_ItemInfo_Ability*> m_ItemInfo_Abilitys; // 0x2f8
	TArray<UMM_PassiveSkillDesc*> m_SkillInfos; // 0x308
	UMM_Common_Board_Notice* m_Notice; // 0x318
	UMirButton* m_Btn_Bg; // 0x320
	UMirTextBlock* m_Txt_Notice; // 0x328
};

struct AMonsterKillTrigger {
	bool m_bInstantKill; // 0x278
	int32_t m_MonsterOrderID; // 0x27c
};

struct UBTService {
	float Interval; // 0x60
	float RandomDeviation; // 0x64
	char bCallTickOnSearchStart : 1; // 0x68
	char bRestartTimerOnEachActivation : 1; // 0x68
};

struct UNavigationGraphNodeComponent {
	FNavGraphNode Node; // 0x220
	UNavigationGraphNodeComponent* NextNodeComponent; // 0x238
	UNavigationGraphNodeComponent* PrevNodeComponent; // 0x240
};

struct UMM_QuickSlot_Option_Button {
	FText m_Text; // 0x2e8
	int32_t m_iSelected; // 0x300
	FSlateFontInfo m_Font; // 0x308
	FSlateColor m_SelectFontColor; // 0x358
	FSlateColor m_UnSelectFontColor; // 0x380
	UTextBlock* m_Txt_Name; // 0x3b8
	UMirImage* m_Img_Select; // 0x3c0
	UMirButton* m_Btn_Main; // 0x3c8
};

struct UMM_GameOption_InGame_Target {
	UMM_GameOption_Select* Option_select_mode; // 0x2f0
	TArray<UMM_GameOption_Select*> arOption_Select; // 0x2f8
};

struct UMeshSimplificationSettings {
	FName MeshReductionModuleName; // 0x38
};

struct UMovieSceneObjectPropertyTrack {
	UObject* PropertyClass; // 0x88
};

struct ULayer {
	FName LayerName; // 0x28
	char bIsVisible : 1; // 0x30
	TArray<FLayerActorStats> ActorStats; // 0x38
};

struct UOnlinePIESettings {
	bool bOnlinePIEEnabled; // 0x38
	TArray<FPIELoginSettingsInternal> Logins; // 0x40
};

struct UMaterialExpressionBreakMaterialAttributes {
	FMaterialAttributesInput MaterialAttributes; // 0x40
};

struct UScrollBar {
	FScrollBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x5d8
	bool bAlwaysShowScrollbar; // 0x5e0
	bool bAlwaysShowScrollbarTrack; // 0x5e1
	EOrientation Orientation; // 0x5e2
	FVector2D Thickness; // 0x5e4
	FMargin Padding; // 0x5ec
};

struct UParticleModuleCameraBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct AInvincibilityTrigger {
	bool m_bInvincibility; // 0x278
};

struct UEditableGameplayTagQueryExpression_AnyExprMatch {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UToIntegerField {
	UFieldNodeFloat* FloatField; // 0xb0
};

struct UMM_PlayerAnimInstance {
	float MoveBlendSpeed; // 0x270
	float MoveRate; // 0x274
	bool BattleState; // 0x278
	ERideState RideState; // 0x279
	int32_t VehicleType; // 0x27c
	float SideWalkDir; // 0x280
	bool IsStandJump; // 0x284
	int32_t SkillId; // 0x288
	int32_t CCSTANCE; // 0x28c
	int32_t AniIndex; // 0x290
	int32_t OpObjectType; // 0x294
	EAIRWALK_STATE AirwalkState; // 0x298
	bool IsHit; // 0x299
	bool bNewWallJumpStart; // 0x29a
	UCurveFloat* DashCameraBlurCurve; // 0x2a0
	UCurveFloat* Jump02Curve; // 0x2a8
	AMM_PC* Player; // 0x2b0
};

struct UDirectionalLightComponent {
	float ShadowCascadeBiasDistribution; // 0x368
	char bEnableLightShaftOcclusion : 1; // 0x36c
	float OcclusionMaskDarkness; // 0x370
	float OcclusionDepthRange; // 0x374
	FVector LightShaftOverrideDirection; // 0x378
	float WholeSceneDynamicShadowRadius; // 0x384
	float DynamicShadowDistanceMovableLight; // 0x388
	float DynamicShadowDistanceStationaryLight; // 0x38c
	int32_t DynamicShadowCascades; // 0x390
	float CascadeDistributionExponent; // 0x394
	float CascadeTransitionFraction; // 0x398
	float ShadowDistanceFadeoutFraction; // 0x39c
	char bUseInsetShadowsForMovableObjects : 1; // 0x3a0
	int32_t FarShadowCascadeCount; // 0x3a4
	float FarShadowDistance; // 0x3a8
	float DistanceFieldShadowDistance; // 0x3ac
	float LightSourceAngle; // 0x3b0
	float LightSourceSoftAngle; // 0x3b4
	float TraceDistance; // 0x3b8
	FLightmassDirectionalLightSettings LightmassSettings; // 0x3bc
	char bCastModulatedShadows : 1; // 0x3cc
	FColor ModulatedShadowColor; // 0x3d0
	float ShadowAmount; // 0x3d4
	char bUsedAsAtmosphereSunLight : 1; // 0x3d8
	int32_t AtmosphereSunLightIndex; // 0x3dc
};

struct UMM_Popup_Term_Item_Info {
	UWidgetAnimation* m_AniStart; // 0x300
	UWidgetAnimation* m_AniEnd; // 0x308
	TArray<UMM_Slot_Term_Item*> Array_Slot; // 0x310
	UMM_Common_Btn_Symbol* btn_close; // 0x320
	UMirScrollBox* ScrollBox; // 0x328
	int32_t m_MaxTermItemSlotCount; // 0x330
	int32_t m_CurrentTermItemSlotCount; // 0x334
};

struct AMM_PC {
	AMM_Vehicle* m_pVehicle; // 0xa40
	AMM_ObjectBase* m_pInteractionObject; // 0xa58
	float m_VehicleCapsuleHeight; // 0xa64
	float m_DefaultCapsuleHeight; // 0xa68
	ALobbyCameraControl* CameraControl; // 0xa70
	AMM_PetObject* m_pPetObject; // 0xa90
	TArray<UParticleSystemComponent*> m_WeaponEffectComponentArray; // 0xab0
	float NormalAttackButtonCheckTime; // 0xad8
	float ChargingStartDelayTime; // 0xadc
	float NormalAttackInitTime; // 0xae0
	float m_AutoRideDistance; // 0xae4
	float m_AutoRideStepTime; // 0xae8
	float m_HangOnTime; // 0xaec
	float m_WallCheckAngle; // 0xaf0
	float m_WallCheckDistance; // 0xaf4
	float m_LandCheckDistance; // 0xaf8
	float m_FlySpeed; // 0xafc
	float m_FlyDownSpeed; // 0xb00
	float m_FallMoveSpeed; // 0xb04
	float m_LandAnimationTime; // 0xb08
	float m_FastRunControlTime; // 0xb0c
	UCameraShake* CameraShakeClass01; // 0xb10
	UCameraShake* CameraShakeClass02; // 0xb18
	ERideState m_RideState; // 0xb20
	bool IsHitState; // 0xb21
	int32_t m_ServerUID; // 0xb3c
	float ChangeBattleStateTime; // 0xb44
	bool m_IsStandJump; // 0xb60
	bool m_IsStandLand; // 0xb61
	float m_SideWalkDir; // 0xb64
	UMM_B_NameTag* m_pNameTag; // 0xb70
	int32_t m_AccountGrade; // 0xb78
};

struct UMaterialExpressionQualitySwitch {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x3]; // 0x54
};

struct USteamNetDriver {
	char LogPortUnreach : 1; // 0x708
	char AllowPlayerPortUnreach : 1; // 0x708
	uint32_t MaxPortCountToTry; // 0x70c
	uint32_t ServerDesiredSocketReceiveBufferBytes; // 0x71c
	uint32_t ServerDesiredSocketSendBufferBytes; // 0x720
	uint32_t ClientDesiredSocketReceiveBufferBytes; // 0x724
	uint32_t ClientDesiredSocketSendBufferBytes; // 0x728
	double MaxSecondsInReceive; // 0x730
	int32_t NbPacketsBetweenReceiveTimeTest; // 0x738
};

struct UMM_Inventory_MysticalPiece {
	UMM_NewInventoryTab* m_InvenTab; // 0x2e8
	UMM_NewInventory* m_Inven; // 0x2f0
	UMM_SortListBtn* m_SortListBtn; // 0x2f8
	UMM_Common_Btn* m_Btn_Compose; // 0x300
	UMM_Common_Btn* m_Btn_Equip; // 0x308
};

struct AWorldSettings {
	int32_t VisibilityCellSize; // 0x220
	EVisibilityAggressiveness VisibilityAggressiveness; // 0x224
	char bPrecomputeVisibility : 1; // 0x225
	char bPlaceCellsOnlyAlongCameraTracks : 1; // 0x225
	char bEnableWorldBoundsChecks : 1; // 0x225
	char bEnableNavigationSystem : 1; // 0x225
	char bEnableAISystem : 1; // 0x225
	char bEnableWorldComposition : 1; // 0x225
	char bUseClientSideLevelStreamingVolumes : 1; // 0x225
	char bEnableWorldOriginRebasing : 1; // 0x225
	char bWorldGravitySet : 1; // 0x226
	char bGlobalGravitySet : 1; // 0x226
	char bMinimizeBSPSections : 1; // 0x226
	char bForceNoPrecomputedLighting : 1; // 0x226
	char bHighPriorityLoading : 1; // 0x226
	char bHighPriorityLoadingLocal : 1; // 0x226
	char bOverrideDefaultBroadphaseSettings : 1; // 0x226
	UNavigationSystemConfig* NavigationSystemConfig; // 0x228
	UNavigationSystemConfig* NavigationSystemConfigOverride; // 0x230
	float WorldToMeters; // 0x238
	float KillZ; // 0x23c
	UDamageType* KillZDamageType; // 0x240
	float WorldGravityZ; // 0x248
	float GlobalGravityZ; // 0x24c
	ADefaultPhysicsVolume* DefaultPhysicsVolumeClass; // 0x250
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x258
	AGameModeBase* DefaultGameMode; // 0x260
	AGameNetworkManager* GameNetworkManagerClass; // 0x268
	int32_t PackedLightAndShadowMapTextureSize; // 0x270
	FVector DefaultColorScale; // 0x274
	float DefaultMaxDistanceFieldOcclusionDistance; // 0x280
	float GlobalDistanceFieldViewDistance; // 0x284
	float DynamicIndirectShadowsSelfShadowingIntensity; // 0x288
	FReverbSettings DefaultReverbSettings; // 0x290
	FInteriorSettings DefaultAmbientZoneSettings; // 0x2b0
	float MonoCullingDistance; // 0x2d4
	USoundMix* DefaultBaseSoundMix; // 0x2d8
	float TimeDilation; // 0x2e0
	float MatineeTimeDilation; // 0x2e4
	float DemoPlayTimeDilation; // 0x2e8
	float MinGlobalTimeDilation; // 0x2ec
	float MaxGlobalTimeDilation; // 0x2f0
	float MinUndilatedFrameTime; // 0x2f4
	float MaxUndilatedFrameTime; // 0x2f8
	FBroadphaseSettings BroadphaseSettings; // 0x2fc
	APlayerState* Pauser; // 0x340
	TArray<FNetViewer> ReplicationViewers; // 0x348
	TArray<UAssetUserData*> AssetUserData; // 0x358
	APlayerState* PauserPlayerState; // 0x368
	int32_t MaxNumberOfBookmarks; // 0x370
	UBookmarkBase* DefaultBookmarkClass; // 0x378
	TArray<UBookmarkBase*> BookmarkArray; // 0x380
	UBookmarkBase* LastBookmarkClass; // 0x390
};

struct UMM_Popup_UnsealingAcceleration {
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x300
	UMM_Slot_Material* m_Slot_Item; // 0x308
	UMirTextBlock* m_Txt_ItemName; // 0x310
	UMirTextBlock* m_Txt_ItemGrade; // 0x318
	UMirTextBlock* m_Txt_SupportCount; // 0x320
	UMirProgressBar* m_Prg_Time; // 0x328
	UMirProgressBar* m_Prg_SupportTime; // 0x330
	UMirTextBlock* m_Txt_Time; // 0x338
	UMirScrollBox* m_Scr_AccelerationList; // 0x340
	TArray<UMM_UnsealingAccelerationSlot*> m_arAccelerationSlot; // 0x348
	UMM_Item_Make_Slider* m_pSliderPoint; // 0x358
	UMirTextBlock* m_pTxtAtTime; // 0x360
	UMirTextBlock* m_pTxtUsePoint; // 0x368
	UMirTextBlock* m_pTxtMyPoint; // 0x370
	UMM_Common_Btn* m_pBtnCancle; // 0x378
	UMM_Common_Btn* m_pBtnOk; // 0x380
};

struct UMaterialExpressionLightVector {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UGeometryCacheTrack_FlipbookAnimation {
	uint32_t NumMeshSamples; // 0x58
};

struct UMM_Occupation_SituationBoard {
	UMM_Occupation_Minimap* m_SiegeMinimap; // 0x2f0
	UMM_Occupation_BattleFieldInfo* m_SiegeBattleFieldInfo; // 0x2f8
	UMM_Common_Btn_Symbol* m_Btn_OpenRankPopup; // 0x300
	UMM_Common_Btn_Symbol* m_Btn_ChattingPopup; // 0x308
	UMM_Hud_Chat* m_Hud_MiniChat; // 0x310
	UMirCanvasPanel* m_Position_Notice; // 0x318
	UMirTextBlock* m_Txt_Notice; // 0x320
	TArray<UMM_Occupation_CommandSlot*> m_CommandList; // 0x328
	UMirCheckBox* m_Check_MapNotice; // 0x338
	UCanvasPanel* Panel_Command_Drag; // 0x340
	UImage* m_Img_Drag; // 0x348
	int32_t m_TouchIndex; // 0x350
};

struct UMM_Ranking_Reward_Popup_New {
	UMirButton* m_pBtnCloseBG; // 0x2f0
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x2f8
	UMirScrollBox* m_pScrollList; // 0x300
};

struct UMM_UIAction_UIShop {
	AMM_GachaManagerActor* m_pGachaManager; // 0x68
};

struct UPlayMovieWidget {
	UMediaPlayer* m_MediaPlayer; // 0x2e0
	UMediaSource* m_MediaSource; // 0x2e8
	UCanvasPanel* m_pSkipBtnPanel; // 0x300
	UButton* m_pSkipButton; // 0x308
	UMirTextBlock* m_pMovieSubtitleText; // 0x310
	UMovieSubtitleData* m_pSubtitleData; // 0x318
	float m_fSkipDelayTime; // 0x324
};

struct AWaypointArea {
	int32_t m_UniqueID; // 0x218
	int32_t m_ActiveRadius; // 0x21c
	FVector m_WarpCoordinate; // 0x220
	bool m_bDefaultState; // 0x22c
	ECostType m_WaypointWarpNeedCostId; // 0x22d
	int32_t m_WaypointWarpNeedCostCount; // 0x230
	int32_t m_WaypointWarpNeedItemId; // 0x234
	int32_t m_WaypointWarpNeedItemCount; // 0x238
	EWaypointType m_WaypointType; // 0x23c
	EWaypointSubType m_WaypointSubType; // 0x240
	bool m_bEnableSubType; // 0x244
	int32_t m_WaypointNameID; // 0x248
	FString m_WayPointName; // 0x250
	int32_t m_InfoValue; // 0x260
	bool m_bNavInside; // 0x264
};

struct UBTTask_MoveTo {
	float AcceptableRadius; // 0x98
	UNavigationQueryFilter* FilterClass; // 0xa0
	float ObservedBlackboardValueTolerance; // 0xa8
	char bObserveBlackboardValue : 1; // 0xac
	char bAllowStrafe : 1; // 0xac
	char bAllowPartialPath : 1; // 0xac
	char bTrackMovingGoal : 1; // 0xac
	char bProjectGoalLocation : 1; // 0xac
	char bReachTestIncludesAgentRadius : 1; // 0xac
	char bReachTestIncludesGoalRadius : 1; // 0xac
	char bStopOnOverlap : 1; // 0xac
	char bStopOnOverlapNeedsUpdate : 1; // 0xad
};

struct UMM_UIAction_XdracoSealing {
	float Time_NextMessage_MakeItem; // 0x178
	int32_t ANIEND_TIME_FAIL; // 0x17c
	int32_t ANIEND_TIME_SUCCESS; // 0x180
	int32_t ANIEND_TIME_GREATESUCCESS; // 0x184
};

struct UMM_ServerRelocationSlot_Global {
	UMirCanvasPanel* m_Canvas_Recommend; // 0x2e0
	UMirTextBlock* m_Txt_Server; // 0x2e8
	UMirRichTextBlock* m_RTxt_Notice; // 0x2f0
	UMirButton* m_Btn_Select; // 0x2f8
};

struct ANavModifierVolume {
	UNavArea* AreaClass; // 0x258
};

struct UAudioCaptureComponent {
	int32_t JitterLatencyFrames; // 0x650
};

struct UQuitMatchCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMM_CommonVerticalTabBtn {
	UMirTextBlock* m_Txt_TabName; // 0x2f8
	UMirImage* m_Img_Locked; // 0x300
	UMirImage* m_Img_Indicator; // 0x308
	UMirTextBlock* m_Txt_Indicator; // 0x310
	UMirImage* m_Img_Selected; // 0x318
	UMirButton* m_Btn_Main; // 0x320
	UPanelWidget* m_Grid_Effect_1; // 0x328
	UPanelWidget* m_Grid_Effect_2; // 0x330
	int32_t STR_MSGID_SELECTEDEMPTY; // 0x338
};

struct UScaleBoxSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UCloudStorageBase {
	TArray<FString> LocalCloudFiles; // 0x38
	char bSuppressDelegateCalls : 1; // 0x48
};

struct UMM_Dominion_Castle_Guild {
	UMM_GuildIcon* m_pIconGuild; // 0x308
	UMirTextBlock* m_pTxtGuildName; // 0x310
	UMirTextBlock* m_pTxtGuildMasterName; // 0x318
	UMM_Common_Btn_Symbol* m_pBtnGuildInfo; // 0x320
	UHorizontalBox* m_pWidgetOccupyDur; // 0x328
	UMirTextBlock* m_pTxtOccupyDur; // 0x330
	UMM_Common_ToolTipBtn* m_pCommToolTip; // 0x338
	UMM_Common_Btn* m_pBtnStorage; // 0x340
	UMirTextBlock* m_pTxtStorage; // 0x348
	UMM_Dominion_Goods_Slot* m_pGoodsSlot0; // 0x350
	UMM_Dominion_Goods_Slot* m_pGoodsSlot1; // 0x358
	UMM_Dominion_Goods_Slot* m_pGoodsSlot2; // 0x360
	UMM_Dominion_Goods_Slot* m_pGoodsSlot3; // 0x368
};

struct UMM_Popup_ClosedTraining_CollectResult {
	FLinearColor m_SuccessColor; // 0x2e0
	FLinearColor m_PaneltyColor; // 0x2f0
	UMirCanvasPanel* m_Panel_Success; // 0x300
	UMirCanvasPanel* m_Panel_Penalty; // 0x308
	UMirButton* m_Btn_Close; // 0x310
	UMirTextBlock* m_Txt_Name; // 0x318
	UMirRichTextBlock* m_Txt_Desc; // 0x320
	UMirTextBlock* m_Txt_Notice; // 0x328
	UVerticalBox* m_VBox; // 0x330
	UWidgetAnimation* m_Ani_Success; // 0x338
	UWidgetAnimation* m_Ani_Panelty; // 0x340
};

struct UMM_ProfileImageEditor {
	UTexture2D* m_pPhotoTexture; // 0x2e0
	UMM_Popup_Profile* m_pParentProfile; // 0x2e8
	UMM_Common_Btn* m_BtnOk; // 0x2f0
};

struct UBTDecorator_TimeLimit {
	float TimeLimit; // 0x68
};

struct UMM_Hud_SubMenu {
	TMap<ESubMenuType, int32_t> m_mapSubMenuSlotTypeInfo; // 0x2f0
	UMM_Hud_SubMenuSlot* m_arrSubMenuSlotList[0x2]; // 0x340
};

struct UPlatformMediaSource {
	UMediaSource* MediaSource; // 0x80
};

struct UMM_HudPartyManage {
	int32_t BTN_PartyCreateStringID; // 0x2e0
	int32_t BTN_IconTID; // 0x2e4
	UImage* m_ImgIcon; // 0x2e8
	UTextBlock* m_TxtMain; // 0x2f0
	UButton* m_BtnMain; // 0x2f8
};

struct UBillboardComponent {
	UTexture2D* Sprite; // 0x418
	char bIsScreenSizeScaled : 1; // 0x420
	float ScreenSize; // 0x424
	float U; // 0x428
	float UL; // 0x42c
	float V; // 0x430
	float VL; // 0x434
};

struct UMotionControllerComponent {
	int32_t PlayerIndex; // 0x418
	EControllerHand Hand; // 0x41c
	FName MotionSource; // 0x420
	char bDisableLowLatencyUpdate : 1; // 0x428
	ETrackingStatus CurrentTrackingStatus; // 0x42c
	bool bDisplayDeviceModel; // 0x42d
	FName DisplayModelSource; // 0x430
	UStaticMesh* CustomDisplayMesh; // 0x438
	TArray<UMaterialInterface*> DisplayMeshMaterialOverrides; // 0x440
	UPrimitiveComponent* DisplayComponent; // 0x4b0
};

struct USteamNetConnection {
	bool bIsPassthrough; // 0x1a20
};

struct UMovieSceneEnumTrack {
	UEnum* Enum; // 0x88
};

struct ACameraBlockingVolume {
	EBrushType BrushType; // 0x218
	FColor BrushColor; // 0x21c
	int32_t PolyFlags; // 0x220
	char bColored : 1; // 0x224
	char bSolidWhenSelected : 1; // 0x224
	char bPlaceableFromClassBrowser : 1; // 0x224
	char bNotForClientOrServer : 1; // 0x224
	UModel* Brush; // 0x228
	UBrushComponent* BrushComponent; // 0x230
	char bInManipulation : 1; // 0x238
	TArray<FGeomSelection> SavedSelections; // 0x240
};

struct UInterpTrackInstParticleReplay {
	float LastUpdatePosition; // 0x28
};

struct UMM_Auction_Slot_Sell {
	UMM_Slot_Inventory* m_pSlotItem; // 0x370
	UMirTextBlock* m_pTxtName; // 0x378
	UMirTextBlock* m_pTxtPrice; // 0x380
	UMirRichTextBlock* m_pTxtRemainTime; // 0x388
	UMM_Common_Btn* m_pBtnCancle; // 0x390
};

struct UMovieSceneSubTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UNativeWidgetHost {
	UPanelSlot* Slot; // 0x28
	DelegateProperty bIsEnabledDelegate; // 0x30
	FText ToolTipText; // 0x40
	DelegateProperty ToolTipTextDelegate; // 0x58
	UWidget* ToolTipWidget; // 0x68
	DelegateProperty ToolTipWidgetDelegate; // 0x70
	DelegateProperty VisibilityDelegate; // 0x80
	FWidgetTransform RenderTransform; // 0x90
	FVector2D RenderTransformPivot; // 0xac
	char bIsVariable : 1; // 0xb4
	char bCreatedByConstructionScript : 1; // 0xb4
	char bIsEnabled : 1; // 0xb4
	char bOverride_Cursor : 1; // 0xb4
	USlateAccessibleWidgetData* AccessibleWidgetData; // 0xb8
	char bIsVolatile : 1; // 0xc0
	EMouseCursor Cursor; // 0xc1
	EWidgetClipping Clipping; // 0xc2
	ESlateVisibility Visibility; // 0xc3
	float RenderOpacity; // 0xc4
	UWidgetNavigation* Navigation; // 0xc8
	EFlowDirectionPreference FlowDirectionPreference; // 0xd0
	TArray<UPropertyBinding*> NativeBindings; // 0xf8
};

struct UMM_UnsealingAccelerationSlot {
	UMM_Slot_Inventory* m_Slot_Item; // 0x300
	UMirTextBlock* m_Txt_ItemName; // 0x308
	UMirTextBlock* m_Txt_ItemExplain; // 0x310
	UMirTextBlock* m_Txt_HaveCount; // 0x318
	UMM_Common_Btn_Cost* m_CB_UseCash; // 0x320
	UMM_Common_Btn* m_CB_UseItemAll; // 0x328
	UMM_Common_Btn* m_CB_UseItem; // 0x330
};

struct UMaterialExpressionTangent {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UShapeComponent {
	UBodySetup* ShapeBodySetup; // 0x418
	UNavAreaBase* AreaClass; // 0x420
	FColor ShapeColor; // 0x428
	char bDrawOnlyIfSelected : 1; // 0x42c
	char bShouldCollideWhenPlacing : 1; // 0x42c
	char bDynamicObstacle : 1; // 0x42c
};

struct ULegacyLevelSequenceDirectorBlueprint {
	UObject* ParentClass; // 0x50
	EBlueprintType BlueprintType; // 0x58
	char bRecompileOnLoad : 1; // 0x59
	char bHasBeenRegenerated : 1; // 0x59
	char bIsRegeneratingOnLoad : 1; // 0x59
	int32_t BlueprintSystemVersion; // 0x5c
	USimpleConstructionScript* SimpleConstructionScript; // 0x60
	TArray<UActorComponent*> ComponentTemplates; // 0x68
	TArray<UTimelineTemplate*> Timelines; // 0x78
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x88
	UInheritableComponentHandler* InheritableComponentHandler; // 0x98
};

struct UMirWrapScrollBox {
	int32_t m_iSlotCountPerLine; // 0x880
	FMargin m_vSlotPadding; // 0x884
	EStyle_MirWrapScrollBox m_eStyle; // 0x894
	UUserWidget* m_pParentWidget; // 0x8a8
	TArray<UWidget*> m_arSlot; // 0x8b0
	TArray<UPanelWidget*> m_arPanel; // 0x8c0
};

struct UMM_NewInventory_Equipment {
	UMM_NewInventoryTab* m_InvenTab; // 0x2e8
	UMM_NewInventory* m_Inven; // 0x2f0
	UMM_NewInventory_EquipmentAction* m_InvenEquipAction; // 0x2f8
};

struct UDistributionVectorParameterBase {
	FName ParameterName; // 0x50
	FVector MinInput; // 0x58
	FVector MaxInput; // 0x64
	FVector MinOutput; // 0x70
	FVector MaxOutput; // 0x7c
	DistributionParamMode ParamModes[0x3]; // 0x88
};

struct UMM_B_NameTag {
	UCanvasPanel* m_Can_GuildMark; // 0x2e0
	UImage* m_Img_GuildSymbol; // 0x2e8
	UImage* m_Img_GuildFrame; // 0x2f0
	UPanelWidget* m_Grd_Title; // 0x2f8
	UTextBlock* m_Txt_Title; // 0x300
	UTextBlock* m_Txt_GuildName; // 0x308
	UTextBlock* m_Txt_Name; // 0x310
	UPanelWidget* m_Grd_HP; // 0x318
	UProgressBar* m_Prg_HP; // 0x320
	UCanvasPanel* m_Can_SubIcon; // 0x328
	UImage* m_Img_SubIcon; // 0x330
	UImage* m_Img_BgSubIcon; // 0x338
	UImage* m_SpeechBalloonLoc; // 0x340
	USpacer* m_NameTextSpacer_GuildMark; // 0x348
	USpacer* m_NameTextSpacer_ClassIcon; // 0x350
	UMM_RevivalTag_Btn* m_RevivalTag_Btn; // 0x358
	UMM_RefuseRebirthGauge* m_RefuseRebirthGauge; // 0x360
	UMirCanvasPanel* m_canSharedTargetIcon; // 0x368
	UMirCanvasPanel* m_CanGuildCommandMark; // 0x370
	UMirImage* m_ImgGuildCommandMark; // 0x378
};

struct UTextureCube {
	FGuid LightingGuid; // 0x48
	int32_t LODBias; // 0x58
	TextureCompressionSettings CompressionSettings; // 0x5c
	TextureFilter Filter; // 0x5d
	ETextureMipLoadOptions MipLoadOptions; // 0x5e
	TextureGroup LODGroup; // 0x5f
	char SRGB : 1; // 0x60
	char bNoTiling : 1; // 0x60
	char VirtualTextureStreaming : 1; // 0x60
	char CompressionYCoCg : 1; // 0x60
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x68
};

struct UMM_PopUp_BuildingList {
	int32_t m_MoveStr; // 0x2e0
	int32_t m_CompleteStr; // 0x2e4
	int32_t m_levelStr; // 0x2e8
	int32_t m_CombatStr; // 0x2ec
	int32_t m_ExpStr; // 0x2f0
	int32_t m_PerValueStrID; // 0x2f4
	int32_t m_CollectPlant; // 0x2f8
	int32_t m_CollectMine; // 0x2fc
	int32_t m_BlackIron; // 0x300
	int32_t m_CollectForce; // 0x304
	int32_t m_HaveNoGuildStr; // 0x308
	UMirImage* m_Img_Thumnail; // 0x310
	UMirImage* m_Img_Thumnail2; // 0x318
	UMirImage* m_Img_Icon; // 0x320
	UScaleBox* m_Scale_Box; // 0x328
	UMirTextBlock* m_Txt_Condition; // 0x330
	UMirTextBlock* m_Txt_ConditionValue; // 0x338
	UPanelWidget* m_Panel_Complete; // 0x340
	UMirButton* m_Btn_Check; // 0x348
	UMM_Common_Btn* m_Btn_Move; // 0x350
};

struct UMM_Popup_Party_Slot_Option_Item {
	ESlotClassOption SlotOption; // 0x2e0
	int32_t STRING_ID_EXPLAIN_ALL; // 0x2e4
	int32_t STRING_ID_EXPLAIN_LOCK; // 0x2e8
	TArray<int32_t> arSTRING_ID_CLASS_NAME; // 0x2f0
	TArray<int32_t> arSTRING_ID_CLASS_EXPLAN; // 0x300
	UVerticalBox* m_VrtBox_All; // 0x310
	UVerticalBox* m_VrtBox_Class; // 0x318
	UVerticalBox* m_VrtBox_Lock; // 0x320
	UMirImage* m_Img_Class; // 0x328
	UMirTextBlock* m_Txt_ClassName; // 0x330
	UMirTextBlock* m_Txt_Explain; // 0x338
	UMirButton* m_Btn_Main; // 0x340
};

struct UMM_PopupGuildCostExchange {
	UMM_Common_Btn_Symbol* btn_close; // 0x2f0
	UMM_Common_Btn* btn_confirm; // 0x2f8
	UMM_Common_Btn* Btn_Cancel; // 0x300
	UMirTextBlock* txt_send; // 0x308
	UMirTextBlock* txt_recv; // 0x310
	UMirImage* img_send; // 0x318
	UMirImage* img_recv; // 0x320
	UMirImage* img_possession; // 0x328
	UMirTextBlock* txt_possession_value; // 0x330
	UMM_Item_Make_Slider* item_make_slider; // 0x338
	TArray<UMM_Popup_GuildDonationSelectSlot*> lst_slot; // 0x340
};

struct UMaterialFunctionInterface {
	FGuid StateID; // 0x28
	EMaterialFunctionUsage MaterialFunctionUsage; // 0x38
};

struct UMM_Map_Dest {
	float m_fRaderScale; // 0x2e0
	UWidgetAnimation* m_AniActive; // 0x2e8
	USpacer* m_SpcMain; // 0x2f8
	UImage* m_ImgDest_1; // 0x300
	UImage* m_ImgDest_2; // 0x308
};

struct UMM_Customizing_Save {
	UMirScrollBox* m_SaveSlotList; // 0x2f0
	UMM_Common_Btn_Symbol* m_SaveButton; // 0x2f8
	UMM_Common_Btn* m_OkButton; // 0x300
	UMirCheckBox* m_AutoCheckBox; // 0x308
	UWidget* m_EmptyNotice; // 0x310
	TArray<UMM_Customizing_SaveSlot*> m_SaveSlotArray; // 0x318
};

struct UMM_Popup_Revival_Select {
	UMM_Occupation_Minimap* OccupationMinimap; // 0x2f0
	UMirListView* m_ListView_RevivalSelectList; // 0x2f8
	UMM_Common_Btn* Btn_Revival; // 0x300
	UMM_Common_Btn_Symbol* btn_close; // 0x308
	TArray<URevivalSelectSlotObj*> m_arRevivalSelectSlotObj; // 0x318
};

struct UOnlineSubsystemExtendedGoogleWidget {
	UOnlineSubsystemExtendedGoogleWebBrowser* WebBrowser; // 0x240
	UButton* m_Btn_Close; // 0x268
};

struct ULevelSequenceDirector {
	ULevelSequencePlayer* Player; // 0x28
};

struct USpacer {
	FVector2D Size; // 0x108
};

struct UMM_Customizing_PaletteThumbnail {
	UMirTextBlock* m_Txt_Title; // 0x2e0
};

struct UEdGraphNode {
	TArray<UEdGraphPin_Deprecated*> DeprecatedPins; // 0x38
	int32_t NodePosX; // 0x48
	int32_t NodePosY; // 0x4c
	int32_t NodeWidth; // 0x50
	int32_t NodeHeight; // 0x54
	ENodeAdvancedPins AdvancedPinDisplay; // 0x58
	ENodeEnabledState EnabledState; // 0x59
	char bDisplayAsDisabled : 1; // 0x5b
	char bUserSetEnabledState : 1; // 0x5b
	char bIsNodeEnabled : 1; // 0x5b
	char bHasCompilerMessage : 1; // 0x5b
	FString NodeComment; // 0x60
	int32_t ErrorType; // 0x70
	FString ErrorMsg; // 0x78
	FGuid NodeGuid; // 0x88
};

struct UMM_Hud_Chat_DottedLine {
	UMirRichTextBlock* RTxt_DottedLine; // 0x2f0
};

struct UMM_Occupation_Observer_KillLog {
	UPanelWidget* m_PanelMain; // 0x2f0
	TArray<UMM_Occupation_Observer_KillLog_Slot*> KillLogList; // 0x2f8
	bool m_InitAsyncLoad; // 0x308
	float m_AddMessageLatency; // 0x30c
	KillLogCampType CampType; // 0x310
};

struct UNamedSlot {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UGameplayTagsManager {
	TArray<FGameplayTagSource> TagSources; // 0xc0
	TArray<UDataTable*> GameplayTagTables; // 0x1b0
};

struct UMM_MagicStone_AttributeSlot {
	UMirImage* Img_Icon; // 0x2f0
	UMirTextBlock* Txt_OptionName; // 0x2f8
	UMirTextBlock* Txt_OptionValue; // 0x300
};

struct UMM_Hud_BackSkill {
	UMirImage* m_pSkillIcon; // 0x2e0
	UPanelWidget* m_pMainPanel; // 0x2e8
	UWidgetAnimation* m_pAniSkillOn; // 0x2f0
};

struct UHorizontalBox {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UCameraShake {
	char bSingleInstance : 1; // 0x28
	float OscillationDuration; // 0x2c
	float OscillationBlendInTime; // 0x30
	float OscillationBlendOutTime; // 0x34
	FROscillator RotOscillation; // 0x38
	FVOscillator LocOscillation; // 0x5c
	FFOscillator FOVOscillation; // 0x80
	float AnimPlayRate; // 0x8c
	float AnimScale; // 0x90
	float AnimBlendInTime; // 0x94
	float AnimBlendOutTime; // 0x98
	float RandomAnimSegmentDuration; // 0x9c
	UCameraAnim* Anim; // 0xa0
	char bRandomAnimSegment : 1; // 0xa8
	APlayerCameraManager* CameraOwner; // 0xc0
	float ShakeScale; // 0x148
	float OscillatorTimeRemaining; // 0x14c
	UCameraAnimInst* AnimInst; // 0x150
};

struct UMM_Popup_Invite_Alarm {
	UMirTextBlock* m_Txt_Alarm_Count; // 0x2e0
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x2e8
	UMM_Invite_Alarm_Slot* m_Slot_Invite_Alarm; // 0x2f0
	UMM_Common_Btn* m_CB_Accept; // 0x2f8
	UMM_Common_Btn* m_CB_Refuse; // 0x300
};

struct UGraphNodeContextMenuContext {
	UBlueprint* Blueprint; // 0x28
	UEdGraph* Graph; // 0x30
	UEdGraphNode* Node; // 0x38
	bool bIsDebugging; // 0x48
};

struct UDynamicEntryBox {
	UUserWidget* EntryWidgetClass; // 0x1c8
};

struct UMM_Map_Channel {
	UMirTextBlock* m_Txt_ChangeChannel; // 0x2f0
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x2f8
	UMirImage* m_Img_PartyIcon; // 0x300
	UMirTextBlock* m_Txt_PartyChannelInfo; // 0x308
	UMirButton* m_Btn_Main; // 0x310
	UMirListView* m_ListView_ChannelList; // 0x318
	TArray<UChannelSlotObj*> m_arChannelSlotObj; // 0x320
};

struct UInAppPurchaseData {
	FIAPProductData m_IAPProductData; // 0x28
};

struct ULightmassPrimitiveSettingsObject {
	FLightmassPrimitiveSettings LightmassSettings; // 0x28
};

struct UMM_Dominion_Title_Info {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_Popup_BattlePsss_BuyInfo {
	int32_t STRING_ID_MESSAGE; // 0x2e0
	UMirImage* m_Img_Banner; // 0x2e8
	UMirImage* m_Img_LevelLimit; // 0x2f0
	UMirRichTextBlock* m_RTxt_Message; // 0x2f8
	UMirTextBlock* m_Txt_Title; // 0x300
	UMirTextBlock* m_Txt_LevelLimit; // 0x308
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x310
	UMM_Common_Btn* m_C_Btn_Cancel; // 0x318
	UMM_Common_Btn* m_C_Btn_Buy; // 0x320
};

struct APlayerCutsceneActor {
	UStaticMeshComponent* m_pWeaponMeshComponent01; // 0x300
	UStaticMeshComponent* m_pWeaponMeshComponent02; // 0x308
};

struct UParticleModuleTrailSource {
	ETrail2SourceMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	FRawDistributionFloat SourceStrength; // 0x40
	char bLockSourceStength : 1; // 0x70
	int32_t SourceOffsetCount; // 0x74
	TArray<FVector> SourceOffsetDefaults; // 0x78
	EParticleSourceSelectionMethod SelectionMethod; // 0x88
	char bInheritRotation : 1; // 0x8c
};

struct UAimOffsetBlendSpace1D {
	bool bScaleAnimation; // 0x148
};

struct UPaperTileLayer {
	FText LayerName; // 0x28
	int32_t LayerWidth; // 0x40
	int32_t LayerHeight; // 0x44
	char bHiddenInGame : 1; // 0x48
	char bLayerCollides : 1; // 0x48
	char bOverrideCollisionThickness : 1; // 0x48
	char bOverrideCollisionOffset : 1; // 0x48
	float CollisionThicknessOverride; // 0x4c
	float CollisionOffsetOverride; // 0x50
	FLinearColor LayerColor; // 0x54
	int32_t AllocatedWidth; // 0x64
	int32_t AllocatedHeight; // 0x68
	TArray<FPaperTileInfo> AllocatedCells; // 0x70
	UPaperTileSet* TileSet; // 0x80
	TArray<int32_t> AllocatedGrid; // 0x88
};

struct UNavLinkComponent {
	TArray<FNavigationLink> Links; // 0x420
};

struct UMM_PopUp_ItemInfo_Costume {
	UCanvasPanel* m_Grid_Item_Info; // 0x300
	UMM_Costume_Slot_InvenItem* Slot_Main; // 0x308
	UMirTextBlock* Txt_Name; // 0x310
	UMirTextBlock* txt_date; // 0x318
	UMirButton* Btn_Main; // 0x320
	UMM_Common_Btn_Symbol* btn_close; // 0x328
	TArray<UPanelWidget*> Panel_Ability; // 0x330
	TArray<UMirImage*> Img_Ability; // 0x340
	TArray<UMirTextBlock*> Txt_Ability_Name; // 0x350
	TArray<UMirTextBlock*> Txt_Ability_Value; // 0x360
	UMirImage* Img_Icon_Cost; // 0x370
	UMirTextBlock* Txt_Name_CostValue; // 0x378
	COSTUME_PARTS m_CostumeParts; // 0x380
	int32_t m_CostumeId; // 0x384
};

struct UMM_LoginManager {
	UGoogleLoginSubSystem* m_GoogleLoginSubSystem; // 0x1c8
	UAppleLoginSubSystem* m_AppleLoginSubSystem; // 0x1d0
	UFacebookLoginSubSystem* m_FacebookLoginSubSystem; // 0x1d8
	UCustomLoginSubSystem* m_CustomLoginSubSystem; // 0x1e0
	USteamLoginSubSystem* m_SteamLoginSubSystem; // 0x1e8
	UWSAuthModule* m_WSAuthModule; // 0x1f0
	UFirebaseMessagingHelper* m_FirebaseMessagingHelper; // 0x1f8
};

struct USoundNodeMature {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct UMM_UserEvent_BattlePass {
	int32_t STRING_ID_SEASON_END; // 0x2f0
	UMirTextBlock* m_Txt_Name; // 0x2f8
	UMirImage* m_Img_Thumb; // 0x300
	UMM_UserEvent_WebBanner* m_WebBanner; // 0x308
	UMirTextBlock* m_Txt_Season_Schedule; // 0x310
	UMirTextBlock* m_Txt_NextStep; // 0x318
	UMirProgressBar* m_Prog_MissionPoint; // 0x320
	UMirTextBlock* m_Txt_ProgMissionPoint; // 0x328
	UWidgetSwitcher* m_WidgetSwitcher; // 0x330
	UMM_BattlePass_Menu_Btn* m_BattlePass_Menu_Btn[0x2]; // 0x338
	UMM_BattlePass_Reward_List* m_BattlePass_Reward; // 0x348
	UMM_BattlePass_Mission_List* m_BattlePass_Mission; // 0x350
	UMirRichTextBlock* m_Rtxt_Desc; // 0x358
	UMM_Common_ToolTipBtn* m_C_Btn_ToolTip; // 0x360
};

struct UPlanarReflectionComponent {
	UBoxComponent* PreviewBox; // 0x2d0
	float NormalDistortionStrength; // 0x2d8
	float PrefilterRoughness; // 0x2dc
	float PrefilterRoughnessDistance; // 0x2e0
	int32_t ScreenPercentage; // 0x2e4
	float ExtraFOV; // 0x2e8
	float DistanceFromPlaneFadeStart; // 0x2ec
	float DistanceFromPlaneFadeEnd; // 0x2f0
	float DistanceFromPlaneFadeoutStart; // 0x2f4
	float DistanceFromPlaneFadeoutEnd; // 0x2f8
	float AngleFromPlaneFadeStart; // 0x2fc
	float AngleFromPlaneFadeEnd; // 0x300
	bool bShowPreviewPlane; // 0x304
	bool bRenderSceneTwoSided; // 0x305
};

struct UMM_PopUp_Item_Tooltip {
	UPanelWidget* Grid_Item_Info; // 0x2e0
	UVerticalBox* VBox; // 0x2e8
	USpacer* m_Spc_ContentsSpace; // 0x2f0
	UMM_Toltip_Slot* SlotName; // 0x2f8
	UMM_Toltip_Slot* SlotTrade; // 0x300
	UMM_Toltip_Slot* SlotTime; // 0x308
	TArray<UMM_Toltip_Slot*> SlotAttribute; // 0x310
	UMM_Toltip_Slot* SlotDesc; // 0x320
	UMM_PassiveSkillDesc* m_Passive_Desc; // 0x328
	int32_t m_SlotCount; // 0x330
	int32_t STR_TRADE_NO; // 0x334
	int32_t STR_TRADE; // 0x338
	int32_t STR_TIME_EXPIRE; // 0x33c
	int32_t STR_NAME_AND_SMELTLV; // 0x340
	int32_t STR_SMELTLV; // 0x344
};

struct AProjectileMeteor {
	USphereComponent* m_pCollSphereComp; // 0x218
	UParticleSystemComponent* m_pShotParticleComp; // 0x220
	UParticleSystemComponent* m_pImpactParticleComp; // 0x228
};

struct UMaterialExpressionLandscapeLayerBlend {
	TArray<FLayerBlendInput> Layers; // 0x40
	FGuid ExpressionGUID; // 0x50
};

struct UEditableGameplayTagQueryExpression_AllExprMatch {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UMoviePlayerSettings {
	bool bWaitForMoviesToComplete; // 0x28
	bool bMoviesAreSkippable; // 0x29
	TArray<FString> StartupMovies; // 0x30
};

struct UOperatorField {
	float Magnitude; // 0xb0
	UFieldNodeBase* RightField; // 0xb8
	UFieldNodeBase* LeftField; // 0xc0
	EFieldOperationType Operation; // 0xc8
};

struct UVideoCaptureProtocol {
	bool bUseCompression; // 0x68
	float CompressionQuality; // 0x6c
};

struct UMicroTransactionBase {
	TArray<FPurchaseInfo> AvailableProducts; // 0x38
	FString LastError; // 0x48
	FString LastErrorSolution; // 0x58
};

struct UParticleModuleLight {
	bool bUseInverseSquaredFalloff; // 0x30
	bool bAffectsTranslucency; // 0x31
	bool bPreviewLightRadius; // 0x32
	float SpawnFraction; // 0x34
	FRawDistributionVector ColorScaleOverLife; // 0x38
	FRawDistributionFloat BrightnessOverLife; // 0x80
	FRawDistributionFloat RadiusScale; // 0xb0
	FRawDistributionFloat LightExponent; // 0xe0
	FLightingChannels LightingChannels; // 0x110
	float VolumetricScatteringIntensity; // 0x114
	bool bHighQualityLights; // 0x118
	bool bShadowCastingLights; // 0x119
};

struct URichTextBlock {
	FText Text; // 0x128
	UDataTable* TextStyleSet; // 0x140
	TArray<URichTextBlockDecorator*> DecoratorClasses; // 0x148
	bool bOverrideDefaultStyle; // 0x158
	FTextBlockStyle DefaultTextStyleOverride; // 0x160
	float MinDesiredWidth; // 0x3c8
	TArray<URichTextBlockDecorator*> InstanceDecorators; // 0x638
};

struct UEngine {
	UFont* TinyFont; // 0x30
	FSoftObjectPath TinyFontName; // 0x38
	UFont* SmallFont; // 0x50
	FSoftObjectPath SmallFontName; // 0x58
	UFont* MediumFont; // 0x70
	FSoftObjectPath MediumFontName; // 0x78
	UFont* LargeFont; // 0x90
	FSoftObjectPath LargeFontName; // 0x98
	UFont* SubtitleFont; // 0xb0
	FSoftObjectPath SubtitleFontName; // 0xb8
	TArray<UFont*> AdditionalFonts; // 0xd0
	TArray<FString> AdditionalFontNames; // 0xe8
	UConsole* ConsoleClass; // 0xf8
	FSoftClassPath ConsoleClassName; // 0x100
	UGameViewportClient* GameViewportClientClass; // 0x118
	FSoftClassPath GameViewportClientClassName; // 0x120
	ULocalPlayer* LocalPlayerClass; // 0x138
	FSoftClassPath LocalPlayerClassName; // 0x140
	AWorldSettings* WorldSettingsClass; // 0x158
	FSoftClassPath WorldSettingsClassName; // 0x160
	FSoftClassPath NavigationSystemClassName; // 0x178
	UNavigationSystemBase* NavigationSystemClass; // 0x190
	FSoftClassPath NavigationSystemConfigClassName; // 0x198
	UNavigationSystemConfig* NavigationSystemConfigClass; // 0x1b0
	FSoftClassPath AvoidanceManagerClassName; // 0x1b8
	UAvoidanceManager* AvoidanceManagerClass; // 0x1d0
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x1d8
	FSoftClassPath PhysicsCollisionHandlerClassName; // 0x1e0
	FSoftClassPath GameUserSettingsClassName; // 0x1f8
	UGameUserSettings* GameUserSettingsClass; // 0x210
	FSoftClassPath AIControllerClassName; // 0x218
	UGameUserSettings* GameUserSettings; // 0x230
	ALevelScriptActor* LevelScriptActorClass; // 0x238
	FSoftClassPath LevelScriptActorClassName; // 0x240
	FSoftClassPath DefaultBlueprintBaseClassName; // 0x258
	FSoftClassPath GameSingletonClassName; // 0x270
	UObject* GameSingleton; // 0x288
	FSoftClassPath AssetManagerClassName; // 0x290
	UAssetManager* AssetManager; // 0x2a8
	UTexture2D* DefaultTexture; // 0x2b0
	FSoftObjectPath DefaultTextureName; // 0x2b8
	UTexture* DefaultDiffuseTexture; // 0x2d0
	FSoftObjectPath DefaultDiffuseTextureName; // 0x2d8
	UTexture2D* DefaultBSPVertexTexture; // 0x2f0
	FSoftObjectPath DefaultBSPVertexTextureName; // 0x2f8
	UTexture2D* HighFrequencyNoiseTexture; // 0x310
	FSoftObjectPath HighFrequencyNoiseTextureName; // 0x318
	UTexture2D* DefaultBokehTexture; // 0x330
	FSoftObjectPath DefaultBokehTextureName; // 0x338
	UTexture2D* DefaultBloomKernelTexture; // 0x350
	FSoftObjectPath DefaultBloomKernelTextureName; // 0x358
	UMaterial* WireframeMaterial; // 0x370
	FString WireframeMaterialName; // 0x378
	UMaterial* HairDefaultMaterial; // 0x388
	FString HairDefaultMaterialName; // 0x390
	UMaterial* HairDebugMaterial; // 0x3a0
	FString HairDebugMaterialName; // 0x3a8
	UMaterial* DebugMeshMaterial; // 0x3b8
	FSoftObjectPath DebugMeshMaterialName; // 0x3c0
	UMaterial* EmissiveMeshMaterial; // 0x3d8
	FSoftObjectPath EmissiveMeshMaterialName; // 0x3e0
	UMaterial* LevelColorationLitMaterial; // 0x3f8
	FString LevelColorationLitMaterialName; // 0x400
	UMaterial* LevelColorationUnlitMaterial; // 0x410
	FString LevelColorationUnlitMaterialName; // 0x418
	UMaterial* LightingTexelDensityMaterial; // 0x428
	FString LightingTexelDensityName; // 0x430
	UMaterial* ShadedLevelColorationLitMaterial; // 0x440
	FString ShadedLevelColorationLitMaterialName; // 0x448
	UMaterial* ShadedLevelColorationUnlitMaterial; // 0x458
	FString ShadedLevelColorationUnlitMaterialName; // 0x460
	UMaterial* RemoveSurfaceMaterial; // 0x470
	FSoftObjectPath RemoveSurfaceMaterialName; // 0x478
	UMaterial* VertexColorMaterial; // 0x490
	FString VertexColorMaterialName; // 0x498
	UMaterial* VertexColorViewModeMaterial_ColorOnly; // 0x4a8
	FString VertexColorViewModeMaterialName_ColorOnly; // 0x4b0
	UMaterial* VertexColorViewModeMaterial_AlphaAsColor; // 0x4c0
	FString VertexColorViewModeMaterialName_AlphaAsColor; // 0x4c8
	UMaterial* VertexColorViewModeMaterial_RedOnly; // 0x4d8
	FString VertexColorViewModeMaterialName_RedOnly; // 0x4e0
	UMaterial* VertexColorViewModeMaterial_GreenOnly; // 0x4f0
	FString VertexColorViewModeMaterialName_GreenOnly; // 0x4f8
	UMaterial* VertexColorViewModeMaterial_BlueOnly; // 0x508
	FString VertexColorViewModeMaterialName_BlueOnly; // 0x510
	FSoftObjectPath DebugEditorMaterialName; // 0x520
	UMaterial* ConstraintLimitMaterial; // 0x538
	UMaterialInstanceDynamic* ConstraintLimitMaterialX; // 0x540
	UMaterialInstanceDynamic* ConstraintLimitMaterialXAxis; // 0x548
	UMaterialInstanceDynamic* ConstraintLimitMaterialY; // 0x550
	UMaterialInstanceDynamic* ConstraintLimitMaterialYAxis; // 0x558
	UMaterialInstanceDynamic* ConstraintLimitMaterialZ; // 0x560
	UMaterialInstanceDynamic* ConstraintLimitMaterialZAxis; // 0x568
	UMaterialInstanceDynamic* ConstraintLimitMaterialPrismatic; // 0x570
	UMaterial* InvalidLightmapSettingsMaterial; // 0x578
	FSoftObjectPath InvalidLightmapSettingsMaterialName; // 0x580
	UMaterial* PreviewShadowsIndicatorMaterial; // 0x598
	FSoftObjectPath PreviewShadowsIndicatorMaterialName; // 0x5a0
	UMaterial* ArrowMaterial; // 0x5b8
	UMaterialInstanceDynamic* ArrowMaterialYellow; // 0x5c0
	FSoftObjectPath ArrowMaterialName; // 0x5c8
	FLinearColor LightingOnlyBrightness; // 0x5e0
	TArray<FLinearColor> ShaderComplexityColors; // 0x5f0
	TArray<FLinearColor> QuadComplexityColors; // 0x600
	TArray<FLinearColor> LightComplexityColors; // 0x610
	TArray<FLinearColor> StationaryLightOverlapColors; // 0x620
	TArray<FLinearColor> LODColorationColors; // 0x630
	TArray<FLinearColor> HLODColorationColors; // 0x640
	TArray<FLinearColor> StreamingAccuracyColors; // 0x650
	float MinPixelShaderAdditiveComplexityCount; // 0x660
	float MinES2PixelShaderAdditiveComplexityCount; // 0x664
	float MinES3PixelShaderAdditiveComplexityCount; // 0x668
	float MaxPixelShaderAdditiveComplexityCount; // 0x66c
	float MaxES2PixelShaderAdditiveComplexityCount; // 0x670
	float MaxES3PixelShaderAdditiveComplexityCount; // 0x674
	float MinLightMapDensity; // 0x678
	float IdealLightMapDensity; // 0x67c
	float MaxLightMapDensity; // 0x680
	char bRenderLightMapDensityGrayscale : 1; // 0x684
	float RenderLightMapDensityGrayscaleScale; // 0x688
	float RenderLightMapDensityColorScale; // 0x68c
	FLinearColor LightMapDensityVertexMappedColor; // 0x690
	FLinearColor LightMapDensitySelectedColor; // 0x6a0
	TArray<FStatColorMapping> StatColorMappings; // 0x6b0
	UPhysicalMaterial* DefaultPhysMaterial; // 0x6c0
	FSoftObjectPath DefaultPhysMaterialName; // 0x6c8
	TArray<FGameNameRedirect> ActiveGameNameRedirects; // 0x6e0
	TArray<FClassRedirect> ActiveClassRedirects; // 0x6f0
	TArray<FPluginRedirect> ActivePluginRedirects; // 0x700
	TArray<FStructRedirect> ActiveStructRedirects; // 0x710
	UTexture2D* PreIntegratedSkinBRDFTexture; // 0x720
	FSoftObjectPath PreIntegratedSkinBRDFTextureName; // 0x728
	UTexture2D* BlueNoiseTexture; // 0x740
	FSoftObjectPath BlueNoiseTextureName; // 0x748
	UTexture2D* MiniFontTexture; // 0x760
	FSoftObjectPath MiniFontTextureName; // 0x768
	UTexture* WeightMapPlaceholderTexture; // 0x780
	FSoftObjectPath WeightMapPlaceholderTextureName; // 0x788
	UTexture2D* LightMapDensityTexture; // 0x7a0
	FSoftObjectPath LightMapDensityTextureName; // 0x7a8
	UGameViewportClient* GameViewport; // 0x7c8
	TArray<FString> DeferredCommands; // 0x7d0
	int32_t TickCycles; // 0x7e0
	int32_t GameCycles; // 0x7e4
	int32_t ClientCycles; // 0x7e8
	float NearClipPlane; // 0x7ec
	char bHardwareSurveyEnabled : 1; // 0x7f0
	char bSubtitlesEnabled : 1; // 0x7f0
	char bSubtitlesForcedOff : 1; // 0x7f0
	int32_t MaximumLoopIterationCount; // 0x7f4
	char bCanBlueprintsTickByDefault : 1; // 0x7f8
	char bOptimizeAnimBlueprintMemberVariableAccess : 1; // 0x7f8
	char bAllowMultiThreadedAnimationUpdate : 1; // 0x7f8
	char bEnableEditorPSysRealtimeLOD : 1; // 0x7f8
	char bSmoothFrameRate : 1; // 0x7f8
	char bUseFixedFrameRate : 1; // 0x7f8
	float FixedFrameRate; // 0x7fc
	FFloatRange SmoothedFrameRateRange; // 0x800
	UEngineCustomTimeStep* DefaultCustomTimeStep; // 0x810
	UEngineCustomTimeStep* CurrentCustomTimeStep; // 0x818
	FSoftClassPath CustomTimeStepClassName; // 0x820
	UTimecodeProvider* DefaultTimecodeProvider; // 0x838
	UTimecodeProvider* CustomTimecodeProvider; // 0x840
	FSoftClassPath DefaultTimecodeProviderClassName; // 0x848
	FSoftClassPath TimecodeProviderClassName; // 0x860
	FFrameRate DefaultTimecodeFrameRate; // 0x878
	char bCheckForMultiplePawnsSpawnedInAFrame : 1; // 0x880
	int32_t NumPawnsAllowedToBeSpawnedInAFrame; // 0x884
	char bShouldGenerateLowQualityLightmaps : 1; // 0x888
	FColor C_WorldBox; // 0x88c
	FColor C_BrushWire; // 0x890
	FColor C_AddWire; // 0x894
	FColor C_SubtractWire; // 0x898
	FColor C_SemiSolidWire; // 0x89c
	FColor C_NonSolidWire; // 0x8a0
	FColor C_WireBackground; // 0x8a4
	FColor C_ScaleBoxHi; // 0x8a8
	FColor C_VolumeCollision; // 0x8ac
	FColor C_BSPCollision; // 0x8b0
	FColor C_OrthoBackground; // 0x8b4
	FColor C_Volume; // 0x8b8
	FColor C_BrushShape; // 0x8bc
	float StreamingDistanceFactor; // 0x8c0
	FDirectoryPath GameScreenshotSaveDirectory; // 0x8c8
	ETransitionType TransitionType; // 0x8d8
	FString TransitionDescription; // 0x8e0
	FString TransitionGameMode; // 0x8f0
	float MeshLODRange; // 0x900
	char bAllowMatureLanguage : 1; // 0x904
	float CameraRotationThreshold; // 0x908
	float CameraTranslationThreshold; // 0x90c
	float PrimitiveProbablyVisibleTime; // 0x910
	float MaxOcclusionPixelsFraction; // 0x914
	char bPauseOnLossOfFocus : 1; // 0x918
	int32_t MaxParticleResize; // 0x91c
	int32_t MaxParticleResizeWarn; // 0x920
	TArray<FDropNoteInfo> PendingDroppedNotes; // 0x928
	float NetClientTicksPerSecond; // 0x938
	float DisplayGamma; // 0x93c
	float MinDesiredFrameRate; // 0x940
	FLinearColor DefaultSelectedMaterialColor; // 0x944
	FLinearColor SelectedMaterialColor; // 0x954
	FLinearColor SelectionOutlineColor; // 0x964
	FLinearColor SubduedSelectionOutlineColor; // 0x974
	FLinearColor SelectedMaterialColorOverride; // 0x984
	bool bIsOverridingSelectedColor; // 0x994
	char bEnableOnScreenDebugMessages : 1; // 0x998
	char bEnableOnScreenDebugMessagesDisplay : 1; // 0x998
	char bSuppressMapWarnings : 1; // 0x998
	char bDisableAILogging : 1; // 0x998
	uint32_t bEnableVisualLogRecordingOnStart; // 0x99c
	int32_t ScreenSaverInhibitorSemaphore; // 0x9a4
	char bLockReadOnlyLevels : 1; // 0x9a8
	FString ParticleEventManagerClassPath; // 0x9b0
	float SelectionHighlightIntensity; // 0x9d0
	float BSPSelectionHighlightIntensity; // 0x9d4
	float SelectionHighlightIntensityBillboards; // 0x9d8
	TArray<FNetDriverDefinition> NetDriverDefinitions; // 0xc08
	TArray<FString> ServerActors; // 0xc18
	TArray<FString> RuntimeServerActors; // 0xc28
	float NetErrorLogInterval; // 0xc38
	char bStartedLoadMapMovie : 1; // 0xc48
	int32_t NextWorldContextHandle; // 0xc90
};

struct ABoxReflectionCapture {
	UReflectionCaptureComponent* CaptureComponent; // 0x218
};

struct UPhysicsCollisionHandler {
	float ImpactThreshold; // 0x28
	float ImpactReFireDelay; // 0x2c
	USoundBase* DefaultImpactSound; // 0x30
	float LastImpactSoundTime; // 0x38
};

struct USceneCaptureComponent {
	ESceneCapturePrimitiveRenderMode PrimitiveRenderMode; // 0x220
	ESceneCaptureSource CaptureSource; // 0x221
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenComponents; // 0x228
	TArray<AActor*> HiddenActors; // 0x238
	TArray<TWeakObjectPtr<UPrimitiveComponent>> ShowOnlyComponents; // 0x248
	TArray<AActor*> ShowOnlyActors; // 0x258
	bool bCaptureEveryFrame; // 0x268
	bool bCaptureOnMovement; // 0x269
	bool bAlwaysPersistRenderingState; // 0x26a
	float LODDistanceFactor; // 0x26c
	float MaxViewDistanceOverride; // 0x270
	int32_t CaptureSortPriority; // 0x274
	TArray<FEngineShowFlagsSetting> ShowFlagSettings; // 0x278
	float ViewportOffsetX; // 0x290
	float ViewportOffsetY; // 0x294
	float ViewportOriginX; // 0x298
	float ViewportOriginY; // 0x29c
	float ViewportSizeX; // 0x2a0
	float ViewportSizeY; // 0x2a4
	FString ProfilingEventName; // 0x2b0
};

struct UMM_HudAlramHelperListSolt {
	UImage* m_Img_Symbol; // 0x318
	UTextBlock* m_Txt_Description; // 0x320
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x328
	UButton* m_Btn_Link; // 0x330
};

struct AScriptTrigger {
	TArray<FTriggerScriptData> m_ScriptDataArray; // 0x288
};

struct AMM_AIControllerBase {
	char bStopAILogicOnUnposses : 1; // 0x2c8
	char bLOSflag : 1; // 0x2c8
	char bSkipExtraLOSChecks : 1; // 0x2c8
	char bAllowStrafe : 1; // 0x2c8
	char bWantsPlayerState : 1; // 0x2c8
	char bSetControlRotationFromPawnOrientation : 1; // 0x2c8
	UPathFollowingComponent* PathFollowingComponent; // 0x2d0
	UBrainComponent* BrainComponent; // 0x2d8
	UAIPerceptionComponent* PerceptionComponent; // 0x2e0
	UPawnActionsComponent* ActionsComp; // 0x2e8
	UBlackboardComponent* Blackboard; // 0x2f0
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x2f8
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x300
	FScriptMulticastDelegate ReceiveMoveCompleted; // 0x308
};

struct UMM_DungeonCommonTicket {
	UMirTextBlock* txtFixNeedTicket; // 0x2e0
	UMM_Slot_Material_Item* slotNeedTicket1; // 0x2e8
	UMirTextBlock* txtFixHaveTicket; // 0x2f0
	UMM_Slot_Material_Item* slotNeedTicket2; // 0x2f8
	UMirTextBlock* txtFixGuildInfo; // 0x300
	UMM_Common_Btn_Symbol* btnGuildInfo; // 0x308
	UMirImage* imgGuildMarkBack; // 0x310
	UMirImage* imgGuildMark; // 0x318
	UMirTextBlock* txtGuildName; // 0x320
	UMirButton* btnChargeTicket; // 0x328
	UMirTextBlock* txtChargeBtn; // 0x330
	UMM_Common_ToolTipBtn* BtnTooltip; // 0x338
	UGridPanel* grdDungeonShop; // 0x340
	UMirButton* m_pBtnDungeonShop; // 0x348
};

struct UMM_B_FT_Exchange {
	UMM_Common_Btn_Symbol* m_pBtnRefresh; // 0x2e0
	UMM_Common_Btn* m_pBtnSmelting; // 0x2e8
	UMM_Common_Btn* m_pBtnExchange; // 0x2f0
	UMirTextBlock* m_pTxtTitle; // 0x2f8
	UMirTextBlock* m_pTxtBlackIronExchangePerValue; // 0x300
	UMirTextBlock* m_pTxtRefreshWemixWallet; // 0x308
	UMirTextBlock* m_pTxtMyDarco; // 0x310
	UMirTextBlock* m_pTxtMyDarcoValue; // 0x318
	UMirTextBlock* m_pTxtBlackIronExchangePer; // 0x320
	UMirTextBlock* m_pTxtDarcoSmelt; // 0x328
	UMirTextBlock* m_pTxtDarcoExchange; // 0x330
	UMirTextBlock* m_pTxtFromBlackIronValue; // 0x338
	UMirTextBlock* m_pTxtToBlackIronValue; // 0x340
	UMirTextBlock* m_pTxtDesc; // 0x348
	UMirTextBlock* m_pTxtDailyExchangeCount; // 0x350
	UScaleBox* m_pScaleBoxNotice; // 0x358
	UMirRichTextBlock* m_pRichTxtNotice; // 0x360
};

struct UMM_PhotoModeWidget {
	AMM_PhotoModeCharacter* m_pPhotoModeCharacter; // 0x2e0
	UPhotoModeData* m_pPhotoModeData; // 0x2e8
	UUserWidget* m_pPopup_ScreenShotOption; // 0x2f0
	TMap<EPhotoModeOptionType, FPhotoMode_Option> m_mapOption; // 0x3b0
};

struct UMM_B_Wanted {
	UMM_CommonVerticalTabSet* m_Tab_Vertical; // 0x2e0
	UMirButton* m_Btn_CombatPoint_Menu; // 0x2e8
	UMirImage* m_Img_CombatPoint_Menu_Arrow; // 0x2f0
	UMirButton* m_Btn_Reward_Menu; // 0x2f8
	UMirImage* m_Img_Reward_Menu_Arrow; // 0x300
	UMirButton* m_Btn_Chase_Menu; // 0x308
	UMirImage* m_Img_Chase_Menu_Arrow; // 0x310
	UMirListView* m_ListView_WantedList; // 0x318
	UMM_Common_Board_Notice* m_Empty_Notice; // 0x320
	UMM_Common_Btn_Symbol* m_pBtnInfo; // 0x328
	TArray<UWantedSlotObj*> m_arWantedSlotObj; // 0x348
};

struct UTextureLODSettings {
	TArray<FTextureLODGroup> TextureLODGroups; // 0x28
};

struct UOnlineSubsystemExtendedFacebookWidget {
	UOnlineSubsystemExtendedFacebookWebBrowser* WebBrowser; // 0x240
	UButton* m_Btn_Close; // 0x268
};

struct UMM_PopupKeypad {
	UMM_Common_Btn* btn_back; // 0x2e0
	UMirTextBlock* txt_number; // 0x2e8
	UMM_Common_Btn_Symbol* btn_close; // 0x2f0
	UMM_Common_Btn* Btn_Cancel; // 0x2f8
	UMM_Common_Btn* btn_confirm; // 0x300
	UMirButton* lst_btn_number[0xa]; // 0x308
	UMirButton* btn_reset; // 0x358
	UMirButton* btn_remove; // 0x360
	UMirButton* btn_max; // 0x368
	UMirButton* btn_11; // 0x370
	UMirButton* btn_51; // 0x378
	UMirButton* btn_101; // 0x380
};

struct UMM_UserEvent_Siege {
	UMirTextBlock* m_Txt_Name; // 0x2f0
	UMirTextBlock* m_Txt_EndTimeName; // 0x2f8
	UMirTextBlock* m_Txt_EndTime; // 0x300
	UMirImage* m_Img_Thumb; // 0x308
	UMM_UserEvent_WebBanner* m_WebBanner; // 0x310
	UCanvasPanel* m_Can_KeyPad; // 0x318
	UMirImage* m_Img_CostItemIcon; // 0x320
	UMirTextBlock* m_Txt_ItemName; // 0x328
	UMirTextBlock* m_Txt_ItemCount; // 0x330
	UMM_Item_Make_Slider* m_ItemMakeSlider; // 0x338
	UOverlay* m_Overlay_Result; // 0x340
	UMirTextBlock* m_Txt_Result; // 0x348
	UMirTextBlock* m_Txt_Remain_Cheer_Count; // 0x350
	UMirTextBlock* m_Txt_CheerMessage; // 0x358
	UMirButton* m_Btn_SiegeInfo; // 0x360
	UMM_UserEvent_SiegeSlot* m_SiegeSlot_Home; // 0x368
	UMM_UserEvent_SiegeSlot* m_SiegeSlot_Away; // 0x370
	UMirImage* m_Img_Home_Win; // 0x378
	UMirImage* m_Img_Away_Win; // 0x380
};

struct UEdGraph {
	UEdGraphSchema* Schema; // 0x28
	TArray<UEdGraphNode*> Nodes; // 0x30
	char bEditable : 1; // 0x40
	char bAllowDeletion : 1; // 0x40
	char bAllowRenaming : 1; // 0x40
};

struct URichTextBox {
	FText Text; // 0x108
	DelegateProperty TextDelegate; // 0x120
	FLinearColor Color; // 0x130
	FSlateFontInfo Font; // 0x140
	FVector2D ShadowOffset; // 0x190
	FLinearColor ShadowColorAndOpacity; // 0x198
	float MinDesiredWidth; // 0x1a8
	ETextJustify Justification; // 0x1ac
	FMargin Margin; // 0x1b0
	float LineHeightPercentage; // 0x1c0
	bool AutoWrapText; // 0x1c4
	float WrapTextAt; // 0x1c8
	ETextWrappingPolicy WrappingPolicy; // 0x1cc
	TArray<URichTextBoxDecorator*> Decorators; // 0x1d0
};

struct UMaterialExpressionConstant4Vector {
	FLinearColor Constant; // 0x40
};

struct ASpawnObjectInfoExporter {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct AStageSectorDataActor {
	int32_t m_SectorID; // 0x218
	int32_t m_Range; // 0x21c
	int32_t m_Segments; // 0x220
	float m_Tickness; // 0x224
	float m_EditScaleRatio; // 0x228
};

struct UBrainComponent {
	UBlackboardComponent* BlackboardComp; // 0xb8
	AAIController* AIOwner; // 0xc0
};

struct UEditableMesh {
	TArray<UEditableMeshAdapter*> Adapters; // 0x3b8
	int32_t TextureCoordinateCount; // 0x3d0
	int32_t PendingCompactCounter; // 0x51c
	int32_t SubdivisionCount; // 0x520
};

struct ULandscapeWeightmapUsage {
	ULandscapeComponent* ChannelUsage[0x4]; // 0x28
	FGuid LayerGuid; // 0x48
};

struct UMaterialExpressionLandscapeVisibilityMask {
	FGuid ExpressionGUID; // 0x40
};

struct UMM_Popup_ServerVisit_GuildAlly {
	UMirTextBlock* m_Txt_GuildAlly_Title; // 0x2e0
	UMirScrollBox* m_ScrollBox_GuildList; // 0x2e8
	UMirScrollBox* m_ScrollBox_AllyGuildList; // 0x2f0
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f8
	UMM_Common_Btn_Symbol* m_Btn_Refresh_List; // 0x300
};

struct UMM_PlayerModelingAnimInstance {
	int32_t MainState; // 0x268
	int32_t SubState; // 0x26c
	float Stiffness01; // 0x270
	float Stiffness02; // 0x274
	float Stiffness03; // 0x278
	float Stiffness04; // 0x27c
	float Stiffness05; // 0x280
	float Damping01; // 0x284
	float Damping02; // 0x288
	float Damping03; // 0x28c
	float Damping04; // 0x290
	float Damping05; // 0x294
	APlayerModelingActor* PlayerModeling; // 0x298
};

struct UMM_Popup_StageOccupation {
	UWidgetAnimation* m_AniStart; // 0x2e0
	UMirTextBlock* m_Txt_StageName; // 0x2e8
	URichTextBox* m_Txt_OuucpationInfo; // 0x2f0
	UOverlay* m_Can_Stage_MSG; // 0x2f8
	UMirTextBlock* m_Txt_Stage_MSG; // 0x300
};

struct ASceneCapturePawn {
	UPawnMovementComponent* MovementComponent; // 0x278
	USphereComponent* CollisionComponent; // 0x280
	UStaticMeshComponent* MeshComponent; // 0x288
	UCameraComponent* CameraComponent; // 0x290
	FVector CameraLocation; // 0x298
	float CameraPrich; // 0x2a4
	float CameraFov; // 0x2a8
	float Sensitivity; // 0x2ac
};

struct UInterpTrackParticleReplay {
	TArray<FParticleReplayTrackKey> TrackKeys; // 0x70
};

struct UInterpTrackInstLinearColorProp {
	FLinearColor ResetColor; // 0x40
};

struct UMM_MoviePlayerWidget {
	UMediaPlayer* m_MediaPlayer; // 0x2e0
	UMediaSource* m_MediaSource; // 0x2e8
	AMediaSoundActor* m_pMediaSoundActor; // 0x2f0
	FScriptMulticastDelegate OnMovieFinish; // 0x318
	FScriptMulticastDelegate OnMovieClose; // 0x328
};

struct UForceFeedbackComponent {
	UForceFeedbackEffect* ForceFeedbackEffect; // 0x220
	char bAutoDestroy : 1; // 0x228
	char bStopWhenOwnerDestroyed : 1; // 0x228
	char bLooping : 1; // 0x228
	char bIgnoreTimeDilation : 1; // 0x228
	char bOverrideAttenuation : 1; // 0x228
	float IntensityMultiplier; // 0x22c
	UForceFeedbackAttenuation* AttenuationSettings; // 0x230
	FForceFeedbackAttenuationSettings AttenuationOverrides; // 0x238
	FScriptMulticastDelegate OnForceFeedbackFinished; // 0x2e8
};

struct UNormalPopupWidget {
	ESlateVisibility OneButton_Visibility; // 0x2f8
	ESlateVisibility TwoButton_Visibility; // 0x310
	ESlateVisibility ThreeButton_Visibility; // 0x338
};

struct UReadLeaderboard {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMirRichTextBlock {
	int32_t m_ResaveColorID; // 0x678
	FTextBlockStyle m_MyDefaultStyle; // 0x680
	bool m_bDefaultShadow; // 0x8e8
	bool m_bUseAdjustFontSize; // 0x8e9
	EStringTableType m_StringTableType; // 0x8ea
	int32_t m_StringTableID; // 0x8ec
};

struct UBossAppearNotiWidget {
	UWidgetAnimation* m_AniAppear; // 0x2e0
};

struct UMM_CharacterFollowingComponent {
	int32_t SkipTooSmallSegmentRecursiveCount; // 0x258
};

struct UMaterialExpressionBumpOffset {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Height; // 0x54
	FExpressionInput HeightRatioInput; // 0x68
	float HeightRatio; // 0x7c
	float ReferencePlane; // 0x80
	uint32_t ConstCoordinate; // 0x84
};

struct URequestNewReadPermissions {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_B_CenserResult {
	UMM_SynthesisResult_Slot* m_CardSlot; // 0x2e0
	UMM_Common_Btn* m_C_Btn_CenserOpen; // 0x2e8
	UMM_Common_Btn* m_C_Btn_Close; // 0x2f0
	UWidgetAnimation* m_pStartAni; // 0x2f8
	UWidgetAnimation* m_pEndAni; // 0x300
	UWidgetAnimation* m_pCardOpenAni; // 0x308
};

struct UMM_CommonHorizontalTabSet {
	int32_t m_iFontSize; // 0x2f0
	int32_t m_iBtnMaxCount; // 0x2f4
	bool m_bUseFillBtn; // 0x2f8
	UPanelWidget* m_Hrz_Main; // 0x318
	TArray<UMM_CommonHorizontalTabBtn*> m_arTab; // 0x320
};

struct UMM_Guild_Dev_Slot_SkillUse {
	UMirImage* mImgSkillIcon; // 0x2e0
	UMirImage* mImgDisableIcon; // 0x2e8
	UMirTextBlock* mTxtSkillName; // 0x2f0
	UMirButton* mBtnDevSlot; // 0x2f8
	UGridPanel* mRecommandPanel; // 0x300
	UImage* mOnGoingImg; // 0x308
	UImage* mReadyImg; // 0x310
	UMirTextBlock* mTxtRemainTime; // 0x318
	UPanelWidget* mPanelEffectStart; // 0x320
	UPanelWidget* mPanelEffectGoing; // 0x328
	UEffectWidgetBase* mDevSkillEffectStart; // 0x330
	UEffectWidgetBase* mDevSkillEffectGoing; // 0x338
};

struct UMM_GuildPeruse {
	UMM_Common_Btn_Symbol* btn_sort; // 0x2f0
	UMirScrollBox* sb_list; // 0x2f8
	UMM_Common_Btn_Symbol* btn_prev; // 0x300
	UMM_Common_Btn_Symbol* btn_next; // 0x308
	UMirTextBlock* txt_page; // 0x310
	UMirTextBlock* txt_sort_filter; // 0x318
	UMM_Common_Btn_Symbol* btn_search; // 0x320
	UMM_Common_Board_Notice* bn_empty; // 0x328
	UMirCanvasPanel* cp_select_type; // 0x330
	UMirCheckBox* cb_all; // 0x338
	UMirCheckBox* cb_recommend; // 0x340
	UMirCheckBox* cb_request; // 0x348
	UMirCheckBox* cb_invited; // 0x350
	UMirTextBlock* txt_all; // 0x358
	UMirTextBlock* txt_recommend; // 0x360
	UMirTextBlock* txt_request; // 0x368
	UMirTextBlock* txt_invited; // 0x370
	UMirCanvasPanel* cp_sort; // 0x378
	UMirButton* btn_sort_rank; // 0x380
	UMirButton* btn_sort_level; // 0x388
	UMirButton* btn_sort_combat_power; // 0x390
	UMirImage* img_sort_rank; // 0x398
	UMirImage* img_sort_level; // 0x3a0
	UMirImage* img_sort_combat_power; // 0x3a8
	UMirButton* btn_sort_bg; // 0x3b0
};

struct UMM_PopupCharacterSearchEdit {
	UMirTextBlock* m_pTxtTitle; // 0x2e0
	UMirEditableText* edit_txt_search; // 0x2e8
	UMM_Common_Btn* Btn_Cancel; // 0x2f0
	UMM_Common_Btn* btn_search; // 0x2f8
	UMM_Common_Btn_Symbol* btn_close; // 0x300
};

struct UMM_UserEvent_Attendance_Day {
	UMirTextBlock* m_Txt_Name; // 0x2f0
	UMirImage* m_Img_Thumb; // 0x2f8
	UMM_UserEvent_WebBanner* m_WebBanner; // 0x300
	UMM_UserEvent_Attendance_Day_Slot* m_DaySlot[0x7]; // 0x308
};

struct UFootStepSoundNotify {
	EFootStepSoundType FootStepSoundType; // 0x38
};

struct UButtonWidgetStyle {
	FButtonStyle ButtonStyle; // 0x30
};

struct UMM_Common_Btn {
	EStringTableType m_StringTableType; // 0x350
	int32_t m_StringTableID; // 0x354
	FText m_Text; // 0x358
	bool m_bEnableSubText; // 0x370
	FSlateFontInfo m_Font; // 0x378
	UMirTextBlock* m_TxtMain; // 0x3d0
	UMirTextBlock* m_TxtSub; // 0x3d8
	UMirRichTextBlock* m_RichTxtMain; // 0x3e0
	UPanelWidget* m_EffectPanel; // 0x3e8
	UMirImage* m_Img_Glow; // 0x3f0
};

struct UPopup_DungeonTime {
	UMirTextBlock* txtTitle; // 0x2e0
	TArray<UMirTextBlock*> arTxtTimes; // 0x2e8
	UMirTextBlock* txtExplain; // 0x2f8
	UMM_Common_Btn_Symbol* btnClose; // 0x300
};

struct UParticleModuleVectorFieldScale {
	UDistributionFloat* VectorFieldScale; // 0x30
	FRawDistributionFloat VectorFieldScaleRaw; // 0x38
};

struct UPopup_WorldBoss_Reward {
	UMirCanvasPanel* canVitory; // 0x2e0
	UPanelWidget* panVitory; // 0x2e8
	UMirImage* imgBossVictory; // 0x2f0
	UVerticalBox* vtcVitory; // 0x2f8
	UVerticalBox* vtcVictoryTitle; // 0x300
	UMirTextBlock* txtVictoryTitle; // 0x308
	UMirTextBlock* txtVictorySubTitle; // 0x310
	UMirTextBlock* txtFixResult; // 0x318
	UHorizontalBox* hrzRank; // 0x320
	UMirRichTextBlock* rtxtRank; // 0x328
	UMirRichTextBlock* rtxtLastHit; // 0x330
	UMirCanvasPanel* canFailMain; // 0x338
	UMirCanvasPanel* canFail; // 0x340
	UMirImage* imgBossFail; // 0x348
	UVerticalBox* vtcFailTitle; // 0x350
	UMirTextBlock* txtFailTitle; // 0x358
	UMirTextBlock* txtFailSubTitle; // 0x360
	UMirTextBlock* txtFailFixReward; // 0x368
	UMirTextBlock* txtLeftTime; // 0x370
	UMirTextBlock* txtLeftTimeExplain; // 0x378
	UMirTextBlock* txtFailLeftTime; // 0x380
	UMirTextBlock* txtFailLeftTimeExplain; // 0x388
	UMirCanvasPanel* canContents; // 0x390
	UPopup_DungeonReward_Info1* wgtVitoryContent; // 0x398
	UPopup_DungeonReward_Info2* wgtPartyContent; // 0x3a0
	UPopup_WorldBossFailRewardInfo* wgtFailContent; // 0x3a8
	UMirCanvasPanel* canBtn; // 0x3b0
	UMM_Common_Btn* btnContributeRank; // 0x3b8
	UMM_Common_Btn* btnConfirm; // 0x3c0
	UMirCanvasPanel* canFailBtn; // 0x3c8
	UMM_Common_Btn* btnFailConfirm; // 0x3d0
	UWidgetAnimation* m_pAni_Win; // 0x3f0
	UWidgetAnimation* m_pAni_Defeat; // 0x3f8
};

struct UMM_PetSlot {
	float m_fOpacity_Disabled; // 0x2f0
	UMirImage* m_Img_TierBg; // 0x300
	UMirImage* m_Img_TierEffect; // 0x308
	UMirImage* m_Img_SlotType; // 0x310
	UMirImage* m_Img_Icon; // 0x318
	UMirImage* m_Img_Equipped; // 0x320
	UMirImage* m_Img_DeckEquipped; // 0x328
	UMirImage* m_Img_Leader; // 0x330
	UMirImage* m_Img_Disabled; // 0x338
	UMirTextBlock* m_Txt_NeedCount; // 0x340
	UMirImage* m_Img_Selected; // 0x348
	UMirImage* m_Img_Locked_Center; // 0x350
	UMirImage* m_Img_Locked_RightTop; // 0x358
	UMirImage* m_Img_Indicator; // 0x360
	UMirImage* m_Img_Grade; // 0x368
	UPanelWidget* m_Can_EquipAbleEffect; // 0x370
	UMirButton* m_Btn_Main; // 0x378
	UWidgetAnimation* m_AniEquipAbleEffect; // 0x380
};

struct UParticleModuleSizeScale {
	FRawDistributionVector SizeScale; // 0x30
	char EnableX : 1; // 0x78
	char EnableY : 1; // 0x78
	char EnableZ : 1; // 0x78
};

struct UMM_Ranking_Reward_Item {
	UCanvasPanel* m_pCanPanelItem; // 0x2e0
	UCanvasPanel* m_pCanPanelStatus; // 0x2e8
	UMirImage* m_pImgItem; // 0x2f0
	UMirImage* m_pImgStatus; // 0x2f8
};

struct UMaterialExpressionVertexNormalWS {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct AHeroInfoCamera {
	APlayerModelingActor* DisplayActor; // 0x238
	int32_t WheelCameraType; // 0x240
	AUIBackGroundActor* UIBackGroundActor; // 0x248
	TMap<int32_t, TWeakObjectPtr<UParticleSystemComponent>> m_LoopEffects; // 0x250
	TArray<TWeakObjectPtr<UParticleSystemComponent>> m_OneShotEffectList; // 0x2a0
	float CurrentCharacterAngle; // 0x2b0
	float TargetCharacterAngle; // 0x2b4
	int32_t CameraType; // 0x2b8
};

struct UMaterialExpressionStaticSwitchParameter {
	FExpressionInput A; // 0x60
	FExpressionInput B; // 0x74
};

struct UMaterialExpressionPerInstanceFadeAmount {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_Dominion_TaxList {
	UMirImage* Img_Title; // 0x2e0
	UMirTextBlock* Txt_Title; // 0x2e8
	UMM_Dominion_TaxGroup* Dominion_TaxGroup_Income; // 0x2f0
	UMM_Dominion_TaxGroup* Dominion_TaxGroup_Expense; // 0x2f8
	UMM_Dominion_TaxSlot* Dominion_Tax_Balance; // 0x300
};

struct UMM_Popup_NewAccount {
	float m_fActionDelayForAnimation; // 0x2f0
	UPanelWidget* m_Overlay_GoogleLogin; // 0x300
	UPanelWidget* m_Overlay_AppleLogin; // 0x308
	UPanelWidget* m_Overlay_FacebookLogin; // 0x310
	UPanelWidget* m_Overlay_SteamLogin; // 0x318
	UPanelWidget* m_Overlay_GuestLogin; // 0x320
	UPanelWidget* m_Overlay_GuestContinue; // 0x328
	UMirButton* m_Btn_GoogleLogin; // 0x330
	UMirButton* m_Btn_AppleLogin; // 0x338
	UMirButton* m_Btn_FacebookLogin; // 0x340
	UMirButton* m_Btn_SteamLogin; // 0x348
	UMirButton* m_Btn_GuestLogin; // 0x350
	UMirButton* m_Btn_GuestContinue; // 0x358
	UPanelWidget* m_Grid_Effect_GoogleLogin; // 0x360
	UPanelWidget* m_Grid_Effect_AppleLogin; // 0x368
	UPanelWidget* m_Grid_Effect_FaceBookLogin; // 0x370
	UPanelWidget* m_Grid_Effect_SteamLogin; // 0x378
	UPanelWidget* m_Grid_Effect_GuestLogin; // 0x380
	UPanelWidget* m_Grid_Effect_GuestContinue; // 0x388
	UWidgetAnimation* m_Ani_Click_Google; // 0x390
	UWidgetAnimation* m_Ani_Click_Apple; // 0x398
	UWidgetAnimation* m_Ani_Click_FaceBook; // 0x3a0
	UWidgetAnimation* m_Ani_Click_Steam; // 0x3a8
	UWidgetAnimation* m_Ani_Click_GuestLogin; // 0x3b0
	UWidgetAnimation* m_Ani_Click_GuestContinue; // 0x3b8
	UMirTextBlock* m_Txt_Title; // 0x3c0
	UMirTextBlock* m_Txt_Msg; // 0x3c8
	UMirRichTextBlock* m_RTxt_Msg; // 0x3d0
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x3d8
};

struct USoundConcurrency {
	FSoundConcurrencySettings Concurrency; // 0x28
};

struct UGhostTrailActorData {
	float LifeTime; // 0x30
	float IntervalTime; // 0x34
	UMaterialInstance* GhostMaterialInstance; // 0x38
	TArray<FGhostTrailMaterialParameterData> MeshParameterList; // 0x40
	TArray<FGhostTrailParticleData> LoopParticleList; // 0x50
	TArray<FGhostTrailParticleData> EndParticleList; // 0x60
};

struct UDataAsset {
	UDataAsset* NativeClass; // 0x28
};

struct UMM_HudSkillDeck {
	UCanvasPanel* m_pDeckPanel; // 0x2f0
	TArray<UMM_Btn_HudSkill*> m_pHudBtnSkill; // 0x2f8
	UWidgetAnimation* m_pAniChangeDeck; // 0x308
	float m_fChangeDeckButtonEffectTime; // 0x310
};

struct UMM_Popup_UIShopGuildGift {
	UMirTextBlock* mTxtTitle; // 0x2e0
	UMirTextBlock* mTxtDesc; // 0x2e8
	UMM_Common_Btn_Symbol* mBtnClose; // 0x2f0
	UMM_Common_Btn* mBtnComfirm; // 0x2f8
};

struct UMM_UserEvent_WebBrowser {
	UMirWebBrowser* m_Web_Main; // 0x2e0
};

struct URecastFilter_UseDefaultArea {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct UMaterialExpressionTemporalSobol {
	FExpressionInput Index; // 0x40
	FExpressionInput Seed; // 0x54
	uint32_t ConstIndex; // 0x68
	FVector2D ConstSeed; // 0x6c
};

struct UMM_HudBtnMenu {
	TArray<FBrushObject> m_arrBrushMenuIcon; // 0x2f0
	int32_t m_iMenuNameFontSize; // 0x300
	UWidgetAnimation* m_AniPress; // 0x308
	int32_t m_iEffectID_Touched; // 0x310
	int32_t m_iEffectID_ContentsOpen; // 0x314
	int32_t m_iBackgroundEffectID; // 0x318
	bool m_bBlockTutorial; // 0x31c
	bool m_bUseIndicatorCount; // 0x31d
	UImage* m_pImgMenuIcon; // 0x320
	UMirButton* m_pBtnMenu; // 0x328
	UPanelWidget* m_pGridIndicator; // 0x330
	UImage* m_Img_Indicator; // 0x338
	UMirTextBlock* m_Txt_Indicator; // 0x340
	UPanelWidget* m_pGridEffect; // 0x348
	UEffectWidgetBase* m_pContentsOpenEffect; // 0x350
	UPanelWidget* m_BGEffectPanel; // 0x358
	UEffectWidgetBase* m_pBGEffect; // 0x360
	UTextBlock* m_pTextBlockMenuName; // 0x368
};

struct ULocalizedOverlays {
	UBasicOverlays* DefaultOverlays; // 0x28
	TMap<FString, UBasicOverlays*> LocaleToOverlaysMap; // 0x30
};

struct UMenuAnchor {
	UUserWidget* MenuClass; // 0x120
	DelegateProperty OnGetMenuContentEvent; // 0x128
	EMenuPlacement Placement; // 0x138
	bool bFitInWindow; // 0x139
	bool ShouldDeferPaintingAfterWindowContent; // 0x13a
	bool UseApplicationMenuStack; // 0x13b
	FScriptMulticastDelegate OnMenuOpenChanged; // 0x140
};

struct UMM_PassiveSkillInfos {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UMirRichTextBlock* m_Txt_Desc; // 0x2e8
	UMirTextBlock* m_Txt_IncreasePowerValue; // 0x2f0
	UMM_Common_ComparePoint* m_ComparePoint; // 0x2f8
};

struct UARTrackedPose {
	FGuid UniqueId; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int32_t LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct UInterpTrackSlomo {
	FInterpCurveFloat FloatTrack; // 0x70
	float CurveTension; // 0x88
};

struct UMaterialExpressionScalarParameter {
	float DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x5c
	char PrimitiveDataIndex; // 0x5d
};

struct UMM_Popup_Occupation_Rank_Board {
	UWidgetAnimation* m_AniStart; // 0x300
	UWidgetAnimation* m_AniEnd; // 0x308
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x310
	UMM_Slot_Occupation_Ranking* m_rankingBoard_Defense; // 0x318
	UMM_Slot_Occupation_Ranking* m_rankingBoard_Offense; // 0x320
	UMirImage* m_img_Defense_Symbol_BGFrame; // 0x328
	UMirImage* m_img_Defense_Symbol; // 0x330
	UMirTextBlock* m_txt_Defense; // 0x338
	UMirTextBlock* m_txt_Defense_Guild_Name; // 0x340
	UMirImage* m_img_Offense_Symbol_BGFrame; // 0x348
	UMirImage* m_img_Offense_Symbol; // 0x350
	UMirTextBlock* m_txt_Offense; // 0x358
	UMirTextBlock* m_txt_Offense_Guild_Name; // 0x360
	UMirTextBlock* m_txt_Remain_Time; // 0x368
	UMirTextBlock* m_txt_Remain_Time_Value; // 0x370
	UMM_Common_Board_Notice* m_Rank_List_Empty_Notice; // 0x378
	UMirTextBlock* m_txt_Rank_Update; // 0x380
	UMM_Common_Btn_Symbol* m_btn_Rank_Update; // 0x388
};

struct ASceneCaptureLevelScriptActor {
	EClassType CurrentClassType; // 0x220
	EContentsSceneType CurrentContentsSceneType; // 0x221
	int32_t CurrentCameraType; // 0x224
	FVector StartPoint; // 0x228
	FVector BackGroundUILocation; // 0x234
	AActor* SpawnedActor; // 0x240
	AUIBackGroundActor* BackGroundActor; // 0x248
};

struct USoundClass {
	FSoundClassProperties Properties; // 0x28
	TArray<USoundClass*> ChildClasses; // 0x58
	TArray<FPassiveSoundMixModifier> PassiveSoundMixModifiers; // 0x68
	FSoundModulation Modulation; // 0x78
	USoundClass* ParentClass; // 0x88
};

struct UFirebaseMessageInitlize {
	FScriptMulticastDelegate OnMessageRcv; // 0x30
	FScriptMulticastDelegate OnTokenRcv; // 0x40
};

struct UMaterialExpressionParticleRelativeTime {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMiniGameData {
	float m_fSpawnActorLocZ; // 0x30
	float m_fSpawnActorLocZ_Factor; // 0x34
	float m_fCameraWidth; // 0x38
	float m_fChangeDirectionBorder; // 0x3c
	float m_fStartMoveBorder; // 0x40
	float m_fMaxWaveCount; // 0x44
	float m_fMaxKillPoint; // 0x48
	float m_fNextWaveMaveSpeed; // 0x4c
	float m_nShowNoticeTime; // 0x50
	int32_t m_nBestScoreMsg; // 0x54
	int32_t m_nNowScoreMsg; // 0x58
	int32_t m_nWaveStartMsg; // 0x5c
	int32_t m_nNextWaveMsg; // 0x60
	int32_t m_nFailMsg; // 0x64
	int32_t m_nRestartMsg; // 0x68
	float m_fMonsterGenPosition_R; // 0x6c
	float m_fMonsterGenPosition_L; // 0x70
	float m_fScrollSpeed_Back; // 0x74
	float m_fScrollSpeed_Front; // 0x78
	float m_fBackgroundImageSize; // 0x7c
	float m_fStartSeqCharacterPosition; // 0x80
	float m_fStartSeqMonsterPosition; // 0x84
	float m_fStartSeqCameraPosition1; // 0x88
	float m_fStartSeqCameraPosition2; // 0x8c
	float m_fStartSeqCameraMoveTime1; // 0x90
	float m_fStartSeqCameraMoveTime2; // 0x94
	float m_fStartSeqCameraWaitingTime; // 0x98
	float m_fPlayerHalfSize; // 0x9c
	float m_fPlayerMapEndSize; // 0xa0
	float m_fCharacterHp; // 0xa4
	float m_fCharacterHpRecovery; // 0xa8
	float m_fPlayerSpeed; // 0xac
	float m_fPlayerAvoidSpeed; // 0xb0
	float m_fCharacterDodgeCollTime; // 0xb4
	float m_fCharacterAttackComboDelay; // 0xb8
	float m_fCharacterAttack1; // 0xbc
	float m_fCharacterAttack1Range; // 0xc0
	float m_fCharacterAttack1Timing; // 0xc4
	float m_fCharacterAttack1MoveRange; // 0xc8
	float m_fCharacterAttack1MoveStartTime; // 0xcc
	float m_fCharacterAttack1MoveEndTime; // 0xd0
	float m_fCharacterAttack2; // 0xd4
	float m_fCharacterAttack2Range; // 0xd8
	float m_fCharacterAttack2Timing; // 0xdc
	float m_fCharacterAttack2MoveRange; // 0xe0
	float m_fCharacterAttack2MoveStartTime; // 0xe4
	float m_fCharacterAttack2MoveEndTime; // 0xe8
	float m_fCharacterAttack3; // 0xec
	float m_fCharacterAttack3Range; // 0xf0
	float m_fCharacterAttack3Timing; // 0xf4
	float m_fCharacterAttack3MoveRange; // 0xf8
	float m_fCharacterAttack3MoveStartTime; // 0xfc
	float m_fCharacterAttack3MoveEndTime; // 0x100
	float m_fCharacterSternHpRate; // 0x104
	float m_fCharacterSternTime; // 0x108
	float m_fCharacterHitRate; // 0x10c
	float m_fMonsterGenCount_Same; // 0x110
	float m_fMonsterGenCount_Max; // 0x114
	float m_fMonsterGenCount_Increase; // 0x118
	float m_fMonsterGenTime_Max; // 0x11c
	float m_fMonsterGenTime_Decrease; // 0x120
	float m_fMonsterGenTime_Min; // 0x124
	int32_t m_fAdvMonster_Gen; // 0x128
	int32_t m_fBossMonster_Gen; // 0x12c
	float m_fNorMonsterHalfSize; // 0x130
	float m_fAdvMonsterHalfSize; // 0x134
	float m_fBossMonsterHalfSize; // 0x138
	float m_fNorMonsterHP; // 0x13c
	float m_fAdvMonsterHP; // 0x140
	float m_fBossMonsterHP; // 0x144
	float m_fNorMonsterHPRecovery; // 0x148
	float m_fAdvMonsterHPRecovery; // 0x14c
	float m_fBossMonsterHPRecovery; // 0x150
	float m_fNorMonsterMoveSpeed; // 0x154
	float m_fAdvMonsterMoveSpeed; // 0x158
	float m_fBossMonsterMoveSpeed; // 0x15c
	float m_fNorMonsterAttackTime1; // 0x160
	float m_fAdvMonsterAttackTime1; // 0x164
	float m_fBossMonsterAttackTime1; // 0x168
	float m_fNorMonsterAttack1; // 0x16c
	float m_fAdvMonsterAttack1; // 0x170
	float m_fBossMonsterAttack1; // 0x174
	float m_fNorMonsterAttackIncrease1; // 0x178
	float m_fAdvMonsterAttackIncrease1; // 0x17c
	float m_fBossMonsterAttackIncrease1; // 0x180
	float m_fNorMonsterAttackRange1; // 0x184
	float m_fAdvMonsterAttackRange1; // 0x188
	float m_fBossMonsterAttackRange1; // 0x18c
	float m_fNorMonsterAttack2; // 0x190
	float m_fAdvMonsterAttack2; // 0x194
	float m_fBossMonsterAttack2; // 0x198
	float m_fNorMonsterAttackIncrease2; // 0x19c
	float m_fAdvMonsterAttackIncrease2; // 0x1a0
	float m_fBossMonsterAttackIncrease2; // 0x1a4
	float m_fNorMonsterAttackRange2; // 0x1a8
	float m_fAdvMonsterAttackRange2; // 0x1ac
	float m_fBossMonsterAttackRange2; // 0x1b0
	float m_fNorMonsterAttack3; // 0x1b4
	float m_fAdvMonsterAttack3; // 0x1b8
	float m_fBossMonsterAttack3; // 0x1bc
	float m_fNorMonsterAttackIncrease3; // 0x1c0
	float m_fAdvMonsterAttackIncrease3; // 0x1c4
	float m_fBossMonsterAttackIncrease3; // 0x1c8
	float m_fNorMonsterAttackRange3; // 0x1cc
	float m_fAdvMonsterAttackRange3; // 0x1d0
	float m_fBossMonsterAttackRange3; // 0x1d4
	float m_fNorMonsterAttackSpeed; // 0x1d8
	float m_fAdvMonsterAttackSpeed; // 0x1dc
	float m_fBossMonsterAttackSpeed; // 0x1e0
	float m_fNorMonsterHitTime; // 0x1e4
	float m_fAdvMonsterHitTime; // 0x1e8
	float m_fBossMonsterHitTime; // 0x1ec
	float m_fNorMonsterNuckBackDis; // 0x1f0
	float m_fAdvMonsterNuckBackDis; // 0x1f4
	float m_fBossMonsterNuckBackDis; // 0x1f8
	float m_fNorMonsterNuckBackTime; // 0x1fc
	float m_fAdvMonsterNuckBackTime; // 0x200
	float m_fBossMonsterNuckBackTime; // 0x204
	float m_fNorMonsterDeathNuckBackDis; // 0x208
	float m_fAdvMonsterDeathNuckBackDis; // 0x20c
	float m_fBossMonsterDeathNuckBackDis; // 0x210
	float m_fNorMonsterDeathNuckBackTime; // 0x214
	float m_fAdvMonsterDeathNuckBackTime; // 0x218
	float m_fBossMonsterDeathNuckBackTime; // 0x21c
	float m_fNorMonsterKillPoint; // 0x220
	float m_fAdvMonsterKillPoint; // 0x224
	float m_fBossMonsterKillPoint; // 0x228
	FLinearColor m_NorMonsterColor; // 0x22c
	FLinearColor m_AdvMonsterColor; // 0x23c
	FLinearColor m_BossMonsterColor; // 0x24c
	FLinearColor m_MonsterHitBlankColor; // 0x25c
	float m_fNorMonsterScale; // 0x26c
	float m_fAdvMonsterScale; // 0x270
	float m_fBossMonsterScale; // 0x274
	float m_fMonsterHitBlankStart; // 0x278
	float m_fMonsterHitBlankEnd; // 0x27c
	float m_fDieMonsterBlankStart_2; // 0x280
	float m_fDieMonsterBlankEnd_2; // 0x284
	float m_fDieMonsterBlankStart_3; // 0x288
	float m_fDieMonsterBlankEnd_3; // 0x28c
	FVector m_vEffectScale_PlayerAtk1; // 0x290
	FVector m_vEffectLoc_PlayerAtk1; // 0x29c
	float m_fEffectDelay_PlayerAtk1; // 0x2a8
	FVector m_vEffectScale_PlayerAtk2; // 0x2ac
	FVector m_vEffectLoc_PlayerAtk2; // 0x2b8
	float m_fEffectDelay_PlayerAtk2; // 0x2c4
	FVector m_vEffectScale_PlayerAtk3; // 0x2c8
	FVector m_vEffectLoc_PlayerAtk3; // 0x2d4
	float m_fEffectDelay_PlayerAtk3; // 0x2e0
	FVector m_vEffectScale_PlayerHit; // 0x2e4
	FVector m_vEffectLoc_PlayerHit; // 0x2f0
	float m_fEffectDelay_PlayerHit; // 0x2fc
	FVector m_vEffectScale_MonsterAtk1; // 0x300
	FVector m_vEffectLoc_MonsterAtk1; // 0x30c
	float m_fEffectDelay_MonsterAtk1; // 0x318
	FVector m_vEffectScale_MonsterAtk2; // 0x31c
	FVector m_vEffectLoc_MonsterAtk2; // 0x328
	float m_fEffectDelay_MonsterAtk2; // 0x334
	FVector m_vEffectScale_MonsterHit; // 0x338
	FVector m_vEffectLoc_MonsterHit; // 0x344
	float m_fEffectDelay_MonsterHit; // 0x350
};

struct UMM_AbilityState_Item_Simple {
	UMirTextBlock* Txt_Title; // 0x2f0
	UMirTextBlock* Txt_AfterValue; // 0x2f8
	UMirImage* Img_Option_Grade; // 0x300
	UMirImage* Img_Option_Icon; // 0x308
	int32_t m_OptionIndex; // 0x310
	bool m_IsEqupipped; // 0x314
	bool m_IsRandomOption; // 0x315
};

struct UMM_B_Transcend {
	UMM_Inventory_Transcend* m_InvenForge; // 0x300
	UMirButton* m_Btn_GoToItemMake; // 0x308
	UPanelWidget* Grid_Unselect; // 0x310
	UPanelWidget* Grid_Select; // 0x318
	UPanelWidget* Grid_Material; // 0x320
	UPanelWidget* Panel_Safety; // 0x328
	UMM_Slot_Registered_Circle* Slot_Target; // 0x330
	UMM_Common_Item_NameTag* Tag_Target; // 0x338
	UPanelWidget* Pan_SuccessPrecnet; // 0x340
	UMirTextBlock* Txt_SuccessPercentTitle; // 0x348
	UMirTextBlock* Txt_SuccessPercent; // 0x350
	UMirTextBlock* Txt_Safety; // 0x358
	UMM_AbilityState_Item* Stat_Smelt; // 0x360
	TArray<UMM_AbilityState_Item*> m_Abilities; // 0x368
	UMM_SkillDesc* m_SkillDesc; // 0x378
	UMM_AbilityState_Item* m_Stat_Transcend; // 0x380
	UPanelWidget* m_ScaleBoxSkillDesc; // 0x388
	UMirRichTextBlock* m_Txt_SkillDesc; // 0x390
	UMM_Slot_Material_Item* Slot_Material; // 0x398
	UMM_Slot_Material_Item* Slot_MaterialCost; // 0x3a0
	UMirTextBlock* txt_cost; // 0x3a8
	UImage* img_cost; // 0x3b0
	UMM_Common_Btn_Cost* btn_transcend; // 0x3b8
	UMirTextBlock* Txt_GuideTitle; // 0x3c0
	UMirRichTextBlock* Txt_Guide; // 0x3c8
	UMirRichTextBlock* Txt_Notice; // 0x3d0
	UPanelWidget* Panel_Notice; // 0x3d8
	UPanelWidget* Grid_AllSelectEffect; // 0x3e0
	UPanelWidget* Grid_AuraEffect; // 0x3e8
	UPanelWidget* Grid_AllSelectEffect_Red; // 0x3f0
	UPanelWidget* Grid_AuraEffect_Red; // 0x3f8
	UMirTextBlock* m_Txt_Title; // 0x400
	UMirTextBlock* m_Txt_BeforeValue; // 0x408
	UMirImage* m_Img_Deco_Arrow; // 0x410
	UMirTextBlock* m_Txt_AfterValue; // 0x418
	int32_t SelectItemUID; // 0x420
	UMirTextBlock* m_PetName; // 0x428
	UMM_Pet_Circle_Portrait* m_PetPortrait; // 0x430
};

struct UMM_Slot_Quest_Info {
	int32_t m_MissionRewardToStr; // 0x2e0
	int32_t m_RequestRewardToStr; // 0x2e4
	int32_t m_QuestStageToStr; // 0x2e8
	int32_t m_CombatPointToStr; // 0x2ec
	int32_t m_HideCompleteStageToStr; // 0x2f0
	UMirTextBlock* m_Title; // 0x2f8
	UMirTextBlock* m_Mission; // 0x300
	UMirTextBlock* m_MissionStage; // 0x308
	UMirRichTextBlock* m_CombatPoint; // 0x310
	UMirTextBlock* m_PopupReward; // 0x318
	TArray<UMM_Slot_Material*> m_RewardSlots; // 0x320
	UMM_Common_PartyMember* m_pCommonPartyMember; // 0x330
};

struct ULevelStreamingPersistent {
	UWorld* WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int32_t LevelLODIndex; // 0xb0
	int32_t StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xba
	char bShouldBeLoaded : 1; // 0xba
	char bLocked : 1; // 0xba
	char bIsStatic : 1; // 0xba
	char bShouldBlockOnLoad : 1; // 0xba
	char bShouldBlockOnUnload : 1; // 0xbb
	char bDisableDistanceStreaming : 1; // 0xbb
	char bDrawOnLevelStatusMap : 1; // 0xbb
	FLinearColor LevelColor; // 0xbc
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd0
	float MinTimeBetweenVolumeUnloadRequests; // 0xe0
	FScriptMulticastDelegate OnLevelLoaded; // 0xe8
	FScriptMulticastDelegate OnLevelUnloaded; // 0xf8
	FScriptMulticastDelegate OnLevelShown; // 0x108
	FScriptMulticastDelegate OnLevelHidden; // 0x118
	ULevel* LoadedLevel; // 0x128
	ULevel* PendingUnloadLevel; // 0x130
};

struct UMM_Goods_Tab {
	UMirTextBlock* m_Txt_TabName; // 0x2f8
	UMirImage* m_Img_Locked; // 0x300
	UMirImage* m_Img_Indicator; // 0x308
	UMirImage* m_Img_Selected; // 0x310
	UMirButton* m_Btn_Main; // 0x318
};

struct UGameplayTask {
	FName InstanceName; // 0x30
	ETaskResourceOverlapPolicy ResourceOverlapPolicy; // 0x3a
	UGameplayTask* ChildTask; // 0x60
};

struct UParticleModuleLocationPrimitiveSphere {
	FRawDistributionFloat StartRadius; // 0xb0
};

struct UMaterialExpressionPreviousFrameSwitch {
	FExpressionInput CurrentFrame; // 0x40
	FExpressionInput PreviousFrame; // 0x54
};

struct UMovieSceneSection {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int32_t RowIndex; // 0xa8
	int32_t OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct UMM_Popup_Party_Make {
	int32_t STRING_ID_GUILD_WAR_NOTICE; // 0x2f0
	int32_t STRING_ID_PARTY_MAKE; // 0x2f4
	int32_t STRING_ID_SQUAD_MAKE; // 0x2f8
	int32_t STRING_ID_GUILD_NOTICE; // 0x2fc
	UMirTextBlock* m_Txt_Title; // 0x300
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x308
	UMirTextBlock* m_Txt_ExplainTitle; // 0x310
	UMM_Party_ExplainTextField* m_Party_ExplainTextField; // 0x318
	UMirCanvasPanel* m_Canvas_Squad; // 0x320
	UMirImage* m_Img_Level[0x6]; // 0x328
	UMirTextBlock* m_Txt_DungeonName; // 0x358
	UCheckBox* m_CheckBox_Public; // 0x360
	UCheckBox* m_CheckBox_Private; // 0x368
	UCheckBox* m_CheckBox_Guild; // 0x370
	UCheckBox* m_CheckBox_Member5; // 0x378
	UCheckBox* m_CheckBox_Member15; // 0x380
	UMirImage* m_Img_Lock; // 0x388
	UMirImage* m_Img_Unlock; // 0x390
	UMirTextBlock* m_Txt_Password; // 0x398
	UMirTextBlock* m_Txt_CombatPoint; // 0x3a0
	UMirButton* m_Btn_Password; // 0x3a8
	UMirButton* m_Btn_CombatPoint; // 0x3b0
	UMM_Common_Btn* m_C_Btn_Create; // 0x3b8
	UMirCanvasPanel* m_Can_Option_Member_16; // 0x3c0
};

struct AProjectileCannon {
	USphereComponent* m_pCollSphereComp; // 0x218
	UParticleSystemComponent* m_pShotParticleComp; // 0x220
	UParticleSystemComponent* m_pImpactParticleComp; // 0x228
};

struct UParticleModuleRotation_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UMM_Customizing {
	UPanelWidget* m_UpStyleHairPanel; // 0x2f0
	UPanelWidget* m_LookPanel; // 0x2f8
	UPanelWidget* m_UIPanel; // 0x300
	UPanelWidget* m_SaveLoadPanel; // 0x308
	UPanelWidget* m_RevertPanel; // 0x310
	UPanelWidget* m_UndoPanel; // 0x318
	UPanelWidget* m_RedoPanel; // 0x320
	UPanelWidget* m_pPresetPanel; // 0x328
	UPanelWidget* m_pCategoryPanel; // 0x330
	UPanelWidget* m_pComponentPanel; // 0x338
	UMM_Customizing_Save* m_pSaveLoadWidget; // 0x340
	UMM_Customizing_Component* m_pComponentListPanel; // 0x348
	UMM_Customizing_Palette* m_pComponentPalettePanel; // 0x350
	UPanelWidget* m_pSaveLoadLeftPanel; // 0x358
	UPanelWidget* m_pTopPanel; // 0x360
	UPanelWidget* m_pLeftTopPanel; // 0x368
	UButton* m_pDetailControlButton; // 0x370
	UButton* m_pCostumeDyeButton; // 0x378
	UWidget* m_pCostumeDyePanel; // 0x380
	UMirButton* m_pRevertButton; // 0x388
	UButton* m_pTempSaveButton; // 0x390
	UMirButton* m_pUndoButton; // 0x398
	UMirButton* m_pRedoButton; // 0x3a0
	UButton* m_pShowUIButton; // 0x3a8
	UButton* m_pHideUIButton; // 0x3b0
	UMirButton* m_pLookCameraImg; // 0x3b8
	UMirButton* m_pUpStyleHairImg; // 0x3c0
	UMirButton* m_pLookCameraBtn; // 0x3c8
	UMirButton* m_pUpStyleHairBtn; // 0x3d0
	UButton* m_pSaveLoadButton; // 0x3d8
	UButton* m_pBackButton; // 0x3e0
	UButton* m_pSaveButton; // 0x3e8
	UButton* m_pLoadButton; // 0x3f0
	UButton* m_pStyleBookButton; // 0x3f8
	UButton* m_pScreenShootButton; // 0x400
	UMM_Common_Btn* m_pClassCreateButton; // 0x408
	UMM_Common_Btn_Cost* m_pFaceJobButton; // 0x410
	UMM_Customizing_CreatePopup* m_pCreatePopup; // 0x418
	UMirTextBlock* m_pTitle; // 0x420
	UWidgetAnimation* Show_DetailControl; // 0x428
	UWidgetAnimation* Hide_DetailControl; // 0x430
	UWidgetAnimation* Show_DetailComponent; // 0x438
	UWidgetAnimation* Hide_DetailComponent; // 0x440
	UWidgetAnimation* Show_SaveLoad; // 0x448
	UWidgetAnimation* Hide_SaveLoad; // 0x450
};

struct UDynamicEntryBoxBase {
	EDynamicBoxType EntryBoxType; // 0x108
	FVector2D EntrySpacing; // 0x10c
	TArray<FVector2D> SpacingPattern; // 0x118
	FSlateChildSize EntrySizeRule; // 0x128
	EHorizontalAlignment EntryHorizontalAlignment; // 0x130
	EVerticalAlignment EntryVerticalAlignment; // 0x131
	int32_t MaxElementSize; // 0x134
	FUserWidgetPool EntryWidgetPool; // 0x148
};

struct UMaterialExpressionBentNormalCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionAbs {
	FExpressionInput Input; // 0x40
};

struct UMM_Slot_Base {
	ESlotBackgroundType SlotBackgroundType; // 0x2f0
	ESlotEmptyType SlotEmptyType; // 0x2f1
	bool Skip_Event; // 0x2f2
	bool Skip_Pressing; // 0x2f3
	UMirImage* m_ImgBg; // 0x2f8
	UMirImage* m_ImgIcon; // 0x300
	UMirButton* m_BtnMain; // 0x308
	UPanelWidget* m_PanEffect; // 0x310
	int32_t m_ItemTID; // 0x328
	int32_t m_EquipPosition; // 0x32c
	int32_t m_iGuildShopTID; // 0x330
	int32_t m_iSmeltingLevel; // 0x334
	int32_t m_iTranscendStep; // 0x338
	int32_t m_SlotIndex; // 0x3d8
};

struct UMM_Popup_GuildDevBenefit {
	UWidgetAnimation* mOpenAni; // 0x2e0
	UWidgetAnimation* mCloseAni; // 0x2e8
	UMirTextBlock* mTxtFxiedTitle; // 0x2f0
	UMirTextBlock* mTxtFxiedLevel; // 0x2f8
	UMirTextBlock* mTxtFirstAttributeName; // 0x300
	UMirTextBlock* mTxtSecondAttributeName; // 0x308
	UMirScrollBox* mScrollBox; // 0x310
	UMM_Common_Btn_Symbol* mBtnClose; // 0x318
};

struct UMM_Costume_Slot_InvenItem_Long {
	UEffectWidgetBase* m_pSelectSlotEffect; // 0x300
	UTutorialHighlightWidget* m_pTutorialWidget; // 0x308
	UPanelWidget* Grid_SaleIcon; // 0x310
	UHorizontalBox* Panel_SaleInfo; // 0x318
	UMirTextBlock* Txt_Percent; // 0x320
	UTextBlock* Txt_Name; // 0x328
	UHorizontalBox* CostGrid; // 0x330
	UMirImage* Img_CostType; // 0x338
	UMirTextBlock* Txt_CostValue; // 0x340
	UMirImage* Img_CostType_Sale; // 0x348
	UMirTextBlock* Txt_CostValue_Sale; // 0x350
	UCanvasPanel* Panel_Color; // 0x358
	UMirTextBlock* Txt_Color; // 0x360
	UMM_Slot_Costume_Palette* Slot_PaletteColor; // 0x368
	UImage* Img_Select; // 0x370
	UMirButton* Btn_Slot; // 0x378
	UMirImage* Img_Icon; // 0x380
	UMirImage* Img_Event; // 0x388
	UMirImage* Img_Equipped; // 0x390
	UMirImage* Img_Have; // 0x398
	UMirImage* Img_Default; // 0x3a0
	UMirImage* Img_Disabled; // 0x3a8
	UMirImage* Img_Lock; // 0x3b0
	UMirTextBlock* txt_time; // 0x3b8
	UMirImage* Img_TimeBG; // 0x3c0
	UMirImage* Img_Indicator; // 0x3c8
	TArray<UMM_Popup_Appearance_Slot*> m_Arr_Slot; // 0x3d0
	UPanelWidget* m_Effect_Panel; // 0x3e0
	int32_t SLOT_EFFECT_INDEX; // 0x3e8
	int32_t STRING_PERCENT; // 0x3ec
	int32_t STRING_PurchaseAble; // 0x3f0
	int32_t ICONID_DEFAULT; // 0x3f4
	int32_t ICONID_EQUIP; // 0x3f8
	int32_t ICONID_OWNED; // 0x3fc
	COSTUME_PARTS m_CostumeParts; // 0x400
	int32_t m_CostumeId; // 0x404
	int32_t m_SlotIndex; // 0x408
};

struct UParticleModuleAccelerationConstant {
	FVector Acceleration; // 0x38
};

struct UMM_Auction_Tab_Search_Enchant {
	UMM_Auction_Enchant_ComboList* m_pComboList_Min; // 0x2f0
	UMM_Auction_Enchant_ComboList* m_pComboList_Max; // 0x2f8
};

struct UMaterialExpressionMakeMaterialAttributes {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Metallic; // 0x54
	FExpressionInput Specular; // 0x68
	FExpressionInput Roughness; // 0x7c
	FExpressionInput EmissiveColor; // 0x90
	FExpressionInput Opacity; // 0xa4
	FExpressionInput OpacityMask; // 0xb8
	FExpressionInput Normal; // 0xcc
	FExpressionInput WorldPositionOffset; // 0xe0
	FExpressionInput WorldDisplacement; // 0xf4
	FExpressionInput TessellationMultiplier; // 0x108
	FExpressionInput SubsurfaceColor; // 0x11c
	FExpressionInput ClearCoat; // 0x130
	FExpressionInput ClearCoatRoughness; // 0x144
	FExpressionInput AmbientOcclusion; // 0x158
	FExpressionInput Refraction; // 0x16c
	FExpressionInput CustomizedUVs[0x8]; // 0x180
	FExpressionInput PixelDepthOffset; // 0x220
	FExpressionInput ShadingModel; // 0x234
};

struct UMM_UIShopGachaBonus {
	UMirButton* m_Btn_GachaBonus; // 0x2f0
	UMirTextBlock* m_Txt_Title; // 0x2f8
	UMirImage* m_Img_Indicator; // 0x300
	UMirTextBlock* m_Txt_GachaName; // 0x308
	UMirProgressBar* m_Prog_Gague; // 0x310
	UMirProgressBar* m_Prog_GagueEffect_2; // 0x318
	UMirProgressBar* m_Prog_GagueEffect_3; // 0x320
	UMirCanvasPanel* m_Panel_MaxEffect; // 0x328
	UMirImage* m_Img_GlowOn; // 0x330
	UMirTextBlock* m_Txt_BonusCount; // 0x338
	UMirCanvasPanel* m_Panel_EventBonus; // 0x340
	UMirTextBlock* m_Txt_EventTime; // 0x348
	UMirTextBlock* m_Txt_BonusPointTitle; // 0x350
	UMirTextBlock* m_Txt_EventBonusPoint; // 0x358
	UMirTextBlock* m_Txt_BonusPoint; // 0x360
};

struct UMM_WidgetManager {
	UMM_Widget_Master* m_pWidgetMaster; // 0x28
	TMap<EWidgetID, FWidgetInfo> m_mapWidgetInfo; // 0x30
	TMap<EWidgetID, FWidgetPool> m_mapWidgetPool; // 0x80
	TArray<EWidgetID> m_arShowingPopupWidget; // 0xd0
	FVector m_vUIBGPos; // 0xe0
	AHeroInfoCamera* m_pHeroCamera; // 0xf0
	int32_t m_iPreloadedClassID; // 0xf8
	bool m_bPreloadedLoginState; // 0xfc
	bool m_bLoadCompleteLoginState; // 0xfd
	TMap<EWidgetID, UObject*> m_mapDynamicWidget; // 0x100
	TMap<int32_t, UObject*> m_mapSkillSprite; // 0x150
	UObject* m_pLoadingImage; // 0x1a0
	TMap<FString, UObject*> m_mapLoadingResource; // 0x1a8
	TMap<FString, UObject*> m_mapLoadedBrush; // 0x1f8
	TMap<FString, FBrushLoading> m_mapBrushLoading; // 0x248
};

struct UMM_CollectItemInfo {
	int32_t m_TierStrID; // 0x2f0
	int32_t m_PlusStrID; // 0x2f4
	int32_t m_RegistStrID; // 0x2f8
	int32_t m_SearchStrID; // 0x2fc
	int32_t m_SmeltStrID; // 0x300
	int32_t m_TradeCenterStrID; // 0x304
	int32_t m_AlreadyRegistStrID; // 0x308
	int32_t m_IsNotTradableItmeStrID; // 0x30c
	int32_t m_ObtainInfoStrID; // 0x310
	UMirTextBlock* m_Txt_Name; // 0x318
	UMirTextBlock* m_Txt_SmeltingLV; // 0x320
	UMirTextBlock* m_Txt_Tier; // 0x328
	UMirImage* m_Img_Tier_BG; // 0x330
	UMirImage* m_Img_Tier_Count; // 0x338
	UMirImage* m_Img_Grade; // 0x340
	UMirTextBlock* m_Txt_GradeName; // 0x348
	UMM_Common_Btn* m_Btn_Search; // 0x350
	UMM_Common_Btn* m_Btn_Regist; // 0x358
	UMM_Common_Btn* m_Btn_Trade; // 0x360
	UMM_PopUp_ItemInfo_List* m_ItemInfo_List; // 0x368
	int32_t m_DoNotRegist; // 0x370
	int32_t m_CheckSmeltStr; // 0x374
	int32_t m_NoRegistItemStr; // 0x378
	int32_t m_NoSmeltStrID; // 0x37c
	int32_t m_HasNoItemStrID; // 0x380
	int32_t m_IsPetStoneStrID; // 0x384
	int32_t m_IsOverSmletStrID; // 0x388
	int32_t m_DoNotOpenContentsStrID; // 0x38c
};

struct AMyAirWalk {
	float m_fAnimID; // 0x230
	int32_t m_PlayerIndex; // 0x234
	bool m_bPlayMatinee; // 0x238
	FVector m_Scale; // 0x23c
	float m_fCapsuleHalfHeigth; // 0x248
	float m_fCapsuleRadius; // 0x24c
	AMatineeActor* m_pMatinee; // 0x250
	ACameraActor* m_pMatineeCam; // 0x258
	TArray<FName> m_SectionNameArray; // 0x260
	bool m_UseBossNameUi; // 0x270
};

struct UResizeFontDataData {
	TArray<FResizeFontInfo> ResizeFontInfos; // 0x30
	TArray<FLinearColor> ResaveFontColorInfos; // 0x40
};

struct UInterpTrackInstVectorProp {
	FVector ResetVector; // 0x40
};

struct UMM_ItemCollectEffect {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UMirListView* m_ListView_CollectionEffectList; // 0x2e8
	UPanelWidget* m_Panel_NoResult; // 0x2f0
	UMM_Common_Btn* m_Btn_Progress; // 0x2f8
	UMM_Common_Board_Notice* m_Notice_NoResult; // 0x300
	int32_t m_HasNoResultStr; // 0x308
	int32_t m_CollectAllEffectStr; // 0x30c
	int32_t m_ObtainStrID; // 0x310
	TArray<UCollectionEffectSlotObj*> m_arCollectionEffectSlotObj; // 0x318
};

struct UMovieSceneActorReferenceSection {
	FMovieSceneActorReferenceData ActorReferenceData; // 0xe0
	FIntegralCurve ActorGuidIndexCurve; // 0x180
	TArray<FString> ActorGuidStrings; // 0x200
};

struct UVectorFieldComponent {
	UVectorField* VectorField; // 0x418
	float Intensity; // 0x420
	float Tightness; // 0x424
	char bPreviewVectorField : 1; // 0x428
};

struct UMirMultiLineEditableText {
	FText Text; // 0x128
	FText HintText; // 0x140
	DelegateProperty HintTextDelegate; // 0x158
	FTextBlockStyle WidgetStyle; // 0x168
	bool bIsReadOnly; // 0x3d0
	FSlateFontInfo Font; // 0x3d8
	bool SelectAllTextWhenFocused; // 0x428
	bool ClearTextSelectionOnFocusLoss; // 0x429
	bool RevertTextOnEscape; // 0x42a
	bool ClearKeyboardFocusOnCommit; // 0x42b
	bool AllowContextMenu; // 0x42c
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x42d
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x42e
	FScriptMulticastDelegate OnTextChanged; // 0x430
	FScriptMulticastDelegate OnTextCommitted; // 0x440
};

struct UOnlineSubsystemExtendedFacebookSettings {
	FString FacebookAppId; // 0x28
	FString FacebookDisplayName; // 0x38
	FString InitLoginPermissions; // 0x48
	FString FriendsInviteMessage; // 0x58
	FString FriendsQueryFields; // 0x68
	bool bForcePortraitMode; // 0x78
	bool bForceWebBrowserModeAndroid; // 0x79
	bool bForceWebBrowserModeIOS; // 0x7a
};

struct UMM_NewInventory_MagicStone {
	UMM_NewInventoryTab* inventory_tab; // 0x2e8
	UMM_NewInventory* inventory; // 0x2f0
};

struct UARBasicLightEstimate {
	float AmbientIntensityLumens; // 0x28
	float AmbientColorTemperatureKelvin; // 0x2c
	FLinearColor AmbientColor; // 0x30
};

struct UMM_Popup_DeathPenalty {
	TArray<UVerticalBox*> m_arrVerticalBox; // 0x2e0
	TArray<UMirImage*> m_arrImgIcon; // 0x2f0
	TArray<UMirTextBlock*> m_arrTxtName; // 0x300
	TArray<UMirButton*> m_arrBtnClick; // 0x310
	UMirImage* m_pImgBg; // 0x320
};

struct UMM_CustomizingManager {
	AMM_CustomizingPoseableMeshActor* m_pPoseableMeshActor; // 0xa0
};

struct UMovieSceneFadeTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UMM_DailyWork_List_Slot {
	TArray<UMM_Slot_Material*> RewardItem; // 0x2f0
	UMirImage* Img_Symbol; // 0x300
	UMirTextBlock* Txt_Title; // 0x308
	UMirTextBlock* Txt_Mission; // 0x310
	UMM_Common_Btn* Btn_QuestAction; // 0x318
	UMirImage* Img_End; // 0x320
	UMirImage* Img_Disable; // 0x328
	int32_t m_QuestID; // 0x330
	int32_t REWARD_SLOT_COUNT; // 0x334
};

struct UMM_Fame_List_SubSlot {
	UMirTextBlock* Txt_Title; // 0x2e0
	TArray<UMirRichTextBlock*> Txt_Value; // 0x2e8
	int32_t STRID_SCORE; // 0x2f8
};

struct UMM_Popup_TermsOfService {
	UMM_Common_Btn* m_Btn_SelectAll; // 0x2e8
	UMM_Common_Btn* m_Btn_Agree; // 0x2f0
	UMM_Common_Btn* m_Btn_TermsInfo; // 0x2f8
	UMM_Common_Btn* m_Btn_PrivacyInfo; // 0x300
	UMirCheckBox* m_CheckBox_Terms; // 0x308
	UMirCheckBox* m_CheckBox_Privacy; // 0x310
	UMirCheckBox* m_CheckBox_Ad; // 0x318
	UMirCheckBox* m_CheckBox_NightPush; // 0x320
	UPanelWidget* m_Hrz_NightPush; // 0x328
	UPanelWidget* m_Hrz_Ad; // 0x330
};

struct UMM_Dominion_TaxSlot {
	UMirTextBlock* m_pTxtTitle; // 0x2e0
	UMirImage* m_pImgMoney; // 0x2e8
	UMirTextBlock* m_pTxtMoney; // 0x2f0
};

struct AEffectShowTrigger {
	bool m_bDefaultShow; // 0x278
	int32_t m_EffectID; // 0x27c
};

struct UDrawFrustumComponent {
	FColor FrustumColor; // 0x418
	float FrustumAngle; // 0x41c
	float FrustumAspectRatio; // 0x420
	float FrustumStartDist; // 0x424
	float FrustumEndDist; // 0x428
	UTexture* Texture; // 0x430
};

struct UMM_PopupGuildDonationDetails {
	UMirTextBlock* txt_guild_gold; // 0x2e0
	UMirTextBlock* txt_guild_coin; // 0x2e8
	UMirTextBlock* txt_guild_black_iron; // 0x2f0
	UMirTextBlock* txt_guild_spirit; // 0x2f8
	UMM_Common_Btn_Symbol* btn_close; // 0x300
	UMM_Common_Btn* btn_confirm; // 0x308
	UMirCheckBox* cb_daily; // 0x310
	UMirCheckBox* cb_weekly; // 0x318
	UMirTextBlock* txt_daily; // 0x320
	UMirTextBlock* txt_weekly; // 0x328
	UMirScrollBox* sb_details; // 0x330
	UMirCheckBox* cb_sort; // 0x338
	UMirTextBlock* txt_sort; // 0x340
	UMirCanvasPanel* cp_sort; // 0x348
	UMirImage* img_sort_grade; // 0x350
	UMirButton* btn_sort_grade; // 0x358
	UMirImage* img_sort_guild_gold; // 0x360
	UMirButton* btn_sort_guild_gold; // 0x368
	UMirImage* img_sort_guild_coin; // 0x370
	UMirButton* btn_sort_guild_coin; // 0x378
	UMirImage* img_sort_guild_black_iron; // 0x380
	UMirButton* btn_sort_guild_black_iron; // 0x388
	UMirImage* img_sort_guild_spirit; // 0x390
	UMirButton* btn_sort_guild_spirit; // 0x398
	UMirImage* img_sort_total; // 0x3a0
	UMirButton* btn_sort_total; // 0x3a8
};

struct UMM_PopupRewardInfo {
	UMirButton* Btn_BG; // 0x2e0
	UMM_Common_Btn_Symbol* btn_close; // 0x2e8
	UMirScrollBox* sb_slot; // 0x2f0
	UMirTextBlock* Txt_Name; // 0x2f8
};

struct UMirTileView {
	EStyle_MirTileView m_eStyle; // 0x878
	TArray<UUserWidget*> m_arEntryWidgetClass; // 0x880
};

struct UMM_HudAlramHelperList {
	int32_t m_iAlarmEffectID; // 0x2e8
	float m_fAlramSlotSize; // 0x2ec
	float m_fAlramListSize; // 0x2f0
	float m_fNoticeShowTime; // 0x2f4
	float m_fAlramListShowTime; // 0x2f8
	UPanelWidget* m_AlarmPanel; // 0x318
	UScrollBox* m_ScrollBox; // 0x320
	TArray<UMM_HudAlramHelperListSolt*> m_AlarmSlotList; // 0x328
	UPanelWidget* m_Grid_Notice; // 0x338
	UMirTextBlock* m_Txt_Notice; // 0x340
	UWidgetAnimation* m_AnitNotice; // 0x348
};

struct UBTTask_Wait {
	float WaitTime; // 0x70
	float RandomDeviation; // 0x74
};

struct UMM_Guild_Info_Btn {
	UMirImage* m_Img_Icon; // 0x2f0
	UMirTextBlock* m_Txt_Title; // 0x2f8
	UMirTextBlock* m_Txt_Value; // 0x300
	UMirButton* m_Btn; // 0x308
};

struct UInvalidationBox {
	bool bCanCache; // 0x120
	bool CacheRelativeTransforms; // 0x121
};

struct UMM_HudBottomMsg_Slot {
	float m_fShowTime; // 0x2e0
	UWidgetAnimation* m_AniStart; // 0x2e8
	UMirRichTextBlock* m_RTxt_Message; // 0x300
};

struct UMM_Popup_RewardInfoSlot {
	UMirImage* Img_Icon; // 0x2e0
	UMirTextBlock* Txt_Name; // 0x2e8
	UMirTextBlock* txt_count; // 0x2f0
};

struct UPaperTileMapComponent {
	int32_t MapWidth; // 0x440
	int32_t MapHeight; // 0x444
	int32_t TileWidth; // 0x448
	int32_t TileHeight; // 0x44c
	UPaperTileSet* DefaultLayerTileSet; // 0x450
	UMaterialInterface* Material; // 0x458
	TArray<UPaperTileLayer*> TileLayers; // 0x460
	FLinearColor TileMapColor; // 0x470
	int32_t UseSingleLayerIndex; // 0x480
	bool bUseSingleLayer; // 0x484
	UPaperTileMap* TileMap; // 0x488
};

struct UMaterialExpressionMin {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMM_Auction_Slot_BookMark {
	UMirCheckBox* m_pChkBookMark; // 0x348
	UMM_Slot_Inventory* m_pSlotItem; // 0x350
	UMirTextBlock* m_pTxtName; // 0x358
	UMirTextBlock* m_pTxtPrice; // 0x360
	UMirTextBlock* m_pTxtCount; // 0x368
	UMirButton* m_pBtnClick; // 0x370
	UMirImage* m_pImgDisable; // 0x378
};

struct USynth2DSlider {
	float ValueX; // 0x108
	float ValueY; // 0x10c
	DelegateProperty ValueXDelegate; // 0x110
	DelegateProperty ValueYDelegate; // 0x120
	FSynth2DSliderStyle WidgetStyle; // 0x130
	FLinearColor SliderHandleColor; // 0x3e8
	bool IndentHandle; // 0x3f8
	bool Locked; // 0x3f9
	float StepSize; // 0x3fc
	bool IsFocusable; // 0x400
	FScriptMulticastDelegate OnMouseCaptureBegin; // 0x408
	FScriptMulticastDelegate OnMouseCaptureEnd; // 0x418
	FScriptMulticastDelegate OnControllerCaptureBegin; // 0x428
	FScriptMulticastDelegate OnControllerCaptureEnd; // 0x438
	FScriptMulticastDelegate OnValueChangedX; // 0x448
	FScriptMulticastDelegate OnValueChangedY; // 0x458
};

struct UTireType {
	float FrictionScale; // 0x30
};

struct UMM_DungeonQuestSlotWidget {
	UMirImage* imgFixedIcon; // 0x2e0
	UMirTextBlock* txtQuestTitle; // 0x2e8
	UMirTextBlock* txtContidition; // 0x2f0
};

struct UBTTask_UpdateEnableSkills {
	EBTNodeResult ReturnResult; // 0x70
	bool IsSmite; // 0x71
};

struct UFootStepSurfaceData {
	UParticleSystem* Default_Particle; // 0x30
	TMap<EPhysicalSurface, UParticleSystem*> Particles; // 0x58
	USoundBase* MALE_DefaultSound; // 0xa8
	TMap<EPhysicalSurface, USoundBase*> MALE_Sounds; // 0xd0
	USoundBase* FEMALE_DefaultSound; // 0x120
	TMap<EPhysicalSurface, USoundBase*> FEMALE_Sounds; // 0x148
	USoundBase* VEHICLE_HorseDefaultSound; // 0x198
	TMap<EPhysicalSurface, USoundBase*> VEHICLE_HorseSounds; // 0x1c0
	USoundBase* VEHICLE_TigerDefaultSound; // 0x210
	TMap<EPhysicalSurface, USoundBase*> VEHICLE_TigerSounds; // 0x238
	USoundBase* VEHICLE_PigDefaultSound; // 0x288
	TMap<EPhysicalSurface, USoundBase*> VEHICLE_PigSounds; // 0x2b0
	USoundBase* VEHICLE_WoodenFishDefaultSound; // 0x300
	TMap<EPhysicalSurface, USoundBase*> VEHICLE_WoodenFishSounds; // 0x328
};

struct UMM_Guild_DevLevelUpResult {
	UWidgetAnimation* mOpenAni; // 0x2e0
	UWidgetAnimation* mCloseAni; // 0x2e8
	UWidgetAnimation* mAniFail; // 0x2f0
	UMirButton* mBtnClose; // 0x2f8
	UMirTextBlock* mTxtDesc; // 0x300
	UMirCanvasPanel* mPanelSuccess; // 0x308
	UMirTextBlock* mTxtLevelUpSuccessTitle; // 0x310
	UMirTextBlock* mTxtSuccessTitle; // 0x318
	UMirTextBlock* mTxtBeforeLevel; // 0x320
	UMirTextBlock* mTxtAfterLevel; // 0x328
	UMirImage* mImgIcon; // 0x330
	UMirCanvasPanel* mPanelFail; // 0x338
	UMirTextBlock* mTxtLevelUpFailTitle; // 0x340
	UMirTextBlock* mTxtFailTitle; // 0x348
	UMirTextBlock* mTxtBeforeLevelFail; // 0x350
	UMirTextBlock* mTxtAfterLevelFail; // 0x358
	UMirImage* mImgIconFail; // 0x360
};

struct UMaterialExpressionReroute {
	FExpressionInput Input; // 0x40
};

struct UMM_B_Pet {
	APetRenderRoom* m_pRenderRoom; // 0x310
	UMirImage* m_Img_RenderTarget; // 0x318
	UImage* m_TargetPos; // 0x320
	USpacer* m_Spc_RotateArea; // 0x328
	UMM_PetMain* m_PetMain; // 0x330
	UMM_PetSpeechBalloon* m_PetSpeechBalloon; // 0x338
};

struct UMM_HudBottom {
	UMM_DeviceInfo* m_DeviceInfo; // 0x2f0
	UMirTextBlock* m_Txt_ExpValue; // 0x2f8
	UMirProgressBar* m_Prg_Exp; // 0x300
	UPanelWidget* m_Can_DisplayArea; // 0x308
};

struct UMM_HudMiniMap {
	UMM_Map_Detail* m_Map_Detail; // 0x2e8
	URetainerBox* m_RetainerBox_Map; // 0x2f0
};

struct AProjectile_DirectMove {
	USphereComponent* m_pCollSphereComp; // 0x218
	UParticleSystemComponent* m_pShotParticleComp; // 0x220
	UParticleSystemComponent* m_pImpactParticleComp; // 0x228
};

struct UNavLinkRenderingComponent {
	float MinDrawDistance; // 0x228
	float LDMaxDrawDistance; // 0x22c
	float CachedMaxDrawDistance; // 0x230
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x234
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x235
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x236
	ELightmapType LightmapType; // 0x237
	char bUseMaxLODAsImposter : 1; // 0x238
	float CachedBoundsSphereDiameter; // 0x23c
	char bBatchImpostersAsInstances : 1; // 0x240
	char bNeverDistanceCull : 1; // 0x240
	char bAlwaysCreatePhysicsState : 1; // 0x240
	char bGenerateOverlapEvents : 1; // 0x240
	char bMultiBodyOverlap : 1; // 0x241
	char bTraceComplexOnMove : 1; // 0x241
	char bReturnMaterialOnMove : 1; // 0x241
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x241
	char bAllowCullDistanceVolume : 1; // 0x241
	char bHasMotionBlurVelocityMeshes : 1; // 0x241
	char bVisibleInReflectionCaptures : 1; // 0x241
	char bVisibleInRayTracing : 1; // 0x241
	char bRenderInMainPass : 1; // 0x242
	char bRenderInDepthPass : 1; // 0x242
	char bReceivesDecals : 1; // 0x242
	char bOwnerNoSee : 1; // 0x242
	char bOnlyOwnerSee : 1; // 0x242
	char bTreatAsBackgroundForOcclusion : 1; // 0x242
	char bUseAsOccluder : 1; // 0x242
	char bSelectable : 1; // 0x242
	char bForceMipStreaming : 1; // 0x243
	char bHasPerInstanceHitProxies : 1; // 0x243
	char CastShadow : 1; // 0x243
	char bAffectDynamicIndirectLighting : 1; // 0x243
	char bAffectDistanceFieldLighting : 1; // 0x243
	char bCastDynamicShadow : 1; // 0x243
	char bCastStaticShadow : 1; // 0x243
	char bCastVolumetricTranslucentShadow : 1; // 0x243
	char bSelfShadowOnly : 1; // 0x244
	char bCastFarShadow : 1; // 0x244
	char bCastInsetShadow : 1; // 0x244
	char bCastCinematicShadow : 1; // 0x244
	char bCastHiddenShadow : 1; // 0x244
	char bCastShadowAsTwoSided : 1; // 0x244
	char bLightAsIfStatic : 1; // 0x244
	char bLightAttachmentsAsGroup : 1; // 0x244
	char bExcludeFromLightAttachmentGroup : 1; // 0x245
	char bReceiveMobileCSMShadows : 1; // 0x245
	char bSingleSampleShadowFromStationaryLights : 1; // 0x245
	char bIgnoreRadialImpulse : 1; // 0x245
	char bIgnoreRadialForce : 1; // 0x245
	char bApplyImpulseOnDamage : 1; // 0x245
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x245
	char AlwaysLoadOnClient : 1; // 0x245
	char AlwaysLoadOnServer : 1; // 0x246
	char bUseEditorCompositing : 1; // 0x246
	char bRenderCustomDepth : 1; // 0x246
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x247
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x249
	FLightingChannels LightingChannels; // 0x24a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x24b
	int32_t CustomDepthStencilValue; // 0x24c
	FCustomPrimitiveData CustomPrimitiveData; // 0x250
	int32_t TranslucencySortPriority; // 0x260
	int32_t VisibilityId; // 0x264
	char bIgnoreOcclusionVolume : 1; // 0x268
	int32_t OcclusionVolumeId; // 0x26c
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x270
	uint8_t VirtualTextureLodBias; // 0x280
	uint8_t VirtualTextureCullMips; // 0x281
	uint8_t VirtualTextureMinCoverage; // 0x282
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x283
	float LpvBiasMultiplier; // 0x288
	float BoundsScale; // 0x294
	TArray<AActor*> MoveIgnoreActors; // 0x2a8
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2b8
	FBodyInstance BodyInstance; // 0x2d8
	FScriptMulticastDelegate OnComponentHit; // 0x3e8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3e9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3ea
	FScriptMulticastDelegate OnComponentWake; // 0x3eb
	FScriptMulticastDelegate OnComponentSleep; // 0x3ec
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3ee
	FScriptMulticastDelegate OnEndCursorOver; // 0x3ef
	FScriptMulticastDelegate OnClicked; // 0x3f0
	FScriptMulticastDelegate OnReleased; // 0x3f1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3f2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3f3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3f4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3f5
	UPrimitiveComponent* LODParentPrimitive; // 0x410
};

struct ASceneCapture {
	UStaticMeshComponent* MeshComp; // 0x218
	USceneComponent* SceneComponent; // 0x220
};

struct UMM_QuestNormal_Auto {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f0
	UMirCheckBox* m_All_Check_Box; // 0x2f8
	UMM_Common_Btn* m_Btn_Start; // 0x300
	UMM_Common_Btn* m_Btn_Initialize; // 0x308
	UMirScrollBox* m_List_Scroll; // 0x310
	UMM_Common_Board_Notice* m_Txt_List_Empty; // 0x318
	UMirTextBlock* m_PopupTitle; // 0x320
	UMirTextBlock* m_Txt_Order; // 0x328
	UMirTextBlock* m_Txt_Mission; // 0x330
	UMirTextBlock* m_Txt_RepeatMission; // 0x338
	UMirTextBlock* m_Txt_Local; // 0x340
	UMirTextBlock* m_Txt_ChangeOrder; // 0x348
	UMirTextBlock* m_Txt_RepeatCount; // 0x350
	int32_t StartBtnTextID; // 0x368
	int32_t InitBtnTextID; // 0x36c
	int32_t PauseBtnTextID; // 0x370
	int32_t StopBtnTextID; // 0x374
	int32_t MissionPageBtnTextID; // 0x378
	int32_t CompleteBtnTextID; // 0x37c
	int32_t RepeatCountID; // 0x380
	int32_t RepeatNumID; // 0x384
	UMM_Common_ToolTipBtn* m_pBtnCommToolTip; // 0x388
};

struct UMaterialExpressionDDY {
	FExpressionInput Value; // 0x40
};

struct UVoipListenerSynthComponent {
	char bAutoDestroy : 1; // 0x220
	char bStopWhenOwnerDestroyed : 1; // 0x220
	char bAllowSpatialization : 1; // 0x220
	char bOverrideAttenuation : 1; // 0x220
	char bOutputToBusOnly : 1; // 0x224
	USoundAttenuation* AttenuationSettings; // 0x228
	FSoundAttenuationSettings AttenuationOverrides; // 0x230
	USoundConcurrency* ConcurrencySettings; // 0x520
	TSet<USoundConcurrency*> ConcurrencySet; // 0x528
	USoundClass* SoundClass; // 0x578
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x580
	USoundSubmix* SoundSubmix; // 0x588
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x590
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x5a0
	FSoundModulation Modulation; // 0x5b0
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x5c0
	char bIsUISound : 1; // 0x5d0
	char bIsPreviewSound : 1; // 0x5d0
	int32_t EnvelopeFollowerAttackTime; // 0x5d4
	int32_t EnvelopeFollowerReleaseTime; // 0x5d8
	FScriptMulticastDelegate OnAudioEnvelopeValue; // 0x5e0
	USynthSound* Synth; // 0x610
	UAudioComponent* AudioComponent; // 0x618
};

struct UMM_B_NPCNameTag {
	UPanelWidget* m_Grd_Root; // 0x2e0
	UPanelWidget* m_Grd_Title; // 0x2e8
	UTextBlock* m_Txt_Nickname; // 0x2f0
	UTextBlock* m_Txt_Title; // 0x2f8
	UPanelWidget* m_Grd_Effect; // 0x300
	UPanelWidget* m_Grd_QuestMark; // 0x308
	UMM_Common_Dialog_Btn* m_Btn_QuestMark; // 0x310
	UPanelWidget* m_Grd_HP; // 0x318
	UProgressBar* m_Prg_HP; // 0x320
	UImage* m_SpeechBalloonLoc; // 0x328
	UImage* m_TrackerIcon; // 0x330
	UWidgetAnimation* m_pAnim_Alarm; // 0x338
	UWidgetAnimation* m_pAni_Tracker; // 0x340
	AMM_NPCBase* m_pNpc; // 0x358
};

struct UMM_QuestNormal_Auto_Slot {
	UMirCheckBox* m_Check_Box; // 0x2f0
	UMirTextBlock* m_Txt_Slot_Index; // 0x2f8
	UMirTextBlock* m_Txt_Mission_Title; // 0x300
	UMirTextBlock* m_Txt_Mission_SubTitle; // 0x308
	UMirTextBlock* m_Txt_Mission_Distance; // 0x310
	UMirTextBlock* m_Txt_Mission_Purpose; // 0x318
	UMirImage* m_Img_Complete; // 0x320
	UMM_Common_Btn_Symbol* m_Btn_RepeatMin; // 0x328
	UMirTextBlock* m_Txt_RepeatCount; // 0x330
	UMM_Common_Btn_Symbol* m_Btn_RepeatAdd; // 0x338
	UMM_Common_Btn_Symbol* m_Btn_ListUp; // 0x340
	UMM_Common_Btn_Symbol* m_Btn_ListDown; // 0x348
	UMirImage* m_Img_Selected; // 0x350
	UMirImage* m_Img_Dis_Selected; // 0x358
	UMirButton* m_Btn_Select; // 0x360
	int32_t m_MissionTitleWithCountToStr; // 0x368
	int32_t m_RepeatCountToStr; // 0x36c
	int32_t m_CannotAutoRun; // 0x370
	int32_t m_CompleteAutoRun; // 0x374
};

struct UMM_ContentsStateLine {
	UPanelWidget* m_arHrz_State[0x2]; // 0x2e0
	UMirImage* m_arImg_StateIcon[0x2]; // 0x2f0
	UMirTextBlock* m_arTxt_StateName[0x2]; // 0x300
	UMirTextBlock* m_arTxt_StateValue[0x2]; // 0x310
};

struct UParticleModuleOrbit {
	EOrbitChainMode ChainMode; // 0x38
	FRawDistributionVector OffsetAmount; // 0x40
	FOrbitOptions OffsetOptions; // 0x88
	FRawDistributionVector RotationAmount; // 0x90
	FOrbitOptions RotationOptions; // 0xd8
	FRawDistributionVector RotationRateAmount; // 0xe0
	FOrbitOptions RotationRateOptions; // 0x128
};

struct ADefaultPawn {
	float BaseTurnRate; // 0x278
	float BaseLookUpRate; // 0x27c
	UPawnMovementComponent* MovementComponent; // 0x280
	USphereComponent* CollisionComponent; // 0x288
	UStaticMeshComponent* MeshComponent; // 0x290
	char bAddDefaultMovementBindings : 1; // 0x298
};

struct UMM_TotalQuick_Battle_Tab {
	UMirButton* m_pBtnClick; // 0x2e0
	UMirImage* m_pImgLock; // 0x2e8
	UImage* m_pImgSelect; // 0x2f0
	UImage* m_pImgDeSelect; // 0x2f8
	UTextBlock* m_pTxtName; // 0x300
};

struct USynthSamplePlayer {
	USoundWave* SoundWave; // 0x650
	FScriptMulticastDelegate OnSampleLoaded; // 0x658
	FScriptMulticastDelegate OnSamplePlaybackProgress; // 0x668
};

struct UPhysicsHandleComponent {
	UPrimitiveComponent* GrabbedComponent; // 0xb0
	char bSoftAngularConstraint : 1; // 0xc0
	char bSoftLinearConstraint : 1; // 0xc0
	char bInterpolateTarget : 1; // 0xc0
	float LinearDamping; // 0xc4
	float LinearStiffness; // 0xc8
	float AngularDamping; // 0xcc
	float AngularStiffness; // 0xd0
	float InterpolationSpeed; // 0x140
};

struct APartyBeaconHost {
	UPartyBeaconState* State; // 0x240
	bool bLogoutOnSessionTimeout; // 0x2a8
	float SessionTimeoutSecs; // 0x2ac
	float TravelSessionTimeoutSecs; // 0x2b0
};

struct UMM_NavigationQueryFilter {
	int32_t MaxSearchNodes; // 0x48
};

struct APlayerStart {
	FName PlayerStartTag; // 0x240
};

struct ATestBeaconHost {
	FString BeaconTypeName; // 0x218
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x228
	TArray<AOnlineBeaconClient*> ClientActors; // 0x230
};

struct UMM_Popup_GuildBoard {
	UMirWebBrowser* m_WebBrowser; // 0x2e0
	UMirButton* m_Btn_Close; // 0x2e8
};

struct UHierarchicalLODSetup {
	TArray<FHierarchicalSimplification> HierarchicalLODSetup; // 0x28
	UMaterialInterface* OverrideBaseMaterial; // 0x38
};

struct UTextureRenderTarget2D {
	int32_t SizeX; // 0xd8
	int32_t SizeY; // 0xdc
	FLinearColor ClearColor; // 0xe0
	TextureAddress AddressX; // 0xf0
	TextureAddress AddressY; // 0xf1
	char bForceLinearGamma : 1; // 0xf2
	char bHDR : 1; // 0xf2
	char bGPUSharedFlag : 1; // 0xf2
	ETextureRenderTargetFormat RenderTargetFormat; // 0xf3
	char bAutoGenerateMips : 1; // 0xf4
	TextureFilter MipsSamplerFilter; // 0xf5
	TextureAddress MipsAddressU; // 0xf6
	TextureAddress MipsAddressV; // 0xf7
	EPixelFormat OverrideFormat; // 0xf8
};

struct UShareLinkContent {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMonsterSkillCameraNotify {
	float m_InterpSpeed; // 0x30
	float m_Pitch; // 0x34
	float m_Distance; // 0x38
	AActor* m_pPlayer; // 0x40
	ALobbyCameraControl* m_pCamera; // 0x48
};

struct UBoneMaskFilter {
	TArray<FInputBlendPose> BlendPoses; // 0x28
};

struct UPhysicalAnimationComponent {
	float StrengthMultiplyer; // 0xb0
	USkeletalMeshComponent* SkeletalMeshComponent; // 0xb8
};

struct UMyDrawDebugComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UMM_Popup_DominionTitle {
	UMirButton* m_pBtnBackGround; // 0x2f8
	UMM_Common_ToolTipBtn* m_pToolTip; // 0x300
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x308
	UMirTextBlock* m_pTxtTitle; // 0x310
	UMirScrollBox* m_pScrollViewList; // 0x318
	int32_t m_iDominionID; // 0x320
	int32_t m_iSelectedPBSID; // 0x324
	uint64_t m_iTargetUserUID; // 0x328
	FString m_strTargetName; // 0x330
};

struct UAISubsystem {
	UAISystem* AISystem; // 0x30
};

struct UMM_Common_Popup_EditText {
	UMirTextBlock* Txt_Title; // 0x300
	UMirEditableText* EditTxt_Message; // 0x308
	UMM_Common_Btn* Btn_First; // 0x310
	UMM_Common_Btn* Btn_Second; // 0x318
	UMM_Common_Btn_Symbol* btn_close; // 0x320
	UMirButton* Btn_BG; // 0x328
};

struct ANavigationGraph {
	UPrimitiveComponent* RenderingComp; // 0x220
	FNavDataConfig NavDataConfig; // 0x228
	char bEnableDrawing : 1; // 0x2a0
	char bForceRebuildOnLoad : 1; // 0x2a0
	char bAutoDestroyWhenNoNavigation : 1; // 0x2a0
	char bCanBeMainNavData : 1; // 0x2a0
	char bCanSpawnOnRebuild : 1; // 0x2a0
	char bRebuildAtRuntime : 1; // 0x2a0
	ERuntimeGenerationType RuntimeGeneration; // 0x2a4
	float ObservedPathsTickInterval; // 0x2a8
	uint32_t DataVersion; // 0x2ac
	TArray<FSupportedAreaData> SupportedAreas; // 0x390
};

struct UMovieSceneSequencePlayer {
	FScriptMulticastDelegate OnPlay; // 0x408
	FScriptMulticastDelegate OnPlayReverse; // 0x418
	FScriptMulticastDelegate OnStop; // 0x428
	FScriptMulticastDelegate OnPause; // 0x438
	FScriptMulticastDelegate OnFinished; // 0x448
	EMovieScenePlayerStatus Status; // 0x458
	char bReversePlayback : 1; // 0x45c
	UMovieSceneSequence* Sequence; // 0x460
	FFrameNumber StartTime; // 0x468
	int32_t DurationFrames; // 0x46c
	int32_t CurrentNumLoops; // 0x470
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x488
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x4a0
	FMovieSceneSequenceReplProperties NetSyncProps; // 0x810
	TScriptInterface<Class> PlaybackClient; // 0x820
};

struct UMaterialExpressionSubtract {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct AMM_HQPlayerReferenceActor {
	USkeletalMeshComponent* m_pMesh; // 0x3f8
	UMM_CharacterPartsComponent* m_pPartsComponent; // 0x400
	TMap<FName, UObject*> m_mapAnimBlueprint; // 0x408
	UCapsuleComponent* CapsuleComponent; // 0x458
};

struct UMaterialParameterCollection {
	FGuid StateID; // 0x28
	TArray<FCollectionScalarParameter> ScalarParameters; // 0x38
	TArray<FCollectionVectorParameter> VectorParameters; // 0x48
};

struct UMaterialExpressionObjectOrientation {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_Party_LeftTab {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMovieSceneActorReferenceTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct USkeleton {
	TArray<FBoneNode> BoneTree; // 0x38
	TArray<FTransform> RefLocalPoses; // 0x48
	FGuid VirtualBoneGuid; // 0x170
	TArray<FVirtualBone> VirtualBones; // 0x180
	TArray<USkeletalMeshSocket*> Sockets; // 0x190
	FSmartNameContainer SmartNames; // 0x1f0
	TArray<UBlendProfile*> BlendProfiles; // 0x270
	TArray<FAnimSlotGroup> SlotGroups; // 0x280
	TArray<UAssetUserData*> AssetUserData; // 0x358
};

struct UMM_GuildPeruseListSlot {
	UMirImage* img_rank; // 0x2f0
	UMirTextBlock* txt_rank; // 0x2f8
	UMM_GuildIcon* guild_icon; // 0x300
	UMirTextBlock* Txt_Name; // 0x308
	UMirTextBlock* txt_level; // 0x310
	UMirTextBlock* txt_member; // 0x318
	UMirTextBlock* txt_join_type; // 0x320
	UMirImage* img_join_combatpower; // 0x328
	UMirTextBlock* txt_join_combatpower; // 0x330
	UMirTextBlock* txt_pr; // 0x338
	UMirButton* Btn_Main; // 0x340
	UMM_Common_CombatPoint* CombatPoint; // 0x348
	UMM_Common_Btn_Translation* btn_translation; // 0x350
};

struct UMM_ItemMake_Slot {
	UMirImage* m_ImgDisabled; // 0x3f8
	UMirImage* m_ImgEquiped; // 0x400
	UMirImage* m_ImgHave; // 0x408
	UMirImage* m_Imgindicator; // 0x410
	UImage* Img_Select; // 0x418
	UMirTextBlock* m_TxtCount; // 0x420
	UMirImage* m_ImgTierBg; // 0x428
	UMirImage* m_ImgDummy; // 0x430
	UMirCanvasPanel* m_PanelEvent; // 0x438
	UMirImage* m_Img_Attribution; // 0x440
	int32_t ItemMakeId; // 0x448
	int32_t STR_STACKCOUNT; // 0x44c
};

struct UMM_NonePlayerAnimInstance {
	float LimitTime; // 0x270
	float ElapsedTime; // 0x274
	int32_t MinValue; // 0x278
	int32_t MaxValue; // 0x27c
	int32_t ReferenceValue; // 0x280
	bool DefaultGesture; // 0x284
	EAIRWALK_STATE AirwalkState; // 0x285
	int32_t CustomAnimIndex; // 0x288
	bool PlayCustomAnim; // 0x28c
	float PlayStdElapsedTime; // 0x290
	float PlayStdTime; // 0x294
	float PlayStd01Rate; // 0x298
	float PlayStd02Rate; // 0x29c
	bool bPlayDefaultStd; // 0x2a0
	AMM_EntityBase* Entity; // 0x2a8
};

struct UMM_Popup_GuildCost {
	UMirTextBlock* mTxtGuildCost; // 0x2e0
	TArray<UMM_Goods_Slot*> mGoodSlotList; // 0x2e8
	UMM_Common_Btn_Symbol* mBtnClose; // 0x2f8
};

struct UAnimInstance {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FScriptMulticastDelegate OnMontageBlendingOut; // 0x38
	FScriptMulticastDelegate OnMontageStarted; // 0x48
	FScriptMulticastDelegate OnMontageEnded; // 0x58
	FScriptMulticastDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct UMM_UserEvent_SiegeSlot {
	FLinearColor COLOR_UserEvent_Siege_Home; // 0x2e0
	FLinearColor COLOR_UserEvent_Siege_Away; // 0x2f0
	UMirTextBlock* m_Txt_Name; // 0x300
	UMirTextBlock* m_Txt_TotalCount; // 0x308
	UMirImage* m_Img_Win; // 0x310
	UMirImage* m_Img_Draw; // 0x318
	UMM_Slot_Material* m_SlotMaterial; // 0x320
	UMM_Common_Btn* m_C_Btn; // 0x328
};

struct UStreamingSettings {
	char AsyncLoadingThreadEnabled : 1; // 0x38
	char WarnIfTimeLimitExceeded : 1; // 0x38
	float TimeLimitExceededMultiplier; // 0x3c
	float TimeLimitExceededMinTime; // 0x40
	int32_t MinBulkDataSizeForAsyncLoading; // 0x44
	char UseBackgroundLevelStreaming : 1; // 0x48
	char AsyncLoadingUseFullTimeLimit : 1; // 0x48
	float AsyncLoadingTimeLimit; // 0x4c
	float PriorityAsyncLoadingExtraTime; // 0x50
	float LevelStreamingActorsUpdateTimeLimit; // 0x54
	float PriorityLevelStreamingActorsUpdateExtraTime; // 0x58
	int32_t LevelStreamingComponentsRegistrationGranularity; // 0x5c
	float LevelStreamingUnregisterComponentsTimeLimit; // 0x60
	int32_t LevelStreamingComponentsUnregistrationGranularity; // 0x64
	char EventDrivenLoaderEnabled : 1; // 0x68
	char FlushStreamingOnExit : 1; // 0x68
};

struct UNavAreaMeta_SwitchByAgent {
	UNavArea* Agent0Area; // 0x48
	UNavArea* Agent1Area; // 0x50
	UNavArea* Agent2Area; // 0x58
	UNavArea* Agent3Area; // 0x60
	UNavArea* Agent4Area; // 0x68
	UNavArea* Agent5Area; // 0x70
	UNavArea* Agent6Area; // 0x78
	UNavArea* Agent7Area; // 0x80
	UNavArea* Agent8Area; // 0x88
	UNavArea* Agent9Area; // 0x90
	UNavArea* Agent10Area; // 0x98
	UNavArea* Agent11Area; // 0xa0
	UNavArea* Agent12Area; // 0xa8
	UNavArea* Agent13Area; // 0xb0
	UNavArea* Agent14Area; // 0xb8
	UNavArea* Agent15Area; // 0xc0
};

struct UMM_Auction_Slot_Normal {
	UMM_Slot_Inventory* m_pSlotItem; // 0x340
	UMirTextBlock* m_pTxtName; // 0x348
	UMirTextBlock* m_pTxtPrice; // 0x350
	UMirTextBlock* m_pTxtRemainTime; // 0x358
	UMirButton* m_pBtnClick; // 0x360
	TArray<UMirTextBlock*> m_arrTxtOption; // 0x368
	UMirTextBlock* m_pTxtOverOption; // 0x378
};

struct UMovieScene3DTransformTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UMM_GuildPerusePopup {
	UMirCheckBox* cb_combatpower; // 0x2f0
	UMirCheckBox* cb_level; // 0x2f8
	UMirCheckBox* cb_none; // 0x300
	UMirCheckBox* cb_recommend; // 0x308
	UMirCheckBox* cb_request; // 0x310
	UMirCheckBox* cb_invited; // 0x318
	UMM_Common_Btn_Symbol* btn_close; // 0x320
	UMM_Common_Btn* cb_confirm; // 0x328
	UMM_Common_Btn* cb_cancel; // 0x330
	UMirCanvasPanel* cp_filter; // 0x338
};

struct USubmixEffectReverbFastPreset {
	FSubmixEffectReverbFastSettings Settings; // 0x9c
};

struct UMM_Party_ExplainTextField {
	TArray<int32_t> arComboBoxStringID; // 0x2f0
	UMM_Common_ComboList* m_ComboBox; // 0x300
	USpacer* m_ComboBox_Spacer; // 0x308
	UMirEditableText* m_Editable_Explain; // 0x310
	UMirTextBlock* m_Txt_Explan; // 0x318
	UMM_Common_Btn_Translation* m_C_Btn_Translation; // 0x320
};

struct UGoogleLogin {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_Hud_Chat_BlockList_Slot {
	int32_t STRING_BTN_UNBLOCK; // 0x2e0
	UMirTextBlock* Txt_Nickname_BlockUser; // 0x2e8
	UMM_Common_Btn* Btn_UnBlock; // 0x2f0
	FString m_BlockUserName; // 0x2f8
};

struct UMovieSceneVisibilityTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UGeometryCollection {
	TArray<UMaterialInterface*> Materials; // 0x30
	ECollisionTypeEnum CollisionType; // 0x40
	EImplicitTypeEnum ImplicitType; // 0x41
	int32_t MinLevelSetResolution; // 0x44
	int32_t MaxLevelSetResolution; // 0x48
	int32_t MinClusterLevelSetResolution; // 0x4c
	int32_t MaxClusterLevelSetResolution; // 0x50
	float CollisionObjectReductionPercentage; // 0x54
	bool bMassAsDensity; // 0x58
	float Mass; // 0x5c
	float MinimumMassClamp; // 0x60
	float CollisionParticlesFraction; // 0x64
	int32_t MaximumCollisionParticles; // 0x68
	TArray<FGeometryCollectionSizeSpecificData> SizeSpecificData; // 0x70
	bool EnableRemovePiecesOnFracture; // 0x80
	TArray<UMaterialInterface*> RemoveOnFractureMaterials; // 0x88
	FGuid PersistentGuid; // 0x98
	FGuid StateGuid; // 0xa8
	int32_t BoneSelectedMaterialIndex; // 0xb8
};

struct UGeometryCacheTrack {
	float Duration; // 0x28
};

struct UMovieScene3DAttachSection {
	FName AttachSocketName; // 0x108
	FName AttachComponentName; // 0x110
	EAttachmentRule AttachmentLocationRule; // 0x118
	EAttachmentRule AttachmentRotationRule; // 0x119
	EAttachmentRule AttachmentScaleRule; // 0x11a
	EDetachmentRule DetachmentLocationRule; // 0x11b
	EDetachmentRule DetachmentRotationRule; // 0x11c
	EDetachmentRule DetachmentScaleRule; // 0x11d
};

struct UMirProgressBar {
	FProgressBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x2a8
	USlateBrushAsset* BackgroundImage; // 0x2b0
	USlateBrushAsset* FillImage; // 0x2b8
	USlateBrushAsset* MarqueeImage; // 0x2c0
	float Percent; // 0x2c8
	EProgressBarFillType BarFillType; // 0x2cc
	bool bIsMarquee; // 0x2cd
	FVector2D BorderPadding; // 0x2d0
	DelegateProperty PercentDelegate; // 0x2d8
	FLinearColor FillColorAndOpacity; // 0x2e8
	DelegateProperty FillColorAndOpacityDelegate; // 0x2f8
};

struct UWidgetBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UMaterialExpressionParticleRadius {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UOutGameLookAtData {
	FName NeckSocketName; // 0x30
	FName HeadSocketName; // 0x38
	FName RightEyeSocketName; // 0x40
	FName LeftEyeSocketName; // 0x48
	float HeadOffsetPitch; // 0x50
	float EyePitch; // 0x54
	float EyeOffset; // 0x58
	float HeadRotateAngle; // 0x5c
	float NeckYawLimit; // 0x60
	float NeckPitchLimit; // 0x64
	float HeadYawLimit; // 0x68
	float HeadPitchLimit; // 0x6c
	float EyeYawLimit; // 0x70
	float EyePitchLimit; // 0x74
};

struct UMM_Common_ComparePoint {
	UMirImage* Img_Arrow; // 0x2f0
	UMirTextBlock* Txt_LeftBlock; // 0x2f8
	UMirTextBlock* Txt_RightBlock; // 0x300
	UMirTextBlock* Txt_Point; // 0x308
};

struct UParticleModuleSize {
	FRawDistributionVector StartSize; // 0x30
};

struct UMM_UIAction_ItemInfo {
	int32_t STRID_BTN_SELL; // 0x1b0
	int32_t STRID_BTN_USE; // 0x1b4
	int32_t STRID_BTN_EQUIP; // 0x1b8
	int32_t STRID_BTN_UNSEALING; // 0x1bc
	int32_t STRID_BTN_TRANSFER; // 0x1c0
	int32_t STRID_BTN_JEWEL_EQUIP; // 0x1c4
	int32_t STRID_BTN_JEWEL_UPGRADE; // 0x1c8
	int32_t STRID_BTN_MOVE; // 0x1cc
	int32_t STRID_BTN_SMITH; // 0x1d0
	int32_t STRID_MATERIAL_POPUP; // 0x1d4
	int32_t STRID_UIMAKEITEM; // 0x1d8
	int32_t STRID_GO_NPC; // 0x1dc
	int32_t STRID_GO_UISHOP; // 0x1e0
	int32_t STRID_CONTENTSNOTOPEN; // 0x1e4
	int32_t STRID_MSG_SUCCESS_LOCK; // 0x1e8
	int32_t STRID_MSG_SUCCESS_UNLOCK; // 0x1ec
	int32_t STRID_MSG_LOCK; // 0x1f0
	int32_t STRID_MSG_UNLOCK; // 0x1f4
	int32_t STRID_MSG_LOCK_NOSALE; // 0x1f8
	int32_t STRID_MSG_LOCK_PETEQUIP; // 0x1fc
	int32_t STRING_PhaseCantUseMenu; // 0x200
	int32_t STRID_BTN_TRANS_JEWEL; // 0x204
	int32_t STRID_BTN_TRANS_PET_STONE; // 0x208
	int32_t STRID_BTN_TRANS_PET_EQUIP; // 0x20c
	int32_t STRID_BTN_TRANS_MYSTICAL; // 0x210
	int32_t STRID_BTN_CONBINE_JEWEL; // 0x214
	int32_t STRID_BTN_CONBINE; // 0x218
	int32_t STRID_BTN_MYSTICAL_CONBINE; // 0x21c
	int32_t STRID_BTN_CONBINE_PET_STONE; // 0x220
	int32_t STRID_BTN_CONBINE_PET_EQUIP; // 0x224
};

struct UMM_Relation_RewardInfo_Slot {
	UMM_Slot_Material* m_SlotMaterialReward; // 0x2e8
	UMirTextBlock* m_TxtItemName; // 0x2f0
	UMirTextBlock* m_TxtItemCount; // 0x2f8
};

struct UArrowComponent {
	FColor ArrowColor; // 0x418
	float ArrowSize; // 0x41c
	float ScreenSize; // 0x420
	char bIsScreenSizeScaled : 1; // 0x424
	char bTreatAsASprite : 1; // 0x424
};

struct UMaterialExpressionBlendMaterialAttributes {
	FMaterialAttributesInput A; // 0x40
	FMaterialAttributesInput B; // 0x58
	FExpressionInput Alpha; // 0x70
	EMaterialAttributeBlend PixelAttributeBlendType; // 0x84
	EMaterialAttributeBlend VertexAttributeBlendType; // 0x85
};

struct UMapPreviewTool {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UDieEffectNotify {
	FLinearColor BurnColor; // 0x38
};

struct UMM_Popup_DominionWithDrawal {
	UMM_Dominion_WithDrawal_MySlot* m_pWithDrawalGold; // 0x2e8
	UMM_Dominion_WithDrawal_OutSlot* m_pWithDrawalOutGold; // 0x2f0
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x2f8
	UMM_Common_Btn* m_pBtnOut; // 0x300
	UMirTextBlock* m_pTxtDominionName; // 0x308
	UMirTextBlock* m_pTxtTitle; // 0x310
	UMirTextBlock* m_pTxtOut; // 0x318
};

struct UMM_UIAction_ItemCollection {
	int32_t m_PercentFormatStrID; // 0x68
	int32_t m_ValueFormatStrID; // 0x6c
	int32_t m_CharStrID; // 0x70
	int32_t m_AccountStrID; // 0x74
	int32_t m_GradeWarningStr; // 0x78
	int32_t m_GradeWithTradeWarningStr; // 0x7c
	int32_t m_WarningStrID; // 0x80
	int32_t m_CheckStrID; // 0x84
	int32_t m_CancelStrID; // 0x88
	int32_t m_TimeFormatStrID; // 0x8c
};

struct UMaterialExpressionRotator {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	float CenterX; // 0x68
	float CenterY; // 0x6c
	float Speed; // 0x70
	uint32_t ConstCoordinate; // 0x74
};

struct UNetDriver {
	FString NetConnectionClassName; // 0x30
	FString ReplicationDriverClassName; // 0x40
	int32_t MaxDownloadSize; // 0x50
	char bClampListenServerTickRate : 1; // 0x54
	int32_t NetServerMaxTickRate; // 0x58
	int32_t MaxNetTickRate; // 0x5c
	int32_t MaxInternetClientRate; // 0x60
	int32_t MaxClientRate; // 0x64
	float ServerTravelPause; // 0x68
	float SpawnPrioritySeconds; // 0x6c
	float RelevantTimeout; // 0x70
	float KeepAliveTime; // 0x74
	float InitialConnectTimeout; // 0x78
	float ConnectionTimeout; // 0x7c
	float TimeoutMultiplierForUnoptimizedBuilds; // 0x80
	bool bNoTimeouts; // 0x84
	bool bNeverApplyNetworkEmulationSettings; // 0x85
	UNetConnection* ServerConnection; // 0x88
	TArray<UNetConnection*> ClientConnections; // 0x90
	int32_t RecentlyDisconnectedTrackingTime; // 0x100
	UWorld* World; // 0x140
	UPackage* WorldPackage; // 0x148
	UObject* NetConnectionClass; // 0x170
	UObject* ReplicationDriverClass; // 0x178
	UProperty* RoleProperty; // 0x180
	UProperty* RemoteRoleProperty; // 0x188
	FName NetDriverName; // 0x190
	TArray<FChannelDefinition> ChannelDefinitions; // 0x198
	TMap<FName, FChannelDefinition> ChannelDefinitionMap; // 0x1a8
	TArray<UChannel*> ActorChannelPool; // 0x1f8
	float Time; // 0x210
	UReplicationDriver* ReplicationDriver; // 0x6e0
};

struct UMM_GuildSupply {
	UMM_CommonVerticalTabSet* vertical_set; // 0x2f0
	UMirCanvasPanel* cp_report; // 0x2f8
	UMirCanvasPanel* cp_gift; // 0x300
	UMirScrollBox* sb_report; // 0x308
	UMM_Common_Btn* btn_report_all_recv; // 0x310
	UMirListView* lv_gift; // 0x318
	UMirScrollBox* sb_gift; // 0x320
	UMirTextBlock* txt_gift_level; // 0x328
	UMirProgressBar* pb_gift_exp; // 0x330
	UMirTextBlock* txt_gift_exp; // 0x338
	UMM_Inventory_Tab* lst_tab[0x2]; // 0x340
	UMirTextBlock* txt_box_name; // 0x350
	UMirImage* img_box; // 0x358
	UHorizontalBox* hb_box_time; // 0x360
	UMM_Common_Btn* btn_box_open; // 0x368
	UMirCanvasPanel* cp_box_key; // 0x370
	UMirTextBlock* txt_box_key; // 0x378
	UMirTextBlock* txt_box_time; // 0x380
	UMirProgressBar* pb_box; // 0x388
	UMM_Common_Btn* btn_all_recv; // 0x390
	UMM_Common_Btn* btn_delete; // 0x398
	UMM_Common_Btn* btn_cheat; // 0x3a0
	UMirImage* Img_Indicator; // 0x3a8
};

struct UMM_Hud_Chat_Indicator {
	EChatIndicatorType IndicatorType; // 0x2f0
	UMirTextBlock* txt_count; // 0x2f8
};

struct UMM_B_Mastery {
	float timeMasteryLevelUp; // 0x300
	UPanelWidget* mGridPrograssBar; // 0x308
	UMirProgressBar* mProgTraining; // 0x310
	UMirTextBlock* mTxtTrainingProg; // 0x318
	UMirTextBlock* mTxtCombatPoint; // 0x320
	UMM_Mastery_Left* mMasteryLeft; // 0x328
	UMM_Mastery_Slot_Info* mMasterySlotInfo; // 0x330
	UMM_Mastery_Info* mMasteryInfo; // 0x338
	UImage* m_Img_RenderTarget; // 0x340
	UImage* m_TargetPos; // 0x348
};

struct AMMCheckMacro {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UAIDataProvider_Random {
	float Min; // 0x40
	float Max; // 0x44
	char bInteger : 1; // 0x48
};

struct UParticleModuleCollisionBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct USplineComponent {
	FSplineCurves SplineCurves; // 0x418
	FInterpCurveVector SplineInfo; // 0x480
	FInterpCurveQuat SplineRotInfo; // 0x498
	FInterpCurveVector SplineScaleInfo; // 0x4b0
	FInterpCurveFloat SplineReparamTable; // 0x4c8
	bool bAllowSplineEditingPerInstance; // 0x4e0
	int32_t ReparamStepsPerSegment; // 0x4e4
	float Duration; // 0x4e8
	bool bStationaryEndpoints; // 0x4ec
	bool bSplineHasBeenEdited; // 0x4ed
	bool bModifiedByConstructionScript; // 0x4ee
	bool bInputSplinePointsToConstructionScript; // 0x4ef
	bool bDrawDebug; // 0x4f0
	bool bClosedLoop; // 0x4f1
	bool bLoopPositionOverride; // 0x4f2
	float LoopPosition; // 0x4f4
	FVector DefaultUpVector; // 0x4f8
};

struct APlaneReflectionCapture {
	UReflectionCaptureComponent* CaptureComponent; // 0x218
};

struct UVectorFieldAnimated {
	UTexture2D* Texture; // 0x48
	EVectorFieldConstructionOp ConstructionOp; // 0x50
	int32_t VolumeSizeX; // 0x54
	int32_t VolumeSizeY; // 0x58
	int32_t VolumeSizeZ; // 0x5c
	int32_t SubImagesX; // 0x60
	int32_t SubImagesY; // 0x64
	int32_t FrameCount; // 0x68
	float FramesPerSecond; // 0x6c
	char bLoop : 1; // 0x70
	UVectorFieldStatic* NoiseField; // 0x78
	float NoiseScale; // 0x80
	float NoiseMax; // 0x84
};

struct AMM_LoginState {
	APatchActor* m_PatchActor; // 0x260
};

struct UMM_ServerVisit_WaypointList_Slot {
	UMirTextBlock* m_Txt_Name; // 0x2f0
	UMirImage* m_Img_Selected; // 0x2f8
	UPanelWidget* m_Grid_Disabled; // 0x300
	UMirButton* m_Btn_Main; // 0x308
};

struct UMM_Slot_Inventory {
	UMirImage* m_Img_GradeBgEffect; // 0x3f0
	UMirImage* m_ImgDummy; // 0x3f8
	UMirImage* m_ImgDisabled; // 0x400
	UMirImage* m_ImgEquiped; // 0x408
	UMirImage* m_ImgDeckEquiped; // 0x410
	UMirImage* m_ImgPetItemEquiped; // 0x418
	UMirImage* m_ImgPetItemDeckEquiped; // 0x420
	UMirImage* m_ImgRegistered; // 0x428
	UMirImage* m_Imgindicator; // 0x430
	UMirImage* m_Img_Attribution; // 0x438
	UMirImage* m_ImgSelected; // 0x440
	UMirImage* m_ImgChecked; // 0x448
	UMirImage* m_ImgChecked_Material; // 0x450
	UMirImage* m_ImgTierBg; // 0x458
	UMirImage* m_ImgTransfer; // 0x460
	UMirTextBlock* m_TxtSmeltingLevel; // 0x468
	UMirTextBlock* m_TxtOtherClass; // 0x470
	UMirTextBlock* m_TxtCount; // 0x478
	UHorizontalBox* m_HrzCombatPoint; // 0x480
	UMirTextBlock* m_TxtCombatPoint; // 0x488
	UMirImage* m_Image_CoolTime; // 0x490
	UMirTextBlock* m_Txt_CoolTime; // 0x498
	UPanelWidget* m_PanEffect_RecommendTransfer; // 0x4a0
	UEffectWidgetBase* m_pRecommendTransferEffect; // 0x4a8
	UMirTextBlock* m_Txt_MaxLevel; // 0x4b0
	UMirTextBlock* m_TxtGrade; // 0x4b8
	UMirTextBlock* m_Txt_CenterText; // 0x4c0
	UMirImage* m_Img_Durability_Icon; // 0x4c8
	UMirImage* m_Img_Lock; // 0x4d0
	UMirImage* m_Img_UserLock; // 0x4d8
	UMirImage* m_Img_UserLock_Stack; // 0x4e0
	UMirImage* m_Img_Origin; // 0x4e8
	UTutorialHighlightWidget* tutorial_highlight; // 0x4f0
};

struct UMaterialExpressionPrecomputedAOMask {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UPetCameraData {
	float PetCameraFOV; // 0x30
	float FloorScale; // 0x34
	FVector FloorLocation; // 0x38
	FRotator FloorRotation; // 0x44
	TMap<int32_t, FPetPlacement> MAP_PetPlacement; // 0x50
};

struct UMaterialBillboardComponent {
	TArray<FMaterialSpriteElement> Elements; // 0x418
};

struct ALandscapeMeshProxyActor {
	ULandscapeMeshProxyComponent* LandscapeMeshProxyComponent; // 0x218
};

struct ALevel_Logo_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
};

struct UMM_VehicleInfo {
	AVehicleRenderRoom* m_pRenderRoom; // 0x2f0
	UMM_UI_Drag* m_UI_Drag; // 0x2f8
};

struct UMM_SleepMode {
	UWidgetAnimation* m_AniFade; // 0x2f0
	int32_t m_iMSTRID_OffSlidSleepMode; // 0x2f8
	TArray<FBrushObject> m_arrPlayerStateIcon; // 0x300
	int32_t m_QuestIconID; // 0x310
	int32_t m_HpIconID; // 0x314
	int32_t m_HpPotionIconID; // 0x318
	int32_t m_MpPotionIconID; // 0x31c
	int32_t m_InvenIconID; // 0x320
	int32_t m_AddInvenIconID; // 0x324
	int32_t m_ExpIconID; // 0x328
	UMM_DeviceInfo* m_DeviceInfo; // 0x330
	UMirTextBlock* m_pTextHour; // 0x338
	UMirTextBlock* m_pTextMinute; // 0x340
	UMirTextBlock* m_pTextOffSlideSleepMode; // 0x348
	UMirImage* m_pImgPlayerState; // 0x350
	UMirTextBlock* m_pTextPlayerState; // 0x358
	UMirImage* m_pImgQuest; // 0x360
	UMirTextBlock* m_pTextQuest; // 0x368
	UMirImage* m_pImgCurrectHP; // 0x370
	UMirTextBlock* m_pTextCurrectHP; // 0x378
	UMirTextBlock* m_pTextPotionCount; // 0x380
	UMirTextBlock* m_pTextInvenCount; // 0x388
	UMirTextBlock* m_pTextMessageCount; // 0x390
	UMirImage* m_pImgCurrentHP; // 0x398
	UMirImage* m_pImgPotion; // 0x3a0
	UMirImage* m_pImgInven; // 0x3a8
	UMirImage* m_pImgMessage; // 0x3b0
	UMirImage* m_pImgMpPotion; // 0x3b8
	UMirTextBlock* m_pTextMpPotion; // 0x3c0
	UMirImage* m_pImgAddItem; // 0x3c8
	UMirTextBlock* m_pTextAddItem; // 0x3d0
	UMirImage* m_pImgExp; // 0x3d8
	UMirTextBlock* m_pTextExp; // 0x3e0
	UMirTextBlock* m_pTextExpRatio; // 0x3e8
	float m_fStopSliderRatio_ExcuteRatio; // 0x40c
	float m_fStopSliderRatio_AbleRatio; // 0x410
	float m_fStopSlider_ActiveTextOpacity; // 0x414
	UMirSlider* m_StopSlider; // 0x420
	UWidget* m_Img_StopSliderBg; // 0x428
};

struct UMovieScene3DAttachTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x58
};

struct UMM_VehicleListSlot {
	UMirImage* m_Img_Icon; // 0x2f8
	UMirImage* m_Img_Locked; // 0x300
	UMirTextBlock* m_Txt_Name; // 0x308
	UPanelWidget* m_Hrz_Cost; // 0x310
	UMirImage* m_Img_Cost; // 0x318
	UMirTextBlock* m_Txt_Cost; // 0x320
	UMirImage* m_Img_Selected; // 0x328
	UMirImage* m_Img_Indicator; // 0x330
	UButton* m_Btn_Select; // 0x338
	UMirImage* m_Img_Equip; // 0x340
	UMirImage* m_Img_Have; // 0x348
	UMirCanvasPanel* m_GradePanel; // 0x350
	UMirTextBlock* m_Txt_Grade; // 0x358
	TArray<UMM_Popup_Appearance_Slot*> m_Arr_Slot; // 0x360
	UMirCanvasPanel* m_Canvas_PurchaseAble; // 0x370
	UMirTextBlock* m_Txt_PurchaseAble; // 0x378
	UMirTextBlock* m_Txt_PurchaseAbleValue; // 0x380
	int32_t ICONID_EQUIP; // 0x388
	int32_t ICONID_OWNED; // 0x38c
};

struct UFirebaseFutureVoid {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct UInterpTrackVectorProp {
	FName PropertyName; // 0x90
};

struct UMM_Map_NameBtn {
	UMirTextBlock* m_TxtMapName; // 0x2e8
	UMirButton* m_BtnMain; // 0x2f0
};

struct UAvfMediaSettings {
	bool NativeAudioOut; // 0x28
};

struct UMM_Common_Btn_Symbol {
	UObject* m_SymbolIcon; // 0x350
	EAlignmentType m_eSymbolIconAlignment; // 0x358
	bool m_bUseCustomSize; // 0x359
	FVector2D m_vCustomSize; // 0x35c
	float m_fCustomAngle; // 0x364
	UMirImage* m_ImgSymbolIcon; // 0x368
};

struct UMM_PopupGuildSearchEdit {
	UMirEditableText* edit_txt_search; // 0x2e0
	UMM_Common_Btn* Btn_Cancel; // 0x2e8
	UMM_Common_Btn* btn_search; // 0x2f0
	UMM_Common_Btn_Symbol* btn_close; // 0x2f8
};

struct UMM_Slot_DetailRelationQuest {
	int32_t m_EvidenceToStr; // 0x2e8
	int32_t m_DoNotOpenToStr; // 0x2ec
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMirTextBlock* m_Txt_Number; // 0x2f8
	UMirRichTextBlock* m_Txt_Detail; // 0x300
	UPanelWidget* m_Hint_Open; // 0x308
	UPanelWidget* m_Hint_Lock; // 0x310
	UMirTextBlock* m_Txt_Close; // 0x318
	UMirImage* m_Img_Key; // 0x320
	UMirImage* m_Img_Complete; // 0x328
	UMirTextBlock* m_Txt_Complete; // 0x330
	UMirTextBlock* m_Txt_Purpose; // 0x338
};

struct UMM_ItemMake_Switch {
	UMirButton* m_BtnSwitch; // 0x2e0
	UWidgetAnimation* m_AniOn; // 0x2e8
	int32_t MaterialSlotIndex; // 0x2f0
};

struct UParticleSystemComponent {
	UParticleSystem* Template; // 0x418
	TArray<UMaterialInterface*> EmitterMaterials; // 0x420
	TArray<USkeletalMeshComponent*> SkelMeshComponents; // 0x430
	char bResetOnDetach : 1; // 0x441
	char bUpdateOnDedicatedServer : 1; // 0x441
	char bAllowRecycling : 1; // 0x441
	char bAutoManageAttachment : 1; // 0x441
	char bWarmingUp : 1; // 0x442
	char bOverrideLODMethod : 1; // 0x442
	char bSkipUpdateDynamicDataDuringTick : 1; // 0x442
	ParticleSystemLODMethod LODMethod; // 0x44d
	EParticleSignificanceLevel RequiredSignificance; // 0x44e
	TArray<FParticleSysParam> InstanceParameters; // 0x450
	FScriptMulticastDelegate OnParticleSpawn; // 0x460
	FScriptMulticastDelegate OnParticleBurst; // 0x470
	FScriptMulticastDelegate OnParticleDeath; // 0x480
	FScriptMulticastDelegate OnParticleCollide; // 0x490
	FVector OldPosition; // 0x4a0
	FVector PartSysVelocity; // 0x4ac
	float WarmupTime; // 0x4b8
	float WarmupTickRate; // 0x4bc
	float SecondsBeforeInactive; // 0x4c4
	float MaxTimeBeforeForceUpdateTransform; // 0x4cc
	TArray<UParticleSystemReplay*> ReplayClips; // 0x4f0
	float CustomTimeDilation; // 0x508
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x560
	FName AutoAttachSocketName; // 0x568
	EAttachmentRule AutoAttachLocationRule; // 0x570
	EAttachmentRule AutoAttachRotationRule; // 0x571
	EAttachmentRule AutoAttachScaleRule; // 0x572
	FScriptMulticastDelegate OnSystemFinished; // 0x5a0
};

struct UFieldSystemMetaDataProcessingResolution {
	EFieldResolutionType ResolutionType; // 0xb0
};

struct UNodeMappingContainer {
	TMap<FName, FNodeItem> SourceItems; // 0x28
	TMap<FName, FNodeItem> TargetItems; // 0x78
	TMap<FName, FName> SourceToTarget; // 0xc8
	UObject* SourceAsset; // 0x118
	UObject* TargetAsset; // 0x140
};

struct UThrobber {
	int32_t NumberOfPieces; // 0x108
	bool bAnimateHorizontally; // 0x10c
	bool bAnimateVertically; // 0x10d
	bool bAnimateOpacity; // 0x10e
	USlateBrushAsset* PieceImage; // 0x110
	FSlateBrush Image; // 0x118
};

struct UMM_Slot_CostumeCollection {
	UMirImage* Img_Icon; // 0x2e0
	UMirTextBlock* Txt_Name; // 0x2e8
	TArray<UHorizontalBox*> Panel_Ability; // 0x2f0
	TArray<UMirImage*> Img_Ability; // 0x300
	TArray<UMirTextBlock*> Txt_Ability; // 0x310
	UMM_Common_Btn* btn_equip; // 0x320
	int32_t m_CostumeId; // 0x328
	COSTUME_PARTS m_CostumePart; // 0x32c
	int32_t STR_ID_EQUIP; // 0x330
	int32_t STR_ID_UNEQUIP; // 0x334
	int32_t STRING_MSG_UNEQUIP_DEFAULT_COSTUME; // 0x338
	UMirButton* m_DefaultBtn; // 0x340
	UMirCanvasPanel* m_DefaultBtnPanel; // 0x348
};

struct UMaterialExpressionLandscapeLayerSample {
	FName ParameterName; // 0x40
	float PreviewWeight; // 0x48
	FGuid ExpressionGUID; // 0x4c
};

struct UMM_QuickSlot_Option_Switch {
	int32_t m_iSwitch; // 0x2e8
	TArray<int32_t> SwitchStringID; // 0x2f0
	FSlateColor m_SelectFontColor; // 0x300
	FSlateColor m_UnSelectFontColor; // 0x328
	UTextBlock* m_Text_Name[0x2]; // 0x350
	UMirImage* m_Img_Select[0x2]; // 0x360
	UMirButton* m_Btn_Main; // 0x370
};

struct UMM_GameOption_InGame_Battle {
	UMM_GameOption_Select* Option_AutoBattleRange; // 0x2e0
	UMM_GameOption_Select* Option_AutoSkill; // 0x2e8
	UMM_GameOption_Select* Option_CameraShakeScale; // 0x2f0
	UMM_GameOption_Switch* Option_LeaderCenteredBattle; // 0x2f8
	UMM_GameOption_Switch* Option_AutoReturnOnDeath; // 0x300
	UMM_GameOption_Switch* Option_PartyTargetShare; // 0x308
	UMM_GameOption_Switch* Option_AutoCounterAttack; // 0x310
	UMM_GameOption_Switch* Option_AutoLockOn; // 0x318
	UMM_GameOption_Switch* Option_BattleAutoCamera; // 0x320
	UMM_GameOption_Switch* Option_SkillDarkChange; // 0x328
	UMM_GameOption_Switch* Option_SkillCameraZoom; // 0x330
};

struct UMM_Popup_ItemEquip {
	UMM_Slot_Registered_Circle* Slot_FromItem; // 0x2f0
	UMM_Slot_Registered_Circle* Slot_ToItem; // 0x2f8
	UMM_AbilityState_Item* BattlePointSlot; // 0x300
	UMirTextBlock* Txt_FromItemName; // 0x308
	UMirTextBlock* Txt_ToItemName; // 0x310
	UMirRichTextBlock* RichTxt_InfoMessage; // 0x318
	UMM_Common_Btn_Symbol* btn_close; // 0x320
	UMM_Common_Btn* Btn_Cancel; // 0x328
	UMM_Common_Btn* btn_equip; // 0x330
	UMirTextBlock* m_Txt_BattlePointName; // 0x338
	UMirTextBlock* m_Txt_BattlePoint; // 0x340
	UMirImage* m_Img_Deco_Arrow; // 0x348
	UMirTextBlock* m_Txt_AfterValue; // 0x350
	UMM_Common_ComparePoint* m_ComparePoint; // 0x358
	UMirImage* m_Img_Option_Grade; // 0x360
	int32_t LEVEL_COUNT_EFFECT; // 0x368
	int32_t TARGET_SLOT_LOOP_EFFECT; // 0x36c
};

struct UMovieSceneEventRepeaterSection {
	FMovieSceneEvent Event; // 0xe0
};

struct AMeshMergeCullingVolume {
	EBrushType BrushType; // 0x218
	FColor BrushColor; // 0x21c
	int32_t PolyFlags; // 0x220
	char bColored : 1; // 0x224
	char bSolidWhenSelected : 1; // 0x224
	char bPlaceableFromClassBrowser : 1; // 0x224
	char bNotForClientOrServer : 1; // 0x224
	UModel* Brush; // 0x228
	UBrushComponent* BrushComponent; // 0x230
	char bInManipulation : 1; // 0x238
	TArray<FGeomSelection> SavedSelections; // 0x240
};

struct ULineBatchComponent {
	float MinDrawDistance; // 0x228
	float LDMaxDrawDistance; // 0x22c
	float CachedMaxDrawDistance; // 0x230
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x234
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x235
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x236
	ELightmapType LightmapType; // 0x237
	char bUseMaxLODAsImposter : 1; // 0x238
	float CachedBoundsSphereDiameter; // 0x23c
	char bBatchImpostersAsInstances : 1; // 0x240
	char bNeverDistanceCull : 1; // 0x240
	char bAlwaysCreatePhysicsState : 1; // 0x240
	char bGenerateOverlapEvents : 1; // 0x240
	char bMultiBodyOverlap : 1; // 0x241
	char bTraceComplexOnMove : 1; // 0x241
	char bReturnMaterialOnMove : 1; // 0x241
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x241
	char bAllowCullDistanceVolume : 1; // 0x241
	char bHasMotionBlurVelocityMeshes : 1; // 0x241
	char bVisibleInReflectionCaptures : 1; // 0x241
	char bVisibleInRayTracing : 1; // 0x241
	char bRenderInMainPass : 1; // 0x242
	char bRenderInDepthPass : 1; // 0x242
	char bReceivesDecals : 1; // 0x242
	char bOwnerNoSee : 1; // 0x242
	char bOnlyOwnerSee : 1; // 0x242
	char bTreatAsBackgroundForOcclusion : 1; // 0x242
	char bUseAsOccluder : 1; // 0x242
	char bSelectable : 1; // 0x242
	char bForceMipStreaming : 1; // 0x243
	char bHasPerInstanceHitProxies : 1; // 0x243
	char CastShadow : 1; // 0x243
	char bAffectDynamicIndirectLighting : 1; // 0x243
	char bAffectDistanceFieldLighting : 1; // 0x243
	char bCastDynamicShadow : 1; // 0x243
	char bCastStaticShadow : 1; // 0x243
	char bCastVolumetricTranslucentShadow : 1; // 0x243
	char bSelfShadowOnly : 1; // 0x244
	char bCastFarShadow : 1; // 0x244
	char bCastInsetShadow : 1; // 0x244
	char bCastCinematicShadow : 1; // 0x244
	char bCastHiddenShadow : 1; // 0x244
	char bCastShadowAsTwoSided : 1; // 0x244
	char bLightAsIfStatic : 1; // 0x244
	char bLightAttachmentsAsGroup : 1; // 0x244
	char bExcludeFromLightAttachmentGroup : 1; // 0x245
	char bReceiveMobileCSMShadows : 1; // 0x245
	char bSingleSampleShadowFromStationaryLights : 1; // 0x245
	char bIgnoreRadialImpulse : 1; // 0x245
	char bIgnoreRadialForce : 1; // 0x245
	char bApplyImpulseOnDamage : 1; // 0x245
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x245
	char AlwaysLoadOnClient : 1; // 0x245
	char AlwaysLoadOnServer : 1; // 0x246
	char bUseEditorCompositing : 1; // 0x246
	char bRenderCustomDepth : 1; // 0x246
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x247
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x249
	FLightingChannels LightingChannels; // 0x24a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x24b
	int32_t CustomDepthStencilValue; // 0x24c
	FCustomPrimitiveData CustomPrimitiveData; // 0x250
	int32_t TranslucencySortPriority; // 0x260
	int32_t VisibilityId; // 0x264
	char bIgnoreOcclusionVolume : 1; // 0x268
	int32_t OcclusionVolumeId; // 0x26c
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x270
	uint8_t VirtualTextureLodBias; // 0x280
	uint8_t VirtualTextureCullMips; // 0x281
	uint8_t VirtualTextureMinCoverage; // 0x282
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x283
	float LpvBiasMultiplier; // 0x288
	float BoundsScale; // 0x294
	TArray<AActor*> MoveIgnoreActors; // 0x2a8
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2b8
	FBodyInstance BodyInstance; // 0x2d8
	FScriptMulticastDelegate OnComponentHit; // 0x3e8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3e9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3ea
	FScriptMulticastDelegate OnComponentWake; // 0x3eb
	FScriptMulticastDelegate OnComponentSleep; // 0x3ec
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3ee
	FScriptMulticastDelegate OnEndCursorOver; // 0x3ef
	FScriptMulticastDelegate OnClicked; // 0x3f0
	FScriptMulticastDelegate OnReleased; // 0x3f1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3f2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3f3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3f4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3f5
	UPrimitiveComponent* LODParentPrimitive; // 0x410
};

struct UReflectionCaptureComponent {
	UBillboardComponent* CaptureOffsetComponent; // 0x220
	EReflectionSourceType ReflectionSourceType; // 0x228
	UTextureCube* Cubemap; // 0x230
	float SourceCubemapAngle; // 0x238
	float Brightness; // 0x23c
	FVector CaptureOffset; // 0x240
	FGuid MapBuildDataId; // 0x24c
};

struct UMM_Dominion_Occupation {
	UMirTextBlock* m_pTxtTitle; // 0x2f0
	UMirImage* m_pImgCastleBg; // 0x2f8
	UMM_Common_ToolTipBtn* m_pCommToolTip; // 0x300
	UMM_Common_ToolTipBtn* m_pCommGuideBtn; // 0x308
	UMirTextBlock* m_pTxtRemainOpenSiege; // 0x310
	UMirTextBlock* m_pTxtRemainStartSiege; // 0x318
	UMM_Common_Btn_Symbol* m_pBtnRefresh; // 0x320
	UMM_Common_Btn* m_pBtnMain; // 0x328
	UMirCanvasPanel* m_pCanvasOccupation; // 0x330
	UMirCanvasPanel* m_pCanvasNormal; // 0x338
	TArray<UMM_Occupation_AuctionProgress*> m_ArrAuctionProgressList; // 0x340
	UMirCanvasPanel* m_pCanvasAuctionTitle; // 0x350
	UMM_GuildMemberPortrait* m_pMainAdminPortrait; // 0x368
	UMirTextBlock* m_pTxtMainAdminTitle; // 0x370
	UMirTextBlock* m_pTxtMainAdminName; // 0x378
	TArray<UMM_DominionMemberSlot*> m_arrSubAdmin; // 0x380
};

struct UMM_Popup_UnlockedPetStatInfo {
	FLinearColor m_StatColor; // 0x2e0
	FMargin m_StatPadding; // 0x2f0
	UMirButton* m_Btn_Screen; // 0x300
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x308
	UMirScrollBox* m_Scr_Stat; // 0x310
	UWidget* m_EmptyNotice; // 0x318
};

struct UMirColorData {
	FLinearColor Text_Default; // 0x30
	FLinearColor Text_Good; // 0x40
	FLinearColor Text_Bad; // 0x50
	FLinearColor Text_Unabled; // 0x60
	TArray<FLinearColor> m_arItemGrade; // 0x70
	FLinearColor Gem_Red; // 0x80
	FLinearColor Gem_SkyBlue; // 0x90
	FLinearColor Gem_Yellow; // 0xa0
	FLinearColor Gem_Blue; // 0xb0
	FLinearColor Gem_Brown; // 0xc0
	FLinearColor Gem_Green; // 0xd0
	FLinearColor Gem_BluishViolet; // 0xe0
	FLinearColor Gem_YellowGreen; // 0xf0
	FLinearColor Gem_Purple; // 0x100
	FLinearColor QuestGrade_S; // 0x110
	FLinearColor QuestGrade_A; // 0x120
	FLinearColor QuestGrade_B; // 0x130
	FLinearColor QuestGrade_C; // 0x140
	FLinearColor QuestGrade_D; // 0x150
	FLinearColor Goods_Slot_CostMax; // 0x160
	FLinearColor TotalMenu_Slot_Default; // 0x170
	FLinearColor TotalMenu_Slot_Selected; // 0x180
	FLinearColor ServerCongestion_Normal; // 0x190
	FLinearColor ServerCongestion_Busy; // 0x1a0
	FLinearColor ServerCongestion_Saturation; // 0x1b0
	FLinearColor ServerState_Closed; // 0x1c0
	FLinearColor HUD_PartyTab_Level; // 0x1d0
	FLinearColor PKArea_TextColor; // 0x1e0
	FLinearColor SafetyArea_TextColor; // 0x1f0
	FLinearColor PKNameColor_Lawful; // 0x200
	FLinearColor PKNameColor_Chaotic; // 0x210
	FLinearColor PKNameColor_Assault; // 0x220
	FLinearColor PKNameColor_Aggressor; // 0x230
	FLinearColor NameColor_Default; // 0x240
	FLinearColor NameColor_Enemy; // 0x250
	FLinearColor NameColor_SameParty; // 0x260
	FLinearColor NameColor_GuildBasic; // 0x270
	FLinearColor NameColor_SameGuild; // 0x280
	FLinearColor NameColor_AllyGuild; // 0x290
	FLinearColor NameColor_ProclaimGuild; // 0x2a0
	FLinearColor NameColor_GuildWanted; // 0x2b0
	FLinearColor NameColor_Death; // 0x2c0
	FLinearColor NameColor_OtherServer; // 0x2d0
	FLinearColor HpBarColor_Mine; // 0x2e0
	FLinearColor HpBarColor_Other; // 0x2f0
	FLinearColor HpBarColor_MyGuild; // 0x300
	FLinearColor HpBarColor_Ally; // 0x310
	FLinearColor HpBarColor_Party; // 0x320
	FLinearColor HpBarColor_Enemy; // 0x330
	FLinearColor NPCNameColor_Ally; // 0x340
	FLinearColor NPCNameColor_Enemy; // 0x350
	FLinearColor ProgressBarColor_Red; // 0x360
	FLinearColor ProgressBarColor_Green; // 0x370
	FLinearColor Skill_Slot_Passive_1; // 0x380
	FLinearColor Skill_Slot_Passive_2; // 0x390
	FLinearColor Skill_Slot_Passive_3; // 0x3a0
	FLinearColor Skill_Slot_Passive_4; // 0x3b0
	FLinearColor HUD_Damage_MySelf; // 0x3c0
	FLinearColor HUD_Damage_Enemy; // 0x3d0
	FLinearColor HUD_Damage_Critical_MySelf; // 0x3e0
	FLinearColor HUD_Damage_Critical_Enemy; // 0x3f0
	FLinearColor HUD_Damage_Smite_MySelf; // 0x400
	FLinearColor HUD_Damage_Smite_Enemy; // 0x410
	FLinearColor HUD_AttributeDamage_MySelf; // 0x420
	FLinearColor HUD_AttributeDamage_Enemy; // 0x430
	FLinearColor HUD_AttributeDamage_Critical_MySelf; // 0x440
	FLinearColor HUD_AttributeDamage_Critical_Enemy; // 0x450
	FLinearColor HUD_Dodge_MySelf; // 0x460
	FLinearColor HUD_Dodge_Enemy; // 0x470
	FLinearColor HUD_Miss_MySelf; // 0x480
	FLinearColor HUD_Miss_Enemy; // 0x490
	FLinearColor HUD_Immune_MySelf; // 0x4a0
	FLinearColor HUD_Immune_Enemy; // 0x4b0
	FLinearColor HUD_Absorb_MySelf; // 0x4c0
	FLinearColor HUD_Absorb_Enemy; // 0x4d0
	FLinearColor HUD_ProtectPVP_MySelf; // 0x4e0
	FLinearColor HUD_ProtectPVP_Enemy; // 0x4f0
	FLinearColor HUD_Resist_MySelf; // 0x500
	FLinearColor HUD_Resist_Enemy; // 0x510
	FLinearColor HUD_CCResist_MySelf; // 0x520
	FLinearColor HUD_CCResist_Enemy; // 0x530
	FLinearColor HUD_HP_Plus; // 0x540
	FLinearColor HUD_MP_Plus; // 0x550
	FLinearColor HUD_MP_Minus; // 0x560
	FLinearColor HUD_Spirit_Plus; // 0x570
	FLinearColor HUD_Spirit_Minus; // 0x580
	FLinearColor HUD_EXP_Plus; // 0x590
	FLinearColor HUD_Gold_Plus; // 0x5a0
	FLinearColor HUD_Combo_2; // 0x5b0
	FLinearColor HUD_Combo_11; // 0x5c0
	FLinearColor HUD_Combo_101; // 0x5d0
	FLinearColor HUD_Friend_Buff; // 0x5e0
	FLinearColor HUD_Friend_Debuff; // 0x5f0
	FLinearColor HUD_Enemy_Deuff; // 0x600
	FLinearColor HUD_Friend_CCState; // 0x610
	FLinearColor HUD_Enemy_CCState; // 0x620
	FLinearColor ChannelState_Good; // 0x630
	FLinearColor ChannelState_Normal; // 0x640
	FLinearColor ChannelState_Busy; // 0x650
	FLinearColor ChannelState_Heavy; // 0x660
	FLinearColor ChannelState_Full; // 0x670
	TMap<int32_t, FLinearColor> GrowthListColor; // 0x680
	TMap<EPKModeType, FLinearColor> PKModeListColor; // 0x6d0
	FLinearColor ChatChannel_Local; // 0x720
	FLinearColor ChatChannel_World; // 0x730
	FLinearColor ChatChannel_Party; // 0x740
	FLinearColor ChatChannel_Whisper; // 0x750
	FLinearColor ChatChannel_Guild; // 0x760
	FLinearColor ChatChannel_System; // 0x770
	FLinearColor Guild_PermissionJoin; // 0x780
	FLinearColor Guild_FreeJoin; // 0x790
	FLinearColor Guild_InviteJoin; // 0x7a0
	FLinearColor Guild_Uniform_SameGuild; // 0x7b0
	FLinearColor Guild_Uniform_AllianceGuild; // 0x7c0
	FLinearColor Guild_Uniform_EnemyGuild; // 0x7d0
	FLinearColor Guild_Uniform_EnemyAllianceGuild; // 0x7e0
	FLinearColor Lucky_Normal; // 0x7f0
	FLinearColor Lucky_Excellent; // 0x800
	FLinearColor Lucky_Great; // 0x810
	FLinearColor Lucky_Fever; // 0x820
	FLinearColor Mastery_LimitStatusValue_Cur; // 0x830
	FLinearColor Mastery_LimitStatusValue_Next; // 0x840
	FLinearColor Mastery_Selected_Slot_Not_Limit; // 0x850
	FLinearColor Mastery_Selected_Slot_On_Limit; // 0x860
	FLinearColor ContentsGetItem_Title_Contents; // 0x870
	FLinearColor ContentsRandomOptionGradeD; // 0x880
	FLinearColor ContentsRandomOptionGradeC; // 0x890
	FLinearColor ContentsRandomOptionGradeB; // 0x8a0
	FLinearColor ContentsRandomOptionGradeA; // 0x8b0
	FLinearColor ContentsRandomOptionGradeS; // 0x8c0
	FLinearColor ContentsRandomOptionGradeSS; // 0x8d0
	FLinearColor ContentsRandomOptionGradeSSS; // 0x8e0
	FLinearColor ContentsRandomOptionPassive; // 0x8f0
	FLinearColor SectorGrade_High; // 0x900
	FLinearColor SectorGrade_Rare; // 0x910
	FLinearColor SectorGrade_Hero; // 0x920
	FLinearColor SectorGrade_Legend; // 0x930
	FLinearColor WinTarget_Seal; // 0x940
	FLinearColor WinTarget_Protection; // 0x950
	FLinearColor WinTarget_UnProtection; // 0x960
	FLinearColor WinTarget_UnProtection_MyGuild; // 0x970
	FLinearColor WinTarget_UnProtection_OtherGuild; // 0x980
	FLinearColor Connect_State_On; // 0x990
	FLinearColor Connect_State_Off; // 0x9a0
	FLinearColor NAME_FriendlyColor; // 0x9b0
	FLinearColor NAME_PartyColor; // 0x9c0
	FLinearColor NAME_CommonColor; // 0x9d0
	FLinearColor NAME_HostileColor; // 0x9e0
	FLinearColor SYSTEM_ImportantColor; // 0x9f0
	FLinearColor SYSTEM_CommonColor; // 0xa00
	FLinearColor SYSTEM_GoodInfoColor; // 0xa10
	FLinearColor SYSTEM_GoldColor; // 0xa20
	FLinearColor SYSTEM_WarningColor; // 0xa30
	FLinearColor UI_TEXT_White; // 0xa40
	FLinearColor UI_TEXT_Gray; // 0xa50
	FLinearColor UI_TEXT_Red; // 0xa60
	FLinearColor UI_TEXT_Green; // 0xa70
	FLinearColor UI_TEXT_Blue; // 0xa80
	FLinearColor HUD_TEXT_MP; // 0xa90
	FLinearColor HUD_TEXT_SP; // 0xaa0
	FLinearColor HUD_PK_Peace; // 0xab0
	FLinearColor HUD_PK_Nor; // 0xac0
	FLinearColor HUD_PK_Kill; // 0xad0
	FLinearColor FONT_MAIN; // 0xae0
	FLinearColor FONT_SUB; // 0xaf0
	FLinearColor FONT_POINT1; // 0xb00
	FLinearColor FONT_POINT2; // 0xb10
	FLinearColor FONT_ETC_SUB1; // 0xb20
	FLinearColor FONT_ETC_SUB2; // 0xb30
	FLinearColor FONT_INCREASE; // 0xb40
	FLinearColor FONT_DECREASE; // 0xb50
	FLinearColor VERY_HARD_MISSION; // 0xb60
	FLinearColor HARD_MISSION; // 0xb70
	FLinearColor NORMAL_MISSION; // 0xb80
	FLinearColor EASY_MISSION; // 0xb90
	FLinearColor HUD_QuestTracker_MainTitle; // 0xba0
	FLinearColor HUD_QuestTracker_NormalTitle; // 0xbb0
	FLinearColor HUD_QuestTracker_RepeatTitle; // 0xbc0
	FLinearColor HUD_QuestTracker_CurrentStageMissionText; // 0xbd0
	FLinearColor HUD_QuestTracker_OtherStageMissionText; // 0xbe0
	FLinearColor ITEMINFO_NORMAL; // 0xbf0
	FLinearColor ITEMINFO_GREEN; // 0xc00
	FLinearColor ITEMINFO_BLUE; // 0xc10
	TMap<int32_t, FLinearColor> TargetUserGrowthListColor; // 0xc20
	FLinearColor SLEEPMODE_NORMAL; // 0xc70
	FLinearColor SLEEPMODE_RED; // 0xc80
	FLinearColor SLEEPMODE_BLUE; // 0xc90
	FLinearColor SLEEPMODE_MP_RED; // 0xca0
	FLinearColor SLEEPMODE_MP_BLUE; // 0xcb0
	FLinearColor TERM_ITEM_DEFAULT; // 0xcc0
	FLinearColor TERM_ITEM_YELLOW; // 0xcd0
	FLinearColor TERM_ITEM_RED; // 0xce0
	TMap<int32_t, FLinearColor> DominationTitleGradeColor; // 0xcf0
	FLinearColor STATUS_FOCUS; // 0xd40
	FLinearColor BUILDING_ENABLE_STEPUP_CONDITION; // 0xd50
	FLinearColor BUILDING_ENABLE_OPEN_CONDITION; // 0xd60
	FLinearColor BUILDING_DISABLE_CONDITION; // 0xd70
	TMap<int32_t, FLinearColor> ItemGetWayListColor; // 0xd80
	FLinearColor FORCE_BLOOD_MAX_COLOR; // 0xdd0
	FLinearColor FORCE_BLOOD_COLOR; // 0xde0
	FLinearColor FORCE_PANALTY_COLOR; // 0xdf0
	FLinearColor OFFICAL_TITLE_COLOR; // 0xe00
	FLinearColor OFFICAL_TITLE_DISABLE_COLOR; // 0xe10
	FLinearColor SkillGrade1; // 0xe20
	FLinearColor SkillGrade2; // 0xe30
	FLinearColor SkillGrade3; // 0xe40
	FLinearColor DurationSkill; // 0xe50
	FLinearColor SpecialSkill; // 0xe60
	FLinearColor AGENCY_TERM_YELLOW; // 0xe70
	FLinearColor AGENCY_TERM_RED; // 0xe80
	FLinearColor ItemSlotText_BuffRemainTime; // 0xe90
};

struct UMM_B_MonNameTag {
	UPanelWidget* m_Grid_DropMark; // 0x2e0
	UImage* m_Img_DropBG; // 0x2e8
	UImage* m_Img_DropMark; // 0x2f0
	UPanelWidget* m_Grd_Effect; // 0x2f8
	UPanelWidget* m_Grd_Title; // 0x300
	UTextBlock* m_Txt_Title; // 0x308
	UTextBlock* m_Txt_Name; // 0x310
	UPanelWidget* m_Grd_HP; // 0x318
	UProgressBar* m_Prg_HP; // 0x320
	UImage* m_SpeechBalloonLoc; // 0x328
	UMirCanvasPanel* m_canSharedTargetIcon; // 0x330
	AMM_Monster* m_pMon; // 0x340
};

struct UMM_Slot_GroupRelation {
	UMirImage* m_Img_Icon; // 0x2e8
	UMirTextBlock* m_Txt_GroupTitle; // 0x2f0
	UMirImage* m_Img_Complet; // 0x2f8
	UMirImage* m_Img_Indicator; // 0x300
	UMirButton* m_Btn_Click; // 0x308
	UMirImage* m_Img_Select; // 0x310
};

struct UMM_ClosedTraining_Info {
	UMM_ClosedTraining_Slot_BaseSphere* m_Slot_BaseSphere; // 0x2f0
	TArray<UMirImage*> m_Img_SlotColors; // 0x2f8
	UMirTextBlock* m_Txt_CurLevel; // 0x308
	UMirCanvasPanel* m_Panel_MaxLevelBtn; // 0x310
	UMM_Common_Btn_Symbol* m_Btn_MaxLevelDetail; // 0x318
	UHorizontalBox* m_Panel_NextLevelInfo; // 0x320
	UMirTextBlock* m_Txt_NextLevel; // 0x328
	UMM_Common_Btn_Symbol* m_Btn_NextLevelDetail; // 0x330
	UMirCanvasPanel* m_Panel_Ability; // 0x338
	UMirImage* m_Img_AbilityIcon; // 0x340
	UMirTextBlock* m_Txt_AbilityName; // 0x348
	UMirTextBlock* m_Txt_CurAbilityValue; // 0x350
	UMirImage* m_Img_Arrow; // 0x358
	UMirTextBlock* m_Txt_NextAbilityValue; // 0x360
	UHorizontalBox* m_Horizon_Percent; // 0x368
	UMirRichTextBlock* m_RTxt_Success; // 0x370
	UMirRichTextBlock* m_RTxt_Panelty; // 0x378
	UMM_Common_Btn_Symbol* m_Btn_Tooltip; // 0x380
	UMirRichTextBlock* m_RTxt_NoticeCharLevel; // 0x388
	UMirTextBlock* m_Txt_NoticeMaxLevel; // 0x390
	UMirCanvasPanel* m_Panel_Mat; // 0x398
	TArray<UMM_Slot_Material_Item*> m_Slot_Mats; // 0x3a0
	UMM_Common_Btn_Cost* m_Btn_LevelUp; // 0x3b0
	TArray<UWidgetAnimation*> m_Ani_SphereList; // 0x3b8
};

struct UMM_Slot_Request {
	int32_t m_ReqRewardToStr; // 0x2e8
	int32_t m_AcceptToStr; // 0x2ec
	int32_t m_GiveUpToStr; // 0x2f0
	int32_t m_MoveToStr; // 0x2f4
	int32_t m_CompleteToStr; // 0x2f8
	int32_t m_CombatToStr; // 0x2fc
	int32_t m_MissionAcceptToStr; // 0x300
	int32_t m_MissionAcceptNumToStr; // 0x304
	int32_t m_QuestNormalToStr; // 0x308
	int32_t m_MissionTitleWithCountToStr; // 0x30c
	int32_t m_EndToStr; // 0x310
	int32_t m_QuestRepeatToStr; // 0x314
	int32_t m_DoNotCommitToStr; // 0x318
	int32_t m_OnGoingToStr; // 0x31c
	int32_t m_RequestOnlyOneMsg; // 0x320
	int32_t m_HideCompleteStageToStr; // 0x324
	FLinearColor m_EnableColor; // 0x328
	FLinearColor m_DisableColor; // 0x338
	FLinearColor m_CombatDefaultColor; // 0x348
	int32_t m_PartyToImg; // 0x358
	int32_t m_RepeatCountToStr; // 0x35c
	int32_t m_RepeatCountCheckToStr; // 0x360
	int32_t m_DoNotMoveToStr; // 0x364
	int32_t m_CheckHintToStr; // 0x368
	int32_t m_DoNotOpenStageStr; // 0x36c
	int32_t m_DoNotOpenHidenStageStr; // 0x370
	int32_t CHECK_STAGE_TYPE_STRING_ID; // 0x374
	int32_t m_DoNotUseInThisStage; // 0x378
	UMirImage* m_Img_Focus; // 0x380
	UMirImage* m_Icon; // 0x388
	UMirTextBlock* m_QuestTitle; // 0x390
	UMirTextBlock* m_Title; // 0x398
	UMirTextBlock* m_CombatPoint; // 0x3a0
	TArray<UMM_Slot_Material*> m_RewardSlots; // 0x3a8
	UMM_Common_Btn* m_Accept; // 0x3b8
	UMirImage* m_CompleteEffectImg; // 0x3c0
	UMirImage* m_EndImg; // 0x3c8
	UMM_Common_Btn* m_GiveUp; // 0x3d0
	UMM_Common_Btn* m_EnableQuest; // 0x3d8
	UPanelWidget* m_BtnGrid; // 0x3e0
	UPanelWidget* m_BtnsGrid; // 0x3e8
	UMirImage* m_Disable; // 0x3f0
	UMirTextBlock* m_Txt_StageName; // 0x3f8
	UMirButton* m_Btn_Hint; // 0x400
	UMirTextBlock* m_Txt_Hint; // 0x408
	UMirButton* m_Btn_Story; // 0x410
	UMirTextBlock* m_Txt_Story; // 0x418
	UMirImage* m_Lock; // 0x420
	UMirButton* m_Btn_Back; // 0x428
	UMirButton* m_Btn_Lock; // 0x430
	UMM_Common_PartyMember* m_pCommonPartyMember; // 0x438
};

struct UIntSerialization {
	uint16_t UnsignedInt16Variable; // 0x28
	uint32_t UnsignedInt32Variable; // 0x2c
	uint64_t UnsignedInt64Variable; // 0x30
	uint8_t SignedInt8Variable; // 0x38
	int16_t SignedInt16Variable; // 0x3a
	int64_t SignedInt64Variable; // 0x40
	char UnsignedInt8Variable; // 0x48
	int32_t SignedInt32Variable; // 0x4c
};

struct UMaterialExpressionCurveAtlasRowParameter {
	UCurveLinearColor* Curve; // 0x60
	UCurveLinearColorAtlas* Atlas; // 0x68
	FExpressionInput InputTime; // 0x70
};

struct UMaterialExpressionObjectBounds {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UWidgetComponent {
	EWidgetSpace Space; // 0x444
	EWidgetTimingPolicy TimingPolicy; // 0x445
	UUserWidget* WidgetClass; // 0x448
	FIntPoint DrawSize; // 0x450
	bool bManuallyRedraw; // 0x458
	bool bRedrawRequested; // 0x459
	float RedrawTime; // 0x45c
	FIntPoint CurrentDrawSize; // 0x468
	bool bDrawAtDesiredSize; // 0x470
	FVector2D Pivot; // 0x474
	bool bReceiveHardwareInput; // 0x47c
	bool bWindowFocusable; // 0x47d
	EWindowVisibility WindowVisibility; // 0x47e
	bool bApplyGammaCorrection; // 0x47f
	ULocalPlayer* OwnerPlayer; // 0x480
	FLinearColor BackgroundColor; // 0x488
	FLinearColor TintColorAndOpacity; // 0x498
	float OpacityFromTexture; // 0x4a8
	EWidgetBlendMode BlendMode; // 0x4ac
	bool bIsTwoSided; // 0x4ad
	bool TickWhenOffscreen; // 0x4ae
	UUserWidget* Widget; // 0x4b0
	UBodySetup* BodySetup; // 0x4d8
	UMaterialInterface* TranslucentMaterial; // 0x4e0
	UMaterialInterface* TranslucentMaterial_OneSided; // 0x4e8
	UMaterialInterface* OpaqueMaterial; // 0x4f0
	UMaterialInterface* OpaqueMaterial_OneSided; // 0x4f8
	UMaterialInterface* MaskedMaterial; // 0x500
	UMaterialInterface* MaskedMaterial_OneSided; // 0x508
	UTextureRenderTarget2D* RenderTarget; // 0x510
	UMaterialInstanceDynamic* MaterialInstance; // 0x518
	bool bAddedToScreen; // 0x520
	bool bEditTimeUsable; // 0x521
	bool bUsePointSampling; // 0x522
	bool bDontUseZtest; // 0x523
	bool bUseDepthScaling; // 0x524
	float ScreenZOffset; // 0x528
	FName SharedLayerName; // 0x530
	int32_t LayerZOrder; // 0x538
	EWidgetGeometryMode GeometryMode; // 0x53c
	float CylinderArcAngle; // 0x540
};

struct UParticleModuleVectorFieldBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMM_Auction_Tab_Search_TabGroup {
	UMM_Common_Btn_Symbol* m_pBtnItemSearch; // 0x308
	UMirTextBlock* m_pTxtFindEmpty; // 0x310
	UMirEditableText* m_pEditItemSearch; // 0x318
	UMirButton* m_pBtnRefresh; // 0x320
	UMirButton* m_pBtnReset; // 0x328
	UMM_Auction_ComboList* m_pComboList_Job; // 0x330
	UMM_Auction_ComboList* m_pComboList_Grade; // 0x338
	UMM_Auction_Tab_Search_Enchant* m_pSearchEnchant; // 0x340
};

struct UMM_Popup_MailWrite {
	int32_t STRING_RECEIVE_ID; // 0x2f0
	int32_t STRING_HINT_TITLE; // 0x2f4
	int32_t STRING_HINT_CONTENTS; // 0x2f8
	int32_t MAX_TITLE_STRING_LEN; // 0x2fc
	int32_t MAX_CONTENTS_STRING_LEN; // 0x300
	UMirTextBlock* m_Txt_ReceiveName; // 0x308
	UMirEditableText* m_EditableTxt_Title; // 0x310
	UMirMultiLineEditableText* m_EditableTxtBox_Contents; // 0x318
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x320
	UMM_Common_Btn_Symbol* m_C_Btn_MailAddressbook; // 0x328
	UMM_Common_Btn* m_C_Btn_Cancel; // 0x330
	UMM_Common_Btn_Cost* m_C_Btn_Send; // 0x338
};

struct UMM_RelationQuestDetailList {
	int32_t m_ReqRewarToStr; // 0x2f0
	UMirTextBlock* m_Txt_Title; // 0x2f8
	UMirListView* m_ListView_RelationList; // 0x300
	UMirProgressBar* m_Prog_Quest; // 0x308
	UMM_Common_Btn* m_Btn_Reward; // 0x310
	UMirTextBlock* m_Txt_Percent; // 0x318
	UMirTextBlock* m_Txt_Prog; // 0x320
	TArray<UMM_Slot_Material*> m_Slot_Rewards; // 0x328
	UMirImage* m_Img_Scroll; // 0x338
	UMirImage* m_Img_Complete; // 0x340
	int32_t RECIEVE_BTN_EFECT_ID; // 0x34c
	TArray<URelationDetailSlotObj*> m_arRelationDetailSlotObj; // 0x350
};

struct UMM_UIShopBanner {
	UMirTextBlock* mTxtStopToday; // 0x2e0
	UMirCheckBox* mCheckBox; // 0x2e8
	UImage* mImgDownLoad; // 0x2f0
	UMM_Common_Btn_Symbol* mBtnClose; // 0x2f8
	UAsyncTaskDownloadImage* mDownloadImage; // 0x300
};

struct UMaterialExpressionEyeAdaptation {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UParticleModuleAcceleration {
	FRawDistributionVector Acceleration; // 0x38
	char bApplyOwnerScale : 1; // 0x80
};

struct AOpObjectSpawner {
	int32_t m_ObjectID; // 0x298
	bool m_bDefaultObjectSpawn; // 0x29c
	bool m_bDefaultObjectActive; // 0x29d
};

struct UScrollBoxSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UInAppPurchaseRestoreCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMergedMeshComponent {
	USkeletalMesh* SkeletalMesh; // 0x440
	TWeakObjectPtr<USkinnedMeshComponent> MasterPoseComponent; // 0x448
	UPhysicsAsset* PhysicsAssetOverride; // 0x548
	int32_t ForcedLodModel; // 0x550
	int32_t MinLodModel; // 0x554
	float StreamingDistanceMultiplier; // 0x560
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x570
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x5a4
	char bOverrideMinLOD : 1; // 0x5a6
	char bUseAutomaticSwitchingCPUSkinning : 1; // 0x5a8
	char bUseBoundsFromMasterPoseComponent : 1; // 0x5ac
	char bForceWireframe : 1; // 0x5ac
	char bDisplayBones : 1; // 0x5ac
	char bDisableMorphTarget : 1; // 0x5ac
	char bHideSkin : 1; // 0x5ac
	char bPerBoneMotionBlur : 1; // 0x5ac
	char bComponentUseFixedSkelBounds : 1; // 0x5ac
	char bConsiderAllBodiesForBounds : 1; // 0x5ac
	char bSyncAttachParentLOD : 1; // 0x5ad
	char bCanHighlightSelectedSections : 1; // 0x5ad
	char bRecentlyRendered : 1; // 0x5ad
	char bCastCapsuleDirectShadow : 1; // 0x5ad
	char bCastCapsuleIndirectShadow : 1; // 0x5ad
	char bCPUSkinning : 1; // 0x5ad
	char bEnableUpdateRateOptimizations : 1; // 0x5ad
	char bDisplayDebugUpdateRateOptimizations : 1; // 0x5ad
	char bRenderStatic : 1; // 0x5ae
	char bIgnoreMasterPoseComponentLOD : 1; // 0x5ae
	char bCachedLocalBoundsUpToDate : 1; // 0x5ae
	char bForceMeshObjectUpdate : 1; // 0x5ae
	float CapsuleIndirectShadowMinVisibility; // 0x5b0
	FBoxSphereBounds CachedWorldSpaceBounds; // 0x5d8
	FMatrix CachedWorldToLocalTransform; // 0x600
};

struct UMM_Btn_HudNormalAttack {
	UImage* m_pImg_NormalAttackIcon; // 0x2e0
	UButton* m_pBtn_Attack; // 0x2e8
	UWidgetAnimation* m_pAnim_Click; // 0x2f0
	int32_t m_iEffectID_Continue; // 0x2f8
	int32_t m_iEffectID_Touched; // 0x2fc
	UPanelWidget* m_pGridEffect; // 0x300
	UEffectWidgetBase* m_pContinueEffect; // 0x308
};

struct AMM_NPCBase {
	UMM_B_NPCNameTag* m_NPCNameTag; // 0xa38
	UMM_B_NPCMenu* m_NPCMenu; // 0xa40
	int32_t m_QuestID; // 0xa70
	int32_t m_QuestIndex; // 0xa74
	int32_t m_QuestType; // 0xa78
	UMM_NpcFunctionComponent* m_pNpcFunctionComponent; // 0xaa8
};

struct UMM_Popup_GetHistory {
	int32_t m_iCol_GetItemList; // 0x2e0
	int32_t m_iMinRow_GetItemList; // 0x2e4
	UMirButton* m_Btn_ScreenBg; // 0x2f0
	UMirTextBlock* m_Txt_Title; // 0x2f8
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x300
	UMM_Common_Btn* m_CB_Confirm; // 0x308
	UMirRichTextBlock* m_RTxt_GetItemCount; // 0x310
	UMirTextBlock* m_Txt_Notice; // 0x318
	UPanelWidget* m_Hrz_Empty; // 0x320
	UMirTileView* m_TileView_GetItemList; // 0x328
	UMirScrollBox* m_Scr_GetCost; // 0x330
	TArray<UMM_Slot_GetHistory*> m_arSlot; // 0x338
	TArray<UInventorySlotObj*> m_arGetItemSlotObj; // 0x348
};

struct UMaterialExpressionMax {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMM_PassiveSkillDesc {
	UMirRichTextBlock* m_RTxt_Title; // 0x2e0
	UMirRichTextBlock* m_Rtxt_Desc; // 0x2e8
};

struct UBTDecorator_CompareBBEntries {
	EBlackBoardEntryComparison Operator; // 0x68
	FBlackboardKeySelector BlackboardKeyA; // 0x70
	FBlackboardKeySelector BlackboardKeyB; // 0x98
};

struct UBTDecorator_KeepInCone {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector Observed; // 0x98
	char bUseSelfAsOrigin : 1; // 0xc0
	char bUseSelfAsObserved : 1; // 0xc0
};

struct ANavigationGraphNode {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct ULocalPlayer {
	UGameViewportClient* ViewportClient; // 0x70
	EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x9c
	APlayerController* PendingLevelPlayerControllerClass; // 0xa0
	char bSentSplitJoin : 1; // 0xa8
	int32_t ControllerId; // 0xc0
};

struct UParticleSystemReplay {
	int32_t ClipIDNumber; // 0x28
};

struct UActorSequence {
	UMovieScene* MovieScene; // 0x348
	FActorSequenceObjectReferenceMap ObjectReferences; // 0x350
};

struct UMM_StarGrade {
	UMirImage* m_arStarGrade[0x5]; // 0x2e0
};

struct ULandscapeSettings {
	int32_t MaxNumberOfLayers; // 0x38
};

struct UOnlineSubsystemExtendedGoogleWebBrowser {
	FScriptMulticastDelegate OnUrlChanged; // 0x108
	FString InitialURL; // 0x118
	bool bSupportsTransparency; // 0x128
};

struct UMM_Popup_Material_Change {
	UMM_Slot_Material* Mat_Target_2; // 0x300
	UMM_Slot_Material* Mat_Target_3; // 0x308
	URichTextBox* RTxt_Target_Desc; // 0x310
	UMirScrollBox* ScrollBox; // 0x318
	UMM_Slot_Material* Mat_ListTarget_2; // 0x320
	TArray<UMM_Slot_Material*> Mat_List; // 0x328
	UMM_Common_Btn_Symbol* btn_close; // 0x338
	UMM_Common_Btn* m_Btn_Ok; // 0x340
	UMM_Common_Btn* m_Btn_Cancel; // 0x348
	UMirTextBlock* m_Txt_Empty; // 0x350
	int32_t MaterialCount; // 0x358
	int32_t m_MaxSlotCount; // 0x35c
	int32_t m_CurrentSlotCount; // 0x360
	int32_t m_MaterialSlotIndex; // 0x364
	uint64_t m_SelectSlotUID; // 0x368
	uint64_t m_CheckedSlotUID; // 0x370
	uint64_t m_SelectSlotTID; // 0x378
	bool NoMaterail; // 0x380
	int32_t STR_MSG_DESC; // 0x384
	int32_t STR_MSG_DESC2; // 0x388
	int32_t STR_MSG_TIER2OVER_DESC; // 0x38c
	int32_t STR_MSG_TIER2OVER_DESC2; // 0x390
};

struct UChaosGameplayEventDispatcher {
	TMap<UPrimitiveComponent*, FChaosHandlerSet> CollisionEventRegistrations; // 0x1c8
	TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper> BreakEventRegistrations; // 0x218
};

struct UParticleModuleTypeDataBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UStaticMeshSocket {
	FName SocketName; // 0x28
	FVector RelativeLocation; // 0x30
	FRotator RelativeRotation; // 0x3c
	FVector RelativeScale; // 0x48
	FString Tag; // 0x58
};

struct AInfo {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMM_Common_Popup_StopWatchingToday {
	UMirTextBlock* m_Txt_Title; // 0x328
	UMirRichTextBlock* m_RTxt_Message; // 0x330
	UHorizontalBox* m_Hrz_Cost; // 0x338
	UMirImage* m_Img_CostIcon; // 0x340
	UMirTextBlock* m_Txt_CostCount; // 0x348
	UMM_Common_Btn* m_CB_First; // 0x350
	UMM_Common_Btn* m_CB_Second; // 0x358
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x360
	UMirCheckBox* m_CheckBox; // 0x368
	UMirTextBlock* m_Txt_StopWatchingTodayDesc; // 0x370
};

struct ULeaderboardQueryCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMM_Customizing_Category {
	TArray<UMM_Customizing_MainCategoryItem*> m_TopCategoryArray; // 0x2e0
	TArray<UMM_Customizing_MainCategoryItem*> m_MainCategoryArray; // 0x2f0
	TArray<UMM_Customizing_TextCategory*> m_SubCategoryArray; // 0x300
	UMirScrollBox* m_ScrSubCategory; // 0x310
};

struct UMovieSceneByteSection {
	FMovieSceneByteChannel ByteCurve; // 0xe0
};

struct UParticleModuleVelocityBase {
	char bInWorldSpace : 1; // 0x30
	char bApplyOwnerScale : 1; // 0x30
};

struct UMM_HudAutoBattle {
	TMap<EAutoBattleState, FBrushObject> AuotBattleStateIcon; // 0x2f8
	FBrushObject CounterAttackIcon; // 0x348
	int32_t AutoExecEffectID; // 0x368
	int32_t TouchEffectID; // 0x36c
	EBehaviorType BehaviorType; // 0x370
	UMirButton* SelecteButton; // 0x378
	UMirImage* SelectedIcon; // 0x380
	UVerticalBox* ExpandList; // 0x388
	TArray<UMM_HudAutoBattle_Element*> ElementList; // 0x390
	UEffectWidgetBase* ExecuteEffectWidget; // 0x3a0
	UEffectWidgetBase* TouchEffectWidget; // 0x3a8
};

struct ADocumentationActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UInstancedStaticMeshComponent {
	TArray<FInstancedStaticMeshInstanceData> PerInstanceSMData; // 0x4a8
	int32_t InstancingRandomSeed; // 0x4b8
	int32_t InstanceStartCullDistance; // 0x4bc
	int32_t InstanceEndCullDistance; // 0x4c0
	TArray<int32_t> InstanceReorderTable; // 0x4c8
	int32_t NumPendingLightmaps; // 0x520
	TArray<FInstancedStaticMeshMappingInfo> CachedMappings; // 0x528
};

struct UOnlineSubsystemExtendedAppleWebBrowser {
	FScriptMulticastDelegate OnUrlChanged; // 0x108
	FString InitialURL; // 0x118
	bool bSupportsTransparency; // 0x128
};

struct UMM_Popup_DominionGuildMember {
	UMirScrollBox* sb_member; // 0x2f0
	UMM_Common_Board_Notice* bn_empty; // 0x2f8
	UMM_Common_Btn_Symbol* btn_close; // 0x300
	UMirTextBlock* Txt_Title; // 0x308
	UMirTextBlock* txt_sort; // 0x310
	UMirCheckBox* cb_sort; // 0x318
	UMirCanvasPanel* cp_sort; // 0x320
	UMirButton* btn_sort_combat_point; // 0x328
	UMirButton* btn_sort_level; // 0x330
	UMirButton* btn_sort_grade; // 0x338
	UMirImage* img_sort_combat_point; // 0x340
	UMirImage* img_sort_level; // 0x348
	UMirImage* img_sort_grade; // 0x350
	UMirTextBlock* txt_last; // 0x358
	UMM_Common_ToolTipBtn* tooltip_partner; // 0x360
};

struct ULightComponentBase {
	FGuid LightGuid; // 0x220
	float Brightness; // 0x230
	float Intensity; // 0x234
	FColor LightColor; // 0x238
	char bAffectsWorld : 1; // 0x23c
	char CastShadows : 1; // 0x23c
	char CastStaticShadows : 1; // 0x23c
	char CastDynamicShadows : 1; // 0x23c
	char bAffectTranslucentLighting : 1; // 0x23c
	char bTransmission : 1; // 0x23c
	char bCastVolumetricShadow : 1; // 0x23c
	char bCastDeepShadow : 1; // 0x23c
	char bCastRaytracedShadow : 1; // 0x23d
	char bAffectReflection : 1; // 0x23d
	char bAffectGlobalIllumination : 1; // 0x23d
	float IndirectLightingIntensity; // 0x240
	float VolumetricScatteringIntensity; // 0x244
	int32_t SamplesPerPixel; // 0x248
};

struct UMM_BattlePass_Mission_Slot {
	float OVERLAY_OPACITY; // 0x2e0
	UMirImage* m_Img_IcnMission; // 0x2e8
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMirTextBlock* m_Txt_Desc; // 0x2f8
	UMirTextBlock* m_Txt_Prog; // 0x300
	UMirImage* m_Img_IcnPoint; // 0x308
	UMirTextBlock* m_Txt_Point; // 0x310
	UMM_Common_Btn* m_C_Btn_Immedi; // 0x318
	UMM_Common_Btn* m_C_Btn_GoToContents; // 0x320
	UMM_Common_Btn* m_C_Btn_Receive; // 0x328
	UMirImage* m_Img_CompleteEffect; // 0x330
	UMirImage* m_Img_Complete; // 0x338
	UMirButton* m_Btn_Main; // 0x340
	UMirImage* m_Img_Indicator; // 0x348
	UOverlay* m_Overlay; // 0x350
};

struct UMaterialExpressionDistanceCullFade {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct APcWarpTrigger {
	FString m_EditorTriggerName; // 0x220
	TArray<AActivateTrigger*> m_pActiveTriggerArray; // 0x230
	int32_t m_TriggerIndex; // 0x240
	ETriggerType m_TriggerType; // 0x244
	bool m_bActiveTriggerCondition; // 0x268
	bool m_bActivated; // 0x269
	AMM_TriggerManager* m_pTriggerManager; // 0x270
};

struct UMRMeshComponent {
	UMaterialInterface* Material; // 0x420
	bool bCreateMeshProxySections; // 0x428
	bool bUpdateNavMeshOnMeshUpdate; // 0x429
	bool bNeverCreateCollisionMesh; // 0x42a
	UBodySetup* CachedBodySetup; // 0x430
	TArray<UBodySetup*> BodySetups; // 0x438
	UMaterialInterface* WireframeMaterial; // 0x448
};

struct UMM_CharInfo_GuildIcon {
	UMirTextBlock* m_Txt_BtnName; // 0x2e0
	UMM_Common_Btn_Symbol* m_Btn; // 0x2e8
};

struct UInterpTrackBoolProp {
	TArray<FBoolTrackKey> BoolTrack; // 0x70
	FName PropertyName; // 0x80
};

struct UMaterialExpressionLandscapeLayerSwitch {
	FExpressionInput LayerUsed; // 0x40
	FExpressionInput LayerNotUsed; // 0x54
	FName ParameterName; // 0x68
	char PreviewUsed : 1; // 0x70
	FGuid ExpressionGUID; // 0x74
};

struct UMovieSceneParameterSection {
	TArray<FScalarParameterNameAndCurve> ScalarParameterNamesAndCurves; // 0xe0
	TArray<FVectorParameterNameAndCurves> VectorParameterNamesAndCurves; // 0xf0
	TArray<FColorParameterNameAndCurves> ColorParameterNamesAndCurves; // 0x100
	TArray<FTransformParameterNameAndCurves> TransformParameterNamesAndCurves; // 0x110
};

struct UParticleModuleLocation_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UAnimationSettings {
	int32_t CompressCommandletVersion; // 0x38
	TArray<FString> KeyEndEffectorsMatchNameArray; // 0x40
	UAnimCompress* DefaultCompressionAlgorithm; // 0x50
	AnimationCompressionFormat RotationCompressionFormat; // 0x58
	AnimationCompressionFormat TranslationCompressionFormat; // 0x59
	float MaxCurveError; // 0x5c
	float AlternativeCompressionThreshold; // 0x60
	bool ForceRecompression; // 0x64
	bool bOnlyCheckForMissingSkeletalMeshes; // 0x65
	bool bForceBelowThreshold; // 0x66
	bool bFirstRecompressUsingCurrentOrDefault; // 0x67
	bool bRaiseMaxErrorToExisting; // 0x68
	bool bTryExhaustiveSearch; // 0x69
	bool bEnableSegmenting; // 0x6a
	bool bEnablePerformanceLog; // 0x6b
	bool bStripAnimationDataOnDedicatedServer; // 0x6c
	bool bTickAnimationOnSkeletalMeshInit; // 0x6d
	bool bAnimCustomModeNotifyStateEndMissingErrorFix; // 0x6e
};

struct UFloatBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UMM_Popup_ServerVisitList {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f0
	UScrollBox* m_Scroll_ServerList; // 0x2f8
	UPanelWidget* m_Scroll_Wrap; // 0x300
};

struct UBTTask_RunBehavior {
	UBehaviorTree* BehaviorAsset; // 0x70
};

struct USlateWidgetStyleAsset {
	USlateWidgetStyleContainerBase* CustomStyle; // 0x28
};

struct UChildActorComponent {
	AActor* ChildActorClass; // 0x220
	AActor* ChildActor; // 0x228
	AActor* ChildActorTemplate; // 0x230
};

struct UMM_Slot_Material_Item {
	bool AutoUpdateItemName; // 0x3f8
	FLinearColor m_DisableColor; // 0x3fc
	UMirImage* m_ImgPlus; // 0x410
	UMirTextBlock* m_TxtItemName; // 0x418
	UMirTextBlock* m_TxtCount; // 0x420
	UMM_Common_Btn_Symbol* m_BtnUnmount; // 0x428
	UMirImage* m_Img_Attribution; // 0x430
	UMirImage* m_Img_UserLock; // 0x438
};

struct UMM_Ability_RandomSlot {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UEnvQueryTest_GameplayTags {
	FGameplayTagQuery TagQueryToMatch; // 0x1c0
	bool bUpdatedToUseQuery; // 0x208
	EGameplayContainerMatchType TagsToMatch; // 0x209
	FGameplayTagContainer GameplayTags; // 0x210
};

struct UMM_GameOption_Select {
	int32_t ToolTipID; // 0x2e8
	TArray<int32_t> SelectStrID; // 0x2f0
	UTextBlock* Txt_MainTitle; // 0x310
	UMM_Common_ToolTipBtn* Btn_Tooltip; // 0x318
	TArray<UTextBlock*> Txt_Select; // 0x320
	TArray<UCheckBox*> Slot_Select; // 0x330
	TArray<UPanelWidget*> Panel_OptionSlotList; // 0x340
};

struct UMM_Common_Popup_Outgame {
	UTextBlock* m_Txt_Title; // 0x2e0
	UMM_Slot_Material* m_MatSlot; // 0x2e8
	UMirRichTextBlock* m_RTxt_Message; // 0x2f0
	UPanelWidget* m_Hrz_Notice; // 0x2f8
	UMirTextBlock* m_Txt_Notice; // 0x300
	UMirRichTextBlock* m_RTxt_Notice; // 0x308
	UMM_Common_Btn* m_CB_First; // 0x310
	UMM_Common_Btn* m_CB_Second; // 0x318
	UMM_Common_Btn* m_CB_Third; // 0x320
	UMM_Common_Btn_Cost* m_CB_Cost; // 0x328
	UMM_Common_Btn_Cost* m_CB_CostSecond; // 0x330
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x338
	UMirButton* m_Btn_Bg; // 0x340
	UHorizontalBox* hrzCost; // 0x348
	UImage* imgCostIcon; // 0x350
	UMirTextBlock* txtCost; // 0x358
	UPanelWidget* m_Hrz_Notice_Ext; // 0x360
	UMirTextBlock* m_Txt_Notice_Ext_From; // 0x368
	UMirTextBlock* m_Txt_Notice_Ext_To; // 0x370
};

struct AChaosSolverActor {
	float TimeStepMultiplier; // 0x218
	int32_t CollisionIterations; // 0x21c
	int32_t PushOutIterations; // 0x220
	int32_t PushOutPairIterations; // 0x224
	float ClusterConnectionFactor; // 0x228
	EClusterConnectionTypeEnum ClusterUnionConnectionType; // 0x22c
	bool DoGenerateCollisionData; // 0x22d
	FSolverCollisionFilterSettings CollisionFilterSettings; // 0x230
	bool DoGenerateBreakingData; // 0x240
	FSolverBreakingFilterSettings BreakingFilterSettings; // 0x244
	bool DoGenerateTrailingData; // 0x254
	FSolverTrailingFilterSettings TrailingFilterSettings; // 0x258
	bool bHasFloor; // 0x268
	float FloorHeight; // 0x26c
	float MassScale; // 0x270
	FChaosDebugSubstepControl ChaosDebugSubstepControl; // 0x274
	UBillboardComponent* SpriteComponent; // 0x278
	UChaosGameplayEventDispatcher* GameplayEventDispatcherComponent; // 0x298
};

struct UAppleImageUtilsBaseAsyncTaskBlueprintProxy {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
	FAppleImageUtilsImageConversionResult ConversionResult; // 0x60
};

struct UMM_B_Shop_ListElement {
	FScriptMulticastDelegate OnSelectedItemEvent; // 0x2e0
	FScriptMulticastDelegate OnBuyItemEvent; // 0x2f0
	UMM_B_Shop_NPC* m_BaseWidget; // 0x300
	UButton* m_BG; // 0x308
	UMM_Slot_Material* m_ItemSlot; // 0x310
	UTextBlock* m_TextName; // 0x318
	UTextBlock* m_TextLimit; // 0x320
	UMM_Goods_Slot* m_Goods; // 0x328
	UMirButton* m_BtnBuy; // 0x330
	int32_t m_ShopItemID; // 0x338
	UMirRichTextBlock* txt_count; // 0x340
	UCanvasPanel* canvas_limit; // 0x348
	int32_t STR_UNLIMITED; // 0x350
	int32_t STR_LIMITED; // 0x354
};

struct UMM_NewInventory_StorageLeft {
	UMM_NewInventoryTab* m_InvenTab; // 0x2e8
	UMM_NewInventory* m_Inven; // 0x2f0
	UMirTextBlock* m_Txt_InvenCount; // 0x2f8
	UMM_SortListBtn* m_SortListBtn; // 0x300
	UMirButton* m_Btn_Extend; // 0x308
};

struct UBTTask_MoveDirectlyToward {
	char bDisablePathUpdateOnGoalLocationChange : 1; // 0xb0
	char bProjectVectorGoalToNavigation : 1; // 0xb0
	char bUpdatedDeprecatedProperties : 1; // 0xb0
};

struct UOverrideExponentialHeightFog {
	float FogDensity; // 0x28
	float FogHeightFalloff; // 0x2c
	FExponentialHeightFogData SecondFogData; // 0x30
	FLinearColor FogInscatteringColor; // 0x3c
	float FogMaxOpacity; // 0x4c
	float StartDistance; // 0x50
	float FogCutoffDistance; // 0x54
	float DirectionalInscatteringExponent; // 0x58
	float DirectionalInscatteringStartDistance; // 0x5c
	FLinearColor DirectionalInscatteringColor; // 0x60
};

struct ULogoutCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFailure; // 0x40
};

struct USizeBoxSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct ATestBeaconClient {
	AOnlineBeaconHostObject* BeaconOwner; // 0x248
	UNetConnection* BeaconConnection; // 0x250
	EBeaconConnectionState ConnectionState; // 0x258
};

struct UAnimSharingAdditiveInstance {
	TWeakObjectPtr<USkeletalMeshComponent> BaseComponent; // 0x268
	TWeakObjectPtr<UAnimSequence> AdditiveAnimation; // 0x270
	float Alpha; // 0x278
	bool bStateBool; // 0x27c
};

struct UMaterialExpressionStaticSwitch {
	char DefaultValue : 1; // 0x40
	FExpressionInput A; // 0x44
	FExpressionInput B; // 0x58
	FExpressionInput Value; // 0x6c
};

struct USoundAttenuation {
	FSoundAttenuationSettings Attenuation; // 0x28
};

struct UCharPointLightNotify {
	FCharPointLightData CharPointLight; // 0x38
};

struct UCommonPopupLineWidget {
	UWidgetAnimation* m_AniBtnOneConfirm; // 0x2e0
	UWidgetAnimation* m_AniBtnTwoConfirm; // 0x2e8
	UWidgetAnimation* m_AniBtnTwoCancel; // 0x2f0
	UWidgetAnimation* m_AniPopup; // 0x2f8
	UTextBlock* m_TxtTitle; // 0x300
	URichTextBox* m_RTxtMessage; // 0x308
	UHorizontalBox* m_HrzOneBtn; // 0x310
	UHorizontalBox* m_HrzTwoBtn; // 0x318
	UTextBlock* m_TxtOneConfirm; // 0x320
	UTextBlock* m_TxtTwoConfirm; // 0x328
	UTextBlock* m_TxtTwoCancel; // 0x330
	UButton* m_BtnOneConfirm; // 0x338
	UButton* m_BtnTwoConfirm; // 0x340
	UButton* m_BtnTwoCancel; // 0x348
};

struct UMM_Hud_Chat {
	UWidgetAnimation* m_AniStart; // 0x308
	UWidgetAnimation* m_AniEnd; // 0x310
	int32_t MAX_VIEW_MESSAGE_COUNT; // 0x318
	float TEXT_WRAPPING_SIZE; // 0x31c
	UScrollBox* m_ScrollBox; // 0x320
	uint64_t m_ChannelId; // 0x328
	bool m_InitAsyncLoad; // 0x330
};

struct UAlignedWrapBoxSlot {
	FMargin Padding; // 0x38
	bool bFillEmptySpace; // 0x48
	float FillSpanWhenLessThan; // 0x4c
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UMM_Hud_Chat_BroadcastMessage {
	UMirTextBlock* Txt_WorldMessage; // 0x2f0
};

struct UMM_Item_Make_Slider_BigInteger {
	UMirTextBlock* m_pTxt_CurValueNum; // 0x338
	UMM_Common_Btn_Symbol* m_pBtn_DecreaseValue; // 0x340
	UMM_Common_Btn_Symbol* m_pBtn_IncreaseValue; // 0x348
	UMM_Common_Btn_Symbol* m_pBtn_MaxValue; // 0x350
	UMM_Common_Btn_Symbol* m_pBtn_MinValue; // 0x358
	UMM_Common_Btn* m_pBtn_IncreaseUnit; // 0x360
	UMM_Common_Btn_Symbol* m_pBtn_KeyPad; // 0x368
	UMirImage* m_pImgCostIcon; // 0x370
	int64_t m_iMinValue; // 0x378
	int64_t m_iMaxValue; // 0x380
	int64_t m_iCurValue; // 0x388
	int64_t m_iStackValue; // 0x390
	int64_t m_iIncreaseUnit; // 0x398
	bool m_Lock; // 0x3a0
};

struct UMM_New_Force_Upgrade {
	UMM_New_Force_Detail_Info* m_Force_CurDetail; // 0x308
	UMM_New_Force_Ability_Slot* m_arAbilityListSlot[0x4]; // 0x310
	UPanelWidget* m_Panel_Mats; // 0x330
	UMirRichTextBlock* m_C_RTxt_CharLevel; // 0x338
	TArray<UMM_Slot_Material_Item*> m_Slot_Mats; // 0x340
	TArray<UWidgetAnimation*> m_AniGuide; // 0x350
	UMM_Common_Btn_Cost* m_Btn_Advence; // 0x360
	UPanelWidget* m_Panel_Skip; // 0x368
	UMM_Slot_Material_Item* m_Slot_Skip; // 0x370
	UMirTextBlock* m_Txt_SkipDesc; // 0x378
	UMirTextBlock* m_Txt_SkipRemainTime; // 0x380
	UMM_Common_Btn* m_Btn_Skip; // 0x388
	UPanelWidget* m_Panel_Cure; // 0x390
	UMM_Slot_Material_Item* m_C_Slot_CureMat; // 0x398
	UMirTextBlock* m_C_Txt_FailedInfo; // 0x3a0
	UMirTextBlock* m_C_Txt_FailedTime; // 0x3a8
	UMM_Common_Btn* m_C_CB_Cure; // 0x3b0
};

struct UMM_Slot_Collect_Item {
	UMirButton* m_BtnMain; // 0x2e8
	UMirImage* m_ImgBg; // 0x2f0
	UMirImage* m_ImgIcon; // 0x2f8
	UMirImage* m_Img_GradeBgEffect; // 0x300
	UMirImage* m_ImgDisabled; // 0x308
	UMirImage* m_Img_Attribution; // 0x310
	UMirImage* m_Imgindicator; // 0x318
	UMirImage* m_ImgTierBg; // 0x320
	UMirImage* m_ImgSeleted; // 0x328
	UMirImage* m_ImgCurrSelected; // 0x330
	UMirTextBlock* m_TxtCount; // 0x338
	UMirImage* m_Img_Complete; // 0x340
	UMirTextBlock* m_Txt_Smelt; // 0x348
	UMirImage* m_Img_UserLock; // 0x350
	UMirImage* m_Img_UserLock_Stack; // 0x358
};

struct AMM_TargetDecalActor {
	int32_t TestDecalID; // 0x220
	TMap<int32_t, UParticleSystem*> m_mapDecal; // 0x228
	UParticleSystemComponent* TargetDecalComponent; // 0x278
};

struct UBuffInfoListWidget {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMovieSceneEventSectionBase {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int32_t RowIndex; // 0xa8
	int32_t OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct UMM_Popup_RandomOptionList {
	UMM_Common_Btn_Symbol* btn_close; // 0x2e0
	UScrollBox* Scroll_Main; // 0x300
	UMirTextBlock* Txt_Title; // 0x308
	UMirTextBlock* Txt_Ability; // 0x310
	UPanelWidget* Pan_Ability; // 0x318
};

struct UParticleModuleTypeDataBeam2 {
	EBeam2Method BeamMethod; // 0x30
	int32_t TextureTile; // 0x34
	float TextureTileDistance; // 0x38
	int32_t Sheets; // 0x3c
	int32_t MaxBeamCount; // 0x40
	float Speed; // 0x44
	int32_t InterpolationPoints; // 0x48
	char bAlwaysOn : 1; // 0x4c
	int32_t UpVectorStepSize; // 0x50
	FName BranchParentName; // 0x54
	FRawDistributionFloat Distance; // 0x60
	EBeamTaperMethod TaperMethod; // 0x90
	FRawDistributionFloat TaperFactor; // 0x98
	FRawDistributionFloat TaperScale; // 0xc8
	char RenderGeometry : 1; // 0xf8
	char RenderDirectLine : 1; // 0xf8
	char RenderLines : 1; // 0xf8
	char RenderTessellation : 1; // 0xf8
};

struct UMM_B_SynthesisResult {
	int32_t STRING_ID_BTN_OPENALL; // 0x2e0
	int32_t STRING_ID_BTN_CLOSE; // 0x2e4
	int32_t STRING_TITLE_SYNTHESIS; // 0x2e8
	int32_t STRING_TITLE_CHANGE; // 0x2ec
	int32_t STRING_ID_GRADE_EPIC; // 0x2f0
	int32_t STRING_ID_GRADE_LEGEND; // 0x2f4
	float NORMAL_CARD_APPEAR_DELAY; // 0x2f8
	float HERO_CARD_APPEAR_DELAY; // 0x2fc
	TArray<UMM_SynthesisResult_Slot*> m_arrItemSlot; // 0x300
	UMirTextBlock* m_pTitleTxt; // 0x310
	UMM_Common_Btn* m_pBtnOk; // 0x318
	UWidgetAnimation* m_pStartAni; // 0x320
	UWidgetAnimation* m_pEndAni; // 0x328
	UMirRichTextBlock* m_RTxt_AddPoint[0x2]; // 0x330
};

struct UBTTask_BlackboardBase {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UInterpGroup {
	TArray<UInterpTrack*> InterpTracks; // 0x30
	FName GroupName; // 0x40
	FColor GroupColor; // 0x48
	char bCollapsed : 1; // 0x4c
	char bVisible : 1; // 0x4c
	char bIsFolder : 1; // 0x4c
	char bIsParented : 1; // 0x4c
	char bIsSelected : 1; // 0x4c
};

struct UMaterialExpressionTextureSample {
	FExpressionInput Coordinates; // 0x50
	FExpressionInput TextureObject; // 0x64
	FExpressionInput MipValue; // 0x78
	FExpressionInput CoordinatesDX; // 0x8c
	FExpressionInput CoordinatesDY; // 0xa0
	FExpressionInput AutomaticViewMipBiasValue; // 0xb4
	ETextureMipValueMode MipValueMode; // 0xc8
	ESamplerSourceMode SamplerSource; // 0xc9
	char AutomaticViewMipBias : 1; // 0xca
	char ConstCoordinate; // 0xcb
	int32_t ConstMipValue; // 0xcc
};

struct UMaterialExpressionHairAttributes {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UParticleModuleLocationEmitterDirect {
	FName EmitterName; // 0x30
};

struct UShaderPlatformQualitySettings {
	FMaterialQualityOverrides QualityOverrides[0x3]; // 0x28
};

struct UMM_GuildIconSlot {
	UMM_Guild_Icon* guild_icon[0x2]; // 0x2e0
};

struct UParticleModuleLocationPrimitiveCylinder_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct USoundNodeSoundClass {
	USoundClass* SoundClassOverride; // 0x40
};

struct AMM_ObjectBase {
	bool m_bPoolingObject; // 0x428
	UObjectNameTagWidget* ObjectNameTagWidget; // 0x458
	UWidgetComponent* WidgetComp; // 0x460
	UWidgetComponent* NameTagWidgetComponent; // 0x468
	UWidgetComponent* InteractionWidgetComponent; // 0x470
	UParticleSystemComponent* LoopEffectComponent; // 0x480
	UParticleSystem* m_LoopParticleSystem; // 0x488
	UOperatingButtonWidget* OperatingBtnWidget; // 0x4c8
};

struct USoundMix {
	char bApplyEQ : 1; // 0x28
	float EQPriority; // 0x2c
	FAudioEQEffect EQSettings; // 0x30
	TArray<FSoundClassAdjuster> SoundClassEffects; // 0x68
	float InitialDelay; // 0x78
	float FadeInTime; // 0x7c
	float Duration; // 0x80
	float FadeOutTime; // 0x84
};

struct UMM_GuildIcon {
	UMirImage* Img_Icon; // 0x2e0
	UMirImage* img_frame; // 0x2e8
};

struct UBTTask_PreSelectSkill {
	TArray<FSkillCondition> Conditions; // 0x78
};

struct UMM_PopUp_Building {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMM_Common_Btn_Symbol* m_BtnClose; // 0x2f8
	UMM_Common_Btn_Symbol* m_BtnDetail; // 0x300
	UMirTextBlock* m_Txt_Step; // 0x308
	UMirImage* m_Img_StepArrow; // 0x310
	UMirTextBlock* m_Txt_NextStep; // 0x318
	UMirImage* m_Img_Building; // 0x320
	UMirImage* m_Img_Combat; // 0x328
	UMirTextBlock* m_Txt_Combat; // 0x330
	UMirImage* m_Img_CombatArrow; // 0x338
	UMirTextBlock* m_Txt_NextCombat; // 0x340
	UMirTextBlock* m_Txt_PetEffectTitle; // 0x348
	UMirRichTextBlock* m_Txt_PetEffect; // 0x350
	UMirTextBlock* m_Txt_BuildingEffectTitle; // 0x358
	TArray<UPanelWidget*> m_Panel_Effects; // 0x360
	TArray<UMirTextBlock*> m_Txt_Effects; // 0x370
	TArray<UMirTextBlock*> m_Txt_EffectValues; // 0x380
	TArray<UMirTextBlock*> m_Txt_NextEffectValues; // 0x390
	UMirTextBlock* m_Txt_ConditionTitle; // 0x3a0
	UPanelWidget* m_Panel_Conditions; // 0x3a8
	TArray<UMM_PopUp_BuildingList*> m_OpenConditions; // 0x3b0
	UPanelWidget* m_Panel_BuildingDesc; // 0x3c0
	UMirTextBlock* m_Txt_BuildingDescTitle; // 0x3c8
	UMirRichTextBlock* m_Txt_BuildingDesc; // 0x3d0
	UPanelWidget* m_Panel_MaxStepUp; // 0x3d8
	UMM_Common_Board_Notice* m_Ntc_MaxStep; // 0x3e0
	UPanelWidget* m_Panel_Check; // 0x3e8
	UMM_Common_Btn* m_Btn_Check; // 0x3f0
	UPanelWidget* m_Panel_Goods; // 0x3f8
	UMM_Common_Btn* m_Btn_Request; // 0x400
	TArray<UPanelWidget*> m_Panel_ArrGoods; // 0x408
	TArray<UMirImage*> m_Img_Goods; // 0x418
	TArray<UMirTextBlock*> m_Txt_Goods; // 0x428
	UWidgetSwitcher* m_Switcher; // 0x438
	UWidgetAnimation* m_OpenAni; // 0x440
	UWidgetAnimation* m_CloseAni; // 0x448
	int32_t m_MaxStepStr; // 0x450
	int32_t m_NotConditionStr; // 0x454
	int32_t m_MakeLvStr; // 0x458
	int32_t m_OpenStr; // 0x45c
	int32_t m_CheckStr; // 0x460
	int32_t m_PercentFormatStrID; // 0x464
	int32_t m_StepUpStrID; // 0x468
	int32_t m_BuildingEffectStrID; // 0x46c
};

struct UMM_Common_ProgressBar {
	EProgressTextType ProgressTextType; // 0x2f0
	UCanvasPanel* Panel_HitEffect; // 0x2f8
	UMirProgressBar* Progress_Sync; // 0x300
	UMirProgressBar* Progress_Shadow; // 0x308
	UMirTextBlock* Txt_Gauge; // 0x310
	UWidgetAnimation* Anim_HitEffect; // 0x318
};

struct UMM_GameOption_InGame_QuickSlot {
	UMM_GameOption_Slider* Option_AutoPotionHpPercen; // 0x2e0
	UMM_GameOption_Slider* Option_AutoPotionMpPercent; // 0x2e8
};

struct AGenRoamingDataActor {
	AGenRoamingDataActor* Next; // 0x218
	AGenRoamingDataActor* prev; // 0x220
};

struct UMM_Mastery_Info {
	UMM_Mastery_UpgradeInfo* mMasteryTitle; // 0x300
	TArray<UMM_Mastery_Ability_Slot*> mAbilityList; // 0x308
	UMirCanvasPanel* mTrainingPanel; // 0x318
	UMirCanvasPanel* mTrainingSlotPanel; // 0x320
	TArray<UMM_Slot_Material_Item*> mMatTrainingSlotList; // 0x328
	UMirRichTextBlock* mRTxtSuccessPercent; // 0x338
	UMM_Common_Btn_Cost* mCBTrainingCost; // 0x340
	UMirCanvasPanel* mUpgradePanel; // 0x348
	UMirRichTextBlock* mRTxtNeedCharLevel; // 0x350
	UMirCanvasPanel* mFirstMatItemPanel; // 0x358
	UMirCanvasPanel* mSecondMatItemPanel; // 0x360
	TArray<UMM_Slot_Material_Item*> mMatUpgradeSlotList; // 0x368
	TArray<UMirImage*> mImgGuideList; // 0x378
	TArray<UWidgetAnimation*> mAniGuideList; // 0x388
	UMM_Common_Btn_Cost* mCBUpgradeCost; // 0x398
};

struct UMM_Popup_Occupation_Rank_Reward {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e0
	UMirScrollBox* m_scroll_List; // 0x2e8
	UMM_Occupation_Rank_Reward_List* m_mvp_RewardInfo; // 0x2f0
	TArray<UMM_Occupation_Rank_Reward_List*> m_win_RewardInfoList; // 0x2f8
	TArray<UMM_Occupation_Rank_Reward_List*> m_lose_RewardInfoList; // 0x308
};

struct USlateVectorArtData {
	TArray<FSlateMeshVertex> VertexData; // 0x28
	TArray<uint32_t> IndexData; // 0x38
	UMaterialInterface* Material; // 0x48
	FVector2D ExtentMin; // 0x50
	FVector2D ExtentMax; // 0x58
};

struct UMM_ItemResult_ItemInfo {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_PopupGuildGivePersonal {
	UWidgetSwitcher* widget_switcher; // 0x2f0
	UMM_Common_Btn_Symbol* btn_close; // 0x2f8
	UMirTextBlock* txt_tab_member; // 0x300
	UMirTextBlock* txt_tab_other; // 0x308
	UMirCheckBox* cb_members; // 0x310
	UMirCheckBox* cb_others; // 0x318
	UMirCheckBox* cb_select_others; // 0x320
	UMirCheckBox* cb_select_members; // 0x328
	UMirScrollBox* sb_members; // 0x330
	UMirScrollBox* sb_others; // 0x338
	UMM_Common_Btn* btn_search; // 0x340
	UMM_Common_Btn* btn_give; // 0x348
	UMM_Common_Board_Notice* empty_notice; // 0x350
	UMirRichTextBlock* txt_bottom_desc; // 0x358
	UMirCheckBox* cb_sort; // 0x360
	UMirCanvasPanel* cp_sort_member; // 0x368
	UMirCanvasPanel* cp_sort_other; // 0x370
	UMirButton* btn_sort_combat_power_member; // 0x378
	UMirButton* btn_sort_level_member; // 0x380
	UMirButton* btn_sort_grade_member; // 0x388
	UMirImage* img_sort_combat_power_member; // 0x390
	UMirImage* img_sort_level_member; // 0x398
	UMirImage* img_sort_grade_member; // 0x3a0
	UMirButton* btn_sort_combat_power_other; // 0x3a8
	UMirButton* btn_sort_level_other; // 0x3b0
	UMirImage* img_sort_combat_power_other; // 0x3b8
	UMirImage* img_sort_level_other; // 0x3c0
	UMirTextBlock* txt_sort; // 0x3c8
	UMirTextBlock* m_pCanvasTabGuild; // 0x3d0
	UMirCanvasPanel* m_pCanvasTabOtherUser; // 0x3d8
	UMirTextBlock* m_pTxtDailyGive; // 0x3e0
};

struct UMM_Ranking_Toggle {
	UComboBoxString* m_ComboBoxString; // 0x2f0
	UMirCanvasPanel* m_ItemBoxPanel; // 0x2f8
	UMirCanvasPanel* m_ItemBox01Panel; // 0x300
	UMirCanvasPanel* m_ItemBox02Panel; // 0x308
	UMirCanvasPanel* m_ItemBox03Panel; // 0x310
	UMirCanvasPanel* m_ItemBox04Panel; // 0x318
	UMirCanvasPanel* m_ItemBox05Panel; // 0x320
	UMirCanvasPanel* m_ItemBox06Panel; // 0x328
	UMirTextBlock* m_ItemBox01Text; // 0x330
	UMirTextBlock* m_ItemBox02Text; // 0x338
	UMirTextBlock* m_ItemBox03Text; // 0x340
	UMirTextBlock* m_ItemBox04Text; // 0x348
	UMirTextBlock* m_ItemBox05Text; // 0x350
	UMirTextBlock* m_ItemBox06Text; // 0x358
	UMirButton* m_ItemBox01Btn; // 0x360
	UMirButton* m_ItemBox02Btn; // 0x368
	UMirButton* m_ItemBox03Btn; // 0x370
	UMirButton* m_ItemBox04Btn; // 0x378
	UMirButton* m_ItemBox05Btn; // 0x380
	UMirButton* m_ItemBox06Btn; // 0x388
	UMirButton* m_ComboBoxBtn; // 0x390
};

struct UMM_Popup_MagicStone_Attribute {
	UMirScrollBox* sb_slot; // 0x2f0
	UMM_Common_Btn_Symbol* btn_close; // 0x2f8
	UMM_Common_Board_Notice* notice_empty; // 0x300
	UMirButton* Btn_BG; // 0x308
};

struct UMM_ClassPhase_SkillSlot {
	UMirImage* m_pImgSlotIcon; // 0x2e0
	UMirTextBlock* m_pTxtLevel; // 0x2e8
	UMirImage* m_pImgLevelBg; // 0x2f0
	UMirImage* m_pImgSelected; // 0x2f8
	UMirImage* m_pImgLock; // 0x300
	UMirImage* m_pImgMainSkill; // 0x308
	UMirButton* m_pBtnClick; // 0x310
	UGridPanel* m_pGrid_AwakenEffect; // 0x318
	UEffectWidgetBase* m_pAwakenEffect; // 0x320
	UMirImage* m_pImgGradeBg; // 0x328
};

struct UMM_Slot_QuickSlot {
	UMirImage* m_Img_Disabled; // 0x3e8
	UMirImage* m_Img_Indicator; // 0x3f0
	UMirImage* m_Img_TierBg; // 0x3f8
	UMirImage* m_Img_Checked; // 0x400
	UMirImage* m_Img_Selected; // 0x408
	UMirTextBlock* m_TxtCount; // 0x410
	UMirImage* m_Img_Register; // 0x418
	UMirImage* m_Image_CoolTime; // 0x420
	UMirTextBlock* m_Txt_CoolTime; // 0x428
};

struct UAISense {
	float DefaultExpirationAge; // 0x28
	EAISenseNotifyType NotifyType; // 0x2c
	char bWantsNewPawnNotification : 1; // 0x30
	char bAutoRegisterAllPawnsAsSources : 1; // 0x30
	UAIPerceptionSystem* PerceptionSystemInstance; // 0x38
};

struct UActorSequenceComponent {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0xb0
	UActorSequence* Sequence; // 0xc8
	UActorSequencePlayer* SequencePlayer; // 0xd0
};

struct UClothLODDataBase {
	UClothPhysicalMeshDataBase* PhysicalMeshData; // 0x28
	FClothCollisionData CollisionData; // 0x30
};

struct UPatchWidget_C {
	UWidgetAnimation* Ani_Splash; // 0x438
};

struct UMM_Popup_ServerList {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f0
	UScrollBox* m_Scroll_ServerList; // 0x2f8
	UPanelWidget* m_Scroll_Wrap; // 0x300
};

struct UScaleBox {
	EStretch Stretch; // 0x120
	EStretchDirection StretchDirection; // 0x121
	float UserSpecifiedScale; // 0x124
	bool IgnoreInheritedScale; // 0x128
};

struct UPluginCommandlet {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UMM_Slot_Simple {
	UMirImage* m_ImgDisabled; // 0x3e8
	UMirImage* m_ImgPlus; // 0x3f0
	UMirImage* m_ImgTierBg; // 0x3f8
};

struct UInterpTrackInstBoolProp {
	UBoolProperty* BoolProperty; // 0x40
	bool ResetBool; // 0x48
};

struct AServerStatReplicator {
	bool bUpdateStatNet; // 0x218
	bool bOverwriteClientStats; // 0x219
	uint32_t Channels; // 0x21c
	uint32_t InRate; // 0x220
	uint32_t OutRate; // 0x224
	uint32_t OutSaturation; // 0x228
	uint32_t MaxPacketOverhead; // 0x22c
	uint32_t InRateClientMax; // 0x230
	uint32_t InRateClientMin; // 0x234
	uint32_t InRateClientAvg; // 0x238
	uint32_t InPacketsClientMax; // 0x23c
	uint32_t InPacketsClientMin; // 0x240
	uint32_t InPacketsClientAvg; // 0x244
	uint32_t OutRateClientMax; // 0x248
	uint32_t OutRateClientMin; // 0x24c
	uint32_t OutRateClientAvg; // 0x250
	uint32_t OutPacketsClientMax; // 0x254
	uint32_t OutPacketsClientMin; // 0x258
	uint32_t OutPacketsClientAvg; // 0x25c
	uint32_t NetNumClients; // 0x260
	uint32_t InPackets; // 0x264
	uint32_t OutPackets; // 0x268
	uint32_t InBunches; // 0x26c
	uint32_t OutBunches; // 0x270
	uint32_t OutLoss; // 0x274
	uint32_t InLoss; // 0x278
	uint32_t VoiceBytesSent; // 0x27c
	uint32_t VoiceBytesRecv; // 0x280
	uint32_t VoicePacketsSent; // 0x284
	uint32_t VoicePacketsRecv; // 0x288
	uint32_t PercentInVoice; // 0x28c
	uint32_t PercentOutVoice; // 0x290
	uint32_t NumActorChannels; // 0x294
	uint32_t NumConsideredActors; // 0x298
	uint32_t PrioritizedActors; // 0x29c
	uint32_t NumRelevantActors; // 0x2a0
	uint32_t NumRelevantDeletedActors; // 0x2a4
	uint32_t NumReplicatedActorAttempts; // 0x2a8
	uint32_t NumReplicatedActors; // 0x2ac
	uint32_t NumActors; // 0x2b0
	uint32_t NumNetActors; // 0x2b4
	uint32_t NumDormantActors; // 0x2b8
	uint32_t NumInitiallyDormantActors; // 0x2bc
	uint32_t NumNetGUIDsAckd; // 0x2c0
	uint32_t NumNetGUIDsPending; // 0x2c4
	uint32_t NumNetGUIDsUnAckd; // 0x2c8
	uint32_t ObjPathBytes; // 0x2cc
	uint32_t NetGUIDOutRate; // 0x2d0
	uint32_t NetGUIDInRate; // 0x2d4
	uint32_t NetSaturated; // 0x2d8
};

struct UMM_Popup_SquareStageList {
	UMM_Common_Btn_Symbol* btnClose; // 0x2e0
	UMirTextBlock* txtTitle; // 0x2e8
	UMirTextBlock* txtExplanation; // 0x2f0
	UMirScrollBox* scrListBox; // 0x2f8
};

struct UMM_CheatWidget {
	FLinearColor ColorAndOpacity; // 0x110
	DelegateProperty ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	DelegateProperty ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x1a8
	UWidgetTree* WidgetTree; // 0x1b8
	int32_t Priority; // 0x1c0
	char bSupportsKeyboardFocus : 1; // 0x1c4
	char bIsFocusable : 1; // 0x1c4
	char bStopAction : 1; // 0x1c4
	char bHasScriptImplementedTick : 1; // 0x1c4
	char bHasScriptImplementedPaint : 1; // 0x1c4
	char bCookedWidgetTree : 1; // 0x1c4
	EWidgetTickFrequency TickFrequency; // 0x1d0
	UInputComponent* InputComponent; // 0x1d8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1e0
};

struct UMM_Popup_Appearance {
	UMirTextBlock* Txt_Name; // 0x300
	TArray<UMM_Popup_Appearance_Slot*> Arr_Slot; // 0x308
	UMM_CharInfo_Slim* CharInfoSlim; // 0x318
	UMirCanvasPanel* CanvasPanel; // 0x320
	UMirCanvasPanel* GradePanel; // 0x328
};

struct UMM_Dominion_RewardSlot {
	UMM_Slot_Material* m_pSlotMaterial; // 0x2e0
	UMirTextBlock* m_pTxtItemName; // 0x2e8
};

struct UPopup_DungeonReward_Info1 {
	UHorizontalBox* HorizontalBox_reward01; // 0x2e0
	UHorizontalBox* HorizontalBox_900; // 0x2e8
	UMirTextBlock* txtFirstClearReward; // 0x2f0
	UMirTextBlock* txtFixFirstClearExplain; // 0x2f8
	UMirTextBlock* txtRewardNone; // 0x300
	UHorizontalBox* HorizontalBox_reward02; // 0x308
	UHorizontalBox* HorizontalBox_4; // 0x310
	UMirTextBlock* txtNorClearReward; // 0x318
	UMM_Slot_DungeonMaterial* slotReward[0x14]; // 0x320
};

struct UParticleModuleSpawnBase {
	char bProcessSpawnRate : 1; // 0x30
	char bProcessBurstList : 1; // 0x30
};

struct UBlendSpace {
	EBlendSpaceAxis AxisToScaleAnimation; // 0x148
};

struct UMM_HudQuestSlot {
	int32_t m_iEffectID_Doing_Tracker; // 0x2e0
	int32_t m_iEffectID_Doing_Icon; // 0x2e4
	int32_t m_iEffectID_Touched; // 0x2e8
	int32_t m_iEffectID_Complate; // 0x2ec
	int32_t m_iEffectID_Complate_Tracker; // 0x2f0
	int32_t m_iEffectID_Attention; // 0x2f4
	int32_t m_CompleteSoundID; // 0x2f8
	TArray<FBrushObject> m_arrQuestStateIcon; // 0x300
	int32_t m_iMSTRID_Complete; // 0x310
	int32_t m_iMSTRID_Count; // 0x314
	int32_t m_iMSTRID_NoControl; // 0x318
	int32_t m_iMSTRID_Reward; // 0x31c
	UWidgetAnimation* m_pAniReward01; // 0x320
	UWidgetAnimation* m_pAniReward02; // 0x328
	UWidgetAnimation* m_pAniReward03; // 0x330
	float m_fOtherStageStateIconAlpha; // 0x338
	UWidgetAnimation* m_pAniQuestUpdate; // 0x340
	UButton* m_pBtnCancel; // 0x348
	UMirTextBlock* m_pTextQuestTitle; // 0x350
	UPanelWidget* m_pGridEffect; // 0x358
	UEffectWidgetBase* m_pEffectSelected; // 0x360
	UMirImage* m_pImgQuestStateIcon; // 0x368
	UButton* m_pBtnTracker; // 0x370
	UPanelWidget* m_pGridEffect_Reward; // 0x378
	UMirTextBlock* m_pTextState; // 0x380
	UMirTextBlock* m_pTextSubTitle; // 0x388
	USpacer* m_pSpacerRight; // 0x390
	UCanvasPanel* m_pCanRewardSlot; // 0x398
	TArray<UMM_Slot_Material*> m_RewardSlots; // 0x3a0
	UPanelWidget* m_pEffectUpdate; // 0x3b0
	UPanelWidget* m_pGridEffectStateIcon; // 0x3b8
	UEffectWidgetBase* m_pEffectDoingIcon; // 0x3c0
	UEffectWidgetBase* m_pEffectComplateIcon; // 0x3c8
	UEffectWidgetBase* m_pEffectAttentionIcon; // 0x3d0
};

struct UMM_PopUp_ItemInfo {
	UWidgetAnimation* m_pAnim_Start; // 0x300
	UWidgetAnimation* m_pAnim_End; // 0x308
	PANEL_SIDE PANEL_SIDE; // 0x310
	UMM_PopUp_ItemInfo_Left* m_PanelLeft; // 0x318
	UMM_PopUp_ItemInfo_List* m_ItemInfoList; // 0x320
	UMM_Popup_RandomOptionList* m_ItemInfo_ROption; // 0x328
	TArray<UMM_Hud_Chat_Tab*> m_ChatTabList; // 0x330
	UMirCanvasPanel* m_Panel_ROption; // 0x340
	UScrollBox* m_ScrollInfo_ROption; // 0x348
	UMM_Common_Btn* m_SellBtn; // 0x350
	UMM_Common_Btn* m_EquipBtn; // 0x358
	UMM_Common_Btn* m_UserLockBtn; // 0x360
	UMM_Common_Btn_Symbol* m_CloseBtn; // 0x368
	UMirTextBlock* m_NameTxt; // 0x370
	UMirTextBlock* m_SmeltingLv; // 0x378
	UPanelWidget* m_GridTier; // 0x380
	UPanelWidget* m_GridGrade; // 0x388
	UMirImage* m_TierImage; // 0x390
	UMirTextBlock* m_Grade; // 0x398
	UPanelWidget* m_Grid_UnTrade; // 0x3a0
	UMirTextBlock* m_pTxtTrade; // 0x3a8
	UPanelWidget* m_Grid_XDraco; // 0x3b0
	UMirTextBlock* m_pTxtXDraco; // 0x3b8
	int32_t STRID_Warnning; // 0x3c0
	int32_t STRID_BtnCancel; // 0x3c4
	int32_t STRID_BtnSell; // 0x3c8
	int32_t STRID_TransferItemSaleWarring; // 0x3cc
	int32_t STRID_MATERIAL_POPUP; // 0x3d0
	int32_t STRID_UIMAKEITEM; // 0x3d4
	int32_t STRID_GO_NPC; // 0x3d8
	int32_t STRID_GO_UISHOP; // 0x3dc
	int32_t STRID_CONTENTSNOTOPEN; // 0x3e0
	int32_t STRID_MSG_UNTRADABLE; // 0x3e4
};

struct UMovieSceneBoolTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UInheritableComponentHandler {
	TArray<FComponentOverrideRecord> Records; // 0x28
	TArray<UActorComponent*> UnnecessaryComponents; // 0x38
};

struct UMaterialExpressionMaterialProxyReplace {
	FExpressionInput Realtime; // 0x40
	FExpressionInput MaterialProxy; // 0x54
};

struct ACliffMoveTrigger {
	AMirSplineActor* m_pSplineActor; // 0x218
	bool m_bRightVector; // 0x220
};

struct UMM_Costume_Inventory {
	TArray<UMM_Costume_Inventory_Tab*> InventoryTabGroup; // 0x2f0
	TArray<UMM_Costume_Slot_InvenItem_Long*> InvenSlotList; // 0x300
	UScrollBox* ScrollBox; // 0x310
	UWrapBox* Scroll_WrapBox; // 0x318
	int32_t m_MaxSlotCount; // 0x320
	int32_t m_CurrentSlotCount; // 0x324
};

struct UFieldNodeBase {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UMM_Popup_PetGradeUp {
	UMirButton* m_Btn_Screen; // 0x2f0
	UMirTextBlock* m_Txt_Title; // 0x2f8
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x300
	UMirScrollBox* m_Scr_InfoSlot; // 0x308
	UMM_PetGradeUp_InfoSlot* m_arInfoSlot[0x5]; // 0x310
};

struct UFadeWidget {
	FLinearColor m_BackgroundColor; // 0x2e0
};

struct UCanvasRenderTarget2D {
	FScriptMulticastDelegate OnCanvasRenderTargetUpdate; // 0x100
	TWeakObjectPtr<UWorld> World; // 0x110
	bool bShouldClearRenderTargetOnReceiveUpdate; // 0x118
};

struct UMM_Popup_Occupation_Proclamation {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UWidgetSwitcher* m_Switcher_GuildInfo; // 0x2f8
	UMM_GuildIcon* m_Widget_GuildIcon; // 0x300
	UMirButton* m_Btn_GuildInfo; // 0x308
	UMirTextBlock* m_Txt_OccupationPeriod; // 0x310
	UMirTextBlock* m_Txt_Occupation_None; // 0x318
	UMirTextBlock* m_Txt_Occupation_Status; // 0x320
	UMirTextBlock* m_Txt_NextBattleRemainTime; // 0x328
	UMM_Common_Btn_Translation* m_Btn_Translation_Notice; // 0x330
	UMirScrollBox* m_Scroll_Txt_Notice; // 0x338
	UMirTextBlock* m_Txt_Notice; // 0x340
	UMM_Common_Board_Notice* m_EmptyCommonBoard; // 0x348
	UMirCheckBox* m_Check_StopWatchingToday; // 0x350
	UMM_Common_Btn* m_Btn_Ok; // 0x358
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x360
};

struct UMM_HudSubQuest_Slot {
	UMirImage* m_pRunningImage; // 0x2e0
	UMirImage* m_pNotRunningImage; // 0x2e8
	UPanelWidget* m_pRunningPanel; // 0x2f0
	UCanvasPanel* m_pNotRunningPanel; // 0x2f8
	UCanvasPanel* m_pCompletePanel; // 0x300
	UButton* m_pBtnTracker; // 0x308
	UMirTextBlock* m_pTxtMissionCount; // 0x310
	UMirTextBlock* m_pTxtMissionText; // 0x318
	UPanelWidget* m_pEffectPanel; // 0x320
	UPanelWidget* m_pEffectIconPanel; // 0x328
};

struct URendererSettings {
	char bMobileHDR : 1; // 0x38
	char bMobileDisableVertexFog : 1; // 0x38
	int32_t MaxMobileCascades; // 0x3c
	EMobileMSAASampleCount MobileMSAASampleCount; // 0x40
	char bMobileUseLegacyShadingModel : 1; // 0x44
	char bMobileUseHWsRGBEncoding : 1; // 0x44
	char bMobileAllowDitheredLODTransition : 1; // 0x44
	char bAllowMaterialDistanceCullFade : 1; // 0x44
	char bMobileAllowSoftwareOcclusionCulling : 1; // 0x44
	char bDiscardUnusedQualityLevels : 1; // 0x44
	char bApplyCullDistanceToDynamicActor : 1; // 0x44
	TArray<FCullDistanceVolumePreset> CullDistanceVolumePresets; // 0x48
	char bOcclusionCulling : 1; // 0x58
	float MinScreenRadiusForLights; // 0x5c
	float MinScreenRadiusForEarlyZPass; // 0x60
	float MinScreenRadiusForCSMdepth; // 0x64
	char bPrecomputedVisibilityWarning : 1; // 0x68
	char bTextureStreaming : 1; // 0x68
	char bUseDXT5NormalMaps : 1; // 0x68
	char bVirtualTextures : 1; // 0x68
	char bVirtualTexturedLightmaps : 1; // 0x68
	uint32_t VirtualTextureTileSize; // 0x6c
	uint32_t VirtualTextureTileBorderSize; // 0x70
	uint32_t VirtualTextureFeedbackFactor; // 0x74
	char bVirtualTextureEnableCompressZlib : 1; // 0x78
	char bVirtualTextureEnableCompressCrunch : 1; // 0x78
	char bClearCoatEnableSecondNormal : 1; // 0x78
	int32_t ReflectionCaptureResolution; // 0x7c
	char ReflectionEnvironmentLightmapMixBasedOnRoughness : 1; // 0x80
	char bForwardShading : 1; // 0x80
	char bVertexFoggingForOpaque : 1; // 0x80
	char bAllowStaticLighting : 1; // 0x80
	char bUseNormalMapsForStaticLighting : 1; // 0x80
	char bGenerateMeshDistanceFields : 1; // 0x80
	char bEightBitMeshDistanceFields : 1; // 0x80
	char bGenerateLandscapeGIData : 1; // 0x80
	char bCompressMeshDistanceFields : 1; // 0x81
	float TessellationAdaptivePixelsPerTriangle; // 0x84
	char bSeparateTranslucency : 1; // 0x88
	ETranslucentSortPolicy TranslucentSortPolicy; // 0x8c
	FVector TranslucentSortAxis; // 0x90
	ECustomDepthStencil CustomDepthStencil; // 0x9c
	char bCustomDepthTaaJitter : 1; // 0xa0
	EAlphaChannelMode bEnableAlphaChannelInPostProcessing; // 0xa4
	char bDefaultFeatureBloom : 1; // 0xa8
	char bDefaultFeatureAmbientOcclusion : 1; // 0xa8
	char bDefaultFeatureAmbientOcclusionStaticFraction : 1; // 0xa8
	char bDefaultFeatureAutoExposure : 1; // 0xa8
	EAutoExposureMethodUI DefaultFeatureAutoExposure; // 0xac
	char bExtendDefaultLuminanceRangeInAutoExposureSettings : 1; // 0xb0
	char bUsePreExposure : 1; // 0xb0
	char bEnablePreExposureOnlyInTheEditor : 1; // 0xb0
	char bDefaultFeatureMotionBlur : 1; // 0xb0
	char bDefaultFeatureLensFlare : 1; // 0xb0
	char bTemporalUpsampling : 1; // 0xb0
	char bSSGI : 1; // 0xb0
	EAntiAliasingMethod DefaultFeatureAntiAliasing; // 0xb4
	ELightUnits DefaultLightUnits; // 0xb5
	EDefaultBackBufferPixelFormat DefaultBackBufferPixelFormat; // 0xb6
	char bRenderUnbuiltPreviewShadowsInGame : 1; // 0xb8
	char bStencilForLODDither : 1; // 0xb8
	EEarlyZPass EarlyZPass; // 0xbc
	char bEarlyZPassOnlyMaterialMasking : 1; // 0xc0
	char bDBuffer : 1; // 0xc0
	EClearSceneOptions ClearSceneMethod; // 0xc4
	char bBasePassOutputsVelocity : 1; // 0xc8
	char bSelectiveBasePassOutputs : 1; // 0xc8
	char bDefaultParticleCutouts : 1; // 0xc8
	int32_t GPUSimulationTextureSizeX; // 0xcc
	int32_t GPUSimulationTextureSizeY; // 0xd0
	char bGlobalClipPlane : 1; // 0xd4
	EGBufferFormat GBufferFormat; // 0xd8
	char bUseGPUMorphTargets : 1; // 0xdc
	char bNvidiaAftermathEnabled : 1; // 0xdc
	char bInstancedStereo : 1; // 0xdc
	char bMultiView : 1; // 0xdc
	char bMobileMultiView : 1; // 0xdc
	char bMobileMultiViewDirect : 1; // 0xdc
	char bRoundRobinOcclusion : 1; // 0xdc
	char bODSCapture : 1; // 0xdc
	float WireframeCullThreshold; // 0xe0
	char bEnableRayTracing : 1; // 0xe4
	char bEnableRayTracingTextureLOD : 1; // 0xe4
	char bSupportStationarySkylight : 1; // 0xe4
	char bSupportLowQualityLightmaps : 1; // 0xe4
	char bSupportPointLightWholeSceneShadows : 1; // 0xe4
	char bSupportAtmosphericFog : 1; // 0xe4
	char bSupportSkyAtmosphere : 1; // 0xe4
	char bSupportSkyAtmosphereAffectsHeightFog : 1; // 0xe4
	char bSupportSkinCacheShaders : 1; // 0xe5
	char bMobileEnableStaticAndCSMShadowReceivers : 1; // 0xe5
	char bMobileEnableMovableLightCSMShaderCulling : 1; // 0xe5
	char bMobileAllowDistanceFieldShadows : 1; // 0xe5
	char bMobileAllowMovableDirectionalLights : 1; // 0xe5
	uint32_t MobileNumDynamicPointLights; // 0xe8
	char bMobileDynamicPointLightsUseStaticBranch : 1; // 0xec
	char bMobileAllowMovableSpotlights : 1; // 0xec
	float SkinCacheSceneMemoryLimitInMB; // 0xf0
	char bGPUSkinLimit2BoneInfluences : 1; // 0xf4
	char bSupportDepthOnlyIndexBuffers : 1; // 0xf4
	char bSupportReversedIndexBuffers : 1; // 0xf4
	char bSupportMaterialLayers : 1; // 0xf4
	char bLPV : 1; // 0xf4
};

struct UOpenGraphPost {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UIAPInternalStoreModule {
	FIAPUserRequestData m_UserRequestProductData; // 0x58
	FIAPProductData m_PurchaseProductData; // 0x98
	TArray<EIAPPurchaseState> m_PurchaseInProgress; // 0x138
	TArray<FString> ProcessedTransactionIDs; // 0x148
	TArray<FString> ProcessedTransactionReceipts; // 0x158
	FTimerHandle DelayHideBlockScreenTimeHandle; // 0x168
	TMap<FString, FIAPMarketProductData> m_MarketProductDataMap; // 0x170
};

struct UMM_Condition_info {
	UMirTextBlock* m_AchieveName; // 0x2f0
	UMirTextBlock* m_AchieveDesc; // 0x2f8
	UMirProgressBar* m_AchievBar; // 0x300
	UMirTextBlock* m_AchievePercent; // 0x308
	UMirImage* m_Icon; // 0x310
};

struct UBTAuxiliaryNode {
	FString NodeName; // 0x30
	UBehaviorTree* TreeAsset; // 0x40
	UBTCompositeNode* ParentNode; // 0x48
};

struct UProceduralFoliageComponent {
	UProceduralFoliageSpawner* FoliageSpawner; // 0xb0
	float TileOverlap; // 0xb8
	AVolume* SpawningVolume; // 0xc0
	FGuid ProceduralGuid; // 0xc8
};

struct UMaterialExpressionDeriveNormalZ {
	FExpressionInput InXY; // 0x40
};

struct UMissionFailedWidget {
	UWidgetAnimation* m_StartAni; // 0x2e0
	float WaitSeconds; // 0x2e8
};

struct UMM_HudUserInfo {
	int32_t m_iCombatPointFontBigSize; // 0x2f0
	int32_t m_iCombatPointFontSmallSize; // 0x2f4
	UImage* m_pImgPartyLeader; // 0x2f8
	UMirTextBlock* m_pTextLevel; // 0x300
	UMirTextBlock* m_pTextCombatPoint; // 0x308
	UMM_ProgressBar_HP* Progressbar_UserHP; // 0x310
	UMirProgressBar* m_pProgressMP; // 0x318
	UMirTextBlock* Text_MyMP; // 0x320
	UCanvasPanel* Panel_EndEdgeEffect; // 0x328
	UImage* Image_MPDecoImage; // 0x330
	UWidgetAnimation* Anim_MPIdle; // 0x338
	UWidgetAnimation* Anim_MPUse; // 0x340
	UMirTextBlock* m_pTextPKMode; // 0x348
	UMirImage* m_pImg_PKMode_Icon; // 0x350
	UMirCanvasPanel* m_pCan_PKMode_Effect; // 0x358
	UMirTextBlock* txtBuffCount; // 0x3d0
	UButton* m_pBtnUserInfo; // 0x3d8
	UButton* m_pBtnPKMode; // 0x3e0
	UMM_HudTargetBuffInfo* m_pBuffInfoList; // 0x3e8
	UButton* m_pBtnBuff; // 0x3f0
};

struct UMM_Popup_BlackIronShop_Give {
	UMirTextBlock* m_pTxtBlackIron; // 0x2f0
	UMirTextBlock* m_pTxtPossessionValue; // 0x2f8
	UMirTextBlock* m_pTxtSelectGuild; // 0x300
	UMirCanvasPanel* m_pCanvasGuild; // 0x308
	UMirCanvasPanel* m_pCanvasEmptyGuild; // 0x310
	UMM_Common_Btn_Symbol* m_pBtnSearch; // 0x318
	UMirButton* m_pBtnSearchSe; // 0x320
	UMirImage* m_pImgGuildBg; // 0x328
	UMirImage* m_pImgGuildMark; // 0x330
	UMirTextBlock* m_pGuildMasterName; // 0x338
	UMirTextBlock* m_pGuildName; // 0x340
	UMirTextBlock* m_pTxtFull; // 0x348
	UHorizontalBox* m_pHorStorageValue; // 0x350
	UMirTextBlock* m_pTxtGuildStorageOutValue; // 0x358
	UMM_Item_Make_Slider_BigInteger* m_pSliderCount; // 0x360
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x368
	UMM_Common_Btn* btn_confirm; // 0x370
	UMM_Common_Btn* Btn_Cancel; // 0x378
	TArray<UMirImage*> m_arrImgIcon; // 0x380
	UHorizontalBox* m_pHorSendTax; // 0x390
};

struct UObjectLibrary {
	UObject* ObjectBaseClass; // 0x28
	bool bHasBlueprintClasses; // 0x30
	TArray<UObject*> Objects; // 0x38
	TArray<TWeakObjectPtr<UObject>> WeakObjects; // 0x48
	bool bUseWeakReferences; // 0x58
	bool bIsFullyLoaded; // 0x59
};

struct UAccountLocalSave {
	FString m_MacAddress; // 0x28
	FAccountLoginInfo AccountLoginInfo; // 0x38
	FString m_strLastLoginAccountID; // 0x88
	TMap<int32_t, int32_t> m_arJewelFilter; // 0x98
	TMap<FName, int32_t> m_mapIntSaveData; // 0xe8
	TMap<int32_t, bool> m_CustomizingAutoSaveData; // 0x138
	bool m_CustomizingAutoSaveFlag; // 0x188
	int32_t m_nMiniGameBestScore; // 0x18c
	TMap<FName, FName> m_mapKeySaveData; // 0x190
	bool m_bIsFinishVoiceDownload; // 0x1e0
	FString m_StoreURL; // 0x1e8
	int32_t m_FrontBannerInitDay; // 0x1f8
	bool m_bIsFrontBannerSkip; // 0x1fc
	ELanguage m_eLanguage; // 0x1fd
	bool m_bInitLanguage; // 0x1fe
	ERegionCode m_eRegionCode; // 0x1ff
	FString m_strRegionCode; // 0x200
	bool m_bInitRegionCode; // 0x210
	FString m_strRecommendRegionCode; // 0x218
};

struct UMM_ObjectAnimInstance {
	AMM_ObjectBase* Object; // 0x270
};

struct UCircularThrobber {
	int32_t NumberOfPieces; // 0x108
	float Period; // 0x10c
	float Radius; // 0x110
	USlateBrushAsset* PieceImage; // 0x118
	FSlateBrush Image; // 0x120
	bool bEnableRadius; // 0x1a8
};

struct UMM_Popup_PartyUserSubMenu {
	UMirCanvasPanel* m_Can_Panel; // 0x2e0
	UMirTextBlock* m_pTextInfo; // 0x2e8
	UMirButton* m_pBtnInfo; // 0x2f0
	UMirTextBlock* m_pTextTalk; // 0x2f8
	UMirButton* m_pBtnTalk; // 0x300
	UMirTextBlock* m_pTextDuel; // 0x308
	UMirButton* m_pBtnDuel; // 0x310
	UMirTextBlock* m_pTextAttack; // 0x318
	UMirButton* m_pBtnAttack; // 0x320
	UCanvasPanel* m_Can_Move; // 0x328
	UMirButton* m_Btn_Move; // 0x330
	UCanvasPanel* m_pCanGuildMark; // 0x338
	UMirButton* m_pBtnGuildMark; // 0x340
	int32_t m_StrID_Info; // 0x36c
	int32_t m_StrID_Talk; // 0x370
	int32_t m_StrID_Duel; // 0x374
	float SubMenuBoxShowLimitTime; // 0x378
};

struct UParticleModuleKillBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMirEditableText {
	EStringTableType m_StringTableType; // 0x460
	int32_t m_StringTableID; // 0x464
};

struct UMM_Popup_EquippedPetStatInfo {
	FLinearColor m_StatColor; // 0x2e0
	FMargin m_StatPadding; // 0x2f0
	FMargin m_AbilityPadding; // 0x300
	UMirButton* m_Btn_Screen; // 0x310
	UMirTextBlock* m_Txt_Title; // 0x318
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x320
	UMirScrollBox* m_Scr_Stat; // 0x328
	UPanelWidget* m_Vrt_PetStat; // 0x330
	UPanelWidget* m_Vrt_PetSkill; // 0x338
	UPanelWidget* m_Vrt_PetItem; // 0x340
	UWidget* m_EmptyNotice; // 0x348
};

struct UMM_RelationQuestCompleteMsg {
	UMirImage* m_Img_Icon; // 0x318
	UMirImage* m_Img_Rare_Icon; // 0x320
	UMirImage* m_Img_Hero_Icon; // 0x328
	UMirImage* m_Img_Legend_Icon; // 0x330
};

struct AMM_SpectatorPawn {
	float BaseTurnRate; // 0x278
	float BaseLookUpRate; // 0x27c
	UPawnMovementComponent* MovementComponent; // 0x280
	USphereComponent* CollisionComponent; // 0x288
	UStaticMeshComponent* MeshComponent; // 0x290
	char bAddDefaultMovementBindings : 1; // 0x298
};

struct UMM_SkillVirtualStick {
	UImage* m_pImg_Bg; // 0x2e0
	UImage* m_pImg_Touch; // 0x2e8
	UImage* m_pImg_CenterPos; // 0x2f0
};

struct UClothPhysicalMeshDataBase {
	TArray<FVector> Vertices; // 0x28
	TArray<FVector> Normals; // 0x38
	TArray<uint32_t> Indices; // 0x48
	TArray<float> InverseMasses; // 0x58
	TArray<FClothVertBoneData> BoneData; // 0x68
	int32_t NumFixedVerts; // 0x78
	int32_t MaxBoneWeights; // 0x7c
	TArray<uint32_t> SelfCollisionIndices; // 0x80
};

struct UMaterialExpressionParticleSize {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMaterialExpressionTextureObject {
	UTexture* Texture; // 0x40
	EMaterialSamplerType SamplerType; // 0x48
	char IsDefaultMeshpaintTexture : 1; // 0x49
};

struct UParticleModuleLightBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct ACountTrigger {
	int32_t m_MaxCount; // 0x278
};

struct UAnimNotifyState_Trail {
	UParticleSystem* PSTemplate; // 0x30
	FName FirstSocketName; // 0x38
	FName SecondSocketName; // 0x40
	ETrailWidthMode WidthScaleMode; // 0x48
	FName WidthScaleCurve; // 0x4c
	char bRecycleSpawnedSystems : 1; // 0x54
};

struct UMM_GuildSupport {
	UMM_CommonVerticalTabSet* vertical_set; // 0x2f0
	UMirScrollBox* sb_support; // 0x2f8
	UMM_Common_Btn* btn_support; // 0x300
	UMirTextBlock* txt_today_contribution; // 0x308
	UMirTextBlock* txt_guild_point; // 0x310
	UMirProgressBar* pb_guild_point; // 0x318
	UMM_Common_Board_Notice* bn_empty; // 0x320
	UMirCanvasPanel* cp_point; // 0x328
	UWidgetAnimation* ani_point; // 0x330
	UMirTextBlock* Txt_Point; // 0x338
	UMirImage* img_point; // 0x340
};

struct UAIResource_Movement {
	int32_t ManualResourceID; // 0x28
	uint8_t AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UEditableGeometryCollectionAdapter {
	UGeometryCollection* GeometryCollection; // 0x28
	UGeometryCollection* OriginalGeometryCollection; // 0x30
	int32_t GeometryCollectionLODIndex; // 0x38
};

struct UMM_Popup_GuildMembersPosSlot {
	UMirImage* Img_Icon; // 0x2e0
	UMirTextBlock* Txt_Position; // 0x2e8
	UMirTextBlock* txt_buff; // 0x2f0
	UMM_Common_Btn* Btn_Main; // 0x2f8
	UMM_Common_Btn* btn_dismiss; // 0x300
};

struct ACharacter {
	USkeletalMeshComponent* Mesh; // 0x278
	UCharacterMovementComponent* CharacterMovement; // 0x280
	UCapsuleComponent* CapsuleComponent; // 0x288
	FBasedMovementInfo BasedMovement; // 0x290
	FBasedMovementInfo ReplicatedBasedMovement; // 0x2c0
	float AnimRootMotionTranslationScale; // 0x2f0
	FVector BaseTranslationOffset; // 0x2f4
	FQuat BaseRotationOffset; // 0x300
	float ReplicatedServerLastTransformUpdateTimeStamp; // 0x310
	float ReplayLastTransformUpdateTimeStamp; // 0x314
	char ReplicatedMovementMode; // 0x318
	bool bInBaseReplication; // 0x319
	float CrouchedEyeHeight; // 0x31c
	char bIsCrouched : 1; // 0x320
	char bProxyIsJumpForceApplied : 1; // 0x320
	char bPressedJump : 1; // 0x320
	char bClientUpdating : 1; // 0x320
	char bClientWasFalling : 1; // 0x320
	char bClientResimulateRootMotion : 1; // 0x320
	char bClientResimulateRootMotionSources : 1; // 0x320
	char bSimGravityDisabled : 1; // 0x320
	char bClientCheckEncroachmentOnNetUpdate : 1; // 0x321
	char bServerMoveIgnoreRootMotion : 1; // 0x321
	char bWasJumping : 1; // 0x321
	float JumpKeyHoldTime; // 0x324
	float JumpForceTimeRemaining; // 0x328
	float ProxyJumpForceStartedTime; // 0x32c
	float JumpMaxHoldTime; // 0x330
	int32_t JumpMaxCount; // 0x334
	int32_t JumpCurrentCount; // 0x338
	FScriptMulticastDelegate OnReachedJumpApex; // 0x340
	FScriptMulticastDelegate MovementModeChangedDelegate; // 0x360
	FScriptMulticastDelegate OnCharacterMovementUpdated; // 0x370
	FRootMotionSourceGroup SavedRootMotion; // 0x380
	FRootMotionMovementParams ClientRootMotionParams; // 0x480
	TArray<FSimulatedRootMotionReplicatedMove> RootMotionRepMoves; // 0x4c0
	FRepRootMotionMontage RepRootMotion; // 0x4d0
};

struct ACameraShakeTrigger {
	FVector m_BoxExtent; // 0x218
	UBoxComponent* m_pBoxComponent; // 0x228
};

struct UMM_Guild_BlackIron_InventoryListSlot {
	UMirImage* m_pImgPortrait; // 0x2e0
	UMirTextBlock* m_pTxtName; // 0x2e8
	UMirTextBlock* m_pTxtTime; // 0x2f0
	UMirTextBlock* m_pTxtTypeName; // 0x2f8
	UMirImage* m_pImgIcon; // 0x300
	UMirTextBlock* m_pTxtCostValue; // 0x308
};

struct UMM_ProfileSlot {
	UMirImage* m_IconImage; // 0x2f0
	UCanvasPanel* m_ApplyWidget; // 0x2f8
	UMirImage* m_SelectImage; // 0x300
	UMirButton* m_Btn_Main; // 0x308
	UMirCanvasPanel* m_Can_ServerVisit; // 0x310
};

struct UMM_UIShopGoodsListView {
	UMM_UIShopCashBag* mUIShopCashBag; // 0x2e0
	UMM_UIShopGoodsListNormal* mUIShopGoodsListNormal; // 0x2e8
};

struct UMM_Popup_Addressbook_Slot {
	int32_t STRING_ONLINE_ID; // 0x2e8
	int32_t STRING_OFFLINE_ID; // 0x2ec
	UMirImage* m_Img_Class; // 0x2f0
	UMirImage* m_Img_Favorite; // 0x2f8
	UMirImage* m_Img_Online; // 0x300
	UMirTextBlock* m_Txt_Level; // 0x308
	UMirTextBlock* m_Txt_CombatPoint; // 0x310
	UMirTextBlock* m_Txt_Nickname; // 0x318
	UHorizontalBox* m_HrzBox_Guild; // 0x320
	UMirImage* m_Img_Guild_Frame; // 0x328
	UMirImage* m_Img_Guild_Symbol; // 0x330
	UMirTextBlock* m_Txt_GuildName; // 0x338
	UMirTextBlock* m_Txt_UserState; // 0x340
	UMM_Common_Btn* m_C_Btn_Select; // 0x348
};

struct UMM_Skill_AwakenSlot {
	UMirRichTextBlock* mRTxtName; // 0x2e0
	TArray<UMirRichTextBlock*> mRTxtAwakenDescList; // 0x2e8
};

struct UBTTask_MakeNoise {
	float Loudnes; // 0x70
};

struct USimulatedClientNetConnection {
	TArray<UChildConnection*> Children; // 0x48
	UNetDriver* Driver; // 0x58
	UPackageMap* PackageMapClass; // 0x60
	UPackageMap* PackageMap; // 0x68
	TArray<UChannel*> OpenChannels; // 0x70
	TArray<AActor*> SentTemporaries; // 0x80
	AActor* ViewTarget; // 0x90
	AActor* OwningActor; // 0x98
	int32_t MaxPacket; // 0xa0
	char InternalAck : 1; // 0xa4
	FUniqueNetIdRepl PlayerId; // 0x160
	double LastReceiveTime; // 0x1d0
	TArray<UChannel*> ChannelsToTick; // 0x14a8
};

struct UMovieScene {
	TArray<FMovieSceneSpawnable> Spawnables; // 0x50
	TArray<FMovieScenePossessable> Possessables; // 0x60
	TArray<FMovieSceneBinding> ObjectBindings; // 0x70
	TMap<FName, FMovieSceneObjectBindingIDs> BindingGroups; // 0x80
	TArray<UMovieSceneTrack*> MasterTracks; // 0xd0
	UMovieSceneTrack* CameraCutTrack; // 0xe0
	FMovieSceneFrameRange SelectionRange; // 0xe8
	FMovieSceneFrameRange PlaybackRange; // 0xf8
	FFrameRate TickResolution; // 0x108
	FFrameRate DisplayRate; // 0x110
	EMovieSceneEvaluationType EvaluationType; // 0x118
	EUpdateClockSource ClockSource; // 0x119
	TArray<FMovieSceneMarkedFrame> MarkedFrames; // 0x120
};

struct UMaterialExpressionLogarithm2 {
	FExpressionInput X; // 0x40
};

struct UColorBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UMaterialExpressionSkyAtmosphereAerialPerspective {
	FExpressionInput WorldPosition; // 0x40
};

struct UMaterialExpressionSobol {
	FExpressionInput Cell; // 0x40
	FExpressionInput Index; // 0x54
	FExpressionInput Seed; // 0x68
	uint32_t ConstIndex; // 0x7c
	FVector2D ConstSeed; // 0x80
};

struct UChangeMaterialNotifyState {
	UMaterial* ChangeMaterial; // 0x30
	TArray<UMaterialInstanceDynamic*> OrgMIDList; // 0x38
};

struct UMM_UIShopSubTab {
	UMirImage* m_Img_Selected; // 0x2f0
	UMirImage* m_Img_TagIcon; // 0x2f8
	UMirTextBlock* m_Txt_TabName; // 0x300
	UMirButton* m_Btn_SubTab; // 0x308
	UMirCanvasPanel* m_Panel_Indicator; // 0x310
	UPanelWidget* m_Panel_EffectSelected; // 0x318
	UEffectWidgetBase* m_Effect_Selected; // 0x320
	UPanelWidget* m_Panel_EffectClick; // 0x328
	UEffectWidgetBase* m_Effect_Click; // 0x330
};

struct USphereReflectionCaptureComponent {
	float InfluenceRadius; // 0x298
	float CaptureDistanceScale; // 0x29c
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x2a0
};

struct UMM_Item_Make_Slider {
	UMirTextBlock* m_pTxt_CurValueNum; // 0x328
	UMM_Common_Btn_Symbol* m_pBtn_DecreaseValue; // 0x330
	UMM_Common_Btn_Symbol* m_pBtn_IncreaseValue; // 0x338
	UMM_Common_Btn_Symbol* m_pBtn_MaxValue; // 0x340
	UMM_Common_Btn_Symbol* m_pBtn_MinValue; // 0x348
	UMM_Common_Btn* m_pBtn_IncreaseUnit; // 0x350
	UMM_Common_Btn_Symbol* m_pBtn_KeyPad; // 0x358
	UMirImage* m_pImgCostIcon; // 0x360
	int32_t m_iMinValue; // 0x368
	int32_t m_iMaxValue; // 0x36c
	int32_t m_iCurValue; // 0x370
	int32_t m_iStackValue; // 0x374
	int32_t m_iIncreaseUnit; // 0x378
	int32_t m_iCurrentMaxValue; // 0x37c
	int32_t m_iSellValue; // 0x380
	bool m_Lock; // 0x384
};

struct UMM_BossAppearance {
	UMirImage* m_pImageBossIcon; // 0x2f0
	UMirTextBlock* m_pTxtName; // 0x2f8
	UMirTextBlock* pTxtTitle; // 0x300
	UMirTextBlock* m_pTxtMessage; // 0x308
	UWidgetAnimation* m_pAppearAnimation; // 0x310
};

struct UMaterialExpressionParticleSubUVProperties {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMaterialExpressionPreSkinnedNormal {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMaterialExpressionSceneColor {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput OffsetFraction; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct UNavLinkDefinition {
	TArray<FNavigationLink> Links; // 0x28
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x38
};

struct UMM_Btn_HudSkill {
	int32_t m_iEffectID_EndCooltime; // 0x340
	int32_t m_iEffectID_DechChange; // 0x344
	int32_t m_iEffectID_ContentsOpen; // 0x348
	int32_t m_iEffectID_Use; // 0x34c
	int32_t m_iEffectID_DurationSkill; // 0x350
	int32_t m_iEffectID_ChangeDeck; // 0x354
	TArray<FBrushObject> m_arrBrushCoolTimeFont; // 0x358
	FLinearColor m_CoolTimeFontColor; // 0x368
	FLinearColor m_CoolTimeFontOverColor; // 0x378
	UButton* AreaButton; // 0x388
	UImage* LockIcon; // 0x390
	UMirImage* SilenceIcon; // 0x398
	UMirImage* SkillIcon; // 0x3a0
	UImage* CoolTimeGauge; // 0x3a8
	UAlignedWrapBox* CoolTimeCountWarpBox; // 0x3b0
	UImage* CoolTimeCount_2; // 0x3b8
	UImage* CoolTimeCount_11; // 0x3c0
	UImage* CoolTimeCount_101; // 0x3c8
	UImage* WaitTimeGauge; // 0x3d0
	UMirCanvasPanel* ManualStatePanel; // 0x3d8
	UMirCanvasPanel* AutoStateAniPanel; // 0x3e0
	UMirImage* AutoOnEffect; // 0x3e8
	UWidgetAnimation* AutoOnAnimation; // 0x3f0
	UWidgetAnimation* AutoOffAnimation; // 0x3f8
	UMirCanvasPanel* AutoAnimationPanel; // 0x400
	UMirCanvasPanel* ManualAnimationPanel; // 0x408
	UPanelWidget* EffectPanel; // 0x410
	UPanelWidget* SmiteEffectPanel; // 0x418
	UWidgetAnimation* SmiteAnimation; // 0x420
	UPanelWidget* ClickEffectPanel; // 0x428
	UWidgetAnimation* ClickAnimation; // 0x430
	UPanelWidget* DeckChangeEffectPanel; // 0x438
	UWidgetAnimation* DeckChangeAnimation; // 0x440
	UPanelWidget* CoolEndEffectPanel; // 0x448
	UWidgetAnimation* CoolEndAnimation; // 0x450
};

struct UMaterialExpressionAdd {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMonoWaveTableSynthPreset {
	FString PresetName; // 0x28
	char bLockKeyframesToGridBool : 1; // 0x38
	int32_t LockKeyframesToGrid; // 0x3c
	int32_t WaveTableResolution; // 0x40
	TArray<FRuntimeFloatCurve> WaveTable; // 0x48
	char bNormalizeWaveTables : 1; // 0x58
};

struct UParticleModuleColor {
	FRawDistributionVector StartColor; // 0x30
	FRawDistributionFloat StartAlpha; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct UMM_GameOption_LanguageSlot {
	UMM_Common_Btn* m_CB_Main; // 0x2e0
	UMirImage* m_Img_Language; // 0x2e8
};

struct UMM_Popup_ClosedTraining_DetailStat {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UMirTextBlock* m_Txt_LevelTitle; // 0x2e8
	UMirTextBlock* m_Txt_StatName; // 0x2f0
	UMirScrollBox* m_ScrollBox; // 0x2f8
	UMM_Common_Btn_Symbol* m_BtnClose; // 0x300
};

struct UMM_Popup_Profile {
	UMM_ProfileSlot* MyProfile; // 0x2e0
	UMM_ProfileImageEditor* m_ProfileImageEditor; // 0x2e8
	TArray<UMM_ProfileSlot*> m_IconArray; // 0x2f0
	UWrapBox* m_IconListBox; // 0x310
	UMM_Common_Btn* m_ApplyBtn; // 0x318
	UMM_Common_Btn* m_AddProfileImage; // 0x320
	UMirImage* m_SelectIcon; // 0x328
	UMM_Common_Btn_Symbol* m_CloseBtn; // 0x330
	UTexture2D* m_pProfileTexture; // 0x338
};

struct UMM_PopupGuildGive {
	UMM_Common_Btn_Symbol* btn_close; // 0x2f0
	UMM_Common_Btn* Btn_Cancel; // 0x2f8
	UMM_Common_Btn* btn_confirm; // 0x300
	UMM_Common_Btn* btn_confirm_lock; // 0x308
	UMirTextBlock* Txt_Title; // 0x310
	UMirTextBlock* txt_send_name; // 0x318
	UMirTextBlock* txt_send; // 0x320
	UMirTextBlock* txt_recv; // 0x328
	UMirImage* img_send; // 0x330
	UMirImage* img_recv; // 0x338
	UMirTextBlock* txt_total_give_count; // 0x340
	UMirTextBlock* txt_total_give_count_value; // 0x348
	UMirImage* img_total_give_cost; // 0x350
	UMirTextBlock* txt_total_give_cost; // 0x358
	UMirTextBlock* txt_total_give_cost_value; // 0x360
	UMirImage* img_possession; // 0x368
	UMirTextBlock* txt_possession; // 0x370
	UMirTextBlock* txt_possession_value; // 0x378
	UMirTextBlock* txt_commission; // 0x380
	UMirTextBlock* txt_commission_value; // 0x388
	UMM_Item_Make_Slider_BigInteger* item_make_slider; // 0x390
	UWidgetSwitcher* switcher; // 0x398
	UMirImage* img_dev; // 0x3a0
	UMirTextBlock* txt_dev; // 0x3a8
	UMM_Common_ToolTipBtn* m_pToolTip; // 0x3b0
	TArray<UMM_Popup_GuildDonationSelectSlot*> lst_slot; // 0x3b8
};

struct UMM_Costume_Slot_EquipInfo {
	COSTUME_PARTS CostumeParts; // 0x2f0
	int32_t DefaultIconId; // 0x2f4
	UMirImage* Img_Icon; // 0x308
	UMirImage* Img_SelectList; // 0x310
	UMirImage* Img_Open_Eyes; // 0x318
	UMirImage* Img_Close_Eyes; // 0x320
	UMirButton* Btn_CostumeVisibility; // 0x328
	UMirButton* Btn_SelectSlot; // 0x330
	UMM_Slot_Costume_Palette* ColorSlot; // 0x338
	UPanelWidget* Panel_EffectSlot; // 0x340
	UPanelWidget* Grid_Toggle; // 0x348
	bool TargetUser; // 0x350
};

struct UNavModifierComponent {
	UNavArea* AreaClass; // 0xe0
	FVector FailsafeExtent; // 0xe8
	char bIncludeAgentHeight : 1; // 0xf4
};

struct UMaterialExpressionRuntimeVirtualTextureSample {
	FExpressionInput Coordinates; // 0x40
	FExpressionInput MipValue; // 0x54
	URuntimeVirtualTexture* VirtualTexture; // 0x68
	ERuntimeVirtualTextureMaterialType materialType; // 0x70
	bool bSinglePhysicalSpace; // 0x71
	ERuntimeVirtualTextureMipValueMode MipValueMode; // 0x72
};

struct UEnvQueryTest {
	int32_t TestOrder; // 0x30
	EEnvTestPurpose TestPurpose; // 0x34
	FString TestComment; // 0x38
	EEnvTestFilterOperator MultipleContextFilterOp; // 0x48
	EEnvTestScoreOperator MultipleContextScoreOp; // 0x49
	EEnvTestFilterType FilterType; // 0x4a
	FAIDataProviderBoolValue BoolValue; // 0x50
	FAIDataProviderFloatValue FloatValueMin; // 0x80
	FAIDataProviderFloatValue FloatValueMax; // 0xb0
	EEnvTestScoreEquation ScoringEquation; // 0xe1
	EEnvQueryTestClamping ClampMinType; // 0xe2
	EEnvQueryTestClamping ClampMaxType; // 0xe3
	EEQSNormalizationType NormalizationType; // 0xe4
	FAIDataProviderFloatValue ScoreClampMin; // 0xe8
	FAIDataProviderFloatValue ScoreClampMax; // 0x118
	FAIDataProviderFloatValue ScoringFactor; // 0x148
	FAIDataProviderFloatValue ReferenceValue; // 0x178
	bool bDefineReferenceValue; // 0x1a8
	char bWorkOnFloatValues : 1; // 0x1b8
};

struct UMM_GameOption_BaseSlot {
	int32_t TitleStrID; // 0x2e0
	EGameOptionType SaveOptionType; // 0x2e4
};

struct UEnvQueryNode {
	int32_t VerNum; // 0x28
};

struct UMM_Hud_Chat_Message {
	UMirRichTextBlock* m_RTxt_Message; // 0x2e0
};

struct AMM_PlayerState {
	float Score; // 0x218
	FString PlayerName; // 0x220
	int32_t PlayerId; // 0x240
	char Ping; // 0x244
	char bShouldUpdateReplicatedPing : 1; // 0x246
	char bIsSpectator : 1; // 0x246
	char bOnlySpectator : 1; // 0x246
	char bIsABot : 1; // 0x246
	char bIsInactive : 1; // 0x246
	char bFromPreviousLevel : 1; // 0x246
	int32_t StartTime; // 0x248
	ULocalMessage* EngineMessageClass; // 0x250
	FString SavedNetworkAddress; // 0x260
	FUniqueNetIdRepl UniqueId; // 0x270
	APawn* PawnPrivate; // 0x2a0
	FString PlayerNamePrivate; // 0x320
};

struct UParticleModuleMaterialBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct ATargetPoint {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMaterialExpressionVertexInterpolator {
	FExpressionInput Input; // 0x40
};

struct UMM_UserEvent_Goal {
	UMirTextBlock* m_Txt_Name; // 0x2f0
	UMirImage* m_Img_Thumb; // 0x2f8
	UMM_UserEvent_WebBanner* m_WebBanner; // 0x300
	UMirScrollBox* m_ScrollBox; // 0x308
};

struct UAppleLoginSubSystem {
	UFirebaseCredential* m_WindowFirebaseCredential; // 0x40
};

struct UDrawSphereComponent {
	float SphereRadius; // 0x430
};

struct UMM_Customizing_List {
	TArray<UMM_Customizing_ListItem*> m_ListArray; // 0x300
	UWrapBox* m_pListBox; // 0x310
	UMM_Customizing_ComponentTitle* m_pComponentTitle; // 0x318
};

struct UMM_B_UserEvent_GachaResult {
	int32_t STRING_ID_BTN_OPENALL; // 0x2e0
	int32_t STRING_ID_BTN_CLOSE; // 0x2e4
	int32_t STRING_ID_GRADE_EPIC; // 0x2e8
	int32_t STRING_ID_GRADE_LEGEND; // 0x2ec
	float NORMAL_CARD_APPEAR_DELAY; // 0x2f0
	float HERO_CARD_APPEAR_DELAY; // 0x2f4
	TArray<UMM_UserEvent_GachaResultSlot*> m_arrItemSlot; // 0x2f8
	UMirTextBlock* m_pTitleTxt; // 0x308
	UMM_Common_Btn* m_pBtnOk; // 0x310
	UMM_Common_Btn* m_Btn_OpenAll; // 0x318
	UWidgetAnimation* m_pStartAni; // 0x320
	UWidgetAnimation* m_pEndAni; // 0x328
};

struct UMM_Hud_ChannelReady {
	UCanvasPanel* m_Canvas; // 0x2f0
	UMirTextBlock* m_Txt_Count; // 0x2f8
	UMirButton* m_Btn_Select; // 0x300
};

struct UMM_Wanted_Slot {
	UMirImage* m_Img_CharacterClass; // 0x2e8
	UMirTextBlock* m_Txt_CharacterName; // 0x2f0
	UMirTextBlock* m_Txt_CombatPoint; // 0x2f8
	UMM_GuildIcon* m_GuildIcon; // 0x300
	UMirTextBlock* m_Txt_GuildName; // 0x308
	UMirTextBlock* m_Txt_StackCount; // 0x310
	UMirImage* m_Img_RewardCost; // 0x318
	UMirTextBlock* m_Txt_RewardCost; // 0x320
	UMirImage* m_Img_FamePoint; // 0x328
	UMirTextBlock* m_Txt_FamePoint; // 0x330
	UWidgetSwitcher* m_WidgetSwitcher_Chase; // 0x338
	UMM_Common_Btn* m_Btn_Chase; // 0x340
	UMirTextBlock* m_Txt_RemainTime; // 0x348
	UMirImage* m_Img_Disable; // 0x350
	UMirTextBlock* m_Txt_Complete; // 0x358
	UMirTextBlock* m_Txt_Expired; // 0x360
};

struct UCheckBox {
	ECheckBoxState CheckedState; // 0x120
	DelegateProperty CheckedStateDelegate; // 0x124
	FCheckBoxStyle WidgetStyle; // 0x138
	USlateWidgetStyleAsset* Style; // 0x6b8
	USlateBrushAsset* UncheckedImage; // 0x6c0
	USlateBrushAsset* UncheckedHoveredImage; // 0x6c8
	USlateBrushAsset* UncheckedPressedImage; // 0x6d0
	USlateBrushAsset* CheckedImage; // 0x6d8
	USlateBrushAsset* CheckedHoveredImage; // 0x6e0
	USlateBrushAsset* CheckedPressedImage; // 0x6e8
	USlateBrushAsset* UndeterminedImage; // 0x6f0
	USlateBrushAsset* UndeterminedHoveredImage; // 0x6f8
	USlateBrushAsset* UndeterminedPressedImage; // 0x700
	EHorizontalAlignment HorizontalAlignment; // 0x708
	FMargin Padding; // 0x70c
	FSlateColor BorderBackgroundColor; // 0x720
	bool IsFocusable; // 0x748
	FScriptMulticastDelegate OnCheckStateChanged; // 0x750
};

struct UInterpTrackInstColorProp {
	FColor ResetColor; // 0x40
};

struct USourceEffectSimpleDelayPreset {
	FSourceEffectSimpleDelaySettings Settings; // 0x80
};

struct USoundNodeDelay {
	float DelayMin; // 0x40
	float DelayMax; // 0x44
};

struct UFirebaseChildListener {
	FScriptMulticastDelegate OnEvent; // 0x30
};

struct UMM_Map_DeathItem {
	float m_fRaderScale; // 0x2e0
	USpacer* m_SpcMain; // 0x2e8
	UImage* m_ImgPlayer; // 0x2f0
};

struct UMM_NewInventory_Pet {
	UMM_NewInventory* m_Inven; // 0x2e8
};

struct UMaterialExpressionArctangent2 {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct URuntimeVirtualTextureComponent {
	URuntimeVirtualTexture* VirtualTexture; // 0x220
	bool bUseStreamingLowMipsInEditor; // 0x228
	AActor* BoundsSourceActor; // 0x230
};

struct UPhysicalMaterial {
	float Friction; // 0x28
	EFrictionCombineMode FrictionCombineMode; // 0x2c
	bool bOverrideFrictionCombineMode; // 0x2d
	float Restitution; // 0x30
	EFrictionCombineMode RestitutionCombineMode; // 0x34
	bool bOverrideRestitutionCombineMode; // 0x35
	float Density; // 0x38
	float RaiseMassToPower; // 0x3c
	float DestructibleDamageThresholdScale; // 0x40
	UPhysicalMaterialPropertyBase* PhysicalMaterialProperty; // 0x48
	EPhysicalSurface SurfaceType; // 0x50
	float TireFrictionScale; // 0x54
	TArray<FTireFrictionScalePair> TireFrictionScales; // 0x58
};

struct UDestroySessionCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct AMiniMapInfoExporter {
	int32_t m_StageID; // 0x218
	UDataTable* m_pMonsterTemplate; // 0x220
};

struct USoundNode {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct UMM_Popup_Party_Slot_Option {
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x2e0
	TArray<UMM_Popup_Party_Slot_Option_Item*> m_arSlotItems; // 0x2e8
};

struct UPanelWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UMM_Occupation_Rank_Reward_List {
	UMirTextBlock* m_Txt_Rank; // 0x2e0
	UMirImage* m_img_MVP; // 0x2e8
	TArray<UMM_Slot_Material*> m_reward_Item_List; // 0x2f0
};

struct UCollisionProfile {
	TArray<FCollisionResponseTemplate> Profiles; // 0x38
	TArray<FCustomChannelSetup> DefaultChannelResponses; // 0x48
	TArray<FCustomProfile> EditProfiles; // 0x58
	TArray<FRedirector> ProfileRedirects; // 0x68
	TArray<FRedirector> CollisionChannelRedirects; // 0x78
};

struct UVOIPTalker {
	FVoiceSettings Settings; // 0xb0
};

struct UMM_UIShopGoodsSlot {
	UMirCanvasPanel* m_Panel_Root; // 0x2f8
	UMirImage* m_Img_Bg; // 0x300
	UMirTextBlock* m_Txt_GoodsName; // 0x308
	UScaleBox* m_ScaleBox_Account; // 0x310
	UMirTextBlock* m_Txt_Account; // 0x318
	UScaleBox* m_ScaleBox_PeriodEndTime; // 0x320
	UMirTextBlock* m_Txt_PeriodEndTime; // 0x328
	UMirCanvasPanel* m_Panel_Detail; // 0x330
	UMM_Common_Btn_Symbol* m_Btn_Detail; // 0x338
	UMirImage* m_Img_TagIcon; // 0x340
	UMirImage* m_Img_GoodsIcon; // 0x348
	UMirImage* m_Img_LabelIcon; // 0x350
	UMirImage* m_Img_MileageIcon; // 0x358
	UMirTextBlock* m_Txt_Mileage; // 0x360
	UMirTextBlock* m_Txt_Time; // 0x368
	UMirCanvasPanel* m_Panel_TimeOut; // 0x370
	UMirCanvasPanel* m_Panel_StepListCost; // 0x378
	UMirCanvasPanel* m_Panel_NormalCost; // 0x380
	UMirRichTextBlock* m_RTxt_Reward; // 0x388
	UMirRichTextBlock* m_RTxt_ReleaseTime; // 0x390
	UMirCanvasPanel* m_Panel_BtnCost; // 0x398
	UMirButton* m_Btn_Popup; // 0x3a0
	UHorizontalBox* m_Panel_CommonCost; // 0x3a8
	UOverlay* m_Overlay_DisCount; // 0x3b0
	UMirTextBlock* m_Txt_DiscountValue; // 0x3b8
	UMirImage* m_Img_BuyIcon; // 0x3c0
	UMirTextBlock* m_Txt_BuyValue; // 0x3c8
	UMirCanvasPanel* m_Panel_Notice; // 0x3d0
	UMirTextBlock* m_Txt_Notice; // 0x3d8
	UMirImage* m_Img_OnePlus; // 0x3e0
	UMirCanvasPanel* m_Panel_GuildGift; // 0x3e8
	UMirButton* m_Btn_GuildGift; // 0x3f0
};

struct UMM_UserEvent_Attendance_Day_02 {
	UMirTextBlock* m_Txt_Name; // 0x2f0
	UMirImage* m_Img_Thumb; // 0x2f8
	UMM_UserEvent_WebBanner* m_WebBanner; // 0x300
	TArray<UMM_UserEvent_Attendance_Day_Slot*> m_arDaySlot; // 0x308
};

struct UPopup_QuestInfo {
	UPanelWidget* m_Grid_Item_Info; // 0x2e0
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e8
	UMirButton* m_Btn_Bg; // 0x2f0
	UMirButton* m_Btn_BGMain; // 0x2f8
	UMirTextBlock* m_Txt_QuestInfo; // 0x300
	UMirRichTextBlock* m_Txt_QuestDetail; // 0x308
	UPanelWidget* m_Grid_Obj; // 0x310
	UMirTextBlock* m_Txt_Difficult; // 0x318
	UMirRichTextBlock* m_Txt_QuestDetailAdd; // 0x320
};

struct AQuestCompleteTrigger {
	UCapsuleComponent* m_Collision; // 0x218
	float m_Delay; // 0x220
};

struct UAISense_Blueprint {
	UUserDefinedStruct* ListenerDataType; // 0x80
	TArray<UAIPerceptionComponent*> ListenerContainer; // 0x88
	TArray<UAISenseEvent*> UnprocessedEvents; // 0x98
};

struct UBlackboardData {
	UBlackboardData* Parent; // 0x30
	TArray<FBlackboardEntry> Keys; // 0x38
	char bHasSynchronizedKeys : 1; // 0x48
};

struct ULevelSequencePlayer {
	FScriptMulticastDelegate OnCameraCut; // 0x870
};

struct UParticleModuleRotationRateMultiplyLife {
	FRawDistributionFloat LifeMultiplier; // 0x30
};

struct AMM_CharacterPawnBase {
	bool IsDesiredRoator; // 0x420
	FRotator StartDesiredRoator; // 0x424
	FRotator DestDesiredRoator; // 0x430
	float TotalDesiredElapsedTime; // 0x43c
	float SumDesiredElapsedTime; // 0x440
	UParticleSystemComponent* BeamParticleSystemComponent; // 0x448
	USkeletalMeshComponent* BodyMesh; // 0x468
	UMM_PawnMovementComponent* m_MovementComponent; // 0x470
	FBasedMovementInfo BasedMovement; // 0x478
	bool m_bMultiTarget; // 0x4a9
	UMirWidgetComponent* WidgetComp; // 0x4f8
	UMirWidgetComponent* WidgetComp_2D; // 0x500
	UCurveFloat* m_HeightCurve; // 0x518
	FVector PivotHead; // 0x764
	float DetectRange; // 0x770
	float AutoBattleShortRange; // 0x774
	float AutoBattleMidRange; // 0x778
	float ShakeTime; // 0x77c
	float ShakeAngle; // 0x780
	FVector NameTagOffset; // 0x784
	float WalkSpeed; // 0x790
	float RunSpeed; // 0x794
	float CliffMoveSpeed; // 0x798
	float m_fConstFlashTime; // 0x79c
	ASpeechBalloonUI* m_pBalloonUI; // 0x7b0
	UMM_FSMComponent* FSMComp; // 0x7d8
	UMM_B_Target* m_pTarget; // 0x830
	UPointLightComponent* m_pCharPointLight; // 0x838
	UMM_CrowdControlComponent* m_pCCComponent; // 0x840
	UMM_ExecuteDecalComponent* ExecuteDecalComponent; // 0x848
	TArray<FCharMaterialData> m_arrCharMaterial; // 0x860
	float m_MoveRate; // 0x8c8
	float m_SpeedAniRate; // 0x8cc
	FCharStatistics m_CharData; // 0x980
};

struct UMM_UIAction_Costume_Editor {
	int32_t STRING_BTN_PURCHASE; // 0x318
	int32_t STRING_BTN_PURCHASE_CHOICE; // 0x31c
	int32_t STRING_BTN_EQUIP; // 0x320
	int32_t STRING_BTN_UNEQUIP; // 0x324
	int32_t STRING_ERROR_CHECK_COST; // 0x328
	int32_t STRING_ERROR_SELCT_COSUTME; // 0x32c
	int32_t STRING_ERROR_CONTENTS_OPEN; // 0x330
	int32_t STRING_PURCHASE_MSG; // 0x334
	int32_t STRING_CHANGECOLOR_COMPLETE_MSG; // 0x338
	int32_t STRING_CHANGECOLOR_NOT_STRONGPOINT_MSG; // 0x33c
	int32_t STRING_CHANGECOLOR_NOT_OCCUPATION_MSG; // 0x340
	int32_t STRING_MSG_CHOSECOLOR; // 0x344
	int32_t STRING_MSG_NONE_SELECT_COSTUME; // 0x348
	int32_t STRING_MSG_REQUIER_MONEY_COST; // 0x34c
	int32_t STRING_MSG_REQUIER_MONEY_ITEM; // 0x350
	int32_t STRING_MSG_SUCCESS_EQUIP; // 0x354
	int32_t STRING_MSG_SUCCESS_UNEQUIP; // 0x358
	int32_t STRING_MSG_SUCCESS_DRYEING; // 0x35c
	int32_t STRING_MSG_NONE_SELECT_DRYEING; // 0x360
	int32_t STRING_MSG_HIDDEN_DEFAULT_COSTUME; // 0x364
	int32_t STRING_MSG_UNEQUIP_DEFAULT_COSTUME; // 0x368
	int32_t STRING_MSG_REQUEST_EQUIP_COSTUME; // 0x36c
	int32_t STRING_MSG_NO_CAHNGE_COLOR; // 0x370
};

struct UBoolBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct USubmixEffectSubmixEQPreset {
	FSubmixEffectSubmixEQSettings Settings; // 0x78
};

struct UMM_B_PKRecord {
	UMirListView* m_ListView_PKRecordList; // 0x2e0
	TArray<UPKRecordSlotObj*> m_arPKRecordSlotObj; // 0x2e8
	UTextBlock* m_Txt_Tend; // 0x2f8
	UTextBlock* m_Txt_TendPoint; // 0x300
	UMirTextBlock* m_pTxt_PvpKill; // 0x308
	UMirTextBlock* m_pTxt_PvpDie; // 0x310
	UCheckBox* m_WinCheckBox; // 0x318
	UCheckBox* m_DieCheckBox; // 0x320
	UMM_Common_Board_Notice* m_pEmptyListNotice; // 0x328
};

struct UMM_CharAbility_Info_Skill {
	TArray<UMM_Skill_DeckSlot*> arrSkillSlot; // 0x300
	UMM_Skill_DeckSlot* SkillSlot_Special; // 0x310
};

struct UMM_PopUp_GameOption {
	UPanelWidget* Panel_Goods; // 0x2f0
	UMM_CommonHorizontalTabSet* MainTabSet; // 0x2f8
	UWidgetSwitcher* WidgetSwitcher; // 0x300
	UMM_GameOption_Account* GameOption_Account; // 0x308
	UMM_GameOption_InGame* GameOption_InGame; // 0x310
	UMM_GameOption_Environment* GameOption_Environment; // 0x318
	UMM_GameOption_PC* GameOption_PC; // 0x320
	UMirButton* Btn_Return; // 0x328
	UMM_Common_Btn_Symbol* btn_close; // 0x330
};

struct ARadialForceActor {
	URadialForceComponent* ForceComponent; // 0x218
};

struct UMM_B_Unsealing {
	int32_t EFFECT_RECOMMEND_MAKE_ITEM; // 0x2e0
	int32_t m_TotalMenuTID; // 0x2e4
	TArray<int32_t> InventoryIDList; // 0x2e8
	UWidgetAnimation* Ani_Open; // 0x2f8
	UWidgetAnimation* Ani_Close; // 0x300
	UMM_NewInventoryUnsealing* inventory_unsealing; // 0x308
	UMM_Forge_Unsealing* unsealing; // 0x310
	UButton* Btn_Test; // 0x318
	UPanelWidget* Grid_Effect; // 0x320
	UImage* Img_Effect; // 0x328
	UPanelWidget* m_Can_Btn_Inventory; // 0x330
	int32_t ReqeustResult; // 0x338
};

struct UMM_B_Map {
	UHorizontalBox* m_HrzMenu[0x3]; // 0x328
	UMM_Map_NameBtn* m_Menu[0x3]; // 0x340
	UMM_Common_Btn_Symbol* m_CBClose; // 0x358
	UMM_Map_Minimap* m_Minimap; // 0x360
	UMM_Map_Worldmap* m_Worldmap; // 0x368
	UMirImage* m_ImgBg; // 0x370
	UMirCanvasPanel* m_Canvas_AreaMove; // 0x378
	UMM_Common_Btn_Symbol* m_Btn_AreaPrev; // 0x380
	UMM_Common_Btn_Symbol* m_Btn_AreaNext; // 0x388
	UMirCanvasPanel* m_Canvas_ServerChange; // 0x390
	UMirButton* m_Btn_ServerChange; // 0x398
};

struct UMM_Popup_FriendlyCharacterSlot {
	UMirTextBlock* txt_relation; // 0x2e0
	UMirImage* img_online; // 0x2e8
	UMM_GuildMemberPortrait* Portrait; // 0x2f0
	UMirTextBlock* txt_nickname; // 0x2f8
	UMirTextBlock* txt_custom_title; // 0x300
	UMirTextBlock* txt_level; // 0x308
	UMirImage* img_class; // 0x310
	UMirTextBlock* txt_class; // 0x318
	UMirTextBlock* txt_combat_power; // 0x320
	UMirButton* btn_select; // 0x328
	UMirImage* img_guild_symbol; // 0x330
	UMirImage* img_guild_frame; // 0x338
	UMirTextBlock* txt_guild_name; // 0x340
};

struct UCrowdManager {
	ANavigationData* MyNavData; // 0x28
	TArray<FCrowdAvoidanceConfig> AvoidanceConfig; // 0x30
	TArray<FCrowdAvoidanceSamplingPattern> SamplingPatterns; // 0x40
	int32_t MaxAgents; // 0x50
	float MaxAgentRadius; // 0x54
	int32_t MaxAvoidedAgents; // 0x58
	int32_t MaxAvoidedWalls; // 0x5c
	float NavmeshCheckInterval; // 0x60
	float PathOptimizationInterval; // 0x64
	float SeparationDirClamp; // 0x68
	float PathOffsetRadiusMultiplier; // 0x6c
	char bResolveCollisions : 1; // 0x70
};

struct UEditableGameplayTagQueryExpression_AllTagsMatch {
	FGameplayTagContainer Tags; // 0x28
};

struct UMM_Hud_Chat_Tab {
	UMM_Hud_Chat_Indicator* Chat_Indicator; // 0x2f8
	UMirImage* Img_ChannelIcon; // 0x300
	UMirTextBlock* Txt_ChannelName; // 0x308
	UMirImage* Img_Select; // 0x310
	UMirButton* Btn_Tab; // 0x318
	UMirImage* Img_AllianceChannelIcon; // 0x320
};

struct UMM_PopUp_Costume_CollectionList {
	UMM_Common_Btn_Symbol* btn_close; // 0x300
	UMirTextBlock* Txt_Name; // 0x308
	UMirScrollBox* ScrollBox_CollectionList; // 0x310
	TArray<UMM_Slot_CostumeCollection*> CollectionSlotList; // 0x318
	int32_t m_MaxSlotCount; // 0x328
	int32_t m_CurrentSlotCount; // 0x32c
	COSTUME_PARTS m_CostumeParts; // 0x330
};

struct UParticleModuleSpawn {
	FRawDistributionFloat Rate; // 0x38
	FRawDistributionFloat RateScale; // 0x68
	EParticleBurstMethod ParticleBurstMethod; // 0x98
	TArray<FParticleBurst> BurstList; // 0xa0
	FRawDistributionFloat BurstScale; // 0xb0
	char bApplyGlobalSpawnRateScale : 1; // 0xe0
};

struct UMovieSceneMarginSection {
	FMovieSceneFloatChannel TopCurve; // 0xe0
	FMovieSceneFloatChannel LeftCurve; // 0x180
	FMovieSceneFloatChannel RightCurve; // 0x220
	FMovieSceneFloatChannel BottomCurve; // 0x2c0
};

struct UParticleModuleVectorFieldRotation {
	FVector MinInitialRotation; // 0x30
	FVector MaxInitialRotation; // 0x3c
};

struct UParticleModuleMeshRotation_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UAnimBlueprint {
	USkeleton* TargetSkeleton; // 0xa8
	TArray<FAnimGroupInfo> Groups; // 0xb0
	bool bUseMultiThreadedAnimationUpdate; // 0xc0
	bool bWarnAboutBlueprintUsage; // 0xc1
};

struct AMM_CustomizingPoseableMeshActor {
	UPoseableMeshComponent* m_pPoseableMeshComponent; // 0x218
	USkeletalMeshComponent* m_pSkeletalMeshComponent; // 0x220
};

struct UMM_NewInventory_Vehicle {
	UMM_NewInventory* m_Inven; // 0x2e8
};

struct UPopup_DungeonReward {
	UMirCanvasPanel* canVitory; // 0x2e0
	UPanelWidget* panVitory; // 0x2e8
	UMirImage* imgBossVictory; // 0x2f0
	UMirTextBlock* txtVictory; // 0x2f8
	UMirTextBlock* txtVictoryInfo; // 0x300
	UVerticalBox* vtcVitory; // 0x308
	UMirCanvasPanel* canFailMain; // 0x310
	UMirCanvasPanel* canFail; // 0x318
	UMirImage* imgBossFail; // 0x320
	UMirTextBlock* txtFail; // 0x328
	UMirTextBlock* txtFailInfo; // 0x330
	UMirTextBlock* txtReward; // 0x338
	UMirTextBlock* txtLeftTime; // 0x340
	UMirTextBlock* txtLeftTimeExplain; // 0x348
	UMirTextBlock* txtClearTime; // 0x350
	UMirTextBlock* txtClearTimeValue; // 0x358
	UMirTextBlock* txtFailLeftTime; // 0x360
	UMirTextBlock* txtFailLeftTimeExplain; // 0x368
	UMirTextBlock* txtDeadCount; // 0x370
	UMirCanvasPanel* canContents; // 0x378
	UPopup_DungeonReward_Info1* wgtVitoryRewardInfo; // 0x380
	UPopup_DungeonReward_Info2* wgtPartyRewardInfo; // 0x388
	UPopup_DungeonReward_Info3* wgtFailRewardInfo; // 0x390
	UMirCanvasPanel* canBtn; // 0x398
	UMM_Common_Btn* btnPartyReward; // 0x3a0
	UMM_Common_Btn* btnConfirm; // 0x3a8
	UMirCanvasPanel* canFailBtn; // 0x3b0
	UMM_Common_Btn* btnFailConfirm; // 0x3b8
	UWidgetAnimation* m_pAni_Win; // 0x3d8
	UWidgetAnimation* m_pAni_Defeat; // 0x3e0
};

struct UMovieScenePropertyTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UChaosDestructionListener {
	char bIsCollisionEventListeningEnabled : 1; // 0x220
	char bIsBreakingEventListeningEnabled : 1; // 0x220
	char bIsTrailingEventListeningEnabled : 1; // 0x220
	FChaosCollisionEventRequestSettings CollisionEventRequestSettings; // 0x224
	FChaosBreakingEventRequestSettings BreakingEventRequestSettings; // 0x23c
	FChaosTrailingEventRequestSettings TrailingEventRequestSettings; // 0x254
	TSet<AChaosSolverActor*> ChaosSolverActors; // 0x270
	TSet<AGeometryCollectionActor*> GeometryCollectionActors; // 0x2c0
	FScriptMulticastDelegate OnCollisionEvents; // 0x310
	FScriptMulticastDelegate OnBreakingEvents; // 0x320
	FScriptMulticastDelegate OnTrailingEvents; // 0x330
};

struct UMM_FilterBtn {
	UMirCheckBox* m_Check_Main; // 0x2e8
	UMirTextBlock* m_Txt_Name; // 0x2f0
	UMirButton* m_Btn_Main; // 0x2f8
};

struct UAchievementWriteCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMM_UIAction_CharAbility {
	TMap<int32_t, int32_t> m_mapGrowthProgress; // 0x650
	int32_t Tab_StrID_1; // 0x6a0
	int32_t Tab_StrID_3; // 0x6a4
	int32_t StrID_Combat; // 0x6a8
	int32_t StrID_ParamTwo_Divide; // 0x6ac
	int32_t StrID_ParamOne_AttackRank; // 0x6b0
	int32_t StrID_NickName; // 0x6b4
	int32_t Rank_StrID_Fame; // 0x6b8
	int32_t Rank_StrID_Level; // 0x6bc
	int32_t Rank_StrID_CombatPoint; // 0x6c0
	int32_t Rank_StrID_PVP; // 0x6c4
	int32_t Rank_StrID_Collection; // 0x6c8
	int32_t Rank_StrID_Guild; // 0x6cc
	int32_t StrID_Fame_Percent; // 0x6d0
	int32_t StrID_Guild_Name; // 0x6d4
	int32_t StrID_Guild_MemberGrade; // 0x6d8
	int32_t StrID_Guild_GuildCustom; // 0x6dc
	int32_t StrID_CustomTitle; // 0x6e0
};

struct ASceneCaptureGameMode {
	AUIBackGroundActor* BackGroundActor; // 0x4b0
};

struct UMM_GuildCommandMark_Slot {
	UMirCanvasPanel* m_CanEffect; // 0x2e0
	UMirImage* m_ImgSelect; // 0x2e8
	UMirImage* m_ImgCheck; // 0x2f0
	UMirImage* m_ImgMarkIcon; // 0x2f8
	UMirButton* m_BtnClick; // 0x300
	UEffectWidgetBase* m_EffectCoolTime; // 0x308
	UEffectWidgetBase* m_EffectClick; // 0x310
};

struct UMM_PopupBossTime {
	UMirRichTextBlock* txtNotice; // 0x2e0
	UWidgetAnimation* m_StartAni; // 0x2e8
};

struct UMM_MAP_Waypoint_Category {
	int32_t iCategoryNameStrID; // 0x2f0
	UMirImage* m_Img_Bg_Select; // 0x2f8
	UMirImage* m_Img_Arrow; // 0x300
	UMirTextBlock* m_Txt_Name; // 0x308
	UMirTextBlock* m_Txt_Count; // 0x310
	UMirButton* m_Btn_Main; // 0x318
	UVerticalBox* m_Vrt_Waypoint; // 0x320
	TArray<UMM_Map_Waypoint_List_Slot*> m_arWaypointSlot; // 0x328
};

struct UMM_ServerVisitRelocation_SetList {
	UMirTextBlock* m_Txt_Message; // 0x2e0
	UMM_Common_Btn* m_Btn_Move; // 0x2e8
};

struct UDialogueSoundWaveProxy {
	USoundClass* SoundClassObject; // 0x28
	char bDebug : 1; // 0x30
	char bOverrideConcurrency : 1; // 0x30
	char bOutputToBusOnly : 1; // 0x30
	char bHasDelayNode : 1; // 0x30
	char bHasConcatenatorNode : 1; // 0x30
	char bBypassVolumeScaleForPriority : 1; // 0x30
	EVirtualizationMode VirtualizationMode; // 0x31
	TSet<USoundConcurrency*> ConcurrencySet; // 0x88
	FSoundConcurrencySettings ConcurrencyOverrides; // 0xd8
	float Duration; // 0xf8
	float MaxDistance; // 0xfc
	float TotalSamples; // 0x100
	float Priority; // 0x104
	USoundAttenuation* AttenuationSettings; // 0x108
	FSoundModulation Modulation; // 0x110
	USoundSubmix* SoundSubmixObject; // 0x120
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x128
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x138
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x140
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x150
};

struct USoundNodeDoppler {
	float DopplerIntensity; // 0x40
	bool bUseSmoothing; // 0x44
	float SmoothingInterpSpeed; // 0x48
};

struct UMM_PetGradeUp_SkillLevelSlot {
	UMirTextBlock* m_Txt_SkillName; // 0x2e0
	UMirTextBlock* m_Txt_SkillLevel; // 0x2e8
	UMirImage* m_Img_Next; // 0x2f0
	UMirTextBlock* m_Txt_SkillNextLevel; // 0x2f8
	UMM_Common_ComparePoint* m_ComparePoint; // 0x300
	UMirTextBlock* m_Txt_MaxLevel; // 0x308
};

struct UMM_Skill_AwakenResult {
	UMirButton* m_BtnClose; // 0x2e0
	UMirImage* m_ImgSkillIcon; // 0x2e8
	UMirTextBlock* m_TxtSkillTitle; // 0x2f0
	UMirTextBlock* m_TxtSkillDesc; // 0x2f8
	UMirTextBlock* m_TxtCloseDesc; // 0x300
	UWidgetAnimation* m_AniAwakenResult; // 0x308
};

struct UMaterialExpressionOneMinus {
	FExpressionInput Input; // 0x40
};

struct ACameraRig_Crane {
	float CranePitch; // 0x218
	float CraneYaw; // 0x21c
	float CraneArmLength; // 0x220
	bool bLockMountPitch; // 0x224
	bool bLockMountYaw; // 0x225
	USceneComponent* TransformComponent; // 0x228
	USceneComponent* CraneYawControl; // 0x230
	USceneComponent* CranePitchControl; // 0x238
	USceneComponent* CraneCameraMount; // 0x240
};

struct UAnimationSharingStateProcessor {
	UEnum* AnimationStateEnum; // 0x28
};

struct UMM_MagicStone_EquipedDetailInfo {
	UMirTextBlock* Txt_Name; // 0x2f0
	UMM_Slot_Material* magic_stone_selected_slot; // 0x2f8
	TArray<UMM_MagicStone_AttributeSlot*> lst_slot; // 0x300
	UMirCanvasPanel* cp_contents; // 0x310
	UHorizontalBox* hb_empty; // 0x318
};

struct UBTTask_PlayAnimation {
	UAnimationAsset* AnimationToPlay; // 0x70
	char bLooping : 1; // 0x78
	char bNonBlocking : 1; // 0x78
	UBehaviorTreeComponent* MyOwnerComp; // 0x80
	USkeletalMeshComponent* CachedSkelMesh; // 0x88
};

struct UMM_B_RelationQuest {
	UMM_RelationQuestList* m_List_RelationQuest; // 0x2f0
	UMM_RelationQuestDetailList* m_RelationQuestDetail; // 0x2f8
};

struct UMaterialExpressionArcsine {
	FExpressionInput Input; // 0x40
};

struct UAnimSharingInstance {
	TArray<AActor*> RegisteredActors; // 0x28
	UAnimationSharingStateProcessor* StateProcessor; // 0xa8
	TArray<UAnimSequence*> UsedAnimationSequences; // 0xe8
	UEnum* StateEnum; // 0x108
	AActor* SharingActor; // 0x110
};

struct UMM_EffectManager {
	TArray<UParticleSystemComponent*> ComponentPool; // 0x28
	TArray<UParticleSystemComponent*> HiddenEffectArray; // 0x38
	TArray<ASkeletalEffect*> ActorPool; // 0x48
	TMap<int32_t, TWeakObjectPtr<UParticleSystemComponent>> ScriptEffects; // 0x58
	TMap<TWeakObjectPtr<UParticleSystemComponent>, FParticleBeamSpawnInfo> BeamEffects; // 0xa8
	TMap<int32_t, FParticleSpawnInfo> TaskIDAndParticleSpawnInfo; // 0xf8
	TMap<int32_t, FParticleBeamSpawnInfo> TaskIDAndParticleBeamSpawnInfo; // 0x148
	TMap<int32_t, FDecalSpawnInfo> TaskIDAndDecalSpawnInfo; // 0x198
};

struct UBTTask_ExceptionSkill {
	TArray<FSkillCondition> Conditions; // 0x78
};

struct ASkyAtmosphere {
	USkyAtmosphereComponent* SkyAtmosphereComponent; // 0x218
};

struct ALightmassCharacterIndirectDetailVolume {
	EBrushType BrushType; // 0x218
	FColor BrushColor; // 0x21c
	int32_t PolyFlags; // 0x220
	char bColored : 1; // 0x224
	char bSolidWhenSelected : 1; // 0x224
	char bPlaceableFromClassBrowser : 1; // 0x224
	char bNotForClientOrServer : 1; // 0x224
	UModel* Brush; // 0x228
	UBrushComponent* BrushComponent; // 0x230
	char bInManipulation : 1; // 0x238
	TArray<FGeomSelection> SavedSelections; // 0x240
};

struct UMM_UIShopGoodsListNormal {
	UMirListView* mListViewBigSlot; // 0x2e0
	UMirListView* mListViewNormalSlot; // 0x2e8
	UMM_Common_Board_Notice* mCommonNotice; // 0x2f0
};

struct UMM_TotalMenu_MainSlot {
	int32_t m_iMainSlot_MenuID; // 0x308
	UMirImage* m_Img_IconBg; // 0x310
	UMirImage* m_Img_Icon; // 0x318
	UMirImage* m_Img_Selected_Icon; // 0x320
	UMirTextBlock* m_Txt_Name; // 0x328
	UMirImage* m_Img_Selected_Name; // 0x330
	UMirButton* m_Btn_Main; // 0x338
	UPanelWidget* m_Grid_OpenEffect; // 0x340
	UMirImage* m_Img_Indicator; // 0x348
	UEffectWidgetBase* m_OpenEffect; // 0x350
};

struct UMM_VehicleAnimInstance {
	float MoveSpeed; // 0x268
	ERideState RideState; // 0x26c
	AMM_Vehicle* Vehicle; // 0x270
};

struct UCameraAnim {
	UInterpGroup* CameraInterpGroup; // 0x28
	float AnimLength; // 0x30
	FBox BoundingBox; // 0x34
	char bRelativeToInitialTransform : 1; // 0x50
	char bRelativeToInitialFOV : 1; // 0x50
	float BaseFOV; // 0x54
	FPostProcessSettings BasePostProcessSettings; // 0x60
	float BasePostProcessBlendWeight; // 0x590
};

struct UMM_Popup_Char_PKPenalty {
	UMirImage* Img_BuffIcon; // 0x2e0
	UMirProgressBar* Progress_GuildSupport; // 0x2e8
	UMirProgressBar* Progress_Current; // 0x2f0
	UMirTextBlock* Txt_ProgressRemainTime; // 0x2f8
	UMirRichTextBlock* RTxt_BuffDescription; // 0x300
	UMirTextBlock* Txt_BuffSupport; // 0x308
	UMM_Common_Btn* Btn_SupportRequest; // 0x310
	UMM_Common_Btn* Btn_ImmediateTreatment; // 0x318
	UMM_Common_Btn* Btn_ImmediateTreatment_Gold; // 0x320
	UMM_Common_Btn_Symbol* btn_close; // 0x328
	UMM_ShopNpcGoods* Goods; // 0x330
};

struct UCompositeDataTable {
	TArray<UDataTable*> ParentTables; // 0xc8
	TArray<UDataTable*> OldParentTables; // 0xd8
};

struct UDistributionFloatParameterBase {
	FName ParameterName; // 0x40
	float MinInput; // 0x48
	float MaxInput; // 0x4c
	float MinOutput; // 0x50
	float MaxOutput; // 0x54
	DistributionParamMode ParamMode; // 0x58
};

struct UMM_PetMain {
	int32_t m_iInventoryID; // 0x2f0
	int32_t m_iMinInvenSlotCount; // 0x2f4
	UMirButton* m_Btn_ShowGradeUpPopup; // 0x320
	UMirImage* m_Img_PetTypeBg; // 0x328
	UMirImage* m_Img_Pet_Origin; // 0x330
	UMirTextBlock* m_Txt_PetType; // 0x338
	UMirTextBlock* m_Txt_Name; // 0x340
	UMirImage* m_Img_Grade; // 0x348
	UMirTextBlock* m_Txt_CombatPoint; // 0x350
	UPanelWidget* m_Overlay_Locked; // 0x358
	UMM_PetSkillSlot* m_arSkillSlot[0x4]; // 0x360
	UMM_PetEquipSlot* m_arEquipSlot[0x8]; // 0x380
	UEffectWidgetBase* m_SkillSlotEffect; // 0x3c0
	UPanelWidget* m_Can_ShowGradeUpInfo; // 0x3c8
	UMirButton* m_Btn_ShowGradeUpInfo; // 0x3d0
	UPanelWidget* m_Can_GradeUpInfo; // 0x3d8
	UMirImage* m_Img_GradeUpPetIcon_Bg; // 0x3e0
	UMirImage* m_Img_GradeUpPetIcon; // 0x3e8
	UMirImage* m_Img_GradeUpPetIcon_Grade; // 0x3f0
	UMirTextBlock* m_Txt_GradeUpPetIcon_Name; // 0x3f8
	UMirImage* m_Img_GradeUpInfo_PreGrade; // 0x400
	UMirImage* m_Img_Next; // 0x408
	UMirImage* m_Img_GradeUpInfo_NextGrade; // 0x410
	UMirTextBlock* m_Txt_GradeUpInfo_MaxGrade; // 0x418
	UMM_PetGradeUp_SkillLevelSlot* m_arPetGradeUp_SkillLevelSlot[0x5]; // 0x420
	UMM_Slot_Material_Item* m_arSlot_GradeUpMaterial[0x2]; // 0x448
	UPanelWidget* m_Hrz_MaxGradeNotice; // 0x458
	UMM_Common_Btn* m_CB_CancelGradeUp; // 0x460
	UMM_Common_Btn_Cost* m_CB_GradeUp; // 0x468
	UPanelWidget* m_Vrt_SkillInfo; // 0x470
	UMirTextBlock* m_Txt_SkillName; // 0x478
	UMirRichTextBlock* m_RTxt_SkillDes; // 0x480
	UPanelWidget* m_Vrt_ItemInfo; // 0x488
	UMirTextBlock* m_Txt_ItemName; // 0x490
	UMirRichTextBlock* m_RTxt_PassiveName; // 0x498
	UMirRichTextBlock* m_RTxt_PassiveDes; // 0x4a0
	TArray<UMM_PopUp_ItemInfo_Ability*> m_arEquippedItemAbility; // 0x4a8
	UPanelWidget* m_Vrt_StatInfo; // 0x4b8
	UMM_Common_Btn_Symbol* m_CB_ShowPopupUnlockedPetStatInfo; // 0x4c0
	UPanelWidget* m_Hrz_StatInfo[0x2]; // 0x4c8
	UMirTextBlock* m_Txt_StatType[0x2]; // 0x4d8
	UMirTextBlock* m_Txt_StatValue[0x2]; // 0x4e8
	UMirTextBlock* m_Txt_StatEmpty; // 0x4f8
	UPanelWidget* m_Can_Right; // 0x500
	UMM_PetDeckGroup* m_PetDeckGroup; // 0x508
	UMM_PetDeckGroup* m_PetDeckGroup_New; // 0x510
	UMM_PetQuickTab* m_PetQuickTab; // 0x518
	UMirTextBlock* m_Txt_SelectDeckIndex; // 0x520
	UMirButton* m_Btn_SelectDeck; // 0x528
	UPanelWidget* m_Vrt_ShowPopupEquippedPetStat; // 0x530
	UMirButton* m_Btn_ShowPopupEquippedPetStat; // 0x538
	UMirImage* m_Img_PetQuickTabBg; // 0x540
	UPanelWidget* m_Can_PetQuickTab; // 0x548
	UMM_Common_Btn_Inven* m_CB_PetListTab; // 0x550
	UMM_Common_Btn_Inven* m_CB_ItemListTab; // 0x558
	UMirScrollBox* m_Scr_PetList; // 0x560
	UPanelWidget* m_Wrap_PetList; // 0x568
	UMM_NewInventory_Pet* m_PetEquipInven; // 0x570
	TArray<UMM_PetSlot*> m_arPetSlot; // 0x578
	UMM_SortListBtn* m_SortListBtn; // 0x588
	UMM_Common_Btn* m_CB_PetCompose; // 0x590
	UMM_Common_Btn* m_CB_Action; // 0x598
	UMM_Common_Btn* m_CB_EquipCompose; // 0x5a0
	UMM_SelectGuide* m_PetEquipGuide; // 0x5a8
	UMM_SelectGuide* m_PetEquipItemGuide; // 0x5b0
	UMirButton* m_Btn_Back; // 0x5b8
	UMirButton* m_Btn_PetClick; // 0x5c0
	UWidgetAnimation* m_AniQuickTabStart; // 0x5c8
	UWidgetAnimation* m_AniQuickTabEnd; // 0x5d0
	UWidgetAnimation* m_AniQuickTabClick; // 0x5d8
	UWidgetAnimation* m_AniPetSkillSlot[0x4]; // 0x5e0
	UWidgetAnimation* m_AniPetEquipSlot[0x8]; // 0x600
	UWidgetAnimation* m_AniShowSkillInfo; // 0x640
	UWidgetAnimation* m_AniHideSkillInfo; // 0x648
	UWidgetAnimation* m_AniShowItemInfo; // 0x650
	UWidgetAnimation* m_AniHideItemInfo; // 0x658
	UWidgetAnimation* m_AniShowStatInfo; // 0x660
	UWidgetAnimation* m_AniHideStatInfo; // 0x668
};

struct UEffectWidgetBase {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct AMM_TestGameMode {
	UMaterialParameterCollection* m_pBackgroundParamCollection; // 0x330
	AMM_Monster* m_pFriendMonster; // 0x338
	AMM_CharacterPawnBase* m_pSelectTarget; // 0x340
	AMM_CharacterPawnBase* m_pLockOnTarget; // 0x348
	bool EndLevelTravel; // 0x350
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x400
	AMM_SituationDirectiveEffect* SituationDirectiveActor; // 0x408
	TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>> MapQuestArrivalDisplayActor; // 0x410
	AMM_HQPlayerReferenceActor* m_pHQPlayer; // 0x460
	AMM_PortraitCaptureActor* m_pPortraitCaptureActor; // 0x468
	UCanvasRenderTarget2D* m_pPlayerPortraitRenderTarget; // 0x470
	AContentsLightManager* m_pContentsLightManager; // 0x478
	FString MyEditorCulture; // 0x490
};

struct UARTrackableNotifyComponent {
	FScriptMulticastDelegate OnAddTrackedGeometry; // 0xb0
	FScriptMulticastDelegate OnUpdateTrackedGeometry; // 0xc0
	FScriptMulticastDelegate OnRemoveTrackedGeometry; // 0xd0
	FScriptMulticastDelegate OnAddTrackedPlane; // 0xe0
	FScriptMulticastDelegate OnUpdateTrackedPlane; // 0xf0
	FScriptMulticastDelegate OnRemoveTrackedPlane; // 0x100
	FScriptMulticastDelegate OnAddTrackedPoint; // 0x110
	FScriptMulticastDelegate OnUpdateTrackedPoint; // 0x120
	FScriptMulticastDelegate OnRemoveTrackedPoint; // 0x130
	FScriptMulticastDelegate OnAddTrackedImage; // 0x140
	FScriptMulticastDelegate OnUpdateTrackedImage; // 0x150
	FScriptMulticastDelegate OnRemoveTrackedImage; // 0x160
	FScriptMulticastDelegate OnAddTrackedFace; // 0x170
	FScriptMulticastDelegate OnUpdateTrackedFace; // 0x180
	FScriptMulticastDelegate OnRemoveTrackedFace; // 0x190
	FScriptMulticastDelegate OnAddTrackedEnvProbe; // 0x1a0
	FScriptMulticastDelegate OnUpdateTrackedEnvProbe; // 0x1b0
	FScriptMulticastDelegate OnRemoveTrackedEnvProbe; // 0x1c0
	FScriptMulticastDelegate OnAddTrackedObject; // 0x1d0
	FScriptMulticastDelegate OnUpdateTrackedObject; // 0x1e0
	FScriptMulticastDelegate OnRemoveTrackedObject; // 0x1f0
};

struct UAsyncActionChangePrimaryAssetBundles {
	FScriptMulticastDelegate Completed; // 0x78
};

struct USoundNodeDialoguePlayer {
	FDialogueWaveParameter DialogueWaveParameter; // 0x40
	char bLooping : 1; // 0x60
};

struct AHiddenPathManagerActor {
	AMyPortalTrigger* m_pPortalTrigger1; // 0x218
	AMyPortalTrigger* m_pPortalTrigger2; // 0x220
	ATownAlarmTrigger* m_pTownAlarmTrigger1; // 0x228
	TArray<ASafetyArea*> m_pSafetyAreaArray; // 0x230
	int32_t m_HiddenPathType; // 0x240
};

struct UMM_CommonVerticalTabTreeSet {
	int32_t m_iFontSize; // 0x2f0
	bool m_bUseBg; // 0x2f4
	bool m_bHideInsteadOfLock; // 0x2f5
	UMirScrollBox* m_Scr_Main; // 0x308
	UEffectWidgetBase* m_SelectedEffect; // 0x310
	UEffectWidgetBase* m_SelectedSubEffect; // 0x318
};

struct UPropertyBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UMM_Forge_Unsealing {
	int32_t ALL_RECIEVE_BTN_EFECT_ID; // 0x2f0
	UMirTextBlock* m_Txt_UnsealingStateCount; // 0x2f8
	UMirScrollBox* m_Scr_UnsealingSlotList; // 0x300
	UMM_Common_Btn* m_pBtnGetAll; // 0x308
	TArray<UMM_Forge_UnsealingSlot*> m_arUnsealingSlot; // 0x310
};

struct UPaperSpriteComponent {
	UPaperSprite* SourceSprite; // 0x440
	UMaterialInterface* MaterialOverride; // 0x448
	FLinearColor SpriteColor; // 0x450
};

struct UMM_Party_InviteListSlot {
	UPanelWidget* m_Grid_User; // 0x2e8
	UPanelWidget* m_Grid_Info; // 0x2f0
	UMirImage* m_Img_Icn_Number; // 0x2f8
	UMirImage* m_Img_Icn_Leader; // 0x300
	UMirImage* m_Img_Icn_Class; // 0x308
	UMirTextBlock* m_Txt_Level; // 0x310
	UMirTextBlock* m_Txt_Nickname; // 0x318
	UMirTextBlock* m_Txt_CombatPoint; // 0x320
	UPanelWidget* m_Grid_Guild; // 0x328
	UMirImage* m_Img_Guild_Frame; // 0x330
	UMirImage* m_Img_Guild_Symbol; // 0x338
	UMirTextBlock* m_Txt_GuildName; // 0x340
	UPanelWidget* m_Grid_Mine_02; // 0x348
	UMirTextBlock* m_Txt_Mine; // 0x350
	UMirImage* m_Img_Bg_Mine; // 0x358
	UPanelWidget* m_Grid_Btn; // 0x360
	UPanelWidget* m_Grid_Member; // 0x368
	UPanelWidget* m_Grid_Logout; // 0x370
	UPanelWidget* m_Grid_Detail; // 0x378
	UMirTextBlock* m_Txt_Logout; // 0x380
	UMM_Common_Btn* m_C_Btn_Invite; // 0x388
	UMM_Common_Btn_IconText* m_C_Btn_Detail; // 0x390
	UMirButton* m_Btn_Main; // 0x398
	UMirImage* m_Img_Select; // 0x3a0
	UMirTextBlock* m_ChatChannelName; // 0x3a8
};

struct UMM_UIAction_Costume {
	int32_t STRING_BTN_PURCHASE; // 0x318
	int32_t STRING_BTN_PURCHASE_CHOICE; // 0x31c
	int32_t STRING_BTN_EQUIP; // 0x320
	int32_t STRING_BTN_UNEQUIP; // 0x324
	int32_t STRING_ERROR_CHECK_COST; // 0x328
	int32_t STRING_ERROR_SELCT_COSUTME; // 0x32c
	int32_t STRING_ERROR_CONTENTS_OPEN; // 0x330
	int32_t STRING_PURCHASE_MSG; // 0x334
	int32_t STRING_CHANGECOLOR_COMPLETE_MSG; // 0x338
	int32_t STRING_CHANGECOLOR_NOT_STRONGPOINT_MSG; // 0x33c
	int32_t STRING_CHANGECOLOR_NOT_OCCUPATION_MSG; // 0x340
	int32_t STRING_MSG_CHOSECOLOR; // 0x344
	int32_t STRING_MSG_NONE_SELECT_COSTUME; // 0x348
	int32_t STRING_MSG_REQUIER_MONEY_COST; // 0x34c
	int32_t STRING_MSG_REQUIER_MONEY_ITEM; // 0x350
	int32_t STRING_MSG_SUCCESS_EQUIP; // 0x354
	int32_t STRING_MSG_SUCCESS_UNEQUIP; // 0x358
	int32_t STRING_MSG_SUCCESS_DRYEING; // 0x35c
	int32_t STRING_MSG_NONE_SELECT_DRYEING; // 0x360
	int32_t STRING_MSG_HIDDEN_DEFAULT_COSTUME; // 0x364
	int32_t STRING_MSG_UNEQUIP_DEFAULT_COSTUME; // 0x368
	int32_t STRING_MSG_REQUEST_EQUIP_COSTUME; // 0x36c
	int32_t STRING_MSG_NO_CAHNGE_COLOR; // 0x370
};

struct UMaterialExpressionSpeedTree {
	FExpressionInput GeometryInput; // 0x40
	FExpressionInput WindInput; // 0x54
	FExpressionInput LODInput; // 0x68
	FExpressionInput ExtraBendWS; // 0x7c
	ESpeedTreeGeometryType GeometryType; // 0x90
	ESpeedTreeWindType WindType; // 0x91
	ESpeedTreeLODType LODType; // 0x92
	float BillboardThreshold; // 0x94
	bool bAccurateWindVelocities; // 0x98
};

struct ANpcShowTrigger {
	int32_t m_NpcShowID; // 0x278
	AMM_NPC* m_pNpc; // 0x280
};

struct UMM_Dominion_Title_GroupBase {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_PopupKeypad_BigInteger {
	UMM_Common_Btn* btn_back; // 0x2e0
	UMirTextBlock* txt_number; // 0x2e8
	UMM_Common_Btn_Symbol* btn_close; // 0x2f0
	UMM_Common_Btn* Btn_Cancel; // 0x2f8
	UMM_Common_Btn* btn_confirm; // 0x300
	UMirButton* lst_btn_number[0xa]; // 0x308
	UMirButton* btn_reset; // 0x358
	UMirButton* btn_remove; // 0x360
	UMirButton* btn_max; // 0x368
	UMirButton* btn_11; // 0x370
	UMirButton* btn_51; // 0x378
	UMirButton* btn_101; // 0x380
};

struct UTcpMessagingSettings {
	bool EnableTransport; // 0x28
	FString ListenEndpoint; // 0x30
	TArray<FString> ConnectToEndpoints; // 0x40
	int32_t ConnectionRetryDelay; // 0x50
};

struct UMovieSceneCameraAnimTrack {
	TArray<UMovieSceneSection*> CameraAnimSections; // 0x58
};

struct UFieldSystemComponent {
	UFieldSystem* FieldSystem; // 0x418
	TArray<AChaosSolverActor*> SupportedSolvers; // 0x430
};

struct UMM_StrongPoint_HudSlot {
	UMaterialInstanceDynamic* CircleGague_Mat; // 0x2f0
	UMirImage* Img_Icon; // 0x2f8
	UImage* Img_CircleGauge; // 0x300
	UMirTextBlock* Txt_RemainTime; // 0x308
	UMirButton* Btn_Main; // 0x310
};

struct AMM_GatherObject {
	bool m_bPoolingObject; // 0x428
	UObjectNameTagWidget* ObjectNameTagWidget; // 0x458
	UWidgetComponent* WidgetComp; // 0x460
	UWidgetComponent* NameTagWidgetComponent; // 0x468
	UWidgetComponent* InteractionWidgetComponent; // 0x470
	UParticleSystemComponent* LoopEffectComponent; // 0x480
	UParticleSystem* m_LoopParticleSystem; // 0x488
	UOperatingButtonWidget* OperatingBtnWidget; // 0x4c8
};

struct UMM_Popup_ServerVisit_Members_Slot {
	UMirTextBlock* m_Txt_MemberName; // 0x2e0
	UMM_Common_Btn_Symbol* m_Btn_MemberInfo; // 0x2e8
	UMM_Common_Btn_Symbol* m_Btn_MemberChat; // 0x2f0
};

struct USequenceGhostTrailNotify {
	FGhostTrailData m_GhostChar; // 0x38
	FGhostTrailData m_GhostWpn; // 0x50
};

struct UARTexture {
	EARTextureType TextureType; // 0xd0
	float Timestamp; // 0xd4
	FGuid ExternalTextureGuid; // 0xd8
	FVector2D Size; // 0xe8
};

struct UBlackboardKeyType_String {
	FString StringValue; // 0x30
};

struct UGameplayTaskResource {
	int32_t ManualResourceID; // 0x28
	uint8_t AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UMM_New_Force_Info {
	UMM_New_Force_Ability_Icon* m_arAbilityIcon[0x4]; // 0x2f8
	UPanelWidget* m_C_Grid_AdvenceMsg; // 0x318
	UMirTextBlock* m_C_Txt_ForceUpgrade; // 0x320
	UPanelWidget* m_C_Grid_Pgr_LevelUp; // 0x328
	UMirProgressBar* m_C_Pgr_LevelUp; // 0x330
	UMirTextBlock* m_C_Txt_BloodLevelIng; // 0x338
	UMM_Force_LevelUp* m_C_Force_Levelup; // 0x340
	UWidgetAnimation* m_Ani_UpgradingMsg; // 0x348
};

struct UParticleModuleEventBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMM_Hud_Popup_ChattingOpacity {
	UMM_Common_Btn_Symbol* btn_close; // 0x2e0
	UMM_GameOption_Select* Option_ChattingRenderOpacity; // 0x2e8
};

struct UTwitterIntegrationBase {
	TArray<FDelegateArray> AllDelegates; // 0x28
};

struct UBehaviorTreeManager {
	int32_t MaxDebuggerSteps; // 0x28
	TArray<FBehaviorTreeTemplateInfo> LoadedTemplates; // 0x30
	TArray<UBehaviorTreeComponent*> ActiveComponents; // 0x40
};

struct UMM_MonsterDyeingCheatWidget {
	float m_Body01_R; // 0x240
	float m_Body01_G; // 0x244
	float m_Body01_B; // 0x248
	float m_Body01_V; // 0x24c
	AMM_Monster* m_pMonster; // 0x250
	AMM_Monster* m_pPrevMonster; // 0x258
};

struct UMM_StyleBook_Slot {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UBoxFalloff {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	FTransform Transform; // 0xc0
	EFieldFalloffType Falloff; // 0xf0
};

struct ANavigationObjectBase {
	UCapsuleComponent* CapsuleComponent; // 0x220
	UBillboardComponent* GoodSprite; // 0x228
	UBillboardComponent* BadSprite; // 0x230
	char bIsPIEPlayerStart : 1; // 0x238
};

struct UMovieScene3DConstraintTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x58
};

struct UInterpTrackMoveAxis {
	EInterpMoveAxis MoveAxis; // 0x90
	FInterpLookupTrack LookupTrack; // 0x98
};

struct UMM_BattlePass_Mission_List {
	UMirScrollBox* m_ScrollBox; // 0x2f0
	UMM_BattlePass_Week_Btn* m_Week_Btn[0x3]; // 0x2f8
};

struct UParticleModuleColor_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct UMM_Ranking_Season_Start {
	UWidgetAnimation* Ani_Season_Start; // 0x2e0
};

struct UEnvQueryTest_Overlap {
	FEnvOverlapData OverlapData; // 0x1c0
};

struct UProgressWidgetStyle {
	FProgressBarStyle ProgressBarStyle; // 0x30
};

struct UMM_Popup_Worship {
	UTextBlock* m_Txt_OccupationInfo; // 0x2e0
	UTextBlock* m_Txt_OccupationGuild; // 0x2e8
	UTextBlock* m_Txt_WorshipReward; // 0x2f0
	UTextBlock* m_Txt_WorshipRewardInfo; // 0x2f8
	UMirImage* Img_OccupationGuildMarkFrame; // 0x300
	UMirImage* Img_OccupationGuildMarkSymbol; // 0x308
	UTextBlock* m_Txt_GuildLevel; // 0x310
	UTextBlock* m_Txt_GuildName; // 0x318
	UTextBlock* m_Txt_GuildMaster; // 0x320
	UTextBlock* m_Txt_GuildMasterNickName; // 0x328
	UMirImage* Img_WorshipBuff; // 0x330
	UMM_Common_Btn* m_Btn_Worship; // 0x338
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x340
};

struct UMaterialExpressionPixelNormalWS {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct USoundNodeModulatorContinuous {
	FModulatorContinuousParams PitchModulationParams; // 0x40
	FModulatorContinuousParams VolumeModulationParams; // 0x60
};

struct UMM_Popup_Auction_Regist {
	UMM_Popup_Auction_ItemInfoSlot* m_pItemInfo; // 0x2e8
	UMirTextBlock* m_pTxtTerms; // 0x2f0
	UMirTextBlock* m_pTxtPrice; // 0x2f8
	UMirTextBlock* m_pTxtCommision; // 0x300
	UMirTextBlock* m_pTxtTotalPrice; // 0x308
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x310
	UMM_Common_Btn* m_pBtnCancle; // 0x318
	UMM_Common_Btn* m_pBtnOk; // 0x320
};

struct UMM_Auction_Tab_History {
	UMirTextBlock* m_pTxtSoldCount; // 0x300
	UMirTextBlock* m_pTxtSoldMoney; // 0x308
	UMirTextBlock* m_pTxtReceiveMoney; // 0x310
	UMirListView* m_pListView; // 0x318
	UMM_Common_Board_Notice* m_pNotice; // 0x320
};

struct UComboBoxWidgetStyle {
	FComboBoxStyle ComboBoxStyle; // 0x30
};

struct UClothingAssetNv {
	FClothConfig ClothConfig; // 0xa8
	TArray<FClothLODData> LODData; // 0x180
};

struct UQueryAchievements {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UScrollBarWidgetStyle {
	FScrollBarStyle ScrollBarStyle; // 0x30
};

struct UAimOffsetBlendSpace {
	EBlendSpaceAxis AxisToScaleAnimation; // 0x148
};

struct USynthSound {
	USynthComponent* OwningSynthComponent; // 0x3d0
};

struct UCutsceneDialogueWidget {
	FText m_NameText; // 0x2e0
	ESlateVisibility m_DialogueVisible; // 0x2f8
	ESlateVisibility m_SkipButtonVisible; // 0x2f9
	UWidgetAnimation* m_pAnim_Next; // 0x300
	FLinearColor m_RelationTitleColor; // 0x308
	UTextBlock* m_NameTxtBlock; // 0x318
	UMirRichTextBlock* m_DialogBox; // 0x320
	UCanvasPanel* m_pCanSkip; // 0x328
	UCanvasPanel* m_pTalkSkip; // 0x330
	UMirCanvasPanel* m_pQuestTitlePanel; // 0x338
	UMirTextBlock* m_pTxtQuestTitleName; // 0x340
};

struct AMM_NPC {
	UMM_B_NPCNameTag* m_NPCNameTag; // 0xa38
	UMM_B_NPCMenu* m_NPCMenu; // 0xa40
	int32_t m_QuestID; // 0xa70
	int32_t m_QuestIndex; // 0xa74
	int32_t m_QuestType; // 0xa78
	UMM_NpcFunctionComponent* m_pNpcFunctionComponent; // 0xaa8
};

struct AOnlineBeaconClient {
	AOnlineBeaconHostObject* BeaconOwner; // 0x248
	UNetConnection* BeaconConnection; // 0x250
	EBeaconConnectionState ConnectionState; // 0x258
};

struct AMiniGame_MonsterActor {
	float m_fCurFlipbookLength; // 0x218
	float m_fCurPlayerPos; // 0x21c
	UMiniGameData* m_MiniGameData; // 0x220
	AMiniGame_ManagerActor* m_MiniGameActor; // 0x228
};

struct AActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMM_Party_Invite_MemberSlot {
	UPanelWidget* m_Grid_User; // 0x2e8
	UMirImage* m_Img_Icn_Number; // 0x2f0
	UMirImage* m_Img_Icn_Leader; // 0x2f8
	UMirImage* m_Img_Icn_Class; // 0x300
	UMirTextBlock* m_Txt_Level; // 0x308
	UMirTextBlock* m_Txt_Nickname; // 0x310
	UMirTextBlock* m_Txt_CombatPoint; // 0x318
	UPanelWidget* m_Grid_Guild; // 0x320
	UMirImage* m_Img_Guild_Frame; // 0x328
	UMirImage* m_Img_Guild_Symbol; // 0x330
	UMirTextBlock* m_Txt_GuildName; // 0x338
	UMirCanvasPanel* m_Can_Mine; // 0x340
	UMirTextBlock* m_Txt_Leader; // 0x348
	UPanelWidget* m_Grid_Lock; // 0x350
	UMirImage* m_Img_Icn_Lock; // 0x358
	UMirTextBlock* m_Txt_AbleClass; // 0x360
	UMirImage* m_Img_All; // 0x368
	UMirImage* m_Img_Able_Class; // 0x370
};

struct UMaterialExpressionPower {
	FExpressionInput Base; // 0x40
	FExpressionInput Exponent; // 0x54
	float ConstExponent; // 0x68
};

struct UIAPOneStorePCModule {
	FIAPUserRequestData m_UserRequestProductData; // 0x58
	FIAPProductData m_PurchaseProductData; // 0x98
	TArray<EIAPPurchaseState> m_PurchaseInProgress; // 0x138
	TArray<FString> ProcessedTransactionIDs; // 0x148
	TArray<FString> ProcessedTransactionReceipts; // 0x158
	FTimerHandle DelayHideBlockScreenTimeHandle; // 0x168
	TMap<FString, FIAPMarketProductData> m_MarketProductDataMap; // 0x170
};

struct UMM_PieceItemInfos {
	UMirTextBlock* m_Txt_Info; // 0x2e0
	TArray<UMM_PieceItemSlot*> m_PieceSlots; // 0x2e8
};

struct UAITask_RunEQS {
	AAIController* OwnerController; // 0x68
};

struct UMM_Popup_ServerVisitSelect_Slot {
	UMirImage* m_ImgBg; // 0x2e0
	UMirTextBlock* m_TxtTitle; // 0x2e8
	UMirRichTextBlock* m_RTxtTitleDesc; // 0x2f0
	UMM_Common_Btn* m_BtnSelect; // 0x2f8
};

struct UMM_Popup_GatherList_Slot {
	UMM_Slot_Material* m_ItemSlot; // 0x2e0
	UTextBlock* m_Txt_ItemName; // 0x2e8
};

struct UBTDecorator_IsBBEntryOfClass {
	UObject* TestClass; // 0x90
};

struct UControlPointMeshComponent {
	float VirtualTextureMainPassMaxDrawDistance; // 0x4a8
};

struct UDemoNetConnection {
	TArray<UChildConnection*> Children; // 0x48
	UNetDriver* Driver; // 0x58
	UPackageMap* PackageMapClass; // 0x60
	UPackageMap* PackageMap; // 0x68
	TArray<UChannel*> OpenChannels; // 0x70
	TArray<AActor*> SentTemporaries; // 0x80
	AActor* ViewTarget; // 0x90
	AActor* OwningActor; // 0x98
	int32_t MaxPacket; // 0xa0
	char InternalAck : 1; // 0xa4
	FUniqueNetIdRepl PlayerId; // 0x160
	double LastReceiveTime; // 0x1d0
	TArray<UChannel*> ChannelsToTick; // 0x14a8
};

struct UIAPOneStoreModule {
	TArray<FIAPProductData> m_OwnedProductList; // 0x1c0
	UObject* m_pOneStoreGetPurchaseFunction; // 0x1d0
	UObject* m_pUOneStoreIapProductDetailsFunction; // 0x1d8
	UObject* m_pUOneStoreIapRequestPurchaseFunction; // 0x1e0
	UObject* m_pUOneStoreIapConsumePurchaseFunction; // 0x1e8
	UObject* m_pUOneStoreIapRequestLoginFunction; // 0x1f0
	UObject* m_pUOneStoreIapRequestUpdateFunction; // 0x1f8
};

struct UMM_Popup_Auction_Guild {
	UMM_Popup_Auction_GuildSlot* m_pAuctionGuildSlot; // 0x2e8
	UMirTextBlock* m_pTxtGuildTax; // 0x2f0
	UMirTextBlock* m_pTxtMainCastleTax; // 0x2f8
	UMirTextBlock* m_pTxtSubCastleTaxTax; // 0x300
	UMirRichTextBlock* m_pTxtSystemTax; // 0x308
	UMirTextBlock* m_pTxtTotalTax; // 0x310
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x318
	UMM_Common_Btn* m_pBtnOk; // 0x320
};

struct UMM_Map_NameTag {
	UTextBlock* m_TxtName; // 0x2e0
};

struct URestrictedGameplayTagsList {
	FString ConfigFileName; // 0x28
	TArray<FRestrictedGameplayTagTableRow> RestrictedGameplayTagList; // 0x38
};

struct UMM_Occupation_BattleFieldInfo {
	UMirTextBlock* m_Txt_SiegeTitle; // 0x300
	UMirTextBlock* m_Txt_RemainText; // 0x308
	UMirTextBlock* m_Txt_Time; // 0x310
	UMirImage* m_Img_OffenseGuildIcon; // 0x318
	UMirTextBlock* m_Txt_OffenseGuildName; // 0x320
	UMirTextBlock* m_Txt_OffenseGuildUserCount; // 0x328
	UMirImage* m_Img_DefenseGuildIcon; // 0x330
	UMirTextBlock* m_Txt_DefenseGuildName; // 0x338
	UMirTextBlock* m_Txt_DefenseGuildUserCount; // 0x340
	UMirTextBlock* m_Txt_CommandMark; // 0x348
};

struct UMaterialExpressionObjectRadius {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UAISenseEvent_Damage {
	FAIDamageEvent Event; // 0x28
};

struct UImageSequenceProtocol_BMP {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UInterpTrackMove {
	FInterpCurveVector PosTrack; // 0x70
	FInterpCurveVector EulerTrack; // 0x88
	FInterpLookupTrack LookupTrack; // 0xa0
	FName LookAtGroupName; // 0xb0
	float LinCurveTension; // 0xb8
	float AngCurveTension; // 0xbc
	char bUseQuatInterpolation : 1; // 0xc0
	char bShowArrowAtKeys : 1; // 0xc0
	char bDisableMovement : 1; // 0xc0
	char bShowTranslationOnCurveEd : 1; // 0xc0
	char bShowRotationOnCurveEd : 1; // 0xc0
	char bHide3DTrack : 1; // 0xc0
	EInterpTrackMoveRotMode RotMode; // 0xc4
};

struct UBTTask_PushPawnAction {
	UPawnAction* Action; // 0x70
};

struct UMM_B_NPC_Exchange {
	UMM_Exchange_Tab_HorizonBtn* HorizonBtn; // 0x2f0
	UMM_CommonVerticalTabSet* SubMenuTab; // 0x2f8
	UMM_Common_ToggleBtn* Toggle_MakeFilter; // 0x300
	UMirTextBlock* Txt_ListName; // 0x308
	UMirScrollBox* ScrollBoxItem; // 0x310
	UVerticalBox* VerticalBox_Target; // 0x318
	TArray<UMM_Item_Make_List_Slot*> MakeSlotList_From; // 0x320
	TArray<UMM_NPC_Make_Slot*> MakeSlotList_Target; // 0x330
	UPanelWidget* Grid_MaterialInfo; // 0x340
	UPanelWidget* Grid_MaterialCost; // 0x348
	UPanelWidget* Grid_MaterialExe; // 0x350
	UMirTextBlock* Txt_Empty; // 0x358
	UMM_Slot_Registered_Circle* MaterialInfo_From; // 0x360
	UMM_Slot_Registered_Circle* MaterialInfo_To; // 0x368
	UMirTextBlock* Txt_Name_MaterialInfo_From; // 0x370
	UMirTextBlock* Txt_Name_MaterialInfo_To; // 0x378
	TArray<UPanelWidget*> Grid_MaterialCost_Sub; // 0x380
	TArray<UMirImage*> Img_MaterialCost_Type; // 0x390
	TArray<UMirTextBlock*> Txt_MaterialCost_Value; // 0x3a0
	TArray<UMirButton*> BtnMain_MaterialCost; // 0x3b0
	TArray<UMM_Common_Btn_Symbol*> Btn_MaterialCost; // 0x3c0
	UMM_Item_Make_Slider* ItemSlider; // 0x3d0
	UMM_Common_Btn* Btn_MakeItem; // 0x3d8
	UWidgetAnimation* m_OpenAni; // 0x3e0
	UWidgetAnimation* m_CloseAni; // 0x3e8
	int32_t m_MaxSlotCount; // 0x3f0
	int32_t m_CurrentSlotCount; // 0x3f4
	int32_t m_CostType; // 0x3f8
	int32_t STRING_FILTER_EXCHANGE; // 0x3fc
};

struct UTestMovieSceneTrack {
	bool bHighPassFilter; // 0x58
	TArray<UMovieSceneSection*> SectionArray; // 0x60
};

struct UMM_New_Occupation_BattleResult {
	UWidgetAnimation* m_AniWin; // 0x2f0
	UWidgetAnimation* m_AniLose; // 0x2f8
	FLinearColor m_Color_Success; // 0x300
	FLinearColor m_Color_Fail; // 0x310
	UMirTextBlock* m_txt_AutoMoveTime; // 0x320
	UMM_Slot_Occupation_Ranking* m_rankingBoard_Defence; // 0x328
	UMM_Slot_Occupation_Ranking* m_rankingBoard_Offense; // 0x330
	UMirImage* m_img_Defense_Symbol_BGFrame; // 0x338
	UMirImage* m_img_Defense_Symbol; // 0x340
	UMirTextBlock* m_txt_Defense_Guild_Name; // 0x348
	UMirTextBlock* m_txt_Defense_Result; // 0x350
	UMirImage* m_img_Offense_Symbol_BGFrame; // 0x358
	UMirImage* m_img_Offense_Symbol; // 0x360
	UMirTextBlock* m_txt_Offense_Guild_Name; // 0x368
	UMirTextBlock* m_txt_Offense_Result; // 0x370
	UMM_Common_Btn* m_Btn_Close; // 0x378
	UMM_Common_Btn* m_Btn_Exit; // 0x380
	UMM_Common_Btn* m_btn_RewardInfo; // 0x388
	UMirCanvasPanel* m_Canvas_MVP; // 0x390
	UMirTextBlock* m_txt_MVP; // 0x398
	UMirImage* m_img_MVP_Symbol_BGFrame; // 0x3a0
	UMirImage* m_img_MVP_Symbol; // 0x3a8
	UMirTextBlock* m_txt_MVP_Name; // 0x3b0
	UMirTextBlock* m_txt_MVP_Point; // 0x3b8
	UMirTextBlock* m_Txt_StageName; // 0x3c0
	UMirCanvasPanel* m_Panel_Effect; // 0x3c8
	UMirImage* m_Img_Win; // 0x3d0
	UMirImage* m_Img_Lose; // 0x3d8
};

struct UUIParticle {
	UUIParticleAsset* Asset; // 0x108
	FScriptMulticastDelegate EventOnEnd; // 0x110
	char bPlayParticle : 1; // 0x120
	bool IsPlaying; // 0x121
};

struct UPlatformInterfaceWebResponse {
	FString OriginalURL; // 0x28
	int32_t ResponseCode; // 0x38
	int32_t Tag; // 0x3c
	FString StringResponse; // 0x40
	TArray<char> BinaryResponse; // 0x50
};

struct UMaterialExpressionTextureSampleParameter2DArray {
	FName ParameterName; // 0xd0
	FGuid ExpressionGUID; // 0xd8
	FName Group; // 0xe8
};

struct UMM_ServerRelocationRegion_Global {
	UMirImage* m_Img_Icon; // 0x2e0
	UCanvasPanel* m_Canvas_Select; // 0x2e8
	UMirTextBlock* m_Txt_Region; // 0x2f0
	UMirTextBlock* m_Txt_UTC; // 0x2f8
	UMirButton* m_Btn_Select; // 0x300
};

struct UClothConfigNv {
	EClothingWindMethod WindMethod; // 0x28
	FClothConstraintSetup VerticalConstraintConfig; // 0x2c
	FClothConstraintSetup HorizontalConstraintConfig; // 0x3c
	FClothConstraintSetup BendConstraintConfig; // 0x4c
	FClothConstraintSetup ShearConstraintConfig; // 0x5c
	float SelfCollisionRadius; // 0x6c
	float SelfCollisionStiffness; // 0x70
	float SelfCollisionCullScale; // 0x74
	FVector Damping; // 0x78
	float Friction; // 0x84
	float WindDragCoefficient; // 0x88
	float WindLiftCoefficient; // 0x8c
	FVector LinearDrag; // 0x90
	FVector AngularDrag; // 0x9c
	FVector LinearInertiaScale; // 0xa8
	FVector AngularInertiaScale; // 0xb4
	FVector CentrifugalInertiaScale; // 0xc0
	float SolverFrequency; // 0xcc
	float StiffnessFrequency; // 0xd0
	float GravityScale; // 0xd4
	FVector GravityOverride; // 0xd8
	bool bUseGravityOverride; // 0xe4
	float TetherStiffness; // 0xe8
	float TetherLimit; // 0xec
	float CollisionThickness; // 0xf0
	float AnimDriveSpringStiffness; // 0xf4
	float AnimDriveDamperStiffness; // 0xf8
};

struct UMM_UIAction_EquipInfo {
	int32_t STRING_MSG_LOCK_ITEM; // 0x1c0
};

struct ALightmassImportanceVolume {
	EBrushType BrushType; // 0x218
	FColor BrushColor; // 0x21c
	int32_t PolyFlags; // 0x220
	char bColored : 1; // 0x224
	char bSolidWhenSelected : 1; // 0x224
	char bPlaceableFromClassBrowser : 1; // 0x224
	char bNotForClientOrServer : 1; // 0x224
	UModel* Brush; // 0x228
	UBrushComponent* BrushComponent; // 0x230
	char bInManipulation : 1; // 0x238
	TArray<FGeomSelection> SavedSelections; // 0x240
};

struct UMM_PetQuickSlotBtn {
	UMirImage* m_Img_On; // 0x2e8
	UMirTextBlock* m_Txt_Index; // 0x2f0
	UMirButton* m_Btn_Main; // 0x2f8
};

struct UFirebaseFutureSignInResult {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct AVolumetricLightmapDensityVolume {
	FInt32Interval AllowedMipLevelRange; // 0x250
};

struct UNavCollisionBase {
	char bIsDynamicObstacle : 1; // 0x28
};

struct UMM_ClassPhase_SkillInfoSlot {
	UMirTextBlock* m_pTxtSkillName; // 0x2e0
	UMirTextBlock* m_pTxtSkillInfo; // 0x2e8
	UMirRichTextBlock* m_pTxtSkillDesc; // 0x2f0
	UMirTextBlock* m_pTxtSpecialDesc; // 0x2f8
	UMM_Common_Btn_Symbol* m_pBtnPrev; // 0x300
	UMM_Common_Btn_Symbol* m_pBtnNext; // 0x308
	UMirTextBlock* m_pTxtAwaken; // 0x310
	UMirButton* m_pBtnAwaken; // 0x318
	UMirCanvasPanel* m_pPanelSkillDesc; // 0x320
	UMM_Common_Board_Notice* m_pNoticeEmpty; // 0x328
	TArray<UMirRichTextBlock*> m_arrSkillEffectDescList; // 0x330
	TArray<UMM_ClassPhase_SkillSlot*> m_arrSkillSlot; // 0x340
};

struct UMM_PopupPackageList {
	UMirScrollBox* m_ScrollBox_PackageList; // 0x2f0
	UMM_Common_Btn_Symbol* m_CommonBtn_Close; // 0x2f8
	UMirTextBlock* m_MirTextBlock_Title; // 0x300
	UMirTextBlock* m_MirTextBlock_Desc; // 0x308
};

struct UBTDecorator_Blackboard {
	int32_t IntValue; // 0x90
	float FloatValue; // 0x94
	FString StringValue; // 0x98
	FString CachedDescription; // 0xa8
	char OperationType; // 0xb8
	EBTBlackboardRestart NotifyObserver; // 0xb9
};

struct ADetourCrowdAIController {
	char bStopAILogicOnUnposses : 1; // 0x2c8
	char bLOSflag : 1; // 0x2c8
	char bSkipExtraLOSChecks : 1; // 0x2c8
	char bAllowStrafe : 1; // 0x2c8
	char bWantsPlayerState : 1; // 0x2c8
	char bSetControlRotationFromPawnOrientation : 1; // 0x2c8
	UPathFollowingComponent* PathFollowingComponent; // 0x2d0
	UBrainComponent* BrainComponent; // 0x2d8
	UAIPerceptionComponent* PerceptionComponent; // 0x2e0
	UPawnActionsComponent* ActionsComp; // 0x2e8
	UBlackboardComponent* Blackboard; // 0x2f0
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x2f8
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x300
	FScriptMulticastDelegate ReceiveMoveCompleted; // 0x308
};

struct AGridPathAIController {
	char bStopAILogicOnUnposses : 1; // 0x2c8
	char bLOSflag : 1; // 0x2c8
	char bSkipExtraLOSChecks : 1; // 0x2c8
	char bAllowStrafe : 1; // 0x2c8
	char bWantsPlayerState : 1; // 0x2c8
	char bSetControlRotationFromPawnOrientation : 1; // 0x2c8
	UPathFollowingComponent* PathFollowingComponent; // 0x2d0
	UBrainComponent* BrainComponent; // 0x2d8
	UAIPerceptionComponent* PerceptionComponent; // 0x2e0
	UPawnActionsComponent* ActionsComp; // 0x2e8
	UBlackboardComponent* Blackboard; // 0x2f0
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x2f8
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x300
	FScriptMulticastDelegate ReceiveMoveCompleted; // 0x308
};

struct UPawnAction_Wait {
	float TimeToWait; // 0x98
};

struct UMM_GuildOption {
	UMM_CommonVerticalTabSet* vertical_set; // 0x2f0
	UMirCanvasPanel* cp_option; // 0x2f8
	UMirCanvasPanel* cp_invited; // 0x300
	UMirCanvasPanel* cp_history; // 0x308
	UMirTextBlock* txt_guild_name; // 0x310
	UMirTextBlock* txt_guild_leader; // 0x318
	UMirTextBlock* txt_members; // 0x320
	UMirButton* btn_mark_change; // 0x328
	UMirButton* btn_name_change; // 0x330
	UMirCheckBox* checkbox_join; // 0x338
	UMirCheckBox* checkbox_alliance; // 0x340
	UMM_Common_Btn_Symbol* btn_keypad; // 0x348
	UMirTextBlock* txt_power_point; // 0x350
	UMM_GameOption_Switch* gow_invite; // 0x358
	UMM_GameOption_Switch* gow_alliance; // 0x360
	UMM_GameOption_Switch* gow_war; // 0x368
	UMM_Common_ToggleBtn* ctb_war; // 0x370
	UMM_Common_ToggleBtn* ctb_infamy; // 0x378
	UMM_Common_ToggleBtn* ctb_cooperation; // 0x380
	UMM_Common_ToggleBtn* ctb_free; // 0x388
	UMM_Common_ToggleBtn* ctb_permission; // 0x390
	UMM_Common_Btn* btn_destroy; // 0x398
	UMM_Common_Btn* btn_leave; // 0x3a0
	UMM_Common_Btn* btn_group_rebuilding; // 0x3a8
	UMM_Common_Btn* btn_option_change; // 0x3b0
	UMirScrollBox* sb_join_request; // 0x3b8
	UMirScrollBox* sb_guild_history; // 0x3c0
	UMM_Common_Btn* btn_invite_edit; // 0x3c8
	UMirTextBlock* txt_count; // 0x3d0
	UMirImage* Img_Symbol; // 0x3d8
	UMirImage* img_frame; // 0x3e0
	UMM_Common_Board_Notice* bn_empty; // 0x3e8
	UMM_Common_Btn_Symbol* btn_symbol_history_prev; // 0x3f0
	UMM_Common_Btn_Symbol* btn_symbol_history_next; // 0x3f8
	UMirTextBlock* txt_history_curr_page; // 0x400
	UMirTextBlock* txt_history_group; // 0x408
	UMirCheckBox* cb_history_group; // 0x410
	UMirCanvasPanel* cp_history_group; // 0x418
	UMirButton* btn_history_all; // 0x420
	UMirButton* btn_history_guild; // 0x428
	UMirButton* btn_history_diplomacy; // 0x430
	UMirButton* btn_history_war; // 0x438
	UMirImage* img_history_all; // 0x440
	UMirImage* img_history_guild; // 0x448
	UMirImage* img_history_diplomacy; // 0x450
	UMirImage* img_history_war; // 0x458
	UMM_Common_Board_Notice* bn_empty_history; // 0x460
};

struct UMM_PopUp_Status_Info {
	UMM_Status_Info* Stat_Title; // 0x2e0
	TArray<UMM_Status_Info*> Stat_Info; // 0x2e8
	UMirTextBlock* Txt_StatName; // 0x2f8
	UVerticalBox* VBox; // 0x300
	UCanvasPanel* CanvasPanel; // 0x308
	UMirButton* m_Btn_BGMain; // 0x310
	UMirImage* Img_Line1; // 0x318
	UMirImage* Img_Line2; // 0x320
	int32_t m_SlotCount; // 0x328
	int32_t STR_MSGID_TOTAL; // 0x32c
	FVector2D vSizePadding; // 0x330
};

struct UMM_ServerRelocation_ServerList {
	UMirCanvasPanel* m_Canvas_Current; // 0x2e0
	UMirTextBlock* m_Txt_ServerName; // 0x2e8
	UMirRichTextBlock* m_Txt_ServerNotice; // 0x2f0
	UMirTextBlock* m_Txt_ServerCharacterCount; // 0x2f8
	UMirButton* m_Btn_Select; // 0x300
};

struct UFirebaseGoogleCredential {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct UWidget_Master_C {
	UPanelWidget* m_Can_Default; // 0x308
	UPanelWidget* m_Can_Effect; // 0x310
};

struct UPaperGroupedSpriteComponent {
	TArray<UMaterialInterface*> InstanceMaterials; // 0x440
	TArray<FSpriteInstanceData> PerInstanceSpriteData; // 0x450
};

struct UInterpCurveEdSetup {
	TArray<FCurveEdTab> Tabs; // 0x28
	int32_t ActiveTab; // 0x38
};

struct ALODActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x218
	TMap<UMaterialInterface*, UInstancedStaticMeshComponent*> ImpostersStaticMeshComponents; // 0x220
	UHLODProxy* Proxy; // 0x270
	FName Key; // 0x278
	float LODDrawDistance; // 0x280
	int32_t LODLevel; // 0x284
	TArray<AActor*> SubActors; // 0x288
	char CachedNumHLODLevels; // 0x298
};

struct UMM_Guild_BlackIron_Inventory {
	UMM_GuildInventoryGoods* m_pStorageTotalValue; // 0x2f0
	UMM_Guild_BlackIron_Title* m_pInComeTitle; // 0x2f8
	UMM_Guild_BlackIron_Slot* m_pInComeRemainTime; // 0x300
	UMM_Guild_BlackIron_Slot* m_pInComeExpect; // 0x308
	UMM_Guild_BlackIron_Title* m_pSellTitle; // 0x310
	UMM_Guild_BlackIron_Slot* m_pSellRemainTime; // 0x318
	UMM_Guild_BlackIron_Slot* m_pSellProfit; // 0x320
	UMM_Guild_BlackIron_Slot* m_pSellRemainValue; // 0x328
	UMirTextBlock* m_pTextOpen; // 0x330
	UMM_Guild_BlackIron_Title* m_pGiveTitle; // 0x338
	UMM_Guild_BlackIron_Slot* m_pGiveValue; // 0x340
	UMirScrollBox* m_pScrollLog; // 0x348
	UMM_Common_Board_Notice* m_pBoardNotice; // 0x350
	UMM_Common_Btn_Symbol* m_pBtnSymbolHistoryPrev; // 0x358
	UMM_Common_Btn_Symbol* m_pBtnSymbolHistoryNext; // 0x360
	UMirTextBlock* m_pTxtHistoryCurrPage; // 0x368
	UMM_Common_Btn* m_pBtnSendGuild; // 0x370
	UMM_Common_Btn* m_pBtnSendOtherGuild; // 0x378
	UMM_Common_Btn* m_pBtnIron; // 0x380
	UMM_Common_Btn* m_pBtnSendOtherUser; // 0x388
	UMirImage* m_pImgBlackIronIndicator; // 0x390
	UMM_Common_Btn_Inven* m_pBtnInput; // 0x398
	UMM_Common_Btn_Inven* m_pBtnOutPut; // 0x3a0
};

struct UMM_Customizing_ListItem {
	UMirImage* m_pAssetImage; // 0x2e0
	UMirTextBlock* m_pNameText; // 0x2e8
	UMirImage* m_pSelectImage; // 0x2f0
	UMirButton* m_pSelectButton; // 0x2f8
	int32_t m_EmptyIconID; // 0x310
	float m_EmptyIconOpacity; // 0x314
	int32_t m_EmptyMessageID; // 0x318
};

struct ALevelSequenceActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x228
	ULevelSequencePlayer* SequencePlayer; // 0x240
	FSoftObjectPath LevelSequence; // 0x248
	TArray<AActor*> AdditionalEventReceivers; // 0x260
	FLevelSequenceCameraSettings CameraSettings; // 0x270
	ULevelSequenceBurnInOptions* BurnInOptions; // 0x278
	UMovieSceneBindingOverrides* BindingOverrides; // 0x280
	char bAutoPlay : 1; // 0x288
	char bOverrideInstanceData : 1; // 0x288
	char bReplicatePlayback : 1; // 0x288
	UObject* DefaultInstanceData; // 0x290
	ULevelSequenceBurnIn* BurnInInstance; // 0x298
	bool bShowBurnin; // 0x2a0
};

struct ASceneCapture2D {
	USceneCaptureComponent2D* CaptureComponent2D; // 0x228
};

struct UMM_Skill_DeckSetting {
	UMM_Skill_DeckBtnTab* m_arDeckBtn[0x2]; // 0x2f0
	TMap<int32_t, UMM_Skill_DeckSlot*> m_MapSkillSlot; // 0x300
};

struct UAutoCameraData {
	EAutoCameraType Force_AutoType; // 0x30
	float Common_InterpSpeedReachTime; // 0x34
	float Common_InterpRotationSpeed; // 0x38
	float CollisionPullSpeed; // 0x3c
	float CollisionReturnSpeed; // 0x40
	float AutoCamera_InterpSpeed; // 0x44
	float AutoCamera_DefaultHeight; // 0x48
	float AutoCamera_DefaultDistance; // 0x4c
	float AutoCamera_MinDistance; // 0x50
	float AutoCamera_MaxDistance; // 0x54
	float AutoCamera_DefaultPitch; // 0x58
	float AutoCamera_MinPitchAngle; // 0x5c
	float AutoCamera_MaxPitchAngle; // 0x60
	float AutoCamera_CameraFOV; // 0x64
	float AutoCamera_RotationSensitivity; // 0x68
	float AutoCamera_ZoomSensitivity; // 0x6c
	float NonBattleKeyInput_Delay; // 0x70
	float NonBattleKeyInput_InterpSpeed; // 0x74
	float NonBattleKeyInput_Pitch; // 0x78
	float NonBattleKeyInput_Height; // 0x7c
	float NonBattleKeyInput_Distance; // 0x80
	float AutoMoving_Delay; // 0x84
	float AutoMoving_InterpSpeed; // 0x88
	float AutoMoving_Pitch; // 0x8c
	float AutoMoving_Distance; // 0x90
	float AutoMoving_Height; // 0x94
	float RideAutoMovingFirst_Delay; // 0x98
	float RideAutoMovingSecond_Delay; // 0x9c
	float RideAutoMovingFirst_Distance; // 0xa0
	float RideAutoMovingSecond_Distance; // 0xa4
	float RideAutoMoving_InterpSpeed; // 0xa8
	float RideAutoMoving_Pitch; // 0xac
	float RideAutoMoving_SideAngle; // 0xb0
	float RideAutoMoving_SideDistance; // 0xb4
	float RideAutoMoving_Height; // 0xb8
	float ManualBattle_Delay; // 0xbc
	float ManualBattle_InterpSpeed; // 0xc0
	float ManualBattle_Pitch; // 0xc4
	float ManualBattle_Height; // 0xc8
	float AutoBattle_Delay; // 0xcc
	float AutoBattle_InterpSpeed; // 0xd0
	float AutoBattle_Pitch; // 0xd4
	float AutoBattle_Distance; // 0xd8
	float AutoBattle_SideAngle; // 0xdc
	float AutoBattle_SlowSpeedDegree; // 0xe0
	float AutoBattle_Height; // 0xe4
	float AutoBattle_HitDistance; // 0xe8
	float QuarterView_ResetTime; // 0xec
	float QuarterView_InterpSpeed; // 0xf0
	float QuarterView_PitchInterpSpeed; // 0xf4
	float QuarterView_DefaultDistance; // 0xf8
	float QuarterView_MinDistance; // 0xfc
	float QuarterView_MaxDistance; // 0x100
	float QuarterView_DefaultHeight; // 0x104
	float QuarterView_MinPitch; // 0x108
	float QuarterView_MaxPitch; // 0x10c
	float QuarterView_DefaultPitch; // 0x110
	float QuarterView_RotationSensitivity; // 0x114
	float QuarterView_ZoomSensitivity; // 0x118
	float QuarterView_CameraFOV; // 0x11c
	float ManualMode_InterpSpeed; // 0x120
	float ManualMode_DefaultDistance; // 0x124
	float ManualMode_MinDistance; // 0x128
	float ManualMode_MaxDistance; // 0x12c
	float ManualMode_DefaultHeight; // 0x130
	float ManualMode_DefaultPitch; // 0x134
	float ManualMode_MinPitchAngle; // 0x138
	float ManualMode_MaxPitchAngle; // 0x13c
	float ManualMode_RotationSensitivity; // 0x140
	float ManualMode_ZoomSensitivity; // 0x144
	float ManualMode_CameraFOV; // 0x148
};

struct ANavMeshBoundsVolume {
	FNavAgentSelector SupportedAgents; // 0x250
};

struct ULandscapeComponent {
	int32_t SectionBaseX; // 0x418
	int32_t SectionBaseY; // 0x41c
	int32_t ComponentSizeQuads; // 0x420
	int32_t SubsectionSizeQuads; // 0x424
	int32_t NumSubsections; // 0x428
	UMaterialInterface* OverrideMaterial; // 0x430
	UMaterialInterface* OverrideHoleMaterial; // 0x438
	TArray<FLandscapeComponentMaterialOverride> OverrideMaterials; // 0x440
	TArray<UMaterialInstanceConstant*> MaterialInstances; // 0x450
	TArray<UMaterialInstanceDynamic*> MaterialInstancesDynamic; // 0x460
	TArray<uint8_t> LODIndexToMaterialIndex; // 0x470
	TArray<uint8_t> MaterialIndexToDisabledTessellationMaterial; // 0x480
	UTexture2D* XYOffsetmapTexture; // 0x490
	FVector4 WeightmapScaleBias; // 0x4a0
	float WeightmapSubsectionOffset; // 0x4b0
	FVector4 HeightmapScaleBias; // 0x4c0
	FBox CachedLocalBox; // 0x4d0
	ULandscapeHeightfieldCollisionComponent* CollisionComponent; // 0x4ec
	UTexture2D* HeightmapTexture; // 0x508
	TArray<FWeightmapLayerAllocationInfo> WeightmapLayerAllocations; // 0x510
	TArray<UTexture2D*> WeightmapTextures; // 0x520
	FGuid MapBuildDataId; // 0x530
	TArray<FGuid> IrrelevantLights; // 0x540
	int32_t CollisionMipLevel; // 0x550
	int32_t SimpleCollisionMipLevel; // 0x554
	float NegativeZBoundsExtension; // 0x558
	float PositiveZBoundsExtension; // 0x55c
	float StaticLightingResolution; // 0x560
	int32_t ForcedLOD; // 0x564
	int32_t LODBias; // 0x568
	FGuid StateID; // 0x56c
	FGuid BakedTextureMaterialGuid; // 0x57c
	UTexture2D* GIBakedBaseColorTexture; // 0x590
	char MobileBlendableLayerMask; // 0x598
	UMaterialInterface* MobileMaterialInterface; // 0x5a0
	TArray<UMaterialInterface*> MobileMaterialInterfaces; // 0x5a8
	TArray<UTexture2D*> MobileWeightmapTextures; // 0x5b8
};

struct UMM_UIAction_QuestAccept {
	int32_t m_DoNotAcceptableRequestToStr; // 0x68
};

struct UInterpTrackInstSound {
	float LastUpdatePosition; // 0x28
	UAudioComponent* PlayAudioComp; // 0x30
};

struct UMM_BossContribution {
	UMM_Common_Btn_Symbol* btnClose; // 0x2f0
	UWidgetAnimation* m_StartAni; // 0x2f8
	UWidgetAnimation* m_EndAni; // 0x300
	UMirTextBlock* txtTitle; // 0x308
};

struct UMM_PopupGuildGiveAllianceSlot {
	UMirImage* img_rank; // 0x2e0
	UMirCanvasPanel* cp_rank; // 0x2e8
	UMirTextBlock* txt_rank; // 0x2f0
	UMirImage* img_guild_frame; // 0x2f8
	UMirImage* img_guild_mark; // 0x300
	UMirTextBlock* txt_guild_name; // 0x308
	UMirTextBlock* txt_combat_power; // 0x310
	UMirTextBlock* txt_level; // 0x318
	UMirTextBlock* txt_member_count; // 0x320
	UMirCheckBox* cb_select; // 0x328
};

struct UPawnAction_Move {
	AActor* GoalActor; // 0x98
	FVector GoalLocation; // 0xa0
	float AcceptableRadius; // 0xac
	UNavigationQueryFilter* FilterClass; // 0xb0
	char bAllowStrafe : 1; // 0xb8
	char bFinishOnOverlap : 1; // 0xb8
	char bUsePathfinding : 1; // 0xb8
	char bAllowPartialPath : 1; // 0xb8
	char bProjectGoalToNavigation : 1; // 0xb8
	char bUpdatePathToGoal : 1; // 0xb8
	char bAbortChildActionOnPathChange : 1; // 0xb8
};

struct UVerticalBox {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UMM_ItemCollectProgressSlot {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UImage* m_Img_Ongoing; // 0x2e8
	UImage* m_Img_End; // 0x2f0
	UMirRichTextBlock* m_Txt_Count; // 0x2f8
	UTextBlock* m_Txt_Percent; // 0x300
	UTextBlock* m_Txt_Ongoing; // 0x308
	UTextBlock* m_Txt_OngoingNum; // 0x310
	UTextBlock* m_Txt_Complete; // 0x318
	UTextBlock* m_Txt_CompleteNum; // 0x320
	int32_t m_ObtainStrID; // 0x328
	int32_t m_AllObtainInfoStrID; // 0x32c
	int32_t m_OngoingStrID; // 0x330
	int32_t m_ObtainValueStrID; // 0x334
	int32_t m_CountStrID; // 0x338
	int32_t m_CountPerAllStrID; // 0x33c
	int32_t m_PercentStrID; // 0x340
	int32_t m_GroupInfoStrID; // 0x344
};

struct UMovieScene2DTransformSection {
	FMovieScene2DTransformMask TransformMask; // 0xe0
	FMovieSceneFloatChannel Translation[0x2]; // 0xe8
	FMovieSceneFloatChannel Rotation; // 0x228
	FMovieSceneFloatChannel Scale[0x2]; // 0x2c8
	FMovieSceneFloatChannel Shear[0x2]; // 0x408
};

struct UMM_Common_ComboList {
	int32_t SlotFontSize; // 0x2e0
	UMirImage* m_Img_Arrow; // 0x2e8
	UMirTextBlock* m_Txt_Info; // 0x2f0
	UMirButton* m_Btn_Combo; // 0x2f8
	UMirScrollBox* m_ScrollList; // 0x300
	UPanelWidget* m_PanelList; // 0x308
};

struct AInteractiveFoliageActor {
	UCapsuleComponent* CapsuleComponent; // 0x228
	FVector TouchingActorEntryPosition; // 0x230
	FVector FoliageVelocity; // 0x23c
	FVector FoliageForce; // 0x248
	FVector FoliagePosition; // 0x254
	float FoliageDamageImpulseScale; // 0x260
	float FoliageTouchImpulseScale; // 0x264
	float FoliageStiffness; // 0x268
	float FoliageStiffnessQuadratic; // 0x26c
	float FoliageDamping; // 0x270
	float MaxDamageImpulse; // 0x274
	float MaxTouchImpulse; // 0x278
	float MaxForce; // 0x27c
	float Mass; // 0x280
};

struct UAudioSettings {
	FSoftObjectPath DefaultSoundClassName; // 0x38
	FSoftObjectPath DefaultMediaSoundClassName; // 0x50
	FSoftObjectPath DefaultSoundConcurrencyName; // 0x68
	FSoftObjectPath DefaultBaseSoundMix; // 0x80
	FSoftObjectPath VoiPSoundClass; // 0x98
	EVoiceSampleRate VoiPSampleRate; // 0xb0
	float VoipBufferingDelay; // 0xb4
	float DefaultReverbSendLevel; // 0xb8
	char bEnableLegacyReverb : 1; // 0xbc
	int32_t MaximumConcurrentStreams; // 0xc0
	float GlobalMinPitchScale; // 0xc4
	float GlobalMaxPitchScale; // 0xc8
	TArray<FAudioQualitySettings> QualityLevels; // 0xd0
	char bAllowPlayWhenSilent : 1; // 0xe0
	char bDisableMasterEQ : 1; // 0xe0
	char bAllowCenterChannel3DPanning : 1; // 0xe0
	uint32_t NumStoppingSources; // 0xe4
	EPanningMethod PanningMethod; // 0xe8
	EMonoChannelUpmixMethod MonoChannelUpmixMethod; // 0xe9
	FString DialogueFilenameFormat; // 0xf0
};

struct UUMGSequencePlayer {
	UWidgetAnimation* Animation; // 0x408
};

struct UCommandlet {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UClothLODDataNv {
	UClothPhysicalMeshDataBase* PhysicalMeshData; // 0x28
	FClothCollisionData CollisionData; // 0x30
};

struct USoundNodeConcatenator {
	TArray<float> InputVolume; // 0x40
};

struct UMM_CommonHorizontalTabBtn {
	UMirTextBlock* m_Txt_TabName; // 0x300
	UMirImage* m_Img_Locked; // 0x308
	UMirImage* m_Img_Indicator; // 0x310
	UMirImage* m_Img_Selected; // 0x318
	UMirButton* m_Btn_Main; // 0x320
	USpacer* m_Spc_Main; // 0x328
	UMirCanvasPanel* m_Canvas_Effect; // 0x330
	UWidgetAnimation* m_AniMyMap; // 0x338
};

struct AMM_InGameState {
	AGameModeBase* GameModeClass; // 0x218
	AGameModeBase* AuthorityGameMode; // 0x220
	ASpectatorPawn* SpectatorClass; // 0x228
	TArray<APlayerState*> PlayerArray; // 0x230
	bool bReplicatedHasBegunPlay; // 0x240
	float ReplicatedWorldTimeSeconds; // 0x244
	float ServerWorldTimeSecondsDelta; // 0x248
	float ServerWorldTimeSecondsUpdateFrequency; // 0x24c
};

struct UMM_GuildListSlot {
	UMirImage* img_rank; // 0x2e0
	UMirTextBlock* txt_rank; // 0x2e8
	UMM_GuildIcon* guild_icon; // 0x2f0
	UMirTextBlock* Txt_Name; // 0x2f8
	UMirTextBlock* txt_level; // 0x300
	UMirTextBlock* txt_member; // 0x308
	UMirTextBlock* txt_join_type; // 0x310
	UMirImage* img_join_combatpower; // 0x318
	UMirTextBlock* txt_join_combatpower; // 0x320
	UMirButton* Btn_Main; // 0x328
	UMM_Common_CombatPoint* CombatPoint; // 0x330
};

struct UCameraAnimInst {
	UCameraAnim* CamAnim; // 0x28
	UInterpGroupInst* InterpGroupInst; // 0x30
	float PlayRate; // 0x50
	UInterpTrackMove* MoveTrack; // 0x68
	UInterpTrackInstMove* MoveInst; // 0x70
	ECameraAnimPlaySpace PlaySpace; // 0x78
};

struct UMM_Slot_StatusContents {
	UMirTextBlock* Txt_Left; // 0x2f0
	UMirTextBlock* Txt_Right0; // 0x2f8
	UMirTextBlock* Txt_Right1; // 0x300
	UMirTextBlock* Txt_Right2; // 0x308
	UMirTextBlock* m_Txt1; // 0x310
	UMirTextBlock* m_Txt2; // 0x318
	UMirButton* Btn_Main; // 0x320
	int32_t m_LinkContentsID; // 0x328
};

struct UMM_PopUp_SaleItem {
	UMM_Slot_Material* m_SlotMat; // 0x2e0
	UTextBlock* m_ItemName; // 0x2e8
	UMM_Item_Make_Slider* m_NumInput; // 0x2f0
	UMM_Common_Btn* m_CancleBtn; // 0x2f8
	UMM_Common_Btn_Cost* m_SaleBtn; // 0x300
	UTextBlock* m_Text_Title; // 0x308
	UMM_Common_Btn_Symbol* btn_close; // 0x330
	int32_t STR_MSG_ITEMEXTEND_TITLE; // 0x338
	int32_t STR_MSG_ITEMEXTEND_NORMAL; // 0x33c
	int32_t STR_MSG_ITEMEXTEND_MAX; // 0x340
	int32_t STR_MSG_ITEMEXTEND_COUNT; // 0x344
};

struct UMovieSceneStringSection {
	FMovieSceneStringChannel StringCurve; // 0xe0
};

struct UDefaultLevelSequenceInstanceData {
	AActor* TransformOriginActor; // 0x30
	FTransform TransformOrigin; // 0x40
};

struct UMM_Map_AreaBtn {
	FVector2D m_vWidgetSIze; // 0x2e0
	bool m_bDrawMapTouchZone; // 0x2e8
	UMirImage* m_ImgAreaIcon; // 0x2f8
	UTextBlock* m_TxtAreaName; // 0x300
	UButton* m_BtnMain; // 0x308
	UMirRichTextBlock* m_Txt_FieldName_Level; // 0x310
	UMirButton* m_Btn_OccupationInfo; // 0x318
	UMirCanvasPanel* m_Can_Icon; // 0x320
	UMirCanvasPanel* m_Can_Guild; // 0x328
	UImage* m_Img_GuildFrame; // 0x330
	UImage* m_Img_GuildSymbol; // 0x338
	UImage* m_Img_IcnDominion; // 0x340
	UMirCanvasPanel* m_Canvas_Effect; // 0x348
	UMirImage* m_Img_Effect; // 0x350
	UWidgetAnimation* m_AniMyMap; // 0x358
};

struct UMM_Panel_Common_Loading {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UBreakpoint {
	char bEnabled : 1; // 0x28
	UEdGraphNode* Node; // 0x30
	char bStepOnce : 1; // 0x38
	char bStepOnce_WasPreviouslyDisabled : 1; // 0x38
	char bStepOnce_RemoveAfterHit : 1; // 0x38
};

struct UFindTurnBasedMatchCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UInterpTrackInstDirector {
	AActor* OldViewTarget; // 0x28
};

struct UMM_GameInstance {
	AMM_PlayerController* m_pPlayerController; // 0x198
	FString m_strServerInfoJson; // 0x1a0
	bool m_bUseWemadeServiceLogin; // 0x1b0
	bool m_bPatched; // 0x1b1
	bool m_bLoadedShaderLibraryAndPSO; // 0x1b2
	UMM_CustomizingManager* m_pCustomizingManager; // 0x1b8
	UMM_PoolManager* m_pPoolManager; // 0x1c0
	UMM_WidgetManager* m_pWidgetManager; // 0x1c8
	UMM_TemplateManager* m_pTemplateManager; // 0x1d0
	UMM_CinematicManager* m_pCinematicManager; // 0x1d8
	UMM_WarpMoveManager* WarpMoveManager; // 0x1e0
	UMM_LoginManager* m_pLoginManager; // 0x1e8
	UMM_IAPManager* m_pIAPManager; // 0x1f0
	UMM_AdManager* m_pAdManager; // 0x1f8
	AMM_SoundManagerActor* m_pSoundManager; // 0x200
	UMM_EffectManager* EffectManager; // 0x208
	UMM_UIActionManager* m_pUIActionManager; // 0x210
	UHttpImageManager* m_pHttpImageManager; // 0x218
	UMM_ScheduleManager* m_pScheduleManager; // 0x220
	FCharStatistics m_MainPCData; // 0x420
	UGameDefineDataAsset* m_pGameDefineData; // 0x4b8
	UMirColorData* m_pMirColorData; // 0x4c0
	UFootStepSurfaceData* m_pFootStepSurfaceData; // 0x4c8
	UObject* m_pDefaultNavigationFilterClass; // 0x4d0
	UObject* m_pIgnoreCostNavigationFilterClass; // 0x4d8
	UObject* m_pLinkProxyNavigationFilterClass; // 0x4e0
	TMap<EPrerequisiteLoadState, bool> m_mapPrerequisiteLoadState; // 0x4e8
	UDataTable* m_RichTextStyleTable; // 0x538
	UAccountLocalSave* m_pAccountLocalSave; // 0x540
	UCharLocalSave* m_pCharLocalSave; // 0x548
	UInAppPurchaseData* m_pInAppPurchaseLocalSave; // 0x550
	TWeakObjectPtr<AMM_HUDBase> m_pMirHudBase; // 0x558
	bool m_bRideState; // 0x560
	bool m_bAvailableRide; // 0x561
	bool m_bNeedCheckAndroidPermission; // 0x562
	AMM_GameModeBase* m_pMMGameModeBase; // 0x568
	int32_t m_iStageID; // 0x578
	int32_t m_iPreStageID; // 0x57c
	bool m_bPvPEnable; // 0x590
	bool m_bLevelStreaming; // 0x591
	bool m_bMapLoading; // 0x592
	bool m_bException_LogoToCharSelect; // 0x593
	TArray<UObject*> m_arLoadedLevel; // 0x598
	ULevelStreamingDynamic* m_pLevelStreamingKismet; // 0x5a8
	ULevelStreamingDynamic* m_pTriggerStreamingKismet; // 0x5b0
	ULevelStreamingDynamic* m_pLevelStreamingKismet_Logo; // 0x5b8
	AMM_MainPC* pMainPC; // 0x5f0
	TArray<ASkeletalMeshActor*> m_PSOCacheSkeletalMeshActors; // 0x650
	TArray<AStaticMeshActor*> m_PSOCacheStaticMeshActors; // 0x660
	TArray<UParticleSystemComponent*> m_PSOCacheParticleComponents; // 0x670
	UWNFreeStopHingeModule* FreeStopHingeModule; // 0x690
	UMM_UnCheater* m_UnCheater; // 0x698
	UMM_MultiClientSupporter* m_MultiClientSupporter; // 0x6a0
};

struct UMM_GrowthProgress {
	int32_t m_LinkContentsID; // 0x2f0
	UMM_Common_Btn_Symbol* m_LinkBtn; // 0x2f8
	FScriptMulticastDelegate OnClickLink; // 0x300
	UMirImage* Img_Progress[0x5]; // 0x310
	UMirImage* Img_ContentsIcon; // 0x338
	UMirTextBlock* Txt_ContentsName; // 0x340
	UMirTextBlock* Txt_ContentsLevel; // 0x348
	int32_t STR_RateValue; // 0x350
};

struct UMovieSceneGeometryCacheSection {
	FMovieSceneGeometryCacheParams Params; // 0xe0
};

struct UDemoPendingNetGame {
	UNetDriver* NetDriver; // 0x30
	UDemoNetDriver* DemoNetDriver; // 0x38
};

struct UEnvQueryTest_Dot {
	FEnvDirection LineA; // 0x1c0
	FEnvDirection LineB; // 0x1e0
	EEnvTestDot TestMode; // 0x200
	bool bAbsoluteValue; // 0x201
};

struct UGameEngine {
	float MaxDeltaTime; // 0xe28
	float ServerFlushLogInterval; // 0xe2c
	UGameInstance* GameInstance; // 0xe30
};

struct UBehaviorTreeComponent {
	TArray<UBTNode*> NodeInstances; // 0x130
};

struct UBasicOverlays {
	TArray<FOverlayItem> Overlays; // 0x28
};

struct UMM_DailyWork_List {
	TArray<UMM_DailyWork_List_Slot*> WorkList; // 0x2e0
	UMirScrollBox* ScrollBox; // 0x2f0
};

struct UBackgroundBlurSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UMM_CharInfo_GuildBtnList {
	UCanvasPanel* m_Can_AnimationBtn; // 0x2f0
	UMirButton* m_Btn_AniStart; // 0x2f8
	UWidgetAnimation* m_StartAniOneLine; // 0x300
	UWidgetAnimation* m_EndAniOneLine; // 0x308
	UWidgetAnimation* m_StartAniTwoLine; // 0x310
	UWidgetAnimation* m_EndAniTwoLine; // 0x318
	int32_t STR_MSG_SERVERVISIT; // 0x320
	int32_t STR_MSG_TARGET_SERVERVISIT; // 0x324
	int32_t STR_MSG_TARGET_SERVERVISIT2; // 0x328
};

struct UEditableGameplayTagQueryExpression_NoTagsMatch {
	FGameplayTagContainer Tags; // 0x28
};

struct APaperTileMapActor {
	UPaperTileMapComponent* RenderComponent; // 0x218
};

struct UMediaSoundComponent {
	EMediaSoundChannels Channels; // 0x650
	bool DynamicRateAdjustment; // 0x654
	float RateAdjustmentFactor; // 0x658
	FFloatRange RateAdjustmentRange; // 0x65c
	UMediaPlayer* MediaPlayer; // 0x670
};

struct UParticleModuleMeshRotationRate_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct UMM_ClassPhase_InfoSlot {
	UMirTextBlock* m_pTxtNotice; // 0x2e0
	UMirTextBlock* m_pTxtCount; // 0x2e8
	UMirTextBlock* m_pTxtPlace; // 0x2f0
	UMirTextBlock* m_pTxtParty; // 0x2f8
	UMirTextBlock* m_pTxtWaitPhaseEnd; // 0x300
	UHorizontalBox* m_pHorRemainTime; // 0x308
	UMirTextBlock* m_pTxtRemainTime; // 0x310
};

struct UFontFace {
	FString SourceFilename; // 0x30
	EFontHinting Hinting; // 0x40
	EFontLoadingPolicy LoadingPolicy; // 0x41
	EFontLayoutMethod LayoutMethod; // 0x42
};

struct UMM_Invite_Alarm_Slot {
	FString TXT_COLOR_PARTY_TYPE_6; // 0x2e0
	FString TXT_COLOR_PARTY_TYPE_16; // 0x2f0
	FString TXT_COLOR_PARTY_TYPE_DUNGEON; // 0x300
	FString TXT_COLOR_PARTY_TYPE_BOSS; // 0x310
	UMirImage* m_Img_Class; // 0x328
	UMirTextBlock* m_Txt_Level; // 0x330
	UMirTextBlock* m_Txt_Nickname; // 0x338
	UMirTextBlock* m_Txt_CombatPoint; // 0x340
	UMirImage* m_Img_Frame_Guild; // 0x348
	UMirImage* m_Img_Symbol_Guild; // 0x350
	UMirTextBlock* m_Txt_GuildName; // 0x358
	UMirTextBlock* m_Txt_Time; // 0x360
	UMirTextBlock* m_Txt_Alarm; // 0x368
	UMirImage* m_Img_Timer; // 0x370
	UMirTextBlock* m_Txt_PartyType; // 0x378
	UMirTextBlock* m_Txt_StageName; // 0x380
	UMM_Common_Btn* m_CB_Accept; // 0x388
	UMM_Common_Btn* m_CB_Refuse; // 0x390
};

struct UChattingLocalData {
	TMap<int32_t, FString> MacroMessageMap; // 0x28
	TMap<int32_t, bool> InitMacroMessageMap; // 0x78
	TMap<uint64_t, int64_t> RecentlyReadTimeMap; // 0xc8
	uint64_t RecentlyChannelId; // 0x118
	bool GuildSystemMessage; // 0x120
	FString SaveSlotName; // 0x128
};

struct USourceEffectFoldbackDistortionPreset {
	FSourceEffectFoldbackDistortionSettings Settings; // 0x74
};

struct UFont {
	EFontCacheType FontCacheType; // 0x30
	TArray<FFontCharacter> Characters; // 0x38
	TArray<UTexture2D*> Textures; // 0x48
	int32_t IsRemapped; // 0x58
	float EmScale; // 0x5c
	float Ascent; // 0x60
	float Descent; // 0x64
	float Leading; // 0x68
	int32_t Kerning; // 0x6c
	FFontImportOptionsData ImportOptions; // 0x70
	int32_t NumCharacters; // 0x120
	TArray<int32_t> MaxCharHeight; // 0x128
	float ScalingFactor; // 0x138
	int32_t LegacyFontSize; // 0x13c
	FName LegacyFontName; // 0x140
	FCompositeFont CompositeFont; // 0x148
};

struct UMM_Deul_Result {
	UWidgetAnimation* m_AniWin; // 0x2e0
	UWidgetAnimation* m_AniDefeat; // 0x2e8
	UPanelWidget* Panel_Win; // 0x2f0
	UPanelWidget* Panel_Lose; // 0x2f8
	UPanelWidget* Panel_Win_BG; // 0x300
	UPanelWidget* Panel_Lose_BG; // 0x308
	UMirButton* Btn_Close_BG; // 0x310
	UTextBlock* TextBlock_Win; // 0x318
	UTextBlock* TextBlock_Lose; // 0x320
};

struct UARSessionConfig {
	bool bGenerateMeshDataFromTrackedGeometry; // 0x30
	bool bGenerateCollisionForMeshData; // 0x31
	bool bGenerateNavMeshForMeshData; // 0x32
	bool bUseMeshDataForOcclusion; // 0x33
	bool bRenderMeshDataInWireframe; // 0x34
	bool bTrackSceneObjects; // 0x35
	bool bUsePersonSegmentationForOcclusion; // 0x36
	EARWorldAlignment WorldAlignment; // 0x37
	EARSessionType SessionType; // 0x38
	EARPlaneDetectionMode PlaneDetectionMode; // 0x39
	bool bHorizontalPlaneDetection; // 0x3a
	bool bVerticalPlaneDetection; // 0x3b
	bool bEnableAutoFocus; // 0x3c
	EARLightEstimationMode LightEstimationMode; // 0x3d
	EARFrameSyncMode FrameSyncMode; // 0x3e
	bool bEnableAutomaticCameraOverlay; // 0x3f
	bool bEnableAutomaticCameraTracking; // 0x40
	bool bResetCameraTracking; // 0x41
	bool bResetTrackedObjects; // 0x42
	TArray<UARCandidateImage*> CandidateImages; // 0x48
	int32_t MaxNumSimultaneousImagesTracked; // 0x58
	EAREnvironmentCaptureProbeType EnvironmentCaptureProbeType; // 0x5c
	TArray<char> WorldMapData; // 0x60
	TArray<UARCandidateObject*> CandidateObjects; // 0x70
	FARVideoFormat DesiredVideoFormat; // 0x80
	EARFaceTrackingDirection FaceTrackingDirection; // 0x8c
	EARFaceTrackingUpdate FaceTrackingUpdate; // 0x8d
	TArray<char> SerializedARCandidateImageDatabase; // 0x90
	EARSessionTrackingFeature EnabledSessionTrackingFeature; // 0xa0
};

struct UMaterialExpressionClamp {
	FExpressionInput Input; // 0x40
	FExpressionInput Min; // 0x54
	FExpressionInput Max; // 0x68
	EClampMode ClampMode; // 0x7c
	float MinDefault; // 0x80
	float MaxDefault; // 0x84
};

struct UBTService_DefaultFocus {
	char FocusPriority; // 0x98
};

struct UInterpTrackFloatMaterialParam {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct URequestNewPublishPermissions {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UBackgroundBlur {
	FMargin Padding; // 0x120
	EHorizontalAlignment HorizontalAlignment; // 0x130
	EVerticalAlignment VerticalAlignment; // 0x131
	bool bApplyAlphaToBlur; // 0x132
	float BlurStrength; // 0x134
	bool bOverrideAutoRadiusCalculation; // 0x138
	int32_t BlurRadius; // 0x13c
	FSlateBrush LowQualityFallbackBrush; // 0x140
};

struct UMM_TutorialPetGuideWidget {
	UCanvasPanel* m_pMainCanvas; // 0x2e0
	UWidget* m_pTargetWidget; // 0x2e8
	EPetGuidePosType m_PosType; // 0x2f0
	FVector2D m_MainCanvasSize; // 0x2f4
};

struct ULandscapeSplineSegment {
	FLandscapeSplineSegmentConnection Connections[0x2]; // 0x28
	FInterpCurveVector SplineInfo; // 0x58
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	TArray<USplineMeshComponent*> LocalMeshComponents; // 0xa0
};

struct UBodySetup {
	FKAggregateGeom AggGeom; // 0x28
	FName BoneName; // 0x80
	EPhysicsType PhysicsType; // 0x88
	char bAlwaysFullAnimWeight : 1; // 0x89
	char bConsiderForBounds : 1; // 0x89
	char bMeshCollideAll : 1; // 0x89
	char bDoubleSidedGeometry : 1; // 0x89
	char bGenerateNonMirroredCollision : 1; // 0x89
	char bSharedCookedData : 1; // 0x89
	char bGenerateMirroredCollision : 1; // 0x89
	EBodyCollisionResponse CollisionReponse; // 0x8b
	ECollisionTraceFlag CollisionTraceFlag; // 0x8c
	UPhysicalMaterial* PhysMaterial; // 0x90
	FWalkableSlopeOverride WalkableSlopeOverride; // 0x98
	FBodyInstance DefaultInstance; // 0x110
	FVector BuildScale3D; // 0x228
};

struct ALevelSequenceSubtitle {
	float m_FadeValue; // 0x218
	FString m_StringID; // 0x220
	USoundCue* m_pSoundCue; // 0x240
	FString m_WidgetName; // 0x250
};

struct UMM_B_Target {
	FLinearColor m_NormalColor; // 0x2e0
	FLinearColor m_LockOnColor; // 0x2f0
	UWidgetAnimation* m_AniLockOn; // 0x300
	UWidgetAnimation* m_AniLoop; // 0x308
};

struct UMM_CharInfo {
	UMirTextBlock* m_C_TxtLevel; // 0x300
	UMirTextBlock* m_C_TxtNickName; // 0x308
	UHorizontalBox* horizontal_box_levelup; // 0x310
	UMirTextBlock* mir_textblock_next_level; // 0x318
	UMM_CombatPoint* CombatPoint; // 0x320
	UMM_ProfileSlot* m_Profile; // 0x328
	UHorizontalBox* m_pPanelDominionTitle; // 0x330
	UMM_Common_Btn_Symbol* m_pBtnTitleInfo; // 0x338
	UMirTextBlock* m_pTxtTitleName; // 0x340
	UMM_Common_Btn* Btn_NickNameCopy; // 0x348
};

struct UMM_TutorialPage {
	UPageTutorialData* m_pPageTutorialData; // 0x2e0
	float m_FadeLerpTime; // 0x2f8
	UMirTextBlock* m_pTitleText; // 0x300
	UMirRichTextBlock* m_pDescriptionText01; // 0x308
	UMirRichTextBlock* m_pDescriptionText02; // 0x310
	UMirImage* m_pTutorialImage01; // 0x318
	UMirImage* m_pTutorialImage02; // 0x320
	UMirButton* m_pSkipButton; // 0x328
	UCanvasPanel* m_pSkipPanel; // 0x330
	UImage* img_prev; // 0x338
	UMirButton* m_pPrevButton; // 0x340
	UMirButton* m_pNextButton; // 0x348
	UMM_PageIndicator* m_pPageIndicator; // 0x350
	UMirRichTextBlock* m_pFadeInText; // 0x358
	UMirRichTextBlock* m_pFadeOutText; // 0x360
	UMirImage* m_pFadeInImage; // 0x368
	UMirImage* m_pFadeOutImage; // 0x370
	UMirCanvasPanel* cp_skip; // 0x378
	UMirButton* btn_skip; // 0x380
};

struct UMM_CharInfo_Slim {
	UMirTextBlock* m_C_TxtCombatPoint; // 0x300
	UMM_Common_Btn_Symbol* m_C_BtnDetail; // 0x308
};

struct UMaterialExpressionParticleRandom {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UFirebaseFutureString {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct ALandscapeBlueprintBrushBase {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UParticleModuleLocationWorldOffset_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct ABrushShape {
	EBrushType BrushType; // 0x218
	FColor BrushColor; // 0x21c
	int32_t PolyFlags; // 0x220
	char bColored : 1; // 0x224
	char bSolidWhenSelected : 1; // 0x224
	char bPlaceableFromClassBrowser : 1; // 0x224
	char bNotForClientOrServer : 1; // 0x224
	UModel* Brush; // 0x228
	UBrushComponent* BrushComponent; // 0x230
	char bInManipulation : 1; // 0x238
	TArray<FGeomSelection> SavedSelections; // 0x240
};

struct USkeletalMeshSocket {
	FName SocketName; // 0x28
	FName BoneName; // 0x30
	FVector RelativeLocation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale; // 0x50
	bool bForceAlwaysAnimated; // 0x5c
};

struct UMM_B_Costume {
	UMM_Costume_PartsViewer* CostumePartsViewerWidget; // 0x300
	UMM_Costume_Inventory* CostumeInventoryWidget; // 0x308
	UMM_PopUp_Costume_CollectionList* CollectionListWidget; // 0x310
	UMirImage* Img_RenderTarget; // 0x318
	UImage* m_TargetPos; // 0x320
	UMM_Common_Btn_Cost* Btn_MainCost; // 0x328
	UMM_Common_Btn_IconText* Btn_Restore; // 0x330
	UMM_Common_Btn_IconText* Btn_Palette; // 0x338
	UMM_Costume_CombatPoint* Costume_CombatPoint; // 0x340
	UMM_PopUp_Costume_Palette* PopUp_Palette; // 0x348
	UMM_Common_ToolTipBtn* BtnTooltip; // 0x350
	int32_t STR_PurchaseDesc; // 0x358
	int32_t STR_PurchaseAble; // 0x35c
};

struct UMM_Collection_Info {
	UMirTextBlock* Txt_Title; // 0x2f0
	UMirTextBlock* Txt_Desc; // 0x2f8
	UPanelWidget* Grid_Detail; // 0x300
	UMM_Common_Btn_Symbol* Btn_Detail; // 0x308
	TArray<UMM_Collection_Ability*> Arr_CollectionAbility; // 0x310
	int32_t STR_Title; // 0x320
	int32_t STR_Desc; // 0x324
};

struct USlider {
	float Value; // 0x108
	DelegateProperty ValueDelegate; // 0x10c
	float MinValue; // 0x11c
	float MaxValue; // 0x120
	FSliderStyle WidgetStyle; // 0x128
	EOrientation Orientation; // 0x468
	FLinearColor SliderBarColor; // 0x46c
	FLinearColor SliderHandleColor; // 0x47c
	bool IndentHandle; // 0x48c
	bool Locked; // 0x48d
	bool MouseUsesStep; // 0x48e
	bool RequiresControllerLock; // 0x48f
	float StepSize; // 0x490
	bool IsFocusable; // 0x494
	FScriptMulticastDelegate OnMouseCaptureBegin; // 0x498
	FScriptMulticastDelegate OnMouseCaptureEnd; // 0x4a8
	FScriptMulticastDelegate OnControllerCaptureBegin; // 0x4b8
	FScriptMulticastDelegate OnControllerCaptureEnd; // 0x4c8
	FScriptMulticastDelegate OnValueChanged; // 0x4d8
};

struct UMM_Guild_Slot_Btn {
	UMirImage* m_Img_Icon; // 0x2f0
	UMirTextBlock* m_Txt_Name; // 0x2f8
	UMirButton* m_Btn; // 0x300
	UMirImage* m_Img_Indicator; // 0x308
};

struct UMockDataMeshTrackerComponent {
	FScriptMulticastDelegate OnMeshTrackerUpdated; // 0x220
	bool ScanWorld; // 0x230
	bool RequestNormals; // 0x231
	bool RequestVertexConfidence; // 0x232
	EMeshTrackerVertexColorMode VertexColorMode; // 0x233
	TArray<FColor> BlockVertexColors; // 0x238
	FLinearColor VertexColorFromConfidenceZero; // 0x248
	FLinearColor VertexColorFromConfidenceOne; // 0x258
	float UpdateInterval; // 0x268
	UMRMeshComponent* MRMesh; // 0x270
};

struct ALevelSequencePlayerActor {
	EClassType m_RenderClassType; // 0x218
	USceneComponent* RootSceneComponent; // 0x220
	USkeletalMeshComponent* m_PCW; // 0x228
	USkeletalMeshComponent* m_PCM; // 0x230
	USkeletalMeshComponent* m_PCT; // 0x238
	USkeletalMeshComponent* m_PCA; // 0x240
	USkeletalMeshComponent* m_PCZ; // 0x248
	TArray<USkeletalMeshComponent*> m_MeshArray; // 0x250
	USkeletalMeshComponent* m_pSkeletalMesh; // 0x260
	USkeletalMeshComponent* m_pMesh; // 0x268
};

struct UMM_Popup_UIShopBuyGoods {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UMirTextBlock* m_Txt_GoodsName; // 0x2e8
	UMirTextBlock* m_Txt_Account; // 0x2f0
	UMirImage* m_Img_TagIcon; // 0x2f8
	UMirImage* m_Img_OnePlus; // 0x300
	UMirImage* m_Img_GoodsIcon; // 0x308
	UMirImage* m_Img_LabelIcon; // 0x310
	UMirImage* m_Img_MileageIcon; // 0x318
	UMirTextBlock* m_Txt_Mileage; // 0x320
	UMirTextBlock* m_Txt_Time; // 0x328
	UMirTextBlock* m_Txt_DescTitle; // 0x330
	UMirTextBlock* m_Txt_Desc; // 0x338
	UVerticalBox* m_Purchaselimit; // 0x340
	UMirTextBlock* m_Txt_PurchaselimitTitle; // 0x348
	UMirTextBlock* m_Txt_Purchaselimit; // 0x350
	UMirTextBlock* m_Txt_GoodsListTitle; // 0x358
	UMirTextBlock* m_Txt_GoodsList; // 0x360
	UMirRichTextBlock* m_RichText_CancelNotice; // 0x368
	UMirCanvasPanel* m_Panel_CancelNotice_3; // 0x370
	UMirTextBlock* m_Txt_CancelNotice_3; // 0x378
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x380
	UMM_Common_Btn* m_Btn_Cancel; // 0x388
	UMM_Common_Btn* m_Btn_Buy; // 0x390
	UMirTextBlock* m_Txt_AttentionTitle; // 0x398
	UMirButton* m_Btn_Attention; // 0x3a0
	UMirCanvasPanel* m_Panel_CancelPurchase; // 0x3a8
	UImage* m_Img_CancelPurchase; // 0x3b0
	UMirButton* m_Btn_CancelPurchase; // 0x3b8
	UAsyncTaskDownloadImage* m_DownloadImage; // 0x3c0
};

struct UMM_Btn_HudDirSkill {
	int32_t m_iEffectID_EndCooltime; // 0x344
	int32_t m_iEffectID_Use; // 0x348
	int32_t m_iEffectID_Smite; // 0x34c
	int32_t m_iEffectID_ContentsOpen; // 0x350
	TArray<FBrushObject> m_arrBrushCoolTimeFont; // 0x358
	FLinearColor m_CoolTimeFontColor; // 0x368
	FLinearColor m_CoolTimeFontOverColor; // 0x378
	float m_fRageGaugeInterpSpeed; // 0x388
	UButton* AreaButton; // 0x390
	UImage* LockIcon; // 0x398
	UMirImage* SilenceIcon; // 0x3a0
	UImage* SkillIcon; // 0x3a8
	UImage* CoolTimeGauge; // 0x3b0
	UImage* RageGauge; // 0x3b8
	UAlignedWrapBox* CoolTimeCountWarpBox; // 0x3c0
	UImage* CoolTimeCount_2; // 0x3c8
	UImage* CoolTimeCount_11; // 0x3d0
	UImage* CoolTimeCount_101; // 0x3d8
	UPanelWidget* EffectPanel; // 0x3e0
	UPanelWidget* SmiteEffectPanel; // 0x3e8
	UWidgetAnimation* SmiteAnimation; // 0x3f0
	UPanelWidget* ClickEffectPanel; // 0x3f8
	UWidgetAnimation* ClickAnimation; // 0x400
	UPanelWidget* CoolEndEffectPanel; // 0x408
	UWidgetAnimation* CoolEndAnimation; // 0x410
};

struct ANote {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMM_Common_Popup_Info {
	UTextBlock* m_Txt_Title; // 0x2e0
	UMirRichTextBlock* m_Txt_Message; // 0x2e8
};

struct UMM_PopUp_ItemInfo_Ability {
	UMirImage* m_AbilityIcon; // 0x2e0
	UTextBlock* m_AbilityName; // 0x2e8
	UMirTextBlock* m_AbilityValue; // 0x2f0
	UMirTextBlock* m_AbilityValueDefault; // 0x2f8
	UMirTextBlock* m_AbilityAddValue; // 0x300
	UTextBlock* m_Txt1; // 0x308
	UTextBlock* m_Txt2; // 0x310
	int32_t m_WidgetIndex; // 0x318
	UMirImage* Img_Arrow; // 0x320
	UMirTextBlock* Txt_Point; // 0x328
	UProgressBar* m_PolishProgressBar; // 0x330
	UTextBlock* m_PolishStatValue; // 0x338
	UMirImage* m_Img_Grade; // 0x340
	UTextBlock* m_Txt_OptionValue; // 0x348
	UTextBlock* m_Txt_OptionMin; // 0x350
	UTextBlock* m_Txt_OptionMax; // 0x358
	UTextBlock* m_Txt11; // 0x360
	UTextBlock* m_Txt12; // 0x368
	UTextBlock* m_Txt13; // 0x370
	UMirImage* m_Img_Ability; // 0x378
	UTextBlock* m_Txt_Title_SetItem; // 0x380
	UTextBlock* m_Txt_Desc_SetItem; // 0x388
	UTextBlock* m_Txt_Value_SetItem; // 0x390
	UMirTextBlock* Txt_Value_Durability; // 0x398
	UMirTextBlock* Txt_Value_Penalty; // 0x3a0
	UMirImage* Img_Arrow_Penalty; // 0x3a8
	UMirTextBlock* Txt_Point_Penalty; // 0x3b0
	UHorizontalBox* m_Panel_2; // 0x3b8
	UPanelWidget* m_Panel_3; // 0x3c0
	UPanelWidget* m_Panel_4; // 0x3c8
	UPanelWidget* m_Panel_5; // 0x3d0
	UPanelWidget* m_Panel_6; // 0x3d8
	int32_t RESOURCE_ICONID_LOCK; // 0x3e0
};

struct USynthComponentMonoWaveTable {
	FScriptMulticastDelegate OnTableAltered; // 0x650
	FScriptMulticastDelegate OnNumTablesChanged; // 0x660
	UMonoWaveTableSynthPreset* CurrentPreset; // 0x670
};

struct UMM_Dominion_Goods_Slot {
	ECostType m_eCostType; // 0x2f0
	ETimeTicketType m_eTimeTicketType; // 0x2f1
	bool m_bUse_SimpleDigit; // 0x2f2
	bool m_bUse_MaxValue; // 0x2f3
	bool m_bUse_GuildMaxValue; // 0x2f4
	bool m_bUse_CostName; // 0x2f5
	bool m_bUse_AddButton; // 0x2f6
	bool m_bLeftJustify_CostValue; // 0x2f7
	int32_t m_iTooltipID; // 0x2f8
	UMirImage* m_Img_CostIcon; // 0x320
	UMirTextBlock* m_Txt_CostName; // 0x328
	UMirTextBlock* m_Txt_CostValue; // 0x330
	UPanelWidget* m_Grid_AddIcon; // 0x338
};

struct UIAPAppStoreModule {
	FIAPUserRequestData m_UserRequestProductData; // 0x58
	FIAPProductData m_PurchaseProductData; // 0x98
	TArray<EIAPPurchaseState> m_PurchaseInProgress; // 0x138
	TArray<FString> ProcessedTransactionIDs; // 0x148
	TArray<FString> ProcessedTransactionReceipts; // 0x158
	FTimerHandle DelayHideBlockScreenTimeHandle; // 0x168
	TMap<FString, FIAPMarketProductData> m_MarketProductDataMap; // 0x170
};

struct UMM_Dungeon_ShopList {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UWrapBox* m_WrapBox; // 0x2e8
};

struct UAppInvite {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_HudOccupationMenu {
	UMM_Hud_OccupationBoard* m_pHudOccupationBoard; // 0x2f0
};

struct UPaperRuntimeSettings {
	bool bEnableSpriteAtlasGroups; // 0x28
	bool bEnableTerrainSplineEditing; // 0x29
	bool bResizeSpriteDataToMatchTextures; // 0x2a
};

struct UMM_Friend_List {
	UMirListView* m_ListView_FriendList; // 0x2f0
	TArray<UFriendSlotObj*> m_arFriendSlotObj; // 0x2f8
};

struct UMaterialExpressionGIReplace {
	FExpressionInput Default; // 0x40
	FExpressionInput StaticIndirect; // 0x54
	FExpressionInput DynamicIndirect; // 0x68
};

struct UTextBlock {
	FText Text; // 0x128
	DelegateProperty TextDelegate; // 0x140
	FSlateColor ColorAndOpacity; // 0x150
	DelegateProperty ColorAndOpacityDelegate; // 0x178
	FSlateFontInfo Font; // 0x188
	FSlateBrush StrikeBrush; // 0x1d8
	FVector2D ShadowOffset; // 0x260
	FLinearColor ShadowColorAndOpacity; // 0x268
	DelegateProperty ShadowColorAndOpacityDelegate; // 0x278
	float MinDesiredWidth; // 0x288
	bool bWrapWithInvalidationPanel; // 0x28c
	bool bAutoWrapText; // 0x28d
	bool bSimpleTextMode; // 0x28e
};

struct UInterpFilter_Classes {
	FString Caption; // 0x28
};

struct UMM_CharacterMovementComponent {
	float DeltaRotationScale; // 0x6d0
	char bAdaptiveRotationRateForNavigation : 1; // 0x6d4
	float RotationRateScaleForNavigation; // 0x6d8
	float RotationRateDecreaseCoffForNavigationError; // 0x6dc
	char bSkipTooSmallNavigationSegment : 1; // 0x6e0
	float AgentRadiusRatioForSmallNavigationSegmentCheck; // 0x6e4
	float AgentHalfHeightRatioForSmallNavigationSegmentCheck; // 0x6e8
};

struct UMM_Popup_GuildOtherMembersSlot {
	UMM_GuildMemberPortrait* Portrait; // 0x2e0
	UMirTextBlock* txt_grade; // 0x2e8
	UMirTextBlock* txt_nickname; // 0x2f0
	UMirTextBlock* txt_custom_title; // 0x2f8
	UMirTextBlock* txt_level; // 0x300
	UMirImage* img_class; // 0x308
	UMirTextBlock* txt_class; // 0x310
	UMirTextBlock* txt_combat_power; // 0x318
	UMirButton* btn_select; // 0x320
};

struct UBuffInfoSlotWidget {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMaterialExpressionParticleSubUV {
	char bBlend : 1; // 0xd0
};

struct URig {
	TArray<FTransformBase> TransformBases; // 0x30
	TArray<FNode> Nodes; // 0x40
};

struct UTimecodeProvider {
	int32_t FrameDelay; // 0x28
};

struct UEndMatchCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMM_Auction_Tab_Calculate {
	UMirTextBlock* m_pTxtSoldCount; // 0x300
	UMirTextBlock* m_pTxtSoldMoney; // 0x308
	UMirTextBlock* m_pTxtReceiveMoney; // 0x310
	UMM_Common_Btn* m_pBtnGetMoney; // 0x318
	UMirListView* m_pListView; // 0x320
	UMM_Common_Board_Notice* m_pNotice; // 0x328
};

struct UMM_B_HudRightMenu {
	int32_t m_iStringID_ExitPhase; // 0x2f0
	int32_t m_iStringID_BtnCancel; // 0x2f4
	int32_t m_iStringID_BtnExit; // 0x2f8
	int32_t m_iStringID_ExitDungeon; // 0x2fc
	UMM_HudQuestList* m_pQuestList; // 0x300
	UMM_HudBtnMenu* m_pBtnGiveUp; // 0x308
	UMM_HudBtnMenu* m_pPhaseExitMenuWidget; // 0x310
	UButton* m_pBtnFoldQuest; // 0x318
	UWidgetAnimation* m_AniFoldQuest; // 0x320
};

struct UMM_Goods_Slot {
	ECostType m_eCostType; // 0x2f0
	ETimeTicketType m_eTimeTicketType; // 0x2f1
	bool m_bUse_SimpleDigit; // 0x2f2
	bool m_bUse_MaxValue; // 0x2f3
	bool m_bUse_GuildMaxValue; // 0x2f4
	bool m_bUse_CostName; // 0x2f5
	bool m_bUse_AddButton; // 0x2f6
	bool m_bLeftJustify_CostValue; // 0x2f7
	int32_t m_iTooltipID; // 0x2f8
	UMirImage* m_Img_CostIcon; // 0x320
	UMirTextBlock* m_Txt_CostName; // 0x328
	UMirTextBlock* m_Txt_CostValue; // 0x330
	UPanelWidget* m_Grid_AddIcon; // 0x338
	UMirButton* m_Btn_Icon; // 0x340
	UMirButton* m_Btn_Cost; // 0x348
	UMM_Common_Btn_Symbol* m_Btn_CostInfo; // 0x350
	UWidget* m_SB_Tooltip; // 0x358
	UMM_Common_ToolTipBtn* m_Btn_Tooltip; // 0x360
	UPanelWidget* m_Can_IncreaseEffect; // 0x368
	UWidgetAnimation* m_Ani_IncreaseEffect; // 0x370
};

struct UGameplayTagsSettings {
	bool ImportTagsFromConfig; // 0x48
	bool WarnOnInvalidTags; // 0x49
	bool FastReplication; // 0x4a
	FString InvalidTagCharacters; // 0x50
	TArray<FGameplayTagCategoryRemap> CategoryRemapping; // 0x60
	TArray<FSoftObjectPath> GameplayTagTableList; // 0x70
	TArray<FGameplayTagRedirect> GameplayTagRedirects; // 0x80
	TArray<FName> CommonlyReplicatedTags; // 0x90
	int32_t NumBitsForContainerSize; // 0xa0
	int32_t NetIndexFirstBitSegment; // 0xa4
	TArray<FRestrictedConfigInfo> RestrictedConfigFiles; // 0xa8
};

struct ALevel_ChracterInfo_C {
	char bInputEnabled : 1; // 0x218
};

struct UMaterialExpressionSkyAtmosphereLightDiskLuminance {
	int32_t LightIndex; // 0x40
};

struct USphereComponent {
	float SphereRadius; // 0x430
};

struct UMaterialInterface {
	USubsurfaceProfile* SubsurfaceProfile; // 0x38
	FLightmassMaterialInterfaceSettings LightmassSettings; // 0x50
	TArray<FMaterialTextureInfo> TextureStreamingData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct UEdGraphPin_Deprecated {
	FString PinName; // 0x28
	FString PinToolTip; // 0x38
	EEdGraphPinDirection Direction; // 0x48
	FEdGraphPinType PinType; // 0x50
	FString DefaultValue; // 0xa8
	FString AutogeneratedDefaultValue; // 0xb8
	UObject* DefaultObject; // 0xc8
	FText DefaultTextValue; // 0xd0
	TArray<UEdGraphPin_Deprecated*> LinkedTo; // 0xe8
	TArray<UEdGraphPin_Deprecated*> SubPins; // 0xf8
	UEdGraphPin_Deprecated* ParentPin; // 0x108
	UEdGraphPin_Deprecated* ReferencePassThroughConnection; // 0x110
};

struct UPawnNoiseEmitterComponent {
	char bAIPerceptionSystemCompatibilityMode : 1; // 0xb0
	FVector LastRemoteNoisePosition; // 0xb4
	float NoiseLifetime; // 0xc0
	float LastRemoteNoiseVolume; // 0xc4
	float LastRemoteNoiseTime; // 0xc8
	float LastLocalNoiseVolume; // 0xcc
	float LastLocalNoiseTime; // 0xd0
};

struct UMM_PopupGuildSearch {
	UMM_Common_Btn_Symbol* btn_close; // 0x2e0
	UMM_Common_Btn_Symbol* btn_prev; // 0x2e8
	UMM_Common_Btn_Symbol* btn_next; // 0x2f0
	UMM_Common_Btn* btn_confirm; // 0x2f8
	UMirTextBlock* txt_page; // 0x300
	UMirTextBlock* Txt_Title; // 0x308
	UMirTextBlock* Txt_Search; // 0x310
	UMirScrollBox* sb_list; // 0x318
};

struct AProjectileMissile {
	USphereComponent* m_pCollSphereComp; // 0x218
	UParticleSystemComponent* m_pShotParticleComp; // 0x220
	UParticleSystemComponent* m_pImpactParticleComp; // 0x228
};

struct ASpawnObjectDataActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UParticleModuleCameraOffset {
	FRawDistributionFloat CameraOffset; // 0x30
	char bSpawnTimeOnly : 1; // 0x60
	EParticleCameraOffsetUpdateMethod UpdateMethod; // 0x64
};

struct AGeometryCollectionActor {
	UGeometryCollectionComponent* GeometryCollectionComponent; // 0x218
	UGeometryCollectionDebugDrawComponent* GeometryCollectionDebugDrawComponent; // 0x220
};

struct UMM_B_PopupNFTCharacterList {
	UMM_Common_Btn_Symbol* btn_close; // 0x2e0
	UMM_Common_Btn* btn_refresh; // 0x2e8
	UMM_Common_Btn* btn_confirm; // 0x2f0
	UMirScrollBox* sb_character; // 0x2f8
};

struct UDistributionVectorConstantCurve {
	FInterpCurveVector ConstantCurve; // 0x38
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
};

struct UParticleModule {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMM_ClosedTraining_Slot_Sphere {
	TArray<UWidgetAnimation*> m_Ani_PercentList; // 0x2e0
};

struct UMM_GuildMemberPortrait {
	UMirImage* Img_Icon; // 0x2e0
	UMirImage* img_frame; // 0x2e8
	UMirImage* img_class; // 0x2f0
	UMirImage* img_expedition; // 0x2f8
};

struct UMM_UIAction_ItemInfo_Simple {
	int32_t CONTENTS_ID_POPUP; // 0x160
};

struct USoundNodeLooping {
	int32_t LoopCount; // 0x40
	char bLoopIndefinitely : 1; // 0x44
};

struct UMM_Guild_Diplomacy {
	UMM_Guild_DiplomacyTopMenuSlot* mTopSlotDiplomacy; // 0x300
	UMM_Common_Btn* mCBGotoGuildPeruse; // 0x308
	UMM_CommonVerticalTabSet* mCTVrtTabSet; // 0x310
	UMirScrollBox* mSBList; // 0x318
	UMirTextBlock* mTxtRankTitle; // 0x320
	UMirTextBlock* mTxtGuildTitle; // 0x328
	UMirTextBlock* mTxtGuildLevelTitle; // 0x330
	UMirTextBlock* mTxtCombatPowerTitle; // 0x338
	UMirTextBlock* mTxtMemberTitle; // 0x340
	UMirTextBlock* mTxtStatusTitle; // 0x348
	UMM_Common_Board_Notice* mEmptyNotice; // 0x350
	UMM_Common_ToolTipBtn* mTooltipBtn; // 0x358
	UMM_GuildDevLock* mPanelDevLock; // 0x360
};

struct ALandscapeGizmoActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMM_GuideDecalComponent {
	UDecalComponent* GuideDecal; // 0xd8
	UMaterialInstanceDynamic* GuideMaterialInstanceDynamic; // 0xe0
};

struct UFloatingPawnMovement {
	float MaxSpeed; // 0x138
	float Acceleration; // 0x13c
	float Deceleration; // 0x140
	float TurningBoost; // 0x144
	char bPositionCorrected : 1; // 0x148
};

struct UMaterialExpressionAtmosphericLightVector {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UAnimCompress {
	FString Description; // 0x28
	char bNeedsSkeleton : 1; // 0x38
	char bEnableSegmenting : 1; // 0x38
	uint32_t IdealNumFramesPerSegment; // 0x3c
	uint32_t MaxNumFramesPerSegment; // 0x40
	AnimationCompressionFormat TranslationCompressionFormat; // 0x44
	AnimationCompressionFormat RotationCompressionFormat; // 0x45
	AnimationCompressionFormat ScaleCompressionFormat; // 0x46
	float MaxCurveError; // 0x48
};

struct UMaterialExpressionFresnel {
	FExpressionInput ExponentIn; // 0x40
	float Exponent; // 0x54
	FExpressionInput BaseReflectFractionIn; // 0x58
	float BaseReflectFraction; // 0x6c
	FExpressionInput Normal; // 0x70
};

struct UInterpGroupInstCamera {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct UMaterialExpressionObjectPositionWS {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UStereoLayerComponent {
	char bLiveTexture : 1; // 0x220
	char bSupportsDepth : 1; // 0x220
	char bNoAlphaChannel : 1; // 0x220
	UTexture* Texture; // 0x228
	UTexture* LeftTexture; // 0x230
	char bQuadPreserveTextureRatio : 1; // 0x238
	FVector2D QuadSize; // 0x23c
	FBox2D UVRect; // 0x244
	float CylinderRadius; // 0x258
	float CylinderOverlayArc; // 0x25c
	int32_t CylinderHeight; // 0x260
	FEquirectProps EquirectProps; // 0x264
	EStereoLayerType StereoLayerType; // 0x2ac
	EStereoLayerShape StereoLayerShape; // 0x2ad
	int32_t Priority; // 0x2b0
};

struct UMM_Toltip_Slot {
	UScaleBox* ScalePanel; // 0x2e0
	UMirTextBlock* Txt_Left; // 0x2e8
	UMirTextBlock* Txt_Right; // 0x2f0
	UImage* Img_Deco_Line; // 0x2f8
	UScaleBox* ScalePanel1; // 0x300
	UMirTextBlock* Txt_Left1; // 0x308
	UMirTextBlock* Txt_Right1; // 0x310
	UMirTextBlock* ValueDefault; // 0x318
	UMirTextBlock* AddValue; // 0x320
	UImage* Img_Deco_Line1; // 0x328
	UTextBlock* m_Txt1; // 0x330
	UTextBlock* m_Txt2; // 0x338
	UScaleBox* ScalePanel2; // 0x340
	UMirTextBlock* Txt_Left2; // 0x348
	UMirTextBlock* Txt_Right2; // 0x350
	UMirTextBlock* Txt_Value_Penalty; // 0x358
	UImage* Img_Deco_Line2; // 0x360
	UTextBlock* m_Txt3; // 0x368
	UTextBlock* m_Txt4; // 0x370
	UTextBlock* m_Txt5; // 0x378
	UMirTextBlock* Txt_Desc_Default; // 0x380
	UMirTextBlock* Txt_Desc_Plus; // 0x388
	UMirTextBlock* Txt_Desc_Durability; // 0x390
	FVector2D vPanelSize; // 0x398
	FVector2D vWidgetSize; // 0x3a0
};

struct UMovieSceneEventTrack {
	char bFireEventsWhenForwards : 1; // 0x58
	char bFireEventsWhenBackwards : 1; // 0x58
	EFireEventsAtPosition EventPosition; // 0x5c
	TArray<FMovieSceneObjectBindingID> EventReceivers; // 0x60
	TArray<UMovieSceneSection*> Sections; // 0x70
};

struct UMapBuildDataRegistry {
	ELightingBuildQuality LevelLightingQuality; // 0x28
};

struct AGeneratedMeshAreaLight {
	USpotLightComponent* SpotLightComponent; // 0x228
};

struct UAISenseConfig_Damage {
	UAISense_Damage* Implementation; // 0x48
};

struct UARTrackedQRCode {
	FString QRCode; // 0xf8
	int32_t Version; // 0x108
};

struct UParticleModuleAccelerationDrag {
	UDistributionFloat* DragCoefficient; // 0x38
	FRawDistributionFloat DragCoefficientRaw; // 0x40
};

struct UMirWebBrowser {
	FScriptMulticastDelegate OnLoadCompleted; // 0x150
	FScriptMulticastDelegate OnLoadError; // 0x160
};

struct UMM_TotalMenu_SlotBase {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UAISystem {
	FSoftClassPath PerceptionSystemClassName; // 0x58
	FSoftClassPath HotSpotManagerClassName; // 0x70
	float AcceptanceRadius; // 0x88
	float PathfollowingRegularPathPointAcceptanceRadius; // 0x8c
	float PathfollowingNavLinkAcceptanceRadius; // 0x90
	bool bFinishMoveOnGoalOverlap; // 0x94
	bool bAcceptPartialPaths; // 0x95
	bool bAllowStrafing; // 0x96
	bool bEnableBTAITasks; // 0x97
	bool bAllowControllersAsEQSQuerier; // 0x98
	bool bEnableDebuggerPlugin; // 0x99
	ECollisionChannel DefaultSightCollisionChannel; // 0x9a
	UBehaviorTreeManager* BehaviorTreeManager; // 0xa0
	UEnvQueryManager* EnvironmentQueryManager; // 0xa8
	UAIPerceptionSystem* PerceptionSystem; // 0xb0
	TArray<UAIAsyncTaskBlueprintProxy*> AllProxyObjects; // 0xb8
	UAIHotSpotManager* HotSpotManager; // 0xc8
	UNavLocalGridManager* NavLocalGrids; // 0xd0
};

struct UMM_Occupation_BidHistory {
	UMirTextBlock* Txt_Value_01; // 0x2f0
	UMirTextBlock* Txt_Value_02; // 0x2f8
	UMirTextBlock* Txt_Value_03; // 0x300
	UMirTextBlock* Txt_Value_04; // 0x308
	UMM_Common_Btn_Symbol* Btn_AddAlliance_01; // 0x310
	UMM_Common_Btn_Symbol* Btn_AddAlliance_02; // 0x318
	UMM_Common_Btn_Symbol* Btn_RemoveAlliance_01; // 0x320
	UMM_Common_Btn_Symbol* Btn_RemoveAlliance_02; // 0x328
};

struct UCurveLinearColor {
	FRichCurve FloatCurves[0x4]; // 0x30
	float AdjustHue; // 0x230
	float AdjustSaturation; // 0x234
	float AdjustBrightness; // 0x238
	float AdjustBrightnessCurve; // 0x23c
	float AdjustVibrance; // 0x240
	float AdjustMinAlpha; // 0x244
	float AdjustMaxAlpha; // 0x248
};

struct USystemTimeTimecodeProvider {
	FFrameRate FrameRate; // 0x30
};

struct AMM_CutscenePreviewGameMode {
	ULevelStreamingDynamic* m_pLevelStreaming; // 0x4a0
};

struct UMM_Popup_GuildList {
	UMirScrollBox* sb_list; // 0x2f0
	UMM_Common_Board_Notice* bn_empty; // 0x2f8
	UMM_Common_Btn_Symbol* btn_close; // 0x300
	UMirTextBlock* Txt_Title; // 0x308
	UMirTextBlock* txt_page; // 0x310
	UMM_Common_Btn_Symbol* m_pBtnPrev; // 0x318
	UMM_Common_Btn_Symbol* m_pBtnNext; // 0x320
};

struct UMM_Status_Info {
	UMirTextBlock* Txt_Left; // 0x2e0
	UMirTextBlock* Txt_Right; // 0x2e8
	UGridPanel* CanvasPanel; // 0x2f0
};

struct UMovieSceneSignedObject {
	FGuid Signature; // 0x28
};

struct UMM_Dominion_Title_GroupInfo {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UAnimSequencerInstance {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FScriptMulticastDelegate OnMontageBlendingOut; // 0x38
	FScriptMulticastDelegate OnMontageStarted; // 0x48
	FScriptMulticastDelegate OnMontageEnded; // 0x58
	FScriptMulticastDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct UMM_B_Mail {
	int32_t iMailNoticeStringID; // 0x2f0
	TArray<int32_t> ARRAY_STRING_TAB_BUTTON_ID; // 0x2f8
	UMM_CommonVerticalTabSet* m_CategoryTab; // 0x308
	UMM_Common_Btn* m_C_Btn_DeleteAll; // 0x310
	UMM_Common_Btn* m_C_Btn_ReceiveAll; // 0x318
	UMM_Common_Btn* m_Btn_Refresh; // 0x320
	UMirRichTextBlock* m_RTxt_Notice; // 0x328
	UMM_Common_Btn* m_C_Btn_Write; // 0x330
	UMM_Common_Btn* m_C_Btn_Del; // 0x338
	UMM_Common_Btn* m_C_Btn_Func; // 0x340
	UMM_Common_Btn* m_C_Btn_SiegeRank; // 0x348
	UMirListView* m_ListView_MailList; // 0x350
	UMirCanvasPanel* m_Canvas_Detail; // 0x358
	UMM_Common_Board_Notice* m_C_Empty_Notice; // 0x360
	UVerticalBox* m_VrtBox_Normal; // 0x368
	UMirTextBlock* m_Txt_Title; // 0x370
	UMirTextBlock* m_Txt_SubTitle; // 0x378
	UMirTextBlock* m_Txt_SendTime; // 0x380
	UMirRichTextBlock* m_RTxt_ExpireTime; // 0x388
	UMirRichTextBlock* m_RTxt_Contents; // 0x390
	UMirScrollBox* m_ScrollBox_Gift; // 0x398
	UMirImage* m_Img_Draco; // 0x3a0
	TArray<UMailSlotObj*> m_arMailSlotObj; // 0x3a8
	UMM_Common_Btn_Translation* m_Btn_Translation; // 0x3b8
};

struct UMM_PetEquipSlot {
	UMirImage* m_Img_GradeBg; // 0x300
	UMirImage* m_Img_Icon; // 0x308
	UMirImage* m_Img_Tier; // 0x310
	UMirTextBlock* m_Txt_TranscendStep; // 0x318
	UMirImage* m_Img_Locked; // 0x320
	UMirButton* m_Btn_Main; // 0x328
	UPanelWidget* m_Can_EquipAbleEffect; // 0x330
	UPanelWidget* m_Grid_EquippedEffect; // 0x338
	UPanelWidget* m_Grid_SelectEffect; // 0x340
	UWidgetAnimation* m_AniEquipAbleEffect; // 0x348
};

struct AUIBackGroundActor {
	bool m_bUpdate; // 0x218
	bool m_bMoveComponent; // 0x219
	USceneCaptureComponent2D* SceneCaptureComponent2D; // 0x220
	UCanvasRenderTarget2D* m_pRenderTarget2D; // 0x228
	UMaterial* RenderTargetMaterial; // 0x230
	TMap<FString, UArrowComponent*> CachedArrows; // 0x238
	UMaterialInterface* BackgroundMaterial; // 0x288
	AActor* UIBackGroundActor; // 0x290
	UMaterialInstanceDynamic* BackgroundDynamicInst; // 0x298
	UDataTable* SceneCaptureTableReferences; // 0x2a0
	FVector DestCameraLocation; // 0x2a8
	float DestCameraPitch; // 0x2b4
	float CalculateDestCameraFOV; // 0x2b8
	float DestCameraFOV; // 0x2bc
	int32_t IsPendingUpdate; // 0x2c0
	TArray<UCanvasRenderTarget2D*> mRenderTarget2DList; // 0x370
};

struct AInstancedFoliageActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMaterialExpressionViewProperty {
	EMaterialExposedViewProperty Property; // 0x40
};

struct USoundSubmix {
	TArray<USoundSubmix*> ChildSubmixes; // 0x28
	USoundSubmix* ParentSubmix; // 0x38
	ESubmixChannelFormat ChannelFormat; // 0x40
	char bMuteWhenBackgrounded : 1; // 0x41
	TArray<USoundEffectSubmixPreset*> SubmixEffectChain; // 0x48
	UAmbisonicsSubmixSettingsBase* AmbisonicsPluginSettings; // 0x58
	int32_t EnvelopeFollowerAttackTime; // 0x60
	int32_t EnvelopeFollowerReleaseTime; // 0x64
	float OutputVolume; // 0x68
	FScriptMulticastDelegate OnSubmixRecordedFileDone; // 0x70
};

struct USpeechBalloonWidget {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_Popup_Auction_RegistInfo {
	UMM_Popup_Auction_ItemInfoSlot* m_pItemInfo; // 0x2f8
	UMirTextBlock* m_pTxtAvrPrice; // 0x300
	UMirTextBlock* m_pTxtResultPrice; // 0x308
	UMM_Item_Make_Slider* m_pSliderSellCount; // 0x310
	UMM_Item_Make_Slider* m_pSliderSellPrice; // 0x318
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x320
	UMM_Common_Btn* m_pBtnCancle; // 0x328
	UMM_Common_Btn* m_pBtnOk; // 0x330
};

struct UNavArea_Null {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UProgressBar {
	FProgressBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x2a8
	USlateBrushAsset* BackgroundImage; // 0x2b0
	USlateBrushAsset* FillImage; // 0x2b8
	USlateBrushAsset* MarqueeImage; // 0x2c0
	float Percent; // 0x2c8
	EProgressBarFillType BarFillType; // 0x2cc
	bool bIsMarquee; // 0x2cd
	FVector2D BorderPadding; // 0x2d0
	DelegateProperty PercentDelegate; // 0x2d8
	FLinearColor FillColorAndOpacity; // 0x2e8
	DelegateProperty FillColorAndOpacityDelegate; // 0x2f8
};

struct UTexture2D {
	int32_t LevelIndex; // 0xd0
	int32_t FirstResourceMemMip; // 0xd4
	char bTemporarilyDisableStreaming : 1; // 0xd8
	TextureAddress AddressX; // 0xd9
	TextureAddress AddressY; // 0xda
	FIntPoint ImportedSize; // 0xdc
};

struct UMM_Popup_Skill_ItemExchange {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMM_Slot_Material* m_TargetSmallSlot; // 0x2f8
	UMirRichTextBlock* m_RT_TargetSmallName; // 0x300
	UMirProgressBar* m_Prog_Curr; // 0x308
	UMirProgressBar* m_Prog_Next; // 0x310
	UMM_Slot_Material* m_ExchangeSlot; // 0x318
	UMirTextBlock* m_Txt_ExchangeName; // 0x320
	UMirTextBlock* m_Txt_ExchangeCount; // 0x328
	UMM_Slot_Material* m_TargetSlot; // 0x330
	UMirTextBlock* m_Txt_TargetName; // 0x338
	UMirTextBlock* m_Txt_TargetCount; // 0x340
	UMM_Item_Make_Slider* m_Make_Slider; // 0x348
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x350
	UMM_Common_Btn* m_CB_Exchange; // 0x358
	UMM_Common_Btn* m_CB_Cancel; // 0x360
};

struct ASafetyArea {
	int32_t m_ActiveRadius; // 0x218
};

struct UCameraComponent {
	float FieldOfView; // 0x220
	float OrthoWidth; // 0x224
	float OrthoNearClipPlane; // 0x228
	float OrthoFarClipPlane; // 0x22c
	float AspectRatio; // 0x230
	char bConstrainAspectRatio : 1; // 0x234
	char bUseFieldOfViewForLOD : 1; // 0x234
	char bLockToHmd : 1; // 0x234
	char bUsePawnControlRotation : 1; // 0x234
	ECameraProjectionMode ProjectionMode; // 0x235
	float PostProcessBlendWeight; // 0x270
	FPostProcessSettings PostProcessSettings; // 0x2a0
};

struct UMovieScene2DTransformTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UChannel {
	UNetConnection* Connection; // 0x28
};

struct UEnvQueryInstanceBlueprintWrapper {
	int32_t QueryID; // 0x30
	UEnvQueryItemType* ItemType; // 0x58
	int32_t OptionIndex; // 0x60
	FScriptMulticastDelegate OnQueryFinishedEvent; // 0x68
};

struct UEnvelopeFollowerListener {
	FScriptMulticastDelegate OnEnvelopeFollowerUpdate; // 0xb0
};

struct UParticleModuleLifetimeBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMM_Map_WaypointDest {
	UWidgetAnimation* m_AniActive; // 0x2e0
	USpacer* m_SpcMain; // 0x2e8
	UImage* m_ImgDest_1; // 0x2f0
	UImage* m_ImgDest_2; // 0x2f8
};

struct ULocalLightComponent {
	ELightUnits IntensityUnits; // 0x368
	float Radius; // 0x36c
	float AttenuationRadius; // 0x370
	FLightmassPointLightSettings LightmassSettings; // 0x374
};

struct UParticleModuleLocation {
	FRawDistributionVector StartLocation; // 0x30
	float DistributeOverNPoints; // 0x78
	float DistributeThreshold; // 0x7c
};

struct UPaperTerrainComponent {
	UPaperTerrainMaterial* TerrainMaterial; // 0x418
	bool bClosedSpline; // 0x420
	bool bFilledSpline; // 0x421
	UPaperTerrainSplineComponent* AssociatedSpline; // 0x428
	int32_t RandomSeed; // 0x430
	float SegmentOverlapAmount; // 0x434
	FLinearColor TerrainColor; // 0x438
	int32_t ReparamStepsPerSegment; // 0x448
	ESpriteCollisionMode SpriteCollisionDomain; // 0x44c
	float CollisionThickness; // 0x450
	UBodySetup* CachedBodySetup; // 0x458
};

struct UGachaDirectingData {
	TMap<EGachaBoxType, USkeletalMesh*> GachaBoxMeshs; // 0x30
	TMap<EGachaResultType, UPaperSprite*> GachaResultSprite; // 0x80
	TMap<EGachaResultType, USkeletalMesh*> GachaResultMeshs; // 0xd0
	UClass* GachaResultAnimation; // 0x120
	TMap<EGachaResultType, UParticleSystem*> TombstoneTypeEffects; // 0x148
	UParticleSystem* LowGradeBeginEffects; // 0x198
	UParticleSystem* HighGradeBeginEffects; // 0x1c0
	UParticleSystem* LowGradeGlowEffects; // 0x1e8
	UParticleSystem* HighGradeGlowEffects; // 0x210
	TMap<int32_t, UParticleSystem*> GradeOpenEffect; // 0x238
	TMap<int32_t, UParticleSystem*> GradeOpenGlowEffect; // 0x288
	TMap<EGachaBoxType, UParticleSystem*> InteractionEffects; // 0x2d8
	TArray<UParticleSystem*> DragEffects; // 0x328
	TArray<float> DragEffectStep; // 0x338
	UParticleSystem* InteractionOpenEffect; // 0x348
	TMap<int32_t, UParticleSystem*> InteractionMaterialEffect; // 0x370
	USoundBase* EnterButtonSound; // 0x3c0
	USoundBase* OpenButtonSound; // 0x3e8
	USoundBase* GlowEffectSound; // 0x410
	USoundBase* DragSparkSound; // 0x438
	USoundBase* DragReleaseSound; // 0x460
	float GachaOpenGap; // 0x488
	TArray<int32_t> GachaOpenSequence; // 0x490
	float DragMaxSize; // 0x4a0
	float DragCameraShakeMaxScale; // 0x4a4
	int32_t HighGradeStandard; // 0x4a8
};

struct UMM_Occupation_Minimap {
	EMinimapFeatureAvailability MinimapFeatureAvailability; // 0x300
	FVector2D MinimapSize; // 0x304
	UMM_Map_Player* m_Player; // 0x310
	UCanvasPanelSlot* m_pPlayerSlot; // 0x318
	UMirImage* Img_Minimap; // 0x320
	UCanvasPanel* Panel_Icon; // 0x328
	UMirImage* Btn_TouchBound; // 0x330
	TArray<UCanvasPanel*> EffectPanelList; // 0x338
	TMap<uint64_t, UImage*> m_UserImageMap; // 0x348
	TMap<uint64_t, UMM_Occupation_Minimap_Icon*> m_MinimapIconMap; // 0x398
	TMap<int32_t, UMM_Occupation_Minimap_Icon*> m_MinimapRevivalIconMap; // 0x3e8
	UImage* m_SelectRevivalIcon; // 0x438
	UImage* m_CharacterDieIcon; // 0x440
	TMap<uint64_t, FVector2D> m_PreviousScreenPos; // 0x448
	TMap<uint64_t, FVector2D> m_DestScreenPos; // 0x498
	int32_t m_TouchIndex; // 0x568
	int32_t m_StageID; // 0x56c
	int32_t m_SelectCorpsNumber; // 0x570
	int32_t m_GuildWarType; // 0x574
	uint64_t m_SelectGuildUID; // 0x578
	FVector2D m_MapRatio; // 0x580
	FVector2D m_MapSize; // 0x588
	FVector2D m_MapImageSize; // 0x590
	FMargin m_MapCoordinate; // 0x598
	FGeometry m_LastGeometry; // 0x5a8
	float m_DeltaTime; // 0x5e0
	UPanelWidget* m_Grid_Move; // 0x5e8
	UMirButton* m_Btn_Move; // 0x5f0
	UMirTextBlock* m_TxtMove; // 0x5f8
};

struct AExponentialHeightFogOverrideVolume {
	UOverrideExponentialHeightFog* OverrideExponentialHeightFog; // 0x7a0
};

struct UMM_Map_Party {
	float m_fRaderScale; // 0x2e0
	USpacer* m_SpcMain; // 0x300
	UImage* m_ImgLeader; // 0x308
	UImage* m_ImgMember; // 0x310
	UImage* m_ImgIndex; // 0x318
};

struct UMM_Popup_ContentsState {
	UMirTextBlock* m_Txt_Title; // 0x2e8
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x2f0
	UMirScrollBox* m_Scr_Slot; // 0x2f8
	TArray<UMM_ContentsState*> m_arContentsState; // 0x300
	UMirButton* m_Btn_Main; // 0x310
};

struct UMM_SharedScrollBox {
	UWrapBox* m_WrapBox; // 0x2e0
	UScrollBox* m_ScrollBox; // 0x2e8
};

struct USystemAlertWidget {
	UTextBlock* Txt_BattleTitle; // 0x2e0
};

struct UBTTask_PawnActionBase {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct UEnvQueryGenerator_CurrentLocation {
	UEnvQueryContext* QueryContext; // 0x50
};

struct UMaterialExpression {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UCurveVector {
	FRichCurve FloatCurves[0x3]; // 0x30
};

struct UEditableGameplayTagQueryExpression_AnyTagsMatch {
	FGameplayTagContainer Tags; // 0x28
};

struct UMM_EquipSlot_Registered {
	ESlotSmeltingLevelType SlotSmeltingLevelType; // 0x3f8
	bool m_bUseGradeBgEquipEffect; // 0x3f9
	UMirImage* m_Img_GradeBgEffect; // 0x400
	UMirImage* m_Img_GradeBgEquipEffect; // 0x408
	UMirTextBlock* m_TxtSmeltingLV_Left; // 0x410
	UMirTextBlock* m_TxtSmeltingLV_Right; // 0x418
	UMirImage* m_Img_Lock; // 0x420
	UMirImage* m_Img_Tier; // 0x428
	UMirImage* m_Img_Durability_BG; // 0x430
	UMirImage* m_Img_Durability_Icon; // 0x438
	UMirImage* m_Img_UserLock; // 0x440
};

struct UMM_BlueprintAsyncLoadAction {
	FScriptMulticastDelegate AsyncLoadComplete; // 0x30
};

struct UMM_Popup_OptionChange {
	float m_fMaxSpeed; // 0x2f0
	float m_fMinSpeed; // 0x2f4
	float m_fMaxTime; // 0x2f8
	float m_fDecreaseTime; // 0x2fc
	UCurveFloat* m_pCurve; // 0x300
	float m_fAutoTerm; // 0x308
	UWidgetAnimation* Ani_Open; // 0x310
	UWidgetAnimation* Ani_Close; // 0x318
	UWidgetAnimation* Ani_Show_Up; // 0x320
	UWidgetAnimation* Ani_Show_Up_2; // 0x328
	UMM_Common_Btn_Symbol* Btn_OptionList_Slot; // 0x330
	UMM_Slot_Registered* Slot_Target; // 0x338
	UMirTextBlock* Txt_Target; // 0x340
	UMM_AddOptionList* OptionList_Ability; // 0x348
	UMirTextBlock* Txt_NowAbility; // 0x350
	UMM_AbilityState_Item* Ability_Now[0x4]; // 0x358
	UMirTextBlock* Txt_NewAbility; // 0x378
	UMM_AbilityState_Item* Ability_New[0x4]; // 0x380
	UMM_AbilityState_Item* Ability_Now_Eigth[0x8]; // 0x3a0
	UMM_AbilityState_Item* Ability_New_Eigth[0x8]; // 0x3e0
	UMirCanvasPanel* m_PanelForFour; // 0x420
	UMirCanvasPanel* m_PanelForEight; // 0x428
	UMM_Common_Btn* Btn_Continue; // 0x430
	UMM_Common_Btn* Btn_Apply; // 0x438
	UMM_Common_Btn* Btn_Auto_Option; // 0x440
	UMM_Common_Btn* btn_close_2; // 0x448
	UMM_Common_Btn* Btn_Apply_2; // 0x450
	UMirRichTextBlock* Txt_Notice; // 0x458
	UMM_Common_Btn_Symbol* btn_close; // 0x460
	UMirTextBlock* txt_money; // 0x468
	UMirTextBlock* Txt_Money1; // 0x470
	UPanelWidget* Effect_Panel; // 0x478
	UMirImage* Image_Need_Item; // 0x480
	UMirTextBlock* Txt_Have_Count; // 0x488
	UMirTextBlock* Txt_Need_Count; // 0x490
	UMirButton* Btn_Material1; // 0x498
	UMirButton* Btn_Material2; // 0x4a0
	UMirRichTextBlock* Txt_Auto_Count; // 0x4a8
};

struct ULevelUpWidget {
	FSlateBrush Number_1; // 0x2e0
	FSlateBrush Number_2; // 0x368
	FSlateBrush Number_3; // 0x3f0
	FSlateBrush Number_4; // 0x478
	FSlateBrush Number_5; // 0x500
	FSlateBrush Number_6; // 0x588
	FSlateBrush Number_7; // 0x610
	FSlateBrush Number_8; // 0x698
	FSlateBrush Number_9; // 0x720
	FSlateBrush Number_10; // 0x7a8
	UWidgetAnimation* m_pAnim_Start; // 0x830
	UHorizontalBox* m_pBox_OneTwoDigit; // 0x838
	UCanvasPanel* m_pPanel_ThreeDigit; // 0x840
	UImage* m_pImg_OneTwo_2; // 0x848
	UImage* m_pImg_OneTwo_11; // 0x850
	UImage* m_pImg_Three_2; // 0x858
	UImage* m_pImg_Three_11; // 0x860
	UImage* m_pImg_Three_101; // 0x868
	FSlateBrush m_arrNumberImage[0xa]; // 0x870
};

struct UMaterialExpressionCameraPositionWS {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_PetSkillSlot {
	UMirImage* m_Img_Icon; // 0x2e8
	UMirButton* m_Btn_Main; // 0x2f0
	UPanelWidget* m_Grid_Effect; // 0x2f8
};

struct URuntimeVirtualTexture {
	ERuntimeVirtualTextureMaterialType materialType; // 0x28
	bool bCompressTextures; // 0x29
	bool bEnable; // 0x2a
	bool bClearTextures; // 0x2b
	bool bSinglePhysicalSpace; // 0x2c
	bool bPrivateSpace; // 0x2d
	bool bEnableScalability; // 0x2e
	int32_t Size; // 0x30
	int32_t TileCount; // 0x34
	int32_t TileSize; // 0x38
	int32_t TileBorderSize; // 0x3c
	int32_t RemoveLowMips; // 0x40
	int32_t StreamLowMips; // 0x44
	URuntimeVirtualTextureStreamingProxy* StreamingTexture; // 0x48
};

struct AMM_Vehicle {
	USkeletalMeshComponent* BodyMesh; // 0x220
	UCapsuleComponent* CapsuleComponent; // 0x228
	UMM_CharacterPartsComponent* m_pPartsComponent; // 0x230
	UAnimInstance* m_pAnimInstace; // 0x238
	USkeletalMeshComponent* m_pDefaultMesh; // 0x240
	bool IsTakeOff; // 0x248
	AMM_PC* m_ThisPC; // 0x250
	float m_Velocity; // 0x270
};

struct UMM_Customizing_PaletteItem {
	UMirImage* m_pColorImage_Main; // 0x2f0
	UMirImage* m_pColorImage_Sub; // 0x2f8
	UMirImage* m_pSelectIcon; // 0x300
	UMirButton* m_pSelectButton; // 0x308
};

struct UMM_Forge_OptionChange {
	int32_t OptionSlotCount; // 0x300
	int32_t OptionSlotCountEight; // 0x304
	UMM_NewInventory_Forge* m_InvenForge; // 0x308
	UMM_Common_Btn_Symbol* Btn_OptionList_Slot; // 0x310
	UMM_Common_Btn_Symbol* Btn_OptionList_Slot_2; // 0x318
	UMM_Common_Btn* Btn_Main; // 0x320
	UMirImage* img_cost; // 0x328
	UMirTextBlock* txt_cost; // 0x330
	UPanelWidget* Grid_Unselect; // 0x338
	UPanelWidget* Grid_Select; // 0x340
	UPanelWidget* Grid_AllSelectEffect; // 0x348
	UMM_Slot_Registered_Circle* Slot_Target; // 0x350
	UMM_Slot_Material_Item* Slot_Material; // 0x358
	UMM_Slot_Material_Item* Slot_Material1; // 0x360
	TArray<UMM_AbilityState_Item*> Option_Now; // 0x368
	TArray<UMM_AbilityState_Item_Simple*> Option_Now_2; // 0x378
	UMirTextBlock* Txt_GuideTitle; // 0x388
	UMirRichTextBlock* Txt_Guide; // 0x390
	UMirRichTextBlock* Txt_Notice; // 0x398
	UMirRichTextBlock* Txt_Notice_2; // 0x3a0
	UMM_Common_Item_NameTag* Txt_ItemNameTag; // 0x3a8
	UMM_Common_Item_NameTag* Txt_ItemNameTag_2; // 0x3b0
	UMM_Common_Btn* Btn_OptionList; // 0x3b8
	UMM_Common_Btn* Btn_OptionList_2; // 0x3c0
	UMM_Common_ToolTipBtn* Btn_Tooltip; // 0x3c8
	UMirCanvasPanel* Canvers_Option1; // 0x3d0
	UMirCanvasPanel* Canvers_Option2; // 0x3d8
	UMM_Popup_RandomOptionList* Popup_OptionList; // 0x3e0
};

struct USpinBoxWidgetStyle {
	FSpinBoxStyle SpinBoxStyle; // 0x30
};

struct AARSharedWorldGameMode {
	int32_t BufferSizePerChunk; // 0x300
};

struct UMM_UIAction_PopupPackage {
	int32_t STR_MSGID_COSTMAX; // 0xec
};

struct UMM_Popup_ContentsActionResult {
	UWidgetAnimation* m_AniStart; // 0x2e0
	UWidgetAnimation* m_AniEnd; // 0x2e8
	UWidgetAnimation* m_AniStart_GreatBuilding; // 0x2f0
	UPanelWidget* m_Grid_Deco_Mid; // 0x350
	UPanelWidget* m_Vrt_Title; // 0x358
	UMirTextBlock* m_Txt_Title; // 0x360
	UMirRichTextBlock* m_RTxt_TitleMsg; // 0x368
	UPanelWidget* m_Vrt_StarGradeTitle; // 0x370
	UMirTextBlock* m_Txt_StarGradeTitle_1; // 0x378
	UMirTextBlock* m_Txt_StarGradeTitle_2; // 0x380
	UPanelWidget* m_Hrz_StarGradeTitleDeco; // 0x388
	UPanelWidget* m_Hrz_StarGrade; // 0x390
	UMM_StarGrade* m_StarGrade_Pre; // 0x398
	UMM_StarGrade* m_StarGrade_Next; // 0x3a0
	UMM_ExchangeItemInfo* m_ExchangeItemInfo; // 0x3a8
	UMirButton* m_Btn_Back; // 0x3b0
	UPanelWidget* m_Grid_Result; // 0x3b8
	UMirImage* m_arImg_ResultIcon[0x8]; // 0x3c0
	UMirTextBlock* m_arTxt_Result[0x8]; // 0x400
	UMirRichTextBlock* m_arRTxt_PreValue[0x8]; // 0x440
	UMirImage* m_arImg_Next[0x8]; // 0x480
	UMirRichTextBlock* m_arRTxt_NextValue[0x8]; // 0x4c0
	UPanelWidget* m_Vrt_PetGradeUpSlot; // 0x500
	UMM_PetGradeUp_SkillLevelSlot* m_arPetGradeUpSlot[0x5]; // 0x508
};

struct UBTDecorator_CheckGameplayTagsOnActor {
	FBlackboardKeySelector ActorToCheck; // 0x68
	EGameplayContainerMatchType TagsToMatch; // 0x90
	FGameplayTagContainer GameplayTags; // 0x98
	FString CachedDescription; // 0xb8
};

struct UGameplayTask_SpawnActor {
	FScriptMulticastDelegate Success; // 0x68
	FScriptMulticastDelegate DidNotSpawn; // 0x78
	AActor* ClassToSpawn; // 0xa0
};

struct UVRNotificationsComponent {
	FScriptMulticastDelegate HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate; // 0xb0
	FScriptMulticastDelegate HMDTrackingInitializedDelegate; // 0xc0
	FScriptMulticastDelegate HMDRecenteredDelegate; // 0xd0
	FScriptMulticastDelegate HMDLostDelegate; // 0xe0
	FScriptMulticastDelegate HMDReconnectedDelegate; // 0xf0
	FScriptMulticastDelegate HMDConnectCanceledDelegate; // 0x100
	FScriptMulticastDelegate HMDPutOnHeadDelegate; // 0x110
	FScriptMulticastDelegate HMDRemovedFromHeadDelegate; // 0x120
	FScriptMulticastDelegate VRControllerRecenteredDelegate; // 0x130
};

struct UPoseWatch {
	UEdGraphNode* Node; // 0x28
	FColor PoseWatchColour; // 0x30
};

struct UMM_Customizing_Picker {
	UMM_Customizing_ComponentTitle* m_pComponentTitle; // 0x310
	UMM_UI_Drag* m_pDragButton; // 0x318
	UMM_Customizing_Picker_DetailBar* m_PickerDetail1; // 0x320
	UMM_Customizing_Picker_DetailBar* m_PickerDetail2; // 0x328
	UMM_Customizing_KeyPad* m_EditKeyPad; // 0x330
	UCanvasPanel* m_TouchAreaBG_Parent; // 0x338
	UMirImage* m_TouchAreaBG; // 0x340
};

struct UMaterialExpressionRotateAboutAxis {
	FExpressionInput NormalizedRotationAxis; // 0x40
	FExpressionInput RotationAngle; // 0x54
	FExpressionInput PivotPoint; // 0x68
	FExpressionInput Position; // 0x7c
	float Period; // 0x90
};

struct UEQSRenderingComponent {
	float MinDrawDistance; // 0x228
	float LDMaxDrawDistance; // 0x22c
	float CachedMaxDrawDistance; // 0x230
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x234
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x235
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x236
	ELightmapType LightmapType; // 0x237
	char bUseMaxLODAsImposter : 1; // 0x238
	float CachedBoundsSphereDiameter; // 0x23c
	char bBatchImpostersAsInstances : 1; // 0x240
	char bNeverDistanceCull : 1; // 0x240
	char bAlwaysCreatePhysicsState : 1; // 0x240
	char bGenerateOverlapEvents : 1; // 0x240
	char bMultiBodyOverlap : 1; // 0x241
	char bTraceComplexOnMove : 1; // 0x241
	char bReturnMaterialOnMove : 1; // 0x241
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x241
	char bAllowCullDistanceVolume : 1; // 0x241
	char bHasMotionBlurVelocityMeshes : 1; // 0x241
	char bVisibleInReflectionCaptures : 1; // 0x241
	char bVisibleInRayTracing : 1; // 0x241
	char bRenderInMainPass : 1; // 0x242
	char bRenderInDepthPass : 1; // 0x242
	char bReceivesDecals : 1; // 0x242
	char bOwnerNoSee : 1; // 0x242
	char bOnlyOwnerSee : 1; // 0x242
	char bTreatAsBackgroundForOcclusion : 1; // 0x242
	char bUseAsOccluder : 1; // 0x242
	char bSelectable : 1; // 0x242
	char bForceMipStreaming : 1; // 0x243
	char bHasPerInstanceHitProxies : 1; // 0x243
	char CastShadow : 1; // 0x243
	char bAffectDynamicIndirectLighting : 1; // 0x243
	char bAffectDistanceFieldLighting : 1; // 0x243
	char bCastDynamicShadow : 1; // 0x243
	char bCastStaticShadow : 1; // 0x243
	char bCastVolumetricTranslucentShadow : 1; // 0x243
	char bSelfShadowOnly : 1; // 0x244
	char bCastFarShadow : 1; // 0x244
	char bCastInsetShadow : 1; // 0x244
	char bCastCinematicShadow : 1; // 0x244
	char bCastHiddenShadow : 1; // 0x244
	char bCastShadowAsTwoSided : 1; // 0x244
	char bLightAsIfStatic : 1; // 0x244
	char bLightAttachmentsAsGroup : 1; // 0x244
	char bExcludeFromLightAttachmentGroup : 1; // 0x245
	char bReceiveMobileCSMShadows : 1; // 0x245
	char bSingleSampleShadowFromStationaryLights : 1; // 0x245
	char bIgnoreRadialImpulse : 1; // 0x245
	char bIgnoreRadialForce : 1; // 0x245
	char bApplyImpulseOnDamage : 1; // 0x245
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x245
	char AlwaysLoadOnClient : 1; // 0x245
	char AlwaysLoadOnServer : 1; // 0x246
	char bUseEditorCompositing : 1; // 0x246
	char bRenderCustomDepth : 1; // 0x246
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x247
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x249
	FLightingChannels LightingChannels; // 0x24a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x24b
	int32_t CustomDepthStencilValue; // 0x24c
	FCustomPrimitiveData CustomPrimitiveData; // 0x250
	int32_t TranslucencySortPriority; // 0x260
	int32_t VisibilityId; // 0x264
	char bIgnoreOcclusionVolume : 1; // 0x268
	int32_t OcclusionVolumeId; // 0x26c
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x270
	uint8_t VirtualTextureLodBias; // 0x280
	uint8_t VirtualTextureCullMips; // 0x281
	uint8_t VirtualTextureMinCoverage; // 0x282
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x283
	float LpvBiasMultiplier; // 0x288
	float BoundsScale; // 0x294
	TArray<AActor*> MoveIgnoreActors; // 0x2a8
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2b8
	FBodyInstance BodyInstance; // 0x2d8
	FScriptMulticastDelegate OnComponentHit; // 0x3e8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3e9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3ea
	FScriptMulticastDelegate OnComponentWake; // 0x3eb
	FScriptMulticastDelegate OnComponentSleep; // 0x3ec
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3ee
	FScriptMulticastDelegate OnEndCursorOver; // 0x3ef
	FScriptMulticastDelegate OnClicked; // 0x3f0
	FScriptMulticastDelegate OnReleased; // 0x3f1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3f2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3f3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3f4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3f5
	UPrimitiveComponent* LODParentPrimitive; // 0x410
};

struct UMM_Customizing_PresetItem {
	UMirImage* m_pAssetImage; // 0x2e0
	UMirTextBlock* m_pNameText; // 0x2e8
	UMirImage* m_pSelectImage; // 0x2f0
	UMirButton* m_pSelectButton; // 0x2f8
};

struct UConvenientIDWdiget {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UGeometryCache {
	TArray<UMaterialInterface*> Materials; // 0x30
	TArray<UGeometryCacheTrack*> Tracks; // 0x40
	int32_t StartFrame; // 0x60
	int32_t EndFrame; // 0x64
};

struct UTimelineTemplate {
	float TimelineLength; // 0x28
	ETimelineLengthMode LengthMode; // 0x2c
	char bAutoPlay : 1; // 0x2d
	char bLoop : 1; // 0x2d
	char bReplicated : 1; // 0x2d
	char bIgnoreTimeDilation : 1; // 0x2d
	TArray<FTTEventTrack> EventTracks; // 0x30
	TArray<FTTFloatTrack> FloatTracks; // 0x40
	TArray<FTTVectorTrack> VectorTracks; // 0x50
	TArray<FTTLinearColorTrack> LinearColorTracks; // 0x60
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0x70
	FGuid TimelineGuid; // 0x80
	FName VariableName; // 0x90
	FName DirectionPropertyName; // 0x98
	FName UpdateFunctionName; // 0xa0
	FName FinishedFunctionName; // 0xa8
};

struct UGeometryCacheTrack_TransformAnimation {
	float Duration; // 0x28
};

struct UMM_SkillDesc {
	UMirRichTextBlock* m_Txt_SkillDesc; // 0x2e0
	UMirRichTextBlock* m_Txt_NextSkillDesc; // 0x2e8
};

struct UMM_Guild_Shop {
	UMirTextBlock* mTxtGoodsRecord; // 0x2f0
	UMM_Common_ToolTipBtn* mBtnTooltip; // 0x2f8
	UMM_Common_Btn_IconText* mBtnPopupRecord; // 0x300
	UMirScrollBox* mScrollBox; // 0x308
	UMM_Common_Btn_Inven* mBtnTabRegist; // 0x310
	UMM_Common_Btn_Inven* mBtnTabBuy; // 0x318
	UMirCanvasPanel* mPanelTargetInfo; // 0x320
	UMM_Slot_Inventory* mTargetSlot; // 0x328
	UMirTextBlock* mTxtItemDesc; // 0x330
	UMirTextBlock* mTxtItemName; // 0x338
	UMirCanvasPanel* mPanelDevLockRoot; // 0x340
	UMM_GuildDevLock* mPanelDevLock; // 0x348
	UMM_Item_Make_Slider* mItemMakeSlider; // 0x350
	UMirCanvasPanel* mPanelCost; // 0x358
	UMirImage* mImgCostIcon; // 0x360
	UMirTextBlock* mTxtCost; // 0x368
	UMM_Common_Btn* mCBRegist; // 0x370
	UMM_Common_Btn* mCBBuy; // 0x378
	TArray<UMM_Guild_ShopList*> mGuildShopList; // 0x380
};

struct UMM_Hud_Chat_Macro {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UPlaneFalloff {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	float Distance; // 0xc0
	FVector Position; // 0xc4
	FVector Normal; // 0xd0
	EFieldFalloffType Falloff; // 0xdc
};

struct UNavMeshRenderingComponent {
	float MinDrawDistance; // 0x228
	float LDMaxDrawDistance; // 0x22c
	float CachedMaxDrawDistance; // 0x230
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x234
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x235
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x236
	ELightmapType LightmapType; // 0x237
	char bUseMaxLODAsImposter : 1; // 0x238
	float CachedBoundsSphereDiameter; // 0x23c
	char bBatchImpostersAsInstances : 1; // 0x240
	char bNeverDistanceCull : 1; // 0x240
	char bAlwaysCreatePhysicsState : 1; // 0x240
	char bGenerateOverlapEvents : 1; // 0x240
	char bMultiBodyOverlap : 1; // 0x241
	char bTraceComplexOnMove : 1; // 0x241
	char bReturnMaterialOnMove : 1; // 0x241
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x241
	char bAllowCullDistanceVolume : 1; // 0x241
	char bHasMotionBlurVelocityMeshes : 1; // 0x241
	char bVisibleInReflectionCaptures : 1; // 0x241
	char bVisibleInRayTracing : 1; // 0x241
	char bRenderInMainPass : 1; // 0x242
	char bRenderInDepthPass : 1; // 0x242
	char bReceivesDecals : 1; // 0x242
	char bOwnerNoSee : 1; // 0x242
	char bOnlyOwnerSee : 1; // 0x242
	char bTreatAsBackgroundForOcclusion : 1; // 0x242
	char bUseAsOccluder : 1; // 0x242
	char bSelectable : 1; // 0x242
	char bForceMipStreaming : 1; // 0x243
	char bHasPerInstanceHitProxies : 1; // 0x243
	char CastShadow : 1; // 0x243
	char bAffectDynamicIndirectLighting : 1; // 0x243
	char bAffectDistanceFieldLighting : 1; // 0x243
	char bCastDynamicShadow : 1; // 0x243
	char bCastStaticShadow : 1; // 0x243
	char bCastVolumetricTranslucentShadow : 1; // 0x243
	char bSelfShadowOnly : 1; // 0x244
	char bCastFarShadow : 1; // 0x244
	char bCastInsetShadow : 1; // 0x244
	char bCastCinematicShadow : 1; // 0x244
	char bCastHiddenShadow : 1; // 0x244
	char bCastShadowAsTwoSided : 1; // 0x244
	char bLightAsIfStatic : 1; // 0x244
	char bLightAttachmentsAsGroup : 1; // 0x244
	char bExcludeFromLightAttachmentGroup : 1; // 0x245
	char bReceiveMobileCSMShadows : 1; // 0x245
	char bSingleSampleShadowFromStationaryLights : 1; // 0x245
	char bIgnoreRadialImpulse : 1; // 0x245
	char bIgnoreRadialForce : 1; // 0x245
	char bApplyImpulseOnDamage : 1; // 0x245
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x245
	char AlwaysLoadOnClient : 1; // 0x245
	char AlwaysLoadOnServer : 1; // 0x246
	char bUseEditorCompositing : 1; // 0x246
	char bRenderCustomDepth : 1; // 0x246
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x247
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x249
	FLightingChannels LightingChannels; // 0x24a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x24b
	int32_t CustomDepthStencilValue; // 0x24c
	FCustomPrimitiveData CustomPrimitiveData; // 0x250
	int32_t TranslucencySortPriority; // 0x260
	int32_t VisibilityId; // 0x264
	char bIgnoreOcclusionVolume : 1; // 0x268
	int32_t OcclusionVolumeId; // 0x26c
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x270
	uint8_t VirtualTextureLodBias; // 0x280
	uint8_t VirtualTextureCullMips; // 0x281
	uint8_t VirtualTextureMinCoverage; // 0x282
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x283
	float LpvBiasMultiplier; // 0x288
	float BoundsScale; // 0x294
	TArray<AActor*> MoveIgnoreActors; // 0x2a8
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2b8
	FBodyInstance BodyInstance; // 0x2d8
	FScriptMulticastDelegate OnComponentHit; // 0x3e8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3e9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3ea
	FScriptMulticastDelegate OnComponentWake; // 0x3eb
	FScriptMulticastDelegate OnComponentSleep; // 0x3ec
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3ee
	FScriptMulticastDelegate OnEndCursorOver; // 0x3ef
	FScriptMulticastDelegate OnClicked; // 0x3f0
	FScriptMulticastDelegate OnReleased; // 0x3f1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3f2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3f3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3f4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3f5
	UPrimitiveComponent* LODParentPrimitive; // 0x410
};

struct UCullingField {
	UFieldNodeBase* Culling; // 0xb0
	UFieldNodeBase* Field; // 0xb8
	EFieldCullingOperationType Operation; // 0xc0
};

struct ADoOnceTrigger {
	FString m_EditorTriggerName; // 0x220
	TArray<AActivateTrigger*> m_pActiveTriggerArray; // 0x230
	int32_t m_TriggerIndex; // 0x240
	ETriggerType m_TriggerType; // 0x244
	bool m_bActiveTriggerCondition; // 0x268
	bool m_bActivated; // 0x269
	AMM_TriggerManager* m_pTriggerManager; // 0x270
};

struct UUdpMessagingSettings {
	bool EnableTransport; // 0x28
	bool bAutoRepair; // 0x29
	FString UnicastEndpoint; // 0x30
	FString MulticastEndpoint; // 0x40
	char MulticastTimeToLive; // 0x50
	TArray<FString> StaticEndpoints; // 0x58
	bool EnableTunnel; // 0x68
	FString TunnelUnicastEndpoint; // 0x70
	FString TunnelMulticastEndpoint; // 0x80
	TArray<FString> RemoteTunnelEndpoints; // 0x90
};

struct UCharMaterialNotify {
	TArray<FCharMaterialData> m_arrCharMaterial; // 0x30
	TArray<TWeakObjectPtr<UMaterialInstanceDynamic>> m_arMaterialInstDynamic; // 0x48
};

struct USubmixEffectFilterPreset {
	FSubmixEffectFilterSettings Settings; // 0x74
};

struct UMM_UserEvent_Benediction {
	UMirImage* m_Img_Thumb; // 0x2f0
	UMM_UserEvent_WebBanner* m_WebBanner; // 0x2f8
	UMirRichTextBlock* m_RTxt_RemainTime; // 0x300
	UMirRichTextBlock* m_RTxt_Notice; // 0x308
	UMirImage* m_Img_ItemIcon; // 0x310
	UMirTextBlock* m_Txt_NeedItemName; // 0x318
	UMirTextBlock* m_Txt_NeedItemCount; // 0x320
	UMM_Common_Btn* m_C_Btn_Select; // 0x328
	UMM_UserEvent_BenedictionSlot* m_BenedictionSlot[0x5]; // 0x330
};

struct UMM_Inventory_Transcend {
	UMM_NewInventoryTab* m_InvenTab; // 0x2e8
	UMM_NewInventory* m_Inven; // 0x2f0
	UHorizontalBox* m_pNoticeBox; // 0x2f8
	UMirTextBlock* m_pTxtNotice; // 0x300
};

struct UMM_UIShopGacha {
	UMirCanvasPanel* m_PanelGachaTitle; // 0x2f0
	UMirTextBlock* m_TxtGachaName; // 0x2f8
	UMirCanvasPanel* m_CanvasGachaBtn; // 0x300
	UMirTextBlock* m_TxtGachaFreeTime1; // 0x308
	UHorizontalBox* m_HrzMileage1; // 0x310
	UMirImage* m_ImgMileage1; // 0x318
	UMirTextBlock* m_TxtMileageCount1; // 0x320
	UMM_Common_Btn_Cost* m_BtnStartGachaCount1; // 0x328
	UHorizontalBox* m_HrzMileage11; // 0x330
	UMirImage* m_ImgMileage11; // 0x338
	UMirTextBlock* m_TxtMileageCount11; // 0x340
	UMM_Common_Btn_Cost* m_BtnStartGachaCount11; // 0x348
	UMirCheckBox* m_CheckBoxSkip; // 0x350
	UMirTextBlock* m_TxtSkip; // 0x358
	UHorizontalBox* m_PanelGachaPercent; // 0x360
	UMirTextBlock* m_TxtGachaPercentTitle; // 0x368
	UMM_UIShopGachaBonus* m_GachaBonus; // 0x370
	UMM_UIShopGachaFixedPet* m_GachaFixedPet; // 0x378
};

struct ULightMapVirtualTexture2D {
	TArray<uint8_t> TypeToLayer; // 0x100
};

struct UMaterialExpressionParticleSpeed {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_PetDeckGroup {
	UPanelWidget* m_Hrz_Main; // 0x2e0
	UMM_PetSlot* m_arDeckSlot[0x5]; // 0x2e8
	UWidgetAnimation* m_AniAppear; // 0x310
	UWidgetAnimation* m_AniDisappear; // 0x318
};

struct USubmixEffectDelayPreset {
	FSubmixEffectDelaySettings Settings; // 0x74
	FSubmixEffectDelaySettings DynamicSettings; // 0x80
};

struct UBTDecorator_ConeCheck {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector ConeDirection; // 0x98
	FBlackboardKeySelector Observed; // 0xc0
};

struct UPostProcessComponent {
	FPostProcessSettings Settings; // 0x230
	float Priority; // 0x760
	float BlendRadius; // 0x764
	float BlendWeight; // 0x768
	char bEnabled : 1; // 0x76c
	char bUnbound : 1; // 0x76c
};

struct UBTDecorator_SetTagCooldown {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
};

struct UMM_RevivalTag_Btn {
	UMirImage* m_RevivalIcon; // 0x2e0
	UMirButton* m_RevivalBtn; // 0x2e8
	UCanvasPanel* m_pCanvasPanel; // 0x2f0
	UCanvasPanel* m_pCanvasPanel_PartyMember; // 0x2f8
	UWidgetAnimation* m_pAnimAlarm; // 0x300
};

struct UBTService_RunEQS {
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0x98
};

struct URandomVector {
	float Magnitude; // 0xb0
};

struct UForceFeedbackAttenuation {
	FForceFeedbackAttenuationSettings Attenuation; // 0x28
};

struct UBorder {
	EHorizontalAlignment HorizontalAlignment; // 0x120
	EVerticalAlignment VerticalAlignment; // 0x121
	char bShowEffectWhenDisabled : 1; // 0x122
	FLinearColor ContentColorAndOpacity; // 0x124
	DelegateProperty ContentColorAndOpacityDelegate; // 0x134
	FMargin Padding; // 0x144
	FSlateBrush BackGround; // 0x158
	DelegateProperty BackgroundDelegate; // 0x1e0
	FLinearColor BrushColor; // 0x1f0
	DelegateProperty BrushColorDelegate; // 0x200
	FVector2D DesiredSizeScale; // 0x210
	bool bFlipForRightToLeftFlowDirection; // 0x218
	DelegateProperty OnMouseButtonDownEvent; // 0x21c
	DelegateProperty OnMouseButtonUpEvent; // 0x22c
	DelegateProperty OnMouseMoveEvent; // 0x23c
	DelegateProperty OnMouseDoubleClickEvent; // 0x24c
};

struct UMM_TotalQuickSlot_Popup {
	UWidgetAnimation* m_pAnimOpen; // 0x2f0
	UWidgetAnimation* m_pAnimClose; // 0x2f8
	UButton* m_pBtnAttack; // 0x300
	UImage* m_pBtnAttackSelect; // 0x308
	UImage* m_pBtnAttackDeSelect; // 0x310
	UButton* m_pBtnPotion; // 0x318
	UImage* m_pBtnPotionSelect; // 0x320
	UImage* m_pBtnPotionDeSelect; // 0x328
	UWidgetSwitcher* m_pWidgetSwitcher; // 0x330
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x338
	UMM_TotalQuickSlot_Attack* m_pHudTotal_Attack; // 0x340
	UMM_TotalQuickSlot_Potion* m_pHudTotal_Potion; // 0x348
	UMirTextBlock* m_Popup_Main_Title; // 0x350
};

struct UMeshComponent {
	TArray<UMaterialInterface*> OverrideMaterials; // 0x418
	char bEnableMaterialParameterCaching : 1; // 0x438
};

struct UAnimSet {
	char bAnimRotationOnly : 1; // 0x28
	TArray<FName> TrackBoneNames; // 0x30
	TArray<FAnimSetMeshLinkup> LinkupCache; // 0x40
	TArray<char> BoneUseAnimTranslation; // 0x50
	TArray<char> ForceUseMeshTranslation; // 0x60
	TArray<FName> UseTranslationBoneNames; // 0x70
	TArray<FName> ForceMeshTranslationBoneNames; // 0x80
	FName PreviewSkelMeshName; // 0x90
	FName BestRatioSkelMeshName; // 0x98
};

struct UMaterialExpressionFmod {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UMaterialExpressionSine {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct ACineCameraActor {
	FCameraLookatTrackingSettings LookatTrackingSettings; // 0x780
};

struct UInterpTrackInstProperty {
	UProperty* InterpProperty; // 0x28
	UObject* PropertyOuterObjectInst; // 0x30
};

struct UMM_GuildIconBGPanel {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_Hud_Chat_TalkMessage {
	UMirImage* m_Img_CharaIcon; // 0x2e0
	UMirTextBlock* m_Txt_SendTime; // 0x2e8
	UMirTextBlock* m_Txt_Prefix; // 0x2f0
	UMirTextBlock* m_Txt_Nickname; // 0x2f8
	UMirTextBlock* m_Txt_TalkMessage; // 0x300
	UMirRichTextBlock* m_RTxt_TalkMessage; // 0x308
	UMirButton* Btn_UserInteraction; // 0x310
	uint64_t m_UserUID; // 0x318
	FString m_UserNickname; // 0x320
	UMirButton* Btn_StageInfo; // 0x330
	UMirTextBlock* m_Txt_Description; // 0x338
	UMirTextBlock* m_Txt_Official; // 0x340
	UMM_Common_Btn_Translation* m_Btn_Translate; // 0x348
};

struct USmokeTestCommandlet {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UMM_Occupation_AuctionProgress {
	EOccupationAuctionProgress ProgressType; // 0x2f0
	FString TitleStringTID; // 0x2f8
	UMirTextBlock* m_pTxtTitleOn; // 0x308
	UMirTextBlock* m_pTxtTitleOff; // 0x310
	UCanvasPanel* Panel_On; // 0x318
};

struct ACameraActor {
	EAutoReceiveInput AutoActivateForPlayer; // 0x218
	UCameraComponent* CameraComponent; // 0x220
	USceneComponent* SceneComponent; // 0x228
	char bConstrainAspectRatio : 1; // 0x238
	float AspectRatio; // 0x23c
	float FOVAngle; // 0x240
	float PostProcessBlendWeight; // 0x244
	FPostProcessSettings PostProcessSettings; // 0x250
};

struct UMM_B_Vehicle {
	UMM_VehicleInfo* m_VehicleInfo; // 0x300
	UMirImage* m_Img_TabIndicator; // 0x308
	TArray<UMM_VehicleListSlot*> m_arVehicleListSlot; // 0x310
	UMM_Common_Btn* m_CB_Equip; // 0x320
	UMM_Common_Btn_Cost* m_CB_Buy; // 0x328
	UMirImage* m_Img_RenderTarget; // 0x330
	UImage* m_TargetPos; // 0x338
	UMirTextBlock* m_Txt_CombatPoint; // 0x340
	UMirButton* m_Btn_DetailInfo; // 0x348
	UMirScrollBox* m_Scr_VehicleList; // 0x350
	UMM_Common_Btn* m_CB_Achieve; // 0x358
};

struct UMM_SelectGuide {
	UMirTextBlock* m_Txt_MainMsg; // 0x2e0
	UMirTextBlock* m_Txt_SubMsg; // 0x2e8
};

struct UMM_FSMComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UAnimSharingStateInstance {
	UAnimSequence* AnimationToPlay; // 0x268
	float PermutationTimeOffset; // 0x270
	float PlayRate; // 0x274
	bool bStateBool; // 0x278
	UAnimSharingInstance* Instance; // 0x280
};

struct UHttpImageManager {
	TMap<FString, FString> m_mapProfileKeyData; // 0x28
	TMap<FString, UTexture2D*> m_mapProfileImage; // 0x78
	TMap<FString, FDownloadProfileImagData> m_mapReserveUImage; // 0xc8
	UTexture2D* m_pPhotoTexture; // 0x118
};

struct UAsyncActionLoadPrimaryAssetClass {
	FScriptMulticastDelegate Completed; // 0x78
};

struct UMirTextBlock {
	int32_t m_ResaveColorID; // 0x2b0
	EStyle_MirTextBlock m_eStyle; // 0x2b4
	bool m_bUseAdjustFontSize; // 0x2b5
	EStringTableType m_StringTableType; // 0x2b6
	int32_t m_StringTableID; // 0x2b8
};

struct UMM_PageIndicator {
	FLinearColor ColorAndOpacity; // 0x110
	DelegateProperty ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	DelegateProperty ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x1a8
	UWidgetTree* WidgetTree; // 0x1b8
	int32_t Priority; // 0x1c0
	char bSupportsKeyboardFocus : 1; // 0x1c4
	char bIsFocusable : 1; // 0x1c4
	char bStopAction : 1; // 0x1c4
	char bHasScriptImplementedTick : 1; // 0x1c4
	char bHasScriptImplementedPaint : 1; // 0x1c4
	char bCookedWidgetTree : 1; // 0x1c4
	EWidgetTickFrequency TickFrequency; // 0x1d0
	UInputComponent* InputComponent; // 0x1d8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1e0
};

struct UBTTask_ReturnToCenter {
	bool Force; // 0x70
};

struct UMovieSceneEventTriggerSection {
	FMovieSceneEventChannel EventChannel; // 0xe0
};

struct UInterpGroupCamera {
	UCameraAnim* CameraAnimInst; // 0x50
	float CompressTolerance; // 0x58
};

struct UAISenseConfig_Touch {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UMovieSceneAudioSection {
	USoundBase* sound; // 0xe0
	FFrameNumber StartFrameOffset; // 0xe8
	float StartOffset; // 0xec
	float AudioStartTime; // 0xf0
	float AudioDilationFactor; // 0xf4
	float AudioVolume; // 0xf8
	FMovieSceneFloatChannel SoundVolume; // 0x100
	FMovieSceneFloatChannel PitchMultiplier; // 0x1a0
	bool bLooping; // 0x240
	bool bSuppressSubtitles; // 0x241
	bool bOverrideAttenuation; // 0x242
	USoundAttenuation* AttenuationSettings; // 0x248
	DelegateProperty OnQueueSubtitles; // 0x250
	FScriptMulticastDelegate OnAudioFinished; // 0x260
	FScriptMulticastDelegate OnAudioPlaybackPercent; // 0x270
};

struct UMM_Popup_DominionBuffSlot {
	UMirImage* m_pImgIcon; // 0x2e0
	UMirTextBlock* m_pTxtTheme; // 0x2e8
	UMirTextBlock* m_pTxtInfo; // 0x2f0
	UMirTextBlock* m_pTxtTime; // 0x2f8
	UMirTextBlock* m_pTxtRemainCount; // 0x300
	UMirTextBlock* m_pTxtMaxCount; // 0x308
	UMM_Common_Btn_Cost* m_pBtnCost; // 0x310
	UMirTextBlock* m_pTxtNoLimit; // 0x318
	UHorizontalBox* m_pHorUseCount; // 0x320
	UMirTextBlock* m_pTxtEffect; // 0x328
	UMirTextBlock* m_pTxtUseCount; // 0x330
	UMirTextBlock* m_pTxtDuration; // 0x338
};

struct UMM_ShopNpcGoods {
	UMM_ShopNpcGoodsSlot* slot1; // 0x2e0
	UMM_ShopNpcGoodsSlot* slot2; // 0x2e8
	UMM_ShopNpcGoodsSlot* slot3; // 0x2f0
};

struct UGridPanel {
	TArray<float> ColumnFill; // 0x120
	TArray<float> RowFill; // 0x130
};

struct UMM_GetItemTypeSlot {
	int32_t m_GetType; // 0x300
	UImage* Img_TypeIcon; // 0x308
	UTextBlock* Txt_Title; // 0x310
	UButton* Btn_Slot; // 0x318
};

struct UMM_Popup_UIShopGoodsDetail {
	UMirTextBlock* m_Txt_GoodsName; // 0x2f0
	UMirTextBlock* m_Txt_Account; // 0x2f8
	UMirImage* m_Img_GoodsIcon; // 0x300
	UMirImage* m_Img_LabelIcon; // 0x308
	UMirImage* m_Img_OnePlus; // 0x310
	UMirImage* m_Img_TagIcon; // 0x318
	UMirImage* m_Img_MileageIcon; // 0x320
	UMirTextBlock* m_Txt_Mileage; // 0x328
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x330
	UMirScrollBox* m_ScrollBox; // 0x338
	UMirCanvasPanel* m_Panel_BtnShowDetail; // 0x340
	UMirButton* m_Btn_ShowDetail; // 0x348
	UMirTextBlock* m_Txt_ShowDetail; // 0x350
	UMirCanvasPanel* m_Panel_ShowDetail; // 0x358
	UMirTextBlock* m_Txt_ShowDetailTitle; // 0x360
	UMM_Common_Btn_Symbol* m_Btn_ShowDetailClose; // 0x368
	UMirTextBlock* m_Txt_ShowDetailDesc; // 0x370
};

struct UMM_DoorAnimInstance {
	bool m_bDoorOpen; // 0x268
	bool m_bImmediately; // 0x269
};

struct UMM_GameOption_Sound {
	UMM_GameOption_Slider* Option_Master; // 0x2f0
	UMM_GameOption_Slider* Option_BGM; // 0x2f8
	UMM_GameOption_Slider* Option_SFX; // 0x300
	UMM_GameOption_Slider* Option_Voice; // 0x308
	UMM_GameOption_Slider* Option_Ambient; // 0x310
};

struct UMM_Slot_Material {
	UMirImage* m_Img_GradeBgEffect; // 0x3f0
	UMirImage* m_ImgDisabled; // 0x3f8
	UMirImage* m_Imgindicator; // 0x400
	UMirImage* m_ImgTierBg; // 0x408
	UMirImage* m_Img_Attribution; // 0x410
	UMirImage* m_ImgSeleted; // 0x418
	UMirImage* m_ImgCurrSelected; // 0x420
	UMirImage* m_ImgPrevSelected; // 0x428
	UMirTextBlock* m_TxtCount; // 0x430
	FVector2D SlotSize; // 0x438
	UMirTextBlock* m_TxtGrade; // 0x440
	UMirImage* m_Img_UserLock; // 0x448
	UMirImage* m_Img_UserLock_Stack; // 0x450
	UMirTextBlock* m_TxtOtherClass; // 0x458
	UMirTextBlock* m_TxtSmeltingLevel; // 0x460
};

struct UMM_NPC_Make_Slot {
	UMirImage* Img_Select; // 0x3e8
	UMirImage* Img_Arrow; // 0x3f0
	UMirTextBlock* Txt_ItemName; // 0x3f8
};

struct UCrowdFollowingComponent {
	UCharacterMovementComponent* CharacterMovement; // 0x260
	FVector CrowdAgentMoveDirection; // 0x268
};

struct URadialIntMask {
	float Radius; // 0xb0
	FVector Position; // 0xb4
	int32_t InteriorValue; // 0xc0
	int32_t ExteriorValue; // 0xc4
	ESetMaskConditionType SetMaskCondition; // 0xc8
};

struct UStaticMeshSimulationComponent {
	bool Simulating; // 0xb8
	bool bNotifyCollisions; // 0xb9
	EObjectStateTypeEnum ObjectType; // 0xba
	float Mass; // 0xbc
	ECollisionTypeEnum CollisionType; // 0xc0
	EImplicitTypeEnum ImplicitType; // 0xc1
	int32_t MinLevelSetResolution; // 0xc4
	int32_t MaxLevelSetResolution; // 0xc8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xcc
	FVector InitialLinearVelocity; // 0xd0
	FVector InitialAngularVelocity; // 0xdc
	float DamageThreshold; // 0xe8
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xf0
	AChaosSolverActor* ChaosSolverActor; // 0xf8
	FScriptMulticastDelegate OnChaosPhysicsCollision; // 0x100
	TArray<UPrimitiveComponent*> SimulatedComponents; // 0x120
};

struct UWidgetInteractionComponent {
	FScriptMulticastDelegate OnHoveredWidgetChanged; // 0x220
	int32_t VirtualUserIndex; // 0x240
	float PointerIndex; // 0x244
	ECollisionChannel TraceChannel; // 0x248
	float InteractionDistance; // 0x24c
	EWidgetInteractionSource InteractionSource; // 0x250
	bool bEnableHitTesting; // 0x251
	bool bShowDebug; // 0x252
	FLinearColor DebugColor; // 0x254
	FHitResult CustomHitResult; // 0x2e0
	FVector2D LocalHitLocation; // 0x368
	FVector2D LastLocalHitLocation; // 0x370
	UWidgetComponent* HoveredWidgetComponent; // 0x378
	FHitResult LastHitResult; // 0x380
	bool bIsHoveredWidgetInteractable; // 0x408
	bool bIsHoveredWidgetFocusable; // 0x409
	bool bIsHoveredWidgetHitTestVisible; // 0x40a
};

struct UFirebaseGameCenterCredential {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct UMM_ClassPhase_ClassSlot {
	UMirImage* m_pImgIcon; // 0x2e0
	UMirTextBlock* m_pTxtName; // 0x2e8
	UMirImage* m_pImgSelected; // 0x2f0
	UMirImage* m_pImgDisable; // 0x2f8
	UMirImage* m_pImgKeep; // 0x300
	UMirImage* m_pImgNow; // 0x308
	UMirButton* m_pBtnSelect; // 0x310
};

struct UDragDropOperation {
	FString Tag; // 0x28
	UObject* Payload; // 0x38
	UWidget* DefaultDragVisual; // 0x40
	EDragPivot Pivot; // 0x48
	FVector2D Offset; // 0x4c
	FScriptMulticastDelegate OnDrop; // 0x58
	FScriptMulticastDelegate OnDragCancelled; // 0x68
	FScriptMulticastDelegate OnDragged; // 0x78
};

struct UMM_Hud_Chat_BlockList {
	UMirTextBlock* Txt_Title; // 0x2f0
	UMM_Common_Btn_Symbol* btn_close; // 0x2f8
	UMirListView* m_ListView_UserList; // 0x300
	TArray<UHudChatUserSlotObj*> m_arUserSlotObj; // 0x308
};

struct UMaterialExpressionCosine {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UMaterialExpressionTwoSidedSign {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UPoseableMeshComponent {
	USkeletalMesh* SkeletalMesh; // 0x440
	TWeakObjectPtr<USkinnedMeshComponent> MasterPoseComponent; // 0x448
	UPhysicsAsset* PhysicsAssetOverride; // 0x548
	int32_t ForcedLodModel; // 0x550
	int32_t MinLodModel; // 0x554
	float StreamingDistanceMultiplier; // 0x560
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x570
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x5a4
	char bOverrideMinLOD : 1; // 0x5a6
	char bUseAutomaticSwitchingCPUSkinning : 1; // 0x5a8
	char bUseBoundsFromMasterPoseComponent : 1; // 0x5ac
	char bForceWireframe : 1; // 0x5ac
	char bDisplayBones : 1; // 0x5ac
	char bDisableMorphTarget : 1; // 0x5ac
	char bHideSkin : 1; // 0x5ac
	char bPerBoneMotionBlur : 1; // 0x5ac
	char bComponentUseFixedSkelBounds : 1; // 0x5ac
	char bConsiderAllBodiesForBounds : 1; // 0x5ac
	char bSyncAttachParentLOD : 1; // 0x5ad
	char bCanHighlightSelectedSections : 1; // 0x5ad
	char bRecentlyRendered : 1; // 0x5ad
	char bCastCapsuleDirectShadow : 1; // 0x5ad
	char bCastCapsuleIndirectShadow : 1; // 0x5ad
	char bCPUSkinning : 1; // 0x5ad
	char bEnableUpdateRateOptimizations : 1; // 0x5ad
	char bDisplayDebugUpdateRateOptimizations : 1; // 0x5ad
	char bRenderStatic : 1; // 0x5ae
	char bIgnoreMasterPoseComponentLOD : 1; // 0x5ae
	char bCachedLocalBoundsUpToDate : 1; // 0x5ae
	char bForceMeshObjectUpdate : 1; // 0x5ae
	float CapsuleIndirectShadowMinVisibility; // 0x5b0
	FBoxSphereBounds CachedWorldSpaceBounds; // 0x5d8
	FMatrix CachedWorldToLocalTransform; // 0x600
};

struct UCheckedStateBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UMM_Popup_WantedRegist {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e0
	UMirImage* m_Img_CharacterClass; // 0x2e8
	UMirTextBlock* m_Txt_CharacterName; // 0x2f0
	UMM_Common_Btn_Symbol* m_Btn_CharacterInfo; // 0x2f8
	UMM_GuildIcon* m_GuildIcon; // 0x300
	UMirTextBlock* m_Txt_GuildName; // 0x308
	UMirImage* m_Img_WantedReward; // 0x310
	UMirTextBlock* m_Txt_WantedReward; // 0x318
	UMM_Common_Btn_Symbol* m_Btn_Keypad; // 0x320
	UMirRichTextBlock* m_RTxt_WantedRegist_Help_2; // 0x328
	UMirRichTextBlock* m_RTxt_WantedRegist_Help_3; // 0x330
	UMM_Common_Btn_Cost* m_Btn_WantedRegist; // 0x338
};

struct UAISenseConfig {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UBlackboardKeyType_NativeEnum {
	FString EnumName; // 0x30
	UEnum* EnumType; // 0x40
};

struct UMovieScenePrimitiveMaterialSection {
	FMovieSceneObjectPathChannel MaterialChannel; // 0xe0
};

struct UCanvas {
	float OrgX; // 0x28
	float OrgY; // 0x2c
	float ClipX; // 0x30
	float ClipY; // 0x34
	FColor DrawColor; // 0x38
	char bCenterX : 1; // 0x3c
	char bCenterY : 1; // 0x3c
	char bNoSmooth : 1; // 0x3c
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FPlane ColorModulate; // 0x50
	UTexture2D* DefaultTexture; // 0x60
	UTexture2D* GradientTexture0; // 0x68
	UReporterGraph* ReporterGraph; // 0x70
};

struct UMMDataTable {
	UScriptStruct* RowStruct; // 0x28
	char bStripFromClientBuilds : 1; // 0x80
	char bIgnoreExtraFields : 1; // 0x80
	char bIgnoreMissingFields : 1; // 0x80
	FString ImportKeyField; // 0x88
};

struct AMM_NonePlayer {
	bool IsDesiredRoator; // 0x420
	FRotator StartDesiredRoator; // 0x424
	FRotator DestDesiredRoator; // 0x430
	float TotalDesiredElapsedTime; // 0x43c
	float SumDesiredElapsedTime; // 0x440
	UParticleSystemComponent* BeamParticleSystemComponent; // 0x448
	USkeletalMeshComponent* BodyMesh; // 0x468
	UMM_PawnMovementComponent* m_MovementComponent; // 0x470
	FBasedMovementInfo BasedMovement; // 0x478
	bool m_bMultiTarget; // 0x4a9
	UMirWidgetComponent* WidgetComp; // 0x4f8
	UMirWidgetComponent* WidgetComp_2D; // 0x500
	UCurveFloat* m_HeightCurve; // 0x518
	FVector PivotHead; // 0x764
	float DetectRange; // 0x770
	float AutoBattleShortRange; // 0x774
	float AutoBattleMidRange; // 0x778
	float ShakeTime; // 0x77c
	float ShakeAngle; // 0x780
	FVector NameTagOffset; // 0x784
	float WalkSpeed; // 0x790
	float RunSpeed; // 0x794
	float CliffMoveSpeed; // 0x798
	float m_fConstFlashTime; // 0x79c
	ASpeechBalloonUI* m_pBalloonUI; // 0x7b0
	UMM_FSMComponent* FSMComp; // 0x7d8
	UMM_B_Target* m_pTarget; // 0x830
	UPointLightComponent* m_pCharPointLight; // 0x838
	UMM_CrowdControlComponent* m_pCCComponent; // 0x840
	UMM_ExecuteDecalComponent* ExecuteDecalComponent; // 0x848
	TArray<FCharMaterialData> m_arrCharMaterial; // 0x860
	float m_MoveRate; // 0x8c8
	float m_SpeedAniRate; // 0x8cc
	FCharStatistics m_CharData; // 0x980
};

struct UMM_Forge_UnsealingSlot {
	UMirImage* m_Img_Selected; // 0x300
	UPanelWidget* m_Can_NotRegistered; // 0x308
	UMirImage* m_Img_NotRegisteredSlotLocked; // 0x310
	UMirImage* m_Img_NotRegisteredSlotPlus; // 0x318
	UPanelWidget* m_Can_Registered; // 0x320
	UMM_Slot_Material* m_Slot_Item; // 0x328
	UMirTextBlock* m_Txt_ItemName; // 0x330
	UMirTextBlock* m_Txt_SupportCount; // 0x338
	UMirTextBlock* m_Txt_ItemGrade; // 0x340
	UMirProgressBar* m_Prg_Time; // 0x348
	UMirProgressBar* m_Prg_SupportTime; // 0x350
	UMirTextBlock* m_Txt_Time; // 0x358
	UMM_Common_Btn_Symbol* m_CB_UnmountItem; // 0x360
	UMM_Common_Btn* m_CB_Get; // 0x368
	UWidget* m_UnsealingCompleteEffect_01; // 0x370
	UWidget* m_UnsealingCompleteEffect_02; // 0x378
	UEffectWidgetBase* m_pEffectUnsealEmpty; // 0x380
	UHorizontalBox* m_pHrzCost; // 0x388
	UMirTextBlock* m_pTxtCost; // 0x390
};

struct UMM_Option_Ability {
	UImage* Img_Icon; // 0x2f0
	UTextBlock* Txt_OptionName; // 0x2f8
	UImage* Img_GapIcon; // 0x300
	UTextBlock* Txt_OptionNum; // 0x308
	UMirButton* Btn_Main; // 0x310
	int32_t m_StatID; // 0x328
};

struct UFieldNodeVector {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UParticleModuleMeshRotation {
	FRawDistributionVector StartRotation; // 0x30
	char bInheritParent : 1; // 0x78
};

struct UMM_Popup_NFTRelocation {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f0
	UMirTextBlock* m_Txt_ConditionCount; // 0x2f8
	UMirScrollBox* m_Scroll_ConditionList; // 0x300
	UMM_Common_Btn_Cost* m_Btn_Start; // 0x308
	UMirRichTextBlock* m_RTxt_ConditionNotice; // 0x310
};

struct USequenceSkipWidget {
	UCanvasPanel* m_CanSkip; // 0x2e8
	UButton* m_BtnSkip; // 0x2f0
};

struct UAITask_MoveTo {
	FScriptMulticastDelegate OnRequestFailed; // 0x70
	FScriptMulticastDelegate OnMoveFinished; // 0x80
	FAIMoveRequest MoveRequest; // 0x90
};

struct UBTTask_RunEQSQuery {
	UEnvQuery* QueryTemplate; // 0x98
	TArray<FEnvNamedValue> QueryParams; // 0xa0
	TArray<FAIDynamicParam> QueryConfig; // 0xb0
	EEnvQueryRunMode RunMode; // 0xc0
	FBlackboardKeySelector EQSQueryBlackboardKey; // 0xc8
	bool bUseBBKey; // 0xf0
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0xf8
};

struct UMaterialShaderQualitySettings {
	TMap<FName, UShaderPlatformQualitySettings*> ForwardSettingMap; // 0x28
};

struct UMM_Common_ToolTipBtn {
	int32_t m_iStringToolTipTID; // 0x2e0
	bool ImageVisible; // 0x2e4
	bool IsOverrideToolTipLocation; // 0x2e5
	EToolTipLocation OverrideToolTipLocation; // 0x2e6
	UMirButton* m_Btn_Main; // 0x2f8
	UMirImage* m_Img_Icon; // 0x300
};

struct AMM_DoorObject {
	int32_t m_PosID; // 0x218
	int32_t m_InitState; // 0x21c
	int32_t m_State0Time; // 0x220
	int32_t m_State1Time; // 0x224
	FVector m_BoxExtent; // 0x228
	FColor m_BoxColor; // 0x234
	UNavArea* m_pEnableNavArea; // 0x238
	UNavArea* m_pDisableNavArea; // 0x240
	bool m_bLoadPolys; // 0x268
};

struct UMirSystemSoundData {
	USoundClass* SC_Master; // 0x30
	USoundClass* SC_BGM; // 0x38
	USoundClass* SC_AMBIENT; // 0x40
	USoundClass* SC_SFX; // 0x48
	USoundClass* SC_UI; // 0x50
	USoundClass* SC_VOICE; // 0x58
	USoundClass* SC_VOICE_DIALOGUE; // 0x60
	USoundClass* SC_VOICE_Male; // 0x68
	USoundClass* SC_VOICE_Female; // 0x70
	USoundMix* Mix_MasterSound; // 0x78
	USoundConcurrency* Con_DialogueVoice; // 0x80
	USoundBase* Btn_Click_Common; // 0x88
	USoundBase* Btn_Drop_Coin; // 0x90
	USoundBase* Pc_Revival; // 0x98
	USoundBase* Pc_Meditation_Add_Energy; // 0xa0
	USoundBase* Pc_Vehicle_Off; // 0xa8
};

struct UMM_GuildMemberSlotByGrade {
	UMirImage* img_grade_icon; // 0x2e0
	UMirTextBlock* txt_grade_name; // 0x2e8
	UMirTextBlock* txt_member_count; // 0x2f0
	UMirCheckBox* cb_fold; // 0x2f8
	UVerticalBox* vb_member; // 0x300
	UMirButton* btn_fold; // 0x308
};

struct UParticleModuleVelocity_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct UWindowTitleBarAreaSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UMM_UIAction_RecommendEquip {
	int32_t STRING_GUIDE_MESSAGE_CHANGEEQUIP; // 0x428
	int32_t STRING_COMBAT_POINT_TITLE; // 0x42c
};

struct UReverbEffect {
	float Density; // 0x28
	float Diffusion; // 0x2c
	float Gain; // 0x30
	float GainHF; // 0x34
	float DecayTime; // 0x38
	float DecayHFRatio; // 0x3c
	float ReflectionsGain; // 0x40
	float ReflectionsDelay; // 0x44
	float LateGain; // 0x48
	float LateDelay; // 0x4c
	float AirAbsorptionGainHF; // 0x50
	float RoomRolloffFactor; // 0x54
};

struct USkeletalBodySetup {
	bool bSkipScaleFromAnimation; // 0x240
	TArray<FPhysicalAnimationProfile> PhysicalAnimationData; // 0x248
};

struct APhysicsConstraintActor {
	UPhysicsConstraintComponent* ConstraintComp; // 0x218
	AActor* ConstraintActor1; // 0x220
	AActor* ConstraintActor2; // 0x228
	char bDisableCollision : 1; // 0x230
};

struct UMM_DungeonListSlotBase {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct AMM_TriggerManager {
	bool m_bTest; // 0x218
	FString m_TestTableName; // 0x220
	UDataTable* m_pTriggerTable; // 0x230
};

struct UMM_Hud_SubMenuSlot {
	int32_t m_iEffectID_Loop; // 0x2e0
	UImage* m_pImgIcon; // 0x2e8
	UButton* m_pBtnSlot; // 0x2f0
	UPanelWidget* m_pGridEffect; // 0x2f8
	UMirTextBlock* m_pTextInfo; // 0x300
	UEffectWidgetBase* m_pLoopEffect; // 0x308
	int32_t m_iContentsID; // 0x310
};

struct UMM_ItemCollectProgress {
	UMM_ItemCollectProgressSlot* m_All_Progress; // 0x2e0
	UMM_ItemCollectProgressSlot* m_Event_Progress; // 0x2e8
	UPanelWidget* m_Panel_Info; // 0x2f0
	UPanelWidget* m_Panel_NoResult; // 0x2f8
	UMM_Common_Btn* m_Btn_Effects; // 0x300
	UMM_Common_Board_Notice* m_Notice_NoResult; // 0x308
	UMirImage* m_Img_BackProgress; // 0x310
	UPanelWidget* m_Panel_Title; // 0x318
	UMirTextBlock* m_Txt_Title; // 0x320
	int32_t m_HasNoResultStr; // 0x328
	int32_t m_AllObtainInfoStrID; // 0x32c
	int32_t m_EffectStrID; // 0x330
};

struct AUIBackGroundActorPreview {
	bool m_bUpdate; // 0x218
	bool m_bMoveComponent; // 0x219
	USceneCaptureComponent2D* SceneCaptureComponent2D; // 0x220
	UCanvasRenderTarget2D* m_pRenderTarget2D; // 0x228
	UMaterial* RenderTargetMaterial; // 0x230
	TMap<FString, UArrowComponent*> CachedArrows; // 0x238
	UMaterialInterface* BackgroundMaterial; // 0x288
	AActor* UIBackGroundActor; // 0x290
	UMaterialInstanceDynamic* BackgroundDynamicInst; // 0x298
	UDataTable* SceneCaptureTableReferences; // 0x2a0
	FVector DestCameraLocation; // 0x2a8
	float DestCameraPitch; // 0x2b4
	float CalculateDestCameraFOV; // 0x2b8
	float DestCameraFOV; // 0x2bc
	int32_t IsPendingUpdate; // 0x2c0
	TArray<UCanvasRenderTarget2D*> mRenderTarget2DList; // 0x370
};

struct ALandscapeGizmoActiveActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UEmoteMeshNotifyState {
	UStaticMesh* pMeshAsset; // 0x30
	FVector LocationOffset; // 0x38
	FRotator RotationOffset; // 0x44
	FVector MeshScale; // 0x50
	FName AttachBoneName; // 0x5c
	AStaticMeshActor* pStaticMeshActor; // 0x68
};

struct UMM_GuildGiftSlot {
	UMM_Slot_Material* slot_gift; // 0x2e8
	UMirTextBlock* txt_gift_name; // 0x2f0
	UMirTextBlock* txt_user_name; // 0x2f8
	UHorizontalBox* hb_time; // 0x300
	UMirTextBlock* txt_time; // 0x308
	UMirTextBlock* txt_expiration; // 0x310
	UHorizontalBox* hb_reward; // 0x318
	UMirTextBlock* txt_key; // 0x320
	UMirTextBlock* txt_mileage; // 0x328
	UMirTextBlock* txt_complete; // 0x330
	UMM_Common_Btn* btn_reward; // 0x338
	UMirCanvasPanel* cp_complete; // 0x340
};

struct UIpNetDriver {
	char LogPortUnreach : 1; // 0x708
	char AllowPlayerPortUnreach : 1; // 0x708
	uint32_t MaxPortCountToTry; // 0x70c
	uint32_t ServerDesiredSocketReceiveBufferBytes; // 0x71c
	uint32_t ServerDesiredSocketSendBufferBytes; // 0x720
	uint32_t ClientDesiredSocketReceiveBufferBytes; // 0x724
	uint32_t ClientDesiredSocketSendBufferBytes; // 0x728
	double MaxSecondsInReceive; // 0x730
	int32_t NbPacketsBetweenReceiveTimeTest; // 0x738
};

struct UMM_Popup_Friend_OrderOption {
	UWidgetAnimation* m_AniStart; // 0x2e0
	UWidgetAnimation* m_AniEnd; // 0x2e8
	UButton* m_NormalSortBtn; // 0x2f0
	UButton* m_LevelSortBtn; // 0x2f8
	UButton* m_CombatSortBtn; // 0x300
	UButton* m_GradeSortBtn; // 0x308
	UImage* m_NormalSort; // 0x310
	UImage* m_LevelSort; // 0x318
	UImage* m_CombatSort; // 0x320
	UImage* m_GradeSort; // 0x328
	UButton* m_AscendBtn; // 0x330
	UButton* m_DescendBtn; // 0x338
	UImage* m_SelectAscend; // 0x340
	UImage* m_SelectDescend; // 0x348
	UMM_Common_Btn* m_CancelBtn; // 0x350
	UMM_Common_Btn* m_OkBtn; // 0x358
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x360
};

struct UUIParticleAsset {
	TArray<FUIParticleEmitterInfo> Emitters; // 0x28
};

struct UMaterialFunctionMaterialLayer {
	FString Description; // 0x40
	TArray<UMaterialExpression*> FunctionExpressions; // 0x50
	char bExposeToLibrary : 1; // 0x60
	char bPrefixParameterNames : 1; // 0x60
	char bReentrantFlag : 1; // 0x60
};

struct UParticleModuleAttractorPointGravity {
	FVector Position; // 0x30
	float Radius; // 0x3c
	UDistributionFloat* Strength; // 0x40
	FRawDistributionFloat StrengthRaw; // 0x48
};

struct UAnimCompress_RemoveTrivialKeys {
	float MaxPosDiff; // 0x50
	float MaxAngleDiff; // 0x54
	float MaxScaleDiff; // 0x58
};

struct AFixedCameraPointer {
	int32_t CameraNumber; // 0x218
};

struct UBlackboardComponent {
	UBrainComponent* BrainComp; // 0xb0
	UBlackboardData* BlackboardAsset; // 0xb8
	TArray<UBlackboardKeyType*> KeyInstances; // 0xe0
};

struct AVolume {
	EBrushType BrushType; // 0x218
	FColor BrushColor; // 0x21c
	int32_t PolyFlags; // 0x220
	char bColored : 1; // 0x224
	char bSolidWhenSelected : 1; // 0x224
	char bPlaceableFromClassBrowser : 1; // 0x224
	char bNotForClientOrServer : 1; // 0x224
	UModel* Brush; // 0x228
	UBrushComponent* BrushComponent; // 0x230
	char bInManipulation : 1; // 0x238
	TArray<FGeomSelection> SavedSelections; // 0x240
};

struct AMediaSoundActor {
	UMediaSoundComponent* m_pMediaSoundComponent; // 0x218
};

struct UMovieSceneSkeletalAnimationSection {
	FMovieSceneSkeletalAnimationParams Params; // 0xe0
	UAnimSequence* AnimSequence; // 0x1b8
	UAnimSequenceBase* Animation; // 0x1c0
	float StartOffset; // 0x1c8
	float EndOffset; // 0x1cc
	float PlayRate; // 0x1d0
	char bReverse : 1; // 0x1d4
	FName SlotName; // 0x1d8
};

struct UMM_DungeonCommonTitle {
	UMirRichTextBlock* rtxtTime; // 0x2e0
	UMirTextBlock* txtTitle; // 0x2e8
	UMirTextBlock* txtSubTitle; // 0x2f0
	UMM_Common_ToolTipBtn* btnDetailInfo; // 0x2f8
	UMirImage* imgBoss; // 0x300
	UMirImage* imgBackGround; // 0x308
};

struct UMM_PopUp_Common_ChannelReady {
	UTextBlock* m_Txt_Title; // 0x2f0
	UMM_Slot_Material* m_MatSlot; // 0x2f8
	UMirTextBlock* m_Txt_MatName; // 0x300
	UMirTextBlock* m_Txt_Notice; // 0x308
	UMirTextBlock* m_Txt_RemainTime; // 0x310
	UMM_Common_Btn* m_CB_First; // 0x318
	UMM_Common_Btn* m_CB_Second; // 0x320
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x328
	UMirButton* m_Btn_Bg; // 0x330
	UMirProgressBar* m_pProgressTimer; // 0x338
};

struct UNavMovementComponent {
	FNavAgentProperties NavAgentProps; // 0xf0
	float FixedPathBrakingDistance; // 0x120
	char bUpdateNavAgentWithOwnersCollision : 1; // 0x124
	char bUseAccelerationForPaths : 1; // 0x124
	char bUseFixedBrakingDistanceForPaths : 1; // 0x124
	FMovementProperties MovementState; // 0x125
	UObject* PathFollowingComp; // 0x128
};

struct UMovieSceneCinematicShotTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UMovieSceneMediaTrack {
	TArray<UMovieSceneSection*> MediaSections; // 0x58
};

struct UMM_StrongPoint_Result {
	UWidgetAnimation* Ani_ResultStart; // 0x2e8
	UMirCanvasPanel* Can_MVPPanel; // 0x2f0
	UMirTextBlock* Txt_MVPUserName; // 0x2f8
	UMirTextBlock* Txt_ResultMessage; // 0x300
	UHorizontalBox* Horizontal_Reward; // 0x308
	UMM_Common_Btn* Btn_Ok; // 0x310
};

struct UParticleModuleLight_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct UInterpTrackInstAnimControl {
	float LastUpdatePosition; // 0x28
};

struct AMyPortalTrigger {
	bool m_bMiniMapHide; // 0x2b0
	FVector m_ExtentBox; // 0x2b4
	float m_AppearLength; // 0x2c0
	FVector m_ArrivalLocation; // 0x2c4
	int32_t m_PortalTriggerID; // 0x2d0
	int32_t m_CurrentStageID; // 0x2d4
	FString m_NextStageName; // 0x2d8
	bool m_bHidePortal; // 0x2e9
	FString m_Memo; // 0x2f0
	bool m_bEnablePortal; // 0x300
};

struct UMM_HudLeftTabMenu {
	UMM_HudLeftTabMenuSlot* m_Menu_Info; // 0x2f0
	UMM_HudLeftTabMenuSlot* m_Menu_List; // 0x2f8
	UMM_HudPartyList* m_pPartyList; // 0x300
	UMirTextBlock* m_Txt_AlarmCount; // 0x308
	UMirButton* m_Btn_FoldPartyList; // 0x310
	UWidgetAnimation* m_Ani_FoldPartyList; // 0x318
};

struct USourceEffectBitCrusherPreset {
	FSourceEffectBitCrusherSettings Settings; // 0x70
};

struct USoundNodeAttenuation {
	USoundAttenuation* AttenuationSettings; // 0x40
	FSoundAttenuationSettings AttenuationOverrides; // 0x48
	char bOverrideAttenuation : 1; // 0x338
};

struct UContentWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UMM_ClosedTraining_CollectListSlot {
	UMirTextBlock* m_Txt_Name; // 0x2e0
	UMirRichTextBlock* m_RTxt_TotalCollect; // 0x2e8
	UMirImage* m_Img_Selected; // 0x2f0
	UVerticalBox* m_VerticalBox; // 0x2f8
};

struct APlayerState {
	float Score; // 0x218
	FString PlayerName; // 0x220
	int32_t PlayerId; // 0x240
	char Ping; // 0x244
	char bShouldUpdateReplicatedPing : 1; // 0x246
	char bIsSpectator : 1; // 0x246
	char bOnlySpectator : 1; // 0x246
	char bIsABot : 1; // 0x246
	char bIsInactive : 1; // 0x246
	char bFromPreviousLevel : 1; // 0x246
	int32_t StartTime; // 0x248
	ULocalMessage* EngineMessageClass; // 0x250
	FString SavedNetworkAddress; // 0x260
	FUniqueNetIdRepl UniqueId; // 0x270
	APawn* PawnPrivate; // 0x2a0
	FString PlayerNamePrivate; // 0x320
};

struct UMM_NewInventory_Auction {
	UMM_NewInventoryTab* m_pInvenTab; // 0x2e8
	UMM_NewInventory* m_pInven; // 0x2f0
};

struct UMM_GuildWantedSlot {
	UMirImage* img_rank; // 0x2e0
	UMirTextBlock* txt_rank; // 0x2e8
	UMM_ProfileSlot* img_profile; // 0x2f0
	UMirTextBlock* txt_nickname; // 0x2f8
	UMirTextBlock* txt_level; // 0x300
	UMirTextBlock* txt_combat_power; // 0x308
	UMirTextBlock* txt_killed_count; // 0x310
	UMirTextBlock* txt_time; // 0x318
	UMirTextBlock* txt_wanted_grade; // 0x320
	UMirButton* m_pBtnClick; // 0x328
	UMirTextBlock* txt_wanted_location; // 0x330
};

struct UMM_Popup_AccountInfo {
	UMM_Common_Btn* m_Btn_Confirm; // 0x2e0
	UMM_Common_Btn* m_Btn_Cancel; // 0x2e8
	UMirTextBlock* m_Txt_ServerName; // 0x2f0
	UMirImage* m_Img_CharacterClass; // 0x2f8
	UMirTextBlock* m_Txt_CharacterName; // 0x300
	UMirTextBlock* m_Txt_CharacterLevel; // 0x308
};

struct UParticleModuleBeamModifier {
	BeamModifierType ModifierType; // 0x30
	FBeamModifierOptions PositionOptions; // 0x34
	FRawDistributionVector Position; // 0x38
	FBeamModifierOptions TangentOptions; // 0x80
	FRawDistributionVector Tangent; // 0x88
	char bAbsoluteTangent : 1; // 0xd0
	FBeamModifierOptions StrengthOptions; // 0xd4
	FRawDistributionFloat Strength; // 0xd8
};

struct UMM_HudMapInfo {
	int32_t m_iStringID_Safe; // 0x2e0
	int32_t m_iStringID_PK; // 0x2e4
	UTextBlock* m_TxtMapName; // 0x2e8
	UTextBlock* m_TxtChannel; // 0x2f0
	UButton* m_BtnMapDetail; // 0x2f8
	UMirButton* m_Btn_Channel; // 0x300
	UMM_Common_Btn_Symbol* m_Btn_PKInfo; // 0x308
	UMirCanvasPanel* m_PKInfoPanel; // 0x310
	UMirImage* m_Img_SafetyArea; // 0x318
	UMirRichTextBlock* m_Txt_SafetyAreaInfo; // 0x320
	UMirImage* m_Img_NormalArea; // 0x328
	UMirRichTextBlock* m_Txt_NormalAreaInfo; // 0x330
	UMirImage* m_Img_SpecialArea; // 0x338
	UMirRichTextBlock* m_Txt_SpecialAreaInfo; // 0x340
	UMirImage* m_Img_DangerArea; // 0x348
	UMirRichTextBlock* m_Txt_DangerAreaInfo; // 0x350
	UMirImage* m_Img_Fight; // 0x358
	UMirRichTextBlock* m_Txt_FightInfo; // 0x360
	UMirImage* m_Img_Safe; // 0x368
	UMirImage* m_Img_PVP; // 0x370
	UMirImage* m_Img_War; // 0x378
	UMirRichTextBlock* m_Txt_WarInfo; // 0x380
	UMirImage* m_Img_Map_Basic_1; // 0x388
	UMirImage* m_Img_Map_Basic_2; // 0x390
};

struct UMM_GameInstance_BP_C {
	AMM_PlayerController* m_pPlayerController; // 0x198
	FString m_strServerInfoJson; // 0x1a0
	bool m_bUseWemadeServiceLogin; // 0x1b0
	bool m_bPatched; // 0x1b1
	bool m_bLoadedShaderLibraryAndPSO; // 0x1b2
	UMM_CustomizingManager* m_pCustomizingManager; // 0x1b8
	UMM_PoolManager* m_pPoolManager; // 0x1c0
	UMM_WidgetManager* m_pWidgetManager; // 0x1c8
	UMM_TemplateManager* m_pTemplateManager; // 0x1d0
	UMM_CinematicManager* m_pCinematicManager; // 0x1d8
	UMM_WarpMoveManager* WarpMoveManager; // 0x1e0
	UMM_LoginManager* m_pLoginManager; // 0x1e8
	UMM_IAPManager* m_pIAPManager; // 0x1f0
	UMM_AdManager* m_pAdManager; // 0x1f8
	AMM_SoundManagerActor* m_pSoundManager; // 0x200
	UMM_EffectManager* EffectManager; // 0x208
	UMM_UIActionManager* m_pUIActionManager; // 0x210
	UHttpImageManager* m_pHttpImageManager; // 0x218
	UMM_ScheduleManager* m_pScheduleManager; // 0x220
	FCharStatistics m_MainPCData; // 0x420
	UGameDefineDataAsset* m_pGameDefineData; // 0x4b8
	UMirColorData* m_pMirColorData; // 0x4c0
	UFootStepSurfaceData* m_pFootStepSurfaceData; // 0x4c8
	UObject* m_pDefaultNavigationFilterClass; // 0x4d0
	UObject* m_pIgnoreCostNavigationFilterClass; // 0x4d8
	UObject* m_pLinkProxyNavigationFilterClass; // 0x4e0
	TMap<EPrerequisiteLoadState, bool> m_mapPrerequisiteLoadState; // 0x4e8
	UDataTable* m_RichTextStyleTable; // 0x538
	UAccountLocalSave* m_pAccountLocalSave; // 0x540
	UCharLocalSave* m_pCharLocalSave; // 0x548
	UInAppPurchaseData* m_pInAppPurchaseLocalSave; // 0x550
	TWeakObjectPtr<AMM_HUDBase> m_pMirHudBase; // 0x558
	bool m_bRideState; // 0x560
	bool m_bAvailableRide; // 0x561
	bool m_bNeedCheckAndroidPermission; // 0x562
	AMM_GameModeBase* m_pMMGameModeBase; // 0x568
	int32_t m_iStageID; // 0x578
	int32_t m_iPreStageID; // 0x57c
	bool m_bPvPEnable; // 0x590
	bool m_bLevelStreaming; // 0x591
	bool m_bMapLoading; // 0x592
	bool m_bException_LogoToCharSelect; // 0x593
	TArray<UObject*> m_arLoadedLevel; // 0x598
	ULevelStreamingDynamic* m_pLevelStreamingKismet; // 0x5a8
	ULevelStreamingDynamic* m_pTriggerStreamingKismet; // 0x5b0
	ULevelStreamingDynamic* m_pLevelStreamingKismet_Logo; // 0x5b8
	AMM_MainPC* pMainPC; // 0x5f0
	TArray<ASkeletalMeshActor*> m_PSOCacheSkeletalMeshActors; // 0x650
	TArray<AStaticMeshActor*> m_PSOCacheStaticMeshActors; // 0x660
	TArray<UParticleSystemComponent*> m_PSOCacheParticleComponents; // 0x670
	UWNFreeStopHingeModule* FreeStopHingeModule; // 0x690
	UMM_UnCheater* m_UnCheater; // 0x698
	UMM_MultiClientSupporter* m_MultiClientSupporter; // 0x6a0
};

struct UGameViewportClient {
	UConsole* ViewportConsole; // 0x40
	TArray<FDebugDisplayProperty> DebugProperties; // 0x48
	UWorld* World; // 0x78
	UGameInstance* GameInstance; // 0x80
};

struct UPhysicsConstraintTemplate {
	FConstraintInstance DefaultInstance; // 0x28
	TArray<FPhysicsConstraintProfileHandle> ProfileHandles; // 0x1e0
	FConstraintProfileProperties DefaultProfile; // 0x1f0
};

struct USpringArmComponent {
	float TargetArmLength; // 0x220
	FVector SocketOffset; // 0x224
	FVector TargetOffset; // 0x230
	float ProbeSize; // 0x23c
	ECollisionChannel ProbeChannel; // 0x240
	char bDoCollisionTest : 1; // 0x244
	char bUsePawnControlRotation : 1; // 0x244
	char bInheritPitch : 1; // 0x244
	char bInheritYaw : 1; // 0x244
	char bInheritRoll : 1; // 0x244
	char bEnableCameraLag : 1; // 0x244
	char bEnableCameraRotationLag : 1; // 0x244
	char bUseCameraLagSubstepping : 1; // 0x244
	char bDrawDebugLagMarkers : 1; // 0x245
	float CameraLagSpeed; // 0x248
	float CameraRotationLagSpeed; // 0x24c
	float CameraLagMaxTimeStep; // 0x250
	float CameraLagMaxDistance; // 0x254
};

struct UMM_ItemSealing_Slot {
	UMirImage* m_ImgDisabled; // 0x3f8
	UMirImage* m_ImgEquiped; // 0x400
	UMirImage* m_ImgHave; // 0x408
	UMirImage* m_Imgindicator; // 0x410
	UImage* Img_Select; // 0x418
	UMirImage* m_ImgTierBg; // 0x420
	UMirImage* m_ImgDummy; // 0x428
	UMirCanvasPanel* m_PanelEvent; // 0x430
	UMirTextBlock* m_TxtCount; // 0x438
	UMirImage* m_Img_Attribution; // 0x440
	int32_t ItemMakeId; // 0x448
	int32_t STR_STACKCOUNT; // 0x44c
};

struct USoundCueTemplate {
	char bPrimeOnLoad : 1; // 0x160
	USoundNode* FirstNode; // 0x168
	float VolumeMultiplier; // 0x170
	float PitchMultiplier; // 0x174
	FSoundAttenuationSettings AttenuationOverrides; // 0x178
	float SubtitlePriority; // 0x468
	char bOverrideAttenuation : 1; // 0x470
	char bExcludeFromRandomNodeBranchCulling : 1; // 0x470
	char bHasPlayWhenSilent : 1; // 0x470
};

struct UMM_B_Auction {
	TMap<EAuctionTabType, UMM_Auction_Tab_Base*> m_mapAuctionTab; // 0x2f0
	UMirButton* m_pBtnReturn; // 0x340
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x348
	UMM_CommonHorizontalTabSet* m_pTabAuction; // 0x350
	UWidgetSwitcher* m_pSwitchAuction; // 0x358
	TArray<UMM_Auction_Tab_Base*> m_arrAuctionTabList; // 0x360
	UMM_Auction_Guild* m_pGuildInfo; // 0x370
};

struct UParticleModuleVectorFieldRotationRate {
	FVector RotationRate; // 0x30
};

struct UParticleModuleLifetime_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct AMM_CharSelState {
	ACameraActor* m_pCamera; // 0x278
	FVector m_DisplayLocation; // 0x2d4
	FRotator m_DisplayRotation; // 0x2e0
	FVector m_CustomizingLocation; // 0x2ec
	FRotator m_CustomizingRotation; // 0x2f8
	UPlanarReflectionComponent* m_pPlanarReflectionComp; // 0x308
	AActor* m_CurrentActor; // 0x360
	TArray<ACameraActor*> m_ZoomCameraArray; // 0x368
};

struct UParticleSpriteEmitter {
	FName EmitterName; // 0x28
	int32_t SubUVDataOffset; // 0x30
	EEmitterRenderMode EmitterRenderMode; // 0x34
	EParticleSignificanceLevel SignificanceLevel; // 0x35
	char bUseLegacySpawningBehavior : 1; // 0x37
	char ConvertedModules : 1; // 0x37
	char bIsSoloing : 1; // 0x37
	char bCookedOut : 1; // 0x37
	char bDisabledLODsKeepEmitterAlive : 1; // 0x37
	char bDisableWhenInsignficant : 1; // 0x38
	TArray<UParticleLODLevel*> LODLevels; // 0x40
	int32_t PeakActiveParticles; // 0x50
	int32_t InitialAllocationCount; // 0x54
	float QualityLevelSpawnRateScale; // 0x58
	uint32_t DetailModeBitmask; // 0x5c
};

struct UMaterialExpressionTextureSampleParameterVolume {
	FName ParameterName; // 0xd0
	FGuid ExpressionGUID; // 0xd8
	FName Group; // 0xe8
};

struct UMaterialExpressionSkyAtmosphereLightDirection {
	int32_t LightIndex; // 0x40
};

struct UMM_Popup_Party_Info_Slot {
	UMirCanvasPanel* m_Canvas_Member; // 0x2e8
	UMirImage* m_Img_Class; // 0x2f0
	UMirImage* m_Img_Icn_Leader; // 0x2f8
	UVerticalBox* m_Vrt_All; // 0x300
	UMirTextBlock* m_Txt_Level; // 0x308
	UMirTextBlock* m_Txt_Nickname; // 0x310
	UMirTextBlock* m_Txt_CombatPoint; // 0x318
	UPanelWidget* m_Grid_Leader; // 0x320
	UMirCanvasPanel* m_Canvas_Lock; // 0x328
	UMirTextBlock* m_Txt_AbleClass; // 0x330
	UMirImage* m_Img_Lock; // 0x338
	UMirImage* m_Img_Bg_Lock; // 0x340
	UMirTextBlock* m_Txt_Leader; // 0x348
};

struct UInterpTrackInstFloatMaterialParam {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<float> ResetFloats; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackFloatMaterialParam* InstancedTrack; // 0x58
};

struct UMovieSceneMaterialTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UMM_Common_Board_Notice {
	EStringTableType m_StringTableType; // 0x2e0
	int32_t m_StringTableID; // 0x2e4
	FSlateFontInfo m_Font; // 0x2e8
	UMirTextBlock* m_Txt_Main; // 0x338
};

struct UOperatingButtonWidget {
	UWidgetAnimation* m_pAnim_Scale; // 0x2e0
	UCanvasPanel* Img_Canvas; // 0x2e8
	UImage* Img_Hand; // 0x2f0
	UImage* Img_BG; // 0x2f8
	UButton* Btn_Area; // 0x300
	UCanvasPanel* TouchIconPanel; // 0x308
	UMirCanvasPanel* GatheringParogressBarPanel; // 0x310
	UMirTextBlock* Text_ObjectCount; // 0x318
	UMirProgressBar* GatherProgressBar; // 0x320
	UMirTextBlock* Text_GatherRemainTime; // 0x328
	UMirImage* ImgBarEffect; // 0x330
	UMirTextBlock* m_pTxtTargetName; // 0x338
	AMM_ObjectBase* OperationObject; // 0x340
};

struct ULevelSequenceBurnInOptions {
	bool bUseBurnIn; // 0x28
	FSoftClassPath BurnInClass; // 0x30
	ULevelSequenceBurnInInitSettings* Settings; // 0x48
};

struct UMM_Guild_Dev {
	UWidgetAnimation* m_Ani_GuildDevStart; // 0x2f0
	UMM_CommonVerticalTabSet* m_VerticalTabSet; // 0x2f8
	UMirScrollBox* m_ScrollBox; // 0x300
	TArray<UMM_Guild_DevList*> m_arGuildDevList; // 0x308
	UMM_Guild_Dev_DrawLines* m_GuildDrawLines; // 0x318
	UMirRichTextBlock* m_Txt_TimeTicket; // 0x320
	UMirImage* m_Img_Indicator; // 0x328
	UPanelWidget* m_Panel_Dev; // 0x330
	UPanelWidget* m_Panel_SkillUse; // 0x338
	TArray<UMM_Guild_Dev_Slot_SkillUse*> m_arGuildSkillUseList; // 0x340
};

struct UWidgetAnimationDelegateBinding {
	TArray<FBlueprintWidgetAnimationDelegateBinding> WidgetAnimationDelegateBindings; // 0x28
};

struct UHierarchicalInstancedStaticMeshComponent {
	TArray<int32_t> SortedInstances; // 0x548
	int32_t NumBuiltInstances; // 0x558
	FBox BuiltInstanceBounds; // 0x560
	FBox UnbuiltInstanceBounds; // 0x57c
	TArray<FBox> UnbuiltInstanceBoundsList; // 0x598
	char bEnableDensityScaling : 1; // 0x5a8
	int32_t OcclusionLayerNumNodes; // 0x5b0
	FBoxSphereBounds CacheMeshExtendedBounds; // 0x5b4
	bool bDisableCollision; // 0x5d4
	int32_t InstanceCountToRender; // 0x5d8
};

struct AMM_PreviewModeBase {
	UMaterialParameterCollection* m_pBackgroundParamCollection; // 0x330
	AMM_Monster* m_pFriendMonster; // 0x338
	AMM_CharacterPawnBase* m_pSelectTarget; // 0x340
	AMM_CharacterPawnBase* m_pLockOnTarget; // 0x348
	bool EndLevelTravel; // 0x350
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x400
	AMM_SituationDirectiveEffect* SituationDirectiveActor; // 0x408
	TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>> MapQuestArrivalDisplayActor; // 0x410
	AMM_HQPlayerReferenceActor* m_pHQPlayer; // 0x460
	AMM_PortraitCaptureActor* m_pPortraitCaptureActor; // 0x468
	UCanvasRenderTarget2D* m_pPlayerPortraitRenderTarget; // 0x470
	AContentsLightManager* m_pContentsLightManager; // 0x478
	FString MyEditorCulture; // 0x490
};

struct UMM_Popup_Quest_Accept {
	int32_t m_RequestAcceptToStr; // 0x2e0
	int32_t m_RequestGiveupToStr; // 0x2e4
	int32_t m_DoYouAcceptRequestToStr; // 0x2e8
	int32_t m_DoYouGiveupRequestToStr; // 0x2ec
	int32_t m_DoYouAcceptNewRequestToStr; // 0x2f0
	int32_t m_ChangeRequestToStr; // 0x2f4
	int32_t m_OnGoingToStr; // 0x2f8
	int32_t m_NewToStr; // 0x2fc
	int32_t m_DoYouWantChangeToStr; // 0x300
	int32_t m_IfRequestChangeToStr; // 0x304
	UMirTextBlock* m_PopupTitle; // 0x308
	UMirTextBlock* m_AcceptMsg; // 0x310
	UMirTextBlock* m_SubAcceptMsg; // 0x318
	UMirTextBlock* m_Txt_Ongoing; // 0x320
	UMirTextBlock* m_Txt_New; // 0x328
	UMM_Slot_Quest_Info* m_Slot_Ongoing; // 0x330
	UMM_Slot_Quest_Info* m_Slot_New; // 0x338
	UMM_Common_Btn_Symbol* m_CloseBtn; // 0x340
	UMM_Common_Btn* m_ObtainBtn; // 0x348
};

struct UBTTask_StopBehavior {
	EBTNodeResult ReturnResult; // 0x70
	bool IsCounterAttack; // 0x71
};

struct AMM_SituationDirectiveEffect {
	TMap<EDirectiveType, int32_t> EffectId; // 0x220
	EDirectiveType CurrentType; // 0x270
};

struct AVehicleRenderRoom {
	USceneComponent* m_pSceneComponent; // 0x220
	USkeletalMeshComponent* m_pMesh; // 0x228
	UMM_VehicleAnimInstance* m_pVehicleAnim; // 0x230
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x238
};

struct UMM_Popup_GuildAuthoritySlot {
	UMirTextBlock* txt_authority; // 0x2e0
	UMirImage* img_member; // 0x2e8
	UMirImage* img_inventory; // 0x2f0
	UMirImage* img_diplomacy; // 0x2f8
	UMirImage* img_war; // 0x300
	UMirImage* img_leader; // 0x308
};

struct UMM_ItemResult_AbilityInfo {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMaterialExpressionSetMaterialAttributes {
	TArray<FExpressionInput> Inputs; // 0x40
	TArray<FGuid> AttributeSetTypes; // 0x50
};

struct UAnimClassData {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x30
	USkeleton* TargetSkeleton; // 0x40
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x48
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x58
	TArray<FAnimBlueprintFunction> AnimBlueprintFunctions; // 0xa8
	TArray<UStructProperty*> AnimNodeProperties; // 0xb8
	TArray<UStructProperty*> LinkedAnimGraphNodeProperties; // 0xc8
	TArray<UStructProperty*> LinkedAnimLayerNodeProperties; // 0xd8
	TArray<UStructProperty*> PreUpdateNodeProperties; // 0xe8
	TArray<UStructProperty*> DynamicResetNodeProperties; // 0xf8
	TArray<UStructProperty*> StateMachineNodeProperties; // 0x108
	TArray<UStructProperty*> InitializationNodeProperties; // 0x118
	TMap<FName, FGraphAssetPlayerInformation> GraphNameAssetPlayers; // 0x128
	TArray<FName> SyncGroupNames; // 0x178
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x188
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x198
};

struct UMM_Popup_AccountGuest {
	UMM_Common_Btn* m_Btn_AccountSelect; // 0x2e0
	UMM_Common_Btn* m_Btn_Start; // 0x2e8
	UMirRichTextBlock* m_RTxt_Description; // 0x2f0
};

struct UBTTask_GameplayTaskBase {
	char bWaitForGameplayTask : 1; // 0x70
};

struct UMM_Common_Dialog_Btn {
	int32_t m_QuestSoundID; // 0x2e0
	int32_t m_RequestSoundID; // 0x2e4
	int32_t m_AcceptSoundID; // 0x2e8
	int32_t m_HintSoundID; // 0x2ec
	FVector2D m_Size; // 0x2f0
	int32_t m_MainQuestDialogSound; // 0x2f8
	int32_t m_MissionDialogSound; // 0x2fc
	int32_t m_RequestDialogSound; // 0x300
	USpacer* m_Spc_Size; // 0x308
	UMirImage* m_Img_Back; // 0x318
	UMirButton* m_Btn_Main; // 0x320
	UWidgetAnimation* m_AniClick; // 0x338
};

struct UMM_B_Guild_Creation {
	int32_t m_iCreateCost; // 0x2f0
	UWidgetAnimation* m_AniStart; // 0x2f8
	UWidgetAnimation* m_AniEnd; // 0x300
	UTextBlock* m_Txt_Notice; // 0x318
	UImage* m_Img_Frame; // 0x320
	UImage* m_Img_Symbol; // 0x328
	UEditableText* m_Edit_GuildName; // 0x330
	UScrollBox* m_Scr_SymbolList; // 0x338
	UScrollBox* m_Scr_FrameList; // 0x340
	UMM_Common_Btn_Symbol* m_CB_SymbolList_Left; // 0x348
	UMM_Common_Btn_Symbol* m_CB_SymbolList_Right; // 0x350
	UMM_Common_Btn_Symbol* m_CB_FrameList_Left; // 0x358
	UMM_Common_Btn_Symbol* m_CB_FrameList_Right; // 0x360
	UMM_Common_Btn_Cost* m_CB_Create; // 0x368
};

struct AAtmosphericFog {
	UAtmosphericFogComponent* AtmosphericFogComponent; // 0x218
};

struct UMaterialExpressionDistanceToNearestSurface {
	FExpressionInput Position; // 0x40
};

struct UPreviewMeshCollection {
	USkeleton* Skeleton; // 0x38
	TArray<FPreviewMeshCollectionEntry> SkeletalMeshes; // 0x40
};

struct UMM_HudBtnSetJump {
	UWidgetAnimation* m_AniStart; // 0x2e0
	UWidgetAnimation* m_AniEnd; // 0x2e8
	UMM_HudBtnAction* m_pBtnJump; // 0x2f0
	UMM_HudBtnAction* m_pBtnDash; // 0x2f8
	UMM_HudBtnAction* m_pBtnWallJump; // 0x300
	UMM_HudBtnAction* m_pBtnLand; // 0x308
};

struct UEnvQueryGenerator_BlueprintBase {
	FText GeneratorsActionDescription; // 0x50
	UEnvQueryContext* Context; // 0x68
	UEnvQueryItemType* GeneratedItemType; // 0x70
};

struct UMM_New_Force_Page {
	UMirImage* m_C_Img_Icon; // 0x2f8
	UMirTextBlock* m_C_Txt_Info; // 0x300
	UPanelWidget* m_Panel_Learn; // 0x308
	UMM_Slot_Material_Item* m_arOpenMat[0x3]; // 0x310
	UMM_Common_Btn* m_C_CB_Learn; // 0x328
	UPanelWidget* m_Panel_Effect; // 0x330
	UPanelWidget* m_Panel_Failed; // 0x338
	UMM_Slot_Material_Item* m_C_Slot_CureMat; // 0x340
	UMM_Common_Btn* m_C_CB_Cure; // 0x348
	UMirTextBlock* m_C_Txt_FailedInfo; // 0x350
	UMirTextBlock* m_C_Txt_FailedTime; // 0x358
};

struct UDistributionFloatConstantCurve {
	FInterpCurveFloat ConstantCurve; // 0x38
};

struct UEnvQueryGenerator_Composite {
	TArray<UEnvQueryGenerator*> Generators; // 0x50
	char bAllowDifferentItemTypes : 1; // 0x60
	char bHasMatchingItemType : 1; // 0x60
	UEnvQueryItemType* ForcedItemType; // 0x68
};

struct USharePhotoContent {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UPawnAction_Sequence {
	TArray<UPawnAction*> ActionSequence; // 0x98
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
	UPawnAction* RecentActionCopy; // 0xb0
};

struct UPlaneReflectionCaptureComponent {
	float InfluenceRadiusScale; // 0x298
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x2a0
	UBoxComponent* PreviewCaptureBox; // 0x2a8
};

struct UTreeView {
	DelegateProperty BP_OnGetItemChildren; // 0x868
	FScriptMulticastDelegate BP_OnItemExpansionChanged; // 0x878
};

struct UMM_UIAction_ClassSelect {
	TMap<int32_t, AMM_CharacterCustomizingActor*> m_mapCustomizingActor; // 0x68
};

struct UMM_PopUp_ItemInfo_Simple {
	UMM_Common_Btn_Symbol* m_CloseBtn; // 0x2f0
	UGridPanel* m_Grid_Item_Info; // 0x2f8
	UGridPanel* m_Grid_Btn; // 0x300
	UMirCanvasPanel* m_LineGrid; // 0x308
	UMM_Common_Btn* m_GetWayBtn; // 0x310
	UMM_Common_Btn_Cost* m_CostBtn; // 0x318
	UMirScrollBox* m_ScrollBox; // 0x320
	UMirTextBlock* m_NameTxt; // 0x328
	UMirTextBlock* m_SmeltingLv; // 0x330
	UPanelWidget* m_GridTier; // 0x338
	UPanelWidget* m_GridGrade; // 0x340
	UMirImage* m_TierImage; // 0x348
	UMirTextBlock* m_Grade; // 0x350
	UMM_Slot_Inventory* m_InventorySlot; // 0x358
	UMM_PopUp_ItemInfo_Ability* m_Combat_Ability; // 0x360
	UPanelWidget* m_Grid_Ability; // 0x368
	UImage* m_Img_Line; // 0x370
	TArray<UMM_PopUp_ItemInfo_Ability*> m_Ability; // 0x378
	UTextBlock* m_CombatTxt; // 0x388
	UTextBlock* m_ItemName; // 0x390
	UPanelWidget* m_GridEquip; // 0x398
	UPanelWidget* m_Grid_ItemName; // 0x3a0
	UTextBlock* m_EquipLvTxt; // 0x3a8
	UTextBlock* m_EquipLv; // 0x3b0
	UTextBlock* m_ItemDesc; // 0x3b8
	UPanelWidget* m_Grid_UnTrade; // 0x3c0
	UImage* m_Img_Line_TermTime; // 0x3c8
	UPanelWidget* m_Grid_TermTime; // 0x3d0
	UMirTextBlock* m_Txt_TermTime; // 0x3d8
	UOverlay* m_Grid_Trade; // 0x3e0
	UMirButton* m_Btn_BGMain; // 0x3e8
	USpacer* m_Spc_ContentsSpace; // 0x3f0
	USpacer* m_Spc_Btn; // 0x3f8
	int32_t m_SelectItemTID; // 0x400
	ECostType m_CostType; // 0x404
	int32_t m_EquipLvToStr; // 0x408
	int32_t m_UseLvToStr; // 0x40c
};

struct UMovieSceneMaterialParameterCollectionTrack {
	UMaterialParameterCollection* MPC; // 0x68
};

struct UImageSequenceProtocol_JPG {
	int32_t CompressionQuality; // 0xd8
};

struct UToFloatField {
	UFieldNodeInt* IntField; // 0xb0
};

struct UMM_GuildGiftResult {
	UMirImage* img_high_item_icon; // 0x2e0
	UMirImage* img_high_item_bg; // 0x2e8
	UMirImage* img_high_item_tier_bg; // 0x2f0
	UMirTextBlock* txt_high_item_count; // 0x2f8
	UMirTextBlock* txt_high_item_name; // 0x300
	UMirTextBlock* txt_high_user_name; // 0x308
	UMirImage* img_normal_item_icon; // 0x310
	UMirImage* img_normal_item_bg; // 0x318
	UMirImage* img_normal_item_tier_bg; // 0x320
	UMirTextBlock* txt_normal_item_count; // 0x328
	UMirTextBlock* txt_normal_item_name; // 0x330
	UMirTextBlock* txt_normal_user_name; // 0x338
	UWidgetAnimation* ani_high_grade; // 0x340
	UWidgetAnimation* ani_normal_grade; // 0x348
	UWidgetAnimation* ani_start; // 0x350
	UWidgetAnimation* ani_end; // 0x358
	UMirButton* btn_close; // 0x360
	UMirTextBlock* txt_close; // 0x368
	UMirProgressBar* pb_count; // 0x370
	UMirTextBlock* txt_count; // 0x378
};

struct UBoxReflectionCaptureComponent {
	float BoxTransitionDistance; // 0x298
	UBoxComponent* PreviewInfluenceBox; // 0x2a0
	UBoxComponent* PreviewCaptureBox; // 0x2a8
};

struct ASphereReflectionCapture {
	UDrawSphereComponent* DrawCaptureRadius; // 0x220
};

struct UNavFilter_AIControllerDefault {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct ULandscapeInfo {
	ALandscape* LandscapeActor; // 0x28
	FGuid LandscapeGuid; // 0x44
	int32_t ComponentSizeQuads; // 0x54
	int32_t SubsectionSizeQuads; // 0x58
	int32_t ComponentNumSubsections; // 0x5c
	FVector DrawScale; // 0x60
	TArray<ALandscapeStreamingProxy*> Proxies; // 0x110
};

struct APointLight {
	UPointLightComponent* PointLightComponent; // 0x228
};

struct UScrollBoxWidgetStyle {
	FScrollBoxStyle ScrollBoxStyle; // 0x30
};

struct UInterpTrackInstSlomo {
	float OldTimeDilation; // 0x28
};

struct AVectorFieldVolume {
	UVectorFieldComponent* VectorFieldComponent; // 0x218
};

struct UMM_Mastery_Slot_Info {
	UMirImage* mImgSlotIcon; // 0x2f0
	UMirTextBlock* mTxtSlotName; // 0x2f8
	UMirTextBlock* mTxtSlotLv; // 0x300
	UMirProgressBar* mProgGauge; // 0x308
	TArray<UMirCanvasPanel*> mPanelAbilityList; // 0x310
	TArray<UMirImage*> mImgIconList; // 0x320
	TArray<UMirTextBlock*> mTxtNameList; // 0x330
	TArray<UMirTextBlock*> mTxtCurrValueList; // 0x340
	TArray<UMirImage*> mImgArrow; // 0x350
	TArray<UMirTextBlock*> mTxtNextValueList; // 0x360
};

struct AMM_CustomizingDataActor {
	TMap<FString, FBoneCustomizingData> m_BoneCustomDataArray; // 0x218
	TArray<FLinearColor> m_HairColorArray; // 0x268
	TArray<FLinearColor> m_EyeColorArray; // 0x278
	TArray<FLinearColor> m_LipColorArray; // 0x288
	TArray<FLinearColor> m_SkinColorArray; // 0x298
	TArray<FLinearColor> m_ClothColorArray; // 0x2a8
	TArray<USkeletalMesh*> m_HairMeshArray; // 0x2b8
	TArray<USkeletalMesh*> m_FaceMeshArray; // 0x2c8
	TArray<USkeletalMesh*> m_BodyMeshArray; // 0x2d8
	TArray<FBoneControlData> m_ControlArray; // 0x2e8
	USkeletalMeshComponent* m_pDefaultMesh; // 0x2f8
	UPoseableMeshComponent* m_pHairMesh; // 0x300
	UPoseableMeshComponent* m_pBodyMesh; // 0x308
	UPoseableMeshComponent* m_pPoseableMesh; // 0x310
	float m_HeadRotationSpeed; // 0x318
	float m_HeadRotationReturnSpeed; // 0x31c
	float m_EyeRotationSpeed; // 0x320
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x328
};

struct UTextPropertyTestObject {
	FText DefaultedText; // 0x28
	FText UndefaultedText; // 0x40
	FText TransientText; // 0x58
};

struct UMM_B_Equipment {
	int32_t m_iInventoryID; // 0x2f0
	UMM_MyCharinfo* m_MyCharinfo; // 0x2f8
	UMM_SaleItemBasket* m_SellItem; // 0x300
	UMM_NewInventory_Equipment* m_InvenEquipment; // 0x308
	UImage* m_RenderTargetImage; // 0x310
	UImage* m_TargetPos; // 0x318
};

struct ADirectionalLightOverrideVolume {
	UOverrideDirectionalLight* OverrideDirectionalLight; // 0x7a0
};

struct UExponentialHeightFogComponent {
	float FogDensity; // 0x220
	float FogHeightFalloff; // 0x224
	FExponentialHeightFogData SecondFogData; // 0x228
	FLinearColor FogInscatteringColor; // 0x234
	UTextureCube* InscatteringColorCubemap; // 0x248
	float InscatteringColorCubemapAngle; // 0x250
	FLinearColor InscatteringTextureTint; // 0x254
	float FullyDirectionalInscatteringColorDistance; // 0x264
	float NonDirectionalInscatteringColorDistance; // 0x268
	float DirectionalInscatteringExponent; // 0x26c
	float DirectionalInscatteringStartDistance; // 0x270
	FLinearColor DirectionalInscatteringColor; // 0x274
	float FogMaxOpacity; // 0x284
	float StartDistance; // 0x288
	float FogCutoffDistance; // 0x28c
	bool bEnableVolumetricFog; // 0x290
	float VolumetricFogScatteringDistribution; // 0x294
	FColor VolumetricFogAlbedo; // 0x298
	FLinearColor VolumetricFogEmissive; // 0x29c
	float VolumetricFogExtinctionScale; // 0x2ac
	float VolumetricFogDistance; // 0x2b0
	float VolumetricFogStaticLightingScatteringIntensity; // 0x2b4
	bool bOverrideLightColorsWithFogInscatteringColors; // 0x2b8
};

struct UMM_Connecting_Login {
	float m_fTimeOut; // 0x2f0
	UPanelWidget* m_Grid_Alignment; // 0x2f8
	UMirTextBlock* m_Txt_Connecting; // 0x300
	UWidgetAnimation* m_AniLoop; // 0x308
};

struct UMM_Popup_Guild_WantedSlot {
	UMirTextBlock* txt_grade; // 0x2e0
	UMirImage* Img_Grade; // 0x2e8
	UMirTextBlock* txt_reward_name; // 0x2f0
	UMirImage* img_reward; // 0x2f8
	UMirTextBlock* txt_reward; // 0x300
	UMirTextBlock* txt_effect_name; // 0x308
	UMirImage* Img_Effect; // 0x310
	UMirTextBlock* txt_effect; // 0x318
	UMM_Common_Btn_Cost* Btn_Cost; // 0x320
	UMirTextBlock* txt_time; // 0x328
	UMirTextBlock* m_pTxtKillCount; // 0x330
	UHorizontalBox* m_pHorReward; // 0x338
	UHorizontalBox* m_pHorEffect; // 0x340
	UHorizontalBox* m_HorRootCount; // 0x348
	UVerticalBox* m_pVertRootReward; // 0x350
	UMirCheckBox* m_pChkOne; // 0x358
	UMirCheckBox* m_pChkTwo; // 0x360
	UMirTextBlock* m_pTxtCountOne; // 0x368
	UMirTextBlock* m_pTxtCountTwo; // 0x370
};

struct UMM_UIAction_CharacterSelect {
	int32_t MAX_SLOT_COUNT; // 0xf8
	int32_t LIMIT_SLOT_COUNT; // 0xfc
	int32_t SOUND_GAMESTART; // 0x100
	int32_t STRING_DELETE_DIALOG_TITLE; // 0x104
	int32_t STRING_DELETE_DIALOG_DESCRIPTION; // 0x108
	int32_t STRING_DELETE_DIALOG_BTN_OK; // 0x10c
	int32_t STRING_DELETE_DIALOG_BTN_CANCEL; // 0x110
	int32_t STRING_DELETE_UNABLE_GAMESTART; // 0x114
};

struct UNavArea_Link {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UInputComponent {
	TArray<FCachedKeyToActionInfo> CachedKeyToActionInfo; // 0x120
};

struct UMM_AbilityState_Item {
	bool IsShowOptionPassive; // 0x2f0
	bool IsModifiedStats; // 0x2f1
	UPanelWidget* Panel_NewOption; // 0x2f8
	UPanelWidget* Panel_LevelUp; // 0x300
	UPanelWidget* Panel_MaxLevel; // 0x308
	UMirTextBlock* Txt_Title; // 0x310
	UMirTextBlock* Txt_BeforeValue; // 0x318
	UMirTextBlock* Txt_AfterValue; // 0x320
	UMM_Common_ComparePoint* ComparePointWidget; // 0x328
	UMirImage* Img_Deco_Arrow; // 0x330
	UMirImage* Img_Option_Grade; // 0x338
	UMirImage* Img_Option_Icon; // 0x340
	UMirButton* Btn_Main; // 0x348
	int32_t m_OptionIndex; // 0x350
	bool m_IsRandomOption; // 0x354
	bool m_IsEqupipped; // 0x355
};

struct AExponentialHeightFog {
	UExponentialHeightFogComponent* Component; // 0x218
	char bEnabled : 1; // 0x220
};

struct UMM_GuildInventory {
	TArray<UMM_GuildInventoryGoods*> lst_inventory_goods; // 0x2f0
	UMirScrollBox* sb_log; // 0x300
	UMM_Common_Board_Notice* board_notice; // 0x308
	UMM_Common_Btn_Symbol* btn_symbol_history_prev; // 0x310
	UMM_Common_Btn_Symbol* btn_symbol_history_next; // 0x318
	UMirTextBlock* txt_history_curr_page; // 0x320
	UMM_Common_Btn* btn_donation; // 0x328
	UMM_Common_Btn* btn_user_give; // 0x330
	UMM_Common_Btn* btn_guild_give; // 0x338
	UMM_Common_Btn* btn_exchange; // 0x340
	UMM_Common_Btn_Inven* btn_input; // 0x348
	UMM_Common_Btn_Inven* btn_output; // 0x350
};

struct UAISenseConfig_Hearing {
	UAISense_Hearing* Implementation; // 0x48
	float HearingRange; // 0x50
	float LoSHearingRange; // 0x54
	char bUseLoSHearing : 1; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
};

struct USoundNodeGroupControl {
	TArray<int32_t> GroupSizes; // 0x40
};

struct UMM_Hud_Chat_ChattingRoom {
	UCanvasPanel* Panel_Title; // 0x308
	UMirTextBlock* txt_nickname; // 0x310
	UMM_Common_Btn_Symbol* Btn_EixtChannel; // 0x318
	UScrollBox* m_ScrollBox; // 0x320
	UMM_Hud_Chat_QuickMove* m_Chat_QuickMove; // 0x328
};

struct UMM_AddOptionList {
	int32_t ListMaxCount; // 0x2e0
	FLinearColor AbilitySelectColor; // 0x2e4
	FLinearColor AbilityTextColor; // 0x2f4
	FLinearColor PassiveSelectColor; // 0x304
	FLinearColor PassiveTextColor; // 0x314
	UMirTextBlock* Txt_Title; // 0x328
	TArray<UMM_AddOptionAbility*> Arr_Option; // 0x330
	UMirCanvasPanel* Canvers_Title; // 0x340
	UMirCanvasPanel* Canvers_Item; // 0x348
	UMM_Slot_Registered* Slot_Target; // 0x350
	UMM_Common_Btn_Symbol* Btn_OptionList_Slot; // 0x358
};

struct UMM_Dominion_Title_RareSlot {
	UMirTextBlock* m_pTxtClass; // 0x2e0
	UMirTextBlock* m_pTxtName; // 0x2e8
	UMM_Common_Btn_Symbol* m_pBtnInfo; // 0x2f0
	UMM_GuildMemberPortrait* m_pPortrait; // 0x2f8
	UMirButton* m_pBtnClick; // 0x300
};

struct UMM_Mail_Slot_Message {
	int32_t ICON_READ_MAIL; // 0x2f8
	int32_t ICON_NOT_READ_MAIL; // 0x2fc
	int32_t ICON_READ_SEND_MAIL; // 0x300
	int32_t ICON_NOT_READ_SEND_MAIL; // 0x304
	int32_t ICON_READ_MAIL_INCLUDE_ITEM; // 0x308
	int32_t ICON_NOT_READ_MAIL_INCLUDE_ITEM; // 0x30c
	int32_t ICON_READ_SEND_MAIL_INCLUDE_ITEM; // 0x310
	int32_t ICON_NOT_READ_SEND_MAIL_INCLUDE_ITEM; // 0x314
	UMirTextBlock* m_Txt_Title; // 0x318
	UMirTextBlock* m_Txt_SubTitle; // 0x320
	UMirTextBlock* m_Txt_SendTime; // 0x328
	UMirRichTextBlock* m_RTxt_ExpireTime; // 0x330
	UMirImage* m_Img_IconState; // 0x338
	UMirImage* m_Img_Selected; // 0x340
	UMirButton* m_Btn_Main; // 0x348
};

struct UMM_NewInventory_EquipmentAction {
	UMirTextBlock* m_Txt_InvenCount; // 0x300
	UMirButton* m_Btn_InvenCount; // 0x308
	UMM_SortListBtn* m_SortListBtn; // 0x310
	UPanelWidget* m_Hrz_Default; // 0x318
	UMM_Common_Btn* m_CB_SellMode; // 0x320
	UMM_Common_Btn* m_CB_AutoEquipMode; // 0x328
	UPanelWidget* m_Hrz_SellMode; // 0x330
	UMirImage* m_Img_SellCostType; // 0x338
	UMirTextBlock* m_Txt_SellCostValue; // 0x340
	UMM_Common_Btn* m_CB_Sell; // 0x348
};

struct UMM_B_SkillSet {
	UMM_Btn_HudDirSkill* m_pHudBtnDirSkill; // 0x2f0
	UMM_HudSkillDeck* m_pHudSkillDeck; // 0x2f8
	UCanvasPanel* m_pCan_Attack; // 0x300
	UMM_HudBtnAction* m_pBtnAvoid; // 0x308
	UMM_HudBtnAction* m_pBtnJump; // 0x310
	UMM_HudBtnSetJump* m_pBtnSetJump; // 0x318
	UMM_Btn_HudNormalAttack* m_pBtnNormalAttack; // 0x320
	UMirCanvasPanel* m_pCanCancelDirSkill; // 0x328
	UMM_HudBtnAction* m_pBtnTargetLockOn; // 0x330
	UMM_Btn_HudDirJump* m_pBtnDirJump; // 0x338
	UMM_Btn_HudDirAvoid* m_pBtnDirAvoid; // 0x340
	UMM_Hud_BackSkill* m_pHudBackSkill; // 0x348
	UMirCanvasPanel* m_pCanActionButton; // 0x350
	UMirImage* m_pImgActionButtonIcon; // 0x358
	UMirImage* m_pImgActionButtonCooltime; // 0x360
	UMirButton* m_pBtnAction; // 0x368
	UMirCanvasPanel* m_pCanReserveAction; // 0x370
	UMirImage* m_pImgDeck01; // 0x378
	UMirImage* m_pImgDeck02; // 0x380
	UMirImage* m_pImgDeck03; // 0x388
	UMirImage* imgTargetListOpen; // 0x390
	UPanelWidget* m_pGridActionButtonEffect; // 0x3b8
	UEffectWidgetBase* m_pFastRunEffect; // 0x3c0
};

struct UParticleModuleBeamTarget {
	Beam2SourceTargetMethod TargetMethod; // 0x30
	FName TargetName; // 0x34
	FRawDistributionVector Target; // 0x40
	char bTargetAbsolute : 1; // 0x88
	char bLockTarget : 1; // 0x88
	Beam2SourceTargetTangentMethod TargetTangentMethod; // 0x8c
	FRawDistributionVector TargetTangent; // 0x90
	char bLockTargetTangent : 1; // 0xd8
	FRawDistributionFloat TargetStrength; // 0xe0
	char bLockTargetStength : 1; // 0x110
	float LockRadius; // 0x114
};

struct UMM_New_Occupation_KingAscension {
	float m_iForceCloseSecond; // 0x2e0
	UMirCanvasPanel* m_pCanvasMain; // 0x2e8
	UMirImage* m_pImgCharacterIcon; // 0x2f0
	UMirTextBlock* m_pTxtName; // 0x2f8
	UMirTextBlock* m_pTxtWelcome; // 0x300
	UMirTextBlock* m_pTxtSuccess; // 0x308
	UWidgetAnimation* m_pAnimStart; // 0x310
	UWidgetAnimation* m_pAnimEnd; // 0x318
};

struct UCheckBoxStyleAsset {
	FCheckBoxStyle CheckBoxStyle; // 0x28
};

struct UInputSettings {
	TArray<FInputAxisConfigEntry> AxisConfig; // 0x28
	char bAltEnterTogglesFullscreen : 1; // 0x38
	char bF11TogglesFullscreen : 1; // 0x38
	char bUseMouseForTouch : 1; // 0x38
	char bAvoidInvalidTouchEnd : 1; // 0x38
	char bEnableMouseSmoothing : 1; // 0x38
	char bEnableFOVScaling : 1; // 0x38
	char bCaptureMouseOnLaunch : 1; // 0x38
	char bDefaultViewportMouseLock : 1; // 0x38
	char bAlwaysShowTouchInterface : 1; // 0x39
	char bShowConsoleOnFourFingerTap : 1; // 0x39
	char bEnableGestureRecognizer : 1; // 0x39
	bool bUseAutocorrect; // 0x3a
	TArray<FString> ExcludedAutocorrectOS; // 0x40
	TArray<FString> ExcludedAutocorrectCultures; // 0x50
	TArray<FString> ExcludedAutocorrectDeviceModels; // 0x60
	EMouseCaptureMode DefaultViewportMouseCaptureMode; // 0x70
	EMouseLockMode DefaultViewportMouseLockMode; // 0x71
	float FOVScale; // 0x74
	float DoubleClickTime; // 0x78
	TArray<FInputActionKeyMapping> ActionMappings; // 0x80
	TArray<FInputAxisKeyMapping> AxisMappings; // 0x90
	TArray<FInputActionSpeechMapping> SpeechMappings; // 0xa0
	FSoftObjectPath DefaultTouchInterface; // 0xb0
	FKey ConsoleKey; // 0xc8
	TArray<FKey> ConsoleKeys; // 0xe0
};

struct UBuildPatchManifest {
	char ManifestFileVersion; // 0x28
	bool bIsFileData; // 0x29
	uint32_t appId; // 0x2c
	FString AppName; // 0x30
	FString BuildVersion; // 0x40
	FString LaunchExe; // 0x50
	FString LaunchCommand; // 0x60
	TSet<FString> PrereqIds; // 0x70
	FString PrereqName; // 0xc0
	FString PrereqPath; // 0xd0
	FString PrereqArgs; // 0xe0
	TArray<FFileManifestData> FileManifestList; // 0xf0
	TArray<FChunkInfoData> ChunkList; // 0x100
	TArray<FCustomFieldData> CustomFields; // 0x110
};

struct UGeometryCacheCodecRaw {
	int32_t DummyProperty; // 0x38
};

struct UMM_Customizing_CreatePopup {
	UButton* m_pRandomButton; // 0x2e0
	UMM_Common_Btn* m_pCancelButton; // 0x2e8
	UMM_Common_Btn* m_pDecisionButton; // 0x2f0
	UMirEditableText* m_pNameEditableText; // 0x2f8
};

struct UNetAnalyticsAggregatorConfig {
	TArray<FNetAnalyticsDataConfig> NetAnalyticsData; // 0x28
};

struct UClothingAssetBase {
	FString ImportedFilePath; // 0x28
	FGuid AssetGuid; // 0x38
};

struct UMM_CustomizingAnimInstance {
	FRotator m_HeadLookRot; // 0x288
	FRotator m_NeckLookRot; // 0x294
	FRotator m_EyeRLookRot; // 0x2a0
	FRotator m_EyeLLookRot; // 0x2ac
	FName m_NeckSocketName; // 0x2b8
	FName m_HeadSocketName; // 0x2c0
	FName m_RightEyeSocketName; // 0x2c8
	FName m_LeftEyeSocketName; // 0x2d0
	float m_HeadOffsetPitch; // 0x2d8
	float m_EyePitch; // 0x2dc
	float m_EyeOffset; // 0x2e0
	float m_HeadRotateAngle; // 0x2e4
	float m_NeckYawLimit; // 0x2e8
	float m_NeckPitchLimit; // 0x2ec
	float m_HeadYawLimit; // 0x2f0
	float m_HeadPitchLimit; // 0x2f4
	float m_EyeYawLimit; // 0x2f8
	float m_EyePitchLimit; // 0x2fc
	float m_EyeCenter; // 0x300
	float m_EyeTargetDistance; // 0x304
	bool m_bCustomingPoseFlag; // 0x308
	int32_t m_nCustomingPoseIndex; // 0x30c
	float m_CurrentBoneTransformAlpha; // 0x310
	int32_t MainState; // 0x320
};

struct UMaterialExpressionCollectionParameter {
	UMaterialParameterCollection* Collection; // 0x40
	FName ParameterName; // 0x48
	FGuid ParameterId; // 0x50
};

struct UMaterialExpressionIf {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput AGreaterThanB; // 0x68
	FExpressionInput AEqualsB; // 0x7c
	FExpressionInput ALessThanB; // 0x90
	float EqualsThreshold; // 0xa4
	float ConstB; // 0xa8
	float ConstAEqualsB; // 0xac
};

struct UMM_Popup_DominionPrize {
	UMM_Common_ToolTipBtn* m_pToolTip; // 0x2f8
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x300
	UMM_Common_Btn* m_pBtnCancel; // 0x308
	UMM_Common_Btn_Symbol* m_pBtnRefresh; // 0x310
	UMM_Common_Btn* m_pBtnTargetChange; // 0x318
	UMirTextBlock* m_pTxtUserName; // 0x320
	UMirScrollBox* m_pScrollBox; // 0x328
};

struct ARuntimeVirtualTextureVolume {
	URuntimeVirtualTextureComponent* VirtualTextureComponent; // 0x218
};

struct UAREnvironmentCaptureProbe {
	UAREnvironmentCaptureProbeTexture* EnvironmentCaptureTexture; // 0xf8
};

struct UNetConnection {
	TArray<UChildConnection*> Children; // 0x48
	UNetDriver* Driver; // 0x58
	UPackageMap* PackageMapClass; // 0x60
	UPackageMap* PackageMap; // 0x68
	TArray<UChannel*> OpenChannels; // 0x70
	TArray<AActor*> SentTemporaries; // 0x80
	AActor* ViewTarget; // 0x90
	AActor* OwningActor; // 0x98
	int32_t MaxPacket; // 0xa0
	char InternalAck : 1; // 0xa4
	FUniqueNetIdRepl PlayerId; // 0x160
	double LastReceiveTime; // 0x1d0
	TArray<UChannel*> ChannelsToTick; // 0x14a8
};

struct UParticleModuleVelocityOverLifetime {
	FRawDistributionVector VelOverLife; // 0x38
	char Absolute : 1; // 0x80
};

struct UWorld {
	ULevel* PersistentLevel; // 0x30
	UNetDriver* NetDriver; // 0x38
	ULineBatchComponent* LineBatcher; // 0x40
	ULineBatchComponent* PersistentLineBatcher; // 0x48
	ULineBatchComponent* ForegroundLineBatcher; // 0x50
	AGameNetworkManager* NetworkManager; // 0x58
	UPhysicsCollisionHandler* PhysicsCollisionHandler; // 0x60
	TArray<UObject*> ExtraReferencedObjects; // 0x68
	TArray<UObject*> PerModuleDataObjects; // 0x78
	TArray<AActor*> LevelSequenceActors; // 0x88
	TArray<ULevelStreaming*> StreamingLevels; // 0x98
	FStreamingLevelsToConsider StreamingLevelsToConsider; // 0xa8
	FString StreamingLevelsPrefix; // 0xd0
	ULevel* CurrentLevelPendingVisibility; // 0xe0
	ULevel* CurrentLevelPendingInvisibility; // 0xe8
	UDemoNetDriver* DemoNetDriver; // 0xf0
	AParticleEventManager* MyParticleEventManager; // 0xf8
	APhysicsVolume* DefaultPhysicsVolume; // 0x100
	char bAreConstraintsDirty : 1; // 0x11e
	UNavigationSystemBase* NavigationSystem; // 0x120
	AGameModeBase* AuthorityGameMode; // 0x128
	AGameStateBase* GameState; // 0x130
	UAISystemBase* AISystem; // 0x138
	UAvoidanceManager* AvoidanceManager; // 0x140
	TArray<ULevel*> Levels; // 0x148
	TArray<FLevelCollection> LevelCollections; // 0x158
	UGameInstance* OwningGameInstance; // 0x170
	TArray<UMaterialParameterCollectionInstance*> ParameterCollectionInstances; // 0x178
	UCanvas* CanvasForRenderingToTarget; // 0x188
	UCanvas* CanvasForDrawMaterialToRenderTarget; // 0x190
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate; // 0x1e8
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x1f8
	UWorldComposition* WorldComposition; // 0x550
	FWorldPSCPool PSCPool; // 0x5e8
};

struct ULevelSequenceBurnIn {
	FLevelSequencePlayerSnapshot FrameInformation; // 0x240
	ALevelSequenceActor* LevelSequenceActor; // 0x2f8
};

struct UMaterialExpressionDesaturation {
	FExpressionInput Input; // 0x40
	FExpressionInput Fraction; // 0x54
	FLinearColor LuminanceFactors; // 0x68
};

struct UTextRenderComponent {
	FText Text; // 0x418
	UMaterialInterface* TextMaterial; // 0x430
	UFont* Font; // 0x438
	EHorizTextAligment HorizontalAlignment; // 0x440
	EVerticalTextAligment VerticalAlignment; // 0x441
	FColor TextRenderColor; // 0x444
	float XScale; // 0x448
	float YScale; // 0x44c
	float WorldSize; // 0x450
	float InvDefaultSize; // 0x454
	float HorizSpacingAdjust; // 0x458
	float VertSpacingAdjust; // 0x45c
	char bAlwaysRenderAsText : 1; // 0x460
};

struct UDistributionVector {
	char bCanBeBaked : 1; // 0x30
	char bIsDirty : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UMM_GuildHistorySlot {
	UMirTextBlock* txt_category; // 0x2e0
	UMirTextBlock* txt_date; // 0x2e8
	UMirTextBlock* txt_time; // 0x2f0
	UMirRichTextBlock* rtxt_history; // 0x2f8
};

struct AGameSession {
	int32_t MaxSpectators; // 0x218
	int32_t MaxPlayers; // 0x21c
	int32_t MaxPartySize; // 0x220
	char MaxSplitscreensPerConnection; // 0x224
	bool bRequiresPushToTalk; // 0x225
	FName SessionName; // 0x228
};

struct ULevelStreaming {
	UWorld* WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int32_t LevelLODIndex; // 0xb0
	int32_t StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xba
	char bShouldBeLoaded : 1; // 0xba
	char bLocked : 1; // 0xba
	char bIsStatic : 1; // 0xba
	char bShouldBlockOnLoad : 1; // 0xba
	char bShouldBlockOnUnload : 1; // 0xbb
	char bDisableDistanceStreaming : 1; // 0xbb
	char bDrawOnLevelStatusMap : 1; // 0xbb
	FLinearColor LevelColor; // 0xbc
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd0
	float MinTimeBetweenVolumeUnloadRequests; // 0xe0
	FScriptMulticastDelegate OnLevelLoaded; // 0xe8
	FScriptMulticastDelegate OnLevelUnloaded; // 0xf8
	FScriptMulticastDelegate OnLevelShown; // 0x108
	FScriptMulticastDelegate OnLevelHidden; // 0x118
	ULevel* LoadedLevel; // 0x128
	ULevel* PendingUnloadLevel; // 0x130
};

struct UCombatPointPopupWidget {
	UWidgetAnimation* m_AniOpen; // 0x2e0
};

struct UMM_NewInventoryUnsealing {
	UMM_NewInventoryTab* m_InvenTab; // 0x2e8
	UMM_NewInventory* m_Inven; // 0x2f0
	UHorizontalBox* m_pNoticeBox; // 0x2f8
	UMirTextBlock* m_pTxtNotice; // 0x300
	UMirCheckBox* m_pCheckOnOff; // 0x308
};

struct UCineCameraComponent {
	FCameraFilmbackSettings FilmbackSettings; // 0x7d0
	FCameraFilmbackSettings Filmback; // 0x7dc
	FCameraLensSettings LensSettings; // 0x7e8
	FCameraFocusSettings FocusSettings; // 0x800
	float CurrentFocalLength; // 0x858
	float CurrentAperture; // 0x85c
	float CurrentFocusDistance; // 0x860
	TArray<FNamedFilmbackPreset> FilmbackPresets; // 0x870
	TArray<FNamedLensPreset> LensPresets; // 0x880
	FString DefaultFilmbackPresetName; // 0x890
	FString DefaultFilmbackPreset; // 0x8a0
	FString DefaultLensPresetName; // 0x8b0
	float DefaultLensFocalLength; // 0x8c0
	float DefaultLensFStop; // 0x8c4
};

struct USoundNodeWaveParam {
	FName WaveParameterName; // 0x40
};

struct UMM_Auction_ComboList {
	float m_fSlotSizeY; // 0x2e0
	UMirCanvasPanel* m_pCanScroll; // 0x2e8
	UMirScrollBox* m_pScrollList; // 0x2f0
	UMirButton* m_pBtnMain; // 0x2f8
	UMirImage* m_pImgArrow; // 0x300
	UMirTextBlock* m_pTxtTheme; // 0x308
	UMirTextBlock* m_pTxtValue; // 0x310
	FVector2D m_fBaseScrollSize; // 0x318
};

struct UMaterialFunctionMaterialLayerBlend {
	FString Description; // 0x40
	TArray<UMaterialExpression*> FunctionExpressions; // 0x50
	char bExposeToLibrary : 1; // 0x60
	char bPrefixParameterNames : 1; // 0x60
	char bReentrantFlag : 1; // 0x60
};

struct UPopup_Auto_ExtendTime {
	UMM_Common_Btn_Symbol* btnClose; // 0x2f0
	UMirTextBlock* txtTile; // 0x2f8
	UMM_Common_ToolTipBtn* Common_ToolTipBtn; // 0x300
	UMM_GameOption_Select* optSelectMode; // 0x308
	UWidgetSwitcher* swtModeSelector; // 0x310
	UWidgetSwitcher* swtAutoModeSelector; // 0x318
	UMirTextBlock* txtFixAutoExtending; // 0x320
	UMM_Item_Make_Slider* wgtExtendCountSlider; // 0x328
	UMirTextBlock* txtUseGoldCount; // 0x330
	UMM_GameOption_Switch* optSwtUseGold; // 0x338
	UMirTextBlock* txtFixUseOrder; // 0x340
	UMirCanvasPanel* canUseTicket; // 0x348
	UMirImage* imgTicket; // 0x350
	UMirImage* ImgTicketNext; // 0x358
	UMirCanvasPanel* canUseGold; // 0x360
	UMirImage* imgGold; // 0x368
	UMirImage* imgGoldNext; // 0x370
	UMirCanvasPanel* canUseItem; // 0x378
	UMirImage* imgItem; // 0x380
	UMM_Common_Btn* btnStartExtend; // 0x388
	UMM_Common_Btn* btnStopExtend; // 0x390
	UMirTextBlock* txtFixLeftExendCount; // 0x398
	UMirTextBlock* txtLeftExtendValue; // 0x3a0
	UMirTextBlock* txtFixCurExtendCost; // 0x3a8
	UMirTextBlock* txtCurExtendValue; // 0x3b0
	UMirImage* imgCurUsingCost; // 0x3b8
	UMM_Slot_Material* MatSlot; // 0x3c0
	UMirTextBlock* txtLeftTime; // 0x3c8
	UMirTextBlock* txtFixNotice; // 0x3d0
	UHorizontalBox* hrzLimitGoldCount; // 0x3d8
	UMirRichTextBlock* txtLimitGoldCount; // 0x3e0
	UMM_Common_Btn* btnExtendTicket; // 0x3e8
	UMM_Common_Btn_Cost* btnExtendGold; // 0x3f0
	UMM_Common_Btn_Cost* btnExtendItem; // 0x3f8
};

struct UMaterialExpressionVectorParameter {
	FLinearColor DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x68
	char PrimitiveDataIndex; // 0x69
};

struct UInterpTrackFloatAnimBPParam {
	UObject* AnimBlueprintClass; // 0x90
	UAnimInstance* AnimClass; // 0x98
	FName ParamName; // 0xa0
};

struct UMM_B_Party_Invite {
	UWidgetAnimation* m_AniStart; // 0x2f0
	UWidgetAnimation* m_AniEnd; // 0x2f8
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x300
	UMM_CommonVerticalTabSet* m_C_Vrt_Tab; // 0x308
	UMirListView* m_ListView_InviteList; // 0x310
	UMirListView* m_ListView_MemberList; // 0x318
	UMirTextBlock* m_Txt_PartyInfo; // 0x320
	UPanelWidget* m_Grid_Empty; // 0x328
	UMirEditableText* m_Editable_NickName; // 0x330
	UMM_Common_Btn_Symbol* m_C_Btn_FindUser; // 0x338
	UMirCanvasPanel* m_Can_Notice; // 0x340
	UHorizontalBox* m_HrzBox_Page; // 0x348
	UMM_Common_Btn_Symbol* m_C_Btn_Prev; // 0x350
	UMM_Common_Btn_Symbol* m_C_Btn_Next; // 0x358
	UMirTextBlock* m_Txt_PageNum; // 0x360
	UMM_Common_Btn* m_C_Btn_AllInvite; // 0x368
	UWidgetAnimation* m_Ani_Start; // 0x370
	UWidgetAnimation* m_Ani_End; // 0x378
	TArray<UPartyInviteListSlotObj*> m_arInviteSlotObj; // 0x390
	TArray<UPartyInviteMemberSlotObj*> m_arMemberSlotObj; // 0x3a0
};

struct UParticleModuleCollision {
	FRawDistributionVector DampingFactor; // 0x30
	FRawDistributionVector DampingFactorRotation; // 0x78
	FRawDistributionFloat MaxCollisions; // 0xc0
	EParticleCollisionComplete CollisionCompletionOption; // 0xf0
	TArray<EObjectTypeQuery> CollisionTypes; // 0xf8
	char bApplyPhysics : 1; // 0x110
	char bIgnoreTriggerVolumes : 1; // 0x110
	FRawDistributionFloat ParticleMass; // 0x118
	float DirScalar; // 0x148
	char bPawnsDoNotDecrementCount : 1; // 0x14c
	char bOnlyVerticalNormalsDecrementCount : 1; // 0x14c
	float VerticalFudgeFactor; // 0x150
	FRawDistributionFloat DelayAmount; // 0x158
	char bDropDetail : 1; // 0x188
	char bCollideOnlyIfVisible : 1; // 0x188
	char bIgnoreSourceActor : 1; // 0x188
	float MaxCollisionDistance; // 0x18c
};

struct UMM_Costume_Slot_OptionInfo {
	UMirImage* Img_Symbol; // 0x2f0
	UMirTextBlock* Txt_OptionType; // 0x2f8
	UMirTextBlock* Txt_OptionValue; // 0x300
};

struct UMM_Map_CheckBtn {
	UMirTextBlock* m_TxtMain; // 0x2e8
	UCheckBox* m_CheckMain; // 0x2f0
};

struct UMM_GuildMemberSlot {
	UMM_GuildMemberPortrait* Portrait; // 0x2e0
	UMirTextBlock* txt_nickname; // 0x2e8
	UMirImage* img_combat_power; // 0x2f0
	UMirTextBlock* txt_combat_power; // 0x2f8
	UMirButton* Btn_Main; // 0x300
	UMirImage* img_online; // 0x308
	UMM_Common_Btn_Symbol* btn_partner; // 0x310
	UMM_GuildMemberPortrait* portrait_partner; // 0x318
	UMirImage* img_partner; // 0x320
	UMirTextBlock* txt_partner; // 0x328
	int32_t GuildMemberSlotType; // 0x330
	UWidgetAnimation* ani_effect; // 0x338
};

struct UMM_Map_Occupation {
	UMirTextBlock* m_Txt_GuildName; // 0x2e0
	UImage* m_Img_Frame; // 0x2e8
	UImage* m_Img_Symbol; // 0x2f0
};

struct UMaterialExpressionVertexColor {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_PopupGuildNameChangeEdit {
	UMirEditableText* edit_txt_guild_name; // 0x2e0
	UMM_Common_Btn* Btn_Cancel; // 0x2e8
	UMM_Common_Btn_Symbol* btn_close; // 0x2f0
	UMM_Common_Btn_Cost* btn_change; // 0x2f8
};

struct UStreamMediaSource {
	FString StreamUrl; // 0x88
};

struct UMovieSceneAudioCaptureProtocolBase {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UUserWidget {
	FLinearColor ColorAndOpacity; // 0x110
	DelegateProperty ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	DelegateProperty ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x1a8
	UWidgetTree* WidgetTree; // 0x1b8
	int32_t Priority; // 0x1c0
	char bSupportsKeyboardFocus : 1; // 0x1c4
	char bIsFocusable : 1; // 0x1c4
	char bStopAction : 1; // 0x1c4
	char bHasScriptImplementedTick : 1; // 0x1c4
	char bHasScriptImplementedPaint : 1; // 0x1c4
	char bCookedWidgetTree : 1; // 0x1c4
	EWidgetTickFrequency TickFrequency; // 0x1d0
	UInputComponent* InputComponent; // 0x1d8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1e0
};

struct UBoxComponent {
	FVector BoxExtent; // 0x430
	float LineThickness; // 0x43c
};

struct UDebugPanel {
	UCanvasPanel* DebugCanvasPanel; // 0x2e0
};

struct UMM_NewInventory_Base {
	int32_t m_iInvenSlotMinCount; // 0x2e0
};

struct UPhysicsSettings {
	float DefaultGravityZ; // 0x38
	float DefaultTerminalVelocity; // 0x3c
	float DefaultFluidFriction; // 0x40
	int32_t SimulateScratchMemorySize; // 0x44
	int32_t RagdollAggregateThreshold; // 0x48
	float TriangleMeshTriangleMinAreaThreshold; // 0x4c
	bool bEnableShapeSharing; // 0x50
	bool bEnablePCM; // 0x51
	bool bEnableStabilization; // 0x52
	bool bWarnMissingLocks; // 0x53
	bool bEnable2DPhysics; // 0x54
	FRigidBodyErrorCorrection PhysicErrorCorrection; // 0x58
	ESettingsLockedAxis LockedAxis; // 0x8c
	ESettingsDOF DefaultDegreesOfFreedom; // 0x8d
	float BounceThresholdVelocity; // 0x90
	EFrictionCombineMode FrictionCombineMode; // 0x94
	EFrictionCombineMode RestitutionCombineMode; // 0x95
	float MaxAngularVelocity; // 0x98
	float MaxDepenetrationVelocity; // 0x9c
	float ContactOffsetMultiplier; // 0xa0
	float MinContactOffset; // 0xa4
	float MaxContactOffset; // 0xa8
	bool bSimulateSkeletalMeshOnDedicatedServer; // 0xac
	ECollisionTraceFlag DefaultShapeComplexity; // 0xad
	bool bDefaultHasComplexCollision; // 0xae
	bool bSuppressFaceRemapTable; // 0xaf
	bool bSupportUVFromHitResults; // 0xb0
	bool bDisableActiveActors; // 0xb1
	bool bDisableKinematicStaticPairs; // 0xb2
	bool bDisableKinematicKinematicPairs; // 0xb3
	bool bDisableCCD; // 0xb4
	bool bEnableEnhancedDeterminism; // 0xb5
	float AnimPhysicsMinDeltaTime; // 0xb8
	bool bSimulateAnimPhysicsAfterReset; // 0xbc
	float MaxPhysicsDeltaTime; // 0xc0
	bool bSubstepping; // 0xc4
	bool bSubsteppingAsync; // 0xc5
	float MaxSubstepDeltaTime; // 0xc8
	int32_t MaxSubsteps; // 0xcc
	float SyncSceneSmoothingFactor; // 0xd0
	float InitialAverageFrameRate; // 0xd4
	int32_t PhysXTreeRebuildRate; // 0xd8
	TArray<FPhysicalSurfaceName> PhysicalSurfaces; // 0xe0
	FBroadphaseSettings DefaultBroadphaseSettings; // 0xf0
	FChaosPhysicsSettings ChaosSettings; // 0x130
};

struct UMM_Popup_AccountSelect {
	UWidgetAnimation* m_AniStart; // 0x2f0
	UWidgetAnimation* m_AniEnd; // 0x2f8
	UMirEditableText* m_Edit_Account; // 0x300
	UMM_Common_Btn* m_CB_Login; // 0x308
	UMirButton* Btn_GuestLogin; // 0x310
	UMirButton* Btn_GoogleLogin; // 0x318
};

struct USkinnedMeshComponent {
	USkeletalMesh* SkeletalMesh; // 0x440
	TWeakObjectPtr<USkinnedMeshComponent> MasterPoseComponent; // 0x448
	UPhysicsAsset* PhysicsAssetOverride; // 0x548
	int32_t ForcedLodModel; // 0x550
	int32_t MinLodModel; // 0x554
	float StreamingDistanceMultiplier; // 0x560
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x570
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x5a4
	char bOverrideMinLOD : 1; // 0x5a6
	char bUseAutomaticSwitchingCPUSkinning : 1; // 0x5a8
	char bUseBoundsFromMasterPoseComponent : 1; // 0x5ac
	char bForceWireframe : 1; // 0x5ac
	char bDisplayBones : 1; // 0x5ac
	char bDisableMorphTarget : 1; // 0x5ac
	char bHideSkin : 1; // 0x5ac
	char bPerBoneMotionBlur : 1; // 0x5ac
	char bComponentUseFixedSkelBounds : 1; // 0x5ac
	char bConsiderAllBodiesForBounds : 1; // 0x5ac
	char bSyncAttachParentLOD : 1; // 0x5ad
	char bCanHighlightSelectedSections : 1; // 0x5ad
	char bRecentlyRendered : 1; // 0x5ad
	char bCastCapsuleDirectShadow : 1; // 0x5ad
	char bCastCapsuleIndirectShadow : 1; // 0x5ad
	char bCPUSkinning : 1; // 0x5ad
	char bEnableUpdateRateOptimizations : 1; // 0x5ad
	char bDisplayDebugUpdateRateOptimizations : 1; // 0x5ad
	char bRenderStatic : 1; // 0x5ae
	char bIgnoreMasterPoseComponentLOD : 1; // 0x5ae
	char bCachedLocalBoundsUpToDate : 1; // 0x5ae
	char bForceMeshObjectUpdate : 1; // 0x5ae
	float CapsuleIndirectShadowMinVisibility; // 0x5b0
	FBoxSphereBounds CachedWorldSpaceBounds; // 0x5d8
	FMatrix CachedWorldToLocalTransform; // 0x600
};

struct UMM_GameOptionKeySettingGroup {
	UMirTextBlock* txt_group_name; // 0x2e0
	UVerticalBox* vb_group_slot; // 0x2e8
};

struct ULevelScriptBlueprint {
	UObject* ParentClass; // 0x50
	EBlueprintType BlueprintType; // 0x58
	char bRecompileOnLoad : 1; // 0x59
	char bHasBeenRegenerated : 1; // 0x59
	char bIsRegeneratingOnLoad : 1; // 0x59
	int32_t BlueprintSystemVersion; // 0x5c
	USimpleConstructionScript* SimpleConstructionScript; // 0x60
	TArray<UActorComponent*> ComponentTemplates; // 0x68
	TArray<UTimelineTemplate*> Timelines; // 0x78
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x88
	UInheritableComponentHandler* InheritableComponentHandler; // 0x98
};

struct UMM_CommonVerticalTabTreeSubBtn {
	UMirImage* m_pImgSelect; // 0x2f0
	UMirTextBlock* m_pTxtHyphen; // 0x2f8
	UMirTextBlock* m_pTxtName; // 0x300
	UMirButton* m_pBtnClick; // 0x308
	UPanelWidget* m_Grid_Effect_1; // 0x310
	UPanelWidget* m_Grid_Effect_2; // 0x318
};

struct UPawnAction_Repeat {
	UPawnAction* ActionToRepeat; // 0x98
	UPawnAction* RecentActionCopy; // 0xa0
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
};

struct UMaterialExpressionPerInstanceRandom {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_Occupation_FlagSlot {
	UWidgetSwitcher* Switcher_Flag; // 0x2e0
	int32_t m_ObjectTID; // 0x2e8
};

struct AMM_DebugWidgetManager {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct AMMUIDirectionalLight {
	UMMUIDirectionalLightComponent* LightComponent; // 0x218
};

struct UMM_Slot_DungeonMaterial {
	UMirCanvasPanel* m_canBand; // 0x468
	UMirImage* m_imgBand; // 0x470
	UMirTextBlock* m_txtBand; // 0x478
};

struct ULightPropagationVolumeBlendable {
	FLightPropagationVolumeSettings Settings; // 0x30
	float BlendWeight; // 0x70
};

struct UMM_Popup_DominionTitleTooltip {
	UPanelWidget* m_pGridTooltip; // 0x2e8
	UVerticalBox* m_pVerticalBox; // 0x2f0
	UMirButton* m_pBtnBg; // 0x2f8
	UMirImage* m_pImgBg; // 0x300
	UMirTextBlock* m_pTxtName; // 0x308
	TArray<UMM_Dominion_Title_Tooltip*> m_arrTooltip; // 0x310
};

struct UAsyncTaskDownloadImage {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UGameInstance {
	TArray<ULocalPlayer*> LocalPlayers; // 0x38
	UOnlineSession* OnlineSession; // 0x48
	TArray<UObject*> ReferencedObjects; // 0x50
};

struct UMM_Auction_Enchant_ComboSlot {
	UMirTextBlock* m_pTxtName; // 0x2e0
	UMirImage* m_pImgSelect; // 0x2e8
	UMirButton* m_pBtnMain; // 0x2f0
};

struct UMM_B_ClosedTraining {
	TArray<UMM_Common_Btn_Inven*> m_TabList; // 0x2f0
	TArray<UMM_ClosedTraining_Slot*> m_SlotList; // 0x300
	UMirTextBlock* m_Txt_CombatPoint; // 0x310
	UMirTextBlock* m_Txt_TotalLevel; // 0x318
	UMirProgressBar* m_Prog_TotalLevel; // 0x320
	UMirTextBlock* m_Txt_CollectName; // 0x328
	UMirTextBlock* m_Txt_CollectLevel; // 0x330
	UMM_Common_Btn_Symbol* m_Btn_Collect; // 0x338
	UMM_Common_Btn_Symbol* m_Btn_AbilityDetail; // 0x340
	UMM_ClosedTraining_Info* m_SlotInfo; // 0x348
};

struct UMM_Occupation_CommandMark {
	UCanvasPanel* m_Canvas_Effect; // 0x2e0
	UMirCanvasPanel* m_Canvas_Text; // 0x2e8
	UMirImage* m_Img_MarkIcon; // 0x2f0
	UMirTextBlock* m_Txt_Command; // 0x2f8
	UMirButton* m_Btn_Icon; // 0x300
};

struct AMM_NpcAIController {
	AMM_NPC* m_Npc; // 0x3a0
};

struct UMaterialExpressionFontSample {
	UFont* Font; // 0x40
	int32_t FontTexturePage; // 0x48
};

struct USourceEffectEnvelopeFollowerPreset {
	FSourceEffectEnvelopeFollowerSettings Settings; // 0x74
};

struct UMM_GuildMembers {
	UMM_GuildMemberSlot* guild_member_slot_leader; // 0x2f0
	UMirScrollBox* sb_member; // 0x2f8
};

struct UFixedFrameRateCustomTimeStep {
	FFrameRate FixedFrameRate; // 0x28
};

struct UMM_Auction_Tab_Search_ColumnName {
	UMirCanvasPanel* m_pCanvasBookMark; // 0x2e0
	UMirCanvasPanel* m_pCanvasNormal; // 0x2e8
	UMirCanvasPanel* m_pCanvasMaterial; // 0x2f0
	UMirButton* m_pBtnSortNorm; // 0x2f8
	UMirButton* m_pBtnSortEachMtrl; // 0x300
	UMirButton* m_pBtnSortMtrl; // 0x308
	TArray<UMirImage*> m_arrImgSortEachMtrl; // 0x310
	TArray<UMirImage*> m_arrImgSortMtrl; // 0x320
	TArray<UMirImage*> m_arrImgSortNorm; // 0x330
	TArray<UMirTextBlock*> m_arrTxtList; // 0x340
};

struct UPawnSensingComponent {
	float HearingThreshold; // 0xb0
	float LOSHearingThreshold; // 0xb4
	float SightRadius; // 0xb8
	float SensingInterval; // 0xbc
	float HearingMaxSoundAge; // 0xc0
	char bEnableSensingUpdates : 1; // 0xc4
	char bOnlySensePlayers : 1; // 0xc4
	char bSeePawns : 1; // 0xc4
	char bHearNoises : 1; // 0xc4
	FScriptMulticastDelegate OnSeePawn; // 0xd0
	FScriptMulticastDelegate OnHearNoise; // 0xe0
	float PeripheralVisionAngle; // 0xf0
	float PeripheralVisionCosine; // 0xf4
};

struct UMM_Popup_Occupation_SiegeSet {
	UWidgetAnimation* m_AniDestory; // 0x2e0
	UWidgetAnimation* m_AniSet; // 0x2e8
	UMirCanvasPanel* m_cpDestory; // 0x2f0
	UMirRichTextBlock* m_txtDestory; // 0x2f8
	UMirCanvasPanel* m_cpSet; // 0x300
	UMirRichTextBlock* m_txtSet; // 0x308
};

struct UBTTask_UpdateForceMove {
	float NearRange; // 0x70
};

struct UMM_Popup_GuardianStone {
	UMirImage* Img_Icon; // 0x2e0
	UMirTextBlock* Txt_Title; // 0x2e8
	UMirTextBlock* Txt_Owner; // 0x2f0
	UMirTextBlock* Txt_UnProtectRemaintime; // 0x2f8
	UMirTextBlock* Txt_Status; // 0x300
	UMirRichTextBlock* Txt_Reward01; // 0x308
	UMirRichTextBlock* Txt_Reward02; // 0x310
	UMM_Common_Btn* Btn_Repair; // 0x318
	UMM_Common_Btn* btn_support; // 0x320
};

struct UPlatformGameInstance {
	FScriptMulticastDelegate ApplicationWillDeactivateDelegate; // 0x168
	FScriptMulticastDelegate ApplicationHasReactivatedDelegate; // 0x178
	FScriptMulticastDelegate ApplicationWillEnterBackgroundDelegate; // 0x188
	FScriptMulticastDelegate ApplicationHasEnteredForegroundDelegate; // 0x198
	FScriptMulticastDelegate ApplicationWillTerminateDelegate; // 0x1a8
	FScriptMulticastDelegate ApplicationShouldUnloadResourcesDelegate; // 0x1b8
	FScriptMulticastDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x1c8
	FScriptMulticastDelegate ApplicationRegisteredForRemoteNotificationsDelegate; // 0x1d8
	FScriptMulticastDelegate ApplicationRegisteredForUserNotificationsDelegate; // 0x1e8
	FScriptMulticastDelegate ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x1f8
	FScriptMulticastDelegate ApplicationReceivedRemoteNotificationDelegate; // 0x208
	FScriptMulticastDelegate ApplicationReceivedLocalNotificationDelegate; // 0x218
	FScriptMulticastDelegate ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x228
};

struct AMM_SoundManagerActor {
	float m_Time1; // 0x238
	float m_Time2; // 0x23c
	UMirSystemSoundData* m_pMirSoundData; // 0x240
	UAudioComponent* m_pBGMAudio; // 0x248
	USoundBase* m_pBGMSound; // 0x250
	UAudioComponent* m_pDialogueAudio; // 0x260
	USoundConcurrency* m_DialogueConcurrency; // 0x268
	USoundMix* Mix_MasterSound; // 0x270
	TMap<EMirSoundClass, USoundClass*> m_mapSoundClass; // 0x278
	TMap<EMirSoundClass, float> m_mapSettingVolume; // 0x2c8
	TMap<EMirSoundClass, bool> m_mapMuteState; // 0x318
	TMap<uint32_t, int32_t> m_mapAsyncLoadSoundID; // 0x368
	TMap<int32_t, UAudioComponent*> m_mapPlayAudioComponentList; // 0x3b8
	TArray<ABGMTrigger*> m_pBGMTriggerArray; // 0x408
};

struct UMM_Customizing_SubCategoryItem {
	UMirImage* m_pAssetIconImage; // 0x2e0
	UMirImage* m_pColorIconImage; // 0x2e8
	UMirImage* m_pBoneIconImage; // 0x2f0
	UMirImage* m_pSelectIconImage; // 0x2f8
	UMirButton* m_SubCategorySelectBtn; // 0x300
	UWidgetSwitcher* m_TypeSwitcher; // 0x308
	UMirTextBlock* m_CategoryNameText; // 0x310
};

struct AMM_TestCustomizingCameraGameMode {
	int32_t m_SubCategory; // 0x550
	FString m_LinkCameraName; // 0x558
};

struct UNavArea_Default {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UParticleModuleParameterDynamic_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x48
};

struct UMM_ItemSynthesis_List {
	TArray<FLinearColor> arAURAEFFECT_LEFT; // 0x2f0
	TArray<FLinearColor> arAURAEFFECT_RIGHT; // 0x300
	UMM_ItemSynthesis_ListSlot* m_arMaterialSlot[0x4]; // 0x310
	UMirRichTextBlock* m_RTxt_Grade; // 0x330
	UMirTextBlock* m_Txt_SuccessRate; // 0x338
	UMirImage* m_Img_Active; // 0x340
	UMirImage* m_Img_DeActive; // 0x348
	UGridPanel* m_Grid_ItemGrade_Effect; // 0x350
	UWidgetAnimation* m_Ani_ItemGrade_Rare_Effect; // 0x358
	UWidgetAnimation* m_Ani_ItemGrade_Epic_Effect; // 0x360
	UWidgetAnimation* m_Ani_ItemGrade_Legned_Effect; // 0x368
};

struct UParticleModuleVelocityCone {
	FRawDistributionFloat Angle; // 0x38
	FRawDistributionFloat Velocity; // 0x68
	FVector Direction; // 0x98
};

struct UMM_Popup_GuildDonationSelectSlot {
	UMirImage* img_money; // 0x2e0
	UMirTextBlock* txt_money; // 0x2e8
	UMirCheckBox* cb_selected; // 0x2f0
	UMirButton* Btn_Main; // 0x2f8
	UMirCanvasPanel* cp_lock; // 0x300
};

struct UMM_Popup_GuildPermission {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e0
	UMM_Common_Btn* m_Btn_Confirm; // 0x2e8
	UMM_Common_Btn* m_Btn_Cancel; // 0x2f0
	UMirTextBlock* m_Txt_MeetingJoin_Grade; // 0x2f8
	UMirCanvasPanel* m_Can_MeetingJoin_List; // 0x300
	UComboBoxString* m_ComboBox_MeetingJoin; // 0x308
	UMirButton* m_Btn_MeetingJoin; // 0x310
	UMirButton* m_Btn_MeetingJoin_Grade2; // 0x318
	UMirButton* m_Btn_MeetingJoin_Grade3; // 0x320
	UMirButton* m_Btn_MeetingJoin_Grade4; // 0x328
	UMirButton* m_Btn_MeetingJoin_Grade5; // 0x330
	UMirButton* m_Btn_MeetingJoin_GradeAll; // 0x338
	UMirTextBlock* m_Txt_MeetingView_Grade; // 0x340
	UMirCanvasPanel* m_Can_MeetingView_List; // 0x348
	UComboBoxString* m_ComboBox_MeetingView; // 0x350
	UMirButton* m_Btn_MeetingView; // 0x358
	UMirButton* m_Btn_MeetingView_Grade2; // 0x360
	UMirButton* m_Btn_MeetingView_Grade3; // 0x368
	UMirButton* m_Btn_MeetingView_Grade4; // 0x370
	UMirButton* m_Btn_MeetingView_Grade5; // 0x378
	UMirButton* m_Btn_MeetingView_GradeAll; // 0x380
};

struct USoundNodeMixer {
	TArray<float> InputVolume; // 0x40
};

struct UGridPathFollowingComponent {
	UNavLocalGridManager* GridManager; // 0x258
};

struct UMaterialExpressionVirtualTextureFeatureSwitch {
	FExpressionInput No; // 0x40
	FExpressionInput Yes; // 0x54
};

struct UMaterialFunctionMaterialLayerInstance {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xb0
};

struct UMM_B_Goods {
	UCanvasPanel* m_CanScreen; // 0x2e0
	UMirButton* m_Btn_Return; // 0x2e8
	UMM_Goods_Tab* m_arGoodsTab[0x3]; // 0x2f0
	UMM_Goods_Slot* m_arGoodsSlot[0x3]; // 0x308
	UMM_Goods_Detail* m_Goods_Detail; // 0x320
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x328
	UMM_Common_Btn_Symbol* m_CB_ToggleDetail; // 0x330
	UMirButton* m_Btn_Screen; // 0x338
	USpacer* m_Spc_ContentsSpace; // 0x340
	UMM_Common_GuideBtn* m_pBtnGuide; // 0x348
};

struct UMM_UIAction_NPC_Making {
	int32_t MAX_MATERIAL_NUM; // 0x140
	int32_t m_CurrentGroup; // 0x144
	int32_t m_SelectedMakeID; // 0x148
	int32_t STRING_MSG_NOTENOUGH_LEVEL; // 0x160
	int32_t NotEnoughMaterial; // 0x164
	int32_t NotEnoughCost; // 0x168
};

struct UMM_PopupCharacterSearchSlot {
	UMirImage* img_rank; // 0x2e0
	UMirTextBlock* txt_rank; // 0x2e8
	UMirImage* img_portrait; // 0x2f0
	UMirTextBlock* Txt_Name; // 0x2f8
	UMirTextBlock* txt_combatpower; // 0x300
	UMirTextBlock* txt_level; // 0x308
	UMM_GuildIcon* guild_icon; // 0x310
	UMirTextBlock* txt_guild_name; // 0x318
	UMirButton* Btn_Main; // 0x320
};

struct UMaterialExpressionTextureProperty {
	FExpressionInput TextureObject; // 0x40
	EMaterialExposedTextureProperty Property; // 0x54
};

struct UPopup_DungeonReward_Slot {
	UMirImage* imgClassIcon; // 0x2e0
	UMirTextBlock* txtNickName; // 0x2e8
	UMirTextBlock* txtLevel; // 0x2f0
	UMirRichTextBlock* rtxtGrade; // 0x2f8
	UMirScrollBox* sclRewardListBox; // 0x300
	TArray<UMirCanvasPanel*> arCanReward; // 0x308
	TArray<UMM_Slot_Material*> arRewardSlot; // 0x318
};

struct UNetworkSettings {
	char bVerifyPeer : 1; // 0x38
	char bEnableMultiplayerWorldOriginRebasing : 1; // 0x38
	int32_t MaxRepArraySize; // 0x3c
	int32_t MaxRepArrayMemory; // 0x40
	TArray<FNetworkEmulationProfileDescription> NetworkEmulationProfiles; // 0x48
};

struct UCameraModifier_CameraShake {
	TArray<UCameraShake*> ActiveShakes; // 0x48
	TMap<UCameraShake*, FPooledCameraShakes> ExpiredPooledShakesMap; // 0x58
	float SplitScreenShakeScale; // 0xa8
};

struct UGarbageCollectionSettings {
	float TimeBetweenPurgingPendingKillObjects; // 0x38
	char FlushStreamingOnGC : 1; // 0x3c
	char AllowParallelGC : 1; // 0x3c
	char IncrementalBeginDestroyEnabled : 1; // 0x3c
	char MultithreadedDestructionEnabled : 1; // 0x3c
	char CreateGCClusters : 1; // 0x3c
	char ActorClusteringEnabled : 1; // 0x3c
	char BlueprintClusteringEnabled : 1; // 0x3c
	char UseDisregardForGCOnDedicatedServers : 1; // 0x3c
	int32_t MinGCClusterSize; // 0x40
	int32_t NumRetriesBeforeForcingGC; // 0x44
	int32_t MaxObjectsNotConsideredByGC; // 0x48
	int32_t SizeOfPermanentObjectPool; // 0x4c
	int32_t MaxObjectsInGame; // 0x50
	int32_t MaxObjectsInEditor; // 0x54
};

struct UMM_UIAction_TermItem {
	bool DisplayWarning_Login; // 0x78
	int32_t STR_MSGID_WARNNING_24HOUR; // 0x7c
};

struct UBTDecorator_ConditionalLoop {
	int32_t IntValue; // 0x90
	float FloatValue; // 0x94
	FString StringValue; // 0x98
	FString CachedDescription; // 0xa8
	char OperationType; // 0xb8
	EBTBlackboardRestart NotifyObserver; // 0xb9
};

struct UMM_DungeonCommonListSlot {
	UMirImage* imgBackGround; // 0x2f0
	UMirImage* imgBossGrade; // 0x2f8
	UMirImage* imgBoss; // 0x300
	UOverlay* ovlState1; // 0x308
	UMirTextBlock* txtState1; // 0x310
	UMirImage* imgDisableSlot; // 0x318
	UMirImage* imgLockSlot; // 0x320
	UMirTextBlock* MirTextBlock_25; // 0x328
	UMirTextBlock* txtTitle; // 0x330
	UMirImage* imgIndicator; // 0x338
	UMirCanvasPanel* canQuest; // 0x340
	UMirImage* imgQuestIcon; // 0x348
	UOverlay* ovlState2; // 0x350
	UMirTextBlock* txtState2; // 0x358
	UMirImage* imgSelectSlot; // 0x360
	UButton* btnMain; // 0x368
	FLinearColor WorldbossColor; // 0x370
	FLinearColor GuildExpeditionColor; // 0x380
	FLinearColor SuppressionColor; // 0x390
	FLinearColor BossSuppressionColor; // 0x3a0
};

struct UMediaTexture {
	TextureAddress AddressX; // 0xd0
	TextureAddress AddressY; // 0xd1
	bool AutoClear; // 0xd2
	FLinearColor ClearColor; // 0xd4
	UMediaPlayer* MediaPlayer; // 0xe8
};

struct UMaterialExpressionAntialiasedTextureMask {
	float Threshold; // 0xf0
	ETextureColorChannel Channel; // 0xf4
};

struct UPaperFlipbook {
	float FramesPerSecond; // 0x28
	TArray<FPaperFlipbookKeyFrame> KeyFrames; // 0x30
	UMaterialInterface* DefaultMaterial; // 0x40
	EFlipbookCollisionMode CollisionSource; // 0x48
};

struct UEndTurnCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMaterialParameterCollectionInstance {
	UMaterialParameterCollection* Collection; // 0x30
};

struct AContentsLightManager {
	ADirectionalLight* m_pUIDirectionalLight; // 0x218
	APointLight* m_pUIPointLight1; // 0x220
	APointLight* m_pUIPointLight2; // 0x228
	AMM_PostProcessVolume* m_pUIPostProcessVolume; // 0x230
	ADirectionalLight* m_pCustomizeDirectionalLight; // 0x238
	APointLight* m_pCustomizePointLight1; // 0x240
	APointLight* m_pCustomizePointLight2; // 0x248
	AMM_PostProcessVolume* m_pCustomizePostProcessVolume; // 0x250
	UContentsLightData* m_pContentsLightData; // 0x278
	EContentsLightType CurrentContentsState; // 0x280
	EPlayerClassID CurrentClassID; // 0x281
};

struct AMM_AnimationTestGameMode {
	UMM_CharacterBaseAnimInstance* m_pNPCAnimInstance; // 0x4b0
};

struct UMM_AnimInstance {
	EFSM_TYPE FSMType; // 0x268
	int32_t SubState; // 0x26c
};

struct UHud_userfunction_Btn {
	UObject* m_SymbolIcon; // 0x2e0
	UWidgetAnimation* m_AniClick; // 0x2e8
	UImage* m_ImgSymbolIcon; // 0x2f0
	UMirTextBlock* Txt_BtnDesc; // 0x2f8
	UMirImage* m_ImgBg; // 0x300
	UMirImage* m_ImgBgShadow; // 0x308
	UMirButton* m_BtnMain; // 0x310
};

struct UMM_Common_Btn_Inven {
	UMirTextBlock* m_Txt_TabName; // 0x2f8
	UMirTextBlock* m_Txt_TabCount; // 0x300
	UMirImage* m_Img_SelectedBar; // 0x308
	UPanelWidget* m_Grid_Effect; // 0x310
	UMirImage* m_Img_Indicator; // 0x318
	UMirButton* m_Btn_Main; // 0x320
};

struct UTextureRenderTargetCube {
	int32_t SizeX; // 0xd8
	FLinearColor ClearColor; // 0xdc
	EPixelFormat OverrideFormat; // 0xec
	char bHDR : 1; // 0xed
	char bForceLinearGamma : 1; // 0xed
};

struct UMM_Item_Make_List_Slot {
	UEffectWidgetBase* m_pSelectSlotEffect; // 0x300
	UMM_Slot_Registered* Slot_Main; // 0x308
	UTextBlock* Txt_Name; // 0x310
	UPanelWidget* Grid_ReqLevel; // 0x318
	UMirTextBlock* Txt_ReqLevel_Title; // 0x320
	UMirTextBlock* Txt_ReqLevel; // 0x328
	UImage* Img_Select; // 0x330
	UButton* Btn_Slot; // 0x338
	int32_t m_MakeTID; // 0x340
	UPanelWidget* Panel_Lock; // 0x348
	UPanelWidget* m_Effect_Panel; // 0x350
	int32_t SLOT_EFFECT_INDEX; // 0x358
	int32_t STR_ID_PACKAGECOUNT; // 0x35c
	int32_t STR_ID_REQLEVEL_TITLE; // 0x360
	int32_t STR_ID_REQLEVEL; // 0x364
	UMirImage* Img_Equiped; // 0x368
	int32_t STR_ID_STACKCOUNT; // 0x370
	int32_t ItemTID; // 0x374
};

struct UMM_Slot_GetHistory {
	UMirImage* m_Img_SlotBg_Normal; // 0x2e0
	UMirImage* m_Img_SlotBg_Guild; // 0x2e8
	UMirImage* m_Img_CostIcon; // 0x2f0
	UMirTextBlock* m_Txt_CostValue; // 0x2f8
};

struct UParticleModuleVelocityInheritParent {
	FRawDistributionVector Scale; // 0x38
};

struct UBlockScreenWidget {
	UPanelWidget* m_Can_Main; // 0x338
	UWidget* m_Throbber; // 0x340
	UWidgetAnimation* m_Ani_LoadingThrobber; // 0x348
};

struct UMM_GameOption_Language {
	UWrapBox* wb_language; // 0x2e0
};

struct UMM_Skill_DeckSlot {
	FLinearColor SkillIconTintColor; // 0x2f0
	int32_t LearnSuccessEffectID; // 0x300
	int32_t levelUpEffectID; // 0x304
	int32_t SlotTouchEffectID; // 0x308
	int32_t SelectedSlotEffectID; // 0x30c
	int32_t RegisterSkillEffectID; // 0x310
	int32_t UnRegisterSkillEffectID; // 0x314
	int32_t PassiveSkillEffectID; // 0x318
	UMirImage* m_Img_MainSkill; // 0x320
	UMirImage* m_Img_SkillIcon; // 0x328
	UMirImage* m_Img_Lock; // 0x330
	UMirTextBlock* m_Txt_SlotIndex; // 0x338
	UPanelWidget* m_Grid_Effect; // 0x340
	UPanelWidget* m_Grid_LevelUpEffect; // 0x348
	UPanelWidget* m_Grid_AwakenEffect; // 0x350
	UMirButton* m_Btn_Main; // 0x358
	UMM_Common_Btn_Symbol* m_CB_Remove; // 0x360
	UMM_Common_Btn_Symbol* m_CB_Detail; // 0x368
	UPanelWidget* m_Grid_Set; // 0x370
	UMirButton* m_Btn_Set; // 0x378
	UEffectWidgetBase* m_LearnSuccessEffect; // 0x380
	UEffectWidgetBase* m_LevelUpEffect; // 0x388
	UEffectWidgetBase* m_AwakenEffect; // 0x390
	UEffectWidgetBase* m_SlotTouchEffect; // 0x398
	UEffectWidgetBase* m_SelectedEffect; // 0x3a0
	UEffectWidgetBase* m_RegisterEffect; // 0x3a8
	UEffectWidgetBase* m_UnRegisterEffect; // 0x3b0
	UEffectWidgetBase* m_PassiveEffect; // 0x3b8
	UMirImage* m_Img_LevelBG; // 0x3c0
	UMirTextBlock* m_Txt_Level; // 0x3c8
};

struct UMM_Item_Make_Info {
	int32_t LackOfMoneyStrID; // 0x2f0
	int32_t LackOfMaterialStrID; // 0x2f4
	UMM_Item_Make_Slot_Registered* Slot_MakeItem; // 0x2f8
	TArray<UMM_MakeItem_Slot_Special*> Slot_Material; // 0x300
	UMM_Item_Make_Slot_Registered* Slot_LuckyItem; // 0x310
	UMM_Item_Make_Slider* Pro_MakeBar; // 0x318
	UPanelWidget* Grid_NeedCost1; // 0x320
	UPanelWidget* Grid_NeedCost2; // 0x328
	UMirImage* Img_NeedCost1; // 0x330
	UMirTextBlock* Txt_NeedCost1; // 0x338
	UMM_Common_Btn_Symbol* Btn_NeedCost1; // 0x340
	UMirButton* BtnMain_NeedCost1; // 0x348
	UMirTextBlock* Txt_NeedCost1_2; // 0x350
	UMirImage* Img_NeedCost2; // 0x358
	UMirTextBlock* Txt_NeedCost2; // 0x360
	UMM_Common_Btn_Symbol* Btn_NeedCost2; // 0x368
	UMirButton* BtnMain_NeedCost2; // 0x370
	UMirCanvasPanel* Panel_Bottom; // 0x378
	UMM_Common_Btn_Symbol* Btn_HistoryBack; // 0x380
	UMirTextBlock* Txt_HistoryBackTitle; // 0x388
	UMM_Common_Btn* Btn_Make; // 0x390
	UPanelWidget* DecoEffectPanel; // 0x398
	UWidgetAnimation* m_Ani_GreatSuccess; // 0x3a0
	UPanelWidget* m_GreatSuccessEffect; // 0x3a8
	float m_AniTime_GreatSuccess; // 0x3b0
	FTimerHandle m_AniEndTimer; // 0x3b8
	uint32_t mMakeItemID; // 0x3c0
	UMirCanvasPanel* Panel_Effect_Basic; // 0x3c8
	UMirCanvasPanel* Panel_Effect_Red; // 0x3d0
	UMirCanvasPanel* Deco_Effect_Red; // 0x3d8
	UMirCanvasPanel* Panel_SuccessInfo; // 0x3e0
	UMirTextBlock* Txt_SuccessPercent; // 0x3e8
	UMirCanvasPanel* Panel_Lucky; // 0x3f0
	int32_t m_CostType_2; // 0x3f8
	int32_t m_CostType_3; // 0x3fc
	UMirScaleBox* Panel_Period; // 0x400
	UVerticalBox* Panel_ResetCount; // 0x408
	UMirCanvasPanel* Panel_ResetInfo; // 0x410
	UMirCanvasPanel* Panel_ResetSchedule; // 0x418
	UMirRichTextBlock* Txt_PeriodTime; // 0x420
	UMirTextBlock* Txt_Title_Reset; // 0x428
	UMirTextBlock* Txt_ResetCount; // 0x430
	UMirRichTextBlock* Txt_MakeAndTryCount; // 0x438
	UMirRichTextBlock* Txt_ResetSchedule; // 0x440
	UMirCanvasPanel* Panel_Notice_NOMake; // 0x448
	UMM_Common_Board_Notice* C_Board_Notice; // 0x450
	UVerticalBox* Panel_Notice_MinReserve; // 0x458
	UMirTextBlock* Txt_Notice_MinReserve; // 0x460
	UMirRichTextBlock* RTxt_Notice_MinReserve; // 0x468
};

struct UMM_PopUp_AcquiredItemSlot {
	UMirTextBlock* txt_rank; // 0x2e0
	UMirImage* img_rank; // 0x2e8
	UMirImage* Img_Icon; // 0x2f0
	UMirTextBlock* txt_level; // 0x2f8
	UMirTextBlock* txt_nickname; // 0x300
	UScrollBox* sb_item; // 0x308
};

struct AMM_UIPreviewMode {
	UMaterialParameterCollection* m_pBackgroundParamCollection; // 0x330
	AMM_Monster* m_pFriendMonster; // 0x338
	AMM_CharacterPawnBase* m_pSelectTarget; // 0x340
	AMM_CharacterPawnBase* m_pLockOnTarget; // 0x348
	bool EndLevelTravel; // 0x350
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x400
	AMM_SituationDirectiveEffect* SituationDirectiveActor; // 0x408
	TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>> MapQuestArrivalDisplayActor; // 0x410
	AMM_HQPlayerReferenceActor* m_pHQPlayer; // 0x460
	AMM_PortraitCaptureActor* m_pPortraitCaptureActor; // 0x468
	UCanvasRenderTarget2D* m_pPlayerPortraitRenderTarget; // 0x470
	AContentsLightManager* m_pContentsLightManager; // 0x478
	FString MyEditorCulture; // 0x490
};

struct UActorComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct AMonsterSpawner {
	int32_t m_MonsterID; // 0x278
	int32_t m_MonsterOrderID; // 0x27c
	AMonsterGroupTrigger* m_MonsterGroup; // 0x280
	AMonsterGroupTrigger* m_prevMonsterGroup; // 0x288
	AMM_Monster* m_pMonster; // 0x290
};

struct UMM_Popup_ServerVisit_Members {
	UMirScrollBox* m_ScrollBox; // 0x2f0
	UMM_Common_Btn_Symbol* m_BtnClose; // 0x2f8
};

struct UNavigationSystemV1 {
	ANavigationData* MainNavData; // 0x28
	ANavigationData* AbstractNavData; // 0x30
	FName DefaultAgentName; // 0x38
	UClass* CrowdManagerClass; // 0x40
	char bAutoCreateNavigationData : 1; // 0x68
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x68
	char bAllowClientSideNavigation : 1; // 0x68
	char bShouldDiscardSubLevelNavData : 1; // 0x68
	char bTickWhilePaused : 1; // 0x68
	char bSupportRebuilding : 1; // 0x68
	char bInitialBuildingLocked : 1; // 0x68
	char bSkipAgentHeightCheckWhenPickingNavData : 1; // 0x69
	ENavDataGatheringModeConfig DataGatheringMode; // 0x6c
	char bGenerateNavigationOnlyAroundNavigationInvokers : 1; // 0x70
	float ActiveTilesUpdateInterval; // 0x74
	TArray<FNavDataConfig> SupportedAgents; // 0x78
	FNavAgentSelector SupportedAgentsMask; // 0x88
	char bUpdateNavModifierVolumeOnLoad : 1; // 0x8c
	TArray<ANavigationData*> NavDataSet; // 0x90
	TArray<ANavigationData*> NavDataRegistrationQueue; // 0xa0
	FScriptMulticastDelegate OnNavDataRegisteredEvent; // 0xc0
	FScriptMulticastDelegate OnNavigationGenerationFinishedDelegate; // 0xd0
	FNavigationSystemRunMode OperationMode; // 0x1bc
	float DirtyAreasUpdateFreq; // 0x514
};

struct UMM_PawnMovementComponent {
	AMM_CharacterPawnBase* OwnerPawn; // 0x138
	FRotator RotationRate; // 0x140
	float MaxWalkSpeed; // 0x14c
	float MaxAcceleration; // 0x150
	bool bScalePushForceToVelocity; // 0x154
	float InitialPushForceFactor; // 0x158
	float PushForceFactor; // 0x15c
	float Deceleration; // 0x160
	float TurningBoost; // 0x164
	float PerchRadiusThreshold; // 0x168
	FPawnMovementComponentPostPhysicsTickFunction PhysicsTickFunction; // 0x1a8
	float WalkableFloorAngle; // 0x270
	float WalkableFloorZ; // 0x274
	float GravityScale; // 0x290
	float MaxStepHeight; // 0x294
	char bUseFlatBaseForFloorChecks : 1; // 0x304
	FVector Acceleration; // 0x308
	bool m_bNeedCheckMonsterUp; // 0x350
	bool m_bMonsterUp; // 0x351
	bool m_bNeedBaseUpdate; // 0x352
	FHitResult m_FlyHit; // 0x360
	char bHasRequestedVelocity : 1; // 0x3e8
	char bMaintainHorizontalGroundVelocity : 1; // 0x3e8
	EMovementMode GroundMovementMode; // 0x3ec
	EMovementMode m_MovementMode; // 0x3ed
	EMovementMode DefaultLandMovementMode; // 0x3ee
	EPhysicalSurface PhysSurfaceState; // 0x3ef
};

struct AMM_PlayerController {
	float m_MouseWheelValue; // 0x568
	AMM_MainPC* PC; // 0x570
};

struct UTimeSynchronizationSource {
	bool bUseForSynchronization; // 0x28
	int32_t FrameOffset; // 0x2c
};

struct UMovieSceneImageCaptureProtocolBase {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UMM_Slot_New_Ranking_Reward_Buff {
	UMirImage* m_pImgItem; // 0x2e0
	UMirTextBlock* m_pTxtItemName; // 0x2e8
	UMirTextBlock* m_pTxtItemValue; // 0x2f0
};

struct ACullDistanceVolume {
	ECullDistanceVolumePresetType PresetType; // 0x250
	TArray<FCullDistanceSizePair> CullDistances; // 0x258
	char bEnabled : 1; // 0x268
};

struct APhaseAreaTrigger {
	float m_Radius; // 0x278
	float m_Height; // 0x27c
	int32_t m_BoxCollisionLength; // 0x280
};

struct UMM_Occupation_BattleStart {
	UPanelWidget* m_Grd_Count; // 0x2e0
	UPanelWidget* m_Grd_Start; // 0x2e8
	UPanelWidget* m_Grd_BattleName; // 0x2f0
	UImage* m_Img_Count_Num; // 0x2f8
	UTextBlock* m_Txt_OccupationStageName; // 0x300
	UWidgetAnimation* m_AniStart; // 0x310
	UWidgetAnimation* m_AniCount; // 0x318
	UWidgetAnimation* m_AniBattleName; // 0x320
};

struct UMM_Costume_PartsViewer {
	TArray<UMM_Costume_Slot_EquipInfo*> CostumeEquipSlotList; // 0x2f0
};

struct UBrushBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UMM_Popup_GatherList {
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x2e8
	UMirTextBlock* m_pTxtRewardCount; // 0x2f0
	UMirTextBlock* m_pTxtTitle; // 0x2f8
	UMirScrollBox* m_pScrollList; // 0x300
};

struct AMM_NetPC {
	bool m_bPoolingObject; // 0xb98
};

struct UMM_CharAbility_Info_Training {
	TArray<UMirTextBlock*> arrTxtLevel; // 0x300
	UMirTextBlock* Txt_Hidden_1; // 0x310
	UMirTextBlock* Txt_Hidden_2; // 0x318
	int32_t STR_GRADE; // 0x320
	int32_t STR_NOFORCE; // 0x324
	int32_t STR_NOSTEP; // 0x328
	int32_t STR_STEP; // 0x32c
};

struct ULandscapeMaterialInstanceConstant {
	char bIsLayerThumbnail : 1; // 0x1d8
	char bDisableTessellation : 1; // 0x1d8
	char bMobile : 1; // 0x1d8
	char bEditorToolUsage : 1; // 0x1d8
};

struct ASplineMeshActor {
	USplineMeshComponent* SplineMeshComponent; // 0x218
};

struct UMM_Mastery_UpgradeInfo {
	UMirTextBlock* mTxtCurTitle; // 0x2e0
	UHorizontalBox* mNextTitlePanel; // 0x2e8
	UMirTextBlock* mTxtNextTitle; // 0x2f0
	UMM_Common_Btn_Symbol* m_CB_Detail; // 0x2f8
};

struct UAnimMontage {
	FAlphaBlend BlendIn; // 0xa8
	float BlendInTime; // 0xd8
	FAlphaBlend BlendOut; // 0xe0
	float BlendOutTime; // 0x110
	float BlendOutTriggerTime; // 0x114
	FName SyncGroup; // 0x118
	int32_t SyncSlotIndex; // 0x120
	FMarkerSyncData MarkerData; // 0x128
	TArray<FCompositeSection> CompositeSections; // 0x148
	TArray<FSlotAnimationTrack> SlotAnimTracks; // 0x158
	TArray<FBranchingPoint> BranchingPoints; // 0x168
	bool bEnableRootMotionTranslation; // 0x178
	bool bEnableRootMotionRotation; // 0x179
	bool bEnableAutoBlendOut; // 0x17a
	ERootMotionRootLock RootMotionRootLock; // 0x17b
	TArray<FBranchingPointMarker> BranchingPointMarkers; // 0x180
	TArray<int32_t> BranchingPointStateNotifyIndices; // 0x190
	FTimeStretchCurve TimeStretchCurve; // 0x1a0
	FName TimeStretchCurveName; // 0x1c8
};

struct UMaterialExpressionRuntimeVirtualTextureSampleParameter {
	FName ParameterName; // 0x78
	FGuid ExpressionGUID; // 0x80
	FName Group; // 0x90
};

struct UMM_Popup_Immediate_Confirm {
	URichTextBox* m_RTxtNotice; // 0x300
	UMM_Common_Btn* m_CBCancel; // 0x308
	UMM_Common_Btn_Cost* m_CBImmediateMove; // 0x310
};

struct UMM_Xdraco_InvenLeft {
	UMM_NewInventoryTab* m_InvenTab; // 0x2e8
	UMM_NewInventory* m_Inven; // 0x2f0
	UMirTextBlock* m_Txt_InvenCount; // 0x2f8
	UMM_SortListBtn* m_SortListBtn; // 0x300
	UMirButton* m_Btn_Refresh; // 0x308
};

struct UNavCollision {
	TArray<FNavCollisionCylinder> CylinderCollision; // 0x80
	TArray<FNavCollisionBox> BoxCollision; // 0x90
	UNavArea* AreaClass; // 0xa0
	char bGatherConvexGeometry : 1; // 0xa8
	char bCreateOnClient : 1; // 0xa8
};

struct UAsyncActionLoadPrimaryAssetList {
	FScriptMulticastDelegate Completed; // 0x78
};

struct UMM_ServerVisit_Waypoint_Category {
	UMirImage* m_Img_Bg_Select; // 0x2f0
	UMirImage* m_Img_Arrow; // 0x2f8
	UMirTextBlock* m_Txt_Name; // 0x300
	UMirButton* m_Btn_Main; // 0x308
	UVerticalBox* m_Vrt_Waypoint; // 0x310
	TArray<UMM_ServerVisit_WaypointList_Slot*> m_arWaypointSlot; // 0x318
};

struct UInterpToMovementComponent {
	float Duration; // 0xf0
	char bPauseOnImpact : 1; // 0xf4
	bool bSweep; // 0xf8
	ETeleportType TeleportType; // 0xf9
	EInterpToBehaviourType BehaviourType; // 0xfa
	bool bCheckIfStillInWorld; // 0xfb
	char bForceSubStepping : 1; // 0xfc
	FScriptMulticastDelegate OnInterpToReverse; // 0x100
	FScriptMulticastDelegate OnInterpToStop; // 0x110
	FScriptMulticastDelegate OnWaitBeginDelegate; // 0x120
	FScriptMulticastDelegate OnWaitEndDelegate; // 0x130
	FScriptMulticastDelegate OnResetDelegate; // 0x140
	float MaxSimulationTimeStep; // 0x150
	int32_t MaxSimulationIterations; // 0x154
	TArray<FInterpControlPoint> ControlPoints; // 0x158
};

struct UParticleModuleLocationBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UIAPSteamStoreModule {
	FIAPUserRequestData m_UserRequestProductData; // 0x58
	FIAPProductData m_PurchaseProductData; // 0x98
	TArray<EIAPPurchaseState> m_PurchaseInProgress; // 0x138
	TArray<FString> ProcessedTransactionIDs; // 0x148
	TArray<FString> ProcessedTransactionReceipts; // 0x158
	FTimerHandle DelayHideBlockScreenTimeHandle; // 0x168
	TMap<FString, FIAPMarketProductData> m_MarketProductDataMap; // 0x170
};

struct AMiniGame_BackgroundActor {
	AMiniGame_ManagerActor* m_MiniGameActor; // 0x218
};

struct UMM_Slot_Simple_Cnt {
	UMirImage* m_ImgDisabled; // 0x3e8
	UMirImage* m_ImgPlus; // 0x3f0
	UMirImage* m_ImgTierBg; // 0x3f8
	UMirTextBlock* txt_count; // 0x400
	UPanelWidget* grid_item; // 0x408
	UMirImage* m_Img_Attribution; // 0x410
};

struct APlayerController {
	UPlayer* Player; // 0x290
	APawn* AcknowledgedPawn; // 0x298
	UInterpTrackInstDirector* ControllingDirTrackInst; // 0x2a0
	AHUD* MyHUD; // 0x2a8
	APlayerCameraManager* PlayerCameraManager; // 0x2b0
	APlayerCameraManager* PlayerCameraManagerClass; // 0x2b8
	bool bAutoManageActiveCameraTarget; // 0x2c0
	FRotator TargetViewRotation; // 0x2c4
	float SmoothTargetViewRotationSpeed; // 0x2dc
	TArray<AActor*> HiddenActors; // 0x2e8
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x2f8
	float LastSpectatorStateSynchTime; // 0x30c
	FVector LastSpectatorSyncLocation; // 0x310
	FRotator LastSpectatorSyncRotation; // 0x31c
	int32_t ClientCap; // 0x328
	UCheatManager* CheatManager; // 0x330
	UCheatManager* CheatClass; // 0x338
	UPlayerInput* PlayerInput; // 0x340
	TArray<FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x348
	char bPlayerIsWaiting : 1; // 0x3c8
	char NetPlayerIndex; // 0x3cc
	UNetConnection* PendingSwapConnection; // 0x408
	UNetConnection* NetConnection; // 0x410
	float InputYawScale; // 0x424
	float InputPitchScale; // 0x428
	float InputRollScale; // 0x42c
	char bShowMouseCursor : 1; // 0x430
	char bEnableClickEvents : 1; // 0x430
	char bEnableTouchEvents : 1; // 0x430
	char bEnableMouseOverEvents : 1; // 0x430
	char bEnableTouchOverEvents : 1; // 0x430
	char bForceFeedbackEnabled : 1; // 0x430
	float ForceFeedbackScale; // 0x434
	TArray<FKey> ClickEventKeys; // 0x438
	EMouseCursor DefaultMouseCursor; // 0x448
	EMouseCursor CurrentMouseCursor; // 0x449
	ECollisionChannel DefaultClickTraceChannel; // 0x44a
	ECollisionChannel CurrentClickTraceChannel; // 0x44b
	float HitResultTraceDistance; // 0x44c
	uint16_t SeamlessTravelCount; // 0x450
	uint16_t LastCompletedSeamlessTravelCount; // 0x452
	UInputComponent* InactiveStateInputComponent; // 0x4c8
	char bShouldPerformFullTickWhenPaused : 1; // 0x4d0
	UTouchInterface* CurrentTouchInterface; // 0x4e8
	ASpectatorPawn* SpectatorPawn; // 0x540
	bool bIsLocalPlayerController; // 0x54c
	FVector SpawnLocation; // 0x550
};

struct UMaterialExpressionAppendVector {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UMM_Hud_Chat_MacroSlot {
	int32_t GuideMsgTid; // 0x300
	int32_t SubmitMsgTID; // 0x304
	int32_t CheckEmptyTextMsgTID; // 0x308
	UTextBlock* m_Txt_Number; // 0x310
	UEditableText* m_EditTxt_MacroMessage; // 0x318
	UMM_Common_Btn* m_Btn_Submit; // 0x320
	FText m_MacroText; // 0x328
	int32_t m_SlotIndex; // 0x340
};

struct USlateSettings {
	bool bExplicitCanvasChildZOrder; // 0x28
};

struct AGeometryCollectionRenderLevelSetActor {
	UVolumeTexture* TargetVolumeTexture; // 0x218
	UMaterial* RayMarchMaterial; // 0x220
	float SurfaceTolerance; // 0x228
	float Isovalue; // 0x22c
	bool Enabled; // 0x230
	bool RenderVolumeBoundingBox; // 0x231
};

struct UMM_Skill_DeckBtnTab {
	UMirButton* m_BtnDeck; // 0x2f0
	UMirTextBlock* m_TxtDeck; // 0x2f8
	UMirImage* m_ImgLock; // 0x300
	UMirImage* m_ImgSelect; // 0x308
};

struct UMM_Popup_Addressbook {
	int32_t STRING_SEARCH_HINT_ID; // 0x2f0
	UMirEditableText* m_EditableTxt_NickName; // 0x2f8
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x300
	UMM_Common_Btn_Symbol* m_C_Btn_Search; // 0x308
	UMirListView* m_ListView_AddressList; // 0x310
	UMM_Common_Board_Notice* m_C_Empty_Notice; // 0x318
	UMM_Popup_Addressbook_TabSlot* m_TabSlot[0x2]; // 0x320
	TArray<UAddressbookSlotObj*> m_arAddressSlotObj; // 0x330
};

struct UOverlay {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UGeometryCollectionCache {
	FRecordedTransformTrack RecordedData; // 0x28
	UGeometryCollection* SupportedCollection; // 0x38
	FGuid CompatibleCollectionState; // 0x40
};

struct UComponentDelegateBinding {
	TArray<FBlueprintComponentDelegateBinding> ComponentDelegateBindings; // 0x28
};

struct UInputKeySelector {
	FButtonStyle WidgetStyle; // 0x108
	FTextBlockStyle TextStyle; // 0x380
	FInputChord SelectedKey; // 0x5e8
	FSlateFontInfo Font; // 0x608
	FMargin Margin; // 0x658
	FLinearColor ColorAndOpacity; // 0x668
	FText KeySelectionText; // 0x678
	FText NoKeySpecifiedText; // 0x690
	bool bAllowModifierKeys; // 0x6a8
	bool bAllowGamepadKeys; // 0x6a9
	TArray<FKey> EscapeKeys; // 0x6b0
	FScriptMulticastDelegate OnKeySelected; // 0x6c0
	FScriptMulticastDelegate OnIsSelectingKeyChanged; // 0x6d0
};

struct USoundEffectSourcePresetChain {
	TArray<FSourceEffectChainEntry> Chain; // 0x28
	char bPlayEffectChainTails : 1; // 0x38
};

struct UNamedInterfaces {
	TArray<FNamedInterface> NamedInterfaces; // 0x28
	TArray<FNamedInterfaceDef> NamedInterfaceDefs; // 0x38
};

struct UMM_Btn_HudDirAvoid {
	TArray<FBrushObject> m_arrIconBrush; // 0x348
	float m_fShowVirtualPadDelayTime; // 0x358
	int32_t m_iEffectID_UseOK; // 0x35c
	TArray<FBrushObject> CoolTimeFonts; // 0x360
	int32_t ClickSound; // 0x370
	UImage* m_pImgIcon; // 0x378
	UImage* m_pImgCooltime; // 0x380
	UButton* m_pBtnArea; // 0x388
	UPanelWidget* m_pGridEffect; // 0x390
	UImage* m_pImg_RoundCooltime; // 0x398
	UImage* ImageCool; // 0x3a0
	UMaterialInstanceDynamic* MaterialInstanceDynamicCool; // 0x3a8
	UImage* ImageCoolTimeCount_2; // 0x3b0
	UImage* ImageCoolTimeCount_11; // 0x3b8
	UImage* ImageCoolTimeCount_101; // 0x3c0
	UAlignedWrapBox* AlignedWrapBoxCoolFont; // 0x3c8
	UMirImage* ImgSilence; // 0x3d0
};

struct USubmixEffectTapDelayPreset {
	FSubmixEffectTapDelaySettings Settings; // 0x80
};

struct UMM_PCAnimInstance {
	AMM_PC* PC; // 0x2b0
};

struct UMM_DominionMemberSlot {
	UMirTextBlock* m_pTxtClass; // 0x2e0
	UMirTextBlock* m_pTxtName; // 0x2e8
	UMM_GuildMemberPortrait* m_pPortrait; // 0x2f0
	UMirButton* m_pBtnClick; // 0x2f8
};

struct UMM_Popup_TownNPCPosition {
	UMM_Common_Btn_Symbol* m_Btn_Exit; // 0x2f0
	UMirTextBlock* m_Txt_StageName; // 0x2f8
	UScrollBox* m_Scr_WaypointList; // 0x300
	UMM_MAP_Waypoint_Category* m_arWaypointCategroy[0x2]; // 0x308
	UMM_Common_Btn* m_CB_Move; // 0x318
	UMM_Common_Btn_Cost* m_CB_Immedi_Move; // 0x320
	UHorizontalBox* m_Hrz_Notice; // 0x328
	UMirRichTextBlock* m_RTxt_Notice; // 0x330
};

struct UMaterialExpressionSphericalParticleOpacity {
	FExpressionInput Density; // 0x40
	float ConstantDensity; // 0x54
};

struct UAISenseConfig_Prediction {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UMM_Slot_DailyWork_Reward {
	UMirCanvasPanel* mPanelEffect; // 0x2e0
	UMirImage* mImgIcon; // 0x2e8
	UMirTextBlock* mTxtItemCount; // 0x2f0
	UMirButton* mBtnSlot; // 0x2f8
};

struct UMM_Revival_Select_Slot {
	UMirImage* Img_Icon; // 0x2e8
	UMirImage* Img_Select; // 0x2f0
	UMirTextBlock* Txt_Name; // 0x2f8
	UMirButton* Btn_Location; // 0x300
	int32_t m_WarpId; // 0x308
};

struct ATriggerInfoExtractor {
	bool m_bTestStart; // 0x218
	bool m_bDeleteTrigger; // 0x219
	float m_FontScale; // 0x21c
};

struct UCompressedImageSequenceProtocol {
	int32_t CompressionQuality; // 0xd8
};

struct APaperTerrainActor {
	USceneComponent* DummyRoot; // 0x218
	UPaperTerrainSplineComponent* SplineComponent; // 0x220
	UPaperTerrainComponent* RenderComponent; // 0x228
};

struct UMM_B_ClassPhase {
	UWidgetSwitcher* m_pWidgetSwitcher; // 0x2f0
	UMM_ClassPhase_SkillInfoSlot* m_pClassPhaseSkillInfo; // 0x2f8
	UMM_ClassPhase_InfoSlot* m_pClassPhaseInfo; // 0x300
	UWidgetBase* m_pCurWidget; // 0x308
	UMirScrollBox* m_pScrollClassList; // 0x310
	UMirButton* m_pBtnPhaseInfo; // 0x318
	UMirButton* m_pBtnPhaseSkillInfo; // 0x320
	UMirImage* m_pImgSelectPhaseTab; // 0x328
	UMirImage* m_pImgSelectSkillTab; // 0x330
	UMM_Common_Btn_Cost* m_pBtnOk; // 0x338
	TArray<UMM_ClassPhase_ClassSlot*> m_arrClassSlot; // 0x340
};

struct UModularSynthComponent {
	int32_t VoiceCount; // 0x650
};

struct UMM_GameOption_InGame_HUD {
	UMM_GameOption_Switch* Option_MyGuildMarkOption; // 0x2e0
	UMM_GameOption_Switch* Option_AllyGuildMarkOption; // 0x2e8
	UMM_GameOption_Switch* Option_OtherGuildMarkOption; // 0x2f0
	UMM_GameOption_Select* Option_MyNameOption; // 0x2f8
	UMM_GameOption_Select* Option_UserNameOption; // 0x300
	UMM_GameOption_Select* Option_MonNameOption; // 0x308
	UMM_GameOption_Switch* Option_CustomTitleOption; // 0x310
};

struct USourceEffectRingModulationPreset {
	FSourceEffectRingModulationSettings Settings; // 0x7c
};

struct UMM_GuildSupportSlot {
	UMM_GuildMemberPortrait* Portrait; // 0x2e0
	UMirTextBlock* txt_nickname; // 0x2e8
	UMirTextBlock* txt_custom_title; // 0x2f0
	UMM_Slot_Material* slot_reward; // 0x2f8
	UMirTextBlock* txt_reward; // 0x300
	UMirProgressBar* pb_count; // 0x308
	UMirTextBlock* txt_count; // 0x310
	UMirImage* img_my_support; // 0x318
};

struct UTutorialGuidWidget {
	int32_t m_NonBGCircleEffectID; // 0x2e0
	int32_t m_BGCircleEffectID; // 0x2e4
	UUserWidget* m_pFingerEffect; // 0x2f0
	UCanvasPanel* m_pCustomEffectWidgetPanel; // 0x2f8
	USizeBox* m_pBox_Left; // 0x300
	USizeBox* m_pBox_Top; // 0x308
	UButton* m_pBtn_Target; // 0x310
	UImage* m_pImg_BgLeft; // 0x318
	UImage* m_pImg_BgTop; // 0x320
	UImage* m_pImg_BgRight; // 0x328
	UImage* m_pImg_BgBottom; // 0x330
	UButton* m_pBtn_Left; // 0x338
	UButton* m_pBtn_Top; // 0x340
	UButton* m_pBtn_Right; // 0x348
	UButton* m_pBtn_Bottom; // 0x350
	UScaleBox* m_pScl_Effect; // 0x358
	UEffectWidgetBase* m_pEffect_Target; // 0x360
	UEffectWidgetBase* m_pCustomEffectWidget; // 0x368
	UImage* m_pImg_GuidBoxRect; // 0x370
	UMirImage* m_pImg_TouchBlock; // 0x378
	UWidget* m_pTargetWidget; // 0x380
	FVector2D m_OldTargetPos; // 0x388
	FVector2D m_OldAbsoluteSize; // 0x390
	FVector2D m_AbsoluteSize; // 0x398
	UWidgetAnimation* ani_effect; // 0x3a0
	UMirCanvasPanel* cp_skip; // 0x3a8
	UMirButton* btn_skip; // 0x3b0
};

struct UParticleModuleBeamNoise {
	char bLowFreq_Enabled : 1; // 0x30
	int32_t Frequency; // 0x34
	int32_t Frequency_LowRange; // 0x38
	FRawDistributionVector NoiseRange; // 0x40
	FRawDistributionFloat NoiseRangeScale; // 0x88
	char bNRScaleEmitterTime : 1; // 0xb8
	FRawDistributionVector NoiseSpeed; // 0xc0
	char bSmooth : 1; // 0x108
	float NoiseLockRadius; // 0x10c
	char bNoiseLock : 1; // 0x110
	char bOscillate : 1; // 0x110
	float NoiseLockTime; // 0x114
	float NoiseTension; // 0x118
	char bUseNoiseTangents : 1; // 0x11c
	FRawDistributionFloat NoiseTangentStrength; // 0x120
	int32_t NoiseTessellation; // 0x150
	char bTargetNoise : 1; // 0x154
	float FrequencyDistance; // 0x158
	char bApplyNoiseScale : 1; // 0x15c
	FRawDistributionFloat NoiseScale; // 0x160
};

struct UMM_Dominion_Base_Slot {
	UMirCanvasPanel* m_pCanvasFlag; // 0x310
	UWidgetSwitcher* m_pSwitchFlag; // 0x318
	UMirImage* m_pImgThumnailBg; // 0x320
	UMirImage* m_pImgMonster; // 0x328
	UMirImage* m_pImgBgMonster; // 0x330
	UMM_GuildIcon* m_pGuildIcon; // 0x338
	UMirImage* m_pImgSelected; // 0x340
	UMirTextBlock* m_pTxtName; // 0x348
	UMirTextBlock* m_pTxtBossAppear; // 0x350
	UMirButton* m_pBtnClick; // 0x358
	UMirImage* m_pImgIndicator; // 0x360
};

struct UIpConnection {
	float SocketErrorDisconnectDelay; // 0x1a10
};

struct AMonsterKillCountTrigger {
	AMonsterGroupTrigger* m_pCheckMonsterGroup; // 0x278
};

struct UMM_UIShopGachaFixedPet {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UMirRichTextBlock* m_Txt_EndTime; // 0x2e8
	UMirImage* m_Img_Pet; // 0x2f0
	UMirTextBlock* m_Txt_PetName; // 0x2f8
	UMirButton* m_Btn_GotoPet; // 0x300
};

struct AMM_AutoBehaviorAIController {
	TArray<int32_t> EnableSkills; // 0x430
	bool HasMoveInput; // 0x440
	FVector StartMoveLocation; // 0x444
	int32_t ReservedSkillID; // 0x450
};

struct UEnvQuery {
	FName QueryName; // 0x30
	TArray<UEnvQueryOption*> Options; // 0x38
};

struct ADirectionalLight {
	ULightComponent* LightComponent; // 0x218
	char bEnabled : 1; // 0x220
};

struct UMM_Popup_Coupon {
	float m_fUnableConfirmBtnTime; // 0x2e0
	UMirButton* m_Btn_Screen; // 0x300
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x308
	UMirEditableText* m_Edit_Input; // 0x310
	UMM_Common_Btn* m_CB_Cancel; // 0x318
	UMM_Common_Btn* m_CB_Confirm; // 0x320
	UWidgetAnimation* m_Ani_Start; // 0x328
	UWidgetAnimation* m_Ani_End; // 0x330
	UMirImage* m_Img_Throbber; // 0x338
	UWidgetAnimation* m_Ani_Throbber; // 0x340
};

struct UMM_GameOption_InGame_Convenience {
	UMM_GameOption_Select* Option_EffectVisual; // 0x2e0
	UMM_GameOption_Select* Option_SleepModeStartTime; // 0x2e8
	UMM_GameOption_Select* Option_PetVisual; // 0x2f0
	UMM_GameOption_Select* Option_CameraMode; // 0x2f8
	UMM_GameOption_Switch* Option_UnSleepModeWhenAttacked; // 0x300
	UMM_GameOption_Switch* Option_PartyUIAutoVisible; // 0x308
	UMM_GameOption_Switch* Option_ComplateQuestSort; // 0x310
	UMM_GameOption_Switch* Option_ComboCounterViewable; // 0x318
	UMM_GameOption_Switch* Option_TradeItemAsk; // 0x320
	UMM_GameOption_Switch* Option_MiniMap; // 0x328
	UMM_GameOption_Switch* Option_HideGuildGiftName; // 0x330
	UMM_GameOption_Switch* Option_PKAlarm; // 0x338
	UMM_GameOption_Switch* Option_CharMaxLevelAlarm; // 0x340
	UMM_GameOption_Switch* Option_ExpBoosterMaxLevelAlarm; // 0x348
	UMirScrollBox* m_Scr_Main; // 0x350
	UMM_GameOption_Switch* Option_ItemSmeltingBreakHero; // 0x358
	UMM_GameOption_Switch* Option_HUDAutoResizing; // 0x360
	UPanelWidget* m_Grid_PingVisible; // 0x368
	UMM_GameOption_Switch* Option_PingVisible; // 0x370
	UMM_GameOption_Switch* Option_PKAutoReverse; // 0x378
};

struct UMM_PopupExpBoosterCharge {
	UMM_Common_Btn_Symbol* btn_close; // 0x2e0
	UMM_Common_Btn* Btn_Cancel; // 0x2e8
	UMM_Common_Btn* btn_confirm; // 0x2f0
	UMM_Item_Make_Slider* Slider; // 0x2f8
	UMirScrollBox* sb_exp_booster; // 0x300
	UMirRichTextBlock* txt_remained_time; // 0x308
	UMirTextBlock* txt_charge_time; // 0x310
};

struct UMM_B_GreatBuilding {
	int32_t m_EndStepUpStr; // 0x2f0
	int32_t m_EndSubStepUpStr; // 0x2f4
	int32_t m_CombatStr; // 0x2f8
	int32_t m_GuildSupportEndStr; // 0x2fc
	int32_t m_BuildingOpenStr; // 0x300
	UMM_BuildingSimpleInfo* m_SimpleInfo; // 0x308
	UWidgetAnimation* m_StartAni; // 0x310
	UMirScrollBox* m_ScrollBox; // 0x318
	UMirButton* m_Btn_Back; // 0x320
	TMap<int32_t, UMM_GreatBuildingMainSlot*> m_BuildingSlots; // 0x328
};

struct UIAPXsollaStoreModule {
	UGameInstanceSubsystem* m_XsollaPayStationSubsystem; // 0x1c0
};

struct UMaterialExpressionGetMaterialAttributes {
	FMaterialAttributesInput MaterialAttributes; // 0x40
	TArray<FGuid> AttributeGetTypes; // 0x58
};

struct UIAPGalaxyStoreModule {
	TArray<FIAPProductData> m_OwnedProductList; // 0x1c0
};

struct UMM_Guild_Icon {
	UImage* m_Img_Bg; // 0x2f0
	UImage* m_Img_Icon; // 0x2f8
	UImage* m_Img_Selected; // 0x300
	UButton* m_Btn_Main; // 0x308
};

struct UMM_Map_Detail {
	float m_fMovingRader_ZoomDelta; // 0x2f0
	float m_fMovingRader_SizeDelta; // 0x2f4
	float m_fMovingRader_SizeLimit; // 0x2f8
	FIconInfo m_Rader_NormalMonster; // 0x2fc
	FIconInfo m_Rader_BossMonster; // 0x308
	FIconInfo m_Rader_NamedMonster; // 0x314
	FIconInfo m_Rader_FieldBossMonster; // 0x320
	FIconInfo m_Rader_WorldBossMonster; // 0x32c
	FIconInfo m_Rader_QuestNPC; // 0x338
	FIconInfo m_Rader_NormalNPC; // 0x344
	FIconInfo m_Rader_SubQuestNPC_MapNpcShowType; // 0x350
	FIconInfo m_Rader_SubQuestNPC_CoordinateShowType; // 0x35c
	FIconInfo m_Rader_NormalPortal; // 0x368
	FIconInfo m_Rader_UnablePortal; // 0x374
	FIconInfo m_Rader_DungeonPortal; // 0x380
	FIconInfo m_Minimap_NamedMonster; // 0x38c
	FIconInfo m_Minimap_BossMonster; // 0x398
	FIconInfo m_Minimap_FieldBossMonster; // 0x3a4
	FIconInfo m_Minimap_WordlBossMonster; // 0x3b0
	FIconInfo m_Minimap_NamedMonster_Deactive; // 0x3bc
	FIconInfo m_Minimap_BossMonster_Deactive; // 0x3c8
	FIconInfo m_Minimap_FieldBossMonster_Deactive; // 0x3d4
	FIconInfo m_Minimap_WordlBossMonster_Deactive; // 0x3e0
	FIconInfo m_Minimap_EliteMode_Type; // 0x3ec
	FIconInfo m_Minimap_EliteMode_Type_Deactive; // 0x3f8
	FIconInfo m_Minimap_Gen_WorldBossMonster; // 0x404
	FIconInfo m_Minimap_Gen_FieldBossMonster; // 0x410
	FIconInfo m_Minimap_QuestNPC; // 0x41c
	FIconInfo m_Minimap_NormalNPC; // 0x428
	FIconInfo m_Minimap_SubQuestNPC_MapNpcShowType; // 0x434
	FIconInfo m_Minimap_SubQuestNPC_CoordinateShowType; // 0x440
	FIconInfo m_Minimap_DefaultNPC; // 0x44c
	FIconInfo m_Minimap_ShopNPC; // 0x458
	FIconInfo m_Minimap_ItemMakeNPC; // 0x464
	FIconInfo m_Minimap_ExchangeNPC; // 0x470
	FIconInfo m_Minimap_BeautySalon; // 0x47c
	FIconInfo m_Minimap_EventNPC; // 0x488
	FIconInfo m_MiniMap_MissionCoordinateIcon; // 0x494
	FIconInfo m_Rader_MissionCoordinateIcon; // 0x4a0
	FIconInfo m_Minimap_RelationCoordinateIcon; // 0x4ac
	FIconInfo m_Rader_RelationCoordinateIcon; // 0x4b8
	FIconInfo m_Minimap_InventoryNPC; // 0x4c4
	FIconInfo m_Minimap_NormalPortal; // 0x4d0
	FIconInfo m_Minimap_UnablePortal; // 0x4dc
	FIconInfo m_Minimap_DungeonPortal; // 0x4e8
	FIconInfo m_Minimap_Area_Default; // 0x4f4
	FIconInfo m_Minimap_Area_2; // 0x500
	FIconInfo m_Minimap_NormalWaypoint; // 0x50c
	FIconInfo m_Minimap_UnableWaypoint; // 0x518
	FIconInfo m_Minimap_MiningZone; // 0x524
	FIconInfo m_Minimap_Gather; // 0x530
	FIconInfo m_Minimap_BMiningZone; // 0x53c
	FIconInfo m_Minimap_JinkiZone; // 0x548
	FIconInfo m_Minimap_MonsterSpawIcon; // 0x554
	FIconInfo m_Minimap_MonsterSpawIcon_Deactive; // 0x560
	FIconInfo m_Minimap_SanctumIcon; // 0x56c
	FIconInfo m_Minimap_SanctumIcon_Deactive; // 0x578
	FIconInfo m_Minimap_DascoMeltingNPC; // 0x584
	int32_t SECTOR_ICON_ID; // 0x590
	int32_t ReserveSound; // 0x594
	UMM_Map_Player* m_Player; // 0x5e0
	TArray<UMM_Map_DeathItem*> m_arrDeathItemList; // 0x5e8
	UMM_Map_Dest* m_Dest; // 0x5f8
	UMM_Map_WaypointDest* m_WaypointDest; // 0x600
	UCanvasPanelSlot* m_pPlayerSlot; // 0x608
	UCanvasPanelSlot* m_pDestSlot; // 0x610
	UCanvasPanelSlot* m_pWaypointDestSlot; // 0x618
	UCanvasPanelSlot* canFieldBossSlot; // 0x620
	UImage* imgFieldBossSlot; // 0x628
	TArray<UImage*> m_arCommonIconImage; // 0x650
	TArray<UMM_Map_NameTag*> m_arNameTag; // 0x660
	TArray<UImage*> m_arStoryQuestNPCIconImage; // 0x690
	TArray<UImage*> m_arSubQuestNPCIconImage; // 0x6a0
	TArray<UImage*> m_arMissionCompleteNPCIconImage; // 0x6b0
	TArray<UImage*> m_arRequestCompleteNPCIconImage; // 0x6c0
	TArray<UImage*> m_arRelationCompleteNPCIconImage; // 0x6d0
	UPanelWidget* m_Grid_Move; // 0x6e0
	UMirButton* m_Btn_Move; // 0x6e8
	UCanvasPanel* m_Can_SectorGrade; // 0x738
	TArray<UMirImage*> m_arSectorGrade; // 0x740
	UCanvasPanel* m_CanIcon; // 0x750
	UMirTextBlock* m_TxtMove; // 0x758
	UImage* m_ImgMap; // 0x760
	UButton* m_BtnMain; // 0x768
	UWidgetAnimation* m_AniMove; // 0x770
	UPanelWidget* m_Grid_ChatMove; // 0x778
	UMirButton* m_Btn_ChatMove; // 0x780
	UCanvasPanelSlot* m_pChatMovetDestSlot; // 0x788
	UMM_Map_WaypointDest* m_ChatMoveDest; // 0x790
	UCanvasPanel* m_Panel_UserName; // 0x798
	UMirRichTextBlock* m_Text_UserName; // 0x7a0
};

struct UEnvQueryTest_Project {
	FEnvTraceData ProjectionData; // 0x1c0
};

struct UMM_ItemCollectEffectSlot {
	UMirTextBlock* m_Txt_Info; // 0x2e8
	UMirImage* Img_LevelUpPoint; // 0x2f0
	UPanelWidget* m_Grid_Effect; // 0x2f8
	int32_t m_PercentFormatStrID; // 0x300
	int32_t m_ValueFormatStrID; // 0x304
	int32_t m_CompleteEffectID; // 0x308
};

struct UMM_Slot_Material_Reward {
	UMirImage* m_ImgComplete; // 0x468
};

struct AMM_HUDBase {
	APlayerController* PlayerOwner; // 0x218
	char bLostFocusPaused : 1; // 0x220
	char bShowHUD : 1; // 0x220
	char bShowDebugInfo : 1; // 0x220
	int32_t CurrentTargetIndex; // 0x224
	char bShowHitBoxDebugInfo : 1; // 0x228
	char bShowOverlays : 1; // 0x228
	char bEnableDebugTextShadow : 1; // 0x228
	TArray<AActor*> PostRenderedActors; // 0x230
	TArray<FName> DebugDisplay; // 0x248
	TArray<FName> ToggledDebugCategories; // 0x258
	UCanvas* Canvas; // 0x268
	UCanvas* DebugCanvas; // 0x270
	TArray<FDebugTextInfo> DebugTextList; // 0x278
	AActor* ShowDebugTargetDesiredClass; // 0x288
	AActor* ShowDebugTargetActor; // 0x290
};

struct UAtmosphericFogComponent {
	float SunMultiplier; // 0x220
	float FogMultiplier; // 0x224
	float DensityMultiplier; // 0x228
	float DensityOffset; // 0x22c
	float DistanceScale; // 0x230
	float AltitudeScale; // 0x234
	float DistanceOffset; // 0x238
	float GroundOffset; // 0x23c
	float StartDistance; // 0x240
	float SunDiscScale; // 0x244
	float DefaultBrightness; // 0x248
	FColor DefaultLightColor; // 0x24c
	char bDisableSunDisk : 1; // 0x250
	char bAtmosphereAffectsSunIlluminance : 1; // 0x250
	char bDisableGroundScattering : 1; // 0x250
	FAtmospherePrecomputeParameters PrecomputeParams; // 0x254
	UTexture2D* TransmittanceTexture; // 0x280
	UTexture2D* IrradianceTexture; // 0x288
};

struct UPaperTerrainMaterial {
	TArray<FPaperTerrainMaterialRule> Rules; // 0x30
	UPaperSprite* InteriorFill; // 0x40
};

struct UParticleModuleSizeScaleBySpeed {
	FVector2D SpeedScale; // 0x30
	FVector2D MaxScale; // 0x38
};

struct UMaterialExpressionAtmosphericFogColor {
	FExpressionInput WorldPosition; // 0x40
};

struct UDeviceProfile {
	FString DeviceType; // 0x38
	FString BaseProfileName; // 0x48
	UObject* Parent; // 0x58
	TArray<FString> CVars; // 0x78
};

struct AMissionFailTrigger {
	FString m_EditorTriggerName; // 0x220
	TArray<AActivateTrigger*> m_pActiveTriggerArray; // 0x230
	int32_t m_TriggerIndex; // 0x240
	ETriggerType m_TriggerType; // 0x244
	bool m_bActiveTriggerCondition; // 0x268
	bool m_bActivated; // 0x269
	AMM_TriggerManager* m_pTriggerManager; // 0x270
};

struct UInterpTrackInstFloatProp {
	float ResetFloat; // 0x40
};

struct UMM_Popup_Filter {
	UWidgetAnimation* m_AniStart; // 0x2e8
	UPanelWidget* m_Hrz_Filter; // 0x2f8
	UPanelWidget* m_Hrz_Option; // 0x300
	UMirTextBlock* m_Txt_Title; // 0x308
	UMirTextBlock* m_Txt_Filter; // 0x310
	UMirTextBlock* m_Txt_Option; // 0x318
	UMM_FilterBtn* m_arFilterBtn[0x3]; // 0x320
	UMM_FilterBtn* m_arOptionBtn; // 0x338
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x340
	UMM_Common_Btn* m_CB_Confirm; // 0x348
	UMM_Common_Btn* m_CB_Cancel; // 0x350
};

struct UBlendSpace1D {
	bool bScaleAnimation; // 0x148
};

struct UInterpTrackLinearColorProp {
	FName PropertyName; // 0x90
};

struct UMM_Common_ToggleBtn {
	EStringTableType m_StringTableType; // 0x350
	int32_t m_StringTableID; // 0x354
	FText m_Text; // 0x358
	bool m_bEnableSubText; // 0x370
	FSlateFontInfo m_Font; // 0x378
	UMirTextBlock* m_TxtMain; // 0x3d0
	UMirTextBlock* m_TxtSub; // 0x3d8
	UMirRichTextBlock* m_RichTxtMain; // 0x3e0
	UPanelWidget* m_EffectPanel; // 0x3e8
	UMirImage* m_Img_Glow; // 0x3f0
};

struct UMM_B_Hud {
	UMM_StrongPoint_HudSlot* m_StrongPointWinTarget; // 0x2f0
	UMM_HudTargetInfo* m_pTargetInfoWidget; // 0x2f8
	UMM_Hud_Chat* m_pChatWidget; // 0x300
	UMM_HudBottom* m_pHudBottomWidget; // 0x308
	UMM_B_HudRightMenu* m_pRightMenu; // 0x310
	UMM_HudQuickSlot* m_QuickSlot; // 0x318
	UMirCanvasPanel* m_pCanTotalQuickSlot; // 0x320
	UMirButton* m_pBtnTotalQuickSlot; // 0x328
	UMM_HudAlramHelperList* m_pAlarmHelper; // 0x330
	UMM_HudUserInfo* m_pUserInfoWidget; // 0x338
	UMM_B_SkillSet* m_pSkillSetWidget; // 0x348
	UMM_HudLeftTabMenu* m_pLeftTabMenuWidget; // 0x358
	UMM_HudProgressBar* m_pProgressBarWidget; // 0x360
	TWeakObjectPtr<UMM_HudMiniMap> m_pMiniMapWidget; // 0x368
	UMM_HudMapInfo* m_pMapInfoWidget; // 0x370
	UCanvasPanel* m_pCanInteractionSize; // 0x378
	UMM_HUDVirtualJoystick* m_pHUDVirtualJoystick; // 0x380
	UMirCanvasPanel* m_pCanAutoMoveDistance; // 0x388
	UMirTextBlock* m_pTextAutoMoveDistance; // 0x390
	UMirCanvasPanel* m_pCanImmediateMove; // 0x398
	UButton* m_pBtnImmediateMove; // 0x3a0
	UMirTextBlock* m_pTxtImmediateMove; // 0x3a8
	UMM_Hud_Invite_Alarm* m_pHudInviteAlarm; // 0x3b0
	TWeakObjectPtr<UMM_HudDungeonMenu> m_pHudDungeonMenuWidget; // 0x3b8
	TWeakObjectPtr<UMM_HudMagicSquareMenu> m_pHudMagicSquareMenuWidget; // 0x3c0
	TWeakObjectPtr<UMM_HudOccupationMenu> m_pHudOccupationMenuWidget; // 0x3c8
	TWeakObjectPtr<UMM_SkillVirtualStick> m_pSkillVirtualStick; // 0x3d0
	UCanvasPanel* m_pLeftBottomGroup; // 0x3d8
	UAlignedWrapBox* m_pHudMenuGroup01; // 0x3e0
	UMirCanvasPanel* m_pCanMenuGuild; // 0x3e8
	UMirImage* m_pImgIndicatorGuild; // 0x3f0
	UMirButton* m_pBtnMenuGuild; // 0x3f8
	UPanelWidget* m_pGridMenuEffectGuild; // 0x400
	UMirCanvasPanel* m_pCanMenuMission; // 0x408
	UMirImage* m_pImgIndicatorMission; // 0x410
	UMirButton* m_pBtnMenuMission; // 0x418
	UPanelWidget* m_pGridMenuEffectMission; // 0x420
	UMirCanvasPanel* m_pCanMenuEquip; // 0x428
	UMirImage* m_pImgIndicatorEquip; // 0x430
	UMirButton* m_pBtnMenuEquip; // 0x438
	UPanelWidget* m_pGridMenuEffectEquip; // 0x440
	UMirImage* m_pImgDurabilityBGEquip; // 0x448
	UMirImage* m_pImgDurabilityIconEquip; // 0x450
	UMirTextBlock* m_pTxtDurabilityEquip; // 0x458
	UMirCanvasPanel* m_pCanMenuAlarm; // 0x460
	UMirImage* m_pImgIndicatorAlarm; // 0x468
	UMirTextBlock* m_pTextIndicatorAlarm; // 0x470
	UMirButton* m_pBtnMenuAlarm; // 0x478
	UPanelWidget* m_pGridMenuEffectAlarm; // 0x480
	UEffectWidgetBase* m_pEffectWidgetAlarm; // 0x488
	UMirCanvasPanel* m_pCanMenuTotal; // 0x490
	UMirImage* m_pImgIndicatorTotal; // 0x498
	UMirButton* m_pBtnMenuTotal; // 0x4a0
	UHorizontalBox* m_pHudMenuGroup02; // 0x4a8
	UMirCanvasPanel* m_pCanMenuMail; // 0x4b0
	UMirImage* m_pImgIndicatorMail; // 0x4b8
	UMirButton* m_pBtnMenuMail; // 0x4c0
	UPanelWidget* m_pGridMenuEffectMail; // 0x4c8
	UMirCanvasPanel* m_pCanMenuShop; // 0x4d0
	UMirImage* m_pImgIndicatorShop; // 0x4d8
	UMirButton* m_pBtnMenuShop; // 0x4e0
	UPanelWidget* m_pGridMenuEffectShop; // 0x4e8
	UMirCanvasPanel* m_pCanMenuShopAds; // 0x4f0
	UMirImage* m_pImgIndicatorShopAds; // 0x4f8
	UMirButton* m_pBtnMenuShopAds; // 0x500
	UPanelWidget* m_pGridMenuEffectShopAds; // 0x508
	UMirCanvasPanel* m_pCanMenuEvent; // 0x510
	UMirButton* m_pBtnMenuEvent; // 0x518
	UMirImage* m_pImgIndicatorEvent; // 0x520
	UPanelWidget* m_pGridMenuEffectEvent; // 0x528
	UMirCanvasPanel* m_pCanGuildSupport; // 0x530
	UMirButton* m_pBtn_GuildSupport; // 0x538
	UMirTextBlock* m_pTextGuildSupport; // 0x540
	UMirTextBlock* m_pTextExpBooster; // 0x548
	UMirButton* m_pBtn_ExpBooster; // 0x550
	UPanelWidget* m_pGridMenuEffectExpBooster; // 0x558
	UEffectWidgetBase* m_pEffectWidgetExpBoosterActive; // 0x560
	UEffectWidgetBase* m_pEffectWidgetExpBoosterInActive; // 0x568
	UMirButton* m_pBtnEmotion; // 0x570
	UPanelWidget* m_pGridBtnEffectEmotion; // 0x578
	UMirButton* m_pBtnChat; // 0x580
	UMirImage* m_pImgIndicatorChat; // 0x588
	UMirTextBlock* m_pTextIndicatorChat; // 0x590
	UPanelWidget* m_pGridBtnEffectChat; // 0x598
	UMirButton* m_pBtnChangeCamera; // 0x5a0
	UMirTextBlock* m_pTextChangeCamera; // 0x5a8
	UPanelWidget* m_pGridBtnEffectChangeCamera; // 0x5b0
	UMirCanvasPanel* m_pCanBtnVehicle; // 0x5b8
	UImage* m_pImgVehicleCool; // 0x5c0
	UMirButton* m_pBtnVehicle; // 0x5c8
	UPanelWidget* m_pGridBtnEffectVehicle; // 0x5d0
	UMM_Hud_PKPenalty* m_HudPKPenalty; // 0x5d8
	UMM_HudTargetList* m_HudTargetList; // 0x5e0
	UMM_Hud_ChannelReady* m_HudChannelReady; // 0x5e8
	UMirCanvasPanel* m_pCanAutoBattleButton; // 0x5f8
	UMirImage* m_pImgAutoBattleButton; // 0x600
	UPanelWidget* m_pGridEffectAutoBattleButton; // 0x608
	UEffectWidgetBase* m_pEffectAutoBattleOn; // 0x610
	UMirButton* m_pBtnAutoBattle; // 0x618
	UMirCanvasPanel* m_pCanAutoGatherButton; // 0x620
	UMirImage* m_pImgAutoGatherButton; // 0x628
	UPanelWidget* m_pGridEffectAutoGatherButton; // 0x630
	UEffectWidgetBase* m_pEffectAutoGatherOn; // 0x638
	UMirButton* m_pBtnAutoGather; // 0x640
	UMirCanvasPanel* AutoCounterPanel; // 0x648
	UMirButton* AutoCounterButton; // 0x650
	UPanelWidget* AutoCounterEffectParent; // 0x658
	UEffectWidgetBase* AutoCounterEffect; // 0x660
	USpacer* m_Spc_ContentsSpace; // 0x668
	UScaleBox* m_HudScaleBox; // 0x670
	USizeBox* m_HudSiszeBox; // 0x678
	UMM_HudPetBuffIcon* m_arHudPetBuffIcon[0xa]; // 0x680
	UPanelWidget* m_Can_HudBtn_PetChange; // 0x6d0
	UMirButton* m_Btn_PetChange; // 0x6d8
	UPanelWidget* m_Grid_BtnEffect_PetChange; // 0x6e0
	UPanelWidget* m_Overlay_QuickTab; // 0x6e8
	UPanelWidget* m_Can_PetQuickTab; // 0x6f0
	UPanelWidget* m_Can_MagicStoneQuickTab; // 0x6f8
	UPanelWidget* m_Can_MysticalPieceQuickTab; // 0x700
	UMM_PetQuickTab* m_PetQuickTab; // 0x708
	UMM_MagicStoneQuickTab* m_MagicStoneQuickTab; // 0x710
	UMM_MysticalPieceQuickTab* m_MysticalPieceQuickTab; // 0x718
	UMirButton* m_Btn_QuickTabClose; // 0x720
	UWidgetAnimation* m_Ani_PetChange_Start; // 0x728
	UWidgetAnimation* m_Ani_PetChange_End; // 0x730
	int32_t m_iMSTRID_PhaseCantUseMenu; // 0x738
	int32_t m_iMSTRID_DualCantUseMenu; // 0x73c
	int32_t m_iMSTRID_DontMoveArea; // 0x740
	float m_fShowLogTime; // 0x744
};

struct UMM_Occupation_KillLog {
	UPanelWidget* Panel_Main; // 0x2f0
	TArray<UMM_Occupation_KillLog_Slot*> KillLogList; // 0x2f8
	bool m_InitAsyncLoad; // 0x308
	float m_AddMessageLatency; // 0x30c
};

struct AGameState {
	FName MatchState; // 0x258
	FName PreviousMatchState; // 0x260
	int32_t ElapsedTime; // 0x268
};

struct UMM_PopupStyleBook {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct AMM_ClientTestGameMode {
	UMaterialParameterCollection* m_pBackgroundParamCollection; // 0x330
	AMM_Monster* m_pFriendMonster; // 0x338
	AMM_CharacterPawnBase* m_pSelectTarget; // 0x340
	AMM_CharacterPawnBase* m_pLockOnTarget; // 0x348
	bool EndLevelTravel; // 0x350
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x400
	AMM_SituationDirectiveEffect* SituationDirectiveActor; // 0x408
	TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>> MapQuestArrivalDisplayActor; // 0x410
	AMM_HQPlayerReferenceActor* m_pHQPlayer; // 0x460
	AMM_PortraitCaptureActor* m_pPortraitCaptureActor; // 0x468
	UCanvasRenderTarget2D* m_pPlayerPortraitRenderTarget; // 0x470
	AContentsLightManager* m_pContentsLightManager; // 0x478
	FString MyEditorCulture; // 0x490
};

struct UMM_Skill_Info {
	UMirTextBlock* m_TxtNotice; // 0x2f0
	UMM_Slot_Material_Item* m_SlotMaterial[0x2]; // 0x2f8
	UMM_Common_Btn_Cost* m_CBExchange; // 0x308
	UMM_Common_Btn_Cost* m_CBLevelUp; // 0x310
	UMM_Common_Btn* m_CBLearn; // 0x318
};

struct ULandscapeHeightfieldCollisionComponent {
	TArray<ULandscapeLayerInfoObject*> ComponentLayerInfos; // 0x418
	int32_t SectionBaseX; // 0x428
	int32_t SectionBaseY; // 0x42c
	int32_t CollisionSizeQuads; // 0x430
	float CollisionScale; // 0x434
	int32_t SimpleCollisionSizeQuads; // 0x438
	TArray<char> CollisionQuadFlags; // 0x440
	FGuid HeightfieldGuid; // 0x450
	FBox CachedLocalBox; // 0x460
	ULandscapeComponent* RenderComponent; // 0x47c
	TArray<UPhysicalMaterial*> CookedPhysicalMaterials; // 0x4a8
};

struct UMaterialExpressionDynamicParameter {
	TArray<FString> ParamNames; // 0x40
	FLinearColor DefaultValue; // 0x50
	uint32_t ParameterIndex; // 0x60
};

struct UMM_Guild_Dev_DrawLines {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_B_Item_make {
	UCanvasPanel* Panel_InventoryRect; // 0x2f0
	UMM_Popup_Material_Change* PopUp_Material_Change; // 0x2f8
	UMM_ItemMake_Inventory* InventoryRect; // 0x300
	UMM_CommonVerticalTabSet* SubMenuTab; // 0x308
	UMM_CommonHorizontalTabSet* MainMenuTab; // 0x310
	UMM_Exchange_Tab_HorizonBtn* HorizonBtn; // 0x318
	UMM_Item_Make_Info* ItemMakeInfo; // 0x320
	TWeakObjectPtr<UMM_Item_Make_List_Slot> SelectSlot; // 0x328
	UMM_Common_ToggleBtn* Toggle_MakeFilter; // 0x330
	UPanelWidget* EmptyPanel; // 0x338
	UMM_Common_Board_Notice* m_Notice_Sub; // 0x340
	UMirTextBlock* Txt_EmptyMessage; // 0x348
	UMirButton* m_Btn_GoToForgeSmelt; // 0x350
	UMirCanvasPanel* m_Canvas_GoToForgeSmelt; // 0x358
	UMirCanvasPanel* m_Panel_Fail; // 0x360
	UMirButton* m_Btn_Fail; // 0x368
	int32_t STRING_EMPTY_MESSAGE; // 0x370
	int32_t STRING_FILTER_MAKE; // 0x374
};

struct UImageSequenceProtocol {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UDmgTypeBP_Environmental_C {
	char bCausedByWorld : 1; // 0x28
	char bScaleMomentumByMass : 1; // 0x28
	char bRadialDamageVelChange : 1; // 0x28
	float DamageImpulse; // 0x2c
	float DestructibleImpulse; // 0x30
	float DestructibleDamageSpreadScale; // 0x34
	float DamageFalloff; // 0x38
};

struct UMM_Popup_Refund_Sanctions {
	UMirButton* m_Btn_Screen; // 0x2e0
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x2e8
	UMirButton* m_Btn_Policy; // 0x2f0
	UMirScrollBox* m_Scr_RefundList; // 0x2f8
	TArray<UMM_Slot_Refund_Sanctions_List*> m_arRefundList; // 0x300
};

struct UParticleModuleRotationRateBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMM_PopUp_Detail_Info {
	UMirScrollBox* m_ScrollBox; // 0x2e0
	UMM_Common_Btn_Symbol* m_C_BtnClose; // 0x2e8
	UMM_Common_Board_Notice* m_Notice_Sub; // 0x2f0
	TArray<UMM_ItemCollectEffectSlot*> SlotList; // 0x2f8
	int32_t m_MaxSlotCount; // 0x308
	int32_t m_CurrentSlotCount; // 0x30c
	TMap<int32_t, int32_t> m_StatAndValue; // 0x310
	int32_t m_iNoticeMsgID; // 0x360
};

struct UMM_Popup_Revival {
	UPanelWidget* Panel_SafeRevival; // 0x2f0
	UPanelWidget* Panel_HeartCount; // 0x2f8
	UMirRichTextBlock* RTxt_KillerInfo; // 0x300
	UMirRichTextBlock* RTxt_HelpInfo; // 0x308
	UMirRichTextBlock* RTxt_AutoSafeRevivalDesc; // 0x310
	UMirTextBlock* Txt_DeathGuide; // 0x318
	UMirTextBlock* Txt_HeartCount; // 0x320
	UMirTextBlock* Txt_DeathPenalty; // 0x328
	UMM_Common_Btn* Btn_SafeRevival; // 0x330
	UMM_Common_Btn* Btn_HelpRevival; // 0x338
	UMM_Common_Btn* Btn_FreeRevival; // 0x340
	UMM_Common_Btn_Cost* Btn_ImmediateRevival; // 0x348
	UMM_Common_Btn* Btn_SituationBoard; // 0x350
	UMirImage* Img_IndicatorChat; // 0x358
	UMirTextBlock* Txt_IndicatorChat; // 0x360
	UPanelWidget* Panel_BtnEffectChat; // 0x368
	UMirButton* Btn_Chat; // 0x370
	UMM_Hud_Chat* m_pChatWidget; // 0x378
	UMirScrollBox* m_pScrollPenaltyList; // 0x380
	UMirTextBlock* m_pTxt_Penalty_Exp; // 0x388
	UMirTextBlock* m_pTxt_NamePenalty; // 0x390
	UMirTextBlock* m_pTxt_SafeRevivalDelayResetTime; // 0x398
	UWidgetAnimation* m_pStartAni; // 0x3a8
	UWidgetAnimation* m_pEndAni; // 0x3b0
	UMirWidgetData* m_WidgetData; // 0x3c0
};

struct UNavArea_LowHeight {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct AARSharedWorldGameState {
	TArray<char> PreviewImageData; // 0x278
	TArray<char> ARWorldData; // 0x288
	int32_t PreviewImageBytesTotal; // 0x298
	int32_t ARWorldBytesTotal; // 0x29c
	int32_t PreviewImageBytesDelivered; // 0x2a0
	int32_t ARWorldBytesDelivered; // 0x2a4
};

struct UMM_Popup_Chat_VoiceOption {
	UMM_Common_Btn_Symbol* btn_close; // 0x2e0
	UMirCheckBox* Toggle_VoiceChat_Sound; // 0x2e8
	UMirCheckBox* Toggle_VoiceChat_Microphone; // 0x2f0
};

struct UMM_Common_Popup_Ingame {
	UPanelWidget* m_Grid_Timer; // 0x2f0
	UImage* m_Img_Timer; // 0x2f8
	UTextBlock* m_Txt_Timer; // 0x300
	UMirRichTextBlock* m_RTxt_Message; // 0x308
	UMM_Common_Btn* m_CB_First; // 0x310
	UMM_Common_Btn* m_CB_Second; // 0x318
	UMM_Common_Btn_Cost* m_CB_Cost; // 0x320
};

struct UDeviceProfileManager {
	TArray<UObject*> Profiles; // 0x28
};

struct UMM_Map_Worldmap {
	TArray<UMM_Map_AreaBtn*> m_arAreaBtn; // 0x2e8
	UCanvasPanel* m_CanIcon; // 0x2f8
	UImage* m_ImgWorldMap; // 0x300
};

struct UMM_Auction_Guild {
	UMirRichTextBlock* m_pTxtGuildName; // 0x2f0
	UMM_Common_Btn_Symbol* m_pBtnGuildInfo; // 0x2f8
};

struct UInterpTrackLinearColorBase {
	FInterpCurveLinearColor LinearColorTrack; // 0x70
	float CurveTension; // 0x88
};

struct USkeletalMeshComponent {
	UObject* AnimBlueprintGeneratedClass; // 0x660
	UAnimInstance* AnimClass; // 0x668
	UAnimInstance* AnimScriptInstance; // 0x670
	UAnimInstance* PostProcessAnimInstance; // 0x678
	FSingleAnimationPlayData AnimationData; // 0x680
	FVector RootBoneTranslation; // 0x6a8
	FVector LineCheckBoundsScale; // 0x6b4
	TArray<UAnimInstance*> LinkedInstances; // 0x6e0
	TArray<FTransform> CachedBoneSpaceTransforms; // 0x6f0
	TArray<FTransform> CachedComponentSpaceTransforms; // 0x700
	float GlobalAnimRateScale; // 0x730
	EKinematicBonesUpdateToPhysics KinematicBonesUpdateType; // 0x734
	EPhysicsTransformUpdateMode PhysicsTransformUpdateMode; // 0x735
	EAnimationMode AnimationMode; // 0x737
	char bDisablePostProcessBlueprint : 1; // 0x739
	char bUpdateOverlapsOnAnimationFinalize : 1; // 0x739
	char bHasValidBodies : 1; // 0x739
	char bBlendPhysics : 1; // 0x739
	char bEnablePhysicsOnDedicatedServer : 1; // 0x739
	char bUpdateJointsFromAnimation : 1; // 0x73a
	char bDisableClothSimulation : 1; // 0x73a
	char bAllowAnimCurveEvaluation : 1; // 0x73a
	char bDisableAnimCurves : 1; // 0x73a
	char bCollideWithEnvironment : 1; // 0x73a
	char bCollideWithAttachedChildren : 1; // 0x73b
	char bLocalSpaceSimulation : 1; // 0x73b
	char bResetAfterTeleport : 1; // 0x73b
	char bDeferKinematicBoneUpdate : 1; // 0x73b
	char bNoSkeletonUpdate : 1; // 0x73b
	char bPauseAnims : 1; // 0x73b
	char bUseRefPoseOnInitAnim : 1; // 0x73b
	char bEnablePerPolyCollision : 1; // 0x73c
	char bForceRefpose : 1; // 0x73c
	char bOnlyAllowAutonomousTickPose : 1; // 0x73c
	char bIsAutonomousTickPose : 1; // 0x73c
	char bOldForceRefPose : 1; // 0x73c
	char bShowPrePhysBones : 1; // 0x73c
	char bRequiredBonesUpToDate : 1; // 0x73c
	char bAnimTreeInitialised : 1; // 0x73c
	char bIncludeComponentLocationIntoBounds : 1; // 0x73d
	char bEnableLineCheckWithBounds : 1; // 0x73d
	char bUseBendingElements : 1; // 0x73d
	char bUseTetrahedralConstraints : 1; // 0x73d
	char bUseThinShellVolumeConstraints : 1; // 0x73d
	char bUseSelfCollisions : 1; // 0x73d
	char bUseContinuousCollisionDetection : 1; // 0x73d
	char bPropagateCurvesToSlaves : 1; // 0x73d
	char bSkipKinematicUpdateWhenInterpolating : 1; // 0x73e
	char bSkipBoundsUpdateWhenInterpolating : 1; // 0x73e
	char bNeedsQueuedAnimEventsDispatched : 1; // 0x73e
	uint16_t CachedAnimCurveUidVersion; // 0x740
	EClothMassMode MassMode; // 0x742
	float UniformMass; // 0x744
	float TotalMass; // 0x748
	float Density; // 0x74c
	float MinPerParticleMass; // 0x750
	float ClothBlendWeight; // 0x754
	float EdgeStiffness; // 0x758
	float BendingStiffness; // 0x75c
	float AreaStiffness; // 0x760
	float VolumeStiffness; // 0x764
	float StrainLimitingStiffness; // 0x768
	float ShapeTargetStiffness; // 0x76c
	TArray<FName> DisallowedAnimCurves; // 0x770
	UBodySetup* BodySetup; // 0x780
	FScriptMulticastDelegate OnConstraintBroken; // 0x790
	UClothingSimulationFactory* ClothingSimulationFactory; // 0x7a0
	float TeleportDistanceThreshold; // 0x878
	float TeleportRotationThreshold; // 0x87c
	uint32_t LastPoseTickFrame; // 0x888
	UClothingSimulationInteractor* ClothingInteractor; // 0x8e0
	FScriptMulticastDelegate OnAnimInitialized; // 0x9b0
};

struct UInterpTrackAnimControl {
	FName SlotName; // 0x90
	TArray<FAnimControlTrackKey> AnimSeqs; // 0x98
	char bSkipAnimNotifiers : 1; // 0xa8
};

struct UInterpTrackFade {
	char bPersistFade : 1; // 0x90
	char bFadeAudio : 1; // 0x90
	FLinearColor FadeColor; // 0x94
};

struct UMM_UIShopGoodsDetailSlot {
	UMirCanvasPanel* mPanel_Title; // 0x2e0
	UMirTextBlock* mTxt_Title; // 0x2e8
	UMirCanvasPanel* mPanel_DetailSlot; // 0x2f0
	UMirImage* mImgIcon; // 0x2f8
	UMirImage* mImgIconGrade; // 0x300
	UMirImage* mImgCheck; // 0x308
	UMirCanvasPanel* mPanel_UsedBigSlot; // 0x310
	UMirTextBlock* mTxtName_UsedBigSlot; // 0x318
	UMirCanvasPanel* mPanel_UsedPopupDetail; // 0x320
	UMirTextBlock* mTxtName_UsedPopupDetail; // 0x328
	UMirTextBlock* mTxtCount; // 0x330
	UMirButton* mBtnMain; // 0x338
};

struct UInterpTrackColorProp {
	FName PropertyName; // 0x90
};

struct UMM_Popup_DominionRewardList {
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x2e8
	UMirTextBlock* m_pTxtRewardCount; // 0x2f0
	UMirTextBlock* m_pTxtTitle; // 0x2f8
	UMirScrollBox* m_pScrollList; // 0x300
};

struct UPopup_DungeonReward_Info2 {
	UMirScrollBox* sclPartyReward; // 0x2e0
	UMirCanvasPanel* canReward; // 0x2e8
};

struct UNavigationDataChunk {
	FName NavigationDataName; // 0x28
};

struct UParticleModuleMeshRotationRate {
	FRawDistributionVector StartRotationRate; // 0x30
};

struct UFirebaseAppleCredential {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct UGeometryCacheTrack_TransformGroupAnimation {
	float Duration; // 0x28
};

struct ACutsceneActor {
	ACinematicDialogue* m_pCinematicDialogue; // 0x218
	int32_t m_NpcID; // 0x220
	bool m_bHidden; // 0x224
	ACutsceneActor* m_pMovePlacement; // 0x228
	float m_MoveSpeed; // 0x230
	FString m_FirstAniName; // 0x238
	FString m_SecondAniName; // 0x248
	bool m_bAnimationLoop; // 0x258
	bool m_bLookAt; // 0x259
	FVector m_LookAt; // 0x25c
	UAnimInstance* m_pAnimInstace; // 0x268
	UMM_CharacterPartsComponent* m_pPartsComponent; // 0x2f0
	USkeletalMeshComponent* m_pMesh; // 0x2f8
};

struct UWidgetSwitcher {
	int32_t ActiveWidgetIndex; // 0x120
};

struct AMiniMapDataActor {
	EMapMiniInfoMainType m_InfoMainType; // 0x218
	int32_t m_InfoSubType; // 0x21c
	int32_t m_InfoSubTypeValue; // 0x220
	FString m_InfoSubTypeString; // 0x228
	int32_t m_InfoValue; // 0x238
	int32_t m_DetailInfoValue; // 0x23c
	EMapMiniInfoStringPosType m_InfoStringPosType; // 0x240
	int32_t m_InfoStringID; // 0x244
	FString m_InfoString; // 0x248
	FString m_InfoMemo; // 0x258
};

struct APaperCharacter {
	UPaperFlipbookComponent* Sprite; // 0x628
};

struct UMM_Common_Slider {
	int32_t m_iTitleStringID; // 0x2f8
};

struct UPartyBeaconState {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	int32_t NumTeams; // 0x38
	int32_t NumPlayersPerTeam; // 0x3c
	FName TeamAssignmentMethod; // 0x40
	int32_t ReservedHostTeamNum; // 0x48
	int32_t ForceTeamNum; // 0x4c
	bool bRestrictCrossConsole; // 0x50
	bool bEnableRemovalRequests; // 0x51
	TArray<FPartyReservation> Reservations; // 0x58
};

struct UMaterialExpressionTime {
	char bIgnorePause : 1; // 0x40
	char bOverride_Period : 1; // 0x40
	float Period; // 0x44
};

struct UModelComponent {
	UBodySetup* ModelBodySetup; // 0x430
};

struct UMM_PopupGuildGiveMemberSlot {
	UMirTextBlock* txt_grade; // 0x2e0
	UMirImage* img_online; // 0x2e8
	UMM_GuildMemberPortrait* Portrait; // 0x2f0
	UMirTextBlock* txt_nickname; // 0x2f8
	UMirTextBlock* txt_custom_title; // 0x300
	UMirTextBlock* txt_level; // 0x308
	UMirImage* img_class; // 0x310
	UMirTextBlock* txt_class; // 0x318
	UMirTextBlock* txt_combat_power; // 0x320
	UMirTextBlock* txt_daily_contribution; // 0x328
	UMirCheckBox* cb_selected; // 0x330
};

struct UMM_UIShopGachaResult {
	UWidgetAnimation* m_Ani_Start; // 0x2f0
	UWidgetAnimation* m_Ani_End; // 0x2f8
	UWidgetAnimation* m_Ani_BonusCount; // 0x300
	UMirCanvasPanel* m_Panel_BtnArea; // 0x308
	UMirTextBlock* m_Txt_Skip; // 0x310
	UMirCheckBox* m_CheckBox_Skip; // 0x318
	UMirTextBlock* m_Txt_GachaFreeTime1; // 0x320
	UMM_Common_Btn* m_Btn_Close; // 0x328
	UHorizontalBox* m_Hrz_Mileage1; // 0x330
	UMirImage* m_Img_Mileage1; // 0x338
	UMirTextBlock* m_Txt_MileageCount1; // 0x340
	UMM_Common_Btn_Cost* m_Btn_StartGachaCount1; // 0x348
	UHorizontalBox* m_Hrz_Mileage11; // 0x350
	UMirImage* m_Img_Mileage11; // 0x358
	UMirTextBlock* m_Txt_MileageCount11; // 0x360
	UMM_Common_Btn_Cost* m_Btn_StartGachaCount11; // 0x368
	UOverlay* m_Overlay_Gold; // 0x370
	UMirImage* m_Img_Gold; // 0x378
	UMirTextBlock* m_Txt_Gold; // 0x380
	UOverlay* m_Overlay_Bonus; // 0x388
	UMirTextBlock* m_Txt_BonusCount; // 0x390
	UMirTextBlock* m_Txt_BonusPoint; // 0x398
	UMirCanvasPanel* m_Panel_EventBonus; // 0x3a0
	UMirTextBlock* m_Txt_EventTime; // 0x3a8
};

struct UEnvQueryOption {
	UEnvQueryGenerator* Generator; // 0x28
	TArray<UEnvQueryTest*> Tests; // 0x30
};

struct UTileView {
	float EntryHeight; // 0x858
	float EntryWidth; // 0x85c
	EListItemAlignment TileAlignment; // 0x860
	bool bWrapHorizontalNavigation; // 0x861
};

struct UPaperTerrainSplineComponent {
	FSplineCurves SplineCurves; // 0x418
	FInterpCurveVector SplineInfo; // 0x480
	FInterpCurveQuat SplineRotInfo; // 0x498
	FInterpCurveVector SplineScaleInfo; // 0x4b0
	FInterpCurveFloat SplineReparamTable; // 0x4c8
	bool bAllowSplineEditingPerInstance; // 0x4e0
	int32_t ReparamStepsPerSegment; // 0x4e4
	float Duration; // 0x4e8
	bool bStationaryEndpoints; // 0x4ec
	bool bSplineHasBeenEdited; // 0x4ed
	bool bModifiedByConstructionScript; // 0x4ee
	bool bInputSplinePointsToConstructionScript; // 0x4ef
	bool bDrawDebug; // 0x4f0
	bool bClosedLoop; // 0x4f1
	bool bLoopPositionOverride; // 0x4f2
	float LoopPosition; // 0x4f4
	FVector DefaultUpVector; // 0x4f8
};

struct UMaterialExpressionParticlePositionWS {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMaterialExpressionBlackBody {
	FExpressionInput Temp; // 0x40
};

struct UMM_GreatBuildingMainSlot {
	int32_t m_GreatBuildingID; // 0x2e0
	UMirButton* m_BtnBack; // 0x2e8
	UPanelWidget* m_PanelBuilding; // 0x2f0
	UMirButton* m_BtnBuilding; // 0x2f8
	UMirImage* m_ImgLockBuilding; // 0x300
	UMirTextBlock* m_TxtBuildingStep; // 0x308
	UMirTextBlock* m_TxtBuildingName; // 0x310
	UMirImage* m_ImgBuildingIndicator; // 0x318
	UPanelWidget* m_Eff_Slot; // 0x320
	UMirImage* m_ImgBuilding; // 0x328
	UPanelWidget* m_PaneFunc; // 0x330
	UPanelWidget* m_PanelFaster; // 0x338
	UMM_Common_Btn_Symbol* m_BtnFaster; // 0x340
	UMirImage* m_ImgFasterIndicator; // 0x348
	UPanelWidget* m_PanelGageRoot; // 0x350
	UMirProgressBar* m_ProgStepUp; // 0x358
	UMirTextBlock* m_TxtProgStepUp; // 0x360
	UPanelWidget* m_Vertical_GuildSupport; // 0x368
	UPanelWidget* m_PanelGuildSupport; // 0x370
	UMirImage* m_ImgGuildSupport; // 0x378
	UMirButton* m_BtnGuildSupport; // 0x380
	UWidgetAnimation* m_ShowFunc; // 0x388
	int32_t m_CompleteStr; // 0x390
	int32_t m_GuildSupportIconID; // 0x394
	int32_t m_StepStr; // 0x398
};

struct UMM_HudPartyList {
	float m_fBottomPadding; // 0x2f0
	UWidgetAnimation* m_AniStart; // 0x2f8
	UWidgetAnimation* m_AniEnd; // 0x300
	float SlotSizeY; // 0x308
	float MaxSlotSizeY; // 0x30c
	UScrollBox* m_ScrollBox_Party; // 0x318
	UPanelWidget* m_Grid_Squad; // 0x320
	UMM_HudPartyUser* m_arPartyUserSlot[0x4]; // 0x328
	UMM_HudPartyUser* m_arSquadUserSlot[0xe]; // 0x348
	UMM_HudPartyUser* m_arOtherUserSlot[0xf]; // 0x3b8
	UMM_HudPartyManage* m_Manage_Make; // 0x430
};

struct UMM_PopupGuildMembers {
	UMirButton* btn_bg_close; // 0x2f0
	UMM_Common_Btn_Symbol* btn_close; // 0x2f8
	UMirButton* btn_bg_grade_close; // 0x300
	UMM_Common_Btn_Symbol* btn_grade_popup_open; // 0x308
	UMM_Common_Btn_Symbol* btn_grade_close; // 0x310
	UMM_Common_Btn_Symbol* btn_partner_popup_open; // 0x318
	UMirButton* btn_authority; // 0x320
	UMirButton* btn_bg_authority_close; // 0x328
	UMM_Common_Btn_Symbol* btn_authority_popup_open; // 0x330
	UMM_Common_Btn_Symbol* btn_authority_close; // 0x338
	UMirCanvasPanel* cp_popup_grade; // 0x340
	UMirCanvasPanel* cp_popup_authority; // 0x348
	UMM_Common_Btn* btn_grade_cancel; // 0x350
	UMM_Common_Btn* btn_grade_confirm; // 0x358
	UMM_Common_Btn* btn_authority_confirm; // 0x360
	UMirImage* img_authority_selected_00; // 0x368
	UMirImage* img_authority_selected_01; // 0x370
	UMirImage* img_authority_selected_02; // 0x378
	UMirImage* img_authority_selected_03; // 0x380
	UMM_Common_ToggleBtn* toggle_00; // 0x388
	UMM_Common_ToggleBtn* toggle_01; // 0x390
	UMM_Common_ToggleBtn* toggle_02; // 0x398
	UMM_Common_ToggleBtn* toggle_03; // 0x3a0
	UMM_GuildMemberPortrait* Portrait; // 0x3a8
	UMirTextBlock* txt_nickname; // 0x3b0
	UMirTextBlock* txt_custom_title; // 0x3b8
	UMirTextBlock* txt_level; // 0x3c0
	UMirImage* img_combat_power; // 0x3c8
	UMirTextBlock* txt_combat_power; // 0x3d0
	UEditableText* edit_custom_title; // 0x3d8
	UMM_Common_Btn_Symbol* btn_edit; // 0x3e0
	UMM_Common_Btn_Symbol* btn_edit_reset; // 0x3e8
	UMirTextBlock* txt_grade; // 0x3f0
	UMirTextBlock* txt_buff; // 0x3f8
	UMirTextBlock* txt_partner; // 0x400
	UHorizontalBox* hb_grade; // 0x408
	UMM_Common_Btn* btn_confirm; // 0x410
	UMM_Common_Btn* btn_kick; // 0x418
	UMM_Common_Btn* btn_delegate; // 0x420
	UMM_Common_Btn* Btn_Detail; // 0x428
	UOverlay* overlay_authority_members; // 0x430
	UOverlay* overlay_authority_inventory; // 0x438
	UOverlay* overlay_authority_diplomacy; // 0x440
	UOverlay* overlay_authority_war; // 0x448
	UMirImage* img_online; // 0x450
	UMirTextBlock* txt_log_out_time; // 0x458
	UMirCanvasPanel* cp_partner; // 0x460
	UMirCanvasPanel* cp_authority; // 0x468
	UMirImage* mImgLock; // 0x470
};

struct UMM_BattlePass_Reward_Slot {
	UMirImage* m_Img_Closed; // 0x2e0
	UMirImage* m_Img_Opened; // 0x2e8
	UMirImage* m_Img_Open_Cur; // 0x2f0
	UMirImage* m_Img_Line; // 0x2f8
	UMirProgressBar* m_ProgressBar; // 0x300
	UMirTextBlock* m_Txt_Num; // 0x308
	UMM_BattlePass_Item_Slot* m_Reward_ItemSlot[0x3]; // 0x310
};

struct UMM_BattlePass_Week_Btn {
	int32_t STRING_ID_BTN; // 0x2f0
	UMirButton* m_Btn_Main; // 0x2f8
	UMirImage* m_Img_Lock; // 0x300
	UMirTextBlock* m_Txt_Name; // 0x308
	UMirImage* m_Img_Select; // 0x310
	UMirImage* m_Img_Indicator; // 0x318
};

struct UPrimaryDataAsset {
	UDataAsset* NativeClass; // 0x28
};

struct UMaterialExpressionLandscapeLayerCoords {
	ETerrainCoordMappingType MappingType; // 0x40
	ELandscapeCustomizedCoordType CustomUVType; // 0x41
	float MappingScale; // 0x44
	float MappingRotation; // 0x48
	float MappingPanU; // 0x4c
	float MappingPanV; // 0x50
};

struct UMM_PopUp_AcquiredItem {
	UScrollBox* sb_slot; // 0x2f0
	UMM_Common_Btn_Symbol* btn_close; // 0x2f8
};

struct UMovieSceneFloatSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe0
};

struct ABGMTrigger {
	char m_Priority; // 0x218
	FVector m_BoxExtent; // 0x21c
	bool m_bBoxRender; // 0x228
	FColor m_BoxColor; // 0x22c
	UBoxComponent* m_pBoxCollision; // 0x230
	bool m_bInit; // 0x238
};

struct UMM_DungeonCommonBossInfo {
	UMirRichTextBlock* rtxtBossInfo; // 0x2e0
	UMirTextBlock* txtEventInfo; // 0x2e8
	UMirTextBlock* txtBossName; // 0x2f0
	UMirImage* imgBoss; // 0x2f8
};

struct UMM_Guild_DiplomacyListSlot {
	FLinearColor Req_HostilityColor; // 0x2e0
	FLinearColor Res_HostilityColor; // 0x2f0
	UMirImage* m_Img_Rank; // 0x320
	UMirTextBlock* m_Txt_Rank; // 0x328
	UMM_GuildIcon* m_Guild_Icon; // 0x330
	UMirTextBlock* m_Txt_Name; // 0x338
	UMirTextBlock* m_Txt_GuildLevel; // 0x340
	UMirTextBlock* m_Txt_MemberCount; // 0x348
	UMirTextBlock* m_Txt_Status; // 0x350
	UMirButton* m_Btn; // 0x358
	UMM_Common_CombatPoint* m_CombatPoint; // 0x360
};

struct UCurveFloat {
	FRichCurve FloatCurve; // 0x30
	bool bIsEventCurve; // 0xb0
};

struct UMovieSceneBuiltInEasingFunction {
	EMovieSceneBuiltInEasing Type; // 0x30
};

struct UNavAreaMeta {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UMM_Costume_Slot_InvenItem {
	UMirImage* Img_Icon; // 0x2e0
	UMirImage* Img_Tag; // 0x2e8
	UMirImage* Img_Equipped; // 0x2f0
	UMirImage* Img_Disabled; // 0x2f8
	UMirTextBlock* txt_time; // 0x300
	UMirImage* Img_TimeBG; // 0x308
};

struct ADefaultPhysicsVolume {
	float TerminalVelocity; // 0x250
	int32_t Priority; // 0x254
	float FluidFriction; // 0x258
	char bWaterVolume : 1; // 0x25c
	char bPhysicsOnContact : 1; // 0x25c
};

struct ASceneCaptureCube {
	USceneCaptureComponentCube* CaptureComponentCube; // 0x228
};

struct UButton {
	USlateWidgetStyleAsset* Style; // 0x120
	FButtonStyle WidgetStyle; // 0x128
	FLinearColor ColorAndOpacity; // 0x3a0
	FLinearColor BackgroundColor; // 0x3b0
	EButtonClickMethod ClickMethod; // 0x3c0
	EButtonTouchMethod TouchMethod; // 0x3c1
	EButtonPressMethod PressMethod; // 0x3c2
	bool IsFocusable; // 0x3c3
	bool DontHandledEvent; // 0x3c4
	FScriptMulticastDelegate OnClicked; // 0x3c8
	FScriptMulticastDelegate OnPressed; // 0x3d8
	FScriptMulticastDelegate OnReleased; // 0x3e8
	FScriptMulticastDelegate OnHovered; // 0x3f8
	FScriptMulticastDelegate OnUnhovered; // 0x408
};

struct UMM_BuffIconWidget {
	UImage* m_ImgBuffIcon; // 0x2e0
	UImage* m_ImgBuffFrame; // 0x2e8
	UButton* m_BtnBuff; // 0x2f0
	UWidgetAnimation* m_pAniToggleIcon; // 0x2f8
	UMirTextBlock* m_pTxtStack; // 0x300
	FString m_IconWidget; // 0x318
	FString m_IconFrameWidget; // 0x328
	FString m_BtnWidget; // 0x338
};

struct UAIPerceptionComponent {
	TArray<UAISenseConfig*> SensesConfig; // 0xb0
	UAISense* DominantSense; // 0xc0
	AAIController* AIOwner; // 0xd8
	FScriptMulticastDelegate OnPerceptionUpdated; // 0x160
	FScriptMulticastDelegate OnTargetPerceptionUpdated; // 0x170
};

struct UMaterialExpressionSkyAtmosphereViewLuminance {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_PopupGuildGiveAlliance {
	UMM_Common_Btn_Symbol* btn_close; // 0x2f0
	UMirScrollBox* sb_alliance; // 0x2f8
	UMirCheckBox* cb_select; // 0x300
	UMM_Common_Btn* btn_give; // 0x308
	UMM_Common_Board_Notice* empty_notice; // 0x310
	UMirRichTextBlock* txt_bottom_desc; // 0x318
	UMirCheckBox* cb_sort; // 0x320
	UMirCanvasPanel* cp_sort; // 0x328
	UMirButton* btn_sort_combat_power; // 0x330
	UMirButton* btn_sort_level; // 0x338
	UMirButton* btn_sort_rank; // 0x340
	UMirImage* img_sort_combat_power; // 0x348
	UMirImage* img_sort_level; // 0x350
	UMirImage* img_sort_rank; // 0x358
	UMirTextBlock* txt_sort; // 0x360
};

struct AMM_GameModeBase {
	UMaterialParameterCollection* m_pBackgroundParamCollection; // 0x330
	AMM_Monster* m_pFriendMonster; // 0x338
	AMM_CharacterPawnBase* m_pSelectTarget; // 0x340
	AMM_CharacterPawnBase* m_pLockOnTarget; // 0x348
	bool EndLevelTravel; // 0x350
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x400
	AMM_SituationDirectiveEffect* SituationDirectiveActor; // 0x408
	TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>> MapQuestArrivalDisplayActor; // 0x410
	AMM_HQPlayerReferenceActor* m_pHQPlayer; // 0x460
	AMM_PortraitCaptureActor* m_pPortraitCaptureActor; // 0x468
	UCanvasRenderTarget2D* m_pPlayerPortraitRenderTarget; // 0x470
	AContentsLightManager* m_pContentsLightManager; // 0x478
	FString MyEditorCulture; // 0x490
};

struct UMM_UIShopAdsMovieWidget {
	UMediaPlayer* m_MediaPlayer; // 0x2e0
	UMediaTexture* m_MediaTexture; // 0x2e8
	UMediaSource* m_MediaSource; // 0x2f0
	AMediaSoundActor* m_MediaSoundActor; // 0x2f8
	UMirButton* m_Btn_Skip; // 0x320
};

struct UMM_Dominion_Title_RareGroup {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_ProgressBar_HP {
	UProgressBar* ProgressBar_Shield; // 0x378
	UCanvasPanel* EndEdgeEffect; // 0x380
	UImage* DecoImage; // 0x388
	UWidgetAnimation* AnimHitEffect; // 0x390
	UWidgetAnimation* AnimIdleEffect; // 0x398
};

struct UInputAxisKeyDelegateBinding {
	TArray<FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings; // 0x28
};

struct ATranslucentStaticMeshActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x218
	bool bStaticMeshReplicateMovement; // 0x220
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x221
};

struct AMiniGame_ManagerActor {
	UMiniGameData* m_MiniGameData; // 0x218
	AMiniGame_BackgroundActor* m_BackgroundActor; // 0x220
	AMiniGame_BackgroundActor* m_NextBackgroundActor; // 0x228
	AMiniGame_PlayerActor* m_PlayerActor; // 0x230
	TArray<AMiniGame_MonsterActor*> m_arMonsterActor; // 0x238
	UMM_MiniGameWidget* m_MiniGameWidget; // 0x248
	TArray<UPaperFlipbook*> m_EffectArray; // 0x250
	bool m_bBpTickFlag; // 0x260
	bool m_fCameraProductionFlag; // 0x261
	float m_fProductionCameraPos; // 0x264
	float m_fProductionPlayerPos; // 0x268
	float m_fPatchEndDelay; // 0x26c
};

struct UEnvQueryTest_Trace {
	FEnvTraceData TraceData; // 0x1c0
	FAIDataProviderBoolValue TraceFromContext; // 0x1f0
	FAIDataProviderFloatValue ItemHeightOffset; // 0x220
	FAIDataProviderFloatValue ContextHeightOffset; // 0x250
	UEnvQueryContext* Context; // 0x280
};

struct UWmfMediaSettings {
	bool AllowNonStandardCodecs; // 0x28
	bool LowLatency; // 0x29
	bool NativeAudioOut; // 0x2a
	bool HardwareAcceleratedVideoDecoding; // 0x2b
};

struct UUserDefinedCaptureProtocol {
	UWorld* World; // 0x58
};

struct UWidgetBase {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_Customizing_SaveSlot {
	UMirCheckBox* m_CheckBox; // 0x300
	UMirImage* m_pSelectImage; // 0x308
	UMirTextBlock* m_DayTitle; // 0x310
	UMirTextBlock* m_txt_Memo; // 0x318
	UPanelWidget* m_Panel_Menu; // 0x320
	UMM_Common_Btn_Symbol* m_MenuButton; // 0x328
	UMM_Common_Btn_Symbol* m_Btn_Memo; // 0x330
	UMM_Common_Btn_Symbol* m_Btn_Delete; // 0x338
	UMM_Common_Btn_Symbol* m_Menu_Close; // 0x340
};

struct UDebugLogPanel {
	UScrollBox* FixedList; // 0x360
	UScrollBox* ScrollList; // 0x368
};

struct UMM_UIAction_Npc_Exchange {
	int32_t m_MainTabIndex; // 0x420
	int32_t m_SubTabIndex; // 0x424
	int32_t m_SelectItemTID; // 0x428
	int32_t m_TargetItemTID; // 0x42c
	int32_t ReserveNpcID; // 0x430
	int32_t m_MakeCount; // 0x434
	int32_t m_MakeTID; // 0x438
	int32_t m_NPCGroupListID; // 0x43c
	int32_t MAX_MAKE_COUNT; // 0x440
	int32_t STR_ExchangeID; // 0x444
	int32_t STR_NotEnoughCost; // 0x448
	int32_t STR_NotEnoughMaterial; // 0x44c
};

struct UMM_Collection_Ability {
	UMirTextBlock* Txt_CountName; // 0x2e0
	UMirTextBlock* Txt_Ability_Name; // 0x2e8
	UMirImage* Icon_Attribute; // 0x2f0
	UMirTextBlock* Txt_Ability_Point; // 0x2f8
	int32_t STR_CountName; // 0x300
};

struct UMM_PKWarning {
	float playSpeed; // 0x2e0
	int32_t cycleCount; // 0x2e4
	float IntervalTime; // 0x2e8
	UWidgetAnimation* warningAni; // 0x2f0
};

struct ULandscapeLayerInfoObject {
	FName LayerName; // 0x28
	UPhysicalMaterial* PhysMaterial; // 0x30
	float Hardness; // 0x38
	FLinearColor LayerUsageDebugColor; // 0x3c
};

struct UParticleModuleLocationPrimitiveSphere_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xe0
};

struct UMaterialExpressionNoise {
	FExpressionInput Position; // 0x40
	FExpressionInput FilterWidth; // 0x54
	float Scale; // 0x68
	int32_t quality; // 0x6c
	ENoiseFunction NoiseFunction; // 0x70
	char bTurbulence : 1; // 0x74
	int32_t Levels; // 0x78
	float OutputMin; // 0x7c
	float OutputMax; // 0x80
	float LevelScale; // 0x84
	char bTiling : 1; // 0x88
	uint32_t RepeatSize; // 0x8c
};

struct UMaterialExpressionTextureSampleParameter {
	FName ParameterName; // 0xd0
	FGuid ExpressionGUID; // 0xd8
	FName Group; // 0xe8
};

struct UCameraModifier {
	char bDebug : 1; // 0x28
	char bExclusive : 1; // 0x28
	char Priority; // 0x2c
	APlayerCameraManager* CameraOwner; // 0x30
	float AlphaInTime; // 0x38
	float AlphaOutTime; // 0x3c
	float Alpha; // 0x40
};

struct UMaterialExpressionMultiply {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMaterialExpressionPanner {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	FExpressionInput Speed; // 0x68
	float SpeedX; // 0x7c
	float SpeedY; // 0x80
	uint32_t ConstCoordinate; // 0x84
	bool bFractionalPart; // 0x88
};

struct UMM_Pet_Circle_Portrait {
	UMirImage* m_Img_TierBg; // 0x2e0
	UMirImage* m_Img_PetIcon; // 0x2e8
};

struct UMM_PlayerRank {
	UMirTextBlock* Txt_Title; // 0x2f0
	UMirTextBlock* Txt_Value; // 0x2f8
	UMirImage* Img_None; // 0x300
	int32_t STRID_RANK; // 0x308
};

struct UMaterialExpressionParameter {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
};

struct UMM_PopUp_Quest_Delivery {
	UMM_Common_Btn_Symbol* m_CloseBtn; // 0x2e0
	UMM_Common_Btn* m_OkBtn; // 0x2e8
	UMirTextBlock* m_PopupTitle; // 0x2f0
	UMM_Slot_Quest_Info* m_QuestInfo; // 0x2f8
	UWidgetAnimation* m_OpenAni; // 0x300
	UWidgetAnimation* m_CloseAni; // 0x308
	int32_t m_DeliveryToStr; // 0x310
	int32_t m_DoingDeliveryToStr; // 0x314
	int32_t m_TitleWithCountToStr; // 0x318
	int32_t m_CompleteToStr; // 0x31c
	int32_t m_NotEnoughToStr; // 0x320
};

struct ACutsceneCamera {
	int32_t m_Index; // 0x780
	float m_CameraAlpha; // 0x784
	ACutsceneCamera* m_pStartPlacement; // 0x788
	ACutsceneCamera* m_pEndPlacement; // 0x790
	UTextRenderComponent* pTextRender; // 0x798
};

struct UMM_Share_Channel_Slot {
	int32_t m_Title_StringID; // 0x2f0
	CHAT_CHANNEL_TYPE ShareChannelType; // 0x2f4
	UMirTextBlock* Txt_Title; // 0x2f8
	UMirButton* Btn_Slot; // 0x300
};

struct UAnimCompress_ACL {
	ACLCompressionLevel CompressionLevel; // 0x50
	float DefaultVirtualVertexDistance; // 0x54
	float SafeVirtualVertexDistance; // 0x58
	float SafetyFallbackThreshold; // 0x5c
	float ErrorThreshold; // 0x60
};

struct UMM_B_Party_Info {
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x2f0
	UMirTextBlock* m_Txt_Title; // 0x2f8
	UMM_Party_ExplainTextField* m_Party_ExplainTextField; // 0x300
	UMirTextBlock* m_Txt_JoinableType; // 0x308
	UMirImage* m_Img_Joinable_Lock; // 0x310
	UMirImage* m_Img_Joinable_Open; // 0x318
	UMirTextBlock* m_Txt_CombatPoint; // 0x320
	UMirScrollBox* m_ScrollBox_Member; // 0x328
	UMirImage* m_Img_Member_6; // 0x330
	UMirImage* m_Img_Member_16; // 0x338
	UHorizontalBox* m_HrzBox_Guild; // 0x340
	UMirTextBlock* m_Txt_GuildName; // 0x348
	UMM_Common_Btn* m_C_Btn_Common; // 0x350
	UMM_Common_Btn* m_C_Btn_Delete; // 0x358
	UMM_Common_Btn* m_C_Btn_Leave; // 0x360
	UMM_Common_ToolTipBtn* m_C_Btn_ToolTip; // 0x368
	UWidgetAnimation* m_AniStart; // 0x370
	UWidgetAnimation* m_AniEnd; // 0x378
};

struct UMM_Popup_BuildingAcceleration {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x2f8
	UMirImage* m_ImgBuilding; // 0x300
	UMirTextBlock* m_Txt_BuildingName; // 0x308
	UMirProgressBar* m_Prg_Time; // 0x310
	UMirProgressBar* m_Prg_SupportTime; // 0x318
	UMirTextBlock* m_Txt_Time; // 0x320
	UMirImage* m_Img_Support; // 0x328
	UMirTextBlock* m_Txt_SupportCount; // 0x330
	UMM_Item_Make_Slider* m_Slider_Point; // 0x338
	UMirTextBlock* m_Txt_PointTime; // 0x340
	UMirTextBlock* m_Txt_UsePoint; // 0x348
	UMirTextBlock* m_Txt_MyPoint; // 0x350
	UMM_Common_Btn* m_Btn_Cancle; // 0x358
	UMM_Common_Btn* m_Btn_Ok; // 0x360
	UMM_Common_Btn_Symbol* m_BtnDetail; // 0x368
	int32_t m_AccelStr; // 0x370
	int32_t m_BuildingIconID; // 0x374
	int32_t m_SupportFormatID; // 0x378
	int32_t m_RecudeRemainStr; // 0x37c
	int32_t m_AccelPointToStr; // 0x380
	int32_t m_CompleteStr; // 0x384
	int32_t m_UpgradeStr; // 0x388
};

struct AGameMode {
	FName MatchState; // 0x2b8
	char bDelayedStart : 1; // 0x2c0
	int32_t NumSpectators; // 0x2c4
	int32_t NumPlayers; // 0x2c8
	int32_t NumBots; // 0x2cc
	float MinRespawnDelay; // 0x2d0
	int32_t NumTravellingPlayers; // 0x2d4
	ULocalMessage* EngineMessageClass; // 0x2d8
	TArray<APlayerState*> InactivePlayerArray; // 0x2e0
	float InactivePlayerStateLifeSpan; // 0x2f0
	int32_t MaxInactivePlayers; // 0x2f4
	bool bHandleDedicatedServerReplays; // 0x2f8
};

struct UMM_Dominion_WithDrawal_MySlot {
	UMirImage* m_pImgType; // 0x2e0
	UMirTextBlock* m_pTxtValue; // 0x2e8
};

struct UModularSynthPresetBank {
	TArray<FModularSynthPresetBankEntry> Presets; // 0x28
};

struct UMaterial {
	UPhysicalMaterial* PhysMaterial; // 0x88
	FScalarMaterialInput Metallic; // 0x90
	FScalarMaterialInput Specular; // 0xa4
	FVectorMaterialInput Normal; // 0xb8
	FColorMaterialInput EmissiveColor; // 0xcc
	EMaterialDomain MaterialDomain; // 0xe0
	EBlendMode BlendMode; // 0xe1
	EDecalBlendMode DecalBlendMode; // 0xe2
	EMaterialDecalResponse MaterialDecalResponse; // 0xe3
	EMaterialShadingModel ShadingModel; // 0xe4
	char bCastDynamicShadowAsMasked : 1; // 0xe5
	FMaterialShadingModelField ShadingModels; // 0xe6
	float OpacityMaskClipValue; // 0xe8
	FVectorMaterialInput WorldPositionOffset; // 0xec
	char bUseDepthForUI : 1; // 0x100
	FScalarMaterialInput Refraction; // 0x104
	FMaterialAttributesInput MaterialAttributes; // 0x118
	FScalarMaterialInput PixelDepthOffset; // 0x130
	FShadingModelMaterialInput ShadingModelFromMaterialExpression; // 0x144
	char bEnableSeparateTranslucency : 1; // 0x158
	char bEnableResponsiveAA : 1; // 0x158
	char bScreenSpaceReflections : 1; // 0x158
	char bContactShadows : 1; // 0x158
	char TwoSided : 1; // 0x158
	char DitheredLODTransition : 1; // 0x158
	char DistanceCullFade : 1; // 0x158
	char DitherOpacityMask : 1; // 0x158
	char bAllowNegativeEmissiveColor : 1; // 0x159
	ETranslucencyLightingMode TranslucencyLightingMode; // 0x15a
	char bEnableMobileSeparateTranslucency : 1; // 0x15b
	int32_t NumCustomizedUVs; // 0x15c
	float TranslucencyDirectionalLightingIntensity; // 0x160
	float TranslucentShadowDensityScale; // 0x164
	float TranslucentSelfShadowDensityScale; // 0x168
	float TranslucentSelfShadowSecondDensityScale; // 0x16c
	float TranslucentSelfShadowSecondOpacity; // 0x170
	float TranslucentBackscatteringExponent; // 0x174
	FLinearColor TranslucentMultipleScatteringExtinction; // 0x178
	float TranslucentShadowStartOffset; // 0x188
	char bDisableDepthTest : 1; // 0x18c
	char bWriteOnlyAlpha : 1; // 0x18c
	char bGenerateSphericalParticleNormals : 1; // 0x18c
	char bTangentSpaceNormal : 1; // 0x18c
	char bUseEmissiveForDynamicAreaLighting : 1; // 0x18c
	char bBlockGI : 1; // 0x18c
	char bUsedAsSpecialEngineMaterial : 1; // 0x18c
	char bUsedWithSkeletalMesh : 1; // 0x18c
	char bUsedWithEditorCompositing : 1; // 0x18d
	char bUsedWithParticleSprites : 1; // 0x18d
	char bUsedWithBeamTrails : 1; // 0x18d
	char bUsedWithMeshParticles : 1; // 0x18d
	char bUsedWithNiagaraSprites : 1; // 0x18d
	char bUsedWithNiagaraRibbons : 1; // 0x18d
	char bUsedWithNiagaraMeshParticles : 1; // 0x18d
	char bUsedWithGeometryCache : 1; // 0x18d
	char bUsedWithStaticLighting : 1; // 0x18e
	char bUsedWithMorphTargets : 1; // 0x18e
	char bUsedWithSplineMeshes : 1; // 0x18e
	char bUsedWithInstancedStaticMeshes : 1; // 0x18e
	char bUsedWithGeometryCollections : 1; // 0x18e
	char bUsesDistortion : 1; // 0x18e
	char bUsedWithClothing : 1; // 0x18e
	char bUsedWithWater : 1; // 0x190
	char bUsedWithHairStrands : 1; // 0x190
	char bUsedWithUI : 1; // 0x194
	char bAutomaticallySetUsageInEditor : 1; // 0x194
	char bFullyRough : 1; // 0x194
	char bUseFullPrecision : 1; // 0x194
	char bUseLightmapDirectionality : 1; // 0x194
	char bUseHQForwardReflections : 1; // 0x194
	char bUsePlanarForwardReflections : 1; // 0x194
	char bNormalCurvatureToRoughness : 1; // 0x194
	EMaterialTessellationMode D3D11TessellationMode; // 0x195
	char bEnableCrackFreeDisplacement : 1; // 0x196
	char bEnableAdaptiveTessellation : 1; // 0x196
	char AllowTranslucentCustomDepthWrites : 1; // 0x196
	char Wireframe : 1; // 0x196
	char bOutputVelocityOnBasePass : 1; // 0x196
	TArray<UMaterialExpression*> Expressions; // 0x198
	TArray<FMaterialFunctionInfo> MaterialFunctionInfos; // 0x1a8
	TArray<FMaterialParameterCollectionInfo> MaterialParameterCollectionInfos; // 0x1b8
	char bCanMaskedBeAssumedOpaque : 1; // 0x1c8
	char bIsMasked : 1; // 0x1c8
	char bIsPreviewMaterial : 1; // 0x1c8
	char bIsFunctionPreviewMaterial : 1; // 0x1c8
	char bUseMaterialAttributes : 1; // 0x1c8
	char bCastRayTracedShadows : 1; // 0x1c8
	char bUseViewSpecular : 1; // 0x1c8
	char bUseTranslucencyVertexFog : 1; // 0x1c8
	char bCanReceiveCSMShadowOnTranslucent : 1; // 0x1c9
	char bIsSky : 1; // 0x1c9
	char bComputeFogPerPixel : 1; // 0x1c9
	char bOutputTranslucentVelocity : 1; // 0x1c9
	char bAllowDevelopmentShaderCompile : 1; // 0x1c9
	char bIsMaterialEditorStatsMaterial : 1; // 0x1c9
	EBlendableLocation BlendableLocation; // 0x1ca
	char BlendableOutputAlpha : 1; // 0x1cb
	char bEnableStencilTest : 1; // 0x1cb
	EMaterialStencilCompare StencilCompare; // 0x1cc
	char StencilRefValue; // 0x1cd
	ERefractionMode RefractionMode; // 0x1ce
	int32_t BlendablePriority; // 0x1d0
	uint32_t UsageFlagWarnings; // 0x1d4
	float RefractionDepthBias; // 0x1d8
	FGuid StateID; // 0x1dc
	float MaxDisplacement; // 0x1ec
	TArray<bool> CachedQualityLevelsUsed; // 0x1f8
	TArray<UObject*> ExpressionTextureReferences; // 0x288
};

struct UVolumeTexture {
	FGuid LightingGuid; // 0x48
	int32_t LODBias; // 0x58
	TextureCompressionSettings CompressionSettings; // 0x5c
	TextureFilter Filter; // 0x5d
	ETextureMipLoadOptions MipLoadOptions; // 0x5e
	TextureGroup LODGroup; // 0x5f
	char SRGB : 1; // 0x60
	char bNoTiling : 1; // 0x60
	char VirtualTextureStreaming : 1; // 0x60
	char CompressionYCoCg : 1; // 0x60
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x68
};

struct UMM_Popup_GuildDevInfo {
	USoundBase* m_DonateBtn_DefaultSound; // 0x2f0
	UWidgetAnimation* mOpenAni; // 0x350
	UWidgetAnimation* mCloseAni; // 0x358
	UWidgetAnimation* mHappyStartAni; // 0x360
	UWidgetAnimation* mResultStartAni; // 0x368
	UMirTextBlock* mTxtDevName; // 0x370
	UMM_Common_Btn_Symbol* mBtnClose; // 0x378
	UMM_Guild_DevItemSlot* mDevIcon; // 0x380
	UMirTextBlock* mTxtDesc; // 0x388
	UCanvasPanel* mProgressPanel; // 0x390
	UMirProgressBar* mProgressBarLevel; // 0x398
	UMirTextBlock* mTxtProgressLevel; // 0x3a0
	UOverlay* mOverLayRecommend; // 0x3a8
	UMirTextBlock* mTxtFixedRecommend; // 0x3b0
	UMirCanvasPanel* mCanvasLevel; // 0x3b8
	UMirTextBlock* mTxtEffectLevelTitle; // 0x3c0
	UMirTextBlock* mTxtCurLevel; // 0x3c8
	UMirTextBlock* mTxtNextLevel; // 0x3d0
	UMirImage* mImgLevelArrow; // 0x3d8
	UMirTextBlock* mTxtSkillUseTimeTitle; // 0x3e0
	UMirTextBlock* mTxtSkillUseTime; // 0x3e8
	UMirTextBlock* mTxtSkillUseTimeDesc; // 0x3f0
	UMM_Common_Btn_Symbol* mBtnBenefit; // 0x3f8
	UMirCanvasPanel* mCanvasStat3; // 0x400
	UMirTextBlock* mTxtFirstAttibuteName; // 0x408
	UMirTextBlock* mTxtFirstAttibuteValue; // 0x410
	UMirTextBlock* mTxtFirstAttibuteNextValue; // 0x418
	UMirImage* mImgFirstArrow; // 0x420
	UMirTextBlock* mTxtSecondAttibuteName; // 0x428
	UMirTextBlock* mTxtSecondAttibuteValue; // 0x430
	UMirTextBlock* mTxtSecondAttibuteNextValue; // 0x438
	UMirImage* mImgSecondArrow; // 0x440
	UMirCanvasPanel* mCanvasLock; // 0x448
	UMirTextBlock* mTxtFixedLock; // 0x450
	UMM_Common_ToolTipBtn* mBtnLockTooltip; // 0x458
	TArray<UMM_Guild_DevItemSlot*> mLockSlotList; // 0x460
	UMM_Common_Btn* mBtnLockConfirm; // 0x470
	UMirCanvasPanel* mCanvasOpen; // 0x478
	UMirProgressBar* mPrograssBarExp; // 0x480
	UMirTextBlock* mTxtExpValue; // 0x488
	UMM_Common_Btn_IconText* mBtnRecommend; // 0x490
	UMM_Common_Btn_Symbol* mBtnRewardDonation; // 0x498
	UMM_Common_Btn* mBtnDonateCancel; // 0x4a0
	UMM_Common_Btn_Cost* mBtnDonateCost; // 0x4a8
	UMirCanvasPanel* mPanelTouchArea; // 0x4b0
	UMirTextBlock* mTxtOpenTitle; // 0x4b8
	UMirRichTextBlock* mTxtTimeTicket; // 0x4c0
	UMirTextBlock* mTxtTimeTicketDesc; // 0x4c8
	UMM_Guild_DevRewardDonation* mDevRewardDonation; // 0x4d0
	UMirCanvasPanel* mCanvasLucky; // 0x4d8
	UMirCanvasPanel* mCanvasDonateResult; // 0x4e0
	UMirTextBlock* mTxtRewardExp; // 0x4e8
	UMirCanvasPanel* mCanvasLevelUpReady; // 0x4f0
	UMirProgressBar* mProgressBarReady; // 0x4f8
	UMirTextBlock* mTxtReadyTime; // 0x500
	TArray<UMirCanvasPanel*> mCanvasCostList; // 0x508
	TArray<UMirTextBlock*> mTxtLevelUpCostValueList; // 0x518
	TArray<UMirButton*> mBtnCostList; // 0x528
	TArray<UMirImage*> mImgLevelUpCostIconList; // 0x538
	UMirTextBlock* mTxtLevelUpReadyCostDesc; // 0x548
	UMirRichTextBlock* mRTxtLevelUpSuccessPercent; // 0x550
	UMM_Common_ToolTipBtn* mBtnTooltipSuccessPercent; // 0x558
	UImage* mImgLevelupReadyIcon; // 0x560
	UMirTextBlock* mTxtLevelUpReadyDesc; // 0x568
	UMM_Common_Btn* mBtnStartLevelUp; // 0x570
	UMM_Common_Btn_Symbol* mBtnGuildCost; // 0x578
	UMM_Popup_GuildCost* mGuildCost; // 0x580
	UMirCanvasPanel* mCanvasLevelUpIng; // 0x588
	UMirProgressBar* mProgressBarLevelUpIng; // 0x590
	UMirTextBlock* mTxtLevelUpTimer; // 0x598
	UMM_Common_Btn_Symbol* mBtnRewardLevelUpIng; // 0x5a0
	UMirTextBlock* mTxtLevelUpIngDesc; // 0x5a8
	UMM_Common_Btn* mBtnLevelUpConfirm; // 0x5b0
	UMirCanvasPanel* mCanvasMaxLevel; // 0x5b8
	UMirTextBlock* mTxtMaxLevelDesc; // 0x5c0
	UMM_Common_Btn* mBtnLevelMaxConfirm; // 0x5c8
	UMirImage* mImgDevlopeIcon; // 0x5d0
	UMirImage* mImgSkillUseIcon; // 0x5d8
	UMirImage* mImgReadyDevlopeIcon; // 0x5e0
	UMirImage* mImgReadySkillUseIcon; // 0x5e8
	UMirTextBlock* mTxtReadySkillUse; // 0x5f0
	UMirTextBlock* mTxtReadySkillUseDesc; // 0x5f8
	UMirTextBlock* mTxtRemainTimeDesc; // 0x600
	UMM_Common_ToolTipBtn* mInfoBtnReady; // 0x608
	UMM_Common_ToolTipBtn* mInfoBtnOnGoing; // 0x610
};

struct UMM_Slot_Quest {
	int32_t m_ReqRewardToStr; // 0x2e8
	int32_t m_AcceptToStr; // 0x2ec
	int32_t m_GiveUpToStr; // 0x2f0
	int32_t m_MoveToStr; // 0x2f4
	int32_t m_CompleteToStr; // 0x2f8
	int32_t m_FinishToStr; // 0x2fc
	int32_t m_CombatToStr; // 0x300
	int32_t m_MissionAcceptToStr; // 0x304
	int32_t m_MissionAcceptNumToStr; // 0x308
	int32_t m_QuestNormalToStr; // 0x30c
	int32_t m_MissionTitleWithCountToStr; // 0x310
	int32_t m_EndToStr; // 0x314
	int32_t m_QuestRepeatToStr; // 0x318
	int32_t m_DoNotCommitToStr; // 0x31c
	FLinearColor m_EnableColor; // 0x320
	FLinearColor m_DisableColor; // 0x330
	FLinearColor m_CombatDefaultColor; // 0x340
	int32_t m_PartyToImg; // 0x350
	int32_t m_RepeatCountToStr; // 0x354
	int32_t m_RepeatCountCheckToStr; // 0x358
	UMirImage* m_Background; // 0x360
	UMirImage* m_Img_Focus; // 0x368
	UMirImage* m_Icon; // 0x370
	UMirImage* m_PartyIcon; // 0x378
	UMirImage* m_Type; // 0x380
	UMirTextBlock* m_QuestTitle; // 0x388
	UMirTextBlock* m_MissionTitle; // 0x390
	UMirTextBlock* m_CombatPoint; // 0x398
	TArray<UMM_Slot_Material*> m_RewardSlots; // 0x3a0
	UMM_Common_Btn* m_Accept; // 0x3b0
	UMirImage* m_CompleteEffectImg; // 0x3b8
	UMirImage* m_EndImg; // 0x3c0
	UMM_Common_Btn* m_GiveUp; // 0x3c8
	UMM_Common_Btn* m_EnableQuest; // 0x3d0
	UPanelWidget* m_BtnGrid; // 0x3d8
	UPanelWidget* m_BtnsGrid; // 0x3e0
	UMirImage* m_Disable; // 0x3e8
	UMirImage* m_Img_RepeatIcon; // 0x3f0
	UMirTextBlock* m_Txt_RepeatCount; // 0x3f8
	UMirImage* m_Img_Repeat; // 0x400
	UMirImage* m_Img_RepeatDisable; // 0x408
	UMirCheckBox* m_Check_RepeatToggle; // 0x410
	UMirImage* m_Img_RecommendParty; // 0x418
	UPanelWidget* m_MainPanel; // 0x420
	UMirButton* m_Btn_Back; // 0x428
	UMM_Common_PartyMember* m_pCommonPartyMember; // 0x430
};

struct UIAPStoreModuleBase {
	FIAPUserRequestData m_UserRequestProductData; // 0x58
	FIAPProductData m_PurchaseProductData; // 0x98
	TArray<EIAPPurchaseState> m_PurchaseInProgress; // 0x138
	TArray<FString> ProcessedTransactionIDs; // 0x148
	TArray<FString> ProcessedTransactionReceipts; // 0x158
	FTimerHandle DelayHideBlockScreenTimeHandle; // 0x168
	TMap<FString, FIAPMarketProductData> m_MarketProductDataMap; // 0x170
};

struct ULevelActorContainer {
	TArray<AActor*> Actors; // 0x28
};

struct UMovieScenePrimitiveMaterialTrack {
	int32_t MaterialIndex; // 0x88
};

struct USavePatchInfo {
	int32_t m_MaxStep; // 0x28
	TArray<FPatchFileInfo> m_PatchFileInfos; // 0x30
	int32_t m_nDataTableVersion; // 0x40
};

struct UMM_Popup_Durability {
	UWidgetAnimation* m_AniStart; // 0x2f0
	UWidgetAnimation* m_AniEnd; // 0x2f8
	UMM_Slot_Registered* Slot_Equip; // 0x300
	UMM_Slot_Material* Slot_Material; // 0x308
	UMM_Common_Btn* Btn_Cancel; // 0x310
	UMM_Common_Btn* Btn_Accept; // 0x318
	UMM_Common_Btn_Symbol* btn_close; // 0x320
	UMirTextBlock* Txt_Durability; // 0x328
	UMirTextBlock* Txt_Material_Count; // 0x330
	UPanelWidget* Grid_NeedCost1; // 0x338
	UPanelWidget* Grid_NeedCost2; // 0x340
	UMirImage* Img_NeedCost1; // 0x348
	UMirTextBlock* Txt_NeedCost1; // 0x350
	UMirButton* BtnMain_NeedCost1; // 0x358
	UMirImage* Img_NeedCost2; // 0x360
	UMirTextBlock* Txt_NeedCost2; // 0x368
	UMirButton* BtnMain_NeedCost2; // 0x370
	int32_t m_CostType_2; // 0x378
	int32_t m_CostType_3; // 0x37c
};

struct APaperSpriteActor {
	UPaperSpriteComponent* RenderComponent; // 0x218
};

struct UMM_Hud_ServerVisitMap {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f0
	UMirScrollBox* m_Scr_WaypointList; // 0x2f8
	UMM_Common_Btn_Cost* m_Btn_Move; // 0x300
	UMM_ServerVisit_Waypoint_Category* m_arWaypointCategroy[0x4]; // 0x308
};

struct UAISense_Hearing {
	TArray<FAINoiseEvent> NoiseEvents; // 0x80
	float SpeedOfSoundSq; // 0x90
};

struct UMaterialExpressionArcsineFast {
	FExpressionInput Input; // 0x40
};

struct UMM_GhostTrailComponent {
	bool ActiveAtStart; // 0xb0
	float GhostSpawnDelay; // 0xb4
	float GhostLifetime; // 0xb8
	bool GhostAllMeshes; // 0xbc
	TArray<FName> TagsToGhost; // 0xc0
	UMaterialInstance* GhostMaterial; // 0xd0
	TArray<FGhostMaterialParam> MatParams; // 0xd8
	bool ScaleOverTime; // 0xe8
	UCurveFloat* ScaleCurve; // 0xf0
	int32_t GhostMaxCount; // 0xf8
	bool LastIsInvisible; // 0xfc
	bool VelocityDepending; // 0xfd
	float VelocityThreshold; // 0x100
	AMM_GhostTrailManager* Manager; // 0x108
	FString ManagerPath; // 0x110
	bool ActiveTrail; // 0x120
};

struct UMM_Common_Popup_Reward {
	UWrapBox* m_WrapBox; // 0x2e0
	TArray<UMM_Slot_Material*> RewardList; // 0x2e8
	UMirTextBlock* Txt_Title; // 0x2f8
	UMirRichTextBlock* RichTxt_GuideMessage; // 0x300
	UMM_Common_Btn_Symbol* btn_close; // 0x308
	UMirButton* Btn_Background; // 0x310
	bool m_IsMakeItem; // 0x318
};

struct UMM_Hud_Chat_ItemShare {
	UMM_Slot_Registered* m_ShareItemInfo; // 0x2e0
	UMirButton* Btn_ItemInfo; // 0x2e8
	UMirImage* m_Img_CharaIcon; // 0x2f0
	UMirTextBlock* m_Txt_SendTime; // 0x2f8
	UMirTextBlock* m_Txt_Prefix; // 0x300
	UMirTextBlock* m_Txt_Nickname; // 0x308
	UMirTextBlock* m_Txt_ItemName; // 0x310
	int64_t m_SendUserUID; // 0x318
	int64_t m_ShareItemUID; // 0x320
	int32_t m_SmeltingLv; // 0x328
	bool m_IsTranscendible; // 0x32c
	int32_t m_TranscendStep; // 0x330
	UMirButton* Btn_UserInteraction; // 0x338
	FString m_SendNickname; // 0x340
};

struct UMM_HudGetSpecialItemMsg {
	float m_fShowTime; // 0x2e0
	UWidgetAnimation* m_AniStart; // 0x2e8
	UWidgetAnimation* m_AniEnd; // 0x2f0
	UMirImage* m_Img_ItemIcon; // 0x308
	UMirImage* m_Img_ItemGrade; // 0x310
	UMirTextBlock* m_Txt_ItemName; // 0x318
	UMirTextBlock* m_Txt_Get; // 0x320
};

struct UAnimCompress_ACLBase {
	FString Description; // 0x28
	char bNeedsSkeleton : 1; // 0x38
	char bEnableSegmenting : 1; // 0x38
	uint32_t IdealNumFramesPerSegment; // 0x3c
	uint32_t MaxNumFramesPerSegment; // 0x40
	AnimationCompressionFormat TranslationCompressionFormat; // 0x44
	AnimationCompressionFormat RotationCompressionFormat; // 0x45
	AnimationCompressionFormat ScaleCompressionFormat; // 0x46
	float MaxCurveError; // 0x48
};

struct UMM_ClassSelect_Slot {
	int32_t m_ClassID; // 0x2e0
	ESlateVisibility m_ClassSelectIconVisible; // 0x2e4
	UMirImage* m_pClassFaceImage; // 0x2e8
	UMirImage* m_pLockImage; // 0x2f0
	UMirTextBlock* m_ClassNameText; // 0x2f8
	UMirButton* m_ClassSelectBtn; // 0x300
};

struct UMM_ContentsState {
	UMirTextBlock* m_Txt_TitleName; // 0x2e0
	UMirTextBlock* m_Txt_TitleValue; // 0x2e8
	UPanelWidget* m_arHrz_State[0x8]; // 0x2f0
	UMirImage* m_arImg_StateIcon[0x8]; // 0x330
	UMirTextBlock* m_arTxt_StateName[0x8]; // 0x370
	UMirRichTextBlock* m_arRTxt_StateValue[0x8]; // 0x3b0
};

struct UMM_Common_Btn_IconText {
	UObject* m_Icon; // 0x3f8
	bool m_bUseCustomSize; // 0x400
	FVector2D m_vCustomSize; // 0x404
	UImage* m_ImgIcon; // 0x410
};

struct UMM_Forge_Ability_Item {
	UMirTextBlock* Txt_Title; // 0x2f0
	UMirTextBlock* Txt_BeforeValue; // 0x2f8
	UMirTextBlock* Txt_AfterValue; // 0x300
	UMirTextBlock* Txt_PlusValue; // 0x308
};

struct UAnimNotify_PlaySound {
	USoundBase* sound; // 0x38
	float VolumeMultiplier; // 0x40
	float PitchMultiplier; // 0x44
	char bFollow : 1; // 0x48
	FName AttachName; // 0x4c
};

struct UMM_Hud_Chat_UserSlot {
	int32_t STRING_BTN_UNBLOCK; // 0x2e8
	UMirImage* img_profile; // 0x2f0
	UMirTextBlock* txt_nickname; // 0x2f8
	UMirButton* Btn_WhisperChat; // 0x300
	UMM_Common_Btn* Btn_UnBlock; // 0x308
};

struct ALevelBounds {
	bool bAutoUpdateBounds; // 0x218
};

struct APetRenderRoom {
	USceneComponent* m_pSceneComponent; // 0x220
	USceneComponent* m_pPetPivot; // 0x228
	USkeletalMeshComponent* m_pMesh; // 0x230
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x238
	UPetCameraData* m_pPetCameraData; // 0x240
	UAnimInstance* m_pAnimInstance; // 0x248
	UAnimMontage* m_pMontage; // 0x250
	UObject* m_pMeshObjcet; // 0x258
	UObject* m_pAnimObjcet; // 0x260
};

struct UMM_AddOptionAbility {
	UMirWidgetData* Mir_Widgetdata; // 0x2e0
	FLinearColor UnselectColor; // 0x2e8
	FLinearColor UnselectTextColor; // 0x2f8
	float UnselectOpacity; // 0x308
	UMirImage* Img_Select; // 0x310
	UMirTextBlock* Txt_Ability; // 0x318
	UMirButton* Btn_Main; // 0x320
	UPanelWidget* Effect_Panel; // 0x328
};

struct UMM_UIShopGoodsScrollBox {
	UMM_UIShopGoodsSlot* mGoodSlot1; // 0x2e8
	UMM_UIShopGoodsSlot* mGoodSlot2; // 0x2f0
};

struct UBehaviorTree {
	UBTCompositeNode* RootNode; // 0x28
	UBlackboardData* BlackboardAsset; // 0x30
	TArray<UBTDecorator*> RootDecorators; // 0x38
	TArray<FBTDecoratorLogic> RootDecoratorOps; // 0x48
};

struct AAudioVolume {
	float Priority; // 0x250
	char bEnabled : 1; // 0x254
	FReverbSettings Settings; // 0x258
	FInteriorSettings AmbientZoneSettings; // 0x278
};

struct UUniformGridSlot {
	EHorizontalAlignment HorizontalAlignment; // 0x38
	EVerticalAlignment VerticalAlignment; // 0x39
	int32_t Row; // 0x3c
	int32_t Column; // 0x40
};

struct UUserDefinedStruct {
	EUserDefinedStructureStatus Status; // 0xa8
	FGuid Guid; // 0xac
};

struct UAIPerceptionSystem {
	TArray<UAISense*> Senses; // 0x88
	float PerceptionAgingRate; // 0x98
};

struct UMM_Dungeon_Shop {
	UMirTextBlock* m_Txt_GoodsRecord; // 0x2f8
	UMM_Common_ToolTipBtn* m_Btn_Tooltip; // 0x300
	UMirScrollBox* m_ScrollBox; // 0x308
	UMirTextBlock* m_Txt_Title; // 0x310
	UMM_Slot_Inventory* m_TargetSlot; // 0x318
	UMirTextBlock* m_Txt_ItemDesc; // 0x320
	UMirTextBlock* m_Txt_ItemName; // 0x328
	UMM_Item_Make_Slider* m_ItemMakeSlider; // 0x330
	UMirImage* m_Img_CostIcon; // 0x338
	UMirTextBlock* m_Txt_Cost; // 0x340
	UMM_Common_Btn* m_CB_Buy; // 0x348
};

struct UAssetMappingTable {
	TArray<FAssetMapping> MappedAssets; // 0x28
};

struct AQuestStatusCheckTrigger {
	int32_t m_QuestID; // 0x298
	int32_t m_SubQuestIndex; // 0x29c
};

struct UEnvQueryTest_Volume {
	UEnvQueryContext* VolumeContext; // 0x1c0
	AVolume* VolumeClass; // 0x1c8
	char bDoComplexVolumeTest : 1; // 0x1d0
};

struct UMaterialExpressionMaterialFunctionCall {
	UMaterialFunctionInterface* MaterialFunction; // 0x40
	FMaterialParameterInfo FunctionParameterInfo; // 0x48
};

struct UMM_Slot_Teleport_List {
	UMirButton* m_pBtnListClick; // 0x2f0
	UMirTextBlock* m_pTxtMapName; // 0x2f8
	UMirImage* m_pImgSelect; // 0x300
};

struct UTownAlarmWidget {
	FText m_TownAlarmText; // 0x2e0
	UWidgetAnimation* WidgetAnim_appear; // 0x2f8
	UTextBlock* m_TownAlarm; // 0x300
};

struct UBTTaskNode {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct UMovieSceneSkeletalAnimationTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x58
	UMovieSceneSkeletalAnimationOptimizedSection* AnimationOptimizedSection; // 0x68
	bool bUseLegacySectionIndexBlend; // 0x70
};

struct UParticleModuleTypeDataAnimTrail {
	char bDeadTrailsOnDeactivate : 1; // 0x30
	char bEnablePreviousTangentRecalculation : 1; // 0x30
	char bTangentRecalculationEveryFrame : 1; // 0x30
	float TilingDistance; // 0x34
	float DistanceTessellationStepSize; // 0x38
	float TangentTessellationStepSize; // 0x3c
	float WidthTessellationStepSize; // 0x40
};

struct UCompositionGraphCaptureProtocol {
	FCompositionGraphCapturePasses IncludeRenderPasses; // 0x58
	bool bCaptureFramesInHDR; // 0x68
	int32_t HDRCompressionQuality; // 0x6c
	EHDRCaptureGamut CaptureGamut; // 0x70
	FSoftObjectPath PostProcessingMaterial; // 0x78
	bool bDisableScreenPercentage; // 0x90
	UMaterialInterface* PostProcessingMaterialPtr; // 0x98
};

struct ASpectatorCamera {
	FVector m_OldCameraLocation; // 0x780
	FVector m_NewCameraLocation; // 0x78c
	FRotator m_OldCameraRotation; // 0x798
	FRotator m_NewCameraRotation; // 0x7a4
	FVector m_MoveDir; // 0x7b0
	float m_MoveSpeed; // 0x7bc
	float m_WalkSpeed; // 0x7c0
	float m_RunSpeed; // 0x7c4
	float m_MouseSensitivity; // 0x7c8
	float m_MoveInterpSpeed; // 0x7cc
	float m_RotationInterpSpeed; // 0x7d0
	TArray<float> MoveSpeedList; // 0x7d8
	TArray<float> RunSpeedList; // 0x7e8
	TArray<float> MouseSensitivityList; // 0x7f8
	AActor* m_pTargetActor; // 0x818
};

struct UMM_TotalQuickSlot_Attack {
	UMM_GameOption_Select* m_AutoBattle_Range; // 0x2e0
	UMM_GameOption_Select* m_AutoSkillSwitch; // 0x2e8
	UMM_GameOption_Switch* m_GameOptionSwitch1; // 0x2f0
	UMM_GameOption_Switch* m_GameOptionSwitch2; // 0x2f8
	UMM_GameOption_Switch* m_GameOptionSwitch3; // 0x300
	UMM_GameOption_Switch* m_GameOptionSwitch4; // 0x308
	UMM_GameOption_Switch* m_GameOptionSwitch5; // 0x310
	UTextBlock* m_AutoBattle_Text; // 0x318
};

struct ACommonUIBackGround {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UParticleModuleCollisionGPU {
	FRawDistributionFloat Resilience; // 0x30
	FRawDistributionFloat ResilienceScaleOverLife; // 0x60
	float Friction; // 0x90
	float RandomSpread; // 0x94
	float RandomDistribution; // 0x98
	float RadiusScale; // 0x9c
	float RadiusBias; // 0xa0
	EParticleCollisionResponse Response; // 0xa4
	EParticleCollisionMode CollisionMode; // 0xa5
};

struct UBlendProfile {
	USkeleton* OwningSkeleton; // 0x30
	TArray<FBlendProfileBoneEntry> ProfileEntries; // 0x38
};

struct UParticleModuleOrientationAxisLock {
	EParticleAxisLock LockAxisFlags; // 0x30
};

struct UMM_Dominion_Title_NormalGroup {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_Guild_DevRewardDonation {
	UMirTextBlock* mTxtTitle; // 0x2e0
	UMM_Common_Btn_Symbol* mBtnClose; // 0x2e8
	UMirTextBlock* mTxtDevExpTitle; // 0x2f0
	UMirImage* mImgDevExpIcon; // 0x2f8
	UMirTextBlock* mTxtDevExpValue; // 0x300
	UMirTextBlock* mTxtGuildExpTitle; // 0x308
	UMirImage* mImgGuildExpIcon; // 0x310
	UMirTextBlock* mTxtGuildExpValue; // 0x318
	UMirTextBlock* mTxtMoneyTitle_2; // 0x320
	UMirImage* mImgMoneyIcon_2; // 0x328
	UMirTextBlock* mTxtMoneyValue_2; // 0x330
	UMirTextBlock* mTxtMoneyTitle_3; // 0x338
	UMirImage* mImgMoneyIcon_3; // 0x340
	UMirTextBlock* mTxtMoneyValue_3; // 0x348
};

struct USoundNodeParamCrossFade {
	FName ParamName; // 0x50
};

struct USharePost {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_B_QuestNormal {
	int32_t m_PreceedingToStr; // 0x2f0
	int32_t m_HaveNoQuestToStr; // 0x2f4
	int32_t m_MissionRewardToStr; // 0x2f8
	int32_t m_HaveNoQuestInLocalToStr; // 0x2fc
	int32_t m_NormalToStr; // 0x300
	int32_t m_WatchingAllQuestToStr; // 0x304
	TMap<EStageType, int32_t> m_StageTypeToStr; // 0x308
	int32_t m_MaxRepeatCountToStr; // 0x358
	int32_t m_RepeatCountToStr; // 0x35c
	UMM_CommonVerticalTabSet* m_VerticalSet; // 0x360
	UMM_CommonHorizontalTabSet* m_HorizontalSet; // 0x368
	UMirListView* m_ListView_QuestList; // 0x370
	UMirCheckBox* m_CheckCompleteQuest; // 0x378
	UMirTextBlock* m_CompleteQuest; // 0x380
	UMirTextBlock* m_Msg; // 0x388
	UMirTextBlock* m_Txt_Repeat; // 0x390
	UMirImage* m_Auto_Active; // 0x398
	UMirImage* m_Auto_DeActive; // 0x3a0
	UMM_Common_Btn* m_AutoRun_Btn; // 0x3a8
	UMM_Common_Btn* m_ReceiveAll_Btn; // 0x3b0
	UMM_Common_ToolTipBtn* m_pBtnCommToolTip; // 0x3b8
	TMap<int32_t, int32_t> m_SlotLockInfos; // 0x468
	TArray<UQuestSlotObj*> m_arQuestSlotObj; // 0x4c8
};

struct UMM_BP_Attendance_Reward_Slot {
	UMM_BP_Attendance_Day_Slot* m_Day_Slot; // 0x2e0
	UMM_BattlePass_Item_Slot* m_Reward_ItemSlot[0x2]; // 0x2e8
};

struct ULogoMediaWidget {
	UMediaPlayer* m_MediaPlayer; // 0x2e0
	UMediaTexture* m_MediaTexture; // 0x2e8
	UMediaSource* m_Movie_StartLoop; // 0x2f0
	UMediaSource* m_Movie_AccountConnectIn; // 0x2f8
	UMediaSource* m_Movie_AccountConnectLoop; // 0x300
	UMediaSource* m_Movie_AccessLoop; // 0x308
	UMediaSource* m_Movie_EndIn; // 0x310
	USoundBase* m_LogoBgm; // 0x318
	AMediaSoundActor* m_MediaSoundActor; // 0x328
};

struct ADebugCameraController {
	char bShowSelectedInfo : 1; // 0x568
	char bIsFrozenRendering : 1; // 0x568
	char bIsOrbitingSelectedActor : 1; // 0x568
	char bOrbitPivotUseCenter : 1; // 0x568
	char bEnableBufferVisualization : 1; // 0x568
	char bEnableBufferVisualizationFullMode : 1; // 0x568
	char bIsBufferVisualizationInputSetup : 1; // 0x568
	char bLastDisplayEnabled : 1; // 0x568
	UDrawFrustumComponent* DrawFrustum; // 0x570
	AActor* SelectedActor; // 0x578
	UPrimitiveComponent* SelectedComponent; // 0x580
	FHitResult SelectedHitPoint; // 0x588
	APlayerController* OriginalControllerRef; // 0x610
	UPlayer* OriginalPlayer; // 0x618
	float SpeedScale; // 0x620
	float InitialMaxSpeed; // 0x624
	float InitialAccel; // 0x628
	float InitialDecel; // 0x62c
};

struct UMM_Common_PopUp_Count {
	UWidgetAnimation* WidgetAnimation_Start; // 0x348
	UWidgetAnimation* WidgetAnimation_Count; // 0x350
	UWidgetAnimation* WidgetAnimation_Name; // 0x358
	UPanelWidget* Pannel_Count; // 0x360
	UPanelWidget* Pannel_Start; // 0x368
	UPanelWidget* Pannel_Name; // 0x370
	UImage* Image_Count; // 0x378
	UTextBlock* TextBlock_Name; // 0x380
};

struct UDebugCameraControllerSettings {
	TArray<FDebugCameraControllerSettingsViewModeIndex> CycleViewModes; // 0x38
};

struct UProceduralFoliageSpawner {
	int32_t RandomSeed; // 0x28
	float TileSize; // 0x2c
	int32_t NumUniqueTiles; // 0x30
	float MinimumQuadTreeSize; // 0x34
	TArray<FFoliageTypeObject> FoliageTypes; // 0x40
	bool bNeedsSimulation; // 0x50
};

struct UMaterialExpressionPixelDepth {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMovieSceneVectorTrack {
	int32_t NumChannelsUsed; // 0x88
};

struct UParticleModuleAccelerationOverLifetime {
	FRawDistributionVector AccelOverLife; // 0x38
};

struct UMM_B_ItemCollection {
	int32_t m_CollectionID; // 0x2f0
	UMM_CommonHorizontalTabSet* m_Set_Horizon; // 0x2f8
	UMM_CommonVerticalTabSet* m_Set_Vertical; // 0x300
	UMM_Collect_TierList* m_TierFilter; // 0x308
	UMM_Common_Btn_Symbol* m_Btn_Search; // 0x310
	UMM_Common_Btn_Symbol* m_Btn_CancelSearch; // 0x318
	UMirEditableText* m_InputTxt_Search; // 0x320
	UMM_Common_Board_Notice* m_Notice_NoResult; // 0x328
	UMM_Common_ComboList* m_Combo_Filter; // 0x330
	UMM_Auction_Tab_Search_Enchant* m_SearchSmeltTab; // 0x338
	UMirListView* m_ListView_CollectionList; // 0x340
	UWidgetSwitcher* m_Switer_Infos; // 0x348
	UMM_ItemCollectProgress* m_Collection_Progress; // 0x350
	UMM_ItemCollectEffect* m_Collection_Effects; // 0x358
	UMM_CollectItemInfo* m_Collection_ItemInfo; // 0x360
	UMM_Common_ToolTipBtn* m_Btn_Info; // 0x368
	int32_t m_SuccessRegistStrID; // 0x370
	int32_t m_WarningInsertTextStr; // 0x374
	int32_t m_WarningOverInsertTextStr; // 0x378
	int32_t m_HasNoResultStr; // 0x37c
	int32_t m_HasNoFilterStr; // 0x380
	int32_t m_InsertSearchStr; // 0x384
	int32_t m_InfoToolTipID; // 0x388
	TArray<UCollectionSlotObj*> m_arCollectionSlotObj; // 0x390
};

struct USpectatorPawnMovement {
	char bIgnoreTimeDilation : 1; // 0x150
};

struct UMM_Costume_Inventory_Tab {
	COSTUME_PARTS CostumeParts; // 0x2f0
	int32_t DefaultIconId; // 0x2f4
	int32_t SelectIconId; // 0x2f8
	UMirImage* Img_Symbol; // 0x300
	UMirImage* Img_Symbol_Select; // 0x308
	UMirImage* m_Img_Indicator; // 0x310
	UMirTextBlock* txt_count; // 0x318
	UMirButton* Btn_Tab; // 0x320
	UPanelWidget* m_PanEffect; // 0x328
};

struct UMM_Guild_DevSlot {
	UWidgetAnimation* mAniRecommend; // 0x2f0
	UCanvasPanel* mPanelSlot; // 0x2f8
	UMirImage* mImgBG; // 0x300
	UMirImage* mImgLockBG; // 0x308
	UMirImage* mImgIcon; // 0x310
	UMirRichTextBlock* mTxtName; // 0x318
	UMirTextBlock* mTxtLevel; // 0x320
	UMirTextBlock* mTxtExp; // 0x328
	UMirProgressBar* mProgressGauge; // 0x330
	UOverlay* mOverLayRecommend; // 0x338
	UMirCanvasPanel* mPanelRecommendAni; // 0x340
	UMirTextBlock* mTxtRecommend; // 0x348
	UMirButton* mBtnDevSlot; // 0x350
	UMirCanvasPanel* mPanelTranscendence; // 0x358
	UMirTextBlock* mTxtTranscendence; // 0x360
	UMirCanvasPanel* mPanelSp; // 0x368
	UMirTextBlock* mTxtSp; // 0x370
};

struct ARecastNavMesh {
	char bDrawTriangleEdges : 1; // 0x3f8
	char bDrawPolyEdges : 1; // 0x3f8
	char bDrawFilledPolys : 1; // 0x3f8
	char bDrawNavMeshEdges : 1; // 0x3f8
	char bDrawTileBounds : 1; // 0x3f8
	char bDrawPathCollidingGeometry : 1; // 0x3f8
	char bDrawTileLabels : 1; // 0x3f8
	char bDrawPolygonLabels : 1; // 0x3f8
	char bDrawDefaultPolygonCost : 1; // 0x3f9
	char bDrawLabelsOnPathNodes : 1; // 0x3f9
	char bDrawNavLinks : 1; // 0x3f9
	char bDrawFailedNavLinks : 1; // 0x3f9
	char bDrawClusters : 1; // 0x3f9
	char bDrawOctree : 1; // 0x3f9
	char bDrawOctreeDetails : 1; // 0x3f9
	char bDrawMarkedForbiddenPolys : 1; // 0x3f9
	char bDistinctlyDrawTilesBeingBuilt : 1; // 0x3fa
	char bDrawNavMesh : 1; // 0x3fa
	float DrawOffset; // 0x3fc
	char bFixedTilePoolSize : 1; // 0x400
	int32_t TilePoolSize; // 0x404
	float TileSizeUU; // 0x408
	float CellSize; // 0x40c
	float CellHeight; // 0x410
	float AgentRadius; // 0x414
	float AgentHeight; // 0x418
	float AgentMaxHeight; // 0x41c
	float AgentMaxSlope; // 0x420
	float AgentMaxStepHeight; // 0x424
	float MinRegionArea; // 0x428
	float MergeRegionSize; // 0x42c
	float MaxSimplificationError; // 0x430
	int32_t MaxSimultaneousTileGenerationJobsCount; // 0x434
	int32_t TileNumberHardLimit; // 0x438
	int32_t PolyRefTileBits; // 0x43c
	int32_t PolyRefNavPolyBits; // 0x440
	int32_t PolyRefSaltBits; // 0x444
	FVector NavMeshOriginOffset; // 0x448
	float DefaultDrawDistance; // 0x454
	float DefaultMaxSearchNodes; // 0x458
	float DefaultMaxHierarchicalSearchNodes; // 0x45c
	ERecastPartitioning RegionPartitioning; // 0x460
	ERecastPartitioning LayerPartitioning; // 0x461
	int32_t RegionChunkSplits; // 0x464
	int32_t LayerChunkSplits; // 0x468
	char bSortNavigationAreasByCost : 1; // 0x46c
	char bPerformVoxelFiltering : 1; // 0x46c
	char bMarkLowHeightAreas : 1; // 0x46c
	char bFilterLowSpanSequences : 1; // 0x46c
	char bFilterLowSpanFromTileCache : 1; // 0x46c
	char bDoFullyAsyncNavDataGathering : 1; // 0x46c
	char bUseBetterOffsetsFromCorners : 1; // 0x46c
	char bStoreEmptyTileLayers : 1; // 0x46c
	char bUseVirtualFilters : 1; // 0x46d
	char bAllowNavLinkAsPathEnd : 1; // 0x46d
	char bUseVoxelCache : 1; // 0x46d
	float TileSetUpdateInterval; // 0x470
	float HeuristicScale; // 0x474
	float VerticalDeviationFromGroundCompensation; // 0x478
};

struct UMM_GetItemWayList {
	FMargin SlotPadding; // 0x300
	UMirTextBlock* Txt_Title; // 0x320
	UMirImage* Img_TypeIcon; // 0x328
	UPanelWidget* Grid_BackPanel; // 0x330
	UScrollBox* Scr_List; // 0x338
	UButton* Btn_Slot; // 0x340
	int32_t TypeIconID; // 0x348
	int32_t m_Type; // 0x34c
	TArray<UMM_GetItemWayListSlot*> Arr_Slot; // 0x350
	FVector2D ScrollBox_Pos; // 0x360
	FVector2D ScrollBox_Size; // 0x368
};

struct UMM_Customizing_Slider_ControlBar {
	float SLIDER_MAX_SIZE; // 0x310
	float SliderCorrectionValue; // 0x314
	UMirButton* m_MinusBtn; // 0x318
	UMirButton* m_PlusBtn; // 0x320
	UMirSlider* m_ValueSlider; // 0x328
	UMirTextBlock* m_DataInfoText; // 0x330
	UMirImage* Img_KeypadOn; // 0x338
	UMirImage* Img_KeypadOff; // 0x340
	int32_t m_CustomizingType; // 0x348
	int32_t m_SliderValue; // 0x34c
	FString m_TypeString; // 0x350
	UMM_UI_Drag* m_pDragButton; // 0x360
	UCanvasPanel* m_SliderBG_Parent; // 0x368
	USpacer* m_SliderBG; // 0x370
	float m_ControlPosX; // 0x378
	float m_ControlRatio; // 0x37c
	float SumDeltaTime; // 0x380
	float SaveSec; // 0x384
	int32_t AddBtnValue; // 0x388
	float AddValueUpdateTime; // 0x38c
	bool Btn_Pressed_Down; // 0x390
	bool Btn_Pressed_Up; // 0x391
};

struct UMM_PopupGetItemWidget {
	int32_t TitleStrID; // 0x2f0
	FMargin SlotPadding; // 0x2f4
	int32_t Event_ScreenStrID; // 0x304
	int32_t TreasureGobllin_ScreenStrID; // 0x308
	UScrollBox* Scr_CategoryList; // 0x310
	UMM_Common_Btn_Symbol* btn_close; // 0x318
	UMirButton* Btn_BG; // 0x320
	UTextBlock* Txt_Title; // 0x328
	UScrollBox* Category_Depth1; // 0x330
	UMM_GetItemWayList* DetailList; // 0x338
	TArray<UMM_GetItemWayListSlot_Category*> Arr_CategoryList; // 0x340
	TArray<UMM_CommonVerticalTabBtn_Symbol*> Arr_TypeList; // 0x350
	bool FirstChoice; // 0x360
	bool bAsyncLoaded; // 0x361
	int32_t MakeSlotCount; // 0x364
	int32_t FirstSelectType_ItemWayType; // 0x368
	int32_t FirstSelectType_MoneyWayType; // 0x36c
	TArray<int32_t> SortIndexList; // 0x370
};

struct UMaterialExpressionSkyAtmosphereDistantLightScatteredLuminance {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UPhysicsSpringComponent {
	float SpringStiffness; // 0x220
	float SpringDamping; // 0x224
	float SpringLengthAtRest; // 0x228
	float SpringRadius; // 0x22c
	ECollisionChannel SpringChannel; // 0x230
	bool bIgnoreSelf; // 0x231
	float SpringCompression; // 0x234
};

struct UShadowMapTexture2D {
	EShadowMapFlags ShadowmapFlags; // 0x100
};

struct UGeometryCacheCodecBase {
	TArray<int32_t> TopologyRanges; // 0x28
};

struct UMM_Common_ComboSlot {
	UPanelWidget* m_Panel_Back; // 0x2e0
	UMirTextBlock* m_Txt_Name; // 0x2e8
	UMirImage* m_Img_Select; // 0x2f0
	UMirButton* m_Btn_Main; // 0x2f8
};

struct UMM_Popup_DominionPrizeSlot {
	UMirImage* m_pImgIcon; // 0x2e0
	UMirTextBlock* m_pTxtName; // 0x2e8
	UMirTextBlock* m_pTxtCount; // 0x2f0
	UMirTextBlock* m_pTxtMaxCount; // 0x2f8
	UMM_Common_Btn_Cost* m_pBtnOk; // 0x300
	UMirButton* m_pBtnInfo; // 0x308
	UMirTextBlock* m_pTxtDoPrize; // 0x310
};

struct UMovieSceneAudioTrack {
	TArray<UMovieSceneSection*> AudioSections; // 0x58
};

struct UWrapBox {
	FVector2D InnerSlotPadding; // 0x120
	float WrapWidth; // 0x128
	bool bExplicitWrapWidth; // 0x12c
};

struct URecastNavMeshDataChunk {
	FName NavigationDataName; // 0x28
};

struct AGhostTrailEffectActor {
	AActor* m_pGhostTrailOwner; // 0x218
	bool m_bInit; // 0x220
	UGhostTrailActorData* m_pGhostTrailData; // 0x228
	TArray<UGhostTrailMeshData*> m_GhostTrailMeshArray; // 0x230
	TArray<UStaticMeshComponent*> BaseStaticMeshArray; // 0x240
	TArray<USkeletalMeshComponent*> BaseSkeletalMeshArray; // 0x250
	TMap<USkeleton*, USkeletalMeshComponent*> MasterSkeletalMeshComponents; // 0x260
	USkeletalMeshComponent* BodyMeshComponent; // 0x2b0
	TArray<UParticleSystemComponent*> AttatchedParticleList; // 0x2b8
};

struct UMM_Hud_Chat_StatusMessage {
	UMirRichTextBlock* m_RTxt_TalkMessage; // 0x2e0
	UMirButton* Btn_StageInfo; // 0x2e8
	uint64_t m_UserUID; // 0x2f0
	int64_t m_iSendTime; // 0x2f8
};

struct UMM_NpcFunctionComponent {
	AMM_NPCBase* m_pNpc; // 0xd0
};

struct UQueryInvitableFriends {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_ScrollMsg {
	EUIActionMessageWidgetType m_eType; // 0x2f0
	float m_fSetMessageTime; // 0x2f4
	float m_fMoveSpeed; // 0x2f8
	int32_t m_iSlotMax; // 0x2fc
	float m_fSlotHeightScale; // 0x300
	UPanelWidget* m_Grid_DisplayArea; // 0x310
	TArray<FMsgDisplayInfo> m_arSlot; // 0x318
};

struct UMM_B_UIShop {
	UMirCanvasPanel* m_PanelMainTabBG; // 0x2f0
	UMirScrollBox* m_MainTabScrollBox; // 0x2f8
	UMirCanvasPanel* m_PanelSubTabLine; // 0x300
	UMirScrollBox* m_SubTabScrollBox; // 0x308
	UMM_UIShopBtnCashBag* m_BtnCashBag; // 0x310
	UMM_UIShopGoodsListView* m_GoodsListView; // 0x318
	UMM_UIShopGacha* m_UIGacha; // 0x320
};

struct UMM_MagicStoneQuickTabSlot {
	UMirImage* m_Img_On; // 0x2e8
	UMirTextBlock* m_Txt_Index; // 0x2f0
	UMirButton* m_Btn_Main; // 0x2f8
};

struct UMM_Popup_RevivalWidget {
	UMM_Popup_Revival* PopupRevival_GuildWar; // 0x2e0
};

struct UAnimCompress_Automatic {
	float MaxEndEffectorError; // 0x50
	char bRunCurrentDefaultCompressor : 1; // 0x54
	char bAutoReplaceIfExistingErrorTooGreat : 1; // 0x54
	char bRaiseMaxErrorToExisting : 1; // 0x54
	char bTryExhaustiveSearch : 1; // 0x54
};

struct UInterpTrackAudioMaster {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UMovieSceneSequence {
	FMovieSceneEvaluationTemplate PrecompiledEvaluationTemplate; // 0x50
	EMovieSceneCompletionMode DefaultCompletionMode; // 0x340
	bool bParentContextsAreSignificant; // 0x341
	bool bPlayableDirectly; // 0x342
};

struct UMM_PetAbilitySlot {
	UMirRichTextBlock* m_RTxt_Title; // 0x2e0
	UMirRichTextBlock* m_Rtxt_Desc; // 0x2e8
};

struct UMM_Recommend_Btn {
	UPanelWidget* m_Grid_Recommend; // 0x300
	UMirTextBlock* m_Txt_Recommend_Title; // 0x308
	UMirTextBlock* m_Txt_Recommend_Desc; // 0x310
	UButton* m_Btn_Recommend; // 0x318
	int32_t m_makeRecommendItemTID; // 0x320
	int32_t NOTHING_TO_MAKE_ITEM_LIST; // 0x324
};

struct UMM_BattlePass_Item_Slot {
	UMirCanvasPanel* m_Can_ItemSlot; // 0x3e8
	UMirImage* m_Img_GradeBgEffect; // 0x3f0
	UMirImage* m_Img_CurrSelected; // 0x3f8
	UMirImage* m_Img_Disabled; // 0x400
	UMirTextBlock* m_Txt_Count; // 0x408
	UMirCanvasPanel* m_Can_Lock; // 0x410
	UPanelWidget* m_Grid_EffectActive; // 0x418
	UWidgetAnimation* m_AniActive; // 0x420
};

struct UParticleModuleVectorFieldScaleOverLife {
	UDistributionFloat* VectorFieldScaleOverLife; // 0x30
	FRawDistributionFloat VectorFieldScaleOverLifeRaw; // 0x38
};

struct UMM_Popup_BlackIronShop_State {
	UMirTextBlock* Txt_Title; // 0x2e0
	UMirTextBlock* txt_count; // 0x2e8
	UMirTextBlock* txt_profit; // 0x2f0
	UMirTextBlock* Txt_Percent; // 0x2f8
	UMirRichTextBlock* Txt_Desc_1; // 0x300
	UMirRichTextBlock* Txt_Desc_2; // 0x308
	UMM_Slot_Material* slot_black_iron; // 0x310
	UMirImage* img_count; // 0x318
	UMirImage* img_profit; // 0x320
	UMM_Common_Btn_Symbol* btn_close; // 0x328
	UMM_Common_Btn* Btn_Cancel; // 0x330
	UMM_Common_Btn* btn_re_open; // 0x338
	UMM_Common_Btn* btn_drag_back; // 0x340
	UMM_Common_Btn* btn_confirm; // 0x348
};

struct UMM_Map_Channel_Slot {
	UMirTextBlock* m_Txt_Channel; // 0x300
	UMirTextBlock* m_Txt_ChannelState; // 0x308
	UMirImage* m_Img_PartyExist; // 0x310
	UMirImage* m_Img_Selected; // 0x318
	UMirButton* m_Btn_Main; // 0x320
	UMirImage* icon_boss; // 0x328
};

struct UBTTask_SkillExecutionProcess {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct UInterpTrack {
	TArray<UInterpTrack*> SubTracks; // 0x38
	UInterpTrackInst* TrackInstClass; // 0x48
	ETrackActiveCondition ActiveCondition; // 0x50
	FString TrackTitle; // 0x58
	char bOnePerGroup : 1; // 0x68
	char bDirGroupOnly : 1; // 0x68
	char bDisableTrack : 1; // 0x68
	char bIsSelected : 1; // 0x68
	char bIsAnimControlTrack : 1; // 0x68
	char bSubTrackOnly : 1; // 0x68
	char bVisible : 1; // 0x68
	char bIsRecording : 1; // 0x68
};

struct USmallTalkWidget {
	UMirTextBlock* m_pText_Name; // 0x2e0
	UMirRichTextBlock* m_pText_Contents; // 0x2e8
	UMirImage* m_pImage_Face; // 0x2f0
	UButton* m_pBtn_Skip; // 0x2f8
	UWidgetAnimation* m_pAnim_Start; // 0x300
	UWidgetAnimation* m_pAnim_End; // 0x308
	UMaterialInstanceDynamic* m_pPlayerPortraitMID; // 0x310
};

struct USiegeBuildingEffectData {
	int32_t SiegeType; // 0x28
};

struct UBTComposite_Sequence {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct UHapticFeedbackEffect_Curve {
	FHapticFeedbackDetails_Curve HapticDetails; // 0x28
};

struct URadialForceComponent {
	float Radius; // 0x220
	ERadialImpulseFalloff Falloff; // 0x224
	float ImpulseStrength; // 0x228
	char bImpulseVelChange : 1; // 0x22c
	char bIgnoreOwningActor : 1; // 0x22c
	float ForceStrength; // 0x230
	float DestructibleDamage; // 0x234
	TArray<EObjectTypeQuery> ObjectTypesToAffect; // 0x238
};

struct UOnlineSubsystemExtendedAppleWidget {
	UOnlineSubsystemExtendedAppleWebBrowser* WebBrowser; // 0x240
	UButton* m_Btn_Close; // 0x278
};

struct AGenDataActor {
	int32_t PosID; // 0x218
	FString Refer; // 0x220
	int32_t Stage; // 0x230
	int32_t GenObjectID; // 0x234
	FString GenObjectName; // 0x238
	int32_t GenObjectType; // 0x248
	int32_t SpawnCount; // 0x24c
	int32_t SpawnRange; // 0x250
	int32_t ActiveType; // 0x254
	int32_t RegMinTime; // 0x258
	int32_t RegMaxTime; // 0x25c
	int32_t GenType; // 0x260
	int32_t FirstGenDelayMin; // 0x264
	int32_t FirstGenDelayMax; // 0x268
	FString GroupGenMemo; // 0x270
	int32_t GroupGenID; // 0x280
	TArray<int32_t> GroupGenTimeLine; // 0x288
	int32_t GroupGenCountThreshold; // 0x298
	int32_t RoamingId; // 0x29c
	int32_t RoamingType; // 0x2a0
	AGenRoamingDataActor* RoamingPath; // 0x2a8
	TArray<int32_t> RoamingPathDelay; // 0x2b0
	FString LinkGroupMemo; // 0x2c0
	int32_t LinkGroup; // 0x2d0
	int32_t LinkGroupDistance; // 0x2d4
	bool bDrawDistance; // 0x2d8
	USkeletalMeshComponent* Mesh; // 0x2e8
};

struct UMM_Btn_HudDirJump {
	TArray<FBrushObject> m_arrIconBrush; // 0x2f0
	float m_fShowVirtualPadDelayTime; // 0x300
	int32_t ClickSound; // 0x304
	UImage* m_pImgIcon; // 0x308
	UImage* m_pImgCooltime; // 0x310
	UButton* m_pBtnArea; // 0x318
};

struct AMM_EntityBase {
	float CapsuleRadius; // 0x2cc
	UCapsuleComponent* CapsuleComponent; // 0x2d0
	UMM_BuffComponent* BuffComponent; // 0x2d8
	int64_t m_UID; // 0x2e8
	int32_t TID; // 0x2f0
	UParticleSystemComponent* TargetDecal; // 0x300
	AMM_TargetDecalActor* TargetDecalActor; // 0x308
	AMM_TargetDecalActor* MainTargetDecalActor; // 0x310
	UMM_CharacterPartsComponent* m_pPartsComponent; // 0x348
	UMergedMeshComponent* MergedMeshComponent; // 0x350
	int32_t m_SubState; // 0x380
	int32_t m_PreSubState; // 0x384
	EFSM_TYPE m_CurrentFSM; // 0x388
	EFSM_TYPE PreFSM; // 0x389
};

struct ULevelStreamingAlwaysLoaded {
	UWorld* WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int32_t LevelLODIndex; // 0xb0
	int32_t StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xba
	char bShouldBeLoaded : 1; // 0xba
	char bLocked : 1; // 0xba
	char bIsStatic : 1; // 0xba
	char bShouldBlockOnLoad : 1; // 0xba
	char bShouldBlockOnUnload : 1; // 0xbb
	char bDisableDistanceStreaming : 1; // 0xbb
	char bDrawOnLevelStatusMap : 1; // 0xbb
	FLinearColor LevelColor; // 0xbc
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd0
	float MinTimeBetweenVolumeUnloadRequests; // 0xe0
	FScriptMulticastDelegate OnLevelLoaded; // 0xe8
	FScriptMulticastDelegate OnLevelUnloaded; // 0xf8
	FScriptMulticastDelegate OnLevelShown; // 0x108
	FScriptMulticastDelegate OnLevelHidden; // 0x118
	ULevel* LoadedLevel; // 0x128
	ULevel* PendingUnloadLevel; // 0x130
};

struct UMM_CombatPoint {
	UMirTextBlock* m_C_TxtCombatPoint; // 0x300
	UMM_Common_Btn_Symbol* m_C_BtnDetail; // 0x308
	UHorizontalBox* horizontal_box_combatpower; // 0x310
	UMirTextBlock* mir_textblock_next_combatpower; // 0x318
	UMM_Common_ComparePoint* combat_power; // 0x320
};

struct UInAppPurchaseQueryCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMM_NewInventory_StorageRight {
	UMM_NewInventoryTab* m_InvenTab; // 0x2e8
	UMM_NewInventory* m_Inven; // 0x2f0
	UMirTextBlock* m_Txt_InvenCount; // 0x2f8
	UMM_SortListBtn* m_SortListBtn; // 0x300
};

struct UMM_Popup_Auction_BuyInfo {
	UMM_Popup_Auction_ItemInfoSlot* m_pItemInfo; // 0x2f0
	UMirTextBlock* m_pTxtAvrPrice; // 0x2f8
	UMirTextBlock* m_pTxtBuyCount; // 0x300
	UMirTextBlock* m_pTxtBuyPrice; // 0x308
	UMM_Common_Btn* m_pBtnOk; // 0x310
	UMM_Common_Btn* m_pBtnCancel; // 0x318
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x320
};

struct UMM_Popup_ItemCollectInfo {
	UPanelWidget* m_Panel_Info; // 0x2f0
	UMirImage* m_Img_ScreenBg; // 0x2f8
	UMirButton* m_Btn_Bg; // 0x300
	UMirTextBlock* m_Txt_Menu; // 0x308
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x310
	UMM_Common_Btn* m_Btn_Rigist; // 0x318
	UMM_Common_Btn* m_Btn_Info; // 0x320
	UMM_Common_Btn* m_Btn_Search; // 0x328
	int32_t m_MenuStrID; // 0x330
	int32_t m_RegistStrID; // 0x334
	int32_t m_InfoStrID; // 0x338
	int32_t m_SearchStrID; // 0x33c
	int32_t m_DoNotRegist; // 0x340
	int32_t m_CheckSmeltStr; // 0x344
};

struct UEnvQueryGenerator_PathingGrid {
	FAIDataProviderBoolValue PathToItem; // 0xe8
	UNavigationQueryFilter* NavigationFilter; // 0x118
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x120
};

struct AMM_TestGameHUD {
	APlayerController* PlayerOwner; // 0x218
	char bLostFocusPaused : 1; // 0x220
	char bShowHUD : 1; // 0x220
	char bShowDebugInfo : 1; // 0x220
	int32_t CurrentTargetIndex; // 0x224
	char bShowHitBoxDebugInfo : 1; // 0x228
	char bShowOverlays : 1; // 0x228
	char bEnableDebugTextShadow : 1; // 0x228
	TArray<AActor*> PostRenderedActors; // 0x230
	TArray<FName> DebugDisplay; // 0x248
	TArray<FName> ToggledDebugCategories; // 0x258
	UCanvas* Canvas; // 0x268
	UCanvas* DebugCanvas; // 0x270
	TArray<FDebugTextInfo> DebugTextList; // 0x278
	AActor* ShowDebugTargetDesiredClass; // 0x288
	AActor* ShowDebugTargetActor; // 0x290
};

struct URectLightComponent {
	float SourceWidth; // 0x380
	float SourceHeight; // 0x384
	float BarnDoorAngle; // 0x388
	float BarnDoorLength; // 0x38c
	UTexture* SourceTexture; // 0x390
};

struct UParticleLODLevel {
	int32_t Level; // 0x28
	char bEnabled : 1; // 0x2c
	UParticleModuleRequired* RequiredModule; // 0x30
	TArray<UParticleModule*> Modules; // 0x38
	UParticleModuleTypeDataBase* TypeDataModule; // 0x48
	UParticleModuleSpawn* SpawnModule; // 0x50
	UParticleModuleEventGenerator* EventGenerator; // 0x58
	TArray<UParticleModuleSpawnBase*> SpawningModules; // 0x60
	TArray<UParticleModule*> SpawnModules; // 0x70
	TArray<UParticleModule*> UpdateModules; // 0x80
	TArray<UParticleModuleOrbit*> OrbitModules; // 0x90
	TArray<UParticleModuleEventReceiverBase*> EventReceiverModules; // 0xa0
	char ConvertedModules : 1; // 0xb0
	int32_t PeakActiveParticles; // 0xb4
};

struct UMM_B_HudFoldMain {
	UMirButton* btn_lock; // 0x2e0
	UMM_HudQuickSlot* m_QuickSlot; // 0x2e8
	UMirButton* m_pBtnEmotion; // 0x2f0
	UPanelWidget* m_pGridBtnEffectEmotion; // 0x2f8
	UMirButton* m_pBtnChat; // 0x300
	UMirImage* m_pImgIndicatorChat; // 0x308
	UMirTextBlock* m_pTextIndicatorChat; // 0x310
	UPanelWidget* m_pGridBtnEffectChat; // 0x318
	UMirButton* m_pBtnChangeCamera; // 0x320
	UMirTextBlock* m_pTextChangeCamera; // 0x328
	UPanelWidget* m_pGridBtnEffectChangeCamera; // 0x330
	UMirCanvasPanel* m_pCanBtnVehicle; // 0x338
	UImage* m_pImgVehicleCool; // 0x340
	UMirButton* m_pBtnVehicle; // 0x348
	UPanelWidget* m_pGridBtnEffectVehicle; // 0x350
	UMM_B_SkillSet* m_pSkillSetWidget; // 0x358
	UMirCanvasPanel* AutoCounterPanel; // 0x360
	UMirButton* AutoCounterButton; // 0x368
	UPanelWidget* AutoCounterEffectParent; // 0x370
	UEffectWidgetBase* AutoCounterEffect; // 0x378
	UMirCanvasPanel* m_pCanAutoBattleButton; // 0x380
	UMirImage* m_pImgAutoBattleButton; // 0x388
	UPanelWidget* m_pGridEffectAutoBattleButton; // 0x390
	UEffectWidgetBase* m_pEffectAutoBattleOn; // 0x398
	UMirButton* m_pBtnAutoBattle; // 0x3a0
	UMirCanvasPanel* m_pCanAutoGatherButton; // 0x3a8
	UMirImage* m_pImgAutoGatherButton; // 0x3b0
	UPanelWidget* m_pGridEffectAutoGatherButton; // 0x3b8
	UEffectWidgetBase* m_pEffectAutoGatherOn; // 0x3c0
	UMirButton* m_pBtnAutoGather; // 0x3c8
	UMM_Hud_Chat* m_pChatWidget; // 0x3d0
	UMirButton* m_pBtnTotalQuickSlot; // 0x3d8
	UMM_HUDVirtualJoystick* m_pHUDVirtualJoystick; // 0x3e0
	UPanelWidget* m_Can_HudBtn_PetChange; // 0x3e8
	UMirButton* m_Btn_PetChange; // 0x3f0
	UPanelWidget* m_Grid_BtnEffect_PetChange; // 0x3f8
	UPanelWidget* m_Overlay_QuickTab; // 0x400
	UPanelWidget* m_Can_PetQuickTab; // 0x408
	UPanelWidget* m_Can_MagicStoneQuickTab; // 0x410
	UPanelWidget* m_Can_MysticalPieceQuickTab; // 0x418
	UMM_PetQuickTab* m_PetQuickTab; // 0x420
	UMM_MagicStoneQuickTab* m_MagicStoneQuickTab; // 0x428
	UMM_MysticalPieceQuickTab* m_MysticalPieceQuickTab; // 0x430
	UMirButton* m_Btn_QuickTabClose; // 0x438
	UWidgetAnimation* m_Ani_PetChange_Start; // 0x440
	UWidgetAnimation* m_Ani_PetChange_End; // 0x448
};

struct UInterpGroupInst {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct UFirebaseGoogleServerAuthCode {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct AObserverCameraActor {
	float m_MoveSpeed; // 0x780
	float m_MouseSensitivity; // 0x784
	float m_MouseWheelSensitivity; // 0x788
	float m_CameraDistanceMin; // 0x78c
	float m_CameraDistanceMax; // 0x790
	float m_CameraPitchMin; // 0x794
	float m_CameraPitchMax; // 0x798
	float m_CameraHeightGap; // 0x79c
	float m_CameraSphere; // 0x7a0
};

struct UEditableGameplayTagQueryExpression_NoExprMatch {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UMirButton {
	EStyle_MirButton m_eStyle; // 0x438
	float m_fLockTime; // 0x43c
	float m_PRESSING_TIME; // 0x440
};

struct UMaterialExpressionLandscapeGrassOutput {
	TArray<FGrassInput> GrassTypes; // 0x40
};

struct UMaterialExpressionTextureSampleParameter2D {
	FName ParameterName; // 0xd0
	FGuid ExpressionGUID; // 0xd8
	FName Group; // 0xe8
};

struct UBTCompositeNode {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct UObjectNameTagWidget {
	AMM_ObjectBase* m_pObjectBase; // 0x2e8
};

struct USourceEffectDynamicsProcessorPreset {
	FSourceEffectDynamicsProcessorSettings Settings; // 0x90
};

struct URotatingMovementComponent {
	FRotator RotationRate; // 0xf0
	FVector PivotTranslation; // 0xfc
	char bRotationInLocalSpace : 1; // 0x108
};

struct UForceFeedbackEffect {
	TArray<FForceFeedbackChannelDetails> ChannelDetails; // 0x28
	float Duration; // 0x38
};

struct UMM_HudStrongPointMenu {
	UMM_Common_Btn_Symbol* Btn_Exit; // 0x2e0
	UMM_StrongPoint_HudSlot* HUD_BossMonsterSlot; // 0x2e8
	UMM_StrongPoint_HudSlot* HUD_ControllerSlot; // 0x2f0
	UMM_StrongPoint_HudSlot* HUD_HeartSlot; // 0x2f8
	UMirTextBlock* Txt_RemainTime; // 0x300
};

struct UMM_Skill_ListSlot {
	FLinearColor m_Color_SkillGrade1; // 0x2f0
	FLinearColor m_Color_SkillGrade2; // 0x300
	FLinearColor m_Color_SkillGrade3; // 0x310
	FLinearColor m_Color_DurationSkill; // 0x320
	FLinearColor m_Color_SpecialSkill; // 0x330
	FLinearColor m_Color_Success; // 0x340
	FLinearColor m_Color_Fail; // 0x350
	UMirImage* m_Img_GradeBg; // 0x360
	UMirImage* m_Img_SelectBg; // 0x368
	UMM_Skill_DeckSlot* m_SkillSlot; // 0x370
	UMirTextBlock* m_Txt_Level; // 0x378
	UMirTextBlock* m_Txt_Name; // 0x380
	UMirTextBlock* m_Txt_CostTitle; // 0x388
	UMirTextBlock* m_Txt_CostValue; // 0x390
	UMirTextBlock* m_Txt_CoolTimeTitle; // 0x398
	UMirTextBlock* m_Txt_CoolTimeValue; // 0x3a0
	UCanvasPanel* m_Can_Lock; // 0x3a8
	UMirTextBlock* m_Txt_Notice; // 0x3b0
	TArray<UOverlay*> m_UsedSkillSetList; // 0x3b8
	TArray<UMirTextBlock*> m_Txt_UsedSkillSetList; // 0x3c8
	UOverlay* m_UnUsedSkillSet; // 0x3d8
	UMirTextBlock* m_Txt_UnUsedSkillSet; // 0x3e0
	UMirButton* m_Btn_Main; // 0x3e8
	UPanelWidget* mPanelEffectLevelUp; // 0x3f0
	UEffectWidgetBase* mEffectLevelUp; // 0x3f8
	UMirImage* mImgIndicator; // 0x400
};

struct UInterpFilter_Custom {
	FString Caption; // 0x28
};

struct USceneCaptureComponentCube {
	UTextureRenderTargetCube* TextureTarget; // 0x2d0
	bool bCaptureRotation; // 0x2d8
	UTextureRenderTargetCube* TextureTargetLeft; // 0x2e0
	UTextureRenderTargetCube* TextureTargetRight; // 0x2e8
	UTextureRenderTarget2D* TextureTargetODS; // 0x2f0
	float IPD; // 0x2f8
};

struct UParticleModuleOrientationBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct USkeletalMeshLODSettings {
	FPerPlatformInt MinLOD; // 0x30
	FPerPlatformBool DisableBelowMinLodStripping; // 0x34
	FPerPlatformBool bSupportLODStreaming; // 0x35
	FPerPlatformInt MaxNumStreamedLODs; // 0x38
	FPerPlatformInt MaxNumOptionalLODs; // 0x3c
	TArray<FSkeletalMeshLODGroupSettings> LODGroups; // 0x40
};

struct UMM_BuildingSimpleInfo {
	UMirImage* m_Img_Icon; // 0x2e0
	UMirImage* m_Img_Lock; // 0x2e8
	UMirTextBlock* m_Txt_Step; // 0x2f0
	UMirTextBlock* m_Txt_Name; // 0x2f8
	UMirTextBlock* m_Txt_Desc; // 0x300
	UMirTextBlock* m_Txt_CompleteCount; // 0x308
	UMirImage* m_Img_Combat; // 0x310
	UMirTextBlock* m_Txt_Combat; // 0x318
	UMM_Common_Btn* m_Btn_Info; // 0x320
	UMirImage* m_Img_Indicator; // 0x328
	int32_t m_StepStrID; // 0x330
	int32_t m_CompleteOpenStrID; // 0x334
	int32_t m_CompleteStepUpStrID; // 0x338
	int32_t m_OnGointStepUpStrID; // 0x33c
	int32_t m_CountPerMaxStrID; // 0x340
	int32_t m_DetailInfoStrID; // 0x344
};

struct UMM_Customizing_DoubleScroll {
	UMirScrollBox* m_ScrollBox; // 0x300
	TArray<UMM_Customizing_ListItem*> m_ListSlotArray; // 0x308
};

struct AMM_TestGameState {
	AGameModeBase* GameModeClass; // 0x218
	AGameModeBase* AuthorityGameMode; // 0x220
	ASpectatorPawn* SpectatorClass; // 0x228
	TArray<APlayerState*> PlayerArray; // 0x230
	bool bReplicatedHasBegunPlay; // 0x240
	float ReplicatedWorldTimeSeconds; // 0x244
	float ServerWorldTimeSecondsDelta; // 0x248
	float ServerWorldTimeSecondsUpdateFrequency; // 0x24c
};

struct UUniformScalar {
	float Magnitude; // 0xb0
};

struct UMM_Popup_Party_Info {
	int32_t STRING_ID_PASSWORD_HINT; // 0x2f0
	UMirTextBlock* m_Txt_Title; // 0x2f8
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x300
	UMirTextBlock* m_Txt_Explain; // 0x308
	UMirImage* m_Img_Lock; // 0x310
	UMirImage* m_Img_Unlock; // 0x318
	UMirTextBlock* m_Txt_Password; // 0x320
	UMirButton* m_Btn_InputPassword; // 0x328
	UMM_Common_Btn* m_C_Btn_Join; // 0x330
	UMirListView* m_ListView_MemberList; // 0x338
	UMM_Common_Btn_Translation* m_C_Btn_Translation; // 0x340
	TArray<UPopupPartyInfoSlotObj*> m_arMemberSlotObj; // 0x360
};

struct UEnvQueryGenerator_Cone {
	FAIDataProviderFloatValue AlignedPointsDistance; // 0x80
	FAIDataProviderFloatValue ConeDegrees; // 0xb0
	FAIDataProviderFloatValue AngleStep; // 0xe0
	FAIDataProviderFloatValue Range; // 0x110
	UEnvQueryContext* CenterActor; // 0x140
	char bIncludeContextLocation : 1; // 0x148
};

struct USourceEffectChorusPreset {
	FSourceEffectChorusSettings Settings; // 0x80
};

struct ALandscape {
	ULandscapeSplinesComponent* SplineComponent; // 0x218
	FGuid LandscapeGuid; // 0x220
	FIntPoint LandscapeSectionOffset; // 0x230
	int32_t MaxLODLevel; // 0x238
	float LODDistanceFactor; // 0x23c
	ELandscapeLODFalloff LODFalloff; // 0x240
	float ComponentScreenSizeToUseSubSections; // 0x244
	float LOD0ScreenSize; // 0x248
	float LOD0DistributionSetting; // 0x24c
	float LODDistributionSetting; // 0x250
	float TessellationComponentScreenSize; // 0x254
	bool UseTessellationComponentScreenSizeFalloff; // 0x258
	float TessellationComponentScreenSizeFalloff; // 0x25c
	int32_t OccluderGeometryLOD; // 0x260
	int32_t StaticLightingLOD; // 0x264
	UPhysicalMaterial* DefaultPhysMaterial; // 0x268
	float StreamingDistanceMultiplier; // 0x270
	UMaterialInterface* LandscapeMaterial; // 0x278
	UMaterialInterface* LandscapeHoleMaterial; // 0x280
	TArray<FLandscapeProxyMaterialOverride> LandscapeMaterialsOverride; // 0x288
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x298
	int32_t VirtualTextureNumLods; // 0x2a8
	int32_t VirtualTextureLodBias; // 0x2ac
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x2b0
	float NegativeZBoundsExtension; // 0x2b4
	float PositiveZBoundsExtension; // 0x2b8
	TArray<ULandscapeComponent*> LandscapeComponents; // 0x2c0
	TArray<ULandscapeHeightfieldCollisionComponent*> CollisionComponents; // 0x2d0
	TArray<UHierarchicalInstancedStaticMeshComponent*> FoliageComponents; // 0x2e0
	bool bHasLandscapeGrass; // 0x354
	float StaticLightingResolution; // 0x358
	char bCastStaticShadow : 1; // 0x35c
	char bCastShadowAsTwoSided : 1; // 0x35c
	char bCastFarShadow : 1; // 0x35c
	char bAffectDistanceFieldLighting : 1; // 0x360
	FLightingChannels LightingChannels; // 0x361
	char bUseMaterialPositionOffsetInStaticLighting : 1; // 0x364
	char bRenderCustomDepth : 1; // 0x364
	int32_t CustomDepthStencilValue; // 0x368
	float LDMaxDrawDistance; // 0x36c
	FLightmassPrimitiveSettings LightmassSettings; // 0x370
	int32_t CollisionMipLevel; // 0x388
	int32_t SimpleCollisionMipLevel; // 0x38c
	float CollisionThickness; // 0x390
	FBodyInstance BodyInstance; // 0x398
	char bGenerateOverlapEvents : 1; // 0x4a8
	char bBakeMaterialPositionOffsetIntoCollision : 1; // 0x4a8
	int32_t ComponentSizeQuads; // 0x4ac
	int32_t SubsectionSizeQuads; // 0x4b0
	int32_t NumSubsections; // 0x4b4
	char bUsedForNavigation : 1; // 0x4b8
	bool bUseDynamicMaterialInstance; // 0x4bc
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x4bd
	bool bUseLandscapeForCullingInvisibleHLODVertices; // 0x4be
	bool bHasLayersContent; // 0x4bf
	TMap<UTexture2D*, ULandscapeWeightmapUsage*> WeightmapUsageMap; // 0x4c0
};

struct APrecomputedVisibilityOverrideVolume {
	TArray<AActor*> OverrideVisibleActors; // 0x250
	TArray<AActor*> OverrideInvisibleActors; // 0x260
	TArray<FName> OverrideInvisibleLevels; // 0x270
};

struct UMM_PopUp_EquipAuto {
	TMap<int32_t, UMM_Slot_Inventory*> m_EquipSlots; // 0x2e0
	UMM_Common_Btn* m_CancleBtn; // 0x330
	UMM_Common_Btn* m_OkBtn; // 0x338
	UMM_Common_Btn_Symbol* btn_close; // 0x350
};

struct UImageSequenceProtocol_PNG {
	int32_t CompressionQuality; // 0xd8
};

struct USubsurfaceProfile {
	FSubsurfaceProfileStruct Settings; // 0x28
};

struct UMM_GetItemWayListSlot {
	int32_t CombatStrID; // 0x2f0
	UImage* Img_TypeIcon; // 0x308
	UMirImage* Img_Disable; // 0x310
	UMirImage* Img_LockIcon; // 0x318
	UMirImage* Img_EndIcon; // 0x320
	UTextBlock* Txt_Title; // 0x328
	UTextBlock* Txt_SubTitle; // 0x330
	UMirRichTextBlock* Txt_Combat; // 0x338
	UMM_Common_Btn* Btn_Move; // 0x340
	UMM_Common_PartyMember* PartyMember; // 0x348
	int32_t STR_MONSTER_GRADE12_TITLE; // 0x350
	int32_t STR_MONSTER_GRADE12_DESC; // 0x354
	int32_t STR_MONSTER_GRADE3_DESC; // 0x358
	int32_t STR_MONSTER_GRADE4_DESC; // 0x35c
	int32_t STR_MESSAGE_MONSTER; // 0x360
	int32_t STR_GATHER_GRADE1_TITLE; // 0x364
	int32_t STR_GATHER_GRADE1_DESC; // 0x368
	int32_t STR_GATHER_GRADE2_TITLE; // 0x36c
	int32_t STR_GATHER_GRADE2_DESC; // 0x370
	int32_t STR_MESSAGE_GATHER; // 0x374
	int32_t STR_MESSAGE_GATHER_MOVE; // 0x378
	int32_t STR_MINE_GRADE1_TITLE; // 0x37c
	int32_t STR_MINE_GRADE1_DESC; // 0x380
	int32_t STR_MINE_GRADE2_TITLE; // 0x384
	int32_t STR_MINE_GRADE2_DESC; // 0x388
	int32_t STR_MESSAGE_MINE; // 0x38c
	int32_t STR_MESSAGE_MINE_MOVE; // 0x390
	int32_t STR_SEARCH_GRADE1_TITLE; // 0x394
	int32_t STR_SEARCH_GRADE1_DESC; // 0x398
	int32_t STR_MESSAGE_SEARCH; // 0x39c
	int32_t STR_MESSAGE_SEARCH_MOVE; // 0x3a0
	int32_t STR_ITEMMAKE_UI; // 0x3a4
	int32_t STR_MESSAGE_NPCSTORE_MOVE; // 0x3a8
	int32_t STR_MESSAGE_NPCSTORE_CURRENTSTAGE; // 0x3ac
	int32_t STR_AUCTION_UI; // 0x3b0
	int32_t STR_MINE_BLACKIRON_TITLE; // 0x3b4
	int32_t STR_DAILY_HOMEWORK_UI; // 0x3b8
	int32_t STR_GACHA_UI; // 0x3bc
	int32_t STR_MATERIAL_COMPOSE_UI; // 0x3c0
	int32_t STR_NO_CLASS; // 0x3c4
	int32_t STR_MATERIAL_HUDEVENT_UI; // 0x3c8
	int32_t STR_GATHER_JINKI_TITLE; // 0x3cc
	int32_t STR_GATHER_JINKI_DESC; // 0x3d0
	int32_t STR_MSG_NO_ENTER_BOSSRAID; // 0x3d4
	int32_t STRING_PhaseCantUseMenu; // 0x3d8
	int32_t STR_GUILD_SHOP; // 0x3dc
	int32_t STR_DUNGEON_SHOP; // 0x3e0
};

struct UMM_EmotesWidget {
	UWrapBox* m_EmotesWrapBox; // 0x2e0
};

struct UControlChannel {
	UNetConnection* Connection; // 0x28
};

struct UMM_SortBtn {
	USpacer* m_Spc_Main; // 0x2e8
	UMirTextBlock* m_Txt_Name; // 0x2f0
	UMirImage* m_Img_Selected; // 0x2f8
	UMirButton* m_Btn_Main; // 0x300
};

struct UAIAsyncTaskBlueprintProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFail; // 0x38
};

struct UNullNavSysConfig {
	FSoftClassPath NavigationSystemClass; // 0x28
	FNavAgentSelector SupportedAgentsMask; // 0x40
	FName DefaultAgentName; // 0x44
	char bIsOverriden : 1; // 0x4c
};

struct UMM_MiniGameWidget {
	AMiniGame_ManagerActor* m_MiniGameActor; // 0x2e0
	AMiniGame_PlayerActor* m_PlayerActor; // 0x2e8
	UMirProgressBar* m_Prg_PlayerHP; // 0x300
	UMirTextBlock* m_Txt_KillCountValueBest; // 0x308
	UMirTextBlock* m_Txt_KillCountValue; // 0x310
	UMirRichTextBlock* m_RTxt_Notice; // 0x318
	UMirImage* m_Img_LeftPressed; // 0x320
	UMirButton* m_Btn_Left; // 0x328
	UMirImage* m_Img_RightPressed; // 0x330
	UMirButton* m_Btn_Right; // 0x338
	UPanelWidget* m_Can_Avoid; // 0x340
	UMirButton* m_Btn_Avoid; // 0x348
	UMirImage* m_Img_Avoid; // 0x350
	UMirButton* m_Btn_Attack; // 0x358
	UMirTextBlock* m_Txt_KeyA; // 0x360
	UMirTextBlock* m_Txt_KeyD; // 0x368
	UMirTextBlock* m_Txt_KeyK; // 0x370
	UMirTextBlock* m_Txt_KeyL; // 0x378
	UPanelWidget* m_Can_Pause; // 0x380
	UMirButton* m_Btn_Pause; // 0x388
	UMirButton* m_Btn_SetPause; // 0x390
	UMirButton* m_Btn_Restart; // 0x398
	UPanelWidget* m_Can_PatchNotice; // 0x3a0
	UPanelWidget* m_Overlay_StartPatch; // 0x3a8
	UMirRichTextBlock* m_RTxt_PatchNotice; // 0x3b0
	UMirRichTextBlock* m_RTxt_PatchEndNotice; // 0x3b8
	UMirButton* m_Btn_StartPatch; // 0x3c0
	UPanelWidget* m_Can_StartBtnAni; // 0x3c8
	UWidgetAnimation* m_Ani_StartBtn; // 0x3d0
	UMM_VolumeController* m_VolumeController; // 0x3d8
	UCanvasPanel* m_pCanInteractionSize; // 0x400
	UMirImage* m_pImg_Thumb; // 0x408
	UMirImage* m_pImg_PadBG; // 0x410
};

struct UFXSystemAsset {
	uint32_t MaxPoolSize; // 0x28
};

struct UMM_Dominion_History_Slot {
	UMirTextBlock* m_pTxtTime; // 0x320
	UMirRichTextBlock* m_pTxtLog; // 0x328
};

struct UMM_Dominion_TaxGroup {
	TArray<UMM_Dominion_TaxSlot*> TaxList; // 0x2e8
	UMirTextBlock* m_pTxtTitle; // 0x2f8
	UVerticalBox* m_pVerticalBox; // 0x300
};

struct UMaterialExpressionTextureSampleParameterSubUV {
	char bBlend : 1; // 0xf0
};

struct UGachaObjectAnimInstance {
	bool m_bOpen; // 0x268
	bool m_bImmediate; // 0x269
};

struct USpotLightComponent {
	float InnerConeAngle; // 0x398
	float OuterConeAngle; // 0x39c
	float LightShaftConeAngle; // 0x3a0
};

struct UMM_New_Force_Skill_Info {
	UMirRichTextBlock* m_C_Txt_TotalBloodLevel; // 0x2f0
	UMirTextBlock* m_C_TxtCombatPoint; // 0x2f8
};

struct ALandscapeProxy {
	ULandscapeSplinesComponent* SplineComponent; // 0x218
	FGuid LandscapeGuid; // 0x220
	FIntPoint LandscapeSectionOffset; // 0x230
	int32_t MaxLODLevel; // 0x238
	float LODDistanceFactor; // 0x23c
	ELandscapeLODFalloff LODFalloff; // 0x240
	float ComponentScreenSizeToUseSubSections; // 0x244
	float LOD0ScreenSize; // 0x248
	float LOD0DistributionSetting; // 0x24c
	float LODDistributionSetting; // 0x250
	float TessellationComponentScreenSize; // 0x254
	bool UseTessellationComponentScreenSizeFalloff; // 0x258
	float TessellationComponentScreenSizeFalloff; // 0x25c
	int32_t OccluderGeometryLOD; // 0x260
	int32_t StaticLightingLOD; // 0x264
	UPhysicalMaterial* DefaultPhysMaterial; // 0x268
	float StreamingDistanceMultiplier; // 0x270
	UMaterialInterface* LandscapeMaterial; // 0x278
	UMaterialInterface* LandscapeHoleMaterial; // 0x280
	TArray<FLandscapeProxyMaterialOverride> LandscapeMaterialsOverride; // 0x288
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x298
	int32_t VirtualTextureNumLods; // 0x2a8
	int32_t VirtualTextureLodBias; // 0x2ac
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x2b0
	float NegativeZBoundsExtension; // 0x2b4
	float PositiveZBoundsExtension; // 0x2b8
	TArray<ULandscapeComponent*> LandscapeComponents; // 0x2c0
	TArray<ULandscapeHeightfieldCollisionComponent*> CollisionComponents; // 0x2d0
	TArray<UHierarchicalInstancedStaticMeshComponent*> FoliageComponents; // 0x2e0
	bool bHasLandscapeGrass; // 0x354
	float StaticLightingResolution; // 0x358
	char bCastStaticShadow : 1; // 0x35c
	char bCastShadowAsTwoSided : 1; // 0x35c
	char bCastFarShadow : 1; // 0x35c
	char bAffectDistanceFieldLighting : 1; // 0x360
	FLightingChannels LightingChannels; // 0x361
	char bUseMaterialPositionOffsetInStaticLighting : 1; // 0x364
	char bRenderCustomDepth : 1; // 0x364
	int32_t CustomDepthStencilValue; // 0x368
	float LDMaxDrawDistance; // 0x36c
	FLightmassPrimitiveSettings LightmassSettings; // 0x370
	int32_t CollisionMipLevel; // 0x388
	int32_t SimpleCollisionMipLevel; // 0x38c
	float CollisionThickness; // 0x390
	FBodyInstance BodyInstance; // 0x398
	char bGenerateOverlapEvents : 1; // 0x4a8
	char bBakeMaterialPositionOffsetIntoCollision : 1; // 0x4a8
	int32_t ComponentSizeQuads; // 0x4ac
	int32_t SubsectionSizeQuads; // 0x4b0
	int32_t NumSubsections; // 0x4b4
	char bUsedForNavigation : 1; // 0x4b8
	bool bUseDynamicMaterialInstance; // 0x4bc
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x4bd
	bool bUseLandscapeForCullingInvisibleHLODVertices; // 0x4be
	bool bHasLayersContent; // 0x4bf
	TMap<UTexture2D*, ULandscapeWeightmapUsage*> WeightmapUsageMap; // 0x4c0
};

struct UMM_ItemSmeltWidget {
	UPanelWidget* m_Panel_Smelt; // 0x300
	UPanelWidget* m_Effect_Grid; // 0x308
	UPanelWidget* m_Panel_SmeltTarget; // 0x310
	UPanelWidget* Can_GoToItemMake; // 0x318
	UPanelWidget* m_Panel_SmeltInven; // 0x320
	UMM_NewInventory_Forge* m_InvenForge; // 0x328
	UMirButton* m_Btn_GoToItemMake; // 0x330
	UPanelWidget* Grid_Unselect; // 0x338
	UPanelWidget* Grid_Select; // 0x340
	UPanelWidget* Grid_Material; // 0x348
	UPanelWidget* Panel_Safety; // 0x350
	UMM_Slot_Registered_Circle* Slot_Target; // 0x358
	UMM_Common_Item_NameTag* Tag_Target; // 0x360
	UPanelWidget* Pan_SuccessPrecnet; // 0x368
	UMirTextBlock* Txt_SuccessPercentTitle; // 0x370
	UMirTextBlock* Txt_SuccessPercent; // 0x378
	UMirTextBlock* Txt_Safety; // 0x380
	UMM_AbilityState_Item* Stat_Smelt; // 0x388
	UMM_AbilityState_Item* Stat_Combat; // 0x390
	UMM_Slot_Material_Item* Slot_Material; // 0x398
	UMM_Slot_Material_Item* Slot_MaterialCost; // 0x3a0
	UMirTextBlock* txt_cost; // 0x3a8
	UImage* img_cost; // 0x3b0
	UMM_Common_Btn_Cost* Btn_Smelt; // 0x3b8
	UMM_Common_Btn* Btn_AutoSmelt; // 0x3c0
	UMirTextBlock* Txt_GuideTitle; // 0x3c8
	UMirRichTextBlock* Txt_Guide; // 0x3d0
	UMirRichTextBlock* Txt_Notice; // 0x3d8
	UPanelWidget* Grid_AllSelectEffect; // 0x3e0
	UPanelWidget* Grid_AuraEffect; // 0x3e8
	UPanelWidget* Grid_AllSelectEffect_Red; // 0x3f0
	UPanelWidget* Grid_AuraEffect_Red; // 0x3f8
	UMirImage* m_Img_PercentBar; // 0x400
	int32_t SelectItemUID; // 0x408
	int32_t m_AuToSmeltStrID; // 0x418
};

struct UMM_Auction_Slot_Base {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UEditableTextBox {
	FText Text; // 0x108
	DelegateProperty TextDelegate; // 0x120
	FEditableTextBoxStyle WidgetStyle; // 0x130
	USlateWidgetStyleAsset* Style; // 0x920
	FText HintText; // 0x928
	DelegateProperty HintTextDelegate; // 0x940
	FSlateFontInfo Font; // 0x950
	FLinearColor ForegroundColor; // 0x9a0
	FLinearColor BackgroundColor; // 0x9b0
	FLinearColor ReadOnlyForegroundColor; // 0x9c0
	bool IsReadOnly; // 0x9d0
	bool IsPassword; // 0x9d1
	float MinimumDesiredWidth; // 0x9d4
	FMargin Padding; // 0x9d8
	bool IsCaretMovedWhenGainFocus; // 0x9e8
	bool SelectAllTextWhenFocused; // 0x9e9
	bool RevertTextOnEscape; // 0x9ea
	bool ClearKeyboardFocusOnCommit; // 0x9eb
	bool SelectAllTextOnCommit; // 0x9ec
	bool AllowContextMenu; // 0x9ed
	EVirtualKeyboardType KeyboardType; // 0x9ee
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x9ef
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x9f0
	ETextJustify Justification; // 0x9f1
	FShapedTextOptions ShapedTextOptions; // 0x9f2
	FScriptMulticastDelegate OnTextChanged; // 0x9f8
	FScriptMulticastDelegate OnTextCommitted; // 0xa08
};

struct UParticleModuleColorOverLife {
	FRawDistributionVector ColorOverLife; // 0x30
	FRawDistributionFloat AlphaOverLife; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct AMM_EntityObject {
	float CapsuleRadius; // 0x278
	USkeletalMeshComponent* BodyMesh; // 0x280
	UCapsuleComponent* CapsuleComponent; // 0x288
	EFSM_TYPE m_CurrentFSM; // 0x2a8
};

struct UMM_Popup_ServerList_Global {
	UPanelWidget* m_Can_TopArrow; // 0x2f0
	UPanelWidget* m_Can_BottomArrow; // 0x2f8
	UWidgetAnimation* m_Ani_Arrow; // 0x300
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x308
	UScrollBox* m_Scroll_RegionList; // 0x310
	UScrollBox* m_Scroll_ServerList; // 0x318
};

struct UEditableTextBoxWidgetStyle {
	FEditableTextBoxStyle EditableTextBoxStyle; // 0x30
};

struct UMovieSceneLevelVisibilitySection {
	ELevelVisibility Visibility; // 0xe0
	TArray<FName> LevelNames; // 0xe8
};

struct UMediaPlaylist {
	TArray<UMediaSource*> Items; // 0x28
};

struct UMovieSceneCaptureProtocolBase {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UMM_Costume_CombatPoint {
	UMirTextBlock* m_C_TxtCombatPoint; // 0x300
	UMM_Common_Btn* m_C_BtnDetail; // 0x308
};

struct AMM_FirstTutorialScript {
	int32_t FirstQuestID; // 0x238
	int32_t VirtualJoyStickTutorialQuestID; // 0x23c
	int32_t QuestTrackerTutorialQuestID; // 0x240
	int32_t NpcQuestMarkTutorialQuestID; // 0x244
	int32_t HudHideTutorialQuestID; // 0x248
	int32_t BattleTutorialPhaseID; // 0x24c
	EFirstTutorialType m_TutorialState; // 0x254
};

struct UAlignedWrapBox {
	FVector2D InnerSlotPadding; // 0x120
	EHorizontalAlignment HorizontalAlignment; // 0x128
};

struct UMirListView {
	EStyle_MirListView m_eStyle; // 0x858
	TArray<UUserWidget*> m_arEntryWidgetClass; // 0x860
};

struct UMM_HudTargetList {
	TArray<UMM_HudSlotTargetList*> arSlotTarget; // 0x2f0
	UMirButton* btnClose; // 0x300
	UMirButton* btnOption; // 0x308
	UMirButton* btnShare; // 0x310
	UMirButton* btnMonster; // 0x318
	UHorizontalBox* hrzTargetList; // 0x320
	UVerticalBox* vtbLeft; // 0x328
	UVerticalBox* vtbRight; // 0x330
	UCanvasPanel* Can_Target_Sharing; // 0x338
	UWidgetAnimation* aniTargetSharing; // 0x340
	UMirImage* imgShareLock; // 0x348
	UMirImage* imgShareOn; // 0x350
	UMirImage* imgMonsterOff; // 0x358
	UMirImage* imgOptionLock; // 0x360
	UMirCanvasPanel* Can_EmptyList; // 0x368
	UMirTextBlock* txtNotice; // 0x370
	UMirCanvasPanel* Can_ServerVisit_GuildAlly; // 0x378
	UMirButton* Btn_ServerVisit_GuildAlly; // 0x380
};

struct UMaterialExpressionMaterialLayerOutput {
	FName OutputName; // 0x40
	FString Description; // 0x48
	int32_t SortPriority; // 0x58
	FExpressionInput A; // 0x5c
	char bLastPreviewed : 1; // 0x70
	FGuid ID; // 0x74
};

struct UPhysicsAsset {
	TArray<int32_t> BoundsBodies; // 0x30
	TArray<USkeletalBodySetup*> SkeletalBodySetups; // 0x40
	TArray<UPhysicsConstraintTemplate*> ConstraintSetup; // 0x50
	char bNotForDedicatedServer : 1; // 0x60
	UThumbnailInfo* ThumbnailInfo; // 0x108
	TArray<UBodySetup*> BodySetup; // 0x110
};

struct UWindowTitleBarArea {
	bool bWindowButtonsEnabled; // 0x120
	bool bDoubleClickTogglesFullscreen; // 0x121
};

struct UParticleModuleMeshMaterial {
	TArray<UMaterialInterface*> MeshMaterials; // 0x30
};

struct UMM_Guild_ShopList {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UWrapBox* m_WrapBox; // 0x2f8
	TArray<UMM_Slot_Inventory*> m_arSlot; // 0x300
};

struct UMirWidgetData {
	UObject* Img_Main_Positive; // 0x30
	UObject* Img_Main_Negative; // 0x38
	UObject* Img_Main_Unable; // 0x40
	UObject* Img_Main_Shadow; // 0x48
	FLinearColor m_Main_Practice1_AbleColor; // 0x50
	FLinearColor m_Main_Practice2_AbleColor; // 0x60
	FMargin m_Main_Margin; // 0x70
	UObject* Img_Sub_Positive; // 0x80
	UObject* Img_Sub_Negative; // 0x88
	UObject* Img_Sub_Practice_2; // 0x90
	UObject* Img_Sub_Practice_3; // 0x98
	UObject* Img_Sub_Unseal; // 0xa0
	UObject* Img_Sub_Positive_Glow; // 0xa8
	UObject* Img_Sub_Positive_Gold; // 0xb0
	UObject* Img_Sub_Positive_Unable; // 0xb8
	UObject* Img_Sub_Negative_Unable; // 0xc0
	UObject* Img_Sub_Practice_1_Unable; // 0xc8
	UObject* Img_Sub_Practice_2_Unable; // 0xd0
	UObject* Img_Sub_Unseal_Unable; // 0xd8
	UObject* Img_Sub_Positive_Glow_Unable; // 0xe0
	UObject* Img_Sub_Positive_Gold_Unable; // 0xe8
	FLinearColor m_Sub_Positive_AbleColor; // 0xf0
	FLinearColor m_Sub_Negative_AbleColor; // 0x100
	FLinearColor m_Sub_Practice1_AbleColor; // 0x110
	FLinearColor m_Sub_Practice2_AbleColor; // 0x120
	FLinearColor m_Sub_Unseal_AbleColor; // 0x130
	FLinearColor m_Sub_Positive_Glow_AbleColor; // 0x140
	FLinearColor m_Sub_Positive_Gold_AbleColor; // 0x150
	FLinearColor m_Sub_Positive_UnableColor; // 0x160
	FLinearColor m_Sub_Negative_UnableColor; // 0x170
	FLinearColor m_Sub_Practice1_UnableColor; // 0x180
	FLinearColor m_Sub_Practice2_UnableColor; // 0x190
	FLinearColor m_Sub_Unseal_UnableColor; // 0x1a0
	FLinearColor m_Sub_Positive_Glow_UnableColor; // 0x1b0
	FLinearColor m_Sub_Positive_Gold_UnableColor; // 0x1c0
	FMargin m_Sub_Margin; // 0x1d0
	float m_fGlowSpeed; // 0x1e0
	UObject* Img_Other_Rect_2; // 0x1e8
	UObject* Img_Other_Rect_3; // 0x1f0
	UObject* Img_Other_Circle_2; // 0x1f8
	UObject* Img_Other_Circle_3; // 0x200
	UObject* Img_Other_Round_2; // 0x208
	UObject* Img_Party_2; // 0x210
	FMargin m_Circle_Margin; // 0x218
	FButtonStyle m_CommonBtnStyle; // 0x228
	FSlateSound m_CommonBtnClickSound_Able; // 0x4a0
	FSlateSound m_CommonBtnClickSound_Unable; // 0x4b8
	float m_fCommonBtnUnableOpacity; // 0x4d0
	FMargin m_Default_Margin; // 0x4d4
	FLinearColor m_Default_AbleColor; // 0x4e4
	int32_t m_fCommonTabTitleFontSize_Default; // 0x4f4
	int32_t m_fCommonTabTitleFontSize_Selected; // 0x4f8
};

struct ATownAlarmTrigger {
	bool IsBox; // 0x218
	FVector m_BoxExtent; // 0x21c
	FColor m_BoxColor; // 0x228
	float m_CircleRange; // 0x22c
	FColor m_CircleColor; // 0x230
	int32_t m_AreaID; // 0x234
	USphereComponent* m_pSphereCollision; // 0x238
	UBoxComponent* m_pBoxCollision; // 0x240
};

struct UMM_Popup_ServerVisitRelocation {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f0
	UMirButton* m_Btn_ServerSelect; // 0x2f8
	UMirTextBlock* m_Txt_CurrentServer; // 0x300
	UMirTextBlock* m_Txt_ChangeServer; // 0x308
	UMirRichTextBlock* m_Txt_RemainVisitCount; // 0x310
	UMirTextBlock* m_Txt_ConditionCount; // 0x318
	UMirScrollBox* m_Scroll_ConditionList; // 0x320
	UMM_Common_Btn_Cost* m_Btn_VisitStart; // 0x328
	UMirRichTextBlock* m_Txt_Notice; // 0x330
	UMirRichTextBlock* m_Txt_Notice2; // 0x338
	UMirRichTextBlock* m_Txt_ConditionNotice; // 0x340
	UMirCanvasPanel* m_canvas_Deco; // 0x348
	UMirCanvasPanel* m_canvas_RemainTime; // 0x350
	UMirTextBlock* m_Txt_RemainTime; // 0x358
};

struct UHLODProxy {
	TArray<FHLODProxyMesh> ProxyMeshes; // 0x28
};

struct UParticleModuleTrailBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMaterialExpressionTextureSampleParameterCube {
	FName ParameterName; // 0xd0
	FGuid ExpressionGUID; // 0xd8
	FName Group; // 0xe8
};

struct USignificanceManager {
	FSoftClassPath SignificanceManagerClassName; // 0x100
};

struct UMM_Auction_Tab_Sale {
	UMM_Common_Board_Notice* m_pNotice; // 0x300
	UMirRichTextBlock* m_pTxtSaleCount; // 0x308
	UMirTextBlock* m_pTxtSaleMoney; // 0x310
	UMM_Common_Btn* m_pBtnCancleAll; // 0x318
	UMirListView* m_pListView; // 0x320
	UMM_NewInventory_Auction* m_pInventory; // 0x328
};

struct UMultiLineEditableText {
	FText Text; // 0x128
	FText HintText; // 0x140
	DelegateProperty HintTextDelegate; // 0x158
	FTextBlockStyle WidgetStyle; // 0x168
	bool bIsReadOnly; // 0x3d0
	FSlateFontInfo Font; // 0x3d8
	bool SelectAllTextWhenFocused; // 0x428
	bool ClearTextSelectionOnFocusLoss; // 0x429
	bool RevertTextOnEscape; // 0x42a
	bool ClearKeyboardFocusOnCommit; // 0x42b
	bool AllowContextMenu; // 0x42c
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x42d
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x42e
	FScriptMulticastDelegate OnTextChanged; // 0x430
	FScriptMulticastDelegate OnTextCommitted; // 0x440
};

struct UMM_UIAction_GameOption {
	TMap<int32_t, int32_t> TempGameOptionMap; // 0xc8
	TMap<EGameOptionType, int32_t> GameoptionMap; // 0x118
	TMap<EGameOptionType, int32_t> OSMaxGrapicOptionMap; // 0x208
};

struct UMM_BattlePass_Reward_List {
	int32_t STRING_ID_BTN_BUY; // 0x2f0
	int32_t STRING_ID_BTN_ACTIVE; // 0x2f4
	UMirScrollBox* m_ScrollBox; // 0x2f8
	UMM_Common_Btn* m_C_Btn_ReceiveAll; // 0x300
	UMirTextBlock* m_Txt_Notice; // 0x308
	UMirTextBlock* m_Txt_Btn_Name1; // 0x310
	UMirTextBlock* m_Txt_Btn_Name2; // 0x318
	UMirButton* m_Btn_Buy1; // 0x320
	UMirButton* m_Btn_Buy2; // 0x328
	UMirImage* m_Img_Indicator_1; // 0x330
	UMirImage* m_Img_Indicator_2; // 0x338
};

struct UParticleModuleLocationPrimitiveTriangle {
	FRawDistributionVector StartOffset; // 0x30
	FRawDistributionFloat Height; // 0x78
	FRawDistributionFloat Angle; // 0xa8
	FRawDistributionFloat Thickness; // 0xd8
};

struct UPrimaryAssetLabel {
	FPrimaryAssetRules Rules; // 0x30
	char bLabelAssetsInMyDirectory : 1; // 0x3c
	char bIsRuntimeLabel : 1; // 0x3c
	TArray<UObject*> ExplicitAssets; // 0x40
	TArray<UClass*> ExplicitBlueprints; // 0x50
	FCollectionReference AssetCollection; // 0x60
};

struct UMM_Dominion_Castle {
	int32_t STRING_MAIN_BEHAIVOR; // 0x2f0
	int32_t STRING_SUB_BEHAIVOR; // 0x2f4
	UMM_Guild_Slot_Btn* m_pBtnPublicService; // 0x2f8
	UMM_Guild_Slot_Btn* m_pBtnPk; // 0x300
	UMM_Guild_Slot_Btn* m_pBtnBuff; // 0x308
	UMM_Guild_Slot_Btn* m_pBtnPrize; // 0x310
	UMM_Dominion_Castle_Guild* m_pCastleGuild; // 0x318
	UMM_Dominion_Occupation* m_pDominionOccupation; // 0x320
	UMM_Dominion_History* m_pDominionHistory; // 0x328
};

struct UMM_SlotWorldBossChannel {
	UMirImage* m_pImgFull; // 0x2f0
	UMirImage* m_pImgParty; // 0x2f8
	UTextBlock* m_pTxtChannel; // 0x300
	UTextBlock* m_pTxtCountCapa; // 0x308
	UMirTextBlock* m_pTxtAppearanceState; // 0x310
	UMirButton* m_pBtnMain; // 0x318
	UMirImage* m_pImgSelect; // 0x320
};

struct UMM_GuildInventoryGoods {
	UMirImage* img_goods_icon; // 0x2e0
	UMirTextBlock* txt_goods_name; // 0x2e8
	UMirTextBlock* txt_goods_count; // 0x2f0
	UMM_Common_ToolTipBtn* Btn_Tooltip; // 0x2f8
};

struct USafeZoneSlot {
	bool bIsTitleSafe; // 0x38
	FMargin SafeAreaScale; // 0x3c
	EHorizontalAlignment HAlign; // 0x4c
	EVerticalAlignment VAlign; // 0x4d
	FMargin Padding; // 0x50
};

struct UDistributionVectorParticleParameter {
	FName ParameterName; // 0x50
	FVector MinInput; // 0x58
	FVector MaxInput; // 0x64
	FVector MinOutput; // 0x70
	FVector MaxOutput; // 0x7c
	DistributionParamMode ParamModes[0x3]; // 0x88
};

struct UAchievementQueryCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UMM_Popup_Restore_Exp_Slot {
	UMirTextBlock* m_pTxtName; // 0x2e0
	UMirTextBlock* m_pTxtRemainTime; // 0x2e8
	UMirTextBlock* m_pTxtTime; // 0x2f0
	UMM_Dominion_Goods_Slot* m_pGoodsSlot; // 0x2f8
	UMM_Slot_Material* m_pSlotExp; // 0x300
	UMirImage* m_pImgDiable; // 0x308
	UMirImage* m_pImgFocus; // 0x310
	UMirButton* m_pBtnClick; // 0x318
	UMirButton* m_pBtnSlotClick; // 0x320
	UMirButton* m_pBtnSlotDelete; // 0x328
};

struct UMM_Popup_SkillAwakenList {
	UMM_Common_Btn_Symbol* mCBClose; // 0x2e0
	UMirButton* mBtnClose; // 0x2e8
	UMirTextBlock* mTxtTitle; // 0x2f0
	UMirScrollBox* mScrollBox; // 0x2f8
};

struct UDialogueWave {
	char bMature : 1; // 0x28
	char bOverride_SubtitleOverride : 1; // 0x28
	FString SpokenText; // 0x30
	FString SubtitleOverride; // 0x40
	TArray<FDialogueContextMapping> ContextMappings; // 0x50
	FGuid LocalizationGUID; // 0x60
};

struct UParticleModuleLifetime {
	FRawDistributionFloat LifeTime; // 0x30
};

struct UMM_Popup_LoginQueue {
	UMirRichTextBlock* m_RTxt_Msg; // 0x2e0
	UMM_Common_Btn* m_CB_Cancel; // 0x2e8
};

struct UMM_Popup_VersionSelect {
	UWrapBox* m_Wrap_SlotList; // 0x2e0
};

struct UMM_Hud_Invite_Alarm {
	UPanelWidget* m_Grid_HuntingSquad; // 0x2e0
	UPanelWidget* m_Grid_Party; // 0x2e8
	UMirTextBlock* m_Txt_HuntingSquad_Num; // 0x2f0
	UMirTextBlock* m_Txt_Party_Num; // 0x2f8
	UMM_Common_Btn_Symbol* m_C_Btn_HuntingSquad; // 0x300
	UMM_Common_Btn_Symbol* m_C_Btn_Party; // 0x308
};

struct UMM_UserEvent_Gacha_Btn {
	UImage* m_Img_CostIcon; // 0x2f0
	UImage* m_Img_Indicator; // 0x2f8
	UMirTextBlock* m_Txt_HaveValue; // 0x300
	UTextBlock* m_Txt_Main; // 0x308
	UTextBlock* m_Txt_Sub; // 0x310
	UMirButton* m_Btn_Main; // 0x318
};

struct UCanvasPanel {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UMM_B_Squad_Info {
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x2f0
	UMirScrollBox* m_ScrollBox_Member; // 0x2f8
	UMirScrollBox* m_ScrollBox_Reward; // 0x300
	UMirTextBlock* m_Txt_Title; // 0x308
	UMirTextBlock* m_Txt_GuildName; // 0x310
	UHorizontalBox* m_HrzBox_Guild; // 0x318
	UMirTextBlock* m_Txt_DungeonName; // 0x320
	UMirImage* m_Img_DungeonThumb; // 0x328
	UMirTextBlock* m_Txt_LimitCombatPoint; // 0x330
	UMirTextBlock* m_Txt_DefaultCombatPoint; // 0x338
	UMirTextBlock* m_Txt_RemainEnterTime; // 0x340
	UMirImage* m_Img_Level[0x6]; // 0x348
	UHorizontalBox* m_Hrzbox_TimeTable; // 0x378
	UMM_Common_Btn* m_C_Btn_Leave; // 0x380
	UMM_Common_Btn* m_C_Btn_Delete; // 0x388
	UMM_Common_Btn* m_C_Btn_Enter; // 0x390
	UMM_Slot_Material_Item* m_Need_Cost_Material_1; // 0x398
	UMM_Slot_Material_Item* m_Need_Cost_Material_2; // 0x3a0
	UMM_Party_ExplainTextField* m_Party_ExplainTextField; // 0x3a8
	UWidgetAnimation* m_AniStart; // 0x3b0
	UWidgetAnimation* m_AniEnd; // 0x3b8
	UMM_Common_ToolTipBtn* m_pBtnCommToolTip; // 0x3c0
};

struct UBlackboardKeyType_Class {
	UObject* BaseClass; // 0x30
};

struct UWidgetSwitcherSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UMM_Popup_SteamIAP {
	UMirWebBrowser* m_WebBrowser; // 0x2e0
	UMirButton* m_Btn_Close; // 0x2e8
	FTimerHandle DelayCloseTimeHandle; // 0x2f0
};

struct AMM_PostProcessVolume {
	float EffectGlobalBrightness; // 0x7a0
	float CharacterEffectBrightness; // 0x7a4
	float CharacterIndirectScale; // 0x7a8
	float BGBaseColorScale; // 0x7ac
	bool isUIVolume; // 0x7b0
	bool isOverrideDirectionalLight; // 0x7b1
	UOverrideDirectionalLight* OverrideDirectionalLight; // 0x7b8
	bool isOverrideExponentialHeightFog; // 0x7c0
	UOverrideExponentialHeightFog* OverrideExponentialHeightFog; // 0x7c8
};

struct UBTTask_BlueprintBase {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	FIntervalCountdown TickInterval; // 0x80
	char bShowPropertyDetails : 1; // 0xa0
};

struct UMouseCursorBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UMM_Occupation_AuctionState {
	UMirTextBlock* Txt_Description; // 0x2f0
	UMirCanvasPanel* Panel_DefenseGuild; // 0x2f8
	UMirCanvasPanel* Panel_OffenseGuild; // 0x300
	UMirImage* Img_GuildMarkEdge_Defense; // 0x308
	UMirImage* Img_GuildMark_Defense; // 0x310
	UMirTextBlock* Txt_GuildName_Defense; // 0x318
	UMM_Dominion_Goods_Slot* m_pGoods_Defense_AuctionPrice; // 0x320
	UMirTextBlock* m_pTxt_Defense_AuctionStatus; // 0x328
	UMirTextBlock* m_pTxt_Defense_Status; // 0x330
	UHorizontalBox* m_pCanvasDefenseCombatPoint; // 0x338
	UMirTextBlock* m_pTxt_Defense_CombatPoint; // 0x340
	UMirImage* Img_GuildMarkEdge_Offense; // 0x348
	UMirImage* Img_GuildMark_Offense; // 0x350
	UMirTextBlock* Txt_GuildName_Offense; // 0x358
	UMM_Dominion_Goods_Slot* m_pGoods_Offense_AuctionPrice; // 0x360
	UMirTextBlock* m_pTxt_Offense_AuctionStatus; // 0x368
	UMirTextBlock* m_pTxt_Offense_Status; // 0x370
	UHorizontalBox* m_pCanvasOffenseCombatPoint; // 0x378
	UMirTextBlock* m_pTxt_Offense_CombatPoint; // 0x380
	UMirCanvasPanel* m_pCanvasAuction; // 0x388
	UMirImage* m_pImgDefenseWin; // 0x390
	UMirImage* m_pImgOffenseWin; // 0x398
	UMirTextBlock* m_pTxtDefAuctionAble; // 0x3a0
	UMirTextBlock* m_pTxtAtkAuctionAble; // 0x3a8
	UMirTextBlock* m_pTxtDefSiegeOk; // 0x3b0
	UMirTextBlock* m_pTxtAtkSiegeOk; // 0x3b8
};

struct UMM_Friend_ListSlot {
	FLinearColor COLOR_User_Online; // 0x2e8
	FLinearColor COLOR_User_Offline; // 0x2f8
	int32_t STRING_Online; // 0x308
	int32_t STRING_Offline; // 0x30c
	UMirCheckBox* m_CheckBox_Favorite; // 0x310
	UMirImage* m_Img_Class; // 0x318
	UMirTextBlock* m_Txt_Level; // 0x320
	UMirTextBlock* m_Txt_Nickname; // 0x328
	UMirTextBlock* m_Txt_CustomTitle; // 0x330
	UMirTextBlock* m_Txt_CombatPoint; // 0x338
	UPanelWidget* m_Grid_Guild; // 0x340
	UMirImage* m_Img_Guild_Frame; // 0x348
	UMirImage* m_Img_Guild_Symbol; // 0x350
	UMirTextBlock* m_Txt_GuildName; // 0x358
	UMirImage* m_Img_Online; // 0x360
	UMirTextBlock* m_Txt_Online; // 0x368
	UPanelWidget* m_Grid_Action_Request; // 0x370
	UMM_Common_Btn* m_C_Btn_Request; // 0x378
	UMM_Common_Btn* m_C_Btn_RequestCancel; // 0x380
	UPanelWidget* m_Grid_Action_Recv; // 0x388
	UMM_Common_Btn* m_C_Btn_Accept; // 0x390
	UMM_Common_Btn* m_C_Btn_Refuse; // 0x398
	UPanelWidget* m_Grid_Action_Menu; // 0x3a0
	UMM_Common_Btn_Symbol* m_C_Btn_Detail; // 0x3a8
	UMM_Common_Btn_Symbol* m_C_Btn_Chat; // 0x3b0
	UMM_Common_Btn_Symbol* m_C_Btn_Delete; // 0x3b8
};

struct UMaterialExpressionDotProduct {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UMM_ItemCollectSlot {
	UMirTextBlock* m_Txt_Repeat; // 0x2e8
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMirTextBlock* m_Txt_Effect; // 0x2f8
	UMirTextBlock* m_Txt_Term; // 0x300
	TArray<UMM_Slot_Collect_Item*> m_Slot_Items; // 0x308
	UMirImage* m_Img_Select; // 0x318
	UMirButton* m_Btn_Bg; // 0x320
	UMirCheckBox* m_Check_Fav; // 0x328
	int32_t m_RepeatStrID; // 0x330
	int32_t m_FromToStrID; // 0x334
};

struct UMaterialExpressionDistanceFieldGradient {
	FExpressionInput Position; // 0x40
};

struct UFileMediaSource {
	FString FilePath; // 0x88
	bool PrecacheFile; // 0x98
};

struct UParticleModuleSpawnPerUnit {
	float UnitScalar; // 0x38
	float MovementTolerance; // 0x3c
	FRawDistributionFloat SpawnPerUnit; // 0x40
	float MaxFrameDistance; // 0x70
	char bIgnoreSpawnRateWhenMoving : 1; // 0x74
	char bIgnoreMovementAlongX : 1; // 0x74
	char bIgnoreMovementAlongY : 1; // 0x74
	char bIgnoreMovementAlongZ : 1; // 0x74
};

struct UGeneralProjectSettings {
	FString CompanyName; // 0x28
	FString CompanyDistinguishedName; // 0x38
	FString CopyrightNotice; // 0x48
	FString Description; // 0x58
	FString Homepage; // 0x68
	FString LicensingTerms; // 0x78
	FString PrivacyPolicy; // 0x88
	FGuid ProjectId; // 0x98
	FString ProjectName; // 0xa8
	FString ProjectVersion; // 0xb8
	FString SupportContact; // 0xc8
	FText ProjectDisplayedTitle; // 0xd8
	FText ProjectDebugTitleInfo; // 0xf0
	bool bShouldWindowPreserveAspectRatio; // 0x108
	bool bUseBorderlessWindow; // 0x109
	bool bStartInVR; // 0x10a
	bool bStartInAR; // 0x10b
	bool bSupportAR; // 0x10c
	bool bAllowWindowResize; // 0x10d
	bool bAllowClose; // 0x10e
	bool bAllowMaximize; // 0x10f
	bool bAllowMinimize; // 0x110
};

struct UMM_MyCharinfo {
	UMM_Common_Btn* m_DetailStatBtn; // 0x2f0
	UMM_CombatPoint* CombatPoint; // 0x2f8
	UMM_OptionNum* m_OptionNum[0x6]; // 0x308
	UMM_CharInfo* m_CharInfo; // 0x338
	UMM_EquipSlot_Registered* m_EquipSlot[0x8]; // 0x340
	UPanelWidget* m_Grid_Option; // 0x380
	UPanelWidget* m_Grid_TargetCostume; // 0x388
	UMM_Costume_PartsViewer* CostumePartsViewerWidget; // 0x390
	UPanelWidget* m_CanvasEquipParts; // 0x398
	UMM_CheckBox_Switch* m_CheckBoxSwitch; // 0x3a0
	UCanvasPanel* m_CanvesTerm; // 0x3a8
	UMirButton* m_TermItemBtn; // 0x3b0
	UMirImage* m_Img_TermItem_Indicator; // 0x3b8
	UGridPanel* Panel_Detail; // 0x3c0
	int32_t STR_SWITCH_ON; // 0x3c8
	int32_t STR_SWITCH_OFF; // 0x3cc
	UPanelWidget* m_Can_GoToItemMake; // 0x3d0
	UMirButton* m_Btn_GoToItemMake; // 0x3d8
};

struct UWidgetAnimationPlayCallbackProxy {
	FScriptMulticastDelegate Finished; // 0x28
};

struct UBlueprint {
	UObject* ParentClass; // 0x50
	EBlueprintType BlueprintType; // 0x58
	char bRecompileOnLoad : 1; // 0x59
	char bHasBeenRegenerated : 1; // 0x59
	char bIsRegeneratingOnLoad : 1; // 0x59
	int32_t BlueprintSystemVersion; // 0x5c
	USimpleConstructionScript* SimpleConstructionScript; // 0x60
	TArray<UActorComponent*> ComponentTemplates; // 0x68
	TArray<UTimelineTemplate*> Timelines; // 0x78
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x88
	UInheritableComponentHandler* InheritableComponentHandler; // 0x98
};

struct UParticleModuleEventReceiverKillParticles {
	char bStopSpawning : 1; // 0x40
};

struct UFoliageType_Actor {
	AActor* ActorClass; // 0x360
	bool bShouldAttachToBaseComponent; // 0x368
};

struct UMovieSceneEventSection {
	FNameCurve Events; // 0xe0
	FMovieSceneEventSectionData EventData; // 0x158
};

struct UARCandidateObject {
	TArray<char> CandidateObjectData; // 0x30
	FString FriendlyName; // 0x40
	FBox BoundingBox; // 0x50
};

struct UMM_PopupPackageSlot {
	UMM_Slot_Material* m_Slot_Material; // 0x2f0
	UMirTextBlock* m_MirTextBlock_Name; // 0x2f8
	UMirTextBlock* m_MirTextBlock_Name1; // 0x300
	UMirRichTextBlock* m_MirTextBlock_Desc; // 0x308
	UPanelWidget* m_Grid_Desc_Goods; // 0x310
	UPanelWidget* m_Grid_Desc_Item; // 0x318
};

struct ULandscapeGizmoRenderComponent {
	float MinDrawDistance; // 0x228
	float LDMaxDrawDistance; // 0x22c
	float CachedMaxDrawDistance; // 0x230
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x234
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x235
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x236
	ELightmapType LightmapType; // 0x237
	char bUseMaxLODAsImposter : 1; // 0x238
	float CachedBoundsSphereDiameter; // 0x23c
	char bBatchImpostersAsInstances : 1; // 0x240
	char bNeverDistanceCull : 1; // 0x240
	char bAlwaysCreatePhysicsState : 1; // 0x240
	char bGenerateOverlapEvents : 1; // 0x240
	char bMultiBodyOverlap : 1; // 0x241
	char bTraceComplexOnMove : 1; // 0x241
	char bReturnMaterialOnMove : 1; // 0x241
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x241
	char bAllowCullDistanceVolume : 1; // 0x241
	char bHasMotionBlurVelocityMeshes : 1; // 0x241
	char bVisibleInReflectionCaptures : 1; // 0x241
	char bVisibleInRayTracing : 1; // 0x241
	char bRenderInMainPass : 1; // 0x242
	char bRenderInDepthPass : 1; // 0x242
	char bReceivesDecals : 1; // 0x242
	char bOwnerNoSee : 1; // 0x242
	char bOnlyOwnerSee : 1; // 0x242
	char bTreatAsBackgroundForOcclusion : 1; // 0x242
	char bUseAsOccluder : 1; // 0x242
	char bSelectable : 1; // 0x242
	char bForceMipStreaming : 1; // 0x243
	char bHasPerInstanceHitProxies : 1; // 0x243
	char CastShadow : 1; // 0x243
	char bAffectDynamicIndirectLighting : 1; // 0x243
	char bAffectDistanceFieldLighting : 1; // 0x243
	char bCastDynamicShadow : 1; // 0x243
	char bCastStaticShadow : 1; // 0x243
	char bCastVolumetricTranslucentShadow : 1; // 0x243
	char bSelfShadowOnly : 1; // 0x244
	char bCastFarShadow : 1; // 0x244
	char bCastInsetShadow : 1; // 0x244
	char bCastCinematicShadow : 1; // 0x244
	char bCastHiddenShadow : 1; // 0x244
	char bCastShadowAsTwoSided : 1; // 0x244
	char bLightAsIfStatic : 1; // 0x244
	char bLightAttachmentsAsGroup : 1; // 0x244
	char bExcludeFromLightAttachmentGroup : 1; // 0x245
	char bReceiveMobileCSMShadows : 1; // 0x245
	char bSingleSampleShadowFromStationaryLights : 1; // 0x245
	char bIgnoreRadialImpulse : 1; // 0x245
	char bIgnoreRadialForce : 1; // 0x245
	char bApplyImpulseOnDamage : 1; // 0x245
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x245
	char AlwaysLoadOnClient : 1; // 0x245
	char AlwaysLoadOnServer : 1; // 0x246
	char bUseEditorCompositing : 1; // 0x246
	char bRenderCustomDepth : 1; // 0x246
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x247
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x249
	FLightingChannels LightingChannels; // 0x24a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x24b
	int32_t CustomDepthStencilValue; // 0x24c
	FCustomPrimitiveData CustomPrimitiveData; // 0x250
	int32_t TranslucencySortPriority; // 0x260
	int32_t VisibilityId; // 0x264
	char bIgnoreOcclusionVolume : 1; // 0x268
	int32_t OcclusionVolumeId; // 0x26c
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x270
	uint8_t VirtualTextureLodBias; // 0x280
	uint8_t VirtualTextureCullMips; // 0x281
	uint8_t VirtualTextureMinCoverage; // 0x282
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x283
	float LpvBiasMultiplier; // 0x288
	float BoundsScale; // 0x294
	TArray<AActor*> MoveIgnoreActors; // 0x2a8
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2b8
	FBodyInstance BodyInstance; // 0x2d8
	FScriptMulticastDelegate OnComponentHit; // 0x3e8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3e9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3ea
	FScriptMulticastDelegate OnComponentWake; // 0x3eb
	FScriptMulticastDelegate OnComponentSleep; // 0x3ec
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3ee
	FScriptMulticastDelegate OnEndCursorOver; // 0x3ef
	FScriptMulticastDelegate OnClicked; // 0x3f0
	FScriptMulticastDelegate OnReleased; // 0x3f1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3f2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3f3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3f4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3f5
	UPrimitiveComponent* LODParentPrimitive; // 0x410
};

struct UNavRelevantComponent {
	char bAttachToOwnersRoot : 1; // 0xd4
	UObject* CachedNavParent; // 0xd8
};

struct UMM_Popup_OccupationInfo {
	UMirTextBlock* m_Txt_Name; // 0x2e0
	UImage* m_Img_DominionThumb; // 0x2e8
	UMirRichTextBlock* m_RTxt_RemainTime; // 0x2f0
	UMirCanvasPanel* m_Can_Guild; // 0x2f8
	UMirTextBlock* m_Txt_Occupiable; // 0x300
	UMirTextBlock* m_Txt_GuildName; // 0x308
	UMirTextBlock* m_Txt_GuildMasterName; // 0x310
	UImage* m_Img_GuildFrame; // 0x318
	UImage* m_Img_GuildSymbol; // 0x320
	UMM_Common_Btn_Symbol* m_C_Btn_GuildInfo; // 0x328
	UMirCanvasPanel* m_Can_Buff[0x2]; // 0x330
	UMirImage* m_Img_IcnBuff[0x2]; // 0x340
	UMirRichTextBlock* m_RTxt_Buff[0x2]; // 0x350
	UMM_Common_Btn* m_C_Btn_Close; // 0x360
	UMM_Common_Btn* m_C_Btn_Enter; // 0x368
	UMM_Common_Btn_Symbol* m_C_Btn_X; // 0x370
};

struct AMM_GhostTrailManager {
	bool ScaleGhost; // 0x218
	UCurveFloat* ScaleCurve; // 0x220
	bool Active; // 0x228
	float GhostLifetime; // 0x22c
	float GhostSpawnDelay; // 0x230
	bool VelocityDepending; // 0x234
	bool LastInvisible; // 0x235
	float VelocityThreshold; // 0x238
	int32_t GhostMaxCount; // 0x23c
	UMaterialInstance* GhostMaterial; // 0x240
	TArray<FGhostMaterialParam> MatParams; // 0x248
	TArray<FVector> SkeletalVelocities; // 0x258
	TArray<FVector> StaticVelocities; // 0x268
	TArray<FVector> LastSkelLocations; // 0x278
	TArray<FVector> LastStaticLocations; // 0x288
	TArray<UStaticMeshComponent*> StaticMeshCompsToTrail; // 0x298
	TArray<USkeletalMeshComponent*> SkeletalMeshCompsToTrail; // 0x2a8
	TArray<UStaticMeshComponent*> StaticMeshPool; // 0x2b8
	TArray<UPoseableMeshComponent*> PoseableMeshPool; // 0x2c8
	float GhostSpawnTimer; // 0x2d8
	TArray<FGhostInfo> Ghosts; // 0x2e0
	int32_t GhostCount; // 0x2f0
};

struct UBTDecorator_IsAtLocation {
	float AcceptableRadius; // 0x90
	FAIDataProviderFloatValue ParametrizedAcceptableRadius; // 0x98
	FAIDistanceType GeometricDistanceType; // 0xc8
	char bUseParametrizedRadius : 1; // 0xcc
	char bUseNavAgentGoalLocation : 1; // 0xcc
	char bPathFindingBasedTest : 1; // 0xcc
};

struct UMM_GameOption_KeySetting {
	UMirScrollBox* sb_group; // 0x2e0
	UMM_Common_Btn* btn_reset; // 0x2e8
};

struct UMM_Dominion_Base_BossReward {
	UMirImage* m_pImgBoss; // 0x2f8
	UMirTextBlock* m_pTxtBossName; // 0x300
	UMirTextBlock* m_pTxtTxtBossLevel; // 0x308
	UMirTextBlock* m_pTxtBossState; // 0x310
	UMirScrollBox* m_pScollList; // 0x318
};

struct UMM_New_Force_Ability_List {
	UMM_New_Force_Ability_Slot* m_arAbilityListSlot[0x4]; // 0x2f8
	UMM_New_Force_Detail_Info* m_Force_Detail; // 0x318
	UMirImage* m_Img_Mat_Freme; // 0x320
	UMirImage* m_Img_Mat_Bg; // 0x328
	UPanelWidget* m_Panel_Success; // 0x330
	UMirTextBlock* m_C_Txt_Success; // 0x338
	UMirTextBlock* m_C_Txt_SuccessValue; // 0x340
	UMirTextBlock* m_C_Txt_Fail; // 0x348
	UMirTextBlock* m_C_Txt_FailValue; // 0x350
	UMirTextBlock* m_TxtMaxMsg; // 0x358
	TArray<UMM_Slot_Material_Item*> m_C_Mat_Items; // 0x360
	UMM_Common_Btn_Cost* m_C_CB_LevelUp; // 0x370
	UPanelWidget* m_Panel_Failed; // 0x378
	UMirTextBlock* m_C_Txt_FailedInfo; // 0x380
	UMirTextBlock* m_C_Txt_FailedTime; // 0x388
	UMM_Slot_Material_Item* m_C_Slot_CureMat; // 0x390
	UMM_Common_Btn* m_C_CB_Cure; // 0x398
};

struct AOnlineBeacon {
	float BeaconConnectionInitialTimeout; // 0x220
	float BeaconConnectionTimeout; // 0x224
	UNetDriver* NetDriver; // 0x228
};

struct UPageTutorialData {
	TArray<FPageTutorialGroup> PageTutorialStepArray; // 0x30
};

struct UBTTask_RotateToFaceBBEntry {
	float Precision; // 0x98
};

struct UMirCheckBox {
	ECheckBoxState CheckedState; // 0x120
	DelegateProperty CheckedStateDelegate; // 0x124
	FCheckBoxStyle WidgetStyle; // 0x138
	USlateWidgetStyleAsset* Style; // 0x6b8
	USlateBrushAsset* UncheckedImage; // 0x6c0
	USlateBrushAsset* UncheckedHoveredImage; // 0x6c8
	USlateBrushAsset* UncheckedPressedImage; // 0x6d0
	USlateBrushAsset* CheckedImage; // 0x6d8
	USlateBrushAsset* CheckedHoveredImage; // 0x6e0
	USlateBrushAsset* CheckedPressedImage; // 0x6e8
	USlateBrushAsset* UndeterminedImage; // 0x6f0
	USlateBrushAsset* UndeterminedHoveredImage; // 0x6f8
	USlateBrushAsset* UndeterminedPressedImage; // 0x700
	EHorizontalAlignment HorizontalAlignment; // 0x708
	FMargin Padding; // 0x70c
	FSlateColor BorderBackgroundColor; // 0x720
	bool IsFocusable; // 0x748
	FScriptMulticastDelegate OnCheckStateChanged; // 0x750
};

struct UConsole {
	ULocalPlayer* ConsoleTargetPlayer; // 0x38
	UTexture2D* DefaultTexture_Black; // 0x40
	UTexture2D* DefaultTexture_White; // 0x48
	TArray<FString> HistoryBuffer; // 0x68
};

struct USubmixEffectReverbPreset {
	FSubmixEffectReverbSettings Settings; // 0x9c
};

struct AGhostStaticMesh {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMM_TopMsg_Slot {
	float m_fShowTime; // 0x2e0
	UWidgetAnimation* m_AniStart; // 0x2e8
	UMirRichTextBlock* m_RTxt_Message; // 0x310
};

struct UMM_Popup_ServerSelect {
	UPanelWidget* m_Can_ServerSelect; // 0x2e8
	UPanelWidget* m_Can_FindChar; // 0x2f0
	UMM_Common_Btn_Symbol* m_CB_ServerListRefresh; // 0x2f8
	UMM_Common_Btn_Symbol* m_CB_ServerSelectClose; // 0x300
	UMirImage* m_Img_TotalFilter_Selected; // 0x308
	UMirImage* m_Img_RecommendFilter_Selected; // 0x310
	UMirImage* m_Img_MyFilter_Selected; // 0x318
	UMirButton* m_Btn_TotalFilter; // 0x320
	UMirButton* m_Btn_RecommendFilter; // 0x328
	UMirButton* m_Btn_MyFilter; // 0x330
	UMirWrapScrollBox* m_WScr_ServerList; // 0x338
	TArray<UMM_ServerSlot*> m_arServerSlot; // 0x340
	UPanelWidget* m_Can_RecentServer; // 0x350
	UMirTextBlock* m_Txt_RecentServerName; // 0x358
	UMirImage* m_Img_ServerCongestionInfo_1; // 0x360
	UMirTextBlock* m_Txt_ServerCongestionInfo_1; // 0x368
	UMirImage* m_Img_ServerCongestionInfo_2; // 0x370
	UMirTextBlock* m_Txt_ServerCongestionInfo_2; // 0x378
	UMirImage* m_Img_ServerCongestionInfo_3; // 0x380
	UMirTextBlock* m_Txt_ServerCongestionInfo_3; // 0x388
	UMM_Common_Btn* m_CB_GoToFindChar; // 0x390
	UMM_Common_Btn_Symbol* m_CB_FindCharClose; // 0x398
	UMirScrollBox* m_Scr_CharList; // 0x3a0
	TArray<UMM_FindCharSlot*> m_arCharSlot; // 0x3a8
};

struct UMM_Common_ToolTip {
	UPanelWidget* m_Overlay_ToolTip; // 0x2e0
	UMirRichTextBlock* m_RTxt_ToolTip; // 0x2e8
	UMirButton* m_Btn_Screen; // 0x2f0
};

struct UMM_MagicStoneEquip {
	TArray<UMM_MagicStone_EquipedSlot*> magic_stone_equip_slot; // 0x2f0
	UMirTextBlock* txt_combat_point; // 0x300
	UMM_Common_Btn_Symbol* btn_popup_attribute; // 0x308
	UWidgetAnimation* animation_effect; // 0x310
	UMirImage* img_rainbow_cover; // 0x318
};

struct UMM_ShopNpcGoodsSlot {
	UMirImage* Img_Icon; // 0x2e0
	UMirTextBlock* Txt_Value; // 0x2e8
};

struct UWrapBoxSlot {
	FMargin Padding; // 0x38
	bool bFillEmptySpace; // 0x48
	float FillSpanWhenLessThan; // 0x4c
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UMaterialExpressionSceneTexture {
	FExpressionInput Coordinates; // 0x40
	ESceneTextureId SceneTextureId; // 0x54
	bool bFiltered; // 0x55
};

struct UBTDecorator_Loop {
	int32_t NumLoops; // 0x68
	bool bInfiniteLoop; // 0x6c
	float InfiniteLoopTimeoutTime; // 0x70
};

struct UMM_NewInventory_Forge {
	UMM_NewInventoryTab* m_InvenTab; // 0x2e8
	UMM_NewInventory* m_Inven; // 0x2f0
	UHorizontalBox* m_pNoticeBox; // 0x2f8
	UMirTextBlock* m_pTxtNotice; // 0x300
};

struct UMM_FindCharSlot {
	UMirTextBlock* m_Txt_ServerName; // 0x2e8
	UMirImage* m_Img_CharClass; // 0x2f0
	UMirTextBlock* m_Txt_CharLevel; // 0x2f8
	UMirTextBlock* m_Txt_CharName; // 0x300
	UMirTextBlock* m_Txt_LastLogin; // 0x308
	UMM_Common_Btn* m_CB_ServerSelect; // 0x310
};

struct UMM_Popup_CommonCheckBox {
	UMirTextBlock* Txt_Title; // 0x2e0
	UMirRichTextBlock* Txt_Description; // 0x2e8
	UMM_Common_Btn* Btn_Cancel; // 0x2f0
	UMM_Common_Btn* Btn_Ok; // 0x2f8
	UMM_Common_Btn_Symbol* btn_close; // 0x300
	UMM_Common_ToggleBtn* Toggle_DoNotAgain; // 0x308
};

struct UMM_UserEvent_Item_Slot {
	UMirImage* m_Img_GradeBgEffect; // 0x3e8
	UMirImage* m_ImgDisabled; // 0x3f0
	UMirImage* m_ImgSeleted; // 0x3f8
	UMirImage* m_ImgCurrSelected; // 0x400
	UMirTextBlock* m_TxtCount; // 0x408
	UMirTextBlock* m_Txt_Day; // 0x410
	UMirImage* m_Img_Indicator; // 0x418
	UGridPanel* m_Grid_SelectEffect; // 0x420
	UWidgetAnimation* m_AniSelect; // 0x428
};

struct UMirSlider {
	float Value; // 0x108
	DelegateProperty ValueDelegate; // 0x10c
	float MinValue; // 0x11c
	float MaxValue; // 0x120
	FSliderStyle WidgetStyle; // 0x128
	EOrientation Orientation; // 0x468
	FLinearColor SliderBarColor; // 0x46c
	FLinearColor SliderHandleColor; // 0x47c
	bool IndentHandle; // 0x48c
	bool Locked; // 0x48d
	bool MouseUsesStep; // 0x48e
	bool RequiresControllerLock; // 0x48f
	float StepSize; // 0x490
	bool IsFocusable; // 0x494
	FScriptMulticastDelegate OnMouseCaptureBegin; // 0x498
	FScriptMulticastDelegate OnMouseCaptureEnd; // 0x4a8
	FScriptMulticastDelegate OnControllerCaptureBegin; // 0x4b8
	FScriptMulticastDelegate OnControllerCaptureEnd; // 0x4c8
	FScriptMulticastDelegate OnValueChanged; // 0x4d8
};

struct UMM_MagicStone_EquipedSlot {
	UMirImage* m_ImgJewelLock; // 0x408
	UMirImage* m_ImgPlus; // 0x410
	UMirImage* m_Imgindicator; // 0x418
	UMirImage* m_ImgDisabled; // 0x420
	UMirTextBlock* txt_grade; // 0x428
	UMM_Common_Btn_Symbol* m_BtnUnmount; // 0x430
	bool m_ActiveSlot; // 0x438
	int32_t m_JewelSlotIndex; // 0x43c
	UMirImage* img_guide; // 0x440
	UWidgetAnimation* animation_guide; // 0x448
};

struct UMM_Popup_NameChange {
	UButton* m_pRandomButton; // 0x2e0
	UMM_Common_Btn_Symbol* m_pCancelBtn; // 0x2e8
	UMM_Common_Btn* m_pCancelButton; // 0x2f0
	UMM_Common_Btn_Cost* m_pDecisionButton; // 0x2f8
	UMirEditableText* m_pNameEditableText; // 0x300
};

struct ALevelStreamingVolume {
	TArray<FName> StreamingLevelNames; // 0x250
	char bEditorPreVisOnly : 1; // 0x260
	char bDisabled : 1; // 0x260
	EStreamingVolumeUsage StreamingUsage; // 0x264
};

struct UMM_UIShopCashBagSlot {
	UMM_Common_Btn* mBtnMain; // 0x2e0
	UMirImage* mImgIcon; // 0x2e8
	UMirTextBlock* mTxtName; // 0x2f0
};

struct UMM_Slot_Registered {
	UMirImage* m_Img_GradeBgEffect; // 0x3e8
	UMirImage* m_ImgDisabled; // 0x3f0
	UMirImage* m_ImgEquiped; // 0x3f8
	UMirImage* m_Imgindicator; // 0x400
	UMirImage* m_ImgTierBg; // 0x408
	UMirImage* m_Img_Attribution; // 0x410
	UMirTextBlock* m_TxtSmeltingLevel; // 0x418
	UMirTextBlock* m_TxtLockedLevel; // 0x420
	UMirTextBlock* m_TxtCount; // 0x428
	UMirImage* m_Img_UserLock; // 0x430
	UMirImage* m_Img_UserLock_Stack; // 0x438
};

struct UMM_Popup_Occupation_Target {
	UMM_GuildIcon* Widget_GuildIcon; // 0x2f0
	UMM_Common_ProgressBar* Widget_WinTargetHP; // 0x2f8
	UMM_Common_Btn_Symbol* btn_close; // 0x300
	UMM_Common_Btn* Btn_Ok; // 0x308
	UMirButton* Btn_Background; // 0x310
	UWidgetSwitcher* Switcher_GuildInfo; // 0x318
	UMirTextBlock* Txt_Title; // 0x320
	UMirTextBlock* Txt_OccupationPeriod; // 0x328
	UMirTextBlock* Txt_Description_2; // 0x330
	UWidgetSwitcher* Switcher_ContentInfo; // 0x338
	UMirTextBlock* Txt_NextBattleRemainTime; // 0x340
	UMirTextBlock* Txt_BattleEndRemainTime; // 0x348
	UMirButton* Btn_GuildInfo; // 0x350
	UMirCanvasPanel* Can_ContentMain; // 0x358
	UMirCanvasPanel* Can_ContentBattle; // 0x360
	UMirCanvasPanel* Can_TimePanel; // 0x368
	UImage* Img_HP_Gauge; // 0x370
	UMaterialInstanceDynamic* Mat_HP_Gauge; // 0x378
	UMirRichTextBlock* Txt_BattleRemainTime; // 0x380
	UMirRichTextBlock* Txt_BattleStatus; // 0x388
	UMirTextBlock* Txt_TargetHP; // 0x390
	UMirRichTextBlock* Txt_BattleInfo; // 0x398
	UMirTextBlock* Txt_TakeOverRemainTime; // 0x3a0
	UEffectWidgetBase* Effect_Hit; // 0x3a8
};

struct UParticleModuleRotationBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMM_UI_Drag {
	ETouchPositionType m_PostionType; // 0x2e0
	EDragPosType m_DragType; // 0x2e1
	FScriptMulticastDelegate OnClicked; // 0x2e8
	FScriptMulticastDelegate OnDrag; // 0x2f8
	FScriptMulticastDelegate OnReleased; // 0x308
};

struct UMM_Common_Btn_Cost {
	FSlateFontInfo m_CostValueFont; // 0x3f8
	UImage* m_ImgCostIcon; // 0x448
	UMirTextBlock* m_TxtCostValue; // 0x450
	UWidget* m_CostInfoPanel; // 0x458
	UMirTextBlock* m_Txt_HaveValue; // 0x460
	int32_t STRING_POPUP_TRANSFER_FREE_COST; // 0x468
};

struct UMediaPlayer {
	FScriptMulticastDelegate OnEndReached; // 0x28
	FScriptMulticastDelegate OnMediaClosed; // 0x38
	FScriptMulticastDelegate OnMediaOpened; // 0x48
	FScriptMulticastDelegate OnMediaOpenFailed; // 0x58
	FScriptMulticastDelegate OnPlaybackResumed; // 0x68
	FScriptMulticastDelegate OnPlaybackSuspended; // 0x78
	FScriptMulticastDelegate OnSeekCompleted; // 0x88
	FScriptMulticastDelegate OnTracksChanged; // 0x98
	FTimespan CacheAhead; // 0xa8
	FTimespan CacheBehind; // 0xb0
	FTimespan CacheBehindGame; // 0xb8
	bool NativeAudioOut; // 0xc0
	bool PlayOnOpen; // 0xc1
	char Shuffle : 1; // 0xc4
	char Loop : 1; // 0xc4
	UMediaPlaylist* Playlist; // 0xc8
	int32_t PlaylistIndex; // 0xd0
	FTimespan TimeDelay; // 0xd8
	float HorizontalFieldOfView; // 0xe0
	float VerticalFieldOfView; // 0xe4
	FRotator ViewRotation; // 0xe8
	FGuid PlayerGuid; // 0x120
};

struct UMM_Guild_ShopRecordListSlot {
	UMirTextBlock* m_Txt_Num; // 0x2e0
	UMirTextBlock* m_Txt_Name; // 0x2e8
	UMirRichTextBlock* m_Txt_Desc; // 0x2f0
	UMirTextBlock* m_Txt_Time; // 0x2f8
	UMM_ProfileSlot* m_ProfileSlot; // 0x300
	UMM_Slot_Inventory* m_InvenSlot; // 0x308
};

struct UInterpTrackToggle {
	TArray<FToggleTrackKey> ToggleTrack; // 0x70
	char bActivateSystemEachUpdate : 1; // 0x80
	char bActivateWithJustAttachedFlag : 1; // 0x80
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UIAPGoogleStoreModule {
	FIAPUserRequestData m_UserRequestProductData; // 0x58
	FIAPProductData m_PurchaseProductData; // 0x98
	TArray<EIAPPurchaseState> m_PurchaseInProgress; // 0x138
	TArray<FString> ProcessedTransactionIDs; // 0x148
	TArray<FString> ProcessedTransactionReceipts; // 0x158
	FTimerHandle DelayHideBlockScreenTimeHandle; // 0x168
	TMap<FString, FIAPMarketProductData> m_MarketProductDataMap; // 0x170
};

struct UWebBrowserAssetManager {
	UMaterial* DefaultMaterial; // 0x28
};

struct AAmbientSound {
	UAudioComponent* AudioComponent; // 0x218
};

struct UMaterialExpressionDecalMipmapLevel {
	FExpressionInput TextureSize; // 0x40
	float ConstWidth; // 0x54
	float ConstHeight; // 0x58
};

struct USimpleConstructionScript {
	TArray<USCS_Node*> RootNodes; // 0x28
	TArray<USCS_Node*> AllNodes; // 0x38
	USCS_Node* DefaultSceneRootNode; // 0x48
};

struct USoundGroups {
	TArray<FSoundGroup> SoundGroupProfiles; // 0x28
};

struct UParticleModuleAttractorLine {
	FVector EndPoint0; // 0x30
	FVector EndPoint1; // 0x3c
	FRawDistributionFloat Range; // 0x48
	FRawDistributionFloat Strength; // 0x78
};

struct AGuardNpcMoveTrigger {
	AGuardNpcSpawnTrigger* m_pGuardNpcTrigger; // 0x278
	ATriggerWayPoint* m_pWayPoint; // 0x280
	AMM_Monster* m_pGuardNpc; // 0x288
};

struct AKillZVolume {
	float TerminalVelocity; // 0x250
	int32_t Priority; // 0x254
	float FluidFriction; // 0x258
	char bWaterVolume : 1; // 0x25c
	char bPhysicsOnContact : 1; // 0x25c
};

struct UMM_Popup_GuideWebBrowser {
	UPanelWidget* m_Can_Back; // 0x2e0
	UMirButton* m_Btn_Back; // 0x2e8
	UMirWebBrowser* m_C_WebBrowser; // 0x2f0
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x2f8
};

struct AMonsterGroupTrigger {
	bool m_bRegen; // 0x278
	float m_RegenDelay; // 0x27c
	TArray<AMonsterSpawner*> m_SpawnerArray; // 0x280
	bool m_bLinkGroup; // 0x290
	AMonsterKillCountTrigger* m_pKillCount; // 0x298
};

struct AControlPointMeshActor {
	UControlPointMeshComponent* ControlPointMeshComponent; // 0x218
};

struct UMM_MagicStoneDetailInfo {
	UMM_Slot_Material* magic_stone_slot; // 0x2f0
	UMirTextBlock* Txt_Name; // 0x2f8
	UMirTextBlock* txt_transcend_step; // 0x300
	TArray<UMM_MagicStone_AttributeSlot*> lst_slot; // 0x308
	UMirCanvasPanel* cp_contents; // 0x318
};

struct UMM_PopUp_BuildingChart {
	int32_t m_TitleStr; // 0x2e0
	int32_t m_StepStr; // 0x2e4
	int32_t m_CombatStr; // 0x2e8
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f8
	UMirScaleBox* m_Scale_Step; // 0x300
	UMirTextBlock* m_Txt_Step; // 0x308
	TArray<UMirScaleBox*> m_Scale_Titles; // 0x310
	TArray<UMirTextBlock*> m_Txt_EffectTitles; // 0x320
	UMirScrollBox* m_ScrollChart; // 0x330
	UMirListView* m_ListView; // 0x338
	TArray<UBuildingChartSlotObj*> m_ChartSlotObjs; // 0x348
};

struct UParticleModuleTypeDataRibbon {
	int32_t MaxTessellationBetweenParticles; // 0x30
	int32_t SheetsPerTrail; // 0x34
	int32_t MaxTrailCount; // 0x38
	int32_t MaxParticleInTrailCount; // 0x3c
	char bDeadTrailsOnDeactivate : 1; // 0x40
	char bDeadTrailsOnSourceLoss : 1; // 0x40
	char bClipSourceSegement : 1; // 0x40
	char bEnablePreviousTangentRecalculation : 1; // 0x40
	char bTangentRecalculationEveryFrame : 1; // 0x40
	char bSpawnInitialParticle : 1; // 0x40
	ETrailsRenderAxisOption RenderAxis; // 0x44
	float TangentSpawningScalar; // 0x48
	char bRenderGeometry : 1; // 0x4c
	char bRenderSpawnPoints : 1; // 0x4c
	char bRenderTangents : 1; // 0x4c
	char bRenderTessellation : 1; // 0x4c
	float TilingDistance; // 0x50
	float DistanceTessellationStepSize; // 0x54
	char bEnableTangentDiffInterpScale : 1; // 0x58
	float TangentTessellationScalar; // 0x5c
};

struct UMaterialInstanceDynamic {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UMaterialInterface* Parent; // 0x90
	char bHasStaticPermutationResource : 1; // 0x98
	char bOverrideSubsurfaceProfile : 1; // 0x98
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xa0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xb0
	TArray<FTextureParameterValue> TextureParameterValues; // 0xc0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xd0
	TArray<FFontParameterValue> FontParameterValues; // 0xe0
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0xf0
	TArray<UObject*> PermutationTextureReferences; // 0x108
	FStaticParameterSet StaticParameters; // 0x118
};

struct AAutoAirwalkTrigger {
	int32_t m_QuestID; // 0x238
	int32_t m_AutoMoveDirectingID; // 0x23c
	UCapsuleComponent* m_pCapsuleComponent; // 0x240
	float m_JumpDistance1; // 0x24c
	float m_JumpHeight1; // 0x250
	float m_JumpDistance2; // 0x254
	float m_JumpHeight2; // 0x258
	float m_JumpDistance3; // 0x25c
	float m_JumpHeight3; // 0x260
	float m_EndDistance; // 0x264
	float m_EndHeight; // 0x268
	FVector m_EndLocation; // 0x26c
};

struct UExpandableArea {
	FExpandableAreaStyle Style; // 0x110
	FSlateBrush BorderBrush; // 0x230
	FSlateColor BorderColor; // 0x2b8
	bool bIsExpanded; // 0x2e0
	float MaxHeight; // 0x2e4
	FMargin HeaderPadding; // 0x2e8
	FMargin AreaPadding; // 0x2f8
	FScriptMulticastDelegate OnExpansionChanged; // 0x308
	UWidget* HeaderContent; // 0x318
	UWidget* BodyContent; // 0x320
};

struct UMM_CharAbility {
	UMirCanvasPanel* Panel_Info; // 0x2f0
	UMirCanvasPanel* Panel_Fame; // 0x2f8
	UMM_CharAbility_Info_Rating* Info_Rating; // 0x300
	UMM_CharAbility_Info_Rank* Info_Rank; // 0x308
	UMM_CharAbility_Info_Guild* Info_Guild; // 0x310
	UMM_CharAbility_Info_Fame* Info_Fame; // 0x318
	UMM_CharAbility_Info_Skill* Info_Skill; // 0x320
	UMM_CharAbility_Info_Pet* Info_Pet; // 0x328
	UMM_CharAbility_Info_Training* Info_Training; // 0x330
	UMM_CharInfo_GuildBtnList* m_GuildBtnList; // 0x338
	UMirScrollBox* ScrollBox; // 0x340
	UMM_Inventory_Tab* Tab_List; // 0x348
};

struct UMaterialExpressionParticleMacroUV {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_B_Shop_NPC_Making {
	UMM_ShopNpcGoods* m_ShopNPCGoods; // 0x2f0
	UMM_Common_Btn_Symbol* m_BtnClose; // 0x2f8
	UMM_Common_Btn* m_BtnMake; // 0x300
	UMirTextBlock* m_TxtNoItem; // 0x308
	int32_t m_Money1ID; // 0x310
	int32_t m_Money2ID; // 0x314
	int32_t m_Money3ID; // 0x318
	bool m_IsPossibleMake; // 0x31c
};

struct ATriggerVolume {
	EBrushType BrushType; // 0x218
	FColor BrushColor; // 0x21c
	int32_t PolyFlags; // 0x220
	char bColored : 1; // 0x224
	char bSolidWhenSelected : 1; // 0x224
	char bPlaceableFromClassBrowser : 1; // 0x224
	char bNotForClientOrServer : 1; // 0x224
	UModel* Brush; // 0x228
	UBrushComponent* BrushComponent; // 0x230
	char bInManipulation : 1; // 0x238
	TArray<FGeomSelection> SavedSelections; // 0x240
};

struct UMorphTarget {
	USkeletalMesh* BaseSkelMesh; // 0x28
};

struct UTexture2DDynamic {
	EPixelFormat Format; // 0xd8
};

struct UMM_CinematicManager {
	ACinematicDialogue* m_pCutsceneDialogue; // 0x50
	ULevelSequencePlayer* m_pLevelSequencePlayer; // 0x58
	ALevelSequenceActor* m_pLevelSequenceActor; // 0x60
	UObject* m_pCallbackObject; // 0x78
};

struct UMM_PatchWidget {
	UMediaPlayer* m_MediaPlayer; // 0x2e0
	UMediaTexture* m_MediaTexture; // 0x2e8
	UMediaSource* m_Movie_Logo; // 0x2f0
	AMediaSoundActor* m_MediaSoundActor; // 0x300
	UPanelWidget* m_Can_Splash; // 0x338
	UPanelWidget* m_Scl_Movie; // 0x340
	UPanelWidget* m_Overlay_Warning; // 0x348
	UMirRichTextBlock* m_RTxt_Warning; // 0x350
	UWidgetAnimation* m_Ani_Splash; // 0x358
	UPanelWidget* m_Can_Patch; // 0x370
	UMirTextBlock* m_Txt_DownloadMsg; // 0x378
	UMirTextBlock* m_Txt_DownloadPercent; // 0x380
	UMirTextBlock* m_Txt_DownloadSize; // 0x388
	UMirTextBlock* m_Txt_DownloadSpeed; // 0x390
	UMirProgressBar* m_Prg_Progress; // 0x398
	UMirTextBlock* m_Txt_IOS_BackgroundDownload; // 0x3a0
	UPanelWidget* m_Overlay_Popup; // 0x3a8
	UMirTextBlock* m_Txt_Title; // 0x3b0
	UMirRichTextBlock* m_RTxt_Msg; // 0x3b8
	UPanelWidget* m_Overlay_Cancel; // 0x3c0
	UMirTextBlock* m_Txt_Cancel; // 0x3c8
	UMirButton* m_Btn_Cancel; // 0x3d0
	UPanelWidget* m_Overlay_Confirm; // 0x3d8
	UMirTextBlock* m_Txt_Confirm; // 0x3e0
	UMirButton* m_Btn_Confirm; // 0x3e8
	int32_t m_iDebugModeClickCount; // 0x414
	UPanelWidget* m_Can_Debug; // 0x420
	UMirButton* m_Btn_Debug; // 0x428
	UMirTextBlock* m_Txt_DownloadFileName; // 0x430
};

struct UMM_PhotoModeAnimInstance {
	UOutGameLookAtData* m_pOutGameLookAtData; // 0x268
	FRotator m_HeadLookRot; // 0x270
	FRotator m_NeckLookRot; // 0x27c
	FRotator m_EyeRLookRot; // 0x288
	FRotator m_EyeLLookRot; // 0x294
	float m_LookAtAlpha; // 0x2a0
	float m_NeckTransformAlpha; // 0x2a4
	float m_HeadTransformAlpha; // 0x2a8
	int32_t m_AnimIndex; // 0x2ac
};

struct UMM_PopUp_ItemInfo_Left {
	UMM_Slot_Inventory* m_InventorySlot; // 0x2f0
	UMM_Common_Btn* m_LevelUPBtn; // 0x2f8
	UMM_Common_Btn* m_SmeltingBtn; // 0x300
	UMM_Common_Btn* m_ChangeOptionBtn; // 0x308
	UMM_Common_Btn* m_CombineBtn; // 0x310
	UMM_Common_Btn* m_GetWayBtn; // 0x318
	UMM_Common_Btn* m_TransBtn; // 0x320
	UMM_Common_Btn* m_ItemShareBtn; // 0x328
	UMM_Common_Btn* m_ItemRepairBtn; // 0x330
	UMM_Common_Btn* m_pGoAuction; // 0x338
	UMM_Common_Btn* m_CollectionBtn; // 0x340
	UMM_Common_Btn* m_ItemMakeBtn; // 0x348
	UMM_Common_Btn* m_XDracoSealBtn; // 0x350
	UMM_PopUp_ItemInfo* ParentWidget; // 0x358
};

struct UMM_Guild_Dev_BenefitList {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct AMMUISkyLight {
	USceneComponent* SceneComponent; // 0x218
	UMaterialParameterCollection* UICharacterMaterialParameterCollection; // 0x220
	FColor UpperLightColor; // 0x228
	float UpperLightIntensity; // 0x22c
	FColor LowerLightColor; // 0x230
	float LowerLightIntensity; // 0x234
	float ReflectionIntensity; // 0x238
	float RimIntensity; // 0x23c
};

struct ULandscapeSplineControlPoint {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	float Width; // 0x40
	float LayerWidthRatio; // 0x44
	float SideFalloff; // 0x48
	float LeftSideFalloffFactor; // 0x4c
	float RightSideFalloffFactor; // 0x50
	float LeftSideLayerFalloffFactor; // 0x54
	float RightSideLayerFalloffFactor; // 0x58
	float EndFalloff; // 0x5c
	TArray<FLandscapeSplineConnection> ConnectedSegments; // 0x60
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	UControlPointMeshComponent* LocalMeshComponent; // 0xa0
};

struct UParticleModuleVelocity {
	FRawDistributionVector StartVelocity; // 0x38
	FRawDistributionFloat StartVelocityRadial; // 0x80
};

struct UDataTable {
	UScriptStruct* RowStruct; // 0x28
	char bStripFromClientBuilds : 1; // 0x80
	char bIgnoreExtraFields : 1; // 0x80
	char bIgnoreMissingFields : 1; // 0x80
	FString ImportKeyField; // 0x88
};

struct UMM_GameOption_Graphic {
	UMM_GameOption_Select* Option_Simple; // 0x2f0
	UMM_GameOption_Select* Option_ScreenEffect; // 0x2f8
	UMM_GameOption_Select* Option_Textrue; // 0x300
	UMM_GameOption_Select* Option_Resolution; // 0x308
	UMM_GameOption_Select* Option_FrameSpeed; // 0x310
	UMM_GameOption_Select* Option_Visual; // 0x318
	UMM_GameOption_Select* Option_SkillEffect; // 0x320
	UMM_GameOption_Select* Option_Shadow; // 0x328
};

struct UMM_GameOption_UI {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UClothingAssetCommon {
	UPhysicsAsset* PhysicsAsset; // 0x48
	UClothConfigBase* ClothSimConfig; // 0x50
	TArray<UClothLODDataBase*> ClothLODData; // 0x58
	TArray<int32_t> LodMap; // 0x68
	TArray<FName> UsedBoneNames; // 0x78
	TArray<int32_t> UsedBoneIndices; // 0x88
	int32_t ReferenceBoneIndex; // 0x98
	UClothingAssetCustomData* CustomData; // 0xa0
};

struct UAnimCompositeBase {
	TArray<FAnimNotifyEvent> Notifies; // 0x80
	float SequenceLength; // 0x90
	float RateScale; // 0x94
	FRawCurveTracks RawCurveData; // 0x98
};

struct UMM_Widget_Master {
	UPanelWidget* m_Can_Default; // 0x308
	UPanelWidget* m_Can_Effect; // 0x310
};

struct UConsoleSettings {
	int32_t MaxScrollbackSize; // 0x28
	TArray<FAutoCompleteCommand> ManualAutoCompleteList; // 0x30
	TArray<FString> AutoCompleteMapPaths; // 0x40
	float BackgroundOpacityPercentage; // 0x50
	bool bOrderTopToBottom; // 0x54
	bool bDisplayHelpInAutoComplete; // 0x55
	FColor InputColor; // 0x58
	FColor HistoryColor; // 0x5c
	FColor AutoCompleteCommandColor; // 0x60
	FColor AutoCompleteCVarColor; // 0x64
	FColor AutoCompleteFadedColor; // 0x68
};

struct UAISense_Touch {
	TArray<FAITouchEvent> RegisteredEvents; // 0x80
};

struct UMM_Customizing_KeyPad {
	UMM_Common_Btn* m_Btn_Minus10; // 0x2f0
	UMM_Common_Btn* m_Btn_Minus1; // 0x2f8
	UMM_Common_Btn* m_Btn_Plus10; // 0x300
	UMM_Common_Btn* m_Btn_Plus1; // 0x308
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x310
	UMM_Common_Btn* m_Btn_Reset; // 0x318
};

struct UMM_Popup_Guild_ShopRecord {
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x2f0
	UMirCheckBox* m_CheckBoxRegist; // 0x2f8
	UMirCheckBox* m_CheckBoxBuy; // 0x300
	UMirTextBlock* m_Txt_RecordTitle; // 0x308
	UMirTextBlock* m_Txt_RegistTitle; // 0x310
	UMirTextBlock* m_Txt_BuyTitle; // 0x318
	UMirScrollBox* m_ScrollBox; // 0x320
	UMM_Common_Board_Notice* m_Empty_Notice; // 0x328
	UWidgetAnimation* m_AniStart; // 0x330
	UWidgetAnimation* m_AniEnd; // 0x338
};

struct ULevelSequence {
	UMovieScene* MovieScene; // 0x348
	FLevelSequenceObjectReferenceMap ObjectReferences; // 0x350
	FLevelSequenceBindingReferences BindingReferences; // 0x3a0
	TMap<FString, FLevelSequenceObject> PossessedObjects; // 0x440
	UObject* DirectorClass; // 0x490
};

struct ABrush {
	EBrushType BrushType; // 0x218
	FColor BrushColor; // 0x21c
	int32_t PolyFlags; // 0x220
	char bColored : 1; // 0x224
	char bSolidWhenSelected : 1; // 0x224
	char bPlaceableFromClassBrowser : 1; // 0x224
	char bNotForClientOrServer : 1; // 0x224
	UModel* Brush; // 0x228
	UBrushComponent* BrushComponent; // 0x230
	char bInManipulation : 1; // 0x238
	TArray<FGeomSelection> SavedSelections; // 0x240
};

struct AContentsLightManager_BP_C {
	USceneComponent* DefaultSceneRoot; // 0x288
};

struct UMovieSceneEnumSection {
	FMovieSceneByteChannel EnumCurve; // 0xe0
};

struct UParticleModuleVectorFieldGlobal {
	char bOverrideGlobalVectorFieldTightness : 1; // 0x30
	float GlobalVectorFieldScale; // 0x34
	float GlobalVectorFieldTightness; // 0x38
};

struct UMM_DungeonCommonCondition {
	UMirTextBlock* txtFixUserCount; // 0x2e0
	UMirTextBlock* txtUserCount; // 0x2e8
	UMirTextBlock* txtFixNeedCombat; // 0x2f0
	UMirTextBlock* txtNeedCombat; // 0x2f8
	UMirTextBlock* txtFixRecommendCombat; // 0x300
	UMirTextBlock* txtRecommendCombat; // 0x308
	UMM_Common_ToolTipBtn* btnDetailInfo; // 0x310
};

struct UParticleModuleRotationRate {
	FRawDistributionFloat StartRotationRate; // 0x30
};

struct UMM_ItemResult_AbilitySlot {
	float m_DelayTime; // 0x2e0
};

struct UMM_Xdraco_InvenRight {
	UMM_NewInventoryTab* m_InvenTab; // 0x2e8
	UMM_NewInventory* m_Inven; // 0x2f0
	UMirTextBlock* m_Txt_InvenCount; // 0x2f8
	UMM_SortListBtn* m_SortListBtn; // 0x300
};

struct UMM_PopupExpBoosterSlot {
	UMirImage* img_status; // 0x2e0
	UMirTextBlock* Txt_Name; // 0x2e8
	UMirTextBlock* Txt_Desc; // 0x2f0
	UMirRichTextBlock* Txt_Value; // 0x2f8
	UMirImage* Img_Lock; // 0x300
};

struct UMaterialExpressionViewSize {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_Occupation_Minimap_Icon {
	UWidgetAnimation* Animation_Blinking; // 0x2e0
	UMirImage* Img_Icon; // 0x2e8
	UMirCanvasPanel* m_canvas_HPBar; // 0x2f0
	UMirProgressBar* m_HPBar; // 0x2f8
	UEffectWidgetBase* m_AttackEffect; // 0x300
};

struct AQuestArrivalDisplayActor {
	UWidgetComponent* ArrivalWidgetCom; // 0x218
	uint32_t EffectUID; // 0x220
	int32_t IconID; // 0x224
	float MinLimit; // 0x228
};

struct UAISenseEvent_Hearing {
	FAINoiseEvent Event; // 0x28
};

struct UAssetExportTask {
	UObject* Object; // 0x28
	UExporter* Exporter; // 0x30
	FString Filename; // 0x38
	bool bSelected; // 0x48
	bool bReplaceIdentical; // 0x49
	bool bPrompt; // 0x4a
	bool bAutomated; // 0x4b
	bool bUseFileArchive; // 0x4c
	bool bWriteEmptyFiles; // 0x4d
	TArray<UObject*> IgnoreObjectList; // 0x50
	UObject* Options; // 0x60
	TArray<FString> Errors; // 0x68
};

struct AGroupMeditationTrigger {
	float m_CircleRange; // 0x218
	FColor m_CircleColor; // 0x21c
	USphereComponent* m_pSphereCollision; // 0x220
};

struct UAudioComponent {
	USoundBase* sound; // 0x220
	TArray<FAudioComponentParam> InstanceParameters; // 0x228
	USoundClass* SoundClassOverride; // 0x238
	char bAutoDestroy : 1; // 0x240
	char bStopWhenOwnerDestroyed : 1; // 0x240
	char bShouldRemainActiveIfDropped : 1; // 0x240
	char bAllowSpatialization : 1; // 0x240
	char bOverrideAttenuation : 1; // 0x240
	char bOverrideSubtitlePriority : 1; // 0x240
	char bIsUISound : 1; // 0x240
	char bEnableLowPassFilter : 1; // 0x240
	char bOverridePriority : 1; // 0x241
	char bSuppressSubtitles : 1; // 0x241
	char bAutoManageAttachment : 1; // 0x242
	FName AudioComponentUserID; // 0x248
	float PitchModulationMin; // 0x250
	float PitchModulationMax; // 0x254
	float VolumeModulationMin; // 0x258
	float VolumeModulationMax; // 0x25c
	float VolumeMultiplier; // 0x260
	int32_t EnvelopeFollowerAttackTime; // 0x264
	int32_t EnvelopeFollowerReleaseTime; // 0x268
	float Priority; // 0x26c
	float SubtitlePriority; // 0x270
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x278
	float PitchMultiplier; // 0x280
	float LowPassFilterFrequency; // 0x284
	USoundAttenuation* AttenuationSettings; // 0x290
	FSoundAttenuationSettings AttenuationOverrides; // 0x298
	USoundConcurrency* ConcurrencySettings; // 0x588
	TSet<USoundConcurrency*> ConcurrencySet; // 0x590
	EAttachmentRule AutoAttachLocationRule; // 0x5ec
	EAttachmentRule AutoAttachRotationRule; // 0x5ed
	EAttachmentRule AutoAttachScaleRule; // 0x5ee
	FScriptMulticastDelegate OnAudioFinished; // 0x5f0
	FScriptMulticastDelegate OnAudioPlaybackPercent; // 0x618
	FScriptMulticastDelegate OnAudioSingleEnvelopeValue; // 0x640
	FScriptMulticastDelegate OnAudioMultiEnvelopeValue; // 0x668
	FSoundModulation Modulation; // 0x690
	DelegateProperty OnQueueSubtitles; // 0x6a0
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x6b0
	FName AutoAttachSocketName; // 0x6b8
};

struct UMaterialExpressionPreSkinnedPosition {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UVectorField {
	FBox Bounds; // 0x28
	float Intensity; // 0x44
};

struct UFirebaseFutureDataSnapshot {
	FScriptMulticastDelegate OnComplete; // 0x30
};

struct UFacebookLogin {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_CharacterBaseAnimInstance {
	float IdleStartPosition; // 0x268
	EFSM_TYPE FSMType; // 0x26c
	bool BattleState; // 0x26d
	int32_t SkillId; // 0x270
	int32_t CCSTANCE; // 0x274
	int32_t AniIndex; // 0x278
	int32_t OpObjectType; // 0x27c
	EAIRWALK_STATE AirwalkState; // 0x280
	bool IsStandJump; // 0x281
	int32_t HangOnDir; // 0x284
	float SideWalkDir; // 0x288
	float RotDegree; // 0x28c
	float MoveBlendSpeed; // 0x290
	float MoveRate; // 0x294
	int32_t IdleIndex; // 0x298
	bool IsRideStart; // 0x29c
	bool IsRide; // 0x29d
	int32_t VehicleType; // 0x2a0
	bool IsTrace; // 0x2a5
	AMM_CharacterPawnBase* CharacterBase; // 0x2a8
};

struct UMM_Dominion_Castle_Tax {
	UMirImage* m_pImgIcon; // 0x2e8
	UMirTextBlock* m_pTxtTaxValue; // 0x2f0
	UMM_Common_Btn_Symbol* m_pBtnSetTax; // 0x2f8
};

struct UMM_RegionSlot_Global {
	UWidget* m_Img_Selected; // 0x2f0
	UWidget* m_WE_Selected; // 0x2f8
	UMirImage* m_Img_Icon; // 0x300
	UMirTextBlock* m_Txt_Name; // 0x308
	UMirTextBlock* m_Txt_Ping; // 0x310
	UMirTextBlock* m_Txt_UTC; // 0x318
	UMirButton* m_Btn_Main; // 0x320
	UWidget* m_Spc_ClickEffect; // 0x328
};

struct UMM_CharacterPartsAnimInstance {
	EFSM_TYPE FSMType; // 0x268
	int32_t SubState; // 0x26c
};

struct UMaterialExpressionDepthOfFieldFunction {
	EDepthOfFieldFunctionValue FunctionValue; // 0x40
	FExpressionInput Depth; // 0x44
};

struct UInterpTrackSound {
	TArray<FSoundTrackKey> Sounds; // 0x90
	char bPlayOnReverse : 1; // 0xa0
	char bContinueSoundOnMatineeEnd : 1; // 0xa0
	char bSuppressSubtitles : 1; // 0xa0
	char bTreatAsDialogue : 1; // 0xa0
	char bAttach : 1; // 0xa0
};

struct UMM_PopUp_BuildingChart_Slot {
	UMirTextBlock* m_Txt_Step; // 0x2e8
	TArray<UMirTextBlock*> m_Txt_Effects; // 0x2f0
	UMirImage* m_Img_Select; // 0x300
};

struct UMM_AchievementWidget {
	UMM_CommonVerticalTabSet* Category; // 0x2f8
	UMM_Common_Btn* Btn_ReceiveAll; // 0x300
	UMirListView* m_ListView_AchList; // 0x308
	int32_t ALL_RECIEVE_BTN_EFECT_ID; // 0x310
	TArray<UAchSlotObj*> m_arAchSlotObj; // 0x318
};

struct UMM_ServerVisit_ServerList {
	UMirCanvasPanel* m_Canvas_Current; // 0x2e0
	UMirImage* m_Img_AppearBossBg; // 0x2e8
	UMirImage* m_Img_StandBossBg; // 0x2f0
	UMirImage* m_Img_AppearBoss; // 0x2f8
	UMirImage* m_Img_StandBoss; // 0x300
	UMirTextBlock* m_Txt_ServerName; // 0x308
	UMirRichTextBlock* m_Txt_ServerNotice; // 0x310
	UMirTextBlock* m_Txt_ServerCharacterCount; // 0x318
	UMirButton* m_Btn_Select; // 0x320
};

struct UMM_UIAction_DailyWork {
	int32_t STRING_ERROR_CONTENTS_OPEN; // 0x260
	int32_t STRING_ERROR_CONTENTS_RUNNING; // 0x264
	int32_t STRING_DAILY_WORK_PROGRESS; // 0x268
	int32_t STRING_DAILY_WORK_RECEIVEALL; // 0x26c
	int32_t STRING_ERROR_END_QUEST; // 0x270
	int32_t STRING_ERROR_PLUS_REWARD_NONE; // 0x274
	int32_t STRING_ERROR_PLUS_REWARD_END; // 0x278
	int32_t STRING_ERROR_RECEIVEALL; // 0x27c
};

struct UBTDecorator_Cooldown {
	float CoolDownTime; // 0x68
};

struct UEnvQueryTest_Pathfinding {
	EEnvTestPathfinding TestMode; // 0x1c0
	UEnvQueryContext* Context; // 0x1c8
	FAIDataProviderBoolValue PathFromContext; // 0x1d0
	FAIDataProviderBoolValue SkipUnreachable; // 0x200
	UNavigationQueryFilter* FilterClass; // 0x230
};

struct UMM_HudGetItemMsg {
	float m_fShowTime_Lucky; // 0x328
	UWidgetAnimation* m_AniStart_Blue; // 0x330
	UWidgetAnimation* m_AniStart_Purple; // 0x338
	UWidgetAnimation* m_AniStart_Yellow; // 0x340
	UWidgetAnimation* m_AniStart_Red; // 0x348
	UWidgetAnimation* m_AniEnd_Lucky; // 0x350
	UPanelWidget* m_Grid_Lucky; // 0x378
	UMirTextBlock* m_Txt_Lucky; // 0x380
	UImage* m_Img_Bg_1; // 0x388
	UImage* m_Img_Bg_2; // 0x390
};

struct UPawnAction {
	UPawnAction* ChildAction; // 0x28
	UPawnAction* ParentAction; // 0x30
	UPawnActionsComponent* OwnerComponent; // 0x38
	UObject* Instigator; // 0x40
	UBrainComponent* BrainComp; // 0x48
	char bAllowNewSameClassInstance : 1; // 0x80
	char bReplaceActiveSameClassInstance : 1; // 0x80
	char bShouldPauseMovement : 1; // 0x80
	char bAlwaysNotifyOnFinished : 1; // 0x80
};

struct UPawnActionsComponent {
	APawn* ControlledPawn; // 0xb0
	TArray<FPawnActionStack> ActionStacks; // 0xb8
	TArray<FPawnActionEvent> ActionEvents; // 0xc8
	UPawnAction* CurrentAction; // 0xd8
};

struct UMM_ProgressBar_HP_Stack {
	UMirTextBlock* TextBlock_StackCount; // 0x3b8
	TArray<FPorgressColor> StackColor; // 0x3c0
};

struct AAbstractNavData {
	UPrimitiveComponent* RenderingComp; // 0x220
	FNavDataConfig NavDataConfig; // 0x228
	char bEnableDrawing : 1; // 0x2a0
	char bForceRebuildOnLoad : 1; // 0x2a0
	char bAutoDestroyWhenNoNavigation : 1; // 0x2a0
	char bCanBeMainNavData : 1; // 0x2a0
	char bCanSpawnOnRebuild : 1; // 0x2a0
	char bRebuildAtRuntime : 1; // 0x2a0
	ERuntimeGenerationType RuntimeGeneration; // 0x2a4
	float ObservedPathsTickInterval; // 0x2a8
	uint32_t DataVersion; // 0x2ac
	TArray<FSupportedAreaData> SupportedAreas; // 0x390
};

struct UGameMapsSettings {
	FString LocalMapOptions; // 0x28
	FSoftObjectPath TransitionMap; // 0x38
	bool bUseSplitscreen; // 0x50
	ETwoPlayerSplitScreenType TwoPlayerSplitscreenLayout; // 0x51
	EThreePlayerSplitScreenType ThreePlayerSplitscreenLayout; // 0x52
	EFourPlayerSplitScreenType FourPlayerSplitscreenLayout; // 0x53
	bool bOffsetPlayerGamepadIds; // 0x54
	FSoftClassPath GameInstanceClass; // 0x58
	FSoftObjectPath GameDefaultMap; // 0x70
	FSoftObjectPath ServerDefaultMap; // 0x88
	FSoftClassPath GlobalDefaultGameMode; // 0xa0
	FSoftClassPath GlobalDefaultServerGameMode; // 0xb8
	TArray<FGameModeName> GameModeMapPrefixes; // 0xd0
	TArray<FGameModeName> GameModeClassAliases; // 0xe0
};

struct UMM_Auction_Tab_Base {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMaterialExpressionStaticBoolParameter {
	char DefaultValue : 1; // 0x58
};

struct UMM_ExchangeItemInfo {
	UMirTextBlock* m_Txt_Title[0x2]; // 0x2e0
	UMirImage* m_Img_GradeBg[0x2]; // 0x2f0
	UMirImage* m_Img_TierBg[0x2]; // 0x300
	UMirImage* m_Img_Icon[0x2]; // 0x310
	UMirTextBlock* m_Txt_SmeltingLevel[0x2]; // 0x320
	UMirTextBlock* m_Txt_Name[0x2]; // 0x330
	UMirTextBlock* m_Txt_Count[0x2]; // 0x340
};

struct UParticleModuleBeamBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UMaterialExpressionConstant {
	float R; // 0x40
};

struct ACinematicDialoguePreview {
	int32_t m_CinematicSettingID; // 0x228
	bool m_bSpawn; // 0x22c
	bool m_bFileExport; // 0x22d
	FText m_ActorSettingText; // 0x230
	FText m_CameraSettingText; // 0x248
	TArray<ACutsceneActor*> m_ActorArray; // 0x260
	TArray<ACutsceneCamera*> m_CameraArray; // 0x270
	int32_t m_CinematicDialogueID; // 0x280
	ACutsceneCamera* m_pMainCamera; // 0x288
	TArray<ACutsceneActor*> m_ActionActorArray; // 0x290
	bool m_bActionFileExport; // 0x2a0
	FText m_ActionInfoText; // 0x2a8
	FText m_CameraMoveInfoText; // 0x2c0
};

struct UMM_Popup_BlackIronShop_Move {
	UMirTextBlock* m_pTxtBlackIron; // 0x2f0
	UMirTextBlock* m_pTxtPossessionValue; // 0x2f8
	UMirTextBlock* m_pTxtGuildStorage; // 0x300
	UMirTextBlock* m_pTxtFull; // 0x308
	UHorizontalBox* m_pHorStorageValue; // 0x310
	UMirTextBlock* m_pTxtGuildStorageOutValue; // 0x318
	UMM_Item_Make_Slider_BigInteger* m_pSliderCount; // 0x320
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x328
	UMM_Common_Btn* btn_confirm; // 0x330
	UMM_Common_Btn* Btn_Cancel; // 0x338
	TArray<UMirImage*> m_arrImgIcon; // 0x340
};

struct UTutorialGuidCommentWidget {
	int32_t m_TutorialEffectID; // 0x2e0
	UCanvasPanel* cp_can; // 0x2e8
};

struct UMM_ItemMake_Inventory {
	TArray<UMM_ItemMake_Slot*> InvenSlotList; // 0x2f0
	UMirWrapScrollBox* ScrollBox; // 0x300
	int32_t m_MaxSlotCount; // 0x308
	int32_t m_CurrentSlotCount; // 0x30c
	int32_t m_SelectedMakeTID; // 0x310
	int32_t MIN_SLOT; // 0x314
	int32_t MAX_LINE_SLOT; // 0x318
};

struct UMM_Party_List_Slot {
	UMirTextBlock* m_Txt_Explain; // 0x2e8
	UMirTextBlock* m_Txt_Level; // 0x2f0
	UMirTextBlock* m_Txt_Nickname; // 0x2f8
	UMirTextBlock* m_Txt_MemberNum; // 0x300
	UMirTextBlock* m_Txt_CombatPoint; // 0x308
	UMirImage* m_Img_Joinable_Lock; // 0x310
	UMirImage* m_Img_Joinable_UnLock; // 0x318
	UMirButton* m_Btn_Main; // 0x320
	UMirTextBlock* m_Txt_Stage; // 0x328
	UMirImage* m_Img_Member_6; // 0x330
	UMirImage* m_Img_Member_16; // 0x338
	UMM_Common_Btn_Translation* m_C_Btn_Translation; // 0x340
};

struct UWriteAchievement {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct USoundNodeOscillator {
	char bModulateVolume : 1; // 0x40
	char bModulatePitch : 1; // 0x40
	float AmplitudeMin; // 0x44
	float AmplitudeMax; // 0x48
	float FrequencyMin; // 0x4c
	float FrequencyMax; // 0x50
	float OffsetMin; // 0x54
	float OffsetMax; // 0x58
	float CenterMin; // 0x5c
	float CenterMax; // 0x60
};

struct UGameNetworkManagerSettings {
	int32_t MinDynamicBandwidth; // 0x28
	int32_t MaxDynamicBandwidth; // 0x2c
	int32_t TotalNetBandwidth; // 0x30
	int32_t BadPingThreshold; // 0x34
	char bIsStandbyCheckingEnabled : 1; // 0x38
	float StandbyRxCheatTime; // 0x3c
	float StandbyTxCheatTime; // 0x40
	float PercentMissingForRxStandby; // 0x44
	float PercentMissingForTxStandby; // 0x48
	float PercentForBadPing; // 0x4c
	float JoinInProgressStandbyWaitTime; // 0x50
};

struct UARTextureCameraImage {
	EARTextureType TextureType; // 0xd0
	float Timestamp; // 0xd4
	FGuid ExternalTextureGuid; // 0xd8
	FVector2D Size; // 0xe8
};

struct AMM_GuildWarFlagObject {
	bool m_bPoolingObject; // 0x428
	UObjectNameTagWidget* ObjectNameTagWidget; // 0x458
	UWidgetComponent* WidgetComp; // 0x460
	UWidgetComponent* NameTagWidgetComponent; // 0x468
	UWidgetComponent* InteractionWidgetComponent; // 0x470
	UParticleSystemComponent* LoopEffectComponent; // 0x480
	UParticleSystem* m_LoopParticleSystem; // 0x488
	UOperatingButtonWidget* OperatingBtnWidget; // 0x4c8
};

struct UTextBlockWidgetStyle {
	FTextBlockStyle TextBlockStyle; // 0x30
};

struct AStaticMeshActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x218
	bool bStaticMeshReplicateMovement; // 0x220
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x221
};

struct UMM_ImageText {
	float m_Size; // 0x2e0
	FSlateBrush Number_1; // 0x2e8
	FSlateBrush Number_2; // 0x370
	FSlateBrush Number_3; // 0x3f8
	FSlateBrush Number_4; // 0x480
	FSlateBrush Number_5; // 0x508
	FSlateBrush Number_6; // 0x590
	FSlateBrush Number_7; // 0x618
	FSlateBrush Number_8; // 0x6a0
	FSlateBrush Number_9; // 0x728
	FSlateBrush Number_10; // 0x7b0
};

struct UMovieScene3DTransformSection {
	FMovieSceneTransformMask TransformMask; // 0xe0
	FMovieSceneFloatChannel Translation[0x3]; // 0xe8
	FMovieSceneFloatChannel Rotation[0x3]; // 0x2c8
	FMovieSceneFloatChannel Scale[0x3]; // 0x4a8
	FMovieSceneFloatChannel ManualWeight; // 0x688
	bool bUseQuaternionInterpolation; // 0x72c
};

struct UMM_Occupation_BattleResult {
	UWidgetAnimation* m_AniWin; // 0x2e0
	UWidgetAnimation* m_AniDefeat; // 0x2e8
	UPanelWidget* Panel_Win; // 0x2f0
	UPanelWidget* Panel_Lose; // 0x2f8
	UPanelWidget* Panel_Win_BG; // 0x300
	UPanelWidget* Panel_Lose_BG; // 0x308
	UMirScrollBox* Scroll_GuildReward; // 0x310
	UMirScrollBox* Scroll_PersonalReward; // 0x318
	UMirTextBlock* Txt_Ranking; // 0x320
	UMirImage* Img_Ranking; // 0x328
	UMM_Common_Btn* Btn_Ok; // 0x330
	UMirButton* Btn_Close_BG; // 0x338
};

struct UMaterialExpressionTextureObjectParameter {
	FName ParameterName; // 0xd0
	FGuid ExpressionGUID; // 0xd8
	FName Group; // 0xe8
};

struct UMM_Hud_Chat_SearchWhisper {
	UMM_Common_Btn* Btn_JoinGuild; // 0x300
	UMM_Common_Btn_Symbol* btn_search; // 0x308
	UPanelWidget* Panel_Search; // 0x310
	UPanelWidget* Panel_EmptyGuild; // 0x318
	UMirCheckBox* Toggle_Guild; // 0x320
	UMirCheckBox* Toggle_Party; // 0x328
	UMirCheckBox* Toggle_Search; // 0x330
	UMirTextBlock* Txt_Guild; // 0x338
	UMirTextBlock* Txt_Party; // 0x340
	UMirTextBlock* Txt_Search; // 0x348
	UMirEditableText* EditTxt_SearchNickname; // 0x350
	UMirListView* m_ListView_UserList; // 0x358
	TArray<UHudChatUserSlotObj*> m_arUserSlotObj; // 0x360
	UMM_Common_Board_Notice* empty_notice; // 0x370
};

struct UMM_PoolManager {
	TMap<FString, FResourcePoolData> m_mapMaintainResourcePool; // 0xc8
	TMap<FString, FResourcePoolData> m_mapMaintainInStageResourcePool; // 0x118
	TMap<FString, FResourcePoolData> m_mapInstantResourcePool; // 0x168
};

struct UMM_GuildDevLock {
	UMirImage* mImgDevIcon; // 0x2e0
	UMirTextBlock* mTxtDevName; // 0x2e8
	UMirTextBlock* mTxtDevLockDesc; // 0x2f0
	UMirButton* mBtnDevPage; // 0x2f8
};

struct UMM_ClosedTraining_AbilitySlot {
	UMirImage* m_Img_AbilityIcon; // 0x2e0
	UMirTextBlock* m_Txt_AbilityName; // 0x2e8
	UMirRichTextBlock* m_RTxt_CurrValue; // 0x2f0
	UMirRichTextBlock* m_RTxt_DetailValue; // 0x2f8
};

struct UFoliageType_InstancedStaticMesh {
	UStaticMesh* Mesh; // 0x360
	TArray<UMaterialInterface*> OverrideMaterials; // 0x368
	UFoliageInstancedStaticMeshComponent* ComponentClass; // 0x378
};

struct UInviteFriends {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct UMM_DungeonCommonTitle2 {
	UMirTextBlock* txtTitle; // 0x2e0
	UMirTextBlock* txtExplain; // 0x2e8
	UMM_Common_ToolTipBtn* btnDetailInfo; // 0x2f0
};

struct ANavLinkProxy {
	TArray<FNavigationLink> PointLinks; // 0x228
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x238
	UNavLinkCustomComponent* SmartLinkComp; // 0x248
	bool bSmartLinkIsRelevant; // 0x250
	FScriptMulticastDelegate OnSmartLinkReached; // 0x258
};

struct ALobbyCameraControl {
	UAutoCameraData* m_pAutoCameraData; // 0x940
	AMediaSoundActor* m_pMediaSoundActor; // 0x948
	UParticleSystemComponent* m_pCameraParticleComponent; // 0x950
	UCameraShake* m_pScriptCameraShake; // 0xa48
};

struct UMaterialExpressionTextureBase {
	UTexture* Texture; // 0x40
	EMaterialSamplerType SamplerType; // 0x48
	char IsDefaultMeshpaintTexture : 1; // 0x49
};

struct UMM_CostumeDyeingCheatWidget {
	float m_Body01_R; // 0x240
	float m_Body01_G; // 0x244
	float m_Body01_B; // 0x248
	float m_Body01_V; // 0x24c
	float m_Body02_R; // 0x250
	float m_Body02_G; // 0x254
	float m_Body02_B; // 0x258
	float m_Body02_V; // 0x25c
};

struct UMM_ImmediateBtn {
	UCanvasPanel* m_pCanImmediateMove; // 0x2e8
	UButton* m_pBtnImmediateMove; // 0x2f0
	UTextBlock* m_TxtAutoMoving; // 0x2f8
	UMM_HudBtnAction* m_pBtnFastRun; // 0x300
};

struct USoundWave {
	int32_t CompressionQuality; // 0x160
	int32_t StreamingPriority; // 0x164
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x168
	ESoundGroup SoundGroup; // 0x16a
	char bLooping : 1; // 0x16b
	char bStreaming : 1; // 0x16b
	char bSeekableStreaming : 1; // 0x16b
	ESoundWaveLoadingBehavior LoadingBehavior; // 0x16c
	char bMature : 1; // 0x16d
	char bManualWordWrap : 1; // 0x16d
	char bSingleLine : 1; // 0x16d
	char bIsAmbisonics : 1; // 0x16d
	TArray<float> FrequenciesToAnalyze; // 0x170
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x180
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x190
	int32_t InitialChunkSize; // 0x1a0
	FString SpokenText; // 0x1e8
	float SubtitlePriority; // 0x1f8
	float Volume; // 0x1fc
	float Pitch; // 0x200
	int32_t NumChannels; // 0x204
	int32_t SampleRate; // 0x208
	TArray<FSubtitleCue> Subtitles; // 0x218
	UCurveTable* Curves; // 0x228
	UCurveTable* InternalCurves; // 0x230
};

struct USkeletalMeshSimulationComponent {
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xb8
	AChaosSolverActor* ChaosSolverActor; // 0xc0
	UPhysicsAsset* OverridePhysicsAsset; // 0xc8
	bool bSimulating; // 0xd0
	bool bNotifyCollisions; // 0xd1
	EObjectStateTypeEnum ObjectType; // 0xd2
	float Density; // 0xd4
	float MinMass; // 0xd8
	float MaxMass; // 0xdc
	ECollisionTypeEnum CollisionType; // 0xe0
	float ImplicitShapeParticlesPerUnitArea; // 0xe4
	int32_t ImplicitShapeMinNumParticles; // 0xe8
	int32_t ImplicitShapeMaxNumParticles; // 0xec
	int32_t MinLevelSetResolution; // 0xf0
	int32_t MaxLevelSetResolution; // 0xf4
	int32_t CollisionGroup; // 0xf8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xfc
	FVector InitialLinearVelocity; // 0x100
	FVector InitialAngularVelocity; // 0x10c
	FScriptMulticastDelegate OnChaosPhysicsCollision; // 0x118
};

struct UARTrackedImage {
	UARCandidateImage* DetectedImage; // 0xe8
	FVector2D EstimatedSize; // 0xf0
};

struct UFirebaseValueListener {
	FScriptMulticastDelegate OnEvent; // 0x30
};

struct UPoseAsset {
	FPoseDataContainer PoseContainer; // 0x80
	bool bAdditivePose; // 0x110
	int32_t BasePoseIndex; // 0x114
	FName RetargetSource; // 0x118
};

struct UMM_CrowdControlText {
	UWidgetAnimation* m_pAnimUp; // 0x2e0
	UWidgetAnimation* m_pAnimDown; // 0x2e8
	UWidgetAnimation* WidgetAnim_BuffUp; // 0x2f0
	UWidgetAnimation* WidgetAnim_BuffUp_Pet; // 0x2f8
	UWidgetAnimation* WidgetAnim_BuffDown; // 0x300
	UWidgetAnimation* WidgetAnim_CCState; // 0x308
	FVector2D m_vWidgetSIze; // 0x310
	FVector2D m_vOffset; // 0x318
	int32_t m_iFriendlyGoodTextColorID; // 0x320
	int32_t m_iFriendlyBadTextColorID; // 0x324
	int32_t m_iEnemyBadTextColorID; // 0x328
	FVector2D Offset_CCState; // 0x32c
	FVector2D Offset_My_CCState; // 0x334
	FVector2D Offset_My_Buff; // 0x33c
	FVector2D Offset_My_Debuff; // 0x344
	FVector2D Offset_Other_CCState; // 0x34c
	FVector2D Offset_Other_Buff; // 0x354
	FVector2D Offset_Other_Debuff; // 0x35c
	UMirImage* Img_Icon; // 0x368
	UTextBlock* Txt_CrowdControl; // 0x370
	UMirImage* Img_CrowdControl; // 0x378
};

struct UAndroidGoodiesSettings {
	FDirectoryPath AndroidDrawablesFolder; // 0x38
	bool sendSmsPermission; // 0x48
	bool setAlarmPermission; // 0x49
	bool cameraPermission; // 0x4a
	bool flashlightPermission; // 0x4b
	bool vibratePermission; // 0x4c
	bool callPhonePermission; // 0x4d
	bool readPhoneStatePermission; // 0x4e
	bool readContactsPermission; // 0x4f
	bool writeContactsPermission; // 0x50
	bool installPackagesPermission; // 0x51
};

struct UMM_Goods_Detail {
	TArray<int32_t> m_arMenuIconID; // 0x2e0
	bool m_bUse_InfomationBtn; // 0x2f0
	UMM_Goods_Slot* m_arGoodsDetailSlot[0x9]; // 0x2f8
	UMM_Common_Btn_Symbol* m_CB_HideDetail; // 0x340
	UPanelWidget* m_arCan_MenuBtn[0x8]; // 0x348
	UMirImage* m_arImg_MenuIcon[0x8]; // 0x388
	UMirButton* m_arBtn_Menu[0x8]; // 0x3c8
};

struct UMM_NewInventoryTab {
	TArray<UMM_NewInventoryTab_Slot*> m_arTab; // 0x2e0
};

struct UMM_Popup_ServerRelocation {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f0
	UMirButton* m_Btn_ServerSelect; // 0x2f8
	UMirTextBlock* m_Txt_CurrentServer; // 0x300
	UMirTextBlock* m_Txt_ChangeServer; // 0x308
	UMirRichTextBlock* m_Txt_RemainSlotNum; // 0x310
	UMirTextBlock* m_Txt_ConditionCount; // 0x318
	UMirScrollBox* m_Scroll_ConditionList; // 0x320
	UMM_Common_Btn_Cost* m_Btn_ChangeStart; // 0x328
	UMirRichTextBlock* m_Txt_Notice; // 0x330
	UMirRichTextBlock* m_Txt_Notice2; // 0x338
	UMirRichTextBlock* m_Txt_ConditionNotice; // 0x340
	UMirCanvasPanel* m_canvas_Deco; // 0x348
};

struct UMM_PopupGuildDonationDetailsSlot {
	UMirTextBlock* txt_grade; // 0x2e0
	UMirImage* img_online; // 0x2e8
	UMM_GuildMemberPortrait* Portrait; // 0x2f0
	UMirTextBlock* txt_nickname; // 0x2f8
	UMirTextBlock* txt_custom_title; // 0x300
	UMirImage* img_guild_gold; // 0x308
	UMirTextBlock* txt_guild_gold; // 0x310
	UMirImage* img_guild_coin; // 0x318
	UMirTextBlock* txt_guild_coin; // 0x320
	UMirImage* img_guild_black_iron; // 0x328
	UMirTextBlock* txt_guild_black_iron; // 0x330
	UMirImage* img_guild_spirit; // 0x338
	UMirTextBlock* txt_guild_spirit; // 0x340
	UMirImage* img_selected; // 0x348
};

struct ULightMapTexture2D {
	int32_t LevelIndex; // 0xd0
	int32_t FirstResourceMemMip; // 0xd4
	char bTemporarilyDisableStreaming : 1; // 0xd8
	TextureAddress AddressX; // 0xd9
	TextureAddress AddressY; // 0xda
	FIntPoint ImportedSize; // 0xdc
};

struct AMaterialInstanceActor {
	TArray<AActor*> TargetActors; // 0x218
};

struct USubmixEffectDynamicsProcessorPreset {
	FSubmixEffectDynamicsProcessorSettings Settings; // 0x90
};

struct UMovieSceneNameableTrack {
	FMovieSceneTrackEvalOptions EvalOptions; // 0x50
	bool bIsEvalDisabled; // 0x55
};

struct UInterpTrackInstFloatAnimBPParam {
	UAnimInstance* AnimScriptInstance; // 0x28
	float ResetFloat; // 0x30
};

struct UApplicationLifecycleComponent {
	FScriptMulticastDelegate ApplicationWillDeactivateDelegate; // 0xb0
	FScriptMulticastDelegate ApplicationHasReactivatedDelegate; // 0xc0
	FScriptMulticastDelegate ApplicationWillEnterBackgroundDelegate; // 0xd0
	FScriptMulticastDelegate ApplicationHasEnteredForegroundDelegate; // 0xe0
	FScriptMulticastDelegate ApplicationWillTerminateDelegate; // 0xf0
	FScriptMulticastDelegate ApplicationShouldUnloadResourcesDelegate; // 0x100
	FScriptMulticastDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x110
	FScriptMulticastDelegate OnTemperatureChangeDelegate; // 0x120
	FScriptMulticastDelegate OnLowPowerModeDelegate; // 0x130
};

struct UInputAxisDelegateBinding {
	TArray<FBlueprintInputAxisDelegateBinding> InputAxisDelegateBindings; // 0x28
};

struct ATriggerBase {
	UShapeComponent* CollisionComponent; // 0x218
};

struct UMM_B_Friend {
	UMM_CommonHorizontalTabSet* m_C_Tab; // 0x2f0
	UMM_Friend_Bottom* m_Friend_Bottom; // 0x2f8
	UMM_Friend_List* m_Friend_List; // 0x300
	UMM_Common_Board_Notice* m_C_Empty_Notice; // 0x308
	UCanvasPanel* m_Canvas_Search; // 0x310
	UMM_Common_Btn_Symbol* m_C_Btn_Find; // 0x318
	UMirEditableText* m_EditableText_Find; // 0x320
	UMM_SortListBtn* m_SortListBtn; // 0x328
};

struct UMM_B_Individual_Storage {
	int32_t INVENTORY_ID; // 0x2e0
	UMM_NewInventory_StorageLeft* m_InvenLeft; // 0x2e8
	UMM_NewInventory_StorageRight* m_InvenRight; // 0x2f0
};

struct UMM_HudTargetSubMenu {
	int32_t m_TargetType; // 0x310
	int32_t m_StrID_Info; // 0x314
	int32_t m_StrID_Talk; // 0x318
	int32_t m_StrID_PartyInvite; // 0x31c
	int32_t m_StrID_PartyKickout; // 0x320
	int32_t m_StrID_Duel; // 0x324
	int32_t m_StrID_Attack; // 0x328
	UMirTextBlock* m_pTextInfo; // 0x330
	UMirButton* m_pBtnInfo; // 0x338
	UMirTextBlock* m_pTextTalk; // 0x340
	UMirButton* m_pBtnTalk; // 0x348
	UMirTextBlock* m_pTextParty; // 0x350
	UMirButton* m_pBtnParty; // 0x358
	UMirTextBlock* m_pTextDuel; // 0x360
	UMirButton* m_pBtnDuel; // 0x368
	UMirTextBlock* m_pTextAttack; // 0x370
	UMirButton* m_pBtnAttack; // 0x378
	UCanvasPanel* m_pCanGuildMark; // 0x380
	UMirButton* m_pBtnGuildMark; // 0x388
};

struct UMM_NewInventory {
	UMirScrollBox* m_Scr_Main; // 0x300
	UPanelWidget* m_Wrap_Main; // 0x308
	TArray<UWidgetBase*> m_arSlot; // 0x310
	UMM_Common_Board_Notice* m_BoardNotice; // 0x320
};

struct UMaterialFunctionMaterialLayerBlendInstance {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xb0
};

struct UFootStepParticleNotify {
	EPhysicalSurface PreviewSurfaceType; // 0x38
	FVector LocationOffset; // 0x3c
	FVector Scale; // 0x48
};

struct UMM_Popup_GuildAuthority {
	UMirScrollBox* sb_authority; // 0x2e0
	UMM_Common_Btn_Symbol* btn_close; // 0x2e8
	UMM_Common_Btn* btn_confirm; // 0x2f0
};

struct UWNAndroidDeviceState {
	FScriptMulticastDelegate OnChangedAndroidDeviceState; // 0x30
};

struct UMM_UIAction_MakeItem {
	float Time_NextMessage_MakeItem; // 0x4d0
	int32_t NOTHING_TO_MAKE_ITEM_LIST; // 0x4d4
	int32_t MAX_MATERIAL_NUM; // 0x4d8
	int32_t MAX_MAKE_COUNT; // 0x4dc
	int32_t ButtonMakeMsgID; // 0x4e0
	int32_t NotEnoughCost; // 0x4e4
	int32_t NotEnoughMaterial; // 0x4e8
	int32_t STRING_MSG_NOTENOUGH_LEVEL; // 0x4ec
	int32_t STRING_MSG_NOTMAKE_NOTENOUGH_PREITEM; // 0x4f0
	int32_t STRING_MSG_NOTMAKE_NOTENOUGH_LEVEL; // 0x4f4
	int32_t SLOT_EFFECT_INDEX; // 0x4f8
	int32_t SPECIAL_MAKE_EQUIP_MATERIAL_COUNT; // 0x4fc
	int32_t STRING_MSG_WARRING_MATERIALITEM; // 0x500
	int32_t STRING_MSG_WARRING_EQUIPITEM; // 0x504
	int32_t STRING_MSG_WARRING_LOCK_MATERIALITEM; // 0x508
	int32_t STRING_MSG_INVENTORYFULL; // 0x50c
	int32_t STRING_MSG_WARRING_SUCCESS_WARRNING; // 0x510
	int32_t STRING_MSG_WARRING_SUCCESS_EQUIPITEM; // 0x514
	float DisplayUpdateTime; // 0x518
	float UpdateTimer; // 0x51c
	int32_t ANIEND_TIME_FAIL; // 0x520
	int32_t ANIEND_TIME_SUCCESS; // 0x524
	int32_t ANIEND_TIME_GREATESUCCESS; // 0x528
	TArray<int32_t> m_HistoryStack; // 0x6d0
	int32_t m_MakeTID; // 0x6e0
	int32_t m_MakeCount; // 0x6e4
	int32_t m_MainTabIndex; // 0x6e8
	int32_t m_SubTabIndex; // 0x6ec
	int32_t m_NPCGroupListID; // 0x6f0
	int64_t m_MakeItemUID; // 0x6f8
	int32_t m_SelectedMakeTID; // 0x700
	bool m_IsNPCMake; // 0x704
	int32_t Reserve_RouteItemTID; // 0x708
	bool Reserve_RouteItemParam; // 0x70c
	bool Reserve_History; // 0x70d
	bool m_ItemMake_OpenCheck; // 0x70e
	bool IsMaterialChanging; // 0x70f
	int32_t m_ReserveNpcID; // 0x73c
	int32_t m_ReserveNpcID_Backup; // 0x740
	int32_t m_SelectItemTID_NPC; // 0x744
	int32_t m_TargetItemTID_NPC; // 0x748
};

struct UMM_Dominion_History {
	UMirTextBlock* m_pTxtHistoryTitle; // 0x2f8
	UMirListView* m_pListView_History; // 0x300
	UMM_Common_Board_Notice* m_pNoticeEmpty; // 0x308
};

struct USceneCaptureTool_Slider {
	USlider* Slider_X; // 0x2f0
	USlider* Slider_Y; // 0x2f8
	USlider* Slider_Z; // 0x300
	UMirTextBlock* Txt_X; // 0x308
	UMirTextBlock* Txt_Y; // 0x310
	UMirTextBlock* Txt_Z; // 0x318
};

struct UNavigationPath {
	FScriptMulticastDelegate PathUpdatedNotifier; // 0x28
	TArray<FVector> PathPoints; // 0x38
	ENavigationOptionFlag RecalculateOnInvalidation; // 0x48
};

struct UMM_B_Loading {
	float m_fProgressSpeed; // 0x2e0
	UWidgetAnimation* m_AniHide_ImgLoadingPre; // 0x2e8
	UPanelWidget* m_Can_Main; // 0x320
	UPanelWidget* m_Can_Pre; // 0x328
	UImage* m_Img_Loading_Cur; // 0x330
	UImage* m_Img_Loading_Pre; // 0x338
	UMirRichTextBlock* m_RTxt_ToolTipTitle_Cur; // 0x340
	UMirRichTextBlock* m_RTxt_ToolTipContent_Cur; // 0x348
	UMirRichTextBlock* m_RTxt_ToolTipTitle_Pre; // 0x350
	UMirRichTextBlock* m_RTxt_ToolTipContent_Pre; // 0x358
	UMM_Loading_Inner* m_LoadingInner; // 0x360
	UMM_Common_Btn_Symbol* m_CB_Left; // 0x368
	UMM_Common_Btn_Symbol* m_CB_Right; // 0x370
};

struct UMovieSceneByteTrack {
	UEnum* Enum; // 0x88
};

struct UBTTask_ChangeBehaviorType {
	EBTNodeResult ReturnResult; // 0x70
	EBehaviorType NewBehaviorType; // 0x71
};

struct UMM_Ranking_Reward_List {
	UMirButton* m_pBtnListClick; // 0x2f0
	UCanvasPanel* m_pCanPanelRankValue; // 0x2f8
	UMirImage* m_pImgRankIcon; // 0x300
	UMirTextBlock* m_pTxtRankValue; // 0x308
	UCanvasPanel* m_pCanPanelRewardPanel1; // 0x310
	UCanvasPanel* m_pCanPanelRewardPanel2; // 0x318
	UCanvasPanel* m_pCanPanelRewardPanel3; // 0x320
	UCanvasPanel* m_pCanPanelRewardPanel4; // 0x328
	UMM_Ranking_Reward_Item* m_pRewardItem1; // 0x330
	UMM_Ranking_Reward_Item* m_pRewardItem2; // 0x338
	UMM_Ranking_Reward_Item* m_pRewardItem3; // 0x340
	UMM_Ranking_Reward_Item* m_pRewardItem4; // 0x348
	UMirTextBlock* m_pTxtRewardValue1; // 0x350
	UMirTextBlock* m_pTxtRewardValue2; // 0x358
	UMirTextBlock* m_pTxtRewardValue3; // 0x360
	UMirTextBlock* m_pTxtRewardValue4; // 0x368
};

struct UAIPerceptionStimuliSourceComponent {
	char bAutoRegisterAsSource : 1; // 0xb0
	TArray<UAISense*> RegisterAsSourceForSenses; // 0xb8
};

struct UMM_Popup_DominionBuff {
	UMM_Common_ToolTipBtn* m_pToolTip; // 0x2e0
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x2e8
	UMM_Common_Btn* m_pBtnCancel; // 0x2f0
	UMirScrollBox* m_pScrollBox; // 0x2f8
};

struct UBTTask_RunBehaviorDynamic {
	FGameplayTag InjectionTag; // 0x70
	UBehaviorTree* DefaultBehaviorAsset; // 0x78
	UBehaviorTree* BehaviorAsset; // 0x80
};

struct UMovieSceneCameraShakeTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x58
};

struct UWebBrowser {
	FScriptMulticastDelegate OnUrlChanged; // 0x108
	FScriptMulticastDelegate OnBeforePopup; // 0x118
	FString InitialURL; // 0x128
	bool bSupportsTransparency; // 0x138
};

struct USynthKnob {
	float Value; // 0x108
	float StepSize; // 0x10c
	float MouseSpeed; // 0x110
	float MouseFineTuneSpeed; // 0x114
	char ShowTooltipInfo : 1; // 0x118
	FText ParameterName; // 0x120
	FText ParameterUnits; // 0x138
	DelegateProperty ValueDelegate; // 0x150
	FSynthKnobStyle WidgetStyle; // 0x160
	bool Locked; // 0x398
	bool IsFocusable; // 0x399
	FScriptMulticastDelegate OnMouseCaptureBegin; // 0x3a0
	FScriptMulticastDelegate OnMouseCaptureEnd; // 0x3b0
	FScriptMulticastDelegate OnControllerCaptureBegin; // 0x3c0
	FScriptMulticastDelegate OnControllerCaptureEnd; // 0x3d0
	FScriptMulticastDelegate OnValueChanged; // 0x3e0
};

struct UMM_UIAction_StrongPoint {
	int32_t m_CurSelectStrongPointTID; // 0x2e8
	float m_UpdateTime; // 0x2ec
	bool m_IsContentsOpen; // 0x2f0
};

struct UFieldNodeInt {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct ATriggerBox {
	UShapeComponent* CollisionComponent; // 0x218
};

struct AMM_PetObject {
	USkeletalMeshComponent* m_pSkelMeshComp; // 0x218
	UParticleSystemComponent* LoopEffectComponent; // 0x220
	AActor* m_pOwnerActor; // 0x228
	int32_t HeroEffectID; // 0x230
	int32_t LegendEffectID; // 0x234
	int32_t skillEffectID; // 0x238
	int32_t levelUpEffectID; // 0x23c
	FVector TargetLocation; // 0x240
	FRotator m_LeftBackRot; // 0x24c
	FRotator m_RightBackRot; // 0x258
	float m_TargetDistance; // 0x264
	float m_MovePitch; // 0x268
	float m_OwnerMoveThreshold; // 0x26c
	float m_InterpSpeed; // 0x270
	float m_MoveSpeed; // 0x274
	float m_CloseRange; // 0x278
	float m_FarRange; // 0x27c
	float m_TargetMoveSpeed; // 0x280
	UCurveFloat* m_pSpeedCurve; // 0x288
};

struct UDistributionFloatParticleParameter {
	FName ParameterName; // 0x40
	float MinInput; // 0x48
	float MaxInput; // 0x4c
	float MinOutput; // 0x50
	float MaxOutput; // 0x54
	DistributionParamMode ParamMode; // 0x58
};

struct ASpotLight {
	USpotLightComponent* SpotLightComponent; // 0x228
};

struct UMaterialExpressionComment {
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FString Text; // 0x48
	FLinearColor CommentColor; // 0x58
	int32_t FontSize; // 0x68
};

struct UMaterialExpressionSingleLayerWaterMaterialOutput {
	FExpressionInput ScatteringCoefficients; // 0x40
	FExpressionInput AbsorptionCoefficients; // 0x54
	FExpressionInput PhaseG; // 0x68
};

struct UMM_MysticalPieceSlot {
	UMirImage* m_ImgJewelLock; // 0x408
	UMirImage* m_ImgPlus; // 0x410
	UMirImage* m_Imgindicator; // 0x418
	UMirImage* m_ImgDisabled; // 0x420
	UMirTextBlock* txt_grade; // 0x428
	UMirImage* m_Img_Unlock; // 0x430
	UMirImage* m_Img_Tier; // 0x438
	UMM_Common_Btn_Symbol* m_BtnUnmount; // 0x440
	bool m_ActiveSlot; // 0x448
	int32_t m_JewelSlotIndex; // 0x44c
	UMirImage* img_guide; // 0x450
	UWidgetAnimation* animation_guide; // 0x458
	UMirImage* m_Img_GradeBgEffect; // 0x460
	UMirImage* m_Img_GradeBgEquipEffect; // 0x468
};

struct UMM_Popup_OneStoreIAP {
	UMirWebBrowser* m_WebBrowser; // 0x2e0
	UMirButton* m_Btn_Close; // 0x2e8
	FTimerHandle DelayCloseTimeHandle; // 0x2f0
};

struct UMM_Popup_PKRecord {
	UMirScrollBox* m_ScrollBox; // 0x2f0
	UTextBlock* m_Txt_Title; // 0x2f8
	UTextBlock* m_Txt_AttackerTitle; // 0x300
	UImage* m_Img_AttackerClassMark; // 0x308
	UTextBlock* m_Txt_AttackerName; // 0x310
	UMM_Common_Btn_Symbol* m_Btn_AttackerInfo; // 0x318
	UTextBlock* m_Txt_DeaderTitle; // 0x320
	UImage* m_Img_DeaderClassMark; // 0x328
	UTextBlock* m_Txt_DeaderName; // 0x330
	UMM_Common_Btn_Symbol* m_Btn_DeaderInfo; // 0x338
	UTextBlock* m_Txt_LostCostTitle; // 0x340
	UTextBlock* m_Txt_LostItemTitle; // 0x348
	UMM_Goods_Slot* m_Slot_LostCost; // 0x350
	UPanelWidget* m_Grid_AttackerAction; // 0x358
	UMM_Common_Btn* m_Btn_Confirm; // 0x360
	UPanelWidget* m_Grid_DeaderAction; // 0x368
	UMM_Common_Btn* m_Btn_Track; // 0x370
	UMM_Common_Btn* m_Btn_Wanted; // 0x378
	UMirButton* Btn_Background; // 0x380
	UMM_Common_Btn_Symbol* btn_close; // 0x388
};

struct UMM_UIAction_Customizing {
	APlayerModelingActor* DisplayActor; // 0x68
	UDataTable* m_pCategoryTable; // 0x4f0
	UDataTable* m_pComponentTable; // 0x4f8
	AMM_CharacterCustomizingActor* m_pCustomizingActor; // 0x500
};

struct UBTDecorator {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct UAsyncActionLoadPrimaryAsset {
	FScriptMulticastDelegate Completed; // 0x78
};

struct UMM_Guild_Dev_BenefitSlot {
	UMirTextBlock* mTxtLevel; // 0x2e0
	UMirTextBlock* mTxtFirstAttributeValue; // 0x2e8
	UMirTextBlock* mTxtSecondAttributeValue; // 0x2f0
	UMirImage* mImgSelected; // 0x2f8
};

struct UMM_Popup_ExchangeItem {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x2f8
	UMM_ExchangeItemInfo* m_ExchangeItemInfo; // 0x300
	UMM_Item_Make_Slider* m_NumInput; // 0x308
	UMirTextBlock* m_Txt_Notice; // 0x310
	UMM_Common_Btn* m_CB_Cancel; // 0x318
	UMM_Common_Btn* m_CB_Confirm; // 0x320
};

struct UPlaySoundNotify {
	USoundBase* sound; // 0x38
	float VolumeMultiplier; // 0x40
	float PitchMultiplier; // 0x44
	char bFollow : 1; // 0x48
	FName AttachName; // 0x4c
	USoundConcurrency* SkillSoundConcurrency; // 0x58
};

struct USoundNodeEnveloper {
	float LoopStart; // 0x40
	float LoopEnd; // 0x44
	float DurationAfterLoop; // 0x48
	int32_t LoopCount; // 0x4c
	char bLoopIndefinitely : 1; // 0x50
	char bLoop : 1; // 0x50
	UDistributionFloatConstantCurve* VolumeInterpCurve; // 0x58
	UDistributionFloatConstantCurve* PitchInterpCurve; // 0x60
	FRuntimeFloatCurve VolumeCurve; // 0x68
	FRuntimeFloatCurve PitchCurve; // 0xf0
	float PitchMin; // 0x178
	float PitchMax; // 0x17c
	float VolumeMin; // 0x180
	float VolumeMax; // 0x184
};

struct UComboBox {
	TArray<UObject*> Items; // 0x108
	DelegateProperty OnGenerateWidgetEvent; // 0x118
	bool bIsFocusable; // 0x128
};

struct UBTComposite_SimpleParallel {
	EBTParallelMode FinishMode; // 0x90
};

struct UMovementComponent {
	USceneComponent* UpdatedComponent; // 0xb0
	UPrimitiveComponent* UpdatedPrimitive; // 0xb8
	FVector Velocity; // 0xc4
	FVector PlaneConstraintNormal; // 0xd0
	FVector PlaneConstraintOrigin; // 0xdc
	char bUpdateOnlyIfRendered : 1; // 0xe8
	char bAutoUpdateTickRegistration : 1; // 0xe8
	char bTickBeforeOwner : 1; // 0xe8
	char bAutoRegisterUpdatedComponent : 1; // 0xe8
	char bConstrainToPlane : 1; // 0xe8
	char bSnapToPlaneAtStart : 1; // 0xe8
	char bAutoRegisterPhysicsVolumeUpdates : 1; // 0xe8
	char bComponentShouldUpdatePhysicsVolume : 1; // 0xe8
	EPlaneConstraintAxisSetting PlaneConstraintAxisSetting; // 0xeb
};

struct UParticleModuleRotationRate_Seeded {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UParticleModuleSubUV {
	USubUVAnimation* Animation; // 0x30
	FRawDistributionFloat SubImageIndex; // 0x38
	char bUseRealTime : 1; // 0x68
};

struct UMM_Fame_List_MainSlot {
	UMirTextBlock* Txt_Title; // 0x2f0
	UMirTextBlock* Txt_Value; // 0x2f8
	UMirImage* Img_Icon; // 0x300
	UMirImage* img_selected; // 0x308
	UMirButton* Btn_Main; // 0x310
	int32_t m_CategoryID; // 0x318
	int32_t STRID_POINT; // 0x31c
};

struct UMaterialExpressionLightmapUVs {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_Popup_SelectRegion {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct AWaypointAreaExporter {
	int32_t m_StageID; // 0x218
	FString m_strStageIDList; // 0x220
};

struct UACLStatsDumpCommandlet {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UMM_New_B_Force {
	UMirScrollBox* m_C_Scr_Tab; // 0x2f0
	TArray<UMM_New_Force_Tab*> m_arTab; // 0x2f8
	UMM_New_Force_Skill_Info* m_C_Skill_Info; // 0x308
	UMM_New_Force_Info* m_C_Info; // 0x310
	UMM_New_Force_Page* m_C_Page; // 0x318
	UMM_New_Force_Ability_List* m_C_AbilityList; // 0x320
	UMM_New_Force_Upgrade* m_C_Upgrade; // 0x328
	UImage* m_Img_RenderTarget; // 0x330
	UImage* m_TargetPos; // 0x338
};

struct UGeometryCollectionDebugDrawComponent {
	AGeometryCollectionDebugDrawActor* GeometryCollectionDebugDrawActor; // 0xb0
	AGeometryCollectionRenderLevelSetActor* GeometryCollectionRenderLevelSetActor; // 0xb8
};

struct UMM_GameOption_InGame_Alarm {
	UMM_GameOption_Switch* Option_CharacterAlarm; // 0x2e0
	UMM_GameOption_Switch* Option_QuestAlarm; // 0x2e8
	UMM_GameOption_Switch* Option_GreatBuildingAlarm; // 0x2f0
	UMM_GameOption_Switch* Option_ContentsOpenAlarm; // 0x2f8
	UMM_GameOption_Switch* Option_PushAgree; // 0x300
	UMM_GameOption_Switch* Option_NightPushAgree; // 0x308
	UPanelWidget* m_Grid_PushAgree; // 0x310
	UPanelWidget* m_Grid_NightPushAgree; // 0x318
};

struct UARTrackedObject {
	UARCandidateObject* DetectedObject; // 0xe8
};

struct AMM_MapPreviewMode {
	UMaterialParameterCollection* m_pBackgroundParamCollection; // 0x330
	AMM_Monster* m_pFriendMonster; // 0x338
	AMM_CharacterPawnBase* m_pSelectTarget; // 0x340
	AMM_CharacterPawnBase* m_pLockOnTarget; // 0x348
	bool EndLevelTravel; // 0x350
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x400
	AMM_SituationDirectiveEffect* SituationDirectiveActor; // 0x408
	TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>> MapQuestArrivalDisplayActor; // 0x410
	AMM_HQPlayerReferenceActor* m_pHQPlayer; // 0x460
	AMM_PortraitCaptureActor* m_pPortraitCaptureActor; // 0x468
	UCanvasRenderTarget2D* m_pPlayerPortraitRenderTarget; // 0x470
	AContentsLightManager* m_pContentsLightManager; // 0x478
	FString MyEditorCulture; // 0x490
};

struct UMM_Occupation_CommandSlot {
	EOccupationCommandSlotType CommandSlotType; // 0x2f0
	UMM_UI_Drag* m_UIDrag; // 0x2f8
	UMirImage* m_Img_Mark; // 0x300
	UMirTextBlock* m_Txt_Command; // 0x308
	UMirImage* m_Img_Disabled; // 0x310
	USpacer* m_DisableSpacer; // 0x318
	UMM_Common_Btn* m_Btn_Edit; // 0x320
	UMM_Common_Btn* m_Btn_Apply; // 0x328
	UMM_Common_Btn* m_Btn_Cancel; // 0x330
};

struct ALight {
	ULightComponent* LightComponent; // 0x218
	char bEnabled : 1; // 0x220
};

struct UMM_Loading_Inner {
	UTextBlock* m_Txt_Percent; // 0x2e0
	UProgressBar* m_Pgr_Loading; // 0x2e8
	UPanelWidget* m_Can_Effect; // 0x2f0
};

struct UMM_Mastery_Ability_Slot {
	UMirImage* mImgAbilityIcon; // 0x300
	UMirTextBlock* mTxtAbilityName; // 0x308
	UMirTextBlock* mTxtAbilityValue; // 0x310
	UMirImage* mImgArrow; // 0x318
	UMirTextBlock* mTxtUpgradeAbilityValue; // 0x320
	UMirImage* mImgSelected; // 0x328
	UMirImage* mImgIndicator; // 0x330
	UMirButton* m_BtnMain; // 0x338
};

struct UUniformVector {
	float Magnitude; // 0xb0
	FVector Direction; // 0xb4
};

struct UMM_HudSlotTargetList {
	UMirImage* imgLine; // 0x2e0
	UMirImage* imgSelect; // 0x2e8
	UMirImage* imgSelect2; // 0x2f0
	UMirImage* imgIcon; // 0x2f8
	UMirTextBlock* txtName; // 0x300
	UMirButton* btnMain; // 0x308
	UMirProgressBar* prgHp; // 0x310
};

struct UInputActionDelegateBinding {
	TArray<FBlueprintInputActionDelegateBinding> InputActionDelegateBindings; // 0x28
};

struct UMM_Popup_Map_GradeInfo {
	int32_t STRING_NOTICE_ID; // 0x2e0
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x2e8
	UMirRichTextBlock* m_RTxt_Notice; // 0x2f0
	UMirButton* m_Btn_Background; // 0x2f8
};

struct UVoiceChannel {
	UNetConnection* Connection; // 0x28
};

struct AProjectileBase {
	USphereComponent* m_pCollSphereComp; // 0x218
	UParticleSystemComponent* m_pShotParticleComp; // 0x220
	UParticleSystemComponent* m_pImpactParticleComp; // 0x228
};

struct UChildConnection {
	UNetConnection* Parent; // 0x19c0
};

struct UMM_HudQuickSlot {
	UMM_HudPotionSlot* m_Btn_QuickSlot[0x9]; // 0x2f0
	UMirImage* m_Img_Arrow[0x9]; // 0x338
	UWidgetAnimation* m_Ani_Arrow; // 0x380
	UCanvasPanel* m_pCanQuickSlotArea; // 0x388
	UMirImage* m_pImgDeck01; // 0x390
	UMirImage* m_pImgDeck02; // 0x398
	UMirImage* m_pImgDeck03; // 0x3a0
	UWidgetAnimation* m_MoveToRight; // 0x3a8
	UWidgetAnimation* m_MoveToLeft; // 0x3b0
};

struct UParticleModuleTypeDataMesh {
	UStaticMesh* Mesh; // 0x30
	float LODSizeScale; // 0x40
	char bUseStaticMeshLODs : 1; // 0x44
	char CastShadows : 1; // 0x44
	char DoCollisions : 1; // 0x44
	EMeshScreenAlignment MeshAlignment; // 0x45
	char bOverrideMaterial : 1; // 0x46
	char bOverrideDefaultMotionBlurSettings : 1; // 0x46
	char bEnableMotionBlur : 1; // 0x46
	FRawDistributionVector RollPitchYawRange; // 0x48
	EParticleAxisLock AxisLockOption; // 0x90
	char bCameraFacing : 1; // 0x91
	EMeshCameraFacingUpAxis CameraFacingUpAxisOption; // 0x92
	EMeshCameraFacingOptions CameraFacingOption; // 0x93
	char bApplyParticleRotationAsSpin : 1; // 0x94
	char bFaceCameraDirectionRatherThanPosition : 1; // 0x94
	char bCollisionsConsiderPartilceSize : 1; // 0x94
};

struct UEditableTextWidgetStyle {
	FEditableTextStyle EditableTextStyle; // 0x30
};

struct UAnimNotify_PlayMontageNotifyWindow {
	FName NotifyName; // 0x30
};

struct UMaterialExpressionAtmosphericLightColor {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UChaosEventListenerComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UMM_GameOptionKeySettingSlot {
	UMirTextBlock* Txt_Name; // 0x2e0
	UMirTextBlock* txt_key; // 0x2e8
	UMirImage* img_selected; // 0x2f0
	UMirButton* Btn_Main; // 0x2f8
};

struct UBlackboardKeyType_Object {
	UObject* BaseClass; // 0x30
};

struct UMM_Inventory_Tab {
	int32_t DefaultIconId; // 0x300
	int32_t SelectIconId; // 0x304
	UMirImage* m_ImgSymbolIcon; // 0x308
	UMirImage* m_ImgSymbolIcon_Select; // 0x310
	UPanelWidget* Grid_Inven; // 0x320
	UPanelWidget* Grid_Info; // 0x328
	UMirImage* Img_SelectBG; // 0x330
	UTextBlock* Txt_TabNum; // 0x338
	UImage* Img_Indicator; // 0x340
	UImage* Img_BtnIndicator; // 0x348
	UButton* Btn_Tab; // 0x350
	UTextBlock* Txt_TabName_2; // 0x358
	UButton* Btn_Tab_2; // 0x360
	UImage* m_Img_TabSelect; // 0x368
	UImage* m_Img_TabDeSelect; // 0x370
	UPanelWidget* m_PanEffect; // 0x378
};

struct UMaterialExpressionLogarithm10 {
	FExpressionInput X; // 0x40
};

struct AMM_FixedNPC {
	UCutsceneDialogueWidget* m_pDialogueWidget; // 0xae8
};

struct UScrollBox {
	FScrollBoxStyle WidgetStyle; // 0x120
	FScrollBarStyle WidgetBarStyle; // 0x348
	USlateWidgetStyleAsset* Style; // 0x818
	USlateWidgetStyleAsset* BarStyle; // 0x820
	EOrientation Orientation; // 0x828
	ESlateVisibility ScrollBarVisibility; // 0x829
	EConsumeMouseWheel ConsumeMouseWheel; // 0x82a
	FVector2D ScrollbarThickness; // 0x82c
	FMargin ScrollbarPadding; // 0x834
	bool AlwaysShowScrollbar; // 0x844
	bool AlwaysShowScrollbarTrack; // 0x845
	bool AllowOverscroll; // 0x846
	bool bAnimateWheelScrolling; // 0x847
	EDescendantScrollDestination NavigationDestination; // 0x848
	float NavigationScrollPadding; // 0x84c
	bool bAllowRightClickDragScrolling; // 0x850
	bool bAllowXScrollOverScroll; // 0x851
	float WheelScrollMultiplier; // 0x854
	FScriptMulticastDelegate OnUserScrolled; // 0x858
};

struct UMM_NewInventoryTab_Slot {
	UMirImage* m_Img_SelectedBG; // 0x300
	UMirImage* m_Img_Icon; // 0x308
	UMirImage* m_Img_SelectedIcon; // 0x310
	UMirTextBlock* m_Txt_Name; // 0x318
	UMirTextBlock* m_Txt_Count; // 0x320
	UMirImage* m_Img_Indicator; // 0x328
	UMirButton* m_Btn_Main; // 0x330
	UPanelWidget* m_Grid_Effect; // 0x338
};

struct AGameNetworkManager {
	float BadPacketLossThreshold; // 0x218
	float SeverePacketLossThreshold; // 0x21c
	int32_t BadPingThreshold; // 0x220
	int32_t SeverePingThreshold; // 0x224
	int32_t AdjustedNetSpeed; // 0x228
	float LastNetSpeedUpdateTime; // 0x22c
	int32_t TotalNetBandwidth; // 0x230
	int32_t MinDynamicBandwidth; // 0x234
	int32_t MaxDynamicBandwidth; // 0x238
	char bIsStandbyCheckingEnabled : 1; // 0x23c
	char bHasStandbyCheatTriggered : 1; // 0x23c
	float StandbyRxCheatTime; // 0x240
	float StandbyTxCheatTime; // 0x244
	float PercentMissingForRxStandby; // 0x248
	float PercentMissingForTxStandby; // 0x24c
	float PercentForBadPing; // 0x250
	float JoinInProgressStandbyWaitTime; // 0x254
	float MoveRepSize; // 0x258
	float MAXPOSITIONERRORSQUARED; // 0x25c
	float MAXNEARZEROVELOCITYSQUARED; // 0x260
	float CLIENTADJUSTUPDATECOST; // 0x264
	float MAXCLIENTUPDATEINTERVAL; // 0x268
	float MaxClientForcedUpdateDuration; // 0x26c
	float ServerForcedUpdateHitchThreshold; // 0x270
	float ServerForcedUpdateHitchCooldown; // 0x274
	float MaxMoveDeltaTime; // 0x278
	float MaxClientSmoothingDeltaTime; // 0x27c
	float ClientNetSendMoveDeltaTime; // 0x280
	float ClientNetSendMoveDeltaTimeThrottled; // 0x284
	float ClientNetSendMoveDeltaTimeStationary; // 0x288
	int32_t ClientNetSendMoveThrottleAtNetSpeed; // 0x28c
	int32_t ClientNetSendMoveThrottleOverPlayerCount; // 0x290
	bool ClientAuthorativePosition; // 0x294
	float ClientErrorUpdateRateLimit; // 0x298
	float ClientNetCamUpdateDeltaTime; // 0x29c
	float ClientNetCamUpdatePositionLimit; // 0x2a0
	bool bMovementTimeDiscrepancyDetection; // 0x2a4
	bool bMovementTimeDiscrepancyResolution; // 0x2a5
	float MovementTimeDiscrepancyMaxTimeMargin; // 0x2a8
	float MovementTimeDiscrepancyMinTimeMargin; // 0x2ac
	float MovementTimeDiscrepancyResolutionRate; // 0x2b0
	float MovementTimeDiscrepancyDriftAllowance; // 0x2b4
	bool bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x2b8
	bool bUseDistanceBasedRelevancy; // 0x2b9
};

struct APhysicsVolume {
	float TerminalVelocity; // 0x250
	int32_t Priority; // 0x254
	float FluidFriction; // 0x258
	char bWaterVolume : 1; // 0x25c
	char bPhysicsOnContact : 1; // 0x25c
};

struct UParticleModuleRequired {
	UMaterialInterface* Material; // 0x30
	float MinFacingCameraBlendDistance; // 0x38
	float MaxFacingCameraBlendDistance; // 0x3c
	FVector EmitterOrigin; // 0x40
	FRotator EmitterRotation; // 0x4c
	EParticleScreenAlignment ScreenAlignment; // 0x58
	char bUseLocalSpace : 1; // 0x59
	char bKillOnDeactivate : 1; // 0x59
	char bKillOnCompleted : 1; // 0x59
	EParticleSortMode SortMode; // 0x5a
	char bUseLegacyEmitterTime : 1; // 0x5b
	char bRemoveHMDRoll : 1; // 0x5b
	char bEmitterDurationUseRange : 1; // 0x5b
	float EmitterDuration; // 0x5c
	FRawDistributionFloat SpawnRate; // 0x60
	TArray<FParticleBurst> BurstList; // 0x90
	float EmitterDelay; // 0xa0
	float EmitterDelayLow; // 0xa4
	char bDelayFirstLoopOnly : 1; // 0xa8
	EParticleSubUVInterpMethod InterpolationMethod; // 0xa9
	char bScaleUV : 1; // 0xaa
	char bEmitterDelayUseRange : 1; // 0xaa
	EParticleBurstMethod ParticleBurstMethod; // 0xab
	char bOverrideSystemMacroUV : 1; // 0xac
	char bUseMaxDrawCount : 1; // 0xac
	EOpacitySourceMode OpacitySourceMode; // 0xad
	EEmitterNormalsMode EmitterNormalsMode; // 0xae
	char bOrbitModuleAffectsVelocityAlignment : 1; // 0xaf
	int32_t SubImages_Horizontal; // 0xb0
	int32_t SubImages_Vertical; // 0xb4
	float RandomImageTime; // 0xb8
	int32_t RandomImageChanges; // 0xbc
	FVector MacroUVPosition; // 0xc0
	float MacroUVRadius; // 0xcc
	EParticleUVFlipMode UVFlippingMode; // 0xd0
	ESubUVBoundingVertexCount BoundingMode; // 0xd1
	char bDurationRecalcEachLoop : 1; // 0xd2
	FVector NormalsSphereCenter; // 0xd4
	float AlphaThreshold; // 0xe0
	int32_t EmitterLoops; // 0xe4
	UTexture2D* CutoutTexture; // 0xe8
	int32_t MaxDrawCount; // 0xf0
	float EmitterDurationLow; // 0xf4
	FVector NormalsCylinderDirection; // 0xf8
	TArray<FName> NamedMaterialOverrides; // 0x108
};

struct UMM_Connecting_Ingame {
	UMirImage* m_Img_Bg; // 0x2e8
	UPanelWidget* m_Vrt_Throbber; // 0x2f0
	UMirTextBlock* m_Txt_ThrobberMsg; // 0x2f8
	UPanelWidget* m_Grid_Popup; // 0x300
	UMirTextBlock* m_Txt_PopupTitle; // 0x308
	UMirRichTextBlock* m_RTxt_PopupMsg; // 0x310
	UMM_Common_Btn* m_CB_PopupAction; // 0x318
	UWidgetAnimation* m_Ani_LoadingThrobber; // 0x320
};

struct UMM_Guild_InventoryListSlot {
	UMirImage* img_portrait; // 0x2e0
	UMirTextBlock* txt_time; // 0x2e8
	UMirTextBlock* txt_history; // 0x2f0
	TMap<int32_t, UMirImage*> img_cost; // 0x2f8
	TMap<int32_t, UMirTextBlock*> txt_cost; // 0x348
};

struct AOnlineBeaconHost {
	int32_t ListenPort; // 0x248
	TArray<AOnlineBeaconClient*> ClientActors; // 0x250
};

struct AActivateTrigger {
	FString m_EditorTriggerName; // 0x220
	TArray<AActivateTrigger*> m_pActiveTriggerArray; // 0x230
	int32_t m_TriggerIndex; // 0x240
	ETriggerType m_TriggerType; // 0x244
	bool m_bActiveTriggerCondition; // 0x268
	bool m_bActivated; // 0x269
	AMM_TriggerManager* m_pTriggerManager; // 0x270
};

struct UMM_B_DailyWork {
	UMM_DailyWork_List* DailyWorkList; // 0x2f0
	UMM_DailyWork_Progress* DailyWorkProgress; // 0x2f8
};

struct UMM_CharInfoDetail {
	int32_t ScrollBox_Offset; // 0x2f0
	float SkipTimer_ScrollBox; // 0x2f4
	UMM_Common_Btn_Symbol* m_CloseBtn; // 0x2f8
	UMirWrapScrollBox* m_ScrollBox; // 0x300
	UMirCanvasPanel* m_ScrollPanel_1; // 0x308
	UMirCanvasPanel* m_ScrollPanel_2; // 0x310
	TArray<UVerticalBox*> m_VBox_Panel; // 0x318
	UWidgetAnimation* m_AniStart; // 0x328
	UWidgetAnimation* m_AniEnd; // 0x330
	TArray<UMM_Option_Ability*> m_SlotList_1; // 0x338
	TArray<UMM_Option_Ability*> m_SlotList_2; // 0x348
	TArray<UMM_Option_Ability*> m_SlotList_3; // 0x358
	TArray<UMM_Option_Ability*> m_SlotList_4; // 0x368
	UMM_Option_Ability* m_pRefWidget; // 0x398
	UMM_Scroll_Dots* m_ScrollDots; // 0x3a0
	int32_t ScrollBox_Offset_Old; // 0x3a8
	bool EventSkip; // 0x3ac
};

struct UParticleModuleAttractorPoint {
	FRawDistributionVector Position; // 0x30
	FRawDistributionFloat Range; // 0x78
	FRawDistributionFloat Strength; // 0xa8
	char StrengthByDistance : 1; // 0xd8
	char bAffectBaseVelocity : 1; // 0xd8
	char bOverrideVelocity : 1; // 0xd8
	char bUseWorldSpacePosition : 1; // 0xd8
	char Positive_X : 1; // 0xd8
	char Positive_Y : 1; // 0xd8
	char Positive_Z : 1; // 0xd8
	char Negative_X : 1; // 0xd8
	char Negative_Y : 1; // 0xd9
	char Negative_Z : 1; // 0xd9
};

struct UMM_PopUp_Quest_Obtain {
	int32_t m_ObtainMissionToStr; // 0x2e0
	int32_t m_ObtainRequestToStr; // 0x2e4
	int32_t m_MissionRewardToStr; // 0x2e8
	int32_t m_RequestRewardToStr; // 0x2ec
	int32_t m_MissionCompleteToStr; // 0x2f0
	int32_t m_CloseToStr; // 0x2f4
	int32_t m_CancleMissionToStr; // 0x2f8
	int32_t m_CancleRequestToStr; // 0x2fc
	UMirTextBlock* m_Title; // 0x300
	UMirTextBlock* m_Mission; // 0x308
	TArray<UMM_Slot_Material*> m_RewardSlots; // 0x310
	UMirButton* m_CancleBtn; // 0x320
	UMM_Common_Btn_Symbol* m_CloseBtn; // 0x328
	UMM_Common_Btn* m_ObtainBtn; // 0x330
	UMirTextBlock* m_PopupTitle; // 0x338
	UMirTextBlock* m_PopupReward; // 0x340
	UWidgetAnimation* m_OpenAni; // 0x348
	UWidgetAnimation* m_CloseAni; // 0x350
	UMM_Slot_Quest_Info* m_Info; // 0x358
};

struct UMM_Popup_QuickSlot_Option {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2e0
	UMM_GameOption_Slider* m_HP_AutoPercent; // 0x2e8
	UMM_GameOption_Slider* m_MP_AutoPercent; // 0x2f0
	UMM_GameOption_Select* m_Option_AutoEquip; // 0x2f8
	UMM_GameOption_Switch* m_Option_QuickSlotAuto[0x3]; // 0x300
	UMM_GameOption_Select* m_Option_InvenSort; // 0x318
	UMM_GameOption_Select* m_Option_InvenOrder; // 0x320
};

struct UMyLogWidget {
	FSlateFontInfo m_LogFont; // 0x2e0
	UTextBlock* m_TxtToggle; // 0x338
	UScrollBox* m_SBoxLog; // 0x340
};

struct UARPin {
	UARTrackedGeometry* TrackedGeometry; // 0x28
	USceneComponent* PinnedComponent; // 0x30
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	FScriptMulticastDelegate OnARTrackingStateChanged; // 0xc0
	FScriptMulticastDelegate OnARTransformUpdated; // 0xd0
};

struct UARPlaneGeometry {
	EARPlaneOrientation Orientation; // 0xe8
	FVector Center; // 0xec
	FVector Extent; // 0xf8
	UARPlaneGeometry* SubsumedBy; // 0x118
};

struct APartyBeaconClient {
	FString DestSessionId; // 0x2d8
	FPartyReservation PendingReservation; // 0x2e8
	EClientRequestType RequestType; // 0x338
	bool bPendingReservationSent; // 0x339
	bool bCancelReservation; // 0x33a
};

struct UMaterialExpressionRound {
	FExpressionInput Input; // 0x40
};

struct UMM_MonsterAnimInstance {
	float MoveRate; // 0x270
	float IdleStartPosition; // 0x274
	bool BattleState; // 0x278
	float RotDegree; // 0x27c
	bool IsTrace; // 0x280
	bool UseMoveAnimation; // 0x281
	int32_t CCSTANCE; // 0x284
	int32_t AniIndex; // 0x288
	int32_t IdleIndex; // 0x28c
	int32_t StateEelapsedTime; // 0x290
	bool PlayCustomAnim; // 0x294
	int32_t CustomAnimIndex; // 0x298
	AMM_Monster* Monster; // 0x2a0
};

struct AAutoBattleMoveTrigger {
	AAutoBattleMoveTrigger* Next; // 0x238
	AAutoBattleMoveTrigger* prev; // 0x240
	int32_t m_TriggerIndex; // 0x248
	bool m_bManualMove; // 0x24c
	UBoxComponent* m_pBoxCollision; // 0x250
	ECollisionEnabled m_CurrentCollisionState; // 0x258
};

struct UMM_Popup_FrontBanner {
	UMirTextBlock* mTxtStopToday; // 0x2e0
	UMirCheckBox* mCheckBox; // 0x2e8
	UImage* mImgDownLoad; // 0x2f0
	UMM_Common_Btn_Symbol* mBtnClose; // 0x2f8
	UAsyncTaskDownloadImage* mDownloadImage; // 0x300
};

struct UMaterialExpressionCameraVectorWS {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMM_Popup_Guild_Wanted {
	UMirTextBlock* Txt_Title; // 0x2f0
	UMirTextBlock* Txt_Desc; // 0x2f8
	UMM_Common_Btn_Symbol* btn_close; // 0x300
	TArray<UMM_Popup_Guild_WantedSlot*> lst_slot; // 0x308
	UWidgetAnimation* Ani_Open; // 0x318
	UWidgetAnimation* Ani_Close; // 0x320
	UMM_Common_ToolTipBtn* m_pToolTip; // 0x328
};

struct UParticleModuleAttractorBase {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UCutsceneActorAnimInstance {
	float m_RotationAlpha; // 0x270
	FRotator m_HeadRotation; // 0x274
};

struct UMM_Dominion_Title_UniqueSlot {
	UMirTextBlock* m_pTxtClass; // 0x2e0
	UMirTextBlock* m_pTxtName; // 0x2e8
	UMM_Common_Btn_Symbol* m_pBtnInfo; // 0x2f0
	UMM_GuildMemberPortrait* m_pPortrait; // 0x2f8
	UMirButton* m_pBtnClick; // 0x300
};

struct UMM_PopUp_StatusContents {
	int32_t Exception_Visible; // 0x2e0
	UMM_Common_Btn_Symbol* btn_close; // 0x2e8
	UMirTextBlock* Txt_Stat; // 0x2f0
	UMirTextBlock* Txt_Value; // 0x2f8
	TArray<UMM_Slot_StatusContents*> SlotContentsList; // 0x300
	int32_t m_StatID; // 0x310
	TMap<int32_t, int32_t> m_StatusList; // 0x318
	int32_t STRID_COMBINE_NAME; // 0x368
	int32_t STRID_GO_FAIL; // 0x36c
	int32_t STRING_PERCENT; // 0x370
	int32_t STRING_PhaseCantUseMenu; // 0x374
};

struct APlayerModelingActor {
	UCapsuleComponent* CapsuleComponent; // 0x218
	UMM_CharacterPartsComponent* m_pPartsComponent; // 0x220
	UMM_CharacterCustomizingModule* m_CustomizingModule; // 0x268
	int32_t m_ClassID; // 0x270
	int32_t MainState; // 0x274
	int32_t SubState; // 0x278
	USkeletalMeshComponent* Mesh; // 0x280
};

struct UBTDecorator_BlueprintBase {
	AAIController* AIOwner; // 0x68
	AActor* ActorOwner; // 0x70
	TArray<FName> ObservedKeyNames; // 0x78
	char bShowPropertyDetails : 1; // 0x98
	char bCheckConditionOnlyBlackBoardChanges : 1; // 0x98
	char bIsObservingBB : 1; // 0x98
};

struct ULandscapeMeshProxyComponent {
	FGuid LandscapeGuid; // 0x4a8
	TArray<FIntPoint> ProxyComponentBases; // 0x4b8
	uint8_t ProxyLOD; // 0x4c8
};

struct UARTrackedGeometry {
	FGuid UniqueId; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int32_t LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct USoundNodeDistanceCrossFade {
	TArray<FDistanceDatum> CrossFadeInput; // 0x40
};

struct UGeometryCacheCodecV1 {
	TArray<int32_t> TopologyRanges; // 0x28
};

struct UMM_MysticalPieceQuickSlotBtn {
	UMirImage* m_Img_On; // 0x2e8
	UMirTextBlock* m_Txt_Index; // 0x2f0
	UMirButton* m_Btn_Main; // 0x2f8
};

struct UParticleModuleAccelerationBase {
	char bAlwaysInWorldSpace : 1; // 0x30
};

struct UMM_UIAction_GreatBuilding {
	int32_t m_OpenStrID; // 0x68
	int32_t m_TaxStrID; // 0x6c
	int32_t m_InfoStrID; // 0x70
	int32_t m_StepUpStrID; // 0x74
	int32_t m_TimeWithDayStr; // 0x78
	int32_t m_TimeStr; // 0x7c
	int32_t m_OverLevelStr; // 0x80
	int32_t m_OverExpStr; // 0x84
	int32_t m_PlustStr; // 0x88
	int32_t m_PercentFormatStrID; // 0x8c
	int32_t m_DashStrID; // 0x90
	int32_t m_SecondPerPoint; // 0x9c
};

struct UMM_ClosedTraining_DetailStatSlot {
	UMirTextBlock* m_Txt_Level; // 0x2e0
	UMirTextBlock* m_Txt_StatValue; // 0x2e8
	UMirImage* m_Img_Selected; // 0x2f0
};

struct AMM_GachaObjectActor {
	USkeletalMeshComponent* GachaMeshComponent; // 0x218
	UPaperSpriteComponent* RewardSpriteComponent; // 0x220
	UWidgetComponent* TouchWidgetComponent; // 0x228
	UWidgetComponent* NameTagWidgetComponent; // 0x230
	UParticleSystemComponent* DefaultParticleComponent; // 0x238
	UGachaDirectingData* GachaDirectingData; // 0x240
	TMap<EGachaType, USkeletalMesh*> m_mapGachaMeshObjectPtr; // 0x248
	UGachaObjectAnimInstance* GachaAnimInstance; // 0x298
	AMM_GachaManagerActor* GachaManagerActor; // 0x2a0
	bool m_bSettingComplete; // 0x2b0
	FString m_GachaRewardName; // 0x2b8
	USkeletalMesh* m_CachedGachaMesh; // 0x2c8
	UPaperSprite* m_CachedRewardSprite; // 0x2d0
};

struct UMM_PetSpeechBalloon {
	float m_fShowTime; // 0x2e0
	UMirTextBlock* m_Txt_Speech; // 0x2f8
	UWidgetAnimation* m_AniStart; // 0x300
	UWidgetAnimation* m_AniEnd; // 0x308
};

struct UBTDecorator_BlackboardBase {
	FBlackboardKeySelector BlackboardKey; // 0x68
};

struct UVisibilityBinding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct USourceEffectStereoDelayPreset {
	FSourceEffectStereoDelaySettings Settings; // 0x7c
};

struct UAnimSharingTransitionInstance {
	TWeakObjectPtr<USkeletalMeshComponent> FromComponent; // 0x268
	TWeakObjectPtr<USkeletalMeshComponent> ToComponent; // 0x270
	float BlendTime; // 0x278
	bool bBlendBool; // 0x27c
};

struct UMM_Customizing_Palette {
	UWrapBox* m_pColorListBox; // 0x300
	UWrapBox* m_PresetListBox; // 0x308
	UWrapBox* m_pCostumeDyeListBox; // 0x310
	TArray<UMM_Customizing_PaletteItem*> m_PaletteItemArray; // 0x318
	UMM_Common_Btn* m_OkBtn; // 0x328
	UMM_Customizing_Slider_ControlBar* m_AddSlider; // 0x330
};

struct APlaySoundTrigger {
	int32_t m_SoundID; // 0x278
};

struct AProjectileBullet {
	USphereComponent* m_pCollSphereComp; // 0x218
	UParticleSystemComponent* m_pShotParticleComp; // 0x220
	UParticleSystemComponent* m_pImpactParticleComp; // 0x228
};

struct UPaperTileMap {
	int32_t MapWidth; // 0x28
	int32_t MapHeight; // 0x2c
	int32_t TileWidth; // 0x30
	int32_t TileHeight; // 0x34
	float PixelsPerUnrealUnit; // 0x38
	float SeparationPerTileX; // 0x3c
	float SeparationPerTileY; // 0x40
	float SeparationPerLayer; // 0x44
	UPaperTileSet* SelectedTileSet; // 0x48
	UMaterialInterface* Material; // 0x70
	TArray<UPaperTileLayer*> TileLayers; // 0x78
	float CollisionThickness; // 0x88
	ESpriteCollisionMode SpriteCollisionDomain; // 0x8c
	ETileMapProjectionMode ProjectionMode; // 0x8d
	int32_t HexSideLength; // 0x90
	UBodySetup* BodySetup; // 0x98
	int32_t LayerNameIndex; // 0xa0
};

struct UOverrideDirectionalLight {
	FRotator Rotation; // 0x28
	float Intensity; // 0x34
	FColor LightColor; // 0x38
	float ShadowBias; // 0x3c
	float DynamicShadowDistanceMovableLight; // 0x40
	float DynamicShadowDistanceStationaryLight; // 0x44
};

struct UMM_ClosedTraining_CollectResultSlot {
	FLinearColor m_UpColor; // 0x2e0
	FLinearColor m_DownColor; // 0x2f0
	UMirImage* m_Img_AbilityIcon; // 0x300
	UMirTextBlock* m_Txt_AbilityName; // 0x308
	UMirRichTextBlock* m_RTxt_CurrValue; // 0x310
	UMirRichTextBlock* m_RTxt_NextValue; // 0x318
};

struct USCS_Node {
	UObject* ComponentClass; // 0x28
	UActorComponent* ComponentTemplate; // 0x30
	FBlueprintCookedComponentInstancingData CookedComponentInstancingData; // 0x38
	FName AttachToName; // 0x80
	FName ParentComponentOrVariableName; // 0x88
	FName ParentComponentOwnerClassName; // 0x90
	bool bIsParentComponentNative; // 0x98
	TArray<USCS_Node*> ChildNodes; // 0xa0
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0xb0
	FGuid VariableGuid; // 0xc0
	FName InternalVariableName; // 0xd0
};

struct UPlayer {
	APlayerController* PlayerController; // 0x30
	int32_t CurrentNetSpeed; // 0x38
	int32_t ConfiguredInternetSpeed; // 0x3c
	int32_t ConfiguredLanSpeed; // 0x40
};

struct AEndPlayTrigger {
	float m_DelayTime; // 0x298
};

struct AConditionCheckTrigger {
	ECondtionTriggerType m_ConditionType; // 0x278
	EConditionTriggerTargetType m_ConditionTargetType; // 0x279
	int32_t m_ConditionTargetID; // 0x27c
	float m_ConditionValue; // 0x280
};

struct UMM_UIShopCashBag {
	UMirScrollBox* mScrollBox; // 0x2f0
	UMirTextBlock* mTxtCashBagDesc; // 0x2f8
	UMM_Common_Board_Notice* mCommonNotice; // 0x300
};

struct AMM_PortraitCaptureActor {
	USceneCaptureComponent2D* m_pSceneCapture; // 0x218
	UCanvasRenderTarget2D* m_pRenderTarget2D; // 0x220
	FRotator m_CharacterRotation; // 0x228
	UMM_CharacterPartsComponent* m_pPartsComponent; // 0x238
	TMap<EPlayerClassID, UAnimationAsset*> m_mapClassPose; // 0x240
	TMap<EPlayerClassID, UAnimationAsset*> m_mapClassPoseObj; // 0x298
	UStaticMeshComponent* BackGroundMesh; // 0x2e8
	UMaterialInstanceDynamic* BackgroundMID; // 0x2f0
	UPaperSprite* BackGroundSprite; // 0x2f8
	AMM_HQPlayerReferenceActor* m_pHQPlayer; // 0x300
	int32_t IMAGE_SIZE_X; // 0x308
	int32_t IMAGE_SIZE_Y; // 0x30c
};

struct UMaterialExpressionArctangent2Fast {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct UMM_Popup_CollectItemRegist {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f8
	UMirTextBlock* m_Txt_Registerable; // 0x300
	UMirListView* m_ListView_CollectionItemList; // 0x308
	UMirTextBlock* m_Txt_Warning; // 0x310
	UMirTextBlock* m_Txt_Register; // 0x318
	UMM_Common_Btn* m_Btn_Cancel; // 0x320
	UMM_Common_Btn* m_Btn_Ok; // 0x328
	int32_t m_RegistStrID; // 0x330
	int32_t m_RegistWarningStrID; // 0x334
	int32_t m_CanYouRegistStrID; // 0x338
	int32_t m_CheckStrID; // 0x33c
	int32_t m_CancelStrID; // 0x340
	int32_t m_PleaseSelectStrID; // 0x344
	int32_t m_CollectInfoStr; // 0x348
	int32_t m_ReleaseLockToRegistStr; // 0x34c
	TArray<UCollectionItemSlotObj*> m_arCollectionItemSlotObj; // 0x368
};

struct UMM_Popup_FriendSearch {
	FLinearColor COLOR_User_Online; // 0x2f0
	FLinearColor COLOR_User_Offline; // 0x300
	int32_t STRING_ID_ONLINE; // 0x310
	int32_t STRING_ID_OFFLINE; // 0x314
	UMM_Common_Btn_Symbol* m_C_Btn_Close; // 0x318
	UMirTextBlock* m_Txt_Level; // 0x320
	UMirImage* m_Img_Portrait; // 0x328
	UMirImage* m_Img_Online; // 0x330
	UMirTextBlock* m_Txt_State; // 0x338
	UMirTextBlock* m_Txt_CombatPoint; // 0x340
	UMirTextBlock* m_Txt_Nickname; // 0x348
	UMirTextBlock* m_Txt_GuildName; // 0x350
	UMM_Common_Btn* m_C_Btn_Cancel; // 0x358
	UMM_Common_Btn* m_C_Btn_Request; // 0x360
};

struct UMM_PopupGuildWelcome {
	UMirImage* mImgProfile; // 0x2e0
	UMirRichTextBlock* mRtxtWelcome; // 0x2e8
	UMirButton* mBtnClose; // 0x2f0
};

struct UMaterialExpressionCrossProduct {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UMaterialExpressionLightmassReplace {
	FExpressionInput Realtime; // 0x40
	FExpressionInput Lightmass; // 0x54
};

struct UMaterialExpressionTransform {
	FExpressionInput Input; // 0x40
	EMaterialVectorCoordTransformSource TransformSourceType; // 0x54
	EMaterialVectorCoordTransform TransformType; // 0x55
};

struct UMM_Dominion_WithDrawal_OutSlot {
	UMirImage* m_pImgType; // 0x2e0
	UMirTextBlock* m_pTxtValue; // 0x2e8
	UMirTextBlock* m_pTxtInputOut; // 0x2f0
	UMM_Common_Btn_Symbol* m_pBtnPad; // 0x2f8
};

struct UMM_UIShopMainTab {
	UMirImage* m_ImgSelected; // 0x2f8
	UMirImage* m_ImgTagIcon; // 0x300
	UMirButton* m_BtnMainTab; // 0x308
	UMirTextBlock* m_TxtTabName; // 0x310
	UMirCanvasPanel* m_PanelIndicator; // 0x318
};

struct UMM_UserEvent_Attendance_Day_Slot {
	UGridPanel* m_Grid_Today; // 0x2e0
	UGridPanel* m_Grid_OneDay; // 0x2e8
	UMirTextBlock* m_Txt_Name_2; // 0x2f0
	UMirTextBlock* m_Txt_Name_3; // 0x2f8
	UMM_Slot_Material* m_ItemSlot_2; // 0x300
	UMM_Slot_Material* m_ItemSlot_3; // 0x308
	UMirCanvasPanel* m_Can_Yellow; // 0x310
	UMirCanvasPanel* m_Can_Blue; // 0x318
	UMirImage* m_Img_Yellow; // 0x320
	UMirImage* m_Img_Blue; // 0x328
	UMM_Common_Btn* m_C_Btn_Main; // 0x330
};

struct UMM_Slot_Registered_Circle {
	UMirImage* m_Img_GradeBgEffect; // 0x3f8
	UMirImage* m_ImgPlus; // 0x400
	UMirImage* m_ImgTierBg; // 0x408
	UMirImage* m_ImgDisabled; // 0x410
	UMirTextBlock* m_TxtSmeltingLevel; // 0x418
	UMirTextBlock* m_TxtHavCount; // 0x420
	UMM_Common_Btn_Symbol* m_BtnUnmount; // 0x428
	UMirImage* m_Img_UserLock; // 0x430
	UMirImage* m_Img_UserLock_Stack; // 0x438
};

struct UHudSettings {
	char bShowHUD : 1; // 0x28
	TArray<FName> DebugDisplay; // 0x30
};

struct UAnimationDataSourceRegistry {
	TMap<FName, UObject*> DataSources; // 0x28
};

struct UMovieSceneLevelVisibilityTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UParticleModuleLocationWorldOffset {
	FRawDistributionVector StartLocation; // 0x30
	float DistributeOverNPoints; // 0x78
	float DistributeThreshold; // 0x7c
};

struct UMM_B_ItemResult {
	FLinearColor SucessDefaultColor; // 0x2e0
	FLinearColor SucessTextColor; // 0x2f0
	FLinearColor FailTextColor; // 0x300
	FLinearColor FailLightColor; // 0x310
	float m_SkipTime; // 0x320
	int32_t GuideMsgID; // 0x324
	UWidgetAnimation* m_OpenAni; // 0x340
	UWidgetAnimation* m_OpenAni_Succeeded; // 0x348
	UWidgetAnimation* m_OpenAni_GreateSucceeded; // 0x350
	UWidgetAnimation* m_OpenAni_Fail; // 0x358
	UWidgetAnimation* m_OpenAni_Fiasco; // 0x360
	UWidgetAnimation* m_OpenAni_ForceCriticalFail; // 0x368
	UMirCanvasPanel* m_SuccessEffect; // 0x370
	UPanelWidget* m_FailEffect; // 0x378
	UPanelWidget* m_FiascoEffect; // 0x380
	UPanelWidget* m_ForceCriticalFail; // 0x388
	UMirImage* m_TitleLight[0x4]; // 0x390
	UButton* m_BtnClose; // 0x3b0
	UTextBlock* m_TxtResultTitle; // 0x3b8
	UTextBlock* m_TxtGuideMessage; // 0x3c0
	UMM_ItemResult_ItemInfo* m_ItemInfo; // 0x3c8
	UMM_ItemResult_AbilityInfo* m_AbilityInfo; // 0x3d0
	UMM_ItemResult_FailInfo* m_FailInfo; // 0x3d8
	UMM_PieceItemInfos* m_TranscendFailInfo; // 0x3e0
	UMM_PassiveSkillInfos* m_TranscendPassiveSkillInfo; // 0x3e8
	UMM_ItemResult_SingleAbilityInfo* m_SingleAbilityInfo; // 0x3f0
	UWidgetAnimation* m_PlayAni; // 0x3f8
	UPanelWidget* m_Panel_Center; // 0x400
	UMirTextBlock* m_Txt_NameInCenter; // 0x408
	UMirTextBlock* m_Txt_ValueInCenter; // 0x410
	UMirTextBlock* m_Txt_ValueNextnCenter; // 0x418
	bool m_IsSkipAni; // 0x420
	UPanelWidget* m_Panel_Auto_Goods; // 0x438
	UMirTextBlock* m_Txt_UseMat; // 0x440
	UMirImage* m_Img_SmeltStone; // 0x448
	UMirTextBlock* m_Txt_SmeltStone; // 0x450
	UMirImage* m_Img_SmeltBlackIron; // 0x458
	UMirTextBlock* m_Txt_SmeltBlackIron; // 0x460
	UMirImage* m_Img_SmeltCost; // 0x468
	UMirTextBlock* m_Txt_SmeltCost; // 0x470
	UMirCanvasPanel* m_Panel_ClosedTraining; // 0x478
	UMirTextBlock* m_Txt_PrevClosedTrainigCollectValue; // 0x480
	UMirTextBlock* m_Txt_ClosedTrainigCollectValue; // 0x488
	UWidgetAnimation* m_AutoSmeltAni_Succees; // 0x490
	UWidgetAnimation* m_AutoSmeltAni_Fail; // 0x498
	UWidgetAnimation* m_AutoSmeltAni_Broken; // 0x4a0
};

struct UEnvQueryGenerator {
	FString OptionName; // 0x30
	UEnvQueryItemType* ItemType; // 0x40
	char bAutoSortTests : 1; // 0x48
};

struct UUniformGridPanel {
	FMargin SlotPadding; // 0x120
	float MinDesiredSlotWidth; // 0x130
	float MinDesiredSlotHeight; // 0x134
};

struct UMaterialExpressionSpriteTextureSampler {
	bool bSampleAdditionalTextures; // 0xf0
	int32_t AdditionalSlotIndex; // 0xf4
	FText SlotDisplayName; // 0xf8
};

struct UAnimComposite {
	FAnimTrack AnimationTrack; // 0xa8
};

struct ALevelSequenceAirWalkActor {
	FString m_NewSectionName; // 0x218
	FString m_OldSectionName; // 0x228
};

struct UMM_CustomTitleSwitching {
	int32_t STRING_TITLE; // 0x2f8
	int32_t STRING_OFFICAL_EMPTY; // 0x2fc
	int32_t STRING_TITLE_EMPTY; // 0x300
	int32_t STRING_REMAIN; // 0x304
	int32_t STRING_REMAIN_D_H; // 0x308
	int32_t STRING_REMAIN_H_M; // 0x30c
	int32_t STRING_REMAIN_M_S; // 0x310
	int32_t STRING_REMAIN_SECOND; // 0x314
	int32_t STRING_TITLE_NONE; // 0x318
	int32_t STRING_RECOMMEND_TITLE_2; // 0x31c
	int32_t STRING_RECOMMEND_TITLE_3; // 0x320
	int32_t STRING_CAN_USING_TITLE; // 0x324
	int32_t STRING_DISABLE_TITLE; // 0x328
	int32_t STRING_OFFICAL_TITLE; // 0x32c
	int32_t STRING_NEED_TITLE; // 0x330
	int32_t STRING_DISABLE_TITLE_2; // 0x334
	int32_t STRING_DISABLE_TITLE_3; // 0x338
	int32_t STRING_USE_TITLE_2; // 0x33c
	int32_t STRING_USE_TITLE_3; // 0x340
	int32_t STRING_USE_TITLE_4; // 0x344
	int32_t STRING_USE_OFFICAL_FAIL; // 0x348
	int32_t STRING_USE_OFFICAL_FAIL_USE_TITLE; // 0x34c
	int32_t STRING_USE_OFFICAL_SUCCESS; // 0x350
	UMirTextBlock* Txt_OfficialTitle; // 0x358
	UMirTextBlock* Txt_CustomTitle; // 0x360
	UMirButton* Btn_CustomTitle; // 0x368
	UMirTextBlock* Txt_RemainDay; // 0x370
	UMirRichTextBlock* Txt_RemainDay_Time; // 0x378
	UMirTextBlock* Txt_CustomTitle_Guide; // 0x380
	UCheckBox* Chk_TitleBase; // 0x388
	UCheckBox* Chk_TitleUse; // 0x390
	UMirTextBlock* Txt_TitleBase; // 0x398
	UMirTextBlock* Txt_TitleUse; // 0x3a0
	UMM_Common_Btn* Btn_Cancel; // 0x3a8
	UMM_Common_Btn* Btn_Ok; // 0x3b0
	UMM_Common_Btn_Symbol* btn_close; // 0x3b8
};

struct UImgMediaSettings {
	FFrameRate DefaultFrameRate; // 0x28
	float CacheBehindPercentage; // 0x30
	float CacheSizeGB; // 0x34
	int32_t CacheThreads; // 0x38
	int32_t CacheThreadStackSizeKB; // 0x3c
	float GlobalCacheSizeGB; // 0x40
	bool UseGlobalCache; // 0x44
	uint32_t ExrDecoderThreads; // 0x48
	FString DefaultProxy; // 0x50
	bool UseDefaultProxy; // 0x60
};

struct USceneComponent {
	TWeakObjectPtr<APhysicsVolume> PhysicsVolume; // 0xb8
	USceneComponent* AttachParent; // 0xc0
	FName AttachSocketName; // 0xc8
	TArray<USceneComponent*> AttachChildren; // 0xd0
	TArray<USceneComponent*> ClientAttachedChildren; // 0xe0
	FVector RelativeLocation; // 0x128
	FRotator RelativeRotation; // 0x134
	FVector RelativeScale3D; // 0x140
	FVector ComponentVelocity; // 0x14c
	char bComponentToWorldUpdated : 1; // 0x168
	char bAbsoluteLocation : 1; // 0x168
	char bAbsoluteRotation : 1; // 0x168
	char bAbsoluteScale : 1; // 0x168
	char bVisible : 1; // 0x168
	char bHiddenInGame : 1; // 0x168
	char bShouldBeAttached : 1; // 0x168
	char bShouldSnapLocationWhenAttached : 1; // 0x169
	char bShouldSnapRotationWhenAttached : 1; // 0x169
	char bShouldUpdatePhysicsVolume : 1; // 0x169
	char bBoundsChangeTriggersStreamingDataRebuild : 1; // 0x169
	char bUseAttachParentBound : 1; // 0x169
	EComponentMobility Mobility; // 0x181
	EDetailMode DetailMode; // 0x182
	FScriptMulticastDelegate PhysicsVolumeChangedDelegate; // 0x183
};

struct UMaterialExpressionSaturate {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionTextureCoordinate {
	int32_t CoordinateIndex; // 0x40
	float UTiling; // 0x44
	float VTiling; // 0x48
	char UnMirrorU : 1; // 0x4c
	char UnMirrorV : 1; // 0x4c
};

struct UMM_GameOption_Slider {
	EGameOptionSliderType m_eType; // 0x2e8
	EGameOptionSliderTitleLocation m_eTitleLocation; // 0x2e9
	bool m_bUseSliderButton; // 0x2ea
	int32_t m_iPercent; // 0x2ec
	UMirTextBlock* m_Txt_Title_1; // 0x2f0
	UMirTextBlock* m_Txt_Title_2; // 0x2f8
	UMirSlider* m_Slider; // 0x300
	UMirTextBlock* m_Txt_SliderPercent; // 0x308
	UMM_Common_Btn_Symbol* m_CB_SliderUp; // 0x310
	UMM_Common_Btn_Symbol* m_CB_SliderDown; // 0x318
	UMirProgressBar* m_pProgressBar; // 0x320
};

struct UBTTask_RecoverAutoBattleState {
	EBTNodeResult ReturnResult; // 0x70
};

struct UMaterialExpressionCustom {
	FString code; // 0x40
	ECustomMaterialOutputType OutputType; // 0x50
	FString Description; // 0x58
	TArray<FCustomInput> Inputs; // 0x68
};

struct UMM_HudPartyMatch {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct UMM_Slot_Term_Item {
	UMM_Slot_Material* Slot_Item; // 0x2f0
	UMirTextBlock* Item_Name; // 0x2f8
	UMirTextBlock* ExpireDateTime; // 0x300
	UMirImage* Img_Indicator; // 0x308
	FDateTime ExpireTimeDate_Period; // 0x310
	int32_t ItemTermType; // 0x318
	float DisplayUpdateTime; // 0x31c
	float UpdateTimer; // 0x320
	int32_t STR_MSG_REMAINTIME; // 0x324
};

struct UMM_Hud_Chat_PartyShare {
	UMirImage* m_Img_CharaIcon; // 0x2e0
	UMirTextBlock* m_Txt_SendTime; // 0x2e8
	UMirTextBlock* m_Txt_Prefix; // 0x2f0
	UMirTextBlock* m_Txt_Nickname; // 0x2f8
	UMirTextBlock* m_Txt_Official; // 0x300
	UMirButton* Btn_UserInteraction; // 0x308
	UMirButton* Btn_PartyInvite; // 0x310
	UMirImage* m_Img_PartyIcon; // 0x318
	UMirTextBlock* m_Txt_PartyType; // 0x320
	UMirTextBlock* m_Txt_TargetStageName; // 0x328
	uint64_t m_UserUID; // 0x330
	FString m_UserNickname; // 0x338
	uint64_t m_PartyUID; // 0x348
	int32_t m_StageType; // 0x350
	int32_t m_TargetStageID; // 0x354
};

struct UMM_Smelt_SpecialOptionOpen {
	UWidgetAnimation* m_AniStart; // 0x2f0
	UPanelWidget* Panel_Effect; // 0x300
	UMirImage* Img_OptionIcon; // 0x308
	UMirTextBlock* Txt_SpecialOptionOpenTitle; // 0x310
	UMirTextBlock* Txt_SpecialOptionDescription; // 0x318
	UMirTextBlock* Txt_SpecialOptionValue; // 0x320
};

struct UMM_UIShopAdsRewardBox {
	UMirTextBlock* m_Txt_RewardBoxTitle; // 0x2f0
	UMirTextBlock* m_Txt_AdsViewTitle; // 0x2f8
	UMirTextBlock* m_Txt_AdsViewCount; // 0x300
	UMirProgressBar* m_Prog_Gague; // 0x308
	UMirButton* m_Btn_GetRewardBox; // 0x310
};

struct UMaterialExpressionSceneTexelSize {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMaterialExpressionVectorNoise {
	FExpressionInput Position; // 0x40
	EVectorNoiseFunction NoiseFunction; // 0x54
	int32_t quality; // 0x58
	char bTiling : 1; // 0x5c
	uint32_t TileSize; // 0x60
};

struct UMM_HudGetItemMsg_Slot {
	float m_fShowTime; // 0x2e0
	UWidgetAnimation* m_AniStart_Normal; // 0x2e8
	UWidgetAnimation* m_AniStart_Blue; // 0x2f0
	UWidgetAnimation* m_AniStart_Purple; // 0x2f8
	UWidgetAnimation* m_AniStart_Yellow; // 0x300
	UWidgetAnimation* m_AniStart_Red; // 0x308
	UWidgetAnimation* m_AniEnd; // 0x310
	UMM_Slot_Material* m_ItemSlot; // 0x328
	UTextBlock* m_Txt_ItemName; // 0x330
};

struct AEQSTestingPawn {
	UEnvQuery* QueryTemplate; // 0x630
	TArray<FEnvNamedValue> QueryParams; // 0x638
	TArray<FAIDynamicParam> QueryConfig; // 0x648
	float TimeLimitPerStep; // 0x658
	int32_t StepToDebugDraw; // 0x65c
	EEnvQueryHightlightMode HighlightMode; // 0x660
	char bDrawLabels : 1; // 0x664
	char bDrawFailedItems : 1; // 0x664
	char bReRunQueryOnlyOnFinishedMove : 1; // 0x664
	char bShouldBeVisibleInGame : 1; // 0x664
	char bTickDuringGame : 1; // 0x664
	EEnvQueryRunMode QueryingMode; // 0x668
	FNavAgentProperties NavAgentProperties; // 0x670
};

struct UMM_GuildMemberGradeList {
	UTextBlock* m_Txt_JobName; // 0x2f0
	UTextBlock* m_Txt_Level; // 0x2f8
	UImage* m_Img_Class; // 0x300
	UTextBlock* m_Txt_Nickname; // 0x308
	UTextBlock* m_Txt_Point; // 0x310
	UTextBlock* m_Txt_Online; // 0x318
	UImage* m_Img_Selected; // 0x320
	UButton* m_Btn_Main; // 0x328
};

struct UParticleModuleAttractorParticle {
	FName EmitterName; // 0x30
	FRawDistributionFloat Range; // 0x38
	char bStrengthByDistance : 1; // 0x68
	FRawDistributionFloat Strength; // 0x70
	char bAffectBaseVelocity : 1; // 0xa0
	EAttractorParticleSelectionMethod SelectionMethod; // 0xa4
	char bRenewSource : 1; // 0xa8
	char bInheritSourceVel : 1; // 0xa8
	int32_t LastSelIndex; // 0xac
};

struct UNavLinkTrivial {
	TArray<FNavigationLink> Links; // 0x28
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x38
};

struct UViewport {
	FLinearColor BackgroundColor; // 0x120
};

struct UMovieSceneBindingOverrides {
	TArray<FMovieSceneBindingOverrideData> BindingData; // 0x28
};

struct UMM_Dominion_Title_RareList {
	UVerticalBox* m_pVertBox; // 0x2e0
	UMirTextBlock* m_pTxtTitle; // 0x2e8
};

struct UParticleModuleSourceMovement {
	FRawDistributionVector SourceMovementScale; // 0x30
};

struct ULevelStreamingDynamic {
	char bInitiallyLoaded : 1; // 0x148
	char bInitiallyVisible : 1; // 0x148
};

struct UParticleModuleLocationDirect {
	FRawDistributionVector Location; // 0x30
	FRawDistributionVector LocationOffset; // 0x78
	FRawDistributionVector ScaleFactor; // 0xc0
	FRawDistributionVector Direction; // 0x108
};

struct USkeletalMesh {
	USkeleton* Skeleton; // 0x60
	FBoxSphereBounds ImportedBounds; // 0x68
	FBoxSphereBounds ExtendedBounds; // 0x84
	FVector PositiveBoundsExtension; // 0xa0
	FVector NegativeBoundsExtension; // 0xac
	TArray<FSkeletalMaterial> Materials; // 0xb8
	TArray<FBoneMirrorInfo> SkelMirrorTable; // 0xc8
	TArray<FSkeletalMeshLODInfo> LODInfo; // 0xd8
	FPerPlatformInt MinLOD; // 0x138
	FPerPlatformBool DisableBelowMinLodStripping; // 0x13c
	EAxis SkelMirrorAxis; // 0x13d
	EAxis SkelMirrorFlipAxis; // 0x13e
	char bUseFullPrecisionUVs : 1; // 0x13f
	char bUseHighPrecisionTangentBasis : 1; // 0x13f
	char bHasBeenSimplified : 1; // 0x13f
	char bHasVertexColors : 1; // 0x13f
	char bEnablePerPolyCollision : 1; // 0x13f
	UBodySetup* BodySetup; // 0x140
	UPhysicsAsset* PhysicsAsset; // 0x148
	UPhysicsAsset* ShadowPhysicsAsset; // 0x150
	TArray<UNodeMappingContainer*> NodeMappingData; // 0x158
	TArray<UMorphTarget*> MorphTargets; // 0x168
	UAnimInstance* PostProcessAnimBlueprint; // 0x2f0
	TArray<UClothingAssetBase*> MeshClothingAssets; // 0x2f8
	FSkeletalMeshSamplingInfo SamplingInfo; // 0x308
	TArray<UAssetUserData*> AssetUserData; // 0x338
	TArray<USkeletalMeshSocket*> Sockets; // 0x350
	TArray<FSkinWeightProfileInfo> SkinWeightProfiles; // 0x370
};

struct UBlueprintCore {
	UObject* SkeletonGeneratedClass; // 0x28
	UObject* GeneratedClass; // 0x30
	bool bLegacyNeedToPurgeSkelRefs; // 0x38
	FGuid BlueprintGuid; // 0x3c
};

struct UParticleSystem {
	float UpdateTime_FPS; // 0x30
	float UpdateTime_Delta; // 0x34
	float WarmupTime; // 0x38
	float WarmupTickRate; // 0x3c
	TArray<UParticleEmitter*> Emitters; // 0x40
	UParticleSystemComponent* PreviewComponent; // 0x50
	UInterpCurveEdSetup* CurveEdSetup; // 0x58
	float LODDistanceCheckTime; // 0x60
	float MacroUVRadius; // 0x64
	TArray<float> LODDistances; // 0x68
	TArray<FParticleSystemLOD> LODSettings; // 0x78
	FBox FixedRelativeBoundingBox; // 0x88
	float SecondsBeforeInactive; // 0xa4
	float Delay; // 0xa8
	float DelayLow; // 0xac
	char bOrientZAxisTowardCamera : 1; // 0xb0
	char bUseFixedRelativeBoundingBox : 1; // 0xb0
	char bShouldResetPeakCounts : 1; // 0xb0
	char bHasPhysics : 1; // 0xb0
	char bUseRealtimeThumbnail : 1; // 0xb0
	char ThumbnailImageOutOfDate : 1; // 0xb0
	char bUseDelayRange : 1; // 0xb1
	char bAllowManagedTicking : 1; // 0xb1
	char bAutoDeactivate : 1; // 0xb1
	char bRegenerateLODDuplicate : 1; // 0xb1
	EParticleSystemUpdateMode SystemUpdateMode; // 0xb2
	ParticleSystemLODMethod LODMethod; // 0xb3
	EParticleSystemInsignificanceReaction InsignificantReaction; // 0xb4
	EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod; // 0xb5
	EParticleSignificanceLevel MaxSignificanceLevel; // 0xb7
	uint32_t MinTimeBetweenTicks; // 0xb8
	float InsignificanceDelay; // 0xbc
	FVector MacroUVPosition; // 0xc0
	FBox CustomOcclusionBounds; // 0xcc
	TArray<FLODSoloTrack> SoloTracking; // 0xe8
	TArray<FNamedEmitterMaterial> NamedMaterialSlots; // 0xf8
};

struct UMaterialExpressionShadingModel {
	EMaterialShadingModel ShadingModel; // 0x40
};

struct UTexture2DArray {
	FGuid LightingGuid; // 0x48
	int32_t LODBias; // 0x58
	TextureCompressionSettings CompressionSettings; // 0x5c
	TextureFilter Filter; // 0x5d
	ETextureMipLoadOptions MipLoadOptions; // 0x5e
	TextureGroup LODGroup; // 0x5f
	char SRGB : 1; // 0x60
	char bNoTiling : 1; // 0x60
	char VirtualTextureStreaming : 1; // 0x60
	char CompressionYCoCg : 1; // 0x60
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x68
};

struct UVirtualTexturePoolConfig {
	int32_t DefaultSizeInMegabyte; // 0x28
	TArray<FVirtualTextureSpacePoolConfig> Pools; // 0x30
};

struct UBTTask_UpdateSkillState {
	EBTNodeResult ReturnResult; // 0x70
};

struct ABlockingVolume {
	EBrushType BrushType; // 0x218
	FColor BrushColor; // 0x21c
	int32_t PolyFlags; // 0x220
	char bColored : 1; // 0x224
	char bSolidWhenSelected : 1; // 0x224
	char bPlaceableFromClassBrowser : 1; // 0x224
	char bNotForClientOrServer : 1; // 0x224
	UModel* Brush; // 0x228
	UBrushComponent* BrushComponent; // 0x230
	char bInManipulation : 1; // 0x238
	TArray<FGeomSelection> SavedSelections; // 0x240
};

struct ATriggerCapsule {
	UShapeComponent* CollisionComponent; // 0x218
};

struct UMM_Hud_Chat_QuickMove {
	UPanelWidget* m_Panel_QuickChat; // 0x2e0
	UMirTextBlock* m_Txt_Prefix; // 0x2e8
	UMirTextBlock* m_Txt_Nickname; // 0x2f0
	UMirTextBlock* m_Txt_Message; // 0x2f8
	UMirButton* m_Btn_QuickChat; // 0x300
	UPanelWidget* m_Panel_QuickSimple; // 0x308
	UMirButton* m_Btn_QuickSimple; // 0x310
};

struct UMM_Auction_Enchant_ComboList {
	float m_fSlotSizeY; // 0x2e0
	UMirCanvasPanel* m_pCanScroll; // 0x2e8
	UMirScrollBox* m_pScrollList; // 0x2f0
	UMirButton* m_pBtnMain; // 0x2f8
	UMirImage* m_pImgArrow; // 0x300
	UMirTextBlock* m_pTxtTheme; // 0x308
	UMirTextBlock* m_pTxtValue; // 0x310
	FVector2D m_fBaseScrollSize; // 0x318
};

struct UMM_HudQuestList {
	float m_fCheckQuestSelectedTime; // 0x2f0
	UMM_HudQuestSlot* m_pHudQuestSlotWidget; // 0x2f8
	float m_fTrackerSlotSizeY; // 0x300
	UMM_HudQuestSlot* m_pMainQuestSlot; // 0x308
	UMM_HudSubQuest_Slot* m_pAutoSubQuestSlot; // 0x310
	UScrollBox* m_pQuestScrollBox; // 0x318
	TArray<UMM_HudQuestSlot*> m_pSubQuestSlotList; // 0x320
	UMirImage* m_pMainGuideIcon; // 0x338
	UMirImage* m_pMainGuideBG; // 0x340
	UWidgetAnimation* m_pGuideAni; // 0x348
};

struct UPacketHandlerProfileConfig {
	TArray<FString> Components; // 0x28
};

struct UMM_QuickItemActionMsg {
	float m_fShowTime; // 0x2f0
	float m_fAniSpeed; // 0x2f4
	int32_t m_iAutoEquipLevel; // 0x2f8
	int32_t m_iAutoTransferLevel; // 0x2fc
	UWidgetAnimation* m_AniStart; // 0x300
	UWidgetAnimation* m_AniEnd; // 0x308
	UMM_Slot_Material* m_ItemSlot; // 0x330
	UMirRichTextBlock* m_RTxt_Message; // 0x338
	UMirTextBlock* m_Txt_CombatPoint; // 0x340
	UMirProgressBar* m_ProgressTime; // 0x348
	UMirTextBlock* m_Txt_Timer; // 0x350
	UMirTextBlock* m_Txt_Auto; // 0x358
	UMirButton* m_Btn_Main; // 0x360
};

struct UMM_Mastery_Left {
	TArray<UMM_Mastery_Slot*> m_arMasterySlot; // 0x2f0
};

struct UImage {
	FSlateBrush Brush; // 0x108
	DelegateProperty BrushDelegate; // 0x190
	FLinearColor ColorAndOpacity; // 0x1a0
	DelegateProperty ColorAndOpacityDelegate; // 0x1b0
	bool bFlipForRightToLeftFlowDirection; // 0x1c0
	DelegateProperty OnMouseButtonDownEvent; // 0x1c4
};

struct USkyAtmosphereComponent {
	float BottomRadius; // 0x220
	FColor GroundAlbedo; // 0x224
	float AtmosphereHeight; // 0x228
	float MultiScatteringFactor; // 0x22c
	float RayleighScatteringScale; // 0x230
	FLinearColor RayleighScattering; // 0x234
	float RayleighExponentialDistribution; // 0x244
	float MieScatteringScale; // 0x248
	FLinearColor MieScattering; // 0x24c
	float MieAbsorptionScale; // 0x25c
	FLinearColor MieAbsorption; // 0x260
	float MieAnisotropy; // 0x270
	float MieExponentialDistribution; // 0x274
	float OtherAbsorptionScale; // 0x278
	FLinearColor OtherAbsorption; // 0x27c
	FTentDistribution OtherTentDistribution; // 0x28c
	FLinearColor SkyLuminanceFactor; // 0x298
	float AerialPespectiveViewDistanceScale; // 0x2a8
	float HeightFogContribution; // 0x2ac
	float TransmittanceMinLightElevationAngle; // 0x2b0
	FGuid bStaticLightingBuiltGUID; // 0x2dc
};

struct UMM_ServerRelocation_SetList {
	UMirTextBlock* m_Txt_Message; // 0x2e0
	UMM_Common_Btn* m_Btn_Move; // 0x2e8
};

struct UMM_UserEvent_Gacha {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMirTextBlock* m_Txt_Event_RemainTime; // 0x2f8
	UMirTextBlock* m_Txt_DailyRemainCount; // 0x300
	UMM_Slot_Material* m_Slot_Material_Main; // 0x308
	UMirTextBlock* m_Txt_Main_ItemName; // 0x310
	UMM_Slot_Material* m_Slot_Material[0x8]; // 0x318
	UPanelWidget* m_Can_AuraEffect; // 0x358
	UMirImage* m_Img_IcnItemGrade; // 0x360
	UMirImage* m_Img_Indicator; // 0x368
	UMirButton* m_Btn_Mileage; // 0x370
	UMirRichTextBlock* m_RTxt_MileagePoint; // 0x378
	UImage* m_Img_GradeEffect; // 0x380
	UMirCanvasPanel* m_Synthesis_PointUp_Effect; // 0x388
	UMM_UserEvent_Gacha_Btn* m_C_Btn_Gacha_Item[0x2]; // 0x390
	UMM_Common_Btn_Cost* m_C_Btn_Gacha_Money[0x2]; // 0x3a0
	UWidgetAnimation* m_AniPointUP; // 0x3b0
};

struct UMM_VolumeController {
	TArray<UObject*> m_arVolumeButtonIcon; // 0x2e0
	UMirImage* m_Img_VolumeButton; // 0x2f8
	UMirButton* m_Btn_VolumeButton; // 0x300
	UPanelWidget* m_Overlay_VolumeController; // 0x308
	UMirProgressBar* m_Prg_VolumeController; // 0x310
	UMirSlider* m_Slider_VolumeController; // 0x318
};

struct UMM_Guild_BlackIron_Slot {
	UMirTextBlock* m_pTxtName; // 0x2e0
	UMirImage* m_pIconSlot; // 0x2e8
	UMirTextBlock* m_pTxtValue; // 0x2f0
};

struct UFXSystemComponent {
	float MinDrawDistance; // 0x228
	float LDMaxDrawDistance; // 0x22c
	float CachedMaxDrawDistance; // 0x230
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x234
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x235
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x236
	ELightmapType LightmapType; // 0x237
	char bUseMaxLODAsImposter : 1; // 0x238
	float CachedBoundsSphereDiameter; // 0x23c
	char bBatchImpostersAsInstances : 1; // 0x240
	char bNeverDistanceCull : 1; // 0x240
	char bAlwaysCreatePhysicsState : 1; // 0x240
	char bGenerateOverlapEvents : 1; // 0x240
	char bMultiBodyOverlap : 1; // 0x241
	char bTraceComplexOnMove : 1; // 0x241
	char bReturnMaterialOnMove : 1; // 0x241
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x241
	char bAllowCullDistanceVolume : 1; // 0x241
	char bHasMotionBlurVelocityMeshes : 1; // 0x241
	char bVisibleInReflectionCaptures : 1; // 0x241
	char bVisibleInRayTracing : 1; // 0x241
	char bRenderInMainPass : 1; // 0x242
	char bRenderInDepthPass : 1; // 0x242
	char bReceivesDecals : 1; // 0x242
	char bOwnerNoSee : 1; // 0x242
	char bOnlyOwnerSee : 1; // 0x242
	char bTreatAsBackgroundForOcclusion : 1; // 0x242
	char bUseAsOccluder : 1; // 0x242
	char bSelectable : 1; // 0x242
	char bForceMipStreaming : 1; // 0x243
	char bHasPerInstanceHitProxies : 1; // 0x243
	char CastShadow : 1; // 0x243
	char bAffectDynamicIndirectLighting : 1; // 0x243
	char bAffectDistanceFieldLighting : 1; // 0x243
	char bCastDynamicShadow : 1; // 0x243
	char bCastStaticShadow : 1; // 0x243
	char bCastVolumetricTranslucentShadow : 1; // 0x243
	char bSelfShadowOnly : 1; // 0x244
	char bCastFarShadow : 1; // 0x244
	char bCastInsetShadow : 1; // 0x244
	char bCastCinematicShadow : 1; // 0x244
	char bCastHiddenShadow : 1; // 0x244
	char bCastShadowAsTwoSided : 1; // 0x244
	char bLightAsIfStatic : 1; // 0x244
	char bLightAttachmentsAsGroup : 1; // 0x244
	char bExcludeFromLightAttachmentGroup : 1; // 0x245
	char bReceiveMobileCSMShadows : 1; // 0x245
	char bSingleSampleShadowFromStationaryLights : 1; // 0x245
	char bIgnoreRadialImpulse : 1; // 0x245
	char bIgnoreRadialForce : 1; // 0x245
	char bApplyImpulseOnDamage : 1; // 0x245
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x245
	char AlwaysLoadOnClient : 1; // 0x245
	char AlwaysLoadOnServer : 1; // 0x246
	char bUseEditorCompositing : 1; // 0x246
	char bRenderCustomDepth : 1; // 0x246
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x247
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x249
	FLightingChannels LightingChannels; // 0x24a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x24b
	int32_t CustomDepthStencilValue; // 0x24c
	FCustomPrimitiveData CustomPrimitiveData; // 0x250
	int32_t TranslucencySortPriority; // 0x260
	int32_t VisibilityId; // 0x264
	char bIgnoreOcclusionVolume : 1; // 0x268
	int32_t OcclusionVolumeId; // 0x26c
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x270
	uint8_t VirtualTextureLodBias; // 0x280
	uint8_t VirtualTextureCullMips; // 0x281
	uint8_t VirtualTextureMinCoverage; // 0x282
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x283
	float LpvBiasMultiplier; // 0x288
	float BoundsScale; // 0x294
	TArray<AActor*> MoveIgnoreActors; // 0x2a8
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2b8
	FBodyInstance BodyInstance; // 0x2d8
	FScriptMulticastDelegate OnComponentHit; // 0x3e8
	FScriptMulticastDelegate OnComponentBeginOverlap; // 0x3e9
	FScriptMulticastDelegate OnComponentEndOverlap; // 0x3ea
	FScriptMulticastDelegate OnComponentWake; // 0x3eb
	FScriptMulticastDelegate OnComponentSleep; // 0x3ec
	FScriptMulticastDelegate OnBeginCursorOver; // 0x3ee
	FScriptMulticastDelegate OnEndCursorOver; // 0x3ef
	FScriptMulticastDelegate OnClicked; // 0x3f0
	FScriptMulticastDelegate OnReleased; // 0x3f1
	FScriptMulticastDelegate OnInputTouchBegin; // 0x3f2
	FScriptMulticastDelegate OnInputTouchEnd; // 0x3f3
	FScriptMulticastDelegate OnInputTouchEnter; // 0x3f4
	FScriptMulticastDelegate OnInputTouchLeave; // 0x3f5
	UPrimitiveComponent* LODParentPrimitive; // 0x410
};

struct UProjectileMovementComponent {
	float InitialSpeed; // 0xf0
	float MaxSpeed; // 0xf4
	char bRotationFollowsVelocity : 1; // 0xf8
	char bRotationRemainsVertical : 1; // 0xf8
	char bShouldBounce : 1; // 0xf8
	char bInitialVelocityInLocalSpace : 1; // 0xf8
	char bForceSubStepping : 1; // 0xf8
	char bSimulationEnabled : 1; // 0xf8
	char bSweepCollision : 1; // 0xf8
	char bIsHomingProjectile : 1; // 0xf8
	char bBounceAngleAffectsFriction : 1; // 0xf9
	char bIsSliding : 1; // 0xf9
	char bInterpMovement : 1; // 0xf9
	char bInterpRotation : 1; // 0xf9
	float PreviousHitTime; // 0xfc
	FVector PreviousHitNormal; // 0x100
	float ProjectileGravityScale; // 0x10c
	float Buoyancy; // 0x110
	float Bounciness; // 0x114
	float Friction; // 0x118
	float BounceVelocityStopSimulatingThreshold; // 0x11c
	float MinFrictionFraction; // 0x120
	FScriptMulticastDelegate OnProjectileBounce; // 0x128
	FScriptMulticastDelegate OnProjectileStop; // 0x138
	float HomingAccelerationMagnitude; // 0x148
	TWeakObjectPtr<USceneComponent> HomingTargetComponent; // 0x14c
	float MaxSimulationTimeStep; // 0x154
	int32_t MaxSimulationIterations; // 0x158
	int32_t BounceAdditionalIterations; // 0x15c
	float InterpLocationTime; // 0x160
	float InterpRotationTime; // 0x164
	float InterpLocationMaxLagDistance; // 0x168
	float InterpLocationSnapToTargetDistance; // 0x16c
};

struct UWNGamePluginSettings {
	bool bEnableFreeStopHinge; // 0x28
	bool bEnableGalaxyStore; // 0x29
	bool bEnableOneStore; // 0x2a
	bool bEnableWemix; // 0x2b
};

struct AAIController {
	char bStopAILogicOnUnposses : 1; // 0x2c8
	char bLOSflag : 1; // 0x2c8
	char bSkipExtraLOSChecks : 1; // 0x2c8
	char bAllowStrafe : 1; // 0x2c8
	char bWantsPlayerState : 1; // 0x2c8
	char bSetControlRotationFromPawnOrientation : 1; // 0x2c8
	UPathFollowingComponent* PathFollowingComponent; // 0x2d0
	UBrainComponent* BrainComponent; // 0x2d8
	UAIPerceptionComponent* PerceptionComponent; // 0x2e0
	UPawnActionsComponent* ActionsComp; // 0x2e8
	UBlackboardComponent* Blackboard; // 0x2f0
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x2f8
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x300
	FScriptMulticastDelegate ReceiveMoveCompleted; // 0x308
};

struct UObjectReferencer {
	TArray<UObject*> ReferencedObjects; // 0x28
};

struct UAISenseConfig_Blueprint {
	UAISense_Blueprint* Implementation; // 0x48
};

struct UConnectionCallbackProxy {
	FScriptMulticastDelegate OnSuccess; // 0x28
	FScriptMulticastDelegate OnFailure; // 0x38
};

struct UGameUserSettings {
	bool bUseVSync; // 0x28
	bool bUseDynamicResolution; // 0x29
	uint32_t ResolutionSizeX; // 0x80
	uint32_t ResolutionSizeY; // 0x84
	uint32_t LastUserConfirmedResolutionSizeX; // 0x88
	uint32_t LastUserConfirmedResolutionSizeY; // 0x8c
	int32_t WindowPosX; // 0x90
	int32_t WindowPosY; // 0x94
	int32_t FullscreenMode; // 0x98
	int32_t LastConfirmedFullscreenMode; // 0x9c
	int32_t PreferredFullscreenMode; // 0xa0
	uint32_t Version; // 0xa4
	int32_t AudioQualityLevel; // 0xa8
	int32_t LastConfirmedAudioQualityLevel; // 0xac
	float FrameRateLimit; // 0xb0
	int32_t DesiredScreenWidth; // 0xb8
	bool bUseDesiredScreenHeight; // 0xbc
	int32_t DesiredScreenHeight; // 0xc0
	int32_t LastUserConfirmedDesiredScreenWidth; // 0xc4
	int32_t LastUserConfirmedDesiredScreenHeight; // 0xc8
	float LastRecommendedScreenWidth; // 0xcc
	float LastRecommendedScreenHeight; // 0xd0
	float LastCPUBenchmarkResult; // 0xd4
	float LastGPUBenchmarkResult; // 0xd8
	TArray<float> LastCPUBenchmarkSteps; // 0xe0
	TArray<float> LastGPUBenchmarkSteps; // 0xf0
	float LastGPUBenchmarkMultiplier; // 0x100
	bool bUseHDRDisplayOutput; // 0x104
	int32_t HDRDisplayOutputNits; // 0x108
	FScriptMulticastDelegate OnGameUserSettingsUINeedsUpdate; // 0x110
};

struct UPointLightComponent {
	char bUseInverseSquaredFalloff : 1; // 0x380
	float LightFalloffExponent; // 0x384
	float SourceRadius; // 0x388
	float SoftSourceRadius; // 0x38c
	float SourceLength; // 0x390
};

struct UAsyncActionHandleSaveGame {
	FScriptMulticastDelegate Completed; // 0x30
	USaveGame* SaveGameObject; // 0x60
};

struct UBTTask_ReserveSkill {
	int32_t ReserveRate; // 0x74
};

struct UMM_Popup_Occupation_SiegeTank {
	UMirImage* siegeWeaponImage; // 0x2f0
	UMirTextBlock* siegeWeaponTitle; // 0x2f8
	UMirTextBlock* siegeWeaponNote; // 0x300
	UMirTextBlock* siegeWeaponCount; // 0x308
	UMirTextBlock* siegeWeaponLevel; // 0x310
	UMirRichTextBlock* siegeWeaponBuffNote; // 0x318
	UMirTextBlock* weaponCost01; // 0x320
	UMirTextBlock* weaponCost02; // 0x328
	UMirTextBlock* weaponCost03; // 0x330
	UMirTextBlock* weaponCost04; // 0x338
	UMirImage* weaponCostIcon01; // 0x340
	UMirImage* weaponCostIcon02; // 0x348
	UMirImage* weaponCostIcon03; // 0x350
	UMirImage* weaponCostIcon04; // 0x358
	UMM_Common_Btn* confirmButton; // 0x360
	UMM_Common_Btn* cancelButton; // 0x368
	UMM_Common_Btn_Symbol* closeButton; // 0x370
};

struct URetainerBox {
	bool RenderOnInvalidation; // 0x120
	bool RenderOnPhase; // 0x121
	int32_t Phase; // 0x124
	int32_t PhaseCount; // 0x128
	UMaterialInterface* EffectMaterial; // 0x130
	FName TextureParameter; // 0x13c
};

struct UMM_SaleItemBasket {
	UWidgetAnimation* m_AniStart; // 0x308
	TArray<UMM_Slot_Inventory*> m_arSlot; // 0x310
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x320
	UMirTextBlock* m_Txt_SelectedCountValue; // 0x328
	UMirCheckBox* m_Check_Option; // 0x330
	UWrapBox* m_Wrap_List; // 0x338
	UMM_Common_Btn_IconText* m_CB_Filter; // 0x340
	UMM_Common_Btn* m_CB_Reset; // 0x348
	UMM_Common_Btn* m_CB_AutoSelect; // 0x350
	UMM_Common_Board_Notice* m_Common_Board_Notice; // 0x358
};

struct UMM_UIAction_HUD {
	EUserGaugeState State_HP; // 0x8a0
	EUserGaugeState State_MP; // 0x8a1
	float HPRate_Target; // 0x8a4
	TArray<int32_t> m_arrSubMenuSlotType; // 0x8e8
	int32_t m_iDungeonTracker_TitleID; // 0x8f8
	int32_t m_iDungeonTracker_MessageID; // 0x8fc
};

struct UNavArea {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct AAROriginActor {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bHidden : 1; // 0x58
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bBlockInput : 1; // 0x59
	char bCanBeDamaged : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x168
	FScriptMulticastDelegate OnTakeAnyDamage; // 0x178
	FScriptMulticastDelegate OnTakePointDamage; // 0x179
	FScriptMulticastDelegate OnTakeRadialDamage; // 0x17a
	FScriptMulticastDelegate OnActorBeginOverlap; // 0x17b
	FScriptMulticastDelegate OnActorEndOverlap; // 0x17c
	FScriptMulticastDelegate OnBeginCursorOver; // 0x17d
	FScriptMulticastDelegate OnEndCursorOver; // 0x17e
	FScriptMulticastDelegate OnClicked; // 0x17f
	FScriptMulticastDelegate OnReleased; // 0x180
	FScriptMulticastDelegate OnInputTouchBegin; // 0x181
	FScriptMulticastDelegate OnInputTouchEnd; // 0x182
	FScriptMulticastDelegate OnInputTouchEnter; // 0x183
	FScriptMulticastDelegate OnInputTouchLeave; // 0x184
	FScriptMulticastDelegate OnActorHit; // 0x185
	FScriptMulticastDelegate OnDestroyed; // 0x186
	FScriptMulticastDelegate OnEndPlay; // 0x187
	TArray<UActorComponent*> InstanceComponents; // 0x1e8
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1f8
};

struct UMovieSceneCameraShakeSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe0
	UCameraShake* ShakeClass; // 0x100
	float PlayScale; // 0x108
	ECameraAnimPlaySpace PlaySpace; // 0x10c
	FRotator UserDefinedPlaySpace; // 0x110
};

struct UMovieSceneParticleTrack {
	TArray<UMovieSceneSection*> ParticleSections; // 0x58
};

struct UDialogueVoice {
	EGrammaticalGender Gender; // 0x28
	EGrammaticalNumber Plurality; // 0x29
	FGuid LocalizationGUID; // 0x2c
};

struct UMovieSceneSkeletalAnimationOptimizedSection {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int32_t RowIndex; // 0xa8
	int32_t OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct UMM_Popup_GachaPercent {
	UMirWebBrowser* mWebBrowser; // 0x2e0
	UMM_Common_Btn_Symbol* mBtnClose; // 0x2e8
};

struct UInterpData {
	float InterpLength; // 0x28
	float PathBuildTime; // 0x2c
	TArray<UInterpGroup*> InterpGroups; // 0x30
	UInterpCurveEdSetup* CurveEdSetup; // 0x40
	float EdSectionStart; // 0x48
	float EdSectionEnd; // 0x4c
	char bShouldBakeAndPrune : 1; // 0x50
	UInterpGroupDirector* CachedDirectorGroup; // 0x58
	TArray<FName> AllEventNames; // 0x60
};

struct UMM_B_Ranking {
	UMM_CommonVerticalTabSet* m_VerticalSet; // 0x2f0
	UMirScrollBox* m_ScrollList; // 0x2f8
	UMM_Slot_Ranking_List* m_MyRankingSlot; // 0x300
	UMM_Ranking_Toggle* m_RankingToggle; // 0x308
	UMM_Common_Btn_Symbol* m_BtnReward; // 0x310
	UMirTextBlock* m_pTxtDetailValue; // 0x318
	UMM_Common_Board_Notice* m_pCommonBoardNotice; // 0x320
	UCanvasPanel* m_pCanMyInfo; // 0x328
	UCanvasPanel* m_pCanRankInfo; // 0x330
	UMirTextBlock* m_pTxtFirstName; // 0x338
	UMirTextBlock* m_pTxtFirstGuild; // 0x340
	UMirTextBlock* m_pTxtSecondsName; // 0x348
	UMirTextBlock* m_pTxtSecondGuild; // 0x350
	UMirButton* m_pBtnCloseDropBox; // 0x358
	UMirRichTextBlock* m_pRichTxtDesc; // 0x360
};

struct UMM_Popup_AutoSmelt {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMirTextBlock* m_Txt_SubTitle; // 0x2f8
	UMM_Common_Btn_Symbol* m_BtnClose; // 0x300
	UMM_Item_Make_Slider* m_NumInput; // 0x308
	UMM_Common_Btn* m_Btn_Init; // 0x310
	UMM_Common_Btn* m_Btn_ClosePopup; // 0x318
	UMM_Common_Btn* m_Btn_Ok; // 0x320
	UMM_Inventory_AutoSmelt* m_InvenSmelt; // 0x328
	int32_t m_AutoSmeltTitleStrID; // 0x330
	int32_t m_AutoSmeltSubTitleStrID; // 0x334
	int32_t m_CancelStrID; // 0x338
	int32_t m_AutoSmeltOKStrID; // 0x33c
	int32_t m_AutoSmeltCancelStrID; // 0x340
	int32_t m_AllCostDescStrID; // 0x344
	int32_t m_AddSmeltItemStrID; // 0x348
	int32_t m_StopSmeltStrID; // 0x34c
	float m_EffectPlayTime; // 0x350
	float m_DestroyTime; // 0x354
	float m_DestroyStartTime; // 0x358
	UPanelWidget* m_Panel_Notice; // 0x360
	UMM_Common_Board_Notice* m_Board_Notice; // 0x368
	UPanelWidget* m_Panel_Main; // 0x370
	TArray<UMM_Slot_Inventory*> m_AutoSmeltSlots; // 0x378
	UPanelWidget* m_Panel_ColstTotal; // 0x388
	UMirRichTextBlock* m_Txt_AllCostDesc; // 0x390
	UPanelWidget* m_Panel_Material; // 0x398
	UMirImage* m_Img_Material; // 0x3a0
	UMirTextBlock* m_Txt_Material; // 0x3a8
	UPanelWidget* m_Panel_Cost; // 0x3b0
	UMirImage* m_Img_Cost; // 0x3b8
	UMirTextBlock* m_Txt_Cost; // 0x3c0
	UPanelWidget* m_Panel_BlackIron; // 0x3c8
	UMirImage* m_Img_BlackIron; // 0x3d0
	UMirTextBlock* m_Txt_BlackIron; // 0x3d8
	UPanelWidget* m_Panel_NumSet; // 0x3e0
	UMirImage* m_Img_NumBlock; // 0x3e8
	UPanelWidget* m_Panel_SmeltEnd; // 0x3f0
	UMirTextBlock* m_Txt_SmeltEnd; // 0x3f8
	UPanelWidget* m_Panel_Effect; // 0x400
	UPanelWidget* m_Hrz_Close; // 0x408
	UPanelWidget* m_Hrz_Smelt; // 0x410
};

struct UInputKeyDelegateBinding {
	TArray<FBlueprintInputKeyDelegateBinding> InputKeyDelegateBindings; // 0x28
};

struct UWindDirectionalSourceComponent {
	float Strength; // 0x220
	float Speed; // 0x224
	float MinGustAmount; // 0x228
	float MaxGustAmount; // 0x22c
	float Radius; // 0x230
	char bPointWind : 1; // 0x234
};

struct UAnimStreamable {
	int32_t NumFrames; // 0xa8
	EAnimInterpolationType Interpolation; // 0xac
	FName RetargetSource; // 0xb0
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xc8
	bool bEnableRootMotion; // 0xd0
	ERootMotionRootLock RootMotionRootLock; // 0xd1
	bool bForceRootLock; // 0xd2
	bool bUseNormalizedRootMotionScale; // 0xd3
};

struct USkyLightComponent {
	ESkyLightSourceType SourceType; // 0x250
	UTextureCube* Cubemap; // 0x258
	float SourceCubemapAngle; // 0x260
	int32_t CubemapResolution; // 0x264
	float SkyDistanceThreshold; // 0x268
	bool bCaptureEmissiveOnly; // 0x26c
	bool bLowerHemisphereIsBlack; // 0x26d
	FLinearColor LowerHemisphereColor; // 0x270
	float OcclusionMaxDistance; // 0x280
	float Contrast; // 0x284
	float OcclusionExponent; // 0x288
	float MinOcclusion; // 0x28c
	FColor OcclusionTint; // 0x290
	EOcclusionCombineMode OcclusionCombineMode; // 0x294
	UTextureCube* BlendDestinationCubemap; // 0x338
};

struct UMM_Popup_Auction_CBack {
	UMM_Popup_Auction_ItemSlot* m_pItemSlot; // 0x2e8
	UMirRichTextBlock* m_pTxtSellCount; // 0x2f0
	UMirTextBlock* m_pTxtTheme; // 0x2f8
	UMM_Common_Btn_Symbol* m_pBtnClose; // 0x300
	UMM_Common_Btn* m_pBtnOk; // 0x308
	UMM_Common_Btn* m_pBtnCancle; // 0x310
};

struct UMM_Popup_GuildInviteSlot {
	UMM_GuildMemberPortrait* Portrait; // 0x2e0
	UMirTextBlock* txt_nickname; // 0x2e8
	UMirImage* img_class; // 0x2f0
	UMirTextBlock* txt_class; // 0x2f8
	UMirTextBlock* txt_level; // 0x300
	UMirButton* Btn_Main; // 0x308
	UMM_Common_Btn* btn_invite; // 0x310
	UMM_Common_CombatPoint* CombatPoint; // 0x318
};

struct UMaterialExpressionStaticBool {
	char Value : 1; // 0x40
};

struct UEnvQueryGenerator_OnCircle {
	FAIDataProviderFloatValue CircleRadius; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb0
	FAIDataProviderIntValue NumberOfPoints; // 0xe0
	EPointOnCircleSpacingMethod PointOnCircleSpacingMethod; // 0x110
	FEnvDirection ArcDirection; // 0x118
	FAIDataProviderFloatValue ArcAngle; // 0x138
	float AngleRadians; // 0x168
	UEnvQueryContext* CircleCenter; // 0x170
	bool bIgnoreAnyContextActorsWhenGeneratingCircle; // 0x178
	FAIDataProviderFloatValue CircleCenterZOffset; // 0x180
	FEnvTraceData TraceData; // 0x1b0
	char bDefineArc : 1; // 0x1e0
};

struct UNavArea_Obstacle {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UPlayMontageCallbackProxy {
	FScriptMulticastDelegate OnCompleted; // 0x28
	FScriptMulticastDelegate OnBlendOut; // 0x38
	FScriptMulticastDelegate OnInterrupted; // 0x48
	FScriptMulticastDelegate OnNotifyBegin; // 0x58
	FScriptMulticastDelegate OnNotifyEnd; // 0x68
};

struct UMM_ShortCutKeySlot {
	UMirTextBlock* txt_key; // 0x2e0
	FName default_key; // 0x2e8
};

struct UMM_UIAction_Dominion {
	int32_t m_iNowDominionID; // 0xc8
	int32_t m_iStartDominionID; // 0xcc
	uint64_t m_iTargetUserUID; // 0xd0
	FString m_strTargetName; // 0xd8
	int32_t m_iSelectPBS_ID; // 0xe8
	ECastleContents m_eOpenContentsPopup; // 0xec
	ECastleContents m_eReservationContents; // 0xf0
	TArray<bool> m_arrActiveTab; // 0xf8
};

struct UMM_B_CharInfo {
	bool m_bOtherUserInfo; // 0x2f0
	UMM_MyCharinfo* m_MyCharinfo; // 0x2f8
	UMM_CharAbility* m_CharAbility; // 0x300
	UImage* m_RenderTargetImage; // 0x308
	UImage* m_TargetPos; // 0x310
	UMirButton* m_Btn_Return; // 0x318
};

struct USkillCameraNotify {
	FSkillCameraValue SkillCameraValue; // 0x38
};

struct UProxyLODMeshSimplificationSettings {
	FName ProxyLODMeshReductionModuleName; // 0x38
};

struct UMM_B_DungeonCommon {
	UMirScrollBox* m_pSlotScrollBox; // 0x2f0
	UMM_Common_Btn_Cost* m_pBtnUseWarpItem; // 0x2f8
	UMM_Common_Btn_IconText* m_pBtnDirectWarp; // 0x300
	UMM_Common_Btn* m_pBtnCreate; // 0x308
	UMM_Common_Btn* m_pBtnNormalMove; // 0x310
	UMM_DungeonCommonTitle* wgtTitleBossInfo; // 0x318
	UMM_DungeonCommonTitle2* wgtTitleZoneInfo; // 0x320
	UMM_DungeonCommonTitle3* wgtTitleWaveBossInfo; // 0x328
	UMM_DungeonCommonCondition* wgtCondition; // 0x330
	UMM_DungeonCommonBossInfo* wgtBossInfo; // 0x338
	UMM_DungeonCommonTicket* wgtTicket; // 0x340
	UMM_GuildDevLock* wgtGuildDevelopLock; // 0x348
	UMM_DungeonCommonGuildExpTicket* wgtGuildExpedition; // 0x350
	UMM_DungeonCommonReward* wgtReward; // 0x358
};

struct UMovieSceneCapture {
	FSoftClassPath ImageCaptureProtocolType; // 0x38
	FSoftClassPath AudioCaptureProtocolType; // 0x50
	UMovieSceneImageCaptureProtocolBase* ImageCaptureProtocol; // 0x68
	UMovieSceneAudioCaptureProtocolBase* AudioCaptureProtocol; // 0x70
	FMovieSceneCaptureSettings Settings; // 0x78
	bool bUseSeparateProcess; // 0xe8
	bool bCloseEditorWhenCaptureStarts; // 0xe9
	FString AdditionalCommandLineArguments; // 0xf0
	FString InheritedCommandLineArguments; // 0x100
};

struct UAnimSingleNodeInstance {
	UAnimationAsset* CurrentAsset; // 0x268
	DelegateProperty PostEvaluateAnimEvent; // 0x270
};

struct AMM_CustomizingLevelActor {
	UPlanarReflectionComponent* m_pPlanarReflectionComp; // 0x218
	ACameraActor* m_pCamera; // 0x220
	AActor* m_pCustomizingTargetPoint; // 0x228
	AActor* m_CurrentActor; // 0x230
	int32_t m_ClassID; // 0x238
};

struct UMM_B_ItemExchange {
	UMM_CommonHorizontalTabSet* mHorizonTab; // 0x2f0
	UMM_CommonVerticalTabSet* mVerticalTab; // 0x2f8
	UMM_Common_Board_Notice* mNotice; // 0x300
	UMirScrollBox* mScrollBox; // 0x308
	UWrapBox* mWrapBox; // 0x310
	UMirImage* mImgExchangeGradeBG; // 0x318
	UMirRichTextBlock* mTxtExchangName; // 0x320
	UMirImage* mImgTargetEmpty; // 0x328
	UMirImage* mImgTargetGradeBG; // 0x330
	UMirImage* mImgTargetIcon; // 0x338
	UMirImage* mImgTargetNameBG; // 0x340
	UMirRichTextBlock* mTxtTargetName; // 0x348
	UMirImage* mImgTargetTier; // 0x350
	UMirImage* mImgCost; // 0x358
	UMirTextBlock* mTxtCost; // 0x360
	UMM_Common_Btn* mBtnExchange; // 0x368
	UMM_Item_Make_Slot_Registered* Slot_MakeItem; // 0x370
};

struct UMM_ServerGroup_Global {
	UMirTextBlock* m_Txt_Title; // 0x2f0
	UMirTextBlock* m_Txt_Ping; // 0x2f8
	UPanelWidget* m_Overlay_Maintenance; // 0x300
	UMirTextBlock* m_Txt_Maintenance; // 0x308
	UPanelWidget* m_Wrap_ServerSlot; // 0x310
};

struct UARTextureCameraDepth {
	EARDepthQuality DepthQuality; // 0xf0
	EARDepthAccuracy DepthAccuracy; // 0xf1
	bool bIsTemporallySmoothed; // 0xf2
};

struct UGameplayTagsList {
	FString ConfigFileName; // 0x28
	TArray<FGameplayTagTableRow> GameplayTagList; // 0x38
};

struct UMirWidgetComponent {
	EWidgetSpace Space; // 0x444
	EWidgetTimingPolicy TimingPolicy; // 0x445
	UUserWidget* WidgetClass; // 0x448
	FIntPoint DrawSize; // 0x450
	bool bManuallyRedraw; // 0x458
	bool bRedrawRequested; // 0x459
	float RedrawTime; // 0x45c
	FIntPoint CurrentDrawSize; // 0x468
	bool bDrawAtDesiredSize; // 0x470
	FVector2D Pivot; // 0x474
	bool bReceiveHardwareInput; // 0x47c
	bool bWindowFocusable; // 0x47d
	EWindowVisibility WindowVisibility; // 0x47e
	bool bApplyGammaCorrection; // 0x47f
	ULocalPlayer* OwnerPlayer; // 0x480
	FLinearColor BackgroundColor; // 0x488
	FLinearColor TintColorAndOpacity; // 0x498
	float OpacityFromTexture; // 0x4a8
	EWidgetBlendMode BlendMode; // 0x4ac
	bool bIsTwoSided; // 0x4ad
	bool TickWhenOffscreen; // 0x4ae
	UUserWidget* Widget; // 0x4b0
	UBodySetup* BodySetup; // 0x4d8
	UMaterialInterface* TranslucentMaterial; // 0x4e0
	UMaterialInterface* TranslucentMaterial_OneSided; // 0x4e8
	UMaterialInterface* OpaqueMaterial; // 0x4f0
	UMaterialInterface* OpaqueMaterial_OneSided; // 0x4f8
	UMaterialInterface* MaskedMaterial; // 0x500
	UMaterialInterface* MaskedMaterial_OneSided; // 0x508
	UTextureRenderTarget2D* RenderTarget; // 0x510
	UMaterialInstanceDynamic* MaterialInstance; // 0x518
	bool bAddedToScreen; // 0x520
	bool bEditTimeUsable; // 0x521
	bool bUsePointSampling; // 0x522
	bool bDontUseZtest; // 0x523
	bool bUseDepthScaling; // 0x524
	float ScreenZOffset; // 0x528
	FName SharedLayerName; // 0x530
	int32_t LayerZOrder; // 0x538
	EWidgetGeometryMode GeometryMode; // 0x53c
	float CylinderArcAngle; // 0x540
};

struct UMM_ItemSealing_Material_Slot {
	bool AutoUpdateItemName; // 0x3e8
	UMirImage* m_Img_GradeBgEffect; // 0x3f0
	UMirImage* m_ImgEquipMaark; // 0x3f8
	UMirImage* m_ImgTypeImage; // 0x400
	UMirButton* m_BtnSetItem; // 0x408
	UPanelWidget* m_ImgRemoveItemPanel; // 0x410
	UMM_Common_Btn_Symbol* m_ImgRemoveItemBtn; // 0x418
	UMirTextBlock* m_TxtItemSmeltingLevel; // 0x420
	UMirImage* m_ImgPlusSpecial; // 0x428
	UMM_ItemMake_Switch* Material_Switch; // 0x430
	EMakeItemType m_MakeType; // 0x438
	UMirImage* m_Img_Tier; // 0x440
	UMirTextBlock* m_TxtItemName; // 0x448
	UMirTextBlock* m_TxtCount; // 0x450
	UMirImage* m_Img_UserLock; // 0x458
};

struct UInputVectorAxisDelegateBinding {
	TArray<FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings; // 0x28
};

struct UMM_Popup_Restore_Item_Slot {
	UMirTextBlock* m_pTxtName; // 0x2e0
	UMirTextBlock* m_pTxtRemainTime; // 0x2e8
	UMirTextBlock* m_pTxtTime; // 0x2f0
	UMirImage* m_pImgFocus; // 0x2f8
	UMirImage* m_pImgDiable; // 0x300
	UMirButton* m_pBtnClick; // 0x308
	UMirImage* m_pImgClock; // 0x310
	UHorizontalBox* m_pHorRemain; // 0x318
};

struct ACharSelCameraControl {
	AActor* m_pBackupCameraActor; // 0x938
};

struct UAsyncTask_LoadXRDeviceVisComponent {
	FScriptMulticastDelegate OnModelLoaded; // 0x30
	FScriptMulticastDelegate OnLoadFailure; // 0x40
	UPrimitiveComponent* SpawnedComponent; // 0x58
};

struct UMovieSceneIntegerTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UMaterialExpressionDistance {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UMM_Popup_BlackIronShop_Sell {
	UMirTextBlock* txt_possession; // 0x2e0
	UMirTextBlock* txt_blackiron_name; // 0x2e8
	UMirImage* img_likely_return; // 0x2f0
	UMirTextBlock* txt_likely_return; // 0x2f8
	UMirRichTextBlock* txt_remain_time; // 0x300
	UMM_Item_Make_Slider* item_make_slider_count; // 0x308
	UMM_Item_Make_Slider* item_make_slider_price; // 0x310
	UMM_Common_Btn_Symbol* btn_close; // 0x318
	UMM_Common_Btn* btn_confirm; // 0x320
	UMM_Common_Btn* Btn_Cancel; // 0x328
	UMM_Common_Btn* btn_preview; // 0x330
	UMM_Slot_Material* slot_black_iron; // 0x338
	UMirTextBlock* txt_taxRate; // 0x340
	UMirTextBlock* txt_is_full; // 0x348
	UMirCanvasPanel* cp_preview; // 0x350
	UMM_Common_Btn_Symbol* btn_preview_close; // 0x358
	UMM_GuildIcon* guild_icon; // 0x360
	UMirRichTextBlock* txt_guild_name; // 0x368
	UMirTextBlock* txt_remain_count; // 0x370
	UMirTextBlock* txt_remain_time_preview; // 0x378
	UMirScrollBox* sb_preview; // 0x380
};

struct UMaterialExpressionActorPositionWS {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct APaperFlipbookActor {
	UPaperFlipbookComponent* RenderComponent; // 0x218
};

struct URendererOverrideSettings {
	char bSupportAllShaderPermutations : 1; // 0x38
	char bForceRecomputeTangents : 1; // 0x38
};

struct UAnimCurveCompressionSettings {
	UAnimCurveCompressionCodec* Codec; // 0x28
};

struct UMirMobileSettings {
	int32_t MajorVersion; // 0x38
	int32_t MinorVersion; // 0x3c
	int32_t PatchVersion; // 0x40
	float MaxFPS; // 0x44
	EPakSearchOrder PakSearchOrder; // 0x48
	int32_t NotEnoughMemoryThresholdMB; // 0x4c
	bool SkipPreloadingOnNotEnoughMemory; // 0x50
	bool ConditionalFullPurgeOnAsyncPackageLoader; // 0x51
	bool GarbageCollectionPerOneSecondOnEditor; // 0x52
	float VisualHelperMaxDrawDistance; // 0x54
	FString AdjustAppToken_AosIos; // 0x58
	FString AdjustAppToken_OneStore; // 0x68
	FString AdjustAppToken_Galaxy; // 0x78
	FString AdjustSecretId; // 0x88
	FString AdjustInfo1; // 0x98
	FString AdjustInfo2; // 0xa8
	FString AdjustInfo3; // 0xb8
	FString AdjustInfo4; // 0xc8
	int32_t CheckMacro_ListCount; // 0xd8
	int32_t CheckMacro_DetectCount; // 0xdc
	float CheckMacro_ClickDistanceRatio; // 0xe0
	float CheckMacro_MoveDistanceRatio; // 0xe4
	bool AlwaysUpdateCullDistanceOnEditor; // 0xe8
};

struct ASoundManagerActor_BP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x428
	UAudioComponent* Dialogue_Audio; // 0x430
	UAudioComponent* BGM_Audio; // 0x438
	USceneComponent* DefaultSceneRoot; // 0x440
};

struct UDistributionFloatConstant {
	float Constant; // 0x38
};

struct UARSaveWorldAsyncTaskBlueprintProxy {
	FScriptMulticastDelegate OnSuccess; // 0x50
	FScriptMulticastDelegate OnFailed; // 0x60
};

struct UMM_Popup_DominionGuildMemberSlot {
	UMirImage* img_online; // 0x2e0
	UMM_GuildMemberPortrait* Portrait; // 0x2e8
	UMirTextBlock* txt_grade; // 0x2f0
	UMirTextBlock* txt_nickname; // 0x2f8
	UMirTextBlock* txt_custom_title; // 0x300
	UMirTextBlock* txt_level; // 0x308
	UMirImage* img_class; // 0x310
	UMirTextBlock* txt_class; // 0x318
	UMirTextBlock* txt_combat_power; // 0x320
	UMirTextBlock* txt_daily_contribution; // 0x328
	UMirTextBlock* txt_total_contribution; // 0x330
	UMirTextBlock* txt_official; // 0x338
	UMirTextBlock* Txt_Title; // 0x340
	UMirImage* Img_Select; // 0x348
	UMirButton* btn_select; // 0x350
};

struct AMM_UnifiedGameMode {
	UMaterialParameterCollection* m_pBackgroundParamCollection; // 0x330
	AMM_Monster* m_pFriendMonster; // 0x338
	AMM_CharacterPawnBase* m_pSelectTarget; // 0x340
	AMM_CharacterPawnBase* m_pLockOnTarget; // 0x348
	bool EndLevelTravel; // 0x350
	AUIBackGroundActor* m_pUIBackGroundActor; // 0x400
	AMM_SituationDirectiveEffect* SituationDirectiveActor; // 0x408
	TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>> MapQuestArrivalDisplayActor; // 0x410
	AMM_HQPlayerReferenceActor* m_pHQPlayer; // 0x460
	AMM_PortraitCaptureActor* m_pPortraitCaptureActor; // 0x468
	UCanvasRenderTarget2D* m_pPlayerPortraitRenderTarget; // 0x470
	AContentsLightManager* m_pContentsLightManager; // 0x478
	FString MyEditorCulture; // 0x490
};

struct UMM_Common_Popup_Check {
	UMirTextBlock* m_Txt_Title; // 0x2e0
	UMirRichTextBlock* m_RTxt_Message; // 0x2e8
	UPanelWidget* m_Hrz_Notice; // 0x2f0
	UMirTextBlock* m_Txt_Notice; // 0x2f8
	UMirTextBlock* m_arTxt_Check[0x4]; // 0x300
	UMM_Common_Btn* m_arCB[0x2]; // 0x320
	UMM_Common_Btn_Symbol* m_CB_Close; // 0x330
	UMirButton* m_Btn_Bg; // 0x338
};

struct UTrailAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName FirstSocketName; // 0x38
	FName SecondSocketName; // 0x40
	ETrailWidthMode WidthScaleMode; // 0x48
	FName WidthScaleCurve; // 0x4c
	char bRecycleSpawnedSystems : 1; // 0x54
};

struct UMultiLineEditableTextBox {
	FText Text; // 0x128
	FText HintText; // 0x140
	DelegateProperty HintTextDelegate; // 0x158
	FEditableTextBoxStyle WidgetStyle; // 0x168
	FTextBlockStyle TextStyle; // 0x958
	bool bIsReadOnly; // 0xbc0
	bool AllowContextMenu; // 0xbc1
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0xbc2
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xbc3
	USlateWidgetStyleAsset* Style; // 0xbc8
	FSlateFontInfo Font; // 0xbd0
	FLinearColor ForegroundColor; // 0xc20
	FLinearColor BackgroundColor; // 0xc30
	FLinearColor ReadOnlyForegroundColor; // 0xc40
	FScriptMulticastDelegate OnTextChanged; // 0xc50
	FScriptMulticastDelegate OnTextCommitted; // 0xc60
};

struct ATextRenderActor {
	UTextRenderComponent* TextRender; // 0x218
};

struct UMM_GuildMemberSlotByGradeSlot {
	TArray<UMM_GuildMemberSlot*> lst_slot; // 0x2e0
};

struct UFirebaseVariant {
	VariantType DataType; // 0x28
	int64_t Int64Value; // 0x30
	float FloatValue; // 0x38
	bool BoolValue; // 0x3c
	FString StringValue; // 0x40
	TArray<UFirebaseVariant*> VectorValue; // 0x50
	TMap<FString, UFirebaseVariant*> MapValue; // 0x60
};

struct UMM_Party_LeftTab_Slot {
	EStageType_PartyLeftTab ETabType; // 0x2f0
	UMirImage* m_Img_Select; // 0x2f8
	UMirTextBlock* m_Txt_TabName; // 0x300
	UMirButton* m_Btn_Main; // 0x308
	UGridPanel* m_Effect_Selected; // 0x310
	UEffectWidgetBase* m_Effect_Click; // 0x318
};

struct UWNFreeStopHingeModule {
	UWNAndroidDeviceState* DeviceStateListener; // 0x48
	TWeakObjectPtr<UMM_GameViewportClient> GameViewportClientWeakPtr; // 0x50
	bool UpdateFlag; // 0x58
	float LerpAlpha; // 0x5c
	FVector2D CurrentTargetSize; // 0x60
	FVector2D StartTargetSize; // 0x68
	FVector2D EndTargetSize; // 0x70
	FVector2D ViewPortSize; // 0x78
	FVector4 DeviceSafePadding; // 0x80
	FVector4 HalfOpendSafePadding; // 0x90
	FVector4 CurrentSafePadding; // 0xa0
	FVector4 StartSafePadding; // 0xb0
	FVector4 EndSafePadding; // 0xc0
	EPostureDeviceState CurrentDeviceState; // 0xd0
	EPostureDeviceState Current_UI_State; // 0xd4
};

struct UMM_Common_Btn_Translation {
	UMirButton* m_BtnMain; // 0x2f0
	UWidgetAnimation* m_Ani_Translation; // 0x2f8
	UMirImage* m_Img_Translate; // 0x300
	UMirImage* m_Img_Inprogress; // 0x308
};

struct UMM_Slot_Inventory_Dummy {
	UMirImage* m_Image_BG; // 0x2e0
};

struct UPathFollowingComponent {
	UNavMovementComponent* MovementComp; // 0xe8
	ANavigationData* MyNavData; // 0xf8
};

struct UMM_PopupGuildGivePersonalSlot {
	UMirTextBlock* txt_grade; // 0x2e0
	UMirImage* img_online; // 0x2e8
	UMM_GuildMemberPortrait* Portrait; // 0x2f0
	UMirTextBlock* txt_nickname; // 0x2f8
	UMirTextBlock* txt_custom_title; // 0x300
	UMirTextBlock* txt_level; // 0x308
	UMirImage* img_class; // 0x310
	UMirTextBlock* txt_class; // 0x318
	UMirTextBlock* txt_combat_power; // 0x320
	UMirTextBlock* txt_daily_contribution; // 0x328
	UMirCheckBox* cb_selected; // 0x330
};

struct UMM_Customizing_ComponentTitle {
	UMirTextBlock* m_pTextBlock; // 0x2e0
	int32_t m_TitleID; // 0x2e8
	bool m_bLoad; // 0x2ec
};

struct UBTDecorator_ForceSuccess {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct UPlayerInput {
	TArray<FKeyBind> DebugExecBindings; // 0x120
	TArray<FName> InvertedAxis; // 0x160
};

struct UMM_Customizing_My_Costume {
	UWrapBox* m_ListBox; // 0x300
	TArray<UMM_Customizing_ListItem*> m_ListSlotArray; // 0x308
	UMirTextBlock* m_Empty_Title; // 0x318
};

struct USoundSourceBus {
	ESourceBusChannels SourceBusChannels; // 0x378
	float SourceBusDuration; // 0x37c
	char bAutoDeactivateWhenSilent : 1; // 0x380
};

struct UMaterialExpressionArccosine {
	FExpressionInput Input; // 0x40
};

struct AMiniGame_PlayerActor {
	float m_fCurFlipbookLength; // 0x218
	AMiniGame_ManagerActor* m_MiniGameActor; // 0x220
};

struct AHUD {
	APlayerController* PlayerOwner; // 0x218
	char bLostFocusPaused : 1; // 0x220
	char bShowHUD : 1; // 0x220
	char bShowDebugInfo : 1; // 0x220
	int32_t CurrentTargetIndex; // 0x224
	char bShowHitBoxDebugInfo : 1; // 0x228
	char bShowOverlays : 1; // 0x228
	char bEnableDebugTextShadow : 1; // 0x228
	TArray<AActor*> PostRenderedActors; // 0x230
	TArray<FName> DebugDisplay; // 0x248
	TArray<FName> ToggledDebugCategories; // 0x258
	UCanvas* Canvas; // 0x268
	UCanvas* DebugCanvas; // 0x270
	TArray<FDebugTextInfo> DebugTextList; // 0x278
	AActor* ShowDebugTargetDesiredClass; // 0x288
	AActor* ShowDebugTargetActor; // 0x290
};

struct UParticleModuleEventReceiverSpawn {
	FRawDistributionFloat SpawnCount; // 0x40
	char bUseParticleTime : 1; // 0x70
	char bUsePSysLocation : 1; // 0x70
	char bInheritVelocity : 1; // 0x70
	FRawDistributionVector InheritVelocityScale; // 0x78
	TArray<UPhysicalMaterial*> PhysicalMaterials; // 0xc0
	char bBanPhysicalMaterials : 1; // 0xd0
};

struct UMaterialExpressionMaterialAttributeLayers {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
	FMaterialAttributesInput Input; // 0x58
	FMaterialLayersFunctions DefaultLayers; // 0x70
	TArray<UMaterialExpressionMaterialFunctionCall*> LayerCallers; // 0xb0
	int32_t NumActiveLayerCallers; // 0xc0
	TArray<UMaterialExpressionMaterialFunctionCall*> BlendCallers; // 0xc8
	int32_t NumActiveBlendCallers; // 0xd8
	bool bIsLayerGraphBuilt; // 0xdc
};

struct UInterpTrackVectorBase {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UParticleModuleLocationPrimitiveCylinder {
	char RadialVelocity : 1; // 0xb0
	FRawDistributionFloat StartRadius; // 0xb8
	FRawDistributionFloat StartHeight; // 0xe8
	CylinderHeightAxis HeightAxis; // 0x118
};

struct UMM_ItemSynthesis_Inven {
	int32_t MIN_SLOT_COUNT; // 0x2f0
	int32_t MAX_SLOT_LINE; // 0x2f4
	UMirScrollBox* m_Scr_Main; // 0x2f8
	UPanelWidget* m_Wrap_Main; // 0x300
};

struct UMM_Popup_Chat_Setting {
	UMM_Common_Btn* Btn_BlockUser; // 0x2e0
	UMM_Common_Btn* Btn_BlockList; // 0x2e8
	UMM_Common_Btn* Btn_RenderOpacity; // 0x2f0
	UMM_Common_Btn_Symbol* btn_close; // 0x2f8
	UMirCheckBox* Toggle_HideSystemChannel; // 0x300
	UMirCheckBox* Toggle_HideGuildSystemMessage; // 0x308
};

struct USkeletalMeshSimplificationSettings {
	FName SkeletalMeshReductionModuleName; // 0x38
};

struct ULightmassPortalComponent {
	UBoxComponent* PreviewBox; // 0x220
};

struct UMM_New_Force_Skill_Slot {
	UMirImage* m_C_Img_Icon; // 0x2e0
	UMirTextBlock* m_C_Txt_Skill_Point; // 0x2e8
	UMirTextBlock* m_C_Txt_Skill_State; // 0x2f0
	UMirButton* m_C_Btn_Skill_Slot; // 0x2f8
};

struct UMM_Popup_ServerVisitSelect {
	UMM_Common_Btn_Symbol* m_Btn_Close; // 0x2f0
	UHorizontalBox* m_Hrz_Contents; // 0x2f8
	TArray<UMM_Popup_ServerVisitSelect_Slot*> m_arrContentsSlot; // 0x300
};

struct UMM_Skill_Ability {
	UMirRichTextBlock* m_C_RTxt_Main; // 0x2e0
	UPanelWidget* m_C_Grid_Effect; // 0x2e8
	UEffectWidgetBase* m_Effect; // 0x2f0
};

struct UMM_SortListBtn {
	ESortListBtn_Location m_eLocation; // 0x2e0
	FVector2D m_vAdjustLocation; // 0x2e4
	TArray<int32_t> arSTRING_ID_FRIEND_BTN; // 0x2f0
	UMirButton* m_Btn_Main; // 0x318
	UPanelWidget* m_Overlay_List; // 0x320
	UPanelWidget* m_Vrt_List; // 0x328
	UMirImage* m_Img_ListBg; // 0x330
	TArray<UMM_SortBtn*> m_arSortBtn; // 0x338
};

struct UInterpTrackInstEvent {
	float LastUpdatePosition; // 0x28
};

struct ULightComponent {
	float Temperature; // 0x250
	float MaxDrawDistance; // 0x254
	float MaxDistanceFadeRange; // 0x258
	char bUseTemperature : 1; // 0x25c
	int32_t ShadowMapChannel; // 0x260
	float MinRoughness; // 0x268
	float SpecularScale; // 0x26c
	float ShadowResolutionScale; // 0x270
	float ShadowBias; // 0x274
	float ShadowSlopeBias; // 0x278
	float ShadowSharpen; // 0x27c
	float ContactShadowLength; // 0x280
	char ContactShadowLengthInWS : 1; // 0x284
	char InverseSquaredFalloff : 1; // 0x284
	char CastTranslucentShadows : 1; // 0x284
	char bCastShadowsFromCinematicObjectsOnly : 1; // 0x284
	char bAffectDynamicIndirectLighting : 1; // 0x284
	char bForceCachedShadowsForMovablePrimitives : 1; // 0x284
	FLightingChannels LightingChannels; // 0x288
	UMaterialInterface* LightFunctionMaterial; // 0x290
	FVector LightFunctionScale; // 0x298
	UTextureLightProfile* IESTexture; // 0x2a8
	char bUseIESBrightness : 1; // 0x2b0
	float IESBrightnessScale; // 0x2b4
	float LightFunctionFadeDistance; // 0x2b8
	float DisabledBrightness; // 0x2bc
	char bEnableLightShaftBloom : 1; // 0x2c0
	float BloomScale; // 0x2c4
	float BloomThreshold; // 0x2c8
	float BloomMaxBrightness; // 0x2cc
	FColor BloomTint; // 0x2d0
	bool bUseRayTracedDistanceFieldShadows; // 0x2d4
	float RayStartOffsetDepthScale; // 0x2d8
};

struct UQueryFriends {
	FScriptMulticastDelegate OnSuccess; // 0x30
	FScriptMulticastDelegate OnFail; // 0x40
};

struct AEmitterCameraLensEffectBase {
	UParticleSystem* PS_CameraEffect; // 0x268
	UParticleSystem* PS_CameraEffectNonExtremeContent; // 0x270
	APlayerCameraManager* BaseCamera; // 0x278
	FTransform RelativeTransform; // 0x280
	float BaseFOV; // 0x2b0
	char bAllowMultipleInstances : 1; // 0x2b4
	char bResetWhenRetriggered : 1; // 0x2b4
	TArray<AEmitterCameraLensEffectBase*> EmittersToTreatAsSame; // 0x2b8
	float DistFromCamera; // 0x2c8
};

struct UMM_Slot_Ranking_List {
	UMirButton* m_SelectBtn; // 0x2e0
	UMirImage* m_MyBGImg; // 0x2e8
	UMirImage* m_UserSelectBGImg; // 0x2f0
	UMirImage* m_MyRankingImg; // 0x2f8
	UMirImage* m_RankIconImg; // 0x300
	UMirImage* m_ProfileImg; // 0x308
	UMirTextBlock* m_NameTxt; // 0x310
	UMirImage* m_GuildFrameImg; // 0x318
	UMirImage* m_GuildIconImg; // 0x320
	UMirTextBlock* m_GuildNameTxt; // 0x328
	UMirImage* m_ClassIconImg; // 0x330
	UMirTextBlock* m_BattlePointTxt; // 0x338
	UMirTextBlock* m_BattlePointTxt_NoIcon; // 0x340
	UMirTextBlock* m_RankCountTxt; // 0x348
	UMirTextBlock* m_NoGuildTxt; // 0x350
	UMirImage* m_ProfileImgGuild; // 0x368
	UMirTextBlock* m_NameTxtGuild; // 0x370
	UMirImage* m_GuildFrameImgGuild; // 0x378
	UMirImage* m_GuildIconImgGuild; // 0x380
	UMirTextBlock* m_GuildNameTxtGuild; // 0x388
	UMirImage* m_LineImg_2; // 0x390
	UMirImage* m_LineImg_3; // 0x398
	UMirImage* m_LineImg_4; // 0x3a0
};

struct UAITask_LockLogic {
	AAIController* OwnerController; // 0x68
};

struct AOcclusionVolume {
	char bEnabled : 1; // 0x250
	char bRenderExternal : 1; // 0x250
	TArray<AActor*> ForceIncludeActors; // 0x258
	TArray<AActor*> ForceExcludeActors; // 0x268
	int32_t OcclusionVolumeId; // 0x278
};

struct UMM_Friend_Bottom {
	UMirTextBlock* m_Txt_TabName; // 0x2f0
	UMirTextBlock* m_Txt_Count; // 0x2f8
	UMirTextBlock* m_Txt_Message; // 0x300
	UMM_Common_Btn* m_C_Btn_All_Accept; // 0x308
	UMM_Common_Btn* m_C_Btn_All_Refuse; // 0x310
	UMM_Common_Btn* m_C_Btn_All_Request; // 0x318
	UMM_Common_Btn* m_C_Btn_All_Cancel; // 0x320
	UMM_Common_Btn* m_C_Btn_Refresh; // 0x328
};

struct UParticleModuleKillBox {
	FRawDistributionVector LowerLeftCorner; // 0x30
	FRawDistributionVector UpperRightCorner; // 0x78
	char bAbsolute : 1; // 0xc0
	char bKillInside : 1; // 0xc0
	char bAxisAlignedAndFixedSize : 1; // 0xc0
};

struct UAnimSequenceBase {
	TArray<FAnimNotifyEvent> Notifies; // 0x80
	float SequenceLength; // 0x90
	float RateScale; // 0x94
	FRawCurveTracks RawCurveData; // 0x98
};

struct UMM_HUDVirtualJoystick {
	UImage* m_pImg_PadBG; // 0x2e0
	UImage* m_pImg_Direction; // 0x2e8
	UImage* m_pImg_Thumb; // 0x2f0
	float m_fResetTime; // 0x2f8
	UCanvasPanel* m_pCanInteractionSize; // 0x300
	UCanvasPanel* m_pCan_VirtualJoystick; // 0x308
};

struct UTextureLightProfile {
	float Brightness; // 0x100
	float TextureMultiplier; // 0x104
};

struct UMaterialExpressionDivide {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMM_ClosedTraining_Slot {
	FLinearColor m_LockColor; // 0x2f0
	FLinearColor m_NormalColor; // 0x300
	UMM_ClosedTraining_Slot_BaseSphere* m_Slot_BaseSphere; // 0x310
	TArray<UMirImage*> m_Img_FXList; // 0x318
	TArray<UMirImage*> m_Img_SelectedList; // 0x328
	UMirImage* m_Img_Lock; // 0x338
	UMirImage* m_Img_Indicator; // 0x340
	UMirTextBlock* m_Txt_AbilityName; // 0x348
	UMirButton* m_Btn_Slot; // 0x350
};

struct UMM_Customizing_TextCategory {
	UMirImage* m_pSelectImage; // 0x2e0
	UMirTextBlock* m_CategoryNameText; // 0x2e8
	UMirButton* m_CategorySelectBtn; // 0x2f0
};

struct UButtonStyleAsset {
	FButtonStyle ButtonStyle; // 0x28
};

struct UAvoidanceManager {
	float DefaultTimeToLive; // 0x30
	float LockTimeAfterAvoid; // 0x34
	float LockTimeAfterClean; // 0x38
	float DeltaTimeToPredict; // 0x3c
	float ArtificialRadiusExpansion; // 0x40
	float TestHeightDifference; // 0x44
	float HeightCheckMargin; // 0x48
};

struct UMaterialExpressionReflectionVectorWS {
	FExpressionInput CustomWorldNormal; // 0x40
	char bNormalizeCustomWorldNormal : 1; // 0x54
};

struct UMM_DeviceInfo {
	bool m_bUse_NetworkType; // 0x2e0
	bool m_bUse_Battery; // 0x2e1
	bool m_bUse_Time; // 0x2e2
	bool m_bUse_ExpSpacer; // 0x2e3
	float m_fUpdateSignalStrengthInterval; // 0x2e4
	float m_fUpdateBatteryInterval; // 0x2e8
	float m_fUpdateTimeInterval; // 0x2ec
	USpacer* m_Spc_NetworkType; // 0x308
	UPanelWidget* m_Overlay_NetworkType; // 0x310
	UMirImage* m_Img_WiFi; // 0x318
	UMirTextBlock* m_Txt_Mobile; // 0x320
	USpacer* m_Spc_Battery; // 0x328
	UPanelWidget* m_Can_Battery; // 0x330
	UMirProgressBar* m_Prg_Battery; // 0x338
	UMirImage* m_Img_BatteryCharge; // 0x340
	UMirTextBlock* m_Txt_Battery; // 0x348
	USpacer* m_Spc_Time; // 0x350
	UMirImage* m_Img_Time; // 0x358
	UMirTextBlock* m_Txt_Time; // 0x360
	USpacer* m_Spc_Exp; // 0x368
	UPanelWidget* m_Hrz_Ping; // 0x370
	UMirImage* m_Img_Ping; // 0x378
	UMirTextBlock* m_Txt_Ping; // 0x380
};

struct UMM_PatchMovieWidget {
	UMediaPlayer* m_MediaPlayer; // 0x2e0
	UMediaTexture* m_MediaTexture; // 0x2e8
	UMediaSource* m_Movie_Patch; // 0x2f0
	AMediaSoundActor* m_MediaSoundActor; // 0x300
	UMM_VolumeController* m_VolumeController; // 0x308
};

struct ASpectatorBeaconHost {
	USpectatorBeaconState* State; // 0x240
	bool bLogoutOnSessionTimeout; // 0x2a8
	float SessionTimeoutSecs; // 0x2ac
	float TravelSessionTimeoutSecs; // 0x2b0
};

struct UMM_Popup_Guild_Creation {
	UWidgetAnimation* m_AniStart; // 0x2f0
	UMirImage* img_frame; // 0x308
	UMirImage* Img_Symbol; // 0x310
	UMirTextBlock* Txt_GuildName; // 0x318
	UMirTextBlock* Txt_Message_01; // 0x320
	UMirTextBlock* Txt_Message_02; // 0x328
};

struct APlanarReflection {
	UPlanarReflectionComponent* PlanarReflectionComponent; // 0x228
	bool bShowPreviewPlane; // 0x230
};

struct AAutoFlightTrigger {
	bool m_bForceJump; // 0x238
	int32_t m_TriggerID; // 0x23c
	EAutoFlightGroup m_TriggerGroup; // 0x240
	FVector m_DestLocation; // 0x244
	TArray<FVector> m_MovePathPoint; // 0x250
	TArray<float> m_RandomYawArray; // 0x260
	float m_Radius; // 0x270
	bool m_bQuestTrigger; // 0x274
	TArray<FAutoFlightData> m_AutoFlightDataArray; // 0x280
};

struct UWorldComposition {
	TArray<ULevelStreaming*> TilesStreaming; // 0x48
	double TilesStreamingTimeThreshold; // 0x58
	bool bLoadAllTilesDuringCinematic; // 0x60
	bool bRebaseOriginIn3DSpace; // 0x61
	float RebaseOriginDistance; // 0x64
};

struct UNullAudioCaptureProtocol {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct AProjectile_TargetCurve {
	USphereComponent* m_pCollSphereComp; // 0x218
	UParticleSystemComponent* m_pShotParticleComp; // 0x220
	UParticleSystemComponent* m_pImpactParticleComp; // 0x228
};

struct AMM_SparringObject {
	UParticleSystemComponent* m_RingEffect; // 0x520
	int32_t m_SparringRange; // 0x528
	int32_t m_SparringWarningRange; // 0x52c
};

struct UUIParticleEmitter {
	UUIParticleEmitterAsset* Asset; // 0x108
	FScriptMulticastDelegate EventOnEnd; // 0x110
	char bPlayParticle : 1; // 0x120
	bool IsPlaying; // 0x121
};

struct UOverlaySlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UInterpTrackInstVisibility {
	EVisibilityTrackAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
};

struct UMM_Hud_OccupationBoard {
	UWidgetAnimation* m_AniOpen; // 0x300
	UWidgetSwitcher* m_Switcher_Hud; // 0x308
	UMirTextBlock* m_txtBattlePrepare; // 0x310
	UMirTextBlock* m_txtBattleEnd; // 0x318
	UMirTextBlock* m_txtBattlePrepareTime; // 0x320
	UMirTextBlock* m_txtBattleEndTime; // 0x328
	UMirRichTextBlock* m_txtBattleWinGuild; // 0x330
	UMirCanvasPanel* m_panelBattleExit; // 0x338
	UMirTextBlock* m_txtKillPoint; // 0x340
	UMirTextBlock* m_txtOccupationPoint; // 0x348
	UMirTextBlock* m_txtMonsterKillPoint; // 0x350
	UMirCanvasPanel* m_cpGateLever; // 0x358
	UMirImage* m_imgGateLeverBg; // 0x360
	UMirImage* m_imgGateLeverIcon; // 0x368
	UMirTextBlock* m_txtGateLeverPoint; // 0x370
	UMirCanvasPanel* m_cpCommonMenu; // 0x378
	UMM_Common_ToolTipBtn* m_btn_CommonTooltip; // 0x380
	UMirImage* m_imgCommonBg; // 0x388
	UMirImage* m_imgCommonIcon; // 0x390
	UMirTextBlock* m_txtCommonPoint; // 0x398
	UMirCanvasPanel* m_cpRevivalFlag; // 0x3a0
	UMirImage* m_imgRevivalFlagBg; // 0x3a8
	UMirImage* m_imgRevivalFlagIcon; // 0x3b0
	UMirTextBlock* m_txtRevivalFlagPoint; // 0x3b8
	UMM_Common_Btn_Symbol* Btn_Exit; // 0x3c0
};

struct ATriggerWayPoint {
	ATriggerWayPoint* Next; // 0x278
	ATriggerWayPoint* prev; // 0x280
};

struct UInt32Binding {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UCharLocalSave {
	int64_t m_iCharUID; // 0x28
	TArray<int64_t> m_arNewItemUID; // 0x30
	TSet<int32_t> m_arSkippableSequenceStage; // 0x40
	TArray<int32_t> m_arContentsOpen_NeedAction; // 0x90
	EPKModeType m_ePKModeType; // 0xa0
	EPKModeType m_ePrePKModeType; // 0xa1
	TMap<FName, int32_t> m_mapIntSaveData; // 0xa8
	TSet<int32_t> m_arOpenedStageInfo; // 0xf8
	TMap<int32_t, bool> m_HUDAutoSetSkill; // 0x148
	TMap<int32_t, bool> m_HUDIncreaseSkillUse; // 0x198
	int32_t m_iHPPotionID; // 0x1e8
	int32_t m_iMPPotionID; // 0x1ec
	TArray<int32_t> m_arNewRelationID; // 0x1f0
	TArray<int32_t> m_arMapTrace; // 0x200
	TArray<int32_t> m_arrAuctionBookMark; // 0x210
	TArray<uint32_t> m_iSeasonStart; // 0x220
	int32_t m_UIShopBannerInitDay; // 0x230
	bool m_bIsUIShopBannerSkip; // 0x234
	TArray<int64_t> m_arrNewGuildWanted; // 0x238
	TArray<int64_t> m_arNewCostumeID; // 0x248
	int32_t m_GachaGoodsDay; // 0x258
	bool m_bIsSuccessGacha; // 0x25c
	bool m_bIsSkipGacha; // 0x25d
	int32_t m_GuildDevelopDay; // 0x260
	bool m_bIsSuceessGuildDevelop; // 0x264
	bool m_bIsSkipGuildDevelop; // 0x265
	bool m_bIsSkipSicknessRecovery; // 0x266
	TMap<int32_t, bool> m_mapBattlePassPremium1; // 0x268
	TMap<int32_t, bool> m_mapBattlePassPremium2; // 0x2b8
	TMap<int32_t, int32_t> m_mapSimpleGraphic; // 0x308
	TMap<int32_t, int32_t> m_arSortType; // 0x358
	int64_t m_AdsCoolTimeTicks; // 0x3a8
	TArray<int32_t> m_arNewRequestID; // 0x3b0
	TMap<int32_t, int32_t> m_QuickSlotKeepIDs; // 0x3c0
	int32_t m_iVehicleIndicator; // 0x410
	TArray<int32_t> m_arNewVehicleID; // 0x418
	TMap<uint64_t, FString> m_mapServerVisitGuildList; // 0x428
	TArray<int32_t> m_FavoriteCollects; // 0x478
	TMap<int32_t, int32_t> m_ProclamationDay; // 0x488
};

struct UMM_BuffComponent {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UFirebaseAuthStateListener {
	FScriptMulticastDelegate OnEvent; // 0x30
};

struct UStaticMesh {
	FPerPlatformInt MinLOD; // 0x60
	float LpvBiasMultiplier; // 0x64
	TArray<FStaticMaterial> StaticMaterials; // 0x68
	float LightmapUVDensity; // 0x78
	int32_t LightMapResolution; // 0x7c
	int32_t LightMapCoordinateIndex; // 0x80
	float DistanceFieldSelfShadowBias; // 0x84
	UBodySetup* BodySetup; // 0x88
	int32_t LODForCollision; // 0x90
	char bGenerateMeshDistanceField : 1; // 0x94
	char bStripComplexCollisionForConsole : 1; // 0x94
	char bHasNavigationData : 1; // 0x94
	char bSupportUniformlyDistributedSampling : 1; // 0x94
	char bIsBuiltAtRuntime : 1; // 0x94
	char bAllowCPUAccess : 1; // 0x94
	char bSupportGpuUniformlyDistributedSampling : 1; // 0x94
	TArray<UStaticMeshSocket*> Sockets; // 0xb8
	FVector PositiveBoundsExtension; // 0xd8
	FVector NegativeBoundsExtension; // 0xe4
	FBoxSphereBounds ExtendedBounds; // 0xf0
	int32_t ElementToIgnoreForTexFactor; // 0x10c
	TArray<UAssetUserData*> AssetUserData; // 0x110
	UObject* EditableMesh; // 0x128
	UNavCollisionBase* NavCollision; // 0x130
};

struct UMaterialExpressionConstant2Vector {
	float R; // 0x40
	float G; // 0x44
};

struct UMaterialExpressionClearCoatNormalCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UMM_GameOption_InGame_Community {
	UMM_GameOption_Switch* Option_BuddyRequestAutoReject; // 0x2e0
	UMM_GameOption_Switch* Option_BuddyLoginNotice; // 0x2e8
	UMM_GameOption_Switch* Option_ARejectParty; // 0x2f0
	UMM_GameOption_Switch* Option_ARejectSquad; // 0x2f8
	UMM_GameOption_Switch* Option_NotifyItemGain; // 0x300
};

struct UMM_PetAnimInstance {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FScriptMulticastDelegate OnMontageBlendingOut; // 0x38
	FScriptMulticastDelegate OnMontageStarted; // 0x48
	FScriptMulticastDelegate OnMontageEnded; // 0x58
	FScriptMulticastDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct UTutorialNpcDialog {
	UWidgetBase* m_pParentWidget; // 0x260
	TArray<TWeakObjectPtr<UWidgetBase>> m_arChildWidget; // 0x268
	TArray<TWeakObjectPtr<UMirTextBlock>> m_arMirTextBlock; // 0x280
	TArray<TWeakObjectPtr<UMirRichTextBlock>> m_arMirRichTextBlock; // 0x290
	TArray<TWeakObjectPtr<UMirEditableText>> m_arMirEditableText; // 0x2a0
	TArray<TWeakObjectPtr<UMirImage>> m_arMirImage; // 0x2b0
};

struct ANavSystemConfigOverride {
	UNavigationSystemConfig* NavigationSystemConfig; // 0x218
	ENavSystemOverridePolicy OverridePolicy; // 0x220
	char bLoadOnClient : 1; // 0x221
};

struct UProceduralFoliageTile {
	UProceduralFoliageSpawner* FoliageSpawner; // 0x28
	TArray<FProceduralFoliageInstance> InstancesArray; // 0xd0
};

struct UMM_WorldMap_Occupation {
	UTextBlock* m_Txt_GuildName; // 0x2e0
	UTextBlock* m_Txt_OccupationState; // 0x2e8
	UPanelWidget* m_Grid_GuildName; // 0x2f0
	UImage* m_Img_Frame; // 0x2f8
	UImage* m_Img_Symbol; // 0x300
};

struct UMovieSceneCameraAnimSection {
	FMovieSceneCameraAnimSectionData AnimData; // 0xe0
	UCameraAnim* CameraAnim; // 0x100
	float PlayRate; // 0x108
	float PlayScale; // 0x10c
	float BlendInTime; // 0x110
	float BlendOutTime; // 0x114
	bool bLooping; // 0x118
};

struct UPlatformEventsComponent {
	FScriptMulticastDelegate PlatformChangedToLaptopModeDelegate; // 0xb0
	FScriptMulticastDelegate PlatformChangedToTabletModeDelegate; // 0xc0
};

struct AMM_GuildWarBaseGate {
	EGateFactionType m_FactionType; // 0x238
	UBoxComponent* BaseGateCollision; // 0x240
};

struct UAnimCompress_PerTrackCompression {
	float MaxZeroingThreshold; // 0x70
	float MaxPosDiffBitwise; // 0x74
	float MaxAngleDiffBitwise; // 0x78
	float MaxScaleDiffBitwise; // 0x7c
	TArray<AnimationCompressionFormat> AllowedRotationFormats; // 0x80
	TArray<AnimationCompressionFormat> AllowedTranslationFormats; // 0x90
	TArray<AnimationCompressionFormat> AllowedScaleFormats; // 0xa0
	char bResampleAnimation : 1; // 0xb0
	float ResampledFramerate; // 0xb4
	int32_t MinKeysForResampling; // 0xb8
	char bUseAdaptiveError : 1; // 0xbc
	char bUseOverrideForEndEffectors : 1; // 0xbc
	int32_t TrackHeightBias; // 0xc0
	float ParentingDivisor; // 0xc4
	float ParentingDivisorExponent; // 0xc8
	char bUseAdaptiveError2 : 1; // 0xcc
	float RotationErrorSourceRatio; // 0xd0
	float TranslationErrorSourceRatio; // 0xd4
	float ScaleErrorSourceRatio; // 0xd8
	float MaxErrorPerTrackRatio; // 0xdc
	float PerturbationProbeSize; // 0xe0
};

struct ULevel {
	UWorld* OwningWorld; // 0xb8
	UModel* Model; // 0xc0
	TArray<UModelComponent*> ModelComponents; // 0xc8
	ULevelActorContainer* ActorCluster; // 0xd8
	int32_t NumTextureStreamingUnbuiltComponents; // 0xe0
	int32_t NumTextureStreamingDirtyResources; // 0xe4
	ALevelScriptActor* LevelScriptActor; // 0xe8
	ANavigationObjectBase* NavListStart; // 0xf0
	ANavigationObjectBase* NavListEnd; // 0xf8
	TArray<UNavigationDataChunk*> NavDataChunks; // 0x100
	float LightmapTotalSize; // 0x110
	float ShadowmapTotalSize; // 0x114
	TArray<FVector> StaticNavigableGeometry; // 0x118
	TArray<FGuid> StreamingTextureGuids; // 0x128
	FGuid LevelBuildDataId; // 0x1d0
	UMapBuildDataRegistry* MapBuildData; // 0x1e0
	FIntVector LightBuildLevelOffset; // 0x1e8
	char bIsLightingScenario : 1; // 0x1f4
	char bTextureStreamingRotationChanged : 1; // 0x1f4
	char bStaticComponentsRegisteredInStreamingManager : 1; // 0x1f4
	char bIsVisible : 1; // 0x1f4
	AWorldSettings* WorldSettings; // 0x240
	TArray<UAssetUserData*> AssetUserData; // 0x250
	TArray<FReplicatedStaticActorDestructionInfo> DestroyedReplicatedStaticActors; // 0x270
};

struct UMaterialExpressionComponentMask {
	FExpressionInput Input; // 0x40
	char R : 1; // 0x54
	char G : 1; // 0x54
	char B : 1; // 0x54
	char A : 1; // 0x54
};

struct UDistributionFloatUniform {
	float Min; // 0x38
	float Max; // 0x3c
};

struct UMM_Hud_Chat_AdvertiseMessage {
	FMargin MessageOtherPadding; // 0x2e0
	FMargin MessageMinePadding; // 0x2f0
	UPanelWidget* Panel_Message; // 0x300
	UWidget* m_CharacterPanel; // 0x308
	UWidget* m_OtherTalkBG; // 0x310
	UWidget* m_MyTalkBG; // 0x318
	UMirImage* m_Img_CharaIcon; // 0x320
	UMirTextBlock* m_Txt_Level; // 0x328
	UMirTextBlock* m_Txt_SendTime; // 0x330
	UMirTextBlock* m_Txt_ChannelName; // 0x338
	UMirTextBlock* m_Txt_Nickname; // 0x340
	UMirTextBlock* m_Txt_Description; // 0x348
	UMM_Common_Btn* Btn_Advertise; // 0x350
};

struct UMM_GameOptionKeySettingGroupSlot {
	UMM_GameOptionKeySettingSlot* Slot_2; // 0x2e0
	UMM_GameOptionKeySettingSlot* Slot_3; // 0x2e8
};

struct ULandscapeSplinesComponent {
	TArray<ULandscapeSplineControlPoint*> ControlPoints; // 0x418
	TArray<ULandscapeSplineSegment*> Segments; // 0x428
	TArray<UMeshComponent*> CookedForeignMeshComponents; // 0x438
};

struct UCharacterMovementComponent {
	ACharacter* CharacterOwner; // 0x148
	float GravityScale; // 0x150
	float MaxStepHeight; // 0x154
	float JumpZVelocity; // 0x158
	float JumpOffJumpZFactor; // 0x15c
	float WalkableFloorAngle; // 0x160
	float WalkableFloorZ; // 0x164
	EMovementMode MovementMode; // 0x168
	char CustomMovementMode; // 0x169
	ENetworkSmoothingMode NetworkSmoothingMode; // 0x16a
	float GroundFriction; // 0x16c
	float MaxWalkSpeed; // 0x18c
	float MaxWalkSpeedCrouched; // 0x190
	float MaxSwimSpeed; // 0x194
	float MaxFlySpeed; // 0x198
	float MaxCustomMovementSpeed; // 0x19c
	float MaxAcceleration; // 0x1a0
	float MinAnalogWalkSpeed; // 0x1a4
	float BrakingFrictionFactor; // 0x1a8
	float BrakingFriction; // 0x1ac
	float BrakingSubStepTime; // 0x1b0
	float BrakingDecelerationWalking; // 0x1b4
	float BrakingDecelerationFalling; // 0x1b8
	float BrakingDecelerationSwimming; // 0x1bc
	float BrakingDecelerationFlying; // 0x1c0
	float AirControl; // 0x1c4
	float AirControlBoostMultiplier; // 0x1c8
	float AirControlBoostVelocityThreshold; // 0x1cc
	float FallingLateralFriction; // 0x1d0
	float CrouchedHalfHeight; // 0x1d4
	float Buoyancy; // 0x1d8
	float PerchRadiusThreshold; // 0x1dc
	float PerchAdditionalHeight; // 0x1e0
	FRotator RotationRate; // 0x1e4
	char bUseSeparateBrakingFriction : 1; // 0x1f0
	char bApplyGravityWhileJumping : 1; // 0x1f0
	char bUseControllerDesiredRotation : 1; // 0x1f0
	char bOrientRotationToMovement : 1; // 0x1f0
	char bSweepWhileNavWalking : 1; // 0x1f0
	char bMovementInProgress : 1; // 0x1f0
	char bEnableScopedMovementUpdates : 1; // 0x1f0
	char bEnableServerDualMoveScopedMovementUpdates : 1; // 0x1f1
	char bForceMaxAccel : 1; // 0x1f1
	char bRunPhysicsWithNoController : 1; // 0x1f1
	char bForceNextFloorCheck : 1; // 0x1f1
	char bShrinkProxyCapsule : 1; // 0x1f1
	char bCanWalkOffLedges : 1; // 0x1f1
	char bCanWalkOffLedgesWhenCrouching : 1; // 0x1f1
	char bNetworkSkipProxyPredictionOnNetUpdate : 1; // 0x1f2
	char bNetworkAlwaysReplicateTransformUpdateTimestamp : 1; // 0x1f2
	char bDeferUpdateMoveComponent : 1; // 0x1f2
	char bEnablePhysicsInteraction : 1; // 0x1f2
	char bTouchForceScaledToMass : 1; // 0x1f2
	char bPushForceScaledToMass : 1; // 0x1f2
	char bPushForceUsingZOffset : 1; // 0x1f2
	char bScalePushForceToVelocity : 1; // 0x1f3
	USceneComponent* DeferredUpdatedMoveComponent; // 0x1f8
	float MaxOutOfWaterStepHeight; // 0x200
	float OutofWaterZ; // 0x204
	float Mass; // 0x208
	float StandingDownwardForceScale; // 0x20c
	float InitialPushForceFactor; // 0x210
	float PushForceFactor; // 0x214
	float PushForcePointZOffsetFactor; // 0x218
	float TouchForceFactor; // 0x21c
	float MinTouchForce; // 0x220
	float MaxTouchForce; // 0x224
	float RepulsionForce; // 0x228
	FVector Acceleration; // 0x22c
	FQuat LastUpdateRotation; // 0x240
	FVector LastUpdateLocation; // 0x250
	FVector LastUpdateVelocity; // 0x25c
	float ServerLastTransformUpdateTimeStamp; // 0x268
	float ServerLastClientGoodMoveAckTime; // 0x26c
	float ServerLastClientAdjustmentTime; // 0x270
	FVector PendingImpulseToApply; // 0x274
	FVector PendingForceToApply; // 0x280
	float AnalogInputModifier; // 0x28c
	float MaxSimulationTimeStep; // 0x29c
	int32_t MaxSimulationIterations; // 0x2a0
	int32_t MaxJumpApexAttemptsPerSimulation; // 0x2a4
	float MaxDepenetrationWithGeometry; // 0x2a8
	float MaxDepenetrationWithGeometryAsProxy; // 0x2ac
	float MaxDepenetrationWithPawn; // 0x2b0
	float MaxDepenetrationWithPawnAsProxy; // 0x2b4
	float NetworkSimulatedSmoothLocationTime; // 0x2b8
	float NetworkSimulatedSmoothRotationTime; // 0x2bc
	float ListenServerNetworkSimulatedSmoothLocationTime; // 0x2c0
	float ListenServerNetworkSimulatedSmoothRotationTime; // 0x2c4
	float NetProxyShrinkRadius; // 0x2c8
	float NetProxyShrinkHalfHeight; // 0x2cc
	float NetworkMaxSmoothUpdateDistance; // 0x2d0
	float NetworkNoSmoothUpdateDistance; // 0x2d4
	float NetworkMinTimeBetweenClientAckGoodMoves; // 0x2d8
	float NetworkMinTimeBetweenClientAdjustments; // 0x2dc
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x2e0
	float NetworkLargeClientCorrectionDistance; // 0x2e4
	float LedgeCheckThreshold; // 0x2e8
	float JumpOutOfWaterPitch; // 0x2ec
	FFindFloorResult CurrentFloor; // 0x2f0
	EMovementMode DefaultLandMovementMode; // 0x384
	EMovementMode DefaultWaterMovementMode; // 0x385
	EMovementMode GroundMovementMode; // 0x386
	char bMaintainHorizontalGroundVelocity : 1; // 0x387
	char bImpartBaseVelocityX : 1; // 0x387
	char bImpartBaseVelocityY : 1; // 0x387
	char bImpartBaseVelocityZ : 1; // 0x387
	char bImpartBaseAngularVelocity : 1; // 0x387
	char bJustTeleported : 1; // 0x387
	char bNetworkUpdateReceived : 1; // 0x387
	char bNetworkMovementModeChanged : 1; // 0x387
	char bIgnoreClientMovementErrorChecksAndCorrection : 1; // 0x388
	char bServerAcceptClientAuthoritativePosition : 1; // 0x388
	char bNotifyApex : 1; // 0x388
	char bCheatFlying : 1; // 0x388
	char bWantsToCrouch : 1; // 0x388
	char bCrouchMaintainsBaseLocation : 1; // 0x388
	char bIgnoreBaseRotation : 1; // 0x388
	char bFastAttachedMove : 1; // 0x388
	char bAlwaysCheckFloor : 1; // 0x389
	char bUseFlatBaseForFloorChecks : 1; // 0x389
	char bPerformingJumpOff : 1; // 0x389
	char bWantsToLeaveNavWalking : 1; // 0x389
	char bUseRVOAvoidance : 1; // 0x389
	char bRequestedMoveUseAcceleration : 1; // 0x389
	char bWasSimulatingRootMotion : 1; // 0x389
	char bAllowPhysicsRotationDuringAnimRootMotion : 1; // 0x38a
	char bHasRequestedVelocity : 1; // 0x38a
	char bRequestedMoveWithMaxSpeed : 1; // 0x38a
	char bWasAvoidanceUpdated : 1; // 0x38a
	char bProjectNavMeshWalking : 1; // 0x38a
	char bProjectNavMeshOnBothWorldChannels : 1; // 0x38a
	float AvoidanceConsiderationRadius; // 0x39c
	FVector RequestedVelocity; // 0x3a0
	int32_t AvoidanceUID; // 0x3ac
	FNavAvoidanceMask AvoidanceGroup; // 0x3b0
	FNavAvoidanceMask GroupsToAvoid; // 0x3b4
	FNavAvoidanceMask GroupsToIgnore; // 0x3b8
	float AvoidanceWeight; // 0x3bc
	FVector PendingLaunchVelocity; // 0x3c0
	float NavMeshProjectionInterval; // 0x470
	float NavMeshProjectionTimer; // 0x474
	float NavMeshProjectionInterpSpeed; // 0x478
	float NavMeshProjectionHeightScaleUp; // 0x47c
	float NavMeshProjectionHeightScaleDown; // 0x480
	float NavWalkingFloorDistTolerance; // 0x484
	FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction; // 0x488
	float MinTimeBetweenTimeStampResets; // 0x4d0
	FRootMotionSourceGroup CurrentRootMotion; // 0x4d8
	FRootMotionMovementParams RootMotionParams; // 0x660
	FVector AnimRootMotionVelocity; // 0x6a0
};

struct UMovieSceneWidgetMaterialTrack {
	TArray<FName> BrushPropertyNamePath; // 0x68
	FName TrackName; // 0x78
};

struct UFieldSystemMetaData {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	char bReplicates : 1; // 0x84
	char bNetAddressable : 1; // 0x84
	char bAutoActivate : 1; // 0x85
	char bIsActive : 1; // 0x86
	char bEditableWhenInherited : 1; // 0x86
	char bCanEverAffectNavigation : 1; // 0x86
	char bIsEditorOnly : 1; // 0x86
	EComponentCreationMethod CreationMethod; // 0x88
	FScriptMulticastDelegate OnComponentActivated; // 0x89
	FScriptMulticastDelegate OnComponentDeactivated; // 0x8a
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UMM_PetQuickTab {
	UMM_PetQuickSlotBtn* m_arQuickBtn[0x5]; // 0x2f0
};

struct UPendingNetGame {
	UNetDriver* NetDriver; // 0x30
	UDemoNetDriver* DemoNetDriver; // 0x38
};

struct ADungeonStartTrigger {
	FVector m_BoxExtent; // 0x218
	FColor m_BoxColor; // 0x224
};

struct UMM_DungeonCommonReward {
	UMirTextBlock* txtFixReward; // 0x2e0
	UMirScrollBox* sclRewardListBox; // 0x2e8
	UHorizontalBox* hrzNotice; // 0x2f0
	UMirTextBlock* txtNotice; // 0x2f8
	UMirTextBlock* txtSummonCountDesc; // 0x300
	UMirTextBlock* txtSummonCount; // 0x308
	UMM_Common_ToolTipBtn* btnSummoninfo; // 0x310
};

struct UBookMark {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	TArray<FString> HiddenLevels; // 0x40
};

struct UPawnAction_BlueprintBase {
	UPawnAction* ChildAction; // 0x28
	UPawnAction* ParentAction; // 0x30
	UPawnActionsComponent* OwnerComponent; // 0x38
	UObject* Instigator; // 0x40
	UBrainComponent* BrainComp; // 0x48
	char bAllowNewSameClassInstance : 1; // 0x80
	char bReplaceActiveSameClassInstance : 1; // 0x80
	char bShouldPauseMovement : 1; // 0x80
	char bAlwaysNotifyOnFinished : 1; // 0x80
};

struct AMM_GachaManagerActor {
	UGachaDirectingData* m_pGachaDirectingData; // 0x218
	TArray<AMM_GachaObjectActor*> m_GachaObjects; // 0x220
	AMM_GachaInteractionObjectActor* m_GachaInteractionObject; // 0x230
};

struct AARSharedWorldPlayerController {
	UPlayer* Player; // 0x290
	APawn* AcknowledgedPawn; // 0x298
	UInterpTrackInstDirector* ControllingDirTrackInst; // 0x2a0
	AHUD* MyHUD; // 0x2a8
	APlayerCameraManager* PlayerCameraManager; // 0x2b0
	APlayerCameraManager* PlayerCameraManagerClass; // 0x2b8
	bool bAutoManageActiveCameraTarget; // 0x2c0
	FRotator TargetViewRotation; // 0x2c4
	float SmoothTargetViewRotationSpeed; // 0x2dc
	TArray<AActor*> HiddenActors; // 0x2e8
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x2f8
	float LastSpectatorStateSynchTime; // 0x30c
	FVector LastSpectatorSyncLocation; // 0x310
	FRotator LastSpectatorSyncRotation; // 0x31c
	int32_t ClientCap; // 0x328
	UCheatManager* CheatManager; // 0x330
	UCheatManager* CheatClass; // 0x338
	UPlayerInput* PlayerInput; // 0x340
	TArray<FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x348
	char bPlayerIsWaiting : 1; // 0x3c8
	char NetPlayerIndex; // 0x3cc
	UNetConnection* PendingSwapConnection; // 0x408
	UNetConnection* NetConnection; // 0x410
	float InputYawScale; // 0x424
	float InputPitchScale; // 0x428
	float InputRollScale; // 0x42c
	char bShowMouseCursor : 1; // 0x430
	char bEnableClickEvents : 1; // 0x430
	char bEnableTouchEvents : 1; // 0x430
	char bEnableMouseOverEvents : 1; // 0x430
	char bEnableTouchOverEvents : 1; // 0x430
	char bForceFeedbackEnabled : 1; // 0x430
	float ForceFeedbackScale; // 0x434
	TArray<FKey> ClickEventKeys; // 0x438
	EMouseCursor DefaultMouseCursor; // 0x448
	EMouseCursor CurrentMouseCursor; // 0x449
	ECollisionChannel DefaultClickTraceChannel; // 0x44a
	ECollisionChannel CurrentClickTraceChannel; // 0x44b
	float HitResultTraceDistance; // 0x44c
	uint16_t SeamlessTravelCount; // 0x450
	uint16_t LastCompletedSeamlessTravelCount; // 0x452
	UInputComponent* InactiveStateInputComponent; // 0x4c8
	char bShouldPerformFullTickWhenPaused : 1; // 0x4d0
	UTouchInterface* CurrentTouchInterface; // 0x4e8
	ASpectatorPawn* SpectatorPawn; // 0x540
	bool bIsLocalPlayerController; // 0x54c
	FVector SpawnLocation; // 0x550
};

