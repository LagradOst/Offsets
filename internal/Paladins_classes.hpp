// Created by BlueFire1337
// Updated 2021-12-01
// Generated 2022-01-23

namespace off {
	constexpr auto GNames = 0x3752b7c;
	constexpr auto GObjects = 0x3752bec;
	constexpr auto UEngine = 0x3768130;
	constexpr auto DecryptionKey = 0x3ff;
}

struct UUIComponent_Rotator : UUIComponent_Display {
	int32_t m_nTickHandle; // 0x124
	float m_fRotationDegreesPerSecond; // 0x128
};

struct UTgSeqAct_SetHexState : USequenceAction {
	char m_bChallengerWon : 1; // 0x108
};

struct UTgDeviceForm_HexaFireGuns : UTgDeviceForm {
	ObjectProperty m_SpinnerSkelControl1P; // 0x28c
	ObjectProperty m_SpinnerSkelControl3P; // 0x294
	int32_t m_nNextGunFired; // 0x29c
	FName c_nmSocket1; // 0x2a0
	FName c_nmSocket2; // 0x2a8
	FName c_nmSocket3; // 0x2b0
	FName c_nmSocket4; // 0x2b8
	ObjectProperty m_LowerRightBarrel1P; // 0x2c0
	ObjectProperty m_UpperRightBarrel1P; // 0x2c8
	ObjectProperty m_LowerLeftBarrel1P; // 0x2d0
	ObjectProperty m_UpperLeftBarrel1P; // 0x2d8
	ObjectProperty m_LowerRightBarrel3P; // 0x2e0
	ObjectProperty m_UpperRightBarrel3P; // 0x2e8
	ObjectProperty m_LowerLeftBarrel3P; // 0x2f0
	ObjectProperty m_UpperLeftBarrel3P; // 0x2f8
};

struct USeqAct_CameraFade : USequenceAction {
	FColor FadeColor; // 0x108
	FVector2D FadeAlpha; // 0x10c
	float FadeOpacity; // 0x114
	float FadeTime; // 0x118
	char bPersistFade : 1; // 0x11c
	char bFadeAudio : 1; // 0x11c
	float FadeTimeRemaining; // 0x120
	TArray<ObjectProperty> CachedPCs; // 0x124
};

struct UTgAIBehaviorCondition_SelectedTargetHealthPercent : UTgAIBehaviorCondition_DistanceBase {
	char bMustBeEnemy : 1; // 0x9c
	char bIgnoreTaskforce : 1; // 0x9c
	ETargetSelector TargetSelector; // 0xa0
	ECombatTargetType TargetType; // 0xa1
	int32_t TargetId; // 0xa4
	float HealthPct; // 0xa8
};

struct UUIScene_UIStreetStyleEvent : UUIScene {
	ObjectProperty m_pTabs; // 0x1cc
	ObjectProperty m_pBack; // 0x1d4
	ObjectProperty m_pHome; // 0x1dc
	ObjectProperty m_pRewards; // 0x1e4
	ObjectProperty m_pQuests; // 0x1ec
	ObjectProperty m_pOverview; // 0x1f4
	ObjectProperty m_pRotator; // 0x1fc
};

struct APortal : ATriggerVolume {
	ObjectProperty Destination; // 0x2bc
	FRotator SourceEdgeRotation; // 0x2c4
	FVector SourceEdgeTranslation; // 0x2d0
	float fEdgeWidth; // 0x2dc
	char bForceParallelEdges : 1; // 0x2e0
};

struct UUIScene_UIPurchaseGems : UUIScene {
	Fdword m_dwVendorRequestId; // 0x1cc
};

struct ATgDevice_SleightOfHand : ATgDevice {
	ObjectProperty m_InhandWeapon; // 0xa04
};

struct ATgDevice_SevenInhand : ATgDevice {
	int32_t m_nBurstModTotalShots[0x5]; // 0xa04
};

struct UTgControlModule_ThirdPerson : UTgControlModule {
	int32_t CameraYawOffset; // 0x6c
	float fRotInterpSpeed; // 0x70
	float fAimPitch; // 0x74
	FInterpCurveFloat PitchCurve; // 0x78
	FInterpCurveFloat AimCurve; // 0x8c
	ObjectProperty m_StrafeCameraAnim; // 0xa0
	ObjectProperty m_CameraAnimStrafeRight; // 0xa8
	ObjectProperty m_CameraAnimStrafeLeft; // 0xb0
	float fOrientationResetStartPitch; // 0xb8
	float fOrientationResetRemaining; // 0xbc
	float fOrientationResetDuration; // 0xc0
	float fOrientationResetCooldown; // 0xc4
	float fOrientationResetLastUsed; // 0xc8
};

struct ATgGame : AFrameworkGame {
	UObject* m_ContentPackageReference; // 0x4dc
	GAME_WIN_STATE m_GameWinState; // 0x4e4
	TG_GAME_TYPE m_GameType; // 0x4e5
	float m_fSpawnProtectionTime; // 0x4e8
	float m_fMaxRepawnTime; // 0x4ec
	float m_fUnpauseCountdownRemaining; // 0x4f0
	int32_t s_nBotPlayerCount; // 0x4f4
	char s_bSpawnOfflinePawns : 1; // 0x4f8
	char s_bGameInitialized : 1; // 0x4f8
	char s_bEACMatchStartSent : 1; // 0x4f8
	char s_bGameEndMissionProcessed : 1; // 0x4f8
	char s_bMissionSealed : 1; // 0x4f8
	char m_bForceUsePRISpawnPoint : 1; // 0x4f8
	char m_bRewardCalculated : 1; // 0x4f8
	char m_bStatsCanTie : 1; // 0x4f8
	char m_bStatsIsSymmetric : 0; // 0x4f8
	char m_bIsTutorialGametype : 0; // 0x4f8
	char m_bIsPracticeGametype : 0; // 0x4f8
	char m_bEnableHeadShots : 0; // 0x4f8
	char m_bPlayOfTheGameLocked : 0; // 0x4f8
	char m_bPlayOfTheGameDisabled : 0; // 0x4f8
	char m_bSpawnDisconnectedPlayersStunned : 0; // 0x4f8
	char m_bPlayersCanOnlyDieOnce : 0; // 0x4f8
	char m_bUseKillEmotes : 0; // 0x4f8
	char m_bNotifyKillCombos : 0; // 0x4f8
	char m_bFirstBloodAwarded : 0; // 0x4f8
	int32_t m_nNumTaskForces; // 0x4fc
	int32_t s_nNextActorInstanceId; // 0x500
	int32_t s_nNextProjectileInstanceId; // 0x504
	TArray<ObjectProperty> s_AIVolumes; // 0x508
	TArray<int32_t> s_Taskforce1AIVolumesIndices; // 0x518
	TArray<int32_t> s_Taskforce2AIVolumesIndices; // 0x528
	TArray<ObjectProperty> s_FortressVolumes; // 0x538
	TMap<None, None> s_AIAnnotations; // 0x548
	TArray<ObjectProperty> s_DeviceVolumes; // 0x590
	TArray<ObjectProperty> s_ActorFactories; // 0x5a0
	float s_fXPModifier; // 0x5b0
	int32_t m_nTaskforce1Kills; // 0x5b4
	int32_t m_nTaskforce2Kills; // 0x5b8
	float m_fGlobalCooldownTime; // 0x5bc
	TArray<int32_t> m_ClientLogins; // 0x5c0
	float m_fOcclusionCalcPeriod; // 0x5d0
	float m_fOcclusionMaxDeviation; // 0x5d4
	float m_fReadyPercent; // 0x5d8
	FPlayOfTheGameInfo m_PlayOfTheGame; // 0x5dc
	float m_fPlayOfTheGameLength; // 0x5e8
	float m_fPlayOfTheGameIntroBufferLength; // 0x5ec
	float m_fPlayOfTheGameOuttroBufferLength; // 0x5f0
	TArray<FPlayOfTheGameEventConfig> m_PlayOfTheGameEventConfigs; // 0x5f4
	TArray<ObjectProperty> m_PlayerSpawnExits; // 0x604
	TArray<ObjectProperty> m_ReadyPlayers; // 0x614
};

struct UPComImageDownloader : UObject {
	TArray<FPComImageDownload> DownloadImages; // 0x60
	DelegateProperty __OnPComImageDownloaded__Delegate; // 0x70
};

struct USeqAct_SetMatInstScalarParam : USequenceAction {
	ObjectProperty MatInst; // 0x108
	FName ParamName; // 0x110
	float ScalarValue; // 0x118
};

struct UMaterialExpressionConstantBiasScale : UMaterialExpression {
	FExpressionInput Input; // 0xb0
	float Bias; // 0xe4
	float Scale; // 0xe8
};

struct UParticleModuleLocation_Seeded : UParticleModuleLocation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x94
};

struct UMcpUserManagerBase : UMcpServiceBase {
	FString McpUserManagerClassName; // 0x78
	DelegateProperty __OnRegisterUserComplete__Delegate; // 0x88
	DelegateProperty __OnQueryUsersComplete__Delegate; // 0x98
	DelegateProperty __OnDeleteUserComplete__Delegate; // 0xa8
};

struct UTgSkelControlSingleBone_PistonBarrel : UTgSkelControlSingleBone {
	float m_nDepressDistance; // 0x124
	float m_nReturnSpeed; // 0x128
};

struct ATgDevice_ToggleInhandFiremode : ATgDevice {
	ObjectProperty m_CachedInhand; // 0xa04
};

struct ATgDevice_ManaRift : ATgDevice {
	ObjectProperty m_CachedImani; // 0xa04
	float m_fDistanceTolerance; // 0xa0c
	FVector m_vLastLocation; // 0xa10
	char m_bLocationIsLive : 1; // 0xa1c
	float m_fLocationTimestamp; // 0xa20
};

struct ATgDevice_Roost : ATgDevice {
	ObjectProperty m_ScopeDevice; // 0xa04
};

struct ATgGame_SinglePointCaptureAndHold : ATgGame_PointCapture {
	int32_t m_nCurrentActiveCapturePointIndex; // 0x79c
	int32_t m_nNumTicketsForCapturingPoint; // 0x7a0
	int32_t m_nNumTicketsForHoldingPoint; // 0x7a4
	float m_fNewPointTime; // 0x7a8
	float m_fDefendingTeamRespawnTime; // 0x7ac
};

struct UPointLightComponent : ULightComponent {
	float ShadowRadiusMultiplier; // 0x1a4
	float Radius; // 0x1a8
	float FalloffExponent; // 0x1ac
	float ShadowFalloffExponent; // 0x1b0
	float MinShadowFalloffRadius; // 0x1b4
	FMatrix CachedParentToWorld; // 0x1c0
	FVector Translation; // 0x200
	FPlane ShadowPlane; // 0x210
	ComponentProperty PreviewLightRadius; // 0x220
	FLightmassPointLightSettings LightmassSettings; // 0x228
	ComponentProperty PreviewLightSourceRadius; // 0x238
};

struct ATgObjective : AActor {
	char r_nDefenderTaskForceIndex; // 0x280
	char r_nControllingTaskForceIndex; // 0x281
	char r_nContestingTaskForceIndex; // 0x282
	EObjectiveStatus r_eStatus; // 0x283
	int32_t r_nControllingTaskForceCount; // 0x284
	ObjectProperty m_InWordIndicatorFX; // 0x288
	ObjectProperty m_ForegroundIndicatorFX; // 0x290
	int32_t m_nActiveAlertId; // 0x298
	int32_t m_nPendingActiveAlertId; // 0x29c
	int32_t m_nInactiveAlertId; // 0x2a0
	int32_t m_nWaypointMessageOverride; // 0x2a4
	char m_bTriggerEventsOnClientAsWell : 1; // 0x2a8
};

struct UTgAnimBlendByPaladinsCharacter_Flak : UTgAnimBlendByPaladinsCharacter {
	ObjectProperty m_CachedFlakPawn; // 0x544
};

struct UTgCameraModule_FrontFacingCamera : UTgCameraModule_ThirdPerson {
	FRotator m_rWorldRotationOffset; // 0x118
	float m_fFOV; // 0x124
};

struct UUIData_String : UUIData {
	FString m_sValue; // 0x64
};

struct ATgProj_GrumpyBomb : ATgProj_FreeGrenade {
	ComponentProperty m_Silhouette; // 0x580
	char m_bSilhouetteInitialized : 1; // 0x588
	char m_bSilhouetteAllowed : 1; // 0x588
	float m_fPostLandDurationAccelerant; // 0x58c
};

struct ULandscapeLayerInfoObject : UObject {
	FName LayerName; // 0x60
	ObjectProperty PhysMaterial; // 0x68
	float Hardness; // 0x70
	char bNoWeightBlend : 1; // 0x74
};

struct UNavMeshPath_BiasAgainstPolysWithinDistanceOfLocations : UNavMeshPathConstraint {
	FVector Location; // 0x78
	FVector Rotation; // 0x84
	float DistanceToCheck; // 0x90
	TArray<FVector> LocationsToCheck; // 0x94
};

struct UTgAchievement_ShieldForDuration : UTgAchievement {
	float m_fStartFireTime; // 0x94
};

struct UTgInvListener_SetChildDamageType : UTgInventoryObject_Listen_ActiveWhileOffCooldown {
	int32_t m_nOldDamageType; // 0xc8
	FName m_nmOldDamageTypeClass; // 0xcc
	UTgDamageType* m_OldDamageTypeClass; // 0xd4
};

struct UTgAnimNodeChannelFire_AzaanUlt : UTgAnimNodeChannelFire {
	AzaanUltAnimState m_eAnimState; // 0x180
};

struct UTgGameplayCurvesSet_RecoilSimple : UTgGameplayCurvesSet {
	FRawDistributionFloat HorizRecoil1; // 0x64
	FRawDistributionFloat HorizRecoil2; // 0x88
	FRawDistributionFloat VertRecoil1; // 0xac
	FRawDistributionFloat VertRecoil2; // 0xd0
	EPaladinsRecoilType RecoilType; // 0xf4
};

struct UTgAIBehaviorAction_SelectLaneCombatTarget : UTgAIBehaviorAction {
	char bMustBeEnemy : 1; // 0x94
	char bMustBeSameLane : 1; // 0x94
	char bMustHaveLineOfSight : 1; // 0x94
	char bMustHaveDamagedGod : 1; // 0x94
	char bMustNotBeImmune : 1; // 0x94
	char bMustBeInForwardCone : 1; // 0x94
	char bEffectGroupCategoryCheckInstigator : 1; // 0x94
	char bMustBeHittable : 1; // 0x94
	char bMustNotBeNearShield : 0; // 0x94
	ETargetSelector TargetSelector; // 0x98
	ECombatTargetType TargetType; // 0x99
	ECombatTargetType IgnoreTargetType; // 0x9a
	int32_t EffectCategoryId; // 0x9c
	float DistanceThreshold; // 0xa0
	float ForwardConeAngle; // 0xa4
};

struct UTgAnimBlendByHeadSkin : UTgAnimNodeBlendList {
	TArray<FHeadSkinChildInfo> m_SkinMap; // 0x168
};

struct ARadialBlurActor : AActor {
	ComponentProperty RadialBlur; // 0x280
};

struct USeqAct_SetSkelControlTarget : USequenceAction {
	FName SkelControlName; // 0x108
	TArray<ObjectProperty> TargetActors; // 0x110
};

struct UTgAnimBlendBySpeedWithExhaustion : UTgAnimBlendBySpeed {
	char m_bEnableExhaustion : 1; // 0x21c
	float m_fExhaustionLevel; // 0x220
	TArray<int32_t> m_ExhaustedChildren; // 0x224
	TArray<int32_t> m_GainExhaustionChildren; // 0x234
	float m_fExhaustionGainSpeed; // 0x244
	float m_fExhaustionLossSpeed; // 0x248
	float m_fExhaustionLevelMax; // 0x24c
	float m_fExhaustionLevelMin; // 0x250
};

struct UTgSoundGroup : UObject {
	TArray<ObjectProperty> c_SoundCues; // 0x60
	TArray<FFootstepSoundInfo> c_FootstepSounds; // 0x70
};

struct UParticleModuleColorOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorOverLife; // 0x68
	FRawDistributionFloat AlphaOverLife; // 0x8c
	char bClampAlpha : 1; // 0xb0
};

struct UTgGameplayCurves : UObject {
	TArray<ObjectProperty> CurveSets; // 0x60
	TArray<ObjectProperty> InheritedCurves; // 0x70
	char bShowInheritedCurves : 1; // 0x80
	char bInheritedCurvesShareEditorTab : 1; // 0x80
	ObjectProperty CurveEdSetup; // 0x84
};

struct ATgPawn_Druid : ATgPawn_Character {
	ObjectProperty m_CachedRMBTargeting; // 0x3160
	ObjectProperty m_CachedRMB; // 0x3168
	ObjectProperty m_CachedSpawnFox; // 0x3170
	ObjectProperty m_GuidedArrowTarget; // 0x3178
	ObjectProperty r_ActiveFox; // 0x3180
	float r_fRMBProjectileSpeed; // 0x3188
	float r_fLastStandAnimTime; // 0x318c
	int32_t r_nFoxActivityNonce; // 0x3190
	FString m_sDeployRedeployIconOverride; // 0x3194
	char c_bAcknowledgedIsLeaping : 1; // 0x31a4
};

struct UMaterialExpressionRotateAboutAxis : UMaterialExpression {
	FExpressionInput NormalizedRotationAxisAndAngle; // 0xb0
	FExpressionInput PositionOnAxis; // 0xe4
	FExpressionInput Position; // 0x118
};

struct UTgAIBehaviorCondition_DifficultyLevel : UTgAIBehaviorCondition {
	EBotDifficultyLevel Difficulty; // 0x98
};

struct ULightFunction : UObject {
	ObjectProperty SourceMaterial; // 0x60
	FVector Scale; // 0x68
	float DisabledBrightness; // 0x74
};

struct UTgSeqAct_AIMoveToActor : USequenceAction {
	ObjectProperty Destination; // 0x108
};

struct ATgDeploy_YagoHardenPoison : ATgDeploy_EffectField {
	float m_fRadiusIncPerSec; // 0x4a0
	float m_fMaxRadiusScale; // 0x4a4
};

struct UTgAnimNodeTriggerCameraAnim : UAnimNodeBlendBase {
	ObjectProperty CameraAnim; // 0x114
	float fBlendInTime; // 0x11c
	float fBlendOutTime; // 0x120
	char bLoopAnimation : 1; // 0x124
	char bBlendInOnBecomeRelevant : 1; // 0x124
	char bBlendInOnReplayAnim : 1; // 0x124
	char bBlendOutOnStopFire : 1; // 0x124
	char bPlayAnimInLocalSpace : 1; // 0x124
	char bPropertiesRelativeToBase : 1; // 0x124
	TG_EQUIP_POINT m_StopFireEquipSlotTarget; // 0x128
	ObjectProperty CameraAnimInst; // 0x12c
};

struct UTgDeviceForm_WallBangFire : UTgDeviceForm {
	FSaatiAimInfo s_CachedAimInfo; // 0x28c
	TArray<ObjectProperty> m_SaatiUltNodes3p; // 0x2a4
	TArray<ObjectProperty> m_SaatiUltNodes1p; // 0x2b4
};

struct UParticleModuleParameterDynamic_Seeded : UParticleModuleParameterDynamic {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UUIData_LoadoutItem : UUIData {
	Fdword m_dwItemId; // 0x64
	Fdword m_dwCount; // 0x68
	Fdword m_dwSortOrder; // 0x6c
	Fdword m_dwLoadoutItemType; // 0x70
	FQWord m_qwLoadoutItemId; // 0x74
	ObjectProperty m_pOwningLoadout; // 0x7c
};

struct UUIData_PlayerMatchRecord : UUIData {
	FPointer VfTable_IUIDataInterface_Name; // 0x64
	int32_t nBotId; // 0x6c
	int32_t nPlayerId; // 0x70
	Fdword dwCharacterId; // 0x74
	int32_t nLevel; // 0x78
	int32_t nKills; // 0x7c
	int32_t nDeaths; // 0x80
	int32_t nAssists; // 0x84
	int32_t nEarnedCredits; // 0x88
	int32_t nHealingPlayer; // 0x8c
	int32_t nHealingBot; // 0x90
	int32_t nHealingTotal; // 0x94
	int32_t nSelfHealing; // 0x98
	int32_t nDmgTaken; // 0x9c
	int32_t nDmgPlayer; // 0xa0
	int32_t nDmgBot; // 0xa4
	int32_t nDmgTotal; // 0xa8
	int32_t nSoloKills; // 0xac
	int32_t nFlankKills; // 0xb0
	int32_t nMultikill; // 0xb4
	int32_t nKillstreak; // 0xb8
	int32_t nDmgStructure; // 0xbc
	int32_t nDmgMitigated; // 0xc0
	int32_t nObjectiveTime; // 0xc4
	int32_t nCards[0x5]; // 0xc8
	int32_t nCardLevels[0x5]; // 0xdc
	int32_t nLegendary; // 0xf0
	int32_t nLegendaryLevel; // 0xf4
	int32_t nPassive; // 0xf8
	int32_t nPassiveLevel; // 0xfc
	int32_t nPurchasedItems[0x4]; // 0x100
	int32_t nPurchasedItemLevels[0x4]; // 0x110
	int32_t nMountItemId; // 0x120
	int32_t nEmoteItemId; // 0x124
	int32_t nMVPPoseItemId; // 0x128
	int32_t nSprayItemId; // 0x12c
	int32_t nTitleItemId; // 0x130
	int32_t nTaskForce; // 0x134
	char bAlly : 1; // 0x138
	char bLocal : 1; // 0x138
	char bReported : 1; // 0x138
	char bIsPaidBattlePass : 1; // 0x138
	char bIsVerifiedPlayer : 1; // 0x138
	char m_bPendingFilterRequest : 1; // 0x138
	FString sPlayer; // 0x13c
	FUniqueNetId ConsoleUniqueId; // 0x14c
	Fdword dwPortalId; // 0x154
	Fdword dwBattlePassXp; // 0x158
};

struct UUIComponent_CommendationHistoryPanel : UUIComponent_Display {
	ObjectProperty m_mcTeamworkCountTF; // 0x124
	ObjectProperty m_mcLeadershipCountTF; // 0x12c
	ObjectProperty m_mcSkillCountTF; // 0x134
	ObjectProperty m_mcCommendationRewardsButton; // 0x13c
	ObjectProperty m_ProgressBar; // 0x144
};

struct ATgDroppedItem : AActor {
	float m_fLifeSpan; // 0x280
	char m_bFadeOut : 1; // 0x284
	FName m_nmPickUpState; // 0x288
	int32_t r_nItemId; // 0x290
	ComponentProperty c_Mesh; // 0x294
	TArray<ObjectProperty> s_EffectGroupList; // 0x29c
};

struct UTgAudioConversations : UObject {
	TArray<FVoxConversation> m_Conversations; // 0x60
	char m_bInitialized : 1; // 0x70
	char m_bTF1Conversed : 1; // 0x70
	char m_bTF2Conversed : 1; // 0x70
	ObjectProperty m_GRI; // 0x74
	int32_t m_nConversationAttemptsRemaining; // 0x7c
};

struct UUIScene_UIHudKoga : UUIScene {
	char m_bViewTargetKoga : 1; // 0x1cc
	char m_bInitialized : 1; // 0x1cc
	char m_bPostInitActions : 1; // 0x1cc
	char m_bBarShown : 1; // 0x1cc
	ObjectProperty m_pCachedKoga; // 0x1d0
	ObjectProperty m_mcMeter; // 0x1d8
	ObjectProperty m_Bars[0x3]; // 0x1e0
	int32_t m_nTickCallbackHandle; // 0x1f8
	int32_t m_nUIHudCallbackHandle; // 0x1fc
};

struct UUIScene_UIHudMap : UUIScene {
	ObjectProperty m_pGamepadSelectAction; // 0x1cc
};

struct UUIComponent_Quest : UUIComponent_Display {
	ObjectProperty m_pQuestPanelButton; // 0x124
	ObjectProperty m_pQuestDiscardButton; // 0x12c
	ObjectProperty m_mcProgressFrame; // 0x134
	ObjectProperty m_mcQuestProgressBar; // 0x13c
	ObjectProperty m_mcQuestProgressMask; // 0x144
	ObjectProperty m_mcQuestTitle; // 0x14c
	ObjectProperty m_mcQuestType; // 0x154
	ObjectProperty m_mcQuestIconRendered; // 0x15c
	ObjectProperty m_mcQuestIcon; // 0x164
	ObjectProperty m_mcDailyQueueBonusIcon; // 0x16c
	ObjectProperty m_mcQuestFrame; // 0x174
	ObjectProperty m_mcGlow; // 0x17c
	ObjectProperty m_mcNew; // 0x184
	ObjectProperty m_mcGoalSequences[0x7]; // 0x18c
	ObjectProperty m_GoalSequenceBar; // 0x1c4
	ObjectProperty m_mcQuestChestIcon; // 0x1cc
	ObjectProperty m_mcRewardItem; // 0x1d4
	ObjectProperty m_mcRewardItemRarity; // 0x1dc
	ObjectProperty m_mcRewardItemIcon; // 0x1e4
	ObjectProperty m_mcRewardItemImageStack; // 0x1ec
	ObjectProperty m_mcRewardItemTexture; // 0x1f4
	ObjectProperty m_mcRewardItemName; // 0x1fc
	ObjectProperty m_mcRewardSubtitle; // 0x204
	ObjectProperty m_mcQuestProgressText; // 0x20c
	ObjectProperty m_mcQuestDescription; // 0x214
	ObjectProperty m_mcQuestRewardAmount; // 0x21c
	ObjectProperty m_mcQuestRewardAmount1; // 0x224
	ObjectProperty m_pCurrencyRewards; // 0x22c
	float m_fSequenceOrigX; // 0x234
	float m_fSequenceOrigY; // 0x238
	float m_fSequenceOrigWidth; // 0x23c
};

struct UMobileMenuImage : UMobileMenuObject {
	ObjectProperty Image; // 0xdc
	MenuImageDrawStyle ImageDrawStyle; // 0xe4
	FUVCoords ImageUVs; // 0xe8
	FLinearColor ImageColor; // 0xfc
};

struct UParticleModuleSizeMultiplyLife : UParticleModuleSizeBase {
	FRawDistributionVector LifeMultiplier; // 0x68
	char MultiplyX : 1; // 0x8c
	char MultiplyY : 1; // 0x8c
	char MultiplyZ : 1; // 0x8c
};

struct UTgAnimNodeAimOffset_Charge : UTgAnimNodeAimOffset {
	char m_bInterpToCurrentTurnRate : 1; // 0x1f4
	char m_bDisableIfNotMoving : 1; // 0x1f4
	char m_bResetOnBecomeRelevant : 1; // 0x1f4
	float m_fInterpSpeed; // 0x1f8
	float m_fMaxYawRate; // 0x1fc
	float m_fAimYawOffset; // 0x200
	FRotator m_rCachedOwnerRotator; // 0x204
};

struct ATgMapCalloutVolume : AVolume {
	FString m_sMsg; // 0x2bc
};

struct UOnlinePlaylistProvider : UUIResourceDataProvider {
	int32_t PlaylistId; // 0x94
	TArray<FName> PlaylistGameTypeNames; // 0x98
	FString DisplayName; // 0xa8
	int32_t Priority; // 0xb8
};

struct ATgPawn_DruidGuardian : ATgPawn_Character {
	ObjectProperty m_CachedDruid; // 0x3160
	ObjectProperty m_CachedRush; // 0x3168
	ObjectProperty r_pRedeployPlaceholder; // 0x3170
	float m_fGuardianIntroLockoutTime; // 0x3178
	float m_fRotationRateDegPerSec; // 0x317c
	float m_fRedeployTweenDuration; // 0x3180
	float m_fRedeployTweenRampUpDuration; // 0x3184
	float m_fRedeployTweenSpeedFeetPerSecStart; // 0x3188
	float m_fRedeployTweenSpeedFeetPerSecEnd; // 0x318c
	float m_fRedeployFailsafeTime; // 0x3190
	float m_fStunRushTweenRampUpDuration; // 0x3194
	float m_fStunRushTweenSpeedFeetPerSecStart; // 0x3198
	float m_fStunRushTweenSpeedFeetPerSecEnd; // 0x319c
	float m_fPostRedeployLockout; // 0x31a0
	float m_fRedeployVerticalOffset; // 0x31a4
	float r_fStunRushCooldownTime; // 0x31a8
	char r_bStunRushInCooldown : 1; // 0x31ac
	char r_bInWispForm : 1; // 0x31ac
	char r_bStunRushRedeploy : 1; // 0x31ac
	char r_bAnimatingRushHit : 1; // 0x31ac
	char c_bPsychicGrowlOnWindupOnly : 1; // 0x31ac
	int32_t r_nStunRushInCooldownNonce; // 0x31b0
	float m_fPostRedeployOutputDuration; // 0x31b4
	int32_t m_nPostRedeployOutputSlot; // 0x31b8
	float c_fWispTransitionTime; // 0x31bc
	float c_fWispTransitionTimeTotal; // 0x31c0
	float m_fStunRushPsychicGrowlLockoutTime; // 0x31c4
	float m_fMaxSeekingTurnDegPerSec; // 0x31c8
	float m_fSeekingSpeedFeetPerSec; // 0x31cc
	float m_fRushHitSpeedFactor; // 0x31d0
	ObjectProperty r_pRushTarget; // 0x31d4
	int32_t m_nHealFeedDefaultIconId; // 0x31dc
	float c_fPsychicGrowlCooldownTime; // 0x31e0
	float r_fPsychicGrowlRangeSqr; // 0x31e4
};

struct ATgProj_MoonShard : ATgProj_Simulated {
	FPointer VfTable_ITgCallbackInterface; // 0x52c
	ObjectProperty m_CallbackContainer; // 0x534
	float m_fMaxPullAcceleration; // 0x53c
	float m_fMaxSpeed; // 0x540
	float m_fPeakLateralDampening; // 0x544
	float m_fInnerRadius; // 0x548
	float m_fKnockupRadius; // 0x54c
	float m_fOuterRadius; // 0x550
	float m_fRadiusExitTolerance; // 0x554
	float m_fPhysWalkingAccelerationFactor; // 0x558
	char c_bDebugRadii : 1; // 0x55c
	TArray<ObjectProperty> m_RegisteredPawns; // 0x560
	TArray<FMoonShardPawnRecord> m_AffectedPawns; // 0x570
};

struct UTgDeviceForm_TiberiusLeap : UTgDeviceForm {
	ObjectProperty m_CachedTiberius; // 0x28c
};

struct UTgDeviceForm_SilenceBeam : UTgDeviceForm_SpinnerWhileFiring {
	ObjectProperty m_pCachedGauntlet; // 0x2b8
};

struct UUIComponent_Card : UUIComponent_Display {
	ObjectProperty m_mcCTA; // 0x124
	ObjectProperty m_mcChampion; // 0x12c
	ObjectProperty m_mcChampionIcon; // 0x134
	ObjectProperty m_mcCooldown; // 0x13c
	ObjectProperty m_mcCost; // 0x144
	ObjectProperty m_mcName; // 0x14c
	ObjectProperty m_mcSkill; // 0x154
	ObjectProperty m_mcDesc; // 0x15c
	ObjectProperty m_mcRarity; // 0x164
	ObjectProperty m_mcFrame; // 0x16c
	ObjectProperty m_mcCooldownTimer; // 0x174
	ObjectProperty m_mcIcon; // 0x17c
	ObjectProperty m_mcRarityGlow; // 0x184
	char m_bShowChampion : 1; // 0x18c
	char m_bShowRarityGlow : 1; // 0x18c
};

struct USeqAct_GetDistance : USequenceAction {
	float Distance; // 0x108
};

struct UUIComponent_Targeter_Headhunter : UUIComponent_Targeter_PointTargeter {
	ObjectProperty m_mcSpinner; // 0x184
	float m_fSpinnerRotation; // 0x18c
};

struct UTgClientSettings : UObject {
	float MinimapScaling; // 0x60
	float UIScaling; // 0x64
	float HUDScaling; // 0x68
	float CombatTextScaling; // 0x6c
	float ChatScaling; // 0x70
	float ChatFadeout; // 0x74
	ENamePlateName OverlayGodName; // 0x78
	EFriendStateNotifications ShowFriendStateNotifications; // 0x79
	ETargetingLineStyle TargetingLineStyle; // 0x7a
	ETargetingPreviewStyle TargetingPreviewStyle; // 0x7b
	ETargetingReticleStyle TargetingReticleStyle; // 0x7c
	ETargetingHighlightStyle TargetingHighlightStyle; // 0x7d
	ECastMode CastMode; // 0x7e
	EMapPlacement MapPlacement; // 0x7f
	EControlIconStyle ControlIconStyle; // 0x80
	EColorBlindOption SelectedColorBlindOption; // 0x81
	ECrossplayCombinedSetting CombinedCrossplayOption; // 0x82
	ECrossInputMethod CrossInputMethod; // 0x83
	EAspectRatio DesiredAspectRatio; // 0x84
	char OverlayShowLocalPlayer : 1; // 0x88
	char DisableHelpMessages : 1; // 0x88
	char ShowInHandTargeting : 1; // 0x88
	char DisableTargetingAid : 1; // 0x88
	char VerticalTargetingPreviews : 1; // 0x88
	char DisableProfanityFilter : 1; // 0x88
	char ShowTeamTags : 1; // 0x88
	char SpectateDamage : 1; // 0x88
	char SpectateHeals : 0; // 0x88
	char SpectateCrits : 0; // 0x88
	char SpectateGold : 0; // 0x88
	char SpectateXP : 0; // 0x88
	char SpectateOutlines : 0; // 0x88
	char ShowRentNotification : 0; // 0x88
	char ShowHUDScore : 0; // 0x88
	char ShowHUDEnemy : 0; // 0x88
	char ShowHUDStats : 0; // 0x88
	char ShowHUDItems : 0; // 0x88
	char ShowWardPings : 0; // 0x88
	char ShowCauterizeHealthBar : 0; // 0x88
	char bShowCardCooldowns : 0; // 0x88
	char DoNotDisturb : 0; // 0x88
	char LoadAssistModeSubLevel : 0; // 0x88
	char bTargetingAlwaysShowPreview : 0; // 0x88
	char bUseCastQueueing : 0; // 0x88
	char bUseFixedPitchMode : 0; // 0x88
	char NewUserPromptTutorialMatch : 0; // 0x88
	char NewUserFinished : 0; // 0x88
	char VendorStoreTopTier : 0; // 0x88
	char bEnableHelpPopups : 0; // 0x88
	char ColorBlindMode : 0; // 0x88
	char ColorBlindModeShader : 0; // 0x88
	char bCharacterVolume : 1; // 0x8c
	char MasterMute : 1; // 0x8c
	char SFXMute : 1; // 0x8c
	char MusicMute : 1; // 0x8c
	char VoiceMute : 1; // 0x8c
	char MatchNotifierMute : 1; // 0x8c
	char AllPlayerMute : 1; // 0x8c
	char bEnableVoiceChat : 1; // 0x8c
	char bUsePushToTalkForVoiceChat : 0; // 0x8c
	char QueueWaitRegion : 0; // 0x8c
	char QueueWaitSolo : 0; // 0x8c
	char DisableCrossplay : 0; // 0x8c
	char AutoPurchase : 0; // 0x8c
	char AutoSkill : 0; // 0x8c
	char bToggleZoom : 0; // 0x8c
	char DisableJoystickInput : 0; // 0x8c
	char EnableControllerFeedback : 0; // 0x8c
	char EnableGyroInput : 0; // 0x8c
	char bEnableHudTeams : 0; // 0x8c
	char bEnableHudCombat : 0; // 0x8c
	char bEnableHudHealth : 0; // 0x8c
	char bEnableHudSkills : 0; // 0x8c
	char bEnableHudTeamUI : 0; // 0x8c
	char bEnableHudTeamDeathMarkers : 0; // 0x8c
	char bEnableHudMinimap : 0; // 0x8c
	char bReticleBloom : 0; // 0x8c
	char bChangeReticleOverEnemy : 0; // 0x8c
	char bEnableSpecatorPlayerIcons : 0; // 0x8c
	char bShowSpectatorItems : 0; // 0x8c
	char bPublicParty : 0; // 0x8c
	char bShownVaultTutorial : 0; // 0x8c
	char bEnableSpectate : 0; // 0x8c
	char blockNonFriendChat : 1; // 0x90
	char newUserFinishedTutorial : 1; // 0x90
	char bShowLiveVideo : 1; // 0x90
	char ShownBountyCoinLinkPrompt : 1; // 0x90
	int32_t TeamTagFormat; // 0x94
	float FogOfWarDimness; // 0x98
	float MinimapOpacity; // 0x9c
	int32_t DemoBotId; // 0xa0
	float CastQueueTime; // 0xa4
	float FixedPitchLowerBoundDegrees; // 0xa8
	float FixedPitchUpperBoundDegrees; // 0xac
	int32_t PlayNowTabId; // 0xb0
	int32_t VendorStoreTabId; // 0xb4
	int32_t VendorStoreTypeId; // 0xb8
	int32_t VendorStoreTypeRecId; // 0xbc
	int32_t LeagueSelection; // 0xc0
	int32_t VPSelection; // 0xc4
	int32_t ColorBlindModeShaderType; // 0xc8
	float ColorBlindModeIntensity; // 0xcc
	float MasterVolume; // 0xd0
	float SFXVolume; // 0xd4
	float MusicVolume; // 0xd8
	float VoiceVolume; // 0xdc
	float MatchNotifierVolume; // 0xe0
	float VoiceChatVolume; // 0xe4
	float VoiceChatMicVolume; // 0xe8
	int32_t nAudioPanning; // 0xec
	float DesiredFOV; // 0xf0
	float fGamma; // 0xf4
	float fControllerFeedbackStrength; // 0xf8
	int32_t nEnableHudDamage; // 0xfc
	int32_t nReticleColor; // 0x100
	int32_t nReticleType; // 0x104
	int32_t nHealFeedMode; // 0x108
	int32_t nVGSType; // 0x10c
	int32_t nScoreboardType; // 0x110
	int32_t nSpectatorBlueTeamSeriesScore; // 0x114
	int32_t nSpectatorRedTeamSeriesScore; // 0x118
	int32_t TwitchServer; // 0x11c
	int32_t TwitchBitrate; // 0x120
	int32_t TwitchFramerate; // 0x124
	int32_t TwitchMicVolume; // 0x128
	int32_t TwitchGameVolume; // 0x12c
	int32_t TwitchResolution; // 0x130
	int32_t TwitchMicMute; // 0x134
	int32_t TwitchGameMute; // 0x138
	int32_t TwitchSaveUsername; // 0x13c
	FString TwitchTitle; // 0x140
	FString TwitchUsername; // 0x150
	FString DemoVideo; // 0x160
	TArray<FString> DemoResults; // 0x170
	int32_t CustomGameQueueIndex; // 0x180
	TArray<int32_t> CurrentMultiQueues; // 0x184
	TArray<int32_t> OptOutMultiQueues; // 0x194
	int32_t loadingPortraitBanner; // 0x1a4
	TArray<int32_t> newUserWatchedVideos; // 0x1a8
	int32_t ChosenSkinId; // 0x1b8
	int32_t ChosenClassId; // 0x1bc
	int32_t ChosenWeaponId; // 0x1c0
	int32_t ChosenWeaponSkinId; // 0x1c4
	int32_t ChosenPedestalId; // 0x1c8
	int32_t SelectedChampionSortIndex; // 0x1cc
	TArray<int32_t> m_CTAItemIds; // 0x1d0
	FString m_PlayerCTAName; // 0x1e0
	TArray<int32_t> m_TransientItemsAcquired; // 0x1f0
	FString m_SavedLoginVersion; // 0x200
	FString m_LastLoginVersion; // 0x210
	int32_t m_SavedBattlePassLevel; // 0x220
	int32_t m_LastLoginBattlePassLevel; // 0x224
};

struct APrefabInstance : AActor {
	ObjectProperty TemplatePrefab; // 0x280
	int32_t TemplateVersion; // 0x288
	TMap<None, None> ArchetypeToInstanceMap; // 0x28c
	ObjectProperty SequenceInstance; // 0x2d4
	int32_t PI_PackageVersion; // 0x2dc
	int32_t PI_LicenseePackageVersion; // 0x2e0
	TArray<char> PI_Bytes; // 0x2e4
	TArray<ObjectProperty> PI_CompleteObjects; // 0x2f4
	TArray<ObjectProperty> PI_ReferencedObjects; // 0x304
	TArray<FString> PI_SavedNames; // 0x314
	TMap<None, None> PI_ObjectMap; // 0x324
	char m_bIgnoreVersionUpdates : 1; // 0x36c
};

struct ATgHeightFog : AInfo {
	ComponentProperty FogComponent; // 0x280
};

struct UMorphNodeWeight : UMorphNodeWeightBase {
	float NodeWeight; // 0x84
};

struct USpotLightComponent : UPointLightComponent {
	float InnerConeAngle; // 0x240
	float OuterConeAngle; // 0x244
	float LightShaftConeAngle; // 0x248
	ComponentProperty PreviewInnerCone; // 0x24c
	ComponentProperty PreviewOuterCone; // 0x254
	FRotator Rotation; // 0x25c
};

struct UUIGameInfoSummary : UUIResourceDataProvider {
	FString ClassName; // 0x94
	FString GameAcronym; // 0xa4
	FString MapPrefix; // 0xb4
	char bIsTeamGame : 1; // 0xc4
	char bIsDisabled : 1; // 0xc4
	FString GameSettingsClassName; // 0xc8
	FString GameName; // 0xd8
	FString Description; // 0xe8
};

struct ATgDevice_RocketLauncher : ATgDevice {
	FVector m_vProjectileSpawnOffset2; // 0xa04
	int32_t m_nFireCount; // 0xa10
};

struct ATgDevice_AtlasBarrage : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_FireDevice; // 0xa0c
};

struct UTgSeqAct_TemporaryAddDevice : USequenceAction {
	int32_t m_nDeviceId; // 0x108
	int32_t m_nEquipPoint; // 0x10c
};

struct USkelControlFootPlacement : USkelControlLimb {
	float FootOffset; // 0x128
	EAxis FootUpAxis; // 0x12c
	FRotator FootRotOffset; // 0x130
	char bInvertFootUpAxis : 1; // 0x13c
	char bOrientFootToGround : 1; // 0x13c
	char bOnlyEnableForUpAdjustment : 1; // 0x13c
	char m_bManuallyOverrideEffectorLocation : 1; // 0x13c
	char m_bUseCachedFootOffset : 1; // 0x13c
	float MaxUpAdjustment; // 0x140
	float MaxDownAdjustment; // 0x144
	float MaxFootOrientAdjust; // 0x148
	FVector m_vCachedFootOffset; // 0x14c
};

struct UMaterialEffect : UPostProcessEffect {
	ObjectProperty Material; // 0x88
};

struct UTgSeqEvent_LoadoutChanged : USequenceEvent {
	int32_t DeckId; // 0x128
};

struct UTgDeviceFire_SilenceBeam : UTgDeviceFire {
	ObjectProperty m_CachedGauntlet; // 0x268
	float m_fLockOnScale; // 0x270
	float m_fServerRangeBufferMult; // 0x274
	float m_fBaseEncroachmentActorRange; // 0x278
};

struct ATgCharacterPerformance : ATgGame {
	ObjectProperty BasePerformanceCapture; // 0x624
	EPComPerformanceCaptureState CurrentCaptureState; // 0x62c
	FString CharacterInput; // 0x630
	FString SetInput; // 0x640
	int32_t CurrentCharacterIndex; // 0x650
	int32_t CurrentSkinIndex; // 0x654
	TArray<ObjectProperty> CharacterPlacements; // 0x658
	TArray<FString> CharactersToTest; // 0x668
	TArray<int32_t> AllSkinIDs; // 0x678
	TArray<FDeviceToCharacterID> DeviceToCharacterIDPairs; // 0x688
	TArray<FPComPerformanceCaptureStatsPerSkin> StatsPerSkin; // 0x698
	TArray<ObjectProperty> CharacterPawns; // 0x6a8
	ObjectProperty ManifestGroup; // 0x6b8
	FPointer CharacterPerformanceUtility; // 0x6c0
};

struct UTgTutorialAnnouncer : UObject {
	TArray<ObjectProperty> TutorialSounds; // 0x60
	TArray<ObjectProperty> QueuedSounds; // 0x70
	ComponentProperty CurrentSoundAC; // 0x80
	ObjectProperty OwnerPC; // 0x88
};

struct UTgDeviceForm_GraceSupport : UTgDeviceForm {
	ObjectProperty m_CachedWMA; // 0x28c
};

struct UTgAnimBlendByAmmo : UTgAnimNodeBlendList {
	int32_t m_nDefaultChild; // 0x168
	TG_EQUIP_POINT m_EquipPoint; // 0x16c
	char m_bDelayUpdateUntilReplay : 1; // 0x170
	char m_bCheckAmmoPerTick : 1; // 0x170
	TArray<FAmmoBlendParams> m_ChildAmmoParams; // 0x174
	int32_t m_nPendingChildIndex; // 0x184
	int32_t m_nAmmoUpdateTickTag; // 0x188
};

struct UActorFactoryVehicle : UActorFactory {
	AVehicle* VehicleClass; // 0x9c
};

struct UTgInventoryObject_Listen_GiftGiver : UTgInventoryObject_Listen_AbilityProcBase {
	char m_bHasActivated : 1; // 0xcc
};

struct UOnlineTitleFileDownloadBase : UMCPBase {
	TArray<DelegateProperty> ReadTitleFileCompleteDelegates; // 0x80
	TArray<DelegateProperty> RequestTitleFileListCompleteDelegates; // 0x90
	FString BaseUrl; // 0xa0
	FString RequestFileListURL; // 0xb0
	FString RequestFileURL; // 0xc0
	float TimeOut; // 0xd0
	TArray<FFileNameToURLMapping> FilesToUrls; // 0xd4
	DelegateProperty __OnReadTitleFileComplete__Delegate; // 0xe4
	DelegateProperty __OnRequestTitleFileListComplete__Delegate; // 0xf4
};

struct ATgDevice_RestoreSoul : ATgDevice {
	ObjectProperty m_CachedOraclePawn; // 0xa04
	FImpactInfo m_CachedImpact; // 0xa0c
	char m_bApplyCooldown : 1; // 0xa88
};

struct USoundNodeMixer : USoundNode {
	TArray<float> InputVolume; // 0x74
};

struct UGFxEngine : UObject {
	TArray<FGCReference> GCReferences; // 0x60
	int32_t RefCount; // 0x70
	TArray<FName> ForceGarbageCollectUponReleaseTextures; // 0x74
};

struct ATgDevice_Emitter : ATgDevice {
	TArray<ObjectProperty> m_PawnsInRange; // 0xa04
	ObjectProperty m_CollisionProxy; // 0xa14
	char m_bHasProjector : 1; // 0xa1c
	char m_bIsOnOwner : 1; // 0xa1c
	float m_fProjectorPercent; // 0xa20
	ObjectProperty m_CachedPawnOwner; // 0xa24
};

struct UExporter : UObject {
	TArray<FString> FormatExtension; // 0x68
	TArray<FString> FormatDescription; // 0x78
};

struct UInGameAdManager : UPlatformInterfaceBase {
	char bShouldPauseWhileAdOpen : 1; // 0x80
};

struct UTgAIBehaviorAction_ReloadDevice : UTgAIBehaviorAction {
	TG_EQUIP_POINT DeviceToUse; // 0x94
};

struct UUIComponent_BattlePassRewardJoinedLevels : UUIComponent_Display {
	TArray<ObjectProperty> m_pLevels; // 0x124
	ObjectProperty m_mcHeader; // 0x134
	ObjectProperty m_mcTierLock; // 0x13c
};

struct UMaterialExpressionNormalize : UMaterialExpression {
	FExpressionInput VectorInput; // 0xb0
};

struct UGameCrowd_ListOfAgents : UObject {
	TArray<FAgentArchetypeInfo> ListOfAgents; // 0x60
};

struct UTgParticleSystemComponent : UParticleSystemComponent {
	ComponentProperty m_AttachedToSkelMesh; // 0x3c8
	char m_bReenableAfterTeleport : 1; // 0x3d0
};

struct UUIComponent_RaumSoulCharges : UUIComponent_Display {
	ObjectProperty m_CachedRaum; // 0x124
	ObjectProperty m_mcText; // 0x12c
	ObjectProperty m_mcIcon; // 0x134
	ObjectProperty m_mcAnim; // 0x13c
	ObjectProperty m_mcMaxStacks; // 0x144
	char m_bIsHiding : 1; // 0x14c
	char m_bEnabled : 1; // 0x14c
	int32_t m_nCurrentSoulCharges; // 0x150
};

struct UTgAnimNodeBlendByBlink : UAnimNodeBlendPerBone {
	ObjectProperty m_TgPawn; // 0x158
	ComponentProperty m_SkelMesh; // 0x160
	float m_fBlinkAnimRate; // 0x168
	FVector2D m_vTimeBetweenBlinks; // 0x16c
	float m_fTimeTillNextBlink; // 0x174
	TArray<FName> m_DisableBlinkingAnimNodeNameList; // 0x178
	TArray<ObjectProperty> m_CachedNodeList; // 0x188
	char m_bInitializedCachedNodeList : 1; // 0x198
};

struct UUIComponent_HealthBar : UUIComponent_Display {
	TArray<ObjectProperty> m_mcHealthBarTicks; // 0x124
	TArray<ObjectProperty> m_mcHealthBarTickPool; // 0x134
	ObjectProperty m_mcHealthBarContainer; // 0x144
	TArray<FBarTickTypes> m_BarTickTypes; // 0x14c
	FBarTickTypes m_ArmorBarTickInfo; // 0x15c
	int32_t m_nLastUsedHealthTickColorFrame; // 0x19c
	float m_fDisplayedMaxHealth; // 0x1a0
	float m_fDisplayedHealthPct; // 0x1a4
	float m_fActualHealthPct; // 0x1a8
	float m_fLastDisplayedHealthPct; // 0x1ac
	float m_fDisplayedHealthNoArmorPct; // 0x1b0
	float m_fActualHealthNoArmorPct; // 0x1b4
	float m_fLastDisplayedHealthNoArmorPct; // 0x1b8
	float m_fDisplayedMaxArmor; // 0x1bc
	TArray<ObjectProperty> m_mcArmorBarTicks; // 0x1c0
	TArray<ObjectProperty> m_mcArmorBarTickPool; // 0x1d0
	ObjectProperty m_mcArmorBarContainer; // 0x1e0
	ObjectProperty m_mcArmorBarFrame; // 0x1e8
	float m_fDisplayedArmorPct; // 0x1f0
	float m_fActualArmorPct; // 0x1f4
	float m_fLastDisplayedArmorPct; // 0x1f8
	int32_t m_nMaxArmorTicks; // 0x1fc
	int32_t m_nCurrentArmorTicks; // 0x200
	float m_fArmorBarWidth; // 0x204
	float m_fArmorTickPadding; // 0x208
	float m_fDisplayedShieldPct; // 0x20c
	float m_fActualShieldPct; // 0x210
	float m_fLastDisplayedShieldPct; // 0x214
	float m_fHealthPerTick; // 0x218
	int32_t m_nMaxHealthTicks; // 0x21c
	int32_t m_nCurrentHealthTicks; // 0x220
	float m_fBarWidth; // 0x224
	float m_fTickPadding; // 0x228
	float m_fLowHealthThreshold; // 0x22c
	char m_bUseAbyssalEchoTickColor : 1; // 0x230
};

struct UMaterialExpressionSceneTexture : UMaterialExpression {
	FExpressionInput Coordinates; // 0xb0
	ESceneTextureType SceneTextureType; // 0xe4
	char ScreenAlign : 1; // 0xe8
};

struct UParticleModuleLocationStaticVertSurface : UParticleModuleLocationBase {
	ELocationStaticVertSurfaceSource SourceType; // 0x68
	FVector UniversalOffset; // 0x6c
	char bUpdatePositionEachFrame : 1; // 0x78
	char bOrientMeshEmitters : 1; // 0x78
	char bEnforceNormalCheck : 1; // 0x78
	FName StaticMeshActorParamName; // 0x7c
	FVector NormalToCompare; // 0x84
	float NormalCheckToleranceDegrees; // 0x90
	float NormalCheckTolerance; // 0x94
	TArray<int32_t> ValidMaterialIndices; // 0x98
};

struct UAnimSequence : UObject {
	FName SequenceName; // 0x60
	TArray<FAnimNotifyEvent> Notifies; // 0x68
	TArray<ObjectProperty> MetaData; // 0x78
	TArray<FSkelControlModifier> BoneControlModifiers; // 0x88
	float SequenceLength; // 0x98
	int32_t NumFrames; // 0x9c
	float RateScale; // 0xa0
	char bParticleEffectsAreFootsteps : 1; // 0xa4
	char bNoLoopingInterpolation : 1; // 0xa4
	char bIsAdditive : 1; // 0xa4
	char bAdditiveBuiltLooping : 1; // 0xa4
	char bDoNotOverrideCompression : 1; // 0xa4
	char bHasBeenUsed : 1; // 0xa4
	char bWasCompressedWithoutTranslations : 1; // 0xa4
	TArray<FRawAnimSequenceTrack> RawAnimData; // 0xa8
	TArray<FRawAnimSequenceTrack> RawAnimationData; // 0xb8
	TArray<FTranslationTrack> TranslationData; // 0xc8
	TArray<FRotationTrack> RotationData; // 0xd8
	TArray<FCurveTrack> CurveData; // 0xe8
	AnimationCompressionFormat TranslationCompressionFormat; // 0xf8
	AnimationCompressionFormat RotationCompressionFormat; // 0xf9
	AnimationKeyFormat KeyEncodingFormat; // 0xfa
	TArray<int32_t> CompressedTrackOffsets; // 0xfc
	TArray<char> CompressedByteStream; // 0x10c
	FPointer TranslationCodec; // 0x11c
	FPointer RotationCodec; // 0x124
	TArray<FBoneAtom> AdditiveRefPose; // 0x12c
	TArray<FRawAnimSequenceTrack> AdditiveBasePose; // 0x13c
	int32_t EncodingPkgVersion; // 0x14c
	float UseScore; // 0x150
};

struct UMaterialExpressionTerrainLayerSwitch : UMaterialExpression {
	FPointer InstanceOverride; // 0xb0
	FExpressionInput LayerUsed; // 0xb8
	FExpressionInput LayerNotUsed; // 0xec
	FName ParameterName; // 0x120
	char PreviewUsed : 1; // 0x128
	FGuid ExpressionGUID; // 0x12c
};

struct UTgAnimNodeBlendByCombat : UTgAnimNodeBlendList {
	ObjectProperty m_TgP; // 0x168
};

struct ATgAkActor : AActor {
	char m_bCanCheckOcclusion : 1; // 0x280
};

struct ATgPawn_Character : ATgPawn_Biped {
	char c_bUpdatePlayerStatUI : 1; // 0x2fcc
	char m_bInHandFiring : 1; // 0x2fcc
	char r_bNearCapturePoint : 1; // 0x2fcc
	char r_bNearPayload : 1; // 0x2fcc
	char r_bNearSiegeMonster : 1; // 0x2fcc
	char r_bVisibleToEnemies : 1; // 0x2fcc
	char s_bAmmoReloadCheat : 1; // 0x2fcc
	char s_bAutomountProtection : 1; // 0x2fcc
	char m_bRecalcMoveSpeed : 0; // 0x2fcc
	char m_bAttemptingAirJump : 0; // 0x2fcc
	char m_bDelayingStopSpecialJumpFx : 0; // 0x2fcc
	char m_bPendingBounce : 0; // 0x2fcc
	char s_bInitiatingJoin : 0; // 0x2fcc
	char r_bJoinForceView : 0; // 0x2fcc
	char c_bInterpolatingFOV : 0; // 0x2fcc
	char s_bReplicateInhandAmmo : 0; // 0x2fcc
	char m_bPendingPawnModScan : 0; // 0x2fcc
	char c_bShouldTickThisFrame : 0; // 0x2fcc
	char r_bCanChangeLoadout : 0; // 0x2fcc
	float m_fLastCapturePointReclaimedTime; // 0x2fd0
	float m_fMinReclaimPointTime; // 0x2fd4
	float c_fUpdateAltitudeRTPCDelay; // 0x2fd8
	float m_fInHandStartFireTime; // 0x2fdc
	float m_fInHandStopFireTime; // 0x2fe0
	float m_fWallDamagePercent; // 0x2fe4
	float m_fSiegeDamagePercent; // 0x2fe8
	float r_fZoomAmt; // 0x2fec
	char r_nCriticalHit; // 0x2ff0
	float m_fMountZoomOverride; // 0x2ff4
	ObjectProperty r_StuckBombs[0x6]; // 0x2ff8
	int32_t m_nCharacterRole; // 0x3028
	ComponentProperty m_CustomCharacterComponent; // 0x302c
	ComponentProperty m_MountedCollisionComponent; // 0x3034
	ComponentProperty m_MeshEncompassingCollisionComponent; // 0x303c
	TArray<TScriptInterface<Class>> m_CachedMoveSpeedModDevices; // 0x3044
	TArray<TScriptInterface<Class>> m_CachedAccelModDevices; // 0x3054
	TArray<TScriptInterface<Class>> m_CachedDeployModDevices; // 0x3064
	int32_t m_nAirJumps; // 0x3074
	float m_fAirJumpZSpeed; // 0x3078
	FVector m_vBounceVelocity; // 0x307c
	ObjectProperty m_JoinTargetLocal; // 0x3088
	ObjectProperty m_JoinSourceLocal; // 0x3090
	ObjectProperty r_JoinTarget; // 0x3098
	FVector r_vJoinSourceLocation; // 0x30a0
	FVector r_vJoinTargetLocation; // 0x30ac
	float r_fJoinTweenDuration; // 0x30b8
	float c_fFOVInterpStartTimestamp; // 0x30bc
	float c_fFOVInterpStartValue; // 0x30c0
	float c_fFOVInterpEndTimestamp; // 0x30c4
	float c_fLastAppliedFOV; // 0x30c8
	ObjectProperty r_JoinSource; // 0x30cc
	TArray<FForceFaceTargetActor> m_ForceFaceActors; // 0x30d4
	float m_fForceFaceRotationTime; // 0x30e4
	FRotator m_rForcedRotation; // 0x30e8
	float m_fForceFaceRotationRate; // 0x30f4
	int32_t r_nInHandCurrentAmmo; // 0x30f8
	int32_t r_nInHandMaxAmmo; // 0x30fc
	int32_t s_nOppressorMineStackCount; // 0x3100
	float c_fTickCatchup; // 0x3104
	float m_fEmoteMoveSpeedCeiling; // 0x3108
	int32_t r_nEquippedEmotes[0x4]; // 0x310c
	int32_t r_nEquippedSprays[0x4]; // 0x311c
	FWeaponDOF m_CurrentDOFSettings; // 0x312c
	float m_fOverriddenFOV; // 0x3154
	ObjectProperty s_pCaptureProxy; // 0x3158
};

struct ATgDevice_DredgeRMB : ATgDevice {
	ObjectProperty m_CachedInhand; // 0xa04
	ObjectProperty m_RevealDev; // 0xa0c
};

struct UTgSeqAct_MarkSpawnReturn : USequenceAction {
	ObjectProperty m_Teleporter; // 0x108
};

struct UUIData_List : UUIData {
	TArray<ObjectProperty> pData; // 0x64
};

struct UUIDataProvider_OnlinePlayerDataBase : UUIDataProvider {
	int32_t PlayerControllerId; // 0x70
};

struct ATgProj_FuriaQ : ATgProj_Simulated {
	TArray<ObjectProperty> m_StunnedTargets; // 0x52c
	char m_bShouldCheckStop : 1; // 0x53c
	char m_bStopped : 1; // 0x53c
	FVector vTargetStopLocation; // 0x540
};

struct UTgAIBehaviorAction_MoveBase : UTgAIBehaviorAction {
	char bSubtractPawnRadius : 1; // 0x94
	char bSubtractTargetPawnRadius : 1; // 0x94
	char bLookAtTarget : 1; // 0x94
	char bMustHaveLOS : 1; // 0x94
	float MoveTolerance; // 0x98
};

struct UInterpTrackBoolProp : UInterpTrack {
	TArray<FBoolTrackKey> BoolTrack; // 0xa0
	FName PropertyName; // 0xb0
};

struct UGameplayEventsHandler : UObject {
	TArray<int32_t> EventIDFilter; // 0x60
	TArray<FGameStatGroup> GroupFilter; // 0x70
	ObjectProperty Reader; // 0x80
};

struct USeqAct_SetMotionBlurParams : USeqAct_Latent {
	float MotionBlurAmount; // 0x120
	float InterpolateSeconds; // 0x124
	float InterpolateElapsed; // 0x128
	float OldMotionBlurAmount; // 0x12c
};

struct UHttpFactory : UObject {
	FString HttpRequestClassName; // 0x60
};

struct ATgDevice_Telepunch : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedDemon; // 0xa0c
	ObjectProperty m_HitCharacter; // 0xa14
	char m_bLiftApplied : 1; // 0xa1c
	char m_bStealthApplied : 1; // 0xa1c
	float m_fLerpTime; // 0xa20
	FVector m_vHitCharacterInitialLocation; // 0xa24
	float m_fHorizontalHitMaxDist; // 0xa30
	float m_fVerticalHitMaxDist; // 0xa34
	float m_fTeleportPreferedDistance; // 0xa38
	float m_fTargetLockTime; // 0xa3c
};

struct UActorFactoryAmbientSound : UActorFactory {
	ObjectProperty AmbientSoundCue; // 0x9c
};

struct ATgAbyssalEchoSpawnPoint : AActor {
	int32_t m_nTaskForceId; // 0x280
};

struct UTgAIBehaviorAction_UseConsumable : UTgAIBehaviorAction {
	EConsumableType ConsumableType; // 0x94
};

struct UParticleModuleTypeDataMesh : UParticleModuleTypeDataBase {
	ObjectProperty Mesh; // 0x68
	char CastShadows : 1; // 0x70
	char DoCollisions : 1; // 0x70
	char bAllowMotionBlur : 1; // 0x70
	char bOverrideMaterial : 1; // 0x70
	char bCameraFacing : 1; // 0x70
	char bApplyParticleRotationAsSpin : 1; // 0x70
	EMeshScreenAlignment MeshAlignment; // 0x74
	EParticleAxisLock AxisLockOption; // 0x75
	EMeshCameraFacingUpAxis CameraFacingUpAxisOption; // 0x76
	EMeshCameraFacingOptions CameraFacingOption; // 0x77
	float Pitch; // 0x78
	float Roll; // 0x7c
	float Yaw; // 0x80
};

struct ATgLobbyCamera : ACameraActor {
	ObjectProperty m_ViewTarget; // 0x420
	TArray<ObjectProperty> m_FriendlyTargets; // 0x428
	TArray<ObjectProperty> m_EnemyTargets; // 0x438
	FVector m_RenderCenterPointOffset; // 0x448
	char m_bActive : 1; // 0x454
	char m_bAdjustCameraToTarget : 1; // 0x454
	char m_bAdjustZoomByTargetHeight : 1; // 0x454
	char m_bFirstCameraEyeCheck : 1; // 0x454
	int32_t m_nPosition; // 0x458
	float m_fRemainingTweenTime; // 0x45c
	float m_fTotalTweenTime; // 0x460
	FTPOV m_TweenSourcePOV; // 0x464
	float m_fLateralOffsetMultiplier; // 0x488
	float m_fHorizontalOffsetMultiplier; // 0x48c
	float m_fViewLateralOffsetMultiplier; // 0x490
	float m_fViewHorizontalOffsetMultiplier; // 0x494
	float m_fMaxAdjustSpeedTranslation; // 0x498
	float m_fMaxAdjustSpeedRotation; // 0x49c
	FVector m_vViewOffset; // 0x4a0
	FVector m_vOriginalViewOffset; // 0x4ac
	float m_fZoomAdjustBaseHeight; // 0x4b8
	float m_fZoomAdjustMultiplier; // 0x4bc
	float m_fFirstCameraEyeCheckTimestamp; // 0x4c0
	ELobbyCameraTag m_CameraTag; // 0x4c4
};

struct UTgGameplayCurvesSet_AimAssistKeyframes : UTgGameplayCurvesSet {
	TArray<ObjectProperty> HorizMagnetKeyframes; // 0x64
	TArray<ObjectProperty> VertMagnetKeyframes; // 0x74
	TArray<ObjectProperty> FrictionKeyframes; // 0x84
	TArray<ObjectProperty> TrackingByAccuracyKeyframes; // 0x94
	TArray<ObjectProperty> TrackingByAngleKeyframes; // 0xa4
};

struct ALadder : ANavigationPoint {
	ObjectProperty MyLadder; // 0x378
	ObjectProperty LadderList; // 0x380
};

struct UTgMapInfo : UMapInfo {
	ObjectProperty m_EndFocusActor_TF1; // 0x60
	ObjectProperty m_EndFocusActor_TF2; // 0x68
	ObjectProperty m_FatalityFactory_TF1_2; // 0x70
	ObjectProperty m_FatalityFactory_TF1_3; // 0x78
	ObjectProperty m_FatalityFactory_TF1_4; // 0x80
	ObjectProperty m_FatalityFactory_TF2_2; // 0x88
	ObjectProperty m_FatalityFactory_TF2_3; // 0x90
	ObjectProperty m_FatalityFactory_TF2_4; // 0x98
	ObjectProperty m_OverlayPathMesh; // 0xa0
	FVector2D m_vMapCenter; // 0xa8
	FVector2D m_vTaskForce1BaseLocation; // 0xb0
	FVector2D m_vTaskForce2BaseLocation; // 0xb8
	float m_fLockViewBufferZoneSize; // 0xc0
	char m_bSupportsGuardianThrone : 1; // 0xc4
	float m_LitParticleBrightness; // 0xc8
};

struct USeqEvent_RigidBodyCollision : USequenceEvent {
	float MinCollisionVelocity; // 0x128
};

struct ATgWeaponMeshActor : AActor {
	ObjectProperty m_OwningPawn; // 0x280
	UTgSkeletalMeshComponent_Weapon* m_WeaponMesh1PClass; // 0x288
	ComponentProperty m_WeaponMesh1P; // 0x290
	UTgSkeletalMeshComponent_Weapon* m_WeaponMesh3PClass; // 0x298
	ComponentProperty m_WeaponMesh3P; // 0x2a0
	TArray<ObjectProperty> m_SimpleTransitionerNodes1P; // 0x2a8
	TArray<ObjectProperty> m_DeviceModeBlendNodes; // 0x2b8
	TArray<ObjectProperty> m_FitToDurationNodes; // 0x2c8
	TArray<ObjectProperty> m_PaladinsCharacterNodes; // 0x2d8
	TArray<ObjectProperty> m_TriggerCameraAnimNodes; // 0x2e8
	ObjectProperty PoseTransitioner; // 0x2f8
	TArray<ObjectProperty> m_PawnMeshSimpleTransitionerNodes; // 0x300
	TArray<ObjectProperty> m_PawnMeshFitToDurationNodes; // 0x310
	TArray<ObjectProperty> m_PawnMeshPaladinsCharacterNodes; // 0x320
	TArray<ObjectProperty> m_PawnMeshTriggerCameraAnimNodes; // 0x330
	int32_t m_nNumTracersPerShot; // 0x340
	int32_t m_nEquipSlot; // 0x344
	int32_t m_nDeviceId; // 0x348
	int32_t m_MeshAsmId1P; // 0x34c
	int32_t m_MeshAsmId3P; // 0x350
	ATgDevice* m_WeaponClass; // 0x354
	TG_PLAY_FIRE_EFFECT_ON m_PlayFireEffectsOn[0x31]; // 0x35c
	TG_EQUIP_POINT m_ActiveEquipPoint; // 0x38d
	EFirstPersonWeaponAttachState Current1pAttachState; // 0x38e
	char m_bShouldLoopingMuzzleTrace : 1; // 0x390
	char m_bUseSocketForCameraAttach : 1; // 0x390
	char m_bProceduralBob : 1; // 0x390
	char m_bIsFOVZoomed : 1; // 0x390
	char m_bFlourishBlocked : 1; // 0x390
	char m_bIsHoldingBeacon : 1; // 0x390
	char m_bWasViewTargetLastTick : 1; // 0x390
	char m_bUseCameraAnims : 1; // 0x390
	char c_bEnemyMatLoaded : 0; // 0x390
	char bUseEmitterPoolForTracers : 0; // 0x390
	ComponentProperty m_HandsMesh; // 0x394
	ComponentProperty m_HeadMesh1P; // 0x39c
	FVector2D m_v2WeaponLagAimOffset; // 0x3a4
	FVector2D m_nMaxWeaponLag; // 0x3ac
	FVector2D m_v2WeaponLagInterpSpeed; // 0x3b4
	FVector2D m_v2WeaponLagSmoothingFactor; // 0x3bc
	FRotator m_rLastRotation; // 0x3c4
	FVector2D m_fSmoothedAimOffset; // 0x3d0
	float m_fSmoothAimFactor; // 0x3d8
	ObjectProperty m_FireCameraShake; // 0x3dc
	int32_t m_nTracerCounter; // 0x3e4
	int32_t m_nTracerFrequency; // 0x3e8
	FName m_TracerName; // 0x3ec
	float m_fTracerLifetime; // 0x3f4
	FName m_HitTargetName; // 0x3f8
	FName m_HitWallName; // 0x400
	FName m_WhizbyName; // 0x408
	float m_BeamEmitterEndPointOffset; // 0x410
	int32_t m_nBeaconMeshId; // 0x414
	TArray<ObjectProperty> m_HitReactionSkelControls; // 0x418
	TArray<FQueuedImpactEffect> m_QueuedImpactEffects; // 0x428
	TArray<FQueuedImpactDecal> m_QueuedImpactDecals; // 0x438
	ObjectProperty m_GameplayCurves; // 0x448
};

struct UTgInventoryObject_Listen_LastStand : UTgInventoryObject_Listen_ActiveDuringAbility {
	char m_bHealthInActiveRange : 1; // 0xd4
};

struct ATgDevice_ShellSpin : ATgDevice_Charge {
	float m_fZoomDurationOverride; // 0xa78
};

struct ATgDevice_YingInhand : ATgDevice {
	ObjectProperty m_CachedYingPawn; // 0xa04
};

struct UMcpMessageManager : UMcpMessageBase {
	FPointer VfTable_FTickableObject; // 0xec
	FString CreateMessageUrl; // 0xf4
	FString DeleteMessageUrl; // 0x104
	FString QueryMessagesUrl; // 0x114
	FString QueryMessageContentsUrl; // 0x124
	FString DeleteAllMessagesUrl; // 0x134
	TArray<FMcpCompressMessageRequest> CompressMessageRequests; // 0x144
	TArray<FMcpUncompressMessageRequest> UncompressMessageRequests; // 0x154
};

struct UTgCombinedPostProcessEffect : UPostProcessEffect {
	FColor HitEffectColor; // 0x88
	FVector SceneShadows; // 0x8c
	FVector SceneHighLights; // 0x98
	FVector SceneMidTones; // 0xa4
	float SceneDesaturation; // 0xb0
	FVector SceneColorize; // 0xb4
};

struct ATgDeploy_Midnight : ATgDeployable {
	float r_fPersistTime; // 0x46c
	ObjectProperty r_TargetPawn; // 0x470
	ObjectProperty m_pMIC; // 0x478
	ATgMidnightFogVolumeDensityInfo* m_FogInfoClass; // 0x480
	ObjectProperty m_FogInfo; // 0x488
	char m_bCleanedUp : 1; // 0x490
	char m_b3PFxActive : 1; // 0x490
	char m_b1PSoundActive : 1; // 0x490
};

struct UTgSeqAct_SendPlayerTrackingEvent : USequenceAction {
	int32_t m_nEventId; // 0x108
	int32_t m_nSubEventID; // 0x10c
	FString m_ReferenceName; // 0x110
	int32_t m_nReferenceValue; // 0x120
};

struct UTgDeviceForm_ShadowDash : UTgDeviceForm {
	int32_t nDashFXIndex; // 0x28c
};

struct UUIData_Accolade : UUIData {
	int32_t m_nIconFrame; // 0x64
	int32_t m_nValue; // 0x68
	int32_t m_nTitleId; // 0x6c
};

struct UAmbientOcclusionEffect : UPostProcessEffect {
	FLinearColor OcclusionColor; // 0x88
	float OcclusionPower; // 0x98
	float OcclusionScale; // 0x9c
	float OcclusionBias; // 0xa0
	float MinOcclusion; // 0xa4
	char SSAO2 : 1; // 0xa8
	char bAngleBasedSSAO : 1; // 0xa8
	float OcclusionRadius; // 0xac
	float OcclusionAttenuation; // 0xb0
	EAmbientOcclusionQuality OcclusionQuality; // 0xb4
	float OcclusionFadeoutMinDistance; // 0xb8
	float OcclusionFadeoutMaxDistance; // 0xbc
	float HaloDistanceThreshold; // 0xc0
	float HaloDistanceScale; // 0xc4
	float HaloOcclusion; // 0xc8
	float EdgeDistanceThreshold; // 0xcc
	float EdgeDistanceScale; // 0xd0
	float FilterDistanceScale; // 0xd4
	int32_t FilterSize; // 0xd8
	float HistoryConvergenceTime; // 0xdc
	float HistoryWeightConvergenceTime; // 0xe0
};

struct ATgDevice_HealingStation : ATgDevice_TurretMod {
	float m_fFireTimer; // 0xa04
	ObjectProperty m_CachedPawnOwner; // 0xa08
};

struct UTgCameraModifier_LobbyCameraTransition : UCameraModifier {
	ObjectProperty SourceCamera; // 0x80
	ObjectProperty DestinationCamera; // 0x88
	CameraTransType TransitionType; // 0x90
	float fSlideDistance; // 0x94
};

struct ATgProj_BunnyHeal : ATgProj_Simulated {
	float m_fRetargetingTimer; // 0x52c
	float m_fRetargetTime; // 0x530
	ObjectProperty m_pBouncedFrom; // 0x534
	ObjectProperty m_CachedBunnyHeal; // 0x53c
};

struct UCloudStorageBase : UPlatformInterfaceBase {
	TArray<FString> LocalCloudFiles; // 0x80
	char bSuppressDelegateCalls : 1; // 0x90
};

struct ATgDevice_Vengeance_Lex : ATgDevice {
	ObjectProperty r_MarkedPlayer; // 0xa04
	ObjectProperty s_PreviouslyMarkedPlayer; // 0xa0c
	char s_bRevealApplied : 1; // 0xa14
	ObjectProperty s_DiscoveryDevice; // 0xa18
	float m_fMarkPlayerRefreshRate; // 0xa20
	float m_fCheckPlayerRefreshRate; // 0xa24
};

struct UUIData_List_PrimaryQueues : UUIData_List_TitleIcon {
	ObjectProperty pCustomData; // 0x88
	ObjectProperty pTrainingData; // 0x90
};

struct UTgInventoryObject_Listen_Combo_Evie : UTgInventoryObject_Listen_Combo {
	TArray<ObjectProperty> m_MarkedTargets; // 0xcc
	float m_fBlinkTimestamp; // 0xdc
	float m_fIceBlockTimestamp; // 0xe0
};

struct UDrawCylinderComponent : UPrimitiveComponent {
	FColor CylinderColor; // 0x24c
	ObjectProperty CylinderMaterial; // 0x250
	float CylinderRadius; // 0x258
	float CylinderTopRadius; // 0x25c
	float CylinderHeight; // 0x260
	float CylinderHeightOffset; // 0x264
	int32_t CylinderSides; // 0x268
	char bDrawWireCylinder : 1; // 0x26c
	char bDrawLitCylinder : 1; // 0x26c
	char bDrawOnlyIfSelected : 1; // 0x26c
};

struct UUIComponent_DLCPack : UUIComponent_Display {
	TArray<ObjectProperty> m_mcDetail; // 0x124
	ObjectProperty m_mcNew; // 0x134
	ObjectProperty m_mcTitle; // 0x13c
	ObjectProperty m_mcSubtitle; // 0x144
	ObjectProperty m_mcPrice; // 0x14c
	ObjectProperty m_mcConsolePrice; // 0x154
	ObjectProperty m_mcDollars; // 0x15c
	ObjectProperty m_mcCents; // 0x164
	ObjectProperty m_mcCurrency; // 0x16c
	ObjectProperty m_mcOneTimePurchase; // 0x174
	ObjectProperty m_mcBuyNowText; // 0x17c
	ObjectProperty m_mcRefund; // 0x184
	ObjectProperty m_mcRefundCurrency; // 0x18c
	ObjectProperty m_mcSaleBanner; // 0x194
	ObjectProperty m_mcDLCTexture; // 0x19c
	ObjectProperty m_mcPanelButton; // 0x1a4
	ObjectProperty m_pPurchaseButton; // 0x1ac
	ObjectProperty m_pRealMoneyPrice; // 0x1b4
	ObjectProperty m_pCrystalPrice; // 0x1bc
	ObjectProperty m_pPurchaseButtonNew; // 0x1c4
	ObjectProperty m_mcGamepadPrompt; // 0x1cc
	AdTextureSize m_eTextureSize; // 0x1d4
	char m_bIsPortrait : 1; // 0x1d8
	char m_bIsPanelButton : 1; // 0x1d8
	char m_bScaleOnRollover : 1; // 0x1d8
	char m_bShowDetailsOnSelect : 1; // 0x1d8
	int32_t m_nPackId; // 0x1dc
	FString m_sPackPrefix; // 0x1e0
	FName m_sGamepadBuyKey; // 0x1f0
};

struct UUIComponent_LootItem : UUIComponent_Display {
	ObjectProperty m_pItem; // 0x124
	ObjectProperty m_mcXName; // 0x12c
	ObjectProperty m_mcRentalIcon; // 0x134
	ObjectProperty m_mcRentalText; // 0x13c
};

struct UUIComponent_GoalReward : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcItemName; // 0x12c
	ObjectProperty m_mcGoal; // 0x134
	ObjectProperty m_mcOwned; // 0x13c
	ObjectProperty m_mcLock; // 0x144
	ObjectProperty m_mcIcon; // 0x14c
	ObjectProperty m_Progress; // 0x154
};

struct UUIComponent_RolledItem : UUIComponent_Display {
	ObjectProperty m_pCard; // 0x124
	ObjectProperty m_pLegendaryCard; // 0x12c
	ObjectProperty m_pItem; // 0x134
	ObjectProperty m_mcItemDuplicateLabel; // 0x13c
	ObjectProperty m_pReplacementItem; // 0x144
	ObjectProperty m_pFrameButton; // 0x14c
	ObjectProperty m_SubItems; // 0x154
	ObjectProperty m_pEquipButton; // 0x15c
	ObjectProperty m_pEquippedText; // 0x164
	char bRollover : 1; // 0x16c
	ObjectProperty m_akItemAnimCurrency; // 0x170
};

struct UUIComponent_Skill : UUIComponent_Display {
	ObjectProperty m_mcPrompt; // 0x124
	ObjectProperty m_mcBase; // 0x12c
	ObjectProperty m_mcIcon; // 0x134
	ObjectProperty m_mcTitle; // 0x13c
	ObjectProperty m_mcDamage; // 0x144
	ObjectProperty m_mcSubtitle; // 0x14c
	ObjectProperty m_mcSubtitleShort; // 0x154
	ObjectProperty m_mcCooldown; // 0x15c
	ObjectProperty m_mcCooldownTF; // 0x164
};

struct UMaterialExpressionConstant2Vector : UMaterialExpression {
	float R; // 0xb0
	float G; // 0xb4
};

struct UTgInventoryObject_Listen_Combo_Grover : UTgInventoryObject_Listen_Combo {
	FVector m_vAxeStartingLocation; // 0xcc
};

struct UPComPictureInPictureScene : UObject {
	float SkyBrightness; // 0x60
	FColor SkyColor; // 0x64
	float LightBrightness; // 0x68
	char bAlwaysAllowAudioPlayback : 1; // 0x6c
	char bForceAllUsedMipsResident : 1; // 0x6c
	FPointer Scene; // 0x70
	TArray<ComponentProperty> Components; // 0x78
	ComponentProperty DirectionalLight; // 0x88
	ComponentProperty DirectionalBounceLight; // 0x90
	ComponentProperty SkyLight; // 0x98
	ComponentProperty LineBatcher; // 0xa0
};

struct UUIComponent_SocialPlayer : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_pName; // 0x12c
	ObjectProperty m_Avatar; // 0x134
	ObjectProperty m_CrossplayIcon; // 0x13c
	ObjectProperty m_mcStatus; // 0x144
	ObjectProperty m_mcLevel; // 0x14c
	ObjectProperty m_mcLevelX; // 0x154
	ObjectProperty m_mcRankedIndicator; // 0x15c
	ObjectProperty m_mcRankedIcon; // 0x164
	ObjectProperty m_mcFrame; // 0x16c
	ObjectProperty m_mcTitle; // 0x174
	ObjectProperty m_mcAddIcon; // 0x17c
	ObjectProperty m_mcAddFrame; // 0x184
	ObjectProperty m_mcAddFrameBG; // 0x18c
};

struct UUIComponent_Button_LoadoutDeathCard : UUIComponent_Display {
	ObjectProperty m_mcDeathCard; // 0x124
	ObjectProperty m_mcName; // 0x12c
};

struct ATgHoldSpot : ATgDefensePoint {
	ObjectProperty HoldVehicle; // 0x3a0
};

struct UTgAIBehaviorCondition_CombatTargetInDeviceVolume : UTgAIBehaviorCondition {
	int32_t DeviceID; // 0x98
	char bMustBeEnemy : 1; // 0x9c
};

struct USeqVar_Bool : USequenceVariable {
	int32_t bValue; // 0xa0
};

struct UTexture2DDynamic : UTexture {
	int32_t SizeX; // 0x100
	int32_t SizeY; // 0x104
	EPixelFormat Format; // 0x108
	int32_t NumMips; // 0x10c
	char bIsResolveTarget : 1; // 0x110
};

struct UUIComponent_RatingInteractable : UUIComponent_Interactable {
	ObjectProperty m_mcRatingIcon; // 0x140
};

struct UUIComponent_PlaySettings : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcSite; // 0x12c
	ObjectProperty m_mcSubtitle; // 0x134
	ObjectProperty m_pSiteSelectList; // 0x13c
	ObjectProperty m_pLeftArrow; // 0x144
	ObjectProperty m_pRightArrow; // 0x14c
	ObjectProperty m_pCloseButton; // 0x154
	ObjectProperty m_pConfirmButton; // 0x15c
	ObjectProperty m_pSelectedSite; // 0x164
	ObjectProperty m_pPreviewSite; // 0x16c
	float m_fPreviewTime; // 0x174
	float m_fPreviewDuration; // 0x178
};

struct UUIComponent_EventBundlePanelWithRewards : UUIComponent_EventBundlePanel {
	ObjectProperty m_mcRewards; // 0x144
	ObjectProperty m_mcRewardsCurrencyTitle; // 0x14c
	ObjectProperty m_mcRewardsDescription; // 0x154
	ObjectProperty m_mcRewardsHidePadding; // 0x15c
	ObjectProperty m_pRewardItems; // 0x164
	Fdword m_dwCurrentEventCurrencyType; // 0x16c
	Fdword m_dwCurrentEventRewardsXPTable; // 0x170
	Fdword m_dwCurrentEventRewardsVendor; // 0x174
};

struct ULightmassPrimitiveSettingsObject : UObject {
	FLightmassPrimitiveSettings LightmassSettings; // 0x60
};

struct UTgSkelCon_SkinGate : USkelControlBase {
	FSkelControlSkinGateChild DefaultChild; // 0xd0
	TArray<FSkelControlSkinGateChild> ChildControls; // 0xe4
};

struct UTgEffectForm_Maeve_Midnight : UTgEffectForm {
	int32_t m_nEndFXId; // 0xfc
	ObjectProperty m_pEndFX; // 0x100
	ObjectProperty m_pCameraEffect; // 0x108
	float m_fEndFXKillTime; // 0x110
};

struct UTexture : USurface {
	char SRGB : 1; // 0x60
	char RGBE : 1; // 0x60
	char bIsSourceArtUncompressed : 1; // 0x60
	char CompressionNoAlpha : 1; // 0x60
	char CompressionNone : 1; // 0x60
	char CompressionNoMipmaps : 1; // 0x60
	char CompressionFullDynamicRange : 1; // 0x60
	char DeferCompression : 1; // 0x60
	char NeverStream : 0; // 0x60
	char bDitherMipMapAlpha : 0; // 0x60
	char bPreserveBorderR : 0; // 0x60
	char bPreserveBorderG : 0; // 0x60
	char bPreserveBorderB : 0; // 0x60
	char bPreserveBorderA : 0; // 0x60
	char bNoTiling : 0; // 0x60
	char bForcePVRTC4 : 0; // 0x60
	char bAsyncResourceReleaseHasBeenStarted : 0; // 0x60
	char bUseCinematicMipLevels : 0; // 0x60
	float UnpackMin[0x4]; // 0x64
	float UnpackMax[0x4]; // 0x74
	FUntypedBulkData_Mirror SourceArt; // 0x84
	TextureCompressionSettings CompressionSettings; // 0xc4
	TextureFilter Filter; // 0xc5
	TextureGroup LODGroup; // 0xc6
	TextureGroup CachedLODGroup; // 0xc7
	TextureMipGenSettings MipGenSettings; // 0xc8
	int32_t LODBias; // 0xcc
	int32_t CachedCombinedLODBias; // 0xd0
	int32_t NumCinematicMipLevels; // 0xd4
	FPointer Resource; // 0xd8
	float AdjustBrightness; // 0xe0
	float AdjustBrightnessCurve; // 0xe4
	float AdjustVibrance; // 0xe8
	float AdjustSaturation; // 0xec
	float AdjustRGBCurve; // 0xf0
	float AdjustHue; // 0xf4
	int32_t InternalFormatLODBias; // 0xf8
	int32_t RequiredCreationFlags; // 0xfc
};

struct UPBRuleNodeRandom : UPBRuleNodeBase {
	int32_t NumOutputs; // 0x70
	int32_t MinNumExecuted; // 0x74
	int32_t MaxNumExecuted; // 0x78
};

struct UTgInvListener_KillVengeanceTarget : UTgInvListener {
	ObjectProperty m_CachedVengeance; // 0xc4
};

struct USeqAct_MobileAddInputZones : USequenceAction {
	FName ZoneName; // 0x108
	ObjectProperty NewZone; // 0x110
};

struct UAnimNodeAdditiveBlending : UAnimNodeBlend {
	char bPassThroughWhenNotRendered : 1; // 0x124
};

struct UActorFactoryApexDestructible : UActorFactory {
	char bStartAwake : 1; // 0x9c
	ERBCollisionChannel RBChannel; // 0xa0
	FRBCollisionChannelContainer CollideWithChannels; // 0xa4
	ObjectProperty DestructibleAsset; // 0xa8
};

struct USeqEvent_HudRenderImage : USeqEvent_HudRender {
	FLinearColor DisplayColor; // 0x140
	FVector DisplayLocation; // 0x150
	ObjectProperty DisplayTexture; // 0x15c
	float XL; // 0x164
	float YL; // 0x168
	float U; // 0x16c
	float V; // 0x170
	float UL; // 0x174
	float VL; // 0x178
};

struct AKActorFromStatic : AKActor {
	ObjectProperty MyStaticMeshActor; // 0x3b4
	float MaxImpulseSpeed; // 0x3bc
};

struct ATgTrigger_Use : ATrigger {
	FString m_sDisplayText; // 0x290
	FString m_sInactiveText; // 0x2a0
	int32_t m_nInteractDistance; // 0x2b0
	char m_bAimToInteract : 1; // 0x2b4
	int32_t m_nDisplayMsgId; // 0x2b8
	int32_t m_nInactiveMsgId; // 0x2bc
};

struct UTgDeviceForm_KingBomb : UTgDeviceForm {
	char m_bKingBombActive : 1; // 0x28c
};

struct UInterpTrackInstParticleReplay : UInterpTrackInst {
	float LastUpdatePosition; // 0x60
};

struct UTgAIBehaviorCondition_DistanceFromShield : UTgAIBehaviorCondition_DistanceBase {
	char bMustBeEnemy : 1; // 0x9c
};

struct UTgGamePhase_Branch : UTgGamePhase {
	char m_bConditionMet : 1; // 0xb8
};

struct UUIData_MatchInvitePlayerState : UUIData {
	Fdword m_dwPlayerId; // 0x64
	MatchInvitePlayerState m_eState; // 0x68
	Fdword m_dwAvatarIcon; // 0x6c
	char m_bLocalPlayer : 1; // 0x70
	char m_bInParty : 1; // 0x70
	char m_bFriendly : 1; // 0x70
};

struct USkelControl_Multiply : USkelControlBase {
	float Multiplier; // 0xd0
};

struct UInterpTrackFloatParticleParam : UInterpTrackFloatBase {
	FName ParamName; // 0xb8
};

struct UTgDeviceForm_Pursuit : UTgDeviceForm {
	ObjectProperty m_CachedLex; // 0x28c
	FName m_LeftSlideSkelControlName1P; // 0x294
	FName m_RightSlideSkelControlName1P; // 0x29c
	FName m_LeftSlideSkelControlName3P; // 0x2a4
	FName m_RightSlideSkelControlName3P; // 0x2ac
	ObjectProperty m_LeftSlideSkelControl1P; // 0x2b4
	ObjectProperty m_RightSlideSkelControl1P; // 0x2bc
	ObjectProperty m_LeftSlideSkelControl3P; // 0x2c4
	ObjectProperty m_RightSlideSkelControl3P; // 0x2cc
	float c_fPreviousLeftSlideStrength; // 0x2d4
	float c_fPreviousRightSlideStrength; // 0x2d8
	char m_bCachedDualFireParity : 1; // 0x2dc
};

struct UTgSetting : UTgObject {
	float m_fDefault; // 0x60
	float m_fConfigDefault; // 0x64
	float m_fOriginal; // 0x68
	float m_fMax; // 0x6c
	float m_fMin; // 0x70
	float m_fTemp; // 0x74
	float m_fValue; // 0x78
	float m_fPrecision; // 0x7c
	SETTING_TYPE m_eType; // 0x80
	TArray<FOptionData> m_Options; // 0x84
};

struct UTgSeqAct_AIStartFireAt : USequenceAction {
	char ForcedFireMode; // 0x108
};

struct UUIComponent_AbilityPointsPool : UUIComponent_Display {
	char m_bDirty : 1; // 0x124
	int32_t m_nTickCallbackHandle; // 0x128
	ObjectProperty m_mcAbilityPointsPool; // 0x12c
	ObjectProperty m_mcAbilityIcon[0x4]; // 0x134
	ObjectProperty m_mcPointsFill[0x4]; // 0x154
	ObjectProperty m_mcPointsText[0x4]; // 0x174
	ObjectProperty m_mcTalentFocusFrame[0x4]; // 0x194
	float m_fFillWidth; // 0x1b4
	int32_t m_nPoints[0x4]; // 0x1b8
	AbilityModifiedByDevice m_eFocusedAbility; // 0x1c8
};

struct UTgAnimBlendByRecoilTime : UAnimNodeBlend {
	ObjectProperty m_TgDeviceForm; // 0x124
	ObjectProperty m_TgPawn; // 0x12c
	float m_PctBlend; // 0x134
	float m_fBlendTime; // 0x138
	float m_fMaxRecoilTime; // 0x13c
};

struct UInterpTrackSound : UInterpTrackVectorBase {
	TArray<FSoundTrackKey> Sounds; // 0xb8
	char bPlayOnReverse : 1; // 0xc8
	char bContinueSoundOnMatineeEnd : 1; // 0xc8
	char bSuppressSubtitles : 1; // 0xc8
	char bTreatAsDialogue : 1; // 0xc8
};

struct USeqAct_SubtractFloat : USeqAct_SetSequenceVariable {
	float ValueA; // 0x108
	float ValueB; // 0x10c
	float FloatResult; // 0x110
	int32_t IntResult; // 0x114
};

struct UTgDeviceFire_DrogozInhand_Salvo : UTgDeviceFire_DrogozInhand {
	ObjectProperty m_CachedDrogozInhand; // 0x268
};

struct UTgInvListener_RaumFullRev : UTgInvListener {
	ObjectProperty m_CachedRaum; // 0xc4
	char m_bActiveEffects : 1; // 0xcc
};

struct UTgAnimBlendPerBone : UAnimNodeBlendPerBone {
	char m_bLoopSourceChild : 1; // 0x158
	char m_bLoopTargetChild : 1; // 0x158
	char m_bPlaySourceChild : 1; // 0x158
	char m_bPlayTargetChild : 1; // 0x158
	char m_bSetStrengthFromAnimNode : 1; // 0x158
	char m_bInvertStrengthFromAnimNode : 1; // 0x158
	char m_bInitializedCachedNodeList : 1; // 0x158
	TArray<FName> m_StrengthAnimNodeNameList; // 0x15c
	TArray<ObjectProperty> m_CachedNodeList; // 0x16c
};

struct ATgDevice_VanguardUlt : ATgDevice {
	ObjectProperty m_CachedVanguard; // 0xa04
	ObjectProperty s_Target; // 0xa0c
	FVector m_vThrowVector; // 0xa14
	FVector s_vServerGrabOffset; // 0xa20
	char c_bWaitingForHit : 1; // 0xa2c
	char m_bGrabFailed : 1; // 0xa2c
};

struct UMobileMenuScene : UObject {
	FString MenuName; // 0x60
	TArray<ObjectProperty> MenuObjects; // 0x70
	ObjectProperty SceneCaptionFont; // 0x80
	ObjectProperty InputOwner; // 0x88
	char bSceneDoesNotRequireInput : 1; // 0x90
	char bRelativeLeft : 1; // 0x90
	char bRelativeTop : 1; // 0x90
	char bRelativeWidth : 1; // 0x90
	char bRelativeHeight : 1; // 0x90
	char bApplyGlobalScaleLeft : 1; // 0x90
	char bApplyGlobalScaleTop : 1; // 0x90
	char bApplyGlobalScaleWidth : 1; // 0x90
	char bApplyGlobalScaleHeight : 0; // 0x90
	char TouchpadIndex; // 0x94
	float Left; // 0x98
	float Top; // 0x9c
	float Width; // 0xa0
	float Height; // 0xa4
	float InitialLeft; // 0xa8
	float InitialTop; // 0xac
	float InitialWidth; // 0xb0
	float InitialHeight; // 0xb4
	float AuthoredGlobalScale; // 0xb8
	float Opacity; // 0xbc
	ObjectProperty UITouchSound; // 0xc0
	ObjectProperty UIUnTouchSound; // 0xc8
};

struct UTgGameDC_Chat : UTgObject {
	FQueueMessage c_CurrentMessage; // 0x60
	TArray<FQueueMessage> c_QueuedMessages; // 0x90
	float c_fProcessTime; // 0xa0
	TArray<ObjectProperty> c_DeferredMessages; // 0xa4
	ObjectProperty m_scFirstBlood; // 0xb4
	TArray<FMessageToken> m_MessageTokens; // 0xbc
	float m_fLastEnemyKilledAllyMessageTime; // 0xcc
	float m_fMinEnemyKilledAllyMessageTime; // 0xd0
	float m_fLastAllyKilledEnemyMessageTime; // 0xd4
	float m_fMinAllyKilledEnemyMessageTime; // 0xd8
};

struct UUIDataProvider_OnlinePartyChatList : UUIDataProvider_OnlinePlayerDataBase {
	TArray<FOnlinePartyMember> PartyMembersList; // 0x74
	TArray<FString> NatTypes; // 0x84
	FString NickNameCol; // 0x94
	FString NatTypeCol; // 0xa4
	FString IsLocalCol; // 0xb4
	FString IsInPartyVoiceCol; // 0xc4
	FString IsTalkingCol; // 0xd4
	FString IsInGameSessionCol; // 0xe4
	FString IsPlayingThisGameCol; // 0xf4
};

struct ATgDevice_EnlightenmentGun : ATgDevice {
	ObjectProperty m_CachedPrincess; // 0xa04
	char m_bAutoFireAfterPostHitDelay : 1; // 0xa0c
};

struct UUIComponent_OptionEntryBase : UUIComponent_Interactable {
	ObjectProperty m_mcLabel; // 0x140
	ObjectProperty m_pGroup; // 0x148
};

struct UTgBeamHelper : UTgObject {
	int32_t m_nSpecialFxId; // 0x60
	ObjectProperty m_pSpecialFx; // 0x64
	TArray<ComponentProperty> m_pPSCList; // 0x6c
	char m_bVisibilityEnabled : 1; // 0x7c
	char m_bCurrentlyVisible : 1; // 0x7c
	char m_bRequiresTarget : 1; // 0x7c
	char m_bTangentsEnabled : 1; // 0x7c
	FVector m_vInitialTangent; // 0x80
	ObjectProperty m_pOwner; // 0x8c
	ObjectProperty m_pTarget; // 0x94
	ComponentProperty m_pAttachMesh; // 0x9c
	FName m_nmAttachMeshSocket; // 0xa4
};

struct UUIDataProvider_OnlinePlayerStorageArray : UUIDataProvider {
	ObjectProperty PlayerStorage; // 0x70
	int32_t PlayerStorageId; // 0x78
	FString ColumnHeaderText; // 0x7c
	TArray<FName> Values; // 0x8c
};

struct UTgAIBehaviorCondition_IsLastAttackerOfType : UTgAIBehaviorCondition {
	ECombatTargetType TargetType; // 0x98
};

struct UOnlineAuthInterfaceImpl : UObject {
	FPointer VfTable_IOnlineAuthInterface; // 0x60
	ObjectProperty OwningSubsystem; // 0x68
	char bAuthReady : 1; // 0x70
	FSparseArray_Mirror ClientAuthSessions; // 0x74
	FSparseArray_Mirror ServerAuthSessions; // 0xac
	FSparseArray_Mirror PeerAuthSessions; // 0xe4
	FSparseArray_Mirror LocalClientAuthSessions; // 0x11c
	FSparseArray_Mirror LocalServerAuthSessions; // 0x154
	FSparseArray_Mirror LocalPeerAuthSessions; // 0x18c
	TArray<DelegateProperty> AuthReadyDelegates; // 0x1c4
	TArray<DelegateProperty> ClientAuthRequestDelegates; // 0x1d4
	TArray<DelegateProperty> ServerAuthRequestDelegates; // 0x1e4
	TArray<DelegateProperty> ClientAuthResponseDelegates; // 0x1f4
	TArray<DelegateProperty> ServerAuthResponseDelegates; // 0x204
	TArray<DelegateProperty> ClientAuthCompleteDelegates; // 0x214
	TArray<DelegateProperty> ServerAuthCompleteDelegates; // 0x224
	TArray<DelegateProperty> ClientAuthEndSessionRequestDelegates; // 0x234
	TArray<DelegateProperty> ServerAuthRetryRequestDelegates; // 0x244
	TArray<DelegateProperty> ClientConnectionCloseDelegates; // 0x254
	TArray<DelegateProperty> ServerConnectionCloseDelegates; // 0x264
	DelegateProperty __OnAuthReady__Delegate; // 0x274
	DelegateProperty __OnClientAuthRequest__Delegate; // 0x284
	DelegateProperty __OnServerAuthRequest__Delegate; // 0x294
	DelegateProperty __OnClientAuthResponse__Delegate; // 0x2a4
	DelegateProperty __OnServerAuthResponse__Delegate; // 0x2b4
	DelegateProperty __OnClientAuthComplete__Delegate; // 0x2c4
	DelegateProperty __OnServerAuthComplete__Delegate; // 0x2d4
	DelegateProperty __OnClientAuthEndSessionRequest__Delegate; // 0x2e4
	DelegateProperty __OnServerAuthRetryRequest__Delegate; // 0x2f4
	DelegateProperty __OnClientConnectionClose__Delegate; // 0x304
	DelegateProperty __OnServerConnectionClose__Delegate; // 0x314
};

struct UMobileMenuBarItem : UObject {
	int32_t Width; // 0x60
	int32_t Height; // 0x64
	FVector2D VpPos; // 0x68
};

struct ATargetPoint : AKeypoint {
	int32_t SpawnRefCount; // 0x288
};

struct UImageBasedReflectionComponent : UStaticMeshComponent {
	char bEnabled : 1; // 0x310
	char bTwoSided : 1; // 0x310
	ObjectProperty ReflectionTexture; // 0x314
	FLinearColor ReflectionColor; // 0x31c
};

struct UParticleModuleAttractorLine : UParticleModuleAttractorBase {
	FVector EndPoint0; // 0x68
	FVector EndPoint1; // 0x74
	FRawDistributionFloat Range; // 0x80
	FRawDistributionFloat Strength; // 0xa4
};

struct UPComMusicThemePlayer : UObject {
	FPointer VfTable_FTickableObject; // 0x60
	FString MusicThemePath; // 0x68
	ObjectProperty MusicTheme; // 0x78
	ComponentProperty MusicComp; // 0x80
	ObjectProperty MusicSyncActor; // 0x88
	FName LastMusicEvent; // 0x90
	FMusicTrackStruct CurrentMusicTrack; // 0x98
	float CurrentMusicTrackStartTime; // 0xc4
	float CurrentMusicTrackDuration; // 0xc8
};

struct ATgPickupFactory_Item : ATgPickupFactory {
	ObjectProperty PickupSound; // 0x3d4
	FString PickupMessage; // 0x3dc
	float RespawnTime; // 0x3ec
};

struct UUIData_TitleQuantity : UUIData {
	FString m_sTitle; // 0x64
	int32_t m_nQuantity; // 0x74
	int32_t m_nTotal; // 0x78
};

struct UTgDeviceFire_CorvusBeacon : UTgDeviceFire {
	float m_fServerScaleBufferMult; // 0x268
	float m_fBaseEncroachmentActorRange; // 0x26c
	float m_fScaleYZ; // 0x270
};

struct UUIData_ChestDataWithCTA : UUIData {
	Fdword m_dwCTACount; // 0x64
	ObjectProperty m_pChestData; // 0x68
};

struct UUIComponent_CommendationToastEntry : UUIComponent_Display {
	ObjectProperty m_mcItemIcon; // 0x124
	ObjectProperty m_mcTitle; // 0x12c
	ObjectProperty m_mcDesc; // 0x134
	ObjectProperty m_mcPointsAmountTF; // 0x13c
	ObjectProperty m_pCloseButton; // 0x144
	float m_fOriginalXPos; // 0x14c
	float m_fWidth; // 0x150
	char m_bInitialized : 1; // 0x154
	char m_bAnimating : 1; // 0x154
	ToastSequence m_eAnimSequence; // 0x158
	float m_fAnimationTime; // 0x15c
};

struct UUIComponent_StoreAccount : UUIComponent_Display {
	ObjectProperty m_pRedeemCode; // 0x124
	ObjectProperty m_pPurchaseBoost; // 0x12c
	ObjectProperty m_pChangeName; // 0x134
	ObjectProperty m_grAccount; // 0x13c
};

struct UUIData : UObject {
	int32_t m_nPriority; // 0x60
};

struct UUIComponent_StoreDLC : UUIComponent_Display {
	ObjectProperty m_mcDLCOwnedTF; // 0x124
	ObjectProperty m_pDLCList; // 0x12c
	ObjectProperty m_pDLCListHorizontal; // 0x134
	ObjectProperty m_pLeftArrow; // 0x13c
	ObjectProperty m_pRightArrow; // 0x144
	ObjectProperty m_pUpArrow; // 0x14c
	ObjectProperty m_pDownArrow; // 0x154
	ObjectProperty m_mcTaxTF; // 0x15c
	ObjectProperty m_grDLC; // 0x164
	ObjectProperty m_grDLCHorizontal; // 0x16c
};

struct UMaterialExpressionFmod : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
};

struct UPBRuleNodeWindowWall : UPBRuleNodeBase {
	float CellMaxSizeX; // 0x70
	float CellMaxSizeZ; // 0x74
	float WindowSizeX; // 0x78
	float WindowSizeZ; // 0x7c
	float WindowPosX; // 0x80
	float WindowPosZ; // 0x84
	char bScaleWindowWithCell : 1; // 0x88
	float YOffset; // 0x8c
	ObjectProperty Material; // 0x90
};

struct UNavMeshPathConstraint : UObject {
	ObjectProperty NextConstraint; // 0x60
	int32_t NumNodesProcessed; // 0x68
	int32_t NumThrownOutNodes; // 0x6c
	float AddedDirectCost; // 0x70
	float AddedHeuristicCost; // 0x74
};

struct USeqAct_SetPhysics : USequenceAction {
	EPhysics newPhysics; // 0x108
};

struct AWindDirectionalSource : AInfo {
	ComponentProperty Component; // 0x280
};

struct UTgDeviceForm_ToggleADS : UTgDeviceForm_ToggleWithLockout {
	float m_fTransitionAmount; // 0x28c
	float m_fTransitionPerSec; // 0x290
	float m_fDesiredScopeWorld1pFOV; // 0x294
	float m_fDesiredScopeWorld3pFOV; // 0x298
	float m_fLastSetWorldFOVInterp; // 0x29c
};

struct UTgEffectForm_Freeze : UTgEffectForm_DisablePawn {
	int32_t m_BurstingIceFXId; // 0x100
};

struct ATgDeploy_CommanderUlt : ATgDeploy_EffectField {
	ObjectProperty m_CameraShake; // 0x4a0
};

struct UInputContext : UObject {
	FPointer VfTable_ITgCallbackInterface; // 0x60
	ObjectProperty m_SuperContext; // 0x68
	TArray<ObjectProperty> m_SubContextStack; // 0x70
	char m_bPassInputToNextContext : 1; // 0x80
	char m_bBlockGlobalContext : 1; // 0x80
	TArray<ObjectProperty> m_InputActions; // 0x84
	ObjectProperty m_CallbackContainer; // 0x94
};

struct UMaterialExpressionLandscapeLayerBlend : UMaterialExpression {
	TArray<FLayerBlendInput> Layers; // 0xb0
	FGuid ExpressionGUID; // 0xc0
};

struct AKAsset : AActor {
	ComponentProperty SkeletalMeshComponent; // 0x280
	char bDamageAppliesImpulse : 1; // 0x288
	char bWakeOnLevelStart : 1; // 0x288
	char bBlockPawns : 1; // 0x288
	ObjectProperty ReplicatedMesh; // 0x28c
	ObjectProperty ReplicatedPhysAsset; // 0x294
};

struct UMaterialExpressionDepthBiasBlend : UMaterialExpressionTextureSample {
	char bNormalize : 1; // 0x120
	float BiasScale; // 0x124
	FExpressionInput Bias; // 0x128
};

struct UTgAnimNodeBlendList : UAnimNodeBlendList {
	float DefaultBlendTime; // 0x144
	TArray<float> ChildBlendTimes; // 0x148
	TArray<FChildBlendParam> SpecificChildBlendTimes; // 0x158
};

struct ATgDevice_BombKingInhand : ATgDevice_DualWield {
	char r_bHasActiveProjectile : 1; // 0xa14
	char m_bInDetonationMode : 1; // 0xa14
	TArray<FStickyBombPendingDetonate> m_PendingDetonations; // 0xa18
	TArray<ObjectProperty> m_PendingProjectileConversions; // 0xa28
	TArray<int32_t> c_nLiveExplosiveIds; // 0xa38
	float m_fValidationTolerance; // 0xa48
	DelegateProperty __DetonatorFiringDelegate__Delegate; // 0xa4c
};

struct ATgDevice_LazarusInhand : ATgDevice_ChainSequence {
	TArray<FHitSoundData> HitActorsAngles; // 0xa10
	int32_t m_nHitIndex; // 0xa20
	DelegateProperty __InterruptFiringAndResetChainDelegate__Delegate; // 0xa24
};

struct ATgWeaponMeshActor_RiderInhand : ATgWeaponMeshActor {
	ObjectProperty m_AltFireFx; // 0x450
	char m_b3pFireShouldBeActive : 1; // 0x458
};

struct UTgDeviceForm_GrohkInhand : UTgDeviceForm {
	ObjectProperty m_SpinnerSkelControl; // 0x28c
};

struct UTgSkelCon_FootPlacement : USkelControlFootPlacement {
	char bShouldUseWorldDown : 1; // 0x158
};

struct UUIDataProvider_SettingsArray : UUIDataProvider {
	ObjectProperty Settings; // 0x70
	int32_t SettingsId; // 0x78
	FName SettingsName; // 0x7c
	FString ColumnHeaderText; // 0x84
	TArray<FIdToStringMapping> Values; // 0x94
};

struct UTgInvListener_SoulChargesActive : UTgInventoryObject_Listen_AbilityProcBase {
	char m_bIsListenerActive : 1; // 0xcc
	char m_bIsCardLogicActive : 1; // 0xcc
};

struct UTgSeqAct_SetInputEnabled : USequenceAction {
	char bEnableMoveForward : 1; // 0x108
	char bEnableMoveBackward : 1; // 0x108
	char bEnableMoveLeft : 1; // 0x108
	char bEnableMoveRight : 1; // 0x108
	char bEnableLookUp : 1; // 0x108
	char bEnableLookDown : 1; // 0x108
	char bEnableLookLeft : 1; // 0x108
	char bEnableLookRight : 1; // 0x108
	char bEnableJumping : 0; // 0x108
	char bEnableMounting : 0; // 0x108
	char bEnableAuto : 0; // 0x108
	char bEnableAlt : 0; // 0x108
	char bEnableBattleAbility : 0; // 0x108
	char bEnableMovementAbility : 0; // 0x108
	char bEnableUltimate : 0; // 0x108
	char bEnableEmote : 0; // 0x108
};

struct UGameEngine : UEngine {
	ObjectProperty GPendingLevel; // 0x8a4
	FString PendingLevelPlayerControllerClassName; // 0x8ac
	FURL LastURL; // 0x8bc
	FURL LastRemoteURL; // 0x924
	TArray<FString> ServerActors; // 0x98c
	FString TravelURL; // 0x99c
	char TravelType; // 0x9ac
	char bWorldWasLoadedThisTick : 1; // 0x9b0
	char bWorldWasLoadedLastTick : 1; // 0x9b0
	char bCheckForMovieCapture : 1; // 0x9b0
	char bTriggerPostLoadMap : 1; // 0x9b0
	char bStartedLoadMapMovie : 1; // 0x9b0
	char bShouldCommitPendingMapChange : 1; // 0x9b0
	char bClearAnimSetLinkupCachesOnLoadMap : 1; // 0x9b0
	char bEnableSecondaryDisplay : 1; // 0x9b0
	char bEnableSecondaryViewport : 0; // 0x9b0
	ObjectProperty OnlineSubsystem; // 0x9b4
	ObjectProperty GamePadLightbarSubsystem; // 0x9bc
	ObjectProperty DLCEnumerator; // 0x9c4
	FString DownloadableContentEnumeratorClassName; // 0x9cc
	ObjectProperty DLCManager; // 0x9dc
	FString DownloadableContentManagerClassName; // 0x9e4
	TArray<FName> LevelsToLoadForPendingMapChange; // 0x9f4
	TArray<ObjectProperty> LoadedLevelsForPendingMapChange; // 0xa04
	FString PendingMapChangeFailureDescription; // 0xa14
	float MaxDeltaTime; // 0xa24
	FString SecondaryViewportClientClassName; // 0xa28
	TArray<ObjectProperty> SecondaryViewportClients; // 0xa38
	TArray<FPointer> SecondaryViewportFrames; // 0xa48
	TArray<FLevelStreamingStatus> PendingLevelStreamingStatusUpdates; // 0xa58
	TArray<ObjectProperty> ObjectReferencers; // 0xa68
	TArray<FFullyLoadedPackagesInfo> PackagesToFullyLoad; // 0xa78
	TArray<FNamedNetDriver> NamedNetDrivers; // 0xa88
	TArray<FAnimTag> AnimTags; // 0xa98
};

struct ACameraActor : AActor {
	char bConstrainAspectRatio : 1; // 0x280
	char bCamOverridePostProcess : 1; // 0x280
	float AspectRatio; // 0x284
	float FOVAngle; // 0x288
	float CamOverridePostProcessAlpha; // 0x28c
	FPostProcessSettings CamOverridePostProcess; // 0x290
	ComponentProperty DrawFrustum; // 0x410
	ComponentProperty MeshComp; // 0x418
};

struct ATgPathfinder : AActor {
	FPointer VfTable_IInterface_NavigationHandle; // 0x280
	float m_fMaxSpeed; // 0x288
	TArray<FVector> m_vWaypoints; // 0x28c
	float m_fPathCheckRadius; // 0x29c
	ObjectProperty m_NavigationHandle; // 0x2a0
	ObjectProperty m_Spline; // 0x2a8
	ObjectProperty m_CurrentSpline; // 0x2b0
	float m_fCurrentSplineDist; // 0x2b8
	FNavMeshPathParams m_NavMeshPathParams; // 0x2bc
	TArray<ObjectProperty> m_ActiveWalkers; // 0x2f4
	float m_WalkerLifeSpan; // 0x304
	DelegateProperty __OnFinishedPathing__Delegate; // 0x308
};

struct ATgGame_Paladins_CrazyKing : ATgGame_Paladins {
	float m_fSetupDuration; // 0x868
	float m_fRoundDuration; // 0x86c
	TArray<ObjectProperty> m_CapturePoints; // 0x870
	int32_t m_nCurrentActivePointIndex; // 0x880
	int32_t m_nLastActivePointIndex; // 0x884
	ObjectProperty m_currentActiveCapturePoint; // 0x888
	float m_fMaxDistanceBetweenConsecutivePoints; // 0x890
};

struct UUIComponent_ItemRadialMenu_Text : UUIComponent_Display {
	ObjectProperty m_mcLock; // 0x124
	ObjectProperty m_mcRarityText; // 0x12c
	ObjectProperty m_mcBackgroundFade; // 0x134
	ObjectProperty m_mcBackgroundFrame; // 0x13c
	ObjectProperty m_mcBackgroundColor; // 0x144
	ObjectProperty m_mcBackgroundHighlight; // 0x14c
	ObjectProperty m_mcKeybind; // 0x154
	int32_t m_nPadding; // 0x15c
};

struct UTgGamePhase_ScoreOnKill : UTgGamePhase {
	int32_t m_nPointsPerKill; // 0xb8
};

struct USeqAct_ToggleConstraintDrive : USequenceAction {
	char bEnableAngularPositionDrive : 1; // 0x108
	char bEnableAngularVelocityDrive : 1; // 0x108
	char bEnableLinearPositionDrive : 1; // 0x108
	char bEnableLinearvelocityDrive : 1; // 0x108
};

struct UUIDataStore_OnlinePlayerData : UUIDataStore_Remote {
	ObjectProperty FriendsProvider; // 0x98
	int32_t PlayerControllerId; // 0xa0
	FString PlayerNick; // 0xa4
	FString ProfileSettingsClassName; // 0xb4
	UOnlineProfileSettings* ProfileSettingsClass; // 0xc4
	ObjectProperty ProfileProvider; // 0xcc
	FString ProfileProviderClassName; // 0xd4
	UUIDataProvider_OnlineProfileSettings* ProfileProviderClass; // 0xe4
	FString PlayerStorageClassName; // 0xec
	UOnlinePlayerStorage* PlayerStorageClass; // 0xfc
	ObjectProperty StorageProvider; // 0x104
	FString StorageProviderClassName; // 0x10c
	UUIDataProvider_OnlinePlayerStorage* StorageProviderClass; // 0x11c
	ObjectProperty FriendMessagesProvider; // 0x124
	ObjectProperty AchievementsProvider; // 0x12c
	FString FriendsProviderClassName; // 0x134
	UUIDataProvider_OnlineFriends* FriendsProviderClass; // 0x144
	FString FriendMessagesProviderClassName; // 0x14c
	UUIDataProvider_OnlineFriendMessages* FriendMessagesProviderClass; // 0x15c
	FString AchievementsProviderClassName; // 0x164
	UUIDataProvider_PlayerAchievements* AchievementsProviderClass; // 0x174
	FString PartyChatProviderClassName; // 0x17c
	UUIDataProvider_OnlinePartyChatList* PartyChatProviderClass; // 0x18c
	ObjectProperty PartyChatProvider; // 0x194
};

struct UTgAnimBlendByDirection : UTgAnimNodeBlendList {
	ObjectProperty m_TgPawn; // 0x168
	EBlendByDirectionSpeedType m_SpeedType; // 0x170
	EBlendDirTypes LastDirection; // 0x171
	char bAdjustRateByVelocity : 1; // 0x174
	char bNoDirectionIsEnabled : 1; // 0x174
	char bResetLooping : 1; // 0x174
	char m_bDelayBlendOutToPlayAnim : 1; // 0x174
	char m_bIsAllowedToBlendOut : 1; // 0x174
	char m_bMirrorDirectionsWhenPawnMirrored : 1; // 0x174
	char m_bStopChildrenOnCeaseRelevant : 1; // 0x174
};

struct UDOFEffect : UPostProcessEffect {
	float FalloffExponent; // 0x88
	float BlurKernelSize; // 0x8c
	float MaxNearBlurAmount; // 0x90
	float MinBlurAmount; // 0x94
	float MaxFarBlurAmount; // 0x98
	EFocusType FocusType; // 0x9c
	float FocusInnerRadius; // 0xa0
	float FocusDistance; // 0xa4
	FVector FocusPosition; // 0xa8
};

struct UTgDeviceForm_RuckusInhand : UTgDeviceForm {
	char m_bFiredFromLeftGun : 1; // 0x28c
	char m_bFiredFromTopBarrel : 1; // 0x28c
	char m_bPlayingSpinnerSound : 1; // 0x28c
	char m_bPlayingFireLoopSound : 1; // 0x28c
	char m_bIsFiring : 1; // 0x28c
	ObjectProperty m_SpinnerSkelControl1P; // 0x290
	ObjectProperty m_SpinnerSkelControl3P; // 0x298
	FName c_nmSocketLeft; // 0x2a0
	FName c_nmSocketRight; // 0x2a8
	float m_fLoopingSoundThreshold; // 0x2b0
	float m_fLastSpinConfirmationTimestamp; // 0x2b4
	float m_fSpinConfirmationCooldown; // 0x2b8
	ObjectProperty m_LowerRightBarrel1P; // 0x2bc
	ObjectProperty m_UpperRightBarrel1P; // 0x2c4
	ObjectProperty m_LowerLeftBarrel1P; // 0x2cc
	ObjectProperty m_UpperLeftBarrel1P; // 0x2d4
	ObjectProperty m_LowerRightBarrel3P; // 0x2dc
	ObjectProperty m_UpperRightBarrel3P; // 0x2e4
	ObjectProperty m_LowerLeftBarrel3P; // 0x2ec
	ObjectProperty m_UpperLeftBarrel3P; // 0x2f4
};

struct UInterpTrackInstFloatProp : UInterpTrackInstProperty {
	FPointer FloatProp; // 0x70
	float ResetFloat; // 0x78
	FPointer DistributionProp; // 0x7c
};

struct UParticleModuleOrbit : UParticleModuleOrbitBase {
	EOrbitChainMode ChainMode; // 0x6c
	FRawDistributionVector OffsetAmount; // 0x70
	FOrbitOptions OffsetOptions; // 0x94
	FRawDistributionVector RotationAmount; // 0x98
	FOrbitOptions RotationOptions; // 0xbc
	FRawDistributionVector RotationRateAmount; // 0xc0
	FOrbitOptions RotationRateOptions; // 0xe4
};

struct USoundNodeRandom : USoundNode {
	TArray<float> Weights; // 0x74
	int32_t PreselectAtLevelLoad; // 0x84
	char bRandomizeWithoutReplacement : 1; // 0x88
	TArray<char> HasBeenUsed; // 0x8c
	int32_t NumRandomUsed; // 0x9c
};

struct UTgDeviceForm_Spray : UTgDeviceForm {
	TArray<ObjectProperty> m_SprayMaterial; // 0x28c
	ObjectProperty m_SprayMIC; // 0x29c
	ComponentProperty c_SpawnedDecal; // 0x2a4
	int32_t m_nRandAlphaMaskMax; // 0x2ac
	int32_t m_nPrevAlphaMask; // 0x2b0
	ObjectProperty c_SprayHitFX; // 0x2b4
	ObjectProperty c_SprayMissedFX; // 0x2bc
	TArray<FSpraySetup> m_SpraySetups; // 0x2c4
	int32_t m_nActiveSpraySetup; // 0x2d4
	int32_t m_nDesiredSprayDeviceId; // 0x2d8
};

struct UUIComponent_NotificationEntry : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcDesc; // 0x12c
	ObjectProperty m_mcTimestamp; // 0x134
	ObjectProperty m_mcCategory; // 0x13c
	ObjectProperty m_mcItemIconTexture; // 0x144
	ObjectProperty m_mcGFxImageStack; // 0x14c
	ObjectProperty m_mcChestImageStack; // 0x154
	ObjectProperty m_mcDefaultIcon; // 0x15c
	ObjectProperty m_mcLoadingFrame; // 0x164
	ObjectProperty m_mcDeathCard; // 0x16c
	ObjectProperty m_pAvatar; // 0x174
	ObjectProperty m_pCTA; // 0x17c
	ObjectProperty m_pGoToButton; // 0x184
	ObjectProperty m_pClearButton; // 0x18c
	ObjectProperty m_pFrameButton; // 0x194
};

struct UGameCheatManager : UCheatManager {
	ObjectProperty DebugCameraControllerRef; // 0x80
	ADebugCameraController* DebugCameraControllerClass; // 0x88
	FString DebugCameraControllerClassName; // 0x90
};

struct UMaterialExpressionTransform : UMaterialExpression {
	FExpressionInput Input; // 0xb0
	EMaterialVectorCoordTransformSource TransformSourceType; // 0xe4
	EMaterialVectorCoordTransform TransformType; // 0xe5
};

struct UBookMark2D : UObject {
	float Zoom2D; // 0x60
	FIntPoint Location; // 0x64
};

struct UFracturedStaticMeshComponent : UFracturedBaseComponent {
	TArray<char> FragmentNeighborsVisible; // 0x338
	FBox VisibleBox; // 0x348
	char bUseSkinnedRendering : 1; // 0x364
	char bUseVisibleVertsForBounds : 1; // 0x364
	char bTopFragmentsRootNonDestroyable : 1; // 0x364
	char bBottomFragmentsRootNonDestroyable : 1; // 0x364
	float TopBottomFragmentDistThreshold; // 0x368
	ObjectProperty LoseChunkOutsideMaterialOverride; // 0x36c
	float FragmentBoundsMaxZ; // 0x374
	float FragmentBoundsMinZ; // 0x378
	ComponentProperty SkinnedComponent; // 0x37c
};

struct UTgAnimNodeSlot : UAnimNodeSlot {
	ObjectProperty m_TgPawn; // 0x138
	char m_bBlendOutIfVelocityIsGreaterThanZero : 1; // 0x140
	char m_bIsTransitionAnim : 1; // 0x140
	char m_bNotifyActorOnChildAnimEnd : 1; // 0x140
	FName m_nmHackingTransitionAnimName; // 0x144
	FName m_nmHackingLoopingAnimName; // 0x14c
	FName m_nmAFKTransitionAnimName; // 0x154
	FName m_nmAFKLoopingAnimName; // 0x15c
	FName m_nmQueuedAnim; // 0x164
};

struct UMcpIdMappingBase : UMcpServiceBase {
	FString McpIdMappingClassName; // 0x78
	DelegateProperty __OnAddMappingComplete__Delegate; // 0x88
	DelegateProperty __OnQueryMappingsComplete__Delegate; // 0x98
};

struct UTgSkelCon_OscillateTranslation : USkelControlSingleBone {
	float OscillationAmplitude; // 0x100
	float OscillationFrequency; // 0x104
	FVector OscillationAxis; // 0x108
	EBoneControlSpace OscillationAxisSpace; // 0x114
	FName OscillationAxisSpaceBoneName; // 0x118
	float Theta; // 0x120
};

struct USeqAct_FeatureTest : USeqAct_Log {
	FString FreezeAtParameters; // 0x12c
	float ScreenShotDelay; // 0x13c
	FString ScreenShotName; // 0x140
	float RemainingScreenShotDelay; // 0x150
};

struct UMaterialExpressionFluidNormal : UMaterialExpression {
	FExpressionInput Coordinates; // 0xb0
};

struct UTgDeviceForm : UObject {
	FPointer VfTable_FCallbackEventDevice; // 0x60
	ObjectProperty PawnOwner; // 0x68
	FEquipDeviceInfo c_EquipDeviceInfo; // 0x70
	int32_t m_nDeviceType; // 0x7c
	DeviceTargetMode m_eTargetingMode; // 0x80
	ETargetingModeStatus c_eTargetingModeStatus; // 0x81
	char c_bDeployed : 1; // 0x84
	char c_bHandDevice : 1; // 0x84
	char c_bDisableDefaultTimelapseRecovery : 1; // 0x84
	char c_bIsTransitioningToNewMode : 1; // 0x84
	char c_bTargetingModeEnabled : 1; // 0x84
	char c_bTargeterInitializedThisTick : 1; // 0x84
	char c_bTargeterIsInWorldDPG : 1; // 0x84
	char c_bUseInstigatorMesh : 1; // 0x84
	char c_bIsInHand : 0; // 0x84
	char m_bInitializingAssets : 0; // 0x84
	char m_bLoopWhileFiringCameraAnim : 0; // 0x84
	char m_bUseImpactFXOverride : 0; // 0x84
	char m_bRecoilTimerActive : 0; // 0x84
	char m_bForce1pViewWhileFiring : 0; // 0x84
	char m_bForce3PViewWhileFiring : 0; // 0x84
	char m_bForce3PViewInBuildup : 0; // 0x84
	TArray<ObjectProperty> c_PawnAnimSetOverrideList; // 0x88
	TArray<FModeData> ModeDatas; // 0x98
	FPointer m_pAmSetup; // 0xa8
	ComponentProperty c_Mesh; // 0xb0
	ComponentProperty c_AttachedMesh; // 0xb8
	ComponentProperty c_ThirdPersonMesh; // 0xc0
	ComponentProperty c_FirstPersonMesh; // 0xc8
	FName c_nmMountPoint; // 0xd0
	FName FormState; // 0xd8
	int32_t c_nFireMode; // 0xe0
	int32_t c_nEquipSlot; // 0xe4
	float c_fLastReceivedRefireTime; // 0xe8
	float c_fLastFireTimestamp; // 0xec
	int32_t c_nLastFxMode; // 0xf0
	ObjectProperty c_TargetingModeMeshIndicator; // 0xf4
	ObjectProperty c_TargetingModeFx; // 0xfc
	FAimData c_TargetingAim; // 0x104
	int32_t c_nTargetingModeFxId; // 0x138
	float c_fRemainingTransitionTime; // 0x13c
	float c_fTotalTransitionTime; // 0x140
	ObjectProperty m_LockedTarget; // 0x144
	ObjectProperty m_AssetReference; // 0x14c
	ObjectProperty m_OwnerActor; // 0x154
	TArray<ObjectProperty> m_AbilityBlendList1P; // 0x15c
	TArray<ObjectProperty> m_AbilityBlendList3P; // 0x16c
	TArray<ObjectProperty> m_ChannelFireBlendList1P; // 0x17c
	TArray<ObjectProperty> m_ChannelFireBlendList3P; // 0x18c
	TArray<ObjectProperty> m_TargetingBlendList1P; // 0x19c
	TArray<ObjectProperty> m_TargetingBlendList3P; // 0x1ac
	TArray<ObjectProperty> m_ToggleTransitionNodes1P; // 0x1bc
	TArray<ObjectProperty> m_ToggleTransitionNodes3P; // 0x1cc
	TArray<ObjectProperty> m_AmmoBlendList1P; // 0x1dc
	TArray<ObjectProperty> m_AmmoBlendList3P; // 0x1ec
	TArray<ObjectProperty> m_CooldownSyncNode1P; // 0x1fc
	TArray<ObjectProperty> m_CooldownSyncNode3P; // 0x20c
	TArray<ObjectProperty> m_DeviceEquippedNode1P; // 0x21c
	TArray<ObjectProperty> m_DeviceEquippedNode3P; // 0x22c
	ObjectProperty m_WhileFiringCameraAnimInst; // 0x23c
	float m_fWhileFiringCameraAnimBlendInTime; // 0x244
	float m_fWhileFiringCameraAnimBlendOutTime; // 0x248
	FPointer m_RandomShotSpreadStream; // 0x24c
	int32_t m_nLastSetShotSpreadSeed; // 0x254
	int32_t m_nSyntheticVisualBurstRate; // 0x258
	int32_t m_nSyntheticShotsRemaining; // 0x25c
	float m_fSyntheticShotRefireRate; // 0x260
	float m_fSyntheticShotTimer; // 0x264
	FSyntheticImpactEffectArgs m_SyntheticImpactArgs; // 0x268
	ObjectProperty m_GameplayCurves; // 0x280
	float m_fRecoilTimer; // 0x288
};

struct ATgSkeletalMeshActor : ASkeletalMeshActor {
	FMeshAssets c_MeshAssets; // 0x2e8
	char c_bLoadMeshAssetts : 1; // 0x328
};

struct USeqAct_SetVelocity : USequenceAction {
	FVector VelocityDir; // 0x108
	float VelocityMag; // 0x114
	char bVelocityRelativeToActorRotation : 1; // 0x118
};

struct ATgPawn_LanePusherBase : ATgPawn_Biped {
	float s_fSpeedMultiplierToCatchUpToSquad; // 0x2fcc
	ObjectProperty s_PlayerAttacker; // 0x2fd0
	ObjectProperty r_StartSpline; // 0x2fd8
	ObjectProperty r_ServerSyncSpline; // 0x2fe0
	FServerSplineSync r_ServerSync; // 0x2fe8
	char m_bMoving : 1; // 0x2ff0
	char c_bServerSync : 1; // 0x2ff0
	char m_bDoNotScaleCollisionBoxWithDatabase : 1; // 0x2ff0
	char m_bApplySplinePitchToActor : 1; // 0x2ff0
	char c_bApplySplinePitchToMesh : 1; // 0x2ff0
	char m_bFullStopWhenNoDesiredSpeed : 1; // 0x2ff0
	char s_bStopBackpeddlingAtCheckpoints : 1; // 0x2ff0
	char m_bAllowBackpeddling : 1; // 0x2ff0
	char m_bDestroyed : 0; // 0x2ff0
	char r_bAsleep : 0; // 0x2ff0
	ObjectProperty m_Spline; // 0x2ff4
	ComponentProperty m_CollisionBox; // 0x2ffc
	float m_fSplineDist; // 0x3004
	float c_fSplineDistCorrection; // 0x3008
	float c_fClientSideMovementFudgeFactor; // 0x300c
	float c_fClientCorrectionTolerance; // 0x3010
	float c_fClientCorrectionRate; // 0x3014
	float m_fGroundSpeedScaleLastTick; // 0x3018
	float r_fTrackGroundSpeed; // 0x301c
	float m_fAcceleration; // 0x3020
};

struct ATgDevice_FlakInhand : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_KineticDevice; // 0xa0c
};

struct APlayerCollectorGame : AGameInfo {
	int32_t NumberOfClientsToWaitFor; // 0x4cc
	FString URLToLoad; // 0x4d0
};

struct ATgGame_Paladins_Assault : ATgGame_Paladins_Siege {
	float m_fAttackDuration; // 0xa64
	float m_fAttackPhaseOvertimeDuration; // 0xa68
	float m_fAttackCaptureRateMultiplier; // 0xa6c
	ObjectProperty m_AttackPoint; // 0xa70
	char m_bInAttackPhaseOvertime : 1; // 0xa78
	float m_fTakeoverSecondPhaseInstructionDelay; // 0xa7c
};

struct UTgAIBehaviorAction_Juke : UTgAIBehaviorAction {
	float JukeDist; // 0x94
	float JukeProbability; // 0x98
};

struct UTgSeqAct_FadeOut : USequenceAction {
	float m_fDuration; // 0x108
};

struct ANxForceFieldTornado : ANxForceField {
	ObjectProperty Shape; // 0x2d4
	ComponentProperty DrawComponent; // 0x2dc
	float RadialStrength; // 0x2e4
	float RotationalStrength; // 0x2e8
	float LiftStrength; // 0x2ec
	float ForceRadius; // 0x2f0
	float ForceTopRadius; // 0x2f4
	float LiftFalloffHeight; // 0x2f8
	float EscapeVelocity; // 0x2fc
	float ForceHeight; // 0x300
	float HeightOffset; // 0x304
	char BSpecialRadialForceMode : 1; // 0x308
	float SelfRotationStrength; // 0x30c
	FPointer Kernel; // 0x310
};

struct ATerrain : AInfo {
	TArray<FTerrainHeight> Heights; // 0x280
	TArray<FTerrainInfoData> InfoData; // 0x290
	TArray<FTerrainLayer> Layers; // 0x2a0
	int32_t NormalMapLayer; // 0x2b0
	TArray<FTerrainDecoLayer> DecoLayers; // 0x2b4
	TArray<FAlphaMap> AlphaMaps; // 0x2c4
	TArray<ComponentProperty> TerrainComponents; // 0x2d4
	int32_t NumSectionsX; // 0x2e4
	int32_t NumSectionsY; // 0x2e8
	TArray<FTerrainWeightedMaterial> WeightedMaterials; // 0x2ec
	TArray<ObjectProperty> WeightedTextureMaps; // 0x2fc
	int32_t MaxTesselationLevel; // 0x30c
	int32_t MinTessellationLevel; // 0x310
	float TesselationDistanceScale; // 0x314
	float TessellationCheckDistance; // 0x318
	int32_t CollisionTesselationLevel; // 0x31c
	FCachedTerrainMaterialArray CachedTerrainMaterials[0x2]; // 0x320
	int32_t NumVerticesX; // 0x340
	int32_t NumVerticesY; // 0x344
	int32_t NumPatchesX; // 0x348
	int32_t NumPatchesY; // 0x34c
	int32_t MaxComponentSize; // 0x350
	int32_t StaticLightingResolution; // 0x354
	char bIsOverridingLightResolution : 1; // 0x358
	char bBilinearFilterLightmapGeneration : 1; // 0x358
	char bCastShadow : 1; // 0x358
	char bForceDirectLightMap : 1; // 0x358
	char bCastDynamicShadow : 1; // 0x358
	char bEnableSpecular : 1; // 0x358
	char bBlockRigidBody : 1; // 0x358
	char bAllowRigidBodyUnderneath : 1; // 0x358
	char bAcceptsDynamicLights : 0; // 0x358
	char bMorphingEnabled : 0; // 0x358
	char bMorphingGradientsEnabled : 0; // 0x358
	char bLocked : 0; // 0x358
	char bHeightmapLocked : 0; // 0x358
	char bShowingCollision : 0; // 0x358
	char bUseWorldOriginTextureUVs : 0; // 0x358
	char bShowWireframe : 0; // 0x358
	ObjectProperty TerrainPhysMaterialOverride; // 0x35c
	FLightingChannelContainer LightingChannels; // 0x364
	FLightmassPrimitiveSettings LightmassSettings; // 0x368
	FPointer ReleaseResourcesFence; // 0x384
	int32_t EditorTessellationLevel; // 0x38c
	TArray<FSelectedTerrainVertex> SelectedVertices; // 0x390
	FColor WireframeColor; // 0x3a0
};

struct UUIData_List_TitleIcon : UUIData_List {
	int32_t nIcon; // 0x74
	TArray<FString> sTitles; // 0x78
};

struct UUIComponent_RewardPanel : UUIComponent_Display {
	char m_bShowingDetails : 1; // 0x124
	FProgressInfo m_pCurrentInfo; // 0x128
	FProgressInfo m_pEndingInfo; // 0x138
	ObjectProperty m_akLevelUp; // 0x148
	ObjectProperty m_akRankUp; // 0x150
	ObjectProperty m_mcPanelTitleTF; // 0x158
	ObjectProperty m_mcProgressBar; // 0x160
	ObjectProperty m_mcLevelTF; // 0x168
	ObjectProperty m_mcCurrentLevelTF; // 0x170
	ObjectProperty m_mcRequiredXPTF; // 0x178
	ObjectProperty m_mcLevelUpTF; // 0x180
	ObjectProperty m_mcRankIcon; // 0x188
	ObjectProperty m_mcReward; // 0x190
	ObjectProperty m_mcNextRewardTF; // 0x198
	ObjectProperty m_mcRewardNameTF; // 0x1a0
	ObjectProperty m_mcRewardRankIcon; // 0x1a8
	ObjectProperty m_pCurrentXP; // 0x1b0
	ObjectProperty m_pXPGained; // 0x1b8
	ObjectProperty m_pRewardItem; // 0x1c0
	ObjectProperty m_pProgressBarA; // 0x1c8
	ObjectProperty m_pProgressBarB; // 0x1d0
	ObjectProperty m_pDetailEntries; // 0x1d8
	ObjectProperty m_pFrameButton; // 0x1e0
	ObjectProperty m_pProgressButton; // 0x1e8
};

struct UUIComponent_StoreFeatured : UUIComponent_Display {
	TArray<FJsonFeatureData> m_pFeatureData; // 0x124
	TMap<None, None> m_pFeatureMap; // 0x134
	ObjectProperty m_pJsonPanels[0x7]; // 0x17c
	ObjectProperty m_pCarouselPanel; // 0x1b4
	ObjectProperty m_grFeatured; // 0x1bc
};

struct USeqAct_GetLocationAndRotation : USequenceAction {
	FVector Location; // 0x108
	FVector RotationVector; // 0x114
	FVector Rotation; // 0x120
	FName SocketOrBoneName; // 0x12c
};

struct ATgRepInfo_Factory : AReplicationInfo {
	ReplicatedFactoryState s_FactoryState; // 0x280
	ReplicatedFactoryState r_FactoryState[0x3]; // 0x281
	char r_bVisibleOnMap[0x3]; // 0x284
	char r_bRespawnVisible[0x3]; // 0x287
	MinimapFactoryType r_MinimapType; // 0x28a
	ObjectProperty r_FactoryOwner; // 0x28c
	ObjectProperty r_TaskforceInfo; // 0x294
	int32_t r_nFactoryId; // 0x29c
	ObjectProperty r_LastSpawnedRepInfo; // 0x2a0
	float r_fRespawnDelay; // 0x2a8
	float r_fRespawnTimer; // 0x2ac
};

struct UUIMoviePlayer : UGFxMoviePlayer {
	int32_t m_nLastTimerIndex; // 0x1f8
	char m_bInitialized : 1; // 0x1fc
	char m_bInTransition : 1; // 0x1fc
	char m_bResizeForSafeZones : 1; // 0x1fc
	ObjectProperty m_mcRoot; // 0x200
	ObjectProperty m_mcGlobal; // 0x208
	ObjectProperty m_DataHandler; // 0x210
	ObjectProperty m_TimerManager; // 0x218
	UTgDataHandler* m_DataHandlerClass; // 0x220
	FPointer m_pTgCallbackDevice; // 0x228
	FPointer m_pKeybindLookup; // 0x230
	ObjectProperty OnlineSub; // 0x238
	TScriptInterface<Class> GameInterface; // 0x240
	TScriptInterface<Class> VoiceInterface; // 0x250
	TScriptInterface<Class> PlayerInterface; // 0x260
	TScriptInterface<Class> ContentInterface; // 0x270
	TScriptInterface<Class> PlayerInterfaceEx; // 0x280
	TScriptInterface<Class> MarketplaceInterface; // 0x290
};

struct UTgGamePhase_RandomChild : UTgGamePhase {
	char m_bSequentiallyUnique : 1; // 0xb8
	int32_t m_nPreviousChildIndex; // 0xbc
};

struct UUIDataLoadouts : UUIDataObject {
	TMap<None, None> m_Loadouts; // 0x74
	FMultiMap_Mirror m_TemplateLoadouts; // 0xbc
	FMultiMap_Mirror m_EventTemplateLoadouts; // 0x104
	TArray<FPendingImportRequest> m_PendingImports; // 0x14c
	char m_bEventTemplatesActive : 1; // 0x15c
	int32_t m_nEventTemplateVendorId; // 0x160
};

struct UTgImpactFx : UObject {
	float c_fMaxFxDistance; // 0x60
	char c_bAlignToSurfaceNormal : 1; // 0x64
	FIMPACT_FX c_EmptyImpact; // 0x68
	TArray<FIMPACT_FX> c_Impacts; // 0x9c
};

struct UParticleSystemComponent : UPrimitiveComponent {
	ObjectProperty Template; // 0x24c
	UParticleLightEnvironmentComponent* LightEnvironmentClass; // 0x254
	ObjectProperty LightEnvironmentSharedInstigator; // 0x25c
	int32_t MaxLightEnvironmentPooledReuses; // 0x264
	TArray<FPointer> EmitterInstances; // 0x268
	TArray<ComponentProperty> SMComponents; // 0x278
	TArray<ObjectProperty> SMMaterialInterfaces; // 0x288
	TArray<ComponentProperty> SkelMeshComponents; // 0x298
	TArray<FViewParticleEmitterInstanceMotionBlurInfo> ViewMBInfoArray; // 0x2a8
	char bAutoActivate : 1; // 0x2b8
	char bWasCompleted : 1; // 0x2b8
	char bHasDurationElapsed : 1; // 0x2b8
	char bSuppressSpawning : 1; // 0x2b8
	char bWasDeactivated : 1; // 0x2b8
	char bResetOnDetach : 1; // 0x2b8
	char bUpdateOnDedicatedServer : 1; // 0x2b8
	char bJustAttached : 1; // 0x2b8
	char bIsActive : 0; // 0x2b8
	char bHasBeenActivated : 0; // 0x2b8
	char bWasRecycledSinceLastTick : 0; // 0x2b8
	char bWarmingUp : 0; // 0x2b8
	char bIsCachedInPool : 0; // 0x2b8
	char bOverrideLODMethod : 0; // 0x2b8
	char bSkipUpdateDynamicDataDuringTick : 0; // 0x2b8
	char bSkipBoundsUpdate : 0; // 0x2b8
	char bUpdateComponentInTick : 0; // 0x2b8
	char bDeferredBeamUpdate : 0; // 0x2b8
	char bForcedInActive : 0; // 0x2b8
	char bIsWarmingUp : 0; // 0x2b8
	char bIsViewRelevanceDirty : 0; // 0x2b8
	char bRecacheViewRelevance : 0; // 0x2b8
	char m_EmitBasedOnAnimNotify : 0; // 0x2b8
	char bLODUpdatePending : 0; // 0x2b8
	char bSkipSpawnCountCheck : 0; // 0x2b8
	char m_bRealTimeTicking : 0; // 0x2b8
	char bHasSavedScale3D : 0; // 0x2b8
	TArray<FParticleSysParam> InstanceParameters; // 0x2bc
	FVector OldPosition; // 0x2cc
	FVector PartSysVelocity; // 0x2d8
	float WarmupTime; // 0x2e4
	float WarmupTickRate; // 0x2e8
	int32_t LODLevel; // 0x2ec
	float SecondsBeforeInactive; // 0x2f0
	float TimeSinceLastForceUpdateTransform; // 0x2f4
	float MaxTimeBeforeForceUpdateTransform; // 0x2f8
	float AccumTickTime; // 0x2fc
	ParticleSystemLODMethod LODMethod; // 0x300
	ParticleReplayState ReplayState; // 0x301
	TArray<FMaterialViewRelevance> CachedViewRelevanceFlags; // 0x304
	float m_ActiveRemainingTime; // 0x314
	FParticleChannelContainer m_ParticleChannels; // 0x318
	TArray<ObjectProperty> ReplayClips; // 0x31c
	int32_t ReplayClipIDNumber; // 0x32c
	int32_t ReplayFrameIndex; // 0x330
	float AccumLODDistanceCheckTime; // 0x334
	TArray<FParticleEventSpawnData> SpawnEvents; // 0x338
	TArray<FParticleEventDeathData> DeathEvents; // 0x348
	TArray<FParticleEventCollideData> CollisionEvents; // 0x358
	TArray<FParticleEventKismetData> KismetEvents; // 0x368
	TArray<FParticleEventAttractorCollideData> AttractorCollisionEvents; // 0x378
	FPointer ReleaseResourcesFence; // 0x388
	float CustomTimeDilation; // 0x390
	float EmitterDelay; // 0x394
	float FOV; // 0x398
	FVector SavedScale3D; // 0x39c
	DelegateProperty __OnSystemFinished__Delegate; // 0x3a8
	DelegateProperty __OnSystemDurationElapsed__Delegate; // 0x3b8
};

struct UParticleModuleLocationPrimitiveSphere : UParticleModuleLocationPrimitiveBase {
	FRawDistributionFloat StartRadius; // 0xb4
};

struct UTgAnimNodeTiltTowardsVelocity : UAnimNodeBlendBase {
	FVector2D m_MaximumVelocity; // 0x114
	int32_t m_PitchOffset; // 0x11c
	int32_t m_MaximumPitchOffset; // 0x120
	int32_t m_RollOffset; // 0x124
	int32_t m_MaximumRollOffset; // 0x128
	ObjectProperty m_Pawn; // 0x12c
};

struct ATgDevice_ActivateOnChildGeneric1 : ATgDevice {
	ObjectProperty m_LinkedDev; // 0xa04
};

struct ATgDevice_Survival : ATgDevice {
	ObjectProperty m_ThrustDevice; // 0xa04
};

struct UUIComponent_EndOfMatchLobbyTrials : UUIComponent_Display {
	ObjectProperty m_pEventChallengeList; // 0x124
	TArray<ObjectProperty> m_pInactiveTrials; // 0x12c
	ObjectProperty m_pGoToTrials; // 0x13c
	ObjectProperty m_pGoToTrialText; // 0x144
	ObjectProperty m_pGoToTrialsAction; // 0x14c
};

struct UUIComponent_ItemStatsEntry : UUIComponent_Display {
	FString m_sItemStatsLabels[0x7]; // 0x124
	ObjectProperty m_mcIcon; // 0x194
	ObjectProperty m_mcTF; // 0x19c
};

struct UTgAnimNodeSelfDestruct : UTgAnimNodeSequence {
	int32_t NumberOfLoopsBeforeDestruct; // 0x1bc
	int32_t LoopsCompleted; // 0x1c0
	TArray<FName> ScaleOutSkelControlNames; // 0x1c4
	float TimeRemaingForScaleOut; // 0x1d4
	TArray<ObjectProperty> ScaleOutSkelControls; // 0x1d8
	TArray<float> ScaleOutStartScales; // 0x1e8
	float ScaleOutStartTime; // 0x1f8
};

struct UUIComponent_TargeterManager : UUIComponent_Display {
	ObjectProperty m_mcOwningScene; // 0x124
	UObject* pTargeterClass; // 0x12c
	char m_TargeterID; // 0x134
	TArray<ObjectProperty> m_Targeters; // 0x138
};

struct UUIScene_UICouponAcquisition : UUIScene {
	ObjectProperty m_CouponAcquisitionInput; // 0x1cc
};

struct UForceFieldShapeCapsule : UForceFieldShape {
	ComponentProperty Shape; // 0x60
};

struct USequence : USequenceOp {
	FPointer LogFile; // 0xec
	TArray<ObjectProperty> SequenceObjects; // 0xf4
	TArray<ObjectProperty> ActiveSequenceOps; // 0x104
	TArray<ObjectProperty> NestedSequences; // 0x114
	TArray<ObjectProperty> UnregisteredEvents; // 0x124
	TArray<FActivateOp> DelayedActivatedOps; // 0x134
	TArray<ObjectProperty> DelayedLatentOps; // 0x144
	char bEnabled : 1; // 0x154
	TArray<FQueuedActivationInfo> QueuedActivations; // 0x158
	int32_t DefaultViewX; // 0x168
	int32_t DefaultViewY; // 0x16c
	float DefaultViewZoom; // 0x170
};

struct UTgSeqAct_GetPlayerCount : USequenceAction {
	int32_t m_nTaskForce; // 0x108
	float m_fPlayerCount; // 0x10c
	float m_fAssaultCount; // 0x110
	float m_fMedicCount; // 0x114
	float m_fReconCount; // 0x118
	float m_fRoboticsCount; // 0x11c
};

struct UGameCameraBase : UObject {
	ObjectProperty PlayerCamera; // 0x60
	char bResetCameraInterpolation : 1; // 0x68
};

struct UTgAnimNodeBlendAnimsByDirection : UAnimNodeSequenceBlendBase {
	float m_BlendSpeed; // 0x1bc
	char m_bUsePlayRateByDirection : 1; // 0x1c0
	char m_bIncludeStandingAnim : 1; // 0x1c0
	char m_bForceStanding : 1; // 0x1c0
	char m_bInterpolateWeights : 1; // 0x1c0
	char m_bMirrorDirectionsWhenPawnMirrored : 1; // 0x1c0
	char m_bForwardLeftCorrection : 1; // 0x1c0
	float m_PlayRateByDirection[0x8]; // 0x1c4
	float m_PlayRateStanding; // 0x1e4
	float m_fStillThreshold; // 0x1e8
	float m_DirAngle; // 0x1ec
	float m_LastRelevantTime; // 0x1f0
};

struct ATgDevice_ArcingBeam : ATgDevice {
	TArray<FArcingInfo> m_ArcingList; // 0xa04
	int32_t m_nMaxNumArcsPerTarget; // 0xa14
	char m_bCanTargetShields : 1; // 0xa18
	char m_bIsArcing : 1; // 0xa18
};

struct UUIComponent_BattlePassChallenge : UUIComponent_Display {
	char m_bGated : 1; // 0x124
	char m_bCompleted : 1; // 0x124
	ObjectProperty m_mcExpanded; // 0x128
	ObjectProperty m_mcExpandedIcon; // 0x130
	ObjectProperty m_mcExpandedTitle; // 0x138
	ObjectProperty m_mcExpandedRewardLabel; // 0x140
	ObjectProperty m_mcExpandedRewardTF; // 0x148
	ObjectProperty m_mcTierTF; // 0x150
	ObjectProperty m_pGoalList; // 0x158
	ObjectProperty m_mcCollapsed; // 0x160
	ObjectProperty m_mcCollapsedIcon; // 0x168
	ObjectProperty m_mcCollapsedTitle; // 0x170
	ObjectProperty m_mcCollapsedRewardLabel; // 0x178
	ObjectProperty m_mcCollapsedRewardTF; // 0x180
	ObjectProperty m_mcLockedTF; // 0x188
};

struct UMaterialExpressionTextureSampleParameterNormal : UMaterialExpressionTextureSampleParameter {
	FPointer InstanceOverride; // 0x140
};

struct UTgGamePhase_RoundReset : UTgGamePhase {
	char m_bAutoMountAtEnd : 1; // 0xb8
};

struct UMultiProviderAnalytics : UAnalyticEventsBase {
	TArray<FString> AnalyticsProviderClassNames; // 0x98
	TArray<ObjectProperty> AnalyticsProviders; // 0xa8
};

struct UTgSkelControlSingleBone_DisplayGroup : UTgSkelControlSingleBone {
	TArray<FDisplayGroupInfo> DisplayGroupInfos; // 0x124
};

struct ATgPawn_LanePusher : ATgPawn_LanePusherBase {
	char m_bInIntroduction : 1; // 0x3024
	char r_bIsInsideBase : 1; // 0x3024
	char m_bHarvestTexturesForFadeMIC : 1; // 0x3024
	char m_bBroadcastDeath : 1; // 0x3024
	EDestroyedAnimStages c_eDestroyedAnimStage; // 0x3028
	ObjectProperty c_BeamFX; // 0x302c
	float m_fBaseWheelSpeed; // 0x3034
	int32_t m_nMaxLevel; // 0x3038
	int32_t m_nFriendlyFadeMaterialFXId; // 0x303c
	int32_t m_nEnemyFadeMaterialFXId; // 0x3040
	TArray<ObjectProperty> m_FadeMICs; // 0x3044
	float m_fDamageScaleWhileTraveling; // 0x3054
};

struct UTgSeqAct_SetLobbyMeshSkin : USequenceAction {
	int32_t m_nMessageSkinId; // 0x108
	int32_t m_nMessageDeviceSkinId; // 0x10c
	int32_t m_nSkinId; // 0x110
	int32_t m_nDeviceSkinId; // 0x114
};

struct ATgEmitterCrashlanding : ATgEmitterSpawnable {
	ComponentProperty m_PrimaryMesh; // 0x294
	ComponentProperty m_SecondaryMesh; // 0x29c
	float ParticleDurationAfterImpact; // 0x2a4
	ComponentProperty m_LensFlare; // 0x2a8
	ComponentProperty m_AudioComponent; // 0x2b0
};

struct ATgDevice_Toggle : ATgDevice {
	char m_bIsToggle : 1; // 0xa04
};

struct UTgGameDataHandler : UTgDataHandler {
	ObjectProperty m_Game; // 0x11c
};

struct UTgSeqAct_GiveCredits : USequenceAction {
	int32_t CreditsToGive; // 0x108
};

struct UUIComponent_DruidGuardianInfo : UUIComponent_Display {
	ObjectProperty m_mcStun; // 0x124
	ObjectProperty m_StunCD; // 0x12c
	ObjectProperty m_Health; // 0x134
	ObjectProperty m_CachedDruid; // 0x13c
	char m_bUIStunRushInCooldown : 1; // 0x144
	char m_bIsVisible : 1; // 0x144
	float m_fUIStunRushCooldownTimeLeft; // 0x148
	float m_fUIStunRushCooldownTimeTotal; // 0x14c
	int32_t m_nLastUIStunRushNonce; // 0x150
	int32_t m_nLastFoxActivityNonce; // 0x154
	float m_fFoxActivityPingCooldown; // 0x158
	float m_fFoxActivityPingCooldownTotal; // 0x15c
};

struct UCheatManager : UObject {
	FString ViewingFrom; // 0x60
	FString OwnCamera; // 0x70
};

struct UTgAIBehaviorSensor_SafeToRecall : UTgAIBehaviorSensor {
	float SafeRecallDist; // 0x94
};

struct ASplineActor : AActor {
	TArray<FSplineConnection> Connections; // 0x280
	FVector SplineActorTangent; // 0x290
	FColor SplineColor; // 0x29c
	char bDisableDestination : 1; // 0x2a0
	char bAlreadyVisited : 1; // 0x2a0
	TArray<ObjectProperty> LinksFrom; // 0x2a4
	ObjectProperty nextOrdered; // 0x2b4
	ObjectProperty prevOrdered; // 0x2bc
	ObjectProperty previousPath; // 0x2c4
	int32_t bestPathWeight; // 0x2cc
	int32_t visitedWeight; // 0x2d0
	FInterpCurveFloat SplineVelocityOverTime; // 0x2d4
};

struct UTgSeqEvent_SpawnWise : USequenceEvent {
	int32_t Taskforce; // 0x128
};

struct UMaterialExpressionLinearInterpolate : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
	FExpressionInput Alpha; // 0x118
};

struct UUIScene_UIPatchNotesPopup : UUIScene {
	ObjectProperty m_mcTitle; // 0x1cc
	ObjectProperty m_CarouselPanel; // 0x1d4
	ObjectProperty m_pNextButton; // 0x1dc
	TArray<FJsonFeatureData> m_FeatureData; // 0x1e4
	TMap<None, None> m_FeatureMap; // 0x1f4
};

struct UTgAnimNotify_Sound : UAnimNotify_Sound {
	TArray<FPSE_Skin> m_SkinOverrideList; // 0x88
};

struct UMaterialInstanceTimeVarying : UMaterialInstance {
	char bAutoActivateAll : 1; // 0x2f4
	float Duration; // 0x2f8
	TArray<FFontParameterValueOverTime> FontParameterValues; // 0x2fc
	TArray<FScalarParameterValueOverTime> ScalarParameterValues; // 0x30c
	TArray<FTextureParameterValueOverTime> TextureParameterValues; // 0x31c
	TArray<FVectorParameterValueOverTime> VectorParameterValues; // 0x32c
	TArray<FLinearColorParameterValueOverTime> LinearColorParameterValues; // 0x33c
};

struct UTgSeqOp_MathCalc : USequenceCondition {
	float m_fResult; // 0xec
};

struct ATgDevice_Mount : ATgDevice_Toggle {
	char m_bForceFireDueToRespawn : 1; // 0xa08
	char m_bDismountProtection : 1; // 0xa08
	char m_bAutoMounting : 1; // 0xa08
	float m_fZoomDurationOverride; // 0xa0c
	TArray<ObjectProperty> m_CachedInhands; // 0xa10
	float m_fAutoMountDismountProtectionDuration; // 0xa20
};

struct ATgPawn_Bunny : ATgPawn_Character {
	ObjectProperty m_CachedBunnyLink; // 0x3160
	ObjectProperty m_CachedBunnyHeal; // 0x3168
	ObjectProperty m_CachedBunnyDefense; // 0x3170
	ObjectProperty m_CachedBunnyUlt; // 0x3178
	ObjectProperty c_CachedBunnyLinkForm; // 0x3180
	char m_bWhileEnemyLinkedEffectsApplied : 1; // 0x3188
	char m_bWhileFriendlyLinkedEffectsApplied : 1; // 0x3188
	char m_bSpiritLinkViewConstraint : 1; // 0x3188
	char m_bLinkedPawnsNetworkUpdate : 1; // 0x3188
	char m_bHasBeefySpiritLinkTalent : 1; // 0x3188
	int32_t m_nFriendlyLinkBeamFXId_1P; // 0x318c
	int32_t m_nFriendlyLinkBeamFXId_3P; // 0x3190
	int32_t m_nEnemyLinkBeamFXId_1P; // 0x3194
	int32_t m_nEnemyLinkBeamFXId_3P; // 0x3198
	int32_t m_nLinkBreakBeamFXId_1P; // 0x319c
	float m_fLinkBreakBeamTTL; // 0x31a0
	FName m_nmLinkBeamStartSocket; // 0x31a4
	float m_fLinkBreakDelay; // 0x31ac
	float m_fLinkBeamWeaknessOffset; // 0x31b0
	float m_fLinkBeamRestrengthenPeriod; // 0x31b4
	FName m_nmFamiliarFxDisplayGroup; // 0x31b8
	FName m_nmBeamWeaknessParameter; // 0x31c0
	ObjectProperty m_CurrentTarget; // 0x31c8
	float m_fMaxSpiritLinkRangeFeet; // 0x31d0
	float m_fSpiritLinkLoSFoVClient; // 0x31d4
	float m_fSpiritLinkLoSFoVServerGrace; // 0x31d8
	TArray<FSpiritLink> m_SpiritLinks; // 0x31dc
	TArray<FBreakingSpiritLink> m_SpiritLinkBreaks; // 0x31ec
	int32_t r_nSpiritLinkedPawnIds[0x3]; // 0x31fc
	int32_t m_nBeefySpiritLinkTalentId; // 0x3208
	float m_fBeefySpiritLinkTalentDuration; // 0x320c
};

struct ATgFatalityMeshActor : AActor {
	int32_t m_nTaskForceId; // 0x280
	ComponentProperty m_Mesh; // 0x284
};

struct UUIScene_UICredits : UUIScene {
	int32_t m_nCurrentPage; // 0x1cc
	TArray<ObjectProperty> m_pPages; // 0x1d0
	ObjectProperty m_pUpArrow; // 0x1e0
	ObjectProperty m_pDownArrow; // 0x1e8
};

struct UUIScene_UINotificationCenter : UUIScene {
	char m_eState; // 0x1cc
	ObjectProperty m_pTabs; // 0x1d0
	ObjectProperty m_pBack; // 0x1d8
	ObjectProperty m_pBlocker; // 0x1e0
	ObjectProperty m_pNotifications; // 0x1e8
	ObjectProperty m_pCoupons; // 0x1f0
	ObjectProperty m_grInput; // 0x1f8
};

struct UUIComponent_PopupManager : UUIComponent {
	TArray<FSceneData> m_PopupStack; // 0x118
	int32_t m_nCloseCurrentPopupHandle; // 0x128
	char m_bAllowPopups : 1; // 0x12c
};

struct UUIComponent_GenericTitleButtons : UUIComponent_Display {
	ObjectProperty m_mcTitle[0x2]; // 0x124
	ObjectProperty m_Buttons[0x8]; // 0x134
	int32_t m_ButtonClickHandles[0x8]; // 0x174
	ObjectProperty m_grButtons; // 0x194
};

struct USeqAct_CameraLookAt : USequenceAction {
	char bAffectCamera : 1; // 0x108
	char bAlwaysFocus : 1; // 0x108
	char bAdjustCamera : 1; // 0x108
	char bTurnInPlace : 1; // 0x108
	char bIgnoreTrace : 1; // 0x108
	char bAffectHead : 1; // 0x108
	char bRotatePlayerWithCamera : 1; // 0x108
	char bToggleGodMode : 1; // 0x108
	char bLeaveCameraRotation : 0; // 0x108
	char bDisableInput : 0; // 0x108
	char bUsedTimer : 0; // 0x108
	char bCheckLineOfSight : 0; // 0x108
	FVector2D InterpSpeedRange; // 0x10c
	FVector2D InFocusFOV; // 0x114
	FName FocusBoneName; // 0x11c
	FString TextDisplay; // 0x124
	float TotalTime; // 0x134
	float CameraFOV; // 0x138
	float RemainingTime; // 0x13c
};

struct UUIComponent_NotificationCouponEntry : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcExpiration; // 0x12c
	ObjectProperty m_mcItemIconTexture; // 0x134
	ObjectProperty m_mcChestImageStack; // 0x13c
	ObjectProperty m_pCTA; // 0x144
	ObjectProperty m_pCostPrev; // 0x14c
	ObjectProperty m_pCostCurrent; // 0x154
	ObjectProperty m_pGoToButton; // 0x15c
	ObjectProperty m_pFrameButton; // 0x164
};

struct UUIComponent_Button_LoadoutAnnouncer : UUIComponent_Display {
	ObjectProperty m_Play; // 0x124
	ObjectProperty m_mcAnnouncerIcon; // 0x12c
	ObjectProperty m_mcAnnouncerIconRarity; // 0x134
	ObjectProperty m_mcAnnouncerIconTexture; // 0x13c
	ObjectProperty m_mcEquipped; // 0x144
	ObjectProperty m_mcName; // 0x14c
};

struct UAnimNotify_PawnMaterialParam : UAnimNotify_Scripted {
	TArray<FScalarParameterInterpStruct> ScalarParameterInterpArray; // 0x68
};

struct UNavMeshPath_MinDistBetweenSpecsOfType : UNavMeshPathConstraint {
	float MinDistBetweenEdgeTypes; // 0x78
	FVector InitLocation; // 0x7c
	ENavMeshEdgeType EdgeType; // 0x88
	float Penalty; // 0x8c
};

struct UUIDataStore_Registry : UUIDataStore {
	TArray<FRegistryKeyValuePair> RegistryData; // 0x98
};

struct ATgDoorMarker : ATgTeamBlocker {
	DoorStatus r_eStatus; // 0x29c
	DoorStatus m_eInitStatus; // 0x29d
	ObjectProperty s_CollisionProxy; // 0x2a0
	float m_fProximity; // 0x2a8
	int32_t m_nTeamThatControlsDoor; // 0x2ac
	int32_t m_nMeshAssemblyId; // 0x2b0
	ComponentProperty m_DoorSMC; // 0x2b4
};

struct ATgGame_Paladins_Survival : ATgGame_Paladins_Siege {
	int32_t m_nWinningTaskforceThisRound; // 0xa64
	float m_fRoundStartTime; // 0xa68
};

struct ATgPawn_Tiberius : ATgPawn_Character {
	ObjectProperty m_CachedHeavyBlade; // 0x3160
	ObjectProperty m_CachedLeap; // 0x3168
	ObjectProperty m_CachedUlt; // 0x3170
	ObjectProperty m_CachedBladeDetonateTalent; // 0x3178
	ObjectProperty m_CachedLeapAssaultTalent; // 0x3180
	ObjectProperty m_CachedHeavyBladeForm; // 0x3188
	TigerBladeState r_eRemoteBladeState; // 0x3190
	ObjectProperty r_BladeProjectile; // 0x3194
	ObjectProperty r_BladeDeployable; // 0x319c
	FVector r_vLastLeapDirection; // 0x31a4
	char r_bHasViciousAssault : 1; // 0x31b0
	char r_bBladeInRecall : 1; // 0x31b0
	int32_t m_nAltInhandSlot; // 0x31b4
	int32_t m_nAltAltfireSlot; // 0x31b8
	float r_fRemoteUltDurationPercent; // 0x31bc
	int32_t r_nRemainingUltCharges; // 0x31c0
	int32_t r_nMaxUltCharges; // 0x31c4
	FString m_sSecondaryActivationIconOverride; // 0x31c8
	TArray<ObjectProperty> m_HeavyBladeScaleSkelControls; // 0x31d8
};

struct UUIHudCenter : UTgGfxScene {
	int32_t m_nReticle; // 0x1ec
	int32_t m_nStuckCount; // 0x1f0
	int32_t m_nAmmoCurrent; // 0x1f4
	int32_t m_nAmmoClipSize; // 0x1f8
	int32_t m_nReticleColor; // 0x1fc
	char m_bChangeReticleOverEnemy : 1; // 0x200
	char m_bChargeAmmo : 1; // 0x200
	char m_bReticleBloom : 1; // 0x200
	char m_bReticleVisible : 1; // 0x200
	char m_bReticleAccessoryVisible : 1; // 0x200
	char m_bDisableCombatLog : 1; // 0x200
	char m_bRecharging : 1; // 0x200
	char m_bWasHiddenOnTick : 1; // 0x200
	char m_bWasReloading : 0; // 0x200
	char m_bShowFuel : 0; // 0x200
	char m_bHitWarning3pVisible : 0; // 0x200
	float m_fReloadTime; // 0x204
	float m_fReloadTimer; // 0x208
	ObjectProperty m_scHitMarker[0x5]; // 0x20c
	ObjectProperty m_mcReticle; // 0x234
	ObjectProperty m_mcDropReticle; // 0x23c
	ObjectProperty m_mcCircleReticle; // 0x244
	ObjectProperty m_mcCicleReticleAccuracy[0x2]; // 0x24c
	ObjectProperty m_mcCrossReticle; // 0x25c
	ObjectProperty m_mcCrossReticleUp; // 0x264
	ObjectProperty m_mcCrossReticleLeft; // 0x26c
	ObjectProperty m_mcCrossReticleRight; // 0x274
	ObjectProperty m_mcCrossReticleDown; // 0x27c
	ObjectProperty m_mcDotReticle; // 0x284
	ObjectProperty m_mcWideReticle; // 0x28c
	ObjectProperty m_mcShaLinReticle; // 0x294
	ObjectProperty m_mcShaLinReticleDraw; // 0x29c
	ObjectProperty m_mcShaLinImpalerReticle; // 0x2a4
	ObjectProperty m_mcAtlasReticle; // 0x2ac
	ObjectProperty m_mcAtlasReticleDraw; // 0x2b4
	ObjectProperty m_mcMaeveReticle; // 0x2bc
	ObjectProperty m_mcMaevePounceLIRecticle; // 0x2c4
	ObjectProperty m_mcMaevePounceLORecticle; // 0x2cc
	ObjectProperty m_mcMaevePounceRIRecticle; // 0x2d4
	ObjectProperty m_mcMaevePounceRORecticle; // 0x2dc
	ObjectProperty m_mcHitWarning3p; // 0x2e4
	ObjectProperty m_mcTargeter; // 0x2ec
	ObjectProperty m_mcHitMarker; // 0x2f4
	ObjectProperty m_mcHitMarkerTicks[0x4]; // 0x2fc
	ObjectProperty m_mcAccuracy; // 0x31c
	ObjectProperty m_mcRecharge; // 0x324
	ObjectProperty m_mcRechargeCD; // 0x32c
	ObjectProperty m_mcStuck; // 0x334
	ObjectProperty m_mcAmmoNew; // 0x33c
	ObjectProperty m_mcAmmoNewCharge; // 0x344
	ObjectProperty m_mcAmmoNewCurrent; // 0x34c
	ObjectProperty m_mcAmmoNewClipSize; // 0x354
	ObjectProperty m_mcAmmoNewChargeMask; // 0x35c
	ObjectProperty m_mcMakoaSmash; // 0x364
	ObjectProperty m_mcMakoaSmashObj[0x3]; // 0x36c
	FVector2D m_vMakoaSmashStart[0x3]; // 0x384
	FVector2D m_vMakoaSmashEnd[0x3]; // 0x39c
	int32_t m_eCombatInfoType; // 0x3b4
	float m_fGlobalChatTimer; // 0x3b8
	ObjectProperty m_Reward; // 0x3bc
	ObjectProperty m_RewardName; // 0x3c4
	ObjectProperty m_RewardAmount; // 0x3cc
	ObjectProperty m_mcGlobalChat; // 0x3d4
	ObjectProperty m_mcGlobalChatTF; // 0x3dc
	ObjectProperty m_mcDamage; // 0x3e4
	ObjectProperty m_Projectiles; // 0x3ec
	FHudProjectile m_ProjectilePointers[0xa]; // 0x3f4
	TArray<FHudMarker> m_DamageMarkersLight; // 0x674
	TArray<int32_t> m_DamageMarkerFreelistLight; // 0x684
	TArray<FHudMarker> m_DamageMarkersMedium; // 0x694
	TArray<int32_t> m_DamageMarkerFreelistMedium; // 0x6a4
	TArray<FHudMarker> m_DamageMarkersHeavy; // 0x6b4
	TArray<int32_t> m_DamageMarkerFreelistHeavy; // 0x6c4
	TArray<FHudMarker> m_DamageMarkersAOEMedium; // 0x6d4
	TArray<int32_t> m_DamageMarkerFreelistAOEMedium; // 0x6e4
	TArray<FHudMarker> m_DamageMarkersAOEHeavy; // 0x6f4
	TArray<int32_t> m_DamageMarkerFreelistAOEHeavy; // 0x704
	ObjectProperty m_mcFuel; // 0x714
	ObjectProperty m_mcFuelBar; // 0x71c
	ObjectProperty m_mcFuelMask; // 0x724
	ObjectProperty m_mcReload; // 0x72c
	ObjectProperty m_mcReloadTF; // 0x734
	ObjectProperty m_mcReloadAnim; // 0x73c
	ObjectProperty m_TorvaldShieldBar; // 0x744
	ObjectProperty m_DemonTeleportTimer; // 0x74c
	ObjectProperty m_VanguardShieldBar; // 0x754
	ObjectProperty m_pLazarusShieldBar; // 0x75c
	ObjectProperty m_pFernandoShieldBar; // 0x764
	ObjectProperty m_HealFeed; // 0x76c
	TArray<FMessageClip> m_Messages; // 0x774
	float m_fClient3pReloadOffset; // 0x784
	float m_fHitWarning3pMoveSpeed; // 0x788
	float m_fHitWarning3pMoveCheckDistance; // 0x78c
	float m_fHitWarning3pScale; // 0x790
	FColor m_cHitWarning3pColor; // 0x794
	FColor m_cHitWarning3pReticleColor; // 0x798
	float m_fHitWarning3pThreshold; // 0x79c
	float m_fHitWarning3pThreshold2d; // 0x7a0
	FVector2D m_vHitWarning3pScalingSize; // 0x7a4
	FVector2D m_vHitWarning3pScalingRange; // 0x7ac
	float m_fHitWarning3pScalingSpeed; // 0x7b4
	float m_fAOEDamageMediumHeavyThreshold; // 0x7b8
	float m_fDamageLightMediumThreshold; // 0x7bc
	float m_fDamageMediumHeavyThreshold; // 0x7c0
	FHitMarkerInfo m_HitMarker; // 0x7c4
	float m_fMaxDamageTimestamp; // 0x7ec
	float m_fDamageDealtRTPCSustainDuration; // 0x7f0
	float m_fChampionHitTimestamp; // 0x7f4
	float m_fChampionCountRTPCSustainDuration; // 0x7f8
	TArray<FDamageInstance> m_AccumulatedDamageInstances; // 0x7fc
	float m_fDamageAccumulationWindow; // 0x80c
	ObjectProperty m_GameplayCurves; // 0x810
};

struct UGameThirdPersonCameraMode_Default : UGameThirdPersonCameraMode {
	float WorstLocAimingZOffset; // 0x258
	char bTemporaryOriginRotInterp : 1; // 0x25c
	float TemporaryOriginRotInterpSpeed; // 0x260
};

struct UGameExplosion : UObject {
	char bDirectionalExplosion : 1; // 0x60
	char bIgnoreInstigator : 1; // 0x60
	char bAllowTeammateCringes : 1; // 0x60
	char bFullDamageToAttachee : 1; // 0x60
	char bAttachExplosionEmitterToAttachee : 1; // 0x60
	char bPerformRadialBlurRelevanceCheck : 1; // 0x60
	char bCausesFracture : 1; // 0x60
	char bAllowPerMaterialFX : 1; // 0x60
	char bParticleSystemIsBeingOverriddenDontUsePhysMatVersion : 0; // 0x60
	char bSkipDefaultPhysMatParticleSystem : 0; // 0x60
	char bUseMapSpecificValues : 0; // 0x60
	char bUseOverlapCheck : 0; // 0x60
	char bOrientCameraShakeTowardsEpicenter : 0; // 0x60
	char bAutoControllerVibration : 0; // 0x60
	float DirectionalExplosionAngleDeg; // 0x64
	float DamageDelay; // 0x68
	float Damage; // 0x6c
	float DamageRadius; // 0x70
	float DamageFalloffExponent; // 0x74
	ObjectProperty ActorToIgnoreForDamage; // 0x78
	AActor* ActorClassToIgnoreForDamage; // 0x80
	AActor* ActorClassToIgnoreForKnockdownsAndCringes; // 0x88
	UDamageType* MyDamageType; // 0x90
	float KnockDownRadius; // 0x98
	float KnockDownStrength; // 0x9c
	float CringeRadius; // 0xa0
	FVector2D CringeDuration; // 0xa4
	float MomentumTransferScale; // 0xac
	ObjectProperty ParticleEmitterTemplate; // 0xb0
	float ExplosionEmitterScale; // 0xb8
	ObjectProperty HitActor; // 0xbc
	FVector HitLocation; // 0xc4
	FVector HitNormal; // 0xd0
	ObjectProperty ExplosionSound; // 0xdc
	ObjectProperty ExplosionSoundHurtSomeone; // 0xe4
	ComponentProperty ExploLight; // 0xec
	float ExploLightFadeOutTime; // 0xf4
	ComponentProperty ExploRadialBlur; // 0xf8
	float ExploRadialBlurFadeOutTime; // 0x100
	float ExploRadialBlurMaxBlur; // 0x104
	float FractureMeshRadius; // 0x108
	float FracturePartVel; // 0x10c
	ObjectProperty CamShake; // 0x110
	ObjectProperty CamShake_Left; // 0x118
	ObjectProperty CamShake_Right; // 0x120
	ObjectProperty CamShake_Rear; // 0x128
	float CamShakeInnerRadius; // 0x130
	float CamShakeOuterRadius; // 0x134
	float CamShakeFalloff; // 0x138
	AEmitterCameraLensEffectBase* CameraLensEffect; // 0x13c
	float CameraLensEffectRadius; // 0x144
};

struct UTgInventoryObject_Listen_Combo_BombKing : UTgInventoryObject_Listen_Combo {
	TArray<FStickyHitInfo> m_HitActors; // 0xcc
};

struct UTgAchievement_Damage : UTgAchievement {
	float m_fDamageDealt; // 0x94
};

struct ATgDevice_YagorathUlt : ATgDevice {
	ObjectProperty m_CachedYagorath; // 0xa04
	ObjectProperty m_Target; // 0xa0c
	float m_fPrePullTime; // 0xa14
	char m_bGrabFailed : 1; // 0xa18
	char m_bPullHit : 1; // 0xa18
	char m_bPullCancelledByCollision : 1; // 0xa18
	float m_fPreUltHealth; // 0xa1c
	float m_fPreUltMaxHealth; // 0xa20
	float m_fPullSpeedBreakFactor; // 0xa24
	float m_fDistanceBreakFactor; // 0xa28
	float m_fTargetBounceVel; // 0xa2c
};

struct UTgDeviceForm_Salvo : UTgDeviceForm {
	TArray<ObjectProperty> m_SalvoBlendList1P; // 0x28c
	TArray<ObjectProperty> m_SalvoBlendList3P; // 0x29c
	char m_bSalvoLightShouldBlink : 1; // 0x2ac
	char m_bSalvoLightIsOn : 1; // 0x2ac
	float m_fLastLightChangeTime; // 0x2b0
	float m_fMinLightChangeTime; // 0x2b4
};

struct ATgDeviceVolumeInfo : AInfo {
	ObjectProperty V; // 0x280
};

struct UTgAnimNodeBlendByHealth : UTgAnimNodeBlendList {
	TArray<float> m_HealthChildren; // 0x168
	ObjectProperty m_TgPawn; // 0x178
};

struct ATgTeleporter : ATeleporter {
	int32_t m_nMapObjectId; // 0x3a4
	int32_t m_nMapId; // 0x3a8
	char m_nPreload : 1; // 0x3ac
	char m_bSetTaskForce : 1; // 0x3ac
	char m_bBalanceTaskForce : 1; // 0x3ac
	char m_bIgnoreNonMembers : 1; // 0x3ac
	char m_bUsePlayerStart : 1; // 0x3ac
	char m_bRequestMission : 1; // 0x3ac
	char m_nStartGroup; // 0x3b0
	char m_nTaskForce; // 0x3b1
};

struct ATgPawn_Lex : ATgPawn_Character {
	ObjectProperty m_VengeanceDevice; // 0x3160
	ObjectProperty m_CombatSlideDevice; // 0x3168
	ObjectProperty m_InPursuitDevice; // 0x3170
	ObjectProperty m_WeaponMeshActorLexInhand; // 0x3178
	ObjectProperty m_Target; // 0x3180
	float m_MaxSlideCameraAngle; // 0x3188
	int32_t m_PrevCameraYaw; // 0x318c
	char c_bUltFiring : 1; // 0x3190
	char c_bPursuitFiring : 1; // 0x3190
	char m_bFireLeftWeapon : 1; // 0x3190
	ObjectProperty r_Targets[0x5]; // 0x3194
	ETheLawTargetState r_TargetStates[0x5]; // 0x31bc
	int32_t r_nInhandAmmoRemaining; // 0x31c4
};

struct UTgInventoryObject_Listen_OutOfCombat : UTgInvListener {
	char m_bEffectIsApplied : 1; // 0xc4
};

struct ATgDevice_RiderMovement : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_AccelMultiplier; // 0xa04
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa0c
	float m_fLastMultiplierUsed; // 0xa14
};

struct UTgGamePhase_Capture : UTgGamePhase {
	ObjectProperty m_currentActiveCapturePoint; // 0xb8
	float m_fCaptureGoal; // 0xc0
	float m_fCapturePointsPerSecond; // 0xc4
	int32_t m_nCreditsForCapturingPoint; // 0xc8
	float m_fSecondTracker; // 0xcc
};

struct URB_RadialImpulseComponent : UPrimitiveComponent {
	ERadialImpulseFalloff ImpulseFalloff; // 0x24c
	float ImpulseStrength; // 0x250
	float ImpulseRadius; // 0x254
	char bVelChange : 1; // 0x258
	char bCauseFracture : 1; // 0x258
	ComponentProperty PreviewSphere; // 0x25c
};

struct URB_BodySetup : UKMeshProps {
	ESleepFamily SleepFamily; // 0xb8
	FName BoneName; // 0xbc
	char bFixed : 1; // 0xc4
	char bNoCollision : 1; // 0xc4
	char bBlockZeroExtent : 1; // 0xc4
	char bBlockNonZeroExtent : 1; // 0xc4
	char bNoBodyShotChecks : 1; // 0xc4
	char bEnableContinuousCollisionDetection : 1; // 0xc4
	char bAlwaysFullAnimWeight : 1; // 0xc4
	char bConsiderForBounds : 1; // 0xc4
	ObjectProperty PhysMaterial; // 0xc8
	float MassScale; // 0xd0
	TArray<FPointer> CollisionGeom; // 0xd4
	TArray<FVector> CollisionGeomScale3D; // 0xe4
	TArray<FVector> PreCachedPhysScale; // 0xf4
	TArray<FKCachedConvexData> PreCachedPhysData; // 0x104
	int32_t PreCachedPhysDataVersion; // 0x114
};

struct USeqVar_Object : USequenceVariable {
	ObjectProperty ObjValue; // 0xa0
	FVector ActorLocation; // 0xa8
	TArray<UObject*> SupportedClasses; // 0xb4
};

struct UUIComponent_MatchLobbyCustomize : UUIComponent {
	ObjectProperty m_mcChampionItemSelect; // 0x118
	ObjectProperty m_PreviousButton; // 0x120
	ObjectProperty m_NextButton; // 0x128
	ObjectProperty m_BuyVoicepack; // 0x130
	ObjectProperty m_InputBuyVoicePack; // 0x138
	ObjectProperty m_InputSelectVoicePack; // 0x140
	ObjectProperty m_EquipSlotList; // 0x148
	ObjectProperty m_ItemList; // 0x150
	ObjectProperty m_pEquipSlotNavLeft; // 0x158
	ObjectProperty m_pEquipSlotNavRight; // 0x160
	ObjectProperty m_VoiceDropdown; // 0x168
	ObjectProperty m_pPurchase; // 0x170
	UIChampionCustomizeState m_eState; // 0x178
	UIChampionCustomizeState m_eSelectedSlot; // 0x179
	ObjectProperty m_mcTooltip; // 0x17c
	ObjectProperty m_pTooltipInfo; // 0x184
	ObjectProperty m_pColorPicker; // 0x18c
};

struct UTgGamePhase_ChangeRespawnTime : UTgGamePhase {
	float m_fRespawnDuration; // 0xb8
};

struct UTgCameraModule_SpectatorOverview : UTgCameraModule_Spectator {
	FRotator WorldViewRotation; // 0x9c
	float FOV; // 0xa8
	float TargetZoomedFOV; // 0xac
	float ZoomIncrement; // 0xb0
	float MinZoom; // 0xb4
	float MaxZoom; // 0xb8
	float ZoomInterpTime; // 0xbc
	FVector CurrentSpringLocation; // 0xc0
	float PawnTargetSpringDamping; // 0xcc
	float FreeCamSpringDamping; // 0xd0
	float IgnoreSpringDistance; // 0xd4
	TArray<FCameraPitchInfo> CameraPitchData; // 0xd8
	char bFlippedSides : 1; // 0xe8
	char bJustBecameActive : 1; // 0xe8
	char bAutoZoomEnabled : 1; // 0xe8
	float OverviewCameraInfluenceDist; // 0xec
	TArray<ObjectProperty> OverviewCameras; // 0xf0
	TArray<ObjectProperty> TransparentTowerList; // 0x100
	FVector ObstacleTransparentExtent; // 0x110
	float fMinAutoZoomFOVAngle; // 0x11c
	float fMaxAutoZoomFOVAngle; // 0x120
	float fMinAutoZoomDistance; // 0x124
	float fMaxAutoZoomDistance; // 0x128
	float fAutoZoomDetectionRadius; // 0x12c
	float fAutoZoomInSpeed; // 0x130
	float fAutoZoomOutSpeed; // 0x134
	float fAutoZoomInLockOutTime; // 0x138
	float fAutoZoomOutLockOutTime; // 0x13c
	float m_RemainingAutoZoomInLockOutTime; // 0x140
	float m_RemainingAutoZoomOutLockOutTime; // 0x144
};

struct ADynamicPhysicsVolume : APhysicsVolume {
	char bEnabled : 1; // 0x314
};

struct UTgCameraModule_Free : UTgCameraModule {
	float CamAltitude; // 0x68
	float DesiredCamAltitude; // 0x6c
	float MaxCamAltitude; // 0x70
	float MinCamAltitude; // 0x74
	float CamZoomIncrement; // 0x78
	char m_bCachedNoDeathCamExperiment : 1; // 0x7c
};

struct ATgPawn_SiegeWall : ATgPawn_Tower {
	float m_fImpactEffectXRange; // 0x2f28
	float m_fImpactEffectYRange; // 0x2f2c
	FVector r_vNextImpactEffectLocation; // 0x2f30
	float m_fImpactRecoveryTime; // 0x2f3c
	float m_fRemainingImpactRecoveryTime; // 0x2f40
	float m_fMaxImpactSize; // 0x2f44
	ObjectProperty m_ImpactMIC; // 0x2f48
	char c_bIsVulnerable : 1; // 0x2f50
	char m_bHasRegisteredObstacle : 1; // 0x2f50
	char m_bSpawnedThisFrame : 1; // 0x2f50
	char m_bQueriedBorderEdges : 1; // 0x2f50
};

struct UTgSeqAct_UIAlert : USequenceAction {
	int32_t nMsgId; // 0x108
	TArray<int32_t> Taskforces; // 0x10c
	TArray<char> Broadcast; // 0x11c
};

struct USoundNode : UObject {
	int32_t NodeUpdateHint; // 0x60
	TArray<ObjectProperty> ChildNodes; // 0x64
};

struct ATgDevice_Protection : ATgDevice {
	ObjectProperty m_Gauntlet; // 0xa04
};

struct USoundNodeAttenuationAndGain : USoundNode {
	char bAttenuate : 1; // 0x74
	char bSpatialize : 1; // 0x74
	char bAttenuateWithLPF : 1; // 0x74
	float dBAttenuationAtMax; // 0x78
	float OmniRadius; // 0x7c
	SoundDistanceModel GainDistanceAlgorithm; // 0x80
	SoundDistanceModel AttenuateDistanceAlgorithm; // 0x81
	ESoundDistanceCalc DistanceType; // 0x82
	float MinimalVolume; // 0x84
	float RadiusMin; // 0x88
	float RadiusPeak; // 0x8c
	float RadiusMax; // 0x90
	float LPFMinimal; // 0x94
	float LPFRadiusMin; // 0x98
	float LPFRadiusPeak; // 0x9c
	float LPFRadiusMax; // 0xa0
};

struct ATgWeaponMeshActor_ChurchillInhand : ATgWeaponMeshActor_ADS {
	FPointer VfTable_ITgObserver_ViewTargetChanged; // 0x454
	ObjectProperty m_CachedChurchill; // 0x45c
	float m_fShieldLagStrength; // 0x464
	float m_fShieldMinPitch; // 0x468
	float m_fShieldMinPitchMaxTranslate; // 0x46c
	FLinearColor m_cDefaultColorizeRed1p; // 0x470
	FLinearColor m_cDefaultColorizeRed3p; // 0x480
	int32_t m_nColorizeRedChnageSource; // 0x490
	FLinearColor DetectedColorWeapon; // 0x494
};

struct UTgSeqAct_JoinTeam : USequenceAction {
	ObjectProperty TeamLeader; // 0x108
};

struct UTgDeviceForm_RestoreSoul : UTgDeviceForm {
	ObjectProperty m_CachedOracle; // 0x28c
};

struct UUIChatScene : UTgGfxScene {
	int32_t m_nContextChangedCallbackHandle; // 0x1ec
	ObjectProperty m_KeyCapture; // 0x1f0
	int32_t m_nChannel; // 0x1f8
	int32_t m_nScroll; // 0x1fc
	int32_t m_nLineNumber; // 0x200
	int32_t m_nPrevIndex; // 0x204
	float m_fBuffer; // 0x208
	float m_fOutputWidth; // 0x20c
	FString m_sRecipient; // 0x210
	FString m_sRemaining; // 0x220
	FString m_sLastInput; // 0x230
	int32_t m_nCommand; // 0x240
	ObjectProperty m_pChatData; // 0x244
	ObjectProperty m_mcInput; // 0x24c
	TArray<FChatMessage> m_Messages; // 0x254
	TArray<FString> m_PrevChats; // 0x264
	TArray<FChannelData> m_Shortcuts; // 0x274
	int32_t m_ReplyTargetIndex; // 0x284
	AUTOCOMPLETE_STATE m_bAutocompleteState; // 0x288
};

struct UTgAIBehaviorCondition_TeamDeathCount : UTgAIBehaviorCondition {
	char bMustBeEnemy : 1; // 0x98
	int32_t DeathThreshold; // 0x9c
};

struct UPComPlayerProfile : UOnlinePlayerStorage {
	int32_t Rank; // 0x94
	int32_t Kills; // 0x98
	int32_t Deaths; // 0x9c
	int32_t Assists; // 0xa0
	int32_t XpLevel; // 0xa4
	int32_t HZPoints; // 0xa8
	int32_t XPPoints; // 0xac
	int32_t AssistPoints; // 0xb0
	int32_t AverageScore; // 0xb4
	int32_t BoostHoursRemaining; // 0xb8
	int32_t InfoMask; // 0xbc
	int32_t TimePlayed; // 0xc0
	int32_t TotalAccolades; // 0xc4
	int32_t FastestSki; // 0xc8
	int32_t FlagGrabs; // 0xcc
	int32_t FlagCaps; // 0xd0
	int32_t GensDestroyed; // 0xd4
	int32_t ObjsDestroyed; // 0xd8
	char bVIP : 1; // 0xdc
	char bBoost : 1; // 0xdc
	int32_t PlayerID; // 0xe0
	FString PlayerName; // 0xe4
	TArray<FBadgeStruct> Badges; // 0xf4
	TArray<FBadgeStruct> TopBadges; // 0x104
	TArray<FPropertyPair> ClassTimePlayed; // 0x114
	TArray<FAccoladeStruct> Accolades; // 0x124
};

struct UTgDeviceForm_ArcaneMissilesInhand : UTgDeviceForm_Inhand {
	ObjectProperty m_CachedGauntlet; // 0x29c
	float c_fLastReceivedTransitionInTime; // 0x2a4
};

struct UUIData_StreamSettings : UUIData {
	char m_bIsStreaming : 1; // 0x64
	FPComOpenBroadcasterSettings m_Settings; // 0x68
};

struct UTgMiniMap : UObject {
	int32_t m_nMiniMapMode; // 0x60
	char m_bShouldDisplayMiniMap : 1; // 0x64
	char m_bHasMiniMapTexture : 1; // 0x64
	char m_bRequiresLOS : 1; // 0x64
	char m_bUseFlashSizing : 1; // 0x64
	char m_bSpectating : 1; // 0x64
	float m_fLastUpdateTime; // 0x68
	ObjectProperty m_MiniMapBaseMIC; // 0x6c
	ObjectProperty m_MiniMapMIC; // 0x74
	ObjectProperty m_DynamicMask; // 0x7c
	int32_t m_nMaskSize; // 0x84
	float m_fIconScale; // 0x88
	FVector2D m_vMapLocation; // 0x8c
	int32_t m_nMapSize; // 0x94
	FPointer m_MiniMapRender; // 0x98
	ObjectProperty m_OwnerPC; // 0xa0
	int32_t m_nWorldMapSize; // 0xa8
	ObjectProperty m_MICPinging; // 0xac
	ObjectProperty m_MICPingingEnemy; // 0xb4
	ObjectProperty m_MICRetreat; // 0xbc
	ObjectProperty m_MICRetreatEnemy; // 0xc4
	ObjectProperty m_MICAlert; // 0xcc
	ObjectProperty m_MICAlertEnemy; // 0xd4
	ObjectProperty m_MICAlertSilent; // 0xdc
	ObjectProperty m_MICLocalPlayer; // 0xe4
	ObjectProperty m_MICLocalSpectator; // 0xec
	TArray<ObjectProperty> m_TextureRefs; // 0xf4
	ObjectProperty m_MICPlayer[0x6]; // 0x104
	ObjectProperty m_MICMinion[0x6]; // 0x134
	ObjectProperty m_MICTower[0x6]; // 0x164
	ObjectProperty m_MICTitan[0x6]; // 0x194
	ObjectProperty m_MICPhoenix[0x6]; // 0x1c4
	ObjectProperty m_MICCapturePoint[0x6]; // 0x1f4
	ObjectProperty m_MICLanePusher[0x6]; // 0x224
	ObjectProperty m_MICTowerOlympus[0x3]; // 0x254
	ObjectProperty m_MICTitanOlympus[0x6]; // 0x26c
	ObjectProperty m_MICPhoenixOlympus[0x3]; // 0x29c
	ObjectProperty m_MICMonster; // 0x2b4
	FLinearColor m_PortalLinkColor[0x6]; // 0x2bc
	FBuffMonsterMIC m_MICBuffMonster[0xe]; // 0x31c
	ObjectProperty m_MICTowerDestroyed; // 0x46c
	ObjectProperty m_PlayerBackground[0x6]; // 0x474
	ObjectProperty m_TowerAttackBackground[0x6]; // 0x4a4
	TMap<None, None> m_IconMap; // 0x4d4
	FBitArray_Mirror m_MaskPoints; // 0x51c
	TgMapOrientation m_Orientation; // 0x53c
	TgMapTeam m_LocalTeam; // 0x53d
	TgClientVisibilityMode m_VisibilityMode; // 0x53e
	char bUpdateCapturePoint[0x5]; // 0x53f
	TMap<None, None> m_EntityMap; // 0x544
	TArray<FLayerIndex> m_PortalLayeringIdx; // 0x58c
	TArray<FLayerIndex> m_LayeringIdx; // 0x59c
	TArray<FMiniMapPingInfo> m_IndependentPings; // 0x5ac
};

struct UUIComponent_SimulMediaRewardInfo : UUIComponent_Display {
	ObjectProperty m_mcTF0; // 0x124
	ObjectProperty m_mcTF1; // 0x12c
	ObjectProperty m_mcTF2; // 0x134
	ObjectProperty m_mcTF3; // 0x13c
	ObjectProperty m_mcRewardIcon; // 0x144
	ObjectProperty m_mcRewardIcon1; // 0x14c
	ObjectProperty m_CollectionRewardTracker; // 0x154
	ObjectProperty m_CollectionRewardReceived; // 0x15c
};

struct UParticleModuleAttractorPoint : UParticleModuleAttractorBase {
	FRawDistributionVector Position; // 0x68
	FRawDistributionFloat Range; // 0x8c
	FRawDistributionFloat Strength; // 0xb0
	char StrengthByDistance : 1; // 0xd4
	char bAffectBaseVelocity : 1; // 0xd4
	char bOverrideVelocity : 1; // 0xd4
	char bUseWorldSpacePosition : 1; // 0xd4
};

struct ATgDevice_RiderUlt : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	char r_nEatingCookie; // 0xa0c
};

struct UBlurEffect : UPostProcessEffect {
	int32_t BlurKernelSize; // 0x88
};

struct ATgShadowStickProp : ATgPropActor {
	float m_fCheckFallTimer; // 0x294
	float m_fCheckFallFrequency; // 0x298
	char m_bAttachedToPersonalShield : 1; // 0x29c
	char m_bAttachedToDeployable : 1; // 0x29c
	char m_bAttachedToPet : 1; // 0x29c
	char m_bSkipClosenessCheck : 1; // 0x29c
	ObjectProperty attachedToTarget; // 0x2a0
};

struct ATgRepInfo_Game_Flagball : ATgRepInfo_Game {
	float c_fFlagballCorrectInterval; // 0x5c8
	float c_fFlagballCorrectTimer; // 0x5cc
	char c_bInFarMoveState : 1; // 0x5d0
	char r_bPassingEnabled : 1; // 0x5d0
	char r_bBallActive : 1; // 0x5d0
	char r_bBallExists : 1; // 0x5d0
	ObjectProperty c_Flagball; // 0x5d4
	ObjectProperty c_TF1Goal; // 0x5dc
	ObjectProperty c_TF2Goal; // 0x5e4
	float r_nTimeRemaining; // 0x5ec
	ObjectProperty r_BallCarrier; // 0x5f0
	FVector r_vBallPosition; // 0x5f8
	FVector r_vBallVelocity; // 0x604
	FVector r_vBallPositionForHUD; // 0x610
	FVector r_vTF1GoalLocation; // 0x61c
	FVector r_vTF2GoalLocation; // 0x628
	int32_t c_nFlagballDeviceFireID; // 0x634
	ObjectProperty r_GoalMarker; // 0x638
};

struct UTgDeviceFire_CommanderUlt : UTgDeviceFire {
	float m_fMaxZTrace; // 0x268
	float m_fZOffSet; // 0x26c
	float m_fXYOffset; // 0x270
};

struct UTgAIBehaviorCondition_InsideDeviceVolume : UTgAIBehaviorCondition {
	int32_t DeviceID; // 0x98
	char bMustBeEnemy : 1; // 0x9c
};

struct UNetConnection : UPlayer {
	TArray<ObjectProperty> Children; // 0xb0d0
};

struct UAnimationCompressionAlgorithm_RemoveEverySecondKey : UAnimationCompressionAlgorithm {
	int32_t MinKeys; // 0x78
	char bStartAtSecondKey : 1; // 0x7c
};

struct UParticleModuleLifetime : UParticleModuleLifetimeBase {
	FRawDistributionFloat Lifetime; // 0x68
};

struct ATgDevice_OwlSidearm : ATgDevice {
	float m_fQueueFireTime; // 0xa04
	float m_fQueueFireTimeThreshold; // 0xa08
	char m_bEnableContinuousFire : 1; // 0xa0c
};

struct UTgAnimNotifySkinData : UObject {
	FString OwningNotify; // 0x60
	ObjectProperty SoundCueTemplate; // 0x70
	ObjectProperty ParticleSystemTemplate; // 0x78
	int32_t nSkinId; // 0x80
	int32_t nSkinLevel; // 0x84
};

struct UTgDeviceForm_Pounce : UTgDeviceForm {
	TArray<ObjectProperty> m_PounceNodes3p; // 0x28c
	TArray<ObjectProperty> m_PounceNodes1p; // 0x29c
	char bFOVZoomActive : 1; // 0x2ac
	float m_fCameraFOVInterpolationTime; // 0x2b0
	float m_fFOVModifier; // 0x2b4
};

struct UNavMeshPath_SameCoverLink : UNavMeshPathConstraint {
	ObjectProperty TestLink; // 0x78
};

struct UTgSeqAct_PlayAnnouncement : USequenceAction {
	char bPlayImmediately : 1; // 0x108
	char bFlushOthers : 1; // 0x108
	int32_t SoundIndex; // 0x10c
	ObjectProperty OptionalCue; // 0x110
};

struct UUIScene_UIHnHAcquisition : UUIScene {
	int32_t m_nOrbsToDisplay; // 0x1cc
	float m_fFadeInTimer; // 0x1d0
	float m_fBackTimer; // 0x1d4
	char m_bOwnsBlessing : 1; // 0x1d8
	ObjectProperty m_pDrogozBundle; // 0x1dc
	ObjectProperty m_pMaeveBundle; // 0x1e4
	ObjectProperty m_pTyraBundle; // 0x1ec
	ObjectProperty m_pAndroBundle; // 0x1f4
	FMultiMap_Mirror m_pAcquiredItems; // 0x1fc
	ObjectProperty m_mcBlessing; // 0x244
	ObjectProperty m_mcSeal; // 0x24c
	ObjectProperty m_mcSealTF; // 0x254
	ObjectProperty m_mcAcquisition; // 0x25c
	ObjectProperty m_mcAcquisitionTF; // 0x264
	ObjectProperty m_mcNumItems; // 0x26c
	ObjectProperty m_pItems; // 0x274
	ObjectProperty m_pNextButton; // 0x27c
	ObjectProperty m_pNextButtonAction; // 0x284
};

struct ATgSpawnGate : ADynamicBlockingVolume {
	ESpawnGateType m_eSpawnGateType; // 0x2c4
	ObjectProperty m_StandardEmitter; // 0x2c8
	ObjectProperty m_TeamColoredEmitter; // 0x2d0
	char m_bStartActive : 1; // 0x2d8
	char m_bGateOpen : 1; // 0x2d8
	char m_bCollisionActive : 1; // 0x2d8
	int32_t m_nCurrentTaskforce; // 0x2dc
};

struct UInterpGroup : UObject {
	FPointer VfTable_FInterpEdInputInterface; // 0x60
	TArray<ObjectProperty> InterpTracks; // 0x68
	FName GroupName; // 0x78
	FColor GroupColor; // 0x80
	TArray<ObjectProperty> GroupAnimSets; // 0x84
	char bCollapsed : 1; // 0x94
	char bVisible : 1; // 0x94
	char bIsFolder : 1; // 0x94
	char bIsParented : 1; // 0x94
	char bIsSelected : 1; // 0x94
};

struct UUIScene_UIHudTiberius : UUIScene {
	char m_bViewTargetTiberius : 1; // 0x1cc
	char m_bHudVisible : 1; // 0x1cc
	int32_t m_nNumUltCharges; // 0x1d0
	int32_t m_nNumUltChargesMax; // 0x1d4
	ObjectProperty m_pDataActive; // 0x1d8
	ObjectProperty m_pDataInactive; // 0x1e0
	ObjectProperty m_pUltCharges; // 0x1e8
	ObjectProperty m_CachedTiberius; // 0x1f0
};

struct ATgDeploy_EffectSpots : ATgDeploy_MatchParentFireMode {
	FEffectSpotInfo r_EffectSpots[0x64]; // 0x46c
	int32_t m_nNewSpotIndex; // 0x159c
	ObjectProperty m_CollisionProxy; // 0x15a0
	float m_fFirstPassRadius; // 0x15a8
	TArray<ObjectProperty> m_TouchingActors; // 0x15ac
	TArray<FEffectSpotTarget> m_AffectedActors; // 0x15bc
	char m_bUsesEffectRefresh : 1; // 0x15cc
	float m_fLastRefreshTime; // 0x15d0
	float m_fMinRefreshTime; // 0x15d4
	FEffectSpotFXInfo c_SpotFX[0x64]; // 0x15d8
};

struct UUIScene_UIHudCenter : UUIScene {
	ObjectProperty m_mcKillingBlow; // 0x1cc
};

struct UMaterialExpressionParticleMacroUV : UMaterialExpression {
	char bUseViewSpace : 1; // 0xb0
};

struct UTgPawnMod_FxAudio_EDMJenos : UTgPawnMod_FxAudio {
	float m_fGlowMultBass; // 0xac
};

struct ATgTutorialVolume : AVolume {
	char m_bHasLocalPawn : 1; // 0x2bc
	char m_bHasSeenLocalPawnBefore : 1; // 0x2bc
};

struct UTerrainMaterial : UObject {
	FMatrix LocalToMapping; // 0x60
	ETerrainMappingType MappingType; // 0xa0
	float MappingScale; // 0xa4
	float MappingRotation; // 0xa8
	float MappingPanU; // 0xac
	float MappingPanV; // 0xb0
	ObjectProperty Material; // 0xb4
	ObjectProperty DisplacementMap; // 0xbc
	float DisplacementScale; // 0xc4
};

struct AWaterVolume : APhysicsVolume {
	ObjectProperty EntrySound; // 0x314
	AActor* EntryActor; // 0x31c
	ObjectProperty ExitSound; // 0x324
	AActor* ExitActor; // 0x32c
};

struct UTgInventoryObject_Listen_Combo_Cassie : UTgInventoryObject_Listen_Combo {
	float m_fDodgeRollFireTime; // 0xcc
	ObjectProperty m_CachedCassiePawn; // 0xd0
};

struct UUIScene_UIPopupChampionLevelUp : UUIScene {
	ObjectProperty m_mcTitle; // 0x1cc
	ObjectProperty m_mcPurchaseAmount; // 0x1d4
	ObjectProperty m_mcLevelTF; // 0x1dc
	ObjectProperty m_mcCancelPrompt; // 0x1e4
	ObjectProperty m_mcHoldPrompt; // 0x1ec
	ObjectProperty m_mcWait; // 0x1f4
	ObjectProperty m_pSpinner; // 0x1fc
	ObjectProperty m_pControllerPrice; // 0x204
	ObjectProperty m_pPurchaseButton; // 0x20c
	ObjectProperty m_pHoldPrompt; // 0x214
	ObjectProperty m_pLeftArrow; // 0x21c
	ObjectProperty m_pRightArrow; // 0x224
	ObjectProperty m_pCancelButton; // 0x22c
	Fdword m_dwChampId; // 0x234
	Fdword m_dwChampXP; // 0x238
	Fdword m_dwChampLevel; // 0x23c
	Fdword m_dwPurchaseLevel; // 0x240
	ObjectProperty m_pLTI; // 0x244
	ObjectProperty m_pPurchasePrice; // 0x24c
	Fdword m_dwPurchaseQuantity; // 0x254
};

struct UUIComponent : UObject {
	FPointer VfTable_ITgCallbackInterface; // 0x60
	UICOMPONENTTYPE m_ComponentType; // 0x68
	ObjectProperty m_Owner; // 0x6c
	ObjectProperty m_mcRoot; // 0x74
	FString m_sLoadName; // 0x7c
	int32_t m_nLoadIndex; // 0x8c
	FString m_sConstructName; // 0x90
	char m_bConstructed : 1; // 0xa0
	char m_bCenteredHorizontally : 1; // 0xa0
	char m_bCenteredVertically : 1; // 0xa0
	char m_bShouldCreateInput : 1; // 0xa0
	char m_bBlockInputFallThrough : 1; // 0xa0
	char m_bBlockGlobalInput : 1; // 0xa0
	char m_bPushInputOnVisible : 1; // 0xa0
	int32_t m_nDeferredUpdateCallbackHandle; // 0xa4
	TArray<ObjectProperty> m_Components; // 0xa8
	FMultiMap_Mirror m_ComponentMap; // 0xb8
	ObjectProperty m_CallbackContainer; // 0x100
	int32_t m_nXBeforeCenter; // 0x108
	int32_t m_nYBeforeCenter; // 0x10c
	ObjectProperty m_InputContext; // 0x110
};

struct UUIScene_UIChampion : UUIScene {
	UICHAMPION_STATE m_eState; // 0x1cc
	char m_bInsideRotator : 1; // 0x1d0
	char m_bIsRotating : 1; // 0x1d0
	float m_fPrevMouseXPos; // 0x1d4
	ObjectProperty m_pChampData; // 0x1d8
	ObjectProperty m_mcDetailsTitle; // 0x1e0
	ObjectProperty m_mcDetailsSubtitle; // 0x1e8
	ObjectProperty m_mcDetailsClassIcon; // 0x1f0
	ObjectProperty m_pRotator; // 0x1f8
	ObjectProperty m_pOverview; // 0x200
	ObjectProperty m_pSkins; // 0x208
	ObjectProperty m_pLoadouts; // 0x210
	ObjectProperty m_pAbilities; // 0x218
};

struct UUIComponent_ItemUIChampion : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_mcOwned; // 0x12c
	ObjectProperty m_mcRarity; // 0x134
	ObjectProperty m_mcEquipped; // 0x13c
	ObjectProperty m_mcChampionName; // 0x144
	ObjectProperty m_mcSourceIconLock; // 0x14c
	ObjectProperty m_mcSourceIconEvent; // 0x154
	ObjectProperty m_mcSourceIconBattlePass; // 0x15c
	ObjectProperty m_mcSourceIconChest; // 0x164
	ObjectProperty m_mcColorPickerIcon; // 0x16c
	ObjectProperty m_pItemHint; // 0x174
	ObjectProperty m_pItemPrice; // 0x17c
	ObjectProperty m_pSourceIconCurrencies; // 0x184
	ObjectProperty m_pExclusiveBanner; // 0x18c
	ObjectProperty m_pItemPreviewStack; // 0x194
	char m_bCheckSkinForCollectionEquipped : 1; // 0x19c
};

struct UMaterialExpressionComment : UMaterialExpression {
	int32_t PosX; // 0xb0
	int32_t PosY; // 0xb4
	int32_t SizeX; // 0xb8
	int32_t SizeY; // 0xbc
	FString Text; // 0xc0
};

struct UUIScene_UISettings : UUIScene {
	ObjectProperty m_LastOpenChatTab; // 0x1cc
};

struct UNavMeshPath_Toward : UNavMeshPathConstraint {
	char bBiasAgainstHighLevelPath : 1; // 0x78
	float OutOfHighLevelPathBias; // 0x7c
	ObjectProperty GoalActor; // 0x80
	FVector GoalPoint; // 0x88
};

struct ATgDevice_LongbowPlanted : ATgDevice_Stim {
	ObjectProperty m_CachedLongbow; // 0xa04
	ObjectProperty m_CachedInhand; // 0xa0c
};

struct UUIComponent_Targeter_BracketTargeter : UUIComponent_Targeter {
	ObjectProperty m_mcTargeterLeft; // 0x184
	ObjectProperty m_mcTargeterRight; // 0x18c
	float m_fSideTargeterAspectRatio; // 0x194
	float m_fMaxBracketWidth; // 0x198
};

struct ATgDeploy_Pickup : ATgDeployable {
	char m_bApplyToEntireTeam : 1; // 0x46c
};

struct UTgInventoryObject_Listen_Combo_Barik : UTgInventoryObject_Listen_Combo {
	TArray<FComboInfo> m_ComboInfoList; // 0xcc
	TArray<FUIMarkInfo> m_UIMarkInfoList; // 0xdc
	TArray<FBurningMarkInfo> m_BurningMarks; // 0xec
};

struct ATgAIController : AGameAIController {
	ObjectProperty m_pOwner; // 0x4e0
	FVector m_vSpawnLocation; // 0x4e8
	FRotator m_rSpawnDirection; // 0x4f4
	ObjectProperty m_pFactory; // 0x500
	int32_t m_nFactorySpawnGroup; // 0x508
	FPointer m_pBot; // 0x50c
	FPointer m_pSettings; // 0x514
	FPointer m_pSkin; // 0x51c
	int32_t m_iAssignedLane; // 0x524
	TMap<None, None> m_SeePawnCache; // 0x528
	float LastSeePawnCacheTime; // 0x570
	float SeePawnClearTime; // 0x574
	ObjectProperty m_pLastAttacker; // 0x578
	ObjectProperty m_Squad; // 0x580
	float LastDamageTakenTime; // 0x588
	FVector LastDamageTakenPosition; // 0x58c
	TMap<None, None> m_LoSCache; // 0x598
	float LastLoSCacheTime; // 0x5e0
	EHavokNavigationMeshType m_eNavmeshType; // 0x5e4
	EPhysics WalkingPhysics; // 0x5e5
	float m_fAILevelUpSecs; // 0x5e8
	float VisionDistance; // 0x5ec
	float VisionDistanceBonus; // 0x5f0
	char bUsesObstacleAvoidance : 1; // 0x5f4
	char bIsPaused : 1; // 0x5f4
	char bIsAIFrozen : 1; // 0x5f4
	ObjectProperty ObstacleAvoidance; // 0x5f8
	float ObstacleAvoidanceGridPointSize; // 0x600
	float ObstacleAvoidanceGridExtents; // 0x604
	FVector SpreadLocation; // 0x608
	ObjectProperty CachedPRI; // 0x614
	float LastCheckStuckTime; // 0x61c
	float CheckStuckTime; // 0x620
	FVector LastCachedStuckPosition; // 0x624
	float LastCheckFlungTime; // 0x630
	float CheckFlungTime; // 0x634
	FVector LastCachedFlungPosition; // 0x638
};

struct UForceFeedbackManager : UObject {
	char bAllowsForceFeedback : 1; // 0x60
	char bIsPaused : 1; // 0x60
	float ScaleAllWaveformsBy; // 0x64
	TArray<FForceFeedbackPlayingInfo> PlayingWaveforms; // 0x68
};

struct ANxGenericForceFieldBrush : AVolume {
	int32_t ExcludeChannel; // 0x2bc
	FRBCollisionChannelContainer CollideWithChannels; // 0x2c0
	ERBCollisionChannel RBChannel; // 0x2c4
	FFB_ForceFieldCoordinates Coordinates; // 0x2c5
	FVector Constant; // 0x2c8
	FVector PositionMultiplierX; // 0x2d4
	FVector PositionMultiplierY; // 0x2e0
	FVector PositionMultiplierZ; // 0x2ec
	FVector PositionTarget; // 0x2f8
	FVector VelocityMultiplierX; // 0x304
	FVector VelocityMultiplierY; // 0x310
	FVector VelocityMultiplierZ; // 0x31c
	FVector VelocityTarget; // 0x328
	FVector Noise; // 0x334
	FVector FalloffLinear; // 0x340
	FVector FalloffQuadratic; // 0x34c
	float TorusRadius; // 0x358
	FPointer ForceField; // 0x35c
	TArray<FPointer> ConvexMeshes; // 0x364
	TArray<FPointer> ExclusionShapes; // 0x374
	TArray<FPointer> ExclusionShapePoses; // 0x384
	FPointer LinearKernel; // 0x394
};

struct ATgPhysAnimTestActor : AActor {
	TArray<FName> LowerBoneNames; // 0x280
	TArray<FName> LinearBoneSpringNames; // 0x290
	TArray<FName> AngularBoneSpringNames; // 0x2a0
	ComponentProperty SkeletalMeshComponent; // 0x2b0
	EPATAState CurrentState; // 0x2b8
	char bBlendToGetUp : 1; // 0x2bc
	char bBlendingBack : 1; // 0x2bc
	char bRampingDownMotors : 1; // 0x2bc
	char bNextPokeKnocksDown : 1; // 0x2bc
	float GetUpBlendStartTime; // 0x2c0
	float GetUpBlendTime; // 0x2c4
	float GetUpToIdleTime; // 0x2c8
	float ActorOriginHeight; // 0x2cc
	float PokePauseTime; // 0x2d0
	float PokeBlendTime; // 0x2d4
	float BlendBackStartTime; // 0x2d8
	float MotorDownStartTime; // 0x2dc
	float MotorDownTime; // 0x2e0
	float MotorDownAnimTime; // 0x2e4
	float BlendStaggerAnimTime; // 0x2e8
	float StaggerSpeedAdj; // 0x2ec
	float StaggerVel; // 0x2f0
	FVector MoveDir; // 0x2f4
	float AngularHipDriveScale; // 0x300
	float StaggerMuscleScale; // 0x304
	ObjectProperty BlendNode; // 0x308
	ObjectProperty GetUpNode; // 0x310
	ObjectProperty RunNode; // 0x318
	ObjectProperty HipBody; // 0x320
};

struct UPlayer : UObject {
	FPointer VfTable_FExec; // 0x60
	ObjectProperty Actor; // 0x68
	int32_t CurrentNetSpeed; // 0x70
	int32_t ConfiguredInternetSpeed; // 0x74
	int32_t ConfiguredLanSpeed; // 0x78
	float PP_DesaturationMultiplier; // 0x7c
	float PP_HighlightsMultiplier; // 0x80
	float PP_MidTonesMultiplier; // 0x84
	float PP_ShadowsMultiplier; // 0x88
};

struct UNavMeshGoal_Filter : UObject {
	char bShowDebug : 1; // 0x60
	int32_t NumNodesThrownOut; // 0x64
	int32_t NumNodesProcessed; // 0x68
};

struct UUIScene_UIFullScreenBattlePass : UUIScene {
	ObjectProperty m_InputBack; // 0x1cc
	ObjectProperty m_InputOk; // 0x1d4
	ObjectProperty m_pBack; // 0x1dc
	ObjectProperty m_pButton; // 0x1e4
	ObjectProperty m_pButtonKey; // 0x1ec
	TArray<int32_t> m_PreviewItemIds; // 0x1f4
	int32_t m_nCurrentPreviewIndex; // 0x204
	char m_bIsShown : 1; // 0x208
	char m_bCanPreviewItems : 1; // 0x208
};

struct UTgInventoryObject_Listen_Combo_Pip : UTgInventoryObject_Listen_Combo {
	TArray<ObjectProperty> m_Projectiles; // 0xcc
	TArray<FVector> m_SpawnLocations; // 0xdc
	TArray<ObjectProperty> m_MarkedTargetsFlask; // 0xec
	TArray<float> m_fMarkedTimesFlask; // 0xfc
};

struct UUIComponent_SummerEventHome : UUIComponent_Display {
	ObjectProperty m_pBundleLTI; // 0x124
	ObjectProperty m_pBonusLTI; // 0x12c
	ObjectProperty m_mcBundleTitle; // 0x134
	ObjectProperty m_mcButtonTitle; // 0x13c
	ObjectProperty m_pBundleItems; // 0x144
	ObjectProperty m_pPurchaseButton; // 0x14c
	ObjectProperty m_pPurchaseButtonCurr; // 0x154
	ObjectProperty m_pPurchaseButtonKey; // 0x15c
	ObjectProperty m_pPlayPanel; // 0x164
	ObjectProperty m_pItemPreviewStack; // 0x16c
	ObjectProperty m_pPurchaseAction; // 0x174
};

struct UUIData_Commendation : UUIData {
	int32_t m_nType; // 0x64
};

struct UCurveEdPresetCurve : UObject {
	FString CurveName; // 0x60
	TArray<FPresetGeneratedPoint> Points; // 0x70
};

struct UMaterial : UMaterialInterface {
	ObjectProperty PhysMaterial; // 0x254
	UPhysicalMaterial* PhysicalMaterial; // 0x25c
	ObjectProperty PhysMaterialMask; // 0x264
	int32_t PhysMaterialMaskUVChannel; // 0x26c
	ObjectProperty BlackPhysicalMaterial; // 0x270
	ObjectProperty WhitePhysicalMaterial; // 0x278
	FColorMaterialInput DiffuseColor; // 0x280
	FScalarMaterialInput DiffusePower; // 0x2bc
	FColorMaterialInput SpecularColor; // 0x2f8
	FScalarMaterialInput SpecularPower; // 0x334
	FVectorMaterialInput Normal; // 0x370
	FColorMaterialInput EmissiveColor; // 0x3b4
	FScalarMaterialInput Opacity; // 0x3f0
	FScalarMaterialInput OpacityMask; // 0x42c
	float OpacityMaskClipValue; // 0x468
	float ShadowDepthBias; // 0x46c
	FVector2MaterialInput Distortion; // 0x470
	EBlendMode BlendMode; // 0x4b0
	EMaterialLightingModel LightingModel; // 0x4b1
	EMaterialDepthModifier DepthModificationMode; // 0x4b2
	EMaterialTessellationMode D3D11TessellationMode; // 0x4b3
	FColorMaterialInput CustomLighting; // 0x4b4
	FColorMaterialInput CustomSkylightDiffuse; // 0x4f0
	FVectorMaterialInput AnisotropicDirection; // 0x52c
	FScalarMaterialInput TwoSidedLightingMask; // 0x570
	FColorMaterialInput TwoSidedLightingColor; // 0x5ac
	FVectorMaterialInput WorldPositionOffset; // 0x5e8
	FVectorMaterialInput WorldDisplacement; // 0x62c
	FScalarMaterialInput TessellationMultiplier; // 0x670
	FColorMaterialInput SubsurfaceInscatteringColor; // 0x6ac
	FColorMaterialInput SubsurfaceAbsorptionColor; // 0x6e8
	FScalarMaterialInput SubsurfaceScatteringRadius; // 0x724
	FVectorMaterialInput CustomPixelShaderVector; // 0x760
	FScalarMaterialInput PixelDepthModifier; // 0x7a4
	char EnableSubsurfaceScattering : 1; // 0x7e0
	char EnableSeparateTranslucency : 1; // 0x7e0
	char bEnableMaskedAntialiasing : 1; // 0x7e0
	char TwoSided : 1; // 0x7e0
	char TwoSidedFlipsNormals : 1; // 0x7e0
	char TwoSidedSeparatePass : 1; // 0x7e0
	char bDisableDepthTest : 1; // 0x7e0
	char bSceneTextureRenderBehindTranslucency : 1; // 0x7e0
	char bAllowFog : 0; // 0x7e0
	char bTranslucencyReceiveDominantShadowsFromStatic : 0; // 0x7e0
	char bTranslucencyInheritDominantShadowsFromOpaque : 0; // 0x7e0
	char bAllowTranslucencyDoF : 0; // 0x7e0
	char bUseOneLayerDistortion : 0; // 0x7e0
	char bUseLitTranslucencyDepthPass : 0; // 0x7e0
	char bUseLitTranslucencyPostRenderDepthPass : 0; // 0x7e0
	char bCastLitTranslucencyShadowAsMasked : 0; // 0x7e0
	char bUsedAsLightFunction : 0; // 0x7e0
	char bUsedWithFogVolumes : 0; // 0x7e0
	char bUsedAsSpecialEngineMaterial : 0; // 0x7e0
	char bUsedWithSkeletalMesh : 0; // 0x7e0
	char bUsedWithTerrain : 0; // 0x7e0
	char bUsedWithLandscape : 0; // 0x7e0
	char bUsedWithMobileLandscape : 0; // 0x7e0
	char bUsedWithFracturedMeshes : 0; // 0x7e0
	char bUsedWithParticleSystem : 0; // 0x7e0
	char bUsedWithParticleSprites : 0; // 0x7e0
	char bUsedWithBeamTrails : 0; // 0x7e0
	char bUsedWithParticleSubUV : 0; // 0x7e0
	char bUsedWithSpeedTree : 0; // 0x7e0
	char bUsedWithStaticLighting : 0; // 0x7e0
	char bUsedWithLensFlare : 0; // 0x7e0
	char bUsedWithGammaCorrection : 0; // 0x7e0
	char bUsedWithInstancedMeshParticles : 1; // 0x7e4
	char bUsedWithFluidSurfaces : 1; // 0x7e4
	char bUsedWithDecals : 1; // 0x7e4
	char bUsedWithMaterialEffect : 1; // 0x7e4
	char bUsedWithMorphTargets : 1; // 0x7e4
	char bUsedWithRadialBlur : 1; // 0x7e4
	char bUsedWithInstancedMeshes : 1; // 0x7e4
	char bUsedWithSplineMeshes : 1; // 0x7e4
	char bUsedWithAPEXMeshes : 0; // 0x7e4
	char bUsedWithScreenDoorFade : 0; // 0x7e4
	char bEnableCrackFreeDisplacement : 0; // 0x7e4
	char bTessellationFrustumCulling : 0; // 0x7e4
	char bTessellationBackfaceCulling : 0; // 0x7e4
	char bUseImageBasedReflections : 0; // 0x7e4
	char Wireframe : 0; // 0x7e4
	char bPerPixelCameraVector : 0; // 0x7e4
	char bAllowLightmapSpecular : 0; // 0x7e4
	char bOverrideLowQualitySpecular : 0; // 0x7e4
	char bCleanupUnusedTextures : 0; // 0x7e4
	char bIsFallbackMaterial : 0; // 0x7e4
	char bUsesDistortion : 0; // 0x7e4
	char bIsMasked : 0; // 0x7e4
	char bIsPreviewMaterial : 0; // 0x7e4
	float ImageReflectionNormalDampening; // 0x7e8
	ObjectProperty CookedShaderCache; // 0x7ec
	FPointer MaterialResources[0x3]; // 0x7f4
	FPointer DefaultMaterialInstances[0x3]; // 0x80c
	int32_t EditorX; // 0x824
	int32_t EditorY; // 0x828
	int32_t EditorPitch; // 0x82c
	int32_t EditorYaw; // 0x830
	TArray<ObjectProperty> Expressions; // 0x834
	TArray<FMaterialFunctionInfo> MaterialFunctionInfos; // 0x844
	TMap<None, None> EditorParameters; // 0x854
	TArray<ObjectProperty> ReferencedTextures; // 0x89c
};

struct UTgSkelCon_CCD_IK_FootPlacement : USkelControlBase {
	int32_t NumBones; // 0xd0
	int32_t MaxPerBoneIterations; // 0xd4
	int32_t IterationsCount; // 0xd8
	float Precision; // 0xdc
	char bStartFromTail : 1; // 0xe0
	char bNoTurnOptimization : 1; // 0xe0
	char bAllowStretching : 1; // 0xe0
	char bInvertFootUpAxis : 1; // 0xe0
	char bOrientFootToGround : 1; // 0xe0
	char bOnlyEnableForUpAdjustment : 1; // 0xe0
	char m_bUseCachedFootOffset : 1; // 0xe0
	TArray<FJointConstraintInformation> JointConstraints; // 0xe4
	float MaxAngleSteps; // 0xf4
	float MaxStretchSteps; // 0xf8
	float FootOffset; // 0xfc
	EAxis FootUpAxis; // 0x100
	FRotator FootRotOffset; // 0x104
	float MaxUpAdjustment; // 0x110
	float MaxDownAdjustment; // 0x114
	float MaxFootOrientAdjust; // 0x118
	FVector EffectorLocation; // 0x11c
	FVector m_vCachedFootOffset; // 0x128
};

struct UUIComponent_EventVault : UUIComponent_Display {
	Fdword m_dwVaultVendor; // 0x124
	Fdword m_dwRequiredBundlesVendor; // 0x128
	int32_t m_nSelectedIndex; // 0x12c
	char m_bUseFixedCamDisance : 1; // 0x130
	char m_bPlayEmoteIfSkinOwned : 1; // 0x130
	ObjectProperty m_pPreviewLTI; // 0x134
	TMap<None, None> m_CardArt; // 0x13c
	TArray<ObjectProperty> m_pVaultItems; // 0x184
	ObjectProperty m_mcNameTF; // 0x194
	ObjectProperty m_mcDescTF; // 0x19c
	ObjectProperty m_mcUnlockTF; // 0x1a4
	ObjectProperty m_pRequiredBundles; // 0x1ac
	ObjectProperty m_pPurchaseButton; // 0x1b4
	ObjectProperty m_pPrevArrow; // 0x1bc
	ObjectProperty m_pNextArrow; // 0x1c4
	ObjectProperty m_pPurchaseAction; // 0x1cc
	ObjectProperty m_pCardArtMesh; // 0x1d4
	ObjectProperty m_CardArtMaterial; // 0x1dc
	ObjectProperty m_CardArtManifestGroup; // 0x1e4
};

struct UTgInventoryObject_Listen_PoisonBolts : UTgInventoryObject_Listen_AbilityProcBase {
	TArray<FPoisonBoltInfo> m_PoisonBoltTargets; // 0xcc
	int32_t m_EffectGroupID; // 0xdc
};

struct ATgDevice_SevenMaskedFear : ATgDevice_HitPulse {
	float m_fTimeFocusedOnIncrement; // 0xa0c
	float m_fTimeFocusedOnThreshold; // 0xa10
	TArray<FFearTarget> m_TrackedFearedTargets; // 0xa14
};

struct UUIScene_UIHudStrix : UUIScene {
	ObjectProperty m_mcScope; // 0x1cc
	ObjectProperty m_mcOuterScope; // 0x1d4
	char m_bViewTargetOwl : 1; // 0x1dc
	char m_bHudVisible : 1; // 0x1dc
	float m_fColorTransitionAmt; // 0x1e0
	float m_fColorTransitionPerSec; // 0x1e4
	FLinearColor m_ColorTransitionMultiplier; // 0x1e8
	FLinearColor m_ColorTransitionAdditive; // 0x1f8
	int32_t m_nScopeColorTransitionCBHandle; // 0x208
};

struct UTcpNetDriver : UNetDriver {
	char AllowPlayerPortUnreach : 1; // 0x208
	char LogPortUnreach : 1; // 0x20c
};

struct UTgSeqAct_TemporaryRemoveDevice : USequenceAction {
	int32_t m_nEquipPoint; // 0x108
};

struct UUIHudWaypoint : UTgGfxScene {
	float m_fClipSize; // 0x1ec
	float m_fPushTimer; // 0x1f0
	float m_fPulseDelay; // 0x1f4
	float m_fPulseTimer; // 0x1f8
	TArray<FWaypointObjective> m_Captures; // 0x1fc
	FWaypointObjective m_Escort; // 0x20c
	FWaypointObjective m_Attack; // 0x238
	FWaypointObjective m_Defend; // 0x264
	FWaypointObjective m_Beacon; // 0x290
	FWaypointObjective m_Projectile[0x4]; // 0x2bc
	FWaypointObjective m_KillCamYou; // 0x36c
	TArray<FWaypointObjective> m_DominationObjectives; // 0x398
	FVector m_SnappedWaypointOffset; // 0x3a8
};

struct UTgSkelCon_ClockworkSpinner : USkelControlSingleBone {
	float m_fInterpTime; // 0x100
	float m_fRemainingInterpTime; // 0x104
	float m_fPauseTime; // 0x108
	float m_fRemainingPauseTime; // 0x10c
	EAxis RotationAxis; // 0x110
	int32_t DeltaRotation; // 0x114
	float m_fInterpRotation; // 0x118
	char bLimitedRotation : 1; // 0x11c
	char bForward : 1; // 0x11c
	char m_bResetRotationOnZeroStrength : 1; // 0x11c
	float m_fRotationMin; // 0x120
	float m_fRotationMax; // 0x124
	float m_fResetInterpTime; // 0x128
	float m_fResetPauseTime; // 0x12c
	float m_fResetRotation; // 0x130
	float m_fRotatorMin; // 0x134
	float m_fRotatorMax; // 0x138
	float RotationsPerSecond; // 0x13c
	float ResetRotationsPerSecond; // 0x140
};

struct UTgInventoryObject_Listen_FirstShotDuringOrAfterStealth : UTgInvListener {
	char m_bWasStealthed : 1; // 0xc4
	float m_fLastStealthTime; // 0xc8
};

struct UUIData_Loadout : UUIData {
	FPointer VfTable_IUIData_LoadoutInterface; // 0x64
	Fdword m_dwLoadoutId; // 0x6c
	FString m_sNewName; // 0x70
	char m_bPendingNameChange : 1; // 0x80
	char m_bItemsDirty : 1; // 0x80
	int32_t m_nCopyOfTemplate; // 0x84
	TArray<ObjectProperty> m_LoadoutItems; // 0x88
};

struct UAnimNotify_Sound : UAnimNotify {
	ObjectProperty SoundCue; // 0x68
	char bFollowActor : 1; // 0x70
	char bIgnoreIfMeshHidden : 1; // 0x70
	char bIgnoreIfActorHidden : 1; // 0x70
	FName BoneName; // 0x74
	float PercentToPlay; // 0x7c
	float VolumeMultiplier; // 0x80
	float PitchMultiplier; // 0x84
};

struct UTgDeviceForm_AzaanDash : UTgDeviceForm {
	TArray<ObjectProperty> m_AzaanNodes1p; // 0x28c
	int32_t m_nLastPosture; // 0x29c
	ObjectProperty m_Target; // 0x2a0
};

struct UParticleModuleAttractorSkelVertSurface : UParticleModuleAttractorBase {
	EVertSurfaceAttractorFalloffType FalloffType; // 0x68
	EAttractorSkelVertSurfaceDestination DestinationType; // 0x69
	char bParticleLifeRelative : 1; // 0x6c
	char bEnforceNormalCheck : 1; // 0x6c
	FRawDistributionFloat FalloffExponent; // 0x70
	FRawDistributionFloat Range; // 0x94
	FRawDistributionFloat Strength; // 0xb8
	FRawDistributionFloat CollisionRadius; // 0xdc
	FRawDistributionFloat DragCoefficient; // 0x100
	FRawDistributionFloat DragRadius; // 0x124
	FVector UniversalOffset; // 0x148
	FName SkelMeshActorParamName; // 0x154
	TArray<FName> ValidAssociatedBones; // 0x15c
	FVector NormalToCompare; // 0x16c
	float NormalCheckToleranceDegrees; // 0x178
	float NormalCheckTolerance; // 0x17c
	TArray<int32_t> ValidMaterialIndices; // 0x180
};

struct AApexDestructibleActor : AActor {
	ComponentProperty LightEnvironment; // 0x280
	char bFractureMaterialOverride : 1; // 0x288
	char bPlaySingleFractureMaterialEffect : 1; // 0x288
	TArray<ObjectProperty> FractureMaterials; // 0x28c
	ComponentProperty StaticDestructibleComponent; // 0x29c
	int32_t LOD; // 0x2a4
	TArray<char> VisibilityFactors; // 0x2a8
	TArray<ObjectProperty> FractureSounds; // 0x2b8
	TArray<ObjectProperty> FractureParticleEffects; // 0x2c8
};

struct ATgGame_Paladins_Flagball : ATgGame_Paladins {
	float m_fSetupDuration; // 0x868
	float m_fRoundResetDuration; // 0x86c
	ObjectProperty m_SpawnPoint; // 0x870
	char m_bFlagballActive : 1; // 0x878
	char m_bPlayOfTheGameOnFinalScore : 1; // 0x878
	char m_bPlayedOneMinuteLeftSwitch : 1; // 0x878
	char m_bAnnouncerPlayBallPlayed : 1; // 0x878
	char m_bAnnouncerPlayedMatchPointTF1 : 1; // 0x878
	char m_bAnnouncerPlayedMatchPointTF2 : 1; // 0x878
	int32_t m_nFlagballDeviceID; // 0x87c
	TG_EQUIP_POINT m_eFlagballEquipSlot; // 0x880
	EFlagballLeadState m_currentLeadState; // 0x881
	EFlagballPossessionState m_currentPossessionState; // 0x882
	float m_fCleanUpFailSafeTimer; // 0x884
	float m_fCleanUpFailSafeRate; // 0x888
};

struct UTgAnimBlendInterpBySpeed : UAnimNodeBlend {
	ObjectProperty m_TgPawn; // 0x124
	float m_fBlendTime; // 0x12c
	float m_fFullRunSpeed; // 0x130
	float m_fFullIdleSpeed; // 0x134
};

struct UUISettings : UTgGfxScene {
	ObjectProperty m_ChampionDropdown; // 0x1ec
	int32_t m_eType; // 0x1f4
	int32_t m_nHighlightOption; // 0x1f8
	int32_t m_nOptionCount; // 0x1fc
	int32_t m_nScrollIndex; // 0x200
	char m_bOptionFocus : 1; // 0x204
	char m_bKeybindFocus : 1; // 0x204
	char m_bSettingsChanged : 1; // 0x204
	char m_bIsInResetPrompt : 1; // 0x204
	char m_bUseVSync : 1; // 0x204
	char m_bUseD3D11 : 1; // 0x204
	float m_fDelayTimer; // 0x208
	ObjectProperty m_Title; // 0x20c
	ObjectProperty m_Frame; // 0x214
	ObjectProperty m_Reset; // 0x21c
	ObjectProperty m_Blocker; // 0x224
	ObjectProperty m_KeybindPopup; // 0x22c
	ObjectProperty m_KeybindPopupTF; // 0x234
	ObjectProperty m_KeybindCancel; // 0x23c
	FSettingOption m_Option[0xc]; // 0x244
	FKeybindOption m_Keybind[0xc]; // 0x664
	ObjectProperty m_AcceptButton; // 0x964
	ObjectProperty m_mcScrollbar; // 0x96c
	ObjectProperty m_grOptions; // 0x974
	ObjectProperty m_grKeybinds; // 0x97c
	ObjectProperty m_grTeams; // 0x984
	ObjectProperty m_mcGamepad; // 0x98c
	ObjectProperty m_mcGamepadButtons; // 0x994
	ObjectProperty m_mcGamepadImage; // 0x99c
	ObjectProperty m_Spectator; // 0x9a4
	ObjectProperty m_mcSpectatorTeamNameBlue; // 0x9ac
	ObjectProperty m_mcSpectatorTeamNameRed; // 0x9b4
	ObjectProperty m_mcSafeFrame; // 0x9bc
	ObjectProperty m_ResetToDefaultAction; // 0x9c4
	TArray<int32_t> m_DelayedUpdates; // 0x9cc
	TArray<int32_t> m_VideoTypes; // 0x9dc
	TArray<int32_t> m_HudTypes; // 0x9ec
	TArray<int32_t> m_AudioTypes; // 0x9fc
	TArray<int32_t> m_ControlTypes; // 0xa0c
	TArray<int32_t> m_SpectatorTypes; // 0xa1c
};

struct UUIData_StringWithCount : UUIData_String {
	int32_t m_nValue; // 0x74
};

struct UAnimNotify_ForceField : UAnimNotify {
	ComponentProperty ForceFieldComponent; // 0x68
	char bAttach : 1; // 0x70
	FName SocketName; // 0x74
	FName BoneName; // 0x7c
};

struct UInterpGroupAI : UInterpGroup {
	FName StageMarkGroup; // 0x98
	char SnapToRootBoneLocationWhenFinished : 1; // 0xa0
	char bNoEncroachmentCheck : 1; // 0xa0
	char bDisableWorldCollision : 1; // 0xa0
	char bIgnoreLegacyHeightAdjust : 1; // 0xa0
	char bRecreatePreviewPawn : 1; // 0xa0
	char bRefreshStageMarkGroup : 1; // 0xa0
};

struct UParticleModuleUberRainSplashB : UParticleModuleUberBase {
	FRawDistributionFloat Lifetime; // 0x78
	FRawDistributionVector StartSize; // 0x9c
	FRawDistributionVector ColorOverLife; // 0xc0
	FRawDistributionFloat AlphaOverLife; // 0xe4
	FRawDistributionVector LifeMultiplier; // 0x108
	char MultiplyX : 1; // 0x12c
	char MultiplyY : 1; // 0x12c
	char MultiplyZ : 1; // 0x12c
	FRawDistributionFloat StartRotationRate; // 0x130
};

struct ANxGenericForceField : ANxForceField {
	FFG_ForceFieldCoordinates Coordinates; // 0x2d4
	FVector Constant; // 0x2d8
	FVector PositionMultiplierX; // 0x2e4
	FVector PositionMultiplierY; // 0x2f0
	FVector PositionMultiplierZ; // 0x2fc
	FVector PositionTarget; // 0x308
	FVector VelocityMultiplierX; // 0x314
	FVector VelocityMultiplierY; // 0x320
	FVector VelocityMultiplierZ; // 0x32c
	FVector VelocityTarget; // 0x338
	FVector Noise; // 0x344
	FVector FalloffLinear; // 0x350
	FVector FalloffQuadratic; // 0x35c
	float TorusRadius; // 0x368
	FPointer LinearKernel; // 0x36c
};

struct ATgTeamBlocker : ATgMeshAssembly {
	char m_bBlockFlagCarrier : 1; // 0x298
	char m_bBlockFriendlyFire : 1; // 0x298
};

struct UUIComponent_TeamPortraits : UUIComponent_Display {
	char m_bFriendly : 1; // 0x124
	int32_t m_nTaskForceId; // 0x128
	int32_t m_nPortraitToPlayerId[0x5]; // 0x12c
};

struct UDrawConeComponent : UPrimitiveComponent {
	FColor ConeColor; // 0x24c
	float ConeRadius; // 0x250
	float ConeAngle; // 0x254
	int32_t ConeSides; // 0x258
};

struct UTgInventoryObject_Listen_FirstShotDuringOrAfterMovementAbility : UTgInventoryObject_Listen_FirstShotAfterMovementAbility {
	char m_bMovementAbilityActive : 1; // 0xd4
};

struct UTgDeviceForm_CorrupterUlt : UTgDeviceForm {
	ObjectProperty m_CachedCorrupter; // 0x28c
	char m_bPoolActive : 1; // 0x294
	TArray<ObjectProperty> m_VoraAnimNodes; // 0x298
};

struct ATgDevice_InPursuit : ATgDevice {
	char m_bRecalculateTarget : 1; // 0xa04
	ObjectProperty m_CurrentMark; // 0xa08
	ObjectProperty m_PursuitTarget; // 0xa10
	ObjectProperty m_CachedInhand; // 0xa18
};

struct ATgProj_Tracer : ATgProjectile {
	ComponentProperty PSC; // 0x450
};

struct UUIData_EventEmoteButton : UUIData {
	ObjectProperty m_pEmoteItem; // 0x64
	ObjectProperty m_pQuestGoals; // 0x6c
};

struct UInterpTrackInstSkelControlStrength : UInterpTrackInst {
	char bSavedControlledByAnimMetaData : 1; // 0x60
};

struct UTgAnimBlendByPaladinsCharacter : UTgAnimNodeBlendList {
	ObjectProperty m_WeaponMeshActor; // 0x168
	TG_EQUIP_POINT m_SubNodeEquipSlot; // 0x170
	FChildAnimParameters m_ChildParams[0x11]; // 0x174
	TArray<EPalCharParams> m_nChildAnimStack; // 0x52c
	int32_t m_nCustomRetrieveIndex; // 0x53c
	char m_bBlendToIdleOnInterruptInspect : 1; // 0x540
};

struct UAnimNodeCrossfader : UAnimNodeBlend {
	FName DefaultAnimSeqName; // 0x124
	char bDontBlendOutOneShot : 1; // 0x12c
	float PendingBlendOutTimeOneShot; // 0x130
};

struct UUIComponent_HudScoreTDM : UUIComponent_Display {
	int32_t m_nTimeRemaining; // 0x124
	int32_t m_nMaxScore; // 0x128
	int32_t m_nScoreA; // 0x12c
	int32_t m_nScoreB; // 0x130
	char m_bFlashWhenUnderTenSeconds : 1; // 0x134
	char m_bOvertime : 1; // 0x134
	char m_bFriendlyTaskForceClose : 1; // 0x134
	char m_bEnemyTaskForceClose : 1; // 0x134
	char m_bForceTDMHUD : 1; // 0x134
	ObjectProperty m_mcTDMTitle; // 0x138
	ObjectProperty m_mcTDMTime; // 0x140
	ObjectProperty m_mcTDMSubtitle; // 0x148
	ObjectProperty m_mcTDMScoreA; // 0x150
	ObjectProperty m_mcTDMScoreAScore; // 0x158
	ObjectProperty m_mcTDMScoreAScoreTextAnim; // 0x160
	ObjectProperty m_mcTDMScoreAScoreTF; // 0x168
	ObjectProperty m_mcTDMScoreAScoreAnim; // 0x170
	ObjectProperty m_mcTDMScoreAProgress; // 0x178
	ObjectProperty m_mcTDMScoreAProgressAnim; // 0x180
	ObjectProperty m_mcTDMScoreAProgressAnimAnim; // 0x188
	ObjectProperty m_mcTDMScoreB; // 0x190
	ObjectProperty m_mcTDMScoreBScore; // 0x198
	ObjectProperty m_mcTDMScoreBScoreTextAnim; // 0x1a0
	ObjectProperty m_mcTDMScoreBScoreTF; // 0x1a8
	ObjectProperty m_mcTDMScoreBScoreAnim; // 0x1b0
	ObjectProperty m_mcTDMScoreBProgress; // 0x1b8
	ObjectProperty m_mcTDMScoreBProgressAnim; // 0x1c0
	ObjectProperty m_mcTDMScoreBProgressAnimAnim; // 0x1c8
	ObjectProperty m_mcOvertime; // 0x1d0
	ObjectProperty m_mcOvertimeTF; // 0x1d8
	ObjectProperty m_mcOvertimeBar; // 0x1e0
	ObjectProperty m_mcOvertimeFrame; // 0x1e8
	float m_fTDMScoreATextAnchorX; // 0x1f0
	float m_fTDMScoreBTextAnchorX; // 0x1f4
	int32_t m_nOvertimeStateAck; // 0x1f8
	float m_fOvertimeStart; // 0x1fc
	float m_fOvertimeDuration; // 0x200
	float m_fOvertimeFrequency; // 0x204
	int32_t m_nTaskForceAhead; // 0x208
	ObjectProperty m_MatchAlmostOverAkEvent; // 0x20c
};

struct UTgInvListener_ExplosiveImpalerArrow : UTgInventoryObject_Listen_ActiveWhileOffCooldown {
	FAimData m_AimData; // 0xc8
};

struct ATgDevice_LexInhand : ATgDevice {
	ObjectProperty m_CachedLexPawn; // 0xa04
	ObjectProperty m_CachedInPursuitDevice; // 0xa0c
	ObjectProperty m_CachedVengeanceDevice; // 0xa14
	char m_bShouldAutoFire : 1; // 0xa1c
	char r_bDeathHastensEquiped : 1; // 0xa1c
	float m_fQueueFireTime; // 0xa20
	float m_fQueueFireTimeThreshold; // 0xa24
};

struct UGamePadLightbarSubsystem : UObject {
	LightBarState CurrentLightBarState; // 0x60
	FLinearColor CurrentColor; // 0x64
	FLinearColor OriginalColor; // 0x74
	FLinearColor TargetColor; // 0x84
	float LerpTimeRemaining; // 0x94
	float TotalLerpTime; // 0x98
	FColor DefaultColor; // 0x9c
	TArray<FColorDefinition> ColorDefinitions; // 0xa0
	TArray<FLerpToInstruction> LerpToInstructions; // 0xb0
	TArray<FSetAndLerpInstruction> SetAndLerpInstructions; // 0xc0
	TArray<FPulseInstruction> PulseInstructions; // 0xd0
};

struct UAnimNodeSequence : UAnimNode {
	FName AnimSeqName; // 0xfc
	float Rate; // 0x104
	char bPlaying : 1; // 0x108
	char bLooping : 1; // 0x108
	char bCauseActorAnimEnd : 1; // 0x108
	char bCauseActorAnimPlay : 1; // 0x108
	char bCeaseRelevantOnAnimTreeReset : 1; // 0x108
	char bZeroRootRotation : 1; // 0x108
	char bZeroRootTranslation : 1; // 0x108
	char bDisableWarningWhenAnimNotFound : 1; // 0x108
	char bNoNotifies : 0; // 0x108
	char bForceRefposeWhenNotPlaying : 0; // 0x108
	char bIsIssuingNotifies : 0; // 0x108
	char bForceAlwaysSlave : 0; // 0x108
	char bSynchronize : 0; // 0x108
	char bReverseSync : 0; // 0x108
	char bShowTimeLineSlider : 0; // 0x108
	char bLoopCameraAnim : 0; // 0x108
	char bRandomizeCameraAnimLoopStartTime : 0; // 0x108
	char bCameraAnimRelativeToBase : 0; // 0x108
	char m_bIgnoreFootSkelControls : 0; // 0x108
	char m_bIgnoreBlendBySpeedScaling : 0; // 0x108
	char bDoNotResetIfPlaying : 0; // 0x108
	char bOnlyResetSynchGroupOnReplayAnim : 0; // 0x108
	char bEditorOnlyAddRefPoseToAdditiveAnimation : 0; // 0x108
	char bCheckForFinishAnimEarly : 0; // 0x108
	char bBlendingOut : 0; // 0x108
	float CurrentTime; // 0x10c
	float PreviousTime; // 0x110
	float EndTime; // 0x114
	ObjectProperty AnimSeq; // 0x118
	int32_t AnimLinkupIndex; // 0x120
	float NotifyWeightThreshold; // 0x124
	FName SynchGroupName; // 0x128
	float SynchPosOffset; // 0x130
	ObjectProperty CameraAnim; // 0x134
	ObjectProperty ActiveCameraAnimInstance; // 0x13c
	float CameraAnimScale; // 0x144
	float CameraAnimPlayRate; // 0x148
	float CameraAnimBlendInTime; // 0x14c
	float CameraAnimBlendOutTime; // 0x150
	ERootBoneAxis RootBoneOption[0x3]; // 0x154
	ERootRotationOption RootRotationOption[0x3]; // 0x157
	ObjectProperty DebugTrack; // 0x15c
	ObjectProperty DebugCarat; // 0x164
	TArray<ObjectProperty> DeferredNotifies; // 0x16c
	TArray<FDeferredAnimNotifyTickInformation> DeferredNotifyTicks; // 0x17c
	TArray<FDeferredAnimNotifyEndInformation> DeferredNotifyEnds; // 0x18c
	TArray<ObjectProperty> MetaDataSkelControlList; // 0x19c
};

struct ATgPawn_Lazarus : ATgPawn_Character {
	ObjectProperty m_pCrystalDeployable; // 0x3160
	ObjectProperty m_SelfResurrectionDevice; // 0x3168
	ObjectProperty m_AbsorptionFieldDevice; // 0x3170
	ObjectProperty m_ChargeBurstDevice; // 0x3178
	ObjectProperty m_ShatterfallDevice; // 0x3180
	ObjectProperty m_SeethingRageCard; // 0x3188
	ObjectProperty m_PlayingGodCard; // 0x3190
	ObjectProperty m_ItWaitsCard; // 0x3198
	ObjectProperty m_StoneStrengthCard; // 0x31a0
	ObjectProperty m_ItFollowsCard; // 0x31a8
	ObjectProperty m_CameraShake; // 0x31b0
	ObjectProperty m_CameraShakeOwner; // 0x31b8
	ObjectProperty m_InhandShake0; // 0x31c0
	ObjectProperty m_InhandShake1; // 0x31c8
	ObjectProperty m_UltimateShake; // 0x31d0
	ObjectProperty m_Killer; // 0x31d8
	char r_bShouldRez : 1; // 0x31e0
	char m_bUseShatterFallZoom : 1; // 0x31e0
	char m_bUsingDeathMesh : 1; // 0x31e0
	float r_fEnergy; // 0x31e4
	float r_fAccumulatedDamage; // 0x31e8
	ResurrectionState r_mCurrentState; // 0x31ec
	int32_t m_nChargeNumber; // 0x31f0
	float m_PreviousZHeight; // 0x31f4
	float m_GravityMultiplier; // 0x31f8
	float m_fItWaitsTimer; // 0x31fc
	float m_fItFollowsMovementSpeedMult; // 0x3200
	float m_fStrengthOfStoneDamageReduction; // 0x3204
	int32_t m_nDeathMeshAsmId; // 0x3208
	int32_t m_nQueuedFireDevice; // 0x320c
	TArray<FBloodStoneTarget> m_BloodStoneTargets; // 0x3210
};

struct UUIComponent_LexVengeance : UUIComponent_Display {
	ObjectProperty m_RouletteTarget; // 0x124
	ObjectProperty m_Target; // 0x12c
	ObjectProperty m_mcBounty; // 0x134
	ObjectProperty m_mcKillstreak; // 0x13c
	ObjectProperty m_mcKillstreakText; // 0x144
	ObjectProperty m_Lex; // 0x14c
	ObjectProperty m_pUIData; // 0x154
	ObjectProperty m_CachedTargetChampion; // 0x15c
	TArray<ObjectProperty> m_pInRangeEnemies; // 0x164
	float m_Timer; // 0x174
	float m_TimePerFrame; // 0x178
	float m_fOffsetX; // 0x17c
	char m_bRouletteSpinning : 1; // 0x180
	char m_bEnabled : 1; // 0x180
	int32_t m_nRouletteIndex; // 0x184
	int32_t m_nDisplayedKillstreak; // 0x188
	int32_t m_nDisplayedBounty; // 0x18c
	float m_fEmblemXPos; // 0x190
	ObjectProperty m_FlipbookSound; // 0x194
	ObjectProperty m_LockInSound; // 0x19c
	ObjectProperty m_SwooshSound; // 0x1a4
	ObjectProperty m_FrontlineComment; // 0x1ac
	ObjectProperty m_DamageComment; // 0x1b4
	ObjectProperty m_SupportComment; // 0x1bc
	ObjectProperty m_FlankComment; // 0x1c4
};

struct UUIComponent_CorvusMark : UUIComponent_Display {
	ObjectProperty m_mcFrame; // 0x124
	ObjectProperty m_mcIcon; // 0x12c
	ObjectProperty m_mcSecondIcon; // 0x134
	ObjectProperty m_Corvus; // 0x13c
	ObjectProperty m_pUIData; // 0x144
	ObjectProperty m_CachedMarkedChampions[0x2]; // 0x14c
	char m_bEnabled : 1; // 0x15c
	char m_bCleared : 1; // 0x15c
};

struct USoundNodeEnveloper : USoundNode {
	float LoopStart; // 0x74
	float LoopEnd; // 0x78
	float DurationAfterLoop; // 0x7c
	int32_t LoopCount; // 0x80
	char bLoopIndefinitely : 1; // 0x84
	char bLoop : 1; // 0x84
	ComponentProperty VolumeInterpCurve; // 0x88
	ComponentProperty PitchInterpCurve; // 0x90
};

struct UFont : UObject {
	TArray<FFontCharacter> Characters; // 0x60
	TArray<ObjectProperty> Textures; // 0x70
	TMap<None, None> CharRemap; // 0x80
	int32_t IsRemapped; // 0xc8
	float EmScale; // 0xcc
	float Ascent; // 0xd0
	float Descent; // 0xd4
	float Leading; // 0xd8
	int32_t Kerning; // 0xdc
	FFontImportOptionsData ImportOptions; // 0xe0
	int32_t NumCharacters; // 0x188
	TArray<int32_t> MaxCharHeight; // 0x18c
	float ScalingFactor; // 0x19c
};

struct USeqEvent_Used : USequenceEvent {
	char bAimToInteract : 1; // 0x128
	float InteractDistance; // 0x12c
	FString InteractText; // 0x130
	ObjectProperty InteractIcon; // 0x140
	TArray<AActor*> ClassProximityTypes; // 0x148
	TArray<AActor*> IgnoredClassProximityTypes; // 0x158
};

struct AAmbientSound : AKeypoint {
	char bAutoPlay : 1; // 0x288
	char bIsPlaying : 1; // 0x288
	ComponentProperty AudioComponent; // 0x28c
};

struct UTgSeqAct_ForceClientTutorialAction : USequenceAction {
	eForcedClientTutorialAction ForcedAction; // 0x108
	eTutorialForceableElements GameUIElement; // 0x109
};

struct UUIData_RealMoneyItem : UUIData_DLCItem {
	FString m_sProductName; // 0x74
	FString m_sProductSKU; // 0x84
	FString m_sConsoleDescription; // 0x94
	FString m_sIncludeTaxMessage; // 0xa4
	FString m_sProductImage; // 0xb4
	TArray<FString> m_sDisplayListPrice; // 0xc4
	TArray<FString> m_sDisplayPrice; // 0xd4
	TArray<FString> m_sCurrencyCode; // 0xe4
	TArray<FString> m_sSignedOffer; // 0xf4
	TArray<float> m_fListPrice; // 0x104
	TArray<float> m_fPrice; // 0x114
	char m_bPurchasable : 1; // 0x124
};

struct UUIData_Quest : UUIData {
	FQWord m_qwQuestId; // 0x64
	Fdword m_dwActivityId; // 0x6c
	Fdword m_dwPrevActivityId; // 0x70
	Fdword m_dwGroupingNumber; // 0x74
	Fdword m_eStatus; // 0x78
	FQWord m_dtReceivedDatetime; // 0x7c
	char m_bIsDirty : 1; // 0x84
	char m_bHasSeen : 1; // 0x84
	char m_bIsNew : 1; // 0x84
	char m_bCanAbandon : 1; // 0x84
	char m_bCompletionAck : 1; // 0x84
	char m_bGoalsInitialized : 1; // 0x84
	char m_bShowLastComplete : 1; // 0x84
	QuestType m_eQuestType; // 0x88
	TArray<ObjectProperty> m_Goals; // 0x8c
};

struct ATgWeaponMeshActor_GroverInhandAxe : ATgWeaponMeshActor {
	ObjectProperty StanceNode; // 0x450
};

struct ATgPawn_BombKing : ATgPawn_Character {
	float m_fBounceDampingVertMin; // 0x3160
	float m_fBounceDampingVertMax; // 0x3164
	float m_fBounceDampingHorizMin; // 0x3168
	float m_fBounceDampingHorizMax; // 0x316c
	char c_bRenderKingBombMesh : 1; // 0x3170
	char m_bForced3PDuringKingBomb : 1; // 0x3170
	int32_t c_nKingBombMeshID; // 0x3174
	FVector m_fKingBombCameraOffset; // 0x3178
	EWeaponMeshState r_weaponMeshState; // 0x3184
	int32_t m_nInhandID; // 0x3188
	int32_t m_nGrumpyBombID; // 0x318c
	int32_t m_nPoppyBombID; // 0x3190
	float r_fJoltKnockback; // 0x3194
	ATgDevice* m_InhandClass; // 0x3198
	ATgDevice* m_GrumpyBombClass; // 0x31a0
	ATgDevice* m_PoppyBombClass; // 0x31a8
};

struct UTgSeqAct_SetUltimateEnergy : USequenceAction {
	float fChargePercent; // 0x108
};

struct ATgDevice_Wormhole : ATgDevice {
	FVector m_vPreviousLocation; // 0xa04
	ObjectProperty m_CachedBlink; // 0xa10
	ObjectProperty m_WormholeAimForwarderMod; // 0xa18
	char m_bWormholeEnabled : 1; // 0xa20
	char m_bWormholeEndedDuringBlink : 1; // 0xa20
};

struct UTgAIBehaviorAction_SelectLaneMoveTargetAsCombatTarget : UTgAIBehaviorAction {
	char bSkipPawnNotify : 1; // 0x94
};

struct UUIComponent_PurchaseOption : UUIComponent_Display {
	ObjectProperty m_mcOption; // 0x124
	ObjectProperty m_mcSkinBoost; // 0x12c
	ObjectProperty m_pButton; // 0x134
	ObjectProperty m_mcControllerCost; // 0x13c
	ObjectProperty m_mcControllerCurrencyIcon; // 0x144
	ObjectProperty m_mcControllerButton; // 0x14c
	ObjectProperty m_mcPreviousCost; // 0x154
	ObjectProperty m_mcPreviousCostStrikethrough; // 0x15c
	ObjectProperty m_mcPreviousCostCurrencyIcon; // 0x164
	int32_t m_nPurchaseQuantity; // 0x16c
};

struct UTgAnimNotify_AudioGroup : UAnimNotify {
	ObjectProperty c_PreviewSound; // 0x68
	FName c_SoundCueName; // 0x70
	TG_MESH_SOURCE c_eMeshSource; // 0x78
};

struct UParticleModuleCameraOffset : UParticleModuleCameraBase {
	FRawDistributionFloat CameraOffset; // 0x68
	char bSpawnTimeOnly : 1; // 0x8c
	EParticleCameraOffsetUpdateMethod UpdateMethod; // 0x90
};

struct UTgAkAudioManagement : UObject {
	FAkMeterCallbackState m_MeterCallbackSlots[0x10]; // 0x60
	TArray<Fdword> dwAllBusses; // 0x160
	char m_bInitialized : 1; // 0x170
};

struct ATgTeleportPlayerVolume : AVolume {
	TgTeleportVolumeType TeleportLocation; // 0x2bc
	int32_t nMessageId; // 0x2c0
	char bTeleportBots : 1; // 0x2c4
	char bTeleportPlayers : 1; // 0x2c4
};

struct ATgDevice_Drag : ATgDevice {
	ObjectProperty m_PullTarget; // 0xa04
	FRotator m_TargetInitialRotation; // 0xa0c
	float m_fPullStartTime; // 0xa18
	ObjectProperty m_StunnedTarget; // 0xa1c
	ObjectProperty r_ClientPullTarget; // 0xa24
	float m_fTruePostfireTime; // 0xa2c
	float m_fPullVelocityBreakFactor; // 0xa30
	float m_fPullVerticalEndOffset; // 0xa34
	float m_fMaxPullTime; // 0xa38
	float m_fPrePullTime; // 0xa3c
	float m_fPullEndOffset; // 0xa40
	float m_fPullSpeed; // 0xa44
	float m_fPullEndStunDuration; // 0xa48
	char m_bCanStillPull : 1; // 0xa4c
	char m_bNeedsDelayedServerEndPull : 1; // 0xa4c
	char m_bNeedsDelayedClientEndPull : 1; // 0xa4c
	char m_bHasPulledOnce : 1; // 0xa4c
	char m_bPullMissed : 1; // 0xa4c
	FVector m_vEndLocation; // 0xa50
	ObjectProperty m_CachedPawnOwner; // 0xa5c
};

struct UImageReflectionShadowPlaneComponent : UPrimitiveComponent {
	char bEnabled : 1; // 0x24c
	FPlane ReflectionPlane; // 0x250
};

struct UUIComponent_ItemObtainabilityBanner : UUIComponent_Display {
	SimplifiedItemObtainabilityValue m_eObtainability; // 0x124
	char m_bForceHide : 1; // 0x128
	ObjectProperty m_mcTF; // 0x12c
};

struct UUIComponent_OptionEntryPaged : UUIComponent_OptionEntryBase {
	TArray<FPagedEntry> m_Entries; // 0x150
	int32_t m_nSelectedIndex; // 0x160
	ObjectProperty m_pLeftArrow; // 0x164
	ObjectProperty m_pRightArrow; // 0x16c
	ObjectProperty m_mcValueTF; // 0x174
};

struct UTgControlModule_Koga : UTgControlModule_ThirdPerson {
	ObjectProperty m_CachedKogaPawn; // 0xcc
};

struct USeqAct_SetVector : USeqAct_SetSequenceVariable {
	FVector DefaultValue; // 0x108
};

struct UMaterialExpressionStaticBool : UMaterialExpression {
	char Value : 1; // 0xb0
};

struct UTgAIBehaviorCondition_HasConsumable : UTgAIBehaviorCondition {
	EConsumableType ConsumableType; // 0x98
};

struct UUIComponent_StoreFilterToggle : UUIComponent_Interactable {
	char m_bActive : 1; // 0x140
	ObjectProperty m_mcTitle; // 0x144
	ObjectProperty m_mcToggle; // 0x14c
};

struct UParticleModuleMeshRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionVector StartRotationRate; // 0x68
};

struct USkelControlTrail : USkelControlBase {
	int32_t ChainLength; // 0xd0
	EAxis ChainBoneAxis; // 0xd4
	char bInvertChainBoneAxis : 1; // 0xd8
	char bLimitStretch : 1; // 0xd8
	char bActorSpaceFakeVel : 1; // 0xd8
	char bHadValidStrength : 1; // 0xd8
	float TrailRelaxation; // 0xdc
	float StretchLimit; // 0xe0
	FVector FakeVelocity; // 0xe4
	float ThisTimstep; // 0xf0
	TArray<FVector> TrailBoneLocations; // 0xf4
	FMatrix OldLocalToWorld; // 0x110
};

struct UTgAnimBlendByBuffMonsterIntro : UTgAnimNodeBlendList {
	char m_bScalePlayRateOfSpawnAndIntro : 1; // 0x168
	char m_bEndIntroStateEarly : 1; // 0x168
	char m_bIntroHasBeenSetup : 1; // 0x168
	float m_fIntroTimeHittableAt; // 0x16c
	float m_fTimeToStartIntroAnim; // 0x170
	ObjectProperty m_CachedPawn; // 0x174
	float m_fSpawnIntroScaleRate; // 0x17c
};

struct ATgDevice_FuriaRMB : ATgDevice {
	ObjectProperty m_Furia; // 0xa04
	FImpactInfo m_CachedImpact; // 0xa0c
};

struct UUIComponent_MatchLobbyChampion : UUIComponent_Display {
	ObjectProperty m_pButton; // 0x124
	ObjectProperty m_mcIcon; // 0x12c
	ObjectProperty m_mcFrame; // 0x134
	ObjectProperty m_mcRented; // 0x13c
	ObjectProperty m_mcRotation; // 0x144
	ObjectProperty m_mcRecommended; // 0x14c
	ObjectProperty m_mcClassIcon; // 0x154
	UICMLCState m_eCurrentDisplayState; // 0x15c
	int32_t m_nRowNum; // 0x160
	int32_t m_nChampionOwnershipCBHandle; // 0x164
};

struct ATgDevice_Charge : ATgDevice {
	EChargeState m_eChargeState; // 0xa04
	ChargeStopOnHitType m_bStopOnHitType; // 0xa05
	ChargeFiringType m_ChargeTimingType; // 0xa06
	char m_bUsePhysFlying : 1; // 0xa08
	char m_bUseReticleTargetAim : 1; // 0xa08
	char m_bUseDamageRadiusForHitProxy : 1; // 0xa08
	char m_bIgnoreHumanoids : 1; // 0xa08
	char m_bHitOnce : 1; // 0xa08
	char m_bApplyHitOnTouch : 1; // 0xa08
	char m_bApplyHitSpecialOnTouch : 1; // 0xa08
	char m_bCharging : 1; // 0xa08
	char m_bInterruptDeviceIfChargeEnds : 0; // 0xa08
	char m_bUseDirectHitSpecial : 0; // 0xa08
	char m_bChargeBackward : 0; // 0xa08
	char m_bCanLeftClickCancel : 0; // 0xa08
	char m_bIgnoreMovementCorrection : 0; // 0xa08
	char m_bAimTowardsAcceleration : 0; // 0xa08
	char m_bAimUpIfAccelZero : 0; // 0xa08
	char m_bPostChargeUseWalkSpeed : 0; // 0xa08
	char m_bChargeRespectsMoveSpeedMultipliers : 0; // 0xa08
	char s_bHasQueuedChargeDir : 0; // 0xa08
	char s_bForcingStartCharge : 0; // 0xa08
	char m_bEndChargeImmediately : 0; // 0xa08
	char m_bHasQueuedCharge : 0; // 0xa08
	ObjectProperty m_HitProxy; // 0xa0c
	FVector m_vHitProxyRelativeLocation; // 0xa14
	FVector m_vHitProxySizeOffset; // 0xa20
	float s_fServerValidationSizeMultiplier; // 0xa2c
	float m_fPostChargeVelocityMult; // 0xa30
	float m_fPostChargeVelocityCap; // 0xa34
	float m_fWaitForClientStartChargeAimTime; // 0xa38
	FRotator s_rQueuedChargeDir; // 0xa3c
	float m_fChargeQueueTime; // 0xa48
	FRotator m_rLastChargeDirection; // 0xa4c
	TArray<ObjectProperty> s_AppliedList; // 0xa58
	TArray<FTimestampedActor> s_HitActors; // 0xa68
};

struct ULandscapeMaterialInstanceConstant : UMaterialInstanceConstant {
	char bIsLayerThumbnail : 1; // 0x344
	int32_t DataWeightmapIndex; // 0x348
	int32_t DataWeightmapSize; // 0x34c
};

struct UTgAnimNodeBlendByVerticalAim : UAnimNodeBlendBase {
	float m_Aim; // 0x114
	FVector2D m_Range; // 0x118
	float m_AngleOffset; // 0x120
	float m_PreviousAim; // 0x124
	char bInitialized : 1; // 0x128
	char m_bLoopChildrenOnRelevant : 1; // 0x128
	char m_bPlayChildrenOnRelevant : 1; // 0x128
	FName m_AnimName_Up; // 0x12c
	FName m_AnimName_Center; // 0x134
	FName m_AnimName_Down; // 0x13c
	ObjectProperty m_SeqNode1; // 0x144
	ObjectProperty m_SeqNode2; // 0x14c
};

struct ATgDevice_FuriaInhand : ATgDevice {
	ObjectProperty m_Furia; // 0xa04
	float s_fCurrentAttackSpeedTier; // 0xa0c
	float s_fHolyWrathDecayStartTime; // 0xa10
};

struct UTgAnimNodeSequenceByBoneRotation : UAnimNodeSequence {
	FName BoneName; // 0x1ac
	EAxis BoneAxis; // 0x1b4
	TArray<FAnimByRotation> AnimList; // 0x1b8
};

struct UUIData_LeagueEOM : UUIData {
	ObjectProperty m_pLeague; // 0x64
	ObjectProperty m_pTier; // 0x6c
	int32_t m_nGameId; // 0x74
	int32_t m_nPointChange; // 0x78
	int32_t m_nCurrentPoints; // 0x7c
	int32_t m_nWins; // 0x80
	int32_t m_nLosses; // 0x84
	int32_t m_nMatchesPlayed; // 0x88
	ObjectProperty m_TierChange; // 0x8c
};

struct UUIComponent_MatchLobbyMap : UUIComponent_Display {
	ObjectProperty m_mcMapName; // 0x124
	ObjectProperty m_mcModeName; // 0x12c
	ObjectProperty m_mcMapIcon; // 0x134
};

struct UUIComponent_SummerEventOverview : UUIComponent_Display {
	ObjectProperty m_grOverview; // 0x124
};

struct AHavokCustomTraversalAnnotation : AActor {
	ObjectProperty m_Target; // 0x280
	EHavokTraversalType TraversalType; // 0x288
	float EdgeCost; // 0x28c
	FRotator SourceEdgeRotation; // 0x290
	FVector SourceEdgeTranslation; // 0x29c
	float fEdgeWidth; // 0x2a8
	char bForceParallelEdges : 1; // 0x2ac
	ObjectProperty m_Source; // 0x2b0
};

struct UTgAnimBlendByFall : UTgAnimNodeBlendList {
	EFallSource m_FallSource; // 0x168
	EBlendFallTypes FallState; // 0x169
	EPhysics m_PreviousTickPhysics; // 0x16a
	float LastFallingVelocity; // 0x16c
	ObjectProperty pOwner; // 0x170
	float m_fPrelandDistance; // 0x178
	char m_bDebugMeasureJumpUp : 1; // 0x17c
	char m_bDebugMeasureJumpDownToLand : 1; // 0x17c
	char m_bMeasuring : 1; // 0x17c
	char m_bUsesPreDown : 1; // 0x17c
	char m_bJumpOnly : 1; // 0x17c
	char m_bForceDownOnRelevantWhileFalling : 1; // 0x17c
	char m_bPlayDownStateWhileFlying : 1; // 0x17c
	FVector m_StartMeasureJump; // 0x180
	float m_fMeasureTime; // 0x18c
	float m_fLandingMovementPlayRate; // 0x190
	FName m_nmNameLandingSynchGroup; // 0x194
};

struct UCloudSaveSystem : UObject {
	TScriptInterface<Class> KeyValueStore; // 0x60
	TScriptInterface<Class> DataBlobStore; // 0x70
	TArray<FGetSaveDataCallbackStruct> OnGetSaveDataCallbacks; // 0x80
	TArray<FSetSaveDataCallbackStruct> OnSetSaveDataCallbacks; // 0x90
	DelegateProperty DeleteSaveDataCallback; // 0xa0
	int32_t ActiveSlotForDelete; // 0xb0
	TArray<FSaveSlotOperation> ActiveSaveSlotOperations; // 0xb4
	DelegateProperty __OnGetSaveDataCallback__Delegate; // 0xc4
	DelegateProperty __SaveSystemCallback__Delegate; // 0xd4
};

struct UInterpTrackInstVectorMaterialParam : UInterpTrackInst {
	TArray<FVectorMaterialParamMICData> MICInfos; // 0x60
	ObjectProperty InstancedTrack; // 0x70
};

struct USeqAct_AttachToEvent : USequenceAction {
	char bPreferController : 1; // 0x108
};

struct UTgSubtitledMessages : UObject {
	FQueuedSubtitle CurrentSubtitle; // 0x60
	TArray<FQueuedSubtitle> QueuedSubtitles; // 0x84
	ObjectProperty OwnerPC; // 0x94
	ComponentProperty PlayingSubtitleAC; // 0x9c
	char bFinishedSubtitle : 1; // 0xa4
	float SubtitleFailsafeTime; // 0xa8
};

struct UTgAIBehaviorCondition : UTgAIBehaviorNode {
	EBehaviorComparison ComparisonOperator; // 0x94
};

struct UTexture2DComposite : UTexture {
	TArray<FSourceTexture2DRegion> SourceRegions; // 0x100
	int32_t MaxTextureSize; // 0x110
	int32_t DestSizeX; // 0x114
	int32_t DestSizeY; // 0x118
};

struct UTgAnimBlendByMountSkin : UTgAnimNodeBlendList {
	TArray<FMountSkinChildInfo> m_SkinMap; // 0x168
};

struct ATgDevice_ToggleADS : ATgDevice_ToggleWithLockout {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa10
	char m_bDelayMoveSpeedPenalty : 1; // 0xa18
	char m_bIsZoomed : 1; // 0xa18
};

struct ATgDevice_AstroQ : ATgDevice {
	char m_bApplyCooldown : 1; // 0xa04
};

struct ATgDevice_OverGrowth : ATgDevice {
	ObjectProperty m_VineDevice; // 0xa04
};

struct ATgPawn_Koga : ATgPawn_Character {
	char m_bUseSecondWeapon : 1; // 0x3160
	char c_bUseSecondDeathAnim : 1; // 0x3160
	char c_bWallClimbExpected : 1; // 0x3160
	int32_t m_nAltInhandSlot; // 0x3164
	int32_t m_nAltAltfireSlot; // 0x3168
	float m_fStamina; // 0x316c
	float m_fMaxStamina; // 0x3170
	float m_fStaminaRegenLockout; // 0x3174
	float m_fSwapLockoutTime; // 0x3178
	float m_fStaminaRegenLockoutTime; // 0x317c
	float r_fRemoteStamina; // 0x3180
	float c_fOldRemoteStamina; // 0x3184
	ObjectProperty m_CachedNinjaF; // 0x3188
	ObjectProperty m_CachedNinjaSwap; // 0x3190
	ObjectProperty m_CachedWallClimb; // 0x3198
	ObjectProperty m_CachedDragonFangLeg; // 0x31a0
	FString m_sSkillIconOverride; // 0x31a8
};

struct USettings : UObject {
	TArray<FLocalizedStringSetting> LocalizedSettings; // 0x60
	TArray<FSettingsProperty> Properties; // 0x70
	TArray<FLocalizedStringSettingMetaData> LocalizedSettingsMappings; // 0x80
	TArray<FSettingsPropertyPropertyMetaData> PropertyMappings; // 0x90
};

struct UTgDeviceForm_LazarusInhand : UTgDeviceForm {
	TArray<FHitPawn> m_pHitPawnsList; // 0x28c
};

struct ATgDevice_AtlasRMBInhand : ATgDevice {
	ObjectProperty m_CachedInhand; // 0xa04
};

struct UTgInvListener_CooledMags : UTgInvListener {
	ObjectProperty m_CachedOwlPawn; // 0xc4
	ObjectProperty m_CachedSidearm; // 0xcc
	ObjectProperty m_CachedInhand; // 0xd4
	float m_fAmmoFillTime; // 0xdc
};

struct AGameCrowdInteractionPoint : AActor {
	char bIsEnabled : 1; // 0x280
	ComponentProperty CylinderComponent; // 0x284
};

struct UTgDeviceForm_AzaanUlt : UTgDeviceForm {
	TArray<ObjectProperty> m_AzaanUltNodes3p; // 0x28c
	TArray<ObjectProperty> m_AzaanUltNodes1p; // 0x29c
};

struct UTgAIBehaviorAction_MoveToLanePusher : UTgAIBehaviorAction_MoveToTarget {
	TG_EQUIP_POINT DeviceSlot; // 0x9c
};

struct UTgDeviceForm_Barrage : UTgDeviceForm {
	ObjectProperty m_CachedActiveOverlayController; // 0x28c
};

struct UTgDataHandler : UGFxObject {
	ObjectProperty m_MP; // 0x104
	TArray<ObjectProperty> m_DataChunkList; // 0x10c
};

struct UUIDataObject : UUIData {
	FPointer VfTable_ITgCallbackInterface; // 0x64
	ObjectProperty m_CallbackContainer; // 0x6c
};

struct ATgDevice_RaumUlt : ATgDevice_Charge {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa78
	ObjectProperty m_CachedRaum; // 0xa80
	char m_bLockoutDuringPostFire : 1; // 0xa88
	float m_fChargeDeviationMeanLifetime; // 0xa8c
	float m_fAccumulatedChargeDeviation; // 0xa90
	float m_fMaxTurnDegPerSec; // 0xa94
	float m_fMaxDirectionShiftDegrees; // 0xa98
	float m_fPerActorHitPeriod; // 0xa9c
};

struct UTgPawnMod_FxAudio_EDMStrix : UTgPawnMod_FxAudio {
	float m_fGlowMultBass; // 0xac
};

struct UUIComponent_AccountLinkIcon : UUIComponent_Display {
	ObjectProperty m_mcIconFacebook; // 0x124
	ObjectProperty m_mcIconTwitch; // 0x12c
};

struct ATgDevice_GrumpyBomb : ATgDevice {
	float m_fPostTargetingLockInDuration; // 0xa04
};

struct ATgProj_ExtraColliders : ATgProj_SpeedOverRange {
	ObjectProperty m_SecondaryCollisionProxies[0x2]; // 0x52c
	ComponentProperty m_SecondaryDebugProximityDistancePSC[0x2]; // 0x53c
	TArray<FTrackedCollision> m_TrackedCollisions; // 0x54c
};

struct UFogVolumeConstantDensityComponent : UFogVolumeDensityComponent {
	float Density; // 0xe0
};

struct UMaterialExpressionBumpOffset : UMaterialExpression {
	FExpressionInput Coordinate; // 0xb0
	FExpressionInput Height; // 0xe4
	FExpressionInput HeightRatioInput; // 0x118
	float HeightRatio; // 0x14c
	float ReferencePlane; // 0x150
};

struct UParticleLODLevel : UObject {
	int32_t Level; // 0x60
	char bEnabled : 1; // 0x64
	char ConvertedModules : 1; // 0x64
	ObjectProperty RequiredModule; // 0x68
	TArray<ObjectProperty> Modules; // 0x70
	ObjectProperty TypeDataModule; // 0x80
	ObjectProperty SpawnModule; // 0x88
	ObjectProperty EventGenerator; // 0x90
	TArray<ObjectProperty> SpawningModules; // 0x98
	TArray<ObjectProperty> SpawnModules; // 0xa8
	TArray<ObjectProperty> UpdateModules; // 0xb8
	TArray<ObjectProperty> OrbitModules; // 0xc8
	TArray<ObjectProperty> EventReceiverModules; // 0xd8
	int32_t PeakActiveParticles; // 0xe8
};

struct UUIData_PreviewItems : UUIData {
	TArray<int32_t> m_PreviewItemIds; // 0x64
};

struct UInputGroup : UObject {
	FPointer VfTable_ITgCallbackInterface; // 0x60
	int32_t m_nMinX; // 0x68
	int32_t m_nMinY; // 0x6c
	int32_t m_nSizeX; // 0x70
	int32_t m_nSizeY; // 0x74
	int32_t m_nFocusX; // 0x78
	int32_t m_nFocusY; // 0x7c
	int32_t m_nPrevFocusX; // 0x80
	int32_t m_nPrevFocusY; // 0x84
	char m_bLoopX : 1; // 0x88
	char m_bLoopY : 1; // 0x88
	char m_bCursorUpdateX : 1; // 0x88
	char m_bCursorUpdateY : 1; // 0x88
	char m_bCursorUpdateWidth : 1; // 0x88
	char m_bCursorUpdateHeight : 1; // 0x88
	char m_bAllowSelect : 1; // 0x88
	char m_bAllowNavigation : 1; // 0x88
	char m_bCallbacksRegistered : 0; // 0x88
	int32_t m_nDefaultXFocus; // 0x8c
	int32_t m_nDefaultYFocus; // 0x90
	ObjectProperty m_NavUp; // 0x94
	ObjectProperty m_NavDown; // 0x9c
	ObjectProperty m_NavLeft; // 0xa4
	ObjectProperty m_NavRight; // 0xac
	ObjectProperty m_Select; // 0xb4
	ObjectProperty m_InputContext; // 0xbc
	TArray<FUIGroupObject> m_Objects; // 0xc4
	ObjectProperty m_mcCursor; // 0xd4
	ObjectProperty m_CallbackContainer; // 0xdc
};

struct ATgDeploy_DarkConvergence : ATgDeploy_Bomb {
	TArray<FPullData> m_PullDataList; // 0x484
	ObjectProperty r_PulledTargets[0x5]; // 0x494
	FVector r_PulledTargetLocations[0x5]; // 0x4bc
	TArray<ObjectProperty> c_Beams; // 0x4f8
	float c_fHideBeamsTimer; // 0x508
	float s_fVerticalTargetLocationOffset; // 0x50c
};

struct UUIComponent_Accolade : UUIComponent_Display {
	ObjectProperty m_mcIcon; // 0x124
	ObjectProperty m_mcTitle; // 0x12c
	ObjectProperty m_mcValue; // 0x134
};

struct UTgAnimNodeFidget : UAnimNodeBlendList {
	float m_SelectedIdleTimeBeforeFidgeting; // 0x144
	float m_CurrentIdleTime; // 0x148
	float BlendToFidgetDuration; // 0x14c
	float BlendFromFidgetDuration; // 0x150
	EFidgetType FidgetType; // 0x154
	float MinimumIdleTimeBeforeFidgeting; // 0x158
	float MaximumIdleTimeBeforeFidgeting; // 0x15c
	char AllowIdleAnimToComplete : 1; // 0x160
	float ChanceToFidgetWhenIdleCompletes; // 0x164
};

struct UAnimNodeAimOffset : UAnimNodeBlendBase {
	FVector2D Aim; // 0x114
	FVector2D AngleOffset; // 0x11c
	char bForceAimDir : 1; // 0x124
	char bBakeFromAnimations : 1; // 0x124
	char bPassThroughWhenNotRendered : 1; // 0x124
	char bSynchronizeNodesInEditor : 1; // 0x124
	int32_t PassThroughAtOrAboveLOD; // 0x128
	EAnimAimDir ForcedAimDir; // 0x12c
	TArray<char> RequiredBones; // 0x130
	TArray<char> AimCpntIndexLUT; // 0x140
	ObjectProperty TemplateNode; // 0x150
	TArray<FAimOffsetProfile> Profiles; // 0x158
	int32_t CurrentProfileIndex; // 0x168
};

struct UTgAnimBlendBy1P3P : UTgAnimNodeBlendList {
	ObjectProperty m_TgPawn; // 0x168
};

struct UAnimNodeSequenceBlendBase : UAnimNodeSequence {
	TArray<FAnimBlendInfo> Anims; // 0x1ac
};

struct UTgAIBehaviorCondition_NumGodsInCapturePointRadius : UTgAIBehaviorCondition_DistanceBase {
	char bGodsMustBeEnemy : 1; // 0x9c
	int32_t GodThreshold; // 0xa0
};

struct UUIComponent_MatchLobbyChampionList : UUIComponent_Display {
	ObjectProperty m_mcPick; // 0x124
	ObjectProperty m_mcPickAnimA; // 0x12c
	ObjectProperty m_mcPickAnimB; // 0x134
	ObjectProperty m_mcDimmer; // 0x13c
	ObjectProperty m_ChampionList; // 0x144
	ObjectProperty m_RoleTabs; // 0x14c
	ObjectProperty m_TabLeft; // 0x154
	ObjectProperty m_TabRight; // 0x15c
	char m_bChampionsShown : 1; // 0x164
	char m_bChampionsEnabled : 1; // 0x164
};

struct UUIDataStore_InputAlias : UUIDataStore_StringBase {
	TArray<FUIDataStoreInputAlias> InputAliases; // 0x98
	TMap<None, None> InputAliasLookupMap; // 0xa8
};

struct UUIComponent_BoosterItemBenefits : UUIComponent_Display {
	int32_t m_nRowsSet; // 0x124
	ObjectProperty m_mcBenefitsTF[0xb]; // 0x128
};

struct UPhysicsAsset : UObject {
	TArray<ObjectProperty> BodySetup; // 0x60
	FMap_Mirror BodySetupIndexMap; // 0x70
	TArray<int32_t> BoundsBodies; // 0xb8
	TArray<ObjectProperty> ConstraintSetup; // 0xc8
	ObjectProperty DefaultInstance; // 0xd8
};

struct UKismetBookMark : UBookMark2D {
	FString BookMarkSequencePathName; // 0x6c
};

struct UParticleModuleTypeDataPhysX : UParticleModuleTypeDataBase {
	ObjectProperty PhysXParSys; // 0x68
	FPhysXEmitterVerticalLodProperties VerticalLod; // 0x70
};

struct UMcpServerTimeBase : UMcpServiceBase {
	FString McpServerTimeClassName; // 0x78
	DelegateProperty __OnQueryServerTimeComplete__Delegate; // 0x88
};

struct UUIDataLeaguePlayer : UUIData {
	ObjectProperty pPlayer; // 0x64
	ObjectProperty pLeague; // 0x6c
	ObjectProperty pTier; // 0x74
	ObjectProperty pHighestTier; // 0x7c
	int32_t nPointsEarned; // 0x84
	int32_t nPointsTrend; // 0x88
	Fdword dwRank; // 0x8c
	Fdword dwRankPrev; // 0x90
	Fdword dwWins; // 0x94
	Fdword dwLosses; // 0x98
	Fdword dwDodges; // 0x9c
	Fdword dwMatchesPlayedInTier; // 0xa0
	Fdword dwRegion; // 0xa4
	Fdword dwRecommendedTierId; // 0xa8
	Fdword dwTitleId; // 0xac
	FDateTimeWrapper dtLastPlayed; // 0xb0
};

struct UInterpTrackFade : UInterpTrackFloatBase {
	char bPersistFade : 1; // 0xb8
};

struct UBrushComponent : UPrimitiveComponent {
	ObjectProperty Brush; // 0x24c
	FKAggregateGeom BrushAggGeom; // 0x254
	FPointer BrushPhysDesc; // 0x2a0
	FKCachedConvexData_Mirror CachedPhysBrushData; // 0x2a8
	int32_t CachedPhysBrushDataVersion; // 0x2b8
	char bBlockComplexCollisionTrace : 1; // 0x2bc
};

struct UTgRewardCenterManager : UObject {
	ObjectProperty m_pMovie; // 0x60
	TArray<FGoalRewardItem> m_pReturningBonus; // 0x68
};

struct USplineComponent : UPrimitiveComponent {
	FInterpCurveVector SplineInfo; // 0x24c
	float SplineCurviness; // 0x260
	FColor SplineColor; // 0x264
	float SplineDrawRes; // 0x268
	float SplineArrowSize; // 0x26c
	char bSplineDisabled : 1; // 0x270
	FInterpCurveFloat SplineReparamTable; // 0x274
};

struct UTgInventoryObject_Listen_HealthPCT_In_Range : UTgInvListener {
	char m_bApplied : 1; // 0xc4
};

struct UActorFactoryEmitter : UActorFactory {
	ObjectProperty ParticleSystem; // 0x9c
};

struct UUIComponent_HeaderTabsRotating : UUIComponent_List {
	int32_t m_nMiddleIndex; // 0x260
	int32_t m_nSelectedIndex; // 0x264
	float m_fButtonSpace; // 0x268
	float m_fBumperSpaceLeft; // 0x26c
	float m_fBumperSpaceRight; // 0x270
	float m_fButtonStartX; // 0x274
	float m_fButtonEndX; // 0x278
	ObjectProperty m_mcTitleTF; // 0x27c
	ObjectProperty m_mcLogo; // 0x284
	ObjectProperty m_mcLogoFaded; // 0x28c
	ObjectProperty m_mcBackground; // 0x294
	ObjectProperty m_mcBackgroundMask; // 0x29c
	ObjectProperty m_mcButtonMask; // 0x2a4
	ObjectProperty m_mcSearching; // 0x2ac
	ObjectProperty m_mcSearchingMask; // 0x2b4
	ObjectProperty m_mcHeaderLeft; // 0x2bc
	ObjectProperty m_mcHeaderRight; // 0x2c4
	ObjectProperty m_pPips; // 0x2cc
	ObjectProperty m_pBumpers[0x2]; // 0x2d4
	ObjectProperty m_NavLeft; // 0x2e4
	ObjectProperty m_NavRight; // 0x2ec
};

struct UUIDataAcquisitionQueue : UUIData {
	TArray<ObjectProperty> m_Acquisitions; // 0x64
};

struct UUIComponent_CommendationReward : UUIComponent_Display {
	ObjectProperty m_pItemPreviewStack; // 0x124
	ObjectProperty m_mcLevelRequirement; // 0x12c
};

struct UUIComponent_StringWithCount : UUIComponent_Display {
	ObjectProperty m_mcCountTF; // 0x124
};

struct UParticleModuleLifetime_Seeded : UParticleModuleLifetime {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x8c
};

struct USeqAct_SetString : USeqAct_SetSequenceVariable {
	FString Target; // 0x108
	FString Value; // 0x118
};

struct UPartyBeacon : UObject {
	FPointer VfTable_FTickableObject; // 0x60
	int32_t PartyBeaconPort; // 0x68
	FPointer Socket; // 0x6c
	char bIsInTick : 1; // 0x74
	char bWantsDeferredDestroy : 1; // 0x74
	char bShouldTick : 1; // 0x74
	float HeartbeatTimeout; // 0x78
	float ElapsedHeartbeatTime; // 0x7c
	FName BeaconName; // 0x80
	DelegateProperty __OnDestroyComplete__Delegate; // 0x88
};

struct UUIHudPlayer : UUIHudPlayer_Base {
	ObjectProperty m_mcSkipDeathCamPrompt; // 0x32c
};

struct AReverbVolume : AVolume {
	float Priority; // 0x2bc
	char bEnabled : 1; // 0x2c0
	char m_bUseAudioAltitude : 1; // 0x2c0
	FReverbSettings Settings; // 0x2c4
	FInteriorSettings AmbientZoneSettings; // 0x2d4
	ObjectProperty NextLowerPriorityVolume; // 0x304
	FName AuxBusName; // 0x30c
	float SendLevel; // 0x314
	float m_fAudioAltitudeCeiling; // 0x318
	float m_fAudioAltitudeFloor; // 0x31c
};

struct UInteraction : UUIRoot {
	DelegateProperty __OnReceivedNativeInputKey__Delegate; // 0x70
	DelegateProperty __OnReceivedNativeInputAxis__Delegate; // 0x80
	DelegateProperty __OnReceivedNativeInputChar__Delegate; // 0x90
	DelegateProperty __OnInitialize__Delegate; // 0xa0
};

struct UMaterialFunction : UObject {
	FGuid StateId; // 0x60
	FString Description; // 0x70
	char bExposeToLibrary : 1; // 0x80
	char bReentrantFlag : 1; // 0x80
	TArray<FString> LibraryCategories; // 0x84
	TArray<ObjectProperty> FunctionExpressions; // 0x94
};

struct ATgDevice_GourdMod : ATgDevice {
	TArray<ObjectProperty> m_ImmuneTargets; // 0xa04
	TArray<float> m_ImmuneTimes; // 0xa14
};

struct UUIComponent_CompetitiveRankChange : UUIComponent_Display {
	ObjectProperty m_pButton; // 0x124
	ObjectProperty m_mcRankIcon; // 0x12c
	ObjectProperty m_mcRankName; // 0x134
};

struct UUIData_BattlePassLevel : UUIData {
	int32_t m_nLevel; // 0x64
	ObjectProperty m_pLTI; // 0x68
	char m_bUnlocked : 1; // 0x70
	char m_bPremium : 1; // 0x70
};

struct UUIHudScoreboard : UTgGfxScene {
	int32_t m_nFirstRowIconHeight; // 0x1ec
	int32_t m_nRowSpacing; // 0x1f0
	int32_t m_nTalentXOffset; // 0x1f4
	int32_t m_nPassiveXOffset; // 0x1f8
	int32_t m_nFirstItemXOffset; // 0x1fc
	int32_t m_nItemSpacing; // 0x200
	int32_t m_nBestStreak; // 0x204
	FScoreInfo m_RedScore[0x5]; // 0x208
	FScoreInfo m_BlueScore[0x5]; // 0xb7c
	ObjectProperty m_ItemTooltip; // 0x14f0
	ObjectProperty m_mcStats; // 0x14f8
	ObjectProperty m_mcTitle; // 0x1500
	ObjectProperty m_mcTitles; // 0x1508
	ObjectProperty m_mcMuteVoiceGamepadPrompt; // 0x1510
	ObjectProperty m_mcViewProfilePrompt; // 0x1518
	ObjectProperty m_mcHighlight; // 0x1520
	ObjectProperty m_mcStat[0x5]; // 0x1528
	ObjectProperty m_grPlayers; // 0x1550
	ObjectProperty m_grItems; // 0x1558
	ObjectProperty m_grCards; // 0x1560
	ObjectProperty m_mcTabs[0x2]; // 0x1568
	ObjectProperty m_mcTabKey[0x2]; // 0x1578
	ObjectProperty m_mcTabTitles[0x2]; // 0x1588
	ScoreboardTabs m_eCurrentTab; // 0x1598
	char m_bMuteStateDirty : 1; // 0x159c
};

struct ATgDevice_ChurchillTurret : ATgDevice {
	ObjectProperty m_CachedChurchill; // 0xa04
};

struct UUIHudKillFeed : UTgGfxScene {
	int32_t m_nMaxDisplayedKillEntries; // 0x1ec
	int32_t m_nDepth; // 0x1f0
	FString m_sKillEntryName; // 0x1f4
	FString m_sHHPickupEntryName; // 0x204
	char m_bDisableKillFeed : 1; // 0x214
	float m_fKillEntryUpwardAnimDistance; // 0x218
	TArray<FUIKILLFEED_DATA> m_Entries; // 0x21c
	TArray<FUIKILLFEED_DATA> m_EntryPool; // 0x22c
	ObjectProperty m_mcGuide; // 0x23c
};

struct USeqAct_ToggleInput : USeqAct_Toggle {
	char bToggleMovement : 1; // 0x108
	char bToggleTurning : 1; // 0x108
};

struct UUIScene_UIStoreDetail : UUIScene {
	int32_t m_nInventoryUpdateCallbackHandle; // 0x1cc
	ObjectProperty m_mcTitleTF; // 0x1d0
	ObjectProperty m_mcDescTF; // 0x1d8
	ObjectProperty m_mcDLCTexture; // 0x1e0
	ObjectProperty m_pItemPreview; // 0x1e8
	ObjectProperty m_pItemList; // 0x1f0
	ObjectProperty m_pPurchaseButton; // 0x1f8
	ObjectProperty m_pBack; // 0x200
	ObjectProperty m_pTextBox; // 0x208
	ObjectProperty m_pRotator; // 0x210
};

struct UParticleModuleMeshRotation : UParticleModuleRotationBase {
	FRawDistributionVector StartRotation; // 0x68
	char bInheritParent : 1; // 0x8c
};

struct USeqVar_Float : USequenceVariable {
	float FloatValue; // 0xa0
};

struct UHTTPDownload : UDownload {
	FString RedirectToURL; // 0x74
	char UseCompression : 1; // 0x84
	FString ProxyServerHost; // 0xaa4
	int32_t ProxyServerPort; // 0xab4
	char MaxRedirection : 1; // 0xab8
	float ConnectionTimeout; // 0xabc
};

struct UPBRuleNodeCycle : UPBRuleNodeBase {
	EProcBuildingAxis RepeatAxis; // 0x70
	float RepeatSize; // 0x74
	int32_t CycleSize; // 0x78
	char bFixRepeatSize : 1; // 0x7c
};

struct UTgAnimNodeBlendByZoomTransition : UTgAnimNodeBlendList {
	float m_fTransitionStartTime; // 0x168
};

struct UUIComponent_TitlesViewEntry : UUIComponent_Interactable {
	int32_t m_nTitleId; // 0x140
	ObjectProperty m_mcRarityText; // 0x144
	ObjectProperty m_mcColorBlock; // 0x14c
	ObjectProperty m_mcFade; // 0x154
	ObjectProperty m_mcTitle; // 0x15c
	ObjectProperty m_mcLockIcon; // 0x164
	ObjectProperty m_mcEquipped; // 0x16c
	ObjectProperty m_scEquip; // 0x174
	ObjectProperty m_scUnequip; // 0x17c
	ObjectProperty m_scNotOwned; // 0x184
};

struct UActorFactoryPhysicsAsset : UActorFactory {
	ObjectProperty PhysicsAsset; // 0x9c
	ObjectProperty SkeletalMesh; // 0xa4
	char bStartAwake : 1; // 0xac
	char bDamageAppliesImpulse : 1; // 0xac
	char bNotifyRigidBodyCollision : 1; // 0xac
	char bUseCompartment : 1; // 0xac
	char bCastDynamicShadow : 1; // 0xac
	FVector InitialVelocity; // 0xb0
	FVector DrawScale3D; // 0xbc
};

struct UTgSeqEvent_TutorialEvent : USequenceEvent {
	TUTORIAL_EVENT TutEvent; // 0x128
	int32_t EventData; // 0x12c
};

struct ATgDevice_ShadowUlt : ATgDevice_Charge {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa78
	ObjectProperty m_Shadow; // 0xa80
	char m_bHasHitTarget : 1; // 0xa88
	FVector m_vLastChargeStartLocation; // 0xa8c
	float m_fChargePercent; // 0xa98
	float m_fInitalEnergyCost; // 0xa9c
	FVector m_vCachedTargeterEndpoint; // 0xaa0
};

struct UTgAIBehaviorAction_LookAtCombatTarget : UTgAIBehaviorAction {
	char bAllowAimNose : 1; // 0x94
	char bHeadShot : 1; // 0x94
};

struct ATgDevice_DredgeF : ATgDevice {
	ObjectProperty r_Portals[0x2]; // 0xa04
	int32_t r_nNextDeployable; // 0xa14
	FVector s_vTeleportTarget; // 0xa18
	ObjectProperty m_CachedTgP; // 0xa24
};

struct UUIComponent_LevelProgress : UUIComponent_Display {
	ObjectProperty m_mcLevel; // 0x124
	ObjectProperty m_mcNextLevelXP; // 0x12c
	ObjectProperty m_mcTimePlayed; // 0x134
	ObjectProperty m_mcWins; // 0x13c
	ObjectProperty m_mcTotalXP; // 0x144
	ObjectProperty m_mcProgress; // 0x14c
};

struct UUIComponent_HomeGoToItem : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcSubtitle; // 0x12c
	ObjectProperty m_mcDescription; // 0x134
	ObjectProperty m_GoToItemButton; // 0x13c
	ObjectProperty m_pGamepadKey; // 0x144
	ObjectProperty m_pCurrentItem; // 0x14c
	ObjectProperty m_pCurrentLootTableItem; // 0x154
	int32_t m_nLocationId; // 0x15c
};

struct UUIData_RadialEquipMenu : UUIData {
	char m_bEmoteDisplay : 1; // 0x64
	TArray<ObjectProperty> m_SlotData; // 0x68
};

struct UUIComponent_MatchLobbyBansChampion : UUIComponent_Display {
	ObjectProperty m_mcIcon; // 0x124
	char m_bIsActive : 1; // 0x12c
};

struct UMaterialExpressionDepthOfFieldFunction : UMaterialExpression {
	EDepthOfFieldFunctionValue FunctionValue; // 0xb0
	FExpressionInput Depth; // 0xb4
};

struct UTgDeviceFire_MirrorDamageToHealBlock : UTgDeviceFire {
	float m_fHealBlockAmount; // 0x268
};

struct UTgAIUtilitySet : UTgAIBehaviorNode {
	EAIAnnotationType AnnotationType; // 0x94
	TArray<ObjectProperty> Functions; // 0x98
	TArray<ObjectProperty> Filters; // 0xa8
};

struct UTgAIInfluenceMapRenderingComponent : UHavokNavigationRenderingComponent {
	ObjectProperty InfluenceMap; // 0x250
	ObjectProperty InfluenceMapTexture; // 0x258
};

struct UTgAnimNotify_ToggleSocketSpecialFX : UAnimNotify {
	FName m_DisplayGroupName; // 0x68
	int32_t m_EquipSlot; // 0x70
	char m_bActivateFxGroup : 1; // 0x74
};

struct ATgDevice_SelfResurrection : ATgDevice {
	char m_bFiringLockout : 1; // 0xa04
};

struct UAnimNodeBlendList : UAnimNodeBlendBase {
	TArray<float> TargetWeight; // 0x114
	float BlendTimeToGo; // 0x124
	int32_t ActiveChildIndex; // 0x128
	char bPlayActiveChild : 1; // 0x12c
	char bForceChildFullWeightWhenBecomingRelevant : 1; // 0x12c
	char bSkipBlendWhenNotRendered : 1; // 0x12c
	TArray<int32_t> PlayActiveChildExceptionList; // 0x130
	float SliderPosition; // 0x140
};

struct UTgAIBehaviorAction_Strafe : UTgAIBehaviorAction_MoveToTarget {
	float StrafeUpdateTime; // 0x9c
	float DistanceMultiplier; // 0xa0
};

struct UAnimNotify_PlayParticleEffect : UAnimNotify {
	ObjectProperty PSTemplate; // 0x68
	char bIsExtremeContent : 1; // 0x70
	char bAttach : 1; // 0x70
	char bPreview : 1; // 0x70
	char bSkipIfOwnerIsHidden : 1; // 0x70
	char bIsFootstep : 1; // 0x70
	char ShouldDilateTimeByPlayRate : 1; // 0x70
	char m_bReuse : 1; // 0x70
	ObjectProperty PSNonExtremeContentTemplate; // 0x74
	FName SocketName; // 0x7c
	FName BoneName; // 0x84
	FName BoneSocketModuleActorName; // 0x8c
	float TimeDilationFactor; // 0x94
};

struct UParticleModuleUberRainImpacts : UParticleModuleUberBase {
	FRawDistributionFloat Lifetime; // 0x78
	FRawDistributionVector StartSize; // 0x9c
	FRawDistributionVector StartRotation; // 0xc0
	char bInheritParent : 1; // 0xe4
	char MultiplyX : 1; // 0xe4
	char MultiplyY : 1; // 0xe4
	char MultiplyZ : 1; // 0xe4
	char bIsUsingCylinder : 1; // 0xe4
	char bPositive_X : 1; // 0xe4
	char bPositive_Y : 1; // 0xe4
	char bPositive_Z : 1; // 0xe4
	char bNegative_X : 0; // 0xe4
	char bNegative_Y : 0; // 0xe4
	char bNegative_Z : 0; // 0xe4
	char bSurfaceOnly : 0; // 0xe4
	char bVelocity : 0; // 0xe4
	char bRadialVelocity : 0; // 0xe4
	FRawDistributionVector LifeMultiplier; // 0xe8
	FRawDistributionFloat PC_VelocityScale; // 0x10c
	FRawDistributionVector PC_StartLocation; // 0x130
	FRawDistributionFloat PC_StartRadius; // 0x154
	FRawDistributionFloat PC_StartHeight; // 0x178
	CylinderHeightAxis PC_HeightAxis; // 0x19c
	FRawDistributionVector ColorOverLife; // 0x1a0
	FRawDistributionFloat AlphaOverLife; // 0x1c4
};

struct ATgBotFactory_PointCapture : ATgBotFactory_Leashed {
	ObjectProperty m_CapturePoint; // 0x388
};

struct AVehicle : APawn {
	ObjectProperty Driver; // 0x5a8
	char bDriving : 1; // 0x5b0
	char bDriverIsVisible : 1; // 0x5b0
	char bAttachDriver : 1; // 0x5b0
	char bTurnInPlace : 1; // 0x5b0
	char bSeparateTurretFocus : 1; // 0x5b0
	char bFollowLookDir : 1; // 0x5b0
	char bHasHandbrake : 1; // 0x5b0
	char bScriptedRise : 1; // 0x5b0
	char bDuckObstacles : 0; // 0x5b0
	char bAvoidReversing : 0; // 0x5b0
	char bRetryPathfindingWithDriver : 0; // 0x5b0
	char bIgnoreStallZ : 0; // 0x5b0
	char bDoExtraNetRelevancyTraces : 0; // 0x5b0
	TArray<FVector> ExitPositions; // 0x5b4
	float ExitRadius; // 0x5c4
	FVector ExitOffset; // 0x5c8
	float Steering; // 0x5d4
	float Throttle; // 0x5d8
	float Rise; // 0x5dc
	FVector TargetLocationAdjustment; // 0x5e0
	float DriverDamageMult; // 0x5ec
	float MomentumMult; // 0x5f0
	UDamageType* CrushedDamageType; // 0x5f4
	float MinCrushSpeed; // 0x5fc
	float ForceCrushPenetration; // 0x600
	char StuckCount; // 0x604
	float ThrottleTime; // 0x608
	float StuckTime; // 0x60c
	float OldSteering; // 0x610
	float OnlySteeringStartTime; // 0x614
	float OldThrottle; // 0x618
	float AIMoveCheckTime; // 0x61c
	float VehicleMovingTime; // 0x620
	float TurnTime; // 0x624
};

struct ASceneCapture2DActor : ASceneCaptureActor {
	ComponentProperty DrawFrustum; // 0x288
};

struct UCloudStorageBaseCloudSaveSystemKVS : UObject {
	ObjectProperty CloudStorage; // 0x60
};

struct UInterpTrackInstLinearColorProp : UInterpTrackInstProperty {
	FPointer ColorProp; // 0x70
	FLinearColor ResetColor; // 0x78
};

struct USimpleSplineAudioComponent : USplineAudioComponent {
	char bAttenuateWithLPF : 1; // 0x2e4
	float LPFRadiusMin; // 0x2e8
	float LPFRadiusMax; // 0x2ec
	float dBAttenuationAtMax; // 0x2f0
	float FlattenAttenuationRadius; // 0x2f4
	SoundDistanceModel DistanceAlgorithm; // 0x2f8
	float RadiusMin; // 0x2fc
	float RadiusMax; // 0x300
	TArray<FSplineSoundSlot> SoundSlots; // 0x304
	ObjectProperty NotifyBufferFinishedHook; // 0x314
};

struct ULensFlareComponent : UPrimitiveComponent {
	ObjectProperty Template; // 0x24c
	ComponentProperty PreviewInnerCone; // 0x254
	ComponentProperty PreviewOuterCone; // 0x25c
	ComponentProperty PreviewRadius; // 0x264
	char bAutoActivate : 1; // 0x26c
	char bIsActive : 1; // 0x26c
	char bHasTranslucency : 1; // 0x26c
	char bHasUnlitTranslucency : 1; // 0x26c
	char bHasUnlitDistortion : 1; // 0x26c
	char bUsesSceneColor : 1; // 0x26c
	char bHasSeparateTranslucency : 1; // 0x26c
	char bUseTrueConeCalculation : 1; // 0x26c
	char bVisibleForMobile : 0; // 0x26c
	float OuterCone; // 0x270
	float InnerCone; // 0x274
	float ConeFudgeFactor; // 0x278
	float Radius; // 0x27c
	float MinStrength; // 0x280
	FLinearColor SourceColor; // 0x284
	TArray<FLensFlareElementMaterials> Materials; // 0x294
	FPointer ReleaseResourcesFence; // 0x2a4
	float NextTraceTime; // 0x2ac
};

struct UTgAnimNodeBlendByPhysics : UAnimNodeBlendList {
	ObjectProperty m_TgPawn; // 0x144
	EPhysics m_LastPhysics; // 0x14c
	EPhysics m_CurrentPhysics; // 0x14d
	int32_t m_CurrentPhysicsChildIndex; // 0x150
	TArray<EPhysics> m_PhysicsChildren; // 0x154
	char m_bDirectUnspecifiedPhysicsThroughChild0 : 1; // 0x164
	float DefaultBlendTime; // 0x168
	TArray<FChildrenBlendInfo> m_ChildrenBlendInfo; // 0x16c
};

struct ATgFlagballSpawnPoint : AActor {
	int32_t m_nFlagBallFiremodeID; // 0x280
	ObjectProperty m_FireMode; // 0x284
	char m_bSetupFireMode : 1; // 0x28c
};

struct ATgDevice_Barrage : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_BarrageFireDevice; // 0xa0c
};

struct UMcpMessageBase : UMcpServiceBase {
	FString McpMessageManagerClassName; // 0x78
	EMcpMessageCompressionType CompressionType; // 0x88
	TArray<FMcpMessageContents> MessageContentsList; // 0x8c
	TArray<FMcpMessageList> MessageLists; // 0x9c
	DelegateProperty __OnCreateMessageComplete__Delegate; // 0xac
	DelegateProperty __OnDeleteMessageComplete__Delegate; // 0xbc
	DelegateProperty __OnQueryMessagesComplete__Delegate; // 0xcc
	DelegateProperty __OnQueryMessageContentsComplete__Delegate; // 0xdc
};

struct UGameExplosionContent : UObject {
	char bAutoControllerVibration : 1; // 0x60
	char bOrientCameraShakeTowardsEpicenter : 1; // 0x60
	ObjectProperty ExplosionSound; // 0x64
	ObjectProperty CamShake; // 0x6c
	ObjectProperty CamShake_Left; // 0x74
	ObjectProperty CamShake_Right; // 0x7c
	ObjectProperty CamShake_Rear; // 0x84
	float CamShakeInnerRadius; // 0x8c
	float CamShakeOuterRadius; // 0x90
	float CamShakeFalloff; // 0x94
	AEmitterCameraLensEffectBase* CameraLensEffect; // 0x98
	float CameraLensEffectRadius; // 0xa0
	ComponentProperty ExploLight; // 0xa4
	float ExploLightFadeOutTime; // 0xac
	ComponentProperty ExploRadialBlur; // 0xb0
	float ExploRadialBlurFadeOutTime; // 0xb8
	float ExploRadialBlurMaxBlur; // 0xbc
	ObjectProperty ParticleEmitterTemplate; // 0xc0
	ObjectProperty FogVolumeArchetype; // 0xc8
};

struct USeqAct_Destroy : USequenceAction {
	char bDestroyBasedActors : 1; // 0x108
	TArray<AActor*> IgnoreBasedClasses; // 0x10c
};

struct UMaterialExpressionIf : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
	FExpressionInput AGreaterThanB; // 0x118
	FExpressionInput AEqualsB; // 0x14c
	FExpressionInput ALessThanB; // 0x180
};

struct UOnlineEventsInterfaceMcp : UMCPBase {
	TArray<FEventUploadConfig> EventUploadConfigs; // 0x80
	TArray<FPointer> MCPEventPostObjects; // 0x90
	TArray<EEventUploadType> DisabledUploadTypes; // 0xa0
	char bBinaryStats : 1; // 0xb0
};

struct UTgEffectModifyProperty_AltFire : UTgEffectModifyProperty {
	TArray<ObjectProperty> m_LastRetrievedOverrides; // 0xbc
};

struct UTgAIBehaviorCondition_NumRallyPoints : UTgAIBehaviorCondition {
	int32_t nRallyPointsThreshold; // 0x98
	char bMustBeEnemy : 1; // 0x9c
	char bMustBeSameTaskForce : 1; // 0x9c
};

struct UTgSeqAct_GetBot : USequenceAction {
	int32_t m_nBotNumber; // 0x108
};

struct UTextureFlipBook : UTexture2D {
	FPointer VfTable_FTickableObject; // 0x208
	float TimeIntoMovie; // 0x210
	float TimeSinceLastFrame; // 0x214
	float HorizontalScale; // 0x218
	float VerticalScale; // 0x21c
	char bPaused : 1; // 0x220
	char bStopped : 1; // 0x220
	char bLooping : 1; // 0x220
	char bAutoPlay : 1; // 0x220
	int32_t HorizontalImages; // 0x224
	int32_t VerticalImages; // 0x228
	TextureFlipBookMethod FBMethod; // 0x22c
	float FrameRate; // 0x230
	float FrameTime; // 0x234
	int32_t CurrentRow; // 0x238
	int32_t CurrentColumn; // 0x23c
	float RenderOffsetU; // 0x240
	float RenderOffsetV; // 0x244
	FPointer ReleaseResourcesFence; // 0x248
};

struct UTgGamePhase_FlagballActive : UTgGamePhase {
	float m_fFlagballCorrectInterval; // 0xb8
	float m_fFlagballCorrectTimer; // 0xbc
};

struct USeqAct_SetSoundMode : USequenceAction {
	ObjectProperty SoundMode; // 0x108
	char bTopPriority : 1; // 0x110
};

struct UTgSeqAct_ParentAnimComponent : USequenceAction {
	char bDetach : 1; // 0x108
};

struct UParticleModuleSubUVDirect : UParticleModuleSubUVBase {
	FRawDistributionVector SubUVPosition; // 0x68
	FRawDistributionVector SubUVSize; // 0x8c
};

struct USkelControlWheel : USkelControlSingleBone {
	float WheelDisplacement; // 0x100
	float WheelMaxRenderDisplacement; // 0x104
	float WheelRoll; // 0x108
	EAxis WheelRollAxis; // 0x10c
	EAxis WheelSteeringAxis; // 0x10d
	float WheelSteering; // 0x110
	char bInvertWheelRoll : 1; // 0x114
	char bInvertWheelSteering : 1; // 0x114
};

struct UTerrainLayerSetup : UObject {
	TArray<FTerrainFilteredMaterial> Materials; // 0x60
};

struct UPBRuleNodeComment : UPBRuleNodeBase {
	int32_t SizeX; // 0x70
	int32_t SizeY; // 0x74
	int32_t BorderWidth; // 0x78
	FColor BorderColor; // 0x7c
	char bFilled : 1; // 0x80
	FColor FillColor; // 0x84
};

struct AProcBuilding : AVolume {
	TArray<FPBMeshCompInfo> BuildingMeshCompInfos; // 0x2bc
	TArray<FPBFracMeshCompInfo> BuildingFracMeshCompInfos; // 0x2cc
	ComponentProperty SimpleMeshComp; // 0x2dc
	char bGenerateRoofMesh : 1; // 0x2e4
	char bGenerateFloorMesh : 1; // 0x2e4
	char bApplyRulesToRoof : 1; // 0x2e4
	char bApplyRulesToFloor : 1; // 0x2e4
	char bSplitWallsAtRoofLevels : 1; // 0x2e4
	char bSplitWallsAtWallEdges : 1; // 0x2e4
	char bQuickEdited : 1; // 0x2e4
	char bBuildingBrushCollision : 1; // 0x2e4
	char bDebugDrawEdgeInfo : 0; // 0x2e4
	char bDebugDrawScopes : 0; // 0x2e4
	TArray<ComponentProperty> LODMeshComps; // 0x2e8
	int32_t NumMeshedTopLevelScopes; // 0x2f8
	float MaxFacadeZ; // 0x2fc
	float MinFacadeZ; // 0x300
	TArray<ObjectProperty> OverlappingBuildings; // 0x304
	float SimpleMeshMassiveLODDistance; // 0x314
	float RenderToTexturePullBackAmount; // 0x318
	int32_t RoofLightmapRes; // 0x31c
	int32_t NonRectWallLightmapRes; // 0x320
	FName ParamSwatchName; // 0x324
	TArray<FPBMaterialParam> BuildingMaterialParams; // 0x32c
	ObjectProperty LowLODPersistentActor; // 0x33c
	ComponentProperty CurrentSimpleMeshComp; // 0x344
	ObjectProperty CurrentSimpleMeshActor; // 0x34c
	int32_t BuildingInstanceVersion; // 0x354
};

struct UParticleModuleVelocityOverLifetime : UParticleModuleVelocityBase {
	FRawDistributionVector VelOverLife; // 0x6c
	char Absolute : 1; // 0x90
};

struct UTgAIBehaviorAction_MoveToAvoidableProjectile : UTgAIBehaviorAction_MoveToTarget {
	char bMustBeEnemy : 1; // 0x9c
	char bIgnoreInsideCollision : 1; // 0x9c
	char bMoveAway : 1; // 0x9c
};

struct USeqVar_Character : USeqVar_Object {
	APawn* PawnClass; // 0xc4
};

struct UTgSeqAct_FadeIn : USequenceAction {
	float m_fDuration; // 0x108
};

struct UInterpTrackNotify : UInterpTrack {
	ObjectProperty Node; // 0xa0
	FName ParentNodeName; // 0xa8
	ObjectProperty OuterSequence; // 0xb0
	ObjectProperty OuterSet; // 0xb8
	TArray<FNotifyTrackKey> NotifyTrack; // 0xc0
};

struct UTgAnimBlendByPercent : UTgAnimNodeBlendList {
	float m_fCurrentPercent; // 0x168
	int32_t m_nDeferredActiveChild; // 0x16c
	int32_t m_fDeferredActiveChildBlendTime; // 0x170
	char m_bDeferUpdatesWhilePlaying : 1; // 0x174
	TArray<FBlendByPercentValues> m_ChildParams; // 0x178
};

struct UTgInventoryObject_Listen_InHand_HitMissStacker : UTgInvListener {
	float m_fLastStackTime; // 0xc4
	int32_t m_nAppliedStacks; // 0xc8
};

struct ATgDevice_WallClimb : ATgDevice {
	ObjectProperty m_CachedKoga; // 0xa04
	FVector m_vWallSimilarityTestNormal; // 0xa0c
	FVector m_vCurrentWallClimbNormal; // 0xa18
	char m_bIsWallClimbing : 1; // 0xa24
	char r_bWantsWallClimb : 1; // 0xa24
	char m_bRequiresBaseable : 1; // 0xa24
	char m_bRequiresStepUpOn : 1; // 0xa24
	char m_bHitStepUpOn : 1; // 0xa24
	char m_bHitCanBase : 1; // 0xa24
	char m_bHitWorldGeometry : 1; // 0xa24
	char m_bGeometryTestResult : 1; // 0xa24
	float m_fWallMagnetMovePerSec; // 0xa28
	float m_fWallClimbVertOffset; // 0xa2c
	float m_fWallNormalSimilarityThreshold; // 0xa30
	float m_fAngularThreshold; // 0xa34
	float m_fVelocityThreshold; // 0xa38
	float m_fWallClimbSpeed; // 0xa3c
	float m_fWallGeometryNormalOffset; // 0xa40
	float m_fPostAbortLockout; // 0xa44
	float m_fMaxWallClimbTime; // 0xa48
	float m_fGeometryTestPeriod; // 0xa4c
	float m_fWallClimbLockoutJumpVelocity; // 0xa50
	float m_fWallJumpZSpeed; // 0xa54
	float m_fWallClimbTime; // 0xa58
};

struct ATgSpawnTeleporterEntrance : AVolume {
	char bEnabled : 1; // 0x2bc
};

struct UDrawCapsuleComponent : UPrimitiveComponent {
	FColor CapsuleColor; // 0x24c
	ObjectProperty CapsuleMaterial; // 0x250
	float CapsuleHeight; // 0x258
	float CapsuleRadius; // 0x25c
	char bDrawWireCapsule : 1; // 0x260
	char bDrawLitCapsule : 1; // 0x260
	char bDrawOnlyIfSelected : 1; // 0x260
};

struct UPBRuleNodeEdgeAngle : UPBRuleNodeBase {
	EProcBuildingEdge Edge; // 0x70
	TArray<FRBEdgeAngleInfo> Angles; // 0x74
};

struct ATgStaticMeshActor_TeamColor : AStaticMeshActor {
	int32_t nTaskForce; // 0x2a4
	FName TeamColoringParameterName; // 0x2a8
	char bInvertColoringParameter : 1; // 0x2b0
	char bInstancedAllMaterials : 1; // 0x2b0
	char bFriendlyWithLocalPlayer; // 0x2b4
	TArray<ObjectProperty> InitialMaterialList; // 0x2b8
};

struct UTgAnimMetaData_MICStates_Interp : UTgAnimMetaData_Keyframed {
	FName MICStateNameFrom; // 0x80
	FName MICStateNameTo; // 0x88
	int32_t nMaterialIndex; // 0x90
	char bApplyToChildMeshes : 1; // 0x94
};

struct ATgPawn_Blades : ATgPawn_Character {
	float m_fGravityFalloffDuration; // 0x3160
	float m_fGravityFalloffTimer; // 0x3164
	float m_fAirControlReductionDuration; // 0x3168
	float m_fAirControlReductionTimer; // 0x316c
	float m_fAirControlReductionPercent; // 0x3170
	char r_bProwlActive : 1; // 0x3174
	char c_bHasDjSkin : 1; // 0x3174
	char c_bHasDjWeapon : 1; // 0x3174
	float r_fProwlAccelMultiplier; // 0x3178
	float r_fProwlGroundSpeedMultiplier; // 0x317c
	float r_fProwlJumpHeightMultiplier; // 0x3180
	float r_fProwlAirControlMultiplier; // 0x3184
	float r_fProwlFadeOutDuration; // 0x3188
	float m_fProwlFadeOutTimer; // 0x318c
	float r_fFeatherliteGravityMultiplier; // 0x3190
	GemEmissiveAnim r_eGemEmissiveAnim; // 0x3194
	GemEmissiveAnim r_eGemEmissiveEndAnim; // 0x3195
	DjBladesFace c_eCurrentDjBladesFace; // 0x3196
	DjBladesFace c_eDjBladesFace[0x3]; // 0x3197
	ObjectProperty c_pGemEmissiveMIC; // 0x319c
	FName m_nmGemEmissiveParamName; // 0x31a4
	float m_fGemEmissiveBaseValue; // 0x31ac
	float m_fGemEmissiveBaseAnimSpeed; // 0x31b0
	float c_fGemEmissiveCurrentValue; // 0x31b4
	TArray<GemEmissiveAnim> c_eGemEmissiveAnimType; // 0x31b8
	TArray<float> c_fGemEmissiveTargetValue; // 0x31c8
	TArray<float> c_fGemEmissiveAnimSpeed; // 0x31d8
	TArray<float> c_fGemEmissiveHoldTimer; // 0x31e8
	float m_fGemEmissive1PBaseValue; // 0x31f8
	float m_fGemEmissive1PAnimSpeedMult; // 0x31fc
	float m_fGemEmissive1PValueMult; // 0x3200
	float m_fGemEmissiveGlobalScalar; // 0x3204
	float c_fDjBladesFaceTimeout[0x3]; // 0x3208
	FDjBladesFaceConfig c_DjBladesFaceConfig[0x8]; // 0x3214
	TArray<FDjBladesVGSFace> c_DjBladesVGSFaces; // 0x3254
	FName c_nmDjBladesFaceXParamName; // 0x3264
	FName c_nmDjBladesFaceYParamName; // 0x326c
};

struct ATgDevice_FernandoInhand : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
};

struct ATgDevice_SilenceBeam : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedGauntletPawn; // 0xa0c
};

struct UComponent : UObject {
	UObject* TemplateOwnerClass; // 0x60
	FName TemplateName; // 0x68
};

struct AHavokNavMeshActor : AActor {
	char bNavMeshLoaded : 1; // 0x280
	char DrawTraversalAnalysis : 1; // 0x280
	char DrawNavMeshEdges : 1; // 0x280
	char DrawNavMeshUserEdges : 1; // 0x280
	char DrawNavMeshFaces : 1; // 0x280
	char DrawCluster : 1; // 0x280
	char DrawFaceToClusterLines : 1; // 0x280
	char FixupOverlappingTriangles : 1; // 0x280
	char IncludeUserEdgesInClusters : 0; // 0x280
	char ShrinkNavMeshByCharacterWidth : 0; // 0x280
	char UseSimplification : 0; // 0x280
	char PreserveVerticalBorderRegions : 0; // 0x280
	char BorderPreservationTolerance : 0; // 0x280
	char bAnalyzeDropDowns : 0; // 0x280
	char bAnalyzeJumps : 0; // 0x280
	ComponentProperty EditorSprite; // 0x284
	ComponentProperty RenderingComponent; // 0x28c
	FUntypedBulkData_Mirror NavMeshData; // 0x294
	FPointer HavokWorld; // 0x2d4
	ObjectProperty HavokGrid; // 0x2dc
	EHavokVersion Version; // 0x2e4
	FVector DrawClusterOffset; // 0x2e8
	FVector SingleCarverAABBMin; // 0x2f4
	FVector SingleCarverAABBMax; // 0x300
	float MaxBorderDistanceError; // 0x30c
	float MaxPartitionHeightError; // 0x310
	float MinRegionArea; // 0x314
	float MinDistanceToSeed; // 0x318
	float MaxWalkableSlope; // 0x31c
	float EntityHalfHeight; // 0x320
	float StartingHeightOffset; // 0x324
	float MaxStepHeight; // 0x328
	float MaxPolyHeight; // 0x32c
	float HeightMergeThreshold; // 0x330
	float MinRadius; // 0x334
	float MaxRadius; // 0x338
	float MaxDropHeight; // 0x33c
	float MaxUnderhang; // 0x340
	float DropDownCost; // 0x344
	float MaxJumpHeight; // 0x348
	float StandardJumpHeight; // 0x34c
	float StandardJumpDistance; // 0x350
	float JumpCost; // 0x354
	float MinTraversalEdgeLength; // 0x358
	float DegenerateWidthThreshold; // 0x35c
	float MaxConcaveBorderSimplifyArea; // 0x360
	float RaiseEdgeHeightLimit; // 0x364
};

struct ATgDevice_BunnyLink : ATgDevice {
	ObjectProperty m_CachedBunny; // 0xa04
	ObjectProperty m_CandidateSpiritLinkTarget; // 0xa0c
	ObjectProperty m_CurrentSpiritLinkTarget; // 0xa14
	float m_fLinkedDamageHealthFloor; // 0xa1c
	float m_fSpiritLinkBreakThreshold; // 0xa20
	ObjectProperty m_LinkDeviceMode; // 0xa24
};

struct UOnlinePlayerStorage : UObject {
	int32_t VersionNumber; // 0x60
	int32_t VersionSettingsId; // 0x64
	int32_t SaveCountSettingId; // 0x68
	TArray<FOnlineProfileSetting> ProfileSettings; // 0x6c
	TArray<FSettingsPropertyPropertyMetaData> ProfileMappings; // 0x7c
	EOnlinePlayerStorageAsyncState AsyncState; // 0x8c
	int32_t DeviceID; // 0x90
};

struct USeqCond_SwitchObject : USeqCond_SwitchBase {
	TArray<FSwitchObjectCase> SupportedValues; // 0xec
};

struct AKeypoint : AActor {
	ComponentProperty SpriteComp; // 0x280
};

struct ALandscapeProxy : AInfo {
	FGuid LandscapeGuid; // 0x280
	int32_t MaxLODLevel; // 0x290
	ObjectProperty DefaultPhysMaterial; // 0x294
	float StreamingDistanceMultiplier; // 0x29c
	ObjectProperty LandscapeMaterial; // 0x2a0
	float LODDistanceFactor; // 0x2a8
	TArray<ComponentProperty> LandscapeComponents; // 0x2ac
	TArray<ComponentProperty> CollisionComponents; // 0x2bc
	TMap<None, None> MaterialInstanceConstantMap; // 0x2cc
	TMap<None, None> WeightmapUsageMap; // 0x314
	float StaticLightingResolution; // 0x35c
	ObjectProperty LandscapeActor; // 0x360
	char bIncludeInManualZPrepass : 1; // 0x368
	char bIsProxy : 1; // 0x368
	char bIsSetup : 1; // 0x368
	char bResetup : 1; // 0x368
	char bIsMovingToLevel : 1; // 0x368
	TArray<FName> ActorLayerNames; // 0x36c
	FLightmassPrimitiveSettings LightmassSettings; // 0x37c
	int32_t CollisionMipLevel; // 0x398
	int32_t MobileLODBias; // 0x39c
	TArray<FLandscapeLayerStruct> LayerInfoObjs; // 0x3a0
	int32_t ComponentSizeQuads; // 0x3b0
	int32_t SubsectionSizeQuads; // 0x3b4
	int32_t NumSubsections; // 0x3b8
};

struct ATgPropActor : AActor {
	ComponentProperty c_Mesh; // 0x280
	float m_fTickPostDeactivate; // 0x288
	char m_bDeactivateOnPhysNone : 1; // 0x28c
	char m_bIsActive : 1; // 0x28c
	char m_bForceHidden : 1; // 0x28c
	EPhysics m_ePhysicsOnActive; // 0x290
};

struct AFrameworkGame : AGameInfo {
	TArray<FRequiredMobileInputConfig> RequiredMobileInputConfigs; // 0x4cc
};

struct ATgDevice_OppressorMine : ATgDevice {
	TArray<ObjectProperty> m_NewTargetSFXRecentTargets; // 0xa04
	TArray<float> m_NewTargetSFXTargetTime; // 0xa14
	float m_fMinNewTargetSFXDelay; // 0xa24
};

struct UActorFactoryFogVolumeConstantDensityInfo : UActorFactory {
	ObjectProperty SelectedMaterial; // 0x9c
	char bNothingSelected : 1; // 0xa4
};

struct ATgDevice_CorvusRMB : ATgDevice {
	ObjectProperty m_Corvus; // 0xa04
	FImpactInfo m_CachedImpact; // 0xa0c
};

struct ATgDevice_AzaanWalls : ATgDevice {
	int32_t m_nWallMeshId; // 0xa04
	ObjectProperty m_pAzaan; // 0xa08
	char m_bWasAboveThreshold : 1; // 0xa10
	float m_fWallDistToFocalPoint; // 0xa14
	float m_fWallSpread; // 0xa18
	float m_fWallDepthCheck; // 0xa1c
	float m_fWallZForgiveness; // 0xa20
	FRotator m_rCachedWallAim; // 0xa24
	FVector m_vOpenSpotExtent; // 0xa30
	FVector m_vCachedWallFocus; // 0xa3c
	int32_t m_nNumberOfWalls; // 0xa48
	int32_t r_nActiveDeployableWalls; // 0xa4c
};

struct UUIData_HeaderTab : UUIData {
	FString m_sTitle; // 0x64
	int32_t m_nCTACount; // 0x74
	int32_t m_nFrame; // 0x78
};

struct UUIData_RebindCommand : UUIData {
	int32_t m_nCommandIndex; // 0x64
	int32_t m_nCaptureAlt; // 0x68
};

struct UUIData_ReportPlayer : UUIData {
	ObjectProperty m_pPlayerData; // 0x64
	ObjectProperty m_pPlayerEntry; // 0x6c
};

struct ATgPawn_Flak : ATgPawn_Character {
	ObjectProperty m_CachedKineticBurstDevice; // 0x3160
	ObjectProperty m_CachedSiegeUnitDevice; // 0x3168
	ObjectProperty m_CachedUltimateDevice; // 0x3170
	ObjectProperty m_CachedShoulderBashDevice; // 0x3178
	ObjectProperty m_WepIdleSound; // 0x3180
	float m_PreviousZHeight; // 0x3188
	float m_GravityMultiplier; // 0x318c
	char m_bUseShoulderBashRetrieve : 1; // 0x3190
	char m_bUseShoulderBashZoom : 1; // 0x3190
};

struct ATgDevice_CorrupterUlt : ATgDevice {
	char hasFired : 1; // 0xa04
	ObjectProperty m_Corrupter; // 0xa08
	ObjectProperty r_Target; // 0xa10
	float m_fNextTargetUpdateIn; // 0xa18
	float m_fUpdateTargetPeriod; // 0xa1c
	float m_fDeliverDamageDelay; // 0xa20
};

struct UTgDeviceForm_DruidRMB : UTgDeviceForm {
	ObjectProperty m_CachedDruid; // 0x28c
	ObjectProperty m_pLastTarget; // 0x294
	FDruidHealBeam m_DruidHealBeams[0xa]; // 0x29c
	int32_t m_nNextBeamIndex; // 0x314
	FVector m_vFireLocationOffset; // 0x318
};

struct UParticleModuleBeamNoise : UParticleModuleBeamBase {
	char bLowFreq_Enabled : 1; // 0x68
	char bNRScaleEmitterTime : 1; // 0x68
	char bSmooth : 1; // 0x68
	char bNoiseLock : 1; // 0x68
	char bOscillate : 1; // 0x68
	char bUseNoiseTangents : 1; // 0x68
	char bTargetNoise : 1; // 0x68
	char bApplyNoiseScale : 1; // 0x68
	int32_t Frequency; // 0x6c
	int32_t Frequency_LowRange; // 0x70
	FRawDistributionVector NoiseRange; // 0x74
	FRawDistributionFloat NoiseRangeScale; // 0x98
	FRawDistributionVector NoiseSpeed; // 0xbc
	float NoiseLockRadius; // 0xe0
	float NoiseLockTime; // 0xe4
	float NoiseTension; // 0xe8
	FRawDistributionFloat NoiseTangentStrength; // 0xec
	int32_t NoiseTessellation; // 0x110
	float FrequencyDistance; // 0x114
	FRawDistributionFloat NoiseScale; // 0x118
};

struct ATgDeploy_Bomb : ATgDeployable {
	float r_fPersistTime; // 0x46c
	ComponentProperty m_CountdownIndicator; // 0x470
	ObjectProperty m_CountdownIndicatorMIC; // 0x478
	float r_fRadiusScale; // 0x480
};

struct UTgDeviceForm_ShoulderBash : UTgDeviceForm {
	int32_t moveAmount; // 0x28c
};

struct ATgTeamPlayerStart : ATgStartPoint {
	char m_nTaskForce; // 0x3bc
	int32_t m_nPriority; // 0x3c0
	int32_t nPrevPriority; // 0x3c4
	float m_fMaxDistForEnemyCheckUU; // 0x3c8
	float m_fMaxDistForHazardCheckUU; // 0x3cc
	float m_fMaxWeightForEnemyDistanceCheck; // 0x3d0
	float m_fMaxDistForAllyCheckUU; // 0x3d4
	float m_fMinDistForAllyCheckUU; // 0x3d8
	float m_fMaxWeightForAllyDistanceCheck; // 0x3dc
	float m_fRandomRatingWeighting; // 0x3e0
	char m_bInitialSpawnOnly : 1; // 0x3e4
	char m_bDisallowEnemyLOS : 1; // 0x3e4
	char m_bRotateTowardNearestVisibleAlly : 1; // 0x3e4
	float m_fExtraHeightToTraceTo; // 0x3e8
	int32_t m_nMinLevel; // 0x3ec
	float m_fLastUsedTimeStamp; // 0x3f0
	TArray<ObjectProperty> s_AssignedPlayers; // 0x3f4
};

struct USeqEvent_Touch : USequenceEvent {
	TArray<AActor*> ClassProximityTypes; // 0x128
	TArray<AActor*> IgnoredClassProximityTypes; // 0x138
	char bForceOverlapping : 1; // 0x148
	char bUseInstigator : 1; // 0x148
	char bAllowDeadPawns : 1; // 0x148
	TArray<ObjectProperty> TouchedList; // 0x14c
};

struct UTgStreamManager : UObject {
	FString WatchEnd; // 0x60
	FString m_CurrentChannel; // 0x70
	int32_t m_nNewsIndex; // 0x80
	TArray<FGameStream> Streams; // 0x84
	char m_hasReceivedStreams : 1; // 0x94
	char m_hasAnySpecial : 1; // 0x94
	char m_hasAnyFeatured : 1; // 0x94
	ObjectProperty m_Movie; // 0x98
	DelegateProperty __ViewerSort__Delegate; // 0xa0
	DelegateProperty __FeaturedSort__Delegate; // 0xb0
	DelegateProperty __LiveSort__Delegate; // 0xc0
};

struct UUIData_LoadoutCategory : UUIData {
	FString m_sName; // 0x64
	ObjectProperty m_pItem; // 0x74
};

struct ATgDevice_GeometryBarrierTank : ATgDevice {
	char r_bHasTremorsEquipped : 1; // 0xa04
	float r_fTremorsCooldownReduction; // 0xa08
	float m_fCachedWallHealthPercent; // 0xa0c
};

struct UUIComponent_BattlePassChallengeLarge : UUIComponent_Display {
	ObjectProperty m_mcTitleTF; // 0x124
	ObjectProperty m_mcTierTF; // 0x12c
	ObjectProperty m_mcLabelTF; // 0x134
	ObjectProperty m_mcRewardTF; // 0x13c
	ObjectProperty m_mcExperienceTF; // 0x144
	ObjectProperty m_mcCurrencyIcon; // 0x14c
	ObjectProperty m_pGoalList; // 0x154
};

struct UUIComponent_CustomizeSlot : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_mcRarity; // 0x12c
	ObjectProperty m_mcLock; // 0x134
	ObjectProperty m_pAvatar; // 0x13c
	ObjectProperty m_pIcon; // 0x144
	ObjectProperty m_pObtainability; // 0x14c
};

struct AFracturedStaticMeshPart : AFracturedStaticMeshActor {
	float DestroyPartRadiusFactor; // 0x314
	ObjectProperty BaseFracturedMeshActor; // 0x318
	char bHasBeenRecycled : 1; // 0x320
	char bChangeRBChannelWhenAsleep : 1; // 0x320
	char bCompositeThatExplodesOnImpact : 1; // 0x320
	float LastSpawnTime; // 0x324
	int32_t PartPoolIndex; // 0x328
	float FracPartGravScale; // 0x32c
	ERBCollisionChannel AsleepRBChannel; // 0x330
	FVector OldVelocity; // 0x334
	float CurrentVibrationLevel; // 0x340
	float LastImpactSoundTime; // 0x344
};

struct UUIComponent_ProgressBarRadial : UUIComponent_Display {
	int32_t m_nZeroPercentFrame; // 0x124
	int32_t m_nHundredPercentFrame; // 0x128
	float m_fAnimTime; // 0x12c
	float m_fAnimDelay; // 0x130
	float m_fCurrentPercent; // 0x134
	float m_fTargetPercent; // 0x138
	float m_fDeltaPercent; // 0x13c
	ObjectProperty m_mcMask; // 0x140
};

struct UUIComponent_LoadoutHeader : UUIComponent_Display {
	ObjectProperty m_Back; // 0x124
	ObjectProperty m_Prev; // 0x12c
	ObjectProperty m_Next; // 0x134
	ObjectProperty m_InputNext; // 0x13c
	ObjectProperty m_InputPrev; // 0x144
};

struct UTgAnimBlendByTag : UTgAnimNodeBlendList {
	TArray<FTagInfo> m_TagMap; // 0x168
};

struct USeqAct_AkLoadBank : USeqAct_Latent {
	char Async : 1; // 0x120
	char bWaitingCallback : 1; // 0x120
	ObjectProperty Bank; // 0x124
	int32_t Signal; // 0x12c
};

struct UUIComponent_ArcadeRankedProgress : UUIComponent_Display {
	ObjectProperty m_mcQueueName; // 0x124
	ObjectProperty m_mcRatingChange; // 0x12c
	ObjectProperty m_mcRatingImproved; // 0x134
	ObjectProperty m_pRating; // 0x13c
};

struct UUIAchievementPopups : UTgGfxScene {
	char m_bNewElementsQueued : 1; // 0x1ec
	TArray<FAchievementProgressData> m_rawProgressList; // 0x1f0
	TArray<FAchievementProgressData> m_queuedProgressList; // 0x200
	ObjectProperty m_pPopup; // 0x210
	ObjectProperty m_pUnlockedTF; // 0x218
	ObjectProperty m_pPointsTF; // 0x220
	ObjectProperty m_pNameTF; // 0x228
	ObjectProperty m_pDescriptionTF; // 0x230
	ObjectProperty m_pIconLoader; // 0x238
	ObjectProperty m_pProgressBar; // 0x240
	ObjectProperty m_pProgressBarMask; // 0x248
	ObjectProperty m_pProgressBarTF; // 0x250
	ObjectProperty m_pProgressBarFill; // 0x258
	float m_fDisplayTimer; // 0x260
	float m_fDelayTimer; // 0x264
};

struct ATgDevice_Lightspeed : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
};

struct UPathConstraint : UObject {
	int32_t CacheIdx; // 0x60
	ObjectProperty NextConstraint; // 0x64
};

struct UUIData_Name : UUIData {
	FName m_Value; // 0x64
};

struct UUIHudDecks : UTgGfxScene {
	char m_bPresentCharacterCustomizationWhenReady : 1; // 0x1ec
	char m_bPopup : 1; // 0x1ec
	int32_t m_nPassive; // 0x1f0
	int32_t m_nTalent; // 0x1f4
	TScriptInterface<Class> m_Loadout; // 0x1f8
	int32_t m_nTime; // 0x208
	int32_t m_nSelectLoadoutHandle; // 0x20c
	int32_t m_nStepNum; // 0x210
	ObjectProperty m_mcPopup; // 0x214
	ObjectProperty m_PopupEquip; // 0x21c
	ObjectProperty m_mcPopupTitle; // 0x224
	ObjectProperty m_mcPopupCard[0x5]; // 0x22c
	ObjectProperty m_mcPopupShadow[0x5]; // 0x254
	ObjectProperty m_mcBack; // 0x27c
	ObjectProperty m_mcBreadcrumbs[0x3]; // 0x284
	ObjectProperty m_mcBreadcrumbLines[0x2]; // 0x29c
	ObjectProperty m_mcTitle; // 0x2ac
	ObjectProperty m_mcSubtitle; // 0x2b4
	ObjectProperty m_mcTime; // 0x2bc
	ObjectProperty m_akEquip; // 0x2c4
	ObjectProperty m_DeckAbilityPools[0x8]; // 0x2cc
	ObjectProperty m_SelectedDeckAbilityPool; // 0x30c
	ObjectProperty m_pLoadoutsList; // 0x314
	ObjectProperty m_mcLoadoutTalent; // 0x31c
	ObjectProperty m_mcLoadoutTalentIcon; // 0x324
	ObjectProperty m_mcLoadoutTalentTF; // 0x32c
	ObjectProperty m_mcGameTip; // 0x334
	ObjectProperty m_mcGameTipTitle; // 0x33c
	ObjectProperty m_mcGameTipSubtitle; // 0x344
	ObjectProperty m_BackAction; // 0x34c
	ObjectProperty m_EquipAction; // 0x354
};

struct UUIHudResult : UTgGfxScene {
	char m_bRoundEnd : 1; // 0x1ec
	char m_bLoadingModel : 1; // 0x1ec
	char m_bMapOutroFinished : 1; // 0x1ec
	char m_bGameOver : 1; // 0x1ec
	char m_bGameWon : 1; // 0x1ec
	char m_bUsePlayOfTheGameIntroAnim : 1; // 0x1ec
	float m_fResultDisplayTime; // 0x1f0
	float m_fPlayOfTheGameTimer; // 0x1f4
	float m_fHomeTimer; // 0x1f8
	float m_fRoundTime; // 0x1fc
	float m_fRoundTimer; // 0x200
	float m_fAnimTimer; // 0x204
	int32_t m_nWinningTaskforce; // 0x208
	float m_fAsyncMeshLoadTimeout; // 0x20c
	float m_fIntroDuration; // 0x210
	float m_fPlayOfTheGameTimeoutDuration; // 0x214
	ObjectProperty m_mcBlocker; // 0x218
	ObjectProperty m_mcResult; // 0x220
	ObjectProperty m_mcResultEOR; // 0x228
	ObjectProperty m_mcResultTitle; // 0x230
	ObjectProperty m_mcResultTitleAnim; // 0x238
	ObjectProperty m_mcResultDefeat; // 0x240
	ObjectProperty m_mcResultVictory; // 0x248
	ObjectProperty m_mcResultVictorySpectator; // 0x250
	ObjectProperty m_mcResultPlayOfTheGameContainer; // 0x258
	ObjectProperty m_mcResultPlayOfTheGame; // 0x260
	ObjectProperty m_mcResultPlayOfTheGameBackground; // 0x268
	ObjectProperty m_mcResultPlayOfTheGamePlayerNameGroup; // 0x270
	ObjectProperty m_mcResultPlayOfTheGamePlayerName; // 0x278
	ObjectProperty m_pResultPlayOfTheGamePlayerName; // 0x280
	ObjectProperty m_mcResultPlayOfTheGamePlayerNameShadow; // 0x288
	ObjectProperty m_mcResultPlayOfTheGamePlayerTitle; // 0x290
	ObjectProperty m_mcResultPlayOfTheGamePlayerPortrait; // 0x298
	ObjectProperty m_mcResultPlayOfTheGamePlayerPortraitFrame; // 0x2a0
	ObjectProperty m_mcResultPlayOfTheGamePlayerPortraitIcon; // 0x2a8
	ObjectProperty m_mcResultPlayOfTheGamePlayerPortraitIconTexture; // 0x2b0
	ObjectProperty m_mcResultPlayOfTheGameChampionNameGroup; // 0x2b8
	ObjectProperty m_mcResultPlayOfTheGameChampionName; // 0x2c0
	ObjectProperty m_mcResultPlayOfTheGameChampionNameTF; // 0x2c8
	ObjectProperty m_mcResultPlayOfTheGameText; // 0x2d0
	ObjectProperty m_mcResultPlayOfTheGameTextAs; // 0x2d8
	int32_t m_nBasePotGXPos; // 0x2e0
	EPlayOfTheGameState m_ePlayOfTheGameState; // 0x2e4
	float m_fPlayOfTheGameStateTime; // 0x2e8
};

struct UUIComponent_MatchLobbySoundCues : UUIComponent_Display {
	ObjectProperty m_akSelect; // 0x124
	ObjectProperty m_akRollover; // 0x12c
	ObjectProperty m_akTabChange; // 0x134
	ObjectProperty m_akCountdown; // 0x13c
	ObjectProperty m_akLockInSelf; // 0x144
	ObjectProperty m_akLockInEnemy; // 0x14c
	ObjectProperty m_akLockInTeam; // 0x154
	int32_t m_nChampMatchStartTickHandle; // 0x15c
	int32_t m_nChampSelectTickHandle; // 0x160
	Fdword m_dwLastPlayedDraftAnnouncer; // 0x164
	int32_t m_nChampSelectHandle; // 0x168
};

struct UStaticMesh : UObject {
	TArray<FStaticMeshLODInfo> LODInfo; // 0x70
	float LODDistanceRatio; // 0x80
	float LODMaxRange; // 0x84
	int32_t LightMapResolution; // 0x98
	int32_t LightMapCoordinateIndex; // 0x9c
	ObjectProperty BodySetup; // 0xf8
	char UseSimpleLineCollision : 1; // 0x13c
	char UseSimpleBoxCollision : 1; // 0x140
	char UseSimpleRigidBodyCollision : 1; // 0x144
	char UseFullPrecisionUVs : 1; // 0x148
	char bUsedForInstancing : 1; // 0x14c
	int32_t ConsolePreallocateInstanceCount; // 0x150
	char bUseMaximumStreamingTexelRatio : 1; // 0x154
	char bPartitionForEdgeGeometry : 1; // 0x158
	char bCanBecomeDynamic : 1; // 0x15c
	char bStripComplexCollisionForConsole : 1; // 0x164
	char bStripComplexCollision : 1; // 0x168
	char bPerLODStaticLightingForInstancing : 1; // 0x16c
	float StreamingDistanceMultiplier; // 0x170
};

struct UAnimNodeBlendBase : UAnimNode {
	TArray<FAnimBlendChild> Children; // 0xfc
	char bFixNumChildren : 1; // 0x10c
	char m_bForceChildToLoop : 1; // 0x10c
	AlphaBlendType BlendType; // 0x110
};

struct UParticleModuleMaterialByParameter : UParticleModuleMaterialBase {
	TArray<FName> MaterialParameters; // 0x68
	TArray<ObjectProperty> DefaultMaterials; // 0x78
};

struct ULandscapeComponent : UPrimitiveComponent {
	int32_t SectionBaseX; // 0x24c
	int32_t SectionBaseY; // 0x250
	int32_t ComponentSizeQuads; // 0x254
	int32_t SubsectionSizeQuads; // 0x258
	int32_t NumSubsections; // 0x25c
	ObjectProperty OverrideMaterial; // 0x260
	ObjectProperty MaterialInstance; // 0x268
	TArray<FWeightmapLayerAllocationInfo> WeightmapLayerAllocations; // 0x270
	TArray<ObjectProperty> WeightmapTextures; // 0x280
	FIndirectArray_Mirror WeightmapData; // 0x290
	FVector4 WeightmapScaleBias; // 0x2a0
	float WeightmapSubsectionOffset; // 0x2b0
	FVector4 HeightmapScaleBias; // 0x2c0
	ObjectProperty HeightmapTexture; // 0x2d0
	FBoxSphereBounds CachedBoxSphereBounds; // 0x2d8
	FBox CachedLocalBox; // 0x2f4
	TArray<ObjectProperty> ShadowMaps; // 0x310
	TArray<FGuid> IrrelevantLights; // 0x320
	FLightMapRef LightMap; // 0x330
	FPointer EditToolRenderData; // 0x338
	int32_t CollisionMipLevel; // 0x340
	FPointer PlatformData; // 0x344
	int32_t PlatformDataSize; // 0x34c
	char bNeedPostUndo : 1; // 0x350
	int32_t ForcedLOD; // 0x354
	char NeighborLOD[0x8]; // 0x358
	char NeighborLODBias[0x8]; // 0x360
	int32_t LODBias; // 0x368
};

struct ATgCapturePoint : AActor {
	ObjectProperty s_CollisionProxy; // 0x280
	ObjectProperty r_RepInfo; // 0x288
	float m_fCollisionProxyRadius; // 0x290
	float m_fCollisionProxyHeight; // 0x294
	float m_fBaseTransitionSpeed; // 0x298
	float m_fTransitionSpeedBuff; // 0x29c
	float m_fCurrentTransitionSpeed; // 0x2a0
	ObjectProperty c_OwnershipChangedKismetNode; // 0x2a4
	ObjectProperty s_BotSpawners[0x2]; // 0x2ac
	ObjectProperty m_CurrentBotSpawners[0x2]; // 0x2bc
	ObjectProperty s_NeutralBotSpawner; // 0x2cc
	int32_t m_CapturePointIndex; // 0x2d4
	float s_fReplenishBotTime; // 0x2d8
	float s_fRemainingReplenishBotTime; // 0x2dc
	float s_fFriendlyReplenishBuffPct; // 0x2e0
	float m_fRegenUpdateTimer; // 0x2e4
	float m_fOwnedManaRegen; // 0x2e8
	float m_fOwnedHealthRegen; // 0x2ec
	ObjectProperty s_GameInfo; // 0x2f0
	int32_t m_nTF1Count; // 0x2f8
	int32_t m_nTF2Count; // 0x2fc
	float m_fLastEnemyKillVoxTimestamp; // 0x300
	int32_t m_nLaneNumber; // 0x304
	ComponentProperty m_WorldIconSprite; // 0x308
};

struct ATgPawn_Corrupter : ATgPawn_Character {
	ObjectProperty m_SpinDevice; // 0x3160
	ObjectProperty m_InHandDevice; // 0x3168
	ObjectProperty m_CachedLatch; // 0x3170
	ObjectProperty m_CorruptionPassive; // 0x3178
	ObjectProperty m_UltDevice; // 0x3180
	int32_t r_nCorruptionStacks; // 0x3188
	int32_t nMaxCorruption; // 0x318c
	int32_t nAmountToHealPerStack; // 0x3190
	int32_t c_nPoolMeshID; // 0x3194
	int32_t c_nNormalMeshID; // 0x3198
	float m_PreviousZHeight; // 0x319c
	float m_GravityMultiplier; // 0x31a0
	char m_bRenderPool : 1; // 0x31a4
	char m_bForced3PDuringPool : 1; // 0x31a4
	char m_bForcingMeshTransition : 1; // 0x31a4
	char r_bAbility1CanEmote : 1; // 0x31a4
};

struct UUICharacterSummary : UUIResourceDataProvider {
	FString ClassPathName; // 0x94
	FString CharacterName; // 0xa4
	FString CharacterBio; // 0xb4
	char bIsDisabled : 1; // 0xc4
};

struct UTgControlModule_Stoker : UTgControlModule_ThirdPerson {
	ObjectProperty m_CachedStokerPawn; // 0xcc
};

struct UMaterialExpressionMultiply : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
};

struct UUIPurchase : UTgGfxScene {
	int32_t m_nPurchaseItem; // 0x1ec
	int32_t m_nPurchaseType; // 0x1f0
	int32_t m_nPurchaseBundle; // 0x1f4
	int32_t m_nPurchaseVendor; // 0x1f8
	int32_t m_nPurchaseLootItem; // 0x1fc
	int32_t m_nPurchaseQuantity; // 0x200
	FQWord m_qwPurchaseCustomData; // 0x204
	char m_bHasBonusItem : 1; // 0x20c
	char m_bIsMultiPurchase : 1; // 0x20c
	int32_t m_nBonusItem; // 0x210
	int32_t m_nBonusType; // 0x214
	int32_t m_nBonusBundle; // 0x218
	int32_t m_nBonusVendor; // 0x21c
	int32_t m_nBonusLootItem; // 0x220
	int32_t m_eCurrencyUsed; // 0x224
	int32_t m_nCurrentTab; // 0x228
	int32_t m_nCurrentCoupon; // 0x22c
	float m_fPurchaseDelay; // 0x230
	float m_fPurchaseTimeout; // 0x234
	FString m_lsMultiPurchaseTitle; // 0x238
	FString m_lsMultiPurchaseSubTitle; // 0x248
	ObjectProperty m_pSelectedPrice; // 0x258
	ObjectProperty m_mcWait; // 0x260
	ObjectProperty m_mcTitle; // 0x268
	ObjectProperty m_mcCursor; // 0x270
	ObjectProperty m_mcCancel; // 0x278
	ObjectProperty m_mcSpinner; // 0x280
	ObjectProperty m_mcSubtitle; // 0x288
	ObjectProperty m_mcBooster; // 0x290
	ObjectProperty m_mcTab[0x2]; // 0x298
	ObjectProperty m_mcTabSelected[0x2]; // 0x2a8
	ObjectProperty m_mcTabHighlight[0x2]; // 0x2b8
	ObjectProperty m_mcDivider[0x2]; // 0x2c8
	ObjectProperty m_mcCouponSelect; // 0x2d8
	ObjectProperty m_mcCouponSelectArrow0; // 0x2e0
	ObjectProperty m_mcCouponSelectArrow1; // 0x2e8
	ObjectProperty m_mcCouponSelectIcon; // 0x2f0
	ObjectProperty m_mcCouponSelectTF; // 0x2f8
	ObjectProperty m_mcCouponSelectHighlight; // 0x300
	ObjectProperty m_mcBlocker; // 0x308
	ObjectProperty m_mcBoosterItem; // 0x310
	FUIAcquiredItem m_BoosterItemDisplay; // 0x318
	ObjectProperty m_BoosterItemInfo; // 0x420
	ObjectProperty m_HoldPrompt; // 0x428
	ObjectProperty m_PriceOptionList; // 0x430
	ObjectProperty m_grScreen; // 0x438
	ObjectProperty m_PlayerCurrency; // 0x440
	ObjectProperty m_ChampionPackAd; // 0x448
	ObjectProperty m_ChampionPackButton; // 0x450
	ObjectProperty m_ChampionPackData; // 0x458
	ObjectProperty m_ChampionPackPrompt; // 0x460
	ObjectProperty m_Carousel; // 0x468
	TArray<FUIAcquiredItem> m_PurchaseItems; // 0x470
	TArray<ObjectProperty> m_PurchaseTabPrices; // 0x480
	TArray<ObjectProperty> m_RentalTabPrices; // 0x490
	TArray<ObjectProperty> m_MultiPurchaseItems; // 0x4a0
	ObjectProperty m_akPurchaseItem; // 0x4b0
	int32_t m_nEquipByBoostingID; // 0x4b8
};

struct UGameViewportClient : UScriptViewportClient {
	FPointer VfTable_FExec; // 0x68
	FPointer Viewport; // 0x70
	FPointer ViewportFrame; // 0x78
	TArray<ObjectProperty> GlobalInteractions; // 0x80
	UUIInteraction* UIControllerClass; // 0x90
	ObjectProperty UIController; // 0x98
	ObjectProperty ViewportConsole; // 0xa0
	FExportShowFlags_Mirror ShowFlags; // 0xa8
	FString LoadingMessage; // 0xb8
	FString SavingMessage; // 0xc8
	FString ConnectingMessage; // 0xd8
	FString PausedMessage; // 0xe8
	FString PrecachingMessage; // 0xf8
	char bShowTitleSafeZone : 1; // 0x108
	char bDisplayHardwareMouseCursor : 1; // 0x108
	char bOverrideDiffuseAndSpecular : 1; // 0x108
	char bIsPlayInEditorViewport : 1; // 0x108
	char bShowSystemMouseCursor : 1; // 0x108
	char bDisableWorldRendering : 1; // 0x108
	char bCapturedWorldRendering : 1; // 0x108
	char bDebugNoGFxUI : 1; // 0x108
	FTitleSafeZoneArea TitleSafeZone; // 0x10c
	TArray<FSplitscreenData> SplitscreenInfo; // 0x11c
	ESplitScreenType DesiredSplitscreenType; // 0x12c
	ESplitScreenType ActiveSplitscreenType; // 0x12d
	ESplitScreenType Default2PSplitType; // 0x12e
	ESplitScreenType Default3PSplitType; // 0x12f
	FString ProgressMessage[0x2]; // 0x130
	float ProgressTimeOut; // 0x150
	float ProgressFadeTime; // 0x154
	TArray<FDebugDisplayProperty> DebugProperties; // 0x158
	FPointer ScaleformInteraction; // 0x168
	FPointer PreviousFrameViewFamily; // 0x170
	DelegateProperty __HandleInputKey__Delegate; // 0x178
	DelegateProperty __HandleInputAxis__Delegate; // 0x188
	DelegateProperty __HandleInputChar__Delegate; // 0x198
};

struct ATgDeploy_ChurchillShield : ATgDeploy_Shield {
	float m_fMinPitch; // 0x470
};

struct UTgDeviceForm_MinigunSpinUp : UTgDeviceForm {
	ObjectProperty m_SpinnerSkelControl1P; // 0x28c
	ObjectProperty m_SpinnerSkelControl3P; // 0x294
};

struct USVehicleWheel : UComponent {
	float Steer; // 0x70
	float MotorTorque; // 0x74
	float BrakeTorque; // 0x78
	float ChassisTorque; // 0x7c
	char bPoweredWheel : 1; // 0x80
	char bHoverWheel : 1; // 0x80
	char bCollidesVehicles : 1; // 0x80
	char bCollidesPawns : 1; // 0x80
	char bIsSquealing : 1; // 0x80
	char bWheelOnGround : 1; // 0x80
	float SteerFactor; // 0x84
	FName SkelControlName; // 0x88
	ObjectProperty WheelControl; // 0x90
	FName BoneName; // 0x98
	FVector BoneOffset; // 0xa0
	float WheelRadius; // 0xac
	float SuspensionTravel; // 0xb0
	float SuspensionSpeed; // 0xb4
	ObjectProperty WheelParticleSystem; // 0xb8
	EWheelSide Side; // 0xc0
	float LongSlipFactor; // 0xc4
	float LatSlipFactor; // 0xc8
	float HandbrakeLongSlipFactor; // 0xcc
	float HandbrakeLatSlipFactor; // 0xd0
	float ParkedSlipFactor; // 0xd4
	FVector WheelPosition; // 0xd8
	float SpinVel; // 0xe4
	float LongSlipRatio; // 0xe8
	float LatSlipAngle; // 0xec
	FVector ContactNormal; // 0xf0
	FVector LongDirection; // 0xfc
	FVector LatDirection; // 0x108
	float ContactForce; // 0x114
	float LongImpulse; // 0x118
	float LatImpulse; // 0x11c
	float DesiredSuspensionPosition; // 0x120
	float SuspensionPosition; // 0x124
	float CurrentRotation; // 0x128
	FPointer WheelShape; // 0x12c
	int32_t WheelMaterialIndex; // 0x134
	UParticleSystemComponent* WheelPSCClass; // 0x138
	ComponentProperty WheelParticleComp; // 0x140
	FName SlipParticleParamName; // 0x148
};

struct AAmbientSoundSimple : AAmbientSound {
	ObjectProperty AmbientProperties; // 0x294
	ObjectProperty SoundCueInstance; // 0x29c
	ObjectProperty SoundNodeInstance; // 0x2a4
};

struct UTgInventoryObject_Listen_CombatRepair : UTgInvListener {
	ObjectProperty m_CachedPawnOwner; // 0xc4
};

struct UAnimNodePlayCustomAnim : UAnimNodeBlend {
	char bIsPlayingCustomAnim : 1; // 0x124
	float CustomPendingBlendOutTime; // 0x128
};

struct UTgAIBehaviorComposite : UTgAIBehaviorNode {
	TArray<ObjectProperty> Children; // 0x94
	TArray<int32_t> ChildrenIndices; // 0xa4
	char bCompleteOnAll : 1; // 0xb4
	char bFailsOnAll : 1; // 0xb4
	char bRetryFailedChild : 1; // 0xb4
	char bFixedChildrenSize : 1; // 0xb4
};

struct ATgDeploy_Molotov : ATgDeploy_EffectSpots {
	TArray<FMolotovPointInfo> m_PointInfos; // 0x1a88
	FMolotovCenterInfo m_CenterInfo; // 0x1a98
	TArray<FMolotovTriangleInfo> m_TriInfos; // 0x1ae0
	TArray<FMolotovStrandInfo> m_StrandInfos; // 0x1af0
	FMolotovGrowthInfo m_GrowthInfo; // 0x1b00
	FMolotovGeneralSettings m_Settings; // 0x1b1c
};

struct UTgInvListener_SoulChargesConsumed : UTgInventoryObject_Listen_AbilityProcBase {
	char m_bIsListenerActive : 1; // 0xcc
	int32_t m_nNumSoulCharges; // 0xd0
};

struct UTgDeviceForm_Dominance : UTgDeviceForm {
	ObjectProperty m_SKCFlagScale; // 0x28c
};

struct UOnlineStatsRead : UOnlineStats {
	FString LeaderboardName; // 0x84
};

struct UUIDataChampions : UUIDataObject {
	ObjectProperty m_pActiveChampion; // 0x74
	TArray<ObjectProperty> m_Champions; // 0x7c
	TArray<ObjectProperty> m_InstallingChampions; // 0x8c
	TArray<ObjectProperty> m_PvEChampions; // 0x9c
	TArray<ObjectProperty> m_Collections; // 0xac
	TMap<None, None> m_PerChampionCollections; // 0xbc
	TMap<None, None> m_ChampionIdToData; // 0x104
	TMap<None, None> m_BotIdToVoicePackId; // 0x14c
	Fdword m_dwStoreVendorsRequestId; // 0x194
	Fdword m_dwRotationVendorRequestId; // 0x198
	float m_fInstallCheckTimer; // 0x19c
	float m_fInstallCheckInterval; // 0x1a0
	char m_bRotationVendorFullyLoadedCalled : 1; // 0x1a4
	char m_bStoreChampionsCalled : 1; // 0x1a4
};

struct UTgAnimBlendBySkin : UTgAnimNodeBlendList {
	TArray<FSkinChildInfo> m_SkinMap; // 0x168
};

struct ATgGame_Arena_Capture : ATgGame_Arena {
	int32_t s_nCaptureHostilePointXP; // 0x798
	int32_t s_nCaptureHostilePointGold; // 0x79c
	int32_t s_nReclaimPointXP; // 0x7a0
	int32_t s_nReclaimPointGold; // 0x7a4
	int32_t m_nCurrentActiveCapturePointIndex; // 0x7a8
	float m_fNewPointTime; // 0x7ac
};

struct UAnimNodeBlendMultiBone : UAnimNodeBlendBase {
	TArray<FChildBoneBlendInfo> BlendTargetList; // 0x114
	TArray<char> SourceRequiredBones; // 0x124
};

struct UTgAchievement_MitigateDuringAbility : UTgAchievement {
	ObjectProperty m_CachedDevice; // 0x94
};

struct USkelControlLimb : USkelControlBase {
	FVector EffectorLocation; // 0xd0
	EBoneControlSpace EffectorLocationSpace; // 0xdc
	EBoneControlSpace JointTargetLocationSpace; // 0xdd
	EBoneControlSpace JointOffsetSpace; // 0xde
	EAxis BoneAxis; // 0xdf
	EAxis JointAxis; // 0xe0
	FName EffectorSpaceBoneName; // 0xe4
	FVector JointTargetLocation; // 0xec
	FName JointTargetSpaceBoneName; // 0xf8
	FVector JointOffset; // 0x100
	FName JointOffsetBoneName; // 0x10c
	char bInvertBoneAxis : 1; // 0x114
	char bInvertJointAxis : 1; // 0x114
	char bRotateJoint : 1; // 0x114
	char bMaintainEffectorRelRot : 1; // 0x114
	char bTakeRotationFromEffectorSpace : 1; // 0x114
	char bAllowStretching : 1; // 0x114
	char m_bSnapEffectorToBoneLocation : 1; // 0x114
	FVector2D StretchLimits; // 0x118
	FName StretchRollBoneName; // 0x120
};

struct ATgModifyPawnPropertiesVolume : AVolume {
	int32_t m_nMapObjectId; // 0x2bc
	char m_bDisableJump : 1; // 0x2c0
	char m_bDisableBlockActors : 1; // 0x2c0
	char m_bDisableHanging : 1; // 0x2c0
	char m_bDisableAllDevices : 1; // 0x2c0
	char m_bTriggerUseEvent : 1; // 0x2c0
	char m_bOneWayMovement : 1; // 0x2c0
	FRotator m_vOnewWay; // 0x2c4
	ComponentProperty m_DirArrow; // 0x2d0
	int32_t s_nLootTableId; // 0x2d8
};

struct UUIComponent_EndOfMatchLobbyQuests : UUIComponent_Display {
	ObjectProperty m_mcQuestCount; // 0x124
	ObjectProperty m_pQuestPanels; // 0x12c
	ObjectProperty m_grQuests; // 0x134
};

struct UTgAchievement_DeviceHealing : UTgAchievement {
	int32_t m_nHealingDealt; // 0x94
};

struct APComVideoPlayer : AActor {
	FString VideoURL; // 0x280
	int32_t Width; // 0x290
	int32_t Height; // 0x294
	float Volume; // 0x298
	char bAutoResize : 1; // 0x29c
	char bConstrainAspectRatio : 1; // 0x29c
	char bDebugRender : 1; // 0x29c
	char bVideoFinished : 1; // 0x29c
	char bOnVideoFinishedIssued : 1; // 0x29c
	char bHasMinorStreamingProblem : 1; // 0x29c
	float ConstrainedAspectRatio; // 0x2a0
	FPointer Resource; // 0x2a4
	ObjectProperty RenderTargetToUse; // 0x2ac
	ObjectProperty TextureCopyForStreamingProblem; // 0x2b4
	float TimeSinceMinorStreamingProblem; // 0x2bc
	ObjectProperty StreamingProblemMaterial; // 0x2c0
	EPComVideoPlayerError CurrentErrorState; // 0x2c8
	EPComVideoPlayerError RenderThreadErrorState; // 0x2c9
	ObjectProperty BlackTexture; // 0x2cc
	DelegateProperty __OnVideoFinished__Delegate; // 0x2d4
	DelegateProperty __OnVideoError__Delegate; // 0x2e4
};

struct UTgSynchronizedTimer : UGFxObject {
	char m_bPausedByGame : 1; // 0x104
	char m_bSuppressCallback : 1; // 0x104
	char m_bRunning : 1; // 0x104
	char m_bPaused : 1; // 0x104
	ObjectProperty m_MP; // 0x108
	ObjectProperty m_TimerManager; // 0x110
};

struct UUIScene_UISummerEvent : UUIScene {
	ObjectProperty m_pTabs; // 0x1cc
	ObjectProperty m_pBack; // 0x1d4
	ObjectProperty m_pHome; // 0x1dc
	ObjectProperty m_pVault; // 0x1e4
	ObjectProperty m_pRewards; // 0x1ec
	ObjectProperty m_pOverview; // 0x1f4
	ObjectProperty m_pRotator; // 0x1fc
};

struct ATgAIController_BehaviorMapNpc : ATgAIController_Behavior {
	TArray<FThreatEntry> ThreatList; // 0x930
	char bThreatListDecays : 1; // 0x940
	char bOutsideLeash : 1; // 0x940
	char bHadCombatTarget : 1; // 0x940
	float LeashDistance; // 0x944
	ObjectProperty LeashVolume; // 0x948
	TArray<ObjectProperty> LeashActors; // 0x950
};

struct UUIScene_UIPopupDeal : UUIScene {
	ObjectProperty m_mcTitle; // 0x1cc
	ObjectProperty m_pDealPanel; // 0x1d4
	ObjectProperty m_pOkButton; // 0x1dc
	ObjectProperty m_pCancelButton; // 0x1e4
};

struct ATgDevice_CorvusUltFire : ATgDevice {
	ObjectProperty m_CorvusUltDevice; // 0xa04
	float m_fTraceDownDistance; // 0xa0c
};

struct UTgAIBehaviorCondition_CombatTargetHealthPercent : UTgAIBehaviorCondition {
	float HealthPct; // 0x98
};

struct AInventory : AActor {
	ObjectProperty Inventory; // 0x280
	ObjectProperty InvManager; // 0x288
	FString ItemName; // 0x290
	char bDropOnDeath : 1; // 0x2a0
	char bDelayedSpawn : 1; // 0x2a0
	char bPredictRespawns : 1; // 0x2a0
	float RespawnTime; // 0x2a4
	float MaxDesireability; // 0x2a8
	FString PickupMessage; // 0x2ac
	ObjectProperty PickupSound; // 0x2bc
	FString PickupForce; // 0x2c4
	ADroppedPickup* DroppedPickupClass; // 0x2d4
	ComponentProperty DroppedPickupMesh; // 0x2dc
	ComponentProperty PickupFactoryMesh; // 0x2e4
	ComponentProperty DroppedPickupParticles; // 0x2ec
};

struct USeqAct_MultiplyFloat : USeqAct_SetSequenceVariable {
	float ValueA; // 0x108
	float ValueB; // 0x10c
	float FloatResult; // 0x110
	int32_t IntResult; // 0x114
};

struct USoundNodeModulator : USoundNode {
	float PitchMin; // 0x74
	float PitchMax; // 0x78
	float VolumeMin; // 0x7c
	float VolumeMax; // 0x80
	FRawDistributionFloat PitchModulation; // 0x84
	FRawDistributionFloat VolumeModulation; // 0xa8
};

struct UUIComponent_RankedProgress : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_mcRank; // 0x12c
	ObjectProperty m_mcWins; // 0x134
	ObjectProperty m_mcLosses; // 0x13c
	ObjectProperty m_mcTier; // 0x144
	ObjectProperty m_mcTPLabel; // 0x14c
	ObjectProperty m_mcTP; // 0x154
	ObjectProperty m_pProgress; // 0x15c
};

struct UUIComponent_BannerButton : UUIComponent_Interactable {
	ObjectProperty m_pGamepadKey; // 0x140
	ObjectProperty m_pFrameButton; // 0x148
};

struct UUIWebBrowser : UTgGfxScene {
	char m_bAutoClose : 1; // 0x1ec
	char m_bDrawBorder : 1; // 0x1ec
	ObjectProperty m_mcFrame; // 0x1f0
	ObjectProperty m_mcBrowserShape; // 0x1f8
	ObjectProperty m_mcBackButton; // 0x200
	ObjectProperty m_mcForwardButton; // 0x208
	ObjectProperty m_mcCloseButton; // 0x210
};

struct UUIDataStore_OnlinePlaylists : UUIDataStore {
	FString ProviderClassName; // 0x98
	UUIResourceDataProvider* ProviderClass; // 0xa8
	TArray<ObjectProperty> RankedDataProviders; // 0xb0
	TArray<ObjectProperty> UnrankedDataProviders; // 0xc0
	TArray<ObjectProperty> RecModeDataProviders; // 0xd0
	TArray<ObjectProperty> PrivateDataProviders; // 0xe0
	ObjectProperty PlaylistMan; // 0xf0
};

struct UNavMeshGoalFilter_OutSideOfDotProductWedge : UNavMeshGoal_Filter {
	FVector Location; // 0x6c
	FVector Rotation; // 0x78
	float Epsilon; // 0x84
};

struct ATgDevice_Scout : ATgDevice {
	ObjectProperty m_CachedPawnOwner; // 0xa04
	TArray<ObjectProperty> m_AlliesScouted; // 0xa0c
	TArray<ObjectProperty> m_EnemiesScouted; // 0xa1c
	float m_fScoutRefreshTime; // 0xa2c
};

struct UTgAIBehaviorCondition_TimeSinceLastTookDamage : UTgAIBehaviorCondition {
	float TimeThreshold; // 0x98
	char bMustBeCombatTarget : 1; // 0x9c
};

struct UMaterialExpressionConstant3Vector : UMaterialExpression {
	float R; // 0xb0
	float G; // 0xb4
	float B; // 0xb8
};

struct USoundNodeDelay : USoundNode {
	float DelayMin; // 0x74
	float DelayMax; // 0x78
	FRawDistributionFloat DelayDuration; // 0x7c
};

struct UTgAnimBlendByNodeName : UTgAnimNodeBlendList {
	TArray<FNodeNameToChildIndex> m_NodeNameToChildIndex; // 0x168
	TArray<FRelevantNodeNameNodes> m_CachedNodes; // 0x178
	ObjectProperty m_LastSuccessfulAnimNode; // 0x188
	char m_bHasCachedNodes : 1; // 0x190
};

struct UTgAIUtilityFilter_InsideActiveRallyPoint : UTgAIUtilityFilter {
	char bAllowEnemyRally : 1; // 0xc0
};

struct APlayerController : AController {
	ObjectProperty Player; // 0x470
	ObjectProperty PlayerCamera; // 0x478
	ACamera* CameraClass; // 0x480
	char bFrozen : 1; // 0x488
	char bPressedJump : 1; // 0x488
	char bDoubleJump : 1; // 0x488
	char bUpdatePosition : 1; // 0x488
	char bUpdating : 1; // 0x488
	char bNeverSwitchOnPickup : 1; // 0x488
	char bCheatFlying : 1; // 0x488
	char bCameraPositionLocked : 1; // 0x488
	char bShortConnectTimeOut : 0; // 0x488
	char bPendingDestroy : 0; // 0x488
	char bWasSpeedHack : 0; // 0x488
	char bWasSaturated : 0; // 0x488
	char bAimingHelp : 0; // 0x488
	char bCameraCut : 0; // 0x488
	char bClientSimulatingViewTarget : 0; // 0x488
	char bHasVoiceHandshakeCompleted : 0; // 0x488
	char bCanPlayOnline : 0; // 0x488
	char bCanShareUserCreatedContent : 0; // 0x488
	char bCanCommunicateVoice : 0; // 0x488
	char bPrivilegesInitialized : 0; // 0x488
	char bIsCrossPlayEnabled : 0; // 0x488
	char bCinematicMode : 0; // 0x488
	char bInteractiveMode : 0; // 0x488
	char bCinemaDisableInputMove : 0; // 0x488
	char bCinemaDisableInputLook : 0; // 0x488
	char bRenderHUDFullScreen : 0; // 0x488
	char bIgnoreNetworkMessages : 0; // 0x488
	char bShowKismetDrawText : 0; // 0x488
	char bAcceptSendCorrections : 0; // 0x488
	char bReplicateAllPawns : 0; // 0x488
	char bIsUsingStreamingVolumes : 0; // 0x488
	char bIsExternalUIOpen : 0; // 0x488
	char bIsControllerConnected : 1; // 0x48c
	char bCheckSoundOcclusion : 1; // 0x48c
	char bDebugCameraAnims : 1; // 0x48c
	char bBlockCameraAnimsFromOverridingPostProcess : 1; // 0x48c
	char bLogHearSoundOverflow : 1; // 0x48c
	char bShowMoveErrors : 1; // 0x48c
	char bCheckRelevancyThroughPortals : 1; // 0x48c
	char bDebugClientAdjustPosition : 1; // 0x48c
	char bIsInTimelapse : 0; // 0x48c
	char bIsTimelapsePlayOfTheGame : 0; // 0x48c
	float MaxResponseTime; // 0x490
	float WaitDelay; // 0x494
	ObjectProperty AcknowledgedPawn; // 0x498
	EDoubleClickDir DoubleClickDir; // 0x4a0
	char bIgnoreMoveInput; // 0x4a1
	char bIgnoreLookInput; // 0x4a2
	char bRun; // 0x4a3
	char bDuck; // 0x4a4
	char NetPlayerIndex; // 0x4a5
	ObjectProperty ViewTarget; // 0x4a8
	ObjectProperty RealViewTarget; // 0x4b0
	ObjectProperty ControllingDirTrackInst; // 0x4b8
	float FOVAngle; // 0x4c0
	float DesiredFOV; // 0x4c4
	float DefaultFOV; // 0x4c8
	float LODDistanceFactor; // 0x4cc
	FRotator TargetViewRotation; // 0x4d0
	float TargetEyeHeight; // 0x4dc
	FRotator BlendedTargetViewRotation; // 0x4e0
	ObjectProperty myHUD; // 0x4ec
	ObjectProperty mySecondaryHUD; // 0x4f4
	USavedMove* SavedMoveClass; // 0x4fc
	ObjectProperty SavedMoves; // 0x504
	ObjectProperty FreeMoves; // 0x50c
	ObjectProperty PendingMove; // 0x514
	FVector LastAckedAccel; // 0x51c
	float CurrentTimeStamp; // 0x528
	float LastUpdateTime; // 0x52c
	float ServerTimeStamp; // 0x530
	float TimeMargin; // 0x534
	float ClientUpdateTime; // 0x538
	float MaxTimeMargin; // 0x53c
	float LastActiveTime; // 0x540
	int32_t ClientCap; // 0x544
	float DynamicPingThreshold; // 0x548
	float LastPingUpdate; // 0x54c
	float LastSpeedHackLog; // 0x550
	FClientAdjustment PendingAdjustment; // 0x554
	int32_t GroundPitch; // 0x58c
	ObjectProperty CheatManager; // 0x590
	UCheatManager* CheatClass; // 0x598
	ObjectProperty PlayerInput; // 0x5a0
	UPlayerInput* InputClass; // 0x5a8
	FVector FailedPathStart; // 0x5b0
	ComponentProperty CylinderComponent; // 0x5bc
	FString ForceFeedbackManagerClassName; // 0x5c4
	ObjectProperty ForceFeedbackManager; // 0x5d4
	TArray<ObjectProperty> Interactions; // 0x5dc
	TArray<FUniqueNetId> VoiceMuteList; // 0x5ec
	TArray<FUniqueNetId> GameplayVoiceMuteList; // 0x5fc
	TArray<FUniqueNetId> VoicePacketFilter; // 0x60c
	TArray<FConnectedPeerInfo> ConnectedPeers; // 0x61c
	TArray<FUniqueNetId> BestNextHostPeers; // 0x62c
	ObjectProperty MigratedSearchToJoin; // 0x63c
	ObjectProperty OnlineSub; // 0x644
	TScriptInterface<Class> VoiceInterface; // 0x64c
	ObjectProperty OnlinePlayerData; // 0x65c
	float InteractDistance; // 0x664
	FName DelayedJoinSessionName; // 0x668
	TArray<FInputMatchRequest> InputRequests; // 0x670
	float LastBroadcastTime; // 0x680
	FString LastBroadcastString[0x4]; // 0x684
	TArray<FName> PendingMapChangeLevelNames; // 0x6c4
	ObjectProperty MyCoverReplicator; // 0x6d4
	TArray<FDebugTextInfo> DebugTextList; // 0x6dc
	float SpectatorCameraSpeed; // 0x6ec
	ObjectProperty PendingSwapConnection; // 0x6f0
	float MinRespawnDelay; // 0x6f8
	int32_t MaxConcurrentHearSounds; // 0x6fc
	TArray<ComponentProperty> HearSoundActiveComponents; // 0x700
	TArray<ComponentProperty> HearSoundPoolComponents; // 0x710
	TArray<ObjectProperty> HiddenActors; // 0x720
	float m_RigidBodyMaxPositionErrorThreshold; // 0x730
	float LastSpectatorStateSynchTime; // 0x734
	FColor CurrentUpdateDebugColor; // 0x738
	DelegateProperty __OnMissingPeersUnregistered__Delegate; // 0x73c
	DelegateProperty __CanUnpause__Delegate; // 0x74c
	DelegateProperty __InputMatchDelegate__Delegate; // 0x75c
};

struct ATgDevice_Headhunter : ATgDevice_Stim {
	ObjectProperty m_CachedInhandDevice; // 0xa04
	ObjectProperty m_CachedSniperModeDevice; // 0xa0c
	char m_bCamFXEnabled : 1; // 0xa14
};

struct UFracturedStaticMesh : UStaticMesh {
	float CoreMeshScale; // 0x1dc
	char bSliceUsingCoreCollision : 1; // 0x210
	ObjectProperty FragmentDestroyEffect; // 0x214
	TArray<ObjectProperty> FragmentDestroyEffects; // 0x21c
	float FragmentDestroyEffectScale; // 0x22c
	float FragmentHealthScale; // 0x230
	float FragmentMinHealth; // 0x234
	float FragmentMaxHealth; // 0x238
	char bUniformFragmentHealth : 1; // 0x23c
	float ChunkLinVel; // 0x240
	float ChunkAngVel; // 0x244
	float ChunkLinHorizontalScale; // 0x248
	float ExplosionVelScale; // 0x24c
	char bCompositeChunksExplodeOnImpact : 1; // 0x250
	char bFixIsolatedChunks : 1; // 0x254
	char bAlwaysBreakOffIsolatedIslands : 1; // 0x258
	char bSpawnPhysicsChunks : 1; // 0x25c
	float ChanceOfPhysicsChunk; // 0x260
	float ExplosionChanceOfPhysicsChunk; // 0x264
	float NormalPhysicsChunkScaleMin; // 0x268
	float NormalPhysicsChunkScaleMax; // 0x26c
	float ExplosionPhysicsChunkScaleMin; // 0x270
	float ExplosionPhysicsChunkScaleMax; // 0x274
	float MinConnectionSupportArea; // 0x278
	ObjectProperty DynamicOutsideMaterial; // 0x27c
	ObjectProperty LoseChunkOutsideMaterial; // 0x284
	int32_t OutsideMaterialIndex; // 0x28c
};

struct ATgDevice_CorrupterSiphon : ATgDevice {
	ObjectProperty m_Corrupter; // 0xa04
};

struct UTgDeviceForm_VanguardGrab : UTgDeviceForm {
	TArray<ObjectProperty> m_VanguardGrabNodes3p; // 0x28c
	ObjectProperty m_Target; // 0x29c
	int32_t m_nPosture; // 0x2a4
};

struct UUIComponent_RolledSubItem : UUIComponent_Display {
	ObjectProperty m_mcDuplicate; // 0x124
	ObjectProperty m_pReplacementCurrency; // 0x12c
	ObjectProperty m_pItem; // 0x134
};

struct AMobileHUD : AHUD {
	char bShowGameHud : 1; // 0x5a0
	char bShowMobileHud : 1; // 0x5a0
	char bForceMobileHUD : 1; // 0x5a0
	char bShowMobileTilt : 1; // 0x5a0
	char bDebugTouches : 1; // 0x5a0
	char bDebugZones : 1; // 0x5a0
	char bDebugZonePresses : 1; // 0x5a0
	char bShowMotionDebug : 1; // 0x5a0
	ObjectProperty JoystickBackground; // 0x5a4
	FTextureUVs JoystickBackgroundUVs; // 0x5ac
	ObjectProperty JoystickHat; // 0x5bc
	FTextureUVs JoystickHatUVs; // 0x5c4
	ObjectProperty ButtonImages[0x2]; // 0x5d4
	FTextureUVs ButtonUVs[0x2]; // 0x5e4
	ObjectProperty ButtonFont; // 0x604
	FColor ButtonCaptionColor; // 0x60c
	ObjectProperty TrackballBackground; // 0x610
	FTextureUVs TrackballBackgroundUVs; // 0x618
	ObjectProperty TrackballTouchIndicator; // 0x628
	FTextureUVs TrackballTouchIndicatorUVs; // 0x630
	ObjectProperty SliderImages[0x4]; // 0x640
	FTextureUVs SliderUVs[0x4]; // 0x660
	float MobileTiltX; // 0x6a0
	float MobileTiltY; // 0x6a4
	float MobileTiltSize; // 0x6a8
	TArray<ObjectProperty> KismetRenderEvents; // 0x6ac
};

struct UInterpTrackSkelControlStrength : UInterpTrackFloatBase {
	FName SkelControlName; // 0xb8
};

struct ATcpLink : AInternetLink {
	ELinkState LinkState; // 0x2a4
	FIpAddr RemoteAddr; // 0x2a8
	ATcpLink* AcceptClass; // 0x2bc
	TArray<char> SendFIFO; // 0x2c4
	FString RecvBuf; // 0x2d4
};

struct ATgDevice_BunnyUlt : ATgDevice {
	ObjectProperty m_CachedBunny; // 0xa04
	ObjectProperty m_CurrentUltTarget; // 0xa0c
	char m_bRequireTargetToFire : 1; // 0xa14
};

struct USkeletalMeshSocket : UObject {
	FName SocketName; // 0x60
	FName BoneName; // 0x68
	FVector RelativeLocation; // 0x70
	FRotator RelativeRotation; // 0x7c
	FVector RelativeScale; // 0x88
	ComponentProperty PreviewSkelComp; // 0x94
};

struct UTgAudioComponent : UAudioComponent {
	char m_bCanBeHeardDuringStealth : 1; // 0x2cc
	float m_fStealthFadeInTime; // 0x2d0
	float m_fStealthFadeOutTime; // 0x2d4
	float m_fStealthVolumeMultiplier; // 0x2d8
};

struct UUIComponent_EndOfMatchLobbyBestClass : UUIComponent_Display {
	ObjectProperty m_pMVPs; // 0x124
	ObjectProperty m_grBestClass; // 0x12c
	ObjectProperty m_pBattlePassBanner; // 0x134
	ObjectProperty m_pGotoBPAction; // 0x13c
	ObjectProperty m_mcCommendationsRemaining; // 0x144
	ObjectProperty m_mcCommendationsRemainingTF; // 0x14c
};

struct ATgDevice_RespawnBeacon : ATgDevice {
	ObjectProperty s_BeaconExit; // 0xa04
	char r_bHasBeacon : 1; // 0xa0c
};

struct UUIComponent_EventBonusPanel : UUIComponent_Display {
	ObjectProperty m_mcTitleTF; // 0x124
	ObjectProperty m_mcUnlockTF; // 0x12c
	ObjectProperty m_pBonusItems; // 0x134
	ObjectProperty m_pLoadingFrame; // 0x13c
	ObjectProperty m_pUnlockAllButton; // 0x144
};

struct UUIHudPlayer_NPC : UUIHudPlayer_Base {
	ObjectProperty m_mcNPCIcon; // 0x32c
	ObjectProperty m_mcTF; // 0x334
};

struct UTgDeviceMod_CooldownOverride : UObject {
	char m_bAlwaysIgnoreCD : 1; // 0x60
	float m_fChanceToIgnoreCD; // 0x64
};

struct ATgDevice_Counter : ATgDevice {
	char r_bInterruptAfterCounterAttack : 1; // 0xa04
};

struct UMaterialExpressionDynamicParameter : UMaterialExpression {
	TArray<FString> ParamNames; // 0xb0
};

struct UUIHudTarget : UTgGfxScene {
	int32_t m_nOwnerBotId; // 0x1ec
	TArray<ObjectProperty> m_TargetingManagers; // 0x1f0
};

struct UParticleModuleSubUV : UParticleModuleSubUVBase {
	FRawDistributionFloat SubImageIndex; // 0x68
	char bUseRealTime : 1; // 0x8c
};

struct UParticleModuleLocationPrimitiveBase : UParticleModuleLocationBase {
	char Positive_X : 1; // 0x68
	char Positive_Y : 1; // 0x68
	char Positive_Z : 1; // 0x68
	char Negative_X : 1; // 0x68
	char Negative_Y : 1; // 0x68
	char Negative_Z : 1; // 0x68
	char SurfaceOnly : 1; // 0x68
	char Velocity : 1; // 0x68
	FRawDistributionFloat VelocityScale; // 0x6c
	FRawDistributionVector StartLocation; // 0x90
};

struct UTgIconDetails : UObject {
	ObjectProperty m_OwningGroup; // 0x60
	ObjectProperty m_mcIconObject; // 0x68
	ObjectProperty m_mcTexture; // 0x70
	ObjectProperty m_mcLoadingSpinner; // 0x78
	FString m_sTextureString; // 0x80
	FString m_sTag; // 0x90
	char m_bIsTextureSet : 1; // 0xa0
};

struct UInterpTrackInstFaceFX : UInterpTrackInst {
	char bFirstUpdate : 1; // 0x60
	float LastUpdatePosition; // 0x64
};

struct ATgBotEncounterVolume : AVolume {
	TArray<ObjectProperty> m_Factories; // 0x2bc
	int32_t m_nPlayers; // 0x2cc
};

struct UUIInteractable_Button_Currency : UUIInteractable_Button {
	ObjectProperty m_mcSlash; // 0x140
	ObjectProperty m_pKey; // 0x148
	ObjectProperty m_pCurrencies; // 0x150
};

struct UUIAccountLinkPopup : UTgGfxScene {
	FString m_sUserEmail; // 0x1ec
};

struct USeqAct_AddRemoveFaceFXAnimSet : USequenceAction {
	TArray<ObjectProperty> FaceFXAnimSets; // 0x108
};

struct UUIResourceDataProvider : UUIPropertyDataProvider {
	char bSkipDuringEnumeration : 1; // 0x90
};

struct UTgAnimNodeBlendByAFK : UTgAnimNodeBlendList {
	ObjectProperty PawnOwner; // 0x168
};

struct ATgWeaponMeshActor_RaumMinigun : ATgWeaponMeshActor {
	ObjectProperty m_CachedRaum; // 0x450
	ObjectProperty m_CachedInhandForm; // 0x458
	ObjectProperty m_PropWeapon; // 0x460
	FVector m_vPropWeaponOrigin; // 0x468
	char m_bPendingThrow : 1; // 0x474
	char c_b3PWepHiddenDueToThrow : 1; // 0x474
	float m_fPendingThrowTime; // 0x478
	float m_fMinimumThrowHistory; // 0x47c
	float m_fWeaponThrownFailsafeTime; // 0x480
	float m_fSyntheticShotAccuracyModifier; // 0x484
	float m_fReloadTimeToThrowWeapon; // 0x488
	float m_fReloadPctWeaponThrown; // 0x48c
	float m_fReloadTimeToRecoverWeapon; // 0x490
	float m_fThrowVelocityFactor; // 0x494
};

struct UCameraShake : UObject {
	char bSingleInstance : 1; // 0x60
	char bRandomAnimSegment : 1; // 0x60
	char bDoHUDShake : 1; // 0x60
	float OscillationDuration; // 0x64
	float OscillationBlendInTime; // 0x68
	float OscillationBlendOutTime; // 0x6c
	FROscillator RotOscillation; // 0x70
	FVOscillator LocOscillation; // 0x94
	FFOscillator FOVOscillation; // 0xb8
	ObjectProperty Anim; // 0xc4
	float AnimPlayRate; // 0xcc
	float AnimScale; // 0xd0
	float AnimBlendInTime; // 0xd4
	float AnimBlendOutTime; // 0xd8
	float RandomAnimSegmentDuration; // 0xdc
	FV2DOscillator HUDOscillation; // 0xe0
};

struct UTgSeqEvent_MICParameterEvent : USequenceEvent {
	eMICEventType MICEventType; // 0x128
	TArray<ObjectProperty> AttachedMICs; // 0x12c
};

struct UTgAnimNodeBlendByIntroduction : UTgAnimNodeBlendList {
	char m_bIsRelevant : 1; // 0x168
};

struct ARB_Thruster : ARigidBodyBase {
	char bThrustEnabled : 1; // 0x280
	float ThrustStrength; // 0x284
};

struct UActorFactoryDynamicSM : UActorFactory {
	ObjectProperty StaticMesh; // 0x9c
	FVector DrawScale3D; // 0xa4
	char bNoEncroachCheck : 1; // 0xb0
	char bNotifyRigidBodyCollision : 1; // 0xb0
	char bBlockRigidBody : 1; // 0xb0
	char bUseCompartment : 1; // 0xb0
	char bCastDynamicShadow : 1; // 0xb0
	ECollisionType CollisionType; // 0xb4
};

struct UInputAction : UUIData {
	FPointer VfTable_ITgCallbackInterface; // 0x64
	TArray<FInputKeyEvent> m_Keys; // 0x6c
	ObjectProperty m_CallbackContainer; // 0x7c
	char m_bAllowFallThrough : 1; // 0x84
};

struct UDistributionVectorUniformCurve : UDistributionVector {
	FInterpCurveTwoVectors ConstantCurve; // 0x7c
	char bLockAxes1 : 1; // 0x90
	char bLockAxes2 : 1; // 0x90
	char bUseExtremes : 1; // 0x90
	EDistributionVectorLockFlags LockedAxes[0x2]; // 0x94
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x96
};

struct USkeletalMesh : UObject {
	FBoxSphereBounds Bounds; // 0x60
	FVector LodCheckSphereOrigin; // 0x7c
	float LodCheckSphereRadius; // 0x88
	TArray<ObjectProperty> Materials; // 0x8c
	TArray<ObjectProperty> ClothingAssets; // 0x9c
	TArray<FApexClothingAssetInfo> ClothingLodMap; // 0xac
	FVector Origin; // 0xbc
	FRotator RotOrigin; // 0xc8
	TArray<int32_t> RefSkeleton; // 0xd4
	int32_t SkeletalDepth; // 0xe4
	TMap<None, None> NameIndexMap; // 0xe8
	FIndirectArray_Mirror LODModels; // 0x130
	FPointer SourceData; // 0x140
	TArray<FBoneAtom> RefBasesInvMatrix; // 0x148
	TArray<FBoneMirrorInfo> SkelMirrorTable; // 0x158
	EAxis SkelMirrorAxis; // 0x168
	EAxis SkelMirrorFlipAxis; // 0x169
	TArray<ObjectProperty> Sockets; // 0x16c
	TArray<FString> BoneBreakNames; // 0x17c
	TArray<BoneBreakOption> BoneBreakOptions; // 0x18c
	TArray<FSkeletalMeshLODInfo> LODInfo; // 0x19c
	TArray<FSkeletalMeshOptimizationSettings> OptimizationSettings; // 0x1ac
	TArray<FName> PerPolyCollisionBones; // 0x1bc
	TArray<FName> AddToParentPerPolyCollisionBone; // 0x1cc
	TArray<int32_t> PerPolyBoneKDOPs; // 0x1dc
	char bStripkDOP : 1; // 0x1ec
	char bPerPolyUseSoftWeighting : 1; // 0x1ec
	char bUseSimpleLineCollision : 1; // 0x1ec
	char bUseSimpleBoxCollision : 1; // 0x1ec
	char bForceCPUSkinning : 1; // 0x1ec
	char bUseFullPrecisionUVs : 1; // 0x1ec
	char bHasBeenSimplified : 1; // 0x1ec
	ObjectProperty FaceFXAsset; // 0x1f0
	int32_t LODBiasPC; // 0x1f8
	int32_t LODBiasPS3; // 0x1fc
	int32_t LODBiasXbox360; // 0x200
	int32_t LODBiasOrbis; // 0x204
	TArray<FPointer> ClothMesh; // 0x208
	TArray<float> ClothMeshScale; // 0x218
	TArray<int32_t> ClothToGraphicsVertMap; // 0x228
	TArray<float> ClothMovementScale; // 0x238
	ClothMovementScaleGen ClothMovementScaleGenMode; // 0x248
	float ClothToAnimMeshMaxDist; // 0x24c
	char bLimitClothToAnimMesh : 1; // 0x250
	TArray<int32_t> ClothWeldingMap; // 0x254
	int32_t ClothWeldingDomain; // 0x264
	TArray<int32_t> ClothWeldedIndices; // 0x268
	char bForceNoWelding : 1; // 0x278
	int32_t NumFreeClothVerts; // 0x27c
	TArray<int32_t> ClothIndexBuffer; // 0x280
	TArray<FName> ClothBones; // 0x290
	int32_t ClothHierarchyLevels; // 0x2a0
	char bEnableClothBendConstraints : 1; // 0x2a4
	char bEnableClothDamping : 1; // 0x2a4
	char bUseClothCOMDamping : 1; // 0x2a4
	float ClothStretchStiffness; // 0x2a8
	float ClothBendStiffness; // 0x2ac
	float ClothDensity; // 0x2b0
	float ClothThickness; // 0x2b4
	float ClothDamping; // 0x2b8
	int32_t ClothIterations; // 0x2bc
	int32_t ClothHierarchicalIterations; // 0x2c0
	float ClothFriction; // 0x2c4
	float ClothRelativeGridSpacing; // 0x2c8
	float ClothPressure; // 0x2cc
	float ClothCollisionResponseCoefficient; // 0x2d0
	float ClothAttachmentResponseCoefficient; // 0x2d4
	float ClothAttachmentTearFactor; // 0x2d8
	float ClothSleepLinearVelocity; // 0x2dc
	float HardStretchLimitFactor; // 0x2e0
	char bHardStretchLimit : 1; // 0x2e4
	char bEnableClothOrthoBendConstraints : 1; // 0x2e4
	char bEnableClothSelfCollision : 1; // 0x2e4
	char bEnableClothPressure : 1; // 0x2e4
	char bEnableClothTwoWayCollision : 1; // 0x2e4
	TArray<FClothSpecialBoneInfo> ClothSpecialBones; // 0x2e8
	char bEnableClothLineChecks : 1; // 0x2f8
	char bClothMetal : 1; // 0x2f8
	float ClothMetalImpulseThreshold; // 0x2fc
	float ClothMetalPenetrationDepth; // 0x300
	float ClothMetalMaxDeformationDistance; // 0x304
	char bEnableClothTearing : 1; // 0x308
	float ClothTearFactor; // 0x30c
	int32_t ClothTearReserve; // 0x310
	char bEnableValidBounds : 1; // 0x314
	FVector ValidBoundsMin; // 0x318
	FVector ValidBoundsMax; // 0x324
	FMap_Mirror ClothTornTriMap; // 0x330
	TArray<int32_t> SoftBodySurfaceToGraphicsVertMap; // 0x378
	TArray<int32_t> SoftBodySurfaceIndices; // 0x388
	TArray<FVector> SoftBodyTetraVertsUnscaled; // 0x398
	TArray<int32_t> SoftBodyTetraIndices; // 0x3a8
	TArray<FSoftBodyTetraLink> SoftBodyTetraLinks; // 0x3b8
	TArray<FPointer> CachedSoftBodyMeshes; // 0x3c8
	TArray<float> CachedSoftBodyMeshScales; // 0x3d8
	TArray<FName> SoftBodyBones; // 0x3e8
	TArray<FSoftBodySpecialBoneInfo> SoftBodySpecialBones; // 0x3f8
	float SoftBodyVolumeStiffness; // 0x408
	float SoftBodyStretchingStiffness; // 0x40c
	float SoftBodyDensity; // 0x410
	float SoftBodyParticleRadius; // 0x414
	float SoftBodyDamping; // 0x418
	int32_t SoftBodySolverIterations; // 0x41c
	float SoftBodyFriction; // 0x420
	float SoftBodyRelativeGridSpacing; // 0x424
	float SoftBodySleepLinearVelocity; // 0x428
	char bEnableSoftBodySelfCollision : 1; // 0x42c
	float SoftBodyAttachmentResponse; // 0x430
	float SoftBodyCollisionResponse; // 0x434
	float SoftBodyDetailLevel; // 0x438
	int32_t SoftBodySubdivisionLevel; // 0x43c
	char bSoftBodyIsoSurface : 1; // 0x440
	char bEnableSoftBodyDamping : 1; // 0x440
	char bUseSoftBodyCOMDamping : 1; // 0x440
	float SoftBodyAttachmentThreshold; // 0x444
	char bEnableSoftBodyTwoWayCollision : 1; // 0x448
	float SoftBodyAttachmentTearFactor; // 0x44c
	char bEnableSoftBodyLineChecks : 1; // 0x450
	char bHasVertexColors : 1; // 0x450
	TArray<char> GraphicsIndexIsCloth; // 0x454
	TArray<float> CachedStreamingTextureFactors; // 0x464
	float StreamingDistanceMultiplier; // 0x474
	int32_t ReleaseResourcesFence; // 0x478
	FQWord SkelMeshRUID; // 0x47c
	char bUseClothingAssetMaterial : 1; // 0x484
};

struct UParticleModuleLocationDirect : UParticleModuleLocationBase {
	FRawDistributionVector Location; // 0x68
	FRawDistributionVector LocationOffset; // 0x8c
	FRawDistributionVector ScaleFactor; // 0xb0
	FRawDistributionVector Direction; // 0xd4
};

struct AEmitterPool : AActor {
	ComponentProperty PSCTemplate; // 0x280
	TArray<ComponentProperty> PoolComponents; // 0x288
	TArray<ComponentProperty> ActiveComponents; // 0x298
	int32_t MaxActiveEffects; // 0x2a8
	int32_t InitialPooledComponentCount; // 0x2ac
	char bLogPoolOverflow : 1; // 0x2b0
	char bLogPoolOverflowList : 1; // 0x2b0
	TArray<FEmitterBaseInfo> RelativePSCs; // 0x2b4
	float SMC_MIC_ReductionTime; // 0x2c4
	float SMC_MIC_CurrentReductionTime; // 0x2c8
	int32_t IdealStaticMeshComponents; // 0x2cc
	int32_t IdealMaterialInstanceConstants; // 0x2d0
	TArray<ComponentProperty> FreeSMComponents; // 0x2d4
	TArray<ObjectProperty> FreeMatInstConsts; // 0x2e4
};

struct UTgAnimBlendByPaladinsCharacter_Drogoz : UTgAnimBlendByPaladinsCharacter {
	TArray<FName> m_AmmoSkelControlNames; // 0x544
	TArray<ObjectProperty> m_AmmoSkelControls; // 0x554
	ObjectProperty m_CachedDrogozPawn; // 0x564
};

struct ULightComponent : UActorComponent {
	FPointer SceneInfo; // 0x88
	FMatrix WorldToLight; // 0x90
	FMatrix LightToWorld; // 0xd0
	FGuid LightGuid; // 0x110
	FGuid LightmapGuid; // 0x120
	float Brightness; // 0x130
	FColor LightColor; // 0x134
	ObjectProperty Function; // 0x138
	char bEnabled : 1; // 0x140
	char CastShadows : 1; // 0x140
	char CastStaticShadows : 1; // 0x140
	char CastDynamicShadows : 1; // 0x140
	char bCastCompositeShadow : 1; // 0x140
	char bAffectCompositeShadowDirection : 1; // 0x140
	char bNonModulatedSelfShadowing : 1; // 0x140
	char bSelfShadowOnly : 1; // 0x140
	char bAllowPreShadow : 0; // 0x140
	char bForceDynamicLight : 0; // 0x140
	char UseDirectLightMap : 0; // 0x140
	char bHasLightEverBeenBuiltIntoLightMap : 0; // 0x140
	char bCanAffectDynamicPrimitivesOutsideDynamicChannel : 0; // 0x140
	char bRenderLightShafts : 0; // 0x140
	char bUseImageReflectionSpecular : 0; // 0x140
	char bPrecomputedLightingIsValid : 0; // 0x140
	char bExplicitlyAssignedLight : 0; // 0x140
	char bAllowCompositingIntoDLE : 0; // 0x140
	ComponentProperty LightEnvironment; // 0x144
	FLightingChannelContainer LightingChannels; // 0x14c
	ELightAffectsClassification LightAffectsClassification; // 0x150
	ELightShadowMode LightShadowMode; // 0x151
	FLinearColor ModShadowColor; // 0x154
	float ModShadowFadeoutTime; // 0x164
	float ModShadowFadeoutExponent; // 0x168
	int32_t LightListIndex; // 0x16c
	EShadowProjectionTechnique ShadowProjectionTechnique; // 0x170
	EShadowFilterQuality ShadowFilterQuality; // 0x171
	int32_t MinShadowResolution; // 0x174
	int32_t MaxShadowResolution; // 0x178
	int32_t ShadowFadeResolution; // 0x17c
	float OcclusionDepthRange; // 0x180
	float BloomScale; // 0x184
	float BloomThreshold; // 0x188
	float BloomScreenBlendThreshold; // 0x18c
	FColor BloomTint; // 0x190
	float RadialBlurPercent; // 0x194
	float OcclusionMaskDarkness; // 0x198
	float ReflectionSpecularBrightness; // 0x19c
	EDetailMode DetailMode; // 0x1a0
};

struct UTgInventoryObject_Listen_StandingStillSelfEffect : UTgInvListener {
	float m_fRestTime; // 0xc4
	char m_bIsApplied : 1; // 0xc8
	ObjectProperty m_CachedPawnOwner; // 0xcc
};

struct UTgInventoryObject_Listen_AdrenalineJunkie : UTgInvListener {
	ObjectProperty m_CachedRestoreStaminaDevice; // 0xc4
	ObjectProperty m_CachedNinjaSMG; // 0xcc
	float m_DamageRemainder; // 0xd4
};

struct ATgDevice_Kunai : ATgDevice {
	float m_fBurstSpreadHalfAngleDeg; // 0xa04
	FVector m_vProjectileSpawnOffsetLeft; // 0xa08
	FVector m_vProjectileSpawnOffsetRight; // 0xa14
};

struct ATgDeploy_DistortionField : ATgDeploy_EffectAura {
	float m_fRadiusVFXScale; // 0x4b0
};

struct UTgAIBehaviorAction_SelectLaneMoveTarget_Minotaur : UTgAIBehaviorAction {
	char bMustBeEnemy : 1; // 0x94
};

struct UTgSeqEvent_ControlPointOwnershipChange_Server : USequenceEvent {
	int32_t PointIndex; // 0x128
};

struct ASpeedTreeActor : AActor {
	ComponentProperty SpeedTreeComponent; // 0x280
};

struct UUIComponent_BPReward : UUIComponent_Display {
	ObjectProperty m_mcRarity; // 0x124
	ObjectProperty m_mcHighlight; // 0x12c
	ObjectProperty m_mcLock; // 0x134
	ObjectProperty m_mcChestIcon; // 0x13c
	ObjectProperty m_mcIcon; // 0x144
	ObjectProperty m_mcCardIcon; // 0x14c
	ObjectProperty m_Avatar; // 0x154
};

struct UTgInventoryObject_Listen_Combo_Grohk : UTgInventoryObject_Listen_Combo {
	float m_fFirstHitThisTickTimestamp; // 0xcc
	int32_t m_nHitsThisChain; // 0xd0
	char m_bBonusActive : 1; // 0xd4
};

struct ATgGame_Mission : ATgGame {
	char m_bSpawnInTaskForceArea : 1; // 0x624
	char s_bPreGuardianPhasePulsed : 1; // 0x624
	char s_bGuardianPhasePulsed : 1; // 0x624
	char s_bWasSurrendered : 1; // 0x624
	char m_bSurrenderAvailable : 1; // 0x624
	char m_bAllowAutoUpgrades : 1; // 0x624
	char m_bUsePlayerCharacterIntros : 1; // 0x624
	GameTimerState m_eTimerState; // 0x628
	GameTimerState m_eTimerStatePaused; // 0x629
	float m_fMissionTime; // 0x62c
	float m_fSecondaryMissionTime; // 0x630
	float m_fWaitingForPlayersTime; // 0x634
	float m_fSetupTime; // 0x638
	float m_fPausedAtTime; // 0x63c
	float m_fGameMissionTime; // 0x640
	float s_MissionTimeAccumulator; // 0x644
	TArray<ObjectProperty> s_ReadyPlayers; // 0x648
	int32_t s_nReadyMercs; // 0x658
	float m_fTickCreditsFreq; // 0x65c
	float m_fCreditsToGivePerTick; // 0x660
	int32_t m_nStartingCurrency; // 0x664
	int32_t m_nStartingLevel; // 0x668
	int32_t m_nWinBonusXp; // 0x66c
	int32_t m_nWinPlayerXp; // 0x670
	int32_t m_nLosePlayerXp; // 0x674
	float m_fGodXpCoefficient; // 0x678
	float m_fGodXpCoefficientLoss; // 0x67c
	float m_fGodXpWinBonus; // 0x680
	float m_fFreeVIPWinPoints; // 0x684
	float m_fFreeVIPLossPoints; // 0x688
	float m_fFreeVIPPerMinute; // 0x68c
	float m_fPaidVIPWinPoints; // 0x690
	float m_fPaidVIPLossPoints; // 0x694
	float m_fPaidVIPPerMinute; // 0x698
	float m_fBattlePassWinBonus; // 0x69c
	float m_fBaseTokens; // 0x6a0
	int32_t m_nKillTokens; // 0x6a4
	int32_t m_nWinBonusTokens; // 0x6a8
	UTgMinimapManager* m_MinimapManagerClass; // 0x6ac
	FSurrenderData s_SurrenderData[0x2]; // 0x6b4
	float m_fSurrenderTime; // 0x6fc
	int32_t m_XPRadius; // 0x700
	float m_MinionKillerBonus; // 0x704
	float m_BasePlayerGoldReward; // 0x708
	float m_fFirstBloodGoldReward; // 0x70c
	float m_fBasePlayerAssistGoldRewardMultipler; // 0x710
	float m_fBasePlayerAssistXpRewardMultipler; // 0x714
	float m_fBaseNPCAssistGoldRewardMultipler; // 0x718
	float m_fBaseNPCAssistXpRewardMultipler; // 0x71c
	TArray<ObjectProperty> m_MinionGoals; // 0x720
	int32_t m_nLastTimeDilationWindowId; // 0x730
	TArray<FTimeDilationWindow> m_ActiveTimeDilationWindows; // 0x734
};

struct ATgSplineActor : ASplineActor {
	ELanePusherActionPoint m_ActionPoint; // 0x2e8
	char m_bPreview : 1; // 0x2ec
};

struct UUIComponent_MasteryRewardsEntry : UUIComponent_Display {
	ObjectProperty m_mcLockIcon; // 0x124
	ObjectProperty m_mcLevelText; // 0x12c
	ObjectProperty m_mcRewardType; // 0x134
	ObjectProperty m_mcRewardName; // 0x13c
	ObjectProperty m_mcRewardTitle; // 0x144
	ObjectProperty m_mcRewardChest; // 0x14c
	ObjectProperty m_mcRewardCurrency; // 0x154
	ObjectProperty m_mcRewardCurrencyTF; // 0x15c
	ObjectProperty m_mcCardIcon; // 0x164
	ObjectProperty m_mcItemIcon; // 0x16c
	ObjectProperty m_mcTextureIcon; // 0x174
	ObjectProperty m_mcRarity; // 0x17c
	ObjectProperty m_pFrameButton; // 0x184
	ObjectProperty m_pPriceButton; // 0x18c
};

struct UTgAnimNodeChannelFire_CorvusUlt : UTgAnimNodeChannelFire {
	CorvusUltAnimState m_eAnimState; // 0x180
};

struct ATgSkeletalMeshActor_DestructibleTowerChunk : ATgSkeletalMeshActorSpawnable {
	ComponentProperty TgSkeletalMeshComp; // 0x32c
};

struct ATgDevice_Spray : ATgDevice {
	char m_bMissedSpray : 1; // 0xa04
	int32_t m_nSelectedSpray; // 0xa08
};

struct UPath_WithinDistanceEnvelope : UPathConstraint {
	float MaxDistance; // 0x6c
	float MinDistance; // 0x70
	char bSoft : 1; // 0x74
	char bOnlyThrowOutNodesThatLeaveEnvelope : 1; // 0x74
	float SoftStartPenalty; // 0x78
	FVector EnvelopeTestPoint; // 0x7c
};

struct UTgGameplayCurvesSet : UObject {
	ECurveSetTypes CurveSetType; // 0x60
};

struct UTimeLapseRecordingDriver : UNetDriver {
	FString DemoSpectatorClass; // 0x208
	float DefaultRewindTime; // 0x218
};

struct UParticleModuleColor : UParticleModuleColorBase {
	FRawDistributionVector StartColor; // 0x68
	FRawDistributionFloat StartAlpha; // 0x8c
	char bClampAlpha : 1; // 0xb0
};

struct UInterpTrackInstHeadTracking : UInterpTrackInst {
	EHeadTrackingAction Action; // 0x60
	TMap<None, None> CurrentActorMap; // 0x64
	ComponentProperty Mesh; // 0xac
	TArray<ObjectProperty> TrackControls; // 0xb4
	float LastUpdatePosition; // 0xc4
};

struct UTgSeqCond_HasCondition : USequenceCondition {
	ConditionType ConditionList; // 0xec
};

struct UTgAIBehaviorAction_SetBotBehaviorState : UTgAIBehaviorAction {
	EBotBehaviorState DesiredBehaviorState; // 0x94
};

struct UUIComponent_HalloweenEventStore : UUIComponent_Display {
	char m_bOwnsMapYing : 1; // 0x124
	char m_bOwnsMapFernando : 1; // 0x124
	char m_bOwnsMapVivian : 1; // 0x124
	ObjectProperty m_mcMapWarning; // 0x128
	ObjectProperty m_mcMapWarningTF0; // 0x130
	ObjectProperty m_mcMapWarningTF1; // 0x138
	ObjectProperty m_mcMapWarningIcon; // 0x140
	ObjectProperty m_mcCurrencyTF; // 0x148
	ObjectProperty m_mcButtonBG; // 0x150
	ObjectProperty m_pGoldDoubloons; // 0x158
	ObjectProperty m_pDarkDoubloons; // 0x160
	ObjectProperty m_pItemPreview; // 0x168
	ObjectProperty m_pUnlockButton; // 0x170
	ObjectProperty m_pStoreBundles; // 0x178
	ObjectProperty m_pStoreItems; // 0x180
	ObjectProperty m_grStore; // 0x188
	ObjectProperty m_pUnlockAction; // 0x190
	FVector m_vBaseCameraOffset; // 0x198
	FVector m_vDeathStampCameraOffset; // 0x1a4
};

struct UTgInventoryObject_Listen_DeployOnAbility : UTgInventoryObject_Listen_AbilityProcBase {
	EDeployOnAbilityType m_eDeployType; // 0xcc
};

struct UUIComponent_PlayTraining : UUIComponent_Display {
	ObjectProperty m_mcDailyQueueBonusNotification; // 0x124
	ObjectProperty m_mcDailyQueueBonusNotificationTF; // 0x12c
	ObjectProperty m_mcDailyQueueBonusIcon; // 0x134
	ObjectProperty m_pPanels; // 0x13c
	ObjectProperty m_grInput; // 0x144
};

struct UPlayerInput : UInput {
	char bUsingGamepad : 1; // 0x178
	char bInvertMouse : 1; // 0x178
	char bInvertController : 1; // 0x178
	char bInvertTurn : 1; // 0x178
	char bWasForward : 1; // 0x178
	char bWasBack : 1; // 0x178
	char bWasLeft : 1; // 0x178
	char bWasRight : 1; // 0x178
	char bEdgeForward : 0; // 0x178
	char bEdgeBack : 0; // 0x178
	char bEdgeLeft : 0; // 0x178
	char bEdgeRight : 0; // 0x178
	char bEnableMouseSmoothing : 0; // 0x178
	char bEnableFOVScaling : 0; // 0x178
	char bLockTurnUntilRelease : 0; // 0x178
	FName LastAxisKeyName; // 0x17c
	float DoubleClickTimer; // 0x184
	float DoubleClickTime; // 0x188
	float MouseSensitivity; // 0x18c
	float m_fLookSensitivity; // 0x190
	float m_fLookSensitivityY; // 0x194
	float m_fLookAccelSpeed; // 0x198
	float m_fDeadZoneLeft; // 0x19c
	float m_fDeadZoneRight; // 0x1a0
	float aBaseX; // 0x1a4
	float aBaseY; // 0x1a8
	float aBaseZ; // 0x1ac
	float aMouseX; // 0x1b0
	float aMouseY; // 0x1b4
	float aForward; // 0x1b8
	float aTurn; // 0x1bc
	float aStrafe; // 0x1c0
	float aUp; // 0x1c4
	float aLookUp; // 0x1c8
	float aRightAnalogTrigger; // 0x1cc
	float aLeftAnalogTrigger; // 0x1d0
	float aPS3AccelX; // 0x1d4
	float aPS3AccelY; // 0x1d8
	float aPS3AccelZ; // 0x1dc
	float aPS3Gyro; // 0x1e0
	float aWiiUPointerX; // 0x1e4
	float aWiiUPointerY; // 0x1e8
	FVector aTilt; // 0x1ec
	FVector aRotationRate; // 0x1f8
	FVector aGravity; // 0x204
	FVector aAcceleration; // 0x210
	FVector aTouch[0x5]; // 0x21c
	FVector aBackTouch[0x5]; // 0x258
	float RawJoyUp; // 0x294
	float RawJoyRight; // 0x298
	float RawJoyLookRight; // 0x29c
	float RawJoyLookUp; // 0x2a0
	float MoveForwardSpeed; // 0x2a4
	float MoveStrafeSpeed; // 0x2a8
	float LookRightScale; // 0x2ac
	float LookUpScale; // 0x2b0
	char bStrafe; // 0x2b4
	char bXAxis; // 0x2b5
	char bYAxis; // 0x2b6
	float ZeroTime[0x2]; // 0x2b8
	float SmoothedMouse[0x2]; // 0x2c0
	int32_t MouseSamples; // 0x2c8
	float MouseSamplingTotal; // 0x2cc
	float AutoUnlockTurnTime; // 0x2d0
};

struct USeqCond_CompareInt : USequenceCondition {
	int32_t ValueA; // 0xec
	int32_t ValueB; // 0xf0
};

struct UPBRuleNodeSplit : UPBRuleNodeBase {
	EProcBuildingAxis SplitAxis; // 0x70
	TArray<FRBSplitInfo> SplitSetup; // 0x74
};

struct UTgDeviceForm_HexaFire : UTgDeviceForm {
	ObjectProperty m_LeftRocket1p; // 0x28c
	ObjectProperty m_LeftRocket3p; // 0x294
	ObjectProperty m_RightRocket1p; // 0x29c
	ObjectProperty m_RightRocket3p; // 0x2a4
	char m_bFiringRightRocket : 1; // 0x2ac
};

struct UUIComponent_ItemColorPickerEntry : UUIComponent_Display {
	ObjectProperty m_mcHighlight; // 0x124
	ObjectProperty m_mcEquipped; // 0x12c
	ObjectProperty m_mcLock; // 0x134
	ObjectProperty m_mcColor; // 0x13c
};

struct UUIData_MultiQueue : UUIData {
	int32_t nIcon; // 0x64
	FString sName; // 0x68
	FString sDesc; // 0x78
	TArray<ObjectProperty> pQueues; // 0x88
};

struct USeqAct_Deproject : USequenceAction {
	float ScreenX; // 0x108
	float ScreenY; // 0x10c
	float TraceDistance; // 0x110
	ObjectProperty HitObject; // 0x114
	FVector HitLocation; // 0x11c
	FVector HitNormal; // 0x128
};

struct UNavMeshPath_WithinDistanceEnvelope : UNavMeshPathConstraint {
	float MaxDistance; // 0x78
	float MinDistance; // 0x7c
	char bSoft : 1; // 0x80
	char bOnlyThrowOutNodesThatLeaveEnvelope : 1; // 0x80
	float SoftStartPenalty; // 0x84
	FVector EnvelopeTestPoint; // 0x88
};

struct UParticleModuleAccelerationOverLifetime : UParticleModuleAccelerationBase {
	FRawDistributionVector AccelOverLife; // 0x6c
};

struct AGameCrowdAgent : ACrowdAgentBase {
	FPointer VfTable_IInterface_RVO; // 0x288
	ObjectProperty MyGroup; // 0x290
	FVector PreferredVelocity; // 0x298
	FVector PendingVelocity; // 0x2a4
	ObjectProperty CurrentDestination; // 0x2b0
	ObjectProperty BehaviorDestination; // 0x2b8
	ObjectProperty PreviousDestination; // 0x2c0
	float InterpZTranslation; // 0x2c8
	int32_t Health; // 0x2cc
	float DeadBodyDuration; // 0x2d0
	ComponentProperty LightEnvironment; // 0x2d4
	int32_t ConformTraceFrameCount; // 0x2dc
	TArray<FNearbyDynamicItem> NearbyDynamics; // 0x2e0
	char bUniformScale : 1; // 0x2f0
	char bCheckForObstacles : 1; // 0x2f0
	char bUseNavMeshPathing : 1; // 0x2f0
	char bWantsSeePlayerNotification : 1; // 0x2f0
	char bAllowPitching : 1; // 0x2f0
	char bHitObstacle : 1; // 0x2f0
	char bBadHitNormal : 1; // 0x2f0
	char bSimulateThisTick : 1; // 0x2f0
	char bPotentialEncounter : 0; // 0x2f0
	char bIsPanicked : 0; // 0x2f0
	char bWantsGroupIdle : 0; // 0x2f0
	char bPreferVisibleDestination : 0; // 0x2f0
	char bPreferVisibleDestinationOnSpawn : 0; // 0x2f0
	char bHasNotifiedSpawner : 0; // 0x2f0
	char bIsInSpawnPool : 0; // 0x2f0
	char bPaused : 0; // 0x2f0
	EConformType ConformType; // 0x2f4
	float ConformTraceDist; // 0x2f8
	int32_t ConformTraceInterval; // 0x2fc
	int32_t CurrentConformTraceInterval; // 0x300
	float LastGroundZ; // 0x304
	float AwareRadius; // 0x308
	float AvoidOtherRadius; // 0x30c
	TArray<FAvoidOtherSampleItem> AvoidOtherSampleList; // 0x310
	float PENALTY_COEFF_ANGLETOGOAL; // 0x320
	float PENALTY_COEFF_ANGLETOVEL; // 0x324
	float PENALTY_COEFF_MAG; // 0x328
	float MIN_PENALTY_THRESHOLD; // 0x32c
	float LastProgressTime; // 0x330
	float LastFallbackActiveTime; // 0x334
	float MaxPathLaneValue; // 0x338
	float CurrentPathLaneValue; // 0x33c
	int32_t ExtraPathCost; // 0x340
	float RotateToTargetSpeed; // 0x344
	float MaxYawRate; // 0x348
	FVector MeshMinScale3D; // 0x34c
	FVector MeshMaxScale3D; // 0x358
	float EyeZOffset; // 0x364
	float ProximityLODDist; // 0x368
	float VisibleProximityLODDist; // 0x36c
	FVector LastKnownGoodPosition; // 0x370
	float GroundOffset; // 0x37c
	FVector IntermediatePoint; // 0x380
	FVector SearchExtent; // 0x38c
	UNavigationHandle* NavigationHandleClass; // 0x398
	ObjectProperty NavigationHandle; // 0x3a0
	int32_t ObstacleCheckCount; // 0x3a8
	float WalkableFloorZ; // 0x3ac
	float LastPathingAttempt; // 0x3b0
	float LastUpdateTime; // 0x3b4
	float NotVisibleLifeSpan; // 0x3b8
	ObjectProperty MyArchetype; // 0x3bc
	float MaxWalkingSpeed; // 0x3c4
	float MaxRunningSpeed; // 0x3c8
	float MaxSpeed; // 0x3cc
	TArray<FRecentInteraction> RecentInteractions; // 0x3d0
	float BeaconMaxDist; // 0x3e0
	FVector BeaconOffset; // 0x3e4
	ObjectProperty BeaconTexture; // 0x3f0
	FLinearColor BeaconColor; // 0x3f8
	ObjectProperty AmbientSoundCue; // 0x408
	ComponentProperty AmbientSoundComponent; // 0x410
	ObjectProperty CurrentBehavior; // 0x418
	float CurrentBehaviorActivationTime; // 0x420
	TArray<FBehaviorEntry> EncounterAgentBehaviors; // 0x424
	TArray<FBehaviorEntry> SeePlayerBehaviors; // 0x434
	float MaxSeePlayerDistSq; // 0x444
	float SeePlayerInterval; // 0x448
	TArray<FBehaviorEntry> SpawnBehaviors; // 0x44c
	TArray<FBehaviorEntry> UneasyBehaviors; // 0x45c
	TArray<FBehaviorEntry> AlertBehaviors; // 0x46c
	TArray<FBehaviorEntry> PanicBehaviors; // 0x47c
	TArray<FBehaviorEntry> RandomBehaviors; // 0x48c
	TArray<FBehaviorEntry> TakeDamageBehaviors; // 0x49c
	float RandomBehaviorInterval; // 0x4ac
	float ForceUpdateTime; // 0x4b0
	float ReachThreshold; // 0x4b4
	TArray<FBehaviorEntry> GroupWaitingBehaviors; // 0x4b8
	float DesiredGroupRadius; // 0x4c8
	float DesiredGroupRadiusSq; // 0x4cc
	float MaxLOSLifeDistanceSq; // 0x4d0
	TScriptInterface<Class> MySpawner; // 0x4d4
	FVector SpawnOffset; // 0x4e4
	float InitialLastRenderTime; // 0x4f0
	FColor DebugAgentColor; // 0x4f4
	ObjectProperty DebugSpawnDest; // 0x4f8
};

struct UAnimNotify_AkEvent : UAnimNotify {
	ObjectProperty AkEvent; // 0x68
	char bFollowActor : 1; // 0x70
	char m_bIgnoreIfMeshHidden : 1; // 0x70
	char m_bIgnoreIfActorHidden : 1; // 0x70
	FName BoneName; // 0x74
};

struct ATgEmitter_CameraEffect_DamageBase : ATgEmitter_CameraEffect {
	EDamageEffectScreenLocation ScreenLocation; // 0x2c0
};

struct UUIScene_UIHudDruid : UUIScene {
	ObjectProperty m_MoonJuiceBar; // 0x1cc
	char m_bViewTargetDruid : 1; // 0x1d4
	char m_bHudVisible : 1; // 0x1d4
	char m_bMoonJuiceVisible : 1; // 0x1d4
	ObjectProperty m_CachedDruid; // 0x1d8
	float m_fMoonJuiceCurrent; // 0x1e0
	float m_fMoonJuiceUpdateSpeed; // 0x1e4
};

struct ATgDevice_Whirlwind2 : ATgDevice_ActiveAura {
	float c_fOverrideUltEnergy; // 0xa64
};

struct ATgWeaponMeshActor_LongbowInhand : ATgWeaponMeshActor {
	ObjectProperty m_CachedLongbow; // 0x450
	char m_bPlayingPlantedFireSFX : 1; // 0x458
	char m_bPlayingUltimateFireSFX : 1; // 0x458
};

struct ATgProj_CorrupterBaseProjectile : ATgProj_ExtraColliders {
	ObjectProperty m_Corrupter; // 0x55c
	ObjectProperty m_FireSpecial; // 0x564
};

struct UTgAnimSequenceChain : UTgAnimNodeBlendList {
	char m_bLoopChain : 1; // 0x168
	char m_bResetOnRelevant : 1; // 0x168
	char m_bDelayBlendOutToPlayAnim : 1; // 0x168
	char m_bAdvanceOnReplay : 1; // 0x168
	char m_bAdvanceOnAnimEnd : 1; // 0x168
	char m_bIsAllowedToBlendOut : 1; // 0x168
	char m_ReplayedThisFrame : 1; // 0x168
};

struct UTgSeqAct_HackBot : USequenceAction {
	ObjectProperty m_ControlPawn; // 0x108
};

struct UTgAIBehaviorAction_SelectLaneMoveTarget_Jungle : UTgAIBehaviorAction {
	EJungleTargetType TargetType; // 0x94
};

struct UUIComponent_EventPlayPanel : UUIComponent_Display {
	ObjectProperty m_mcWarningTF; // 0x124
	ObjectProperty m_pPlayButton; // 0x12c
	ObjectProperty m_pKey; // 0x134
	ObjectProperty m_pPlayButtonAction; // 0x13c
};

struct UTgGameplayCurvesSet_HitReactions : UTgGameplayCurvesSet {
	FRawDistributionFloat ReactionStrengthOverTime; // 0x64
	FRawDistributionFloat ReactionStrengthOverTimeDelayed; // 0x88
	FRawDistributionFloat ReactionStrengthByDamage; // 0xac
};

struct UTgGamePhase : UObject {
	float m_fDuration; // 0x60
	float m_fDurationTimer; // 0x64
	char m_bPhaseReadyToEnd : 1; // 0x68
	char m_bPhaseEnded : 1; // 0x68
	char m_bLoop : 1; // 0x68
	char m_bInstantaneous : 1; // 0x68
	char m_bBroadcastTime : 1; // 0x68
	char m_bSkipDecoratorPhases : 1; // 0x68
	FString m_name; // 0x6c
	ObjectProperty m_parentGame; // 0x7c
	ObjectProperty m_parentPhase; // 0x84
	TArray<ObjectProperty> m_childPhases; // 0x8c
	TArray<ObjectProperty> m_decoratorPhases; // 0x9c
	ObjectProperty m_CurrentPhase; // 0xac
	int32_t m_nPersistentTextID; // 0xb4
};

struct UTgSeqEvent_PlayerInitialized : USequenceEvent {
	char bLocalPlayerOnly : 1; // 0x128
};

struct UInterpFilter : UObject {
	FString Caption; // 0x60
};

struct UMaterialExpressionDivide : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
};

struct UOnlineStats : UObject {
	int32_t TotalRowsInView; // 0x60
	TArray<FOnlineStatsRow> Rows; // 0x64
	TArray<FColumnMetaData> ColumnData; // 0x74
};

struct ATgDeploy_ChurchillWard : ATgDeployable {
	char r_bTargetVisible : 1; // 0x46c
	float r_fRadiusScale; // 0x470
	ObjectProperty m_CachedChurchill; // 0x474
};

struct UApexClothingAsset : UApexAsset {
	TArray<FClothingLodInfo> LodMaterialInfo; // 0x80
	FPointer MApexAsset; // 0x90
	TArray<ObjectProperty> Materials; // 0x98
	ObjectProperty ApexClothingLibrary; // 0xa8
	char bUseHardwareCloth : 1; // 0xb0
	char bFallbackSkinning : 1; // 0xb0
	char bSlowStart : 1; // 0xb0
	char bRecomputeNormals : 1; // 0xb0
	char bAllowAdaptiveTargetFrequency : 1; // 0xb0
	char bResetAfterTeleport : 1; // 0xb0
	char bUseLocalSpaceSimulation : 1; // 0xb0
	char bHasUniqueAssetMaterialNames : 1; // 0xb0
	char IgnoreInitialTrigger : 0; // 0xb0
	int32_t UVChannelForTangentUpdate; // 0xb4
	float MaxDistanceBlendTime; // 0xb8
	float ContinuousRotationThreshold; // 0xbc
	float ContinuousDistanceThreshold; // 0xc0
	float LodWeightsMaxDistance; // 0xc4
	float LodWeightsDistanceWeight; // 0xc8
	float LodWeightsBias; // 0xcc
	float LodWeightsBenefitsBias; // 0xd0
	float LODDecayTime; // 0xd4
	ObjectProperty SoundOnMove; // 0xd8
	ObjectProperty SoundOnRest; // 0xe0
	ObjectProperty SoundWhileMoving; // 0xe8
	float SpeedThresholdOnMove; // 0xf0
	float SpeedThresholdOnRest; // 0xf4
};

struct UUIComponent_MojiCounter : UUIComponent_Display {
	ObjectProperty m_CurrentViewRider; // 0x124
	ObjectProperty m_CurrentTarget; // 0x12c
	int32_t m_nCurrentStacks; // 0x134
	ObjectProperty m_mcFillCounter; // 0x138
	ObjectProperty m_mcMaxStacks; // 0x140
	ObjectProperty m_mcMaxStacksAnim; // 0x148
};

struct UMaterialExpressionStaticComponentMaskParameter : UMaterialExpressionParameter {
	FExpressionInput Input; // 0xd0
	char DefaultR : 1; // 0x104
	char DefaultG : 1; // 0x104
	char DefaultB : 1; // 0x104
	char DefaultA : 1; // 0x104
	FPointer InstanceOverride; // 0x108
};

struct UInterpGroupInstAI : UInterpGroupInst {
	ObjectProperty AIGroup; // 0x88
	EPhysics SavedPhysics; // 0x90
	char bSavedNoEncroachCheck : 1; // 0x94
	char bSavedCollideActors : 1; // 0x94
	char bSavedBlockActors : 1; // 0x94
	ObjectProperty StageMarkActor; // 0x98
};

struct USlotToSlotReachSpec : UForcedReachSpec {
	char SpecDirection; // 0xc8
};

struct UMobileMenuList : UMobileMenuObject {
	char bIsVerticalList : 1; // 0xdc
	char bDisableScrolling : 1; // 0xdc
	char bForceSelectedToLineup : 1; // 0xdc
	char bTapToScrollToItem : 1; // 0xdc
	char bLoops : 1; // 0xdc
	float SelectedOffset; // 0xe0
	TArray<ObjectProperty> Items; // 0xe4
	FSelectedMenuItem SelectedItem; // 0xf4
	FMenuListDragInfo Drag; // 0x100
	FMenuListMovementInfo Movement; // 0x154
	float Deacceleration; // 0x170
	float EaseOutExp; // 0x174
	FIntPoint ScreenSize; // 0x178
	int32_t FirstVisible; // 0x180
	int32_t LastVisible; // 0x184
	int32_t NumShowEndOfList; // 0x188
	float EndOfListSupression; // 0x18c
};

struct UTgAnimNodePlayFireAnim : UTgAnimNodeBlendList {
	FName FireAnimNodeName; // 0x168
	ObjectProperty FireAnimNodeSequence; // 0x170
};

struct ATgDevice_Somersault : ATgDevice {
	ObjectProperty m_DodgeRollDevice; // 0xa04
};

struct UTgDeviceForm_YagorathUlt : UTgDeviceForm {
	ObjectProperty m_Target; // 0x28c
	int32_t m_nPosture; // 0x294
	float m_fZoomOutTimer; // 0x298
	float m_fZoomOutDist; // 0x29c
	float m_fZoomInDist; // 0x2a0
	float m_fDisableEatFxTimer; // 0x2a4
	YagorathUltAnimState m_eYagorathUltAnimState; // 0x2a8
	TArray<ObjectProperty> m_YagorathUltNodes3p; // 0x2ac
	TArray<ObjectProperty> m_YagorathUltNodes1p; // 0x2bc
};

struct ULightmappedSurfaceCollection : UObject {
	ObjectProperty SourceModel; // 0x60
	TArray<int32_t> Surfaces; // 0x68
};

struct ATgKAsset_ClientSideSim : AKAsset {
	float m_fDamageImpulse; // 0x29c
	ComponentProperty m_Arrow; // 0x2a0
	ComponentProperty m_ForceSprite; // 0x2a8
	char m_bEnableWind : 1; // 0x2b0
	char m_bEnableGusts : 1; // 0x2b0
	char bAnimates : 1; // 0x2b0
	float m_fWindForceMin; // 0x2b4
	float m_fWindForceMax; // 0x2b8
	float m_fWindForceStrength; // 0x2bc
	float m_fWindForceTargetStrength; // 0x2c0
	float m_fWindFrequency; // 0x2c4
	float m_fWindForceRemainingTime; // 0x2c8
	FVector m_vWindDirection; // 0x2cc
	float m_fForceDistance; // 0x2d8
	float m_fForceZOffsetMultiplier; // 0x2dc
	float m_fGustActiveTime; // 0x2e0
	FVector2D m_vTimeBetweenGusts; // 0x2e4
	float m_fGustActiveRemainingTime; // 0x2ec
	float m_fTimeTillNextGust; // 0x2f0
	FVector2D m_WindFrequencyMultiplier; // 0x2f4
	FVector2D m_WindForceMultiplier; // 0x2fc
};

struct USeqEvent_MobileRawInput : USequenceEvent {
	int32_t TouchIndex; // 0x128
	int32_t TouchpadIndex; // 0x12c
	float TouchLocationX; // 0x130
	float TouchLocationY; // 0x134
	float TimeStamp; // 0x138
};

struct ATgGameLaunch : AGameInfo {
	FString LoginName; // 0x4cc
	FString LoginPwd; // 0x4dc
	char SaveLoginName : 1; // 0x4ec
};

struct ALight : AActor {
	ComponentProperty LightComponent; // 0x280
	char bEnabled : 1; // 0x288
};

struct UCommandlet : UObject {
	FString HelpDescription; // 0x60
	FString HelpUsage; // 0x70
	FString HelpWebLink; // 0x80
	TArray<FString> HelpParamNames; // 0x90
	TArray<FString> HelpParamDescriptions; // 0xa0
	char IsServer : 1; // 0xb0
	char IsClient : 1; // 0xb0
	char IsEditor : 1; // 0xb0
	char LogToConsole : 1; // 0xb0
	char ShowErrorCount : 1; // 0xb0
};

struct UTgInventoryObject_Listen_YagorathObjectiveTalent : UTgInventoryObject_Listen_NearObjective {
	float m_fExitObjectiveTimeStamp; // 0xd0
	float m_fEffectDeactivationPeriod; // 0xd4
};

struct UTgGamePhase_PlayMusic : UTgGamePhase {
	ENotifySound m_eMusicID; // 0xb8
};

struct UTgAchievement_KillDuringAbility : UTgAchievement {
	ObjectProperty m_CachedDevice; // 0x94
};

struct UTgAchievement_SurgeonGeneral : UTgAchievement {
	int32_t m_nHealing; // 0x94
};

struct ATgDevice_BunnyHeal : ATgDevice {
	ObjectProperty m_CachedBunny; // 0xa04
	ObjectProperty m_CurrentHealTarget; // 0xa0c
	int32_t m_nMaxHealTargets; // 0xa14
	float m_fSeekingSearchRadius; // 0xa18
	char m_bCanHealPastTargets : 1; // 0xa1c
	float m_fHealBounceDelay; // 0xa20
	TArray<FBunnyHealHistoryEntry> m_BunnyHealHistory; // 0xa24
};

struct ATgDevice_CommanderScope : ATgDevice_ToggleADS {
	ObjectProperty m_CachedInhandDev; // 0xa1c
};

struct UUIData_SprayRental : UUIData {
	ObjectProperty pChestData; // 0x64
	int32_t nSprayItemId; // 0x6c
	int32_t nSprayVendorId; // 0x70
	int32_t nChestItemId; // 0x74
	int32_t nLootId; // 0x78
	int32_t nBundleVendorId; // 0x7c
	int32_t nBundleCount; // 0x80
	int32_t nBundleLootIds[0x4]; // 0x84
	int32_t nBundleItemCounts[0x4]; // 0x94
};

struct ATgWeaponMeshActor_LianInhand : ATgWeaponMeshActor {
	ObjectProperty m_CachedLian; // 0x450
	ObjectProperty c_GraceTracers[0xf]; // 0x458
	char c_bTracersVisible : 1; // 0x4d0
};

struct AGameCrowdReplicationActor : AActor {
	ObjectProperty Spawner; // 0x280
	char bSpawningActive : 1; // 0x288
	int32_t DestroyAllCount; // 0x28c
};

struct ANxForceFieldGeneric : ANxForceField {
	ObjectProperty Shape; // 0x2d4
	ComponentProperty DrawComponent; // 0x2dc
	float RoughExtentX; // 0x2e4
	float RoughExtentY; // 0x2e8
	float RoughExtentZ; // 0x2ec
	FFG_ForceFieldCoordinates Coordinates; // 0x2f0
	FVector Constant; // 0x2f4
	FVector PositionMultiplierX; // 0x300
	FVector PositionMultiplierY; // 0x30c
	FVector PositionMultiplierZ; // 0x318
	FVector PositionTarget; // 0x324
	FVector VelocityMultiplierX; // 0x330
	FVector VelocityMultiplierY; // 0x33c
	FVector VelocityMultiplierZ; // 0x348
	FVector VelocityTarget; // 0x354
	FVector Noise; // 0x360
	FVector FalloffLinear; // 0x36c
	FVector FalloffQuadratic; // 0x378
	float TorusRadius; // 0x384
	FPointer LinearKernel; // 0x388
};

struct ULandscapeHeightfieldCollisionComponent : UPrimitiveComponent {
	FUntypedBulkData_Mirror CollisionHeightData; // 0x24c
	TArray<FName> ComponentLayers; // 0x28c
	FUntypedBulkData_Mirror DominantLayerData; // 0x29c
	int32_t SectionBaseX; // 0x2dc
	int32_t SectionBaseY; // 0x2e0
	int32_t CollisionSizeQuads; // 0x2e4
	float CollisionScale; // 0x2e8
	TArray<char> CollisionQuadFlags; // 0x2ec
	TArray<ObjectProperty> PhysicalMaterials; // 0x2fc
	FPointer RBHeightfield; // 0x30c
	char bHasKDOPData : 1; // 0x314
	char bIncludeHoles : 1; // 0x314
	char bHeightFieldDataHasHole : 1; // 0x314
	FPointer kDOPTree; // 0x318
	TArray<FVector> kDOPCollisionVerts; // 0x320
	FBoxSphereBounds CachedBoxSphereBounds; // 0x330
};

struct UGameUISceneClient : UUISceneClient {
	float LatestDeltaTime; // 0x11c
	FDouble DoubleClickStartTime; // 0x120
	FIntPoint DoubleClickStartPosition; // 0x128
	FMap_Mirror InitialPressedKeys; // 0x130
	char bUpdateInputProcessingStatus : 1; // 0x178
	char bUpdateSceneViewportSizes : 1; // 0x178
	char bEnableDebugInput : 1; // 0x178
	char bRenderDebugInfo : 1; // 0x178
	char bCaptureUnprocessedInput : 1; // 0x178
	TArray<FName> NavAliases; // 0x17c
	TArray<FName> AxisInputKeys; // 0x18c
};

struct UTgAnimNotify_ViewShake : UAnimNotify_ViewShake {
	float m_fShakeRadius; // 0xbc
	float m_fDuration; // 0xc0
	float m_fAmplitude; // 0xc4
	char m_bUseLocationRadiusBasedShake : 1; // 0xc8
};

struct UUIScene_UIChallengeSystem : UUIScene {
	ObjectProperty m_pChallengeSystemDisplay; // 0x1cc
	ObjectProperty m_GamepadPurchaseInput; // 0x1d4
	ObjectProperty m_SwitchToRewards; // 0x1dc
	ObjectProperty m_SwitchToHubs; // 0x1e4
	float m_fTickTimer; // 0x1ec
	float m_fPlayerUpdateTimer; // 0x1f0
	char m_bPlayerIsUpdated : 1; // 0x1f4
	float m_fPlayerUpdateFrequency; // 0x1f8
};

struct UTgDeviceFire_RestoreSoul : UTgDeviceFire {
	float m_fServerRangeBufferMult; // 0x268
	float m_fBaseEncroachmentActorRange; // 0x26c
};

struct UMobileMenuObjectProxy : UMobileMenuObject {
	DelegateProperty __OnTouchEvent__Delegate; // 0xdc
	DelegateProperty __OnRenderObject__Delegate; // 0xec
};

struct UUIComponent_BattlePassPurchasePanel : UUIComponent_Display {
	ObjectProperty m_mcLevel; // 0x124
	ObjectProperty m_mcDiamond; // 0x12c
	ObjectProperty m_mcName; // 0x134
	ObjectProperty m_mcRarity; // 0x13c
	ObjectProperty m_mcDesc; // 0x144
	ObjectProperty m_mcOwned; // 0x14c
	ObjectProperty m_mcOwnedTF; // 0x154
	ObjectProperty m_mcUnlockCheck; // 0x15c
	ObjectProperty m_mcTeaser; // 0x164
	ObjectProperty m_pPurchaseButton; // 0x16c
	Fdword m_dwRequiredLevel; // 0x174
	char m_bPremium : 1; // 0x178
	ObjectProperty m_InputPurchase; // 0x17c
};

struct USeqAct_PrepareMapChange : USeqAct_Latent {
	FName MainLevelName; // 0x120
	TArray<FName> InitiallyLoadedSecondaryLevelNames; // 0x128
	char bIsHighPriority : 1; // 0x138
	char bStatusIsOk : 1; // 0x138
};

struct UUIComponent_LobbyEquipSlotItem : UUIComponent_Display {
	ObjectProperty m_mcTypeIcon; // 0x124
	ObjectProperty m_pCTA; // 0x12c
	ObjectProperty m_pInteractable; // 0x134
};

struct UFractureMaterial : UObject {
	ObjectProperty FractureEffect; // 0x60
	ObjectProperty FractureSound; // 0x68
};

struct UUIComponent_Display : UUIComponent {
	ObjectProperty m_pData; // 0x118
	char m_bCallbacksRegistered : 1; // 0x120
};

struct UUIComponent_RadialSlotSpray : UUIComponent_Display {
	ObjectProperty m_mcSprayDisplayLock; // 0x124
	ObjectProperty m_mcSprayDisplayRarity; // 0x12c
	ObjectProperty m_mcSprayDisplayTexture; // 0x134
	ObjectProperty m_mcSprayDisplayIcon; // 0x13c
	ObjectProperty m_SprayDisplay; // 0x144
	ObjectProperty m_SprayDisplayPurchaseButton; // 0x14c
};

struct UUIProfile : UTgGfxScene {
	int32_t m_nPlayer; // 0x1ec
	int32_t m_nAwardScrollIndex; // 0x1f0
	int32_t m_nHistoryScrollIndex; // 0x1f4
	int32_t m_nAwardTotal; // 0x1f8
	int32_t m_nAwardCurrent; // 0x1fc
	int32_t m_nSelectedVoicePackCurrent; // 0x200
	char m_bScrollAwards : 1; // 0x204
	char m_bScrollHistory : 1; // 0x204
	char m_bScrollChampions : 1; // 0x204
	char m_bLoadedActivities : 1; // 0x204
	char m_bPreviewCamera : 1; // 0x204
	PROFILESTATE m_eState; // 0x208
	TArray<FUIAwardData> m_AwardData; // 0x20c
	TArray<FUIHistoryData> m_Matches; // 0x21c
	ObjectProperty m_mcOverview; // 0x22c
	ObjectProperty m_mcOverviewPlayerEquippedTitle; // 0x234
	ObjectProperty m_mcOverviewSubtitle; // 0x23c
	ObjectProperty m_mcOverviewRatingTitle; // 0x244
	ObjectProperty m_mcOverviewRatingDetails; // 0x24c
	ObjectProperty m_mcOverviewRatingSubtitle; // 0x254
	ObjectProperty m_mcOverviewCustomerID; // 0x25c
	ObjectProperty m_mcOverviewBonus; // 0x264
	ObjectProperty m_mcOverviewBonusBonusIcon; // 0x26c
	ObjectProperty m_mcOverviewBonusBonusIconIcon; // 0x274
	ObjectProperty m_mcOverviewBonusBonusIconFrame; // 0x27c
	ObjectProperty m_mcOverviewBonusTitle; // 0x284
	ObjectProperty m_mcOverviewBonusBoostActive; // 0x28c
	ObjectProperty m_mcOverviewBonusEntry[0x4]; // 0x294
	ObjectProperty m_grOverview; // 0x2b4
	ObjectProperty m_pTitlesView; // 0x2bc
	ObjectProperty m_pPlayerName; // 0x2c4
	ObjectProperty m_pHeaderSubmenu; // 0x2cc
	ObjectProperty m_mcLoadout; // 0x2d4
	ObjectProperty m_LoadoutCategories; // 0x2dc
	ObjectProperty m_grLoadout; // 0x2e4
	ObjectProperty m_LoadoutSubscenes[0x9]; // 0x2ec
	int32_t m_nCurrentLoadoutSubscene; // 0x334
	ObjectProperty m_mcAwards; // 0x338
	ObjectProperty m_mcAwardScroll; // 0x340
	ObjectProperty m_mcAwardTotalProgress; // 0x348
	ObjectProperty m_mcAwardTotalProgressTip; // 0x350
	ObjectProperty m_mcAwardTotalProgressFill; // 0x358
	ObjectProperty m_mcAwardTotalProgressTitle; // 0x360
	ObjectProperty m_mcAwardTotalProgressSubtitle; // 0x368
	ObjectProperty m_mcAwardRow[0x8]; // 0x370
	ObjectProperty m_mcAwardDate[0x8]; // 0x3b0
	ObjectProperty m_mcAwardIcon[0x8]; // 0x3f0
	ObjectProperty m_mcAwardTitle[0x8]; // 0x430
	ObjectProperty m_mcAwardFrame[0x8]; // 0x470
	ObjectProperty m_mcAwardPoints[0x8]; // 0x4b0
	ObjectProperty m_mcAwardSubtitle[0x8]; // 0x4f0
	ObjectProperty m_mcAwardReward[0x8]; // 0x530
	ObjectProperty m_mcAwardRewardCurrency[0x8]; // 0x570
	ObjectProperty m_mcAwardRewardTF[0x8]; // 0x5b0
	ObjectProperty m_mcAwardReward2[0x8]; // 0x5f0
	ObjectProperty m_mcAwardRewardCurrency2[0x8]; // 0x630
	ObjectProperty m_mcAwardRewardTF2[0x8]; // 0x670
	ObjectProperty m_mcAwardRewardTitle[0x8]; // 0x6b0
	ObjectProperty m_mcAwardHighlight[0x8]; // 0x6f0
	ObjectProperty m_mcAwardProgressFill[0x8]; // 0x730
	ObjectProperty m_mcAwardProgressText[0x8]; // 0x770
	ObjectProperty m_grAward; // 0x7b0
	ObjectProperty m_mcHistory; // 0x7b8
	ObjectProperty m_mcHistoryScroll; // 0x7c0
	ObjectProperty m_mcHistoryRow[0x8]; // 0x7c8
	ObjectProperty m_mcHistoryDate[0x8]; // 0x808
	ObjectProperty m_mcHistoryName[0x8]; // 0x848
	ObjectProperty m_mcHistoryType[0x8]; // 0x888
	ObjectProperty m_mcHistoryIcon[0x8]; // 0x8c8
	ObjectProperty m_mcHistoryMode[0x8]; // 0x908
	ObjectProperty m_mcHistoryFrame[0x8]; // 0x948
	ObjectProperty m_mcHistoryMatch[0x8]; // 0x988
	ObjectProperty m_mcHistoryScore[0x8]; // 0x9c8
	ObjectProperty m_mcHistoryResult[0x8]; // 0xa08
	ObjectProperty m_mcHistoryDetails[0x8]; // 0xa48
	ObjectProperty m_mcHistoryChampion[0x8]; // 0xa88
	ObjectProperty m_mcHistoryDuration[0x8]; // 0xac8
	ObjectProperty m_grHistory; // 0xb08
	int32_t m_nTitleToEquip; // 0xb10
	float m_fQueuedTitleEquipTimer; // 0xb14
	float m_fTitleEquipDelay; // 0xb18
	ObjectProperty m_pSelectAction; // 0xb1c
};

struct ATgSpawnTeleporterExit : AActor {
	int32_t nTaskForce; // 0x280
	int32_t nLane; // 0x284
	int32_t nGamePhase; // 0x288
	int32_t nPriority; // 0x28c
	char bEnabled : 1; // 0x290
};

struct ATgWeaponMeshActor_LexInhand : ATgWeaponMeshActor {
	ObjectProperty m_CachedLex; // 0x450
	ObjectProperty c_Beams[0x5]; // 0x458
	ObjectProperty c_ExecutableBeams[0x5]; // 0x480
	TArray<ObjectProperty> m_LexCharacterNodes1P; // 0x4a8
	TArray<ObjectProperty> m_LexCharacterNodes3P; // 0x4b8
	FName c_LeftInHandSocket; // 0x4c8
	FName c_RightInHandSocket; // 0x4d0
	char c_bJustRenderedBeamsForUlt : 1; // 0x4d8
	EBeamState c_eBeamState; // 0x4dc
};

struct ARB_RadialImpulseActor : ARigidBodyBase {
	ComponentProperty RenderComponent; // 0x280
	ComponentProperty ImpulseComponent; // 0x288
	char ImpulseCount; // 0x290
};

struct UTgMiniMap_Targeting : UTgMiniMap {
	ObjectProperty m_MICWardTarget[0x6]; // 0x5bc
};

struct UUIComponent_HealthBarDamageOverlay : UUIComponent_Display {
	ObjectProperty m_HealthbarOwner; // 0x124
	char m_bWidthDirty : 1; // 0x12c
	char m_bPulseLowHealth : 1; // 0x12c
	char m_bDisabled : 1; // 0x12c
	int32_t m_nDamageBarExtraWidth; // 0x130
	int32_t m_nLowHealthBarExtraWidth; // 0x134
	ObjectProperty m_mcDamageOverlay; // 0x138
	ObjectProperty m_mcLowHealthOverlay; // 0x140
	float m_fOnDamageColorMaxThreshold; // 0x148
	float m_fOnDamageColorMinThreshold; // 0x14c
	float m_fLowHealthPulseMaxThreshold; // 0x150
	float m_fLowHealthPulseMinThreshold; // 0x154
	float m_fLowHealthPulseInterp; // 0x158
	float m_fLowHealthPulseMinInterpSpeed; // 0x15c
	float m_fLowHealthPulseMaxInterpSpeed; // 0x160
	float m_fLowHealthInterpExp; // 0x164
	float m_fOnDamageMaxAlpha; // 0x168
	float m_fLowHealthMinAlpha; // 0x16c
	float m_fLowHealthMaxAlpha; // 0x170
};

struct UUIScene_UIHnHEvent : UUIScene {
	ObjectProperty m_pTabs; // 0x1cc
	ObjectProperty m_pBack; // 0x1d4
	ObjectProperty m_pRotator; // 0x1dc
	ObjectProperty m_pHome; // 0x1e4
	ObjectProperty m_pStore; // 0x1ec
	ObjectProperty m_pQuests; // 0x1f4
	ObjectProperty m_pOverview; // 0x1fc
};

struct UMaterialExpressionFrac : UMaterialExpression {
	FExpressionInput Input; // 0xb0
};

struct UUIComponent_ChestDisplay : UUIComponent_Display {
	ObjectProperty m_mcGlowA; // 0x124
	ObjectProperty m_mcGlowB; // 0x12c
};

struct UUIComponent_MatchInvite : UUIComponent {
	ObjectProperty m_mcWaiting; // 0x118
	ObjectProperty m_pTimerProgress; // 0x120
	ObjectProperty m_pSpinner; // 0x128
	TArray<ObjectProperty> m_PlayerData; // 0x130
	ObjectProperty m_Players; // 0x140
	int32_t m_nTickCallbackHandle; // 0x148
};

struct UPhysicsAssetInstance : UObject {
	ObjectProperty Owner; // 0x60
	int32_t RootBodyIndex; // 0x68
	TArray<ObjectProperty> Bodies; // 0x6c
	TArray<ObjectProperty> Constraints; // 0x7c
	FMap_Mirror CollisionDisableTable; // 0x8c
	float LinearSpringScale; // 0xd4
	float LinearDampingScale; // 0xd8
	float LinearForceLimitScale; // 0xdc
	float AngularSpringScale; // 0xe0
	float AngularDampingScale; // 0xe4
	float AngularForceLimitScale; // 0xe8
	char bInitBodies : 1; // 0xec
	char m_bPreviewBreakingConstraintsOnDeath : 1; // 0xec
};

struct ATgDevice_DimensionalLink : ATgDevice {
	ObjectProperty m_CachedYingPawn; // 0xa04
	ObjectProperty s_CycleTargets[0xa]; // 0xa0c
	int32_t s_nNumCycleTargets; // 0xa5c
	int32_t s_nCurrentCycleTargetIndex; // 0xa60
	TArray<FDLTeleportTargets> m_TeleportTargets; // 0xa64
	TArray<FDLDeadTeleportTargets> m_DeadTeleportTargets; // 0xa74
	FDLRewindTargets m_RewindTargets[0x1e]; // 0xa84
	int32_t m_CurrentRewindIndex; // 0xd54
	int32_t m_ValidRewindIndex1; // 0xd58
	int32_t m_ValidRewindIndex2; // 0xd5c
	int32_t m_nNumPrevRewindsToCheck; // 0xd60
	float m_fRewindMinTargetDist; // 0xd64
	float m_fRewindMinNextPointDist; // 0xd68
	float m_fLastRewindTimestamp; // 0xd6c
	char m_bRequiresReset : 1; // 0xd70
	char m_bSwappingPeriodEnded : 1; // 0xd70
	ObjectProperty r_nCurrentCycleTarget; // 0xd74
	ObjectProperty m_CachedCardRewind; // 0xd7c
	DelegateProperty __PawnEvent__Delegate; // 0xd84
};

struct UMaterialExpressionTime : UMaterialExpression {
	char bIgnorePause : 1; // 0xb0
};

struct UTgAnimBlendByPhysics : UTgAnimNodeBlendList {
	int32_t PhysicsMap[0xe]; // 0x168
	int32_t LastPhysics; // 0x1a0
};

struct ATgGame_PaladinsExtended : ATgGame_Paladins {
	float m_fWinningTickets; // 0x868
	char m_bTicketsPersist : 1; // 0x86c
	char m_bKillLanePusherOnWallDestroyed : 1; // 0x86c
	char m_bKeepThisPointForNextRound : 1; // 0x86c
	char m_bConvergeCompletely : 1; // 0x86c
	char m_bCanCaptureDuringSurvival : 1; // 0x86c
	char m_bCanAutoPushForward : 1; // 0x86c
	char m_bConvergeCompletelyAfterDelay : 1; // 0x86c
	char m_bOverrideSpawnTableID : 1; // 0x86c
	char m_bActivateSpawnGatesAtStart : 0; // 0x86c
	char m_bRevivePlayersWhenSiegeEngineDies : 0; // 0x86c
	char m_bStasisTimerOn : 0; // 0x86c
	char m_bActivateAllCapturePoints : 0; // 0x86c
	char m_bPointContested : 0; // 0x86c
	char m_bPointCaptureOvertimeTF1 : 0; // 0x86c
	char m_bPointCaptureOvertimeTF2 : 0; // 0x86c
	char m_bSimpleOvertime : 0; // 0x86c
	char m_bSimpleOvertimeEnabled : 0; // 0x86c
	char m_bCapturePointContestDurationEnabled : 0; // 0x86c
	char m_bTF1Backsliding : 0; // 0x86c
	char m_bTF2Backsliding : 0; // 0x86c
	char m_bEndRoundWhenPointCaptured : 0; // 0x86c
	char m_bSpawnLanePusherWhenPointCaptured : 0; // 0x86c
	char m_bCaptureSpawnAlerts : 0; // 0x86c
	char m_bResetPlayersNotInSpawnRoomDisabled : 0; // 0x86c
	float m_fTicketsForKill; // 0x870
	float m_fTicketsPerCaptureTick; // 0x874
	float m_fTicketsBonusPerMultiCapture; // 0x878
	float m_fTicketsPerPointCapture; // 0x87c
	float m_fTF1Tickets; // 0x880
	float m_fTF2Tickets; // 0x884
	float m_fTicketsPerTicketDisparity; // 0x888
	float m_fSecondsPerTicketDisparity; // 0x88c
	float m_fMaximumDisparitySeconds; // 0x890
	float m_fObjectiveRepickTickets; // 0x894
	float m_fLastObjectiveRepickTickets; // 0x898
	float m_fRoundLimitDuration; // 0x89c
	float s_fRoundLimitElapsed; // 0x8a0
	int32_t m_nPointsForReachingTicketMax; // 0x8a4
	int32_t m_nPointsForReachingRoundTimeLimit; // 0x8a8
	float m_fSecondaryGoalScore; // 0x8ac
	float m_fSecondaryScoreAmount; // 0x8b0
	float m_fObjectivePickTime; // 0x8b4
	float m_fSetupObjectivePickTime; // 0x8b8
	float m_fSpawnGateOpenTime; // 0x8bc
	float m_fAttackersSpawnGateOpenTime; // 0x8c0
	float m_fDefendersSpawnGateOpenTime; // 0x8c4
	float m_fSetupSpawnGateOpenTime; // 0x8c8
	float m_fObjectiveActivationTime; // 0x8cc
	int32_t m_SpawnTableIndex; // 0x8d0
	ObjectProperty m_CapturedPoint; // 0x8d4
	ObjectProperty m_LastActiveCapturePoint; // 0x8dc
	TArray<ObjectProperty> m_CapturePointQueue; // 0x8e4
	int32_t s_nCurrentCapturePointQueueIndex; // 0x8f4
	TArray<FCardInfo> m_CardVendor; // 0x8f8
	int32_t m_nRegLanePusherHPScaling; // 0x908
	int32_t m_nRegLanePusherPowerScaling; // 0x90c
	int32_t m_nGuardianHPScaling; // 0x910
	int32_t m_nGuardianPowerScaling; // 0x914
	int32_t m_nOuterGateHPScaling; // 0x918
	int32_t m_nInnerGateHPScaling; // 0x91c
	int32_t m_nBaseObjectiveHPScaling; // 0x920
	ObjectProperty m_TF1InnerWall; // 0x924
	ObjectProperty m_TF1OuterWall; // 0x92c
	ObjectProperty m_TF1BaseObjective; // 0x934
	ObjectProperty m_TF2InnerWall; // 0x93c
	ObjectProperty m_TF2OuterWall; // 0x944
	ObjectProperty m_TF2BaseObjective; // 0x94c
	int32_t m_nForcedObjectiveIndex; // 0x954
	int32_t m_nCountdown; // 0x958
	float m_fSpeedScale; // 0x95c
	float m_fRespawnOffset; // 0x960
	float m_fRespawnIncreaseOverTime; // 0x964
	float m_fTimeDeltaRespawnIncrease; // 0x968
	float m_fDefenseRespawnIncrease; // 0x96c
	float m_fAttackRespawnIncrease; // 0x970
	float m_fRespawnTimeCap; // 0x974
	float m_fNoSiegeEngineRespawnModification; // 0x978
	FName m_AttackDefendState; // 0x97c
	EGameMode m_DefaultGameMode; // 0x984
	float m_fConvergeStartDistance; // 0x988
	float m_fConvergeRate; // 0x98c
	float m_fStartConvergeTime; // 0x990
	float m_fConvergeSafeDistance; // 0x994
	ObjectProperty ConvergeDevice; // 0x998
	float m_fAutoPushForwardDelay; // 0x9a0
	float m_fAutoPushForwardSpeedScale; // 0x9a4
	float m_fStopAutoPushDelay; // 0x9a8
	int32_t m_nCreditsForHoldingObjective; // 0x9ac
	int32_t m_nCreditsBonusPerContested; // 0x9b0
	int32_t m_nCreditsForHoldingPayload; // 0x9b4
	float m_fFogCompleteConvergeDelay; // 0x9b8
	float m_fCapturePointsPerSecond1; // 0x9bc
	float m_fCapturePointsPerSecond2; // 0x9c0
	float m_fCapturePointsPerSecond3; // 0x9c4
	float m_fCapturePointsPerSecond4; // 0x9c8
	float m_fCapturePointsPerSecond5; // 0x9cc
	float m_fPointContestDuration; // 0x9d0
	float m_fPointOvertimeDuration; // 0x9d4
	float m_fPointOvertimeDrainPercPerSec; // 0x9d8
	float m_fPointClaimDuration; // 0x9dc
	float m_fOvertimeActiveTime; // 0x9e0
	float m_fOvertimeActiveTimeMemory[0x3]; // 0x9e4
	int32_t m_nOvertimeActiveTimeEntry; // 0x9f0
	float m_fOvertimeLeft; // 0x9f4
	float m_fBackslidePercent; // 0x9f8
	float m_fBackslideDelay; // 0x9fc
	float m_fBackslideRate; // 0xa00
	int32_t s_nCurrentActivePointIndex; // 0xa04
	int32_t m_nAttackingTaskforce; // 0xa08
	FVector m_SnappedWaypointIndicatorOffset; // 0xa0c
	float m_fGamePauseDelay; // 0xa18
};

struct ATgDevice_SpaceTime : ATgDevice {
	ObjectProperty m_BeamCollisionProxy; // 0xa04
	TArray<ObjectProperty> m_ActorsInRange; // 0xa0c
};

struct AInteractiveFoliageActor : AStaticMeshActor {
	ComponentProperty CylinderComponent; // 0x2a4
	FVector TouchingActorEntryPosition; // 0x2ac
	FVector FoliageVelocity; // 0x2b8
	FVector FoliageForce; // 0x2c4
	FVector FoliagePosition; // 0x2d0
	float FoliageDamageImpulseScale; // 0x2dc
	float FoliageTouchImpulseScale; // 0x2e0
	float FoliageStiffness; // 0x2e4
	float FoliageStiffnessQuadratic; // 0x2e8
	float FoliageDamping; // 0x2ec
	float MaxDamageImpulse; // 0x2f0
	float MaxTouchImpulse; // 0x2f4
	float MaxForce; // 0x2f8
	float Mass; // 0x2fc
};

struct ATgProj_FuriaF : ATgProj_Simulated {
	float m_fRetargetingTimer; // 0x52c
	float m_fRetargetTime; // 0x530
};

struct UUIComponent_Targeter_ShadowTeleport : UUIComponent_Targeter_BracketTargeter {
	char m_bHasNullTarget : 1; // 0x19c
};

struct UMaterialExpressionDestDepth : UMaterialExpression {
	char bNormalize : 1; // 0xb0
};

struct ANxForceFieldRadial : ANxForceField {
	ObjectProperty Shape; // 0x2d4
	ComponentProperty DrawComponent; // 0x2dc
	float ForceStrength; // 0x2e4
	float ForceRadius; // 0x2e8
	float SelfRotationStrength; // 0x2ec
	ERadialImpulseFalloff ForceFalloff; // 0x2f0
	FPointer Kernel; // 0x2f4
};

struct UNavMeshGoal_WithinDistanceEnvelope : UNavMeshPathGoalEvaluator {
	float MaxDistance; // 0x7c
	float MinDistance; // 0x80
	float MinTraversalDist; // 0x84
	FVector EnvelopeTestPoint; // 0x88
};

struct USeqAct_HeadTrackingControl : USequenceAction {
	TArray<FName> TrackControllerName; // 0x108
	float LookAtActorRadius; // 0x118
	char bDisableBeyondLimit : 1; // 0x11c
	char bLookAtPawns : 1; // 0x11c
	float MaxLookAtTime; // 0x120
	float MinLookAtTime; // 0x124
	float MaxInterestTime; // 0x128
	TArray<AActor*> ActorClassesToLookAt; // 0x12c
	TArray<FName> TargetBoneNames; // 0x13c
	TArray<ObjectProperty> LookAtTargets; // 0x14c
	TMap<None, None> ActorToComponentMap; // 0x15c
};

struct UTgAnimMetaData_SkelControl_BoneScale_KeyFrame : UAnimMetaData {
	TArray<FName> SkelControlNameList; // 0x60
	TArray<FTimeModifier> KeyFrames; // 0x70
	char bAllowScaleUp : 1; // 0x80
	char bAllowScaleDown : 1; // 0x80
	char bAdjustControllerStrength : 1; // 0x80
	char bFullControlOverController : 1; // 0x80
	char bSetKeysNoInterp : 1; // 0x80
	char bForceFirstKeyFrameOnBecomeRelevant : 1; // 0x80
	char bForceLastKeyFrameOnCeaseRelevant : 1; // 0x80
	FName SkelControlName; // 0x84
	EOnRelevanceChange OnBecomeRelevantBehavior; // 0x8c
	EOnRelevanceChange OnCeaseRelevantBehavior; // 0x8d
	float OnBecomeRelevantStrength; // 0x90
	float OnCeaseRelevantStrength; // 0x94
};

struct UInterpTrackInstSlomo : UInterpTrackInst {
	float OldTimeDilation; // 0x60
};

struct UTgAnimNodeChannelFire : UTgAnimNodeBlendList {
	TG_EQUIP_POINT m_EquipPoint; // 0x168
	char m_bResetOnRelevant : 1; // 0x16c
	char m_bCheckAnimSeqForAnim : 1; // 0x16c
	char m_bUseCooldownForEndChannel : 1; // 0x16c
	char m_bOnlyCallAnimEndWhenRelevant : 1; // 0x16c
	char m_bDoneChanneling : 1; // 0x16c
	float m_fMaxLoopTime; // 0x170
	float m_fPreCooldownEndTimeTrigger; // 0x174
	float m_fCooldownEndTime; // 0x178
	float m_fEndLoopTime; // 0x17c
};

struct USceneCaptureCubeMapComponent : USceneCaptureComponent {
	ObjectProperty TextureTarget; // 0xd0
	float NearPlane; // 0xd8
	float FarPlane; // 0xdc
	FVector WorldLocation; // 0xe0
};

struct AGamePlayerCamera : ACamera {
	ObjectProperty ThirdPersonCam; // 0x604
	UGameCameraBase* ThirdPersonCameraClass; // 0x60c
	ObjectProperty FixedCam; // 0x614
	UGameCameraBase* FixedCameraClass; // 0x61c
	ObjectProperty CurrentCamera; // 0x624
	char bUseForcedCamFOV : 1; // 0x62c
	char bInterpolateCamChanges : 1; // 0x62c
	char bResetInterp : 1; // 0x62c
	float ForcedCamFOV; // 0x630
	ObjectProperty LastViewTarget; // 0x634
	float SplitScreenShakeScale; // 0x63c
	ObjectProperty LastTargetBase; // 0x640
	FMatrix LastTargetBaseTM; // 0x650
};

struct UTgAnimNodeSimpleTransitioner : UAnimNodeBlendList {
	int32_t m_nDeviceId; // 0x144
	char m_bConfigureBasedOnDevice : 1; // 0x148
	char m_bIgnoreFireMode : 1; // 0x148
	int32_t m_nNumberOfStances; // 0x14c
	FName m_StanceBaseName; // 0x150
	FName m_TransitionBaseName; // 0x158
	float m_BlendTransitionDuration; // 0x160
};

struct UTgMinimapManager : UObject {
	TgMapTeam m_LocalTeam; // 0x60
	TMap<None, None> m_EntityMap; // 0x64
	char m_bShouldDisableVisionRange : 1; // 0xac
	char m_bSkipWorldGeometryLOS : 1; // 0xac
	char m_bRequiresVisionUpdate : 1; // 0xac
	float m_fFogOfWarAreaRevealTime; // 0xb0
	float m_fUpdateTimer; // 0xb4
	float m_fLastEntityUpdateTime; // 0xb8
	TArray<ObjectProperty> m_ReferencedRepInfos; // 0xbc
};

struct UDistributionVectorConstant : UDistributionVector {
	FVector Constant; // 0x7c
	char bLockAxes : 1; // 0x88
	EDistributionVectorLockFlags LockedAxes; // 0x8c
};

struct UParticleModuleEventReceiverKillParticles : UParticleModuleEventReceiverBase {
	char bStopSpawning : 1; // 0x74
};

struct UTgInvListener_RedirectDamageToDeployables : UTgInvListener {
	TArray<ObjectProperty> m_ActiveDeployables; // 0xc4
};

struct ATgDevice_Scramble : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedHustleDevice; // 0xa0c
	float m_fSprintEndTimestamp; // 0xa14
};

struct UTgAchievement_Unstoppable : UTgAchievement {
	char m_bReachedKillstreak : 1; // 0x94
};

struct UTgDeviceFire_SuckSlash : UTgDeviceFire_EncroachmentFireCone {
	float m_fMaxPullin; // 0x278
};

struct UParticleModuleMeshRotationRateOverLife : UParticleModuleRotationRateBase {
	FRawDistributionVector RotRate; // 0x68
	char bScaleRotRate : 1; // 0x8c
};

struct ATgCTFVolume : APhysicsVolume {
	int32_t m_nDefenderTeamIndex; // 0x314
};

struct ATgGameInfo_TeamDeathMatch : ATgGameInfo {
	char m_bSpawnInputLock : 1; // 0x280
	char m_bAllowSpawnGuardDuringDeviceFire : 1; // 0x280
};

struct UUIScene_UIMatchLobby : UUIScene {
	ObjectProperty m_mcChampionName; // 0x1cc
	ObjectProperty m_mcChampionTitle; // 0x1d4
	ObjectProperty m_mcChampionClassIcon; // 0x1dc
	ObjectProperty m_LockInBtn; // 0x1e4
	ObjectProperty m_ShowChampsBtn; // 0x1ec
	ObjectProperty m_ViewSkillsBtn; // 0x1f4
	ObjectProperty m_Header; // 0x1fc
	ObjectProperty m_BlueBans; // 0x204
	ObjectProperty m_RedBans; // 0x20c
	ObjectProperty m_ShowChampsAction; // 0x214
	ObjectProperty m_ShowCustomizeAction; // 0x21c
	ObjectProperty m_pLockInHoldPrompt; // 0x224
	ObjectProperty m_pFocusedChamp; // 0x22c
	char m_bBanComponentsVisible : 1; // 0x234
};

struct UUIComponent_RadialSlotEmote : UUIComponent_Display {
	ObjectProperty m_EmoteDisplay; // 0x124
	ObjectProperty m_mcEmoteDisplayLock; // 0x12c
	ObjectProperty m_mcEmoteDisplayText; // 0x134
	ObjectProperty m_mcEmoteDisplayButton; // 0x13c
	ObjectProperty m_mcEmoteDisplayButtonFade; // 0x144
	ObjectProperty m_mcEmoteDisplayButtonFrame; // 0x14c
	ObjectProperty m_mcEmoteDisplayButtonHighlight; // 0x154
	ObjectProperty m_mcEmoteDisplayButtonColor; // 0x15c
	ObjectProperty m_EmoteDisplayPurchaseButton; // 0x164
	int32_t m_nPadding; // 0x16c
};

struct ATgDevice_SmokeScreenMod : ATgDevice {
	TArray<ObjectProperty> m_ImmuneTargets; // 0xa04
	TArray<float> m_ImmuneTimes; // 0xa14
};

struct ULevel : ULevelBase {
	float LightmapTotalSize; // 0x1f8
	float ShadowmapTotalSize; // 0x1fc
};

struct UDistributionFloatUniform : UDistributionFloat {
	float Min; // 0x7c
	float Max; // 0x80
};

struct USeqAct_SetBool : USeqAct_SetSequenceVariable {
	char DefaultValue : 1; // 0x108
};

struct UTexture2D : UTexture {
	FIndirectArray_Mirror Mips; // 0x100
	FIndirectArray_Mirror CachedPVRTCMips; // 0x110
	FIndirectArray_Mirror CachedATITCMips; // 0x120
	FIndirectArray_Mirror CachedETCMips; // 0x130
	int32_t CachedFlashMipsMaxResolution; // 0x140
	FUntypedBulkData_Mirror CachedFlashMips; // 0x144
	int32_t SizeX; // 0x184
	int32_t SizeY; // 0x188
	int32_t OriginalSizeX; // 0x18c
	int32_t OriginalSizeY; // 0x190
	EPixelFormat Format; // 0x194
	TextureAddress AddressX; // 0x195
	TextureAddress AddressY; // 0x196
	char bIsEditorOnly : 1; // 0x198
	char bHasBeenCooked : 1; // 0x198
	char bIsStreamable : 1; // 0x198
	char bHasCancelationPending : 1; // 0x198
	char bHasBeenLoadedFromPersistentArchive : 1; // 0x198
	char bForceMiplevelsToBeResident : 1; // 0x198
	char bGlobalForceMipLevelsToBeResident : 1; // 0x198
	char bIsCompositingSource : 1; // 0x198
	char bHasBeenPaintedInEditor : 0; // 0x198
	float ForceMipLevelsToBeResidentTimestamp; // 0x19c
	FName TextureFileCacheName; // 0x1a0
	FGuid TextureFileCacheGuid; // 0x1a8
	int32_t RequestedMips; // 0x1b8
	int32_t ResidentMips; // 0x1bc
	int32_t MipsToRemoveOnCompress; // 0x1c0
	FThreadSafeCounter PendingMipChangeRequestStatus; // 0x1c4
	TArray<char> SystemMemoryData; // 0x1c8
	FTextureLinkedListMirror StreamableTexturesLink; // 0x1d8
	int32_t StreamingIndex; // 0x1f0
	int32_t MipTailBaseIdx; // 0x1f4
	FPointer ResourceMem; // 0x1f8
	int32_t FirstResourceMemMip; // 0x200
	float Timer; // 0x204
};

struct UInterpTrackVectorMaterialParam : UInterpTrackVectorBase {
	TArray<FMaterialReferenceList> Materials; // 0xb8
	ObjectProperty Material; // 0xc8
	FName ParamName; // 0xd0
	char bNeedsMaterialRefsUpdate : 1; // 0xd8
};

struct UParticleModuleSpawnBase : UParticleModule {
	char bProcessSpawnRate : 1; // 0x68
	char bProcessBurstList : 1; // 0x68
};

struct USeqAct_SetMatInstTexParam : USequenceAction {
	ObjectProperty MatInst; // 0x108
	ObjectProperty NewTexture; // 0x110
	FName ParamName; // 0x118
};

struct UMaterialInstance : UMaterialInterface {
	ObjectProperty PhysMaterial; // 0x254
	ObjectProperty Parent; // 0x25c
	ObjectProperty PhysMaterialMask; // 0x264
	int32_t PhysMaterialMaskUVChannel; // 0x26c
	ObjectProperty BlackPhysicalMaterial; // 0x270
	ObjectProperty WhitePhysicalMaterial; // 0x278
	char bHasStaticPermutationResource : 1; // 0x280
	char bStaticPermutationDirty : 1; // 0x280
	char ReentrantFlag : 1; // 0x280
	char bNeedsMaterialFlattening : 1; // 0x280
	char bCleanupUnusedTextures : 1; // 0x280
	ObjectProperty CookedShaderCache; // 0x284
	FPointer StaticParameters[0x3]; // 0x28c
	FPointer StaticPermutationResources[0x3]; // 0x2a4
	FPointer Resources[0x3]; // 0x2bc
	TArray<ObjectProperty> ReferencedTextures; // 0x2d4
	FGuid ParentLightingGuid; // 0x2e4
};

struct ATgDevice_IllusoryRift : ATgDevice {
	char m_bDeviceLockout : 1; // 0xa04
};

struct UTgCameraModule_SpectatorThirdPerson : UTgCameraModule_ThirdPerson {
	FTPOV OldViewpoint; // 0x118
	float RemainingBlendTime; // 0x13c
	float TotalBlendTime; // 0x140
	int32_t nLastUsedViewYawRotation; // 0x144
	float fYawLockedRotSmoothRate; // 0x148
};

struct UUIData_RewardPanelEntry : UUIData {
	UIEOML_REWARD_ENTRY_ICON m_eIconType; // 0x64
	int32_t m_nValue; // 0x68
	FString m_lsName; // 0x6c
};

struct UTgAIBehaviorCondition_HasEffectCategory : UTgAIBehaviorCondition {
	int32_t EffectCategoryId; // 0x98
	int32_t EffectGroupId; // 0x9c
};

struct UUIData_Site : UUIData {
	Fdword m_dwSiteId; // 0x64
};

struct UUIScene_UIBattlePass : UUIScene {
	int32_t m_nBattlePassSeen; // 0x1cc
	ObjectProperty m_pHome; // 0x1d0
	ObjectProperty m_pChallenges; // 0x1d8
	ObjectProperty m_pRotator; // 0x1e0
	FVector m_vDeathStampPreviewOffset; // 0x1e8
};

struct UTgGfxTeamInvite : UTgGfxScene {
	float m_fTimerWidth; // 0x1ec
	float m_fTimeoutTime; // 0x1f0
	float m_fTimeoutTimer; // 0x1f4
	ObjectProperty m_mcTimer; // 0x1f8
	ObjectProperty m_mcSubtitle; // 0x200
	ObjectProperty m_mcButton[0x2]; // 0x208
	TMap<None, None> m_fInviteTimestamps; // 0x218
	ObjectProperty m_AkTeamInvite; // 0x260
};

struct UUIHudDebuff : UTgGfxScene {
	char m_bDisableDebuffUI : 1; // 0x1ec
	FHudDebuffEffect m_ActiveEffects[0x3]; // 0x1f0
	ObjectProperty m_mcDebuff[0x3]; // 0x244
	ObjectProperty m_mcDebuffTF[0x3]; // 0x25c
	ObjectProperty m_mcDebuffIcon[0x3]; // 0x274
	ObjectProperty m_mcDebuffTimer[0x3]; // 0x28c
	ObjectProperty m_mcDebuffTimerBar[0x3]; // 0x2a4
	TMap<None, None> m_EffectGroupIconMap; // 0x2bc
	TMap<None, None> m_EffectGroupNameMap; // 0x304
};

struct USeqAct_SubtractInt : USeqAct_SetSequenceVariable {
	int32_t ValueA; // 0x108
	int32_t ValueB; // 0x10c
	float FloatResult; // 0x110
	int32_t IntResult; // 0x114
};

struct UParticleModuleColorScaleOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorScaleOverLife; // 0x68
	FRawDistributionFloat AlphaScaleOverLife; // 0x8c
	char bEmitterTime : 1; // 0xb0
};

struct USeqVar_ObjectList : USeqVar_Object {
	TArray<ObjectProperty> ObjList; // 0xc4
};

struct USeqAct_ConsoleCommand : USequenceAction {
	FString Command; // 0x108
	TArray<FString> Commands; // 0x118
};

struct UTgDeviceForm_Tempest : UTgDeviceForm {
	ObjectProperty m_BeamTarget1; // 0x28c
	ObjectProperty m_BeamTarget2; // 0x294
	char m_bBeamActive1 : 1; // 0x29c
	char m_bBeamActive2 : 1; // 0x29c
	char m_bBeamDirty1 : 1; // 0x29c
	char m_bBeamDirty2 : 1; // 0x29c
	float m_fBeamStartTime1; // 0x2a0
	float m_fBeamStartTime2; // 0x2a4
	float m_fBeamOnTime; // 0x2a8
};

struct USeqEvent_AnimNotify : USequenceEvent {
	FName NotifyName; // 0x128
};

struct ATgDevice_ImpalerArrow : ATgDevice {
	ObjectProperty m_CachedLongbow; // 0xa04
};

struct UTgDeviceForm_Drag : UTgDeviceForm {
	ObjectProperty m_BeamTarget; // 0x28c
	char m_bIsPawnTarget : 1; // 0x294
	int32_t m_nPostureID; // 0x298
	FVector m_vReleaseLocation; // 0x29c
	float m_fReleaseTime; // 0x2a8
	float m_fMissNoHitEndDistance; // 0x2ac
	float m_fMissNoHitEndTime; // 0x2b0
	float m_fMissInvalidEndDistance; // 0x2b4
	float m_fMissInvalidEndTime; // 0x2b8
	float m_fCloseRangeEndDistance; // 0x2bc
	float m_fTruePostfireTime; // 0x2c0
	ComponentProperty m_ChainMesh; // 0x2c4
	int32_t m_nChainMeshID; // 0x2cc
	ObjectProperty c_ChainSkelCon; // 0x2d0
	FName m_ChainSocket; // 0x2d8
	TArray<ObjectProperty> m_DragBlendList1P; // 0x2e0
	TArray<ObjectProperty> m_DragBlendList3P; // 0x2f0
	TArray<ObjectProperty> m_ChainBlendList; // 0x300
	EDragState m_DragState; // 0x310
};

struct UUIComponent_AnimSet : UUIComponent {
	char m_bRecording : 1; // 0x118
	char m_bPlayOnce : 1; // 0x118
	float m_fAnimTime; // 0x11c
	float m_fTotalAnimTime; // 0x120
	int32_t m_nTickAnimHandle; // 0x124
	TArray<FUICompAnimSetAnim> m_Anims; // 0x128
};

struct AMobileDebugCameraController : ADebugCameraController {
	int32_t OldMobileGroup; // 0x7c8
	ObjectProperty MPI; // 0x7cc
};

struct USeqAct_ModifyObjectList : USeqAct_SetSequenceVariable {
	int32_t ListEntriesCount; // 0x108
};

struct USpeedTreeActorFactory : UActorFactory {
	ObjectProperty SpeedTree; // 0x9c
};

struct UActorFactoryAkAmbientSound : UActorFactory {
	ObjectProperty AmbientEvent; // 0x9c
};

struct UTgAIBehaviorObject : UObject {
	int32_t NodeToken; // 0x60
};

struct UTgSkelControlSingleBone_Ammo_Lex : UTgSkelControlSingleBone {
	ObjectProperty m_Lex; // 0x124
	char m_bLeftGun : 1; // 0x12c
	float m_fFlatInterpolationRateDecrease; // 0x130
	float m_fInterpolationRateDecrease; // 0x134
	float m_fFlatInterpolationRateIncrease; // 0x138
	float m_fInterpolationRateIncrease; // 0x13c
};

struct UTgCameraModule : UObject {
	ObjectProperty PlayerCamera; // 0x60
};

struct ATgDevice_AzaanUltSlam : ATgDevice {
	ObjectProperty m_AzaanUltDevice; // 0xa04
	float m_fTraceDownDistance; // 0xa0c
	float m_fLerpDelayTimer; // 0xa10
	float m_fPostLerp3P; // 0xa14
	float m_fPostAttackLockout; // 0xa18
	float m_fHammerTravelTimeSafety; // 0xa1c
	float m_fLerpTime; // 0xa20
	float m_fEndpointZForgiveness; // 0xa24
	ObjectProperty m_pAzaan; // 0xa28
	FVector m_vCachedEndpoint; // 0xa30
};

struct AInternetLink : AInfo {
	ELinkMode LinkMode; // 0x280
	ELineMode InLineMode; // 0x281
	ELineMode OutLineMode; // 0x282
	EReceiveMode ReceiveMode; // 0x283
	FPointer Socket; // 0x284
	int32_t Port; // 0x28c
	FPointer RemoteSocket; // 0x290
	FPointer PrivateResolveInfo; // 0x298
	int32_t DataPending; // 0x2a0
};

struct UUIComponent_HealthBar_Overlay : UUIComponent_HealthBar {
	char m_bFriendly : 1; // 0x234
	char m_bInRange : 1; // 0x234
	char m_bColorDirty : 1; // 0x234
	char m_bHealingReduced : 1; // 0x234
	char m_bSpecialHealth : 1; // 0x234
	int32_t m_nTaskForce; // 0x238
	float m_fDisplayedDamagePct; // 0x23c
	float m_fDamageInterpSpeed; // 0x240
	float m_fMinDamageInterpSpeed; // 0x244
};

struct UParticleModuleMeshMaterial : UParticleModuleMaterialBase {
	TArray<ObjectProperty> MeshMaterials; // 0x68
};

struct UMcpUserInventoryBase : UMcpServiceBase {
	FString McpUserInventoryClassName; // 0x78
	DelegateProperty __OnCreateSaveSlotComplete__Delegate; // 0x88
	DelegateProperty __OnDeleteSaveSlotComplete__Delegate; // 0x98
	DelegateProperty __OnQuerySaveSlotListComplete__Delegate; // 0xa8
	DelegateProperty __OnQueryInventoryItemsComplete__Delegate; // 0xb8
	DelegateProperty __OnPurchaseItemComplete__Delegate; // 0xc8
	DelegateProperty __OnSellItemComplete__Delegate; // 0xd8
	DelegateProperty __OnEarnItemComplete__Delegate; // 0xe8
	DelegateProperty __OnConsumeItemComplete__Delegate; // 0xf8
	DelegateProperty __OnDeleteItemComplete__Delegate; // 0x108
	DelegateProperty __OnRecordIapComplete__Delegate; // 0x118
};

struct UInterpTrackFloatMaterialParam : UInterpTrackFloatBase {
	TArray<FMaterialReferenceList> Materials; // 0xb8
	ObjectProperty Material; // 0xc8
	FName ParamName; // 0xd0
	char bNeedsMaterialRefsUpdate : 1; // 0xd8
};

struct UTgAnimNodeBlendByAbilitySimple : UTgAnimNodeBlendList {
	char m_bBlendToActiveOnStartFire : 1; // 0x168
	char m_bBlendToActiveOnFire : 1; // 0x168
	char m_bDelayBlendToActiveUntilAnimEnd : 1; // 0x168
	char m_bDelayBlendToActiveUntilReplay : 1; // 0x168
	char m_bDelayBlendToIdleUntilAnimEnd : 1; // 0x168
	char m_bDelayBlendToIdleUntilReplay : 1; // 0x168
	char m_bBlendToIdleImmediatelyOnInterrupt : 1; // 0x168
	char m_bIsAbilityFiring : 1; // 0x168
	TG_EQUIP_POINT m_EqpPoint; // 0x16c
};

struct ATgAIController_BehaviorGodDisconnected : ATgAIController_BehaviorGod {
	char bInitialController : 1; // 0x960
};

struct USeqAct_RangeSwitch : USequenceAction {
	TArray<FSwitchRange> Ranges; // 0x108
};

struct UParticleModuleColorScaleOverDensity : UParticleModuleColorBase {
	FRawDistributionVector ColorScaleOverDensity; // 0x68
	FRawDistributionFloat AlphaScaleOverDensity; // 0x8c
};

struct ATgSplineActor_Payload : ATgSplineActor {
	char m_bReached : 1; // 0x2f0
	float m_fSecondsToAdd; // 0x2f4
};

struct UTgSeqAct_DisplaySlamText : USequenceAction {
	int32_t m_nMessageId; // 0x108
};

struct USeqAct_CastToFloat : USeqAct_SetSequenceVariable {
	int32_t Value; // 0x108
	float FloatResult; // 0x10c
};

struct ATgSpectatorTempCam : ADynamicCameraActor {
	char bIsViewTarget : 1; // 0x420
	char bIsBookmark : 1; // 0x420
};

struct ATgDevice_LongReach : ATgDevice {
	float m_fMinPullSpeed; // 0xa04
	float m_fMaxPullSpeed; // 0xa08
	float m_fTimeToMaxPullSpeed; // 0xa0c
	float m_fPullSpeedInterpExp; // 0xa10
	ObjectProperty m_CachedTgP; // 0xa14
	TArray<FNuggetPullVals> s_TouchingNuggets; // 0xa1c
	float m_fBlockedByBlockersRecheckTime; // 0xa2c
	ObjectProperty s_CollisionProxy; // 0xa30
	char s_bIsAuraActive : 1; // 0xa38
	char m_bAutoActivateAura : 1; // 0xa38
};

struct USoundNodeWaveParam : USoundNode {
	FName WaveParameterName; // 0x74
};

struct UUIComponent_BattlePassBanner : UUIComponent {
	int32_t m_nDisplayLevel; // 0x118
	Fdword m_dwXPDisplayed; // 0x11c
	ObjectProperty m_mcLevel; // 0x120
	ObjectProperty m_mcSubtitle; // 0x128
	ObjectProperty m_mcXP; // 0x130
	ObjectProperty m_mcNextLevel; // 0x138
	ObjectProperty m_pProgressA; // 0x140
	ObjectProperty m_pProgressB; // 0x148
};

struct UTgDeviceForm_Scout : UTgDeviceForm {
	ObjectProperty m_SKCBirdScale; // 0x28c
};

struct USeqAct_GetProperty : USequenceAction {
	FName PropertyName; // 0x108
};

struct AWebServer : ATcpLink {
	FString ServerName; // 0x2e4
	FString Applications[0xa]; // 0x2f4
	FString ApplicationPaths[0xa]; // 0x394
	char bEnabled : 1; // 0x434
	int32_t ListenPort; // 0x438
	int32_t MaxConnections; // 0x43c
	int32_t DefaultApplication; // 0x440
	int32_t ExpirationSeconds; // 0x444
	FString ServerURL; // 0x448
	ObjectProperty ApplicationObjects[0xa]; // 0x458
	int32_t ConnectionCount; // 0x4a8
	int32_t ConnID; // 0x4ac
};

struct UTgLocalPlayer : ULocalPlayer {
	float m_fViewScale; // 0x46c
	FVector m_vViewPan; // 0x470
	char m_bEnableOutlineEffect : 1; // 0x47c
	char m_bEnableColorBlindEffect : 1; // 0x47c
	char m_bBlurForeground : 1; // 0x47c
	float m_fHitOnlyAlpha; // 0x480
	float m_fHealthOnlyAlpha; // 0x484
	float m_fHealthPPAlpha; // 0x488
	float m_fDeathDesatPPAlpha; // 0x48c
	int32_t m_eColorBlindEffectType; // 0x490
	float m_fColorBlindIntensity; // 0x494
	float m_fTargetBlurAmount; // 0x498
	float m_fBlurAmount; // 0x49c
	float m_fBlurInterpSpeed; // 0x4a0
	float m_fBlurKernelSize; // 0x4a4
	EDOFType m_eCurrentDOFType; // 0x4a8
};

struct UTgInventoryObject_Listen_ReloadCard : UTgInventoryObject_Listen_AbilityProcBase {
	int32_t m_nPendingHitCounter; // 0xcc
};

struct ATgDevice_WeaponSwap : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
};

struct ATgPointOfInterest : ATgNavigationPoint {
	int32_t m_nNameMsgId; // 0x37c
	FString m_sDebugName; // 0x380
};

struct UInterpTrackInstToggle : UInterpTrackInst {
	ETrackToggleAction Action; // 0x60
	float LastUpdatePosition; // 0x64
	char bSavedActiveState : 1; // 0x68
};

struct UParticleModuleTypeDataBeam2 : UParticleModuleTypeDataBase {
	EBeam2Method BeamMethod; // 0x68
	EBeamTaperMethod TaperMethod; // 0x69
	int32_t TextureTile; // 0x6c
	float TextureTileDistance; // 0x70
	int32_t Sheets; // 0x74
	int32_t MaxBeamCount; // 0x78
	float Speed; // 0x7c
	int32_t InterpolationPoints; // 0x80
	char bAlwaysOn : 1; // 0x84
	char RenderGeometry : 1; // 0x84
	char RenderDirectLine : 1; // 0x84
	char RenderLines : 1; // 0x84
	char RenderTessellation : 1; // 0x84
	int32_t UpVectorStepSize; // 0x88
	FName BranchParentName; // 0x8c
	FRawDistributionFloat Distance; // 0x94
	FRawDistributionFloat TaperFactor; // 0xb8
	FRawDistributionFloat TaperScale; // 0xdc
};

struct ATgDevice_KinessaInhand : ATgDevice {
	FVector m_vSniperProjectileSpawnOffset; // 0xa04
	ObjectProperty m_ForceFeedbackStartFireScout; // 0xa10
	ObjectProperty m_ForceFeedbackStartFireSniper; // 0xa18
};

struct AKActor : ADynamicSMActor {
	char bDamageAppliesImpulse : 1; // 0x2d0
	char bWakeOnLevelStart : 1; // 0x2d0
	char bCurrentSlide : 1; // 0x2d0
	char bSlideActive : 1; // 0x2d0
	char bEnableStayUprightSpring : 1; // 0x2d0
	char bLimitMaxPhysicsVelocity : 1; // 0x2d0
	char bNeedsRBStateReplication : 1; // 0x2d0
	char bDisableClientSidePawnInteractions : 1; // 0x2d0
	char TgApplyHitImpulse : 0; // 0x2d0
	char TgApplyTouchImpulse : 0; // 0x2d0
	ComponentProperty ImpactEffectComponent; // 0x2d4
	ComponentProperty ImpactSoundComponent; // 0x2dc
	ComponentProperty ImpactSoundComponent2; // 0x2e4
	float LastImpactTime; // 0x2ec
	FPhysEffectInfo ImpactEffectInfo; // 0x2f0
	ComponentProperty SlideEffectComponent; // 0x308
	ComponentProperty SlideSoundComponent; // 0x310
	float LastSlideTime; // 0x318
	FPhysEffectInfo SlideEffectInfo; // 0x31c
	float StayUprightTorqueFactor; // 0x334
	float StayUprightMaxTorque; // 0x338
	float MaxPhysicsVelocity; // 0x33c
	FRigidBodyState RBState; // 0x340
	float AngErrorAccumulator; // 0x380
	FVector ReplicatedDrawScale3D; // 0x384
	FVector InitialLocation; // 0x390
	FRotator InitialRotation; // 0x39c
	float TgTouchMagnitude; // 0x3a8
	ObjectProperty TgTouchSound; // 0x3ac
};

struct USeqEvent_Input : USequenceEvent {
	char bTrapInput : 1; // 0x128
	int32_t AllowedPlayerIndex; // 0x12c
	TArray<FName> InputNames; // 0x130
};

struct UUIDataProvider_OnlinePlayerStorage : UUIDataProvider_OnlinePlayerDataBase {
	ObjectProperty Profile; // 0x74
	FName ProviderName; // 0x7c
	char bWasErrorLastRead : 1; // 0x84
	char bIsExternalUIOpen : 1; // 0x84
	char bNeedsDeferredRefresh : 1; // 0x84
	TArray<FPlayerStorageArrayProvider> PlayerStorageArrayProviders; // 0x88
	int32_t DeviceStorageSizeNeeded; // 0x98
};

struct UTgAnimMetaData_MeshAccessory : UAnimMetaData {
	TArray<FMeshPlacement> m_Meshes; // 0x60
	char m_bSkinIndependent : 1; // 0x70
	char m_bSetKeysNoInterp : 1; // 0x70
	char m_bUseScaling : 1; // 0x70
	TArray<FTimeModifier> m_KeyFrames; // 0x74
	float m_fBecomeRelevantScale; // 0x84
	float m_fCeaseRelevantScale; // 0x88
};

struct ATgDevice_YagoPoisonMod : ATgDevice {
	TArray<ObjectProperty> m_ImmuneTargets; // 0xa04
	TArray<float> m_ImmuneTimes; // 0xa14
};

struct ATgDevice_YagoTravel : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedYagorath; // 0xa0c
	YagoTravelState m_eYagoTravelState; // 0xa14
	ObjectProperty m_YagoChargeUp; // 0xa18
	float m_fPreviousSpeedMultiplier; // 0xa20
	float m_fSpeedMultiplierDuringAcceleration; // 0xa24
	float m_fSpeedMultiplierDuringDeceleration; // 0xa28
	float m_fSpeedMultiplierDuringPassiveDeceleration; // 0xa2c
	float m_fSpeedMultiplierDuringChargeUp; // 0xa30
	DelegateProperty __InterruptFiringDelegate__Delegate; // 0xa34
};

struct UUIComponent_EventBundlePanel : UUIComponent_Display {
	ObjectProperty m_mcTitleTF; // 0x124
	ObjectProperty m_mcUnlockTF; // 0x12c
	ObjectProperty m_pBundleItems; // 0x134
	ObjectProperty m_pUnlockButton; // 0x13c
};

struct UUIComponent_PlayerCurrency : UUIComponent_Display {
	TArray<ObjectProperty> m_mcCurrencyIcon; // 0x124
	TArray<ObjectProperty> m_mcCurrencyTF; // 0x134
};

struct ATgDevice_HyperBeam : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
};

struct UUIDataShop : UObject {
	TMap<None, None> m_LootTableItems; // 0x60
	TMap<None, None> m_Vendors; // 0xa8
	TMap<None, None> m_DLCItems; // 0xf0
	TMap<None, None> m_Items; // 0x138
	TMap<None, None> m_SKUtoLootId; // 0x180
	TArray<Fdword> m_dwHiddenLTIs; // 0x1c8
	TArray<FMarketplaceProductDetails> m_MarketplaceProducts; // 0x1d8
	TArray<Fdword> m_dwContinuousRequestVendors; // 0x1e8
	float m_fContinuousRequestTimer; // 0x1f8
	TArray<Fdword> m_dwInfoVendors; // 0x1fc
	TArray<Fdword> m_dwStoreVendors; // 0x20c
	TArray<Fdword> m_dwDLCVendors; // 0x21c
	char m_bAllStoreVendorsLoaded : 1; // 0x22c
	char m_bFinishedStoringDLCItemData : 1; // 0x22c
	Fdword m_dwVendorRequestId; // 0x230
	Fdword m_dwContinuousVendorsRequestId; // 0x234
	Fdword m_dwDLCVendorsRequestId; // 0x238
};

struct ATgDevice_WallBangFire : ATgDevice {
	int32_t m_nShotsRemaining; // 0xa04
	ObjectProperty m_CachedSaati; // 0xa08
	ObjectProperty m_SaatiUltDevice; // 0xa10
};

struct UUIScene_UIRadialMenuVGS : UUIScene {
	RadialMenuVGSDir m_eCurrentSlice; // 0x1cc
	RadialMenuVGSChildDir m_eCurrentChildSlice; // 0x1cd
	char m_bCenterMouseOnShow : 1; // 0x1d0
	char m_bShowingChildWheel : 1; // 0x1d0
	char m_bSliceAllowDeselect : 1; // 0x1d0
	int32_t m_nAxisUpdateCBHandle; // 0x1d4
	int32_t m_nVGSInputType; // 0x1d8
	float m_fDeselectTimer; // 0x1dc
	float m_fSelectionDelayGamepad; // 0x1e0
	float m_fSelectionDelayMouse; // 0x1e4
	float m_fDeselectionDelayGamepad; // 0x1e8
	float m_fDeselectionDelayMouse; // 0x1ec
	float m_fMouseOffsetX; // 0x1f0
	float m_fMouseOffsetY; // 0x1f4
	ObjectProperty m_mcTitle; // 0x1f8
	ObjectProperty m_mcWheel; // 0x200
	ObjectProperty m_mcChildWheel; // 0x208
	ObjectProperty m_mcCenterButton; // 0x210
	ObjectProperty m_mcCenterButtonTF; // 0x218
	ObjectProperty m_mcCenterButtonHighlight; // 0x220
	ObjectProperty m_pCenterButtonGamepadKey; // 0x228
	ObjectProperty m_pCenterButtonKeyboardKey; // 0x230
	TArray<ObjectProperty> m_pSlices; // 0x238
	TArray<ObjectProperty> m_pChildSlices; // 0x248
	ObjectProperty m_akSliceHover; // 0x258
	ObjectProperty m_pDefaultInputsAction; // 0x260
	ObjectProperty m_pRadialNavAction; // 0x268
	ObjectProperty m_pRadialSelectAction; // 0x270
	ObjectProperty m_pHideMenuAction; // 0x278
};

struct ATgDevice_ShieldFernando : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedPawn; // 0xa0c
	float m_fManaGrace; // 0xa14
	float m_fAegisShieldDestroyedLockOutTime; // 0xa18
};

struct UGoal_AtActor : UPathGoalEvaluator {
	ObjectProperty GoalActor; // 0x78
	float GoalDist; // 0x80
	char bKeepPartial : 1; // 0x84
};

struct UFailedConnect : ULocalMessage {
	FString FailMessage[0x4]; // 0x74
};

struct UTgAIBehaviorAction_FollowLane : UTgAIBehaviorAction {
	char bUseReverseDirection : 1; // 0x94
};

struct UUIComponent_VanguardShieldBar : UUIComponent_ShieldBar {
	ObjectProperty m_mcShieldMeter; // 0x158
	char m_bHiddenFullShield : 1; // 0x160
};

struct UUIScene_UIBattlePassLevelUp : UUIScene {
	FPointer VfTable_IAcquisitionHandler; // 0x1cc
	int32_t m_nBPItemsShown; // 0x1d4
	TArray<ObjectProperty> m_UnlockedItems; // 0x1d8
	ObjectProperty m_grGroup; // 0x1e8
	ObjectProperty m_mcIcon; // 0x1f0
	ObjectProperty m_mcTF0; // 0x1f8
	ObjectProperty m_mcTF1; // 0x200
	ObjectProperty m_mcRewardTF; // 0x208
	ObjectProperty m_pFreePassReward; // 0x210
	ObjectProperty m_mcPurchasePrompt; // 0x218
	ObjectProperty m_List; // 0x220
	ObjectProperty m_pUpgradeButton; // 0x228
	ObjectProperty m_pCloseButton; // 0x230
	ObjectProperty m_pEquipAllButton; // 0x238
	ObjectProperty m_mcCheckmark; // 0x240
};

struct UUIHud : UTgGfxScene {
	ObjectProperty m_mcSubscenes[0xb]; // 0x1ec
	ObjectProperty m_mcPaused; // 0x244
};

struct UTgAchievement_KillWithCombo : UTgAchievement {
	TArray<FKillWithComboEntry> m_Entries; // 0x94
};

struct UTgDeviceForm_SpinnerWhileFiring : UTgDeviceForm {
	FName m_SpinnerName; // 0x28c
	char m_bShouldSpinOnFire : 1; // 0x294
	TArray<ObjectProperty> m_SpinnerSkelControls1p; // 0x298
	TArray<ObjectProperty> m_SpinnerSkelControls3p; // 0x2a8
};

struct UTgControlModule_Free : UTgControlModule {
	int32_t CameraYawOffset; // 0x6c
};

struct UGameplayEvents : UObject {
	FPointer Archive; // 0x60
	FString StatsFileName; // 0x68
	FGameplayEventsHeader Header; // 0x78
	FGameSessionInformation CurrentSessionInfo; // 0xa8
	TArray<FPlayerInformation> PlayerList; // 0x130
	TArray<FTeamInformation> TeamList; // 0x140
	TArray<FGameplayEventMetaData> SupportedEvents; // 0x150
	TArray<FWeaponClassEventData> WeaponClassArray; // 0x160
	TArray<FDamageClassEventData> DamageClassArray; // 0x170
	TArray<FProjectileClassEventData> ProjectileClassArray; // 0x180
	TArray<FPawnClassEventData> PawnClassArray; // 0x190
	TArray<FString> ActorArray; // 0x1a0
	TArray<FString> SoundCueArray; // 0x1b0
};

struct USeqAct_AssignController : USequenceAction {
	AController* ControllerClass; // 0x108
};

struct ATgDeploy_ShieldBarik : ATgDeploy_Shield {
	char r_bHasCapsule : 1; // 0x470
	char r_bHasAcceleratorField : 1; // 0x470
	char r_bHasImpede : 1; // 0x470
	char r_bHasBunker : 1; // 0x470
	char r_bHasFortify : 1; // 0x470
	TArray<ObjectProperty> m_AcceleratedActors; // 0x474
	ObjectProperty m_CachedPawnOwner; // 0x484
};

struct UTgInvListener_Enlightenment : UTgInvListener {
	char m_bCanRefundEnergy : 1; // 0xc4
};

struct AFileWriter : AInfo {
	FPointer ArchivePtr; // 0x280
	FString Filename; // 0x288
	FWFileType FileType; // 0x298
	char bFlushEachWrite : 1; // 0x29c
	char bWantsAsyncWrites : 1; // 0x29c
};

struct UUIHudChampionSelect : UTgGfxScene {
	ObjectProperty m_mcBack; // 0x1ec
	ObjectProperty m_mcTitle; // 0x1f4
	ObjectProperty m_mcChampion[0x3c]; // 0x1fc
	ObjectProperty m_mcChampionIcon[0x3c]; // 0x3dc
	ObjectProperty m_mcChampionTitle[0x3c]; // 0x5bc
	ObjectProperty m_mcChampionSubtitle[0x3c]; // 0x79c
	ObjectProperty m_grChampions; // 0x97c
	TArray<ObjectProperty> m_AvailableChampions; // 0x984
};

struct UTgEffectGroup : UObject {
	int32_t m_nType; // 0x60
	ObjectProperty m_Target; // 0x64
	ObjectProperty m_Instigator; // 0x6c
	ObjectProperty m_InstigatorDeployable; // 0x74
	int32_t m_nEffectGroupId; // 0x7c
	float m_fLifeTime; // 0x80
	float m_fModLifeTime; // 0x84
	float m_fLifeTimeIncreaseFromInstigator; // 0x88
	float m_fApplyInterval; // 0x8c
	TArray<ObjectProperty> m_Effects; // 0x90
	int32_t m_nDamageType; // 0xa0
	AttackType m_eAttackType; // 0xa4
	EStunType m_StunType; // 0xa5
	char m_bIsManaged : 1; // 0xa8
	char m_bHasStealthEffect : 1; // 0xa8
	char m_bDoesDamage : 1; // 0xa8
	char m_bDoesDamageOverTime : 1; // 0xa8
	char m_bContagious : 1; // 0xa8
	char s_bActiveFlag : 1; // 0xa8
	char s_bCriticalHitFlag : 1; // 0xa8
	char m_bDeviceSpecificFlag : 1; // 0xa8
	char m_bHasVisual : 0; // 0xa8
	char m_bSupportsEffectSimulation : 0; // 0xa8
	float m_fPercAbsorbedDamage; // 0xac
	int32_t m_nApplicationType; // 0xb0
	float m_fApplicationValue; // 0xb4
	float m_fApplicationChance; // 0xb8
	int32_t m_nApplicationCategoryCode; // 0xbc
	int32_t m_nBehaviorCategoryCode; // 0xc0
	int32_t m_nReqDeviceInstanceId; // 0xc4
	float m_fBuffValue; // 0xc8
	float m_fPhysicalPowerScaling; // 0xcc
	float m_fMagicalPowerScaling; // 0xd0
	float m_fLifetimeScaling; // 0xd4
	float m_fLifetimeMax; // 0xd8
	int32_t m_nScalingType; // 0xdc
	int32_t m_nTargetType; // 0xe0
	int32_t m_nTargetAffectsType; // 0xe4
	int32_t m_nHitSpecialSituationalType; // 0xe8
	int32_t m_nNumStacks; // 0xec
	int32_t m_nNumMaxStacks; // 0xf0
	ObjectProperty s_NonContagiousEffectGroup; // 0xf4
	FImpactInfo m_Impact; // 0xfc
	int32_t m_nPosture; // 0x178
	int32_t m_nFxAppliedId; // 0x17c
	FName m_nmDisplayGroup; // 0x180
	int32_t s_ManagedEffectListIndex; // 0x188
	ObjectProperty s_OwnerEffectManager; // 0x18c
	FName m_nmDamageTypeClass; // 0x194
	int32_t m_nSourceDeviceInstId; // 0x19c
	int32_t m_nSourceItemId; // 0x1a0
	float s_fEGShieldHealth; // 0x1a4
	float s_fEGShieldHealthMax; // 0x1a8
	ObjectProperty m_Waveform; // 0x1ac
	FPointer m_pEffectGroupSetup; // 0x1b4
	FLifeTimeCalcInfo m_LastLifeTimeCalcInfo; // 0x1bc
};

struct UOnlineGameSettings : USettings {
	int32_t NumPublicConnections; // 0xa0
	int32_t NumPrivateConnections; // 0xa4
	int32_t NumOpenPublicConnections; // 0xa8
	int32_t NumOpenPrivateConnections; // 0xac
	FQWord ServerNonce; // 0xb0
	FString ServiceConfigId; // 0xb8
	FString SessionTemplateName; // 0xc8
	FString MatchHopperName; // 0xd8
	FString SessionGuid; // 0xe8
	FString SessionHandle; // 0xf8
	TArray<FUniqueNetId> ReservedMembers; // 0x108
	char bShouldAdvertise : 1; // 0x118
	char bIsLanMatch : 1; // 0x118
	char bUsesStats : 1; // 0x118
	char bAllowJoinInProgress : 1; // 0x118
	char bPublic : 1; // 0x118
	char bAllowInvites : 1; // 0x118
	char bUsesPresence : 1; // 0x118
	char bAllowJoinViaPresence : 1; // 0x118
	char bAllowJoinViaPresenceFriendsOnly : 0; // 0x118
	char bUsesArbitration : 0; // 0x118
	char bAntiCheatProtected : 0; // 0x118
	char bWasFromInvite : 0; // 0x118
	char bIsDedicated : 0; // 0x118
	char bHasSkillUpdateInProgress : 0; // 0x118
	char bShouldShrinkArbitratedSessions : 0; // 0x118
	FString OwningPlayerName; // 0x11c
	FUniqueNetId OwningPlayerId; // 0x12c
	int32_t PingInMs; // 0x134
	float MatchQuality; // 0x138
	EOnlineGameState GameState; // 0x13c
	int32_t BuildUniqueId; // 0x140
};

struct ATgDeploy_TigronHeavyBlade : ATgDeployable {
	float m_fPersistTime; // 0x46c
	float m_fPickupRangeSqr; // 0x470
	char m_bCanPickUp : 1; // 0x474
	char m_bWasDeployedOnInaraWall : 1; // 0x474
	ObjectProperty m_CachedTiberius; // 0x478
	ObjectProperty m_GeometryWall; // 0x480
	ObjectProperty m_GeometryEffectWall; // 0x488
	float m_fScaleMultiplier; // 0x490
};

struct UParticleLightEnvironmentComponent : UDynamicLightEnvironmentComponent {
	int32_t ReferenceCount; // 0x158
	int32_t NumPooledReuses; // 0x15c
	ObjectProperty SharedInstigator; // 0x160
	ObjectProperty SharedParticleSystem; // 0x168
	char bAllowDLESharing : 1; // 0x170
};

struct USeqAct_FinishSequence : USequenceAction {
	FString OutputLabel; // 0x108
};

struct ATgDeploy_ShieldFernando : ATgDeploy_Shield {
	int32_t m_nLargeShieldMeshID; // 0x470
	ComponentProperty m_SmallMesh; // 0x474
	ComponentProperty m_LargeMesh; // 0x47c
	int32_t r_nToweringBarrierHealth; // 0x484
	int32_t r_nAegisBonusHealth; // 0x488
	char m_bHasHeatTransfer : 1; // 0x48c
	char m_bHasRattle : 1; // 0x48c
	ObjectProperty m_CachedFernandoOwner; // 0x490
};

struct UParticleModuleRequired : UParticleModule {
	ObjectProperty Material; // 0x68
	EParticleScreenAlignment ScreenAlignment; // 0x70
	EParticleSortMode SortMode; // 0x71
	EParticleBurstMethod ParticleBurstMethod; // 0x72
	EParticleSubUVInterpMethod InterpolationMethod; // 0x73
	EEmitterNormalsMode EmitterNormalsMode; // 0x74
	char bAllowImageFlipping : 1; // 0x78
	char bSquareImageFlipping : 1; // 0x78
	char bUseLocalSpace : 1; // 0x78
	char bKillOnDeactivate : 1; // 0x78
	char bKillOnCompleted : 1; // 0x78
	char bRequiresSorting : 1; // 0x78
	char bUseLegacyEmitterTime : 1; // 0x78
	char bEnableNearParticleCulling : 1; // 0x78
	char bEnableFarParticleCulling : 0; // 0x78
	char bEnableParticleTrimming : 0; // 0x78
	char bEmitterDurationUseRange : 0; // 0x78
	char bDurationRecalcEachLoop : 0; // 0x78
	char bEmitterDelayUseRange : 0; // 0x78
	char bDelayFirstLoopOnly : 0; // 0x78
	char bScaleUV : 0; // 0x78
	char bDirectUV : 0; // 0x78
	char bOverrideSystemMacroUV : 0; // 0x78
	char bUseMaxDrawCount : 0; // 0x78
	char bOrbitModuleAffectsVelocityAlignment : 0; // 0x78
	float NearCullDistance; // 0x7c
	float NearFadeDistance; // 0x80
	float FarFadeDistance; // 0x84
	float FarCullDistance; // 0x88
	TArray<FVector2D> TrimmedVertices; // 0x8c
	float EmitterDuration; // 0x9c
	float EmitterDurationLow; // 0xa0
	int32_t EmitterLoops; // 0xa4
	FRawDistributionFloat SpawnRate; // 0xa8
	TArray<FParticleBurst> BurstList; // 0xcc
	float EmitterDelay; // 0xdc
	float EmitterDelayLow; // 0xe0
	int32_t SubImages_Horizontal; // 0xe4
	int32_t SubImages_Vertical; // 0xe8
	float RandomImageTime; // 0xec
	int32_t RandomImageChanges; // 0xf0
	FVector MacroUVPosition; // 0xf4
	float MacroUVRadius; // 0x100
	int32_t MaxDrawCount; // 0x104
	float DownsampleThresholdScreenFraction; // 0x108
	FVector NormalsSphereCenter; // 0x10c
	FVector NormalsCylinderDirection; // 0x118
};

struct ATgWeaponMeshActor_LazarusInhand : ATgWeaponMeshActor {
	int32_t m_nFiremode; // 0x450
};

struct AMobileDebugCameraHUD : AMobileHUD {
	char bDrawDebugText : 1; // 0x6bc
};

struct UFontImportOptions : UObject {
	FFontImportOptionsData Data; // 0x60
};

struct ADoorMarker : ANavigationPoint {
	ObjectProperty MyDoor; // 0x378
	EDoorType DoorType; // 0x380
	ObjectProperty DoorTrigger; // 0x384
	char bWaitUntilCompletelyOpened : 1; // 0x38c
	char bInitiallyClosed : 1; // 0x38c
	char bBlockedWhenClosed : 1; // 0x38c
	char bDoorOpen : 1; // 0x38c
	char bTempDisabledCollision : 1; // 0x38c
};

struct UInterpGroupCamera : UInterpGroup {
	ObjectProperty CameraAnimInst; // 0x98
	float CompressTolerance; // 0xa0
};

struct AEmitterCameraLensEffectBase : AEmitter {
	ObjectProperty PS_CameraEffect; // 0x294
	ObjectProperty PS_CameraEffectNonExtremeContent; // 0x29c
	float BaseFOV; // 0x2a4
	float DistFromCamera; // 0x2a8
	char bAllowMultipleInstances : 1; // 0x2ac
	TArray<AEmitterCameraLensEffectBase*> EmittersToTreatAsSame; // 0x2b0
	ObjectProperty BaseCamera; // 0x2c0
};

struct UDamageType : UObject {
	char bArmorStops : 1; // 0x60
	char bCausedByWorld : 1; // 0x60
	char bExtraMomentumZ : 1; // 0x60
	char bCausesFracture : 1; // 0x60
	char bRadialDamageVelChange : 1; // 0x60
	float KDamageImpulse; // 0x64
	float KDeathVel; // 0x68
	float KDeathUpKick; // 0x6c
	float RadialDamageImpulse; // 0x70
	float VehicleDamageScaling; // 0x74
	float VehicleMomentumScaling; // 0x78
	ObjectProperty DamagedFFWaveform; // 0x7c
	ObjectProperty KilledFFWaveform; // 0x84
	float FracturedMeshDamage; // 0x8c
};

struct UProcBuildingRuleset : UObject {
	ObjectProperty RootRule; // 0x60
	char bBeingEdited : 1; // 0x68
	char bEnableInteriorTexture : 1; // 0x68
	char bLODOnlyRoof : 1; // 0x68
	char bPickRandomSwatch : 1; // 0x68
	ObjectProperty DefaultRoofMaterial; // 0x6c
	ObjectProperty DefaultFloorMaterial; // 0x74
	ObjectProperty DefaultNonRectWallMaterial; // 0x7c
	float RoofZOffset; // 0x84
	float NotRoofZOffset; // 0x88
	float FloorZOffset; // 0x8c
	float NotFloorZOffset; // 0x90
	float RoofPolyInset; // 0x94
	float FloorPolyInset; // 0x98
	float BuildingLODSpecular; // 0x9c
	float RoofEdgeScopeRaise; // 0xa0
	ObjectProperty LODCubemap; // 0xa4
	ObjectProperty InteriorTexture; // 0xac
	TArray<FPBVariationInfo> Variations; // 0xb4
	TArray<FPBParamSwatch> ParamSwatches; // 0xc4
};

struct UMcpGroupsManager : UMcpGroupsBase {
	FString CreateGroupUrl; // 0x128
	FString DeleteGroupUrl; // 0x138
	FString QueryGroupsUrl; // 0x148
	FString QueryGroupMembersUrl; // 0x158
	FString AddGroupMembersUrl; // 0x168
	FString RemoveGroupMembersUrl; // 0x178
	FString DeleteAllGroupsUrl; // 0x188
	FString AcceptGroupInviteUrl; // 0x198
	FString RejectGroupInviteUrl; // 0x1a8
	DelegateProperty __OnQueryGroupsRequestComplete__Delegate; // 0x1b8
	DelegateProperty __OnQueryGroupMembersRequestComplete__Delegate; // 0x1c8
	DelegateProperty __OnAddGroupMembersRequestComplete__Delegate; // 0x1d8
	DelegateProperty __OnAcceptGroupInviteRequestComplete__Delegate; // 0x1e8
};

struct UTgEffectForm_WithMeshes : UTgEffectForm {
	TArray<FEffectMeshInfo> m_EffectMeshInfos; // 0xfc
};

struct UTgInventoryObject_Listen_SomethingToProve : UTgInvListener {
	char m_bAvailable : 1; // 0xc4
	ObjectProperty m_CachedRestoreStaminaDevice; // 0xc8
};

struct ATgDevice_Spite : ATgDevice_Charge {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa78
	ObjectProperty m_CachedDarklord; // 0xa80
	char m_bWaitingForServerHit : 1; // 0xa88
	char m_bHasStartedChainAttacks : 1; // 0xa88
	char m_bHasBounced : 1; // 0xa88
	char m_bHasRefundedEnergy : 1; // 0xa88
	char r_bApplyPercentDamage : 1; // 0xa88
	int32_t m_nNumHits; // 0xa8c
	ObjectProperty m_HitCharacter; // 0xa90
	EPolymorphType m_HitCharacterStartPolymorphType; // 0xa98
	float m_fJoinViewLerpTime; // 0xa9c
	float m_fJoinSeparationDistance; // 0xaa0
	float m_fJoinMoveTweenTime; // 0xaa4
	float m_fJoinMinGroundOffset; // 0xaa8
};

struct UPath_WithinTraversalDist : UPathConstraint {
	float MaxTraversalDist; // 0x6c
	char bSoft : 1; // 0x70
	float SoftStartPenalty; // 0x74
};

struct ATgDevice_EbbAndFlow : ATgDevice {
	ObjectProperty m_ShellSpinDevice; // 0xa04
};

struct USwatTurnReachSpec : UForcedReachSpec {
	char SpecDirection; // 0xc8
};

struct UTgSeqAct_TutorialTips : USequenceAction {
	int32_t nMsgId; // 0x108
};

struct ATgDeploy_ChurchillTurret : ATgDeployable {
	FVector m_vDroneSocketOffset; // 0x46c
	char r_bLeftDrone : 1; // 0x478
	FVector m_vCurrentAccumulatedVelocity; // 0x47c
};

struct UInterpCurveEdSetup : UObject {
	TArray<FCurveEdTab> Tabs; // 0x60
	int32_t ActiveTab; // 0x70
};

struct UTgAIBehaviorAction_SelectLeashCombatTarget : UTgAIBehaviorAction {
	char bMustBeEnemy : 1; // 0x94
	char bMustBeWeakest : 1; // 0x94
	char bMustHaveLineOfSight : 1; // 0x94
	char bMustHaveDamagedGod : 1; // 0x94
	char bMustNotBeImmune : 1; // 0x94
	char bEffectGroupCategoryCheckInstigator : 1; // 0x94
	char bMustBeHittable : 1; // 0x94
	ECombatTargetType TargetType; // 0x98
	int32_t EffectCategoryId; // 0x9c
};

struct UFluidInfluenceComponent : UPrimitiveComponent {
	char bActive : 1; // 0x24c
	char RaindropFillEntireFluid : 1; // 0x24c
	char bIsToggleTriggered : 1; // 0x24c
	ObjectProperty FluidActor; // 0x250
	EInfluenceType InfluenceType; // 0x258
	float MaxDistance; // 0x25c
	float WaveStrength; // 0x260
	float WaveFrequency; // 0x264
	float WavePhase; // 0x268
	float WaveRadius; // 0x26c
	float RaindropAreaRadius; // 0x270
	float RaindropRadius; // 0x274
	float RaindropStrength; // 0x278
	float RaindropRate; // 0x27c
	float FlowSpeed; // 0x280
	int32_t FlowNumRipples; // 0x284
	float FlowSideMotionRadius; // 0x288
	float FlowWaveRadius; // 0x28c
	float FlowStrength; // 0x290
	float FlowFrequency; // 0x294
	float SphereOuterRadius; // 0x298
	float SphereInnerRadius; // 0x29c
	float SphereStrength; // 0x2a0
	float CurrentAngle; // 0x2a4
	float CurrentTimer; // 0x2a8
	ObjectProperty CurrentFluidActor; // 0x2ac
};

struct ATgProj_Simulated : ATgProjectile {
	char m_bHasFlashedShutdown : 1; // 0x450
	char m_bHasFlashExploded : 1; // 0x450
	char m_bIgnoreClientHits : 1; // 0x450
	char m_bShouldQueueServerHits : 1; // 0x450
	char m_bHasQueuedServerHit : 1; // 0x450
	char m_bQueuedExplodeDoesNotHideProjectile : 1; // 0x450
	char m_bQueuedExplodeTargetIsNonWorld : 1; // 0x450
	char m_bNeedsFrictionOverride : 1; // 0x450
	char m_bFlashSpecialExplosion : 0; // 0x450
	char m_bDynamicShadow : 0; // 0x450
	char m_bShadowDecalImportant : 0; // 0x450
	char m_bTrackProjectileForTimelapse : 0; // 0x450
	char s_bTrackingInitialized : 0; // 0x450
	char m_bRequireAccurateTicksForPrediction : 0; // 0x450
	char m_bEventLoadPropsFromFiremode : 0; // 0x450
	int32_t m_nProjectileInstanceId; // 0x454
	int32_t m_nClientFireRequestId; // 0x458
	int32_t m_nFireLoopInstanceId; // 0x45c
	FVector m_LerpFromClientOffset; // 0x460
	float m_LerpTimeRemaining; // 0x46c
	ObjectProperty m_QueuedExplodeTarget; // 0x470
	float m_fQueuedExplodeTimeAliveAtHit; // 0x478
	FVector m_QueuedExplodeLocation; // 0x47c
	FVector m_QueuedExplodeNormal; // 0x488
	FVector m_QueuedExplodeVelocity; // 0x494
	FVector m_vSpawnVelocity; // 0x4a0
	FVector m_vSpawnAcceleration; // 0x4ac
	FRotator m_rSpawnRotator; // 0x4b8
	float m_fAllowedClientMovementTime; // 0x4c4
	float m_fSpawnTimeStamp; // 0x4c8
	float m_fGravityScale; // 0x4cc
	float m_fFrictionOverride; // 0x4d0
	TArray<ObjectProperty> s_InterestedPlayers; // 0x4d4
	int32_t m_nShadowFXID; // 0x4e4
	ObjectProperty m_ShadowFX; // 0x4e8
	ComponentProperty m_ShadowDecal; // 0x4f0
	float m_fShadowBaseWidth; // 0x4f8
	float m_fMaxDecalHeight; // 0x4fc
	FRotator m_CachedRotation; // 0x500
	float m_fTrackingUpdateRate; // 0x50c
	float s_fTrackingUpdateTimer; // 0x510
	ObjectProperty m_GameplayCurves; // 0x514
	int32_t m_nDeployableOverlayDisplayMask; // 0x51c
	DeployableOverlayIcon m_eDeployableOverlayIcon; // 0x520
	DeployableOverlayState m_eDeployableOverlayState; // 0x521
	float m_fDeployableOverlayEnemyViewDist; // 0x524
	float m_fDeployableActiveLifeTime; // 0x528
};

struct UUIComponent_PlayDevQueues : UUIComponent_Display {
	ObjectProperty m_pDevQueues; // 0x124
	ObjectProperty m_grInput; // 0x12c
};

struct UUIScene_UIEditLoadouts : UUIScene {
	UIEditLoadoutsState m_eState; // 0x1cc
	UIEditLoadoutsImportState m_eImportState; // 0x1cd
	UIEditLoadoutsImportState m_eSelectedSearchType; // 0x1ce
	char m_bShowError : 1; // 0x1d0
	char m_bDisplayLoadoutCTAs : 1; // 0x1d0
	char m_bPendingFilterRequest : 1; // 0x1d0
	TScriptInterface<Class> m_pEditLoadout; // 0x1d4
	TArray<int32_t> m_nCardChoices; // 0x1e4
	int32_t m_nCardSelectionIndex; // 0x1f4
	int32_t m_nImportIndex; // 0x1f8
	TArray<ObjectProperty> m_ImportLoadouts; // 0x1fc
	ObjectProperty m_mcEdit; // 0x20c
	ObjectProperty m_EditAbilityPointsPool; // 0x214
	ObjectProperty m_mcEditTitle; // 0x21c
	ObjectProperty m_mcEditSubtitle; // 0x224
	ObjectProperty m_mcEditPoints; // 0x22c
	ObjectProperty m_mcEditPointsTitle; // 0x234
	ObjectProperty m_mcLoadoutCTA; // 0x23c
	ObjectProperty m_mcSaveLoadoutCTA; // 0x244
	ObjectProperty m_mcEditPointsBlipActive[0xf]; // 0x24c
	ObjectProperty m_EditInfo[0x5]; // 0x2c4
	ObjectProperty m_EditCard[0x5]; // 0x2ec
	ObjectProperty m_EditSlot[0x5]; // 0x314
	ObjectProperty m_EditPowerUp[0x5]; // 0x33c
	ObjectProperty m_EditPowerDown[0x5]; // 0x364
	ObjectProperty m_EditPowerUpGamepad[0x5]; // 0x38c
	ObjectProperty m_EditPowerDownGamepad[0x5]; // 0x3b4
	ObjectProperty m_ActionPowerUp; // 0x3dc
	ObjectProperty m_ActionPowerDown; // 0x3e4
	ObjectProperty m_EditOptionSave; // 0x3ec
	ObjectProperty m_EditOptionImport; // 0x3f4
	ObjectProperty m_EditOptionRename; // 0x3fc
	ObjectProperty m_EditOptionClear; // 0x404
	ObjectProperty m_EditOptionDiscard; // 0x40c
	ObjectProperty m_grEdit; // 0x414
	ObjectProperty m_grEditButtons; // 0x41c
	ObjectProperty m_mcCards; // 0x424
	ObjectProperty m_CardChoice[0x10]; // 0x42c
	ObjectProperty m_CardChoiceButton[0x10]; // 0x4ac
	ObjectProperty m_mcCardGlow[0x10]; // 0x52c
	ObjectProperty m_mcCardEquipped[0x10]; // 0x5ac
	ObjectProperty m_mcCardTitles[0x4]; // 0x62c
	ObjectProperty m_mcCardTitleIcons[0x4]; // 0x64c
	ObjectProperty m_grCard; // 0x66c
	ObjectProperty m_mcSearch; // 0x674
	ObjectProperty m_mcSearchFrame; // 0x67c
	ObjectProperty m_mcSearchType; // 0x684
	ObjectProperty m_SearchTypeButton[0x3]; // 0x68c
	ObjectProperty m_SearchTypeClose; // 0x6a4
	ObjectProperty m_mcSearchList; // 0x6ac
	ObjectProperty m_mcSearchListTitle; // 0x6b4
	ObjectProperty m_mcSearchListError; // 0x6bc
	ObjectProperty m_SearchListClose; // 0x6c4
	ObjectProperty m_SearchListEntries; // 0x6cc
	ObjectProperty m_mcSearchName; // 0x6d4
	ObjectProperty m_SearchNameSearch; // 0x6dc
	ObjectProperty m_SearchNameClose; // 0x6e4
	ObjectProperty m_mcSearchNameError; // 0x6ec
	ObjectProperty m_mcSearchNameInput; // 0x6f4
	ObjectProperty m_grSearch; // 0x6fc
	ObjectProperty m_grSearchName; // 0x704
	ObjectProperty m_grSearchList; // 0x70c
	ObjectProperty m_mcImport; // 0x714
	ObjectProperty m_mcImportTitle; // 0x71c
	ObjectProperty m_ImportCard[0x5]; // 0x724
	ObjectProperty m_mcImportPage; // 0x74c
	ObjectProperty m_ImportArrow[0x2]; // 0x754
	ObjectProperty m_mcImportBumper[0x2]; // 0x764
	ObjectProperty m_mcImportError; // 0x774
	ObjectProperty m_ImportDone; // 0x77c
	ObjectProperty m_ImportCancel; // 0x784
	ObjectProperty m_grImport; // 0x78c
	ObjectProperty m_pImportScrollLeft; // 0x794
	ObjectProperty m_pImportScrollRight; // 0x79c
	ObjectProperty m_mcRename; // 0x7a4
	ObjectProperty m_mcRenameTitle; // 0x7ac
	ObjectProperty m_mcRenameInput; // 0x7b4
	ObjectProperty m_RenameDone; // 0x7bc
	ObjectProperty m_RenameCancel; // 0x7c4
	ObjectProperty m_grRename; // 0x7cc
	ObjectProperty m_mcError; // 0x7d4
	ObjectProperty m_mcErrorTitle; // 0x7dc
	ObjectProperty m_ErrorButton; // 0x7e4
	ObjectProperty m_mcErrorSubtitle; // 0x7ec
	ObjectProperty m_grError; // 0x7f4
	int32_t m_nCurrentActiveInputActionSlot; // 0x7fc
	ObjectProperty m_akAddCard; // 0x800
	ObjectProperty m_akInvalidClick; // 0x808
	ObjectProperty m_pPCToUpdate; // 0x810
};

struct UUIScene_UIHudAtlas : UUIScene {
	char m_bHudVisible : 1; // 0x1cc
	char m_bShowAtlasUlt : 1; // 0x1cc
	float m_fUltTimeRemaining; // 0x1d0
	float m_fUltTimeTotal; // 0x1d4
	int32_t m_nAmmoRemaining; // 0x1d8
	ObjectProperty m_pRadialTimer; // 0x1dc
	ObjectProperty m_mcRange; // 0x1e4
	ObjectProperty m_mcBarrageFrame[0x3]; // 0x1ec
	ObjectProperty m_mcBarrageMeter[0x3]; // 0x204
	ObjectProperty m_mcBarrageTime[0x3]; // 0x21c
	ObjectProperty m_mcBarrageTimeTF[0x3]; // 0x234
	ObjectProperty m_mcReticule; // 0x24c
	ObjectProperty m_mcRefire; // 0x254
	ObjectProperty m_mcRefireMask; // 0x25c
	ObjectProperty m_mcDurationMeter; // 0x264
	ObjectProperty m_mcDurationMeterCap; // 0x26c
	int32_t m_nTickCallbackHandle; // 0x274
	int32_t m_nUIHudCallbackHandle; // 0x278
	int32_t m_nUIUltCallbackHandle; // 0x27c
	int32_t m_nUIUpdateCallbackHandle; // 0x280
};

struct UUIScene_UIHudYagorath : UUIScene {
	ObjectProperty m_AcidJuiceBar; // 0x1cc
	ObjectProperty m_mcUltFire; // 0x1d4
	char m_bViewTargetYagorath : 1; // 0x1dc
	char m_bHudVisible : 1; // 0x1dc
	char m_bAcidJuiceVisible : 1; // 0x1dc
	ObjectProperty m_CachedYagorath; // 0x1e0
	float m_fAcidJuiceCurrent; // 0x1e8
	float m_fAcidJuiceUpdateSpeed; // 0x1ec
};

struct UUIScene_UIMatchInvite : UUIScene {
	ObjectProperty m_MatchInvite; // 0x1cc
};

struct UTgAimAssistKeyframe : UObject {
	FName KeyframeName; // 0x60
	FRawDistributionFloat AimAssistCurve; // 0x68
	char bMirrored : 1; // 0x8c
};

struct UTgInventoryObject_Listen_Combo_Viktor : UTgInventoryObject_Listen_Combo {
	TArray<FTimedMarkedTarget> m_MarkedTargets; // 0xcc
};

struct UUIComponent_Button_LoadoutTitle : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcRarityText; // 0x12c
	ObjectProperty m_mcFade; // 0x134
	ObjectProperty m_mcColorBlock; // 0x13c
};

struct UTgSeqAct_LogTutorialAction : USequenceAction {
	int32_t PlayerAction; // 0x108
	int32_t EventData; // 0x10c
};

struct UPath_TowardGoal : UPathConstraint {
	ObjectProperty GoalActor; // 0x6c
};

struct APortalMarker : ANavigationPoint {
	ObjectProperty MyPortal; // 0x378
};

struct ATgRepInfo_Portal : ATgRepInfo_Deployable {
	ObjectProperty r_TwinDRI; // 0x2e0
	char c_bMasterEntity : 1; // 0x2e8
};

struct UParticleModuleTrailSource : UParticleModuleTrailBase {
	ETrail2SourceMethod SourceMethod; // 0x68
	EParticleSourceSelectionMethod SelectionMethod; // 0x69
	FName SourceName; // 0x6c
	FRawDistributionFloat SourceStrength; // 0x74
	char bLockSourceStength : 1; // 0x98
	char bInheritRotation : 1; // 0x98
	int32_t SourceOffsetCount; // 0x9c
	TArray<FVector> SourceOffsetDefaults; // 0xa0
};

struct USeqAct_MultiLevelStreaming : USeqAct_LevelStreamingBase {
	TArray<FLevelStreamingNameCombo> Levels; // 0x124
	char bUnloadAllOtherLevels : 1; // 0x134
	char bStatusIsOk : 1; // 0x134
};

struct UTgSeqAct_DefenseWaveSpawner : USequenceAction {
	int32_t m_nRoundNumber; // 0x108
	float m_fSpawnFrequency; // 0x10c
	float m_fNextSpawnTime; // 0x110
};

struct UUIDataLeagueTier : UUIData {
	ObjectProperty pLeague; // 0x64
	Fdword dwTierId; // 0x6c
};

struct UUIComponent_MatchDisplay : UUIComponent_Display {
	ObjectProperty m_mcBuildHeader; // 0x124
	ObjectProperty m_mcStatsHeader; // 0x12c
	ObjectProperty m_pList; // 0x134
	ObjectProperty m_pTabs; // 0x13c
	ObjectProperty m_pViewProfileAction; // 0x144
	EUICMatchDisplayTabType m_eDisplayMode; // 0x14c
	ObjectProperty m_pReportPlayerPopup; // 0x150
	ObjectProperty m_pReportPlayerAction; // 0x158
};

struct UUILobbyChat : UTgGfxScene {
	int32_t m_nDepth; // 0x1ec
	int32_t m_nPosition; // 0x1f0
	int32_t m_nOpenIdentity; // 0x1f4
	FString m_sLocalTabName; // 0x1f8
	ObjectProperty m_mcArrow[0x2]; // 0x208
	ObjectProperty m_mcArrowNotify[0x2]; // 0x218
	ObjectProperty m_mcBlocker; // 0x228
	TArray<ObjectProperty> m_mcTabs; // 0x230
	ObjectProperty m_AkNewTabSound; // 0x240
	TArray<FChannelCloseTimeOverride> m_ChannelCloseTimeOverrides; // 0x248
};

struct UDrawBoxComponent : UPrimitiveComponent {
	FColor BoxColor; // 0x24c
	ObjectProperty BoxMaterial; // 0x250
	FVector BoxExtent; // 0x258
	char bDrawWireBox : 1; // 0x264
	char bDrawLitBox : 1; // 0x264
	char bDrawOnlyIfSelected : 1; // 0x264
};

struct UAnimNodeBlendBySpeed : UAnimNodeBlendList {
	float Speed; // 0x144
	int32_t LastChannel; // 0x148
	float BlendUpTime; // 0x14c
	float BlendDownTime; // 0x150
	float BlendDownPerc; // 0x154
	TArray<float> Constraints; // 0x158
	char bUseAcceleration : 1; // 0x168
	float BlendUpDelay; // 0x16c
	float BlendDownDelay; // 0x170
	float BlendDelayRemaining; // 0x174
};

struct UHeightFogComponent : UActorComponent {
	char bEnabled : 1; // 0x88
	float Height; // 0x8c
	float Density; // 0x90
	float LightBrightness; // 0x94
	FColor LightColor; // 0x98
	float ExtinctionDistance; // 0x9c
	float StartDistance; // 0xa0
};

struct ATgDeploy_DeathStamp : ATgDeployable {
	ObjectProperty m_PawnVictim; // 0x46c
};

struct UInterpTrackFloatProp : UInterpTrackFloatBase {
	FName PropertyName; // 0xb8
};

struct UTgAIBehaviorCondition_ReturnAlways : UTgAIBehaviorCondition {
	EBehaviorStatus AlwaysReturn; // 0x98
};

struct UTgSeqEvent_PhaseNotify : USequenceEvent {
	FString m_PhaseName; // 0x128
};

struct UTgAIBehaviorCondition_WhatIsCombatTargetTargeting : UTgAIBehaviorCondition {
	ECombatTargetType TargetType; // 0x98
};

struct UGameAICmd_Hover_MoveToGoal_Mesh : UGameAICommand {
	ObjectProperty Find; // 0x84
	float Radius; // 0x8c
	char bWasFiring : 1; // 0x90
	char bFinalApproach : 1; // 0x90
	char bFallbackMoveToMesh : 1; // 0x90
	float DesiredHoverHeight; // 0x94
	float CurrentHoverHeight; // 0x98
	float SubGoalReachDist; // 0x9c
	float GoalDistance; // 0xa0
	FVector IntermediatePoint; // 0xa4
	FVector LastMovePoint; // 0xb0
	int32_t NumMovePointFails; // 0xbc
	int32_t MaxMovePointFails; // 0xc0
	FVector FallbackDest; // 0xc4
	ObjectProperty MoveToActor; // 0xd0
	FBasedPosition LastMoveTargetPathLocation; // 0xd8
	FVector InitialFinalDestination; // 0x110
};

struct ATgPawn_Princess : ATgPawn_Character {
	ObjectProperty m_CachedEnlightenment; // 0x3160
	ObjectProperty m_CachedEnlightenmentGun; // 0x3168
	TScriptInterface<Class> r_GraceTargets[0xf]; // 0x3170
};

struct APostProcessVolume : AVolume {
	float Priority; // 0x2bc
	char bOverrideWorldPostProcessChain : 1; // 0x2c0
	char bEnabled : 1; // 0x2c0
	FPostProcessSettings Settings; // 0x2c4
	ObjectProperty NextLowerPriorityVolume; // 0x444
};

struct ATgDeploy_HealthNugget : ATgDeployable {
	char m_bRenderAsActive : 1; // 0x46c
	char m_bIsActiveRendered : 1; // 0x46c
	char m_bCountTowardsHealingStats : 1; // 0x46c
	ObjectProperty c_HelpTipActor; // 0x470
	float m_fHealOverride; // 0x478
	float m_fHoTOverride; // 0x47c
	TArray<ObjectProperty> m_PendingTouches; // 0x480
};

struct UAnimNotify_ClothingMaxDistanceScale : UAnimNotify {
	float StartScale; // 0x68
	float EndScale; // 0x6c
	EMaxDistanceScaleMode ScaleMode; // 0x70
	float Duration; // 0x74
};

struct UMaterialExpressionDeriveNormalZ : UMaterialExpression {
	FExpressionInput InXY; // 0xb0
};

struct ATgDevice_Zodiac : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	TArray<float> m_EffectRemainingTime; // 0xa0c
};

struct ATgPawn_Churchill : ATgPawn_Character {
	ObjectProperty r_LeftDrone; // 0x3160
	ObjectProperty r_RightDrone; // 0x3168
	char s_bFireLeftDroneNext : 1; // 0x3170
	char s_bStopDroneFiring : 1; // 0x3170
	char s_bLeftDroneInFireTimeout : 1; // 0x3170
	char s_bRightDroneInFireTimeout : 1; // 0x3170
	TArray<ObjectProperty> m_ChurchillDroneAnims1p; // 0x3174
	float r_fVisualRecoilMultiplier; // 0x3184
	FVector c_vForced3pAdditionalOffsetADS; // 0x3188
	float m_fUnderheadADSDistanceClampAngle; // 0x3194
	float m_fUnderheadADSDistanceClampPushIn; // 0x3198
	float m_fUnderheadADSDistanceClampOvershoot; // 0x319c
	float m_fOverheadADSDistanceClampAngle; // 0x31a0
	float m_fOverheadADSDistanceClampPushIn; // 0x31a4
	float m_fOverheadADSDistanceClampOvershoot; // 0x31a8
	ObjectProperty m_EquippedBoobyTrap; // 0x31ac
};

struct USoundNodeAmbient : USoundNode {
	char bAttenuate : 1; // 0x74
	char bSpatialize : 1; // 0x74
	char bAttenuateWithLPF : 1; // 0x74
	float dBAttenuationAtMax; // 0x78
	SoundDistanceModel DistanceModel; // 0x7c
	float RadiusMin; // 0x80
	float RadiusMax; // 0x84
	float LPFRadiusMin; // 0x88
	float LPFRadiusMax; // 0x8c
	float PitchMin; // 0x90
	float PitchMax; // 0x94
	float VolumeMin; // 0x98
	float VolumeMax; // 0x9c
	TArray<FAmbientSoundSlot> SoundSlots; // 0xa0
};

struct ATgDevice_CycloneStrike : ATgDevice_HitPulse {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa0c
	char m_bLockInputOnPostFire : 1; // 0xa14
};

struct UTgSeqAct_GetMaterialInst : USequenceAction {
	ObjectProperty MatInst; // 0x108
	FString MatInstName; // 0x110
	int32_t MaterialIndex; // 0x120
};

struct UTgAIBehaviorCondition_CombatTargetHasEffectCategory : UTgAIBehaviorCondition {
	char bEffectGroupCategoryCheckInstigator : 1; // 0x98
	int32_t EffectCategoryId; // 0x9c
	int32_t EffectGroupId; // 0xa0
};

struct UTgGameplayCurvesSet_DamageFalloffAOE : UTgGameplayCurvesSet {
	FRawDistributionFloat DamageFalloff; // 0x64
	char bIsRangeNormalized : 1; // 0x88
	char bExcludeEffectiveRange : 1; // 0x88
};

struct UMaterialExpressionSceneDepth : UMaterialExpression {
	FExpressionInput Coordinates; // 0xb0
	char bNormalize : 1; // 0xe4
};

struct UTgAnimNotify_CameraCut : UAnimNotify {
	float m_fTweenSpeed; // 0x68
	FVector m_vTweenDir; // 0x6c
	FVector m_vLocationOffset; // 0x78
	FRotator m_rRotationOffset; // 0x84
	FRotator m_rRotationTarget; // 0x90
	float m_fRotationDuration; // 0x9c
	float m_fRotationDelay; // 0xa0
};

struct UTgAIBehaviorAction_MoveToRallyPoint : UTgAIBehaviorAction_MoveToTarget {
	ESelectionArbitrator ArbitratorOnMultipleValid; // 0x9c
	char bMustBeSameLane : 1; // 0xa0
};

struct UPBRuleNodeRepeat : UPBRuleNodeBase {
	EProcBuildingAxis RepeatAxis; // 0x70
	float RepeatMaxSize; // 0x74
};

struct UUIData_RentSprayPopup : UUIData {
	FString m_lsSprayName; // 0x64
	FString m_lsChestName; // 0x74
	int32_t m_nChestIconFrame; // 0x84
	int32_t m_nChestQuantity; // 0x88
	int32_t m_nSprayIconFrame; // 0x8c
	int32_t m_nSprayRarityFrame; // 0x90
	Fdword m_dwVendorId; // 0x94
	Fdword m_dwLootId; // 0x98
	ObjectProperty m_pSprayData; // 0x9c
};

struct UUIPropertyDataProvider : UUIDataProvider {
	TArray<UProperty*> ComplexPropertyTypes; // 0x70
	DelegateProperty __CanSupportComplexPropertyType__Delegate; // 0x80
};

struct ATgPawn_Turret_Flamethrower_Mini : ATgPawn_Turret_Flamethrower {
	float m_fExtraTranslationOffsetZ; // 0x2f18
};

struct UTgAnimBlendByPhase : UTgAnimNodeBlendList {
	ObjectProperty m_TgPawn; // 0x168
	int32_t m_LastPhase; // 0x170
	int32_t m_CurrentPhase; // 0x174
	char m_bEnableTransitionAnims : 1; // 0x178
	TArray<Fm_PhaseProfile> m_PhaseProfiles; // 0x17c
};

struct ATgDevice_AtlasUlt : ATgDevice {
	float m_fTimeDilation; // 0xa04
	float m_fRampUpTime; // 0xa08
	int32_t s_nTimeDilationWindowId; // 0xa0c
};

struct UTgAnimNodeEmoteSequence : UAnimNodeSequenceBlendBase {
	float m_fBlendSpeed; // 0x1bc
	FName m_nmAnimName; // 0x1c0
	TArray<FEmoteAnimInfo> m_CachedEmoteAnims; // 0x1c8
	int32_t m_nActiveAnim; // 0x1d8
	char m_bNewAnim : 1; // 0x1dc
};

struct UClient : UObject {
	float MinDesiredFrameRate; // 0x68
	float DisplayGamma; // 0x6c
	float InitialButtonRepeatDelay; // 0x70
	float ButtonRepeatDelay; // 0x74
};

struct UTgGameplayCurvesSet_TargetAimTracking : UTgGameplayCurvesSet {
	TArray<ObjectProperty> TargetTrackingCurves; // 0x64
	FTargetAimTrackingDebugVals DebugVals; // 0x74
	char bSaveDebugVals : 1; // 0xb0
};

struct UTgAIBehaviorCondition_DistanceFromSelectedTarget : UTgAIBehaviorCondition_DistanceBase {
	char bMustBeEnemy : 1; // 0x9c
	char bIgnoreTaskforce : 1; // 0x9c
	ETargetSelector TargetSelector; // 0xa0
	ECombatTargetType TargetType; // 0xa1
	int32_t DeployableId; // 0xa4
};

struct UMultiFont : UFont {
	TArray<float> ResolutionTestTable; // 0x1a0
};

struct ATgFatalityFactory : AActor {
	ObjectProperty m_FatalityMeshActor; // 0x280
	FLightingChannelContainer m_LightingChannels; // 0x288
};

struct USeqEvent_Mover : USequenceEvent {
	float StayOpenTime; // 0x128
};

struct UTgInventoryObject_Listen_LoogieHit : UTgInventoryObject_Listen_AbilityProcBase {
	int32_t m_nLastFireLoopInstanceId; // 0xcc
	int32_t m_nNumTimesApplied; // 0xd0
};

struct UTgAIBehaviorCondition_Taskforce : UTgAIBehaviorCondition {
	int32_t Taskforce; // 0x98
};

struct UUIComponent_EventChallengeMapRegion : UUIComponent_Display {
	ObjectProperty m_mcLock; // 0x124
	ObjectProperty m_mcUnlockTime; // 0x12c
	ObjectProperty m_mcUnlockTimeText; // 0x134
	ObjectProperty m_mcActive; // 0x13c
	ObjectProperty m_mcStates; // 0x144
};

struct UUIScene_UIHudVGS : UUIScene {
	ObjectProperty m_mcTitle; // 0x1cc
	ObjectProperty m_mcFrame; // 0x1d4
	ObjectProperty m_pVGSEntries; // 0x1dc
};

struct UUIComponent_ItemIconInventory : UUIComponent_Display {
	ObjectProperty m_mcIcon; // 0x124
	ObjectProperty m_mcQuantity; // 0x12c
};

struct ATgGame_Paladins : ATgGame_Battle {
	ObjectProperty m_masterPhase; // 0x76c
	ObjectProperty m_CurrentPhase; // 0x774
	ObjectProperty m_lastCreatedPhase; // 0x77c
	ObjectProperty m_lastDecoratedPhase; // 0x784
	char m_bDeferEndingGame : 1; // 0x78c
	char m_bDisableMusicEvents : 1; // 0x78c
	char m_bScoringEnabled : 1; // 0x78c
	char m_bSuppressItemMenu : 1; // 0x78c
	char m_bCanPurchaseMasterRiding : 1; // 0x78c
	char m_bCanPurchaseItemsAnywhere : 1; // 0x78c
	char m_bCanPurchaseItemsWhileDead : 1; // 0x78c
	char m_bLimitBurnCardsToOnePerCategory : 1; // 0x78c
	char m_bCanSpoolCredits : 0; // 0x78c
	char m_bAutoMountOnRespawn : 0; // 0x78c
	char m_bDropHealthNuggetOnDeath : 0; // 0x78c
	char m_bRespawnBots : 0; // 0x78c
	char m_bDisableKillcam : 0; // 0x78c
	char m_bCanApplyCardEquipStats : 0; // 0x78c
	char m_bLoadoutSelectionEnabled : 0; // 0x78c
	char m_bTalentsEnabled : 0; // 0x78c
	char m_bAutoMountAtRoundBegin : 0; // 0x78c
	char m_bResetPlayersNotInSpawnRoom : 0; // 0x78c
	char m_bDeckSwappingAlwaysEnabled : 0; // 0x78c
	char m_bDiminishingReturnsOnCCEnabled : 0; // 0x78c
	char m_bSpawnAbyssalEchoes : 0; // 0x78c
	char m_bHasCompositionData : 0; // 0x78c
	char m_bAllPlayersConnected : 0; // 0x78c
	float m_fGameDuration; // 0x790
	ObjectProperty m_currentCapturePointForPhases; // 0x794
	int32_t m_nGoalScore; // 0x79c
	int32_t m_nTF1Score; // 0x7a0
	int32_t m_nTF2Score; // 0x7a4
	int32_t m_nWinningScore; // 0x7a8
	EHUDType m_eHUDType; // 0x7ac
	ENotifySound m_eMusicEvent; // 0x7ad
	int32_t m_nCreditSpoolActive; // 0x7b0
	int32_t m_nCanSpoolUlt; // 0x7b4
	int32_t m_nAIDisabled; // 0x7b8
	int32_t m_nAimAssistDisabled; // 0x7bc
	float m_fPlayerWaitTime; // 0x7c0
	int32_t m_nHealthNuggetDeployableId; // 0x7c4
	int32_t m_nHealthNuggetTeamOnlyDeployableId; // 0x7c8
	int32_t m_fHealthNuggetPersistTime; // 0x7cc
	float m_fPlayerViewDistance; // 0x7d0
	float m_fVisibilityVolumeViewDistance; // 0x7d4
	float m_fCardCooldownIncrease; // 0x7d8
	float m_fCardCooldownMultiplier; // 0x7dc
	float m_fGameTypeReminderTime; // 0x7e0
	float m_fRespawnBeaconLifeSpan; // 0x7e4
	float m_fBaseRespawnTime; // 0x7e8
	float m_fMapLaneChangeDelay; // 0x7ec
	int32_t m_nStartingCredits; // 0x7f0
	int32_t m_nMaxCredits; // 0x7f4
	FString m_GameplayEventsWriterClassName; // 0x7f8
	ObjectProperty GameplayEventsWriter; // 0x808
	FTeamDifficultyData DifficultyData[0x2]; // 0x810
	ObjectProperty AIDirector; // 0x820
	int32_t m_nEventTalentVendorId; // 0x828
	int32_t m_nEventDeckVendorId; // 0x82c
	float m_fFlankerSoloKillRewardDistance; // 0x830
	float m_fDamageRoleMultiplier; // 0x834
	float m_fFlankRoleMultiplier; // 0x838
	float m_fFrontLineRoleMultiplier; // 0x83c
	float m_fSupportRoleMultiplier; // 0x840
	int32_t m_nNextUniquePlayerID; // 0x844
	ObjectProperty m_SpawnChatter; // 0x848
	ObjectProperty m_AbyssalEchoes; // 0x850
	TArray<Fdword> m_dwConnectedPlayers; // 0x858
};

struct ATgDeploy_WardersField : ATgDeploy_EffectField {
	float r_fRadiusForFX; // 0x4a0
	float r_fRadiusScaleForDecal; // 0x4a4
	char r_bEarthenGuardActive : 1; // 0x4a8
};

struct AMobileMenuGame : AGameInfo {
	UMobileMenuScene* InitialSceneToDisplayClass; // 0x4cc
};

struct UMaterialExpression : UObject {
	int32_t EditorX; // 0x60
	int32_t EditorY; // 0x64
	char bRealtimePreview : 1; // 0x68
	char bNeedToUpdatePreview : 1; // 0x68
	char bIsParameterExpression : 1; // 0x68
	char bShowOutputNameOnPin : 1; // 0x68
	char bHidePreviewWindow : 1; // 0x68
	char bShowInputs : 1; // 0x68
	char bShowOutputs : 1; // 0x68
	char bUsedByStaticParameterSet : 1; // 0x68
	ObjectProperty Material; // 0x6c
	ObjectProperty Function; // 0x74
	FString Desc; // 0x7c
	FColor BorderColor; // 0x8c
	TArray<FName> MenuCategories; // 0x90
	TArray<FExpressionOutput> Outputs; // 0xa0
};

struct UTgAnimMetaData_MaskingPlane : UTgAnimMetaData_MICScalarParameterExtended {
	int32_t WallIndex; // 0xc8
	FVector WallNormal; // 0xcc
	FVector WallPosition0; // 0xd8
	FVector WallPosition1; // 0xe4
	FName WallEnableBaseName; // 0xf0
	FName WallPositionBaseName; // 0xf8
	FName WallNormalBaseName; // 0x100
};

struct UUIComponent_ItemTooltip : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcSubtitle; // 0x12c
	ObjectProperty m_mcDescription; // 0x134
	int32_t m_nLastSetItemID; // 0x13c
};

struct UUIComponent_ReferralReward : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcIcon; // 0x12c
	ObjectProperty m_mcAddition; // 0x134
	ObjectProperty m_mcCurrency; // 0x13c
	ObjectProperty m_mcAmount; // 0x144
	ObjectProperty m_mcFrame; // 0x14c
};

struct UTgPawnMod_FxAudio_EDMSeris : UTgPawnMod_FxAudio {
	float m_fGlowMultBass; // 0xac
};

struct UTgAIBehaviorCondition_IsLookingAtCapturePoint : UTgAIBehaviorCondition {
	float VisibilityAngle; // 0x98
};

struct UTgAnimNodeSequence_SyncToCooldown : UTgAnimNodeSequence {
	TG_EQUIP_POINT m_EqpPoint; // 0x1bc
	float m_fMaxPlayRate; // 0x1c0
	float m_fPlayRateWaitForCooldown; // 0x1c4
	float m_fPctStartWaitForCooldown; // 0x1c8
	float fCooldownEndTime; // 0x1cc
	char bWaitForCooldown : 1; // 0x1d0
};

struct UCylinderComponent : UPrimitiveComponent {
	float CollisionHeight; // 0x24c
	float CollisionRadius; // 0x250
	FColor CylinderColor; // 0x254
	char bDrawBoundingBox : 1; // 0x258
	char bDrawNonColliding : 1; // 0x258
	char bAlwaysRenderIfSelected : 1; // 0x258
};

struct ATgDevice_Leap : ATgDevice {
	char m_bLeapInLookDirection : 1; // 0xa04
	char m_bDidJustLeap : 1; // 0xa04
	char m_bJumpTowardsAcceleration : 1; // 0xa04
	char m_bFireOnLeap : 1; // 0xa04
};

struct UUIComponent_ChampionSelectChampion : UUIComponent_Display {
	ObjectProperty m_mcLoading; // 0x124
	ObjectProperty m_mcNameTF; // 0x12c
	ObjectProperty m_mcMasteryTF; // 0x134
	ObjectProperty m_mcRotation; // 0x13c
	ObjectProperty m_mcLock; // 0x144
	ObjectProperty m_mcNew; // 0x14c
	ObjectProperty m_mcRented; // 0x154
	ObjectProperty m_mcRoleTF; // 0x15c
	ObjectProperty m_mcClassIcon; // 0x164
	ObjectProperty m_mcIcon; // 0x16c
	ObjectProperty m_mcLoadoutCTA; // 0x174
	ObjectProperty m_pCTA; // 0x17c
	ObjectProperty m_pProgress; // 0x184
};

struct UUIScene : UUIComponent_Display {
	TArray<FUIQueuedSounds> m_QueuedSounds; // 0x124
	FMap_Mirror m_AnimMap; // 0x134
	TArray<ObjectProperty> m_Interactables; // 0x17c
	TArray<ObjectProperty> m_HeaderData; // 0x18c
	FString m_sHeaderName; // 0x19c
	TArray<ObjectProperty> m_FocusedGroupStack; // 0x1ac
	char m_bAllowDuplicateData : 1; // 0x1bc
	char m_bAcceptsInput : 1; // 0x1bc
	char m_bUninitializing : 1; // 0x1bc
	char m_bShowHeader : 1; // 0x1bc
	char m_bShowLogo : 1; // 0x1bc
	int32_t m_nSelectedHeaderTab; // 0x1c0
	int32_t m_nOnBackCallbackHandle; // 0x1c4
	int32_t m_nOnHeaderTabCallbackHandle; // 0x1c8
};

struct UUIScene_UILobbyBoosterActivation : UUIScene {
	float m_fDisplayTimer; // 0x1cc
	ObjectProperty m_akMatchBoosterOnShow; // 0x1d0
	ObjectProperty m_akMatchBoosterOnHide; // 0x1d8
};

struct AImageReflectionShadowPlane : AActor {
	char bEnabled : 1; // 0x280
	ComponentProperty ReflectionShadowComponent; // 0x284
};

struct USeqAct_PlayCameraAnim : USequenceAction {
	ObjectProperty CameraAnim; // 0x108
	char bLoop : 1; // 0x110
	char bRandomStartTime : 1; // 0x110
	float BlendInTime; // 0x114
	float BlendOutTime; // 0x118
	float Rate; // 0x11c
	float IntensityScale; // 0x120
	ECameraAnimPlaySpace PlaySpace; // 0x124
	ObjectProperty UserDefinedSpaceActor; // 0x128
};

struct ATgEmitter_TeamColor : AEmitter {
	int32_t nTaskForce; // 0x294
	FParticleChannelContainer DefaultParticleChannels; // 0x298
};

struct UTgDeviceForm_VanguardUlt : UTgDeviceForm {
	ObjectProperty m_PullBeam; // 0x28c
	TArray<ObjectProperty> m_VanguardUltNodes3p; // 0x294
	TArray<ObjectProperty> m_VanguardUltNodes1p; // 0x2a4
	ObjectProperty m_Target; // 0x2b4
	int32_t m_nPosture; // 0x2bc
	VanguardUltAnimUpdate m_eVanguardUltAnimState; // 0x2c0
};

struct USeqEvent_ProjectileLanded : USequenceEvent {
	float MaxDistance; // 0x128
};

struct UTgAnimNodeBlendByStrafe : UAnimNodeBlend {
	ObjectProperty m_TgPawn; // 0x124
	float m_fBlendTime; // 0x12c
};

struct UTgDeviceForm_DragonSlam : UTgDeviceForm {
	char m_bStartFireInAir : 1; // 0x28c
	TArray<ObjectProperty> m_DragonSlamBlendList1P; // 0x290
	TArray<ObjectProperty> m_DragonSlamBlendList3P; // 0x2a0
};

struct ATgSkeletalMeshActor_LobbyBase : ATgSkeletalMeshActor_Loader {
	char m_bPlayTransitionOutro : 1; // 0x4b0
	FString m_TransitionActorClassName; // 0x4b4
	int32_t m_nCharacterMastery; // 0x4c4
	FName m_nmAnimationTag; // 0x4c8
	ObjectProperty m_TransitionActor; // 0x4d0
};

struct ATgDeploy_HealingTotem : ATgDeployable {
	float r_fRadiusScale; // 0x46c
	char r_bHasHealingRain : 1; // 0x470
	char r_bHasWindTotem : 1; // 0x470
	float r_fMonolithReduction; // 0x474
	ObjectProperty m_CachedPawnOwner; // 0x478
};

struct ATgProj_TigronChakram : ATgProj_FreeGrenade {
	float m_fScaleMultiplier; // 0x580
	float m_fBounceBacktrackDistance; // 0x584
	float m_fBounceBacktrackDuration; // 0x588
	FHistoricPosition m_LastBounce; // 0x58c
};

struct ANavigationPoint : AActor {
	char bEndPoint : 1; // 0x280
	char bTransientEndPoint : 1; // 0x280
	char bHideEditorPaths : 1; // 0x280
	char bCanReach : 1; // 0x280
	char bBlocked : 1; // 0x280
	char bOneWayPath : 1; // 0x280
	char bNeverUseStrafing : 1; // 0x280
	char bAlwaysUseStrafing : 1; // 0x280
	char bForceNoStrafing : 0; // 0x280
	char bAutoBuilt : 0; // 0x280
	char bSpecialMove : 0; // 0x280
	char bNoAutoConnect : 0; // 0x280
	char bNotBased : 0; // 0x280
	char bPathsChanged : 0; // 0x280
	char bDestinationOnly : 0; // 0x280
	char bSourceOnly : 0; // 0x280
	char bSpecialForced : 0; // 0x280
	char bMustBeReachable : 0; // 0x280
	char bBlockable : 0; // 0x280
	char bFlyingPreferred : 0; // 0x280
	char bMayCausePain : 0; // 0x280
	char bAlreadyVisited : 0; // 0x280
	char bVehicleDestination : 0; // 0x280
	char bMakeSourceOnly : 0; // 0x280
	char bMustTouchToReach : 0; // 0x280
	char bCanWalkOnToReach : 0; // 0x280
	char bBuildLongPaths : 0; // 0x280
	char bBlockedForVehicles : 0; // 0x280
	char bPreferredVehiclePath : 0; // 0x280
	char bHasCrossLevelPaths : 0; // 0x280
	char bShouldSaveForCheckpoint : 0; // 0x280
	FNavigationOctreeObject NavOctreeObject; // 0x284
	TArray<ObjectProperty> PathList; // 0x2c0
	TArray<FActorReference> Volumes; // 0x2d0
	int32_t visitedWeight; // 0x2e0
	int32_t bestPathWeight; // 0x2e4
	ObjectProperty nextNavigationPoint; // 0x2e8
	ObjectProperty nextOrdered; // 0x2f0
	ObjectProperty prevOrdered; // 0x2f8
	ObjectProperty previousPath; // 0x300
	int32_t Cost; // 0x308
	int32_t ExtraCost; // 0x30c
	int32_t TransientCost; // 0x310
	int32_t FearCost; // 0x314
	TArray<FDebugNavCost> CostArray; // 0x318
	ObjectProperty InventoryCache; // 0x328
	float InventoryDist; // 0x330
	float LastDetourWeight; // 0x334
	ComponentProperty CylinderComponent; // 0x338
	FCylinder MaxPathSize; // 0x340
	FGuid NavGuid; // 0x348
	ComponentProperty GoodSprite; // 0x358
	ComponentProperty BadSprite; // 0x360
	int32_t NetworkID; // 0x368
	ObjectProperty AnchoredPawn; // 0x36c
	float LastAnchoredPawnTime; // 0x374
};

struct UTgSeqAct_GetLocalPlayerController : USequenceAction {
	ObjectProperty LocalPlayerController; // 0x108
};

struct UUIComponent_SimulMediaCollectionReward : UUIComponent_Display {
	ObjectProperty m_mcTF0; // 0x124
	ObjectProperty m_mcTF1; // 0x12c
	ObjectProperty m_mcRewardIcon; // 0x134
};

struct UUIData_Queue : UUIData {
	TArray<Fdword> dwQueues; // 0x64
	int32_t nForcedBotId; // 0x74
	EUIDQCallToAction eCTA; // 0x78
	char bSelected : 1; // 0x7c
};

struct UTgPawnMod_FxAudio : UTgPawnMod {
	TArray<FModFxAudioValues> m_AudioValues; // 0x70
	float m_fTimeSinceBeat; // 0x80
	int32_t m_nNumSegments; // 0x84
	float m_fDampenedVal; // 0x88
	char m_bActivateCharacterMusic : 1; // 0x8c
	char m_bQueuedPlayMusic : 1; // 0x8c
	int32_t m_nPlayingId; // 0x90
	int32_t m_nSwitchQueryId; // 0x94
	int32_t m_nRTPCQueryId; // 0x98
	FName m_nmLobbySwitchName; // 0x9c
	FName m_nmGameSwitchGroupName; // 0xa4
};

struct USeqAct_Possess : USequenceAction {
	ObjectProperty PawnToPossess; // 0x108
	char bKillOldPawn : 1; // 0x110
	char bTryToLeaveVehicle : 1; // 0x110
};

struct ATgGame_Paladins_Siege : ATgGame_PaladinsExtended {
	int32_t m_nPointsForCapturing; // 0xa1c
	int32_t m_nPointsForPayload; // 0xa20
	int32_t m_nPointsForDefending; // 0xa24
	int32_t m_nPointsForPayloadCheckpoint; // 0xa28
	int32_t m_nCreditsForWinningARound; // 0xa2c
	int32_t m_nCreditsForCapturingPoint; // 0xa30
	int32_t m_nCreditsForSuccessfulDefend; // 0xa34
	int32_t m_nCreditsForSuccessfulPush; // 0xa38
	char m_bRespawnDeadPlayersAfterRound : 1; // 0xa3c
	char m_bRespawnLivePlayersAfterRound : 1; // 0xa3c
	char m_bRoundTreatment : 1; // 0xa3c
	char m_bCanWinOnDefense : 1; // 0xa3c
	char m_bInCapturePointOvertime : 1; // 0xa3c
	char m_bInPayloadOvertime : 1; // 0xa3c
	char m_bDestroyPayloadCartAfterPayloadPhase : 1; // 0xa3c
	char m_bDoNotSwitchPoints : 1; // 0xa3c
	char m_bHasHitCheckpoint : 0; // 0xa3c
	char m_bFadeOutAtRoundEnd : 0; // 0xa3c
	float m_fLosingCaptureRateModifier; // 0xa40
	float m_fDurationUntilCaptureOvertime; // 0xa44
	float m_fCaptureOvertimeWarningDuration; // 0xa48
	float m_fPayloadDuration; // 0xa4c
	float m_fPayloadOvertimeDuration; // 0xa50
	float m_fPayloadDurationCheckpoint; // 0xa54
	float m_fRoundEndRespawnDelay; // 0xa58
	float m_fPayloadIncreaseLOSTimeTrigger; // 0xa5c
	int32_t s_nCurrentRound; // 0xa60
};

struct ATgPawn_Grover : ATgPawn_Character {
	float r_fRadiusForFXBlossom; // 0x3160
	ObjectProperty m_CachedVine; // 0x3164
	ObjectProperty m_CachedUlt; // 0x316c
};

struct UAppNotificationsBase : UPlatformInterfaceBase {
	FLaunchNotificationInfo AppLaunchNotification; // 0x80
	DelegateProperty __OnReceivedLocalNotification__Delegate; // 0xac
	DelegateProperty __OnReceivedRemoteNotification__Delegate; // 0xbc
};

struct ATgDevice_IronSights : ATgDevice_ToggleADS {
	ObjectProperty m_CachedViktorInhand; // 0xa1c
	ObjectProperty m_CachedHustleDevice; // 0xa24
};

struct ATgSpectatorCamera : ATgPlayerCamera {
	FViewTargetTransitionParams m_DefaultBlendParams; // 0x88c
	FViewTargetTransitionParams m_SnapBlendParams; // 0x89c
	ObjectProperty m_CinematicAnim; // 0x8ac
	ObjectProperty m_AnimInstance; // 0x8b4
};

struct UOnlineSubsystemPC : UOnlineSubsystemCommonImpl {
	int32_t LoggedInPlayerNum; // 0x288
	FString LoggedInPlayerName; // 0x28c
	FUniqueNetId LoggedInPlayerId; // 0x29c
	TArray<FPointer> AsyncTasks; // 0x2a4
	FString ProfileDataDirectory; // 0x2b4
	FString ProfileDataExtension; // 0x2c4
	TArray<DelegateProperty> ReadProfileSettingsDelegates; // 0x2d4
	TArray<DelegateProperty> WriteProfileSettingsDelegates; // 0x2e4
	ObjectProperty CachedProfile; // 0x2f4
	TArray<DelegateProperty> ReadFriendsDelegates; // 0x2fc
	TArray<DelegateProperty> FriendsChangeDelegates; // 0x30c
	TArray<DelegateProperty> MutingChangeDelegates; // 0x31c
	TArray<DelegateProperty> TokenAndSignatureRetrievedDelegates; // 0x32c
	TArray<DelegateProperty> PrivilegeCheckedForUsersDelegates; // 0x33c
	TArray<DelegateProperty> PrivilegeCheckedForUsersByUniqueNetIdsDelegates; // 0x34c
	TArray<DelegateProperty> FilterTextDelegates; // 0x35c
	ObjectProperty PCVoiceInt; // 0x36c
	DelegateProperty __OnLoginChange__Delegate; // 0x374
	DelegateProperty __OnLoginCancelled__Delegate; // 0x384
	DelegateProperty __OnCurrentUserChanged__Delegate; // 0x394
	DelegateProperty __OnTokenAndSignatureRetrieved__Delegate; // 0x3a4
	DelegateProperty __OnMutingChange__Delegate; // 0x3b4
	DelegateProperty __OnReadTitleFileComplete__Delegate; // 0x3c4
	DelegateProperty __OnFriendsChange__Delegate; // 0x3d4
	DelegateProperty __OnLoginFailed__Delegate; // 0x3e4
	DelegateProperty __OnSystemUserControllerPairingChanged__Delegate; // 0x3f4
	DelegateProperty __OnLogoutCompleted__Delegate; // 0x404
	DelegateProperty __OnPrivilegeLevelChecked__Delegate; // 0x414
	DelegateProperty __OnReadProfileSettingsComplete__Delegate; // 0x424
	DelegateProperty __OnWriteProfileSettingsComplete__Delegate; // 0x434
	DelegateProperty __OnLoginStatusChange__Delegate; // 0x444
	DelegateProperty __OnReadFriendsComplete__Delegate; // 0x454
	DelegateProperty __OnReadOnlineStatsComplete__Delegate; // 0x464
	DelegateProperty __OnFlushOnlineStatsComplete__Delegate; // 0x474
	DelegateProperty __OnRegisterHostStatGuidComplete__Delegate; // 0x484
	DelegateProperty __OnLinkStatusChange__Delegate; // 0x494
	DelegateProperty __OnExternalUIChange__Delegate; // 0x4a4
	DelegateProperty __OnControllerChange__Delegate; // 0x4b4
	DelegateProperty __OnConnectionStatusChange__Delegate; // 0x4c4
	DelegateProperty __OnStorageDeviceChange__Delegate; // 0x4d4
	DelegateProperty __OnKeyboardInputComplete__Delegate; // 0x4e4
	DelegateProperty __OnWritePlayerStorageComplete__Delegate; // 0x4f4
	DelegateProperty __OnReadPlayerStorageForNetIdComplete__Delegate; // 0x504
	DelegateProperty __OnReadPlayerStorageComplete__Delegate; // 0x514
	DelegateProperty __OnAddFriendByNameComplete__Delegate; // 0x524
	DelegateProperty __OnFriendInviteReceived__Delegate; // 0x534
	DelegateProperty __OnReceivedGameInvite__Delegate; // 0x544
	DelegateProperty __OnJoinFriendGameComplete__Delegate; // 0x554
	DelegateProperty __OnFriendMessageReceived__Delegate; // 0x564
	DelegateProperty __OnUnlockAchievementComplete__Delegate; // 0x574
	DelegateProperty __OnReadAchievementsComplete__Delegate; // 0x584
	DelegateProperty __OnStatisticChanged__Delegate; // 0x594
	DelegateProperty __OnPrivilegeCheckedForUsers__Delegate; // 0x5a4
	DelegateProperty __OnPrivilegeCheckedForUsersByUniqueNetIds__Delegate; // 0x5b4
	DelegateProperty __OnFilterText__Delegate; // 0x5c4
	DelegateProperty __OnAccountPickerComplete__Delegate; // 0x5d4
	DelegateProperty __OnUserAccountInfoRetrieved__Delegate; // 0x5e4
};

struct UTgCameraModule_ThirdPersonVariableHeight : UTgCameraModule_ThirdPerson {
	float ZOffset; // 0x118
};

struct USeqAct_PlayAgentAnimation : USeqAct_Latent {
	TArray<FName> AnimationList; // 0x120
	float BlendInTime; // 0x130
	float BlendOutTime; // 0x134
	char bUseRootMotion : 1; // 0x138
	char bFaceActionTargetFirst : 1; // 0x138
	char bLooping : 1; // 0x138
	char bBlendBetweenAnims : 1; // 0x138
	int32_t LoopIndex; // 0x13c
	float LoopTime; // 0x140
	ObjectProperty ActionTarget; // 0x144
};

struct ACoverReplicator : AReplicationInfo {
	TArray<FCoverReplicationInfo> CoverReplicationData; // 0x280
};

struct UAkComponent : UActorComponent {
	FName BoneName; // 0x88
	ObjectProperty AutoPlayEvent; // 0x90
	char bStopWhenOwnerDestroyed : 1; // 0x98
	char bRegisteredWithWwise : 1; // 0x98
};

struct UTgInventoryObject_Listen_FireInsteadOfDeath : UTgInvListener {
	float m_fImmuneTimer; // 0xc4
	char m_bPendingActivation : 1; // 0xc8
};

struct UTgCameraModule_TopDown : UTgCameraModule_Spectator {
	FRotator WorldViewRotation; // 0x9c
};

struct AWorldInfo : AZoneInfo {
	FPostProcessSettings DefaultPostProcessSettings; // 0x294
	ObjectProperty WorldPostProcessChain; // 0x414
	char bPersistPostProcessToNextLevel : 1; // 0x41c
	char bFogEnabled : 1; // 0x41c
	char bBumpOffsetEnabled : 1; // 0x41c
	char bUseGammaCorrection : 1; // 0x41c
	char bMapNeedsLightingFullyRebuilt : 1; // 0x41c
	char bMapHasMultipleDominantLightsAffectingOnePrimitive : 1; // 0x41c
	char bMapHasPathingErrors : 1; // 0x41c
	char bRequestedBlockOnAsyncLoading : 1; // 0x41c
	char bBegunPlay : 0; // 0x41c
	char bPlayersOnly : 0; // 0x41c
	char bPlayersOnlyPending : 0; // 0x41c
	char bSuspendAI : 0; // 0x41c
	char bDropDetail : 0; // 0x41c
	char bAggressiveLOD : 0; // 0x41c
	char bStartup : 0; // 0x41c
	char bPathsRebuilt : 0; // 0x41c
	char bHasPathNodes : 0; // 0x41c
	char bIsMenuLevel : 0; // 0x41c
	char bDebugPauseExecution : 0; // 0x41c
	char bDebugStepExecution : 0; // 0x41c
	char bUseConsoleInput : 0; // 0x41c
	char bMinimizeBSPSections : 0; // 0x41c
	char bNoDefaultInventoryForPlayer : 0; // 0x41c
	char bNoPathWarnings : 0; // 0x41c
	char bNoMobileMapWarnings : 0; // 0x41c
	char bHighPriorityLoading : 0; // 0x41c
	char bHighPriorityLoadingLocal : 0; // 0x41c
	char bUseProcBuildingRulesetOverride : 0; // 0x41c
	char bInteractiveMode : 0; // 0x41c
	char bSupportDoubleBufferedPhysics : 0; // 0x41c
	char bPhysicsIgnoreDeltaTime : 0; // 0x41c
	char bEnableChanceOfPhysicsChunkOverride : 0; // 0x41c
	char bLimitExplosionChunkSize : 1; // 0x420
	char bLimitDamageChunkSize : 1; // 0x420
	char bPrecomputeVisibility : 1; // 0x420
	char bPlaceCellsOnSurfaces : 1; // 0x420
	char bAllowTemporalAA : 1; // 0x420
	char bUseGlobalIllumination : 1; // 0x420
	char bForceNoPrecomputedLighting : 1; // 0x420
	char bHaveActiveCrowd : 1; // 0x420
	char bAllowHostMigration : 0; // 0x420
	char bGameplayFramePause : 0; // 0x420
	float SquintModeKernelSize; // 0x424
	EZPrepassOverride ZPrepassOverride; // 0x428
	ENetMode NetMode; // 0x429
	ETravelType NextTravelType; // 0x42a
	EVisibilityAggressiveness VisibilityAggressiveness; // 0x42b
	EPreferredLightmapType PreferredLightmapType; // 0x42c
	ELightingBuildQuality LevelLightingQuality; // 0x42d
	float ContributionCullOverrideHigh; // 0x430
	float ContributionCullOverrideMedium; // 0x434
	float ContributionCullOverrideLow; // 0x438
	ObjectProperty HighestPriorityPostProcessVolume; // 0x43c
	FReverbSettings DefaultReverbSettings; // 0x444
	FInteriorSettings DefaultAmbientZoneSettings; // 0x454
	float FogStart; // 0x484
	float FogEnd; // 0x488
	FColor FogColor; // 0x48c
	float BumpEnd; // 0x490
	ObjectProperty HighestPriorityReverbVolume; // 0x494
	TArray<ObjectProperty> MassiveLODOverrideVolumes; // 0x49c
	TArray<ObjectProperty> PortalVolumes; // 0x4ac
	TArray<ObjectProperty> EnvironmentVolumes; // 0x4bc
	TArray<ObjectProperty> StreamingLevels; // 0x4cc
	FDouble LastTimeUnbuiltLightingWasEncountered; // 0x4dc
	float TimeDilation; // 0x4e4
	float DemoPlayTimeDilation; // 0x4e8
	float TimeSeconds; // 0x4ec
	float RealTimeSeconds; // 0x4f0
	float AudioTimeSeconds; // 0x4f4
	float DeltaSeconds; // 0x4f8
	float PauseDelay; // 0x4fc
	float RealTimeToUnPause; // 0x500
	float m_fRealDeltaSeconds; // 0x504
	ObjectProperty Pauser; // 0x508
	ObjectProperty DefaultTexture; // 0x510
	ObjectProperty WireframeTexture; // 0x518
	ObjectProperty WhiteSquareTexture; // 0x520
	ObjectProperty LargeVertex; // 0x528
	ObjectProperty BSPVertex; // 0x530
	TArray<FString> DeferredExecs; // 0x538
	ObjectProperty GRI; // 0x548
	FString ComputerName; // 0x550
	FString EngineVersion; // 0x560
	FString MinNetVersion; // 0x570
	ObjectProperty Game; // 0x580
	float StallZ; // 0x588
	float WorldGravityZ; // 0x58c
	float DefaultGravityZ; // 0x590
	float GlobalGravityZ; // 0x594
	float RBPhysicsGravityScaling; // 0x598
	float m_fAudioAltitudeCeiling; // 0x59c
	float m_fAudioAltitudeFloor; // 0x5a0
	ObjectProperty NavigationPointList; // 0x5a4
	ObjectProperty ControllerList; // 0x5ac
	ObjectProperty PawnList; // 0x5b4
	ObjectProperty CoverList; // 0x5bc
	ObjectProperty PylonList; // 0x5c4
	float MoveRepSize; // 0x5cc
	TArray<FNetViewer> ReplicationViewers; // 0x5d0
	FString NextURL; // 0x5e0
	float NextSwitchCountdown; // 0x5f0
	int32_t PackedLightAndShadowMapTextureSize; // 0x5f4
	FVector DefaultColorScale; // 0x5f8
	AGameInfo* DefaultGameType; // 0x604
	TArray<AGameInfo*> GameTypesSupportedOnThisMap; // 0x60c
	TArray<ObjectProperty> ClientDestroyedActorContent; // 0x61c
	TArray<FName> PreparingLevelNames; // 0x62c
	FName CommittedPersistentLevelName; // 0x63c
	ObjectProperty PersistentMapForcedObjects; // 0x644
	ComponentProperty MusicComp; // 0x64c
	FMusicTrackStruct CurrentMusicTrack; // 0x654
	FMusicTrackStruct ReplicatedMusicTrack; // 0x680
	FString Title; // 0x6ac
	FString Author; // 0x6bc
	ObjectProperty MyMapInfo; // 0x6cc
	FString EmitterPoolClassPath; // 0x6d4
	ObjectProperty MyEmitterPool; // 0x6e4
	FString DecalManagerClassPath; // 0x6ec
	ObjectProperty MyDecalManager; // 0x6fc
	FString FractureManagerClassPath; // 0x704
	ObjectProperty MyFractureManager; // 0x714
	FString ParticleEventManagerClassPath; // 0x71c
	ObjectProperty MyParticleEventManager; // 0x72c
	ObjectProperty MySoundComponentPool; // 0x734
	ObjectProperty ProcBuildingRulesetOverride; // 0x73c
	int32_t SkelMeshCompTickTagCount; // 0x744
	float MaxPhysicsDeltaTime; // 0x748
	int32_t MaxPhysicsSubsteps; // 0x74c
	FPhysXSceneProperties PhysicsProperties; // 0x750
	TArray<FCompartmentRunList> CompartmentRunFrames; // 0x78c
	float DefaultSkinWidth; // 0x79c
	float ApexLODResourceBudget; // 0x7a0
	float ApexDestructionLODResourceValue; // 0x7a4
	float ApexClothingLODResourceValue; // 0x7a8
	FApexModuleDestructibleSettings DestructibleSettings; // 0x7ac
	ObjectProperty EmitterVertical; // 0x7c0
	FPhysXVerticalProperties VerticalProperties; // 0x7c8
	TArray<FPointer> WorldAttractors; // 0x7e0
	float ChanceOfPhysicsChunkOverride; // 0x7f0
	float MaxExplosionChunkSize; // 0x7f4
	float MaxDamageChunkSize; // 0x7f8
	float FractureExplosionVelScale; // 0x7fc
	int32_t MaxNumFacturedChunksToSpawnInAFrame; // 0x800
	int32_t NumFacturedChunksSpawnedThisFrame; // 0x804
	float FracturedMeshWeaponDamage; // 0x808
	int32_t VisibilityCellSize; // 0x80c
	float CharacterLitIndirectBrightness; // 0x810
	float CharacterLitIndirectContrastFactor; // 0x814
	float CharacterShadowedIndirectBrightness; // 0x818
	float CharacterShadowedIndirectContrastFactor; // 0x81c
	float CharacterLightingContrastFactor; // 0x820
	ObjectProperty ImageReflectionEnvironmentTexture; // 0x824
	FLinearColor ImageReflectionEnvironmentColor; // 0x82c
	float ImageReflectionEnvironmentRotation; // 0x83c
	FMap_Mirror ScreenMessages; // 0x840
	TArray<FScreenMessageString> PriorityScreenMessages; // 0x888
	FLightmassWorldInfoSettings LightmassSettings; // 0x898
	TMap<None, None> NavMeshPathConstraintCache; // 0x8f0
	TMap<None, None> NavMeshPathGoalEvaluatorCache; // 0x938
	ObjectProperty PopulationManager; // 0x980
	FHostMigrationState PeerHostMigration; // 0x988
	float HostMigrationTimeout; // 0x9a8
	float m_fPerfParticleScale; // 0x9ac
	ObjectProperty m_MiniMapTexture; // 0x9b0
	float m_fMiniMapSizeValue; // 0x9b8
	float m_fMinimumPayloadTravelTime; // 0x9bc
	ObjectProperty FirstPhysicsVolume; // 0x9c0
};

struct UMantleReachSpec : UForcedReachSpec {
	char bClimbUp : 1; // 0xc8
};

struct ATgPawn_Fernando : ATgPawn_Character {
	int32_t r_ShieldDisplayType; // 0x3160
	char r_bHasAegisTalent : 1; // 0x3164
	char r_bAegisShieldWasDestroyed : 1; // 0x3164
	char c_bShowingShield : 1; // 0x3164
	ObjectProperty m_CachedShieldDevice; // 0x3168
};

struct ATgDevice_HexaFireGuns : ATgDevice_QuadWield {
	ObjectProperty m_CachedRuckusOwner; // 0xa30
};

struct UParticleModuleRotation : UParticleModuleRotationBase {
	FRawDistributionFloat StartRotation; // 0x68
};

struct UTgAIBehaviorCondition_ManaPercent : UTgAIBehaviorCondition {
	float ManaPct; // 0x98
};

struct UTgDataChunk : UGFxObject {
	ObjectProperty m_DataHandler; // 0x104
	ObjectProperty m_ParentChunk; // 0x10c
	TArray<FDataField> m_DataList; // 0x114
	TArray<ObjectProperty> m_ChildChunks; // 0x124
	char m_bIsDirty : 1; // 0x134
	char m_bIsSubscribed : 1; // 0x134
	char m_bClearOnMapChange : 1; // 0x134
	DelegateProperty __usc_Subscribe_Delegate__Delegate; // 0x138
	DelegateProperty __usc_Unsubscribe_Delegate__Delegate; // 0x148
};

struct UParticleModuleLocationPrimitiveSphere_Seeded : UParticleModuleLocationPrimitiveSphere {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xd8
};

struct AAIController : AController {
	char bAdjustFromWalls : 1; // 0x470
	char bReverseScriptedRoute : 1; // 0x470
	float Skill; // 0x474
	ObjectProperty ScriptedMoveTarget; // 0x478
	ObjectProperty ScriptedRoute; // 0x480
	int32_t ScriptedRouteIndex; // 0x488
	ObjectProperty ScriptedFocus; // 0x48c
};

struct UTgInventoryObject_Listen_AffectedByDeviceActiveWhile : UTgInventoryObject_Listen_AffectedByDevice {
	char m_bIsCardActive : 1; // 0xc4
};

struct USeqAct_ActorFactory : USeqAct_Latent {
	char bEnabled : 1; // 0x120
	char bIsSpawning : 1; // 0x120
	char bCheckSpawnCollision : 1; // 0x120
	ObjectProperty Factory; // 0x124
	EPointSelection PointSelection; // 0x12c
	TArray<ObjectProperty> SpawnPoints; // 0x130
	TArray<FVector> SpawnLocations; // 0x140
	TArray<FVector> SpawnOrientations; // 0x150
	int32_t SpawnCount; // 0x160
	float SpawnDelay; // 0x164
	int32_t LastSpawnIdx; // 0x168
	int32_t CurrentSpawnIdx; // 0x16c
	int32_t SpawnedCount; // 0x170
	float RemainingDelay; // 0x174
};

struct URB_BodyInstance : UObject {
	ComponentProperty OwnerComponent; // 0x60
	int32_t BodyIndex; // 0x68
	FVector Velocity; // 0x6c
	FVector PreviousVelocity; // 0x78
	int32_t SceneIndex; // 0x84
	FPointer BodyData; // 0x88
	FPointer BoneSpring; // 0x90
	FPointer BoneSpringKinActor; // 0x98
	char bEnableBoneSpringLinear : 1; // 0xa0
	char bEnableBoneSpringAngular : 1; // 0xa0
	char bDisableOnOverextension : 1; // 0xa0
	char bNotifyOwnerOnOverextension : 1; // 0xa0
	char bTeleportOnOverextension : 1; // 0xa0
	char bUseKinActorForBoneSpring : 1; // 0xa0
	char bMakeSpringToBaseCollisionComponent : 1; // 0xa0
	char bOnlyCollideWithPawns : 1; // 0xa0
	char bEnableCollisionResponse : 0; // 0xa0
	char bPushBody : 0; // 0xa0
	char bForceUnfixed : 0; // 0xa0
	char bInstanceAlwaysFullAnimWeight : 0; // 0xa0
	float BoneLinearSpring; // 0xa4
	float BoneLinearDamping; // 0xa8
	float BoneAngularSpring; // 0xac
	float BoneAngularDamping; // 0xb0
	float OverextensionThreshold; // 0xb4
	float CustomGravityFactor; // 0xb8
	float LastEffectPlayedTime; // 0xbc
	float ContactReportForceThreshold; // 0xc0
	float InstanceMassScale; // 0xc4
	float InstanceDampingScale; // 0xc8
	ObjectProperty PhysMaterialOverride; // 0xcc
};

struct AEmitter : AActor {
	ComponentProperty ParticleSystemComponent; // 0x280
	ComponentProperty LightEnvironment; // 0x288
	char bDestroyOnSystemFinish : 1; // 0x290
	char bPostUpdateTickGroup : 1; // 0x290
	char bCurrentlyActive : 1; // 0x290
};

struct ATgDevice_HitPulse : ATgDevice {
	char s_ShouldPayCostPerPulse : 1; // 0xa04
	char s_bCostPaid : 1; // 0xa04
	char m_bConsumeAmmoOnEachPulse : 1; // 0xa04
	int32_t m_CurrentPulseIndex; // 0xa08
};

struct ATgInventoryManager : AInventoryManager {
	int32_t r_ItemCount; // 0x2ac
	int32_t m_nPreviousDeviceInstanceId; // 0x2b0
	char m_bNeedsInvUpdate : 1; // 0x2b4
	ObjectProperty m_PreviousWeapon; // 0x2b8
	TMap<None, None> m_InventoryMap; // 0x2c0
	TMap<None, None> s_ReplicateMap; // 0x308
	TMap<None, None> s_DeletionMap; // 0x350
};

struct UTgInventoryObject_Listen_Weaken : UTgInventoryObject_Listen_HitWithDevice {
	int32_t m_nAppliedCategoryCodeToCheck; // 0xd8
};

struct UStaticMeshComponentFactory : UMeshComponentFactory {
	ObjectProperty StaticMesh; // 0x74
};

struct ATgDevice_DruidLastStand : ATgDevice {
	ObjectProperty m_CachedDruid; // 0xa04
};

struct ATgDevice_ReanimateSupporting : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
};

struct ATgDeployableFactory : ATgActorFactory {
	int32_t nCurrentCount; // 0x2c0
	float s_fLastSpawnTime; // 0x2c4
	char s_bSpawnOnce : 1; // 0x2c8
	int32_t s_nDeployableId; // 0x2cc
	int32_t s_SpawnGroupNum; // 0x2d0
	float s_fDeployableLifeSpan; // 0x2d4
};

struct UTgGameplayCurvesSet_AimAcceleration : UTgGameplayCurvesSet {
	TArray<ObjectProperty> AimAccelerationCurves; // 0x64
};

struct UTgAIBehaviorCondition_AmmoCount : UTgAIBehaviorCondition {
	TG_EQUIP_POINT DeviceSlot; // 0x98
	int32_t AmmoThreshold; // 0x9c
};

struct ATgGame_Arena : ATgGame_Battle {
	float s_fLastDespawnTime[0x2]; // 0x76c
	float s_fDespawnNotificationDelay; // 0x774
	int32_t m_nKillValueHero; // 0x778
	int32_t m_nKillValueMinion; // 0x77c
	int32_t m_nKillValueTower; // 0x780
	int32_t m_MinScoreToTrackMinionKills; // 0x784
	int32_t m_nSpawnWaveTime; // 0x788
	int32_t m_nSpawnWaveDominatingTime; // 0x78c
	int32_t m_nMaxDominatingPoints; // 0x790
	char m_bIsCrowdOnFeet : 1; // 0x794
};

struct UTgDeviceForm_ImaniRMB2 : UTgDeviceForm {
	char m_bInFireLoop : 1; // 0x28c
};

struct UUIComponent_FernandoShieldBar : UUIComponent_ShieldBar {
	char m_bHasAegisTalent : 1; // 0x158
	ObjectProperty m_mcShieldMeter; // 0x15c
	ObjectProperty m_mcBrokenShieldIcon; // 0x164
};

struct UUIComponent_LeagueTierEntry : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcSubtitle; // 0x12c
	ObjectProperty m_mcIcon; // 0x134
	TArray<ObjectProperty> m_mcLegendIcons; // 0x13c
};

struct UTgGameDC_Device : UTgDataChunk {
	int32_t m_nDeviceId; // 0x158
	int32_t m_nDeviceInstanceId; // 0x15c
	int32_t m_nPointsAllocated; // 0x160
	ObjectProperty m_CooldownTimer; // 0x164
	DelegateProperty __usc_get_mode_tooltip_delegate__Delegate; // 0x16c
	DelegateProperty __usc_set_cast_mode_delegate__Delegate; // 0x17c
};

struct ATgDevice_TigronHeavyBlade : ATgDevice_DualWield {
	ObjectProperty m_CachedTiberius; // 0xa14
	char s_bBladePickedUp : 1; // 0xa1c
	char m_bHasQueuedRecall : 1; // 0xa1c
	TigerBladeState m_eLocalBladeState; // 0xa20
	float m_fSecondaryActivationDelay; // 0xa24
	float m_fLastProjectileSpawnedTimestamp; // 0xa28
	float m_fDeferredSecondaryActivationTime; // 0xa2c
	float m_fActivationLockoutDelay; // 0xa30
	float m_fOffsetPivotBy; // 0xa34
	float m_fLastThrowTimestamp; // 0xa38
};

struct ATgMeshAssembly : AActor {
	int32_t m_nMeshAsmId; // 0x280
	int32_t m_nTeam; // 0x284
	ComponentProperty m_Mesh; // 0x288
	ComponentProperty m_LightEnvironment; // 0x290
};

struct ATgDevice_RaumMinigun : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedRaum; // 0xa0c
	ObjectProperty m_CachedForm; // 0xa14
	ObjectProperty m_CachedWMA; // 0xa1c
	float m_fCurrentSpinUpTime; // 0xa24
	float m_fMinSpinUpToFire; // 0xa28
	float m_fMaxSpinUpTime; // 0xa2c
	float m_fFastestFireDelay; // 0xa30
	float m_fImpulseSpinUpTime; // 0xa34
	float m_fInvMaxSpinUpTime; // 0xa38
	float m_fLMBSpinningMovementSpeed; // 0xa3c
	float m_fRMBSpinningMovementSpeed; // 0xa40
	float m_fMinimumMoveSlowTime; // 0xa44
	float m_fReloadPreSpinResetTime; // 0xa48
};

struct UIpNetDriverSteamworks : UTcpNetDriver {
	char bSteamSocketsOnly : 1; // 0x228
};

struct ATgPawn_Makoa : ATgPawn_Character {
	float m_fSmashSpeedModifier; // 0x3160
	float m_fShellSpinZoomOverride; // 0x3164
	char r_bShellShieldIsActive : 1; // 0x3168
	char r_bAncientRageActive : 1; // 0x3168
	char r_bAbility1CanEmote : 1; // 0x3168
	float m_fShellShieldSpeedModifier; // 0x316c
	float m_fShellShieldZoomOverride; // 0x3170
	ObjectProperty m_ShellShieldMovementFX; // 0x3174
	ObjectProperty m_AncientRageInHand; // 0x317c
	ObjectProperty m_CachedDavyJones; // 0x3184
};

struct UUIScene_UILobbyChat : UUIScene {
	ObjectProperty m_pOpenGlobalAction; // 0x1cc
	ObjectProperty m_pCloseTabAction; // 0x1d4
};

struct UUIComponent_Button_LoadoutCategory : UUIComponent_Display {
	int32_t m_nCategory; // 0x124
	ObjectProperty m_mcTitle; // 0x128
	ObjectProperty m_mcRarity; // 0x130
	ObjectProperty m_pItemPreview; // 0x138
};

struct UInterpTrackVectorBase : UInterpTrack {
	FInterpCurveVector VectorTrack; // 0xa0
	float CurveTension; // 0xb4
};

struct USeqAct_SetParticleSysParam : USequenceAction {
	TArray<FParticleSysParam> InstanceParameters; // 0x108
	char bOverrideScalar : 1; // 0x118
	float ScalarValue; // 0x11c
};

struct ATgSpectatorDirector : AInfo {
	char m_bIsActive : 1; // 0x280
	char m_bIsPending : 1; // 0x280
	char m_bAutoSwitchCameraViews : 1; // 0x280
	char m_bForceThirdPersonView : 1; // 0x280
	float m_fRemainingAutoUpdateCheckTime; // 0x284
	float m_fTimeSinceViewSwitchedTeams; // 0x288
	float m_fTimeSinceViewSwitchedMode; // 0x28c
	float m_fRemainingAutoReturnCheckTime; // 0x290
	SpectatorCameraMode m_CurrentCameraMode; // 0x294
	FViewTargetInfo m_CurrentRatedViewTarget; // 0x298
	FViewTargetInfo m_DemoRewindViewTarget; // 0x2c4
	FVector2D m_v2dForcedDirectorLocation; // 0x2f0
	float m_fForcedDirectorLocationTimestamp; // 0x2f8
};

struct UUIComponent_EndTimesEventRewards : UUIComponent_Display {
	ObjectProperty m_mcUnlocksAtTF; // 0x124
	ObjectProperty m_pRewards; // 0x12c
	ObjectProperty m_pOwnedCurrency; // 0x134
	ObjectProperty m_pUnlocksAtCurrency; // 0x13c
	ObjectProperty m_pPreviewStack; // 0x144
	ObjectProperty m_grInput; // 0x14c
};

struct ATgSurvivalFogVolumeDensityInfo : AFogVolumeSphericalDensityInfo {
	char m_bFogOn : 1; // 0x294
	float m_fTargetStartDistance; // 0x298
	float m_fPreviousStartDistance; // 0x29c
	float m_fFogUpdateTimestamp; // 0x2a0
	float m_fFogUpdateInterval; // 0x2a4
	float m_fConvergenceRate; // 0x2a8
	float m_fFadeInRate; // 0x2ac
	float m_fFadeOutRate; // 0x2b0
	ComponentProperty SphericalDensityComponent; // 0x2b4
};

struct UObjectReferencer : UObject {
	TArray<ObjectProperty> ReferencedObjects; // 0x60
	char bShouldFlatten : 1; // 0x70
};

struct UTgGamePhase_PlayMovie : UTgGamePhase {
	int32_t m_nVideoPathId; // 0xb8
	char m_bYieldOnlyWhenFinished : 1; // 0xbc
};

struct UUIComponent_DeathRecapPlayer : UUIComponent_Display {
	ObjectProperty m_mcIcon; // 0x124
	ObjectProperty m_mcMask; // 0x12c
	ObjectProperty m_mcTypeTF; // 0x134
	ObjectProperty m_mcClassTF; // 0x13c
	ObjectProperty m_mcDamageTF; // 0x144
	ObjectProperty m_mcTitle; // 0x14c
	ObjectProperty m_pName; // 0x154
	ObjectProperty m_pItemList; // 0x15c
	ObjectProperty m_pSkillsList; // 0x164
};

struct UUIComponent_Button_LoadoutDeathStamp : UUIComponent_Display {
	ObjectProperty m_mcCardIcon; // 0x124
	ObjectProperty m_mcFrame; // 0x12c
	ObjectProperty m_mcRarity; // 0x134
	ObjectProperty m_mcName; // 0x13c
};

struct ULevelStreamingAlwaysLoaded : ULevelStreaming {
	char bIsProceduralBuildingLODLevel : 1; // 0x100
};

struct USeqAct_ChangeCollision : USequenceAction {
	char bCollideActors : 1; // 0x108
	char bBlockActors : 1; // 0x108
	char bIgnoreEncroachers : 1; // 0x108
	ECollisionType CollisionType; // 0x10c
};

struct UTgAIBehaviorCondition_NumGodsInTowerRadius : UTgAIBehaviorCondition {
	char bGodsMustBeEnemy : 1; // 0x98
	char bTowerMustBeEnemy : 1; // 0x98
	int32_t GodThreshold; // 0x9c
};

struct UBookMark : UObject {
	FVector Location; // 0x60
	FRotator Rotation; // 0x6c
	TArray<FString> HiddenLevels; // 0x78
};

struct USeqAct_ConcatenateStrings : USequenceAction {
	FString StrA; // 0x108
	FString StrB; // 0x118
	char ConcatenateWithSpace : 1; // 0x128
	FString StrResult; // 0x12c
};

struct UUIComponent_GenericTitleInputButtons : UUIComponent_Display {
	ObjectProperty m_mcTitle[0x2]; // 0x124
	ObjectProperty m_mcError; // 0x134
	ObjectProperty m_Buttons[0x2]; // 0x13c
	ObjectProperty m_pPurchaseButton; // 0x14c
	int32_t m_ButtonClickHandles[0x2]; // 0x154
	ObjectProperty m_mcInputTF; // 0x15c
	ObjectProperty m_mcInputFrame; // 0x164
	ObjectProperty m_mcInputFrameHighlight; // 0x16c
	ObjectProperty m_grButtons; // 0x174
};

struct UInterpTrackFloatBase : UInterpTrack {
	FInterpCurveFloat FloatTrack; // 0xa0
	float CurveTension; // 0xb4
};

struct UModelComponent : UPrimitiveComponent {
	ObjectProperty Model; // 0x24c
	int32_t ZoneIndex; // 0x254
	int32_t ComponentIndex; // 0x258
	TArray<FPointer> Nodes; // 0x25c
	TArray<FPointer> Elements; // 0x26c
};

struct UTgAnimNodeChannelFire_Pounce : UTgAnimNodeChannelFire {
	char m_bPounceHitSuccessful : 1; // 0x180
};

struct UNavMeshGoal_Null : UNavMeshPathGoalEvaluator {
	FPointer PartialGoal; // 0x7c
};

struct UGFxClikWidget : UGFxObject {
	DelegateProperty __EventListener__Delegate; // 0x104
};

struct ATgMenuTransitionActor : AActor {
	ComponentProperty m_IntroPSC; // 0x280
	ComponentProperty m_LoopPSC; // 0x288
	ComponentProperty m_OutroPSC; // 0x290
	ENotifySound m_eIntroNotify; // 0x298
	ENotifySound m_eLoopStartNotify; // 0x299
	ENotifySound m_eLoopStopNotify; // 0x29a
	ENotifySound m_eOutroNotify; // 0x29b
};

struct ATgProj_AzaanHammer : ATgProj_Simulated {
	char m_bShouldExplode : 1; // 0x52c
	ObjectProperty m_CachedAzaan; // 0x530
	ObjectProperty m_DirectHitActor; // 0x538
	FName m_FxForChargedHammer; // 0x540
	FName m_FxForHammerExplode; // 0x548
};

struct USpeedTreeComponent : UPrimitiveComponent {
	ObjectProperty SpeedTree; // 0x24c
	char bUseLeafCards : 1; // 0x254
	char bUseLeafMeshes : 1; // 0x254
	char bUseBranches : 1; // 0x254
	char bUseFronds : 1; // 0x254
	char bUseBillboards : 1; // 0x254
	float Lod3DStart; // 0x258
	float Lod3DEnd; // 0x25c
	float LodBillboardStart; // 0x260
	float LodBillboardEnd; // 0x264
	float LodLevelOverride; // 0x268
	ObjectProperty Branch1Material; // 0x26c
	ObjectProperty Branch2Material; // 0x274
	ObjectProperty FrondMaterial; // 0x27c
	ObjectProperty LeafCardMaterial; // 0x284
	ObjectProperty LeafMeshMaterial; // 0x28c
	ObjectProperty BillboardMaterial; // 0x294
	ObjectProperty Branch1MaterialNoScreenDoor; // 0x29c
	ObjectProperty Branch2MaterialNoScreenDoor; // 0x2a4
	ObjectProperty FrondMaterialNoScreenDoor; // 0x2ac
	ObjectProperty LeafCardMaterialNoScreenDoor; // 0x2b4
	ObjectProperty LeafMeshMaterialNoScreenDoor; // 0x2bc
	ObjectProperty BillboardMaterialNoScreenDoor; // 0x2c4
	TArray<FSpeedTreeStaticLight> StaticLights; // 0x2cc
	FLightMapRef BranchLightMap; // 0x2dc
	FLightMapRef FrondLightMap; // 0x2e4
	FLightMapRef LeafMeshLightMap; // 0x2ec
	FLightMapRef LeafCardLightMap; // 0x2f4
	FLightMapRef BillboardLightMap; // 0x2fc
	FMatrix RotationOnlyMatrix; // 0x310
	FLightmassPrimitiveSettings LightmassSettings; // 0x350
};

struct ATgProj_DredgeInhand : ATgProj_FreeGrenade {
	float m_fMaxUndampenedZBounce; // 0x580
	float m_fBounceGravityZMultiplier; // 0x584
};

struct USeqEvent_Console : USequenceEvent {
	FName ConsoleEventName; // 0x128
	FString EventDesc; // 0x130
};

struct UTgAIBehaviorCondition_NumGodsInLanePusherRadius : UTgAIBehaviorCondition_DistanceBase {
	char bGodsMustBeEnemy : 1; // 0x9c
	int32_t GodThreshold; // 0xa0
};

struct UTgDeviceFire_DeployOnLocation : UTgDeviceFire {
	FVector m_TargetLocation; // 0x268
	char m_bSetRotation : 1; // 0x274
	FRotator m_TargetRotation; // 0x278
};

struct UTgData_Cards : UTgObject {
	ObjectProperty m_pMovie; // 0x60
};

struct UMaterialExpressionTextureObject : UMaterialExpression {
	ObjectProperty Texture; // 0xb0
};

struct UUIData_ChestExtended : UUIData {
	int32_t nItemId; // 0x64
	int32_t nBotRefId; // 0x68
	int32_t nVendorId; // 0x6c
	int32_t nSortOrder; // 0x70
	int32_t nRarity; // 0x74
	int32_t nBundleVendorId; // 0x78
	int32_t nBundleCount; // 0x7c
	char bAllowDuplicates : 1; // 0x80
	char bIsGiftable : 1; // 0x80
	TArray<int32_t> nAllLootIds; // 0x84
	TArray<int32_t> nStackableLootIds; // 0x94
	TArray<int32_t> nExclusiveLootIds; // 0xa4
	int32_t nBundleLootIds[0x4]; // 0xb4
	int32_t nBundleItemCounts[0x4]; // 0xc4
};

struct UUIComponent_EventChallengeHubReward : UUIComponent_Display {
	ObjectProperty m_mcLock; // 0x124
	ObjectProperty m_pIcon; // 0x12c
	ObjectProperty m_mcDeathCard; // 0x134
	ObjectProperty m_mcPlusTicket; // 0x13c
	ObjectProperty m_mcFrame; // 0x144
	ObjectProperty m_mcCheck; // 0x14c
};

struct UUIDataItem : UUIData {
	FQWord m_qwInventorySessionId; // 0x64
	int32_t m_nId; // 0x6c
	int32_t m_nIcon; // 0x70
	int32_t m_nCooldown; // 0x74
	int32_t m_nCooldownScale; // 0x78
	FString m_sName; // 0x7c
	FString m_sDesc; // 0x8c
	FString m_sIcon; // 0x9c
	FString m_sIconLocked; // 0xac
	FName m_nmIcon; // 0xbc
	FName m_nmIconLocked; // 0xc4
	int32_t m_nCardIcon; // 0xcc
	FName m_nmCardIcon; // 0xd0
	FName m_nmCardMaterial; // 0xd8
	int32_t nIndex; // 0xe0
	TArray<ObjectProperty> m_SubItems; // 0xe4
	TArray<ObjectProperty> m_StoreLTIs; // 0xf4
	int32_t m_nTargetIndex; // 0x104
};

struct UUIComponent_EventChallengeSystem : UUIComponent_Display {
	ObjectProperty m_pRegionInfo; // 0x124
	ObjectProperty m_pRegionDisplay; // 0x12c
	ObjectProperty m_pMap; // 0x134
	char m_bShowingHubs : 1; // 0x13c
};

struct ATgDevice_DragonFang : ATgDevice {
	ObjectProperty m_CachedKoga; // 0xa04
};

struct UPathGoalEvaluator : UObject {
	ObjectProperty NextEvaluator; // 0x60
	ObjectProperty GeneratedGoal; // 0x68
	int32_t MaxPathVisits; // 0x70
	int32_t CacheIdx; // 0x74
};

struct USeqAct_SetDOFParams : USeqAct_Latent {
	float FalloffExponent; // 0x120
	float BlurKernelSize; // 0x124
	float MaxNearBlurAmount; // 0x128
	float MinBlurAmount; // 0x12c
	float MaxFarBlurAmount; // 0x130
	float FocusInnerRadius; // 0x134
	float FocusDistance; // 0x138
	FVector FocusPosition; // 0x13c
	float InterpolateSeconds; // 0x148
	float InterpolateElapsed; // 0x14c
	float OldFalloffExponent; // 0x150
	float OldBlurKernelSize; // 0x154
	float OldMaxNearBlurAmount; // 0x158
	float OldMinBlurAmount; // 0x15c
	float OldMaxFarBlurAmount; // 0x160
	float OldFocusInnerRadius; // 0x164
	float OldFocusDistance; // 0x168
	FVector OldFocusPosition; // 0x16c
};

struct UUIDataProvider_MenuItem : UUIResourceDataProvider {
	EMenuOptionType OptionType; // 0x94
	TArray<FName> OptionSet; // 0x98
	FString DataStoreMarkup; // 0xa8
	FString DescriptionMarkup; // 0xb8
	FName RequiredGameMode; // 0xc8
	FString FriendlyName; // 0xd0
	FString CustomFriendlyName; // 0xe0
	FString Description; // 0xf0
	char bEditableCombo : 1; // 0x100
	char bNumericCombo : 1; // 0x100
	char bKeyboardOrMouseOption : 1; // 0x100
	char bOnlineOnly : 1; // 0x100
	char bOfflineOnly : 1; // 0x100
	char bSearchAllInis : 1; // 0x100
	char bRemoveOn360 : 1; // 0x100
	char bRemoveOnPC : 1; // 0x100
	char bRemoveOnPS3 : 0; // 0x100
	char bRemoveOnDingo : 0; // 0x100
	int32_t EditBoxMaxLength; // 0x104
	FUIRangeData RangeData; // 0x108
	TArray<FName> SchemaCellFields; // 0x11c
	FString IniName; // 0x12c
};

struct UTgSkelCon_HookChain : USkelControlSingleBone {
	float m_fBoneScales[0x48]; // 0x100
	ObjectProperty m_DragDeviceForm; // 0x220
	ComponentProperty m_ChainComponent; // 0x228
};

struct UUIData_SearchListEntry : UUIData {
	int32_t m_nPlayerRank; // 0x64
	FString m_sPlayerName; // 0x68
	Fdword m_dwPlayerId; // 0x78
	Fdword m_dwAvatarId; // 0x7c
	FUniqueNetId m_PlayerNetId; // 0x80
};

struct UUIInteractable_HighlightSizeOnly : UUIComponent_Interactable {
	float m_fHighlightScaleMultiplier; // 0x140
	float m_fRestingScaleMultiplier; // 0x144
};

struct UUIComponent_KeyboardKey : UUIComponent_Display {
	FString m_sKeyboardKey; // 0x124
	char m_bForceHidden : 1; // 0x134
	ObjectProperty m_mcTF; // 0x138
	ObjectProperty m_mcFrame; // 0x140
	ObjectProperty m_mcMask; // 0x148
};

struct UUIHudPlayer_Base : UTgGfxScene {
	int32_t m_nStreak; // 0x1ec
	int32_t m_nProfile; // 0x1f0
	int32_t m_nSkin; // 0x1f4
	int32_t m_nRespawnTime; // 0x1f8
	char m_bInCombat : 1; // 0x1fc
	char m_bShowCombat : 1; // 0x1fc
	char m_bSpectateEnemy : 1; // 0x1fc
	char m_bRespawning : 1; // 0x1fc
	char m_bShowMapCallout : 1; // 0x1fc
	char m_bDisableKillStreakUI : 1; // 0x1fc
	float m_fCombatTime; // 0x200
	float m_fCombatPercent; // 0x204
	float m_CachedRotation; // 0x208
	ObjectProperty m_mcTopBar; // 0x20c
	ObjectProperty m_mcBotBar; // 0x214
	ObjectProperty m_mcBotBarRespawn; // 0x21c
	ObjectProperty m_mcBotBarRespawnTF; // 0x224
	ObjectProperty m_mcBotBarRecapPrompt; // 0x22c
	ObjectProperty m_pBotBarPlayer; // 0x234
	ObjectProperty m_mcDeathCard; // 0x23c
	TArray<ObjectProperty> m_mcDeathCardOneLiner; // 0x244
	ObjectProperty m_grScene; // 0x254
	ObjectProperty m_mcIcon; // 0x25c
	ObjectProperty m_HealthBar; // 0x264
	ObjectProperty m_mcCombat; // 0x26c
	ObjectProperty m_mcCombatBar; // 0x274
	ObjectProperty m_mcDebugText; // 0x27c
	ObjectProperty m_DruidGuardian; // 0x284
	ObjectProperty m_mcStreak; // 0x28c
	ObjectProperty m_mcStreakBack; // 0x294
	ObjectProperty m_mcStreakTitle; // 0x29c
	ObjectProperty m_mcStreakSubtitle; // 0x2a4
	FString m_sSpectatorName; // 0x2ac
	FString m_sSpectatorTeam; // 0x2bc
	ObjectProperty m_mcSpectatorGroup; // 0x2cc
	ObjectProperty m_mcSpectatorNameTF; // 0x2d4
	ObjectProperty m_mcSpectatorNameTF1; // 0x2dc
	ObjectProperty m_mcZoneName; // 0x2e4
	ObjectProperty m_mcSpectatorTeam; // 0x2ec
	ObjectProperty m_mcSpectatorTeamAdd; // 0x2f4
	ObjectProperty m_mcSpectatorBG; // 0x2fc
	ObjectProperty m_HealFeed; // 0x304
	ObjectProperty m_OracleSoulStacks; // 0x30c
	ObjectProperty m_CorrupterCorruption; // 0x314
	ObjectProperty m_RaumSoulStacks; // 0x31c
	ObjectProperty m_Ping; // 0x324
};

struct USpeechRecognition : UObject {
	FString Language; // 0x60
	float ConfidenceThreshhold; // 0x70
	TArray<FRecogVocabulary> Vocabularies; // 0x74
	TArray<char> VoiceData; // 0x84
	TArray<char> WorkingVoiceData; // 0x94
	TArray<char> UserData; // 0xa4
	FRecogUserData InstanceData[0x4]; // 0xb4
	char bDirty : 1; // 0x104
	char bInitialised : 1; // 0x104
	FPointer FnxVoiceData; // 0x108
};

struct ATgDevice_FaeFlight : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
};

struct APlayerStart : ANavigationPoint {
	char bEnabled : 1; // 0x378
	char bPrimaryStart : 1; // 0x378
	char bBestStart : 1; // 0x378
	int32_t TeamIndex; // 0x37c
	int32_t Score; // 0x380
	int32_t SelectionIndex; // 0x384
};

struct UTgSeqAct_ProgressTo : USeqAct_Delay {
	ObjectProperty m_Instigator; // 0x134
};

struct UUIDataQueues : UUIDataObject {
	ObjectProperty m_StaticQueueData; // 0x74
	TArray<ObjectProperty> m_CasualQueues; // 0x7c
	TArray<ObjectProperty> m_EventQueues; // 0x8c
	TArray<ObjectProperty> m_TrainingQueues; // 0x9c
	TArray<ObjectProperty> m_DevQueues; // 0xac
	TMap<None, None> m_Queues; // 0xbc
	float m_fStatusTimer; // 0x104
};

struct ATestSplittingVolume : AVolume {
	FPointer VfTable_IInterface_NavMeshPathObject; // 0x2bc
};

struct UScriptViewportClient : UObject {
	FPointer VfTable_FViewportClient; // 0x60
};

struct UTgAnimMetaData_DisplayGroupPSCParam : UTgAnimMetaData_Keyframed {
	FName ParamName; // 0x80
	FName DisplayGroup; // 0x88
	TG_EQUIP_POINT EqpSlot; // 0x90
	char bActivateGroupOnRelevant : 1; // 0x94
	char bDeactivateGroupOnCeaseRelevant : 1; // 0x94
};

struct ATgDevice_RuckusInhand : ATgDevice_DualWield {
	float m_fSpinAmount; // 0xa14
	float m_fCurrentSpinScale; // 0xa18
	float m_fStartingSpinRate; // 0xa1c
	float m_fMaxSpinRate; // 0xa20
	float m_fDurationToMaxSpin; // 0xa24
	float m_fSpinDownRate; // 0xa28
	float m_fSlowestFireDelay; // 0xa2c
	float m_fFiringMoveSpeedModifier; // 0xa30
	char m_bLeftMouseMovePenalty : 1; // 0xa34
	char m_bInFireLoop : 1; // 0xa34
	char m_bAltFireSpinning : 1; // 0xa34
	char m_bHexaFireSpinning : 1; // 0xa34
	float m_fMoveSpeedDecreaseInterpolationDuration; // 0xa38
	float m_fMoveSpeedIncreaseInterpolationDuration; // 0xa3c
	float r_fRecyclerPercent; // 0xa40
};

struct UUIData_StoreItemTab : UUIData {
	FString m_lsTitle; // 0x64
	char m_eTabType; // 0x74
};

struct UTgSeqEvent_BurnCardPurchased : USequenceEvent {
	int32_t nFilledSlots; // 0x128
	char bAllBurnSlotsFull : 1; // 0x12c
};

struct UTgInventoryObject_Listen_Combo_Drogoz : UTgInventoryObject_Listen_Combo {
	float m_fLastThrustTime; // 0xcc
};

struct UUIComponent_ExpandableTextBox : UUIComponent_Display {
	char m_bIsExpanded : 1; // 0x124
	ObjectProperty m_mcTitleTF; // 0x128
	ObjectProperty m_mcSubTitleTF; // 0x130
	ObjectProperty m_mcBackground; // 0x138
	ObjectProperty m_pArrow; // 0x140
	ObjectProperty m_pGamepadKey; // 0x148
	ObjectProperty m_pScrollableText; // 0x150
};

struct UUIData_LeagueTierChange : UUIData {
	ObjectProperty m_League; // 0x64
	ObjectProperty m_PrevTier; // 0x6c
	ObjectProperty m_NextTier; // 0x74
	UIDLTC_PromotionType m_ePromotionType; // 0x7c
};

struct UUIComponent_OwlStealthBar : UUIComponent_Display {
	ObjectProperty m_mcThreshold; // 0x124
	ObjectProperty m_mcStealthBarMask; // 0x12c
	ObjectProperty m_mcTrailingStealthBarMask; // 0x134
	ObjectProperty m_mcStealthActive; // 0x13c
	char m_bStealthActive : 1; // 0x144
	float m_fActivationCost; // 0x148
};

struct UMaterialExpressionCeil : UMaterialExpression {
	FExpressionInput Input; // 0xb0
};

struct ATgDevice_ImaniRMB2 : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	char m_bOverrideTargeting : 1; // 0xa0c
	int32_t m_nVFXNumTrailingShots; // 0xa10
	ObjectProperty m_CachedImani; // 0xa14
	ObjectProperty m_CachedLMB2; // 0xa1c
};

struct UGFxAction_GetVariable : USequenceAction {
	ObjectProperty Movie; // 0x108
	FString Variable; // 0x110
};

struct UParticleModuleOrbitBase : UParticleModule {
	char bUseEmitterTime : 1; // 0x68
};

struct AWindPointSource : AInfo {
	ComponentProperty Component; // 0x280
};

struct UOnlineTitleFileDownloadWeb : UOnlineTitleFileDownloadBase {
	TArray<FTitleFileWeb> TitleFiles; // 0x104
};

struct UGFxAction_Invoke : USequenceAction {
	ObjectProperty Movie; // 0x108
	FString MethodName; // 0x110
	TArray<FASValue> Arguments; // 0x120
};

struct UParticleModuleRotation_Seeded : UParticleModuleRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x8c
};

struct UUIComponent_ItemCustomize : UUIComponent_Display {
	ObjectProperty m_pActiveButton; // 0x124
	ObjectProperty m_pItem; // 0x12c
	ObjectProperty m_pFrameButton; // 0x134
	ObjectProperty m_pButtonBattlePass; // 0x13c
	ObjectProperty m_pButtonCollection; // 0x144
	ObjectProperty m_pButtonChest; // 0x14c
	ObjectProperty m_pButtonPurchase; // 0x154
	ObjectProperty m_pButtonPrice; // 0x15c
	ObjectProperty m_pButtonEquip; // 0x164
	char m_bButtonAlwaysVisible : 1; // 0x16c
};

struct UTgAIBehaviorCondition_NearbyTargetTypeDelta : UTgAIBehaviorCondition_DistanceBase {
	int32_t TargetTypeThreshold; // 0x9c
	ECombatTargetType TargetType; // 0xa0
	char bMustBeInForwardCone : 1; // 0xa4
	float ForwardConeAngle; // 0xa8
};

struct UShadowMapTexture2D : UTexture2D {
	int32_t ShadowmapFlags; // 0x208
};

struct UMorphNodeWeightBase : UMorphNodeBase {
	TArray<FMorphNodeConn> NodeConns; // 0x74
};

struct UTgIconGroup : UObject {
	ObjectProperty m_Manager; // 0x60
	ObjectProperty m_DataItem; // 0x68
	char m_bLoadByItemType : 1; // 0x70
	ObjectProperty m_ManifestGroup; // 0x74
	FMap_Mirror m_TextureObjects; // 0x7c
};

struct UTgSeqAct_PingMinimap : USequenceAction {
	ObjectProperty m_PingTarget; // 0x108
};

struct UPComPlayerInput : UPlayerInput {
	char c_bDirty : 1; // 0x2d4
	char c_bUseServerBindings : 1; // 0x2d4
	char c_bJumpEnabled : 1; // 0x2d4
	FString c_sCurrentProfile; // 0x2d8
	int32_t m_nKeybindConfigSet; // 0x2e8
	float m_nMinLookSensitivity; // 0x2ec
	float m_nMaxLookSensitivity; // 0x2f0
	int32_t m_RecCastMode; // 0x2f4
};

struct UParticleModuleBeamSource : UParticleModuleBeamBase {
	Beam2SourceTargetMethod SourceMethod; // 0x68
	Beam2SourceTargetTangentMethod SourceTangentMethod; // 0x69
	FName SourceName; // 0x6c
	FName SourceSocketName; // 0x74
	char bSourceAbsolute : 1; // 0x7c
	char bLockSource : 1; // 0x7c
	char bLockSourceTangent : 1; // 0x7c
	char bLockSourceStength : 1; // 0x7c
	FRawDistributionVector Source; // 0x80
	FRawDistributionVector SourceTangent; // 0xa4
	FRawDistributionFloat SourceStrength; // 0xc8
};

struct UTgAIBehaviorComposite_Random : UTgAIBehaviorComposite {
	TArray<float> ChildWeights; // 0xb8
	float ChildFreezeTime; // 0xc8
	char bRandomizeOnComplete : 1; // 0xcc
};

struct UWebRequest : UObject {
	FString RemoteAddr; // 0x60
	FString URI; // 0x70
	FString UserName; // 0x80
	FString Password; // 0x90
	int32_t ContentLength; // 0xa0
	FString ContentType; // 0xa4
	ERequestType RequestType; // 0xb4
	FMap_Mirror HeaderMap; // 0xb8
	FMap_Mirror VariableMap; // 0x100
};

struct UTgDeviceForm_CorvusUlt : UTgDeviceForm {
	TArray<ObjectProperty> m_CorvusUltNodes3p; // 0x28c
	TArray<ObjectProperty> m_CorvusUltNodes1p; // 0x29c
};

struct ATgCTFFlagBase : AActor {
	int32_t m_nDefenderTaskForce; // 0x280
	ObjectProperty m_SpawnedFlag; // 0x284
	ObjectProperty m_CTFGame; // 0x28c
};

struct UUIComponent_Button_LoadoutLoadingFrame : UUIComponent_Display {
	ObjectProperty m_mcLoadingFrame; // 0x124
	ObjectProperty m_mcName; // 0x12c
};

struct ATgBotFactory : ATgActorFactory {
	eBotSelection LocationSelection; // 0x2c0
	TArray<ObjectProperty> LocationList; // 0x2c4
	int32_t s_nCurLocationIndex; // 0x2d4
	ObjectProperty SafetyLocation; // 0x2d8
	char ShouldTraceSpawnLocationToFloor : 1; // 0x2e0
	char bUseSmiteStaggerSpawning : 1; // 0x2e0
	char bSpawnAsSquad : 1; // 0x2e0
	char bAutoSpawn : 1; // 0x2e0
	char m_bFirstSpawn : 1; // 0x2e0
	char bBulkSpawn : 1; // 0x2e0
	char bRespawn : 1; // 0x2e0
	char bStartBotsInIntroState : 1; // 0x2e0
	char bHasDifferentInitialIntro : 0; // 0x2e0
	char m_bFirstSpawnWave : 0; // 0x2e0
	char m_bIgnoreCollisionOnSpawn : 0; // 0x2e0
	char m_bUseCollisionHeightForSpawnPlacement : 0; // 0x2e0
	int32_t nBotCount; // 0x2e4
	int32_t nCurrentCount; // 0x2e8
	int32_t nActiveCount; // 0x2ec
	int32_t nTotalSpawns; // 0x2f0
	int32_t nLane; // 0x2f4
	int32_t nNavPointsToSkipForPathing; // 0x2f8
	float fStaggerSpawnDelay; // 0x2fc
	ObjectProperty s_CurrentSquad; // 0x300
	UTgAISquad* m_SquadClass; // 0x308
	int32_t m_nLocationId; // 0x310
	int32_t nSpawnTableId; // 0x314
	int32_t nDefaultSpawnTableId; // 0x318
	float fSpawnDelay; // 0x31c
	TArray<FSpawnQueueEntry> m_SpawnQueue; // 0x320
	ObjectProperty m_SpawnVolume; // 0x330
	int32_t m_nLastGroup; // 0x338
	float fSpawnHealthPercent; // 0x33c
	float fIntroductionDuration; // 0x340
	float fInitialIntroductionDuration; // 0x344
	ObjectProperty m_StartingSpline; // 0x348
	ComponentProperty m_RespawnIndicator; // 0x350
	ObjectProperty m_RespawnIndicatorMIC; // 0x358
	ObjectProperty m_TextureNormal; // 0x360
	float fLastKillTime; // 0x368
	float fRespawnDelay; // 0x36c
};

struct UTgDeviceForm_Spite : UTgDeviceForm {
	TArray<ObjectProperty> m_SpiteNodes3p; // 0x28c
	TArray<ObjectProperty> m_SpiteNodes1p; // 0x29c
	TArray<ObjectProperty> m_DarklordNodes1p; // 0x2ac
	char bFOVZoomActive : 1; // 0x2bc
	float m_fCameraFOVInterpolationTime; // 0x2c0
	float m_fFOVModifier; // 0x2c4
};

struct UTgDeviceForm_ImaniInhandFire : UTgDeviceForm {
	char m_bChanneling : 1; // 0x28c
	char m_bFullyCharged : 1; // 0x28c
	char m_bUseLeftHand : 1; // 0x28c
	float m_fSpellChannelingPercentage; // 0x290
	float m_fSpellChannelingStartPercentage; // 0x294
	float m_fSpellChannelingTime; // 0x298
	float m_fSpellChannelingTotalDuration; // 0x29c
	TArray<ObjectProperty> m_BlendByPct1P; // 0x2a0
	TArray<ObjectProperty> m_BlendByPct3P; // 0x2b0
	TArray<ObjectProperty> m_DualFireStanceNodes1P; // 0x2c0
	TArray<ObjectProperty> m_DualFireStanceNodes3P; // 0x2d0
};

struct UUIComponent_CorvusMarkTeam : UUIComponent_Display {
	ObjectProperty m_mcAnim; // 0x124
	ObjectProperty m_mcGlow; // 0x12c
	char m_bEnabled : 1; // 0x134
};

struct UTgInventoryObject_Listen_FullBurstHit : UTgInventoryObject_Listen_AbilityProcBase {
	int32_t m_nCurrentFireLoopInstanceId; // 0xcc
	int32_t m_nCurrentHits; // 0xd0
	int32_t m_nTargetHits; // 0xd4
	char m_bBonusActive : 1; // 0xd8
	ObjectProperty m_pLastTargetHit; // 0xdc
};

struct ATgCollisionProxy_Mesh : ATgCollisionProxy {
	ComponentProperty m_MeshComponent; // 0x2b4
};

struct UTgDeviceFire_HammerSlam : UTgDeviceFire {
	FVector m_vBaseDimensions; // 0x268
	char m_bBlockedByWorldOnly : 1; // 0x274
};

struct USequenceOp : USequenceObject {
	char bIsActivated : 1; // 0x98
	char bIsCurrentDebuggerOp : 1; // 0x98
	char bActive : 1; // 0x98
	char bLatentExecution : 1; // 0x98
	char bAutoActivateOutputLinks : 1; // 0x98
	char bHaveMovingVarConnector : 1; // 0x98
	char bHaveMovingInputConnector : 1; // 0x98
	char bHaveMovingOutputConnector : 1; // 0x98
	char bPendingVarConnectorRecalc : 0; // 0x98
	char bPendingInputConnectorRecalc : 0; // 0x98
	char bPendingOutputConnectorRecalc : 0; // 0x98
	char bIsBreakpointSet : 0; // 0x98
	char bIsHiddenBreakpointSet : 0; // 0x98
	TArray<FSeqOpInputLink> InputLinks; // 0x9c
	TArray<FSeqOpOutputLink> OutputLinks; // 0xac
	TArray<FSeqVarLink> VariableLinks; // 0xbc
	TArray<FSeqEventLink> EventLinks; // 0xcc
	int32_t PlayerIndex; // 0xdc
	char GamepadID; // 0xe0
	int32_t ActivateCount; // 0xe4
	int32_t SearchTag; // 0xe8
};

struct UUIRoot : UObject {
	TArray<FString> BadCapsLocContexts; // 0x60
};

struct UUIComponent_Button_LoadoutSpray : UUIComponent_Display {
	ObjectProperty m_mcCardIcon; // 0x124
	ObjectProperty m_mcRarity; // 0x12c
	ObjectProperty m_mcName; // 0x134
};

struct UMobileInputZone : UObject {
	EZoneType Type; // 0x60
	char TouchpadIndex; // 0x61
	EZoneState State; // 0x62
	EZoneSlideType SlideType; // 0x63
	FString Caption; // 0x64
	FName InputKey; // 0x74
	FName HorizontalInputKey; // 0x7c
	FName TapInputKey; // 0x84
	FName DoubleTapInputKey; // 0x8c
	float VertMultiplier; // 0x94
	float HorizMultiplier; // 0x98
	float Acceleration; // 0x9c
	float Smoothing; // 0xa0
	float EscapeVelocityStrength; // 0xa4
	char bScalePawnMovement : 1; // 0xa8
	char bRelativeX : 1; // 0xa8
	char bRelativeY : 1; // 0xa8
	char bRelativeSizeX : 1; // 0xa8
	char bRelativeSizeY : 1; // 0xa8
	char bActiveSizeYFromX : 1; // 0xa8
	char bSizeYFromSizeX : 1; // 0xa8
	char bApplyGlobalScaleToActiveSizes : 1; // 0xa8
	char bCenterX : 0; // 0xa8
	char bCenterY : 0; // 0xa8
	char bIsInvisible : 0; // 0xa8
	char bQuickDoubleTap : 0; // 0xa8
	char bCenterOnEvent : 0; // 0xa8
	char bSliderHasTrack : 0; // 0xa8
	char bFloatingTiltZone : 0; // 0xa8
	char bUseGentleTransitions : 0; // 0xa8
	char bAllowFirstDeltaForTrackballZone : 0; // 0xa8
	char bRenderGuides : 0; // 0xa8
	char bIsDoubleTapAndHold : 0; // 0xa8
	float X; // 0xac
	float Y; // 0xb0
	float SizeX; // 0xb4
	float SizeY; // 0xb8
	float ActiveSizeX; // 0xbc
	float ActiveSizeY; // 0xc0
	float InitialX; // 0xc4
	float InitialY; // 0xc8
	float InitialSizeX; // 0xcc
	float InitialSizeY; // 0xd0
	float InitialActiveSizeX; // 0xd4
	float InitialActiveSizeY; // 0xd8
	float AuthoredGlobalScale; // 0xdc
	float Border; // 0xe0
	float ResetCenterAfterInactivityTime; // 0xe4
	float TapDistanceConstraint; // 0xe8
	float ActivateTime; // 0xec
	float DeactivateTime; // 0xf0
	FColor RenderColor; // 0xf4
	float InactiveAlpha; // 0xf8
	float CaptionXAdjustment; // 0xfc
	float CaptionYAdjustment; // 0x100
	ObjectProperty OverrideTexture1; // 0x104
	FString OverrideTexture1Name; // 0x10c
	FTextureUVs OverrideUVs1; // 0x11c
	ObjectProperty OverrideTexture2; // 0x12c
	FString OverrideTexture2Name; // 0x134
	FTextureUVs OverrideUVs2; // 0x144
	FVector2D InitialLocation; // 0x154
	FVector2D CurrentLocation; // 0x15c
	FVector2D CurrentCenter; // 0x164
	FVector2D InitialCenter; // 0x16c
	FVector2D PreviousLocations[0x6]; // 0x174
	float PreviousMoveDeltaTimes[0x6]; // 0x1a4
	int32_t PreviousLocationCount; // 0x1bc
	float LastTouchTime; // 0x1c0
	float TimeSinceLastTapRepeat; // 0x1c4
	float AnimatingFadeOpacity; // 0x1c8
	ObjectProperty InputOwner; // 0x1cc
	float TransitionTime; // 0x1d4
	FVector2D EscapeVelocity; // 0x1d8
	TArray<ObjectProperty> MobileSeqEventHandlers; // 0x1e0
	FVector2D LastAxisValues; // 0x1f0
	float TotalActiveTime; // 0x1f8
	float LastWentActiveTime; // 0x1fc
	DelegateProperty __OnProcessInputDelegate__Delegate; // 0x200
	DelegateProperty __OnTapDelegate__Delegate; // 0x210
	DelegateProperty __OnDoubleTapDelegate__Delegate; // 0x220
	DelegateProperty __OnProcessSlide__Delegate; // 0x230
	DelegateProperty __OnPreDrawZone__Delegate; // 0x240
	DelegateProperty __OnPostDrawZone__Delegate; // 0x250
};

struct APylonSeed : AActor {
	FPointer VfTable_IInterface_NavMeshPathObject; // 0x280
};

struct USwfMovie : UGFxRawData {
	char bUsesFontlib : 1; // 0xa0
	char bSetSRGBOnImportedTextures : 1; // 0xa0
	char bPackTextures : 1; // 0xa0
	char bForceSquarePacking : 1; // 0xa0
	char bUseStreamableTextures : 1; // 0xa0
	int32_t PackTextureSize; // 0xa4
	FlashTextureRescale TextureRescale; // 0xa8
	FString TextureFormat; // 0xac
	int32_t RTTextures; // 0xbc
	int32_t RTVideoTextures; // 0xc0
};

struct UTgDeviceForm_CommanderScope : UTgDeviceForm_ToggleADS {
	ObjectProperty m_CachedOctavia; // 0x2a0
	char m_bAirScoped : 1; // 0x2a8
	TArray<ObjectProperty> m_SimpleStanceAirScoped1P; // 0x2ac
	TArray<ObjectProperty> m_SimpleStanceAirScoped3P; // 0x2bc
};

struct UNavMeshGoal_PolyEncompassesAI : UNavMeshPathGoalEvaluator {
	FVector OverrideExtentToCheck; // 0x7c
};

struct ADynamicTriggerVolume : ATriggerVolume {
	char bEnabled : 1; // 0x2bc
};

struct UTgDeviceForm_AtlasF : UTgDeviceForm {
	TArray<ObjectProperty> m_AnimNodeAtlasF1P; // 0x28c
	TArray<ObjectProperty> m_AnimNodeAtlasF3P; // 0x29c
};

struct UUIComponent_EventChallenge : UUIComponent_Display {
	ObjectProperty m_mcLock; // 0x124
	ObjectProperty m_mcText; // 0x12c
	ObjectProperty m_pProgress; // 0x134
	ObjectProperty m_mcProgressText; // 0x13c
};

struct USeqAct_ModifyCover : USequenceAction {
	TArray<int32_t> Slots; // 0x108
	ECoverType ManualCoverType; // 0x118
	char bManualAdjustPlayersOnly : 1; // 0x11c
};

struct UPComPictureInPicture : UObject {
	FPointer VfTable_FCallbackEventDevice; // 0x60
	ObjectProperty Scene; // 0x68
	ObjectProperty RenderTargetToUse; // 0x70
	TArray<FPComPipViewDesc> ViewDescs; // 0x78
	char bEnableDebugRendering : 1; // 0x88
	FVector2D CurrentOffset; // 0x8c
	FVector2D CurrentScaling; // 0x94
};

struct UUINotificationCenterJsonManager : UPComUIManagerBase {
	TArray<FTabInfo> m_WebPanelUrls; // 0x84
	ObjectProperty m_pMovie; // 0x94
};

struct AScout : APawn {
	TArray<FPathSizeInfo> PathSizes; // 0x5a8
	float TestJumpZ; // 0x5b8
	float TestGroundSpeed; // 0x5bc
	float TestMaxFallSpeed; // 0x5c0
	float TestFallSpeed; // 0x5c4
	float MaxLandingVelocity; // 0x5c8
	int32_t MinNumPlayerStarts; // 0x5cc
	UReachSpec* DefaultReachSpecClass; // 0x5d0
	TArray<FColor> EdgePathColors; // 0x5d8
	float NavMeshGen_StepSize; // 0x5e8
	float NavMeshGen_EntityHalfHeight; // 0x5ec
	float NavMeshGen_StartingHeightOffset; // 0x5f0
	float NavMeshGen_MaxDropHeight; // 0x5f4
	float NavMeshGen_MaxStepHeight; // 0x5f8
	float NavMeshGen_VertZDeltaSnapThresh; // 0x5fc
	float NavMeshGen_MinPolyArea; // 0x600
	float NavMeshGen_BorderBackfill_CheckDist; // 0x604
	float NavMeshGen_MinMergeDotAreaThreshold; // 0x608
	float NavMeshGen_MinMergeDotSmallArea; // 0x60c
	float NavMeshGen_MinMergeDotLargeArea; // 0x610
	float NavMeshGen_MaxPolyHeight; // 0x614
	float NavMeshGen_HeightMergeThreshold; // 0x618
	float NavMeshGen_EdgeMaxDelta; // 0x61c
	float NavMeshGen_MaxGroundCheckSize; // 0x620
	float NavMeshGen_MinEdgeLength; // 0x624
	float NavMeshGen_MinRadius; // 0x628
	float NavMeshGen_MaxRadius; // 0x62c
	float StandardJumpHeight; // 0x630
	float StandardJumpDistance; // 0x634
	float NavMeshGen_RecastCellSize; // 0x638
	float NavMeshGen_RecastCellHeight; // 0x63c
	float NavMeshGen_RecastErodeRadius; // 0x640
	char NavMeshGen_ExpansionDoObstacleMeshSimplification : 1; // 0x644
	char bHightlightOneWayReachSpecs : 1; // 0x644
	float MinMantleFallDist; // 0x648
	float MaxMantleFallDist; // 0x64c
	float MinMantleLateralDist; // 0x650
	float MaxMantleLateralDist; // 0x654
	float MaxMantleFallTime; // 0x658
};

struct ATgDevice_HeatTransfer : ATgDevice_ShieldMod {
	int32_t m_nAccumulatedDamage; // 0xa04
	int32_t m_nActivationDamage; // 0xa08
};

struct ATgProj_Loogie : ATgProj_Simulated {
	char m_bWasExplodedByRocket : 1; // 0x52c
	char m_bIgnoreRocketOwner : 1; // 0x52c
};

struct UUIComponent_NotificationCenterPatchNotes : UUIComponent_Display {
	TMap<None, None> m_FeatureMap; // 0x124
	ObjectProperty m_pPatchNotesCarousel; // 0x16c
	ObjectProperty m_grInput; // 0x174
};

struct ATgDevice_AbsorptionField : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	DelegateProperty __InterruptFiringDelegate__Delegate; // 0xa0c
};

struct UUIComponent_Talent : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcSubtitle; // 0x12c
	ObjectProperty m_mcUnlockText; // 0x134
	ObjectProperty m_mcFrame; // 0x13c
	ObjectProperty m_mcIcon; // 0x144
	ObjectProperty m_mcIconGlow; // 0x14c
	ObjectProperty m_mcIconTexture; // 0x154
	ObjectProperty m_mcIconLock; // 0x15c
	ObjectProperty m_mcCooldown; // 0x164
	ObjectProperty m_mcCooldownTF; // 0x16c
};

struct UUIHudChatBox : UUIChatScene {
	char m_bLobby : 1; // 0x28c
	char m_bFadeFrame : 1; // 0x28c
	char m_bHighlight : 1; // 0x28c
	char m_bHideInput : 1; // 0x28c
	float m_fOffset; // 0x290
	float m_fInputPosY; // 0x294
	float m_fInputWidth; // 0x298
	float m_fOutputTimer[0x8]; // 0x29c
	int32_t m_nMaxWidth; // 0x2bc
	FString m_sReplyName; // 0x2c0
	ObjectProperty m_Buffer; // 0x2d0
	ObjectProperty m_Highlight; // 0x2d8
	ObjectProperty m_Output; // 0x2e0
	ObjectProperty m_OutputText[0x8]; // 0x2e8
	ObjectProperty m_OutputIcon[0x8]; // 0x328
	ObjectProperty m_OutputVgsCallout[0x28]; // 0x368
	ObjectProperty m_OutputFrame; // 0x4a8
	ObjectProperty m_OutputScroll; // 0x4b0
	ObjectProperty m_mcCloseBtn; // 0x4b8
	ObjectProperty m_Input; // 0x4c0
	ObjectProperty m_InputBtn; // 0x4c8
	ObjectProperty m_InputHelp; // 0x4d0
	ObjectProperty m_InputChan; // 0x4d8
	ObjectProperty m_InputFrame; // 0x4e0
	TArray<char> m_bVGSText; // 0x4e8
};

struct UOnlinePlaylistManager : UObject {
	FPointer VfTable_FTickableObject; // 0x60
	TArray<FPlaylist> Playlists; // 0x68
	TArray<FString> PlaylistFileNames; // 0x78
	TArray<FName> DatastoresToRefresh; // 0x88
	int32_t DownloadCount; // 0x98
	int32_t SuccessfulCount; // 0x9c
	int32_t VersionNumber; // 0xa0
	TArray<FPlaylistPopulation> PopulationData; // 0xa4
	int32_t WorldwideTotalPlayers; // 0xb4
	int32_t RegionTotalPlayers; // 0xb8
	TScriptInterface<Class> TitleFileInterface; // 0xbc
	FString PopulationFileName; // 0xcc
	float NextPlaylistPopulationUpdateTime; // 0xdc
	float PlaylistPopulationUpdateInterval; // 0xe0
	int32_t MinPlaylistIdToReport; // 0xe4
	int32_t CurrentPlaylistId; // 0xe8
	FName EventsInterfaceName; // 0xec
	int32_t DataCenterId; // 0xf4
	FString DataCenterFileName; // 0xf8
	float LastPlaylistDownloadTime; // 0x108
	float PlaylistRefreshInterval; // 0x10c
	DelegateProperty __OnReadPlaylistComplete__Delegate; // 0x110
	DelegateProperty __OnPlaylistPopulationDataUpdated__Delegate; // 0x120
};

struct UUIComponent_ItemIcon : UUIComponent_Display {
	ObjectProperty m_mcRarityText; // 0x124
	ObjectProperty m_mcRarity; // 0x12c
	ObjectProperty m_mcIcon; // 0x134
	ObjectProperty m_mcChestIcon; // 0x13c
	ObjectProperty m_Avatar; // 0x144
	ObjectProperty m_mcLoadingFrame; // 0x14c
	ObjectProperty m_mcIconBorderFrame; // 0x154
	ObjectProperty m_mcAvatarBorderFrame; // 0x15c
	char m_bUseBotSpecificRarityName : 1; // 0x164
	char m_bLowerCaseNames : 1; // 0x164
};

struct ATgDeploy_BombKingStickyBomb : ATgDeployable {
	char r_bDetonated : 1; // 0x46c
	char c_bSuppressExplosion : 1; // 0x46c
	char r_bShouldDetach : 1; // 0x46c
	ObjectProperty r_StuckPlayer; // 0x470
	FName m_StuckSocket; // 0x478
	ObjectProperty m_CachedPlayer; // 0x480
	float m_fBounceVelocityMultiplier; // 0x488
	FVector r_HitNormal; // 0x48c
	ObjectProperty m_GetStuckFx; // 0x498
	ObjectProperty m_StickOtherFx; // 0x4a0
	ObjectProperty r_StuckCart; // 0x4a8
	FRotator r_StuckRotation; // 0x4b0
	FVector r_CartOffset; // 0x4bc
	ObjectProperty r_StuckGeometry; // 0x4c8
	int32_t r_nOriginalProjectileID; // 0x4d0
	float r_fFXDamageRadius; // 0x4d4
	float r_fFXEffectiveRadius; // 0x4d8
	ObjectProperty m_CollisionProxy; // 0x4dc
	TArray<ObjectProperty> m_PendingCollisions; // 0x4e4
};

struct UInterpTrackInstVisibility : UInterpTrackInst {
	EVisibilityTrackAction Action; // 0x60
	float LastUpdatePosition; // 0x64
};

struct UPComSeqAct_PlayMusicEvent : USequenceAction {
	FName EventName; // 0x108
};

struct UParticleModuleSpawn : UParticleModuleSpawnBase {
	FRawDistributionFloat Rate; // 0x6c
	FRawDistributionFloat RateScale; // 0x90
	EParticleBurstMethod ParticleBurstMethod; // 0xb4
	TArray<FParticleBurst> BurstList; // 0xb8
};

struct ATgDevice_ImaniDragonInhand : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedImaniAvatar; // 0xa0c
};

struct UAnimNodeSlot : UAnimNodeBlendBase {
	char bIsPlayingCustomAnim : 1; // 0x114
	char bEarlyAnimEndNotify : 1; // 0x114
	char bSkipBlendWhenNotRendered : 1; // 0x114
	char bAdditiveAnimationsOverrideSource : 1; // 0x114
	char bIsBeingUsedByInterpGroup : 1; // 0x114
	char bDontAddToAlwaysTickArray : 1; // 0x114
	float PendingBlendOutTime; // 0x118
	int32_t CustomChildIndex; // 0x11c
	int32_t TargetChildIndex; // 0x120
	TArray<float> TargetWeight; // 0x124
	float BlendTimeToGo; // 0x134
};

struct ATgDevice_DrogozInhand : ATgDevice {
	ObjectProperty m_CachedDrogozPawn; // 0xa04
	ObjectProperty m_DrogozLeg2; // 0xa0c
	FVector m_vSalvoProjectileSpawnOffset; // 0xa14
	char m_bStartedSalvo : 1; // 0xa20
	ObjectProperty m_SalvoDevice; // 0xa24
	int32_t m_nSalvoRockets; // 0xa2c
};

struct UUIData_RewardPanel : UUIData {
	int32_t m_nValueGained; // 0x64
	UIEOML_REWARD_TYPE m_ePanelType; // 0x68
	TArray<ObjectProperty> m_pEntries; // 0x6c
};

struct UTgDeviceForm_HeatHaze : UTgDeviceForm {
	char m_bShouldBeActive : 1; // 0x28c
	float m_fUltActivationTime; // 0x290
	float m_fUltActivationPercent; // 0x294
};

struct UUIDataRedeemableAcquisition : UUIData {
	FQWord qwAcquisitionId; // 0x64
};

struct ATgPawn_Commander : ATgPawn_Character {
	TArray<int32_t> c_ScopeRevealTargets; // 0x3160
	char r_bAirScoped : 1; // 0x3170
	char m_bScopedThisJump : 1; // 0x3170
	char r_bDistortionFieldTalentEquipped : 1; // 0x3170
	float m_fAirScopeTime; // 0x3174
	ObjectProperty m_CachedCommanderPassive; // 0x3178
	ObjectProperty m_CommanderScope; // 0x3180
};

struct UPComJsonHandler : UObject {
	ObjectProperty m_pImageDownloader; // 0x60
	FPointer m_pCallbackObject; // 0x68
	FString m_strUrl; // 0x70
	FString m_strDownloadDir; // 0x80
	FString m_strLocalDir; // 0x90
	FString m_strJson; // 0xa0
	FString m_strName; // 0xb0
	FPointer m_pHttp; // 0xc0
};

struct UInterpTrackInstSound : UInterpTrackInst {
	float LastUpdatePosition; // 0x60
	ComponentProperty PlayAudioComp; // 0x64
};

struct ATgDestructibleFactory : ATgActorFactory {
	ComponentProperty LightEnvironment; // 0x2c0
};

struct UUIComponent_ChampionSelectRoleTab : UUIComponent_Display {
	ObjectProperty m_mcSelectedIcon; // 0x124
	ObjectProperty m_mcHighlightIcon; // 0x12c
	ObjectProperty m_mcBackgroundIcon; // 0x134
};

struct UParticleModuleOrientationAxisLock : UParticleModuleOrientationBase {
	EParticleAxisLock LockAxisFlags; // 0x68
};

struct UUIComponent_OracleSoulCharges : UUIComponent_Display {
	ObjectProperty m_CurrentViewPawn; // 0x124
	ObjectProperty m_CurrentTargetPawn; // 0x12c
	ObjectProperty m_mcText; // 0x134
	ObjectProperty m_mcIcon; // 0x13c
	ObjectProperty m_mcAnim; // 0x144
	ObjectProperty m_mcMaxStacks; // 0x14c
	char m_bIsHiding : 1; // 0x154
	char m_bEnabled : 1; // 0x154
	char m_bIsSoulCollectorDisplay : 1; // 0x154
	int32_t m_nCurrentSoulCharges; // 0x158
};

struct UUIHudNotify : UTgGfxScene {
	float m_fDisplayTimer; // 0x1ec
	float m_fKillTime; // 0x1f0
	float m_fKillTimer; // 0x1f4
	float m_fAlertTime; // 0x1f8
	float m_fAlertTimer; // 0x1fc
	float m_fAccoladeTime; // 0x200
	float m_fAccoladeTimer; // 0x204
	FString m_sCKBuffMsgKey; // 0x208
	FNotifyData m_NewData; // 0x218
	ObjectProperty m_mcNotify; // 0x25c
	ObjectProperty m_mcNotifyTF; // 0x264
	ObjectProperty m_mcTeamTF; // 0x26c
	char m_bRejectMessages : 1; // 0x274
	char m_bShowAccolades : 1; // 0x274
	ObjectProperty m_scCaptured; // 0x278
	ObjectProperty m_scGateDestroyed; // 0x280
	ObjectProperty m_scSiegeDestroyed; // 0x288
	ObjectProperty m_scGettingCaptured; // 0x290
	TArray<FNotifyData> m_Kills; // 0x298
	TArray<FNotifyData> m_Alerts; // 0x2a8
	TArray<FNotifyData> m_Accolades; // 0x2b8
};

struct UTgAIObstacleAvoidanceRenderingComponent : UPrimitiveComponent {
	ObjectProperty ObstacleAvoidance; // 0x24c
};

struct ATgDevice_YagoSpray : ATgDevice {
	ObjectProperty m_CachedYagorath; // 0xa04
	float m_fMinAcidJuiceToFire; // 0xa0c
	float m_fFailsafeFireloopTimeout; // 0xa10
};

struct UUIComponent_SocialDetail : UUIComponent_Display {
	ObjectProperty m_pSocialData; // 0x124
	ObjectProperty m_pButtonList; // 0x12c
};

struct ATgCollisionProxy_Cylinder : ATgCollisionProxy {
	ComponentProperty m_CollisionCylinder; // 0x2b4
};

struct UFogVolumeConeDensityComponent : UFogVolumeDensityComponent {
	float MaxDensity; // 0xe0
	FVector ConeVertex; // 0xe4
	float ConeRadius; // 0xf0
	FVector ConeAxis; // 0xf4
	float ConeMaxAngle; // 0x100
	ComponentProperty PreviewCone; // 0x104
};

struct UCodecMovieFallback : UCodecMovie {
	float CurrentTime; // 0x64
};

struct ATgProjectile : AProjectile {
	FPointer VfTable_ITgSkinnableInterface; // 0x2dc
	FPointer VfTable_ITgObserver_ViewTargetChanged; // 0x2e4
	FPointer VfTable_ITgSoundNotifyActorInterface; // 0x2ec
	FPointer VfTable_ITgGrabSource; // 0x2f4
	ObjectProperty s_LastDefaultMode; // 0x2fc
	int32_t r_nProjectileId; // 0x304
	float r_fDuration; // 0x308
	float m_fPostLandDuration; // 0x30c
	float m_fLandZThreshold; // 0x310
	float m_fPersistTime; // 0x314
	float m_fPersistHitPulse; // 0x318
	int32_t m_nTargetPhysicalType; // 0x31c
	ComponentProperty c_Mesh; // 0x320
	ObjectProperty c_ExplosionFx; // 0x328
	ObjectProperty c_ImpactFx; // 0x330
	char c_bRotationFollowsVelocity : 1; // 0x338
	char m_bExplodeAtMaxRange : 1; // 0x338
	char m_bDeployOnCharacter : 1; // 0x338
	char m_bDeployOnTarget : 1; // 0x338
	char m_bDeployOnGround : 1; // 0x338
	char m_bAlwaysDeployUpwards : 1; // 0x338
	char m_bStickToWalls : 1; // 0x338
	char c_bIsAOE : 1; // 0x338
	char m_bCountDirectHitForAOE : 0; // 0x338
	char m_bUseAOEDirectHit : 0; // 0x338
	char m_bHasExploded : 0; // 0x338
	char m_bHitValidTarget : 0; // 0x338
	char m_bIngoreBehindProjCollisions : 0; // 0x338
	char m_bIsInitialized : 0; // 0x338
	char m_bIsShutDown : 0; // 0x338
	char m_bPIEInitialized : 0; // 0x338
	char m_bHasPlayedFizzleFX : 0; // 0x338
	char m_bHasPlayedHitWallFX : 0; // 0x338
	char m_bHasPlayedHitTargetFX : 0; // 0x338
	char m_bSuppressDeployableSpawn : 0; // 0x338
	char m_bAltFireHit : 0; // 0x338
	char m_bInvertTeam : 0; // 0x338
	char m_bFirstShotAfterMovementAbility : 0; // 0x338
	char m_bCanSpawnOnClientFirst : 0; // 0x338
	char m_bIsNonThreatening : 0; // 0x338
	char m_bShutdownOnNonThreatening : 0; // 0x338
	char m_bTrackToWorldLocation : 0; // 0x338
	float r_fAccelRate; // 0x33c
	float m_fTossZ; // 0x340
	float m_fFireAngle; // 0x344
	ObjectProperty r_Owner; // 0x348
	int32_t r_nOwnerFireModeId; // 0x350
	ObjectProperty m_OwnerFireMode; // 0x354
	TArray<ObjectProperty> m_ExtraFireModes; // 0x35c
	float r_fRange; // 0x36c
	float m_fProximityDistance; // 0x370
	ObjectProperty m_CollisionProxy; // 0x374
	int32_t s_nSpawnBotId; // 0x37c
	int32_t s_nSpawnDeployableId; // 0x380
	SpawnDeployableOrientation m_DeployableSpawnOrientation; // 0x384
	TG_EQUIP_POINT r_eEquippedAt; // 0x385
	TArray<ObjectProperty> s_GrabbedTargets; // 0x388
	float m_fDamageRadius; // 0x398
	FVector r_vSpawnLocation; // 0x39c
	FVector m_vSpawnRotation; // 0x3a8
	FVector m_vLocationLastTick; // 0x3b4
	float m_fMinTravelRange; // 0x3c0
	float s_fSpawnTime; // 0x3c4
	int32_t m_nPostRenderIcon; // 0x3c8
	int32_t m_nUniqueId; // 0x3cc
	float m_fBaseDamageMultiplier; // 0x3d0
	FVector c_vHitWallVelocity; // 0x3d4
	ComponentProperty LightEnvironment; // 0x3e0
	FVector m_vSpawnPosition; // 0x3e8
	ComponentProperty m_DebugProximityDistancePSC; // 0x3f4
	float m_fStandingStillPercent; // 0x3fc
	int32_t m_nTargetsHitCount; // 0x400
	ObjectProperty m_DebugCollisionSphere; // 0x404
	FCollisionSettingsProjectile m_CollisionSettings; // 0x40c
	TArray<ObjectProperty> m_PassThroughTargets; // 0x410
	FTrackingSettings m_TrackingSettings; // 0x420
	float m_fDelayTrackSeconds; // 0x43c
	float m_fExplosionOffsetDistance; // 0x440
	float s_fAoeRewindTime; // 0x444
	ObjectProperty m_AkActorUnoccluded; // 0x448
};

struct UTgInventoryObject_Device : UTgInventoryObject {
	ObjectProperty s_Device; // 0xa8
	int32_t m_nDeviceInstanceId; // 0xb0
	int32_t c_nNumFindDeviceFails; // 0xb4
	int32_t m_nStackCount; // 0xb8
	FPointer m_pAmDevice; // 0xbc
};

struct UUIGAPeachStartup : UUIMoviePlayer {
	float m_fHirezAnimTimer; // 0x2a0
	float m_fPeachAnimTimer; // 0x2a4
	float m_fSkipDelay; // 0x2a8
	float m_fSkipDelayTimer; // 0x2ac
};

struct UTgCallbackContainer : UObject {
	FMultiMap_Mirror m_RegisteredCallbacks; // 0x60
	FMap_Mirror m_RegisteredCallbacksByHandle; // 0xa8
	FMap_Mirror m_CallbackHandles; // 0xf0
	TArray<char> m_IteratingCallbackTypeStack; // 0x138
	TArray<FFunctionWrapperInfo> m_CallbacksToRemove; // 0x148
};

struct UTgSeqAct_SetPlayerMeshVisible : USequenceAction {
	char bIs1PMeshVisible : 1; // 0x108
	char bIs3PMeshVisible : 1; // 0x108
};

struct UUIComponent_SimpleIconWithFrames : UUIComponent_Display {
	char m_bZeroIndexed : 1; // 0x124
};

struct USeqAct_SetDamageInstigator : USequenceAction {
	ObjectProperty DamageInstigator; // 0x108
};

struct USkelControlLookAt : USkelControlBase {
	FVector TargetLocation; // 0xd0
	EBoneControlSpace TargetLocationSpace; // 0xdc
	EAxis LookAtAxis; // 0xdd
	EAxis UpAxis; // 0xde
	EBoneControlSpace AllowRotationSpace; // 0xdf
	FName TargetSpaceBoneName; // 0xe0
	char bInvertLookAtAxis : 1; // 0xe8
	char bDefineUpAxis : 1; // 0xe8
	char bInvertUpAxis : 1; // 0xe8
	char bEnableLimit : 1; // 0xe8
	char bLimitBasedOnRefPose : 1; // 0xe8
	char bDisableBeyondLimit : 1; // 0xe8
	char bNotifyBeyondLimit : 1; // 0xe8
	char bShowLimit : 1; // 0xe8
	char bAllowRotationX : 0; // 0xe8
	char bAllowRotationY : 0; // 0xe8
	char bAllowRotationZ : 0; // 0xe8
	float TargetLocationInterpSpeed; // 0xec
	FVector DesiredTargetLocation; // 0xf0
	FVector ActorSpaceLookAtTarget; // 0xfc
	float MaxAngle; // 0x108
	float OuterMaxAngle; // 0x10c
	float DeadZoneAngle; // 0x110
	FVector2D RotationAngleRangeX; // 0x114
	FVector2D RotationAngleRangeY; // 0x11c
	FVector2D RotationAngleRangeZ; // 0x124
	FName AllowRotationOtherBoneName; // 0x12c
	float LookAtAlpha; // 0x134
	float LookAtAlphaTarget; // 0x138
	float LookAtAlphaBlendTimeToGo; // 0x13c
	FVector LimitLookDir; // 0x140
	FVector BaseLookDir; // 0x14c
	FVector BaseBonePos; // 0x158
	float LastCalcTime; // 0x164
	int32_t ControlBoneIndex; // 0x168
};

struct USeqEvent_MobileInput : USeqEvent_MobileZoneBase {
	float XAxisValue; // 0x138
	float YAxisValue; // 0x13c
	float CenterX; // 0x140
	float CenterY; // 0x144
	float CurrentX; // 0x148
	float CurrentY; // 0x14c
};

struct UMaterialExpressionCustom : UMaterialExpression {
	FString Code; // 0xb0
	ECustomMaterialOutputType OutputType; // 0xc0
	FString Description; // 0xc4
	TArray<FCustomInput> Inputs; // 0xd4
};

struct ATgSkeletalMeshActor_Pedestal : ATgSkeletalMeshActor_Lobby {
	FPointer m_DefaultBot; // 0x568
	TArray<ObjectProperty> m_DefaultPedestalActors; // 0x570
	char m_bUsingDefaultPedestal : 1; // 0x580
	EPedestalType m_PedestalType; // 0x584
};

struct ATgDevice_DragonSlam : ATgDevice {
	char m_bHasHitTarget : 1; // 0xa04
	ObjectProperty m_CachedDrogozOwner; // 0xa08
	ObjectProperty m_CollisionProxy; // 0xa10
	ObjectProperty m_DrogozLeg1; // 0xa18
};

struct ATgDeploy_DeployableLinkedEffectField : ATgDeploy_EffectField {
	ObjectProperty m_ParentDeployable; // 0x4a0
};

struct ATgProj_TigronHeavyBlade : ATgProj_Simulated {
	ObjectProperty m_CachedTiberius; // 0x52c
	float m_fScaleMultiplier; // 0x534
};

struct UTgInvListener_AzaanIreConsumed : UTgInvListener {
	ObjectProperty m_CachedAzaan; // 0xc4
	int32_t m_nPercentMultiplier; // 0xcc
};

struct UUIData_EventChallengeRegion : UUIData {
	FString m_sName; // 0x64
	FString m_sInternalName; // 0x74
	int32_t m_nOpenTimestamp; // 0x84
	char m_bOpensNext : 1; // 0x88
	int32_t m_nSortIndex; // 0x8c
	int32_t m_nRegionIndex; // 0x90
	int32_t m_nColorIndex; // 0x94
	TArray<ObjectProperty> m_HubData; // 0x98
};

struct UUIScene_UIPopupTwitchPrime : UUIScene {
	ObjectProperty m_pTwitchPrime; // 0x1cc
	float m_fPushDelay; // 0x1d4
};

struct ASkeletalMeshActor : AActor {
	char bDamageAppliesImpulse : 1; // 0x280
	char bShouldDoAnimNotifies : 1; // 0x280
	char bForceSaveInCheckpoint : 1; // 0x280
	char bCollideActors_OldValue : 1; // 0x280
	char bShouldShadowParentAllAttachedActors : 1; // 0x280
	ComponentProperty SkeletalMeshComponent; // 0x284
	ComponentProperty LightEnvironment; // 0x28c
	ComponentProperty Silhouette; // 0x294
	ComponentProperty FacialAudioComp; // 0x29c
	ObjectProperty ReplicatedMesh; // 0x2a4
	ObjectProperty ReplicatedMaterial0; // 0x2ac
	ObjectProperty ReplicatedMaterial1; // 0x2b4
	TArray<FSkelMeshActorControlTarget> ControlTargets; // 0x2bc
	TArray<ObjectProperty> InterpGroupList; // 0x2cc
	FName SavedAnimSeqName; // 0x2dc
	float SavedCurrentTime; // 0x2e4
};

struct ATgPlayOfTheGameCamera : ACameraActor {
	ObjectProperty m_ViewTarget; // 0x420
	char m_bActive : 1; // 0x428
	float m_fRemainingTweenTime; // 0x42c
	float m_fTotalTweenTime; // 0x430
	FTPOV m_TweenSourcePOV; // 0x434
	FVector m_vRelativeLocation; // 0x458
	FVector m_vRelativeRotation; // 0x464
	FVector m_vRelativeLocationOffset; // 0x470
	FVector m_vRelativeRotationOffset; // 0x47c
};

struct UTgAIBehaviorCondition_NumGodsNearDeployable : UTgAIBehaviorCondition_DistanceBase {
	char bMustBeEnemy : 1; // 0x9c
	int32_t DeployableId; // 0xa0
	int32_t GodThreshold; // 0xa4
};

struct UTgMaterialStack : UObject {
	ComponentProperty m_pOwner; // 0x60
	int32_t m_nMaterialStackId; // 0x68
	TArray<FMaterialStackInstance> m_MaterialStack; // 0x6c
};

struct UParticleModuleEventReceiverBase : UParticleModuleEventBase {
	EParticleEventType EventGeneratorType; // 0x68
	FName EventName; // 0x6c
};

struct AAccessControl : AInfo {
	TArray<FString> IPPolicies; // 0x280
	TArray<FUniqueNetId> BannedIDs; // 0x290
	FString IPBanned; // 0x2a0
	FString WrongPassword; // 0x2b0
	FString NeedPassword; // 0x2c0
	FString SessionBanned; // 0x2d0
	FString KickedMsg; // 0x2e0
	FString DefaultKickReason; // 0x2f0
	FString IdleKickReason; // 0x300
	AAdmin* AdminClass; // 0x310
	FString AdminPassword; // 0x318
	FString GamePassword; // 0x328
	FString ACDisplayText[0x3]; // 0x338
	FString ACDescText[0x3]; // 0x368
	char bDontAddDefaultAdmin : 1; // 0x398
	char bAuthenticateClients : 1; // 0x398
	char bAuthenticateServer : 1; // 0x398
	char bAuthenticateListenHost : 1; // 0x398
	char bAuthDelegatesRegistered : 1; // 0x398
	char bPendingListenAuth : 1; // 0x398
	int32_t MaxAuthRetryCount; // 0x39c
	int32_t AuthRetryDelay; // 0x3a0
	ObjectProperty OnlineSub; // 0x3a4
	TScriptInterface<Class> CachedAuthInt; // 0x3ac
	TArray<FPendingClientAuth> ClientsPendingAuth; // 0x3bc
	TArray<FServerAuthRetry> ServerAuthRetries; // 0x3cc
	int32_t ListenAuthTicketUID; // 0x3dc
	int32_t ListenAuthRetryCount; // 0x3e0
};

struct USavedMove : UObject {
	ObjectProperty NextMove; // 0x60
	float TimeStamp; // 0x68
	float Delta; // 0x6c
	char bRun : 1; // 0x70
	char bDuck : 1; // 0x70
	char bPressedJump : 1; // 0x70
	char bDoubleJump : 1; // 0x70
	char bPreciseDestination : 1; // 0x70
	char bForceRMVelocity : 1; // 0x70
	char bForceMaxAccel : 1; // 0x70
	char bRootMotionFromInterpCurve : 1; // 0x70
	EDoubleClickDir DoubleClickMove; // 0x74
	EPhysics SavedPhysics; // 0x75
	ERootMotionMode RootMotionMode; // 0x76
	FVector StartLocation; // 0x78
	FVector StartRelativeLocation; // 0x84
	FVector StartVelocity; // 0x90
	FVector StartFloor; // 0x9c
	FVector SavedLocation; // 0xa8
	FVector SavedVelocity; // 0xb4
	FVector SavedRelativeLocation; // 0xc0
	FVector RMVelocity; // 0xcc
	FVector Acceleration; // 0xd8
	FRotator Rotation; // 0xe4
	ObjectProperty StartBase; // 0xf0
	ObjectProperty EndBase; // 0xf8
	float CustomTimeDilation; // 0x100
	float AccelDotThreshold; // 0x104
	float RootMotionInterpCurrentTime; // 0x108
	FVector RootMotionInterpCurveLastValue; // 0x10c
};

struct UUIComponent_BoosterItemInfo : UUIComponent_Display {
	int32_t m_nDisplayedItemId; // 0x124
	char m_bUseRentalOffset : 1; // 0x128
	ObjectProperty m_mcTitle; // 0x12c
	ObjectProperty m_mcTitleIcon; // 0x134
	ObjectProperty m_mcDesc; // 0x13c
	ObjectProperty m_mcRentalText; // 0x144
	ObjectProperty m_mcRentalDuration; // 0x14c
	ObjectProperty m_pBenefits; // 0x154
};

struct UTgGameplayCurvesSet_AimAssistBounds : UTgGameplayCurvesSet {
	FRawDistributionFloat BoundsScaleHorizByDistance; // 0x64
	FRawDistributionFloat BoundsScaleVertByDistance; // 0x88
	char bUseHorizCurveForVert : 1; // 0xac
	float fBaseHorizMultiplier; // 0xb0
	float fBaseVertMultiplier; // 0xb4
};

struct UUIComponent_ShadowUltBar : UUIComponent_ProgressBarHorizontal {
	ObjectProperty m_mcOverfill; // 0x154
	char m_bOverfillVisible : 1; // 0x15c
};

struct UUIComponent_MasteryRewards : UUIComponent_Display {
	ObjectProperty m_pBack; // 0x124
	ObjectProperty m_pRewards; // 0x12c
	ObjectProperty m_PurchaseAction; // 0x134
};

struct UUIComponent_EventQuestChain : UUIComponent_Display {
	ObjectProperty m_mcQuestName; // 0x124
	ObjectProperty m_mcIcon; // 0x12c
	ObjectProperty m_mcProgressTF; // 0x134
	ObjectProperty m_mcRewardTF; // 0x13c
	ObjectProperty m_mcCurrencyIcon; // 0x144
	ObjectProperty m_mcCurrencyTF; // 0x14c
	ObjectProperty m_mcChestIcon; // 0x154
	ObjectProperty m_pAvatarIcon; // 0x15c
	ObjectProperty m_pFrameButton; // 0x164
	ObjectProperty m_pRadialProgressBar; // 0x16c
};

struct ATgDeploy_SpinningShield : ATgDeploy_Shield {
	float r_fRotationOffset; // 0x470
};

struct UNavMeshGoal_At : UNavMeshPathGoalEvaluator {
	FVector Goal; // 0x7c
	float GoalDist; // 0x88
	char bKeepPartial : 1; // 0x8c
	char bWeightPartialByDist : 1; // 0x8c
	char bGoalInSamePolyAsAnchor : 1; // 0x8c
	float PartialDistSq; // 0x90
	FPointer GoalPoly; // 0x94
	FPointer PartialGoal; // 0x9c
};

struct UTgAnimBlendByFireMode : UTgAnimNodeBlendList {
	int32_t m_nDefaultFireMode; // 0x168
	TG_EQUIP_POINT m_EquipPoint; // 0x16c
};

struct ATgWeaponMeshActor_OwlInhand : ATgWeaponMeshActor {
	ObjectProperty m_CachedOwl; // 0x450
};

struct UUIScene_UIAccessories : UUIScene {
	UIACCESSORIES_STATE m_eState; // 0x1cc
	UIChampionSkinsButtonAction m_eButtonAction; // 0x1cd
	ObjectProperty m_pActiveItem; // 0x1d0
	ObjectProperty m_pItemPreview; // 0x1d8
	ObjectProperty m_pItemNotOwnedToggle; // 0x1e0
	ObjectProperty m_pGoToBattlePassButton; // 0x1e8
	ObjectProperty m_pGoToChestButton; // 0x1f0
	ObjectProperty m_pGoToEventButton; // 0x1f8
	ObjectProperty m_pExclusiveBanner; // 0x200
	ObjectProperty m_pEquipButton; // 0x208
	ObjectProperty m_pPurchase; // 0x210
	ObjectProperty m_pItemList; // 0x218
	ObjectProperty m_pTiledItemList; // 0x220
	ObjectProperty m_pRotator; // 0x228
};

struct ATgDevice_VanguardShield : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	DelegateProperty __InterruptFiringDelegate__Delegate; // 0xa0c
};

struct USplineAudioComponent : UAudioComponent {
	float ListenerScopeRadius; // 0x2cc
	int32_t ClosestPointOnSplineIndex; // 0x2d0
	TArray<FInterpPointOnSpline> Points; // 0x2d4
};

struct ASoundComponentPool : AActor {
	TArray<ComponentProperty> PoolSounds; // 0x280
	TArray<ComponentProperty> ActiveSounds; // 0x290
	int32_t StartingNumComponents; // 0x2a0
};

struct UParticleSystem : UObject {
	EParticleSystemUpdateMode SystemUpdateMode; // 0x60
	ParticleSystemLODMethod LODMethod; // 0x61
	EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod; // 0x62
	float UpdateTime_FPS; // 0x64
	float UpdateTime_Delta; // 0x68
	float WarmupTime; // 0x6c
	float WarmupTickRate; // 0x70
	int32_t TranslucencySortPriority; // 0x74
	TArray<ObjectProperty> Emitters; // 0x78
	ComponentProperty PreviewComponent; // 0x88
	char bLit : 1; // 0x90
	char bOrientZAxisTowardCamera : 1; // 0x90
	char bRegenerateLODDuplicate : 1; // 0x90
	char bUseFixedRelativeBoundingBox : 1; // 0x90
	char m_bDeactivateOnInactive : 1; // 0x90
	char m_bDeactivateOnInactiveIfEmitterPool : 1; // 0x90
	char m_bHasDisplayMasks : 1; // 0x90
	char bShouldResetPeakCounts : 1; // 0x90
	char bHasPhysics : 0; // 0x90
	char bUseRealtimeThumbnail : 0; // 0x90
	char ThumbnailImageOutOfDate : 0; // 0x90
	char bSkipSpawnCountCheck : 0; // 0x90
	char bUseDelayRange : 0; // 0x90
	ObjectProperty CurveEdSetup; // 0x94
	float LODDistanceCheckTime; // 0x9c
	TArray<float> LODDistances; // 0xa0
	TArray<FParticleSystemLOD> LODSettings; // 0xb0
	FBox FixedRelativeBoundingBox; // 0xc0
	float SecondsBeforeInactive; // 0xdc
	float Delay; // 0xe0
	float DelayLow; // 0xe4
	FVector MacroUVPosition; // 0xe8
	float MacroUVRadius; // 0xf4
	FBox CustomOcclusionBounds; // 0xf8
	TArray<FLODSoloTrack> SoloTracking; // 0x114
};

struct UTgScreenCapturePostEffect : UMaterialEffect {
	ObjectProperty ScreenCapture; // 0x90
	char bIsScreenCaptureReady : 1; // 0x98
};

struct ATgDevice_TiberiusLeap : ATgDevice_Leap {
	ObjectProperty m_CachedTiberius; // 0xa08
};

struct UTgInvListener_OpportunityInChaos : UTgInvListener {
	float m_fStartFireTime; // 0xc4
};

struct ATgHelpAlertVolume : AVolume {
	int32_t TaskForceNumber; // 0x2bc
	TArray<int32_t> GameTipIdList; // 0x2c0
};

struct UPBRuleNodeAlternate : UPBRuleNodeBase {
	EProcBuildingAxis RepeatAxis; // 0x70
	float ASize; // 0x74
	float BMaxSize; // 0x78
	char bInvertPatternOrder : 1; // 0x7c
	char bEqualSizeAB : 1; // 0x7c
};

struct UTgAIBehaviorAction_PlayVGS : UTgAIBehaviorAction {
	int32_t VoicePackId; // 0x94
	int32_t VgsId; // 0x98
};

struct ATgDevice_Failsafe : ATgDevice {
	ObjectProperty m_RocketBootsDevice; // 0xa04
};

struct UUIDataProvider_OnlineFriendMessages : UUIDataProvider_OnlinePlayerDataBase {
	TArray<FOnlineFriendMessage> Messages; // 0x74
	FString SendingPlayerNameCol; // 0x84
	FString bIsFriendInviteCol; // 0x94
	FString bWasAcceptedCol; // 0xa4
	FString bWasDeniedCol; // 0xb4
	FString MessageCol; // 0xc4
	FString LastInviteFrom; // 0xd4
};

struct UAnimNodeScaleRateBySpeed : UAnimNodeScalePlayRate {
	float BaseSpeed; // 0x118
	float MinScaleValue; // 0x11c
};

struct USeqAct_DivideFloat : USeqAct_SetSequenceVariable {
	float ValueA; // 0x108
	float ValueB; // 0x10c
	float FloatResult; // 0x110
	int32_t IntResult; // 0x114
};

struct UUIComponent_LegendaryCardIcon : UUIComponent_Display {
	ObjectProperty m_mcIcon; // 0x124
};

struct UUIComponent_MatchLobbyTeamPlayer : UUIComponent_Display {
	ObjectProperty m_mcGlow; // 0x124
	ObjectProperty m_mcClassName; // 0x12c
	ObjectProperty m_mcClassIcon; // 0x134
	ObjectProperty m_mcEquippableTitle; // 0x13c
	ObjectProperty m_mcSelect; // 0x144
	ObjectProperty m_mcLocked; // 0x14c
	ObjectProperty m_mcArrows; // 0x154
	ObjectProperty m_pHighlightSelect; // 0x15c
	ObjectProperty m_pChampion; // 0x164
	ObjectProperty m_pChampionAnim; // 0x16c
	ObjectProperty m_mcSpeakingIcon; // 0x174
	ObjectProperty m_pTradeButton; // 0x17c
	ObjectProperty m_pMuteButton; // 0x184
	ObjectProperty m_pTradeAction; // 0x18c
	ObjectProperty m_pMuteAction; // 0x194
	ObjectProperty m_pUnmuteAction; // 0x19c
	ObjectProperty m_pViewProfileAction; // 0x1a4
	ObjectProperty m_pName; // 0x1ac
	ObjectProperty m_pCrossPlayIcon; // 0x1b4
	ObjectProperty m_mcTeamBooster; // 0x1bc
	ObjectProperty m_mcSkinBooster; // 0x1c4
	int32_t m_nLockInCBHandle; // 0x1cc
	int32_t m_nViewProfileCBHandle; // 0x1d0
	int32_t m_nCharSelectedCBHandle; // 0x1d4
};

struct UUIHudTeam : UTgGfxScene {
	char m_bShowPlayers : 1; // 0x1ec
	FString m_sSpectatingText; // 0x1f0
	ObjectProperty m_mcSpectating; // 0x200
	ObjectProperty m_mcSpectatingTF; // 0x208
	ObjectProperty m_mcPlayers; // 0x210
	FTEAMPLAYER_INFO m_mcPlayerRed[0x5]; // 0x218
	FTEAMPLAYER_INFO m_mcPlayerBlue[0x5]; // 0x5d8
	ObjectProperty m_mcTeamBlueName; // 0x998
	ObjectProperty m_mcTeamBlueScore; // 0x9a0
	ObjectProperty m_mcTeamRedName; // 0x9a8
	ObjectProperty m_mcTeamRedScore; // 0x9b0
	ObjectProperty m_mcTeamBlueTopBG; // 0x9b8
	ObjectProperty m_mcTeamRedTopBG; // 0x9c0
	ObjectProperty m_mcPlayersSide; // 0x9c8
	ObjectProperty m_mcPlayersSideBlueBG; // 0x9d0
	ObjectProperty m_mcPlayersSideRedBG; // 0x9d8
	FTEAMPLAYER_INFO_EXTENDED m_mcPlayerSideRed[0x5]; // 0x9e0
	FTEAMPLAYER_INFO_EXTENDED m_mcPlayerSideBlue[0x5]; // 0x169c
	ObjectProperty m_mcStats; // 0x2358
	ObjectProperty m_mcStatsTitle; // 0x2360
	FTEAMSTAT_INFO m_mcStatsEntry[0xa]; // 0x2368
	ObjectProperty m_mcRespawn; // 0x2660
	FTEAMPLAYER_INFO m_mcRespawnRed[0x5]; // 0x2668
	FTEAMPLAYER_INFO m_mcRespawnBlue[0x5]; // 0x2a28
	int32_t m_nSpectatorMode; // 0x2de8
	int32_t m_nStatsMode; // 0x2dec
	float m_fStatsUpdateTimer; // 0x2df0
};

struct ATgSkeletalMeshActor_Leash : ATgSkeletalMeshActorSpawnable {
	ComponentProperty m_StartMesh; // 0x32c
	FName m_StartBoneName; // 0x334
	ComponentProperty m_EndMesh; // 0x33c
	FName m_EndBoneName; // 0x344
	ObjectProperty m_StartControl; // 0x34c
	ObjectProperty m_EndControl; // 0x354
};

struct UUIComponent_CustomMatch : UUIComponent_Display {
	ObjectProperty m_mcLock; // 0x124
	ObjectProperty m_mcName; // 0x12c
	ObjectProperty m_mcMode; // 0x134
	ObjectProperty m_mcMap; // 0x13c
	ObjectProperty m_mcDraft; // 0x144
	ObjectProperty m_mcOwner; // 0x14c
	ObjectProperty m_mcPlayers; // 0x154
	ObjectProperty m_pJoinButton; // 0x15c
};

struct UInput : UInteraction {
	TArray<FKeyBind> Bindings; // 0xb0
	TArray<FKeyBind> PressedKeys; // 0xc0
	int32_t CurrentControllerId; // 0xd0
	EInputEvent CurrentEvent; // 0xd4
	float CurrentDelta; // 0xd8
	float CurrentDeltaTime; // 0xdc
	TMap<None, None> NameToPtr; // 0xe0
	TArray<FPointer> AxisArray; // 0x128
	TArray<ObjectProperty> CachedInputEvents; // 0x138
	TArray<ObjectProperty> CachedAnalogInputEvents; // 0x148
	TArray<ObjectProperty> CachedTouchInputEvents; // 0x158
	TArray<FTouchTracker> CurrentTouches; // 0x168
};

struct UHavokNavMeshGrid : UObject {
	FMatrix WorldToScreen; // 0x60
	FMatrix ScreenToWorld; // 0xa0
	float TexelDistance; // 0xe0
	int32_t GridSize; // 0xe4
	FUntypedBulkData_Mirror SerializedGridData; // 0xe8
	TArray<char> MemoryGridData; // 0x128
};

struct ATgLobbyHUD : ATgClientHUD {
	char m_bCurrentlyQueuedForInitialTutorial : 1; // 0x684
	char m_bInMultiQueueNoobRedirect : 1; // 0x684
	char m_bJoiningTraining : 1; // 0x684
	char m_bFullScreenSplashDataParsed : 1; // 0x684
	char m_bAlwaysShowFullscreenSplash : 1; // 0x684
	char m_bShouldResetCamera : 1; // 0x684
	int32_t m_nQueue; // 0x688
	int32_t m_nQueueState; // 0x68c
	int32_t m_nLobbyState; // 0x690
	int32_t m_nPlayerState; // 0x694
	ObjectProperty c_CurrentCamera; // 0x698
	TArray<FString> m_sAdditionalNeededScenes; // 0x6a0
	Fdword m_dwSavedFullScreenSplashJsonVersion; // 0x6b0
	ObjectProperty m_FrontLinePedestalMeshActor; // 0x6b4
	ObjectProperty m_FlankPedestalMeshActor; // 0x6bc
	ObjectProperty m_SupportPedestalMeshActor; // 0x6c4
	ObjectProperty m_DamagerPedestalMeshActor; // 0x6cc
	ObjectProperty m_TeamPedestalMeshActors[0x5]; // 0x6d4
	int32_t m_nTestDailyDealItemIds[0x3]; // 0x6fc
	TArray<int32_t> m_CTAItemIds; // 0x708
	TArray<int32_t> m_TransientItemsAcquired; // 0x718
	FString m_PlayerCTAName; // 0x728
	TArray<FMapDetails> m_MapDetails; // 0x738
	TArray<FCameraSprayPreviewOffset> m_SprayPreviewOffsets; // 0x748
	ELobbyCameraTag c_ePrevCameraTag; // 0x758
};

struct APComRepInfo_Game : AGameReplicationInfo {
	ObjectProperty m_MusicThemePlayer; // 0x2e8
	UPComMusicThemePlayer* m_MusicThemePlayerClass; // 0x2f0
	FString m_MusicThemePlayerClassName; // 0x2f8
};

struct UUIComponent_NotificationTab : UUIComponent_Display {
	ObjectProperty m_pCTA; // 0x124
};

struct UUIComponent_PurchasableQuestChain : UUIComponent_Display {
	ObjectProperty m_pBundleButton; // 0x124
	ObjectProperty m_pFrameButton; // 0x12c
	ObjectProperty m_pQuestEntry; // 0x134
};

struct UTgGamePhase_ApplyGlobalEffect : UTgGamePhase {
	int32_t m_nFireModeID; // 0xb8
	ObjectProperty m_FireMode; // 0xbc
};

struct UUIComponent_ItemHint : UUIComponent_Display {
	ObjectProperty m_mcTF; // 0x124
};

struct UUIComponent_List : UUIComponent_Display {
	FSmoothScrollingAxis m_ScrollAxis[0x2]; // 0x124
	int32_t m_nSelectedDataIndex; // 0x164
	TArray<FUICListEntry> m_ListItems; // 0x168
	FUICListEntry m_PrefixBufferItem; // 0x178
	FUICListEntry m_SuffixBufferItem; // 0x1c0
	TArray<ObjectProperty> m_ListData; // 0x208
	ObjectProperty m_grList; // 0x218
	ObjectProperty m_pScrollbarV; // 0x220
	ObjectProperty m_pScrollbarH; // 0x228
	Fdword m_dwItemSize; // 0x230
	Fdword m_dwDataSize; // 0x234
	char m_bExtendVertically : 1; // 0x238
	char m_bAutoFillNavGroup : 1; // 0x238
	char m_bFocusSelectedItem : 1; // 0x238
	char m_bAutoSelectQueued : 1; // 0x238
	char m_bInvertXAxis : 1; // 0x238
	char m_bInvertYAxis : 1; // 0x238
	char m_bIsDynamicList : 1; // 0x238
	char m_bHideElementsIfDisabled : 1; // 0x238
	char m_bNavByData : 0; // 0x238
	char m_bDisableHighlightDuringScroll : 0; // 0x238
	int32_t m_nScrollX; // 0x23c
	int32_t m_nScrollY; // 0x240
	int32_t m_nItemOffsetX; // 0x244
	int32_t m_nItemOffsetY; // 0x248
	int32_t m_nMarginX; // 0x24c
	int32_t m_nMarginY; // 0x250
	float m_fAutoSelectDelay; // 0x254
	float m_fAutoSelectTimer; // 0x258
	float m_fDynamicListSpacing; // 0x25c
};

struct UTgSkeletalMeshComponent : USkeletalMeshComponent {
	FPointer VfTable_ITgMeshCompInterface_MaterialStack; // 0x7b4
	char c_bFxApplied : 1; // 0x7bc
	char c_bAttachFxToOwner : 1; // 0x7bc
	char c_bIsFemale : 1; // 0x7bc
	TArray<ObjectProperty> c_FxList; // 0x7c0
	TArray<ObjectProperty> c_DatabaseFxList; // 0x7d0
	int32_t m_nAssemblyId; // 0x7e0
	TArray<ComponentProperty> m_ChildMeshes; // 0x7e4
	FVector FPCTranslation; // 0x7f4
	FRotator FPCRotation; // 0x800
	FVector FPCScale; // 0x80c
	int32_t c_AudioGroupId; // 0x818
	int32_t c_nForceUpdateAttachmentsInTick; // 0x81c
	ObjectProperty m_MaterialStackManager; // 0x820
	TArray<FAnimNotifyParticleCacheEntry> AnimNotifyPlayParticleEffectEntries; // 0x828
	TArray<FMeshAccessoryStorage> m_MeshAccessoryStorage; // 0x838
	TArray<FMICScalarParamMetaDataStorage> m_MICScalarParamExtendedStorage; // 0x848
	TArray<FMICStateParamInterpData> m_MICStateParamInterpData; // 0x858
};

struct UMaterialExpressionFontSample : UMaterialExpression {
	ObjectProperty Font; // 0xb0
	int32_t FontTexturePage; // 0xb8
};

struct USeqAct_StreamInTextures : USeqAct_Latent {
	char bLocationBased : 1; // 0x120
	char bStreamingActive : 1; // 0x120
	char bHasTriggeredAllLoaded : 1; // 0x120
	float Seconds; // 0x124
	float StreamingDistanceMultiplier; // 0x128
	int32_t NumWantingResourcesID; // 0x12c
	float StopTimestamp; // 0x130
	TArray<ObjectProperty> LocationActors; // 0x134
	TArray<ObjectProperty> ForceMaterials; // 0x144
	FTextureGroupContainer CinematicTextureGroups; // 0x154
};

struct USeqVar_Named : USequenceVariable {
	USequenceVariable* ExpectedType; // 0xa0
	FName FindVarName; // 0xa8
	char bStatusIsOk : 1; // 0xb0
};

struct UDynamicLightEnvironmentComponent : ULightEnvironmentComponent {
	FPointer State; // 0xa8
	float InvisibleUpdateTime; // 0xb0
	float MinTimeBetweenFullUpdates; // 0xb4
	float VelocityUpdateTimeScale; // 0xb8
	float ShadowInterpolationSpeed; // 0xbc
	int32_t NumVolumeVisibilitySamples; // 0xc0
	float LightingBoundsScale; // 0xc4
	FLinearColor AmbientShadowColor; // 0xc8
	FVector AmbientShadowSourceDirection; // 0xd8
	FLinearColor AmbientGlow; // 0xe4
	float LightDistance; // 0xf4
	float ShadowDistance; // 0xf8
	char bCastShadows : 1; // 0xfc
	char bCompositeShadowsFromDynamicLights : 1; // 0xfc
	char bForceCompositeAllLights : 1; // 0xfc
	char bAffectedBySmallDynamicLights : 1; // 0xfc
	char bUseBooleanEnvironmentShadowing : 1; // 0xfc
	char bShadowFromEnvironment : 1; // 0xfc
	char bDynamic : 1; // 0xfc
	char bSynthesizeDirectionalLight : 1; // 0xfc
	char bSynthesizeSHLight : 0; // 0xfc
	char bRequiresNonLatentUpdates : 0; // 0xfc
	char bTraceFromClosestBoundsPoint : 0; // 0xfc
	char bIsCharacterLightEnvironment : 0; // 0xfc
	char bOverrideOwnerLightingChannels : 0; // 0xfc
	char bAlwaysInfluencedByDominantDirectionalLight : 0; // 0xfc
	float ModShadowFadeoutTime; // 0x100
	float ModShadowFadeoutExponent; // 0x104
	FLinearColor MaxModulatedShadowColor; // 0x108
	float DominantShadowTransitionStartDistance; // 0x118
	float DominantShadowTransitionEndDistance; // 0x11c
	float MinShadowAngle; // 0x120
	EDynamicLightEnvironmentBoundsMethod BoundsMethod; // 0x124
	FBoxSphereBounds OverriddenBounds; // 0x128
	FLightingChannelContainer OverriddenLightingChannels; // 0x144
	TArray<ComponentProperty> OverriddenLightComponents; // 0x148
};

struct UNavMeshGoal_GenericFilterContainer : UNavMeshPathGoalEvaluator {
	TArray<ObjectProperty> GoalFilters; // 0x7c
	FPointer SuccessfulGoal; // 0x8c
	ObjectProperty MyNavigationHandle; // 0x94
	TArray<FVector> SeedLocations; // 0x9c
};

struct USeqAct_ForceFeedback : USequenceAction {
	ObjectProperty FFWaveform; // 0x108
	UWaveFormBase* PredefinedWaveForm; // 0x110
};

struct UVivoxClosureOnPrivilegeLevelChecked : UVivoxClosure {
	int32_t m_ChannelJoinCount; // 0x70
};

struct ANxGenericForceFieldBox : ANxGenericForceField {
	ComponentProperty RenderComponent; // 0x374
	FVector BoxExtent; // 0x37c
};

struct UTgAnimNotify_SetMICParam : UAnimNotify {
	FName m_nmParamName; // 0x68
	float m_fTargetValue; // 0x70
};

struct ATgAIController_BehaviorGod : ATgAIController_Behavior {
	FPointer VfTable_ITgPaladinsController; // 0x930
	float WaitForSpawnSecs; // 0x938
	int32_t PlayerID; // 0x93c
	char bCanPurchaseItems : 1; // 0x940
	char bCanPurchaseSkills : 1; // 0x940
	char bRespawnAtOriginalLocation : 1; // 0x940
	float CurrentGoldRemainder; // 0x944
	int32_t CurrentGold; // 0x948
	float CurrentXPRemainder; // 0x94c
	int32_t CurrentXP; // 0x950
	FVector GeometricMean; // 0x954
};

struct UTgInventoryObject_Listen_NearObjective : UTgInvListener {
	char m_bIsActive : 1; // 0xc4
	ObjectProperty m_CachedCharacterPawn; // 0xc8
};

struct ATgDevice_Stealth : ATgDevice {
	char m_bIsInCombat : 1; // 0xa04
	char m_bCanFireInCombat : 1; // 0xa04
};

struct UTgDeviceForm_CombatSlide : UTgDeviceForm {
	float m_fTransitionTime; // 0x28c
};

struct ATgPawn_Raum : ATgPawn_Character {
	ObjectProperty m_CachedMinigun; // 0x3160
	ObjectProperty m_CachedRev; // 0x3168
	ObjectProperty m_CachedSuck; // 0x3170
	ObjectProperty m_CachedUlt; // 0x3178
	ObjectProperty m_CachedStomp; // 0x3180
	ObjectProperty m_CachedShardTalent; // 0x3188
	ObjectProperty c_MinigunForm; // 0x3190
	ObjectProperty c_RevUpForm; // 0x3198
	float m_fShardTimeToLive; // 0x31a0
	float m_fShardSuckSpeed; // 0x31a4
	float m_fShardSuckAcceleration; // 0x31a8
	float m_fShardMinSuckDistance; // 0x31ac
	float m_fShardSuckDistanceIncreasePerSec; // 0x31b0
	float m_fInitialShardSpeed; // 0x31b4
	float m_fInitialShardPitch; // 0x31b8
	float m_fSpinPercentBonusWhileFiring; // 0x31bc
	float r_fLastRevUpRateBefore; // 0x31c0
	float r_fLastRevUpRateAfter; // 0x31c4
	char s_nNextAvailableId; // 0x31c8
	ERaumFiringState r_eFiringState; // 0x31c9
	ERaumFiringState c_eFiringStateAckd; // 0x31ca
	char r_nShardNonces[0x14]; // 0x31cb
	char r_nShardIds[0x14]; // 0x31df
	char r_bShardFlags[0x14]; // 0x31f3
	TArray<FName> m_nmFiringStateDisplayGroups; // 0x3208
	float m_fMinigunSpinningThreshold; // 0x3218
	float m_fMinigunFiringHighThreshold; // 0x321c
	FVector r_vShardLocations[0x14]; // 0x3220
	int32_t r_nShardVelocityYaw[0x14]; // 0x3310
	int32_t s_nCurrentShardPoints; // 0x3360
	float r_fSpinUpPct; // 0x3364
	char r_bIsLMBHeld : 1; // 0x3368
	char r_bIsRMBHeld : 1; // 0x3368
	int32_t m_nActiveShards; // 0x336c
	int32_t m_nPointsPerShot[0x31]; // 0x3370
	int32_t m_nPointsPerShard; // 0x3434
	int32_t m_nMaxCachedShards; // 0x3438
	int32_t r_nCachedShards; // 0x343c
	int32_t r_nMaxShardStacks; // 0x3440
	int32_t r_nCurrentShardStacks; // 0x3444
	FRaumShard m_LocalShards[0x14]; // 0x3448
};

struct UDownloadableContentManager : UObject {
	FPointer VfTable_FTickableObject; // 0x60
	TArray<FPointer> DLCConfigCacheChanges; // 0x68
	TArray<FString> InstalledDLC; // 0x78
	FMap_Mirror NonPackageFilePathMap; // 0x88
	TArray<UObject*> ClassesToReload; // 0xd0
	TArray<ObjectProperty> ObjectsToReload; // 0xe0
	TArray<FString> QueuedFullyLoadPackageInis; // 0xf0
	ObjectProperty GameEngine; // 0x100
	char bWantsToRefreshDLC : 1; // 0x108
	char bGameDidAuthorizedDLCRefresh : 1; // 0x108
	DelegateProperty __OnRefreshComplete__Delegate; // 0x10c
};

struct USeqAct_ModifyHealth : USequenceAction {
	UDamageType* DamageType; // 0x108
	float Momentum; // 0x110
	float Amount; // 0x114
	float Radius; // 0x118
	char bHeal : 1; // 0x11c
	char bRadial : 1; // 0x11c
	char bFalloff : 1; // 0x11c
	ObjectProperty Instigator; // 0x120
};

struct UTgAnimBlendByFallTransition : UTgAnimBlendByFall {
	float m_fPreDownVelocity; // 0x19c
};

struct UTgEffectModifyProperty_Inhand : UTgEffectModifyProperty {
	TArray<ObjectProperty> m_LastRetrievedOverrides; // 0xbc
};

struct ATgChaosCapturePoint : ATgObjective {
	int32_t m_nDisplayNameId; // 0x2ac
	int32_t r_nUniqueCapturePointId; // 0x2b0
	int32_t m_nLaneNumber; // 0x2b4
	int32_t m_nTaskForce; // 0x2b8
	TArray<ObjectProperty> m_Taskforce1Factories; // 0x2bc
	TArray<ObjectProperty> m_Taskforce2Factories; // 0x2cc
	ObjectProperty m_GuardianFactory; // 0x2dc
	ObjectProperty m_Taskforce1PathStart; // 0x2e4
	ObjectProperty m_Taskforce2PathStart; // 0x2ec
	TArray<ObjectProperty> m_PlayerBaseSpawnPoints; // 0x2f4
	TArray<ObjectProperty> m_PlayerRespawnPoints; // 0x304
	ObjectProperty m_CustomAnimNode; // 0x314
	int32_t c_MICStatus; // 0x31c
	char c_bConfusedRendering : 1; // 0x320
	char m_bPrimaryCapturePoint : 1; // 0x320
	char r_bFogActive : 1; // 0x320
	char m_bForceSurvival : 1; // 0x320
	char m_bAnnouncedDeathFog : 1; // 0x320
	float m_fLastEnemyCapturingPointMessageTime; // 0x324
	float m_fMinEnemyCapturingPointMessageTime; // 0x328
	ObjectProperty m_HelpTip; // 0x32c
	float r_fCapturedPct; // 0x334
	int32_t c_DominationOuterMIC; // 0x338
	int32_t c_DominationInnerMIC; // 0x33c
	TArray<ObjectProperty> CapturePointMeshActors; // 0x340
	TArray<ObjectProperty> m_Volumes; // 0x350
	int32_t m_nCapturePriority; // 0x360
	FVector m_vIndicatorOffset; // 0x364
	ATgSurvivalFogVolumeDensityInfo* m_TgSurvivalFogVolumeDensityInfoClass; // 0x370
	ObjectProperty m_ConvergeFog; // 0x378
	int32_t r_nFogAboutToBeActive; // 0x380
	float m_fFogFadeInTotalTime; // 0x384
	float m_fTF1TouchedPointTimer; // 0x388
	float m_fTF2TouchedPointTimer; // 0x38c
	TArray<ObjectProperty> m_TouchingChampions; // 0x390
};

struct AWeapon : AInventory {
	ObjectProperty AIController; // 0x2f4
};

struct APawn : AActor {
	FPointer VfTable_IInterface_Speaker; // 0x280
	float MaxStepHeight; // 0x288
	float MaxJumpHeight; // 0x28c
	float WalkableFloorZ; // 0x290
	float LedgeCheckThreshold; // 0x294
	FVector PartialLedgeMoveDir; // 0x298
	ObjectProperty Controller; // 0x2a4
	ObjectProperty NextPawn; // 0x2ac
	float NetRelevancyTime; // 0x2b4
	ObjectProperty LastRealViewer; // 0x2b8
	ObjectProperty LastViewer; // 0x2c0
	char bScriptTickSpecial : 1; // 0x2c8
	char bUpAndOut : 1; // 0x2c8
	char bIsWalking : 1; // 0x2c8
	char bWantsToCrouch : 1; // 0x2c8
	char bIsCrouched : 1; // 0x2c8
	char bTryToUncrouch : 1; // 0x2c8
	char bCanCrouch : 1; // 0x2c8
	char bCrawler : 1; // 0x2c8
	char bReducedSpeed : 0; // 0x2c8
	char bJumpCapable : 0; // 0x2c8
	char bCanJump : 0; // 0x2c8
	char bCanWalk : 0; // 0x2c8
	char bCanSwim : 0; // 0x2c8
	char bCanFly : 0; // 0x2c8
	char bCanClimbLadders : 0; // 0x2c8
	char bCanStrafe : 0; // 0x2c8
	char bAvoidLedges : 0; // 0x2c8
	char bStopAtLedges : 0; // 0x2c8
	char bAllowLedgeOverhang : 0; // 0x2c8
	char bPartiallyOverLedge : 0; // 0x2c8
	char bSimulateGravity : 0; // 0x2c8
	char bIgnoreForces : 0; // 0x2c8
	char bCanWalkOffLedges : 0; // 0x2c8
	char bCanBeBaseForPawns : 0; // 0x2c8
	char bSimGravityDisabled : 0; // 0x2c8
	char bDirectHitWall : 0; // 0x2c8
	char bPushesRigidBodies : 0; // 0x2c8
	char bForceFloorCheck : 0; // 0x2c8
	char bForceKeepAnchor : 0; // 0x2c8
	char bCanMantle : 0; // 0x2c8
	char bCanClimbUp : 0; // 0x2c8
	char bCanClimbCeilings : 0; // 0x2c8
	char bCanSwatTurn : 1; // 0x2cc
	char bCanLeap : 1; // 0x2cc
	char bCanCoverSlip : 1; // 0x2cc
	char bDisplayPathErrors : 1; // 0x2cc
	char bCanPickupInventory : 1; // 0x2cc
	char bAmbientCreature : 1; // 0x2cc
	char bLOSHearing : 1; // 0x2cc
	char bMuffledHearing : 1; // 0x2cc
	char bDontPossess : 0; // 0x2cc
	char bRollToDesired : 0; // 0x2cc
	char bStationary : 0; // 0x2cc
	char bCachedRelevant : 0; // 0x2cc
	char bNoWeaponFiring : 0; // 0x2cc
	char bModifyReachSpecCost : 0; // 0x2cc
	char bModifyNavPointDest : 0; // 0x2cc
	char bPathfindsAsVehicle : 0; // 0x2cc
	char bPrevBypassSimulatedClientPhysics : 0; // 0x2cc
	char bRunPhysicsWithNoController : 0; // 0x2cc
	char bForceMaxAccel : 0; // 0x2cc
	char bLimitFallAccel : 0; // 0x2cc
	char bReplicateHealthToAll : 0; // 0x2cc
	char bForceRMVelocity : 0; // 0x2cc
	char bForceRegularVelocity : 0; // 0x2cc
	char bPlayedDeath : 0; // 0x2cc
	char bDesiredRotationSet : 0; // 0x2cc
	char bLockDesiredRotation : 0; // 0x2cc
	char bUnlockWhenReached : 0; // 0x2cc
	char m_bPhysVolumesOnlyAffectDownwardVelocities : 0; // 0x2cc
	char m_bIsOnNonBaseableSurface : 0; // 0x2cc
	char bNeedsBaseTickedFirst : 0; // 0x2cc
	char bUsedByMatinee : 0; // 0x2cc
	char bRootMotionFromInterpCurve : 0; // 0x2cc
	char bDebugShowCameraLocation : 1; // 0x2d0
	char bFastAttachedMove : 1; // 0x2d0
	EPhysics WalkingPhysics; // 0x2d4
	EPathSearchType PathSearchType; // 0x2d5
	char RemoteViewPitch; // 0x2d6
	char FlashCount; // 0x2d7
	char FiringMode; // 0x2d8
	EPhysics c_LastReceivedPhysics; // 0x2d9
	int32_t WalkingPhysicsMoveFlags; // 0x2dc
	float UncrouchTime; // 0x2e0
	float CrouchHeight; // 0x2e4
	float CrouchRadius; // 0x2e8
	int32_t FullHeight; // 0x2ec
	float NonPreferredVehiclePathMultiplier; // 0x2f0
	ObjectProperty PathConstraintList; // 0x2f4
	ObjectProperty PathGoalList; // 0x2fc
	float DesiredSpeed; // 0x304
	float MaxDesiredSpeed; // 0x308
	float HearingThreshold; // 0x30c
	float Alertness; // 0x310
	float SightRadius; // 0x314
	float PeripheralVision; // 0x318
	float AvgPhysicsTime; // 0x31c
	float Mass; // 0x320
	float Buoyancy; // 0x324
	float MeleeRange; // 0x328
	ObjectProperty Anchor; // 0x32c
	int32_t AnchorItem; // 0x334
	ObjectProperty LastAnchor; // 0x338
	float FindAnchorFailedTime; // 0x340
	float LastValidAnchorTime; // 0x344
	float DestinationOffset; // 0x348
	float NextPathRadius; // 0x34c
	FVector SerpentineDir; // 0x350
	float SerpentineDist; // 0x35c
	float SerpentineTime; // 0x360
	float SpawnTime; // 0x364
	int32_t MaxPitchLimit; // 0x368
	float GroundSpeed; // 0x36c
	float WaterSpeed; // 0x370
	float AirSpeed; // 0x374
	float LadderSpeed; // 0x378
	float AccelRate; // 0x37c
	float JumpZ; // 0x380
	float OutofWaterZ; // 0x384
	float MaxOutOfWaterStepHeight; // 0x388
	float AirControl; // 0x38c
	float WalkingPct; // 0x390
	float MovementSpeedModifier; // 0x394
	float CrouchedPct; // 0x398
	float MaxFallSpeed; // 0x39c
	float AIMaxFallSpeedFactor; // 0x3a0
	float BaseEyeHeight; // 0x3a4
	float EyeHeight; // 0x3a8
	FVector Floor; // 0x3ac
	float SplashTime; // 0x3b8
	ObjectProperty HeadVolume; // 0x3bc
	int32_t Health; // 0x3c4
	int32_t HealthMax; // 0x3c8
	float BreathTime; // 0x3cc
	float UnderWaterTime; // 0x3d0
	float LastPainTime; // 0x3d4
	float KismetDeathDelayTime; // 0x3d8
	FVector RMVelocity; // 0x3dc
	FVector noise1spot; // 0x3e8
	float noise1time; // 0x3f4
	ObjectProperty noise1other; // 0x3f8
	float noise1loudness; // 0x400
	FVector noise2spot; // 0x404
	float noise2time; // 0x410
	ObjectProperty noise2other; // 0x414
	float noise2loudness; // 0x41c
	float SoundDampening; // 0x420
	float DamageScaling; // 0x424
	FString MenuName; // 0x428
	AAIController* ControllerClass; // 0x438
	ObjectProperty PlayerReplicationInfo; // 0x440
	ObjectProperty OnLadder; // 0x448
	FName LandMovementState; // 0x450
	FName WaterMovementState; // 0x458
	ObjectProperty LastStartSpot; // 0x460
	float LastStartTime; // 0x468
	FVector TakeHitLocation; // 0x46c
	UDamageType* HitDamageType; // 0x478
	FVector TearOffMomentum; // 0x480
	ComponentProperty Mesh; // 0x48c
	ComponentProperty CylinderComponent; // 0x494
	float RBPushRadius; // 0x49c
	float RBPushStrength; // 0x4a0
	ObjectProperty DrivenVehicle; // 0x4a4
	float AlwaysRelevantDistanceSquared; // 0x4ac
	float VehicleCheckRadius; // 0x4b0
	ObjectProperty LastHitBy; // 0x4b4
	float ViewPitchMin; // 0x4bc
	float ViewPitchMax; // 0x4c0
	int32_t AllowedYawError; // 0x4c4
	FRotator DesiredRotation; // 0x4c8
	AInventoryManager* InventoryManagerClass; // 0x4d4
	ObjectProperty InvManager; // 0x4dc
	ObjectProperty Weapon; // 0x4e4
	FVector FlashLocation; // 0x4ec
	FVector LastFiringFlashLocation; // 0x4f8
	int32_t ShotCount; // 0x504
	ComponentProperty PreRagdollCollisionComponent; // 0x508
	ObjectProperty PhysicsPushBody; // 0x510
	int32_t FailedLandingCount; // 0x518
	TArray<ObjectProperty> SlotNodes; // 0x51c
	TArray<ObjectProperty> InterpGroupList; // 0x52c
	ComponentProperty FacialAudioComp; // 0x53c
	ObjectProperty MIC_PawnMat; // 0x544
	ObjectProperty MIC_PawnHair; // 0x54c
	TArray<FScalarParameterInterpStruct> ScalarParameterInterpArray; // 0x554
	FRootMotionCurve RootMotionInterpCurve; // 0x564
	float RootMotionInterpRate; // 0x584
	float RootMotionInterpCurrentTime; // 0x588
	FVector RootMotionInterpCurveLastValue; // 0x58c
	float m_TerrainWalkableFloorZ; // 0x598
	FVector c_vLastReceivedVelocity; // 0x59c
};

struct UCoverSlipReachSpec : UForcedReachSpec {
	char SpecDirection; // 0xc8
};

struct UDistributionFloatConstant : UDistributionFloat {
	float Constant; // 0x7c
};

struct ATgDevice_NinjaInhand : ATgDevice {
	float m_fAmmoRefundChance; // 0xa04
};

struct ATgDevice_ViktorInhand : ATgDevice {
	char m_bIsADS : 1; // 0xa04
	FVector m_vADSProjectileSpawnOffset; // 0xa08
	float m_fADSRecoilMultiplier; // 0xa14
	ObjectProperty m_CachedPawnOwner; // 0xa18
};

struct USeqEvent_PlayerSpawned : USequenceEvent {
	ObjectProperty SpawnPoint; // 0x128
};

struct ATgPawn_Shadow : ATgPawn_Character {
	ObjectProperty m_pTeleportTarget; // 0x3160
	float fInputForward; // 0x3168
	float fInputStrafe; // 0x316c
	ObjectProperty m_StickyBombProps[0x3]; // 0x3170
	int32_t m_nNextStickyBombIndex; // 0x3188
	int32_t m_BeamFXId; // 0x318c
};

struct UGameStateObject : UGameplayEventsHandler {
	FArray_Mirror TeamStates; // 0x88
	FArray_Mirror PlayerStates; // 0x98
	GameSessionType SessionType; // 0xa8
	char bIsMatchStarted : 1; // 0xac
	char bIsRoundStarted : 1; // 0xac
	int32_t RoundNumber; // 0xb0
	int32_t MaxRoundNumber; // 0xb4
};

struct UTgAnimNodeBlendNPC : UTgAnimNodeBlendList {
	float m_NoCustomerPresentBlendInTime; // 0x168
	float m_CustomerPresentBlendInTime; // 0x16c
	float m_GreetingBlendInTime; // 0x170
	float m_NoSaleBlendInTime; // 0x174
	float m_CallOutBlendInTime; // 0x178
	float m_SaleBlendInTime; // 0x17c
	float m_TransCustomerPresentToNotPresentBlendInTime; // 0x180
	TArray<FName> m_UninterruptibleAnims; // 0x184
	NPCAnimationStates m_QueuedChild; // 0x194
	float m_QueuedBlendTime; // 0x198
	FName m_CurrentAnimPlaying; // 0x19c
};

struct AGameInfo : AInfo {
	char bRestartLevel : 1; // 0x280
	char bPauseable : 1; // 0x280
	char bTeamGame : 1; // 0x280
	char bGameEnded : 1; // 0x280
	char bOverTime : 1; // 0x280
	char bDelayedStart : 1; // 0x280
	char bWaitingToStartMatch : 1; // 0x280
	char bChangeLevels : 1; // 0x280
	char bAlreadyChanged : 0; // 0x280
	char bAdminCanPause : 0; // 0x280
	char bGameRestarted : 0; // 0x280
	char bLevelChange : 0; // 0x280
	char bKickLiveIdlers : 0; // 0x280
	char bUsingArbitration : 0; // 0x280
	char bHasArbitratedHandshakeBegun : 0; // 0x280
	char bNeedsEndGameHandshake : 0; // 0x280
	char bIsEndGameHandshakeComplete : 0; // 0x280
	char bHasEndGameHandshakeBegun : 0; // 0x280
	char bFixedPlayerStart : 0; // 0x280
	char bDoFearCostFallOff : 0; // 0x280
	char bUseSeamlessTravel : 0; // 0x280
	char bHasNetworkError : 0; // 0x280
	char bRequiresPushToTalk : 0; // 0x280
	char bIsStandbyCheckingEnabled : 0; // 0x280
	char bIsStandbyCheckingOn : 0; // 0x280
	char bHasStandbyCheatTriggered : 0; // 0x280
	FString CauseEventCommand; // 0x284
	FString BugLocString; // 0x294
	FString BugRotString; // 0x2a4
	TArray<ObjectProperty> PendingArbitrationPCs; // 0x2b4
	TArray<ObjectProperty> ArbitrationPCs; // 0x2c4
	float ArbitrationHandshakeTimeout; // 0x2d4
	float GameDifficulty; // 0x2d8
	int32_t GoreLevel; // 0x2dc
	float GameSpeed; // 0x2e0
	APawn* DefaultPawnClass; // 0x2e4
	AHUD* HUDType; // 0x2ec
	AHUD* SecondaryHUDType; // 0x2f4
	int32_t MaxSpectators; // 0x2fc
	int32_t MaxSpectatorsAllowed; // 0x300
	int32_t NumSpectators; // 0x304
	int32_t MaxPlayers; // 0x308
	int32_t MaxPlayersAllowed; // 0x30c
	int32_t NumPlayers; // 0x310
	int32_t NumBots; // 0x314
	int32_t NumTravellingPlayers; // 0x318
	int32_t CurrentID; // 0x31c
	FString DefaultPlayerName; // 0x320
	FString GameName; // 0x330
	float FearCostFallOff; // 0x340
	int32_t GoalScore; // 0x344
	int32_t MaxLives; // 0x348
	int32_t TimeLimit; // 0x34c
	ULocalMessage* DeathMessageClass; // 0x350
	UGameMessage* GameMessageClass; // 0x358
	ObjectProperty BaseMutator; // 0x360
	AAccessControl* AccessControlClass; // 0x368
	ObjectProperty AccessControl; // 0x370
	ABroadcastHandler* BroadcastHandlerClass; // 0x378
	ObjectProperty BroadcastHandler; // 0x380
	AAutoTestManager* AutoTestManagerClass; // 0x388
	ObjectProperty MyAutoTestManager; // 0x390
	APlayerController* PlayerControllerClass; // 0x398
	APlayerReplicationInfo* PlayerReplicationInfoClass; // 0x3a0
	AGameReplicationInfo* GameReplicationInfoClass; // 0x3a8
	ObjectProperty GameReplicationInfo; // 0x3b0
	ObjectProperty PopulationManager; // 0x3b8
	ACrowdPopulationManagerBase* PopulationManagerClass; // 0x3c0
	float MaxIdleTime; // 0x3c8
	float MaxTimeMargin; // 0x3cc
	float TimeMarginSlack; // 0x3d0
	float MinTimeMargin; // 0x3d4
	TArray<ObjectProperty> InactivePRIArray; // 0x3d8
	TArray<DelegateProperty> Pausers; // 0x3e8
	ObjectProperty OnlineSub; // 0x3f8
	TScriptInterface<Class> GameInterface; // 0x400
	UOnlineStatsWrite* OnlineStatsWriteClass; // 0x410
	int32_t LeaderboardId; // 0x418
	int32_t ArbitratedLeaderboardId; // 0x41c
	ObjectProperty CoverReplicatorBase; // 0x420
	UOnlineGameSettings* OnlineGameSettingsClass; // 0x428
	FString ServerOptions; // 0x430
	int32_t AdjustedNetSpeed; // 0x440
	float LastNetSpeedUpdateTime; // 0x444
	int32_t TotalNetBandwidth; // 0x448
	int32_t MinDynamicBandwidth; // 0x44c
	int32_t MaxDynamicBandwidth; // 0x450
	float StandbyRxCheatTime; // 0x454
	float StandbyTxCheatTime; // 0x458
	int32_t BadPingThreshold; // 0x45c
	float PercentMissingForRxStandby; // 0x460
	float PercentMissingForTxStandby; // 0x464
	float PercentForBadPing; // 0x468
	float JoinInProgressStandbyWaitTime; // 0x46c
	ObjectProperty StreamingPauseIcon; // 0x470
	TArray<FGameClassShortName> GameInfoClassAliases; // 0x478
	FString DefaultGameType; // 0x488
	TArray<FGameTypePrefix> DefaultMapPrefixes; // 0x498
	TArray<FGameTypePrefix> CustomMapPrefixes; // 0x4a8
	int32_t AnimTreePoolSize; // 0x4b8
	DelegateProperty __CanUnpause__Delegate; // 0x4bc
};

struct UTgInventoryObject_Listen_Thunderstruck : UTgInventoryObject_Listen_AbilityProcBase {
	TArray<ObjectProperty> m_UniqueTargets; // 0xcc
	char m_bCachedIsArcing : 1; // 0xdc
};

struct UTgInventoryObject_Listen_Scramble : UTgInvListener {
	ObjectProperty m_CachedScrambleDevice; // 0xc4
};

struct UUIComponent_EndTimesEventOverview : UUIComponent_Display {
	ObjectProperty m_grInput; // 0x124
};

struct UDemoRecDriver : UNetDriver {
	FString DemoSpectatorClass; // 0x234
	int32_t MaxRewindPoints; // 0x2ec
	float RewindPointInterval; // 0x2f4
	int32_t NumRecentRewindPoints; // 0x2f8
	int32_t ProtectedRewindPointInterval; // 0x304
	int32_t MaxEventPoints; // 0x318
	float EventPointInterval; // 0x320
	float MinEventBuffer; // 0x324
};

struct UUIComponent_EventDay : UUIComponent_Display {
	ObjectProperty m_mcHeader; // 0x124
	ObjectProperty m_pItemIcon; // 0x12c
	ObjectProperty m_pButton; // 0x134
};

struct UUIComponent_BPPurchaseElement : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcSubtitle; // 0x12c
	ObjectProperty m_mcIncludes; // 0x134
	ObjectProperty m_List; // 0x13c
	ObjectProperty m_mcCrystalIcon; // 0x144
	ObjectProperty m_pBuyNowButton; // 0x14c
};

struct UParticleModuleEventGenerator : UParticleModuleEventBase {
	TArray<FParticleEvent_GenerateInfo> Events; // 0x68
};

struct UAnimNotify_ViewShake : UAnimNotify_Scripted {
	float Duration; // 0x68
	FVector RotAmplitude; // 0x6c
	FVector RotFrequency; // 0x78
	FVector LocAmplitude; // 0x84
	FVector LocFrequency; // 0x90
	float FOVAmplitude; // 0x9c
	float FOVFrequency; // 0xa0
	char bDoControllerVibration : 1; // 0xa4
	char bUseBoneLocation : 1; // 0xa4
	float ShakeRadius; // 0xa8
	FName BoneName; // 0xac
	ObjectProperty ShakeParams; // 0xb4
};

struct ATgDeploy_PoppyBomb : ATgDeployable {
	char r_bDetonated : 1; // 0x46c
	ObjectProperty m_CachedPlayer; // 0x470
	FVector r_HitNormal; // 0x478
	ObjectProperty r_StuckCart; // 0x484
	FRotator r_StuckRotation; // 0x48c
	FVector r_CartOffset; // 0x498
};

struct UUIComponent_WinterEventHome : UUIComponent_Display {
	ObjectProperty m_mcBundlesOwnedTF; // 0x124
	ObjectProperty m_pBundles; // 0x12c
	ObjectProperty m_pBonusProgress; // 0x134
	ObjectProperty m_pBundlePanel; // 0x13c
	ObjectProperty m_pBonusPanel; // 0x144
	ObjectProperty m_grHome; // 0x14c
	ObjectProperty m_pUnlockAction; // 0x154
	ObjectProperty m_pUnlockAllAction; // 0x15c
};

struct UGameStatsAggregator : UGameplayEventsHandler {
	ObjectProperty GameState; // 0x88
	TArray<FAggregateEventMapping> AggregatesList; // 0x90
	FMap_Mirror AggregateEventsMapping; // 0xa0
	TArray<FGameplayEventMetaData> AggregateEvents; // 0xe8
	TArray<int32_t> AggregatesFound; // 0xf8
	FGameEvents AllGameEvents; // 0x108
	TArray<FTeamEvents> AllTeamEvents; // 0x150
	TArray<FPlayerEvents> AllPlayerEvents; // 0x160
	FWeaponEvents AllWeaponEvents; // 0x170
	FProjectileEvents AllProjectileEvents; // 0x1c8
	FPawnEvents AllPawnEvents; // 0x220
	FDamageEvents AllDamageEvents; // 0x278
};

struct UTgSeqAct_SetMapLane : USequenceAction {
	int32_t m_nMapLane; // 0x108
};

struct UMaterialExpressionConstant4Vector : UMaterialExpression {
	float R; // 0xb0
	float G; // 0xb4
	float B; // 0xb8
	float A; // 0xbc
};

struct UTgSeqAct_ClientLoadDevices : USequenceAction {
	TArray<int32_t> m_DeviceIdList; // 0x108
	char m_bClearExistingLoads : 1; // 0x118
};

struct ATgProj_ShadowStickyBomb : ATgProj_Simulated {
	FImpactInfo m_CachedTargetImpact; // 0x52c
	ObjectProperty prevHitTarget; // 0x5a8
	ObjectProperty m_pStickyProp; // 0x5b0
	char m_bHasMadeContact : 1; // 0x5b8
	float m_fExplodeDelay; // 0x5bc
	float m_fNormalOffsetMultiplier; // 0x5c0
	float m_fMaxAcceptableBulletToTargetDist; // 0x5c4
};

struct UPrefabSequence : USequence {
	ObjectProperty OwnerPrefab; // 0x174
};

struct ADynamicSMActor : AActor {
	ComponentProperty StaticMeshComponent; // 0x280
	ComponentProperty LightEnvironment; // 0x288
	ObjectProperty ReplicatedMesh; // 0x290
	ObjectProperty ReplicatedMaterial0; // 0x298
	ObjectProperty ReplicatedMaterial1; // 0x2a0
	char bForceStaticDecals : 1; // 0x2a8
	char bPawnCanBaseOn : 1; // 0x2a8
	char bSafeBaseIfAsleep : 1; // 0x2a8
	char bHandleNavMeshRegistrationInGame : 1; // 0x2a8
	char bHasRegisteredObstacle : 1; // 0x2a8
	FVector ReplicatedMeshTranslation; // 0x2ac
	FRotator ReplicatedMeshRotation; // 0x2b8
	FVector ReplicatedMeshScale3D; // 0x2c4
};

struct ATgRespawnBeaconBase : ATgDestructible {
	int32_t m_nMeshAssemblyId; // 0x308
	ComponentProperty m_ActualMeshComponent; // 0x30c
	TArray<ObjectProperty> m_BeaconNodes; // 0x314
	char c_bEnemyMatLoaded : 1; // 0x324
	char m_bShouldShowSilhouetteToFriends : 1; // 0x324
	float m_fDeployTime; // 0x328
};

struct ATgWeaponMeshActor_ImaniInhand : ATgWeaponMeshActor {
	char m_bUsingSecondaryStance : 1; // 0x450
	TArray<ObjectProperty> m_stanceNodes3p; // 0x454
	TArray<ObjectProperty> m_stanceNodes1p; // 0x464
};

struct ATgDevice_CommanderUlt : ATgDevice {
	ObjectProperty m_CachedCommander; // 0xa04
	ObjectProperty m_CommanderUltFireDevice; // 0xa0c
	FVector m_vLastDeployLocPreOffset; // 0xa14
	FRotator m_rInitialDeployRotation; // 0xa20
};

struct UMeshComponent : UPrimitiveComponent {
	TArray<ObjectProperty> Materials; // 0x24c
	int32_t MatResGrpId; // 0x25c
	TArray<ObjectProperty> SavedBodyMICs; // 0x260
	TArray<ObjectProperty> DefaultBodyMICs; // 0x270
	TArray<ObjectProperty> DyedBodyMICs; // 0x280
	char m_bForceHideComponent : 1; // 0x290
};

struct AController : AActor {
	FPointer VfTable_IInterface_NavigationHandle; // 0x280
	ObjectProperty Pawn; // 0x288
	ObjectProperty PlayerReplicationInfo; // 0x290
	int32_t PlayerNum; // 0x298
	ObjectProperty NextController; // 0x29c
	char bIsPlayer : 1; // 0x2a4
	char bGodMode : 1; // 0x2a4
	char bSoaking : 1; // 0x2a4
	char bSlowerZAcquire : 1; // 0x2a4
	char bNotifyPostLanded : 1; // 0x2a4
	char bNotifyApex : 1; // 0x2a4
	char bOverrideSearchStart : 1; // 0x2a4
	char bAdvancedTactics : 1; // 0x2a4
	char bCanDoSpecial : 0; // 0x2a4
	char bAdjusting : 0; // 0x2a4
	char bPreparingMove : 0; // 0x2a4
	char bForceStrafe : 0; // 0x2a4
	char bLOSflag : 0; // 0x2a4
	char bSkipExtraLOSChecks : 0; // 0x2a4
	char bNotifyFallingHitWall : 0; // 0x2a4
	char bEarlyOutOfSighTestsForSameType : 0; // 0x2a4
	char bPreciseDestination : 0; // 0x2a4
	char bSeeFriendly : 0; // 0x2a4
	char bUsingPathLanes : 0; // 0x2a4
	char bFire; // 0x2a8
	char bAltFire; // 0x2a9
	EStunType m_eCurrentStunType; // 0x2aa
	float MinHitWall; // 0x2ac
	UNavigationHandle* NavigationHandleClass; // 0x2b0
	ObjectProperty NavigationHandle; // 0x2b8
	FVector OverrideSearchStart; // 0x2c0
	float MoveTimer; // 0x2cc
	ObjectProperty MoveTarget; // 0x2d0
	FBasedPosition DestinationPosition; // 0x2d8
	FBasedPosition FocalPosition; // 0x310
	ObjectProperty Focus; // 0x348
	ObjectProperty GoalList[0x4]; // 0x350
	FBasedPosition AdjustPosition; // 0x370
	ObjectProperty StartSpot; // 0x3a8
	TArray<ObjectProperty> RouteCache; // 0x3b0
	ObjectProperty CurrentPath; // 0x3c0
	ObjectProperty NextRoutePath; // 0x3c8
	FVector CurrentPathDir; // 0x3d0
	ObjectProperty RouteGoal; // 0x3dc
	float RouteDist; // 0x3e4
	float LastRouteFind; // 0x3e8
	ObjectProperty PendingMover; // 0x3ec
	ObjectProperty FailedMoveTarget; // 0x3f4
	int32_t MoveFailureCount; // 0x3fc
	float GroundPitchTime; // 0x400
	ObjectProperty ShotTarget; // 0x404
	ObjectProperty LastFailedReach; // 0x40c
	float FailedReachTime; // 0x414
	FVector FailedReachLocation; // 0x418
	float SightCounter; // 0x424
	float SightCounterInterval; // 0x428
	float InUseNodeCostMultiplier; // 0x42c
	int32_t HighJumpNodeCostModifier; // 0x430
	float MaxMoveTowardPawnTargetTime; // 0x434
	ObjectProperty Enemy; // 0x438
	TArray<FVisiblePortalInfo> VisiblePortals; // 0x440
	float LaneOffset; // 0x450
	FRotator OldBasedRotation; // 0x454
	FVector NavMeshPath_SearchExtent_Modifier; // 0x460
	float NavMeshPath_SearchHierachicalMinDistance; // 0x46c
};

struct AHeightFog : AInfo {
	ComponentProperty Component; // 0x280
	char bEnabled : 1; // 0x288
};

struct UTgAnimNodeEmoteCustomAnim : UAnimNodePlayCustomAnim {
	char c_bIsInHandDeviceMeshInvisible : 1; // 0x12c
	char c_bHasReachedFullWeight : 1; // 0x12c
};

struct UTgInvListener_TargetOverHealed : UTgInventoryObject_Listen_AbilityProcBase {
	TArray<FTOHInfo> s_stacks; // 0xcc
};

struct UParticleModuleLocationPrimitiveCylinder : UParticleModuleLocationPrimitiveBase {
	char RadialVelocity : 1; // 0xb4
	char bAdjustForWorldSpace : 1; // 0xb4
	FRawDistributionFloat StartRadius; // 0xb8
	FRawDistributionFloat StartHeight; // 0xdc
	CylinderHeightAxis HeightAxis; // 0x100
};

struct UMaterialExpressionTerrainLayerCoords : UMaterialExpression {
	ETerrainCoordMappingType MappingType; // 0xb0
	float MappingScale; // 0xb4
	float MappingRotation; // 0xb8
	float MappingPanU; // 0xbc
	float MappingPanV; // 0xc0
};

struct UClientBeaconAddressResolver : UObject {
	int32_t BeaconPort; // 0x60
	FName BeaconName; // 0x64
};

struct UParticleModuleTypeDataTrail : UParticleModuleTypeDataBase {
	char RenderGeometry : 1; // 0x68
	char RenderLines : 1; // 0x68
	char RenderTessellation : 1; // 0x68
	char Tapered : 1; // 0x68
	char SpawnByDistance : 1; // 0x68
	int32_t TessellationFactor; // 0x6c
	FRawDistributionFloat Tension; // 0x70
	FVector SpawnDistance; // 0x94
};

struct ATgWeaponMeshActor_ADS : ATgWeaponMeshActor {
	char m_bPlayingADSFX : 1; // 0x450
};

struct APortalTeleporter : ASceneCapturePortalActor {
	ObjectProperty SisterPortal; // 0x298
	int32_t TextureResolutionX; // 0x2a0
	int32_t TextureResolutionY; // 0x2a4
	ObjectProperty MyMarker; // 0x2a8
	char bMovablePortal : 1; // 0x2b0
	char bAlwaysTeleportNonPawns : 1; // 0x2b0
	char bCanTeleportVehicles : 1; // 0x2b0
};

struct USoundNodeAttenuation : USoundNode {
	char bAttenuate : 1; // 0x74
	char bSpatialize : 1; // 0x74
	char bAttenuateWithLPF : 1; // 0x74
	float dBAttenuationAtMax; // 0x78
	float OmniRadius; // 0x7c
	SoundDistanceModel DistanceAlgorithm; // 0x80
	ESoundDistanceCalc DistanceType; // 0x81
	float RadiusMin; // 0x84
	float RadiusMax; // 0x88
	float LPFRadiusMin; // 0x8c
	float LPFRadiusMax; // 0x90
};

struct UTgSkelCon_RotateToVelocity : UTgSkelCon_MirrorToOtherMesh {
	float m_fRotationSpeed; // 0x108
	char m_bUseConstantSpeed : 1; // 0x10c
	char m_bVelocity2DOnly : 1; // 0x10c
	float m_fMinVelocity; // 0x110
	FRotator m_rTargetRotation; // 0x114
	ObjectProperty m_CachedOwner; // 0x120
};

struct UTgSeqAct_TrainingAwards : USequenceAction {
	float m_fGoldTime; // 0x108
	float m_fSilverTime; // 0x10c
	float m_fBronzeTime; // 0x110
	float m_fPassTime; // 0x114
};

struct UParticleModuleTypeDataMeshPhysX : UParticleModuleTypeDataMesh {
	ObjectProperty PhysXParSys; // 0x84
	EPhysXMeshRotationMethod PhysXRotationMethod; // 0x8c
	float FluidRotationCoefficient; // 0x90
	FPhysXEmitterVerticalLodProperties VerticalLod; // 0x94
	float ZOffset; // 0xa4
};

struct UMaterialExpressionMaterialFunctionCall : UMaterialExpression {
	ObjectProperty MaterialFunction; // 0xb0
	TArray<FFunctionExpressionInput> FunctionInputs; // 0xb8
	TArray<FFunctionExpressionOutput> FunctionOutputs; // 0xc8
};

struct ATgWeaponMeshActor_ImaniDragonInhand : ATgWeaponMeshActor {
	TArray<ObjectProperty> m_DragonFireFx; // 0x450
};

struct ATgDevice_YagorathQ : ATgDevice {
	float m_fHardenDamage; // 0xa04
};

struct USequenceVariable : USequenceObject {
	FName VarName; // 0x98
};

struct UTgAIBehaviorCondition_CombatTargetPhysicsState : UTgAIBehaviorCondition {
	EPhysics PhysicsState; // 0x98
};

struct UDistributionFloatConstantCurve : UDistributionFloat {
	FInterpCurveFloat ConstantCurve; // 0x7c
};

struct UPBRuleNodeVariation : UPBRuleNodeBase {
	char bVariationOfScopeOnLeft : 1; // 0x70
};

struct ATgEmitter_CameraEffect_LowHealth : ATgEmitter_CameraEffect {
	float m_fFade; // 0x2c0
};

struct ATgDevice_TiberiusPounce : ATgDevice_Charge {
	ObjectProperty m_CachedTiberius; // 0xa78
	float m_fUltSpamLockout; // 0xa80
};

struct ATgDevice_Shatter : ATgDevice {
	ObjectProperty m_CachedYingPawn; // 0xa04
	int32_t m_nIllusionsShattered; // 0xa0c
};

struct ATgDeploy_GeometryBuck : ATgDeploy_Geometry {
	char m_bInteriorEffectApplied : 1; // 0x494
};

struct ATgDevice_DarkBargain : ATgDevice {
	ObjectProperty m_CachedDredgeF; // 0xa04
};

struct UUIData_Pair : UUIData {
	ObjectProperty m_pFirst; // 0x64
	ObjectProperty m_pSecond; // 0x6c
};

struct UUIData_ItemQuest : UUIData_SpecialEvent {
	Fdword m_dwPurchasePortion; // 0xc0
};

struct UTgAIBehaviorAction_SetAimDevice : UTgAIBehaviorAction {
	TG_EQUIP_POINT DeviceToUse; // 0x94
};

struct UUIData_ChestDataWithItem : UUIData {
	ObjectProperty m_pItem; // 0x64
	ObjectProperty m_pChestData; // 0x6c
};

struct UTgSettingsManager : UTgObject {
	FPointer VfTable_ITgCallbackInterface; // 0x60
	char m_bValidatedLoadedSettings : 1; // 0x68
	int32_t m_nSelectedChampion; // 0x6c
	TMap<None, None> m_Sets; // 0x70
	TArray<ObjectProperty> m_Settings; // 0xb8
	TArray<FTgKeyCommand> m_Commands; // 0xc8
	TArray<FTgSettingPropMapping> m_AccountSavedSettings; // 0xd8
	ObjectProperty m_CallbackContainer; // 0xe8
};

struct UDominantDirectionalLightComponent : UDirectionalLightComponent {
	FDominantShadowInfo DominantLightShadowInfo; // 0x1d0
	FArray_Mirror DominantLightShadowMap; // 0x280
};

struct ULensFlare : UObject {
	FLensFlareElement SourceElement; // 0x60
	ObjectProperty SourceMesh; // 0x1f8
	ESceneDepthPriorityGroup SourceDPG; // 0x200
	ESceneDepthPriorityGroup ReflectionsDPG; // 0x201
	TArray<FLensFlareElement> Reflections; // 0x204
	float OuterCone; // 0x214
	float InnerCone; // 0x218
	float ConeFudgeFactor; // 0x21c
	float Radius; // 0x220
	char bUseTrueConeCalculation : 1; // 0x224
	char bUseFixedRelativeBoundingBox : 1; // 0x224
	char bRenderDebugLines : 1; // 0x224
	char ThumbnailImageOutOfDate : 1; // 0x224
	float MinStrength; // 0x228
	FRawDistributionFloat ScreenPercentageMap; // 0x22c
	FBox FixedRelativeBoundingBox; // 0x250
	ObjectProperty CurveEdSetup; // 0x26c
	int32_t ReflectionCount; // 0x274
	FRotator ThumbnailAngle; // 0x278
	float ThumbnailDistance; // 0x284
	ObjectProperty ThumbnailImage; // 0x288
};

struct AMobileTouchInputVolume : AVolume {
	char bEnabled : 1; // 0x2bc
};

struct UUIComponent_ChestTooltip : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_mcRarity; // 0x12c
};

struct ALandscape : ALandscapeProxy {
	TArray<FName> LayerNames; // 0x3bc
	TArray<FLandscapeLayerInfo> LayerInfos; // 0x3cc
};

struct UTgDeviceForm_LexInhand : UTgDeviceForm {
	FName c_nmSocketLeft; // 0x28c
	FName c_nmSocketRight; // 0x294
	TArray<ObjectProperty> m_LexCharacterNodes1P; // 0x29c
	TArray<ObjectProperty> m_LexCharacterNodes3P; // 0x2ac
	TArray<ObjectProperty> m_DualFireStanceNodes1P; // 0x2bc
	TArray<ObjectProperty> m_DualFireStanceNodes3P; // 0x2cc
	TArray<ObjectProperty> m_FireDurationNodes1P; // 0x2dc
	TArray<ObjectProperty> m_FireDurationNodes3P; // 0x2ec
	ObjectProperty m_CachedLex; // 0x2fc
	int32_t m_nPursuitFireIndex; // 0x304
	float m_fDeathHastensDuration; // 0x308
};

struct UUIData_ChestExclusive : UUIData {
	int32_t m_nItemsOwned; // 0x64
	int32_t m_nItemsTotal; // 0x68
	ObjectProperty m_pChestExclusives; // 0x6c
	ObjectProperty m_pChestData; // 0x74
};

struct UUIScene_UIAsiaticEvent : UUIScene {
	char m_bInsideRotator : 1; // 0x1cc
	char m_bIsRotating : 1; // 0x1cc
	float m_fPrevMouseXPos; // 0x1d0
	ObjectProperty m_pBack; // 0x1d4
	ObjectProperty m_pTabs; // 0x1dc
	ObjectProperty m_pRotator; // 0x1e4
	ObjectProperty m_pHome; // 0x1ec
	ObjectProperty m_pQuests; // 0x1f4
	ObjectProperty m_pInfo; // 0x1fc
	ObjectProperty m_pHomePurchase; // 0x204
};

struct UUIComponent_ScrollBar : UUIComponent_Interactable {
	int32_t m_nPageHeight; // 0x140
	int32_t m_nPageWidth; // 0x144
	int32_t m_nNumElements; // 0x148
	float m_fScrollPos; // 0x14c
	int32_t m_nNavScrollCBHandle1; // 0x150
	int32_t m_nNavScrollCBHandle2; // 0x154
	ObjectProperty m_grScroll; // 0x158
	char m_bScrollVertical : 1; // 0x160
};

struct UUIComponent_RankedEOMProgress : UUIComponent_Display {
	ObjectProperty m_mcNetTP; // 0x124
	ObjectProperty m_mcCurrentTP; // 0x12c
	ObjectProperty m_mcCurrentRank; // 0x134
	ObjectProperty m_mcRankIconPrev; // 0x13c
	ObjectProperty m_mcRankIconNext; // 0x144
	ObjectProperty m_pProgress; // 0x14c
};

struct UTgAchievement : UObject {
	ObjectProperty Controller; // 0x60
	char m_bCustomValue3IsBotId : 1; // 0x68
	char m_bAwardsAllowTriggering : 1; // 0x68
	char m_bIsTickable : 1; // 0x68
	int32_t m_nBotId; // 0x6c
	int32_t m_nActivityId; // 0x70
	int32_t m_nGoalId; // 0x74
	int32_t m_nCustomValue1; // 0x78
	int32_t m_nCustomValue2; // 0x7c
	int32_t m_nCustomValue3; // 0x80
	int32_t m_nCustomValue4; // 0x84
	int32_t m_nCustomValue5; // 0x88
	int32_t m_nCurrentProgress; // 0x8c
	int32_t m_nCurrentTarget; // 0x90
};

struct UTgAIBehaviorComposite_Sequence : UTgAIBehaviorComposite {
	char bStopOnRunningChild : 1; // 0xb8
};

struct UUIComponent_DeathRecapPlayerSkill : UUIComponent_Display {
	ObjectProperty m_mcIcon; // 0x124
	ObjectProperty m_mcNameTF; // 0x12c
	ObjectProperty m_mcDamageTF; // 0x134
	ObjectProperty m_mcCountTF; // 0x13c
	ObjectProperty m_mcCountBG; // 0x144
};

struct UUIComponent_EndTimesEventRewardItem : UUIComponent_ItemGeneric {
	ObjectProperty m_mcOwnedIcon; // 0x20c
	ObjectProperty m_mcSortOrderText; // 0x214
};

struct USoundNodeModulatorContinuous : USoundNode {
	FRawDistributionFloat PitchModulation; // 0x74
	FRawDistributionFloat VolumeModulation; // 0x98
};

struct UUIHudBinoculars : UTgGfxScene {
	char m_bWasVisible : 1; // 0x1ec
	char m_bHadTarget : 1; // 0x1ec
	FBinocularSettings m_PrevBinocsSettings; // 0x1f0
	FVector2D m_vInnerGuideStartPos; // 0x21c
	FVector2D m_vOuterGuideStartPos; // 0x224
	FVector2D m_vGuideOffset; // 0x22c
	ObjectProperty m_mcHeadingGraphic; // 0x234
	ObjectProperty m_mcHeading; // 0x23c
	ObjectProperty m_mcRange; // 0x244
	ObjectProperty m_mcTargets; // 0x24c
	ObjectProperty m_mcInnerGuides; // 0x254
	ObjectProperty m_mcOuterGuides; // 0x25c
	ObjectProperty m_mcGuideFrame; // 0x264
	ObjectProperty m_mcStatus; // 0x26c
	ObjectProperty m_mcStatusTF; // 0x274
	ObjectProperty m_mcBarrageFrame[0x3]; // 0x27c
	ObjectProperty m_mcBarrageMeter[0x3]; // 0x294
	ObjectProperty m_mcBarrageTime[0x3]; // 0x2ac
	ObjectProperty m_mcBarrageTimeTF[0x3]; // 0x2c4
	ObjectProperty m_mcReticule; // 0x2dc
	ObjectProperty m_mcReticuleInnerArrows[0x4]; // 0x2e4
	ObjectProperty m_mcReticuleOuterArrows[0x4]; // 0x304
	FUIBinocArrowPositions m_ReticuleArrowPositions[0x4]; // 0x324
	ObjectProperty m_mcRefire; // 0x3a4
	ObjectProperty m_mcRefireMask; // 0x3ac
	ObjectProperty m_mcDurationMeter; // 0x3b4
	ObjectProperty m_mcDurationMeterCap; // 0x3bc
};

struct UTgAchievement_FromTheGrave : UTgAchievement {
	int32_t KillerPawnId; // 0x94
};

struct UTgDeviceForm_ArcingBeam : UTgDeviceForm {
	TArray<FArcingFXInfo> m_ArcingBeamList; // 0x28c
	ObjectProperty m_BeamSourceActor; // 0x29c
	float m_fBeamPersistTime; // 0x2a4
	int32_t m_nBeamEffectID; // 0x2a8
};

struct UTgAnimNotify_PlayParticleEffect_Skinned : UAnimNotify_PlayParticleEffect {
	TArray<FPPE_Skin> m_SkinOverrideList; // 0x98
	char m_bApplyTeamColor : 1; // 0xa8
};

struct ULightmassLevelSettings : UObject {
	int32_t NumIndirectLightingBounces; // 0x60
	FColor EnvironmentColor; // 0x64
	float EnvironmentIntensity; // 0x68
	float EmissiveBoost; // 0x6c
	float DiffuseBoost; // 0x70
	float SpecularBoost; // 0x74
	char bUseAmbientOcclusion : 1; // 0x78
	char bVisualizeAmbientOcclusion : 1; // 0x78
	float DirectIlluminationOcclusionFraction; // 0x7c
	float IndirectIlluminationOcclusionFraction; // 0x80
	float OcclusionExponent; // 0x84
	float FullyOccludedSamplesFraction; // 0x88
	float MaxOcclusionDistance; // 0x8c
};

struct UUIDataStore_OnlineGameSettings : UUIDataStore_Settings {
	TArray<FGameSettingsCfg> GameSettingsCfgList; // 0x98
	UUIDataProvider_Settings* SettingsProviderClass; // 0xa8
	int32_t SelectedIndex; // 0xb0
};

struct ATgDevice_OppressorMineMod : ATgDevice {
	TArray<ObjectProperty> m_MinesInRage; // 0xa04
};

struct UTgDeviceForm_Stasis : UTgDeviceForm {
	char m_bNeedsLoopActivation : 1; // 0x28c
	float m_fFireStartTime; // 0x290
	float m_fLoopDelay; // 0x294
};

struct ATgProj_FreeGrenade : ATgProj_Simulated {
	char m_bShieldTouched : 1; // 0x52c
	char m_bTimerExplodeDisabled : 1; // 0x52c
	char m_bExplodeOnTouch : 1; // 0x52c
	char m_bExplodeOnGeometry : 1; // 0x52c
	char m_bExplodeOnFloor : 1; // 0x52c
	char m_bUseBilinearInterpolationForBounceDamping : 1; // 0x52c
	char m_bUseGravityZOverride : 1; // 0x52c
	ObjectProperty m_TouchedShield; // 0x530
	float m_fToleranceZ; // 0x538
	float m_fBounceDampingVertMin; // 0x53c
	float m_fBounceDampingVertMax; // 0x540
	float m_fBounceDampingHorizMin; // 0x544
	float m_fBounceDampingHorizMax; // 0x548
	float m_fBounceDamping; // 0x54c
	float m_fSpeedToActivateBounceFX; // 0x550
	float m_fGravityZOverride; // 0x554
	int32_t m_nBounceCount; // 0x558
	int32_t m_nBouncesToExplode; // 0x55c
	float m_fBounceDistinctionDuration; // 0x560
	int32_t m_fLastBounceTime; // 0x564
	FVector m_vRecentHitNormal; // 0x568
	float m_fRecentHitTime; // 0x574
	float m_fDelayPredictStartLocPing; // 0x578
	float m_fBounceFlashThreshold; // 0x57c
};

struct UApexComponentBase : UMeshComponent {
	FPointer ComponentBaseResources; // 0x294
	FRenderCommandFence_Mirror ReleaseResourcesFence; // 0x29c
	ObjectProperty Asset; // 0x2a0
	FColor WireframeColor; // 0x2a8
	char bAssetChanged : 1; // 0x2ac
};

struct UInstancedFoliageSettings : UObject {
	float Density; // 0x60
	float Radius; // 0x64
	float ScaleMinX; // 0x68
	float ScaleMinY; // 0x6c
	float ScaleMinZ; // 0x70
	float ScaleMaxX; // 0x74
	float ScaleMaxY; // 0x78
	float ScaleMaxZ; // 0x7c
	char LockScaleX : 1; // 0x80
	char LockScaleY : 1; // 0x80
	char LockScaleZ : 1; // 0x80
	char AlignToNormal : 1; // 0x80
	char RandomYaw : 1; // 0x80
	char UniformScale : 1; // 0x80
	char ReapplyDensity : 1; // 0x80
	char ReapplyRadius : 1; // 0x80
	char ReapplyAlignToNormal : 0; // 0x80
	char ReapplyRandomYaw : 0; // 0x80
	char ReapplyScaleX : 0; // 0x80
	char ReapplyScaleY : 0; // 0x80
	char ReapplyScaleZ : 0; // 0x80
	char ReapplyRandomPitchAngle : 0; // 0x80
	char ReapplyGroundSlope : 0; // 0x80
	char ReapplyHeight : 0; // 0x80
	char ReapplyLandscapeLayer : 0; // 0x80
	char ReapplyZOffset : 0; // 0x80
	char CastShadow : 0; // 0x80
	char bCastDynamicShadow : 0; // 0x80
	char bCastStaticShadow : 0; // 0x80
	char bSelfShadowOnly : 0; // 0x80
	char bNoModSelfShadow : 0; // 0x80
	char bAcceptsDynamicDominantLightShadows : 0; // 0x80
	char bCastHiddenShadow : 0; // 0x80
	char bCastShadowAsTwoSided : 0; // 0x80
	char bAcceptsLights : 0; // 0x80
	char bAcceptsDynamicLights : 0; // 0x80
	char bUseOnePassLightingOnTranslucency : 0; // 0x80
	char bUsePrecomputedShadows : 0; // 0x80
	char bStreamInstanceBuffer : 0; // 0x80
	char bCollideActors : 0; // 0x80
	char bBlockActors : 1; // 0x84
	char bBlockNonZeroExtent : 1; // 0x84
	char bBlockZeroExtent : 1; // 0x84
	char IsSelected : 1; // 0x84
	char ShowNothing : 1; // 0x84
	char ShowPaintSettings : 1; // 0x84
	char ShowInstanceSettings : 1; // 0x84
	float AlignMaxAngle; // 0x88
	float RandomPitchAngle; // 0x8c
	float GroundSlope; // 0x90
	float HeightMin; // 0x94
	float HeightMax; // 0x98
	FName LandscapeLayer; // 0x9c
	float ZOffsetMin; // 0xa4
	float ZOffsetMax; // 0xa8
	int32_t MaxInstancesPerCluster; // 0xac
	float MaxClusterRadius; // 0xb0
	float ReapplyDensityAmount; // 0xb4
	int32_t StartCullDistance; // 0xb8
	int32_t EndCullDistance; // 0xbc
	FoliageCullOption CullOption; // 0xc0
	EDetailMode DetailMode; // 0xc1
	int32_t TranslucencySortPriority; // 0xc4
	int32_t DisplayOrder; // 0xc8
};

struct UTgInventoryObject_Listen_LoogieExplodedHit : UTgInventoryObject_Listen_AbilityProcBase {
	char m_bNeedToApplyCooldown : 1; // 0xcc
};

struct USkeletalMeshComponent : UMeshComponent {
	ObjectProperty SkeletalMesh; // 0x294
	ComponentProperty AttachedToSkelComponent; // 0x29c
	ObjectProperty AnimTreeTemplate; // 0x2a4
	ObjectProperty Animations; // 0x2ac
	TArray<ObjectProperty> AnimTickArray; // 0x2b4
	TArray<ObjectProperty> AnimAlwaysTickArray; // 0x2c4
	TArray<int32_t> AnimTickRelevancyArray; // 0x2d4
	TArray<float> AnimTickWeightsArray; // 0x2e4
	TArray<ObjectProperty> SkelControlTickArray; // 0x2f4
	ObjectProperty PhysicsAsset; // 0x304
	ObjectProperty PhysicsAssetInstance; // 0x30c
	FPointer ApexClothing; // 0x314
	float PhysicsWeight; // 0x31c
	float GlobalAnimRateScale; // 0x320
	float StreamingDistanceMultiplier; // 0x324
	FPointer MeshObject; // 0x328
	FColor WireframeColor; // 0x330
	TArray<FBoneAtom> SpaceBases; // 0x334
	TArray<FMatrix> m_AnimBases; // 0x344
	TArray<FBoneAtom> LocalAtoms; // 0x354
	TArray<FBoneAtom> CachedLocalAtoms; // 0x364
	TArray<FBoneAtom> CachedSpaceBases; // 0x374
	int32_t LowUpdateFrameRate; // 0x384
	TArray<char> RequiredBones; // 0x388
	TArray<char> ComposeOrderedRequiredBones; // 0x398
	ComponentProperty ParentAnimComponent; // 0x3a8
	TArray<int32_t> ParentBoneMap; // 0x3b0
	TArray<ObjectProperty> AnimSets; // 0x3c0
	TArray<ObjectProperty> TemporarySavedAnimSets; // 0x3d0
	TArray<ObjectProperty> MorphSets; // 0x3e0
	TArray<FActiveMorph> ActiveMorphs; // 0x3f0
	TArray<FActiveMorph> ActiveCurveMorphs; // 0x400
	TMap<None, None> MorphTargetIndexMap; // 0x410
	TArray<FAttachment> Attachments; // 0x458
	TArray<char> SkelControlIndex; // 0x468
	TArray<char> PostPhysSkelControlIndex; // 0x478
	int32_t ForcedLodModel; // 0x488
	int32_t MinLodModel; // 0x48c
	int32_t PredictedLODLevel; // 0x490
	int32_t OldPredictedLODLevel; // 0x494
	float AnimationLODDistanceFactor; // 0x498
	int32_t AnimationLODFrameRate; // 0x49c
	float MaxDistanceFactor; // 0x4a0
	int32_t bForceWireframe; // 0x4a4
	int32_t bForceRefpose; // 0x4a8
	int32_t bOldForceRefPose; // 0x4ac
	char bNoSkeletonUpdate : 1; // 0x4b0
	int32_t bDisplayBones; // 0x4b4
	int32_t bShowPrePhysBones; // 0x4b8
	int32_t bHideSkin; // 0x4bc
	int32_t bForceRawOffset; // 0x4c0
	int32_t bIgnoreControllers; // 0x4c4
	int32_t bTransformFromAnimParent; // 0x4c8
	int32_t TickTag; // 0x4cc
	int32_t InitTag; // 0x4d0
	int32_t CachedAtomsTag; // 0x4d4
	int32_t bUseSingleBodyPhysics; // 0x4d8
	int32_t bRequiredBonesUpToDate; // 0x4dc
	float MinDistFactorForKinematicUpdate; // 0x4e0
	int32_t FramesPhysicsAsleep; // 0x4e4
	int32_t SkipRateForTickAnimNodesAndGetBoneAtoms; // 0x4e8
	char bSkipTickAnimNodes : 1; // 0x4ec
	char bSkipGetBoneAtoms : 1; // 0x4ec
	char bInterpolateBoneAtoms : 1; // 0x4ec
	char bHasValidBodies : 1; // 0x4ec
	char bSkipAllUpdateWhenPhysicsAsleep : 1; // 0x4ec
	char bComponentUseFixedSkelBounds : 1; // 0x4ec
	char bUseBoundsFromParentAnimComponent : 1; // 0x4ec
	char bConsiderAllBodiesForBounds : 1; // 0x4ec
	char bUpdateSkelWhenNotRendered : 0; // 0x4ec
	char bIgnoreControllersWhenNotRendered : 0; // 0x4ec
	char bTickAnimNodesWhenNotRendered : 0; // 0x4ec
	char bNotUpdatingKinematicDueToDistance : 0; // 0x4ec
	char bForceDiscardRootMotion : 0; // 0x4ec
	char bNotifyRootMotionProcessed : 0; // 0x4ec
	char bRootMotionModeChangeNotify : 0; // 0x4ec
	char bRootMotionExtractedNotify : 0; // 0x4ec
	char bProcessingRootMotion : 0; // 0x4ec
	char bDisableFaceFXMaterialInstanceCreation : 0; // 0x4ec
	char bDisableFaceFX : 0; // 0x4ec
	char bAnimTreeInitialised : 0; // 0x4ec
	char bForceMeshObjectUpdate : 0; // 0x4ec
	char bHasPhysicsAssetInstance : 0; // 0x4ec
	char bUpdateKinematicBonesFromAnimation : 0; // 0x4ec
	char bUpdateJointsFromAnimation : 0; // 0x4ec
	char bSkelCompFixed : 0; // 0x4ec
	char bHasHadPhysicsBlendedIn : 0; // 0x4ec
	char bForceUpdateAttachmentsInTick : 0; // 0x4ec
	char bEnableFullAnimWeightBodies : 0; // 0x4ec
	char bPerBoneVolumeEffects : 0; // 0x4ec
	char bPerBoneMotionBlur : 0; // 0x4ec
	char bSyncActorLocationToRootRigidBody : 0; // 0x4ec
	char bUseRawData : 0; // 0x4ec
	char bDisableWarningWhenAnimNotFound : 1; // 0x4f0
	char bOverrideAttachmentOwnerVisibility : 1; // 0x4f0
	char bOverrideAttachmentDepthPriorityGroup : 1; // 0x4f0
	char bNeedsToDeleteHitMask : 1; // 0x4f0
	char bPauseAnims : 1; // 0x4f0
	char bPauseSkelControls : 1; // 0x4f0
	char bChartDistanceFactor : 1; // 0x4f0
	char bEnableLineCheckWithBounds : 1; // 0x4f0
	char bCanHighlightSelectedSections : 0; // 0x4f0
	char bUpdateMorphWhenParentAnimComponentExists : 0; // 0x4f0
	FVector LineCheckBoundsScale; // 0x4f4
	char bEnableClothSimulation : 1; // 0x500
	char bDisableClothCollision : 1; // 0x500
	char bClothFrozen : 1; // 0x500
	char bAutoFreezeClothWhenNotRendered : 1; // 0x500
	char bClothAwakeOnStartup : 1; // 0x500
	char bClothBaseVelClamp : 1; // 0x500
	char bClothBaseVelInterp : 1; // 0x500
	char bAttachClothVertsToBaseBody : 1; // 0x500
	char bIsClothOnStaticObject : 0; // 0x500
	char bUpdatedFixedClothVerts : 0; // 0x500
	char bClothPositionalDampening : 0; // 0x500
	char bClothWindRelativeToOwner : 0; // 0x500
	char bRecentlyRendered : 0; // 0x500
	char bCacheAnimSequenceNodes : 0; // 0x500
	char bNeedsInstanceWeightUpdate : 0; // 0x500
	char bAlwaysUseInstanceWeights : 0; // 0x500
	char bUpdateComposeSkeletonPasses : 0; // 0x500
	char bValidTemporarySavedAnimSets : 0; // 0x500
	int32_t bHasDeferredPoseUpdate; // 0x504
	int32_t c_nOverrideSkinId; // 0x508
	int32_t c_nOverrideSkinLevel; // 0x50c
	TArray<FBonePair> InstanceVertexWeightBones; // 0x510
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x520
	FVector FrozenLocalToWorldPos; // 0x530
	FRotator FrozenLocalToWorldRot; // 0x53c
	FVector ClothExternalForce; // 0x548
	FVector ClothWind; // 0x554
	FVector ClothBaseVelClampRange; // 0x560
	float ClothBlendWeight; // 0x56c
	float ClothDynamicBlendWeight; // 0x570
	float ClothBlendMinDistanceFactor; // 0x574
	float ClothBlendMaxDistanceFactor; // 0x578
	FVector MinPosDampRange; // 0x57c
	FVector MaxPosDampRange; // 0x588
	FVector MinPosDampScale; // 0x594
	FVector MaxPosDampScale; // 0x5a0
	FPointer ClothSim; // 0x5ac
	int32_t SceneIndex; // 0x5b4
	TArray<FVector> ClothMeshPosData; // 0x5b8
	TArray<FVector> ClothMeshNormalData; // 0x5c8
	TArray<int32_t> ClothMeshIndexData; // 0x5d8
	int32_t NumClothMeshVerts; // 0x5e8
	int32_t NumClothMeshIndices; // 0x5ec
	TArray<int32_t> ClothMeshParentData; // 0x5f0
	int32_t NumClothMeshParentIndices; // 0x600
	TArray<FVector> ClothMeshWeldedPosData; // 0x604
	TArray<FVector> ClothMeshWeldedNormalData; // 0x614
	TArray<int32_t> ClothMeshWeldedIndexData; // 0x624
	int32_t ClothDirtyBufferFlag; // 0x634
	ERBCollisionChannel ClothRBChannel; // 0x638
	FRBCollisionChannelContainer ClothRBCollideWithChannels; // 0x63c
	float ClothForceScale; // 0x640
	float ClothImpulseScale; // 0x644
	float ClothAttachmentTearFactor; // 0x648
	char bClothUseCompartment : 1; // 0x64c
	float MinDistanceForClothReset; // 0x650
	FVector LastClothLocation; // 0x654
	ERBCollisionChannel ApexClothingRBChannel; // 0x660
	FRBCollisionChannelContainer ApexClothingRBCollideWithChannels; // 0x664
	ERBCollisionChannel ApexClothingCollisionRBChannel; // 0x668
	char bAutoFreezeApexClothingWhenNotRendered : 1; // 0x66c
	char bLocalSpaceWind : 1; // 0x66c
	FVector WindVelocity; // 0x670
	float WindVelocityBlendTime; // 0x67c
	char bSkipInitClothing : 1; // 0x680
	FPointer SoftBodySim; // 0x684
	int32_t SoftBodySceneIndex; // 0x68c
	char bEnableSoftBodySimulation : 1; // 0x690
	TArray<FVector> SoftBodyTetraPosData; // 0x694
	TArray<int32_t> SoftBodyTetraIndexData; // 0x6a4
	int32_t NumSoftBodyTetraVerts; // 0x6b4
	int32_t NumSoftBodyTetraIndices; // 0x6b8
	float SoftBodyImpulseScale; // 0x6bc
	char bSoftBodyFrozen : 1; // 0x6c0
	char bAutoFreezeSoftBodyWhenNotRendered : 1; // 0x6c0
	char bSoftBodyAwakeOnStartup : 1; // 0x6c0
	char bSoftBodyUseCompartment : 1; // 0x6c0
	ERBCollisionChannel SoftBodyRBChannel; // 0x6c4
	FRBCollisionChannelContainer SoftBodyRBCollideWithChannels; // 0x6c8
	FPointer SoftBodyASVPlane; // 0x6cc
	ObjectProperty LimitMaterial; // 0x6d4
	FBoneAtom RootMotionDelta; // 0x6e0
	FVector RootMotionVelocity; // 0x700
	FVector RootBoneTranslation; // 0x70c
	FVector RootMotionAccelScale; // 0x718
	ERootMotionMode RootMotionMode; // 0x724
	ERootMotionMode PreviousRMM; // 0x725
	ERootMotionMode PendingRMM; // 0x726
	ERootMotionMode OldPendingRMM; // 0x727
	int32_t bRMMOneFrameDelay; // 0x728
	ERootMotionRotationMode RootMotionRotationMode; // 0x72c
	EAnimRotationOnly AnimRotationOnly; // 0x72d
	EFaceFXBlendMode FaceFXBlendMode; // 0x72e
	FPointer FaceFXActorInstance; // 0x730
	ComponentProperty CachedFaceFXAudioComp; // 0x738
	TArray<char> BoneVisibilityStates; // 0x740
	ObjectProperty CachedFaceFxAkEvent; // 0x750
	FBoneAtom LocalToWorldBoneAtom; // 0x760
	float ProgressiveDrawingFraction; // 0x780
	char CustomSortAlternateIndexMode; // 0x784
	TArray<FName> MorphTargetsQueried; // 0x788
	char bUseTickOptimization : 1; // 0x798
	int32_t TickCount; // 0x79c
	int32_t LastDropRate; // 0x7a0
	float LastDropRateChange; // 0x7a4
	float AccumulatedDroppedDeltaTime; // 0x7a8
	float ComponentDroppedDeltaTime; // 0x7ac
	float FOV; // 0x7b0
};

struct UTgInventoryObject_Listen_Combo_Makoa : UTgInventoryObject_Listen_Combo {
	TArray<FMarkedTargetHook> m_MarkedTargets; // 0xcc
};

struct ATgMapBoundsVolume : AVolume {
	ObjectProperty MinimapImage; // 0x2bc
};

struct UUIComponent_TencentJsonPanel : UUIComponent_Display {
	TArray<FJsonFeatureData> m_pFeatureData; // 0x124
	TMap<None, None> m_pFeatureMap; // 0x134
	ObjectProperty m_pJsonPanels[0x3]; // 0x17c
	ObjectProperty m_pCarouselPanel; // 0x194
	ObjectProperty m_pBack; // 0x19c
	ObjectProperty m_grTencentJson; // 0x1a4
	ObjectProperty m_InputBack; // 0x1ac
};

struct APhysicsVolume : AVolume {
	FVector ZoneVelocity; // 0x2bc
	char bVelocityAffectsWalking : 1; // 0x2c8
	char bPainCausing : 1; // 0x2c8
	char bAIShouldIgnorePain : 1; // 0x2c8
	char bEntryPain : 1; // 0x2c8
	char BACKUP_bPainCausing : 1; // 0x2c8
	char bDestructive : 1; // 0x2c8
	char bNoInventory : 1; // 0x2c8
	char bMoveProjectiles : 1; // 0x2c8
	char bBounceVelocity : 0; // 0x2c8
	char bNeutralZone : 0; // 0x2c8
	char bCrowdAgentsPlayDeathAnim : 0; // 0x2c8
	char bPhysicsOnContact : 0; // 0x2c8
	char bWaterVolume : 0; // 0x2c8
	char m_bIsElevating : 0; // 0x2c8
	char m_bClampPawnVelocity : 0; // 0x2c8
	float GroundFriction; // 0x2cc
	float TerminalVelocity; // 0x2d0
	float DamagePerSec; // 0x2d4
	UDamageType* DamageType; // 0x2d8
	int32_t Priority; // 0x2e0
	float FluidFriction; // 0x2e4
	float PainInterval; // 0x2e8
	float RigidBodyDamping; // 0x2ec
	float MaxDampingForce; // 0x2f0
	ObjectProperty PainTimer; // 0x2f4
	ObjectProperty DamageInstigator; // 0x2fc
	ObjectProperty NextPhysicsVolume; // 0x304
	FVector2D m_fClampedPawnVelocity; // 0x30c
};

struct USeqAct_LevelStreamingBase : USeqAct_Latent {
	char bMakeVisibleAfterLoad : 1; // 0x120
	char bShouldBlockOnLoad : 1; // 0x120
};

struct ATgDevice_RiderLegMarksExplode : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_ListenConsumeMarks; // 0xa04
	float s_fDamage; // 0xa0c
};

struct ATgDeploy_Transporter : ATgDeployable {
	FVector m_StartLocation; // 0x46c
	FVector m_ProjectileEndLocation; // 0x478
	float m_fProjectileHeight; // 0x484
	ObjectProperty m_DeploymentFX; // 0x488
	FVector r_TeleportLocation; // 0x490
};

struct UUISafeFrame : UTgGfxScene {
	ObjectProperty m_mcAdjust; // 0x1ec
	ObjectProperty m_mcAccept; // 0x1f4
};

struct UNxForceFieldGenericComponent : UNxForceFieldComponent {
	float RoughExtentX; // 0x2bc
	float RoughExtentY; // 0x2c0
	float RoughExtentZ; // 0x2c4
	FFG_ForceFieldCoordinates Coordinates; // 0x2c8
	FVector Constant; // 0x2cc
	FVector PositionMultiplierX; // 0x2d8
	FVector PositionMultiplierY; // 0x2e4
	FVector PositionMultiplierZ; // 0x2f0
	FVector PositionTarget; // 0x2fc
	FVector VelocityMultiplierX; // 0x308
	FVector VelocityMultiplierY; // 0x314
	FVector VelocityMultiplierZ; // 0x320
	FVector VelocityTarget; // 0x32c
	FVector Noise; // 0x338
	FVector FalloffLinear; // 0x344
	FVector FalloffQuadratic; // 0x350
	float TorusRadius; // 0x35c
	FPointer Kernel; // 0x360
};

struct UTgAIBehaviorCondition_Energy : UTgAIBehaviorCondition {
	float energy; // 0x98
};

struct UTgBattleCheatManager : UPComCheatManager {
	ObjectProperty m_DebugCameraController; // 0xa0
	TArray<ObjectProperty> m_DebugPlayerStarts; // 0xa8
	int32_t m_nLastSlomoWindowId; // 0xb8
	char m_bInfiniteEnergy : 1; // 0xbc
	char m_bBaseAmmoRegenDisabled : 1; // 0xbc
	char m_bLogAmmoRegen : 1; // 0xbc
};

struct UTgNewUserSettings : UObject {
	TArray<int32_t> WatchedVideoIds; // 0x60
};

struct UUIScene_UICompetitive : UUIScene {
	ObjectProperty m_mcTiers; // 0x1cc
	ObjectProperty m_TierTagList; // 0x1d4
	ObjectProperty m_TierList; // 0x1dc
	TArray<ObjectProperty> m_TierListData; // 0x1e4
	TArray<ObjectProperty> m_TierTagData; // 0x1f4
	ObjectProperty m_mcOverview; // 0x204
	ObjectProperty m_mcOverviewTitle[0x4]; // 0x20c
	ObjectProperty m_mcOverviewRankIcon; // 0x22c
	ObjectProperty m_pOverviewProgress; // 0x234
	ObjectProperty m_pButtonLeaderboard; // 0x23c
	ObjectProperty m_pButtonPlay; // 0x244
	ObjectProperty m_mcRewards; // 0x24c
	ObjectProperty m_RewardsList; // 0x254
	ObjectProperty m_RewardsPortraitList; // 0x25c
	ObjectProperty m_mcRewardsTitle[0x4]; // 0x264
	ObjectProperty m_pPlayAction; // 0x284
	ObjectProperty m_pLeaderboardAction; // 0x28c
};

struct UGameSkelCtrl_Recoil : USkelControlBase {
	char bBoneSpaceRecoil : 1; // 0xd0
	char bPlayRecoil : 1; // 0xd0
	char bOldPlayRecoil : 1; // 0xd0
	char bApplyControl : 1; // 0xd0
	char m_bBlendIn : 1; // 0xd0
	FRecoilDef Recoil; // 0xd4
	FVector2D Aim; // 0x144
	float m_bBlendInRemainingTime; // 0x14c
	FVector m_BlendLoc; // 0x150
	FRotator m_BlendRot; // 0x15c
};

struct UGameAICommand : UAICommandBase {
	ObjectProperty ChildCommand; // 0x60
	FName ChildStatus; // 0x68
	ObjectProperty GameAIOwner; // 0x70
	FName Status; // 0x78
	char bAllowNewSameClassInstance : 1; // 0x80
	char bReplaceActiveSameClassInstance : 1; // 0x80
	char bAborted : 1; // 0x80
	char bIgnoreNotifies : 1; // 0x80
	char bIgnoreStepAside : 1; // 0x80
	char bPendingPop : 1; // 0x80
};

struct ATgCoverPoint : ATgAIAnnotation {
	char m_bLeanLeft : 1; // 0x390
	char m_bLeanRight : 1; // 0x390
	char m_bAllowPopup : 1; // 0x390
	char m_bAllowMantle : 1; // 0x390
	FVector m_vLeanLeft; // 0x394
	FVector m_vLeanRight; // 0x3a0
	FVector m_vPopUp; // 0x3ac
};

struct UInstancedStaticMeshComponent : UStaticMeshComponent {
	TArray<FInstancedStaticMeshInstanceData> PerInstanceData; // 0x310
	TArray<FInstancedStaticMeshInstanceData> PerInstanceSMData; // 0x320
	int32_t NumPendingLightmaps; // 0x330
	int32_t ComponentJoinKey; // 0x334
	TArray<FInstancedStaticMeshMappingInfo> CachedMappings; // 0x338
	int32_t InstancingRandomSeed; // 0x348
	int32_t InstanceStartCullDistance; // 0x34c
	int32_t InstanceEndCullDistance; // 0x350
	FBoxSphereBounds StreamingBounds; // 0x354
	FPointer InstanceBufferResource; // 0x370
	FPointer InstancedMeshStreamGroup; // 0x378
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x380
	char bStreamInstanceBuffer : 1; // 0x380
	char bDontResolveInstancedLightmaps : 1; // 0x380
};

struct UTgObjectReferencer : UObjectReferencer {
	FPointer m_Manifest; // 0x74
};

struct ATgDevice_EmitterMod : ATgDevice {
	char m_bIsOnOthers : 1; // 0xa04
	char m_bIsOnOwner : 1; // 0xa04
};

struct UApexAsset : UObject {
	FString OriginalApexName; // 0x60
	TArray<ComponentProperty> ApexComponents; // 0x70
};

struct USeqAct_Teleport : USequenceAction {
	char bUpdateRotation : 1; // 0x108
	char bCheckOverlap : 1; // 0x108
	char bResetVelocity : 1; // 0x108
	float TeleportDistance; // 0x10c
	TArray<ObjectProperty> TeleportVolumes; // 0x110
};

struct UTgAnimTreeComment : UAnimObject {
	char m_bDrawBox : 1; // 0x68
};

struct UParticleModuleLocationSkelVertSurface : UParticleModuleLocationBase {
	ELocationSkelVertSurfaceSource SourceType; // 0x68
	FVector UniversalOffset; // 0x6c
	char bUpdatePositionEachFrame : 1; // 0x78
	char bOrientMeshEmitters : 1; // 0x78
	char bEnforceNormalCheck : 1; // 0x78
	FName SkelMeshActorParamName; // 0x7c
	TArray<FName> ValidAssociatedBones; // 0x84
	FVector NormalToCompare; // 0x94
	float NormalCheckToleranceDegrees; // 0xa0
	float NormalCheckTolerance; // 0xa4
	TArray<int32_t> ValidMaterialIndices; // 0xa8
};

struct UMcpClashMobBase : UMcpServiceBase {
	FString McpClashMobClassName; // 0x78
	DelegateProperty __OnQueryChallengeListComplete__Delegate; // 0x88
	DelegateProperty __OnDownloadChallengeFileComplete__Delegate; // 0x98
	DelegateProperty __OnAcceptChallengeComplete__Delegate; // 0xa8
	DelegateProperty __OnQueryChallengeUserStatusComplete__Delegate; // 0xb8
	DelegateProperty __OnUpdateChallengeUserProgressComplete__Delegate; // 0xc8
	DelegateProperty __OnUpdateChallengeUserRewardComplete__Delegate; // 0xd8
};

struct UMaterialExpressionParameter : UMaterialExpression {
	FName ParameterName; // 0xb0
	FGuid ExpressionGUID; // 0xb8
	FName Group; // 0xc8
};

struct UTgControlModule_SpectatorOverview : UTgControlModule_Spectator {
	float DirectorModeSpectatorStallZ; // 0x78
	float DirectorModeSpectatorMinStallZ; // 0x7c
};

struct ATgDevice_DruidRMBTargeting : ATgDevice {
	ObjectProperty m_CachedDruid; // 0xa04
	float m_fPreferredTargetGracePeriod; // 0xa0c
	float m_fUpdateTargetSamplingInterval; // 0xa10
	float m_fDelayUpdateTargetSample; // 0xa14
	ObjectProperty m_pLastPreferredTarget; // 0xa18
	float m_fTimeOfLastPreferredTargetValidation; // 0xa20
};

struct ATgPawn_Rider : ATgPawn_Character {
	ObjectProperty m_CachedRiderUlt; // 0x3160
	ObjectProperty m_CachedRiderMovement; // 0x3168
	float m_fLastSelfShieldFxTimestamp; // 0x3170
	char m_bUseCameraOffsetOverride : 1; // 0x3174
	FVector m_vCameraOffsetOverride; // 0x3178
	float m_fVelocityLag; // 0x3184
	float m_fPrevSpeed; // 0x3188
	float m_fVelocityLagRecoverySpeed; // 0x318c
	float m_fVelocityLagStrength; // 0x3190
	float m_fSmoothedVelocityLag; // 0x3194
	float m_fSmoothedVelocityLagSpeed; // 0x3198
	float m_fDeathFadeMaterialEndTimestamp; // 0x319c
	float m_fDeathFadeMaterialTime; // 0x31a0
	FVector m_vLastAccelDir; // 0x31a4
	float m_fMaxMovementDegPerSec; // 0x31b0
	float m_fGreaterGoodLifesteal; // 0x31b4
	FRiderMarkedTargetInfo r_RiderMarkedTargets[0x5]; // 0x31b8
	FRiderLastMaxMarkedTarget r_RiderLastMaxMarkedTarget; // 0x31e0
};

struct ATgDevice_ChainLightning : ATgDevice_ArcingBeam {
	ObjectProperty m_CachedInhand; // 0xa1c
};

struct ATgKismetTestActor : ADynamicSMActor {
	int32_t m_nTestCount; // 0x2d0
	int32_t r_nCurrentTest; // 0x2d4
	int32_t r_nPassCount; // 0x2d8
	int32_t r_nFailCount; // 0x2dc
	TArray<ObjectProperty> c_aTextures; // 0x2e0
	ObjectProperty c_PassSound; // 0x2f0
	ObjectProperty c_FailSound; // 0x2f8
	TArray<ObjectProperty> c_aResultActors; // 0x300
};

struct UMaterialExpressionQualitySwitch : UMaterialExpression {
	FExpressionInput High; // 0xb0
	FExpressionInput Medium; // 0xe4
	FExpressionInput Low; // 0x118
};

struct UUIData_SocialAction : UUIData {
	TArray<FString> m_sTitle; // 0x64
	TArray<FString> m_sData; // 0x74
	SAACT_ACTION m_eAction; // 0x84
	SAL_LIST m_eSourceList; // 0x85
	FPointer m_pSelectorFunc; // 0x88
	char m_bCloseOnAction : 1; // 0x90
	char m_bAllowSelectAll : 1; // 0x90
};

struct UForceFieldShapeSphere : UForceFieldShape {
	ComponentProperty Shape; // 0x60
};

struct UOnlineTitleFileDownloadMcp : UOnlineTitleFileDownloadBase {
	TArray<FTitleFileMcp> TitleFiles; // 0x104
	int32_t DownloadCount; // 0x114
};

struct USystem : USubsystem {
	int32_t StaleCacheDays; // 0x68
	int32_t MaxStaleCacheSize; // 0x6c
	int32_t MaxOverallCacheSize; // 0x70
	int32_t PackageSizeSoftLimit; // 0x74
	float AsyncIOBandwidthLimit; // 0x78
	FString SavePath; // 0x7c
	FString CachePath; // 0x8c
	FString CacheExt; // 0x9c
	TArray<FString> Paths; // 0xac
	TArray<FString> SeekFreePCPaths; // 0xbc
	TArray<FString> ScriptPaths; // 0xcc
	TArray<FString> FRScriptPaths; // 0xdc
	TArray<FString> CutdownPaths; // 0xec
	TArray<FName> Suppress; // 0xfc
	TArray<FString> Extensions; // 0x10c
	TArray<FString> SeekFreePCExtensions; // 0x11c
	TArray<FString> LocalizationPaths; // 0x12c
	TArray<FString> ArchivePaths; // 0x13c
	FString TextureFileCacheExtension; // 0x14c
};

struct UTgGameDC_MapEntity : UTgDataChunk {
	int32_t m_nPawnId; // 0x158
};

struct UFactory : UObject {
	UObject* SupportedClass; // 0x60
	UObject* ContextClass; // 0x68
	FString Description; // 0x70
	TArray<FString> Formats; // 0x80
	char bCreateNew : 1; // 0x90
	char bEditAfterNew : 1; // 0x90
	char bEditorImport : 1; // 0x90
	char bText : 1; // 0x90
	int32_t AutoPriority; // 0x94
	TArray<FString> ValidGameNames; // 0x98
};

struct AHUD : AActor {
	FColor WhiteColor; // 0x280
	FColor GreenColor; // 0x284
	FColor RedColor; // 0x288
	ObjectProperty PlayerOwner; // 0x28c
	char bLostFocusPaused : 1; // 0x294
	char bShowHUD : 1; // 0x294
	char bShowScores : 1; // 0x294
	char bShowDebugInfo : 1; // 0x294
	char bShowBadConnectionAlert : 1; // 0x294
	char bShowDirectorInfoDebug : 1; // 0x294
	char bShowDirectorInfoHUD : 1; // 0x294
	char bMessageBeep : 1; // 0x294
	char bRenderFullScreen : 0; // 0x294
	char bScaleCanvasForCinematicMode : 0; // 0x294
	char bShowOverlays : 0; // 0x294
	float HudCanvasScale; // 0x298
	TArray<ObjectProperty> PostRenderedActors; // 0x29c
	TArray<FConsoleMessage> ConsoleMessages; // 0x2ac
	FColor ConsoleColor; // 0x2bc
	int32_t ConsoleMessageCount; // 0x2c0
	int32_t ConsoleFontSize; // 0x2c4
	int32_t MessageFontOffset; // 0x2c8
	int32_t MaxHUDAreaMessageCount; // 0x2cc
	FHudLocalizedMessage LocalMessages[0x8]; // 0x2d0
	float ConsoleMessagePosX; // 0x550
	float ConsoleMessagePosY; // 0x554
	ObjectProperty Canvas; // 0x558
	float LastHUDRenderTime; // 0x560
	float RenderDelta; // 0x564
	float SizeX; // 0x568
	float SizeY; // 0x56c
	float CenterX; // 0x570
	float CenterY; // 0x574
	float RatioX; // 0x578
	float RatioY; // 0x57c
	TArray<FName> DebugDisplay; // 0x580
	TArray<FKismetDrawTextInfo> KismetTextInfo; // 0x590
};

struct UTgGameplayCurvesSet_Simple : UTgGameplayCurvesSet {
	FRawDistributionFloat PrimaryCurve; // 0x64
	FName PrimaryCurveTabName; // 0x88
	FName PrimaryCurveName; // 0x90
};

struct ATgDevice_CombatSlide : ATgDevice_Charge {
	int32_t m_nEyeheightAdjustmentWhileSliding; // 0xa78
	float m_fEyeHeightSmoothFactor; // 0xa7c
};

struct UAkBank : UObject {
	char AutoLoad : 1; // 0x60
	char GenerateDefinition : 1; // 0x60
	char bIsAsyncLoading : 1; // 0x60
};

struct ATgProj_ShadowStickyBombHoming : ATgProj_ShadowStickyBomb {
	float m_fRetargetTime; // 0x5c8
	float m_fRetargetingTimer; // 0x5cc
};

struct ATgPawn_Vanguard : ATgPawn_Character {
	ObjectProperty r_ActiveShield; // 0x3160
	char r_bShieldWasDestroyed : 1; // 0x3168
	ObjectProperty c_UltTarget; // 0x316c
	ObjectProperty r_UltTargetForKillCam; // 0x3174
	FMap_Mirror m_CachedDevices; // 0x317c
};

struct USoundNodeWave : USoundNode {
	int32_t CompressionQuality; // 0x74
	char bForceRealTimeDecompression : 1; // 0x78
	char bLoopingSound : 1; // 0x78
	char bDynamicResource : 1; // 0x78
	char bUseTTS : 1; // 0x78
	char bProcedural : 1; // 0x78
	char bMature : 1; // 0x78
	char bManualWordWrap : 1; // 0x78
	char bSingleLine : 1; // 0x78
	ETTSSpeaker TTSSpeaker; // 0x7c
	EDecompressionType DecompressionType; // 0x7d
	EDetailMode MobileDetailMode; // 0x7e
	FString SpokenText; // 0x80
	float Volume; // 0x90
	float Pitch; // 0x94
	float Duration; // 0x98
	int32_t NumChannels; // 0x9c
	int32_t SampleRate; // 0xa0
	FUntypedBulkData_Mirror RawData; // 0xa4
	FPointer VorbisDecompressor; // 0xe4
	FPointer RawPCMData; // 0xec
	int32_t RawPCMDataSize; // 0xf4
	FUntypedBulkData_Mirror CompressedPCData; // 0xf8
	FUntypedBulkData_Mirror CompressedXbox360Data; // 0x138
	FUntypedBulkData_Mirror CompressedDingoData; // 0x178
	FUntypedBulkData_Mirror CompressedPS3Data; // 0x1b8
	FUntypedBulkData_Mirror CompressedWiiUData; // 0x1f8
	FUntypedBulkData_Mirror CompressedIPhoneData; // 0x238
	FUntypedBulkData_Mirror CompressedFlashData; // 0x278
	FUntypedBulkData_Mirror CompressedOrbisData; // 0x2b8
	int32_t ResourceID; // 0x2f8
	int32_t ResourceSize; // 0x2fc
	FPointer ResourceData; // 0x300
	TArray<FSubtitleCue> Subtitles; // 0x308
	TArray<FLocalizedSubtitle> LocalizedSubtitles; // 0x318
};

struct UInterpTrackAnimControl : UInterpTrackFloatBase {
	TArray<ObjectProperty> AnimSets; // 0xb8
	FName SlotName; // 0xc8
	TArray<FAnimControlTrackKey> AnimSeqs; // 0xd0
	char bEnableRootMotion : 1; // 0xe0
	char bSkipAnimNotifiers : 1; // 0xe0
};

struct UMaterialExpressionStaticSwitchParameter : UMaterialExpressionStaticBoolParameter {
	FExpressionInput A; // 0xdc
	FExpressionInput B; // 0x110
};

struct UMaterialExpressionFunctionOutput : UMaterialExpression {
	FString OutputName; // 0xb0
	FString Description; // 0xc0
	int32_t SortPriority; // 0xd0
	FExpressionInput A; // 0xd4
	char bLastPreviewed : 1; // 0x108
	FGuid Id; // 0x10c
};

struct UParticleModuleVelocity : UParticleModuleVelocityBase {
	FRawDistributionVector StartVelocity; // 0x6c
	FRawDistributionFloat StartVelocityRadial; // 0x90
};

struct ATgDeploy_GeometryEffectField : ATgDeploy_EffectField {
	TArray<ObjectProperty> m_OverlappingActors; // 0x4a0
	TArray<FVector> m_DesiredPushDirection; // 0x4b0
	char m_bPushOverlappingActors : 1; // 0x4c0
	char m_bAllyPassthrough : 1; // 0x4c0
	char m_bEnemyPassthrough : 1; // 0x4c0
	float m_fPushFactor; // 0x4c4
};

struct UPostProcessEffect : UObject {
	char bShowInEditor : 1; // 0x60
	char bShowInGame : 1; // 0x60
	char bUseWorldSettings : 1; // 0x60
	char m_D3D11Only : 1; // 0x60
	char bAffectsLightingOnly : 1; // 0x60
	FName EffectName; // 0x64
	int32_t NodePosY; // 0x6c
	int32_t NodePosX; // 0x70
	int32_t DrawWidth; // 0x74
	int32_t DrawHeight; // 0x78
	int32_t OutDrawY; // 0x7c
	int32_t InDrawY; // 0x80
	ESceneDepthPriorityGroup SceneDPG; // 0x84
};

struct USeqAct_Gate : USequenceAction {
	char bOpen : 1; // 0x108
	int32_t AutoCloseCount; // 0x10c
	int32_t CurrentCloseCount; // 0x110
};

struct ULineBatchComponent : UPrimitiveComponent {
	FPointer FPrimitiveDrawInterfaceVfTable; // 0x24c
	FPointer FPrimitiveDrawInterfaceView; // 0x254
	TArray<FPointer> BatchedLines; // 0x25c
	TArray<FPointer> BatchedPoints; // 0x26c
	float DefaultLifeTime; // 0x27c
};

struct UMeshBeacon : UObject {
	FPointer VfTable_FTickableObject; // 0x60
	int32_t MeshBeaconPort; // 0x68
	FPointer Socket; // 0x6c
	char bIsInTick : 1; // 0x74
	char bWantsDeferredDestroy : 1; // 0x74
	char bShouldTick : 1; // 0x74
	float HeartbeatTimeout; // 0x78
	float ElapsedHeartbeatTime; // 0x7c
	FName BeaconName; // 0x80
	int32_t SocketSendBufferSize; // 0x88
	int32_t SocketReceiveBufferSize; // 0x8c
	int32_t MaxBandwidthTestBufferSize; // 0x90
	int32_t MinBandwidthTestBufferSize; // 0x94
	float MaxBandwidthTestSendTime; // 0x98
	float MaxBandwidthTestReceiveTime; // 0x9c
	int32_t MaxBandwidthHistoryEntries; // 0xa0
};

struct UTgAnimNodeBlendByDeviceEquipped : UTgAnimNodeBlendList {
	int32_t m_DeviceId; // 0x168
};

struct UTgAIBehaviorComposite_SubTree : UTgAIBehaviorComposite {
	ObjectProperty ChildTree; // 0xb8
};

struct ATgDevice_CorvusBeacon : ATgDevice_Mark {
	char m_bBeaconCanBounce : 1; // 0xa04
};

struct ATgDevice_CorrupterPassive : ATgDevice {
	ObjectProperty m_Corrupter; // 0xa04
	int32_t nChainMax; // 0xa0c
};

struct UAnimNode_MultiBlendPerBone : UAnimNodeBlendBase {
	ObjectProperty PawnOwner; // 0x114
	TArray<FPerBoneMaskInfo> MaskList; // 0x11c
	EBlendType RotationBlendType; // 0x12c
};

struct ATgDevice_MorningBreath : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_ListenConsumeMarks; // 0xa04
};

struct UTgAbyssalEchoes : UObject {
	float m_fAbyssalEchoPercent; // 0x60
	float m_fViktorOverridePercent; // 0x64
	ObjectProperty m_parentGame; // 0x68
	float m_fEchoSpawnDuration; // 0x70
	float m_fEchoSpawnTimer; // 0x74
	float m_fEchoTimeoutTimer; // 0x78
	char m_bSpawnedEcho : 1; // 0x7c
	char m_bEchoEnraged : 1; // 0x7c
	char m_bSpawnAttempt1 : 1; // 0x7c
	char m_bSpawnAttempt2 : 1; // 0x7c
	char m_bSpawnAttempt3 : 1; // 0x7c
	int32_t m_nHighestTDMScore; // 0x80
	int32_t m_nHighestOnslaughtScore; // 0x84
};

struct UTgAIBehaviorCondition_IsTargetTypeInLeash : UTgAIBehaviorCondition {
	ECombatTargetType TargetType; // 0x98
};

struct UUIDataGoals : UUIDataObject {
	ObjectProperty m_GoldLimit; // 0x74
	ObjectProperty m_GoldLimitBoosted; // 0x7c
	ObjectProperty m_VIPLimit; // 0x84
	ObjectProperty m_VIPLimitBoosted; // 0x8c
	TArray<ObjectProperty> m_Ranked; // 0x94
	TMap<None, None> m_CurrencyStats; // 0xa4
	TMap<None, None> m_WOTDByBotId; // 0xec
	ObjectProperty m_PlayedRankedTracker; // 0x134
	TMap<None, None> m_Goals; // 0x13c
	TMap<None, None> m_ItemIdToMasteryLevel; // 0x184
	TArray<ObjectProperty> m_ChallengeList; // 0x1cc
	TArray<ObjectProperty> m_QuestList; // 0x1dc
	TArray<ObjectProperty> m_EventGoalList; // 0x1ec
	TArray<ObjectProperty> m_IncompleteEventChallengeGoalList; // 0x1fc
	ObjectProperty m_ChampionQuest; // 0x20c
	ObjectProperty m_DailyLoginsQuest; // 0x214
	ObjectProperty m_LoreQuest; // 0x21c
	TArray<ObjectProperty> m_QuestsCompleted; // 0x224
	char m_bQuestsSeenToday : 1; // 0x234
	char m_bPlayerLoggedIn : 1; // 0x234
	char m_bRewardClaimedToday : 1; // 0x234
	char m_bDayHasRolledOver : 1; // 0x234
	char m_bHasQuestProgress : 1; // 0x234
	char m_bHasQuestActivities : 1; // 0x234
	char m_bHasQuestRewards : 1; // 0x234
	char m_bFirstSpecialEventUpdate : 1; // 0x234
	char m_bFirstItemQuestUpdate : 0; // 0x234
	int32_t m_nConsecutiveRewardDays; // 0x238
	int32_t m_nLengthOfDay; // 0x23c
	float m_fTimeTillNextDay; // 0x240
	float m_fTimeTillNextMonth; // 0x244
	Fdword m_dwLastLoreQuestGoal; // 0x248
	int32_t m_nPlayerLevel; // 0x24c
	ObjectProperty m_pChallengeSystemData; // 0x250
};

struct UUIComponent_Tooltip : UUIComponent_Display {
	UIALIGNINGTYPE m_eAlignHorz; // 0x124
	UIALIGNINGTYPE m_eAlignVert; // 0x125
	ObjectProperty m_pDisplay; // 0x128
	float m_fAnimInOutTime; // 0x130
	float m_fAnimInDelay; // 0x134
	char m_bApplyPositionAlignment : 1; // 0x138
	char m_bUseGlobalPositioning : 1; // 0x138
	ObjectProperty m_TF; // 0x13c
	ObjectProperty m_BG; // 0x144
	int32_t m_nBGPadding; // 0x14c
};

struct UUIData_LastDamageDoneInstance : UUIData {
	Fdword m_dwCount; // 0x64
	Fdword m_dwDamage; // 0x68
	Fdword m_dwDamageTypeId; // 0x6c
	Fdword m_dwSourceDeviceId; // 0x70
	Fdword m_dwFireModeIndex; // 0x74
};

struct UUIScene_UIHome : UUIScene {
	ObjectProperty m_mcPanels[0x9]; // 0x1cc
	ObjectProperty m_CarouselPanel; // 0x214
	ObjectProperty m_GoToChestButton; // 0x21c
	ObjectProperty m_GoToBattlePassButton; // 0x224
	ObjectProperty m_GoToEventButton; // 0x22c
	ObjectProperty m_GoToItemButton; // 0x234
	ObjectProperty m_grHome; // 0x23c
	ObjectProperty m_pGoToEventInput; // 0x244
	ObjectProperty m_pSocialInput; // 0x24c
	ObjectProperty m_pGoToChestInput; // 0x254
	ObjectProperty m_pGoToBattlePassInput; // 0x25c
	ObjectProperty m_pGoToItemInput; // 0x264
	ObjectProperty m_pTencentButton; // 0x26c
	ObjectProperty m_pTencentJsonPanel; // 0x274
	ObjectProperty m_mcLiveVideoContainer; // 0x27c
	ObjectProperty m_LiveVideoWatchButton; // 0x284
	ObjectProperty m_LiveVideoCloseButton; // 0x28c
	FJsonFeatureData m_LiveVideoJson; // 0x294
	char m_bQueued : 1; // 0x32c
	char m_bDeserter : 1; // 0x32c
	char m_bLoadingImages : 1; // 0x32c
	char m_bCheckBountyAccountLink : 1; // 0x32c
	float m_fQueuedTime; // 0x330
	float m_fShowLiveVideoDelay; // 0x334
	TArray<FJsonFeatureData> m_FeatureData; // 0x338
	TMap<None, None> m_FeatureMap; // 0x348
	int32_t m_nDotCount; // 0x390
	int32_t m_nTotalDots; // 0x394
	float m_fQueueAnimationTimer; // 0x398
	float m_fQueueAnimationInterval; // 0x39c
	EFeaturedSectionType m_eFeatureType; // 0x3a0
	EFeaturedSectionType m_eFeatureTypeOverride; // 0x3a1
	FMeshData m_FeatureMeshData; // 0x3a4
	int32_t m_nFeaturedItemId; // 0x3bc
	int32_t m_nFeaturedLocationId; // 0x3c0
	FJsonHomeFeatureData m_pFeatureOverrideData; // 0x3c4
	int32_t m_nLastLevelAcknowledged; // 0x408
	float m_fInstallCheckTimer; // 0x40c
	float m_fInstallCheckInterval; // 0x410
};

struct AVolumePathNode : APathNode {
	float StartingRadius; // 0x378
	float StartingHeight; // 0x37c
};

struct UTgInventoryObject_Listen_ActiveWhileInGrass : UTgInvListener {
	char m_bCachedIsInGrass : 1; // 0xc4
	float s_fExitTimestamp; // 0xc8
};

struct UTgAIBehaviorCondition_LanepusherHealthPercent : UTgAIBehaviorCondition {
	float HealthPct; // 0x98
};

struct UUIComponent_ChestPanelTencent : UUIComponent_Display {
	ObjectProperty m_pSprayData; // 0x124
	ObjectProperty m_mcName; // 0x12c
	ObjectProperty m_mcType; // 0x134
	ObjectProperty m_mcIcon; // 0x13c
	ObjectProperty m_mcSprayIcon; // 0x144
	ObjectProperty m_mcSprayIconGfx; // 0x14c
	ObjectProperty m_mcSprayIconCard; // 0x154
	ObjectProperty m_mcSprayIconRarity; // 0x15c
	ObjectProperty m_mcRentalLabel; // 0x164
	ObjectProperty m_mcRentalTime; // 0x16c
	ObjectProperty m_pCTA; // 0x174
	FString m_sSprayName; // 0x17c
	FString m_sChestName; // 0x18c
	int32_t m_nSprayIconIndex; // 0x19c
	int32_t m_nSprayRarityIndex; // 0x1a0
	int32_t m_nChestIconFrame; // 0x1a4
	FPointer m_pVendorItem; // 0x1a8
};

struct UInterpTrackInstColorProp : UInterpTrackInstProperty {
	FPointer ColorProp; // 0x70
	FColor ResetColor; // 0x78
};

struct UTgEffectModifyProperty_Ability1 : UTgEffectModifyProperty {
	TArray<ObjectProperty> m_LastRetrievedOverrides; // 0xbc
};

struct UUIDataStore_DynamicResource : UUIDataStore {
	ObjectProperty ProfileProvider; // 0x98
	ObjectProperty GameResourceDataStore; // 0xa0
	TArray<FDynamicResourceProviderDefinition> ResourceProviderDefinitions; // 0xa8
	FMultiMap_Mirror ResourceProviders; // 0xb8
};

struct UUIDataChatManager : UUIDataObject {
	char m_bSentReplyHelp : 1; // 0x74
	char m_bLoadedEOMLobby : 1; // 0x74
	TArray<FChannelChatData> m_AllChatData; // 0x78
	TArray<FString> m_ReplyTargets; // 0x88
	TMap<None, None> m_NameToPlayerIdMap; // 0x98
};

struct USkelControl_TwistBone : USkelControlBase {
	FName SourceBoneName; // 0xd0
	float TwistAngleScale; // 0xd8
};

struct UAnalyticEventsBase : UPlatformInterfaceBase {
	char bSessionInProgress : 1; // 0x80
	char bAutoStartSession : 1; // 0x80
	int32_t SessionPauseThresholdSec; // 0x84
	FString UserId; // 0x88
};

struct UAkEvent : UAkBaseSoundObject {
	ObjectProperty RequiredBank; // 0x60
	ObjectProperty m_FirstPersonEvent; // 0x68
	ObjectProperty m_ShutdownEvent; // 0x70
	char m_bIgnoreOcclusion : 1; // 0x78
	char m_bForce1pAnd3p : 1; // 0x78
};

struct UTgSeqAct_SetCreditGainBlock : USequenceAction {
	int32_t m_bBlockCreditGain; // 0x108
};

struct ATgDevice_Aegis : ATgDevice {
	float m_fPreviousMinCooldown; // 0xa04
};

struct ATgWeaponMeshActor_Orb : ATgWeaponMeshActor {
	float m_fFireGlowFadeTime; // 0x450
	float m_fRemainingGlowFadeTime; // 0x454
};

struct UTgGamePhase_PlaySound : UTgGamePhase {
	ENotifySound m_eSoundID; // 0xb8
};

struct UUIScene_UIAcquisition : UUIScene {
	ObjectProperty m_AcquisitionInput; // 0x1cc
};

struct UTgAnimBlendByPaladinsCharacter_BarrierTank : UTgAnimBlendByPaladinsCharacter {
	TArray<FName> m_AmmoSkelControlNames; // 0x544
	TArray<ObjectProperty> m_AmmoSkelControls; // 0x554
	ObjectProperty m_CachedBarrierTankPawn; // 0x564
};

struct ATgProj_Bombardment : ATgProj_Simulated {
	float m_fFadeInTime; // 0x52c
	float m_fCurrentFade; // 0x530
	ObjectProperty m_CachedDecalMaterial; // 0x534
};

struct USeqAct_ToggleHidden : USeqAct_Toggle {
	char bToggleBasedActors : 1; // 0x108
	TArray<AActor*> IgnoreBasedClasses; // 0x10c
};

struct UTgAIBehaviorAction_PurchaseBurnCards : UTgAIBehaviorAction {
	int32_t BurnCardId; // 0x94
	int32_t DesiredRank; // 0x98
	char bDontPay : 1; // 0x9c
};

struct UParticleModuleSubUVMovie : UParticleModuleSubUV {
	char bUseEmitterTime : 1; // 0x90
	FRawDistributionFloat FrameRate; // 0x94
	int32_t StartingFrame; // 0xb8
};

struct UTgAnimNodeJumpLeanOffset : UAnimNodeAimOffset {
	float JumpLeanStrength; // 0x16c
	float MaxLeanChangeSpeed; // 0x170
	char bMultiplyByZVelocity : 1; // 0x174
	ObjectProperty CachedAimNode; // 0x178
	FName OldAimProfileName; // 0x180
	FVector2D PreBlendAim; // 0x188
	float LeanWeight; // 0x190
	float LeanWeightTarget; // 0x194
	float BlendTimeToGo; // 0x198
};

struct UUIData_StoreItemFilter : UUIData {
	UIStoreItemSort m_eSortOrder; // 0x64
	UIStoreChampFilter m_eChampFilter; // 0x65
	int32_t m_nChampId; // 0x68
	char m_bItemAvailable : 1; // 0x6c
	char m_bItemNotOwned : 1; // 0x6c
	TArray<int32_t> m_nRarityFilter; // 0x70
};

struct UMorphTarget : UObject {
	TArray<int32_t> MorphLODModels; // 0x60
	int32_t MaterialSlotId; // 0x70
	FName ScalarParameterName; // 0x74
};

struct UTerrainWeightMapTexture : UTexture2D {
	ObjectProperty ParentTerrain; // 0x208
	TArray<FPointer> WeightedMaterials; // 0x210
};

struct USeqEvent_MobileLook : USeqEvent_MobileZoneBase {
	float Yaw; // 0x138
	float StickStrength; // 0x13c
	FVector RotationVector; // 0x140
};

struct UMobileMenuElement : UObject {
	FVector2D VpPos; // 0x60
	FVector2D VpSize; // 0x68
	char bIsVisible : 1; // 0x70
	char bIsActive : 1; // 0x70
};

struct UParticleModuleLocationBoneSocket : UParticleModuleLocationBase {
	ELocationBoneSocketSource SourceType; // 0x68
	ELocationBoneSocketSelectionMethod SelectionMethod; // 0x69
	FVector UniversalOffset; // 0x6c
	TArray<FLocationBoneSocketInfo> SourceLocations; // 0x78
	char bUpdatePositionEachFrame : 1; // 0x88
	char bOrientMeshEmitters : 1; // 0x88
	char bInheritVelocityAtSpawn : 1; // 0x88
	FName SkelMeshActorParamName; // 0x8c
	float LastUpdateTime; // 0x94
};

struct UParticleModuleSize_Seeded : UParticleModuleSize {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x8c
};

struct AMatineeActor : AActor {
	ObjectProperty InterpAction; // 0x280
	char bIsPlaying : 1; // 0x288
	char bReversePlayback : 1; // 0x288
	char bPaused : 1; // 0x288
	char AllAIGroupsInitialized : 1; // 0x288
	float PlayRate; // 0x28c
	float Position; // 0x290
	FName AIGroupNames[0xa]; // 0x294
	ObjectProperty AIGroupPawns[0xa]; // 0x2e4
	int32_t AIGroupInitStage[0xa]; // 0x334
	float ClientSidePositionErrorTolerance; // 0x35c
};

struct USeqCond_CompareFloat : USequenceCondition {
	float ValueA; // 0xec
	float ValueB; // 0xf0
};

struct UTgAIBehaviorAction_SelectLaneCombatTarget_Jungle : UTgAIBehaviorAction {
	char bMustBeWeakest : 1; // 0x94
	EJungleTargetType TargetType; // 0x98
};

struct UTgAchievement_QuestionsLater : UTgAchievement {
	char bTakenDamageYet : 1; // 0x94
	char bHasHitAllEnemies : 1; // 0x94
	TArray<int32_t> EnemyPawnsHit; // 0x98
};

struct UUIComponent_ChampionAbilities : UUIComponent_Display {
	float m_fUltPreviewTimeout; // 0x124
	ObjectProperty m_mcChampHP; // 0x128
	ObjectProperty m_mcUnlockPanel; // 0x130
	ObjectProperty m_mcUnlockPanelPurchase; // 0x138
	ObjectProperty m_mcUnlockPanelPurchasePrice0; // 0x140
	ObjectProperty m_mcUnlockPanelPurchasePrice0Currency; // 0x148
	ObjectProperty m_mcUnlockPanelPurchasePrice1; // 0x150
	ObjectProperty m_mcUnlockPanelPurchasePrice1Currency; // 0x158
	ObjectProperty m_mcUnlockPanelRent; // 0x160
	ObjectProperty m_mcUnlockPanelRentPrice0; // 0x168
	ObjectProperty m_mcUnlockPanelRentPrice0Currency; // 0x170
	ObjectProperty m_mcUnlockPanelFreeRotation; // 0x178
	ObjectProperty m_mcUnlockPanelInputPrompt; // 0x180
	ObjectProperty m_pSkills; // 0x188
	ObjectProperty m_pTalents; // 0x190
	ObjectProperty m_UltPreviewButton; // 0x198
	ObjectProperty m_pAdvancedButton; // 0x1a0
	ObjectProperty m_pAdvancedButtonKey; // 0x1a8
	ObjectProperty m_pTalentsButton; // 0x1b0
	ObjectProperty m_pTalentsButtonKey; // 0x1b8
	ObjectProperty m_pUnlockChampionButton; // 0x1c0
	ObjectProperty m_pVoicePackPreviewButton; // 0x1c8
	ObjectProperty m_grAbilities; // 0x1d0
	ObjectProperty m_pUltPreviewAction; // 0x1d8
	ObjectProperty m_pUnlockChampionAction; // 0x1e0
	ObjectProperty m_pPreviewSkinVoiceAction; // 0x1e8
};

struct UUIComponent_DualButtonPanel : UUIComponent {
	ObjectProperty m_pPanelRoot; // 0x118
	ObjectProperty m_pPanelButton; // 0x120
	ObjectProperty m_pButton; // 0x128
	ObjectProperty m_pButtonCurrency; // 0x130
};

struct UUIData_MatchLobbyChampion : UUIData {
	ObjectProperty m_pChampion; // 0x64
	UIChampionMatchState m_eCurrentLobbyState; // 0x6c
	TArray<int32_t> m_nSelectedByIds; // 0x70
};

struct UTgInventoryObject_Listen_MirrorDamageToHeal : UTgInventoryObject_Listen_AbilityProcBase {
	ObjectProperty m_CachedFiremode; // 0xcc
};

struct UUIDataLeague : UUIData {
	Fdword dwLeagueId; // 0x64
	TArray<ObjectProperty> m_TierArray; // 0x68
	TMap<None, None> m_Tiers; // 0x78
	TMap<None, None> m_TierTypeToTierId; // 0xc0
	TArray<ObjectProperty> m_PlayerArray; // 0x108
	TMap<None, None> m_Players; // 0x118
};

struct UUIScene_UIReferredRewardsPopup : UUIScene {
	ObjectProperty m_grPanel; // 0x1cc
	ObjectProperty m_mcTimeTitle; // 0x1d4
	ObjectProperty m_pTimeSubtitle; // 0x1dc
	ObjectProperty m_pAddReferrerButton; // 0x1e4
	ObjectProperty m_pLevelRewards; // 0x1ec
	ObjectProperty m_pFriendRewards; // 0x1f4
	ObjectProperty m_pAddReferrerAction; // 0x1fc
};

struct UMaterialExpressionComponentMask : UMaterialExpression {
	FExpressionInput Input; // 0xb0
	char R : 1; // 0xe4
	char G : 1; // 0xe4
	char B : 1; // 0xe4
	char A : 1; // 0xe4
};

struct UInterpTrackInstBoolProp : UInterpTrackInstProperty {
	FPointer BoolProp; // 0x70
	int32_t BitMask; // 0x78
	char ResetBool : 1; // 0x7c
};

struct UTgAIBehaviorAction_MoveToCapturePoint : UTgAIBehaviorAction_MoveToTarget {
	ESelectionArbitrator Arbitrator; // 0x9c
	char bTeleport : 1; // 0xa0
};

struct UTgAchievement_HealInOneMatch : UTgAchievement {
	int32_t m_nHealingDealt; // 0x94
};

struct ASkeletalMeshActorMAT : ASkeletalMeshCinematicActor {
	TArray<ObjectProperty> SlotNodes; // 0x2e8
};

struct UAnimNodeMirror : UAnimNodeBlendBase {
	char bEnableMirroring : 1; // 0x114
};

struct ANxTornadoForceFieldCapsule : ANxTornadoForceField {
	ComponentProperty RenderComponent; // 0x304
};

struct USeqAct_Log : USequenceAction {
	char bOutputToScreen : 1; // 0x108
	char bIncludeObjComment : 1; // 0x108
	float TargetDuration; // 0x10c
	FVector TargetOffset; // 0x110
	FString LogMessage; // 0x11c
};

struct UTgGamePhase_Ticket : UTgGamePhase {
	int32_t m_nWinningTickets; // 0xb8
	int32_t m_nScoreForTicketLimitReached; // 0xbc
	int32_t m_nTF1Tickets; // 0xc0
	int32_t m_nTF2Tickets; // 0xc4
};

struct UTgAIInfluenceMap : UObject {
	FPointer VfTable_FTickableObject; // 0x60
	TArray<int32_t> Influences; // 0x68
	FPointer FalloffTable; // 0x78
	ObjectProperty InfluenceGrid; // 0x80
	float TickFrequency; // 0x88
	float InvTickFrequency; // 0x8c
	float Decay; // 0x90
	float Momentum; // 0x94
};

struct UUIComponent_Toggle : UUIComponent_Interactable {
	char m_bActive : 1; // 0x140
	ObjectProperty m_mcActive; // 0x144
};

struct UActorFactoryFracturedStaticMesh : UActorFactory {
	ObjectProperty FracturedStaticMesh; // 0x9c
	FVector DrawScale3D; // 0xa4
};

struct AVolumeTimer : AInfo {
	ObjectProperty V; // 0x280
};

struct ATgGame_Battle_Conquest_Erez : ATgGame_Battle_Conquest {
	int32_t m_nSpawnSiegeWeaponThreshold; // 0x76c
};

struct UUIComponent_CollectToUnlock : UUIComponent_Display {
	ObjectProperty m_mcContainter; // 0x124
	ObjectProperty m_mcTF0; // 0x12c
	ObjectProperty m_mcIcon; // 0x134
	ObjectProperty m_mcTF1; // 0x13c
};

struct ALevelGridVolume : AVolume {
	FString LevelGridVolumeName; // 0x2bc
	LevelGridCellShape CellShape; // 0x2cc
	int32_t Subdivisions[0x3]; // 0x2d0
	float LoadingDistance; // 0x2dc
	float KeepLoadedRange; // 0x2e0
	FKConvexElem CellConvexElem; // 0x2e4
};

struct UTgGamePhase_Bombardment : UTgGamePhase {
	float m_fBombardmentZ; // 0xb8
	FVector m_vBombardmentCenter; // 0xbc
	float m_fBombardmentRadius; // 0xc8
	float m_fBombardmentInnerRadius; // 0xcc
	int32_t m_nFireModeID; // 0xd0
	float m_fBombardmentDelay; // 0xd4
	float m_fBombardmentRate; // 0xd8
	ObjectProperty m_FireMode; // 0xdc
};

struct UTgAIBehaviorAction_MoveToShield : UTgAIBehaviorAction_MoveToTarget {
	char bMustBeEnemy : 1; // 0x9c
	char bIgnoreInsideCollision : 1; // 0x9c
};

struct UUIGameMoviePlayer : UUIMoviePlayer {
	FPointer VfTable_ITgCallbackInterface; // 0x2a0
	int32_t m_nReplayId; // 0x2a8
	int32_t m_nResizeTicks; // 0x2ac
	int32_t m_nChosenQueue; // 0x2b0
	int32_t m_nClearTransitionTicks; // 0x2b4
	char m_bGamepad : 1; // 0x2b8
	char m_bHandheld : 1; // 0x2b8
	char m_bDirectionalNav : 1; // 0x2b8
	char m_bGameWon : 1; // 0x2b8
	char m_bVisible : 1; // 0x2b8
	char m_bTimedQueue : 1; // 0x2b8
	char m_bHasNoPlayer : 1; // 0x2b8
	char m_bNeedsTutorial : 1; // 0x2b8
	char m_bInLoginQueue : 0; // 0x2b8
	char m_bLobbyPlayback : 0; // 0x2b8
	char m_bShowCardTutorialNextTick : 0; // 0x2b8
	char m_bPlayAnnouncerSample : 0; // 0x2b8
	char m_bHasAttemptedAutoReplayDemoRecording : 0; // 0x2b8
	char m_bIsStreaming : 0; // 0x2b8
	float m_fQueueTimer; // 0x2bc
	float m_fFadeKillTimer; // 0x2c0
	float m_fLoginQueueTimer; // 0x2c4
	float m_fTransitionTimer; // 0x2c8
	float m_fLobbyPlaybackTime; // 0x2cc
	float m_fLobbyNextFireTime; // 0x2d0
	float m_fVideoCompletedTimer; // 0x2d4
	FString m_sPass; // 0x2d8
	FString m_sUserName; // 0x2e8
	FString m_SpecTeamNameEnemy; // 0x2f8
	FString m_SpecTeamNameFriendly; // 0x308
	ObjectProperty m_mcMapFrame; // 0x318
	ObjectProperty m_mcMapFrameLarge; // 0x320
	ObjectProperty m_mcKeyboardFocus; // 0x328
	ObjectProperty m_KeyboardComponent; // 0x330
	ObjectProperty m_Chat; // 0x338
	ObjectProperty m_UIDataManager; // 0x340
	FPointer m_ConfigManager; // 0x348
	ObjectProperty m_LandingPanelManager; // 0x350
	ObjectProperty m_NotificationCenterJsonManager; // 0x358
	ObjectProperty m_PatchNotesJsonManager; // 0x360
	ObjectProperty m_StreamManager; // 0x368
	ObjectProperty m_RewardCenterManager; // 0x370
	ObjectProperty m_WebBrowser; // 0x378
	ObjectProperty m_mcSpectatorHUD; // 0x380
	ObjectProperty m_AlienFX; // 0x388
	TMap<None, None> m_Scenes; // 0x390
	TMap<None, None> m_OnlineProfiles; // 0x3d8
	FString m_sPendingOnlineScene; // 0x420
	FString m_sDelayErrorTitle; // 0x430
	FString m_sDelayErrorDesc; // 0x440
	ObjectProperty m_RenderTarget; // 0x450
	ObjectProperty m_BrowserTexture[0x4]; // 0x458
	FString m_Team1Name; // 0x478
	FString m_Team2Name; // 0x488
	ObjectProperty m_akJoinQueue; // 0x498
	ObjectProperty m_AnnouncerManifestGroup; // 0x4a0
	int32_t m_nAnnouncerItemId; // 0x4a8
	ObjectProperty m_akEquippedAnnouncerSound; // 0x4ac
	ObjectProperty m_VoicePackManifestGroup; // 0x4b4
	int32_t m_nVoicePackBotId; // 0x4bc
	int32_t m_nVoicePackSkinId; // 0x4c0
	EVoicePackSound m_eVPSound; // 0x4c4
	float m_fDurationRetrySafeVoicePackLoad; // 0x4c8
	FString m_sRetryVoicePackString; // 0x4cc
	FPComOpenBroadcasterSettings m_StreamSettings; // 0x4dc
	ObjectProperty m_pQuitPromptData; // 0x4e0
	ObjectProperty m_CallbackContainer; // 0x4e8
	float m_fUIAnimTime; // 0x4f0
};

struct UPath_AvoidInEscapableNodes : UPathConstraint {
	int32_t Radius; // 0x6c
	int32_t Height; // 0x70
	int32_t MaxFallSpeed; // 0x74
	int32_t MoveFlags; // 0x78
};

struct UUIScene_UIStoreRentSprayPopup : UUIScene {
	ObjectProperty m_mcTitle; // 0x1cc
	ObjectProperty m_mcRentalDuration; // 0x1d4
	ObjectProperty m_mcChestIcon; // 0x1dc
	ObjectProperty m_mcChestName; // 0x1e4
	ObjectProperty m_mcChestQuantity; // 0x1ec
	ObjectProperty m_mcSprayIcon; // 0x1f4
	ObjectProperty m_mcSprayRarity; // 0x1fc
	ObjectProperty m_mcCursor; // 0x204
	ObjectProperty m_pBack; // 0x20c
	ObjectProperty m_pHoldPrompt; // 0x214
	ObjectProperty m_pPurchaseOptions; // 0x21c
	ObjectProperty m_pCurrency; // 0x224
};

struct UTgCameraModule_SpectatorLockedView : UTgCameraModule_Spectator {
	FRotator WorldViewRotation; // 0x9c
	char bAutoRotate : 1; // 0xa8
	float FOV; // 0xac
	float ZoomIncrement; // 0xb0
	int32_t CurrentWorldViewTargetIndex; // 0xb4
};

struct UInputContextManager : UObject {
	FPointer VfTable_ITgCallbackInterface; // 0x60
	ObjectProperty m_CallbackContainer; // 0x68
	ObjectProperty m_TopInterceptContext; // 0x70
	TArray<ObjectProperty> m_ContextStack; // 0x78
	ObjectProperty m_GlobalContext; // 0x88
};

struct ATgGame_Paladins_PVETDM : ATgGame_Paladins {
	float m_fSetupDuration; // 0x868
};

struct UTgInventoryObject_Listen_EnergyCharge : UTgInvListener {
	ObjectProperty m_CachedTgPawn; // 0xc4
	float m_fChargeMultiplierDamageDealt; // 0xcc
	float m_fChargeMultiplierDamageTaken; // 0xd0
	float m_fChargeMultiplierPetDamage; // 0xd4
};

struct ATgOverviewCameraActor : ACameraActor {
	char m_bFlipped : 1; // 0x420
};

struct UUIScene_UIBattlePassPurchase : UUIScene {
	ObjectProperty m_mcTitle; // 0x1cc
	ObjectProperty m_mcTimeRemaining; // 0x1d4
	ObjectProperty m_pDLCList; // 0x1dc
	ObjectProperty m_pCloseButton; // 0x1e4
	ObjectProperty m_grMain; // 0x1ec
};

struct UUIHudMenu : UTgGfxScene {
	char m_bExitWarningPopup : 1; // 0x1ec
	ObjectProperty m_mcFrame; // 0x1f0
	ObjectProperty m_mcTitle; // 0x1f8
	ObjectProperty m_mcBlocker; // 0x200
	ObjectProperty m_mcSubtitle; // 0x208
	ObjectProperty m_mcButton[0x8]; // 0x210
	ObjectProperty m_grButton; // 0x250
	ObjectProperty m_mcExitWarningPopup; // 0x258
	ObjectProperty m_mcExitWarningPopupTitle; // 0x260
	ObjectProperty m_mcExitWarningPopupAccept; // 0x268
	ObjectProperty m_mcExitWarningPopupCancel; // 0x270
	ObjectProperty m_mcExitWarningPopupBlocker; // 0x278
	ObjectProperty m_mcExitWarningPopupSubtitle; // 0x280
	ObjectProperty m_grExitWarningPopup; // 0x288
	TArray<int32_t> m_eOptions; // 0x290
};

struct UMaterialExpressionDotProduct : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
};

struct ATgDevice_BarrageFire : ATgDevice {
	int32_t m_nChainedBarrageNum; // 0xa04
	ObjectProperty m_BarrageDevice; // 0xa08
};

struct UTgInventoryObject_Listen_GaleStorm : UTgInvListener {
	ObjectProperty m_CachedRestoreStaminaDevice; // 0xc4
	ObjectProperty m_CachedNinjaRMB2; // 0xcc
};

struct ATgDevice_NinjaSwap : ATgDevice {
	char r_bDeferredSwapInterrupt : 1; // 0xa04
	ObjectProperty m_CachedKoga; // 0xa08
	ObjectProperty m_CachedRMB2; // 0xa10
};

struct AGravityVolume : APhysicsVolume {
	float GravityZ; // 0x314
};

struct APrecomputedVisibilityOverrideVolume : AVolume {
	TArray<ObjectProperty> OverrideVisibleActors; // 0x2bc
	TArray<ObjectProperty> OverrideInvisibleActors; // 0x2cc
};

struct UTgAnimNodeFitToDuration : UAnimNodeBlendBase {
	float Duration; // 0x114
	float OverrideDuration; // 0x118
	char bAllowIncreasedPlayRate : 1; // 0x11c
	char bAllowDecreasedPlayRate : 1; // 0x11c
	char bClampDuration : 1; // 0x11c
	char m_bScaleByReload : 1; // 0x11c
	float ClampedMinDuration; // 0x120
	float ClampedMaxDuration; // 0x124
	TG_EQUIP_POINT m_EquipPoint; // 0x128
	float m_fDurationMultiplier; // 0x12c
};

struct UTgPawnMod_FxAudio_DjMaeve : UTgPawnMod_FxAudio {
	float m_fGlowMultBass; // 0xac
	float m_fGlowMult; // 0xb0
};

struct ATgDevice_KineticBurst : ATgDevice {
	ObjectProperty m_CachedInhand; // 0xa04
	char m_bInterruptedByInhand : 1; // 0xa0c
};

struct USceneCapturePortalComponent : USceneCaptureComponent {
	ObjectProperty TextureTarget; // 0xd0
	float ScaleFOV; // 0xd8
	ObjectProperty ViewDestination; // 0xdc
};

struct ATeamInfo : AReplicationInfo {
	FString TeamName; // 0x280
	int32_t Size; // 0x290
	float Score; // 0x294
	int32_t TeamIndex; // 0x298
	FColor TeamColor; // 0x29c
};

struct UTgInvListener_SteadyAim : UTgInvListener {
	int32_t m_nSteadyAimStackCount; // 0xc4
	float m_fFullyChargedHitTime; // 0xc8
};

struct UTgAIBehaviorCondition_IsDesiredAimDevice : UTgAIBehaviorCondition {
	TG_EQUIP_POINT DeviceSlot; // 0x98
};

struct UUIComponent_AsiaticEventHome : UUIComponent_Display {
	ObjectProperty m_pSkyeBundle; // 0x124
	ObjectProperty m_pZhinBundle; // 0x12c
	ObjectProperty m_pSerisBundle; // 0x134
	ObjectProperty m_pJenosBundle; // 0x13c
	TArray<ObjectProperty> m_pUnownedBundles; // 0x144
	ObjectProperty m_mcBundlesOwned; // 0x154
	ObjectProperty m_pBundles; // 0x15c
	ObjectProperty m_mcBundlePanel; // 0x164
	ObjectProperty m_mcBundlePanelTitle; // 0x16c
	ObjectProperty m_mcPurchaseTF; // 0x174
	ObjectProperty m_pBundleItems; // 0x17c
	ObjectProperty m_pPurchaseButton; // 0x184
	ObjectProperty m_pPurchaseButtonCurr; // 0x18c
	ObjectProperty m_mcBonusPanel; // 0x194
	ObjectProperty m_mcBonusPanelTitle; // 0x19c
	ObjectProperty m_mcPurchaseAllTF; // 0x1a4
	ObjectProperty m_pBonusItems; // 0x1ac
	ObjectProperty m_pLoadingFrame; // 0x1b4
	ObjectProperty m_pPurchaseAllButton; // 0x1bc
	ObjectProperty m_pPurchaseAllButtonCurr; // 0x1c4
	ObjectProperty m_pBundleIcons; // 0x1cc
};

struct UUIComponent_MVPCommendationPanel : UUIComponent_Display {
	ObjectProperty m_mcCommendationSelected; // 0x124
	ObjectProperty m_mcCommendationHover; // 0x12c
	ObjectProperty m_CommendButton; // 0x134
};

struct UTgPawnMod : UObject {
	FPointer VfTable_ITgCallbackInterface; // 0x60
	ObjectProperty m_CallbackContainer; // 0x68
};

struct UTgGfxCursor : UTgGfxScene {
	ObjectProperty m_mcIcon; // 0x1ec
};

struct UUIComponent_ChampionSimple : UUIComponent_Display {
	ObjectProperty m_mcText; // 0x124
	ObjectProperty m_mcChampionIconWrapper; // 0x12c
	ObjectProperty m_mcIconImage; // 0x134
};

struct UTextureCube : UTexture {
	int32_t SizeX; // 0x100
	int32_t SizeY; // 0x104
	EPixelFormat Format; // 0x108
	int32_t NumMips; // 0x10c
	char bIsCubemapValid : 1; // 0x110
	ObjectProperty FacePosX; // 0x114
	ObjectProperty FaceNegX; // 0x11c
	ObjectProperty FacePosY; // 0x124
	ObjectProperty FaceNegY; // 0x12c
	ObjectProperty FacePosZ; // 0x134
	ObjectProperty FaceNegZ; // 0x13c
};

struct UUIAcquisition : UTgGfxScene {
	FPointer VfTable_IAcquisitionHandler; // 0x1ec
	int32_t m_nMultiItemIndex; // 0x1f4
	int32_t m_nMultiItemNumDisplayed; // 0x1f8
	int32_t m_nMultiItemMaxDisplayed; // 0x1fc
	float m_fMultiItemDelayTimer; // 0x200
	float m_fMultiItemDelay; // 0x204
	float m_fMultiItemSpacing; // 0x208
	int32_t m_nCurrentItemId; // 0x20c
	char m_bDisplayCard : 1; // 0x210
	char m_bUseMultiItemDisplay : 1; // 0x210
	char m_bAcquiredCard : 1; // 0x210
	char m_bHasPushedTierUp : 1; // 0x210
	float m_fAnimTimer; // 0x214
	float m_fLineTimer; // 0x218
	float m_fLockTimer; // 0x21c
	ObjectProperty m_mcFrame; // 0x220
	ObjectProperty m_mcFrameLine; // 0x228
	ObjectProperty m_mcFrameGlow; // 0x230
	ObjectProperty m_mcAcquired; // 0x238
	ObjectProperty m_mcAcquiredGlow; // 0x240
	ObjectProperty m_mcAcquiredItem; // 0x248
	ObjectProperty m_mcAcquiredTitle; // 0x250
	ObjectProperty m_mcAcquiredTitleTF; // 0x258
	ObjectProperty m_mcAcquiredAnimTitle; // 0x260
	ObjectProperty m_mcAcquiredAnimTitleTF; // 0x268
	ObjectProperty m_mcAcquiredButtonOk; // 0x270
	ObjectProperty m_mcAcquiredButtonMultiOk; // 0x278
	ObjectProperty m_mcAcquiredButtonDismiss; // 0x280
	ObjectProperty m_mcAcquiredPrompt; // 0x288
	ObjectProperty m_mcAcquiredPromptEquipAll; // 0x290
	ObjectProperty m_mcAcquiredPromptDismiss; // 0x298
	ObjectProperty m_mcAcquiredSubtitle; // 0x2a0
	ObjectProperty m_mcAcquiredSubtitleTF; // 0x2a8
	ObjectProperty m_mcAcquiredCountTF; // 0x2b0
	ObjectProperty m_mcAcquiredRentalText; // 0x2b8
	ObjectProperty m_mcAcquiredButtonEquipAll; // 0x2c0
	int32_t m_nAcquisitionCallbackHandle; // 0x2c8
	TArray<FAcquiredItem> m_Items; // 0x2cc
	FUIAcquiredItem m_AcquiredItem[0x5]; // 0x2dc
};

struct ATgEmitter_CameraEffect : ATgEmitter {
	float m_fDistFromCamera; // 0x29c
	char m_bShowOnlyIn1P : 1; // 0x2a0
	char m_bShowOnlyIn3P : 1; // 0x2a0
	char m_bIsIn1P : 1; // 0x2a0
	char m_bIsCameraEffectActive : 1; // 0x2a0
	TArray<FFx_Sound> m_SoundList; // 0x2a4
	int32_t m_nSourceFxId; // 0x2b4
	ObjectProperty m_EffectSourcePawn; // 0x2b8
};

struct UUIScene_UISimulMedia : UUIScene {
	char m_bDailyGoalReached : 1; // 0x1cc
	char m_bWatchingAd : 1; // 0x1cc
	int32_t m_nSimulMediaRewardLTI; // 0x1d0
	int32_t m_nClosePopupHandle; // 0x1d4
	int32_t m_nCloseVideoHandle; // 0x1d8
	float m_fPrevMusicVolume; // 0x1dc
	float m_fSpeculativeAdWatch; // 0x1e0
	float m_fSpeculativeAdWatchDuration; // 0x1e4
	int32_t m_nSpeculativeAdWatchCount; // 0x1e8
	float m_fSimulmediaRewardPresentation; // 0x1ec
	float m_fSimulmediaRewardPresentationDuration; // 0x1f0
	float m_fVideoOpenDelay; // 0x1f4
	float m_fVideoOpenDelayDuration; // 0x1f8
	ObjectProperty m_grButtons; // 0x1fc
	Fdword m_dwLastRewardLTI; // 0x204
	ObjectProperty m_mcPopupInfo; // 0x208
	ObjectProperty m_mcComeBackDefault; // 0x210
	ObjectProperty m_WatchInfo; // 0x218
	ObjectProperty m_WatchAgainInfo; // 0x220
	ObjectProperty m_ComeBackLaterInfo; // 0x228
	ObjectProperty m_WatchButton; // 0x230
	ObjectProperty m_CloseButton; // 0x238
	ObjectProperty m_CloseButton1; // 0x240
	ObjectProperty m_mcVideoContainer; // 0x248
	ObjectProperty m_CloseVideoButton; // 0x250
	ObjectProperty m_PComVideoPlayer; // 0x258
};

struct ATgGameTipManager : AActor {
	TArray<FTipSavedState> m_TipSavedState; // 0x280
	TArray<FGameTipInfo> m_GameTipQueue; // 0x290
	TArray<FGameTipInfo> m_GameTipWorldQueue; // 0x2a0
	TArray<FGameTipInfo> m_GameTipSpecialQueue; // 0x2b0
	char m_bIsActive : 1; // 0x2c0
	ComponentProperty m_AudioComponent; // 0x2c4
	int32_t m_nActiveTip; // 0x2cc
	int32_t m_nPlaySoundTip; // 0x2d0
};

struct UUIComponent_LoadoutImportPlayerEntry : UUIComponent_Display {
	ObjectProperty m_mcRank; // 0x124
	ObjectProperty m_mcName; // 0x12c
	ObjectProperty m_mcAvatarIcon; // 0x134
	ObjectProperty m_Import; // 0x13c
};

struct UTgInventoryObject_Listen_BigGame : UTgInvListener {
	float m_fDisengageHitTime; // 0xc4
	ObjectProperty m_DisengageHitTarget; // 0xc8
};

struct UAnimTree : UAnimNodeBlendBase {
	ObjectProperty AnimTreeTemplate; // 0x114
	char bEnablePooling : 1; // 0x11c
	char bUseSavedPose : 1; // 0x11c
	char bBeingEdited : 1; // 0x11c
	char bParentNodeArrayBuilt : 1; // 0x11c
	char bRebuildAnimTickArray : 1; // 0x11c
	char m_bControlSpeed : 1; // 0x11c
	TArray<FAnimGroup> AnimGroups; // 0x120
	TArray<FName> PrioritizedSkelBranches; // 0x130
	TArray<FName> ComposePrePassBoneNames; // 0x140
	TArray<FName> ComposePostPassBoneNames; // 0x150
	TArray<ObjectProperty> RootMorphNodes; // 0x160
	TArray<ObjectProperty> m_AnimTreeComments; // 0x170
	TArray<FSkelControlListHead> SkelControlLists; // 0x180
	TArray<FBoneAtom> SavedPose; // 0x190
	TArray<ObjectProperty> AnimTickArray; // 0x1a0
	float m_fSpeed; // 0x1b0
	TArray<FName> m_MasterMorphWeightNodeNames; // 0x1b4
	TArray<FName> m_MasterMorphWeightGroups; // 0x1c4
	TArray<FHelmetMorphRestrictions> m_HelmetMorphRestrictions; // 0x1d4
};

struct UTgAIBehaviorCondition_HasActive : UTgAIBehaviorCondition {
	EActiveType ActiveType; // 0x98
};

struct ATgDeploy_CorvusDagger : ATgDeployable {
	float r_fPersistTime; // 0x46c
};

struct USeqAct_SetMaterial : USequenceAction {
	ObjectProperty NewMaterial; // 0x108
	int32_t MaterialIndex; // 0x110
};

struct UOnlineImageDownloaderWeb : UObject {
	TArray<FOnlineImageDownload> DownloadImages; // 0x60
	int32_t MaxSimultaneousDownloads; // 0x70
	DelegateProperty __OnOnlineImageDownloaded__Delegate; // 0x74
};

struct UTgDeviceFire_BunnyLink : UTgDeviceFire_EncroachmentFireCone {
	ObjectProperty m_CachedBunny; // 0x278
	char m_bInLinkTargetSelection : 1; // 0x280
	float m_fEnemyTargetPenalty; // 0x284
	float m_fLinkedTargetPenalty; // 0x288
};

struct UUIWeaponSummary : UUIResourceDataProvider {
	FString ClassPathName; // 0x94
	FString FriendlyName; // 0xa4
	FString WeaponDescription; // 0xb4
	char bIsDisabled : 1; // 0xc4
};

struct UTgAIBehaviorCondition_IsInTowerRadius : UTgAIBehaviorCondition {
	char bMustBeEnemy : 1; // 0x98
};

struct UGameCrowdGroup : UObject {
	TArray<ObjectProperty> Members; // 0x60
};

struct UUIComponent_BattlePassRewardLevelSingleTrack : UUIComponent_Display {
	ObjectProperty m_pItemIcon; // 0x124
	ObjectProperty m_pButton; // 0x12c
	ObjectProperty m_mcBGHighlight; // 0x134
	ObjectProperty m_mcProgressBreaker; // 0x13c
	ObjectProperty m_mcHeader; // 0x144
	ObjectProperty m_mcTierLock; // 0x14c
	ObjectProperty m_mcFreeTab; // 0x154
	ObjectProperty m_mcItemLock; // 0x15c
	ObjectProperty m_mcItemCheck; // 0x164
	ObjectProperty m_mcItemCardIcon; // 0x16c
	ObjectProperty m_mcItemDeathCard; // 0x174
	ObjectProperty m_pItemTooltip; // 0x17c
};

struct UUIComponent_WinterEventOverview : UUIComponent_Display {
	ObjectProperty m_grOverview; // 0x124
};

struct UUIScene_UIHudChomp : UUIScene {
	ObjectProperty m_mcAnim; // 0x1cc
};

struct UUIComponent_CTA : UUIComponent_Display {
	ObjectProperty m_mcTF; // 0x124
	char m_bAnimOnHide : 1; // 0x12c
};

struct UTgAIBehaviorAction_SelectAllyAttackerAsTarget : UTgAIBehaviorAction_SelectLaneCombatTarget {
	float TimeThreshold; // 0xa8
	float AllyDistanceThreshold; // 0xac
	float AttackerDistanceThreshold; // 0xb0
};

struct ATgDevice_DreadSerpent : ATgDevice {
	char s_bQueueVoodooDeploy : 1; // 0xa04
};

struct ASceneCaptureReflectActor : ASceneCaptureActor {
	ComponentProperty StaticMesh; // 0x288
	ObjectProperty ReflectMaterialInst; // 0x290
};

struct UUIHudTip : UTgGfxScene {
	int32_t m_nHudTipId; // 0x1ec
	int32_t m_nHudSpecialTipId; // 0x1f0
	int32_t m_nWorldTipId; // 0x1f4
	float m_fPromptAnimTimer; // 0x1f8
	ObjectProperty m_mcHudTip; // 0x1fc
	ObjectProperty m_mcHudTipIcon; // 0x204
	ObjectProperty m_mcHudTipName; // 0x20c
	ObjectProperty m_mcHudTipDesc; // 0x214
	ObjectProperty m_mcHudSpecialTip; // 0x21c
	ObjectProperty m_mcHudSpecialTipText; // 0x224
	ObjectProperty m_mcHudSpecialTipAnimA; // 0x22c
	ObjectProperty m_mcHudSpecialTipAnimB; // 0x234
	ObjectProperty m_mcHudSpecialTipFrame; // 0x23c
	ObjectProperty m_mcHudSpecialTipPrompt; // 0x244
	ObjectProperty m_mcWorldTip; // 0x24c
	ObjectProperty m_mcWorldTipIcon; // 0x254
	ObjectProperty m_mcWorldTipName; // 0x25c
	ObjectProperty m_mcWorldTipDesc; // 0x264
};

struct USeqAct_PlayFaceFXAnim : USequenceAction {
	ObjectProperty FaceFXAnimSetRef; // 0x108
	FString FaceFXGroupName; // 0x110
	FString FaceFXAnimName; // 0x120
	ObjectProperty SoundCueToPlay; // 0x130
	ObjectProperty AkEventToPlay; // 0x138
};

struct UTgSilhouetteComponent : UPrimitiveComponent {
	char bEnabled : 1; // 0x24c
	char bUseFadeOutAlpha : 1; // 0x24c
	char bNegativeSilhouette : 1; // 0x24c
	char bUseThicknessMultiplier : 1; // 0x24c
	FLinearColor SilhouetteColor; // 0x250
	float NearThickness; // 0x260
	float FarThickness; // 0x264
	float NearDistance; // 0x268
	float FarDistance; // 0x26c
	ComponentProperty MeshComponent; // 0x270
	float NearDistanceSq; // 0x278
	float FarDistanceSq; // 0x27c
	float FadeOutTime; // 0x280
	float RemainingFadeOutTime; // 0x284
	int32_t PrimitiveSceneInfoId; // 0x288
	float ThicknessMultiplier; // 0x28c
	float DefaultThicknessMultiplier; // 0x290
	FPointer ReleaseResourcesFence; // 0x294
};

struct UTgEffectForm : UObject {
	int32_t c_nEffectGroupId; // 0x60
	int32_t c_nInstigatorID; // 0x64
	int32_t c_nType; // 0x68
	ObjectProperty c_Owner; // 0x6c
	FPointer c_pwzEffectName; // 0x74
	FPointer c_pwzDescription; // 0x7c
	int32_t c_nEffectIconId; // 0x84
	TArray<ObjectProperty> c_AppliedFxArray; // 0x88
	char c_bHiddenDueToStealth : 1; // 0x98
	char c_bHiddenDueToFirstPerson : 1; // 0x98
	char c_bMICApplied : 1; // 0x98
	char m_bSpawnAtHitLocation : 1; // 0x98
	char c_bIsDebuff : 1; // 0x98
	char c_bIsCrit : 1; // 0x98
	char c_bLocal : 1; // 0x98
	TG_POSTURE c_Posture; // 0x9c
	int32_t c_PostureID; // 0xa0
	ObjectProperty m_MaterialInstanceConstant; // 0xa4
	ObjectProperty m_OwnerPawn; // 0xac
	FVector m_HitLocation; // 0xb4
	FVector m_HitNormal; // 0xc0
	int32_t c_nSkinId; // 0xcc
	int32_t c_nWeaponSkinId; // 0xd0
	ObjectProperty c_CameraEffect; // 0xd4
	int32_t c_nStackCount; // 0xdc
	int32_t c_nBodyMeshMaterialHandle; // 0xe0
	int32_t c_nMountMeshMaterialHandle; // 0xe4
	int32_t c_nHeadMeshMaterialHandle; // 0xe8
	int32_t c_nWeaponMesh1PMaterialHandle; // 0xec
	int32_t c_nHandsMeshMaterialHandle; // 0xf0
	int32_t c_nHeadMesh1PMaterialHandle; // 0xf4
	int32_t c_nWeaponMesh3PMaterialHandle; // 0xf8
};

struct UUIData_ChampionChests : UUIData {
	TArray<ObjectProperty> m_Chests; // 0x64
};

struct UTgAnimNodeStanceTransition : UAnimNodeBlendList {
	int32_t m_SourceStance; // 0x144
	int32_t m_DestinationStance; // 0x148
};

struct UGameWaveForms : UObject {
	ObjectProperty CameraShakeMediumShort; // 0x60
	ObjectProperty CameraShakeMediumLong; // 0x68
	ObjectProperty CameraShakeBigShort; // 0x70
	ObjectProperty CameraShakeBigLong; // 0x78
};

struct UTgDeviceForm_Inhand : UTgDeviceForm {
	int32_t m_nAmmoCount; // 0x28c
	int32_t m_nMaxAmmoCount; // 0x290
	float m_fPreviousAmmoPerc; // 0x294
	float m_fCurrentAmmoPerc; // 0x298
};

struct UTgAIUtilityFilter_Payload : UTgAIUtilityFilter {
	float DistanceCutoff; // 0xc0
};

struct UParticleEmitter : UObject {
	FName EmitterName; // 0x60
	int32_t m_nActivationMask; // 0x68
	FParticleChannelContainer m_ParticleChannels; // 0x6c
	int32_t SubUVDataOffset; // 0x70
	EEmitterRenderMode EmitterRenderMode; // 0x74
	TArray<ObjectProperty> LODLevels; // 0x78
	char ConvertedModules : 1; // 0x88
	char bCollapsed : 1; // 0x88
	char bIsSoloing : 1; // 0x88
	char bCookedOut : 1; // 0x88
	int32_t PeakActiveParticles; // 0x8c
	int32_t InitialAllocationCount; // 0x90
	float MediumDetailSpawnRateScale; // 0x94
};

struct ATgGame_PointCapture : ATgGame_Battle {
	float s_TicketCheckInterval; // 0x76c
	int32_t s_nCaptureHostilePointXP; // 0x770
	int32_t s_nCaptureHostilePointGold; // 0x774
	int32_t s_nReclaimPointXP; // 0x778
	int32_t s_nReclaimPointGold; // 0x77c
	int32_t s_nCurrentPhase; // 0x780
	int32_t s_nPhase2Threshold; // 0x784
	int32_t s_nPhase3Threshold; // 0x788
	int32_t m_nSpawnWaveTime; // 0x78c
	int32_t m_nSpawnWaveDominatingTime; // 0x790
	int32_t m_nMaxDominatingPoints; // 0x794
	int32_t s_nAboutToLoseThreshold; // 0x798
};

struct UUIWorldOverlay : UTgGfxScene {
	char ShowAllTeamAsParty : 1; // 0x1ec
	char m_bDamageReturnOnScaleIn : 1; // 0x1ec
	char m_bBringToFrontProcessed : 1; // 0x1ec
	char m_bSpectatorShowPlayerIcons : 1; // 0x1ec
	int32_t m_nDepth; // 0x1f0
	int32_t m_nCritCount; // 0x1f4
	int32_t m_nLastValue; // 0x1f8
	int32_t m_nLastTargetId; // 0x1fc
	int32_t m_nDamageNumberType; // 0x200
	int32_t m_nMaxDamageTicksPerDevice; // 0x204
	char m_eLastTargetType; // 0x208
	float m_fDelta; // 0x20c
	float m_fInterp; // 0x210
	float m_fCritScaleInDuration; // 0x214
	float m_fCritScaleMin; // 0x218
	float m_fCritScaleMax; // 0x21c
	float m_fCritMaxWorldOffset; // 0x220
	float m_fCritMaxInitialSpeed; // 0x224
	float m_fCritGravityCoeff; // 0x228
	float m_fCritVerticalOffset; // 0x22c
	float m_fCritTimer; // 0x230
	float m_fDamageScaleInDuration; // 0x234
	float m_fDamageSustainDuration; // 0x238
	float m_fDamageInitialSpeedRandomness; // 0x23c
	float m_fDamageScaleMin; // 0x240
	float m_fDamageScaleMax; // 0x244
	float m_fDamageMaxWorldOffset; // 0x248
	float m_fDamageWorldOffsetConeAngle; // 0x24c
	float m_fDamageMaxInitialSpeed; // 0x250
	float m_fDamageGravityCoeff; // 0x254
	float m_fDamageVerticalOffset; // 0x258
	float m_fDamageTimer; // 0x25c
	float m_fHealingSpeed; // 0x260
	float m_fHealingBloom; // 0x264
	float m_fHealingTimer; // 0x268
	float m_fResolutionModX; // 0x26c
	float m_fResolutionModY; // 0x270
	float m_fDamageNumbersOffsetScale; // 0x274
	TArray<FUIPooledOverlayData> m_PooledCritData; // 0x278
	TArray<FUIPooledOverlayData> m_PooledDamageData; // 0x288
	TArray<FUIPooledOverlayData> m_PooledHealingData; // 0x298
	TArray<FOverlayData> m_CritData; // 0x2a8
	TArray<FOverlayData> m_DamageData; // 0x2b8
	TArray<FOverlayData> m_HealingData; // 0x2c8
	TArray<FUIPlayerOverlay> m_PlayerOverlays; // 0x2d8
	TArray<FUIDeployableOverlay> m_DeployableOverlays; // 0x2e8
	TArray<FUIDeployableOverlay> m_DeployableOverlayPool; // 0x2f8
	TMap<None, None> m_nActiveDamageNumbers; // 0x308
	TArray<FQueuedDamageNumber> m_QueuedDamageNumbers; // 0x350
};

struct UUIComponent_ItemRadialMenuVGS : UUIComponent_Display {
	ObjectProperty m_mcTF; // 0x124
	ObjectProperty m_mcHighlight; // 0x12c
	ObjectProperty m_mcDisabledBG; // 0x134
	ObjectProperty m_mcKeyboardKey; // 0x13c
	ObjectProperty m_mcKeyboardKeyTF; // 0x144
	ObjectProperty m_pGamepadKey; // 0x14c
};

struct UUIComponent_Button_LoadoutMount : UUIComponent_Display {
	ObjectProperty m_mcCardIcon; // 0x124
	ObjectProperty m_mcRarity; // 0x12c
	ObjectProperty m_mcName; // 0x134
};

struct AFluidSurfaceActor : AActor {
	ComponentProperty FluidComponent; // 0x280
	ObjectProperty ProjectileEntryEffect; // 0x288
};

struct USeqAct_SetWorldAttractorParam : USequenceAction {
	TArray<ObjectProperty> Attractor; // 0x108
	char bEnabledField : 1; // 0x118
	char bFalloffTypeField : 1; // 0x118
	char bFalloffExponentField : 1; // 0x118
	char bRangeField : 1; // 0x118
	char bStrengthField : 1; // 0x118
	char bEnabled : 1; // 0x118
	EWorldAttractorFalloffType FalloffType; // 0x11c
	FRawDistributionFloat FalloffExponent; // 0x120
	FRawDistributionFloat Range; // 0x144
	FRawDistributionFloat Strength; // 0x168
};

struct UCameraAnimInst : UObject {
	ObjectProperty CamAnim; // 0x60
	ObjectProperty InterpGroupInst; // 0x68
	float CurTime; // 0x70
	char bLooping : 1; // 0x74
	char bFinished : 1; // 0x74
	char bAutoReleaseWhenFinished : 1; // 0x74
	char bPropertiesRelativeToBase : 1; // 0x74
	char bBlendingIn : 1; // 0x74
	char bBlendingOut : 1; // 0x74
	float BlendInTime; // 0x78
	float BlendOutTime; // 0x7c
	float CurBlendInTime; // 0x80
	float CurBlendOutTime; // 0x84
	float PlayRate; // 0x88
	float BasePlayScale; // 0x8c
	float TransientScaleModifier; // 0x90
	float CurrentBlendWeight; // 0x94
	float RemainingTime; // 0x98
	ObjectProperty MoveTrack; // 0x9c
	ObjectProperty MoveInst; // 0xa4
	ObjectProperty SourceAnimNode; // 0xac
	ECameraAnimPlaySpace PlaySpace; // 0xb4
	FMatrix UserPlaySpaceMatrix; // 0xc0
	FPostProcessSettings LastPPSettings; // 0x100
	float LastPPSettingsAlpha; // 0x280
	FVector LastCameraLoc; // 0x284
};

struct ATgDevice_Aura : ATgDevice {
	float r_fRadiusScale; // 0xa04
	TArray<ObjectProperty> m_TouchingActors; // 0xa08
	TArray<ObjectProperty> m_PreviouslyTouchedActors; // 0xa18
	TArray<ObjectProperty> m_AffectedActors; // 0xa28
	char m_bIsAuraActive : 1; // 0xa38
	float m_fLastBlockedByBlockersTime; // 0xa3c
	float m_fMinBlockedByBlockersTime; // 0xa40
	float m_fDelayPreviouslyTouchedActorsCheck; // 0xa44
	float m_fUpdatePreviouslyTouchedActorsCheckInterval; // 0xa48
	TArray<ObjectProperty> m_BlockedActors; // 0xa4c
	ObjectProperty m_CollisionProxy; // 0xa5c
};

struct UPrimitiveComponentFactory : UObject {
	char CollideActors : 1; // 0x60
	char BlockActors : 1; // 0x60
	char BlockZeroExtent : 1; // 0x60
	char BlockNonZeroExtent : 1; // 0x60
	char BlockRigidBody : 1; // 0x60
	char HiddenGame : 1; // 0x60
	char HiddenEditor : 1; // 0x60
	char CastShadow : 1; // 0x60
};

struct ATgDevice_Recharge : ATgDevice {
	ObjectProperty m_CachedGauntletPawn; // 0xa04
	char m_bCanTargetShields : 1; // 0xa0c
};

struct UTgAIBehaviorCondition_PetPhase : UTgAIBehaviorCondition {
	EPetPhase Phase; // 0x98
};

struct ATgDevice_CommanderCreditPassive : ATgDevice {
	FPointer VfTable_ITgCallbackInterface; // 0xa04
	int32_t nKillCount; // 0xa0c
	ObjectProperty m_CallbackContainer; // 0xa10
};

struct UTgDeviceForm_DemonStim : UTgDeviceForm {
	float m_fTransitionTime; // 0x28c
};

struct ATgRepInfo_Game_TeamDeathMatch : ATgRepInfo_Game {
	int32_t c_nLeadingTeam; // 0x5c8
	int32_t c_nLeadingTeamScoreAmount; // 0x5cc
};

struct UVivoxOSSConnectors : UObject {
	ObjectProperty m_OnlineSub; // 0x60
	TArray<ObjectProperty> Closures; // 0x68
	FPointer m_VivoxInterface; // 0x78
};

struct UTgAIBehaviorCondition_Timer : UTgAIBehaviorCondition {
	float TimerLength; // 0x98
};

struct ALensFlareSource : AActor {
	ComponentProperty LensFlareComp; // 0x280
	char bCurrentlyActive : 1; // 0x288
};

struct UTgParticleModuleTypeDataLight : UParticleModuleTypeDataBase {
	ComponentProperty m_PointLightComponent; // 0x68
	ComponentProperty m_PLCDuplicate; // 0x70
};

struct USeqAct_SetCameraTarget : USequenceAction {
	ObjectProperty CameraTarget; // 0x108
	FViewTargetTransitionParams TransitionParams; // 0x110
};

struct UUIComponent_ChampionLoadouts : UUIComponent_Display {
	ObjectProperty m_pLoadoutList; // 0x124
	ObjectProperty m_pDeleteLoadout; // 0x12c
	int32_t m_nOnDataCallbackHandle; // 0x134
};

struct UUIComponent_HomeGoToChest : UUIComponent_HomeGoToItem {
	ObjectProperty m_mcChestIcon; // 0x160
};

struct UUIComponent_ProgressBarHorizontal : UUIComponent_Display {
	char m_bHideFillWhenEmpty : 1; // 0x124
	char m_bHideTipWhenEmpty : 1; // 0x124
	ObjectProperty m_mcBackground; // 0x128
	ObjectProperty m_mcFill; // 0x130
	ObjectProperty m_mcTip; // 0x138
	float m_fAnimTime; // 0x140
	float m_fAnimDelay; // 0x144
	float m_fCurrentPercent; // 0x148
	float m_fTargetPercent; // 0x14c
	float m_fDeltaPercent; // 0x150
};

struct UMcpGroupsBase : UMcpServiceBase {
	FString McpGroupsManagerClassName; // 0x78
	TArray<FMcpGroupList> GroupLists; // 0x88
	DelegateProperty __OnCreateGroupComplete__Delegate; // 0x98
	DelegateProperty __OnDeleteGroupComplete__Delegate; // 0xa8
	DelegateProperty __OnQueryGroupsComplete__Delegate; // 0xb8
	DelegateProperty __OnQueryGroupMembersComplete__Delegate; // 0xc8
	DelegateProperty __OnAddGroupMembersComplete__Delegate; // 0xd8
	DelegateProperty __OnRemoveGroupMembersComplete__Delegate; // 0xe8
	DelegateProperty __OnDeleteAllGroupsComplete__Delegate; // 0xf8
	DelegateProperty __OnQueryGroupInvitesComplete__Delegate; // 0x108
	DelegateProperty __OnAcceptGroupInviteComplete__Delegate; // 0x118
};

struct UUIComponent_ItemWithPrice : UUIComponent_Display {
	ObjectProperty m_pItem; // 0x124
	ObjectProperty m_pCurrency; // 0x12c
	ObjectProperty m_pFrameButton; // 0x134
};

struct UParticleModuleRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionFloat StartRotationRate; // 0x68
};

struct UMcpServiceConfig : UObject {
	FString Protocol; // 0x60
	FString Domain; // 0x70
	FString TitleId; // 0x80
	FString AppKey; // 0x90
	FString AppSecret; // 0xa0
};

struct ATgDevice_ChurchillADS : ATgDevice_ToggleADS {
	ObjectProperty m_CachedInhand; // 0xa1c
};

struct UUIComponent_TitleTooltip : UUIComponent_Display {
	ObjectProperty m_mcIcon; // 0x124
	ObjectProperty m_mcDescription; // 0x12c
	int32_t m_nLastSetItemID; // 0x134
	float m_fTooltipShowDelay; // 0x138
};

struct UUIComponent_HudScoreHH : UUIComponent_Display {
	ObjectProperty m_pHudClimb; // 0x124
	ObjectProperty m_pHudTDM; // 0x12c
};

struct USceneCaptureReflectComponent : USceneCaptureComponent {
	ObjectProperty TextureTarget; // 0xd0
	float ScaleFOV; // 0xd8
	TArray<ObjectProperty> ActorsToReflect; // 0xdc
};

struct UTgAIBehaviorCondition_NumberDevicesFiring : UTgAIBehaviorCondition {
	TG_EQUIP_POINT DeviceSlot; // 0x98
	char bMustBeEnemy : 1; // 0x9c
	char bIsFiring : 1; // 0x9c
	int32_t GodThreshold; // 0xa0
	float DistanceThreshold; // 0xa4
};

struct ATgGame_CTF : ATgGame_Mission {
	ObjectProperty m_FlagBases[0x2]; // 0x744
	float m_fRoundTime; // 0x754
	float m_fRoundSetupTime; // 0x758
	float m_fEndOfRoundTime; // 0x75c
	int32_t m_nCurrentRound; // 0x760
	int32_t m_nNumRounds; // 0x764
	int32_t m_nSpawnWaveTime; // 0x768
};

struct USeqAct_AddInt : USeqAct_SetSequenceVariable {
	int32_t ValueA; // 0x108
	int32_t ValueB; // 0x10c
	float FloatResult; // 0x110
	int32_t IntResult; // 0x114
};

struct UTgAchievement_EmoteAfterKillWithChampion : UTgAchievement {
	float m_fKillTime; // 0x94
};

struct UTgAIBehaviorCondition_NearestTowerHealthPercent : UTgAIBehaviorCondition {
	char bMustBeEnemy : 1; // 0x98
	float HealthPct; // 0x9c
};

struct UTgExplosionLight : UPointLightComponent {
	char bCheckFrameRate : 1; // 0x240
	char bInitialized : 1; // 0x240
	char bIsEnemy : 1; // 0x240
	char bIsLocal : 1; // 0x240
	char bIsLooping : 1; // 0x240
	float HighDetailFrameTime; // 0x244
	float Lifetime; // 0x248
	int32_t TimeShiftIndex; // 0x24c
	TArray<FLightValues> TimeShift; // 0x250
	int32_t LoopIndex; // 0x260
	DelegateProperty __OnLightFinished__Delegate; // 0x264
};

struct ATgDevice_MarkAndRecall : ATgDevice {
	FVector m_markedLocation; // 0xa04
	FRotator m_markedRotation; // 0xa10
	char m_bMarked : 1; // 0xa1c
};

struct USeqAct_GameCrowdPopulationManagerToggle : USequenceAction {
	float WarmupPopulationPct; // 0x108
	ObjectProperty CrowdAgentList; // 0x10c
	char bClearOldArchetypes : 1; // 0x114
	char bEnableCrowdLightEnvironment : 1; // 0x114
	char bCastShadows : 1; // 0x114
	char bFillPotentialSpawnPoints : 1; // 0x114
	char bForceObstacleChecking : 1; // 0x114
	char bForceNavMeshPathing : 1; // 0x114
	char bIndividualSpawner : 1; // 0x114
	int32_t MaxAgents; // 0x118
	float SpawnRate; // 0x11c
	FLightingChannelContainer AgentLightingChannel; // 0x120
	float MaxSpawnDist; // 0x124
	float MinBehindSpawnDist; // 0x128
	TArray<ObjectProperty> PotentialSpawnPoints; // 0x12c
	float AgentWarmupTime; // 0x13c
	int32_t NumAgentsToTickPerFrame; // 0x140
	TArray<ObjectProperty> LastSpawnedList; // 0x144
};

struct UUIInteractable_DailyDeal : UUIComponent_Interactable {
	ObjectProperty m_mcTitle; // 0x140
	ObjectProperty m_mcSubtitle; // 0x148
	TArray<ObjectProperty> m_pItems; // 0x150
	TArray<ObjectProperty> m_pItemCardArt; // 0x160
	TArray<ObjectProperty> m_pItemEmoteIcon; // 0x170
	TArray<ObjectProperty> m_pItemVPIcon; // 0x180
	ObjectProperty m_pRealMoneyPrice; // 0x190
	ObjectProperty m_pTokenPrice; // 0x198
	ObjectProperty m_CardArtManifestGroup; // 0x1a0
	ObjectProperty m_pDailyDealLTI; // 0x1a8
	char m_bLeaveStorefrontDelegateRegistered : 1; // 0x1b0
	char m_bSafeWait : 1; // 0x1b0
	int32_t m_nTickCallbackHandle; // 0x1b4
	float m_fSafeWaitTimer; // 0x1b8
	float m_fSafeWaitTimerDuration; // 0x1bc
};

struct UUIScene_UIEndTimesEvent : UUIScene {
	ObjectProperty m_pTabs; // 0x1cc
	ObjectProperty m_pBack; // 0x1d4
	ObjectProperty m_pHome; // 0x1dc
	ObjectProperty m_pRewards; // 0x1e4
	ObjectProperty m_pQuests; // 0x1ec
	ObjectProperty m_pOverview; // 0x1f4
	ObjectProperty m_pRotator; // 0x1fc
};

struct UGameAICmd_Hover_MoveToGoal : UGameAICommand {
	ObjectProperty Path; // 0x84
	ObjectProperty Find; // 0x8c
	ObjectProperty Goal; // 0x94
	float Radius; // 0x9c
	char bWasFiring : 1; // 0xa0
	float DesiredHoverHeight; // 0xa4
	float CurrentHoverHeight; // 0xa8
	float SubGoalReachDist; // 0xac
	float GoalDistance; // 0xb0
	FVector MoveVectDest; // 0xb4
	ObjectProperty CurrentSpec; // 0xc0
};

struct ATgAITaskforceBlockingVolume : AVolume {
	int32_t BlockTaskforce; // 0x2bc
	char m_bHasRegisteredObstacle : 1; // 0x2c0
};

struct UAnimNotify_Kismet : UAnimNotify {
	FName NotifyName; // 0x68
};

struct AEnvironmentVolume : AVolume {
	FPointer VfTable_IInterface_NavMeshPathObstacle; // 0x2bc
	FPointer VfTable_IInterface_NavMeshPathObject; // 0x2c4
	char bSplitNavMesh : 1; // 0x2cc
};

struct UMaterialExpressionDistance : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
};

struct UNavMeshGoalFilter_MinPathDistance : UNavMeshGoal_Filter {
	int32_t MinDistancePathShouldBe; // 0x6c
};

struct UParticleModuleUberBase : UParticleModule {
	TArray<FName> RequiredModules; // 0x68
};

struct UWindDirectionalSourceComponent : UActorComponent {
	FPointer SceneProxy; // 0x88
	float Strength; // 0x90
	float Phase; // 0x94
	float Frequency; // 0x98
	float Speed; // 0x9c
};

struct UParticleModuleLocationPrimitiveCylinder_Seeded : UParticleModuleLocationPrimitiveCylinder {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x104
};

struct UOnlineNewsInterfaceMcp : UMCPBase {
	TArray<FNewsCacheEntry> NewsItems; // 0x80
	TArray<DelegateProperty> ReadNewsDelegates; // 0x90
	char bNeedsTicking : 1; // 0xa0
	DelegateProperty __OnReadNewsCompleted__Delegate; // 0xa4
};

struct UTgSeqEvent_Named : USequenceEvent {
	TSE_NAME NamedEvent; // 0x128
};

struct USeqAct_RandomSwitch : USeqAct_Switch {
	TArray<int32_t> AutoDisabledIndices; // 0x124
};

struct ATgProj_Pyreball : ATgProj_Simulated {
	char r_bIsDragonsFire : 1; // 0x52c
	int32_t m_nExplodeOnTargetDepth; // 0x530
};

struct UTgAIBehaviorCondition_AmmoAfterShot : UTgAIBehaviorCondition {
	TG_EQUIP_POINT DeviceSlot; // 0x98
	int32_t AmmoThreshold; // 0x9c
};

struct ATgGame_Paladins_AscendedAssault : ATgGame_Paladins_Onslaught {
	float m_fSetupDuration; // 0xa64
};

struct UUIComponent_MatchLobbyPickNotification : UUIComponent_Display {
	ObjectProperty m_mcPickTitle; // 0x124
	TArray<ObjectProperty> m_mcPickNames; // 0x12c
	FString m_sCurrentTitle; // 0x13c
	FString m_sDesiredTitle; // 0x14c
	TArray<FString> m_sCurrentNames; // 0x15c
	TArray<FString> m_sDesiredNames; // 0x16c
	ObjectProperty m_pTitleInAnimSet; // 0x17c
	ObjectProperty m_pTitleOutAnimSet; // 0x184
	TArray<ObjectProperty> m_pNameInAnimSets; // 0x18c
	TArray<ObjectProperty> m_pNameOutAnimSets; // 0x19c
	char m_bBlueTeam : 1; // 0x1ac
};

struct ATgSilhouetteManager : AActor {
	ObjectProperty m_Owner; // 0x280
	char m_bSilhouettesEnabled : 1; // 0x288
	char m_bForceSilhouetteVisible : 1; // 0x288
	TArray<FTgSilhouetteInfo> m_SilhouetteInfos; // 0x28c
	UTgSilhouetteComponent* m_SilhouetteClass; // 0x29c
};

struct USeqEvent_TouchInput : USequenceEvent {
	char bTrapInput : 1; // 0x128
	int32_t AllowedPlayerIndex; // 0x12c
	int32_t AllowedTouchIndex; // 0x130
	int32_t AllowedTouchpadIndex; // 0x134
};

struct ATgMissionListVolume : AVolume {
	int32_t m_nMapObjectId; // 0x2bc
	int32_t s_nQueueTableId; // 0x2c0
	int32_t s_nQueueTableMsgId; // 0x2c4
	ObjectProperty m_Teleporter; // 0x2c8
};

struct UUIComponent_StoreMixerItems : UUIComponent_Display {
	ObjectProperty m_mcItemName; // 0x124
	ObjectProperty m_mcItemType; // 0x12c
	ObjectProperty m_mcItemLock; // 0x134
	ObjectProperty m_mcItemOwned; // 0x13c
	ObjectProperty m_mcExclusiveLabel; // 0x144
	ObjectProperty m_mcExclusiveDesc; // 0x14c
	ObjectProperty m_pItemList; // 0x154
	ObjectProperty m_pItemStats; // 0x15c
	ObjectProperty m_pProgressBar; // 0x164
	ObjectProperty m_pOwnedCurrency; // 0x16c
	ObjectProperty m_pPurchase; // 0x174
	ObjectProperty m_grItems; // 0x17c
};

struct UUIScene_UISkills : UUIScene {
	ObjectProperty m_mcBackground; // 0x1cc
	ObjectProperty m_mcSubtitle; // 0x1d4
	ObjectProperty m_mcSkillsRoot; // 0x1dc
	ObjectProperty m_mcFrame; // 0x1e4
	ObjectProperty m_Skills; // 0x1ec
	ObjectProperty m_CloseButton; // 0x1f4
	ObjectProperty m_pBlocker; // 0x1fc
};

struct AInterpActor : ADynamicSMActor {
	char bShouldSaveForCheckpoint : 1; // 0x2d0
	char bMonitorMover : 1; // 0x2d0
	char bMonitorZVelocity : 1; // 0x2d0
	char bDestroyProjectilesOnEncroach : 1; // 0x2d0
	char bContinueOnEncroachPhysicsObject : 1; // 0x2d0
	char bStopOnEncroach : 1; // 0x2d0
	char bContinueOnEncroachNonPawn : 1; // 0x2d0
	char bShouldShadowParentAllAttachedActors : 1; // 0x2d0
	char bIsLift : 0; // 0x2d0
	ObjectProperty MyMarker; // 0x2d4
	float MaxZVelocity; // 0x2dc
	float StayOpenTime; // 0x2e0
	ObjectProperty OpenSound; // 0x2e4
	ObjectProperty OpeningAmbientSound; // 0x2ec
	ObjectProperty OpenedSound; // 0x2f4
	ObjectProperty CloseSound; // 0x2fc
	ObjectProperty ClosingAmbientSound; // 0x304
	ObjectProperty ClosedSound; // 0x30c
	ComponentProperty AmbientSoundComponent; // 0x314
};

struct UTgGameViewportClient : UPComGameViewportClient {
	TArray<ObjectProperty> m_DeferredManifests; // 0x1c4
	char m_dragging : 1; // 0x1d4
	char m_wasMaximized : 1; // 0x1d4
	char bReadLeftStickAxis : 1; // 0x1d4
	char bReadRightStickAxis : 1; // 0x1d4
	float fRawLeftStickAxis; // 0x1d8
	float fRawRightStickAxis; // 0x1dc
	float fRawRightStickX; // 0x1e0
	float fRawRightStickY; // 0x1e4
};

struct UMobileMenuButton : UMobileMenuObject {
	ObjectProperty Images[0x2]; // 0xdc
	FUVCoords ImagesUVs[0x2]; // 0xec
	FLinearColor ImageColor; // 0x114
	FString Caption; // 0x124
	FLinearColor CaptionColor; // 0x134
};

struct USkelControlSpline : USkelControlBase {
	int32_t SplineLength; // 0xd0
	EAxis SplineBoneAxis; // 0xd4
	ESplineControlRotMode BoneRotMode; // 0xd5
	char bInvertSplineBoneAxis : 1; // 0xd8
	float EndSplineTension; // 0xdc
	float StartSplineTension; // 0xe0
};

struct ATgDemoRecSpectator : ATgSpectatorController {
	TArray<FSpectatorCommand> PendingCommands; // 0x1874
	int32_t m_TimeIndex; // 0x1884
	TArray<FDilationData> m_TimeDilations; // 0x1888
	FPointer m_pTgCallbackDevice; // 0x1898
	int32_t m_1xTimeIndex; // 0x18a0
	char m_bIsPaused : 1; // 0x18a4
	char m_bInStasis : 1; // 0x18a4
	char m_bSpectatorMaster : 1; // 0x18a4
	char m_bSyncWithMasterEnabled : 1; // 0x18a4
	char m_bIsSyncingWithMaster : 1; // 0x18a4
	char m_bAutoSlomo : 1; // 0x18a4
	char m_bReceiveCamSync : 1; // 0x18a4
	int32_t m_nLastReceivedMasterFrame; // 0x18a8
	float m_fLastReceivedMasterTimeDilation; // 0x18ac
	float m_fLastReceievedRealTimeStamp; // 0x18b0
	int32_t m_nSyncFrameThreshold; // 0x18b4
	int32_t m_nSyncFrameCheckThreshold; // 0x18b8
	int32_t m_nSyncAheadFrameThreshold; // 0x18bc
	int32_t m_nLastTimerValue; // 0x18c0
	ObjectProperty m_SpectatorDirector; // 0x18c4
	ObjectProperty m_ActionListener; // 0x18cc
	float m_fActionListenerRadius; // 0x18d4
	float m_fActionListenerHeight; // 0x18d8
	int32_t m_nCurrentActionListenerRating; // 0x18dc
	int32_t m_nActionListenerRatingThreshold; // 0x18e0
	float m_fRemainingAutoSlomoTime; // 0x18e4
	float m_fAutoSlomoExpirationTime; // 0x18e8
	int32_t m_nAutoSlomoSpeedIndex; // 0x18ec
	int32_t m_nAutoSlomoNearbyPlayersNum; // 0x18f0
	float m_fAutoSlomoFrequency; // 0x18f4
	float m_fRemainingAutoSlomoTimeoutTime; // 0x18f8
};

struct ADynamicAnchor : ANavigationPoint {
	ObjectProperty CurrentUser; // 0x378
};

struct ATgDeploy_TurretEffectField : ATgDeploy_EffectField {
	TArray<ObjectProperty> m_DeployTimePendingTargets; // 0x4a0
	ObjectProperty m_ParentTurret; // 0x4b0
};

struct UTgAnimNotify_ToggleInvisibleWall : UAnimNotify {
	char TurnWallOn : 1; // 0x68
	char TurnOffOnCeaseRelevant : 1; // 0x68
	int32_t WallIndex; // 0x6c
	FVector WallPosition; // 0x70
	FVector WallNormal; // 0x7c
	FName WallEnableBaseName; // 0x88
	FName WallPositionBaseName; // 0x90
	FName WallNormalBaseName; // 0x98
};

struct ATgDeploy_ShieldBarikDome : ATgDeploy_Shield {
	float m_fTurretSetupTime; // 0x470
};

struct UTgTargetAimTrackingCurves : UObject {
	FName SettingsName; // 0x60
	FRawDistributionFloat StrengthByAccuracyX; // 0x68
	FRawDistributionFloat StrengthByDesiredAngleX; // 0x8c
	FRawDistributionFloat StrengthByAccuracyY; // 0xb0
	FRawDistributionFloat StrengthByDesiredAngleY; // 0xd4
};

struct UActorComponent : UComponent {
	FPointer Scene; // 0x70
	ObjectProperty Owner; // 0x78
	char bAttached : 1; // 0x80
	char bTickInEditor : 1; // 0x80
	char bNeedsReattach : 1; // 0x80
	char bNeedsUpdateTransform : 1; // 0x80
	ETickingGroup TickGroup; // 0x84
};

struct UCodecMovie : UObject {
	float PlaybackDuration; // 0x60
};

struct UInterpTrackInstVectorProp : UInterpTrackInstProperty {
	FPointer VectorProp; // 0x70
	FVector ResetVector; // 0x78
};

struct UAnimationCompressionAlgorithm_RemoveTrivialKeys : UAnimationCompressionAlgorithm {
	float MaxPosDiff; // 0x78
	float MaxAngleDiff; // 0x7c
};

struct UMaterialExpressionClamp : UMaterialExpression {
	FExpressionInput Input; // 0xb0
	FExpressionInput Min; // 0xe4
	FExpressionInput Max; // 0x118
};

struct USeqAct_ApplySoundNode : USequenceAction {
	ObjectProperty PlaySound; // 0x108
	ObjectProperty ApplyNode; // 0x110
};

struct USoundNodeOscillator : USoundNode {
	char bModulateVolume : 1; // 0x74
	char bModulatePitch : 1; // 0x74
	float AmplitudeMin; // 0x78
	float AmplitudeMax; // 0x7c
	float FrequencyMin; // 0x80
	float FrequencyMax; // 0x84
	float OffsetMin; // 0x88
	float OffsetMax; // 0x8c
	float CenterMin; // 0x90
	float CenterMax; // 0x94
	FRawDistributionFloat Amplitude; // 0x98
	FRawDistributionFloat Frequency; // 0xbc
	FRawDistributionFloat Offset; // 0xe0
	FRawDistributionFloat Center; // 0x104
};

struct UAnimSet : UObject {
	char bAnimRotationOnly : 1; // 0x60
	char m_bUsesHandIK : 1; // 0x60
	char m_bCompressOutFacialBones : 1; // 0x60
	char m_bHasStrippedBones : 1; // 0x60
	TArray<FName> TrackBoneNames; // 0x64
	TArray<ObjectProperty> Sequences; // 0x74
	TMap<None, None> SequenceCache; // 0x84
	TArray<FAnimSetMeshLinkup> LinkupCache; // 0xcc
	TArray<char> BoneUseAnimTranslation; // 0xdc
	TArray<char> ForceUseMeshTranslation; // 0xec
	TArray<FName> UseTranslationBoneNames; // 0xfc
	TArray<FName> ForceMeshTranslationBoneNames; // 0x10c
	FName PreviewSkelMeshName; // 0x11c
	FName BestRatioSkelMeshName; // 0x124
	TArray<FName> m_FacialFilteredBones; // 0x12c
};

struct USeqVar_Group : USeqVar_Object {
	FName GroupName; // 0xc4
	char bCachedList : 1; // 0xcc
	TArray<ObjectProperty> Actors; // 0xd0
};

struct UTgSpecialFxLightManager : UObject {
	char c_FxLightsEnabled : 1; // 0x60
	char c_FxLightsUnconstrained : 1; // 0x60
	int32_t c_FxLightsMaxActive; // 0x64
	int32_t c_FxLightsMaxDying; // 0x68
	TArray<FPointer> m_ActiveEmitters; // 0x6c
	TArray<FPointer> m_DyingEmitters; // 0x7c
	ObjectProperty c_LocalPawn; // 0x8c
};

struct AZoneInfo : AInfo {
	float KillZ; // 0x280
	float SoftKill; // 0x284
	UKillZDamageType* KillZDamageType; // 0x288
	char bSoftKillZ : 1; // 0x290
};

struct UTgAnimNotify_ApplyRigidBodyPhysics : UAnimNotify {
	char ShouldAttachToBone : 1; // 0x68
	FName BoneName; // 0x6c
	FVector ImpulseLocation; // 0x74
	float ImpulseRadius; // 0x80
	float ImpulseStrength; // 0x84
};

struct UTgInventoryObject_Listen_Conduit : UTgInvListener {
	int32_t m_nDeviceIdShockPulseMain; // 0xc4
	int32_t m_nDeviceIdShockPulseSupport; // 0xc8
	TArray<ObjectProperty> m_EnemiesHitThisPulse; // 0xcc
};

struct UTgDeviceForm_CorrupterInhand : UTgDeviceForm {
	ObjectProperty m_Corrupter; // 0x28c
	float m_fFadeParamMin; // 0x294
	float m_fFadeParamMax; // 0x298
	float m_fAmmoParamMin; // 0x29c
	float m_fAmmoParamMax; // 0x2a0
	float m_fMaskParamMin; // 0x2a4
	float m_fMaskParamMax; // 0x2a8
	float m_fPreviousAppliedAmmoPerc; // 0x2ac
	float m_fCurrentAppliedAmmoPerc; // 0x2b0
	float m_fAnimatedReloadStartNormalizedTime; // 0x2b4
	float m_fAnimatedReloadEndNormalizedTime; // 0x2b8
	float m_fReloadDuration; // 0x2bc
	float m_fReloadTimer; // 0x2c0
};

struct ATgDevice_SecondWind : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedHustleDevice; // 0xa0c
	float m_fSprintEndTimestamp; // 0xa14
};

struct ATgDevice_ShoulderBash : ATgDevice_Charge {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa78
	char m_bHasHitTarget : 1; // 0xa80
	FVector m_vLastChargeStartLocation; // 0xa84
};

struct ALiftCenter : ANavigationPoint {
	ObjectProperty MyLift; // 0x378
	float MaxDist2D; // 0x380
	FVector LiftOffset; // 0x384
	char bJumpLift : 1; // 0x390
	float CollisionHeight; // 0x394
	ObjectProperty LiftTrigger; // 0x398
};

struct USkyLightComponent : ULightComponent {
	float LowerBrightness; // 0x1a4
	FColor LowerColor; // 0x1a8
};

struct UTgAIBehaviorAction_MoveToDamagingDeployable : UTgAIBehaviorAction_MoveToTarget {
	char bMustBeEnemy : 1; // 0x9c
	char bIgnoreInsideCollision : 1; // 0x9c
	char bMoveAway : 1; // 0x9c
};

struct ATgPawn_Astro : ATgPawn_Character {
	ObjectProperty m_LightSpeedDevice; // 0x3160
	ObjectProperty m_GravityLiftDevice; // 0x3168
	ObjectProperty m_AstralMarkDevice; // 0x3170
	ObjectProperty m_AstralCycleCard; // 0x3178
	ObjectProperty m_StarSeekerCard; // 0x3180
	ObjectProperty m_AstralTarget; // 0x3188
	ObjectProperty m_GravityLiftTarget; // 0x3190
	ObjectProperty m_HitGravityLiftTarget; // 0x3198
	ObjectProperty r_HitAstralTarget; // 0x31a0
	ObjectProperty r_RemoveAstralTarget; // 0x31a8
	TArray<ObjectProperty> m_AstralMarkTargets; // 0x31b0
	float m_fDeadSpaceTimer; // 0x31c0
	char m_bDeadSpaceTimerActive : 1; // 0x31c4
	FRotator r_mUltimateAimRotation; // 0x31c8
};

struct ATgDevice_DualFire : ATgDevice_ToggleWithLockout {
	DelegateProperty __InterruptFiringDelegate__Delegate; // 0xa10
};

struct UUIDataCommon : UUIDataObject {
	char m_bInitialLevelUpdate : 1; // 0x74
	char m_bHasBountyInventory : 1; // 0x74
	int32_t m_nPreviousLevel; // 0x78
	int32_t m_nLevel; // 0x7c
	int32_t m_nItemsTotal; // 0x80
	int32_t m_nItemsOwned; // 0x84
	int32_t m_nXPProgress; // 0x88
	int32_t m_nXPRequired; // 0x8c
	float m_fXPPercent; // 0x90
	float m_fItemsPercent; // 0x94
	ObjectProperty m_pHiddenDLCFeatureToShow; // 0x98
	TMap<None, None> m_PortalAccounts; // 0xa0
	TArray<ObjectProperty> m_BurnA; // 0xe8
	TArray<ObjectProperty> m_BurnB; // 0xf8
	TArray<ObjectProperty> m_BurnC; // 0x108
	TArray<ObjectProperty> m_BurnD; // 0x118
	TArray<ObjectProperty> m_Avatars; // 0x128
	TArray<ObjectProperty> m_EquipableTitles; // 0x138
	TArray<ObjectProperty> m_LoadingFrames; // 0x148
	TArray<ObjectProperty> m_Mounts; // 0x158
	TArray<ObjectProperty> m_AnnouncerPacks; // 0x168
	TArray<ObjectProperty> m_Sprays; // 0x178
	TArray<ObjectProperty> m_DeathStamps; // 0x188
	TArray<ObjectProperty> m_MusicPacks; // 0x198
	TArray<ObjectProperty> m_DeathCards; // 0x1a8
	TArray<ObjectProperty> m_MatchBoosters; // 0x1b8
	TArray<ObjectProperty> m_LoadoutSlots; // 0x1c8
	TArray<ObjectProperty> m_Bundles; // 0x1d8
	TArray<ObjectProperty> m_GameStore; // 0x1e8
	TArray<ObjectProperty> m_ActivatedMatchBoosters; // 0x1f8
	Fdword m_dwPrevBattlePassPoints; // 0x208
	Fdword m_dwBattlePassPoints; // 0x20c
	Fdword m_dwPrevBattlePassLevel; // 0x210
	Fdword m_dwBattlePassLevel; // 0x214
	Fdword m_dwPrevBattlePassTier; // 0x218
	Fdword m_dwBattlePassTier; // 0x21c
	Fdword m_bBattlePassOwned; // 0x220
	int32_t m_nBountyCoinBalance; // 0x224
	float m_fDeferredBountyInventoryUpdateDelay; // 0x228
	float m_fLastBountySaleUpdateTimestamp; // 0x22c
	float m_fBountySaleUpdateMinPeriod; // 0x230
	float m_fLastBountyInventoryUpdateTimestamp; // 0x234
	float m_fBountyInventoryUpdateMinPeriod; // 0x238
	TArray<ObjectProperty> m_BountySaleItems; // 0x23c
};

struct UNxForceFieldRadialComponent : UNxForceFieldComponent {
	float ForceStrength; // 0x2bc
	float ForceRadius; // 0x2c0
	float SelfRotationStrength; // 0x2c4
	ERadialImpulseFalloff ForceFalloff; // 0x2c8
	FPointer Kernel; // 0x2cc
};

struct UUIComponent_HealFeedEntry : UUIComponent_Display {
	ObjectProperty m_mcText; // 0x124
	float m_fRawAmount; // 0x12c
	float m_fChangeAmount; // 0x130
	char m_bHealingReduced : 1; // 0x134
	HealDisplayType m_eHealDisplayType; // 0x138
};

struct ATgDevice_Requip : ATgDevice {
	ObjectProperty m_InhandWeapon; // 0xa04
};

struct USequenceFrame : USequenceObject {
	int32_t SizeX; // 0x98
	int32_t SizeY; // 0x9c
	int32_t BorderWidth; // 0xa0
	char bDrawBox : 1; // 0xa4
	char bFilled : 1; // 0xa4
	char bTileFill : 1; // 0xa4
	FColor BorderColor; // 0xa8
	FColor FillColor; // 0xac
};

struct UUIScene_UIHudScore : UUIScene {
	ObjectProperty m_pHudScoreHH; // 0x1cc
};

struct UMorphNodeWeightByBoneAngle : UMorphNodeWeightBase {
	float Angle; // 0x84
	float NodeWeight; // 0x88
	FName BaseBoneName; // 0x8c
	EAxis BaseBoneAxis; // 0x94
	EAxis AngleBoneAxis; // 0x95
	char bInvertBaseBoneAxis : 1; // 0x98
	char bInvertAngleBoneAxis : 1; // 0x98
	char bControlMaterialParameter : 1; // 0x98
	FName AngleBoneName; // 0x9c
	int32_t MaterialSlotId; // 0xa4
	FName ScalarParameterName; // 0xa8
	ObjectProperty MaterialInstanceConstant; // 0xb0
	TArray<FBoneAngleMorph> WeightArray; // 0xb8
};

struct ATgStealthGrassActor : AActor {
	FVector c_vBaseOffset; // 0x280
	FVector c_vGrassOffset; // 0x28c
	float c_fGrassOffsetInterpSpeed; // 0x298
	char c_bLowerGrass : 1; // 0x29c
	char m_bHasLoot : 1; // 0x29c
	char r_bCanHealNow : 1; // 0x29c
	float c_fLowerGrassAlpha; // 0x2a0
	ComponentProperty c_GrassMesh; // 0x2a4
	ComponentProperty c_GroundMesh; // 0x2ac
	ComponentProperty m_ParticleSystemComponent; // 0x2b4
	ObjectProperty m_LootParticleSystem; // 0x2bc
	ObjectProperty m_NoLootParticleSystem; // 0x2c4
	ObjectProperty m_SpawnedDeployable; // 0x2cc
	float m_fDeployableSpawnTimer; // 0x2d4
	float m_fDeployableSpawnChanceOnInit; // 0x2d8
	float m_fDeployableSpawnChanceOnTimer; // 0x2dc
	int32_t m_nLootDeployableId; // 0x2e0
	ObjectProperty m_HealingDevice; // 0x2e4
	int32_t m_HealingDeviceId; // 0x2ec
	float m_fDisableHealingTime; // 0x2f0
	float m_fEnableHealingTime; // 0x2f4
	float AlwaysRelevantDistanceSquared; // 0x2f8
	float MaxRelevantDistanceSquared; // 0x2fc
};

struct USeqAct_MITV_Activate : USequenceAction {
	float DurationOfMITV; // 0x108
};

struct UGFxAction_SetVariable : USequenceAction {
	ObjectProperty Movie; // 0x108
	FString Variable; // 0x110
};

struct UTgAnimNodeBlendByCombatWariness : UTgAnimNodeBlendList {
	float CombatWarinessDuration; // 0x168
	char AllowIdleAnimToComplete : 1; // 0x16c
	char AllowWaryAnimToComplete : 1; // 0x16c
	char IsWary : 1; // 0x16c
	float WaryTime; // 0x170
};

struct ATgDevice_SplittingIce : ATgDevice_ArcingBeam {
	char m_bShouldRequireRootedTarget : 1; // 0xa1c
};

struct UGameCrowdBehavior_PlayAnimation : UGameCrowdAgentBehavior {
	TArray<FName> AnimationList; // 0x9c
	float BlendInTime; // 0xac
	float BlendOutTime; // 0xb0
	char bUseRootMotion : 1; // 0xb4
	char bLookAtPlayer : 1; // 0xb4
	char bLooping : 1; // 0xb4
	char bBlendBetweenAnims : 1; // 0xb4
	ObjectProperty CustomActionTarget; // 0xb8
	int32_t LoopIndex; // 0xc0
	float LoopTime; // 0xc4
	ObjectProperty AnimSequence; // 0xc8
	int32_t AnimationIndex; // 0xd0
};

struct UInteractiveFoliageComponent : UStaticMeshComponent {
	FPointer FoliageSceneProxy; // 0x310
};

struct ATgDevice_Billow : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
};

struct UTgAIBehaviorAction_Wiggle : UTgAIBehaviorAction {
	float WiggleIntensity; // 0x94
};

struct UTgDeviceFire_Salvo : UTgDeviceFire {
	ObjectProperty m_CachedDrogozInhand; // 0x268
};

struct UUIData_JsonFeature : UUIData {
	FJsonFeatureData m_Feature; // 0x64
};

struct UUIComponent_EndOfMatchLobbyInactiveTrial : UUIComponent_Display {
	ObjectProperty m_mcInactiveText; // 0x124
};

struct USeqAct_Trace : USequenceAction {
	char bTraceActors : 1; // 0x108
	char bTraceWorld : 1; // 0x108
	FVector TraceExtent; // 0x10c
	FVector StartOffset; // 0x118
	FVector EndOffset; // 0x124
	ObjectProperty HitObject; // 0x130
	float Distance; // 0x138
	FVector HitLocation; // 0x13c
};

struct UTgAIBehaviorCondition_IsWithinDistance : UTgAIBehaviorCondition {
	char bIsXYOnly : 1; // 0x98
	float DistanceCheck; // 0x9c
};

struct USeqCond_IsLoggedIn : USequenceCondition {
	int32_t NumNeededLoggedIn; // 0xec
};

struct UUIData_Goal : UUIData {
	Fdword m_dwActivityId; // 0x64
	Fdword m_dwGoalGroupId; // 0x68
	Fdword m_dwGoalId; // 0x6c
};

struct UUIComponent_Loadout : UUIComponent_Display {
	ObjectProperty m_pGems[0x5]; // 0x124
	ObjectProperty m_pCardIcons[0x5]; // 0x14c
	ObjectProperty m_pLock; // 0x174
	ObjectProperty m_pNewLoadoutText; // 0x17c
	ObjectProperty m_pTitle; // 0x184
	ObjectProperty m_mcEmptyLoadoutCTA; // 0x18c
	ObjectProperty m_mcFullLoadoutCTA; // 0x194
	char m_bShowLoadoutCTA : 1; // 0x19c
	char m_bShowDeleteButton : 1; // 0x19c
	char m_bDisableEmptyDecks : 1; // 0x19c
	ObjectProperty m_pCancelButton; // 0x1a0
	ObjectProperty m_pSelectLoadoutButton; // 0x1a8
};

struct UUIComponent_WinterEventEvents : UUIComponent_Display {
	ObjectProperty m_mcResetsAt; // 0x124
	ObjectProperty m_pDays; // 0x12c
	ObjectProperty m_pTooltip; // 0x134
	ObjectProperty m_grEvents; // 0x13c
};

struct UUIScene_UIPopupPartyManager : UUIScene {
	ObjectProperty m_pCloseButton; // 0x1cc
	ObjectProperty m_pList; // 0x1d4
	TArray<ObjectProperty> m_mcTitle; // 0x1dc
	ObjectProperty m_pSelectAllAction; // 0x1ec
	float m_fWaitingTimer; // 0x1f4
	float m_fWaitingTimeOut; // 0x1f8
};

struct UUIComponent_Chests : UUIComponent {
	int32_t m_nOnTickCallbackHandle; // 0x118
	char m_bLastOpeningWasGift : 1; // 0x11c
	char m_bShowingDetails : 1; // 0x11c
	float m_fRevealTimer; // 0x120
	float m_fAcquisitionPoolTimer; // 0x124
	float m_fChestPreviewTimer; // 0x128
	UICHESTS_STATE m_eState; // 0x12c
	ObjectProperty m_pDisplayedData; // 0x130
	TArray<ObjectProperty> m_GiftAcquisitions; // 0x138
	ObjectProperty m_mcGiftDetails; // 0x148
	ObjectProperty m_mcGiftMessage; // 0x150
	ObjectProperty m_mcGiftDesc; // 0x158
	ObjectProperty m_mcGiftDescTitle; // 0x160
	ObjectProperty m_mcGiftDescSubtitle; // 0x168
	ObjectProperty m_mcOpenedChestContainer; // 0x170
	ObjectProperty m_mcOpenedItemName; // 0x178
	ObjectProperty m_mcOpenedItemType; // 0x180
	ObjectProperty m_mcOpenedItemOpenAgainTF; // 0x188
	ObjectProperty m_mcChestItemListTitle; // 0x190
	ObjectProperty m_mcItemListTitle; // 0x198
	ObjectProperty m_mcItemListDesc; // 0x1a0
	ObjectProperty m_mcItemListOwnedCount; // 0x1a8
	ObjectProperty m_mcPurchaseButtonWarningTF; // 0x1b0
	ObjectProperty m_pItemPreviewStack; // 0x1b8
	ObjectProperty m_pChestList; // 0x1c0
	ObjectProperty m_pItemList; // 0x1c8
	ObjectProperty m_pOpenChestButton; // 0x1d0
	ObjectProperty m_pOpenedItemEquip; // 0x1d8
	ObjectProperty m_pOpenedItemGoBack; // 0x1e0
	ObjectProperty m_pOpenedItemOpenAgain; // 0x1e8
	ObjectProperty m_pUnlockChestButton; // 0x1f0
	ObjectProperty m_pOpenedItemUnlockChestButton; // 0x1f8
	ObjectProperty m_pGiftPlayer; // 0x200
	ObjectProperty m_pItemListChestIcon; // 0x208
	ObjectProperty m_pItemListItemHint; // 0x210
	ObjectProperty m_pSkipRevealTimerAction; // 0x218
	ObjectProperty m_pOpenItemContinueAction; // 0x220
	ObjectProperty m_pUnlockChestAction; // 0x228
	ObjectProperty m_pOpenChestAction; // 0x230
	ObjectProperty m_pSendGiftAction; // 0x238
	ObjectProperty m_pOpenGiftAction; // 0x240
	ObjectProperty m_pChestDetailsAction; // 0x248
	ObjectProperty m_pGiftDetailsAction; // 0x250
	ObjectProperty m_pOpenedItemEquipAction; // 0x258
	ObjectProperty m_pChestBumperBlockerAction; // 0x260
	ObjectProperty m_grChests; // 0x268
	ObjectProperty m_grItems; // 0x270
};

struct UUIHudBurns : UTgGfxScene {
	int32_t m_nCurrentCredits; // 0x1ec
	int32_t m_nUsedCredits; // 0x1f0
	int32_t m_nActiveItem; // 0x1f4
	int32_t m_nLastActiveIndex; // 0x1f8
	char m_bOpenPostTimelapse : 1; // 0x1fc
	FUIITEMRANK m_Items[0x4]; // 0x200
	FUIITEMRANK m_Temps[0x4]; // 0x230
	ObjectProperty m_mcBack; // 0x260
	ObjectProperty m_mcUndo; // 0x268
	ObjectProperty m_mcTitle; // 0x270
	ObjectProperty m_mcSubtitle; // 0x278
	ObjectProperty m_mcCredits; // 0x280
	ObjectProperty m_mcInfo; // 0x288
	ObjectProperty m_mcInfoFrame; // 0x290
	ObjectProperty m_mcInfoTitle; // 0x298
	ObjectProperty m_mcInfoSubtitle; // 0x2a0
	ObjectProperty m_mcAutoBuyDialogue; // 0x2a8
	ObjectProperty m_mcAutoBuyTitle; // 0x2b0
	ObjectProperty m_mcAutoBuyDesc; // 0x2b8
	ObjectProperty m_mcAutoBuyPrompt; // 0x2c0
	FUIITEMDATA m_mcInfoUpgrade[0x3]; // 0x2c8
	ObjectProperty m_mcInfoUpgradeArrow[0x2]; // 0x388
	ObjectProperty m_AutoBuyOffButton; // 0x398
	FUIITEMGROUP m_Group[0x4]; // 0x3a0
	ObjectProperty m_scPurchase; // 0x920
	ObjectProperty m_grItem; // 0x928
	FUIITEMRANK m_UndoQue[0xc]; // 0x930
	int32_t m_nUndoIterator; // 0x9c0
};

struct ATgPlayerCamera : ACamera {
	ObjectProperty PlayerOwner; // 0x604
	ObjectProperty CurrentCameraMod; // 0x60c
	UTgCameraModule* DefaultCameraModuleClass; // 0x614
	TArray<ObjectProperty> CameraModuleList; // 0x61c
	FRotator CamAngle; // 0x62c
	char m_bIsLowHealth : 1; // 0x638
	char bTweening : 1; // 0x638
	char m_bPlayingHeal : 1; // 0x638
	FVector CameraLocationLocalToTarget; // 0x63c
	FQuat CameraRotationLocalToTarget; // 0x650
	float fTweenStart; // 0x660
	float fTweenDuration; // 0x664
	ObjectProperty LastCameraMod; // 0x668
	float m_fCollisionTraceExtent; // 0x670
	ObjectProperty m_LowHealthCameraEffect; // 0x674
	ObjectProperty m_BleedCameraEffect; // 0x67c
	ObjectProperty m_DazeCameraEffect; // 0x684
	ObjectProperty m_FireCameraEffect; // 0x68c
	ObjectProperty m_FreezeCameraEffect; // 0x694
	ObjectProperty m_HealCameraEffect; // 0x69c
	ObjectProperty m_KnockbackCameraEffect; // 0x6a4
	ObjectProperty m_MarkCameraEffect; // 0x6ac
	ObjectProperty m_PoisonCameraEffect; // 0x6b4
	ObjectProperty m_VenomCameraEffect; // 0x6bc
	ObjectProperty m_RootCameraEffect; // 0x6c4
	ObjectProperty m_SlowCameraEffect; // 0x6cc
	ObjectProperty m_StunCameraEffect; // 0x6d4
	ObjectProperty m_HiddenCameraEffect; // 0x6dc
	ObjectProperty m_GrassCameraEffect; // 0x6e4
	ObjectProperty m_TeleportCameraEffect; // 0x6ec
	ObjectProperty m_PreTeleportCameraEffect; // 0x6f4
	ObjectProperty m_CCImmuneCameraEffect; // 0x6fc
	ObjectProperty m_CrippleCameraEffect; // 0x704
	ObjectProperty m_RevealedCameraEffect; // 0x70c
	ObjectProperty m_WeatherCameraEffect; // 0x714
	ObjectProperty m_CurrentWeatherVolume; // 0x71c
	TArray<ObjectProperty> m_CameraEffects; // 0x724
	int32_t m_nCameraEffectIdCounter; // 0x734
	ATgEmitter_CameraEffect_DamageBase* m_HealthDamageCameraEffectClasses[0x8]; // 0x738
	ATgEmitter_CameraEffect_DamageBase* m_ShieldDamageCameraEffectClasses[0x8]; // 0x778
	FPropertyDecayState m_HealthDamageFXState[0x8]; // 0x7b8
	FPropertyDecayState m_HealingFXState; // 0x818
	FPropertyDecayParams m_HealthDamageFXParams; // 0x824
	FPropertyDecayParams m_HealingFXParams; // 0x838
	float m_fAccumulateHealing; // 0x84c
	float m_fSecondsSinceLastHealFXUpdate; // 0x850
	float m_fHealFXUpdatePeriod; // 0x854
	float m_fBloodHazeIntensity; // 0x858
	float m_fHealingFXHalflifeAccumulation; // 0x85c
	float m_fHealingFXHalflifeImpulse; // 0x860
	float m_fHealingFXReliefFactor; // 0x864
	float m_fHealingFXAccumulationMix; // 0x868
	float m_fHealingFXVisibleThreshold; // 0x86c
	float m_fHealingCritFXThreshold; // 0x870
	float m_fHealthDamageFXHalflifeAccumulation; // 0x874
	float m_fHealthDamageFXHalflifeImpulse; // 0x878
	float m_fHealthDamageFXPainFactor; // 0x87c
	float m_fHealthDamageFXAccumulationMix; // 0x880
	float m_fHealthDamageCritFXThreshold; // 0x884
	float m_fHealthDamageCritFXAccumulationMix; // 0x888
};

struct UDownloadableContentEnumerator : UObject {
	TArray<FOnlineContent> DLCBundles; // 0x60
	FString DLCRootDir; // 0x70
	TArray<DelegateProperty> FindDLCDelegates; // 0x80
	DelegateProperty __OnFindDLCComplete__Delegate; // 0x90
};

struct UParticleModuleColorByParameter : UParticleModuleColorBase {
	FName ColorParam; // 0x68
	FColor DefaultColor; // 0x70
};

struct ATgVisibilityVolume : AVolume {
	ObjectProperty m_PlayerCameraParticleSystem; // 0x2bc
	ObjectProperty m_PlayerCameraInvisibleParticleSystem; // 0x2c4
};

struct UUIComponent_TorvaldShieldText : UUIComponent_Display {
	ObjectProperty m_mcShieldTextContainer; // 0x124
	ObjectProperty m_mcCurrentShieldText; // 0x12c
	ObjectProperty m_mcMaxShieldText; // 0x134
	float m_fCurrentShield; // 0x13c
	float m_fMaxShield; // 0x140
	char m_bVisible : 1; // 0x144
};

struct UTgGamePhase_Setup : UTgGamePhase {
	char m_bAutoMountAtEnd : 1; // 0xb8
};

struct ATgFlagballGoal : AActor {
	ObjectProperty s_CollisionProxy; // 0x280
	float m_fCollisionProxyRadius; // 0x288
	float m_fCollisionProxyHeight; // 0x28c
	int32_t m_nTaskForceId; // 0x290
	TArray<ObjectProperty> m_Volumes; // 0x294
};

struct UTgSeqAct_RequestMission : USequenceAction {
	int32_t m_nMapGameId; // 0x108
};

struct UTgAIUtilityFilter_LoSToTargetLastKnownLocation : UTgAIUtilityFilter {
	char bInverse : 1; // 0xc0
};

struct UUILandingPanelManager : UPComUIManagerBase {
	ObjectProperty m_pMovie; // 0x84
	TMap<None, None> m_JsonDiscountData; // 0x8c
	TArray<FJsonHomeFeatureData> m_JsonHomeFeatures; // 0xd4
	TArray<int32_t> m_nHotSkinIDs; // 0xe4
	TArray<int32_t> m_nNewSkinIDs; // 0xf4
};

struct UActorFactoryLensFlare : UActorFactory {
	ObjectProperty LensFlareObject; // 0x9c
};

struct UTgInventoryObject_Listen_AddDamage : UTgInvListener {
	char m_bAutoProcOnInhand : 1; // 0xc4
	char m_bCheckIsValidTarget : 1; // 0xc4
};

struct ATgDevice_BuckWild : ATgDevice_Stim {
	ObjectProperty m_CachedInhandDevice; // 0xa04
};

struct USplineMeshComponent : UStaticMeshComponent {
	FSplineMeshParams SplineParams; // 0x310
	FVector SplineXDir; // 0x368
	char bSmoothInterpRollScale : 1; // 0x374
};

struct UTgInventoryObject_Listen_AffectedByDeviceTarget : UTgInventoryObject_Listen_AffectedByDevice {
	char m_bIsCardActive : 1; // 0xc4
	TArray<ObjectProperty> m_HitActors; // 0xc8
};

struct UTgDeviceForm_Smash : UTgDeviceForm {
	TArray<ObjectProperty> m_SmashBlendList1P; // 0x28c
	TArray<ObjectProperty> m_SmashBlendList3P; // 0x29c
};

struct UTgInventoryObject_Listen_BowlingBall : UTgInventoryObject_Listen_ActiveDuringAbility {
	float m_fRocketBootsEndTime; // 0xd4
	float m_fPostRocketBootsTime; // 0xd8
};

struct UTgGamePhase_CooldownReduction : UTgGamePhase {
	float m_fCooldownReduction; // 0xb8
};

struct UTgDeviceForm_TiberiusQ : UTgDeviceForm {
	ObjectProperty m_CachedTiberius; // 0x28c
	float m_fLoopingSFXDuration; // 0x294
	float m_fKillSFXLoopIn; // 0x298
};

struct ATgClientHUD : ATgHUD {
	char m_eState; // 0x5a8
	char m_ePromptType; // 0x5a9
	char m_eCaptureState; // 0x5aa
	float m_fPromptTime; // 0x5ac
	float m_fPromptTimer; // 0x5b0
	ObjectProperty m_pMovie; // 0x5b4
	TArray<ObjectProperty> m_SceneStack; // 0x5bc
	TArray<ObjectProperty> m_PopupStack; // 0x5cc
	TArray<FSceneInfo> m_ScenePreloads; // 0x5dc
	TArray<FString> m_sNeededScenes; // 0x5ec
	char m_bShowCursor : 1; // 0x5fc
	char m_bCaptureKeys : 1; // 0x5fc
	char m_bHidden : 1; // 0x5fc
	char m_bGamepadForced : 1; // 0x5fc
	int32_t m_nNumLeftClick; // 0x600
	ObjectProperty m_PictureInPicture; // 0x604
	TArray<ObjectProperty> m_MoviePlayers; // 0x60c
	ObjectProperty m_DevMenu; // 0x61c
	ObjectProperty m_GAPeach; // 0x624
	TArray<FMessageRedirect> m_MessageRedirects; // 0x62c
	TMap<None, None> m_MessageRedirectMap; // 0x63c
};

struct UParticleModuleUberRainSplashA : UParticleModuleUberBase {
	FRawDistributionFloat Lifetime; // 0x78
	FRawDistributionVector StartSize; // 0x9c
	FRawDistributionVector StartRotation; // 0xc0
	char bInheritParent : 1; // 0xe4
	char MultiplyX : 1; // 0xe4
	char MultiplyY : 1; // 0xe4
	char MultiplyZ : 1; // 0xe4
	FRawDistributionVector LifeMultiplier; // 0xe8
	FRawDistributionVector ColorOverLife; // 0x10c
	FRawDistributionFloat AlphaOverLife; // 0x130
};

struct UMaterialExpressionSubtract : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
};

struct ATgAIController_BehaviorLaneNpc : ATgAIController_Behavior {
	ObjectProperty GoalTarget; // 0x930
	char bDespawnOnLoseCombatTarget : 1; // 0x938
	char bIsBehindSquad : 1; // 0x938
	char bTooFarFromLane : 1; // 0x938
};

struct UParticleModuleTypeDataApex : UParticleModuleTypeDataBase {
	ObjectProperty ApexIOFX; // 0x68
	ObjectProperty ApexEmitter; // 0x70
};

struct ATgSkeletalMeshActor_Lobby : ATgSkeletalMeshActor_LobbyBase {
	float m_fSpawnOffsetYaw; // 0x4d8
	float m_fMaxSpawnRotation; // 0x4dc
	float m_fMinSpawnRotation; // 0x4e0
	char m_bAdjustMeshToGround : 1; // 0x4e4
	char m_bHideDuringPostureChanges : 1; // 0x4e4
	char m_bCanBeRotated : 1; // 0x4e4
	char m_bForceActiveForVideo : 1; // 0x4e4
	char m_bInTransition : 1; // 0x4e4
	char m_bAwaitingPostureChange : 1; // 0x4e4
	char m_bEnablePostures : 1; // 0x4e4
	int32_t m_CardMICBotIdPending; // 0x4e8
	float m_CardMICTransitionDesiredAlpha; // 0x4ec
	float m_CardMICTransitionAlpha; // 0x4f0
	ObjectProperty m_FlagStandActor; // 0x4f4
	ObjectProperty m_PedestalActor; // 0x4fc
	TArray<ObjectProperty> m_CardMICs; // 0x504
	TG_POSTURE r_CurrentPosture; // 0x514
	float m_fRotationAmount; // 0x518
	float m_fDesiredRotationAmount; // 0x51c
	FRotator m_rOriginalRotation; // 0x520
	FVector m_vOriginalLocation; // 0x52c
	ObjectProperty m_Spray3dSpecialFx; // 0x538
	float m_fSpray3dTriggerTime; // 0x540
	float m_fSpray3dTriggerTimer; // 0x544
	int32_t m_nSkinId; // 0x548
	int32_t m_nDeviceSkinId; // 0x54c
	float m_fSelectionGlowRemainingTime; // 0x550
	float m_fSelectionGlowTotalTime; // 0x554
	TArray<ObjectProperty> m_PostureBlendNodes; // 0x558
};

struct UAnimNodeSynch : UAnimNodeBlendBase {
	TArray<FSynchGroup> Groups; // 0x114
};

struct ATgDevice : AWeapon {
	FPointer VfTable_ITgGameplayCurveOwner; // 0x2fc
	int32_t r_nDeviceId; // 0x304
	int32_t r_nDeviceInstanceId; // 0x308
	int32_t r_nInstanceCount; // 0x30c
	TG_EQUIP_POINT r_eEquippedAt; // 0x310
	char CurrentFireMode; // 0x311
	char m_PendingFireMode; // 0x312
	ETargetingModeStatus c_eTargetingModeStatus; // 0x313
	char m_nDesiredFireMode; // 0x314
	EDeviceFailType m_eCachedDeviceFailType; // 0x315
	EBankCooldownReduction m_eShouldBankCooldownReduction; // 0x316
	ECastMode m_eCastModeOverride; // 0x317
	EReticuleType m_ReticuleType; // 0x318
	EReticuleType m_ZoomedReticuleType; // 0x319
	DeviceEmoteAt m_DeviceEmoteAt; // 0x31a
	DeviceTimerBarType m_DeviceTimerBarType; // 0x31b
	int32_t r_nPointsAllocated; // 0x31c
	char m_bSocketMaxCalculated : 1; // 0x320
	char r_bParentDeviceOwnedByOffhand : 1; // 0x320
	char bPendingFire : 1; // 0x320
	char m_IsPendingSetFireMode : 1; // 0x320
	char m_bEquipEffectsApplied : 1; // 0x320
	char m_CachedMissedInstantFire : 1; // 0x320
	char c_bUsesTargetingReticle : 1; // 0x320
	char r_OverrideUsesTargetingModeAsFalse : 1; // 0x320
	char s_bIgnoreReceivedAim : 0; // 0x320
	char m_bHandDevice : 0; // 0x320
	char m_bProcAsIfHandDevice : 0; // 0x320
	char m_bLockInputDuringFire : 0; // 0x320
	char m_bLockCameraDuringFire : 0; // 0x320
	char m_bShouldCacheAim : 0; // 0x320
	char r_bConsumedOnUse : 0; // 0x320
	char r_bConsumedOnDeath : 0; // 0x320
	char m_bCachedDeviceCanFire : 0; // 0x320
	char m_bCarryPreFireToPostFire : 0; // 0x320
	char m_bConsumePowerPoolOnStartFire : 0; // 0x320
	char m_bAlwaysStartCooldown : 0; // 0x320
	char m_bIgnoreCooldown : 0; // 0x320
	char m_bInTargetingMode : 0; // 0x320
	char m_bWasCancelled : 0; // 0x320
	char m_IsBeingInterrupted : 0; // 0x320
	char c_bServerFireFailed : 0; // 0x320
	char HasAlreadyFiredOnce : 0; // 0x320
	char m_bBuildupShouldInterruptStealth : 0; // 0x320
	char m_bPreFireShouldInterruptStealth : 0; // 0x320
	char m_bFireShouldInterruptStealth : 0; // 0x320
	char m_bPostFireShouldInterruptStealth : 0; // 0x320
	char m_bReloadingShouldInterruptStealth : 0; // 0x320
	char m_bCancelingShouldInterruptStealth : 0; // 0x320
	char m_bStartFireShouldEnterCombat : 1; // 0x324
	char m_bFireShouldEnterCombat : 1; // 0x324
	char m_bShouldUseInstigatorsTimeDilation : 1; // 0x324
	char m_bDamages : 1; // 0x324
	char m_bStuns : 1; // 0x324
	char m_bProjectileFollowOwnerYaw : 1; // 0x324
	char m_bAimThroughReticule : 1; // 0x324
	char m_bNoReticleBloom : 1; // 0x324
	char m_bUseCustomCastMode : 0; // 0x324
	char m_bCanRegenAmmoWhileFiring : 0; // 0x324
	char m_bOverrideFireModeRegenAmmoWhileFiring : 0; // 0x324
	char m_bUseSimultaneousRegenForAmmoCharges : 0; // 0x324
	char m_bUsesSimulatedAmmo : 0; // 0x324
	char m_bCanReloadEarly : 0; // 0x324
	char m_bSetFullAmmoOnReloadForAnim : 0; // 0x324
	char m_bForce1pViewWhileFiring : 0; // 0x324
	char m_bForce3PViewInBuildup : 0; // 0x324
	char m_bForce3PViewWhileFiring : 0; // 0x324
	char m_bEnterCombatOnFire : 0; // 0x324
	char m_bDeployAtFeetOnFailure : 0; // 0x324
	char m_bMustBeOnGroundToFire : 0; // 0x324
	char m_bHideTargeterWhenInvalid : 0; // 0x324
	char m_bParentAnimComponentHands : 0; // 0x324
	char m_bParentAnimComponent1PHead : 0; // 0x324
	char m_bAmmoWasGiven : 0; // 0x324
	char m_bFirstAmmoWasGiven : 0; // 0x324
	char m_bCooldownWasModified : 0; // 0x324
	char m_bDisableLagCompensation : 0; // 0x324
	char m_bUseSeparateVerticalFrictionKeyframes : 0; // 0x324
	char m_bUseRangeFalloffCurve : 0; // 0x324
	char m_bUseDeviceMeshWhenTargeting : 0; // 0x324
	char m_bPlayPutAway : 0; // 0x324
	char m_bCanToggleTargeting : 1; // 0x328
	char m_bDoNotAllowHeadShots : 1; // 0x328
	char m_bConsolidateMultipleShots : 1; // 0x328
	char m_bAllowFiringDuring3pTo1pTransition : 1; // 0x328
	char s_bLockFiringForRoundEnd : 1; // 0x328
	char m_bPreventInterrupt : 1; // 0x328
	char m_bPreventCancel : 1; // 0x328
	char m_bAllowFireDuringGrab : 1; // 0x328
	char m_bLogServerFireFailures : 0; // 0x328
	char m_bUsesOutroLockout : 0; // 0x328
	char m_bIsFireHoldDevice : 0; // 0x328
	char m_bForceReleaseFireHoldWhenCharged : 0; // 0x328
	char m_bFireHoldFull : 0; // 0x328
	char m_bIs2TapFirehold : 0; // 0x328
	char m_DeviceTimerBarCountsUp : 0; // 0x328
	char m_bCooldownAfterDeployDeath : 0; // 0x328
	char m_bLockingInput : 0; // 0x328
	char m_bLockingRotation : 0; // 0x328
	char m_bLockingCamera : 0; // 0x328
	char m_bSkipGenerateNewSeed : 0; // 0x328
	char m_bNoAutoFirePostHitDelay : 0; // 0x328
	char m_bDevicesLinked : 0; // 0x328
	int32_t m_nSocketIndex; // 0x32c
	int32_t m_nSocketMax; // 0x330
	ObjectProperty s_ParentDevice; // 0x334
	TArray<ObjectProperty> m_FireMode; // 0x33c
	int32_t r_nMeleeComboSeed; // 0x34c
	ObjectProperty c_DeviceForm; // 0x350
	ObjectProperty m_CooldownTimers; // 0x358
	TArray<FImpactInfo> PendingImpactList; // 0x360
	FAimData c_TargetingAim; // 0x370
	FAimData m_CachedAim; // 0x3a4
	float m_fCachedFirePostHitDelay; // 0x3d8
	int32_t m_CachedFireRequestId; // 0x3dc
	float m_fCachedAttackSpeedPercChange; // 0x3e0
	FAimData s_ReceivedAim; // 0x3e4
	FPointer m_pwzDeviceName; // 0x418
	int32_t m_nDeviceType; // 0x420
	float EquipTime; // 0x424
	ObjectProperty s_InventoryObject; // 0x428
	int32_t m_nSkillId; // 0x430
	int32_t r_nInventoryId; // 0x434
	float m_fLastDeviceCanFireTimeStamp; // 0x438
	float m_EndOfLastFireTimeStamp; // 0x43c
	float m_fFiringTimer; // 0x440
	float m_fTimeAccountedFor; // 0x444
	float m_fTimeStampAccountedFor; // 0x448
	float m_IndividualOffhandCooldownTime; // 0x44c
	float m_fTotalReloadTime; // 0x450
	float m_fBankedCooldownReduction; // 0x454
	float c_fCachedManaAtStartFire; // 0x458
	ObjectProperty m_WhileFiringDeviceMode; // 0x45c
	float m_fUnequipTime; // 0x464
	FVector m_vMeshViewOffset; // 0x468
	float m_fWeaponBob; // 0x474
	float m_fMeshFOV; // 0x478
	FVector m_vProjectileSpawnOffset; // 0x47c
	ObjectProperty m_BurstMod; // 0x488
	ObjectProperty m_CooldownMod; // 0x490
	ObjectProperty m_AimForwarderMod; // 0x498
	int32_t m_nFireLoopInstanceId; // 0x4a0
	int32_t r_nAmmoClipCount; // 0x4a4
	int32_t c_nSimLocalAmmoClipCount; // 0x4a8
	TArray<FAmmoTransaction> m_AmmoTransactions; // 0x4ac
	TArray<FAmmoTransaction> m_DelayedAmmoTransactions; // 0x4bc
	TArray<FAmmoTransaction> s_RecievedUnverifiedDelayedAmmoTransactions; // 0x4cc
	TArray<FAmmoTransaction> m_DelayedAmmoTransactionRegen; // 0x4dc
	int32_t m_nPendingRegenAmmoTransactionID; // 0x4ec
	int32_t m_nPendingReloadAmmoTransactionID; // 0x4f0
	FTrackedFiringAmmoConsumption c_EligableRefundFiringIDs[0x1e]; // 0x4f4
	int32_t c_nEligableRefundFiringIDsIndexLast; // 0x5e4
	int32_t c_nEligableRefundFiringIDsIndexFirst; // 0x5e8
	int32_t m_nLastFiringIDToConsumeAmmo; // 0x5ec
	int32_t r_nMaxAmmoClipCount; // 0x5f0
	int32_t m_UniqueAmmoValidationId; // 0x5f4
	float m_fAmmoRegenPerSec; // 0x5f8
	float m_fAmmoRegenCounter; // 0x5fc
	TArray<float> m_AmmoChargeFireTimes; // 0x600
	TArray<ObjectProperty> m_FiredProjectiles; // 0x610
	float m_fForce3PPersistDuration; // 0x620
	float m_fForce3PPersistTimer; // 0x624
	float m_fEnterCombatDuration; // 0x628
	ObjectProperty r_Deployable; // 0x62c
	int32_t r_nProjectiles; // 0x634
	float m_fDeployZForgiveness; // 0x638
	float m_fBottomlessPitCheck; // 0x63c
	float m_fDeployZOffset; // 0x640
	TArray<int32_t> m_Abilities; // 0x644
	int32_t m_DisplayIcon; // 0x654
	FString m_DisplayName; // 0x658
	float m_fOnGroundAltitudeThreshold; // 0x668
	ObjectProperty m_PrimaryWeaponParent; // 0x66c
	ATgWeaponMeshActor* m_WeaponMeshActorClass; // 0x674
	ObjectProperty m_LastKnownHitActor; // 0x67c
	TArray<DelegateProperty> m_OnFiredDelegates; // 0x684
	TArray<DelegateProperty> m_OnReloadDelegates; // 0x694
	TArray<DelegateProperty> m_OnStartFireDelegates; // 0x6a4
	TArray<DelegateProperty> m_OnStopFireDelegates; // 0x6b4
	TArray<DelegateProperty> m_OnCooldownEndDelegates; // 0x6c4
	TArray<DelegateProperty> m_Generic1Delegates; // 0x6d4
	TArray<DelegateProperty> m_Generic2Delegates; // 0x6e4
	TArray<DelegateProperty> m_Generic3Delegates; // 0x6f4
	TArray<int32_t> m_nLinkedDeviceIDs; // 0x704
	TArray<int32_t> m_nLinkedDeviceTypes; // 0x714
	TArray<FTgQueuedSimulatedProjectileSpawn> c_QueuedSimulatedProjectileSpawns; // 0x724
	TArray<FTgQueuedSimulatedProjectileSpawn> s_QueuedProjectileSpawnsFromServer; // 0x734
	TArray<FTgQueuedSimulatedProjectileSpawn> s_QueuedProjectileSpawnsFromClient; // 0x744
	TArray<FTgQueuedProjectileExplosion> s_QueuedProjectileExplosions; // 0x754
	int32_t s_nNumServerRefires; // 0x764
	int32_t s_nNumClientRefires; // 0x768
	TArray<FTgQueuedRefire> s_QueuedRefireRequests; // 0x76c
	TArray<FTgQueuedInstantFireShot> s_QueuedInstantFireShotsFromServer; // 0x77c
	TArray<FTgQueuedInstantFireShot> s_QueuedInstantFireShotsFromClient; // 0x78c
	FPointer m_RandomShotSpreadStream; // 0x79c
	int32_t m_nLastSetShotSpreadSeed; // 0x7a4
	FVector2D m_AimAssistMagnetScale; // 0x7a8
	FVector2D m_AimAssistFrictionScale; // 0x7b0
	FVector2D m_AimAssistTrackingScale; // 0x7b8
	float m_fBulletMagnetismStrengthMultiplier; // 0x7c0
	TArray<FAimAssistKeyframeData> m_AimAssistKeyframesMagnetVert; // 0x7c4
	TArray<FAimAssistKeyframeData> m_AimAssistKeyframesMagnetHoriz; // 0x7d4
	TArray<FAimAssistKeyframeData> m_AimAssistKeyframesFriction; // 0x7e4
	TArray<FAimAssistKeyframeData> m_AimAssistKeyframesTrackingAccHoriz; // 0x7f4
	TArray<FAimAssistKeyframeData> m_AimAssistKeyframesTrackingAngleHoriz; // 0x804
	TArray<FAimAssistKeyframeData> m_AimAssistKeyframesTrackingAccVert; // 0x814
	TArray<FAimAssistKeyframeData> m_AimAssistKeyframesTrackingAngleVert; // 0x824
	TArray<FAimAssistKeyframeData> m_AimAssistKeyframesFrictionVert; // 0x834
	TArray<ObjectProperty> m_GameplayCurveOverrideDevices; // 0x844
	int32_t m_nServerControlledShotSpreadSeed; // 0x854
	float m_fOutroLockoutTime; // 0x858
	float m_fMinTimeBetweenAmmoCharges; // 0x85c
	ObjectProperty m_ForceFeedbackStartHold; // 0x860
	ObjectProperty m_ForceFeedbackFullHold; // 0x868
	ObjectProperty m_ForceFeedbackStopHold; // 0x870
	ObjectProperty m_ForceFeedbackStartFire; // 0x878
	ObjectProperty m_ForceFeedbackStopFire; // 0x880
	ObjectProperty m_ForceFeedbackStartBuildup; // 0x888
	ObjectProperty m_ForceFeedbackStopBuildup; // 0x890
	ObjectProperty m_ForceFeedbackPostFire; // 0x898
	ObjectProperty m_ForceFeedbackStartReload; // 0x8a0
	ObjectProperty m_ForceFeedbackStopReload; // 0x8a8
	ObjectProperty m_ForceFeedbackStartCooldown; // 0x8b0
	float s_fForceReleaseFirHoldFUBARTime; // 0x8b8
	int32_t s_nLastRequestedFireHoldReleaseID; // 0x8bc
	float m_f2TapInputTimer; // 0x8c0
	FAccuracySettings m_AccuracySettings[0x5]; // 0x8c4
	float m_fCurrentAdvancedAccuracy; // 0x950
	float m_fLastShotTimestamp; // 0x954
	int32_t m_nFreeShotsLeft; // 0x958
	float m_fLastMinAccuracy; // 0x95c
	float m_fReticleBloomScale; // 0x960
	FRecoilSettings m_RecoilSettings[0x5]; // 0x964
	int32_t r_nRecoilMultiCenti; // 0x9b4
	float m_fStartFiringTimestamp; // 0x9b8
	float m_fEndFiringTimeStamp; // 0x9bc
	float m_fAccumulatedFiringTime; // 0x9c0
	int32_t m_nRandRecoilNum; // 0x9c4
	int32_t r_nRecoilSeed; // 0x9c8
	int32_t m_nAimAssistPriorityWhileFiring; // 0x9cc
	int32_t r_nAllowUseWhileFlags; // 0x9d0
	float r_fAttackSpeedPercChange; // 0x9d4
	float m_fSimulatedAttackSpeedPercChange; // 0x9d8
	float s_fAttackSpeedPercChangeLeniency; // 0x9dc
	TArray<FAttackSpeedModifier> m_AttackSpeedModifiers; // 0x9e0
	int32_t r_nDeviceLevel; // 0x9f0
	DelegateProperty __DeviceEvent__Delegate; // 0x9f4
};

struct UTgDeviceForm_StreetJustice : UTgDeviceForm {
	TArray<ObjectProperty> m_AppliedFx; // 0x28c
	float m_fExecuteThreshold; // 0x29c
};

struct UTgDeviceFire_Recharge : UTgDeviceFire {
	float s_fLastNoShieldFXPlayTimestamp; // 0x268
	float s_fTimeBetweenNoShieldFX; // 0x26c
};

struct ATgPawn_Azaan : ATgPawn_Character {
	float r_fIreBuff; // 0x3160
	float m_fMaxIre; // 0x3164
	float m_fIreDamagePercent; // 0x3168
	float m_fIreDamageDonePercent; // 0x316c
	float s_fIreDecayStartTime; // 0x3170
	float m_fIreThreshold; // 0x3174
	float m_fDRAtMax; // 0x3178
	float m_fIreDecayDelay; // 0x317c
	float m_fIreDecayRate; // 0x3180
	float m_fIreDamageIncreasePercent; // 0x3184
	float m_fIreDamageDecreasePercent; // 0x3188
	float m_fFrictionMultiplier; // 0x318c
	char m_bAboveIre : 1; // 0x3190
	char m_bHasIreDrainStopTalent : 1; // 0x3190
	ObjectProperty m_CachedUlt; // 0x3194
	ObjectProperty m_CachedDash; // 0x319c
	ObjectProperty m_CachedListener; // 0x31a4
	float m_fFlightMaxRiseSpeed; // 0x31ac
	float m_fUltStartHeight; // 0x31b0
	float m_fMaxHoverDistance; // 0x31b4
	float m_fDampenVelocityFactor; // 0x31b8
	float m_fMaxUpwardsVelocity; // 0x31bc
	float m_fMinUpwardsVelocity; // 0x31c0
	float m_fUpwardsAccel; // 0x31c4
	FName m_nmIreAboveThreshold; // 0x31c8
	FName m_nmIreDropBelowThreshold; // 0x31d0
	int32_t m_nIreDrainDeviceID; // 0x31d8
};

struct UMeshBeaconClient : UMeshBeacon {
	FOnlineGameSearchResult HostPendingRequest; // 0xa4
	FClientConnectionRequest ClientPendingRequest; // 0xb4
	FClientBandwidthTestData CurrentBandwidthTest; // 0xdc
	EMeshBeaconClientState ClientBeaconState; // 0xf0
	EMeshBeaconPacketType ClientBeaconRequestType; // 0xf1
	float ConnectionRequestTimeout; // 0xf4
	float ConnectionRequestElapsedTime; // 0xf8
	FString ResolverClassName; // 0xfc
	UClientBeaconAddressResolver* ResolverClass; // 0x10c
	ObjectProperty Resolver; // 0x114
	char bUsingRegisteredAddr : 1; // 0x11c
	DelegateProperty __OnConnectionRequestResult__Delegate; // 0x120
	DelegateProperty __OnReceivedBandwidthTestRequest__Delegate; // 0x130
	DelegateProperty __OnReceivedBandwidthTestResults__Delegate; // 0x140
	DelegateProperty __OnTravelRequestReceived__Delegate; // 0x150
	DelegateProperty __OnCreateNewSessionRequestReceived__Delegate; // 0x160
};

struct UTgDeviceForm_AtlasBarrage : UTgDeviceForm {
	ObjectProperty m_CachedActiveOverlayController; // 0x28c
};

struct ATgAIController_BehaviorPet : ATgAIController_Behavior {
	ObjectProperty OwnerCombatTarget; // 0x930
};

struct UTgSkelCon_HitReaction : UGameSkelCtrl_Recoil {
	RecoilHitDir m_CurrentRecoilDir; // 0x168
	HitReactionMoveType m_MoveType; // 0x169
	FRecoilInfo m_RecoilFromFront; // 0x16c
	FRecoilInfo m_RecoilFromBack; // 0x24c
	FRecoilInfo m_RecoilFromLeft; // 0x32c
	FRecoilInfo m_RecoilFromRight; // 0x40c
	TArray<FName> m_SlaveSkelControlNames; // 0x4ec
	TArray<ObjectProperty> m_SlaveSkelControls; // 0x4fc
	char m_bInitialized : 1; // 0x50c
};

struct UUIData_MasteryReward : UUIData {
	Fdword m_dwLevel; // 0x64
	ObjectProperty m_pLTIGiven; // 0x68
	ObjectProperty m_pLTIPurchase; // 0x70
	ObjectProperty m_pChampion; // 0x78
};

struct UTgAIBehaviorCondition_TimeSinceLanepusherTookDamage : UTgAIBehaviorCondition {
	float TimeThreshold; // 0x98
};

struct UParticleModuleSpawnPerUnit : UParticleModuleSpawnBase {
	float UnitScalar; // 0x6c
	FRawDistributionFloat SpawnPerUnit; // 0x70
	char bIgnoreSpawnRateWhenMoving : 1; // 0x94
	char bIgnoreMovementAlongX : 1; // 0x94
	char bIgnoreMovementAlongY : 1; // 0x94
	char bIgnoreMovementAlongZ : 1; // 0x94
	float MovementTolerance; // 0x98
	float MaxFrameDistance; // 0x9c
	float MinFrameDistance; // 0xa0
};

struct AImageReflection : AActor {
	char bEnabled : 1; // 0x280
	ComponentProperty ReflectionComponent; // 0x284
	ComponentProperty ImageReflectionComponent; // 0x28c
};

struct UTgAnimNodeRandom : UTgAnimNodeBlendList {
	int32_t m_iDefaultChildIndex; // 0x168
	char m_bConsiderRelevancy : 1; // 0x16c
	char m_bMasterOtherNodes : 1; // 0x16c
	char m_bIsASlave : 1; // 0x16c
	char m_bEnableTimer : 1; // 0x16c
	char m_TimeAllChildren : 1; // 0x16c
	TArray<FName> m_SlaveNames; // 0x170
	TArray<ObjectProperty> m_Slaves; // 0x180
	int32_t m_nPrimaryChild; // 0x190
	FVector2D m_TimeRange; // 0x194
	float m_fRemainingTime; // 0x19c
	TArray<FTgRandomAnimInfo> RandomInfo; // 0x1a0
};

struct UTgSkelControlSingleBone_Ammo : UTgSkelControlSingleBone {
	ObjectProperty m_PawnOwner; // 0x124
	char m_bInvertStrengthFromAmmo : 1; // 0x12c
	float m_fFlatInterpolationRateDecrease; // 0x130
	float m_fInterpolationRateDecrease; // 0x134
	float m_fFlatInterpolationRateIncrease; // 0x138
	float m_fInterpolationRateIncrease; // 0x13c
	int32_t m_nMaxAmmoFallback; // 0x140
};

struct ATgEmitter : AEmitter {
	FName BoneName; // 0x294
};

struct UTgSeqAct_SetTaskforce : USequenceAction {
	int32_t TaskForceNumber; // 0x108
};

struct UTgDeviceForm_ShadowUlt : UTgDeviceForm {
	ObjectProperty m_pBeam; // 0x28c
	ObjectProperty m_pShadow; // 0x294
	TArray<ObjectProperty> m_VatuUltNodes3p; // 0x29c
	TArray<ObjectProperty> m_VatuUltNodes1p; // 0x2ac
};

struct UUIComponent_BattlePassPurchaseAll : UUIComponent_Display {
	ObjectProperty m_pPurchaseAllButton; // 0x124
	ObjectProperty m_mcInterstitialLocationTarget; // 0x12c
	ObjectProperty m_InputPurchaseAll; // 0x134
	float m_fOriginalButtonX; // 0x13c
	float m_fOriginalButtonY; // 0x140
	char m_bGamepadAcknowledged : 1; // 0x144
	char m_bUseEncorePositions : 1; // 0x144
};

struct ATgDevice_ChurchillShield : ATgDevice_Toggle {
	ObjectProperty m_CachedPawn; // 0xa08
};

struct ANxRadialCustomForceField : ANxRadialForceField {
	float SelfRotationStrength; // 0x2f0
	FPointer Kernel; // 0x2f4
};

struct ATgDeploy_TurretLinked : ATgDeploy_MatchParentFireMode {
	ObjectProperty m_ParentTurret; // 0x46c
};

struct UTgAIBehaviorCondition_NumDeaths : UTgAIBehaviorCondition {
	int32_t DeathThreshold; // 0x98
};

struct UTgDataObject : UUIData {
	char m_bDirty : 1; // 0x64
	char m_bCallback : 1; // 0x64
	TArray<UIID> m_Laundry; // 0x68
	TMap<None, None> m_Data; // 0x78
};

struct UUIComponent_EventChallengeMap : UUIComponent_Display {
	ObjectProperty m_pRegions; // 0x124
};

struct UUIComponent_EventChallengeRegionListItem : UUIComponent_Display {
	ObjectProperty m_mcLock; // 0x124
	ObjectProperty m_mcRegionTitle; // 0x12c
	ObjectProperty m_mcTime; // 0x134
	ObjectProperty m_mcTimeText; // 0x13c
	ObjectProperty m_pProgress; // 0x144
	ObjectProperty m_mcProgressText; // 0x14c
};

struct UUIComponent_NotificationCenterCoupons : UUIComponent_Display {
	ObjectProperty m_pEntries; // 0x124
	ObjectProperty m_grInput; // 0x12c
};

struct UCoverMeshComponent : UStaticMeshComponent {
	TArray<FCoverMeshes> Meshes; // 0x310
	FVector LocationOffset; // 0x320
	ObjectProperty AutoAdjustOn; // 0x32c
	ObjectProperty AutoAdjustOff; // 0x334
	ObjectProperty Disabled; // 0x33c
	char bShowWhenNotSelected : 1; // 0x344
};

struct UActorFactoryApexClothing : UActorFactorySkeletalMesh {
	TArray<ObjectProperty> ClothingAssets; // 0xb4
	ERBCollisionChannel ClothingRBChannel; // 0xc4
	FRBCollisionChannelContainer ClothingRBCollideWithChannels; // 0xc8
};

struct USequenceAction : USequenceOp {
	FName HandlerName; // 0xec
	char bCallHandler : 1; // 0xf4
	TArray<ObjectProperty> Targets; // 0xf8
};

struct UAnimNodeScalePlayRate : UAnimNodeBlendBase {
	float ScaleByValue; // 0x114
};

struct APComMusicThemeSyncActor : AActor {
	FName m_ReplicatedMusicEvent; // 0x280
};

struct UOnlineGameInterfaceImpl : UObject {
	ObjectProperty OwningSubsystem; // 0x60
	ObjectProperty GameSettings; // 0x68
	ObjectProperty GameSearch; // 0x70
	TArray<DelegateProperty> CreateOnlineGameCompleteDelegates; // 0x78
	TArray<DelegateProperty> UpdateOnlineGameCompleteDelegates; // 0x88
	TArray<DelegateProperty> DestroyOnlineGameCompleteDelegates; // 0x98
	TArray<DelegateProperty> JoinOnlineGameCompleteDelegates; // 0xa8
	TArray<DelegateProperty> MigrateOnlineGameCompleteDelegates; // 0xb8
	TArray<DelegateProperty> JoinMigratedOnlineGameCompleteDelegates; // 0xc8
	TArray<DelegateProperty> RecalculateSkillRatingCompleteDelegates; // 0xd8
	TArray<DelegateProperty> StartOnlineGameCompleteDelegates; // 0xe8
	TArray<DelegateProperty> EndOnlineGameCompleteDelegates; // 0xf8
	TArray<DelegateProperty> FindOnlineGamesCompleteDelegates; // 0x108
	TArray<DelegateProperty> CancelFindOnlineGamesCompleteDelegates; // 0x118
	ELanBeaconState LanBeaconState; // 0x128
	char LanNonce[0x8]; // 0x129
	int32_t LanAnnouncePort; // 0x134
	int32_t LanGameUniqueId; // 0x138
	int32_t LanPacketPlatformMask; // 0x13c
	float LanQueryTimeLeft; // 0x140
	float LanQueryTimeout; // 0x144
	FPointer LanBeacon; // 0x148
	FPointer SessionInfo; // 0x150
	DelegateProperty __OnFindOnlineGamesComplete__Delegate; // 0x158
	DelegateProperty __OnCreateOnlineGameComplete__Delegate; // 0x168
	DelegateProperty __OnUpdateOnlineGameComplete__Delegate; // 0x178
	DelegateProperty __OnDestroyOnlineGameComplete__Delegate; // 0x188
	DelegateProperty __OnCancelFindOnlineGamesComplete__Delegate; // 0x198
	DelegateProperty __OnJoinOnlineGameComplete__Delegate; // 0x1a8
	DelegateProperty __OnCreateOnlineGameWithPartyComplete__Delegate; // 0x1b8
	DelegateProperty __OnMatchmakeOnlineGameWithPartyComplete__Delegate; // 0x1c8
	DelegateProperty __OnAddSessionMemberComplete__Delegate; // 0x1d8
	DelegateProperty __OnMultiplayerSessionChange__Delegate; // 0x1e8
	DelegateProperty __OnUpdateSessionPropertiesComplete__Delegate; // 0x1f8
	DelegateProperty __OnGameSessionReady__Delegate; // 0x208
	DelegateProperty __OnAcceptPendingGameSessionComplete__Delegate; // 0x218
	DelegateProperty __OnGamePlayersChanged__Delegate; // 0x228
	DelegateProperty __OnMatchStatusChanged__Delegate; // 0x238
	DelegateProperty __OnQuerySessionsForUserComplete__Delegate; // 0x248
	DelegateProperty __OnRegisterPlayerComplete__Delegate; // 0x258
	DelegateProperty __OnUnregisterPlayerComplete__Delegate; // 0x268
	DelegateProperty __OnRetrievedGameSettingsForIP__Delegate; // 0x278
	DelegateProperty __OnStartOnlineGameComplete__Delegate; // 0x288
	DelegateProperty __OnEndOnlineGameComplete__Delegate; // 0x298
	DelegateProperty __OnArbitrationRegistrationComplete__Delegate; // 0x2a8
	DelegateProperty __OnGameInviteAccepted__Delegate; // 0x2b8
	DelegateProperty __OnRecalculateSkillRatingComplete__Delegate; // 0x2c8
	DelegateProperty __OnMigrateOnlineGameComplete__Delegate; // 0x2d8
	DelegateProperty __OnJoinMigratedOnlineGameComplete__Delegate; // 0x2e8
	DelegateProperty __OnQosStatusChanged__Delegate; // 0x2f8
	DelegateProperty __OnGetNumberOfCurrentPlayersComplete__Delegate; // 0x308
	DelegateProperty __OnGetRoomIdFromTitleService__Delegate; // 0x318
	DelegateProperty __OnGetSessionMemberInfoComplete__Delegate; // 0x328
	DelegateProperty __OnGetUserConnectionInfoComplete__Delegate; // 0x338
};

struct UTgAnimNotify_PlayPetAnim : UAnimNotify {
	FName m_ChildSeqName; // 0x68
};

struct UTgInventoryObject_Listen_PipConsequential : UTgInvListener {
	int32_t s_nHitCounter; // 0xc4
};

struct UTgAchievement_Headshot : UTgAchievement {
	int32_t m_nHeadshotsWithoutMissing; // 0x94
};

struct UExponentialHeightFogComponent : UActorComponent {
	char bEnabled : 1; // 0x88
	char bUseActorDirectionForLightDirection : 1; // 0x88
	float FogHeight; // 0x8c
	float FogDensity; // 0x90
	float FogHeightFalloff; // 0x94
	float FogMaxOpacity; // 0x98
	float StartDistance; // 0x9c
	float LightTerminatorAngle; // 0xa0
	float OppositeLightBrightness; // 0xa4
	FColor OppositeLightColor; // 0xa8
	float LightInscatteringBrightness; // 0xac
	FColor LightInscatteringColor; // 0xb0
	FVector DominantDirectionalLightDirection; // 0xb4
};

struct USeqVar_External : USequenceVariable {
	USequenceVariable* ExpectedType; // 0xa0
	FString VariableLabel; // 0xa8
};

struct UTgInventoryObject_Listen_Combo_Skye : UTgInventoryObject_Listen_Combo {
	float m_fLastStealthTime; // 0xcc
	char m_bComboActive : 1; // 0xd0
	char m_bCanTriggerCombo : 1; // 0xd0
	int32_t m_nHitStacks; // 0xd4
};

struct UUIDataStore_GameState : UUIDataStore {
	DelegateProperty __OnRefreshDataFieldValue__Delegate; // 0x98
};

struct UTgChampionTickManager : UObject {
	int32_t m_nCurrentFrame; // 0x60
	int32_t m_nNextID; // 0x64
	ObjectProperty m_CachedPlayerController; // 0x68
	char m_bTickThrottlingEnabled : 1; // 0x70
	float m_fGuaranteedTickDistance; // 0x74
	int32_t m_nTickGroupCount; // 0x78
	TMap<None, None> c_ChampionEntries; // 0x7c
};

struct UUIComponent_PlayQuickPlay : UUIComponent_Display {
	ObjectProperty m_mcCursor; // 0x124
	ObjectProperty m_mcUpDownIndicator; // 0x12c
	ObjectProperty m_mcDailyQueueBonusNotification; // 0x134
	ObjectProperty m_mcDailyQueueBonusNotificationTF; // 0x13c
	ObjectProperty m_mcDailyQueueBonusIcon; // 0x144
	ObjectProperty m_mcJoinQueueBackground; // 0x14c
	ObjectProperty m_pPanels; // 0x154
	ObjectProperty m_pJoinQueueButton; // 0x15c
	ObjectProperty m_grInput; // 0x164
};

struct UUIScene_UIHudShadow : UUIScene {
	ObjectProperty m_pUltBar; // 0x1cc
	ObjectProperty m_pShadow; // 0x1d4
	ObjectProperty m_pShadowUlt; // 0x1dc
	char m_bVisible : 1; // 0x1e4
};

struct UUIComponent_PlayPanel : UUIComponent_Display {
	ObjectProperty m_mcFade; // 0x124
	ObjectProperty m_mcIcon; // 0x12c
	ObjectProperty m_mcIconMulti; // 0x134
	ObjectProperty m_mcTitle; // 0x13c
	ObjectProperty m_mcSubtitle; // 0x144
	ObjectProperty m_mcDelayText; // 0x14c
	ObjectProperty m_mcModeCTA; // 0x154
	ObjectProperty m_mcQueueBonusIcon; // 0x15c
	ObjectProperty m_mcQuestCTA; // 0x164
	ObjectProperty m_mcCheckbox; // 0x16c
	ObjectProperty m_mcModeTypeTF; // 0x174
	ObjectProperty m_mcQueueBonusText; // 0x17c
	ObjectProperty m_mcAchievements; // 0x184
	ObjectProperty m_mcLock; // 0x18c
	ObjectProperty m_mcLockNew; // 0x194
	ObjectProperty m_mcLockInfo; // 0x19c
	ObjectProperty m_mcLockInfoTF; // 0x1a4
	ObjectProperty m_mcMultiQueueStateTF; // 0x1ac
	ObjectProperty m_mcProgressMask; // 0x1b4
	ObjectProperty m_mcInfoButtonIcon; // 0x1bc
	ObjectProperty m_mcRankedProgress; // 0x1c4
	ObjectProperty m_mcRankedProgressRankTF; // 0x1cc
	ObjectProperty m_mcRankedProgressRankIcon; // 0x1d4
	ObjectProperty m_mcRankedProgressProgressTF; // 0x1dc
	ObjectProperty m_pPanelButton; // 0x1e4
	ObjectProperty m_pInfoButton; // 0x1ec
	ObjectProperty m_pGamepadKey; // 0x1f4
	ObjectProperty m_pQueueOpensCountdown; // 0x1fc
	ObjectProperty m_pQueueClosesCountdown; // 0x204
	ObjectProperty m_pRating; // 0x20c
	ObjectProperty m_pRatingTooltip; // 0x214
};

struct UOnlineRecentPlayersList : UObject {
	TArray<FUniqueNetId> RecentPlayers; // 0x60
	TArray<FRecentParty> RecentParties; // 0x70
	FRecentParty LastParty; // 0x80
	int32_t MaxRecentPlayers; // 0x98
	int32_t MaxRecentParties; // 0x9c
	int32_t RecentPlayersAddIndex; // 0xa0
	int32_t RecentPartiesAddIndex; // 0xa4
	TArray<FCurrentPlayerMet> CurrentPlayers; // 0xa8
};

struct UTgAnimNodeToggleWithTransition : UTgAnimNodeBlendList {
	float m_fTransitionStartTime; // 0x168
	float m_fTransitionTimeRemaining; // 0x16c
};

struct UTextureRenderTargetCube : UTextureRenderTarget {
	int32_t SizeX; // 0x108
	EPixelFormat Format; // 0x10c
};

struct UUIScene_UIQuests : UUIScene {
	ObjectProperty m_mcDailyQuests; // 0x1cc
	ObjectProperty m_mcActiveDailyQuests; // 0x1d4
	ObjectProperty m_DailyQuestsGroup; // 0x1dc
	ObjectProperty m_DailyQuestList; // 0x1e4
	ObjectProperty m_mcDailyLoginsResetTF; // 0x1ec
	TArray<FEmptyPanel> m_EmptyPanels; // 0x1f4
	ObjectProperty m_ChampionQuest; // 0x204
	ObjectProperty m_DailyLoginsQuest; // 0x20c
	ObjectProperty m_mcSpecialQuests; // 0x214
	ObjectProperty m_mcActiveSpecialQuests; // 0x21c
	ObjectProperty m_SpecialQuestsGroup; // 0x224
	ObjectProperty m_SpecialQuestList; // 0x22c
	ObjectProperty m_SpecialQuestsArrowNext; // 0x234
	ObjectProperty m_SpecialQuestsArrowPrev; // 0x23c
	ObjectProperty m_mcLoreQuests; // 0x244
	ObjectProperty m_LoreQuestsGroup; // 0x24c
	ObjectProperty m_LoreQuest; // 0x254
	ObjectProperty m_mcLoreQuestTFNext; // 0x25c
	ObjectProperty m_mcLoreQuestProgress; // 0x264
	ObjectProperty m_mcLoreQuestProgressChest; // 0x26c
	ObjectProperty m_mcLoreQuestProgressTF0; // 0x274
	ObjectProperty m_mcLoreQuestProgressTF1; // 0x27c
	ObjectProperty m_mcLoreQuestProgressTF2; // 0x284
	ObjectProperty m_mcLoreQuestProgressTF3; // 0x28c
	ObjectProperty m_LoreQuestProgressBar; // 0x294
	int32_t m_nLoreSeekerGoalAck; // 0x29c
	int32_t m_nLoreSeekerGoalCurrent; // 0x2a0
	ObjectProperty m_pPrimeQuest; // 0x2a4
	ObjectProperty m_PrimeQuestGroup; // 0x2ac
	ObjectProperty m_mcDailyLogins; // 0x2b4
	ObjectProperty m_DailyLoginsProgress; // 0x2bc
	ObjectProperty m_mcDailyLoginsTF0; // 0x2c4
	ObjectProperty m_mcDailyLoginsTF1; // 0x2cc
	QuestPanel m_eCurrentPanel; // 0x2d4
	int32_t m_nNumDailyQuests; // 0x2d8
	int32_t m_nNumSpecialQuests; // 0x2dc
	int32_t m_nQuestsUpdatedHandle; // 0x2e0
	int32_t m_nActivitiesUpdatedHandle; // 0x2e4
	ObjectProperty m_DiscardAction; // 0x2e8
	ObjectProperty m_ClaimRewardAction; // 0x2f0
	ObjectProperty m_LinkAccountAction; // 0x2f8
	ObjectProperty m_BackAction; // 0x300
	ObjectProperty m_pSelectedQuest; // 0x308
};

struct ATgDevice_BuckInhand : ATgDevice {
	float m_fReloadScaleUsed; // 0xa04
	float m_fStartReloadTimestamp; // 0xa08
	float m_fFirstShellReloadTime; // 0xa0c
	float m_fShellReloadTime; // 0xa10
	float m_fPostReloadTime; // 0xa14
	float m_fReloadTimer; // 0xa18
	int32_t m_nProgressiveReloadTransactionID; // 0xa1c
	char m_bIsReloadingFirstShell : 1; // 0xa20
	char s_bPendingServerEndReload : 1; // 0xa20
};

struct UUIComponent_ProgressBarCommendation : UUIComponent_Display {
	ObjectProperty m_mcMaskTeamwork; // 0x124
	ObjectProperty m_mcMaskLeadership; // 0x12c
	ObjectProperty m_mcMaskSkill; // 0x134
};

struct ACoverGroup : AInfo {
	TArray<FActorReference> CoverLinkRefs; // 0x280
	float AutoSelectRadius; // 0x290
	float AutoSelectHeight; // 0x294
};

struct UParticleModuleTypeDataBeam : UParticleModuleTypeDataBase {
	EBeamMethod BeamMethod; // 0x68
	EBeamEndPointMethod EndPointMethod; // 0x69
	FRawDistributionFloat Distance; // 0x6c
	FRawDistributionVector EndPoint; // 0x90
	int32_t TessellationFactor; // 0xb4
	FRawDistributionFloat EmitterStrength; // 0xb8
	FRawDistributionFloat TargetStrength; // 0xdc
	FRawDistributionVector EndPointDirection; // 0x100
	int32_t TextureTile; // 0x124
	char RenderGeometry : 1; // 0x128
	char RenderDirectLine : 1; // 0x128
	char RenderLines : 1; // 0x128
	char RenderTessellation : 1; // 0x128
};

struct UTgGamePhase_TicketsOnPointTick : UTgGamePhase {
	int32_t m_nTicketsPerTick; // 0xb8
};

struct UInterpTrackFaceFX : UInterpTrack {
	TArray<ObjectProperty> FaceFXAnimSets; // 0xa0
	TArray<FFaceFXTrackKey> FaceFXSeqs; // 0xb0
	ObjectProperty CachedActorFXAsset; // 0xc0
	TArray<FFaceFXSoundCueKey> FaceFXSoundCueKeys; // 0xc8
};

struct UTgInventoryObject_Listen_BlastShotHitEffect : UTgInvListener {
	TArray<ObjectProperty> m_PreviouslyHitActors; // 0xc4
	int32_t m_nTargetType; // 0xd4
};

struct UUIComponent_ItemPurchaseButton : UUIComponent_Display {
	ObjectProperty m_pCurrencies; // 0x124
	ObjectProperty m_pButtonCurrency; // 0x12c
	ObjectProperty m_pRealMoneyCurrency; // 0x134
	ObjectProperty m_pGamepadKey; // 0x13c
	ObjectProperty m_pFrameButton; // 0x144
	char bShowPrice : 1; // 0x14c
};

struct AMaterialInstanceActor : AActor {
	ObjectProperty MatInst; // 0x280
};

struct UTgSeqAct_SetEnergyGainBlock : USequenceAction {
	int32_t m_bBlockEnergyGain; // 0x108
};

struct UOnlineGameInterfaceSteamworks : UOnlineGameInterfaceImpl {
	TArray<DelegateProperty> GameInviteAcceptedDelegates; // 0x348
	TArray<DelegateProperty> RegisterPlayerCompleteDelegates; // 0x358
	TArray<DelegateProperty> UnregisterPlayerCompleteDelegates; // 0x368
	DelegateProperty __OnGameInviteAccepted__Delegate; // 0x378
	DelegateProperty __OnRegisterPlayerComplete__Delegate; // 0x388
	DelegateProperty __OnUnregisterPlayerComplete__Delegate; // 0x398
};

struct AFracturedStaticMeshActor : AActor {
	int32_t MaxPartsToSpawnAtOnce; // 0x280
	ComponentProperty FracturedStaticMeshComponent; // 0x284
	ComponentProperty SkinnedComponent; // 0x28c
	TArray<int32_t> ChunkHealth; // 0x294
	char bHasShownMissingSoundWarning : 1; // 0x2a4
	char bBreakChunksOnActorTouch : 1; // 0x2a4
	char bShouldSaveForCheckpoint : 1; // 0x2a4
	TArray<UDamageType*> FracturedByDamageType; // 0x2a8
	float ChunkHealthScale; // 0x2b8
	TArray<ObjectProperty> OverrideFragmentDestroyEffects; // 0x2bc
	float FractureCullMinDistance; // 0x2cc
	float FractureCullMaxDistance; // 0x2d0
	TArray<FDeferredPartToSpawn> DeferredPartsToSpawn; // 0x2d4
	FPhysEffectInfo PartImpactEffect; // 0x2e4
	ObjectProperty ExplosionFractureSound; // 0x2fc
	ObjectProperty SingleChunkFractureSound; // 0x304
	ObjectProperty MI_LoseChunkPreviousMaterial; // 0x30c
};

struct USVehicleSimBase : UActorComponent {
	float WheelSuspensionStiffness; // 0x88
	float WheelSuspensionDamping; // 0x8c
	float WheelSuspensionBias; // 0x90
	float WheelLongExtremumSlip; // 0x94
	float WheelLongExtremumValue; // 0x98
	float WheelLongAsymptoteSlip; // 0x9c
	float WheelLongAsymptoteValue; // 0xa0
	float WheelLatExtremumSlip; // 0xa4
	float WheelLatExtremumValue; // 0xa8
	float WheelLatAsymptoteSlip; // 0xac
	float WheelLatAsymptoteValue; // 0xb0
	float WheelInertia; // 0xb4
	char bWheelSpeedOverride : 1; // 0xb8
	char bClampedFrictionModel : 1; // 0xb8
	char bAutoDrive : 1; // 0xb8
	float AutoDriveSteer; // 0xbc
};

struct UTgAchievement_DeviceDamage : UTgAchievement {
	float m_fDamageDealt; // 0x94
};

struct UTgAIBehaviorCondition_IsMetaGameState : UTgAIBehaviorCondition {
	EMetaGameState TestGameState; // 0x98
};

struct UTgAIBehaviorCondition_TimeInPayloadMode : UTgAIBehaviorCondition {
	float TimeThreshold; // 0x98
};

struct UTgAIBehaviorCondition_DistanceBase : UTgAIBehaviorCondition {
	float DistanceThreshold; // 0x98
};

struct AWebConnection : ATcpLink {
	ObjectProperty WebServer; // 0x2e4
	FString ReceivedData; // 0x2ec
	ObjectProperty Request; // 0x2fc
	ObjectProperty Response; // 0x304
	ObjectProperty Application; // 0x30c
	char bDelayCleanup : 1; // 0x314
	int32_t RawBytesExpecting; // 0x318
	int32_t MaxValueLength; // 0x31c
	int32_t MaxLineLength; // 0x320
	int32_t ConnID; // 0x324
};

struct ATgCollisionProxy_Vortex : ATgCollisionProxy {
	float m_fGroundSpeedStrafePct; // 0x2b4
	float m_fGroundSpeedToVortex; // 0x2b8
	float m_fGroundSpeedPctRetained; // 0x2bc
	float m_fInnerRadius; // 0x2c0
	char m_bEnabled : 1; // 0x2c4
	char m_bOnlyAffectCurrentTarget : 1; // 0x2c4
	ObjectProperty m_LastInstigator; // 0x2c8
};

struct ATgSkeletalMeshActor_Posture : ASkeletalMeshActor {
	TG_POSTURE r_CurrentPosture; // 0x2e8
	TArray<ObjectProperty> m_PostureBlendNodes; // 0x2ec
};

struct UInterpTrackInstFloatParticleParam : UInterpTrackInst {
	float ResetFloat; // 0x60
};

struct AGameCrowdAgentSM : AGameCrowdAgent {
	ComponentProperty Mesh; // 0x500
	ObjectProperty MeshColor; // 0x508
};

struct ATgDevice_ToggleInhand : ATgDevice {
	ObjectProperty m_CachedTgP; // 0xa04
	float m_fCurrentTransitionPct; // 0xa0c
	int32_t m_nProjectilesFired; // 0xa10
	char m_bWaitForOutro : 1; // 0xa14
	float m_fActiveSustainTime; // 0xa18
};

struct UMobileMenuListItem : UMobileMenuElement {
	float Width; // 0x74
	float Height; // 0x78
};

struct UTgEffectDamage_Execute : UTgEffectDamage {
	char m_bApplied : 1; // 0xc0
	char m_bExecute : 1; // 0xc0
};

struct ATgDeploy_Geometry : ATgDeployable {
	TArray<ObjectProperty> m_OverlappingActors; // 0x46c
	TArray<FVector> m_DesiredPushDirection; // 0x47c
	char m_bPushOverlappingActors : 1; // 0x48c
	char m_bAllyPassthrough : 1; // 0x48c
	char m_bEnemyPassthrough : 1; // 0x48c
	float m_fPushFactor; // 0x490
};

struct UTgSeqAct_BeaconExitSetRespawn : USequenceAction {
	ObjectProperty m_RespawnPoint; // 0x108
	char m_bRespawnImmediately : 1; // 0x110
};

struct UUIHudSpectator : UGFxObject {
	int32_t m_nIterations; // 0x104
	int32_t m_BannedIds[0x6]; // 0x108
	char m_bFindMatchDetails : 1; // 0x120
	float m_fUpdateWaitRT; // 0x124
	float m_fUpdateWaitGT; // 0x128
	ObjectProperty _global; // 0x12c
	FBotLifeData m_BotLifeData[0x2]; // 0x134
	ObjectProperty m_pMovie; // 0x16c
};

struct UTgSeqVar_Player : USeqVar_Player {
	TArray<ObjectProperty> HumanPlayers; // 0xdc
	TArray<ObjectProperty> BotPlayers; // 0xec
	TArray<ObjectProperty> PetPlayers; // 0xfc
	char bAllBots : 1; // 0x10c
	char bAllHumans : 1; // 0x10c
	char bAllHumansAndPets : 1; // 0x10c
	int32_t nTaskForceNumber; // 0x110
};

struct UUIComponent_BattlePassRewardTier : UUIComponent_Display {
	ObjectProperty m_pLayoutNormal; // 0x124
};

struct UTgSeqAct_SelectBestSpawnPoint : USequenceAction {
	TArray<ObjectProperty> Points; // 0x108
	ObjectProperty PlayerReceived; // 0x118
};

struct UUIComponent_CorrupterCorruptionUI : UUIComponent_Display {
	ObjectProperty m_CurrentViewPawn; // 0x124
	ObjectProperty m_CurrentTargetPawn; // 0x12c
	ObjectProperty m_mcText; // 0x134
	ObjectProperty m_mcIcon; // 0x13c
	ObjectProperty m_mcAnim; // 0x144
	ObjectProperty m_mcMaxStacks; // 0x14c
	char m_bIsHiding : 1; // 0x154
	char m_bEnabled : 1; // 0x154
	char m_bIsCorruptionCollectorDisplay : 1; // 0x154
	int32_t m_nCurrentCorruptionCharges; // 0x158
};

struct UUIComponent_HeaderTabs : UUIComponent_List {
	ObjectProperty m_pBumpers[0x2]; // 0x260
	ObjectProperty m_NavLeft; // 0x270
	ObjectProperty m_NavRight; // 0x278
	float m_fButtonSpace; // 0x280
	float m_fBumperSpaceLeft; // 0x284
	float m_fBumperSpaceRight; // 0x288
	char m_bIsChestHeader : 1; // 0x28c
};

struct UTgGfxScene : UGFxObject {
	UObject* m_UISceneClass; // 0x104
	ObjectProperty m_UIScene; // 0x10c
	TArray<GFXOPTION> m_OptionList; // 0x114
	TArray<FUIDisplayData> m_DisplayData; // 0x124
	TArray<ObjectProperty> m_Blockers; // 0x134
	TArray<ObjectProperty> m_Prompts; // 0x144
	UIALIGNINGTYPE m_ePromptAlignment; // 0x154
	UISCALINGTYPE m_eScalingType; // 0x155
	UISNAPPINGTYPE m_eSnappingType; // 0x156
	UIALIGNINGTYPE m_eAligningType; // 0x157
	float m_fPromptOffsetX; // 0x158
	int32_t m_nHighlight; // 0x15c
	int32_t m_nSelectCount; // 0x160
	int32_t m_nBackground; // 0x164
	char m_bBlur : 1; // 0x168
	char m_bBlurForeground : 1; // 0x168
	char m_bReshow : 1; // 0x168
	char m_bHidden : 1; // 0x168
	char m_bDisable : 1; // 0x168
	char m_bInitData : 1; // 0x168
	char m_bVisibleOnLoad : 1; // 0x168
	char m_bPushContextOnLoad : 1; // 0x168
	char m_bResetFocusOnShow : 0; // 0x168
	char m_bResetHeaderFocusOnShow : 0; // 0x168
	char m_bResize : 0; // 0x168
	char m_bIsPopup : 0; // 0x168
	char m_bDead : 0; // 0x168
	char m_bAlwaysTick : 0; // 0x168
	char m_bAllowSpectatorClickThru : 0; // 0x168
	char m_bShowCursor : 0; // 0x168
	char m_bCaptureKeys : 0; // 0x168
	char m_bConsumeMotion : 0; // 0x168
	char m_bRequiresFullInstall : 0; // 0x168
	char m_bIsOnline : 0; // 0x168
	char m_bCanShake : 0; // 0x168
	char m_bShouldShake : 0; // 0x168
	char m_bAlwaysKeepOpen : 0; // 0x168
	char m_bAllowMultipleOnStack : 0; // 0x168
	char m_bAllowLeaveQueueKey : 0; // 0x168
	char m_bHasBeenUninitialized : 0; // 0x168
	float m_fScaling; // 0x16c
	float m_fScale; // 0x170
	float m_fDeltaTime; // 0x174
	FVector2D m_CachedPosition; // 0x178
	float m_fThrowAwayX; // 0x180
	float m_fThrowAwayY; // 0x184
	ObjectProperty m_scShown; // 0x188
	ObjectProperty m_scHighlight; // 0x190
	int32_t m_nEventFunc; // 0x198
	int32_t m_nEventType; // 0x19c
	int32_t m_nEventIndex; // 0x1a0
	ObjectProperty m_pFocus; // 0x1a4
	ObjectProperty m_pData; // 0x1ac
	ObjectProperty m_pMovie; // 0x1b4
	ObjectProperty m_pUIData; // 0x1bc
	ObjectProperty m_mcHeaderBumper[0x2]; // 0x1c4
	ObjectProperty m_grHeader; // 0x1d4
	DelegateProperty __DelegateEvent__Delegate; // 0x1dc
};

struct ATgDeploy_GeometryBarrierTank : ATgDeploy_Geometry {
	ObjectProperty m_CachedInaraPawn; // 0x494
	ComponentProperty m_CenterMesh; // 0x49c
	ComponentProperty m_LeftMeshes[0x2]; // 0x4a4
	ComponentProperty m_RightMeshes[0x2]; // 0x4b4
	int32_t m_WallMeshIDCenter; // 0x4c4
	int32_t m_WallMeshIDEndCap; // 0x4c8
	char r_bGrowthModeActivationSignal : 1; // 0x4cc
	char m_bInGrowthMode : 1; // 0x4cc
	char m_bDidInitialHit : 1; // 0x4cc
	char r_bEarthenGuardActive : 1; // 0x4cc
	char r_bHasAlpine : 1; // 0x4cc
	float m_fGrowStartTime; // 0x4d0
};

struct UParticleModule : UObject {
	char bSpawnModule : 1; // 0x60
	char bUpdateModule : 1; // 0x60
	char bFinalUpdateModule : 1; // 0x60
	char bCurvesAsColor : 1; // 0x60
	char b3DDrawMode : 1; // 0x60
	char bSupported3DDrawMode : 1; // 0x60
	char bEnabled : 1; // 0x60
	char bEditable : 1; // 0x60
	char LODDuplicate : 0; // 0x60
	char bSupportsRandomSeed : 0; // 0x60
	char bRequiresLoopingNotification : 0; // 0x60
	char LODValidity; // 0x64
};

struct UTgAIBehaviorCondition_CombatTargetDamageableByDevice : UTgAIBehaviorCondition {
	TG_EQUIP_POINT DeviceSlot; // 0x98
};

struct UUIFade : UTgGfxScene {
	ObjectProperty m_mcBlocker; // 0x1ec
	ObjectProperty m_mcEndOfRoundText; // 0x1f4
};

struct UUIComponent_MatchLobbyTeamChampion : UUIComponent_Display {
	ObjectProperty m_mcFrame; // 0x124
	ObjectProperty m_mcIcon; // 0x12c
	int32_t m_nCharSelectedCBHandle; // 0x134
	int32_t m_nCharLockedCBHandle; // 0x138
};

struct UTgAIBehaviorCondition_AmmoCostPerShot : UTgAIBehaviorCondition {
	TG_EQUIP_POINT DeviceSlot; // 0x98
	int32_t AmmoThreshold; // 0x9c
};

struct APickupFactory : ANavigationPoint {
	char bOnlyReplicateHidden : 1; // 0x378
	char bPickupHidden : 1; // 0x378
	char bPredictRespawns : 1; // 0x378
	char bIsSuperItem : 1; // 0x378
	char bRespawnPaused : 1; // 0x378
	AInventory* InventoryType; // 0x37c
	float RespawnEffectTime; // 0x384
	float MaxDesireability; // 0x388
	ComponentProperty PickupMesh; // 0x38c
	ObjectProperty ReplacementFactory; // 0x394
	ObjectProperty OriginalFactory; // 0x39c
};

struct URB_ConstraintDrawComponent : UPrimitiveComponent {
	ObjectProperty LimitMaterial; // 0x24c
};

struct UTgMenuContentData : UObject {
	TArray<FMeshData> m_MeshData; // 0x60
};

struct UUIScene_UICommendationRewards : UUIScene {
	ObjectProperty m_pRewardItems; // 0x1cc
	ObjectProperty m_mcClose; // 0x1d4
};

struct ATgDevice_Emote : ATgDevice {
	ObjectProperty m_CachedPawnOwner; // 0xa04
	char m_bAccelerationInterruptsDevice : 1; // 0xa0c
	char m_bJumpingInterruptsDevice : 1; // 0xa0c
	char m_bValidEmote : 1; // 0xa0c
	UTgCameraModule* m_DefaultCameraModuleClass; // 0xa10
	UTgCameraModule_ThirdPerson* m_FiringCameraModuleClass; // 0xa18
	ObjectProperty m_FiringCameraModule; // 0xa20
	float m_fCameraTweenInTime; // 0xa28
	float m_fCameraTweenOutTime; // 0xa2c
	FVector m_vFiringCameraOffset; // 0xa30
	int32_t m_nSelectedEmote; // 0xa3c
	float m_fEmotePreHitDelay; // 0xa40
	float m_fEmotePostHitDelay; // 0xa44
	float m_fEmoteMoveSpeedCeiling; // 0xa48
	float m_fEmoteIntroInputLockTime; // 0xa4c
};

struct UUIComponent_BattlePassRewardsInfoPanel : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcSubtitle; // 0x12c
	ObjectProperty m_mcTimeLeft; // 0x134
	ObjectProperty m_mcPassTypeTF; // 0x13c
	ObjectProperty m_pProgress; // 0x144
	ObjectProperty m_mcProgressLevel; // 0x14c
	ObjectProperty m_mcProgressLevelLabel; // 0x154
	ObjectProperty m_mcProgressXP; // 0x15c
	ObjectProperty m_mcProgressLevelNext; // 0x164
};

struct UGameCrowdBehavior_WaitInQueue : UGameCrowdAgentBehavior {
	char bStoppingBehavior : 1; // 0x9c
	ObjectProperty QueuePosition; // 0xa0
};

struct UNxForceFieldCylindricalComponent : UNxForceFieldComponent {
	float RadialStrength; // 0x2bc
	float RotationalStrength; // 0x2c0
	float LiftStrength; // 0x2c4
	float ForceRadius; // 0x2c8
	float ForceTopRadius; // 0x2cc
	float LiftFalloffHeight; // 0x2d0
	float EscapeVelocity; // 0x2d4
	float ForceHeight; // 0x2d8
	float HeightOffset; // 0x2dc
	char UseSpecialRadialForce : 1; // 0x2e0
	FPointer Kernel; // 0x2e4
};

struct UUIInteractable_BattlePassBanner : UUIComponent_Interactable {
	ObjectProperty m_mcTitle; // 0x140
	ObjectProperty m_mcSubtitle; // 0x148
	ObjectProperty m_mcTimeLeft; // 0x150
	ObjectProperty m_mcPassTypeTF; // 0x158
	ObjectProperty m_pProgress; // 0x160
	ObjectProperty m_mcProgressLevel; // 0x168
	ObjectProperty m_mcProgressLevelLabel; // 0x170
	ObjectProperty m_mcProgressXP; // 0x178
	ObjectProperty m_mcProgressLevelNext; // 0x180
	int32_t m_nRewardLevel; // 0x188
	ObjectProperty m_pPreviewStack; // 0x18c
};

struct UUIData_PartyKick : UUIData {
	int32_t m_nRequiredPartySize; // 0x64
	ObjectProperty m_pPostPartyKickResponse; // 0x68
};

struct ULandscapeInfo : UObject {
	FGuid LandscapeGuid; // 0x60
	TMap<None, None> LayerInfoMap; // 0x70
	FPointer DataInterface; // 0xb8
	TMap<None, None> XYtoComponentMap; // 0xc0
	TMap<None, None> XYtoCollisionComponentMap; // 0x108
	ObjectProperty LandscapeProxy; // 0x150
	TMap<None, None> XYtoAddCollisionMap; // 0x158
	FSet_Mirror Proxies; // 0x1a0
	FSet_Mirror SelectedComponents; // 0x1e8
	FSet_Mirror SelectedCollisionComponents; // 0x230
	FSet_Mirror SelectedRegionComponents; // 0x278
	TMap<None, None> SelectedRegion; // 0x2c0
	char bIsValid : 1; // 0x308
};

struct UTgInvListener_ActiveDeployableEffect : UTgInvListener {
	TArray<int32_t> m_AppliedTargetIds; // 0xc4
};

struct UPBRuleNodeCorner : UPBRuleNodeBase {
	float CornerSize; // 0x70
	TArray<FRBCornerAngleInfo> Angles; // 0x74
	float FlatThreshold; // 0x84
	char bNoMeshForConcaveCorners : 1; // 0x88
	char bUseAdjacentRulesetForRightGap : 1; // 0x88
	EPBCornerType CornerType; // 0x8c
	float CornerShapeOffset; // 0x90
	int32_t RoundTesselation; // 0x94
	float RoundCurvature; // 0x98
};

struct UStaticMeshComponent : UMeshComponent {
	int32_t ForcedLodModel; // 0x294
	int32_t PreviousLODLevel; // 0x298
	ObjectProperty StaticMesh; // 0x29c
	FColor WireframeColor; // 0x2a4
	char bIgnoreInstanceForTextureStreaming : 1; // 0x2a8
	char bOverrideLightMapResolution : 1; // 0x2a8
	char bOverrideLightMapRes : 1; // 0x2a8
	int32_t OverriddenLightMapResolution; // 0x2ac
	int32_t OverriddenLightMapRes; // 0x2b0
	float OverriddenLODMaxRange; // 0x2b4
	float StreamingDistanceMultiplier; // 0x2b8
	int32_t SubDivisionStepSize; // 0x2bc
	char bUseSubDivisions : 1; // 0x2c0
	char bForceStaticDecals : 1; // 0x2c0
	char bCanHighlightSelectedSections : 1; // 0x2c0
	char bUseSimpleLightmapModifications : 1; // 0x2c0
	ELightmapModificationFunction SimpleLightmapModificationFunction; // 0x2c4
	char bNeverBecomeDynamic : 1; // 0x2c8
	char bForceRenderAsDynamic : 1; // 0x2c8
	TArray<FGuid> IrrelevantLights; // 0x2cc
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x2dc
	int32_t VertexPositionVersionNumber; // 0x2ec
	int32_t ForcedElementIndex; // 0x2f0
	FLightmassPrimitiveSettings LightmassSettings; // 0x2f4
};

struct UTgDeviceFire_EncroachmentFireCone : UTgDeviceFire {
	FVector m_vBaseDimensions; // 0x268
	char m_bBlockedByWorldOnly : 1; // 0x274
};

struct ATgSkeletalMeshActor_Loader : ATgSkeletalMeshActor {
	FPointer VfTable_ITgSkinnableInterface; // 0x32c
	FPointer VfTable_ITgCallbackInterface; // 0x334
	ObjectProperty m_PendingMeshInfo; // 0x33c
	ObjectProperty m_CurrentMeshInfo; // 0x344
	ObjectProperty c_AssetManifestGroup; // 0x34c
	FPointer m_PendingBot; // 0x354
	FPointer m_PendingSkin; // 0x35c
	FPointer m_PendingDevice; // 0x364
	FPointer m_PendingDeviceSkin; // 0x36c
	LobbyAnimPose m_PendingPose; // 0x374
	LobbyAnimPose m_CurrentPose; // 0x375
	EModelHighlightType m_HighlightType; // 0x376
	FPointer m_PendingMVPDevice; // 0x378
	FPointer m_CurrentBot; // 0x380
	FPointer m_CurrentSkin; // 0x388
	FPointer m_CurrentDevice; // 0x390
	FPointer m_CurrentDeviceSkin; // 0x398
	FPointer m_CurrentMVPDevice; // 0x3a0
	char m_bIsActive : 1; // 0x3a8
	char m_bWaitingForTextures : 1; // 0x3a8
	char m_bIsAsyncLoading : 1; // 0x3a8
	char m_bIsAsyncSimulating : 1; // 0x3a8
	char m_bDeferAsyncSwap : 1; // 0x3a8
	char m_bWaitingForAsyncSwap : 1; // 0x3a8
	char m_bAllowOverlays : 1; // 0x3a8
	char m_bUsesPreviewMesh : 1; // 0x3a8
	char m_bOverrideLightingChannels : 0; // 0x3a8
	float m_fAsyncSwapDelay; // 0x3ac
	float m_fAsyncSwapTimer; // 0x3b0
	int32_t m_nAsyncLoadDelayTicksDefault; // 0x3b4
	int32_t m_nAsyncLoadDelayTicks; // 0x3b8
	ComponentProperty m_PointLight; // 0x3bc
	TArray<ComponentProperty> m_ChildMeshes; // 0x3c4
	TArray<ComponentProperty> m_SkinMeshes; // 0x3d4
	ComponentProperty m_BodyMesh; // 0x3e4
	ComponentProperty m_HeadMesh; // 0x3ec
	ComponentProperty m_WeaponMesh; // 0x3f4
	ComponentProperty m_AlternateLightEnvironmentTemplate; // 0x3fc
	TArray<ComponentProperty> m_AlternateLightEnvironments; // 0x404
	ObjectProperty m_OverlayMaterial; // 0x414
	ComponentProperty m_CustomCharacterComponent; // 0x41c
	TArray<ObjectProperty> m_MeshReplacementMICs; // 0x424
	TArray<FLobbySMAMeterBus> m_MeterBusses; // 0x434
	FLightingChannelContainer m_LightingChannels; // 0x444
	ObjectProperty NonHighlightMaterial; // 0x448
	ObjectProperty m_EmoteAnimSet; // 0x450
	ObjectProperty m_MVPAnimSet; // 0x458
	float m_fBaseCollisionRadius; // 0x460
	float m_fBaseCollisionHeight; // 0x464
	TArray<ObjectProperty> m_PawnMods; // 0x468
	ObjectProperty m_CallbackContainer; // 0x478
	FCharacterSpecificData m_CharacterSpecificData; // 0x480
	float m_fDigitizedSkinFaceSwapDelayTimer; // 0x49c
	DelegateProperty __OnMeshUpdated__Delegate; // 0x4a0
};

struct ATgDevice_DragonsFire : ATgDevice {
	ObjectProperty m_CachedImani; // 0xa04
};

struct UTgGamePhase_CreditsOnPointTick : UTgGamePhase {
	int32_t m_nCreditsPerTick; // 0xb8
};

struct UUIComponent_EntryToggle : UUIComponent_Display {
	char m_bActive : 1; // 0x124
	char m_bAllIsWell : 1; // 0x124
	ObjectProperty m_mcText; // 0x128
	ObjectProperty m_mcToggle; // 0x130
	ObjectProperty m_Button; // 0x138
};

struct AAutoTestManager : AInfo {
	char bAutomatedPerfTesting : 1; // 0x280
	char bAutoContinueToNextRound : 1; // 0x280
	char bUsingAutomatedTestingMapList : 1; // 0x280
	char bAutomatedTestingWithOpen : 1; // 0x280
	char bExitOnCyclesComplete : 1; // 0x280
	char bCheckingForFragmentation : 1; // 0x280
	char bCheckingForMemLeaks : 1; // 0x280
	char bIsDoingASimplePerfRun : 1; // 0x280
	char bDoingASentinelRun : 0; // 0x280
	char bSentinelRunInProgress : 0; // 0x280
	char bSentinelStreamingLevelStillLoading : 0; // 0x280
	int32_t AutomatedPerfRemainingTime; // 0x284
	int32_t AutomatedTestingMapIndex; // 0x288
	TArray<FString> AutomatedMapTestingList; // 0x28c
	int32_t NumAutomatedMapTestingCycles; // 0x29c
	int32_t NumberOfMatchesPlayed; // 0x2a0
	int32_t NumMapListCyclesDone; // 0x2a4
	FString AutomatedTestingExecCommandToRunAtStartMatch; // 0x2a8
	FString AutomatedTestingExecCommandToRunAtStartMatchOnPC; // 0x2b8
	FString AutomatedMapTestingTransitionMap; // 0x2c8
	FString SentinelTaskDescription; // 0x2d8
	FString SentinelTaskParameter; // 0x2e8
	FString SentinelTagDesc; // 0x2f8
	ObjectProperty SentinelPC; // 0x308
	TArray<FVector> SentinelTravelArray; // 0x310
	int32_t SentinelNavigationIdx; // 0x320
	int32_t SentinelIdx; // 0x324
	int32_t NumRotationsIncrement; // 0x328
	int32_t TravelPointsIncrement; // 0x32c
	int32_t NumMinutesPerMap; // 0x330
	int32_t TotalNumMinutesToRun; // 0x334
	float ProfilingInterval; // 0x338
	TArray<FString> CommandsToRunAtEachTravelTheWorldNode; // 0x33c
	FString CommandStringToExec; // 0x34c
};

struct UNxForceFieldTornadoComponent : UNxForceFieldComponent {
	float RadialStrength; // 0x2bc
	float RotationalStrength; // 0x2c0
	float LiftStrength; // 0x2c4
	float ForceRadius; // 0x2c8
	float ForceTopRadius; // 0x2cc
	float LiftFalloffHeight; // 0x2d0
	float EscapeVelocity; // 0x2d4
	float ForceHeight; // 0x2d8
	float HeightOffset; // 0x2dc
	char BSpecialRadialForceMode : 1; // 0x2e0
	float SelfRotationStrength; // 0x2e4
	FPointer Kernel; // 0x2e8
};

struct UMaterialExpressionPower : UMaterialExpression {
	FExpressionInput Base; // 0xb0
	FExpressionInput Exponent; // 0xe4
};

struct ATgPawn_Demon : ATgPawn_Character {
	char r_bIsUltActive : 1; // 0x3160
	char r_bIsUltTargeting : 1; // 0x3160
	char r_bIsUltTraveling : 1; // 0x3160
	char c_bUltRevealApplied : 1; // 0x3160
	char c_bStimActive : 1; // 0x3160
	char r_bTeleportActive : 1; // 0x3160
	char r_bTeleportAlmostFinished : 1; // 0x3160
	char r_bBloodSenseActive : 1; // 0x3160
	char c_bBloodSenseRevealApplied : 0; // 0x3160
	char m_bUseTeleportZoom : 0; // 0x3160
	char m_bUseTelepunchZoom : 0; // 0x3160
	char m_bTelepunchTargetLocked : 0; // 0x3160
	float r_fBloodSenseThreshold; // 0x3164
	float c_fBloodSenseUpdateTimer; // 0x3168
	float c_fBloodSenseUpdateRate; // 0x316c
	float s_fPostUltKillVoiceTimer; // 0x3170
	int32_t s_LastTelepunchTargetPawnId; // 0x3174
	ObjectProperty m_TelepunchTarget; // 0x3178
};

struct UCameraModifier : UObject {
	char bDisabled : 1; // 0x60
	char bPendingDisable : 1; // 0x60
	char bExclusive : 1; // 0x60
	char bDebug : 1; // 0x60
	ObjectProperty CameraOwner; // 0x64
	char Priority; // 0x6c
	float AlphaInTime; // 0x70
	float AlphaOutTime; // 0x74
	float Alpha; // 0x78
	float TargetAlpha; // 0x7c
};

struct ATgPawn_Fairy : ATgPawn_Character {
	float m_fFairyFlySpeedModifier; // 0x3160
	float m_fFlightAccelerationPerSecond; // 0x3164
	float m_fFlightDecelerationPerSecond; // 0x3168
	float m_fFlightMaxRiseSpeed; // 0x316c
	float m_fAscentDecelerationPerSecond; // 0x3170
	float m_fFaeFlightFriction; // 0x3174
	float m_fPreviousAscentVelocity; // 0x3178
	ObjectProperty m_CachedFlutterDevice; // 0x317c
	ObjectProperty m_CachedFaeFlightDevice; // 0x3184
};

struct UTgDeviceForm_TiberiusRMB : UTgDeviceForm {
	ObjectProperty m_CachedTiberius; // 0x28c
	char m_bBladeRetrieve : 1; // 0x294
	char m_bBladeInspect : 1; // 0x294
	char m_bBladeInRecall : 1; // 0x294
	char m_bBladeAway : 1; // 0x294
	float m_fPostRetrievalTime; // 0x298
	TArray<ObjectProperty> m_SimpleStanceBladeAway1P; // 0x29c
	TArray<ObjectProperty> m_SimpleStanceBladeAway3P; // 0x2ac
	TArray<ObjectProperty> m_SimpleStanceBlendList1P; // 0x2bc
	TArray<ObjectProperty> m_SimpleStanceBlendList3P; // 0x2cc
};

struct ATgStaticMeshActorGrass : AStaticMeshActor {
	float m_fTargetScale; // 0x2a4
	FVector m_TargetScale3D; // 0x2a8
	float m_fScaleTransitionTime; // 0x2b4
};

struct UUIComponent_AsiaticEventQuests : UUIComponent_Display {
	ObjectProperty m_pStrixEmote; // 0x124
	ObjectProperty m_pMaeveEmote; // 0x12c
	ObjectProperty m_pAndroxusEmote; // 0x134
	ObjectProperty m_pPurchaseEmote; // 0x13c
	ObjectProperty m_mcKeyCount; // 0x144
	ObjectProperty m_pQuests; // 0x14c
	ObjectProperty m_pEmotes; // 0x154
	ObjectProperty m_pPurchaseConfirmation; // 0x15c
};

struct UUIComponent_ItemUIEngagementSkin : UUIComponent_Display {
	ObjectProperty m_mcSkinName; // 0x124
	ObjectProperty m_mcOwnedIcon; // 0x12c
	ObjectProperty m_mcChampionName; // 0x134
	ObjectProperty m_mcQuantityRemaining; // 0x13c
	ObjectProperty m_mcQuantityRemainingNumTF; // 0x144
	ObjectProperty m_mcQuantityRemainingTF; // 0x14c
	ObjectProperty m_mcBackground; // 0x154
	ObjectProperty m_mcTimer; // 0x15c
	ObjectProperty m_mcSkinRarity; // 0x164
	ObjectProperty m_pIcon; // 0x16c
	char m_bShouldCheckForItemFade : 1; // 0x174
	float m_fLowStockThreshold; // 0x178
};

struct UUIComponent_StoreHiddenDLC : UUIComponent_Display {
	ObjectProperty m_pJsonPanelHiddenDLC; // 0x124
	ObjectProperty m_pDailyDealCarousel; // 0x12c
	ObjectProperty m_pBattlePassBanner; // 0x134
	TArray<FJsonFeatureData> m_pFeatureDataHiddenDLC; // 0x13c
	TArray<FJsonFeatureData> m_pFeatureDataHiddenDLCCarousel; // 0x14c
	TMap<None, None> m_pFeatureMapHiddenDLCCarousel; // 0x15c
	int32_t m_nHiddenDLCIndex; // 0x1a4
	ObjectProperty m_grHiddenDLC; // 0x1a8
	int32_t m_nTickCallbackHandle; // 0x1b0
	int32_t m_nRewardClaimedCallbackHandle; // 0x1b4
};

struct ATrigger : AActor {
	ComponentProperty CylinderComponent; // 0x280
	char bRecentlyTriggered : 1; // 0x288
	float AITriggerDelay; // 0x28c
};

struct AStaticMeshActorBasedOnExtremeContent : AActor {
	ComponentProperty StaticMeshComponent; // 0x280
	TArray<FSMMaterialSetterDatum> ExtremeContent; // 0x288
	TArray<FSMMaterialSetterDatum> NonExtremeContent; // 0x298
};

struct UParticleModuleRotationOverLifetime : UParticleModuleRotationBase {
	FRawDistributionFloat RotationOverLife; // 0x68
	char Scale : 1; // 0x8c
};

struct UTgAIUtilityFilter : UTgAIUtility {
	char bSoftFilter : 1; // 0xbc
};

struct UUIAcademy : UTgGfxScene {
	FAcademyVideoButton m_Buttons[0x8]; // 0x1ec
};

struct UUIMenuManager : UTgGfxScene {
	ObjectProperty m_pPopupManager; // 0x1ec
};

struct UMaterialExpressionCosine : UMaterialExpression {
	FExpressionInput Input; // 0xb0
	float Period; // 0xe4
};

struct USoundNodeWaveStreaming : USoundNodeWave {
	TArray<char> QueuedAudio; // 0x328
	float InactiveDuration; // 0x338
};

struct ATgDevice_BarrierReef : ATgDevice_ShellShieldMod {
	int32_t m_nHitsNeededOnCooldown; // 0xa04
};

struct UUIComponent_StreetStyleEventQuests : UUIComponent_Display {
	ObjectProperty m_mcQuestExpireTF; // 0x124
	ObjectProperty m_pQuests; // 0x12c
	ObjectProperty m_pLeftArrow; // 0x134
	ObjectProperty m_pRightArrow; // 0x13c
	ObjectProperty m_pOwnedCurrency; // 0x144
	ObjectProperty m_grInput; // 0x14c
};

struct UParticleModuleTypeDataAnimTrail : UParticleModuleTypeDataBase {
	FName ControlEdgeName; // 0x68
	int32_t SheetsPerTrail; // 0x70
	char bDeadTrailsOnDeactivate : 1; // 0x74
	char bClipSourceSegement : 1; // 0x74
	char bEnablePreviousTangentRecalculation : 1; // 0x74
	char bTangentRecalculationEveryFrame : 1; // 0x74
	char bRenderGeometry : 1; // 0x74
	char bRenderSpawnPoints : 1; // 0x74
	char bRenderTangents : 1; // 0x74
	char bRenderTessellation : 1; // 0x74
	float TilingDistance; // 0x78
	float DistanceTessellationStepSize; // 0x7c
	float TangentTessellationScalar; // 0x80
};

struct UTgInventoryObject_Listen_Combo_Ying : UTgInventoryObject_Listen_Combo {
	float m_fCombo1MaxDuration; // 0xcc
	float m_fCombo1BonusDamagePercent; // 0xd0
	float m_fCombo2BonusDamage; // 0xd4
	TArray<ObjectProperty> m_MarkedTargets; // 0xd8
	TArray<float> m_fMarkTimes; // 0xe8
	ObjectProperty m_InhandTarget; // 0xf8
	int32_t m_nInhandHits; // 0x100
	int32_t m_nCombo1DeviceId; // 0x104
};

struct UUIScene_UIHudSkills : UUIScene {
	ObjectProperty m_pSkillIcon[0x5]; // 0x1cc
	ObjectProperty m_pCardCooldowns[0x6]; // 0x1f4
	ObjectProperty m_pAltSkillIcon[0x5]; // 0x224
	float m_fSkillRotation; // 0x24c
	ObjectProperty m_mcGroupA; // 0x250
	ObjectProperty m_mcGroupB; // 0x258
	ObjectProperty m_mcCardCooldowns; // 0x260
	ObjectProperty m_LexVengeance; // 0x268
	ObjectProperty m_CorvusMark; // 0x270
	ObjectProperty m_CorvusMarkTeam; // 0x278
	ObjectProperty m_OracleSoulCharges; // 0x280
	ObjectProperty m_CorrupterCorruptionUI; // 0x288
	ObjectProperty m_RaumShards; // 0x290
	int32_t m_nSpectatorMode; // 0x298
	char m_bUltimateReady : 1; // 0x29c
	char m_bThirdPersonMode : 1; // 0x29c
};

struct ATgDevice_CorvusDagger : ATgDevice {
	char m_bCancelled : 1; // 0xa04
	char m_bAllowTeleport : 1; // 0xa04
	FVector m_vTeleportToLocation; // 0xa08
	FVector m_vProjSpawnLocation; // 0xa14
	ObjectProperty m_CachedCorvus; // 0xa20
	CorvusDaggerState m_eLocalDaggerState; // 0xa28
};

struct UTgAIBehaviorComposite_SequenceScripted : UTgAIBehaviorComposite {
	char bFreezeOnLast : 1; // 0xb8
	char bIsLooping : 1; // 0xb8
	char bFirstChildIsResetTest : 1; // 0xb8
	char bResetSequenceOnFailure : 1; // 0xb8
};

struct AGameCrowdAgentSkeletal : AGameCrowdAgent {
	ComponentProperty SkeletalMeshComponent; // 0x500
	ObjectProperty SpeedBlendNode; // 0x508
	ObjectProperty FullBodySlot; // 0x510
	ObjectProperty ActionSeqNode; // 0x518
	ObjectProperty WalkSeqNode; // 0x520
	ObjectProperty RunSeqNode; // 0x528
	ObjectProperty AgentTree; // 0x530
	TArray<FName> WalkAnimNames; // 0x538
	TArray<FName> RunAnimNames; // 0x548
	TArray<FName> IdleAnimNames; // 0x558
	TArray<FName> DeathAnimNames; // 0x568
	float SpeedBlendStart; // 0x578
	float SpeedBlendEnd; // 0x57c
	float AnimVelRate; // 0x580
	float MaxSpeedBlendChangeSpeed; // 0x584
	FName MoveSyncGroupName; // 0x588
	TArray<FGameCrowdAttachmentList> Attachments; // 0x590
	float MaxTargetAcquireTime; // 0x5a0
	char bUseRootMotionVelocity : 1; // 0x5a4
	char bAllowSkeletonUpdateChangeBasedOnTickResult : 1; // 0x5a4
	char bTickWhenNotVisible : 1; // 0x5a4
	char bIsPlayingIdleAnimation : 1; // 0x5a4
	char bIsPlayingDeathAnimation : 1; // 0x5a4
	char bIsPlayingImportantAnimation : 1; // 0x5a4
	char bAnimateThisTick : 1; // 0x5a4
	float NotVisibleDisableTickTime; // 0x5a8
	float MaxAnimationDistance; // 0x5ac
	float MaxAnimationDistanceSq; // 0x5b0
};

struct ATgDeploy_SmokeScreen : ATgDeploy_EffectAura {
	ObjectProperty m_CachedPawnOwner; // 0x4b0
	char m_bHasAppliedOwnerStealth : 1; // 0x4b8
	float r_fRadiusForFX; // 0x4bc
};

struct AExponentialHeightFog : AInfo {
	ComponentProperty Component; // 0x280
	char bEnabled : 1; // 0x288
};

struct UTgAchievement_FastHealDifferentPlayers : UTgAchievement {
	TArray<FFastHealDifferentPlayersEntry> m_HealEntries; // 0x94
};

struct UOnlineSubsystemSteamworks : UOnlineSubsystemCommonImpl {
	FPointer VfTable_PComOnlinePlayerInterface; // 0x288
	char bStoringAchievement : 1; // 0x290
	char bClientStatsStorePending : 1; // 0x290
	char bGSStatsStoresSuccess : 1; // 0x290
	char bNeedsKeyboardTicking : 1; // 0x290
	char bLastHasConnection : 1; // 0x290
	char bIsStatsSessionOk : 1; // 0x290
	char bHasSteamworksAccount : 1; // 0x290
	char bShouldUseMcp : 1; // 0x290
	int32_t TotalGSStatsStoresPending; // 0x294
	EOnlineEnumerationReadState UserStatsReceivedState; // 0x298
	ELoginStatus LoggedInStatus; // 0x299
	char bWasKeyboardInputCanceled; // 0x29a
	ENetworkNotificationPosition CurrentNotificationPosition; // 0x29b
	ObjectProperty CachedGameInt; // 0x29c
	FString LocalProfileName; // 0x2a4
	FString LoggedInPlayerName; // 0x2b4
	FUniqueNetId LoggedInPlayerId; // 0x2c4
	int32_t LoggedInPlayerNum; // 0x2cc
	FString ProfileDataDirectory; // 0x2d0
	FString ProfileDataExtension; // 0x2e0
	TArray<DelegateProperty> WriteProfileSettingsDelegates; // 0x2f0
	ObjectProperty CachedProfile; // 0x300
	TArray<DelegateProperty> LocalPlayerStorageReadDelegates; // 0x308
	TArray<DelegateProperty> LocalPlayerStorageWriteDelegates; // 0x318
	TArray<DelegateProperty> RemotePlayerStorageReadDelegates; // 0x328
	TArray<DelegateProperty> SpeechRecognitionCompleteDelegates; // 0x338
	TArray<DelegateProperty> ReadFriendsDelegates; // 0x348
	TArray<DelegateProperty> FriendsChangeDelegates; // 0x358
	TArray<DelegateProperty> MutingChangeDelegates; // 0x368
	TArray<DelegateProperty> LoginChangeDelegates; // 0x378
	TArray<DelegateProperty> LoginFailedDelegates; // 0x388
	TArray<DelegateProperty> ContentPurchaseResponseDelegates; // 0x398
	TArray<DelegateProperty> LogoutCompletedDelegates; // 0x3a8
	TArray<DelegateProperty> AccountCreateDelegates; // 0x3b8
	TArray<DelegateProperty> TalkingDelegates; // 0x3c8
	TArray<DelegateProperty> ReadOnlineStatsCompleteDelegates; // 0x3d8
	TArray<DelegateProperty> FlushOnlineStatsDelegates; // 0x3e8
	TArray<DelegateProperty> ConnectionStatusChangeDelegates; // 0x3f8
	TArray<DelegateProperty> ControllerChangeDelegates; // 0x408
	TArray<DelegateProperty> LinkStatusDelegates; // 0x418
	TArray<DelegateProperty> ReadTitleFileCompleteDelegates; // 0x428
	TArray<DelegateProperty> AchievementDelegates; // 0x438
	TArray<DelegateProperty> AchievementReadDelegates; // 0x448
	TArray<DelegateProperty> EnumerateUserFilesCompleteDelegates; // 0x458
	TArray<DelegateProperty> ReadUserFileCompleteDelegates; // 0x468
	TArray<DelegateProperty> WriteUserFileCompleteDelegates; // 0x478
	TArray<DelegateProperty> DeleteUserFileCompleteDelegates; // 0x488
	TArray<DelegateProperty> SharedFileReadCompleteDelegates; // 0x498
	TArray<DelegateProperty> SharedFileWriteCompleteDelegates; // 0x4a8
	TArray<DelegateProperty> TokenAndSignatureRetrievedDelegates; // 0x4b8
	TArray<DelegateProperty> PrivilegeLevelCheckedDelegates; // 0x4c8
	TArray<DelegateProperty> PrivilegeCheckedForUsersDelegates; // 0x4d8
	TArray<DelegateProperty> PrivilegeCheckedForUsersByUniqueNetIdsDelegates; // 0x4e8
	TArray<DelegateProperty> FilterTextDelegates; // 0x4f8
	FLocalTalkerSteam CurrentLocalTalker; // 0x508
	TArray<FRemoteTalker> RemoteTalkers; // 0x514
	int32_t GameID; // 0x524
	ObjectProperty CurrentStatsRead; // 0x528
	TArray<FPendingPlayerStats> PendingStats; // 0x530
	FString KeyboardResultsString; // 0x540
	TArray<DelegateProperty> KeyboardInputDelegates; // 0x550
	TArray<DelegateProperty> FriendInviteReceivedDelegates; // 0x560
	TArray<DelegateProperty> FriendMessageReceivedDelegates; // 0x570
	TArray<DelegateProperty> AddFriendByNameCompleteDelegates; // 0x580
	FProfileSettingsCache ProfileCache; // 0x590
	ObjectProperty PlayerStorageCache; // 0x5c8
	FString CachedFriendMessage; // 0x5d0
	FDeviceIdCache DeviceCache; // 0x5e0
	TArray<FString> LocationUrlsForInvites; // 0x604
	FString LocationUrl; // 0x614
	TArray<DelegateProperty> ReceivedGameInviteDelegates; // 0x624
	TArray<DelegateProperty> JoinFriendGameCompleteDelegates; // 0x634
	TArray<DelegateProperty> GetNumberOfCurrentPlayersCompleteDelegates; // 0x644
	TArray<DelegateProperty> RegisterHostStatGuidCompleteDelegates; // 0x654
	TArray<FOnlineFriendMessage> CachedFriendMessages; // 0x664
	TArray<FOnlineStatusMapping> StatusMappings; // 0x674
	FString DefaultStatus; // 0x684
	FString GameInviteMessage; // 0x694
	FControllerConnectionState ControllerStates[0x4]; // 0x6a4
	float ConnectionPresenceTimeInterval; // 0x6c4
	float ConnectionPresenceElapsedTime; // 0x6c8
	FString EncryptedProductKey; // 0x6cc
	TArray<FUniqueNetId> MuteList; // 0x6dc
	TArray<FSteamUserCloud> UserCloudFiles; // 0x6ec
	TArray<FSteamUserCloudMetadata> UserCloudMetadata; // 0x6fc
	TArray<FTitleFile> SharedFileCache; // 0x70c
	TArray<FQueuedAvatarRequest> QueuedAvatarRequests; // 0x71c
	TArray<FAchievementMappingInfo> AchievementMappings; // 0x72c
	TArray<FAchievementProgressStat> PendingAchievementProgress; // 0x73c
	TArray<FLeaderboardTemplate> LeaderboardList; // 0x74c
	TArray<FDeferredLeaderboardRead> DeferredLeaderboardReads; // 0x75c
	TArray<FDeferredLeaderboardWrite> DeferredLeaderboardWrites; // 0x76c
	TArray<FDeferredLeaderboardWrite> PendingLeaderboardStats; // 0x77c
	TArray<FViewIdToLeaderboardName> LeaderboardNameMappings; // 0x78c
	TArray<int32_t> GameServerStatsMappings; // 0x79c
	ObjectProperty CachedAuthInt; // 0x7ac
	TArray<FIpAddr> PendingRedirects; // 0x7b4
	DelegateProperty __OnLoginChange__Delegate; // 0x7c4
	DelegateProperty __OnLoginCancelled__Delegate; // 0x7d4
	DelegateProperty __OnMutingChange__Delegate; // 0x7e4
	DelegateProperty __OnFriendsChange__Delegate; // 0x7f4
	DelegateProperty __OnLoginFailed__Delegate; // 0x804
	DelegateProperty __OnLogoutCompleted__Delegate; // 0x814
	DelegateProperty __OnLoginStatusChange__Delegate; // 0x824
	DelegateProperty __OnReadProfileSettingsComplete__Delegate; // 0x834
	DelegateProperty __OnWriteProfileSettingsComplete__Delegate; // 0x844
	DelegateProperty __OnReadPlayerStorageComplete__Delegate; // 0x854
	DelegateProperty __OnReadPlayerStorageForNetIdComplete__Delegate; // 0x864
	DelegateProperty __OnWritePlayerStorageComplete__Delegate; // 0x874
	DelegateProperty __OnReadFriendsComplete__Delegate; // 0x884
	DelegateProperty __OnPlayerTalkingStateChange__Delegate; // 0x894
	DelegateProperty __OnRecognitionComplete__Delegate; // 0x8a4
	DelegateProperty __OnReadOnlineStatsComplete__Delegate; // 0x8b4
	DelegateProperty __OnFlushOnlineStatsComplete__Delegate; // 0x8c4
	DelegateProperty __OnLinkStatusChange__Delegate; // 0x8d4
	DelegateProperty __OnExternalUIChange__Delegate; // 0x8e4
	DelegateProperty __OnControllerChange__Delegate; // 0x8f4
	DelegateProperty __OnConnectionStatusChange__Delegate; // 0x904
	DelegateProperty __OnStorageDeviceChange__Delegate; // 0x914
	DelegateProperty __OnReadTitleFileComplete__Delegate; // 0x924
	DelegateProperty __OnCreateOnlineAccountCompleted__Delegate; // 0x934
	DelegateProperty __OnKeyboardInputComplete__Delegate; // 0x944
	DelegateProperty __OnAddFriendByNameComplete__Delegate; // 0x954
	DelegateProperty __OnFriendInviteReceived__Delegate; // 0x964
	DelegateProperty __OnReceivedGameInvite__Delegate; // 0x974
	DelegateProperty __OnJoinFriendGameComplete__Delegate; // 0x984
	DelegateProperty __OnFriendMessageReceived__Delegate; // 0x994
	DelegateProperty __OnRegisterHostStatGuidComplete__Delegate; // 0x9a4
	DelegateProperty __OnContentPurchaseResponse__Delegate; // 0x9b4
	DelegateProperty __OnDeviceSelectionComplete__Delegate; // 0x9c4
	DelegateProperty __OnUnlockAchievementComplete__Delegate; // 0x9d4
	DelegateProperty __OnProfileDataChanged__Delegate; // 0x9e4
	DelegateProperty __OnReadAchievementsComplete__Delegate; // 0x9f4
	DelegateProperty __OnReadOnlineAvatarComplete__Delegate; // 0xa04
	DelegateProperty __OnGetNumberOfCurrentPlayersComplete__Delegate; // 0xa14
	DelegateProperty __OnReadCrossTitleProfileSettingsComplete__Delegate; // 0xa24
	DelegateProperty __OnEnumerateUserFilesComplete__Delegate; // 0xa34
	DelegateProperty __OnReadUserFileComplete__Delegate; // 0xa44
	DelegateProperty __OnWriteUserFileComplete__Delegate; // 0xa54
	DelegateProperty __OnDeleteUserFileComplete__Delegate; // 0xa64
	DelegateProperty __OnReadSharedFileComplete__Delegate; // 0xa74
	DelegateProperty __OnWriteSharedFileComplete__Delegate; // 0xa84
	DelegateProperty __OnTokenAndSignatureRetrieved__Delegate; // 0xa94
	DelegateProperty __OnPrivilegeLevelChecked__Delegate; // 0xaa4
	DelegateProperty __OnStatisticChanged__Delegate; // 0xab4
	DelegateProperty __OnCurrentUserChanged__Delegate; // 0xac4
	DelegateProperty __OnPrivilegeCheckedForUsers__Delegate; // 0xad4
	DelegateProperty __OnPrivilegeCheckedForUsersByUniqueNetIds__Delegate; // 0xae4
	DelegateProperty __OnFilterText__Delegate; // 0xaf4
	DelegateProperty __OnSystemUserControllerPairingChanged__Delegate; // 0xb04
	DelegateProperty __OnShowGamerCardComplete__Delegate; // 0xb14
	DelegateProperty __OnAccountPickerComplete__Delegate; // 0xb24
	DelegateProperty __OnUserAccountInfoRetrieved__Delegate; // 0xb34
	DelegateProperty __OnRemoteTalkerStatusChange__Delegate; // 0xb44
	DelegateProperty __OnShowComposeMessageUIComplete__Delegate; // 0xb54
	DelegateProperty __OnPeoplePickerComplete__Delegate; // 0xb64
	DelegateProperty __OnAcceptReceivedData__Delegate; // 0xb74
	DelegateProperty __OnShowHelpComplete__Delegate; // 0xb84
	DelegateProperty __OnReadOnlineProfilesComplete__Delegate; // 0xb94
	DelegateProperty __OnRegisterLocalTalkerComplete__Delegate; // 0xba4
	DelegateProperty __OnUnregisterLocalTalkerComplete__Delegate; // 0xbb4
	DelegateProperty __OnUnregisterRemoteTalkerComplete__Delegate; // 0xbc4
};

struct UApexDynamicComponent : UApexComponentBase {
	FPointer ComponentDynamicResources; // 0x2b0
};

struct UTgAIBehaviorCondition_IsInMinotaurRadius : UTgAIBehaviorCondition {
	char bMustBeEnemy : 1; // 0x98
};

struct ATgProj_SaatiCoin : ATgProj_FreeGrenade {
	ComponentProperty m_CoinHitBoxCollisionComponent; // 0x580
};

struct USpriteComponent : UPrimitiveComponent {
	ObjectProperty Sprite; // 0x24c
	char bIsScreenSizeScaled : 1; // 0x254
	float ScreenSize; // 0x258
	float U; // 0x25c
	float UL; // 0x260
	float V; // 0x264
	float VL; // 0x268
};

struct UNavigationHandle : UObject {
	ObjectProperty AnchorPylon; // 0x60
	FPointer AnchorPoly; // 0x68
	FPathStore PathCache; // 0x70
	FPointer BestUnfinishedPathPoint; // 0x80
	FPointer CurrentEdge; // 0x88
	FPointer SubGoal_DestPoly; // 0x90
	FBasedPosition FinalDestination; // 0x98
	ObjectProperty FinalDestinationActor; // 0xd0
	char bSkipRouteCacheUpdates : 1; // 0xd8
	char bUseORforEvaluateGoal : 1; // 0xd8
	char bDebugConstraintsAndGoalEvals : 1; // 0xd8
	char bUltraVerbosePathDebugging : 1; // 0xd8
	char bVisualPathDebugging : 1; // 0xd8
	char bDebug_Breadcrumbs : 1; // 0xd8
	ObjectProperty PathConstraintList; // 0xdc
	ObjectProperty PathGoalList; // 0xe4
	FNavMeshPathParams CachedPathParams; // 0xec
	EPathFindingError LastPathError; // 0x124
	float LastPathFailTime; // 0x128
	FVector Breadcrumbs[0xa]; // 0x12c
	int32_t BreadCrumbMostRecentIdx; // 0x1a4
	float BreadCrumbDistanceInterval; // 0x1a8
	float m_fLastPathLength; // 0x1ac
};

struct ATgDevice_RiderAlt : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_ListenConsumeMarks; // 0xa04
	TArray<TScriptInterface<Class>> m_CachedListenConsumeMarks; // 0xa0c
};

struct UTgAIBehaviorCondition_NumMinionsInTowerRadius : UTgAIBehaviorCondition {
	char bMinionsMustBeEnemy : 1; // 0x98
	char bTowerMustBeEnemy : 1; // 0x98
	int32_t MinionThreshold; // 0x9c
};

struct USeqAct_ParticleEventGenerator : USequenceAction {
	char bEnabled : 1; // 0x108
	char bUseEmitterLocation : 1; // 0x108
	ObjectProperty Instigator; // 0x10c
	TArray<FString> EventNames; // 0x114
	float EventTime; // 0x124
	FVector EventLocation; // 0x128
	FVector EventDirection; // 0x134
	FVector EventVelocity; // 0x140
	FVector EventNormal; // 0x14c
};

struct ATgPawn_Tower : ATgPawn_TowerBase {
	float m_TimeSinceDeath; // 0x2ed8
	TArray<ObjectProperty> m_DestroyedMICs; // 0x2edc
	float m_fFadeOutStartTime; // 0x2eec
	float m_fFadeOutEndTime; // 0x2ef0
	FVector r_vInitialRotation; // 0x2ef4
	char m_bUseDestruction : 1; // 0x2f00
	char r_bSide0Destroyed : 1; // 0x2f00
	char r_bSide1Destroyed : 1; // 0x2f00
	char r_bSide2Destroyed : 1; // 0x2f00
	char r_bSide3Destroyed : 1; // 0x2f00
	char r_PlaySide0Destruction; // 0x2f04
	char r_PlaySide1Destruction; // 0x2f05
	char r_PlaySide2Destruction; // 0x2f06
	char r_PlaySide3Destruction; // 0x2f07
	int32_t m_nSide0MeshId; // 0x2f08
	int32_t m_nSide1MeshId; // 0x2f0c
	int32_t m_nSide2MeshId; // 0x2f10
	int32_t m_nSide3MeshId; // 0x2f14
	int32_t m_nSide0Health; // 0x2f18
	int32_t m_nSide1Health; // 0x2f1c
	int32_t m_nSide2Health; // 0x2f20
	int32_t m_nSide3Health; // 0x2f24
};

struct ATgProj_SeedlingSecondary : ATgProj_Seedling {
	char m_bInitialized : 1; // 0x5d0
	float m_fGrowthLifetime; // 0x5d4
};

struct ATgDeploy_MoonShardTween : ATgDeploy_EffectField {
	float WalkableFloorZ; // 0x4a0
	TArray<ObjectProperty> s_PreviouslyAffectedPawns; // 0x4a4
	ObjectProperty r_pAffectedPawns[0x5]; // 0x4b4
	FAffectedPawn m_AffectedPawnRecords[0x5]; // 0x4dc
	float m_fPullSpeed; // 0x568
	float r_fProjectileInitialSpeed; // 0x56c
	float r_fProjectileMaxSpeed; // 0x570
	float r_fAccelerationMagnitude; // 0x574
	float m_fInnerRadius; // 0x578
	float m_fGravityFactor; // 0x57c
	float m_fMaxCosineWallSlide; // 0x580
	FVector m_vLastDesiredOrientation; // 0x584
	float m_fMaxRotationSpeedDegPerSec; // 0x590
	char m_bApplyEffectsOnPawnRelease : 1; // 0x594
	char m_bNoVerticalAcceleration : 1; // 0x594
	float m_fGrabSourceVerticalPivotOffsetFactor; // 0x598
	float m_fGrabOffsetExtensionFactor; // 0x59c
	FVector m_vCollisionExtent; // 0x5a0
};

struct ATgPawn_Viktor : ATgPawn_Character {
	float r_fFragGrenadeExplodeTime; // 0x3160
	char r_bFragGrenadeExplodeOnTouch : 1; // 0x3164
	float m_fBounceDampingVertMin; // 0x3168
	float m_fBounceDampingVertMax; // 0x316c
	float m_fBounceDampingHorizMin; // 0x3170
	float m_fBounceDampingHorizMax; // 0x3174
	char r_nGrenadeRefreshSound; // 0x3178
	char r_nAmmoRefreshSound; // 0x3179
	ObjectProperty m_CachedHustleDevice; // 0x317c
	FVector c_vForced3pAdditionalOffsetADS; // 0x3184
	float m_fUnderheadADSDistanceClampAngle; // 0x3190
	float m_fUnderheadADSDistanceClampPushIn; // 0x3194
	float m_fUnderheadADSDistanceClampOvershoot; // 0x3198
	float m_fOverheadADSDistanceClampAngle; // 0x319c
	float m_fOverheadADSDistanceClampPushIn; // 0x31a0
	float m_fOverheadADSDistanceClampOvershoot; // 0x31a4
};

struct UMcpServerTimeManager : UMcpServerTimeBase {
	FString TimeStampUrl; // 0x98
	FString LastTimeStamp; // 0xa8
	ObjectProperty HTTPRequestServerTime; // 0xb8
};

struct UTgDeviceFire_Smash : UTgDeviceFire {
	ObjectProperty m_NormalTargetingEncroachmentActor; // 0x268
	ObjectProperty m_LargeTargetingEncroachmentActor; // 0x270
	int32_t m_nLargeTargetingMeshID; // 0x278
};

struct ATgDevice_AzaanInhand : ATgDevice_ChainSequence {
	ObjectProperty m_pAzaan; // 0xa10
	float m_fServerThresholdForgiveness; // 0xa18
};

struct UInterpTrackInstAnimControl : UInterpTrackInst {
	float LastUpdatePosition; // 0x60
};

struct UDistributionVectorParameterBase : UDistributionVectorConstant {
	FName ParameterName; // 0x90
	FVector MinInput; // 0x98
	FVector MaxInput; // 0xa4
	FVector MinOutput; // 0xb0
	FVector MaxOutput; // 0xbc
	DistributionParamMode ParamModes[0x3]; // 0xc8
};

struct AGamePlayerController : APlayerController {
	char bWarnCrowdMembers : 1; // 0x76c
	char bDebugCrowdAwareness : 1; // 0x76c
	char bIsWarmupPaused : 1; // 0x76c
	char bEnableMouseCursor : 1; // 0x76c
	float AgentAwareRadius; // 0x770
	FName CurrentSoundMode; // 0x774
};

struct ANxCylindricalForceFieldCapsule : ANxCylindricalForceField {
	ComponentProperty RenderComponent; // 0x304
};

struct ATgRepInfo_Deployable : AReplicationInfo {
	int32_t r_nHealthCurrent; // 0x280
	int32_t r_nHealthMaximum; // 0x284
	float r_fDeployMaxHealthPCT; // 0x288
	int32_t r_nDeployableId; // 0x28c
	int32_t r_nUniqueDeployableId; // 0x290
	float r_fLifespanInitial; // 0x294
	float r_fLifespanSync; // 0x298
	ObjectProperty r_DeployableOwner; // 0x29c
	ObjectProperty r_InstigatorInfo; // 0x2a4
	ObjectProperty r_TaskforceInfo; // 0x2ac
	char r_bOwnedByTaskforce : 1; // 0x2b4
	char c_bReceivedOwner : 1; // 0x2b4
	char r_bMinimapOnlyOwnerSee : 1; // 0x2b4
	char r_bInDestroyedState : 1; // 0x2b4
	char c_bShowHUDLifespanTimer : 1; // 0x2b4
	FVector r_ApproxLocation; // 0x2b8
	FTG_HUD_INFO c_HudInfo; // 0x2c4
	char r_bVisibleOnMap[0x3]; // 0x2c8
	DeployableOverlayIcon r_eDeployableOverlayIcon; // 0x2cb
	DeployableOverlayState r_eDeployableOverlayState; // 0x2cc
	float r_fVisionRange; // 0x2d0
	int32_t r_nDeployableOverlayDisplayMask; // 0x2d4
	float r_fDeployableOverlayEnemyViewDist; // 0x2d8
	float c_fBarragePercent; // 0x2dc
};

struct UTgDeviceFire_DrogozLeg1 : UTgDeviceFire {
	float m_DamageAmount; // 0x268
};

struct ATgTimeDilationVolume : APhysicsVolume {
	float m_fTimeMultiplier; // 0x314
	char m_bAffectInstigator : 1; // 0x318
	TArray<ObjectProperty> m_AffectedActors; // 0x31c
	TArray<ObjectProperty> m_AffectedPawns; // 0x32c
};

struct UPMESTG_LeaveADecalBase : UParticleModuleEventSendToGame {
	UPhysicalMaterialPropertyBase* PhysicalMaterialPropertyClass; // 0x60
};

struct UTgSeqAct_NavIndicator : USequenceAction {
	ObjectProperty m_NavTarget; // 0x108
};

struct UTgSkelControlSingleBone_Skinned : UTgSkelControlSingleBone {
	float DefaultStrength; // 0x124
	TArray<FSkinStrengthOverride> SkinOverrides; // 0x128
	char bInitializedStrength : 1; // 0x138
	float fSkinStrength; // 0x13c
};

struct UUIData_LootTableItem : UUIData {
	Fdword m_dwLootId; // 0x64
	ObjectProperty m_pParentVendor; // 0x68
	TArray<ObjectProperty> m_Prices; // 0x70
};

struct UUIData_CustomQueue : UUIDataObject {
	int32_t m_nQueueId; // 0x74
	int32_t m_nMapId; // 0x78
	int32_t m_nName; // 0x7c
	FString m_sName; // 0x80
	TG_GAME_TYPE m_eGameType; // 0x90
};

struct ATgDevice_SevenLatch : ATgDevice_Latch {
	ObjectProperty m_CachedSeven; // 0xa44
	char m_bIsReadyForLatch : 1; // 0xa4c
	char m_bIsReadyForUnLatchLaunch : 1; // 0xa4c
	char m_bHasLatched : 1; // 0xa4c
	int32_t m_nWallUnlatchImpulseSpeed; // 0xa50
	int32_t m_nTotalLatchTime; // 0xa54
	int32_t m_nFrontLineNum; // 0xa58
};

struct ATgDevice_DualWield : ATgDevice {
	FVector m_vProjectileSpawnOffset2; // 0xa04
	char m_bFireLeftWeapon : 1; // 0xa10
};

struct ATgDevice_AtlasRMB : ATgDevice {
	ObjectProperty m_CachedAtlas; // 0xa04
	char m_bCCReducesRate : 1; // 0xa0c
	TArray<FQueuedRewind> s_RewindQueue; // 0xa10
};

struct UUIComponent_EndTimesEventHome : UUIComponent_EventVault {
	ObjectProperty m_grInput; // 0x1ec
};

struct UUIComponent_Targeter_ReiLinked : UUIComponent_Targeter_PointTargeter {
	ObjectProperty m_mcAnimation[0x3]; // 0x184
	char m_bHasNullTarget : 1; // 0x19c
};

struct ATgDevice_ImaniRMB1 : ATgDevice {
	char r_bHasActiveProjectile : 1; // 0xa04
	float m_fLastDistanceTravelled; // 0xa08
	ObjectProperty m_CachedImani; // 0xa0c
};

struct UTgDeviceForm_ImaniSwap : UTgDeviceForm {
	char m_bSecondaryStance : 1; // 0x28c
	ObjectProperty m_CachedWMA; // 0x290
};

struct ATgDevice_TigronUlt : ATgDevice {
	ObjectProperty m_CachedTiberius; // 0xa04
	int32_t m_nNumCharges; // 0xa0c
	float m_fPerChargeEnergyCost; // 0xa10
	char m_bPreventRMBSpam : 1; // 0xa14
	float m_fAnimationTail; // 0xa18
};

struct UUIData_VGSEntry : UUIData {
	int32_t m_nId; // 0x64
	int32_t m_nParentId; // 0x68
	int32_t m_nScopeVal; // 0x6c
	int32_t m_nPlatformId; // 0x70
	int32_t m_nDepth; // 0x74
	FString m_sLabel; // 0x78
	FString m_sOutput; // 0x88
	FString m_sKeybind; // 0x98
	TArray<ObjectProperty> m_Children; // 0xa8
};

struct UUIComponent_TelepunchTarget : UUIComponent_Display {
	ObjectProperty m_CurrentViewPawn; // 0x124
	ObjectProperty m_CurrentTargetPawn; // 0x12c
	char m_bIsHiding : 1; // 0x134
	char m_bEnabled : 1; // 0x134
	char m_bIsTarget : 1; // 0x134
	char m_bIsLocked : 1; // 0x134
	int32_t m_nLastDisplayedProfileId; // 0x138
	ObjectProperty m_mcActive1; // 0x13c
	ObjectProperty m_mcActive2; // 0x144
	ObjectProperty m_mcFrame; // 0x14c
	ObjectProperty m_mcIconSelectedParent; // 0x154
	ObjectProperty m_mcIconUnselectedParent; // 0x15c
	ObjectProperty m_mcIconSelected; // 0x164
	ObjectProperty m_mcIconUnselected; // 0x16c
	ObjectProperty m_mcLocked; // 0x174
};

struct UUIScene_UILeaderboard : UUIScene {
	char m_bPendingLoad : 1; // 0x1cc
	ObjectProperty m_CurrentLeaderboard; // 0x1d0
	ObjectProperty m_ChampionLeaderboard; // 0x1d8
	ObjectProperty m_PlayerLeaderboard; // 0x1e0
	ObjectProperty m_LeagueDropdown; // 0x1e8
	ObjectProperty m_RankedProgress; // 0x1f0
	ObjectProperty m_mcHeader; // 0x1f8
	ObjectProperty m_mcRankIcon; // 0x200
	ObjectProperty m_ViewProfile; // 0x208
	TArray<FString> m_GamerIds; // 0x210
	float m_fTimeSinceLastUserUpdate; // 0x220
	Fdword m_dwRequestedTierId; // 0x224
};

struct UUIComponent_PlayerName : UUIComponent_Display {
	UIALIGNINGTYPE m_eAlignment; // 0x124
	ObjectProperty m_mcNameStandard; // 0x128
	ObjectProperty m_mcNamePaidBattlePass; // 0x130
	ObjectProperty m_mcIcon; // 0x138
	TArray<ObjectProperty> m_mcNamePaidBattlePassSparkles; // 0x140
	TArray<ObjectProperty> m_mcNamePaidBattlePassStrokes; // 0x150
};

struct ATgAIDirector : AActor {
	char m_bActive : 1; // 0x280
	char m_bCanAdjustNow : 1; // 0x280
	char m_bDisparityDetected : 1; // 0x280
	char m_bProlongedDisparityDetected : 1; // 0x280
	char m_bHasLoweredDifficultyAtTie : 1; // 0x280
	char m_bFreezeAIDifficulty : 1; // 0x280
	float m_fTimeSinceLastUpdate; // 0x284
	float m_fLastSkillDisparity; // 0x288
	int32_t m_iIncreaseTF1Difficulty; // 0x28c
	int32_t m_iIncreaseTF2Difficulty; // 0x290
	int32_t m_iDisparityDetectionTime; // 0x294
	int32_t m_iTriggerTime; // 0x298
	int32_t m_iTaskForce1PlayerCount; // 0x29c
	int32_t m_iTaskForce2PlayerCount; // 0x2a0
	float LockoutTime; // 0x2a4
	float SkillDisparityTrigger; // 0x2a8
	float UpdateRate; // 0x2ac
	float m_fLastPayloadPercent; // 0x2b0
	float m_fBaseUpperKillRatio; // 0x2b4
	float m_fBaseLowerKillRatio; // 0x2b8
	float m_fBaseUpperPayloadRate; // 0x2bc
	float m_fBaseLowerPayloadRate; // 0x2c0
	float NumDeaths_Weight; // 0x2c4
	float Damage_Weight; // 0x2c8
	float Kills_Weight; // 0x2cc
	float SoloKills_Weight; // 0x2d0
	float Assists_Weight; // 0x2d4
	float ObjectiveTime_Weight; // 0x2d8
	float Healing_Weight; // 0x2dc
	float Shielding_Weight; // 0x2e0
	float Credits_Weight; // 0x2e4
	float Accuracy_Weight; // 0x2e8
	float Killstreak_Multiplier; // 0x2ec
	float numDeathsBase0; // 0x2f0
	float numDeathsBase1; // 0x2f4
	FSkillLevelRawData PlayerSkillData[0x2]; // 0x2f8
	FSkillLevelRawData TeamSkillData[0x2]; // 0x348
	FSkillLevelRawData OldPlayerSkillData[0x2]; // 0x398
	FSkillLevelRawData OldTeamSkillData[0x2]; // 0x3e8
	FSkillLevelPercentageData SkillPercentages[0x4]; // 0x438
};

struct UTgInventoryObject_Listen_Combo_Fernando : UTgInventoryObject_Listen_Combo {
	int32_t m_nNumContacts; // 0xcc
};

struct UTgAchievement_HitUniqueWithDeviceInvocation : UTgAchievement {
	char m_bReachedTargetCount : 1; // 0x94
	TArray<ObjectProperty> m_HitTargets; // 0x98
};

struct UTgAIBehaviorCondition_SquadTargetHealthPercent : UTgAIBehaviorCondition {
	float HealthPct; // 0x98
};

struct UTgEffectModifyProperty_Ability2 : UTgEffectModifyProperty {
	TArray<ObjectProperty> m_LastRetrievedOverrides; // 0xbc
};

struct UFracturedSkinnedMeshComponent : UFracturedBaseComponent {
	FPointer ComponentSkinResources; // 0x338
	TArray<FMatrix> FragmentTransforms; // 0x340
	TArray<ComponentProperty> DependentComponents; // 0x350
	char bBecameVisible : 1; // 0x360
	char bFragmentTransformsChanged : 1; // 0x360
};

struct AAmbientSoundSimpleToggleable : AAmbientSoundSimple {
	char bCurrentlyPlaying : 1; // 0x2ac
	char bFadeOnToggle : 1; // 0x2ac
	char bIgnoreAutoPlay : 1; // 0x2ac
	float FadeInDuration; // 0x2b0
	float FadeInVolumeLevel; // 0x2b4
	float FadeOutDuration; // 0x2b8
	float FadeOutVolumeLevel; // 0x2bc
};

struct UTgLevelStreamingSpectator : ULevelStreaming {
	SpectatorStreamingMethod m_LoadingMethod; // 0x100
};

struct UTgAnimMetaData_MICScalarParameterExtended : UTgAnimMetaData_MICScalarParameter {
	char bSearchSelf : 1; // 0x8c
	char bSearchSiblings : 1; // 0x8c
	char bSearchChildren : 1; // 0x8c
	char bIncludeSearchParticles : 1; // 0x8c
	char bIncludeSearchMeshes : 1; // 0x8c
	char bForceAllMaterials : 1; // 0x8c
	char bFindAllMatchingMaterials : 1; // 0x8c
	ObjectProperty MaterialToFind; // 0x90
	ObjectProperty MaterialToReplace; // 0x98
	FName nmExclusiveChannel; // 0xa0
	TArray<FAlternateMaterialOverride> AlternateMaterialList; // 0xa8
	TArray<FName> TexturesToHarvest; // 0xb8
};

struct UTgAnimNodeAimOffset_Base : UAnimNodeAimOffset {
	char m_bBakeAllProfileOffsetsFromAnimations : 1; // 0x16c
	char m_bPopulateAnimNamesWithPrefixes : 1; // 0x16c
};

struct ATgDeploy_Illusion : ATgDeployable {
	FPointer VfTable_ITgInterface_YingIllusion; // 0x46c
	float r_fShatterDelay; // 0x474
	int32_t m_nShatterDeviceID; // 0x478
	ObjectProperty m_ShatterFiremode; // 0x47c
	int32_t s_nNumBeamHits; // 0x484
	FVector s_BeamAimDir; // 0x488
	ObjectProperty s_BeamTargetActor; // 0x494
	FVector r_BeamTargetPos; // 0x49c
	char r_nPlayShatterFX; // 0x4a8
	TArray<DelegateProperty> s_OnDestroyDelegates; // 0x4ac
	DelegateProperty __DestroyedEvent__Delegate; // 0x4bc
};

struct UUIDataDirector : UUIDataObject {
	TArray<ObjectProperty> m_AcquisitionQueues; // 0x74
	TMap<None, None> m_AcquisitionQueueMap; // 0x84
	FSet_Mirror m_UniqueSessionAcquisitions; // 0xcc
	TMap<None, None> m_RedeemableAcquisitionMap; // 0x114
};

struct UPhysXParticleSystem : UObject {
	int32_t MaxParticles; // 0x60
	int32_t ParticleSpawnReserve; // 0x64
	ERBCollisionChannel RBChannel; // 0x68
	ESimulationMethod SimulationMethod; // 0x69
	EPacketSizeMultiplier PacketSizeMultiplier; // 0x6a
	FRBCollisionChannelContainer RBCollideWithChannels; // 0x6c
	float CollisionDistance; // 0x70
	float RestitutionWithStaticShapes; // 0x74
	float RestitutionWithDynamicShapes; // 0x78
	float FrictionWithStaticShapes; // 0x7c
	float FrictionWithDynamicShapes; // 0x80
	float StaticFrictionWithStaticShapes; // 0x84
	float StaticFrictionWithDynamicShapes; // 0x88
	char bDynamicCollision : 1; // 0x8c
	char bDisableGravity : 1; // 0x8c
	char bStaticCollision : 1; // 0x8c
	char bTwoWayCollision : 1; // 0x8c
	char bDestroy : 1; // 0x8c
	char bSyncFailed : 1; // 0x8c
	char bIsInGame : 1; // 0x8c
	float MaxMotionDistance; // 0x90
	float Damping; // 0x94
	FVector ExternalAcceleration; // 0x98
	float RestParticleDistance; // 0xa4
	float RestDensity; // 0xa8
	float KernelRadiusMultiplier; // 0xac
	float Stiffness; // 0xb0
	float Viscosity; // 0xb4
	float CollisionResponseCoefficient; // 0xb8
	FPointer CascadeScene; // 0xbc
	FPointer PSys; // 0xc4
};

struct UUIDataStore_OnlineGameSearch : UUIDataStore_Remote {
	FName SearchResultsName; // 0x98
	ObjectProperty OnlineSub; // 0xa0
	TScriptInterface<Class> GameInterface; // 0xa8
	TArray<FGameSearchCfg> GameSearchCfgList; // 0xb8
	int32_t SelectedIndex; // 0xc8
	int32_t ActiveSearchIndex; // 0xcc
};

struct UIniLocPatcher : UObject {
	TArray<FIniLocFileEntry> Files; // 0x60
	char bRequestEmsFileList : 1; // 0x70
	int32_t MaxCachedFileAge; // 0x74
	TScriptInterface<Class> TitleFileInterface; // 0x78
	TScriptInterface<Class> TitleFileCacheInterface; // 0x88
	TArray<DelegateProperty> ReadTitleFileCompleteDelegates; // 0x98
	DelegateProperty __OnReadTitleFileComplete__Delegate; // 0xa8
	DelegateProperty __OnAllTitleFilesCompleted__Delegate; // 0xb8
};

struct UTgAchievement_TravelDistanceChampion : UTgAchievement {
	float m_fThrowAwayDistance; // 0x94
	float m_fAccumulationDuration; // 0x98
	FVector m_vLastPosition; // 0x9c
	char m_bStarted : 1; // 0xa8
	float m_fAccumulatedTravelDistance; // 0xac
	float m_fAccumulationTimer; // 0xb0
};

struct ATgJumpPad : AActor {
	float m_fAccelRate; // 0x280
	FVector m_vTargetVelocity; // 0x284
	ComponentProperty m_Mesh; // 0x290
	ObjectProperty m_ActivationEvent; // 0x298
	TArray<ObjectProperty> m_TouchingChars; // 0x2a0
};

struct USeqAct_AkPostTrigger : USequenceAction {
	FString Trigger; // 0x108
};

struct UUIData_EventChallenge : UUIData {
	FString m_sDescription; // 0x64
	Fdword m_dwGoalId; // 0x74
	ObjectProperty m_pParentHub; // 0x78
};

struct UTgAIBehaviorCondition_VisibilityBase : UTgAIBehaviorCondition {
	char bRestrictFoV : 1; // 0x98
};

struct UUIComponent_ExclusiveItemInfo : UUIComponent_Display {
	ObjectProperty m_mcLabelTF; // 0x124
	ObjectProperty m_mcDescTF; // 0x12c
};

struct UTgDeviceFire_RaumStomp : UTgDeviceFire {
	float m_fCurrentScalingFactor; // 0x268
};

struct UInterpTrackInstNotify : UInterpTrackInst {
	float LastUpdatePosition; // 0x60
};

struct ATgPawn_Dredge : ATgPawn_Character {
	float m_fBoostedJumpMultiplier; // 0x3160
	float m_fBoostedJumpGravityMultiplier; // 0x3164
	char m_bIsBoostedJumping : 1; // 0x3168
};

struct UUIComponent_MatchLobbyBans : UUIComponent_Display {
	ObjectProperty m_BanList; // 0x124
	char m_bBlueTeam : 1; // 0x12c
};

struct USeqVar_Vector : USequenceVariable {
	FVector VectValue; // 0xa0
};

struct ATgPawn_Turret : ATgPawn_Pet {
	char r_bLockdownIsOn : 1; // 0x2ef8
	char r_bHasHealingStation : 1; // 0x2ef8
	char m_bFirstAidNuggetOverride : 1; // 0x2ef8
	int32_t m_nLockdownPostureID; // 0x2efc
	ObjectProperty m_SpawningDevice; // 0x2f00
	ObjectProperty m_TargetingNotificationAkEvent; // 0x2f08
	ObjectProperty m_PrevTargetActor; // 0x2f10
};

struct USeqAct_AkSetSwitch : USequenceAction {
	FString SwitchGroup; // 0x108
	FString Switch; // 0x118
};

struct UPComGameViewportClient : UGameViewportClient {
	ObjectProperty OpenBroadcaster; // 0x1a8
	ObjectProperty InputLightingEffect; // 0x1b0
	char bUseDynamicResolutionScaler : 1; // 0x1b8
	FPointer DynamicResolutionScaler; // 0x1bc
};

struct UPBRuleNodeSubRuleset : UPBRuleNodeBase {
	ObjectProperty SubRuleset; // 0x70
};

struct UTgAISquad : UObject {
	FPointer VfTable_FTickableObject; // 0x60
	char s_bOpen : 1; // 0x68
	char s_bShouldSpread : 1; // 0x68
	TArray<ObjectProperty> s_MemberList; // 0x6c
	ObjectProperty s_Factory; // 0x7c
	ObjectProperty s_CurrentTarget; // 0x84
	TArray<ObjectProperty> s_TargetList; // 0x8c
	ObjectProperty s_LastKiller; // 0x9c
	float s_fNextSpreadTime; // 0xa4
};

struct ATgBotFactory_Leashed : ATgBotFactory {
	FVector LeashLocation; // 0x370
	float LeashRange; // 0x37c
	ObjectProperty LeashVolume; // 0x380
};

struct UImageReflectionComponent : UActorComponent {
	ObjectProperty ReflectionTexture; // 0x88
};

struct ATgStaticMeshActor_BoostedTextures : AStaticMeshActor {
	ELobbyCameraTag m_CameraTag; // 0x2a4
	ObjectProperty m_LoadingMaterial; // 0x2a8
	float m_fFadeInTime; // 0x2b0
	char m_bMaterialRelevant : 1; // 0x2b4
	char m_bWaitingForTextures : 1; // 0x2b4
	char m_bLoadingMaterialApplied : 1; // 0x2b4
	float m_fFadeInTimeRemaining; // 0x2b8
	TArray<ObjectProperty> m_BaseMaterials; // 0x2bc
	TArray<ObjectProperty> m_LoadingMaterials; // 0x2cc
};

struct UTgData_EOM : UTgDataObject {
	int32_t m_nGameId; // 0xc0
	int32_t m_nQueueId; // 0xc4
	int32_t m_nClassId; // 0xc8
	int32_t m_nGameTime; // 0xcc
	int32_t m_nLocalTF; // 0xd0
	int32_t m_nWinningTF; // 0xd4
	char m_bVictory : 1; // 0xd8
	char m_bIsSpectator : 1; // 0xd8
	int32_t m_nMapGameId; // 0xdc
	int32_t m_nXPEarned; // 0xe0
	int32_t m_nMasteryEarned; // 0xe4
	int32_t m_nGoldEarned; // 0xe8
	int32_t m_nVIPEarned; // 0xec
	int32_t m_nVIPMemberEarned; // 0xf0
	int32_t m_nBattlePassBase; // 0xf4
	int32_t m_nBattlePassEarned; // 0xf8
	int32_t m_fBattlePassMultiplier; // 0xfc
	int32_t m_nEventCurrencyEarned; // 0x100
	int32_t m_nEventCurrencyEarnedLootId; // 0x104
	float m_fXPMultiplier; // 0x108
	float m_fMasteryMultiplier; // 0x10c
	float m_fGoldMultiplier; // 0x110
	float m_fVIPMultiplier; // 0x114
	int32_t m_nXPAccountBoost; // 0x118
	int32_t m_nMasteryAccountBoost; // 0x11c
	int32_t m_nGoldAccountBoost; // 0x120
	int32_t m_nXPPartyBoost; // 0x124
	int32_t m_nMasteryPartyBoost; // 0x128
	int32_t m_nGoldPartyBoost; // 0x12c
	int32_t m_nVIPPartyBoost; // 0x130
	int32_t m_nXPTeamBoost; // 0x134
	int32_t m_nMasteryTeamBoost; // 0x138
	int32_t m_nGoldTeamBoost; // 0x13c
	int32_t m_nVIPTeamBoost; // 0x140
	int32_t m_nXPSkinBoost; // 0x144
	int32_t m_nMasterySkinBoost; // 0x148
	int32_t m_nGoldSkinBoost; // 0x14c
	int32_t m_nVIPSkinBoost; // 0x150
	int32_t m_nNumSkinBoosters; // 0x154
	int32_t m_nXPVIPTierBoost; // 0x158
	int32_t m_nMasteryVIPTierBoost; // 0x15c
	int32_t m_nGoldVIPTierBoost; // 0x160
	int32_t m_nVIPVIPTierBoost; // 0x164
	int32_t m_nXPBonus; // 0x168
	int32_t m_nGoldBonus; // 0x16c
	int32_t m_nGoldAccolades; // 0x170
	int32_t m_nXPPaying; // 0x174
	Fdword m_dwGoldKills; // 0x178
	TArray<ObjectProperty> m_Players; // 0x17c
	TArray<FUIMVPDATA> m_MVPs; // 0x18c
	TArray<FAccoladeData> m_Accolades; // 0x19c
	TArray<FCurrencyEntry> m_vCurrencyEntries; // 0x1ac
	FCurrencyEntry m_NullCurrency; // 0x1bc
};

struct ATgDevice_YagoChargeUp : ATgDevice_Charge {
	ObjectProperty m_YagoTravelDevice; // 0xa78
	float m_fPerActorHitPeriod; // 0xa80
};

struct ABroadcastHandler : AInfo {
	int32_t SentText; // 0x280
	char bMuteSpectators : 1; // 0x284
};

struct USeqAct_LevelVisibility : USeqAct_Latent {
	ObjectProperty Level; // 0x120
	FName LevelName; // 0x128
	char bStatusIsOk : 1; // 0x130
};

struct AColorScaleVolume : AVolume {
	FVector ColorScale; // 0x2bc
	float InterpTime; // 0x2c8
};

struct UUIScene_UIWinterEvent : UUIScene {
	ObjectProperty m_pTabs; // 0x1cc
	ObjectProperty m_pBack; // 0x1d4
	ObjectProperty m_pHome; // 0x1dc
	ObjectProperty m_pStore; // 0x1e4
	ObjectProperty m_pEvents; // 0x1ec
	ObjectProperty m_pOverview; // 0x1f4
	ObjectProperty m_pRotator; // 0x1fc
};

struct ATgTrigger_Instance : ATrigger {
	int32_t m_nMapId; // 0x290
	char m_nPreload : 1; // 0x294
	char m_nTaskForce : 1; // 0x294
	FString m_SpawnPointName; // 0x298
};

struct UMorphNodeBase : UAnimObject {
	FName NodeName; // 0x68
	char bDrawSlider : 1; // 0x70
};

struct UUIData_DLCItem : UUIData {
	Fdword m_dwPrice; // 0x64
	char m_bIsHidden : 1; // 0x68
	ObjectProperty m_pLootTableItem; // 0x6c
};

struct UActorFactoryArchetype : UActorFactory {
	ObjectProperty ArchetypeActor; // 0x9c
};

struct USubsystem : UObject {
	FPointer VfTable_FExec; // 0x60
};

struct ATgDevice_ItFollows : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
};

struct UUIDataStore_MenuItems : UUIDataStore_GameResource {
	FName CurrentGameSettingsTag; // 0xf0
	FMultiMap_Mirror OptionProviders; // 0xf8
	TArray<ObjectProperty> DynamicProviders; // 0x140
};

struct USeqAct_AccessObjectList : USeqAct_SetSequenceVariable {
	ObjectProperty OutputObject; // 0x108
	int32_t ObjectIndex; // 0x110
};

struct UParticleModuleLocationEmitterDirect : UParticleModuleLocationBase {
	FName EmitterName; // 0x68
};

struct UPBRuleNodeTransform : UPBRuleNodeBase {
	ComponentProperty Translation; // 0x70
	ComponentProperty Rotation; // 0x78
	ComponentProperty Scale; // 0x80
};

struct UPComOpenBroadcaster : UObject {
	FPointer VfTable_FCallbackEventDevice; // 0x60
	FString FacebookAppId; // 0x68
	FString FacebookApprovedDomain; // 0x78
	FString FacebookLiveUrl; // 0x88
	EPComOpenBroadcasterState CurrentState; // 0x98
	FPComOpenBroadcasterSettings CurrentSettings; // 0x9c
	FPointer StreamerProcessHandle; // 0xa0
	DelegateProperty __PreloadWebBrowser__Delegate; // 0xa8
	DelegateProperty __IsWebBrowserLoaded__Delegate; // 0xb8
	DelegateProperty __OpenWebBrowser__Delegate; // 0xc8
	DelegateProperty __CloseWebBrowser__Delegate; // 0xd8
};

struct UTgDeviceForm_DarklordInhand : UTgDeviceForm_Inhand {
	ObjectProperty m_CachedDarklord; // 0x29c
	float m_fFadeParamMin; // 0x2a4
	float m_fFadeParamMax; // 0x2a8
	float m_fAmmoParamMin; // 0x2ac
	float m_fAmmoParamMax; // 0x2b0
	float m_fMaskParamMin; // 0x2b4
	float m_fMaskParamMax; // 0x2b8
	float m_fPreviousAppliedAmmoPerc; // 0x2bc
	float m_fCurrentAppliedAmmoPerc; // 0x2c0
	float m_fAnimatedReloadStartNormalizedTime; // 0x2c4
	float m_fAnimatedReloadEndNormalizedTime; // 0x2c8
	float m_fReloadDuration; // 0x2cc
	float m_fReloadTimer; // 0x2d0
};

struct UDistributionVectorUniform : UDistributionVector {
	FVector Max; // 0x7c
	FVector Min; // 0x88
	char bLockAxes : 1; // 0x94
	char bUseExtremes : 1; // 0x94
	EDistributionVectorLockFlags LockedAxes; // 0x98
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x99
};

struct ATgDeploy_SaatiCoin : ATgDeploy_MatchParentFireMode {
	char m_bUseAoeFiremode : 1; // 0x46c
	ObjectProperty m_AoeFiremode; // 0x470
	int32_t m_nCoinFlatDamageTaken; // 0x478
};

struct ATgDevice_NinjaRMB1 : ATgDevice_Charge {
	char c_bAlreadyConsumedStamina : 1; // 0xa78
	ObjectProperty m_CachedKoga; // 0xa7c
};

struct ATgDeploy_AtlasF : ATgDeployable {
	ObjectProperty m_Target; // 0x46c
	ComponentProperty m_CountdownIndicator; // 0x474
	ObjectProperty m_CountdownIndicatorMIC; // 0x47c
};

struct UPComGameEngine : UGameEngine {
	FPointer pOutgoingMarshal; // 0xaa8
};

struct ATgDevice_AzaanDash : ATgDevice_Charge {
	ObjectProperty m_pAzaan; // 0xa78
	float m_fWalkableFloorZ; // 0xa80
	ObjectProperty r_PawnTarget; // 0xa84
	char m_bWasAboveThreshold : 1; // 0xa8c
};

struct UTgAIBehaviorCondition_NearbyGodDelta : UTgAIBehaviorCondition_DistanceBase {
	int32_t GodThreshold; // 0x9c
	char bMustBeInForwardCone : 1; // 0xa0
	float ForwardConeAngle; // 0xa4
};

struct UGameMessage : ULocalMessage {
	FString SwitchLevelMessage; // 0x74
	FString LeftMessage; // 0x84
	FString FailedTeamMessage; // 0x94
	FString FailedPlaceMessage; // 0xa4
	FString FailedSpawnMessage; // 0xb4
	FString EnteredMessage; // 0xc4
	FString MaxedOutMessage; // 0xd4
	FString ArbitrationMessage; // 0xe4
	FString OvertimeMessage; // 0xf4
	FString GlobalNameChange; // 0x104
	FString NewTeamMessage; // 0x114
	FString NewTeamMessageTrailer; // 0x124
	FString NoNameChange; // 0x134
	FString VoteStarted; // 0x144
	FString VotePassed; // 0x154
	FString MustHaveStats; // 0x164
	FString CantBeSpectator; // 0x174
	FString CantBePlayer; // 0x184
	FString BecameSpectator; // 0x194
	FString NewPlayerMessage; // 0x1a4
	FString KickWarning; // 0x1b4
	FString NewSpecMessage; // 0x1c4
	FString SpecEnteredMessage; // 0x1d4
};

struct UTgDeviceForm_Turret : UTgDeviceForm {
	ObjectProperty m_SKCTurretScale; // 0x28c
};

struct UPBRuleNodeQuad : UPBRuleNodeBase {
	ObjectProperty Material; // 0x70
	float RepeatMaxSizeX; // 0x78
	float RepeatMaxSizeZ; // 0x7c
	int32_t QuadLightmapRes; // 0x80
	float YOffset; // 0x84
	char bDisableMaterialRepeat : 1; // 0x88
};

struct UGameThirdPersonCamera : UGameCameraBase {
	float WorstLocBlockedPct; // 0x6c
	float WorstLocPenetrationExtentScale; // 0x70
	float PenetrationBlendOutTime; // 0x74
	float PenetrationBlendInTime; // 0x78
	float PenetrationBlockedPct; // 0x7c
	float PenetrationExtentScale; // 0x80
	FVector LastActualOriginOffset; // 0x84
	FVector LastActualCameraOrigin; // 0x90
	FRotator LastActualCameraOriginRot; // 0x9c
	float OriginOffsetInterpSpeed; // 0xa8
	FVector LastViewOffset; // 0xac
	float LastCamFOV; // 0xb8
	FVector LastIdealCameraOrigin; // 0xbc
	FRotator LastIdealCameraOriginRot; // 0xc8
	ObjectProperty ThirdPersonCamDefault; // 0xd4
	UGameThirdPersonCameraMode* ThirdPersonCamDefaultClass; // 0xdc
	ObjectProperty CurrentCamMode; // 0xe4
	float LastHeightAdjustment; // 0xec
	float LastPitchAdjustment; // 0xf0
	float LastYawAdjustment; // 0xf4
	float LeftoverPitchAdjustment; // 0xf8
	float Focus_BackOffStrength; // 0xfc
	float Focus_StepHeightAdjustment; // 0x100
	int32_t Focus_MaxTries; // 0x104
	float Focus_FastAdjustKickInTime; // 0x108
	float LastFocusChangeTime; // 0x10c
	FVector ActualFocusPointWorldLoc; // 0x110
	FVector LastFocusPointLoc; // 0x11c
	FCamFocusPointParams FocusPoint; // 0x128
	char bFocusPointSet : 1; // 0x160
	char bFocusPointSuccessful : 1; // 0x160
	char bDoingACameraTurn : 1; // 0x160
	char bTurnAlignTargetWhenFinished : 1; // 0x160
	char bDrawDebug : 1; // 0x160
	char bDoingDirectLook : 1; // 0x160
	char bDebugChangedCameraMode : 1; // 0x160
	char bDoSeamlessPivotTransition : 1; // 0x160
	float TurnCurTime; // 0x164
	int32_t TurnStartAngle; // 0x168
	int32_t TurnEndAngle; // 0x16c
	float TurnTotalTime; // 0x170
	float TurnDelay; // 0x174
	int32_t LastPostCamTurnYaw; // 0x178
	int32_t DirectLookYaw; // 0x17c
	float DirectLookInterpSpeed; // 0x180
	float WorstLocInterpSpeed; // 0x184
	FVector LastWorstLocationLocal; // 0x188
	FVector LastWorstLocation; // 0x194
	FVector LastPreModifierCameraLoc; // 0x1a0
	FRotator LastPreModifierCameraRot; // 0x1ac
	TArray<FPenetrationAvoidanceFeeler> PenetrationAvoidanceFeelers; // 0x1b8
	FVector LastOffsetAdjustment; // 0x1c8
};

struct UMcpUserInventoryManager : UMcpUserInventoryBase {
	FString CreateSaveSlotUrl; // 0x128
	FString DeleteSaveSlotUrl; // 0x138
	FString ListSaveSlotUrl; // 0x148
	FString ListItemsUrl; // 0x158
	FString PurchaseItemUrl; // 0x168
	FString SellItemUrl; // 0x178
	FString EarnItemUrl; // 0x188
	FString ConsumeItemUrl; // 0x198
	FString DeleteItemUrl; // 0x1a8
	FString IapRecordUrl; // 0x1b8
	TArray<FMcpInventorySaveSlot> SaveSlots; // 0x1c8
	TArray<FSaveSlotRequestState> SaveSlotRequests; // 0x1d8
	TArray<FSaveSlotRequestState> ListSaveSlotRequests; // 0x1e8
	TArray<FSaveSlotRequestState> ListItemsRequests; // 0x1f8
	TArray<FInventoryItemRequestState> ItemRequests; // 0x208
};

struct UTgAIBehaviorCondition_PhysicsState : UTgAIBehaviorCondition {
	EPhysics PhysicsState; // 0x98
};

struct UTgSeqAct_TriggerInterpActor : USequenceAction {
	FString m_sStateName; // 0x108
};

struct UUIComponent_StoreBountyItems : UUIComponent_Display {
	ObjectProperty m_mcItemName; // 0x124
	ObjectProperty m_mcItemRarity; // 0x12c
	ObjectProperty m_mcDealDetails; // 0x134
	ObjectProperty m_mcCurrencyIcon; // 0x13c
	ObjectProperty m_mcCurrencyTF; // 0x144
	ObjectProperty m_mcTimerTF; // 0x14c
	ObjectProperty m_mcOwnedTF; // 0x154
	ObjectProperty m_DailyQuest; // 0x15c
	ObjectProperty m_pMoreCoinsButton; // 0x164
	ObjectProperty m_PurchaseButton; // 0x16c
	ObjectProperty m_pPurchaseAction; // 0x174
	Fdword m_dwCurrentItem; // 0x17c
	Fdword m_dwCurrentPrice; // 0x180
	Fdword m_dwQuantityRemaining; // 0x184
	float m_fLastPortalClaimUpdateTimestamp; // 0x188
};

struct UTgFlagContentData : UObject {
	TArray<FFlagMeshData> m_MeshData; // 0x60
};

struct UUIDataSocial : UUIDataObject {
	char m_nPartyMembersInGame : 1; // 0x74
	char m_bSearchActive : 1; // 0x74
	int32_t m_nOnlineFriendCount; // 0x78
	int32_t m_nConnectedFriendCount; // 0x7c
	int32_t m_nPendingFriendInvites; // 0x80
	Fdword m_dwLastUpdatePartyActiveCount; // 0x84
	int32_t m_nReferralPeriodSeconds; // 0x88
	Fdword m_dwReferredHighestLevel; // 0x8c
	Fdword m_dwReferredLongestPlayedMinutes; // 0x90
	Fdword m_dwReferredReachedTier2; // 0x94
	Fdword m_dwLastSentGiftId; // 0x98
	TArray<ObjectProperty> m_AllFriends; // 0x9c
	TArray<ObjectProperty> m_CrossPlatformFriends; // 0xac
	TArray<ObjectProperty> m_PortalFriends; // 0xbc
	TArray<ObjectProperty> m_Party; // 0xcc
	TArray<ObjectProperty> m_Search; // 0xdc
	TArray<ObjectProperty> m_ReferredPlayers; // 0xec
	TArray<ObjectProperty> m_Referrers; // 0xfc
	TArray<ObjectProperty> m_CheckLeaguePlayers; // 0x10c
	TMap<None, None> m_Players; // 0x11c
	TMap<None, None> m_PlayerByPortalId; // 0x164
	FString m_sSearchName; // 0x1ac
	SAACT_ACTION m_eSearchAction; // 0x1bc
	TArray<FString> m_sSearchTitle; // 0x1c0
	TArray<FString> m_sSearchData; // 0x1d0
	float m_fCheckLeaguePlayersTimer; // 0x1e0
};

struct UUIComponent_Targeter_Rider : UUIComponent_Targeter_PointTargeter {
	ObjectProperty m_mcSpinner; // 0x184
	float m_fSpinnerRotation; // 0x18c
	int32_t m_nNumStacks; // 0x190
	int32_t m_nMaxStacks; // 0x194
};

struct UUIComponentPool : UUIComponent {
	TArray<ObjectProperty> m_ActivePooledItems; // 0x118
	TArray<ObjectProperty> m_InactivePooledItems; // 0x128
};

struct UUIComponent_EventEmoteButton : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_mcRarity; // 0x12c
	ObjectProperty m_mcQuestIcon; // 0x134
	ObjectProperty m_mcChainName; // 0x13c
	ObjectProperty m_mcChainProgress; // 0x144
	ObjectProperty m_mcChainProgressTF; // 0x14c
	ObjectProperty m_mcCompleteToUnlock; // 0x154
	ObjectProperty m_pChainProgressBar; // 0x15c
	ObjectProperty m_pUnlockButton; // 0x164
};

struct UInterpTrackMorphWeight : UInterpTrackFloatBase {
	FName MorphNodeName; // 0xb8
};

struct UMorphNodeWeightByBoneRotation : UMorphNodeWeightBase {
	float Angle; // 0x84
	float NodeWeight; // 0x88
	FName BoneName; // 0x8c
	EAxis BoneAxis; // 0x94
	char bInvertBoneAxis : 1; // 0x98
	char bControlMaterialParameter : 1; // 0x98
	TArray<FBoneAngleMorph> WeightArray; // 0x9c
	int32_t MaterialSlotId; // 0xac
	FName ScalarParameterName; // 0xb0
	ObjectProperty MaterialInstanceConstant; // 0xb8
};

struct UUIComponent_TwitchPrime : UUIComponent_Display {
	ObjectProperty m_pClaimButton; // 0x124
	ObjectProperty m_pNotNowButton; // 0x12c
	ObjectProperty m_pLinkButton; // 0x134
	ObjectProperty m_pRewardItems; // 0x13c
	ObjectProperty m_pLinkAccountPopup; // 0x144
	ObjectProperty m_mcTwitchLink; // 0x14c
};

struct UPBRuleNodeSize : UPBRuleNodeBase {
	EProcBuildingAxis SizeAxis; // 0x70
	float DecisionSize; // 0x74
	char bUseTopLevelScopeSize : 1; // 0x78
};

struct UTgSeqAct_SetSkelPosture : USequenceAction {
	TG_POSTURE m_Posture; // 0x108
};

struct UUIData_PopupGeneric : UUIData {
	FPointer VfTable_ITgCallbackInterface; // 0x64
	FString sTitle[0x2]; // 0x6c
	int32_t nInitialIndex; // 0x8c
	char bUserMustClose : 1; // 0x90
	FString sButtonName[0x8]; // 0x94
	FPointer pOtherSceneStompFunction; // 0x114
	ObjectProperty m_CallbackContainer; // 0x11c
};

struct USeqAct_LevelStreaming : USeqAct_LevelStreamingBase {
	ObjectProperty Level; // 0x124
	FName LevelName; // 0x12c
	char bStatusIsOk : 1; // 0x134
};

struct USaveGameSummary : UObject {
	FName BaseLevel; // 0x60
	FString Description; // 0x68
};

struct UTgAnimNodeBlendByMeleeIdle : UTgAnimNodeBlendList {
	ObjectProperty m_TgPawn; // 0x168
};

struct UParticleModuleLocationEmitter : UParticleModuleLocationBase {
	FName EmitterName; // 0x68
	ELocationEmitterSelectionMethod SelectionMethod; // 0x70
	char InheritSourceVelocity : 1; // 0x74
	char bInheritSourceRotation : 1; // 0x74
	float InheritSourceVelocityScale; // 0x78
	float InheritSourceRotationScale; // 0x7c
};

struct UTgControlModule_StunTaunted : UTgControlModule_ThirdPerson {
	float m_fInitialYaw; // 0xcc
	float m_fInterpTime; // 0xd0
	float m_fRemainingInterpTime; // 0xd4
};

struct UParticleModuleSizeMultiplyVelocity : UParticleModuleSizeBase {
	FRawDistributionVector VelocityMultiplier; // 0x68
	char MultiplyX : 1; // 0x8c
	char MultiplyY : 1; // 0x8c
	char MultiplyZ : 1; // 0x8c
	FVector CapMaxSize; // 0x90
	FVector CapMinSize; // 0x9c
};

struct ANxTornadoForceField : ANxForceField {
	float RadialStrength; // 0x2d4
	float RotationalStrength; // 0x2d8
	float LiftStrength; // 0x2dc
	float ForceRadius; // 0x2e0
	float ForceTopRadius; // 0x2e4
	float LiftFalloffHeight; // 0x2e8
	float EscapeVelocity; // 0x2ec
	float ForceHeight; // 0x2f0
	float HeightOffset; // 0x2f4
	char BSpecialRadialForceMode : 1; // 0x2f8
	FPointer Kernel; // 0x2fc
};

struct ATgPawn_Atlas : ATgPawn_Character {
	int32_t r_nReplicatedInhandFireLevel; // 0x3160
	ObjectProperty m_CachedRMB; // 0x3164
	ObjectProperty m_CachedBeyondTheVeil; // 0x316c
	TArray<FRewindingPawn> s_PawnsRewinding; // 0x3174
	FName m_nmXenoName; // 0x3184
	char m_bMeshSwappedDirty : 1; // 0x318c
	int32_t m_nSuperWarpTalentId; // 0x3190
	ObjectProperty m_SuperWarpTalent; // 0x3194
};

struct UMaterialExpressionScreenPosition : UMaterialExpression {
	char ScreenAlign : 1; // 0xb0
};

struct AGameAIController : AAIController {
	ObjectProperty CommandList; // 0x494
	char bHasRunawayCommandList : 1; // 0x49c
	char bAILogging : 1; // 0x49c
	char bAILogToWindow : 1; // 0x49c
	char bFlushAILogEachLine : 1; // 0x49c
	char bMapBasedLogName : 1; // 0x49c
	char bAIDrawDebug : 1; // 0x49c
	char bAIBroken : 1; // 0x49c
	ObjectProperty AILogFile; // 0x4a0
	float DebugTextMaxLen; // 0x4a8
	TArray<FAICmdHistoryItem> CommandHistory; // 0x4ac
	int32_t CommandHistoryNum; // 0x4bc
	TArray<FName> AILogFilter; // 0x4c0
	FString DemoActionString; // 0x4d0
};

struct UEngine : USubsystem {
	ObjectProperty TinyFont; // 0x68
	FString TinyFontName; // 0x70
	ObjectProperty SmallFont; // 0x80
	FString SmallFontName; // 0x88
	ObjectProperty MediumFont; // 0x98
	FString MediumFontName; // 0xa0
	ObjectProperty LargeFont; // 0xb0
	FString LargeFontName; // 0xb8
	ObjectProperty SubtitleFont; // 0xc8
	FString SubtitleFontName; // 0xd0
	TArray<ObjectProperty> AdditionalFonts; // 0xe0
	TArray<FString> AdditionalFontNames; // 0xf0
	UConsole* ConsoleClass; // 0x100
	FString ConsoleClassName; // 0x108
	UGameViewportClient* GameViewportClientClass; // 0x118
	FString GameViewportClientClassName; // 0x120
	UDataStoreClient* DataStoreClientClass; // 0x130
	FString DataStoreClientClassName; // 0x138
	ULocalPlayer* LocalPlayerClass; // 0x148
	FString LocalPlayerClassName; // 0x150
	ObjectProperty DefaultMaterial; // 0x160
	FString DefaultMaterialName; // 0x168
	ObjectProperty DefaultDecalMaterial; // 0x178
	FString DefaultDecalMaterialName; // 0x180
	ObjectProperty DefaultTexture; // 0x190
	FString DefaultTextureName; // 0x198
	ObjectProperty WireframeMaterial; // 0x1a8
	FString WireframeMaterialName; // 0x1b0
	ObjectProperty EmissiveTexturedMaterial; // 0x1c0
	FString EmissiveTexturedMaterialName; // 0x1c8
	ObjectProperty GeomMaterial; // 0x1d8
	FString GeomMaterialName; // 0x1e0
	ObjectProperty DefaultFogVolumeMaterial; // 0x1f0
	FString DefaultFogVolumeMaterialName; // 0x1f8
	ObjectProperty TickMaterial; // 0x208
	FString TickMaterialName; // 0x210
	ObjectProperty CrossMaterial; // 0x220
	FString CrossMaterialName; // 0x228
	ObjectProperty LevelColorationLitMaterial; // 0x238
	FString LevelColorationLitMaterialName; // 0x240
	ObjectProperty LevelColorationUnlitMaterial; // 0x250
	FString LevelColorationUnlitMaterialName; // 0x258
	ObjectProperty LightingTexelDensityMaterial; // 0x268
	FString LightingTexelDensityName; // 0x270
	ObjectProperty ShadedLevelColorationLitMaterial; // 0x280
	FString ShadedLevelColorationLitMaterialName; // 0x288
	ObjectProperty ShadedLevelColorationUnlitMaterial; // 0x298
	FString ShadedLevelColorationUnlitMaterialName; // 0x2a0
	ObjectProperty RemoveSurfaceMaterial; // 0x2b0
	FString RemoveSurfaceMaterialName; // 0x2b8
	ObjectProperty VertexColorMaterial; // 0x2c8
	FString VertexColorMaterialName; // 0x2d0
	ObjectProperty VertexColorViewModeMaterial_ColorOnly; // 0x2e0
	FString VertexColorViewModeMaterialName_ColorOnly; // 0x2e8
	ObjectProperty VertexColorViewModeMaterial_AlphaAsColor; // 0x2f8
	FString VertexColorViewModeMaterialName_AlphaAsColor; // 0x300
	ObjectProperty VertexColorViewModeMaterial_RedOnly; // 0x310
	FString VertexColorViewModeMaterialName_RedOnly; // 0x318
	ObjectProperty VertexColorViewModeMaterial_GreenOnly; // 0x328
	FString VertexColorViewModeMaterialName_GreenOnly; // 0x330
	ObjectProperty VertexColorViewModeMaterial_BlueOnly; // 0x340
	FString VertexColorViewModeMaterialName_BlueOnly; // 0x348
	ObjectProperty HeatmapMaterial; // 0x358
	FString HeatmapMaterialName; // 0x360
	ObjectProperty BoneWeightMaterial; // 0x370
	FString BoneWeightMaterialName; // 0x378
	ObjectProperty TangentColorMaterial; // 0x388
	FString TangentColorMaterialName; // 0x390
	ObjectProperty MobileEmulationMasterMaterial; // 0x3a0
	FString MobileEmulationMasterMaterialName; // 0x3a8
	ObjectProperty ProcBuildingSimpleMaterial; // 0x3b8
	FString ProcBuildingSimpleMaterialName; // 0x3c0
	ObjectProperty BuildingQuadStaticMesh; // 0x3d0
	FString BuildingQuadStaticMeshName; // 0x3d8
	float ProcBuildingLODColorTexelsPerWorldUnit; // 0x3e8
	float ProcBuildingLODLightingTexelsPerWorldUnit; // 0x3ec
	int32_t MaxProcBuildingLODColorTextureSize; // 0x3f0
	int32_t MaxProcBuildingLODLightingTextureSize; // 0x3f4
	char UseProcBuildingLODTextureCropping : 1; // 0x3f8
	char ForcePowerOfTwoProcBuildingLODTextures : 1; // 0x3f8
	char bCombineSimilarMappings : 1; // 0x3f8
	char bRenderLightMapDensityGrayscale : 1; // 0x3f8
	char bScreenshotRequested : 1; // 0x3f8
	char bUseSound : 1; // 0x3f8
	char bUseBackgroundLevelStreaming : 1; // 0x3f8
	char bSubtitlesEnabled : 1; // 0x3f8
	char bSubtitlesForcedOff : 0; // 0x3f8
	char bSmoothFrameRate : 0; // 0x3f8
	char bCheckForMultiplePawnsSpawnedInAFrame : 0; // 0x3f8
	char bShouldGenerateSimpleLightmaps : 0; // 0x3f8
	char bForceStaticTerrain : 0; // 0x3f8
	char bForceCPUSkinning : 0; // 0x3f8
	char bUsePostProcessEffects : 0; // 0x3f8
	char bOnScreenKismetWarnings : 0; // 0x3f8
	char bEnableKismetLogging : 0; // 0x3f8
	char bAllowMatureLanguage : 0; // 0x3f8
	char bDisablePhysXHardwareSupport : 0; // 0x3f8
	char bPauseOnLossOfFocus : 0; // 0x3f8
	char bCheckParticleRenderSize : 0; // 0x3f8
	char bEnableColorClear : 0; // 0x3f8
	char bAreConstraintsDirty : 0; // 0x3f8
	char bHasPendingGlobalReattach : 0; // 0x3f8
	char bEnableOnScreenDebugMessages : 0; // 0x3f8
	char bEnableOnScreenDebugMessagesDisplay : 0; // 0x3f8
	char bSuppressMapWarnings : 0; // 0x3f8
	char bCookSeparateSharedMPGameContent : 0; // 0x3f8
	char bUseRecastNavMesh : 0; // 0x3f8
	char bDisableAILogging : 0; // 0x3f8
	char bUseNormalMapsForSimpleLightMaps : 0; // 0x3f8
	char bStartWithMatineeCapture : 0; // 0x3f8
	char bCompressMatineeCapture : 1; // 0x3fc
	char bLockReadOnlyLevels : 1; // 0x3fc
	float MaxRMSDForCombiningMappings; // 0x400
	int32_t ImageReflectionTextureSize; // 0x404
	FLinearColor LightingOnlyBrightness; // 0x408
	TArray<FColor> LightComplexityColors; // 0x418
	TArray<FLinearColor> ShaderComplexityColors; // 0x428
	float MaxPixelShaderAdditiveComplexityCount; // 0x438
	float MinTextureDensity; // 0x43c
	float IdealTextureDensity; // 0x440
	float MaxTextureDensity; // 0x444
	float MinLightMapDensity; // 0x448
	float IdealLightMapDensity; // 0x44c
	float MaxLightMapDensity; // 0x450
	float RenderLightMapDensityGrayscaleScale; // 0x454
	float RenderLightMapDensityColorScale; // 0x458
	FLinearColor LightMapDensityVertexMappedColor; // 0x45c
	FLinearColor LightMapDensitySelectedColor; // 0x46c
	TArray<FStatColorMapping> StatColorMappings; // 0x47c
	ObjectProperty EditorBrushMaterial; // 0x48c
	FString EditorBrushMaterialName; // 0x494
	ObjectProperty DefaultPhysMaterial; // 0x4a4
	FString DefaultPhysMaterialName; // 0x4ac
	ObjectProperty LandscapeHolePhysMaterial; // 0x4bc
	FString LandscapeHolePhysMaterialName; // 0x4c4
	ObjectProperty ApexDamageParams; // 0x4d4
	FString ApexDamageParamsName; // 0x4dc
	ObjectProperty TerrainErrorMaterial; // 0x4ec
	FString TerrainErrorMaterialName; // 0x4f4
	int32_t TerrainMaterialMaxTextureCount; // 0x504
	int32_t TerrainTessellationCheckCount; // 0x508
	float TerrainTessellationCheckDistance; // 0x50c
	UOnlineSubsystem* OnlineSubsystemClass; // 0x510
	FString DefaultOnlineSubsystemName; // 0x518
	ObjectProperty DefaultPostProcess; // 0x528
	FString DefaultPostProcessName; // 0x530
	ObjectProperty ThumbnailSkeletalMeshPostProcess; // 0x540
	FString ThumbnailSkeletalMeshPostProcessName; // 0x548
	ObjectProperty ThumbnailParticleSystemPostProcess; // 0x558
	FString ThumbnailParticleSystemPostProcessName; // 0x560
	ObjectProperty ThumbnailMaterialPostProcess; // 0x570
	FString ThumbnailMaterialPostProcessName; // 0x578
	ObjectProperty DefaultUIScenePostProcess; // 0x588
	FString DefaultUIScenePostProcessName; // 0x590
	ObjectProperty DefaultUICaretMaterial; // 0x5a0
	FString DefaultUICaretMaterialName; // 0x5a8
	ObjectProperty SceneCaptureReflectActorMaterial; // 0x5b8
	FString SceneCaptureReflectActorMaterialName; // 0x5c0
	ObjectProperty SceneCaptureCubeActorMaterial; // 0x5d0
	FString SceneCaptureCubeActorMaterialName; // 0x5d8
	ObjectProperty ScreenDoorNoiseTexture; // 0x5e8
	FString ScreenDoorNoiseTextureName; // 0x5f0
	ObjectProperty ImageGrainNoiseTexture; // 0x600
	FString ImageGrainNoiseTextureName; // 0x608
	ObjectProperty RandomAngleTexture; // 0x618
	FString RandomAngleTextureName; // 0x620
	ObjectProperty RandomNormalTexture; // 0x630
	FString RandomNormalTextureName; // 0x638
	ObjectProperty RandomMirrorDiscTexture; // 0x648
	FString RandomMirrorDiscTextureName; // 0x650
	ObjectProperty WeightMapPlaceholderTexture; // 0x660
	FString WeightMapPlaceholderTextureName; // 0x668
	ObjectProperty LightMapDensityTexture; // 0x678
	FString LightMapDensityTextureName; // 0x680
	ObjectProperty LightMapDensityNormal; // 0x690
	FString LightMapDensityNormalName; // 0x698
	ObjectProperty DefaultSound; // 0x6a8
	FString DefaultSoundName; // 0x6b0
	float TimeBetweenPurgingPendingKillObjects; // 0x6c0
	float TimeAsyncLoadingBlocksGarbageCollection; // 0x6c4
	float MaxTimeBetweenPurgingPendingKillObjects; // 0x6c8
	int32_t GarbageCollectionDelayMinimumMemoryMB; // 0x6cc
	ObjectProperty Client; // 0x6d0
	TArray<ObjectProperty> GamePlayers; // 0x6d8
	ObjectProperty GameViewport; // 0x6e8
	TArray<FString> DeferredCommands; // 0x6f0
	int32_t TickCycles; // 0x700
	int32_t GameCycles; // 0x704
	int32_t ClientCycles; // 0x708
	float MaxSmoothedFrameRate; // 0x70c
	float MinSmoothedFrameRate; // 0x710
	int32_t NumPawnsAllowedToBeSpawnedInAFrame; // 0x714
	FPointer RemoteControlExec; // 0x718
	FPointer MobileMaterialEmulator; // 0x720
	FColor C_WorldBox; // 0x728
	FColor C_BrushWire; // 0x72c
	FColor C_AddWire; // 0x730
	FColor C_SubtractWire; // 0x734
	FColor C_SemiSolidWire; // 0x738
	FColor C_NonSolidWire; // 0x73c
	FColor C_WireBackground; // 0x740
	FColor C_ScaleBoxHi; // 0x744
	FColor C_VolumeCollision; // 0x748
	FColor C_BSPCollision; // 0x74c
	FColor C_OrthoBackground; // 0x750
	FColor C_Volume; // 0x754
	FColor C_BrushShape; // 0x758
	float StreamingDistanceFactor; // 0x75c
	FString ScoutClassName; // 0x760
	ETransitionType TransitionType; // 0x770
	FString TransitionDescription; // 0x774
	FString TransitionGameType; // 0x784
	float MeshLODRange; // 0x794
	float CameraRotationThreshold; // 0x798
	float CameraTranslationThreshold; // 0x79c
	float PrimitiveProbablyVisibleTime; // 0x7a0
	float PercentUnoccludedRequeries; // 0x7a4
	float MaxOcclusionPixelsFraction; // 0x7a8
	int32_t MaxFluidNumVerts; // 0x7ac
	float FluidSimulationTimeLimit; // 0x7b0
	int32_t MaxParticleResize; // 0x7b4
	int32_t MaxParticleResizeWarn; // 0x7b8
	int32_t MaxParticleVertexMemory; // 0x7bc
	int32_t MaxParticleSpriteCount; // 0x7c0
	int32_t MaxParticleSubUVCount; // 0x7c4
	int32_t BeginUPTryCount; // 0x7c8
	TArray<FDropNoteInfo> PendingDroppedNotes; // 0x7cc
	FString DynamicCoverMeshComponentName; // 0x7dc
	float NetClientTicksPerSecond; // 0x7ec
	float MaxTrackedOcclusionIncrement; // 0x7f0
	float TrackedOcclusionStepSize; // 0x7f4
	FLinearColor DefaultSelectedMaterialColor; // 0x7f8
	FLinearColor DefaultHoveredMaterialColor; // 0x808
	FLinearColor SelectedMaterialColor; // 0x818
	FLinearColor UnselectedMaterialColor; // 0x828
	TArray<FName> IgnoreSimulatedFuncWarnings; // 0x838
	int32_t ScreenSaverInhibitorSemaphore; // 0x848
	FPointer ScreenSaverInhibitor; // 0x84c
	ObjectProperty GlobalTranslationContext; // 0x854
	FDouble LoadingMovieStartTime; // 0x85c
	FString MatineeCaptureName; // 0x864
	FString MatineePackageCaptureName; // 0x874
	FString VisibleLevelsForMatineeCapture; // 0x884
	int32_t MatineeCaptureFPS; // 0x894
	int32_t MatineeCaptureType; // 0x898
	ObjectProperty PeerNetDriver; // 0x89c
};

struct UCameraModifier_CameraShake : UCameraModifier {
	TArray<FCameraShakeInstance> ActiveShakes; // 0x80
	float SplitScreenShakeScale; // 0x90
};

struct ATgRespawnBeaconEntrance : ATgRespawnBeaconBase {
	ObjectProperty ExitBeacon; // 0x32c
	char r_bEntranceActive : 1; // 0x334
	char r_nPendingTeleport; // 0x338
	ERespawnBeaconChargingState c_LocalChargingState; // 0x339
	ERespawnBeaconChargingState r_ChargingState; // 0x33a
	ComponentProperty m_TeleportPSC; // 0x33c
	float m_fChargeDelay; // 0x344
	float m_fTeleportDelay; // 0x348
	float m_fPreTeleportFXTime; // 0x34c
	float s_fChargeStateTimeStamp; // 0x350
	TArray<FPendingTeleportInfo> s_PendingTeleports; // 0x354
};

struct UTgSeqAct_TgCameraShake : USequenceAction {
	ObjectProperty m_CameraShake; // 0x108
	ObjectProperty m_LocationActor; // 0x110
};

struct ADecalActorBase : AActor {
	FPointer VfTable_IEditorLinkSelectionInterface; // 0x280
	ComponentProperty Decal; // 0x288
};

struct USeqVar_ObjectVolume : USeqVar_Object {
	float LastUpdateTime; // 0xc4
	TArray<ObjectProperty> ContainedObjects; // 0xc8
	TArray<UObject*> ExcludeClassList; // 0xd8
	char bCollidingOnly : 1; // 0xe8
};

struct UUIInteractable_DailyDeal_JsonCarousel : UUIInteractable_JsonPanel {
	FPointer VfTable_IUIInteractableInterface_JsonCarousel; // 0x22c
	int32_t m_nIndex; // 0x234
	FName m_nmGamepadLeftKey; // 0x238
	FName m_nmGamepadRightKey; // 0x240
	char m_bOnImage2 : 1; // 0x248
	char m_bDisableNavigation : 1; // 0x248
	char m_bPauseAutoRotation : 1; // 0x248
	char m_bDisableAutoRotation : 1; // 0x248
	float m_fNavDotCenter; // 0x24c
	float m_fAutoRotationTime; // 0x250
	float m_fAutoRotationDelay; // 0x254
	TArray<FJsonFeatureData> m_CarouselJsonFeatureData; // 0x258
	ObjectProperty m_pDailyDealPanel; // 0x268
	ObjectProperty m_mcJsonRoot; // 0x270
	ObjectProperty m_mcImage2; // 0x278
	ObjectProperty m_mcNavControlsRoot; // 0x280
	ObjectProperty m_mcLeftButtonPrompt; // 0x288
	ObjectProperty m_mcRightButtonPrompt; // 0x290
	ObjectProperty m_pLeftArrow; // 0x298
	ObjectProperty m_pRightArrow; // 0x2a0
	TArray<ObjectProperty> m_pNavDots; // 0x2a8
	ObjectProperty m_pButton; // 0x2b8
};

struct USeqAct_GetVectorComponents : USequenceAction {
	FVector InVector; // 0x108
	float X; // 0x114
	float Y; // 0x118
	float Z; // 0x11c
};

struct UAnimNotify_Footstep : UAnimNotify {
	int32_t FootDown; // 0x68
	ObjectProperty m_PreviewSound; // 0x6c
	EFootstepTypes m_FootstepType; // 0x74
};

struct UTgControlModule : UObject {
	ObjectProperty Controller; // 0x60
	char m_bIsActive : 1; // 0x68
};

struct UTgAIUtilityFilter_AssaultRangeType : UTgAIUtilityFilter {
	ERangeType RangeType; // 0xc0
};

struct UTgSkelControlSingleBone : USkelControlSingleBone {
	char SnapStrengthFromAnimNodes : 1; // 0x100
	char m_bIsWidescreen : 1; // 0x100
	float SnapStrengthThreshold; // 0x104
	FVector m_WidescreenBoneTranslationOffset; // 0x108
	FRotator m_WidescreenBoneRotationOffset; // 0x114
	float m_WidescreenBoneScaleOffset; // 0x120
};

struct UUIScene_UIMatchLobbyTradePopup : UUIScene {
	ObjectProperty m_pAccept; // 0x1cc
	ObjectProperty m_pCancel; // 0x1d4
	ObjectProperty m_mcWaitingText; // 0x1dc
	ObjectProperty m_mcIconA; // 0x1e4
	ObjectProperty m_mcIconB; // 0x1ec
	ObjectProperty m_mcPlayerA; // 0x1f4
	ObjectProperty m_mcPlayerB; // 0x1fc
	ObjectProperty m_grButtonSelection; // 0x204
	ObjectProperty m_pCancelAction; // 0x20c
	int32_t m_nCancelCallbackHandle; // 0x214
};

struct UUISimulMedia : UTgGfxScene {
	float m_fOpportunityCheckDelay; // 0x1ec
	char m_bOpportunityFound : 1; // 0x1f0
	int32_t m_nSimulmediaActivityId; // 0x1f4
	int32_t m_nSimulmediaGoalGroupId; // 0x1f8
	int32_t m_nSimulmediaDailyCapActivityId; // 0x1fc
	int32_t m_nSimulmediaDailyCapGoalId; // 0x200
};

struct UTgAnimBlendByPaladinsCharacter_Azaan : UTgAnimBlendByPaladinsCharacter {
	ObjectProperty m_CachedAzaanPawn; // 0x544
	AzaanRetrieveState m_CurrentRetrieveState; // 0x54c
};

struct UTgAchievement_DeviceFireSecondsOneMatch : UTgAchievement {
	float m_fStartTime; // 0x94
	int32_t m_fAccumulatedDuration; // 0x98
};

struct UTgDeviceFire_RendSoul : UTgDeviceFire {
	int32_t s_nStacksConsumed; // 0x268
};

struct UTgAnimNotify_SetMICStates : UAnimNotify {
	FName MICStateName; // 0x68
	FName FromMICStateName; // 0x70
	float fInterpTime; // 0x78
	int32_t nMaterialIndex; // 0x7c
	char bApplyToChildMeshes : 1; // 0x80
};

struct ATgGame_Paladins_TeamDeathMatch : ATgGame_Paladins {
	ObjectProperty m_GITDM; // 0x868
	char m_bSpawnInputLock : 1; // 0x870
	float m_fSetupDuration; // 0x874
	TDMProgressState m_eProgressState; // 0x878
};

struct UTgCameraModule_Spectator : UTgCameraModule {
	int32_t WorldViewPitch; // 0x68
	FTPOV OldViewpoint; // 0x6c
	float RemainingBlendTime; // 0x90
	float TotalBlendTime; // 0x94
	char bCollideWorld : 1; // 0x98
};

struct UInterpTrackEvent : UInterpTrack {
	TArray<FEventTrackKey> EventTrack; // 0xa0
	char bFireEventsWhenForwards : 1; // 0xb0
	char bFireEventsWhenBackwards : 1; // 0xb0
	char bFireEventsWhenJumpingForwards : 1; // 0xb0
};

struct UTgAnimTurnInPlace_Rotator : UAnimNodeBlendBase {
	TArray<ObjectProperty> c_TurnInPlaceNodes; // 0x114
	ObjectProperty m_TgPawn; // 0x124
};

struct UMaterialExpressionStaticSwitch : UMaterialExpression {
	char DefaultValue : 1; // 0xb0
	char ExtendedCaptionDisplay : 1; // 0xb0
	FExpressionInput A; // 0xb4
	FExpressionInput B; // 0xe8
	FExpressionInput Value; // 0x11c
};

struct UTgDeviceForm_NinjaInhand : UTgDeviceForm_SpinnerWhileFiring {
	FName c_nmSocketLeft; // 0x2b8
	FName c_nmSocketRight; // 0x2c0
	float c_fHeatBuildup; // 0x2c8
	float c_fPerShotHeatBuildup; // 0x2cc
};

struct UUIComponent_BurnCard : UUIComponent_Display {
	ObjectProperty m_mcLevel; // 0x124
	ObjectProperty m_mcIcon; // 0x12c
};

struct UUIComponent_Passive : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcSubtitle; // 0x12c
	ObjectProperty m_mcFrame; // 0x134
	ObjectProperty m_mcIcon; // 0x13c
	ObjectProperty m_mcIconTexture; // 0x144
	ObjectProperty m_mcIconBackground; // 0x14c
};

struct ATgWeaponMeshActor_BuckInhand : ATgWeaponMeshActor {
	TArray<ObjectProperty> m_PawnMeshProgressiveReloadNodes; // 0x450
	TArray<ObjectProperty> m_ProgressiveReloadNodes; // 0x460
};

struct UUIDataManager : UUIDataObject {
	ObjectProperty m_CommonData; // 0x74
	ObjectProperty m_ChampionData; // 0x7c
	ObjectProperty m_Social; // 0x84
	ObjectProperty m_LeagueMgr; // 0x8c
	ObjectProperty m_Goals; // 0x94
	ObjectProperty m_Queues; // 0x9c
	ObjectProperty m_Chat; // 0xa4
	ObjectProperty m_Match; // 0xac
	ObjectProperty m_AcquisitionMgr; // 0xb4
	ObjectProperty m_DataDirector; // 0xbc
	ObjectProperty m_Loadouts; // 0xc4
	ObjectProperty m_VGSMaps; // 0xcc
	TArray<ObjectProperty> m_Data; // 0xd4
};

struct UGameCrowdBehavior_RunFromPanic : UGameCrowdAgentBehavior {
	ObjectProperty PanicFocus; // 0x9c
};

struct UUIDataLeagueManager : UUIDataObject {
	TArray<ObjectProperty> m_LeagueArray; // 0x74
	TMap<None, None> m_Leagues; // 0x84
	ObjectProperty m_EOM; // 0xcc
	ObjectProperty m_TierChange; // 0xd4
};

struct UMeshComponentFactory : UPrimitiveComponentFactory {
	TArray<ObjectProperty> Materials; // 0x64
};

struct UTgSavedMove : USavedMove {
	char m_bJumpHeld : 1; // 0x118
	char m_bUltHeld : 1; // 0x118
	char m_bJustForcedVelocity : 1; // 0x118
	char m_bOldWantsCharge : 1; // 0x118
	char m_byMoveSpeed; // 0x11c
	float m_fSimulatedModifiedMovementSpeed; // 0x120
	float m_fSimulatedModifiedGravity; // 0x124
	int32_t m_nBigTeleportCount; // 0x128
	FSavedChargeState m_SavedChargeState; // 0x12c
};

struct UTgInventoryObject_Listen_HitWithDevice : UTgInventoryObject_Listen_AbilityProcBase {
	char m_bIgnoreChildDevice : 1; // 0xcc
	char m_bAutoProcOnInhand : 1; // 0xcc
	char m_bAutoProcOnAsIfInhand : 1; // 0xcc
	char m_bSkipActiveCheck : 1; // 0xcc
	char m_bSkipStartCooldown : 1; // 0xcc
	char m_bUseAllyTargets : 1; // 0xcc
	int32_t m_nLastFireLoopInstanceId; // 0xd0
	int32_t m_nNumTimesApplied; // 0xd4
};

struct UUIComponent_OptionEntryText : UUIComponent_OptionEntryBase {
	ObjectProperty m_pTextInput; // 0x150
};

struct UTgSeqAct_SpawnProjectile : USequenceAction {
	int32_t m_nFireModeID; // 0x108
	ObjectProperty m_FireMode; // 0x10c
	char m_bSetupFireMode : 1; // 0x114
};

struct URB_Spring : UActorComponent {
	ComponentProperty Component1; // 0x88
	FName BoneName1; // 0x90
	ComponentProperty Component2; // 0x98
	FName BoneName2; // 0xa0
	int32_t SceneIndex; // 0xa8
	char bInHardware : 1; // 0xac
	char bEnableForceMassRatio : 1; // 0xac
	FPointer SpringData; // 0xb0
	float TimeSinceActivation; // 0xb8
	float MinBodyMass; // 0xbc
	float SpringSaturateDist; // 0xc0
	float SpringMaxForce; // 0xc4
	float MaxForceMassRatio; // 0xc8
	FInterpCurveFloat SpringMaxForceTimeScale; // 0xcc
	float DampSaturateVel; // 0xe0
	float DampMaxForce; // 0xe4
};

struct UInterpTrackMoveAxis : UInterpTrackFloatBase {
	EInterpMoveAxis MoveAxis; // 0xb8
	FInterpLookupTrack LookupTrack; // 0xbc
};

struct UTgSeqAct_GetTaskForceCount : USequenceAction {
	int32_t Taskforce; // 0x108
	int32_t m_nPlayerCount; // 0x10c
	int32_t m_nBotCount; // 0x110
};

struct UUIScene_UIProfile : UUIScene {
	ObjectProperty m_MatchStats; // 0x1cc
	ObjectProperty m_mcMatchStatsTabSelected[0x2]; // 0x1d4
	ObjectProperty m_mcOverview; // 0x1e4
	ObjectProperty m_grOverview; // 0x1ec
	ObjectProperty m_OverviewLevelProgress; // 0x1f4
	ObjectProperty m_mcOverviewRankedIcon; // 0x1fc
	ObjectProperty m_mcOverviewRankedSeason; // 0x204
	ObjectProperty m_mcOverviewRankedRound; // 0x20c
	ObjectProperty m_mcOverviewRankedRoundRemaining; // 0x214
	ObjectProperty m_mcOverviewLinkAccount; // 0x21c
	ObjectProperty m_pCheckRewardsButton; // 0x224
	ObjectProperty m_AccountLinkButtons; // 0x22c
	ObjectProperty m_AccountLinkTooltip; // 0x234
	ObjectProperty m_pOverviewRankedProgress; // 0x23c
	ObjectProperty m_pOverviewRankedLeaderboardButton; // 0x244
	ObjectProperty m_pOwnershipProgressList; // 0x24c
	ObjectProperty m_pOverviewBoostButton; // 0x254
	ObjectProperty m_ChampionList; // 0x25c
	ObjectProperty m_pCommendations; // 0x264
};

struct UParticleModuleLocation : UParticleModuleLocationBase {
	FRawDistributionVector StartLocation; // 0x68
	float DistributeOverNPoints; // 0x8c
	float DistributeThreshold; // 0x90
};

struct UTgAnimNodeTargeting : UTgAnimNodeBlendList {
	TG_EQUIP_POINT m_EquipPoint; // 0x168
	char m_bResetOnRelevant : 1; // 0x16c
	char m_bDoneTargeting : 1; // 0x16c
};

struct ATrigger_LOS : ATrigger {
	TArray<ObjectProperty> PCsWithLOS; // 0x290
};

struct UUIData_CustomMatch : UUIDataObject {
	int32_t m_nId; // 0x74
	int32_t m_nName; // 0x78
	int32_t m_nDraft; // 0x7c
	int32_t m_nTotal; // 0x80
	int32_t m_nPlayers; // 0x84
	int32_t m_nMaxPartySizeToJoin; // 0x88
	Fdword m_dwRegion; // 0x8c
	char m_bPrivate : 1; // 0x90
	FString m_sName; // 0x94
	FString m_sMap; // 0xa4
	FString m_sGameMode; // 0xb4
	FString m_sOwner; // 0xc4
	FString m_sQueueName; // 0xd4
	TG_GAME_TYPE m_eGameType; // 0xe4
};

struct UUIComponent_EventChallengeRegion : UUIComponent_Display {
	char m_bShowingHubPanel : 1; // 0x124
	ObjectProperty m_pHubs; // 0x128
	ObjectProperty m_pRewards; // 0x130
	ObjectProperty m_pHubPanel; // 0x138
	ObjectProperty m_mcHubText; // 0x140
	ObjectProperty m_mcRewardText; // 0x148
	ObjectProperty m_mcRewardItemText[0x3]; // 0x150
	ObjectProperty m_mcNextUnlock; // 0x168
	ObjectProperty m_mcNextUnlockText; // 0x170
	ObjectProperty m_mcNextUnlockTimeText; // 0x178
	ObjectProperty m_mcScrollTop; // 0x180
	ObjectProperty m_mcScrollBacking; // 0x188
	ObjectProperty m_mcUnlockChallengeText; // 0x190
	ObjectProperty m_mcUnlockTicketCountText; // 0x198
	ObjectProperty m_HubInputGroup; // 0x1a0
};

struct UAnimNodeFrame : UAnimObject {
	int32_t SizeX; // 0x68
	int32_t SizeY; // 0x6c
	int32_t BorderWidth; // 0x70
	char bDrawBox : 1; // 0x74
	char bFilled : 1; // 0x74
	char bTileFill : 1; // 0x74
	FColor BorderColor; // 0x78
	FColor FillColor; // 0x7c
};

struct UTgAchievement_Wanderer : UTgAchievement {
	FVector m_vLastPlayerLocation; // 0x94
	char m_bLastLocationValid : 1; // 0xa0
	float m_fResidualDistance; // 0xa4
};

struct UParticleModuleTrailSpawn : UParticleModuleTrailBase {
	ComponentProperty SpawnDistanceMap; // 0x68
	float MinSpawnVelocity; // 0x70
};

struct ATgGame_Domination : ATgGame_PointCapture {
	float m_fRespawnTime; // 0x79c
};

struct UTgDeviceFire_TheLaw : UTgDeviceFire {
	ObjectProperty m_pCachedLexWeaponMeshActor; // 0x268
};

struct UUIHudSniper : UTgGfxScene {
	KINESSA_HUD_TYPE m_eActiveKinessaHUD; // 0x1ec
	int32_t m_nAmmo; // 0x1f0
	float m_fCharge; // 0x1f4
	float m_fFrameScaleInitial; // 0x1f8
	float m_fFrameScaleOnShoot; // 0x1fc
	int32_t m_nPreviousSkinId; // 0x200
	int32_t m_nCachedSkinId; // 0x204
	int32_t m_nCachedFrameWidth; // 0x208
	int32_t m_nCachedFrameHeight; // 0x20c
	ObjectProperty m_mcPins; // 0x210
	ObjectProperty m_mcReady[0x2]; // 0x218
	ObjectProperty m_mcFrame[0x2]; // 0x228
	ObjectProperty m_mcBackground[0x2]; // 0x238
	ObjectProperty m_mcAmmoBelt; // 0x248
	ObjectProperty m_mcPin[0x4]; // 0x250
	ObjectProperty m_mcAmmo[0x6]; // 0x270
	ObjectProperty m_mcCharge[0x2]; // 0x2a0
	ObjectProperty m_mcChargeLeft[0x4]; // 0x2b0
	ObjectProperty m_mcChargeRight[0x4]; // 0x2d0
	ObjectProperty m_mcAmmoBelt_Val; // 0x2f0
	ObjectProperty m_mcAmmo_Val[0x6]; // 0x2f8
};

struct ATgDevice_DredgeQ : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
};

struct UTgDeviceForm_BunnySpiritLink : UTgDeviceForm {
	TArray<ObjectProperty> m_SimpleStanceReiInspect1p; // 0x28c
	TArray<ObjectProperty> m_SimpleStanceReiInspect3p; // 0x29c
	TArray<ObjectProperty> m_ReiSpiritLinkNodes3p; // 0x2ac
	TArray<ObjectProperty> m_ReiSpiritLinkNodes1p; // 0x2bc
};

struct ATgDevice_Hustle : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	float m_fMinSprintSpeedSq; // 0xa0c
	float m_fAllowableSprintAngle; // 0xa10
	float m_fSprintFailSafetyTime; // 0xa14
	float m_fSprintFailTimeAccumulator; // 0xa18
};

struct UParticleModuleKillHeight : UParticleModuleKillBase {
	FRawDistributionFloat Height; // 0x68
	char bAbsolute : 1; // 0x8c
	char bFloor : 1; // 0x8c
	char bApplyPSysScale : 1; // 0x8c
};

struct UUIComponent_LobbyBoosterActivation : UUIComponent_Display {
	ObjectProperty m_mcBoosterIcon; // 0x124
	ObjectProperty m_pNameVIP; // 0x12c
};

struct UForceFeedbackWaveform : UObject {
	char bIsLooping : 1; // 0x60
	TArray<FWaveformSample> Samples; // 0x64
	float WaveformFalloffStartDistance; // 0x74
	float MaxWaveformDistance; // 0x78
};

struct UTgTimerManager : UObject {
	FPointer VfTable_FTickableObject; // 0x60
	TMap<None, None> m_TimerMap; // 0x68
	char m_bActive : 1; // 0xb0
	char m_bGameWasPaused : 1; // 0xb0
};

struct UInterpTrackInstMove : UInterpTrackInst {
	FVector ResetLocation; // 0x60
	FRotator ResetRotation; // 0x6c
	FMatrix InitialTM; // 0x80
	FQuat InitialQuat; // 0xc0
};

struct UNavMeshGoal_Random : UNavMeshPathGoalEvaluator {
	int32_t MinDist; // 0x7c
	float BestRating; // 0x80
	FPointer PartialGoal; // 0x84
};

struct UUIScene_UICompetitivePopupWelcome : UUIScene {
	ObjectProperty m_pRewards; // 0x1cc
	ObjectProperty m_pOkButton; // 0x1d4
	ObjectProperty m_pInfoButton; // 0x1dc
};

struct UParticleSystemReplay : UObject {
	int32_t ClipIDNumber; // 0x60
	TArray<FParticleSystemReplayFrame> Frames; // 0x64
};

struct UUIComponent_SiteSelectEntry : UUIComponent_Display {
	ObjectProperty m_mcFlagImageStack; // 0x124
};

struct UUIComponent_Item_Card : UUIComponent_Item {
	ObjectProperty m_mcCooldown; // 0x190
	ObjectProperty m_mcChampion; // 0x198
	ObjectProperty m_mcChampionIcon; // 0x1a0
	ObjectProperty m_mcRank; // 0x1a8
	ObjectProperty m_mcRarity; // 0x1b0
	ObjectProperty m_mcProgressBack; // 0x1b8
	ObjectProperty m_pProgress; // 0x1c0
	char m_bShowChampion : 1; // 0x1c8
	int32_t m_nCardLevel; // 0x1cc
};

struct AStaticMeshCollectionActor : AStaticMeshActorBase {
	TArray<ComponentProperty> StaticMeshComponents; // 0x280
	int32_t MaxStaticMeshComponents; // 0x290
};

struct UTgAnimNodeBlendBySimpleStance : UTgAnimNodeBlendList {
	int32_t m_nCurrentStance; // 0x168
};

struct ASVehicle : AVehicle {
	ComponentProperty SimObj; // 0x628
	TArray<ComponentProperty> Wheels; // 0x630
	FVector COMOffset; // 0x640
	FVector InertiaTensorMultiplier; // 0x64c
	char bStayUpright : 1; // 0x658
	char bUseSuspensionAxis : 1; // 0x658
	char bUpdateWheelShapes : 1; // 0x658
	char bVehicleOnGround : 1; // 0x658
	char bVehicleOnWater : 1; // 0x658
	char bIsInverted : 1; // 0x658
	char bChassisTouchingGround : 1; // 0x658
	char bWasChassisTouchingGroundLastTick : 1; // 0x658
	char bCanFlip : 0; // 0x658
	char bFlipRight : 0; // 0x658
	char bIsUprighting : 0; // 0x658
	char bOutputHandbrake : 0; // 0x658
	char bHoldingDownHandbrake : 0; // 0x658
	float StayUprightRollResistAngle; // 0x65c
	float StayUprightPitchResistAngle; // 0x660
	float StayUprightStiffness; // 0x664
	float StayUprightDamping; // 0x668
	ObjectProperty StayUprightConstraintSetup; // 0x66c
	ObjectProperty StayUprightConstraintInstance; // 0x674
	float HeavySuspensionShiftPercent; // 0x67c
	float MaxSpeed; // 0x680
	float MaxAngularVelocity; // 0x684
	float TimeOffGround; // 0x688
	float UprightLiftStrength; // 0x68c
	float UprightTorqueStrength; // 0x690
	float UprightTime; // 0x694
	float UprightStartTime; // 0x698
	ComponentProperty EngineSound; // 0x69c
	ComponentProperty SquealSound; // 0x6a4
	ObjectProperty CollisionSound; // 0x6ac
	ObjectProperty EnterVehicleSound; // 0x6b4
	ObjectProperty ExitVehicleSound; // 0x6bc
	float CollisionIntervalSecs; // 0x6c4
	float SquealThreshold; // 0x6c8
	float SquealLatThreshold; // 0x6cc
	float LatAngleVolumeMult; // 0x6d0
	float EngineStartOffsetSecs; // 0x6d4
	float EngineStopOffsetSecs; // 0x6d8
	float LastCollisionSoundTime; // 0x6dc
	float OutputBrake; // 0x6e0
	float OutputGas; // 0x6e4
	float OutputSteering; // 0x6e8
	float OutputRise; // 0x6ec
	float ForwardVel; // 0x6f0
	int32_t NumPoweredWheels; // 0x6f4
	FVector BaseOffset; // 0x6f8
	float CamDist; // 0x704
	int32_t DriverViewPitch; // 0x708
	int32_t DriverViewYaw; // 0x70c
	FVehicleState VState; // 0x710
	float AngErrorAccumulator; // 0x760
	float RadialImpulseScaling; // 0x764
};

struct UTgInventoryObject_Listen_PetAbilityWhileDeployableActive : UTgInventoryObject_Listen_PetAbility {
	int32_t m_nActiveDeployableCount; // 0xc4
};

struct UUIData_TreasureRoll : UUIData {
	ObjectProperty m_pChestItem; // 0x64
	Fdword m_dwRollDelay; // 0x6c
	TArray<ObjectProperty> m_pRolledItems; // 0x70
};

struct UUIComponent_ItemRadialMenu_Icon : UUIComponent_Display {
	ObjectProperty m_mcLock; // 0x124
	ObjectProperty m_mcFrame; // 0x12c
	ObjectProperty m_mcIcon; // 0x134
	ObjectProperty m_mcKeybind; // 0x13c
};

struct UUIComponent_StreetStyleEventRewards : UUIComponent_Display {
	ObjectProperty m_mcRewardTrack; // 0x124
	ObjectProperty m_pItemPreviewStack; // 0x12c
	ObjectProperty m_pRewardItems; // 0x134
};

struct ATgDevice_NinjaRMB2 : ATgDevice_Charge {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa78
	float m_fLastStaminaPreConsumption; // 0xa80
	ObjectProperty m_CachedKoga; // 0xa84
};

struct UAnimNodeSequenceBlendByAim : UAnimNodeSequenceBlendBase {
	FVector2D Aim; // 0x1bc
	FVector2D PreviousAim; // 0x1c4
	FVector2D HorizontalRange; // 0x1cc
	FVector2D VerticalRange; // 0x1d4
	FVector2D AngleOffset; // 0x1dc
	FName AnimName_LU; // 0x1e4
	FName AnimName_LC; // 0x1ec
	FName AnimName_LD; // 0x1f4
	FName AnimName_CU; // 0x1fc
	FName AnimName_CC; // 0x204
	FName AnimName_CD; // 0x20c
	FName AnimName_RU; // 0x214
	FName AnimName_RC; // 0x21c
	FName AnimName_RD; // 0x224
};

struct AMaterialInstanceTimeVaryingActor : AActor {
	ObjectProperty MatInst; // 0x280
};

struct UPartyBeaconHost : UPartyBeacon {
	TArray<FClientBeaconConnection> Clients; // 0x98
	int32_t NumTeams; // 0xa8
	int32_t NumPlayersPerTeam; // 0xac
	int32_t NumReservations; // 0xb0
	int32_t NumConsumedReservations; // 0xb4
	TArray<FPartyReservation> Reservations; // 0xb8
	FName OnlineSessionName; // 0xc8
	int32_t ConnectionBacklog; // 0xd0
	int32_t ForceTeamNum; // 0xd4
	int32_t ReservedHostTeamNum; // 0xd8
	char bBestFitTeamAssignment : 1; // 0xdc
	EPartyBeaconHostState BeaconState; // 0xe0
	DelegateProperty __OnReservationChange__Delegate; // 0xe4
	DelegateProperty __OnReservationsFull__Delegate; // 0xf4
	DelegateProperty __OnClientCancellationReceived__Delegate; // 0x104
};

struct ATgDevice_GroverInhand : ATgDevice {
	int32_t m_nProjectilesRemaining; // 0xa04
	int32_t m_nProjectileCount; // 0xa08
	float m_fMultiProjectileDelay; // 0xa0c
};

struct UTgAIBehaviorAction_UseDevice : UTgAIBehaviorAction {
	TG_EQUIP_POINT DeviceToUse; // 0x94
	EUseDeviceAimType aimType; // 0x95
	char bContinuousFire : 1; // 0x98
	char bPayNoEnergy : 1; // 0x98
};

struct ATgPawn_Seven : ATgPawn_Character {
	ObjectProperty m_CachedLatch; // 0x3160
	float m_fMiniumHeightFromGroundForLatch; // 0x3168
};

struct APComPerformanceCaptureGame : AGameInfo {
	ObjectProperty BasePerformanceCapture; // 0x4cc
	EPComPerformanceCaptureState CurrentCaptureState; // 0x4d4
	TArray<ObjectProperty> NodesToCapture; // 0x4d8
	TArray<FPComPerformanceCaptureStatsPerNode> StatsPerNode; // 0x4e8
};

struct UTgInventoryObject : UObject {
	FInventoryData m_InventoryData; // 0x60
	int32_t m_nRefData; // 0x84
	ObjectProperty m_InvManager; // 0x88
	char m_bTemporary : 1; // 0x90
	EReplicatedState s_ReplicatedState; // 0x94
	FPointer m_pAmItem; // 0x98
	int32_t c_nNbrAcquired; // 0xa0
	float c_fTimeAcquired; // 0xa4
};

struct ATgPlayerCountVolume : AVolume {
	int32_t PlayerCountTarget; // 0x2bc
	int32_t TaskForceNumber; // 0x2c0
	int32_t MessageId; // 0x2c4
	TArray<ObjectProperty> Players; // 0x2c8
	char Enabled : 1; // 0x2d8
};

struct ATgProj_NonSimulated : ATgProjectile {
	float m_LagCompStep; // 0x450
	char m_bPerformingLagCompensation : 1; // 0x454
	char m_bProcessingLagCompedTouches : 1; // 0x454
	TArray<FLagCompedQueuedHitInfo> m_LagCompedQueuedHits; // 0x458
};

struct ATgDeploy_Reversal : ATgDeploy_Shield {
	int32_t m_nLargeMeshID; // 0x470
	ComponentProperty m_SmallMesh; // 0x474
	ComponentProperty m_LargeMesh; // 0x47c
	float r_fVengeanceDamage; // 0x484
	float r_fAccumulatedDamage; // 0x488
	float r_fMinimumDamage; // 0x48c
	ObjectProperty m_CachedPawnOwner; // 0x490
	ObjectProperty m_ReversalForm; // 0x498
};

struct UTgDeviceForm_Reversal : UTgDeviceForm {
	float m_fAccumulatedDamage; // 0x28c
	float m_fMaxChargeDamage; // 0x290
	ObjectProperty c_CameraEffect; // 0x294
	TArray<ObjectProperty> m_1pNodes; // 0x29c
	TArray<ObjectProperty> m_3pNodes; // 0x2ac
	char m_bIsAbsorbingShots : 1; // 0x2bc
};

struct UUIComponent_OwnershipProgress : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcOwnedAmt; // 0x12c
	ObjectProperty m_mcTotalAmt; // 0x134
	ObjectProperty m_mcProgress; // 0x13c
};

struct ATgPawn_SaatiDecoy : ATgPawn_Pet {
	ObjectProperty m_CachedSpawningDevice; // 0x2ef8
};

struct UTgAIBehaviorCondition_CombatTargetIsInMinotaurRadius : UTgAIBehaviorCondition {
	char bMustBeEnemy : 1; // 0x98
};

struct UMaterialExpressionPixelDepth : UMaterialExpression {
	char bNormalize : 1; // 0xb0
};

struct UTgAIBehaviorCondition_CombatTargetIsInTowerRadius : UTgAIBehaviorCondition {
	char bMustBeEnemy : 1; // 0x98
};

struct UTgNavMeshPath_AlongLane : UNavMeshPathConstraint {
	int32_t m_nLane; // 0x78
};

struct AEmitterSpawnable : AEmitter {
	ObjectProperty ParticleTemplate; // 0x294
};

struct ATgPortal : APortal {
	char bUpdateRotation : 1; // 0x2e4
	char bCheckOverlap : 1; // 0x2e4
	char bResetVelocity : 1; // 0x2e4
	char bCheckTaskForce : 1; // 0x2e4
	int32_t nTaskForce; // 0x2e8
	ObjectProperty TeleportSoundCue; // 0x2ec
	float FadeInTime; // 0x2f4
	float VolumeMultiplier; // 0x2f8
	float PitchMultiplier; // 0x2fc
};

struct UAnimNotify_PlayFaceFXAnim : UAnimNotify_Scripted {
	ObjectProperty FaceFXAnimSetRef; // 0x68
	FString GroupName; // 0x70
	FString AnimName; // 0x80
	ObjectProperty SoundCueToPlay; // 0x90
	ObjectProperty AkEventToPlay; // 0x98
	char bOverridePlayingAnim : 1; // 0xa0
	float PlayFrequency; // 0xa4
};

struct ACoverLink : ANavigationPoint {
	char GLOBAL_bUseSlotMarkers : 1; // 0x378
	char bDisabled : 1; // 0x378
	char bClaimAllSlots : 1; // 0x378
	char bAutoSort : 1; // 0x378
	char bAutoAdjust : 1; // 0x378
	char bCircular : 1; // 0x378
	char bLooped : 1; // 0x378
	char bPlayerOnly : 1; // 0x378
	char bDynamicCover : 0; // 0x378
	char bFractureOnTouch : 0; // 0x378
	char bDebug_FireLinks : 0; // 0x378
	char bDebug_ExposedLinks : 0; // 0x378
	char bDebug_CoverGen : 0; // 0x378
	char bDoAutoSlotDensityFixup : 0; // 0x378
	float LeanTraceDist; // 0x37c
	TArray<FCoverSlot> Slots; // 0x380
	TArray<FDynamicLinkInfo> DynamicLinkInfos; // 0x390
	TArray<ObjectProperty> Claims; // 0x3a0
	float InvalidateDistance; // 0x3b0
	float MaxFireLinkDist; // 0x3b4
	FVector CircularOrigin; // 0x3b8
	float CircularRadius; // 0x3c4
	float AlignDist; // 0x3c8
	float AutoCoverSlotInterval; // 0x3cc
	float StandHeight; // 0x3d0
	float MidHeight; // 0x3d4
	FVector StandingLeanOffset; // 0x3d8
	FVector CrouchLeanOffset; // 0x3e4
	FVector PopupOffset; // 0x3f0
	float SlipDist; // 0x3fc
	float TurnDist; // 0x400
	float DangerScale; // 0x404
	ObjectProperty NextCoverLink; // 0x408
	ECoverLocationDescription LocationDescription; // 0x410
};

struct ULocalMessage : UObject {
	char bIsSpecial : 1; // 0x60
	char bIsUnique : 1; // 0x60
	char bIsPartiallyUnique : 1; // 0x60
	char bIsConsoleMessage : 1; // 0x60
	char bBeep : 1; // 0x60
	char bCountInstances : 1; // 0x60
	float Lifetime; // 0x64
	FColor DrawColor; // 0x68
	float PosY; // 0x6c
	int32_t FontSize; // 0x70
};

struct UUberPostProcessEffect : UDOFBloomMotionBlurEffect {
	FVector SceneShadows; // 0xf0
	FVector SceneHighLights; // 0xfc
	FVector SceneMidTones; // 0x108
	float SceneDesaturation; // 0x114
	FVector SceneColorize; // 0x118
	ETonemapperType TonemapperType; // 0x124
	EPostProcessAAType PostProcessAAType; // 0x125
	float TonemapperRange; // 0x128
	float TonemapperToeFactor; // 0x12c
	float TonemapperScale; // 0x130
	float MotionBlurSoftEdgeKernelSize; // 0x134
	char bEnableImageGrain : 1; // 0x138
	char bScaleEffectsWithViewSize : 1; // 0x138
	char bEnableHDRTonemapper : 1; // 0x138
	float SceneImageGrainScale; // 0x13c
	float BloomWeightSmall; // 0x140
	float BloomWeightMedium; // 0x144
	float BloomWeightLarge; // 0x148
	float BloomSizeScaleSmall; // 0x14c
	float BloomSizeScaleMedium; // 0x150
	float BloomSizeScaleLarge; // 0x154
	float EdgeDetectionThreshold; // 0x158
	FLUTBlender PreviousLUTBlender; // 0x15c
	float SceneHDRTonemapperScale; // 0x180
};

struct ATgDevice_Prowl : ATgDevice_Stim {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	DelegateProperty __InterruptFiringDelegate__Delegate; // 0xa0c
};

struct UTgAnimMetaData_MICScalarParameter : UTgAnimMetaData_Keyframed {
	FName MICParameterName; // 0x80
	int32_t MaterialIndex; // 0x88
};

struct UTgInvListener_ConsecutiveInhandHits : UTgInvListener {
	TArray<FCIHStack> s_stacks; // 0xc4
	ObjectProperty s_pLastTargetHit; // 0xd4
};

struct ARB_RadialForceActor : ARigidBodyBase {
	ComponentProperty RenderComponent; // 0x280
	float ForceStrength; // 0x288
	float ForceRadius; // 0x28c
	float SwirlStrength; // 0x290
	float SpinTorque; // 0x294
	ERadialImpulseFalloff ForceFalloff; // 0x298
	ERadialForceType RadialForceMode; // 0x299
	char bForceActive : 1; // 0x29c
	char bForceApplyToCloth : 1; // 0x29c
	char bForceApplyToFluid : 1; // 0x29c
	char bForceApplyToRigidBodies : 1; // 0x29c
	char bForceApplyToProjectiles : 1; // 0x29c
	FRBCollisionChannelContainer CollideWithChannels; // 0x2a0
};

struct UTgSkelCon_YagorathSpinner : UTgSkelCon_Spinner {
	ObjectProperty m_CachedYagorath; // 0x144
};

struct UTgSkelCon_MirrorFromOtherMesh : USkelControlSingleBone {
	FName m_nmIdentifier; // 0x100
	ObjectProperty m_PawnOwner; // 0x108
	ObjectProperty m_MirrorControl; // 0x110
};

struct ATgDevice_RepulsorField : ATgDevice_ActiveAura {
	float r_fAtTheReadyRadius; // 0xa64
};

struct UDrawQuadComponent : UPrimitiveComponent {
	ObjectProperty Texture; // 0x24c
	float Width; // 0x254
	float Height; // 0x258
};

struct ANxRadialForceField : ANxForceField {
	ComponentProperty RenderComponent; // 0x2d4
	float ForceStrength; // 0x2dc
	float ForceRadius; // 0x2e0
	ERadialImpulseFalloff ForceFalloff; // 0x2e4
	FPointer LinearKernel; // 0x2e8
};

struct AInstancedFoliageActor : AActor {
	FMap_Mirror FoliageMeshes; // 0x280
	ObjectProperty SelectedMesh; // 0x2c8
	TArray<ComponentProperty> InstancedStaticMeshComponents; // 0x2d0
	int32_t StreamingSerializationVersion; // 0x2e0
	FString StreamingFilename; // 0x2e4
	FArray_Mirror StreamGroups; // 0x2f4
};

struct UUIDataPrice : UUIData {
	int32_t m_nVendorId; // 0x64
	int32_t m_nLootId; // 0x68
	int32_t m_nItemId; // 0x6c
	int32_t m_nPurchaseType; // 0x70
	int32_t m_nCurrencyType; // 0x74
	int32_t m_nQuantity; // 0x78
	int32_t m_nPrice; // 0x7c
	int32_t m_nDiscountPrice; // 0x80
	int32_t m_nOriginalPrice; // 0x84
};

struct UUIScene_UIHudSkills3P : UUIScene {
	ObjectProperty m_pAltSkillIcon[0x5]; // 0x1cc
	ObjectProperty m_pSkillIcon[0x5]; // 0x1f4
	ObjectProperty m_LexVengeance; // 0x21c
	ObjectProperty m_CorvusMark; // 0x224
	ObjectProperty m_CorvusMarkTeam; // 0x22c
	ObjectProperty m_OracleSoulCharges; // 0x234
	ObjectProperty m_CorrupterCorruptionUI; // 0x23c
	ObjectProperty m_RaumShards; // 0x244
	ObjectProperty m_mcCredits; // 0x24c
	ObjectProperty m_mcGroup; // 0x254
	char m_bUseAlternates : 1; // 0x25c
	char m_bUltimateReady : 1; // 0x25c
	char m_bThirdPersonMode : 1; // 0x25c
	int32_t m_nCredits; // 0x260
};

struct UUIComponent_EventBundleButton : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_mcLock; // 0x12c
	ObjectProperty m_pPreviewVoice; // 0x134
	ObjectProperty m_pButton; // 0x13c
};

struct UUIInteractable_JsonPanel : UUIComponent_Interactable {
	ObjectProperty m_mcHighlight; // 0x140
	ObjectProperty m_mcImage; // 0x148
	ObjectProperty m_mcTitle; // 0x150
	ObjectProperty m_mcSubtitle; // 0x158
	ObjectProperty m_mcLiveBanner; // 0x160
	ObjectProperty m_mcLiveBannerText[0x3]; // 0x168
	ObjectProperty m_pRealMoneyPrice; // 0x180
	ObjectProperty m_pCrystalPrice; // 0x188
	FJsonFeatureData m_JsonFeatureData; // 0x190
	char m_bInteractable : 1; // 0x228
};

struct UUIComponent_CompetitiveRankedDecay : UUIComponent_Display {
	ObjectProperty m_pButton; // 0x124
	ObjectProperty m_mcRankIcon; // 0x12c
};

struct USoundClass : UObject {
	FSoundClassProperties Properties; // 0x60
	TArray<FName> ChildClassNames; // 0x90
	char bIsChild : 1; // 0xa0
	TMap<None, None> EditorData; // 0xa4
};

struct UDynamicSpriteComponent : USpriteComponent {
	FInterpCurveFloat AnimatedScale; // 0x26c
	FInterpCurveLinearColor AnimatedColor; // 0x280
	FInterpCurveVector2D AnimatedPosition; // 0x294
	FVector LocationOffset; // 0x2a8
	int32_t LoopCount; // 0x2b4
};

struct ATgPlayerController : APComPlayerController {
	FPointer VfTable_ITgPaladinsController; // 0x7d8
	FPointer VfTable_ITgCallbackInterface; // 0x7e0
	FPointer VfTable_ITgSoundNotifyActorInterface; // 0x7e8
	FSZombieInfo ZombieInfo; // 0x7f0
	int32_t m_nAnnouncerSeriesStep[0x6]; // 0x844
	int32_t s_nPlayerId; // 0x85c
	FQWord s_qwNetAccessFlags; // 0x860
	int32_t r_nXp; // 0x868
	int32_t r_nCurrency; // 0x86c
	float s_fCurrencyRemainder; // 0x870
	float s_fXpRemainder; // 0x874
	float s_fCurrencyMult; // 0x878
	char r_bCanPurchaseItems : 1; // 0x87c
	char r_bAutoPurchase : 1; // 0x87c
	char r_bAutoSkillUp : 1; // 0x87c
	char r_bToggleZoom : 1; // 0x87c
	char s_bAutoBuyOnRespawn : 1; // 0x87c
	char m_bBlockVGS : 1; // 0x87c
	char s_bSentAutoKickAlert : 1; // 0x87c
	char s_bAddDeadTimeStatsTracker : 1; // 0x87c
	char c_bHUDHidden : 0; // 0x87c
	char r_bLockYawRotation : 0; // 0x87c
	char bPressingLeftMouseButton : 0; // 0x87c
	char bPressingRightMouseButton : 0; // 0x87c
	char bPressingMovementButton : 0; // 0x87c
	char bPressingReloadButton : 0; // 0x87c
	char m_bPendingReload : 0; // 0x87c
	char r_bRove : 0; // 0x87c
	char m_bNoSmoothedMovementCorrection : 0; // 0x87c
	char c_bProcessedNoSmoothNotification : 0; // 0x87c
	char s_bNoSmoothedMovementCorrectionRequested : 0; // 0x87c
	char s_bIsNoSmoothMovementCorrectionManaged : 0; // 0x87c
	char s_bClearAchievementIgnoreListsOnNextTick : 0; // 0x87c
	char bDebugProjectileLagCompensation : 0; // 0x87c
	char bDebugClientProjectileImpactVerification : 0; // 0x87c
	char c_bAssistModeSublevelLoaded : 0; // 0x87c
	char c_bAllowSpecialMaterialEffects : 0; // 0x87c
	char m_bIgnoreSilhouettes : 0; // 0x87c
	char c_bSilhouettesBlocked : 0; // 0x87c
	char m_bForceSilhouettesOnVisibleGods : 0; // 0x87c
	char m_bDetailedViewEnabled : 0; // 0x87c
	char m_bShowPlayerCircles : 0; // 0x87c
	char m_bAllowUndrawnPurchase : 0; // 0x87c
	char m_bCanHearStealthPawns : 0; // 0x87c
	char c_bShowFootstepInfoDebug : 1; // 0x880
	char m_bDetailedDeviceLogging : 1; // 0x880
	char m_bOutlineEnemies : 1; // 0x880
	char m_bOutlineFriendlies : 1; // 0x880
	char c_bEnablePathfinderGuide : 1; // 0x880
	char m_fPathfinderEnabled : 1; // 0x880
	char c_bIsPlayingFallWindSound : 1; // 0x880
	char m_bJustDidJumpDoubleTap : 1; // 0x880
	char m_bThreatSystemEnabled : 0; // 0x880
	char m_bOcclusionSystemEnabled : 0; // 0x880
	char m_bDebugThreatSystem : 0; // 0x880
	char c_bMatchAlmostWonSwitchPrimed : 0; // 0x880
	char m_IsTimeDilationInterpolating : 0; // 0x880
	char m_IsDesaturationInterpolating : 0; // 0x880
	char m_bIsTrackingAimTowardTargetLocation : 0; // 0x880
	char bForcedTimelapseRequested : 0; // 0x880
	char bForcedPlayOfGameRequested : 0; // 0x880
	char m_bRewindMoversForReplaySavedMoves : 0; // 0x880
	char m_bShowDebugRewindMovers : 0; // 0x880
	char c_bCaptureProgressAkEventPlaying : 0; // 0x880
	char m_bShowChampionOverviewTip : 0; // 0x880
	char m_bEnableUltimateAkEventUnocclusion : 0; // 0x880
	char c_bIsPlayOfTheGame : 0; // 0x880
	char m_bHideReticle : 0; // 0x880
	char m_bHideReticleAcc : 0; // 0x880
	char m_bSupportsEffectSimulation : 0; // 0x880
	char m_bForced3pOption : 0; // 0x880
	char c_bForced3pFreeCam : 0; // 0x880
	float c_fLastGoldNagTime; // 0x884
	int32_t m_nReviveBuybackCost; // 0x888
	int32_t r_nStatPoints; // 0x88c
	FFLOOD s_VGSFlood; // 0x890
	FFLOOD s_PingFlood; // 0x898
	ObjectProperty c_aLastViewTarget; // 0x8a0
	ObjectProperty m_CachedPlayerInput; // 0x8a8
	ObjectProperty m_CachedSpectatorInput; // 0x8b0
	ObjectProperty m_aHoverActor; // 0x8b8
	FVector m_vHoverLocation; // 0x8c0
	float m_fHoverActorActiveTime; // 0x8cc
	FVector m_vWorldMapLocation; // 0x8d0
	TArray<ObjectProperty> m_WorldMapTargetRepInfos; // 0x8dc
	FVector m_vWorldMouseLocation; // 0x8ec
	FVector m_vWorldMouseDirection; // 0x8f8
	float c_fTimeTillAFK; // 0x904
	float s_bAutoKickStartTime; // 0x908
	FTG_LAST_PURCHASE r_LastPurchasedItems[0x1a]; // 0x90c
	ObjectProperty s_LastPossessedPawn; // 0x9dc
	float m_fRecentLostHealth; // 0x9e4
	float m_fLastLostHealthTime; // 0x9e8
	float s_fWaitForSpawnSecs; // 0x9ec
	float c_fRespawnTime; // 0x9f0
	float m_fDeathTime; // 0x9f4
	int32_t r_bInputEnabled[0x14]; // 0x9f8
	ObjectProperty ControlModule; // 0xa48
	UTgControlModule* DefaultControlModuleClass; // 0xa50
	int32_t c_nCameraYawOffset; // 0xa58
	int32_t m_nDevicesLockingInput; // 0xa5c
	int32_t m_nDevicesLockingCamera; // 0xa60
	int32_t m_nDevicesLockingRotation; // 0xa64
	float m_fPendingReloadTime; // 0xa68
	float m_fPendingReloadMaxTime; // 0xa6c
	ObjectProperty m_EndGameFocus; // 0xa70
	float m_fLastVGS; // 0xa78
	FVector m_vLastServerCorrectOrigPos; // 0xa7c
	float s_fLastConfirmedSentSmoothedMovementTimestamp; // 0xa88
	float c_fLastRecievedNoSmoothTimestamp; // 0xa8c
	char m_byDesiredMoveSpeedReduction; // 0xa90
	TG_CAMERAPOSTURE c_eCameraPosture; // 0xa91
	EWatchOtherPlayersMode r_WatchOtherPlayer; // 0xa92
	GAME_WIN_STATE c_GameWinState; // 0xa93
	char m_bOldbRun; // 0xa94
	EHUDOverlay c_eCurrentOverlay; // 0xa95
	TG_EQUIP_POINT m_eDetailedDeviceEqp; // 0xa96
	TG_EQUIP_POINT m_LastEquipPoint; // 0xa97
	char c_LastSentClientRoll; // 0xa98
	char m_UltHeld; // 0xa99
	char m_JumpHeld; // 0xa9a
	char m_JumpHeldAlt; // 0xa9b
	char m_PerCharacterAlt; // 0xa9c
	TArray<FCameraStackInfo> c_CameraStack; // 0xaa0
	int32_t c_nNextCameraStackId; // 0xab0
	float c_fDeathCamViewKillerDuration; // 0xab4
	float m_fWatchOthersFadeToBlackCamTime; // 0xab8
	float m_fWatchOthersFadeFromBlackCamTime; // 0xabc
	TArray<ObjectProperty> s_Achievements; // 0xac0
	TArray<ObjectProperty> s_TickableAchievements; // 0xad0
	ObjectProperty c_TgAkAudio; // 0xae0
	int32_t r_nFlashProjectile[0x20]; // 0xae8
	FsSimProjectileFireInfo r_FlashProjectileEx[0x20]; // 0xb68
	int32_t r_nFirstValidProjIdx; // 0x1368
	int32_t r_nFlashSimProjIdx; // 0x136c
	int32_t c_nLastFlashSimProjIdx; // 0x1370
	int32_t r_nPerkPointsAvail; // 0x1374
	ObjectProperty c_GameTipManager; // 0x1378
	FPointer s_pCombatMessages; // 0x1380
	float s_fLastCombatMessageProcess; // 0x1388
	int32_t c_nCurrentLevel; // 0x138c
	ObjectProperty c_TutorialAnnouncer; // 0x1390
	int32_t r_TutorialBlockedClientActions; // 0x1398
	ObjectProperty c_SubtitledMessages; // 0x139c
	TArray<FDefaultAudioSwitch> c_DefaultSwitchValues; // 0x13a4
	ObjectProperty CachedPRI; // 0x13b4
	ObjectProperty m_OverlayPathMaterial; // 0x13bc
	TArray<ObjectProperty> m_HiddenPawns; // 0x13c4
	ComponentProperty c_AlertAudioComponent; // 0x13d4
	ObjectProperty c_AlertAkEvent; // 0x13dc
	float c_fDeathCamTurnToKillerInterpDuration; // 0x13e4
	float c_fDeathCamDesaturationInterpDuration; // 0x13e8
	float c_fDeathCamDesaturation; // 0x13ec
	float c_fDeathCamCanSkipDelay; // 0x13f0
	TArray<ObjectProperty> c_KismetLoadedDevices; // 0x13f4
	ObjectProperty m_PreviewCameraShake; // 0x1404
	TArray<ObjectProperty> m_CapturePoints; // 0x140c
	float m_fPathfinderStreamTime; // 0x141c
	float m_fPathfinderPulseTime; // 0x1420
	float m_fPathfinderLifetime; // 0x1424
	float m_fPathfinderSpeed; // 0x1428
	float m_fPathfinderStartDist; // 0x142c
	float c_LastSentMoveTimeStamp; // 0x1430
	FVector c_LastSentMoveAcceleration; // 0x1434
	int32_t c_LastSentMoveCompressedFlags; // 0x1440
	FVector c_LastSentClientLoc; // 0x1444
	int32_t c_LastSentView; // 0x1450
	ObjectProperty c_FallWindSoundPlay; // 0x1454
	ObjectProperty c_FallWindSoundStop; // 0x145c
	int32_t m_nKillCamTargetId; // 0x1464
	int32_t m_nKillCamTargetBackupId; // 0x1468
	float r_fServerTimeStamp; // 0x146c
	float m_fLastJumpTapTime; // 0x1470
	float m_fMaxJumpDoubleTapTime; // 0x1474
	TArray<ObjectProperty> m_PawnsWithThreatLevels; // 0x1478
	ObjectProperty m_Pathfinder; // 0x1488
	float m_fThreatCoefficientProximity; // 0x1490
	float m_fThreatCoefficientOcclusion; // 0x1494
	float m_fThreatCoefficientBinnedOcclusion; // 0x1498
	float m_fThreatCoefficientUlt; // 0x149c
	float m_fThreatCoefficientShotAt; // 0x14a0
	float m_fThreatCoefficientSeenBy; // 0x14a4
	float m_fThreatCoefficientDamaged; // 0x14a8
	float m_fThreatCoefficientFocused; // 0x14ac
	float m_fThreatCoefficientFocusTarget; // 0x14b0
	float m_fThreatCoefficientBehind; // 0x14b4
	float m_fThreatCoefficientInEffectiveRange; // 0x14b8
	float m_fThreatDecayCoefficientShotAt; // 0x14bc
	float m_fThreatDecayCoefficientSeenBy; // 0x14c0
	float m_fThreatDecayCoefficientUlt; // 0x14c4
	FString m_DebugThreatSystemChannel; // 0x14c8
	float m_fFFBDamageFloor; // 0x14d8
	float m_fFFBDamageCeiling; // 0x14dc
	float m_fFFBIntensityFloor; // 0x14e0
	float m_fFFBIntensityCeiling; // 0x14e4
	float m_fFFBDurationFloor; // 0x14e8
	float m_fFFBDurationCeiling; // 0x14ec
	ObjectProperty m_TakeDamageWaveform; // 0x14f0
	FString m_CurrentMusicEventName; // 0x14f8
	FName m_nameBuyBurnCardsTimer; // 0x1508
	FVector2D m_TimeDilationFromTo; // 0x1510
	float m_TimeDilationInterpolateSeconds; // 0x1518
	float m_TimeDilationUsedSeconds; // 0x151c
	FVector2D m_DesaturationFromTo; // 0x1520
	float m_DesaturationInterpolateSeconds; // 0x1528
	float m_DesaturationUsedSeconds; // 0x152c
	int32_t m_EnergyLastFrame; // 0x1530
	FVector m_TrackingTargetLocation; // 0x1534
	float m_fTrackingTargetMaxAimDistDiff; // 0x1540
	ObjectProperty m_RoundEndAlert; // 0x1544
	TArray<FAnnouncerEvent> m_akAnnouncerQueue; // 0x154c
	float m_fTimeToPlayQueuedAnnouncer; // 0x155c
	ObjectProperty m_CurrentDirectorMatinee; // 0x1560
	ObjectProperty m_CaptureProgressPlayAkEvent; // 0x1568
	ObjectProperty m_CaptureProgressStopAkEvent; // 0x1570
	float m_fCachedCaptureProgress; // 0x1578
	ObjectProperty m_PointGettingCapturedPlayAkEvent; // 0x157c
	int32_t m_nPointGettingCapturedPlayCount; // 0x1584
	float m_fShowChampionOverviewTipDelay; // 0x1588
	int32_t s_nRoundsIdle; // 0x158c
	float s_fIdleTimeReduction; // 0x1590
	int32_t c_nLeadingTeam; // 0x1594
	int32_t c_nLeadingTeamTicketAmount; // 0x1598
	ObjectProperty m_CallbackContainer; // 0x159c
	int32_t m_nReticleColorOverride; // 0x15a4
	FLinearColor m_cReticleColor; // 0x15a8
	float m_fAchievementPollRate; // 0x15b8
	float m_fAchievementPollElapsed; // 0x15bc
	int32_t s_nTeamMateHealMeVisibilityTest; // 0x15c0
	float c_fForced3pFOV; // 0x15c4
	float c_fForced3pFreeCamEaseOutDuration; // 0x15c8
	float c_fForced3pFreeCamEaseOutTimer; // 0x15cc
	FRotator c_rForced3pFreeCamEaseOutStartRotation; // 0x15d0
	FVector m_vLastPOVLocation; // 0x15dc
	FRotator m_rLastPOVRotation; // 0x15e8
	ObjectProperty c_ChampionTickManager; // 0x15f4
	ObjectProperty c_SoundEventsManager; // 0x15fc
	TArray<ObjectProperty> c_OccupiedMapCalloutVolumes; // 0x1604
	FString m_sLastSelectedStoreProductSKU; // 0x1614
	int32_t m_nLastSelectedStoreLootID; // 0x1624
};

struct ATgDevice_FuriaFProjSpawner : ATgDevice {
	ObjectProperty m_CachedFuriaF; // 0xa04
};

struct ATgProj_YagorathUltProj : ATgProj_Simulated {
	ObjectProperty m_YagorathUltForm; // 0x52c
};

struct UInterpTrackVisibility : UInterpTrack {
	TArray<FVisibilityTrackKey> VisibilityTrack; // 0xa0
	char bFireEventsWhenForwards : 1; // 0xb0
	char bFireEventsWhenBackwards : 1; // 0xb0
	char bFireEventsWhenJumpingForwards : 1; // 0xb0
};

struct USequenceEvent : USequenceOp {
	TArray<ObjectProperty> DuplicateEvts; // 0xec
	ObjectProperty Originator; // 0xfc
	ObjectProperty Instigator; // 0x104
	float ActivationTime; // 0x10c
	int32_t TriggerCount; // 0x110
	int32_t MaxTriggerCount; // 0x114
	float ReTriggerDelay; // 0x118
	char bEnabled : 1; // 0x11c
	char bPlayerOnly : 1; // 0x11c
	char bRegistered : 1; // 0x11c
	char bClientSideOnly : 1; // 0x11c
	char bServerAndClientSide : 1; // 0x11c
	char bHumanOnly : 1; // 0x11c
	char Priority; // 0x120
	int32_t MaxWidth; // 0x124
};

struct ATgDevice_OwlStealth : ATgDevice {
	ObjectProperty m_CachedOwl; // 0xa04
	ObjectProperty m_RoostCard; // 0xa0c
	char c_bAlreadyConsumedStealthJuice : 1; // 0xa14
};

struct UTgGameDC_Team : UTgDataChunk {
	int32_t m_nTaskForce; // 0x158
	ObjectProperty m_Members[0x5]; // 0x15c
	int32_t m_nMaxMemberCount; // 0x184
	ObjectProperty m_Guardian; // 0x188
	ObjectProperty m_Towers[0x9]; // 0x190
	ObjectProperty m_SurrenderTimer; // 0x1d8
};

struct UTgAIBehaviorCondition_IsLookingAtCombatTarget : UTgAIBehaviorCondition {
	float VisibilityAngle; // 0x98
};

struct UPath_MinDistBetweenSpecsOfType : UPathConstraint {
	float MinDistBetweenSpecTypes; // 0x6c
	FVector InitLocation; // 0x70
	UReachSpec* ReachSpecClass; // 0x7c
};

struct UInterpTrackInstDirector : UInterpTrackInst {
	ObjectProperty OldViewTarget; // 0x60
	FRenderingPerformanceOverrides OldRenderingOverrides; // 0x68
};

struct ULevelStreaming : UObject {
	FName PackageName; // 0x60
	ObjectProperty LoadedLevel; // 0x68
	FVector Offset; // 0x70
	FMatrix LevelTransform; // 0x80
	FVector OldOffset; // 0xc0
	char bIsVisible : 1; // 0xcc
	char bHasLoadRequestPending : 1; // 0xcc
	char bHasUnloadRequestPending : 1; // 0xcc
	char bShouldBeVisibleInEditor : 1; // 0xcc
	char bBoundingBoxVisible : 1; // 0xcc
	char bLocked : 1; // 0xcc
	char bIsFullyStatic : 1; // 0xcc
	char bShouldBeLoaded : 1; // 0xcc
	char bShouldBeVisible : 0; // 0xcc
	char bShouldBlockOnLoad : 0; // 0xcc
	char bDrawOnLevelStatusMap : 0; // 0xcc
	char bIsRequestingUnloadAndRemoval : 0; // 0xcc
	char bClientSideLevel : 0; // 0xcc
	FColor DrawColor; // 0xd0
	TArray<ObjectProperty> EditorStreamingVolumes; // 0xd4
	float MinTimeBetweenVolumeUnloadRequests; // 0xe4
	float LastVolumeUnloadRequestTime; // 0xe8
	ObjectProperty EditorGridVolume; // 0xec
	int32_t GridPosition[0x3]; // 0xf4
};

struct UTgSeqAct_PlayFullBodyAnim : USequenceAction {
	FName c_AnimName; // 0x108
	float c_fRate; // 0x110
	float c_fBlendInTime; // 0x114
	float c_fBlendOutTime; // 0x118
	char c_bLooping : 1; // 0x11c
	char c_bOverride : 1; // 0x11c
};

struct ATgDevice_BunnyDefense : ATgDevice {
	ObjectProperty m_CachedBunny; // 0xa04
	float m_fAoEPeriod; // 0xa0c
	float m_fAoEProcTimeRemaining; // 0xa10
	char m_bAoEPostFireOnly : 1; // 0xa14
	char m_bEnemyEffectsApplied : 1; // 0xa14
};

struct UAnimNodeBlendByProperty : UAnimNodeBlendList {
	FName PropertyName; // 0x144
	char bUseOwnersBase : 1; // 0x14c
	char bForceUpdate : 1; // 0x14c
	char bUseSpecificBlendTimes : 1; // 0x14c
	char bSynchronizeNodesInEditor : 1; // 0x14c
	FName CachedPropertyName; // 0x150
	FPointer CachedFloatProperty; // 0x158
	FPointer CachedBoolProperty; // 0x160
	FPointer CachedByteProperty; // 0x168
	ObjectProperty CachedOwner; // 0x170
	float BlendTime; // 0x178
	float FloatPropMin; // 0x17c
	float FloatPropMax; // 0x180
	float BlendToChild1Time; // 0x184
	float BlendToChild2Time; // 0x188
};

struct UMaterialExpressionPanner : UMaterialExpression {
	FExpressionInput Coordinate; // 0xb0
	FExpressionInput Time; // 0xe4
	float SpeedX; // 0x118
	float SpeedY; // 0x11c
};

struct UFogVolumeDensityComponent : UActorComponent {
	ObjectProperty FogMaterial; // 0x88
	ObjectProperty DefaultFogVolumeMaterial; // 0x90
	char bEnabled : 1; // 0x98
	char bAffectsTranslucency : 1; // 0x98
	char bOnlyAffectsTranslucency : 1; // 0x98
	char bUseViewOriginOverride : 1; // 0x98
	FLinearColor SimpleLightColor; // 0x9c
	FLinearColor ApproxFogLightColor; // 0xac
	float StartDistance; // 0xbc
	float MaxDistance; // 0xc0
	TArray<ObjectProperty> FogVolumeActors; // 0xc4
	FVector ViewOriginOverride; // 0xd4
};

struct UMaterialInstanceConstant : UMaterialInstance {
	TArray<FFontParameterValue> FontParameterValues; // 0x2f4
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x304
	TArray<FTextureParameterValue> TextureParameterValues; // 0x314
	TArray<FVectorParameterValue> VectorParameterValues; // 0x324
	TArray<FMICStateParams> StateParameters; // 0x334
};

struct UTgMenuMeshInfo : UObject {
	FLobbyMeshInfo MeshInfo; // 0x60
	TArray<ObjectProperty> Children; // 0xcc
	FName ParentSocketName; // 0xdc
	TArray<FParticleSystemInfo> AttachedParticleSystems; // 0xe4
};

struct ATgDevice_SnakeToss : ATgDevice {
	int32_t r_nAmmoCharge; // 0xa04
	ObjectProperty m_CachedInhand; // 0xa08
};

struct UTgAIBehaviorAction_MoveToDeployable : UTgAIBehaviorAction_MoveToTarget {
	int32_t DeployableId; // 0x9c
	char bMustBeEnemy : 1; // 0xa0
	char bIgnoreInsideCollision : 1; // 0xa0
	char bIgnoreTaskforce : 1; // 0xa0
};

struct UTgDeviceFire_SaatiCoinTalent : UTgDeviceFire {
	float m_fBonusShieldDamagePerc; // 0x268
};

struct UTgAIBehaviorCondition_CurrentLevel : UTgAIBehaviorCondition {
	int32_t LevelThreshold; // 0x98
};

struct ATgPawn_LanePusherRace : ATgPawn_LanePusherBase {
	float s_fTotalSplineLength; // 0x3024
	float s_fPreviousSplineLength; // 0x3028
	float r_fProgressPercent; // 0x302c
};

struct ATgCreditCache : AActor {
	char r_bActive : 1; // 0x280
	int32_t m_nValueLevel; // 0x284
	int32_t m_nCreditValue; // 0x288
	float m_fCreditCacheGainDuration; // 0x28c
	float m_fCollisionProxyRadius; // 0x290
	float m_fCollisionProxyHeight; // 0x294
	ObjectProperty m_currentCaptor; // 0x298
	ComponentProperty SMC; // 0x2a0
	ObjectProperty s_CollisionProxy; // 0x2a8
	TArray<ObjectProperty> m_touchingCharacters; // 0x2b0
};

struct ATgWeatherVolume : AVolume {
	ObjectProperty m_Template; // 0x2bc
};

struct UTgInvListener_ActiveWhileWeaponSwap : UTgInvListener {
	ObjectProperty m_CachedOwlPawn; // 0xc4
	char m_bActivateWhileInhandActive : 1; // 0xcc
	char m_bIsActive : 1; // 0xcc
};

struct USeqAct_SetLocation : USeqAct_SetSequenceVariable {
	char bSetLocation : 1; // 0x108
	char bSetRotation : 1; // 0x108
	FVector LocationValue; // 0x10c
	FRotator RotationValue; // 0x118
	ObjectProperty Target; // 0x124
};

struct UTgAnimBlendByEmote : UTgAnimNodeBlendList {
	TArray<FEmoteChildAnimInfo> m_CachedEmoteChildInfo; // 0x168
};

struct UTgBrowserManager : UPComBrowserManager {
	FString URLGold; // 0x60
	FString URLAlert; // 0x70
	FString URLStore; // 0x80
	FString URLBooster; // 0x90
	FString URLSupport; // 0xa0
	FString URLProfile; // 0xb0
	FString URLRedirect; // 0xc0
	FString URLActivateKey; // 0xd0
	FString URLCreateAccount; // 0xe0
	FString URLRecoverPassword; // 0xf0
	FString URLRecoverUsername; // 0x100
	FString URLGodPack; // 0x110
	FString URLRanked; // 0x120
	FString URLFacebookPromo; // 0x130
	FString URLTwitterPromo; // 0x140
	FString URLRecruitPromo; // 0x150
	FString URLPlayerStats; // 0x160
	FString URLTwitchSignup; // 0x170
	FString URLTwitchHelp; // 0x180
	FString URLLaunchTournament; // 0x190
	FString URLLinkAccount; // 0x1a0
	ObjectProperty m_pContainer; // 0x1b0
};

struct UUIComponent_HnHEventOverview : UUIComponent_Display {
	ObjectProperty m_grOverview; // 0x124
};

struct UUIComponent_MVP : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcName; // 0x12c
	ObjectProperty m_mcEquipableTitle; // 0x134
	ObjectProperty m_mcSubtitle; // 0x13c
	ObjectProperty m_mcIcon; // 0x144
	ObjectProperty m_mcFrame; // 0x14c
	ObjectProperty m_pPlayerName; // 0x154
	ObjectProperty m_grButtons; // 0x15c
	ObjectProperty m_mcCommendationButtonTooltip; // 0x164
	ObjectProperty m_CommendationButton; // 0x16c
	ObjectProperty m_mcCommendationPanel; // 0x174
	ObjectProperty m_CommendTeam; // 0x17c
	ObjectProperty m_CommendLead; // 0x184
	ObjectProperty m_CommendSkill; // 0x18c
	ObjectProperty m_pCommendationInputBack; // 0x194
};

struct AFluidInfluenceActor : AActor {
	ComponentProperty FlowDirection; // 0x280
	ComponentProperty Sprite; // 0x288
	ComponentProperty InfluenceComponent; // 0x290
	char bActive : 1; // 0x298
	char bToggled : 1; // 0x298
};

struct ATgDevice_AuraPerTarget : ATgDevice_PassiveAura {
	int32_t m_nAppliedStacks; // 0xa64
};

struct UTgDeviceForm_RiderMovement : UTgDeviceForm {
	FVector m_vActiveCameraOffset; // 0x28c
	ObjectProperty m_CachedRider; // 0x298
};

struct UUIComponent_EndOfMatchLobbyChallenges : UUIComponent_Display {
	ObjectProperty m_pChallenges; // 0x124
	ObjectProperty m_grChallenges; // 0x12c
};

struct UUIScene_UIHeader : UUIScene {
	ObjectProperty m_pBack; // 0x1cc
	ObjectProperty m_pTabs; // 0x1d4
};

struct UParticleModuleMeshRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionVector LifeMultiplier; // 0x68
};

struct USeqAct_AkSetRTPCValue : USeqAct_Latent {
	FString Param; // 0x120
	float Value; // 0x130
	char Running : 1; // 0x134
};

struct ATgDeployable : AActor {
	FPointer VfTable_ITgSkinnableInterface; // 0x280
	FPointer VfTable_ITgCombatActor; // 0x288
	FPointer VfTable_ITgObserver_ViewTargetChanged; // 0x290
	FPointer VfTable_ITgInteractiveAudio; // 0x298
	FPointer VfTable_ITgGrabSource; // 0x2a0
	FPointer VfTable_ITgGameplayCurveOwner; // 0x2a8
	FPointer VfTable_ITgSoundNotifyActorInterface; // 0x2b0
	int32_t r_nDeployableId; // 0x2b8
	int32_t r_nSkinId; // 0x2bc
	int32_t r_nWeaponSkinId; // 0x2c0
	char c_bInitialized : 1; // 0x2c4
	char m_bConsumedOnFire : 1; // 0x2c4
	char m_bFireOnDeploy : 1; // 0x2c4
	char m_bHasAlreadyFiredOnce : 1; // 0x2c4
	char m_bInstantFire : 1; // 0x2c4
	char m_bRequiresEffectManager : 1; // 0x2c4
	char c_bMinimapOnlyOwnerSee : 1; // 0x2c4
	char r_bTakeDamage : 1; // 0x2c4
	char m_bInDestroyedState : 0; // 0x2c4
	char s_bDestroyedThisTick : 0; // 0x2c4
	char m_bIsDeployed : 0; // 0x2c4
	char m_bDestroyedAtEndOfPersistTime : 0; // 0x2c4
	char c_bEnemyMatLoaded : 0; // 0x2c4
	char m_bApplyDeviceDamageBuffs : 0; // 0x2c4
	char s_bAlwaysRelevantExceptRoyale : 0; // 0x2c4
	char m_bProtectedFromGameModeDestroy : 0; // 0x2c4
	char m_bProtectedFromOwnerDisconnectDestroy : 0; // 0x2c4
	char m_bDestroyOnOwnerDeathFlag : 0; // 0x2c4
	char m_bAdjustMeshToGround : 0; // 0x2c4
	char m_bIsVisionBlocker : 0; // 0x2c4
	char m_bIsAIVisionBlocker : 0; // 0x2c4
	char m_bIgnoreStealthInterrupts : 0; // 0x2c4
	char m_bIsNeutralObscuringDeployable : 0; // 0x2c4
	char m_bMovableProjBlocker : 0; // 0x2c4
	char m_bShouldRagdoll : 0; // 0x2c4
	char m_bDeviceUsedIsHandDevice : 0; // 0x2c4
	char m_bUseSilhouettesOverride : 0; // 0x2c4
	char m_bOverrideTargetComponentHeight : 0; // 0x2c4
	char r_bInitialIsEnemy : 0; // 0x2c4
	char c_bIsSpectateToggleActive : 0; // 0x2c4
	char m_bUseRangeFalloffCurve : 0; // 0x2c4
	int32_t m_nDeployableType; // 0x2c8
	int32_t r_nPhysicalType; // 0x2cc
	int32_t r_nHealth; // 0x2d0
	ObjectProperty r_EffectManager; // 0x2d4
	TArray<ObjectProperty> m_EquipEffects; // 0x2dc
	TArray<FTgPropertyInstance> s_Properties; // 0x2ec
	ObjectProperty c_Form; // 0x2fc
	ObjectProperty c_FireFx; // 0x304
	ComponentProperty c_Mesh; // 0x30c
	FVector r_vFlashLocation; // 0x314
	char r_nFlashCount; // 0x320
	char r_nFlashFireCount; // 0x321
	char c_nPreviousFlashFireCount; // 0x322
	DeployableOverlayIcon m_InitHUDOverlayIcon; // 0x323
	DeployableOverlayState m_InitHUDOverlayState; // 0x324
	ObjectProperty m_FireMode; // 0x328
	float m_fStateTime; // 0x330
	ObjectProperty s_DeployFactory; // 0x334
	int32_t m_TimeCreated; // 0x33c
	ComponentProperty m_DestroyedMesh; // 0x340
	float m_fLifeAfterDeathSecs; // 0x348
	int32_t r_nReplicateDestroyIt; // 0x34c
	TScriptInterface<Class> m_AsInteractiveAudio; // 0x350
	TArray<ObjectProperty> s_GrabbedTargets; // 0x360
	float s_fPersistTime; // 0x370
	ComponentProperty LightEnvironment; // 0x374
	float r_fTimeToDeploySecs; // 0x37c
	float r_fInitDeployTime; // 0x380
	float m_fCurrentDeployPercentage; // 0x384
	float r_fCurrentDeployTime; // 0x388
	float m_fDamagedDuringDeploy; // 0x38c
	ObjectProperty s_SpawnerDeviceMode; // 0x390
	ObjectProperty r_Owner; // 0x398
	int32_t r_nOwnerFireMode; // 0x3a0
	float AlwaysRelevantDistanceSquared; // 0x3a4
	float s_fMaxRelevancyDistanceSquared; // 0x3a8
	float m_fMaxAimAssistStacks; // 0x3ac
	TArray<ObjectProperty> m_DeployableAnimNodes; // 0x3b0
	FVector r_vRagdollDir; // 0x3c0
	float m_fCachedGroundProximity; // 0x3cc
	float m_fCachedGroundProximityTimestamp; // 0x3d0
	FCollisionSettingsDeployable m_CollisionSettings; // 0x3d4
	TArray<ObjectProperty> m_PawnsBasedOnMe; // 0x3e8
	ObjectProperty m_SilhouetteManager; // 0x3f8
	int32_t m_nInitHUDOverlayDisplayMask; // 0x400
	float m_InitHUDOverlayEnemyViewDist; // 0x404
	float m_fHUDOverlayZOffset; // 0x408
	FPointer m_pAmSkin; // 0x40c
	FPointer m_pAmWeaponSkin; // 0x414
	ComponentProperty m_TargetComponent; // 0x41c
	float m_TargetCollisionTraceDistance; // 0x424
	float m_fOverriddenTargetComponentHeight; // 0x428
	ObjectProperty m_LastDamager; // 0x42c
	int32_t m_LastDamagerTimeStamp; // 0x434
	ObjectProperty r_DRI; // 0x438
	ObjectProperty c_LocalPC; // 0x440
	AActor* m_DRIClass; // 0x448
	float m_fDisableSpectatorFxTime; // 0x450
	float m_fDisableSpectatorFxTimeRemaining; // 0x454
	ObjectProperty m_AkActorUnoccluded; // 0x458
	float m_fHazardDistance; // 0x460
	float m_fHazardRating; // 0x464
	int32_t r_nCachedMaxHealth; // 0x468
};

struct UTgManifestGroup : UObject {
	FPointer VfTable_FCallbackEventDevice; // 0x60
	TArray<FPointer> m_ManifestList; // 0x68
	TArray<ObjectProperty> m_pObjectReferencers; // 0x78
	ObjectProperty m_OwningObject; // 0x88
	char m_bIsInCallback : 1; // 0x90
	char m_bInitialized : 1; // 0x90
	char m_bResetOnMapLoad : 1; // 0x90
	EAsyncLoadPriority m_AsyncLoadPriority; // 0x94
	DelegateProperty __OnAllManifestsLoaded__Delegate; // 0x98
};

struct UTgAnimNotify_AkEvent : UAnimNotify_AkEvent {
	TArray<FPSE_SkinAk> m_SkinOverrideList; // 0x7c
};

struct ATgPawn_Tower_FA : ATgPawn_Tower {
	ETowerType m_TowerType; // 0x2f28
	FRotator r_InitialOrientation; // 0x2f2c
	ComponentProperty c_AimVisibilityMesh; // 0x2f38
};

struct ATgProj_Vine : ATgProj_Simulated {
	ObjectProperty m_VineForm; // 0x52c
};

struct ATgDevice_DragonFlight : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedImaniAvatar; // 0xa0c
	float m_fAccumulatedDeviation; // 0xa14
	float m_fDeviationMeanLifetime; // 0xa18
	EFlightThrottle m_eCurrentThrottle; // 0xa1c
	float m_fDragonForcedUpwardAcceleration; // 0xa20
	float m_fDragonPreferredClearance; // 0xa24
	char c_bLastInterceptedAscend : 1; // 0xa28
	char m_bWantsAscend : 1; // 0xa28
	char m_bWantsDescend : 1; // 0xa28
};

struct UTgDeviceForm_RaumRev : UTgDeviceForm {
	float m_fRevUpSpinDuration; // 0x28c
};

struct ADebugCameraController : AGamePlayerController {
	FName PrimaryKey; // 0x77c
	FName SecondaryKey; // 0x784
	FName UnselectKey; // 0x78c
	char bShowSelectedInfo : 1; // 0x794
	char bDrawDebugText : 1; // 0x794
	char bIsFrozenRendering : 1; // 0x794
	AHUD* HUDClass; // 0x798
	ObjectProperty OriginalControllerRef; // 0x7a0
	ObjectProperty OriginalPlayer; // 0x7a8
	ComponentProperty DrawFrustum; // 0x7b0
	ObjectProperty SelectedActor; // 0x7b8
	ComponentProperty SelectedComponent; // 0x7c0
};

struct ATgPawn_Oracle : ATgPawn_Character {
	ObjectProperty r_RestoreSoulTarget; // 0x3160
	FVector r_RestoreSoulHitOffset; // 0x3168
	ObjectProperty r_RestoreSoulSecondaryTargets[0x4]; // 0x3174
	ObjectProperty c_RestoreSoulSecondaryBeams[0x4]; // 0x3194
	char r_bRestoreSoulActive : 1; // 0x31b4
	char r_bHasAgonyTalent : 1; // 0x31b4
	int32_t r_SoulStackTargetPawnId[0xa]; // 0x31b8
	int32_t r_SoulStackTargetCount[0xa]; // 0x31e0
	int32_t c_CachedSoulStackTargetCount[0xa]; // 0x3208
	FVector c_InterpRestoreSoulHitOffset; // 0x3230
	float c_fRestoreSoulHitOffsetInterpSpeed; // 0x323c
	float m_fFrictionMultiplier; // 0x3240
	int32_t m_nStackAddedVictimFxId; // 0x3244
	int32_t m_nStackAddedSourceFxId; // 0x3248
	int32_t m_nMaxStacksVictimFxId; // 0x324c
	int32_t m_nMaxStacksSourceFxId; // 0x3250
	int32_t r_nSoulCollectorEffectGroupId; // 0x3254
	int32_t r_nSoulCollectorStacksApplied; // 0x3258
};

struct UUIComponent_HnHEventHome : UUIComponent_Display {
	ObjectProperty m_pDrogozBundle; // 0x124
	ObjectProperty m_pMaeveBundle; // 0x12c
	ObjectProperty m_pTyraBundle; // 0x134
	ObjectProperty m_pAndroBundle; // 0x13c
	TArray<ObjectProperty> m_pUnownedBundles; // 0x144
	ObjectProperty m_pBundles; // 0x154
	ObjectProperty m_mcProgress; // 0x15c
	ObjectProperty m_mcProgressIcon; // 0x164
	ObjectProperty m_mcProgressOrbs[0x3]; // 0x16c
	ObjectProperty m_mcBundlePanel; // 0x184
	ObjectProperty m_mcBundlePanelTitle; // 0x18c
	ObjectProperty m_mcPurchaseTF; // 0x194
	ObjectProperty m_pBundleItems; // 0x19c
	ObjectProperty m_pPurchaseButton; // 0x1a4
	ObjectProperty m_pPurchaseButtonCurr; // 0x1ac
	ObjectProperty m_mcBonusPanel; // 0x1b4
	ObjectProperty m_mcBonusPanelTitle; // 0x1bc
	ObjectProperty m_mcPurchaseAllTF; // 0x1c4
	ObjectProperty m_pBonusItems; // 0x1cc
	ObjectProperty m_pLoadingFrame; // 0x1d4
	ObjectProperty m_pPurchaseAllButton; // 0x1dc
	ObjectProperty m_pPurchaseAllButtonCurr; // 0x1e4
	ObjectProperty m_pPurchaseAction; // 0x1ec
	ObjectProperty m_pPurchaseAllAction; // 0x1f4
};

struct USeqCond_CompareBool : USequenceCondition {
	char bResult : 1; // 0xec
};

struct UGFxObject : UObject {
	FPointer VfTable_FCallbackEventDevice; // 0x60
	int32_t Value[0xc]; // 0x68
	int32_t m_nIndex; // 0x98
	int32_t m_nFunction; // 0x9c
	char m_bMuteSound : 1; // 0xa0
	char m_bUseCachedDisplayInfo : 1; // 0xa0
	char m_bForceHidden : 1; // 0xa0
	char m_bWantsVisible : 1; // 0xa0
	char m_bHasCallbacksBound : 1; // 0xa0
	float m_fAnimSize; // 0xa4
	float m_fOrigX; // 0xa8
	float m_fOrigY; // 0xac
	float m_fOrigWidth; // 0xb0
	float m_fOrigHeight; // 0xb4
	float m_fOrigScaleX; // 0xb8
	float m_fOrigScaleY; // 0xbc
	FName m_DebugName; // 0xc0
	FASDisplayInfo m_CachedDisplayInfo; // 0xc8
	TArray<FGFxWidgetBinding> SubWidgetBindings; // 0xf4
};

struct UUIComponent_PreviewRotator : UUIComponent_Interactable {
	char m_bHovering : 1; // 0x140
	char m_bRotating : 1; // 0x140
	float m_fPreviousPosX; // 0x144
	float m_fRotationFactor; // 0x148
	ObjectProperty m_LeftPressInputAction; // 0x14c
	ObjectProperty m_LeftReleaseInputAction; // 0x154
};

struct UUIComponent_LoadoutSubscene : UUIComponent_Display {
	ObjectProperty m_grGroup; // 0x124
	ObjectProperty m_List; // 0x12c
	UUIComponent_Display* m_ButtonClass; // 0x134
	int32_t m_nLoadoutSlot; // 0x13c
	char m_bHasDefaultDataItem : 1; // 0x140
	char m_bPreviewCamera : 1; // 0x140
	char m_bFullBackground : 1; // 0x140
	FString m_sButtonName; // 0x144
	int32_t m_nButtonCount; // 0x154
	int32_t m_nButtonsPerRow; // 0x158
	int32_t m_nOnDataCallbackHandle; // 0x15c
	ObjectProperty m_pRotator; // 0x160
};

struct UNetDriver : USubsystem {
	float ConnectionTimeout; // 0x9c
	float InitialConnectTimeout; // 0xa0
	float P2PConnectionTimeout; // 0xa4
	float InitialHandshakeTimeout; // 0xa8
	float KeepAliveTime; // 0xac
	float RelevantTimeout; // 0xb0
	float SpawnPrioritySeconds; // 0xb4
	float ServerTravelPause; // 0xb8
	int32_t MaxClientRate; // 0xc0
	int32_t MaxInternetClientRate; // 0xc4
	int32_t NetServerMaxTickRate; // 0xc8
	char bClampListenServerTickRate : 1; // 0xd0
	char AllowDownloads : 1; // 0xd4
	char AllowPeerConnections : 1; // 0xd8
	char AllowPeerVoice : 1; // 0xdc
	int32_t MaxDownloadSize; // 0x100
	TArray<FString> DownloadManagers; // 0x104
	FString NetConnectionClassName; // 0x1b0
	FString PeerNetConnectionClassName; // 0x1c8
};

struct UOnlineGameSearch : USettings {
	int32_t MaxSearchResults; // 0xa0
	FLocalizedStringSetting Query; // 0xa4
	char bIsLanQuery : 1; // 0xb0
	char bUsesArbitration : 1; // 0xb0
	char bIsSearchInProgress : 1; // 0xb0
	UOnlineGameSettings* GameSettingsClass; // 0xb4
	TArray<FOnlineGameSearchResult> Results; // 0xbc
	FOverrideSkill ManualSkillOverride; // 0xcc
	TArray<FNamedObjectProperty> NamedProperties; // 0x100
	FOnlineGameSearchQuery FilterQuery; // 0x110
	FString AdditionalSearchCriteria; // 0x130
	int32_t PingBucketSize; // 0x140
	int32_t NumPingProbes; // 0x144
	int32_t MaxPingBytes; // 0x148
	FString SessionTemplateName; // 0x14c
};

struct USeqEvent_ParticleEvent : USequenceEvent {
	EParticleEventOutputType EventType; // 0x128
	FVector EventPosition; // 0x12c
	float EventEmitterTime; // 0x138
	FVector EventVelocity; // 0x13c
	float EventParticleTime; // 0x148
	FVector EventNormal; // 0x14c
	char UseRelfectedImpactVector : 1; // 0x158
};

struct UInterpTrackInstAkEvent : UInterpTrackInst {
	float LastUpdatePosition; // 0x60
};

struct ATgRespawnBeaconExit : ATgRespawnBeaconBase {
	char m_bChangesYaw : 1; // 0x32c
	char c_bHiddenToLocalPlayer : 1; // 0x32c
	float m_fPercHealthPerSec; // 0x330
	float m_fHealthRegenLockoutTime; // 0x334
	int32_t r_nRespawnTime; // 0x338
	float m_fTimeUntilHealTick; // 0x33c
	FRotator m_rInitialRot; // 0x340
	FVector m_vInitialPos; // 0x34c
	ObjectProperty r_CarrierRepInfo; // 0x358
	ObjectProperty m_SpawnPointOverride; // 0x360
	ObjectProperty r_CurrentVisibilityVolumes[0x2]; // 0x368
	ERespawnBeaconActiveState c_LocalActiveState; // 0x378
	ERespawnBeaconActiveState r_ActiveState; // 0x379
	char r_nPlayTakeHit; // 0x37a
	TArray<ObjectProperty> m_Entrances; // 0x37c
	TArray<DelegateProperty> m_CarriedDel; // 0x38c
	TArray<DelegateProperty> m_DestroyedDel; // 0x39c
	TArray<DelegateProperty> m_DeployingDel; // 0x3ac
	TArray<DelegateProperty> m_ActiveDel; // 0x3bc
	FVector r_nDeathLocation; // 0x3cc
	ObjectProperty m_LastDamager; // 0x3d8
	DelegateProperty __BeaconStateChanged__Delegate; // 0x3e0
};

struct UForceFieldShapeBox : UForceFieldShape {
	ComponentProperty Shape; // 0x60
};

struct ATgRepInfo_Game : AGameReplicationInfo {
	TArray<FGraphData> m_GraphData; // 0x2e8
	FGraphData r_LastDataPoint; // 0x2f8
	float m_GraphUpdateWaitTime; // 0x304
	TG_GAME_TYPE r_GameType; // 0x308
	EHUDType r_eHUDType; // 0x309
	INITIALIZEABLE_BOOL r_eTalentsEnabled; // 0x30a
	MissionTimerState r_nMissionTimerState; // 0x30b
	GameTimerState r_eGameTimerState; // 0x30c
	MissionTimerState r_nRoundLimitTimerState; // 0x30d
	MissionTimerState r_nSecondaryTimerState; // 0x30e
	char r_nLastRoundAttacker; // 0x30f
	char r_nLastRoundWinner; // 0x310
	EFlagState r_FlagState[0x2]; // 0x311
	EGameEnvironmentRule r_GameEnvironmentRule; // 0x313
	EGameRespawnRule r_GameRespawnRule; // 0x314
	EGameMode r_GameMode; // 0x315
	ENotifySound r_eMusicEvent; // 0x316
	AbyssalEchoActiveSTatus r_eAbyssalEchoActive; // 0x317
	char r_bIsMission : 1; // 0x318
	char r_bGameHasSetup : 1; // 0x318
	char r_bGameHasEnded : 1; // 0x318
	char r_bCanPurchaseMasterRiding : 1; // 0x318
	char r_bAllowSpawnGuardDuringDeviceFire : 1; // 0x318
	char r_bLoadoutSelectionEnabled : 1; // 0x318
	char r_bBlockCreditGain : 1; // 0x318
	char r_bBlockEnergyGain : 1; // 0x318
	char r_bDisablePlayerMovement : 0; // 0x318
	char r_bOvertime : 0; // 0x318
	char r_bCapturePointOvertime : 0; // 0x318
	char r_bLimitBurnCardsToOnePerCategory : 0; // 0x318
	char r_bRoundEnding : 0; // 0x318
	char r_bFadeOutAtRoundEnd : 0; // 0x318
	char r_bIntroPlayed : 0; // 0x318
	char r_bUsePointsMode : 0; // 0x318
	char r_bUltimatesLocked : 0; // 0x318
	char r_bCanSpoolUlt : 0; // 0x318
	char r_bAimAssistEnabled : 0; // 0x318
	char r_bSuddenDeath : 0; // 0x318
	char r_bCanPurchaseItemsWhileDead : 0; // 0x318
	char r_bSuppressLoadoutMenu : 0; // 0x318
	char r_bSuppressItemMenu : 0; // 0x318
	char r_bEnableDistanceFOW : 0; // 0x318
	char r_bSpawnGatesOpen : 0; // 0x318
	char r_bAttackersSpawnGatesOpen : 0; // 0x318
	char r_bDefendersSpawnGatesOpen : 0; // 0x318
	char r_bForwardProgress : 0; // 0x318
	char r_bServerFlagSprint : 0; // 0x318
	char r_bServerFlagMinimapTeamVisibility : 0; // 0x318
	char r_bForce3P : 0; // 0x318
	char r_bForce1P : 0; // 0x318
	char r_bForceOutOfCombatSprint : 1; // 0x31c
	char r_bAutoMelee : 1; // 0x31c
	char r_bShowProjectileProximityDistance : 1; // 0x31c
	char r_bDisableProjectileProximityDistance : 1; // 0x31c
	char r_bShowHeadMesh : 1; // 0x31c
	char r_bUseInstantFireMeshTrace : 1; // 0x31c
	char r_bAllowWeaponLagPrediction : 1; // 0x31c
	char r_bSiegeEngineRequiresAlliesToMove : 1; // 0x31c
	char r_bSiegeEngineMovementPaused : 0; // 0x31c
	char r_bSiegeEngineMovementPausedAfterDamagingGate : 0; // 0x31c
	char r_bFogConverging : 0; // 0x31c
	char r_bFogEnded : 0; // 0x31c
	char r_bCheckpoint1Reached : 0; // 0x31c
	char r_bCheckpoint2Reached : 0; // 0x31c
	char r_bEnableHeadshots : 0; // 0x31c
	char r_bAllowPlayerMountingInSpawnRoom : 0; // 0x31c
	char r_bAllowPlayerMountingAlways : 0; // 0x31c
	char r_bKillCamEnabled : 0; // 0x31c
	char r_bAttackersKillCamEnabled : 0; // 0x31c
	char r_bDefendersKillCamEnabled : 0; // 0x31c
	char r_bBlockKillCam : 0; // 0x31c
	char r_bIsFirstRound : 0; // 0x31c
	char r_bSpawnGatesOpenedAtLeastOnce : 0; // 0x31c
	char r_bDisableMusicEvents : 0; // 0x31c
	char r_bCapturePointAlert : 0; // 0x31c
	char r_bCapturePointSpawned : 0; // 0x31c
	char r_bTF1DamagedEcho : 0; // 0x31c
	char r_bTF2DamagedEcho : 0; // 0x31c
	char r_bEchoDied : 0; // 0x31c
	char c_bAbyssalEchoSpawningIn : 0; // 0x31c
	int32_t r_nEventTalentVendorId; // 0x320
	int32_t r_nEventDeckVendorId; // 0x324
	float r_fMissionRemainingTime; // 0x328
	int32_t r_nMissionTimerStateChange; // 0x32c
	float r_fMissionTime; // 0x330
	float c_fMissionTime; // 0x334
	float c_fMissionTimeSeconds; // 0x338
	float c_fAIBotDelaySeconds; // 0x33c
	float r_fRoundLimitElapsed; // 0x340
	float r_fRoundLimitDuration; // 0x344
	float r_fSecondaryRemainingTime; // 0x348
	int32_t r_nSecondaryTimerStateChange; // 0x34c
	float r_fSecondaryTime; // 0x350
	float c_fSecondaryMissionTime; // 0x354
	float c_fSecondaryMissionTimeSeconds; // 0x358
	float r_fCapturePointOvertimeStartDuration; // 0x35c
	int32_t r_nCapturePointOvertimeStateChange; // 0x360
	float r_fPayloadOvertimeStartDuration; // 0x364
	int32_t r_nPayloadOvertimeStateChange; // 0x368
	float r_fTF1PayloadPushDistance; // 0x36c
	int32_t r_nPurchaseTime; // 0x370
	float m_fPurchaseTimer; // 0x374
	int32_t r_nEnergyChargeDeviceDisabled; // 0x378
	int32_t r_nAutoHealingDisabled; // 0x37c
	int32_t r_nGlobalItemPurchaseOverride; // 0x380
	int32_t r_nGlobalLoadoutChangeOverride; // 0x384
	float r_fCooldownReduction; // 0x388
	float r_fUltChargeRate; // 0x38c
	ObjectProperty r_AttackingTaskForce; // 0x390
	ObjectProperty r_CapturingTaskForce; // 0x398
	int32_t r_nChaosRemainingAttackDefendTime; // 0x3a0
	ObjectProperty r_Winner; // 0x3a4
	float r_fPhysicsThreshold; // 0x3ac
	FString r_sQueueName; // 0x3b0
	int32_t r_nPlayOfTheGamePawnId; // 0x3c0
	int32_t r_nPlayOfTheGameMapLane; // 0x3c4
	float r_fPlayOfTheGameTimeStamp; // 0x3c8
	ObjectProperty c_PlayOfTheGameCamera; // 0x3cc
	TArray<ObjectProperty> m_Deployables; // 0x3d4
	TArray<ObjectProperty> m_Projectiles; // 0x3e4
	TArray<ObjectProperty> m_Destructibles; // 0x3f4
	TArray<ObjectProperty> m_DRIArray; // 0x404
	TArray<ObjectProperty> m_CPRIArray; // 0x414
	TArray<ObjectProperty> m_CapturePoints; // 0x424
	ObjectProperty r_pHHGate; // 0x434
	TArray<ObjectProperty> m_MovableProjBlockers; // 0x43c
	int32_t r_nCurrentCheckpoint[0x2]; // 0x44c
	int32_t c_nNextClientOnlyProjectileInstanceId; // 0x454
	ObjectProperty r_LanePusher; // 0x458
	ObjectProperty r_LanePusher1; // 0x460
	ObjectProperty r_LanePusher2; // 0x468
	ObjectProperty r_SquadTarget1; // 0x470
	ObjectProperty r_SquadTarget2; // 0x478
	float r_fLastSquadTargetUpdate1; // 0x480
	float r_fLastSquadTargetUpdate2; // 0x484
	float r_fSpeedScale; // 0x488
	float r_fPayloadProgressPercent; // 0x48c
	float r_fCheckpoint1Percent; // 0x490
	float r_fCheckpoint2Percent; // 0x494
	float r_fServerFlagDamageMultiplier; // 0x498
	float r_fServerFlagGroundSpeedModifier; // 0x49c
	float r_fServerFlagAutoHealingMultiplier; // 0x4a0
	ObjectProperty r_pSiegeWallTF1[0x3]; // 0x4a4
	ObjectProperty r_pSiegeWallTF2[0x3]; // 0x4bc
	float r_fFogDensity; // 0x4d4
	float r_fFogStartDistance; // 0x4d8
	float r_fFogObscureDistance; // 0x4dc
	ObjectProperty c_Fog; // 0x4e0
	int32_t r_nPersistentTextID; // 0x4e8
	int32_t r_nAlertTextID; // 0x4ec
	int32_t r_nAlertIncrement; // 0x4f0
	int32_t r_nRemainingObjectiveTime; // 0x4f4
	int32_t r_nTotalObjectiveTime; // 0x4f8
	float r_fPlayerViewDistance; // 0x4fc
	float r_fVisibilityVolumeViewDistance; // 0x500
	float r_fPushTimer; // 0x504
	float r_fWeaponMaxLagCompensation; // 0x508
	float m_fVaultImmuneToSiegeEngineHealth; // 0x50c
	float r_fConvergeDistance; // 0x510
	float r_fConvergeStartDistance; // 0x514
	float r_fFogConvergeInterval; // 0x518
	int32_t r_nTaskForcePushSuccessful; // 0x51c
	int32_t r_nTaskForceDefenseSuccessful; // 0x520
	int32_t r_nMapLane; // 0x524
	float r_fGlobalFrictionFalling; // 0x528
	float r_fGlobalFrictionFlying; // 0x52c
	int32_t r_nVideoPathID; // 0x530
	int32_t r_nTargetPhaseTicketCount; // 0x534
	FBotDifficultyDebugData r_DifficultyDebugData; // 0x538
	int32_t r_nAbyssalEchoTimer; // 0x59c
	float c_fAbyssalEchoTimer; // 0x5a0
	int32_t r_nAbyssalEchoTimerTotal; // 0x5a4
	int32_t r_nAbyssalEchoBotId; // 0x5a8
	ObjectProperty r_AbyssalEcho; // 0x5ac
	ObjectProperty c_AbyssalEchoMIC; // 0x5b4
	float c_fAbyssalEchoMICFadeInDuration; // 0x5bc
	float c_fAbyssalEchoMICFadeOutDuration; // 0x5c0
	float c_fAbyssalEchoMICTimer; // 0x5c4
};

struct UTgAnimNodeMountSync : UAnimNodeBlendBase {
	ObjectProperty m_TgP; // 0x114
	TArray<FName> m_nmSyncGroupNames; // 0x11c
};

struct UTgControlModule_StunDisoriented : UTgControlModule_Stunned {
	int32_t m_nInitialYaw; // 0xcc
	int32_t m_nTargetYaw; // 0xd0
	float m_fInterpTime; // 0xd4
	float m_fRemainingInterpTime; // 0xd8
};

struct UTgSeqEvent_TaskForceScoreUpdated : USequenceEvent {
	int32_t DefenderTaskForce; // 0x128
	int32_t currentScore; // 0x12c
};

struct UUIScene_UIPopupRealMoneyPurchase : UUIScene {
	float m_fDisplayHeight; // 0x1cc
	int32_t m_nScrollOffset; // 0x1d0
	int32_t m_nMaxScrollOffset; // 0x1d4
	ObjectProperty m_mcTitle; // 0x1d8
	ObjectProperty m_mcSubtitle; // 0x1e0
	ObjectProperty m_mcScrollingTF; // 0x1e8
	ObjectProperty m_mcScrollUpArrow; // 0x1f0
	ObjectProperty m_mcScrollDownArrow; // 0x1f8
	ObjectProperty m_DLCPackDisplay; // 0x200
	ObjectProperty m_GemPackDisplay; // 0x208
};

struct UUIScene_UIStore : UUIScene {
	int32_t m_nSprayPreviewId; // 0x1cc
	int32_t m_nDeathStampPreviewId; // 0x1d0
	Fdword m_dwVendorRequestId; // 0x1d4
	TArray<ObjectProperty> m_RegularChestData; // 0x1d8
	TArray<ObjectProperty> m_TencentChestData; // 0x1e8
	ObjectProperty m_mcCrystalsPrompt; // 0x1f8
	ObjectProperty m_pCrystalsPromptKey; // 0x200
	ObjectProperty m_pCrystalsButton; // 0x208
	ObjectProperty m_pHiddenDLC; // 0x210
	ObjectProperty m_pDLC; // 0x218
	ObjectProperty m_pChests; // 0x220
	ObjectProperty m_pAccount; // 0x228
	ObjectProperty m_pBountyItems; // 0x230
	ObjectProperty m_pEngagementItems; // 0x238
	ObjectProperty m_pRotator; // 0x240
	ObjectProperty m_pBuyCrystalsAction; // 0x248
	ObjectProperty m_pSprayMesh; // 0x250
	TArray<ObjectProperty> m_SprayMaterial; // 0x258
	ObjectProperty m_SprayManifestGroup; // 0x268
	ObjectProperty m_DeathStampManifestGroup; // 0x270
};

struct ATgPawn_Darklord : ATgPawn_Character {
	char m_bUseWhirlZoom : 1; // 0x3160
};

struct ATgDevice_ImaniLMB1 : ATgDevice {
	ObjectProperty m_CachedImani; // 0xa04
	FVector m_vProjectileSpawnOffset2; // 0xa0c
	char m_bFireLeftHand : 1; // 0xa18
	char m_bClearCasting : 1; // 0xa18
	float c_fLastFireTimestamp; // 0xa1c
	float c_fTimeToRelaxHands; // 0xa20
	float m_fClearcastManaConversionLockoutTime; // 0xa24
};

struct ATgCollisionProxy_SpectatorActionListener : ATgCollisionProxy_Cylinder {
	DelegateProperty __ProxyDeviceOnStartFire__Delegate; // 0x2bc
};

struct UMaterialExpressionConstant : UMaterialExpression {
	float R; // 0xb0
};

struct USpeedTreeComponentFactory : UPrimitiveComponentFactory {
	ComponentProperty SpeedTreeComponent; // 0x64
};

struct UTgDeviceForm_WeaponSwap : UTgDeviceForm {
	TArray<ObjectProperty> m_PistolScale1p; // 0x28c
	TArray<ObjectProperty> m_PistolScale3p; // 0x29c
	TArray<ObjectProperty> m_RifleScale1p; // 0x2ac
	TArray<ObjectProperty> m_RifleScale3p; // 0x2bc
};

struct UGFxAction_SetCaptureKeys : USequenceAction {
	ObjectProperty Movie; // 0x108
	TArray<FName> CaptureKeys; // 0x110
};

struct UTextureRenderTarget2D : UTextureRenderTarget {
	int32_t SizeX; // 0x108
	int32_t SizeY; // 0x10c
	EPixelFormat Format; // 0x110
	TextureAddress AddressX; // 0x111
	TextureAddress AddressY; // 0x112
	FLinearColor ClearColor; // 0x114
	char bForceLinearGamma : 1; // 0x124
};

struct UTgAIBehaviorAction_GroupUp : UTgAIBehaviorAction_MoveToTarget {
	TG_EQUIP_POINT DeviceSlot; // 0x9c
	float MinDistance; // 0xa0
	float MaxDistance; // 0xa4
};

struct UTgCustomCharacterComponent : UActorComponent {
	TArray<ObjectProperty> m_SourceMeshList; // 0x88
	TArray<FCompositeTextureType> m_CompositeTextures; // 0x98
	int32_t m_nCompositeTextureSizeX; // 0xa8
	int32_t m_nCompositeTextureSizeY; // 0xac
	TArray<FCompositePartInfo> m_CompositeParts; // 0xb0
	TArray<ObjectProperty> m_CompositeFxList; // 0xc0
};

struct ATgDevice_PoisonBolts : ATgDevice {
	ObjectProperty m_CachedInhand; // 0xa04
};

struct UTgDeviceFire_MirrorDamageToHeal : UTgDeviceFire {
	float m_fHealAmount; // 0x268
};

struct UTgAIBehaviorCondition_GameType : UTgAIBehaviorCondition {
	TG_GAME_TYPE GameType; // 0x98
};

struct UGameplayEventsWriterBase : UGameplayEvents {
	ObjectProperty Game; // 0x1c0
};

struct UTgInventoryObject_Listen_MirrorDamageToHealBlock : UTgInvListener {
	ObjectProperty m_CachedFiremode; // 0xc4
};

struct UUIComponent_PlayCustom : UUIComponent_Display {
	float m_fLastRefreshTimeSeconds; // 0x124
	UICustomGameState m_eState; // 0x128
	TArray<ObjectProperty> m_FilteredCustomMapQueues; // 0x12c
	TArray<ObjectProperty> m_FilteredCustomGames; // 0x13c
	TArray<ObjectProperty> m_RawCustomMapQueues; // 0x14c
	TArray<ObjectProperty> m_RawCustomGames; // 0x15c
	ObjectProperty m_mcGames; // 0x16c
	ObjectProperty m_pGamesList; // 0x174
	ObjectProperty m_pGamesCreateButton; // 0x17c
	ObjectProperty m_pGamesRefreshButton; // 0x184
	ObjectProperty m_pRegionDropdown; // 0x18c
	ObjectProperty m_grGameList; // 0x194
	ObjectProperty m_pGamesCreateAction; // 0x19c
	ObjectProperty m_pGamesRefreshAction; // 0x1a4
	ObjectProperty m_pGamesRegionAction; // 0x1ac
	ObjectProperty m_mcCreate; // 0x1b4
	ObjectProperty m_mcCreateMapMode; // 0x1bc
	ObjectProperty m_pCreateMapModeTabs; // 0x1c4
	ObjectProperty m_pCreateMapModeMaps; // 0x1cc
	ObjectProperty m_mcCreateSettings; // 0x1d4
	ObjectProperty m_pCreateSettingsMap; // 0x1dc
	ObjectProperty m_pCreateSettingsDoneButton; // 0x1e4
	ObjectProperty m_pCreateSettingsCancelButton; // 0x1ec
	ObjectProperty m_pCreateSettingsName; // 0x1f4
	ObjectProperty m_pCreateSettingsPass; // 0x1fc
	ObjectProperty m_pCreateSettingsRegion; // 0x204
	ObjectProperty m_pCreateSettingsTeamSize; // 0x20c
	ObjectProperty m_pCreateSettingsDraftMode; // 0x214
	ObjectProperty m_pCreateSettingsSpectate; // 0x21c
	ObjectProperty m_pCreateSettingsSpectatePass; // 0x224
	ObjectProperty m_pCreateSettingsAllow3p; // 0x22c
	ObjectProperty m_grCreateSettings; // 0x234
	ObjectProperty m_pCreateSettingsDoneAction; // 0x23c
	ObjectProperty m_mcLobby; // 0x244
	ObjectProperty m_mcLobbyName; // 0x24c
	ObjectProperty m_mcLobbyTeamSize; // 0x254
	ObjectProperty m_mcLobbyDraftMode; // 0x25c
	ObjectProperty m_mcLobbyRegion; // 0x264
	ObjectProperty m_mcLobbySpectate; // 0x26c
	ObjectProperty m_mcLobbyStarting; // 0x274
	ObjectProperty m_pLobbyMap; // 0x27c
	ObjectProperty m_pLobbyRedPlayers; // 0x284
	ObjectProperty m_pLobbyBluePlayers; // 0x28c
	ObjectProperty m_pLobbyCancelButton; // 0x294
	ObjectProperty m_pLobbyDoneButton; // 0x29c
	ObjectProperty m_pLobbyAddBotButton; // 0x2a4
	ObjectProperty m_grLobby; // 0x2ac
	ObjectProperty m_pLobbyKickPlayerAction; // 0x2b4
	ObjectProperty m_mcPopup; // 0x2bc
	ObjectProperty m_mcPopupTitle; // 0x2c4
	ObjectProperty m_mcPopupSubtitle; // 0x2cc
	ObjectProperty m_pPopupInput; // 0x2d4
	ObjectProperty m_pPopupDoneButton; // 0x2dc
	ObjectProperty m_pPopupCancelButton; // 0x2e4
	ObjectProperty m_grPopup; // 0x2ec
};

struct UUIComponent_ChallengeGoal : UUIComponent_Display {
	ObjectProperty m_pProgress; // 0x124
	ObjectProperty m_mcTexture; // 0x12c
	ObjectProperty m_mcTF0; // 0x134
	ObjectProperty m_mcCheckmark; // 0x13c
};

struct UUIChatTab : UUIChatScene {
	int32_t m_nIdentity; // 0x28c
	int32_t m_nOutputCount; // 0x290
	int32_t m_nAutoThreshold; // 0x294
	char m_bOpen : 1; // 0x298
	char m_bCanChat : 1; // 0x298
	char m_bCanScroll : 1; // 0x298
	char m_bPrevInputState : 1; // 0x298
	char m_bPlayNotifySound : 1; // 0x298
	ObjectProperty m_mcClose; // 0x29c
	ObjectProperty m_mcMinimize; // 0x2a4
	ObjectProperty m_mcOpen; // 0x2ac
	ObjectProperty m_mcOpenTF; // 0x2b4
	ObjectProperty m_mcOpenFrame; // 0x2bc
	ObjectProperty m_mcOpenButton; // 0x2c4
	ObjectProperty m_mcOpenButtonTF; // 0x2cc
	ObjectProperty m_mcOpenButtonEdge; // 0x2d4
	ObjectProperty m_mcOpenButtonMask; // 0x2dc
	ObjectProperty m_mcBuffer; // 0x2e4
	ObjectProperty m_mcButton; // 0x2ec
	ObjectProperty m_mcButtonTF; // 0x2f4
	ObjectProperty m_mcButtonEdge; // 0x2fc
	ObjectProperty m_mcButtonMask; // 0x304
	ObjectProperty m_mcButtonHighlight; // 0x30c
	ObjectProperty m_mcNotify; // 0x314
	ObjectProperty m_mcScroll; // 0x31c
	ObjectProperty m_mcInputBtn; // 0x324
	ObjectProperty m_mcOutput[0x4]; // 0x32c
	ObjectProperty m_mcOutputIcon[0x4]; // 0x34c
	ObjectProperty m_pCommandList; // 0x36c
	ObjectProperty m_AkChatSound; // 0x374
	ObjectProperty m_AkNewTabSound; // 0x37c
	int32_t m_nChatAutoCloseTime; // 0x384
	FQWord m_nLastMessageTime; // 0x388
};

struct UDistributionVector : UComponent {
	FPointer VfTable_FCurveEdInterface; // 0x70
	char bCanBeBaked : 1; // 0x78
	char bIsDirty : 1; // 0x78
};

struct UMcpServiceBase : UObject {
	FString McpConfigClassName; // 0x60
	ObjectProperty McpConfig; // 0x70
};

struct UUIComponent_Button_LoadoutMusicPack : UUIComponent_Display {
	ObjectProperty m_Play; // 0x124
	ObjectProperty m_mcMusicIcon; // 0x12c
	ObjectProperty m_mcMusicIconRarity; // 0x134
	ObjectProperty m_mcMusicIconTexture; // 0x13c
	ObjectProperty m_mcEquipped; // 0x144
	ObjectProperty m_mcName; // 0x14c
};

struct UParticleModuleEventReceiverSpawn : UParticleModuleEventReceiverBase {
	FRawDistributionFloat SpawnCount; // 0x74
	char bUseParticleTime : 1; // 0x98
	char bUsePSysLocation : 1; // 0x98
	char bInheritVelocity : 1; // 0x98
	FRawDistributionVector InheritVelocityScale; // 0x9c
};

struct UUIScene_UIEndOfMatchLobby : UUIScene {
	ObjectProperty m_pHome; // 0x1cc
	ObjectProperty m_pPlayAgain; // 0x1d4
	ObjectProperty m_pPrevArrow; // 0x1dc
	ObjectProperty m_pNextArrow; // 0x1e4
	ObjectProperty m_pRewards; // 0x1ec
	ObjectProperty m_pChallenges; // 0x1f4
	ObjectProperty m_pTrials; // 0x1fc
	ObjectProperty m_pQuests; // 0x204
	ObjectProperty m_pBestClass; // 0x20c
	ObjectProperty m_pScoreboard; // 0x214
	ObjectProperty m_pPlayAgainAction; // 0x21c
	float m_fRejoinQueueTimer; // 0x224
	int32_t m_nRejoinQueueTimerCBHandle; // 0x228
	float m_fRejoinQueueTime; // 0x22c
};

struct UTgSeqAct_SetMissionTime : USequenceAction {
	float m_fMissionTimeSecs; // 0x108
	float m_fIncrementSecs; // 0x10c
	float m_fMissionTimeRemaining; // 0x110
};

struct UUIInteractable_NavPanel : UUIComponent_Interactable {
	ObjectProperty m_mcHighlight; // 0x140
	ObjectProperty m_mcTitle; // 0x148
	ObjectProperty m_mcBattlePassCTA; // 0x150
	ObjectProperty m_mcLoadoutCTA; // 0x158
	ObjectProperty m_mcDailyRewardCTA; // 0x160
	ObjectProperty m_mcSaleCTA; // 0x168
	ObjectProperty m_pCTA; // 0x170
	ObjectProperty m_mcLoading; // 0x178
};

struct UInterpTrackMove : UInterpTrack {
	FInterpCurveVector PosTrack; // 0xa0
	FInterpCurveVector EulerTrack; // 0xb4
	FInterpLookupTrack LookupTrack; // 0xc8
	FName LookAtGroupName; // 0xd8
	float LinCurveTension; // 0xe0
	float AngCurveTension; // 0xe4
	char bUseQuatInterpolation : 1; // 0xe8
	char bShowArrowAtKeys : 1; // 0xe8
	char bDisableMovement : 1; // 0xe8
	char bShowTranslationOnCurveEd : 1; // 0xe8
	char bShowRotationOnCurveEd : 1; // 0xe8
	char bHide3DTrack : 1; // 0xe8
	char bUseRawActorTMforRelativeToInitial : 1; // 0xe8
	EInterpTrackMoveFrame MoveFrame; // 0xec
	EInterpTrackMoveRotMode RotMode; // 0xed
};

struct UPlatformInterfaceBase : UObject {
	TArray<FDelegateArray> AllDelegates; // 0x60
	DelegateProperty __PlatformInterfaceDelegate__Delegate; // 0x70
};

struct ATgDevice_Defiance : ATgDevice {
	ObjectProperty m_CachedAndroxusInhand; // 0xa04
};

struct ATgPawn_Stoker : ATgPawn_Viktor {
	FVector m_vCurrentWallRunNormal; // 0x31a8
	char m_bIsWallRunning : 1; // 0x31b4
	char r_bWantsWallRun : 1; // 0x31b4
	char m_bHasDoubleJumped : 1; // 0x31b4
	float m_fWallMagnetMovePerSec; // 0x31b8
	float m_fWallRunStickinessDuration; // 0x31bc
	float m_fWallRunStickinessTimer; // 0x31c0
	float m_fWallRunLockoutJumpDuration; // 0x31c4
	float m_fWallRunLockoutJumpTimer; // 0x31c8
	float m_fWallJumpZSpeed; // 0x31cc
	float m_fDoubleJumpZSpeed; // 0x31d0
	float m_fNewWallAllowableRunAngle; // 0x31d4
	float m_fWallRunTime; // 0x31d8
};

struct ATgDevice_HammerSlam : ATgDevice {
	FVector m_vFireLoc; // 0xa04
	FVector m_vFireAim; // 0xa10
	TArray<ObjectProperty> m_ProjectileHits; // 0xa1c
	ObjectProperty m_pAzaan; // 0xa2c
	char m_bWasAboveThreshold : 1; // 0xa34
};

struct UTgSeqAct_PushMatinee : USeqAct_Interp {
	float m_fCheckpoint1Time; // 0x21c
	float m_fCheckpoint2Time; // 0x220
	int32_t m_nDefenderTaskForce; // 0x224
};

struct UUIData_CustomGameManager : UUIData {
	FString sName; // 0x64
	FString sDesc; // 0x74
	int32_t nIcon; // 0x84
};

struct UUIComponent_FuriaHolyWrathBar : UUIComponent_Display {
	ObjectProperty m_mcChargePctMask; // 0x124
	ObjectProperty m_mcChargingFlash; // 0x12c
	ObjectProperty m_mcChargePctTip; // 0x134
	ObjectProperty m_mcWrathTierBackground; // 0x13c
	ObjectProperty m_CurrentViewFuria; // 0x144
	float m_fPrevWrathAmt; // 0x14c
	float m_fPrevWrathTier; // 0x150
	int32_t m_nWrathChangeDir; // 0x154
	char m_bHideOnGamepad : 1; // 0x158
	char m_bHideOnKeyboard : 1; // 0x158
	char m_bIsActive : 1; // 0x158
	float m_fKeyboardTranslation; // 0x15c
};

struct ATgDevice_RaumRevUp : ATgDevice {
	ObjectProperty m_CachedRaum; // 0xa04
};

struct ATgDestructible : ASkeletalMeshActor {
	ObjectProperty r_EffectManager; // 0x2e8
	int32_t r_nMaxHealth; // 0x2f0
	char m_bDisplayHealth : 1; // 0x2f4
	char m_bDestroyed : 1; // 0x2f4
	char m_bInitialized : 1; // 0x2f4
	char m_bFogOfWarBlocker : 1; // 0x2f4
	char m_bOneDirectional : 1; // 0x2f4
	int32_t m_nPhysicalType; // 0x2f8
	char m_nTaskForce; // 0x2fc
	int32_t r_nHealth; // 0x300
	int32_t r_nActorInstanceId; // 0x304
};

struct UTgAIBehaviorCondition_IsWithinCombatDistance : UTgAIBehaviorCondition {
	char bSubtractTargetPawnRadius : 1; // 0x98
	float DistanceThresholdPercent; // 0x9c
	TG_EQUIP_POINT DeviceSlot; // 0xa0
};

struct UUIComponent_EndTimesEventQuests : UUIComponent_Display {
	ObjectProperty m_mcQuestExpireTF; // 0x124
	ObjectProperty m_pQuests; // 0x12c
	ObjectProperty m_pLeftArrow; // 0x134
	ObjectProperty m_pRightArrow; // 0x13c
	ObjectProperty m_pPlayPanel; // 0x144
	ObjectProperty m_pOwnedCurrency; // 0x14c
	ObjectProperty m_grInput; // 0x154
};

struct UAnimNotify : UObject {
	char ShouldDeferIssue : 1; // 0x60
	EDetailMode DetailMode; // 0x64
};

struct UTgAIUtilityFilter_CapturePoint : UTgAIUtilityFilter {
	float DistanceCutoff; // 0xc0
};

struct UMcpManagedValueManager : UMcpManagedValueManagerBase {
	FString CreateSaveSlotUrl; // 0xc8
	FString ReadSaveSlotUrl; // 0xd8
	FString UpdateValueUrl; // 0xe8
	FString DeleteValueUrl; // 0xf8
	TArray<FManagedValueSaveSlot> SaveSlots; // 0x108
	TArray<FSaveSlotRequestState> CreateSaveSlotRequests; // 0x118
	TArray<FSaveSlotRequestState> ReadSaveSlotRequests; // 0x128
	TArray<FValueRequestState> UpdateValueRequests; // 0x138
	TArray<FValueRequestState> DeleteValueRequests; // 0x148
};

struct UTgSeqAct_TutorialHighlighter : USequenceAction {
	eTutorialHighlighterElement GameUIElement; // 0x108
};

struct ATgPawn_Kinessa : ATgPawn_Character {
	float m_fPreviousPitchMin; // 0x3160
	float m_fPreviousPitchMax; // 0x3164
	FVector r_vHyperTargetEndLocation; // 0x3168
	FVector r_vHyperShotEndLocation; // 0x3174
	char m_bPendingMovementPenaltyOnLanded : 1; // 0x3180
	char r_bIsZoomed : 1; // 0x3180
	char m_bIsInInhandPostFire : 1; // 0x3180
	char c_bHeadHunterFiring : 1; // 0x3180
	char r_bTeleportOverlayActive : 1; // 0x3180
	float m_fScopedSpeedModifier; // 0x3184
	float m_fZoomChargeTimestamp; // 0x3188
	float r_fFullChargeDelay; // 0x318c
	float r_fTeleportOverlayMaxStrength; // 0x3190
	float c_fTeleportOverlayStrength; // 0x3194
	float r_fTeleportOverlayUpRate; // 0x3198
	float r_fTeleportOverlayDownRate; // 0x319c
};

struct UUIData_SpecialEvent : UUIData_Quest {
	Fdword m_dwCount; // 0x9c
	Fdword m_dwCompleteCount; // 0xa0
	Fdword m_dwLootTableItemId; // 0xa4
	Fdword m_dwEndSeconds; // 0xa8
	Fdword m_dwNameMsgId; // 0xac
	Fdword m_dwDescMsgId; // 0xb0
	Fdword m_dwIconId; // 0xb4
	Fdword m_dwGoalId; // 0xb8
	Fdword m_dwGoalActivityType; // 0xbc
};

struct UUIScene_UITalents : UUIScene {
	ObjectProperty m_pTalents; // 0x1cc
	ObjectProperty m_pBlocker; // 0x1d4
};

struct UTgAIBehaviorAction_SelectCombatTargetsTarget : UTgAIBehaviorAction {
	char bGodsOnly : 1; // 0x94
};

struct UUIComponent_MatchLobbyRoleIndicator : UUIComponent_Display {
	ObjectProperty m_mcActive; // 0x124
	ObjectProperty m_mcInactive; // 0x12c
	EArchetypes m_eArchetype; // 0x134
	char m_bIsActive : 1; // 0x138
};

struct UUIInteractable_Button_GamepadPrompt : UUIComponent {
	ObjectProperty m_pButton; // 0x118
	ObjectProperty m_mcPrompt; // 0x120
	int32_t m_nOptionCBHandle; // 0x128
};

struct AFogVolumeDensityInfo : AInfo {
	ComponentProperty DensityComponent; // 0x280
	ComponentProperty AutomaticMeshComponent; // 0x288
	char bEnabled : 1; // 0x290
};

struct UInterpTrackLinearColorBase : UInterpTrack {
	FInterpCurveLinearColor LinearColorTrack; // 0xa0
	float CurveTension; // 0xb4
};

struct ANxGenericForceFieldCapsule : ANxGenericForceField {
	ComponentProperty RenderComponent; // 0x374
	float CapsuleHeight; // 0x37c
	float CapsuleRadius; // 0x380
};

struct ATgDevice_LongbowInhand : ATgDevice {
	ObjectProperty m_CachedLongbow; // 0xa04
	float s_fLastFireHoldPct; // 0xa0c
	float m_fFireReleasePercent; // 0xa10
	float m_fImpalerReticleAnimationTimer; // 0xa14
	float m_fReticleReleaseAnimationDuration; // 0xa18
	float m_fImpalerReticleFadeInDuration; // 0xa1c
	float m_fImpalerReticleFadeOutDuration; // 0xa20
	float m_fImpalerReticleGrowth; // 0xa24
	FVector m_vProjectileSpawnOffsetPlanted; // 0xa28
};

struct UTgDeviceForm_YagoTravel : UTgDeviceForm_SpinnerWhileFiring {
	TArray<ObjectProperty> m_SimpleStanceTravelForm1P; // 0x2b8
	TArray<ObjectProperty> m_SimpleStanceTravelForm3P; // 0x2c8
};

struct USeqVar_RandomFloat : USeqVar_Float {
	float Min; // 0xa4
	float Max; // 0xa8
};

struct ATgPawn_Halloween_Vivian : ATgPawn_Churchill {
	float r_fShieldRotation; // 0x31b4
	float m_fShieldOffset; // 0x31b8
	float m_fShieldRotation; // 0x31bc
	float m_fShieldRotationRate; // 0x31c0
	float c_fShieldRotationError; // 0x31c4
	float c_fShieldRotationErrorCorrectionRate; // 0x31c8
	ObjectProperty m_CachedShieldDevice; // 0x31cc
};

struct UTgData_Notifications : UTgDataObject {
	TArray<ObjectProperty> m_Notifications; // 0xc0
};

struct UUIComponent_CalendarEventOverview : UUIComponent_Display {
	ObjectProperty m_grOverview; // 0x124
};

struct UUIComponent_EndOfMatchLobbyRewards : UUIComponent_Display {
	ObjectProperty m_mcCurrencies; // 0x124
	ObjectProperty m_mcMaxGold; // 0x12c
	ObjectProperty m_pGoldCount; // 0x134
	ObjectProperty m_pEventCurrencyCount; // 0x13c
	ObjectProperty m_pRewardPanels; // 0x144
	ObjectProperty m_pAccoladeList; // 0x14c
	ObjectProperty m_pToggleDetailsAction; // 0x154
	ObjectProperty m_grRewards; // 0x15c
};

struct UDOFBloomMotionBlurEffect : UDOFAndBloomEffect {
	float MaxVelocity; // 0xdc
	float MotionBlurAmount; // 0xe0
	char FullMotionBlur : 1; // 0xe4
	float CameraRotationThreshold; // 0xe8
	float CameraTranslationThreshold; // 0xec
};

struct UParticleModuleSizeScaleOverDensity : UParticleModuleSizeBase {
	FRawDistributionVector SizeScaleOverDensity; // 0x68
};

struct UUIData_LeaderboardPlayer : UUIData {
	FString sName; // 0x64
	FQWord qwPortalUserId; // 0x74
	float fRank; // 0x7c
	int32_t nLevel; // 0x80
	int32_t nWins; // 0x84
	int32_t nLosses; // 0x88
	int32_t nPerk; // 0x8c
	int32_t nRegion; // 0x90
	int32_t nTitle; // 0x94
	int32_t nPosition; // 0x98
	ObjectProperty pChampion; // 0x9c
};

struct UUIScene_UIFooterGamepad : UUIScene {
	FFooterOption m_Option[0x8]; // 0x1cc
	char m_bFrozen : 1; // 0x3ec
	TArray<int32_t> m_CachedInputGamepadKeys; // 0x3f0
	TArray<FString> m_CachedInputDisplay; // 0x400
};

struct UTranslationContext : UObject {
	TArray<ObjectProperty> TranslatorTags; // 0x60
};

struct UTgPlayerInput : UPComPlayerInput {
	ObjectProperty c_TgPC; // 0x2f8
	char c_bASKeyCapture : 1; // 0x300
	char c_bASSpecKeyCapture : 1; // 0x300
	char c_bMiniMapPinging : 1; // 0x300
	char c_bAutoRun : 1; // 0x300
	char GyroAimAssist : 1; // 0x300
	char bEnableAimAssist : 1; // 0x300
	float GamepadSensitivityX; // 0x304
	float GamepadSensitivityY; // 0x308
	float GyroSensitivityX; // 0x30c
	float GyroSensitivityY; // 0x310
	float GyroTuningConstant; // 0x314
	float fScopeSensitivity; // 0x318
	float m_fMinScopeSensitivityMult; // 0x31c
	float m_fMaxScopeSensitivityMult; // 0x320
	float m_fSecondsBetweenMixedInputAllowed; // 0x324
	int32_t nAimAccelerationSet; // 0x328
	int32_t nAimAccelerationBoost; // 0x32c
	float fTurnSpeedAccelAmt; // 0x330
	float fLookUpSpeedAccelAmt; // 0x334
	int32_t nAimAccelerationAlgorithm; // 0x338
	int32_t nInnerDeadZoneSize; // 0x33c
	int32_t nOuterDeadZoneSize; // 0x340
	ObjectProperty BestAimAssistTarget; // 0x344
	float fAimAssistMultiTargetMult; // 0x34c
	float m_fStacksRequiredForMultiTarget; // 0x350
	float m_fAimAssistMultiTargetMaxMult; // 0x354
	ObjectProperty m_AimAssistCurves; // 0x358
	TArray<FAimAssistTargetWeight> m_AimAssistTargets; // 0x360
	FAimAssistTargetWeightVars TargetWeightVars; // 0x370
	DelegateProperty __OnRawInputKey__Delegate; // 0x38c
	DelegateProperty __OnInputAxis__Delegate; // 0x39c
	DelegateProperty __OnInputChar__Delegate; // 0x3ac
};

struct UOnlineProfileSettings : UOnlinePlayerStorage {
	TArray<int32_t> ProfileSettingIds; // 0x94
	TArray<FOnlineProfileSetting> DefaultSettings; // 0xa4
	TArray<FIdToStringMapping> OwnerMappings; // 0xb4
};

struct UMaterialExpressionFontSampleParameter : UMaterialExpressionFontSample {
	FName ParameterName; // 0xbc
	FGuid ExpressionGUID; // 0xc4
	FName Group; // 0xd4
};

struct UTgPhysicalMaterialProperty : UPhysicalMaterialPropertyBase {
	FName MaterialType; // 0x60
};

struct UTgSeqAct_SetUIClock : USequenceAction {
	char ShowAlarmTexture : 1; // 0x108
	char UseProgressBar : 1; // 0x108
	char IsCountingDown : 1; // 0x108
};

struct UTgAIBehaviorAction_MoveToLanePusherFront : UTgAIBehaviorAction_MoveToTarget {
	TG_EQUIP_POINT DeviceSlot; // 0x9c
};

struct USeqEvent_MobileButton : USeqEvent_MobileZoneBase {
	char bWasActiveLastFrame : 1; // 0x138
	char bSendPressedOnlyOnTouchDown : 1; // 0x138
	char bSendPressedOnlyOnTouchUp : 1; // 0x138
};

struct UTgAnimTurnInPlace : UAnimNodeBlend {
	char bInitialized : 1; // 0x124
	char bRootRotInitialized : 1; // 0x124
	char m_bDisableRotation : 1; // 0x124
	char bDelayBlendOutToPlayAnim : 1; // 0x124
	char bPlayingTurnTransition : 1; // 0x124
	char m_bCanChooseNewTransition : 1; // 0x124
	char m_bOverrideInterpolationTime : 1; // 0x124
	char m_bMirrorOffsetWhenPawnMirrored : 1; // 0x124
	char m_bAlwaysUpdateYawOffset : 0; // 0x124
	char m_bIgnoreTransitionAnimations : 0; // 0x124
	char m_bOnlyUpdateRotationWhenMoving : 0; // 0x124
	char m_bTurnTowardsVelocity : 0; // 0x124
	char m_bUsePawnRotationAtZeroVelocity : 0; // 0x124
	char m_bUse180ShortestRoute : 0; // 0x124
	char m_bConstrictIdleYawOffset : 0; // 0x124
	char m_bDisableAllTurning : 0; // 0x124
	char m_bJustBecameRelevant : 0; // 0x124
	int32_t LastPawnYaw; // 0x128
	int32_t LastPawnPitch; // 0x12c
	float PawnRotationRate; // 0x130
	int32_t LastRootBoneYaw; // 0x134
	int32_t YawOffset; // 0x138
	int32_t PitchOffset; // 0x13c
	float RelativeOffset; // 0x140
	ObjectProperty m_TgPawn; // 0x144
	TArray<ObjectProperty> OffsetNodes2; // 0x14c
	TArray<FRotTransitionInfo> RotTransitions; // 0x15c
	float TransitionBlendTime; // 0x16c
	int32_t CurrentTransitionIndex; // 0x170
	float TransitionThresholdAngle; // 0x174
	ForcedTransitionAngle m_ForcedTransitionAngle; // 0x178
	float m_fChooseNewTransitionPercent; // 0x17c
	float m_fInterpolationTime; // 0x180
	float m_RemainingInterpolationTime; // 0x184
	TArray<ObjectProperty> PlayerNodes; // 0x188
	float m_fIgnoredTransitionTime; // 0x198
	float m_fTurnInterpTime; // 0x19c
	FRotator m_InterpRotation; // 0x1a0
};

struct ATgPawn_HHGate : ATgPawn {
	char s_bRegistered : 1; // 0x2e9c
};

struct UTgSeqAct_ShowGameTip : USequenceAction {
	int32_t GameTipId; // 0x108
	ObjectProperty TargetPlayer; // 0x10c
};

struct UTgAnimBlendByWeaponSkin : UTgAnimNodeBlendList {
	TArray<FWeaponSkinChildInfo> m_SkinMap; // 0x168
};

struct UMaterialExpressionStaticBoolParameter : UMaterialExpressionParameter {
	char DefaultValue : 1; // 0xd0
	char ExtendedCaptionDisplay : 1; // 0xd0
	FPointer InstanceOverride; // 0xd4
};

struct UParticleModuleCollision : UParticleModuleCollisionBase {
	FRawDistributionVector DampingFactor; // 0x68
	FRawDistributionVector DampingFactorRotation; // 0x8c
	FRawDistributionFloat MaxCollisions; // 0xb0
	EParticleCollisionComplete CollisionCompletionOption; // 0xd4
	char bApplyPhysics : 1; // 0xd8
	char bPawnsDoNotDecrementCount : 1; // 0xd8
	char bOnlyVerticalNormalsDecrementCount : 1; // 0xd8
	char bDropDetail : 1; // 0xd8
	char bCollideOnlyIfVisible : 1; // 0xd8
	char bCollideWithWorld : 1; // 0xd8
	char bCollideWithWorldAttractors : 1; // 0xd8
	FRawDistributionFloat ParticleMass; // 0xdc
	float DirScalar; // 0x100
	float VerticalFudgeFactor; // 0x104
	FRawDistributionFloat DelayAmount; // 0x108
	float MaxCollisionDistance; // 0x12c
	TArray<FParticleAttractorCollisionAction> ParticleAttractorCollisionActions; // 0x130
};

struct USeqAct_Delay : USeqAct_Latent {
	char bDelayActive : 1; // 0x120
	char bStartWillRestart : 1; // 0x120
	float DefaultDuration; // 0x124
	float Duration; // 0x128
	float LastUpdateTime; // 0x12c
	float RemainingTime; // 0x130
};

struct UUIComponent_EndOfMatchLobbyScoreboard : UUIComponent_Display {
	char m_bShowingDetails : 1; // 0x124
	ObjectProperty m_mcHeader; // 0x128
	ObjectProperty m_mcHeaderDetails; // 0x130
	ObjectProperty m_pPlayerEntries; // 0x138
	ObjectProperty m_pToggleDetails; // 0x140
	ObjectProperty m_pReportPlayerPopup; // 0x148
	ObjectProperty m_pViewProfileAction; // 0x150
	ObjectProperty m_pToggleDetailsAction; // 0x158
	ObjectProperty m_pReportPlayerAction; // 0x160
	ObjectProperty m_pSendGiftAction; // 0x168
	ObjectProperty m_grScoreboard; // 0x170
};

struct USeqAct_AddFloat : USeqAct_SetSequenceVariable {
	float ValueA; // 0x108
	float ValueB; // 0x10c
	float FloatResult; // 0x110
	int32_t IntResult; // 0x114
};

struct APlayerReplicationInfo : AReplicationInfo {
	float Score; // 0x280
	int32_t Deaths; // 0x284
	char Ping; // 0x288
	ETTSSpeaker TTSSpeaker; // 0x289
	char RemoteUserDataUpdated; // 0x28a
	int32_t NumLives; // 0x28c
	FString PlayerName; // 0x290
	FString OldName; // 0x2a0
	int32_t PlayerID; // 0x2b0
	ObjectProperty Team; // 0x2b4
	char bAdmin : 1; // 0x2bc
	char bIsSpectator : 1; // 0x2bc
	char bOnlySpectator : 1; // 0x2bc
	char bWaitingPlayer : 1; // 0x2bc
	char bReadyToPlay : 1; // 0x2bc
	char bOutOfLives : 1; // 0x2bc
	char bBot : 1; // 0x2bc
	char bHasBeenWelcomed : 1; // 0x2bc
	char bIsInactive : 0; // 0x2bc
	char bFromPreviousLevel : 0; // 0x2bc
	char bIsTargeted : 0; // 0x2bc
	char RemoteUserIsGuest : 0; // 0x2bc
	int32_t StartTime; // 0x2c0
	FString StringSpectating; // 0x2c4
	FString StringUnknown; // 0x2d4
	int32_t Kills; // 0x2e4
	UGameMessage* GameMessageClass; // 0x2e8
	float ExactPing; // 0x2f0
	FString SavedNetworkAddress; // 0x2f4
	FUniqueNetId UniqueId; // 0x304
	FUniqueNetId ConsoleUniqueId; // 0x30c
	FName SessionName; // 0x314
	FAutomatedTestingDatum AutomatedTestingData; // 0x31c
	int32_t StatConnectionCounts; // 0x324
	int32_t StatPingTotals; // 0x328
	int32_t StatPingMin; // 0x32c
	int32_t StatPingMax; // 0x330
	int32_t StatPKLTotal; // 0x334
	int32_t StatPKLMin; // 0x338
	int32_t StatPKLMax; // 0x33c
	int32_t StatMaxInBPS; // 0x340
	int32_t StatAvgInBPS; // 0x344
	int32_t StatMaxOutBPS; // 0x348
	int32_t StatAvgOutBPS; // 0x34c
	ObjectProperty Avatar; // 0x350
	FPRIAudioDeviceInfo RemoteUserAudioDevices[0xa]; // 0x358
	FString RemoteUserId; // 0x470
};

struct UTgInventoryObject_Listen_ActiveDuringDimensionalLink : UTgInvListener {
	ObjectProperty m_CachedLinkDevice; // 0xc4
	char m_bCardIsActive : 1; // 0xcc
};

struct UActorFactorySkeletalMesh : UActorFactory {
	ObjectProperty SkeletalMesh; // 0x9c
	ObjectProperty AnimSet; // 0xa4
	FName AnimSequenceName; // 0xac
};

struct UParticleModuleAttractorParticle : UParticleModuleAttractorBase {
	FName EmitterName; // 0x68
	FRawDistributionFloat Range; // 0x70
	char bStrengthByDistance : 1; // 0x94
	char bAffectBaseVelocity : 1; // 0x94
	char bRenewSource : 1; // 0x94
	char bInheritSourceVel : 1; // 0x94
	FRawDistributionFloat Strength; // 0x98
	EAttractorParticleSelectionMethod SelectionMethod; // 0xbc
	int32_t LastSelIndex; // 0xc0
};

struct UOnlinePlaylistGameTypeProvider : UUIResourceDataProvider {
	FName PlaylistGameTypeName; // 0x94
	FString DisplayName; // 0x9c
	FString Description; // 0xac
	int32_t GameTypeId; // 0xbc
};

struct UTgAnimNodeLockableChannelFire : UTgAnimNodeChannelFire {
	char m_bPlayStartOnLock : 1; // 0x180
	char m_bPlayStartOnUnlock : 1; // 0x180
	char m_bPlayStartAfterLockLost : 1; // 0x180
	char m_bLocked : 1; // 0x180
};

struct UMaterialExpressionAdd : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
};

struct USeqAct_DelaySwitch : USeqAct_Latent {
	int32_t LinkCount; // 0x120
	int32_t CurrentIdx; // 0x124
	float SwitchDelay; // 0x128
	float NextLinkTime; // 0x12c
};

struct ULocalPlayer : UPlayer {
	FPointer VfTable_FObserverInterface; // 0x8c
	int32_t ControllerId; // 0x94
	ObjectProperty ViewportClient; // 0x98
	FVector2D Origin; // 0xa0
	FVector2D Size; // 0xa8
	ObjectProperty PlayerPostProcess; // 0xb0
	TArray<ObjectProperty> PlayerPostProcessChains; // 0xb8
	char bForceDefaultPostProcessChain : 1; // 0xc8
	char bWantToResetToMapDefaultPP : 1; // 0xc8
	char bSentSplitJoin : 1; // 0xc8
	char bPendingServerAuth : 1; // 0xc8
	FPointer ViewState; // 0xcc
	FPointer ViewState2; // 0xd4
	FSynchronizedActorVisibilityHistory ActorVisibilityHistory; // 0xdc
	FVector LastViewLocation; // 0xec
	FCurrentPostProcessVolumeInfo CurrentPPInfo; // 0xf8
	FCurrentPostProcessVolumeInfo LevelPPInfo; // 0x288
	TArray<FPostProcessSettingsOverride> ActivePPOverrides; // 0x418
	EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x428
	FString LastMap; // 0x42c
	ObjectProperty TagContext; // 0x43c
	TScriptInterface<Class> CachedAuthInt; // 0x444
	float ServerAuthTimestamp; // 0x454
	int32_t ServerAuthTimeout; // 0x458
	int32_t ServerAuthRetryCount; // 0x45c
	int32_t MaxServerAuthRetryCount; // 0x460
	FUniqueNetId ServerAuthUID; // 0x464
};

struct UGFxRawData : UObject {
	TArray<char> RawData; // 0x60
	TArray<FString> ReferencedSwfs; // 0x70
	TArray<ObjectProperty> References; // 0x80
	TArray<ObjectProperty> UserReferences; // 0x90
};

struct UTgAudioPawnDialogue : UObject {
	TArray<FChatterEvent> m_ChatterEvents; // 0x60
	TArray<FDialogueEvent> m_DialogueEvents; // 0x70
	float m_fCategoryCooldownTimestamps[0xe]; // 0x80
	float m_fCategoryCooldownBase[0xe]; // 0xb8
	ObjectProperty m_pOwner; // 0xf0
	float m_fLastEmoteTime; // 0xf8
	char m_bSpeaking : 1; // 0xfc
	char m_bInitialized : 1; // 0xfc
	int32_t m_nInvokedWeapon; // 0x100
};

struct USeqEvent_HudRenderText : USeqEvent_HudRender {
	ObjectProperty DisplayFont; // 0x140
	FColor DisplayColor; // 0x148
	FVector DisplayLocation; // 0x14c
	FString DisplayText; // 0x158
	ETextDrawMethod TextDrawMethod; // 0x168
};

struct UOnlineSubsystem : UObject {
	FPointer VfTable_FTickableObject; // 0x60
	TScriptInterface<Class> AccountInterface; // 0x68
	TScriptInterface<Class> PlayerInterface; // 0x78
	TScriptInterface<Class> PlayerInterfaceEx; // 0x88
	TScriptInterface<Class> MarketplaceInterface; // 0x98
	TScriptInterface<Class> SystemInterface; // 0xa8
	TScriptInterface<Class> GameInterface; // 0xb8
	TScriptInterface<Class> ContentInterface; // 0xc8
	TScriptInterface<Class> VoiceInterface; // 0xd8
	TScriptInterface<Class> StatsInterface; // 0xe8
	TScriptInterface<Class> NewsInterface; // 0xf8
	TScriptInterface<Class> PartyChatInterface; // 0x108
	TScriptInterface<Class> TitleFileInterface; // 0x118
	TScriptInterface<Class> TitleFileCacheInterface; // 0x128
	TScriptInterface<Class> UserCloudInterface; // 0x138
	TScriptInterface<Class> SharedCloudInterface; // 0x148
	TScriptInterface<Class> SocialInterface; // 0x158
	TScriptInterface<Class> ChatInterface; // 0x168
	TScriptInterface<Class> AuthInterface; // 0x178
	TScriptInterface<Class> GameDVRInterface; // 0x188
	TScriptInterface<Class> CommunityContentInterface; // 0x198
	TArray<DelegateProperty> OnLeaveStorefrontDelegates; // 0x1a8
	FUniqueNetId LoggedInPlayerNetId; // 0x1b8
	TArray<FNamedInterface> NamedInterfaces; // 0x1c0
	TArray<FNamedInterfaceDef> NamedInterfaceDefs; // 0x1d0
	TArray<FNamedSession> Sessions; // 0x1e0
	TArray<FSessionMemberInfo> PartyMemberList; // 0x1f0
	TArray<FSessionMemberInfo> GameMemberList; // 0x200
	char bCameFromAutoLogin : 1; // 0x210
	char bUseBuildIdOverride : 1; // 0x210
	int32_t BuildIdOverride; // 0x214
	FString IniLocPatcherClassName; // 0x218
	ObjectProperty Patcher; // 0x228
	float AsyncMinCompletionTime; // 0x230
	FString DefaultSessionTemplateName; // 0x234
	FString PartySessionTemplateName; // 0x244
	DelegateProperty __OnLeaveStorefront__Delegate; // 0x254
};

struct ATgPawn_BarrierTank : ATgPawn_Character {
	FWallPlacementInfo m_WallPlacementInfos[0x5]; // 0x3160
	FVector m_vSegmentExtent; // 0x31b0
	FVector m_vOpenSpotExtent; // 0x31bc
	float m_fWallTraceDownDistance; // 0x31c8
	float m_fWallOpenSpotTolerance; // 0x31cc
	float m_fInitialWallScaleZ; // 0x31d0
	char r_bInGaeBolg : 1; // 0x31d4
	char m_bUseGaeBolgRetrieve : 1; // 0x31d4
	float m_fGaeBolgJumpZModifier; // 0x31d8
	int32_t r_nInhandAmmoRemaining; // 0x31dc
};

struct ATgDevice_DemonTeleport : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	char m_bCancelled : 1; // 0xa0c
	char m_bPhaseApplied : 1; // 0xa0c
	char m_bAllowTeleport : 1; // 0xa0c
	float m_fTeleportDelayTimer; // 0xa10
	FVector m_vTeleportToLocation; // 0xa14
};

struct ATgProj_Drag : ATgProj_Simulated {
	ObjectProperty m_DragForm; // 0x52c
	float m_fCollisionHeightScale; // 0x534
	float m_fInverseSpeed; // 0x538
};

struct USeqCond_IncrementFloat : USequenceCondition {
	float IncrementAmount; // 0xec
	float ValueA; // 0xf0
	float ValueB; // 0xf4
};

struct ATgDeploy_DredgeF : ATgDeployable {
	ObjectProperty r_ConnectedPortal; // 0x46c
	char m_bPortalActive : 1; // 0x474
	TArray<FTargetToTeleport> s_PendingTeleports; // 0x478
	TArray<FTargetToTeleport> s_RecentAllyTeleports; // 0x488
};

struct ATgCameraVolume : AVolume {
	ObjectProperty AssociatedCamera; // 0x2bc
};

struct ATgAIController_Behavior : ATgAIController {
	TArray<FDeferredNode> DeferredNodes; // 0x644
	int32_t BlackboardType; // 0x654
	FName BehaviorTreeAsName; // 0x658
	FPointer SensorTree; // 0x660
	FPointer SensorDynamicMemory; // 0x668
	FPointer SensorStaticMemory; // 0x670
	FPointer WorkerTree; // 0x678
	FPointer WorkerTreeCachedStatus; // 0x680
	FPointer WorkerDynamicMemory; // 0x688
	FPointer WorkerStaticMemory; // 0x690
	int32_t SensorNodeCount; // 0x698
	int32_t WorkerNodeCount; // 0x69c
	float LastUpdateTime; // 0x6a0
	TArray<FBehaviorStateData> CachedNodeData; // 0x6a4
	float m_fCooldownModifier; // 0x6b4
	float m_fLeadAccuracy; // 0x6b8
	float m_fDegreeMissedMagnitude; // 0x6bc
	float m_fMissLikelihood; // 0x6c0
	ObjectProperty LocalRepulsorSolver; // 0x6c4
	UTgAILocalPositionSolver* LocalRepulsorSolverClass; // 0x6cc
	FNavigationQueueEntry CurrentNavigation; // 0x6d4
	float NavigationSearchModifier; // 0x700
	float NavigationSearchModifier_Max; // 0x704
	float NavigationSearchModifier_Min; // 0x708
	float TimeStuck; // 0x70c
	FFollowLaneState FollowLaneForwardState; // 0x710
	FFollowLaneState FollowLaneReverseState; // 0x718
	char bIsAlive : 1; // 0x720
	char m_bPaused : 1; // 0x720
	char bIsStunned : 1; // 0x720
	char bInHostileAbility : 1; // 0x720
	char bIsSafeToRecall : 1; // 0x720
	char bInEnemyTowerRadius : 1; // 0x720
	char bInFriendlyTowerRadius : 1; // 0x720
	char bInEnemyMinotaurRadius : 1; // 0x720
	char bInFriendlyMinotaurRadius : 0; // 0x720
	char bIsTargetOfEnemyTowerOrMinotaur : 0; // 0x720
	char bCombatTargetInEnemyTowerRadius : 0; // 0x720
	char bCombatTargetInFriendlyTowerRadius : 0; // 0x720
	char bCombatTargetInEnemyMinotaurRadius : 0; // 0x720
	char bCombatTargetInFriendlyMinotaurRadius : 0; // 0x720
	char bCombatTargetIsTargetOfFriendlyTowerOrMinotaur : 0; // 0x720
	char m_bDroppedDown : 0; // 0x720
	char bIsAtFortress : 0; // 0x720
	char bIsAtEnemyFortress : 0; // 0x720
	char bIsAtCachedRallyPoint : 0; // 0x720
	char bBtDebugSpawnPaused : 0; // 0x720
	char bBtDebugPaused : 0; // 0x720
	char bBtDebugStep : 0; // 0x720
	char bBtDebugClientOverlay : 0; // 0x720
	FVector NextFearDirection; // 0x724
	float PawnCollisionHeight; // 0x730
	float PawnCollisionRadius; // 0x734
	float DeviceRanges[0x31]; // 0x738
	ObjectProperty CombatTarget; // 0x7fc
	ObjectProperty CombatTargetAsPawn; // 0x804
	int32_t EnemyMinionsInEnemyTowerRadius; // 0x80c
	int32_t FriendlyMinionsInEnemyTowerRadius; // 0x810
	int32_t EnemyMinionsInFriendlyTowerRadius; // 0x814
	int32_t FriendlyMinionsInFriendlyTowerRadius; // 0x818
	int32_t EnemyGodsInEnemyTowerRadius; // 0x81c
	int32_t FriendlyGodsInEnemyTowerRadius; // 0x820
	int32_t EnemyGodsInFriendlyTowerRadius; // 0x824
	int32_t FriendlyGodsInFriendlyTowerRadius; // 0x828
	float HealthOfNearestEnemyTower; // 0x82c
	float HealthOfNearestFriendlyTower; // 0x830
	ObjectProperty LaneMoveTarget; // 0x834
	TArray<ObjectProperty> VisibleActorsToAvoid; // 0x83c
	TArray<ObjectProperty> CachedTowers; // 0x84c
	TArray<ObjectProperty> CachedGods; // 0x85c
	TArray<ObjectProperty> EnemyControllersInSightRadius; // 0x86c
	TArray<ObjectProperty> FriendlyControllersInSightRadius; // 0x87c
	EBotDifficultyLevel Difficulty; // 0x88c
	EUseDeviceAimType LastUseDeviceAimType; // 0x88d
	FVector TargetLastKnownLocation; // 0x890
	ObjectProperty CurrentAssaultPoint; // 0x89c
	float m_fUnstuckJumpFrequency; // 0x8a4
	float m_fLastUnstuckJumpTime; // 0x8a8
	TArray<FIncomingDamageEntry> IncomingDamage; // 0x8ac
	ObjectProperty CachedRallyVolume; // 0x8bc
	int32_t RandomRallyPointIndex; // 0x8c4
	ObjectProperty FortressObjective; // 0x8c8
	FVector AlliedFortressLookDir; // 0x8d0
	FVector EnemyFortressLookDir; // 0x8dc
	ObjectProperty AlliedFortress; // 0x8e8
	ObjectProperty EnemyFortress; // 0x8f0
	FVector StrafeDir; // 0x8f8
	float LastStrafeDirUpdate; // 0x904
	float StrafeDirUpdateTime; // 0x908
	UTgAIUtilityHandle* UtilityHandleClass; // 0x90c
	ObjectProperty UtilityHandle; // 0x914
	ObjectProperty EscortActor; // 0x91c
	float EscortMinDistance; // 0x924
	float EscortMaxDistance; // 0x928
	int32_t m_nDevicesLockingInput; // 0x92c
};

struct ATgDevice_RendSoul : ATgDevice {
	char m_bApplyCooldown : 1; // 0xa04
};

struct UParticleModuleVelocityBase : UParticleModule {
	char bInWorldSpace : 1; // 0x68
	char bApplyOwnerScale : 1; // 0x68
};

struct ATgDevice_ImaniUlt : ATgDevice_Pet {
	ObjectProperty m_CachedImani; // 0xa04
};

struct APortalVolume : AVolume {
	TArray<ObjectProperty> Portals; // 0x2bc
};

struct UTgDeviceForm_SelfResurrection : UTgDeviceForm {
	ObjectProperty m_SKCCrystalScale; // 0x28c
};

struct UTgInventoryObject_Listen_MountShield : UTgInventoryObject_Listen_Mount {
	float m_fNextMountShieldTime; // 0xd4
	float m_fMinMountShieldTime; // 0xd8
};

struct UTgInventoryObject_Listen_AzaanAbilityStartAboveThreshold : UTgInventoryObject_Listen_AbilityStart {
	ObjectProperty m_CachedAzaan; // 0xcc
};

struct ATgDevice_FlamethrowerTurret : ATgDevice {
	ObjectProperty m_CachedBarik; // 0xa04
};

struct UUIData_LTIAggregate : UUIData {
	TArray<ObjectProperty> m_Items; // 0x64
};

struct UWaveFormBase : UObject {
	ObjectProperty TheWaveForm; // 0x60
};

struct UMaterialExpressionAbs : UMaterialExpression {
	FExpressionInput Input; // 0xb0
};

struct UTgAimAccelerationCurves : UObject {
	FName SettingsName; // 0x60
	float MaxAccelMultiplierX; // 0x68
	float MaxAccelMultiplierY; // 0x6c
	FRawDistributionFloat AimSpeedX; // 0x70
	FRawDistributionFloat AimAccelX; // 0x94
	FRawDistributionFloat AimSpeedY; // 0xb8
	FRawDistributionFloat AimAccelY; // 0xdc
};

struct UTgAchievement_HardCarry : UTgAchievement {
	int32_t nKills; // 0x94
};

struct USeqAct_PlayMusicTrack : USequenceAction {
	FMusicTrackStruct MusicTrack; // 0x108
};

struct UTgAIBehaviorAction_PlayEmote : UTgAIBehaviorAction {
	EEmote EmoteToPlay; // 0x94
};

struct UDrawSphereComponent : UPrimitiveComponent {
	FColor SphereColor; // 0x24c
	ObjectProperty SphereMaterial; // 0x250
	float SphereRadius; // 0x258
	int32_t SphereSides; // 0x25c
	char bDrawWireSphere : 1; // 0x260
	char bDrawLitSphere : 1; // 0x260
	char bDrawOnlyIfSelected : 1; // 0x260
};

struct ATgDeploy_HealthNugget_TeamOnly : ATgDeploy_HealthNugget {
	int32_t r_nTaskForceAlignment; // 0x490
	float m_fNuggetSpawnTime; // 0x494
	float m_fNuggetGracePeriod; // 0x498
};

struct UTgSeqAct_BeaconEntranceSetActive : USequenceAction {
	char m_bSetActive : 1; // 0x108
};

struct UTgGameDC_DeviceList : UTgDataChunk {
	ObjectProperty m_DeviceList[0x19]; // 0x158
};

struct UUIComponent_BattlePassRewardLevel : UUIComponent_Display {
	ObjectProperty m_pItemIcon; // 0x124
	ObjectProperty m_pButton; // 0x12c
	ObjectProperty m_mcLock; // 0x134
	ObjectProperty m_mcCheck; // 0x13c
	ObjectProperty m_mcCardIcon; // 0x144
	ObjectProperty m_mcDeathCard; // 0x14c
};

struct UUIComponent_LexTarget : UUIComponent_Display {
	ObjectProperty m_mcFrame; // 0x124
	ObjectProperty m_mcFrameTop; // 0x12c
	ObjectProperty m_mcFrameBottom; // 0x134
	ObjectProperty m_mcIcon; // 0x13c
};

struct UUIComponent_StreetStyleEventOverview : UUIComponent_Display {
	ObjectProperty m_grInput; // 0x124
};

struct UUIComponent_TalentSelection : UUIComponent_Display {
	ObjectProperty m_Talents; // 0x124
};

struct UTgAnimBlendByStartingPosture : UTgAnimNodeBlendList {
	ObjectProperty m_TgPawn; // 0x168
	TG_POSTURE m_StartingPosture; // 0x170
	char m_bExpired : 1; // 0x174
};

struct ACrowdAgentBase : AActor {
	FPointer VfTable_IInterface_NavigationHandle; // 0x280
};

struct UTgAnimNodeStanceTransitioner : UAnimNodeBlendList {
	int32_t m_DefaultStance; // 0x144
	int32_t m_CurrentStance; // 0x148
	char m_bIsPlayingTransition : 1; // 0x14c
	float m_BlendTransitionDuration; // 0x150
	TArray<FCachedTgAnimNodeStanceInfo> m_StanceNodeInfos; // 0x154
	TArray<FCachedTgAnimNodeStanceTransitionInfo> m_TransitionNodeInfos; // 0x164
};

struct ATgDevice_ToggleModeWithLockout : ATgDevice_ToggleWithLockout {
	ObjectProperty m_CachedInhand; // 0xa10
};

struct ATgStaticMeshActor_CapturePoint : AStaticMeshActor {
	FLinearColor UncontestedCaptureColor; // 0x2a4
	FLinearColor FriendlyCaptureColor; // 0x2b4
	FLinearColor EnemyCaptureColor; // 0x2c4
	FName EmissiveColorParameterName; // 0x2d4
	FName CapturePercentParameterName; // 0x2dc
	TArray<ObjectProperty> InitialMaterialList; // 0x2e4
	char bInstancedAllMaterials : 1; // 0x2f4
	int32_t CurrentCaptureStatus; // 0x2f8
	float CurrentCapturePercent; // 0x2fc
};

struct UTgDeviceForm_TurtlePower : UTgDeviceForm {
	char m_bShouldBeActive : 1; // 0x28c
	float m_fRageActivationTime; // 0x290
	float m_fRageActivationPercent; // 0x294
};

struct UFracturedBaseComponent : UStaticMeshComponent {
	FPointer ComponentBaseResources; // 0x310
	FRenderCommandFence_Mirror ReleaseResourcesFence; // 0x318
	TArray<char> VisibleFragments; // 0x31c
	char bVisibilityHasChanged : 1; // 0x32c
	char bVisibilityReset : 1; // 0x32c
	char bInitialVisibilityValue : 1; // 0x32c
	char bUseDynamicIndexBuffer : 1; // 0x32c
	char bUseDynamicIBWithHiddenFragments : 1; // 0x32c
	int32_t NumResourceIndices; // 0x330
	int32_t bResetStaticMesh; // 0x334
};

struct UTgAnimNodeSequence : UAnimNodeSequence {
	char bAutoPlay : 1; // 0x1ac
	char bResetOnActivate : 1; // 0x1ac
	char HasDynamicLength : 1; // 0x1ac
	char EnableFootControlsOnCease : 1; // 0x1ac
	char SynchronizeGroupOnReplay : 1; // 0x1ac
	char bRandomStartPosition : 1; // 0x1ac
	float ChainedSequenceDuration; // 0x1b0
	FName m_nmDisplayGroup; // 0x1b4
};

struct ATgNavRouteIndicator : ATgSkeletalMeshActorSpawnable {
	FPointer VfTable_IInterface_NavigationHandle; // 0x32c
	TArray<FVector> WayPoints; // 0x334
	int32_t Position; // 0x344
	float m_fPositionStartTime; // 0x348
	float m_fPositionMaxSeekTime; // 0x34c
	float m_fSpinUpTime; // 0x350
	float m_fSpinDownTime; // 0x354
	ObjectProperty m_SpinUpFx; // 0x358
	ObjectProperty m_PathingFx; // 0x360
	ObjectProperty m_SpinDownFx; // 0x368
	ObjectProperty NavigationHandle; // 0x370
};

struct UTgInvListener_GuerillaTactics : UTgInvListener {
	ObjectProperty m_CachedOwlPawn; // 0xc4
};

struct ATgSpectatorHUD : ATgGameHUD {
	char m_eClientVisibilityMode; // 0x6e8
	ObjectProperty m_LastUIViewTarget; // 0x6ec
	char m_StatsSeeded : 1; // 0x6f4
	char m_bIsBottomPanelHidden : 1; // 0x6f4
};

struct UTgInvListener_DeathAfterHit : UTgInventoryObject_Listen_AbilityProcBase {
	float m_fResetTimer; // 0xcc
	TArray<ObjectProperty> m_pLastTargetsHit; // 0xd0
};

struct UUIScene_UIHudRecap : UUIScene {
	char m_bHaveDeathData : 1; // 0x1cc
	ObjectProperty m_pPlayerList; // 0x1d0
};

struct ADynamicBlockingVolume : ABlockingVolume {
	char bEnabled : 1; // 0x2c0
	char bHandleNavMeshRegistrationInGame : 1; // 0x2c0
	char bHasRegisteredObstacle : 1; // 0x2c0
};

struct UActorFactory : UObject {
	AActor* GameplayActorClass; // 0x60
	FString MenuName; // 0x68
	int32_t MenuPriority; // 0x78
	int32_t AlternateMenuPriority; // 0x7c
	FString NewActorClassName; // 0x80
	AActor* NewActorClass; // 0x90
	char bPlaceable : 1; // 0x98
	char bShowInEditorQuickMenu : 1; // 0x98
};

struct ATgPawn : AGamePawn {
	FPointer VfTable_ITgSkinnableInterface; // 0x5ac
	FPointer VfTable_ITgCombatActor; // 0x5b4
	FPointer VfTable_ITgGrabSource; // 0x5bc
	FPointer VfTable_ITgObserver_ViewTargetChanged; // 0x5c4
	FPointer VfTable_ITgInteractiveAudio; // 0x5cc
	FPointer VfTable_ITgSoundNotifyActorInterface; // 0x5d4
	FPointer VfTable_ITgCallbackInterface; // 0x5dc
	FVector r_vPhysTweenTarget; // 0x5e4
	ETweenState r_eTweenState; // 0x5f0
	ETweenState m_eLocalTweenState; // 0x5f1
	EGrabState r_eGrabState; // 0x5f2
	EGrabState m_eLocalGrabState; // 0x5f3
	EChargeState r_eChargeState; // 0x5f4
	TG_DEATH_REASON r_eDeathReason; // 0x5f5
	TgMeshVisibilityState c_PreviousMeshVisibilityState; // 0x5f6
	TG_REP_DEVICE_STATE r_ReplicatedDeviceState[0x31]; // 0x5f7
	TG_EQUIP_POINT r_eDesiredInHand; // 0x628
	TG_EQUIP_POINT m_eEquippedInHand; // 0x629
	char r_nPackedFireMultiRanges[0x14]; // 0x62a
	TG_EQUIP_POINT r_eDesiredAIDevice; // 0x63e
	STEALTH_TYPE r_eIsStealthed; // 0x63f
	STEALTH_TYPE c_eIsStealthed; // 0x640
	char r_nInCombatNonce; // 0x641
	char c_nInCombatNonceAck; // 0x642
	DeployableOverlayIcon m_InitHUDOverlayIcon; // 0x643
	DeployableOverlayState m_InitHUDOverlayState; // 0x644
	TG_POSTURE m_ePosture; // 0x645
	EStunType r_eCurrentStunType; // 0x646
	char c_nLocalRespawnBeaconHUDState; // 0x647
	OverlayMICType m_OverlayCurrentTypeBody; // 0x648
	OverlayMICType m_OverlayCurrentTypeWeapon; // 0x649
	ESceneDepthPriorityGroup m_eCharacterCustom1OverlayDepthGroup; // 0x64a
	EForcedSilhouetteVisibility m_eForcedSilhouetteVisibility; // 0x64b
	EMountState r_eMountState; // 0x64c
	EUITargetingType c_UITargetingType; // 0x64d
	EMetaGameState m_eMetaGameState; // 0x64e
	EBotBehaviorState m_eBotBehaviorState; // 0x64f
	char m_nIsInIntroState; // 0x650
	EPolymorphType c_LocalPolymorph; // 0x651
	EPolymorphType r_CurrentPolymorph; // 0x652
	EThreatLevel c_ThreatLevel; // 0x653
	EThreatLevel c_LastThreatLevel; // 0x654
	LocalViewerRangeState m_RangeStateFromLocalViewer; // 0x655
	EEmote c_eCurrentAudioEmotePlaying; // 0x656
	float m_fPhysTweenDist; // 0x658
	float r_fPhysTweenDuration; // 0x65c
	int32_t m_nPhysTweenPostureId; // 0x660
	char r_bPhysTweenInterrupted : 1; // 0x664
	char s_bIsInGrass : 1; // 0x664
	char r_bIsInItemShop : 1; // 0x664
	char r_bHasLeftItemShop : 1; // 0x664
	char r_bGrabInterrupted : 1; // 0x664
	char r_bCanShootWhileGrabbed : 1; // 0x664
	char m_PreGrabCollideActors : 1; // 0x664
	char m_PreGrabBlockActors : 1; // 0x664
	char r_bUsePhysFlyingForCharge : 0; // 0x664
	char r_bChargeIgnoreHumanoidBlocking : 0; // 0x664
	char m_bWantsCharge : 0; // 0x664
	char m_bCanJumpWhileCharging : 0; // 0x664
	char m_bPostChargeUseWalkSpeed : 0; // 0x664
	char m_bChargeRespectsMoveSpeedMultipliers : 0; // 0x664
	char c_bShouldUpdateSavedChargeState : 0; // 0x664
	char m_bIgnoreFriendlyBlocking : 0; // 0x664
	char m_bIgnoreEnemyBlocking : 0; // 0x664
	char m_bHasDestroyedMesh : 0; // 0x664
	char m_bDefaultPropsInitialized : 0; // 0x664
	char m_bReconnectedWhileDead : 0; // 0x664
	char m_bAffectedByVortices : 0; // 0x664
	char s_LoadMeshServerSide : 0; // 0x664
	char c_bDeviceHiddenDueToFullBodyAnim : 0; // 0x664
	char c_bMeshHiddenDueToDeath : 0; // 0x664
	char c_bHideMeshFromCameraPenetration : 0; // 0x664
	char c_bHideMeshFromKismet : 0; // 0x664
	char r_bInGlobalOffhandCooldown : 0; // 0x664
	char bInGlobalOffhandCooldownClient : 0; // 0x664
	char m_bInFireLock : 0; // 0x664
	char c_bUpdatesWeaponMesh : 0; // 0x664
	char c_bIsStealthMaterialOn : 0; // 0x664
	char c_bShow1PWeaponAsStealthed : 0; // 0x664
	char r_bIsVolumeStealthed : 1; // 0x668
	char r_bIsVolumeStealthFading : 1; // 0x668
	char m_bDisableVolumeStealth : 1; // 0x668
	char r_bDisableVolumeStealth : 1; // 0x668
	char m_bCannotBeVolumeStealthed : 1; // 0x668
	char m_bPlayingStealth : 1; // 0x668
	char m_bPlayingDetected : 1; // 0x668
	char c_bHiddenDueToStealth : 1; // 0x668
	char c_bHiddenDueToObscuringDeployable : 0; // 0x668
	char r_bCanStartStealthInCombat : 0; // 0x668
	char m_bIsVisionBlocker : 0; // 0x668
	char m_bIsAIVisionBlocker : 0; // 0x668
	char m_bApplyDistanceFade : 0; // 0x668
	char r_bIsBot : 0; // 0x668
	char c_bIsFrametestZombie : 0; // 0x668
	char r_bIsAnimInStrafeMode : 0; // 0x668
	char m_ReachedTargetSoKillRootMotion : 0; // 0x668
	char s_bCanApplyEffects : 0; // 0x668
	char m_bInitialized : 0; // 0x668
	char m_bUseInterrupted : 0; // 0x668
	char c_bIgnoreInterruption : 0; // 0x668
	char r_bNoEnergyCost : 0; // 0x668
	char m_bCheatUseNoEnergy : 0; // 0x668
	char m_bCheatNoRecharge : 0; // 0x668
	char m_bIsInvisibleToAI : 0; // 0x668
	char r_bInCombatFlag : 0; // 0x668
	char s_bIsStill : 0; // 0x668
	char m_bHitWallThisTick : 0; // 0x668
	char r_bIsAFK : 0; // 0x668
	char c_bHandIKEnabledFromAnimSet : 0; // 0x668
	char c_bCanDoTurnInPlaceAnim : 0; // 0x668
	char c_bIsPlayingTurnInPlaceAnim : 0; // 0x668
	char m_bShouldApplyCCImmuneOverlay : 1; // 0x66c
	char m_bApplyAltEffects : 1; // 0x66c
	char m_bCanBeMarked : 1; // 0x66c
	char m_bCanBeKnockedBack : 1; // 0x66c
	char m_bCausesPushblock : 1; // 0x66c
	char m_bPushblockAffectsFriendlies : 1; // 0x66c
	char m_bPushblockAffectsEnemies : 1; // 0x66c
	char m_bIsCrowdControlImmuneKismet : 1; // 0x66c
	char m_bUseSmoothNetReceiveRotation : 0; // 0x66c
	char m_bForceSmoothCorrection : 0; // 0x66c
	char r_bIsRotationLockedForSpectate : 0; // 0x66c
	char m_bAlwaysUseAccurateRotation : 0; // 0x66c
	char r_bHasAccurateRotation : 0; // 0x66c
	char c_bUpdateSkelMeshWhenNotRendered : 0; // 0x66c
	char c_bUpdateSkelMeshWhenNotRenderedServer : 0; // 0x66c
	char r_bSilenced : 0; // 0x66c
	char r_bDisarmed : 0; // 0x66c
	char r_bCrippled : 0; // 0x66c
	char r_bIsInStasis : 0; // 0x66c
	char r_bCanBePulled : 0; // 0x66c
	char s_bHasCrippleEffect : 0; // 0x66c
	char c_bEnemyMatLoaded : 0; // 0x66c
	char r_bIsFlashBang : 0; // 0x66c
	char r_bIsBanished : 0; // 0x66c
	char m_bIsRewinding : 0; // 0x66c
	char r_bIsJumping : 0; // 0x66c
	char r_bIsShortJump : 0; // 0x66c
	char m_bIsLanding : 0; // 0x66c
	char m_bAllowHigherWallJumping : 0; // 0x66c
	char m_bIgnorePhysCheckForJump : 0; // 0x66c
	char m_bHasPlayedDeathAnimation : 0; // 0x66c
	char m_bForceDeathAnim : 0; // 0x66c
	char m_bDeathFreezeVelocity : 1; // 0x670
	char r_bHasRespawnBeacon : 1; // 0x670
	char m_bDestroyOnOwnerDeathFlag : 1; // 0x670
	char r_bNeedPlaySpawnFx : 1; // 0x670
	char c_bSpawnFxPlayed : 1; // 0x670
	char c_bTargeted : 1; // 0x670
	char c_bTargetedLightup : 1; // 0x670
	char c_bApplyDropShadow : 1; // 0x670
	char m_bShowNameplate : 0; // 0x670
	char c_bShowSpecialHealth : 0; // 0x670
	char r_bInitialIsEnemy : 0; // 0x670
	char c_bNeedsAssetLoad : 0; // 0x670
	char r_bDebugShowAIDebug : 0; // 0x670
	char m_SwapToDestroyedMeshOnTick : 0; // 0x670
	char m_bBlockCamera : 0; // 0x670
	char m_bOverlaysEnabled : 0; // 0x670
	char m_b1POverlaysEnabled : 0; // 0x670
	char m_b1POverlaysActive : 0; // 0x670
	char m_bSilhouettesVisible : 0; // 0x670
	char m_bUseSilhouettes : 0; // 0x670
	char m_bIgnoreTearOffMomentum : 0; // 0x670
	char m_bIsFadingOut : 0; // 0x670
	char m_bUseDamageTypeForDeathAnim : 0; // 0x670
	char r_bDemoCanPurchaseItems : 0; // 0x670
	char m_bCanPurchaseNimble : 0; // 0x670
	char s_bHasInteractedWithStore : 0; // 0x670
	char s_bAlwaysRelevantExceptRoyale : 0; // 0x670
	char s_bPetOwnerIsRelevant : 0; // 0x670
	char m_bDoSmoothCorrectionThisTick : 0; // 0x670
	char m_bOnlyTakeHeadshotDamage : 0; // 0x670
	char r_bIsMounted : 0; // 0x670
	char m_bIsEnteringMount : 0; // 0x670
	char m_bCreateMountMeshDeferred : 1; // 0x674
	char m_bUpdateEyeHeight : 1; // 0x674
	char r_bJustJumped : 1; // 0x674
	char m_bStunEnergyRegen : 1; // 0x674
	char c_bHealAkEventPlaying : 1; // 0x674
	char m_bPainAkEventPlaying : 1; // 0x674
	char r_bIsDazed : 1; // 0x674
	char r_bIsMarked : 1; // 0x674
	char r_bIsBleeding : 0; // 0x674
	char r_bIsOnFire : 0; // 0x674
	char r_bIsRooted : 0; // 0x674
	char r_bIsKnockedBack : 0; // 0x674
	char r_bIsPoisoned : 0; // 0x674
	char r_bIsSlowed : 0; // 0x674
	char r_bIsFrozen : 0; // 0x674
	char r_bIsCCImmune : 0; // 0x674
	char r_bIsRevealed : 0; // 0x674
	char r_bIsWallHacking : 0; // 0x674
	char r_bIsMarkedByDruid : 0; // 0x674
	char r_bIsMarkedByCorvus : 0; // 0x674
	char r_bIsInSelfKnockBack : 0; // 0x674
	char s_bApplyKnockbackHitEffects : 0; // 0x674
	char s_bApplyGrabbedHitEffects : 0; // 0x674
	char m_bUseOutlines : 0; // 0x674
	char m_bIsLeaping : 0; // 0x674
	char m_bCanSpawnHealthNuggetsOnDeath : 0; // 0x674
	char m_bCanAutoMountOnRespawn : 0; // 0x674
	char c_bShowingDisarm : 0; // 0x674
	char r_bFirstSpawnWave : 0; // 0x674
	char m_bWaitForIntroAnimToEnd : 0; // 0x674
	char m_bIntroAnimFinished : 0; // 0x674
	char m_bAllowIntroWhiteOut : 0; // 0x674
	char m_bIntroWhiteOutActive : 1; // 0x678
	char m_bAirAccuracyPenalty : 1; // 0x678
	char c_bInLocalLineOfSightRecently : 1; // 0x678
	char m_bCanBeHeadShot : 1; // 0x678
	char c_bHide3PWeaponMeshWhileMounted : 1; // 0x678
	char m_bShouldBeFirstPersonLastFrame : 1; // 0x678
	char m_bFadeOutOnLifeAfterDeathTimerExpired : 1; // 0x678
	char m_bUsesRecoil : 1; // 0x678
	char m_bUsingSecondaryPhysicsAsset : 0; // 0x678
	char m_bWasKilledByEnvironment : 0; // 0x678
	char m_bShouldSmoothEyeHeight : 0; // 0x678
	char m_bHasAstroBuff : 0; // 0x678
	char m_bHasCorvusBeacon : 0; // 0x678
	char r_bIsLifted : 0; // 0x678
	char m_bCameraOverrideLocation : 0; // 0x678
	char c_bSaveModMoveSpeed : 0; // 0x678
	char c_bSaveModGravity : 0; // 0x678
	char m_bBehindView : 0; // 0x678
	char r_bClientUsingForced3pOption : 0; // 0x678
	char c_bHasRequestedFiremodePropModSync : 0; // 0x678
	char m_bJustForcedVelocity : 0; // 0x678
	char c_bQueueDeviceStateRecovery : 0; // 0x678
	int32_t r_nPhysTweenFlags; // 0x67c
	float r_fPhysTweenSpeed; // 0x680
	FString m_sGameplayPackage; // 0x684
	TScriptInterface<Class> m_AsInteractiveAudio; // 0x694
	ObjectProperty m_PawnDialogue; // 0x6a4
	float c_fLastAttackAudioCueTimestamp; // 0x6ac
	float c_fLastAttackFromBehindAudioCueTimestamp; // 0x6b0
	float c_fLastAttackFromAboveAudioCueTimestamp; // 0x6b4
	float c_fLastAttackFromSniperAudioCueTimestamp; // 0x6b8
	float c_fRequestCooldownEmotePause; // 0x6bc
	FVector m_vGrabDesiredRelativeLocation; // 0x6c0
	ObjectProperty r_GrabSource; // 0x6cc
	float r_fGrabDuration; // 0x6d4
	float r_fGrabInitialYaw; // 0x6d8
	FName r_GrabAttachSocket; // 0x6dc
	FVector r_vGrabLocationOffset; // 0x6e4
	FRotator r_rGrabRotationOffset; // 0x6f0
	FVector m_vGrabDestRelLocation; // 0x6fc
	FRotator m_rGrabDestRelRotation; // 0x708
	int32_t m_nPhysGrabPostureId; // 0x714
	TArray<ObjectProperty> s_GrabbedTargets; // 0x718
	int32_t r_nCannotBeGrabSource; // 0x728
	FVector s_vGrabOffsetDedicatedServer; // 0x72c
	TArray<ObjectProperty> m_TeleportNotifyList; // 0x738
	float r_fChargeInitialYaw; // 0x748
	float r_fChargeInitialPitch; // 0x74c
	FVector r_vChargeInitialLocation; // 0x750
	float r_fChargeSpeed; // 0x75c
	float r_fChargeTime; // 0x760
	float r_fChargeTurnRate; // 0x764
	float m_fCurrentTimeInCharge; // 0x768
	float m_fPostChargeVelocityMult; // 0x76c
	float m_fPostChargeVelocityCap; // 0x770
	FSavedChargeState m_SavedChargeState; // 0x774
	int32_t m_nCoreMeshAsmId; // 0x7a0
	FPointer m_CoreMeshAssembly; // 0x7a4
	int32_t m_nBodyMeshAsmId; // 0x7ac
	FPointer m_BodyMeshAssembly; // 0x7b0
	FPointer m_DestroyedMeshAssembly; // 0x7b8
	int32_t m_n1PHeadMeshId; // 0x7c0
	int32_t r_nPawnId; // 0x7c4
	float c_fLastUpdateTime; // 0x7c8
	float m_fSimPawnMoveSafetyTime; // 0x7cc
	float m_fNetReceiveLocationTime; // 0x7d0
	FVector m_NetReceiveLocation; // 0x7d4
	int32_t m_nArchetype; // 0x7e0
	ObjectProperty r_EffectManager; // 0x7e4
	TArray<FTgPropertyInstance> m_Properties; // 0x7ec
	float r_CurrentPropValues[0x92]; // 0x7fc
	float m_LocalPropValues[0x92]; // 0xa44
	float s_PropValuesRepResolution[0x92]; // 0xc8c
	float s_DefaultPropValues[0x92]; // 0xed4
	float r_fCachedMaxHealth; // 0x111c
	float m_fCachedGroundProximity; // 0x1120
	float m_fCachedGroundProximityTimestamp; // 0x1124
	TArray<FDebugPropertyMod> s_DebugPropertyMods; // 0x1128
	ObjectProperty m_AkActorUnoccluded; // 0x1138
	FEEmoteCategoryChance m_EmoteChances; // 0x1140
	FEEmoteAbilityChance m_EmoteChancesAbility; // 0x116c
	float m_fLastEmoteTime; // 0x1180
	float m_fEmoteGlobalCooldown; // 0x1184
	TArray<float> m_fLastEmoteCatTimes; // 0x1188
	TArray<float> m_fLastPlayerVGSEmoteTimes; // 0x1198
	float m_fEmoteNonLocalCooldown; // 0x11a8
	float m_fLastNonLocalEmoteTime; // 0x11ac
	float m_fSoftLandVelocityCutoff; // 0x11b0
	float m_fHardLandVelocityCutoff; // 0x11b4
	float s_nSpawnTime; // 0x11b8
	int32_t r_nPhysicalType; // 0x11bc
	float r_fReconnectTime; // 0x11c0
	TArray<ObjectProperty> m_CurrentVortexList; // 0x11c4
	TArray<ObjectProperty> m_CurrentBlackHoleList; // 0x11d4
	UTgDamageType* m_DeathDamageType; // 0x11e4
	FVector m_DeathHitLocation; // 0x11ec
	int32_t m_nDeathFXMaterialHandle; // 0x11f8
	FEquipDeviceInfo r_EquipDeviceInfo[0x31]; // 0x11fc
	ObjectProperty m_EquippedDevices[0x31]; // 0x1448
	ObjectProperty c_EquipForm[0x31]; // 0x15d0
	FName c_EquipFormState[0x31]; // 0x1758
	FName c_nmInHandSocket; // 0x18e0
	ObjectProperty c_CurrentTargetingDevice; // 0x18e8
	ObjectProperty c_CurrentStartActionDevice; // 0x18f0
	float c_fShouldStartActionTimeStamp; // 0x18f8
	ObjectProperty m_CurrentInHandDevice; // 0x18fc
	int32_t c_nLockInHandToTargetingDevice; // 0x1904
	ObjectProperty c_WorldBracketFX; // 0x1908
	int32_t c_nLastProcessedFlashEventIdx; // 0x1910
	int32_t r_nFirstValidFlashEventIdx; // 0x1914
	int32_t r_nFlashQueIndex; // 0x1918
	int32_t r_nFlashEvent[0x20]; // 0x191c
	FVector r_vFlashLocation[0x20]; // 0x199c
	FVector r_vFlashRayDir[0x20]; // 0x1b1c
	float r_vFlashRefireTime[0x20]; // 0x1c9c
	ObjectProperty r_pFlashTarget[0x20]; // 0x1d1c
	UDamageType* r_pFlashDamageType[0x20]; // 0x1e1c
	int32_t r_nFlashFireInfo[0x20]; // 0x1f1c
	float r_fFireMultiMaxRange; // 0x1f9c
	int32_t r_nFireMultiSeed; // 0x1fa0
	float r_fFireMultiSpreadAngle; // 0x1fa4
	float s_fTauntAmount; // 0x1fa8
	float m_fLastPainSound; // 0x1fac
	ComponentProperty LightEnvironment; // 0x1fb0
	FVector FireLocationOffsets[0x31]; // 0x1fb8
	float BotTurnAcceleration; // 0x2204
	float BotTurnSpeed; // 0x2208
	float m_fMaxAimAssistStacks; // 0x220c
	float c_fStealthStateFxSpamWindow; // 0x2210
	FName c_nmLastStealthFxGroup; // 0x2214
	float r_fStealthFadeRate; // 0x221c
	ObjectProperty r_CurrentVisibilityVolumes[0x2]; // 0x2220
	ObjectProperty r_ObscuringDeployables[0xa]; // 0x2230
	ObjectProperty r_BlindingDeployables[0xa]; // 0x2280
	ObjectProperty r_VisibleThroughWallsInstigators[0xc]; // 0x22d0
	ObjectProperty r_VisibleThroughStealthInstigators[0xc]; // 0x2330
	float m_fVolumeStealthDisableTime; // 0x2390
	float c_fVolumeFadeValue; // 0x2394
	float c_fDistanceFadeValue; // 0x2398
	float c_fStealthFadeValue; // 0x239c
	float c_fObscuringDeployableFadeValue; // 0x23a0
	float c_fBlindingDeployableFadeValue; // 0x23a4
	float c_fCurrentFadeValue; // 0x23a8
	float c_fDistanceLastCollidingVisionRange; // 0x23ac
	float c_fLocalStealthFadeRate; // 0x23b0
	ObjectProperty c_TeleporterEnterFX; // 0x23b4
	ObjectProperty c_TeleporterExitFX; // 0x23bc
	ObjectProperty c_BlinkEnterFX; // 0x23c4
	ObjectProperty c_BlinkExitFX; // 0x23cc
	ObjectProperty c_DetectedFx; // 0x23d4
	ObjectProperty c_PetSuccessfulHitFx; // 0x23dc
	float c_fFxScaleSize; // 0x23e4
	float m_fLifeAfterDeathSecs; // 0x23e8
	ObjectProperty r_aDebugTarget; // 0x23ec
	ObjectProperty r_aDebugDestination; // 0x23f4
	ObjectProperty r_aDebugNextNav; // 0x23fc
	FVector r_vDebugNextNavMeshPoint; // 0x2404
	FVector r_vDebugSpreadoutLocation; // 0x2410
	int32_t r_nDebugHearingRange; // 0x241c
	int32_t r_nDebugSightRange; // 0x2420
	int32_t r_nDebugFOV; // 0x2424
	FString r_sDebugAction; // 0x2428
	FString r_sDebugName; // 0x2438
	FString r_sDebugFactory; // 0x2448
	FVector s_vOneWayMovement; // 0x2458
	FVector r_vDown; // 0x2464
	float m_fMountFrictionMultiplier; // 0x2470
	float m_fBackpedalPct; // 0x2474
	float m_fMountBackpedalPct; // 0x2478
	ObjectProperty r_TargetActor; // 0x247c
	ObjectProperty r_LockedTarget; // 0x2484
	int32_t c_TargetMethod; // 0x248c
	ObjectProperty s_Pets[0x8]; // 0x2490
	ObjectProperty m_PetOwner; // 0x24d0
	int32_t c_ActivePets; // 0x24d8
	ObjectProperty s_LastAttacker; // 0x24dc
	ObjectProperty s_LastAttacked; // 0x24e4
	ObjectProperty m_CurrentMeleeTarget; // 0x24ec
	ObjectProperty r_Owner; // 0x24f4
	int32_t s_nSpawnerDeviceInstId; // 0x24fc
	int32_t s_nSpawnerDeviceModeId; // 0x2500
	FDeathInfo r_DeathInfo; // 0x2504
	int32_t r_nResetCharacter; // 0x2528
	int32_t r_nLiveRespawn; // 0x252c
	FName DyingStateName; // 0x2530
	int32_t m_nSpawnLocationId; // 0x2538
	int32_t m_nSpawnTableId; // 0x253c
	int32_t m_nSpawnTableDetailId; // 0x2540
	ObjectProperty m_LastPlayerStart; // 0x2544
	float m_fStandingHeight; // 0x254c
	float m_fStandingRadius; // 0x2550
	float m_fTargetCylinderHeight; // 0x2554
	float m_fTargetCylinderRadius; // 0x2558
	int32_t r_nPacingType; // 0x255c
	ObjectProperty m_CurrentUseActor; // 0x2560
	float m_fBaseTranslationOffset; // 0x2568
	float m_fCrouchTranslationOffset; // 0x256c
	float r_fInCombatTime; // 0x2570
	float m_fInCombatTime; // 0x2574
	float m_fBaseCombatTime; // 0x2578
	float m_fPhaseChangeTime; // 0x257c
	float m_fPhaseChangedTimeStamp; // 0x2580
	float m_PhaseChangeRemainingTime; // 0x2584
	int32_t r_nPhase; // 0x2588
	int32_t c_PreviousPhase; // 0x258c
	int32_t m_nInitHUDOverlayDisplayMask; // 0x2590
	float m_InitHUDOverlayEnemyViewDist; // 0x2594
	TArray<ObjectProperty> m_SimpleTransitionerNodes; // 0x2598
	TArray<ObjectProperty> m_FireBlendNodes; // 0x25a8
	TArray<ObjectProperty> m_CombatWarinessBlendNodes; // 0x25b8
	TArray<ObjectProperty> m_PostureBlendNodes; // 0x25c8
	TArray<ObjectProperty> m_AnimNodeBlendByIntroductions; // 0x25d8
	TArray<ObjectProperty> m_DeviceModeBlendNodes; // 0x25e8
	TArray<ObjectProperty> m_SkelControlLocks; // 0x25f8
	TArray<ObjectProperty> m_HitReactionAnimNode; // 0x2608
	TArray<ObjectProperty> m_AimOffSetChargeAnimNode; // 0x2618
	TArray<ObjectProperty> m_MirroredSkelControls; // 0x2628
	TArray<FName> m_SkelControlLockNames; // 0x2638
	ObjectProperty m_UpperBodyAnimNode; // 0x2648
	ObjectProperty m_UpperBodyAnimNodeSequence; // 0x2650
	ObjectProperty m_FullBodyAnimNode; // 0x2658
	int32_t m_nYawOffset; // 0x2660
	FPostureStack m_PostureStack; // 0x2664
	float m_fKnockbackMultiplier; // 0x2688
	float m_fRBPushStrengthMultiplier; // 0x268c
	FVector2D m_fRBPushStrengthRange; // 0x2690
	FRotator m_PreviousNetReceiveRotation; // 0x2698
	FRotator m_TargetNetReceiveRotation; // 0x26a4
	float m_RotationInterpRate; // 0x26b0
	int32_t m_nNetRotationCount; // 0x26b4
	int32_t m_nSmoothedRemoteViewPitch; // 0x26b8
	int32_t m_nPreviousReceivedRemoteViewPitch; // 0x26bc
	int32_t m_nTargetRemoteViewPitch; // 0x26c0
	float m_PitchInterpRate; // 0x26c4
	int32_t m_nNetViewPitchCount; // 0x26c8
	float m_fSmoothCorrectionRate; // 0x26cc
	int32_t r_nViewYawWhenRotationLocked; // 0x26d0
	int32_t m_UnpackedRemoteViewPitch; // 0x26d4
	int32_t r_nPackedPitchYawForSpectate; // 0x26d8
	FPointer m_pStatsTracker; // 0x26dc
	float m_fRewindEndFailsafeTTL; // 0x26e4
	ObjectProperty m_LastDamager; // 0x26e8
	int32_t m_LastDamagerTimeStamp; // 0x26f0
	TArray<FPawnDamagerStruct> s_Damagers; // 0x26f4
	ObjectProperty m_LastKnockbacker; // 0x2704
	float m_fJumpLandingTime; // 0x270c
	float m_fCeilingTraceDistForWallJumping; // 0x2710
	float m_fHorseJumpHeightIncrease; // 0x2714
	ObjectProperty r_StunTauntTarget; // 0x2718
	TArray<ObjectProperty> m_LocalTouchingRespawnBeacons; // 0x2720
	ObjectProperty c_LocalPC; // 0x2730
	ComponentProperty c_PlayerDropShadow; // 0x2738
	ObjectProperty c_PlayerDropShadowTemplate; // 0x2740
	ObjectProperty c_PlayerDropShadowMIC; // 0x2748
	float c_fPlayerDropShadowFade; // 0x2750
	FName c_PlayerDropShadowSocketName; // 0x2754
	UTgControlModule* DefaultControlModuleClass; // 0x275c
	float m_fFaceRotationInterpTime; // 0x2764
	float m_fRemainingFaceRotationInterpTime; // 0x2768
	int32_t r_nBigTeleportCount; // 0x276c
	int32_t c_nTickCheckingState; // 0x2770
	ObjectProperty c_AssetManifestGroup; // 0x2774
	ObjectProperty c_LevelUpFX; // 0x277c
	int32_t c_nLevelUpFxId; // 0x2784
	int32_t s_nKillCombo; // 0x2788
	int32_t s_nKillStreak; // 0x278c
	int32_t r_nProfileId; // 0x2790
	int32_t r_nSettingsOverrideId; // 0x2794
	int32_t r_nSkinId; // 0x2798
	int32_t r_nWeaponSkinId; // 0x279c
	int32_t r_nMountSkinId; // 0x27a0
	int32_t r_nWardSkinId; // 0x27a4
	int32_t r_nDeathStampSkinId; // 0x27a8
	int32_t r_nDeathCardId; // 0x27ac
	int32_t s_nInitialPlayerId; // 0x27b0
	int32_t c_nHeadSkinId; // 0x27b4
	FPointer m_pAmBot; // 0x27b8
	FPointer m_pAmSkin; // 0x27c0
	FPointer m_pAmWeaponSkin; // 0x27c8
	FPointer m_pAmMountSkin; // 0x27d0
	TArray<FPointer> m_pAmAllSkins; // 0x27d8
	int32_t c_StunnedPostureID; // 0x27e8
	int32_t c_FearedPostureID; // 0x27ec
	int32_t c_DisarmedPostureID; // 0x27f0
	TArray<ObjectProperty> s_Viewers; // 0x27f4
	ObjectProperty m_CurrentFlag; // 0x2804
	float m_fLastCTFVolumeTimestamp; // 0x280c
	float m_fDamageTakenRTPC; // 0x2810
	float m_fDamageTakenMax; // 0x2814
	float m_fDamageTakenMaxSustainDuration; // 0x2818
	float m_fDamageTakenRTPCSustainDuration; // 0x281c
	TArray<FPawnDamageMitigator> s_PawnDamageMitigators; // 0x2820
	TArray<FOverlayInfo> m_OverlayInfosBody; // 0x2830
	TArray<FOverlayInfo> m_OverlayInfosWeapon; // 0x2840
	ObjectProperty m_ExecuteOverlayMaterialFriend; // 0x2850
	ObjectProperty m_ExecuteOverlayMaterialEnemy; // 0x2858
	ObjectProperty m_ShieldOverlayMaterialFriend; // 0x2860
	ObjectProperty m_ShieldOverlayMaterialEnemy; // 0x2868
	ObjectProperty m_ImmortalOverlayMaterialFriend; // 0x2870
	ObjectProperty m_ImmortalOverlayMaterialEnemy; // 0x2878
	ObjectProperty m_CharacterCustom1OverlayMaterial; // 0x2880
	ObjectProperty m_FreezeOverlayMaterial; // 0x2888
	TArray<FSilhouetteInfo> m_SilhouetteInfos; // 0x2890
	UTgSilhouetteComponent* m_SilhouetteClass; // 0x28a0
	TArray<int32_t> m_IgnoredHitPulseIndicies; // 0x28a8
	float m_fFadeOutTime; // 0x28b8
	float m_fFadeOutSpeed; // 0x28bc
	ObjectProperty m_DeathAnimFX; // 0x28c0
	float m_fRemainingHitReactionPulseTime; // 0x28c8
	float m_fHitReactionPulseTime; // 0x28cc
	float m_fDisorientSpinRate; // 0x28d0
	float s_fMaxRelevancyDistanceSquared; // 0x28d4
	float m_fMaxSmoothNetUpdateDist; // 0x28d8
	float m_fNoSmoothNetUpdateDist; // 0x28dc
	float m_fSmoothNetUpdateTime; // 0x28e0
	FVector m_vMeshTranslationOffset; // 0x28e4
	float m_fInitialHealthPercent; // 0x28f0
	float c_fHUDHealthPercent; // 0x28f4
	float m_fDamageDealtPercentAI; // 0x28f8
	float m_fDamageTakenPercentAI; // 0x28fc
	TArray<FHealingInfo> s_RecentHealList; // 0x2900
	float m_fRecentHealExpireTime; // 0x2910
	int32_t m_nCloneExpirationAttacksCount; // 0x2914
	float m_fCloneLeashRange; // 0x2918
	float m_fCloneExpirationTime; // 0x291c
	ObjectProperty r_CloneParentPRI; // 0x2920
	ObjectProperty m_WeaponMesh; // 0x2928
	ComponentProperty m_BodyMesh; // 0x2930
	ComponentProperty m_HeadMesh; // 0x2938
	int32_t m_HeadSilhouetteIndex; // 0x2940
	int32_t m_HeadOverlayIndex; // 0x2944
	int32_t r_nBodyMeshOverride; // 0x2948
	int32_t r_nHeadMeshOverride; // 0x294c
	int32_t c_nCurrentHeadMeshID; // 0x2950
	float m_BobFootstepFactor; // 0x2954
	float Bob; // 0x2958
	float m_fVerticalBob; // 0x295c
	float m_fBobRate; // 0x2960
	float LandBob; // 0x2964
	float JumpBob; // 0x2968
	float AppliedBob; // 0x296c
	float BobTime; // 0x2970
	FVector WalkBob; // 0x2974
	float m_fOldZ; // 0x2980
	FVector AimSpot; // 0x2984
	FVector AimNoise; // 0x2990
	float m_fAimSpotsetLastRefresh; // 0x299c
	float m_fAimNoiseLastRefresh; // 0x29a0
	float m_fAimPitch; // 0x29a4
	ComponentProperty m_TakeHitAudioComponent; // 0x29a8
	ComponentProperty m_PainAudioComponent; // 0x29b0
	ObjectProperty m_TakeHitAkEvent; // 0x29b8
	ObjectProperty m_TakeHeadShotAkEvent; // 0x29c0
	ObjectProperty c_HealPlayAkEvent; // 0x29c8
	ObjectProperty c_HealStopAkEvent; // 0x29d0
	ObjectProperty m_PainAkEvent; // 0x29d8
	float m_fLastPainEvent; // 0x29e0
	float m_fPainEventCooldown; // 0x29e4
	ObjectProperty m_FireAnimNode; // 0x29e8
	ObjectProperty m_StealthPulseEffectGroup; // 0x29f0
	float m_fStealthPulseTime; // 0x29f8
	float r_fKnockedBackFrictionOverride; // 0x29fc
	FVector r_vKnockedBackVelocityOverride; // 0x2a00
	float m_fExtraLifestealOneTime; // 0x2a0c
	int32_t r_nIncomingImpactCount; // 0x2a10
	float r_fReloadScale; // 0x2a14
	ObjectProperty r_HealTarget; // 0x2a18
	ComponentProperty c_HealingBeamPSC; // 0x2a20
	ComponentProperty m_OutlineMesh; // 0x2a28
	ObjectProperty m_OutlineMaterial; // 0x2a30
	ObjectProperty m_NearObjectiveVolume; // 0x2a38
	float r_fLeapAirControl; // 0x2a40
	float m_fBaseLeapAirControl; // 0x2a44
	float m_fKnockAirControl; // 0x2a48
	TArray<ObjectProperty> m_HomeguardVolumes; // 0x2a4c
	float m_LastHomeguardTime; // 0x2a5c
	ComponentProperty m_MountMesh; // 0x2a60
	int32_t m_nMountPostureId; // 0x2a68
	float s_fEndStealthDamage; // 0x2a6c
	float s_fDamageTakenDuringStealth; // 0x2a70
	float m_fHUDOverlayZOffset; // 0x2a74
	float m_fHUDOverlayMorphMountedZOffset; // 0x2a78
	int32_t m_lastDamageSourceSlot; // 0x2a7c
	float m_fLastMoveTime; // 0x2a80
	ObjectProperty s_AttachedProjBlocker; // 0x2a84
	float m_fScaleMesh; // 0x2a8c
	float m_fScaleMeshChangePerSecond; // 0x2a90
	float m_fScaleCollisionHeight; // 0x2a94
	float m_fScaleCollisionHeightChangePerSecond; // 0x2a98
	float m_fScaleCollisionRadius; // 0x2a9c
	float m_fScaleCollisionRadiusChangePerSecond; // 0x2aa0
	int32_t m_IntroPostureID; // 0x2aa4
	float r_fIntroTime; // 0x2aa8
	float r_fIntroOffset; // 0x2aac
	float s_fIntroStartTime; // 0x2ab0
	float m_fIntroProgress; // 0x2ab4
	FName r_ReplicatedState; // 0x2ab8
	TArray<ObjectProperty> m_RespawnNodes; // 0x2ac0
	TArray<ObjectProperty> m_BuffCampIntroNodes; // 0x2ad0
	FName m_IntialIntroState; // 0x2ae0
	FName m_nmIntroWhiteOutParamName; // 0x2ae8
	float m_fIntroWhiteOutScale; // 0x2af0
	float m_fIntroWhiteOutUpTime; // 0x2af4
	float m_fIntroWhiteOutDownTime; // 0x2af8
	int32_t r_nInsideTaskForceBase; // 0x2afc
	ObjectProperty m_HealFX3P; // 0x2b00
	ObjectProperty m_ShieldFX3P; // 0x2b08
	float c_fNextTakeHitDisplayGroupTimestamp; // 0x2b10
	float c_fNextTakeHitDisplayDelay; // 0x2b14
	ObjectProperty r_PolymorphInstigator; // 0x2b18
	int32_t m_PrePolymorphHealth; // 0x2b20
	int32_t m_PolymorphMaxHealth; // 0x2b24
	TArray<FRigidBodyImpactInfo> m_RigidBodyImpacts; // 0x2b28
	float c_fServerTimeStamp; // 0x2b38
	float m_fZoomDistOverride; // 0x2b3c
	float m_fZoomDurationOverride; // 0x2b40
	float r_fLastReplicatedInhandAccuracy; // 0x2b44
	FDouble c_fLastUnoccludedWeaponSoundTimestamp; // 0x2b48
	float c_fThreatBehind; // 0x2b50
	float c_fThreatInEffectiveRange; // 0x2b54
	float c_fThreatDistanceSquared; // 0x2b58
	float c_fThreatDistance; // 0x2b5c
	float c_fThreatFocused; // 0x2b60
	float c_fThreatFocusTarget; // 0x2b64
	float c_fThreatSeenBy; // 0x2b68
	float c_fThreatDamaged; // 0x2b6c
	float c_fThreatOcclusion; // 0x2b70
	float c_fThreatBinnedOcclusion; // 0x2b74
	float c_fThreatShotAt; // 0x2b78
	float c_fThreatUlt; // 0x2b7c
	float c_fThreatLevelValue; // 0x2b80
	float c_fThreatDecayResidual; // 0x2b84
	float c_fLastThreatLevelValue; // 0x2b88
	float c_fDBGThreatDistanceFeet; // 0x2b8c
	ObjectProperty m_GameplayCurves; // 0x2b90
	int32_t m_nSuccessfulHitSpecialFXId; // 0x2b98
	TArray<FName> LLegBoneNames; // 0x2b9c
	TArray<FName> RLegBoneNames; // 0x2bac
	TArray<FName> LArmBoneNames; // 0x2bbc
	TArray<FName> RArmBoneNames; // 0x2bcc
	TArray<FName> HeadBoneNames; // 0x2bdc
	FName m_HeadShotBoneName; // 0x2bec
	float m_fMountScaleOverride; // 0x2bf4
	ObjectProperty m_LandCameraShake; // 0x2bf8
	ObjectProperty m_JumpCameraShake; // 0x2c00
	float m_f1PTransitionFireDelay; // 0x2c08
	float m_f1PTransitionFireDelayRemaining; // 0x2c0c
	float m_fEnergyChargeMultiplier; // 0x2c10
	float c_fRecreateTrackedProjectilesTimer; // 0x2c14
	float m_fRecoilSmoothRate; // 0x2c18
	FRotator m_rCurrentRecoil; // 0x2c1c
	FRotator m_rSmoothedRecoil; // 0x2c28
	FRotator m_rLastAppliedRecoil; // 0x2c34
	float m_fSettleDelay; // 0x2c40
	float m_fSettleSpeed; // 0x2c44
	float m_fRecoilSettleDeltaTimeOverflow; // 0x2c48
	float m_fRecoilSmoothDeltaTimeOverflow; // 0x2c4c
	FRotator m_rVisualRecoil; // 0x2c50
	float m_fVisualRecoilApplicationTime; // 0x2c5c
	float m_fVisualRecoilDuration; // 0x2c60
	ObjectProperty m_VisualRecoilApplied; // 0x2c64
	FName r_nmVoicePkg; // 0x2c6c
	Fdword r_eVoicePref; // 0x2c74
	TArray<FKnockbackHit> m_vPendingWallKnockbackHits; // 0x2c78
	TArray<int32_t> m_nPendingPlayerKnockbackHitPawnIds; // 0x2c88
	float m_fTimeOnNonBaseableSurface; // 0x2c98
	float m_fNonBaseableSurfaceAirControlDuration; // 0x2c9c
	float m_fNonBaseableSurfaceLerpTime; // 0x2ca0
	float m_fNonBaseableSurfaceRampUpMult; // 0x2ca4
	float m_fNonBaseableSurfaceMaxMoveAmount; // 0x2ca8
	float m_fNonBaseableSurfaceGraceTime; // 0x2cac
	float m_fNonBaseableSurfaceExitMaxVelocity; // 0x2cb0
	float m_fNonBaseableSurfaceControlPercent; // 0x2cb4
	TArray<ObjectProperty> m_OriginalMaterialsBody; // 0x2cb8
	TArray<ObjectProperty> m_OriginalMaterialsHead; // 0x2cc8
	TArray<ObjectProperty> m_OriginalMaterialsWeapon; // 0x2cd8
	TArray<ObjectProperty> m_ReplacementMICsBody; // 0x2ce8
	TArray<ObjectProperty> m_ReplacementMICsHead; // 0x2cf8
	TArray<ObjectProperty> m_ReplacementMICsWeapon; // 0x2d08
	float m_fEyeHeightSmoothFactor; // 0x2d18
	ObjectProperty m_DeathFFWaveform; // 0x2d1c
	ObjectProperty m_BuffDevice; // 0x2d24
	ObjectProperty m_PrincessPresenceDebuffDevice; // 0x2d2c
	ObjectProperty m_PrincessPresenceBuffDevice; // 0x2d34
	float m_fFlourishTimeout; // 0x2d3c
	int32_t c_nCurrentVGSPlaying; // 0x2d40
	TArray<DelegateProperty> m_SingleUseOn3pTransitionDelegates; // 0x2d44
	TArray<DelegateProperty> m_SingleUseOnPhysTweenEndedDelegates; // 0x2d54
	TArray<DelegateProperty> m_SingleUseOnJumpDelegates; // 0x2d64
	ObjectProperty m_MountCastFX3P; // 0x2d74
	ObjectProperty m_MountSummonFX3P; // 0x2d7c
	FVector c_vForced3pAdditionalOffset; // 0x2d84
	FVector c_v3pOffsetTest; // 0x2d90
	FVector c_v3pOffsetTestMounted; // 0x2d9c
	FVector c_vMountCameraOffset[0x3]; // 0x2da8
	FVector m_vCameraOverrideLocation; // 0x2dcc
	FString m_sBotCodeNameOverride; // 0x2dd8
	float m_fHazardDistance; // 0x2de8
	float m_fHazardRating; // 0x2dec
	float c_fSimModMoveSpeedToSave; // 0x2df0
	float c_fSavedSimModMoveSpeed; // 0x2df4
	float c_fSimModGravityToSave; // 0x2df8
	float c_fSavedSimModGravity; // 0x2dfc
	float m_fSteepTerrainWalkableFloorZ; // 0x2e00
	float m_fSteepTerrainSlowMultiplierSmall; // 0x2e04
	float m_fSteepTerrainSlowMultiplierMid; // 0x2e08
	float m_fSteepTerrainSlowMultiplierLarge; // 0x2e0c
	float m_fSteepTerrainSlopeZMidBreakpoint; // 0x2e10
	ObjectProperty m_CameraInvisFX3P; // 0x2e14
	TArray<ObjectProperty> m_TouchingIndoorVolumes; // 0x2e1c
	int32_t s_nMctsPlayerId; // 0x2e2c
	float m_fHitBoneValidation; // 0x2e30
	TArray<int32_t> m_nExtraTimerBarEqpSlots; // 0x2e34
	ComponentProperty m_CachedPositionHistoryServerComponent; // 0x2e44
	ObjectProperty m_CallbackContainer; // 0x2e4c
	TArray<ObjectProperty> m_PawnMods; // 0x2e54
	FName m_nmAppliedBlindPostProcess; // 0x2e64
	DelegateProperty __On3pTransitionEvent__Delegate; // 0x2e6c
	DelegateProperty __OnPhysTweenEndEvent__Delegate; // 0x2e7c
	DelegateProperty __OnJumpEvent__Delegate; // 0x2e8c
};

struct UUIComponent_Interactable : UUIComponent {
	ObjectProperty m_mcInteractable; // 0x118
	TArray<ObjectProperty> m_mcRolloverObjects; // 0x120
	ObjectProperty m_mcSelected; // 0x130
	char m_bSelected : 1; // 0x138
	char m_bShouldHighlightOnRollover : 1; // 0x138
	UIDISPLAYTYPE m_eInteractionType; // 0x13c
};

struct UMaterialExpressionDesaturation : UMaterialExpression {
	FExpressionInput Input; // 0xb0
	FExpressionInput Percent; // 0xe4
	FLinearColor LuminanceFactors; // 0x118
};

struct UTgAIBehaviorAction_SelectLaneCombatTarget_LastAttacker : UTgAIBehaviorAction {
	char bSkipPawnNotify : 1; // 0x94
	char bMustBeHittable : 1; // 0x94
	ECombatTargetType IgnoreTargetType; // 0x98
};

struct UTgDamageType : UDamageType {
	char m_bImpulseMesh : 1; // 0x90
	char m_bDisableRagdoll : 1; // 0x90
	char m_bEnableMotors : 1; // 0x90
	char m_bShouldRagdollAfterDeathAnim : 1; // 0x90
	char m_bCanPlayDeathSpecialFXOnDefaultDeath : 1; // 0x90
	char m_bHarvestMaterialParameters : 1; // 0x90
	char m_bFreezeAnimsOnDeath : 1; // 0x90
	char m_bIgnorePersonalShields : 1; // 0x90
	char m_bIsLatent : 0; // 0x90
	char m_bIsAOE : 0; // 0x90
	char m_bDismountVictim : 0; // 0x90
	char m_bPreventHitDirectionNotify : 0; // 0x90
	float m_bMinImpulse; // 0x94
	float m_bMaxImpulse; // 0x98
	float m_bMinUpKick; // 0x9c
	float m_bMaxUpKick; // 0xa0
	TArray<FName> m_nmDeathAnimNames; // 0xa4
	TArray<FName> m_nmDeathFlailAnimNames; // 0xb4
	float m_fMinAngularVelocity; // 0xc4
	float m_fMaxAngularVelocity; // 0xc8
	int32_t m_nDeathSpecialFXId; // 0xcc
	FName m_nmDeathSpecialFXSocket; // 0xd0
	ObjectProperty m_OverrideMaterial; // 0xd8
	float m_fLifeAfterDeathSeconds; // 0xe0
	float m_fHideAfterDeathSeconds; // 0xe4
	int32_t m_nFadeOutSpecialFXId; // 0xe8
	TArray<FName> ActivateSkelControlListOnDeath; // 0xec
	ObjectProperty m_TakeHitAkEvent; // 0xfc
	ObjectProperty m_TakeHeadShotAkEvent; // 0x104
	UTgDamageType* m_LatentDamageType; // 0x10c
	ObjectProperty m_LeftCameraShake; // 0x114
	ObjectProperty m_RightCameraShake; // 0x11c
	ObjectProperty m_ForwardCameraShake; // 0x124
	ObjectProperty m_BackwardCameraShake; // 0x12c
	ObjectProperty m_BackwardRightCameraShake; // 0x134
	ObjectProperty m_BackwardLeftCameraShake; // 0x13c
	ObjectProperty m_ForwardRightCameraShake; // 0x144
	ObjectProperty m_ForwardLeftCameraShake; // 0x14c
};

struct ATgRepInfo_TaskForce : ATeamInfo {
	FString c_fsName; // 0x2a0
	int32_t r_nTeamId; // 0x2b0
	int32_t r_nLeaderPlayerId; // 0x2b4
	char r_nTaskForce; // 0x2b8
	TgMapTeam r_MapTeam; // 0x2b9
	int32_t s_nTaskForceChatId; // 0x2bc
	int32_t s_nStrikeForceId; // 0x2c0
	int32_t s_nTaskTeamNum; // 0x2c4
	FColor m_Color; // 0x2c8
	char r_bIsSurrendering : 1; // 0x2cc
	char r_bSpectator : 1; // 0x2cc
	char m_bDestroyOnEmpty : 1; // 0x2cc
	char r_bIsAttacking : 1; // 0x2cc
	int32_t s_nPlayerStartCount; // 0x2d0
	TArray<FTGTEAM_ENTRY> m_TeamPlayers; // 0x2d4
	TArray<FTGTEAM_ENTRY> m_TeamBots; // 0x2e4
	TArray<ObjectProperty> m_Factories; // 0x2f4
	TArray<ObjectProperty> m_MinionFactories; // 0x304
	TArray<FTEAMTIMEMANAGER_ENTRY> s_TeamTimerManagers; // 0x314
	ObjectProperty s_MinimapManager; // 0x324
	int32_t r_nScore; // 0x32c
	float r_fTickets; // 0x330
	int32_t r_nPhaseTickets; // 0x334
	float r_fSecondaryScore; // 0x338
	int32_t r_nScorePercent; // 0x33c
	int32_t r_nGoldBuffCount; // 0x340
	float r_fUltBuffPerc; // 0x344
	int32_t s_nGodVisionMask; // 0x348
	TArray<FGLOBALEFFECT_ENTRY> m_GlobalEffectGroups; // 0x34c
	int32_t m_nTowersKilled; // 0x35c
	int32_t m_nPhoenixCount; // 0x360
	int32_t r_nGodKillCount; // 0x364
	int32_t m_nLastGodIndex; // 0x368
	int32_t m_nLastGodList; // 0x36c
	ObjectProperty r_RespawnBeaconExit; // 0x370
	int32_t c_nScoreOverride; // 0x378
};

struct UUIComponent_RewardPanelEntry : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcValue; // 0x12c
	ObjectProperty m_mcMultiplier; // 0x134
	ObjectProperty m_mcBoosterWeaponIcon; // 0x13c
	ObjectProperty m_mcDailyQueueBonusIcon; // 0x144
	ObjectProperty m_mcItemIcon; // 0x14c
	ObjectProperty m_mcVIPIcon; // 0x154
	ObjectProperty m_mcBonusIcon; // 0x15c
};

struct ANxCylindricalForceField : ANxForceField {
	float RadialStrength; // 0x2d4
	float RotationalStrength; // 0x2d8
	float LiftStrength; // 0x2dc
	float ForceRadius; // 0x2e0
	float ForceTopRadius; // 0x2e4
	float LiftFalloffHeight; // 0x2e8
	float EscapeVelocity; // 0x2ec
	float ForceHeight; // 0x2f0
	float HeightOffset; // 0x2f4
	char UseSpecialRadialForce : 1; // 0x2f8
	FPointer Kernel; // 0x2fc
};

struct UUIHudMap : UTgGfxScene {
	int32_t m_nDepth; // 0x1ec
	char m_bInit : 1; // 0x1f0
	char m_bScroll : 1; // 0x1f0
	char m_bHovering : 1; // 0x1f0
	float m_fSize; // 0x1f4
	float m_fZoom; // 0x1f8
	float m_fZoomMax; // 0x1fc
	float m_fZoomRate; // 0x200
	float m_fCursorRate; // 0x204
	float m_fCursorSafeBound; // 0x208
	float m_fCursorPanBound; // 0x20c
	float m_fRadius; // 0x210
	float m_fMouseX; // 0x214
	float m_fMouseY; // 0x218
	float m_fScrollX; // 0x21c
	float m_fScrollY; // 0x220
	float m_fOffsetX; // 0x224
	float m_fOffsetY; // 0x228
	float m_fGamepadX; // 0x22c
	float m_fGamepadY; // 0x230
	float m_fGamepadCursorX; // 0x234
	float m_fGamepadCursorY; // 0x238
	float m_fLocalPulseTimer; // 0x23c
	FString m_sPingName; // 0x240
	FString m_sNamedAreaName; // 0x250
	FVector m_vBoundsCenter; // 0x260
	FVector m_vBoundsExtents; // 0x26c
	float m_fZoomAnimTimer; // 0x278
	float m_fZoomAnimDuration; // 0x27c
	FVector2D m_v2ZoomAnimScrollStart; // 0x280
	FVector2D m_v2ZoomAnimScrollEnd; // 0x288
	float m_fZoomAnimStart; // 0x290
	float m_fZoomAnimEnd; // 0x294
	TArray<FUIPING_DATA> m_Pings; // 0x298
	TArray<FUIPING_DATA> m_NamedAreas; // 0x2a8
	ObjectProperty m_mcMap; // 0x2b8
	ObjectProperty m_mcMapZoom; // 0x2c0
	ObjectProperty m_mcMapGroup; // 0x2c8
	ObjectProperty m_mcMapScroll; // 0x2d0
	ObjectProperty m_mcMapImage[0x2]; // 0x2d8
	ObjectProperty m_mcMapCursor; // 0x2e8
	ObjectProperty m_mcMapCursorLineX; // 0x2f0
	ObjectProperty m_mcMapCursorLineY; // 0x2f8
	ObjectProperty m_mcMapNamedAreas; // 0x300
	ObjectProperty m_mcLegend; // 0x308
	ObjectProperty m_mcLegendItem[0x2]; // 0x310
	ObjectProperty m_mcChampions; // 0x320
	ObjectProperty m_mcChampion[0x8]; // 0x328
	ObjectProperty m_mcChampionIcon[0x8]; // 0x368
	ObjectProperty m_mcChampionCount[0x8]; // 0x3a8
	ObjectProperty m_mcScoreboard; // 0x3e8
	ObjectProperty m_mcLocalPulse; // 0x3f0
	ObjectProperty m_mcLocalPlayer; // 0x3f8
	ObjectProperty m_mcCoordinates; // 0x400
	ObjectProperty m_mcWaypoint[0x4]; // 0x408
	ObjectProperty m_mcCoordXA[0x8]; // 0x428
	ObjectProperty m_mcCoordXB[0x8]; // 0x468
	ObjectProperty m_mcCoordYA[0x8]; // 0x4a8
	ObjectProperty m_mcCoordYB[0x8]; // 0x4e8
	ObjectProperty m_mcTeam[0x4]; // 0x528
	FBGTEAM_PLAYER m_mcPlayer[0x4]; // 0x548
	ObjectProperty m_mcPlayerMute[0x4]; // 0x688
	ObjectProperty m_mcPlayerVoice[0x4]; // 0x6a8
};

struct UTgDeviceFire_DeployOnTarget : UTgDeviceFire {
	ObjectProperty m_TargetHit; // 0x268
	char m_bDeployAtFeet : 1; // 0x270
};

struct ATgDeploy_DeployableLinked : ATgDeploy_MatchParentFireMode {
	ObjectProperty m_ParentDeployable; // 0x46c
};

struct UUIScene_UIPlay : UUIScene {
	FPointer VfTable_IDelayQueueInterface; // 0x1cc
	ObjectProperty m_mcHeaderIcon; // 0x1d4
	ObjectProperty m_mcMultiqueueCursor; // 0x1dc
	ObjectProperty m_mcMultiqueueUpDownIndicator; // 0x1e4
	ObjectProperty m_mcCrossPlayNotification; // 0x1ec
	ObjectProperty m_pQuickPlay; // 0x1f4
	ObjectProperty m_pRanked; // 0x1fc
	ObjectProperty m_pTraining; // 0x204
	ObjectProperty m_pCustom; // 0x20c
	ObjectProperty m_pDevQueues; // 0x214
	ObjectProperty m_pJoinQueueButton; // 0x21c
	ObjectProperty m_pRegion; // 0x224
};

struct UUIComponent_HeaderTab : UUIComponent_Display {
	ObjectProperty m_pCTA; // 0x124
	ObjectProperty m_mcTwitchCTA; // 0x12c
};

struct ATgPawn_Illusion : ATgPawn_Ying {
	FPointer VfTable_ITgInterface_YingIllusion; // 0x319c
	EDecoyAIState m_eAIState; // 0x31a4
	INITIALIZEABLE_BOOL r_eLifelike; // 0x31a5
	float m_fDamageScale; // 0x31a8
	float m_fDamageAccumulator; // 0x31ac
	float m_fDamageAccumulatorReductionRatePerSec; // 0x31b0
	float m_fFlickerDamageMin; // 0x31b4
	float m_fFlickerDamageMax; // 0x31b8
	float m_fDamageAccumulatorCap; // 0x31bc
	float m_fPrevFrameHealth; // 0x31c0
	float m_fTimedDestroyedFXDuration; // 0x31c4
	float m_fTimedDestroyedFXMeshHiddenTime; // 0x31c8
	float m_fEarlyShatterRecheckTime; // 0x31cc
	char m_bCanShatterEarly : 1; // 0x31d0
	char m_bUsingReplacementMIC : 1; // 0x31d0
	char m_bSpringBloomFlag : 1; // 0x31d0
	char c_BeamsCreated : 1; // 0x31d0
	float r_fShatterDelay; // 0x31d4
	ObjectProperty m_CachedShatterDevice; // 0x31d8
	TArray<DelegateProperty> s_OnDeathDelegates; // 0x31e0
	ObjectProperty r_Targets[0x2]; // 0x31f0
	TArray<ObjectProperty> c_Beams; // 0x3200
	int32_t r_nBeamSpawnIterator; // 0x3210
	DelegateProperty __DestroyedEvent__Delegate; // 0x3214
};

struct UParticleModuleAttractorBoneSocket : UParticleModuleAttractorBase {
	EBoneSocketAttractorFalloffType FalloffType; // 0x68
	ELocationBoneSocketDestination DestinationType; // 0x69
	ELocationBoneSocketDestSelectionMethod SelectionMethod; // 0x6a
	char bParticleLifeRelative : 1; // 0x6c
	char bAttractAlongLengthOfBone : 1; // 0x6c
	FRawDistributionFloat FalloffExponent; // 0x70
	FRawDistributionFloat Range; // 0x94
	FRawDistributionFloat Strength; // 0xb8
	FRawDistributionFloat CollisionRadius; // 0xdc
	FRawDistributionFloat DragCoefficient; // 0x100
	FRawDistributionFloat DragRadius; // 0x124
	FVector UniversalOffset; // 0x148
	TArray<FAttractLocationBoneSocketInfo> SourceLocations; // 0x154
	FName SkelMeshActorParamName; // 0x164
};

struct ATgDevice_Advance : ATgDevice_Charge {
	char m_bHasCharged : 1; // 0xa78
	char r_bHasAerialAssault : 1; // 0xa78
};

struct USeqAct_AndGate : USequenceAction {
	char bOpen : 1; // 0x108
	TArray<char> LinkedOutputFiredStatus; // 0x10c
	TArray<FPointer> LinkedOutputs; // 0x11c
};

struct UInterpTrackToggle : UInterpTrack {
	TArray<FToggleTrackKey> ToggleTrack; // 0xa0
	char bActivateSystemEachUpdate : 1; // 0xb0
	char bActivateWithJustAttachedFlag : 1; // 0xb0
	char bFireEventsWhenForwards : 1; // 0xb0
	char bFireEventsWhenBackwards : 1; // 0xb0
	char bFireEventsWhenJumpingForwards : 1; // 0xb0
};

struct UUIComponent_SummerEventRewards : UUIComponent_Display {
	ObjectProperty m_mcRewardTrack; // 0x124
	ObjectProperty m_pItemPreviewStack; // 0x12c
	ObjectProperty m_pRewardItems; // 0x134
};

struct UTgAIBehaviorAction_FollowCombatTarget : UTgAIBehaviorAction_MoveToTarget {
	TG_EQUIP_POINT DeviceSlot; // 0x9c
};

struct UInterpTrackAkRTPC : UInterpTrackFloatBase {
	FString Param; // 0xb8
};

struct UParticleModuleUberRainDrops : UParticleModuleUberBase {
	float LifetimeMin; // 0x78
	float LifetimeMax; // 0x7c
	FVector StartSizeMin; // 0x80
	FVector StartSizeMax; // 0x8c
	FVector StartVelocityMin; // 0x98
	FVector StartVelocityMax; // 0xa4
	float StartVelocityRadialMin; // 0xb0
	float StartVelocityRadialMax; // 0xb4
	FVector ColorOverLife; // 0xb8
	float AlphaOverLife; // 0xc4
	char bIsUsingCylinder : 1; // 0xc8
	char bPositive_X : 1; // 0xc8
	char bPositive_Y : 1; // 0xc8
	char bPositive_Z : 1; // 0xc8
	char bNegative_X : 1; // 0xc8
	char bNegative_Y : 1; // 0xc8
	char bNegative_Z : 1; // 0xc8
	char bSurfaceOnly : 1; // 0xc8
	char bVelocity : 0; // 0xc8
	char bRadialVelocity : 0; // 0xc8
	float PC_VelocityScale; // 0xcc
	FVector PC_StartLocation; // 0xd0
	float PC_StartRadius; // 0xdc
	float PC_StartHeight; // 0xe0
	CylinderHeightAxis PC_HeightAxis; // 0xe4
	FVector StartLocationMin; // 0xe8
	FVector StartLocationMax; // 0xf4
};

struct URB_Handle : UActorComponent {
	ComponentProperty GrabbedComponent; // 0x88
	FName GrabbedBoneName; // 0x90
	int32_t SceneIndex; // 0x98
	char bInHardware : 1; // 0x9c
	char bRotationConstrained : 1; // 0x9c
	char bInterpolating : 1; // 0x9c
	FPointer HandleData; // 0xa0
	FPointer KinActorData; // 0xa8
	float LinearDamping; // 0xb0
	float LinearStiffness; // 0xb4
	FVector LinearStiffnessScale3D; // 0xb8
	FVector LinearDampingScale3D; // 0xc4
	float AngularDamping; // 0xd0
	float AngularStiffness; // 0xd4
	FVector Destination; // 0xd8
	FVector StepSize; // 0xe4
	FVector Location; // 0xf0
};

struct UTgAnimMetaData_KeyframedDisplayGroup : UAnimMetaData {
	FName DisplayGroup; // 0x60
	float m_fStartTime; // 0x68
	float m_fEndTime; // 0x6c
	TG_EQUIP_POINT EqpSlot; // 0x70
	char m_bDisplayGroupActivated : 1; // 0x74
};

struct UInterpTrackInstEvent : UInterpTrackInst {
	float LastUpdatePosition; // 0x60
};

struct ATgPawn_SiegeWall_Base : ATgPawn_SiegeWall {
	char m_bHasAlertedLowHealth : 1; // 0x2f54
	float m_fLowHealthTrigger; // 0x2f58
};

struct UReachSpec : UObject {
	FPointer NavOctreeObject; // 0x60
	int32_t Distance; // 0x68
	FVector Direction; // 0x6c
	ObjectProperty Start; // 0x78
	FActorReference End; // 0x80
	int32_t CollisionRadius; // 0x98
	int32_t CollisionHeight; // 0x9c
	int32_t reachFlags; // 0xa0
	int32_t MaxLandingVelocity; // 0xa4
	char bPruned; // 0xa8
	char PathColorIndex; // 0xa9
	char bAddToNavigationOctree : 1; // 0xac
	char bCanCutCorners : 1; // 0xac
	char bCheckForObstructions : 1; // 0xac
	char bSkipPrune : 1; // 0xac
	char bDisabled : 1; // 0xac
	TArray<UReachSpec*> PruneSpecList; // 0xb0
	ObjectProperty BlockedBy; // 0xc0
};

struct UMaterialExpressionTransformPosition : UMaterialExpression {
	FExpressionInput Input; // 0xb0
	EMaterialPositionTransformSource TransformSourceType; // 0xe4
	EMaterialPositionTransform TransformType; // 0xe5
};

struct ALandscapeGizmoActiveActor : ALandscapeGizmoActor {
	TMap<None, None> SelectedData; // 0x280
};

struct UTgAIBehaviorCondition_IsTooFarFromLane : UTgAIBehaviorCondition {
	ECombatTargetType TargetType; // 0x98
};

struct UMaterialExpressionTextureSample : UMaterialExpression {
	ObjectProperty Texture; // 0xb0
	FExpressionInput Coordinates; // 0xb8
	FExpressionInput TextureObject; // 0xec
};

struct UTgDeviceForm_CounterAttack : UTgDeviceForm {
	TArray<ObjectProperty> m_DarklordNodes3p; // 0x28c
	TArray<ObjectProperty> m_DarklordNodes1p; // 0x29c
};

struct UTgAIUtilityFilter_DistanceFromTarget : UTgAIUtilityFilter {
	float DistanceCutoff; // 0xc0
	char bInverse : 1; // 0xc4
};

struct ATgDevice_Pounce : ATgDevice_Charge {
	ObjectProperty m_CachedBlades; // 0xa78
	char m_bHasBounced : 1; // 0xa80
};

struct ACullDistanceVolume : AVolume {
	TArray<FCullDistanceSizePair> CullDistances; // 0x2bc
	char bEnabled : 1; // 0x2cc
};

struct UTgCameraModule_ThirdPerson : UTgCameraModule {
	FVector vBaseCameraOffset; // 0x68
	FVector vForcedCameraOffset; // 0x74
	FVector vCurrentCameraOffset; // 0x80
	FVector vPreviousCameraOffset; // 0x8c
	float fCameraOffsetLerpDuration; // 0x98
	float fCameraOffsetLerpTimer; // 0x9c
	float fZoomFactorInterp; // 0xa0
	float fZoomFactor; // 0xa4
	float fZoomStep; // 0xa8
	float fZoomMax; // 0xac
	float fMountZoomMax; // 0xb0
	float fZoomMin; // 0xb4
	FVector2D fZoom3pPercentFromTo; // 0xb8
	float fZoomDuration; // 0xc0
	float fZoomDurationOverride; // 0xc4
	float fZoomUsedTime; // 0xc8
	CameraPerspectiveType ePreviousPerspectiveType; // 0xcc
	CameraPerspectiveType ePerspectiveType; // 0xcd
	char bForce3PView : 1; // 0xd0
	FVector vServerCorrectionDelta; // 0xd4
	FVector vAvgServerCorrectionDelta; // 0xe0
	FVector vLastDesiredLocation; // 0xec
	FServerCorrectionSmoothingParams CorrectionSmoothing; // 0xf8
};

struct UParticleModuleSizeScaleByTime : UParticleModuleSizeBase {
	FRawDistributionVector SizeScaleByTime; // 0x68
	char bEnableX : 1; // 0x8c
	char bEnableY : 1; // 0x8c
	char bEnableZ : 1; // 0x8c
};

struct USeqAct_Timer : USequenceAction {
	float ActivationTime; // 0x108
	float Time; // 0x10c
};

struct UUIComponent_HnHEventStore : UUIComponent_Display {
	char m_bOwnsBlessing : 1; // 0x124
	ObjectProperty m_mcItemName; // 0x128
	ObjectProperty m_mcItemDesc; // 0x130
	ObjectProperty m_mcItemRarity; // 0x138
	ObjectProperty m_mcItemAvatarContainer; // 0x140
	ObjectProperty m_mcBlessingWarning; // 0x148
	ObjectProperty m_pPurchaseCurrency; // 0x150
	ObjectProperty m_pPurchaseGamepadKey; // 0x158
	ObjectProperty m_pPurchaseButton; // 0x160
	ObjectProperty m_pItemAvatar; // 0x168
	ObjectProperty m_pItemIcon; // 0x170
	ObjectProperty m_pPreviewMusicButton; // 0x178
	ObjectProperty m_pStoreItems; // 0x180
	ObjectProperty m_pPurchaseButtonAction; // 0x188
	ObjectProperty m_pPreviewMusicButtonAction; // 0x190
};

struct ATriggerStreamingLevel : ATrigger {
	TArray<FLevelStreamingData> Levels; // 0x290
};

struct UTgDeviceForm_AccursedArm : UTgDeviceForm {
	char m_bShouldBeActive : 1; // 0x28c
	float m_fActivationTime; // 0x290
	float m_fCurrentActivationPercent; // 0x294
	ObjectProperty m_cachedWeaponMaterial; // 0x298
	ObjectProperty m_accursedArmMaterial; // 0x2a0
	FName m_nmUltimateActive; // 0x2a8
};

struct UUIComponent_PingIndicator : UUIComponent_Display {
	int32_t m_nMediumPingThreshold; // 0x124
	int32_t m_nHighPingThreshold; // 0x128
	FLinearColor m_LowPingColor; // 0x12c
	FLinearColor m_MediumPingColor; // 0x13c
	FLinearColor m_HighPingColor; // 0x14c
	float m_fFadeDelay; // 0x15c
	float m_fFadeTimer; // 0x160
};

struct ATgDevice_HealingPotion : ATgDevice {
	char s_bQueueDetonation : 1; // 0xa04
	char m_bAttemptingToDetonate : 1; // 0xa04
};

struct ATgDevice_ChainSequence : ATgDevice {
	int32_t m_nChainCount; // 0xa04
	float m_fChainResetTimer; // 0xa08
	float m_fChainResetDuration; // 0xa0c
};

struct ATgDevice_ShellShield : ATgDevice {
	char r_bHasHalfshell : 1; // 0xa04
	char c_bHalfShellFXOn : 1; // 0xa04
};

struct UPostProcessChain : UObject {
	TArray<ObjectProperty> Effects; // 0x60
};

struct ATgPawn_Barik : ATgPawn_Character {
	ObjectProperty m_CachedBurninate; // 0x3160
};

struct UUIComponent_HealthBar_Overlay_Player : UUIComponent_HealthBar_Overlay {
	ObjectProperty m_mcImmortalBracketLeft; // 0x248
	ObjectProperty m_mcImmortalBracketRight; // 0x250
	ObjectProperty m_mcLexExecuteGuide; // 0x258
	float m_fImmortal; // 0x260
	char m_bInParty : 1; // 0x264
};

struct USceneCaptureComponent : UActorComponent {
	char bEnabled : 1; // 0x88
	char bEnablePostProcess : 1; // 0x88
	char bEnableFog : 1; // 0x88
	char bUseMainScenePostProcessSettings : 1; // 0x88
	char bSkipUpdateIfTextureUsersOccluded : 1; // 0x88
	char bSkipUpdateIfOwnerOccluded : 1; // 0x88
	char bSkipRenderingDepthPrepass : 1; // 0x88
	FColor ClearColor; // 0x8c
	ESceneCaptureViewMode ViewMode; // 0x90
	int32_t SceneLOD; // 0x94
	float FrameRate; // 0x98
	ObjectProperty PostProcess; // 0x9c
	float MaxUpdateDist; // 0xa4
	float MaxViewDistanceOverride; // 0xa8
	float MaxStreamingUpdateDist; // 0xac
	FPointer CaptureInfo; // 0xb0
	FPointer ViewState; // 0xb8
	TArray<FPointer> PostProcessProxies; // 0xc0
};

struct AGameExplosionActor : AActor {
	char bHasExploded : 1; // 0x280
	char bExplodeMoreThanOnce : 1; // 0x280
	char bTrackExplosionParticleSystemLifespan : 1; // 0x280
	char bDrawDebug : 1; // 0x280
	ComponentProperty ExplosionLight; // 0x284
	ComponentProperty ExplosionRadialBlur; // 0x28c
	float LightFadeTime; // 0x294
	float LightFadeTimeRemaining; // 0x298
	float LightInitialBrightness; // 0x29c
	float RadialBlurFadeTime; // 0x2a0
	float RadialBlurFadeTimeRemaining; // 0x2a4
	float RadialBlurMaxBlurAmount; // 0x2a8
	ObjectProperty ExplosionTemplate; // 0x2ac
	ComponentProperty RadialImpulseComponent; // 0x2b4
	ObjectProperty InstigatorController; // 0x2bc
	ObjectProperty HitActorFromPhysMaterialTrace; // 0x2c4
	FVector HitLocationFromPhysMaterialTrace; // 0x2cc
	ObjectProperty Attachee; // 0x2d8
	ObjectProperty AttacheeController; // 0x2e0
	float DirectionalExplosionMinDot; // 0x2e8
	FVector ExplosionDirection; // 0x2ec
};

struct UUIComponent_ChestDisplayWithCTA : UUIComponent_Display {
	ObjectProperty m_pCTA; // 0x124
	ObjectProperty m_pChestDisplay; // 0x12c
};

struct ATgDevice_ChargeFernando : ATgDevice_Charge {
	float m_fCooldownReduction; // 0xa78
};

struct UTranslatorTag : UObject {
	FName Tag; // 0x60
};

struct UUIComponent_MatchLobbyHeader : UUIComponent_Display {
	ObjectProperty m_mcHeaderTime; // 0x124
	ObjectProperty m_mcHeaderTitle; // 0x12c
	ObjectProperty m_mcBonusTime; // 0x134
	ObjectProperty m_mcBonusTimer1; // 0x13c
	ObjectProperty m_mcBonusTimer2; // 0x144
	ObjectProperty m_TeamTips; // 0x14c
	ObjectProperty m_HeaderBlueTeamComp; // 0x154
	ObjectProperty m_HeaderRedTeamComp; // 0x15c
	UIMatchLobbyHeaderText m_eCurrentHeaderText; // 0x164
};

struct UArrowComponent : UPrimitiveComponent {
	FColor ArrowColor; // 0x24c
	float ArrowSize; // 0x250
	char bTreatAsASprite : 1; // 0x254
};

struct UGFxEvent_FSCommand : USequenceEvent {
	ObjectProperty Movie; // 0x128
	FString FSCommand; // 0x130
	ObjectProperty Handler; // 0x140
};

struct ATgGame_Paladins_Tutorial : ATgGame_Paladins_Siege {
	ETutorialState m_eCurrentState; // 0xa64
	ObjectProperty TutorialInfo; // 0xa68
	float m_fSetupPauseTime; // 0xa70
	char m_bSetupTimerPaused : 1; // 0xa74
	char m_bReceivedMovementAbility : 1; // 0xa74
	char m_bReachedJumpLowerArea : 1; // 0xa74
	char m_bReachedJumpUpperArea : 1; // 0xa74
	char m_bDamagedWithAlt : 1; // 0xa74
	char m_bDamagedWithBattle : 1; // 0xa74
	char m_bDamagedWithUlt : 1; // 0xa74
	char m_bPointCaptured : 1; // 0xa74
	char m_bWaitingForUIReady : 0; // 0xa74
	float m_fReceivedMoveForwardSeconds; // 0xa78
	float m_fReceivedMoveBackwardSeconds; // 0xa7c
	float m_fReceivedMoveLeftSeconds; // 0xa80
	float m_fReceivedMoveRightSeconds; // 0xa84
	float m_fVolumeStandTime; // 0xa88
	float m_fLastFrameDeltaTime; // 0xa8c
	ObjectProperty m_EndAnnouncerAudioEvent; // 0xa90
};

struct UTgGamePhase_SetHUD : UTgGamePhase {
	EHUDType m_eHUDType; // 0xb8
};

struct ATgStartPoint : APlayerStart {
	int32_t m_nMapObjectId; // 0x388
	int32_t m_nStartGroup; // 0x38c
	int32_t m_nReturnMapType; // 0x390
	float m_fStartRating; // 0x394
	float m_fCurrentRating; // 0x398
	float m_fResetRating; // 0x39c
	float m_fDecreaseRate; // 0x3a0
	TArray<ATgTeleporter*> m_ArrayOfFloats; // 0x3a4
	ObjectProperty m_TgTeleporter; // 0x3b4
};

struct UParticleModuleVelocityCone : UParticleModuleVelocityBase {
	FRawDistributionFloat Angle; // 0x6c
	FRawDistributionFloat Velocity; // 0x90
	FVector Direction; // 0xb4
};

struct ANxForceField : AActor {
	int32_t ExcludeChannel; // 0x280
	char bForceActive : 1; // 0x284
	FRBCollisionChannelContainer CollideWithChannels; // 0x288
	ERBCollisionChannel RBChannel; // 0x28c
	FPointer ForceField; // 0x290
	TArray<FPointer> ConvexMeshes; // 0x298
	TArray<FPointer> ExclusionShapes; // 0x2a8
	TArray<FPointer> ExclusionShapePoses; // 0x2b8
	FPointer U2NRotation; // 0x2c8
	int32_t SceneIndex; // 0x2d0
};

struct UPath_AlongLine : UPathConstraint {
	FVector Direction; // 0x6c
};

struct USeqAct_ActivateRemoteEvent : USequenceAction {
	ObjectProperty Instigator; // 0x108
	FName EventName; // 0x110
	char bStatusIsOk : 1; // 0x118
};

struct USeqAct_SetApexClothingParam : USequenceAction {
	char bEnableApexClothingSimulation : 1; // 0x108
};

struct UTgSeqEvent_InputReceived : USequenceEvent {
	char bAllowInputDisabling : 1; // 0x128
};

struct AFractureManager : AActor {
	int32_t FSMPartPoolSize; // 0x280
	char bEnableAntiVibration : 1; // 0x284
	char bEnableSpawnChunkEffectForRadialDamage : 1; // 0x284
	float DestroyVibrationLevel; // 0x288
	float DestroyMinAngVel; // 0x28c
	float ExplosionVelScale; // 0x290
	TArray<ObjectProperty> PartPool; // 0x294
	TArray<int32_t> FreeParts; // 0x2a4
	TArray<ObjectProperty> ActorsWithDeferredPartsToSpawn; // 0x2b4
};

struct ATgDevice_Latch : ATgDevice {
	FAimData m_FinalLatchTargeting; // 0xa04
	char m_bIsPulling : 1; // 0xa38
	char m_bHasPulledOnce : 1; // 0xa38
	char m_bCanApplyPull : 1; // 0xa38
	char m_bTeleportedAfterFiring : 1; // 0xa38
	int32_t m_nHoverState; // 0xa3c
	float m_fKillHoverFailsafe; // 0xa40
};

struct UApexDestructibleAsset : UApexAsset {
	FPointer MApexAsset; // 0x80
	TArray<ObjectProperty> Materials; // 0x88
	TArray<ObjectProperty> FractureMaterials; // 0x98
	char bPlaySingleFractureMaterialEffect : 1; // 0xa8
	char bHasUniqueAssetMaterialNames : 1; // 0xa8
	char bDynamic : 1; // 0xa8
	ObjectProperty DefaultPhysMaterial; // 0xac
	FPointer MDestructibleThumbnailComponent; // 0xb4
	FString CrumbleEmitterName; // 0xbc
	FString DustEmitterName; // 0xcc
	FNxDestructibleParameters DestructibleParameters; // 0xdc
};

struct UMaterialExpressionSphereMask : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
	FExpressionInput Radius; // 0x118
	FExpressionInput Hardness; // 0x14c
	float AttenuationRadius; // 0x180
	float HardnessPercent; // 0x184
};

struct UTgAIUtilityFilter_DistanceFromPawn : UTgAIUtilityFilter {
	float DistanceCutoff; // 0xc0
	char bInverse : 1; // 0xc4
};

struct UTgAnimNodeBlendByKnockdown : UTgAnimNodeBlendList {
	char m_bAdjustPlayRateByVelocity : 1; // 0x168
	float m_fVelocityMultiplier; // 0x16c
	float m_PreviewVelocity; // 0x170
	ObjectProperty m_TgPawn; // 0x174
	FName m_FaceDownAnimName; // 0x17c
	FName m_FaceUpAnimName; // 0x184
	FName m_FaceDownRecoverAnimName; // 0x18c
	FName m_FaceUpRecoverAnimName; // 0x194
};

struct UTgGameDC_Game : UTgDataChunk {
	ObjectProperty m_GameTimer; // 0x158
	ObjectProperty m_FriendTeamData; // 0x160
	ObjectProperty m_EnemyTeamData; // 0x168
	ObjectProperty m_GoldFury; // 0x170
	GAME_MODE_TYPE currentGameType; // 0x178
};

struct UUIScene_UIEOMLAcquisition : UUIScene {
	ObjectProperty m_pAcquisition; // 0x1cc
	ObjectProperty m_pAccountIcon; // 0x1d4
	ObjectProperty m_pChampionIcon; // 0x1dc
	ObjectProperty m_pQuestIcon; // 0x1e4
	ObjectProperty m_pPlacementIcon; // 0x1ec
	ObjectProperty m_pAcquisitionTitle; // 0x1f4
	ObjectProperty m_pTitle; // 0x1fc
	ObjectProperty m_pSubtitle; // 0x204
	ObjectProperty m_pOpenChestCount; // 0x20c
	ObjectProperty m_PurchasePrompt; // 0x214
	ObjectProperty m_CancelPrompt; // 0x21c
	ObjectProperty m_OpenChestPrompt; // 0x224
	ObjectProperty m_pCancelButton; // 0x22c
	ObjectProperty m_pPurchase; // 0x234
	ObjectProperty m_pDisplayItem; // 0x23c
	ObjectProperty m_pPriceA; // 0x244
	ObjectProperty m_pPriceB; // 0x24c
	char m_eQuestType; // 0x254
	ObjectProperty m_pItemData; // 0x258
	int32_t m_nItemIndex; // 0x260
	ObjectProperty m_grEOML; // 0x264
	ObjectProperty m_AcquisitionInput; // 0x26c
};

struct UTgDeviceForm_DimensionalLink : UTgDeviceForm {
	ObjectProperty m_CachedYingPawn; // 0x28c
};

struct UTgInventoryObject_Listen_ActiveWhileDeployableActive : UTgInventoryObject_Listen_ActiveWhileOffCooldown {
	int32_t m_nActiveDeployableCount; // 0xc8
};

struct UMaterialExpressionFresnel : UMaterialExpression {
	float Exponent; // 0xb0
	FExpressionInput Normal; // 0xb4
};

struct USeqAct_ToggleCinematicMode : USequenceAction {
	char bDisableMovement : 1; // 0x108
	char bDisableTurning : 1; // 0x108
	char bHidePlayer : 1; // 0x108
	char bDisableInput : 1; // 0x108
	char bHideHUD : 1; // 0x108
	char bDeadBodies : 1; // 0x108
	char bDroppedPickups : 1; // 0x108
};

struct ATgDeploy_ShieldSiegeUnit : ATgDeployable {
	FRotator m_InitRotation; // 0x46c
	ComponentProperty m_VFXCollisionMesh; // 0x478
	ObjectProperty m_CollisionProxy; // 0x480
	ObjectProperty m_WatchtowerFiremode; // 0x488
	ObjectProperty m_CachedWatchtowerCard; // 0x490
	float r_GroundSpeed; // 0x498
	char m_bOnlyHitOnce : 1; // 0x49c
	TArray<ObjectProperty> m_TouchingPawns; // 0x4a0
};

struct UUIComponent_MatchLobbyTeamTip : UUIComponent_Display {
	ObjectProperty m_mcTF; // 0x124
	ObjectProperty m_mcClassIcon; // 0x12c
	ObjectProperty m_mcClassIconFlash; // 0x134
};

struct UUIHudSkills : UTgGfxScene {
	char m_bPrompt : 1; // 0x1ec
	char m_bPrompt1Flagball : 1; // 0x1ec
	char m_bPrompt2 : 1; // 0x1ec
	char m_bPrompt3 : 1; // 0x1ec
	char m_bMounting : 1; // 0x1ec
	char m_bShownBurn : 1; // 0x1ec
	char m_bShouldShow : 1; // 0x1ec
	char m_bShownLoadout : 1; // 0x1ec
	FCastingInfo m_MountBar; // 0x1f0
	FCastingInfo m_CastBar[0x3]; // 0x214
	ObjectProperty m_mcPrompt; // 0x280
	ObjectProperty m_mcPrompt2; // 0x288
	ObjectProperty m_mcPrompt3; // 0x290
	int32_t m_nCredits; // 0x298
	ObjectProperty m_mcSpectatorCredits; // 0x29c
	ObjectProperty m_mcSpectatorItemsGroup; // 0x2a4
	ObjectProperty m_mcSpectatorCardsGroup; // 0x2ac
	FUICardDisplayGroup m_CardDisplayGroup; // 0x2b4
	int32_t m_nSpectatorMode; // 0x444
};

struct UTgAnimNotify_InterpolateMorphTargetWeight : UAnimNotify {
	FName MorphNodePoseName; // 0x68
	float MorphTargetWeight; // 0x70
	InterruptMorphTargetBehavior OnInterruptBehavior; // 0x74
	float InterruptMorphTargetWeight; // 0x78
	float InitialMorphTargetWeight; // 0x7c
};

struct UMaterialExpressionRotator : UMaterialExpression {
	FExpressionInput Coordinate; // 0xb0
	FExpressionInput Time; // 0xe4
	float CenterX; // 0x118
	float CenterY; // 0x11c
	float Speed; // 0x120
};

struct UPComMusicTheme : UObject {
	FMusicTrackStruct DefaultTrack; // 0x60
	TArray<FMusicEvent> MusicEvents; // 0x8c
};

struct UTgMarkComponent : UActorComponent {
	TArray<FTargetMark> s_MarkList; // 0x88
	TArray<ObjectProperty> s_MarkEffectGroup; // 0x98
	int32_t m_nHostItemId; // 0xa8
	char m_bStackEffects : 1; // 0xac
	char m_bRemoveMarksOnDeath : 1; // 0xac
	float m_fMarkDuration; // 0xb0
	int32_t m_nMaxMarks; // 0xb4
	int32_t m_nPhysicalType; // 0xb8
};

struct UTgSeqAct_SetUITextBox : USequenceAction {
	int32_t TextBox_MessageID; // 0x108
	char TextBox_TargetSecondary : 1; // 0x10c
	char TextBox_UseDuration : 1; // 0x10c
	char TextBox_AllowEscape : 1; // 0x10c
	AlertType TextBox_MessageType; // 0x110
};

struct ATgPawn_SiegeEngine_Wedge : ATgPawn_SiegeEngine_CaptureAndPayload {
	int32_t m_nCollisionMeshId; // 0x30d0
};

struct UTgSkeletalMeshComponent_Weapon : UTgSkeletalMeshComponent {
	FName m_nmFire; // 0x868
	FName m_nmFireLoop; // 0x870
	FName m_nmFireLoopTailSound; // 0x878
	char m_bDoNotPlayFireParticlesIfHidden : 1; // 0x880
	char m_bKillFiringLoopParticlesOnHidden : 1; // 0x880
	char m_bCanPlayFireParticles : 1; // 0x880
	char m_bCanPlayFireLoopParticles : 1; // 0x880
	char m_bCanPlayFireSounds : 1; // 0x880
	char m_bCanPlayFireLoopSounds : 1; // 0x880
	int32_t m_nFireLoopActiveBitMask[0x5]; // 0x884
};

struct UTgDeviceFire_FlakInHand : UTgDeviceFire {
	int32_t m_BaseKnockback; // 0x268
};

struct UTgAIBehaviorCondition_IsCombatTargetOfType : UTgAIBehaviorCondition {
	ECombatTargetType TargetType; // 0x98
};

struct UUIComponent_YagorathAcidJuiceBar : UUIComponent_ProgressBarRadial {
	int32_t m_nThresholdZeroPercentFrame; // 0x148
	int32_t m_nThresholdHundredPercentFrame; // 0x14c
	ObjectProperty m_ThresholdBar; // 0x150
	float m_fMinAcidJuice; // 0x158
};

struct UAutoNavMeshPathObstacleUnregister : UObject {
	TScriptInterface<Class> PathObstacleRef; // 0x60
};

struct UChildConnection : UNetConnection {
	ObjectProperty Parent; // 0xb104
};

struct UTgAchievement_DeviceHitCombo : UTgAchievement {
	TArray<FDeviceHitComboEntry> m_Entries; // 0x94
};

struct ATgDeploy_AbsorptionField : ATgDeploy_Shield {
	float r_ControllerPitch; // 0x470
};

struct UActorFactoryStaticMesh : UActorFactory {
	ObjectProperty StaticMesh; // 0x9c
	FVector DrawScale3D; // 0xa4
};

struct UUIComponent_ImaniManaBar : UUIComponent_Display {
	ObjectProperty m_mcManaBar; // 0x124
	ObjectProperty m_mcManaBarMask; // 0x12c
	float m_fCachedMana; // 0x134
	char m_bClearcastActive : 1; // 0x138
	float m_fClearcastTimeNormalization; // 0x13c
	float m_fClearcastTimeRemaining; // 0x140
	int32_t m_nClearcastAnimationMaskFrame; // 0x144
};

struct ATgWeaponMeshActor_NinjaInhand : ATgWeaponMeshActor {
	char c_bSwapTracerIndices : 1; // 0x450
};

struct ATgDevice_NetherStep : ATgDevice_DoubleCharge {
	float m_fLowGravTime; // 0xa80
	float m_fLowGravMult; // 0xa84
};

struct UTgAnimBlendByPaladinsCharacter_Darklord : UTgAnimBlendByPaladinsCharacter {
	ObjectProperty m_CachedDarklordPawn; // 0x544
	char m_bTriggerUltKilledTargetRetrieve : 1; // 0x54c
	float m_fCounterAnimDelay; // 0x550
	float m_fCounterAnimTimeStamp; // 0x554
	int32_t m_nCounterAnimIndex; // 0x558
};

struct UParticleModulePhysicsVolumes : UParticleModuleWorldForcesBase {
	FRawDistributionFloat GlobalInfluence; // 0x68
	EParticleLevelInfluenceType LevelInfluenceType; // 0x8c
};

struct UUIScene_UIStoreFilterPopup : UUIScene {
	ObjectProperty m_pFilter; // 0x1cc
	ObjectProperty m_pSortOrderDropdown; // 0x1d4
	ObjectProperty m_pItemNotOwnedToggle; // 0x1dc
	ObjectProperty m_pItemAvailableToggle; // 0x1e4
	TArray<ObjectProperty> m_pRarityToggles; // 0x1ec
	ObjectProperty m_pConfirmButton; // 0x1fc
	ObjectProperty m_pBackButton; // 0x204
	ObjectProperty m_grFilter; // 0x20c
};

struct AGameCrowdPopulationManager : ACrowdPopulationManagerBase {
	FPointer VfTable_IInterface_NavigationHandle; // 0x280
	FCrowdSpawnInfoItem CloudSpawnInfo; // 0x288
	TArray<FCrowdSpawnInfoItem> ScriptedSpawnInfo; // 0x318
	ObjectProperty ActiveCrowdInfoVolume; // 0x328
	TArray<ObjectProperty> GlobalPotentialSpawnPoints; // 0x330
	float SplitScreenNumReduction; // 0x340
	float PlayerPositionPredictionTime; // 0x344
	float HeadVisibilityOffset; // 0x348
	UNavigationHandle* NavigationHandleClass; // 0x34c
	ObjectProperty NavigationHandle; // 0x354
	ObjectProperty QueryingAgent; // 0x35c
	TArray<FCrowdSpawnerPlayerInfo> PlayerInfo; // 0x364
	float LastPlayerInfoUpdateTime; // 0x374
	char bDebugSpawns : 1; // 0x378
	char bPauseCrowd : 1; // 0x378
};

struct UFluidSurfaceComponent : UPrimitiveComponent {
	ObjectProperty FluidMaterial; // 0x24c
	int32_t LightMapResolution; // 0x254
	FLightmassPrimitiveSettings LightmassSettings; // 0x258
	char EnableSimulation : 1; // 0x274
	char EnableDetail : 1; // 0x274
	char bTiling : 1; // 0x274
	char bPause : 1; // 0x274
	char bShowSimulationNormals : 1; // 0x274
	char bShowSimulationPosition : 1; // 0x274
	char bShowDetailNormals : 1; // 0x274
	char bShowDetailPosition : 1; // 0x274
	char bShowFluidSimulation : 0; // 0x274
	char bShowFluidDetail : 0; // 0x274
	char bTestRipple : 0; // 0x274
	char bTestRippleCenterOnDetail : 0; // 0x274
	int32_t SimulationQuadsX; // 0x278
	int32_t SimulationQuadsY; // 0x27c
	float GridSpacing; // 0x280
	float GridSpacingLowRes; // 0x284
	ObjectProperty TargetSimulation; // 0x288
	float GPUTessellationFactor; // 0x290
	float FluidDamping; // 0x294
	float FluidTravelSpeed; // 0x298
	float FluidHeightScale; // 0x29c
	float FluidUpdateRate; // 0x2a0
	float ForceImpact; // 0x2a4
	float ForceContinuous; // 0x2a8
	float LightingContrast; // 0x2ac
	ObjectProperty TargetDetail; // 0x2b0
	float DeactivationDistance; // 0x2b8
	int32_t DetailResolution; // 0x2bc
	float DetailSize; // 0x2c0
	float DetailDamping; // 0x2c4
	float DetailTravelSpeed; // 0x2c8
	float DetailTransfer; // 0x2cc
	float DetailHeightScale; // 0x2d0
	float DetailUpdateRate; // 0x2d4
	float NormalLength; // 0x2d8
	float TestRippleSpeed; // 0x2dc
	float TestRippleFrequency; // 0x2e0
	float TestRippleRadius; // 0x2e4
	float FluidWidth; // 0x2e8
	float FluidHeight; // 0x2ec
	float TestRippleTime; // 0x2f0
	float TestRippleAngle; // 0x2f4
	float DeactivationTimer; // 0x2f8
	float ViewDistance; // 0x2fc
	FVector SimulationPosition; // 0x300
	FVector DetailPosition; // 0x30c
	TArray<char> ClampMap; // 0x318
	TArray<ObjectProperty> ShadowMaps; // 0x328
	FLightMapRef LightMap; // 0x338
	FPointer FluidSimulation; // 0x340
};

struct UMcpClashMobManager : UMcpClashMobBase {
	FString ChallengeListUrl; // 0xe8
	FString ChallengeStatusUrl; // 0xf8
	FString ChallengeMultiStatusUrl; // 0x108
	FString AcceptChallengeUrl; // 0x118
	FString UpdateChallengeProgressUrl; // 0x128
	FString UpdateRewardProgressUrl; // 0x138
	ObjectProperty HTTPRequestChallengeList; // 0x148
	TArray<FMcpChallengeUserRequest> ChallengeUserRequests; // 0x150
	TArray<FMcpClashMobChallengeEvent> ChallengeEvents; // 0x160
	TArray<FMcpClashMobChallengeUserStatus> ChallengeUserStatus; // 0x170
	FMcpClashMobChallengeUserStatus TempChallengeUserStatus; // 0x180
	TArray<FMcpClashMobChallengeUserStatus> TempChallengeUserStatusArray; // 0x200
	TScriptInterface<Class> FileCache; // 0x210
	ObjectProperty FileDownloader; // 0x220
};

struct UUIPurchaseGems : UTgGfxScene {
	ObjectProperty m_GemPack[0x7]; // 0x1ec
	ObjectProperty m_SaleGemPack[0x7]; // 0x224
	ObjectProperty m_DLCPackAd; // 0x25c
	ObjectProperty m_CurrentBalance; // 0x264
	ObjectProperty m_CancelButton; // 0x26c
	ObjectProperty m_mcOverlay; // 0x274
	ObjectProperty m_mcTaxTF; // 0x27c
	ObjectProperty m_mcBlocker; // 0x284
	ObjectProperty m_DLCPackPrompt; // 0x28c
	FUIConsumablePack m_ConsumablePack[0x7]; // 0x294
	float m_fCurrBalanceOrigX; // 0x41c
	ObjectProperty m_pGroup; // 0x420
};

struct UTgEffectDamage : UTgEffect {
	int32_t m_nSimplifiedPropertyId; // 0xa0
	UTgDamageType* m_DamageTypeClass; // 0xa4
	UTgDamageType* m_DefaultDamageTypeClass; // 0xac
	float m_fDamageInitial; // 0xb4
	float m_fBonusDamageToShields; // 0xb8
	char m_bAllowLifeSteal : 1; // 0xbc
	char m_bCanBeBuffed : 1; // 0xbc
};

struct UTgInventoryObject_Listen_HealthByPercent : UTgInvListener {
	int32_t m_iAppliedStacks; // 0xc4
};

struct UTgInventoryObject_Listen_TagForLifesteal : UTgInventoryObject_Listen_AbilityProcBase {
	TArray<ObjectProperty> m_TagActors; // 0xcc
	TArray<float> m_TagTimes; // 0xdc
	ObjectProperty m_CachedFiremode; // 0xec
};

struct UTgAnimNodeStanceDualFire : UTgAnimNodeStanceTransitionerSynchronized {
	char m_bFireParityDirty : 1; // 0x188
	int32_t m_nDesiredStance; // 0x18c
};

struct UUIComponent_ItemColorPicker : UUIComponent_Display {
	ObjectProperty m_pColorEntries; // 0x124
};

struct UAnimNotify_CameraEffect : UAnimNotify {
	AEmitterCameraLensEffectBase* CameraLensEffect; // 0x68
};

struct UTgAchievement_ShieldInOneMatch : UTgAchievement {
	int32_t m_nDamageShielded; // 0x94
};

struct ATgPawn_Ruckus : ATgPawn_Character {
	float m_fDamageAccumulator; // 0x3160
	char r_bHexaFireFiring : 1; // 0x3164
	char m_bInstancedGemArmMaterials : 1; // 0x3164
	char m_bInstancedGemBodyMaterials : 1; // 0x3164
	char m_bRegisteredAudioCallbacks : 1; // 0x3164
	char m_bHasBoltGemFX : 1; // 0x3164
	float r_fBarrelSpinRate; // 0x3168
	float r_fBarrelSpinFactor; // 0x316c
	ObjectProperty m_CachedRuckusInhand; // 0x3170
	ObjectProperty m_CachedHexaFireGuns; // 0x3178
	ObjectProperty m_CachedEmitter; // 0x3180
	ObjectProperty m_CachedRepulsorField; // 0x3188
	TArray<ObjectProperty> m_ReplacementArmMICs; // 0x3190
	TArray<ObjectProperty> m_ReplacementBodyMICs; // 0x31a0
	int32_t m_nInstancedGemArmMaterialsHandle; // 0x31b0
	int32_t m_nInstancedGemBodyMaterialsHandle; // 0x31b4
	Fdword m_dwGemFXBusID; // 0x31b8
	float m_fVGSMatBlue; // 0x31bc
	ObjectProperty m_IdleFX; // 0x31c0
};

struct UTgLevelStreamingWorldDetail : ULevelStreaming {
	int32_t MinimumWorldDetailLevel; // 0x100
	int32_t MaximumWorldDetailLevel; // 0x104
	char CachedDetailCheck; // 0x108
	int32_t LastUpdateTime; // 0x10c
};

struct UParticleModuleMeshRotationRate_Seeded : UParticleModuleMeshRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x8c
};

struct ATgDevice_RaumSuck : ATgDevice {
	ObjectProperty m_CachedRaum; // 0xa04
	float m_fSuckTime; // 0xa0c
	int32_t m_nVirtualShardsOnFire; // 0xa10
	int32_t m_nCachedShards; // 0xa14
	float m_fHealthCacheThreshold; // 0xa18
	ERaumShardCache m_eCacheOn; // 0xa1c
};

struct ATgProj_Reversal : ATgProj_Simulated {
	float m_fDamageOverride; // 0x52c
};

struct ATgVolumePathNode : AVolumePathNode {
	char m_bIsAboveGround : 1; // 0x380
	FVector m_vGroundHitLocation; // 0x384
	float m_fGroundTraceDistance; // 0x390
	ComponentProperty m_GroundSprite; // 0x394
};

struct ATgGame_Paladins_Conquest : ATgGame_Paladins {
	float m_fSetupDuration; // 0x868
	float m_fGatherDuration; // 0x86c
	float m_fPushDuration; // 0x870
	float m_fCreditCacheGainDuration; // 0x874
	int32_t m_nLowCreditValue; // 0x878
	int32_t m_nMediumCreditValue; // 0x87c
	int32_t m_nHighCreditValue; // 0x880
	int32_t m_nRoundNumber; // 0x884
};

struct UShadowMap2D : UObject {
	ObjectProperty Texture; // 0x60
	FVector2D CoordinateScale; // 0x68
	FVector2D CoordinateBias; // 0x70
	FGuid LightGuid; // 0x78
	char bIsShadowFactorTexture : 1; // 0x88
	ComponentProperty Component; // 0x8c
	int32_t InstanceIndex; // 0x94
};

struct ATgDevice_PoppyBomb : ATgDevice {
	char r_bHasActiveProjectile : 1; // 0xa04
};

struct UTgInventoryObject_Listen_UseWhileCCed : UTgInventoryObject_Listen_Ability {
	char m_bIsActive : 1; // 0xcc
};

struct UMcpManagedValueManagerBase : UMcpServiceBase {
	FString McpManagedValueManagerClassName; // 0x78
	DelegateProperty __OnCreateSaveSlotComplete__Delegate; // 0x88
	DelegateProperty __OnReadSaveSlotComplete__Delegate; // 0x98
	DelegateProperty __OnUpdateValueComplete__Delegate; // 0xa8
	DelegateProperty __OnDeleteValueComplete__Delegate; // 0xb8
};

struct ATgDevice_Salvo : ATgDevice {
	ObjectProperty m_CachedInhand; // 0xa04
	ObjectProperty m_DrogozLeg2; // 0xa0c
};

struct ATgDevice_PrincessFSupport : ATgDevice {
	ObjectProperty m_CachedLian; // 0xa04
};

struct ATgDevice_OwlInhand : ATgDevice {
	ObjectProperty m_CachedSwapDevice; // 0xa04
	ObjectProperty m_CachedScopeDevice; // 0xa0c
	char bUsePerfectAccuracy : 1; // 0xa14
};

struct USoundMode : UObject {
	char bApplyEQ : 1; // 0x60
	FAudioEQEffect EQSettings; // 0x64
	TArray<FSoundClassAdjuster> SoundClassEffects; // 0x88
	float InitialDelay; // 0x98
	float FadeInTime; // 0x9c
	float Duration; // 0xa0
	float FadeOutTime; // 0xa4
};

struct UUIData_JsonFeatures : UUIData {
	TArray<FJsonFeatureData> m_vFeatures; // 0x64
};

struct UDistributionFloat : UComponent {
	FPointer VfTable_FCurveEdInterface; // 0x70
	char bCanBeBaked : 1; // 0x78
	char bIsDirty : 1; // 0x78
};

struct UEdCoordSystem : UObject {
	FMatrix M; // 0x60
	FString Desc; // 0xa0
};

struct UAnimNodeRandom : UAnimNodeBlendList {
	TArray<FRandomAnimInfo> RandomInfo; // 0x144
	ObjectProperty PlayingSeqNode; // 0x154
	int32_t PendingChildIndex; // 0x15c
	char bPickedPendingChildIndex : 1; // 0x160
};

struct UMaterialExpressionTextureSampleParameter : UMaterialExpressionTextureSample {
	FName ParameterName; // 0x120
	FGuid ExpressionGUID; // 0x128
	FName Group; // 0x138
};

struct USeqAct_AkPostEvent : USeqAct_Latent {
	int32_t Signal; // 0x120
	ObjectProperty Event; // 0x124
};

struct UUIComponent_LazarusShieldBar : UUIComponent_ShieldBar {
	ObjectProperty m_mcShieldBar; // 0x158
	ObjectProperty m_mcDamageBar; // 0x160
	ObjectProperty m_mcBar; // 0x168
	TArray<ObjectProperty> m_mcCharges; // 0x170
	TArray<ObjectProperty> m_mcChargeFills; // 0x180
	ObjectProperty m_mcTimer; // 0x190
	ObjectProperty m_mcTimerMask; // 0x198
	char m_bShowUltTimer : 1; // 0x1a0
	char m_bShieldBarVisibility : 1; // 0x1a0
	int32_t m_nCurrentCharges; // 0x1a4
};

struct ATgHelpTipActor : AActor {
	FString m_strTitle; // 0x280
	FString m_strTip; // 0x290
	int32_t m_nGameTipId; // 0x2a0
	float m_fAlpha; // 0x2a4
	float m_fAlphaNearDistanceSq; // 0x2a8
	float m_fAlphaFarDistanceSq; // 0x2ac
};

struct ATgDevice_NinjaF : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedKoga; // 0xa0c
	char m_bSprinting : 1; // 0xa14
	char c_bPendingRestart : 1; // 0xa14
};

struct UTgSeqEvent_UI_Event : USequenceEvent {
	int32_t mDeckNum; // 0x128
	int32_t mEmptyItemSlots; // 0x12c
};

struct UUIComponent_WinterEventStore : UUIComponent_Display {
	char m_bOwnsReceipt : 1; // 0x124
	ObjectProperty m_mcRecieptWarning; // 0x128
	ObjectProperty m_mcRecieptWarningTF0; // 0x130
	ObjectProperty m_mcRecieptWarningTF1; // 0x138
	ObjectProperty m_mcRecieptWarningIcon; // 0x140
	ObjectProperty m_mcCurrencyTF; // 0x148
	ObjectProperty m_mcButtonBG; // 0x150
	ObjectProperty m_pEventCurrency; // 0x158
	ObjectProperty m_pItemPreview; // 0x160
	ObjectProperty m_pUnlockButton; // 0x168
	ObjectProperty m_pStoreItems; // 0x170
	ObjectProperty m_pQuests; // 0x178
	ObjectProperty m_grStore; // 0x180
	ObjectProperty m_pUnlockAction; // 0x188
	FVector m_vBaseCameraOffset; // 0x190
	FVector m_vDeathStampCameraOffset; // 0x19c
};

struct ATgPickupFactory : APickupFactory {
	char bRotatingPickup : 1; // 0x3a4
	float YawRotationRate; // 0x3a8
	ObjectProperty TeamOwner[0x4]; // 0x3ac
	ComponentProperty BaseMesh; // 0x3cc
};

struct UUIComponent_GamepadKey : UUIComponent_Display {
	GamepadKeys m_eGamepadKey; // 0x124
	char m_bForceHidden : 1; // 0x128
};

struct UUIScene_UIPopupPlaySettings : UUIScene {
	ObjectProperty m_pPlaySettings; // 0x1cc
};

struct UObject {
	FPointer VfTableObject; // 0x0
	FPointer HashNext; // 0x8
	FQWord ObjectFlags; // 0x10
	FPointer HashOuterNext; // 0x18
	FPointer StateFrame; // 0x20
	ObjectProperty Linker; // 0x28
	FPointer LinkerIndex; // 0x30
	int32_t ObjectInternalInteger; // 0x38
	int32_t NetIndex; // 0x3c
	ObjectProperty Outer; // 0x40
	FName Name; // 0x48
	UObject* Class; // 0x50
	ObjectProperty ObjectArchetype; // 0x58
};

struct AVolume : ABrush {
	ObjectProperty AssociatedActor; // 0x2b0
	char bForcePawnWalk : 1; // 0x2b8
	char bProcessAllActors : 1; // 0x2b8
	char bExcludeNavmesh : 1; // 0x2b8
	char bPawnsOnly : 1; // 0x2b8
	char bLocalPawnsOnly : 1; // 0x2b8
};

struct UTgSeqAct_AITargetActor : USequenceAction {
	ObjectProperty CombatTarget; // 0x108
};

struct UTgInvListener_NearVengeanceTarget : UTgInvListener {
	char m_bIsActive : 1; // 0xc4
	ObjectProperty m_CachedVengeance; // 0xc8
};

struct UUIData_PopupInput : UUIData {
	FPointer VfTable_ITgCallbackInterface; // 0x64
	FString sTitle[0x2]; // 0x6c
	FString sButtonName[0x2]; // 0x8c
	ObjectProperty pButtonPriceData; // 0xac
	FPointer pButtonValidate[0x2]; // 0xb4
	ObjectProperty m_CallbackContainer; // 0xc4
};

struct UConsole : UInteraction {
	ObjectProperty ConsoleTargetPlayer; // 0xb0
	ObjectProperty DefaultTexture_Black; // 0xb8
	ObjectProperty DefaultTexture_White; // 0xc0
	FName ConsoleKey; // 0xc8
	FName TypeKey; // 0xd0
	int32_t MaxScrollbackSize; // 0xd8
	TArray<FString> Scrollback; // 0xdc
	int32_t SBHead; // 0xec
	int32_t SBPos; // 0xf0
	int32_t HistoryTop; // 0xf4
	int32_t HistoryBot; // 0xf8
	int32_t HistoryCur; // 0xfc
	FString History[0x10]; // 0x100
	char bNavigatingHistory : 1; // 0x200
	char bCaptureKeyInput : 1; // 0x200
	char bCtrl : 1; // 0x200
	char bEnableUI : 1; // 0x200
	char bAutoCompleteLocked : 1; // 0x200
	char bRequireCtrlToNavigateAutoComplete : 1; // 0x200
	char bIsRuntimeAutoCompleteUpToDate : 1; // 0x200
	FString TypedStr; // 0x204
	int32_t TypedStrPos; // 0x214
	TArray<FAutoCompleteCommand> ManualAutoCompleteList; // 0x218
	TArray<FAutoCompleteCommand> AutoCompleteList; // 0x228
	int32_t AutoCompleteIndex; // 0x238
	FAutoCompleteNode AutoCompleteTree; // 0x23c
	TArray<int32_t> AutoCompleteIndices; // 0x260
};

struct USeqVar_Player : USeqVar_Object {
	TArray<ObjectProperty> Players; // 0xc4
	char bAllPlayers : 1; // 0xd4
	int32_t PlayerIdx; // 0xd8
};

struct UTgAIBehaviorAction_SelectThreatCombatTarget : UTgAIBehaviorAction {
	char bMustBeHighestThreat : 1; // 0x94
	char bMustBeInLeash : 1; // 0x94
	char bMustBeInSightRadius : 1; // 0x94
	char bEffectGroupCategoryCheckInstigator : 1; // 0x94
	char bMustBeHittable : 1; // 0x94
	ECombatTargetType TargetType; // 0x98
	int32_t EffectCategoryId; // 0x9c
};

struct UNavMeshGoal_OutOfViewFrom : UNavMeshPathGoalEvaluator {
	FPointer GoalPoly; // 0x7c
	FVector OutOfViewLocation; // 0x84
	char bShowDebug : 1; // 0x90
};

struct UTgAnimNotify_ToggleRigidBodies : UAnimNotify {
	TArray<FName> BoneNames; // 0x68
	ERigidBodyFixationChange Effect; // 0x78
};

struct UTgAIBehaviorCondition_CombatTargetHealthPercentAfterAttack : UTgAIBehaviorCondition {
	TG_EQUIP_POINT DeviceSlot; // 0x98
	float HealthPct; // 0x9c
};

struct UTgSeqEvent_ControlPointOwnershipChange : USequenceEvent {
	int32_t PointIndex; // 0x128
};

struct UTgInvListener_RiderShield : UTgInvListener {
	TArray<FRiderShieldPerTargetHistory> s_PerTargetLockout; // 0xc4
};

struct UTgAnimBlendBySpeed : UAnimNodeBlendBySpeed {
	ObjectProperty m_TgPawn; // 0x178
	ESpeedType m_SpeedType; // 0x180
	TArray<FResetSynchGroup> ResetSynchGroups; // 0x184
	char m_bIgnoreRootMotion : 1; // 0x194
	char m_bIgnoreZVelocity : 1; // 0x194
	char m_bNotifyOwnerOnChildChange : 1; // 0x194
	char m_bEnableClassOverrides : 1; // 0x194
	TArray<int32_t> m_WalkChildren; // 0x198
	TArray<int32_t> m_SprintChildren; // 0x1a8
	TArray<float> m_BaseSpeed; // 0x1b8
	TArray<EPhysics> m_IgnoredPhysics; // 0x1c8
	int32_t m_nIndexToOverride; // 0x1d8
	float m_fBaseSpeedRecon; // 0x1dc
	float m_fBaseSpeedRobotics; // 0x1e0
	float m_fBaseSpeedAssault; // 0x1e4
	float m_fBaseSpeedMedic; // 0x1e8
	float m_fBaseSpeedReconFemale; // 0x1ec
	float m_fBaseSpeedRoboticsFemale; // 0x1f0
	float m_fBaseSpeedAssaultFemale; // 0x1f4
	float m_fBaseSpeedMedicFemale; // 0x1f8
	float m_fBaseSpeedReconCity; // 0x1fc
	float m_fBaseSpeedRoboticsCity; // 0x200
	float m_fBaseSpeedAssaultCity; // 0x204
	float m_fBaseSpeedMedicCity; // 0x208
	float m_fBaseSpeedReconFemaleCity; // 0x20c
	float m_fBaseSpeedRoboticsFemaleCity; // 0x210
	float m_fBaseSpeedAssaultFemaleCity; // 0x214
	float m_fBaseSpeedMedicFemaleCity; // 0x218
};

struct UTgGamePhase_TicketsOnKill : UTgGamePhase {
	int32_t m_nTicketsPerKill; // 0xb8
};

struct UUIComponent_AcquisitionCarousel : UUIComponent_Interactable {
	ObjectProperty m_mcLeftArrow; // 0x140
	ObjectProperty m_mcRightArrow; // 0x148
	ObjectProperty m_mcLeftButtonPrompt; // 0x150
	ObjectProperty m_mcRightButtonPrompt; // 0x158
	TArray<FUIAcquiredItem> m_CarouselItems; // 0x160
	TArray<ObjectProperty> m_mcNavDots; // 0x170
	int32_t m_nIndex; // 0x180
	float m_fNavDotCenter; // 0x184
	TArray<int32_t> m_ItemIdList; // 0x188
	TArray<int32_t> m_ItemQuantityList; // 0x198
	float m_fDotPlacementX; // 0x1a8
	float m_fDotWidth; // 0x1ac
	float m_fDotPadding; // 0x1b0
};

struct UParticleModuleRotationRate_Seeded : UParticleModuleRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x8c
};

struct UKMeshProps : UObject {
	FVector COMNudge; // 0x60
	FKAggregateGeom AggGeom; // 0x6c
};

struct ASplineLoftActor : ASplineActor {
	float ScaleX; // 0x2e8
	float ScaleY; // 0x2ec
	TArray<ComponentProperty> SplineMeshComps; // 0x2f0
	ObjectProperty DeformMesh; // 0x300
	TArray<ObjectProperty> DeformMeshMaterials; // 0x308
	float Roll; // 0x318
	FVector WorldXDir; // 0x31c
	FVector2D Offset; // 0x328
	char bSmoothInterpRollAndScale : 1; // 0x330
	char bAcceptsLights : 1; // 0x330
	ComponentProperty MeshLightEnvironment; // 0x334
	float MeshMaxDrawDistance; // 0x33c
};

struct ATgDevice_Transporter : ATgDevice {
	float m_fDowntraceDistance; // 0xa04
	FVector c_vCurrentTargeting2Location; // 0xa08
};

struct ATgDeploy_ProxyMineAdvanced : ATgDeployable {
	int32_t s_nTotalExplosions; // 0x46c
	char m_bInProximityRange : 1; // 0x470
};

struct ATgDevice_GuardianChainAttack : ATgDevice_ChainSequence {
	float m_fPauseAttackChainDuration; // 0xa10
	FVector m_vProjectileSpawnOffset2; // 0xa14
	FVector m_vProjectileSpawnOffset3; // 0xa20
};

struct USeqAct_AkSetState : USequenceAction {
	FString StateGroup; // 0x108
	FString State; // 0x118
};

struct ATgDevice_AndroxusInhand : ATgDevice {
	int32_t m_nAndroLeg2StackCount; // 0xa04
	float m_fQueueFireTime; // 0xa08
	float m_fQueueFireTimeThreshold; // 0xa0c
};

struct ARB_CylindricalForceActor : ARigidBodyBase {
	ComponentProperty RenderComponent; // 0x280
	float RadialStrength; // 0x288
	float RotationalStrength; // 0x28c
	float LiftStrength; // 0x290
	float LiftFalloffHeight; // 0x294
	float EscapeVelocity; // 0x298
	float ForceRadius; // 0x29c
	float ForceTopRadius; // 0x2a0
	float ForceHeight; // 0x2a4
	float HeightOffset; // 0x2a8
	char bForceActive : 1; // 0x2ac
	char bForceApplyToCloth : 1; // 0x2ac
	char bForceApplyToFluid : 1; // 0x2ac
	char bForceApplyToRigidBodies : 1; // 0x2ac
	char bForceApplyToProjectiles : 1; // 0x2ac
	FRBCollisionChannelContainer CollideWithChannels; // 0x2b0
};

struct UUIComponent_CountdownText : UUIComponent_Display {
	int32_t m_nTickHandle; // 0x124
};

struct UTextureMovie : UTexture {
	int32_t SizeX; // 0x100
	int32_t SizeY; // 0x104
	EPixelFormat Format; // 0x108
	TextureAddress AddressX; // 0x109
	TextureAddress AddressY; // 0x10a
	EMovieStreamSource MovieStreamSource; // 0x10b
	UCodecMovie* DecoderClass; // 0x10c
	ObjectProperty Decoder; // 0x114
	char Paused : 1; // 0x11c
	char Stopped : 1; // 0x11c
	char Looping : 1; // 0x11c
	char ResetOnLastFrame : 1; // 0x11c
	char AutoPlay : 1; // 0x11c
	FUntypedBulkData_Mirror Data; // 0x120
	FPointer ReleaseCodecFence; // 0x160
};

struct UTgSeqAct_ChangeScale : USequenceAction {
	float TargetScale; // 0x108
	FVector TargetScale3D; // 0x10c
	float TransitionTime; // 0x118
};

struct UInterpTrackHeadTracking : UInterpTrack {
	TArray<FHeadTrackingKey> HeadTrackingTrack; // 0xa0
	TArray<FName> TrackControllerName; // 0xb0
	float LookAtActorRadius; // 0xc0
	char bDisableBeyondLimit : 1; // 0xc4
	char bLookAtPawns : 1; // 0xc4
	float MaxLookAtTime; // 0xc8
	float MinLookAtTime; // 0xcc
	float MaxInterestTime; // 0xd0
	TArray<AActor*> ActorClassesToLookAt; // 0xd4
	TArray<FName> TargetBoneNames; // 0xe4
};

struct UUIData_EventChallengeSystem : UUIData {
	TArray<ObjectProperty> m_Regions; // 0x64
	TArray<FChallengeRegionConfig> m_RegionConfig; // 0x74
};

struct UUIComponent_ItemGeneric : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	TArray<ObjectProperty> m_mcDesc; // 0x12c
	ObjectProperty m_mcRarityOnly; // 0x13c
	ObjectProperty m_mcRarityCategory; // 0x144
	ObjectProperty m_mcSlotIcon; // 0x14c
	ObjectProperty m_mcNew; // 0x154
	ObjectProperty m_mcDiscountBanner; // 0x15c
	ObjectProperty m_pExclusiveBanner; // 0x164
	ObjectProperty m_mcLock; // 0x16c
	ObjectProperty m_mcEquipped; // 0x174
	ObjectProperty m_mcRarity; // 0x17c
	ObjectProperty m_mcGlow; // 0x184
	ObjectProperty m_mcAudio; // 0x18c
	ObjectProperty m_mcItemOwnedText; // 0x194
	ObjectProperty m_mcRented; // 0x19c
	ObjectProperty m_mcCardIcon; // 0x1a4
	ObjectProperty m_mcChestIcon; // 0x1ac
	ObjectProperty m_pCurrency; // 0x1b4
	ObjectProperty m_mcOwnedQuantity; // 0x1bc
	ObjectProperty m_mcChampion; // 0x1c4
	ObjectProperty m_mcChampionIcon; // 0x1cc
	ObjectProperty m_mcLimitedOffer; // 0x1d4
	ObjectProperty m_mcBoosterWeapon; // 0x1dc
	ObjectProperty m_pAvatarIcon; // 0x1e4
	ObjectProperty m_pCTA; // 0x1ec
	ObjectProperty m_mcBoosterSkin; // 0x1f4
	ObjectProperty m_mcLoadingFrame; // 0x1fc
	ObjectProperty m_mcDeathCard; // 0x204
};

struct UUIHudVoiceChat : UTgGfxScene {
	float m_fAlphaSpeaking; // 0x1ec
	float m_fAlphaNotSpeaking; // 0x1f0
	float m_fAlphaMuted; // 0x1f4
	float m_fFadeTime; // 0x1f8
	ObjectProperty m_mcAllyPlayers[0x5]; // 0x1fc
	ObjectProperty m_mcAllyPlayerLabels[0x5]; // 0x224
	ObjectProperty m_mcAllyPlayerSpeakIcons[0x5]; // 0x24c
	ObjectProperty m_mcAllyPlayerIcons[0x5]; // 0x274
	ObjectProperty m_mcEnemyPlayers[0x5]; // 0x29c
	ObjectProperty m_mcEnemyPlayerLabels[0x5]; // 0x2c4
	ObjectProperty m_mcEnemyPlayerSpeakIcons[0x5]; // 0x2ec
	ObjectProperty m_mcEnemyPlayerIcons[0x5]; // 0x314
	FString m_sAllyPlayerIcons[0x5]; // 0x33c
	FString m_sEnemyPlayerIcons[0x5]; // 0x38c
	FUniqueNetId m_LocalPlayerNetId; // 0x3dc
};

struct AGameCrowdBehaviorPoint : AGameCrowdInteractionPoint {
	float RadiusOfBehaviorEvent; // 0x28c
	float DurationOfBehaviorEvent; // 0x290
	ECrowdBehaviorEvent EventType; // 0x294
	char bRequireLOS : 1; // 0x298
	ObjectProperty Initiator; // 0x29c
};

struct ATgEffectManager : AActor {
	FDiminishedEffectInfo r_GroundSpeedMods; // 0x280
	FEffectListEntry r_ManagedEffectList[0x10]; // 0x290
	char c_byCounterList[0x10]; // 0x390
	EStunType s_eCachedStunType; // 0x3a0
	float m_fTimeRemaining[0x10]; // 0x3a4
	ObjectProperty c_Forms[0x10]; // 0x3e4
	char c_ActiveTimers : 1; // 0x464
	char r_bRelevancyNotify : 1; // 0x464
	FEffectQueueEntry r_EventQueue[0x10]; // 0x468
	int32_t r_nNextQueueIndex; // 0x668
	int32_t r_nFirstValidQueueIndex; // 0x66c
	int32_t c_nLastQueueIndex; // 0x670
	TArray<ObjectProperty> s_AppliedEffectGroups; // 0x674
	TArray<ObjectProperty> s_AppliedPermanentEffects; // 0x684
	ObjectProperty r_Owner; // 0x694
	ObjectProperty m_ApplyDamageEffectGroup; // 0x69c
	ObjectProperty m_ApplyDamageEffect; // 0x6a4
	ObjectProperty m_ApplyHealthEffectGroup; // 0x6ac
	ObjectProperty m_ApplyHealthEffect; // 0x6b4
	ObjectProperty m_ApplyManaEffectGroup; // 0x6bc
	ObjectProperty m_ApplyManaEffect; // 0x6c4
	ObjectProperty m_ApplyEnergyEffectGroup; // 0x6cc
	ObjectProperty m_ApplyEnergyEffect; // 0x6d4
	TArray<FStunStackEntry> s_StunStack; // 0x6dc
	TArray<FEnergyStunStackEntry> s_EnergyStunStack; // 0x6ec
	TArray<FReduceActiveCooldownEntry> s_ReduceActiveCooldownEffects; // 0x6fc
	float m_fMaxReduceActiveCooldownDelay; // 0x70c
	int32_t s_nSilenceCount; // 0x710
	int32_t s_nDisarmCount; // 0x714
	int32_t s_nCrippleCount; // 0x718
	int32_t s_nStealthCount; // 0x71c
	int32_t s_nDazeCount; // 0x720
	int32_t s_nMarkedCount; // 0x724
	int32_t s_nSlowCount; // 0x728
	int32_t s_bStealthDisabledCount; // 0x72c
	int32_t s_nOnFireCount; // 0x730
	int32_t s_nCCImmuneCount; // 0x734
	int32_t s_nBleedingCount; // 0x738
	int32_t s_nKnockbackCount; // 0x73c
	int32_t s_nRootCount; // 0x740
	int32_t s_nPoisonedCount; // 0x744
	int32_t s_nBoostCount; // 0x748
	int32_t s_nStealthInCombatCount; // 0x74c
	int32_t s_nWallHackCount; // 0x750
	int32_t s_nForceOutOfCombatCount; // 0x754
	int32_t s_nPolymorphCount; // 0x758
	int32_t s_nRevealedCount; // 0x75c
	int32_t s_nFlashCount; // 0x760
	int32_t s_nBanishCount; // 0x764
	int32_t s_nDruidMarkCount; // 0x768
	float s_fSpawnGuardTime; // 0x76c
	TArray<ObjectProperty> s_InstigatorWallReveals; // 0x770
	TArray<int32_t> s_nInstigatorWallRevealCount; // 0x780
	TArray<ObjectProperty> s_InstigatorStealthReveals; // 0x790
	TArray<int32_t> s_nInstigatorStealthRevealCount; // 0x7a0
	TArray<ObjectProperty> s_SlowCaps; // 0x7b0
	TArray<ObjectProperty> s_MaxHPDamageCaps; // 0x7c0
	TArray<ObjectProperty> s_CurHPDamageCaps; // 0x7d0
	TArray<ObjectProperty> s_HPDamageCaps; // 0x7e0
	int32_t s_FreezeBehaviorCount; // 0x7f0
	TArray<FDiminishingReturnsStackInfo> s_DiminishingReturnsStacks; // 0x7f4
	int32_t m_nDiminishingReturnMaxStacks; // 0x804
	TArray<ObjectProperty> s_ActiveDamageDeviceIntercepts; // 0x808
	TArray<ObjectProperty> s_ActiveDamageMitigationIntercepts; // 0x818
	TArray<ObjectProperty> s_ActiveOnLandedIntercepts; // 0x828
	TArray<ObjectProperty> s_ActiveWallGrabbedHits; // 0x838
	TArray<ObjectProperty> s_ActiveWallKnockbackHits; // 0x848
	TArray<ObjectProperty> s_ActivePlayerKnockbackHits; // 0x858
};

struct UOnlineVoiceInterfacePC : UObject {
	FPointer OwningSubsystem; // 0x60
	FPointer VoiceEnginePtr; // 0x68
	FLocalTalkerPC CurrentLocalTalker; // 0x70
	TArray<FRemoteTalker> RemoteTalkers; // 0x78
	TArray<FUniqueNetId> MuteList; // 0x88
	TArray<DelegateProperty> SpeechRecognitionCompleteDelegates; // 0x98
	TArray<DelegateProperty> TalkingDelegates; // 0xa8
	DelegateProperty __OnPlayerTalkingStateChange__Delegate; // 0xb8
	DelegateProperty __OnRecognitionComplete__Delegate; // 0xc8
};

struct ATgDevice_Reversal : ATgDevice {
	float m_fAccumulatedDamage; // 0xa04
	float m_fVengeanceDamage; // 0xa08
};

struct ATgDevice_CommanderLeap : ATgDevice_Leap {
	ObjectProperty m_Commander; // 0xa08
	ObjectProperty m_Scope; // 0xa10
};

struct UParticleModuleBeamModifier : UParticleModuleBeamBase {
	BeamModifierType ModifierType; // 0x68
	FBeamModifierOptions PositionOptions; // 0x6c
	FRawDistributionVector Position; // 0x70
	FBeamModifierOptions TangentOptions; // 0x94
	FRawDistributionVector Tangent; // 0x98
	char bAbsoluteTangent : 1; // 0xbc
	FBeamModifierOptions StrengthOptions; // 0xc0
	FRawDistributionFloat Strength; // 0xc4
};

struct UTgAIBehaviorCondition_DistanceFromAvoidableProjectile : UTgAIBehaviorCondition_DistanceBase {
	char bMustBeEnemy : 1; // 0x9c
};

struct UUILogin : UTgGfxScene {
	UILoginState m_eState; // 0x1ec
	char m_bAlreadyPlaysPaladins : 1; // 0x1f0
	int32_t m_nLoginAttempts; // 0x1f4
	float m_fAnimTimer; // 0x1f8
	float m_fLoadingTimer; // 0x1fc
	ObjectProperty m_mcFade; // 0x200
	ObjectProperty m_mcLogo; // 0x208
	ObjectProperty m_mcLoginInputCredentials; // 0x210
	ObjectProperty m_mcLoginInputCredentialsHeader; // 0x218
	ObjectProperty m_mcLoginInputCredentialsUsername; // 0x220
	ObjectProperty m_mcLoginInputCredentialsUsernameLabel; // 0x228
	ObjectProperty m_mcLoginInputCredentialsPassword; // 0x230
	ObjectProperty m_mcLoginInputCredentialsPasswordLabel; // 0x238
	ObjectProperty m_mcLoginInputCredentialsMessage; // 0x240
	ObjectProperty m_LoginInputCredentialsSubmit; // 0x248
	ObjectProperty m_LoginInputCredentialsCreateNewAccount; // 0x250
	ObjectProperty m_LoginInputCredentialsGoogleLogin; // 0x258
	ObjectProperty m_LoginInputCredentialsFacebookLogin; // 0x260
	ObjectProperty m_mcLoginWithQRCode; // 0x268
	ObjectProperty m_LoginInputCredentialsQRCodeLogin; // 0x270
	ObjectProperty m_LoginInputCredentialsBack; // 0x278
	ObjectProperty m_LoginInputCredentialsGroup; // 0x280
	ObjectProperty m_mcLoginInputAnononymous; // 0x288
	ObjectProperty m_mcLoginInputAnononymousPrompt; // 0x290
	ObjectProperty m_mcLoginInputAnononymousChangeUser; // 0x298
	ObjectProperty m_mcLoginInputAnononymousFeedback; // 0x2a0
	ObjectProperty m_LoginInputAnonymousSubmit; // 0x2a8
	ObjectProperty m_pChangeUserInput; // 0x2b0
	ObjectProperty m_mcCreateAccountInput; // 0x2b8
	ObjectProperty m_mcCreateAccountInputHeader; // 0x2c0
	ObjectProperty m_mcCreateAccountInputUsername; // 0x2c8
	ObjectProperty m_mcCreateAccountInputUsernameLabel; // 0x2d0
	ObjectProperty m_mcCreateAccountInputPassword1; // 0x2d8
	ObjectProperty m_mcCreateAccountInputPassword1Label; // 0x2e0
	ObjectProperty m_mcCreateAccountInputPassword2; // 0x2e8
	ObjectProperty m_mcCreateAccountInputPassword2Label; // 0x2f0
	ObjectProperty m_mcCreateAccountInputEmail; // 0x2f8
	ObjectProperty m_mcCreateAccountInputEmailLabel; // 0x300
	ObjectProperty m_mcCreateAccountAgeRequirement; // 0x308
	ObjectProperty m_CreateAccountAgeRequirementToggle; // 0x310
	ObjectProperty m_CreateAccountInputSubmit; // 0x318
	ObjectProperty m_mcCreateAccountInputMessage; // 0x320
	ObjectProperty m_CreateAccountBack; // 0x328
	ObjectProperty m_CreateAccountInputGroup; // 0x330
	ObjectProperty m_mcQueuePosition; // 0x338
	ObjectProperty m_mcQueueWait; // 0x340
	ObjectProperty m_CancelButton; // 0x348
	ObjectProperty m_mcQueue; // 0x350
	ObjectProperty m_mcLoginMsg; // 0x358
	ObjectProperty m_mcCreatePlayerName; // 0x360
	ObjectProperty m_mcCreatePlayerNameError; // 0x368
	ObjectProperty m_mcCreatePlayerNameInput; // 0x370
	ObjectProperty m_CreatePlayerNameSubmit; // 0x378
	ObjectProperty m_CreatePlayerNameCancel; // 0x380
	ObjectProperty m_mcLoading; // 0x388
	ObjectProperty m_mcLoadingTF; // 0x390
	ObjectProperty m_mcLoadingAnimA; // 0x398
	ObjectProperty m_mcLoadingAnimB; // 0x3a0
	ObjectProperty m_mcEULA; // 0x3a8
	ObjectProperty m_EULAAccept; // 0x3b0
	ObjectProperty m_EULADecline; // 0x3b8
	ObjectProperty m_mcEULAGamepadBtns[0x2]; // 0x3c0
	float m_fDiscoveryTimer; // 0x3d0
	float m_fDiscoveryDelay; // 0x3d4
	ObjectProperty m_mcQRCodePanel; // 0x3d8
	ObjectProperty m_mcQRCodeIcons; // 0x3e0
	ObjectProperty m_mcQRCodePanelLoginButton; // 0x3e8
	ObjectProperty m_QRCodePanelInputGroup; // 0x3f0
};

struct UTgDeviceForm_ImaniF : UTgDeviceForm {
	ObjectProperty m_CachedImani; // 0x28c
};

struct UTgAnimNodeStanceTransitionerSynchronized : UTgAnimNodeBlendList {
	float StanceResetTime; // 0x168
	char CanResetStanceOnTick : 1; // 0x16c
	char m_bDelayingChildSwitch : 1; // 0x16c
	int32_t m_nCurrentStance; // 0x170
	float m_fTimestampToSwitchStance; // 0x174
	TArray<FStanceTransitionParam> StanceTransitionControl; // 0x178
};

struct UTgGamePhase_RandomlySpawnCreditCaches : UTgGamePhase {
	float m_fSpawnPeriod; // 0xb8
	float m_fSpawnTimer; // 0xbc
};

struct UAnimNotify_Trails : UAnimNotify {
	ObjectProperty PSTemplate; // 0x68
	char bIsExtremeContent : 1; // 0x70
	char bPreview : 1; // 0x70
	char bPreviewForceExplicit : 1; // 0x70
	char bSkipIfOwnerIsHidden : 1; // 0x70
	char bResampleRequired : 1; // 0x70
	FName FirstEdgeSocketName; // 0x74
	FName ControlPointSocketName; // 0x7c
	FName SecondEdgeSocketName; // 0x84
	float LastStartTime; // 0x8c
	float EndTime; // 0x90
	float SampleTimeStep; // 0x94
	TArray<FTrailSamplePoint> TrailSampleData; // 0x98
	float SamplesPerSecond; // 0xa8
	TArray<FTrailSample> TrailSampledData; // 0xac
	float CurrentTime; // 0xbc
	float TimeStep; // 0xc0
	ObjectProperty AnimNodeSeq; // 0xc4
};

struct UMorphNodePose : UMorphNodeBase {
	ObjectProperty Target; // 0x74
	FName MorphName; // 0x7c
	float Weight; // 0x84
};

struct UPBRuleNodeBase : UObject {
	TArray<FPBRuleLink> NextRules; // 0x60
};

struct ATgHUD : AHUD {
	ObjectProperty m_TgPlayerController; // 0x5a0
};

struct UTgGameDC_PlayerVitals : UTgGameDC_MapEntity {
	float m_fHealth; // 0x15c
	float m_fHealthMax; // 0x160
	float m_fEnergy; // 0x164
	float m_fEnergyMax; // 0x168
	float m_fBoost; // 0x16c
	float m_fBoostMax; // 0x170
	float m_fMana; // 0x174
	float m_fManaMax; // 0x178
	float m_fHealthPct; // 0x17c
	float m_fEnergyPct; // 0x180
	float m_fBoostPct; // 0x184
	float m_fManaPct; // 0x188
	float m_fXPPct; // 0x18c
	int32_t m_nLevel; // 0x190
	ObjectProperty m_ReviveTimer; // 0x194
	ObjectProperty m_RefireTimer; // 0x19c
	ObjectProperty m_RecallTimer; // 0x1a4
};

struct UUIComponent_AzaanIreBar : UUIComponent_Display {
	ObjectProperty m_mcChargePctMask; // 0x124
	ObjectProperty m_mcChargingFlash; // 0x12c
	ObjectProperty m_mcChargePctTip; // 0x134
	ObjectProperty m_mcIreTierFrame; // 0x13c
	ObjectProperty m_CurrentViewAzaan; // 0x144
	float m_fPrevIreAmt; // 0x14c
	int32_t m_nPrevIreTier; // 0x150
	int32_t m_nIreChangeDir; // 0x154
	char m_bHideOnGamepad : 1; // 0x158
	char m_bHideOnKeyboard : 1; // 0x158
	char m_bIsActive : 1; // 0x158
	float m_fKeyboardTranslation; // 0x15c
};

struct AProjectile : AActor {
	float Speed; // 0x280
	float MaxSpeed; // 0x284
	char bSwitchToZeroCollision : 1; // 0x288
	char bBlockedByInstigator : 1; // 0x288
	char bBegunPlay : 1; // 0x288
	char bRotationFollowsVelocity : 1; // 0x288
	char bIgnoreFoliageTouch : 1; // 0x288
	ObjectProperty ZeroCollider; // 0x28c
	ComponentProperty ZeroColliderComponent; // 0x294
	float Damage; // 0x29c
	float DamageRadius; // 0x2a0
	float MomentumTransfer; // 0x2a4
	UDamageType* MyDamageType; // 0x2a8
	ObjectProperty SpawnSound; // 0x2b0
	ObjectProperty ImpactSound; // 0x2b8
	ObjectProperty InstigatorController; // 0x2c0
	ObjectProperty ImpactedActor; // 0x2c8
	float NetCullDistanceSquared; // 0x2d0
	ComponentProperty CylinderComponent; // 0x2d4
};

struct ATgDevice_CorrupterLatch : ATgDevice_Latch {
	ObjectProperty m_CachedCorrupter; // 0xa44
};

struct ATgDevice_MarkShot : ATgDevice {
	char m_bRecalculateMark : 1; // 0xa04
	ObjectProperty m_CurrentMark; // 0xa08
};

struct UUIComponent_StoreItemTab : UUIComponent_Display {
	int32_t m_nVisible; // 0x124
	int32_t m_nTotal; // 0x128
	ObjectProperty m_mcIcon; // 0x12c
	ObjectProperty m_mcTitle; // 0x134
	ObjectProperty m_mcCount; // 0x13c
	ObjectProperty m_mcSelectedIcon; // 0x144
	ObjectProperty m_mcSelectedTitle; // 0x14c
};

struct UMobileMenuLabel : UMobileMenuObject {
	FString Caption; // 0xdc
	ObjectProperty TextFont; // 0xec
	FColor TextColor; // 0xf4
	FColor TouchedColor; // 0xf8
	float TextXScale; // 0xfc
	float TextYScale; // 0x100
	char bAutoSize : 1; // 0x104
};

struct UTgAISquad_Minion : UTgAISquad {
	float s_fNextClusterTime; // 0xa8
	float s_fNextMergeTime; // 0xac
};

struct ATgDevice_SaatiDecoyExplosion : ATgDevice {
	ObjectProperty m_CachedSaatiDecoy; // 0xa04
	float m_fCheckDecoyExplosionTime; // 0xa0c
	float m_fCheckExplosionTracker; // 0xa10
};

struct USeqAct_PlaySound : USeqAct_Latent {
	ObjectProperty PlaySound; // 0x120
	float ExtraDelay; // 0x128
	char bDelayReached : 1; // 0x12c
	char bSuppressSubtitles : 1; // 0x12c
	char bStopped : 1; // 0x12c
	float SoundDuration; // 0x130
	float FadeInTime; // 0x134
	float FadeOutTime; // 0x138
	float VolumeMultiplier; // 0x13c
	float PitchMultiplier; // 0x140
	float BeforeEndTime; // 0x144
};

struct ATgProj_DrogozRocket : ATgProj_Simulated {
	char m_bWasFromSalvo : 1; // 0x52c
};

struct UTgAnimBlendByFlying : UTgAnimNodeBlendList {
	char bAdjustRateByVelocity : 1; // 0x168
	char m_bAdjustRateByAcceleration : 1; // 0x168
	char m_bPreviewJetpackPerBoneBlend : 1; // 0x168
	char m_bIsUsingHandsFreeJetpack : 1; // 0x168
	float m_fUpLoopStartTime; // 0x16c
	EFlyDirTypes LastDirection; // 0x170
	FName m_nmHandsFreeJetpackPerBoneBlendNodeName; // 0x174
	ObjectProperty m_HandsFreeJetpackPerBoneBlendNode; // 0x17c
	float m_fHandsFreeJetpackBlendBias; // 0x184
	FName m_nmHandsFreeJetpackBiasBlendNodeName; // 0x188
	ObjectProperty m_HandsFreeJetpackBiasBlendNode; // 0x190
	ObjectProperty m_TgPawn; // 0x198
};

struct ATgPawn_Androxus : ATgPawn_Character {
	char m_bIsInSlowFall : 1; // 0x3160
	char r_bIsInSlowFallSimulated : 1; // 0x3160
	char m_bForceAccursedArmDevice : 1; // 0x3160
	char r_bAccursedArmFiring : 1; // 0x3160
	char m_bUltimateReadyDisplayGroupOn : 1; // 0x3160
	float m_fAccursedArmSpeedModifier; // 0x3164
	ObjectProperty m_AccursedArmInHand; // 0x3168
	float m_fDefianceAirControl; // 0x3170
	float m_fAirHangGravityModifier; // 0x3174
	float m_fJumpHoldMaxFallSpeed; // 0x3178
	ObjectProperty m_NetherStepDevice; // 0x317c
	float r_fFeatherweightDamageReduction; // 0x3184
	float r_fLiftOffDrift; // 0x3188
	int32_t m_nAccursedArmActiveFX; // 0x318c
	TArray<ObjectProperty> m_SlowFallAnimNodes; // 0x3190
	int32_t r_nDesiredSlowFallAnimChild; // 0x31a0
	ObjectProperty m_SlowFallFX; // 0x31a4
};

struct UDistributionFloatUniformCurve : UDistributionFloat {
	FInterpCurveVector2D ConstantCurve; // 0x7c
};

struct ATgDevice_BombKingDetonator : ATgDevice {
	char m_bDetonatePoppyBombs : 1; // 0xa04
	char m_bInFalseFireRetryPeriod : 1; // 0xa04
	float m_fFalseFireRetryStart; // 0xa08
	float m_fFalseFireRetryTime; // 0xa0c
};

struct ATgDevice_AutoHealing2 : ATgDevice {
	char m_bIsApplied : 1; // 0xa04
	char m_bForceRemoval : 1; // 0xa04
	ObjectProperty m_CachedPawnOwner; // 0xa08
	float m_fLastLowHealthSoundTime; // 0xa10
	float m_fPrevHealthPct; // 0xa14
};

struct ATgDevice_TyraInhand : ATgDevice {
	char m_bUltIsActive : 1; // 0xa04
};

struct ATgDefensePoint : ATgNavigationPoint {
	ObjectProperty CurrentUser; // 0x37c
	ObjectProperty NextDefensePoint; // 0x384
	char bFirstScript : 1; // 0x38c
	char bSniping : 1; // 0x38c
	char bDontChangePosition : 1; // 0x38c
	char bAvoid : 1; // 0x38c
	char bDisabled : 1; // 0x38c
	char bNotInVehicle : 1; // 0x38c
	char Priority; // 0x390
	AWeapon* WeaponPreference; // 0x394
	float NumChecked; // 0x39c
};

struct ALadderVolume : APhysicsVolume {
	FRotator WallDir; // 0x314
	char m_bBotOnly : 1; // 0x320
	char bNoPhysicalLadder : 1; // 0x320
	char bAutoPath : 1; // 0x320
	char bAllowLadderStrafing : 1; // 0x320
	FVector LookDir; // 0x324
	FVector ClimbDir; // 0x330
	ObjectProperty LadderList; // 0x33c
	ObjectProperty PendingClimber; // 0x344
	ComponentProperty WallDirArrow; // 0x34c
	ComponentProperty m_WallDirArrow; // 0x354
};

struct ATgSpectatorController : ATgPlayerController {
	SpectatorCameraMode m_CameraMode; // 0x1628
	SpectatorCameraCycle m_CurrentCycle; // 0x1629
	SpectatorCameraCycle m_PendingCycle; // 0x162a
	SpecFlightMode m_eHelicopterFlight; // 0x162b
	ESpectatorMode m_CurrentSpectatorMode; // 0x162c
	EZoomState m_CurrentZoomState; // 0x162d
	ObjectProperty m_BookmarkCamera; // 0x1630
	FSpectatorBookmark m_Bookmarks[0xa]; // 0x1638
	float m_fDefaultTweenTime; // 0x1818
	char m_bOutlineCharacters : 1; // 0x181c
	char m_bIsMapSquashed : 1; // 0x181c
	char m_bIgnoreCullDistanceVolumes : 1; // 0x181c
	float m_fNameplateFadeMinDist; // 0x1820
	float m_fNameplateFadeMaxDist; // 0x1824
	float m_fNameplateFadeMaxAmount; // 0x1828
	float m_fNameplateScaleMinDist; // 0x182c
	float m_fNameplateScaleMaxDist; // 0x1830
	float m_fNameplateScaleMaxAmount; // 0x1834
	float m_fInterpolateCameraDistance; // 0x1838
	FBroadcastChannel m_BroadcastChannels[0x4]; // 0x183c
	FVector c_vMouseClickDeprojectionExtent; // 0x185c
	float m_fOverviewCenterpointOffset; // 0x1868
	float m_fMouseCursorVisibleTime; // 0x186c
	float m_fRemainingCursorVisibleTime; // 0x1870
};

struct UUIData_BattlePassTier : UUIData {
	int32_t m_nTier; // 0x64
	Fdword m_dwPlayerBPXP; // 0x68
	TArray<ObjectProperty> m_pLevelRewards; // 0x6c
	char m_bHasBonusRewards : 1; // 0x7c
};

struct UUIDataPlayer : UUIData {
	FPointer VfTable_IUIDataInterface_Name; // 0x64
	FString m_sName; // 0x6c
	int32_t nLevel; // 0x7c
	int32_t nMasteryLevel; // 0x80
	Fdword dwBattlePassXp; // 0x84
	Fdword dwPlayerId; // 0x88
	Fdword dwAvatarId; // 0x8c
	FString m_sPortalId; // 0x90
	Fdword m_dwPortalType; // 0xa0
	char bIsSelf : 1; // 0xa4
	char bIsPortalReservedPartySlot : 1; // 0xa4
	char bIsPaidBattlePass : 1; // 0xa4
	char bIsVerifiedPlayer : 1; // 0xa4
	char m_bPendingFilterRequest : 1; // 0xa4
	Fdword dwReferralPlayMinutes; // 0xa8
	Fdword dwReferralId; // 0xac
	TArray<ObjectProperty> pLeaguePlayers; // 0xb0
};

struct UUIComponent_StreetStyleEventHome : UUIComponent_Display {
	TArray<ObjectProperty> m_pBundleLTIs; // 0x124
	ObjectProperty m_mcBundlesOwnedTF; // 0x134
	ObjectProperty m_pBundles; // 0x13c
	ObjectProperty m_pBonusProgress; // 0x144
	ObjectProperty m_pBundlePanel; // 0x14c
	ObjectProperty m_pBonusPanel; // 0x154
	ObjectProperty m_grHome; // 0x15c
	ObjectProperty m_pUnlockAction; // 0x164
	ObjectProperty m_pUnlockAllAction; // 0x16c
};

struct UUIScene_UIFullScreenPopup : UUIScene {
	ObjectProperty m_InputBack; // 0x1cc
	ObjectProperty m_InputOk; // 0x1d4
	ObjectProperty m_mcTitle; // 0x1dc
	ObjectProperty m_mcSubtitle; // 0x1e4
	ObjectProperty m_mcTexture; // 0x1ec
	ObjectProperty m_pBack; // 0x1f4
	ObjectProperty m_pButton; // 0x1fc
	ObjectProperty m_pButtonKey; // 0x204
};

struct ARB_ConstraintActor : ARigidBodyBase {
	ObjectProperty ConstraintActor1; // 0x280
	ObjectProperty ConstraintActor2; // 0x288
	ObjectProperty ConstraintSetup; // 0x290
	ObjectProperty ConstraintInstance; // 0x298
	char bDisableCollision : 1; // 0x2a0
	char bUpdateActor1RefFrame : 1; // 0x2a0
	char bUpdateActor2RefFrame : 1; // 0x2a0
	ObjectProperty PulleyPivotActor1; // 0x2a4
	ObjectProperty PulleyPivotActor2; // 0x2ac
};

struct UParticleModuleUberLTISIVCL : UParticleModuleUberBase {
	FRawDistributionFloat Lifetime; // 0x78
	FRawDistributionVector StartSize; // 0x9c
	FRawDistributionVector StartVelocity; // 0xc0
	FRawDistributionFloat StartVelocityRadial; // 0xe4
	FRawDistributionVector ColorOverLife; // 0x108
	FRawDistributionFloat AlphaOverLife; // 0x12c
};

struct USeqEvent_MobileObjectPicker : USeqEvent_MobileRawInput {
	float TraceDistance; // 0x13c
	char bCheckonTouch : 1; // 0x140
	FVector FinalTouchLocation; // 0x144
	FVector FinalTouchNormal; // 0x150
	ObjectProperty FinalTouchObject; // 0x15c
	TArray<ObjectProperty> Targets; // 0x164
};

struct UMotionBlurEffect : UPostProcessEffect {
	float MaxVelocity; // 0x88
	float MotionBlurAmount; // 0x8c
	char FullMotionBlur : 1; // 0x90
	float CameraRotationThreshold; // 0x94
	float CameraTranslationThreshold; // 0x98
};

struct UGameThirdPersonCameraMode : UObject {
	ObjectProperty ThirdPersonCam; // 0x60
	float FOVAngle; // 0x68
	float BlendTime; // 0x6c
	char bLockedToViewTarget : 1; // 0x70
	char bDirectLook : 1; // 0x70
	char bFollowTarget : 1; // 0x70
	char bInterpLocation : 1; // 0x70
	char bUsePerAxisOriginLocInterp : 1; // 0x70
	char bInterpRotation : 1; // 0x70
	char bRotInterpSpeedConstant : 1; // 0x70
	char bDoPredictiveAvoidance : 1; // 0x70
	char bValidateWorstLoc : 0; // 0x70
	char bSkipCameraCollision : 0; // 0x70
	char bSmoothViewOffsetPitchChanges : 0; // 0x70
	char bApplyDeltaViewOffset : 0; // 0x70
	char bAdjustDOF : 0; // 0x70
	char bDOFUpdated : 0; // 0x70
	char bNoFOVPostProcess : 0; // 0x70
	char bInterpViewOffsetOnlyForCamTransition : 0; // 0x70
	float FollowingInterpSpeed_Pitch; // 0x74
	float FollowingInterpSpeed_Yaw; // 0x78
	float FollowingInterpSpeed_Roll; // 0x7c
	float FollowingCameraVelThreshold; // 0x80
	float OriginLocInterpSpeed; // 0x84
	FVector PerAxisOriginLocInterpSpeed; // 0x88
	float OriginRotInterpSpeed; // 0x94
	FVector StrafeLeftAdjustment; // 0x98
	FVector StrafeRightAdjustment; // 0xa4
	float StrafeOffsetScalingThreshold; // 0xb0
	float StrafeOffsetInterpSpeedIn; // 0xb4
	float StrafeOffsetInterpSpeedOut; // 0xb8
	FVector LastStrafeOffset; // 0xbc
	FVector RunFwdAdjustment; // 0xc8
	FVector RunBackAdjustment; // 0xd4
	float RunOffsetScalingThreshold; // 0xe0
	float RunOffsetInterpSpeedIn; // 0xe4
	float RunOffsetInterpSpeedOut; // 0xe8
	FVector LastRunOffset; // 0xec
	FVector WorstLocOffset; // 0xf8
	FVector TargetRelativeCameraOriginOffset; // 0x104
	FViewOffsetData ViewOffset; // 0x110
	FViewOffsetData ViewOffset_ViewportAdjustments[0x6]; // 0x134
	float DOF_FalloffExponent; // 0x20c
	float DOF_BlurKernelSize; // 0x210
	float DOF_FocusInnerRadius; // 0x214
	float DOF_MaxNearBlurAmount; // 0x218
	float DOF_MaxFarBlurAmount; // 0x21c
	float LastDOFRadius; // 0x220
	float LastDOFDistance; // 0x224
	float DOFDistanceInterpSpeed; // 0x228
	FVector DOFTraceExtent; // 0x22c
	float DOF_RadiusFalloff; // 0x238
	FVector2D DOF_RadiusRange; // 0x23c
	FVector2D DOF_RadiusDistRange; // 0x244
	float ViewOffsetInterp; // 0x24c
	float OffsetAdjustmentInterpSpeed; // 0x250
	ECameraViewportTypes CurrentViewportType; // 0x254
};

struct UWindowsClient : UClient {
	UAudioDevice* AudioDeviceClass; // 0x224
	int32_t AllowJoystickInput; // 0x264
};

struct USkelControl_CCD_IK : USkelControlBase {
	FVector EffectorLocation; // 0xd0
	EBoneControlSpace EffectorLocationSpace; // 0xdc
	FName EffectorSpaceBoneName; // 0xe0
	FVector EffectorTranslationFromBone; // 0xe8
	int32_t NumBones; // 0xf4
	int32_t MaxPerBoneIterations; // 0xf8
	int32_t IterationsCount; // 0xfc
	float Precision; // 0x100
	char bStartFromTail : 1; // 0x104
	char bNoTurnOptimization : 1; // 0x104
	TArray<float> AngleConstraint; // 0x108
	float MaxAngleSteps; // 0x118
};

struct UInterpTrackSkelControlScale : UInterpTrackFloatBase {
	FName SkelControlName; // 0xb8
};

struct AGameCrowdDestinationQueuePoint : AGameCrowdInteractionPoint {
	ObjectProperty NextQueuePosition; // 0x28c
	ObjectProperty PreviousQueuePosition; // 0x294
	ObjectProperty QueuedAgent; // 0x29c
	ObjectProperty QueueDestination; // 0x2a4
	char bClearingQueue : 1; // 0x2ac
	char bPendingAdvance : 1; // 0x2ac
	float AverageReactionTime; // 0x2b0
	UGameCrowdBehavior_WaitInQueue* QueueBehaviorClass; // 0x2b4
};

struct UMaterialExpressionSquareRoot : UMaterialExpression {
	FExpressionInput Input; // 0xb0
};

struct UParticleModuleSizeScale : UParticleModuleSizeBase {
	FRawDistributionVector SizeScale; // 0x68
	char EnableX : 1; // 0x8c
	char EnableY : 1; // 0x8c
	char EnableZ : 1; // 0x8c
};

struct UFacebookIntegration : UPlatformInterfaceBase {
	FString AppID; // 0x80
	TArray<FString> Permissions; // 0x90
	FString UserName; // 0xa0
	FString UserId; // 0xb0
	FString AccessToken; // 0xc0
	TArray<FFacebookFriend> FriendsList; // 0xd0
};

struct ASceneCaptureCubeMapActor : ASceneCaptureActor {
	ComponentProperty StaticMesh; // 0x288
	ObjectProperty CubeMaterialInst; // 0x290
};

struct UPComBrowserInteraction : UInteraction {
	FPointer VfTable_FCallbackEventDevice; // 0xb0
};

struct ATgPathfinderWalker : AActor {
	ObjectProperty m_Pathfinder; // 0x280
	ObjectProperty m_CurrentSpline; // 0x288
	float m_fCurrentSplineDist; // 0x290
	DelegateProperty __OnFinishedPathing__Delegate; // 0x294
};

struct ATgGame_Battle_Training : ATgGame_Battle_Practice {
	char m_bNewTutorial : 1; // 0x76c
	TArray<int32_t> m_StartingItems; // 0x770
	int32_t m_StartingSkills[0x4]; // 0x780
	TArray<int32_t> m_RecommendedItems; // 0x790
};

struct ATgDevice_BarrierTankInhand : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedBarrierTankPawn; // 0xa0c
	FVector m_vProjectileSpawnOffset2; // 0xa14
	FVector m_vProjectileSpawnOffset3; // 0xa20
	DelegateProperty __InterruptFiringDelegate__Delegate; // 0xa2c
};

struct USeqAct_CastToInt : USeqAct_SetSequenceVariable {
	char bTruncate : 1; // 0x108
	float Value; // 0x10c
	int32_t IntResult; // 0x110
};

struct ATgDevice_CommanderInhand : ATgDevice {
	float m_fQueueFireTime; // 0xa04
	float m_fQueueFireTimeThreshold; // 0xa08
};

struct ATgDevice_CommanderUltFire : ATgDevice {
	ObjectProperty m_CommanderUltDevice; // 0xa04
	float m_fTraceDownDistance; // 0xa0c
};

struct ATgDevice_CorrupterSpin : ATgDevice_Leap {
	float fAoeDistance; // 0xa08
	ObjectProperty m_Corrupter; // 0xa0c
	float fDeactivateTime; // 0xa14
};

struct ATgDevice_DemonInhand : ATgDevice {
	char m_bUltIsActive : 1; // 0xa04
	char m_bDemonStimIsActive : 1; // 0xa04
};

struct ATgDeploy_IllusionLongbow : ATgDeployable {
	int32_t c_nDefaultBodyMeshId; // 0x46c
	int32_t c_nDefaultHeadMeshId; // 0x470
	int32_t c_nDefaultWeaponMeshId; // 0x474
	ComponentProperty m_BodyMesh; // 0x478
	ComponentProperty m_HeadMesh; // 0x480
	ComponentProperty m_WeaponMesh; // 0x488
	TArray<ObjectProperty> m_bodyReplacementMICs; // 0x490
	TArray<ObjectProperty> m_headReplacementMICs; // 0x4a0
	TArray<ObjectProperty> m_weaponReplacementMICs; // 0x4b0
	char m_bFadingAway : 1; // 0x4c0
	float m_fLifeAfterDeathOverride; // 0x4c4
	ObjectProperty m_FxCollisionProxy; // 0x4c8
	float m_fCollisionRadius; // 0x4d0
};

struct UTgSkelCon_RaumSpinner : UTgSkelCon_Spinner {
	ObjectProperty m_CachedRaum; // 0x144
};

struct ATgProj_Flare : ATgProj_FreeGrenade {
	char m_bStartedPulse : 1; // 0x580
	float m_fLifetimeForPhysicsSubstep; // 0x584
};

struct UTgAIBehaviorAction_LookAtFortress : UTgAIBehaviorAction {
	char bMustBeEnemy : 1; // 0x94
};

struct UTgSeqAct_PlayCameraAnim : USequenceAction {
	ObjectProperty AnimToPlay; // 0x108
	float BlendInTime; // 0x110
	float BlendOutTime; // 0x114
	float Rate; // 0x118
	float IntensityScale; // 0x11c
};

struct UUIComponent_ChampionOverview : UUIComponent_Display {
	ObjectProperty m_mcBioText; // 0x124
	ObjectProperty m_mcRentalText; // 0x12c
	ObjectProperty m_mcRentalTextLabel; // 0x134
	ObjectProperty m_mcRentalTextDuration; // 0x13c
	ObjectProperty m_mcStatsPanel; // 0x144
	ObjectProperty m_mcStatsPanelLevel; // 0x14c
	ObjectProperty m_mcStatsPanelLevelUp; // 0x154
	ObjectProperty m_mcStatsPanelXP; // 0x15c
	ObjectProperty m_mcStatsPanelReward; // 0x164
	ObjectProperty m_mcStatsPanelRewardDetails; // 0x16c
	ObjectProperty m_mcStatsProgressMask; // 0x174
	float m_fCurrentXP; // 0x17c
	int32_t m_fXPBarAnimDuration; // 0x180
	int32_t m_nTickCallbackHandle; // 0x184
	ObjectProperty m_pLevelUpButton; // 0x188
	ObjectProperty m_pMasteryRewardsButton; // 0x190
	ObjectProperty m_Group; // 0x198
	ObjectProperty m_pChampionData; // 0x1a0
	ObjectProperty m_akLevelUp; // 0x1a8
	ObjectProperty m_pEquippedSkin; // 0x1b0
};

struct UTgSeqAct_UIElementVisibility : USequenceAction {
	char ShowElement : 1; // 0x108
	FString UISceneName; // 0x10c
	FString UIElementName; // 0x11c
};

struct UUIComponent_LobbySlotItem : UUIComponent_Display {
	ObjectProperty m_Item; // 0x124
	ObjectProperty m_pPrices; // 0x12c
	ObjectProperty m_pOriginalPrices; // 0x134
	ObjectProperty m_pBuyButton; // 0x13c
	ObjectProperty m_pHighlight; // 0x144
};

struct UHavokNavigationRenderingComponent : UPrimitiveComponent {
	char bDrawEdges : 1; // 0x24c
};

struct UPartyBeaconClient : UPartyBeacon {
	FOnlineGameSearchResult HostPendingRequest; // 0x98
	FPartyReservation PendingRequest; // 0xa8
	EPartyBeaconClientState ClientBeaconState; // 0xc4
	EPartyBeaconClientRequest ClientBeaconRequestType; // 0xc5
	float ReservationRequestTimeout; // 0xc8
	float ReservationRequestElapsedTime; // 0xcc
	FString ResolverClassName; // 0xd0
	UClientBeaconAddressResolver* ResolverClass; // 0xe0
	ObjectProperty Resolver; // 0xe8
	DelegateProperty __OnReservationRequestComplete__Delegate; // 0xf0
	DelegateProperty __OnReservationCountUpdated__Delegate; // 0x100
	DelegateProperty __OnTravelRequestReceived__Delegate; // 0x110
	DelegateProperty __OnHostIsReady__Delegate; // 0x120
	DelegateProperty __OnHostHasCancelled__Delegate; // 0x130
};

struct ATgNavigationPoint : ANavigationPoint {
	int32_t m_nMapObjectId; // 0x378
};

struct UUIScene_UINotificationToasts : UUIScene {
	TArray<ObjectProperty> m_pWaitList; // 0x1cc
	TArray<ObjectProperty> m_pToastSlots; // 0x1dc
	TArray<int32_t> m_nFreeList; // 0x1ec
	TArray<int32_t> m_nQueuedSlots; // 0x1fc
	char m_bFreeListDisorderly : 1; // 0x20c
	char m_bCommendationListDisorderly : 1; // 0x20c
	char m_bChallengeListDisorderly : 1; // 0x20c
	char m_bInitialized : 1; // 0x20c
	float m_fToastQueueDelay; // 0x210
	TArray<ObjectProperty> m_pWaitCommendationList; // 0x214
	TArray<ObjectProperty> m_pCommendationSlots; // 0x224
	TArray<int32_t> m_nFreeCommendationList; // 0x234
	TArray<int32_t> m_nQueuedCommendationSlots; // 0x244
	float m_fCommendationQueueDelay; // 0x254
	TArray<ObjectProperty> m_pWaitChallengeList; // 0x258
	TArray<ObjectProperty> m_pChallengeSlots; // 0x268
	TArray<int32_t> m_nFreeChallengeList; // 0x278
	TArray<int32_t> m_nQueuedChallengeSlots; // 0x288
	float m_fChallengeQueueDelay; // 0x298
	TArray<int32_t> m_nActivityIdsToasted; // 0x29c
	int32_t m_nQuestsUpdatedHandle; // 0x2ac
	int32_t m_nDataDirectorHandle; // 0x2b0
};

struct ATgPawn_Imani : ATgPawn_Character {
	float m_fAccumulatedGlideDeviation; // 0x3160
	float r_fGlideDeviationMeanLifetime; // 0x3164
	char r_bUseSecondaryStance : 1; // 0x3168
	char r_bPreventClearcast : 1; // 0x3168
	char r_bInClearcast : 1; // 0x3168
	char m_bPendingClearcastState : 1; // 0x3168
	char s_bAvatarNeedsCleanup : 1; // 0x3168
	char c_bLastBombManuallyDetonated : 1; // 0x3168
	char m_bHasDragonsFire : 1; // 0x3168
	char c_bSimulateAccumulatedGlideDeviation : 1; // 0x3168
	char c_bAkClearcastActive : 0; // 0x3168
	char c_bAkUsingFireStance : 0; // 0x3168
	char m_bBlockPossession : 0; // 0x3168
	char c_bFXCleanupNeeded : 0; // 0x3168
	char m_HideAvatarUIOverlay : 0; // 0x3168
	char c_bHasDigitizedSkin : 0; // 0x3168
	ESummonState r_eSummoningState; // 0x316c
	ESummonState m_eAcknowledgedSummoningState; // 0x316d
	EAvatarState m_eLastAvatarState; // 0x316e
	DigitizedImaniFace c_eCurrentDigitizedImaniFace; // 0x316f
	float m_fIceManaConversionLockout; // 0x3170
	float m_fCachedMana; // 0x3174
	float r_fLastVerticalMovementSpeedMultiplier; // 0x3178
	int32_t m_nAltInhandSlot; // 0x317c
	int32_t m_nAltAltfireSlot; // 0x3180
	float m_fSwapLockoutTime; // 0x3184
	float r_fMaxMovementDegPerSec; // 0x3188
	float m_fManaGainedPerPointDamage; // 0x318c
	FVector r_InhandHitLoc; // 0x3190
	float m_fLastFlightBearing; // 0x319c
	ObjectProperty m_CachedImaniF; // 0x31a0
	ObjectProperty m_CachedImaniUlt; // 0x31a8
	ObjectProperty m_CachedImaniFrost; // 0x31b0
	ObjectProperty m_CachedImaniFire; // 0x31b8
	ObjectProperty m_CachedImaniFlameCannon; // 0x31c0
	ObjectProperty r_ActiveAvatar; // 0x31c8
	float m_fClearcastDuration; // 0x31d0
	float m_fTotalDragonTransition; // 0x31d4
	float m_fDragonTransitionTimeLeft; // 0x31d8
	TArray<int32_t> m_nDevicesDamageToMana; // 0x31dc
	int32_t r_nDragonsFireParity; // 0x31ec
	ObjectProperty m_lastHitProjectile; // 0x31f0
	ObjectProperty m_pLastPlayerController; // 0x31f8
	FString m_sSkillIconOverride; // 0x3200
	float r_fDragonTimePercentRemaining; // 0x3210
	float c_fDigitizedSkinFaceSwapDelayTimer; // 0x3214
	float c_fDigitizedSkinFaceSwapDelayMinTime; // 0x3218
	float c_fDigitizedSkinFaceSwapDelayMaxTime; // 0x321c
	FDigitizedImaniConfig c_DigitizedImaniConfig[0x8]; // 0x3220
	FName c_nmDigitizedImaniFaceXParamName; // 0x3260
	FName c_nmDigitizedImaniFaceYParamName; // 0x3268
};

struct ATgDevice_DruidRMB : ATgDevice {
	TArray<FDelayedImpactInfo> m_DelayedImpacts; // 0xa04
	ObjectProperty m_CachedDruid; // 0xa14
	float m_fMinMoonJuiceToFire; // 0xa1c
	float m_fFailsafeFireloopTimeout; // 0xa20
};

struct UUIComponent_HealthBar_Player : UUIComponent_HealthBar {
	ObjectProperty m_mcCurrentHealthText; // 0x234
	ObjectProperty m_mcMaxHealthText; // 0x23c
	ObjectProperty m_mcHealthTip; // 0x244
	ObjectProperty m_mcHealthColor; // 0x24c
	ObjectProperty m_DamageOverlay; // 0x254
	ObjectProperty m_TorvaldShield; // 0x25c
	float m_fHealInterpSpeed; // 0x264
	float m_fDamageInterpSpeed; // 0x268
	float m_fMinHealInterpSpeed; // 0x26c
	float m_fMinDamageInterpSpeed; // 0x270
	int32_t m_nLastViewTargetId; // 0x274
	ObjectProperty m_LastViewedPawn; // 0x278
	int32_t m_nLastCurrentHealthTextValue; // 0x280
	int32_t m_nLastMaxHealthTextValue; // 0x284
};

struct UUIComponent_ScrollableText : UUIComponent_Display {
	float m_fScrollY; // 0x124
	float m_fTextLineHeight; // 0x128
	float m_fTextTotalHeight; // 0x12c
	ObjectProperty m_mcTF; // 0x130
	ObjectProperty m_pScrollbar; // 0x138
	ObjectProperty m_grInput; // 0x140
};

struct UMcpIdMappingManager : UMcpIdMappingBase {
	TArray<FMcpIdMapping> AccountMappings; // 0xa8
	FString AddMappingUrl; // 0xb8
	FString QueryMappingUrl; // 0xc8
	TArray<FAddMappingRequest> AddMappingRequests; // 0xd8
	TArray<FQueryMappingRequest> QueryMappingRequests; // 0xe8
};

struct ATgDeviceVolume : AVolume {
	char bPainCausing : 1; // 0x2bc
	char BACKUP_bPainCausing : 1; // 0x2bc
	char s_bDeviceActive : 1; // 0x2bc
	ObjectProperty PainTimer; // 0x2c0
	ObjectProperty DamageInstigator; // 0x2c8
	int32_t m_nMapObjectId; // 0x2d0
	int32_t s_nDeviceId; // 0x2d4
	ObjectProperty s_DeviceFireMode; // 0x2d8
	char s_nTaskForce; // 0x2e0
};

struct ABlockingVolume : AVolume {
	char bBlockCamera : 1; // 0x2bc
};

struct UTgDeviceForm_FragGrenade : UTgDeviceForm {
	TArray<ObjectProperty> m_FragGrenadeBlendList1P; // 0x28c
	TArray<ObjectProperty> m_FragGrenadeBlendList3P; // 0x29c
};

struct UTgAnimNodeBlendByDrogozFlying : UTgAnimNodeBlendList {
	TArray<FBoosterFlightInfo> m_BoosterRecords; // 0x168
	ObjectProperty m_CachedDrogozOwner; // 0x178
	char m_bInThrust : 1; // 0x180
	char m_bInBooster : 1; // 0x180
	char m_bTransitionsCanBeInterrupted : 1; // 0x180
	float m_fBoosterStartTime; // 0x184
	float m_fBoosterRelevancyWindow; // 0x188
	float m_fBoosterTriggerPercent; // 0x18c
	float m_fMaxFlightFallSpeed; // 0x190
};

struct ATgDeploy_OppressorMine : ATgDeployable {
	ObjectProperty m_CachedPawnOwner; // 0x46c
	ObjectProperty m_CachedEnemyTaskForce; // 0x474
	ObjectProperty r_CurrentTargets[0x6]; // 0x47c
	int32_t m_nBeamFXID; // 0x4ac
	ObjectProperty m_BeamFXs[0x6]; // 0x4b0
	char m_bNeedsNetDirtyUpdate : 1; // 0x4e0
	ObjectProperty r_StuckCart; // 0x4e4
	FRotator r_StuckRotation; // 0x4ec
	FVector r_CartOffset; // 0x4f8
	float m_fAmplitudeRadiusScale; // 0x504
};

struct UUIBackground : UTgGfxScene {
	char m_eState; // 0x1ec
	float m_fAnimationDelay; // 0x1f0
	float m_fAnimationTimer; // 0x1f4
	ObjectProperty m_mcLine; // 0x1f8
	ObjectProperty m_mcGlow; // 0x200
	ObjectProperty m_mcAnimation; // 0x208
	ObjectProperty m_mcImage[0x8]; // 0x210
};

struct USeqAct_SetVectorComponents : USequenceAction {
	FVector OutVector; // 0x108
	float X; // 0x114
	float Y; // 0x118
	float Z; // 0x11c
};

struct UTgDeviceFire_AstralMark : UTgDeviceFire {
	float m_InitialLifetime; // 0x268
	float m_OverflowTime; // 0x26c
	float m_BaseLifetime; // 0x270
};

struct ANavMeshObstacle : AActor {
	FPointer VfTable_IInterface_NavMeshPathObstacle; // 0x280
	char bEnabled : 1; // 0x288
	char bPreserveInternalGeo : 1; // 0x288
};

struct UNavMeshPathGoalEvaluator : UObject {
	ObjectProperty NextEvaluator; // 0x60
	int32_t MaxPathVisits; // 0x68
	char bAlwaysCallEvaluateGoal : 1; // 0x6c
	char bDoPartialAStar : 1; // 0x6c
	int32_t NumNodesThrownOut; // 0x70
	int32_t NumNodesProcessed; // 0x74
	int32_t MaxOpenListSize; // 0x78
};

struct UAnimNotify_Script : UAnimNotify {
	FName NotifyName; // 0x68
	FName NotifyTickName; // 0x70
	FName NotifyEndName; // 0x78
};

struct UTgAnimBlendByPaladinsCharacter_Lex : UTgAnimBlendByPaladinsCharacter {
	ObjectProperty m_CachedLex; // 0x544
	FName m_LeftSlideSkelControlName; // 0x54c
	FName m_RightSlideSkelControlName; // 0x554
	ObjectProperty m_LeftSlideSkelControl; // 0x55c
	ObjectProperty m_RightSlideSkelControl; // 0x564
};

struct UUIComponent_HudSkillCardCooldown : UUIComponent_Display {
	ObjectProperty m_mcTexture; // 0x124
	ObjectProperty m_mcTimer; // 0x12c
	ObjectProperty m_mcMask; // 0x134
	float m_fCooldown; // 0x13c
};

struct UPComPerformanceCaptureBase : UObject {
	TArray<FName> StatsToCollect; // 0x60
	FArray_Mirror StatIds; // 0x70
	TArray<char> StatTypes; // 0x80
	float FOV; // 0x90
	TArray<FPComPerformanceCaptureProfile> Profiles; // 0x94
	FPComPerformanceCaptureProfile FallbackProfile; // 0xa4
	FPComPerformanceCaptureProfile ActiveProfile; // 0xc0
};

struct UTgSeqAct_BeginWaitForLookAt : USequenceAction {
	FVector LocationToLookAt; // 0x108
	float MinOffsetDistance; // 0x114
};

struct UTgDeviceForm_MountNoHorse : UTgDeviceForm_Mount {
	int32_t c_SparkleFXID; // 0x29c
	ObjectProperty c_SparkleFX; // 0x2a0
};

struct ATgDeviceVolume_Pulse : AVolume {
	ObjectProperty DamageInstigator; // 0x2bc
	int32_t m_nMapObjectId; // 0x2c4
	int32_t s_nDeviceId; // 0x2c8
	ObjectProperty m_FireMode; // 0x2cc
	int32_t s_nTeamNumber; // 0x2d4
	char s_nTaskForce; // 0x2d8
};

struct UTgDeviceForm_Transporter : UTgDeviceForm {
	ObjectProperty c_TargetingModeMeshIndicator2; // 0x28c
	ObjectProperty c_TargetingModeFx2; // 0x294
	FVector c_TargetingModeFx2Location; // 0x29c
	int32_t c_nTargetingModeFx2Id; // 0x2a8
};

struct USeqAct_WaitForLevelsVisible : USeqAct_Latent {
	TArray<FName> LevelNames; // 0x120
	char bShouldBlockOnLoad : 1; // 0x130
};

struct ATgDevice_AtlasBarrageFire : ATgDevice {
	int32_t m_nChainedBarrageNum; // 0xa04
	int32_t m_nShotsRemaining; // 0xa08
	ObjectProperty m_BarrageDevice; // 0xa0c
};

struct USVehicleSimTank : USVehicleSimCar {
	float LeftTrackVel; // 0xf8
	float RightTrackVel; // 0xfc
	float LeftTrackTorque; // 0x100
	float RightTrackTorque; // 0x104
	float MaxEngineTorque; // 0x108
	float EngineDamping; // 0x10c
	float InsideTrackTorqueFactor; // 0x110
	float SteeringLatStiffnessFactor; // 0x114
	float TurnInPlaceThrottle; // 0x118
	float TurnMaxGripReduction; // 0x11c
	float TurnGripScaleRate; // 0x120
	char bTurnInPlaceOnSteer : 1; // 0x124
};

struct UUIComponent_LeaderboardPlayer : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_mcTitle; // 0x12c
	ObjectProperty m_mcPosition; // 0x134
	ObjectProperty m_mcWins; // 0x13c
	ObjectProperty m_mcLosses; // 0x144
	ObjectProperty m_mcScore; // 0x14c
	ObjectProperty m_mcRegion; // 0x154
	ObjectProperty m_mcChampion; // 0x15c
	ObjectProperty m_mcChampionIcon; // 0x164
	ObjectProperty m_mcChampionFrame; // 0x16c
	ObjectProperty m_FrameButton; // 0x174
};

struct UUIScene_UIChampionSelect : UUIScene {
	int32_t m_nTickCallbackHandle; // 0x1cc
	char m_bShowChampionAd : 1; // 0x1d0
	float m_fDelayedPreviewTimer; // 0x1d4
	ObjectProperty m_ChampionPackData; // 0x1d8
	ObjectProperty m_pFocusedChampion; // 0x1e0
	TArray<ObjectProperty> m_AvailableChampions; // 0x1e8
	ObjectProperty m_mcChampions; // 0x1f8
	ObjectProperty m_mcDetailsTitle; // 0x200
	ObjectProperty m_mcDetailsSubtitle; // 0x208
	ObjectProperty m_mcDetailsClassIcon; // 0x210
	ObjectProperty m_mcDetailsNewChamp; // 0x218
	ObjectProperty m_mcRoleTabsCategoryTF; // 0x220
	ObjectProperty m_ChampionPack; // 0x228
	ObjectProperty m_pRoleTabs; // 0x230
	ObjectProperty m_pChampionsGrid; // 0x238
	ObjectProperty m_pChampionsGridLarge; // 0x240
	ObjectProperty m_pSortOrderDropdown; // 0x248
	ObjectProperty m_pRotator; // 0x250
	ObjectProperty m_pPurchasePackAction; // 0x258
};

struct USkelControlSingleBone : USkelControlBase {
	char bApplyTranslation : 1; // 0xd0
	char bApplyRotation : 1; // 0xd0
	char bAddTranslation : 1; // 0xd0
	char bAddRotation : 1; // 0xd0
	char bRemoveMeshRotation : 1; // 0xd0
	FVector BoneTranslation; // 0xd4
	EBoneControlSpace BoneTranslationSpace; // 0xe0
	EBoneControlSpace BoneRotationSpace; // 0xe1
	FName TranslationSpaceBoneName; // 0xe4
	FRotator BoneRotation; // 0xec
	FName RotationSpaceBoneName; // 0xf8
};

struct ADroppedPickup : AActor {
	ObjectProperty Inventory; // 0x280
	AInventory* InventoryClass; // 0x288
	ObjectProperty PickupCache; // 0x290
	char bFadeOut : 1; // 0x298
};

struct UInterpTrackInstFloatMaterialParam : UInterpTrackInst {
	TArray<FFloatMaterialParamMICData> MICInfos; // 0x60
	ObjectProperty InstancedTrack; // 0x70
};

struct ATgDevice_TripleBeacon : ATgDevice {
	ObjectProperty m_CachedCorvusBeaconDevice; // 0xa04
};

struct ATgDeploy_BlackHole : ATgDeployable {
	float r_fRadiusScale; // 0x46c
	float m_fMaxPullSpeed; // 0x470
	float m_fMinPullSpeed; // 0x474
	float m_fDistanceWithMaxSpeed; // 0x478
	float m_fEventHorizonDistance; // 0x47c
	float m_fInnerRadius; // 0x480
	TArray<ObjectProperty> m_ActorsInRange; // 0x484
	ObjectProperty m_CachedPawnOwner; // 0x494
	ObjectProperty m_CachedEnemyTaskForce; // 0x49c
	char r_bPullActive : 1; // 0x4a4
};

struct UTgDeviceForm_AtlasInhand : UTgDeviceForm {
	char m_bCharging : 1; // 0x28c
	char m_bFullyCharged : 1; // 0x28c
	float m_fChargingPercentage; // 0x290
	float m_fChargingStartPercentage; // 0x294
	float m_fChargingTime; // 0x298
	float m_fChargingTotalDuration; // 0x29c
	float m_fTimeToEnterIdle; // 0x2a0
	float m_fTimeToEnterIdleTotal; // 0x2a4
	ObjectProperty m_CachedAtlas; // 0x2a8
	TArray<ObjectProperty> m_BlendByPct1P; // 0x2b0
	TArray<ObjectProperty> m_BlendByPct3P; // 0x2c0
};

struct USeqAct_Switch : USequenceAction {
	int32_t LinkCount; // 0x108
	int32_t IncrementAmount; // 0x10c
	char bLooping : 1; // 0x110
	char bAutoDisableLinks : 1; // 0x110
	TArray<int32_t> Indices; // 0x114
};

struct UUIComponent_VGSListEntry : UUIComponent_Display {
	ObjectProperty m_mcTF; // 0x124
	ObjectProperty m_mcKeyboardKeyTF; // 0x12c
	ObjectProperty m_pGamepadKey; // 0x134
};

struct UPBRuleNodeEdgeMesh : UPBRuleNodeBase {
	float FlatThreshold; // 0x70
	float MainXPullIn; // 0x74
};

struct ATgDevice_DredgeUlt : ATgDevice {
	float m_fWaitForClientDeployAimTime; // 0xa04
	char s_bHasCurrentUltAim : 1; // 0xa08
	char s_bForcingDeploy : 1; // 0xa08
};

struct UUIComponent_AnimatedText : UUIComponent_Display {
	float m_fTime; // 0x124
	float m_fDelay; // 0x128
	float m_fIconOffset; // 0x12c
	float m_fCurrent; // 0x130
	float m_fTarget; // 0x134
	float m_fDelta; // 0x138
	ObjectProperty m_mcTF; // 0x13c
	ObjectProperty m_mcIcon; // 0x144
};

struct UTgSeqAct_SetPlayerMesh : USequenceAction {
	int32_t m_nMeshAsmId; // 0x108
};

struct UUIComponent_HudSkillIcon_Ult : UUIComponent_HudSkillIcon {
	ObjectProperty m_mcUltimatePercent; // 0x1d8
	ObjectProperty m_mcUltimateEffectBot; // 0x1e0
	ObjectProperty m_mcUltimateEffectTop; // 0x1e8
	ObjectProperty m_mcLazarusPulse; // 0x1f0
	ObjectProperty m_scUltimateReady; // 0x1f8
	float m_fPulseTimer; // 0x200
	char m_bThirdPersonMode : 1; // 0x204
	char m_bLazarusUltActive : 1; // 0x204
};

struct UUIComponent_CustomMatchMember : UUIComponent_Display {
	ObjectProperty m_mcLeaderTF; // 0x124
	ObjectProperty m_mcPlayerNameTF; // 0x12c
	ObjectProperty m_mcPlayerTitleTF; // 0x134
	ObjectProperty m_mcPlayerLevelTF; // 0x13c
	ObjectProperty m_pKickButton; // 0x144
	ObjectProperty m_pSwapButton; // 0x14c
	ObjectProperty m_pFrameButton; // 0x154
	ObjectProperty m_pCrossPlayIcon; // 0x15c
};

struct USeqVar_String : USequenceVariable {
	FString StrValue; // 0xa0
};

struct UDistributionVectorUniformRange : UDistributionVector {
	FVector MaxHigh; // 0x7c
	FVector MaxLow; // 0x88
	FVector MinHigh; // 0x94
	FVector MinLow; // 0xa0
};

struct ADebugCameraHUD : AHUD {
	char bDrawDebugText : 1; // 0x5a0
};

struct UPBRuleNodeLODQuad : UPBRuleNodeBase {
	float MassiveLODDistanceScale; // 0x70
};

struct UParticleModuleSourceMovement : UParticleModuleLocationBase {
	FRawDistributionVector SourceMovementScale; // 0x68
};

struct UMCPBase : UMcpServiceBase {
	FPointer VfTable_FTickableObject; // 0x78
};

struct UTgSeqEvent_UpdateLanePusherCount : USequenceEvent {
	int32_t Taskforce; // 0x128
};

struct ATgAudioOcclusionActor : AActor {
	FPointer VfTable_IInterface_NavigationHandle; // 0x280
	UNavigationHandle* m_NavigationHandleClass; // 0x288
	ObjectProperty m_NavigationHandle; // 0x290
	FVector NavMeshPath_SearchExtent_Modifier; // 0x298
	float m_fCurrentMaxPathLength; // 0x2a4
};

struct UTgAchievement_StunEnemies : UTgAchievement {
	char m_bReachedTargetCount : 1; // 0x94
	TArray<ObjectProperty> m_HitTargets; // 0x98
};

struct ATgDevice_Weightless : ATgDevice {
	float r_fSprintHorizontalSpeedMod; // 0xa04
	float r_fSprintJumpSpeedMod; // 0xa08
};

struct UMaterialExpressionCustomTexture : UMaterialExpression {
	ObjectProperty Texture; // 0xb0
	FExpressionInput TextureObject; // 0xb8
};

struct ATgCollisionProxy : AActor {
	TArray<ObjectProperty> m_NearByPlayers; // 0x280
	char m_bIgnoreStealthPlayers : 1; // 0x290
	char m_bIgnoreNonPlayers : 1; // 0x290
	char m_bIgnoreInvulnerablePlayers : 1; // 0x290
	char m_bForwardOwnerOnly : 1; // 0x290
	DelegateProperty __ProxyTouch__Delegate; // 0x294
	DelegateProperty __ProxyUnTouch__Delegate; // 0x2a4
};

struct UTgAIBehaviorAction_SpreadFromSquad : UTgAIBehaviorAction_MoveToTarget {
	float SpreadDistance; // 0x9c
};

struct UDirectionalLightComponent : ULightComponent {
	float TraceDistance; // 0x1a4
	char bWholeSceneOnlyDynamicShadowCasters : 1; // 0x1a8
	float WholeSceneDynamicShadowRadius; // 0x1ac
	int32_t NumWholeSceneDynamicShadowCascades; // 0x1b0
	float CascadeDistributionExponent; // 0x1b4
	FLightmassDirectionalLightSettings LightmassSettings; // 0x1b8
};

struct UTgSkelCon_MirrorToOtherMesh : USkelControlSingleBone {
	FName m_nmIdentifier; // 0x100
};

struct ATgItemShopVolume : AVolume {
	int32_t TaskforceIndex; // 0x2bc
};

struct ATgDevice_GuardianStunRush : ATgDevice {
	ObjectProperty m_CachedFox; // 0xa04
	ObjectProperty m_PlaceHolder; // 0xa0c
	float m_fImpactAnimationTime; // 0xa14
	ObjectProperty m_pIntendedRushTarget; // 0xa18
};

struct ATgSkeletalMeshActor_FlagStand : ATgSkeletalMeshActor_Loader {
	FString m_FlagContentDataClassName; // 0x4b0
	ObjectProperty m_FlagContentData; // 0x4c0
	int32_t m_nGameTaskForce; // 0x4c8
	int32_t m_nTeamIndex; // 0x4cc
};

struct UTgSpecialFx : UObject {
	int32_t c_nFxId; // 0x60
	ComponentProperty c_OwnerMesh; // 0x64
	ObjectProperty c_Owner; // 0x6c
	char c_bAttached : 1; // 0x74
	char c_bAppliesToAllModes : 1; // 0x74
	char c_bSelfManage : 1; // 0x74
	char c_bFromEffectForm : 1; // 0x74
	char c_bVisualComplete : 1; // 0x74
	char c_bAudioComplete : 1; // 0x74
	char c_bMuteSound : 1; // 0x74
	char c_bIsDebuff : 1; // 0x74
	char c_bHasTeamMaterials : 0; // 0x74
	char c_bActive : 0; // 0x74
	char c_bSoundActive : 0; // 0x74
	char c_bIsSpawnFx : 0; // 0x74
	char c_bUseBeam : 0; // 0x74
	char c_bLifetimeManagedExternally : 0; // 0x74
	char c_bLocalPawnIsOwner : 0; // 0x74
	char m_bMatLoaded : 0; // 0x74
	char m_bMatLoadedFriendly : 0; // 0x74
	char m_bMatLoadedLocal : 0; // 0x74
	char m_bDecalMatLoaded : 0; // 0x74
	char m_bDecalMatLoadedFriendly : 0; // 0x74
	char m_bDecalMatLoadedLocal : 0; // 0x74
	int32_t c_nPriorityType; // 0x78
	int32_t c_nPrioritySort; // 0x7c
	FName c_nmSocket; // 0x80
	FName c_nmDisplayGroup; // 0x88
	int32_t c_nDisplayMode; // 0x90
	int32_t c_nIndex; // 0x94
	int32_t c_nEquipSlot; // 0x98
	ObjectProperty c_MaterialInstance; // 0x9c
	float c_fTransition; // 0xa4
	int32_t c_nHitEffectBase; // 0xa8
	float c_fMaxEffectDistance; // 0xac
	FParticleChannelContainer c_ParticleChannelOverride; // 0xb0
	int32_t c_nSortPriorityOverride; // 0xb4
	ELightFxState c_LightComponentState; // 0xb8
	ComponentProperty c_LightComponent; // 0xbc
	FPointer c_ManagedLightEmitter; // 0xc4
	TArray<FFx_Sound> c_SoundList; // 0xcc
	TArray<FFx_PSC> c_PSCList; // 0xdc
	TArray<FFx_Material> c_MaterialList; // 0xec
	TArray<FFx_Decal> c_DecalList; // 0xfc
	ObjectProperty c_CameraShake; // 0x10c
	ObjectProperty c_ActiveTimer; // 0x114
	TArray<FAppliedMaterialHandle> m_AppliedMaterials; // 0x11c
};

struct UTgInvListener_Counter : UTgInventoryObject_Listen_ActiveWhileOffCooldown {
	float m_fLastCounterTime; // 0xc8
};

struct UTgAIBehaviorAction_MoveToLaneVolume : UTgAIBehaviorAction_MoveToTarget {
	char bMustBeSameLane : 1; // 0x9c
};

struct ATgWeaponMeshActor_OracleInhand : ATgWeaponMeshActor {
	ObjectProperty m_LastRestoreSoulTarget; // 0x450
};

struct ATgDevice_MinigunSpinUp : ATgDevice {
	ObjectProperty m_CachedRuckusInhand; // 0xa04
};

struct UPComSupportCommands : UObject {
	ObjectProperty PC; // 0x60
	ObjectProperty WorldInfo; // 0x68
};

struct USeqAct_IsInObjectList : USequenceAction {
	char bCheckForAllObjects : 1; // 0x108
	char bObjectFound : 1; // 0x108
};

struct AGamePawn : APawn {
	char bLastHitWasHeadShot : 1; // 0x5a8
	char bRespondToExplosions : 1; // 0x5a8
};

struct UActorFactoryActor : UActorFactory {
	AActor* ActorClass; // 0x9c
};

struct UDistributionFloatUniformRange : UDistributionFloat {
	float MaxHigh; // 0x7c
	float MaxLow; // 0x80
	float MinHigh; // 0x84
	float MinLow; // 0x88
	char bMirrorMaxMin : 1; // 0x8c
};

struct AActor : UObject {
	TArray<ComponentProperty> Components; // 0x60
	TArray<ComponentProperty> AllComponents; // 0x70
	FVector Location; // 0x80
	FRotator Rotation; // 0x8c
	float DrawScale; // 0x98
	FVector DrawScale3D; // 0x9c
	FVector PrePivot; // 0xa8
	FRenderCommandFence DetachFence; // 0xb4
	float CustomTimeDilation; // 0xb8
	EPhysics Physics; // 0xbc
	ENetRole RemoteRole; // 0xbd
	ENetRole Role; // 0xbe
	ECollisionType CollisionType; // 0xbf
	ECollisionType ReplicatedCollisionType; // 0xc0
	ETickingGroup TickGroup; // 0xc1
	ObjectProperty Owner; // 0xc4
	ObjectProperty Base; // 0xcc
	TArray<FTimerData> Timers; // 0xd4
	char bStatic : 1; // 0xe4
	char bHidden : 1; // 0xe4
	char bNoDelete : 1; // 0xe4
	char bDeleteMe : 1; // 0xe4
	char bTicked : 1; // 0xe4
	char bOnlyOwnerSee : 1; // 0xe4
	char bTickIsDisabled : 1; // 0xe4
	char bServerTickIsDisabled : 1; // 0xe4
	char bWorldGeometry : 0; // 0xe4
	char bIgnoreRigidBodyPawns : 0; // 0xe4
	char bOrientOnSlope : 0; // 0xe4
	char bIgnoreEncroachers : 0; // 0xe4
	char bPushedByEncroachers : 0; // 0xe4
	char bDestroyedByInterpActor : 0; // 0xe4
	char bRouteBeginPlayEvenIfStatic : 0; // 0xe4
	char bIsMoving : 0; // 0xe4
	char bAlwaysEncroachCheck : 0; // 0xe4
	char bHasAlternateTargetLocation : 0; // 0xe4
	char bCanStepUpOn : 0; // 0xe4
	char bNetTemporary : 0; // 0xe4
	char bOnlyRelevantToOwner : 0; // 0xe4
	char bNetDirty : 0; // 0xe4
	char bAlwaysRelevant : 0; // 0xe4
	char bReplicateInstigator : 0; // 0xe4
	char bReplicateMovement : 0; // 0xe4
	char bSkipActorPropertyReplication : 0; // 0xe4
	char bUpdateSimulatedPosition : 0; // 0xe4
	char bTearOff : 0; // 0xe4
	char bOnlyDirtyReplication : 0; // 0xe4
	char bAlwaysInformOfTimelapse : 0; // 0xe4
	char bNetTimelapse : 0; // 0xe4
	char bNetTimelapseInit : 0; // 0xe4
	char bNetTimelapsePost : 1; // 0xe8
	char bAllowFluidSurfaceInteraction : 1; // 0xe8
	char bDemoRecording : 1; // 0xe8
	char bDemoOwner : 1; // 0xe8
	char bForceDemoRelevant : 1; // 0xe8
	char bNetInitialRotation : 1; // 0xe8
	char bReplicateRigidBodyLocation : 1; // 0xe8
	char bKillDuringLevelTransition : 1; // 0xe8
	char bExchangedRoles : 0; // 0xe8
	char bConsiderAllStaticMeshComponentsForStreaming : 0; // 0xe8
	char bDebug : 0; // 0xe8
	char bPostRenderIfNotVisible : 0; // 0xe8
	char s_bThrottleNetRelevancy : 0; // 0xe8
	char m_bHasThreadedWork : 0; // 0xe8
	char bForceNetUpdate : 0; // 0xe8
	char bPendingNetUpdate : 0; // 0xe8
	char bHardAttach : 0; // 0xe8
	char bIgnoreBaseRotation : 0; // 0xe8
	char bShadowParented : 0; // 0xe8
	char bSkipAttachedMoves : 0; // 0xe8
	char bCanBeAdheredTo : 0; // 0xe8
	char bCanBeFrictionedTo : 0; // 0xe8
	char bHurtEntry : 0; // 0xe8
	char bGameRelevant : 0; // 0xe8
	char bMovable : 0; // 0xe8
	char bDestroyInPainVolume : 0; // 0xe8
	char bCanBeDamaged : 0; // 0xe8
	char bShouldBaseAtStartup : 0; // 0xe8
	char bPendingDelete : 0; // 0xe8
	char bCanTeleport : 0; // 0xe8
	char bAlwaysTick : 0; // 0xe8
	char bBlocksNavigation : 0; // 0xe8
	char BlockRigidBody : 1; // 0xec
	char bCollideWhenPlacing : 1; // 0xec
	char bCollideActors : 1; // 0xec
	char bCollideWorld : 1; // 0xec
	char bCollideComplex : 1; // 0xec
	char bBlockActors : 1; // 0xec
	char bProjTarget : 1; // 0xec
	char bBlocksTeleport : 1; // 0xec
	char bMoveIgnoresDestruction : 0; // 0xec
	char bProjectileMoveSingleBlocking : 0; // 0xec
	char bNoEncroachCheck : 0; // 0xec
	char bCollideAsEncroacher : 0; // 0xec
	char bPhysRigidBodyOutOfWorldCheck : 0; // 0xec
	char bComponentOutsideWorld : 0; // 0xec
	char bForceOctreeSNFilter : 0; // 0xec
	char bForceOctreeMNFilter : 0; // 0xec
	char bRigidBodyWasAwake : 0; // 0xec
	char bCallRigidBodyWakeEvents : 0; // 0xec
	char bWhitelistCollisionWarning : 0; // 0xec
	char bBounce : 0; // 0xec
	char bJustTeleported : 0; // 0xec
	char bSupportNetIrrelevant : 0; // 0xec
	char bClientSideOnly : 0; // 0xec
	char bEnableMobileTouch : 0; // 0xec
	char bNetInitial : 0; // 0xec
	char bNetOwner : 0; // 0xec
	char bNetRelevant : 0; // 0xec
	char bNetAcked : 0; // 0xec
	char bHiddenEd : 0; // 0xec
	char bEditable : 0; // 0xec
	char bHiddenEdGroup : 0; // 0xec
	char bHiddenEdLayer : 0; // 0xec
	char bHiddenEdCustom : 1; // 0xf0
	char bHiddenEdTemporary : 1; // 0xf0
	char bHiddenEdLevel : 1; // 0xf0
	char bHiddenEdScene : 1; // 0xf0
	char bEdShouldSnap : 1; // 0xf0
	char bTempEditor : 1; // 0xf0
	char bPathColliding : 1; // 0xf0
	char bPathTemp : 1; // 0xf0
	char bScriptInitialized : 0; // 0xf0
	char bLockLocation : 0; // 0xf0
	char bForceAllowKismetModification : 0; // 0xf0
	char bReplicateBotRankId : 0; // 0xf0
	char bNoTick : 0; // 0xf0
	char bDebugEffectIsRelevant : 0; // 0xf0
	char bUpdateHavokPos : 0; // 0xf0
	char bHavokPosOnlyUseCollisionComponent : 0; // 0xf0
	char c_bJustStartedTimelapsePlayback : 0; // 0xf0
	char c_bJustEndedTimelapsePlayback : 0; // 0xf0
	char m_bCanBaseOn : 0; // 0xf0
	char m_bSupportsRelativeLocationBase : 0; // 0xf0
	char m_bComplexOccluder : 0; // 0xf0
	char m_bCanPlayFirstPersonAkEvent : 0; // 0xf0
	int32_t SkelMeshCompTickTag; // 0xf4
	int32_t NetTag; // 0xf8
	int32_t IndexInTickList; // 0xfc
	float LastSlowRelevancyCheckTime; // 0x100
	float NetUpdateTime; // 0x104
	float NetUpdateFrequency; // 0x108
	float NetPriority; // 0x10c
	float LastNetUpdateTime; // 0x110
	float TimeSinceLastTick; // 0x114
	ObjectProperty Instigator; // 0x118
	ObjectProperty WorldInfo; // 0x120
	float LifeSpan; // 0x128
	float CreationTime; // 0x12c
	float LastRenderTime; // 0x130
	FName Tag; // 0x134
	FName InitialState; // 0x13c
	FName Layer; // 0x144
	FName Group; // 0x14c
	FQWord HiddenEditorViews; // 0x154
	TArray<ObjectProperty> Touching; // 0x15c
	TArray<ObjectProperty> Children; // 0x16c
	float LatentFloat; // 0x17c
	ObjectProperty LatentSeqNode; // 0x180
	ObjectProperty PhysicsVolume; // 0x188
	FVector Velocity; // 0x190
	FVector Acceleration; // 0x19c
	FVector AngularVelocity; // 0x1a8
	ComponentProperty BaseSkelComponent; // 0x1b4
	FName BaseBoneName; // 0x1bc
	TArray<ObjectProperty> Attached; // 0x1c4
	FVector RelativeLocation; // 0x1d4
	FRotator RelativeRotation; // 0x1e0
	ComponentProperty CollisionComponent; // 0x1ec
	int32_t OverlapTag; // 0x1f4
	FRotator RotationRate; // 0x1f8
	ObjectProperty PendingTouch; // 0x204
	FName DatabaseFieldName; // 0x20c
	ULocalMessage* MessageClass; // 0x214
	int32_t BotRankId; // 0x21c
	TArray<USequenceEvent*> SupportedEvents; // 0x220
	TArray<ObjectProperty> GeneratedEvents; // 0x230
	TArray<ObjectProperty> LatentActions; // 0x240
	int32_t LocationPackedKey; // 0x250
	FVector LocationPrev; // 0x254
	float m_fLastOcclusionCheckTime; // 0x260
	float m_fOcclusionCheckInterval; // 0x264
	float m_fOcclusionNormalization; // 0x268
	float m_fLastOcclusionCheckLocation; // 0x26c
	float m_fOcclusionCheckDist; // 0x270
	float m_fOcclusionAmount; // 0x274
	float m_fMaxDistForOcclusionPathfinding; // 0x278
	float m_fMaxDistForOcclusionCheck; // 0x27c
};

struct USeqAct_CameraShake : USequenceAction {
	ObjectProperty Shake; // 0x108
	float ShakeScale; // 0x110
	char bDoControllerVibration : 1; // 0x114
	char bRadialShake : 1; // 0x114
	char bOrientTowardRadialEpicenter : 1; // 0x114
	float RadialShake_InnerRadius; // 0x118
	float RadialShake_OuterRadius; // 0x11c
	float RadialShake_Falloff; // 0x120
	ECameraAnimPlaySpace PlaySpace; // 0x124
	ObjectProperty LocationActor; // 0x128
};

struct ATgDevice_ImaniLMB2 : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedImani; // 0xa0c
	FVector m_vProjectileSpawnOffset2; // 0xa14
	char m_bFireLeftHand : 1; // 0xa20
	float c_fLastFireTimestamp; // 0xa24
	float c_fTimeToRelaxHands; // 0xa28
	float s_fLastFireHoldPct; // 0xa2c
	float m_fFireReleasePercent; // 0xa30
	float m_fReticleReleaseAnimationDuration; // 0xa34
};

struct UTgDeviceForm_AzaanUltSlam : UTgDeviceForm {
	TArray<ObjectProperty> m_AzaanNodes1p; // 0x28c
};

struct UUIComponent_ItemStats : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_ItemStatEntries; // 0x12c
};

struct UTgEffectHeal : UTgEffect {
	float m_fMissingHealthInitial; // 0xa0
	int32_t m_nIntervalCount; // 0xa4
	int32_t m_nSimplifiedPropertyId; // 0xa8
	int32_t m_nScalingHoTCounter; // 0xac
};

struct USeqEvent_AnalogInput : USequenceEvent {
	char bTrapInput : 1; // 0x128
	int32_t AllowedPlayerIndex; // 0x12c
	TArray<FName> InputNames; // 0x130
};

struct UUIResourceCombinationProvider : UUIDataProvider {
	ObjectProperty StaticDataProvider; // 0x70
	ObjectProperty ProfileProvider; // 0x78
};

struct UTgInventoryObject_Listen_ActiveDuringAbility_WhileOutOfCombat : UTgInventoryObject_Listen_ActiveDuringAbility {
	char m_bPawnInCombat : 1; // 0xd4
};

struct ATgPawn_Structure : ATgPawn {
	float s_fLastDamageTime; // 0x2e9c
	float s_fDamageNotificationDelay; // 0x2ea0
};

struct UUIComponent_Button_LoadoutAvatar : UUIComponent_Display {
	ObjectProperty m_Avatar; // 0x124
	ObjectProperty m_mcRarity; // 0x12c
	ObjectProperty m_mcName; // 0x134
};

struct AWorldAttractor : AActor {
	char bEnabled : 1; // 0x280
	float LoopDuration; // 0x284
	float CurrentTime; // 0x288
	EWorldAttractorFalloffType FalloffType; // 0x28c
	FMatineeRawDistributionFloat FalloffExponent; // 0x290
	FMatineeRawDistributionFloat Range; // 0x2bc
	FMatineeRawDistributionFloat Strength; // 0x2e8
	float CollisionRadius; // 0x314
	FMatineeRawDistributionFloat DragCoefficient; // 0x318
	FMatineeRawDistributionFloat DragRadius; // 0x344
};

struct ATgDevice_CommanderPassive : ATgDevice {
	FPointer VfTable_ITgCallbackInterface; // 0xa04
	ObjectProperty m_CallbackContainer; // 0xa0c
};

struct UTgEffect : UObject {
	ObjectProperty m_EffectGroup; // 0x60
	int32_t m_nEffectID; // 0x68
	int32_t m_nPropertyId; // 0x6c
	int32_t m_nCalcMethodCode; // 0x70
	char m_bUseOnInterval : 1; // 0x74
	char m_bRemovable : 1; // 0x74
	char m_bAllowStacking : 1; // 0x74
	char m_bApplyToProperty : 1; // 0x74
	int32_t m_nPropertyValueId; // 0x78
	float m_fCurrent; // 0x7c
	float m_fBase; // 0x80
	float m_fMinimum; // 0x84
	float m_fMaximum; // 0x88
	float m_fScalingFactor; // 0x8c
	float m_fStaticValueOffset; // 0x90
	float m_MaxKnockbackZ; // 0x94
	float m_MinKnockbackZ; // 0x98
	float m_KnockbackZMultiplier; // 0x9c
};

struct UTgAchievement_AirborneDuration : UTgAchievement {
	char m_bAirborne : 1; // 0x94
	float m_fAirborneStartTime; // 0x98
};

struct UTgAIBehaviorAction_MoveAroundLanePusher : UTgAIBehaviorAction_MoveToTarget {
	TG_EQUIP_POINT DeviceSlot; // 0x9c
	char bMoveClockWise : 1; // 0xa0
};

struct ATgProj_IceStorm : ATgProj_Simulated {
	char m_bStopped : 1; // 0x52c
	char m_bCheckLOSForHit : 1; // 0x52c
};

struct ATgTutorialInfo : AActor {
	float fButtonHoldTime; // 0x280
	float fVolumeStandTime; // 0x284
	float fBotRespawnTime; // 0x288
	float fBotTargetsKilledWaitTime; // 0x28c
	float fPlayerTeamCaptureMultiplier; // 0x290
	float fRepeatInstructionTime; // 0x294
	float fExtendedRepeatInstructionTime; // 0x298
	float fIntroExtensionTime; // 0x29c
	float fBotDelayTravelToMovementTime; // 0x2a0
	float fBotDelayTravelToUltRangeTime; // 0x2a4
	float fPayloadContestPercent; // 0x2a8
	float fLanePusherGroundSpeed; // 0x2ac
	float fEnergyChargeMultiplier; // 0x2b0
	ObjectProperty ApproachHelperArea; // 0x2b4
	ObjectProperty AutoShootingRangeStandingTargetArea; // 0x2bc
	ObjectProperty UltimateShootingRangeStandingTargetArea; // 0x2c4
	ObjectProperty JumpLowerArea; // 0x2cc
	ObjectProperty JumpUpperArea; // 0x2d4
	ObjectProperty HelperBotFactory; // 0x2dc
	ObjectProperty AutoBotFactory; // 0x2e4
	ObjectProperty MultipleAutoBotFactory; // 0x2ec
	ObjectProperty BattleAbilityBotFactory; // 0x2f4
	ObjectProperty AltAbilityBotFactory; // 0x2fc
	ObjectProperty UltimateChargeBotFactory; // 0x304
	ObjectProperty UltimateAbilityBotFactory; // 0x30c
	ObjectProperty ContestCapturePointBotFactory; // 0x314
	ObjectProperty ContestPayloadBotsFactory; // 0x31c
	ObjectProperty HelperMoveTargetAutoRange; // 0x324
	ObjectProperty HelperMoveTargetMovementAbility; // 0x32c
	ObjectProperty HelperMoveTargetUltRange; // 0x334
	ObjectProperty EndGameFocus; // 0x33c
	ObjectProperty HelperBotController; // 0x344
};

struct USphericalHarmonicLightComponent : ULightComponent {
	FSHVectorRGB WorldSpaceIncidentLighting; // 0x1b0
	char bRenderBeforeModShadows : 1; // 0x240
};

struct UJsonObject : UObject {
	FMap_Mirror ValueMap; // 0x60
	FMap_Mirror ObjectMap; // 0xa8
	TArray<FString> ValueArray; // 0xf0
	TArray<ObjectProperty> ObjectArray; // 0x100
};

struct UActorFactoryDecal : UActorFactory {
	ObjectProperty DecalMaterial; // 0x9c
};

struct ATgMidnightFogVolumeDensityInfo : AFogVolumeSphericalDensityInfo {
	char m_bFogOn : 1; // 0x294
	char m_bFogUpdateNeeded : 1; // 0x294
	char m_bIsFadingOut : 1; // 0x294
	float m_fCurrentStartDistance; // 0x298
	float m_fFadeOutDuration; // 0x29c
	float m_fFadeOutTimer; // 0x2a0
	float m_fTargetMaxDensity; // 0x2a4
	float m_fDestroyTimer; // 0x2a8
	ComponentProperty SphericalDensityComponent; // 0x2ac
};

struct ATgDeploy_ManaRift : ATgDeployable {
	ObjectProperty m_CachedPawnOwner; // 0x46c
};

struct UUIComponent_MatchInvitePlayerEntry : UUIComponent_Display {
	ObjectProperty m_Accepted; // 0x124
	ObjectProperty m_Avatar; // 0x12c
};

struct UTgInventoryObject_Listen_DoubleTap : UTgInvListener {
	float m_fBaseWeaponDamage; // 0xc4
	float m_fDoubleTapDelay; // 0xc8
	TArray<ObjectProperty> m_PendingDoubleTapActors; // 0xcc
	TArray<float> m_PendingDoubleTapTimes; // 0xdc
};

struct UTgDeviceForm_TheLaw : UTgDeviceForm {
	ObjectProperty m_CachedLex; // 0x28c
	ObjectProperty m_CachedWMA; // 0x294
	FName m_LeftSlideSkelControlName1P; // 0x29c
	FName m_RightSlideSkelControlName1P; // 0x2a4
	FName m_LeftSlideSkelControlName3P; // 0x2ac
	FName m_RightSlideSkelControlName3P; // 0x2b4
	ObjectProperty m_LeftSlideSkelControl1P; // 0x2bc
	ObjectProperty m_RightSlideSkelControl1P; // 0x2c4
	ObjectProperty m_LeftSlideSkelControl3P; // 0x2cc
	ObjectProperty m_RightSlideSkelControl3P; // 0x2d4
	float c_fPreviousLeftSlideStrength; // 0x2dc
	float c_fPreviousRightSlideStrength; // 0x2e0
};

struct ATgGame_Battle : ATgGame_Mission {
	float m_MultiLaneXpBonus; // 0x744
	char m_bRespawnInhibitors : 1; // 0x748
	char m_bEnableCrowdEvents : 1; // 0x748
	char m_bRestrictStoreInteractions : 1; // 0x748
	char m_bWinGameOnNexusDestroyed : 1; // 0x748
	int32_t m_nBumbasMaskId; // 0x74c
	int32_t m_nSupportStarterId; // 0x750
	TArray<FTgAIBotPlayersToSpawn> m_MercsToSpawn; // 0x754
	int32_t m_nPIESpawnTable; // 0x764
	int32_t m_nTargetPlayerCountForMercs; // 0x768
};

struct UUIComponent_ItemMini : UUIComponent_Display {
	ObjectProperty m_mcIcon; // 0x124
	int32_t m_nLevelOverride; // 0x12c
};

struct UUIScene_UIRadialMenu : UUIScene {
	ObjectProperty m_mcWheel; // 0x1cc
	TArray<ObjectProperty> m_pSubSelectW; // 0x1d4
	TArray<ObjectProperty> m_pSubSelectE; // 0x1e4
	TArray<ObjectProperty> m_pSubSelectS; // 0x1f4
	ObjectProperty m_mcSelectionHighlightN; // 0x204
	ObjectProperty m_mcSelectionHighlightS; // 0x20c
	ObjectProperty m_mcSelectionHighlightE; // 0x214
	ObjectProperty m_mcSelectionHighlightW; // 0x21c
	ObjectProperty m_mcInnerRingSelection; // 0x224
	ObjectProperty m_mcOuterRingSelection; // 0x22c
	ObjectProperty m_mcInnerRingSelectionVis; // 0x234
	ObjectProperty m_mcOuterRingSelectionVis; // 0x23c
	ObjectProperty m_mcErrorS; // 0x244
	RadialMenuDir m_CurrentSlice; // 0x24c
	int32_t m_nCurrentSubSelectionW; // 0x250
	int32_t m_nCurrentSubSelectionE; // 0x254
	int32_t m_nCurrentSubSelectionS; // 0x258
	int32_t m_nAxisUpdateCBHandle; // 0x25c
	float m_fSelectionDelayGamepad; // 0x260
	float m_fSelectionDelayMouse; // 0x264
	char m_bUseInnerSelectionGamepad : 1; // 0x268
	char m_bUseInnerSelectionMouse : 1; // 0x268
	char m_bMountInvalid : 1; // 0x268
	float m_fDeselectionDelayGamepad; // 0x26c
	float m_fDeselectionDelayMouse; // 0x270
	ObjectProperty m_akSliceTick; // 0x274
};

struct UTgAIBehaviorCondition_IsDecoyState : UTgAIBehaviorCondition {
	EDecoyAIState DecoyState; // 0x98
};

struct ATgLobbyCaptureActor : ASceneCapture2DActor {
	ObjectProperty m_ViewTarget; // 0x290
};

struct ATgDevice_HexaFire : ATgDevice_HitPulse {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa0c
	FVector m_vProjectileSpawnOffset2; // 0xa14
	char m_bFireLeftWeapon : 1; // 0xa20
	ObjectProperty m_CachedRuckus; // 0xa24
};

struct UTgAnimNodeToggleWithTransition_Disengage : UTgAnimNodeToggleWithTransition {
	int32_t m_nPendingChildIndex; // 0x170
	char m_bForceNewActiveChild : 1; // 0x174
};

struct USeqAct_ProjectileFactory : USeqAct_ActorFactory {
	ObjectProperty PSTemplate; // 0x178
	FName SocketName; // 0x180
	FName BoneName; // 0x188
};

struct UDataStoreClient : UUIRoot {
	TArray<FString> GlobalDataStoreClasses; // 0x70
	TArray<ObjectProperty> GlobalDataStores; // 0x80
	TArray<FString> PlayerDataStoreClassNames; // 0x90
	TArray<UUIDataStore*> PlayerDataStoreClasses; // 0xa0
	TArray<FPlayerDataStoreGroup> PlayerDataStores; // 0xb0
};

struct UTgAILocalPositionSolver : UObject {
	FPointer VfTable_IInterface_ActorPathConstraints; // 0x60
	TArray<FDefaultRepulsorData> DefaultWeights; // 0x68
	ObjectProperty OuterController; // 0x78
	float LastQueryTime; // 0x80
	FVector LastQueryPoint; // 0x84
	FVector LastSolvePoint; // 0x90
	char bSolveDistanceThreshold : 1; // 0x9c
	char bSolveWeights : 1; // 0x9c
};

struct ATgPawn_Corvus : ATgPawn_Character {
	ObjectProperty r_RMBTarget; // 0x3160
	float m_fDelayTargetValid; // 0x3168
	ObjectProperty m_BeaconTarget; // 0x316c
	ObjectProperty m_CachedBeaconDevice; // 0x3174
	ObjectProperty m_CachedCorvusDagger; // 0x317c
	ObjectProperty m_CachedCorvusUlt; // 0x3184
	ObjectProperty m_CachedCorvusDaggerTalent; // 0x318c
	ObjectProperty r_DaggerProjectile; // 0x3194
	ObjectProperty r_DaggerDeployable; // 0x319c
	CorvusDaggerState r_eRemoteDaggerState; // 0x31a4
	FVector r_vPreTeleportLocation; // 0x31a8
	float m_fPreviousAscentVelocity; // 0x31b4
	float m_fFlightMaxRiseSpeed; // 0x31b8
	TArray<FBeaconInfo> m_BeaconTargets; // 0x31bc
	char r_bBeaconLifeStealEquipped : 1; // 0x31cc
};

struct ATgDevice_FragGrenade : ATgDevice {
	ObjectProperty m_CachedViktor; // 0xa04
	char m_bEndCook : 1; // 0xa0c
	char m_bThrownGrenade : 1; // 0xa0c
	char s_bCanPickUpNuggetRefills : 1; // 0xa0c
	char s_bFullCook : 1; // 0xa0c
};

struct ATgDevice_KingBomb : ATgDevice_Charge {
	float m_fEndFireZoomDurationOverride; // 0xa78
};

struct UUIData_Challenge : UUIData {
	Fdword m_dwActivityId; // 0x64
	Fdword m_eStatus; // 0x68
	char m_bIsDirty : 1; // 0x6c
	char m_bCompletionAck : 1; // 0x6c
	char m_bCompletedInPast : 1; // 0x6c
	char m_bGoalsInitialized : 1; // 0x6c
	TArray<ObjectProperty> m_pPrimaryGoals; // 0x70
	TArray<ObjectProperty> m_pGatingGoals; // 0x80
	TArray<ObjectProperty> m_pAllDoneGoals; // 0x90
	TArray<ObjectProperty> m_pAuxiliaryGoals; // 0xa0
};

struct UUIScene_UIHudImani : UUIScene {
	ObjectProperty m_ManaBar; // 0x1cc
	ObjectProperty m_UltTimer; // 0x1d4
	ObjectProperty m_mcClearcastProc; // 0x1dc
	ObjectProperty m_mcClearcastProcLeft; // 0x1e4
	ObjectProperty m_mcClearcastProcRight; // 0x1ec
	ObjectProperty m_mcPyromania; // 0x1f4
	char m_bHasDragonsFire : 1; // 0x1fc
	char m_bClearcastActive : 1; // 0x1fc
	char m_bViewTargetImani : 1; // 0x1fc
	int32_t m_nDragonsFireParity; // 0x200
	float m_fClearcastAnimationTime; // 0x204
	float m_fClearcastAnimationOffset; // 0x208
	float m_fClearcastAnimationFadeDuration; // 0x20c
};

struct USimpleSplineNonLoopAudioComponent : USimpleSplineAudioComponent {
	float DelayMin; // 0x31c
	float DelayMax; // 0x320
	float PitchMin; // 0x324
	float PitchMax; // 0x328
	float VolumeMin; // 0x32c
	float VolumeMax; // 0x330
	int32_t CurrentSlotIndex; // 0x334
	float UsedVolumeModulation; // 0x338
	float UsedPitchModulation; // 0x33c
	float NextSoundTime; // 0x340
};

struct USeqAct_AIMoveToActor : USeqAct_Latent {
	char bInterruptable : 1; // 0x120
	char bPickClosest : 1; // 0x120
	TArray<ObjectProperty> Destination; // 0x124
	float MovementSpeedModifier; // 0x134
	ObjectProperty LookAt; // 0x138
	int32_t LastDestinationChoice; // 0x140
};

struct UCameraAnim : UObject {
	ObjectProperty CameraInterpGroup; // 0x60
	float AnimLength; // 0x68
	FBox BoundingBox; // 0x6c
	FPostProcessSettings BasePPSettings; // 0x88
	float BasePPSettingsAlpha; // 0x208
	float BaseFOV; // 0x20c
};

struct ATgPawn_Ying : ATgPawn_Character {
	ObjectProperty r_InhandTarget; // 0x3160
	FVector r_InhandHitOffset; // 0x3168
	ObjectProperty m_TeleportTarget; // 0x3174
	char m_bRetrievedIllusionListThisTick : 1; // 0x317c
	char m_bHasShatterableIllusionsThisTick : 1; // 0x317c
	char r_bHasCompensate : 1; // 0x317c
	char m_bPulledTargetFromList : 1; // 0x317c
	TArray<TScriptInterface<Class>> m_ActiveIllusions; // 0x3180
	float m_fFrictionMultiplier; // 0x3190
	float m_fGravityMultiplier; // 0x3194
	float m_fMaxFallSpeed; // 0x3198
};

struct USeqEvent_SequenceActivated : USequenceEvent {
	FString InputLabel; // 0x128
};

struct UInterpTrackInstProperty : UInterpTrackInst {
	ObjectProperty PropertyUpdateCallback; // 0x60
	ObjectProperty PropertyOuterObjectInst; // 0x68
};

struct UTgAchievement_KillAfterDevice : UTgAchievement {
	FMap_Mirror m_mlastHits; // 0x94
};

struct ATgDevice_ChargeBurst : ATgDevice {
	ObjectProperty m_CachedLazarus; // 0xa04
};

struct UUIData_MatchMember : UUIData {
	FPointer VfTable_ITgCallbackInterface; // 0x64
	FPointer VfTable_IUIDataInterface_Name; // 0x6c
	FString m_sName; // 0x74
	char m_bNameHidden : 1; // 0x84
	char m_bUsingBoosterSkinItem : 1; // 0x84
	char m_bTradePossible : 1; // 0x84
	char m_bTradeInitiated : 1; // 0x84
	char m_bWantsTradePossible : 1; // 0x84
	char m_bPendingFilterRequest : 1; // 0x84
	Fdword m_dwPlayerId; // 0x88
	Fdword m_dwBotId; // 0x8c
	int32_t m_nMctsMatchIndex; // 0x90
	ObjectProperty pPlayerData; // 0x94
	ObjectProperty m_pSelectedChamp; // 0x9c
	FMatchLobbyPlayerCustomize m_CurrentAllyCustomizeState; // 0xa4
	ObjectProperty m_pTradeTarget; // 0xc4
	ObjectProperty m_pRequestedTradeWith; // 0xcc
	ObjectProperty m_CallbackContainer; // 0xd4
};

struct UTgDeviceFire_SnakeToss : UTgDeviceFire {
	TArray<FRecentStunnedTarget> m_RecentStunnedTargets; // 0x268
};

struct UUIHudMinimap : UTgGfxScene {
	int32_t m_nDepth; // 0x1ec
	char m_bInit : 1; // 0x1f0
	char m_bMinimapShouldShow : 1; // 0x1f0
	float m_fSize; // 0x1f4
	float m_fRadius; // 0x1f8
	FString m_sNamedAreaName; // 0x1fc
	FVector m_vBoundsCenter; // 0x20c
	FVector m_vBoundsExtents; // 0x218
	TArray<FUIPING_DATA> m_NamedAreas; // 0x224
	ObjectProperty m_mcMap; // 0x234
	ObjectProperty m_mcMapFrame; // 0x23c
	ObjectProperty m_mcMapNamedAreas; // 0x244
	ObjectProperty m_mcMapImage[0x2]; // 0x24c
	ObjectProperty m_mcLocalPlayer; // 0x25c
	ObjectProperty m_mcTeam[0x4]; // 0x264
	ObjectProperty m_mcWaypoint[0x4]; // 0x284
};

struct UTgAnimNodeAimOffset : UTgAnimNodeAimOffset_Base {
	ObjectProperty Owner; // 0x170
	TArray<ObjectProperty> m_CachedNodeList; // 0x178
	char m_bInitializedCachedNodeList : 1; // 0x188
	char m_bDisableVerticalAiming : 1; // 0x188
	char bInterpolating : 1; // 0x188
	char m_bRandomAimPointsEnabled : 1; // 0x188
	char m_bOverrideAim : 1; // 0x188
	char m_bAimAtTarget : 1; // 0x188
	char m_bDisableWeaponLeading : 1; // 0x188
	EPitchControlType m_PitchControlType; // 0x18c
	FInterpCurveFloat m_PitchControlUserCurve; // 0x190
	float TurnInPlaceOffset; // 0x1a4
	float LastAimX; // 0x1a8
	float InterpSpeed; // 0x1ac
	FVector2D m_AimOffsetPct; // 0x1b0
	FVector2D m_RandomAimPointsRangeX; // 0x1b8
	FVector2D m_RandomAimPointsRangeY; // 0x1c0
	float m_fRandomAimPointsInterpRate; // 0x1c8
	float m_fRandomAimPointsIntervalMin; // 0x1cc
	float m_fRandomAimPointsIntervalMax; // 0x1d0
	float m_fCurrentRandomAimPointsInterval; // 0x1d4
	FVector2D m_TargetRandomAimLocation; // 0x1d8
	float m_fDeltaTime; // 0x1e0
	FVector2D m_OverriddenAim; // 0x1e4
	ObjectProperty m_WeaponMeshActor; // 0x1ec
};

struct UParticleModuleUberLTISIVCLILIRSSBLIRR : UParticleModuleUberBase {
	FRawDistributionFloat Lifetime; // 0x78
	FRawDistributionVector StartSize; // 0x9c
	FRawDistributionVector StartVelocity; // 0xc0
	FRawDistributionFloat StartVelocityRadial; // 0xe4
	FRawDistributionVector ColorOverLife; // 0x108
	FRawDistributionFloat AlphaOverLife; // 0x12c
	FRawDistributionVector StartLocation; // 0x150
	FRawDistributionFloat StartRotation; // 0x174
	FRawDistributionVector SizeLifeMultiplier; // 0x198
	char SizeMultiplyX : 1; // 0x1bc
	char SizeMultiplyY : 1; // 0x1bc
	char SizeMultiplyZ : 1; // 0x1bc
	FRawDistributionFloat StartRotationRate; // 0x1c0
};

struct UNavMeshPath_AlongLine : UNavMeshPathConstraint {
	FVector Direction; // 0x78
};

struct UTgSeqAct_ToggleStaticMeshSilhouette : USequenceAction {
	ObjectProperty SMA; // 0x108
	char bIsEnabled : 1; // 0x110
};

struct ATgRepInfo_Player : APlayerReplicationInfo {
	int32_t r_nPlayerId; // 0x480
	int32_t r_nPawnId; // 0x484
	int32_t r_nControlledPawnId; // 0x488
	int32_t r_nPlayerGameID; // 0x48c
	int32_t m_nUIDisplayIndex; // 0x490
	float c_fLastUpdateTime; // 0x494
	float r_fCreditCacheDuration; // 0x498
	int32_t r_nCreditCacheDurationTick; // 0x49c
	int32_t r_nSupportWins; // 0x4a0
	int32_t r_nDamageWins; // 0x4a4
	int32_t r_nFlankWins; // 0x4a8
	int32_t r_nFrontlineWins; // 0x4ac
	int32_t r_nEquippedTitleId; // 0x4b0
	int32_t r_nHealthCurrent; // 0x4b4
	int32_t r_nHealthMaximum; // 0x4b8
	int32_t r_nMaxArmor; // 0x4bc
	int32_t r_nPowerCurrent; // 0x4c0
	int32_t r_nPowerMaximum; // 0x4c4
	int32_t r_nPacingType; // 0x4c8
	int32_t r_nShieldCurrent; // 0x4cc
	int32_t r_nShieldMaximum; // 0x4d0
	ObjectProperty r_MasterPrep; // 0x4d4
	ObjectProperty r_TaskForce; // 0x4dc
	ObjectProperty r_SpawnPoint; // 0x4e4
	float r_fReviveSecs; // 0x4ec
	float r_fReviveSecsTotal; // 0x4f0
	char r_bMapHasLoaded : 1; // 0x4f4
	char r_bHasBeenSeenByEnemyTeam : 1; // 0x4f4
	char r_bHasFlag : 1; // 0x4f4
	char r_bSilhouettesBlocked : 1; // 0x4f4
	char r_bExtendedSilhouetteRange : 1; // 0x4f4
	char r_bSpeakingEmote : 1; // 0x4f4
	char r_bPlayingAnnouncer : 1; // 0x4f4
	char c_bSpeaking : 1; // 0x4f4
	char r_bNeedsHealing : 0; // 0x4f4
	char r_bDropped : 0; // 0x4f4
	char r_bForceNotBot : 0; // 0x4f4
	char r_bDisconnected : 0; // 0x4f4
	char c_bIsDying : 0; // 0x4f4
	char r_IsRevealed : 0; // 0x4f4
	char r_bIsStealthed : 0; // 0x4f4
	char r_bIsVolumeStealthed : 0; // 0x4f4
	char r_bUltimateIsReady : 0; // 0x4f4
	char r_bCanUpgradeLegendary : 0; // 0x4f4
	char s_bAutoSelectCards : 0; // 0x4f4
	char c_bTrackedProjectileIdsJustChanged : 0; // 0x4f4
	char r_nSurrenderVote; // 0x4f8
	char r_bVisibleOnMap[0x3]; // 0x4f9
	char r_nVisibilityMask; // 0x4fc
	char r_nFlashUpdateAmmo; // 0x4fd
	DeployableOverlayIcon r_eDeployableOverlayIcon; // 0x4fe
	DeployableOverlayState r_eDeployableOverlayState; // 0x4ff
	DeployableOverlayIcon c_eDeployableOverlayIconOverride; // 0x500
	DeployableOverlayState c_eDeployableOverlayStateOverride; // 0x501
	GAME_MODE_INSTRUCTION r_eCurrentGameModeInstruction; // 0x502
	TArray<ObjectProperty> m_PRIArray; // 0x504
	TArray<ObjectProperty> m_DRIArray; // 0x514
	ObjectProperty c_PriorMasterPrep; // 0x524
	ObjectProperty c_PriorTaskForce; // 0x52c
	int32_t c_fLastHealth; // 0x534
	float c_fLastDamageTime; // 0x538
	float r_fVisionRange; // 0x53c
	ObjectProperty s_CarriedFlag; // 0x540
	FString r_ClanTag; // 0x548
	FString c_PlayerNameWithTag; // 0x558
	float c_fBarragePercent; // 0x568
	float m_fSyncAnnouncerFailsafe; // 0x56c
	FSimulatedProjectileOverrides r_SimProjOverrides[0x8]; // 0x570
	int32_t r_Scores[0x17]; // 0x630
	FDeviceTeamInfo r_PlayerDevices[0x31]; // 0x68c
	int32_t r_PlayerDeviceAmmo[0x31]; // 0xe34
	FMarkedTargetInfo r_MarkedTargets[0x5]; // 0xef8
	float c_fLastSpeakingTime; // 0xf20
	float s_fNeedHealingDuration; // 0xf24
	int32_t r_nCredits; // 0xf28
	int32_t r_nEarnedCredits; // 0xf2c
	int32_t r_nXp; // 0xf30
	int32_t r_nLevel; // 0xf34
	int32_t r_nPlayerScore; // 0xf38
	int32_t r_nCardHealth; // 0xf3c
	int32_t r_nCardDamage; // 0xf40
	int32_t r_nPowerLevel; // 0xf44
	int32_t r_nPowerLevelCount; // 0xf48
	int32_t r_nProfileId; // 0xf4c
	int32_t r_nSkinId; // 0xf50
	FName r_nmVoicePkg; // 0xf54
	Fdword r_eVoicePref; // 0xf5c
	int32_t r_nKillstreak; // 0xf60
	int32_t r_nWeaponSkinId; // 0xf64
	int32_t r_nMountSkinId; // 0xf68
	int32_t r_nAssistScore; // 0xf6c
	ObjectProperty r_PawnOwner; // 0xf70
	int32_t r_nLaneId; // 0xf78
	int32_t s_KillOrDeathStreakModifier; // 0xf7c
	FsPingInfo r_PingInfo[0x4]; // 0xf80
	FVector c_DeathLocation; // 0xff0
	FTG_HUD_INFO c_HudInfo; // 0xffc
	float r_fUltReadyInSecs; // 0x1000
	int32_t r_nUltimateCharge; // 0x1004
	int32_t r_nRequiredUltimateCharge; // 0x1008
	int32_t r_nPassiveMode; // 0x100c
	int32_t r_nPerkCountKit; // 0x1010
	int32_t r_nPerkCountArmor; // 0x1014
	int32_t r_nPerkCountWeapon; // 0x1018
	int32_t r_nPerkCountGeneral; // 0x101c
	int32_t r_nCardsToDraw; // 0x1020
	int32_t r_nDrawnCards[0x5]; // 0x1024
	int32_t r_nDrawnPlayer[0x5]; // 0x1038
	float s_fScoreTakenPool; // 0x104c
	float s_fScoreDamagePool; // 0x1050
	float s_fScoreCapturePool; // 0x1054
	float s_fScoreHealingPool; // 0x1058
	float s_fScoreMitigatedPool; // 0x105c
	float s_fScoreTakenThreshold; // 0x1060
	float s_fScoreDamageThreshold; // 0x1064
	float s_fScoreCaptureThreshold; // 0x1068
	float s_fScoreHealingThreshold; // 0x106c
	float s_fScoreMitigatedThreshold; // 0x1070
	TArray<FDeckCardData> s_CardDeckTier1; // 0x1074
	TArray<FDeckCardData> s_CardDeckTier2; // 0x1084
	TArray<FDeckCardData> s_CardDeckTier3; // 0x1094
	TArray<FDeckCardData> s_CardDeckTier4; // 0x10a4
	TArray<FDeckCardData> s_CardDeckTier5; // 0x10b4
	FTgAbilityInfo r_GeneralAbilityInfo; // 0x10c4
	FTgAbilityInfo r_ArmorAbilityInfo; // 0x1108
	ObjectProperty s_LastKillerPRI; // 0x114c
	TArray<FPlayOfTheGameEventData> s_PlayOfTheGameEventList; // 0x1154
	TArray<FPlayOfTheGameEventCounter> s_PlayOfTheGameEventCounters; // 0x1164
	int32_t r_nDeployableOverlayDisplayMask; // 0x1174
	float r_fDeployableOverlayEnemyViewDist; // 0x1178
	int32_t c_nDeployableOverlayDisplayMaskOverride; // 0x117c
	float c_fDeployableOverlayEnemyViewDistOverride; // 0x1180
	int32_t r_TrackedProjectileIds[0xf]; // 0x1184
	FTrackedProjectileInitData r_TrackedProjectilesInitData[0xf]; // 0x11c0
	FTrackedProjectileUpdateData r_TrackedProjectilesUpdateData[0xf]; // 0x1490
	FVector r_vWaypoint; // 0x1634
	int32_t s_nVGSGoodLuckHaveFun; // 0x1640
};

struct UUIData_LobbySlotItem : UUIData {
	UIChampionCustomizeState eState; // 0x64
	FPointer pItemInfo; // 0x68
	char bActive : 1; // 0x70
};

struct UUIComponent_Avatar : UUIComponent_Display {
	ObjectProperty m_mcTexture; // 0x124
};

struct ARB_LineImpulseActor : ARigidBodyBase {
	float ImpulseStrength; // 0x280
	float ImpulseRange; // 0x284
	char bVelChange : 1; // 0x288
	char bStopAtFirstHit : 1; // 0x288
	char bCauseFracture : 1; // 0x288
	ComponentProperty Arrow; // 0x28c
	char ImpulseCount; // 0x294
};

struct UMaterialExpressionTextureCoordinate : UMaterialExpression {
	int32_t CoordinateIndex; // 0xb0
	float UTiling; // 0xb4
	float VTiling; // 0xb8
	char UnMirrorU : 1; // 0xbc
	char UnMirrorV : 1; // 0xbc
};

struct UTgControlModule_SpectatorLockedView : UTgControlModule_Spectator {
	float DirectorModeSpectatorStallZ; // 0x78
	float DirectorModeSpectatorMinStallZ; // 0x7c
};

struct ATgPawn_ImaniAvatar : ATgPawn_Character {
	ObjectProperty r_CachedImani; // 0x3160
	ObjectProperty m_CachedFlight; // 0x3168
	float m_fMaxMovementDegPerSec; // 0x3170
	float m_fAimConstraintAngle; // 0x3174
	float m_fLastFlightBearing; // 0x3178
	EAvatarState r_eAvatarState; // 0x317c
	EAvatarIntroState c_eIntroState; // 0x317d
	TArray<DelegateProperty> s_OnDeathDelegates; // 0x3180
	float m_fHoverSpeedFactor; // 0x3190
	float m_fCruiseSpeedFactor; // 0x3194
	float m_fBoostSpeedFactor; // 0x3198
	float c_fIntroPreparationTime; // 0x319c
	float m_fReadyTimestamp; // 0x31a0
	float m_fProjectileSpawnNeckLength; // 0x31a4
	ComponentProperty m_DamageCollisionComponent; // 0x31a8
	int32_t r_nReplicatedAimPitch; // 0x31b0
	int32_t r_nReplicatedAimYaw; // 0x31b4
	float m_fLockedFOV; // 0x31b8
	float m_fMinCameraRotationPitch; // 0x31bc
	float m_fMaxCameraRotationPitch; // 0x31c0
	float r_fCachedInhandRange; // 0x31c4
	TArray<TG_EQUIP_POINT> c_eAscendInterceptSlots; // 0x31c8
	TArray<TG_EQUIP_POINT> c_eDescendInterceptSlots; // 0x31d8
	char c_bControlExperiment : 1; // 0x31e8
	int32_t m_nFlyUpIconId; // 0x31ec
	int32_t m_nFlyDownIconId; // 0x31f0
	FString m_sFlyUpIcon; // 0x31f4
	FString m_sFlyDownIcon; // 0x3204
	DelegateProperty __DestroyedEvent__Delegate; // 0x3214
};

struct UUIComponent_ChampionRankRow : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_mcType; // 0x12c
	ObjectProperty m_mcWins; // 0x134
	ObjectProperty m_mcLosses; // 0x13c
	ObjectProperty m_mcRank; // 0x144
	ObjectProperty m_mcChampionIcon; // 0x14c
	ObjectProperty m_mcMasteryTitle; // 0x154
	ObjectProperty m_MasteryProgress; // 0x15c
	ObjectProperty m_pDetailsButton; // 0x164
};

struct UUIComponent_MatchLobbyTeam : UUIComponent_List {
	char m_bIsBlueTeam : 1; // 0x260
	ObjectProperty m_pBoostButton; // 0x264
	ObjectProperty m_pBoostAction; // 0x26c
	ObjectProperty m_pBackAction; // 0x274
};

struct UDominantSpotLightComponent : USpotLightComponent {
	FDominantShadowInfo DominantLightShadowInfo; // 0x270
	FArray_Mirror DominantLightShadowMap; // 0x320
};

struct ATgDevice_Pursuit : ATgDevice_DecoyMod {
	float m_fShatterBaseSpeed; // 0xa04
	float m_fShatterResonanceBaseSpeed; // 0xa08
};

struct UFaceFXAsset : UObject {
	FPointer FaceFXActor; // 0x60
	TArray<char> RawFaceFXActorBytes; // 0x68
	TArray<char> RawFaceFXSessionBytes; // 0x78
	TArray<ObjectProperty> MountedFaceFXAnimSets; // 0x88
	int32_t NumLoadErrors; // 0x98
};

struct UTgAnimNodeChannelFire_CorrupterUlt : UTgAnimNodeBlendList {
	CorrupterUltAnimState CurrentState; // 0x168
};

struct UWebResponse : UObject {
	TArray<FString> Headers; // 0x60
	FMap_Mirror ReplacementMap; // 0x70
	FString IncludePath; // 0xb8
	FString CharSet; // 0xc8
	ObjectProperty Connection; // 0xd8
	char bSentText : 1; // 0xe0
	char bSentResponse : 1; // 0xe0
};

struct UTgInvListener_Scapegoat : UTgInvListener {
	ObjectProperty m_CachedShield; // 0xc4
};

struct ATgDevice_BarricadeDome : ATgDevice {
	FVector m_TurretSpawnLocation; // 0xa04
	int32_t m_FlameTurretID; // 0xa10
};

struct ATgDeploy_AtlasQ : ATgDeployable {
	TArray<ObjectProperty> m_ProjectilesToDestroy; // 0x46c
	float fInterpSpeed; // 0x47c
	float fTimeToDestroy; // 0x480
	float fVelInterpSpeed; // 0x484
	ObjectProperty c_TakeHitOverride; // 0x488
	int32_t c_nTakeHitEffectId; // 0x490
	ObjectProperty s_CachedAtlas; // 0x494
	TArray<ObjectProperty> s_TouchedActors; // 0x49c
};

struct ATgDevice_SaatiPassive : ATgDevice {
	ObjectProperty m_CachedSaati; // 0xa04
	ESaatiBuffType m_eSaatiBuff; // 0xa0c
	float m_fUpperBuffActivationPoint; // 0xa10
	float m_fLowerBuffActivationPoint; // 0xa14
};

struct UUIComponent_ToastEntry : UUIComponent_Display {
	ObjectProperty m_mcText; // 0x124
	ObjectProperty m_mcTitle; // 0x12c
	ObjectProperty m_mcDesc; // 0x134
	ObjectProperty m_mcQuantity; // 0x13c
	ObjectProperty m_mcChallengeIcon; // 0x144
	ObjectProperty m_mcTalentIcon; // 0x14c
	ObjectProperty m_mcItemIcon; // 0x154
	ObjectProperty m_mcRewardLabel; // 0x15c
	ObjectProperty m_mcCurrency0; // 0x164
	ObjectProperty m_mcCurrency1; // 0x16c
	ObjectProperty m_mcCurrencyAmount0; // 0x174
	ObjectProperty m_mcCurrencyAmount1; // 0x17c
	ObjectProperty m_mcChestIcon; // 0x184
	ObjectProperty m_mcRewardIcon; // 0x18c
	ObjectProperty m_mcChestIconLarge; // 0x194
	ObjectProperty m_pCloseButton; // 0x19c
	float m_fOriginalXPos; // 0x1a4
	float m_fWidth; // 0x1a8
	char m_bInitialized : 1; // 0x1ac
	char m_bAnimating : 1; // 0x1ac
	ToastSequence m_eAnimSequence; // 0x1b0
	float m_fAnimationTime; // 0x1b4
};

struct ARB_ForceFieldExcludeVolume : AVolume {
	int32_t ForceFieldChannel; // 0x2bc
	int32_t SceneIndex; // 0x2c0
};

struct AGameCrowdInfoVolume : AVolume {
	TArray<ObjectProperty> PotentialSpawnPoints; // 0x2bc
};

struct UMaterialExpressionScalarParameter : UMaterialExpressionParameter {
	float DefaultValue; // 0xd0
};

struct UUIScene_UIGameMenu : UUIScene {
	TArray<ObjectProperty> m_Buttons; // 0x1cc
	TArray<ObjectProperty> m_ButtonCTAs; // 0x1dc
	TArray<int32_t> m_eOptions; // 0x1ec
	ObjectProperty m_grButtons; // 0x1fc
};

struct UUIInteractable_Button_Price : UUIInteractable_Button {
	ObjectProperty m_mcSlash; // 0x140
	ObjectProperty m_mcPrices[0x3]; // 0x148
	FString m_sPriceLoadNames[0x3]; // 0x160
	int32_t m_nPriceIndex; // 0x190
};

struct UTgAnimMetaData_InvisibleWallFailSafe : UAnimMetaData {
	FName WallEnableBaseName; // 0x60
};

struct UUIComponent_HalloweenEventOverview : UUIComponent_Display {
	ObjectProperty m_grOverview; // 0x124
};

struct UUIData_TreasureRoll_Item : UUIData {
	ObjectProperty m_pRolledItem; // 0x64
	Fdword m_dwRolledItemQuantity; // 0x6c
	ObjectProperty m_pReplacementItem; // 0x70
	Fdword m_dwReplacementItemQuantity; // 0x78
	char m_bIsUnreceivedBoostedItem : 1; // 0x7c
	TArray<ObjectProperty> m_pRolledSubItems; // 0x80
	ObjectProperty m_pSubItemReplacementAggregate; // 0x90
};

struct UTgDeviceForm_Telepunch : UTgDeviceForm {
	TArray<ObjectProperty> m_TelepunchNodes3p; // 0x28c
	TArray<ObjectProperty> m_TelepunchNodes1p; // 0x29c
	char m_bUltFxActive : 1; // 0x2ac
};

struct UTgSeqAct_TutorialInstruction : USequenceAction {
	int32_t nMsgId; // 0x108
};

struct UTgDistributionFloatSoundAttenuation : UDistributionFloat {
	SoundAttenuationType AttenuationType; // 0x7c
	float Attenuation_Sm_foley; // 0x80
	float Attenuation_Lg_foley; // 0x84
	float Attenuation_Melee_hit; // 0x88
	float Attenuation_Sm_gun; // 0x8c
	float Attenuation_Med_gun; // 0x90
	float Attenuation_Lg_gun; // 0x94
	float Attenuation_Sm_exp; // 0x98
	float Attenuation_Med_exp; // 0x9c
	float Attenuation_Lg_exp; // 0xa0
	FName GroupName; // 0xa4
	TArray<FAttenuationGroup> AttenuationGroups; // 0xac
};

struct UUISceneClient : UUIRoot {
	FPointer VfTable_FExec; // 0x70
	FPointer RenderViewport; // 0x78
	FIntPoint MousePosition; // 0x80
	ObjectProperty DataStoreManager; // 0x88
	FMatrix CanvasToScreen; // 0x90
	FMatrix InvCanvasToScreen; // 0xd0
	ObjectProperty UIScenePostProcess; // 0x110
	char bEnablePostProcess : 1; // 0x118
};

struct UTgAnimMetaData_SkelControl_BoneScale : UAnimMetaData {
	TArray<FName> SkelControlNameList; // 0x60
	float BoneScale; // 0x70
	char bFullControlOverController : 1; // 0x74
	FName SkelControlName; // 0x78
};

struct USkelControlHandlebars : USkelControlSingleBone {
	EAxis WheelRollAxis; // 0x100
	EAxis HandlebarRotateAxis; // 0x101
	FName WheelBoneName; // 0x104
	char bInvertRotation : 1; // 0x10c
	int32_t SteerWheelBoneIndex; // 0x110
};

struct UAnimObject : UObject {
	ComponentProperty SkelComponent; // 0x60
};

struct UTgGameplayCurvesSet_DamageFalloff : UTgGameplayCurvesSet {
	FRawDistributionFloat DamageFalloff; // 0x64
	char bIsRangeNormalized : 1; // 0x88
	char bExcludeEffectiveRange : 1; // 0x88
};

struct ATgDevice_Rewind : ATgDevice {
	ObjectProperty m_CachedIllusionDevice; // 0xa04
};

struct APComPlayerController : AGamePlayerController {
	FUniqueNetId m_LastPendingPartyInviteId; // 0x77c
	char m_bPartySessionJoinInProgress : 1; // 0x784
	char m_bPartySessionCreateInProgress : 1; // 0x784
	char m_bPartyDestroyInProgress : 1; // 0x784
	char m_bQuittingToMainMenu : 1; // 0x784
	char m_bHasAcknowledgedPawn : 1; // 0x784
	char m_bLastClientTokenRequestFailed : 1; // 0x784
	char m_bKeepLoggedIn : 1; // 0x784
	Fdword m_dwPendingPartyId; // 0x788
	int32_t m_nMaxPartyPublicConnections; // 0x78c
	FOnlineGameSearchResult m_PendingInviteResult; // 0x790
	FName PartySessionName; // 0x7a0
	FName GameSessionName; // 0x7a8
	Fdword m_dwLastLoginPortalId; // 0x7b0
	Fdword m_dwLastLoginAccountId; // 0x7b4
	FString m_sLastLoginAccessToken; // 0x7b8
	FString m_sLastLoginAccessTokenExpiration; // 0x7c8
};

struct UTgSkelCon_AstroSpinner : UTgSkelCon_Spinner {
	ObjectProperty m_PawnOwner; // 0x144
};

struct UTgDeviceForm_BarrageFire : UTgDeviceForm {
	ObjectProperty m_LastTargetedActor; // 0x28c
	ObjectProperty m_CachedActiveOverlayController; // 0x294
	float m_fIncomingTime; // 0x29c
	int32_t m_nActiveShotNum; // 0x2a0
	float m_fIncomingTimeCurrentShot; // 0x2a4
	float m_fRemainingDurationPct; // 0x2a8
};

struct ABrush : AActor {
	ECsgOper CsgOper; // 0x280
	FColor BrushColor; // 0x284
	int32_t PolyFlags; // 0x288
	char bColored : 1; // 0x28c
	char bCuttingBrush : 1; // 0x28c
	char bSolidWhenSelected : 1; // 0x28c
	char bPlaceableFromClassBrowser : 1; // 0x28c
	ObjectProperty Brush; // 0x290
	ComponentProperty BrushComponent; // 0x298
	TArray<FGeomSelection> SavedSelections; // 0x2a0
};

struct UUIDataStore_GameResource : UUIDataStore {
	TArray<FGameResourceDataProvider> ElementProviderTypes; // 0x98
	FMultiMap_Mirror ListElementProviders; // 0xa8
};

struct USeqEvent_LOS : USequenceEvent {
	float ScreenCenterDistance; // 0x128
	float TriggerDistance; // 0x12c
	char bCheckForObstructions : 1; // 0x130
};

struct UUIData_PortalAccount : UUIDataObject {
	Fdword m_dwPortalId; // 0x74
	char m_bLinked : 1; // 0x78
	char m_bLinkSilentCheck : 1; // 0x78
};

struct ALiftExit : ANavigationPoint {
	ObjectProperty MyLiftCenter; // 0x378
	char bExitOnly : 1; // 0x380
};

struct UUIScene_UIDiscardQuestPopup : UUIScene {
	ObjectProperty m_pRerollButton; // 0x1cc
	ObjectProperty m_pCloseButton; // 0x1d4
	ObjectProperty m_mcTitle; // 0x1dc
	ObjectProperty m_mcQuestTitle; // 0x1e4
	ObjectProperty m_mcQuestIcon; // 0x1ec
	ObjectProperty m_mcRerollText; // 0x1f4
};

struct ATgDeploy_EffectField : ATgDeploy_MatchParentFireMode {
	float m_fEffectFieldHeight; // 0x46c
	float r_fRadiusScale; // 0x470
	TArray<ObjectProperty> m_TouchingPawns; // 0x474
	TArray<ObjectProperty> m_HitActors; // 0x484
	char m_bOnlyHitOnce : 1; // 0x494
	char m_bAllowStacking : 1; // 0x494
	ObjectProperty m_CollisionProxy; // 0x498
};

struct UTgAIBehaviorCondition_NearbyGodCount : UTgAIBehaviorCondition_DistanceBase {
	char bMustBeEnemy : 1; // 0x9c
	char bMustBeInForwardCone : 1; // 0x9c
	int32_t GodThreshold; // 0xa0
	float ForwardConeAngle; // 0xa4
};

struct UPComPositionHistoryServerComponent : UActorComponent {
	int32_t CurrentIndex; // 0x88
	float ServerTimeStamps[0x1e]; // 0x8c
	float ClientTimeStamps[0x1e]; // 0x104
	FVector Positions[0x1e]; // 0x17c
	FVector Velocities[0x1e]; // 0x2e4
	FRotator Rotations[0x1e]; // 0x44c
	char bJustTeleported[0x1e]; // 0x5b4
	char bCollideActors[0x1e]; // 0x5d2
	char bBlockActors[0x1e]; // 0x5f0
	EPhysics Physics[0x1e]; // 0x60e
};

struct UTgAchievement_KillDuringDeviceInvocation : UTgAchievement {
	ObjectProperty m_CachedDevice; // 0x94
	char m_bFiring : 1; // 0x9c
	char m_bKillThresholdReachedThisInvocation : 1; // 0x9c
	int32_t m_nKillsOccurredThisInvocation; // 0xa0
};

struct UTgAnimNodeChannelFire_Telepunch : UTgAnimNodeChannelFire {
	TelepunchAnimState m_eAnimState; // 0x180
};

struct ATgPawn_SiegeEngine_CaptureAndPayload : ATgPawn_SiegeEngine_Payload {
	float r_fMinimumPayloadTravelTime; // 0x30c0
	float r_fTravelSpeedScaleBeforeBase; // 0x30c4
	ELanePusherActionPoint r_eSpeedScaledTravelPoint; // 0x30c8
	char r_bIsPassedSpeedScaledTravelPoint : 1; // 0x30cc
};

struct USeqAct_GetVelocity : USequenceAction {
	float VelocityMag; // 0x108
	FVector VelocityVect; // 0x10c
};

struct UParticleModuleSize : UParticleModuleSizeBase {
	FRawDistributionVector StartSize; // 0x68
};

struct ATgFlagBall : ATgProj_FreeGrenade {
	ObjectProperty m_ballFX; // 0x580
	char m_bAvoidInstigator : 1; // 0x588
	char m_bSilhouetteAllowed : 1; // 0x588
	char m_bSilhouetteInitialized : 1; // 0x588
	float m_fAvoidInstigatorDuration; // 0x58c
	ComponentProperty m_Silhouette; // 0x590
	FLinearColor m_LocalSilhouetteColor; // 0x598
};

struct UTgSkelCon_OscillateRotation : USkelControlSingleBone {
	float OscillationAmplitude; // 0x100
	float OscillationFrequency; // 0x104
	FVector OscillationAxis; // 0x108
	EBoneControlSpace OscillationAxisSpace; // 0x114
	FName OscillationAxisSpaceBoneName; // 0x118
	float Theta; // 0x120
};

struct UTgSeqAct_RespawnAllPlayers : USequenceAction {
	char bResetLivingPlayers : 1; // 0x108
	char bResetDeadPlayers : 1; // 0x108
	char bResetHealth : 1; // 0x108
};

struct UUIScene_UICalendarEvent : UUIScene {
	ObjectProperty m_pEvents; // 0x1cc
	ObjectProperty m_pOverview; // 0x1d4
	ObjectProperty m_pRotator; // 0x1dc
};

struct ARoute : AInfo {
	FPointer VfTable_IEditorLinkSelectionInterface; // 0x280
	ERouteType RouteType; // 0x288
	TArray<FActorReference> RouteList; // 0x28c
	float FudgeFactor; // 0x29c
	int32_t RouteIndexOffset; // 0x2a0
};

struct ADynamicPylon : APylon {
	char bMoving : 1; // 0x490
};

struct UUIMapSummary : UUIResourceDataProvider {
	FString MapName; // 0x94
	FString ScreenshotPathName; // 0xa4
	FString DisplayName; // 0xb4
	FString Description; // 0xc4
};

struct UUIScene_UIRadialMenuEquip : UUIScene {
	ObjectProperty m_mcHeader; // 0x1cc
	ObjectProperty m_mcHeaderTF; // 0x1d4
	ObjectProperty m_HeaderBack; // 0x1dc
	ObjectProperty m_RadialEquip; // 0x1e4
	char m_bEquipEmote : 1; // 0x1ec
	ObjectProperty m_pEquipEmote; // 0x1f0
	ObjectProperty m_pEquipEmoteChampion; // 0x1f8
	ObjectProperty m_pEquipSpray; // 0x200
	int32_t m_nLockedSlots; // 0x208
	ObjectProperty m_pSlotItem; // 0x20c
	ObjectProperty m_scEquipSound; // 0x214
};

struct UTgInventoryObject_Listen_DuringAbility : UTgInventoryObject_Listen_AbilityProcBase {
	char m_bAbilityInActiveState : 1; // 0xcc
	char m_bIsActive : 1; // 0xcc
	EDuringAbilityType m_eDuringType; // 0xd0
};

struct UTgSeqCond_CompareDeviceId : USequenceCondition {
	ObjectProperty Device; // 0xec
	int32_t DeviceID; // 0xf4
};

struct UMultiCueSplineAudioComponent : USplineAudioComponent {
	TArray<FMultiCueSplineSoundSlot> SoundSlots; // 0x2e4
	int32_t CurrentSlotIndex; // 0x2f4
};

struct UTgControlModule_Feared : UTgControlModule_ThirdPerson {
	float c_fLastSwitchTime; // 0xcc
	float c_fNextSwitchTime; // 0xd0
	FVector c_vCurrentDirection; // 0xd4
};

struct UAnimMetaData_SkelControlKeyFrame : UAnimMetaData_SkelControl {
	TArray<FTimeModifier> KeyFrames; // 0x7c
	char bForceFirstKeyFrameOnBecomeRelevant : 1; // 0x8c
	char bForceLastKeyFrameOnCeaseRelevant : 1; // 0x8c
};

struct UTgAnimNodeChannelFire_VatuUlt : UTgAnimNodeChannelFire {
	VatuUltAnimState m_eAnimState; // 0x180
};

struct UUIData_LastDamageDone : UUIData {
	Fdword m_dwTotalDamage; // 0x64
	Fdword m_dwTotalKills; // 0x68
	Fdword m_dwKills; // 0x6c
	Fdword m_dwSoloKills; // 0x70
	char m_bKillingBlow : 1; // 0x74
	Fdword m_dwSourcePlayerId; // 0x78
	Fdword m_dwSourceProfileId; // 0x7c
	Fdword m_dwSourceSkinId; // 0x80
	FDouble m_dtTime; // 0x84
	FString m_sSourcePlayerName; // 0x8c
	TArray<ObjectProperty> m_pDamageInstances; // 0x9c
};

struct UUIDataVGSMaps : UUIDataObject {
	ObjectProperty m_pRootPC; // 0x74
	ObjectProperty m_pRootConsole; // 0x7c
	ObjectProperty m_pRootLegacy; // 0x84
};

struct UMobileMenuBar : UMobileMenuObject {
	char bIsVertical : 1; // 0xdc
	char bDirty : 1; // 0xdc
	int32_t SelectedIndex; // 0xe0
	int32_t FirstItem; // 0xe4
	TArray<ObjectProperty> Items; // 0xe8
};

struct UTgControlModule_Dead : UTgControlModule {
	char m_bCachedNoDeathCamExperiment : 1; // 0x6c
};

struct ATgDevice_CorrupterInhand : ATgDevice_ChainSequence {
	ObjectProperty m_Corrupter; // 0xa10
	ObjectProperty m_DeviceForm; // 0xa18
	int32_t m_nChainMax; // 0xa20
};

struct ASkeletalMeshActorBasedOnExtremeContent : ASkeletalMeshActor {
	TArray<FSkelMaterialSetterDatum> ExtremeContent; // 0x2e8
	TArray<FSkelMaterialSetterDatum> NonExtremeContent; // 0x2f8
};

struct UMaterialExpressionDepthBiasedBlend : UMaterialExpression {
	char bNormalize : 1; // 0xb0
	float BiasScale; // 0xb4
	FExpressionInput RGB; // 0xb8
	FExpressionInput Alpha; // 0xec
	FExpressionInput Bias; // 0x120
};

struct UUIDataStore : UUIDataProvider {
	FName Tag; // 0x70
	TArray<DelegateProperty> RefreshSubscriberNotifies; // 0x78
	DelegateProperty __OnDataStoreValueUpdated__Delegate; // 0x88
};

struct UPhysicalMaterial : UObject {
	int32_t MaterialIndex; // 0x60
	float Friction; // 0x64
	float Restitution; // 0x68
	char bForceConeFriction : 1; // 0x6c
	char bEnableAnisotropicFriction : 1; // 0x6c
	FVector AnisoFrictionDir; // 0x70
	float FrictionV; // 0x7c
	float Density; // 0x80
	float AngularDamping; // 0x84
	float LinearDamping; // 0x88
	float MagneticResponse; // 0x8c
	float WindResponse; // 0x90
	float ImpactThreshold; // 0x94
	float ImpactReFireDelay; // 0x98
	ObjectProperty ImpactEffect; // 0x9c
	ObjectProperty ImpactSound; // 0xa4
	ObjectProperty DeviceImpactSound; // 0xac
	float SlideThreshold; // 0xb4
	float SlideReFireDelay; // 0xb8
	ObjectProperty SlideEffect; // 0xbc
	ObjectProperty SlideSound; // 0xc4
	ObjectProperty FractureSoundExplosion; // 0xcc
	ObjectProperty FractureSoundSingle; // 0xd4
	FName MaterialTypeName; // 0xdc
	ObjectProperty FootstepParticleSystem; // 0xe4
	ObjectProperty Parent; // 0xec
	ObjectProperty PhysicalMaterialProperty; // 0xf4
};

struct UUIInteraction : UInteraction {
	FPointer VfTable_FExec; // 0xb0
	FPointer VfTable_FGlobalDataStoreClientManager; // 0xb8
	FPointer VfTable_FCallbackEventDevice; // 0xc0
	ObjectProperty UIManager; // 0xc8
	UUIManager* UIManagerClass; // 0xd0
	UGameUISceneClient* SceneClientClass; // 0xd8
	ObjectProperty SceneClient; // 0xe0
	TArray<FName> SupportedDoubleClickKeys; // 0xe8
	ObjectProperty DataStoreManager; // 0xf8
	char bProcessInput : 1; // 0x100
	float UIJoystickDeadZone; // 0x104
	float UIAxisMultiplier; // 0x108
	float AxisRepeatDelay; // 0x10c
	float MouseButtonRepeatDelay; // 0x110
	float DoubleClickTriggerSeconds; // 0x114
	int32_t DoubleClickPixelTolerance; // 0x118
	FUIKeyRepeatData MouseButtonRepeatInfo; // 0x11c
	TArray<FUIAxisEmulationDefinition> ConfiguredAxisEmulationDefinitions; // 0x12c
	TMap<None, None> AxisEmulationDefinitions; // 0x13c
	FUIAxisEmulationData AxisInputEmulation[0x18]; // 0x184
};

struct UTgSeqEvent_PlayerMoved : USequenceEvent {
	int32_t ResultEnergy; // 0x128
};

struct UTgDeviceForm_DemonTeleport : UTgDeviceForm {
	TArray<ObjectProperty> m_DemonNodes3p; // 0x28c
	TArray<ObjectProperty> m_DemonNodes1p; // 0x29c
};

struct UUIComponent_ChampionSkins : UUIComponent_Display {
	UIChampionEquipTab m_eState; // 0x124
	UIChampionSkinsButtonAction m_eButtonAction; // 0x125
	ObjectProperty m_pActiveItem; // 0x128
	ObjectProperty m_pSelectedSkin; // 0x130
	ObjectProperty m_pSelectedWeapon; // 0x138
	ObjectProperty m_pSelectedEmote; // 0x140
	ObjectProperty m_pSelectedMVPPose; // 0x148
	ObjectProperty m_pEquippedSkin; // 0x150
	ObjectProperty m_pEquippedWeapon; // 0x158
	ObjectProperty m_pEquippedEmote; // 0x160
	ObjectProperty m_pEquippedMVPPose; // 0x168
	ObjectProperty m_mcUnlockPanel; // 0x170
	ObjectProperty m_mcUnlockPanelPurchase; // 0x178
	ObjectProperty m_mcUnlockPanelPurchasePrice0; // 0x180
	ObjectProperty m_mcUnlockPanelPurchasePrice0Currency; // 0x188
	ObjectProperty m_mcUnlockPanelPurchasePrice1; // 0x190
	ObjectProperty m_mcUnlockPanelPurchasePrice1Currency; // 0x198
	ObjectProperty m_mcUnlockPanelRent; // 0x1a0
	ObjectProperty m_mcUnlockPanelRentPrice0; // 0x1a8
	ObjectProperty m_mcUnlockPanelRentPrice0Currency; // 0x1b0
	ObjectProperty m_mcUnlockPanelFreeRotation; // 0x1b8
	ObjectProperty m_mcUnlockPanelInputPrompt; // 0x1c0
	ObjectProperty m_Items; // 0x1c8
	ObjectProperty m_pItemStats; // 0x1d0
	ObjectProperty m_pVoicePackPreviewButton; // 0x1d8
	ObjectProperty m_pGoToBattlePassButton; // 0x1e0
	ObjectProperty m_pGoToChestButton; // 0x1e8
	ObjectProperty m_pGoToEventButton; // 0x1f0
	ObjectProperty m_pExclusiveBanner; // 0x1f8
	ObjectProperty m_pEquipButton; // 0x200
	ObjectProperty m_pPurchase; // 0x208
	ObjectProperty m_pUnlockChampionButton; // 0x210
	ObjectProperty m_pColorPicker; // 0x218
	ObjectProperty m_grSkins; // 0x220
	ObjectProperty m_pPreviewSkinVoice; // 0x228
	ObjectProperty m_pUnlockAction; // 0x230
};

struct ATgDevice_GrohkInhand : ATgDevice {
	ObjectProperty m_CachedGrohkPawn; // 0xa04
};

struct UTgInventoryObject_Listen_AbilityProcBase : UTgInvListener {
	int32_t m_nAbilitySlotRestriction; // 0xc4
	int32_t m_nAbilityTypeRestriction; // 0xc8
};

struct UUIScene_UISendGift : UUIScene {
	ObjectProperty m_grSendGift; // 0x1cc
	int32_t m_nChestScroll; // 0x1d4
	char m_bCanNavChests : 1; // 0x1d8
	Fdword m_dwGifteePlayerId; // 0x1dc
	ObjectProperty m_mcContainer; // 0x1e0
	ObjectProperty m_mcFriendInput; // 0x1e8
	ObjectProperty m_mcGiftDetails; // 0x1f0
	ObjectProperty m_pPlayerDisplay; // 0x1f8
	ObjectProperty m_pFriendsList; // 0x200
	ObjectProperty m_pChestList; // 0x208
	ObjectProperty m_pGiftOption; // 0x210
	ObjectProperty m_pMessageOption; // 0x218
	ObjectProperty m_pAnonymousOption; // 0x220
	ObjectProperty m_pHoldPrompt; // 0x228
	ObjectProperty m_pSendGiftButton; // 0x230
	ObjectProperty m_pNavLeftAction; // 0x238
	ObjectProperty m_pNavRightAction; // 0x240
	ObjectProperty m_pScrollUpAction; // 0x248
	ObjectProperty m_pScrollDownAction; // 0x250
	ObjectProperty m_pToggleSenderAction; // 0x258
	ObjectProperty m_pGoBackAction; // 0x260
};

struct UUIComponent_Dropdown : UUIComponent_Display {
	ObjectProperty m_pGamepadKey; // 0x124
	ObjectProperty m_pList; // 0x12c
	ObjectProperty m_pBlocker; // 0x134
	FUICListEntry m_Button; // 0x13c
	ObjectProperty m_pToggleListVisible; // 0x184
	ObjectProperty m_pBack; // 0x18c
	ObjectProperty m_pAny; // 0x194
	int32_t m_nPostClickCBHandle; // 0x19c
	char m_bDropdownVisible : 1; // 0x1a0
};

struct ATgDevice_ShadowDash : ATgDevice_Charge {
	ObjectProperty m_ShadowPawn; // 0xa78
};

struct USeqAct_ConvertToString : USequenceAction {
	char bIncludeVarComment : 1; // 0x108
	FString VarSeparator; // 0x10c
	int32_t NumberOfInputs; // 0x11c
};

struct UTgSpectatorInput : UTgPlayerInput {
	float SpectatorSensitivity; // 0x3bc
};

struct UUIScene_UILobbyBoosterSelect : UUIScene {
	ObjectProperty m_pBoosts; // 0x1cc
	ObjectProperty m_pAcceptButton; // 0x1d4
	ObjectProperty m_pCancelButton; // 0x1dc
	ObjectProperty m_pActivateAction; // 0x1e4
	ObjectProperty m_pUnlockAction; // 0x1ec
};

struct UTgGameplayCurvesSet_PositionFromPitch : UTgGameplayCurvesSet {
	FRawDistributionFloat ForwardTranslation; // 0x64
	FRawDistributionFloat UpTranslation; // 0x88
};

struct UInterpTrackDirector : UInterpTrack {
	TArray<FDirectorTrackCut> CutTrack; // 0xa0
	char bSimulateCameraCutsOnClients : 1; // 0xb0
	float fIntroFadeTime; // 0xb4
	float fOutroFadeTime; // 0xb8
};

struct ATgDevice_Enlightenment : ATgDevice {
	ObjectProperty m_CachedPrincess; // 0xa04
};

struct UUIDataProvider_PlayerAchievements : UUIDataProvider_OnlinePlayerDataBase {
	TArray<FAchievementDetails> Achievements; // 0x74
};

struct UTgAnimBlendByChurchillDrone : UTgAnimNodeBlendList {
	char m_bLeftDrone : 1; // 0x168
};

struct UUIComponent_EventChallengeRegionInfo : UUIComponent_Display {
	ObjectProperty m_pRegions; // 0x124
	ObjectProperty m_pProgress; // 0x12c
	ObjectProperty m_mcProgressText; // 0x134
	ObjectProperty m_pChallengeSystemData; // 0x13c
	ObjectProperty m_mcTitle; // 0x144
	ObjectProperty m_RegionInputGroup; // 0x14c
};

struct UTgRecoilKeyframe : UObject {
	float firingTime; // 0x60
	FRawDistributionFloat RecoilPerShot; // 0x64
};

struct ATgDevice_TiberiusBladeExplode : ATgDevice {
	ObjectProperty m_CachedTiberius; // 0xa04
};

struct UUIData_LoadoutPrebuilt : UUIData {
	FPointer VfTable_IUIData_LoadoutInterface; // 0x64
	Fdword m_dwBotId; // 0x6c
	Fdword m_dwSortOrder; // 0x70
	FString m_sName; // 0x74
	FString m_sDesc; // 0x84
	char m_bTemplate : 1; // 0x94
	TArray<ObjectProperty> m_LoadoutItems; // 0x98
};

struct UMicroTransactionBase : UPlatformInterfaceBase {
	TArray<FPurchaseInfo> AvailableProducts; // 0x80
	FString LastError; // 0x90
	FString LastErrorSolution; // 0xa0
};

struct ATgPathPreviewActor : AActor {
	FPointer VfTable_IInterface_NavigationHandle; // 0x280
	ObjectProperty m_Destination; // 0x288
	ObjectProperty m_Source; // 0x290
	ObjectProperty m_NavigationHandle; // 0x298
	FNavMeshPathParams m_NavMeshPathParams; // 0x2a0
};

struct UTgAIUtility : UTgAIBehaviorNode {
	EUtilityType UtilityType; // 0x94
	TArray<EBotBehaviorState> IgnoreBehaviorState; // 0x98
	TArray<EBotBehaviorState> RejctBehaviorState; // 0xa8
	int32_t ParentIndex; // 0xb8
};

struct UTgAIBehaviorCondition_IsLanepusherLastAttackerOfType : UTgAIBehaviorCondition {
	ECombatTargetType TargetType; // 0x98
};

struct UNavMeshPath_WithinTraversalDist : UNavMeshPathConstraint {
	float MaxTraversalDist; // 0x78
	char bSoft : 1; // 0x7c
	float SoftStartPenalty; // 0x80
};

struct UTgStaticMeshComponent : UStaticMeshComponent {
	FPointer VfTable_ITgMeshCompInterface_MaterialStack; // 0x310
	char c_bFxApplied : 1; // 0x318
	TArray<ObjectProperty> c_FxList; // 0x31c
	TArray<ObjectProperty> c_DatabaseFxList; // 0x32c
	TArray<FFx_AssemblyData> c_FxAssemblyData; // 0x33c
	int32_t m_nAssemblyId; // 0x34c
	ObjectProperty m_MaterialStackManager; // 0x350
};

struct ATgDeploy_ShieldMakoa : ATgDeploy_Shield {
	ObjectProperty m_CachedPawnOwner; // 0x470
	int32_t r_nCarapaceBonusHealth; // 0x478
	char r_bHasBarrierReef : 1; // 0x47c
	int32_t m_nBarrierReefDamage; // 0x480
};

struct UTgGameDC_EffectList : UTgDataChunk {
	ObjectProperty m_EffectList[0x10]; // 0x158
};

struct ATgDevice_SniperMode : ATgDevice_ToggleModeWithLockout {
	ObjectProperty m_CachedKinessaOwner; // 0xa18
	ObjectProperty m_CachedKinessaInhandDev; // 0xa20
	char m_bIsZoomed : 1; // 0xa28
};

struct UTgAIBehaviorCondition_SiegeScore : UTgAIBehaviorCondition {
	int32_t ScoreThreshold; // 0x98
	char bMustBeEnemy : 1; // 0x9c
};

struct ATgFortressVolume : AVolume {
	int32_t TaskforceIndex; // 0x2bc
};

struct ATgGame_Arena_Escort : ATgGame_Arena {
	int32_t m_nSpawnEscortTime; // 0x798
	int32_t m_nEscortSuccessValue; // 0x79c
	ObjectProperty s_pEvt[0x2]; // 0x7a0
	ObjectProperty s_pDespawnEvt[0x2]; // 0x7b0
};

struct UUIComponent_EventChallengeHub : UUIComponent_Display {
	ObjectProperty m_pChallengeList; // 0x124
	ObjectProperty m_pLockInHoldPrompt; // 0x12c
	ObjectProperty m_mcLore; // 0x134
	ObjectProperty m_mcLoreTitle; // 0x13c
	ObjectProperty m_mcLoreText; // 0x144
	ObjectProperty m_mcHubIcon; // 0x14c
	ObjectProperty m_mcHubName; // 0x154
	ObjectProperty m_mcCompleteFor; // 0x15c
	ObjectProperty m_pProgress; // 0x164
	ObjectProperty m_mcProgressText; // 0x16c
	ObjectProperty m_pPurchase; // 0x174
	ObjectProperty m_pPurchaseText; // 0x17c
	ObjectProperty m_pLTI; // 0x184
	ObjectProperty m_pIcon; // 0x18c
	ObjectProperty m_mcDeathCard; // 0x194
	ObjectProperty m_mcFrame; // 0x19c
	ObjectProperty m_mcCheck; // 0x1a4
	ObjectProperty m_mcScroll; // 0x1ac
	ObjectProperty m_PurchaseInputGroup; // 0x1b4
};

struct AStaticMeshActor : AStaticMeshActorBase {
	ComponentProperty StaticMeshComponent; // 0x280
	char bRenderElementsViaProxy : 1; // 0x288
	char bDisableAutoBaseOnProcBuilding : 1; // 0x288
	char bProxy : 1; // 0x288
	char bHiddenByProxy : 1; // 0x288
	char OldCastShadow : 1; // 0x288
	char OldAcceptsLights : 1; // 0x288
	char bCuttingMesh : 1; // 0x288
	ComponentProperty Silhouette; // 0x28c
	TArray<FVertexColorPhysicalMaterialMapping> VertexColorPhysicalMaterialMappings; // 0x294
};

struct UAnimationCompressionAlgorithm_Automatic : UAnimationCompressionAlgorithm {
	float MaxEndEffectorError; // 0x78
	char bTryFixedBitwiseCompression : 1; // 0x7c
	char bTryPerTrackBitwiseCompression : 1; // 0x7c
	char bTryLinearKeyRemovalCompression : 1; // 0x7c
	char bTryIntervalKeyRemoval : 1; // 0x7c
	char bRunCurrentDefaultCompressor : 1; // 0x7c
	char bAutoReplaceIfExistingErrorTooGreat : 1; // 0x7c
	char bRaiseMaxErrorToExisting : 1; // 0x7c
};

struct UTgGamePhase_ManageCapturePoint : UTgGamePhase {
	float m_fTickStep; // 0xb8
};

struct USeqAct_DivideInt : USeqAct_SetSequenceVariable {
	int32_t ValueA; // 0x108
	int32_t ValueB; // 0x10c
	float FloatResult; // 0x110
	int32_t IntResult; // 0x114
};

struct ATgDevice_CorvusUltMod : ATgDevice {
	TArray<ObjectProperty> m_ImmuneTargets; // 0xa04
	TArray<float> m_ImmuneTimes; // 0xa14
};

struct UUIComponent_RankedSnapshotPlayer : UUIComponent_Display {
	ObjectProperty m_mcRank; // 0x124
	ObjectProperty m_mcScore; // 0x12c
	ObjectProperty m_mcRegion; // 0x134
	ObjectProperty m_mcWinLoss; // 0x13c
	ObjectProperty m_pAvatar; // 0x144
	ObjectProperty m_pPlayerName; // 0x14c
};

struct ATgDevice_ChurchillInhand : ATgDevice {
	char m_bIsADS : 1; // 0xa04
	FVector m_vADSProjectileSpawnOffset; // 0xa08
	float m_fADSRecoilMultiplier; // 0xa14
	float m_fAmmoRefundChanceADS; // 0xa18
	float m_fAmmoRefundPercOnHit; // 0xa1c
	ObjectProperty m_CachedPawnOwner; // 0xa20
};

struct UUIComponent_ShieldBar : UUIComponent_Display {
	ObjectProperty m_mcBarContainer; // 0x124
	ObjectProperty m_mcShieldMask; // 0x12c
	ObjectProperty m_mcDamageMask; // 0x134
	ObjectProperty m_TargetPawn; // 0x13c
	float m_fCurrentDamagePct; // 0x144
	float m_fCurrentShieldPct; // 0x148
	char m_bVisible : 1; // 0x14c
	float m_fDamageInterpSpeed; // 0x150
	float m_fMinDamageInterpSpeed; // 0x154
};

struct USeqEvent_HudRender : USequenceEvent {
	TArray<ObjectProperty> Targets; // 0x128
	char bIsActive : 1; // 0x138
	float AuthoredGlobalScale; // 0x13c
};

struct UUIComponent_TitlesView : UUIComponent_Display {
	TArray<ObjectProperty> m_TitleEntries; // 0x124
	ObjectProperty m_grTitlesGroup; // 0x134
	ObjectProperty m_mcPlayerTitle; // 0x13c
	ObjectProperty m_pPlayerName; // 0x144
	ObjectProperty m_pEquipButton; // 0x14c
	ObjectProperty m_pTooltipLeft; // 0x154
	ObjectProperty m_pTooltipRight; // 0x15c
	ObjectProperty m_pScrollbar; // 0x164
	int32_t m_nLastTooltipIndex; // 0x16c
	int32_t m_nNumTitlesRows; // 0x170
	int32_t m_nNumTitlesCols; // 0x174
};

struct UUIComponent_HalloweenEventHome : UUIComponent_Display {
	TArray<ObjectProperty> m_pBundleLTIs; // 0x124
	TArray<ObjectProperty> m_pUnownedBundleLTIs; // 0x134
	ObjectProperty m_mcCouponTF; // 0x144
	ObjectProperty m_mcBundlesOwnedTF; // 0x14c
	ObjectProperty m_pBundles; // 0x154
	ObjectProperty m_pBonusProgress; // 0x15c
	ObjectProperty m_pBundlePanel; // 0x164
	ObjectProperty m_pBonusPanel; // 0x16c
	ObjectProperty m_grHome; // 0x174
	ObjectProperty m_pUnlockAction; // 0x17c
	ObjectProperty m_pUnlockAllAction; // 0x184
};

struct UUIPatchNotesJsonManager : UPComUIManagerBase {
	ObjectProperty m_pMovie; // 0x84
	TArray<FPatchNotesData> m_PatchData; // 0x8c
};

struct UUIComponent_Item : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_mcType; // 0x12c
	ObjectProperty m_mcDescription; // 0x134
	ObjectProperty m_mcArtIcon; // 0x13c
	ObjectProperty m_mcFrame; // 0x144
	ObjectProperty m_Item; // 0x14c
	char m_bCacheDirty : 1; // 0x154
	char m_bDataDirty : 1; // 0x154
	char m_bUseBaseName : 1; // 0x154
	FString m_sDescription; // 0x158
	FString m_sType; // 0x168
	FString m_sName; // 0x178
	float m_fDescriptionCenterOffset; // 0x188
	int32_t m_nTickCallback; // 0x18c
};

struct UUIEOMLAcquisition : UTgGfxScene {
	FPointer VfTable_IAcquisitionHandler; // 0x1ec
};

struct USoundCue : UAkBaseSoundObject {
	FName SoundClass; // 0x60
	ESoundClassName SoundClassName; // 0x68
	char bDebug : 1; // 0x6c
	char m_bFadeOutWhenStopped : 1; // 0x6c
	ObjectProperty FirstNode; // 0x70
	TMap<None, None> EditorData; // 0x78
	float MaxAudibleDistance; // 0xc0
	float VolumeMultiplier; // 0xc4
	float PitchMultiplier; // 0xc8
	float Duration; // 0xcc
	ObjectProperty FaceFXAnimSetRef; // 0xd0
	FString FaceFXGroupName; // 0xd8
	FString FaceFXAnimName; // 0xe8
	int32_t MaxConcurrentPlayCount; // 0xf8
	int32_t CurrentPlayCount; // 0xfc
	FName SoundGroup; // 0x100
	float m_fFadeOutTime; // 0x108
	float m_fFadeToPct; // 0x10c
	float m_fFadePitchToPct; // 0x110
	ObjectProperty m_StereoSoundCue; // 0x114
};

struct UUIData_MVP : UUIData {
	int32_t m_nBotId; // 0x64
	int32_t m_nFrame; // 0x68
	int32_t m_nLevel; // 0x6c
	int32_t m_nPedestal; // 0x70
	int32_t m_nMVPType; // 0x74
	int32_t m_nQueueId; // 0x78
	int32_t m_nValue; // 0x7c
	ObjectProperty m_pPlayer; // 0x80
};

struct UMaterialExpressionTerrainLayerWeight : UMaterialExpression {
	FPointer InstanceOverride; // 0xb0
	FExpressionInput Base; // 0xb8
	FExpressionInput Layer; // 0xec
	FName ParameterName; // 0x120
	float PreviewWeight; // 0x128
	FGuid ExpressionGUID; // 0x12c
};

struct UScriptedTexture : UTextureRenderTarget2D {
	char bNeedsUpdate : 1; // 0x128
	char bSkipNextClear : 1; // 0x128
	DelegateProperty __Render__Delegate; // 0x12c
};

struct UTgInventoryObject_Listen_NearOwnTurret : UTgInvListener {
	char m_bIsActive : 1; // 0xc4
};

struct UParticleModuleWorldAttractor : UParticleModuleWorldForcesBase {
	char bParticleLifeRelative : 1; // 0x68
	FRawDistributionFloat AttractorInfluence; // 0x6c
};

struct ATgGame_Paladins_Payload : ATgGame_Paladins_Siege {
	float s_fCurrentTF1FarthestPushDistance; // 0xa64
	float s_fCurrentTF2FarthestPushDistance; // 0xa68
	float s_fCurrentPushTimer; // 0xa6c
	float s_fCurrentTF1FarthestPushDistanceTimestamp; // 0xa70
	float s_fCurrentTF2FarthestPushDistanceTimestamp; // 0xa74
	float s_fTimeTF1HadToPush; // 0xa78
	int32_t m_nPayloadOnlyCurrentAttackingTeam; // 0xa7c
	int32_t s_nCurrentTurn; // 0xa80
	FVector s_vPayloadGhostLocation; // 0xa84
	FVector s_vPayloadGhostOffset; // 0xa90
	FRotator s_PayloadGhostRotation; // 0xa9c
	int32_t m_nPayloadGhostID; // 0xaa8
	ObjectProperty m_PayloadGhost; // 0xaac
};

struct ADecalManager : AActor {
	ComponentProperty DecalTemplate; // 0x280
	TArray<ComponentProperty> PoolDecals; // 0x288
	float DecalLifeSpan; // 0x298
	float DecalDepthBias; // 0x29c
	float OrbisDecalDepthBias; // 0x2a0
	FVector2D DecalBlendRange; // 0x2a4
	TArray<FActiveDecalInfo> ActiveDecals; // 0x2ac
};

struct UTgGameDC_Effect : UTgDataChunk {
	int32_t m_nGroup; // 0x158
	int32_t m_nIcon; // 0x15c
	int32_t m_bBuff; // 0x160
	int32_t m_bActive; // 0x164
	int32_t m_nStacks; // 0x168
	float m_fTimer; // 0x16c
	FString m_sIcon; // 0x170
	FString m_sName; // 0x180
	FString m_sDescription; // 0x190
	ObjectProperty m_lifeTimer; // 0x1a0
};

struct UTgGameDC_Player : UTgGameDC_MapEntity {
	int32_t m_nStatCount; // 0x15c
	ObjectProperty m_ReviveTimer; // 0x160
	ObjectProperty m_UltimateTimer; // 0x168
	float m_PrevUltTimer; // 0x170
	ObjectProperty m_StatsArray; // 0x174
	ObjectProperty m_ItemStoreArray; // 0x17c
	ObjectProperty m_ActiveItemArray; // 0x184
	ObjectProperty m_ConsumableArray; // 0x18c
	DelegateProperty __USC_ForceStatsUpdate_Delegate__Delegate; // 0x194
};

struct UUIInteractable_JsonPanel_Carousel : UUIInteractable_JsonPanel {
	FPointer VfTable_IUIInteractableInterface_JsonCarousel; // 0x22c
	ObjectProperty m_mcNavControlsRoot; // 0x234
	ObjectProperty m_LeftArrow; // 0x23c
	ObjectProperty m_RightArrow; // 0x244
	ObjectProperty m_mcLeftButtonPrompt; // 0x24c
	ObjectProperty m_mcRightButtonPrompt; // 0x254
	ObjectProperty m_mcImage2; // 0x25c
	char m_bOnImage2 : 1; // 0x264
	char m_bPauseAutoRotation : 1; // 0x264
	char m_bDisableAutoRotation : 1; // 0x264
	char m_bDisableNavigation : 1; // 0x264
	int32_t m_nIndex; // 0x268
	TArray<ObjectProperty> m_NavDots; // 0x26c
	float m_fNavDotCenter; // 0x27c
	TArray<FJsonFeatureData> m_CarouselJsonFeatureData; // 0x280
	float m_fAutoRotationTime; // 0x290
	float m_fAutoRotationDelay; // 0x294
	FName m_GamepadLeftKey; // 0x298
	FName m_GamepadRightKey; // 0x2a0
	float m_fAspectRatioTolerance; // 0x2a8
};

struct UTgInventoryObject_Listen_Combo_Saati : UTgInventoryObject_Listen_Combo {
	TArray<ObjectProperty> m_MarkedTargets; // 0xcc
	TArray<float> m_fMarkedTimestamps; // 0xdc
};

struct UUIFacebookLiveIndicator : UTgGfxScene {
	ObjectProperty m_mcLive; // 0x1ec
	ObjectProperty m_mcIcon; // 0x1f4
	char m_bIsLive : 1; // 0x1fc
};

struct ATgDevice_Blink : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
};

struct USeqEvent_MobileSwipe : USeqEvent_MobileRawInput {
	float Tolerance; // 0x13c
	float MinDistance; // 0x140
	FVector2D InitialTouch; // 0x144
	TArray<ObjectProperty> TouchedActors; // 0x14c
	float TraceDistance; // 0x15c
};

struct UAudioDevice : USubsystem {
	int32_t MaxChannels; // 0x68
	int32_t CommonAudioPoolSize; // 0x6c
	float LowPassFilterResonance; // 0x70
	float MinCompressedDurationEditor; // 0x74
	float MinCompressedDurationGame; // 0x78
	FString ChirpInSoundNodeWaveName; // 0x7c
	ObjectProperty ChirpInSoundNodeWave; // 0x8c
	FString ChirpOutSoundNodeWaveName; // 0x94
	ObjectProperty ChirpOutSoundNodeWave; // 0xa4
	FPointer CommonAudioPool; // 0xac
	int32_t CommonAudioPoolFreeBytes; // 0xb4
	TArray<ComponentProperty> AudioComponents; // 0xb8
	TArray<ComponentProperty> AudioComponentsToStop; // 0xc8
	TArray<FPointer> Sources; // 0xd8
	TArray<FPointer> FreeSources; // 0xe8
	TMap<None, None> WaveInstanceSourceMap; // 0xf8
	char bGameWasTicking : 1; // 0x140
	char bSoundSpawningEnabled : 1; // 0x140
	TArray<FListener> Listeners; // 0x144
	FQWord CurrentTick; // 0x154
	TMap<None, None> SoundClasses; // 0x15c
	TMap<None, None> SourceSoundClasses; // 0x1a4
	TMap<None, None> CurrentSoundClasses; // 0x1ec
	TMap<None, None> DestinationSoundClasses; // 0x234
	TMap<None, None> SoundModes; // 0x27c
	FPointer Effects; // 0x2c4
	FName BaseSoundModeName; // 0x2cc
	ObjectProperty CurrentMode; // 0x2d4
	FDouble SoundModeStartTime; // 0x2dc
	FDouble SoundModeFadeInStartTime; // 0x2e4
	FDouble SoundModeFadeInEndTime; // 0x2ec
	FDouble SoundModeEndTime; // 0x2f4
	int32_t ListenerVolumeIndex; // 0x2fc
	FInteriorSettings ListenerInteriorSettings; // 0x300
	FDouble InteriorStartTime; // 0x330
	FDouble InteriorEndTime; // 0x338
	FDouble ExteriorEndTime; // 0x340
	FDouble InteriorLPFEndTime; // 0x348
	FDouble ExteriorLPFEndTime; // 0x350
	float InteriorVolumeInterp; // 0x358
	float InteriorLPFInterp; // 0x35c
	float ExteriorVolumeInterp; // 0x360
	float ExteriorLPFInterp; // 0x364
	ComponentProperty TestAudioComponent; // 0x368
	FPointer TextToSpeech; // 0x370
	EDebugState DebugState; // 0x378
	float TransientMasterVolume; // 0x37c
	float LastUpdateTime; // 0x380
	UAudioComponent* DefaultAudioComponentClass; // 0x384
	FString DefaultAudioComponentClassName; // 0x38c
	FString DefaultAudioDevice; // 0x39c
};

struct ATgDevice_YagoNeedler : ATgDevice {
	ObjectProperty m_CachedYagorath; // 0xa04
};

struct UUIComponent_Currency : UUIComponent_Display {
	Fdword eCurrencyCode; // 0x124
	Fdword ePurchaseType; // 0x128
	char bShowIfOwnedOrRented : 1; // 0x12c
	char bStrikeIfOwnedOrRented : 1; // 0x12c
	char bDisplayIfZero : 1; // 0x12c
	UICCurr_DisplayType eDisplayType; // 0x130
	UIALIGNINGTYPE eAlignment; // 0x131
	ObjectProperty m_mcTF; // 0x134
	ObjectProperty m_mcIcon; // 0x13c
};

struct ATriggeredPath : ANavigationPoint {
	char bOpen : 1; // 0x378
	ObjectProperty MyTrigger; // 0x37c
};

struct UAnimNode : UAnimObject {
	char bRelevant : 1; // 0x68
	char bJustBecameRelevant : 1; // 0x68
	char bTickDuringPausedAnims : 1; // 0x68
	char bEditorOnly : 1; // 0x68
	char bDisableCaching : 1; // 0x68
	char bCallScriptEventOnInit : 1; // 0x68
	char bCallScriptEventOnBecomeRelevant : 1; // 0x68
	char bCallScriptEventOnCeaseRelevant : 1; // 0x68
	int32_t NodeTickTag; // 0x6c
	int32_t PostBoneUpdateNodeTickTag; // 0x70
	int32_t NodeInitTag; // 0x74
	int32_t NodeEndEventTick; // 0x78
	int32_t TickArrayIndex; // 0x7c
	int32_t NodeCachedAtomsTag; // 0x80
	float NodeTotalWeight; // 0x84
	TArray<ObjectProperty> ParentNodes; // 0x88
	FName NodeName; // 0x98
	TArray<FBoneAtom> CachedBoneAtoms; // 0xa0
	char CachedNumDesiredBones; // 0xb0
	FBoneAtom CachedRootMotionDelta; // 0xc0
	int32_t bCachedHasRootMotion; // 0xe0
	TArray<FCurveKey> CachedCurveKeys; // 0xe4
	int32_t SearchTag; // 0xf4
	FColor m_LabelColor; // 0xf8
};

struct UUIComponent_HoldPrompt : UUIComponent_Display {
	ObjectProperty m_pGamepadKey; // 0x124
	ObjectProperty m_mcRadialMask; // 0x12c
	ObjectProperty m_mcTF; // 0x134
	float m_fHoldTimer; // 0x13c
	float m_fHoldDuration; // 0x140
	float m_fFadeOutDelay; // 0x144
	float m_fFadeOutDuration; // 0x148
	float m_fFadeOutTimer; // 0x14c
	char m_bHolding : 1; // 0x150
	char m_bPrimed : 1; // 0x150
	ObjectProperty m_PressAction; // 0x154
	ObjectProperty m_ReleaseAction; // 0x15c
};

struct UUIScene_UIHudSaati : UUIScene {
	char m_bViewTargetSaati : 1; // 0x1cc
	char m_bHudVisible : 1; // 0x1cc
	ObjectProperty m_Pips[0x8]; // 0x1d0
	ObjectProperty m_mcWallBangBullets[0x3]; // 0x210
	ObjectProperty m_CachedSaati; // 0x228
	int32_t m_nAmmoRemaining; // 0x230
	ObjectProperty m_mcGroupPips; // 0x234
};

struct UFogVolumeLinearHalfspaceDensityComponent : UFogVolumeDensityComponent {
	float PlaneDistanceFactor; // 0xe0
	FPlane HalfspacePlane; // 0xf0
};

struct AKActorSpawnable : AKActor {
	char bRecycleScaleToZero : 1; // 0x3b4
	char bScalingToZero : 1; // 0x3b4
};

struct UTgDeviceForm_NetherStep : UTgDeviceForm {
	TArray<ObjectProperty> m_stanceNodes1p; // 0x28c
	TArray<ObjectProperty> m_stanceNodes3p; // 0x29c
};

struct UUIComponent_ProgressBarHorizontal_Flagball : UUIComponent_ProgressBarHorizontal {
	ObjectProperty m_mcTipTF; // 0x154
	ObjectProperty m_mcIcon; // 0x15c
	char m_bChangeRootFrameWithPercent : 1; // 0x164
};

struct ATgPawn_Gauntlet : ATgPawn_Character {
	ObjectProperty r_SilenceTarget; // 0x3160
	FVector r_SilenceHitOffset; // 0x3168
	FVector c_InterpSilenceHitOffset; // 0x3174
	float c_fSilenceHitOffsetInterpSpeed; // 0x3180
	ObjectProperty r_RechargeTarget; // 0x3184
	FVector r_RechargeHitOffset; // 0x318c
	FVector c_InterpRechargeHitOffset; // 0x3198
	ObjectProperty c_SilenceTarget; // 0x31a4
	ObjectProperty c_ProtectionTarget; // 0x31ac
	int32_t m_PrePolymorphRechargeShield; // 0x31b4
};

struct ATgGameHUD : ATgClientHUD {
	int32_t m_nLastUpgrade; // 0x684
	char m_bGameWon : 1; // 0x688
	char m_bGameOver : 1; // 0x688
	char m_bHasMounted : 1; // 0x688
	char m_bUpdateMinimapThisTick : 1; // 0x688
	float m_fFireTime; // 0x68c
	float m_fFireTimer; // 0x690
	float m_fMMUpdateTimer; // 0x694
	ObjectProperty m_LastTarget; // 0x698
	ObjectProperty m_Blinder; // 0x6a0
	ObjectProperty m_MiniMap; // 0x6a8
	ObjectProperty m_TargetingMap; // 0x6b0
	float m_fLastMinimapUpdateTime; // 0x6b8
	int32_t m_nPotGModelPose; // 0x6bc
	int32_t m_nPotGModelSkin; // 0x6c0
	int32_t m_nPotGModelHead; // 0x6c4
	int32_t m_nPotGModelClass; // 0x6c8
	int32_t m_nPotGModelDevice; // 0x6cc
	int32_t m_nPotGModelDeviceSkin; // 0x6d0
	FString m_nKillerName; // 0x6d4
	int32_t m_nKillerDevice; // 0x6e4
};

struct UTgDeviceFire : UObject {
	ObjectProperty m_Owner; // 0x60
	EWeaponFireType m_nFireType; // 0x68
	DeviceTargetMode m_eTargetingMode; // 0x69
	DeviceTargeterType m_eTargeterType; // 0x6a
	TargetSelectionType m_eTargetSelectionTypeOverride; // 0x6b
	char m_bIsAOE : 1; // 0x6c
	char m_bIsCone : 1; // 0x6c
	char m_bIsLinear : 1; // 0x6c
	char m_bContinuousFire : 1; // 0x6c
	char m_bRequireLOS : 1; // 0x6c
	char m_bVerifyTargetPlacement : 1; // 0x6c
	char m_bAllowMultiplePets : 1; // 0x6c
	char m_bUseAccurateEncroachment : 1; // 0x6c
	char m_bUseTargetingEncroachmentActor : 0; // 0x6c
	char m_bScaleEncroachmentWithRangeMod : 0; // 0x6c
	char m_bPassThroughShield : 0; // 0x6c
	char m_bPassThroughDeployWalls : 0; // 0x6c
	char m_bIgnoreDeployablesForBlocking : 0; // 0x6c
	char m_bAdjustDeployHeightToExtent : 0; // 0x6c
	char m_bDeployOnOwnerLocation : 0; // 0x6c
	char m_bAdjustToGround : 0; // 0x6c
	char m_bSpawnPetOnOwnerLocation : 0; // 0x6c
	char m_bCanTriggerCounter : 0; // 0x6c
	char m_bEncroachmentFireLOSCheck : 0; // 0x6c
	char m_bEncroachmentIgnorePitch : 0; // 0x6c
	char m_bEncroachmentDebug : 0; // 0x6c
	char m_bApplyThirdPersonReticleAimOffset : 0; // 0x6c
	char m_bTreatAmmoAsCharges : 0; // 0x6c
	char m_bMaintainBurstTarget : 0; // 0x6c
	char m_bCanTargetStealthedTargets : 0; // 0x6c
	TArray<ObjectProperty> m_EffectGroupList; // 0x70
	TArray<FTgPropertyInstance> m_Properties; // 0x80
	FPointer m_pAmSetup; // 0x90
	FPointer m_pFireModeSetup; // 0x98
	int32_t m_nId; // 0xa0
	int32_t m_nAttackType; // 0xa4
	int32_t m_nMovementType; // 0xa8
	FName m_nmOffhandAnimationType; // 0xac
	int32_t m_nTargetAffectsType; // 0xb4
	int32_t m_nAllowUseWhileFlags; // 0xb8
	int32_t m_nDamageType; // 0xbc
	int32_t m_nArcingJumps; // 0xc0
	FMap_Mirror m_PropertyIndexMap; // 0xc4
	float m_fHealthCost; // 0x10c
	float m_fManaCost; // 0x110
	float m_fEnergyCost; // 0x114
	float m_fFireTime; // 0x118
	float m_fBuildupTime; // 0x11c
	float m_fFirePreHitDelay; // 0x120
	float m_fFirePostHitDelay; // 0x124
	int32_t m_nShotsPerFire; // 0x128
	FName m_nmDamageTypeClass; // 0x12c
	UTgDamageType* m_DamageTypeClass; // 0x134
	int32_t m_nMaxTargetCount; // 0x13c
	float m_fFireLockTime; // 0x140
	int32_t m_nAmmoClipSize; // 0x144
	float m_fAmmoClipPreReloadTime; // 0x148
	float m_fAmmoClipPostReloadTime; // 0x14c
	int32_t m_nAmmoCostPerShot; // 0x150
	int32_t m_nDeviceIdOverrideForDamageReports; // 0x154
	float m_fEncroachmentRayCastVerticalOffset; // 0x158
	int32_t m_nTargetingEncroachmentActorOverride; // 0x15c
	ObjectProperty m_TargetingEncroachmentActor; // 0x160
	FVector m_vActorEncroachmentBaseScale; // 0x168
	FName m_nmWhileFiringCameraAnim; // 0x174
	FRotator m_AdjustToGroundRotationOffset; // 0x17c
	int32_t m_nCachedFireModeIndex; // 0x188
	TArray<ObjectProperty> m_CachedRechargeBonusFlatAdditive; // 0x18c
	TArray<ObjectProperty> m_CachedRechargeBonusFlatSubtractive; // 0x19c
	TArray<ObjectProperty> m_CachedRechargeBonusPercentAdditive; // 0x1ac
	TArray<ObjectProperty> m_CachedRechargeBonusPercentSubtractive; // 0x1bc
	TArray<ObjectProperty> m_ModifiedEffects; // 0x1cc
	TArray<float> m_BaseValues; // 0x1dc
	TArray<ObjectProperty> m_ModifiedEGLifetimes; // 0x1ec
	TArray<float> m_BaseLifetimes; // 0x1fc
	TArray<ObjectProperty> m_ModifiedEGAppValues; // 0x20c
	TArray<float> m_BaseAppValues; // 0x21c
	TArray<ObjectProperty> m_ModifiedEGMaxStacks; // 0x22c
	TArray<float> m_BaseMaxStacks; // 0x23c
	TArray<ObjectProperty> m_CachedTargetList; // 0x24c
	float m_fSelectTargetsExtent; // 0x25c
	ObjectProperty m_GameplayCurves; // 0x260
};

struct ATgDeploy_DreadSerpent : ATgDeploy_EffectField {
	float m_fReCheckProxyTouchHit; // 0x4a0
	float m_fReCheckProxyTouchHitInterval; // 0x4a4
};

struct UTgSkelCon_Gate : USkelControlBase {
	TArray<FSkelControlGateChild> ChildControls; // 0xd0
};

struct UTgSkelCon_LookAt : USkelControlLookAt {
	ObjectProperty m_Owner; // 0x16c
	ObjectProperty m_DeployOwner; // 0x174
	char m_bAimAtEnemyTarget : 1; // 0x17c
	char m_AlwaysInterpolateTarget : 1; // 0x17c
	char m_bHadTargetLastTick : 1; // 0x17c
};

struct UUIComponent_ChestItemButton : UUIComponent_Display {
	ObjectProperty m_mcName; // 0x124
	ObjectProperty m_mcNameTF; // 0x12c
	ObjectProperty m_mcRarity; // 0x134
	ObjectProperty m_mcBackground; // 0x13c
	ObjectProperty m_mcOwnedItemsTF; // 0x144
	ObjectProperty m_pCTA; // 0x14c
	ObjectProperty m_pChestDisplay; // 0x154
	ObjectProperty m_pItemPreview; // 0x15c
	ObjectProperty m_pItemHint; // 0x164
};

struct UAnimNodeBlendDirectional : UAnimNodeBlendBase {
	float DirDegreesPerSecond; // 0x114
	float DirAngle; // 0x118
	int32_t SingleAnimAtOrAboveLOD; // 0x11c
	FRotator RotationOffset; // 0x120
	char bUseAcceleration : 1; // 0x12c
};

struct UTgInventoryObject_Listen_ActiveWhileDeployableInactive : UTgInventoryObject_Listen_ActiveWhileOffCooldown {
	int32_t m_nActiveDeployableCount; // 0xc8
};

struct ATgDevice_ImaniF : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	float m_fLastMultiplierUsed; // 0xa0c
	float m_fInterruptSpeedThresholdSqr; // 0xa10
	ObjectProperty m_CachedImani; // 0xa14
	ObjectProperty m_CachedLMB2; // 0xa1c
};

struct UUIDataAcquisition : UUIData {
	Fdword dwLocalAcquisitionId; // 0x64
	QuestOrigin eQuestOrigin; // 0x68
};

struct UUIComponent_ItemDisplay : UUIComponent_Display {
	ObjectProperty m_pRarityText; // 0x124
	ObjectProperty m_pTitle; // 0x12c
	ObjectProperty m_pChest; // 0x134
	ObjectProperty m_pIcon; // 0x13c
	ObjectProperty m_pRarityFrame; // 0x144
	ObjectProperty m_pCard; // 0x14c
	ObjectProperty m_pItem; // 0x154
	ObjectProperty m_pChestQuantity; // 0x15c
};

struct UInterpGroupInst : UObject {
	ObjectProperty Group; // 0x60
	ObjectProperty GroupActor; // 0x68
	TArray<ObjectProperty> TrackInst; // 0x70
	FPointer CachedCamOverridePostProcess; // 0x80
};

struct ATgActionPoint : ATgNavigationPoint {
	eActionPointType ActionType; // 0x37c
	char nObjectiveNum; // 0x37d
	char nTaskForce; // 0x37e
	char bUseRotation : 1; // 0x380
};

struct UTgAnimBlendByTeleportBeacon : UTgAnimNodeBlendList {
	char m_bDeployed : 1; // 0x168
};

struct UInterpTrack : UObject {
	FPointer VfTable_FInterpEdInputInterface; // 0x60
	FPointer CurveEdVTable; // 0x68
	TArray<ObjectProperty> SubTracks; // 0x70
	UInterpTrackInst* TrackInstClass; // 0x80
	ETrackActiveCondition ActiveCondition; // 0x88
	FString TrackTitle; // 0x8c
	char bOnePerGroup : 1; // 0x9c
	char bDirGroupOnly : 1; // 0x9c
	char bDisableTrack : 1; // 0x9c
	char bIsAnimControlTrack : 1; // 0x9c
	char bSubTrackOnly : 1; // 0x9c
	char bVisible : 1; // 0x9c
	char bIsSelected : 1; // 0x9c
	char bIsRecording : 1; // 0x9c
	char bIsCollapsed : 0; // 0x9c
};

struct UUIComponent_SaleGemPack : UUIComponent_GemPack {
	ObjectProperty m_mcSaleStamp; // 0x14c
	ObjectProperty m_mcSaleStampText; // 0x154
	ObjectProperty m_mcSaleStampOffText; // 0x15c
	ObjectProperty m_pFullPrice; // 0x164
};

struct USeqAct_MobileRemoveInputZone : USequenceAction {
	FString ZoneName; // 0x108
};

struct ATgSiegePushActor : AActor {
	ObjectProperty s_CollisionProxy; // 0x280
	float m_fCollisionProxyRadius; // 0x288
	float m_fCollisionProxyHeight; // 0x28c
	ComponentProperty m_SkelMesh; // 0x290
	ComponentProperty m_RadiusMesh; // 0x298
	int32_t m_nTF1Count; // 0x2a0
	int32_t m_nTF2Count; // 0x2a4
	int32_t m_nDefenderTaskForce; // 0x2a8
	EPushState m_CurrentPushState; // 0x2ac
	float m_fPendingReverseTime; // 0x2b0
};

struct UNavMeshGoal_ClosestActorInList : UNavMeshPathGoalEvaluator {
	TArray<FBiasedGoalActor> GoalList; // 0x7c
	FMultiMap_Mirror PolyToGoalActorMap; // 0x8c
	FPointer CachedAnchorPoly; // 0xd4
};

struct UTgInventoryObject_Listen_ActiveWhileOffCooldown : UTgInvListener {
	char m_bIsActive : 1; // 0xc4
};

struct ATgProj_AtlasRMB : ATgProj_Simulated {
	float m_fGravityZ; // 0x52c
	char m_bIsAOE : 1; // 0x530
};

struct UTgControlModule_Spectator : UTgControlModule {
	float RotationLimit; // 0x6c
	float SpectatorStallZ; // 0x70
	float SpectatorMinStallZ; // 0x74
};

struct UTgDropShadowDecalComponent : UStaticMeshComponent {
	float LastCachedZ; // 0x310
	FVector LastOwnerPos; // 0x314
};

struct UUIComponent_ImaniUltTimer : UUIComponent_ProgressBarRadial {
	char m_bUltActive : 1; // 0x148
	float m_fUltBarMax; // 0x14c
	ObjectProperty m_pDragonViewTarget; // 0x150
};

struct ATgDeploy_EffectAura : ATgDeploy_MatchParentFireMode {
	float r_fRadiusScale; // 0x46c
	TArray<ObjectProperty> m_TouchingActors; // 0x470
	TArray<ObjectProperty> m_AffectedActors; // 0x480
	float m_fLastBlockedByBlockersTime; // 0x490
	float m_fMinBlockedByBlockersTime; // 0x494
	TArray<ObjectProperty> m_BlockedActors; // 0x498
	ObjectProperty m_CollisionProxy; // 0x4a8
};

struct UInterpTrackLinearColorProp : UInterpTrackLinearColorBase {
	FName PropertyName; // 0xb8
};

struct UTgEffectForm_DisablePawn : UTgEffectForm {
	char m_bPauseAnims : 1; // 0xfc
};

struct ANxTornadoAngularForceFieldCapsule : ANxTornadoAngularForceField {
	ComponentProperty RenderComponent; // 0x308
};

struct UParticleModuleRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionFloat LifeMultiplier; // 0x68
};

struct UMaterialInterface : USurface {
	FRenderCommandFence_Mirror ParentRefFence; // 0x60
	FLightmassMaterialInterfaceSettings LightmassSettings; // 0x64
	char bHasQualitySwitch : 1; // 0x80
	char bRunTrimmingTool : 1; // 0x80
	char bUseCachedCircleVerts : 1; // 0x80
	char bScanRedChannel : 1; // 0x80
	char bScanGreenChannel : 1; // 0x80
	char bScanBlueChannel : 1; // 0x80
	char bScanAlphaChannel : 1; // 0x80
	char bClearData : 1; // 0x80
	char bAutoFlattenMobile : 0; // 0x80
	char bAutoFlattenMobileNormalTexture : 0; // 0x80
	char bMobileAllowFog : 0; // 0x80
	char bGenerateSubUV : 0; // 0x80
	char bUseMobileSpecular : 0; // 0x80
	char bUseMobileVertexSpecular : 0; // 0x80
	char bUseMobilePixelSpecular : 0; // 0x80
	char bUseMobileBumpOffset : 0; // 0x80
	char bLockColorBlending : 0; // 0x80
	char bUseMobileUniformColorMultiply : 0; // 0x80
	char bUseMobileVertexColorMultiply : 0; // 0x80
	char bUseMobileDetailNormal : 0; // 0x80
	char bBaseTextureTransformed : 0; // 0x80
	char bEmissiveTextureTransformed : 0; // 0x80
	char bNormalTextureTransformed : 0; // 0x80
	char bMaskTextureTransformed : 0; // 0x80
	char bDetailTextureTransformed : 0; // 0x80
	char bUseMobileWaveVertexMovement : 0; // 0x80
	char bMobileEnableBounceLight : 0; // 0x80
	char bUseMobileLandscapeMonochromeLayerBlending : 0; // 0x80
	TArray<FVector2D> TrimmedVertices; // 0x84
	FColor FlattenBackgroundColor; // 0x94
	ObjectProperty MobileBaseTexture; // 0x98
	ObjectProperty FlattenedTexture; // 0xa0
	EMobileTexCoordsSource MobileBaseTextureTexCoordsSource; // 0xa8
	EMobileAmbientOcclusionSource MobileAmbientOcclusionSource; // 0xa9
	EMobileSpecularMask MobileSpecularMask; // 0xaa
	EMobileEmissiveColorSource MobileEmissiveColorSource; // 0xab
	EMobileValueSource MobileEmissiveMaskSource; // 0xac
	EMobileValueSource MobileEnvironmentMaskSource; // 0xad
	EMobileEnvironmentBlendMode MobileEnvironmentBlendMode; // 0xae
	EMobileValueSource MobileRimLightingMaskSource; // 0xaf
	EMobileTexCoordsSource MobileMaskTextureTexCoordsSource; // 0xb0
	EMobileAlphaValueSource MobileAlphaValueSource; // 0xb1
	EMobileTexCoordsSource MobileDetailTextureTexCoordsSource; // 0xb2
	EMobileTextureBlendFactorSource MobileTextureBlendFactorSource; // 0xb3
	EMobileColorMultiplySource MobileColorMultiplySource; // 0xb4
	ObjectProperty MobileNormalTexture; // 0xb8
	float SubUVFrameRate; // 0xc0
	int32_t SubUVFrameCountAlongAxes; // 0xc4
	float SubUVFrameSize; // 0xc8
	FLinearColor MobileSpecularColor; // 0xcc
	float MobileSpecularPower; // 0xdc
	ObjectProperty MobileEmissiveTexture; // 0xe0
	FLinearColor MobileEmissiveColor; // 0xe8
	ObjectProperty MobileEnvironmentTexture; // 0xf8
	float MobileEnvironmentAmount; // 0x100
	FLinearColor MobileEnvironmentColor; // 0x104
	float MobileEnvironmentFresnelAmount; // 0x114
	float MobileEnvironmentFresnelExponent; // 0x118
	float MobileRimLightingStrength; // 0x11c
	float MobileRimLightingExponent; // 0x120
	FLinearColor MobileRimLightingColor; // 0x124
	float MobileBumpOffsetReferencePlane; // 0x134
	float MobileBumpOffsetHeightRatio; // 0x138
	ObjectProperty MobileMaskTexture; // 0x13c
	float MobileOpacityMultiplier; // 0x144
	ObjectProperty MobileDetailTexture; // 0x148
	ObjectProperty MobileDetailTexture2; // 0x150
	ObjectProperty MobileDetailTexture3; // 0x158
	FLinearColor DefaultUniformColor; // 0x160
	FLinearColor MobileDefaultUniformColor; // 0x170
	float TransformCenterX; // 0x180
	float MobileTransformCenterX; // 0x184
	float TransformCenterY; // 0x188
	float MobileTransformCenterY; // 0x18c
	float PannerSpeedX; // 0x190
	float MobilePannerSpeedX; // 0x194
	float PannerSpeedY; // 0x198
	float MobilePannerSpeedY; // 0x19c
	float RotateSpeed; // 0x1a0
	float MobileRotateSpeed; // 0x1a4
	float FixedScaleX; // 0x1a8
	float MobileFixedScaleX; // 0x1ac
	float FixedScaleY; // 0x1b0
	float MobileFixedScaleY; // 0x1b4
	float SineScaleX; // 0x1b8
	float MobileSineScaleX; // 0x1bc
	float SineScaleY; // 0x1c0
	float MobileSineScaleY; // 0x1c4
	float SineScaleFrequencyMultipler; // 0x1c8
	float MobileSineScaleFrequencyMultipler; // 0x1cc
	float FixedOffsetX; // 0x1d0
	float MobileFixedOffsetX; // 0x1d4
	float FixedOffsetY; // 0x1d8
	float MobileFixedOffsetY; // 0x1dc
	float MobileTangentVertexFrequencyMultiplier; // 0x1e0
	float MobileVerticalFrequencyMultiplier; // 0x1e4
	float MobileMaxVertexMovementAmplitude; // 0x1e8
	float MobileSwayFrequencyMultiplier; // 0x1ec
	float MobileSwayMaxAngle; // 0x1f0
	FVector MobileDirectionalLightDirection; // 0x1f4
	float MobileDirectionalLightBrightness; // 0x200
	FColor MobileDirectionalLightColor; // 0x204
	FVector MobileBounceLightDirection; // 0x208
	float MobileBounceLightBrightness; // 0x214
	FColor MobileBounceLightColor; // 0x218
	float MobileSkyLightBrightness; // 0x21c
	FColor MobileSkyLightColor; // 0x220
	FName MobileLandscapeLayerNames[0x4]; // 0x224
	FColor MobileLandscapeMonochomeLayerColors[0x4]; // 0x244
};

struct UDecalComponent : UPrimitiveComponent {
	ObjectProperty DecalMaterial; // 0x24c
	float Width; // 0x254
	float Height; // 0x258
	float TileX; // 0x25c
	float TileY; // 0x260
	float OffsetX; // 0x264
	float OffsetY; // 0x268
	float DecalRotation; // 0x26c
	float FieldOfView; // 0x270
	float NearPlane; // 0x274
	float FarPlane; // 0x278
	FVector Location; // 0x27c
	FRotator Orientation; // 0x288
	FVector HitLocation; // 0x294
	FVector HitNormal; // 0x2a0
	FVector HitTangent; // 0x2ac
	FVector HitBinormal; // 0x2b8
	char bNoClip : 1; // 0x2c4
	char bFadeOutAtFarPlane : 1; // 0x2c4
	char bStaticDecal : 1; // 0x2c4
	char m_bIsGameplayDecal : 1; // 0x2c4
	char bProjectOnBackfaces : 1; // 0x2c4
	char bProjectOnHidden : 1; // 0x2c4
	char bProjectOnBSP : 1; // 0x2c4
	char bProjectOnStaticMeshes : 1; // 0x2c4
	char bProjectOnSkeletalMeshes : 0; // 0x2c4
	char bProjectOnTerrain : 0; // 0x2c4
	char bFlipBackfaceDirection : 0; // 0x2c4
	char bMovableDecal : 0; // 0x2c4
	char bHasBeenAttached : 0; // 0x2c4
	char bDecalMaterialSetAtRunTime : 0; // 0x2c4
	ComponentProperty HitComponent; // 0x2c8
	FName HitBone; // 0x2d0
	int32_t HitNodeIndex; // 0x2d8
	int32_t HitLevelIndex; // 0x2dc
	int32_t FracturedStaticMeshComponentIndex; // 0x2e0
	TArray<int32_t> HitNodeIndices; // 0x2e4
	TArray<FDecalReceiver> DecalReceivers; // 0x2f4
	TArray<FPointer> StaticReceivers; // 0x304
	FPointer ReleaseResourcesFence; // 0x314
	TArray<FPlane> Planes; // 0x31c
	float DepthBias; // 0x32c
	float SlopeScaleDepthBias; // 0x330
	float OrbisDepthBias; // 0x334
	float OrbisSlopeScaleDepthBias; // 0x338
	int32_t SortOrder; // 0x33c
	float BackfaceAngle; // 0x340
	FVector2D BlendRange; // 0x344
	float StreamingDistanceMultiplier; // 0x34c
	EDecalTransform DecalTransform; // 0x350
	EFilterMode FilterMode; // 0x351
	TArray<ObjectProperty> Filter; // 0x354
	TArray<ComponentProperty> ReceiverImages; // 0x364
	FVector ParentRelativeLocation; // 0x374
	FRotator ParentRelativeOrientation; // 0x380
	FMatrix ParentRelLocRotMatrix; // 0x390
};

struct UTgAISquad_MonsterBehaviorTree : UTgAISquad {
	FName BehaviorTreeAsName; // 0xa8
	ObjectProperty Controller; // 0xb0
};

struct UTgInventoryObject_Listen_Combo_Ruckus : UTgInventoryObject_Listen_Combo {
	ObjectProperty m_CachedRuckusOwner; // 0xcc
	int32_t m_nDamageReductionStacks; // 0xd4
	int32_t m_nBonusDamageStacks; // 0xd8
	float m_fDamageReductionStackTime; // 0xdc
	float m_fBonusDamageStackTime; // 0xe0
	char m_bEmitterActive : 1; // 0xe4
	char m_bComboEffectsOn : 1; // 0xe4
	float m_fComboBonusTime; // 0xe8
};

struct UTgAIBehaviorCondition_DistanceFromDamagingDeployable : UTgAIBehaviorCondition_DistanceBase {
	char bMustBeEnemy : 1; // 0x9c
};

struct ATgDevice_PrincessF : ATgDevice_Charge {
	ObjectProperty m_cachedSupportDevice; // 0xa78
	int32_t m_nEyeheightAdjustmentWhileSliding; // 0xa80
	float m_fEyeHeightSmoothFactor; // 0xa84
};

struct UHttpRequestInterface : UHttpBaseInterface {
	DelegateProperty __OnProcessRequestComplete__Delegate; // 0x60
};

struct USceneCapture2DComponent : USceneCaptureComponent {
	ObjectProperty TextureTarget; // 0xd0
	float FieldOfView; // 0xd8
	float NearPlane; // 0xdc
	float FarPlane; // 0xe0
	char bUpdateMatrices : 1; // 0xe4
	FMatrix ViewMatrix; // 0xf0
	FMatrix ProjMatrix; // 0x130
	FMatrix ViewMatrix_RT; // 0x170
	FMatrix ProjMatrix_RT; // 0x1b0
};

struct USeqAct_SetObject : USeqAct_SetSequenceVariable {
	ObjectProperty DefaultValue; // 0x108
	ObjectProperty Value; // 0x110
};

struct USeqAct_SetActiveAnimChild : USequenceAction {
	FName NodeName; // 0x108
	int32_t ChildIndex; // 0x110
	float BlendTime; // 0x114
};

struct ATgPawn_Pip : ATgPawn_Character {
	char r_bWeightless : 1; // 0x3160
	char m_bWeightlessDurationEnded : 1; // 0x3160
	char r_bAcrobaticsActive : 1; // 0x3160
	char r_bHasMegaPotion : 1; // 0x3160
	float m_fWeightlessMaxSpeedModifier; // 0x3164
	float m_fWeightlessJumpZModifier; // 0x3168
	float r_fRadiusForHealingPotionFX; // 0x316c
	ObjectProperty m_CachedWeightless; // 0x3170
};

struct UTgInventoryObject_Listen_FirstShotAfterMovementAbility : UTgInvListener {
	float m_fLastMovementAbilityTime; // 0xc4
	char m_bJustFinishedMovementAbility : 1; // 0xc8
	int32_t m_nNumApplicationsRemaining; // 0xcc
	float m_fLastAppliedTime; // 0xd0
};

struct UTgAchievement_BulletSponge : UTgAchievement {
	int32_t m_nDamageShielded; // 0x94
};

struct UTgSkelCon_OscillateBoneScale : USkelControlSingleBone {
	float OscillationAmplitude; // 0x100
	float OscillationFrequency; // 0x104
	float OscillationBaseScale; // 0x108
	float Theta; // 0x10c
};

struct ATgProj_FrostBomb : ATgProj_FreeGrenade {
	float m_fDistanceTravelled; // 0x580
};

struct USeqCond_SwitchClass : USeqCond_SwitchBase {
	TArray<FSwitchClassInfo> ClassArray; // 0xec
};

struct ATgDevice_CorvusDaggerTalent : ATgDevice {
	ObjectProperty m_BeamCollisionProxy; // 0xa04
	TArray<ObjectProperty> m_ActorsInRange; // 0xa0c
	FVector m_vDaggerLocation; // 0xa1c
};

struct ATgDevice_ShadowTeleport : ATgDevice {
	ObjectProperty m_Shadow; // 0xa04
	int32_t m_nShotsFired; // 0xa0c
	float m_fShadowTargetTimerCurrent; // 0xa10
	float m_fShadowTargetTimerTotal; // 0xa14
	ObjectProperty m_pPrevTeleportedTo; // 0xa18
};

struct UUIScene_UIFacebookLivePopup : UUIScene {
	ObjectProperty m_mcPanel; // 0x1cc
	ObjectProperty m_mcTitle; // 0x1d4
	ObjectProperty m_mcStatus; // 0x1dc
	ObjectProperty m_Close; // 0x1e4
	ObjectProperty m_Confirm; // 0x1ec
	TArray<ObjectProperty> m_Options; // 0x1f4
	ObjectProperty m_grOptions; // 0x204
	char m_bAllIsWell : 1; // 0x20c
};

struct ATgDevice_Scope : ATgDevice_ToggleWithLockout {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa10
	char m_bDelayMoveSpeedPenalty : 1; // 0xa18
	char m_bIsZoomed : 1; // 0xa18
};

struct UMaterialExpressionVectorParameter : UMaterialExpressionParameter {
	FLinearColor DefaultValue; // 0xd0
};

struct UWebApplication : UObject {
	ObjectProperty WorldInfo; // 0x60
	ObjectProperty WebServer; // 0x68
	FString Path; // 0x70
};

struct ATgPawn_Cassie : ATgPawn_Character {
	float r_fRadiusForBlastShotFX; // 0x3160
	char r_bRollBonusActive : 1; // 0x3164
	ObjectProperty m_CachedScoutDevice; // 0x3168
};

struct UWindPointSourceComponent : UWindDirectionalSourceComponent {
	ComponentProperty PreviewRadiusComponent; // 0xa0
	float Radius; // 0xa8
};

struct UInterpTrackVectorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0xb8
};

struct UTgSeqEvent_ControlPointOwnershipPercent : USequenceEvent {
	float OwnershipPercent; // 0x128
	int32_t PointIndex; // 0x12c
};

struct ATgDevice_QuadWield : ATgDevice_DualWield {
	FVector m_vProjectileSpawnOffset3; // 0xa14
	FVector m_vProjectileSpawnOffset4; // 0xa20
	int32_t m_nWeaponFireNumber; // 0xa2c
};

struct ATgDeploy_EffectTrail : ATgDeploy_MatchParentFireMode {
	ObjectProperty r_TrailPawn; // 0x46c
	int32_t m_TrailEffectID; // 0x474
	ObjectProperty m_TrailEffects; // 0x478
	char m_bHasInitialPoint : 1; // 0x480
	char r_bInDeployMode : 1; // 0x480
	float m_fPointDistance; // 0x484
	float m_fPointLifetime; // 0x488
	int32_t m_nNextPointIndex; // 0x48c
	int32_t m_nTailPointIndex; // 0x490
	FVector m_TrailPoints[0x14]; // 0x494
	FVector m_ParticleSystemOffsets[0x14]; // 0x584
	float m_TrailTimes[0x14]; // 0x674
	ObjectProperty m_CollisionProxies[0x14]; // 0x6c4
	ComponentProperty m_Decals[0x14]; // 0x764
};

struct UUIComponent_StoreItems : UUIComponent_Display {
	ObjectProperty m_pFilter; // 0x124
	ObjectProperty m_mcRentalItemInfo; // 0x12c
	ObjectProperty m_mcRentalItemInfoDuration; // 0x134
	ObjectProperty m_pItemTabs; // 0x13c
	ObjectProperty m_pItemList; // 0x144
	ObjectProperty m_pItemPreviewStack; // 0x14c
	ObjectProperty m_pItemStats; // 0x154
	ObjectProperty m_pExclusiveItemInfo; // 0x15c
	ObjectProperty m_pBoosterItemInfo; // 0x164
	ObjectProperty m_pOpenFilterButton; // 0x16c
	ObjectProperty m_pClearFilterButton; // 0x174
	ObjectProperty m_pOpenFilterKey; // 0x17c
	ObjectProperty m_pChampFilterDropdown; // 0x184
	ObjectProperty m_pUnlockItemAction; // 0x18c
	ObjectProperty m_pOpenFilterAction; // 0x194
	ObjectProperty m_grItems; // 0x19c
};

struct UTgDeviceForm_RaumCharge : UTgDeviceForm {
	float m_fTimeToThrowWeapon; // 0x28c
	ObjectProperty m_CachedWMA; // 0x290
};

struct ATgStaticMeshActor_PantheonMIC : ATgStaticMeshActor {
	ObjectProperty MICOverrides[0x8]; // 0x2a4
	int32_t m_nGameTaskForce; // 0x2e4
	int32_t m_nTeamIndex; // 0x2e8
};

struct UTgAnimNodeHitReactionOffset : UTgAnimNodeAimOffset_Base {
	ObjectProperty Owner; // 0x170
	FVector2D m_vCurrentAngle; // 0x178
	char m_bSecondaryReaction : 1; // 0x180
	float m_fMaxReactionTime; // 0x184
	float m_fMinTimeBetweenReactions; // 0x188
	TArray<FHitReactionInfo> m_ActiveReactions; // 0x18c
};

struct UTgInventoryObject_Listen_HitWithDeviceSpecial : UTgInventoryObject_Listen_AbilityProcBase {
	char m_bSkipActiveCheck : 1; // 0xcc
	char m_bSkipStartCooldown : 1; // 0xcc
};

struct ATgPawn_Juggernaut : ATgPawn_LanePusher {
	char m_bNextLaserLeft : 1; // 0x3058
	char m_bInGenericFirePosture : 1; // 0x3058
};

struct USeqVar_RandomInt : USeqVar_Int {
	int32_t Min; // 0xa4
	int32_t Max; // 0xa8
};

struct UTgAIBehaviorCondition_DeviceReadyToUse : UTgAIBehaviorCondition {
	TG_EQUIP_POINT DeviceSlot; // 0x98
};

struct UTgAIBehaviorCondition_NearbyTargetTypeCount : UTgAIBehaviorCondition_DistanceBase {
	char bMustBeEnemy : 1; // 0x9c
	char bMustBeInForwardCone : 1; // 0x9c
	int32_t TargetTypeThreshold; // 0xa0
	ECombatTargetType TargetType; // 0xa4
	float ForwardConeAngle; // 0xa8
};

struct UUIComponent_HudScoreHH_Climb : UUIComponent_Display {
	ObjectProperty m_mcMcGuffin; // 0x124
	ObjectProperty m_mcDamage; // 0x12c
	ObjectProperty m_mcHealthBar; // 0x134
	ObjectProperty m_mcHealthBarTF; // 0x13c
	ObjectProperty m_mcHealthBarBar; // 0x144
	ObjectProperty m_mcHealthBarFill; // 0x14c
	ObjectProperty m_mcHealthBarFillB; // 0x154
	ObjectProperty m_mcScoreA; // 0x15c
	ObjectProperty m_mcScoreB; // 0x164
	ObjectProperty m_mcProgressA; // 0x16c
	ObjectProperty m_mcProgressABar; // 0x174
	ObjectProperty m_mcProgressAFill; // 0x17c
	ObjectProperty m_mcProgressB; // 0x184
	ObjectProperty m_mcProgressBBar; // 0x18c
	ObjectProperty m_mcProgressBFill; // 0x194
};

struct UUIComponent_PortraitBorder : UUIComponent_Display {
	ObjectProperty m_mcFrame; // 0x124
	ObjectProperty m_mcLock; // 0x12c
	ObjectProperty m_mcEquippedCheckmark; // 0x134
};

struct UMobileMenuObject : UObject {
	char bHasBeenInitialized : 1; // 0x60
	char bRelativeLeft : 1; // 0x60
	char bRelativeTop : 1; // 0x60
	char bRelativeWidth : 1; // 0x60
	char bRelativeHeight : 1; // 0x60
	char bApplyGlobalScaleLeft : 1; // 0x60
	char bApplyGlobalScaleTop : 1; // 0x60
	char bApplyGlobalScaleWidth : 1; // 0x60
	char bApplyGlobalScaleHeight : 0; // 0x60
	char bHeightRelativeToWidth : 0; // 0x60
	char bXOffsetIsActual : 0; // 0x60
	char bYOffsetIsActual : 0; // 0x60
	char bIsActive : 0; // 0x60
	char bIsHidden : 0; // 0x60
	char bIsTouched : 0; // 0x60
	char bIsHighlighted : 0; // 0x60
	char bTellSceneBeforeRendering : 0; // 0x60
	float Left; // 0x64
	float Top; // 0x68
	float Width; // 0x6c
	float Height; // 0x70
	float InitialLeft; // 0x74
	float InitialTop; // 0x78
	float InitialWidth; // 0x7c
	float InitialHeight; // 0x80
	float AuthoredGlobalScale; // 0x84
	float TopLeeway; // 0x88
	float BottomLeeway; // 0x8c
	float LeftLeeway; // 0x90
	float RightLeeway; // 0x94
	float XOffset; // 0x98
	float YOffset; // 0x9c
	FString Tag; // 0xa0
	ObjectProperty InputOwner; // 0xb0
	float Opacity; // 0xb8
	ObjectProperty OwnerScene; // 0xbc
	FString RelativeToTag; // 0xc4
	ObjectProperty RelativeTo; // 0xd4
};

struct ATgAIVolume : AVolume {
	int32_t LaneIndex; // 0x2bc
	int32_t TaskforceIndex; // 0x2c0
	char bEnabled : 1; // 0x2c4
};

struct UUIComponent_DruidMoonJuiceBar : UUIComponent_ProgressBarRadial {
	int32_t m_nThresholdZeroPercentFrame; // 0x148
	int32_t m_nThresholdHundredPercentFrame; // 0x14c
	ObjectProperty m_ThresholdBar; // 0x150
	float m_fMinMoonJuice; // 0x158
};

struct UUIHudBurnsConquest : UTgGfxScene {
	int32_t m_nCredits; // 0x1ec
	int32_t m_nActiveItem; // 0x1f0
	char m_bOpenPostTimelapse : 1; // 0x1f4
	TArray<FUIITEMRANK> m_Items; // 0x1f8
	ObjectProperty m_mcBack; // 0x208
	ObjectProperty m_mcTitle; // 0x210
	ObjectProperty m_mcSubtitle; // 0x218
	ObjectProperty m_mcCredits; // 0x220
	ObjectProperty m_mcInfo; // 0x228
	ObjectProperty m_mcInfoFrame; // 0x230
	ObjectProperty m_mcInfoTitle; // 0x238
	ObjectProperty m_mcInfoSubtitle; // 0x240
	ObjectProperty m_mcAutoBuyDialogue; // 0x248
	ObjectProperty m_mcAutoBuyTitle; // 0x250
	ObjectProperty m_mcAutoBuyDesc; // 0x258
	ObjectProperty m_mcAutoBuyPrompt; // 0x260
	FUIITEMDATA m_mcInfoUpgrade[0x3]; // 0x268
	ObjectProperty m_mcInfoUpgradeArrow[0x2]; // 0x328
	ObjectProperty m_AutoBuyOffButton; // 0x338
	FUIITEMGROUP m_Group[0x4]; // 0x340
	ObjectProperty m_scPurchase; // 0x8c0
	ObjectProperty m_grItem; // 0x8c8
};

struct UUIComponent_MatchLobbyRoleTab : UUIComponent_Display {
	ObjectProperty m_pButton; // 0x124
	ObjectProperty m_mcSelected; // 0x12c
	ObjectProperty m_mcWarning; // 0x134
};

struct URB_ConstraintSetup : UObject {
	FName JointName; // 0x60
	FName ConstraintBone1; // 0x68
	FName ConstraintBone2; // 0x70
	FVector Pos1; // 0x78
	FVector PriAxis1; // 0x84
	FVector SecAxis1; // 0x90
	FVector Pos2; // 0x9c
	FVector PriAxis2; // 0xa8
	FVector SecAxis2; // 0xb4
	FVector PulleyPivot1; // 0xc0
	FVector PulleyPivot2; // 0xcc
	char bEnableProjection : 1; // 0xd8
	char m_bBreakOnOwnersDeath : 1; // 0xd8
	char m_bDoBreak : 1; // 0xd8
	char bLinearLimitSoft : 1; // 0xd8
	char bLinearBreakable : 1; // 0xd8
	char bSwingLimited : 1; // 0xd8
	char bTwistLimited : 1; // 0xd8
	char bSwingLimitSoft : 1; // 0xd8
	char bTwistLimitSoft : 0; // 0xd8
	char bAngularBreakable : 0; // 0xd8
	char bIsPulley : 0; // 0xd8
	char bMaintainMinDistance : 0; // 0xd8
	FLinearDOFSetup LinearXSetup; // 0xdc
	FLinearDOFSetup LinearYSetup; // 0xe4
	FLinearDOFSetup LinearZSetup; // 0xec
	float LinearLimitStiffness; // 0xf4
	float LinearLimitDamping; // 0xf8
	float LinearBreakThreshold; // 0xfc
	float Swing1LimitAngle; // 0x100
	float Swing2LimitAngle; // 0x104
	float TwistLimitAngle; // 0x108
	float SwingLimitStiffness; // 0x10c
	float SwingLimitDamping; // 0x110
	float TwistLimitStiffness; // 0x114
	float TwistLimitDamping; // 0x118
	float AngularBreakThreshold; // 0x11c
	float PulleyRatio; // 0x120
};

struct USeqAct_SetInt : USeqAct_SetSequenceVariable {
	int32_t Target; // 0x108
	TArray<int32_t> Value; // 0x10c
};

struct USeqAct_Latent : USequenceAction {
	TArray<ObjectProperty> LatentActors; // 0x108
	char bAborted : 1; // 0x118
	float LatentActivationTime; // 0x11c
};

struct UUIDataProvider_OnlineFriends : UUIDataProvider_OnlinePlayerDataBase {
	TArray<FOnlineFriend> FriendsList; // 0x74
	FString NickNameCol; // 0x84
	FString PresenceInfoCol; // 0x94
	FString FriendStateCol; // 0xa4
	FString bIsOnlineCol; // 0xb4
	FString bIsPlayingCol; // 0xc4
	FString bIsPlayingThisGameCol; // 0xd4
	FString bIsJoinableCol; // 0xe4
	FString bHasVoiceSupportCol; // 0xf4
	FString bHaveInvitedCol; // 0x104
	FString bHasInvitedYouCol; // 0x114
	FString OfflineText; // 0x124
	FString OnlineText; // 0x134
	FString AwayText; // 0x144
	FString BusyText; // 0x154
};

struct ATgLanePylon : APylon {
	int32_t m_nLane; // 0x490
};

struct UTgAchievement_FastKillSequence : UTgAchievement {
	TArray<float> m_fKillTimes; // 0x94
};

struct ATgDevice_TheLaw : ATgDevice {
	float m_ExecutePercentage; // 0xa04
	FRotator AimRotation; // 0xa08
};

struct UUIDataStore_OnlineStats : UUIDataStore_Remote {
	TArray<UOnlineStatsRead*> StatsReadClasses; // 0x98
	FName StatsReadName; // 0xa8
	FPlayerNickMetaData PlayerNickData; // 0xb0
	FRankMetaData RankNameMetaData; // 0xc8
	FName TotalRowsName; // 0xe0
	TArray<ObjectProperty> StatsReadObjects; // 0xe8
	ObjectProperty StatsRead; // 0xf8
	EStatsFetchType CurrentReadType; // 0x100
	TScriptInterface<Class> StatsInterface; // 0x104
	TScriptInterface<Class> PlayerInterface; // 0x114
};

struct UTgAnimBlendByFire : UTgAnimNodeBlendList {
	char m_bSetToIdleOnCeaseRelevant : 1; // 0x168
	char m_bShouldReplayIfAlreadyActive : 1; // 0x168
	FDeviceParameters m_InHandDeviceParameters; // 0x16c
	FDeviceParameters m_OffHand1DeviceParameters; // 0x180
	FDeviceParameters m_OffHand2DeviceParameters; // 0x194
	FDeviceParameters m_OffHand3DeviceParameters; // 0x1a8
	FDeviceParameters m_OffHand4DeviceParameters; // 0x1bc
	FDeviceParameters m_RecallDeviceParameters; // 0x1d0
	ObjectProperty m_OwningPawn; // 0x1e4
};

struct UTgInventoryObject_Listen_MirrorPetDamageToHeal : UTgInventoryObject_Listen_AbilityProcBase {
	ObjectProperty m_CachedFiremode; // 0xcc
};

struct UTgAIBehaviorCondition_NearbyAllyAttacked : UTgAIBehaviorCondition {
	float TimeThreshold; // 0x98
	float AllyDistanceThreshold; // 0x9c
	float AttackerDistanceThreshold; // 0xa0
};

struct UTgChatData : UObject {
	int32_t m_nId; // 0x60
	int32_t m_nSoundId; // 0x64
	int32_t m_nChannel; // 0x68
	char m_bFeedback : 1; // 0x6c
	char m_bSenderIsPaidBattlePass : 1; // 0x6c
	char m_bSenderIsVerifiedPlayer : 1; // 0x6c
	char m_bIsVGS : 1; // 0x6c
	FString m_sSender; // 0x70
	Fdword m_dwSenderId; // 0x80
	Fdword m_dwSenderBattlePassXp; // 0x84
	FString m_sMessage; // 0x88
	FString m_sSenderColor; // 0x98
	FString m_sSenderClass; // 0xa8
	FString m_sMessageColor; // 0xb8
};

struct UTgDevMenuMoviePlayer : UUIMoviePlayer {
	ObjectProperty m_DevMenu; // 0x2a0
};

struct ATgPawn_Longbow : ATgPawn_Character {
	ObjectProperty m_CachedInhand; // 0x3160
	char r_bImpalerArrowIsActive : 1; // 0x3168
	char r_bExplosiveImpalerArrow : 1; // 0x3168
	char r_bDesertSilenceArrow : 1; // 0x3168
};

struct UUIDataChampion : UUIDataObject {
	int32_t m_nBotId; // 0x74
	int32_t m_nLevel; // 0x78
	int32_t m_nArchetype; // 0x7c
	FString m_sName; // 0x80
	FString m_sDesc; // 0x90
	FString m_sLore; // 0xa0
	FString m_sDamage; // 0xb0
	FString m_sSpecial; // 0xc0
	int32_t m_nItemsTotal; // 0xd0
	int32_t m_nItemsOwned; // 0xd4
	float m_fItemsPercent; // 0xd8
	int32_t m_nXPProgress; // 0xdc
	int32_t m_nXPRequired; // 0xe0
	int32_t m_nXPTotal; // 0xe4
	float m_fXPPercent; // 0xe8
	int32_t m_nActivePassive; // 0xec
	int32_t m_nActiveTalent; // 0xf0
	int32_t m_nActiveDeck; // 0xf4
	ObjectProperty m_ClassItem; // 0xf8
	ObjectProperty m_CharacterRotationLTI; // 0x100
	TArray<ObjectProperty> m_Cards; // 0x108
	TArray<ObjectProperty> m_Skills; // 0x118
	TArray<ObjectProperty> m_Talents; // 0x128
	TArray<ObjectProperty> m_EventTalents; // 0x138
	TArray<ObjectProperty> m_Passives; // 0x148
	TArray<ObjectProperty> m_Collections; // 0x158
	TArray<ObjectProperty> m_Weapons; // 0x168
	TArray<ObjectProperty> m_Emotes; // 0x178
	TArray<ObjectProperty> m_MVPPoses; // 0x188
	TArray<ObjectProperty> m_MasteryRewards; // 0x198
	ObjectProperty m_VoicePack; // 0x1a8
	int32_t m_nPreviewingSkinID; // 0x1b0
	int32_t m_nPreviewingWeaponID; // 0x1b4
	char m_bCachedOwnedOrRented : 1; // 0x1b8
	int32_t m_nCharacterOwnershipCBHandle; // 0x1bc
};

struct UUIComponent_BattlePassChallenges : UUIComponent_Display {
	ObjectProperty m_mcCapstone; // 0x124
	ObjectProperty m_mcCapstoneTF; // 0x12c
	ObjectProperty m_mcCapstoneBG; // 0x134
	ObjectProperty m_pChallengeLarge; // 0x13c
	ObjectProperty m_pScrollUpAction; // 0x144
	ObjectProperty m_pScrollDownAction; // 0x14c
	ObjectProperty m_pNavUpAction; // 0x154
	ObjectProperty m_pNavDownAction; // 0x15c
};

struct UMaterialExpressionLightmassReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0xb0
	FExpressionInput Lightmass; // 0xe4
};

struct UTgSeqAct_AIFreeze : USequenceAction {
	int32_t TaskForceNumber; // 0x108
};

struct USeqEvent_AISeeEnemy : USequenceEvent {
	float MaxSightDistance; // 0x128
};

struct UParticleModuleMeshRotation_Seeded : UParticleModuleMeshRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x90
};

struct UHeadTrackingComponent : UActorComponent {
	TArray<FName> TrackControllerName; // 0x88
	float LookAtActorRadius; // 0x98
	char bDisableBeyondLimit : 1; // 0x9c
	float MaxLookAtTime; // 0xa0
	float MinLookAtTime; // 0xa4
	float MaxInterestTime; // 0xa8
	TArray<AActor*> ActorClassesToLookAt; // 0xac
	TArray<FName> TargetBoneNames; // 0xbc
	TMap<None, None> CurrentActorMap; // 0xcc
	ComponentProperty SkeletalMeshComp; // 0x114
	TArray<ObjectProperty> TrackControls; // 0x11c
	FVector RootMeshLocation; // 0x12c
	FRotator RootMeshRotation; // 0x138
};

struct UUIData_BountySaleItem : UUIData {
	ObjectProperty m_pLootTableItem; // 0x64
	int32_t m_nSaleIndex; // 0x6c
	Fdword m_dwCurrentPrice; // 0x70
	FDateTimeWrapper m_dtSaleStarts; // 0x74
	FDateTimeWrapper m_dtSaleEnds; // 0x7c
	FString m_sSaleMessage; // 0x84
	Fdword m_dwQuantityRemaining; // 0x94
	Fdword m_dwQuantityTotal; // 0x98
};

struct AAkAmbientSound : AKeypoint {
	char bAutoPlay : 1; // 0x288
	char StopWhenOwnerIsDestroyed : 1; // 0x288
	char bIsPlaying : 1; // 0x288
	ObjectProperty PlayEvent; // 0x28c
};

struct UUIScene_UIHudDecks : UUIScene {
	float m_fSelectedTalentX; // 0x1cc
	float m_fSelectedTalentY; // 0x1d0
	ObjectProperty m_TeamPortraitsLeft; // 0x1d4
	ObjectProperty m_TeamPortraitsRight; // 0x1dc
	ObjectProperty m_PassiveSelection; // 0x1e4
	float m_fUpdateTalentsDelay; // 0x1ec
};

struct ULevelStreamingDistance : ULevelStreaming {
	FVector Origin; // 0x100
	float MaxDistance; // 0x10c
};

struct UTgAIBehaviorCondition_NumGodsNearProjectile : UTgAIBehaviorCondition_DistanceBase {
	char bMustBeEnemy : 1; // 0x9c
	int32_t ProjectileId; // 0xa0
	int32_t GodThreshold; // 0xa4
};

struct UApexStaticDestructibleComponent : UApexStaticComponent {
	float SleepEnergyThreshold; // 0x2b0
	float SleepDamping; // 0x2b4
	FPointer ApexDestructibleActor; // 0x2b8
	FPointer ApexDestructiblePreview; // 0x2c0
	char bIsThumbnailComponent : 1; // 0x2c8
};

struct UAnimNotify_Rumble : UAnimNotify {
	UWaveFormBase* PredefinedWaveForm; // 0x68
	ObjectProperty WaveForm; // 0x70
	char bCheckForBasedPlayer : 1; // 0x78
	float EffectRadius; // 0x7c
};

struct UUIDataStore_StringAliasMap : UUIDataStore_StringBase {
	TArray<FUIMenuInputMap> MenuInputMapArray; // 0x98
	FMap_Mirror MenuInputSets; // 0xa8
	int32_t PlayerIndex; // 0xf0
};

struct URadialBlurComponent : UActorComponent {
	ObjectProperty Material; // 0x88
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x90
	float BlurScale; // 0x94
	float BlurFalloffExponent; // 0x98
	float BlurOpacity; // 0x9c
	float MaxCullDistance; // 0xa0
	float DistanceFalloffExponent; // 0xa4
	char bRenderAsVelocity : 1; // 0xa8
	char bEnabled : 1; // 0xa8
	FMatrix LocalToWorld; // 0xb0
};

struct UPBRuleNodeMesh : UPBRuleNodeBase {
	TArray<FBuildingMeshInfo> BuildingMeshes; // 0x70
	FBuildingMeshInfo PartialOccludedBuildingMesh; // 0x80
	char bDoOcclusionTest : 1; // 0xcc
	char bBlockAll : 1; // 0xcc
};

struct UTgAnimNodePlayTgCameraAnim : UAnimNodeBlendBase {
	ObjectProperty m_CameraShake; // 0x114
	ObjectProperty m_TgPawn; // 0x11c
};

struct UTgDeviceMod_TargetingAimForwarder : UObject {
	ObjectProperty m_ForwardDev; // 0x60
};

struct UGameSpecialMove : UObject {
	ObjectProperty PawnOwner; // 0x60
	FName Handle; // 0x68
	float LastCanDoSpecialMoveTime; // 0x70
	char bLastCanDoSpecialMove : 1; // 0x74
	char bReachPreciseDestination : 1; // 0x74
	char bReachedPreciseDestination : 1; // 0x74
	char bReachPreciseRotation : 1; // 0x74
	char bReachedPreciseRotation : 1; // 0x74
	char bForcePrecisePosition : 1; // 0x74
	FVector PreciseDestination; // 0x78
	ObjectProperty PreciseDestBase; // 0x84
	FVector PreciseDestRelOffset; // 0x8c
	float PreciseRotationInterpolationTime; // 0x98
	FRotator PreciseRotation; // 0x9c
};

struct UActorFactoryAmbientSoundSimple : UActorFactory {
	ObjectProperty SoundNodeWave; // 0x9c
};

struct UTgGfxFriendManagement : UGFxObject {
	ObjectProperty m_Movie; // 0x104
	FString m_LastErrorString; // 0x10c
	FString m_SelectedPlayerName; // 0x11c
	FString m_InvitedPlayerName; // 0x12c
	EFriendTabs m_tabId; // 0x13c
	DelegateProperty __USC_GetFriendsData_Delegate__Delegate; // 0x140
	DelegateProperty __USC_RemoveFriend_Delegate__Delegate; // 0x150
	DelegateProperty __USC_MessageFriend_Delegate__Delegate; // 0x160
	DelegateProperty __USC_SearchByString_Delegate__Delegate; // 0x170
	DelegateProperty __USC_GetListData_Delegate__Delegate; // 0x180
	DelegateProperty __USC_InviteFriend_Delegate__Delegate; // 0x190
	DelegateProperty __USC_CancelInvite_Delegate__Delegate; // 0x1a0
	DelegateProperty __USC_AcceptClanInvite_Delegate__Delegate; // 0x1b0
	DelegateProperty __USC_CancelClanInvite_Delegate__Delegate; // 0x1c0
	DelegateProperty __USC_AcceptFriendRequest_Delegate__Delegate; // 0x1d0
	DelegateProperty __USC_AcceptAllFriendRequests_Delegate__Delegate; // 0x1e0
	DelegateProperty __USC_CancelFriendRequest_Delegate__Delegate; // 0x1f0
	DelegateProperty __USC_CancelAllFriendRequests_Delegate__Delegate; // 0x200
	DelegateProperty __USC_ViewPlayerProfile_Delegate__Delegate; // 0x210
	DelegateProperty __USC_ViewPlayerClan_Delegate__Delegate; // 0x220
	DelegateProperty __USC_SpectatePlayer_Delegate__Delegate; // 0x230
	DelegateProperty __USC_WatchFriend_Delegate__Delegate; // 0x240
	DelegateProperty __USC_PartyInvite_Delegate__Delegate; // 0x250
	DelegateProperty __USC_PartyKick_Delegate__Delegate; // 0x260
	DelegateProperty __USC_RemoveBlocked_Delegate__Delegate; // 0x270
	DelegateProperty __USC_AddPlayerNote_Delegate__Delegate; // 0x280
	DelegateProperty __USC_InviteFriendByString_Delegate__Delegate; // 0x290
	DelegateProperty __USC_BlockByString_Delegate__Delegate; // 0x2a0
	DelegateProperty __USC_InviteToClan_Delegate__Delegate; // 0x2b0
	DelegateProperty __USC_UpdateStatusMessage_Delegate__Delegate; // 0x2c0
	DelegateProperty __USC_ToggleDND_Delegate__Delegate; // 0x2d0
	DelegateProperty __USC_Resize_Delegate__Delegate; // 0x2e0
};

struct UTgAnimNodeBlendByCombatWithTransition : UTgAnimNodeToggleWithTransition {
	ObjectProperty m_TgP; // 0x170
	char m_bInCombatAck : 1; // 0x178
	float m_fTransitionIntoCombatTime; // 0x17c
	float m_fTransitionOutOfCombatTime; // 0x180
};

struct UUIHudSkills3P : UTgGfxScene {
	int32_t m_nWeapons[0x3]; // 0x1ec
	char m_bShouldShow : 1; // 0x1f8
	ObjectProperty m_mcWeapons[0x3]; // 0x1fc
};

struct ATgAIAnnotation : ATgNavigationPoint {
	FPointer VfTable_IInterface_AIAnnotation; // 0x37c
	EAIAnnotationType AnnotationType; // 0x384
	ObjectProperty m_pClaimedBy; // 0x388
};

struct USkelControlBase : UAnimObject {
	FName ControlName; // 0x68
	float ControlStrength; // 0x70
	float BlendInTime; // 0x74
	float BlendOutTime; // 0x78
	AlphaBlendType BlendType; // 0x7c
	char bPostPhysicsController : 1; // 0x80
	char bSetStrengthFromAnimNode : 1; // 0x80
	char bInvertStrengthFromAnimNode : 1; // 0x80
	char bInitializedCachedNodeList : 1; // 0x80
	char bControlledByAnimMetada : 1; // 0x80
	char bInvertMetadataWeight : 1; // 0x80
	char bPropagateSetActive : 1; // 0x80
	char bIgnoreWhenNotRendered : 1; // 0x80
	char bShouldTickInScript : 0; // 0x80
	char bShouldTickOwner : 0; // 0x80
	char bEnableEaseInOut : 0; // 0x80
	float StrengthTarget; // 0x84
	float BlendTimeToGo; // 0x88
	TArray<FName> StrengthAnimNodeNameList; // 0x8c
	TArray<ObjectProperty> CachedNodeList; // 0x9c
	float AnimMetadataWeight; // 0xac
	int32_t AnimMetaDataUpdateTag; // 0xb0
	float BoneScale; // 0xb4
	int32_t ControlTickTag; // 0xb8
	int32_t IgnoreAtOrAboveLOD; // 0xbc
	ObjectProperty NextControl; // 0xc0
	int32_t ControlPosX; // 0xc8
	int32_t ControlPosY; // 0xcc
};

struct UFaceFXAnimSet : UObject {
	FPointer InternalFaceFXAnimSet; // 0x60
	TArray<char> RawFaceFXAnimSetBytes; // 0x68
	TArray<char> RawFaceFXMiniSessionBytes; // 0x78
	int32_t NumLoadErrors; // 0x88
};

struct UPlatformInterfaceWebResponse : UObject {
	FString OriginalURL; // 0x60
	int32_t ResponseCode; // 0x70
	int32_t Tag; // 0x74
	FMap_Mirror Headers; // 0x78
	FString StringResponse; // 0xc0
	TArray<char> BinaryResponse; // 0xd0
};

struct UTgSkelCon_RotateToAim : UTgSkelCon_MirrorToOtherMesh {
	float m_fRotationSpeed; // 0x108
	char m_bUseConstantSpeed : 1; // 0x10c
	char m_bAim2DOnly : 1; // 0x10c
	char m_bVelocity2DOnly : 1; // 0x10c
	float m_fMinVelocity; // 0x110
	FRotator m_rTargetRotation; // 0x114
};

struct UTgDeviceForm_Vine : UTgDeviceForm {
	char m_bBeamActive : 1; // 0x28c
	char m_bVineInterrupted : 1; // 0x28c
	ObjectProperty m_BeamTarget; // 0x290
	FVector m_vBeamTargetLocation; // 0x298
	TArray<ObjectProperty> m_VineBlendList1P; // 0x2a4
	TArray<ObjectProperty> m_VineBlendList3P; // 0x2b4
};

struct ATgDevice_AtlasF : ATgDevice {
	FPointer VfTable_ITgCallbackInterface; // 0xa04
	ObjectProperty m_CachedAtlas; // 0xa0c
	ObjectProperty m_CallbackContainer; // 0xa14
};

struct UUIData_Vendor : UUIData {
	Fdword m_dwVendorId; // 0x64
	TMap<None, None> m_LootTableItems; // 0x68
	TArray<ObjectProperty> m_AsArray; // 0xb0
};

struct UUIComponent_HnHEventQuests : UUIComponent_Display {
	ObjectProperty m_pQuests; // 0x124
	ObjectProperty m_pPlayPanel; // 0x12c
};

struct UUIComponent_RadialEquipMenu : UUIComponent_Display {
	ObjectProperty m_mcRadialMenuSpray; // 0x124
	ObjectProperty m_mcCursorSpray; // 0x12c
	ObjectProperty m_mcOuterRingSpray; // 0x134
	ObjectProperty m_mcRadialButtonLabelSpray; // 0x13c
	ObjectProperty m_RadialSlotsSpray; // 0x144
	ObjectProperty m_mcRadialButtonSpray; // 0x14c
	ObjectProperty m_grSprayGroup; // 0x154
	ObjectProperty m_mcRadialMenuEmote; // 0x15c
	ObjectProperty m_mcCursorEmote; // 0x164
	ObjectProperty m_mcOuterRingEmote; // 0x16c
	ObjectProperty m_mcRadialButtonLabelEmote; // 0x174
	ObjectProperty m_RadialSlotsEmote; // 0x17c
	ObjectProperty m_mcRadialButtonEmote; // 0x184
	ObjectProperty m_grEmoteGroup; // 0x18c
};

struct ATgDevice_WYRMJets : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedBoosterDevice; // 0xa0c
};

struct ATgDevice_ToggleWithLockout : ATgDevice_Stim {
	ObjectProperty m_CachedTgP; // 0xa04
	float m_fCurrentTransitionPct; // 0xa0c
};

struct ATgPawn_Yagorath : ATgPawn_Character {
	TArray<FName> CritPointBoneNames; // 0x3160
	float m_fCritDamageMult; // 0x3170
	float m_fDamageReductionMult; // 0x3174
	ObjectProperty m_CachedYagoSpray; // 0x3178
	float m_fTurnModifierDuringSpray; // 0x3180
	float m_fLookUpModifierDuringSpray; // 0x3184
	ObjectProperty m_CachedYagoTravel; // 0x3188
	char r_bTravelFormActive : 1; // 0x3190
	char m_bIsMovingForward : 1; // 0x3190
	char m_bForcedAcceleration : 1; // 0x3190
	char m_bForcedDeceleration : 1; // 0x3190
	char m_bShowUltUI : 1; // 0x3190
	float r_TravelFormCurrSpeedMult; // 0x3194
	float m_fTravelFormTurnRateMult; // 0x3198
	float m_TravelFormMaxSpeedMult; // 0x319c
	float m_fYagorathPlantedHeightOffset; // 0x31a0
	ComponentProperty m_PlantedFormCollisionComponent; // 0x31a4
	ObjectProperty m_CachedYagoQ; // 0x31ac
	float m_fAccumulatedMovementDeviation; // 0x31b4
	float m_fMovementDeviationMeanLifetime; // 0x31b8
	float m_fAccelerationStartTime; // 0x31bc
	float m_fDecelerationStartTime; // 0x31c0
	float m_fPassiveDecelerationStartTime; // 0x31c4
	float r_fMaxMovementDegPerSec; // 0x31c8
	float m_fLastMovementBearing; // 0x31cc
	int32_t m_nAltInhandSlot; // 0x31d0
	int32_t m_nAltAltfireSlot; // 0x31d4
	int32_t m_nAltQAbilitySlot; // 0x31d8
	FString m_sSkillIconOverride; // 0x31dc
	ObjectProperty m_CachedYagoUlt; // 0x31ec
	ObjectProperty m_UltTarget; // 0x31f4
};

struct UDistributionFloatParameterBase : UDistributionFloatConstant {
	FName ParameterName; // 0x80
	float MinInput; // 0x88
	float MaxInput; // 0x8c
	float MinOutput; // 0x90
	float MaxOutput; // 0x94
	DistributionParamMode ParamMode; // 0x98
};

struct UGenericParamListStatEntry : UObject {
	FPointer StatEvent; // 0x60
	ObjectProperty Writer; // 0x68
};

struct USeqCond_Increment : USequenceCondition {
	int32_t IncrementAmount; // 0xec
	int32_t ValueA; // 0xf0
	int32_t ValueB; // 0xf4
};

struct UUIDataProvider_Settings : UUIPropertyDataProvider {
	ObjectProperty Settings; // 0x90
	char bIsAListRow : 1; // 0x98
};

struct UTgAIBehaviorCondition_DeviceIsFiring : UTgAIBehaviorCondition {
	TG_EQUIP_POINT DeviceSlot; // 0x98
};

struct UUIData_String_Localized : UUIData {
	FString m_sSection; // 0x64
	FString m_sKey; // 0x74
	char m_bCaps : 1; // 0x84
};

struct UTgAnimBlendByInitialSpeed : UTgAnimNodeBlendList {
	float m_fInitialSpeed; // 0x168
	int32_t m_nStartingIndex; // 0x16c
	char m_bLoopChain : 1; // 0x170
	char m_bAdvanceOnReplay : 1; // 0x170
	char m_bAdvanceOnAnimEnd : 1; // 0x170
	char m_ReplayedThisFrame : 1; // 0x170
	char bUseAcceleration : 1; // 0x170
	TArray<float> Constraints; // 0x174
};

struct USeqEvent_RemoteEvent : USequenceEvent {
	FName EventName; // 0x128
	char bStatusIsOk : 1; // 0x130
};

struct UTextureRenderTarget : UTexture {
	char bUpdateImmediate : 1; // 0x100
	char bNeedsTwoCopies : 1; // 0x100
	char bRenderOnce : 1; // 0x100
	float TargetGamma; // 0x104
};

struct UCanvas : UObject {
	ObjectProperty Font; // 0x60
	float OrgX; // 0x68
	float OrgY; // 0x6c
	float ClipX; // 0x70
	float ClipY; // 0x74
	float CurX; // 0x78
	float CurY; // 0x7c
	float CurZ; // 0x80
	float CurYL; // 0x84
	FColor DrawColor; // 0x88
	char bCenter : 1; // 0x8c
	char bNoSmooth : 1; // 0x8c
	int32_t SizeX; // 0x90
	int32_t SizeY; // 0x94
	FPointer Canvas; // 0x98
	FPointer SceneView; // 0xa0
	FPlane ColorModulate; // 0xb0
	ObjectProperty DefaultTexture; // 0xc0
};

struct UTgAIBehaviorCondition_HealthPercent : UTgAIBehaviorCondition {
	float HealthPct; // 0x98
};

struct UMaterialExpressionFloor : UMaterialExpression {
	FExpressionInput Input; // 0xb0
};

struct ATgFogOfWarBarrier : AStaticMeshActor {
	char m_bOneDirectional : 1; // 0x2a4
	float m_fBlockMinimumDistance; // 0x2a8
};

struct ATgWeaponMeshActor_Rider : ATgWeaponMeshActor {
	ComponentProperty m_LeftHead; // 0x450
	ComponentProperty m_RightHead; // 0x458
	FVector m_vLeftHeadTranslation; // 0x460
	FVector m_vRightHeadTranslation; // 0x46c
	FVector m_vLookDownTranslation; // 0x478
	FVector m_vLookUpTranslation; // 0x484
	FRotator m_rLeftHeadRotation; // 0x490
	FRotator m_rRightHeadRotation; // 0x49c
	FRotator m_rLookDownRotation; // 0x4a8
	FRotator m_rLookUpRotation; // 0x4b4
	float m_fHeadFOV; // 0x4c0
	ComponentProperty m_BodyMesh; // 0x4c4
	ObjectProperty m_BodyMeshMat; // 0x4cc
	char m_bBodyMeshMatApplied : 1; // 0x4d4
	FVector m_vBodyScale; // 0x4d8
	FVector m_vBodyTranslation; // 0x4e4
	FVector m_vLookDownBodyTranslation; // 0x4f0
	float m_fLastRotation; // 0x4fc
	float m_fMaxRotationLag; // 0x500
	float m_fRotationLag; // 0x504
	float m_fRotationLagRecoveryRate; // 0x508
};

struct UUICouponAcquisition : UTgGfxScene {
	FPointer VfTable_IAcquisitionHandler; // 0x1ec
	int32_t m_nCouponItem; // 0x1f4
	int32_t m_nCouponType; // 0x1f8
	int32_t m_nCouponBundle; // 0x1fc
	int32_t m_nCouponVendor; // 0x200
	int32_t m_nMultiItemIndex; // 0x204
	ObjectProperty m_mcAnimTitle; // 0x208
	ObjectProperty m_mcTitle; // 0x210
	ObjectProperty m_mcCouponDescrition; // 0x218
	ObjectProperty m_mcCostPrev; // 0x220
	ObjectProperty m_mcCostPrevIcon; // 0x228
	ObjectProperty m_mcCostPrevStrikethrough; // 0x230
	ObjectProperty m_mcCostCurrent; // 0x238
	ObjectProperty m_mcCostCurrentIcon; // 0x240
	ObjectProperty m_mcCouponExpires; // 0x248
	ObjectProperty m_mcButton0; // 0x250
	ObjectProperty m_mcButton1; // 0x258
	ObjectProperty m_mcPrompt0; // 0x260
	ObjectProperty m_mcPrompt1; // 0x268
	ObjectProperty m_mcFrame; // 0x270
	ObjectProperty m_mcFrameLine; // 0x278
	ObjectProperty m_mcRarityFrame; // 0x280
	ObjectProperty m_mcItemImageStack; // 0x288
	ObjectProperty m_mcCardImageStack; // 0x290
	ObjectProperty m_mcChestImageStack; // 0x298
	ObjectProperty m_mcTexture; // 0x2a0
	TArray<FAcquiredItem> m_Items; // 0x2a8
	ObjectProperty m_scUnlocked; // 0x2b8
};

struct USequenceObject : UObject {
	int32_t ObjInstanceVersion; // 0x60
	ObjectProperty ParentSequence; // 0x64
	FString ObjName; // 0x6c
	FString ObjComment; // 0x7c
	char bDeletable : 1; // 0x8c
	char bDrawFirst : 1; // 0x8c
	char bDrawLast : 1; // 0x8c
	char bOutputObjCommentToScreen : 1; // 0x8c
	char bSuppressAutoComment : 1; // 0x8c
	int32_t DrawWidth; // 0x90
	int32_t DrawHeight; // 0x94
};

struct UAnimationCompressionAlgorithm : UObject {
	FString Description; // 0x60
	char bNeedsSkeleton : 1; // 0x70
	AnimationCompressionFormat TranslationCompressionFormat; // 0x74
	AnimationCompressionFormat RotationCompressionFormat; // 0x75
};

struct UTgAIUtilityFilter_LoSToTarget : UTgAIUtilityFilter {
	char bInverse : 1; // 0xc0
};

struct UTgPawnMod_RewindTween : UTgPawnMod {
	int32_t m_nPlaybackEndCheckCallbackHandle; // 0x70
	int32_t m_nPendingRewindCallbackHandle; // 0x74
	int32_t m_nRecordingCallbackHandle; // 0x78
	int32_t m_nPhysTweenCallbackHandle; // 0x7c
	int32_t m_nRewindHealthCallbackHandle; // 0x80
	TArray<FSavedRewindVals> m_RewindVals; // 0x84
	float m_fPlaybackRate; // 0x94
	float m_fTimeBetweenSaves; // 0x98
	float m_fTotalSaveTime; // 0x9c
	char m_bFinalLocationFailsafe : 1; // 0xa0
	char c_bNoRewindLagCompensation : 1; // 0xa0
	char m_bRewindIsBuff : 1; // 0xa0
	float m_fFailsafeDuration; // 0xa4
	FVector m_vStartLocation; // 0xa8
	float m_fDoNotRecordTimestamp; // 0xb4
	float m_fDoNotRecordSafetyPeriod; // 0xb8
	float m_fPlaybackStartTime; // 0xbc
	float m_fPlaybackEndTime; // 0xc0
	int32_t m_nPostureID; // 0xc4
	int32_t m_nCurrentIndex; // 0xc8
	int32_t m_nLastValidIndex; // 0xcc
	int32_t m_nCurrentPlaybackLocIndex; // 0xd0
	FInterpCurveVector m_RewindCurveLoc; // 0xd4
	FInterpCurveFloat m_RewindCurveYaw; // 0xe8
	FInterpCurveFloat m_RewindCurvePitch; // 0xfc
	FInterpCurveFloat m_RewindCurveHealth; // 0x110
	TArray<char> m_bRewindCollideWorld; // 0x124
	int32_t m_nRewindEveryNYawPitchPoints; // 0x134
	float m_fMinPositionDistance; // 0x138
	float m_fMaxPositionTimeDelta; // 0x13c
};

struct AStaticLightCollectionActor : ALight {
	TArray<ComponentProperty> LightComponents; // 0x28c
	int32_t MaxLightComponents; // 0x29c
};

struct UTgInventoryObject_Listen_HitWithPetDevice : UTgInventoryObject_Listen_AbilityProcBase {
	char m_bSkipActiveCheck : 1; // 0xcc
	char m_bSkipStartCooldown : 1; // 0xcc
};

struct ATgDevice_DeployMod : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_DeployMod; // 0xa04
};

struct ATgGame_Paladins_SiegeRedux : ATgGame_Paladins {
	float m_fInitialSetupDuration; // 0x868
	float m_fSetupDuration; // 0x86c
	float m_fPushDuration; // 0x870
};

struct ACamera : AActor {
	ObjectProperty PCOwner; // 0x280
	FName CameraStyle; // 0x288
	float DefaultFOV; // 0x290
	char bLockedFOV : 1; // 0x294
	char bConstrainAspectRatio : 1; // 0x294
	char bEnableFading : 1; // 0x294
	char bFadeAudio : 1; // 0x294
	char bForceDisableTemporalAA : 1; // 0x294
	char bEnableColorScaling : 1; // 0x294
	char bEnableColorScaleInterp : 1; // 0x294
	char bUseClientSideCameraUpdates : 1; // 0x294
	char bDebugClientSideCamera : 0; // 0x294
	char bShouldSendClientSideCameraUpdate : 0; // 0x294
	float LockedFOV; // 0x298
	float ConstrainedAspectRatio; // 0x29c
	float DefaultAspectRatio; // 0x2a0
	float OffAxisYawAngle; // 0x2a4
	float OffAxisPitchAngle; // 0x2a8
	FColor FadeColor; // 0x2ac
	float FadeAmount; // 0x2b0
	float CamOverridePostProcessAlpha; // 0x2b4
	FPostProcessSettings CamPostProcessSettings; // 0x2b8
	FRenderingPerformanceOverrides RenderingOverrides; // 0x438
	FVector ColorScale; // 0x43c
	FVector DesiredColorScale; // 0x448
	FVector OriginalColorScale; // 0x454
	float ColorScaleInterpDuration; // 0x460
	float ColorScaleInterpStartTime; // 0x464
	FTCameraCache CameraCache; // 0x468
	FTCameraCache LastFrameCameraCache; // 0x490
	FTViewTarget ViewTarget; // 0x4b8
	FTViewTarget PendingViewTarget; // 0x4f8
	float BlendTimeToGo; // 0x538
	FViewTargetTransitionParams BlendParams; // 0x53c
	TArray<ObjectProperty> ModifierList; // 0x54c
	float FreeCamDistance; // 0x55c
	FVector FreeCamOffset; // 0x560
	FVector2D FadeAlpha; // 0x56c
	float FadeTime; // 0x574
	float FadeTimeRemaining; // 0x578
	TArray<ObjectProperty> CameraLensEffects; // 0x57c
	ObjectProperty CameraShakeCamMod; // 0x58c
	UCameraModifier_CameraShake* CameraShakeCamModClass; // 0x594
	ObjectProperty AnimInstPool[0x8]; // 0x59c
	TArray<ObjectProperty> ActiveAnims; // 0x5dc
	TArray<ObjectProperty> FreeAnims; // 0x5ec
	ObjectProperty AnimCameraActor; // 0x5fc
};

struct UNavMeshGoalFilter_PolyEncompassesAI : UNavMeshGoal_Filter {
	FVector OverrideExtentToCheck; // 0x6c
};

struct USeqAct_ModifyProperty : USequenceAction {
	TArray<FPropertyInfo> Properties; // 0x108
};

struct UTgAIBehaviorNode : UTgAIBehaviorObject {
	ObjectProperty Parent; // 0x64
	float InvTickFrequency; // 0x6c
	FString TitleName; // 0x70
	FString FriendlyName; // 0x80
	char bShownInMenu : 1; // 0x90
};

struct UOnlineSubsystemCommonImpl : UOnlineSubsystem {
	FPointer VoiceEngine; // 0x264
	int32_t MaxLocalTalkers; // 0x26c
	int32_t MaxRemoteTalkers; // 0x270
	char bIsUsingSpeechRecognition : 1; // 0x274
	ObjectProperty GameInterfaceImpl; // 0x278
	ObjectProperty AuthInterfaceImpl; // 0x280
};

struct UTgGamePhase_SendMessageToClients : UTgGamePhase {
	int32_t m_nMsgId; // 0xb8
};

struct UTgInventoryObject_Listen_AuraMod : UTgInvListener {
	TArray<ObjectProperty> m_AffectedActors; // 0xc4
	char m_bAuraIsActive : 1; // 0xd4
	ObjectProperty m_CachedAuraDevice; // 0xd8
};

struct UTerrainComponent : UPrimitiveComponent {
	TArray<ObjectProperty> ShadowMaps; // 0x24c
	TArray<FGuid> IrrelevantLights; // 0x25c
	FPointer TerrainObject; // 0x26c
	int32_t SectionBaseX; // 0x274
	int32_t SectionBaseY; // 0x278
	int32_t SectionSizeX; // 0x27c
	int32_t SectionSizeY; // 0x280
	int32_t TrueSectionSizeX; // 0x284
	int32_t TrueSectionSizeY; // 0x288
	FLightMapRef LightMap; // 0x28c
	TArray<FTerrainPatchBounds> PatchBounds; // 0x294
	TArray<FTerrainMaterialMask> BatchMaterials; // 0x2a4
	int32_t FullBatch; // 0x2b4
	FTerrainBVTree BVTree; // 0x2b8
	TArray<FVector> CollisionVertices; // 0x2c8
	FPointer RBHeightfield; // 0x2d8
	char bDisplayCollisionLevel : 1; // 0x2e0
};

struct UTgSeqEvent_MissionTimeRemaining : USequenceEvent {
	float SecsRemaining; // 0x128
};

struct USpeedTree : UObject {
	char bLegacySpeedTree : 1; // 0x60
	FPointer SRH; // 0x64
	float LeafStaticShadowOpacity; // 0x6c
	ObjectProperty Branch1Material; // 0x70
	ObjectProperty Branch2Material; // 0x78
	ObjectProperty FrondMaterial; // 0x80
	ObjectProperty LeafCardMaterial; // 0x88
	ObjectProperty LeafMeshMaterial; // 0x90
	ObjectProperty BillboardMaterial; // 0x98
	ObjectProperty Branch1MaterialNoScreenDoor; // 0xa0
	ObjectProperty Branch2MaterialNoScreenDoor; // 0xa8
	ObjectProperty FrondMaterialNoScreenDoor; // 0xb0
	ObjectProperty LeafCardMaterialNoScreenDoor; // 0xb8
	ObjectProperty LeafMeshMaterialNoScreenDoor; // 0xc0
	ObjectProperty BillboardMaterialNoScreenDoor; // 0xc8
	float WindStrength; // 0xd0
	FVector WindDirection; // 0xd4
};

struct UTgDeviceForm_RaumInhand : UTgDeviceForm {
	FName m_SpinnerName; // 0x28c
	TArray<ObjectProperty> m_SpinnerSkelControls1p; // 0x294
	TArray<ObjectProperty> m_SpinnerSkelControls3p; // 0x2a4
	TArray<ObjectProperty> m_BlendByPct1P; // 0x2b4
	TArray<ObjectProperty> m_BlendByPct3P; // 0x2c4
	ObjectProperty m_CachedRaum; // 0x2d4
	char m_bIsSpinningUp : 1; // 0x2dc
	float m_fMaxHeatBuildup; // 0x2e0
	float m_fHeatBuildup; // 0x2e4
	float m_fHeatDecayFactor; // 0x2e8
	float m_fHeatVisibilityFloor; // 0x2ec
	float m_fPerShotHeatBuildup; // 0x2f0
	float m_fSyntheticShotSpinUpThreshold; // 0x2f4
	float m_fSyntheticShotSpinUpNormalization; // 0x2f8
	float m_fAccuracyModifier; // 0x2fc
	float m_fLastReceivedRefire; // 0x300
	float m_fTimeLastStopFire; // 0x304
	float m_fSustainedFireBeforeCustomPostFire; // 0x308
	float m_fCustomPostFireDuration; // 0x30c
	float m_fSustainedFireDuration; // 0x310
};

struct ATgCarriedFlag : AActor {
	int32_t r_nDefenderTaskForce; // 0x280
	ObjectProperty s_FlagBase; // 0x284
	char r_bIsHome : 1; // 0x28c
	ObjectProperty m_Holder; // 0x290
	ObjectProperty r_HolderPRI; // 0x298
	ObjectProperty m_OldHolder; // 0x2a0
	ObjectProperty m_FirstTouch; // 0x2a8
	TArray<ObjectProperty> m_Assists; // 0x2b0
	float m_fMaxDropTime; // 0x2c0
	float m_fDefaultRadius; // 0x2c4
	float m_fDefaultHeight; // 0x2c8
};

struct USeqAct_SetMatInstVectorParam : USequenceAction {
	ObjectProperty MatInst; // 0x108
	FName ParamName; // 0x110
	FLinearColor VectorValue; // 0x118
};

struct UTgEffectDamage_PresenceDoT : UTgEffectDamage {
	TArray<float> m_EffectTimeStamps; // 0xc0
	TArray<float> m_EffectDamageValues; // 0xd0
	FPointer m_DamageInstances; // 0xe0
};

struct UUIInteractable_Item : UUIComponent_Interactable {
	ObjectProperty m_mcPrice; // 0x140
	ObjectProperty m_mcGlow; // 0x148
	ObjectProperty m_mcRarityGlow; // 0x150
	ObjectProperty m_mcEquipped; // 0x158
	ObjectProperty m_pCTA; // 0x160
	ObjectProperty m_mcSprayUnlocked; // 0x168
	ObjectProperty m_mcUpgradeText; // 0x170
	ObjectProperty m_mcStarburstA; // 0x178
	ObjectProperty m_mcStarburstB; // 0x180
	ObjectProperty m_mcGlowA; // 0x188
	ObjectProperty m_mcGlowB; // 0x190
	ObjectProperty m_mcGlowC; // 0x198
	ObjectProperty m_mcGlowD; // 0x1a0
	ObjectProperty m_mcGlowE; // 0x1a8
	char m_bEquipped : 1; // 0x1b0
	char m_bShowChampion : 1; // 0x1b0
	int32_t m_nUpgradeTickHandle; // 0x1b4
	float m_fUpgradeAnimDuration; // 0x1b8
	float m_fUpgradeTimer; // 0x1bc
	ObjectProperty m_akCardUpgrade; // 0x1c0
	ObjectProperty m_akCardLevelUp; // 0x1c8
};

struct UUIHudCards : UTgGfxScene {
	int32_t m_nCredits; // 0x1ec
	int32_t m_nLoadout; // 0x1f0
	char m_bShouldShow : 1; // 0x1f4
	char m_bThirdPerson : 1; // 0x1f4
	char m_bSpectateEnemy : 1; // 0x1f4
	float m_fCachedRotationY; // 0x1f8
	ObjectProperty m_grScene; // 0x1fc
	ObjectProperty m_mcCredits; // 0x204
	ObjectProperty m_mcLoadout; // 0x20c
	ObjectProperty m_mcHighlight; // 0x214
	FUICardDisplayGroup m_CardDisplayGroup; // 0x21c
};

struct UTgSkelCon_Spring : USkelControlLookAt {
	FVector m_vWorldSpaceGoal; // 0x16c
	FVector m_vInitialWorldSpaceGoalOffset; // 0x178
	FVector m_vVelocity; // 0x184
	float m_fSpringStiffness; // 0x190
	float m_fSpringDamping; // 0x194
};

struct UTgAIUtilityHandle : UObject {
	FUtilitySet UtilitySets[0x2]; // 0x60
	FUtilityPair FilteredAnnotationPoints[0x2]; // 0xf0
	EBotBehaviorState eBehaviorState; // 0x180
	ERangeType AssaultRangeType; // 0x181
};

struct ATgRepInfo_CapturePoint : AReplicationInfo {
	ObjectProperty r_OwningCapturePoint; // 0x280
	int32_t r_nUniqueCapturePointId; // 0x288
	int32_t r_nControlledByTaskForce; // 0x28c
	float r_fOwnershipPct; // 0x290
	char r_nTransitionDirection; // 0x294
	char r_bIsLocked : 1; // 0x298
	ObjectProperty c_OwnershipPercentKismetNode; // 0x29c
};

struct UUIComponent_PassiveSelection : UUIComponent_Display {
	ObjectProperty m_Passives; // 0x124
};

struct USoundNodeConcatenator : USoundNode {
	TArray<float> InputVolume; // 0x74
};

struct UTgInventoryObject_Listen_AffectedByDeviceLifesteal : UTgInventoryObject_Listen_AffectedByDevice {
	ObjectProperty m_CachedFiremode; // 0xc4
};

struct ALevelStreamingVolume : AVolume {
	TArray<ObjectProperty> StreamingLevels; // 0x2bc
	char bEditorPreVisOnly : 1; // 0x2cc
	char bDisabled : 1; // 0x2cc
	char bTestDistanceToVolume : 1; // 0x2cc
	EStreamingVolumeUsage StreamingUsage; // 0x2d0
	EStreamingVolumeUsage Usage; // 0x2d1
	float TestVolumeDistance; // 0x2d4
};

struct AGameReplicationInfo : AReplicationInfo {
	AGameInfo* GameClass; // 0x280
	char bStopCountDown : 1; // 0x288
	char bMatchHasBegun : 1; // 0x288
	char bMatchIsOver : 1; // 0x288
	int32_t RemainingTime; // 0x28c
	int32_t ElapsedTime; // 0x290
	int32_t RemainingMinute; // 0x294
	int32_t GoalScore; // 0x298
	int32_t TimeLimit; // 0x29c
	TArray<ObjectProperty> Teams; // 0x2a0
	FString ServerName; // 0x2b0
	ObjectProperty Winner; // 0x2c0
	TArray<ObjectProperty> PRIArray; // 0x2c8
	TArray<ObjectProperty> InactivePRIArray; // 0x2d8
};

struct ATeleporter : ANavigationPoint {
	FString URL; // 0x378
	FName ProductRequired; // 0x388
	char bChangesVelocity : 1; // 0x390
	char bChangesYaw : 1; // 0x390
	char bReversesX : 1; // 0x390
	char bReversesY : 1; // 0x390
	char bReversesZ : 1; // 0x390
	char bEnabled : 1; // 0x390
	char bCanTeleportVehicles : 1; // 0x390
	FVector TargetVelocity; // 0x394
	float LastFired; // 0x3a0
};

struct UInterpTrackParticleReplay : UInterpTrack {
	TArray<FParticleReplayTrackKey> TrackKeys; // 0xa0
	char bIsCapturingReplay : 1; // 0xb0
};

struct UParticleModuleVelocityInheritParent : UParticleModuleVelocityBase {
	FRawDistributionVector Scale; // 0x6c
};

struct UGameplayEventsReader : UGameplayEvents {
	TArray<ObjectProperty> RegisteredHandlers; // 0x1c0
};

struct UAnimNodeBlendPerBone : UAnimNodeBlend {
	char bForceLocalSpaceBlend : 1; // 0x124
	TArray<FName> BranchStartBoneName; // 0x128
	TArray<float> Child2PerBoneWeight; // 0x138
	TArray<char> LocalToCompReqBones; // 0x148
};

struct UAnimationCompressionAlgorithm_RemoveLinearKeys : UAnimationCompressionAlgorithm {
	float MaxPosDiff; // 0x78
	float MaxAngleDiff; // 0x7c
	float MaxEffectorDiff; // 0x80
	float MinEffectorDiff; // 0x84
	float EffectorDiffSocket; // 0x88
	float ParentKeyScale; // 0x8c
	char bRetarget : 1; // 0x90
	char bActuallyFilterLinearKeys : 1; // 0x90
};

struct UMaterialExpressionFunctionInput : UMaterialExpression {
	FExpressionInput Preview; // 0xb0
	FString InputName; // 0xe4
	FString Description; // 0xf4
	FGuid Id; // 0x104
	EFunctionInputType InputType; // 0x114
	FVector4 PreviewValue; // 0x120
	char bUsePreviewValueAsDefault : 1; // 0x130
	char bCompilingFunctionPreview : 1; // 0x130
	int32_t SortPriority; // 0x134
};

struct UMaterialExpressionOneMinus : UMaterialExpression {
	FExpressionInput Input; // 0xb0
};

struct UDrawFrustumComponent : UPrimitiveComponent {
	FColor FrustumColor; // 0x24c
	float FrustumAngle; // 0x250
	float FrustumAspectRatio; // 0x254
	float FrustumStartDist; // 0x258
	float FrustumEndDist; // 0x25c
	ObjectProperty Texture; // 0x260
};

struct UUISoundTheme : UObject {
	TArray<FSoundEventMapping> SoundEventBindings; // 0x60
};

struct UMeshBeaconHost : UMeshBeacon {
	TArray<FClientMeshBeaconConnection> ClientConnections; // 0xa4
	TArray<FUniqueNetId> PendingPlayerConnections; // 0xb4
	FUniqueNetId OwningPlayerId; // 0xc4
	char bAllowBandwidthTesting : 1; // 0xcc
	int32_t ConnectionBacklog; // 0xd0
	DelegateProperty __OnReceivedClientConnectionRequest__Delegate; // 0xd4
	DelegateProperty __OnStartedBandwidthTest__Delegate; // 0xe4
	DelegateProperty __OnFinishedBandwidthTest__Delegate; // 0xf4
	DelegateProperty __OnAllPendingPlayersConnected__Delegate; // 0x104
	DelegateProperty __OnReceivedClientCreateNewSessionResult__Delegate; // 0x114
};

struct UTgDeviceForm_ShellShield : UTgDeviceForm {
	char m_bShouldBeActive : 1; // 0x28c
	float m_fShieldActivationTime; // 0x290
	float m_fShieldActivationPercent; // 0x294
};

struct UPhysicsLODVerticalEmitter : UObject {
	int32_t ParticlePercentage; // 0x60
};

struct UUIComponent_HealFeed : UUIComponent_Display {
	TArray<ObjectProperty> m_InactiveEntries; // 0x124
	FHealSource m_HealSources[0x5]; // 0x134
	ObjectProperty m_pViewTarget; // 0x238
	char m_bIsVisible : 1; // 0x240
	float m_fSourceHideDelay; // 0x244
	float m_fUpdateDisplayTimer; // 0x248
	float m_fUpdateDisplayRate; // 0x24c
	TMap<None, None> m_HealAmountMap; // 0x250
};

struct UTgInventoryObject_Listen_Unyielding : UTgInvListener {
	ObjectProperty m_CachedRestoreStaminaDevice; // 0xc4
};

struct UTgAchievement_KillWithComboAny : UTgAchievement {
	float fTime; // 0x94
	TArray<float> m_Entries; // 0x98
};

struct UAnimNodeBlend : UAnimNodeBlendBase {
	float Child2Weight; // 0x114
	float Child2WeightTarget; // 0x118
	float BlendTimeToGo; // 0x11c
	char bSkipBlendWhenNotRendered : 1; // 0x120
};

struct UPBRuleNodeExtractTopBottom : UPBRuleNodeBase {
	float ExtractTopZ; // 0x70
	float ExtractNotTopZ; // 0x74
	float ExtractBottomZ; // 0x78
	float ExtractNotBottomZ; // 0x7c
};

struct UTgInventoryObject_Listen_FireOnLowHealth : UTgInvListener {
	char m_bPendingActivation : 1; // 0xc4
};

struct UPComUIManagerBase : UObject {
	char m_bDebugDraw : 1; // 0x60
	char m_bLocalLoad : 1; // 0x60
	TArray<FManagerImage> m_cachedImages; // 0x64
	FString m_strJson; // 0x74
};

struct UUIScene_UIHalloweenEvent : UUIScene {
	ObjectProperty m_pTabs; // 0x1cc
	ObjectProperty m_pBack; // 0x1d4
	ObjectProperty m_pHome; // 0x1dc
	ObjectProperty m_pStore; // 0x1e4
	ObjectProperty m_pVault; // 0x1ec
	ObjectProperty m_pOverview; // 0x1f4
	ObjectProperty m_pRotator; // 0x1fc
};

struct UUIComponent_ChestTab : UUIComponent_Display {
	ObjectProperty m_mcChestIcon; // 0x124
	ObjectProperty m_pCTA; // 0x12c
};

struct UNavMeshGoalFilter_OutOfViewFrom : UNavMeshGoal_Filter {
	FPointer GoalPoly; // 0x6c
	FVector OutOfViewLocation; // 0x74
};

struct UAlienFXManager : UObject {
	char m_bGood : 1; // 0x60
	char m_bLoaded : 1; // 0x60
	int32_t m_nChestRevealRarity; // 0x64
	float m_fTransitionTimestamp; // 0x68
	float m_fTimespan; // 0x6c
	float m_fFrequency; // 0x70
	Fdword m_dwPrimaryColor; // 0x74
	float m_fDecayLambda; // 0x78
	float c_fUltHalflife; // 0x7c
	FXOverlay ePrevOverlay; // 0x80
	FXOverlay eCurrOverlay; // 0x81
};

struct AGameCrowdDestination : AGameCrowdInteractionPoint {
	FPointer VfTable_IEditorLinkSelectionInterface; // 0x28c
	char bKillWhenReached : 1; // 0x294
	char bAllowAsPreviousDestination : 1; // 0x294
	char bAvoidWhenPanicked : 1; // 0x294
	char bSkipBehaviorIfPanicked : 1; // 0x294
	char bFleeDestination : 1; // 0x294
	char bMustReachExactly : 1; // 0x294
	char bHasRestrictions : 1; // 0x294
	char bAllowsSpawning : 1; // 0x294
	char bAllowCloudSpawning : 0; // 0x294
	char bAllowVisibleSpawning : 0; // 0x294
	char bLineSpawner : 0; // 0x294
	char bSpawnAtEdge : 0; // 0x294
	char bSoftPerimeter : 0; // 0x294
	char bIsVisible : 0; // 0x294
	char bWillBeVisible : 0; // 0x294
	char bCanSpawnHereNow : 0; // 0x294
	char bIsBeyondSpawnDistance : 0; // 0x294
	char bAdjacentToVisibleNode : 0; // 0x294
	char bHasNavigationMesh : 0; // 0x294
	TArray<ObjectProperty> NextDestinations; // 0x298
	ObjectProperty QueueHead; // 0x2a8
	int32_t Capacity; // 0x2b0
	float Frequency; // 0x2b4
	int32_t CustomerCount; // 0x2b8
	TArray<AGameCrowdAgent*> SupportedAgentClasses; // 0x2bc
	TArray<ObjectProperty> SupportedArchetypes; // 0x2cc
	TArray<AGameCrowdAgent*> RestrictedAgentClasses; // 0x2dc
	TArray<ObjectProperty> RestrictedArchetypes; // 0x2ec
	float ExactReachTolerance; // 0x2fc
	FName InteractionTag; // 0x300
	float InteractionDelay; // 0x308
	TArray<FBehaviorEntry> ReachedBehaviors; // 0x30c
	ObjectProperty AgentEnRoute; // 0x31c
	float Priority; // 0x324
	float LastSpawnTime; // 0x328
	ObjectProperty MyPopMgr; // 0x32c
};

struct UTgDeviceForm_LongbowInhand : UTgDeviceForm {
	char m_bImpalerArrowFXIsActive : 1; // 0x28c
	char m_bBowDrawing : 1; // 0x28c
	float m_fBowDrawPercentage; // 0x290
	float m_fBowDrawStartPercentage; // 0x294
	float m_fBowDrawTime; // 0x298
	float m_fBowDrawTotalDuration; // 0x29c
	ObjectProperty m_LongbowOwner; // 0x2a0
	TArray<ObjectProperty> m_BlendByPct1P; // 0x2a8
	TArray<ObjectProperty> m_BlendByPct3P; // 0x2b8
	ObjectProperty m_ArrowSkelControl1P; // 0x2c8
	ObjectProperty m_ImpalerSkelControl1P; // 0x2d0
};

struct UApexGenericAsset : UApexAsset {
	FPointer MApexAsset; // 0x80
};

struct ATgPawn_Owl : ATgPawn_Character {
	char m_bUseSecondWeapon : 1; // 0x3160
	char m_bSwappingWeapons : 1; // 0x3160
	char c_bUseSecondDeathAnim : 1; // 0x3160
	int32_t m_nAltInhandSlot; // 0x3164
	int32_t m_nAltAltfireSlot; // 0x3168
	float m_fOwlStealthJuice; // 0x316c
	float m_fMaxOwlStealthJuice; // 0x3170
	float r_fRemoteOwlStealthJuice; // 0x3174
	float c_fOldRemoteOwlStealthJuice; // 0x3178
	ObjectProperty m_CachedOwlStealth; // 0x317c
};

struct UPrimitiveComponent : UActorComponent {
	int32_t Tag; // 0x88
	int32_t ThreadTag[0x5]; // 0x8c
	FBoxSphereBounds Bounds; // 0xa0
	FPointer SceneInfo; // 0xbc
	int32_t DetachFence; // 0xc4
	float LocalToWorldDeterminant; // 0xc8
	FMatrix LocalToWorld; // 0xd0
	int32_t MotionBlurInfoIndex; // 0x110
	TArray<FPointer> DecalList; // 0x114
	TArray<ComponentProperty> DecalsToReattach; // 0x124
	ComponentProperty ShadowParent; // 0x134
	ComponentProperty ReplacementPrimitive; // 0x13c
	ComponentProperty FogVolumeComponent; // 0x144
	ComponentProperty OverrideLightComponent; // 0x14c
	ComponentProperty LightEnvironment; // 0x154
	ComponentProperty PreviousLightEnvironment; // 0x15c
	float MinDrawDistance; // 0x164
	float MassiveLODDistance; // 0x168
	float MaxDrawDistance; // 0x16c
	float CachedMaxDrawDistance; // 0x170
	float MotionBlurInstanceScale; // 0x174
	float CullDistance; // 0x178
	float CachedCullDistance; // 0x17c
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x180
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x181
	EDetailMode DetailMode; // 0x182
	ERBCollisionChannel RBChannel; // 0x183
	char RBDominanceGroup; // 0x184
	char PreviewEnvironmentShadowing; // 0x185
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x188
	char bAllowCullDistanceVolume : 1; // 0x188
	char HiddenGame : 1; // 0x188
	char HiddenEditor : 1; // 0x188
	char bOwnerNoSee : 1; // 0x188
	char bOnlyOwnerSee : 1; // 0x188
	char bIgnoreOwnerHidden : 1; // 0x188
	char bIncludeInManualZPrepass : 1; // 0x188
	char bUseAsOccluder : 0; // 0x188
	char bAllowApproximateOcclusion : 0; // 0x188
	char bFirstFrameOcclusion : 0; // 0x188
	char bIgnoreNearPlaneIntersection : 0; // 0x188
	char bSelectable : 0; // 0x188
	char bForceMipStreaming : 0; // 0x188
	char bAcceptsDecals : 0; // 0x188
	char bAcceptsDecalsDuringGameplay : 0; // 0x188
	char bAcceptsStaticDecals : 0; // 0x188
	char bAcceptsDynamicDecals : 0; // 0x188
	char bIsRefreshingDecals : 0; // 0x188
	char bAllowDecalAutomaticReAttach : 0; // 0x188
	char bUsePerInstanceHitProxies : 0; // 0x188
	char CastShadow : 0; // 0x188
	char bForceDirectLightMap : 0; // 0x188
	char bCastDynamicShadow : 0; // 0x188
	char bCastStaticShadow : 0; // 0x188
	char bSelfShadowOnly : 0; // 0x188
	char bNoModSelfShadow : 0; // 0x188
	char bAcceptsDynamicDominantLightShadows : 0; // 0x188
	char bCastHiddenShadow : 0; // 0x188
	char bCastShadowAsTwoSided : 0; // 0x188
	char bAcceptsLights : 0; // 0x188
	char bAcceptsDynamicLights : 0; // 0x188
	char bUseOnePassLightingOnTranslucency : 1; // 0x18c
	char bUsePrecomputedShadows : 1; // 0x18c
	char bHasExplicitShadowParent : 1; // 0x18c
	char bAllowAmbientOcclusion : 1; // 0x18c
	char CollideActors : 1; // 0x18c
	char AlwaysCheckCollision : 1; // 0x18c
	char BlockActors : 1; // 0x18c
	char BlockZeroExtent : 1; // 0x18c
	char BlockNonZeroExtent : 0; // 0x18c
	char CanBlockCamera : 0; // 0x18c
	char BlockRigidBody : 0; // 0x18c
	char bBlockFootPlacement : 0; // 0x18c
	char bSeenByAI : 0; // 0x18c
	char bDisableAllRigidBody : 0; // 0x18c
	char bSkipRBGeomCreation : 0; // 0x18c
	char bNotifyRigidBodyCollision : 0; // 0x18c
	char bFluidDrain : 0; // 0x18c
	char bFluidTwoWay : 0; // 0x18c
	char bIgnoreRadialImpulse : 0; // 0x18c
	char bIgnoreRadialForce : 0; // 0x18c
	char bIgnoreForceField : 0; // 0x18c
	char bUseCompartment : 0; // 0x18c
	char AlwaysLoadOnClient : 0; // 0x18c
	char AlwaysLoadOnServer : 0; // 0x18c
	char bIgnoreHiddenActorsMembership : 0; // 0x18c
	char AbsoluteTranslation : 0; // 0x18c
	char AbsoluteRotation : 0; // 0x18c
	char AbsoluteScale : 0; // 0x18c
	char bAllowShadowFade : 0; // 0x18c
	char bSupportedOnMobile : 0; // 0x18c
	char bWasSNFiltered : 0; // 0x18c
	TArray<int32_t> OctreeNodes; // 0x190
	int32_t TranslucencySortPriority; // 0x1a0
	int32_t VisibilityId; // 0x1a4
	FLightingChannelContainer LightingChannels; // 0x1a8
	FRBCollisionChannelContainer RBCollideWithChannels; // 0x1ac
	ObjectProperty PhysMaterialOverride; // 0x1b0
	ObjectProperty BodyInstance; // 0x1b8
	FMatrix CachedParentToWorld; // 0x1c0
	FVector Translation; // 0x200
	FRotator Rotation; // 0x20c
	float Scale; // 0x218
	FVector Scale3D; // 0x21c
	float BoundsScale; // 0x228
	FVector OcclusionBoundsScale; // 0x22c
	float OcclusionSphereScale; // 0x238
	float OverrideDrawDistanceScale; // 0x23c
	float LastSubmitTime; // 0x240
	float LastRenderTime; // 0x244
	float ScriptRigidBodyCollisionThreshold; // 0x248
};

struct ATgPawn_SiegeEngine_Payload : ATgPawn_Juggernaut {
	float s_fTotalSplineLength; // 0x305c
	float s_fPreviousSplineLength; // 0x3060
	char r_bEnable : 1; // 0x3064
	char m_bRequireLineOfSightForNearby : 1; // 0x3064
	char m_bShouldAccelerateLOSChecks : 1; // 0x3064
	char r_bMovingBackwards : 1; // 0x3064
	char r_bCanAutoPushForward : 1; // 0x3064
	float m_fBaseSpeedScale; // 0x3068
	float m_fNearbyProximityDistance; // 0x306c
	ObjectProperty m_NearbyCollisionProxy; // 0x3070
	TArray<ObjectProperty> m_TouchingPlayers; // 0x3078
	TArray<ObjectProperty> m_VisiblePlayers; // 0x3088
	float m_fSpeedScaleIncreasePerFriendly; // 0x3098
	float m_fLineOfSightUpdatePeriod; // 0x309c
	float m_fLineOfSightUpdatePeriodAccelerated; // 0x30a0
	float m_fNextLineOfSightUpdateTime; // 0x30a4
	float s_fTimeUntilMoveBackwards; // 0x30a8
	float m_fMoveBackSpeedScale; // 0x30ac
	EAutoMovePayload r_eMoveWithoutAllies; // 0x30b0
	EPayloadControlState m_eControlState; // 0x30b1
	char r_nFriends; // 0x30b2
	char r_nEnemies; // 0x30b3
	float m_fAutoPushForwardDelay; // 0x30b4
	float r_fAutoPushForwardSpeedScale; // 0x30b8
	float m_fStopAutoPushDelay; // 0x30bc
};

struct USeqAct_ControlMovieTexture : USequenceAction {
	ObjectProperty MovieTexture; // 0x108
};

struct APComPerformanceCaptureNode : AActor {
	FString ExecCommand; // 0x280
	float DelayBeforeCapture; // 0x290
};

struct UTgGameplayCurvesSet_RecoilVisual : UTgGameplayCurvesSet {
	FRawDistributionFloat AngleDistribution; // 0x64
	FRawDistributionFloat StrengthDegreesByAngleMin; // 0x88
	FRawDistributionFloat StrengthDegreesByAngleMax; // 0xac
	FRawDistributionFloat RecoilApplicationCurve; // 0xd0
};

struct UTgDeviceForm_Latch : UTgDeviceForm {
	int32_t m_nCurrentLatchAsmId; // 0x28c
	float m_fMaxPullDelay; // 0x290
	float m_fProjSpeed; // 0x294
	float m_fAnimatePullTimeout; // 0x298
	ObjectProperty m_LatchEndpoint; // 0x29c
	ObjectProperty m_BeamTarget; // 0x2a4
	FVector m_vBeamTargetLocation; // 0x2ac
	FVector m_vBeamTargetDirection; // 0x2b8
	char m_bLatchInterrupted : 1; // 0x2c4
	char m_bBeamActive : 1; // 0x2c4
	char m_bBeamAttached : 1; // 0x2c4
	TArray<ObjectProperty> m_LatchBlendList1P; // 0x2c8
	TArray<ObjectProperty> m_LatchBlendList3P; // 0x2d8
};

struct UMaterialExpressionCrossProduct : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
};

struct ATgProj_DemonTeleport : ATgProj_Simulated {
	char m_bStopped : 1; // 0x52c
	char m_bTriggerExplosion : 1; // 0x52c
};

struct UTgGamePhase_EquipDevice : UTgGamePhase {
	int32_t m_nDeviceId; // 0xb8
	TG_EQUIP_POINT m_eEquipSlotID; // 0xbc
};

struct UUIData_Match : UUIDataObject {
	Fdword dwMatchId; // 0x74
	TMap<None, None> m_PlayersMap; // 0x78
	TMap<None, None> m_BotsMap; // 0xc0
	TArray<ObjectProperty> MatchMembers; // 0x108
	FSet_Mirror m_AllowedClasses; // 0x118
	TArray<ObjectProperty> m_LobbyChampionStates; // 0x160
	Fdword m_dwCurrentChooserId; // 0x170
	Fdword m_dwPreviousTimeToLaunch; // 0x174
	UIDataMatchLobbyState m_eCurrentLobbyState; // 0x178
};

struct ATgAssaultPoint : ATgAIAnnotation {
	EAssaultType AssaultPointType; // 0x390
	ELocationType LocationType; // 0x391
};

struct UTgEffectDamage_AstroDOT : UTgEffectDamage {
	TArray<float> m_EffectTimeStamps; // 0xc0
	TArray<float> m_EffectDamageValues; // 0xd0
	FPointer m_EffectInfo; // 0xe0
};

struct UGameFixedCamera : UGameCameraBase {
	float DefaultFOV; // 0x6c
};

struct UTgEffectForm_BuffBelt : UTgEffectForm {
	FPointer VfTable_FTickableObject; // 0xfc
	float m_OrbitAngleYawOffset; // 0x104
	float m_OrbitHeightOffset; // 0x108
	char m_bFirstUpdate : 1; // 0x10c
	float m_OrbitRotationSpeed; // 0x110
};

struct UUIComponent_BattlePassHome : UUIComponent_Display {
	UIHBATTLEPASSHOME_STATE m_eHomeState; // 0x124
	ObjectProperty m_pPurchasePanel; // 0x128
	ObjectProperty m_pInfoPanel; // 0x130
	ObjectProperty m_pPreviewStack; // 0x138
	ObjectProperty m_PurchaseAllPanel; // 0x140
	ObjectProperty m_pTiers; // 0x148
	ObjectProperty m_pNextReward; // 0x150
	ObjectProperty m_pPrevReward; // 0x158
	ObjectProperty m_mcTiersTF0; // 0x160
	ObjectProperty m_mcTiersTF1; // 0x168
	ObjectProperty m_mcTiersTF2; // 0x170
	ObjectProperty m_mcBattlePassTrack; // 0x178
	ObjectProperty m_mcBattlePassTrackHeader; // 0x180
	ObjectProperty m_mcEncorePanel; // 0x188
	ObjectProperty m_mcEncorePanelTF; // 0x190
	ObjectProperty m_pEncorePanelPicture; // 0x198
	ObjectProperty m_grGroup; // 0x1a0
	int32_t m_nVoicePreviewId; // 0x1a8
	int32_t m_nAcknowledgedTier; // 0x1ac
	int32_t m_nAcknowledgedLevel; // 0x1b0
	Fdword m_dwAcknowledgedPoints; // 0x1b4
	char m_bAcknowledgedPaid : 1; // 0x1b8
	char m_bFirstPresentation : 1; // 0x1b8
	FVector m_vBaseCameraOffset; // 0x1bc
	FVector m_vMountCameraOffset; // 0x1c8
	FVector m_vDeathStampCameraOffset; // 0x1d4
	ObjectProperty m_InputScrollLeft; // 0x1e0
	ObjectProperty m_InputMouseScrollLeft; // 0x1e8
	ObjectProperty m_InputScrollRight; // 0x1f0
	ObjectProperty m_InputMouseScrollRight; // 0x1f8
	int32_t m_nOnTickCallbackHandle; // 0x200
	float m_fAutoSelectDelay; // 0x204
	ObjectProperty m_pPromptLeft; // 0x208
	ObjectProperty m_pPromptRight; // 0x210
	ObjectProperty m_pPreviewLTIRequested; // 0x218
};

struct UTgAIBehaviorCondition_IsInFortress : UTgAIBehaviorCondition {
	char bMustBeEnemy : 1; // 0x98
};

struct ASceneCaptureActor : AActor {
	ComponentProperty SceneCapture; // 0x280
};

struct UParticleModuleAcceleration : UParticleModuleAccelerationBase {
	FRawDistributionVector Acceleration; // 0x6c
	char bApplyOwnerScale : 1; // 0x90
};

struct UTgSilhouetteComponentPaladins : UTgSilhouetteComponent {
	FSilhouetteColorSettings m_ColorSettings; // 0x29c
	FSilhouetteFadeSettings m_FadeSettings; // 0x2c0
	FSilhouettePulseSettings m_PulseSettings; // 0x2d4
};

struct UTgDeviceForm_Booster : UTgDeviceForm {
	TArray<ObjectProperty> m_FlyingBlendList1P; // 0x28c
	TArray<ObjectProperty> m_FlyingBlendList3P; // 0x29c
};

struct USeqAct_SetMesh : USequenceAction {
	ObjectProperty NewSkeletalMesh; // 0x108
	ObjectProperty NewStaticMesh; // 0x110
	EMeshType MeshType; // 0x118
	char bIsAllowedToMove : 1; // 0x11c
	char bAllowDecalsToReattach : 1; // 0x11c
};

struct UTgInventoryObject_Listen_ModifyRecoilDuringAbility : UTgInventoryObject_Listen_ActiveDuringAbility {
	int32_t m_nPreviousRecoil; // 0xd4
};

struct UUIHudScore : UTgGfxScene {
	float m_fPayloadProgressWidth; // 0x1ec
	float m_fPayloadProgressBuffer; // 0x1f0
	int32_t m_nTime; // 0x1f4
	int32_t m_nScoreA; // 0x1f8
	int32_t m_nScoreB; // 0x1fc
	int32_t m_nTicketsFriend; // 0x200
	int32_t m_nTicketsEnemy; // 0x204
	int32_t m_nOvertime; // 0x208
	int32_t m_nPushTime; // 0x20c
	int32_t m_nSetupTime; // 0x210
	int32_t m_nCaptureA; // 0x214
	int32_t m_nCaptureB; // 0x218
	int32_t m_nCaptureTeam; // 0x21c
	int32_t m_nCaptureCount; // 0x220
	int32_t m_nOvertimeState; // 0x224
	int32_t m_nTimeRemaining; // 0x228
	char m_bPushing : 1; // 0x22c
	char m_bOvertime : 1; // 0x22c
	char m_bStarting : 1; // 0x22c
	char m_bCapturing : 1; // 0x22c
	char m_bCaptureOvertime : 1; // 0x22c
	char m_bUseSubtitlePrompt : 1; // 0x22c
	char m_bShowingAbyssalEcho : 1; // 0x22c
	float m_fOvertime; // 0x230
	float m_fPushTimer; // 0x234
	float m_fSetupTimer; // 0x238
	float m_fOvertimeDuration; // 0x23c
	TArray<ObjectProperty> m_movieClips; // 0x240
	ObjectProperty m_mcSiege; // 0x250
	ObjectProperty m_mcSiegeTime; // 0x258
	ObjectProperty m_mcSiegeMaxA; // 0x260
	ObjectProperty m_mcSiegeMaxB; // 0x268
	ObjectProperty m_mcSiegeScoreA; // 0x270
	ObjectProperty m_mcSiegeScoreB; // 0x278
	ObjectProperty m_mcTicketsFriend; // 0x280
	ObjectProperty m_mcTicketsEnemy; // 0x288
	ObjectProperty m_mcSiegeScoreFrame; // 0x290
	ObjectProperty m_mcSiegePush; // 0x298
	ObjectProperty m_mcSiegePushBar; // 0x2a0
	ObjectProperty m_mcSiegePushTip; // 0x2a8
	ObjectProperty m_mcSiegePushTime; // 0x2b0
	ObjectProperty m_mcSiegePushOvertime; // 0x2b8
	ObjectProperty m_mcSiegePushOvertimeBar; // 0x2c0
	ObjectProperty m_mcSiegeCapture; // 0x2c8
	ObjectProperty m_mcSiegeCaptureBarA; // 0x2d0
	ObjectProperty m_mcSiegeCaptureBarB; // 0x2d8
	ObjectProperty m_mcSiegeCaptureIcon; // 0x2e0
	ObjectProperty m_mcSiegeCaptureCount; // 0x2e8
	ObjectProperty m_mcSiegeCaptureScoreA; // 0x2f0
	ObjectProperty m_mcSiegeCaptureScoreB; // 0x2f8
	ObjectProperty m_mcSiegeCaptureOvertime; // 0x300
	ObjectProperty m_mcSiegeCaptureOvertimeBar; // 0x308
	FPayloadStatus m_SiegePayloadStatus; // 0x310
	ObjectProperty m_mcSiegePushContested; // 0x36c
	ObjectProperty m_mcSiegePushContestedTF; // 0x374
	ObjectProperty m_mcPayload; // 0x37c
	ObjectProperty m_mcPayloadTime; // 0x384
	ObjectProperty m_mcPayloadTitle; // 0x38c
	ObjectProperty m_mcPayloadScoreA; // 0x394
	ObjectProperty m_mcPayloadScoreB; // 0x39c
	ObjectProperty m_mcPayloadScoreFrame; // 0x3a4
	ObjectProperty m_mcPayloadPush; // 0x3ac
	ObjectProperty m_mcPayloadPushBar; // 0x3b4
	ObjectProperty m_mcPayloadPushTip; // 0x3bc
	ObjectProperty m_mcPayloadPushTime; // 0x3c4
	ObjectProperty m_mcPayloadPushMarker; // 0x3cc
	ObjectProperty m_mcPayloadPushOvertime; // 0x3d4
	ObjectProperty m_mcPayloadPushOvertimeBar; // 0x3dc
	FPayloadStatus m_PayloadPayloadStatus; // 0x3e4
	ObjectProperty m_mcPayloadPushContested; // 0x440
	ObjectProperty m_mcPayloadPushContestedTF; // 0x448
	ObjectProperty m_mcActivation; // 0x450
	ObjectProperty m_mcActivationTF; // 0x458
	ObjectProperty m_mcActivationTitle; // 0x460
	FString m_szCurrentPersistentTitle; // 0x468
	FString m_szCurrentPersistentSubtitle; // 0x478
	ObjectProperty m_mcPersistentTitle; // 0x488
	ObjectProperty m_mcPersistentSubtitle; // 0x490
	ObjectProperty m_mcPersistentSubtitlePrompt; // 0x498
	ObjectProperty m_mcTutorialPrompt; // 0x4a0
	ObjectProperty m_mcTutorialPromptBack; // 0x4a8
	ObjectProperty m_mcZoneName; // 0x4b0
	ObjectProperty m_mcZoneNameTF; // 0x4b8
	ObjectProperty m_mcFlagball; // 0x4c0
	ObjectProperty m_pFlagballProgressBlue; // 0x4c8
	ObjectProperty m_pFlagballProgressRed; // 0x4d0
	ObjectProperty m_pFlagballProgressContested; // 0x4d8
	int32_t m_nPersistentTextID; // 0x4e0
	EHUDType m_eCurrentHUDType; // 0x4e4
};

struct UParticleModuleColor_Seeded : UParticleModuleColor {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb4
};

struct USVehicleSimCar : USVehicleSimBase {
	float ChassisTorqueScale; // 0xc0
	FInterpCurveFloat MaxSteerAngleCurve; // 0xc4
	float SteerSpeed; // 0xd8
	float ReverseThrottle; // 0xdc
	float EngineBrakeFactor; // 0xe0
	float MaxBrakeTorque; // 0xe4
	float StopThreshold; // 0xe8
	char bIsDriving : 1; // 0xec
	float ActualSteering; // 0xf0
	float TimeSinceThrottle; // 0xf4
};

struct USceneCapture2DHitMaskComponent : USceneCaptureComponent {
	ObjectProperty TextureTarget; // 0xd0
	ComponentProperty SkeletalMeshComp; // 0xd8
	int32_t MaterialIndex; // 0xe0
	int32_t ForceLOD; // 0xe4
	int32_t HitMaskCullDistance; // 0xe8
	float FadingStartTimeSinceHit; // 0xec
	float FadingPercentage; // 0xf0
	float FadingDurationTime; // 0xf4
	float FadingIntervalTime; // 0xf8
};

struct USoundNodeLooping : USoundNode {
	char bLoopIndefinitely : 1; // 0x74
	float LoopCountMin; // 0x78
	float LoopCountMax; // 0x7c
	FRawDistributionFloat LoopCount; // 0x80
};

struct UGFxAction_CloseMovie : USequenceAction {
	ObjectProperty Movie; // 0x108
	char bUnload : 1; // 0x110
};

struct ATgDevice_WallBang : ATgDevice {
	ObjectProperty m_SaatiUltFireDevice; // 0xa04
	char m_bShouldShowUltUI : 1; // 0xa0c
};

struct UUserCloudFileCloudSaveSystemDataBlobStore : UObject {
	TScriptInterface<Class> UserCloudFile; // 0x60
	DelegateProperty GetDataBlobCallback; // 0x70
	DelegateProperty SetDataBlobCallback; // 0x80
	DelegateProperty DeleteDataBlobCallback; // 0x90
	DelegateProperty __GetDataBlobCallbackDelegate__Delegate; // 0xa0
	DelegateProperty __SetDataBlobCallbackDelegate__Delegate; // 0xb0
	DelegateProperty __DeleteDataBlobCallbackDelegate__Delegate; // 0xc0
};

struct UTgSeqEvent_EnergyUpdated : USequenceEvent {
	int32_t ResultEnergy; // 0x128
};

struct UTgAIUtilityFilter_StayInTargetFOV : UTgAIUtilityFilter {
	char bInverse : 1; // 0xc0
};

struct UFogVolumeSphericalDensityComponent : UFogVolumeDensityComponent {
	float MaxDensity; // 0xe0
	FVector SphereCenter; // 0xe4
	float SphereRadius; // 0xf0
	ComponentProperty PreviewSphereRadius; // 0xf4
};

struct UVivoxClosure : UObject {
	ObjectProperty m_Connector; // 0x60
	ObjectProperty m_OnlineSub; // 0x68
};

struct UTgAnimNodeBlendByGameState : UTgAnimNodeBlendList {
	ObjectProperty PawnOwner; // 0x168
};

struct UTgAchievement_SprayAfterKilling : UTgAchievement {
	float m_fKillTime; // 0x94
};

struct UUIData_Notification : UUIData {
	NotificationType eType; // 0x64
	IconStackType eIconStackType; // 0x65
	FString sTitle; // 0x68
	FString sDescription; // 0x78
	Fdword dwIconIndex; // 0x88
	FString sIconId; // 0x8c
	Fdword dwItemId; // 0x9c
	FQWord qwTimeStamp; // 0xa0
	Fdword dwCount; // 0xa8
	Fdword dwItemType; // 0xac
	Fdword dwItemSubType; // 0xb0
	char bNavigable : 1; // 0xb4
	char bShowDescription : 1; // 0xb4
	char bSeen : 1; // 0xb4
	int32_t nLocalNotificationId; // 0xb8
};

struct UParticleModuleParameterDynamic : UParticleModuleParameterBase {
	TArray<FEmitterDynamicParameter> DynamicParams; // 0x68
	int32_t UpdateFlags; // 0x78
	char bUsesVelocity : 1; // 0x7c
};

struct UTgGameplayCurvesSet_BulletMagnetOverDist : UTgGameplayCurvesSet {
	FRawDistributionFloat BulletMagnetDegOverDist; // 0x64
	FRawDistributionFloat BulletMagnetMaxDegOverDist; // 0x88
	EPaladinsBulletMagnetType BulletMagnetActiveType; // 0xac
};

struct ATgDeploy_Barrage : ATgDeployable {
	ObjectProperty m_CameraShake; // 0x46c
	float m_fAllowableGroundTraceDist; // 0x474
	char m_bShouldAirBurst : 1; // 0x478
};

struct UAudioComponent : UActorComponent {
	ObjectProperty SoundCue; // 0x88
	ObjectProperty CueFirstNode; // 0x90
	TArray<FAudioComponentParam> InstanceParameters; // 0x98
	char bUseOwnerLocation : 1; // 0xa8
	char bAutoPlay : 1; // 0xa8
	char bAutoDestroy : 1; // 0xa8
	char bStopWhenOwnerDestroyed : 1; // 0xa8
	char bShouldRemainActiveIfDropped : 1; // 0xa8
	char bWasOccluded : 1; // 0xa8
	char bNeedsOcclusionCheck : 1; // 0xa8
	char bSuppressSubtitles : 1; // 0xa8
	char bWasPlaying : 0; // 0xa8
	char bAllowSpatialization : 0; // 0xa8
	char bFinished : 0; // 0xa8
	char bApplyRadioFilter : 0; // 0xa8
	char bRadioFilterSelected : 0; // 0xa8
	char bPreviewComponent : 0; // 0xa8
	char bIgnoreForFlushing : 0; // 0xa8
	float StereoBleed; // 0xac
	float LFEBleed; // 0xb0
	char bEQFilterApplied : 1; // 0xb4
	char bAlwaysPlay : 1; // 0xb4
	char bIsUISound : 1; // 0xb4
	char bIsMusic : 1; // 0xb4
	char bReverb : 1; // 0xb4
	char bCenterChannelOnly : 1; // 0xb4
	float m_fAdditionalPriority; // 0xb8
	TArray<FPointer> WaveInstances; // 0xbc
	TArray<char> SoundNodeData; // 0xcc
	TMap<None, None> SoundNodeOffsetMap; // 0xdc
	FMultiMap_Mirror SoundNodeResetWaveMap; // 0x124
	FPointer Listener; // 0x16c
	float PlaybackTime; // 0x174
	ObjectProperty PortalVolume; // 0x178
	FVector Location; // 0x180
	FVector ComponentLocation; // 0x18c
	ObjectProperty LastOwner; // 0x198
	float SubtitlePriority; // 0x1a0
	float FadeInStartTime; // 0x1a4
	float FadeInStopTime; // 0x1a8
	float FadeInTargetVolume; // 0x1ac
	float FadeOutStartTime; // 0x1b0
	float FadeOutStopTime; // 0x1b4
	float FadeOutTargetVolume; // 0x1b8
	float m_fFadeOutTargetPitch; // 0x1bc
	float AdjustVolumeStartTime; // 0x1c0
	float AdjustVolumeStopTime; // 0x1c4
	float AdjustVolumeTargetVolume; // 0x1c8
	float CurrAdjustVolumeTargetVolume; // 0x1cc
	ObjectProperty CurrentNotifyBufferFinishedHook; // 0x1d0
	FVector CurrentLocation; // 0x1d8
	FVector CurrentVelocity; // 0x1e4
	float CurrentVolume; // 0x1f0
	float CurrentPitch; // 0x1f4
	float CurrentHighFrequencyGain; // 0x1f8
	int32_t CurrentUseSpatialization; // 0x1fc
	int32_t CurrentNotifyOnLoop; // 0x200
	float OmniRadius; // 0x204
	float CurrentVolumeMultiplier; // 0x208
	float CurrentPitchMultiplier; // 0x20c
	float CurrentHighFrequencyGainMultiplier; // 0x210
	float CurrentVoiceCenterChannelVolume; // 0x214
	float CurrentRadioFilterVolume; // 0x218
	float CurrentRadioFilterVolumeThreshold; // 0x21c
	FDouble LastUpdateTime; // 0x220
	float SourceInteriorVolume; // 0x228
	float SourceInteriorLPF; // 0x22c
	float CurrentInteriorVolume; // 0x230
	float CurrentInteriorLPF; // 0x234
	FDouble SoundModeStartTime; // 0x238
	FVector LastLocation; // 0x240
	FInteriorSettings LastInteriorSettings; // 0x24c
	int32_t LastReverbVolumeIndex; // 0x27c
	float VolumeMultiplier; // 0x280
	float PitchMultiplier; // 0x284
	float HighFrequencyGainMultiplier; // 0x288
	float OcclusionCheckInterval; // 0x28c
	float LastOcclusionCheckTime; // 0x290
	ComponentProperty PreviewSoundRadius; // 0x294
	DelegateProperty __OnAudioFinished__Delegate; // 0x29c
	DelegateProperty __OnAudioFinishedFX__Delegate; // 0x2ac
	DelegateProperty __OnQueueSubtitles__Delegate; // 0x2bc
};

struct UUIScene_UIAccountLink : UUIScene {
	ObjectProperty m_grButtons; // 0x1cc
	ObjectProperty m_EmailOptInToggle; // 0x1d4
	ObjectProperty m_ChangeEmailButton; // 0x1dc
	ObjectProperty m_AcceptButton; // 0x1e4
	ObjectProperty m_DeclineButton; // 0x1ec
};

struct UUIScene_UIHudRei : UUIScene {
	char m_bViewTargetRei : 1; // 0x1cc
	char m_bHudVisible : 1; // 0x1cc
	ObjectProperty m_pEnvelopBar; // 0x1d0
	ObjectProperty m_CachedRei; // 0x1d8
	ObjectProperty m_CachedEnvelopDevice; // 0x1e0
};

struct AAISwitchablePylon : APylon {
	char bOpen : 1; // 0x490
};

struct UUIComponent_TextButton : UUIComponent_Display {
	FString m_lsText; // 0x124
	ObjectProperty m_pFrameButton; // 0x134
};

struct UTgIconManager : UObject {
	FMap_Mirror m_GFxReferenceToIconDetailsMap; // 0x60
	FMultiMap_Mirror m_ItemIdToIconGroupMap; // 0xa8
	FMultiMap_Mirror m_TextureStringToIconGroupMap; // 0xf0
};

struct UTgAIBehaviorCondition_WhatIsLastAttackerTargeting : UTgAIBehaviorCondition {
	ECombatTargetType TargetType; // 0x98
};

struct ATgMinionGoal : ANavigationPoint {
	int32_t m_nLaneNum; // 0x378
	int32_t m_nTaskForce; // 0x37c
	ObjectProperty m_EndPoint; // 0x380
	char m_bUseForFinalDestination : 1; // 0x388
};

struct ATgDeploy_DominanceFlag : ATgDeploy_EffectField {
	float r_fRadiusForFX; // 0x4a0
};

struct UTgSeqEvent_SpawnLanePusher : USequenceEvent {
	int32_t Taskforce; // 0x128
};

struct UActorFactoryAI : UActorFactory {
	AAIController* ControllerClass; // 0x9c
	APawn* PawnClass; // 0xa4
	FString PawnName; // 0xac
	char bGiveDefaultInventory : 1; // 0xbc
	TArray<AInventory*> InventoryList; // 0xc0
	int32_t TeamIndex; // 0xd0
};

struct ATgWeaponMeshActor_FuriaInhand : ATgWeaponMeshActor {
	char m_bFiredAltBarrel : 1; // 0x450
	TArray<ObjectProperty> m_stanceNodes3p; // 0x454
	TArray<ObjectProperty> m_stanceNodes1p; // 0x464
};

struct UUIData_Index : UUIData {
	Fdword m_dwValue; // 0x64
};

struct UTgAchievement_FastDamage : UTgAchievement {
	TArray<FFastDamageEntry> m_DamageEntries; // 0x94
	int32_t m_nCurrentDamageTotal; // 0xa4
};

struct UUIComponent_ItemUIBooster : UUIComponent_Display {
	ObjectProperty m_pIcon; // 0x124
	ObjectProperty m_mcBoosterName; // 0x12c
	ObjectProperty m_mcBoosterAmountOwned; // 0x134
};

struct UUIComponent_MatchPlayerEntry : UUIComponent_Display {
	ObjectProperty m_mcEndCap; // 0x124
	ObjectProperty m_mcIcon; // 0x12c
	ObjectProperty m_mcName; // 0x134
	ObjectProperty m_pPlayerName; // 0x13c
	ObjectProperty m_pCrossPlayIcon; // 0x144
	ObjectProperty m_mcTitle; // 0x14c
	ObjectProperty m_mcBuild; // 0x154
	ObjectProperty m_mcBuild_Stat[0x2]; // 0x15c
	ObjectProperty m_mcBuild_Talent; // 0x16c
	ObjectProperty m_pBuild_TalentIcon; // 0x174
	ObjectProperty m_mcBuild_Passive; // 0x17c
	ObjectProperty m_pBuild_PassiveIcon; // 0x184
	ObjectProperty m_mcBooster0; // 0x18c
	ObjectProperty m_mcBooster0Tex; // 0x194
	ObjectProperty m_mcBooster1; // 0x19c
	ObjectProperty m_mcBooster1Tex; // 0x1a4
	ObjectProperty m_Cards[0x5]; // 0x1ac
	ObjectProperty m_CardButtons[0x5]; // 0x1d4
	ObjectProperty m_Items[0x4]; // 0x1fc
	ObjectProperty m_ItemButtons[0x4]; // 0x21c
	ObjectProperty m_mcStatsDetails; // 0x23c
	ObjectProperty m_mcStatsDetails_Stat[0x7]; // 0x244
	ObjectProperty m_TalentButton; // 0x27c
	ObjectProperty m_PassiveButton; // 0x284
	ObjectProperty m_FrameButton; // 0x28c
	ObjectProperty m_ReportButton; // 0x294
	ObjectProperty m_ImportButton; // 0x29c
	ObjectProperty m_AddButton; // 0x2a4
	ObjectProperty m_GiftButton; // 0x2ac
	ObjectProperty m_pTooltip; // 0x2b4
	char m_bCanReport : 1; // 0x2bc
};

struct UUIComponent_BPFreePassReward : UUIComponent_Display {
	ObjectProperty m_mcTF; // 0x124
	ObjectProperty m_pFreeReward; // 0x12c
};

struct UTgAIBehaviorTree : UTgAIBehaviorNode {
	ObjectProperty ChildNode; // 0x94
	TArray<ObjectProperty> SensorNodes; // 0x9c
	TArray<ObjectProperty> UtilitySets; // 0xac
};

struct UTgDeviceForm_Emote : UTgDeviceForm {
	TArray<ObjectProperty> m_CachedEmoteSequences; // 0x28c
	TArray<ObjectProperty> m_CachedEmoteLists; // 0x29c
};

struct ATgPawn_Drogoz : ATgPawn_Character {
	char m_bIsInBooster : 1; // 0x3160
	char m_bDragonSlamIsBlocking : 1; // 0x3160
	char m_bDragonSlamHasHit : 1; // 0x3160
	char m_bUseDragonSlamRetrieve : 1; // 0x3160
	char m_bInBoosterLockout : 1; // 0x3160
	char r_bSalvoActiveFlag : 1; // 0x3160
	char r_bCombustibleActive : 1; // 0x3160
	char m_bBoosterUseConstantSpeedReduction : 1; // 0x3160
	float m_fCurrentBoosterSpeed; // 0x3164
	float m_fBoosterEndTime; // 0x3168
	ObjectProperty m_CachedBoosterDevice; // 0x316c
	float m_fBoosterLockoutTime; // 0x3174
	float m_fBoosterKnockbackLockoutTime; // 0x3178
	float m_fBoosterKnockbackLockoutTimestamp; // 0x317c
	int32_t r_nInhandAmmoRemaining; // 0x3180
	float m_fBoosterSpeedReductionRate; // 0x3184
	float m_fBoosterInactiveSpeedReductionRate; // 0x3188
	float m_fBoosterInactiveSpeedReductionDelay; // 0x318c
	float m_fBoosterInactiveSpeedReductionTimer; // 0x3190
};

struct UUIComponent_ItemRadialMenu : UUIComponent_Display {
	ObjectProperty m_pIcon; // 0x124
	ObjectProperty m_pText; // 0x12c
	char m_bLocked : 1; // 0x134
};

struct UUIHudCredits : UTgGfxScene {
	int32_t m_nDepth; // 0x1ec
	FString m_sComboName; // 0x1f0
	FString m_sRewardName; // 0x200
	char m_bDisableCreditDisplay : 1; // 0x210
	ObjectProperty m_scXP; // 0x214
	ObjectProperty m_scKill; // 0x21c
	TArray<FUIRewardInfo> m_mcRewards; // 0x224
	TArray<FUIRewardInfo> m_RewardPool; // 0x234
	TArray<FUIRewardInfo> m_ComboPool; // 0x244
	float m_fClient3pRewardOffset; // 0x254
};

struct UPrefab : UObject {
	int32_t PrefabVersion; // 0x60
	TArray<ObjectProperty> PrefabArchetypes; // 0x64
	TArray<ObjectProperty> RemovedArchetypes; // 0x74
	ObjectProperty PrefabSequence; // 0x84
};

struct UTgAchievement_DeviceFireGlobalSeconds : UTgAchievement {
	float m_fStartTime; // 0x94
	float m_fAccumulatedDuration; // 0x98
};

struct UMaterialExpressionConstantClamp : UMaterialExpression {
	FExpressionInput Input; // 0xb0
	float Min; // 0xe4
	float Max; // 0xe8
};

struct UTgAIBehaviorAction_AssignLane : UTgAIBehaviorAction {
	int32_t LaneIndex; // 0x94
};

struct ATgProj_Seedling : ATgProj_FreeGrenade {
	int32_t m_nSecondaryProjToSpawn; // 0x580
	int32_t m_nSpawnsRemaining; // 0x584
	ComponentProperty m_CachedSMC; // 0x588
	ObjectProperty m_GrenadeSkelControl; // 0x590
	ObjectProperty m_SpikesSkelControl; // 0x598
	ObjectProperty m_fCachedMIC; // 0x5a0
	FRotator m_rRotationalVelocity; // 0x5a8
	ComponentProperty m_Silhouette; // 0x5b4
	FLinearColor m_LocalSilhouetteColor; // 0x5bc
	char m_bSilhouetteInitialized : 1; // 0x5cc
	char m_bSilhouetteAllowed : 1; // 0x5cc
	char m_bBuildupSoundPlayed : 1; // 0x5cc
};

struct USeqVar_Int : USequenceVariable {
	int32_t IntValue; // 0xa0
};

struct UDistributionVectorConstantCurve : UDistributionVector {
	FInterpCurveVector ConstantCurve; // 0x7c
	char bLockAxes : 1; // 0x90
	EDistributionVectorLockFlags LockedAxes; // 0x94
};

struct UTgAIBehaviorAction_MoveToCover : UTgAIBehaviorAction_MoveToTarget {
	char bAllowPopout : 1; // 0x9c
};

struct UParticleModuleTypeDataTrail2 : UParticleModuleTypeDataBase {
	int32_t TessellationFactor; // 0x68
	float TessellationFactorDistance; // 0x6c
	float TessellationStrength; // 0x70
	int32_t TextureTile; // 0x74
	int32_t Sheets; // 0x78
	int32_t MaxTrailCount; // 0x7c
	int32_t MaxParticleInTrailCount; // 0x80
	char bClipSourceSegement : 1; // 0x84
	char bClearTangents : 1; // 0x84
	char RenderGeometry : 1; // 0x84
	char RenderDirectLine : 1; // 0x84
	char RenderLines : 1; // 0x84
	char RenderTessellation : 1; // 0x84
};

struct UParticleModuleCollisionActor : UParticleModuleCollision {
	TArray<FName> ActorsToCollideWith; // 0x140
	char bCheckPawnCollisions : 1; // 0x150
};

struct ATgWeaponMeshActor_BombKingInhand : ATgWeaponMeshActor {
	char m_bPlayPoppyDetonateAnimation : 1; // 0x450
};

struct ATgPawn_Grohk : ATgPawn_Character {
	ObjectProperty r_InhandTarget; // 0x3160
	FVector r_InhandHitOffset; // 0x3168
	char c_bIsInTempest : 1; // 0x3174
	float c_fTempestOverlayStrength; // 0x3178
	float c_fTempestRampUpRate; // 0x317c
	float c_fTempsetRampDownRate; // 0x3180
	ObjectProperty m_CachedTempest; // 0x3184
};

struct UTgControlModule_TopDown : UTgControlModule_Spectator {
	float DefaultStartHeight; // 0x78
};

struct UTgInvListener_SetInhandFiremodeAfterDeviceFired : UTgInventoryObject_Listen_AbilityProcBase {
	int32_t m_nRemainingShots; // 0xcc
	float m_fRemainingTime; // 0xd0
};

struct ATgDemoRecSpectator_Debug : ATgDemoRecSpectator {
	ObjectProperty m_OriginalPlayer; // 0x18fc
	ObjectProperty m_OriginalPlayerController; // 0x1904
};

struct UTgCameraShake : UCameraShake {
	float m_fShakeScale; // 0xf8
	char m_bDoControllerVibration : 1; // 0xfc
	char m_bRadialShake : 1; // 0xfc
	char m_bOrientTowardRadialEpicenter : 1; // 0xfc
	float m_fRadialShake_InnerRadius; // 0x100
	float m_fRadialShake_OuterRadius; // 0x104
	float m_fRadialShake_Falloff; // 0x108
	ECameraAnimPlaySpace m_PlaySpace; // 0x10c
};

struct UTgInventoryObject_Listen_MendingSpiritsActive : UTgInventoryObject_Listen_AbilityProcBase {
	TArray<ObjectProperty> m_PawnTargets; // 0xcc
	char m_bEffectsAreActive : 1; // 0xdc
};

struct USoundNodeAmbientNonLoop : USoundNodeAmbient {
	float DelayMin; // 0xb0
	float DelayMax; // 0xb4
	FRawDistributionFloat DelayTime; // 0xb8
};

struct UTgAnimTurnInPlace_Player : UAnimNodeSequence {
	TArray<FTIP_Transition> TIP_Transitions; // 0x1ac
};

struct URB_ConstraintInstance : UObject {
	ObjectProperty Owner; // 0x60
	ComponentProperty OwnerComponent; // 0x68
	int32_t ConstraintIndex; // 0x70
	int32_t SceneIndex; // 0x74
	char bInHardware : 1; // 0x78
	char bLinearXPositionDrive : 1; // 0x78
	char bLinearXVelocityDrive : 1; // 0x78
	char bLinearYPositionDrive : 1; // 0x78
	char bLinearYVelocityDrive : 1; // 0x78
	char bLinearZPositionDrive : 1; // 0x78
	char bLinearZVelocityDrive : 1; // 0x78
	char bSwingPositionDrive : 1; // 0x78
	char bSwingVelocityDrive : 0; // 0x78
	char bTwistPositionDrive : 0; // 0x78
	char bTwistVelocityDrive : 0; // 0x78
	char bAngularSlerpDrive : 0; // 0x78
	char bTerminated : 0; // 0x78
	FPointer ConstraintData; // 0x7c
	FVector LinearPositionTarget; // 0x84
	FVector LinearVelocityTarget; // 0x90
	float LinearDriveSpring; // 0x9c
	float LinearDriveDamping; // 0xa0
	float LinearDriveForceLimit; // 0xa4
	FQuat AngularPositionTarget; // 0xb0
	FVector AngularVelocityTarget; // 0xc0
	float AngularDriveSpring; // 0xcc
	float AngularDriveDamping; // 0xd0
	float AngularDriveForceLimit; // 0xd4
	FPointer DummyKinActor; // 0xd8
};

struct UUIData_EventChallengeHub : UUIData {
	FString m_sName; // 0x64
	FString m_sLore; // 0x74
	int32_t m_nActivityId; // 0x84
	int32_t m_nHubIconIndex; // 0x88
	int32_t m_nSortOrderIndex; // 0x8c
	ObjectProperty m_pLTI; // 0x90
	TArray<ObjectProperty> m_Challenges; // 0x98
	int32_t m_nCompleteLootID; // 0xa8
};

struct UTgSeqAct_SetPlayerLevel : USequenceAction {
	int32_t m_nLevel; // 0x108
};

struct AImageReflectionSceneCapture : AImageReflection {
	float DepthRange; // 0x294
	float ColorRange; // 0x298
};

struct ATgPawn_Pet : ATgPawn {
	float m_fOwnerPhysPowerItemPercent; // 0x2e9c
	float m_fOwnerMagicalPowerItemPercent; // 0x2ea0
	float m_fOwnerUltilityPowerItemPercent; // 0x2ea4
	EPetPhase s_PetPhase; // 0x2ea8
	EPetPosition s_PetPosition; // 0x2ea9
	FRotator s_LastPositionAdjustmentRotation; // 0x2eac
	FVector s_InterpolatedPetPosition; // 0x2eb8
	FVector s_InterpolatedPetOwnerPosition; // 0x2ec4
	float s_fPetPositionDistanceMultiplier; // 0x2ed0
	float s_fOwnerVelocityTime; // 0x2ed4
	float s_fSmoothedMaxSpeed; // 0x2ed8
	ObjectProperty c_BeamFX; // 0x2edc
	FRotator r_InitialOrientation; // 0x2ee4
	ComponentProperty c_AimVisibilityMesh; // 0x2ef0
};

struct UParticleModuleSubUVSelect : UParticleModuleSubUVBase {
	FRawDistributionVector SubImageSelect; // 0x68
};

struct ATgWeaponMeshActor_RuckusInhand : ATgWeaponMeshActor {
	ComponentProperty m_SecondaryMuzzleFlashLight; // 0x450
};

struct UAnimNodeBlendByBase : UAnimNodeBlendList {
	EBaseBlendType Type; // 0x144
	FName ActorTag; // 0x148
	AActor* ActorClass; // 0x150
	float BlendTime; // 0x158
	ObjectProperty CachedBase; // 0x15c
};

struct UTgAchievement_MaldambaSpecificChallenge : UTgAchievement {
	int32_t m_nDreadSerpentID; // 0x94
	int32_t m_nSlitherID; // 0x98
	TArray<FMaldambaSpecificChallengeEntry> m_Entries; // 0x9c
};

struct UParticleModuleTrailTaper : UParticleModuleTrailBase {
	ETrailTaperMethod TaperMethod; // 0x68
	FRawDistributionFloat TaperFactor; // 0x6c
};

struct USeqAct_Interp : USeqAct_Latent {
	TMap<None, None> SavedActorTransforms; // 0x120
	TMap<None, None> SavedActorVisibilities; // 0x168
	float PlayRate; // 0x1b0
	float Position; // 0x1b4
	float ForceStartPosition; // 0x1b8
	char bIsPlaying : 1; // 0x1bc
	char bPaused : 1; // 0x1bc
	char bIsBeingEdited : 1; // 0x1bc
	char bLooping : 1; // 0x1bc
	char bRewindOnPlay : 1; // 0x1bc
	char bNoResetOnRewind : 1; // 0x1bc
	char bRewindIfAlreadyPlaying : 1; // 0x1bc
	char bReversePlayback : 1; // 0x1bc
	char bInterpForPathBuilding : 0; // 0x1bc
	char bForceStartPos : 0; // 0x1bc
	char bDisableRadioFilter : 0; // 0x1bc
	char bClientSideOnly : 0; // 0x1bc
	char bSkipUpdateIfNotVisible : 0; // 0x1bc
	char bIsSkippable : 0; // 0x1bc
	char bShouldShowGore : 0; // 0x1bc
	TArray<ObjectProperty> LinkedCover; // 0x1c0
	ObjectProperty InterpData; // 0x1d0
	TArray<ObjectProperty> GroupInst; // 0x1d8
	AMatineeActor* ReplicatedActorClass; // 0x1e8
	ObjectProperty ReplicatedActor; // 0x1f0
	int32_t PreferredSplitScreenNum; // 0x1f8
	TArray<FCameraCutInfo> CameraCuts; // 0x1fc
	float TerminationTime; // 0x20c
	FRenderingPerformanceOverrides RenderingOverrides; // 0x210
	char ConstantCameraAnim; // 0x214
	float ConstantCameraAnimRate; // 0x218
};

struct UTgSeqEvent_Escort_Despawn_Success : USequenceEvent {
	int32_t DefendersTaskForce; // 0x128
};

struct UUIData_MatchBoosterActivated : UUIData {
	Fdword dwSourcePlayerId; // 0x64
	Fdword dwTaskForce; // 0x68
	Fdword eItemBoosterSubtype; // 0x6c
	float fMultiplier; // 0x70
	ObjectProperty pBoosterItem; // 0x74
};

struct ATgPawn_Tyra : ATgPawn_Character {
	ObjectProperty m_HuntersMarkDevice; // 0x3160
	TArray<ObjectProperty> m_HuntersMarkTargets; // 0x3168
};

struct UParticleModuleUberLTISIVCLIL : UParticleModuleUberBase {
	FRawDistributionFloat Lifetime; // 0x78
	FRawDistributionVector StartSize; // 0x9c
	FRawDistributionVector StartVelocity; // 0xc0
	FRawDistributionFloat StartVelocityRadial; // 0xe4
	FRawDistributionVector ColorOverLife; // 0x108
	FRawDistributionFloat AlphaOverLife; // 0x12c
	FRawDistributionVector StartLocation; // 0x150
};

struct UParticleModuleVelocity_Seeded : UParticleModuleVelocity {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb4
};

struct AMutator : AInfo {
	ObjectProperty NextMutator; // 0x280
	TArray<FString> GroupNames; // 0x288
	char bUserAdded : 1; // 0x298
};

struct UUIComponent_DisplayOption : UUIComponent_Display {
	int32_t m_nDisplayedOption; // 0x124
	char m_bRegisterCallbacks : 1; // 0x128
	ObjectProperty m_mcTitle; // 0x12c
	ObjectProperty m_mcHighlight; // 0x134
	ObjectProperty m_mcOptionTF; // 0x13c
	ObjectProperty m_pLeftArrow; // 0x144
	ObjectProperty m_pRightArrow; // 0x14c
	ObjectProperty m_pFrameButton; // 0x154
};

struct UUIComponent_HealthBar_Overlay_Deployable : UUIComponent_HealthBar_Overlay {
	char m_bOwned : 1; // 0x248
};

struct UUIComponent_NotificationCenterNotifications : UUIComponent_Display {
	TArray<FPointer> m_pDropdownData; // 0x124
	ObjectProperty m_pEntries; // 0x134
	ObjectProperty m_pDropdown; // 0x13c
	ObjectProperty m_pClearAll; // 0x144
	ObjectProperty m_grInput; // 0x14c
};

struct ATgNamedPOIActor : AActor {
	int32_t m_nMessageId; // 0x280
	FString m_PreviewText; // 0x284
	char m_bIsRegion : 1; // 0x294
};

struct UTgDeviceForm_ImaniInhandFrost : UTgDeviceForm {
	TArray<ObjectProperty> m_DualFireStanceNodes1P; // 0x28c
	TArray<ObjectProperty> m_DualFireStanceNodes3P; // 0x29c
};

struct ATgPostProcessVolume : APostProcessVolume {
	ObjectProperty m_Material; // 0x44c
	ESceneDepthPriorityGroup m_SceneDPG; // 0x454
	ObjectProperty m_MaterialMIC; // 0x458
	float m_FadeInTime; // 0x460
	float m_FadeOutTime; // 0x464
	FName m_FadeScalarParameterName; // 0x468
};

struct UTgAIObstacleAvoidance : UObject {
	FPointer ObstacleGrid; // 0x60
	FObstacleQueryCache CachedAvoidance; // 0x68
	TArray<ObjectProperty> CachedBlockers; // 0x94
	TArray<ObjectProperty> CachedLandscapes; // 0xa4
	ObjectProperty OuterController; // 0xb4
	char bRenderingIsDirty : 1; // 0xbc
};

struct ATgDeploy_Shield : ATgDeployable {
	char bBasedOnPawn : 1; // 0x46c
};

struct UUIScene_UIChampionMastery : UUIScene {
	ObjectProperty m_pMasteryRewards; // 0x1cc
};

struct UTgAnimNodeStance : UAnimNodeBlendList {
	int32_t m_Stance; // 0x144
};

struct USeqAct_SetFloat : USeqAct_SetSequenceVariable {
	float Target; // 0x108
	TArray<float> Value; // 0x10c
};

struct UTgAnimNodeBlendByAndroxusDrift : UTgAnimNodeBlendList {
	TArray<FDriftInfo> m_DriftRecords; // 0x168
	ObjectProperty m_CachedAndroxusOwner; // 0x178
	char m_bInDrift : 1; // 0x180
	char m_bTransitionsCanBeInterrupted : 1; // 0x180
	float m_fDriftStartTime; // 0x184
	float m_fDriftRelevancyWindow; // 0x188
	float m_fDriftTriggerPercent; // 0x18c
	float m_fMaxFallSpeed; // 0x190
};

struct ATgProj_YagoNeedler : ATgProj_Simulated {
	FImpactInfo m_CachedTargetImpact; // 0x52c
};

struct UTgAIBehaviorCondition_DeltaGodsInCapturePoint : UTgAIBehaviorCondition {
	int32_t GodThreshold; // 0x98
};

struct UHavokNavigationHandle : UNavigationHandle {
	TArray<FCachedPathItem> PathPoints; // 0x1b0
	EHavokNavigationMeshType PathingNavMeshType; // 0x1c0
	EHavokEdgeType CurrEdgeType; // 0x1c1
	EHavokEdgeType NextEdgeType; // 0x1c2
	float LastClearPathTime; // 0x1c4
	float ClearPathTime; // 0x1c8
	char UseCustomCostMod : 1; // 0x1cc
	FPointer m_CostModifier; // 0x1d0
};

struct UTgAnimMetaData_Keyframed : UAnimMetaData {
	TArray<FMetaDataKeyFrame> KeyFrames; // 0x60
	char bForceFirstKeyFrameOnBecomeRelevant : 1; // 0x70
	char bForceLastKeyFrameOnCeaseRelevant : 1; // 0x70
	EOnRelevanceBehavior OnBecomeRelevantBehavior; // 0x74
	EOnRelevanceBehavior OnCeaseRelevantBehavior; // 0x75
	float OnBecomeRelevantStrength; // 0x78
	float OnCeaseRelevantStrength; // 0x7c
};

struct UTgDeviceMod_Burst : UObject {
	int32_t m_nBurstTotalShots; // 0x60
	int32_t m_nBurstShotsRemaining; // 0x64
	char m_bIsFirstBurstShot : 1; // 0x68
	char m_bOnlyFirstBurstCostsAmmo : 1; // 0x68
	char m_bBurstCanBeInterrupted : 1; // 0x68
	char m_bCanEndBurstEarly : 1; // 0x68
	char m_bPlayFireOnFirstShotOnly : 1; // 0x68
	char c_bBurstPendingStopFire : 1; // 0x68
	char s_bInBurstRecovery : 1; // 0x68
	char s_bIsStartingBurstFire : 1; // 0x68
	float m_fTimeBetweenShots; // 0x6c
};

struct UUIScene_UIHudVora : UUIScene {
	char m_bViewTargetVora : 1; // 0x1cc
	char m_bHudVisible : 1; // 0x1cc
	ObjectProperty m_Pips[0x5]; // 0x1d0
	ObjectProperty m_ChargedAnim; // 0x1f8
	ObjectProperty m_CachedVora; // 0x200
};

struct ATgDevice_DruidSpawnGuardian : ATgDevice_Pet {
	ObjectProperty m_CachedDruid; // 0xa04
	float m_fTraceDownDistance; // 0xa0c
};

struct ULightEnvironmentComponent : UActorComponent {
	char bEnabled : 1; // 0x88
	char bForceNonCompositeDynamicLights : 1; // 0x88
	char bAllowDynamicShadowsOnTranslucency : 1; // 0x88
	char bAllowPreShadow : 1; // 0x88
	char bTranslucencyShadowed : 1; // 0x88
	float DominantShadowFactor; // 0x8c
	ComponentProperty AffectingDominantLight; // 0x90
	TArray<ComponentProperty> AffectedComponents; // 0x98
};

struct UTgDataManager : UObject {
	ObjectProperty m_EOMData; // 0x60
	ObjectProperty m_CardData; // 0x68
	ObjectProperty m_NotificationData; // 0x70
	TArray<ObjectProperty> m_DataSets; // 0x78
	TArray<ObjectProperty> m_Callbacks; // 0x88
};

struct UUIComponent_ItemPreviewStack : UUIComponent_Display {
	int32_t m_nNameTextScalingType; // 0x124
	char m_bHas3dPreview : 1; // 0x128
	char m_bTryUpdate3dPreview : 1; // 0x128
	char m_bPlayVoicePacks : 1; // 0x128
	char m_bShowItemNameForTitlesOnly : 1; // 0x128
	ObjectProperty m_mcItemName; // 0x12c
	ObjectProperty m_mcItemDesc; // 0x134
	ObjectProperty m_mcItemRarity; // 0x13c
	ObjectProperty m_mcLoadingFrame; // 0x144
	ObjectProperty m_mcDeathCard; // 0x14c
	TArray<ObjectProperty> m_mcDeathCardOneLiner; // 0x154
	ObjectProperty m_mcItemAvatarContainer; // 0x164
	ObjectProperty m_pItemAvatar; // 0x16c
	ObjectProperty m_pItemIcon; // 0x174
};

struct UTgAIBehaviorAction_StopDevice : UTgAIBehaviorAction {
	TG_EQUIP_POINT DeviceToUse; // 0x94
};

struct UTgDeviceForm_Mount : UTgDeviceForm {
	TArray<ObjectProperty> m_LoadedAnimSets; // 0x28c
};

struct USeqEvent_MobileMotion : USeqEvent_MobileBase {
	float Roll; // 0x128
	float Pitch; // 0x12c
	float Yaw; // 0x130
	float DeltaRoll; // 0x134
	float DeltaPitch; // 0x138
	float DeltaYaw; // 0x13c
};

struct USeqAct_AttachToActor : USequenceAction {
	char bDetach : 1; // 0x108
	char bHardAttach : 1; // 0x108
	char bUseRelativeOffset : 1; // 0x108
	char bUseRelativeRotation : 1; // 0x108
	FName BoneName; // 0x10c
	FVector RelativeOffset; // 0x114
	FRotator RelativeRotation; // 0x120
};

struct UTgAchievement_GlobalPetTimer : UTgAchievement {
	int32_t m_nNumLivePets; // 0x94
	float m_fStartTime; // 0x98
};

struct ATgDevice_RaumStomp : ATgDevice {
	ObjectProperty m_CachedRaum; // 0xa04
	float m_fProjectileSpreadAngle; // 0xa0c
	FRotator m_rInitialStompDirection; // 0xa10
	float m_fMaxDirectionShiftDegrees; // 0xa1c
	float m_fStompProjectileHeightOffset; // 0xa20
	TArray<ObjectProperty> m_HitActors; // 0xa24
};

struct ATgDevice_AzaanUlt : ATgDevice {
	ObjectProperty m_AzaanUltSlamDevice; // 0xa04
	ObjectProperty m_pAzaan; // 0xa0c
};

struct UMaterialExpressionSine : UMaterialExpression {
	FExpressionInput Input; // 0xb0
	float Period; // 0xe4
};

struct UMorphNodeMultiPose : UMorphNodeBase {
	TArray<ObjectProperty> Targets; // 0x74
	TArray<FName> MorphNames; // 0x84
	TArray<float> Weights; // 0x94
};

struct UParticleModuleLocationWorldOffset_Seeded : UParticleModuleLocationWorldOffset {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x94
};

struct UTgEffectModifyProperty : UTgEffect {
	ObjectProperty m_TargetDeviceFire; // 0xa0
	int32_t m_eEquipPointTarget; // 0xa8
	TArray<float> m_fStaticValueOffsets; // 0xac
};

struct UTgGamePhase_UltAcceleration : UTgGamePhase {
	float m_fUltChargeRate; // 0xb8
};

struct UUIComponent_ChallengeToastEntry : UUIComponent_Display {
	ObjectProperty m_mcLock; // 0x124
	ObjectProperty m_mcTitle; // 0x12c
	ObjectProperty m_mcProgressText; // 0x134
	ObjectProperty m_mcCompleted; // 0x13c
	ObjectProperty m_pProgress; // 0x144
	float m_fOriginalXPos; // 0x14c
	float m_fWidth; // 0x150
	char m_bInitialized : 1; // 0x154
	char m_bAnimating : 1; // 0x154
	ToastSequence m_eAnimSequence; // 0x158
	float m_fAnimationTime; // 0x15c
};

struct ATgDevice_TiberiusUltSlam : ATgDevice_Leap {
	ObjectProperty m_CachedTiberius; // 0xa08
	float m_fUltSpamLockout; // 0xa10
};

struct AInventoryManager : AActor {
	ObjectProperty InventoryChain; // 0x280
	ObjectProperty PendingWeapon; // 0x288
	ObjectProperty LastAttemptedSwitchToWeapon; // 0x290
	char bMustHoldWeapon : 1; // 0x298
	TArray<int32_t> PendingFire; // 0x29c
};

struct UTgInventoryObject_Listen_ProcOnDamageThreshold : UTgInventoryObject_Listen_AbilityInstant {
	float m_fAccumulatedDamage; // 0xcc
	char m_bAppliedSinceLastFire : 1; // 0xd0
};

struct UTgDeviceForm_Scope : UTgDeviceForm_ToggleWithLockout {
	float m_fTransitionAmount; // 0x28c
	float m_fTransitionPerSec; // 0x290
};

struct UTgSeqAct_PauseSetupTimer : USequenceAction {
	char PauseImmediately : 1; // 0x108
	float PauseAtTimeRemaining; // 0x10c
};

struct UInterpTrackAkEvent : UInterpTrack {
	TArray<FAkEventTrackKey> AkEvents; // 0xa0
};

struct UTgDeviceForm_Thrust : UTgDeviceForm {
	TArray<ObjectProperty> m_FlyingBlendList1P; // 0x28c
	TArray<ObjectProperty> m_FlyingBlendList3P; // 0x29c
};

struct UNxForceFieldComponent : UPrimitiveComponent {
	ObjectProperty Shape; // 0x24c
	ComponentProperty DrawComponent; // 0x254
	int32_t ExcludeChannel; // 0x25c
	char bForceActive : 1; // 0x260
	char bDestroyWhenInactive : 1; // 0x260
	FRBCollisionChannelContainer CollideWithChannels; // 0x264
	float Duration; // 0x268
	FPointer ForceField; // 0x26c
	TArray<FPointer> ConvexMeshes; // 0x274
	TArray<FPointer> ExclusionShapes; // 0x284
	TArray<FPointer> ExclusionShapePoses; // 0x294
	int32_t SceneIndex; // 0x2a4
	float ElapsedTime; // 0x2a8
	ComponentProperty RenderComponent; // 0x2ac
	FPointer RBPhysScene; // 0x2b4
};

struct UUIData_StringList : UUIData {
	TArray<FString> sValues; // 0x64
};

struct UUIComponent_PlayRanked : UUIComponent_Display {
	char m_bPendingLoad : 1; // 0x124
	ObjectProperty m_mcDailyQueueBonusNotification; // 0x128
	ObjectProperty m_mcDailyQueueBonusNotificationTF; // 0x130
	ObjectProperty m_mcDailyQueueBonusIcon; // 0x138
	ObjectProperty m_pPanel; // 0x140
	ObjectProperty m_pRankedSnapshot; // 0x148
	ObjectProperty m_pJoinQueueButton; // 0x150
	ObjectProperty m_pRankedInfoButton; // 0x158
	ObjectProperty m_grInput; // 0x160
};

struct ATgProj_RaumStomp : ATgProj_Simulated {
	ObjectProperty m_StompDev; // 0x52c
	ObjectProperty m_StompFire; // 0x534
	float m_fNextDamageTickIn; // 0x53c
	float m_fDamageTickPeriod; // 0x540
	float m_fScaleIncreasePerFoot; // 0x544
	TArray<ObjectProperty> c_AlwaysOnFx; // 0x548
	FVector m_vCollideExtent; // 0x558
	float m_fCollisionHeightOffset; // 0x564
	float m_fProjectileElementFanAngle; // 0x568
	float m_fMaxStepUpAngle; // 0x56c
	float m_fTanMaxStepUpAngle; // 0x570
	float m_fStepUpCollisionDiagonal; // 0x574
	TArray<FStompElement> m_StompElements; // 0x578
};

struct UUIComponent_HeaderTabRotating : UUIComponent_Display {
	ObjectProperty m_pCTA; // 0x124
	ObjectProperty m_mcTwitchCTA; // 0x12c
	ObjectProperty m_mcSelected; // 0x134
	ObjectProperty m_mcSelectedTF; // 0x13c
	ObjectProperty m_mcSelectedIcon; // 0x144
	ObjectProperty m_mcSelectedBackground; // 0x14c
	ObjectProperty m_mcSelectedLoadoutsCTA; // 0x154
	ObjectProperty m_mcHighlight; // 0x15c
	ObjectProperty m_mcHighlightTF; // 0x164
	ObjectProperty m_mcHighlightIcon; // 0x16c
	ObjectProperty m_mcHighlightBackground; // 0x174
	ObjectProperty m_mcHighlightLoadoutsCTA; // 0x17c
	ObjectProperty m_mcShadow; // 0x184
	ObjectProperty m_mcShadowTF; // 0x18c
	ObjectProperty m_mcShadowIcon; // 0x194
	ObjectProperty m_mcShadowBackground; // 0x19c
	ObjectProperty m_mcShadowLoadoutsCTA; // 0x1a4
	char m_bShowLoadoutCTA : 1; // 0x1ac
};

struct UDOFAndBloomEffect : UDOFEffect {
	float BloomScale; // 0xb4
	float BloomThreshold; // 0xb8
	FColor BloomTint; // 0xbc
	float BloomScreenBlendThreshold; // 0xc0
	float SceneMultiplier; // 0xc4
	float BlurBloomKernelSize; // 0xc8
	char bEnableReferenceDOF : 1; // 0xcc
	EDOFType DepthOfFieldType; // 0xd0
	EDOFQuality DepthOfFieldQuality; // 0xd1
	ObjectProperty BokehTexture; // 0xd4
};

struct UPath_TowardPoint : UPathConstraint {
	FVector GoalPoint; // 0x6c
};

struct USoundNodeDoppler : USoundNode {
	float DopplerIntensity; // 0x74
};

struct UGFxInteraction : UInteraction {
	FPointer VfTable_FCallbackEventDevice; // 0xb0
	char bFakeMobileTouches : 1; // 0xb8
};

struct ATgDevice_ImaniDragonE : ATgDevice {
	ObjectProperty m_CachedImaniAvatar; // 0xa04
	float m_fUltCancelSafetyPeriod; // 0xa0c
};

struct ATgIdol : AActor {
	int32_t r_nDefenderTaskForce; // 0x280
	ObjectProperty m_Holder; // 0x284
	ObjectProperty r_HolderPRI; // 0x28c
	ObjectProperty m_OldHolder; // 0x294
};

struct UTgInvListener_ConsumeMarksForDamage : UTgInventoryObject_Listen_AddDamage {
	TArray<ObjectProperty> m_PendingMarkRemoval; // 0xc8
};

struct ATgProj_BombKingStickyBomb : ATgProj_FreeGrenade {
	char m_bExplodedOnShield : 1; // 0x580
	char m_bExplodedOnDeployGeomtry : 1; // 0x580
	char c_bReadyToHide : 1; // 0x580
	ObjectProperty m_CachedHitTarget; // 0x584
	FVector m_vCachedHitLocation; // 0x58c
	FVector m_vCachedHitNormal; // 0x598
};

struct USeqAct_GiveInventory : USequenceAction {
	TArray<AInventory*> InventoryList; // 0x108
	char bClearExisting : 1; // 0x118
	char bForceReplace : 1; // 0x118
};

struct ATgDevice_Restock : ATgDevice {
	ObjectProperty m_InhandWeapon; // 0xa04
};

struct UTgDeviceForm_KineticBurst : UTgDeviceForm {
	float RampUpTime; // 0x28c
	float RampDownTime; // 0x290
	ObjectProperty GlowMIC; // 0x294
};

struct USeqAct_DrawText : USequenceAction {
	float DisplayTimeSeconds; // 0x108
	char bDisplayOnObject : 1; // 0x10c
	FKismetDrawTextInfo DrawTextInfo; // 0x110
};

struct USeqEvent_MobileZoneBase : USeqEvent_MobileBase {
	FString TargetZoneName; // 0x128
};

struct UParticleModuleBeamTarget : UParticleModuleBeamBase {
	Beam2SourceTargetMethod TargetMethod; // 0x68
	Beam2SourceTargetTangentMethod TargetTangentMethod; // 0x69
	FName TargetName; // 0x6c
	FName TargetSocketName; // 0x74
	FRawDistributionVector Target; // 0x7c
	char bTargetAbsolute : 1; // 0xa0
	char bLockTarget : 1; // 0xa0
	char bLockTargetTangent : 1; // 0xa0
	char bLockTargetStength : 1; // 0xa0
	FRawDistributionVector TargetTangent; // 0xa4
	FRawDistributionFloat TargetStrength; // 0xc8
	float LockRadius; // 0xec
};

struct USeqAct_MultiplyInt : USeqAct_SetSequenceVariable {
	int32_t ValueA; // 0x108
	int32_t ValueB; // 0x10c
	float FloatResult; // 0x110
	int32_t IntResult; // 0x114
};

struct UUIScene_UISocial : UUIScene {
	ObjectProperty m_mcReferral; // 0x1cc
	ObjectProperty m_mcTimeTitle; // 0x1d4
	ObjectProperty m_pTimeSubtitle; // 0x1dc
	ObjectProperty m_pReferralRewards; // 0x1e4
	ObjectProperty m_pReferralLevels; // 0x1ec
	ObjectProperty m_pReferralFriends; // 0x1f4
	ObjectProperty m_pSendReferralButton; // 0x1fc
	ObjectProperty m_pReferredFriendsButton; // 0x204
	ObjectProperty m_pAddReferrerButton; // 0x20c
	ObjectProperty m_pReferralGroup; // 0x214
	ObjectProperty m_pFriends; // 0x21c
	ObjectProperty m_mcFriendInput; // 0x224
	ObjectProperty m_pAddFriend; // 0x22c
	ObjectProperty m_pFriendDetail; // 0x234
	ObjectProperty m_pParty; // 0x23c
	ObjectProperty m_pPartyAddFriend; // 0x244
	ObjectProperty m_mcPartyInput; // 0x24c
	ObjectProperty m_pAddParty; // 0x254
	ObjectProperty m_pPartyDetail; // 0x25c
	ObjectProperty m_pLeaveParty; // 0x264
	ObjectProperty m_mcPartyBonusActiveText; // 0x26c
	ObjectProperty m_mcPartyBonusIcon; // 0x274
	ObjectProperty m_mcPartyBonusFrame; // 0x27c
	ObjectProperty m_pViewProfileAction; // 0x284
	ObjectProperty m_pInviteByName; // 0x28c
	ObjectProperty m_pLeavePartyAction; // 0x294
	ObjectProperty m_pSuggestedFriendsAction; // 0x29c
};

struct UTgSeqAct_TriggerBots : USequenceAction {
	char bUseDestination : 1; // 0x108
	ObjectProperty TargetActor; // 0x10c
	ObjectProperty destActor; // 0x114
};

struct UUIComponent_IconTF : UUIComponent_Display {
	ObjectProperty m_mcIcon; // 0x124
};

struct UUIFooter : UTgGfxScene {
	ObjectProperty m_mcFrame; // 0x1ec
	ObjectProperty m_mcBack; // 0x1f4
	ObjectProperty m_mcBackTitle; // 0x1fc
	ObjectProperty m_mcSocial; // 0x204
	ObjectProperty m_mcSocialTitle; // 0x20c
	ObjectProperty m_mcOptions; // 0x214
	ObjectProperty m_mcOptionsTitle; // 0x21c
	ObjectProperty m_mcFriendsOnline; // 0x224
	ObjectProperty m_mcActivityCenter; // 0x22c
	ObjectProperty m_pSocialCTA; // 0x234
	ObjectProperty m_pActivityCenterCTA; // 0x23c
	char m_bOptionsEnabled : 1; // 0x244
};

struct UUIMatchLobby : UTgGfxScene {
	ObjectProperty m_akTabChange; // 0x1ec
	TArray<int32_t> m_nTencentRecommendedChampions; // 0x1f4
};

struct ATgDevice_NinjaAltInhand : ATgDevice {
	char c_bAlreadyConsumedStamina : 1; // 0xa04
	ObjectProperty m_CachedKoga; // 0xa08
};

struct UUIComponent_GemPack : UUIComponent_Display {
	ObjectProperty m_pPrice; // 0x124
	ObjectProperty m_pCrystalAmount; // 0x12c
	ObjectProperty m_pButtonPrice; // 0x134
	ObjectProperty m_pBuyNowButton; // 0x13c
	int32_t m_nPackId; // 0x144
	float m_fSeasonPassCrystalMultiplier; // 0x148
};

struct ATgActorFactory : AActor {
	int32_t m_nMapObjectId; // 0x280
	char s_bAutoSpawn : 1; // 0x284
	int32_t s_nTeamNumber; // 0x288
	char s_nTaskForce; // 0x28c
	MinimapFactoryType m_MinimapType; // 0x28d
	eSelectionMethod s_eSelectionMethod; // 0x28e
	int32_t s_nSelectionListId; // 0x290
	int32_t s_nSelectedObjectId; // 0x294
	int32_t m_nSelectionListPropId; // 0x298
	int32_t s_nNameId; // 0x29c
	int32_t s_nFactoryId; // 0x2a0
	ObjectProperty m_FRI; // 0x2a4
	ATgRepInfo_Factory* m_FRIClass; // 0x2ac
	int32_t s_nCurListIndex; // 0x2b4
	ComponentProperty m_WorldIconSprite; // 0x2b8
};

struct UTgInventoryObject_Listen_Exaction : UTgInventoryObject_Listen_FirstShotAfterMovementAbility {
	ObjectProperty m_CachedFiremode; // 0xd4
};

struct ANxTornadoAngularForceField : ANxForceField {
	float RadialStrength; // 0x2d4
	float RotationalStrength; // 0x2d8
	float LiftStrength; // 0x2dc
	float ForceRadius; // 0x2e0
	float ForceTopRadius; // 0x2e4
	float LiftFalloffHeight; // 0x2e8
	float EscapeVelocity; // 0x2ec
	float ForceHeight; // 0x2f0
	float HeightOffset; // 0x2f4
	char BSpecialRadialForceMode : 1; // 0x2f8
	float SelfRotationStrength; // 0x2fc
	FPointer Kernel; // 0x300
};

struct UTgAnimNodeAdditiveBlending : UAnimNodeAdditiveBlending {
	char m_bSetStrengthFromAnimNode : 1; // 0x128
	char m_bInvertStrengthFromAnimNode : 1; // 0x128
	char m_bInitializedCachedNodeList : 1; // 0x128
	TArray<FName> m_StrengthAnimNodeNameList; // 0x12c
	TArray<ObjectProperty> m_CachedNodeList; // 0x13c
};

struct UTgDeviceForm_DemonInhand : UTgDeviceForm {
	char m_bFiredFromLeft : 1; // 0x28c
	FName c_nmSocketLeft; // 0x290
	FName c_nmSocketRight; // 0x298
};

struct UUIComponent_HudSkillIcon : UUIComponent_Display {
	ObjectProperty m_mcSkill; // 0x124
	ObjectProperty m_mcSkillBtn; // 0x12c
	ObjectProperty m_mcSkillKey; // 0x134
	ObjectProperty m_mcSkillIcon; // 0x13c
	ObjectProperty m_mcSkillIconTexture; // 0x144
	ObjectProperty m_mcSkillCDBot; // 0x14c
	ObjectProperty m_mcSkillCDTop; // 0x154
	ObjectProperty m_mcSkillTimer; // 0x15c
	ObjectProperty m_mcSkillPulse; // 0x164
	ObjectProperty m_mcSkillReady; // 0x16c
	ObjectProperty m_mcSkillActive; // 0x174
	ObjectProperty m_mcSkillMouse; // 0x17c
	ObjectProperty m_mcSkillAmmo; // 0x184
	ObjectProperty m_mcSkillShadow; // 0x18c
	ObjectProperty m_mcSkillRarity; // 0x194
	char m_bThirdPerson : 1; // 0x19c
	char m_bUsingIconOverride : 1; // 0x19c
	int32_t m_nSkillIconIndex; // 0x1a0
	int32_t m_nSkillId; // 0x1a4
	int32_t m_nSkillAmmo; // 0x1a8
	int32_t m_nSkillActive; // 0x1ac
	int32_t m_nSkillStatus; // 0x1b0
	float m_fSkillCharge; // 0x1b4
	float m_fSkillChargeTime; // 0x1b8
	int32_t m_nSkillRarity; // 0x1bc
	float m_fReadyTimer; // 0x1c0
	FString m_sSkillBind; // 0x1c4
	int32_t m_nCardAnimCallback; // 0x1d4
};

struct UUIComponent_EventChallengeHubListItem : UUIComponent_Display {
	ObjectProperty m_mcLock; // 0x124
	ObjectProperty m_mcHighlight; // 0x12c
	ObjectProperty m_mcName; // 0x134
	ObjectProperty m_pProgress; // 0x13c
	ObjectProperty m_mcProgressText; // 0x144
};

struct UClipPadEntry : UObject {
	FString Title; // 0x60
	FString Text; // 0x70
};

struct ATgPawn_MalDamba : ATgPawn_Character {
	ObjectProperty m_CachedSnakeTossDeviceFire; // 0x3160
};

struct UUIComponent_ReportPopup : UUIComponent_Display {
	ObjectProperty m_mcTitle; // 0x124
	ObjectProperty m_mcReportInput; // 0x12c
	ObjectProperty m_pReportReasons; // 0x134
	ObjectProperty m_pBack; // 0x13c
	ObjectProperty m_grPopup; // 0x144
};

struct UMcpUserCloudFileDownload : UMcpServiceBase {
	FString EnumerateCloudFilesUrl; // 0x78
	FString ReadCloudFileUrl; // 0x88
	FString WriteCloudFileUrl; // 0x98
	FString DeleteCloudFileUrl; // 0xa8
	TArray<FMcpUserCloudFilesEntry> UserCloudFileRequests; // 0xb8
	TArray<DelegateProperty> EnumerateUserFilesCompleteDelegates; // 0xc8
	TArray<DelegateProperty> ReadUserFileCompleteDelegates; // 0xd8
	TArray<DelegateProperty> WriteUserFileCompleteDelegates; // 0xe8
	TArray<DelegateProperty> DeleteUserFileCompleteDelegates; // 0xf8
	DelegateProperty __OnEnumerateUserFilesComplete__Delegate; // 0x108
	DelegateProperty __OnReadUserFileComplete__Delegate; // 0x118
	DelegateProperty __OnWriteUserFileComplete__Delegate; // 0x128
	DelegateProperty __OnDeleteUserFileComplete__Delegate; // 0x138
};

struct ATgDevice_VanguardGrab : ATgDevice_Charge {
	ObjectProperty m_CachedVanguard; // 0xa78
	ObjectProperty m_GrabTarget; // 0xa80
	char c_bServerChargeEnded : 1; // 0xa88
};

struct ATgChaosCapturePoint_ParticleStorm : ATgChaosCapturePoint {
	ObjectProperty m_FrontEffect; // 0x3a0
	ObjectProperty m_SwirlEffect; // 0x3a8
	float m_fFogStartDistance; // 0x3b0
	float m_fFogConvergeSpeed; // 0x3b4
	float m_fSecondsBeforeFogConverge; // 0x3b8
	float m_fFogMapDistance; // 0x3bc
	float m_fFogRadiusRatio; // 0x3c0
	float m_fFogAlphaRatio; // 0x3c4
	ObjectProperty m_2DSoundActor; // 0x3c8
	int32_t m_nNumMobileSoundActors; // 0x3d0
	TArray<ObjectProperty> m_MobileSoundActors; // 0x3d4
	ObjectProperty m_MobileSoundActorAkEvent; // 0x3e4
	ObjectProperty m_MobileSoundActorAkEvent_Alt; // 0x3ec
	TArray<FVector> m_vPerimeterAnchors; // 0x3f4
	float m_fTargetStartDistance; // 0x404
	float m_fPreviousStartDistance; // 0x408
	float m_fFogUpdateTimestamp; // 0x40c
	float m_fSoundActorConvergeLimit; // 0x410
};

struct UTitleFileDownloadCache : UMCPBase {
	TArray<FTitleFileCacheEntry> TitleFiles; // 0x80
	TArray<DelegateProperty> LoadCompleteDelegates; // 0x90
	TArray<DelegateProperty> SaveCompleteDelegates; // 0xa0
	DelegateProperty __OnLoadTitleFileComplete__Delegate; // 0xb0
	DelegateProperty __OnSaveTitleFileComplete__Delegate; // 0xc0
};

struct UTgSkelCon_Spinner : USkelControlSingleBone {
	float m_fDegreesPerSecond; // 0x100
	FVector m_vAxis; // 0x104
	char m_PreviewStartStop : 1; // 0x110
	char m_bIsSpinning : 1; // 0x110
	char m_bSpinningUp : 1; // 0x110
	char m_bSpinningDown : 1; // 0x110
	char m_bSpinDownToZero : 1; // 0x110
	char m_bRotateToTargetRotation : 1; // 0x110
	float m_fSpinUpTime; // 0x114
	float m_fSpinDownTime; // 0x118
	float m_fCurrentDegreesPerSecond; // 0x11c
	FRotator m_TargetRotation; // 0x120
	float m_TimeToInterpToTargetRotation; // 0x12c
	int32_t m_nRotationSpeedState; // 0x130
	TArray<float> m_fRotationSpeedStateMultipliers; // 0x134
};

struct ATgDevice_AccursedArmGun : ATgDevice {
	ObjectProperty m_AccursedArm; // 0xa04
};

struct UAnimationCompressionAlgorithm_PerTrackCompression : UAnimationCompressionAlgorithm_RemoveLinearKeys {
	float MaxZeroingThreshold; // 0x94
	float MaxPosDiffBitwise; // 0x98
	float MaxAngleDiffBitwise; // 0x9c
	TArray<AnimationCompressionFormat> AllowedRotationFormats; // 0xa0
	TArray<AnimationCompressionFormat> AllowedTranslationFormats; // 0xb0
	char bResampleAnimation : 1; // 0xc0
	char bUseAdaptiveError : 1; // 0xc0
	char bUseOverrideForEndEffectors : 1; // 0xc0
	char bUseAdaptiveError2 : 1; // 0xc0
	float ResampledFramerate; // 0xc4
	int32_t MinKeysForResampling; // 0xc8
	int32_t TrackHeightBias; // 0xcc
	float ParentingDivisor; // 0xd0
	float ParentingDivisorExponent; // 0xd4
	float RotationErrorSourceRatio; // 0xd8
	float TranslationErrorSourceRatio; // 0xdc
	float MaxErrorPerTrackRatio; // 0xe0
	float PerturbationProbeSize; // 0xe4
	FPointer PerReductionCachedData; // 0xe8
};

struct ATgDevice_Turret : ATgDevice_Pet {
	int32_t m_FlameTurretID; // 0xa04
	int32_t m_MegaTurretID; // 0xa08
	int32_t m_LockdownTurretID; // 0xa0c
	FVector m_SpawnLocationOverride; // 0xa10
	char m_bLockdownIsOn : 1; // 0xa1c
	char m_bHasFlamethrowerTurret : 1; // 0xa1c
	char m_bHasMegaTurret : 1; // 0xa1c
};

struct UTgSeqAct_AddAnimSets : USequenceAction {
	TArray<ObjectProperty> m_MaleAnimSets; // 0x108
	TArray<ObjectProperty> m_FemaleAnimSets; // 0x118
	char m_bAppendToExisting : 1; // 0x128
};

struct USeqEvent_TakeDamage : USequenceEvent {
	float MinDamageAmount; // 0x128
	float DamageThreshold; // 0x12c
	TArray<UDamageType*> DamageTypes; // 0x130
	TArray<UDamageType*> IgnoreDamageTypes; // 0x140
	float CurrentDamage; // 0x150
	char bResetDamageOnToggle : 1; // 0x154
};

struct UMorphTargetSet : UObject {
	TArray<ObjectProperty> Targets; // 0x60
	ObjectProperty BaseSkelMesh; // 0x70
	FArray_Mirror RawWedgePointIndices; // 0x78
};

struct UInterpTrackColorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0xb8
};

struct UTgAIUtilityFunction : UTgAIUtility {
	float MinInput; // 0xbc
	float MaxInput; // 0xc0
	EGraphType FunctionType; // 0xc4
	float DesiredValue; // 0xc8
	float UtilityScale; // 0xcc
	char bInvert : 1; // 0xd0
};

struct UTgDeviceFire_DruidRMBTargeting : UTgDeviceFire_WorldLOSOnly {
	float m_fServerScaleBufferMult; // 0x268
	float m_fBaseEncroachmentActorRange; // 0x26c
	float m_fScaleYZ; // 0x270
	char m_bFindBestSelection : 1; // 0x274
};

struct UGameCrowdAgentBehavior : UObject {
	ECrowdBehaviorEvent MyEventType; // 0x60
	ECrowdBehaviorEvent ViralBehaviorEvent; // 0x61
	float DurationOfBehavior; // 0x64
	float TimeUntilStopBehavior; // 0x68
	char bIdleBehavior : 1; // 0x6c
	char bFaceActionTargetFirst : 1; // 0x6c
	char bIsViralBehavior : 1; // 0x6c
	char bPassOnIsViralBehaviorFlag : 1; // 0x6c
	ObjectProperty ActionTarget; // 0x70
	float MaxPlayerDistance; // 0x78
	float ViralRadius; // 0x7c
	float DurationBeforeBecomesViral; // 0x80
	float TimeToBecomeViral; // 0x84
	float DurationOfViralBehaviorPropagation; // 0x88
	float TimeToStopPropagatingViralBehavior; // 0x8c
	ObjectProperty MyAgent; // 0x90
	FColor DebugBehaviorColor; // 0x98
};

struct ATgDevice_CorvusUlt : ATgDevice {
	FPointer VfTable_ITgDeviceInterface_MoveSpeedMultiplier; // 0xa04
	ObjectProperty m_CachedCorvus; // 0xa0c
	ObjectProperty m_CorvusUltFireDevice; // 0xa14
};

struct UParticleModuleTypeDataRibbon : UParticleModuleTypeDataBase {
	int32_t MaxTessellationBetweenParticles; // 0x68
	int32_t SheetsPerTrail; // 0x6c
	int32_t MaxTrailCount; // 0x70
	int32_t MaxParticleInTrailCount; // 0x74
	char bDeadTrailsOnDeactivate : 1; // 0x78
	char bDeadTrailsOnSourceLoss : 1; // 0x78
	char bClipSourceSegement : 1; // 0x78
	char bEnablePreviousTangentRecalculation : 1; // 0x78
	char bTangentRecalculationEveryFrame : 1; // 0x78
	char bSpawnInitialParticle : 1; // 0x78
	char bRenderGeometry : 1; // 0x78
	char bRenderSpawnPoints : 1; // 0x78
	char bRenderTangents : 0; // 0x78
	char bRenderTessellation : 0; // 0x78
	char bEnableTangentDiffInterpScale : 0; // 0x78
	ETrailsRenderAxisOption RenderAxis; // 0x7c
	float TangentSpawningScalar; // 0x80
	float TilingDistance; // 0x84
	float DistanceTessellationStepSize; // 0x88
	float TangentTessellationScalar; // 0x8c
};

struct UAnimMetaData_SkelControl : UAnimMetaData {
	TArray<FName> SkelControlNameList; // 0x60
	char bFullControlOverController : 1; // 0x70
	FName SkelControlName; // 0x74
};

struct ATgDevice_DoubleCharge : ATgDevice_Charge {
	int32_t m_nTotalNumShots; // 0xa78
	int32_t m_nShotsFired; // 0xa7c
};

struct UMobileMenuInventory : UMobileMenuObject {
	TArray<ObjectProperty> Slots; // 0xdc
	TArray<ObjectProperty> Items; // 0xec
	float SideLeewayPercent; // 0xfc
	FRenderElementInfo CurrentElement; // 0x100
	FDragElementInfo Drag; // 0x108
	FVector2D ScaleSize; // 0x130
	char bRenderDragItem : 1; // 0x138
	DelegateProperty __OnUpdateItemInSlot__Delegate; // 0x13c
	DelegateProperty __DoCanPutItemInSlot__Delegate; // 0x14c
	DelegateProperty __OnUpdateDrag__Delegate; // 0x15c
};

struct UTgAnimNodeStanceFireIntercept : UTgAnimNodeBlendList {
	int32_t m_nStanceToAllow; // 0x168
	int32_t m_nCurrentStance; // 0x16c
};

struct UApexDestructibleDamageParameters : UObject {
	TArray<FDamagePair> DamageMap; // 0x60
};

struct UUISubtitle : UTgGfxScene {
	float m_fTimer; // 0x1ec
	float m_fSwitchTimer; // 0x1f0
	FString m_sNewSubtitle; // 0x1f4
	ObjectProperty m_mcText; // 0x204
	ObjectProperty m_mcFrame; // 0x20c
};

struct UNavMeshGoalFilter_NotNearOtherAI : UNavMeshGoal_Filter {
	float DistanceToCheck; // 0x6c
};

struct ATgPawn_Biped : ATgPawn {
	FName m_nmLeftFootBone; // 0x2e9c
	FName m_nmRightFootBone; // 0x2ea4
	FName m_nmLeftFootControlName; // 0x2eac
	FName m_nmRightFootControlName; // 0x2eb4
	float m_fOldLocationZ; // 0x2ebc
	char m_bEnableRightFootPlacement : 1; // 0x2ec0
	char m_bEnableLeftFootPlacement : 1; // 0x2ec0
	char m_bMayDisableFootIKFromAnimNodes : 1; // 0x2ec0
	char m_bInitializedFootIKCachedNodeList : 1; // 0x2ec0
	char m_bApplyLeftHandWeaponIK : 1; // 0x2ec0
	char m_bSetHandIKStrengthFromAnimNodes : 1; // 0x2ec0
	char m_bInitializedHandIKCachedNodeList : 1; // 0x2ec0
	char c_bPlayingRefire : 1; // 0x2ec0
	char c_bRefireIsUpperBody : 0; // 0x2ec0
	float m_fZSmoothingRate; // 0x2ec4
	float m_fMaxFootPlacementDistSquared; // 0x2ec8
	ObjectProperty m_LeftLegControl; // 0x2ecc
	ObjectProperty m_RightLegControl; // 0x2ed4
	TArray<FName> m_FootIKZeroStrengthAnimNodeNameList; // 0x2edc
	TArray<ObjectProperty> m_FootIKZeroStrengthCachedNodeList; // 0x2eec
	FVector m_vPreviousRightFootPosition; // 0x2efc
	FVector m_vPreviousLeftFootPosition; // 0x2f08
	float m_fCachedRightTracedFloor; // 0x2f14
	float m_fCachedLeftTracedFloor; // 0x2f18
	float m_fCachedRightFloorNormalZ; // 0x2f1c
	float m_fCachedLeftFloorNormalZ; // 0x2f20
	int32_t m_nCachedLeftFootBoneIndex; // 0x2f24
	int32_t m_nCachedRightFootBoneIndex; // 0x2f28
	FName m_SkelControl_LeftHandName; // 0x2f2c
	ObjectProperty m_SkelControl_LeftHand; // 0x2f34
	ObjectProperty m_SkelControl_LeftHandRotate; // 0x2f3c
	FName m_SkelControl_RightHandName; // 0x2f44
	ObjectProperty m_SkelControl_RightHand; // 0x2f4c
	ObjectProperty m_SkelControl_RightHandRotate; // 0x2f54
	ObjectProperty m_SkelControl_RightToLeftPropSwitch; // 0x2f5c
	TArray<FName> m_HandIKFullStrengthAnimNodeNameList; // 0x2f64
	TArray<FName> m_HandIKZeroStrengthAnimNodeNameList; // 0x2f74
	TArray<ObjectProperty> m_HandIKFullStengthCachedNodeList; // 0x2f84
	TArray<ObjectProperty> m_HandIKZeroStrengthCachedNodeList; // 0x2f94
	ObjectProperty m_FadeMaterialControllerBody; // 0x2fa4
	FName c_RefireBeginBlendAnimationName; // 0x2fac
	FName c_RefireEndBlendAnimationName; // 0x2fb4
	ObjectProperty c_RefireAnimSet; // 0x2fbc
	float c_fRefireDuration; // 0x2fc4
	float c_fRefireEndDuration; // 0x2fc8
};

struct UInterpData : USequenceVariable {
	float InterpLength; // 0xa0
	float PathBuildTime; // 0xa4
	TArray<ObjectProperty> InterpGroups; // 0xa8
	ObjectProperty CurveEdSetup; // 0xb8
	float EdSectionStart; // 0xc0
	float EdSectionEnd; // 0xc4
	char bShouldBakeAndPrune : 1; // 0xc8
	TArray<FAnimSetBakeAndPruneStatus> BakeAndPruneStatus; // 0xcc
	ObjectProperty CachedDirectorGroup; // 0xdc
};

struct UMcpUserManager : UMcpUserManagerBase {
	TArray<FMcpUserStatus> UserStatuses; // 0xb8
	FString RegisterUserMcpUrl; // 0xc8
	FString RegisterUserEmailUrl; // 0xd8
	FString RegisterUserFacebookUrl; // 0xe8
	FString QueryUserUrl; // 0xf8
	FString QueryUsersUrl; // 0x108
	FString DeleteUserUrl; // 0x118
	TArray<FRegisterUserRequest> RegisterUserRequests; // 0x128
	TArray<ObjectProperty> QueryUsersRequests; // 0x138
	TArray<ObjectProperty> DeleteUserRequests; // 0x148
};

struct UTgSeqVar_DamageType : USequenceVariable {
	UDamageType* DamageTypeValue; // 0xa0
};

struct UTgDeviceForm_CorvusDagger : UTgDeviceForm {
	TArray<ObjectProperty> m_CorvusDaggerNodes3p; // 0x28c
	TArray<ObjectProperty> m_CorvusDaggerNodes1p; // 0x29c
	TArray<ObjectProperty> m_CorvusNodes3p; // 0x2ac
	TArray<ObjectProperty> m_CorvusNodes1p; // 0x2bc
};

struct UTgDeviceForm_OracleInhand : UTgDeviceForm_Inhand {
	ObjectProperty m_CachedOracle; // 0x29c
	float c_fLastReceivedTransitionInTime; // 0x2a4
};

struct UTgAIBehaviorCondition_IsActiveReady : UTgAIBehaviorCondition {
	EActiveType ActiveType; // 0x98
};

struct UParticleModuleAccelerationBase : UParticleModule {
	char bAlwaysInWorldSpace : 1; // 0x68
};

struct UTgInvListener_CrackShot : UTgInvListener {
	TArray<FCrackShotBonusDamageTarget> m_Targets; // 0xc4
};

struct UTgAIBehaviorCondition_IsBotBehaviorState : UTgAIBehaviorCondition {
	EBotBehaviorState TestBehaviorState; // 0x98
};

struct UTgDataGroup_Game : UTgDataChunk {
	ObjectProperty m_PlayerData; // 0x158
	ObjectProperty m_TargetData; // 0x160
	ObjectProperty m_PlayerVitals; // 0x168
	ObjectProperty m_GameData; // 0x170
	ObjectProperty m_DevicesData; // 0x178
	ObjectProperty m_EffectData; // 0x180
};

struct UUIComponent_StringTitle : UUIComponent_String {
	ObjectProperty m_mcText; // 0x124
};

struct UUIProfileMini : UTgGfxScene {
	char m_bSearching : 1; // 0x1ec
	char m_bShowMinimize : 1; // 0x1ec
	ObjectProperty m_mcExit; // 0x1f0
	ObjectProperty m_mcSpinner; // 0x1f8
	ObjectProperty m_mcMinimize; // 0x200
	ObjectProperty m_mcSearching; // 0x208
	ObjectProperty m_mcSearchingTitle; // 0x210
	ObjectProperty m_mcSearchingSubtitle; // 0x218
	ObjectProperty m_SearchingCancel; // 0x220
	ObjectProperty m_pSearchingGamepadKey; // 0x228
	ObjectProperty m_mcPlayer; // 0x230
	ObjectProperty m_mcPlayerLevel; // 0x238
	ObjectProperty m_mcPlayerEquipableTitle; // 0x240
	ObjectProperty m_mcBoostAccount; // 0x248
	ObjectProperty m_mcBoostAccountIcon; // 0x250
	ObjectProperty m_mcBoostAccountFrame; // 0x258
	ObjectProperty m_mcBoostAccountTooltip; // 0x260
	ObjectProperty m_mcBoostAccountTooltipTitle; // 0x268
	ObjectProperty m_mcBoostAccountTooltipTimer; // 0x270
	ObjectProperty m_mcBoostAccountTooltipEntry[0x4]; // 0x278
	ObjectProperty m_mcBoostVIP; // 0x298
	ObjectProperty m_mcBoostVIPCount; // 0x2a0
	ObjectProperty m_mcBoostVIPIcon; // 0x2a8
	ObjectProperty m_mcBoostVIPFrame; // 0x2b0
	ObjectProperty m_mcBoostVIPTooltip; // 0x2b8
	ObjectProperty m_mcBoostVIPTooltipTitle; // 0x2c0
	ObjectProperty m_mcBoostVIPTooltipTimer; // 0x2c8
	ObjectProperty m_mcBoostVIPTooltipEntry[0x4]; // 0x2d0
	ObjectProperty m_mcParty; // 0x2f0
	ObjectProperty m_mcPartyCount; // 0x2f8
	ObjectProperty m_mcPartyIcon; // 0x300
	ObjectProperty m_mcPartyFrame; // 0x308
	ObjectProperty m_mcPartyTooltip; // 0x310
	ObjectProperty m_mcPartyTooltipTitle; // 0x318
	ObjectProperty m_mcPartyTooltipDesc; // 0x320
	ObjectProperty m_mcPartyTooltipIcon; // 0x328
	ObjectProperty m_mcPartyTooltipEntry0; // 0x330
	ObjectProperty m_mcPartyTooltipEntry1; // 0x338
	ObjectProperty m_mcPartyTooltipEntry2; // 0x340
	ObjectProperty m_mcTencentNetcafeStatus; // 0x348
	ObjectProperty m_mcTencentNetcafeTooltip; // 0x350
	ObjectProperty m_mcTencentNetcafeTooltipTitle; // 0x358
	ObjectProperty m_mcTencentNetcafeTooltipDesc; // 0x360
	ObjectProperty m_mcTencentNetcafeTooltipEntry0; // 0x368
	ObjectProperty m_PlayerLevelProgress; // 0x370
	ObjectProperty m_PlayerCurrency; // 0x378
	ObjectProperty m_PlayerName; // 0x380
	ObjectProperty m_Avatar; // 0x388
	ObjectProperty m_MatchInvite; // 0x390
};

struct ATgDevice_TiberiusLeapAssault : ATgDevice {
	ObjectProperty m_CachedTiberius; // 0xa04
};

struct UActorFactoryRigidBody : UActorFactoryDynamicSM {
	char bStartAwake : 1; // 0xb8
	char bDamageAppliesImpulse : 1; // 0xb8
	char bLocalSpaceInitialVelocity : 1; // 0xb8
	char bEnableStayUprightSpring : 1; // 0xb8
	FVector InitialVelocity; // 0xbc
	ComponentProperty AdditionalVelocity; // 0xc8
	ComponentProperty InitialAngularVelocity; // 0xd0
	ERBCollisionChannel RBChannel; // 0xd8
	float StayUprightTorqueFactor; // 0xdc
	float StayUprightMaxTorque; // 0xe0
};

struct UTgSoundEventsManager : UObject {
	char m_bInitialized : 1; // 0x60
	ENotifySound m_eLastEvent; // 0x64
	TArray<FTimestampedGameObjectId> m_GameObjectShutdownQueue; // 0x68
	TArray<FQueuedSoundEvent> m_DeferredEvents; // 0x78
};

struct UTgInventoryObject_Listen_DeployOnDeployable : UTgInvListener {
	TArray<int32_t> m_ValidDeployableIds; // 0xc4
};

struct ATgDevice_Vine : ATgDevice {
	ObjectProperty m_PullTarget; // 0xa04
	FVector m_vPullLocation; // 0xa0c
	char m_bCanBeCanceled : 1; // 0xa18
	char m_bMissedPull : 1; // 0xa18
	char m_bIsPulling : 1; // 0xa18
	char m_bHasPulledOnce : 1; // 0xa18
	char m_bTeleportedAfterFiring : 1; // 0xa18
};

struct ATgPawn_Furia : ATgPawn_Character {
	ObjectProperty r_RMBTarget; // 0x3160
	float m_fDelayTargetValid; // 0x3168
	float r_fHolyWrathBuff; // 0x316c
	char r_bStopFuriaQProjOnHit : 1; // 0x3170
	char r_bFuriaQHitAllies : 1; // 0x3170
	char m_bUltimateReadyDisplayGroupOn : 1; // 0x3170
	float c_fMinBladeGlow; // 0x3174
	float c_fMaxBladeGlow; // 0x3178
	float c_fMinCrystalGlow; // 0x317c
	float c_fMaxCrystalGlow; // 0x3180
	float m_fLastWrathAmt; // 0x3184
	int32_t m_nLastWrathTier; // 0x3188
	float m_fGravityMultiplier; // 0x318c
	float m_fMaxFallSpeed; // 0x3190
};

struct UUIComponent_DemonTeleportTimer : UUIComponent_Display {
	ObjectProperty m_mcTimerMask; // 0x124
	ObjectProperty m_CachedViewedDemon; // 0x12c
	float m_fCurrentTimerPct; // 0x134
	char m_bVisible : 1; // 0x138
};

struct UUIComponent_StoreEngagementItems : UUIComponent_Display {
	ObjectProperty m_mcItemNameTF; // 0x124
	ObjectProperty m_mcTimerTF; // 0x12c
	ObjectProperty m_mcEventPassFlag; // 0x134
	ObjectProperty m_mcOwned; // 0x13c
	ObjectProperty m_mcOwnedIcon; // 0x144
	ObjectProperty m_mcOwnedText; // 0x14c
	ObjectProperty m_EventPassNameTF; // 0x154
	ObjectProperty m_EventPassExtraTF; // 0x15c
	ObjectProperty m_pSkinItemList; // 0x164
	ObjectProperty m_pBoosterItemList; // 0x16c
	ObjectProperty m_grStoreEngagementItems; // 0x174
	ObjectProperty m_pItemPreviewStack; // 0x17c
	ObjectProperty m_PurchaseButtonEventPass; // 0x184
	TArray<ObjectProperty> m_InteractablePurchaseButtons; // 0x18c
	TArray<ObjectProperty> m_NavDots; // 0x19c
	ObjectProperty m_PurchaseButtonBooster; // 0x1ac
	int32_t m_LastSelectedItemIndex; // 0x1b4
	int32_t m_LastSelectedItemVendor; // 0x1b8
	char m_bOwnBattlePass : 1; // 0x1bc
	char m_bPauseAutoRotation : 1; // 0x1bc
	char m_bShouldPreviewBoosters : 1; // 0x1bc
	int32_t m_nIndex; // 0x1c0
	float m_fAutoRotationTime; // 0x1c4
	float m_fAutoRotationDelay; // 0x1c8
	ObjectProperty m_LeftArrow; // 0x1cc
	ObjectProperty m_RightArrow; // 0x1d4
	ObjectProperty m_mcLeftStick; // 0x1dc
	ObjectProperty m_mcRightStick; // 0x1e4
	ObjectProperty m_mcBoosterSelectedState; // 0x1ec
};

struct UParticleModuleKillBox : UParticleModuleKillBase {
	FRawDistributionVector LowerLeftCorner; // 0x68
	FRawDistributionVector UpperRightCorner; // 0x8c
	char bAbsolute : 1; // 0xb0
	char bKillInside : 1; // 0xb0
	char bAxisAlignedAndFixedSize : 1; // 0xb0
};

struct ATgDevice_AtlasInhand : ATgDevice {
	ObjectProperty m_CachedAtlas; // 0xa04
	float m_fLastFireHoldPct; // 0xa0c
	float m_fFireReleasePercent; // 0xa10
	float m_fReticleReleaseAnimationDuration; // 0xa14
	int32_t m_nSelectedFireLevel; // 0xa18
	int32_t m_nAmmoToRegain; // 0xa1c
};

struct UTgThreatModel : UObject {
	TArray<ObjectProperty> m_PawnsWithThreatLevels; // 0x60
	char m_bThreatSystemEnabled : 1; // 0x70
	char m_bOcclusionSystemEnabled : 1; // 0x70
	char m_bDebugThreatSystem : 1; // 0x70
	float m_fThreatCoefficientProximity; // 0x74
	float m_fThreatCoefficientOcclusion; // 0x78
	float m_fThreatCoefficientBinnedOcclusion; // 0x7c
	float m_fThreatCoefficientUlt; // 0x80
	float m_fThreatCoefficientShotAt; // 0x84
	float m_fThreatCoefficientSeenBy; // 0x88
	float m_fThreatCoefficientDamaged; // 0x8c
	float m_fThreatCoefficientFocused; // 0x90
	float m_fThreatCoefficientFocusTarget; // 0x94
	float m_fThreatDecayCoefficientShotAt; // 0x98
	float m_fThreatDecayCoefficientSeenBy; // 0x9c
	float m_fThreatDecayCoefficientUlt; // 0xa0
	FString m_DebugThreatSystemChannel; // 0xa4
};

struct UTgAIBehaviorAction_UseActive : UTgAIBehaviorAction {
	EActiveType ActiveType; // 0x94
};

struct UTgGamePhase_EndWhenScoreReached : UTgGamePhase {
	int32_t m_nScore; // 0xb8
};

struct USeqAct_ControlGameMovie : USeqAct_Latent {
	FString MovieName; // 0x120
	int32_t StartOfRenderingMovieFrame; // 0x130
	int32_t EndOfRenderingMovieFrame; // 0x134
};

struct UMaterialExpressionDepthBiasedAlpha : UMaterialExpression {
	char bNormalize : 1; // 0xb0
	float BiasScale; // 0xb4
	FExpressionInput Alpha; // 0xb8
	FExpressionInput Bias; // 0xec
};

struct UGFxAction_OpenMovie : USequenceAction {
	ObjectProperty Movie; // 0x108
	UGFxMoviePlayer* MoviePlayerClass; // 0x110
	ObjectProperty MoviePlayer; // 0x118
	char bTakeFocus : 1; // 0x120
	char bCaptureInput : 1; // 0x120
	char bStartPaused : 1; // 0x120
	char bEnableGammaCorrection : 1; // 0x120
	char bDisplayWithHudOff : 1; // 0x120
	GFxRenderTextureMode RenderTextureMode; // 0x124
	ObjectProperty RenderTexture; // 0x128
	TArray<FName> CaptureKeys; // 0x130
	TArray<FName> FocusIgnoreKeys; // 0x140
};

struct ATgBotFactory_Minions : ATgBotFactory {
	MinionFactoryType m_eFactoryType; // 0x370
	char m_OverrideShouldSpawnSuperMinions : 1; // 0x374
	int32_t m_nWaveNumber; // 0x378
	int32_t m_nLastBonusWave; // 0x37c
	int32_t m_nLanePushersInQueue; // 0x380
	float m_fLastBonusActivationTime; // 0x384
	float m_fSuperMinionEndTime; // 0x388
};

struct ATgPawn_TowerBase : ATgPawn_Structure {
	TArray<FNavMeshBorderEdges> BorderEdges; // 0x2ea4
	ObjectProperty c_BeamFX; // 0x2eb4
	ComponentProperty s_DamageScaler; // 0x2ebc
	int32_t m_nNumGuardianLevels; // 0x2ec4
	char r_bLocked : 1; // 0x2ec8
	char m_bShouldBeFaded : 1; // 0x2ec8
	float m_fTransparentFadeSpeed; // 0x2ecc
	float m_fMaxFadeTransparency; // 0x2ed0
	float m_fFadeDistance2D; // 0x2ed4
};

struct UMaterialExpressionAppendVector : UMaterialExpression {
	FExpressionInput A; // 0xb0
	FExpressionInput B; // 0xe4
};

struct UTgAnimBlendByPosture : UTgAnimNodeBlendList {
	ObjectProperty m_TgPawn; // 0x168
	ObjectProperty m_TgPostureMesh; // 0x170
	TG_POSTURE m_LastPosture; // 0x178
	TG_POSTURE m_CurrentPosture; // 0x179
	TG_POSTURE m_TransitionFromPosture; // 0x17a
	char m_bEnableTransitionAnims : 1; // 0x17c
	char m_bCheckLowerPriorityPostures : 1; // 0x17c
	int32_t m_CurrentPostureChildIndex; // 0x180
	TArray<Fm_PostureProfile> m_PostureProfiles; // 0x184
	ObjectProperty m_TransitionAnimNodeSeq; // 0x194
};

struct UUIComponent_CalendarEventEvents : UUIComponent_Display {
	ObjectProperty m_mcResetsAt; // 0x124
	ObjectProperty m_pDays; // 0x12c
	ObjectProperty m_pCurrentDay; // 0x134
	ObjectProperty m_pNextDay; // 0x13c
	ObjectProperty m_pTooltip; // 0x144
	ObjectProperty m_grEvents; // 0x14c
};

struct ANxForceFieldSpawnable : AActor {
	ComponentProperty ForceFieldComponent; // 0x280
};

struct UTgGameplayCurvesSet_Recoil : UTgGameplayCurvesSet {
	TArray<ObjectProperty> HorizRecoil; // 0x64
	TArray<ObjectProperty> VertRecoil; // 0x74
	EPaladinsRecoilType RecoilType; // 0x84
};

struct UUIScene_UIBattlePassXPPurchase : UUIScene {
	Fdword m_dwCurrentXP; // 0x1cc
	Fdword m_dwCurrentLevel; // 0x1d0
	Fdword m_dwPurchaseLevel; // 0x1d4
	Fdword m_dwPurchaseQuantity; // 0x1d8
	Fdword m_dwUnitQuantity; // 0x1dc
	ObjectProperty m_pPurchasePrice; // 0x1e0
	ObjectProperty m_pLTI; // 0x1e8
	ObjectProperty m_pLevelCouponLTI; // 0x1f0
	ObjectProperty m_mcTitle; // 0x1f8
	ObjectProperty m_mcPurchaseAmount; // 0x200
	ObjectProperty m_mcCurrentLevel; // 0x208
	ObjectProperty m_mcCurrentLevelTF; // 0x210
	ObjectProperty m_mcPurchaseLevel; // 0x218
	ObjectProperty m_mcPurchaseLevelTF; // 0x220
	ObjectProperty m_mcUnlockedRewards; // 0x228
	ObjectProperty m_pRewards; // 0x230
	ObjectProperty m_pHoldPrompt; // 0x238
	ObjectProperty m_pLeftArrow; // 0x240
	ObjectProperty m_pRightArrow; // 0x248
	ObjectProperty m_pCancelButton; // 0x250
	ObjectProperty m_pControllerPrice; // 0x258
	ObjectProperty m_pPurchaseButton; // 0x260
	ObjectProperty m_pLeftArrowAction; // 0x268
	ObjectProperty m_pLeftArrowRepeatAction; // 0x270
	ObjectProperty m_pRightArrowAction; // 0x278
	ObjectProperty m_pRightArrwRepeatAction; // 0x280
	ObjectProperty m_mcPSPlusIcon; // 0x288
	ObjectProperty m_mcPSPlusTF; // 0x290
	ObjectProperty m_mcWait; // 0x298
	ObjectProperty m_mcWaitSpinner; // 0x2a0
};

struct APylon : ANavigationPoint {
	FPointer VfTable_IEditorLinkSelectionInterface; // 0x378
	FPointer VfTable_IInterface_NavigationHandle; // 0x380
	FPointer NavMeshPtr; // 0x388
	FPointer ObstacleMesh; // 0x390
	FPointer DynamicObstacleMesh; // 0x398
	FPointer WorkingSetPtr; // 0x3a0
	FPointer PathObjectsThatAffectThisPylon; // 0x3a8
	TArray<FVector> NextPassSeedList; // 0x3b0
	FOctreeElementId OctreeId; // 0x3c0
	FPointer OctreeIWasAddedTo; // 0x3cc
	ObjectProperty NextPylon; // 0x3d4
	TArray<ObjectProperty> ExpansionVolumes; // 0x3dc
	float ExpansionRadius; // 0x3ec
	float MaxExpansionRadius; // 0x3f0
	ComponentProperty PylonRadiusPreview; // 0x3f4
	char bImportedMesh : 1; // 0x3fc
	char bUseExpansionSphereOverride : 1; // 0x3fc
	char bNeedsCostCheck : 1; // 0x3fc
	char bPylonInHighLevelPath : 1; // 0x3fc
	char bUseRecast : 1; // 0x3fc
	char bAllowRecastGenerator : 1; // 0x3fc
	char bDrawEdgePolys : 1; // 0x3fc
	char bDrawPolyBounds : 1; // 0x3fc
	char bRenderInShowPaths : 0; // 0x3fc
	char bDrawWalkableSurface : 0; // 0x3fc
	char bDrawObstacleSurface : 0; // 0x3fc
	char bSolidObstaclesInGame : 0; // 0x3fc
	char bBuildThisPylon : 0; // 0x3fc
	char bDisabled : 0; // 0x3fc
	char bForceObstacleMeshCollision : 0; // 0x3fc
	FVector ExpansionSphereCenter; // 0x400
	ComponentProperty RenderingComp; // 0x40c
	ComponentProperty BrokenSprite; // 0x414
	TArray<ObjectProperty> ImposterPylons; // 0x41c
	TArray<ObjectProperty> OnBuild_DisableCollisionForThese; // 0x42c
	TArray<ObjectProperty> OnBuild_EnableCollisionForThese; // 0x43c
	float MaxPolyHeight_Optional; // 0x44c
	char NavMeshGenerator; // 0x450
	TArray<FKAggregateGeom> VoxelFilterBounds; // 0x454
	TArray<FMatrix> VoxelFilterTM; // 0x464
	int32_t DebugEdgeCount; // 0x474
	FVector DebugPathExtent; // 0x478
	FVector DebugPathStartLocation; // 0x484
};

struct UUIComponent_Targeter : UUIComponent_Display {
	ObjectProperty m_Target; // 0x124
	ObjectProperty m_mcOwningScene; // 0x12c
	ObjectProperty m_mcParent; // 0x134
	ObjectProperty m_mcTargeter; // 0x13c
	ObjectProperty m_mcKey; // 0x144
	ObjectProperty m_mcPrompt; // 0x14c
	FString m_sKeybind; // 0x154
	char m_bVisible : 1; // 0x164
	char m_bPrevVisibility : 1; // 0x164
	char m_bShowKeybind : 1; // 0x164
	char m_bMoveKeybindBelowTarget : 1; // 0x164
	char m_bLOSCheck : 1; // 0x164
	char m_bCenterTargeter : 1; // 0x164
	float m_fBaseTargeterHeight; // 0x168
	float m_fScaleMultiplier; // 0x16c
	float m_fMinScale; // 0x170
	float m_fMaxScale; // 0x174
	float m_fFadeTime; // 0x178
	int32_t m_nTargeterFrame; // 0x17c
	float m_fHeightOffset; // 0x180
};

struct UGFxMoviePlayer : UObject {
	FPointer pMovie; // 0x60
	FPointer pCaptureKeys; // 0x68
	FPointer pFocusIgnoreKeys; // 0x70
	TMap<None, None> ASUClasses; // 0x78
	TMap<None, None> ASUObjects; // 0xc0
	int32_t NextASUObject; // 0x108
	ObjectProperty MovieInfo; // 0x10c
	char bMovieIsOpen : 1; // 0x114
	char bDisplayWithHudOff : 1; // 0x114
	char bEnableGammaCorrection : 1; // 0x114
	char bWidgetsInitializedThisFrame : 1; // 0x114
	char bLogUnhandedWidgetInitializations : 1; // 0x114
	char bAllowInput : 1; // 0x114
	char bAllowFocus : 1; // 0x114
	char bAutoPlay : 1; // 0x114
	char bPauseGameWhileActive : 0; // 0x114
	char bDisableWorldRendering : 0; // 0x114
	char bCaptureWorldRendering : 0; // 0x114
	char bCloseOnLevelChange : 0; // 0x114
	char bOnlyOwnerFocusable : 0; // 0x114
	char bForceFullViewport : 0; // 0x114
	char bDiscardNonOwnerInput : 0; // 0x114
	char bCaptureInput : 0; // 0x114
	char bCaptureMouseInput : 0; // 0x114
	char bIgnoreMouseInput : 0; // 0x114
	char bIsSplitscreenLayoutModified : 0; // 0x114
	char bShowHardwareMouseCursor : 0; // 0x114
	char bBlurLesserMovies : 0; // 0x114
	char bHideLesserMovies : 0; // 0x114
	char bIsPriorityBlurred : 0; // 0x114
	char bIsPriorityHidden : 0; // 0x114
	char bIgnoreVisibilityEffect : 0; // 0x114
	char bIgnoreBlurEffect : 0; // 0x114
	ObjectProperty RenderTexture; // 0x118
	int32_t LocalPlayerOwnerIndex; // 0x120
	ObjectProperty ExternalInterface; // 0x124
	TArray<FName> CaptureKeys; // 0x12c
	TArray<FName> FocusIgnoreKeys; // 0x13c
	TArray<FExternalTexture> ExternalTextures; // 0x14c
	TArray<FSoundThemeBinding> SoundThemes; // 0x15c
	GFxTimingMode TimingMode; // 0x16c
	GFxRenderTextureMode RenderTextureMode; // 0x16d
	char Priority; // 0x16e
	TArray<FGFxWidgetBinding> WidgetBindings; // 0x170
	TMap<None, None> WidgetPathBindings; // 0x180
	ObjectProperty SplitscreenLayoutObject; // 0x1c8
	int32_t SplitscreenLayoutYAdjust; // 0x1d0
	FGFxStoredViewportParams m_StoredViewportParams; // 0x1d4
	DelegateProperty __OnPostAdvance__Delegate; // 0x1e8
};

struct ATgPawn_VoodooTotem : ATgPawn_Pet {
	ObjectProperty r_linkedEnemies[0x5]; // 0x2ef8
	int32_t nBreakDist; // 0x2f20
	int32_t m_nBeamFXID; // 0x2f24
	ObjectProperty m_BeamFXs[0x5]; // 0x2f28
	float fDamageAmount; // 0x2f50
};

struct UUIComponent_MatchInviteWithJoin : UUIComponent_MatchInvite {
	ObjectProperty m_mcFade; // 0x14c
	ObjectProperty m_mcSubtitle; // 0x154
	ObjectProperty m_mcPrompt; // 0x15c
	ObjectProperty m_pButton; // 0x164
	ObjectProperty m_pJoinAction; // 0x16c
	ObjectProperty m_akShown; // 0x174
	ObjectProperty m_akSelect; // 0x17c
	ObjectProperty m_QueuePopWaveform; // 0x184
};

struct UMaterialExpressionAntialiasedTextureMask : UMaterialExpressionTextureSampleParameter2D {
	float Threshold; // 0x140
	ETextureColorChannel Channel; // 0x144
};

struct USoundNodeDistanceCrossFade : USoundNode {
	TArray<FDistanceDatum> CrossFadeInput; // 0x74
};

struct ATgInterpolatingCameraActor : ACameraActor {
	TArray<FInterpolatingCameraInfo> m_CameraArray; // 0x420
	int32_t m_nCurrentCameraIndex; // 0x430
	float m_fCurrentInterpValue; // 0x434
	float m_fTargetInterpValue; // 0x438
};

struct UPComInputLightingEffect : UObject {
	char bAllowLogitechSdk : 1; // 0x60
	char bLogitechSdkInitialized : 1; // 0x60
	char bLatchedSystemSettingsSdkAllowed : 1; // 0x60
	TArray<FPComInputLightingPreset> Presets; // 0x64
	FMap_Mirror PresetsMap; // 0x74
	TArray<FPComActiveInputLightingPreset> ActivePresets; // 0xbc
	FLinearColor BlendFromColor; // 0xcc
	float BlendPercent; // 0xdc
};

struct UTgAnimNodeChannelFire_Spite : UTgAnimNodeChannelFire {
	SpiteAnimState m_eAnimState; // 0x180
};

struct UTgInventoryObject_Listen_SpawnTeamHealthNugget : UTgInvListener {
	ObjectProperty m_NuggetSpawnFX; // 0xc4
	int32_t m_NuggetSpawnFXID; // 0xcc
	char m_bUseCV1ForSpawnChance : 1; // 0xd0
};

struct UMobilePlayerInput : UPlayerInput {
	FTouchData Touches[0x5]; // 0x2d4
	ObjectProperty InteractiveObject; // 0x464
	FDouble InteractiveObjectLastTime; // 0x46c
	TArray<FMobileInputGroup> MobileInputGroups; // 0x474
	int32_t CurrentMobileGroup; // 0x484
	TArray<ObjectProperty> MobileInputZones; // 0x488
	TArray<FMobileInputZoneClassMap> MobileInputZoneClasses; // 0x498
	float MobilePitch; // 0x4a8
	float MobilePitchCenter; // 0x4ac
	float MobilePitchMultiplier; // 0x4b0
	float MobileYaw; // 0x4b4
	float MobileYawCenter; // 0x4b8
	float MobileYawMultiplier; // 0x4bc
	float MobilePitchDeadzoneSize; // 0x4c0
	float MobileYawDeadzoneSize; // 0x4c4
	float MobileDoubleTapTime; // 0x4c8
	float MobileMinHoldForTap; // 0x4cc
	float MobileTapRepeatTime; // 0x4d0
	char bAllowTouchesInCinematic : 1; // 0x4d4
	char bDisableTouchInput : 1; // 0x4d4
	char bAbsoluteTouchLocations : 1; // 0x4d4
	char bCollapseTouchInput : 1; // 0x4d4
	char bFakeMobileTouches : 1; // 0x4d4
	char bDisableSceneRender : 1; // 0x4d4
	float ZoneTimeout; // 0x4d8
	TArray<ObjectProperty> MobileMenuStack; // 0x4dc
	FString NativeDebugString; // 0x4ec
	float MobileInactiveTime; // 0x4fc
	TArray<ObjectProperty> MobileSeqEventHandlers; // 0x500
	TArray<ObjectProperty> MobileRawInputSeqEventHandlers; // 0x510
	FVector2D MobileViewportOffset; // 0x520
	FVector2D MobileViewportSize; // 0x528
	DelegateProperty __OnTouchNotHandledInMenu__Delegate; // 0x530
	DelegateProperty __OnPreviewTouch__Delegate; // 0x540
	DelegateProperty __OnInputTouch__Delegate; // 0x550
};

struct ATgPawn_Saati : ATgPawn_Character {
	char m_bUltimateReadyDisplayGroupOn : 1; // 0x3160
	char m_bHasDecoyTalent : 1; // 0x3160
};

struct UTgAIBehaviorAction_SelectLaneMoveTarget : UTgAIBehaviorAction {
	char bMustBeEnemy : 1; // 0x94
	char bMustBePhoenix : 1; // 0x94
	char bMustBeSameLane : 1; // 0x94
};

