// Created by BlueFire1337
// Updated 2022-01-27
// Generated 2022-02-02

namespace off {
	constexpr auto GNames = 0x738a640;
	constexpr auto GObjects = 0x73a3020;
	constexpr auto GWorld = 0x74ebab0;
	constexpr auto GetDecryptArgFn = 0x29ba150;
	constexpr auto DecryptNameEntryFn = 0x2810e90;
}

struct AWheeledVehicle : APawn {
	USkeletalMeshComponent* Mesh; // 0x398
	UWheeledVehicleMovementComponent* VehicleMovement; // 0x3a0
};

struct UUW-MouseRightClick_C : UUserWidget {
	UWidgetAnimation* Ani_MouseRight; // 0x248
	UImage* Image; // 0x250
	UImage* Image_2; // 0x258
	UImage* Image_292; // 0x260
	UImage* Image_503; // 0x268
};

struct UBravoHotelSceneCaptureComponent2D : USceneCaptureComponent2D {
	float TickRate; // 0x938
};

struct UGamePlayWidget_C : UBravoHotelSettingSubWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	USlotItemWidget_C* AmmoEffect; // 0x2a0
	USlotItemWidget_C* AR; // 0x2a8
	USlotItemWidget_C* AutoLadder; // 0x2b0
	USlotItemWidget_C* autoReload; // 0x2b8
	USlotItemWidget_C* AutoUseMedicalLv1; // 0x2c0
	USlotItemWidget_C* AutoUseMedicalLv2; // 0x2c8
	USlotItemWidget_C* AutoUseMedicalLv3; // 0x2d0
	USlotItemWidget_C* BlueBoostEffect; // 0x2d8
	USlotItemWidget_C* CrossHair; // 0x2e0
	USubTitleSlotWidget_C* CustsomUseItem; // 0x2e8
	USlotItemWidget_C* DMR; // 0x2f0
	USlotItemWidget_C* GreenBoostEffect; // 0x2f8
	USlotItemWidget_C* ImmediateAttachment; // 0x300
	USlotItemWidget_C* InheritAttachment; // 0x308
	USubTitleSlotWidget_C* inventory; // 0x310
	USlotItemWidget_C* InventoryOrder; // 0x318
	USlotItemWidget_C* InventoryScrollSpeed; // 0x320
	USlotItemWidget_C* MedicalLv1Effect; // 0x328
	USlotItemWidget_C* MedicalLv2Effect; // 0x330
	USlotItemWidget_C* MedicalLv3Effect; // 0x338
	USlotItemWidget_C* NetworkDebug; // 0x340
	USlotItemWidget_C* Pistol; // 0x348
	USlotItemWidget_C* RedBoostEffect; // 0x350
	UScrollBox* ScrollBox_55; // 0x358
	USlotItemWidget_C* SearchExpertWeaponMaterialItem; // 0x360
	USlotItemWidget_C* SearchMaterialItem; // 0x368
	USlotItemWidget_C* ShowDamageLog; // 0x370
	USlotItemWidget_C* ShowGuideWidget; // 0x378
	USlotItemWidget_C* ShowPerkSlot; // 0x380
	USlotItemWidget_C* ShowSmartPing; // 0x388
	USlotItemWidget_C* ShowSmartPingLightPole; // 0x390
	USlotItemWidget_C* ShowSmartPingSupplyBox; // 0x398
	USlotItemWidget_C* ShowUseaableItemEffect; // 0x3a0
	USlotItemWidget_C* SMG; // 0x3a8
	USlotItemWidget_C* SR; // 0x3b0
	USlotItemWidget_C* Tutorial; // 0x3b8
	USlotItemWidget_C* Tutorial_RePlay; // 0x3c0
	USlotItemWidget_C* UseItem1; // 0x3c8
	USlotItemWidget_C* UseItem2; // 0x3d0
	USlotItemWidget_C* UseItem3; // 0x3d8
	USlotItemWidget_C* UseItem4; // 0x3e0
	USlotItemWidget_C* UseItem5; // 0x3e8
	USlotItemWidget_C* UseItem6; // 0x3f0
	USlotItemWidget_C* UseItem7; // 0x3f8
	USlotItemWidget_C* UseItem8; // 0x400
	UVerticalBox* VerticalBox_154; // 0x408
	USubTitleSlotWidget_C* z; // 0x410
	USubTitleSlotWidget_C* яд; // 0x418
	USubTitleSlotWidget_C* pt; // 0x420
	FTimerHandle ScrollBarTimer; // 0x428
};

struct ULuminApplicationLifecycleComponent : UApplicationLifecycleComponent {
	FMulticastInlineDelegate DeviceHasReactivatedDelegate; // 0x140
	FMulticastInlineDelegate DeviceWillEnterRealityModeDelegate; // 0x150
	FMulticastInlineDelegate DeviceWillGoInStandbyDelegate; // 0x160
	FMulticastInlineDelegate FocusLostDelegate; // 0x170
	FMulticastInlineDelegate FocusGainedDelegate; // 0x180
};

struct ACameraRig_Crane : AActor {
	float CranePitch; // 0x328
	float CraneYaw; // 0x32c
	float CraneArmLength; // 0x330
	bool bLockMountPitch; // 0x334
	bool bLockMountYaw; // 0x335
	USceneComponent* TransformComponent; // 0x338
	USceneComponent* CraneYawControl; // 0x340
	USceneComponent* CranePitchControl; // 0x348
	USceneComponent* CraneCameraMount; // 0x350
};

struct UInterpGroup : UObject {
	TArray<UInterpTrack*> InterpTracks; // 0x30
	FName GroupName; // 0x40
	FColor GroupColor; // 0x48
	char bCollapsed : 1; // 0x4c
	char bVisible : 1; // 0x4c
	char bIsFolder : 1; // 0x4c
	char bIsParented : 1; // 0x4c
	char bIsSelected : 1; // 0x4c
};

struct UMaterialExpressionDDX : UMaterialExpression {
	FExpressionInput Value; // 0x40
};

struct UParticleModuleAttractorPointGravity : UParticleModuleAttractorBase {
	FVector Position; // 0x30
	float Radius; // 0x3c
	UDistributionFloat* Strength; // 0x40
	FRawDistributionFloat StrengthRaw; // 0x48
};

struct UEnvQueryGenerator_Composite : UEnvQueryGenerator {
	TArray<UEnvQueryGenerator*> Generators; // 0x50
	char bAllowDifferentItemTypes : 1; // 0x60
	char bHasMatchingItemType : 1; // 0x60
	UEnvQueryItemType* ForcedItemType; // 0x68
};

struct URadialFalloff : UFieldNodeFloat {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	float Radius; // 0xc0
	FVector Position; // 0xc4
	EFieldFalloffType Falloff; // 0xd0
};

struct ULandscapeSplineSegment : UObject {
	FLandscapeSplineSegmentConnection Connections[0x2]; // 0x28
	FInterpCurveVector SplineInfo; // 0x58
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	TArray<USplineMeshComponent*> LocalMeshComponents; // 0xa0
};

struct AGameNetworkManager : AInfo {
	float BadPacketLossThreshold; // 0x328
	float SeverePacketLossThreshold; // 0x32c
	int32_t BadPingThreshold; // 0x330
	int32_t SeverePingThreshold; // 0x334
	int32_t AdjustedNetSpeed; // 0x338
	float LastNetSpeedUpdateTime; // 0x33c
	int32_t TotalNetBandwidth; // 0x340
	int32_t MinDynamicBandwidth; // 0x344
	int32_t MaxDynamicBandwidth; // 0x348
	char bIsStandbyCheckingEnabled : 1; // 0x34c
	char bHasStandbyCheatTriggered : 1; // 0x34c
	float StandbyRxCheatTime; // 0x350
	float StandbyTxCheatTime; // 0x354
	float PercentMissingForRxStandby; // 0x358
	float PercentMissingForTxStandby; // 0x35c
	float PercentForBadPing; // 0x360
	float JoinInProgressStandbyWaitTime; // 0x364
	float MoveRepSize; // 0x368
	float MAXPOSITIONERRORSQUARED; // 0x36c
	float MAXNEARZEROVELOCITYSQUARED; // 0x370
	float CLIENTADJUSTUPDATECOST; // 0x374
	float MAXCLIENTUPDATEINTERVAL; // 0x378
	float MaxClientForcedUpdateDuration; // 0x37c
	float ServerForcedUpdateHitchThreshold; // 0x380
	float ServerForcedUpdateHitchCooldown; // 0x384
	float MaxMoveDeltaTime; // 0x388
	float MaxClientSmoothingDeltaTime; // 0x38c
	float ClientNetSendMoveDeltaTime; // 0x390
	float ClientNetSendMoveDeltaTimeThrottled; // 0x394
	float ClientNetSendMoveDeltaTimeStationary; // 0x398
	int32_t ClientNetSendMoveThrottleAtNetSpeed; // 0x39c
	int32_t ClientNetSendMoveThrottleOverPlayerCount; // 0x3a0
	bool ClientAuthorativePosition; // 0x3a4
	float ClientErrorUpdateRateLimit; // 0x3a8
	float ClientNetCamUpdateDeltaTime; // 0x3ac
	float ClientNetCamUpdatePositionLimit; // 0x3b0
	bool bMovementTimeDiscrepancyDetection; // 0x3b4
	bool bMovementTimeDiscrepancyResolution; // 0x3b5
	float MovementTimeDiscrepancyMaxTimeMargin; // 0x3b8
	float MovementTimeDiscrepancyMinTimeMargin; // 0x3bc
	float MovementTimeDiscrepancyResolutionRate; // 0x3c0
	float MovementTimeDiscrepancyDriftAllowance; // 0x3c4
	bool bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x3c8
	bool bUseDistanceBasedRelevancy; // 0x3c9
};

struct UNiagaraSimulationStageBase : UNiagaraMergeable {
	UNiagaraScript* Script; // 0x28
	FName SimulationStageName; // 0x30
};

struct ULowEntryRawSocketConnectionListenerCode : UObject {
	bool Stopped; // 0x28
	bool RunExec; // 0x29
	bool ConnectionSuccess; // 0x2a
	bool JustConnected; // 0x38
	float WaitingForConnectionTime; // 0x3c
	ULowEntryRawSocketConnection* SocketConnection; // 0x40
	int32_t LatentUUID; // 0x48
};

struct UGameplayTask_WaitDelay : UGameplayTask {
	FMulticastInlineDelegate OnFinish; // 0x68
};

struct UAkAssetData : UObject {
	uint32_t CachedHash; // 0x28
};

struct UAISenseConfig : UObject {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UTestMovieSceneSubTrack : UMovieSceneSubTrack {
	TArray<UMovieSceneSection*> SectionArray; // 0x68
};

struct AARSharedWorldGameMode : AGameMode {
	int32_t BufferSizePerChunk; // 0x410
};

struct UMaterialExpressionSpriteTextureSampler : UMaterialExpressionTextureSampleParameter2D {
	bool bSampleAdditionalTextures; // 0xf0
	int32_t AdditionalSlotIndex; // 0xf4
	FText SlotDisplayName; // 0xf8
};

struct ANavModifierVolume : AVolume {
	UNavArea* AreaClass; // 0x368
};

struct UUW-MatchEnd_Animation_02_DamagePlayerInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UHorizontalBox* HorizontalBox_Equip; // 0x250
	UOverlay* Overlay_Health; // 0x258
	UProgressBar* ProgressBar_Health; // 0x260
	UTextBlock* T_Class; // 0x268
	UTextBlock* T_ExpertWeapon; // 0x270
	UTextBlock* T_Health; // 0x278
	UTextBlock* T_KilledBy; // 0x280
	UTextBlock* T_Level; // 0x288
	UTextBlock* T_MaxHealth; // 0x290
	UTextBlock* T_Name; // 0x298
	UTextBlock* TextBlock_21; // 0x2a0
	UUW-Inventory_EquippedSlot_C* UW-Inventory_EquippedSlot_Armor; // 0x2a8
	UUW-Inventory_EquippedSlot_C* UW-Inventory_EquippedSlot_Bag; // 0x2b0
	UUW-Inventory_EquippedSlot_C* UW-Inventory_EquippedSlot_Helmet; // 0x2b8
	float TargetHealth; // 0x2c0
	float CurrentHealth; // 0x2c4
	float MaxHealth; // 0x2c8
};

struct UBravoHotelVehicleTireComponent : UStaticMeshComponent {
	TArray<int32_t> ConnectedWheelIndices; // 0x548
	FName OriginalAttachBoneName; // 0x558
	FName SurfaceFxBoneName; // 0x560
	FVector SurfaceFxScale; // 0x568
	float SurfaceFxMaxDrawDistance; // 0x574
	UParticleSystemComponent* SurfaceFxComponent; // 0x578
	UParticleSystem* WreckedEffect; // 0x580
	UAkAudioEvent* WreckedSound; // 0x588
	ABravoHotelVehicle* OwnerVehicle; // 0x598
};

struct UPrefabVariantAsset : UPrefabAsset {
	UPrefabAsset* Parent; // 0xe8
};

struct UParticleModuleKillBox : UParticleModuleKillBase {
	FRawDistributionVector LowerLeftCorner; // 0x30
	FRawDistributionVector UpperRightCorner; // 0x78
	char bAbsolute : 1; // 0xc0
	char bKillInside : 1; // 0xc0
	char bAxisAlignedAndFixedSize : 1; // 0xc0
};

struct UBoxFalloff : UFieldNodeFloat {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	FTransform Transform; // 0xc0
	EFieldFalloffType Falloff; // 0xf0
};

struct UGameViewportClient : UScriptViewportClient {
	UConsole* ViewportConsole; // 0x40
	TArray<FDebugDisplayProperty> DebugProperties; // 0x48
	int32_t MaxSplitscreenPlayers; // 0x68
	UWorld* World; // 0x78
	UGameInstance* GameInstance; // 0x80
};

struct ABravoHotelProjectileGrenadeDynamite : ABravoHotelProjectileGrenade {
	UMaterialInterface* ExplosionGroundDecalMaterial; // 0x688
	FVector ExplosionGroundDecalSize; // 0x690
	UDecalComponent* ExplosionGroundDecalComponent; // 0x6a0
};

struct UBravoHotelVoiceComponent : UActorComponent {
	UDataTable* Table; // 0x1a0
};

struct UPrefabToolComponent : UPrimitiveComponent {
	char bConnected : 1; // 0x4b0
	char bLockSelection : 1; // 0x4b0
	UPrefabAsset* Prefab; // 0x4b8
	UBlueprint* GeneratedBlueprint; // 0x4c0
	UStaticMesh* SimplifiedMesh; // 0x4c8
	TMap<FName, AActor*> PrefabInstancesMap; // 0x4d0
	TArray<FPrefabVariantRule> VariantRulesOverwrite; // 0x520
	char bTransient : 1; // 0x530
	AActor* ParentClass; // 0x538
};

struct ULowEntryLatentActionObject : UObject {
	bool Finished; // 0x28
	UObject* Result; // 0x30
	int32_t KeepAliveCount; // 0x38
};

struct ADefaultPawn : APawn {
	float BaseTurnRate; // 0x398
	float BaseLookUpRate; // 0x39c
	UPawnMovementComponent* MovementComponent; // 0x3a0
	USphereComponent* CollisionComponent; // 0x3a8
	UStaticMeshComponent* MeshComponent; // 0x3b0
	char bAddDefaultMovementBindings : 1; // 0x3b8
};

struct UAkAssetDataSwitchContainer : UAkAssetDataWithMedia {
	TArray<UAkAssetDataSwitchContainerData*> SwitchContainers; // 0x70
	UAkGroupValue* DefaultGroupValue; // 0x80
};

struct UDatasmithSceneComponentTemplate : UDatasmithObjectTemplate {
	FTransform RelativeTransform; // 0x30
	EComponentMobility Mobility; // 0x60
	TSoftObjectPtr<USceneComponent> AttachParent; // 0x68
	TSet<FName> Tags; // 0x90
};

struct UBravoHotelSeason : UBravoHotelCoherentObject {
	FMulticastInlineDelegate OnSeasonChangedSubTabDelegate; // 0x30
};

struct UCrowdManager : UCrowdManagerBase {
	ANavigationData* MyNavData; // 0x28
	TArray<FCrowdAvoidanceConfig> AvoidanceConfig; // 0x30
	TArray<FCrowdAvoidanceSamplingPattern> SamplingPatterns; // 0x40
	int32_t MaxAgents; // 0x50
	float MaxAgentRadius; // 0x54
	int32_t MaxAvoidedAgents; // 0x58
	int32_t MaxAvoidedWalls; // 0x5c
	float NavmeshCheckInterval; // 0x60
	float PathOptimizationInterval; // 0x64
	float SeparationDirClamp; // 0x68
	float PathOffsetRadiusMultiplier; // 0x6c
	char bResolveCollisions : 1; // 0x70
};

struct UParticleModuleColorOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorOverLife; // 0x30
	FRawDistributionFloat AlphaOverLife; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct UDynamicEntryBox : UDynamicEntryBoxBase {
	UUserWidget* EntryWidgetClass; // 0x1c8
};

struct ULowEntryLong : UObject {
	TArray<char> Bytes; // 0x28
};

struct UAkAudioType : UObject {
	uint32_t ShortID; // 0x28
	TArray<UObject*> UserData; // 0x30
};

struct UMaterialExpressionComponentMask : UMaterialExpression {
	FExpressionInput Input; // 0x40
	char R : 1; // 0x54
	char G : 1; // 0x54
	char B : 1; // 0x54
	char A : 1; // 0x54
};

struct UMaterialExpressionFeatureLevelSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x4]; // 0x54
};

struct UUW-ArmoryResultListWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Armory_Repair_M; // 0x250
	UWidgetAnimation* Armory_Strengthen_M; // 0x258
	UWidgetAnimation* Armory_Failed_M; // 0x260
	UWidgetAnimation* Armory_Break_M; // 0x268
	UWidgetAnimation* Armory_Failed_Break_M; // 0x270
	UWidgetAnimation* Armory_Failed_Down_M; // 0x278
	UWidgetAnimation* Armory_Awesome_M; // 0x280
	UWidgetAnimation* Armory_Success_M; // 0x288
	UCanvasPanel* Armory_Awesome; // 0x290
	UCanvasPanel* Armory_Break; // 0x298
	UCanvasPanel* Armory_Failed; // 0x2a0
	UCanvasPanel* Armory_Failed_Break; // 0x2a8
	UCanvasPanel* Armory_Failed_Down; // 0x2b0
	UCanvasPanel* Armory_Repair; // 0x2b8
	UCanvasPanel* Armory_Strengthen; // 0x2c0
	UCanvasPanel* Armory_Success; // 0x2c8
	UTextBlock* Awesome_Damage1; // 0x2d0
	UTextBlock* Awesome_Damage2; // 0x2d8
	UTextBlock* Awesome_ItemName; // 0x2e0
	UTextBlock* Awesome_Level1; // 0x2e8
	UTextBlock* Awesome_Level2; // 0x2f0
	UTextBlock* Awesome_MagSize1; // 0x2f8
	UTextBlock* Awesome_MagSize2; // 0x300
	UTextBlock* Awesome_Spread1; // 0x308
	UTextBlock* Awesome_Spread2; // 0x310
	UTextBlock* Awesome_UpLevel; // 0x318
	UTextBlock* Break_Count; // 0x320
	UTextBlock* Break_ItemName; // 0x328
	UTextBlock* BreakTitle; // 0x330
	UButton* Button_1; // 0x338
	UButton* Button_2; // 0x340
	UButton* Button_228; // 0x348
	UButton* Button_230; // 0x350
	UButton* Button_232; // 0x358
	UButton* Button_233; // 0x360
	UButton* Button_EnchanceCancle; // 0x368
	UButton* Button_Enhance; // 0x370
	UButton* Button_Fatigue; // 0x378
	UCanvasPanel* Empty; // 0x380
	UTextBlock* FB_Damage1; // 0x388
	UTextBlock* FB_Damage2; // 0x390
	UTextBlock* FB_Level1; // 0x398
	UTextBlock* FB_Level2; // 0x3a0
	UTextBlock* FB_MagSize1; // 0x3a8
	UTextBlock* FB_MagSize2; // 0x3b0
	UTextBlock* FB_Spread1; // 0x3b8
	UTextBlock* FB_Spread2; // 0x3c0
	UTextBlock* FD_Damage1; // 0x3c8
	UTextBlock* FD_Damage2; // 0x3d0
	UTextBlock* FD_DownLevel; // 0x3d8
	UTextBlock* FD_Level1; // 0x3e0
	UTextBlock* FD_Level2; // 0x3e8
	UTextBlock* FD_MagSize1; // 0x3f0
	UTextBlock* FD_MagSize2; // 0x3f8
	UTextBlock* FD_Spread1; // 0x400
	UTextBlock* FD_Spread2; // 0x408
	UHorizontalBox* HorizontalBox_Awesome_Damage; // 0x410
	UHorizontalBox* HorizontalBox_Awesome_MagSize; // 0x418
	UHorizontalBox* HorizontalBox_Awesome_Spread; // 0x420
	UHorizontalBox* HorizontalBox_FB_Damage; // 0x428
	UHorizontalBox* HorizontalBox_FB_MagSize; // 0x430
	UHorizontalBox* HorizontalBox_FB_Spread; // 0x438
	UHorizontalBox* HorizontalBox_FD_Damage; // 0x440
	UHorizontalBox* HorizontalBox_FD_MasSize; // 0x448
	UHorizontalBox* HorizontalBox_FD_Spread; // 0x450
	UHorizontalBox* HorizontalBox_Strengthen_Damage; // 0x458
	UHorizontalBox* HorizontalBox_Strengthen_MagSize; // 0x460
	UHorizontalBox* HorizontalBox_Strengthen_Spread; // 0x468
	UHorizontalBox* HorizontalBox_Success_Damage; // 0x470
	UHorizontalBox* HorizontalBox_Success_Durable; // 0x478
	UHorizontalBox* HorizontalBox_Success_Fatigue; // 0x480
	UHorizontalBox* HorizontalBox_Success_MagSize; // 0x488
	UHorizontalBox* HorizontalBox_Success_Spread; // 0x490
	UImage* Image; // 0x498
	UImage* Image_2; // 0x4a0
	UImage* Image_3; // 0x4a8
	UImage* Image_4; // 0x4b0
	UImage* Image_8; // 0x4b8
	UImage* Image_14; // 0x4c0
	UImage* Image_15; // 0x4c8
	UImage* Image_16; // 0x4d0
	UImage* Image_17; // 0x4d8
	UImage* Image_18; // 0x4e0
	UImage* Image_20; // 0x4e8
	UImage* Image_27; // 0x4f0
	UImage* Image_167; // 0x4f8
	UImage* Image_501; // 0x500
	UImage* Image_503; // 0x508
	UImage* Image_817; // 0x510
	UImage* Image_820; // 0x518
	UImage* Image_821; // 0x520
	UImage* Image_822; // 0x528
	UImage* Image_823; // 0x530
	UImage* Image_824; // 0x538
	UImage* Image_825; // 0x540
	UImage* Image_826; // 0x548
	UImage* Image_827; // 0x550
	UImage* Image_828; // 0x558
	UImage* Image_829; // 0x560
	UImage* Image_830; // 0x568
	UImage* Image_831; // 0x570
	UImage* Image_832; // 0x578
	UImage* Image_833; // 0x580
	UImage* Image_834; // 0x588
	UImage* Image_835; // 0x590
	UImage* Image_836; // 0x598
	UImage* Image_837; // 0x5a0
	UImage* Image_838; // 0x5a8
	UImage* Image_839; // 0x5b0
	UImage* Image_840; // 0x5b8
	UImage* Image_841; // 0x5c0
	UImage* Image_842; // 0x5c8
	UImage* Image_843; // 0x5d0
	UImage* Image_845; // 0x5d8
	UImage* Image_846; // 0x5e0
	UImage* Image_847; // 0x5e8
	UImage* Image_848; // 0x5f0
	UImage* Image_849; // 0x5f8
	UImage* Image_850; // 0x600
	UImage* Image_851; // 0x608
	UImage* Image_852; // 0x610
	UImage* Image_853; // 0x618
	UImage* Image_854; // 0x620
	UImage* Image_855; // 0x628
	UImage* Image_856; // 0x630
	UImage* Image_857; // 0x638
	UImage* Image_858; // 0x640
	UImage* Image_859; // 0x648
	UImage* Image_860; // 0x650
	UImage* Image_861; // 0x658
	UImage* Image_862; // 0x660
	UImage* Image_863; // 0x668
	UImage* Image_864; // 0x670
	UImage* Image_865; // 0x678
	UImage* Image_866; // 0x680
	UImage* Image_867; // 0x688
	UImage* Image_868; // 0x690
	UImage* Image_921; // 0x698
	UImage* Image_1264; // 0x6a0
	UImage* Image_1266; // 0x6a8
	UImage* Image_1269; // 0x6b0
	UImage* Image_1270; // 0x6b8
	UImage* Image_1271; // 0x6c0
	UImage* Image_1272; // 0x6c8
	UImage* Image_1273; // 0x6d0
	UImage* Image_1277; // 0x6d8
	UImage* Image_1278; // 0x6e0
	UImage* Image_1279; // 0x6e8
	UImage* Image_1280; // 0x6f0
	UImage* Image_1284; // 0x6f8
	UImage* Image_1285; // 0x700
	UImage* Image_1318; // 0x708
	UImage* Image_1319; // 0x710
	UImage* Image_1320; // 0x718
	UImage* Image_1321; // 0x720
	UImage* Image_1322; // 0x728
	UImage* Image_1323; // 0x730
	UImage* Image_1324; // 0x738
	UImage* Image_1329; // 0x740
	UImage* Image_1330; // 0x748
	UImage* Image_1335; // 0x750
	UImage* Image_1336; // 0x758
	UImage* Image_1341; // 0x760
	UImage* Image_1342; // 0x768
	UImage* Image_1343; // 0x770
	UImage* Image_1344; // 0x778
	UImage* Image_1345; // 0x780
	UImage* Image_1346; // 0x788
	UImage* Image_1347; // 0x790
	UImage* Image_1348; // 0x798
	UImage* Image_1349; // 0x7a0
	UImage* Image_1350; // 0x7a8
	UImage* Image_1351; // 0x7b0
	UImage* Image_1352; // 0x7b8
	UImage* Image_1353; // 0x7c0
	UImage* Image_1354; // 0x7c8
	UImage* Image_1355; // 0x7d0
	UImage* Image_1356; // 0x7d8
	UImage* Image_1358; // 0x7e0
	UImage* Image_1359; // 0x7e8
	UImage* Image_1361; // 0x7f0
	UImage* Image_1362; // 0x7f8
	UImage* Image_1363; // 0x800
	UImage* Image_1364; // 0x808
	UImage* Image_1366; // 0x810
	UImage* Image_1368; // 0x818
	UImage* Image_1369; // 0x820
	UImage* Image_1370; // 0x828
	UImage* Image_1372; // 0x830
	UImage* Image_1374; // 0x838
	UImage* Image_1375; // 0x840
	UImage* Image_1376; // 0x848
	UImage* Image_1378; // 0x850
	UImage* Image_1380; // 0x858
	UImage* Image_1381; // 0x860
	UImage* Image_1382; // 0x868
	UImage* Image_1384; // 0x870
	UImage* Image_1972; // 0x878
	UImage* ImageTX_Complete_Fail; // 0x880
	UOverlay* ItemList; // 0x888
	UOverlay* Overlay_FB_ItemList; // 0x890
	UTextBlock* Strengthen_Cost; // 0x898
	UTextBlock* Strengthen_Count; // 0x8a0
	UTextBlock* Strengthen_CurrentDamageText1; // 0x8a8
	UTextBlock* Strengthen_CurrentDamageText2; // 0x8b0
	UTextBlock* Strengthen_CurrentMagSizeText1; // 0x8b8
	UTextBlock* Strengthen_CurrentMagSizeText2; // 0x8c0
	UTextBlock* Strengthen_CurrentSpreadText1; // 0x8c8
	UTextBlock* Strengthen_CurrentSpreadText2; // 0x8d0
	UImage* Strengthen_Icon; // 0x8d8
	UImage* Strengthen_IconType1; // 0x8e0
	UImage* Strengthen_IconType2; // 0x8e8
	UImage* Strengthen_IconType3; // 0x8f0
	UTextBlock* Strengthen_Level1; // 0x8f8
	UTextBlock* Strengthen_Level2; // 0x900
	UTextBlock* Strengthen_Name; // 0x908
	UTextBlock* Strengthen_TextType1; // 0x910
	UTextBlock* Strengthen_TextType2; // 0x918
	UTextBlock* Strengthen_TextType3; // 0x920
	UTextBlock* Success_Damage1; // 0x928
	UTextBlock* Success_Damage2; // 0x930
	UTextBlock* Success_ItemName; // 0x938
	UTextBlock* Success_ItemName_2; // 0x940
	UTextBlock* Success_Level1; // 0x948
	UTextBlock* Success_Level2; // 0x950
	UTextBlock* Success_MagSize1; // 0x958
	UTextBlock* Success_MagSize2; // 0x960
	UTextBlock* Success_Spread1; // 0x968
	UTextBlock* Success_Spread2; // 0x970
	UTextBlock* Success_UpLevel; // 0x978
	UTextBlock* T_Durability; // 0x980
	UTextBlock* T_Fatigue; // 0x988
	UTextBlock* T_PreFatigue; // 0x990
	UProgressBar* TerrainHeight; // 0x998
	UTextBlock* TextBlock_2089; // 0x9a0
	UTextBlock* TextBlock_FB_ItemCount; // 0x9a8
	UTextBlock* TextBlock_FB_ItemName; // 0x9b0
	UTextBlock* TextBlock_FB_Title; // 0x9b8
	UWidgetSwitcher* WidgetSwitcher_1; // 0x9c0
	FCoh_ResultInfo ResultInfo; // 0x9c8
	float CurrentDurability; // 0xa00
};

struct UInterpTrackInstToggle : UInterpTrackInst {
	ETrackToggleAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
	char bSavedActiveState : 1; // 0x30
};

struct UBravoHotelGameInstance : UBravoHotelAppInstance {
	bool CharacterTeleport; // 0x250
	bool EnableChatting; // 0x251
	bool AllowReconnect; // 0x252
	bool bIsInHouseDevBuild; // 0x253
	FString DefaultFontFamilyAsset; // 0x258
	UFont* DefaultFontFamily; // 0x268
	UBravoHotelLoadingWidget* LoadingScreenWidget; // 0x270
	FSelectLoadingScreenData CurLoadingScreenInfo; // 0x278
	bool bWinnerCam; // 0x2b8
	ELoadingScreenType ForceLoadingType; // 0x2b9
	bool bIsPlayingKillCam; // 0x2ba
	int32_t KillerUniquePlayerId; // 0x2c0
	int32_t MyUniquePlayerId; // 0x2c4
	FMulticastInlineDelegate ReplayListChangedCallBack; // 0x2c8
	bool bCheatable; // 0x2d8
	bool bEnableMakeAccount; // 0x2d9
	UBravoHotelGameSettingManager* GameSettingManager; // 0x2e0
	FString LoadingScreenWidgetClass; // 0x2f8
	TArray<FCoherentWidgetInfo> CohWidgetList; // 0x360
	FString PopupWidgetClass; // 0x450
	FMulticastInlineDelegate OnChangedLanguageCallBack; // 0x460
	TMap<FString, FVoiceTalkState> SaveMemberVoiceInfoList; // 0x478
	TArray<FRepInvalidHitInfo> InvalidHitInfos; // 0x530
	UUserWidget* ReconnectWidget; // 0x540
};

struct UCanvas : UObject {
	float OrgX; // 0x28
	float OrgY; // 0x2c
	float ClipX; // 0x30
	float ClipY; // 0x34
	FColor DrawColor; // 0x38
	char bCenterX : 1; // 0x3c
	char bCenterY : 1; // 0x3c
	char bNoSmooth : 1; // 0x3c
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FPlane ColorModulate; // 0x50
	UTexture2D* DefaultTexture; // 0x60
	UTexture2D* GradientTexture0; // 0x68
	UReporterGraph* ReporterGraph; // 0x70
};

struct ULandscapeWeightmapUsage : UObject {
	ULandscapeComponent* ChannelUsage[0x4]; // 0x28
	FGuid LayerGuid; // 0x48
};

struct UFieldSystemMetaDataIteration : UFieldSystemMetaData {
	int32_t Iterations; // 0xb0
};

struct UInterpTrackBoolProp : UInterpTrack {
	TArray<FBoolTrackKey> BoolTrack; // 0x70
	FName PropertyName; // 0x80
};

struct UBP-SpectatorWidget_C : UBravoHotelSpectatorWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x250
	UWidgetAnimation* BackgroundBlurFadeIn; // 0x258
	UWidgetAnimation* Idle; // 0x260
	UBackgroundBlur* BackgroundBlur_1; // 0x268
	UButton* Btn-Exit; // 0x270
	UButton* Btn-NextTarget; // 0x278
	UButton* Btn-PreTarget; // 0x280
	UButton* Btn-Replay; // 0x288
	UCanvasPanel* Canvas_Main; // 0x290
	UHorizontalBox* KillcamBtns; // 0x298
	UHorizontalBox* MemberChangeBox; // 0x2a0
	UTextBlock* TextDepth_Replay; // 0x2a8
	UUW-SpectatingTargetInfo_C* UW-SpectatingTargetInfo; // 0x2b0
	bool bIsKillCam; // 0x2b8
};

struct UMovieSceneGeometryCollectionTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x58
};

struct UOculusMR_State : UObject {
	FTrackedCamera TrackedCamera; // 0x28
	USceneComponent* TrackingReferenceComponent; // 0x98
	double ScalingFactor; // 0xa0
	bool ChangeCameraStateRequested; // 0xac
	bool BindToTrackedCameraIndexRequested; // 0xad
};

struct ANavigationTestingActor : AActor {
	UCapsuleComponent* CapsuleComponent; // 0x338
	UNavigationInvokerComponent* InvokerComponent; // 0x340
	char bActAsNavigationInvoker : 1; // 0x348
	FNavAgentProperties NavAgentProps; // 0x350
	FVector QueryingExtent; // 0x380
	ANavigationData* MyNavData; // 0x390
	FVector ProjectedLocation; // 0x398
	char bProjectedLocationValid : 1; // 0x3a4
	char bSearchStart : 1; // 0x3a4
	float CostLimitFactor; // 0x3a8
	float MinimumCostLimit; // 0x3ac
	char bBacktracking : 1; // 0x3b0
	char bUseHierarchicalPathfinding : 1; // 0x3b0
	char bGatherDetailedInfo : 1; // 0x3b0
	char bDrawDistanceToWall : 1; // 0x3b0
	char bShowNodePool : 1; // 0x3b0
	char bShowBestPath : 1; // 0x3b0
	char bShowDiffWithPreviousStep : 1; // 0x3b0
	char bShouldBeVisibleInGame : 1; // 0x3b0
	ENavCostDisplay CostDisplayMode; // 0x3b4
	FVector2D TextCanvasOffset; // 0x3b8
	char bPathExist : 1; // 0x3c0
	char bPathIsPartial : 1; // 0x3c0
	char bPathSearchOutOfNodes : 1; // 0x3c0
	float PathfindingTime; // 0x3c4
	float PathCost; // 0x3c8
	int32_t PathfindingSteps; // 0x3cc
	ANavigationTestingActor* OtherActor; // 0x3d0
	UNavigationQueryFilter* FilterClass; // 0x3d8
	int32_t ShowStepIndex; // 0x3e0
	float OffsetFromCornersDistance; // 0x3e4
};

struct UEditableGameplayTagQueryExpression_AllExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UBravoHotelInventoryWidget : UUserWidget {
	float ResetInventoryScrollTime; // 0x250
	FMulticastInlineDelegate WeaponAmmoDelegate; // 0x260
};

struct UUW-CheatReplayListTitleItem_C : UUserWidget {
	UTextBlock* TextBlock_62; // 0x248
};

struct UUW-PopupWidget_C : UBravoHotelPopupWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x268
	UImage* Bg; // 0x270
	UButton* btn_Cancel; // 0x278
	UButton* btn_OK; // 0x280
	UTextBlock* Desc; // 0x288
	UImage* Image_2; // 0x290
	UOverlay* Overlay; // 0x298
	UOverlay* Overlay_1; // 0x2a0
	UOverlay* Overlay_2; // 0x2a8
	URichTextBlock* RichTextBlock_244; // 0x2b0
	UTextBlock* TextBlock_17; // 0x2b8
	UThrobber* Throbber_159; // 0x2c0
	UTextBlock* Title; // 0x2c8
	UWidgetSwitcher* WidgetSwitcher_1; // 0x2d0
	FName MapNameToExit; // 0x2d8
	bool IsExitGame; // 0x2e0
	ABravoHotelPlayerController* ControllerRef; // 0x2e8
	bool IsTutorial; // 0x2f0
	bool IsDeathCam; // 0x2f1
	FMulticastInlineDelegate EventDispatcher_MoveToDeathCam; // 0x2f8
	bool ErrorType; // 0x308
	bool IsPerkDeckSelectMode; // 0x309
	FMulticastInlineDelegate EventDispatcher_TrySelectMode; // 0x310
	bool OkayType; // 0x320
};

struct UAnimNotify_PlayParticleEffect : UAnimNotify {
	UParticleSystem* PSTemplate; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct UBravoHotelSettingWidget : UBravoHotelSettingBaseWidget {
	TArray<FBackupSlotData> BackupSlots; // 0x298
	TMap<FName, FString> SettingList; // 0x2b0
	TMap<FName, UBravoHotelSettingSlotWidget*> ChangeSettingList; // 0x300
	TMap<FName, FChangeKeySlotInfo> ChangeSettingKeyList; // 0x350
	TArray<UBravoHotelSettingSubWidget*> SubList; // 0x3a0
	TArray<UBravoHotelSettingSlotWidget*> SlotList; // 0x3b0
	bool ChangingTotalGraphic; // 0x3c0
	bool IsInitState; // 0x3c1
	ESettingBigType SelectedTyp; // 0x3c2
};

struct UEnvQueryGenerator_PathingGrid : UEnvQueryGenerator_SimpleGrid {
	FAIDataProviderBoolValue PathToItem; // 0xf8
	UNavigationQueryFilter* NavigationFilter; // 0x130
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x138
};

struct UChaosClothConfig : UClothConfigCommon {
	EClothMassMode MassMode; // 0x28
	float UniformMass; // 0x2c
	float TotalMass; // 0x30
	float Density; // 0x34
	float MinPerParticleMass; // 0x38
	float EdgeStiffness; // 0x3c
	float BendingStiffness; // 0x40
	float AreaStiffness; // 0x44
	float VolumeStiffness; // 0x48
	float StrainLimitingStiffness; // 0x4c
	float LimitScale; // 0x50
	bool bUseGeodesicDistance; // 0x54
	float ShapeTargetStiffness; // 0x58
	float CollisionThickness; // 0x5c
	float FrictionCoefficient; // 0x60
	float DampingCoefficient; // 0x64
	float DragCoefficient; // 0x68
	float AnimDriveSpringStiffness; // 0x6c
	bool bUseBendingElements; // 0x70
	bool bUseTetrahedralConstraints; // 0x71
	bool bUseThinShellVolumeConstraints; // 0x72
	bool bUseSelfCollisions; // 0x73
	bool bUseContinuousCollisionDetection; // 0x74
	FVector LinearVelocityScale; // 0x78
	float AngularVelocityScale; // 0x84
};

struct UNavLinkComponent : UPrimitiveComponent {
	TArray<FNavigationLink> LINKS; // 0x4b8
};

struct UParticleModuleLocation_Seeded : UParticleModuleLocation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UParticleModuleVectorFieldScaleOverLife : UParticleModuleVectorFieldBase {
	UDistributionFloat* VectorFieldScaleOverLife; // 0x30
	FRawDistributionFloat VectorFieldScaleOverLifeRaw; // 0x38
};

struct UComboBoxText_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_43; // 0x250
	UImage* Image_269; // 0x258
	UTextBlock* TextBlock_67; // 0x260
	FText Text; // 0x268
};

struct UMagicLeapLightingTrackingComponent : UActorComponent {
	bool UseGlobalAmbience; // 0xb0
	bool UseColorTemp; // 0xb1
};

struct UBravoHotelArmory : UBravoHotelCoherentObject {
	TMap<FString, ABravoHotelArmoryMeshActor*> ArmoryMeshMap; // 0x30
	FMulticastInlineDelegate ChangeSceneDelegate; // 0x80
	FMulticastInlineDelegate MouseEventDelegate; // 0x90
	FCoh_ResultInfo ResultInfo; // 0xa0
	int32_t CurrentMaterialCount; // 0xd8
	FMulticastInlineDelegate SkipIdentifiedDelegate; // 0xe0
	FMulticastInlineDelegate ArmoryTabDelegate; // 0xf0
};

struct UPlayer : UObject {
	APlayerController* PlayerController; // 0x30
	int32_t CurrentNetSpeed; // 0x38
	int32_t ConfiguredInternetSpeed; // 0x3c
	int32_t ConfiguredLanSpeed; // 0x40
};

struct UProceduralFoliageSpawner : UObject {
	int32_t RandomSeed; // 0x28
	float TileSize; // 0x2c
	int32_t NumUniqueTiles; // 0x30
	float MinimumQuadTreeSize; // 0x34
	TArray<FFoliageTypeObject> FoliageTypes; // 0x40
};

struct UUW-ReplayWorldMapOption_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UCanvasPanel* Canvas_Main; // 0x250
	UCheckBox* CB_DrawDeathPosition; // 0x258
	UCheckBox* CB_DrawFireDirection; // 0x260
	UCheckBox* CB_DrawHitted; // 0x268
	UCheckBox* CB_DrawPersonalSupplyBox; // 0x270
	UCheckBox* CB_TransportDropBox; // 0x278
	ABP-MK3DReplayController_C* ReplayController; // 0x280
	UBravoHotelMainWidget* MainWidget; // 0x288
	ABravoHotelPlayerHUD* PlayerHUD; // 0x290
};

struct USubmixEffectSubmixEQPreset : USoundEffectSubmixPreset {
	FSubmixEffectSubmixEQSettings Settings; // 0x78
};

struct UToIntegerField : UFieldNodeInt {
	UFieldNodeFloat* FloatField; // 0xb0
};

struct UABP-Mannequin-PostProcess_C : UBravoHotelAnimInstancePostprocess {
	FPointerToUberGraphFrame UberGraphFrame; // 0x520
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_21; // 0x528
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_21; // 0x5c8
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_11; // 0x6d0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_20; // 0x8b0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_10; // 0x9c0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_20; // 0xba0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_19; // 0xbc0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_20; // 0xcc8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_20; // 0xce8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_19; // 0xda0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_18; // 0xe58
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_19; // 0xf60
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_20; // 0xf80
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_18; // 0x1020
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_19; // 0x10d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_43; // 0x10f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_42; // 0x1120
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_41; // 0x1148
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_19; // 0x1170
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_40; // 0x1210
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_18; // 0x1238
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_17; // 0x1258
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_18; // 0x1360
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_16; // 0x1380
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_15; // 0x1488
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_14; // 0x1590
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_17; // 0x1698
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_39; // 0x1750
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_17; // 0x1778
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_18; // 0x1798
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_17; // 0x1838
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_38; // 0x18d8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_13; // 0x1900
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_16; // 0x1a08
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_17; // 0x1aa8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_16; // 0x1ac8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_37; // 0x1ae8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_12; // 0x1b10
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_16; // 0x1c18
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_15; // 0x1c38
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_15; // 0x1c58
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_36; // 0x1c78
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_14; // 0x1ca0
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_13; // 0x1cc0
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_12; // 0x2100
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_16; // 0x2540
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_14; // 0x25f8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_11; // 0x2618
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_10; // 0x2720
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_9; // 0x2828
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_13; // 0x2930
	FAnimNode_LinkedInputPose AnimGraphNode_SubInput; // 0x2950
	FAnimNode_Root AnimGraphNode_Root; // 0x29c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_35; // 0x29f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_34; // 0x2a20
	FAnimNode_HandIKRetargeting AnimGraphNode_HandIKRetargeting_3; // 0x2a48
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_9; // 0x2b70
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_12; // 0x2d50
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_13; // 0x2d70
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_15; // 0x2d90
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_15; // 0x2e48
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_14; // 0x2ee8
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_8; // 0x2fa0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_11; // 0x3180
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_12; // 0x31a0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_8; // 0x31c0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_7; // 0x32c8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_10; // 0x33d0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_7; // 0x33f0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_11; // 0x35d0
	FAnimNode_HandIKRetargeting AnimGraphNode_HandIKRetargeting_2; // 0x35f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_14; // 0x3710
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_33; // 0x37b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_32; // 0x37d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_13; // 0x3800
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_6; // 0x38b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_31; // 0x39c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_30; // 0x39e8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x3a10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x3ad0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_12; // 0x3b48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_29; // 0x3c00
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_28; // 0x3c28
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x3c50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3d10
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_13; // 0x3d88
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_11; // 0x3e28
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x3ee0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_27; // 0x3f90
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_26; // 0x3fb8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_25; // 0x3fe0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_24; // 0x4008
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_11; // 0x4030
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_10; // 0x4470
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_9; // 0x48b0
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_8; // 0x4cf0
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_7; // 0x5130
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_6; // 0x5570
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_5; // 0x59b0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_5; // 0x5df0
	FAnimNode_HandIKRetargeting AnimGraphNode_HandIKRetargeting; // 0x5ef8
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_6; // 0x6020
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_9; // 0x6200
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_10; // 0x6220
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_10; // 0x6240
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_5; // 0x6300
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8; // 0x64e0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_9; // 0x6500
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_9; // 0x6520
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_23; // 0x65d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_22; // 0x6600
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_12; // 0x6628
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_21; // 0x66c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_11; // 0x66f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_20; // 0x6790
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_19; // 0x67b8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7; // 0x67e0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8; // 0x6800
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_8; // 0x6820
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_4; // 0x68e0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_3; // 0x6ac0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_2; // 0x6ca0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK; // 0x6e80
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_4; // 0x7060
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0x7168
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x7270
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x7378
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_4; // 0x7480
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_3; // 0x78c0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_26; // 0x7d00
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_25; // 0x7f50
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_24; // 0x81a0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_23; // 0x83f0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_22; // 0x8640
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_21; // 0x8890
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_20; // 0x8ae0
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_19; // 0x8bf8
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_18; // 0x8d10
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_17; // 0x8e28
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_16; // 0x8f40
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_15; // 0x9058
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_14; // 0x9170
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_13; // 0x9288
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_20; // 0x93a0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_19; // 0x95f0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_18; // 0x9840
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_17; // 0x9a90
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_16; // 0x9ce0
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_12; // 0x9f30
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_11; // 0xa048
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_15; // 0xa160
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_10; // 0xa3b0
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_9; // 0xa4c8
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_8; // 0xa5e0
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_7; // 0xa6f8
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_6; // 0xa810
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_5; // 0xa928
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_4; // 0xaa40
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_3; // 0xab58
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_2; // 0xac70
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController; // 0xad88
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_14; // 0xaea0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_13; // 0xb0f0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_12; // 0xb340
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_11; // 0xb590
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_10; // 0xb7e0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_9; // 0xba30
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_8; // 0xbc80
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_7; // 0xbed0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_6; // 0xc120
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_5; // 0xc370
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_4; // 0xc5c0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_3; // 0xc810
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_2; // 0xca60
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics; // 0xccb0
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_2; // 0xcf00
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics; // 0xd340
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_10; // 0xd780
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_18; // 0xd820
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0xd848
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_17; // 0xd8e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_16; // 0xd910
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0xd938
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7; // 0xd9d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_15; // 0xd9f8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_7; // 0xda20
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_14; // 0xdad8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6; // 0xdb00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0xdb20
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6; // 0xdbc0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_13; // 0xdbe0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_6; // 0xdc08
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_12; // 0xdcc0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5; // 0xdce8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0xdd08
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5; // 0xdda8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_11; // 0xddc8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0xddf0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0xdea8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_10; // 0xdf48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_9; // 0xdf70
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4; // 0xdf98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0xdfb8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4; // 0xe058
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0xe078
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0xe0a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0xe158
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0xe180
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0xe1a8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0xe248
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3; // 0xe300
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3; // 0xe320
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0xe340
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0xe3e0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0xe408
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0xe4c0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0xe4e8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0xe508
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xe528
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0xe5c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0xe680
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0xe6a8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0xe6d0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0xe6f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0xe710
};

struct ABravoHotelProjectile : ABravoHotelProjectileBase {
	USphereComponent* SphereCollision; // 0x328
	UStaticMeshComponent* Projectile; // 0x330
	URealisticProjectileComponent* RealisticProjectile; // 0x338
	UParticleSystemComponent* BulletEffect; // 0x340
	UParticleSystemComponent* TrailEffectInWater; // 0x348
	float Damage; // 0x350
	FVector StartLocation; // 0x354
	bool bInWater; // 0x360
	TMap<FString, UParticleSystem*> TrailEffectsList; // 0x380
	TMap<FString, UParticleSystem*> BulletEffectsList; // 0x3d0
	TMap<FString, UParticleSystem*> StopEffectsList; // 0x420
	bool bSpawnTrailEffect; // 0x470
	TArray<FString> TrailNames; // 0x478
	FVector TrailLocation; // 0x488
	FRotator TrailRotation; // 0x494
	bool bChangeBulletEffect; // 0x4a0
	FString BulletEffectName; // 0x4a8
	TArray<FString> StopEffectNames; // 0x4b8
	ABravoHotelPlayerController* AuthorityController; // 0x4c8
};

struct UGameUserSettings : UObject {
	bool bUseVSync; // 0x28
	bool bIsSmoothFrameRate; // 0x29
	bool bUseDynamicResolution; // 0x2a
	uint32_t ResolutionSizeX; // 0x80
	uint32_t ResolutionSizeY; // 0x84
	uint32_t LastUserConfirmedResolutionSizeX; // 0x88
	uint32_t LastUserConfirmedResolutionSizeY; // 0x8c
	int32_t WindowPosX; // 0x90
	int32_t WindowPosY; // 0x94
	int32_t FullscreenMode; // 0x98
	int32_t LastConfirmedFullscreenMode; // 0x9c
	int32_t PreferredFullscreenMode; // 0xa0
	uint32_t Version; // 0xa4
	int32_t AudioQualityLevel; // 0xa8
	int32_t LastConfirmedAudioQualityLevel; // 0xac
	float FrameRateLimit; // 0xb0
	float LobbyFrameRateLimit; // 0xb4
	int32_t DesiredScreenWidth; // 0xbc
	bool bUseDesiredScreenHeight; // 0xc0
	int32_t DesiredScreenHeight; // 0xc4
	int32_t LastUserConfirmedDesiredScreenWidth; // 0xc8
	int32_t LastUserConfirmedDesiredScreenHeight; // 0xcc
	float LastRecommendedScreenWidth; // 0xd0
	float LastRecommendedScreenHeight; // 0xd4
	float LastCPUBenchmarkResult; // 0xd8
	float LastGPUBenchmarkResult; // 0xdc
	TArray<float> LastCPUBenchmarkSteps; // 0xe0
	TArray<float> LastGPUBenchmarkSteps; // 0xf0
	FString LastCPUBrand; // 0x100
	FString LastGPUBrand; // 0x110
	int32_t LastInstallStorageType; // 0x120
	int64_t LastTotalGraphicsMemory; // 0x128
	float LastGPUBenchmarkMultiplier; // 0x130
	bool bUseHDRDisplayOutput; // 0x134
	int32_t HDRDisplayOutputNits; // 0x138
	bool ShowHUD; // 0x13c
	FMulticastInlineDelegate OnGameUserSettingsUINeedsUpdate; // 0x140
};

struct UGeometryCacheCodecRaw : UGeometryCacheCodecBase {
	int32_t DummyProperty; // 0x38
};

struct UDDGIVolumeComponent : USceneComponent {
	EDDGIRaysPerProbe RaysPerProbe; // 0x238
	FIntVector ProbeCounts; // 0x23c
	int32_t LightingPriority; // 0x248
	float UpdatePriority; // 0x24c
	float ProbeMaxRayDistance; // 0x250
	float ProbeHysteresis; // 0x254
	float ViewBias; // 0x258
	float NormalBias; // 0x25c
	FLightingChannels LightingChannels; // 0x260
	float VolumeBlendDistance; // 0x264
	float VolumeBlendDistanceBlack; // 0x268
	bool EnableProbeRelocation; // 0x26c
	bool EnableProbeScrolling; // 0x26d
	bool EnableViewDependentVolumeScrolling; // 0x26e
	float ViewDependentVolumeScrollingOffset; // 0x270
	bool EnableVolume; // 0x274
	bool RuntimeStatic; // 0x275
	float probeDistanceExponent; // 0x278
	float probeIrradianceEncodingGamma; // 0x27c
	float probeChangeThreshold; // 0x280
	float probeBrightnessThreshold; // 0x284
	float ProbeMinFrontfaceDistance; // 0x288
	float ProbeBackfaceThreshold; // 0x28c
	float LightMultiplier; // 0x290
	float EmissiveMultiplier; // 0x294
	float IrradianceScalar; // 0x298
	bool SkyLight; // 0x29c
	FVector LastOrigin; // 0x2a0
	FIntVector ProbeScrollOffset; // 0x2ac
};

struct UVerticalBoxSlot : UPanelSlot {
	FSlateChildSize Size; // 0x38
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UMaterialExpressionLandscapeGrassOutput : UMaterialExpressionCustomOutput {
	TArray<FGrassInput> GrassTypes; // 0x40
};

struct UOperatorField : UFieldNodeBase {
	float Magnitude; // 0xb0
	UFieldNodeBase* RightField; // 0xb8
	UFieldNodeBase* LeftField; // 0xc0
	EFieldOperationType Operation; // 0xc8
};

struct USourceEffectWaveShaperPreset : USoundEffectSourcePreset {
	FSourceEffectWaveShaperSettings Settings; // 0x70
};

struct UUW-PerkLevelUp_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Disappear; // 0x250
	UWidgetAnimation* Finish; // 0x258
	UWidgetAnimation* Spin; // 0x260
	UWidgetAnimation* Idle; // 0x268
	UImage* Image_180; // 0x270
	UImage* ItemImage_bg; // 0x278
	UImage* ItemImage_Dummy1; // 0x280
	UImage* ItemImage_Main; // 0x288
	UTextBlock* TextBlock_1; // 0x290
	UTextBlock* TextBlock_3; // 0x298
	UTextBlock* TextMountablewea; // 0x2a0
	UTextBlock* TextMountableweaLV1; // 0x2a8
	FPerkInfo PerkInfo; // 0x2b0
	FPerkData PerkData; // 0x2d8
	bool bLevelUp; // 0x3b8
	bool bFinishing; // 0x3b9
	float FinishTime; // 0x3bc
	EPerkSlotFlag PerkSlot; // 0x3c0
};

struct UTexture : UStreamableRenderAsset {
	FGuid LightingGuid; // 0x48
	int32_t LODBias; // 0x58
	TextureCompressionSettings CompressionSettings; // 0x5c
	TextureFilter Filter; // 0x5d
	ETextureMipLoadOptions MipLoadOptions; // 0x5e
	TextureGroup LODGroup; // 0x5f
	char SRGB : 1; // 0x60
	char bNoTiling : 1; // 0x60
	char VirtualTextureStreaming : 1; // 0x60
	char CompressionYCoCg : 1; // 0x60
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x68
};

struct UARTrackedGeometry : UObject {
	FGuid UniqueID; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int32_t LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct UTemplateSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x348
	TSoftClassPtr<UObject> BoundActorClass; // 0x350
	TSoftObjectPtr<AActor> BoundPreviewActor; // 0x378
	TMap<FGuid, FName> BoundActorComponents; // 0x3a0
};

struct UDistributionVectorUniformCurve : UDistributionVector {
	FInterpCurveTwoVectors ConstantCurve; // 0x38
	char bLockAxes1 : 1; // 0x50
	char bLockAxes2 : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes[0x2]; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x56
	char bUseExtremes : 1; // 0x5c
};

struct ASpectatorBeaconClient : AOnlineBeaconClient {
	FString DestSessionId; // 0x3e8
	FSpectatorReservation PendingReservation; // 0x3f8
	ESpectatorClientRequestType RequestType; // 0x470
	bool bPendingReservationSent; // 0x471
	bool bCancelReservation; // 0x472
};

struct UEngineMessage : ULocalMessage {
	FString FailedPlaceMessage; // 0x28
	FString MaxedOutMessage; // 0x38
	FString EnteredMessage; // 0x48
	FString LeftMessage; // 0x58
	FString GlobalNameChange; // 0x68
	FString SpecEnteredMessage; // 0x78
	FString NewPlayerMessage; // 0x88
	FString NewSpecMessage; // 0x98
};

struct UUW-Inventory_ProximitySlot_C : UUW-Inventory_SlotBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1360
	UWidgetAnimation* P_Upgrade_Arrow; // 0x1368
	UWidgetAnimation* C_SlotHover_ItemState_Hide; // 0x1370
	UWidgetAnimation* C_SlotHover_ItemState_Show; // 0x1378
	UWidgetAnimation* Hover_Gold; // 0x1380
	UWidgetAnimation* P_SlotHover; // 0x1388
	UImage* BGImage; // 0x1390
	UImage* BGImage_2; // 0x1398
	UCanvasPanel* CanvasPanel_ITemState; // 0x13a0
	UCanvasPanel* CanvasPanel_Unnecessary; // 0x13a8
	UTextBlock* Count; // 0x13b0
	UImage* Crate_Default; // 0x13b8
	UImage* Crate_Hover; // 0x13c0
	UProgressBar* DurabilityBar; // 0x13c8
	UImage* fill; // 0x13d0
	UHorizontalBox* HorizontalBox_Rarity; // 0x13d8
	UImage* HoverImage; // 0x13e0
	UImage* HoverImage_Gold; // 0x13e8
	UImage* HoverImage_Round; // 0x13f0
	UImage* Image_1; // 0x13f8
	UImage* Image_2; // 0x1400
	UImage* Image_531; // 0x1408
	UImage* Image_539; // 0x1410
	UImage* Image_540; // 0x1418
	UImage* Image_541; // 0x1420
	UImage* Image_542; // 0x1428
	UImage* Image_543; // 0x1430
	UImage* Image_544; // 0x1438
	UImage* Image_Bindable; // 0x1440
	UImage* Image_Supply; // 0x1448
	UImage* ItemImage; // 0x1450
	UTextBlock* ItemNameName; // 0x1458
	UTextBlock* ItemState_Text; // 0x1460
	UImage* KeepedItem_List; // 0x1468
	UImage* KeepedItem_ListHover; // 0x1470
	UImage* LvColor; // 0x1478
	UImage* NeedMaterial; // 0x1480
	USizeBox* SizeBox_1; // 0x1488
	UTextBlock* TextBlock_Range; // 0x1490
	UCanvasPanel* UpgradeItem; // 0x1498
	UImage* UpgradeItem_Arrow01; // 0x14a0
	UImage* UpgradeItem_Arrow02; // 0x14a8
	UImage* UpgradeItem_default; // 0x14b0
	UImage* UpgradeItem_Hover; // 0x14b8
	UTextBlock* weapon__; // 0x14c0
	UImage* WeaponColorBg; // 0x14c8
	UImage* WeaponEquipItem_Default; // 0x14d0
	UImage* WeaponEquipItem_Hover; // 0x14d8
	UImage* WeaponItemImage; // 0x14e0
	UTextBlock* WeaponType; // 0x14e8
	ABravoHotelPickup* PickupRef; // 0x14f0
	FInventoryItemInfo DroppedItemInfo; // 0x14f8
	ABravoHotelDropBoxActor* DropBoxRef; // 0x1590
	bool bGold; // 0x1598
	UImage* SelectedHoverImage; // 0x15a0
	FBravoHotelWeaponInfo WeaponData; // 0x15a8
	FLinearColor MedicalBGColor; // 0x20d8
	int32_t CurCount; // 0x20e8
	FMulticastInlineDelegate SetSlotInfo; // 0x20f0
	AActor* TargetActor; // 0x2100
	ABravoHotelCharacter* StealableCharacter; // 0x2108
	TArray<FName> ShowRarityStar; // 0x2110
	TArray<FName> ShowIconBG; // 0x2120
};

struct UAIPerceptionStimuliSourceComponent : UActorComponent {
	char bAutoRegisterAsSource : 1; // 0xb0
	TArray<UAISense*> RegisterAsSourceForSenses; // 0xb8
};

struct UUW-ListWidget_KillMessage_Item_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_Hide; // 0x250
	UWidgetAnimation* Anim_Down; // 0x258
	UHorizontalBox* HorizontalBox_Killer; // 0x260
	UScaleBox* ScaleBox_KillerIcon; // 0x268
	UImage* T_ClassIcon; // 0x270
	UTextBlock* T_Level; // 0x278
	UTextBlock* T_LV; // 0x280
	UTextBlock* T_Name; // 0x288
	FMulticastInlineDelegate OnTimeOut; // 0x290
	ABravoHotelPlayerState* LocalPlayerState; // 0x2a0
};

struct UAkFolder : UAkAudioType {
	FString UnrealFolderPath; // 0x40
	FString WwiseFolderPath; // 0x50
};

struct UGizmoUniformScaleParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float ScaleMultiplier; // 0x68
	FVector2D Parameter; // 0x6c
	FGizmoVec2ParameterChange LastChange; // 0x74
	FVector CurScaleOrigin; // 0x84
	FVector CurScaleNormal; // 0x90
	FVector CurScaleAxisX; // 0x9c
	FVector CurScaleAxisY; // 0xa8
	FTransform InitialTransform; // 0xc0
};

struct UUW-Lobby_Craft_List_Category_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_Category; // 0x250
	UCanvasPanel* CanvasPanel_SlotList; // 0x258
	UImage* Image_New; // 0x260
	UTextBlock* T_CategoryName; // 0x268
	UUW-Lobby_Craft_List_Category_Slot_C* UW-Lobby_RecipeList_Category_Item_4; // 0x270
	UUW-Lobby_Craft_List_Category_Slot_C* UW-Lobby_RecipeList_Category_Item_5; // 0x278
	UUW-Lobby_Craft_List_Category_Slot_C* UW-Lobby_RecipeList_Category_Item_6; // 0x280
	UVerticalBox* VerticalBox_ItemList; // 0x288
	UWidgetSwitcher* WidgetSwitcher_Own; // 0x290
	FString WeaponType; // 0x298
	bool IsPressed; // 0x2a8
	bool IsOwn; // 0x2a9
	bool IsOwnAny; // 0x2aa
	UUW-Lobby_Craft_List_C* ParentWidgetRef; // 0x2b0
	float SlotSize; // 0x2b8
	float CurrentListSize; // 0x2bc
	UPaperSprite* DefaultImage; // 0x2c0
	UPaperSprite* HoverImage; // 0x2c8
	UPaperSprite* PressedDefaultImage; // 0x2d0
	UPaperSprite* PressedHoverImage; // 0x2d8
};

struct UParticleModuleAccelerationBase : UParticleModule {
	char bAlwaysInWorldSpace : 1; // 0x30
};

struct UMaterialExpressionReflectionVectorWS : UMaterialExpression {
	FExpressionInput CustomWorldNormal; // 0x40
	char bNormalizeCustomWorldNormal : 1; // 0x54
};

struct ALandscapeStreamingProxy : ALandscapeProxy {
	LazyObjectProperty LandscapeActor; // 0x6d8
};

struct ABravoHotelMK3DReplayController : AMK3DReplayController {
	FVector2D MaxViewportSize; // 0x950
	bool bIsShowingTimelineWidget; // 0x958
	bool bIsShowingPlayerListWidget; // 0x959
	bool bIsShowingItemListWidget; // 0x95a
	FTimerHandle DuplicatedReconnectTimeout_TimerHandle; // 0x960
	UUserWidget* MainWidgetRef; // 0x968
	UUserWidget* ReplayMainWidgetRef; // 0x970
	float KillMessageAdditionalEffectiveTime; // 0x978
	AActor* LastViewTarget; // 0x980
	UUserWidget* GameOverlayWidget; // 0x990
	UUserWidget* GameSettingWidget; // 0x998
	UBravoHotelDebugInfo* DebugInfo; // 0x9a0
	ABravoHotelReplayZone* ReplayZone; // 0x9a8
	AActor* CurrentRecordingPawn; // 0x9b0
	ABravoHotelVehicle* TargetVehicle; // 0xa90
	AHUD* K2_AfterKillcamHUD; // 0xaa0
	ABravoHotelPlayerState* RecordingPlayerState; // 0xaa8
};

struct UVectorFieldComponent : UPrimitiveComponent {
	UVectorField* VectorField; // 0x4b0
	float Intensity; // 0x4b8
	float Tightness; // 0x4bc
	char bPreviewVectorField : 1; // 0x4c0
};

struct UParticleModuleAttractorParticle : UParticleModuleAttractorBase {
	FName EmitterName; // 0x30
	FRawDistributionFloat Range; // 0x38
	char bStrengthByDistance : 1; // 0x68
	FRawDistributionFloat Strength; // 0x70
	char bAffectBaseVelocity : 1; // 0xa0
	EAttractorParticleSelectionMethod SelectionMethod; // 0xa4
	char bRenewSource : 1; // 0xa8
	char bInheritSourceVel : 1; // 0xa8
	int32_t LastSelIndex; // 0xac
};

struct UMaterialExpressionRayTracingQualitySwitch : UMaterialExpression {
	FExpressionInput Normal; // 0x40
	FExpressionInput RayTraced; // 0x54
};

struct ABravoHotelAircraftFlight : ACharacter {
	ABravoHotelAircraftPoint* FixedStartingPoint; // 0x5e8
	bool bScrambled; // 0x5f0
	UAkComponent* AudioEmitter; // 0x5f8
	UAkAudioEvent* StartFlyingEvent; // 0x600
	UAkAudioEvent* StopFlyingEvent; // 0x608
	FAudioPlayingHandle FlyingSoundHandle; // 0x610
	TArray<ABravoHotelAircraft*> Aircrafts; // 0x618
	TArray<int32_t> AircraftOrdersForEvenFormation; // 0x628
	TArray<int32_t> AircraftOrdersForOddFormation; // 0x638
	EAircraftMovementMethod MovementMethod; // 0x648
	float ScramblingDuration; // 0x64c
	float ScramblingSpeed; // 0x650
	float DistanceFromBorder; // 0x654
	float SpeedToChangeAltitude; // 0x658
	float TargetAltitude; // 0x65c
	float AltitudeFromTargetAtFirst; // 0x660
	UCameraComponent* CineCamera; // 0x668
	USceneComponent* AircraftRoot; // 0x670
	UParticleSystemComponent* CineParticle; // 0x678
	USplineComponent* CineCameraSpline; // 0x680
	FVector CineDeltaLocation; // 0x688
	float CineInterpSpeed; // 0x694
	float CineInterpSpeedZ; // 0x698
	ABravoHotelCharacter* CinePawn; // 0x6a0
	APlayerController* CineController; // 0x6a8
	float CineCameraBlendTime; // 0x6b0
	char CineCameraBlendFunction; // 0x6b4
	float CineCameraBlendExp; // 0x6b8
	bool bUseSplineAnimation; // 0x6bc
	float SplineAnimationDelayTime; // 0x6c0
	float SplineAnimationTime; // 0x6c4
	FTimeline Timeline_SplineInterp; // 0x6d0
	UCurveFloat* Curve_SplineInterp; // 0x768
	FMulticastInlineDelegate OnStartCinematic; // 0x770
	FMulticastInlineDelegate OnEndCinematic; // 0x780
	TArray<FAircraftCinematic> CinematicSequenceList; // 0x790
	ALevelSequenceActor* LevelSequenceActor; // 0x7a0
	FVector OriginLocation; // 0x7b0
	FVector TargetLocation; // 0x7bc
	FRotator SavedRotation; // 0x7c8
	FVector2D DescentStartPos; // 0x7d4
	FVector2D DescentEndPos; // 0x7dc
	TArray<ABravoHotelAircraft*> AircraftsToScramble; // 0x7e8
	UBravoHotelWeightMapData* WeightMapInfo; // 0x840
	bool bUseUpdateBloom; // 0x870
	float BloomSpeed; // 0x874
	float TargetBloomIntensity; // 0x878
	bool IsVisibleStartPoint; // 0x87c
	bool IsVisibleEndPoint; // 0x87d
	bool IsVisibleAircraf; // 0x87e
	bool IsVisibleAircraftLine; // 0x87f
	bool bWantsToDestroy; // 0x880
	EAircraftFlightState State; // 0x881
};

struct UBoxComponent : UShapeComponent {
	FVector BoxExtent; // 0x4c8
	float LineThickness; // 0x4d4
};

struct UStandinNearPipeline : USimplygonStandinPipeline {
	FAggregationPipelineSettings Settings; // 0x28
};

struct UModularSynthComponent : USynthComponent {
	int32_t VoiceCount; // 0x710
};

struct UTextBlockWidgetStyle : USlateWidgetStyleContainerBase {
	FTextBlockStyle TextBlockStyle; // 0x30
};

struct UUW-CompassWidget_C : UBravoHotelCompassWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x350
	UCanvasPanel* CanvasPanel_3; // 0x358
	UCanvasPanel* CanvasPanel_4; // 0x360
	UCanvasPanel* grid; // 0x368
	UImage* Image; // 0x370
	UImage* Image_1; // 0x378
	UImage* Image_2; // 0x380
	UImage* Image_234; // 0x388
	UImage* Image_582; // 0x390
	UInvalidationBox* InvalidationBox_1; // 0x398
	URetainerBox* RetainerBox_108; // 0x3a0
	UUW-PlayerMarkerWidget_C* SupplyBoxMarker; // 0x3a8
	UCanvasPanel* UnitParent; // 0x3b0
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget; // 0x3b8
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_2; // 0x3c0
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_3; // 0x3c8
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_4; // 0x3d0
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_5; // 0x3d8
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_6; // 0x3e0
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_7; // 0x3e8
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_8; // 0x3f0
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_9; // 0x3f8
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_10; // 0x400
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_11; // 0x408
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_12; // 0x410
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_13; // 0x418
	UUW-CompassUnitWidget_C* UW-CompassUnitWidget_C_14; // 0x420
	UUW-PlayerMarkerWidget_C* UW-PlayerMarkerWidget_C_1; // 0x428
	UTextBlock* ViewAngle; // 0x430
	float ScaleForAngleToDistance; // 0x438
	float PositionCurveOffset; // 0x43c
	UCurveFloat* PositionCurve; // 0x440
	float PositionCurveWeight; // 0x448
	float ScaleCurveWeight; // 0x44c
	float ScaleCurveOffset; // 0x450
	int32_t NormalDirectionFontSize; // 0x454
	int32_t SpecialDirectionFontSize; // 0x458
	TArray<UUW-PlayerMarkerWidget_C*> ArrayPlayerMarkerWidget; // 0x460
	FLinearColor NorthColor; // 0x470
	int32_t Angle0To360; // 0x480
	float TempMarkerPosition; // 0x484
	float ArrangedAngle; // 0x488
};

struct UMaterialExpressionConstant2Vector : UMaterialExpression {
	float R; // 0x40
	float G; // 0x44
};

struct UMovieSceneSkeletalAnimationSection : UMovieSceneSection {
	FMovieSceneSkeletalAnimationParams Params; // 0xe0
	UAnimSequence* AnimSequence; // 0x1b8
	UAnimSequenceBase* Animation; // 0x1c0
	float StartOffset; // 0x1c8
	float EndOffset; // 0x1cc
	float PlayRate; // 0x1d0
	char bReverse : 1; // 0x1d4
	FName SlotName; // 0x1d8
};

struct UUW-ReportUserCompleted_C : UBravoHotelReportUserCompletedWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x250
	UButton* btn_confirm; // 0x258
	UImage* popup-bg; // 0x260
	UTextBlock* txt_description; // 0x268
	UImage* uw-bg; // 0x270
	FText DescriptionText; // 0x278
};

struct UUW-ImageText_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWrapBox* WrapBox_Main; // 0x250
	FTextBlockStyle DefaultTextStyle; // 0x258
	FText TextString; // 0x4c0
	UBP_GameSettings_C* Game Settings; // 0x4d8
	EHorizontalAlignment HorizontalAlignment; // 0x4e0
	float KeyImageScale; // 0x4e4
};

struct UUW-Inventory_MaterialIconSlot_C : UUW-Inventory_SlotBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1360
	UWidgetAnimation* Complete_ani; // 0x1368
	UWidgetAnimation* Serching_ani; // 0x1370
	UButton* Button; // 0x1378
	UImage* IconBox; // 0x1380
	UImage* Image; // 0x1388
	UImage* Image_2; // 0x1390
	UImage* Image_3; // 0x1398
	UImage* Image_4; // 0x13a0
	UImage* Image_5; // 0x13a8
	UImage* Image_6; // 0x13b0
	UImage* Image_7; // 0x13b8
	UImage* Image_8; // 0x13c0
	UImage* Image_9; // 0x13c8
	UImage* Image_10; // 0x13d0
	UImage* Image_149; // 0x13d8
	UImage* Image_170; // 0x13e0
	UImage* Image_253; // 0x13e8
	UImage* Image_305; // 0x13f0
	UImage* Image_Full; // 0x13f8
	UImage* IMG_ItemIcon; // 0x1400
	UImage* MaterialIcon; // 0x1408
	USizeBox* MouseHover_2; // 0x1410
	USizeBox* MouseHover_; // 0x1418
	USizeBox* MousePress_2; // 0x1420
	USizeBox* MousePress_; // 0x1428
	USizeBox* Searching_; // 0x1430
	UImage* Stroke; // 0x1438
	UImage* Stroke_2; // 0x1440
	UImage* Stroke_3; // 0x1448
	UImage* Stroke_4; // 0x1450
	UWidget* PreHoveredWidget; // 0x1458
	ItemWidgetDragType PreDragType; // 0x1460
	bool Selected; // 0x1461
	int32_t NeedCount; // 0x1464
	FName ItemKey; // 0x1468
	FSelecteSearchMaterialItemInfo SelectItem; // 0x1470
	bool BindSelectSearch; // 0x1480
	bool EnableSearch; // 0x1481
};

struct ABravoHotelShellCasing : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x328
	EProjectileType ProjectileType; // 0x330
	UAkAudioEvent* HitSurfaceEvent; // 0x338
	int8_t CurrentSoundPlayCount; // 0x340
	int8_t MaxSoundPlayCount; // 0x341
};

struct UScrollBar : UWidget {
	FScrollBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x5d8
	bool bAlwaysShowScrollbar; // 0x5e0
	bool bAlwaysShowScrollbarTrack; // 0x5e1
	EOrientation Orientation; // 0x5e2
	FVector2D Thickness; // 0x5e4
	FMargin Padding; // 0x5ec
};

struct UUW-Inventory_Proximity_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWrapBox* DropBoxPanel; // 0x250
	UScrollBox* ScrollBox_2; // 0x258
	UWrapBox* WB-BoxList; // 0x260
	UUW-InventoryWidget_C* InventoryWidget; // 0x268
};

struct UUW-ListWidget_MyKillMessage_C : UUW-ListWidget_ItemBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Anim_KillMessage; // 0x268
	UTextBlock* T_Message; // 0x270
};

struct UInterpTrackVisibility : UInterpTrack {
	TArray<FVisibilityTrackKey> VisibilityTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UUW-BasicConversation_C : UBravoHotelConversationWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x258
	UWidgetAnimation* First; // 0x260
	UWidgetAnimation* Hide; // 0x268
	UWidgetAnimation* Show; // 0x270
	UWidgetAnimation* Idle; // 0x278
	UImage* Bg; // 0x280
	UImage* Bg_2; // 0x288
	UImage* Bg_3; // 0x290
	UButton* Button_407; // 0x298
	UImage* Image; // 0x2a0
	UImage* Image_2; // 0x2a8
	UImage* Image_55; // 0x2b0
	UImage* Image_340; // 0x2b8
	UOverlay* Overlay_Base; // 0x2c0
	UTextBlock* TextBlock_Message; // 0x2c8
	UTextBlock* TextBlock_SpeakerName; // 0x2d0
	UUW-ImageText_C* UW-ImageText; // 0x2d8
	UWidgetSwitcher* WidgetSwitcher_Face; // 0x2e0
	FSentenceData SentenceData; // 0x2e8
};

struct UGizmoRectangleComponent : UGizmoBaseComponent {
	FVector DirectionX; // 0x4d0
	FVector DirectionY; // 0x4dc
	float OffsetX; // 0x4e8
	float OffsetY; // 0x4ec
	float LengthX; // 0x4f0
	float LengthY; // 0x4f4
	float Thickness; // 0x4f8
	char SegmentFlags; // 0x4fc
};

struct UNiagaraDataInterfaceSkeletalMesh : UNiagaraDataInterface {
	AActor* Source; // 0x30
	FNiagaraUserParameterBinding MeshUserParameter; // 0x38
	USkeletalMeshComponent* SourceComponent; // 0x60
	ENDISkeletalMesh_SkinningMode SkinningMode; // 0x68
	TArray<FName> SamplingRegions; // 0x70
	int32_t WholeMeshLOD; // 0x80
	TArray<FName> FilteredBones; // 0x88
	TArray<FName> FilteredSockets; // 0x98
	FName ExcludeBoneName; // 0xa8
	char bExcludeBone : 1; // 0xb0
};

struct USingleClickInputBehavior : UAnyButtonInputBehavior {
	bool HitTestOnRelease; // 0xc0
};

struct UUW-Radar_Cursor_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Escape_Cursor_Reset; // 0x250
	UWidgetAnimation* MiniNuke_Cursor_Reset; // 0x258
	UWidgetAnimation* Escape_Cursor; // 0x260
	UWidgetAnimation* MiniNuke_Cursor; // 0x268
	UImage* Image_390; // 0x270
	UImage* Image_519; // 0x278
	UImage* Img_CursorNuclear; // 0x280
	USizeBox* SizeBox_Nuclear; // 0x288
	UWidgetSwitcher* WidgetSwitcher_1; // 0x290
	UWidgetAnimation* Anim_MouseClicked; // 0x298
	UUW-Radar_Cursor_Dummy_C* DummyWidgetRef; // 0x2a0
};

struct UReplicationGraphNode_TearOff_ForConnection : UReplicationGraphNode {
	TArray<FTearOffActorInfo> TearOffActors; // 0x50
};

struct UMaterialExpressionAppendVector : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct ABravoHotelC4RemoteController : ABravoHotelRemoteController {
	ABravoHotelProjectileGrenadeC4* ThrownC4; // 0x1c08
	float EnableDistance; // 0x1c10
	float UpdateCheckTime; // 0x1c20
	bool bEnableRemoteController; // 0x1c24
};

struct UTimelineComponent : UActorComponent {
	FTimeline TheTimeline; // 0xb0
	char bIgnoreTimeDilation : 1; // 0x148
};

struct UMaterialExpressionCollectionParameter : UMaterialExpression {
	UMaterialParameterCollection* Collection; // 0x40
	FName ParameterName; // 0x48
	FGuid ParameterId; // 0x50
};

struct UHierarchicalLODSetup : UObject {
	TArray<FHierarchicalSimplification> HierarchicalLODSetup; // 0x28
	TSoftObjectPtr<UMaterialInterface> OverrideBaseMaterial; // 0x38
};

struct UPaperGroupedSpriteComponent : UMeshComponent {
	TArray<UMaterialInterface*> InstanceMaterials; // 0x4e0
	TArray<FSpriteInstanceData> PerInstanceSpriteData; // 0x4f0
};

struct UCoherentRenderingSettings : UObject {
	ECoherentRenderingSettingsSeverity RenderingLogSeverity; // 0x28
	bool ShowWarningsOnScreen; // 0x29
	FString DeveloperOptions; // 0x30
};

struct UGizmoComponentAxisSource : UObject {
	USceneComponent* Component; // 0x30
	int32_t AxisIndex; // 0x38
	bool bLocalAxes; // 0x3c
};

struct UDynamicEntryBoxBase : UWidget {
	EDynamicBoxType EntryBoxType; // 0x108
	FVector2D EntrySpacing; // 0x10c
	TArray<FVector2D> SpacingPattern; // 0x118
	FSlateChildSize EntrySizeRule; // 0x128
	EHorizontalAlignment EntryHorizontalAlignment; // 0x130
	EVerticalAlignment EntryVerticalAlignment; // 0x131
	int32_t MaxElementSize; // 0x134
	FUserWidgetPool EntryWidgetPool; // 0x148
};

struct UAkAudioEvent : UAkAssetBase {
	TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>> LocalizedPlatformAssetDataMap; // 0x50
	UAkAudioBank* RequiredBank; // 0xa0
	UAkAssetPlatformData* CurrentLocalizedPlatformData; // 0xb0
	float MaxAttenuationRadius; // 0xb8
	bool IsInfinite; // 0xbc
	float MinimumDuration; // 0xc0
	float MaximumDuration; // 0xc4
};

struct AVolumetricLightmapDensityVolume : AVolume {
	FInt32Interval AllowedMipLevelRange; // 0x360
};

struct UGizmoConstantAxisSource : UObject {
	FVector Origin; // 0x30
	FVector Direction; // 0x3c
};

struct UUW-Revival_PayPopup_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Bg; // 0x250
	UButton* Button_Cancle; // 0x258
	UButton* Button_OK; // 0x260
	UImage* Image; // 0x268
	UImage* Image_168; // 0x270
	UImage* Image_423; // 0x278
	UImage* Image_853; // 0x280
	UImage* Image_1449; // 0x288
	UImage* Image_1451; // 0x290
	UImage* Image_1452; // 0x298
	UImage* Image_1453; // 0x2a0
	UImage* Image_1454; // 0x2a8
	UImage* Image_1965; // 0x2b0
	UImage* Image_1967; // 0x2b8
	UImage* Image_1968; // 0x2c0
	UImage* Image_1969; // 0x2c8
	UImage* Image_1970; // 0x2d0
	UImage* Image_1971; // 0x2d8
	UImage* Image_1972; // 0x2e0
	UImage* Image_1973; // 0x2e8
	UImage* Image_1974; // 0x2f0
	UImage* Image_1975; // 0x2f8
	UImage* Image_1976; // 0x300
	UImage* Image_1977; // 0x308
	UImage* Image_1978; // 0x310
	UImage* Image_2324; // 0x318
	UTextBlock* TextBlock_CurrentGold; // 0x320
	UTextBlock* TextBlock_Price; // 0x328
	ABravoHotelCharacter* TargetCharacter; // 0x330
};

struct UMovieScenePropertyTrack : UMovieSceneNameableTrack {
	UMovieSceneSection* SectionToKey; // 0x58
	FName PropertyName; // 0x60
	FString PropertyPath; // 0x68
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct ACameraActor : AActor {
	EAutoReceiveInput AutoActivateForPlayer; // 0x328
	UCameraComponent* CameraComponent; // 0x330
	USceneComponent* SceneComponent; // 0x338
	char bConstrainAspectRatio : 1; // 0x348
	float AspectRatio; // 0x34c
	float FOVAngle; // 0x350
	float PostProcessBlendWeight; // 0x354
	FPostProcessSettings PostProcessSettings; // 0x360
};

struct UBlueprintGeneratedClass : UClass {
	int32_t NumReplicatedProperties; // 0x2d0
	char bHasNativizedParent : 1; // 0x2d4
	char bHasCookedComponentInstancingData : 1; // 0x2d4
	TArray<UDynamicBlueprintBinding*> DynamicBindingObjects; // 0x2d8
	TArray<UActorComponent*> ComponentTemplates; // 0x2e8
	TArray<UTimelineTemplate*> Timelines; // 0x2f8
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x308
	USimpleConstructionScript* SimpleConstructionScript; // 0x318
	UInheritableComponentHandler* InheritableComponentHandler; // 0x320
	UStructProperty* UberGraphFramePointerProperty; // 0x328
	UFunction* UberGraphFunction; // 0x338
	TMap<FName, FBlueprintCookedComponentInstancingData> CookedComponentInstancingData; // 0x340
};

struct UUW-ReplayEventMarker_Resuscitated_C : UUW-ReplayEventMarkerBasic_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a0
	UBorder* VisualBorder; // 0x2a8
};

struct URandomVector : UFieldNodeVector {
	float Magnitude; // 0xb0
};

struct UAITask : UGameplayTask {
	AAIController* OwnerController; // 0x68
};

struct UCustomizedChara_DataAsset_C : UPrimaryDataAsset {
	float CharacterRotationVelocity; // 0x30
	float CameraMoveVelocity; // 0x34
	float CameraTop; // 0x38
	float CameraBottom; // 0x3c
	float CameraZoomVelocity; // 0x40
	float CameraInterpSpeed; // 0x44
	float CharacterRotationInterpSpeed; // 0x48
	UCurveFloat* CameraMove; // 0x50
};

struct ANavLinkProxy : AActor {
	TArray<FNavigationLink> PointLinks; // 0x338
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x348
	UNavLinkCustomComponent* SmartLinkComp; // 0x358
	bool bSmartLinkIsRelevant; // 0x360
	FMulticastInlineDelegate OnSmartLinkReached; // 0x368
};

struct UMaterialExpressionRuntimeVirtualTextureSampleParameter : UMaterialExpressionRuntimeVirtualTextureSample {
	FName ParameterName; // 0x90
	FGuid ExpressionGUID; // 0x98
	FName Group; // 0xa8
};

struct UNiagaraRendererProperties : UNiagaraMergeable {
	int32_t SortOrderHint; // 0x28
	bool bIsEnabled; // 0x2c
	bool bMotionBlurEnabled; // 0x2d
};

struct UBorderSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UBravoHotelCameraComponent : UCineCameraComponent {
	float ResetCameraMovementFOVThreshold; // 0x968
};

struct UEditableMesh : UObject {
	TArray<UEditableMeshAdapter*> Adapters; // 0x3b8
	int32_t TextureCoordinateCount; // 0x3d0
	int32_t PendingCompactCounter; // 0x51c
	int32_t SubdivisionCount; // 0x520
};

struct UTcpMessagingSettings : UObject {
	bool EnableTransport; // 0x28
	FString ListenEndpoint; // 0x30
	TArray<FString> ConnectToEndpoints; // 0x40
	int32_t ConnectionRetryDelay; // 0x50
	bool bStopServiceWhenAppDeactivates; // 0x54
};

struct USphereComponent : UShapeComponent {
	float SphereRadius; // 0x4c8
};

struct UDataAsset : UObject {
	UDataAsset* NativeClass; // 0x28
};

struct UMaterialExpressionGIReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput StaticIndirect; // 0x54
	FExpressionInput DynamicIndirect; // 0x68
};

struct ABravoHotelWindow : ABravoHotelDestructibleEx {
	TArray<UBravoHotelHIDestructibleComponent*> HIWindowComponents; // 0x338
	TArray<UBravoHotelDestructibleComponent*> WindowComponents; // 0x348
	bool bCreateAudioPortal; // 0x358
	TArray<UBravoHotelAudioPortalComponent*> SpawnedAudioPortalsOnClient; // 0x360
};

struct UParticleModuleTypeDataGpu : UParticleModuleTypeDataBase {
	FGPUSpriteEmitterInfo EmitterInfo; // 0x30
	FGPUSpriteResourceData ResourceData; // 0x2b0
	float CameraMotionBlurAmount; // 0x410
	char bClearExistingParticlesOnInit : 1; // 0x414
};

struct UUW-GameBuffSlot_BoostCover_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UUW-GameBuffSlot_Boost_C* UW-GameBuffSlot_Boost; // 0x250
	UUW-Inventory_ItemSlotHover_C* HoverWidget; // 0x258
};

struct ABP-SpectatorPC_C : ABravoHotelSpectatorController {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1550
	ABP-SpectatorPawn_C* Observer; // 0x1558
	bool PlayingKillCam; // 0x1560
	UBP-SpectatorWidget_C* AfterGameHUD; // 0x1568
	UBravoHotelGameInstance* GameInstanceRef; // 0x1570
	bool bKillCamFinish; // 0x1578
};

struct UWmfMediaSettings : UObject {
	bool AllowNonStandardCodecs; // 0x28
	bool LowLatency; // 0x29
	bool NativeAudioOut; // 0x2a
	bool HardwareAcceleratedVideoDecoding; // 0x2b
};

struct ANavMeshBoundsVolume : AVolume {
	FNavAgentSelector SupportedAgents; // 0x360
};

struct UAnimationSharingStateProcessor : UObject {
	TSoftObjectPtr<UEnum> AnimationStateEnum; // 0x28
};

struct AGameMode : AGameModeBase {
	FName MatchState; // 0x3c8
	char bDelayedStart : 1; // 0x3d0
	int32_t NumSpectators; // 0x3d4
	int32_t NumPlayers; // 0x3d8
	int32_t NumBots; // 0x3dc
	float MinRespawnDelay; // 0x3e0
	int32_t NumTravellingPlayers; // 0x3e4
	ULocalMessage* EngineMessageClass; // 0x3e8
	TArray<APlayerState*> InactivePlayerArray; // 0x3f0
	float InactivePlayerStateLifeSpan; // 0x400
	int32_t MaxInactivePlayers; // 0x404
	bool bHandleDedicatedServerReplays; // 0x408
};

struct UUW-Inventory_ItemInfoTooltip_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_94; // 0x250
	UImage* Image_224; // 0x258
	URichTextBlock* RichTextBlock_321; // 0x260
	UUW-InventoryWidget_C* InventoryRef; // 0x268
};

struct UAISenseEvent_Damage : UAISenseEvent {
	FAIDamageEvent Event; // 0x28
};

struct UParticleModuleBeamNoise : UParticleModuleBeamBase {
	char bLowFreq_Enabled : 1; // 0x30
	int32_t Frequency; // 0x34
	int32_t Frequency_LowRange; // 0x38
	FRawDistributionVector NoiseRange; // 0x40
	FRawDistributionFloat NoiseRangeScale; // 0x88
	char bNRScaleEmitterTime : 1; // 0xb8
	FRawDistributionVector NoiseSpeed; // 0xc0
	char bSmooth : 1; // 0x108
	float NoiseLockRadius; // 0x10c
	char bNoiseLock : 1; // 0x110
	char bOscillate : 1; // 0x110
	float NoiseLockTime; // 0x114
	float NoiseTension; // 0x118
	char bUseNoiseTangents : 1; // 0x11c
	FRawDistributionFloat NoiseTangentStrength; // 0x120
	int32_t NoiseTessellation; // 0x150
	char bTargetNoise : 1; // 0x154
	float FrequencyDistance; // 0x158
	char bApplyNoiseScale : 1; // 0x15c
	FRawDistributionFloat NoiseScale; // 0x160
};

struct APaperFlipbookActor : AActor {
	UPaperFlipbookComponent* RenderComponent; // 0x328
};

struct USoundMix : UObject {
	char bApplyEQ : 1; // 0x28
	float EQPriority; // 0x2c
	FAudioEQEffect EQSettings; // 0x30
	TArray<FSoundClassAdjuster> SoundClassEffects; // 0x70
	float InitialDelay; // 0x80
	float FadeInTime; // 0x84
	float Duration; // 0x88
	float FadeOutTime; // 0x8c
};

struct UNiagaraDataInterfaceColorCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve RedCurve; // 0x58
	FRichCurve GreenCurve; // 0xd8
	FRichCurve BlueCurve; // 0x158
	FRichCurve AlphaCurve; // 0x1d8
};

struct UMovieSceneAkTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
	char bIsAMasterTrack : 1; // 0x68
};

struct UUW-ReplayPlayerListWidget_C : UBravoHotelReplayPlayerListWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	UButton* Bt_ListNext; // 0x2e8
	UButton* BT_ListPrev; // 0x2f0
	UScrollBox* ScrollBox_PlayerItem; // 0x2f8
	UTextBlock* T_SortType; // 0x300
	UVerticalBox* VB_ListMain; // 0x308
};

struct USoundClass : UObject {
	FSoundClassProperties Properties; // 0x28
	TArray<USoundClass*> ChildClasses; // 0x80
	TArray<FPassiveSoundMixModifier> PassiveSoundMixModifiers; // 0x90
	FSoundModulation Modulation; // 0xa0
	USoundClass* ParentClass; // 0xb0
};

struct UPaperTileMap : UObject {
	int32_t MapWidth; // 0x28
	int32_t MapHeight; // 0x2c
	int32_t TileWidth; // 0x30
	int32_t TileHeight; // 0x34
	float PixelsPerUnrealUnit; // 0x38
	float SeparationPerTileX; // 0x3c
	float SeparationPerTileY; // 0x40
	float SeparationPerLayer; // 0x44
	TSoftObjectPtr<UPaperTileSet> SelectedTileSet; // 0x48
	UMaterialInterface* Material; // 0x70
	TArray<UPaperTileLayer*> TileLayers; // 0x78
	float CollisionThickness; // 0x88
	ESpriteCollisionMode SpriteCollisionDomain; // 0x8c
	ETileMapProjectionMode ProjectionMode; // 0x8d
	int32_t HexSideLength; // 0x90
	UBodySetup* BodySetup; // 0x98
	int32_t LayerNameIndex; // 0xa0
};

struct USoundNodeGroupControl : USoundNode {
	TArray<int32_t> GroupSizes; // 0x48
};

struct AProceduralFoliageBlockingVolume : AVolume {
	AProceduralFoliageVolume* ProceduralFoliageVolume; // 0x360
};

struct UUW-NitroBoomTargetWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_73; // 0x250
	UKeyImageWidget_C* KeyImageWidget; // 0x258
};

struct UUW-MatchEndWidget_C : UBravoHotelGameMatchEndWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3c8
	UUW-MatchEnd_Animation_02_C* UW-MatchEnd_Animation_02; // 0x3d0
	UUW-MatchEnd_Ranking2_C* UW-MatchEnd_Ranking2; // 0x3d8
	UWidgetSwitcher* WidgetSwitcher_Type; // 0x3e0
	UUW-MatchEnd_Animation_C* UW_SimpleResult; // 0x3e8
	UUW-MainWidget_C* MainWidgetRef; // 0x3f0
	ABravoHotelPlayerHUD* PlayerHUDRef; // 0x3f8
	UUW-MatchEnd_Ranking_C* UW_FinalResult; // 0x400
	UUW-MatchEnd_Animation_C* UW_Animation; // 0x408
	ABravoHotelPlayerController* PlayerControllerRef; // 0x410
	bool NewResult; // 0x418
	FMatchEndFinalResult ResultData; // 0x419
	bool IsGiveUp; // 0x41d
	float WinMatchEndResultShowTime; // 0x420
	FMatchEndAnimation ResultMatchEndAnimation; // 0x424
};

struct UAkAudioEventData : UAkAssetDataSwitchContainer {
	float MaxAttenuationRadius; // 0x88
	bool IsInfinite; // 0x8c
	float MinimumDuration; // 0x90
	float MaximumDuration; // 0x94
	TMap<FString, UAkAssetDataSwitchContainer*> LocalizedMedia; // 0x98
	TSet<UAkAudioEvent*> PostedEvents; // 0xe8
	TSet<UAkAuxBus*> UserDefinedSends; // 0x138
	TSet<UAkTrigger*> PostedTriggers; // 0x188
	TSet<UAkGroupValue*> GroupValues; // 0x1d8
};

struct UWBP-AmplifierEffect_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* FadeOut; // 0x250
	UWidgetAnimation* FadeIn; // 0x258
	UImage* Image_Effect; // 0x260
	UUMGSequencePlayer* NewVar_1; // 0x268
	bool IsFadeInOutEvent; // 0x270
	float CurrentFade; // 0x274
};

struct UAkLuminInitializationSettings : UObject {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkAdvancedInitializationSettingsWithMultiCoreRendering AdvancedSettings; // 0xb8
};

struct UMaterialExpressionAbs : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct USourceEffectChorusPreset : USoundEffectSourcePreset {
	FSourceEffectChorusSettings Settings; // 0x80
};

struct ABravoHotelMK3DSpectatorPawn : AMK3DSpectatorPawn {
	ABravoHotelMK3DReplayController* ReplayController; // 0x3c0
	float DefaultSpeed; // 0x3c8
	float CurrentSpeedLevel; // 0x3cc
	float MinSpeedLevel; // 0x3d0
	float MaxSpeedLevel; // 0x3d4
};

struct UUW-MatchEnd_RewardSlot_02_Blank_C : UUserWidget {
	UImage* Image_24; // 0x248
};

struct UAnimInstance : UObject {
	FMulticastInlineDelegate OnMontageBlendingOut; // 0x28
	FMulticastInlineDelegate OnMontageStarted; // 0x38
	FMulticastInlineDelegate OnMontageEnded; // 0x48
	FMulticastInlineDelegate OnAllMontageInstancesEnded; // 0x58
	FAnimNotifyQueue NotifyQueue; // 0xf0
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x160
	char bUsingCopyPoseFromMesh : 1; // 0x258
	char bReceiveNotifiesFromLinkedInstances : 1; // 0x258
	char bPropagateNotifiesToLinkedInstances : 1; // 0x258
	ERootMotionMode RootMotionMode; // 0x259
	char bUseMultiThreadedAnimationUpdate : 1; // 0x25a
	char bQueueMontageEvents : 1; // 0x25a
	USkeleton* CurrentSkeleton; // 0x260
};

struct UEditableGameplayTagQueryExpression_AnyExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UInterpGroupCamera : UInterpGroup {
	UCameraAnim* CameraAnimInst; // 0x50
	float CompressTolerance; // 0x58
};

struct UHapticFeedbackEffect_Buffer : UHapticFeedbackEffect_Base {
	TArray<char> Amplitudes; // 0x28
	int32_t SampleRate; // 0x38
};

struct UConsole : UObject {
	ULocalPlayer* ConsoleTargetPlayer; // 0x38
	UTexture2D* DefaultTexture_Black; // 0x40
	UTexture2D* DefaultTexture_White; // 0x48
	TArray<FString> HistoryBuffer; // 0x68
};

struct UBravoHotelCustomMatchWidget : UUserWidget {
	FBravoHotelBlueZoneInfo Data; // 0x248
	TArray<FBattleRoyalPhaseInfo> PhaseInfo; // 0x3f0
};

struct ABP-TransportDropBox_C : ABravoHotelTransportDropBoxActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x4b8
	float OverWater_CV_OverWater_77012AB948B572A268E63583418444D0; // 0x4c0
	ETimelineDirection OverWater__Direction_77012AB948B572A268E63583418444D0; // 0x4c4
	UTimelineComponent* OverWater; // 0x4c8
	float HittingWater_CV_OverWater_7E5F9D2E4D0DDDC70F2F67AD035A6212; // 0x4d0
	ETimelineDirection HittingWater__Direction_7E5F9D2E4D0DDDC70F2F67AD035A6212; // 0x4d4
	UTimelineComponent* HittingWater; // 0x4d8
	float LandingTimer; // 0x4e0
	TArray<FSpawnItemResult> ItemResult; // 0x4e8
	float ParachuteTimer; // 0x4f8
	float LandingDelay; // 0x4fc
	float ForceLandingDelaySeconds; // 0x500
	bool bLandedOnGround; // 0x504
};

struct UUW-VehicleSubInfo_Base_C : UUserWidget {
	FLinearColor MySeatColor; // 0x248
	UCanvasPanel* WheelGroup; // 0x258
	UCanvasPanel* SeatGroup; // 0x260
};

struct UUW-ItemDropPopup_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* BlockMouse; // 0x250
	UButton* Button_Accept; // 0x258
	UButton* Button_Cancel; // 0x260
	UButton* Button_Close; // 0x268
	UButton* Button_Max; // 0x270
	UButton* Button_Min; // 0x278
	UImage* Image_9; // 0x280
	USlider* Slider_137; // 0x288
	UTextBlock* TextBlock_Accept; // 0x290
	UTextBlock* TextBlock_MaxCount; // 0x298
	UTextBlock* TextBlock_MinCount; // 0x2a0
	UTextBlock* TextBlock_Title; // 0x2a8
	UEditableTextBox* TextBox_DropCount; // 0x2b0
	int32_t CurrentCount; // 0x2b8
	int32_t MaxCount; // 0x2bc
	FText LastEnteredText; // 0x2c0
	FInventoryItemInfo ItemInfo; // 0x2d8
	FInventoryItemDetailInfo ItemDetailInfo; // 0x370
	ABravoHotelPickup* PickupRef; // 0x800
	ABravoHotelDropBoxActor* DropBoxRef; // 0x808
	UUW-InventoryWidget_C* InventoryWidget; // 0x810
	bool bClosing; // 0x818
	UUW-Inventory_MaterialSlot_C* MaterialSlot; // 0x820
};

struct UParticleModuleLocationEmitterDirect : UParticleModuleLocationBase {
	FName EmitterName; // 0x30
};

struct UStaticMeshSocket : UObject {
	FName SocketName; // 0x28
	FVector RelativeLocation; // 0x30
	FRotator RelativeRotation; // 0x3c
	FVector RelativeScale; // 0x48
	FString Tag; // 0x58
};

struct ABravoHotelTransportDropBoxActor : ABravoHotelDropBoxActor {
	EDropBoxState PrevDropBoxState; // 0x3a8
	EDropBoxState CurrentDropBoxState; // 0x3a9
	bool bLandedOnWater; // 0x3aa
	float LandingSeconds; // 0x3bc
	UStaticMeshComponent* DropBoxMesh; // 0x3d8
	UStaticMeshComponent* ParachuteMesh; // 0x3e0
	UAkComponent* DropBoxAudioComponent; // 0x3e8
	UParticleSystemComponent* BoxSmokeParticleFX; // 0x3f0
	UParticleSystemComponent* WaterParticleFX; // 0x3f8
	UParticleSystem* BoxSmokeParticle; // 0x400
	UParticleSystem* WaterParticle; // 0x408
	TSoftObjectPtr<UAkAudioEvent> SmokeStartSound; // 0x410
	TSoftObjectPtr<UAkAudioEvent> SmokeStopSound; // 0x438
	TSoftObjectPtr<UAkAudioEvent> LandOnGroundSound; // 0x460
	TSoftObjectPtr<UAkAudioEvent> LandOnWaterSound; // 0x488
	float SmokeRemainTime; // 0x4b0
	float SmokeEeffectDuration; // 0x4b4
};

struct ABravoHotelSkillTargetingBombing : ABravoHotelSkillTargetingBase {
	UAkAudioEvent* BombingSound; // 0x348
};

struct UAkWwiseTree : UWidget {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnItemDragged; // 0x118
};

struct UUW-BlackMarket_C : UUserWidget {
	UImage* Image_3; // 0x248
	UImage* IMG-BG; // 0x250
	UImage* IMG-Close; // 0x258
	UImage* IMG-TitleBG; // 0x260
	UUW-BlackMarket_Main_C* UW-BlackMarket_Main; // 0x268
};

struct UMovementComponent : UActorComponent {
	USceneComponent* UpdatedComponent; // 0xb0
	UPrimitiveComponent* UpdatedPrimitive; // 0xb8
	FVector Velocity; // 0xc4
	FVector PlaneConstraintNormal; // 0xd0
	FVector PlaneConstraintOrigin; // 0xdc
	char bUpdateOnlyIfRendered : 1; // 0xe8
	char bAutoUpdateTickRegistration : 1; // 0xe8
	char bTickBeforeOwner : 1; // 0xe8
	char bAutoRegisterUpdatedComponent : 1; // 0xe8
	char bConstrainToPlane : 1; // 0xe8
	char bSnapToPlaneAtStart : 1; // 0xe8
	char bAutoRegisterPhysicsVolumeUpdates : 1; // 0xe8
	char bComponentShouldUpdatePhysicsVolume : 1; // 0xe8
	EPlaneConstraintAxisSetting PlaneConstraintAxisSetting; // 0xeb
};

struct UNativePlayerListWidget : UUserWidget {
	UTextBlock* SortMethodTextBlock; // 0x248
	UButton* PlayerListPrevButton; // 0x250
	UButton* PlayerListNextButton; // 0x258
	UScrollBox* ScrollBox_PlayerName; // 0x260
};

struct UBTService_BlackboardBase : UBTService {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UParticleModuleVectorFieldRotation : UParticleModuleVectorFieldBase {
	FVector MinInitialRotation; // 0x30
	FVector MaxInitialRotation; // 0x3c
};

struct UBasicOverlays : UOverlays {
	TArray<FOverlayItem> Overlays; // 0x28
};

struct UParticleModuleVectorFieldGlobal : UParticleModuleVectorFieldBase {
	char bOverrideGlobalVectorFieldTightness : 1; // 0x30
	float GlobalVectorFieldScale; // 0x34
	float GlobalVectorFieldTightness; // 0x38
};

struct UAnimCompress_RemoveLinearKeys : UAnimCompress {
	float MaxPosDiff; // 0x40
	float MaxAngleDiff; // 0x44
	float MaxScaleDiff; // 0x48
	float MaxEffectorDiff; // 0x4c
	float MinEffectorDiff; // 0x50
	float EffectorDiffSocket; // 0x54
	float ParentKeyScale; // 0x58
	char bRetarget : 1; // 0x5c
	char bActuallyFilterLinearKeys : 1; // 0x5c
};

struct UEnvQueryTest_Volume : UEnvQueryTest {
	UEnvQueryContext* VolumeContext; // 0x1f8
	AVolume* VolumeClass; // 0x200
	char bDoComplexVolumeTest : 1; // 0x208
};

struct USourceEffectPhaserPreset : USoundEffectSourcePreset {
	FSourceEffectPhaserSettings Settings; // 0x78
};

struct UUW-Inventory_PerkSlot_FX_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* IMG_PerkLevelUpFx; // 0x250
	EPerkSlotFlag PerkSlot; // 0x258
	UTexture* PerkFxTexture; // 0x260
	bool PlayAnimation_1; // 0x268
	float CurrentAnimationTime; // 0x26c
	float AnimLastTime; // 0x270
	UMaterialInstanceDynamic* PerkFxMaterialInstance; // 0x278
	UTexture* UltimatePerkFxTexture; // 0x280
};

struct UImgMediaSource : UBaseMediaSource {
	FFrameRate FrameRateOverride; // 0x88
	FString ProxyOverride; // 0x90
	FDirectoryPath SequencePath; // 0xa0
};

struct UMaterialExpressionClamp : UMaterialExpression {
	FExpressionInput Input; // 0x40
	FExpressionInput Min; // 0x54
	FExpressionInput MAX; // 0x68
	EClampMode ClampMode; // 0x7c
	float MinDefault; // 0x80
	float MaxDefault; // 0x84
};

struct UAISense_Team : UAISense {
	TArray<FAITeamStimulusEvent> RegisteredEvents; // 0x80
};

struct ALevelStreamingVolume : AVolume {
	TArray<FName> StreamingLevelNames; // 0x360
	char bEditorPreVisOnly : 1; // 0x370
	char bDisabled : 1; // 0x370
	EStreamingVolumeUsage StreamingUsage; // 0x374
};

struct UMaterialExpressionCustom : UMaterialExpression {
	FString Code; // 0x40
	ECustomMaterialOutputType OutputType; // 0x50
	FString Description; // 0x58
	TArray<FCustomInput> Inputs; // 0x68
	TArray<FCustomDefine> AdditionalDefines; // 0x78
	TArray<FString> IncludeFilePaths; // 0x88
};

struct UInDoorVolumeComponent : UBoxComponent {
	char AdjustmentTargets; // 0x4d8
};

struct UMovieSceneMediaTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> MediaSections; // 0x58
};

struct UMovieSceneVectorSection : UMovieSceneSection {
	FMovieSceneFloatChannel Curves[0x4]; // 0xe0
	int32_t ChannelsUsed; // 0x360
};

struct UUW-MainWidget_C : UBravoHotelMainWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x450
	UWidgetAnimation* Anim_HideWidget; // 0x458
	UWidgetAnimation* HideLaserPoint; // 0x460
	UWidgetAnimation* ShowLaserPoint; // 0x468
	UBackgroundBlur* BackgroundBlur_154; // 0x470
	UCanvasPanel* Canvas; // 0x478
	UHorizontalBox* HB_PerkSpin; // 0x480
	UImage* RedCircle; // 0x488
	UTextBlock* TextBlock_Start; // 0x490
	UUW-CompassWidget_C* UW-CompassWidget; // 0x498
	UUW-HUDMessageWidget_C* UW-HUDMessageWidget; // 0x4a0
	UUW-InteractionWidget_C* UW-InteractionWidget; // 0x4a8
	UUW-JetpackWidget_C* UW-JetpackWidget; // 0x4b0
	UUW-MS_C* UW-MS; // 0x4b8
	UUW-PerkLevelUp_02_C* UW-PerkLevelUp_02; // 0x4c0
	UUW-VehicleWidget_C* UW-VehicleWidget; // 0x4c8
	ABravoHotelCharacter* TargetPawn; // 0x4d0
	FDisplayAbility LastDisplayAbility; // 0x4d8
	UUW-Radar_Cursor_C* UW-RaderCursorWidget; // 0x4e8
	UUserWidget* UW-DefaultCursorWidget; // 0x4f0
	FTimerHandle Timer_IsMouseWidgetInMap; // 0x4f8
	UUW-NitroBoomTargetWidget_C* UW-NitroBoomTargetWidget; // 0x500
	bool bIsShow; // 0x508
	float TmpViewportUpAngle; // 0x50c
	float TmpViewportSideAngle; // 0x510
	FVector2D CenterPosition; // 0x514
	UUW-MapImageWidget_C* UW-MapImageRef; // 0x520
	FTimerHandle Timer_AutoPerkDeck; // 0x528
	int32_t LastPlayZoneID; // 0x530
	bool bShowLevelUp; // 0x534
	bool IsPlayingUltimateSound; // 0x535
	bool bIsUnlockUltimateSkill; // 0x536
};

struct ULandscapeMeshProxyComponent : UStaticMeshComponent {
	FGuid LandscapeGuid; // 0x548
	TArray<FIntPoint> ProxyComponentBases; // 0x558
	int8_t ProxyLOD; // 0x568
};

struct UPaperTileMapComponent : UMeshComponent {
	int32_t MapWidth; // 0x4e0
	int32_t MapHeight; // 0x4e4
	int32_t TileWidth; // 0x4e8
	int32_t TileHeight; // 0x4ec
	UPaperTileSet* DefaultLayerTileSet; // 0x4f0
	UMaterialInterface* Material; // 0x4f8
	TArray<UPaperTileLayer*> TileLayers; // 0x500
	FLinearColor TileMapColor; // 0x510
	int32_t UseSingleLayerIndex; // 0x520
	bool bUseSingleLayer; // 0x524
	UPaperTileMap* TileMap; // 0x528
};

struct UCustomizableObjectInstance : UObject {
	UCustomizableObject* CustomizableObject; // 0x28
	USkeletalMesh* SkeletalMesh; // 0x30
	TArray<FCustomizableObjectBoolParameterValue> BoolParameters; // 0x38
	TArray<FCustomizableObjectIntParameterValue> IntParameters; // 0x48
	TArray<FCustomizableObjectFloatParameterValue> FloatParameters; // 0x58
	TArray<FCustomizableObjectTextureParameterValue> TextureParameters; // 0x68
	TArray<FCustomizableObjectVectorParameterValue> VectorParameters; // 0x78
	TArray<FCustomizableObjectProjectorParameterValue> ProjectorParameters; // 0x88
	bool bBuildParameterDecorations; // 0x98
	FMulticastInlineDelegate UpdatedDelegate; // 0xa0
	FString SkeletalMeshStatus; // 0x110
	TArray<FString> MaterialTags; // 0x140
	UCustomizableInstancePrivateData* PrivateData; // 0x1d0
};

struct UBlendProfile : UObject {
	USkeleton* OwningSkeleton; // 0x38
	TArray<FBlendProfileBoneEntry> ProfileEntries; // 0x40
};

struct UBP-LoadingScreenWidget_C : UBravoHotelLoadingWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a0
	UHorizontalBox* HorizontalBox_1; // 0x2a8
	UImage* Image_bg; // 0x2b0
	URichTextBlock* RichTextBlock; // 0x2b8
	URichTextBlock* RichTextBlock_Title; // 0x2c0
	UThrobber* Throbber_1; // 0x2c8
	UVerticalBox* VerticalBox_2; // 0x2d0
	TArray<UTexture2D*> Textures; // 0x2d8
	UBP_GameSettings_C* Game Settings; // 0x2e8
	FString TempString; // 0x2f0
	bool Key; // 0x300
	int32_t RandomTemp; // 0x304
	int32_t ImageIndex; // 0x308
	int32_t TitleIndex; // 0x30c
};

struct USourceEffectSimpleDelayPreset : USoundEffectSourcePreset {
	FSourceEffectSimpleDelaySettings Settings; // 0x80
};

struct APointLight : ALight {
	UPointLightComponent* PointLightComponent; // 0x338
};

struct UBravoHotelLobbyWidget_Web : UBravoHotelCoherentBaseWidget {
	FVector2D MousePos; // 0x364
	bool CheckPreLoad; // 0x36c
	FMulticastInlineDelegate ExitDelegate; // 0x370
	FMulticastInlineDelegate OptionDelegate; // 0x380
	FMulticastInlineDelegate UIButtonOverSoundDelegate; // 0x390
	FMulticastInlineDelegate UIButtonClickSoundDelegate; // 0x3a0
	FMulticastInlineDelegate StoreDelegate; // 0x3b0
	FMulticastInlineDelegate PartyInfoDelegate; // 0x3c0
	FBravoHotelLobbyMapSetting DefaultMapSetting; // 0x3d0
	FBravoHotelLobbyMapSetting DevMapSetting; // 0x3e0
	FBravoHotelLobbyMapSetting MapSetting; // 0x3f0
	UBravoHotelCustomizedCharacter* CustomizedCharacterComponent; // 0x400
	UBravoHotelSupplyBox* SupplyBoxComponent; // 0x408
	UBravoHotelArmory* ArmoryComponent; // 0x410
	UBravoHotelSeason* SeasonComponent; // 0x418
	FMulticastInlineDelegate TabDelegate; // 0x420
	FMulticastInlineDelegate OnPrefetchingProgress; // 0x430
	UParticleSystem* SupplyBoxSpawnEffect; // 0x440
	UCameraPostProcessPreset* PP_Preset_PickupOutline; // 0x448
	int32_t GamePlayTime_Hours; // 0x450
	int32_t PrefetchingProgressPercentage; // 0x454
	bool bTryMatchingConnected; // 0x459
	TSoftClassPtr<UObject> SoftReplayWidgetClass; // 0x460
	FTimerHandle ReMatchingByDS_TimerHandle; // 0x488
	int32_t Gold; // 0x4a0
	TArray<FResponse_Weapon_List_Data> WeaponList; // 0x4a8
	TArray<FResponse_MaterialList_Data> MaterialList; // 0x4b8
	float MaxServerWaitingTime; // 0x4c8
	bool bCraftServerWaiting; // 0x4cc
};

struct ABravoHotelProjectileGrenadeFragment : ABravoHotelProjectileGrenade {
	UMaterialInterface* ExplosionGroundDecalMaterial; // 0x688
	FVector ExplosionGroundDecalSize; // 0x690
	UDecalComponent* ExplosionGroundDecalComponent; // 0x6a0
	UMaterialInstanceDynamic* GroundDecalDynamicMaterial; // 0x6a8
	UAkAudioEvent* FlybyEvent; // 0x6b8
	FAudioPlayingHandle FlybySoundHandle; // 0x6c0
};

struct UTeamInfoUpdaterComponent : UActorComponent {
	FMulticastInlineDelegate OnTeamPlayerIndexChanged; // 0xb0
	FMulticastInlineDelegate OnWidgetUpdateDelegate; // 0xc0
	int32_t TeamPlayerIndex; // 0xd0
	ABravoHotelPlayerState* OldTargetPlayerState; // 0xd8
};

struct ARecastNavMesh : ANavigationData {
	char bDrawTriangleEdges : 1; // 0x508
	char bDrawPolyEdges : 1; // 0x508
	char bDrawFilledPolys : 1; // 0x508
	char bDrawNavMeshEdges : 1; // 0x508
	char bDrawTileBounds : 1; // 0x508
	char bDrawPathCollidingGeometry : 1; // 0x508
	char bDrawTileLabels : 1; // 0x508
	char bDrawPolygonLabels : 1; // 0x508
	char bDrawDefaultPolygonCost : 1; // 0x509
	char bDrawLabelsOnPathNodes : 1; // 0x509
	char bDrawNavLinks : 1; // 0x509
	char bDrawFailedNavLinks : 1; // 0x509
	char bDrawClusters : 1; // 0x509
	char bDrawOctree : 1; // 0x509
	char bDrawOctreeDetails : 1; // 0x509
	char bDrawMarkedForbiddenPolys : 1; // 0x509
	char bDistinctlyDrawTilesBeingBuilt : 1; // 0x50a
	char bDrawNavMesh : 1; // 0x50a
	float DrawOffset; // 0x50c
	char bFixedTilePoolSize : 1; // 0x510
	int32_t TilePoolSize; // 0x514
	float TileSizeUU; // 0x518
	float CellSize; // 0x51c
	float CellHeight; // 0x520
	float AgentRadius; // 0x524
	float AgentHeight; // 0x528
	float AgentMaxHeight; // 0x52c
	float AgentMaxSlope; // 0x530
	float AgentMaxStepHeight; // 0x534
	float MinRegionArea; // 0x538
	float MergeRegionSize; // 0x53c
	float MaxSimplificationError; // 0x540
	int32_t MaxSimultaneousTileGenerationJobsCount; // 0x544
	int32_t TileNumberHardLimit; // 0x548
	int32_t PolyRefTileBits; // 0x54c
	int32_t PolyRefNavPolyBits; // 0x550
	int32_t PolyRefSaltBits; // 0x554
	FVector NavMeshOriginOffset; // 0x558
	float DefaultDrawDistance; // 0x564
	float DefaultMaxSearchNodes; // 0x568
	float DefaultMaxHierarchicalSearchNodes; // 0x56c
	ERecastPartitioning RegionPartitioning; // 0x570
	ERecastPartitioning LayerPartitioning; // 0x571
	int32_t RegionChunkSplits; // 0x574
	int32_t LayerChunkSplits; // 0x578
	char bSortNavigationAreasByCost : 1; // 0x57c
	char bPerformVoxelFiltering : 1; // 0x57c
	char bMarkLowHeightAreas : 1; // 0x57c
	char bFilterLowSpanSequences : 1; // 0x57c
	char bFilterLowSpanFromTileCache : 1; // 0x57c
	char bDoFullyAsyncNavDataGathering : 1; // 0x57c
	char bUseBetterOffsetsFromCorners : 1; // 0x57c
	char bStoreEmptyTileLayers : 1; // 0x57c
	char bUseVirtualFilters : 1; // 0x57d
	char bAllowNavLinkAsPathEnd : 1; // 0x57d
	char bUseVoxelCache : 1; // 0x57d
	float TileSetUpdateInterval; // 0x580
	float HeuristicScale; // 0x584
	float VerticalDeviationFromGroundCompensation; // 0x588
};

struct UMaterialExpressionViewProperty : UMaterialExpression {
	EMaterialExposedViewProperty Property; // 0x40
};

struct UMaterialExpressionTime : UMaterialExpression {
	char bIgnorePause : 1; // 0x40
	char bOverride_Period : 1; // 0x40
	float Period; // 0x44
};

struct UMovieSceneLevelVisibilitySection : UMovieSceneSection {
	ELevelVisibility Visibility; // 0xe0
	TArray<FName> LevelNames; // 0xe8
};

struct UMaterialExpressionDistanceFieldGradient : UMaterialExpression {
	FExpressionInput Position; // 0x40
};

struct USpacer : UWidget {
	FVector2D Size; // 0x108
};

struct UInAppPurchaseRestoreCallbackProxy2 : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct AOculusMR_CastingCameraActor : ASceneCapture2D {
	UVRNotificationsComponent* VRNotificationComponent; // 0x340
	UTexture2D* CameraColorTexture; // 0x348
	UTexture2D* CameraDepthTexture; // 0x350
	UOculusMR_PlaneMeshComponent* PlaneMeshComponent; // 0x358
	UMaterial* ChromaKeyMaterial; // 0x360
	UMaterial* ChromaKeyLitMaterial; // 0x368
	UMaterial* OpaqueColoredMaterial; // 0x370
	UMaterialInstanceDynamic* ChromaKeyMaterialInstance; // 0x378
	UMaterialInstanceDynamic* ChromaKeyLitMaterialInstance; // 0x380
	UMaterialInstanceDynamic* CameraFrameMaterialInstance; // 0x388
	UMaterialInstanceDynamic* BackdropMaterialInstance; // 0x390
	AOculusMR_BoundaryActor* BoundaryActor; // 0x398
	ASceneCapture2D* BoundarySceneCaptureActor; // 0x3a0
	UTexture2D* DefaultTexture_White; // 0x3a8
	TArray<UTextureRenderTarget2D*> BackgroundRenderTargets; // 0x408
	ASceneCapture2D* ForegroundCaptureActor; // 0x418
	TArray<UTextureRenderTarget2D*> ForegroundRenderTargets; // 0x420
	UOculusMR_Settings* MRSettings; // 0x430
	UOculusMR_State* MRState; // 0x438
};

struct UInterpTrackInstAnimControl : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UBlackboardKeyType_Enum : UBlackboardKeyType {
	UEnum* EnumType; // 0x30
	FString EnumName; // 0x38
	char bIsEnumNameValid : 1; // 0x48
};

struct UGizmoAxisIntervalParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoFloatParameterSource> FloatParameterSource; // 0x48
	float MinParameter; // 0x58
	float MaxParameter; // 0x5c
};

struct ABP-InventoryPawn_C : ABravoHotelInventoryCharacter {
	USpotLightComponent* SpotLight1; // 0x3f0
};

struct UBookMark2D : UBookmarkBase {
	float Zoom2D; // 0x28
	FIntPoint Location; // 0x2c
};

struct APainCausingVolume : APhysicsVolume {
	char bPainCausing : 1; // 0x370
	float DamagePerSec; // 0x374
	UDamageType* DamageType; // 0x378
	float PainInterval; // 0x380
	char bEntryPain : 1; // 0x384
	char BACKUP_bPainCausing : 1; // 0x384
	AController* DamageInstigator; // 0x388
};

struct UWindowTitleBarAreaSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UNiagaraEffectType : UObject {
	ENiagaraScalabilityUpdateFrequency UpdateFrequency; // 0x28
	ENiagaraCullReaction CullReaction; // 0x2c
	TArray<FNiagaraSystemScalabilitySettings> DetailLevelScalabilitySettings; // 0x30
	FNiagaraSystemScalabilitySettingsArray SystemScalabilitySettings; // 0x40
	FNiagaraEmitterScalabilitySettingsArray EmitterScalabilitySettings; // 0x50
};

struct UMovieScene3DPathSection : UMovieScene3DConstraintSection {
	FMovieSceneFloatChannel TimingCurve; // 0x108
	MovieScene3DPathSection_Axis FrontAxisEnum; // 0x1a8
	MovieScene3DPathSection_Axis UpAxisEnum; // 0x1a9
	char bFollow : 1; // 0x1ac
	char bReverse : 1; // 0x1ac
	char bForceUpright : 1; // 0x1ac
};

struct UUW-SpectatingTargetInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Spectator_Ani; // 0x250
	UButton* Button_Report; // 0x258
	UCanvasPanel* Canvas_Finding; // 0x260
	UCanvasPanel* Canvas_Target; // 0x268
	UImage* Deco; // 0x270
	UImage* Image_351; // 0x278
	UImage* IMG_ClassIcon; // 0x280
	UTextBlock* NickName; // 0x288
	UOverlay* Overlay_Report; // 0x290
	UTextBlock* ReportDescriptionText; // 0x298
	UTextBlock* Text_Report; // 0x2a0
	UTextBlock* TextBlock_3; // 0x2a8
	UTextBlock* TextBlock_208; // 0x2b0
	UVerticalBox* VerticalBox_Report; // 0x2b8
	UWidgetSwitcher* WidgetSwitcher_136; // 0x2c0
	bool IsReportAbleDateTime; // 0x2c8
	ABravoHotelPlayerState* TargetPlayerState; // 0x2d0
};

struct UParticleModuleBeamModifier : UParticleModuleBeamBase {
	BeamModifierType ModifierType; // 0x30
	FBeamModifierOptions PositionOptions; // 0x34
	FRawDistributionVector Position; // 0x38
	FBeamModifierOptions TangentOptions; // 0x80
	FRawDistributionVector Tangent; // 0x88
	char bAbsoluteTangent : 1; // 0xd0
	FBeamModifierOptions StrengthOptions; // 0xd4
	FRawDistributionFloat Strength; // 0xd8
};

struct UBHBForceField : UBravoHotelBuffBase {
	TArray<UAnimInstance*> AnimInstanceArray; // 0x2b8
};

struct UUW-Inventory_ItemSlotHover_C : UBravoHotelInventoryHoverWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UWidgetAnimation* UpArrow; // 0x288
	UWidgetAnimation* FadeIn; // 0x290
	UImage* Ammo_Compare; // 0x298
	UTextBlock* Ammo_Value; // 0x2a0
	UImage* AmmoIcon; // 0x2a8
	UTextBlock* AmmoInfo; // 0x2b0
	UImage* Arrow_01; // 0x2b8
	UImage* Arrow_02; // 0x2c0
	UWrapBox* BuffList; // 0x2c8
	UWrapBox* BuffList_2; // 0x2d0
	UImage* EffectiveRange_Compare; // 0x2d8
	UTextBlock* EffectiveRange_Value; // 0x2e0
	UImage* FiringRate_Compare; // 0x2e8
	UTextBlock* FiringRate_Value; // 0x2f0
	UHorizontalBox* HorizontalBox_ItemRarity; // 0x2f8
	UHorizontalBox* HorizontalBox_MaterialRarity; // 0x300
	UHorizontalBox* HorizontalBox_WeaponRarity; // 0x308
	UImage* Image; // 0x310
	UImage* Image_2; // 0x318
	UImage* Image_3; // 0x320
	UImage* Image_8; // 0x328
	UImage* Image_9; // 0x330
	UImage* Image_10; // 0x338
	UImage* Image_11; // 0x340
	UImage* Image_12; // 0x348
	UImage* Image_13; // 0x350
	UImage* Image_14; // 0x358
	UImage* Image_15; // 0x360
	UImage* Image_16; // 0x368
	UImage* Image_20; // 0x370
	UImage* Image_22; // 0x378
	UImage* Image_23; // 0x380
	UImage* Image_24; // 0x388
	UImage* Image_25; // 0x390
	UImage* Image_26; // 0x398
	UImage* Image_27; // 0x3a0
	UImage* Image_28; // 0x3a8
	UImage* Image_29; // 0x3b0
	UImage* Image_30; // 0x3b8
	UImage* Image_31; // 0x3c0
	UImage* Image_32; // 0x3c8
	UImage* Image_310; // 0x3d0
	UImage* Image_557; // 0x3d8
	UImage* Image_WeaponLock; // 0x3e0
	UImage* Img_MaterialBG; // 0x3e8
	UImage* IMG_MaterialIcon; // 0x3f0
	UImage* IMG_Stat; // 0x3f8
	UImage* ItemBg; // 0x400
	UImage* ItemBg_01; // 0x408
	UImage* ItemBg_02; // 0x410
	UImage* ItemSlot-BG; // 0x418
	UTextBlock* ItemSlot-Capacity; // 0x420
	UTextBlock* ItemSlot-Capacity_2; // 0x428
	UTextBlock* ItemSlot-Description; // 0x430
	UTextBlock* ItemSlot-Description_2; // 0x438
	UImage* ItemSlot-ItemImage; // 0x440
	UTextBlock* ItemSlot-ItemName; // 0x448
	UTextBlock* ItemSlot-ItemType; // 0x450
	UImage* ItemSlot-ItemTypeMark; // 0x458
	UCanvasPanel* ItemSlotHover; // 0x460
	UImage* PerkBG; // 0x468
	UImage* PerkImage; // 0x470
	UTextBlock* PerkLevelText; // 0x478
	UTextBlock* PerkName; // 0x480
	UCanvasPanel* PerkSlotHover; // 0x488
	UImage* PopupHover-BG_2; // 0x490
	UImage* Power_Compare; // 0x498
	UTextBlock* Power_Value; // 0x4a0
	USizeBox* SizeBox; // 0x4a8
	USizeBox* SizeBox_7; // 0x4b0
	USizeBox* SizeBox_ComparingText; // 0x4b8
	USizeBox* SizeBox_ItemDivide; // 0x4c0
	UImage* Stability_Compare; // 0x4c8
	UTextBlock* Stability_Value; // 0x4d0
	UCanvasPanel* StatSlotHover; // 0x4d8
	UTextBlock* T_BindPlayerName; // 0x4e0
	UTextBlock* T_Material; // 0x4e8
	UTextBlock* T_MaterialDesc; // 0x4f0
	UTextBlock* T_PerkDescLv1; // 0x4f8
	UTextBlock* T_PerkDescLv2; // 0x500
	UTextBlock* T_PerkDescLv3; // 0x508
	UTextBlock* T_Stat; // 0x510
	UTextBlock* T_StatDesc; // 0x518
	URichTextBlock* T_TooltipDesc; // 0x520
	UTextBlock* T_UltimateDesc; // 0x528
	UTextBlock* T_UnlockUltimateLevel; // 0x530
	UTextBlock* Text_CombineTarget; // 0x538
	UTextBlock* TextBlock_3; // 0x540
	UTextBlock* TextBlock_4; // 0x548
	UTextBlock* TextBlock_5; // 0x550
	UTextBlock* TextBlock_6; // 0x558
	UCanvasPanel* UpArrowAni; // 0x560
	UUW-Inventory_ItemSlotHover_WeaponSlot_C* UW-Inventory_ItemSlotHover_WeaponSlot; // 0x568
	UUW-Inventory_ItemSlotHover_WeaponSlot_C* UW-Inventory_ItemSlotHover_WeaponSlot_2; // 0x570
	UUW-Inventory_ItemSlotHover_WeaponSlot_C* UW-Inventory_ItemSlotHover_WeaponSlot_C; // 0x578
	UUW-Inventory_ItemSlotHover_WeaponSlot_C* UW-Inventory_ItemSlotHover_WeaponSlot_C_2; // 0x580
	UUW-Inventory_ItemSlotHover_WeaponSlot_C* UW-Inventory_ItemSlotHover_WeaponSlot_C_3; // 0x588
	UUW-Inventory_ItemSlotHover_WeaponSlot_C* UW-Inventory_ItemSlotHover_WeaponSlot_C_4; // 0x590
	UVerticalBox* VerticalBox_3; // 0x598
	UVerticalBox* VerticalBox_BuffList; // 0x5a0
	UVerticalBox* VerticalBox_BuffList_2; // 0x5a8
	UVerticalBox* VerticalBox_CombineTarget; // 0x5b0
	UVerticalBox* VerticalBox_Divide; // 0x5b8
	UVerticalBox* VerticalBox_ItemDivide; // 0x5c0
	UVerticalBox* VerticalBox_WeaponBindedInfo; // 0x5c8
	UTextBlock* WeaponItemCapacity; // 0x5d0
	UTextBlock* WeaponItemComparingName; // 0x5d8
	UTextBlock* WeaponItemDescription; // 0x5e0
	UImage* WeaponItemImage; // 0x5e8
	UImage* WeaponItemSlot-BG; // 0x5f0
	UCanvasPanel* WeaponItemSlotHover; // 0x5f8
	UTextBlock* WeaponItemType; // 0x600
	UImage* WeaponLockImage; // 0x608
	UTextBlock* WeaponName; // 0x610
	UWidgetSwitcher* WidgetSwitcher; // 0x618
	UWidgetSwitcher* WidgetSwitcher_1; // 0x620
	UWidgetSwitcher* WidgetSwitcher_2; // 0x628
	UWidgetSwitcher* WidgetSwitcher_3; // 0x630
	UWidgetSwitcher* WidgetSwitcher_4; // 0x638
	UWidgetSwitcher* WidgetSwitcher_Main; // 0x640
	UWidgetSwitcher* WidgetSwitcher_PerkUltimate; // 0x648
	FInventoryItemInfo ItemInfo; // 0x650
	FBravoHotelWeaponInfo WeaponInfo; // 0x6e8
	bool bCompare; // 0x1218
	FSlateColor NormalSlateColor; // 0x1220
	FSlateColor UpSlateColor; // 0x1248
	FSlateColor DownSlateColor; // 0x1270
	FLinearColor UpLinearColor; // 0x1298
	FLinearColor DownLinearColor; // 0x12a8
	ABravoHotelWeaponBase* WeaponObjectRef; // 0x12b8
	FInventoryItemDetailInfo ItemDetailInfo; // 0x12c0
	FPerkUIInfo PerkInfo; // 0x1750
	FPerkData PerkData; // 0x1780
	FName Ammo; // 0x1860
	ItemWidgetDragType DragType; // 0x1868
	UWidget* HoveredWidget; // 0x1870
	UUserWidget* CurrentShowingWidgetRef; // 0x1878
	bool IsUltimatePerk; // 0x1880
	FText UltimateName; // 0x1888
	FLinearColor UltimateLinearColor; // 0x18a0
	TSoftObjectPtr<UObject> UltimateImage; // 0x18b0
	FTimerHandle HoverTimerHandle; // 0x18d8
	bool NeedCheckVisibility; // 0x18e0
	bool IsVisualMode; // 0x18e1
	bool IsRandomPerk; // 0x18e2
	TArray<UImage*> ItemRarityImages; // 0x18e8
	TArray<UImage*> WeaponRarityImages; // 0x18f8
};

struct UBTTask_FSM_RemoveState : UBTTask_BlackboardBase {
	UStateMachineComponent* FSM; // 0x98
	FName TargetFSM; // 0xa0
	FName StateName; // 0xa8
	bool Debug; // 0xb0
	bool ForceSuccess; // 0xb1
};

struct UUW-BlackMarket_Main_C : UBravoHotelDevelopmentBlackMarket {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e8
	UButton* AllItem; // 0x2f0
	UButton* Button_1004; // 0x2f8
	UCheckBox* CheckBox_1; // 0x300
	UCanvasPanel* CP-Column; // 0x308
	UImage* IMG-Ammo; // 0x310
	UImage* IMG-Attachment; // 0x318
	UImage* IMG-Consumable; // 0x320
	UImage* IMG-Custom; // 0x328
	UImage* IMG-Gear; // 0x330
	UImage* IMG-Perk; // 0x338
	UImage* IMG-Preset; // 0x340
	UImage* IMG-TopBG; // 0x348
	UImage* IMG-Vehicle; // 0x350
	UImage* IMG-Weapon; // 0x358
	UImage* IMG-Wearable; // 0x360
	UTextBlock* Text_culture; // 0x368
	UUW-BlackMarket_Character_C* UW-BlackMarket_Character; // 0x370
	UUW-BlackMarket_SubTab_C* UW-BlackMarket_SubTab; // 0x378
	UWrapBox* WB-ItemList; // 0x380
	UWrapBox* WrapBox_6; // 0x388
	EBlackmarketTabType CurrentTab; // 0x390
	FLinearColor SelectTabColor; // 0x394
	FLinearColor UnSelectTabColor; // 0x3a4
	bool ShowWorkInProcess; // 0x3b4
	TArray<FInventoryItemDetailInfo> ItemList; // 0x3b8
	EWeaponType SelectedWeaponSubTab; // 0x3c8
	EWeaponAttachmentType SelectedAttachmentSubTab; // 0x3c9
	EWearableItemType SelectedWearableSubTab; // 0x3ca
	EWearableItemType SelectedGearSubTab; // 0x3cb
	EWearableItemType SelectedCustomSubTab; // 0x3cc
	TArray<int32_t> SortTypeList; // 0x3d0
	TArray<bool> WeaponAscendList; // 0x3e0
	int32_t CurrentWeaponSortType; // 0x3f0
	TArray<bool> AmmoAscendList; // 0x3f8
	int32_t CurrentAmmoSortType; // 0x408
	TArray<bool> AttachmentAscendList; // 0x410
	int32_t CurrentAttachmentSortType; // 0x420
	int32_t CurrentWearableSortType; // 0x424
	int32_t CurrentConsumableSortType; // 0x428
	int32_t CurrentCustomSortType; // 0x42c
	int32_t CurrentVehicleSortType; // 0x430
	TArray<bool> WearableAscendList; // 0x438
	TArray<bool> ConsumableAscendList; // 0x448
	TArray<bool> CustomAscendList; // 0x458
	TArray<bool> VehicleAscendList; // 0x468
	UBP-BlackmarketSaveGame_C* SaveData; // 0x478
	TArray<bool> GearAscendList; // 0x480
	int32_t CurrentGearSortType; // 0x490
	FString BlackmarketSaveSlotName; // 0x498
	int32_t TestIndex; // 0x4a8
	TArray<bool> PerkAscendList; // 0x4b0
	int32_t CurrentPerkSortType; // 0x4c0
	EPerkSlotFlag SelectedPerkSubTab; // 0x4c4
	int32_t CurrentPresetSortType; // 0x4c8
	TArray<bool> PresetAscendList; // 0x4d0
	FName SelectedPerkClass; // 0x4e0
	EItemType SelectedConsumableSubTab; // 0x4e8
};

struct ABravoHotelPlayerController : APlayerController {
	UBravoHotelConversationComponent* ConversationComponent; // 0x718
	UBravoHotelQuestComponent* QuestComponent; // 0x720
	FMulticastInlineDelegate Delegate_OnFinishMatchEndAnimation; // 0x728
	FMulticastInlineDelegate OnResetTeamPlayersInfo; // 0x738
	FMulticastInlineDelegate DelegateAddLog; // 0x750
	FMulticastInlineDelegate DelegateDataEventCharacte; // 0x8e8
	FMulticastInlineDelegate DelegateDataEventCharacteUidList; // 0x8f8
	FMulticastInlineDelegate DelegateOnKillOtherPlayer; // 0x908
	FMulticastInlineDelegate DelegateOnKnockDownOtherPlayer; // 0x918
	FMulticastInlineDelegate DelegateOnWhoKilledMe; // 0x928
	FTimerHandle DuplicatedReconnectTimeout_TimerHandle; // 0x938
	float RequestResuscitationTimeStamp; // 0x944
	bool bIsResuscitated; // 0x948
	FMulticastInlineDelegate DelegateShowWeightMap; // 0xb98
	FMulticastInlineDelegate DelegateInventoryState; // 0xba8
	float ShowUseBoostItemMenuDelayTime; // 0xbb8
	float FragmentMidExplosionSoundDistance; // 0xbbc
	bool bIgnoreInputCloseUI; // 0xbc0
	ABravoHotelPlayerHUD* SpectatingPlayerHUD; // 0xbd0
	bool bEnableHideGun; // 0xbd8
	ABravoHotelCharacter* TempResuscitatedTarget; // 0xbe0
	float SmartPingMenuDelayTime; // 0xbe8
	bool bInfiniteAmmo; // 0xbf0
	float DeathCamTime; // 0xbf4
	float EquipItemMaterialItemAutorSearchTime; // 0xbf8
	TMap<int32_t, ABHPersonalSupplyBox*> SpawnedSupplyBoxList; // 0xc00
	TArray<FHideObjectInfo> HideObjectStack; // 0xc68
	TArray<ABravoHotelPlayerState*> PlayerStateList; // 0xc78
	FVector SpawnBookLocation; // 0xc8c
	TArray<FRepRadialDamageInfo> RadialDamageInfos; // 0xc98
	float LastEquipItemLifeTime; // 0xca8
	int32_t SelectedPersonalSupplyBoxOwnerID; // 0xcb8
	FTimerHandle TimeHandle_RemoveMaterialPing; // 0xcc0
	UCameraShake* OnDamagedCameraShake; // 0xcc8
	bool bIsTeamSpectator; // 0xcd0
	APawn* PreSpectatorTargetPawn; // 0xcd8
	AActor* DeathCamFocus; // 0xce0
	ABravoHotelCharacter* Resuscitater; // 0xce8
	float MinMaterialItemSearchDistance; // 0xcf0
	bool bHideActorMode; // 0xcf4
	float FragmentCloseExplosionCameraShakeScale; // 0xd08
	FMulticastInlineDelegate DelegateMaterialSearchNoti; // 0xd30
	FRepDiedInfo SavedLastDiedInfo; // 0xdc0
	FName LastEquipItem; // 0xea0
	TMap<FName, FMaterialItemList> SpawnedItemList; // 0xea8
	float AutoNameTooltipSecond; // 0xf48
	float FragmentFarExplosionCameraShakeScale; // 0xf4c
	float SearchDelayTime; // 0xf54
	FTimerHandle TimeHandle_ScreenCapture; // 0xf58
	ABravoHotelCharacter* TempResuscitater; // 0xf68
	TArray<FName> NameTooltips; // 0xf70
	bool bSearchExpertWeaponMaterialItem; // 0xf98
	ABravoHotelCharacter* SavedCharacterPawn; // 0xfa0
	float FragmentMidExplosionDistance; // 0xfac
	float AutoNameTooltipDistance; // 0xfb0
	ABravoHotelPlayerController* SuspectController; // 0xfc0
	ESpectatingMode CurrentSpectatingMode; // 0xfd8
	TSoftClassPtr<UObject> SoftCheatWidgetClass; // 0xfe0
	float ReSearchWaitingTime; // 0x1010
	bool HasSpawnBook; // 0x1014
	ABravoHotelBlueZone* ClientBlueZone; // 0x1018
	AActor* SpawnedDeathCam; // 0x1020
	APawn* LastSpectatorTargetPawn; // 0x1040
	FMulticastInlineDelegate DelegateEnableExpertWeaponMaterialSearch; // 0x1048
	UReplicationPingComponet* PingComponent; // 0x1058
	float FragmentFarExplosionSoundDistance; // 0x1060
	float FragmentCloseExplosionSoundTime; // 0x1064
	float MaterialItemPingLifeTime; // 0x1080
	int32_t MaxChangeDeckCount; // 0x1084
	TArray<FBravoHotelMovePoint> TeleportPointList; // 0x1088
	TArray<AActor*> AuthorizedRigidBodiesOnClient; // 0x10a0
	TArray<FBravoHotelMovePoint> MovePointList; // 0x10b0
	FTimerHandle TimerHandle_SetStateSpectator; // 0x10c0
	FMatchEndSimpleResult MatchEndSimpleResult; // 0x10c8
	float FragmentCloseExplosionSoundDistance; // 0x11d8
	FMulticastInlineDelegate DelegatePayGoldOnChangeDeck; // 0x11e0
	float LoseWidgetShowDelay; // 0x11f0
	FTimerHandle TimeHandle_MaterialSearchDelay; // 0x11f8
	FTimerHandle TimeHandle_CheckLastEquipItemInit; // 0x1208
	UCameraShake* ThrowingWeaponExplosionCameraShake; // 0x1210
	bool bSearchMaterialItem; // 0x1219
	int32_t ChangeDeckBasePrice; // 0x121c
	float ChangeDeckMultiflier; // 0x1220
	FTimerHandle TimeHandle_SearchMaterialPing; // 0x1230
	float RemoveMaterialItemDistance; // 0x123c
	bool bEnableLevelStreamimngDistanceScaleByZ; // 0x1250
	bool ImmediatelyRemovePing; // 0x1251
	AActor* SpawnedFieldViewCam; // 0x1258
	float FragmentMidExplosionSoundTime; // 0x126c
	AHUD* SpectatorHUDClass; // 0x12a0
	TMap<int32_t, FName> UseItemMenuList; // 0x12a8
	FTimerHandle TimeHandle_CheckEquipItemMaterialItemAutorSearch; // 0x12f8
	UCameraShake* RedZoneExplosionCameraShake; // 0x1320
	ABravoHotelPlayerState* CurrentVictimPlayerState; // 0x1330
	AActor* DeathCamClass; // 0x1338
	UUserWidget* NoResponseNetworkClass; // 0x1348
	uint32_t PaidAccountGold; // 0x1350
	UUserWidget* ItemRecipeTreeWidgetClass; // 0x1358
	UCameraShake* OnDamagedADSCameraShake; // 0x1370
	float MaxMaterialItemSearchDistance; // 0x1378
	AActor* SpawnedWinCam; // 0x1380
	TArray<FLevelStreamimgPriorityByZ> LevelStreamingPrioritiesByZ; // 0x1388
	bool ResetTeamPlayersInfo; // 0x13a8
	FMulticastInlineDelegate DelegateSelectSearchMaterialItem; // 0x13b0
	bool bUseLevelStreamimngPriorityByZ; // 0x13c0
	bool IgnoreStartStateSearchMaterial; // 0x13c2
	int32_t MaxChangeDeckListCount; // 0x13d8
	UBravoHotelPerkDeckWidget* PerkDeckPopup; // 0x13e0
	FMulticastInlineDelegate DelegatePayGoldOnChangeDeckList; // 0x13e8
	FMulticastInlineDelegate DelegatePayGoldOnSelectDeck; // 0x1400
	float FragmentMidExplosionCameraShakeScale; // 0x1410
	float FragmentFarExplosionSoundTime; // 0x1414
	FSelecteSearchMaterialItemInfo SelectRecipeItem; // 0x141c
	bool bForceCheckSearchMaterialItems; // 0x1440
	TArray<APlayerController*> WatchingPCs; // 0x14b0
	float MaterialItemSearchShowCount; // 0x14c0
	bool bEnableDestroyGun; // 0x14c4
	FMulticastInlineDelegate DelegateChoosePerkDeck; // 0x14c8
	float FragmentFarExplosionDistance; // 0x14d8
	FMulticastInlineDelegate DelegateEnableMaterialSearch; // 0x14e0
	float FragmentCloseExplosionDistance; // 0x14f4
	uint32_t AccountGold; // 0x14f8
	int32_t SelectDeckPrice; // 0x14fc
	AActor* SpawnedResusciatedCam; // 0x1500
	UUserWidget* CheatWidget; // 0x1510
	UBravoHotelDebugInfo* DebugInfo; // 0x1518
	UCameraPostProcessPreset* PP_BlueZone; // 0x1520
	float FragmentChangeStateDelayTime; // 0x1528
};

struct UInterpTrackMoveAxis : UInterpTrackFloatBase {
	EInterpMoveAxis MoveAxis; // 0x90
	FInterpLookupTrack LookupTrack; // 0x98
};

struct AMK3DUserInterfaceManager : AActor {
	TArray<FUserWidgetInfoForReplay_T> WidgetInfoArray; // 0x328
	TMap<FString, UUserWidget*> ReplayWidgetMap; // 0x338
};

struct UMovieSceneComponentMaterialTrack : UMovieSceneMaterialTrack {
	int32_t MaterialIndex; // 0x68
};

struct UAkIOSInitializationSettings : UObject {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkAudioSession AudioSession; // 0x90
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0xa0
	FAkAdvancedInitializationSettings AdvancedSettings; // 0xc8
};

struct UDatasmithAreaLightActorTemplate : UDatasmithObjectTemplate {
	EDatasmithAreaLightActorType LightType; // 0x30
	EDatasmithAreaLightActorShape LightShape; // 0x31
	FVector2D Dimensions; // 0x34
	FLinearColor Color; // 0x3c
	float Intensity; // 0x4c
	ELightUnits IntensityUnits; // 0x50
	float Temperature; // 0x54
	TSoftObjectPtr<UTextureLightProfile> IESTexture; // 0x58
	bool bUseIESBrightness; // 0x80
	float IESBrightnessScale; // 0x84
	FRotator Rotation; // 0x88
	float SourceRadius; // 0x94
	float SourceLength; // 0x98
	float AttenuationRadius; // 0x9c
};

struct UMovieSceneCameraAnimTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraAnimSections; // 0x58
};

struct AGeometryCollectionActor : AActor {
	UGeometryCollectionComponent* GeometryCollectionComponent; // 0x328
	UGeometryCollectionDebugDrawComponent* GeometryCollectionDebugDrawComponent; // 0x330
};

struct AAkReverbVolume : AVolume {
	char bEnabled : 1; // 0x360
	UAkAuxBus* AuxBus; // 0x368
	FString AuxBusName; // 0x370
	float SendLevel; // 0x380
	float FadeRate; // 0x384
	float Priority; // 0x388
	UAkLateReverbComponent* LateReverbComponent; // 0x390
};

struct UObjectLibrary : UObject {
	UObject* ObjectBaseClass; // 0x28
	bool bHasBlueprintClasses; // 0x30
	TArray<UObject*> Objects; // 0x38
	TArray<TWeakObjectPtr<UObject>> WeakObjects; // 0x48
	bool bUseWeakReferences; // 0x58
	bool bIsFullyLoaded; // 0x59
};

struct AARSharedWorldGameState : AGameState {
	TArray<char> PreviewImageData; // 0x398
	TArray<char> ARWorldData; // 0x3a8
	int32_t PreviewImageBytesTotal; // 0x3b8
	int32_t ARWorldBytesTotal; // 0x3bc
	int32_t PreviewImageBytesDelivered; // 0x3c0
	int32_t ARWorldBytesDelivered; // 0x3c4
};

struct UUW-MatchEnd_ButtonBase_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button; // 0x250
	UTextBlock* Button_Text; // 0x258
	UOverlay* Overlay_Button; // 0x260
	FText ButtonText; // 0x268
	FMulticastInlineDelegate OnClicked; // 0x280
	FMulticastInlineDelegate OnPressed; // 0x290
	FMulticastInlineDelegate OnReleased; // 0x2a0
	FMulticastInlineDelegate OnHovered; // 0x2b0
};

struct UMagicLeapHeadTrackingNotificationsComponent : UVRNotificationsComponent {
	FMulticastInlineDelegate OnHeadTrackingLost; // 0x140
	FMulticastInlineDelegate OnHeadTrackingRecovered; // 0x150
	FMulticastInlineDelegate OnHeadTrackingRecoveryFailed; // 0x160
	FMulticastInlineDelegate OnHeadTrackingNewSessionStarted; // 0x170
};

struct UBTService : UBTAuxiliaryNode {
	float Interval; // 0x60
	float RandomDeviation; // 0x64
	char bCallTickOnSearchStart : 1; // 0x68
	char bRestartTimerOnEachActivation : 1; // 0x68
};

struct UDevWidget_C : UBravoHotelSettingSubWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	UButton* ButtonClearStats; // 0x2a0
	UButton* ButtonDebugVehicle; // 0x2a8
	UButton* ButtonEngine; // 0x2b0
	UButton* ButtonFPS; // 0x2b8
	UButton* ButtonGameplayTick; // 0x2c0
	UButton* ButtonMemory; // 0x2c8
	UButton* ButtonNetwork; // 0x2d0
	UButton* ButtonParticles; // 0x2d8
	UButton* ButtonSceneRendering; // 0x2e0
	UButton* ButtonStatSlow; // 0x2e8
	UButton* ButtonUnitGraph; // 0x2f0
	UComboBoxString* ComboBoxViewModes; // 0x2f8
	UComboBoxString* ComboBoxViewModes1; // 0x300
	UButton* DeleteSettingsSaveFile; // 0x308
	USlider* GameSpeed; // 0x310
	UEditableText* GameSpeedEdit; // 0x318
	UHorizontalBox* HorizontalBox_8; // 0x320
	UHorizontalBox* HorizontalBox_9; // 0x328
	UHorizontalBox* HorizontalBox_10; // 0x330
	UHorizontalBox* HorizontalBox_11; // 0x338
	UHorizontalBox* HorizontalBox_12; // 0x340
	UHorizontalBox* HorizontalBox_13; // 0x348
	UCheckBox* PauseGame; // 0x350
	UCheckBox* TemporalAACatmullRomCheck; // 0x358
	UEditableText* TemporalAACurrentFrameWeightEdit; // 0x360
	UEditableText* TemporalAAFilterSizeEdit; // 0x368
	UCheckBox* TemporalAAPauseCorrectChek; // 0x370
	UEditableText* TemporalAASamplesEdit; // 0x378
	UEditableText* TonemapperSharpenEdit; // 0x380
	UHorizontalBox* ToolTip_DeleteSettings; // 0x388
	UHorizontalBox* ToolTip_GameSpeed; // 0x390
	UHorizontalBox* ToolTip_PauseGame; // 0x398
	UVerticalBox* ToolTip_StatCommands; // 0x3a0
	UVerticalBox* ToolTip_ViewModes; // 0x3a8
	UVerticalBox* ToolTip_ViewModes_2; // 0x3b0
	UBP_GameSettings_C* Game Settings; // 0x3b8
	float Time Dilation Value Binding; // 0x3c0
	FText Time Dilation Text Binding; // 0x3c8
	FMulticastInlineDelegate Settings File Deleted; // 0x3e0
	FMulticastInlineDelegate Pause Game When Menu Open; // 0x3f0
	FText TemporalAAFilterSizeTextBinding; // 0x400
	FText TemporalAACurrentFrameWeightTextBinding; // 0x418
	FText TemporalAASamplesTextBinding; // 0x430
	FText TonemapperSharpenTextBinding; // 0x448
	float TemporalAAFilterSizeValue; // 0x460
	float TemporalAACurrentFrameWeightValue; // 0x464
	int32_t TemporalAASamplesValue; // 0x468
	float TonemapperSharpenValue; // 0x46c
	FName TempKey; // 0x470
	TMap<FName, FString> Temp; // 0x478
	ESettingType Type; // 0x4c8
	float TempValue2; // 0x4cc
	bool IsOnDebugVehicle; // 0x4d0
};

struct UHapticFeedbackEffect_SoundWave : UHapticFeedbackEffect_Base {
	USoundWave* SoundWave; // 0x28
};

struct UBHBWeaponUpgradeEffectBase : UBHBUpgradeMaterialEffectBase {
	ABravoHotelWeaponBase* TargetWeapon; // 0x420
};

struct UVectorField : UObject {
	FBox Bounds; // 0x28
	float Intensity; // 0x44
};

struct UBravoHotelReplayPlayerListGroup : UUserWidget {
	ABravoHotelPlayerState* PlayerState; // 0x250
	UVerticalBox* VBPlayerList; // 0x258
};

struct UBTTask_FSM_SetState : UBTTask_BlackboardBase {
	UStateMachineComponent* FSM; // 0x98
	FName TargetFSM; // 0xa0
	FName StateName; // 0xa8
	bool Debug; // 0xb0
	bool ForceSuccess; // 0xb1
};

struct UInterpTrackInstProperty : UInterpTrackInst {
	TFieldPath<FProperty> InterpProperty; // 0x28
	UObject* PropertyOuterObjectInst; // 0x48
};

struct ANiagaraPreviewGrid : AActor {
	UNiagaraSystem* System; // 0x328
	ENiagaraPreviewGridResetMode ResetMode; // 0x330
	UNiagaraPreviewAxis* PreviewAxisX; // 0x338
	UNiagaraPreviewAxis* PreviewAxisY; // 0x340
	ANiagaraPreviewBase* PreviewClass; // 0x348
	float SpacingX; // 0x350
	float SpacingY; // 0x354
	int32_t NumX; // 0x358
	int32_t NumY; // 0x35c
	TArray<UChildActorComponent*> PreviewComponents; // 0x360
};

struct UParkourWindowComponent : USceneComponent {
	TArray<FClimbData> ClimbOverDatas; // 0x230
	TArray<FClimbData> ClimbUpDatas; // 0x240
	TArray<FClimbData> SprintOverDatas; // 0x250
	TArray<FClimbData> SprintUpDatas; // 0x260
	TArray<FClimbData> GroundingDatas; // 0x270
};

struct UInAppPurchaseQueryCallbackProxy2 : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct USourceEffectStereoDelayPreset : USoundEffectSourcePreset {
	FSourceEffectStereoDelaySettings Settings; // 0x7c
};

struct UMovieSceneWidgetMaterialTrack : UMovieSceneMaterialTrack {
	TArray<FName> BrushPropertyNamePath; // 0x68
	FName TrackName; // 0x78
};

struct UNiagaraMeshRendererProperties : UNiagaraRendererProperties {
	UStaticMesh* ParticleMesh; // 0x50
	ENiagaraSortMode SortMode; // 0x58
	char bOverrideMaterials : 1; // 0x5c
	char bSortOnlyWhenTranslucent : 1; // 0x5c
	TArray<FNiagaraMeshMaterialOverride> OverrideMaterials; // 0x60
	FVector2D SubImageSize; // 0x70
	char bSubImageBlend : 1; // 0x78
	ENiagaraMeshFacingMode FacingMode; // 0x7c
	char bLockedAxisEnable : 1; // 0x80
	FVector LockedAxis; // 0x84
	ENiagaraMeshLockedAxisSpace LockedAxisSpace; // 0x90
	FNiagaraVariableAttributeBinding PositionBinding; // 0x98
	FNiagaraVariableAttributeBinding ColorBinding; // 0x110
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x188
	FNiagaraVariableAttributeBinding MeshOrientationBinding; // 0x200
	FNiagaraVariableAttributeBinding ScaleBinding; // 0x278
	FNiagaraVariableAttributeBinding SubImageIndexBinding; // 0x2f0
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x368
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x3e0
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x458
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x4d0
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x548
	FNiagaraVariableAttributeBinding CustomSortingBinding; // 0x5c0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x638
	FNiagaraVariableAttributeBinding CameraOffsetBinding; // 0x6b0
};

struct UPanelWidget : UWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UAnimNotify_PlayMontageNotify : UAnimNotify {
	FName NotifyName; // 0x38
};

struct AScenarioGameMode : ABravoHotelGameMode {
	UBravoHotelScenarioComponent* ScenarioComponent; // 0x590
	FName DefaultCharacterDeck; // 0x598
};

struct UDestructibleFractureSettings : UObject {
	int32_t CellSiteCount; // 0x28
	FFractureMaterial FractureMaterialDesc; // 0x2c
	int32_t RandomSeed; // 0x50
	TArray<FVector> VoronoiSites; // 0x58
	int32_t OriginalSubmeshCount; // 0x68
	TArray<UMaterialInterface*> Materials; // 0x70
	TArray<FDestructibleChunkParameters> ChunkParameters; // 0x80
};

struct UMaterialExpressionFrac : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UWB_ToolTipDesign_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	FText My Tool Tip Text; // 0x250
};

struct USynthComponent : USceneComponent {
	char bAutoDestroy : 1; // 0x230
	char bStopWhenOwnerDestroyed : 1; // 0x230
	char bAllowSpatialization : 1; // 0x230
	char bOverrideAttenuation : 1; // 0x230
	char bOutputToBusOnly : 1; // 0x234
	USoundAttenuation* AttenuationSettings; // 0x238
	FSoundAttenuationSettings AttenuationOverrides; // 0x240
	USoundConcurrency* ConcurrencySettings; // 0x5e0
	TSet<USoundConcurrency*> ConcurrencySet; // 0x5e8
	USoundClass* SoundClass; // 0x638
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x640
	USoundSubmixBase* SoundSubmix; // 0x648
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x650
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x660
	FSoundModulation Modulation; // 0x670
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x680
	char bIsUISound : 1; // 0x690
	char bIsPreviewSound : 1; // 0x690
	int32_t EnvelopeFollowerAttackTime; // 0x694
	int32_t EnvelopeFollowerReleaseTime; // 0x698
	FMulticastInlineDelegate OnAudioEnvelopeValue; // 0x6a0
	USynthSound* Synth; // 0x6d0
	UAudioComponent* AudioComponent; // 0x6d8
};

struct USceneCaptureComponent2D : USceneCaptureComponent {
	ECameraProjectionMode ProjectionType; // 0x2c8
	float FOVAngle; // 0x2cc
	float OrthoWidth; // 0x2d0
	UTextureRenderTarget2D* TextureTarget; // 0x2d8
	ESceneCaptureCompositeMode CompositeMode; // 0x2e0
	FPostProcessSettings PostProcessSettings; // 0x2f0
	float PostProcessBlendWeight; // 0x8b0
	char bOverride_CustomNearClippingPlane : 1; // 0x8b4
	float CustomNearClippingPlane; // 0x8b8
	bool bUseCustomProjectionMatrix; // 0x8bc
	FMatrix CustomProjectionMatrix; // 0x8c0
	bool bEnableClipPlane; // 0x900
	FVector ClipPlaneBase; // 0x904
	FVector ClipPlaneNormal; // 0x910
	char bCameraCutThisFrame : 1; // 0x91c
	char bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1; // 0x91c
	bool bDisableFlipCopyGLES; // 0x920
};

struct UBP_GameSettingsWrapper_C : UObject {
	FPointerToUberGraphFrame UberGraphFrame; // 0x28
	UBP_GameSettings_C* Game Settings; // 0x30
};

struct UBP-WidgetDrag_C : UDragDropOperation {
	UUserWidget* WidgetReference; // 0x88
	ItemWidgetDragType InventorySlotWidgetKind; // 0x90
};

struct UCanvasRenderTarget2D : UTextureRenderTarget2D {
	FMulticastInlineDelegate OnCanvasRenderTargetUpdate; // 0xe8
	TWeakObjectPtr<UWorld> World; // 0xf8
	bool bShouldClearRenderTargetOnReceiveUpdate; // 0x100
};

struct UBHReplicatedPlayStat : UActorComponent {
	bool bAlive; // 0xc0
	bool InOuterArea; // 0xc1
	uint16_t kills; // 0xc2
	uint16_t assists; // 0xc4
	uint16_t Deaths; // 0xc6
	uint16_t Revives; // 0xc8
	uint16_t Resuscitates; // 0xca
	int32_t CurrentPerkClassLevel; // 0xcc
};

struct UDatasmithSpotLightComponentTemplate : UDatasmithObjectTemplate {
	float InnerConeAngle; // 0x30
	float OuterConeAngle; // 0x34
};

struct UAIDataProvider_QueryParams : UAIDataProvider {
	FName ParamName; // 0x28
	float FloatValue; // 0x30
	int32_t IntValue; // 0x34
	bool BoolValue; // 0x38
};

struct UMovieSceneAkAudioRTPCSection : UMovieSceneSection {
	UAkRtpc* RTPC; // 0xe0
	FString Name; // 0xe8
	FRichCurve FloatCurve; // 0xf8
	FMovieSceneFloatChannelSerializationHelper FloatChannelSerializationHelper; // 0x178
	FMovieSceneFloatChannel RTPCChannel; // 0x1a8
};

struct UPrimaryAssetLabel : UPrimaryDataAsset {
	FPrimaryAssetRules Rules; // 0x30
	char bLabelAssetsInMyDirectory : 1; // 0x3c
	char bIsRuntimeLabel : 1; // 0x3c
	TArray<TSoftObjectPtr<UObject>> ExplicitAssets; // 0x40
	TArray<TSoftClassPtr<UObject>> ExplicitBlueprints; // 0x50
	FCollectionReference AssetCollection; // 0x60
};

struct UAggregationPipeline : USimplygonPipeline {
	FAggregationPipelineSettings Settings; // 0x28
};

struct UMovieSceneSpawnTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
	FGuid ObjectGuid; // 0x68
};

struct ABattleRoyaleGameState : ABravoHotelGameState {
	bool IsNewItemSpawnMode; // 0x690
	int32_t TeamSize; // 0x694
	EGameMode GameRule; // 0x698
	EBattleRoyaleState BattleRoyaleState; // 0x699
	int32_t TotalPlayerCount; // 0x69c
	int32_t TotalAIPlayerCount; // 0x6a0
	int32_t CurrentPlayerCount; // 0x6a4
	int32_t CurrentTeamCount; // 0x6a8
	int32_t TotalTeamCount; // 0x6ac
	FMulticastInlineDelegate OnBattleRoyalStateChanged; // 0x6b0
	FMulticastInlineDelegate OnRocketLaunch; // 0x6c0
	FMulticastInlineDelegate OnItemSpawnModeChanged; // 0x6d0
	FMulticastInlineDelegate OnChangeRemainTime; // 0x6e0
	bool bCheckSeaLevelZ; // 0x6f0
	float SeaLevelZ; // 0x6f4
	int32_t GhostPlayerCountForTest; // 0x6fc
	FMulticastInlineDelegate OnRepTeamSize; // 0x700
	TArray<FCharacterDiedInfo> CharacterDiedInfos; // 0x710
	TArray<FTeamEndInfo> TeamEndInfos; // 0x720
	TArray<FAirCraftBoardingPlayerList> AirCraftBoardingInfos; // 0x730
	ABravoHotelRedZone* redzone; // 0x740
	ABravoHotelRedZoneManager* RedZoneManager; // 0x748
	FMulticastInlineDelegate AirCraftDescentPlayerInfoEvent; // 0x7a8
	FMulticastInlineDelegate EndAirCraftBoardingPlayerEvent; // 0x7b8
	ABravoHotelAircraftFlight* AircraftFlightRef; // 0x7c8
	FMulticastInlineDelegate OnRepCurrentPlayerCount; // 0x7d0
	FMulticastInlineDelegate OnRepCurrentTeamCount; // 0x7e0
	FMulticastInlineDelegate OnUpdateClassCount; // 0x7f0
	TArray<UObject*> RestoreList; // 0x800
	FTimerHandle TimerHandle_MoveToLobbyLevel; // 0x818
	TMap<FName, int32_t> CurrentClassCounts; // 0x820
	int32_t AutoBotCount; // 0x870
};

struct UMaterialExpressionPerInstanceCustomData : UMaterialExpression {
	FExpressionInput DefaultValue; // 0x40
	float ConstDefaultValue; // 0x54
	uint32_t DataIndex; // 0x58
};

struct UBTTask_BlackboardBase : UBTTaskNode {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct ABP-Projectile_FlameThrowerFireCell_C : ABravoHotelProjectileMolotovFireCell {
	float TextureScale; // 0x3b0
	float BurnArea; // 0x3b4
};

struct UInputComponent : UActorComponent {
	TArray<FCachedKeyToActionInfo> CachedKeyToActionInfo; // 0x120
};

struct ABravoHotelProjectileBullet : ABravoHotelProjectile {
	TArray<FHitResult> BeginOverlapHitResults; // 0x4d8
	TArray<AActor*> HitActors; // 0x4f0
	float ImpulsePowerRate; // 0x500
	UBravoHotelDamageType* ProjectileDamageType; // 0x508
	UAkAudioEvent* FlybyAudioEvent; // 0x510
	FVector BulletSpawnLocation; // 0x518
	AActor* FlybyTargetActor; // 0x528
	bool bStopUpdateFlyby; // 0x530
	FTimerHandle TimerHandle_UpdateFlyby; // 0x538
	ABravoHotelCharacter* TargetPawn; // 0x548
};

struct UMaterialExpressionMapARPassthroughCameraUV : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
};

struct UWidgetSwitcherSlot : UPanelSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UUW-ReplayPlayerListGroupWidget_C : UBravoHotelReplayPlayerListGroup {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Img_TeamColor; // 0x268
	UTextBlock* T_TeamNum; // 0x270
	UVerticalBox* VB_PlayerList; // 0x278
};

struct UEnvQueryGenerator_ActorsOfClass : UEnvQueryGenerator {
	AActor* SearchedActorClass; // 0x50
	FAIDataProviderBoolValue GenerateOnlyActorsInRadius; // 0x58
	FAIDataProviderFloatValue SearchRadius; // 0x90
	UEnvQueryContext* SearchCenter; // 0xc8
};

struct UAvoidanceManager : UObject {
	float DefaultTimeToLive; // 0x30
	float LockTimeAfterAvoid; // 0x34
	float LockTimeAfterClean; // 0x38
	float DeltaTimeToPredict; // 0x3c
	float ArtificialRadiusExpansion; // 0x40
	float TestHeightDifference; // 0x44
	float HeightCheckMargin; // 0x48
};

struct ABravoHotelMagazineForDrop : AActor {
	UStaticMeshComponent* MagazineMeshComponent; // 0x328
	FTransform SpawnedSocketTransform; // 0x330
	ABravoHotelRangedWeapon* OwnerWeaponRef; // 0x360
};

struct UFSM_SetStateID_ConditionalAsync : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	FSM_Transition Conditional; // 0x38
	char StateID; // 0x39
	float Timer; // 0x3c
	bool Repeat; // 0x40
	FTimerHandle TimerHandle; // 0x48
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnAborted; // 0x60
};

struct USubmixEffectDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectDelaySettings Settings; // 0x74
	FSubmixEffectDelaySettings DynamicSettings; // 0x80
};

struct UImageSequenceProtocol_EXR : UImageSequenceProtocol {
	bool bCompressed; // 0xd8
	EHDRCaptureGamut CaptureGamut; // 0xd9
};

struct ARuntimeVirtualTextureVolume : AActor {
	URuntimeVirtualTextureComponent* VirtualTextureComponent; // 0x328
};

struct UInputBehaviorSet : UObject {
	TArray<FBehaviorInfo> Behaviors; // 0x28
};

struct ASpotLight : ALight {
	USpotLightComponent* SpotLightComponent; // 0x338
};

struct UBHBAdditiveCrosshairBase : UBravoHotelBuffBase {
	FName CrosshairTableRow; // 0x2b8
};

struct UUW-Inventory_CarriedSlot_C : UUW-Inventory_SlotBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1360
	UWidgetAnimation* Ani_Tutorial_Glow; // 0x1368
	UWidgetAnimation* C_Slot_Up_Arrow; // 0x1370
	UWidgetAnimation* C_SlotHover_ItemState_Hide; // 0x1378
	UWidgetAnimation* C_SlotHover_ItemState_Show; // 0x1380
	UWidgetAnimation* C_SlotHover; // 0x1388
	UImage* BGImage; // 0x1390
	UImage* BGImage_2; // 0x1398
	UCanvasPanel* CanvasPanel_ITemState; // 0x13a0
	UTextBlock* Count120; // 0x13a8
	UImage* Crate_Default; // 0x13b0
	UImage* Crate_Hover; // 0x13b8
	UImage* Effect_Booster; // 0x13c0
	UImage* Effect_Capsule; // 0x13c8
	UHorizontalBox* HorizontalBox_Rarity; // 0x13d0
	UImage* HoverImage; // 0x13d8
	UImage* HoverImage_Round; // 0x13e0
	UImage* Image_531; // 0x13e8
	UImage* Image_539; // 0x13f0
	UImage* Image_540; // 0x13f8
	UImage* Image_541; // 0x1400
	UImage* Image_542; // 0x1408
	UImage* Image_543; // 0x1410
	UImage* Image_544; // 0x1418
	UImage* Image_Bindable; // 0x1420
	UImage* Image_Supply; // 0x1428
	UImage* ItemImage; // 0x1430
	UTextBlock* ItemState_Text; // 0x1438
	UImage* KeepedItem_List; // 0x1440
	UImage* KeepedItem_ListHover; // 0x1448
	UImage* LvColor; // 0x1450
	UImage* Motion; // 0x1458
	UProgressBar* ProgressBar_309; // 0x1460
	USizeBox* SizeBox_1; // 0x1468
	UTextBlock* TextBlock_3; // 0x1470
	UImage* Tutorial_Glow; // 0x1478
	UUW-MouseRightClick_C* UW-MouseRightClick_Big; // 0x1480
	UUW-MouseRightClick_C* UW-MouseRightClick_Small; // 0x1488
	UImage* WeaponColorBg; // 0x1490
	UImage* WeaponEquipItem_Default; // 0x1498
	UImage* WeaponEquipItem_Hover; // 0x14a0
	UImage* WeaponItemImage; // 0x14a8
	int32_t InventoryItemInfoIndex; // 0x14b0
	FLinearColor MedicalBGColor; // 0x14b4
	int32_t CurCount; // 0x14c4
	FMulticastInlineDelegate SetSlotInfo; // 0x14c8
	bool CanUseCapsule; // 0x14d8
	UImage* SelectedHoverImage; // 0x14e0
	TArray<FName> ShowRarityStar; // 0x14e8
	TArray<FName> ShowIconBG; // 0x14f8
};

struct USignificanceManager : UObject {
	FSoftClassPath SignificanceManagerClassName; // 0x1a8
};

struct UMaterialExpressionVertexInterpolator : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct ULightComponentBase : USceneComponent {
	FGuid LightGuid; // 0x230
	float Brightness; // 0x240
	float Intensity; // 0x244
	FColor LightColor; // 0x248
	char bAffectsWorld : 1; // 0x24c
	char CastShadows : 1; // 0x24c
	char CastStaticShadows : 1; // 0x24c
	char CastDynamicShadows : 1; // 0x24c
	char bAffectTranslucentLighting : 1; // 0x24c
	char bTransmission : 1; // 0x24c
	char bCastVolumetricShadow : 1; // 0x24c
	char bCastDeepShadow : 1; // 0x24c
	char bCastRaytracedShadow : 1; // 0x24d
	char bAffectReflection : 1; // 0x24d
	char bAffectGlobalIllumination : 1; // 0x24d
	float IndirectLightingIntensity; // 0x250
	float VolumetricScatteringIntensity; // 0x254
	float VolumetricAttenuationScale; // 0x258
	float VolumetricSourceRadiusScale; // 0x25c
	int32_t SamplesPerPixel; // 0x260
};

struct ASceneCaptureCube : ASceneCapture {
	USceneCaptureComponentCube* CaptureComponentCube; // 0x338
};

struct UMagicLeapARPinSaveGame : USaveGame {
	FGuid PinnedID; // 0x28
	FTransform ComponentWorldTransform; // 0x40
	FTransform PinTransform; // 0x70
};

struct ABravoHotelInventoryCharacter : AActor {
	UCustomizableSkeletalComponent* MutableComponent; // 0x328
	USkeletalMeshComponent* InventoryCharacterMesh; // 0x330
	UWidgetComponent* BackgroundWidgetComponent; // 0x338
	UPostProcessComponent* PostProcessComponet; // 0x340
	USceneComponent* LightsRootComponent; // 0x348
	USpotLightComponent* SpotLight; // 0x350
	ABravoHotelCharacter* OwnCharacter; // 0x358
	USkeletalMesh* BodyBaseSkeletalMesh; // 0x360
	TArray<USkeletalMesh*> PendingReleaseMutableMesh; // 0x368
	FVector LocationOffset; // 0x378
	FVector DefaultMeshScale; // 0x384
	FVector2D ScreenPosition; // 0x390
	float CharacterFOV; // 0x398
	float MoveScaleModify; // 0x39c
	float RotationInterpSpeed; // 0x3a0
	UUserWidget* DragWidgetClass; // 0x3a8
	UUserWidget* DragWidget; // 0x3b0
	TArray<ABravoHotelWeaponBase*> PreviewWeapons; // 0x3b8
};

struct UAkItemBoolProperties : UWidget {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnPropertyDragged; // 0x118
};

struct UUW-Lobby_Armory_Recipe_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_Crapting_Btn; // 0x250
	UButton* Button_Crapting_Btn_dis; // 0x258
	UImage* Image_112; // 0x260
	UImage* Img_Gold; // 0x268
	UImage* Img_Gold_Inert; // 0x270
	UImage* Img_Gold_Inert_2; // 0x278
	URichTextBlock* RichTextBlock_578; // 0x280
	UTextBlock* T_GoldCost; // 0x288
	UTextBlock* T_GoldCost_2; // 0x290
	UUW-Lobby_Craft_GuideWidget_C* UW-Lobby_Craft_GuideWidget; // 0x298
	UUW-Lobby_Craft_List_C* UW-Lobby_Craft_List; // 0x2a0
	UUW-Lobby_Craft_Recipe_C* UW-Lobby_Weapon_Recipe; // 0x2a8
	UUW-Lobby_WeaponInfo_C* UW-Lobby_WeaponInfo; // 0x2b0
	UUW-Lobby_WeaponInfo_RandomOption_C* UW-Lobby_WeaponInfo_RandomOption; // 0x2b8
	UWidgetSwitcher* WidgetSwitcher_179; // 0x2c0
	UWidgetSwitcher* WidgetSwitcher_Gold; // 0x2c8
	FItemCrafting CraftingInfo; // 0x2d0
	UUW-Lobby_Craft_List_Category_Slot_C* SelectedButton; // 0x3f8
};

struct UBrushBaseProperties : UInteractiveToolPropertySet {
	float BrushSize; // 0x50
	bool bSpecifyRadius; // 0x54
	float BrushRadius; // 0x58
	float BrushStrength; // 0x5c
	float BrushFalloffAmount; // 0x60
	bool bShowStrength; // 0x64
	bool bShowFalloff; // 0x65
};

struct UDistributionFloatUniform : UDistributionFloat {
	float Min; // 0x38
	float MAX; // 0x3c
};

struct UBTDecorator_IsBBEntryOfClass : UBTDecorator_BlackboardBase {
	UObject* TestClass; // 0x90
};

struct UMaterialExpressionTextureCoordinate : UMaterialExpression {
	int32_t CoordinateIndex; // 0x40
	float UTiling; // 0x44
	float VTiling; // 0x48
	char UnMirrorU : 1; // 0x4c
	char UnMirrorV : 1; // 0x4c
};

struct UDeviceProfile : UTextureLODSettings {
	FString DeviceType; // 0x38
	FString BaseProfileName; // 0x48
	UObject* Parent; // 0x58
	TArray<FString> CVars; // 0x78
};

struct UMediaPlaylist : UObject {
	TArray<UMediaSource*> Items; // 0x28
};

struct UCoherentUIGTLiveView : UActorComponent {
	FString LinkName; // 0xb0
	UTextureRenderTarget2D* Texture; // 0xc0
};

struct UDatasmithImportOptions : UDatasmithOptionsBase {
	EDatasmithImportSearchPackagePolicy SearchPackagePolicy; // 0x28
	EDatasmithImportAssetConflictPolicy MaterialConflictPolicy; // 0x29
	EDatasmithImportAssetConflictPolicy TextureConflictPolicy; // 0x2a
	EDatasmithImportActorPolicy StaticMeshActorImportPolicy; // 0x2b
	EDatasmithImportActorPolicy LightImportPolicy; // 0x2c
	EDatasmithImportActorPolicy CameraImportPolicy; // 0x2d
	EDatasmithImportActorPolicy OtherActorImportPolicy; // 0x2e
	EDatasmithImportMaterialQuality MaterialQuality; // 0x2f
	FDatasmithImportBaseOptions BaseOptions; // 0x34
	FDatasmithReimportOptions ReimportOptions; // 0x48
	FString Filename; // 0x50
	FString FilePath; // 0x60
};

struct UUW-Inventory_Perk_C : UBravoHotelInventoryPerkWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e8
	UWidgetAnimation* Anim_Glow; // 0x2f0
	UWidgetAnimation* HideFreeSupply; // 0x2f8
	UWidgetAnimation* ShowFreeSupply; // 0x300
	UWidgetAnimation* LevelUp; // 0x308
	UWidgetAnimation* Ability_Defense; // 0x310
	UWidgetAnimation* Ability_Speed; // 0x318
	UWidgetAnimation* Ability_Power; // 0x320
	UWidgetAnimation* Survive_FadeInOut; // 0x328
	UWidgetAnimation* Anim_LevelUpDefense; // 0x330
	UWidgetAnimation* Anim_LevelUpSpeed; // 0x338
	UWidgetAnimation* Anim_LevelUpPower; // 0x340
	UButton* btn_ItemTree; // 0x348
	UButton* btn_PerkDeckDisabled; // 0x350
	UButton* btn_PerkDeckDisabled_2; // 0x358
	UButton* btn_PerkDeckEnabled; // 0x360
	UButton* btn_PerkDeckEnabled_2; // 0x368
	UCanvasPanel* Canvas_BG; // 0x370
	UCanvasPanel* Canvas_ChangeClass; // 0x378
	UCanvasPanel* Canvas_ChangeDisable; // 0x380
	UCanvasPanel* Canvas_ChangeDisable_2; // 0x388
	UCanvasPanel* Canvas_ChangeEnable; // 0x390
	UCanvasPanel* Canvas_ChangeEnable_2; // 0x398
	UCanvasPanel* Canvas_ChangeSupply; // 0x3a0
	UCanvasPanel* Canvas_LevelupEffect; // 0x3a8
	UCanvasPanel* Canvas_Main; // 0x3b0
	UCanvasPanel* Canvas_Perk; // 0x3b8
	UCanvasPanel* Canvas_SupplyButton; // 0x3c0
	UCanvasPanel* Canvas_UltimateEffect; // 0x3c8
	UCanvasPanel* Canvas_UltimateLightEffect; // 0x3d0
	UHorizontalBox* HorizontalBox_300; // 0x3d8
	UHorizontalBox* HorizontalBox_303; // 0x3e0
	UHorizontalBox* HorizontalBox_Stat; // 0x3e8
	UHorizontalBox* HorizontalBox_UnlockLevel; // 0x3f0
	UImage* Image; // 0x3f8
	UImage* Image_5; // 0x400
	UImage* Image_86; // 0x408
	UImage* Image_126; // 0x410
	UImage* Image_163; // 0x418
	UImage* Image_180; // 0x420
	UImage* Image_200; // 0x428
	UImage* Image_203; // 0x430
	UImage* Image_222; // 0x438
	UImage* Image_384; // 0x440
	UImage* Image_387; // 0x448
	UImage* Image_388; // 0x450
	UImage* Image_389; // 0x458
	UImage* Image_485; // 0x460
	UImage* Image_571; // 0x468
	UImage* Image_1098; // 0x470
	UImage* Image_1100; // 0x478
	UImage* Image_1104; // 0x480
	UImage* Image_Cycle; // 0x488
	UImage* Image_Cycle_2; // 0x490
	UImage* IMG_ClassIcon; // 0x498
	UImage* Img_PerkDeckIcon; // 0x4a0
	UImage* IMG_Supply; // 0x4a8
	UImage* IMG_UltimatedSkill; // 0x4b0
	UInvalidationBox* InvalidationBox_1; // 0x4b8
	UKeyImageWidget_C* KeyImageWidget; // 0x4c0
	UCanvasPanel* NotEnoughGold; // 0x4c8
	UOverlay* Over_Ultimate; // 0x4d0
	UOverlay* Overlay_UltimateKey; // 0x4d8
	USpacer* Spacer_251; // 0x4e0
	UTextBlock* T_ClassName; // 0x4e8
	UTextBlock* T_Defense; // 0x4f0
	UTextBlock* T_DefenseAnim; // 0x4f8
	UTextBlock* T_Power; // 0x500
	UTextBlock* T_PowerAnim; // 0x508
	UTextBlock* T_Speed; // 0x510
	UTextBlock* T_SpeedAnim; // 0x518
	UTextBlock* T_UltimateName; // 0x520
	UTextBlock* T_UnlockLevel; // 0x528
	UTextBlock* T_UnlockLevel2; // 0x530
	UTextBlock* T_WeaponName; // 0x538
	UTextBlock* TextBlock_2; // 0x540
	UTextBlock* TextBlock_3; // 0x548
	UTextBlock* TextBlock_4; // 0x550
	UTextBlock* TextBlock_9; // 0x558
	UTextBlock* TextBlock_ClassLevel; // 0x560
	UTextBlock* TextBlock_Count_Blue; // 0x568
	UTextBlock* TextBlock_Count_Green; // 0x570
	UTextBlock* TextBlock_Count_Red; // 0x578
	UTextBlock* TextBlock_Defense; // 0x580
	UTextBlock* TextBlock_Power; // 0x588
	UTextBlock* TextBlock_Price; // 0x590
	UTextBlock* TextBlock_Price_2; // 0x598
	UTextBlock* TextBlock_Select; // 0x5a0
	UTextBlock* TextBlock_Select_2; // 0x5a8
	UTextBlock* TextBlock_Speed; // 0x5b0
	UTextBlock* TextBlock_SurviveMessage01; // 0x5b8
	UTextBlock* TextBlock_SurviveMessage02; // 0x5c0
	UTextBlock* TextBlock_UltimateDesc; // 0x5c8
	UHorizontalBox* Title; // 0x5d0
	UImage* UltiLight_001; // 0x5d8
	UImage* UltiLight_002; // 0x5e0
	UImage* UltiLight_003; // 0x5e8
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot; // 0x5f0
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot_2; // 0x5f8
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot_3; // 0x600
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot_4; // 0x608
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot_5; // 0x610
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot_6; // 0x618
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot_7; // 0x620
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot_8; // 0x628
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot_9; // 0x630
	UVerticalBox* VB_Health; // 0x638
	UVerticalBox* VB_Power; // 0x640
	UVerticalBox* VB_Speed; // 0x648
	UVerticalBox* VerticalBox_Blue; // 0x650
	UVerticalBox* VerticalBox_Green; // 0x658
	UVerticalBox* VerticalBox_Red; // 0x660
	UWidgetSwitcher* WidgetSwitcher_ChangeClass; // 0x668
	UWidgetSwitcher* WidgetSwitcher_ChangeSupply; // 0x670
	UWidgetSwitcher* WidgetSwitcher_TreeAndClass; // 0x678
	UWidgetSwitcher* WidgetSwitcher_Ultimate; // 0x680
	FName CurrentPerkDeckName; // 0x688
	TArray<UUW-Inventory_PerkSlot_C*> CurrentPerkInfos; // 0x690
	FName ExpertWeaponKey; // 0x6a0
	TMap<FName, UUW-Inventory_PerkSlot_C*> CurrentPerkCells; // 0x6a8
	int32_t PerkMode; // 0x6f8
	UUW-Inventory_ItemSlotHover_C* HoverWidget; // 0x700
	int32_t PowerValue; // 0x708
	FTimerHandle TimerHandle_Power; // 0x710
	int32_t SpeedValue; // 0x718
	FTimerHandle TimerHandle_Speed; // 0x720
	int32_t DefenseValue; // 0x728
	FTimerHandle TimerHandle_Defense; // 0x730
	bool bPlayAbilityCountSoundStart; // 0x738
	bool bPlayAbilityCountSoundEnd; // 0x739
	UAkAudioEvent* LevelUpSound; // 0x740
	bool EnableSupplyBtn; // 0x748
	FTimerHandle FreeSupplyTimer; // 0x750
	FTimerHandle NotEnoughtGoldTimer; // 0x758
	TArray<UUW-ListWidget_GainPerk_C*> GainPerkPopups; // 0x760
	bool IsPlayingUltimateSound; // 0x770
	int32_t LastLevel; // 0x774
	FPerkDeckClassInfo PerkDeckClassInfo; // 0x778
};

struct UUW-ListWidget_ItemBase_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_Remove; // 0x250
	FTimerHandle Timer_StartRemove; // 0x258
};

struct UNiagaraPreviewAxis_InterpParamVector : UNiagaraPreviewAxis_InterpParamBase {
	FVector Min; // 0x38
	FVector MAX; // 0x44
};

struct UTreeView : UListView {
	FDelegate BP_OnGetItemChildren; // 0x378
	FMulticastInlineDelegate BP_OnItemExpansionChanged; // 0x388
};

struct UPrefabToolSettings : UObject {
	bool bInitialPivotToWorldOrigin; // 0x28
	bool bReplaceActorsWithCreatedPrefab; // 0x29
	bool bAutoIncludeAttachedActorsWhenCreateNewPrefab; // 0x2a
	bool bNestedPrefabSupport; // 0x2b
	bool bRestorePrefabActorCollapseStatusAfterPIE; // 0x2c
	bool bCollapseAllPrefabActorsAfterMapOpened; // 0x2d
	bool bMoveActorsInWorldAfterSetPrefabPivot; // 0x2e
	bool bDuplicateNoRevertWithOffset; // 0x2f
	FString NewPrefabNamePattern; // 0x30
	EPTUITheme UITheme; // 0x40
	bool bUpdateAllPrefabActorsWhenOpenMap; // 0x44
	bool bCheckPrefabChangeBeforeUpdateAllPrefabActorsWhenOpenMap; // 0x45
	bool bUpdateAllPrefabActorsWhenApply; // 0x46
	bool bApplyToNestedPrefab; // 0x47
	bool bEnableApplyFromDisconnectedPrefabActor; // 0x48
	bool bAutoAddRemoveVariantActorPrefix; // 0x49
	FString VariantActorPrefix; // 0x50
	bool bEnablePrefabComponentVisualizer; // 0x60
	EPrefabVisualizerType PrefabComponentVisualizerType; // 0x61
	bool bDisplayPrefabComponentVisualizerEvenNotSelected; // 0x62
	FColor PrefabViewVisualizerColor; // 0x64
	FColor TargetActorColor; // 0x68
	FColor UnLockedConnectedColor; // 0x6c
	FColor LockedConnectedColor; // 0x70
	FColor UnLockedDisConnectedColor; // 0x74
	FColor LockedDisConnectedColor; // 0x78
	FColor UnLockedNoPrefabAssignedColor; // 0x7c
	FColor LockedNoPrefabAssignedColor; // 0x80
	FSoftObjectPath PrefabMaterialPath; // 0x88
	bool bShadedPrefabViewVisualizer; // 0xc8
	bool bLockPrefabSelectionByDefault; // 0xc9
	bool bDisableLockPrefabSelectionFeature; // 0xca
	bool bSupportGroupWhenPasting; // 0xcb
	bool bForceApplyPerInstanceVertexColor; // 0xcc
	bool bHideChildActorsInPIEIfHiddenInEditor; // 0xcd
	bool bCanToggleChildActorVisibilityInPIE; // 0xce
	bool bIgnoreLayersInPrefab; // 0xd0
	TArray<AActor*> ChangeComponentActor; // 0xd8
	AActor* DefaultActorClass; // 0xe8
	bool bEnabledAutoThumbnail; // 0xf0
	bool bAutoOpenBlueprintEditor; // 0xf1
	AActor* InteriorActorClass; // 0xf8
	AActor* ExteriorActorClass; // 0x100
	AActor* InteriorShowActorClass; // 0x108
	AActor* HouseActorClass; // 0x110
	bool bSupportGenerateBlueprint; // 0x118
	bool bHarvestComponentsWhenGeneratingBlueprint; // 0x119
	bool bUseActorNameAsVariableNameWhenGeneratingBlueprint; // 0x11a
	bool bForceMobilityToMovableWhenGeneratingBlueprint; // 0x11b
	TArray<AActor*> IgnoreActorClassesWhenGeneratingBlueprint; // 0x120
	TArray<FName> IgnoreActorTagsWhenGeneratingBlueprint; // 0x130
	bool bFlashPrefabWindowForTargetPrefabActor; // 0x140
	bool bEnablePrefabTextEditor; // 0x141
	bool bDebugMode; // 0x142
	bool bDisableThumbnailRender; // 0x143
	bool bShowPrefabInstanceTagInPrefabToolWindow; // 0x144
};

struct USoundNodeMixer : USoundNode {
	TArray<float> InputVolume; // 0x48
};

struct UParticleModuleColor_Seeded : UParticleModuleColor {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct UMovieSceneNiagaraParameterTrack : UMovieSceneNiagaraTrack {
	FNiagaraVariable Parameter; // 0x68
};

struct USkinnedMeshComponent : UMeshComponent {
	USkeletalMesh* SkeletalMesh; // 0x4e0
	TWeakObjectPtr<USkinnedMeshComponent> MasterPoseComponent; // 0x4e8
	TArray<ESkinCacheUsage> SkinCacheUsage; // 0x4f0
	UPhysicsAsset* PhysicsAssetOverride; // 0x5f8
	int32_t ForcedLodModel; // 0x600
	int32_t MinLodModel; // 0x604
	float StreamingDistanceMultiplier; // 0x610
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x620
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x654
	char bOverrideMinLod : 1; // 0x656
	char bUseBoundsFromMasterPoseComponent : 1; // 0x656
	char bForceWireframe : 1; // 0x656
	char bDisplayBones : 1; // 0x656
	char bDisableMorphTarget : 1; // 0x656
	char bHideSkin : 1; // 0x656
	char bPerBoneMotionBlur : 1; // 0x657
	char bComponentUseFixedSkelBounds : 1; // 0x657
	char bConsiderAllBodiesForBounds : 1; // 0x657
	char bSyncAttachParentLOD : 1; // 0x657
	char bCanHighlightSelectedSections : 1; // 0x657
	char bRecentlyRendered : 1; // 0x657
	char bCastCapsuleDirectShadow : 1; // 0x657
	char bCastCapsuleIndirectShadow : 1; // 0x657
	char bCPUSkinning : 1; // 0x658
	char bEnableUpdateRateOptimizations : 1; // 0x658
	char bDisplayDebugUpdateRateOptimizations : 1; // 0x658
	char bRenderStatic : 1; // 0x658
	char bIgnoreMasterPoseComponentLOD : 1; // 0x658
	char bCachedLocalBoundsUpToDate : 1; // 0x658
	char bForceMeshObjectUpdate : 1; // 0x659
	float CapsuleIndirectShadowMinVisibility; // 0x65c
	FBoxSphereBounds CachedWorldSpaceBounds; // 0x670
	FMatrix CachedWorldToLocalTransform; // 0x690
};

struct UUW-ArmoryInput_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_20; // 0x250
	FRotator TargetAccel; // 0x258
	FRotator CurrentAccel; // 0x264
	float TargetScale; // 0x270
	UOutGameArmoryDataType_C* DataAsset; // 0x278
	bool ResetOriginTransform; // 0x280
	bool MouseInputLock; // 0x281
	bool IsUpdatingRotation; // 0x282
	bool IsValidMeshActor; // 0x283
	bool IsPressedLeftMouse; // 0x284
};

struct UCameraModifier : UObject {
	char bDebug : 1; // 0x28
	char bExclusive : 1; // 0x28
	char Priority; // 0x2c
	APlayerCameraManager* CameraOwner; // 0x30
	float AlphaInTime; // 0x38
	float AlphaOutTime; // 0x3c
	float ALPHA; // 0x40
};

struct UNiagaraDataInterfaceAudioSubmix : UNiagaraDataInterface {
	USoundSubmix* Submix; // 0x30
};

struct ABravoHotelFence : ABravoHotelDestructibleEx {
	TMap<UBravoHotelDamageType*, float> DamageCorrectValues; // 0x340
};

struct ABravoHotelMutiplayerPhysicsActor : AActor {
	USceneComponent* RootNode; // 0x328
	APlayerController* SendController; // 0x330
	UStaticMeshComponent* BoxMesh; // 0x370
	bool LoopAction; // 0x378
	bool StartAction; // 0x379
	FTransform RepMoveTransform; // 0x380
};

struct USoundSubmix : USoundSubmixWithParentBase {
	char bMuteWhenBackgrounded : 1; // 0x40
	TArray<USoundEffectSubmixPreset*> SubmixEffectChain; // 0x48
	USoundfieldEncodingSettingsBase* AmbisonicsPluginSettings; // 0x58
	int32_t EnvelopeFollowerAttackTime; // 0x60
	int32_t EnvelopeFollowerReleaseTime; // 0x64
	float OutputVolume; // 0x68
	FMulticastInlineDelegate OnSubmixRecordedFileDone; // 0x70
};

struct ABravoHotelAIPlayerController : AAIController {
	float AutoRotateSpeed; // 0x458
	FName DefaultWeaponName; // 0x45c
	AController* NearPlayerController; // 0x480
	APawn* NearTargetPawn; // 0x488
	APawn* AttackTargetPawn; // 0x490
};

struct UAIPerceptionSystem : UAISubsystem {
	TArray<UAISense*> Senses; // 0x88
	float PerceptionAgingRate; // 0x98
};

struct UBP-SavedInventorySettings_C : USavedInventorySettings {
	bool ShowPerkSlot; // 0x30
};

struct ULandscapeLayerInfoObject : UObject {
	FName LayerName; // 0x28
	UPhysicalMaterial* PhysMaterial; // 0x30
	float Hardness; // 0x38
	FLinearColor LayerUsageDebugColor; // 0x3c
};

struct UParticleModuleLocationWorldOffset_Seeded : UParticleModuleLocationWorldOffset {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UMovieSceneSubTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UCoherentUIGTJSEvent : UObject {
	TArray<UStruct*> StructTypes; // 0xa8
};

struct UBTTask_FSM_CheckState : UBTTask_BlackboardBase {
	UStateMachineComponent* FSM; // 0x98
	FName TargetFSM; // 0xa0
	FName StateName; // 0xa8
	bool Debug; // 0xb0
	bool ForceSuccess; // 0xb1
};

struct UEdGraphNode_Documentation : UEdGraphNode {
	FString Link; // 0x98
	FString Excerpt; // 0xa8
};

struct UBravoHotelAnimNotify_DropMagazine : UAnimNotify {
	FName WeaponSlotNameForSpawn; // 0x38
	ABravoHotelMagazineForDrop* MagazineClass; // 0x40
};

struct UScrollBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UEnvQueryGenerator_CurrentLocation : UEnvQueryGenerator {
	UEnvQueryContext* QueryContext; // 0x50
};

struct AAmbientSound : AActor {
	UAudioComponent* AudioComponent; // 0x328
};

struct UGameplayTask : UObject {
	FName InstanceName; // 0x30
	ETaskResourceOverlapPolicy ResourceOverlapPolicy; // 0x3a
	UGameplayTask* ChildTask; // 0x60
};

struct UHorizontalBoxSlot : UPanelSlot {
	FMargin Padding; // 0x40
	FSlateChildSize Size; // 0x50
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UMaterialExpressionCeil : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UParticleSystemComponent : UFXSystemComponent {
	UParticleSystem* Template; // 0x4b0
	TArray<UMaterialInterface*> EmitterMaterials; // 0x4b8
	TArray<USkeletalMeshComponent*> SkelMeshComponents; // 0x4c8
	char bResetOnDetach : 1; // 0x4d9
	char bUpdateOnDedicatedServer : 1; // 0x4d9
	char bAllowRecycling : 1; // 0x4d9
	char bAutoManageAttachment : 1; // 0x4d9
	char bAutoAttachWeldSimulatedBodies : 1; // 0x4d9
	char bWarmingUp : 1; // 0x4da
	char bOverrideLODMethod : 1; // 0x4da
	char bSkipUpdateDynamicDataDuringTick : 1; // 0x4da
	ParticleSystemLODMethod LODMethod; // 0x4e5
	EParticleSignificanceLevel RequiredSignificance; // 0x4e6
	TArray<FParticleSysParam> InstanceParameters; // 0x4e8
	FMulticastInlineDelegate OnParticleSpawn; // 0x4f8
	FMulticastInlineDelegate OnParticleBurst; // 0x508
	FMulticastInlineDelegate OnParticleDeath; // 0x518
	FMulticastInlineDelegate OnParticleCollide; // 0x528
	bool bOldPositionValid; // 0x538
	FVector OldPosition; // 0x53c
	FVector PartSysVelocity; // 0x548
	float WarmupTime; // 0x554
	float WarmupTickRate; // 0x558
	float SecondsBeforeInactive; // 0x570
	float MaxTimeBeforeForceUpdateTransform; // 0x578
	TArray<UParticleSystemReplay*> ReplayClips; // 0x598
	float CustomTimeDilation; // 0x5b0
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x608
	FName AutoAttachSocketName; // 0x610
	EAttachmentRule AutoAttachLocationRule; // 0x618
	EAttachmentRule AutoAttachRotationRule; // 0x619
	EAttachmentRule AutoAttachScaleRule; // 0x61a
	FMulticastInlineDelegate OnSystemFinished; // 0x648
};

struct UWB_ClassicComboBoxButton_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* VisualNoninteractButton; // 0x250
	FButtonStyle Original Style; // 0x258
};

struct UPaperFlipbook : UObject {
	float FramesPerSecond; // 0x28
	TArray<FPaperFlipbookKeyFrame> KeyFrames; // 0x30
	UMaterialInterface* DefaultMaterial; // 0x40
	EFlipbookCollisionMode CollisionSource; // 0x48
};

struct UAnimationSharingManager : UObject {
	TArray<UAnimSharingInstance*> PerSkeletonData; // 0x28
	TArray<USkeleton*> Skeletons; // 0x48
};

struct ANiagaraActor : AActor {
	UNiagaraComponent* NiagaraComponent; // 0x328
	char bDestroyOnSystemFinish : 1; // 0x330
};

struct UBHBUltimate_Recon : UBHBActiveBuffBase {
	int32_t CurrentActiveCount; // 0x2c0
	int32_t MaxActiveCount; // 0x2c4
};

struct UMaterialExpressionStaticBoolParameter : UMaterialExpressionParameter {
	char DefaultValue : 1; // 0x58
};

struct UUW-ReportUser_C : UBravoHotelReportUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UButton* btn_Cancel; // 0x280
	UButton* btn_report; // 0x288
	UOverlay* combobox_button_overlay; // 0x290
	UComboBoxString* combobox_string; // 0x298
	UImage* Image; // 0x2a0
	UImage* Image_2; // 0x2a8
	UImage* Image_545; // 0x2b0
	UButton* NormalArrow; // 0x2b8
	UButton* OpeningArrow; // 0x2c0
	UImage* popup-bg; // 0x2c8
	UTextBlock* txt_description; // 0x2d0
	UTextBlock* txt_nickname; // 0x2d8
	UImage* uw-bg; // 0x2e0
	FText DescriptionText; // 0x2e8
	TArray<FText> ReportIndexText; // 0x300
	FText DefaultComboString; // 0x310
	int32_t CurrentSelectIndex; // 0x328
	int32_t SelectIndexFromProgram; // 0x32c
	bool CheckCloseComboArrow; // 0x330
};

struct ARectLight : ALight {
	URectLightComponent* RectLightComponent; // 0x338
};

struct UUW-Inventory_PopupPerkSlot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_92; // 0x250
	UImage* Image_253; // 0x258
	UImage* Image_774; // 0x260
	FPerkUIInfo PerkInfo; // 0x268
	FPerkData PerkData; // 0x298
	FSlateBrush IconBrush; // 0x378
	UUW-Inventory_ItemSlotHover_C* Popup; // 0x400
};

struct UBravoHotelHIDestructibleComponent : UHierarchicalInstancedStaticMeshComponent {
	FName MeshClassType; // 0x728
	TArray<UBravoHotelDamageType*> AllowedDamageType; // 0x730
	float ImpulseStrength; // 0x740
	TArray<float> HpList; // 0x748
	TArray<int16_t> CurrentHpList; // 0x758
	UAkAudioEvent* DestructedSound; // 0x768
	UParticleSystem* DestructedEffect; // 0x770
	FVector EffectPositionDelta; // 0x778
	FVector EffectRotationDelta; // 0x784
	bool bOverrideMaterial; // 0x790
	int32_t DestructibleMaterialIndex; // 0x794
	UMaterialInterface* DestructibleMaterial; // 0x798
	bool bIsWindowComponent; // 0x7a0
	ADestructibleActor* DestructibleActorClass; // 0x7a8
	TSoftObjectPtr<UDestructibleMesh> DestructibleMesh; // 0x7b0
	TArray<char> DisableInstanceArray; // 0x840
};

struct UAkDurationCallbackInfo : UAkEventCallbackInfo {
	float Duration; // 0x38
	float EstimatedDuration; // 0x3c
	int32_t AudioNodeID; // 0x40
	int32_t MediaID; // 0x44
	bool bStreaming; // 0x48
};

struct USightInfoData : UDataAsset {
	FVector2D DefaultSightViewRatio; // 0x30
	FVector2D HoloSightViewRatio; // 0x38
	FVector2D ReddotViewRatio; // 0x40
	FVector2D DigitalViewRatio; // 0x48
	FVector2D X2ViewRatio; // 0x50
	FVector2D X4ViewRatio; // 0x58
	FVector2D X8ViewRatio; // 0x60
	FVector2D X15ViewRatio; // 0x68
};

struct USpectatorPawnMovement : UFloatingPawnMovement {
	char bIgnoreTimeDilation : 1; // 0x150
};

struct UDestructibleComponent : USkinnedMeshComponent {
	char bFractureEffectOverride : 1; // 0x6f0
	TArray<FFractureEffect> FractureEffects; // 0x6f8
	bool bEnableHardSleeping; // 0x708
	float LargeChunkThreshold; // 0x70c
	FMulticastInlineDelegate OnComponentFracture; // 0x720
	FMulticastInlineDelegate OnFractureEffectSpawned; // 0x730
};

struct UIpConnection : UNetConnection {
	float SocketErrorDisconnectDelay; // 0x1af0
};

struct UUW-LoadingRichText_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	URichTextBlock* RichTextBlock_52; // 0x250
	FText SetText; // 0x258
};

struct UWidgetAnimationDelegateBinding : UDynamicBlueprintBinding {
	TArray<FBlueprintWidgetAnimationDelegateBinding> WidgetAnimationDelegateBindings; // 0x28
};

struct URestrictedGameplayTagsList : UObject {
	FString ConfigFileName; // 0x28
	TArray<FRestrictedGameplayTagTableRow> RestrictedGameplayTagList; // 0x38
};

struct UUW-DebugCharacterWidget_C : UBravoHotelDebugWidget {
	UTextBlock* TextBlock_DebugString; // 0x258
};

struct ASplineMeshActor : AActor {
	USplineMeshComponent* SplineMeshComponent; // 0x328
};

struct UNiagaraDataInterfaceChaosDestruction : UNiagaraDataInterface {
	TSet<AChaosSolverActor*> ChaosSolverActorSet; // 0x30
	EDataSourceTypeEnum DataSourceType; // 0x80
	int32_t DataProcessFrequency; // 0x84
	int32_t MaxNumberOfDataEntriesToSpawn; // 0x88
	bool DoSpawn; // 0x8c
	FVector2D SpawnMultiplierMinMax; // 0x90
	float SpawnChance; // 0x98
	FVector2D ImpulseToSpawnMinMax; // 0x9c
	FVector2D SpeedToSpawnMinMax; // 0xa4
	FVector2D MassToSpawnMinMax; // 0xac
	FVector2D ExtentMinToSpawnMinMax; // 0xb4
	FVector2D ExtentMaxToSpawnMinMax; // 0xbc
	FVector2D VolumeToSpawnMinMax; // 0xc4
	FVector2D SolverTimeToSpawnMinMax; // 0xcc
	int32_t SurfaceTypeToSpawn; // 0xd4
	ELocationFilteringModeEnum LocationFilteringMode; // 0xd8
	ELocationXToSpawnEnum LocationXToSpawn; // 0xd9
	FVector2D LocationXToSpawnMinMax; // 0xdc
	ELocationYToSpawnEnum LocationYToSpawn; // 0xe4
	FVector2D LocationYToSpawnMinMax; // 0xe8
	ELocationZToSpawnEnum LocationZToSpawn; // 0xf0
	FVector2D LocationZToSpawnMinMax; // 0xf4
	EDataSortTypeEnum DataSortingType; // 0xfc
	bool bGetExternalCollisionData; // 0xfd
	bool DoSpatialHash; // 0xfe
	FVector SpatialHashVolumeMin; // 0x100
	FVector SpatialHashVolumeMax; // 0x10c
	FVector SpatialHashVolumeCellSize; // 0x118
	int32_t MaxDataPerCell; // 0x124
	bool bApplyMaterialsFilter; // 0x128
	TSet<UPhysicalMaterial*> ChaosBreakingMaterialSet; // 0x130
	bool bGetExternalBreakingData; // 0x180
	bool bGetExternalTrailingData; // 0x181
	FVector2D RandomPositionMagnitudeMinMax; // 0x184
	float InheritedVelocityMultiplier; // 0x18c
	ERandomVelocityGenerationTypeEnum RandomVelocityGenerationType; // 0x190
	FVector2D RandomVelocityMagnitudeMinMax; // 0x194
	float SpreadAngleMax; // 0x19c
	FVector VelocityOffsetMin; // 0x1a0
	FVector VelocityOffsetMax; // 0x1ac
	FVector2D FinalVelocityMagnitudeMinMax; // 0x1b8
	float MaxLatency; // 0x1c0
	EDebugTypeEnum DebugType; // 0x1c4
	int32_t LastSpawnedPointID; // 0x1c8
	float LastSpawnTime; // 0x1cc
	float SolverTime; // 0x1e0
	float TimeStampOfLastProcessedData; // 0x1e4
};

struct UUW-ReplayTimelineBasic_C : UBravoHotelReplayTimelineWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x360
	UImage* Bg; // 0x368
	UTimelineBorder* Border_Timeline; // 0x370
	UBorder* Border_TimeToGo; // 0x378
	UButton* BT_FreeCam; // 0x380
	UButton* BT_ReplayPause; // 0x388
	UButton* BT_ReplayResume; // 0x390
	UButton* BT_SpeedDown; // 0x398
	UButton* BT_SpeedUp; // 0x3a0
	UButton* BT_TimelineScaleDown; // 0x3a8
	UButton* BT_TimelineScaleUp; // 0x3b0
	UCanvasPanel* Canvas_EventMarkers; // 0x3b8
	UCheckBox* Chk_ShowKill; // 0x3c0
	UCheckBox* Chk_ShowKnockout; // 0x3c8
	UCheckBox* Chk_ShowMyKill; // 0x3d0
	UCheckBox* Chk_ShowMyKnockout; // 0x3d8
	UCheckBox* Chk_ShowMyResuscitated; // 0x3e0
	UCheckBox* Chk_ShowResuscitated; // 0x3e8
	USlider* ReplayTimelineSlider; // 0x3f0
	UScrollBox* ScrollBox_Timeline; // 0x3f8
	USizeBox* SizeBox_Timeline; // 0x400
	USlider* Slider_TimelineScale; // 0x408
	UTextBlock* T_CameraType; // 0x410
	UTextBlock* T_CurrentTime; // 0x418
	UTextBlock* T_PlaySpeed; // 0x420
	UTextBlock* T_TimeToGo; // 0x428
	UTextBlock* T_TotalTime; // 0x430
	float TimelineSizeBoxOffset; // 0x438
	UUserWidget* Class_EventMarker_Kill; // 0x440
	UUserWidget* Class_EventMarker_Knockout; // 0x448
	float LastViewportSize; // 0x450
	bool IsMouseOnBorder; // 0x454
	UUserWidget* Class_EventMarker_Resuscitated; // 0x458
	UUserWidget* Class_EventMarker_WhenReported; // 0x460
	ECameraType CameraType; // 0x468
	EReplayViewMode ViewMode; // 0x469
};

struct USynthComponentMonoWaveTable : USynthComponent {
	FMulticastInlineDelegate OnTableAltered; // 0x710
	FMulticastInlineDelegate OnNumTablesChanged; // 0x720
	UMonoWaveTableSynthPreset* CurrentPreset; // 0x730
};

struct UMaterialExpressionLandscapeVisibilityMask : UMaterialExpression {
	FGuid ExpressionGUID; // 0x40
};

struct UBravoHotelThrowingWeaponMovementComponent : UProjectileMovementComponent {
	FMulticastInlineDelegate OnProjectilePenetrate; // 0x1d0
	bool bIsFluidFriction; // 0x1e0
	bool bInFluid; // 0x1e1
	float FluidFriction; // 0x1e4
	float BuoyancyZ; // 0x1e8
	bool bEnableGuidedForce; // 0x1ec
	float GuidedForce; // 0x1f0
	FVector GuidedLocation; // 0x1f4
};

struct UAkCallbackInfo : UObject {
	UAkComponent* AkComponent; // 0x28
};

struct UBrushStampIndicator : UInteractiveGizmo {
	float BrushRadius; // 0x38
	float BrushFalloff; // 0x3c
	FVector BrushPosition; // 0x40
	FVector BrushNormal; // 0x4c
	bool bDrawIndicatorLines; // 0x58
	bool bDrawRadiusCircle; // 0x59
	bool bDrawFalloffCircle; // 0x5a
	int32_t SampleStepCount; // 0x5c
	FLinearColor LineColor; // 0x60
	float LineThickness; // 0x70
	bool bDepthTested; // 0x74
	bool bDrawSecondaryLines; // 0x75
	float SecondaryLineThickness; // 0x78
	FLinearColor SecondaryLineColor; // 0x7c
	UPrimitiveComponent* AttachedComponent; // 0x90
};

struct UBravoHotelAnimNotify_PlayConditionedSound : UAnimNotify {
	FConditionedSound ConditionedSound; // 0x38
	bool bFollow; // 0x48
	bool bPlayOnServer; // 0x49
	bool bPlayWhileFalling; // 0x4a
	bool bPlayOnlyForPawnMesh; // 0x4b
	bool bPlayOnlyLocalPlayer; // 0x4c
	bool bForced2D; // 0x4d
	bool bUseConditionProvider; // 0x4e
};

struct ABravoHotelSightAttachment : AActor {
	UStaticMeshComponent* WeaponSight; // 0x328
	bool bUpdateScopeWidgetScaling; // 0x330
	EWeaponAttachmentItem SightType; // 0x331
	UMaterialInterface* LensMaterial_1P; // 0x338
	UMaterialInterface* LensMaterial_3P; // 0x340
	UWidgetComponent* ScopeWidget; // 0x348
	float InitialScopeWidgetDistance; // 0x350
	TArray<UWidgetComponent*> BP_ScopeWidgets; // 0x358
	TArray<UPrimitiveComponent*> ChildPrimitiveComponents; // 0x368
	UUserWidget* WidgetClass; // 0x378
	FVector2D WidgetDrawSize; // 0x380
	FVector DefaultWidgetComponentLocation; // 0x388
	bool bUseHighMagnificationMesh; // 0x394
	TSoftObjectPtr<UStaticMesh> HighMagnificationSightMesh; // 0x398
	TSoftObjectPtr<UStaticMesh> DefaultSightMesh; // 0x3c0
	UStaticMesh* LoadedHighMagnificationSightMesh; // 0x3e8
	UStaticMesh* LoadedDefaultSightMesh; // 0x3f0
	FTimerHandle TimerHandle_ScopeVisible; // 0x3f8
	float VisibleDelayTime; // 0x400
	float ViewportRatioMax; // 0x404
	float ViewportSizeMax; // 0x408
	bool bIsADSMode; // 0x40c
	float ScaleMultiplier_ZoomInOut; // 0x410
	bool bKeepMagnifierIndex; // 0x414
	TArray<float> MagnifierList; // 0x418
	float CurrentMagnifier; // 0x428
	int16_t InitialMagnifierIndex; // 0x42c
	FVector2D ScopeWidgetDefaultSize; // 0x430
};

struct UMovieScenePrimitiveMaterialSection : UMovieSceneSection {
	FMovieSceneObjectPathChannel MaterialChannel; // 0xe0
};

struct UMaterialExpressionTextureBase : UMaterialExpression {
	UTexture* Texture; // 0x40
	EMaterialSamplerType SamplerType; // 0x48
	char IsDefaultMeshpaintTexture : 1; // 0x49
};

struct UDistributionFloatUniformCurve : UDistributionFloat {
	FInterpCurveVector2D ConstantCurve; // 0x38
};

struct ULevelSequenceBurnInOptions : UObject {
	bool bUseBurnIn; // 0x28
	FSoftClassPath BurnInClass; // 0x30
	ULevelSequenceBurnInInitSettings* Settings; // 0x48
};

struct UNavigationPath : UObject {
	FMulticastInlineDelegate PathUpdatedNotifier; // 0x28
	TArray<FVector> PathPoints; // 0x38
	ENavigationOptionFlag RecalculateOnInvalidation; // 0x48
};

struct UCoherentUIGTComponent : UCoherentUIGTBaseComponent {
	FString URL; // 0x230
	int32_t Width; // 0x240
	int32_t Height; // 0x244
	bool ManualTexture; // 0x248
	float ClickThroughAlphaThreshold; // 0x24c
	bool Transparent; // 0x250
};

struct UNiagaraPreviewAxis_InterpParamInt32 : UNiagaraPreviewAxis_InterpParamBase {
	int32_t Min; // 0x38
	int32_t MAX; // 0x3c
};

struct ASceneCapture : AActor {
	UStaticMeshComponent* MeshComp; // 0x328
	USceneComponent* SceneComponent; // 0x330
};

struct UAnimNotifyState_PlaySound : UAnimNotifyState {
	USoundBase* Sound; // 0x30
	float VolumeMultiplier; // 0x38
	float PitchMultiplier; // 0x3c
	char bFollow : 1; // 0x40
	FName AttachName; // 0x44
};

struct AAkSpotReflector : AActor {
	UAkAuxBus* EarlyReflectionAuxBus; // 0x328
	FString EarlyReflectionAuxBusName; // 0x330
	UAkAcousticTexture* AcousticTexture; // 0x340
	float DistanceScalingFactor; // 0x348
	float Level; // 0x34c
};

struct UPawnAction : UObject {
	UPawnAction* ChildAction; // 0x28
	UPawnAction* ParentAction; // 0x30
	UPawnActionsComponent* OwnerComponent; // 0x38
	UObject* Instigator; // 0x40
	UBrainComponent* BrainComp; // 0x48
	char bAllowNewSameClassInstance : 1; // 0x80
	char bReplaceActiveSameClassInstance : 1; // 0x80
	char bShouldPauseMovement : 1; // 0x80
	char bAlwaysNotifyOnFinished : 1; // 0x80
};

struct UUW-DeathUserWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* EnemySkull; // 0x250
	UImage* Image_436; // 0x258
	AActor* Pawn; // 0x260
};

struct UUW-Inventory_ProximityBoxSlot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UTextBlock* BoxName; // 0x250
	UWrapBox* WB-ItemList; // 0x258
	bool TitleVisible; // 0x260
	AActor* TargetActor; // 0x268
	UUW-InventoryWidget_C* InventoryWidget; // 0x270
	bool bUsed; // 0x278
};

struct USizeBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UUW-AttackDamageWidget_C : UBravoHotelAttackDamageWidget {
	UWidgetAnimation* FadeOut; // 0x3a0
};

struct USoundNodeOscillator : USoundNode {
	char bModulateVolume : 1; // 0x48
	char bModulatePitch : 1; // 0x48
	float AmplitudeMin; // 0x4c
	float AmplitudeMax; // 0x50
	float FrequencyMin; // 0x54
	float FrequencyMax; // 0x58
	float OffsetMin; // 0x5c
	float OffsetMax; // 0x60
	float CenterMin; // 0x64
	float CenterMax; // 0x68
};

struct UMaterialExpressionMaterialFunctionCall : UMaterialExpression {
	UMaterialFunctionInterface* MaterialFunction; // 0x40
	FMaterialParameterInfo FunctionParameterInfo; // 0x48
};

struct UUW-Inventory_FreeSupplyToolTip_C : UUserWidget {
	UImage* Image_362; // 0x248
	UImage* Image_552; // 0x250
	URichTextBlock* RichTextBlock_74; // 0x258
};

struct UMaterialExpressionFontSample : UMaterialExpression {
	UFont* Font; // 0x40
	int32_t FontTexturePage; // 0x48
};

struct UCableComponent : UMeshComponent {
	bool bAttachStart; // 0x4e0
	bool bAttachEnd; // 0x4e1
	FComponentReference AttachEndTo; // 0x4e8
	FName AttachEndToSocketName; // 0x510
	FVector EndLocation; // 0x518
	float CableLength; // 0x524
	int32_t NumSegments; // 0x528
	float SubstepTime; // 0x52c
	int32_t SolverIterations; // 0x530
	bool bEnableStiffness; // 0x534
	bool bEnableCollision; // 0x535
	float CollisionFriction; // 0x538
	FVector CableForce; // 0x53c
	float CableGravityScale; // 0x548
	float CableWidth; // 0x54c
	int32_t NumSides; // 0x550
	float TileMaterial; // 0x554
};

struct UHUDInteractionComponent : UActorComponent {
	UBravoHotelPopupManager* PopupManager; // 0xb0
	bool MoveWorldMapToPlayer; // 0xb8
	TArray<UUserWidget*> SaveIgnoredWidgets; // 0xc0
	TArray<UUserWidget*> IgnoredWidgets; // 0xe0
};

struct UReplicationGraphNode_AlwaysRelevant : UReplicationGraphNode {
	UReplicationGraphNode* ChildNode; // 0x50
};

struct UNiagaraDataInterfaceCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve Curve; // 0x58
};

struct UMovieSceneObjectPropertySection : UMovieSceneSection {
	FMovieSceneObjectPathChannel ObjectChannel; // 0xe0
};

struct UParticleModuleRotation : UParticleModuleRotationBase {
	FRawDistributionFloat StartRotation; // 0x30
};

struct UUW-Lobby_WeaponInfo_RandomOption_C : UUserWidget {
	UTextBlock* T_Desc; // 0x248
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_Buff; // 0x250
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_Buff_2; // 0x258
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_Buff_3; // 0x260
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_Buff_4; // 0x268
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_Buff_5; // 0x270
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_Buff_6; // 0x278
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_Buff_7; // 0x280
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_Buff_8; // 0x288
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_Buff_9; // 0x290
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_Buff_10; // 0x298
	UWrapBox* WrapBox_Options; // 0x2a0
};

struct UUW-MatchEnd_Animation_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Infos_ani; // 0x250
	UWidgetAnimation* SimpleResult_Events; // 0x258
	UWidgetAnimation* Lose_ani; // 0x260
	UWidgetAnimation* Win_ani; // 0x268
	UWidgetAnimation* Lose_Events; // 0x270
	UWidgetAnimation* Win_Events; // 0x278
	UTextBlock* ClassName; // 0x280
	UTextBlock* ClassWeaponName; // 0x288
	UTextBlock* HeadShot; // 0x290
	UHorizontalBox* HorizontalBox_KillerWeaponInfo; // 0x298
	UHorizontalBox* HorizontalBox_Rarity; // 0x2a0
	UImage* Icon_KillerClass; // 0x2a8
	UImage* Image_894; // 0x2b0
	UImage* Image_2002; // 0x2b8
	UTextBlock* Level; // 0x2c0
	UTextBlock* LoseMessage; // 0x2c8
	UOverlay* Overlay_DropItems; // 0x2d0
	UOverlay* Overlay_KillerInfo; // 0x2d8
	UOverlay* Overlay_WeaponLevel; // 0x2e0
	UTextBlock* T_DamageType; // 0x2e8
	UTextBlock* T_WeaponLevel; // 0x2f0
	UTextBlock* TextBlock_ItemCount; // 0x2f8
	UUniformGridPanel* Uniform_ItemList; // 0x300
	UTextBlock* UserName; // 0x308
	UUW-MatchEnd_RewardSlot_C* UW-MatchEnd_RewardSlot_C_1; // 0x310
	UUW-MatchEnd_ButtonBase_C* UW-SkipButton; // 0x318
	UTextBlock* WeaponName; // 0x320
	UWidgetSwitcher* WidgetSwitcher_DamageCauser; // 0x328
	FMatchEndAnimation AnimationData; // 0x330
	UUW-MatchEndWidget_C* MatchEndWidgetRef; // 0x338
	FMatchEndSimpleResult SimpleResult; // 0x340
	bool MatchEnd; // 0x450
};

struct UApplicationLifecycleComponent : UActorComponent {
	FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0xb0
	FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0xc0
	FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0xd0
	FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0xe0
	FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0xf0
	FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x100
	FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x110
	FMulticastInlineDelegate OnTemperatureChangeDelegate; // 0x120
	FMulticastInlineDelegate OnLowPowerModeDelegate; // 0x130
};

struct UMovieSceneParticleParameterTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UVehicleAnimInstance : UAnimInstance {
	UWheeledVehicleMovementComponent* WheeledVehicleMovementComponent; // 0x990
};

struct UDatasmithDeltaGenSceneImportData : UDatasmithFBXSceneImportData {
	bool bMergeNodes; // 0x48
	bool bOptimizeDuplicatedNodes; // 0x49
	bool bRemoveInvisibleNodes; // 0x4a
	bool bSimplifyNodeHierarchy; // 0x4b
	bool bImportVar; // 0x4c
	FString VarPath; // 0x50
	bool bImportPos; // 0x60
	FString PosPath; // 0x68
	bool bImportTml; // 0x78
	FString TmlPath; // 0x80
};

struct UCheckBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FCheckBoxStyle CheckBoxStyle; // 0x30
};

struct ABravoHotelLightPropActor : AActor {
	bool bLightOn; // 0x328
	bool bLightFlicker; // 0x329
	float LightOnIntensity; // 0x32c
	float LightOnTemperture; // 0x330
	float LightOnAttenuationRadius; // 0x334
	UMaterialInterface* LightOnMaterial; // 0x338
	UMaterialInterface* LightOffMaterial; // 0x340
	UMaterialInterface* LightFlickerFunctionMaterial; // 0x348
	USceneComponent* SceneRootComponent; // 0x350
};

struct UBravoHotelAudioListenerComponent : UAkComponent {
	UBravoHotelAudioAmbientMapData* AmbientMapData; // 0x4b8
};

struct UUW-BlackMarket_Slot_Gear_C : UUW-BlackMarket_Slot_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UButton* BTN-Menu02; // 0x3e0
	UButton* BTN-Menu03; // 0x3e8
	UButton* BTN-Menu04; // 0x3f0
	UButton* BTN-Menu05; // 0x3f8
	UButton* BTN-Menu06; // 0x400
	UCanvasPanel* CP-SlotInfo; // 0x408
	UImage* IMG-BG; // 0x410
	UImage* IMG-BG-Border; // 0x418
	UImage* IMG-Item; // 0x420
	UImage* IMG-Mask; // 0x428
	UImage* IMG-Over; // 0x430
	UImage* IMG-Over-Border; // 0x438
	UOverlay* Menu02; // 0x440
	UOverlay* Menu03; // 0x448
	UOverlay* Menu04; // 0x450
	UOverlay* Menu05; // 0x458
	UOverlay* Menu06; // 0x460
	UOverlay* Overlay_Mask; // 0x468
	UTextBlock* TXT-Armor; // 0x470
	UTextBlock* TXT-Capacity; // 0x478
	UTextBlock* TXT-DecreaseReloadTime; // 0x480
	UTextBlock* TXT-ItemName; // 0x488
	UTextBlock* TXT-Menu01; // 0x490
	UTextBlock* TXT-Menu02; // 0x498
	UTextBlock* TXT-Menu03; // 0x4a0
	UTextBlock* TXT-Menu04; // 0x4a8
	UTextBlock* TXT-Menu05; // 0x4b0
	UTextBlock* TXT-Menu06; // 0x4b8
	UTextBlock* TXT-Type; // 0x4c0
};

struct UAnimNotifyState_TimedNiagaraEffect : UAnimNotifyState {
	UNiagaraSystem* Template; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct ULowEntryBitDataEntry : UObject {
	char Type; // 0x28
	char ByteValue; // 0x29
	int32_t IntegerValue; // 0x2c
	ULowEntryLong* LongBytesValue; // 0x30
	float FloatValue; // 0x38
	ULowEntryDouble* DoubleBytesValue; // 0x40
	bool BooleanValue; // 0x48
	FString StringUtf8Value; // 0x50
	TArray<char> ByteArrayValue; // 0x60
	TArray<int32_t> IntegerArrayValue; // 0x70
	TArray<ULowEntryLong*> LongBytesArrayValue; // 0x80
	TArray<float> FloatArrayValue; // 0x90
	TArray<ULowEntryDouble*> DoubleBytesArrayValue; // 0xa0
	TArray<bool> BooleanArrayValue; // 0xb0
	TArray<FString> StringUtf8ArrayValue; // 0xc0
};

struct UDatasmithActorTemplate : UDatasmithObjectTemplate {
	TSet<FName> Layers; // 0x30
	TSet<FName> Tags; // 0x80
};

struct UMaterialExpressionSaturate : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionBumpOffset : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Height; // 0x54
	FExpressionInput HeightRatioInput; // 0x68
	float HeightRatio; // 0x7c
	float ReferencePlane; // 0x80
	uint32_t ConstCoordinate; // 0x84
};

struct UNavigationSystemConfig : UObject {
	FSoftClassPath NavigationSystemClass; // 0x28
	FNavAgentSelector SupportedAgentsMask; // 0x40
	FName DefaultAgentName; // 0x44
	char bIsOverriden : 1; // 0x4c
};

struct UARSessionConfig : UDataAsset {
	bool bGenerateMeshDataFromTrackedGeometry; // 0x30
	bool bGenerateCollisionForMeshData; // 0x31
	bool bGenerateNavMeshForMeshData; // 0x32
	bool bUseMeshDataForOcclusion; // 0x33
	bool bRenderMeshDataInWireframe; // 0x34
	bool bTrackSceneObjects; // 0x35
	bool bUsePersonSegmentationForOcclusion; // 0x36
	EARWorldAlignment WorldAlignment; // 0x37
	EARSessionType SessionType; // 0x38
	EARPlaneDetectionMode PlaneDetectionMode; // 0x39
	bool bHorizontalPlaneDetection; // 0x3a
	bool bVerticalPlaneDetection; // 0x3b
	bool bEnableAutoFocus; // 0x3c
	EARLightEstimationMode LightEstimationMode; // 0x3d
	EARFrameSyncMode FrameSyncMode; // 0x3e
	bool bEnableAutomaticCameraOverlay; // 0x3f
	bool bEnableAutomaticCameraTracking; // 0x40
	bool bResetCameraTracking; // 0x41
	bool bResetTrackedObjects; // 0x42
	TArray<UARCandidateImage*> CandidateImages; // 0x48
	int32_t MaxNumSimultaneousImagesTracked; // 0x58
	EAREnvironmentCaptureProbeType EnvironmentCaptureProbeType; // 0x5c
	TArray<char> WorldMapData; // 0x60
	TArray<UARCandidateObject*> CandidateObjects; // 0x70
	FARVideoFormat DesiredVideoFormat; // 0x80
	EARFaceTrackingDirection FaceTrackingDirection; // 0x8c
	EARFaceTrackingUpdate FaceTrackingUpdate; // 0x8d
	TArray<char> SerializedARCandidateImageDatabase; // 0x90
	EARSessionTrackingFeature EnabledSessionTrackingFeature; // 0xa0
};

struct UNiagaraDataInterfaceVolumeTexture : UNiagaraDataInterface {
	UVolumeTexture* Texture; // 0x30
};

struct UUW-CompassUnitWidget_C : UBravoHotelCompassUnitWidget {
	UInvalidationBox* InvalidationBox_1; // 0x250
	UInvalidationBox* InvalidationBox_2; // 0x258
	UTextBlock* SpecialText; // 0x260
};

struct ANativeReplayListLevel : ALevelScriptActor {
	UUserWidget* ReplayListWidget; // 0x330
	UUserWidget* ReplayListWidgetClass; // 0x338
};

struct UInterpTrackInstMove : UInterpTrackInst {
	FVector ResetLocation; // 0x28
	FRotator ResetRotation; // 0x34
};

struct UMovieSceneSignedObject : UObject {
	FGuid Signature; // 0x28
};

struct UUW_UserNameTooltip_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* BT_UserName; // 0x250
	UCanvasPanel* CP_Main; // 0x258
	UHorizontalBox* HB_ItemInfo; // 0x260
	UImage* Image_264; // 0x268
	UImage* Image_265; // 0x270
	UImage* Image_1163; // 0x278
	UImage* IMG_Frontbar; // 0x280
	UImage* IMG_Item; // 0x288
	UImage* Img_TeamColor; // 0x290
	UProgressBar* PB_HP; // 0x298
	UProgressBar* PB_ItemCasting; // 0x2a0
	UTextBlock* T_Item; // 0x2a8
	UTextBlock* T_Quantity; // 0x2b0
	UTextBlock* T_TeamNum; // 0x2b8
	UTextBlock* T_UserName; // 0x2c0
	ABravoHotelPlayerState* PlayerState; // 0x2c8
	APlayerController* ReplayController; // 0x2d0
	ABravoHotelCharacter* TargetCharacter; // 0x2d8
	FVector2D MaxViewportSize; // 0x2e0
	FVector2D LocalScreenPosition; // 0x2e8
	bool IsPositionUpdated; // 0x2f0
	float DefaultCharacterZLocation; // 0x2f4
};

struct UAkAuxBus : UAkAssetBase {
	UAkAudioBank* RequiredBank; // 0x50
};

struct UBravoHotelPlayerInfoProgressSlotWidget : UUserWidget {
	USizeBox* SizeBox_main; // 0x248
	UImage* Image_bg; // 0x250
	UProgressBar* MainProgressBar; // 0x258
	UProgressBar* CureLimitProgressBar; // 0x260
	UProgressBar* TargetProgressBar; // 0x268
	UProgressBar* BeforeProgressBar; // 0x270
	UProgressBar* ShortTimeProgressBar; // 0x278
	UWidgetAnimation* DangerHp; // 0x280
	UWidgetAnimation* Anim_Increase; // 0x288
	UWidgetAnimation* Anim_AdditionalHP; // 0x290
	UObject* DefaultSlotSprite; // 0x298
	UObject* FirstSlotSprite; // 0x2a0
	UObject* LastSlotSprite; // 0x2a8
	int32_t MaxHealth; // 0x2b0
	bool bIsKnockOutMode; // 0x2b4
};

struct USpectatorBeaconState : UObject {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	bool bRestrictCrossConsole; // 0x38
	TArray<FSpectatorReservation> Reservations; // 0x40
};

struct UBTTask_MakeNoise : UBTTaskNode {
	float Loudnes; // 0x70
};

struct UMovieSceneCameraCutSection : UMovieSceneSection {
	FGuid CameraGuid; // 0xe0
	FMovieSceneObjectBindingID CameraBindingID; // 0xf0
};

struct UUW-SearchingMaterial_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_LoopHintSpecialWeapon; // 0x250
	UButton* Button_183; // 0x258
	UButton* Button_283; // 0x260
	UCanvasPanel* CanvasPanel; // 0x268
	UCanvasPanel* CanvasPanel_2; // 0x270
	UImage* Image_2; // 0x278
	UImage* Image_3; // 0x280
	UImage* Image_4; // 0x288
	UImage* Image_185; // 0x290
	UImage* Image_186; // 0x298
	UImage* Image_189; // 0x2a0
	UImage* Image_297; // 0x2a8
	UImage* Img_Find; // 0x2b0
	UOverlay* Overlay_2; // 0x2b8
	USizeBox* SizeBox_3; // 0x2c0
	UTextBlock* T_SerchButton; // 0x2c8
	UTextBlock* TextBlock_5; // 0x2d0
	UTextBlock* TextBlock_495; // 0x2d8
	UThrobber* Throbber; // 0x2e0
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot; // 0x2e8
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_2; // 0x2f0
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_3; // 0x2f8
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_4; // 0x300
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_5; // 0x308
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_6; // 0x310
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_7; // 0x318
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_8; // 0x320
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_9; // 0x328
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_10; // 0x330
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_11; // 0x338
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot_12; // 0x340
	UVerticalBox* VerticalBox_2; // 0x348
	UVerticalBox* VerticalBox_4; // 0x350
	bool ShowButton; // 0x358
	int32_t Index; // 0x35c
	TArray<FName> TempList; // 0x360
	int32_t MaxSlotCount; // 0x370
	bool EnableShowExpertWeapon; // 0x374
};

struct UMaterialExpressionGetMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput MaterialAttributes; // 0x40
	TArray<FGuid> AttributeGetTypes; // 0x58
};

struct UPoseAsset : UAnimationAsset {
	FPoseDataContainer PoseContainer; // 0x88
	bool bAdditivePose; // 0x118
	int32_t BasePoseIndex; // 0x11c
	FName RetargetSource; // 0x120
};

struct UUW-Lobby_WeaponInfo_OptionList_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UUW-Lobby_WeaponInfo_Option_Slot_C* UW-Lobby_WeaponInfo_Option_Slot; // 0x250
	UUW-Lobby_WeaponInfo_Option_Slot_C* UW-Lobby_WeaponInfo_Option_Slot_2; // 0x258
	UUW-Lobby_WeaponInfo_Option_Slot_C* UW-Lobby_WeaponInfo_Option_Slot_3; // 0x260
	UUW-Lobby_WeaponInfo_Option_Slot_C* UW-Lobby_WeaponInfo_Option_Slot_4; // 0x268
	UVerticalBox* VerticalBox_OptionList; // 0x270
};

struct AChat_System_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	USceneComponent* DefaultSceneRoot; // 0x330
	TArray<AChat_System_C*> Muted Players; // 0x338
	bool Two-way Mute?; // 0x348
	FString Player Name; // 0x350
	TArray<AChat_System_C*> Players to Message; // 0x360
	UChat_GameInstance_C* Game Instance Blueprint; // 0x370
	TArray<FString> Joined Groups; // 0x378
	TArray<FString> Banned Groups; // 0x388
	TArray<FString> Owned Groups; // 0x398
	UChat_MainWidget_C* Chat Widget; // 0x3a8
	UHUD_Widget_C* HUD Widget; // 0x3b0
};

struct ULowEntryBitDataReader : UObject {
	TArray<char> Bytes; // 0x28
	int32_t Position; // 0x38
	char CurrentByte; // 0x3c
	int32_t CurrentBytePosition; // 0x40
};

struct UUW-ReportUserConfirm_C : UBravoHotelReportUserConfirmWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x258
	UButton* btn_Cancel; // 0x260
	UButton* btn_confirm; // 0x268
	UImage* popup-bg; // 0x270
	UTextBlock* txt_description; // 0x278
	UImage* uw-bg; // 0x280
};

struct UUW-Lobby_CharacterInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_306; // 0x250
	UCanvasPanel* CanvasPanel_Line; // 0x258
	UCanvasPanel* CanvasPanel_Position; // 0x260
	UImage* Image_Leader; // 0x268
	UImage* Image_Rank; // 0x270
	UImage* Img_Cut; // 0x278
	UImage* Img_MS; // 0x280
	UImage* Img_MS_2; // 0x288
	UImage* Img_MS_3; // 0x290
	UImage* Img_PlayerLine; // 0x298
	UImage* Img_PlayerPoint; // 0x2a0
	UImage* Img_Voice; // 0x2a8
	UImage* Img_VoiceElimination; // 0x2b0
	UOverlay* Overlay_OnReady; // 0x2b8
	UOverlay* Overlay_Position; // 0x2c0
	UOverlay* Overlay_TeamOnReady; // 0x2c8
	UTextBlock* T_PlayerName; // 0x2d0
	UTextBlock* T_PlayerName_2; // 0x2d8
	UWidgetSwitcher* WidgetSwitcher_3; // 0x2e0
	UWidgetSwitcher* WidgetSwitcher_IsTeam; // 0x2e8
	UWidgetSwitcher* WidgetSwitcher_State; // 0x2f0
	int32_t LastSeaponTierId; // 0x2f8
	float WidgetHalfSizeX; // 0x2fc
};

struct UBorder : UContentWidget {
	EHorizontalAlignment HorizontalAlignment; // 0x120
	EVerticalAlignment VerticalAlignment; // 0x121
	char bShowEffectWhenDisabled : 1; // 0x122
	FLinearColor ContentColorAndOpacity; // 0x124
	FDelegate ContentColorAndOpacityDelegate; // 0x134
	FMargin Padding; // 0x144
	FSlateBrush Background; // 0x158
	FDelegate BackgroundDelegate; // 0x1e0
	FLinearColor BrushColor; // 0x1f0
	FDelegate BrushColorDelegate; // 0x200
	FVector2D DesiredSizeScale; // 0x210
	bool bFlipForRightToLeftFlowDirection; // 0x218
	FDelegate OnMouseButtonDownEvent; // 0x21c
	FDelegate OnMouseButtonUpEvent; // 0x22c
	FDelegate OnMouseMoveEvent; // 0x23c
	FDelegate OnMouseDoubleClickEvent; // 0x24c
};

struct UParticleModuleEventGenerator : UParticleModuleEventBase {
	TArray<FParticleEvent_GenerateInfo> Events; // 0x30
};

struct UARCandidateImage : UDataAsset {
	UTexture2D* CandidateTexture; // 0x30
	FString FriendlyName; // 0x38
	float Width; // 0x48
	float Height; // 0x4c
	EARCandidateImageOrientation Orientation; // 0x50
};

struct ALight : AActor {
	ULightComponent* LightComponent; // 0x328
	char bEnabled : 1; // 0x330
};

struct UButton : UContentWidget {
	USlateWidgetStyleAsset* Style; // 0x160
	FButtonStyle WidgetStyle; // 0x168
	FLinearColor ColorAndOpacity; // 0x3e0
	FLinearColor BackgroundColor; // 0x3f0
	EButtonClickMethod ClickMethod; // 0x400
	EButtonTouchMethod TouchMethod; // 0x401
	EButtonPressMethod PressMethod; // 0x402
	bool IsFocusable; // 0x403
	FMulticastInlineDelegate OnClicked; // 0x408
	FMulticastInlineDelegate OnPressed; // 0x418
	FMulticastInlineDelegate OnReleased; // 0x428
	FMulticastInlineDelegate OnHovered; // 0x438
	FMulticastInlineDelegate OnUnhovered; // 0x448
};

struct UUW-PerkDeckWidget_C : UBravoHotelPerkDeckWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Msg_open; // 0x250
	UWidgetAnimation* POPUP_OPEN; // 0x258
	UWidgetAnimation* Idle; // 0x260
	UButton* btn_Choose; // 0x268
	UButton* btn_OK; // 0x270
	UButton* btn_OK_6; // 0x278
	UButton* btn_PerkDeck; // 0x280
	UButton* Button_CloseMovie; // 0x288
	UButton* Button_PlayMovie; // 0x290
	UButton* Button_Refresh; // 0x298
	UButton* Button_Reselect; // 0x2a0
	UButton* Button_SelectMode; // 0x2a8
	UCanvasPanel* Canvas_CantSelectMessage; // 0x2b0
	UCanvasPanel* Canvas_MovieScreen; // 0x2b8
	UCanvasPanel* CanvasPanel_ClassList; // 0x2c0
	UCanvasPanel* CanvasPanel_NewbieAdvantage; // 0x2c8
	UCheckBox* CheckBox_PerkDeckNotReOpen; // 0x2d0
	UOverlay* GoldLack; // 0x2d8
	UHorizontalBox* HorizontalBox_ClassList; // 0x2e0
	UHorizontalBox* HorizontalBox_PerkDeckReOpen; // 0x2e8
	UImage* Image_1; // 0x2f0
	UImage* Image_2; // 0x2f8
	UImage* Image_5; // 0x300
	UImage* Image_10; // 0x308
	UImage* Image_11; // 0x310
	UImage* Image_13; // 0x318
	UImage* Image_134; // 0x320
	UImage* Image_213; // 0x328
	UImage* Image_247; // 0x330
	UImage* Image_271; // 0x338
	UImage* Image_276; // 0x340
	UImage* Image_335; // 0x348
	UImage* Image_342; // 0x350
	UImage* Image_484; // 0x358
	UImage* Image_566; // 0x360
	UImage* Image_1200; // 0x368
	UImage* Image_1511; // 0x370
	UImage* Image_Class; // 0x378
	UImage* Image_ClassIcon; // 0x380
	UImage* Image_Cycle; // 0x388
	UImage* Image_Cycle_2; // 0x390
	UImage* Image_Cycle_4; // 0x398
	UImage* Image_Weapon; // 0x3a0
	UImage* Img_Movie; // 0x3a8
	UHorizontalBox* ReseletTextGroup1; // 0x3b0
	UHorizontalBox* ReseletTextGroup1_2; // 0x3b8
	UOverlay* ReseletTextGroup2; // 0x3c0
	UOverlay* ReseletTextGroup2_2; // 0x3c8
	UOverlay* ReseletTextGroup2_4; // 0x3d0
	UScaleBox* ScaleBox_ClassList; // 0x3d8
	UScaleBox* ScaleBox_SelectNotifyMessage; // 0x3e0
	USizeBox* SizeBox_Choose; // 0x3e8
	USizeBox* SizeBox_Ok; // 0x3f0
	USizeBox* SizeBox_Ok2; // 0x3f8
	USizeBox* SizeBox_Random; // 0x400
	USizeBox* SizeBox_Refrest; // 0x408
	USizeBox* SizeBox_Select; // 0x410
	UTextBlock* T_AmmoName; // 0x418
	UTextBlock* T_ClassDeckName; // 0x420
	UTextBlock* T_ClassDesc; // 0x428
	UTextBlock* T_CurrentGold; // 0x430
	UTextBlock* T_WeaponDesc; // 0x438
	UTextBlock* T_WeaponName; // 0x440
	UTextBlock* TextBlock_Close; // 0x448
	UTextBlock* TextBlock_Close_2; // 0x450
	UTextBlock* TextBlock_Close_7; // 0x458
	UTextBlock* TextBlock_MaxReset; // 0x460
	UTextBlock* TextBlock_MaxReset_2; // 0x468
	UTextBlock* TextBlock_Price_ChangeDeckList; // 0x470
	UTextBlock* TextBlock_Price_Random; // 0x478
	UTextBlock* TextBlock_Price_Select; // 0x480
	UTextBlock* TextBlock_RandomRemainCount; // 0x488
	UTextBlock* TextBlock_RefreshRemainCount; // 0x490
	UTextBlock* TextBlock_Reselect; // 0x498
	UTextBlock* TextBlock_Reselect_2; // 0x4a0
	UTextBlock* TextBlock_Reselect_4; // 0x4a8
	UUW-Inventory_Perk_C* UW-Inventory_Perk; // 0x4b0
	UUW-Timer_C* UW-Timer; // 0x4b8
	UWidgetSwitcher* WidgetSwitcher_ChangeDeck; // 0x4c0
	UWidgetSwitcher* WidgetSwitcher_ChangeDeck_2; // 0x4c8
	UWidgetSwitcher* WidgetSwitcher_Reselect; // 0x4d0
	UWidgetSwitcher* WidgetSwitcher_Reselect_2; // 0x4d8
	UWidgetSwitcher* WidgetSwitcher_Reselect_4; // 0x4e0
	UUW-InventoryWidget_C* InventoryWidget; // 0x4e8
	TArray<UUW-Inventory_PopupPerkSlot_C*> Slots; // 0x4f0
	FSlateBrush IconBrush; // 0x500
	UUW-Inventory_ItemSlotHover_C* HoverWidget; // 0x588
	FTimerHandle HoverTimerHandle; // 0x590
	int64_t LocalTemp; // 0x598
	UMediaPlayer* MediaPlayer; // 0x5a0
	TMap<int32_t, UMediaSource*> ClassVideo_Map; // 0x5a8
	bool bBlockButton; // 0x5f8
	bool bButtonEnabled; // 0x5f9
	bool bCanRemainCount; // 0x5fa
	bool bCanCurrentGold; // 0x5fb
	bool bWaitingResponse; // 0x5fc
	int64_t CurrentGold; // 0x600
	int32_t ChangeDeckCount; // 0x608
	int32_t ChangeDeckListCount; // 0x60c
	int32_t PerkDeckID; // 0x610
	int32_t DisableTime; // 0x614
	TMap<FName, UUW-PerkDeckSelectItemWidget_C*> ClassInfoWidgetMap; // 0x618
	FPerkDeckSelectInfo CurrentPerkDeckSelectInfo; // 0x668
	int32_t LocalPerkMode; // 0x680
	float ClassListPadding; // 0x684
	FTimerHandle Handle_PlayMovie; // 0x688
	UMediaSource* CurrentClassVideo; // 0x690
	FTimerHandle Handle_SetPerkInfoByHoverClassButton; // 0x698
	bool LastClassButtonHovered; // 0x6a0
	int32_t LastClassIndex; // 0x6a4
};

struct UUW-ReplayListItemWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UCanvasPanel* AdministratorPanel; // 0x250
	UVerticalBox* Cheat; // 0x258
	UImage* Image_Lock; // 0x260
	UImage* Image_Version; // 0x268
	UButton* ReplayListItemBtn_; // 0x270
	UTextBlock* TextBlock_BattleMode; // 0x278
	UTextBlock* TextBlock_Day; // 0x280
	UTextBlock* TextBlock_FileSize; // 0x288
	UTextBlock* TextBlock_FPP; // 0x290
	UTextBlock* TextBlock_MapName; // 0x298
	UTextBlock* TextBlock_Month; // 0x2a0
	UTextBlock* TextBlock_PlayerRank; // 0x2a8
	UTextBlock* TextBlock_PlayTime; // 0x2b0
	UTextBlock* TextBlock_Time; // 0x2b8
	UTextBlock* TextBlock_TotalCount; // 0x2c0
	UTextBlock* TextBlock_TotalPlayerCount; // 0x2c8
	UTextBlock* TextBlock_Year; // 0x2d0
	FMulticastInlineDelegate Click; // 0x2d8
	FMKReplayListItemInfo ReplayItemInfo; // 0x2e8
	FButtonStyle Style; // 0x410
	UBravoHotelReplayListWidget* ReplayListWidget; // 0x688
};

struct UUW-PerkLevelUp_02_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Level_Up_New; // 0x250
	UWidgetAnimation* VSkill_Motion; // 0x258
	UWidgetAnimation* FinalitySkill_Motion; // 0x260
	UWidgetAnimation* LEVEL_UP; // 0x268
	UCanvasPanel* CanvasPanel_294; // 0x270
	UTextBlock* FSkill_Info; // 0x278
	UTextBlock* FSkill_Title; // 0x280
	UHorizontalBox* HorizontalBox_290; // 0x288
	UImage* Image_1; // 0x290
	UImage* Image_2; // 0x298
	UImage* Image_4; // 0x2a0
	UImage* Image_5; // 0x2a8
	UImage* Image_6; // 0x2b0
	UImage* Image_9; // 0x2b8
	UImage* Image_10; // 0x2c0
	UImage* Image_245; // 0x2c8
	UImage* Image_247; // 0x2d0
	UImage* Image_413; // 0x2d8
	UImage* Image_458; // 0x2e0
	UImage* Image_602; // 0x2e8
	UImage* Image_UltimateGetMat; // 0x2f0
	UImage* IMG_FinalitySkill; // 0x2f8
	UImage* Img_UltimateMaterial; // 0x300
	UImage* Light; // 0x308
	UTextBlock* T_Desc; // 0x310
	UTextBlock* T_Level; // 0x318
	UTextBlock* T_PerkName; // 0x320
	UTextBlock* TextBlock_LevelUpNewText; // 0x328
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot_LevelUp; // 0x330
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot_VSkill; // 0x338
	UTextBlock* VSkill_Info; // 0x340
	UTextBlock* VSkill_Titile; // 0x348
	UImage* VSkillThumbStroke_02; // 0x350
	UWidgetSwitcher* WidgetSwitcher_LevelUpInfo; // 0x358
	FTimerHandle Handle_LevelUpEffect; // 0x360
	float EffectDelay; // 0x368
	TArray<FPerkUIInfo> PerkInfoQue; // 0x370
	FPerkUIInfo CurrentPerkInfo; // 0x380
	TArray<BP-PerkLevelUpInfoEnum> PerkLevelUpInfo; // 0x3b0
	FPerkLevelUpData PerkLevelUpData; // 0x3c0
	FPerkData CurrentPerkData; // 0x538
	int32_t CurrentLevel; // 0x618
	bool IsAlreadyUnlockedUltimate; // 0x61c
	BP-PerkLevelUpInfoEnum CurrentLevelUpInfo; // 0x61d
	TArray<int32_t> CurrentLevelQue; // 0x620
	float CurrentUltimateMaterialValue; // 0x630
	bool UltimateUpdate; // 0x634
	UMaterialInstanceDynamic* UltimateMaterialInstance; // 0x638
	float UltimateAnimTime; // 0x640
	UMaterialInstanceDynamic* UltimateGetMaterialInstance; // 0x648
};

struct UMotionControllerComponent : UPrimitiveComponent {
	int32_t PlayerIndex; // 0x4b0
	EControllerHand Hand; // 0x4b4
	FName MotionSource; // 0x4b8
	char bDisableLowLatencyUpdate : 1; // 0x4c0
	ETrackingStatus CurrentTrackingStatus; // 0x4c4
	bool bDisplayDeviceModel; // 0x4c5
	FName DisplayModelSource; // 0x4c8
	UStaticMesh* CustomDisplayMesh; // 0x4d0
	TArray<UMaterialInterface*> DisplayMeshMaterialOverrides; // 0x4d8
	UPrimitiveComponent* DisplayComponent; // 0x550
};

struct UButtonSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct ULadderComponent : UActorComponent {
	ABravoHotelCharacter* OwnerPawn; // 0xc0
	ELadderState LadderState; // 0xc8
	ABravoHotelLadder* UsingLadder; // 0xd0
	bool IsPawnOnLadder; // 0xd8
	bool IsTopStart; // 0xd9
	float LadderPos; // 0xdc
	ELadderInteractionType LadderInteractionType; // 0xe0
	UAkAudioEvent* LadderSlideLoopEvent; // 0xe8
	UAkAudioEvent* LadderSlideStopEvent; // 0xf0
	float PreMaxFlySpeed; // 0x100
	float PreBrakingDecelerationFlying; // 0x104
	float DefaultMaxFlySpeed; // 0x108
	float SpeedScaleByBuff; // 0x10c
	float WantedBrakingDecelerationFlying; // 0x110
	float SprintingSpeedScale; // 0x114
	float SlidingSpeedScale; // 0x118
	bool IsSnapping; // 0x11c
	bool IsDirectSnap; // 0x11d
	float SnappingSpeed; // 0x120
	float SnappingTime; // 0x124
	float MinSnappingTime; // 0x128
	float CrntSnappingTime; // 0x12c
	FVector OriginLocation; // 0x130
	FVector TargetLocation; // 0x13c
	FRotator OriginRotation; // 0x148
	FRotator TargetRotation; // 0x154
	bool IsMoveInMotion; // 0x160
	float AnimBlendTime; // 0x164
	UAnimMontage* AM_DownIn; // 0x168
	UAnimMontage* AM_UpIn; // 0x170
	UAnimMontage* AM_DownOut; // 0x178
	UAnimMontage* AM_DownOut_R; // 0x180
	UAnimMontage* AM_UpOut; // 0x188
	UAnimMontage* AM_UpOut_R; // 0x190
	UAnimMontage* AM_SlideOut; // 0x198
	UAnimMontage* CrntMontage; // 0x1a0
	UCurveVector* CurveVector_DownIn; // 0x1a8
	UCurveVector* CurveVector_UpIn; // 0x1b0
	UCurveVector* CurveVector_DownOut; // 0x1b8
	UCurveVector* CurveVector_DownOut_R; // 0x1c0
	UCurveVector* CurveVector_UpOut; // 0x1c8
	UCurveVector* CurveVector_UpOut_R; // 0x1d0
	UCurveVector* CurveVector_SlideOut; // 0x1d8
	UCurveVector* CrntCurveVector; // 0x1e0
	UCurveFloat* Curve_CameraIn; // 0x1e8
	UCurveFloat* Curve_CameraInHeight; // 0x1f0
	UCurveFloat* Curve_CameraSecond; // 0x1f8
	UCurveFloat* Curve_CameraSecondHeight; // 0x200
	UCurveFloat* Curve_CameraOut; // 0x208
};

struct ULogoutCallbackProxy : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UMaterialExpressionLandscapeLayerSwitch : UMaterialExpression {
	FExpressionInput LayerUsed; // 0x40
	FExpressionInput LayerNotUsed; // 0x54
	FName ParameterName; // 0x68
	char PreviewUsed : 1; // 0x70
	FGuid ExpressionGUID; // 0x74
};

struct UAITask_MoveTo : UAITask {
	FMulticastInlineDelegate OnRequestFailed; // 0x70
	FMulticastInlineDelegate OnMoveFinished; // 0x80
	FAIMoveRequest MoveRequest; // 0x90
};

struct UMaterialExpressionSkyAtmosphereLightDirection : UMaterialExpression {
	int32_t LightIndex; // 0x40
};

struct UDamageType : UObject {
	char bCausedByWorld : 1; // 0x28
	char bScaleMomentumByMass : 1; // 0x28
	char bRadialDamageVelChange : 1; // 0x28
	float DamageImpulse; // 0x2c
	float DestructibleImpulse; // 0x30
	float DestructibleDamageSpreadScale; // 0x34
	float DamageFalloff; // 0x38
};

struct ULocalPlayer : UPlayer {
	UGameViewportClient* ViewportClient; // 0x70
	EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x94
	APlayerController* PendingLevelPlayerControllerClass; // 0x98
	char bSentSplitJoin : 1; // 0xa0
	int32_t ControllerId; // 0xb8
};

struct UCurveFloat : UCurveBase {
	FRichCurve FloatCurve; // 0x30
	bool bIsEventCurve; // 0xb0
};

struct UParticleModuleParameterDynamic_Seeded : UParticleModuleParameterDynamic {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x48
};

struct USoundNodeWaveParam : USoundNode {
	FName WaveParameterName; // 0x48
};

struct UAnimSharingInstance : UObject {
	TArray<AActor*> RegisteredActors; // 0x28
	UAnimationSharingStateProcessor* StateProcessor; // 0xa8
	TArray<UAnimSequence*> UsedAnimationSequences; // 0xe8
	UEnum* StateEnum; // 0x108
	AActor* SharingActor; // 0x110
};

struct UMagicLeapPlanesComponent : USceneComponent {
	TArray<EMagicLeapPlaneQueryFlags> QueryFlags; // 0x230
	UBoxComponent* SearchVolume; // 0x240
	int32_t MaxResults; // 0x248
	float MinHolePerimeter; // 0x24c
	float MinPlaneArea; // 0x250
	EMagicLeapPlaneQueryType QueryType; // 0x254
	float SimilarityThreshold; // 0x258
	FMulticastInlineDelegate OnPlanesQueryResult; // 0x260
	FMulticastInlineDelegate OnPersistentPlanesQueryResult; // 0x270
};

struct UBravoHotelCreateCharacterWidget : UBravoHotelCoherentBaseWidget {
	UBravoHotelCustomizedCharacter* CustomizedCharacterComponent; // 0x298
};

struct UParticleModuleMeshRotationRate_Seeded : UParticleModuleMeshRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct USystemTimeTimecodeProvider : UTimecodeProvider {
	FFrameRate FrameRate; // 0x30
	bool bGenerateFullFrame; // 0x38
	bool bUseHighPerformanceClock; // 0x39
};

struct UArmoryDataAsset : UDataAsset {
	TSoftObjectPtr<UStaticMesh> StaticMesh; // 0x30
	FVector LocationOffset; // 0x58
	FRotator RotationOffset; // 0x64
	FVector ScaleOffset; // 0x70
};

struct UInvalidationBox : UContentWidget {
	bool bCanCache; // 0x120
	bool CacheRelativeTransforms; // 0x121
};

struct UWidgetInteractionComponent : USceneComponent {
	FMulticastInlineDelegate OnHoveredWidgetChanged; // 0x230
	int32_t VirtualUserIndex; // 0x250
	float PointerIndex; // 0x254
	ECollisionChannel TraceChannel; // 0x258
	float InteractionDistance; // 0x25c
	EWidgetInteractionSource InteractionSource; // 0x260
	bool bEnableHitTesting; // 0x261
	bool bShowDebug; // 0x262
	FLinearColor DebugColor; // 0x264
	FHitResult CustomHitResult; // 0x2f0
	FVector2D LocalHitLocation; // 0x378
	FVector2D LastLocalHitLocation; // 0x380
	UWidgetComponent* HoveredWidgetComponent; // 0x388
	FHitResult LastHitResult; // 0x390
	bool bIsHoveredWidgetInteractable; // 0x418
	bool bIsHoveredWidgetFocusable; // 0x419
	bool bIsHoveredWidgetHitTestVisible; // 0x41a
};

struct UMaterialShaderQualitySettings : UObject {
	TMap<FName, UShaderPlatformQualitySettings*> ForwardSettingMap; // 0x28
};

struct ABravoHotelItemSpawnSimulationBox : AActor {
	FSpawnPerkData SpawnPerkData; // 0x330
	FMulticastInlineDelegate OnEndSimulationDelegate; // 0x390
	FVector PreLocation; // 0x3a0
	int32_t CheckCount; // 0x3ac
	int32_t MaxCount; // 0x3b0
	UStaticMeshComponent* Box; // 0x3b8
};

struct UWrapBox : UPanelWidget {
	FVector2D InnerSlotPadding; // 0x120
	float WrapWidth; // 0x128
	bool bExplicitWrapWidth; // 0x12c
	EHorizontalAlignment HorizontalAlignment; // 0x12d
};

struct APrefabToolActor : AActor {
	UPrefabToolComponent* PrefabComponent; // 0x328
};

struct UStereoLayerComponent : USceneComponent {
	char bLiveTexture : 1; // 0x230
	char bSupportsDepth : 1; // 0x230
	char bNoAlphaChannel : 1; // 0x230
	UTexture* Texture; // 0x238
	UTexture* LeftTexture; // 0x240
	char bQuadPreserveTextureRatio : 1; // 0x248
	FVector2D QuadSize; // 0x24c
	FBox2D UVRect; // 0x254
	float CylinderRadius; // 0x268
	float CylinderOverlayArc; // 0x26c
	int32_t CylinderHeight; // 0x270
	FEquirectProps EquirectProps; // 0x274
	EStereoLayerType StereoLayerType; // 0x2bc
	EStereoLayerShape StereoLayerShape; // 0x2bd
	UStereoLayerShape* Shape; // 0x2c0
	int32_t Priority; // 0x2c8
};

struct UEditableGameplayTagQueryExpression_NoTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct ABravoHotelPickup : AActor {
	UBoxComponent* BoxComponent; // 0x330
	USphereComponent* SphereComponent; // 0x338
	UStaticMeshComponent* WorldStaticMesh; // 0x340
	USkeletalMeshComponent* WorldSkelMesh; // 0x348
	UBravoHotelAudioEmitterComponent* AudioComponent; // 0x358
	FInventoryItemInfo ItemInfo; // 0x360
	FInventoryItemDetailInfo DetailItemInfo; // 0x3f8
	TArray<FInventoryItemInfo> AttachmentItems; // 0x888
	bool bDrawDebugInfo; // 0x898
	TArray<UObject*> LoadedAssets; // 0x8a0
	bool bLoadMesh; // 0x8b9
	bool bPlaceOnTheGround; // 0x8ba
	FMulticastInlineDelegate OnChangeItemInfoDelegate; // 0x8c0
	bool IsSpawnBook; // 0x8d0
	UParticleSystemComponent* BookSpawnEffectComponent; // 0x8d8
	UParticleSystem* BookSpawnEffect; // 0x8e0
	UParticleSystemComponent* RootParticleComponent; // 0x8e8
	UParticleSystemComponent* MeshParticleComponent; // 0x8f0
	TArray<UParticleSystemComponent*> PassiveChildParticleComponents; // 0x8f8
	TArray<UParticleSystemComponent*> ActiveChildParticleComponents; // 0x908
	UParticleSystem* RootParticle; // 0x920
};

struct UNodeMappingContainer : UObject {
	TMap<FName, FNodeItem> SourceItems; // 0x28
	TMap<FName, FNodeItem> TargetItems; // 0x78
	TMap<FName, FName> SourceToTarget; // 0xc8
	TSoftObjectPtr<UObject> SourceAsset; // 0x118
	TSoftObjectPtr<UObject> TargetAsset; // 0x140
};

struct AEmitterCameraLensEffectBase : AEmitter {
	UParticleSystem* PS_CameraEffect; // 0x378
	UParticleSystem* PS_CameraEffectNonExtremeContent; // 0x380
	APlayerCameraManager* BaseCamera; // 0x388
	FTransform RelativeTransform; // 0x390
	float BaseFOV; // 0x3c0
	char bAllowMultipleInstances : 1; // 0x3c4
	char bResetWhenRetriggered : 1; // 0x3c4
	TArray<AEmitterCameraLensEffectBase*> EmittersToTreatAsSame; // 0x3c8
	float DistFromCamera; // 0x3d8
};

struct UUW-Inventory_CharacterDragPanel_C : UUserWidget {
	UImage* Image_91; // 0x248
	ABravoHotelInventoryCharacter* InventoryCharacterRef; // 0x250
	bool Visible; // 0x258
};

struct ABravoHotelBootyBoxActor : ABravoHotelDropBoxActor {
	UParticleSystem* RarityParticle; // 0x3a8
	UParticleSystemComponent* RarityParticleComponent; // 0x3b0
	EItemRarity HighestRarityOfCurrentItems; // 0x3b8
	FTimerHandle TimerHandle_Deactivate; // 0x3c8
};

struct UAkTVOSInitializationSettings : UObject {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkAudioSession AudioSession; // 0x90
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0xa0
	FAkAdvancedInitializationSettings AdvancedSettings; // 0xc8
};

struct UCurveVector : UCurveBase {
	FRichCurve FloatCurves[0x3]; // 0x30
};

struct AStandInMeshActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x328
};

struct ALine_WidgetActor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	UWidgetComponent* Widget1; // 0x330
	USceneComponent* DefaultSceneRoot; // 0x338
};

struct UEditableGameplayTagQueryExpression_NoExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UAkSettings : UObject {
	char MaxSimultaneousReverbVolumes; // 0x28
	FFilePath WwiseProjectPath; // 0x30
	FDirectoryPath WwiseSoundDataFolder; // 0x40
	bool bAutoConnectToWAAPI; // 0x50
	ECollisionChannel DefaultOcclusionCollisionChannel; // 0x51
	TMap<TSoftObjectPtr<UPhysicalMaterial>, FAkGeometrySurfacePropertiesToMap> AkGeometryMap; // 0x58
	bool SplitSwitchContainerMedia; // 0xa8
	bool SplitMediaPerFolder; // 0xa9
	bool UseEventBasedPackaging; // 0xaa
	bool EnableAutomaticAssetSynchronization; // 0xab
	TSoftClassPtr<UObject> ComponentClass; // 0xb0
	FString CommandletCommitMessage; // 0xd8
	TMap<FString, FString> UnrealCultureToWwiseCulture; // 0xe8
	bool AskedToUseNewAssetManagement; // 0x138
	bool bEnableMultiCoreRendering; // 0x139
	bool MigratedEnableMultiCoreRendering; // 0x13a
	bool FixupRedirectorsDuringMigration; // 0x13b
	FDirectoryPath WwiseWindowsInstallationPath; // 0x140
	FFilePath WwiseMacInstallationPath; // 0x150
};

struct UArrowBtn_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_68; // 0x250
	UImage* Normal; // 0x258
	UImage* Over; // 0x260
	UOverlay* Overlay_113; // 0x268
	UImage* Press; // 0x270
	FMulticastInlineDelegate CilckBtn; // 0x278
	bool IsLeft; // 0x288
};

struct UDistributionFloat : UDistribution {
	char bCanBeBaked : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UMoviePlayerSettings : UObject {
	bool bWaitForMoviesToComplete; // 0x28
	bool bMoviesAreSkippable; // 0x29
	TArray<FString> StartupMovies; // 0x30
};

struct UMaterialExpressionFunctionInput : UMaterialExpression {
	FExpressionInput Preview; // 0x40
	FName InputName; // 0x54
	FString Description; // 0x60
	FGuid ID; // 0x70
	EFunctionInputType InputType; // 0x80
	FVector4 PreviewValue; // 0x90
	char bUsePreviewValueAsDefault : 1; // 0xa0
	int32_t SortPriority; // 0xa4
	char bCompilingFunctionPreview : 1; // 0xa8
};

struct UParticleModuleCollisionGPU : UParticleModuleCollisionBase {
	FRawDistributionFloat Resilience; // 0x30
	FRawDistributionFloat ResilienceScaleOverLife; // 0x60
	float Friction; // 0x90
	float RandomSpread; // 0x94
	float RandomDistribution; // 0x98
	float RadiusScale; // 0x9c
	float RadiusBias; // 0xa0
	EParticleCollisionResponse Response; // 0xa4
	EParticleCollisionMode CollisionMode; // 0xa5
};

struct UCameraComponent : USceneComponent {
	float FieldOfView; // 0x230
	float OrthoWidth; // 0x234
	float OrthoNearClipPlane; // 0x238
	float OrthoFarClipPlane; // 0x23c
	float AspectRatio; // 0x240
	char bConstrainAspectRatio : 1; // 0x244
	char bUseFieldOfViewForLOD : 1; // 0x244
	char bLockToHmd : 1; // 0x24c
	char bUsePawnControlRotation : 1; // 0x24c
	ECameraProjectionMode ProjectionMode; // 0x24d
	float PostProcessBlendWeight; // 0x280
	FPostProcessSettings PostProcessSettings; // 0x2b0
};

struct UNiagaraDataInterfaceCurlNoise : UNiagaraDataInterface {
	uint32_t Seed; // 0x30
};

struct UBravoHotelAbilityComponent : UActorComponent {
	TMap<ECharacterConditionType, FBravoHotelConditionState> ConditionStates; // 0xc0
	TMap<uint16_t, UBuffControlState*> BuffControls; // 0x120
	float LoudnessProneRatio; // 0x170
	float LoudnessTime; // 0x174
	UCurveFloat* MaterialEffectCurve; // 0x178
	TMap<int32_t, FBravoHotelBuffUIInfo> BuffUIInfos; // 0x188
	UBravoHotelDebugWidget* WeaponDebugTextWidget; // 0x280
	float LoudnessCrouchRatio; // 0x288
	FBravoHotelDefaultBalanceData DefaultBalanceData; // 0x290
	TMap<uint16_t, UBravoHotelBuffBase*> CurrentBuffInfos; // 0x308
	TMap<UObject*, FMaterialEffectInfo> MaterialEffectInfos; // 0x358
	AActor* DefaultFireCell; // 0x3a8
	FBuffHandleArray CurrentBuffKeys; // 0x3b0
	TMap<EBuffEventType, FMulticastInlineDelegate> BuffEndEventDelegates; // 0x4c8
	TMap<ECharacterAbilityType, FBravoHotelAbilityState> AbilityStates; // 0x568
	TMap<ECharacterBuffType, FName> CharacterBuffDataKeys; // 0x5b8
	uint64_t ConditionFlags; // 0x610
	TMap<EWeaponBuffEventType, FMulticastInlineDelegate> WeaponBuffEventDelegates; // 0x618
	UUserWidget* DebugWidget; // 0x668
	FBuffHandleArray ControlledInstantBuffKeys; // 0x670
	float Loudness; // 0x788
	float SimulatedTickTime; // 0x78c
	TMap<ECharacterConditionedAbilityType, FBravoHotelConditionedAbilityState> ConditionedAbilityStates; // 0x7d8
	UCurveFloat* MaterialEffectStrCurve; // 0x830
	UUserWidget* DebugWidgetClass; // 0x840
	TArray<UBravoHotelBuffBase*> StackBuffInfos; // 0x848
	TMap<EBuffEventType, FMulticastInlineDelegate> BuffEventDelegates; // 0x898
};

struct ABravoHotelBlueZone : AActor {
	UStaticMeshComponent* BlueZoneMesh; // 0x328
	UBravoHotelPainCausingComponent* PainCausingComponent; // 0x330
	APawn* TransportPawnClass; // 0x338
	int32_t CurrentPhase; // 0x340
	FVector OriginSurvivalCirclePos; // 0x344
	float OriginSurvivalCircleRadius; // 0x350
	FVector TargetSurvivalCirclePos; // 0x354
	float TargetSurvivalCircleRadius; // 0x360
	float TimeToStartShrinking; // 0x364
	float TimeToEndShrinking; // 0x368
	EBluseZoneState eState; // 0x36c
	bool IsVisibleTargetCircle; // 0x36d
	bool IsVisibleBlueZone; // 0x36e
	FVector CurrentSurvivalCirclePos; // 0x380
	float CurrentSurvivalCircleRadius; // 0x38c
	FMulticastInlineDelegate OnBlueZoneStateChanged; // 0x390
	FMulticastInlineDelegate OnSurvivalCirclePhaseChanged; // 0x3a0
	FMulticastInlineDelegate OnBlueZoneEnd; // 0x3b0
	float DefaultRadiusRate; // 0x3c0
	FBravoHotelGameData GameData; // 0x3c8
	bool SetVisibleBlueZone; // 0x6f0
	UBravoHotelWeightMapData* WeightMapInfo; // 0x708
	TArray<ABravoHotelCharacter*> InBlueZoneCharacters; // 0x748
	TArray<ABravoHotelCharacter*> OutBlueZoneCharacters; // 0x758
	FVector2D OuterCirclePos; // 0x7b8
	FName SelectedPlayZoneName; // 0x7c0
	int32_t SelectedPlayZoneInfoIndex; // 0x7c8
	TArray<FBattleRoyalPhaseInfo> ClientPlayZonePhaseList; // 0x7d0
};

struct UUserDefinedEnum : UEnum {
	TMap<FName, FText> DisplayNameMap; // 0x60
};

struct ABP-MK3DSpectatorPawn_C : ABravoHotelMK3DSpectatorPawn {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UCameraComponent* FreeCam; // 0x3e0
	USpringArmComponent* SpringArm; // 0x3e8
	UUW-ReplayMainWidget_C* ReplayMainWidget; // 0x3f0
	EReplayViewMode ViewMode; // 0x3f8
};

struct UBTTask_PlayAnimation : UBTTaskNode {
	UAnimationAsset* AnimationToPlay; // 0x70
	char bLooping : 1; // 0x78
	char bNonBlocking : 1; // 0x78
	UBehaviorTreeComponent* MyOwnerComp; // 0x80
	USkeletalMeshComponent* CachedSkelMesh; // 0x88
};

struct UUW-ItemRecipeTreePopup_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Hide; // 0x250
	UWidgetAnimation* Show; // 0x258
	UImage* Bg; // 0x260
	UButton* Button_OK; // 0x268
	UImage* Image_168; // 0x270
	UImage* Image_669; // 0x278
	UTextBlock* Message; // 0x280
	UTextBlock* TextBlock_Title; // 0x288
	UUW-ItemRecipeTree_C* UW-ItemRecipeTree; // 0x290
	FTimerHandle Timer; // 0x298
};

struct USoundNodeRandom : USoundNode {
	TArray<float> Weights; // 0x48
	TArray<bool> HasBeenUsed; // 0x58
	int32_t NumRandomUsed; // 0x68
	int32_t PreselectAtLevelLoad; // 0x6c
	char bShouldExcludeFromBranchCulling : 1; // 0x70
	char bSoundCueExcludedFromBranchCulling : 1; // 0x70
	char bRandomizeWithoutReplacement : 1; // 0x70
};

struct UDataTable : UObject {
	UScriptStruct* RowStruct; // 0x28
	char bStripFromClientBuilds : 1; // 0x80
	char bIgnoreExtraFields : 1; // 0x80
	char bIgnoreMissingFields : 1; // 0x80
	FString ImportKeyField; // 0x88
};

struct UCineCameraComponent : UCameraComponent {
	FCameraFilmbackSettings FilmbackSettings; // 0x870
	FCameraFilmbackSettings Filmback; // 0x87c
	FCameraLensSettings LensSettings; // 0x888
	FCameraFocusSettings FocusSettings; // 0x8a0
	float CurrentFocalLength; // 0x8f8
	float CurrentAperture; // 0x8fc
	float CurrentFocusDistance; // 0x900
	TArray<FNamedFilmbackPreset> FilmbackPresets; // 0x910
	TArray<FNamedLensPreset> LensPresets; // 0x920
	FString DefaultFilmbackPresetName; // 0x930
	FString DefaultFilmbackPreset; // 0x940
	FString DefaultLensPresetName; // 0x950
	float DefaultLensFocalLength; // 0x960
	float DefaultLensFStop; // 0x964
};

struct UWeaponAttachmentComponent : UActorComponent {
	ABravoHotelRangedWeapon* OwningWeapon; // 0xb0
	UAsyncStaticMeshComponent* FrontSight; // 0xb8
	UAsyncStaticMeshComponent* Rail; // 0xc0
	UAsyncStaticMeshComponent* grip; // 0xc8
	UAsyncStaticMeshComponent* magazine; // 0xd0
	UAsyncStaticMeshComponent* ButtStock; // 0xd8
	UAsyncStaticMeshComponent* Tactical; // 0xe0
	UAsyncSkeletalMeshComponent* muzzledevice; // 0xe8
	UAsyncSkeletalMeshComponent* Barrel; // 0xf0
	bool bIsInitialized; // 0x258
	EWeaponAttachmentGrip GripType; // 0x259
	EWeaponAttachmentItem MagazineType; // 0x25a
	EWeaponAttachmentItem StockType; // 0x25b
	EWeaponAttachmentItem MuzzleType; // 0x25c
	EWeaponAttachmentItem BarrelType; // 0x25d
	TMap<EWeaponAttachmentItem, ABravoHotelSightAttachment*> FPSK_SightAttachmentList; // 0x2a0
	TMap<EWeaponAttachmentItem, ABravoHotelSightAttachment*> FPSK_SightClassList; // 0x2f0
};

struct UNiagaraDataInterfaceParticleRead : UNiagaraDataInterface {
	FString EmitterName; // 0x30
};

struct UBravoHotelWebSocket : UObject {
	UGameInstance* ParentGameInstance; // 0x28
};

struct UUW-ReplayEventMarker_Knockout_C : UUW-ReplayEventMarkerBasic_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a0
	UBorder* VisualBorder; // 0x2a8
};

struct USimplygonColorCaster : USimplygonMaterialCaster {
	FColorCasterSettings ColorCasterSettings; // 0x28
};

struct UWeaponReplicatedComponent : UEquippableComponent {
	TArray<uint16_t> AttachmentIndices; // 0x170
};

struct UBravoHotelShellCasingArrowComponent : UClientArrowComponent {
	ABravoHotelShellCasing* ShellCasingClass; // 0x4c0
	float SpawnPowerMin; // 0x4c8
	float SpawnPowerMax; // 0x4cc
	float EjectAngleMin; // 0x4d0
	float EjectAngleMax; // 0x4d4
	float SpinAngleMin; // 0x4d8
	float SpinAngleMax; // 0x4dc
	bool bSpawnLastShotOnly; // 0x4e0
};

struct USubmixEffectReverbFastPreset : USoundEffectSubmixPreset {
	FSubmixEffectReverbFastSettings Settings; // 0xa0
};

struct UAkEventCallbackInfo : UAkCallbackInfo {
	int32_t PlayingID; // 0x30
	int32_t EventID; // 0x34
};

struct UUW-BlackMarket_Slot_Attachment_C : UUW-BlackMarket_Slot_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UButton* BTN-Menu02; // 0x3e0
	UButton* BTN-Menu03; // 0x3e8
	UButton* BTN-Menu04; // 0x3f0
	UButton* BTN-Menu05; // 0x3f8
	UButton* BTN-Menu06; // 0x400
	UButton* BTN-Menu07; // 0x408
	UButton* BTN-Menu08; // 0x410
	UButton* BTN-Menu09; // 0x418
	UCanvasPanel* CP-SlotInfo; // 0x420
	UImage* IMG-BG; // 0x428
	UImage* IMG-BG-Border; // 0x430
	UImage* IMG-Item; // 0x438
	UImage* IMG-Mask; // 0x440
	UImage* IMG-Over; // 0x448
	UImage* IMG-Over-Border; // 0x450
	UOverlay* Menu02; // 0x458
	UOverlay* Menu03; // 0x460
	UOverlay* Menu04; // 0x468
	UOverlay* Menu05; // 0x470
	UOverlay* Menu06; // 0x478
	UOverlay* Menu07; // 0x480
	UOverlay* Menu08; // 0x488
	UOverlay* Menu09; // 0x490
	UOverlay* Overlay_Mask; // 0x498
	UTextBlock* TXT-ContinuousSpeed; // 0x4a0
	UTextBlock* TXT-Horizental; // 0x4a8
	UTextBlock* TXT-ItemName; // 0x4b0
	UTextBlock* TXT-Menu01; // 0x4b8
	UTextBlock* TXT-Menu02; // 0x4c0
	UTextBlock* TXT-Menu03; // 0x4c8
	UTextBlock* TXT-Menu04; // 0x4d0
	UTextBlock* TXT-Menu05; // 0x4d8
	UTextBlock* TXT-Menu06; // 0x4e0
	UTextBlock* TXT-Menu07; // 0x4e8
	UTextBlock* TXT-Menu08; // 0x4f0
	UTextBlock* TXT-Menu09; // 0x4f8
	UTextBlock* TXT-MovingSpeed; // 0x500
	UTextBlock* TXT-Reload; // 0x508
	UTextBlock* TXT-Type; // 0x510
	UTextBlock* TXT-Vertical; // 0x518
	UTextBlock* TXT-Weight; // 0x520
};

struct UUW-VoiceTalkSlot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_1; // 0x250
	UImage* death; // 0x258
	UImage* Image_168; // 0x260
	UImage* Image_216; // 0x268
	UImage* Image_506; // 0x270
	UImage* Image_623; // 0x278
	UImage* Img_LogOut; // 0x280
	UImage* Img_Voice; // 0x288
	UImage* Img_Voice_2; // 0x290
	UOverlay* Overlay_Death; // 0x298
	USlider* Slider_139; // 0x2a0
	UTextBlock* T_PlayerIndex; // 0x2a8
	UTextBlock* T_PlayerName; // 0x2b0
	UTextBlock* TextBlock_209; // 0x2b8
	UVerticalBox* VerticalBox_1; // 0x2c0
	UWidgetSwitcher* WidgetSwitcher; // 0x2c8
	FMulticastInlineDelegate EventDispatcher_ChangeVolumeState; // 0x2d0
	FVoiceTalkState CurVoiceTalkState; // 0x2e0
	UPaperSprite* PingImage; // 0x300
};

struct UExpandableArea : UWidget {
	FExpandableAreaStyle Style; // 0x110
	FSlateBrush BorderBrush; // 0x230
	FSlateColor BorderColor; // 0x2b8
	bool bIsExpanded; // 0x2e0
	float MaxHeight; // 0x2e4
	FMargin HeaderPadding; // 0x2e8
	FMargin AreaPadding; // 0x2f8
	FMulticastInlineDelegate OnExpansionChanged; // 0x308
	UWidget* HeaderContent; // 0x318
	UWidget* BodyContent; // 0x320
};

struct UParticleModuleAttractorLine : UParticleModuleAttractorBase {
	FVector EndPoint0; // 0x30
	FVector EndPoint1; // 0x3c
	FRawDistributionFloat Range; // 0x48
	FRawDistributionFloat Strength; // 0x78
};

struct ABP-VehicleWaterPlane_C : AActor {
	UBoxComponent* Box; // 0x328
};

struct ULightComponent : ULightComponentBase {
	float Temperature; // 0x268
	float MaxDrawDistance; // 0x26c
	float MaxDistanceFadeRange; // 0x270
	char bUseTemperature : 1; // 0x274
	int32_t ShadowMapChannel; // 0x278
	float MinRoughness; // 0x280
	float SpecularScale; // 0x284
	float ShadowResolutionScale; // 0x288
	float ShadowBias; // 0x28c
	float ShadowSlopeBias; // 0x290
	float ShadowSharpen; // 0x294
	float ContactShadowLength; // 0x298
	char ContactShadowLengthInWS : 1; // 0x29c
	float ContactShadowStartDistance; // 0x2a0
	float ContactShadowFadeDistance; // 0x2a4
	float ShadowStrength; // 0x2a8
	float TranslucentShadowDensity; // 0x2ac
	char InverseSquaredFalloff : 1; // 0x2b0
	char CastTranslucentShadows : 1; // 0x2b0
	char bCastShadowsFromCinematicObjectsOnly : 1; // 0x2b0
	char bAffectDynamicIndirectLighting : 1; // 0x2b0
	char bForceCachedShadowsFromMovablePrimitivesAsStatic : 1; // 0x2b0
	char bForceCachedShadowsForMovablePrimitives : 1; // 0x2b0
	FLightingChannels LightingChannels; // 0x2b4
	UMaterialInterface* LightFunctionMaterial; // 0x2b8
	FVector LightFunctionScale; // 0x2c0
	UTextureLightProfile* IESTexture; // 0x2d0
	char bUseIESBrightness : 1; // 0x2d8
	float IESBrightnessScale; // 0x2dc
	float LightFunctionFadeDistance; // 0x2e0
	float DisabledBrightness; // 0x2e4
	char bEnableLightShaftBloom : 1; // 0x2e8
	float BloomScale; // 0x2ec
	float BloomThreshold; // 0x2f0
	float BloomMaxBrightness; // 0x2f4
	FColor BloomTint; // 0x2f8
	bool bUseFoliageLighting; // 0x2fc
	bool bUseRayTracedDistanceFieldShadows; // 0x2fd
	float RayStartOffsetDepthScale; // 0x300
};

struct UEnvQueryTest : UEnvQueryNode {
	int32_t TestOrder; // 0x30
	EEnvTestPurpose TestPurpose; // 0x34
	FString TestComment; // 0x38
	EEnvTestFilterOperator MultipleContextFilterOp; // 0x48
	EEnvTestScoreOperator MultipleContextScoreOp; // 0x49
	EEnvTestFilterType FilterType; // 0x4a
	FAIDataProviderBoolValue BoolValue; // 0x50
	FAIDataProviderFloatValue FloatValueMin; // 0x88
	FAIDataProviderFloatValue FloatValueMax; // 0xc0
	EEnvTestScoreEquation ScoringEquation; // 0xf9
	EEnvQueryTestClamping ClampMinType; // 0xfa
	EEnvQueryTestClamping ClampMaxType; // 0xfb
	EEQSNormalizationType NormalizationType; // 0xfc
	FAIDataProviderFloatValue ScoreClampMin; // 0x100
	FAIDataProviderFloatValue ScoreClampMax; // 0x138
	FAIDataProviderFloatValue ScoringFactor; // 0x170
	FAIDataProviderFloatValue ReferenceValue; // 0x1a8
	bool bDefineReferenceValue; // 0x1e0
	char bWorkOnFloatValues : 1; // 0x1f0
};

struct UWB_ClassicComboBoxItem_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UTextBlock* TextComboBoxItem; // 0x250
	UWB_ClassicComboBoxButton_C* WB_ClassicComboBoxButton; // 0x258
	FString ItemOption; // 0x260
	FSVideoResolution Resolution; // 0x270
};

struct UABP-DefaultMan_Native_C : UBravoHotelAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0xc70
	FAnimNode_Root AnimGraphNode_Root; // 0xc78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_119; // 0xca8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_118; // 0xcd0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_117; // 0xcf8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_116; // 0xd20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_115; // 0xd48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_114; // 0xd70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_113; // 0xd98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_112; // 0xdc0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_111; // 0xde8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_110; // 0xe10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_109; // 0xe38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_108; // 0xe60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_107; // 0xe88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_106; // 0xeb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_105; // 0xed8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_104; // 0xf00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_103; // 0xf28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_102; // 0xf50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_101; // 0xf78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_100; // 0xfa0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_99; // 0xfc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_98; // 0xff0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_97; // 0x1018
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_96; // 0x1040
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_95; // 0x1068
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_94; // 0x1090
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_93; // 0x10b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_92; // 0x10e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_91; // 0x1108
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_90; // 0x1130
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_89; // 0x1158
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_88; // 0x1180
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_87; // 0x11a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_86; // 0x11d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_85; // 0x11f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_84; // 0x1220
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_83; // 0x1248
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_82; // 0x1270
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_345; // 0x1298
	FAnimNode_StateResult AnimGraphNode_StateResult_61; // 0x1310
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_81; // 0x1340
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_344; // 0x1368
	FAnimNode_StateResult AnimGraphNode_StateResult_60; // 0x13e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_343; // 0x1410
	FAnimNode_StateResult AnimGraphNode_StateResult_59; // 0x1488
	FAnimNode_StateMachine AnimGraphNode_StateMachine_19; // 0x14b8
	FAnimNode_StateResult AnimGraphNode_StateResult_58; // 0x1568
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_80; // 0x1598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_79; // 0x15c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_78; // 0x15e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_77; // 0x1610
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_342; // 0x1638
	FAnimNode_StateResult AnimGraphNode_StateResult_57; // 0x16b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_116; // 0x16e0
	FAnimNode_StateResult AnimGraphNode_StateResult_56; // 0x17c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_341; // 0x17f0
	FAnimNode_StateResult AnimGraphNode_StateResult_55; // 0x1868
	FAnimNode_StateMachine AnimGraphNode_StateMachine_18; // 0x1898
	FAnimNode_StateResult AnimGraphNode_StateResult_54; // 0x1948
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_76; // 0x1978
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_75; // 0x19a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_340; // 0x19c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_83; // 0x1a40
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_69; // 0x1ae0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_115; // 0x1b90
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_114; // 0x1c70
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_97; // 0x1d50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_339; // 0x1e10
	FAnimNode_StateResult AnimGraphNode_StateResult_53; // 0x1e88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_338; // 0x1eb8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_82; // 0x1f30
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_68; // 0x1fd0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_113; // 0x2080
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_112; // 0x2160
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_96; // 0x2240
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_337; // 0x2300
	FAnimNode_StateResult AnimGraphNode_StateResult_52; // 0x2378
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_336; // 0x23a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_81; // 0x2420
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_67; // 0x24c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_111; // 0x2570
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_110; // 0x2650
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_95; // 0x2730
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_335; // 0x27f0
	FAnimNode_StateResult AnimGraphNode_StateResult_51; // 0x2868
	FAnimNode_StateMachine AnimGraphNode_StateMachine_17; // 0x2898
	FAnimNode_StateResult AnimGraphNode_StateResult_50; // 0x2948
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_74; // 0x2978
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_73; // 0x29a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_72; // 0x29c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_71; // 0x29f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_70; // 0x2a18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_69; // 0x2a40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_68; // 0x2a68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_67; // 0x2a90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_66; // 0x2ab8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_80; // 0x2ae0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_334; // 0x2b80
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_79; // 0x2bf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_333; // 0x2c98
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_94; // 0x2d10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_332; // 0x2dd0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_66; // 0x2e48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_331; // 0x2ef8
	FAnimNode_StateResult AnimGraphNode_StateResult_49; // 0x2f70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_78; // 0x2fa0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_330; // 0x3040
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_329; // 0x30b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_93; // 0x3130
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_77; // 0x31f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_76; // 0x3290
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_328; // 0x3330
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_327; // 0x33a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_326; // 0x3420
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_65; // 0x3498
	FAnimNode_StateResult AnimGraphNode_StateResult_48; // 0x3548
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_109; // 0x3578
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_65; // 0x3658
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_64; // 0x3680
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0x36a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0x36d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0x36f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x3720
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_325; // 0x3748
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_24; // 0x37c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_324; // 0x3888
	FAnimNode_StateResult AnimGraphNode_StateResult_47; // 0x3900
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_23; // 0x3930
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_323; // 0x39f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_322; // 0x3a70
	FAnimNode_StateResult AnimGraphNode_StateResult_46; // 0x3ae8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_321; // 0x3b18
	FAnimNode_StateResult AnimGraphNode_StateResult_45; // 0x3b90
	FAnimNode_StateMachine AnimGraphNode_StateMachine_16; // 0x3bc0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_75; // 0x3c70
	FAnimNode_StateResult AnimGraphNode_StateResult_44; // 0x3d10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_320; // 0x3d40
	FAnimNode_StateResult AnimGraphNode_StateResult_43; // 0x3db8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_15; // 0x3de8
	FAnimNode_StateResult AnimGraphNode_StateResult_42; // 0x3e98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_319; // 0x3ec8
	FAnimNode_StateResult AnimGraphNode_StateResult_41; // 0x3f40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_318; // 0x3f70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_74; // 0x3fe8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_108; // 0x4088
	FAnimNode_StateResult AnimGraphNode_StateResult_40; // 0x4168
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x4198
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_17; // 0x41c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_107; // 0x4288
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_106; // 0x4368
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_73; // 0x4448
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_105; // 0x44e8
	FAnimNode_StateResult AnimGraphNode_StateResult_39; // 0x45c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x45f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x4620
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x4648
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x4670
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_104; // 0x4698
	FAnimNode_StateResult AnimGraphNode_StateResult_38; // 0x4778
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_103; // 0x47a8
	FAnimNode_StateResult AnimGraphNode_StateResult_37; // 0x4888
	FAnimNode_StateMachine AnimGraphNode_StateMachine_14; // 0x48b8
	FAnimNode_StateResult AnimGraphNode_StateResult_36; // 0x4968
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x4998
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0x49c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_317; // 0x49e8
	FAnimNode_StateResult AnimGraphNode_StateResult_35; // 0x4a60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_316; // 0x4a90
	FAnimNode_StateResult AnimGraphNode_StateResult_34; // 0x4b08
	FAnimNode_StateMachine AnimGraphNode_StateMachine_13; // 0x4b38
	FAnimNode_StateResult AnimGraphNode_StateResult_33; // 0x4be8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_12; // 0x4c18
	FAnimNode_StateResult AnimGraphNode_StateResult_32; // 0x4cc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_315; // 0x4cf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_314; // 0x4d70
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_92; // 0x4de8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_313; // 0x4ea8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_312; // 0x4f20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_311; // 0x4f98
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_64; // 0x5010
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_310; // 0x50c0
	FAnimNode_StateResult AnimGraphNode_StateResult_31; // 0x5138
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_309; // 0x5168
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_91; // 0x51e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_308; // 0x52a0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_90; // 0x5318
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_307; // 0x53d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_306; // 0x5450
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_305; // 0x54c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_89; // 0x5540
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_6; // 0x5600
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_304; // 0x5648
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_303; // 0x56c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_302; // 0x5738
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_301; // 0x57b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_63; // 0x5828
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_300; // 0x58d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_299; // 0x5950
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_298; // 0x59c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_72; // 0x5a40
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_5; // 0x5ae0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_71; // 0x5b28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_297; // 0x5bc8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_88; // 0x5c40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_296; // 0x5d00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_295; // 0x5d78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_294; // 0x5df0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_293; // 0x5e68
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_87; // 0x5ee0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_70; // 0x5fa0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_4; // 0x6040
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_3; // 0x6088
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_2; // 0x60d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_62; // 0x6118
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_292; // 0x61c8
	FAnimNode_Slot AnimGraphNode_Slot_35; // 0x6240
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_291; // 0x6288
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_86; // 0x6300
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_69; // 0x63c0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_61; // 0x6460
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_290; // 0x6510
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_68; // 0x6588
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_102; // 0x6628
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_16; // 0x6708
	FAnimNode_StateResult AnimGraphNode_StateResult_30; // 0x67d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0x6800
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_60; // 0x6828
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_59; // 0x68d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_60; // 0x6988
	FAnimNode_RefPose AnimGraphNode_LocalRefPose; // 0x69b0
	FAnimNode_Slot AnimGraphNode_Slot_34; // 0x69c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_85; // 0x6a10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_289; // 0x6ad0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_67; // 0x6b48
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_22; // 0x6be8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_288; // 0x6cb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_287; // 0x6d28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_286; // 0x6da0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_84; // 0x6e18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_285; // 0x6ed8
	FAnimNode_StateResult AnimGraphNode_StateResult_29; // 0x6f50
	FAnimNode_StateMachine AnimGraphNode_StateMachine_11; // 0x6f80
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_26; // 0x7030
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_83; // 0x70e8
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_9; // 0x71a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_66; // 0x7330
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_8; // 0x73d0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7; // 0x7558
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7; // 0x7578
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0x7598
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_7; // 0x76a0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_58; // 0x7828
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_65; // 0x78d8
	FAnimNode_Slot AnimGraphNode_Slot_33; // 0x7978
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_64; // 0x79c0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_25; // 0x7a60
	FAnimNode_Slot AnimGraphNode_Slot_32; // 0x7b18
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_24; // 0x7b60
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_23; // 0x7c18
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_59; // 0x7cd0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_58; // 0x7cf8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_57; // 0x7d20
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_56; // 0x7d48
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_82; // 0x7d70
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_55; // 0x7e30
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_63; // 0x7e58
	FAnimNode_Slot AnimGraphNode_Slot_31; // 0x7ef8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_54; // 0x7f40
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_53; // 0x7f68
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_6; // 0x7f90
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_52; // 0x8118
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_62; // 0x8140
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_61; // 0x81e0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_81; // 0x8280
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_51; // 0x8340
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_5; // 0x8368
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_50; // 0x84f0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_4; // 0x8518
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_60; // 0x86a0
	FAnimNode_Slot AnimGraphNode_Slot_30; // 0x8740
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_80; // 0x8788
	FAnimNode_Slot AnimGraphNode_Slot_29; // 0x8848
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_59; // 0x8890
	FAnimNode_Slot AnimGraphNode_Slot_28; // 0x8930
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_79; // 0x8978
	FAnimNode_Slot AnimGraphNode_Slot_27; // 0x8a38
	FAnimNode_Slot AnimGraphNode_Slot_26; // 0x8a80
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_49; // 0x8ac8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_15; // 0x8af0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_284; // 0x8bb8
	FAnimNode_Slot AnimGraphNode_Slot_25; // 0x8c30
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_14; // 0x8c78
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_3; // 0x8d40
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_58; // 0x8ec8
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace_2; // 0x8f68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_48; // 0x90f0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_78; // 0x9118
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_77; // 0x91d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_22; // 0x9298
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_47; // 0x9350
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_46; // 0x9378
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_45; // 0x93a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_57; // 0x93c8
	FAnimNode_Slot AnimGraphNode_Slot_24; // 0x9468
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_101; // 0x94b0
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator; // 0x9590
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6; // 0x95d8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x95f8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6; // 0x9700
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_56; // 0x9720
	FAnimNode_RefPose AnimGraphNode_IdentityPose_7; // 0x97c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_76; // 0x97d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_283; // 0x9898
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_75; // 0x9910
	FAnimNode_RefPose AnimGraphNode_IdentityPose_6; // 0x99d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_282; // 0x99e8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_74; // 0x9a60
	FAnimNode_RefPose AnimGraphNode_IdentityPose_5; // 0x9b20
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_57; // 0x9b38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_281; // 0x9be8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_73; // 0x9c60
	FAnimNode_RefPose AnimGraphNode_IdentityPose_4; // 0x9d20
	FAnimNode_StateResult AnimGraphNode_StateResult_28; // 0x9d38
	FAnimNode_StateMachine AnimGraphNode_StateMachine_10; // 0x9d68
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_21; // 0x9e18
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_13; // 0x9ed0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_44; // 0x9f98
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_20; // 0x9fc0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_43; // 0xa078
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_55; // 0xa0a0
	FAnimNode_Slot AnimGraphNode_Slot_23; // 0xa140
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_280; // 0xa188
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_54; // 0xa200
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_53; // 0xa2a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_279; // 0xa340
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5; // 0xa3b8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0xa3d8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5; // 0xa4e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_52; // 0xa500
	FAnimNode_Slot AnimGraphNode_Slot_22; // 0xa5a0
	FAnimNode_Slot AnimGraphNode_Slot_21; // 0xa5e8
	FAnimNode_Slot AnimGraphNode_Slot_20; // 0xa630
	FAnimNode_RefPose AnimGraphNode_IdentityPose_3; // 0xa678
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_278; // 0xa690
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_51; // 0xa708
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_50; // 0xa7a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_277; // 0xa848
	FAnimNode_StateResult AnimGraphNode_StateResult_27; // 0xa8c0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_9; // 0xa8f0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_19; // 0xa9a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_42; // 0xaa58
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_41; // 0xaa80
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_49; // 0xaaa8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_21; // 0xab48
	FAnimNode_Slot AnimGraphNode_Slot_19; // 0xac10
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_48; // 0xac58
	FAnimNode_Slot AnimGraphNode_Slot_18; // 0xacf8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_72; // 0xad40
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_40; // 0xae00
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_39; // 0xae28
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_18; // 0xae50
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_38; // 0xaf08
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_37; // 0xaf30
	FAnimNode_Slot AnimGraphNode_Slot_17; // 0xaf58
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_71; // 0xafa0
	FAnimNode_Slot AnimGraphNode_Slot_16; // 0xb060
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_36; // 0xb0a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_276; // 0xb0d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_275; // 0xb148
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_20; // 0xb1c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_274; // 0xb260
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_273; // 0xb2d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_272; // 0xb350
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_19; // 0xb3c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_271; // 0xb468
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_270; // 0xb4e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_269; // 0xb558
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_18; // 0xb5d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_268; // 0xb670
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_267; // 0xb6e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_266; // 0xb760
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_17; // 0xb7d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_265; // 0xb878
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_47; // 0xb8f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_46; // 0xb990
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_45; // 0xba30
	FAnimNode_StateResult AnimGraphNode_StateResult_26; // 0xbad0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_8; // 0xbb00
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_17; // 0xbbb0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_12; // 0xbc68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_35; // 0xbd30
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_44; // 0xbd58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_264; // 0xbdf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_263; // 0xbe70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_262; // 0xbee8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_261; // 0xbf60
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_56; // 0xbfd8
	FAnimNode_StateResult AnimGraphNode_StateResult_25; // 0xc088
	FAnimNode_StateMachine AnimGraphNode_StateMachine_7; // 0xc0b8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_16; // 0xc168
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_70; // 0xc220
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_34; // 0xc2e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_43; // 0xc308
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_42; // 0xc3a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_260; // 0xc448
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_259; // 0xc4c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_41; // 0xc538
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_258; // 0xc5d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_257; // 0xc650
	FAnimNode_StateResult AnimGraphNode_StateResult_24; // 0xc6c8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_6; // 0xc6f8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_15; // 0xc7a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_40; // 0xc860
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_39; // 0xc900
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_33; // 0xc9a0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_14; // 0xc9c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_32; // 0xca80
	FAnimNode_Slot AnimGraphNode_Slot_15; // 0xcaa8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_69; // 0xcaf0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_31; // 0xcbb0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_11; // 0xcbe0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_10; // 0xcdc0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4; // 0xcfa0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4; // 0xcfc0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_13; // 0xcfe0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_30; // 0xd098
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_29; // 0xd0c0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_9; // 0xd0f0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_8; // 0xd2d0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_7; // 0xd4b0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_6; // 0xd690
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3; // 0xd870
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3; // 0xd890
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_5; // 0xd8b0
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_4; // 0xda90
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_3; // 0xdc70
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_2; // 0xde50
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0xe030
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0xe050
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_28; // 0xe070
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_27; // 0xe098
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_26; // 0xe0c0
	FAnimNode_Slot AnimGraphNode_Slot_14; // 0xe0e8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_55; // 0xe130
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_38; // 0xe1e0
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace; // 0xe280
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_25; // 0xe408
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_256; // 0xe430
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_37; // 0xe4a8
	FAnimNode_Slot AnimGraphNode_Slot_13; // 0xe548
	FAnimNode_Slot AnimGraphNode_Slot_12; // 0xe590
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_36; // 0xe5d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_255; // 0xe678
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_254; // 0xe6f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_35; // 0xe768
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_68; // 0xe808
	FAnimNode_Slot AnimGraphNode_Slot_11; // 0xe8c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_34; // 0xe910
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_67; // 0xe9b0
	FAnimNode_Slot AnimGraphNode_Slot_10; // 0xea70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_33; // 0xeab8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_11; // 0xeb58
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_24; // 0xec20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0xec48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0xec70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0xec98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0xecc0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0xece8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0xed10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0xed38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0xed60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0xed88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0xedb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0xedd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0xee00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0xee28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0xee50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0xee78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0xeea0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0xeec8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0xeef0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0xef18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0xef40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0xef68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0xef90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0xefb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0xefe0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0xf008
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0xf030
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_253; // 0xf058
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_252; // 0xf0d0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_20; // 0xf148
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_66; // 0xf210
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_100; // 0xf2d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_251; // 0xf3b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_65; // 0xf428
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_99; // 0xf4e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_250; // 0xf5c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_249; // 0xf640
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_248; // 0xf6b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_247; // 0xf730
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_246; // 0xf7a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_245; // 0xf820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_244; // 0xf898
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_243; // 0xf910
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_19; // 0xf988
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_242; // 0xfa50
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_64; // 0xfac8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_98; // 0xfb88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_241; // 0xfc68
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_63; // 0xfce0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_97; // 0xfda0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_32; // 0xfe80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_240; // 0xff20
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_18; // 0xff98
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_96; // 0x10060
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_239; // 0x10140
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_17; // 0x101b8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_95; // 0x10280
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_16; // 0x10360
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_238; // 0x10428
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_237; // 0x104a0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_15; // 0x10518
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_236; // 0x105e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_14; // 0x10658
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_235; // 0x10720
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_13; // 0x10798
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_234; // 0x10860
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_12; // 0x108d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_233; // 0x109a0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_11; // 0x10a18
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_94; // 0x10ae0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_93; // 0x10bc0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_62; // 0x10ca0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_92; // 0x10d60
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_54; // 0x10e40
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_91; // 0x10ef0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_90; // 0x10fd0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_89; // 0x110b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_53; // 0x11190
	FAnimNode_RefPose AnimGraphNode_IdentityPose_2; // 0x11240
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_10; // 0x11258
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_52; // 0x11320
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_61; // 0x113d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_51; // 0x11490
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_60; // 0x11540
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_88; // 0x11600
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_50; // 0x116e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_87; // 0x11790
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_86; // 0x11870
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_85; // 0x11950
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_84; // 0x11a30
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_83; // 0x11b10
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_9; // 0x11bf0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_8; // 0x11cb8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_31; // 0x11d80
	FAnimNode_StateResult AnimGraphNode_StateResult_23; // 0x11e20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_232; // 0x11e50
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_59; // 0x11ec8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_231; // 0x11f88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_230; // 0x12000
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_229; // 0x12078
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_228; // 0x120f0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_58; // 0x12168
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_57; // 0x12228
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_227; // 0x122e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_226; // 0x12360
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_225; // 0x123d8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_49; // 0x12450
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_224; // 0x12500
	FAnimNode_StateResult AnimGraphNode_StateResult_22; // 0x12578
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_223; // 0x125a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_222; // 0x12620
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_56; // 0x12698
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_221; // 0x12758
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_55; // 0x127d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_220; // 0x12890
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_219; // 0x12908
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_218; // 0x12980
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_48; // 0x129f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_217; // 0x12aa8
	FAnimNode_StateResult AnimGraphNode_StateResult_21; // 0x12b20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_216; // 0x12b50
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_54; // 0x12bc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_215; // 0x12c88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_214; // 0x12d00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_213; // 0x12d78
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_53; // 0x12df0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_212; // 0x12eb0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_52; // 0x12f28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_211; // 0x12fe8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_210; // 0x13060
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_209; // 0x130d8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_47; // 0x13150
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_208; // 0x13200
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0x13278
	FAnimNode_StateMachine AnimGraphNode_StateMachine_5; // 0x132a8
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0x13358
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_51; // 0x13388
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_207; // 0x13448
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_206; // 0x134c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_205; // 0x13538
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_204; // 0x135b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_203; // 0x13628
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_50; // 0x136a0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_49; // 0x13760
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_202; // 0x13820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_201; // 0x13898
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_46; // 0x13910
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_200; // 0x139c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_199; // 0x13a38
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x13ab0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_48; // 0x13ae0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_198; // 0x13ba0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_197; // 0x13c18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_196; // 0x13c90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_195; // 0x13d08
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_47; // 0x13d80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_194; // 0x13e40
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_46; // 0x13eb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_193; // 0x13f78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_192; // 0x13ff0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_45; // 0x14068
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_191; // 0x14118
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_190; // 0x14190
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x14208
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_189; // 0x14238
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_45; // 0x142b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_188; // 0x14370
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_187; // 0x143e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_186; // 0x14460
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_185; // 0x144d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_184; // 0x14550
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_183; // 0x145c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_182; // 0x14640
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_181; // 0x146b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_44; // 0x14730
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_43; // 0x147f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_44; // 0x148b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_43; // 0x14960
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_180; // 0x14a10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_179; // 0x14a88
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_42; // 0x14b00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_178; // 0x14bb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_177; // 0x14c28
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x14ca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_176; // 0x14cd0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_42; // 0x14d48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_175; // 0x14e08
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_41; // 0x14e80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_174; // 0x14f40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_173; // 0x14fb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_172; // 0x15030
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_171; // 0x150a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_170; // 0x15120
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_169; // 0x15198
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_168; // 0x15210
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_167; // 0x15288
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_166; // 0x15300
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_40; // 0x15378
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_165; // 0x15438
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_39; // 0x154b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_41; // 0x15570
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_40; // 0x15620
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_38; // 0x156d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_164; // 0x15790
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_163; // 0x15808
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_162; // 0x15880
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_39; // 0x158f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_161; // 0x159a8
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x15a20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x15a50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x15a78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x15aa0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x15ac8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x15af0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_30; // 0x15b18
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_82; // 0x15bb8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_81; // 0x15c98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_160; // 0x15d78
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_37; // 0x15df0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_159; // 0x15eb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_158; // 0x15f28
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_36; // 0x15fa0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_29; // 0x16060
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_80; // 0x16100
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_79; // 0x161e0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_35; // 0x162c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_28; // 0x16380
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_78; // 0x16420
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_77; // 0x16500
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_38; // 0x165e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_27; // 0x16690
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_76; // 0x16730
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_75; // 0x16810
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_26; // 0x168f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_74; // 0x16990
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_73; // 0x16a70
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x16b50
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_25; // 0x16b80
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_72; // 0x16c20
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_71; // 0x16d00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_157; // 0x16de0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_156; // 0x16e58
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_34; // 0x16ed0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_70; // 0x16f90
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_33; // 0x17070
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_69; // 0x17130
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_68; // 0x17210
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_37; // 0x172f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_67; // 0x173a0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_66; // 0x17480
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x17560
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_155; // 0x17590
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_154; // 0x17608
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_153; // 0x17680
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x176f8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x17718
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK; // 0x17740
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_152; // 0x17920
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_151; // 0x17998
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_32; // 0x17a10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_150; // 0x17ad0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_31; // 0x17b48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_149; // 0x17c08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_148; // 0x17c80
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_16; // 0x17cf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_147; // 0x17d98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_146; // 0x17e10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_145; // 0x17e88
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_36; // 0x17f00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_144; // 0x17fb0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_24; // 0x18028
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_143; // 0x180c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_23; // 0x18140
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_142; // 0x181e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_22; // 0x18258
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_141; // 0x182f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_21; // 0x18370
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_140; // 0x18410
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_139; // 0x18488
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_138; // 0x18500
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_137; // 0x18578
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_15; // 0x185f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_136; // 0x18690
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_135; // 0x18708
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_14; // 0x18780
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_134; // 0x18820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_133; // 0x18898
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_13; // 0x18910
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_35; // 0x189b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_132; // 0x18a60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_131; // 0x18ad8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_130; // 0x18b50
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_34; // 0x18bc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_129; // 0x18c78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_128; // 0x18cf0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_20; // 0x18d68
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_33; // 0x18e08
	FAnimNode_Slot AnimGraphNode_Slot_9; // 0x18eb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_127; // 0x18f00
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x18f78
	FAnimNode_StateMachine AnimGraphNode_StateMachine_4; // 0x18fa8
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x19058
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x19088
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x190b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x190d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x19100
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x19128
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_126; // 0x19150
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_65; // 0x191c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_64; // 0x192a8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_19; // 0x19388
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_30; // 0x19428
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_125; // 0x194e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_124; // 0x19560
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_123; // 0x195d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_122; // 0x19650
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_121; // 0x196c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_120; // 0x19740
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_119; // 0x197b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_118; // 0x19830
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_29; // 0x198a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_63; // 0x19968
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_62; // 0x19a48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_18; // 0x19b28
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_32; // 0x19bc8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_31; // 0x19c78
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_28; // 0x19d28
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_30; // 0x19de8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_61; // 0x19e98
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_60; // 0x19f78
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_17; // 0x1a058
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_59; // 0x1a0f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_58; // 0x1a1d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_16; // 0x1a2b8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_29; // 0x1a358
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_57; // 0x1a408
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_56; // 0x1a4e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_15; // 0x1a5c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_55; // 0x1a668
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_54; // 0x1a748
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_14; // 0x1a828
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x1a8c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_53; // 0x1a8f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_52; // 0x1a9d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_13; // 0x1aab8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_117; // 0x1ab58
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_27; // 0x1abd0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_51; // 0x1ac90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_116; // 0x1ad70
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_26; // 0x1ade8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_28; // 0x1aea8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_50; // 0x1af58
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_49; // 0x1b038
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_115; // 0x1b118
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_114; // 0x1b190
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_113; // 0x1b208
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_112; // 0x1b280
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_111; // 0x1b2f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_48; // 0x1b370
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_12; // 0x1b450
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_110; // 0x1b4f0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_25; // 0x1b568
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_47; // 0x1b628
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_109; // 0x1b708
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_24; // 0x1b780
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_27; // 0x1b840
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_46; // 0x1b8f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_45; // 0x1b9d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_23; // 0x1bab0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_22; // 0x1bb70
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_26; // 0x1bc30
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_25; // 0x1bce0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_24; // 0x1bd90
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_23; // 0x1be40
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_21; // 0x1bef0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_44; // 0x1bfb0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_43; // 0x1c090
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_42; // 0x1c170
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_22; // 0x1c250
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_41; // 0x1c300
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_21; // 0x1c3e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_40; // 0x1c490
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_39; // 0x1c570
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_38; // 0x1c650
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_37; // 0x1c730
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_36; // 0x1c810
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_35; // 0x1c8f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_34; // 0x1c9d0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_33; // 0x1cab0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_7; // 0x1cb90
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_6; // 0x1cc58
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_11; // 0x1cd20
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x1cdc0
	FAnimNode_Slot AnimGraphNode_Slot_8; // 0x1cdf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_108; // 0x1ce38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_107; // 0x1ceb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_106; // 0x1cf28
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_12; // 0x1cfa0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_105; // 0x1d040
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_20; // 0x1d0b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_104; // 0x1d178
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_103; // 0x1d1f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_102; // 0x1d268
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_10; // 0x1d2e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_101; // 0x1d380
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_100; // 0x1d3f8
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_11; // 0x1d470
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_99; // 0x1d510
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_98; // 0x1d588
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_19; // 0x1d600
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_97; // 0x1d6c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_96; // 0x1d738
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_10; // 0x1d7b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_95; // 0x1d850
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_18; // 0x1d8c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_94; // 0x1d988
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_93; // 0x1da00
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_20; // 0x1da78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_92; // 0x1db28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_91; // 0x1dba0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_90; // 0x1dc18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_89; // 0x1dc90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_88; // 0x1dd08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_87; // 0x1dd80
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_9; // 0x1ddf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_86; // 0x1de98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_85; // 0x1df10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_84; // 0x1df88
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_8; // 0x1e000
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_7; // 0x1e0a0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_19; // 0x1e140
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_18; // 0x1e1f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_83; // 0x1e2a0
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x1e318
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1e360
	FAnimNode_StateMachine AnimGraphNode_StateMachine_3; // 0x1e390
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x1e440
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x1e470
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x1e4b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x1e4e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x1e508
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x1e530
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x1e558
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x1e580
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x1e5a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x1e5d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x1e5f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x1e620
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x1e648
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x1e670
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x1e698
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x1e6c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x1e6e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_82; // 0x1e710
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_17; // 0x1e788
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_81; // 0x1e848
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_80; // 0x1e8c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0x1e938
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_79; // 0x1e9d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_78; // 0x1ea50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_77; // 0x1eac8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_76; // 0x1eb40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_75; // 0x1ebb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_74; // 0x1ec30
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_17; // 0x1eca8
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x1ed58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_73; // 0x1ed88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_72; // 0x1ee00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_71; // 0x1ee78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_70; // 0x1eef0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_69; // 0x1ef68
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_16; // 0x1efe0
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x1f090
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_68; // 0x1f0c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_16; // 0x1f138
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x1f1f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_32; // 0x1f298
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_31; // 0x1f378
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_67; // 0x1f458
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_66; // 0x1f4d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_65; // 0x1f548
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_64; // 0x1f5c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_63; // 0x1f638
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_62; // 0x1f6b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_61; // 0x1f728
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_60; // 0x1f7a0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_15; // 0x1f818
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x1f8d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_30; // 0x1f978
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_29; // 0x1fa58
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_15; // 0x1fb38
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_14; // 0x1fbe8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_13; // 0x1fc98
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_14; // 0x1fd48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x1fe08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_28; // 0x1fea8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_27; // 0x1ff88
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_12; // 0x20068
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_26; // 0x20118
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_25; // 0x201f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x202d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x20378
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_24; // 0x20418
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_23; // 0x204f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x205d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_22; // 0x20678
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_21; // 0x20758
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x20838
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_59; // 0x20868
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_58; // 0x208e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_10; // 0x20958
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_13; // 0x20a20
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_20; // 0x20ae0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_57; // 0x20bc0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_12; // 0x20c38
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_19; // 0x20cf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_56; // 0x20dd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_55; // 0x20e50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_54; // 0x20ec8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_53; // 0x20f40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_52; // 0x20fb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_51; // 0x21030
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_9; // 0x210a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_50; // 0x21170
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_11; // 0x211e8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_18; // 0x212a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_49; // 0x21388
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_10; // 0x21400
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_17; // 0x214c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x215a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_48; // 0x21640
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_8; // 0x216b8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_16; // 0x21780
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_47; // 0x21860
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_7; // 0x218d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_15; // 0x219a0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_14; // 0x21a80
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_13; // 0x21b60
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_5; // 0x21c40
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_4; // 0x21d08
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_11; // 0x21dd0
	FAnimNode_RefPose AnimGraphNode_IdentityPose; // 0x21e80
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_3; // 0x21e98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_46; // 0x21f60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_6; // 0x21fd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_45; // 0x220a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_44; // 0x22118
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_5; // 0x22190
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_43; // 0x22258
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x222d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_42; // 0x22398
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x22410
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_41; // 0x224d8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x22550
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_40; // 0x22618
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x22690
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_10; // 0x22758
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_39; // 0x22808
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_12; // 0x22880
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_11; // 0x22960
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_9; // 0x22a40
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_9; // 0x22b00
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8; // 0x22bb0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_10; // 0x22c70
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7; // 0x22d50
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x22e10
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_8; // 0x22ef0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_7; // 0x22fa0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x23050
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x23130
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x23210
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x232f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x233d0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x234b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x23590
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x23670
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_2; // 0x23750
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive; // 0x23818
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x238e0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x23980
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_38; // 0x239b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_37; // 0x23a28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_36; // 0x23aa0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_35; // 0x23b18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34; // 0x23b90
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_6; // 0x23c08
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0x23ca8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0x23d68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x23de0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x23e58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0x23ed0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0x23f48
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0x23fc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x24080
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x240f8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0x24170
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x24230
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x242a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x24368
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x243e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x24458
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x244d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x24548
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_5; // 0x245c0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x24660
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x24720
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x24798
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x24810
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x24888
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_4; // 0x24900
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x249a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x24a18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x24a90
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x24b08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x24bc8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_6; // 0x24c40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x24cf0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_5; // 0x24d68
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_4; // 0x24e18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x24ec8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x24f40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x24fb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x25030
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x250a8
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_3; // 0x25120
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x251c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x25238
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x252b0
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_2; // 0x25328
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x253c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x25440
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x254b8
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x25530
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x255d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x25680
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x25730
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x25778
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x257a8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x25858
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x25888
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_12; // 0x25938
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_11; // 0x259f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_23; // 0x25aa8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_22; // 0x25ad0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_10; // 0x25af8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_21; // 0x25bb0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_20; // 0x25bd8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_9; // 0x25c00
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_19; // 0x25cb8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_18; // 0x25ce0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_8; // 0x25d08
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_17; // 0x25dc0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_16; // 0x25de8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_15; // 0x25e10
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_7; // 0x25e38
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_6; // 0x25ef0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_14; // 0x25fa8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0x25fd0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_13; // 0x26088
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_12; // 0x260b0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0x260d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_11; // 0x26190
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_10; // 0x261b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_9; // 0x261e0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0x26208
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0x262c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0x262e8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x26310
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x263c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x263f0
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x26418
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x26460
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x26518
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x26540
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x26568
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x265b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x265f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x266a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x266d0
	FAnimNode_Slot AnimGraphNode_Slot; // 0x266f8
	UBlendSpaceBase* StoppingAnimation; // 0x26740
	FName AdditiveLandingSlot; // 0x26748
	float StoppingDirection; // 0x26750
	FTimerHandle CameraLagTimer; // 0x26758
	FVector SavedCameraArmLocation; // 0x26760
	bool TestSprinting; // 0x2676c
};

struct UMaterialExpressionConstantBiasScale : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Bias; // 0x54
	float Scale; // 0x58
};

struct UUW-Radar_Cursor_Dummy_C : UUserWidget {
	UImage* Image_47; // 0x248
};

struct UCoherentUIGTJSPayload : UObject {
	FString EventName; // 0x28
};

struct UParticleModuleRotationOverLifetime : UParticleModuleRotationBase {
	FRawDistributionFloat RotationOverLife; // 0x30
	char Scale : 1; // 0x60
};

struct ABravoHotelProjectileGrenadeSmoke : ABravoHotelProjectileGrenade {
	UParticleSystemComponent* SmokeTrailEffectComponent; // 0x688
	UParticleSystemComponent* SpawnedSmokeFxComponent; // 0x690
	float SmokeLifeTime; // 0x698
	int32_t SmokeTranslucencySortPriority; // 0x69c
	UAkAudioEvent* SmokeStartEvent; // 0x6a0
	UAkAudioEvent* SmokeEndEvent; // 0x6a8
	float SeeThroughSmokeOpacity; // 0x6b0
	float OpacityInSpeed; // 0x6b4
	float OpacityOutSpeed; // 0x6b8
	float SmokeCheckTime; // 0x6bc
	float PoisonCheckTime; // 0x6c0
	float PoisonCheckRange; // 0x6c4
	TArray<FName> SmokeDebuffs; // 0x6c8
	bool bActiveSmokeGrenade; // 0x6d8
	bool bActiveSmokeEffect; // 0x6d9
	TArray<FVector> SpawnLocations; // 0x6e0
	TArray<ABravoHotelCharacter*> AICharacters; // 0x7f8
};

struct UGizmoPlaneScaleParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float ScaleMultiplier; // 0xb0
	FVector2D Parameter; // 0xb4
	FGizmoVec2ParameterChange LastChange; // 0xbc
	FVector CurScaleOrigin; // 0xcc
	FVector CurScaleNormal; // 0xd8
	FVector CurScaleAxisX; // 0xe4
	FVector CurScaleAxisY; // 0xf0
	FTransform InitialTransform; // 0x100
};

struct ULightMapVirtualTexture2D : UTexture2D {
	TArray<int8_t> TypeToLayer; // 0xe8
};

struct UClothingAssetCommon : UClothingAssetBase {
	UPhysicsAsset* PhysicsAsset; // 0x48
	TMap<FName, UClothConfigBase*> ClothConfigs; // 0x50
	UClothConfigBase* ClothSharedSimConfig; // 0xa0
	UClothConfigBase* ClothSimConfig; // 0xa8
	UClothConfigBase* ChaosClothSimConfig; // 0xb0
	TArray<UClothLODDataCommon_Legacy*> ClothLODData; // 0xb8
	TArray<FClothLODDataCommon> LODData; // 0xc8
	TArray<int32_t> LodMap; // 0xd8
	TArray<FName> UsedBoneNames; // 0xe8
	TArray<int32_t> UsedBoneIndices; // 0xf8
	int32_t ReferenceBoneIndex; // 0x108
	UClothingAssetCustomData* CustomData; // 0x110
	FClothConfig_Legacy ClothConfig; // 0x118
};

struct UPawnMovementComponent : UNavMovementComponent {
	APawn* PawnOwner; // 0x130
};

struct UBTTask_BlueprintBase : UBTTaskNode {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	FIntervalCountdown TickInterval; // 0x80
	char bShowPropertyDetails : 1; // 0xa0
};

struct UKeyWidget_C : UBravoHotelSettingSubWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	UButtomButtonWidget_C* ButtomButtonWidget; // 0x2a0
	UImage* Image_154; // 0x2a8
	UOverlay* Overlay_1; // 0x2b0
	UScrollBox* ScrollBox_55; // 0x2b8
	UUniformGridPanel* UniformGridPanel_119; // 0x2c0
	EKeySettingType Begin; // 0x2c8
	EKeySettingType End; // 0x2c9
	EKeySettingSubType PreSubType; // 0x2ca
	FMulticastInlineDelegate EventDispatcher_KeyNotiMessage; // 0x2d0
	FTimerHandle ScrollBarTimer; // 0x2e0
	TMap<EKeySettingSubType, FSettingInfo> List; // 0x2e8
	TArray<EKeySettingSubType> SubTypeSort; // 0x338
	int32_t TempCount; // 0x348
	TMap<UButtomButtonWidget_C*, USubTitleSlotWidget_C*> Hot; // 0x350
	float Size; // 0x3a0
	TMap<USubTitleSlotWidget_C*, float> Offset; // 0x3a8
};

struct UActorSequenceComponent : UActorComponent {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0xb0
	UActorSequence* Sequence; // 0xc8
	UActorSequencePlayer* SequencePlayer; // 0xd0
};

struct UMaterialExpressionTextureSampleParameterSubUV : UMaterialExpressionTextureSampleParameter2D {
	char bBlend : 1; // 0xf0
};

struct UUW-Lobby_Craft_WeaponSelect_Slot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_ItemSlotHover_4; // 0x250
	UUW-Inventory_ItemSlotHover_C* UW-Inventory_ItemSlotHover_4; // 0x258
	FResponse_Weapon_List_Data ItemWeaponInfo; // 0x260
	UUW-Lobby_Craft_WeaponSelect_C* ParentWidget; // 0x2e8
};

struct ABP-DefaultPawn_C : ABravoHotelCharacterPrefab {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3b40
	UBP-LadderComponent_C* BP-LadderComponent; // 0x3b48
	UParticleSystemComponent* OutBlueZone; // 0x3b50
	UBP-GrassCollision_Character_C* BP-FoliageCollision; // 0x3b58
	UChildActorComponent* DevCamera_ChildActor; // 0x3b60
	UTeamInfoUpdaterComponent* TeamInfoUpdater; // 0x3b68
	float VelocityZ_LandingDamage; // 0x3b70
	ABP-CharacterRecording_C* CharacterPreviewRef; // 0x3b78
	AChat_System_C* Chat System; // 0x3b80
	bool ShowChatToggle; // 0x3b88
	float CurrentViewportSizeX; // 0x3b8c
	float CurrentViewportSizeY; // 0x3b90
	bool OutScreenPosition; // 0x3b94
	int32_t SightNumForTset; // 0x3b98
	bool bDefaultAmplifier; // 0x3b9c
	float CurrentTeamInfoHeight; // 0x3ba0
};

struct AOnlineBeaconHostObject : AActor {
	FString BeaconTypeName; // 0x328
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x338
	TArray<AOnlineBeaconClient*> ClientActors; // 0x340
};

struct UBravoHotelInventoryHoverWidget : UUserWidget {
	UCanvasPanel* CanvasItemSlotHover; // 0x248
	UCanvasPanel* CanvasWeaponItemSlotHover; // 0x250
	UCanvasPanel* CanvasPerkSlotHover; // 0x258
	UCanvasPanel* CanvasStatSlotHover; // 0x260
	UCanvasPanel* CanvasMaterialSlotHover; // 0x268
	UCanvasPanel* CanvasTooltipSlotHover; // 0x270
	bool bNeedUpdateHover; // 0x278
	int32_t HoverType; // 0x27c
};

struct UParticleModuleAccelerationDrag : UParticleModuleAccelerationBase {
	UDistributionFloat* DragCoefficient; // 0x38
	FRawDistributionFloat DragCoefficientRaw; // 0x40
};

struct UUW-HUDMessageWidget_C : UBravoHotelBroadcastingWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x258
	UWidgetAnimation* Anim_9WarningMessage; // 0x260
	UWidgetAnimation* Anim_10SupplyMessage; // 0x268
	UWidgetAnimation* Anim_8LevelUpMessage; // 0x270
	UWidgetAnimation* Anim_4GameStartMessage; // 0x278
	UWidgetAnimation* Anim_27Revival; // 0x280
	UWidgetAnimation* Anim_TeamKillWarning; // 0x288
	UCanvasPanel* 0BlueZoneDesc; // 0x290
	UCanvasPanel* 10SupplyMessage; // 0x298
	UCanvasPanel* 11BroadcastMessage; // 0x2a0
	UCanvasPanel* 12TeamKillWarning; // 0x2a8
	UCanvasPanel* 13ActionDescription; // 0x2b0
	UCanvasPanel* 14Action; // 0x2b8
	UCanvasPanel* 15CastingMessage; // 0x2c0
	UCanvasPanel* 16CastingCount; // 0x2c8
	UCanvasPanel* 17CastingCancelInfo; // 0x2d0
	UCanvasPanel* 18ActionMessage; // 0x2d8
	UCanvasPanel* 19CoreInfo; // 0x2e0
	UCanvasPanel* 1BlueZoneName; // 0x2e8
	UCanvasPanel* 20ZeroingDistance; // 0x2f0
	UCanvasPanel* 21PlayerReportInfo; // 0x2f8
	UCanvasPanel* 22SpectatorCount; // 0x300
	UCanvasPanel* 23PlayerInfo; // 0x308
	UCanvasPanel* 24RoundOverInfo; // 0x310
	UCanvasPanel* 25RoundOver; // 0x318
	UCanvasPanel* 26GuideWidget; // 0x320
	UCanvasPanel* 27Revival; // 0x328
	UCanvasPanel* 28RequestMessageInfo_2; // 0x330
	UCanvasPanel* 29EndResuscitated; // 0x338
	UCanvasPanel* 2GameCountDown; // 0x340
	UCanvasPanel* 30ItemCancelMessage; // 0x348
	UCanvasPanel* 3GameCountDownNum; // 0x350
	UCanvasPanel* 4GameStartMessage; // 0x358
	UCanvasPanel* 5ChangeClassInfo; // 0x360
	UCanvasPanel* 6KillMessage; // 0x368
	UCanvasPanel* 7KillCount; // 0x370
	UCanvasPanel* 8LevelUpMessage; // 0x378
	UCanvasPanel* 9WarningMessage; // 0x380
	UCanvasPanel* HUDList; // 0x388
	UImage* Image; // 0x390
	UImage* Image_1; // 0x398
	UImage* Image_2; // 0x3a0
	UImage* Image_4; // 0x3a8
	UImage* Image_5; // 0x3b0
	UImage* Image_8; // 0x3b8
	UImage* Image_248; // 0x3c0
	URichTextBlock* RichT_ResustingOwnerName; // 0x3c8
	URichTextBlock* ShowMessage<Red18>Free<>; // 0x3d0
	UUW-GuideWidget_C* UW-GuideWidget; // 0x3d8
	UUW-ListWidget_C* UW-ListWidget_CoreInfo; // 0x3e0
	UUW-ListWidget_C* UW-ListWidget_MyKillMessage; // 0x3e8
	UUW-ListWidget_C* UW-ListWidget_Request; // 0x3f0
	UUW-MyKillCountMessageWidget_C* UW-MyKillCountMessageWidget; // 0x3f8
	UUW-Timer_C* UW-Timer; // 0x400
	TMap<EHUDMessageType, int32_t> LastPriority; // 0x408
	TArray<UPanelWidget*> ShowAnimList; // 0x458
	TArray<UPanelWidget*> HideAnimList; // 0x468
	float ShowAnimTime; // 0x478
	float HideAnimTime; // 0x47c
	TMap<UPanelWidget*, float> TimerList; // 0x480
	int32_t TeamKillWarningAnimLoopNum; // 0x4d0
	FText CheatMessage; // 0x4d8
};

struct UCustomizableInstancePrivateData : UObject {
	TArray<FGeneratedMaterial> GeneratedMaterials; // 0x30
	TArray<FGeneratedMesh> GeneratedMeshes; // 0x40
	TArray<FGeneratedTexture> GeneratedTextures; // 0x50
	TArray<FParameterDecorations> ParameterDecorations; // 0xe8
	TMap<FString, TWeakObjectPtr<UTexture2D>> TextureReuseCache; // 0x108
	TArray<UMaterialInterface*> ReferencedMaterials; // 0x320
	TArray<UPhysicsAsset*> PhysicsAssetsToMerge; // 0x3d0
};

struct UReactiveStateMachine : URSM {
	TArray<UStateAction*> StateGraph; // 0x58
	float MachineTime; // 0x68
	FMulticastInlineDelegate _OnEntry; // 0x70
	FMulticastInlineDelegate _OnExit; // 0x80
	TMap<FGuid, FMachinePayloadData> MachineData; // 0x90
};

struct UInterpCurveEdSetup : UObject {
	TArray<FCurveEdTab> Tabs; // 0x28
	int32_t ActiveTab; // 0x38
};

struct UBravoHotelPopupManager : UObject {
	TArray<UBravoHotelLayerBase*> WidgetLayer; // 0x30
	UUserWidget* NetworkDelayPopupWidgetRef; // 0x40
};

struct UWBP_SPS_UseItemSelectionIcon_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* IconImage; // 0x250
	FMulticastInlineDelegate Hovered; // 0x258
	FMulticastInlineDelegate Unhovered; // 0x268
	FMulticastInlineDelegate Pressed; // 0x278
	USmartPingSystem_C* SmartPingComponent; // 0x288
	int32_t Index; // 0x290
	FLinearColor TintColorToUse; // 0x294
	bool Found Setting; // 0x2a4
	FBravoHotelSmartPingIconSettings Settings; // 0x2a8
	FName TableID; // 0x360
	TSoftObjectPtr<UPaperSprite> Image; // 0x368
};

struct UBravoHotelAudioAmbientMapData : UDataAsset {
	TMap<FName, FColor> StateColors; // 0x30
	TMap<FString, FColor> NewStateColors; // 0x80
	FVector2D WorldSize; // 0xd0
	FVector2D WorldCenter; // 0xd8
	FVector2D BaseMapSize; // 0xe0
	TArray<char> BitDataArray; // 0xe8
};

struct UCheckBox : UContentWidget {
	ECheckBoxState CheckedState; // 0x120
	FDelegate CheckedStateDelegate; // 0x124
	FCheckBoxStyle WidgetStyle; // 0x138
	USlateWidgetStyleAsset* Style; // 0x6b8
	USlateBrushAsset* UncheckedImage; // 0x6c0
	USlateBrushAsset* UncheckedHoveredImage; // 0x6c8
	USlateBrushAsset* UncheckedPressedImage; // 0x6d0
	USlateBrushAsset* CheckedImage; // 0x6d8
	USlateBrushAsset* CheckedHoveredImage; // 0x6e0
	USlateBrushAsset* CheckedPressedImage; // 0x6e8
	USlateBrushAsset* UndeterminedImage; // 0x6f0
	USlateBrushAsset* UndeterminedHoveredImage; // 0x6f8
	USlateBrushAsset* UndeterminedPressedImage; // 0x700
	EHorizontalAlignment HorizontalAlignment; // 0x708
	FMargin Padding; // 0x70c
	FSlateColor BorderBackgroundColor; // 0x720
	bool IsFocusable; // 0x748
	FMulticastInlineDelegate OnCheckStateChanged; // 0x750
};

struct USourceEffectFilterPreset : USoundEffectSourcePreset {
	FSourceEffectFilterSettings Settings; // 0x74
};

struct UInterpTrackParticleReplay : UInterpTrack {
	TArray<FParticleReplayTrackKey> TrackKeys; // 0x70
};

struct UMaterialExpressionRotator : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	float CenterX; // 0x68
	float CenterY; // 0x6c
	float Speed; // 0x70
	uint32_t ConstCoordinate; // 0x74
};

struct UStandinFarPipeline : USimplygonStandinPipeline {
	FRemeshingPipelineSettings Settings; // 0x28
};

struct UTextureLODSettings : UObject {
	TArray<FTextureLODGroup> TextureLODGroups; // 0x28
};

struct UMaterialExpressionDepthFade : UMaterialExpression {
	FExpressionInput InOpacity; // 0x40
	FExpressionInput FadeDistance; // 0x54
	float OpacityDefault; // 0x68
	float FadeDistanceDefault; // 0x6c
};

struct UUW-PlayerInfo_Progress_Renew_C : UBravoHotelPlayerInfoProgressWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e8
	UWidgetAnimation* Anim_Healing; // 0x2f0
	UHorizontalBox* HorizontalBox_Health; // 0x2f8
	UImage* Image_eager; // 0x300
	USizeBox* SizeBox_main; // 0x308
	UCurveFloat* Curve_ProgressMaxSizeRatio; // 0x310
	float DefaultSlotSize; // 0x318
	float MaxHealthSize; // 0x31c
	float CurrentHealthSize; // 0x320
	float CurrentMaxHealth; // 0x324
};

struct UUW-Matchend_DamageListBox_C : UUserWidget {
	UScrollBox* ScrollBox_DamageList; // 0x248
	UUW-Matchend_BuffList_Popup_C* UW-Matchend_BuffList_Popup; // 0x250
	FTimerHandle Timer_PlayDamageListAnim; // 0x258
	float DamageListAnimDelayTime; // 0x260
	int32_t CurrentAnimIndex; // 0x264
	UUW-Matchend_BuffList_Popup_C* BuffListPopupWidgetRef; // 0x268
	FTimerHandle Handle_ShowBuffListPopup; // 0x270
	int32_t HoverdWidgetIndex; // 0x278
};

struct UParticleModuleSizeMultiplyLife : UParticleModuleSizeBase {
	FRawDistributionVector LifeMultiplier; // 0x30
	char MultiplyX : 1; // 0x78
	char MultiplyY : 1; // 0x78
	char MultiplyZ : 1; // 0x78
};

struct UEnvQueryGenerator_ProjectedPoints : UEnvQueryGenerator {
	FEnvTraceData ProjectionData; // 0x50
};

struct UBTDecorator_Cooldown : UBTDecorator {
	float CoolDownTime; // 0x68
};

struct ABravoHotelHeartBeatSensor : ABravoHotelWeaponBase {
	float HeartBeatSensorLength; // 0x1bec
	FTimerHandle TimerHandle_OnStartEffectEvent; // 0x1bf0
	TArray<ABravoHotelCharacter*> DetectedCharacters; // 0x1bf8
};

struct UDatasmithCineCameraActorTemplate : UDatasmithObjectTemplate {
	FDatasmithCameraLookatTrackingSettingsTemplate LookatTrackingSettings; // 0x30
};

struct ULandscapeSettings : UDeveloperSettings {
	int32_t MaxNumberOfLayers; // 0x38
};

struct UPendingNetGame : UObject {
	UNetDriver* NetDriver; // 0x30
	UDemoNetDriver* DemoNetDriver; // 0x38
};

struct ULuminRuntimeSettings : UObject {
	FString PackageName; // 0x28
	FString ApplicationDisplayName; // 0x38
	ELuminFrameTimingHint FrameTimingHint; // 0x48
	bool bProtectedContent; // 0x49
	bool bManualCallToAppReady; // 0x4a
	bool bUseMobileRendering; // 0x4b
	bool bUseVulkan; // 0x4c
	FFilePath Certificate; // 0x50
	FDirectoryPath IconModelPath; // 0x60
	FDirectoryPath IconPortalPath; // 0x70
	FLocalizedIconInfos LocalizedIconInfos; // 0x80
	int32_t VersionCode; // 0x90
	int32_t MinimumAPILevel; // 0x94
	TArray<ELuminPrivilege> AppPrivileges; // 0x98
	TArray<FLuminComponentSubElement> ExtraComponentSubElements; // 0xa8
	TArray<FLuminComponentElement> ExtraComponentElements; // 0xb8
	FString SpatializationPlugin; // 0xc8
	FString ReverbPlugin; // 0xd8
	FString OcclusionPlugin; // 0xe8
	int32_t SoundCueCookQualityIndex; // 0xf8
	bool bRemoveDebugInfo; // 0xfc
	FDirectoryPath VulkanValidationLayerLibs; // 0x100
	bool bFrameVignette; // 0x110
	TArray<FLocalizedAppName> LocalizedAppNames; // 0x118
};

struct UVirtualTexturePoolConfig : UObject {
	int32_t DefaultSizeInMegabyte; // 0x28
	TArray<FVirtualTextureSpacePoolConfig> Pools; // 0x30
};

struct UAssetExportTask : UObject {
	UObject* Object; // 0x28
	UExporter* Exporter; // 0x30
	FString Filename; // 0x38
	bool bSelected; // 0x48
	bool bReplaceIdentical; // 0x49
	bool bPrompt; // 0x4a
	bool bAutomated; // 0x4b
	bool bUseFileArchive; // 0x4c
	bool bWriteEmptyFiles; // 0x4d
	TArray<UObject*> IgnoreObjectList; // 0x50
	UObject* options; // 0x60
	TArray<FString> Errors; // 0x68
};

struct UBlackboardKeyType_Class : UBlackboardKeyType {
	UObject* BaseClass; // 0x30
};

struct UAkComponent : UAkGameObject {
	bool bUseSpatialAudio; // 0x250
	ECollisionChannel OcclusionCollisionChannel; // 0x258
	char EnableSpotReflectors : 1; // 0x25c
	UAkAuxBus* EarlyReflectionAuxBus; // 0x260
	FString EarlyReflectionAuxBusName; // 0x268
	int32_t EarlyReflectionOrder; // 0x278
	float EarlyReflectionBusSendGain; // 0x27c
	float EarlyReflectionMaxPathLength; // 0x280
	float roomReverbAuxBusGain; // 0x284
	int32_t diffractionMaxEdges; // 0x288
	int32_t diffractionMaxPaths; // 0x28c
	float diffractionMaxPathLength; // 0x290
	char DrawFirstOrderReflections : 1; // 0x294
	char DrawSecondOrderReflections : 1; // 0x294
	char DrawHigherOrderReflections : 1; // 0x294
	char DrawDiffraction : 1; // 0x294
	bool StopWhenOwnerDestroyed; // 0x298
	float RoomIterationInterval; // 0x29c
	float AttenuationScalingFactor; // 0x2a0
	float OcclusionRefreshInterval; // 0x2a4
	bool bUseReverbVolumes; // 0x2a8
	TSet<UAkComponent*> Listeners; // 0x398
	TSet<UAkComponent*> Emitters; // 0x3e8
};

struct UMKChannelEx : UObject {
	UChannel* SelfChannel; // 0x30
};

struct ULuminARLightEstimate : UARBasicLightEstimate {
	TArray<float> AmbientIntensityNits; // 0x40
};

struct UCustomizableSkeletalComponent : USceneComponent {
	float SkippedLastRenderTime; // 0x234
	UCustomizableObjectInstance* CustomizableObjectInstance; // 0x238
};

struct UCompositeDataTable : UDataTable {
	TArray<UDataTable*> ParentTables; // 0xc8
	TArray<UDataTable*> OldParentTables; // 0xd8
};

struct APaperCharacter : ACharacter {
	UPaperFlipbookComponent* Sprite; // 0x5e8
};

struct ULowEntryExecutionQueue : UObject {
	int32_t Count; // 0x28
	bool Next; // 0x2c
};

struct UParticleModuleOrbit : UParticleModuleOrbitBase {
	EOrbitChainMode ChainMode; // 0x38
	FRawDistributionVector OffsetAmount; // 0x40
	FOrbitOptions OffsetOptions; // 0x88
	FRawDistributionVector RotationAmount; // 0x90
	FOrbitOptions RotationOptions; // 0xd8
	FRawDistributionVector RotationRateAmount; // 0xe0
	FOrbitOptions RotationRateOptions; // 0x128
};

struct UBP-GameSettingManager_C : UBravoHotelGameSettingManager {
	FPointerToUberGraphFrame UberGraphFrame; // 0x38
	UBP_GameSettingsWrapper_C* Game Settings Wrapper; // 0x40
};

struct UMaterialExpressionRotateAboutAxis : UMaterialExpression {
	FExpressionInput NormalizedRotationAxis; // 0x40
	FExpressionInput RotationAngle; // 0x54
	FExpressionInput PivotPoint; // 0x68
	FExpressionInput Position; // 0x7c
	float Period; // 0x90
};

struct UBackgroundBlurSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UMaterialExpressionMakeMaterialAttributes : UMaterialExpression {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Metallic; // 0x54
	FExpressionInput Specular; // 0x68
	FExpressionInput Roughness; // 0x7c
	FExpressionInput Anisotropy; // 0x90
	FExpressionInput EmissiveColor; // 0xa4
	FExpressionInput Opacity; // 0xb8
	FExpressionInput OpacityMask; // 0xcc
	FExpressionInput Normal; // 0xe0
	FExpressionInput Tangent; // 0xf4
	FExpressionInput WorldPositionOffset; // 0x108
	FExpressionInput WorldDisplacement; // 0x11c
	FExpressionInput TessellationMultiplier; // 0x130
	FExpressionInput SubsurfaceColor; // 0x144
	FExpressionInput ClearCoat; // 0x158
	FExpressionInput ClearCoatRoughness; // 0x16c
	FExpressionInput AmbientOcclusion; // 0x180
	FExpressionInput Refraction; // 0x194
	FExpressionInput CustomizedUVs[0x8]; // 0x1a8
	FExpressionInput PixelDepthOffset; // 0x248
	FExpressionInput ShadingModel; // 0x25c
};

struct UUW-Inventory_WeaponPerkSlot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* WeaponPerk_ani; // 0x250
	UImage* Image_102; // 0x258
	UImage* Image_254; // 0x260
	UImage* Image_Grade_Color_Line; // 0x268
};

struct UBTTask_RunEQSQuery : UBTTask_BlackboardBase {
	UEnvQuery* QueryTemplate; // 0x98
	TArray<FEnvNamedValue> QueryParams; // 0xa0
	TArray<FAIDynamicParam> QueryConfig; // 0xb0
	EEnvQueryRunMode RunMode; // 0xc0
	FBlackboardKeySelector EQSQueryBlackboardKey; // 0xc8
	bool bUseBBKey; // 0xf0
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0xf8
};

struct UProceduralFoliageTile : UObject {
	UProceduralFoliageSpawner* FoliageSpawner; // 0x28
	TArray<FProceduralFoliageInstance> InstancesArray; // 0xd0
};

struct AProceduralFoliageVolume : AVolume {
	UProceduralFoliageComponent* ProceduralComponent; // 0x360
};

struct URig : UObject {
	TArray<FTransformBase> TransformBases; // 0x30
	TArray<FNode> Nodes; // 0x40
};

struct UGameplayTask_TimeLimitedExecution : UGameplayTask {
	FMulticastInlineDelegate OnFinished; // 0x68
	FMulticastInlineDelegate OnTimeExpired; // 0x78
};

struct UInterpTrackAnimControl : UInterpTrackFloatBase {
	FName SlotName; // 0x90
	TArray<FAnimControlTrackKey> AnimSeqs; // 0x98
	char bSkipAnimNotifiers : 1; // 0xa8
};

struct UMaterialExpressionLandscapeLayerBlend : UMaterialExpression {
	TArray<FLayerBlendInput> Layers; // 0x40
	FGuid ExpressionGUID; // 0x50
};

struct UARFaceGeometry : UARTrackedGeometry {
	FVector LookAtTarget; // 0xe8
	bool bIsTracked; // 0xf4
	TMap<EARFaceBlendShape, float> BlendShapes; // 0xf8
};

struct UMaterialExpressionDynamicParameter : UMaterialExpression {
	TArray<FString> ParamNames; // 0x40
	FLinearColor DefaultValue; // 0x50
	uint32_t ParameterIndex; // 0x60
};

struct UKawaiiPhysicsLimitsDataAsset : UDataAsset {
	TArray<FSphericalLimit> SphericalLimits; // 0x30
	TArray<FCapsuleLimit> CapsuleLimits; // 0x40
	TArray<FPlanarLimit> PlanarLimits; // 0x50
};

struct AGameSession : AInfo {
	int32_t MaxSpectators; // 0x328
	int32_t MaxPlayers; // 0x32c
	int32_t MaxPartySize; // 0x330
	char MaxSplitscreensPerConnection; // 0x334
	bool bRequiresPushToTalk; // 0x335
	FName SessionName; // 0x338
};

struct UParticleModuleMeshRotation : UParticleModuleRotationBase {
	FRawDistributionVector StartRotation; // 0x30
	char bInheritParent : 1; // 0x78
};

struct UActorChannel : UMKActorChannelEx {
	AActor* Actor; // 0xa8
	TArray<UObject*> CreateSubObjects; // 0x198
};

struct USettingSubButtonWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UBorder* Border; // 0x250
	UButton* Button_222; // 0x258
	UImage* Image_192; // 0x260
	UTextBlock* Title_Text; // 0x268
	int32_t Index; // 0x270
	FLinearColor DeActive; // 0x274
	FLinearColor Active; // 0x284
	FMulticastInlineDelegate ClickEventDispatcher; // 0x298
	FText Title; // 0x2a8
	ESettingBigType Type; // 0x2c0
	bool IsActive; // 0x2c1
	FLinearColor Over; // 0x2c4
};

struct UParticleModuleLocationPrimitiveCylinder_Seeded : UParticleModuleLocationPrimitiveCylinder {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct ACrossActor : AStaticMeshActor {
	FString UniqueKey; // 0x338
	TArray<FCrossActorManager> SideActors; // 0x348
	TArray<FCrossMeshManager> SideMeshes; // 0x358
};

struct UAISenseEvent_Hearing : UAISenseEvent {
	FAINoiseEvent Event; // 0x28
};

struct UParticleModuleBeamTarget : UParticleModuleBeamBase {
	Beam2SourceTargetMethod TargetMethod; // 0x30
	FName TargetName; // 0x34
	FRawDistributionVector Target; // 0x40
	char bTargetAbsolute : 1; // 0x88
	char bLockTarget : 1; // 0x88
	Beam2SourceTargetTangentMethod TargetTangentMethod; // 0x8c
	FRawDistributionVector TargetTangent; // 0x90
	char bLockTargetTangent : 1; // 0xd8
	FRawDistributionFloat TargetStrength; // 0xe0
	char bLockTargetStength : 1; // 0x110
	float LockRadius; // 0x114
};

struct UBravoHotelSignificanceManager : USignificanceManager {
	FSignificanceCriteriaSetup DefaultCriteriaSetup; // 0x1c0
	bool bIsEnabled; // 0x1e8
	APlayerCameraManager* CachedCameraManager; // 0x1f0
};

struct USoundAttenuation : UObject {
	FSoundAttenuationSettings Attenuation; // 0x28
};

struct USubstanceTexture2D : UTexture2DDynamic {
	USubstanceGraphInstance* ParentInstance; // 0x100
	TextureAddress AddressX; // 0x108
	TextureAddress AddressY; // 0x109
	bool bCooked; // 0x10a
};

struct UMovieScenePrimitiveMaterialTrack : UMovieScenePropertyTrack {
	int32_t MaterialIndex; // 0x88
};

struct ABP-LobbyController_C : ABravoHotelLobbyPlayerController {
	FPointerToUberGraphFrame UberGraphFrame; // 0x740
	UBP-HUDInteractionComponentBase_C* BP-HUDInteractionComponentBase; // 0x748
	FMulticastInlineDelegate EventDispatcher_PlayLobbySound; // 0x750
	FMulticastInlineDelegate EventDispatcher_StopLobbySound; // 0x760
	UMediaSoundComponent* MediaSoundComponent; // 0x770
	UUserWidget* OperationMessageWidget; // 0x778
	ESceneType CurrentSceneType; // 0x780
	UBP-LobbyWidget_Web_C* LobbyWidgetRef; // 0x788
};

struct UMKWorldEx : UObject {
	UWorld* SelfWorld; // 0x38
};

struct UParticleModuleAccelerationConstant : UParticleModuleAccelerationBase {
	FVector Acceleration; // 0x38
};

struct UMaterialExpressionDistanceToNearestSurface : UMaterialExpression {
	FExpressionInput Position; // 0x40
};

struct ABravoHotelAttachedUsableItem : AActor {
	UStaticMeshComponent* WorldStaticMesh; // 0x328
	USkeletalMeshComponent* WorldSkelMesh; // 0x330
	UStaticMeshComponent* ShadowStaticMesh; // 0x338
	USkeletalMeshComponent* ShadowSkelMesh; // 0x340
	bool bTurnOnPhysicsWhenDetach; // 0x348
	TArray<UObject*> LoadedAssets; // 0x350
};

struct UMaterialExpressionMultiply : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UUW-BlackMarket_Character_C : UUserWidget {
	UImage* IMG-BlackMarketCharacter; // 0x248
};

struct UBlendSpaceBase : UAnimationAsset {
	bool bRotationBlendInMeshSpace; // 0x90
	float AnimLength; // 0x94
	FInterpolationParameter InterpolationParam[0x3]; // 0x98
	float TargetWeightInterpolationSpeedPerSec; // 0xb0
	ENotifyTriggerMode NotifyTriggerMode; // 0xb4
	TArray<FPerBoneInterpolation> PerBoneBlend; // 0xb8
	int32_t SampleIndexWithMarkers; // 0xc8
	TArray<FBlendSample> SampleData; // 0xd0
	TArray<FEditorElement> GridSamples; // 0xe0
	FBlendParameter BlendParameters[0x3]; // 0xf0
};

struct UCohTextureUserWrapData : UObject {
	UTexture* Texture; // 0x70
};

struct UMagicLeapARPinComponent : USceneComponent {
	FString ObjectUID; // 0x230
	int32_t UserIndex; // 0x240
	EMagicLeapAutoPinType AutoPinType; // 0x244
	bool bShouldPinActor; // 0x245
	UMagicLeapARPinSaveGame* PinDataClass; // 0x248
	FMulticastInlineDelegate OnPersistentEntityPinned; // 0x250
	FMulticastInlineDelegate OnPersistentEntityPinLost; // 0x260
	FGuid PinnedCFUID; // 0x270
	USceneComponent* PinnedSceneComponent; // 0x280
	UMagicLeapARPinSaveGame* PinData; // 0x288
};

struct UBravoHotelGamePlayStatistics : UObject {
	uint16_t HitScore; // 0x28
	int32_t PickUpCoin; // 0x2c
	FRewardPoint ExpPoint; // 0x30
	float TotalDistanceTraveled; // 0x40
	FMulticastInlineDelegate OnChangedFinalRankDelegate; // 0x48
	uint16_t FinalRank; // 0x5a
	int32_t GainedRP; // 0x5c
	FRewardPoint GoldPoint; // 0x60
	TArray<FRewardItemInfo> RewardItemList; // 0x70
	TArray<FRewardItemInfo> DropedItemList; // 0x80
	float TotalDamage; // 0x90
	float LifeTime; // 0x94
};

struct UUW-Lobby_WeaponInfo_Option_Slot_C : UUserWidget {
	UTextBlock* T_Desc; // 0x248
	UUW-Lobby_WeaponInfo_Option_Slot_Icon_C* UW-Lobby_WeaponInfo_RandomOption_Slot_3; // 0x250
	FItemOption ItemOption; // 0x258
};

struct UMaterialExpressionMaterialProxyReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0x40
	FExpressionInput MaterialProxy; // 0x54
};

struct UMaterialExpressionLandscapeLayerSample : UMaterialExpression {
	FName ParameterName; // 0x40
	float PreviewWeight; // 0x48
	FGuid ExpressionGUID; // 0x4c
};

struct ULightPropagationVolumeBlendable : UObject {
	FLightPropagationVolumeSettings Settings; // 0x30
	float BlendWeight; // 0xa0
};

struct UParticleModuleCollision : UParticleModuleCollisionBase {
	FRawDistributionVector DampingFactor; // 0x30
	FRawDistributionVector DampingFactorRotation; // 0x78
	FRawDistributionFloat MaxCollisions; // 0xc0
	EParticleCollisionComplete CollisionCompletionOption; // 0xf0
	TArray<EObjectTypeQuery> CollisionTypes; // 0xf8
	char bApplyPhysics : 1; // 0x110
	char bIgnoreTriggerVolumes : 1; // 0x110
	FRawDistributionFloat ParticleMass; // 0x118
	float DirScalar; // 0x148
	char bPawnsDoNotDecrementCount : 1; // 0x14c
	char bOnlyVerticalNormalsDecrementCount : 1; // 0x14c
	float VerticalFudgeFactor; // 0x150
	FRawDistributionFloat DelayAmount; // 0x158
	char bDropDetail : 1; // 0x188
	char bCollideOnlyIfVisible : 1; // 0x188
	char bIgnoreSourceActor : 1; // 0x188
	float MaxCollisionDistance; // 0x18c
};

struct ALevelSequenceMediaController : AActor {
	ALevelSequenceActor* Sequence; // 0x330
	UMediaComponent* MediaComponent; // 0x338
	float ServerStartTimeSeconds; // 0x340
};

struct UDestroySessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct USoundNodeDelay : USoundNode {
	float DelayMin; // 0x48
	float DelayMax; // 0x4c
};

struct UBehaviorTreeComponent : UBrainComponent {
	TArray<UBTNode*> NodeInstances; // 0x130
	UBehaviorTree* DefaultBehaviorTreeAsset; // 0x268
};

struct UAISubsystem : UObject {
	UAISystem* AISystem; // 0x30
};

struct UPhysicsSettings : UDeveloperSettings {
	float DefaultGravityZ; // 0x38
	float DefaultTerminalVelocity; // 0x3c
	float DefaultFluidFriction; // 0x40
	int32_t SimulateScratchMemorySize; // 0x44
	int32_t RagdollAggregateThreshold; // 0x48
	float TriangleMeshTriangleMinAreaThreshold; // 0x4c
	bool bEnableShapeSharing; // 0x50
	bool bEnablePCM; // 0x51
	bool bEnableStabilization; // 0x52
	bool bWarnMissingLocks; // 0x53
	bool bEnable2DPhysics; // 0x54
	FRigidBodyErrorCorrection PhysicErrorCorrection; // 0x58
	ESettingsLockedAxis LockedAxis; // 0x8c
	ESettingsDOF DefaultDegreesOfFreedom; // 0x8d
	float BounceThresholdVelocity; // 0x90
	EFrictionCombineMode FrictionCombineMode; // 0x94
	EFrictionCombineMode RestitutionCombineMode; // 0x95
	float MaxAngularVelocity; // 0x98
	float MaxDepenetrationVelocity; // 0x9c
	float ContactOffsetMultiplier; // 0xa0
	float MinContactOffset; // 0xa4
	float MaxContactOffset; // 0xa8
	bool bSimulateSkeletalMeshOnDedicatedServer; // 0xac
	ECollisionTraceFlag DefaultShapeComplexity; // 0xad
	bool bDefaultHasComplexCollision; // 0xae
	bool bSuppressFaceRemapTable; // 0xaf
	bool bSupportUVFromHitResults; // 0xb0
	bool bDisableActiveActors; // 0xb1
	bool bDisableKinematicStaticPairs; // 0xb2
	bool bDisableKinematicKinematicPairs; // 0xb3
	bool bDisableCCD; // 0xb4
	bool bEnableEnhancedDeterminism; // 0xb5
	float AnimPhysicsMinDeltaTime; // 0xb8
	bool bSimulateAnimPhysicsAfterReset; // 0xbc
	float MaxPhysicsDeltaTime; // 0xc0
	bool bSubstepping; // 0xc4
	bool bSubsteppingAsync; // 0xc5
	float MaxSubstepDeltaTime; // 0xc8
	int32_t MaxSubsteps; // 0xcc
	float SyncSceneSmoothingFactor; // 0xd0
	float InitialAverageFrameRate; // 0xd4
	int32_t PhysXTreeRebuildRate; // 0xd8
	TArray<FPhysicalSurfaceName> PhysicalSurfaces; // 0xe0
	FBroadphaseSettings DefaultBroadphaseSettings; // 0xf0
	FChaosPhysicsSettings ChaosSettings; // 0x130
};

struct USoundNodeDistanceCrossFade : USoundNode {
	TArray<FDistanceDatum> CrossFadeInput; // 0x48
};

struct UModularSynthPresetBank : UObject {
	TArray<FModularSynthPresetBankEntry> Presets; // 0x28
};

struct UUW-AttackUserWidget_C : UBravoHotelAttackUserWidget {
	UWidgetAnimation* Enemy_Lv_Motion_FadeOut_Inert; // 0x2a0
	UWidgetAnimation* Enemy_Lv_Motion_FadeIn_Inert; // 0x2a8
	UWidgetAnimation* FadeOut; // 0x2b0
	UOverlay* Enemy_Inert; // 0x2b8
	UHorizontalBox* HorizontalBox_1; // 0x2c0
	UHorizontalBox* HorizontalBox_2; // 0x2c8
	UImage* Image_2; // 0x2d0
	UImage* Image_145; // 0x2d8
	UOverlay* Overlay_2; // 0x2e0
	UOverlay* Overlay_98; // 0x2e8
	AActor* Pawn; // 0x2f0
};

struct UIpNetDriver : UNetDriver {
	char LogPortUnreach : 1; // 0x748
	char AllowPlayerPortUnreach : 1; // 0x748
	uint32_t MaxPortCountToTry; // 0x74c
	uint32_t ServerDesiredSocketReceiveBufferBytes; // 0x75c
	uint32_t ServerDesiredSocketSendBufferBytes; // 0x760
	uint32_t ClientDesiredSocketReceiveBufferBytes; // 0x764
	uint32_t ClientDesiredSocketSendBufferBytes; // 0x768
	double MaxSecondsInReceive; // 0x770
	int32_t NbPacketsBetweenReceiveTimeTest; // 0x778
	float ResolutionConnectionTimeout; // 0x77c
};

struct ACineCameraActor : ACameraActor {
	FCameraLookatTrackingSettings LookatTrackingSettings; // 0x920
};

struct UBravoHotelTeamPositionWidget : UUserWidget {
	ABravoHotelPlayerState* PlayerState; // 0x248
	UCanvasPanel* Canvas_Main; // 0x250
	UCanvasPanel* Canvas_Rot; // 0x258
	bool bIsLocalPlayer; // 0x288
	bool bIsInViewport; // 0x289
	bool IsDisconnected; // 0x28a
	EPlayerBehavior PlayerBehavior; // 0x28b
	int32_t LastIconIndex; // 0x28c
};

struct UDialogueWave : UObject {
	char bMature : 1; // 0x28
	char bOverride_SubtitleOverride : 1; // 0x28
	FString SpokenText; // 0x30
	FString SubtitleOverride; // 0x40
	TArray<FDialogueContextMapping> ContextMappings; // 0x50
	FGuid LocalizationGUID; // 0x60
};

struct USoundSourceBus : USoundWave {
	ESourceBusChannels SourceBusChannels; // 0x308
	float SourceBusDuration; // 0x30c
	char bAutoDeactivateWhenSilent : 1; // 0x310
};

struct UDragDropOperation : UObject {
	FString Tag; // 0x28
	UObject* payload; // 0x38
	UWidget* DefaultDragVisual; // 0x40
	EDragPivot Pivot; // 0x48
	FVector2D Offset; // 0x4c
	bool bUseMoveAnimation; // 0x54
	FMulticastInlineDelegate OnDrop; // 0x58
	FMulticastInlineDelegate OnDragCancelled; // 0x68
	FMulticastInlineDelegate OnDragged; // 0x78
};

struct UMaterialExpressionFunctionOutput : UMaterialExpression {
	FName OutputName; // 0x40
	FString Description; // 0x48
	int32_t SortPriority; // 0x58
	FExpressionInput A; // 0x5c
	char bLastPreviewed : 1; // 0x70
	FGuid ID; // 0x74
};

struct UMovieSceneObjectPropertyTrack : UMovieScenePropertyTrack {
	UObject* PropertyClass; // 0x88
};

struct UUserDefinedCaptureProtocol : UMovieSceneImageCaptureProtocolBase {
	UWorld* World; // 0x58
};

struct UUW-BlackMarket_Slot_Wearable_C : UUW-BlackMarket_Slot_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UButton* BTN-Menu02; // 0x3e0
	UButton* BTN-Menu03; // 0x3e8
	UButton* BTN-Menu04; // 0x3f0
	UButton* BTN-Menu05; // 0x3f8
	UButton* BTN-Menu06; // 0x400
	UCanvasPanel* CP-SlotInfo; // 0x408
	UImage* IMG-BG; // 0x410
	UImage* IMG-BG-Border; // 0x418
	UImage* IMG-Item; // 0x420
	UImage* IMG-Mask; // 0x428
	UImage* IMG-Over; // 0x430
	UImage* IMG-Over-Border; // 0x438
	UOverlay* Menu02; // 0x440
	UOverlay* Menu03; // 0x448
	UOverlay* Menu04; // 0x450
	UOverlay* Menu05; // 0x458
	UOverlay* Menu06; // 0x460
	UOverlay* Overlay_Mask; // 0x468
	UTextBlock* TXT-Armor; // 0x470
	UTextBlock* TXT-Capacity; // 0x478
	UTextBlock* TXT-DecreaseReloadTime; // 0x480
	UTextBlock* TXT-ItemName; // 0x488
	UTextBlock* TXT-Menu01; // 0x490
	UTextBlock* TXT-Menu02; // 0x498
	UTextBlock* TXT-Menu03; // 0x4a0
	UTextBlock* TXT-Menu04; // 0x4a8
	UTextBlock* TXT-Menu05; // 0x4b0
	UTextBlock* TXT-Menu06; // 0x4b8
	UTextBlock* TXT-Type; // 0x4c0
};

struct UEnvQueryTest_PathfindingBatch : UEnvQueryTest_Pathfinding {
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x280
};

struct UMaterialExpressionAtmosphericFogColor : UMaterialExpression {
	FExpressionInput WorldPosition; // 0x40
};

struct ANavigationData : AActor {
	UPrimitiveComponent* RenderingComp; // 0x330
	FNavDataConfig NavDataConfig; // 0x338
	char bEnableDrawing : 1; // 0x3b0
	char bForceRebuildOnLoad : 1; // 0x3b0
	char bAutoDestroyWhenNoNavigation : 1; // 0x3b0
	char bCanBeMainNavData : 1; // 0x3b0
	char bCanSpawnOnRebuild : 1; // 0x3b0
	char bRebuildAtRuntime : 1; // 0x3b0
	ERuntimeGenerationType RuntimeGeneration; // 0x3b4
	float ObservedPathsTickInterval; // 0x3b8
	uint32_t DataVersion; // 0x3bc
	TArray<FSupportedAreaData> SupportedAreas; // 0x4a0
};

struct UAutomationTestSettings : UObject {
	TArray<FString> EngineTestModules; // 0x28
	TArray<FString> EditorTestModules; // 0x38
	FSoftObjectPath AutomationTestmap; // 0x48
	TArray<FEditorMapPerformanceTestDefinition> EditorPerformanceTestMaps; // 0x60
	TArray<FSoftObjectPath> AssetsToOpen; // 0x70
	FBuildPromotionTestSettings BuildPromotionTest; // 0x80
	FMaterialEditorPromotionSettings MaterialEditorPromotionTest; // 0x270
	FParticleEditorPromotionSettings ParticleEditorPromotionTest; // 0x2a0
	FBlueprintEditorPromotionSettings BlueprintEditorPromotionTest; // 0x2b0
	TArray<FString> TestLevelFolders; // 0x2e0
	TArray<FExternalToolDefinition> ExternalTools; // 0x2f0
	TArray<FEditorImportExportTestDefinition> ImportExportTestDefinitions; // 0x300
	TArray<FLaunchOnTestSettings> LaunchOnSettings; // 0x310
	FIntPoint DefaultScreenshotResolution; // 0x320
};

struct UAchievementWriteCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UMasterAudioSubmixCaptureProtocol : UMovieSceneAudioCaptureProtocolBase {
	FString Filename; // 0x58
};

struct UNiagaraParameterCollection : UObject {
	FName Namespace; // 0x28
	TArray<FNiagaraVariable> Parameters; // 0x30
	UNiagaraParameterCollectionInstance* DefaultInstance; // 0x40
	FGuid CompileId; // 0x48
};

struct UBravoHotelWorldTeleportWidget : UUserWidget {
	FVector WorldCenter; // 0x248
	FVector2D WorldSize; // 0x254
	FVector2D BaseMapSize; // 0x25c
};

struct UMaterialExpressionSkyAtmosphereLightIlluminance : UMaterialExpression {
	int32_t LightIndex; // 0x40
	FExpressionInput WorldPosition; // 0x44
};

struct UBP-GrassCollision_Character_C : UBravoHotelGrassCollisionComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb8
	float TextureScale; // 0xc0
	float CollisionArea; // 0xc4
	float LieDistance; // 0xc8
	float DrawDistance; // 0xcc
	UMaterialInstance* Brush; // 0xd0
	float Brush Intensity; // 0xd8
	UMaterialInstance* Eraser; // 0xe0
	float Erase Intensity; // 0xe8
	bool IsTickStart; // 0xec
	ABravoHotelCharacter* TargetCharacter; // 0xf0
};

struct UNavigationGraphNodeComponent : USceneComponent {
	FNavGraphNode Node; // 0x230
	UNavigationGraphNodeComponent* NextNodeComponent; // 0x248
	UNavigationGraphNodeComponent* PrevNodeComponent; // 0x250
};

struct UMKActorEx : UObject {
	EMKReplaySampling ReplaySamplable; // 0x28
	UReplaySampleBase* ReplaySampleClass; // 0x30
	float ReplaySamplingFrequency; // 0x38
	uint32_t ClientReplaySamplingGUID; // 0x3c
	bool bReplayLevelAttached; // 0x44
	TArray<UReplaySampleBase*> ReplaySamplesForPlayback; // 0x68
	AActor* SelfActor; // 0x88
};

struct ALODActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x328
	TMap<UMaterialInterface*, UInstancedStaticMeshComponent*> ImpostersStaticMeshComponents; // 0x330
	UHLODProxy* Proxy; // 0x380
	FName Key; // 0x388
	float LODDrawDistance; // 0x390
	int32_t LODLevel; // 0x394
	TArray<AActor*> SubActors; // 0x398
	char CachedNumHLODLevels; // 0x3a8
};

struct ABattleRoyaleGameMode : ABravoHotelGameMode {
	TArray<APlayerState*> RemovePendingPlayerArray; // 0x590
	EGameViewType GameViewType; // 0x5a0
	EMatchingType MatchingType; // 0x5a1
	int32_t TeamSize; // 0x5a4
	FString Training; // 0x5a8
	FString Clean; // 0x5b8
	int32_t AIGrade; // 0x5c8
	FMulticastInlineDelegate UpdateSurvivalCircleDelegate; // 0x5d0
	TMap<char, FTeamInfo> TeamInfoMap; // 0x620
	char WinnerTeamIndex; // 0x670
	TArray<FName> SendPlayerEndedEvent; // 0x678
	TArray<int32_t> SendPlayerRankedEvent; // 0x688
	APawn* AircraftViewPawnClass; // 0x6b0
	APawn* AircraftFlightPawnClass; // 0x6b8
	bool bAutoStart; // 0x6c0
	float StartingPlayerCountRate; // 0x6c4
	int32_t WaitingTime; // 0x6c8
	int32_t ReadyTime; // 0x6cc
	int32_t DescentDelay; // 0x6d0
	int32_t DescentableTime; // 0x6d4
	ABravoHotelAircraftFlight* AircraftFlight; // 0x6d8
	bool bIsUseAircraft; // 0x6e0
	bool bUseAircraftViewPawn; // 0x6f5
	bool bEndlessGame; // 0x6f6
	TArray<FDamageInfo> DamageInfoArray; // 0x710
	ABravoHotelRedZoneManager* RedZoneManagerClass; // 0x728
	ABravoHotelRedZoneManager* RedZoneManager; // 0x730
	ABHPersonalSupplyBoxManager* PersonalSupplyBoxManagerClass; // 0x7c8
	ABHPersonalSupplyBoxManager* PersonalSupplyBoxManager; // 0x7d0
	FLogBuildCountData DivisionItemCountResult; // 0x7d8
	bool DisivisonComplete; // 0x7e8
	FStandardGroupKeyCountInfo StandardGroupKeyCountInfo; // 0x9d0
	TMap<FName, FAreaSpawnRateInfo> AreaSpawnRateList; // 0xa28
	FAreaSpawnRateInfo BlueZoneSpawnRateInfo; // 0xa78
	FName BlueZoneSpawnRateKey; // 0xb00
	FAreaSpawnRateInfo NoneData; // 0xb08
	TMap<FName, FVehicleAreaSpawnRateInfo> VehicleAreaSpawnRateList; // 0xb90
	FVehicleAreaSpawnRateInfo VehicleBlueZoneSpawnRateInfo; // 0xbe0
	FName VehicleBlueZoneSpawnRateKey; // 0xc58
	FVehicleAreaSpawnRateInfo NoneVehicleData; // 0xc60
	FLocalSpawnRate CustomBlueZoneSpawnRateInfo; // 0xcd8
	TMap<FName, FLocalSpawnRate> CustomAreaSpawnRateList; // 0xd00
	FLocalSpawnRate CustomVehicleBlueZoneSpawnRateInfo; // 0xd50
	TMap<FName, FLocalSpawnRate> CustomVehicleAreaSpawnRateList; // 0xd78
	float ItemDivisionDelay; // 0xdd0
	bool UsingWorldItemSpawnTalbeInBlueZone; // 0xdd4
	bool ItemSpawnInBlueZone; // 0xdd5
	bool UnlimitItemSpawnCnt; // 0xdd6
	int32_t MaxItemDivisionCountAtOnce; // 0xdd8
	bool ItemDivisionLevelLoadComplet; // 0xddc
	bool ItemDivisionGameReady; // 0xddd
	bool UsingMaxPickUpItemSpawnCount; // 0xdde
	int32_t MaxPickUpItemSpawnCount; // 0xde0
	bool UsingMaxVehicleSpawnCount; // 0xde4
	int32_t MaxVehicleSpawnCount; // 0xde8
	int32_t MaxPickUpVehicleSpawnCount; // 0xdec
	bool UsingDynamicMaxPickUpItemSpawnCount; // 0xdf0
	FItemSpawnLimitInfo ItemSpawnLimitInfo; // 0xdf4
	bool GCRecordData; // 0xe08
	FString GCRecordDataTitle; // 0xe10
	bool RecordBuildingData; // 0xe20
	bool RecordPersonalSupplyBoxData; // 0xe21
	int32_t LimitCountOfDamageInfo; // 0xe24
	UCurveFloat* ItemSpawnRateCurve; // 0xe28
	UCurveFloat* VehicleSpawnRateCurve; // 0xe30
	int32_t CurrentSpawnVehicleCount; // 0xe38
	int32_t CurrentDivisionItemCount; // 0xe3c
	TArray<ABravoHotelCharacter*> CheckCharacters; // 0xe58
	TArray<FLoadBuildingInfo> LoadCompleteList; // 0xe78
	TArray<int32_t> AutoBotIds; // 0xe90
	TArray<int32_t> AutoBotInfoSendIDList; // 0xea0
};

struct UNiagaraDataInterfaceGrid2D : UNiagaraDataInterfaceRWBase {
	int32_t NumCellsX; // 0xd0
	int32_t NumCellsY; // 0xd4
	int32_t NumCellsMaxAxis; // 0xd8
	int32_t NumAttributes; // 0xdc
	bool SetGridFromMaxAxis; // 0xe0
	FVector2D WorldBBoxSize; // 0xe4
};

struct UNavigationInvokerComponent : UActorComponent {
	float TileGenerationRadius; // 0xb0
	float TileRemovalRadius; // 0xb4
};

struct USkeletalMeshSimulationComponent : UActorComponent {
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xb8
	AChaosSolverActor* ChaosSolverActor; // 0xc0
	UPhysicsAsset* OverridePhysicsAsset; // 0xc8
	bool bSimulating; // 0xd0
	bool bNotifyCollisions; // 0xd1
	EObjectStateTypeEnum ObjectType; // 0xd2
	float Density; // 0xd4
	float MinMass; // 0xd8
	float MaxMass; // 0xdc
	ECollisionTypeEnum CollisionType; // 0xe0
	float ImplicitShapeParticlesPerUnitArea; // 0xe4
	int32_t ImplicitShapeMinNumParticles; // 0xe8
	int32_t ImplicitShapeMaxNumParticles; // 0xec
	int32_t MinLevelSetResolution; // 0xf0
	int32_t MaxLevelSetResolution; // 0xf4
	int32_t CollisionGroup; // 0xf8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xfc
	FVector InitialLinearVelocity; // 0x100
	FVector InitialAngularVelocity; // 0x10c
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x118
};

struct UParticleModuleLight_Seeded : UParticleModuleLight {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct UBP-CheckWeightMap_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UTextBlock* B_Value; // 0x250
	UTextBlock* Check; // 0x258
	UTextBlock* G_Value; // 0x260
	UImage* Image_166; // 0x268
	UTextBlock* Land; // 0x270
	UTextBlock* Land_2; // 0x278
	UTextBlock* Land_3; // 0x280
	UTextBlock* Land_4; // 0x288
	UTextBlock* Land_5; // 0x290
	UTextBlock* Land_6; // 0x298
	UTextBlock* R_5; // 0x2a0
	UTextBlock* R_7; // 0x2a8
	UTextBlock* R_9; // 0x2b0
	UTextBlock* R_Value; // 0x2b8
	UTextBlock* TextBlock_4; // 0x2c0
	UTextBlock* TextBlock_5; // 0x2c8
	UTextBlock* TextBlock_6; // 0x2d0
	UTextBlock* TextBlock_8; // 0x2d8
	UTextBlock* TextBlock_9; // 0x2e0
	UTextBlock* TextBlock_10; // 0x2e8
	FTimerHandle Timer; // 0x2f0
};

struct UBravoHotelWeightMapData : UDataAsset {
	TArray<char> BitDataArray; // 0x30
	FVector2D WorldSize; // 0x40
	FVector2D WorldCenter; // 0x48
	FVector2D BaseMapSize; // 0x50
	int32_t WeightMapRadiusCheckCount; // 0x58
};

struct UPlatformMediaSource : UMediaSource {
	UMediaSource* MediaSource; // 0x80
};

struct UMaterialExpressionStaticComponentMaskParameter : UMaterialExpressionParameter {
	FExpressionInput Input; // 0x58
	char DefaultR : 1; // 0x6c
	char DefaultG : 1; // 0x6c
	char DefaultB : 1; // 0x6c
	char DefaultA : 1; // 0x6c
};

struct UGizmoTransformChangeStateTarget : UObject {
	TScriptInterface<IToolContextTransactionProvider> TransactionManager; // 0x50
};

struct APlayerState : AMKPlayerStateEx {
	float Score; // 0x330
	int32_t PlayerId; // 0x334
	char Ping; // 0x338
	char bShouldUpdateReplicatedPing : 1; // 0x33a
	char bIsSpectator : 1; // 0x33a
	char bOnlySpectator : 1; // 0x33a
	char bIsABot : 1; // 0x33a
	char bIsInactive : 1; // 0x33a
	char bFromPreviousLevel : 1; // 0x33a
	int32_t StartTime; // 0x33c
	ULocalMessage* EngineMessageClass; // 0x340
	FString SavedNetworkAddress; // 0x350
	FUniqueNetIdRepl UniqueID; // 0x360
	APawn* PawnPrivate; // 0x390
	FString PlayerNamePrivate; // 0x410
};

struct UUW-Lobby_WeaponInfo_Option_Slot_Icon_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_Buff; // 0x250
	UImage* Image_Grade_Color_Line; // 0x258
	FItemOption ItemOption; // 0x260
};

struct UBravoHotelDamageType : UDamageType {
	FName Name; // 0x40
	TArray<FName> Names; // 0x48
	char bApplyHurtCondition : 1; // 0x58
	char bShouldCalculatePerBoneDamage : 1; // 0x58
	char bSpawnBlood : 1; // 0x58
	char bSpawnDust : 1; // 0x58
	char bPlayDamageEffect : 1; // 0x58
	char bDrawBloodPostProcess : 1; // 0x58
	FString IconPath; // 0x60
	TSoftObjectPtr<UPaperSprite> Icon; // 0x70
	FText CauserText; // 0x98
	float MultiplyRatio; // 0xb0
};

struct UBravoHotelCustomizeWardrobeWidget : UUserWidget {
	TArray<FBravoHotelWardrobeDataType> WearableList; // 0x248
};

struct UUW-ListWidget_GainPerk_C : UUW-ListWidget_ItemBase_C {
	UWidgetAnimation* UpAnim; // 0x260
	UWidgetAnimation* LevelUp; // 0x268
	UWidgetAnimation* FadeIn; // 0x270
	UWidgetAnimation* Idle; // 0x278
	UCanvasPanel* CanvasPanel_New; // 0x280
	UImage* Image_336; // 0x288
	UImage* Image_Back; // 0x290
	UOverlay* Overlay_Level; // 0x298
	UTextBlock* PerkLastLevel; // 0x2a0
	UCanvasPanel* PerkSlotHover; // 0x2a8
	URichTextBlock* RichTextBlock_Desc; // 0x2b0
	UTextBlock* T_LV; // 0x2b8
	UTextBlock* T_PerkLevel; // 0x2c0
	UTextBlock* T_PerkName; // 0x2c8
	UTextBlock* TextBlock_1; // 0x2d0
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot; // 0x2d8
	FPerkUIInfo PerkUIInfo; // 0x2e0
	int32_t CurrentLevel; // 0x30c
	int32_t LastLevel; // 0x310
	int32_t PerkLevel; // 0x314
	bool IsPlayingUltimateSound; // 0x318
	FPerkData PerkData; // 0x320
	FPerkInGameData PerInGameData; // 0x400
	FVector2D DefaultPosition; // 0x5c8
};

struct URuntimeVirtualTextureStreamingProxy : UTexture2D {
	FVirtualTextureBuildSettings Settings; // 0xe8
	bool bSinglePhysicalSpace; // 0xf4
	uint32_t BuildHash; // 0xf8
};

struct USoundNodeEnveloper : USoundNode {
	float LoopStart; // 0x48
	float LoopEnd; // 0x4c
	float DurationAfterLoop; // 0x50
	int32_t LoopCount; // 0x54
	char bLoopIndefinitely : 1; // 0x58
	char bLoop : 1; // 0x58
	UDistributionFloatConstantCurve* VolumeInterpCurve; // 0x60
	UDistributionFloatConstantCurve* PitchInterpCurve; // 0x68
	FRuntimeFloatCurve VolumeCurve; // 0x70
	FRuntimeFloatCurve PitchCurve; // 0xf8
	float PitchMin; // 0x180
	float PitchMax; // 0x184
	float VolumeMin; // 0x188
	float VolumeMax; // 0x18c
};

struct UUniformGridSlot : UPanelSlot {
	EHorizontalAlignment HorizontalAlignment; // 0x38
	EVerticalAlignment VerticalAlignment; // 0x39
	int32_t Row; // 0x3c
	int32_t Column; // 0x40
};

struct UTimelineBorder : UBorder {
	FDelegate OnMouseEnterEvent; // 0x270
	FDelegate OnMouseLeaveEvent; // 0x280
};

struct UMovieSceneEventTriggerSection : UMovieSceneEventSectionBase {
	FMovieSceneEventChannel EventChannel; // 0xe0
};

struct URendererOverrideSettings : UDeveloperSettings {
	char bSupportAllShaderPermutations : 1; // 0x38
	char bForceRecomputeTangents : 1; // 0x38
};

struct UParticleModuleOrbitBase : UParticleModule {
	char bUseEmitterTime : 1; // 0x30
};

struct UCameraPostProcessPreset : UObject {
	TArray<UMaterialInterface*> Materials; // 0x28
	FPostProcessSettings Settings; // 0x40
	TArray<UMaterialController*> MaterialControllers; // 0x600
};

struct UBravoHotelAnimInstance : UAnimInstance {
	UAnimSequence* JumpAnim_Unarmed_Moving; // 0x268
	UBravoHotelCharacterMovementComponent* CharacterMovementComponent; // 0x270
	bool bIsJumpAttack; // 0x279
	float LeanInAir; // 0x27c
	UBlendSpaceBase* BS_HandlebarVehicle; // 0x280
	float ParachuteInputRight; // 0x290
	UBlendSpaceBase* SpecialSprintAnimation; // 0x2a0
	UAnimSequence* VehicleAnimAOS; // 0x2a8
	bool LadderIdleMotion; // 0x2b0
	float EquipAnimAlpha; // 0x2b4
	UBlendSpaceBase* VehicleIdleAimOffset; // 0x2b8
	UAnimSequence* JumpAnim_Rifle_Moving; // 0x2c0
	float BS_SprintSpeedLimit; // 0x2cc
	bool bEnableAimOffset; // 0x2d1
	float WaterSurfaceHeight; // 0x2d4
	EThrowingWeaponState ThrowingWeaponState; // 0x2e9
	float TurnInPlaceBlendOutTime; // 0x2ec
	float RightArmAnimAlpha; // 0x2f4
	bool bIsEquippingThrowWeapon; // 0x2f8
	bool LadderIdleIsLeft; // 0x300
	bool bEnableSprintAimOffset; // 0x301
	bool bIsSprintStop; // 0x302
	bool bIsFreeLook; // 0x304
	float DebuffAlpha_Burn_UpperBody; // 0x30c
	UAnimSequence* CurrentADSAnim; // 0x310
	UAnimSequence* VehicleUnarmedAnimStand; // 0x320
	bool bIsPlayingCollideWeaponMontage; // 0x328
	UAnimSequence* JumpAnim_Rifle_NotMoving; // 0x330
	int32_t IdleNum; // 0x338
	float HandlebarSpeed; // 0x340
	float VehicleADSBlendDirectTime; // 0x344
	float AimOffsetAlpha; // 0x34c
	UAnimSequence* ThrowingWeapon_Prone_PinOff_Idle_ThrowUnder; // 0x350
	UAnimSequence* WeaponHandAnim_Crouch; // 0x358
	float LeanAcceleration; // 0x360
	float DescentForwardPicthMin; // 0x370
	float BS_IdleSpeed; // 0x374
	bool bIsProneColliding; // 0x37c
	bool bIsLocallyPlaying; // 0x37e
	UAnimSequence* JumpAnim_Pistol_Moving; // 0x380
	bool bMovedWhileMontage; // 0x388
	UParticleSystem* ParticleSystem_WaterDust; // 0x390
	bool bUseVehicleAimingAimOffset; // 0x398
	UAnimSequence* SecondaryWeapon_Stand_Idle; // 0x3a0
	UAnimSequence* CollideUpsideAnim; // 0x3b0
	FRotator FinalSwimRotation; // 0x3b8
	float LeanRotation; // 0x3c4
	bool bIsHandlebar; // 0x3c9
	UAnimSequence* ThrowingWeapon_Prone_PinOff_Idle_ThrowOver; // 0x3d0
	float BS_SprintSpeed; // 0x3d8
	bool bIsCrouch; // 0x3dc
	int32_t HeadBangingAnimIndex; // 0x3e0
	float EvaluateAnimSequence; // 0x3e8
	float DoorAnimAlpha; // 0x3f0
	UAnimSequence* ToCriticalTime; // 0x3f8
	bool bEnableDriverIK_HandR; // 0x400
	float AOS_Weight; // 0x404
	bool bEnableLadderIK_HandR; // 0x408
	float AimOffsetInterpSpeed; // 0x40c
	float DebuffAlpha_Hurt_Additive; // 0x410
	float TurnInPlaceRepeatTriggerTime; // 0x418
	float TurnInPlaceRepeatTimeCrouch; // 0x41c
	UAnimSequence* ThrowingWeapon_Prone_Idle; // 0x428
	bool bEnableDriverIK_HandL; // 0x448
	bool bIsADS; // 0x450
	FBravoHotelFallingAnimParameters FallingAnimParams; // 0x458
	bool bUseRightFootAnimation; // 0x464
	bool bIsPlayingWeaponMontage; // 0x465
	float VehicleADSBlendTime; // 0x468
	UAnimSequence* MeleeWeapon_Stand_Idle; // 0x470
	bool bIsFallingOrLanding; // 0x479
	float AOS_Weight_InterpSpeed; // 0x47c
	bool bIsInVehicle; // 0x480
	FTurnAnims TurnInPlaceInfo; // 0x488
	UAnimSequence* JumpAnimSequence_Rifle; // 0x888
	UBlendSpaceBase* SpecialProneAnimation; // 0x890
	UBlendSpaceBase* VehicleAimBlending; // 0x898
	bool IsLadderAnim; // 0x8a0
	UAnimSequence* ThrowingWeapon_Crouch_Idle; // 0x8a8
	float DriverAimOffsetAlpha; // 0x8b0
	UAnimSequence* ThrowingWeapon_Crouch_PinOff_Idle_Additive; // 0x8c0
	FVector2D CharacterRotationCorrectionValueByLeanState; // 0x8c8
	float HeadBangingAlpha; // 0x8d0
	EGrenadeThrowingType GrenadeThrowingType; // 0x8d4
	bool IsVehicleAimingMotion; // 0x8d5
	bool bIsProne; // 0x8d7
	float UpperBodySlotAlpha; // 0x8d8
	FVector LadderIKLocation_FootL; // 0x8dc
	UAnimSequence* WeaponHandAnim; // 0x8e8
	bool bIsCriticalTime; // 0x8f0
	UBlendSpaceBase* VehicleUnderThrowAimOffset; // 0x8f8
	float VehicleAOSBlendingPlayRate; // 0x90c
	float WeaponMontageCollideAlpha; // 0x910
	float VehicleAOSBlendingAngle; // 0x914
	UAnimSequence* ThrowingWeapon_Stand_PinOff_Idle_Additive; // 0x920
	float DownsideBlendTime; // 0x934
	bool bEnableLadderIK_FootL; // 0x944
	UAnimSequence* JumpAnimSequence_Unarmed; // 0x950
	UAnimSequence* ThrowingWeapon_Stand_PinOff_Idle; // 0x958
	float SwimDirection; // 0x960
	float HitPredictedZ; // 0x964
	EMovementDirection MovementDirection; // 0x968
	bool bUseVehicleStandAnimation; // 0x969
	UAnimSequence* ThrowingWeapon_Stand_ThrowUnder_Idle; // 0x970
	UAnimSequence* AS_Ladder_Up_Loop; // 0x978
	UAnimSequence* VehicleHandlingRightAnim; // 0x988
	bool bUseSpecialCrouchSprintAnimation; // 0x991
	UAnimSequence* SecondaryWeapon_Crouch_Idle; // 0x998
	float CastingRemainTime; // 0x9a8
	UAnimSequence* VehicleHandlingIdleAnim; // 0x9b0
	FVector2D AimOffset; // 0x9c0
	UAnimSequence* SpecialSprintReadyAnimation; // 0x9e0
	bool bTurnInPlaceRepeatCheat; // 0x9e8
	bool IsLadderSliding; // 0x9f4
	bool bIsMelee; // 0x9f5
	UAnimSequence* MeleeWeapon_Crouch_Idle; // 0x9f8
	UAnimSequence* Resuscitated; // 0xa08
	UAnimSequence* JumpAnimSequence_Pistol; // 0xa10
	UAnimSequence* VehicleAnimIdle; // 0xa18
	bool bUseSprintAnimation; // 0xa20
	float RightSteeringPlayRate; // 0xa24
	bool bUseSpecialSprintAnimation; // 0xa28
	float VehicleAimingBlendTime; // 0xa2c
	bool bIsClimbing; // 0xa30
	bool bIsAimingDownside; // 0xa31
	UAnimSequence* WeaponHandAnim_Prone; // 0xa38
	bool bUseFallingAnimation; // 0xa4c
	UAnimSequence* ThrowingWeapon_Crouch_ThrowUnder_Idle; // 0xa50
	UAnimSequence* CriticalTimeIdle; // 0xa60
	UAnimSequence* CollideDownsideAnim; // 0xa68
	float WeaponCollideAlpha; // 0xa70
	float HeadBangingCurrentPlayRate; // 0xa74
	float SprintReadyEnteredTime; // 0xa78
	UAnimSequence* CurrentAOSAnim; // 0xa80
	UAnimSequence* CollideProneAnim; // 0xa90
	UAnimSequence* VehicleUnarmedAnimIdle; // 0xaa8
	float FootPositionDirection; // 0xab0
	bool bLockRotation; // 0xab4
	UAnimSequence* JumpAnim_Pistol_NotMoving; // 0xab8
	bool bIsUnarmedHeadBanging; // 0xac0
	float ThrowWeaponCookingAnimAlpha; // 0xac8
	bool bUseSpecialProneAnimation; // 0xacd
	UAnimSequence* ThrowingWeapon_Stand_Idle; // 0xad0
	bool bIsResuscitating; // 0xad8
	UAnimMontage* DescentBackwardMontage; // 0xae0
	UBlendSpaceBase* SpecialCrouchSprintAnimation; // 0xae8
	FVector LadderIKLocation_HandL; // 0xafc
	float DebuffAlpha_Hurt_Layered; // 0xb08
	bool bIsLeftSteering; // 0xb0f
	float BS_DescentRotationInput; // 0xb10
	float LeftSteeringPlayRate; // 0xb14
	float ParachuteInputForward; // 0xb18
	bool bIsAmplifier; // 0xb1c
	bool bIsKnockbackRolling; // 0xb24
	float AimOffsetBlendTime; // 0xb28
	bool IsPawnOnLadder; // 0xb2c
	bool bIsAirWalking; // 0xb2d
	float DescentIdlePicthMin; // 0xb30
	bool bIsVehicleDriver; // 0xb34
	float WeaponHandAnimAlpha; // 0xb38
	bool bIsWeaponColliding; // 0xb3d
	float Direction; // 0xb40
	float DebuffAlpha_Burn_FullBody; // 0xb48
	UAnimSequence* VehicleAnimIdleForMontagePlay; // 0xb50
	float Hurt_Additive_RightHandAlpha; // 0xb58
	UAnimSequence* VehicleHandlingLeftAnim; // 0xb60
	FVector LadderIKLocation_FootR; // 0xb70
	bool bUsePredictedAirTime; // 0xb7c
	float TurnInPlaceRepeatTime; // 0xb80
	bool bIsAccelerating; // 0xb84
	UAnimSequence* JumpAnim_Unarmed_NotMoving; // 0xb88
	EWeaponAnimationType WeaponAnimType; // 0xb90
	bool bUnderWaterSurface; // 0xb91
	bool bCanEnterSprintReadyState; // 0xb92
	float UseSprintAnimBlendTime; // 0xb94
	float TurnInPlaceBlendInTime; // 0xb98
	ABravoHotelCharacter* Character; // 0xba0
	UAnimSequence* ThrowingWeapon_Stand_ThrowUnder_Idle_Additive; // 0xba8
	UAnimSequence* ThrowingWeapon_Stand_Idle_Under; // 0xbb0
	bool bMoving; // 0xbb8
	float HandlebarDirection; // 0xbbc
	UAnimSequence* ThrowingWeapon_Crouch_ThrowUnder_Idle_Additive; // 0xbc8
	bool bEnableLadderIK_HandL; // 0xbd0
	float VehicleAimingBlendDirectTime; // 0xbd4
	UAnimSequence* MeleeWeapon_Prone_Idle; // 0xbe8
	float FootPosition; // 0xbf8
	bool bHitPredictedInAirTime; // 0xc00
	UBlendSpaceBase* VehicleAimingAimOffset; // 0xc08
	float TurnInPlaceRepeatTimeProne; // 0xc10
	float SwimTransformAlpha; // 0xc14
	float LadderBlendTime; // 0xc18
	float TurnInPlaceRepeatAngle; // 0xc20
	UAnimSequence* ThrowingWeapon_Crouch_PinOff_Idle; // 0xc28
	bool bIsParachuteLanding; // 0xc30
	float TurnInPlaceRepeatTriggerAngle; // 0xc34
	bool bIsIdleSteering; // 0xc39
	float ExplicitTime_FallingAnim; // 0xc3c
	bool bIsRightSteering; // 0xc40
	float FallSpeed; // 0xc48
	UAnimSequence* WeaponHandAnim_InVehicle; // 0xc50
	EWeaponType WeaponType; // 0xc58
	bool bEnableLadderIK_FootR; // 0xc59
	FVector LadderIKLocation_HandR; // 0xc5c
	ESimpleWeaponAnimationType SimpleWeaponAnimType; // 0xc6c
};

struct UMovieSceneGeometryCacheSection : UMovieSceneSection {
	FMovieSceneGeometryCacheParams Params; // 0xe0
};

struct UMaterialExpressionBlackBody : UMaterialExpression {
	FExpressionInput Temp; // 0x40
};

struct UMaterialExpressionArctangent2Fast : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct UAISense : UObject {
	float DefaultExpirationAge; // 0x28
	EAISenseNotifyType NotifyType; // 0x2c
	char bWantsNewPawnNotification : 1; // 0x30
	char bAutoRegisterAllPawnsAsSources : 1; // 0x30
	UAIPerceptionSystem* PerceptionSystemInstance; // 0x38
};

struct USlateAccessibleWidgetData : UObject {
	bool bCanChildrenBeAccessible; // 0x28
	ESlateAccessibleBehavior AccessibleBehavior; // 0x29
	ESlateAccessibleBehavior AccessibleSummaryBehavior; // 0x2a
	FText AccessibleText; // 0x30
	FDelegate AccessibleTextDelegate; // 0x48
	FText AccessibleSummaryText; // 0x58
	FDelegate AccessibleSummaryTextDelegate; // 0x70
};

struct UUW-RewardGoldSlot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Ani_Gold; // 0x250
	UTextBlock* 1; // 0x258
	UTextBlock* 10; // 0x260
	UTextBlock* 100; // 0x268
	UTextBlock* 1000; // 0x270
	UImage* BonusBG; // 0x278
	UImage* BrightSpot_01; // 0x280
	UImage* BrightSpot_02; // 0x288
	UImage* BrightSpot_03; // 0x290
	UImage* BrightSpot_04; // 0x298
	UImage* BrightSpot_05; // 0x2a0
	UTextBlock* Empty; // 0x2a8
	UImage* Glow_01; // 0x2b0
	UImage* Gold; // 0x2b8
	UImage* Image_7; // 0x2c0
	UImage* Image_11; // 0x2c8
	UImage* Image_14; // 0x2d0
	UImage* Image_15; // 0x2d8
	UImage* Image_16; // 0x2e0
	UImage* Image_17; // 0x2e8
	UImage* Image_18; // 0x2f0
	UImage* Image_20; // 0x2f8
	UImage* Image_21; // 0x300
	UImage* Image_22; // 0x308
	UImage* Image_23; // 0x310
	UImage* Image_335; // 0x318
	UImage* Image_1473; // 0x320
	UImage* Light; // 0x328
	UImage* Light_01; // 0x330
	UImage* Light_02; // 0x338
	UImage* Light_03; // 0x340
	UImage* Light_04; // 0x348
	UImage* Light_05; // 0x350
	UImage* Light_06; // 0x358
	UTextBlock* PickUpGold; // 0x360
	UImage* RIng_Glow_01; // 0x368
	UTextBlock* TextBlock_4; // 0x370
	UImage* TextLight_2; // 0x378
	UImage* TextLight_3; // 0x380
	int32_t Save; // 0x388
	bool NewVar_1; // 0x38c
	bool IsStopSound; // 0x38d
	float LoopSountStartTime; // 0x390
	FAudioPlayingHandle LoopSound; // 0x394
	float LoopSountEndTime; // 0x398
	float 1StartTime; // 0x39c
	float 10StartTime; // 0x3a0
	float 100StartTime; // 0x3a4
	float 1000StartTime; // 0x3a8
	float FinStartTime; // 0x3ac
};

struct UUW-Lobby_Craft_Success_Perk_Slot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* perk_Icon_Scale; // 0x250
	UHorizontalBox* HorizontalBox_Rarity; // 0x258
	UImage* Image; // 0x260
	UImage* Image_2; // 0x268
	UImage* Image_3; // 0x270
	UImage* Image_4; // 0x278
	UImage* Image_5; // 0x280
	UImage* Image_6; // 0x288
	UImage* Image_7; // 0x290
	UImage* Image_328; // 0x298
	UImage* Img_GradeBG; // 0x2a0
	UImage* Img_Icon; // 0x2a8
	FItemOption ItemOptionInfo; // 0x2b0
};

struct UMaterialExpressionArctangentFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UParticleModuleTypeDataMesh : UParticleModuleTypeDataBase {
	UStaticMesh* Mesh; // 0x30
	float LODSizeScale; // 0x40
	char bUseStaticMeshLODs : 1; // 0x44
	char CastShadows : 1; // 0x44
	char DoCollisions : 1; // 0x44
	EMeshScreenAlignment MeshAlignment; // 0x45
	char bOverrideMaterial : 1; // 0x46
	char bOverrideDefaultMotionBlurSettings : 1; // 0x46
	char bEnableMotionBlur : 1; // 0x46
	FRawDistributionVector RollPitchYawRange; // 0x48
	EParticleAxisLock AxisLockOption; // 0x90
	char bCameraFacing : 1; // 0x91
	EMeshCameraFacingUpAxis CameraFacingUpAxisOption; // 0x92
	EMeshCameraFacingOptions CameraFacingOption; // 0x93
	char bApplyParticleRotationAsSpin : 1; // 0x94
	char bFaceCameraDirectionRatherThanPosition : 1; // 0x94
	char bCollisionsConsiderPartilceSize : 1; // 0x94
};

struct UMaterialExpressionShadowReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Shadow; // 0x54
};

struct AGeometryCollectionRenderLevelSetActor : AActor {
	UVolumeTexture* TargetVolumeTexture; // 0x328
	UMaterial* RayMarchMaterial; // 0x330
	float SurfaceTolerance; // 0x338
	float Isovalue; // 0x33c
	bool Enabled; // 0x340
	bool RenderVolumeBoundingBox; // 0x341
};

struct UBravoHotelInventoryPerkWidget : UUserWidget {
	ABravoHotelCharacter* PlayerCharacter; // 0x248
	FPerkUIInfo UltimatePerkInfo; // 0x250
	UWidget* LastHoverWidget; // 0x280
	UWidget* OverlayUltimate; // 0x288
	UWidget* VerticalBoxHealth; // 0x290
	UWidget* VerticalBoxPower; // 0x298
	UWidget* VerticalBoxSpeed; // 0x2a0
	UOverlay* Over_CoolTime; // 0x2a8
	UTextBlock* T_CoolTime; // 0x2b0
	UImage* IMG_CoolTime; // 0x2b8
	UImage* Img_Active; // 0x2c0
	UImage* IMG_CanActive; // 0x2c8
	UTextBlock* T_RemainCount; // 0x2d8
	bool bCanChangePerkDeck; // 0x2e0
};

struct UNiagaraSystem : UFXSystemAsset {
	bool bDumpDebugSystemInfo; // 0x31
	bool bDumpDebugEmitterInfo; // 0x32
	char bFixedBounds : 1; // 0x34
	UNiagaraEffectType* EffectType; // 0x38
	bool bOverrideScalabilitySettings; // 0x40
	TArray<FNiagaraSystemScalabilityOverride> ScalabilityOverrides; // 0x48
	FNiagaraSystemScalabilityOverrides SystemScalabilityOverrides; // 0x58
	TArray<FNiagaraEmitterHandle> EmitterHandles; // 0x68
	TArray<UNiagaraParameterCollectionInstance*> ParameterCollectionOverrides; // 0x78
	UNiagaraScript* SystemSpawnScript; // 0x88
	UNiagaraScript* SystemUpdateScript; // 0x90
	FNiagaraSystemCompiledData SystemCompiledData; // 0xa8
	FNiagaraUserRedirectionParameterStore ExposedParameters; // 0x300
	FBox FixedBounds; // 0x408
	bool bAutoDeactivate; // 0x424
	float WarmupTime; // 0x428
	int32_t WarmupTickCount; // 0x42c
	float WarmupTickDelta; // 0x430
	bool bHasSystemScriptDIsWithPerInstanceData; // 0x434
	TArray<FName> UserDINamesReadInSystemScripts; // 0x438
};

struct UUW-ScenarioQuestCell_Sub_C : UUserWidget {
	UImage* Complete; // 0x248
	UImage* Image_161; // 0x250
	UWidgetSwitcher* WidgetSwitcher_2; // 0x258
};

struct UGizmoLocalVec2ParameterSource : UGizmoBaseVec2ParameterSource {
	FVector2D Value; // 0x48
	FGizmoVec2ParameterChange LastChange; // 0x50
};

struct ALandscapeMeshProxyActor : AActor {
	ULandscapeMeshProxyComponent* LandscapeMeshProxyComponent; // 0x328
};

struct UBravoHotelDestructibleComponent : UBravoHotelStaticMeshComponent {
	TArray<UBravoHotelDamageType*> AllowedDamageType; // 0x568
	bool bForceDestructionByVehicleDamage; // 0x578
	float ImpulseStrength; // 0x57c
	float hp; // 0x580
	int32_t CurrentHP; // 0x584
	UAkAudioEvent* DestructedSound; // 0x588
	bool bIsWindowComponent; // 0x590
	ADestructibleActor* DestructibleActorClass; // 0x598
	TSoftObjectPtr<UDestructibleMesh> DestructibleMesh; // 0x5a0
	bool bIsDestruct; // 0x605
};

struct UAnimSequence : UAnimSequenceBase {
	int32_t NumFrames; // 0xb0
	TArray<FTrackToSkeletonMap> TrackToSkeletonMapTable; // 0xb8
	UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xd8
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xe0
	EAdditiveAnimationType AdditiveAnimType; // 0x158
	EAdditiveBasePoseType RefPoseType; // 0x159
	UAnimSequence* RefPoseSeq; // 0x160
	int32_t RefFrameIndex; // 0x168
	FName RetargetSource; // 0x16c
	EAnimInterpolationType Interpolation; // 0x174
	bool bEnableRootMotion; // 0x175
	ERootMotionRootLock RootMotionRootLock; // 0x176
	bool bForceRootLock; // 0x177
	bool bUseNormalizedRootMotionScale; // 0x178
	bool bRootMotionSettingsCopiedFromMontage; // 0x179
	TArray<FAnimSyncMarker> AuthoredSyncMarkers; // 0x180
};

struct UPhysicsCollisionHandler : UObject {
	float ImpactThreshold; // 0x28
	float ImpactReFireDelay; // 0x2c
	USoundBase* DefaultImpactSound; // 0x30
	float LastImpactSoundTime; // 0x38
};

struct UBTTask_RunBehavior : UBTTaskNode {
	UBehaviorTree* BehaviorAsset; // 0x70
};

struct ULevelSequenceBurnIn : UUserWidget {
	FLevelSequencePlayerSnapshot FrameInformation; // 0x248
	ALevelSequenceActor* LevelSequenceActor; // 0x300
};

struct UMutableMaskOutCache : UObject {
	TMap<FString, FString> Materials; // 0x28
	TMap<FString, FMaskOutTexture> Textures; // 0x78
};

struct UInteractiveTool : UObject {
	UInputBehaviorSet* InputBehaviors; // 0x48
	TArray<UObject*> ToolPropertyObjects; // 0x50
};

struct UUW-MatchEnd_Ranking_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* FadeIn3; // 0x250
	UWidgetAnimation* FadeIn2; // 0x258
	UWidgetAnimation* RankDown; // 0x260
	UWidgetAnimation* RankUp; // 0x268
	UWidgetAnimation* FadeOut; // 0x270
	UWidgetAnimation* FadeIn; // 0x278
	UButton* Button_DeathCam; // 0x280
	UButton* Button_Exit; // 0x288
	UButton* Button_Report; // 0x290
	UButton* Button_Spectate; // 0x298
	UImage* Image; // 0x2a0
	UImage* Image_2; // 0x2a8
	UImage* Image_3; // 0x2b0
	UImage* Image_4; // 0x2b8
	UImage* Image_5; // 0x2c0
	UImage* Image_6; // 0x2c8
	UImage* Image_7; // 0x2d0
	UImage* Image_8; // 0x2d8
	UImage* Image_135; // 0x2e0
	UImage* Image_149; // 0x2e8
	UImage* Image_239; // 0x2f0
	UImage* Image_314; // 0x2f8
	UImage* Image_377; // 0x300
	UImage* Image_444; // 0x308
	UImage* Image_477; // 0x310
	UImage* Image_518; // 0x318
	UImage* Image_531; // 0x320
	UImage* Image_745; // 0x328
	UImage* Image_992; // 0x330
	UImage* Image_1373; // 0x338
	UImage* Image_1459; // 0x340
	UImage* Image_1506; // 0x348
	UImage* Image_1508; // 0x350
	UImage* Image_1925; // 0x358
	UImage* Image_NextTireIcon; // 0x360
	UImage* Light_01; // 0x368
	UImage* Light_02; // 0x370
	UImage* Light_03; // 0x378
	UImage* Light_04; // 0x380
	UImage* Light_05; // 0x388
	UImage* Light_06; // 0x390
	UImage* Light_07; // 0x398
	UImage* Light_08; // 0x3a0
	UOverlay* Overlay_Rank; // 0x3a8
	UOverlay* Overlay_Report; // 0x3b0
	UOverlay* Overlay_Spectate; // 0x3b8
	UProgressBar* ProgressBar_Current; // 0x3c0
	UProgressBar* ProgressBar_Down; // 0x3c8
	UProgressBar* ProgressBar_Up; // 0x3d0
	UScrollBox* ScrollBox_GoldList; // 0x3d8
	UScrollBox* ScrollBox_ItemList; // 0x3e0
	USizeBox* SizeBox_8; // 0x3e8
	USpacer* Spacer_6018; // 0x3f0
	USpacer* Spacer_6217; // 0x3f8
	USpacer* Spacer_Center; // 0x400
	UTextBlock* T_RemainTime; // 0x408
	UCanvasPanel* team_kill; // 0x410
	UCanvasPanel* Team_Revives; // 0x418
	UTextBlock* Text_Report; // 0x420
	UTextBlock* TextBlock_1425; // 0x428
	UTextBlock* TextBlock_CurrentRP; // 0x430
	UTextBlock* TextBlock_ItemCount; // 0x438
	UTextBlock* TextBlock_Kill; // 0x440
	UTextBlock* TextBlock_MatchRP; // 0x448
	UTextBlock* TextBlock_NextRP; // 0x450
	UTextBlock* TextBlock_Rank; // 0x458
	UTextBlock* TextBlock_Resuscitates; // 0x460
	UTextBlock* TextBlock_Title; // 0x468
	UTextBlock* TextBlock_TotalGold; // 0x470
	UTextBlock* TextBlock_TotalTeamCount; // 0x478
	UUW-MatchEnd_RewardSlot_C* UW-MatchEnd_RewardSlot; // 0x480
	UUW-MatchEnd_RewardSlot_C* UW-MatchEnd_RewardSlot_C; // 0x488
	UUW-MatchEnd_RewardSlot_C* UW-MatchEnd_RewardSlot_C_1; // 0x490
	UUW-MatchEnd_RewardSlot_C* UW-MatchEnd_RewardSlot_C_2; // 0x498
	UUW-RewardGoldSlot_C* UW-RewardGoldSlot; // 0x4a0
	UVerticalBox* VerticalBox_188; // 0x4a8
	FMatchEndFinalResult FinalResultData; // 0x4b0
	ABravoHotelPlayerState* PlayerState; // 0x4b8
	FTimerHandle Timehandle_Rank; // 0x4c0
	int32_t PlayerOriRP; // 0x4c8
	int32_t TargetRP; // 0x4cc
	int32_t CurrentRP; // 0x4d0
	int32_t NextTireRP; // 0x4d4
	bool Increase; // 0x4d8
	int32_t CurrentTierID; // 0x4dc
	bool bMaxPrograssbar; // 0x4e0
	UUW-MatchEndWidget_C* MatchEndWidgetRef; // 0x4e8
	int32_t RandomGold; // 0x4f0
	FTimerHandle GoldHandle; // 0x4f8
	bool IsWinningCam; // 0x500
	int32_t GainGoldValue; // 0x504
	FTimerHandle GainGoldHandle; // 0x508
	FAudioPlayingHandle StartSound; // 0x510
};

struct USteamGetFriendsCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UUW-Tutorial_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Bg; // 0x250
	UButton* btn_Cancel; // 0x258
	UButton* btn_OK; // 0x260
	UButton* Button_Focus; // 0x268
	UButton* Button_Focus2; // 0x270
	UCanvasPanel* CanvasPanel_Exit; // 0x278
	UHorizontalBox* HorizontalBox_1; // 0x280
	UImage* Image_2; // 0x288
	UImage* Image_223; // 0x290
	UImage* Img_Movie; // 0x298
	URichTextBlock* RichTextBlock_244; // 0x2a0
	UMediaPlayer* MediaPlayer; // 0x2a8
	bool bPopup; // 0x2b0
	UMediaSoundComponent* MediaSoundComp; // 0x2b8
	float GammaIntensity; // 0x2c0
	UBP_GameSettings_C* Game Settings; // 0x2c8
	FTimerHandle SkipNoticeTimer; // 0x2d0
	UMediaTexture* MediaTexture; // 0x2d8
	UFileMediaSource* Media; // 0x2e0
	bool NextScene; // 0x2e8
};

struct UInterpFilter : UObject {
	FString Caption; // 0x28
};

struct UParticleModuleLocationPrimitiveSphere_Seeded : UParticleModuleLocationPrimitiveSphere {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xe0
};

struct ABHPersonalSupplyBox : AActor {
	bool NeedInit; // 0x328
	UBoxComponent* RootBoxComponent; // 0x338
	USphereComponent* InteractiveSphereComponent; // 0x340
	UBoxComponent* InteractiveCancleSphereComponent; // 0x348
	FName BoxName; // 0x350
	TArray<int32_t> RelatedPlayerIds; // 0x358
	ABHPersonalSupplyBoxDummy* RefClientDummy; // 0x368
	EBoxStateType CurrentStateType; // 0x371
	bool CheckRePosition; // 0x372
	FTimerHandle TimeHandle_CheckRePosition; // 0x378
	int32_t CustomIndex; // 0x380
	bool TraceLand; // 0x384
	FTimerHandle TimerHandle_Destroy; // 0x388
};

struct UBHStationaryCharInfo : UActorComponent {
	bool bLocalCharacterInReplay; // 0xc0
	FPerkDeckSelectInfo CurrentPerkDeckSelectInfo; // 0xc8
	APlayerState* SavedPlayerState; // 0xe0
	int32_t ParachuteSkinIndex; // 0xe8
	bool bDisconnected; // 0xec
	APlayerState* DisconnectedPlayerState; // 0xf0
	bool IsClientTeam; // 0xf8
};

struct UBTComposite_SimpleParallel : UBTCompositeNode {
	EBTParallelMode FinishMode; // 0x90
};

struct UDialogueVoice : UObject {
	EGrammaticalGender gender; // 0x28
	EGrammaticalNumber Plurality; // 0x29
	FGuid LocalizationGUID; // 0x2c
};

struct UInAppPurchaseQueryCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UCompositionGraphCaptureProtocol : UMovieSceneImageCaptureProtocolBase {
	FCompositionGraphCapturePasses IncludeRenderPasses; // 0x58
	bool bCaptureFramesInHDR; // 0x68
	int32_t HDRCompressionQuality; // 0x6c
	EHDRCaptureGamut CaptureGamut; // 0x70
	FSoftObjectPath PostProcessingMaterial; // 0x78
	bool bDisableScreenPercentage; // 0x90
	UMaterialInterface* PostProcessingMaterialPtr; // 0x98
};

struct UBravoHotelActionComponent : UActorComponent {
	char bWalking : 1; // 0xc8
	char bSprinting : 1; // 0xc8
	char bIsProned : 1; // 0xc8
	char bIsJumping : 1; // 0xc8
	char bIsKicking : 1; // 0xc8
	char bIsAirWalking : 1; // 0xc8
	char bWantsToRocketJump : 1; // 0xc8
	char bWantsToMeteorJump : 1; // 0xc8
	char bWantsToMeteorStrike : 1; // 0xc9
	char bWantsToJetpack : 1; // 0xc9
	char bWantsToJetpackAim : 1; // 0xc9
	char CustomBuoyancySwimMode : 1; // 0xc9
	ELeanState LeanState; // 0xca
	EFireType FireType; // 0xcb
	EGrenadeThrowingType ThrowingType; // 0xcc
	UAnimMontage* ReplicatedAnimMontage; // 0xd0
	UAnimMontage* ReplicatedAnimMontage_FPP; // 0xd8
	bool bIsSliding; // 0xe0
	bool bIsRolling; // 0xe1
	UBravoHotelCharacterMovementComponent* BravoHotelCharacterMovement; // 0xe8
};

struct UListView : UListViewBase {
	EOrientation Orientation; // 0x2d8
	ESelectionMode SelectionMode; // 0x2d9
	EConsumeMouseWheel ConsumeMouseWheel; // 0x2da
	bool bClearSelectionOnClick; // 0x2db
	bool bIsFocusable; // 0x2dc
	float EntrySpacing; // 0x2e0
	bool bReturnFocusToSelection; // 0x2e4
	TArray<UObject*> ListItems; // 0x2e8
	FMulticastInlineDelegate BP_OnEntryInitialized; // 0x308
	FMulticastInlineDelegate BP_OnItemClicked; // 0x318
	FMulticastInlineDelegate BP_OnItemDoubleClicked; // 0x328
	FMulticastInlineDelegate BP_OnItemIsHoveredChanged; // 0x338
	FMulticastInlineDelegate BP_OnItemSelectionChanged; // 0x348
	FMulticastInlineDelegate BP_OnItemScrolledIntoView; // 0x358
};

struct ULowEntryBitDataWriter : UObject {
	TArray<char> Bytes; // 0x28
	char CurrentByte; // 0x38
	int32_t CurrentBytePosition; // 0x3c
};

struct UNiagaraSimulationStageGeneric : UNiagaraSimulationStageBase {
	ENiagaraIterationSource IterationSource; // 0x38
	int32_t Iterations; // 0x3c
	char bSpawnOnly : 1; // 0x40
	FNiagaraVariableDataInterfaceBinding DataInterface; // 0x48
};

struct ABP-DefaultWheeledVehicle_C : ABravoHotelVehicle {
	FPointerToUberGraphFrame UberGraphFrame; // 0xd48
	UTeamInfoUpdaterComponent* TeamInfoUpdater; // 0xd50
	float Timeline_0_NewTrack_0_FB4F6B44434A25E409AE66987076220A; // 0xd58
	ETimelineDirection Timeline_0__Direction_FB4F6B44434A25E409AE66987076220A; // 0xd5c
	UTimelineComponent* Timeline_1; // 0xd60
	UAudioComponent* EngineSound; // 0xd68
};

struct UChat_Tab_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button; // 0x250
	UTextBlock* Button Text Block; // 0x258
	FText Button Text; // 0x260
	FLinearColor Active Text Color; // 0x278
	FLinearColor Inactive Text Color; // 0x288
	bool Tab Is Active?; // 0x298
	FLinearColor Current Text Color; // 0x29c
	UChat_MainWidget_C* Parent Widget; // 0x2b0
	UWidget* Chat Switcher Widget; // 0x2b8
	FLinearColor Notification Text Color; // 0x2c0
	float Interp Time; // 0x2d0
	float Notification Color Hold Time; // 0x2d4
	float Notification Fade Time; // 0x2d8
	bool Fading to Notification?; // 0x2dc
};

struct UBravoHotelReplayListWidget : UUserWidget {
	int32_t TotalPages; // 0x248
	int32_t CurrentPage; // 0x24c
	int32_t PageSize; // 0x250
	int32_t TotalReplays; // 0x254
	int32_t ReplaysToKeep; // 0x258
};

struct AIntervalGizmoActor : AGizmoActor {
	UGizmoLineHandleComponent* UpIntervalComponent; // 0x328
	UGizmoLineHandleComponent* DownIntervalComponent; // 0x330
	UGizmoLineHandleComponent* ForwardIntervalComponent; // 0x338
};

struct UUW-StatupWidget_Item_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_TextBg; // 0x250
	UHorizontalBox* HorizontalBox_Damage; // 0x258
	UImage* Image_145; // 0x260
	UImage* Image_155; // 0x268
	UTextBlock* T_StatName; // 0x270
	UTextBlock* T_Value; // 0x278
	FText Text_StatName; // 0x280
};

struct ULayer : UObject {
	FName LayerName; // 0x28
	char bIsVisible : 1; // 0x30
	TArray<FLayerActorStats> ActorStats; // 0x38
};

struct UBravoHotelSettingBaseWidget : UUserWidget {
	FMulticastInlineDelegate DelegateShowInfo; // 0x248
	FMulticastInlineDelegate DelegateChangeValue; // 0x258
	FMulticastInlineDelegate DelegateChangeValueDirect; // 0x268
	FMulticastInlineDelegate DelegateChangeKeyValue; // 0x278
	FMulticastInlineDelegate DelegateButtonClick; // 0x288
};

struct UComboBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FComboBoxStyle ComboBoxStyle; // 0x30
};

struct UNiagaraDataInterfaceVector2DCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x58
	FRichCurve YCurve; // 0xd8
};

struct AStaticMeshActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x328
	bool bStaticMeshReplicateMovement; // 0x330
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x331
};

struct UBreakpoint : UObject {
	char bEnabled : 1; // 0x28
	UEdGraphNode* Node; // 0x30
	char bStepOnce : 1; // 0x38
	char bStepOnce_WasPreviouslyDisabled : 1; // 0x38
	char bStepOnce_RemoveAfterHit : 1; // 0x38
};

struct UMediaTexture : UTexture {
	TextureAddress AddressX; // 0xb8
	TextureAddress AddressY; // 0xb9
	bool AutoClear; // 0xba
	FLinearColor ClearColor; // 0xbc
	bool EnableGenMips; // 0xcc
	char NumMips; // 0xcd
	UMediaPlayer* MediaPlayer; // 0xd0
};

struct UVectorFieldAnimated : UVectorField {
	UTexture2D* Texture; // 0x48
	EVectorFieldConstructionOp ConstructionOp; // 0x50
	int32_t VolumeSizeX; // 0x54
	int32_t VolumeSizeY; // 0x58
	int32_t VolumeSizeZ; // 0x5c
	int32_t SubImagesX; // 0x60
	int32_t SubImagesY; // 0x64
	int32_t FrameCount; // 0x68
	float FramesPerSecond; // 0x6c
	char bLoop : 1; // 0x70
	UVectorFieldStatic* NoiseField; // 0x78
	float NoiseScale; // 0x80
	float NoiseMax; // 0x84
};

struct UFileMediaSource : UBaseMediaSource {
	FString FilePath; // 0x88
	bool PrecacheFile; // 0x98
};

struct USkeletalMeshSimplificationSettings : UDeveloperSettings {
	FName SkeletalMeshReductionModuleName; // 0x38
};

struct UBravoHotelLoadingWidget : UUserWidget {
	int32_t LoadingScreenIndex; // 0x248
	FString FromLoading; // 0x250
	TArray<ABravoHotelCharacter*> MutableList; // 0x270
	APawn* TargetPawn; // 0x288
};

struct ABravoHotelParachuteTriggerBox : AActor {
	UBoxComponent* BoxComponent; // 0x328
	UArrowComponent* ArrowComponent; // 0x330
	bool bLaunch; // 0x338
	float LaunchForce; // 0x33c
	float ParachuteDelayTime; // 0x340
	float ParachuteDelayTimeByFalling; // 0x344
};

struct UAISenseConfig_Blueprint : UAISenseConfig {
	UAISense_Blueprint* Implementation; // 0x48
};

struct ARadialForceActor : ARigidBodyBase {
	URadialForceComponent* ForceComponent; // 0x328
};

struct UMaterialExpressionRuntimeVirtualTextureOutput : UMaterialExpressionCustomOutput {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Specular; // 0x54
	FExpressionInput Roughness; // 0x68
	FExpressionInput Normal; // 0x7c
	FExpressionInput WorldHeight; // 0x90
	FExpressionInput Opacity; // 0xa4
	FExpressionInput Mask; // 0xb8
};

struct AMaterialInstanceActor : AActor {
	TArray<AActor*> TargetActors; // 0x328
};

struct APlanarReflection : ASceneCapture {
	UPlanarReflectionComponent* PlanarReflectionComponent; // 0x338
	bool bShowPreviewPlane; // 0x340
};

struct UOverlaySlot : UPanelSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct URealReplicationGraph : UReplicationGraph {
	UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x5c8
	TArray<UObject*> SpatializedClasses; // 0x5d0
	TArray<UObject*> NonSpatializedChildClasses; // 0x5e0
	UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x5f0
	TArray<UObject*> ExplicitlySetClasses; // 0x940
};

struct UAkAssetPlatformData : UObject {
	UAkAssetData* CurrentAssetData; // 0x28
};

struct UTileView : UListView {
	float EntryHeight; // 0x368
	float EntryWidth; // 0x36c
	EListItemAlignment TileAlignment; // 0x370
	bool bWrapHorizontalNavigation; // 0x371
};

struct UFoliageType_Actor : UFoliageType {
	AActor* ActorClass; // 0x3e8
	bool bShouldAttachToBaseComponent; // 0x3f0
};

struct UParticleModuleLocationPrimitiveTriangle : UParticleModuleLocationBase {
	FRawDistributionVector StartOffset; // 0x30
	FRawDistributionFloat Height; // 0x78
	FRawDistributionFloat Angle; // 0xa8
	FRawDistributionFloat Thickness; // 0xd8
};

struct UMovieSceneGeometryCacheTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x58
};

struct UGizmoBoxComponent : UGizmoBaseComponent {
	FVector Origin; // 0x4d0
	FQuat Rotation; // 0x4e0
	FVector Dimensions; // 0x4f0
	float LineThickness; // 0x4fc
	bool bRemoveHiddenLines; // 0x500
	bool bEnableAxisFlip; // 0x501
};

struct UBravoHotelCustomizedCharacter : UBravoHotelCoherentObject {
	FMulticastInlineDelegate MoveLobbyCharacterWearableDelegate; // 0x30
	FMulticastInlineDelegate MoveLobbyCharacterAppearanceDelegate; // 0x40
	FMulticastInlineDelegate MouseEventDelegate; // 0x50
	FString WearableMenu; // 0x60
};

struct UAnimCompress_PerTrackCompression : UAnimCompress_RemoveLinearKeys {
	float MaxZeroingThreshold; // 0x60
	float MaxPosDiffBitwise; // 0x64
	float MaxAngleDiffBitwise; // 0x68
	float MaxScaleDiffBitwise; // 0x6c
	TArray<AnimationCompressionFormat> AllowedRotationFormats; // 0x70
	TArray<AnimationCompressionFormat> AllowedTranslationFormats; // 0x80
	TArray<AnimationCompressionFormat> AllowedScaleFormats; // 0x90
	char bResampleAnimation : 1; // 0xa0
	float ResampledFramerate; // 0xa4
	int32_t MinKeysForResampling; // 0xa8
	char bUseAdaptiveError : 1; // 0xac
	char bUseOverrideForEndEffectors : 1; // 0xac
	int32_t TrackHeightBias; // 0xb0
	float ParentingDivisor; // 0xb4
	float ParentingDivisorExponent; // 0xb8
	char bUseAdaptiveError2 : 1; // 0xbc
	float RotationErrorSourceRatio; // 0xc0
	float TranslationErrorSourceRatio; // 0xc4
	float ScaleErrorSourceRatio; // 0xc8
	float MaxErrorPerTrackRatio; // 0xcc
	float PerturbationProbeSize; // 0xd0
};

struct UAsyncActionLoadPrimaryAssetClass : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UGizmoScaledTransformSource : UGizmoBaseTransformSource {
	TScriptInterface<IGizmoTransformSource> ChildTransformSource; // 0x48
};

struct UAIAsyncTaskBlueprintProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFail; // 0x38
};

struct USkyAtmosphereComponent : USceneComponent {
	ESkyAtmosphereTransformMode TransformMode; // 0x230
	float BottomRadius; // 0x234
	FColor GroundAlbedo; // 0x238
	float AtmosphereHeight; // 0x23c
	float MultiScatteringFactor; // 0x240
	float RayleighScatteringScale; // 0x244
	FLinearColor RayleighScattering; // 0x248
	float RayleighExponentialDistribution; // 0x258
	float MieScatteringScale; // 0x25c
	FLinearColor MieScattering; // 0x260
	float MieAbsorptionScale; // 0x270
	FLinearColor MieAbsorption; // 0x274
	float MieAnisotropy; // 0x284
	float MieExponentialDistribution; // 0x288
	float OtherAbsorptionScale; // 0x28c
	FLinearColor OtherAbsorption; // 0x290
	FTentDistribution OtherTentDistribution; // 0x2a0
	FLinearColor SkyLuminanceFactor; // 0x2ac
	float AerialPespectiveViewDistanceScale; // 0x2bc
	float HeightFogContribution; // 0x2c0
	float TransmittanceMinLightElevationAngle; // 0x2c4
	FGuid bStaticLightingBuiltGUID; // 0x2ec
};

struct ABravoHotelRotorRunner : ABravoHotelActor {
	AActor* RotorActor; // 0x328
	float RotorSpeed; // 0x330
	float TickEnableDistance; // 0x334
};

struct UPointLightComponent : ULocalLightComponent {
	char bUseInverseSquaredFalloff : 1; // 0x390
	float LightFalloffExponent; // 0x394
	float SourceRadius; // 0x398
	float SoftSourceRadius; // 0x39c
	float SourceLength; // 0x3a0
};

struct UMaterialExpressionTemporalSobol : UMaterialExpression {
	FExpressionInput Index; // 0x40
	FExpressionInput Seed; // 0x54
	uint32_t ConstIndex; // 0x68
	FVector2D ConstSeed; // 0x6c
};

struct UForceFeedbackAttenuation : UObject {
	FForceFeedbackAttenuationSettings Attenuation; // 0x28
};

struct UEnvQueryInstanceBlueprintWrapper : UObject {
	int32_t QueryID; // 0x30
	UEnvQueryItemType* ItemType; // 0x58
	int32_t OptionIndex; // 0x60
	FMulticastInlineDelegate OnQueryFinishedEvent; // 0x68
};

struct UNiagaraDataInterfaceHoudiniCSV : UNiagaraDataInterface {
	UHoudiniCSV* HoudiniCSVAsset; // 0x30
	int32_t LastSpawnedPointID; // 0x38
	float LastSpawnTime; // 0x3c
};

struct UCustomizableObjectImageProviderArray : UCustomizableSystemImageProvider {
	TArray<UTexture2D*> Textures; // 0x28
};

struct UMediaPlayer : UObject {
	FMulticastInlineDelegate OnEndReached; // 0x28
	FMulticastInlineDelegate OnMediaClosed; // 0x38
	FMulticastInlineDelegate OnMediaOpened; // 0x48
	FMulticastInlineDelegate OnMediaOpenFailed; // 0x58
	FMulticastInlineDelegate OnPlaybackResumed; // 0x68
	FMulticastInlineDelegate OnPlaybackSuspended; // 0x78
	FMulticastInlineDelegate OnSeekCompleted; // 0x88
	FMulticastInlineDelegate OnTracksChanged; // 0x98
	FTimespan CacheAhead; // 0xa8
	FTimespan CacheBehind; // 0xb0
	FTimespan CacheBehindGame; // 0xb8
	bool NativeAudioOut; // 0xc0
	bool PlayOnOpen; // 0xc1
	char Shuffle : 1; // 0xc4
	char Loop : 1; // 0xc4
	UMediaPlaylist* Playlist; // 0xc8
	int32_t PlaylistIndex; // 0xd0
	FTimespan TimeDelay; // 0xd8
	float HorizontalFieldOfView; // 0xe0
	float VerticalFieldOfView; // 0xe4
	FRotator ViewRotation; // 0xe8
	FGuid playerGUID; // 0x120
	UUserWidget* OwnerWidget; // 0x138
};

struct UAnimationSharingSetup : UObject {
	TArray<FPerSkeletonAnimationSharingSetup> SkeletonSetups; // 0x28
	FAnimationSharingScalability ScalabilitySettings; // 0x38
};

struct UUW-MyKillCountMessageWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_HideKillAssist; // 0x250
	UWidgetAnimation* Anim_ShowAssist; // 0x258
	UWidgetAnimation* Anim_ShowKill; // 0x260
	UTextBlock* T_AssistCount; // 0x268
	UTextBlock* T_KillCount; // 0x270
	int32_t DefaultFontSize; // 0x278
	int32_t MiniFontSize; // 0x27c
	bool IsShowingKillCount; // 0x280
	FTimerHandle Timer_HideKillCountText; // 0x288
	float RemainTime; // 0x290
};

struct ULevelCapture : UMovieSceneCapture {
	bool bAutoStartCapture; // 0x220
	FGuid PrerequisiteActorId; // 0x22c
};

struct UMaterialExpressionScalarParameter : UMaterialExpressionParameter {
	float DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x5c
	char PrimitiveDataIndex; // 0x5d
};

struct UUW-TopInfoWidget_C : UBravoHotelTopInfoWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UWidgetAnimation* Anim_HideWidget; // 0x280
	UCanvasPanel* Canvas; // 0x288
	UCanvasPanel* Canvas_Minimap; // 0x290
	UCanvasPanel* CanvasPanel_StatupFirst; // 0x298
	UCanvasPanel* CanvasPanel_StatupThird; // 0x2a0
	UTextBlock* T_GameVersion; // 0x2a8
	UUW-CastingWidget_C* UW-CastingWidget; // 0x2b0
	UUW-HUDMessageWidget_C* UW-HUDMessageWidget; // 0x2b8
	UUW-Inventory_Perk_C* UW-Inventory_Perk; // 0x2c0
	UUW-ListWidget_C* UW-ListWidget_DamageLog; // 0x2c8
	UUW-ListWidget_C* UW-ListWidget_GainPerk; // 0x2d0
	UUW-ListWidget_C* UW-ListWidget_KillMessage; // 0x2d8
	UUW-MinimapWidget_C* UW-MinimapWidget; // 0x2e0
	UUW-PlayerInfoWidget_Renew_C* UW-PlayerInfoWidget_02; // 0x2e8
	UUW-StatupWidget_C* UW-StatupWidget; // 0x2f0
	UUW-TeamInfoWidget_C* UW-TeamInfoWidget; // 0x2f8
	UUW-Volume_C* UW-Volume; // 0x300
	UVerticalBox* Vertical_MinimapAndTeamInfo; // 0x308
	ABravoHotelPlayerController* PlayerController; // 0x310
	UUW-Inventory_ItemSlotHover_C* UW-Inventory_ItemSlotHover; // 0x318
	UBravoHotelMainWidget* MainWidget; // 0x320
	EPlayerState CurrentState; // 0x328
	FDisplayAbility LastDisplayAbility; // 0x32c
};

struct UFoliageType_InstancedStaticMesh : UFoliageType {
	UStaticMesh* Mesh; // 0x3e8
	TArray<UMaterialInterface*> OverrideMaterials; // 0x3f0
	UFoliageInstancedStaticMeshComponent* ComponentClass; // 0x400
};

struct AOculusMR_BoundaryActor : AActor {
	UOculusMR_BoundaryMeshComponent* BoundaryMeshComponent; // 0x328
};

struct UMovieSceneEventTrack : UMovieSceneNameableTrack {
	char bFireEventsWhenForwards : 1; // 0x58
	char bFireEventsWhenBackwards : 1; // 0x58
	EFireEventsAtPosition EventPosition; // 0x5c
	TArray<FMovieSceneObjectBindingID> EventReceivers; // 0x60
	TArray<UMovieSceneSection*> Sections; // 0x70
};

struct UBTService_DefaultFocus : UBTService_BlackboardBase {
	char FocusPriority; // 0x98
};

struct UMaterialExpressionChannelMaskParameter : UMaterialExpressionVectorParameter {
	EChannelMaskParameterColor MaskChannel; // 0x70
	FExpressionInput Input; // 0x74
};

struct UParticleModuleLocationPrimitiveBase : UParticleModuleLocationBase {
	char Positive_X : 1; // 0x30
	char Positive_Y : 1; // 0x30
	char Positive_Z : 1; // 0x30
	char Negative_X : 1; // 0x30
	char Negative_Y : 1; // 0x30
	char Negative_Z : 1; // 0x30
	char SurfaceOnly : 1; // 0x30
	char Velocity : 1; // 0x30
	FRawDistributionFloat VelocityScale; // 0x38
	FRawDistributionVector StartLocation; // 0x68
};

struct UBTTask_PushPawnAction : UBTTask_PawnActionBase {
	UPawnAction* Action; // 0x70
};

struct UMovieSceneParameterSection : UMovieSceneSection {
	TArray<FBoolParameterNameAndCurve> BoolParameterNamesAndCurves; // 0xe0
	TArray<FScalarParameterNameAndCurve> ScalarParameterNamesAndCurves; // 0xf0
	TArray<FVector2DParameterNameAndCurves> Vector2DParameterNamesAndCurves; // 0x100
	TArray<FVectorParameterNameAndCurves> VectorParameterNamesAndCurves; // 0x110
	TArray<FColorParameterNameAndCurves> ColorParameterNamesAndCurves; // 0x120
	TArray<FTransformParameterNameAndCurves> TransformParameterNamesAndCurves; // 0x130
};

struct UMaterialInterface : UObject {
	USubsurfaceProfile* SubsurfaceProfile; // 0x38
	FLightmassMaterialInterfaceSettings LightmassSettings; // 0x50
	TArray<FMaterialTextureInfo> TextureStreamingData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct AInstancedStaticCollisionActor : AActor {
	TMap<UStaticMesh*, UInstancedCollisionComponent*> InstancedCollisionComponentMap; // 0x328
};

struct APaperTileMapActor : AActor {
	UPaperTileMapComponent* RenderComponent; // 0x328
};

struct UMaterialExpressionNoise : UMaterialExpression {
	FExpressionInput Position; // 0x40
	FExpressionInput FilterWidth; // 0x54
	float Scale; // 0x68
	int32_t Quality; // 0x6c
	ENoiseFunction NoiseFunction; // 0x70
	char bTurbulence : 1; // 0x74
	int32_t Levels; // 0x78
	float OutputMin; // 0x7c
	float OutputMax; // 0x80
	float LevelScale; // 0x84
	char bTiling : 1; // 0x88
	uint32_t RepeatSize; // 0x8c
};

struct UBravoHotelAnimNotify_AttachMesh : UAnimNotify {
	TSoftObjectPtr<UStaticMesh> StaticMesh; // 0x38
	TSoftObjectPtr<USkeletalMesh> SkeletalMesh; // 0x60
	bool bUsePhysics; // 0x88
	FName AttachSocketName; // 0x8c
	float AttachDuration; // 0x94
	TArray<FAttachedUsableItem_ScalarParamData> ScalarParamDatas; // 0x98
};

struct USlider : UWidget {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	float MinValue; // 0x11c
	float MaxValue; // 0x120
	FSliderStyle WidgetStyle; // 0x128
	EOrientation Orientation; // 0x468
	FLinearColor SliderBarColor; // 0x46c
	FLinearColor SliderHandleColor; // 0x47c
	bool IndentHandle; // 0x48c
	bool Locked; // 0x48d
	bool MouseUsesStep; // 0x48e
	bool RequiresControllerLock; // 0x48f
	float StepSize; // 0x490
	bool IsFocusable; // 0x494
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x498
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x4a8
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x4b8
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x4c8
	FMulticastInlineDelegate OnValueChanged; // 0x4d8
};

struct UConsoleSettings : UObject {
	int32_t MaxScrollbackSize; // 0x28
	TArray<FAutoCompleteCommand> ManualAutoCompleteList; // 0x30
	TArray<FString> AutoCompleteMapPaths; // 0x40
	float BackgroundOpacityPercentage; // 0x50
	bool bOrderTopToBottom; // 0x54
	bool bDisplayHelpInAutoComplete; // 0x55
	FColor InputColor; // 0x58
	FColor HistoryColor; // 0x5c
	FColor AutoCompleteCommandColor; // 0x60
	FColor AutoCompleteCVarColor; // 0x64
	FColor AutoCompleteFadedColor; // 0x68
};

struct ABravoHotelGameState : AGameState {
	char MatchWinnerTeam; // 0x398
	ABravoHotelPlayerState* WinnerPlayerState; // 0x3a0
	int32_t TimeRemaining; // 0x3a8
	FName CurrentSeasonID; // 0x3ac
	int32_t PerkMode; // 0x3b4
	int32_t RecipeMode; // 0x3b8
	int32_t MaxPerkCount; // 0x3bc
	int32_t OverrideUltimateLevel; // 0x3c0
	TMap<FName, int32_t> PerkClassNumCap; // 0x3c8
	TMap<FName, float> PerkClassWeightModifier; // 0x418
	TArray<FName> PerkClassBlock; // 0x468
	bool bBlockSpawnVehicle; // 0x478
	bool bBlockRedZone; // 0x479
	bool PerkLevelUpAllUserSame; // 0x47a
	FString CQRKey; // 0x480
	EGameViewType GameViewType; // 0x490
	EMatchingType MatchingType; // 0x491
	FDateTime StartGameTime; // 0x498
	FName ExpertWeaponTableID; // 0x4a0
	int32_t PersonalSupplyBoxPositionType; // 0x4a8
	bool NoDelaySpawnPersonalSupplyBox; // 0x4ac
	bool MustSpawnPersonalSupplyBox; // 0x4ad
	int32_t RetiredPlayerCount; // 0x4b0
	TMap<int32_t, ABravoHotelPlayerState*> UniqueIDPlayerStates; // 0x4b8
	FGuid MatchID; // 0x508
	FString GameServerID; // 0x518
	FGameSettingClassSelectInfoElement DefaultClassSelectInfo; // 0x538
	FGameSettingClassChangeInfoElement DefaultClassChangeInfo; // 0x560
	FGameSettingInfo CurrentGameSettingInfo; // 0x5a8
	bool IsUsingOuterAreaBlueZone; // 0x630
	ABravoHotelBlueZone* BlueZone; // 0x638
	FMulticastInlineDelegate OnBlueZoneDelegate; // 0x640
	FMulticastInlineDelegate OnChangePerkModeDelegate; // 0x650
	float RecoilModifier_AR; // 0x67c
	float RecoilModifier_SMG; // 0x680
	float RecoilModifier_SG; // 0x684
	float RecoilModifier_DMR; // 0x688
	float RecoilModifier_SR; // 0x68c
};

struct UEnvQueryGenerator_Cone : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue AlignedPointsDistance; // 0x80
	FAIDataProviderFloatValue ConeDegrees; // 0xb8
	FAIDataProviderFloatValue AngleStep; // 0xf0
	FAIDataProviderFloatValue Range; // 0x128
	UEnvQueryContext* CenterActor; // 0x160
	char bIncludeContextLocation : 1; // 0x168
};

struct UMaterialExpressionParticleSubUV : UMaterialExpressionTextureSample {
	char bBlend : 1; // 0xd0
};

struct UBravoHotelBuffBase : UObject {
	ABravoHotelCharacter* BravoHotelCharacter; // 0x240
	UBravoHotelAbilityComponent* BravoHotelAbilityComponent; // 0x248
	TArray<FTimerHandle> TimerHandles; // 0x280
	TArray<UParticleSystemComponent*> CharacterParticles; // 0x290
	AController* AttackerPC; // 0x2a0
	AActor* AttackerActor; // 0x2a8
};

struct UParticleEmitter : UObject {
	FName EmitterName; // 0x28
	int32_t SubUVDataOffset; // 0x30
	EEmitterRenderMode EmitterRenderMode; // 0x34
	EParticleSignificanceLevel SignificanceLevel; // 0x35
	char bUseLegacySpawningBehavior : 1; // 0x37
	char ConvertedModules : 1; // 0x37
	char bIsSoloing : 1; // 0x37
	char bCookedOut : 1; // 0x37
	char bDisabledLODsKeepEmitterAlive : 1; // 0x37
	char bDisableWhenInsignficant : 1; // 0x38
	TArray<UParticleLODLevel*> LODLevels; // 0x40
	int32_t PeakActiveParticles; // 0x50
	int32_t InitialAllocationCount; // 0x54
	float QualityLevelSpawnRateScale; // 0x58
	uint32_t DetailModeBitmask; // 0x5c
};

struct UMeshSimplificationSettings : UDeveloperSettings {
	FName MeshReductionModuleName; // 0x38
};

struct UBHPersonalSupplySystemComponent : UActorComponent {
	ABHPersonalSupplyBox* CurrentSupplyBox; // 0xc0
	ABHPersonalSupplyBoxDummy* CurrentSupplyBoxDummy; // 0xc8
	ABHPersonalSupplyBox* SupplyBoxClass; // 0xd0
	ABHPersonalSupplyBoxDummy* SupplyBoxDummyClass; // 0xd8
	FSupplyBoxAssignmentInfo CurrentAssignmentInfo; // 0xe0
	int32_t CountOpenSupplyBox; // 0x110
	int32_t SupplyBoxCost; // 0x114
	EPersonalSupplyBoxState CurrentPSBState; // 0x118
	EAssignReason AssignReason; // 0x119
	bool ShowPingByHUD; // 0x122
};

struct UDistributionVector : UDistribution {
	char bCanBeBaked : 1; // 0x30
	char bIsDirty : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UComboButtonWidgetStyle : USlateWidgetStyleContainerBase {
	FComboButtonStyle ComboButtonStyle; // 0x30
};

struct UGameNetworkManagerSettings : UObject {
	int32_t MinDynamicBandwidth; // 0x28
	int32_t MaxDynamicBandwidth; // 0x2c
	int32_t TotalNetBandwidth; // 0x30
	int32_t BadPingThreshold; // 0x34
	char bIsStandbyCheckingEnabled : 1; // 0x38
	float StandbyRxCheatTime; // 0x3c
	float StandbyTxCheatTime; // 0x40
	float PercentMissingForRxStandby; // 0x44
	float PercentMissingForTxStandby; // 0x48
	float PercentForBadPing; // 0x4c
	float JoinInProgressStandbyWaitTime; // 0x50
};

struct USteamNetConnection : UIpConnection {
	bool bIsPassthrough; // 0x1b40
};

struct APaperGroupedSpriteActor : AActor {
	UPaperGroupedSpriteComponent* RenderComponent; // 0x328
};

struct UParticleModule : UObject {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct UForceFeedbackEffect : UObject {
	TArray<FForceFeedbackChannelDetails> ChannelDetails; // 0x28
	float Duration; // 0x38
};

struct USpinBox : UWidget {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	FSpinBoxStyle WidgetStyle; // 0x120
	USlateWidgetStyleAsset* Style; // 0x408
	int32_t MinFractionalDigits; // 0x410
	int32_t MaxFractionalDigits; // 0x414
	bool bAlwaysUsesDeltaSnap; // 0x418
	float Delta; // 0x41c
	float SliderExponent; // 0x420
	FSlateFontInfo Font; // 0x428
	ETextJustify Justification; // 0x478
	float MinDesiredWidth; // 0x47c
	bool ClearKeyboardFocusOnCommit; // 0x480
	bool SelectAllTextOnCommit; // 0x481
	FSlateColor ForegroundColor; // 0x488
	FMulticastInlineDelegate OnValueChanged; // 0x4b0
	FMulticastInlineDelegate OnValueCommitted; // 0x4c0
	FMulticastInlineDelegate OnBeginSliderMovement; // 0x4d0
	FMulticastInlineDelegate OnEndSliderMovement; // 0x4e0
	char bOverride_MinValue : 1; // 0x4f0
	char bOverride_MaxValue : 1; // 0x4f0
	char bOverride_MinSliderValue : 1; // 0x4f0
	char bOverride_MaxSliderValue : 1; // 0x4f0
	float MinValue; // 0x4f4
	float MaxValue; // 0x4f8
	float MinSliderValue; // 0x4fc
	float MaxSliderValue; // 0x500
};

struct UEditableGameplayTagQuery : UObject {
	FString UserDescription; // 0x28
	UEditableGameplayTagQueryExpression* RootExpression; // 0x48
	FGameplayTagQuery TagQueryExportText_Helper; // 0x50
};

struct UBP-CreateCharacterWidget_Web_C : UBravoHotelCreateCharacterWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x308
	UCoherentUIGTWidget* CoherentUIGTWidget_90; // 0x310
	UUW-CustomizedCharacter_C* UW-CustomizedCharacter; // 0x318
	ESceneType CurrentSceneType; // 0x320
};

struct ABravoHotelGameMode : ABravoHotelGameModeBase {
	bool bFriendlyFire; // 0x414
	UBravoHotelPoolingActorComponent* PoolingActorComponent; // 0x418
	FDataTableRowHandle MapDataTableHandle; // 0x420
	TMap<FString, APlayerController*> PCReceivedPlayerInfos; // 0x430
	AAIController* TestAIControllerClass; // 0x480
	bool UsingOuterBlueZone; // 0x4f9
	FName SelectedPlayZoneName; // 0x4fc
	ABravoHotelBlueZone* BlueZoneClass; // 0x508
	FString CQRType; // 0x510
	ABravoHotelBlueZone* BlueZone; // 0x588
};

struct UBravoHotelTopInfoWidget : UUserWidget {
	ECharacterState CharacterState; // 0x250
	ECharacterState PreCharacterState; // 0x251
	UUserWidget* FallingWidget; // 0x258
	UBravoHotelAliveInfoWidget* UW_AliveInfoWidget; // 0x260
	UUserWidget* DamageLogWidgetRef; // 0x268
	bool bPerkDeckInitialized; // 0x270
};

struct USubmixEffectConvolutionReverbPreset : USoundEffectSubmixPreset {
	FSubmixEffectConvolutionReverbSettings Settings; // 0x40
	UAudioImpulseResponse* ImpulseResponse; // 0x60
	ESubmixEffectConvolutionReverbBlockSize BlockSize; // 0x68
	bool bEnableHardwareAcceleration; // 0x69
};

struct UDecalComponent : USceneComponent {
	UMaterialInterface* DecalMaterial; // 0x230
	int32_t SortOrder; // 0x238
	float FadeScreenSize; // 0x23c
	float FadeStartDelay; // 0x240
	float FadeDuration; // 0x244
	float FadeInDuration; // 0x248
	float FadeInStartDelay; // 0x24c
	char bDestroyOwnerAfterFade : 1; // 0x250
	FVector DecalSize; // 0x254
};

struct USoundfieldEffectBase : UObject {
	USoundfieldEffectSettingsBase* Settings; // 0x28
};

struct UBTTaskNode : UBTNode {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct ABP_BlueZone_C : ABravoHotelBlueZone {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7e0
	UStaticMeshComponent* StaticMesh; // 0x7e8
	UDecalComponent* MagneticDecal; // 0x7f0
	float Puls_PulsScale_0F5B0359412DDBACBDF407BB69788854; // 0x7f8
	ETimelineDirection Puls__Direction_0F5B0359412DDBACBDF407BB69788854; // 0x7fc
	UTimelineComponent* Puls; // 0x800
	float Height; // 0x808
	float SeaLevelZ; // 0x80c
	bool bIsMatchEnded; // 0x810
	float ModifyingOpacityTime; // 0x814
	float CurrentOpacity; // 0x818
	float ScaleModifier; // 0x81c
	UCurveVector* ParametersCurve; // 0x820
	float MaterialParameterRadius; // 0x828
	bool bWasMpUpdated; // 0x82c
	float PreRadius; // 0x830
};

struct UMaterialExpressionDesaturation : UMaterialExpression {
	FExpressionInput Input; // 0x40
	FExpressionInput Fraction; // 0x54
	FLinearColor LuminanceFactors; // 0x68
};

struct UFSM_SetStateID_AsyncWithCallbacks : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	FDelegate InBegin; // 0x38
	FDelegate InExit; // 0x48
	char StateID; // 0x58
	float Timer; // 0x5c
	bool Repeat; // 0x60
	FTimerHandle TimerHandle; // 0x68
	FMulticastInlineDelegate OnSuccess; // 0x70
	FMulticastInlineDelegate OnAborted; // 0x80
};

struct UPanelSlot : UVisual {
	UPanelWidget* Parent; // 0x28
	UWidget* Content; // 0x30
};

struct UMaterialExpressionVectorParameter : UMaterialExpressionParameter {
	FLinearColor DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x68
	char PrimitiveDataIndex; // 0x69
};

struct USkeletalMeshSocket : UObject {
	FName SocketName; // 0x28
	FName BoneName; // 0x30
	FVector RelativeLocation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale; // 0x50
	bool bForceAlwaysAnimated; // 0x5c
};

struct UAnimNotify_PlayMontageNotifyWindow : UAnimNotifyState {
	FName NotifyName; // 0x30
};

struct AAudioVolume : AVolume {
	float Priority; // 0x360
	char bEnabled : 1; // 0x364
	FReverbSettings Settings; // 0x368
	FInteriorSettings AmbientZoneSettings; // 0x388
};

struct UMaterialExpressionRuntimeVirtualTextureReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput VirtualTextureOutput; // 0x54
};

struct UAkInitBankAssetData : UAkAssetDataWithMedia {
	TArray<FAkPluginInfo> PluginInfos; // 0x70
};

struct UGameMapsSettings : UObject {
	FString LocalMapOptions; // 0x28
	FSoftObjectPath TransitionMap; // 0x38
	bool bUseSplitscreen; // 0x50
	ETwoPlayerSplitScreenType TwoPlayerSplitscreenLayout; // 0x51
	EThreePlayerSplitScreenType ThreePlayerSplitscreenLayout; // 0x52
	EFourPlayerSplitScreenType FourPlayerSplitscreenLayout; // 0x53
	bool bOffsetPlayerGamepadIds; // 0x54
	FSoftClassPath GameInstanceClass; // 0x58
	FSoftClassPath ServerGameInstanceClass; // 0x70
	FSoftObjectPath GameDefaultMap; // 0x88
	FSoftObjectPath ServerDefaultMap; // 0xa0
	FSoftClassPath GlobalDefaultGameMode; // 0xb8
	FSoftClassPath GlobalDefaultServerGameMode; // 0xd0
	TArray<FGameModeName> GameModeMapPrefixes; // 0xe8
	TArray<FGameModeName> GameModeClassAliases; // 0xf8
};

struct UStaticMesh : UStreamableRenderAsset {
	char bUseAsOccluderForSoftwareOcclusion : 1; // 0x60
	FName LODGroup; // 0x64
	FName MeshStreamingGroup; // 0x6c
	FPerPlatformInt MinLOD; // 0x80
	float LpvBiasMultiplier; // 0x84
	TArray<FStaticMaterial> StaticMaterials; // 0x88
	float LightmapUVDensity; // 0x98
	int32_t LightMapResolution; // 0x9c
	int32_t LightMapCoordinateIndex; // 0xa0
	float DistanceFieldSelfShadowBias; // 0xa4
	UBodySetup* BodySetup; // 0xa8
	int32_t LODForCollision; // 0xb0
	char bGenerateMeshDistanceField : 1; // 0xb4
	char bStripComplexCollisionForConsole : 1; // 0xb4
	char bHasNavigationData : 1; // 0xb4
	char bSupportUniformlyDistributedSampling : 1; // 0xb4
	char bSupportPhysicalMaterialMasks : 1; // 0xb4
	char bIsBuiltAtRuntime : 1; // 0xb4
	char bAllowCPUAccess : 1; // 0xb4
	char bSupportGpuUniformlyDistributedSampling : 1; // 0xb5
	TArray<UStaticMeshSocket*> Sockets; // 0xd8
	FVector PositiveBoundsExtension; // 0xf8
	FVector NegativeBoundsExtension; // 0x104
	FBoxSphereBounds ExtendedBounds; // 0x110
	int32_t ElementToIgnoreForTexFactor; // 0x12c
	TArray<UAssetUserData*> AssetUserData; // 0x130
	UObject* EditableMesh; // 0x148
	UNavCollisionBase* NavCollision; // 0x150
};

struct UParticleModuleAccelerationDragScaleOverLife : UParticleModuleAccelerationBase {
	UDistributionFloat* DragScale; // 0x38
	FRawDistributionFloat DragScaleRaw; // 0x40
};

struct UUW-Lobby_Craft_Success_Perk_OpenPopup_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Popup_Alpha_Bg_Black; // 0x250
	UButton* btn_OK; // 0x258
	UImage* Image_751; // 0x260
	UHorizontalBox* Perk_List; // 0x268
	UUW-Lobby_Craft_Success_Perk_Open_C* UW-Lobby_Craft_Success_Perk_Open; // 0x270
	UUW-Lobby_Craft_Success_Perk_Open_C* UW-Lobby_Craft_Success_Perk_Open_2; // 0x278
	UUW-Lobby_Craft_Success_Perk_Open_C* UW-Lobby_Craft_Success_Perk_Open_3; // 0x280
	FMulticastInlineDelegate EventDispatcher_OnClosePerkPopup; // 0x288
};

struct UNavLinkDefinition : UObject {
	TArray<FNavigationLink> LINKS; // 0x28
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x38
};

struct UBehaviorTreeManager : UObject {
	int32_t MaxDebuggerSteps; // 0x28
	TArray<FBehaviorTreeTemplateInfo> LoadedTemplates; // 0x30
	TArray<UBehaviorTreeComponent*> ActiveComponents; // 0x40
};

struct UAkAudioBank : UAkAssetBase {
	bool AutoLoad; // 0x50
	TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>> LocalizedPlatformAssetDataMap; // 0x58
	TSet<TSoftObjectPtr<UAkAudioEvent>> LinkedAkEvents; // 0xa8
	UAkAssetPlatformData* CurrentLocalizedPlatformAssetData; // 0xf8
};

struct ALevelSequenceActor : AActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x338
	ULevelSequencePlayer* SequencePlayer; // 0x350
	FSoftObjectPath LevelSequence; // 0x358
	TArray<AActor*> AdditionalEventReceivers; // 0x370
	FLevelSequenceCameraSettings CameraSettings; // 0x380
	ULevelSequenceBurnInOptions* BurnInOptions; // 0x388
	UMovieSceneBindingOverrides* BindingOverrides; // 0x390
	char bAutoPlay : 1; // 0x398
	char bOverrideInstanceData : 1; // 0x398
	char bReplicatePlayback : 1; // 0x398
	UObject* DefaultInstanceData; // 0x3a0
	ULevelSequenceBurnIn* BurnInInstance; // 0x3a8
	bool bShowBurnin; // 0x3b0
};

struct UMovieSceneCaptureProtocolBase : UObject {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UUMGSequencePlayer : UObject {
	UWidgetAnimation* Animation; // 0x408
};

struct UUW-Inventory_WeaponSlot_C : UUW-Inventory_SlotBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1360
	UWidgetAnimation* Anim_LoopHintMainWeapon; // 0x1368
	UWidgetAnimation* Anim_Material_Get; // 0x1370
	UWidgetAnimation* Anim_Material_Hover; // 0x1378
	UWidgetAnimation* Anim_Upgrade; // 0x1380
	UWidgetAnimation* Anim_Progress; // 0x1388
	UWidgetAnimation* WeaponPerk_fadeIn; // 0x1390
	UWidgetAnimation* Anim_LoopNotifySubWeapon; // 0x1398
	UWidgetAnimation* Anim_StartNotifySubWeapon; // 0x13a0
	UWidgetAnimation* Anim_LoopNotifyMainWeapon; // 0x13a8
	UWidgetAnimation* Anim_StartNotifyMainWeapon; // 0x13b0
	UTextBlock* Ammo01; // 0x13b8
	UTextBlock* Ammo02; // 0x13c0
	UTextBlock* AmmoInfo01; // 0x13c8
	UTextBlock* AmmoInfo02; // 0x13d0
	UUW-Inventory_WeaponAttachmentSlot_C* Barrel01; // 0x13d8
	UImage* BG01; // 0x13e0
	UImage* BG02; // 0x13e8
	UImage* BorderImage02; // 0x13f0
	UButton* btn_RecipeTree; // 0x13f8
	UUW-Inventory_WeaponAttachmentSlot_C* ButtStockSlot01; // 0x1400
	UUW-Inventory_WeaponAttachmentSlot_C* ButtStockSlot02; // 0x1408
	UCanvasPanel* Canvas_AnimMain; // 0x1410
	UCanvasPanel* Canvas_AnimMain_Progress; // 0x1418
	UCanvasPanel* Canvas_AnimMain_Upgrade; // 0x1420
	UCanvasPanel* Canvas_AnimSub; // 0x1428
	UImage* Choice_BG01; // 0x1430
	UImage* Choice_BG02; // 0x1438
	UUW-Inventory_WeaponAttachmentSlot_C* GripSlot01; // 0x1440
	UHorizontalBox* HorizontalBox_Perk; // 0x1448
	UHorizontalBox* HorizontalBox_Rarity1; // 0x1450
	UHorizontalBox* HorizontalBox_Rarity2; // 0x1458
	UImage* Image_2; // 0x1460
	UImage* Image_3; // 0x1468
	UImage* Image_5; // 0x1470
	UImage* Image_7; // 0x1478
	UImage* Image_48; // 0x1480
	UImage* Image_85; // 0x1488
	UImage* Image_86; // 0x1490
	UImage* Image_175; // 0x1498
	UImage* Image_202; // 0x14a0
	UImage* Image_212; // 0x14a8
	UImage* Image_214; // 0x14b0
	UImage* Image_217; // 0x14b8
	UImage* Image_219; // 0x14c0
	UImage* Image_234; // 0x14c8
	UImage* Image_356; // 0x14d0
	UImage* Image_369; // 0x14d8
	UImage* Image_371; // 0x14e0
	UImage* Image_372; // 0x14e8
	UImage* Image_682; // 0x14f0
	UImage* Image_805; // 0x14f8
	UImage* Image_807; // 0x1500
	UImage* Image_808; // 0x1508
	UImage* Image_809; // 0x1510
	UImage* Image_1071; // 0x1518
	UImage* Image_Bindable; // 0x1520
	UImage* Image_Supply; // 0x1528
	UImage* ImageAmmo01; // 0x1530
	UImage* ImageAmmo02; // 0x1538
	USizeBox* Info01; // 0x1540
	USizeBox* Info02; // 0x1548
	UImage* Line01; // 0x1550
	UImage* Line02; // 0x1558
	UUW-Inventory_WeaponAttachmentSlot_C* MagazineSlot01; // 0x1560
	UUW-Inventory_WeaponAttachmentSlot_C* MagazineSlot02; // 0x1568
	USizeBox* MainWeaponSlot; // 0x1570
	UUW-Inventory_WeaponAttachmentSlot_C* MuzzleDeviceSlot01; // 0x1578
	UUW-Inventory_WeaponAttachmentSlot_C* MuzzleDeviceSlot02; // 0x1580
	UOverlay* Overlay_2; // 0x1588
	UUW-Inventory_WeaponAttachmentSlot_C* Perk01; // 0x1590
	UUW-Inventory_WeaponAttachmentSlot_C* Perk01_Sub; // 0x1598
	UUW-Inventory_WeaponAttachmentSlot_C* Perk02; // 0x15a0
	UUW-Inventory_WeaponAttachmentSlot_C* Perk02_Sub; // 0x15a8
	UUW-Inventory_WeaponAttachmentSlot_C* Perk03; // 0x15b0
	UUW-Inventory_WeaponAttachmentSlot_C* Perk03_Sub; // 0x15b8
	UUW-Inventory_WeaponAttachmentSlot_C* Perk04; // 0x15c0
	UUW-Inventory_WeaponAttachmentSlot_C* Perk04_Sub; // 0x15c8
	UUW-Inventory_WeaponAttachmentSlot_C* SightSlot01; // 0x15d0
	UUW-Inventory_WeaponAttachmentSlot_C* SightSlot02; // 0x15d8
	USizeBox* SubWeaponSlot; // 0x15e0
	UTextBlock* TextBlock_1; // 0x15e8
	UTextBlock* TextBlock_Range01; // 0x15f0
	UImage* TopNameBG01; // 0x15f8
	UImage* TopNameBG02; // 0x1600
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot; // 0x1608
	UUW-Inventory_WeaponPerkSlot_C* UW-Inventory_WeaponPerkSlot; // 0x1610
	UUW-Inventory_WeaponPerkSlot_C* UW-Inventory_WeaponPerkSlot_C_2; // 0x1618
	UUW-Inventory_WeaponPerkSlot_C* UW-Inventory_WeaponPerkSlot_C_3; // 0x1620
	UUW-StatupWidget_C* UW-StatupWidget; // 0x1628
	UImage* WeaponImage01; // 0x1630
	UImage* WeaponImage02; // 0x1638
	UTextBlock* WeaponIndex01; // 0x1640
	UTextBlock* WeaponIndex02; // 0x1648
	UTextBlock* WeaponName01; // 0x1650
	UTextBlock* WeaponName02; // 0x1658
	UOverlay* WeaponTitle01; // 0x1660
	UOverlay* WeaponTitle02; // 0x1668
	UWidgetSwitcher* WidgetSwitcher_1; // 0x1670
	UWidgetSwitcher* WidgetSwitcher_Rarity; // 0x1678
	UWidgetSwitcher* WidgetSwitcher_SpecialWeapon; // 0x1680
	EWeaponType WeaponType; // 0x1688
	int32_t SlotIndex; // 0x168c
	ABravoHotelWeaponBase* WeaponBase; // 0x1690
	bool bCanEquip; // 0x1698
	TMap<EWeaponAttachmentType, UUW-Inventory_WeaponAttachmentSlot_C*> WeaponAttachmentSlots01; // 0x16a0
	TMap<EWeaponAttachmentType, UUW-Inventory_WeaponAttachmentSlot_C*> WeaponAttachmentSlots02; // 0x16f0
	float WeaponIconHeight; // 0x1740
	bool bHover; // 0x1744
	UUW-Inventory_ItemSlotHover_C* HoverWidget; // 0x1748
	int32_t NotifyAnimLoopNum; // 0x1750
};

struct UBP-HUDInteractionComponentBase_C : UHUDInteractionComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf0
	APlayerController* PlayerController; // 0xf8
	bool bAlreadySetOptionWidget; // 0x100
	float defaultContrast; // 0x104
	float defaultMaxBrightness; // 0x108
	float defaultMinBrightness; // 0x10c
	float MinBrightness; // 0x110
	float MaxBrightness; // 0x114
	float Contrast; // 0x118
	bool bUsePostProcessVolumeOption; // 0x11c
	float ColorGradingGlobalGamma; // 0x120
	float FilmToeIntensity; // 0x124
	bool IsInWidget; // 0x128
	bool bInputModeUI; // 0x129
	TArray<FName> InputActionsToBlock; // 0x130
};

struct UParticleModuleMeshRotation_Seeded : UParticleModuleMeshRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UNavigationSystemV1 : UNavigationSystemBase {
	ANavigationData* MainNavData; // 0x28
	ANavigationData* AbstractNavData; // 0x30
	FName DefaultAgentName; // 0x38
	TSoftClassPtr<UObject> CrowdManagerClass; // 0x40
	char bAutoCreateNavigationData : 1; // 0x68
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x68
	char bAllowClientSideNavigation : 1; // 0x68
	char bShouldDiscardSubLevelNavData : 1; // 0x68
	char bTickWhilePaused : 1; // 0x68
	char bSupportRebuilding : 1; // 0x68
	char bInitialBuildingLocked : 1; // 0x68
	char bSkipAgentHeightCheckWhenPickingNavData : 1; // 0x69
	ENavDataGatheringModeConfig DataGatheringMode; // 0x6c
	char bGenerateNavigationOnlyAroundNavigationInvokers : 1; // 0x70
	float ActiveTilesUpdateInterval; // 0x74
	TArray<FNavDataConfig> SupportedAgents; // 0x78
	FNavAgentSelector SupportedAgentsMask; // 0x88
	TArray<ANavigationData*> NavDataSet; // 0x90
	TArray<ANavigationData*> NavDataRegistrationQueue; // 0xa0
	FMulticastInlineDelegate OnNavDataRegisteredEvent; // 0xc0
	FMulticastInlineDelegate OnNavigationGenerationFinishedDelegate; // 0xd0
	FNavigationSystemRunMode OperationMode; // 0x1bc
	float DirtyAreasUpdateFreq; // 0x514
};

struct UAudioCaptureComponent : USynthComponent {
	int32_t JitterLatencyFrames; // 0x710
};

struct AGeometryCollectionDebugDrawActor : AActor {
	FGeometryCollectionDebugDrawWarningMessage WarningMessage; // 0x328
	FGeometryCollectionDebugDrawActorSelectedRigidBody SelectedRigidBody; // 0x330
	bool bDebugDrawWholeCollection; // 0x348
	bool bDebugDrawHierarchy; // 0x349
	bool bDebugDrawClustering; // 0x34a
	EGeometryCollectionDebugDrawActorHideGeometry HideGeometry; // 0x34b
	bool bShowRigidBodyId; // 0x34c
	bool bShowRigidBodyCollision; // 0x34d
	bool bCollisionAtOrigin; // 0x34e
	bool bShowRigidBodyTransform; // 0x34f
	bool bShowRigidBodyInertia; // 0x350
	bool bShowRigidBodyVelocity; // 0x351
	bool bShowRigidBodyForce; // 0x352
	bool bShowRigidBodyInfos; // 0x353
	bool bShowTransformIndex; // 0x354
	bool bShowTransform; // 0x355
	bool bShowParent; // 0x356
	bool bShowLevel; // 0x357
	bool bShowConnectivityEdges; // 0x358
	bool bShowGeometryIndex; // 0x359
	bool bShowGeometryTransform; // 0x35a
	bool bShowBoundingBox; // 0x35b
	bool bShowFaces; // 0x35c
	bool bShowFaceIndices; // 0x35d
	bool bShowFaceNormals; // 0x35e
	bool bShowSingleFace; // 0x35f
	int32_t SingleFaceIndex; // 0x360
	bool bShowVertices; // 0x364
	bool bShowVertexIndices; // 0x365
	bool bShowVertexNormals; // 0x366
	bool bUseActiveVisualization; // 0x367
	float PointThickness; // 0x368
	float LineThickness; // 0x36c
	bool bTextShadow; // 0x370
	float TextScale; // 0x374
	float NormalScale; // 0x378
	float AxisScale; // 0x37c
	float ArrowScale; // 0x380
	FColor RigidBodyIdColor; // 0x384
	float RigidBodyTransformScale; // 0x388
	FColor RigidBodyCollisionColor; // 0x38c
	FColor RigidBodyInertiaColor; // 0x390
	FColor RigidBodyVelocityColor; // 0x394
	FColor RigidBodyForceColor; // 0x398
	FColor RigidBodyInfoColor; // 0x39c
	FColor TransformIndexColor; // 0x3a0
	float TransformScale; // 0x3a4
	FColor LevelColor; // 0x3a8
	FColor ParentColor; // 0x3ac
	float ConnectivityEdgeThickness; // 0x3b0
	FColor GeometryIndexColor; // 0x3b4
	float GeometryTransformScale; // 0x3b8
	FColor BoundingBoxColor; // 0x3bc
	FColor FaceColor; // 0x3c0
	FColor FaceIndexColor; // 0x3c4
	FColor FaceNormalColor; // 0x3c8
	FColor SingleFaceColor; // 0x3cc
	FColor VertexColor; // 0x3d0
	FColor VertexIndexColor; // 0x3d4
	FColor VertexNormalColor; // 0x3d8
	UBillboardComponent* SpriteComponent; // 0x3e0
};

struct UItemSortOrder : UDataAsset {
	TMap<FName, int32_t> SortOrder; // 0x30
};

struct UEditableStaticMeshAdapter : UEditableMeshAdapter {
	UStaticMesh* StaticMesh; // 0x28
	UStaticMesh* OriginalStaticMesh; // 0x30
	int32_t StaticMeshLODIndex; // 0x38
};

struct UMK3DTargetcamComponent : UActorComponent {
	FMulticastInlineDelegate OnMK3DTargetcamCompleteEvent; // 0xb0
	TArray<FMK3DHighlightTargetEvent> MK3DTargetEvents; // 0xd8
};

struct UPaperSpriteComponent : UMeshComponent {
	UPaperSprite* SourceSprite; // 0x4e0
	UMaterialInterface* MaterialOverride; // 0x4e8
	FLinearColor SpriteColor; // 0x4f0
};

struct UBravoHotelSmartPingSystem : UActorComponent {
	TArray<ABravoHotelSmartPingActor*> PingActorList; // 0xb0
	ABravoHotelSmartPingActor* PersonalSupplyBoxActor; // 0xc0
	ABravoHotelSmartPingActor* GuideActor; // 0xc8
	ABravoHotelSmartPingActor* BookActor; // 0xd0
	ABravoHotelSmartPingActor* ExpertWeaponActor; // 0xd8
	TArray<ABravoHotelSmartPingActor*> MaterialActors; // 0xe0
	TArray<ABravoHotelSmartPingActor*> LocalPingActors; // 0xf0
	TArray<AActor*> DetectedInteractionCancleActors; // 0x100
	float LightPoleHeight; // 0x110
	float LightPoleRadius; // 0x114
	float DelayAfterLanding; // 0x118
	UParticleSystem* LightPoleEffect; // 0x120
};

struct UParticleSystemReplay : UObject {
	int32_t ClipIDNumber; // 0x28
};

struct UMaterial : UMaterialInterface {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UPhysicalMaterialMask* PhysMaterialMask; // 0x90
	UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0x98
	FScalarMaterialInput Metallic; // 0xd8
	FScalarMaterialInput Specular; // 0xec
	FScalarMaterialInput Anisotropy; // 0x100
	FVectorMaterialInput Normal; // 0x114
	FVectorMaterialInput Tangent; // 0x128
	FColorMaterialInput EmissiveColor; // 0x13c
	EMaterialDomain MaterialDomain; // 0x150
	EBlendMode BlendMode; // 0x151
	EDecalBlendMode DecalBlendMode; // 0x152
	EMaterialDecalResponse MaterialDecalResponse; // 0x153
	EMaterialShadingModel ShadingModel; // 0x154
	char bCastDynamicShadowAsMasked : 1; // 0x155
	FMaterialShadingModelField ShadingModels; // 0x156
	float OpacityMaskClipValue; // 0x158
	FVectorMaterialInput WorldPositionOffset; // 0x15c
	FScalarMaterialInput Refraction; // 0x170
	FMaterialAttributesInput MaterialAttributes; // 0x184
	FScalarMaterialInput PixelDepthOffset; // 0x19c
	FShadingModelMaterialInput ShadingModelFromMaterialExpression; // 0x1b0
	char bEnableSeparateTranslucency : 1; // 0x1c4
	char bEnableResponsiveAA : 1; // 0x1c4
	char bEnableTranslucentVelocity : 1; // 0x1c8
	char bScreenSpaceReflections : 1; // 0x1cc
	char bContactShadows : 1; // 0x1cc
	char TwoSided : 1; // 0x1cc
	char DitheredLODTransition : 1; // 0x1cc
	char DitherOpacityMask : 1; // 0x1cc
	char bAllowNegativeEmissiveColor : 1; // 0x1cc
	ETranslucencyLightingMode TranslucencyLightingMode; // 0x1cd
	char bEnableMobileSeparateTranslucency : 1; // 0x1ce
	int32_t NumCustomizedUVs; // 0x1d0
	float TranslucencyDirectionalLightingIntensity; // 0x1d4
	float TranslucentShadowDensityScale; // 0x1d8
	float TranslucentSelfShadowDensityScale; // 0x1dc
	float TranslucentSelfShadowSecondDensityScale; // 0x1e0
	float TranslucentSelfShadowSecondOpacity; // 0x1e4
	float TranslucentBackscatteringExponent; // 0x1e8
	FLinearColor TranslucentMultipleScatteringExtinction; // 0x1ec
	float TranslucentShadowStartOffset; // 0x1fc
	char bDisableDepthTest : 1; // 0x200
	char bWriteOnlyAlpha : 1; // 0x200
	char bGenerateSphericalParticleNormals : 1; // 0x200
	char bTangentSpaceNormal : 1; // 0x200
	char bUseEmissiveForDynamicAreaLighting : 1; // 0x200
	char bBlockGI : 1; // 0x200
	char bUsedAsSpecialEngineMaterial : 1; // 0x200
	char bUsedWithSkeletalMesh : 1; // 0x200
	char bUsedWithEditorCompositing : 1; // 0x201
	char bUsedWithParticleSprites : 1; // 0x201
	char bUsedWithBeamTrails : 1; // 0x201
	char bUsedWithMeshParticles : 1; // 0x201
	char bUsedWithNiagaraSprites : 1; // 0x201
	char bUsedWithNiagaraRibbons : 1; // 0x201
	char bUsedWithNiagaraMeshParticles : 1; // 0x201
	char bUsedWithGeometryCache : 1; // 0x201
	char bUsedWithStaticLighting : 1; // 0x202
	char bUsedWithMorphTargets : 1; // 0x202
	char bUsedWithSplineMeshes : 1; // 0x202
	char bUsedWithInstancedStaticMeshes : 1; // 0x202
	char bUsedWithGeometryCollections : 1; // 0x202
	char bUsesDistortion : 1; // 0x202
	char bUsedWithClothing : 1; // 0x202
	char bUsedWithWater : 1; // 0x204
	char bUsedWithHairStrands : 1; // 0x204
	char bUsedWithLidarPointCloud : 1; // 0x204
	char bUsedWithUI : 1; // 0x208
	char bAutomaticallySetUsageInEditor : 1; // 0x208
	char bFullyRough : 1; // 0x208
	char bUseFullPrecision : 1; // 0x208
	char bUseLightmapDirectionality : 1; // 0x208
	char bForwardRenderUsePreintegratedGFForSimpleIBL : 1; // 0x20c
	char bUseHQForwardReflections : 1; // 0x210
	char bUsePlanarForwardReflections : 1; // 0x210
	char bNormalCurvatureToRoughness : 1; // 0x210
	EMaterialTessellationMode D3D11TessellationMode; // 0x211
	char bEnableCrackFreeDisplacement : 1; // 0x212
	char bEnableAdaptiveTessellation : 1; // 0x212
	char AllowTranslucentCustomDepthWrites : 1; // 0x212
	char Wireframe : 1; // 0x212
	char bCanMaskedBeAssumedOpaque : 1; // 0x212
	char bIsMasked : 1; // 0x212
	char bIsPreviewMaterial : 1; // 0x212
	char bIsFunctionPreviewMaterial : 1; // 0x212
	char bUseMaterialAttributes : 1; // 0x213
	char bCastRayTracedShadows : 1; // 0x213
	char bUseTranslucencyVertexFog : 1; // 0x213
	char bIsSky : 1; // 0x213
	char bComputeFogPerPixel : 1; // 0x213
	char bOutputTranslucentVelocity : 1; // 0x213
	char bAllowDevelopmentShaderCompile : 1; // 0x213
	char bIsMaterialEditorStatsMaterial : 1; // 0x213
	EBlendableLocation BlendableLocation; // 0x214
	char BlendableOutputAlpha : 1; // 0x215
	char bEnableStencilTest : 1; // 0x215
	EMaterialStencilCompare StencilCompare; // 0x216
	char StencilRefValue; // 0x217
	ERefractionMode RefractionMode; // 0x218
	int32_t BlendablePriority; // 0x21c
	char bIsBlendable : 1; // 0x220
	uint32_t UsageFlagWarnings; // 0x224
	float RefractionDepthBias; // 0x228
	FGuid StateID; // 0x22c
	float MaxDisplacement; // 0x23c
	FMaterialCachedExpressionData CachedExpressionData; // 0x2c8
};

struct UCollisionProfile : UDeveloperSettings {
	TArray<FCollisionResponseTemplate> Profiles; // 0x38
	TArray<FCustomChannelSetup> DefaultChannelResponses; // 0x48
	TArray<FCustomProfile> EditProfiles; // 0x58
	TArray<FRedirector> ProfileRedirects; // 0x68
	TArray<FRedirector> CollisionChannelRedirects; // 0x78
};

struct UWBP-HeartBeatSensorEffect_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* HeartBeat; // 0x250
	UWidgetAnimation* FadeOut; // 0x258
	UWidgetAnimation* FadeIn; // 0x260
	UImage* Image; // 0x268
	UImage* Image_95; // 0x270
	UImage* Image_140; // 0x278
	UUMGSequencePlayer* NewVar_1; // 0x280
	bool IsFadeInOutEvent; // 0x288
	float CurrentFade; // 0x28c
};

struct ULowEntryRawSocketConnection : UObject {
	ULowEntryRawSocketConnectionListenerCode* ListenerCode; // 0x38
	FString Host; // 0x40
	int32_t Port; // 0x50
	int32_t PortUdp; // 0x54
	TArray<char> SendingBytes; // 0x58
	TArray<char> ReceivedBytes; // 0x68
	TArray<char> ReceivingBuffer; // 0x78
	bool CanCallOnDisconnect; // 0x98
	FDelegate OnConnectEvent; // 0x9c
	FDelegate OnDisconnectEvent; // 0xac
	FDelegate OnReceiveMessageEvent; // 0xbc
	FDelegate OnReceiveUnreliableMessageEvent; // 0xcc
};

struct UBTDecorator_SetTagCooldown : UBTDecorator {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
};

struct UInterpTrackFloatMaterialParam : UInterpTrackFloatBase {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct ULiveLinkSourceSettings : UObject {
	ELiveLinkSourceMode Mode; // 0x28
	FLiveLinkSourceBufferManagementSettings BufferSettings; // 0x30
	FString ConnectionString; // 0x80
	ULiveLinkSourceFactory* Factory; // 0x90
};

struct UUW-PersonalSupplyBoxWeaponInfoWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* AmmoImage; // 0x250
	UTextBlock* AmmoText; // 0x258
	UButton* Button_2; // 0x260
	UCanvasPanel* CanvasPanel_98; // 0x268
	UHorizontalBox* HorizontalBox_Perk; // 0x270
	UHorizontalBox* HorizontalBox_Rarity; // 0x278
	UImage* Image; // 0x280
	UImage* Image_369; // 0x288
	UImage* Image_704; // 0x290
	UImage* Image_874; // 0x298
	UImage* Image_924; // 0x2a0
	UImage* Image_1262; // 0x2a8
	UImage* Image_1400; // 0x2b0
	UTextBlock* Reinforce; // 0x2b8
	UTextBlock* TextBlock_291; // 0x2c0
	UUW-Inventory_WeaponPerkSlot_C* UW-Inventory_WeaponPerkSlot; // 0x2c8
	UUW-Inventory_WeaponPerkSlot_C* UW-Inventory_WeaponPerkSlot_C_2; // 0x2d0
	UUW-Inventory_WeaponPerkSlot_C* UW-Inventory_WeaponPerkSlot_C_3; // 0x2d8
	UImage* WeaponBg; // 0x2e0
	UImage* WeaponImage01; // 0x2e8
	UTextBlock* WeaponName; // 0x2f0
	UWidgetSwitcher* WidgetSwitcher_1; // 0x2f8
	UUW-Inventory_DragItem_C* DraggedWidget; // 0x300
	FInventoryItemInfo WeaponData; // 0x308
	FMulticastInlineDelegate OnDropEventDispatcher; // 0x3a0
	FName AmmorKey; // 0x3b0
	FMulticastInlineDelegate ShowTooltipEventDispatcher; // 0x3b8
	bool IsDefaultWeapon; // 0x3c8
	int32_t ClickNum; // 0x3cc
	FMulticastInlineDelegate OnDefaultWeaponEventDispatcher; // 0x3d0
	FKey SaveKey; // 0x3e0
};

struct USavedInventorySettings : UBravoHotelLocalSaveBase {
	FSettingData Data; // 0x28
};

struct UWorldComposition : UObject {
	TArray<ULevelStreaming*> TilesStreaming; // 0x140
	double TilesStreamingTimeThreshold; // 0x150
	bool bLoadAllTilesDuringCinematic; // 0x158
	bool bRebaseOriginIn3DSpace; // 0x159
	float RebaseOriginDistance; // 0x15c
	bool bApplyMinStreamingPriorityToLOD; // 0x160
	bool bApplyStreamingDistanceScaleToLOD; // 0x161
	TArray<FString> DevFilterRule; // 0x168
};

struct UPlayMontageCallbackProxy : UObject {
	FMulticastInlineDelegate OnCompleted; // 0x28
	FMulticastInlineDelegate OnBlendOut; // 0x38
	FMulticastInlineDelegate OnInterrupted; // 0x48
	FMulticastInlineDelegate OnNotifyBegin; // 0x58
	FMulticastInlineDelegate OnNotifyEnd; // 0x68
};

struct UGizmoWorldAxisSource : UObject {
	FVector Origin; // 0x30
	int32_t AxisIndex; // 0x3c
};

struct ACameraShakeSourceActor : AActor {
	UCameraShakeSourceComponent* CameraShakeSourceComponent; // 0x328
};

struct AMagicLeapSharedWorldGameState : AGameState {
	FMagicLeapSharedWorldSharedData SharedWorldData; // 0x398
	FMagicLeapSharedWorldAlignmentTransforms AlignmentTransforms; // 0x3a8
	FMulticastInlineDelegate OnSharedWorldDataUpdated; // 0x3b8
	FMulticastInlineDelegate OnAlignmentTransformsUpdated; // 0x3c8
};

struct UBravoHotelVehicleStandardGroupBoxComponent : UBoxComponent {
	FDataTableRowHandle VehicleStandardGroupInfo; // 0x4d8
	FVehicleSpawnBoxList EmptyBoxInfos; // 0x4e8
	FVehicleSpawnBoxList DivisionBoxInfos; // 0x4f8
	FVehicleSpawnBoxList AllBoxInfos; // 0x508
};

struct AGameModeBase : AInfo {
	FString OptionsString; // 0x328
	AGameSession* GameSessionClass; // 0x338
	AGameStateBase* GameStateClass; // 0x340
	APlayerController* PlayerControllerClass; // 0x348
	APlayerState* PlayerStateClass; // 0x350
	AHUD* HUDClass; // 0x358
	APawn* DefaultPawnClass; // 0x360
	ASpectatorPawn* SpectatorClass; // 0x368
	APlayerController* ReplaySpectatorPlayerControllerClass; // 0x370
	AServerStatReplicator* ServerStatReplicatorClass; // 0x378
	AGameSession* GameSession; // 0x380
	AGameStateBase* GameState; // 0x388
	AServerStatReplicator* ServerStatReplicator; // 0x390
	FText DefaultPlayerName; // 0x398
	char bUseSeamlessTravel : 1; // 0x3b0
	char bStartPlayersAsSpectators : 1; // 0x3b0
	char bPauseable : 1; // 0x3b0
};

struct UWidgetTree : UObject {
	UWidget* RootWidget; // 0x28
};

struct UReplicationPingComponet : UActorComponent {
	int32_t PingCounter; // 0xb0
	bool bEnabled; // 0xb4
	APlayerState* PlayerState; // 0xb8
};

struct UBP_KeyConflict_C : UObject {
	UBP_KeyCombination_C* Conflicting Combination; // 0x28
	EKeyConflict Conflict Type; // 0x30
};

struct UUW-GameBuffSlot_C : UBravoHotelGameBuffSlot {
	UImage* Image_1294; // 0x2f8
};

struct UBravohotelNetSyncComponent : USceneComponent {
	bool IsParentsSync; // 0x230
	bool IsSimulatePhysics; // 0x231
	bool IsCollisionEnabled; // 0x232
	bool IsEverTick; // 0x233
};

struct ABravoHotelTimeOfDay : AActor {
	ETimeOfDayType CurrentTimeOfDayType; // 0x328
	bool bUseClearFog; // 0x329
	float PostSimulationAlpha; // 0x32c
	TMap<ETimeOfDayType, FBravoHotelTimeOfDaySettings> TimeOfDaySettings; // 0x330
	ADirectionalLight* DirectionalLightRef; // 0x380
	ASkyLight* SkyLightRef; // 0x388
	AExponentialHeightFog* ExponentialHeightFogRef; // 0x390
	AAtmosphericFog* AtmosphericFogRef; // 0x398
	APostProcessVolume* PostProcessVolumeRef; // 0x3a0
	TArray<FBravoHotelTimeOfDaySimulateInformation> SimulateInformations; // 0x3a8
	float SimulationStartTime; // 0x3b8
	bool bIsSimulating; // 0x3bc
	FBravoHotelTimeOfDaySettings CurrentSimulationTOD; // 0x3c0
	FBravoHotelTimeOfDaySettings TargetSimulationTOD; // 0x458
	ETimeOfDayType TargetSimulateTimeOfDay; // 0x4f0
	float DL_RotationTransitionTime; // 0x4f4
	float PostTransitionDelayTime; // 0x4f8
	float PostTransitionTime; // 0x4fc
	ETimeOfDayType StartTimeOfDayType; // 0x518
};

struct UAnimationSettings : UDeveloperSettings {
	int32_t CompressCommandletVersion; // 0x38
	TArray<FString> KeyEndEffectorsMatchNameArray; // 0x40
	bool ForceRecompression; // 0x50
	bool bOnlyCheckForMissingSkeletalMeshes; // 0x51
	bool bForceBelowThreshold; // 0x52
	bool bFirstRecompressUsingCurrentOrDefault; // 0x53
	bool bRaiseMaxErrorToExisting; // 0x54
	bool bEnablePerformanceLog; // 0x55
	bool bStripAnimationDataOnDedicatedServer; // 0x56
	bool bTickAnimationOnSkeletalMeshInit; // 0x57
};

struct UMaterialExpressionRound : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UAsyncTaskDownloadImage : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFail; // 0x40
};

struct UMaterialExpressionSkyAtmosphereLightDiskLuminance : UMaterialExpression {
	int32_t LightIndex; // 0x40
};

struct UClothLODDataCommon_Legacy : UObject {
	UClothPhysicalMeshDataBase_Legacy* PhysicalMeshData; // 0x28
	FClothPhysicalMeshData ClothPhysicalMeshData; // 0x30
	FClothCollisionData CollisionData; // 0x128
};

struct UBravoHotelConversationComponent : UActorComponent {
	UBravoHotelConversationWidget* ConversationWidgetClass; // 0xc8
	UBravoHotelConversationWidget* CurrentConversationWidget; // 0xd0
	FName CurrentConversationKey; // 0xd8
	int32_t CurrentSentenceIndex; // 0xe0
	TMap<FName, FAudioPlayingHandle> VoiceChannelInfo; // 0x100
};

struct UMaterialExpressionFmod : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UEnvQueryTest_Distance : UEnvQueryTest {
	EEnvTestDistance TestMode; // 0x1f8
	UEnvQueryContext* DistanceTo; // 0x200
};

struct UMovieSceneColorSection : UMovieSceneSection {
	FMovieSceneFloatChannel RedCurve; // 0xe0
	FMovieSceneFloatChannel GreenCurve; // 0x180
	FMovieSceneFloatChannel BlueCurve; // 0x220
	FMovieSceneFloatChannel AlphaCurve; // 0x2c0
};

struct UAudioImpulseResponse : UObject {
	TArray<float> ImpulseResponse; // 0x28
	int32_t NumChannels; // 0x38
	int32_t SampleRate; // 0x3c
	float NormalizationVolumeDb; // 0x40
	TArray<float> IRData; // 0x48
};

struct USlateBrushAsset : UObject {
	FSlateBrush Brush; // 0x28
};

struct UARPlaneGeometry : UARTrackedGeometry {
	EARPlaneOrientation Orientation; // 0xe8
	FVector Center; // 0xec
	FVector Extent; // 0xf8
	UARPlaneGeometry* SubsumedBy; // 0x118
};

struct UMorphTarget : UObject {
	USkeletalMesh* BaseSkelMesh; // 0x28
};

struct UAkSlider : UWidget {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	FSliderStyle WidgetStyle; // 0x120
	EOrientation Orientation; // 0x460
	FLinearColor SliderBarColor; // 0x464
	FLinearColor SliderHandleColor; // 0x474
	bool IndentHandle; // 0x484
	bool Locked; // 0x485
	float StepSize; // 0x488
	bool IsFocusable; // 0x48c
	FAkPropertyToControl ThePropertyToControl; // 0x490
	FAkWwiseItemToControl ItemToControl; // 0x4a0
	FMulticastInlineDelegate OnValueChanged; // 0x4e0
	FMulticastInlineDelegate OnItemDropped; // 0x4f0
	FMulticastInlineDelegate OnPropertyDropped; // 0x500
};

struct UTextureRenderTarget2D : UTextureRenderTarget {
	int32_t SizeX; // 0xc0
	int32_t SizeY; // 0xc4
	FLinearColor ClearColor; // 0xc8
	TextureAddress AddressX; // 0xd8
	TextureAddress AddressY; // 0xd9
	char bForceLinearGamma : 1; // 0xda
	char bHDR : 1; // 0xda
	char bGPUSharedFlag : 1; // 0xda
	ETextureRenderTargetFormat RenderTargetFormat; // 0xdb
	char bAutoGenerateMips : 1; // 0xdc
	TextureFilter MipsSamplerFilter; // 0xdd
	TextureAddress MipsAddressU; // 0xde
	TextureAddress MipsAddressV; // 0xdf
	EPixelFormat OverrideFormat; // 0xe0
};

struct UEditableTextBox : UWidget {
	FText Text; // 0x108
	FDelegate TextDelegate; // 0x120
	FEditableTextBoxStyle WidgetStyle; // 0x130
	USlateWidgetStyleAsset* Style; // 0x920
	FText HintText; // 0x928
	FDelegate HintTextDelegate; // 0x940
	FSlateFontInfo Font; // 0x950
	FLinearColor ForegroundColor; // 0x9a0
	FLinearColor BackgroundColor; // 0x9b0
	FLinearColor ReadOnlyForegroundColor; // 0x9c0
	bool IsReadOnly; // 0x9d0
	bool IsPassword; // 0x9d1
	float MinimumDesiredWidth; // 0x9d4
	FMargin Padding; // 0x9d8
	bool IsCaretMovedWhenGainFocus; // 0x9e8
	bool SelectAllTextWhenFocused; // 0x9e9
	bool RevertTextOnEscape; // 0x9ea
	bool ClearKeyboardFocusOnCommit; // 0x9eb
	bool SelectAllTextOnCommit; // 0x9ec
	bool AllowContextMenu; // 0x9ed
	EVirtualKeyboardType KeyboardType; // 0x9ee
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x9ef
	EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0x9f0
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x9f1
	ETextJustify Justification; // 0x9f2
	FShapedTextOptions ShapedTextOptions; // 0x9f3
	FMulticastInlineDelegate OnTextChanged; // 0x9f8
	FMulticastInlineDelegate OnTextCommitted; // 0xa08
};

struct UMaterialExpressionDeriveNormalZ : UMaterialExpression {
	FExpressionInput InXY; // 0x40
};

struct USubstanceGraphInstance : UObject {
	FString PackageURL; // 0x38
	USubstanceInstanceFactory* ParentFactory; // 0x48
	TMap<uint32_t, UTexture2D*> ImageSources; // 0x50
	UMaterial* CreatedMaterial; // 0xa0
	UMaterialInstanceConstant* ConstantCreatedMaterial; // 0xa8
	UMaterialInstanceDynamic* DynamicCreatedMaterial; // 0xb0
	TMap<int32_t, FGuid> OutputTextureLinkData; // 0xb8
	TMap<uint32_t, USubstanceOutputData*> OutputInstances; // 0x108
	bool bIsFrozen; // 0x158
};

struct UAsyncStaticMeshComponent : UStaticMeshComponent {
	TSoftObjectPtr<UStaticMesh> SoftMeshPtr; // 0x548
};

struct UMaterialExpressionFresnel : UMaterialExpression {
	FExpressionInput ExponentIn; // 0x40
	float Exponent; // 0x54
	FExpressionInput BaseReflectFractionIn; // 0x58
	float BaseReflectFraction; // 0x6c
	FExpressionInput Normal; // 0x70
};

struct UGranularSynth : USynthComponent {
	USoundWave* GranulatedSoundWave; // 0x710
};

struct ABravoHotelScenarioActor : AActor {
	bool bActiveOnStart; // 0x350
};

struct UDatasmithPointLightComponentTemplate : UDatasmithObjectTemplate {
	ELightUnits IntensityUnits; // 0x30
	float SourceRadius; // 0x34
	float SourceLength; // 0x38
	float AttenuationRadius; // 0x3c
};

struct UGizmoComponentWorldTransformSource : UGizmoBaseTransformSource {
	USceneComponent* Component; // 0x48
	bool bModifyComponentOnTransform; // 0x50
};

struct UPrimitiveComponent : USceneComponent {
	float MinDrawDistance; // 0x238
	float LDMaxDrawDistance; // 0x23c
	float CachedMaxDrawDistance; // 0x240
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x244
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x245
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x246
	ELightmapType LightmapType; // 0x247
	char bUseMaxLODAsImposter : 1; // 0x248
	char bBatchImpostersAsInstances : 1; // 0x248
	char bNeverDistanceCull : 1; // 0x248
	char bAlwaysCreatePhysicsState : 1; // 0x248
	char bGenerateOverlapEvents : 1; // 0x249
	char bMultiBodyOverlap : 1; // 0x249
	char bTraceComplexOnMove : 1; // 0x249
	char bReturnMaterialOnMove : 1; // 0x249
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x249
	char bAllowCullDistanceVolume : 1; // 0x249
	char bHasMotionBlurVelocityMeshes : 1; // 0x249
	char bVisibleInReflectionCaptures : 1; // 0x249
	char bVisibleInRayTracing : 1; // 0x24a
	char bRenderInMainPass : 1; // 0x24a
	char bRenderInDepthPass : 1; // 0x24a
	char bReceivesDecals : 1; // 0x24a
	char bOwnerNoSee : 1; // 0x24a
	char bOnlyOwnerSee : 1; // 0x24a
	char bIgnoreNearClippingForOcclusion : 1; // 0x24a
	char bTreatAsBackgroundForOcclusion : 1; // 0x24a
	char bUseAsOccluder : 1; // 0x24b
	char bSelectable : 1; // 0x24b
	char bForceMipStreaming : 1; // 0x24b
	char bHasPerInstanceHitProxies : 1; // 0x24b
	char CastShadow : 1; // 0x24b
	char bAffectDynamicIndirectLighting : 1; // 0x24b
	char bAffectDistanceFieldLighting : 1; // 0x24b
	char bCastDynamicShadow : 1; // 0x24b
	char bCastStaticShadow : 1; // 0x24c
	char bCastDirectionalShadow : 1; // 0x24c
	char bCastVolumetricTranslucentShadow : 1; // 0x24c
	char bSelfShadowOnly : 1; // 0x24c
	char bCastFarShadow : 1; // 0x24c
	char bCastInsetShadow : 1; // 0x24c
	char bCastCinematicShadow : 1; // 0x24c
	char bCastHiddenShadow : 1; // 0x24c
	char bCastShadowAsTwoSided : 1; // 0x24d
	char bLightAsIfStatic : 1; // 0x24d
	char bLightAttachmentsAsGroup : 1; // 0x24d
	char bExcludeFromLightAttachmentGroup : 1; // 0x24d
	char bReceiveMobileCSMShadows : 1; // 0x24d
	char bSingleSampleShadowFromStationaryLights : 1; // 0x24d
	char bIgnoreRadialImpulse : 1; // 0x24d
	char bIgnoreRadialForce : 1; // 0x24d
	char bApplyImpulseOnDamage : 1; // 0x24e
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x24e
	char bFillCollisionUnderneathForNavmesh : 1; // 0x24e
	char AlwaysLoadOnClient : 1; // 0x24e
	char AlwaysLoadOnServer : 1; // 0x24e
	char bUseEditorCompositing : 1; // 0x24e
	char bRenderCustomDepth : 1; // 0x24e
	char bHasNoStreamableTextures : 1; // 0x24f
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x250
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x252
	FLightingChannels LightingChannels; // 0x253
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x254
	int32_t CustomDepthStencilValue; // 0x258
	FCustomPrimitiveData CustomPrimitiveData; // 0x260
	FCustomPrimitiveData CustomPrimitiveDataInternal; // 0x270
	int32_t TranslucencySortPriority; // 0x280
	int32_t VisibilityId; // 0x284
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x288
	int8_t VirtualTextureLodBias; // 0x298
	int8_t VirtualTextureCullMips; // 0x299
	int8_t VirtualTextureMinCoverage; // 0x29a
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x29b
	float LpvBiasMultiplier; // 0x2a0
	float BoundsScale; // 0x2ac
	TArray<AActor*> MoveIgnoreActors; // 0x2c0
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2d0
	FBodyInstance BodyInstance; // 0x2f0
	FMulticastSparseDelegate OnComponentHit; // 0x480
	FMulticastSparseDelegate OnComponentBeginOverlap; // 0x481
	FMulticastSparseDelegate OnComponentEndOverlap; // 0x482
	FMulticastSparseDelegate OnComponentWake; // 0x483
	FMulticastSparseDelegate OnComponentSleep; // 0x484
	FMulticastSparseDelegate OnBeginCursorOver; // 0x486
	FMulticastSparseDelegate OnEndCursorOver; // 0x487
	FMulticastSparseDelegate OnClicked; // 0x488
	FMulticastSparseDelegate OnReleased; // 0x489
	FMulticastSparseDelegate OnInputTouchBegin; // 0x48a
	FMulticastSparseDelegate OnInputTouchEnd; // 0x48b
	FMulticastSparseDelegate OnInputTouchEnter; // 0x48c
	FMulticastSparseDelegate OnInputTouchLeave; // 0x48d
	UPrimitiveComponent* LODParentPrimitive; // 0x4a8
};

struct UEndTurnCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct ULightmassPrimitiveSettingsObject : UObject {
	FLightmassPrimitiveSettings LightmassSettings; // 0x28
};

struct UUW-RewardGoldSlot_02_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_Bouns; // 0x250
	UTextBlock* 1; // 0x258
	UTextBlock* 10; // 0x260
	UTextBlock* 100; // 0x268
	UTextBlock* 1000; // 0x270
	UTextBlock* Empty; // 0x278
	UImage* Image_7; // 0x280
	UImage* Image_11; // 0x288
	UImage* Image_14; // 0x290
	UImage* Image_15; // 0x298
	UImage* Image_16; // 0x2a0
	UImage* Image_17; // 0x2a8
	UImage* Image_18; // 0x2b0
	UImage* Image_20; // 0x2b8
	UImage* Image_21; // 0x2c0
	UImage* Image_22; // 0x2c8
	UImage* Image_23; // 0x2d0
	UImage* Image_1473; // 0x2d8
	UTextBlock* TextBlock_4; // 0x2e0
	UImage* TextLight_3; // 0x2e8
	int32_t Save; // 0x2f0
	FAudioPlayingHandle LoopSound; // 0x2f4
	bool IsStopSound; // 0x2f8
};

struct ABP-FieldViewCam_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	UCameraComponent* WorldViewCamera; // 0x330
	USceneComponent* DefaultSceneRoot; // 0x338
	float DeltaTime; // 0x340
	bool bIsBackgroundScene; // 0x344
};

struct UShadowMapTexture2D : UTexture2D {
	EShadowMapFlags ShadowmapFlags; // 0xe8
};

struct UBHBMaterialEffectBase : UBravoHotelBuffBase {
	UCameraPostProcessPreset* CameraPostProcessPreset; // 0x380
	TArray<UMeshComponent*> TargetMeshs; // 0x388
};

struct UParticleModuleRequired : UParticleModule {
	UMaterialInterface* Material; // 0x30
	float MinFacingCameraBlendDistance; // 0x38
	float MaxFacingCameraBlendDistance; // 0x3c
	FVector EmitterOrigin; // 0x40
	FRotator EmitterRotation; // 0x4c
	EParticleScreenAlignment ScreenAlignment; // 0x58
	char bUseLocalSpace : 1; // 0x59
	char bKillOnDeactivate : 1; // 0x59
	char bKillOnCompleted : 1; // 0x59
	EParticleSortMode SortMode; // 0x5a
	char bUseLegacyEmitterTime : 1; // 0x5b
	char bRemoveHMDRoll : 1; // 0x5b
	char bEmitterDurationUseRange : 1; // 0x5b
	float EmitterDuration; // 0x5c
	FRawDistributionFloat SpawnRate; // 0x60
	TArray<FParticleBurst> BurstList; // 0x90
	float EmitterDelay; // 0xa0
	float EmitterDelayLow; // 0xa4
	char bDelayFirstLoopOnly : 1; // 0xa8
	EParticleSubUVInterpMethod InterpolationMethod; // 0xa9
	char bScaleUV : 1; // 0xaa
	char bEmitterDelayUseRange : 1; // 0xaa
	EParticleBurstMethod ParticleBurstMethod; // 0xab
	char bOverrideSystemMacroUV : 1; // 0xac
	char bUseMaxDrawCount : 1; // 0xac
	EOpacitySourceMode OpacitySourceMode; // 0xad
	EEmitterNormalsMode EmitterNormalsMode; // 0xae
	char bOrbitModuleAffectsVelocityAlignment : 1; // 0xaf
	int32_t SubImages_Horizontal; // 0xb0
	int32_t SubImages_Vertical; // 0xb4
	float RandomImageTime; // 0xb8
	int32_t RandomImageChanges; // 0xbc
	FVector MacroUVPosition; // 0xc0
	float MacroUVRadius; // 0xcc
	EParticleUVFlipMode UVFlippingMode; // 0xd0
	ESubUVBoundingVertexCount BoundingMode; // 0xd1
	char bDurationRecalcEachLoop : 1; // 0xd2
	FVector NormalsSphereCenter; // 0xd4
	float AlphaThreshold; // 0xe0
	int32_t EmitterLoops; // 0xe4
	UTexture2D* CutoutTexture; // 0xe8
	int32_t MaxDrawCount; // 0xf0
	float EmitterDurationLow; // 0xf4
	FVector NormalsCylinderDirection; // 0xf8
	TArray<FName> NamedMaterialOverrides; // 0x108
};

struct ABravoHotelProjectileGrenade : ABravoHotelProjectileBase {
	bool bIgnoreOwner; // 0x328
	float Damage; // 0x32c
	float MinimumDamage; // 0x330
	float DamageFalloff; // 0x334
	float ImpulseStrength; // 0x338
	bool bCanApplyImpulseByBounce; // 0x33c
	bool bOverrideDropSpeed; // 0x33d
	float DropSpeed; // 0x340
	UDamageType* HitDamageTypeClass; // 0x348
	UDamageType* DamageTypeClass; // 0x350
	bool bIgnoreCharacterVelocityOnRangedWeapon; // 0x358
	USphereComponent* SphereCollision; // 0x360
	UStaticMeshComponent* Projectile; // 0x368
	UParticleSystemComponent* TrailParticleComponent; // 0x370
	UBravoHotelThrowingWeaponMovementComponent* ProjectileMovement; // 0x378
	FTimerHandle TimerHandle_GrenadeExplosion; // 0x380
	FVector GrenadeExplosionEffectScale; // 0x388
	bool bUseActorRotationGrenadeExplosionEffect; // 0x394
	UParticleSystem* GrenadeExplosionEffect; // 0x398
	UParticleSystem* GrenadeExplosionEffectInWater; // 0x3a0
	UParticleSystem* TrailEffectInWater; // 0x3a8
	UParticleSystem* SuperTrailEffect; // 0x3b0
	UParticleSystem* NormalTrailEffect; // 0x3b8
	bool bNeedToDeactiveTrailParticle; // 0x3c0
	float SuperTrailViewDistance; // 0x3c4
	UParticleSystemComponent* ShiningEffectComponent; // 0x3c8
	UParticleSystem* ShiningEffect; // 0x3d0
	float ShiningEffectViewDistance; // 0x3d8
	UParticleSystemComponent* GrenadeTrailEffectInWater; // 0x3e0
	UAkComponent* AkAudioComponent; // 0x3e8
	UAkAudioEvent* ExplodeEvent; // 0x3f0
	UAkAudioEvent* ExplodeEventInWater; // 0x3f8
	UAkAudioEvent* BoundEvent; // 0x400
	float RemainExplodeTime; // 0x408
	float InsideEffectRange; // 0x40c
	float EffectRange; // 0x410
	float TriggerRange; // 0x414
	FAudioPlayingHandle LoopSoundHandle; // 0x418
	bool bEnableActiveGrenade; // 0x41c
	bool bLocalSameTeam; // 0x41d
	TArray<ABravoHotelCharacter*> OverlapCharacters; // 0x420
	TArray<AActor*> DotDamagedActors; // 0x430
	FName GrenadeWeaponName; // 0x440
	float HitDamage; // 0x448
	float HitDamageToCharacter; // 0x44c
	float PenetrateDamage; // 0x450
	bool bInWater; // 0x454
	int32_t BounceCount; // 0x458
	bool bUseCookingTime; // 0x45c
	bool bUseBoobyTrap; // 0x45d
	bool bActiveByHit; // 0x45e
	bool bNeedServerDamage; // 0x45f
	float BoobyTrapDelayTime; // 0x460
	float InitialSpeed; // 0x464
	FVector InitialVelocity; // 0x468
	bool bUseRotaionProjectileMesh; // 0x474
	FRotator RotationSpeed; // 0x478
	bool bIsStopSimulate; // 0x484
	FVector GuidedLocation; // 0x488
	FTimerHandle TimerHandle_BoobyTrap; // 0x498
	EProjectileGrenadeState ProjectileGrenadeState; // 0x4a0
	bool bUseActiveTriggerActorLocation; // 0x4a1
	AActor* TriggerActor; // 0x4a8
	bool bApplyShortRangeHitDamage; // 0x4c8
	float ShortRangeHitDamageDistance; // 0x4cc
	float ShortRangeHitDamageMultiply; // 0x4d0
	FName WeaponId; // 0x4d8
	FName ItemId; // 0x4e0
	bool bMarkActiveGrenade; // 0x4e8
	bool DamageAffectedByObstacle; // 0x598
	float ExplosionEffectRange; // 0x59c
	float ExplosionCameraShakeScaleMin; // 0x5a0
	float ExplosionCameraShakeScaleMax; // 0x5a4
	float ExplosionDeafenDurationMin; // 0x5a8
	float ExplosionDeafenDutationMax; // 0x5ac
	float ExplosionDeafenDistanceLevelClose; // 0x5b0
	float ExplosionDeafenDistanceLevelMid; // 0x5b4
	UCameraShake* ExplosionCameraShake; // 0x5b8
	FConditionedWeaponInfo ConditionedWeaponInfo; // 0x5c0
	FRotator DecalRotation; // 0x5e0
	TArray<UBravoHotelDamageType*> AllowedDamageType; // 0x600
	float Health; // 0x610
	FMulticastInlineDelegate OnExplosion; // 0x648
	FMulticastInlineDelegate OnActiveBoobyTrapDelegate; // 0x658
	FTimerHandle TimerHandle_CheckWarningVoiceEvent; // 0x668
	FVector ExplosionOriginDeltaLocation; // 0x670
};

struct UMovieSceneLevelVisibilityTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UBuffControlState : UObject {
	TArray<uint16_t> ActiveBuffs; // 0x70
	ABravoHotelCharacter* BravoHotelCharacter; // 0x80
	UBravoHotelAbilityComponent* BravoHotelAbilityComponent; // 0x88
};

struct ABP_MoveElevator_C : ABravoHotelMoveElevator {
	FPointerToUberGraphFrame UberGraphFrame; // 0x338
	UBoxComponent* Box2; // 0x340
	UBoxComponent* Box1; // 0x348
	UBravoHotelAudioEmitterComponent* BravoHotelAudioEmitter; // 0x350
	UStaticMeshComponent* Upper_Rear_Display_Sub; // 0x358
	UStaticMeshComponent* Upper_Front_Display_Sub; // 0x360
	UStaticMeshComponent* Lower_Rear_Display_Sub; // 0x368
	UStaticMeshComponent* Lower_Front_Display_Sub; // 0x370
	UBoxComponent* PointBox; // 0x378
	UBoxComponent* FloorBox; // 0x380
	UStaticMeshComponent* Main_Display; // 0x388
	UBoxComponent* Box; // 0x390
	UTextRenderComponent* TextRender5; // 0x398
	UTextRenderComponent* TextRender7; // 0x3a0
	UTextRenderComponent* TextRender6; // 0x3a8
	UTextRenderComponent* TextRender1; // 0x3b0
	UTextRenderComponent* TextRender4; // 0x3b8
	UTextRenderComponent* TextRender3; // 0x3c0
	UTextRenderComponent* TextRender; // 0x3c8
	UTextRenderComponent* TextRender2; // 0x3d0
	UBoxComponent* Upper_Front_Button_Area; // 0x3d8
	UBoxComponent* Upper_Rear_Button_Area; // 0x3e0
	UBoxComponent* Lower_Rear_Button_Area; // 0x3e8
	UBoxComponent* Lower_Front_Button_Area; // 0x3f0
	UBoxComponent* Main_Rear_Button_Area; // 0x3f8
	UBoxComponent* Main_Front_Button_Area; // 0x400
	UStaticMeshComponent* Main_Front_Button; // 0x408
	UStaticMeshComponent* Main_Rear_Button; // 0x410
	UStaticMeshComponent* Upper_Rear_Display; // 0x418
	UStaticMeshComponent* Upper_Front_Display; // 0x420
	UStaticMeshComponent* Lower_Rear_Display; // 0x428
	UStaticMeshComponent* Lower_Front_Display; // 0x430
	UStaticMeshComponent* Upper_Rear_Button; // 0x438
	UStaticMeshComponent* Upper_Front_Button; // 0x440
	UStaticMeshComponent* Lower_Rear_Button; // 0x448
	UStaticMeshComponent* Lower_Front_Button; // 0x450
	UStaticMeshComponent* Upper_Rear_Left; // 0x458
	UStaticMeshComponent* Upper_Rear_Right; // 0x460
	UStaticMeshComponent* Upper_Front_Left; // 0x468
	UStaticMeshComponent* Upper_Front_Right; // 0x470
	UStaticMeshComponent* Lower_Rear_Right; // 0x478
	UStaticMeshComponent* Lower_Front_Right; // 0x480
	UStaticMeshComponent* Lower_Front_Left; // 0x488
	UStaticMeshComponent* Lower_Rear_Left; // 0x490
	USceneComponent* Upper_Rear; // 0x498
	USceneComponent* Upper_Front; // 0x4a0
	USceneComponent* Lower_Rear; // 0x4a8
	USceneComponent* Lower_Front; // 0x4b0
	USceneComponent* Upper_Floor; // 0x4b8
	USceneComponent* Front_Door; // 0x4c0
	USceneComponent* Rear_Door; // 0x4c8
	USceneComponent* Lower_Floor; // 0x4d0
	UStaticMeshComponent* Main_Front_Right; // 0x4d8
	UStaticMeshComponent* Main_Front_Left; // 0x4e0
	UStaticMeshComponent* Main_Body; // 0x4e8
	USceneComponent* Scene1; // 0x4f0
	UStaticMeshComponent* Main_Rear_Right; // 0x4f8
	UStaticMeshComponent* Main_Rear_Left; // 0x500
	float ElevatorCloseDoor______0_70C4393D45E164D3C8B473964F68015B; // 0x508
	ETimelineDirection ElevatorCloseDoor__Direction_70C4393D45E164D3C8B473964F68015B; // 0x50c
	UTimelineComponent* ElevatorCloseDoor; // 0x510
	float LowerMoving______0_95D3AE1045ABFF7C4CC7778EAC04BCDA; // 0x518
	ETimelineDirection LowerMoving__Direction_95D3AE1045ABFF7C4CC7778EAC04BCDA; // 0x51c
	UTimelineComponent* LowerMoving; // 0x520
	float ElevatorOpenDoor______0_5DABF5354368A8D3121A6FB4685095FB; // 0x528
	ETimelineDirection ElevatorOpenDoor__Direction_5DABF5354368A8D3121A6FB4685095FB; // 0x52c
	UTimelineComponent* ElevatorOpenDoor; // 0x530
	float UpperMoving______0_B6B6057A44D35DFC9C1FCDB8B065C5D0; // 0x538
	ETimelineDirection UpperMoving__Direction_B6B6057A44D35DFC9C1FCDB8B065C5D0; // 0x53c
	UTimelineComponent* UpperMoving; // 0x540
	FVector Upper_Location; // 0x548
	FVector Body_Position; // 0x554
	bool IsLower; // 0x560
	float DoorTravel; // 0x564
	float DoorMoveTime; // 0x568
	bool IsMoving; // 0x56c
	FVector RoomPos; // 0x570
	USceneComponent* MoveFloor; // 0x580
	TArray<ABravoHotelCharacter*> AddCharacters; // 0x588
	float AddMoveOffest; // 0x598
	UAkAudioEvent* OpenDoorCompleted; // 0x5a0
	UAkAudioEvent* OpeningDoor; // 0x5a8
	UAkAudioEvent* ClosingDoor; // 0x5b0
	UAkAudioEvent* CloseDoorCompleted; // 0x5b8
	UAkAudioEvent* SoundEventForMoved; // 0x5c0
	UAkAudioEvent* SoundEventForMoving; // 0x5c8
	bool IsTraceMoving; // 0x5d0
	FVector TraceLocation; // 0x5d4
	TArray<AActor*> AttachActors; // 0x5e0
	bool NewVar_1; // 0x5f0
	bool NewVar_2; // 0x5f1
	UAkComponent* ElevatorAKComponent; // 0x5f8
	UAkAudioEvent* ButtonSound; // 0x600
};

struct UPostEventAsync : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate Completed; // 0x30
};

struct UWidgetAnimationPlayCallbackProxy : UObject {
	FMulticastInlineDelegate Finished; // 0x28
};

struct APlayerStart : ANavigationObjectBase {
	FName PlayerStartTag; // 0x350
};

struct UBravoHotelWorldMapAreaWidget : UUserWidget {
	UCanvasPanel* redzone; // 0x248
	UCanvasPanel* Nuclear; // 0x250
	UCanvasPanel* FindLandingPosition; // 0x258
	UCanvasPanel* FindLandingPositionTry; // 0x260
	UCanvasPanel* SearchInstinct; // 0x268
	UCanvasPanel* SpatialSense; // 0x270
	UCanvasPanel* CarScan; // 0x278
	UCanvasPanel* CarScanTry; // 0x280
	UCanvasPanel* UltimateVehicle; // 0x288
	UCanvasPanel* NitroBoom; // 0x290
	UCanvasPanel* TransportAircraft; // 0x298
	UCanvasPanel* TransportDropBox; // 0x2a0
	UCanvasPanel* MaterialItem; // 0x2a8
	UCanvasPanel* Amplifier; // 0x2b0
	UCanvasPanel* HeartBeatSensor; // 0x2b8
	UCanvasPanel* Trap; // 0x2c0
	UOverlay* Driver_Sounds; // 0x2c8
	UCanvasPanel* LocalPing; // 0x2d0
	UCanvasPanel* ExpertWeaponItem; // 0x2d8
	UImage* Img_RedZone; // 0x2e0
	UImage* Img_Nuclear; // 0x2e8
	UImage* Img_FindLandingPosition; // 0x2f0
	UImage* Img_FindLandingPositionTry; // 0x2f8
	UImage* Img_FindLandingPositionAnim; // 0x300
	UImage* Img_SearchInstinct; // 0x308
	UImage* Img_SpatialSense; // 0x310
	UImage* Img_CarScan; // 0x318
	UImage* Img_CarScanTry; // 0x320
	UImage* Img_UltimateVehicle; // 0x328
	UImage* Img_NitroBoom; // 0x330
	UImage* Img_Amplifier; // 0x338
	UImage* Img_HeartBeatSensor; // 0x340
	UImage* Img_DropBoxCap_Open; // 0x348
	UImage* Img_DropBoxCap_Close; // 0x350
	UImage* LocalPingImg; // 0x358
	UImage* Img_DropBoxChute; // 0x360
	UBravoHotelIconImageWidget* IconImage; // 0x368
	UBravoHotelIconImageWidget* IconImage_2; // 0x370
	UOverlay* Overlay_TransportAircraft; // 0x378
	UWidgetSwitcher* WidgetType; // 0x380
	UWidgetSwitcher* WidgetSwitcher_TrapState; // 0x388
	UWidgetSwitcher* WidgetSwitcher_Icon; // 0x390
	UWidgetSwitcher* WidgetSwitcher_Icon2; // 0x398
	UWidgetSwitcher* WidgetSwitcher_DropBoxCap; // 0x3a0
	UWidgetSwitcher* WidgetSwitcher_Icon2_2; // 0x3a8
	UWidgetAnimation* Anim_RedZone; // 0x3b0
	UWidgetAnimation* Anim_Nuclear; // 0x3b8
	UWidgetAnimation* Anim_FindLandingPosition; // 0x3c0
	UWidgetAnimation* Anim_SearchInstinct; // 0x3c8
	UWidgetAnimation* Anim_SpatialSense; // 0x3d0
	UWidgetAnimation* Anim_Propeller; // 0x3d8
	UWidgetAnimation* Anim_TrapStick; // 0x3e0
	UWidgetAnimation* Anim_Trapped; // 0x3e8
	UWidgetAnimation* Anim_DriverSounds; // 0x3f0
	UAkAudioEvent* AudioEvent_ActiveTrap; // 0x3f8
	FTimerHandle TimerHandle_UpdateLocation; // 0x400
	FTimerHandle TimerHandle_CheckValid; // 0x418
	FTimerHandle TimerHandle_OnAnimationFinished; // 0x430
	FTimerHandle TimerHandle_OnAutoRemove; // 0x438
	float SpatialSenseDuration; // 0x440
	UWidget* CurrentWidget; // 0x448
	UWidget* CurrentImg; // 0x450
	UWidgetAnimation* CurrentAnim; // 0x458
	EWorldMapAreaWidgetType AreaWidgetType; // 0x460
	FAreaWidgetInfo AreaWidgetInfo; // 0x468
	UBravoHotelMapCompWidget* MapCompWidgetRef; // 0x4f0
	UBravoHotelMainWidget* MainWidgetRef; // 0x4f8
	ABravoHotelPlayerHUD* PlayerHUDRef; // 0x500
	float CarScanTime; // 0x508
};

struct UFixedFrameRateCustomTimeStep : UEngineCustomTimeStep {
	FFrameRate FixedFrameRate; // 0x28
};

struct ABravoHotelGrenadeWeapon : ABravoHotelThrowingWeapon {
	float GrenadeHitDamage; // 0x1be8
	bool bEnableGuidedShot; // 0x1bec
	UAnimSequence* Locomotion_Stand_ThrowUnder_Idle_Additive; // 0x1bf0
	UAkAudioEvent* ThrowEvent; // 0x1bf8
	UAkAudioEvent* CookEvent; // 0x1c00
	UAnimSequence* Locomotion_Stand_PinOff_Idle; // 0x1c08
	bool bNeedAssistantWeapon; // 0x1c10
	float FireWeaponDelayTime; // 0x1c14
	int32_t SpawnGrenadeCount; // 0x1c18
	FVector FireWeaponLocationOffset; // 0x1c1c
	UAnimSequence* Locomotion_Crouch_Idle_1P; // 0x1c28
	UAnimSequence* Locomotion_Stand_Idle_Under_1P; // 0x1c30
	UAnimSequence* Locomotion_Stand_ThrowUnder_Idle_1P; // 0x1c38
	UAnimSequence* Locomotion_Stand_Idle; // 0x1c40
	ABravoHotelWeaponBase* AssistantWeaponClass; // 0x1c48
	FName HandSocketName; // 0x1c50
	float DestroyDelayTime; // 0x1c58
	ABravoHotelProjectileGrenade* GrenadeProjectileClass; // 0x1c60
	FAnimSlot Prone_UnderThrow_LeverOffGrenade; // 0x1c68
	float FireVelocity; // 0x1c78
	EGrenadeThrowingType ThrowingType; // 0x1c80
	FAnimSlot LeverOffGrenade; // 0x1c88
	float ThrowingWeaponCameraShakeScale; // 0x1c98
	float AfterThrowAnimDelay; // 0x1c9c
	FAnimSlot UnderThrowGrenade; // 0x1ca0
	float ProjectilePredictTime; // 0x1cb0
	UAnimSequence* Locomotion_Stand_ThrowUnder_Idle; // 0x1cb8
	FRotator FireRotation; // 0x1cc0
	FAnimSlot Prone_OverThrow; // 0x1cd0
	FAnimSlot Crouch_PinOffGrenade; // 0x1ce0
	FAnimSlot Crouch_OverThrowGrenade; // 0x1cf0
	UAnimSequence* Locomotion_Crouch_ThrowUnder_Idle_Additive; // 0x1d08
	FRotator CalcProjectilePredictPathRot; // 0x1d10
	FAnimSlot Crouch_UnderThrow_LeverOffGrenade; // 0x1d20
	UAnimSequence* Locomotion_Prone_PinOff_Idle_ThrowUnder; // 0x1d38
	FMulticastInlineDelegate OnChangeThrowingTypeDelegate; // 0x1d40
	FAnimSlot UnderThrow_LeverOffGrenade; // 0x1d50
	bool bIsCooked; // 0x1d60
	float SpawnRotationDelta; // 0x1d64
	float UnderThrowDegreeValue; // 0x1d68
	bool bOverrideSpawnGrenadeCount; // 0x1d6c
	FAnimSlot Crouch_UnderThrowGrenade; // 0x1d70
	UAnimSequence* Locomotion_Prone_PinOff_Idle_ThrowOver; // 0x1d80
	float UnderThrowLocationCompensationValue; // 0x1d88
	bool DrawPredictProjectileLine; // 0x1d8c
	UAnimSequence* Locomotion_Crouch_Idle; // 0x1d90
	UAnimSequence* Locomotion_Crouch_PinOff_Idle_Additive; // 0x1d98
	float ThrowStartedTime; // 0x1da0
	FMulticastInlineDelegate OnChangeThrowingWeaponStateDelegate; // 0x1da8
	UAnimSequence* Locomotion_Crouch_ThrowUnder_Idle_1P; // 0x1db8
	float OverThrowDegreeValue; // 0x1dc0
	UAnimSequence* Locomotion_Prone_PinOff_Idle_ThrowUnder_1P; // 0x1dc8
	float ThrowVelocityModifierByCharacterMovement; // 0x1dd0
	float GrenadeThrowDirectionCorrectionValue; // 0x1dd4
	float GrenadeCookingTime; // 0x1ddc
	FRotator FireRotationOffset; // 0x1de0
	FVector FireLocationOffset; // 0x1dec
	float GuidedShotRadius; // 0x1df8
	FAnimSlot OverThrowGrenade; // 0x1e00
	UAnimSequence* Locomotion_Crouch_ThrowUnder_Idle; // 0x1e10
	float GuidedShotDistance; // 0x1e18
	ABravoHotelProjectileGrenade* ProjectileGrenade; // 0x1e20
	UAnimSequence* Locomotion_Prone_Idle_1P; // 0x1e28
	float GrenadeHitDamageToCharacter; // 0x1e30
	float RightHandOffset; // 0x1e34
	float GrenadeDamage; // 0x1e38
	UAnimSequence* Locomotion_Stand_Idle_Under; // 0x1e40
	int32_t OverrideSpawnGrenadeCount; // 0x1e48
	float ThrowingWeaponCameraShakeDelayTime; // 0x1e4c
	FAnimSlot Prone_OverThrow_LeverOffGrenade; // 0x1e50
	UAnimSequence* Locomotion_Stand_PinOff_Idle_Additive_1P; // 0x1e60
	UAnimSequence* Locomotion_Stand_PinOff_Idle_1P; // 0x1e68
	float SpawnPositionDelta; // 0x1e70
	UAnimSequence* Locomotion_Prone_PinOff_Idle_ThrowOver_1P; // 0x1e78
	float FireCorrectLocationHitBlock; // 0x1e80
	UCurveFloat* InterpProjectilePredictPathJumpCurve; // 0x1e88
	float OverThrowGrenadeVelocity; // 0x1e90
	EThrowingWeaponType GrenadeType; // 0x1e94
	UAnimSequence* Locomotion_Stand_PinOff_Idle_Additive; // 0x1e98
	UAnimSequence* Locomotion_Stand_Idle_1P; // 0x1ea0
	UCurveFloat* InterpProjectilePredictPathNormalCurve; // 0x1ea8
	FAnimSlot PinOffGrenade; // 0x1eb0
	float UnderThrowGrenadeVelocity; // 0x1ec0
	FTimerHandle PredictTimeHandle; // 0x1ec8
	UParticleSystem* PinOffParticle; // 0x1ed0
	UCameraShake* ThrowingWeaponCameraShake; // 0x1ed8
	EGrenadeThrowingType PredictPathThrowingType; // 0x1ee0
	FName StartFireBoneName; // 0x1ee4
	UAnimSequence* Locomotion_Crouch_ThrowUnder_Idle_Additive_1P; // 0x1ef0
	bool bEnableUnderThrow; // 0x1ef8
	UAnimSequence* Locomotion_Prone_Idle; // 0x1f00
	UAnimSequence* Locomotion_Crouch_PinOff_Idle_Additive_1P; // 0x1f08
	bool bEnableCooking; // 0x1f10
	UAnimSequence* Locomotion_Stand_ThrowUnder_Idle_Additive_1P; // 0x1f18
	UAnimSequence* Locomotion_Crouch_PinOff_Idle; // 0x1f20
	EThrowingWeaponState GrenadeState; // 0x1f28
	UAnimSequence* Locomotion_Crouch_PinOff_Idle_1P; // 0x1f30
	FVector FireDirection; // 0x1f3c
	float OverThrowLocationCompensationValue; // 0x1f48
	FVector FireLocation; // 0x1f50
	FAnimSlot Prone_UnderThrow; // 0x1f68
};

struct UFSM_FinishState_AsyncWithCallbacks : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	FDelegate InBegin; // 0x38
	FDelegate InExit; // 0x48
	float Timer; // 0x58
	FTimerHandle TimerHandle; // 0x60
	FMulticastInlineDelegate OnSuccess; // 0x68
	FMulticastInlineDelegate OnAborted; // 0x78
};

struct UBravoHotelLocalSavedSettings : UBravoHotelLocalSaveBase {
	FName UserName; // 0x28
	TMap<EMouseSensitivityState, int32_t> MouseSensitivityStates; // 0x30
	bool bRememberMe; // 0x80
	FBravoHotelMatchingSettings MatchingSettings; // 0x88
	TMap<EWeaponType, EWeaponFireMode> FireModeSettings; // 0xa8
	bool bAutoReload; // 0xf8
	FName OpeningMovieName; // 0xfc
	bool bFirstRun; // 0x104
	FCoherentSavedSettings CoherentSettings; // 0x108
};

struct USourceEffectPannerPreset : USoundEffectSourcePreset {
	FSourceEffectPannerSettings Settings; // 0x70
};

struct UParticleModuleVelocityInheritParent : UParticleModuleVelocityBase {
	FRawDistributionVector Scale; // 0x38
};

struct UDestructibleMesh : USkeletalMesh {
	FDestructibleParameters DefaultDestructibleParameters; // 0x398
	TArray<FFractureEffect> FractureEffects; // 0x420
};

struct UBrushComponent : UPrimitiveComponent {
	UModel* Brush; // 0x4b0
	UBodySetup* BrushBodySetup; // 0x4b8
};

struct UFSMSettings : UObject {
	bool EnableInterfaceStatePropagation; // 0x28
	bool SuppressRPCWarnings; // 0x29
	float DefaultTickInterval; // 0x2c
	TArray<FName> DefaultStates; // 0x30
};

struct UBravoHotelPatchWidget : UUserWidget {
	UBravoHotelPatchService* PatchService; // 0x268
};

struct UUW-ListWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UUniformGridPanel* UniformGridPanel_List; // 0x250
	UUserWidget* WidgetClass; // 0x258
	bool bStartFromTop; // 0x260
	int32_t MaxWidgetCount; // 0x264
	EHorizontalAlignment Alignment; // 0x268
	FMargin SlotPadding; // 0x26c
};

struct UDistributionFloatParameterBase : UDistributionFloatConstant {
	FName ParameterName; // 0x40
	float MinInput; // 0x48
	float MaxInput; // 0x4c
	float MinOutput; // 0x50
	float MaxOutput; // 0x54
	DistributionParamMode ParamMode; // 0x58
};

struct UFont : UObject {
	EFontCacheType FontCacheType; // 0x30
	TArray<FFontCharacter> Characters; // 0x38
	TArray<UTexture2D*> Textures; // 0x48
	int32_t IsRemapped; // 0x58
	float EmScale; // 0x5c
	float Ascent; // 0x60
	float Descent; // 0x64
	float Leading; // 0x68
	int32_t Kerning; // 0x6c
	FFontImportOptionsData ImportOptions; // 0x70
	int32_t NumCharacters; // 0x120
	TArray<int32_t> MaxCharHeight; // 0x128
	float ScalingFactor; // 0x138
	int32_t LegacyFontSize; // 0x13c
	FName LegacyFontName; // 0x140
	FCompositeFont CompositeFont; // 0x148
};

struct UDatasmithLandscapeTemplate : UDatasmithObjectTemplate {
	UMaterialInterface* LandscapeMaterial; // 0x30
	int32_t StaticLightingLOD; // 0x38
};

struct UBravoHotelGameBuffSlot : UUserWidget {
	UImage* Image_Buff; // 0x248
	UProgressBar* ProgressBar_Slot; // 0x250
	FBravoHotelBuffUIInfo BuffUIInfo; // 0x258
	float LastTimer; // 0x2f0
};

struct UBravoHotelCrosshairManager : UObject {
	TMap<FName, UBravoHotelCrosshair*> Map; // 0x28
	TMap<FName, UBravoHotelCrosshair*> AdditiveMap; // 0x78
	TArray<FName> ActiveAdditiveCroshairList; // 0xc8
};

struct USkyLightComponent : ULightComponentBase {
	ESkyLightSourceType SourceType; // 0x268
	UTextureCube* Cubemap; // 0x270
	float SourceCubemapAngle; // 0x278
	int32_t CubemapResolution; // 0x27c
	float SkyDistanceThreshold; // 0x280
	bool bCaptureEmissiveOnly; // 0x284
	bool bLowerHemisphereIsBlack; // 0x285
	FLinearColor LowerHemisphereColor; // 0x288
	char bAffectDynamicIndirectLighting : 1; // 0x298
	float OcclusionMaxDistance; // 0x29c
	float Contrast; // 0x2a0
	float OcclusionExponent; // 0x2a4
	FColor OcclusionFoliageTint; // 0x2a8
	float MinOcclusion; // 0x2ac
	FColor OcclusionBarkTint; // 0x2b0
	FColor OcclusionTint; // 0x2b4
	EOcclusionCombineMode OcclusionCombineMode; // 0x2b8
	ESpecularOcclusionMode SpecularOcclusionMode; // 0x2b9
	float SpecularOcclusionStrength; // 0x2bc
	float SelfShadowBiasForObjectAO; // 0x2c0
	float OcclusionTranslucencyForTwoSidedFoliages; // 0x2c4
	UTextureCube* BlendDestinationCubemap; // 0x388
};

struct UBravoHotelItemSpawnDebugWidget : UUserWidget {
	FVector WorldCenter; // 0x248
	FVector2D WorldSize; // 0x254
	FVector2D BaseMapSize; // 0x25c
	FDebugRecordInfo RecordInfo; // 0x268
	FItemDataInfo ItemDataInfoData; // 0x3f0
	TArray<UUserWidget*> SlotList; // 0x4d8
	TMap<FString, FBuildingData> BuildingData; // 0x4e8
	TMap<FString, int32_t> ItemDivisionCnt; // 0x538
	TMap<FString, int32_t> ItemSpawnCnt; // 0x588
	TMap<FString, int32_t> ItemRateAddCnt; // 0x5d8
	TMap<FString, int32_t> ItemRateRemoveCnt; // 0x628
	FString SelectedBuildingName; // 0x678
	FString SelectedStandardGroupName; // 0x688
};

struct AGameStateBase : AInfo {
	AGameModeBase* GameModeClass; // 0x328
	AGameModeBase* AuthorityGameMode; // 0x330
	ASpectatorPawn* SpectatorClass; // 0x338
	TArray<APlayerState*> PlayerArray; // 0x340
	bool bReplicatedHasBegunPlay; // 0x350
	float ReplicatedWorldTimeSeconds; // 0x354
	float ServerWorldTimeSecondsDelta; // 0x358
	float ServerWorldTimeSecondsUpdateFrequency; // 0x35c
};

struct UParticleModuleTypeDataAnimTrail : UParticleModuleTypeDataBase {
	char bDeadTrailsOnDeactivate : 1; // 0x30
	char bEnablePreviousTangentRecalculation : 1; // 0x30
	char bTangentRecalculationEveryFrame : 1; // 0x30
	float TilingDistance; // 0x34
	float DistanceTessellationStepSize; // 0x38
	float TangentTessellationStepSize; // 0x3c
	float WidthTessellationStepSize; // 0x40
};

struct UMaterialExpressionDepthOfFieldFunction : UMaterialExpression {
	EDepthOfFieldFunctionValue FunctionValue; // 0x40
	FExpressionInput Depth; // 0x44
};

struct UMaterialExpressionSingleLayerWaterMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput ScatteringCoefficients; // 0x40
	FExpressionInput AbsorptionCoefficients; // 0x54
	FExpressionInput PhaseG; // 0x68
};

struct UAREnvironmentCaptureProbe : UARTrackedGeometry {
	UAREnvironmentCaptureProbeTexture* EnvironmentCaptureTexture; // 0xf8
};

struct ACameraRig_Rail : AActor {
	float CurrentPositionOnRail; // 0x328
	bool bLockOrientationToRail; // 0x32c
	USceneComponent* TransformComponent; // 0x330
	USplineComponent* RailSplineComponent; // 0x338
	USceneComponent* RailCameraMount; // 0x340
};

struct ABP-BootyBox_C : ABravoHotelBootyBoxActor {
	UStaticMeshComponent* StaticMesh; // 0x3d0
};

struct UNetConnection : UMKNetConnectionEx {
	TArray<UChildConnection*> Children; // 0xb8
	UNetDriver* Driver; // 0xc8
	UPackageMap* PackageMapClass; // 0xd0
	UPackageMap* PackageMap; // 0xd8
	TArray<UChannel*> OpenChannels; // 0xe0
	TArray<AActor*> SentTemporaries; // 0xf0
	AActor* ViewTarget; // 0x100
	AActor* OwningActor; // 0x108
	int32_t MaxPacket; // 0x110
	char InternalAck : 1; // 0x114
	FUniqueNetIdRepl PlayerId; // 0x1d0
	double LastReceiveTime; // 0x240
	TArray<UChannel*> ChannelsToTick; // 0x1580
};

struct UCurveLinearColorAtlas : UTexture2D {
	uint32_t TextureSize; // 0xe8
	TArray<UCurveLinearColor*> GradientCurves; // 0xf0
};

struct UAkGameObject : USceneComponent {
	UAkAudioEvent* AkAudioEvent; // 0x230
	FString EventName; // 0x238
	bool bAutoRegisterWithWwise; // 0x248
};

struct UBP-SavedPlayerInventory_C : USaveGame {
	TArray<FBP-SavedInventoryItemStructure> WearableItemList; // 0x28
	TArray<FBP-SavedInventoryItemStructure> CustomItemList; // 0x38
	TArray<FBP-SavedInventoryItemStructure> WeaponItemList; // 0x48
	TArray<FBP-SavedInventoryItemStructure> InBackpackItemList; // 0x58
	FRepCharacterAppearanceInfo AppearanceInfo; // 0x68
};

struct UMaterialExpressionTextureSample : UMaterialExpressionTextureBase {
	FExpressionInput Coordinates; // 0x50
	FExpressionInput TextureObject; // 0x64
	FExpressionInput MipValue; // 0x78
	FExpressionInput CoordinatesDX; // 0x8c
	FExpressionInput CoordinatesDY; // 0xa0
	FExpressionInput AutomaticViewMipBiasValue; // 0xb4
	ETextureMipValueMode MipValueMode; // 0xc8
	ESamplerSourceMode SamplerSource; // 0xc9
	char AutomaticViewMipBias : 1; // 0xca
	char ConstCoordinate; // 0xcb
	int32_t ConstMipValue; // 0xcc
};

struct ADestructibleActor : AActor {
	UDestructibleComponent* DestructibleComponent; // 0x328
	FMulticastInlineDelegate OnActorFracture; // 0x330
};

struct ULuminARSessionConfig : UARSessionConfig {
	FMagicLeapPlanesQuery PlanesQuery; // 0xb0
	int32_t MaxPlaneQueryResults; // 0x110
	int32_t MinPlaneArea; // 0x114
	bool bArbitraryOrientationPlaneDetection; // 0x118
	FVector PlaneSearchExtents; // 0x11c
	TArray<EMagicLeapPlaneQueryFlags> PlaneQueryFlags; // 0x128
	bool bDiscardZeroExtentPlanes; // 0x138
	bool bDefaultUseUnreliablePose; // 0x139
};

struct UAISense_Blueprint : UAISense {
	UUserDefinedStruct* ListenerDataType; // 0x80
	TArray<UAIPerceptionComponent*> ListenerContainer; // 0x88
	TArray<UAISenseEvent*> UnprocessedEvents; // 0x98
};

struct UMaterialExpressionSobol : UMaterialExpression {
	FExpressionInput cell; // 0x40
	FExpressionInput Index; // 0x54
	FExpressionInput Seed; // 0x68
	uint32_t ConstIndex; // 0x7c
	FVector2D ConstSeed; // 0x80
};

struct UAISenseConfig_Damage : UAISenseConfig {
	UAISense_Damage* Implementation; // 0x48
};

struct ADatasmithAreaLightActor : AActor {
	EDatasmithAreaLightActorType LightType; // 0x328
	EDatasmithAreaLightActorShape LightShape; // 0x329
	FVector2D Dimensions; // 0x32c
	float Intensity; // 0x334
	ELightUnits IntensityUnits; // 0x338
	FLinearColor Color; // 0x33c
	float Temperature; // 0x34c
	UTextureLightProfile* IESTexture; // 0x350
	bool bUseIESBrightness; // 0x358
	float IESBrightnessScale; // 0x35c
	FRotator Rotation; // 0x360
	float SourceRadius; // 0x36c
	float SourceLength; // 0x370
	float AttenuationRadius; // 0x374
	float SpotlightInnerAngle; // 0x378
	float SpotlightOuterAngle; // 0x37c
};

struct UMaterialExpressionDivide : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMaterialExpressionSphericalParticleOpacity : UMaterialExpression {
	FExpressionInput Density; // 0x40
	float ConstantDensity; // 0x54
};

struct UUW-VehicleWidget_C : UBravoHotelVehicleWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a8
	UProgressBar* FuelGauge; // 0x2b0
	UImage* FuelIcon; // 0x2b8
	UProgressBar* HPFaint; // 0x2c0
	UProgressBar* HPGauge; // 0x2c8
	UImage* HPIcon; // 0x2d0
	UTextBlock* SpeedText; // 0x2d8
	UOverlay* SubInfoParent; // 0x2e0
	UUW-VehicleSeatWidget_C* UW-VehicleSeatWidget; // 0x2e8
	ABravoHotelVehicle* CachedVehicle; // 0x2f0
	FLinearColor MySeatColor; // 0x2f8
	FLinearColor EmptyFuelColor; // 0x308
	float InterpTargetHpRate; // 0x318
	float InterpCurrentHpRate; // 0x31c
	float InterpSpeed; // 0x320
	UCurveFloat* HPFaintCurve; // 0x328
	UCurveLinearColor* HPColorCurve; // 0x330
	UUW-VehicleSubInfo_Base_C* SubInfoWidget; // 0x338
	bool EnableBind; // 0x340
	ABravoHotelVehicle* NewVar_1; // 0x348
};

struct UParticleModuleCameraOffset : UParticleModuleCameraBase {
	FRawDistributionFloat CameraOffset; // 0x30
	char bSpawnTimeOnly : 1; // 0x60
	EParticleCameraOffsetUpdateMethod UpdateMethod; // 0x64
};

struct USizeBox : UContentWidget {
	float WidthOverride; // 0x130
	float HeightOverride; // 0x134
	float MinDesiredWidth; // 0x138
	float MinDesiredHeight; // 0x13c
	float MaxDesiredWidth; // 0x140
	float MaxDesiredHeight; // 0x144
	float MinAspectRatio; // 0x148
	float MaxAspectRatio; // 0x14c
	char bOverride_WidthOverride : 1; // 0x150
	char bOverride_HeightOverride : 1; // 0x150
	char bOverride_MinDesiredWidth : 1; // 0x150
	char bOverride_MinDesiredHeight : 1; // 0x150
	char bOverride_MaxDesiredWidth : 1; // 0x150
	char bOverride_MaxDesiredHeight : 1; // 0x150
	char bOverride_MinAspectRatio : 1; // 0x150
	char bOverride_MaxAspectRatio : 1; // 0x150
};

struct UBravoHotelAliveInfoWidget : UUserWidget {
	ABattleRoyaleGameState* GameState; // 0x248
	UCanvasPanel* Canvas_Aircraft; // 0x250
	UTextBlock* T_BoardingCount; // 0x258
	UTextBlock* T_MaxBoardingCount; // 0x260
	FKillAliveInfo KillAliveInfo; // 0x270
};

struct UMovieSceneSkeletalAnimationTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x58
	bool bUseLegacySectionIndexBlend; // 0x68
};

struct UBP_KeyInput_C : UObject {
	FKey Key Input; // 0x28
	bool Analog Use Negative Axis; // 0x40
	float Analog Previous Axis Value; // 0x44
	float Analog Current Axis Value; // 0x48
	float World Delta Seconds; // 0x4c
	bool Input is Using Delta; // 0x50
	FString Display Name; // 0x58
};

struct UBravoHotelInventoryPerkSlotWidget : UUserWidget {
	ABravoHotelCharacter* PlayerCharacter; // 0x248
	FPerkUIInfo PerkInfo; // 0x250
	bool bIsJustVisual; // 0x27c
	UOverlay* OverlayCoolTime; // 0x280
	UTextBlock* TextCoolTime; // 0x288
	UImage* ImgCoolTime; // 0x290
	UImage* Img_Active; // 0x298
};

struct UUW-RequestResuscitation_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_Request; // 0x250
	UImage* Image_955; // 0x258
	UImage* Image_1208; // 0x260
	USizeBox* SizeBox_77; // 0x268
	USizeBox* SizeBox_78; // 0x270
	UTextBlock* Text_Price; // 0x278
	UTextBlock* TextBlock_767; // 0x280
	UWidgetSwitcher* WidgetSwitcher_Price; // 0x288
	ABP-BravoHotel-PlayerController_C* PlayerControllerRef; // 0x290
	bool bCanRequest; // 0x298
	bool bRequest; // 0x299
	FText RequstingResuscitationText; // 0x2a0
	float RequestingSizeBoxWidth; // 0x2b8
	FSlateColor RequestTextColor; // 0x2c0
	FSlateColor RequestingTextColor; // 0x2e8
	float RequestingSizeBoxInitWidth; // 0x310
	FText RequstingResuscitationInitText; // 0x318
	FButtonStyle InitButtonStyle; // 0x330
	FButtonStyle RequestingButtonStyle; // 0x5a8
	FButtonStyle CanRequestButtonStyle; // 0x820
};

struct UMaterialExpressionCrossProduct : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UBravoHotelAudioEventDescription : UDataAsset {
	TMap<TSoftObjectPtr<UAkAudioEvent>, FAudioEventAssetData> EventAssetDataMap; // 0x30
};

struct UGizmoLocalFloatParameterSource : UGizmoBaseFloatParameterSource {
	float Value; // 0x48
	FGizmoFloatParameterChange LastChange; // 0x4c
};

struct UMaterialExpressionSquareRoot : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMovieSceneMarginSection : UMovieSceneSection {
	FMovieSceneFloatChannel TopCurve; // 0xe0
	FMovieSceneFloatChannel LeftCurve; // 0x180
	FMovieSceneFloatChannel RightCurve; // 0x220
	FMovieSceneFloatChannel BottomCurve; // 0x2c0
};

struct USynthSound : USoundWaveProcedural {
	USynthComponent* OwningSynthComponent; // 0x360
};

struct UBravoHotelItemStandardGroupBoxComponent : UBoxComponent {
	FDataTableRowHandle ItemStandardGroupInfo; // 0x4d8
	FSpawnBoxList AllBoxInfos; // 0x4e8
};

struct UNiagaraDataInterfaceStaticMesh : UNiagaraDataInterface {
	UStaticMesh* DefaultMesh; // 0x30
	AActor* Source; // 0x38
	UStaticMeshComponent* SourceComponent; // 0x40
	FNDIStaticMeshSectionFilter SectionFilter; // 0x48
};

struct UBravoHotelPlayerInfoProgressWidget : UUserWidget {
	ABravoHotelCharacter* TargetPawn; // 0x248
	float CurrentHealthIncreaseSpeed; // 0x250
	float CurrentHealthDecreaseSpeed; // 0x254
	float BeforeHealthInterpSpeedRate; // 0x258
	float BeforeHealthTimerDelayRate; // 0x25c
	UHorizontalBox* HorizontalBox_Main; // 0x2a0
	UTextBlock* T_CurrentHealth; // 0x2a8
	UTextBlock* T_MaxHealth; // 0x2b0
	int32_t LastMaxHealth; // 0x2b8
	int32_t HealthPerSlot; // 0x2bc
	float CureLimitPercent; // 0x2c0
	int32_t AnimAdditionalHealth; // 0x2c4
	bool bIsDangerHP; // 0x2c8
	UUserWidget* PlayerInfoProgressSlotWidgetClass; // 0x2d0
	FMulticastInlineDelegate Delegate_OnPlayerInfoSlotSizeChanged; // 0x2d8
};

struct UStreamingSettings : UDeveloperSettings {
	char AsyncLoadingThreadEnabled : 1; // 0x38
	char AsyncPostLoadEnabled : 1; // 0x38
	char WarnIfTimeLimitExceeded : 1; // 0x38
	float TimeLimitExceededMultiplier; // 0x3c
	float TimeLimitExceededMinTime; // 0x40
	int32_t MinBulkDataSizeForAsyncLoading; // 0x44
	char UseBackgroundLevelStreaming : 1; // 0x48
	char AsyncLoadingUseFullTimeLimit : 1; // 0x48
	float AsyncLoadingTimeLimit; // 0x4c
	float PriorityAsyncLoadingExtraTime; // 0x50
	float LevelStreamingActorsUpdateTimeLimit; // 0x54
	float PriorityLevelStreamingActorsUpdateExtraTime; // 0x58
	int32_t LevelStreamingComponentsRegistrationGranularity; // 0x5c
	float LevelStreamingUnregisterComponentsTimeLimit; // 0x60
	int32_t LevelStreamingComponentsUnregistrationGranularity; // 0x64
	char FlushStreamingOnExit : 1; // 0x68
	char EventDrivenLoaderEnabled : 1; // 0x68
};

struct UAnimCompress_RemoveTrivialKeys : UAnimCompress {
	float MaxPosDiff; // 0x40
	float MaxAngleDiff; // 0x44
	float MaxScaleDiff; // 0x48
};

struct UUW-Matchend_BuffList_C : UUserWidget {
	UCanvasPanel* CanvasPanel_Buff; // 0x248
	UImage* Image_Icon_Buff; // 0x250
	UImage* Image_Icon_BuffBg; // 0x258
	UImage* Image_Icon_Ultimate; // 0x260
	USizeBox* SizeBox_Perk; // 0x268
	USizeBox* SizeBox_Ultimate; // 0x270
	UTextBlock* T_Desc; // 0x278
	UUW-Inventory_PerkSlot_C* UW-Inventory_PerkSlot; // 0x280
	UUW-MatchEnd_ItemIcon_C* UW-MatchEnd_ItemIcon; // 0x288
	UWidgetSwitcher* WidgetSwitcher_BuffType; // 0x290
};

struct UUW-Lobby_Main_Web_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* NewAnimation_2; // 0x250
	UBackgroundBlur* BackgroundBlur_1; // 0x258
	UBackgroundBlur* Blur; // 0x260
	UCanvasPanel* CanvasPanel_1; // 0x268
	UImage* Focus; // 0x270
	UCanvasPanel* FocusPanel; // 0x278
	UCoherentUIGTWidget* Lobby; // 0x280
	UUW-ArmoryWidget_C* UW-ArmoryWidget; // 0x288
	UUW-CustomizedCharacter_C* UW-CustomizedCharacter; // 0x290
	UUW-Exit_Popup_C* UW-Exit_Popup; // 0x298
	UUW-Lobby_ArmoryMain_C* UW-Lobby_ArmoryMain; // 0x2a0
	UUW-ReplayListWidget_C* UW-ReplayListWidget; // 0x2a8
	UUW-Volume_C* UW-Volume; // 0x2b0
	FSlateColor NormalTextColor; // 0x2b8
	FSlateColor HoverTextColor; // 0x2e0
	UBP-LobbyWidget_Web_C* LobbyWidgetRef; // 0x308
	FSlateColor NormalSelectedTextColor; // 0x310
	FSlateColor HoverSelectedTextColor; // 0x338
	FLinearColor NormalOptionButtonColor; // 0x360
	FLinearColor HoverOptionButtonColor; // 0x370
	FTimerHandle MatchingPopupTimerHandle; // 0x380
	FKey PopupKey; // 0x388
	bool bExitPopupOpen; // 0x3a0
	bool bOptionPopupOpen; // 0x3a1
	char BattleMode; // 0x3a2
	UDataTable* LobbyCoherentSprite; // 0x3a8
	USettingMainWidget_C* SettingWidget; // 0x3b0
	UAkComponent* LobbySound; // 0x3b8
	FString CurrentTab; // 0x3c0
	UUW-Inventory_ItemSlotHover_C* UW-Inventory_ItemSlotHover; // 0x3d0
	UDataTable* LobbyCoherent2DTexture; // 0x3d8
};

struct UTextureRenderTarget : UTexture {
	float TargetGamma; // 0xb8
};

struct ABP-BravoHotel-PlayerController_C : ABravoHotelPlayerController {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1530
	UBP-HUDInteractionComponent_C* BP-HUDInteractionComponent; // 0x1538
	USmartPingSystem_C* SmartPingSystemComponent; // 0x1540
	FVector MapSize; // 0x1548
	bool IsInWidget; // 0x1554
	TArray<FName> InputActionsToBlock; // 0x1558
	ABravoHotelBlueZone* BlueZone; // 0x1568
	TArray<FText> PhoneticAlphabetTable_NATO; // 0x1570
	bool bHasJustClosed; // 0x1580
	bool bLineTrace; // 0x1581
	UUW-BlackMarket_C* UI-BlackMarket; // 0x1588
	FVector2D LocalScreenPosition; // 0x1590
	FVector2D MaxViewportSize; // 0x1598
	bool ReverseSide; // 0x15a0
	UBP-SavedPlayerInventory_C* SavedInventory; // 0x15a8
	TArray<FString> DefaultItemList; // 0x15b0
	FString SavedInventorySlotName; // 0x15c0
	bool bLoadInventoryData; // 0x15d0
	bool bOpenSystemMenu; // 0x15d1
	float MinBrightness; // 0x15d4
	float MaxBrightness; // 0x15d8
	float Contrast; // 0x15dc
	bool bUsePostProcessVolumeOption; // 0x15e0
	float FilmToeIntensity; // 0x15e4
	float ColorGradingGlobalGamma; // 0x15e8
	bool bInputModeUI; // 0x15ec
	FTimerHandle Timer; // 0x15f0
	FTimerHandle DoubleclickTimer; // 0x15f8
	float CheckTime; // 0x1600
	float DoubleClickTime; // 0x1604
	bool CheckDoubleClick; // 0x1608
	FVector TempLocation; // 0x160c
	TArray<UUW_UserNameTooltip_C*> NameWidgets; // 0x1618
	int32_t CurrentNameWidgetCount; // 0x1628
	bool bNameTooltipMode; // 0x162c
	int32_t SmartPingTypeIndex; // 0x1630
	bool EableSmartPing; // 0x1634
	bool PingLock; // 0x1635
	UUserWidget* OperationMessageWidget; // 0x1638
	UWBP_SPS_UseItemSelectionMenu_C* SelectionMenu; // 0x1640
	bool IsVisibleSelectionMenu; // 0x1648
	TMap<int32_t, FName> BoostItemList; // 0x1650
	bool IgnoreMenu; // 0x16a0
};

struct UUW-CustomizedCharacter_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	FRotator CurrentAccel; // 0x250
	FRotator TargetAccel; // 0x25c
	ACineCameraActor* CurrentCameraActor; // 0x268
	FVector OldCameraLocation; // 0x270
	FVector CurrentCameraLocation; // 0x27c
	FVector OriginCameraLocation; // 0x288
	FVector TargetCameraLocation; // 0x294
	UCustomizedChara_DataAsset_C* DataAsset; // 0x2a0
	bool ResetOriginTransform; // 0x2a8
	float BeginFocusDist; // 0x2ac
	float EndFocusDist; // 0x2b0
	float CurrentFocusDist; // 0x2b4
};

struct UUW-FallingWidget_C : UBravoHotelFallingWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x270
	UWidgetAnimation* Parachute_Loop; // 0x278
	UWidgetAnimation* Parachute_Open; // 0x280
	UCanvasPanel* Canvas; // 0x288
	UHorizontalBox* HorizontalBox_Ground; // 0x290
	UHorizontalBox* HorizontalBox_Parachute; // 0x298
	UHorizontalBox* HorizontalBox_Sea; // 0x2a0
	UImage* Image_797; // 0x2a8
	UImage* Image_798; // 0x2b0
	UOverlay* Overlay_Speed; // 0x2b8
	UImage* Parachute; // 0x2c0
	UImage* Player; // 0x2c8
	UCanvasPanel* PlayerGroup; // 0x2d0
	UProgressBar* SeaHeight; // 0x2d8
	UTextBlock* Speed; // 0x2e0
	UProgressBar* TerrainHeight; // 0x2e8
	bool IsParachute; // 0x2f0
};

struct UMultiLineEditableTextBox : UTextLayoutWidget {
	FText Text; // 0x128
	FText HintText; // 0x140
	FDelegate HintTextDelegate; // 0x158
	FEditableTextBoxStyle WidgetStyle; // 0x168
	FTextBlockStyle TextStyle; // 0x958
	bool bIsReadOnly; // 0xbc0
	bool AllowContextMenu; // 0xbc1
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0xbc2
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xbc3
	USlateWidgetStyleAsset* Style; // 0xbc8
	FSlateFontInfo Font; // 0xbd0
	FLinearColor ForegroundColor; // 0xc20
	FLinearColor BackgroundColor; // 0xc30
	FLinearColor ReadOnlyForegroundColor; // 0xc40
	FMulticastInlineDelegate OnTextChanged; // 0xc50
	FMulticastInlineDelegate OnTextCommitted; // 0xc60
};

struct UUniformVector : UFieldNodeVector {
	float Magnitude; // 0xb0
	FVector Direction; // 0xb4
};

struct UMKDemoNetDriverEx : UNetDriver {
	UObject* SpectatorControllerClass; // 0x928
	UDemoNetDriver* SelfDemoNetDriver; // 0x930
};

struct ULevelSequencePlayer : UMovieSceneSequencePlayer {
	FMulticastInlineDelegate OnCameraCut; // 0x890
};

struct UChildConnection : UNetConnection {
	UNetConnection* Parent; // 0x1aa0
};

struct UParticleModuleMeshRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionVector LifeMultiplier; // 0x30
};

struct USubmixEffectFlexiverbPreset : USoundEffectSubmixPreset {
	FSubmixEffectFlexiverbSettings Settings; // 0x78
};

struct UUW-ListWidget_CoreInfo_C : UUW-ListWidget_ItemBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Anim_AddCoreInfo; // 0x268
	UHorizontalBox* HB_Smartping; // 0x270
	UImage* Img_Back; // 0x278
	UImage* Img_MarkerIcon; // 0x280
	UImage* Img_PerkDeckIcon; // 0x288
	UTextBlock* T_Message; // 0x290
	UTextBlock* T_PingType; // 0x298
	UTextBlock* T_PlayerName; // 0x2a0
	UWidgetSwitcher* WidgetSwitcher_MessageType; // 0x2a8
};

struct UMaterialExpression : UObject {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UMaterialExpressionLandscapeLayerCoords : UMaterialExpression {
	ETerrainCoordMappingType MappingType; // 0x40
	ELandscapeCustomizedCoordType CustomUVType; // 0x41
	float MappingScale; // 0x44
	float MappingRotation; // 0x48
	float MappingPanU; // 0x4c
	float MappingPanV; // 0x50
};

struct UMaterialExpressionWorldPosition : UMaterialExpression {
	EWorldPositionIncludedOffsets WorldPositionShaderOffset; // 0x40
};

struct UStereoLayerShapeCylinder : UStereoLayerShape {
	float Radius; // 0x28
	float OverlayArc; // 0x2c
	int32_t Height; // 0x30
};

struct UUW-MatchEnd_RewardSlot_02_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UHorizontalBox* HorizontalBox; // 0x250
	UHorizontalBox* HorizontalBox_2; // 0x258
	UImage* Image; // 0x260
	UImage* Image_2; // 0x268
	UImage* Image_3; // 0x270
	UImage* Image_4; // 0x278
	UImage* Image_5; // 0x280
	UImage* Image_6; // 0x288
	UImage* Image_7; // 0x290
	UImage* Image_8; // 0x298
	UImage* Image_9; // 0x2a0
	UImage* Image_10; // 0x2a8
	UImage* Image_11; // 0x2b0
	UImage* Image_12; // 0x2b8
	UImage* Image_13; // 0x2c0
	UImage* Image_14; // 0x2c8
	UImage* Image_15; // 0x2d0
	UImage* Image_72; // 0x2d8
	UImage* Image_164; // 0x2e0
	UImage* Image_352; // 0x2e8
	UImage* Image_659; // 0x2f0
	UOverlay* Overlay_4; // 0x2f8
	USizeBox* SizeBox; // 0x300
	USizeBox* SizeBox_54; // 0x308
	UTextBlock* T_WeaponType; // 0x310
	UTextBlock* TextBlock_176; // 0x318
	UTextBlock* TextBlock_258; // 0x320
	UTextBlock* TextBlock_331; // 0x328
	UWidgetSwitcher* WidgetSwitcher_1; // 0x330
	FRewardItemInfo ItemInfo; // 0x338
	FInventoryItemDetailInfo ItemDetailInfo; // 0x340
	FText LocalText; // 0x7d0
	bool bIsSmallIcon; // 0x7e8
};

struct ABravoHotelAircraftBomber : AActor {
	UInterpToMovementComponent* MovementComponent; // 0x328
	int32_t LoopCount; // 0x330
};

struct UPlayerInventoryComponent : UInventoryComponent {
	FMulticastInlineDelegate OnChangeCurrentWeaponDelegate; // 0x2b0
	float PickupTraceDistance; // 0x2c0
	FMulticastInlineDelegate OnChangeWeaponsDelegate; // 0x2c8
	TMap<FName, FText> PrimaryMaterialTargetTextList; // 0x2d8
	FMulticastInlineDelegate OnChangeWearableItemDelegate; // 0x338
	UCurveFloat* ItemDropRateByRank; // 0x358
	ABravoHotelWeaponBase* CurrentAbilityWeapon; // 0x3b0
	int32_t DefaultMaterialItemSlotCount; // 0x3b8
	TArray<ABravoHotelWeaponBase*> WeaponActorSlots; // 0x3c0
	FAnimSlot CurrentEquipAnimSlot; // 0x3d0
	UAkAudioEvent* DropToFloorSound; // 0x3e8
	FName TopArmorName; // 0x3f0
	bool bDropAttachmentToGroundWhenDropWeapon; // 0x3f8
	FMulticastInlineDelegate OnChangeWeaponAttachmentsDelgate; // 0x400
	TArray<FWeaponSlot> AllowedWeaponSlots; // 0x410
	TArray<FName> CombinableRecipeList; // 0x428
	TArray<FInventoryItemInfo> WearableItemSlots; // 0x448
	ABravoHotelWeaponBase* CurrentWeapon; // 0x468
	FFloatInterval DefaultItemDropRateRange; // 0x470
	TArray<FInventoryItemInfo> MaterialItemSlots; // 0x478
	FSettingData InventorySettingData; // 0x48c
	bool bPendingUnEquipWeapon; // 0x4a8
	TArray<UObject*> LoadedClasses; // 0x4c0
	bool bDropWeaponWithAttachment; // 0x4d0
	UCurveFloat* ItemDropRateByTime; // 0x4d8
	FName TopHelmetName; // 0x4e0
	TArray<FName> CompleteCombineItemList; // 0x4e8
	TArray<FKeepedItemInfo> KeepedItemSlots; // 0x508
	bool bEquippingWeapon; // 0x518
	FName TopBagName; // 0x51c
	FStatupAnimData StatupAnimData; // 0x524
	TMap<int32_t, FFloatInterval> ItemDropRateRangeByRank; // 0x538
	FFloatInterval ItemDropDistance; // 0x5e0
	TArray<FName> PrimaryRecipeList; // 0x638
	ABravoHotelWeaponBase* PendingWeapon; // 0x648
	TMap<EWearableItemType, FName> CurrentWearableKeys; // 0x668
	FMulticastInlineDelegate OnChangeMaterialDelegate; // 0x6b8
	bool bPendingEquipWeapon; // 0x6c8
	TArray<FWeaponSlot> DefaultWeaponSlots; // 0x6e8
	TMap<FName, int32_t> PrimaryMaterialList; // 0x700
	int32_t DefualtKeepedItemSlotCount; // 0x750
	bool bIsPlayingEquipAnimMontage; // 0x754
};

struct UBravoHotelPainCausingComponent : UActorComponent {
	float DamagePerSec; // 0xb0
	UDamageType* DamageType; // 0xb8
	float PainInterval; // 0xc0
	char bEntryPain : 1; // 0xc4
	AController* DamageInstigator; // 0xc8
	TArray<AActor*> DamagedActors; // 0xd8
};

struct UUW-RoutePingWidget_Point_C : UBravoHotelRoutePingWidget {
	UWidgetAnimation* Anim_OnShow; // 0x248
	UImage* BackColor; // 0x250
	UTextBlock* T_Num; // 0x258
	FMulticastInlineDelegate OnMarkerClicked; // 0x260
};

struct UEnvQueryTest_Trace : UEnvQueryTest {
	FEnvTraceData TraceData; // 0x1f8
	FAIDataProviderBoolValue TraceFromContext; // 0x228
	FAIDataProviderFloatValue ItemHeightOffset; // 0x260
	FAIDataProviderFloatValue ContextHeightOffset; // 0x298
	UEnvQueryContext* Context; // 0x2d0
};

struct UInterpTrackInstDirector : UInterpTrackInst {
	AActor* OldViewTarget; // 0x28
};

struct UAudioWidget_C : UBravoHotelSettingSubWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	USlotItemWidget_C* Effect; // 0x2a0
	USlotItemWidget_C* Master; // 0x2a8
	USlotItemWidget_C* MasterOnOff; // 0x2b0
	USlotItemWidget_C* Music; // 0x2b8
	UScrollBox* ScrollBox_55; // 0x2c0
	USlotItemWidget_C* UI; // 0x2c8
	USlotItemWidget_C* VoiceChanel; // 0x2d0
	USlotItemWidget_C* VoiceInput; // 0x2d8
	USlotItemWidget_C* VoiceInputMode; // 0x2e0
	USlotItemWidget_C* VoiceOutput; // 0x2e8
	USubTitleSlotWidget_C* r; // 0x2f0
	USubTitleSlotWidget_C* Z; // 0x2f8
	FTimerHandle ScrollBarTimer; // 0x300
};

struct UParticleModuleVelocityBase : UParticleModule {
	char bInWorldSpace : 1; // 0x30
	char bApplyOwnerScale : 1; // 0x30
};

struct UPlatformGameInstance : UGameInstance {
	FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0x218
	FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0x228
	FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0x238
	FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0x248
	FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0x258
	FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x268
	FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x278
	FMulticastInlineDelegate ApplicationRegisteredForRemoteNotificationsDelegate; // 0x288
	FMulticastInlineDelegate ApplicationRegisteredForUserNotificationsDelegate; // 0x298
	FMulticastInlineDelegate ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x2a8
	FMulticastInlineDelegate ApplicationReceivedRemoteNotificationDelegate; // 0x2b8
	FMulticastInlineDelegate ApplicationReceivedLocalNotificationDelegate; // 0x2c8
	FMulticastInlineDelegate ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x2d8
};

struct UStreamMediaSource : UBaseMediaSource {
	FString StreamUrl; // 0x88
};

struct UAnimComposite : UAnimCompositeBase {
	FAnimTrack AnimationTrack; // 0xb0
};

struct UBravoHotelPlayerIconWidget : UUserWidget {
	UCanvasPanel* Canvas_Main; // 0x248
	UCanvasPanel* RotationGroup; // 0x250
	UCanvasPanel* Canvas_Replay; // 0x258
	UWidgetSwitcher* IconSwitcher; // 0x260
	UTextBlock* Text_PlayerNum; // 0x268
	UTextBlock* Text_PlayerName; // 0x270
	UImage* Img_Disconnect; // 0x278
	UImage* Img_KnockDown; // 0x280
	UImage* Img_Alive; // 0x288
	UImage* Img_Death; // 0x290
	UImage* Img_Vehicle; // 0x298
	UImage* Img_Parachute; // 0x2a0
	UImage* Img_Critical; // 0x2a8
	UImage* Img_Sight; // 0x2b0
	UImage* Img_Arrow; // 0x2b8
	UImage* Img_BackRound; // 0x2c0
	UImage* Img_TargetCam; // 0x2c8
	UImage* Img_TargetCamDummy; // 0x2d0
	USizeBox* SizeBox_RequestResuscitation; // 0x2d8
	UButton* BT_UserName; // 0x2e0
	UWidgetAnimation* Anim_Bouncing; // 0x2e8
	ABravoHotelPlayerState* PlayerStateRef; // 0x2f0
	UDataTable* TeamColorTableRef; // 0x2f8
	bool bIsFreeCam; // 0x300
	bool bIsReplaying; // 0x301
	bool bIsKillCam; // 0x302
	bool bIsInNetCullDistance; // 0x303
	bool bIsRequestResuscitation; // 0x304
};

struct UUW-ReplayEventMarker_Kill_C : UUW-ReplayEventMarkerBasic_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a0
	UBorder* VisualBorder; // 0x2a8
};

struct UBravoHotelCompassUnitWidget : UUserWidget {
	float Angle; // 0x248
};

struct UNiagaraDataInterfaceVectorCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x58
	FRichCurve YCurve; // 0xd8
	FRichCurve ZCurve; // 0x158
};

struct USoundfieldEndpointSubmix : USoundSubmixBase {
	FName SoundfieldEndpointType; // 0x38
	UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40
	USoundfieldEndpointSettingsBase* EndpointSettings; // 0x48
	USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x50
	USoundfieldEncodingSettingsBase* EncodingSettings; // 0x58
	TArray<USoundfieldEffectBase*> SoundfieldEffectChain; // 0x60
};

struct UCrossHairDetailInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* 1-1; // 0x250
	UTextBlock* CurDesc; // 0x258
};

struct UInputActionDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputActionDelegateBinding> InputActionDelegateBindings; // 0x28
};

struct UMaterialExpressionSkyAtmosphereAerialPerspective : UMaterialExpression {
	FExpressionInput WorldPosition; // 0x40
};

struct UAnimBoneCompressionSettings : UObject {
	TArray<UAnimBoneCompressionCodec*> Codecs; // 0x28
};

struct ABravoHotelLobbyPlayerController : APlayerController {
	int32_t CurrentLobbyPawnIndex; // 0x718
	ABravoHotelOutGameParachuteActor* ParachuteActor; // 0x720
};

struct UBravoHotelTestWidget : UUserWidget {
	TArray<FString> SpawnResultInfo; // 0x248
	TArray<FSpawnItems_DEBUG> SpawnResultData; // 0x258
	TArray<FString> SpawnActorInfos; // 0x268
	TMap<FString, FSpawnActors_DEBUG> SpawnActors; // 0x278
	TArray<FSpawnActors_DEBUG> SpawnActorList; // 0x2c8
	TArray<FString> SpawnBuildingList; // 0x2d8
	TArray<FBuildingItemSpawnLog> SpawnBuildingList2; // 0x2e8
	int32_t TotalLogCnt; // 0x2f8
	float CurPercent; // 0x2fc
	float CurCount; // 0x300
};

struct USoundSubmixBase : UObject {
	TArray<USoundSubmixBase*> ChildSubmixes; // 0x28
};

struct UBravoHotelQuestManager : UObject {
	TMap<FString, FMulticastInlineDelegate> AddQuestEventDelegates; // 0xa8
};

struct UInterpTrackInstFloatAnimBPParam : UInterpTrackInst {
	UAnimInstance* AnimScriptInstance; // 0x28
	float ResetFloat; // 0x30
};

struct UUW-Lobby_Craft_Recipe_Item_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UHorizontalBox* HorizontalBox_Rarity; // 0x250
	UHorizontalBox* HorizontalBox_Rarity_NotOwn; // 0x258
	UImage* Img_BG; // 0x260
	UImage* Img_Icon; // 0x268
	URetainerBox* RetainerBox_2; // 0x270
	UTextBlock* T_CurrentCount; // 0x278
	UTextBlock* T_MaxCount; // 0x280
	UTextBlock* T_RecipeNum; // 0x288
	UWidgetSwitcher* WidgetSwitcher_Rarity; // 0x290
	FItemMaterialData MaterialInfo; // 0x298
	int32_t ItemId; // 0x368
	int32_t MaxCount; // 0x36c
	int32_t CurrentCount; // 0x370
};

struct UNetDormantComponent : UActorComponent {
	float DelayTimeToSleep; // 0xb0
};

struct UNavCollisionBase : UObject {
	char bIsDynamicObstacle : 1; // 0x28
};

struct UBTTask_FSM_AddState : UBTTask_BlackboardBase {
	UStateMachineComponent* FSM; // 0x98
	FName TargetFSM; // 0xa0
	FName NewStateName; // 0xa8
	bool Debug; // 0xb0
	bool ForceSuccess; // 0xb1
};

struct UDeviceProfileManager : UObject {
	TArray<UObject*> Profiles; // 0x28
};

struct ADDGIVolume : AActor {
	UDDGIVolumeComponent* DDGIVolumeComponent; // 0x328
};

struct UMonoWaveTableSynthPreset : UObject {
	FString PresetName; // 0x28
	char bLockKeyframesToGridBool : 1; // 0x38
	int32_t LockKeyframesToGrid; // 0x3c
	int32_t WaveTableResolution; // 0x40
	TArray<FRuntimeFloatCurve> WaveTable; // 0x48
	char bNormalizeWaveTables : 1; // 0x58
};

struct ABattleRoyaleGameMode_Login : ABravoHotelGameModeBase {
	float MatchingTimeout; // 0x410
	TArray<FPlayerPawnList> PlayerPawnList; // 0x418
	ACharacter* CustomizeCharacter; // 0x428
	ACharacter* RankingCharacter; // 0x430
	USkeletalMeshComponent* AppearingMotionCharacter; // 0x438
	FTimerHandle Loading_TimerHandle; // 0x550
	FTimerHandle PartyInfo_TimerHandle; // 0x558
	FTimerHandle Ping_TimerHandle; // 0x560
	FTimerHandle GeeGeeLoginToken_TimerHandle; // 0x568
	FTimerHandle SteamLoginToken_TimerHandle; // 0x570
	FTimerHandle AveragePingRequest_TimerHandle; // 0x578
	FTimerHandle DuplicatedReconnectTimeout_TimerHandle; // 0x580
	FMulticastInlineDelegate OnLoginSucceeded; // 0x590
	FMulticastInlineDelegate OnLoginNotify; // 0x5a0
	FMulticastInlineDelegate OnLoginFailed; // 0x5b0
	FMulticastInlineDelegate OnMatchingPending; // 0x5c0
	FMulticastInlineDelegate OnMatchingStarted; // 0x5d0
	FMulticastInlineDelegate OnMatchingSucceeded; // 0x5e0
	FMulticastInlineDelegate OnMatchingFailed; // 0x5f0
	FMulticastInlineDelegate OnPartyInvited; // 0x600
	FMulticastInlineDelegate OnPartyInfoChanged; // 0x610
	FMulticastInlineDelegate OnPartyMemberInfoChanged; // 0x620
	FMulticastInlineDelegate OnMatchingSettingsChanged; // 0x630
	FMulticastInlineDelegate OnCreateCharacter; // 0x640
	FMulticastInlineDelegate OnTrainingModeOffDelegate; // 0x650
};

struct UPropertyBinding : UObject {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UUniformScalar : UFieldNodeFloat {
	float Magnitude; // 0xb0
};

struct UInterpTrackInstBoolProp : UInterpTrackInstProperty {
	bool ResetBool; // 0x60
};

struct UParticleModuleColor : UParticleModuleColorBase {
	FRawDistributionVector StartColor; // 0x30
	FRawDistributionFloat StartAlpha; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct ASkeletalMeshActor : AActor {
	char bShouldDoAnimNotifies : 1; // 0x330
	char bWakeOnLevelStart : 1; // 0x330
	USkeletalMeshComponent* SkeletalMeshComponent; // 0x338
	USkeletalMesh* ReplicatedMesh; // 0x340
	UPhysicsAsset* ReplicatedPhysAsset; // 0x348
	UMaterialInterface* ReplicatedMaterial0; // 0x350
	UMaterialInterface* ReplicatedMaterial1; // 0x358
};

struct UWBP_SPS_Icon_C : UBravoHotelSmartPingIconWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x440
	UIconImage_C* BgIcon; // 0x448
	UImage* Icon; // 0x450
	UImage* Image_175; // 0x458
	UImage* Indicator; // 0x460
	UOverlay* Overlay_1; // 0x468
	UTextBlock* TeamIndex; // 0x470
	UTextBlock* TextBlock; // 0x478
	UTextBlock* TextBlock_2; // 0x480
	UTextBlock* TextBlock_3; // 0x488
	UTextBlock* TextBlock_4; // 0x490
	UTextBlock* TextBlock_5; // 0x498
	UTextBlock* TextBlock_6; // 0x4a0
	UTextBlock* TextBlock_7; // 0x4a8
	UTextBlock* TextBlock_8; // 0x4b0
	UTextBlock* TextBlock_9; // 0x4b8
	UTextBlock* TextBlock_10; // 0x4c0
	UTextBlock* TextBlock_12; // 0x4c8
	UVerticalBox* VerticalBox_301; // 0x4d0
	APlayerCameraManager* PlayerCamera; // 0x4d8
	USmartPingSystem_C* ParentComponent; // 0x4e0
	UCanvasPanelSlot* CanvasSlot; // 0x4e8
	FMaterialItemPingInfo MaterialPingInfo; // 0x4f0
};

struct UGeometryCache : UObject {
	TArray<UMaterialInterface*> Materials; // 0x30
	TArray<UGeometryCacheTrack*> Tracks; // 0x40
	int32_t StartFrame; // 0x60
	int32_t EndFrame; // 0x64
};

struct UBravoHotelMiniMapWidget : UUserWidget {
	UTextBlock* RemaingTimeToActivate; // 0x250
};

struct USourceEffectMidSideSpreaderPreset : USoundEffectSourcePreset {
	FSourceEffectMidSideSpreaderSettings Settings; // 0x74
};

struct UMaterialExpressionParameter : UMaterialExpression {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
};

struct UUW-BlackMarket_Slot_Custom_C : UUW-BlackMarket_Slot_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UButton* BTN-Menu02; // 0x3e0
	UCanvasPanel* CP-SlotInfo; // 0x3e8
	UImage* IMG-BG; // 0x3f0
	UImage* IMG-BG-Border; // 0x3f8
	UImage* IMG-Item; // 0x400
	UImage* IMG-Mask; // 0x408
	UImage* IMG-Over; // 0x410
	UImage* IMG-Over-Border; // 0x418
	UOverlay* Menu02; // 0x420
	UOverlay* Overlay_Mask; // 0x428
	UTextBlock* TXT-ItemName; // 0x430
	UTextBlock* TXT-Menu01; // 0x438
	UTextBlock* TXT-Menu02; // 0x440
};

struct UPlayerInput : UObject {
	TArray<FKeyBind> DebugExecBindings; // 0x120
	TArray<FName> InvertedAxis; // 0x160
};

struct UMaterialExpressionTransformPosition : UMaterialExpression {
	FExpressionInput Input; // 0x40
	EMaterialPositionTransformSource TransformSourceType; // 0x54
	EMaterialPositionTransformSource TransformType; // 0x55
};

struct AAmbientSoundVolume : AVolume {
	FString Ambience; // 0x360
	int32_t Priority; // 0x370
};

struct UBHBDoorBreaching : UBravoHotelBuffBase {
	FTimerHandle TimerHandle_EndBuff; // 0x2b8
};

struct UBlackboardKeyType_String : UBlackboardKeyType {
	FString StringValue; // 0x30
};

struct UAkAndroidInitializationSettings : UObject {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkAndroidAdvancedInitializationSettings AdvancedSettings; // 0xb8
};

struct UInterpTrackAkAudioRTPC : UInterpTrackFloatBase {
	FString Param; // 0x90
	char bPlayOnReverse : 1; // 0xa0
	char bContinueRTPCOnMatineeEnd : 1; // 0xa0
};

struct UWB_ClassicSettingsText_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UTextBlock* TextField; // 0x250
	FText Text; // 0x258
};

struct URichTextBlockImageDecorator : URichTextBlockDecorator {
	UDataTable* ImageSet; // 0x28
};

struct UEnvQueryGenerator_SimpleGrid : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue GridSize; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb8
	UEnvQueryContext* GenerateAround; // 0xf0
};

struct ABravoHotelRangedWeapon : ABravoHotelWeaponBase {
	float CollideAlpha; // 0x1bec
	FVector JointTargetLocationR; // 0x1bf0
	int32_t FiringCountToLoop; // 0x1c54
	FVector FPSK_DeltaSocketLocation; // 0x1c58
	bool bIsColliding; // 0x1c74
	TArray<int32_t> DefaultZeroingDistance; // 0x1c78
	TArray<UBravoHotelShellCasingArrowComponent*> ShellCasingArrows; // 0x1c88
	FAnimSlot BoltActionProneWeaponAnim; // 0x1c98
	TMap<FName, UParticleSystem*> OverrideMuzzleFlashList; // 0x1ca8
	bool bCanSkipSpawnProjectile; // 0x1cf8
	FVector CollideTraceStartDelta; // 0x1d50
	UBravoHotelMuzzleEffectComponent* MuzzleEffectComponent; // 0x1d60
	bool bIsADSColliding; // 0x1d6c
	FRangedWeaponFireSound FireSounds3P; // 0x1d70
	bool bAttachToCamera; // 0x1d90
	bool bIsHeatScanActive; // 0x1da1
	int32_t CurrentZeroPointIndex; // 0x1dc8
	UConditionedAbilityGetter* AccuracyGetter; // 0x1dd0
	FAudioPlayingHandle WarmupPlayingHandle; // 0x1ddc
	char bWantsToFire : 1; // 0x1de1
	bool bIsAimingDownside; // 0x1de2
	FVector CrouchCollideTraceStartDelta; // 0x1e3c
	FMulticastInlineDelegate OnEndSimulateFire; // 0x1e48
	bool bIsADS; // 0x1e58
	FMulticastInlineDelegate OnFinishSimulateBoltAction; // 0x1e60
	float AutoReloadTimeStamp; // 0x1e70
	UParticleSystem* CurrentOverrideMuzzleFlash_NoAttach; // 0x1e78
	TMap<FName, UParticleSystem*> OverrideMuzzleSmokeList; // 0x1e88
	bool bIsEquippingVerticalgrip; // 0x1ed8
	TArray<ABravoHotelProjectileMolotovFireCell*> SpawnedFireCells; // 0x1ee0
	EWeaponFireMode FireMode; // 0x1ef0
	FMulticastInlineDelegate OnFinishSimulateReload; // 0x1ef8
	UBravoHotelShellCasingArrowComponent* BulletParticleSpawnArrow; // 0x1f08
	TMap<EWeaponFireMode, FAnimSlot> FireModeWeaponAnim; // 0x1f18
	char bPendingBoltAction : 1; // 0x1f68
	float BoltActionDelayTime; // 0x1f6c
	FIncendiaryInfo IncendiaryInfo; // 0x1f70
	FAnimSlot BoltActionPlayerAnim; // 0x1f88
	bool bSpawnBulletParticleOnFire; // 0x1fb1
	int32_t ProjectileRandomSeed; // 0x1fb4
	FRotator FPSK_DeltaSocketRotation; // 0x1fc8
	UConditionedAbilityGetter* VerticalRecoilGetter; // 0x1fd8
	bool bUseOverrideReloadMessage; // 0x1fe0
	char bIsNeedBoltAction : 1; // 0x1fe1
	UBravoHotelMainWidget* MainWidgetRef; // 0x1fe8
	UParticleSystem* CurrentOverrideMuzzleSmoke_NoAttach; // 0x1ff0
	TArray<FZeroPoint> ZeroPointAngles; // 0x2000
	bool bServerShot; // 0x2010
	FExplosionInfo ExplosionInfo; // 0x2014
	EWeaponState CurrentState; // 0x2024
	bool bSpawnAutoAimTrailEffect; // 0x202c
	bool bReady; // 0x20e1
	FMulticastInlineDelegate OnReloadDelegate; // 0x2138
	bool bDrawCollideTraceSphereForDebug; // 0x2148
	FMulticastInlineDelegate OnStartSimulateFire; // 0x2160
	char bLoopedFireAnim : 1; // 0x2174
	FMulticastInlineDelegate OnAmmoReloadedDelegate; // 0x2178
	bool bIsKeepingADS_WhileBoltAction; // 0x218c
	FAnimSlot BoltActionPronePlayerAnim; // 0x2190
	FAnimSlot FireWeaponAnim; // 0x21a0
	FString TrailEffectName; // 0x21b0
	int32_t OverrideReloadSuccessMessageTableIndex; // 0x21c0
	bool bIsGatlingWeapon; // 0x21c4
	float CollideTraceLength; // 0x21c8
	FVector JointTargetLocationL; // 0x21d0
	float DeltaCollideHandIKDistance; // 0x21dc
	char bIsFiring : 1; // 0x21e0
	FVector ProneCollideTraceStartDelta; // 0x21e4
	UCurveVector* RecoilCurve; // 0x2200
	ABravoHotelProjectileBase* ProjectileClass; // 0x2208
	int32_t OverrideReloadFailMessageTableIndex; // 0x2214
	char bPendingBurstFire : 1; // 0x2218
	UConditionedAbilityGetter* HorizontalRecoilGetter; // 0x2228
	FAnimSlot FireAnim; // 0x2230
	bool bSkipCalculateShootInfo; // 0x2240
	UAkAudioEvent* NoAmmoEvent; // 0x2248
	char bPendingReload : 1; // 0x2254
	FAudioPlayingHandle FireLoopSoundHandle; // 0x2258
	TArray<float> SpreadScaleFactorsOnDefault; // 0x2260
	TMap<EWeaponFireMode, FAnimSlot> FireModePlayerAnim; // 0x2270
	bool bAutoAim; // 0x22c0
	TArray<float> SpreadScaleFactorsOnFiring; // 0x22c8
	FName FireSocketName; // 0x22d8
	bool bSpawnTrailEffect; // 0x22e0
	UWeaponAttachmentComponent* AttachmentComponent; // 0x22e8
	FRangedWeaponFireSound FireSounds1P; // 0x22f0
	float WarmupTime; // 0x2310
	bool bIsOneByOneReloading; // 0x2314
	UBravoHotelRecoilComponent* RecoilComponent; // 0x2318
	UCurveFloat* DamageDistanceCurve; // 0x2320
	UCurveFloat* DamgeCorrectCurveByVelocity; // 0x2328
	FVector EffectorLocationR; // 0x2330
	UConditionedAbilityGetter* SwayGetter; // 0x2340
	bool bWarmingUp; // 0x2348
	FAnimSlot BoltActionWeaponAnim; // 0x2350
	EWeaponRecoilType WeaponRecoilType; // 0x2360
};

struct UExponentialHeightFogComponent : USceneComponent {
	float FogDensity; // 0x230
	float FogHeightFalloff; // 0x234
	FExponentialHeightFogData SecondFogData; // 0x238
	FLinearColor FogInscatteringColor; // 0x244
	UTextureCube* InscatteringColorCubemap; // 0x258
	float InscatteringColorCubemapAngle; // 0x260
	FLinearColor InscatteringTextureTint; // 0x264
	float FullyDirectionalInscatteringColorDistance; // 0x274
	float NonDirectionalInscatteringColorDistance; // 0x278
	float DirectionalInscatteringExponent; // 0x27c
	float DirectionalInscatteringStartDistance; // 0x280
	FLinearColor DirectionalInscatteringColor; // 0x284
	float FogMaxOpacity; // 0x294
	float StartDistance; // 0x298
	float FogCutoffDistance; // 0x29c
	bool bEnableVolumetricFog; // 0x2a0
	float VolumetricFogScatteringDistribution; // 0x2a4
	FColor VolumetricFogAlbedo; // 0x2a8
	FLinearColor VolumetricFogEmissive; // 0x2ac
	float VolumetricFogExtinctionScale; // 0x2bc
	float VolumetricFogDistance; // 0x2c0
	float VolumetricFogStaticLightingScatteringIntensity; // 0x2c4
	bool bOverrideLightColorsWithFogInscatteringColors; // 0x2c8
};

struct UMKDemoNetConnectionEx : UNetConnection {
	UDemoNetConnection* SelfDemoNetConnection; // 0x1be8
};

struct UReplaySampleBase : UObject {
	char DataVersion; // 0x30
	float Time; // 0x34
};

struct ULiveLinkSubjectSettings : UObject {
	TArray<ULiveLinkFramePreProcessor*> PreProcessors; // 0x28
	ULiveLinkFrameInterpolationProcessor* InterpolationProcessor; // 0x38
	TArray<ULiveLinkFrameTranslator*> Translators; // 0x40
	ULiveLinkRole* Role; // 0x50
};

struct UProceduralFoliageComponent : UActorComponent {
	UProceduralFoliageSpawner* FoliageSpawner; // 0xb0
	float TileOverlap; // 0xb8
	AVolume* SpawningVolume; // 0xc0
	FGuid ProceduralGuid; // 0xc8
};

struct UUW-ClassinfoitemWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_ClassIcon; // 0x250
	UTextBlock* TextBlock_ClassName; // 0x258
	UTextBlock* TextBlock_Count; // 0x260
};

struct ABP-TutorialEndCam_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	UCameraComponent* WorldViewCamera; // 0x330
	UCameraComponent* FarCamera; // 0x338
	UCameraComponent* NearCamera; // 0x340
	USceneComponent* DefaultSceneRoot; // 0x348
	ABravoHotelCharacter* CharacterRef; // 0x350
	FTransform TargetNearCameraTransform; // 0x360
	float DeltaTime; // 0x390
	FTransform TargetFarCameraTransform; // 0x3a0
	ABravoHotelPlayerController* PlayerControllerRef; // 0x3d0
	bool bIsBackgroundScene; // 0x3d8
	TArray<ABravoHotelCharacter*> WinTeamCharacters; // 0x3e0
	TArray<FVector> DuoLocation_Near; // 0x3f0
	FVector CharacterOriginLocation; // 0x400
	TArray<FRotator> DuoRotation_Near; // 0x410
	TArray<FVector> DuoLocation_Far; // 0x420
	TArray<FRotator> DuoRotation_Far; // 0x430
	TArray<FVector> TrioLocation_Near; // 0x440
	TArray<FRotator> TrioRotation_Near; // 0x450
	TArray<FVector> TrioLocation_Far; // 0x460
	TArray<FRotator> TrioRotation_Far; // 0x470
	TArray<FVector> SquadLocation_Near; // 0x480
	TArray<FRotator> SquadRotation_Near; // 0x490
	TArray<FVector> SquadLocation_Far; // 0x4a0
	TArray<FRotator> SquadRotation_Far; // 0x4b0
	FRotator CharacterOriginRotation; // 0x4c0
};

struct AArchVisCharacter : ACharacter {
	FString LookUpAxisName; // 0x5e8
	FString LookUpAtRateAxisName; // 0x5f8
	FString TurnAxisName; // 0x608
	FString TurnAtRateAxisName; // 0x618
	FString MoveForwardAxisName; // 0x628
	FString MoveRightAxisName; // 0x638
	float MouseSensitivityScale_Pitch; // 0x648
	float MouseSensitivityScale_Yaw; // 0x64c
};

struct ULowEntryParsedHashcash : UObject {
	bool Valid; // 0x28
	FString Resource; // 0x30
	FDateTime Date; // 0x40
	int32_t Bits; // 0x48
};

struct UPawnAction_Wait : UPawnAction {
	float TimeToWait; // 0x98
};

struct UParticleLODLevel : UObject {
	int32_t Level; // 0x28
	char bEnabled : 1; // 0x2c
	UParticleModuleRequired* RequiredModule; // 0x30
	TArray<UParticleModule*> Modules; // 0x38
	UParticleModuleTypeDataBase* TypeDataModule; // 0x48
	UParticleModuleSpawn* SpawnModule; // 0x50
	UParticleModuleEventGenerator* EventGenerator; // 0x58
	TArray<UParticleModuleSpawnBase*> SpawningModules; // 0x60
	TArray<UParticleModule*> SpawnModules; // 0x70
	TArray<UParticleModule*> UpdateModules; // 0x80
	TArray<UParticleModuleOrbit*> OrbitModules; // 0x90
	TArray<UParticleModuleEventReceiverBase*> EventReceiverModules; // 0xa0
	char ConvertedModules : 1; // 0xb0
	int32_t PeakActiveParticles; // 0xb4
};

struct UMovieSceneCameraAnimSection : UMovieSceneSection {
	FMovieSceneCameraAnimSectionData AnimData; // 0xe0
	UCameraAnim* CameraAnim; // 0x100
	float PlayRate; // 0x108
	float PlayScale; // 0x10c
	float BlendInTime; // 0x110
	float BlendOutTime; // 0x114
	bool bLooping; // 0x118
};

struct UMaterialExpressionAntialiasedTextureMask : UMaterialExpressionTextureSampleParameter2D {
	float threshold; // 0xf0
	ETextureColorChannel Channel; // 0xf4
};

struct UMagicLeapSettings : UObject {
	bool bEnableZI; // 0x28
	bool bUseVulkanForZI; // 0x29
	bool bUseMLAudioForZI; // 0x2a
};

struct UGizmoPlaneTranslationParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	FVector2D Parameter; // 0xb0
	FGizmoVec2ParameterChange LastChange; // 0xb8
	FVector CurTranslationOrigin; // 0xc8
	FVector CurTranslationNormal; // 0xd4
	FVector CurTranslationAxisX; // 0xe0
	FVector CurTranslationAxisY; // 0xec
	FTransform InitialTransform; // 0x100
};

struct UUW-CastingWidget_CancelText_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UTextBlock* TextBlock; // 0x250
	FText SetText; // 0x258
};

struct UUW-Lobby_Craft_Success_Perk_Close_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_96; // 0x250
	UImage* Image; // 0x258
	UImage* Image_193; // 0x260
	UImage* Image_395; // 0x268
	UImage* Image_Arrow_Guide; // 0x270
	UImage* Img_hover; // 0x278
	UImage* Img_Pressed; // 0x280
	UUW-Lobby_Craft_Success_Perk_Slot_C* UW-Lobby_Craft_Success_Perk_Slot; // 0x288
	UWidgetSwitcher* WidgetSwitcher_263; // 0x290
	FMulticastInlineDelegate EventDispatcher_EndOpen; // 0x298
	FItemOption ItemOption; // 0x2a8
	bool IsOpened; // 0x360
	float CurrentHoverOpacity; // 0x364
	UMaterialInstanceDynamic* PressedMaterialInstance; // 0x368
	float CurrentPressedAnim; // 0x370
	FMulticastInlineDelegate EventDispatcher_StartOpen; // 0x378
};

struct UTimeSynchronizableMediaSource : UBaseMediaSource {
	bool bUseTimeSynchronization; // 0x88
	int32_t FrameDelay; // 0x8c
	double TimeDelay; // 0x90
};

struct USourceEffectEnvelopeFollowerPreset : USoundEffectSourcePreset {
	FSourceEffectEnvelopeFollowerSettings Settings; // 0x74
};

struct UParticleModulePivotOffset : UParticleModuleLocationBase {
	FVector2D PivotOffset; // 0x30
};

struct UBP-LadderComponent_C : ULadderComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0x210
	bool NeedToChangeHand; // 0x218
	float CrntAxisValue; // 0x21c
	float GoalLocationZ; // 0x220
	bool NeedMoveOnLadder; // 0x224
	float MotionMinAlpha; // 0x228
	bool CanStopMotion; // 0x22c
	float DirectSnapLocZ; // 0x230
	float DeltaSecond; // 0x234
	float LastSecond; // 0x238
	int32_t AdditionalStepCount; // 0x23c
};

struct USCS_Node : UObject {
	UObject* ComponentClass; // 0x28
	UActorComponent* ComponentTemplate; // 0x30
	FBlueprintCookedComponentInstancingData CookedComponentInstancingData; // 0x38
	FName AttachToName; // 0x80
	FName ParentComponentOrVariableName; // 0x88
	FName ParentComponentOwnerClassName; // 0x90
	bool bIsParentComponentNative; // 0x98
	TArray<USCS_Node*> ChildNodes; // 0xa0
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0xb0
	FGuid VariableGuid; // 0xc0
	FName InternalVariableName; // 0xd0
};

struct UBravoHotelSmartPingIconWidget : UUserWidget {
	EWidgetSpace WidgetSpace; // 0x248
	UCurveFloat* SmartPingScaleWorld; // 0x250
	UCurveFloat* SmartPingScale; // 0x258
	UCurveFloat* Exit_Slide; // 0x260
	UCurveFloat* Exit_Bounce; // 0x268
	UCurveFloat* Exit_Scale; // 0x270
	UCurveFloat* Enter_Slide; // 0x278
	UCurveFloat* Enter_Bounce; // 0x280
	UCurveFloat* Enter_Scale; // 0x288
	UCurveFloat* SmartPingLineScale; // 0x290
	UImage* IconImage; // 0x298
	UUserWidget* IconBgImage; // 0x2a0
	UImage* IconIndicator; // 0x2a8
	ABravoHotelSmartPingActor* ParentPingActor; // 0x2b0
	float PingDistance; // 0x2b8
	FTimerHandle TimerHandle_Update; // 0x2c0
	FTimerHandle TimerHandle_OnActive; // 0x2c8
	FBravoHotelSmartPingIconSettings PingIconSettings; // 0x2d0
	FMaterialItemPingInfo MaterialItemPingInfo; // 0x388
	FExpertWeaponPingInfo ExpertWeaponItemPingInfo; // 0x3b8
	FBravoHotelLocalPingInfo LocalPingInfo; // 0x3e0
	EPingIconAnimationStateType AnimationType; // 0x410
	float StartTime; // 0x414
	float TimeSinceStart; // 0x418
	float TransitionState; // 0x41c
	float PingOpacity; // 0x420
	float DefaultScale; // 0x424
	float Seed; // 0x428
	float PreDistance; // 0x42c
	UTextBlock* DistanceText; // 0x430
	bool EnableAnimation; // 0x438
	bool IgnoreScale; // 0x439
	bool bEnableShowDebugLightPole; // 0x43a
};

struct UBravoHotelItemSpawnRateWidget : UUserWidget {
	FName SelectAreaKey; // 0x248
	bool IsBlueZoneSpawnRate; // 0x250
	TMap<FName, FLocalSpawnRate> AreaSpawnRateList; // 0x258
	FLocalSpawnRate BlueZoneSpawnRate; // 0x2a8
};

struct UNamedInterfaces : UObject {
	TArray<FNamedInterface> NamedInterfaces; // 0x28
	TArray<FNamedInterfaceDef> NamedInterfaceDefs; // 0x38
};

struct USoundConcurrency : UObject {
	FSoundConcurrencySettings Concurrency; // 0x28
};

struct AControlPointMeshActor : AActor {
	UControlPointMeshComponent* ControlPointMeshComponent; // 0x328
};

struct UAnimBlueprint : UBlueprint {
	bool bUseMultiThreadedAnimationUpdate; // 0xa8
	TArray<FAnimGroupInfo> Groups; // 0xb0
	USkeleton* TargetSkeleton; // 0xc0
	bool bWarnAboutBlueprintUsage; // 0xc8
};

struct USubstanceInstanceFactory : UObject {
	TArray<USubstanceGraphInstance*> mGraphInstances; // 0x28
	FString RelativeSourceFilePath; // 0x50
	FString AbsoluteSourceFilePath; // 0x60
	FString SourceFileTimestamp; // 0x70
	ESubstanceGenerationMode GenerationMode; // 0x80
};

struct UModelComponent : UPrimitiveComponent {
	UBodySetup* ModelBodySetup; // 0x4c8
};

struct UBP-HUDInteractionComponent_C : UBP-HUDInteractionComponentBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x140
	bool bHasJustClosed_1; // 0x148
	float defaultContrast_1; // 0x14c
	float defaultMaxBrightness_1; // 0x150
	float defaultMinBrightness_1; // 0x154
	float MinBrightness_1; // 0x158
	float MaxBrightness_1; // 0x15c
	float Contrast_1; // 0x160
	bool bUsePostProcessVolumeOption_1; // 0x164
	float ColorGradingGlobalGamma_1; // 0x168
	float FilmToeIntensity_1; // 0x16c
	bool IsInWidget_1; // 0x170
	bool bInputModeUI_1; // 0x171
	TArray<FName> InputActionsToBlock_1; // 0x178
};

struct UGizmoArrowComponent : UGizmoBaseComponent {
	FVector Direction; // 0x4d0
	float Gap; // 0x4dc
	float Length; // 0x4e0
	float Thickness; // 0x4e4
};

struct UBravoHotelUserSettings : UGameUserSettings {
	int32_t TotalGraphicQuality; // 0x154
	bool MasterVolumeOnOff; // 0x158
	int32_t PreMasterVolume; // 0x15c
	int32_t MasterVolume; // 0x160
	int32_t EffectVolume; // 0x164
	int32_t UIVolume; // 0x168
	int32_t MusicVolume; // 0x16c
	int32_t VoiceInputVolume; // 0x170
	int32_t VoiceOutputVolume; // 0x174
	int32_t VoiceInputMode; // 0x178
	int32_t VoiceChanel; // 0x17c
	int32_t VerticalSensitivity; // 0x180
	int32_t GeneralSensitivity; // 0x184
	int32_t VehicleDriverSensitivity; // 0x188
	int32_t AOSSensitivity; // 0x18c
	int32_t TotalSensitivity; // 0x190
	bool bUsingDetailSensitivity; // 0x194
	int32_t ADSSensitivity; // 0x198
	int32_t ADS2xSensitivity; // 0x19c
	int32_t ADS4xSensitivity; // 0x1a0
	int32_t ADS6xSensitivity; // 0x1a4
	int32_t ADS8xSensitivity; // 0x1a8
	int32_t ADS15xSensitivity; // 0x1ac
	bool bReverseLeftAndRight; // 0x1b0
	bool bReverseUpAndDown; // 0x1b1
	int32_t CrossHairIndex; // 0x1b4
	TMap<EWeaponType, EWeaponFireMode> FireModeSettings; // 0x1b8
	bool autoReload; // 0x208
	bool ImmediateAttachment; // 0x209
	bool InheritAttachment; // 0x20a
	bool ShowPerkSlot; // 0x20b
	bool ShowSmartPing; // 0x20c
	bool ShowSmartPingSupplyBox; // 0x20d
	int32_t ShowSmartPingLightPole; // 0x210
	bool NetworkDebugStatistics; // 0x214
	bool EnableShowClassUI; // 0x215
	bool bShowUseaableItemEffect; // 0x216
	int32_t AmmoEffect; // 0x218
	int32_t MedicalLv3Effect; // 0x21c
	int32_t MedicalLv2Effect; // 0x220
	int32_t MedicalLv1Effect; // 0x224
	int32_t RedBoostEffect; // 0x228
	int32_t GreenBoostEffect; // 0x22c
	int32_t BlueBoostEffect; // 0x230
	bool AutoUseItem_MedicalLv1; // 0x234
	bool AutoUseItem_MedicalLv2; // 0x235
	bool AutoUseItem_MedicalLv3; // 0x236
	bool AutoLadder; // 0x237
	bool ShowGuideWidget; // 0x238
	bool SearchMaterialItem; // 0x239
	bool SearchExpertWeaponItem; // 0x23a
	bool ShowDamageLog; // 0x23b
	int32_t InventoryOrder; // 0x23c
	float InventoryScrollSpeed; // 0x240
	int32_t CustomUseItem1; // 0x244
	int32_t CustomUseItem2; // 0x248
	int32_t CustomUseItem3; // 0x24c
	int32_t CustomUseItem4; // 0x250
	int32_t CustomUseItem5; // 0x254
	int32_t CustomUseItem6; // 0x258
	int32_t CustomUseItem7; // 0x25c
	int32_t CustomUseItem8; // 0x260
	bool ToggleCrouch; // 0x264
	bool ToggleWalk; // 0x265
	bool ToggleSprint; // 0x266
	bool ToggleFreeLook; // 0x267
	bool ToggleSteadyAim; // 0x268
	int32_t ToggleExLean; // 0x26c
	bool ToggleAOS; // 0x270
	bool ToggleADS; // 0x271
	uint32_t GraphicsVersion; // 0x274
	float DefaultLanguageType; // 0x27c
	float LanguageType; // 0x280
	float Gamma; // 0x284
	float Sharpen; // 0x288
	bool ShowInventoryCharacter; // 0x28c
	int32_t FieldOfView; // 0x298
	int32_t ReflexQuality; // 0x29c
	int32_t DLSSQuality; // 0x2a0
	bool bUseDepthOfField; // 0x2a4
	int32_t FSRQuality; // 0x2a8
	TMap<EKeySettingType, FInputActionKeyMapping> KeySettings; // 0x2b0
	TMap<EKeySettingType, FInputActionKeyMapping> SubKeySettings; // 0x300
	TMap<EKeySettingType, FInputAxisKeyMapping> AxisKeySettings; // 0x350
	TMap<EKeySettingType, FInputAxisKeyMapping> AxisSubKeySettings; // 0x3a0
	TMap<ESettingType, FSettingInfo> SettingDataFromTable; // 0x3f0
	FMulticastInlineDelegate OnGameUserSettingsApply_Audio; // 0x440
	FMulticastInlineDelegate OnGameUserSettingsApply_Controll; // 0x450
	FMulticastInlineDelegate OnGameUserSettingsApply_Graphic; // 0x460
	FMulticastInlineDelegate OnGameUserSettingsApply_GamePlay; // 0x470
	FMulticastInlineDelegate OnGameUserSettingsApply_Key; // 0x480
	FMulticastInlineDelegate OnChangedDediSettings; // 0x490
	FMulticastInlineDelegate OnChangeVolumeState; // 0x500
	bool bCheckValidSettingDataFromTable; // 0x510
	bool bNeedDefaultSettingWithTabelData; // 0x511
	bool bCheckLoadComplete; // 0x512
};

struct ACoherentUIGTGameHUD : AHUD {
	UCoherentUIGTHUD* CoherentUIGTHUD; // 0x418
};

struct UAkSurfaceReflectorSetComponent : USceneComponent {
	char bEnableSurfaceReflectors : 1; // 0x230
	TArray<FAkPoly> AcousticPolys; // 0x238
	char bEnableDiffraction : 1; // 0x248
	char bEnableDiffractionOnBoundaryEdges : 1; // 0x248
	AActor* AssociatedRoom; // 0x250
};

struct UAkXboxOneInitializationSettings : UObject {
	FAkCommonInitializationSettings CommonSettings; // 0x28
	FAkXboxOneApuHeapInitializationSettings ApuHeapSettings; // 0x88
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkXboxOneAdvancedInitializationSettings AdvancedSettings; // 0xb8
};

struct USourceEffectDynamicsProcessorPreset : USoundEffectSourcePreset {
	FSourceEffectDynamicsProcessorSettings Settings; // 0x90
};

struct ABP-CharacterRecording_C : ABravoHotel3DViewActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	UPointLightComponent* PointLight3; // 0x330
	UPointLightComponent* PointLight2; // 0x338
	USpotLightComponent* SpotLight; // 0x340
	UPointLightComponent* PointLight1; // 0x348
	UBravoHotelSceneCaptureComponent2D* BravoHotelSceneCaptureComponent2D; // 0x350
	UPointLightComponent* PointLight; // 0x358
	USpotLightComponent* SpotLight2; // 0x360
	UStaticMeshComponent* Cube; // 0x368
	UCustomizableSkeletalComponent* CustomizableSkeletal; // 0x370
	USkeletalMeshComponent* SkeletalMesh; // 0x378
	UCameraComponent* Camera; // 0x380
	USceneComponent* Scene; // 0x388
	ABravoHotelCharacter* CharacterRef; // 0x390
	TArray<ABravoHotelWeaponBase*> PreviewWeapons; // 0x398
	bool EnableTick; // 0x3a8
	FRotator TargetAccel; // 0x3ac
	FRotator CurrentAccel; // 0x3b8
};

struct APlayerCameraManager : AActor {
	APlayerController* PCOwner; // 0x328
	USceneComponent* TransformComponent; // 0x330
	float DefaultFOV; // 0x340
	float DefaultOrthoWidth; // 0x348
	float DefaultAspectRatio; // 0x350
	FCameraCacheEntry CameraCache; // 0x3a0
	FCameraCacheEntry LastFrameCameraCache; // 0xa00
	FTViewTarget ViewTarget; // 0x1060
	FTViewTarget PendingViewTarget; // 0x16d0
	FCameraCacheEntry CameraCachePrivate; // 0x1d70
	FCameraCacheEntry LastFrameCameraCachePrivate; // 0x23d0
	TArray<UCameraModifier*> ModifierList; // 0x2a30
	TArray<UCameraModifier*> DefaultModifiers; // 0x2a40
	float FreeCamDistance; // 0x2a50
	FVector FreeCamOffset; // 0x2a54
	FVector ViewTargetOffset; // 0x2a60
	TArray<AEmitterCameraLensEffectBase*> CameraLensEffects; // 0x2a80
	UCameraModifier_CameraShake* CachedCameraShakeMod; // 0x2a90
	UCameraAnimInst* AnimInstPool[0x8]; // 0x2a98
	TArray<FPostProcessSettings> PostProcessBlendCache; // 0x2ad8
	TArray<UCameraAnimInst*> ActiveAnims; // 0x2af8
	TArray<UCameraAnimInst*> FreeAnims; // 0x2b08
	ACameraActor* AnimCameraActor; // 0x2b18
	char bIsOrthographic : 1; // 0x2b20
	char bDefaultConstrainAspectRatio : 1; // 0x2b20
	char bClientSimulatingViewTarget : 1; // 0x2b20
	char bUseClientSideCameraUpdates : 1; // 0x2b20
	char bGameCameraCutThisFrame : 1; // 0x2b21
	float ViewPitchMin; // 0x2b24
	float ViewPitchMax; // 0x2b28
	float ViewYawMin; // 0x2b2c
	float ViewYawMax; // 0x2b30
	float ViewRollMin; // 0x2b34
	float ViewRollMax; // 0x2b38
	float ServerUpdateCameraTimeout; // 0x2b40
};

struct USmartPingSystem_C : UBravoHotelSmartPingSystem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x128
	FMulticastInlineDelegate RequestOnServer; // 0x130
	E_SPS_MenuSelectionType SelectionMode; // 0x140
	float TimeoutBetweenPings; // 0x144
	TArray<float> PingTimeouts; // 0x148
	TArray<FName> ExecutingMenuIconIDs; // 0x158
	TArray<FBravoHotelSmartPingIconSettings> ExecutingMenuIconSettings; // 0x168
	APawn* OwningPawn; // 0x178
	UWBP_SPS_SelectionMenu_C* SelectionMenu; // 0x180
	FMulticastInlineDelegate ExecuteOwningClient; // 0x188
	E_SPS_TraceMethod TraceMethod; // 0x198
	float TraceLength; // 0x19c
	float TraceRadius; // 0x1a0
	ETraceTypeQuery TraceChannel; // 0x1a4
	bool TraceComplex; // 0x1a5
	FMulticastInlineDelegate MenuActivated; // 0x1a8
	FMulticastInlineDelegate MenuDeactivated; // 0x1b8
	FMulticastInlineDelegate PingReceivedOnServer; // 0x1c8
	FBravoHotelPingInfo ExecutingPingInfo2; // 0x1d8
	bool NoneHitActor; // 0x210
	bool IgnorInput; // 0x211
	FName TempItemPingTableIndex; // 0x214
	bool Enable Show; // 0x21c
	FName NewVar_1; // 0x220
	UBravoHotelMainWidget* MainWidget; // 0x228
	EPingType EnableEndPingType; // 0x230
	bool IsSelectionMenuOnMap; // 0x231
	FVector TmpLocationByMap; // 0x234
	FVector2D TmpMousePosition; // 0x240
	bool IsVisibleSelectionMenu; // 0x248
	bool IsPressedCtrl; // 0x249
	bool FindPickUpItem; // 0x24a
};

struct ABP-PlayerHUD_C : ABravoHotelPlayerHUD {
	FPointerToUberGraphFrame UberGraphFrame; // 0x878
	USceneComponent* DefaultSceneRoot; // 0x880
	TMap<EHUDMessageTableType, UDataTable*> TableInfo; // 0x888
	TArray<UBravoHotelDamageType*> NewVar_1; // 0x8d8
	TArray<EGuideWidgetType> GuideWidgetStack; // 0x8e8
	EHUDMessageType NewVar_2; // 0x8f8
};

struct ABravoHotelAreaSkillZone : AActor {
	USphereComponent* SphereCollision; // 0x328
	UParticleSystemComponent* AreaParticle; // 0x330
	UParticleSystemComponent* AreaParticleOwner; // 0x338
	FAreaSkillInfo AreaSkillInfo; // 0x340
	TArray<ABravoHotelCharacter*> OverlappedCharacters; // 0x368
	FAreaSkillZoneInfo AreaSkillZoneInfo; // 0x378
};

struct UUserDefinedImageCaptureProtocol : UUserDefinedCaptureProtocol {
	EDesiredImageFormat Format; // 0xd8
	bool bEnableCompression; // 0xd9
	int32_t CompressionQuality; // 0xdc
};

struct UPhysicsConstraintTemplate : UObject {
	FConstraintInstance DefaultInstance; // 0x28
	TArray<FPhysicsConstraintProfileHandle> ProfileHandles; // 0x1e0
	FConstraintProfileProperties DefaultProfile; // 0x1f0
};

struct UPlatformInterfaceWebResponse : UObject {
	FString OriginalURL; // 0x28
	int32_t responsecode; // 0x38
	int32_t Tag; // 0x3c
	FString StringResponse; // 0x40
	TArray<char> BinaryResponse; // 0x50
};

struct UAnimSharingStateInstance : UAnimInstance {
	UAnimSequence* AnimationToPlay; // 0x268
	float PermutationTimeOffset; // 0x270
	float PlayRate; // 0x274
	bool bStateBool; // 0x278
	UAnimSharingInstance* Instance; // 0x280
};

struct UAnimSharingTransitionInstance : UAnimInstance {
	TWeakObjectPtr<USkeletalMeshComponent> FromComponent; // 0x268
	TWeakObjectPtr<USkeletalMeshComponent> ToComponent; // 0x270
	float BlendTime; // 0x278
	bool bBlendBool; // 0x27c
};

struct UInterpGroupInst : UObject {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct UNativeReplayListItem : UUserWidget {
	UButton* ReplayListItemBtn; // 0x248
	UTextBlock* TextName; // 0x250
	UTextBlock* TextLive; // 0x258
	UTextBlock* TextTime; // 0x260
	FMulticastInlineDelegate OnSelectedReplayListItemEvent; // 0x278
};

struct UInteractiveToolsContext : UObject {
	UInputRouter* InputRouter; // 0x58
	UInteractiveToolManager* ToolManager; // 0x60
	UInteractiveGizmoManager* GizmoManager; // 0x68
	TSoftClassPtr<UObject> ToolManagerClass; // 0x70
};

struct UCameraModifier_PostProcess : UCameraModifier {
	TArray<UCameraPostProcessPreset*> PresetInstances; // 0x48
};

struct UVideoCaptureProtocol : UFrameGrabberProtocol {
	bool bUseCompression; // 0x68
	float CompressionQuality; // 0x6c
};

struct UMaterialExpressionLogarithm2 : UMaterialExpression {
	FExpressionInput X; // 0x40
};

struct ABravoHotelWaterPhysicsVolume : APhysicsVolume {
	UParticleSystem* InWaterParticle; // 0x370
};

struct UUW-PersonalSupplyBoxSlotItemWidget_C : UBravoHotelPersonalSupplyBoxSlotItemWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3e8
	UWidgetAnimation* Over; // 0x3f0
	UImage* Bg; // 0x3f8
	UCanvasPanel* CanvasPanel_2; // 0x400
	UCanvasPanel* CanvasPanel_4; // 0x408
	UTextBlock* Cont; // 0x410
	UImage* DropHoverImage; // 0x418
	UImage* Image; // 0x420
	UImage* Image_86; // 0x428
	UImage* Image_187; // 0x430
	UImage* Image_675; // 0x438
	UImage* Image_874; // 0x440
	UImage* ItemImage; // 0x448
	UTextBlock* ItemName; // 0x450
	UImage* Lock; // 0x458
	UTextBlock* Price_Value; // 0x460
	UProgressBar* ProgressBar_65; // 0x468
	UImage* Repair; // 0x470
	UTextBlock* WeaponName; // 0x478
	UTextBlock* WeaponName_2; // 0x480
	UTextBlock* WeaponName_3; // 0x488
	UWidgetSwitcher* WidgetSwitcher_1; // 0x490
	UUW-Inventory_DragItem_C* DraggedWidget; // 0x498
	FSlateBrush DragItemBrush; // 0x4a0
	bool EnableDrag; // 0x528
	TSoftObjectPtr<UObject> ItemIconImg; // 0x530
	FName AmmorKey; // 0x558
	FMulticastInlineDelegate OnHoverStateEventDispatcher; // 0x560
	FMulticastInlineDelegate OnRightClickEventDispatcher; // 0x570
	FKey SaveKey; // 0x580
	int32_t ClickNum; // 0x598
	bool RandomPerk; // 0x59c
};

struct UUW-Timer_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Ani_Countdown; // 0x250
	UTextBlock* TextBlock_RemailTime; // 0x258
	int32_t PreTime; // 0x260
	bool ActiveTimer; // 0x264
	int32_t RemainTime; // 0x268
};

struct UInputAxisDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputAxisDelegateBinding> InputAxisDelegateBindings; // 0x28
};

struct ABravoHotelProjectileGrenadeC4 : ABravoHotelProjectileGrenade {
	UMaterialInterface* ExplosionGroundDecalMaterial; // 0x688
	FVector ExplosionGroundDecalSize; // 0x690
	UDecalComponent* ExplosionGroundDecalComponent; // 0x6a0
	float ActiveDelayTime; // 0x6b0
	UParticleSystemComponent* TrapEffect; // 0x6b8
	UParticleSystem* TrapTriggerEffect; // 0x6c0
	UParticleSystem* TrapDestoryEffect; // 0x6c8
	UAkAudioEvent* TrapLoopStartEvent; // 0x6d0
	UAkAudioEvent* TrapLoopStopEvent; // 0x6d8
	UAkAudioEvent* TrapTriggerEvent; // 0x6e0
	UAkAudioEvent* AttachEvent; // 0x6e8
	FAudioPlayingHandle TrapLoopSoundHandle; // 0x6f0
	TWeakObjectPtr<UPrimitiveComponent> AttachedComponent; // 0x6f8
	FTimerHandle TimerHandle_CheckAttachedComponent; // 0x700
	int32_t HitItem; // 0x708
	float ExplosionOriginDeltaLocationUp; // 0x70c
};

struct UAnimBoneCompressionCodec : UObject {
	FString Description; // 0x28
};

struct URectLightComponent : ULocalLightComponent {
	float SourceWidth; // 0x390
	float SourceHeight; // 0x394
	float BarnDoorAngle; // 0x398
	float BarnDoorLength; // 0x39c
	UTexture* SourceTexture; // 0x3a0
};

struct UToFloatField : UFieldNodeFloat {
	UFieldNodeInt* IntField; // 0xb0
};

struct UTireConfig : UDataAsset {
	float FrictionScale; // 0x30
	TArray<FTireConfigMaterialFriction> TireFrictionScales; // 0x38
};

struct UUW-ReplayPlayerListItemWidget_C : UBravoHotelReplayPlayerListItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x270
	UButton* BT_PlayerName; // 0x278
	UProgressBar* PB_HP; // 0x280
	UTextBlock* T_PlayerName; // 0x288
	UTextBlock* T_PlayerNameHighlight; // 0x290
	UTextBlock* T_SortInfo; // 0x298
	bool bIsTargetPawn; // 0x2a0
	bool bIsAlive; // 0x2a1
};

struct UUW-MatchEnd_Animation_02_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_DamageList; // 0x250
	UWidgetAnimation* Event2; // 0x258
	UWidgetAnimation* Event; // 0x260
	UWidgetAnimation* Anim_Second; // 0x268
	UWidgetAnimation* Hide; // 0x270
	UWidgetAnimation* Infos_ani; // 0x278
	UWidgetAnimation* Anim_Defeat; // 0x280
	UWidgetAnimation* Anim_Victory; // 0x288
	UImage* Arrow; // 0x290
	UImage* Arrow_2; // 0x298
	UImage* ArrowLine; // 0x2a0
	UImage* ArrowLine_2; // 0x2a8
	UBackgroundBlur* BackgroundBlur; // 0x2b0
	UBackgroundBlur* BackgroundBlur_447; // 0x2b8
	UImage* BlackBG01; // 0x2c0
	UImage* BlackBG02; // 0x2c8
	UImage* BottomLine; // 0x2d0
	UImage* BottomLine_2; // 0x2d8
	UButton* Button_2; // 0x2e0
	UButton* Button_104; // 0x2e8
	UButton* Button_MatchEnd; // 0x2f0
	UButton* Button_Skip; // 0x2f8
	UCanvasPanel* CanvasPanel_49; // 0x300
	UCanvasPanel* CanvasPanel_488; // 0x308
	UCanvasPanel* CanvasPanel_DropItem; // 0x310
	UCanvasPanel* CanvasPanel_DropItem2; // 0x318
	UCanvasPanel* CanvasPanel_Enemy; // 0x320
	UCanvasPanel* CanvasPanel_KillerInfo_Renew; // 0x328
	UCanvasPanel* CanvasPanel_Skip; // 0x330
	UScaleBox* Defeat; // 0x338
	UImage* Glow1; // 0x340
	UImage* Glow1_2; // 0x348
	UImage* Glow2; // 0x350
	UImage* Glow3; // 0x358
	UImage* Glow3_2; // 0x360
	UImage* GlowLine; // 0x368
	UTextBlock* HeadShot; // 0x370
	UHorizontalBox* HorizontalBox_KillerWeaponInfo; // 0x378
	UHorizontalBox* HorizontalBox_Rarity; // 0x380
	UImage* Image_3; // 0x388
	UImage* Image_4; // 0x390
	UImage* Image_5; // 0x398
	UImage* Image_6; // 0x3a0
	UImage* Image_7; // 0x3a8
	UImage* Image_8; // 0x3b0
	UImage* Image_10; // 0x3b8
	UImage* Image_11; // 0x3c0
	UImage* Image_12; // 0x3c8
	UImage* Image_13; // 0x3d0
	UImage* Image_14; // 0x3d8
	UImage* Image_15; // 0x3e0
	UImage* Image_16; // 0x3e8
	UImage* Image_17; // 0x3f0
	UImage* Image_18; // 0x3f8
	UImage* Image_19; // 0x400
	UImage* Image_20; // 0x408
	UImage* Image_21; // 0x410
	UImage* Image_22; // 0x418
	UImage* Image_23; // 0x420
	UImage* Image_24; // 0x428
	UImage* Image_25; // 0x430
	UImage* Image_26; // 0x438
	UImage* Image_252; // 0x440
	UImage* Image_505; // 0x448
	UImage* Image_605; // 0x450
	UImage* Image_816; // 0x458
	UImage* Image_1091; // 0x460
	UImage* Image_1443; // 0x468
	UImage* Image_1558; // 0x470
	UImage* Image_KillerClassIcon; // 0x478
	UImage* Image_MyClassIcon; // 0x480
	UImage* L_Wing01; // 0x488
	UImage* L_Wing01_2; // 0x490
	UImage* L_Wing01_3; // 0x498
	UImage* L_Wing01_4; // 0x4a0
	UImage* L_Wing02; // 0x4a8
	UImage* L_Wing02_2; // 0x4b0
	UImage* L_Wing02_3; // 0x4b8
	UImage* L_Wing02_4; // 0x4c0
	UImage* L_Wing03; // 0x4c8
	UImage* L_Wing03_2; // 0x4d0
	UImage* L_Wing03_3; // 0x4d8
	UImage* L_Wing03_4; // 0x4e0
	UImage* L_WingLine; // 0x4e8
	UImage* L_WingLine_2; // 0x4f0
	UImage* Logo; // 0x4f8
	UImage* Logo_2; // 0x500
	UOverlay* Overlay_1; // 0x508
	UOverlay* Overlay_WeaponLevel; // 0x510
	UEditableText* PosX; // 0x518
	UEditableText* PosY; // 0x520
	UEditableText* PosZ; // 0x528
	UImage* R_Wing01; // 0x530
	UImage* R_Wing01_2; // 0x538
	UImage* R_Wing01_3; // 0x540
	UImage* R_Wing01_4; // 0x548
	UImage* R_Wing02; // 0x550
	UImage* R_Wing02_2; // 0x558
	UImage* R_Wing02_3; // 0x560
	UImage* R_Wing02_4; // 0x568
	UImage* R_Wing03; // 0x570
	UImage* R_Wing03_2; // 0x578
	UImage* R_Wing03_3; // 0x580
	UImage* R_Wing03_4; // 0x588
	UImage* R_WingLine; // 0x590
	UImage* R_WingLine_2; // 0x598
	UImage* Ribbon; // 0x5a0
	UImage* Ribbon_2; // 0x5a8
	UImage* Ring; // 0x5b0
	UScrollBox* ScrollBox_DropItem; // 0x5b8
	UScrollBox* ScrollBox_DropItem2; // 0x5c0
	UTextBlock* T_DamageType; // 0x5c8
	UTextBlock* T_DropCount; // 0x5d0
	UTextBlock* T_DropCount2; // 0x5d8
	UTextBlock* T_WeaponLevel; // 0x5e0
	UTextBlock* TextBlock_3; // 0x5e8
	UTextBlock* TextBlock_4; // 0x5f0
	UTextBlock* TextBlock_5; // 0x5f8
	UTextBlock* TextBlock_6; // 0x600
	UTextBlock* TextBlock_8; // 0x608
	UTextBlock* TextBlock_9; // 0x610
	UTextBlock* TextBlock_10; // 0x618
	UTextBlock* TextBlock_900; // 0x620
	UImage* TopLine; // 0x628
	UImage* TopLine_2; // 0x630
	UUW-MatchEnd_Animation_02_DamagePlayerInfo_C* UW-MatchEnd_Animation_02_DamagePlayerInfo; // 0x638
	UUW-MatchEnd_Animation_02_DamagePlayerInfo_C* UW-MatchEnd_Animation_02_DamagePlayerInfo_2; // 0x640
	UUW-Matchend_DamageListBox_C* UW-Matchend_DamageListBox; // 0x648
	UUW-MatchEnd_RewardSlot_02_C* UW-MatchEnd_RewardSlot; // 0x650
	UUW-MatchEnd_RewardSlot_02_C* UW-MatchEnd_RewardSlot_2; // 0x658
	UUW-MatchEnd_RewardSlot_02_C* UW-MatchEnd_RewardSlot_3; // 0x660
	UUW-MatchEnd_RewardSlot_02_C* UW-MatchEnd_RewardSlot_02; // 0x668
	UTextBlock* WeaponName; // 0x670
	UWidgetSwitcher* WidgetSwitcher_DamageCauser; // 0x678
	UWidgetSwitcher* WidgetSwitcher_KillerInfo; // 0x680
	UWidgetSwitcher* WidgetSwitcher_SkipButton; // 0x688
	UTextBlock* WinText1; // 0x690
	UTextBlock* WinText1_2; // 0x698
	UTextBlock* WinText1_3; // 0x6a0
	UTextBlock* WinText1_4; // 0x6a8
	UTextBlock* WinText2; // 0x6b0
	UTextBlock* WinText3; // 0x6b8
	bool MatchEnd; // 0x6c0
	FMatchEndAnimation AnimationData; // 0x6c1
	UUW-MatchEndWidget_C* MatchEndWidgetRef; // 0x6c8
	FMatchEndSimpleResult SimpleResult; // 0x6d0
	TArray<FTimerHandle> SimpleTimer; // 0x7e0
	FMulticastInlineDelegate EventDispatcher_HideComplete; // 0x7f0
	bool bSuccessWinEventCall; // 0x800
	TArray<FAudioPlayingHandle> PlayingAudio; // 0x808
	bool bTestMode; // 0x818
	bool bTestIsWin; // 0x819
	float MatchFinalResultShowTime; // 0x81c
	FMulticastInlineDelegate EventDispatcher_MoveToMatchEnd; // 0x820
};

struct ABravoHotelMaterialEffectActor : AActor {
	float DestructTime; // 0x328
	TMap<FName, FLinearColor> ColorValues; // 0x330
	TMap<FName, float> FloatValues; // 0x380
	TMap<FName, UCurveLinearColor*> ColorCurves; // 0x3d0
	TMap<FName, UCurveFloat*> FloatCurves; // 0x420
};

struct UUW-Matchend_DamageList_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim; // 0x250
	UButton* Button_CheckHover; // 0x258
	UButton* Button_CheckHover_2; // 0x260
	UCanvasPanel* CanvasPanel_BuffBottom; // 0x268
	UCanvasPanel* CanvasPanel_BuffTop; // 0x270
	UCanvasPanel* CanvasPanel_Killer; // 0x278
	UCanvasPanel* CanvasPanel_Main; // 0x280
	UCanvasPanel* CanvasPanel_Me; // 0x288
	UCanvasPanel* CanvasPanel_None; // 0x290
	UImage* Image_9; // 0x298
	UImage* Image_124; // 0x2a0
	UImage* Image_681; // 0x2a8
	UImage* Image_992; // 0x2b0
	UImage* Image_Last; // 0x2b8
	UImage* Image_OutLine_Killer; // 0x2c0
	UImage* Image_OutLine_Me; // 0x2c8
	USizeBox* SizeBox_Last; // 0x2d0
	UUW-MatchEnd_DamageList_Item_C* UW-MatchEnd_DamageList_Item_Killer; // 0x2d8
	UUW-MatchEnd_DamageList_Item_C* UW-MatchEnd_DamageList_Item_Me; // 0x2e0
	UUW-MatchEnd_DamageList_Item_C* UW-MatchEnd_DamageList_Item_None; // 0x2e8
	UWidgetSwitcher* WidgetSwitcher_DamageCauser; // 0x2f0
	FDiedDamageInfo DiedDamageInfo; // 0x2f8
	bool bIsLast; // 0xed8
	FMulticastInlineDelegate EventDispatcher_HoverDamageList; // 0xee0
	int32_t WidgetIndex; // 0xef0
};

struct UCullingField : UFieldNodeBase {
	UFieldNodeBase* Culling; // 0xb0
	UFieldNodeBase* Field; // 0xb8
	EFieldCullingOperationType Operation; // 0xc0
};

struct UInteractiveGizmoManager : UObject {
	TArray<FActiveGizmo> ActiveGizmos; // 0x30
	TMap<FString, UInteractiveGizmoBuilder*> GizmoBuilders; // 0x58
};

struct UNativeReplayListWidget : UUserWidget {
	UEditableTextBox* PageSizeTB; // 0x248
	UEditableTextBox* CurrentPageTB; // 0x250
	UScrollBox* ScrollBoxReplayList; // 0x258
	UButton* RefreshBtn; // 0x260
	UButton* PrevBtn; // 0x268
	UButton* NextBtn; // 0x270
	UTextBlock* TotalReplaysTB; // 0x278
	UTextBlock* TotalPageText; // 0x280
	UTextBlock* ReplayItemInform; // 0x288
	UCheckBox* ShouldKeepChkBox; // 0x290
	UButton* PlayBtn; // 0x298
	UButton* DeleteBtn; // 0x2a0
	UButton* DeleteOldReplaysBtn; // 0x2a8
	UEditableTextBox* ReplaysToKeepTB; // 0x2b0
	int32_t TotalPages; // 0x2b8
	int32_t CurrentPage; // 0x2bc
	int32_t PageSize; // 0x2c0
	int32_t TotalReplays; // 0x2c4
	int32_t ReplaysToKeep; // 0x2c8
};

struct UBravoHotelAudioEmitterComponent : UAkComponent {
	bool bUseEventRadiusAsMinBounds; // 0x480
	float MinBoundsRadius; // 0x484
	FMulticastInlineDelegate EmitterRegisteredEvent; // 0x498
	FMulticastInlineDelegate EmitterUnregisteredEvent; // 0x4a8
};

struct UBravoHotelBTServiceDetectTarget : UBTService {
	UBlackboardComponent* BlackboardComponent; // 0x70
};

struct UMaterialParameterCollection : UObject {
	FGuid StateID; // 0x28
	TArray<FCollectionScalarParameter> ScalarParameters; // 0x38
	TArray<FCollectionVectorParameter> VectorParameters; // 0x48
};

struct UEnvQueryTest_Dot : UEnvQueryTest {
	FEnvDirection LineA; // 0x1f8
	FEnvDirection LineB; // 0x218
	EEnvTestDot TestMode; // 0x238
	bool bAbsoluteValue; // 0x239
};

struct UUW-Inventory_Background_C : UUserWidget {
	UImage* Image_112; // 0x248
};

struct UMaterialExpressionShadingPathSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x3]; // 0x54
};

struct UBravoHotelAttackDamageWidget : UUserWidget {
	UWidgetAnimation* Enemy_DamageFadeIn; // 0x248
	UWidgetAnimation* Enemy_DamageFadeOut; // 0x250
	UWidgetAnimation* Enemy_DamageBroken; // 0x258
	FTimerHandle TimerHandle_EventRemoveWidget; // 0x260
	ABravoHotelPlayerController* PlayerControllerRef; // 0x268
	UWidgetSwitcher* WidgetSwitcher_1; // 0x270
	UTextBlock* TextBlock_1; // 0x278
	UTextBlock* TextBlock_3; // 0x280
	UTextBlock* TextBlock_457; // 0x288
	UImage* Image_1; // 0x290
	UImage* Image_2; // 0x298
	UImage* Image_145; // 0x2a0
	UImage* Image_147; // 0x2a8
	UImage* Image_177; // 0x2b0
	FAttackDamageWidgetInfo AttackDamageWidgetInfo; // 0x2b8
	bool bIsTrueDamage; // 0x308
	bool bIsDestructed; // 0x309
	FVector WidgetLocation; // 0x30c
	FDelegate Delegate_OnEnemy_DamageFadeIn_Finished; // 0x318
	UPaperSprite* Texture_Helmet; // 0x368
	UPaperSprite* Texture_HelmetBroken; // 0x370
	UPaperSprite* Texture_Chest; // 0x378
	UPaperSprite* Texture_ChestBroken; // 0x380
	UPaperSprite* Texture_Tire; // 0x388
	UFont* Font_Heavy; // 0x390
	UFont* Font_Regular; // 0x398
};

struct UInputTouchDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputTouchDelegateBinding> InputTouchDelegateBindings; // 0x28
};

struct UPawnSensingComponent : UActorComponent {
	float HearingThreshold; // 0xb0
	float LOSHearingThreshold; // 0xb4
	float SightRadius; // 0xb8
	float SensingInterval; // 0xbc
	float HearingMaxSoundAge; // 0xc0
	char bEnableSensingUpdates : 1; // 0xc4
	char bOnlySensePlayers : 1; // 0xc4
	char bSeePawns : 1; // 0xc4
	char bHearNoises : 1; // 0xc4
	FMulticastInlineDelegate OnSeePawn; // 0xd0
	FMulticastInlineDelegate OnHearNoise; // 0xe0
	float PeripheralVisionAngle; // 0xf0
	float PeripheralVisionCosine; // 0xf4
};

struct UParticleModuleParameterDynamic : UParticleModuleParameterBase {
	TArray<FEmitterDynamicParameter> DynamicParams; // 0x30
	int32_t UpdateFlags; // 0x40
	char bUsesVelocity : 1; // 0x44
};

struct UABP-FPSK_Arms_C : UBravoHotelAnimInstanceFPP {
	FPointerToUberGraphFrame UberGraphFrame; // 0x700
	FAnimNode_Root AnimGraphNode_Root; // 0x708
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_11; // 0x738
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x758
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x780
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x7a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x7d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x7f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x820
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0x848
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0x870
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0x898
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0x8c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0x8e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0x910
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0x938
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0x960
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0x988
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0x9b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x9d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0xa00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0xa28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0xa50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_129; // 0xa78
	FAnimNode_StateResult AnimGraphNode_StateResult_36; // 0xaf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_128; // 0xb20
	FAnimNode_StateResult AnimGraphNode_StateResult_35; // 0xb98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_127; // 0xbc8
	FAnimNode_StateResult AnimGraphNode_StateResult_34; // 0xc40
	FAnimNode_StateMachine AnimGraphNode_StateMachine_9; // 0xc70
	FAnimNode_StateResult AnimGraphNode_StateResult_33; // 0xd20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0xd50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0xd78
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_27; // 0xda0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_126; // 0xe80
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_4; // 0xef8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_125; // 0xfc0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_26; // 0x1038
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_26; // 0x10e8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_25; // 0x11c8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_25; // 0x12a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_24; // 0x1358
	FAnimNode_StateResult AnimGraphNode_StateResult_32; // 0x1438
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_23; // 0x1468
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_24; // 0x1548
	FAnimNode_RotationOffsetBlendSpace AnimGraphNode_RotationOffsetBlendSpace; // 0x15e8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_15; // 0x1770
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_14; // 0x1878
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_9; // 0x1980
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_8; // 0x1b60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_124; // 0x1d40
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7; // 0x1db8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x1e78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x1ea0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x1ec8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x1ef0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x1f18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x1f40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_123; // 0x1f68
	FAnimNode_StateResult AnimGraphNode_StateResult_31; // 0x1fe0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_122; // 0x2010
	FAnimNode_StateResult AnimGraphNode_StateResult_30; // 0x2088
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_121; // 0x20b8
	FAnimNode_StateResult AnimGraphNode_StateResult_29; // 0x2130
	FAnimNode_StateMachine AnimGraphNode_StateMachine_8; // 0x2160
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_11; // 0x2210
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_10; // 0x2230
	FAnimNode_Fabrik AnimGraphNode_Fabrik_2; // 0x2250
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x23e0
	FAnimNode_StateResult AnimGraphNode_StateResult_28; // 0x2570
	FAnimNode_StateMachine AnimGraphNode_StateMachine_7; // 0x25a0
	FAnimNode_StateResult AnimGraphNode_StateResult_27; // 0x2650
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x2680
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x26a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x26d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_120; // 0x26f8
	FAnimNode_StateResult AnimGraphNode_StateResult_26; // 0x2770
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_22; // 0x27a0
	FAnimNode_StateResult AnimGraphNode_StateResult_25; // 0x2880
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_119; // 0x28b0
	FAnimNode_StateResult AnimGraphNode_StateResult_24; // 0x2928
	FAnimNode_StateMachine AnimGraphNode_StateMachine_6; // 0x2958
	FAnimNode_StateResult AnimGraphNode_StateResult_23; // 0x2a08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x2a38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x2a60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x2a88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x2ab0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_21; // 0x2ad8
	FAnimNode_StateResult AnimGraphNode_StateResult_22; // 0x2bb8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_20; // 0x2be8
	FAnimNode_StateResult AnimGraphNode_StateResult_21; // 0x2cc8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_5; // 0x2cf8
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0x2da8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x2dd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x2e00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_118; // 0x2e28
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0x2ea0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_117; // 0x2ed0
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x2f48
	FAnimNode_StateMachine AnimGraphNode_StateMachine_4; // 0x2f78
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x3028
	FAnimNode_StateMachine AnimGraphNode_StateMachine_3; // 0x3058
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x3108
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x3138
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_116; // 0x3160
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_23; // 0x31d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_115; // 0x3278
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_114; // 0x32f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_113; // 0x3368
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_24; // 0x33e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_112; // 0x3490
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x3508
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_111; // 0x3538
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_22; // 0x35b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_110; // 0x3650
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_109; // 0x36c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_108; // 0x3740
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_23; // 0x37b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_107; // 0x3868
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x38e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_106; // 0x3910
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_105; // 0x3988
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_104; // 0x3a00
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_22; // 0x3a78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_103; // 0x3b28
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x3ba0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_3; // 0x3bd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_102; // 0x3c98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_101; // 0x3d10
	FAnimNode_Slot AnimGraphNode_Slot_13; // 0x3d88
	FAnimNode_Slot AnimGraphNode_Slot_12; // 0x3dd0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_21; // 0x3e18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_100; // 0x3ec8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_99; // 0x3f40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_98; // 0x3fb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_97; // 0x4030
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_96; // 0x40a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_95; // 0x4120
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_94; // 0x4198
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_93; // 0x4210
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_92; // 0x4288
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_20; // 0x4300
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_6; // 0x43b0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_2; // 0x4478
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_91; // 0x4540
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x45b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x45e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x4608
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x4630
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x4658
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x4680
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x46a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x46d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x46f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x4720
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x4748
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x4770
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x4798
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x47c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x47e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x4810
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x4838
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x4860
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x4888
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x48b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x48d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_90; // 0x4900
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x4978
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_89; // 0x49a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_88; // 0x4a20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_87; // 0x4a98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_86; // 0x4b10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_85; // 0x4b88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_84; // 0x4c00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_83; // 0x4c78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_82; // 0x4cf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_81; // 0x4d68
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_19; // 0x4de0
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x4e90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_80; // 0x4ec0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_79; // 0x4f38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_78; // 0x4fb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_77; // 0x5028
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_76; // 0x50a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_75; // 0x5118
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_74; // 0x5190
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_18; // 0x5208
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_73; // 0x52b8
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x5330
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_72; // 0x5360
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_71; // 0x53d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_70; // 0x5450
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_69; // 0x54c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_68; // 0x5540
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_67; // 0x55b8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_17; // 0x5630
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_66; // 0x56e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_65; // 0x5758
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x57d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_64; // 0x5800
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_63; // 0x5878
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_62; // 0x58f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_61; // 0x5968
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_60; // 0x59e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_59; // 0x5a58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_58; // 0x5ad0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_16; // 0x5b48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_57; // 0x5bf8
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x5c70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_56; // 0x5ca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_55; // 0x5d18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_54; // 0x5d90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_53; // 0x5e08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_52; // 0x5e80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_51; // 0x5ef8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_15; // 0x5f70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_50; // 0x6020
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_49; // 0x6098
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x6110
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_48; // 0x6140
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_21; // 0x61b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_47; // 0x6258
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_46; // 0x62d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_14; // 0x6348
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_45; // 0x63f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_44; // 0x6470
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_43; // 0x64e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_42; // 0x6560
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_41; // 0x65d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_40; // 0x6650
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_13; // 0x66c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_39; // 0x6778
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x67f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_38; // 0x6820
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_20; // 0x6898
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_37; // 0x6938
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_36; // 0x69b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_12; // 0x6a28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_35; // 0x6ad8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34; // 0x6b50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0x6bc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x6c40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x6cb8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_11; // 0x6d30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0x6de0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0x6e58
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x6ed0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x6f00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_19; // 0x6f78
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_19; // 0x7018
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_18; // 0x70f8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0x7198
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x7258
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_18; // 0x72d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x73b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x7428
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_10; // 0x74a0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_5; // 0x7550
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_17; // 0x7618
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x76f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_9; // 0x7770
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_16; // 0x7820
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_15; // 0x7900
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_8; // 0x79e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_14; // 0x7a90
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x7b70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x7ba0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_17; // 0x7c18
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_10; // 0x7cb8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_9; // 0x7cd8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_13; // 0x7cf8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_13; // 0x7e00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_16; // 0x7ee0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_12; // 0x7f80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x8060
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x80d8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_7; // 0x8150
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x8200
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_11; // 0x82c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_15; // 0x83a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_10; // 0x8448
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x8528
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_6; // 0x85a0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x8650
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x8730
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_5; // 0x8810
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x88c0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x89a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x89d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_14; // 0x8a48
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x8ae8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_13; // 0x8bc8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0x8c68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x8d28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x8da0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x8e18
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x8e90
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x8f70
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x9010
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x90f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x9168
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_4; // 0x91e0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x9290
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x9358
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x93d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x9448
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x94c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x9538
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x95b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x9628
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x96a0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x9718
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_12; // 0x97c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x9868
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x9948
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x99c0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x9a38
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x9ae8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x9bc8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x9ca8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x9d58
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x9d88
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x9e38
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x9e68
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_14; // 0x9f18
	FAnimNode_CopyPoseFromMesh AnimGraphNode_CopyPoseFromMesh; // 0x9fd0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0xa110
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_13; // 0xa1d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_27; // 0xa288
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_12; // 0xa2b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_26; // 0xa368
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_12; // 0xa390
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_9; // 0xa498
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_11; // 0xa4b8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8; // 0xa570
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8; // 0xa590
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7; // 0xa5b0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_10; // 0xa5d0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_9; // 0xa688
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7; // 0xa740
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_7; // 0xa760
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_6; // 0xa940
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_25; // 0xab20
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_11; // 0xab48
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_11; // 0xac50
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0xacf0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_8; // 0xadb8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_10; // 0xae70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_10; // 0xaf78
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0xb018
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_24; // 0xb0d8
	FAnimNode_CopyBone AnimGraphNode_CopyBone_2; // 0xb100
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive; // 0xb1f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0xb2b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0xb330
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_7; // 0xb3a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_23; // 0xb460
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_6; // 0xb488
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_9; // 0xb540
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0xb648
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6; // 0xb6e8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6; // 0xb708
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0xb728
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_22; // 0xb7e0
	FAnimNode_CopyBone AnimGraphNode_CopyBone; // 0xb808
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_8; // 0xb8f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0xba00
	FAnimNode_Slot AnimGraphNode_Slot_11; // 0xbaa0
	FAnimNode_Slot AnimGraphNode_Slot_10; // 0xbae8
	FAnimNode_Slot AnimGraphNode_Slot_9; // 0xbb30
	FAnimNode_Slot AnimGraphNode_Slot_8; // 0xbb78
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0xbbc0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_21; // 0xbc60
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0xbc88
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0xbcd0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_7; // 0xbd18
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_6; // 0xbe20
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_20; // 0xbf28
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_5; // 0xbf50
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5; // 0xc058
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0xc078
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5; // 0xc130
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_19; // 0xc150
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4; // 0xc178
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_5; // 0xc1a0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4; // 0xc380
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0xc3a0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0xc3e8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_18; // 0xc4a8
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0xc4d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0xc518
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_17; // 0xc5d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_16; // 0xc600
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0xc628
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_15; // 0xc6c8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0xc6f0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3; // 0xc7b8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3; // 0xc7d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0xc7f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0xc8b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_14; // 0xc950
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_4; // 0xc980
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_3; // 0xcb60
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_4; // 0xcd40
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0xce48
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0xcf50
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_2; // 0xcfa0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0xd180
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0xd220
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0xd328
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0xd348
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0xd368
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0xd408
	FAnimNode_Slot AnimGraphNode_Slot; // 0xd450
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0xd498
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_13; // 0xd550
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_12; // 0xd578
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_11; // 0xd5a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_10; // 0xd5c8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_9; // 0xd5f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0xd618
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0xd640
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0xd668
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0xd690
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0xd6b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0xd6e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0xd780
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0xd7f8
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK; // 0xd900
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0xdae0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0xdb00
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0xdb20
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0xdbd8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0xdc00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0xdc28
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0xdcc8
};

struct UAnimMontage : UAnimCompositeBase {
	FAlphaBlend BlendIn; // 0xb0
	float BlendInTime; // 0xe0
	FAlphaBlend BlendOut; // 0xe8
	float BlendOutTime; // 0x118
	float BlendOutTriggerTime; // 0x11c
	FName SyncGroup; // 0x120
	int32_t SyncSlotIndex; // 0x128
	FMarkerSyncData MarkerData; // 0x130
	TArray<FCompositeSection> CompositeSections; // 0x150
	TArray<FSlotAnimationTrack> SlotAnimTracks; // 0x160
	TArray<FBranchingPoint> BranchingPoints; // 0x170
	bool bEnableRootMotionTranslation; // 0x180
	bool bEnableRootMotionRotation; // 0x181
	bool bEnableAutoBlendOut; // 0x182
	ERootMotionRootLock RootMotionRootLock; // 0x183
	TArray<FBranchingPointMarker> BranchingPointMarkers; // 0x188
	TArray<int32_t> BranchingPointStateNotifyIndices; // 0x198
	FTimeStretchCurve TimeStretchCurve; // 0x1a8
	FName TimeStretchCurveName; // 0x1d0
};

struct UMaterialExpressionStaticSwitch : UMaterialExpression {
	char DefaultValue : 1; // 0x40
	FExpressionInput A; // 0x44
	FExpressionInput B; // 0x58
	FExpressionInput Value; // 0x6c
};

struct ABravoHotelAmplifier : ABravoHotelWeaponBase {
	float AmplifierLength; // 0x1bec
	FTimerHandle TimerHandle_OnStartEffectEvent; // 0x1bf0
	TArray<ABravoHotelCharacter*> DetectedCharacters; // 0x1bf8
};

struct APrecomputedVisibilityOverrideVolume : AVolume {
	TArray<AActor*> OverrideVisibleActors; // 0x360
	TArray<AActor*> OverrideInvisibleActors; // 0x370
	TArray<FName> OverrideInvisibleLevels; // 0x380
};

struct ULowEntryLatentActionString : UObject {
	bool Finished; // 0x28
	FString Result; // 0x30
	int32_t KeepAliveCount; // 0x40
};

struct UVRNotificationsComponent : UActorComponent {
	FMulticastInlineDelegate HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate; // 0xb0
	FMulticastInlineDelegate HMDTrackingInitializedDelegate; // 0xc0
	FMulticastInlineDelegate HMDRecenteredDelegate; // 0xd0
	FMulticastInlineDelegate HMDLostDelegate; // 0xe0
	FMulticastInlineDelegate HMDReconnectedDelegate; // 0xf0
	FMulticastInlineDelegate HMDConnectCanceledDelegate; // 0x100
	FMulticastInlineDelegate HMDPutOnHeadDelegate; // 0x110
	FMulticastInlineDelegate HMDRemovedFromHeadDelegate; // 0x120
	FMulticastInlineDelegate VRControllerRecenteredDelegate; // 0x130
};

struct UMaterialExpressionDecalMipmapLevel : UMaterialExpression {
	FExpressionInput TextureSize; // 0x40
	float ConstWidth; // 0x54
	float ConstHeight; // 0x58
};

struct UUW-ClassinfoitemBoardWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_Show_classinfo; // 0x250
	UButton* Button_SpreadList; // 0x258
	UImage* Image_323; // 0x260
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget; // 0x268
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_2; // 0x270
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_3; // 0x278
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_4; // 0x280
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_5; // 0x288
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_6; // 0x290
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_7; // 0x298
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_8; // 0x2a0
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_9; // 0x2a8
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_10; // 0x2b0
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_11; // 0x2b8
	UUW-ClassinfoitemWidget_C* UW-ClassinfoitemWidget_12; // 0x2c0
	UVerticalBox* VerticalBox_ClassBox; // 0x2c8
	UVerticalBox* VerticalBox_ClassList; // 0x2d0
	UVerticalBox* VerticalBox_Description; // 0x2d8
	UVerticalBox* VerticalBox_Main; // 0x2e0
	int32_t LastTableRow; // 0x2e8
	TMap<FName, UUW-ClassinfoitemWidget_C*> ClassInfoItemMap; // 0x2f0
	bool ListVisibility; // 0x340
};

struct UUW-BlackMarket_Slot_Ammo_C : UUW-BlackMarket_Slot_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UButton* BTN-Menu02; // 0x3e0
	UButton* BTN-Menu03; // 0x3e8
	UButton* BTN-Menu04; // 0x3f0
	UButton* BTN-Menu05; // 0x3f8
	UCanvasPanel* CP-SlotInfo; // 0x400
	UImage* IMG-BG; // 0x408
	UImage* IMG-BG-Border; // 0x410
	UImage* IMG-Item; // 0x418
	UImage* IMG-Mask; // 0x420
	UImage* IMG-Over; // 0x428
	UImage* IMG-Over-Border; // 0x430
	UOverlay* Menu02; // 0x438
	UOverlay* Menu03; // 0x440
	UOverlay* Menu04; // 0x448
	UOverlay* Menu05; // 0x450
	UOverlay* Overlay_Mask; // 0x458
	UTextBlock* TXT-Count; // 0x460
	UTextBlock* TXT-ItemName; // 0x468
	UTextBlock* TXT-Menu01; // 0x470
	UTextBlock* TXT-Menu02; // 0x478
	UTextBlock* TXT-Menu03; // 0x480
	UTextBlock* TXT-Menu04; // 0x488
	UTextBlock* TXT-Menu05; // 0x490
	UTextBlock* TXT-TotalWeight; // 0x498
	UTextBlock* TXT-Weight; // 0x4a0
};

struct UBHReplicatedPlayerInfo : UActorComponent {
	FName UID; // 0xc0
	int32_t UniquePlayerId; // 0xc8
	FPlayerSeasonInfo SeasonInfo; // 0xcc
	int32_t CurrentPCTypeID; // 0xe4
	char TeamIndex; // 0xe8
	char TeamSize; // 0xe9
	int32_t TeamPlayerIconIndex; // 0xec
	FPerkDeckInfo CurrentPerkDeckInfo; // 0xf0
	FSupplyBoxInfo SupplyInfoFromServer; // 0x160
	FWeaponInfo SupplyWeaponInfo; // 0x1a8
	bool bIsSuspiciousUser; // 0x1d8
	FRepNewbieData NewbieData; // 0x1e0
};

struct UBravoHotelScenarioCallbackProxy : UObject {
	FMulticastInlineDelegate Finished; // 0x28
};

struct UNativePlayerListItem : UUserWidget {
	UButton* Button_PlayerName; // 0x248
	UTextBlock* Text_PlayerName; // 0x250
};

struct UBTCompositeNode : UBTNode {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct UDatasmithFBXSceneImportData : UDatasmithSceneImportData {
	bool bGenerateLightmapUVs; // 0x28
	FString TexturesDir; // 0x30
	char IntermediateSerialization; // 0x40
	bool bColorizeMaterials; // 0x41
};

struct UProjectileTrajectoryComponent_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	TArray<UParticleSystemComponent*> BeamsArray; // 0xb8
	UDecalComponent* Decal; // 0xc8
	FVector StartLocation; // 0xd0
	FVector InitialVelocity; // 0xdc
	float PathLifeTime; // 0xe8
	float TimeInterval; // 0xec
	E_DrawingType DrawingType; // 0xf0
	FVector DesiredStartLocation; // 0xf4
	FVector InitialLocalVelocity; // 0x100
	UParticleSystem* BeamParticle; // 0x110
	FLinearColor DebugColor; // 0x118
	float DebugThickness; // 0x128
	FLinearColor ParticleColor; // 0x12c
	float ParticleColorMultipler; // 0x13c
	UMaterialInterface* DecalMaterial; // 0x140
	FLinearColor DecalColor; // 0x148
	FVector DecalScale; // 0x158
	bool ConstantScale?; // 0x164
	FTimerHandle ResizerTimer; // 0x168
	FVector DecalScaleMin; // 0x170
	FVector DecalScaleMax; // 0x17c
	float ScaleTime; // 0x188
	bool ScaleStart?; // 0x18c
	FVector Gravity; // 0x190
	float InitXAxisValue; // 0x19c
	bool CreateBeam; // 0x1a0
	int32_t HitBeamIndex; // 0x1a4
	USplineMeshComponent* SplineStaticMesh; // 0x1a8
	TArray<USplineMeshComponent*> SplineMeshArray; // 0x1b0
	FVector SM-IndicatorScale; // 0x1c0
	UStaticMeshComponent* SM-Indicator; // 0x1d0
	bool Hit; // 0x1d8
	bool bForceStop; // 0x1d9
	bool FPSMode; // 0x1da
};

struct UMagicLeapARPinSettings : UObject {
	float UpdateCheckFrequency; // 0x28
	FMagicLeapARPinState OnUpdatedEventTriggerDelta; // 0x2c
};

struct UParticleModuleLocationPrimitiveSphere : UParticleModuleLocationPrimitiveBase {
	FRawDistributionFloat StartRadius; // 0xb0
};

struct UGeometryCacheComponent : UMeshComponent {
	UGeometryCache* GeometryCache; // 0x4e0
	bool bRunning; // 0x4e8
	bool bLooping; // 0x4e9
	float StartTimeOffset; // 0x4ec
	float PlaybackSpeed; // 0x4f0
	int32_t NumTracks; // 0x4f4
	float ElapsedTime; // 0x4f8
	float Duration; // 0x52c
	bool bManualTick; // 0x530
};

struct UUW-GamePopupWidget_C : UBravoHotelGamePopupWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x250
	UButton* Btn-Exit; // 0x258
	UButton* BTN-LobbyRestart; // 0x260
	UButton* BTN-Resume; // 0x268
	UButton* BTN-ReturnToTitle; // 0x270
	UButton* BTN-Settings; // 0x278
	UButton* Button_1; // 0x280
	UButton* Button_2; // 0x288
	UButton* Button_4; // 0x290
	UImage* Image_2; // 0x298
	UImage* IMG-BG; // 0x2a0
	UOverlay* Overlay_Exit; // 0x2a8
	UTextBlock* TextBlock; // 0x2b0
	UTextBlock* TextBlock_2; // 0x2b8
	UUW-VoiceTalk_C* UW-VoiceTalk; // 0x2c0
	UVerticalBox* VerticalBox_InGame; // 0x2c8
	UVerticalBox* VerticalBox_Lobby; // 0x2d0
	FName MapNameToExit; // 0x2d8
	bool IsLobby; // 0x2e0
};

struct UGizmoCircleComponent : UGizmoBaseComponent {
	FVector Normal; // 0x4d0
	float Radius; // 0x4dc
	float Thickness; // 0x4e0
	int32_t NumSides; // 0x4e4
	bool bViewAligned; // 0x4e8
	bool bOnlyAllowFrontFacingHits; // 0x4e9
};

struct UEnvQueryNode : UObject {
	int32_t VerNum; // 0x28
};

struct UOnlineEngineInterfaceImpl : UOnlineEngineInterface {
	FName VoiceSubsystemNameOverride; // 0x28
};

struct UNiagaraDataInterfaceVector4Curve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x58
	FRichCurve YCurve; // 0xd8
	FRichCurve ZCurve; // 0x158
	FRichCurve WCurve; // 0x1d8
};

struct UKeyImageWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UUW-KeyControl_C* Alt; // 0x250
	UTextBlock* Alt+; // 0x258
	UUW-KeyControl_C* Ctrl; // 0x260
	UTextBlock* Ctrl+; // 0x268
	UHorizontalBox* HorizontalBox_169; // 0x270
	UUW-KeyControl_C* Key; // 0x278
	UScaleBox* ScaleBox_1; // 0x280
	UUW-KeyControl_C* Shift; // 0x288
	UTextBlock* Shift+; // 0x290
	EHorizontalAlignment Horizontal Alignment; // 0x298
	EVerticalAlignment vertical Alignment; // 0x299
	bool UsingAlphaBg; // 0x29a
	EKeySettingType PreKeyType; // 0x29b
	FInputActionKeyMapping PreKeyMappingData; // 0x2a0
	bool UsingKeyMappingData; // 0x2c8
	float DefaultScale; // 0x2cc
	bool OverrideFontSize; // 0x2d0
	int32_t FontSize; // 0x2d4
};

struct UStreamableRenderAsset : UObject {
	double ForceMipLevelsToBeResidentTimestamp; // 0x28
	int32_t NumCinematicMipLevels; // 0x30
	int32_t StreamingIndex; // 0x34
	int32_t CachedCombinedLODBias; // 0x38
	char CachedNumResidentLODs; // 0x3c
	char bCachedReadyForStreaming : 1; // 0x3d
	char NeverStream : 1; // 0x3d
	char bGlobalForceMipLevelsToBeResident : 1; // 0x3d
	char bIsStreamable : 1; // 0x3d
	char bHasStreamingUpdatePending : 1; // 0x3d
	char bForceMiplevelsToBeResident : 1; // 0x3d
	char bIgnoreStreamingMipBias : 1; // 0x3d
	char bUseCinematicMipLevels : 1; // 0x3d
};

struct UBravoHotelCheatManager : UCheatManagerEx {
	UUserWidget* OpenedWidget; // 0x78
};

struct UPawnAction_Repeat : UPawnAction {
	UPawnAction* ActionToRepeat; // 0x98
	UPawnAction* RecentActionCopy; // 0xa0
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
};

struct APawn : AMKPawnEx {
	char bUseControllerRotationPitch : 1; // 0x340
	char bUseControllerRotationYaw : 1; // 0x340
	char bUseControllerRotationRoll : 1; // 0x340
	char bCanAffectNavigationGeneration : 1; // 0x340
	float BaseEyeHeight; // 0x344
	EAutoReceiveInput AutoPossessPlayer; // 0x348
	EAutoPossessAI AutoPossessAI; // 0x349
	uint16_t RemoteViewPitch; // 0x34a
	uint16_t RemoteViewYaw; // 0x34c
	AController* AIControllerClass; // 0x350
	APlayerState* PlayerState; // 0x358
	AController* LastHitBy; // 0x368
	AController* Controller; // 0x370
	FVector ControlInputVector; // 0x37c
	FVector LastControlInputVector; // 0x388
};

struct USimplygonAmbientOcclusionCaster : USimplygonMaterialCaster {
	FAmbientOcclusionCasterSettings AmbientOcclusionCasterSettings; // 0x28
};

struct UEnvelopeFollowerListener : UActorComponent {
	FMulticastInlineDelegate OnEnvelopeFollowerUpdate; // 0xb0
};

struct UBookMark : UBookmarkBase {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	TArray<FString> HiddenLevels; // 0x40
};

struct UMenuAnchor : UContentWidget {
	UUserWidget* MenuClass; // 0x120
	FDelegate OnGetMenuContentEvent; // 0x128
	EMenuPlacement Placement; // 0x138
	bool bFitInWindow; // 0x139
	bool ShouldDeferPaintingAfterWindowContent; // 0x13a
	bool UseApplicationMenuStack; // 0x13b
	FMulticastInlineDelegate OnMenuOpenChanged; // 0x140
};

struct ABandwidthTestActor : AActor {
	FBandwidthTestGenerator BandwidthGenerator; // 0x328
};

struct UInterpTrackInstColorProp : UInterpTrackInstProperty {
	FColor ResetColor; // 0x58
};

struct UBTTask_PlaySound : UBTTaskNode {
	USoundCue* SoundToPlay; // 0x70
};

struct ABravoHotelPlayerCameraManager : APlayerCameraManager {
	float ServerUpdateCameraInterval; // 0x2b48
	TArray<FTimedCameraPostProcessData> TimedCameraPostProcessDatas; // 0x2b70
	TArray<FTimedCameraEffectData> TimedCameraEffectDatas; // 0x2b80
};

struct UInputRouter : UObject {
	bool bAutoInvalidateOnHover; // 0x28
	bool bAutoInvalidateOnCapture; // 0x29
	UInputBehaviorSet* ActiveInputBehaviors; // 0x38
};

struct USkeletalMeshLODSettings : UDataAsset {
	FPerPlatformInt MinLOD; // 0x30
	FPerPlatformBool DisableBelowMinLodStripping; // 0x34
	FPerPlatformBool bSupportLODStreaming; // 0x35
	FPerPlatformInt MaxNumStreamedLODs; // 0x38
	FPerPlatformInt MaxNumOptionalLODs; // 0x3c
	TArray<FSkeletalMeshLODGroupSettings> LODGroups; // 0x40
};

struct UUW-Inventory_EquippedSlot_C : UUW-Inventory_SlotBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1360
	UWidgetAnimation* Anim_Material_Get; // 0x1368
	UWidgetAnimation* Anim_Material_Hover; // 0x1370
	UWidgetAnimation* Anim_Upgrade; // 0x1378
	UWidgetAnimation* Anim_Progress; // 0x1380
	USizeBox* Abillity; // 0x1388
	UTextBlock* AbillityValue; // 0x1390
	UImage* Bg; // 0x1398
	UImage* Bg_3; // 0x13a0
	UImage* BorderBG; // 0x13a8
	UImage* BorderBG_3; // 0x13b0
	UButton* btn_HelmetTree; // 0x13b8
	UImage* ChoiceBG; // 0x13c0
	UImage* ChoiceBG_3; // 0x13c8
	UImage* DefenseBG; // 0x13d0
	UImage* DefenseBG_3; // 0x13d8
	UProgressBar* DurabilityBar; // 0x13e0
	UProgressBar* DurabilityBar_3; // 0x13e8
	UImage* EmptyBG; // 0x13f0
	UImage* EmptyBG_3; // 0x13f8
	UImage* Image; // 0x1400
	UImage* Image_197; // 0x1408
	UImage* Image_234; // 0x1410
	UImage* Image_279; // 0x1418
	UImage* Image_491; // 0x1420
	UImage* Image_682; // 0x1428
	UImage* ItemImage; // 0x1430
	UImage* ItemImage_3; // 0x1438
	UImage* LV; // 0x1440
	UHorizontalBox* Lv_Star; // 0x1448
	UImage* OverBG; // 0x1450
	UImage* OverBG_3; // 0x1458
	UOverlay* Overlay_1; // 0x1460
	UUW-Inventory_MaterialIconSlot_C* UW-Inventory_MaterialIconSlot; // 0x1468
	UUW-StatupWidget_C* UW-StatupWidget; // 0x1470
	UWidgetSwitcher* WidgetSwitcher_3; // 0x1478
	EWearableItemType WearableItemType; // 0x1480
	bool IsDefense; // 0x1481
	UUW-Inventory_ItemSlotHover_C* HoverWidget; // 0x1488
	UUserWidget* HoverOwnerWidget; // 0x1490
	int32_t SwitcherIndex; // 0x1498
	bool SettingByEquippedInfo; // 0x149c
};

struct UAsyncActionLoadPrimaryAsset : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UARBasicLightEstimate : UARLightEstimate {
	float AmbientIntensityLumens; // 0x28
	float AmbientColorTemperatureKelvin; // 0x2c
	FLinearColor AmbientColor; // 0x30
};

struct UChildActorComponent : USceneComponent {
	AActor* ChildActorClass; // 0x230
	AActor* ChildActor; // 0x238
	AActor* ChildActorTemplate; // 0x240
};

struct UUW-ImageTextCell_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	URichTextBlock* RichTextBlock_52; // 0x250
	FTextBlockStyle DefaultTextStyle; // 0x258
	FText TextString; // 0x4c0
};

struct UVehicleSeatData : UDataAsset {
	bool bShouldUseTwoHandIK; // 0x30
	UBlendSpaceBase* IdleAimOffset; // 0x38
	UAnimSequence* UnarmedIdleAnim; // 0x40
	UAnimSequence* UnarmedStandAnim; // 0x48
	UAnimSequence* RifleIdleAnim; // 0x50
	UAnimSequence* RifleAimingAOSAnim; // 0x58
	UBlendSpaceBase* RifleAimOffset; // 0x60
	UBlendSpaceBase* RifleAOSBlendingAnim; // 0x68
	UAnimSequence* PistolIdleAnim; // 0x70
	UAnimSequence* PistolAimingAOSAnim; // 0x78
	UBlendSpaceBase* PistolAimOffset; // 0x80
	UBlendSpaceBase* PistolAOSBlendingAnim; // 0x88
	UAnimSequence* ThrowingWeaponIdleAnim; // 0x90
	UAnimSequence* ThrowingWeaponAimingAOSAnim; // 0x98
	UBlendSpaceBase* OverThrow_ThrowingWeaponAimOffset; // 0xa0
	UBlendSpaceBase* UnderThrow_ThrowingWeaponAimOffset; // 0xa8
	UBlendSpaceBase* ThrowingWeaponOverThrowBlendingAnim; // 0xb0
	UBlendSpaceBase* ThrowingWeaponUnderThrowBlendingAnim; // 0xb8
	FAnimSlot OverThrowAnim; // 0xc0
	FAnimSlot UnderThrowAnim; // 0xd0
	UAnimSequence* RPGIdleAnim; // 0xe0
	UCurveVector* OccupantAOSBlendingCurve; // 0xe8
	FVector AimingCameraTargetLocation; // 0xf0
	UCurveFloat* MinimumCameraPitchCurve; // 0x100
	float MinimumCameraYaw; // 0x108
	float MaximumCameraYaw; // 0x10c
	float IdleViewPitchMin; // 0x110
	float IdleViewPitchMax; // 0x114
	float IdleViewYawMin; // 0x118
	float IdleViewYawMax; // 0x11c
	UBlendSpaceBase* BS_DriverHandlebar_1P; // 0x120
	UBlendSpaceBase* BS_DriverHandlebar_3P; // 0x128
	UAnimSequence* DriverHandlingIdleAnim_1P; // 0x130
	UAnimSequence* DriverHandlingIdleAnim_3P; // 0x138
	UAnimSequence* DriverHandlingLeftAnim_1P; // 0x140
	UAnimSequence* DriverHandlingLeftAnim_3P; // 0x148
	UAnimSequence* DriverHandlingRightAnim_1P; // 0x150
	UAnimSequence* DriverHandlingRightAnim_3P; // 0x158
	bool bCheckRightHandAimOffset; // 0x160
	UAnimSequence* DriverAimOffsetBasePose_1P; // 0x168
	UBlendSpaceBase* DriverAimOffset_1P; // 0x170
};

struct UDatasmithStaticMeshIFCImportData : UDatasmithStaticMeshImportData {
	FString SourceGlobalId; // 0x28
};

struct UCoherentUIGTWidget : UWidget {
	AActor* Owner; // 0x120
	FMulticastInlineDelegate ReadyForBindings; // 0x128
	FMulticastInlineDelegate BindingsReleased; // 0x138
	FMulticastInlineDelegate FinishLoad; // 0x148
	FMulticastInlineDelegate FailLoad; // 0x158
	FMulticastInlineDelegate StartLoading; // 0x168
	FMulticastInlineDelegate NavigateTo; // 0x178
	FMulticastInlineDelegate JavaScriptEvent; // 0x188
	FMulticastInlineDelegate UIGTScriptingReady; // 0x198
	FMulticastInlineDelegate AkAudioEvent; // 0x1c0
	FMulticastInlineDelegate KeyUpDelegate; // 0x1d0
	FMulticastInlineDelegate KeyDownDelegate; // 0x1e0
	FMulticastInlineDelegate MouseEventDelegate; // 0x1f0
	TextureFilter Filter; // 0x200
	bool bReceiveInput; // 0x201
	ECoherentUIGTInputPropagationBehaviour InputPropagationBehaviour; // 0x202
	bool bReceiveInputWhenTransparent; // 0x203
	bool bGammaCorrectedMaterial; // 0x204
	float TickPeriodInMinimizedGame; // 0x208
	bool AllowPerformanceWarnings; // 0x20c
	float ExecuteJSTimersThresholdMs; // 0x210
	float UpdateStylesAndLayoutThresholdMs; // 0x214
	float RecordRenderingCommandsThresholdMs; // 0x218
	float PaintWarningThresholdMs; // 0x21c
	int32_t LayersCountThreshold; // 0x220
	int32_t LayerWidthThreshold; // 0x224
	int32_t LayerHeightThreshold; // 0x228
	bool bEnableAdditionalDefaultStyles; // 0x22c
	UCoherentUIGTAudioWrapper* AudioWrapper; // 0x2d0
	FString URL; // 0x358
	float ClickThroughAlphaThreshold; // 0x368
	bool OffscreenCanvasRendering; // 0x36c
	bool Transparent; // 0x36d
};

struct UUW-ReplayEventMarkerBasic_C : UBravoHotelReplayTimelineEventMarker {
	FPointerToUberGraphFrame UberGraphFrame; // 0x290
	UBorder* MarkerBorder; // 0x298
};

struct UChannel : UMKChannelEx {
	UNetConnection* Connection; // 0x38
};

struct UParticleModuleSourceMovement : UParticleModuleLocationBase {
	FRawDistributionVector SourceMovementScale; // 0x30
};

struct URealRepGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode {
	AActor* LastViewer; // 0x50
	AActor* LastViewTarget; // 0x58
};

struct UUW-CompassWidget_Item_Resuscitation_C : UUserWidget {
	UWidgetAnimation* NewAnimation; // 0x248
	UImage* Icon; // 0x250
	UImage* ImageLine; // 0x258
	UImage* Img_Color; // 0x260
};

struct UARPin : UObject {
	UARTrackedGeometry* TrackedGeometry; // 0x28
	USceneComponent* PinnedComponent; // 0x30
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	FMulticastInlineDelegate OnARTrackingStateChanged; // 0xc0
	FMulticastInlineDelegate OnARTransformUpdated; // 0xd0
};

struct AMatineeActorCameraAnim : AMatineeActor {
	UCameraAnim* CameraAnim; // 0x3d0
};

struct UDistributionFloatConstantCurve : UDistributionFloat {
	FInterpCurveFloat ConstantCurve; // 0x38
};

struct UBTDecorator_ConeCheck : UBTDecorator {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector ConeDirection; // 0x98
	FBlackboardKeySelector Observed; // 0xc0
};

struct UOnlinePIESettings : UDeveloperSettings {
	bool bOnlinePIEEnabled; // 0x38
	TArray<FPIELoginSettingsInternal> Logins; // 0x40
};

struct UBravoHotelVehicleSeatComponent : UBoxComponent {
	FName SeatSocketName; // 0x4d8
	bool bIsForDriver; // 0x4e0
	int32_t Index; // 0x4e4
	ABravoHotelCharacter* Occupant; // 0x4e8
	TArray<UBravoHotelVehicleSeatComponent*> SortedSeats; // 0x4f0
	UBravoHotelVehicleSeatCollisionComponent* OccupantCollision; // 0x500
	FMulticastInlineDelegate OnOccupantEntered; // 0x508
	FMulticastInlineDelegate OnOccupantExited; // 0x518
	UVehicleSeatData* Data; // 0x528
	float ExitSideWeight; // 0x534
	float ExitDistanceFromSeatBound; // 0x538
};

struct UAnimationAsset : UObject {
	TArray<UAssetUserData*> AssetUserData; // 0x38
	TArray<UAnimMetaData*> MetaData; // 0x48
	USkeleton* Skeleton; // 0x80
};

struct UInputKeySelector : UWidget {
	FButtonStyle WidgetStyle; // 0x108
	FTextBlockStyle TextStyle; // 0x380
	FInputChord SelectedKey; // 0x5e8
	FSlateFontInfo Font; // 0x608
	FMargin Margin; // 0x658
	FLinearColor ColorAndOpacity; // 0x668
	FText KeySelectionText; // 0x678
	FText NoKeySpecifiedText; // 0x690
	bool bAllowModifierKeys; // 0x6a8
	bool bAllowGamepadKeys; // 0x6a9
	TArray<FKey> EscapeKeys; // 0x6b0
	FMulticastInlineDelegate OnKeySelected; // 0x6c0
	FMulticastInlineDelegate OnIsSelectingKeyChanged; // 0x6d0
};

struct UNiagaraEmitter : UObject {
	bool bLocalSpace; // 0x28
	bool bDeterminism; // 0x29
	int32_t RandomSeed; // 0x2c
	EParticleAllocationMode AllocationMode; // 0x30
	int32_t PreAllocationCount; // 0x34
	FNiagaraEmitterScriptProperties UpdateScriptProps; // 0x38
	FNiagaraEmitterScriptProperties SpawnScriptProps; // 0x60
	FNiagaraEmitterScriptProperties EmitterSpawnScriptProps; // 0x88
	FNiagaraEmitterScriptProperties EmitterUpdateScriptProps; // 0xb0
	ENiagaraSimTarget SimTarget; // 0xd8
	FBox FixedBounds; // 0xdc
	int32_t MinDetailLevel; // 0xf8
	int32_t MaxDetailLevel; // 0xfc
	FNiagaraDetailsLevelScaleOverrides GlobalSpawnCountScaleOverrides; // 0x100
	FNiagaraPlatformSet Platforms; // 0x118
	FNiagaraEmitterScalabilityOverrides ScalabilityOverrides; // 0x138
	char bInterpolatedSpawning : 1; // 0x148
	char bFixedBounds : 1; // 0x148
	char bUseMinDetailLevel : 1; // 0x148
	char bUseMaxDetailLevel : 1; // 0x148
	char bOverrideGlobalSpawnCountScale : 1; // 0x148
	char bRequiresPersistentIDs : 1; // 0x148
	float MaxDeltaTimePerTick; // 0x14c
	uint32_t DefaultShaderStageIndex; // 0x150
	uint32_t MaxUpdateIterations; // 0x154
	TSet<uint32_t> SpawnStages; // 0x158
	char bSimulationStagesEnabled : 1; // 0x1a8
	char bDeprecatedShaderStagesEnabled : 1; // 0x1a8
	char bLimitDeltaTime : 1; // 0x1a8
	FString UniqueEmitterName; // 0x1b0
	TArray<UNiagaraRendererProperties*> RendererProperties; // 0x1c0
	TArray<FNiagaraEventScriptProperties> EventHandlerScriptProps; // 0x1d0
	TArray<UNiagaraSimulationStageBase*> SimulationStages; // 0x1e0
	UNiagaraScript* GPUComputeScript; // 0x1f0
	TArray<FName> SharedEventGeneratorIds; // 0x1f8
};

struct UPhysicsThrusterComponent : USceneComponent {
	float ThrustStrength; // 0x230
};

struct ALevelScriptActor : AActor {
	char bInputEnabled : 1; // 0x328
};

struct UUW-InteractionWidget_WeaponPerkSlot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_350; // 0x250
	UImage* Image_585; // 0x258
	UImage* Image_Grade_Color_Line; // 0x260
};

struct ABP_SPS_WidgetActor_C : ABravoHotelSmartPingActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x5d8
	UWidgetComponent* Widget_Screen; // 0x5e0
	UWidgetComponent* Widget_World; // 0x5e8
	USceneComponent* DefaultSceneRoot; // 0x5f0
	UWBP_SPS_Icon_C* SmartPingWidget_World; // 0x5f8
	FTimerHandle DeactivateTimer; // 0x600
	USmartPingSystem_C* SmartPingComponent; // 0x608
	FVector ScreenToWorldLocation; // 0x610
	float ScreenRotation; // 0x61c
	UAudioComponent* HoldSound; // 0x620
	FTimerHandle PhaseTimer; // 0x628
	UTemp_C* TempWidget; // 0x630
	int32_t PingIndex; // 0x638
	FBravoHotelPingInfo SaveTempPingInfo; // 0x640
	ALine_WidgetActor_C* LineActor; // 0x678
	UWBP_SPS_Icon_C* SmartPingWidget_Screen; // 0x680
	bool EnableShow; // 0x688
};

struct UUW-PlayerMarkerWidget_C : UBravoHotelPlayerMarkerWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_OnShow; // 0x250
	UCanvasPanel* Canvas_Move; // 0x258
	UIconImage_C* IconImage; // 0x260
	UOverlay* Overlay_1; // 0x268
	UImage* PlayerMarker; // 0x270
	USizeBox* SizeBox_IconImage; // 0x278
	UTextBlock* TeamIndex; // 0x280
	UUW-CompassWidget_Item_Resuscitation_C* UW-CompassWidget_Item_Resuscitation; // 0x288
	UWidgetSwitcher* WidgetSwitcher_Icon; // 0x290
	bool IsShowingAnimReserved; // 0x298
	FMulticastInlineDelegate OnMarkerClicked; // 0x2a0
	UImage* CurrentMarker; // 0x2b0
	TMap<EPingType, UObject*> Map_PingTypeTexture; // 0x2b8
	TMap<EItemPingIconType, UObject*> Map_PingItemTypeTexture; // 0x308
	UObject* SupplyBoxNotOpen; // 0x358
	UObject* SupplyBoxOpened; // 0x360
	ABravoHotelPlayerState* PlayerState; // 0x368
	bool IsOnMap; // 0x370
	bool Selected; // 0x371
	bool MyPing; // 0x372
	FMulticastInlineDelegate OnMouseUp; // 0x378
};

struct UMovieSceneMaterialTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UUW-Lobby_WeaponInfo_Stat_C : UUserWidget {
	UImage* Image; // 0x248
	UImage* Image_2; // 0x250
	UImage* Image_3; // 0x258
	UImage* Image_4; // 0x260
	UImage* Image_5; // 0x268
	UImage* Image_6; // 0x270
	UImage* Image_7; // 0x278
	UImage* Image_8; // 0x280
	UImage* Image_9; // 0x288
	UImage* Image_106; // 0x290
	UTextBlock* T_Accuracy; // 0x298
	UTextBlock* T_EffectiveRange; // 0x2a0
	UTextBlock* T_FireRate; // 0x2a8
	UTextBlock* T_MagSize; // 0x2b0
	UTextBlock* T_Power; // 0x2b8
};

struct UMaterialExpressionTangent : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UMaterialExpressionVectorNoise : UMaterialExpression {
	FExpressionInput Position; // 0x40
	EVectorNoiseFunction NoiseFunction; // 0x54
	int32_t Quality; // 0x58
	char bTiling : 1; // 0x5c
	uint32_t TileSize; // 0x60
};

struct UInterpTrackLinearColorBase : UInterpTrack {
	FInterpCurveLinearColor LinearColorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UParticleSystem : UFXSystemAsset {
	float UpdateTime_FPS; // 0x30
	float UpdateTime_Delta; // 0x34
	float WarmupTime; // 0x38
	float WarmupTickRate; // 0x3c
	TArray<UParticleEmitter*> Emitters; // 0x40
	UParticleSystemComponent* PreviewComponent; // 0x50
	UInterpCurveEdSetup* CurveEdSetup; // 0x58
	float LODDistanceCheckTime; // 0x60
	float MacroUVRadius; // 0x64
	TArray<float> LODDistances; // 0x68
	TArray<FParticleSystemLOD> LODSettings; // 0x78
	FBox FixedRelativeBoundingBox; // 0x88
	float SecondsBeforeInactive; // 0xa4
	float Delay; // 0xa8
	float DelayLow; // 0xac
	char bOrientZAxisTowardCamera : 1; // 0xb0
	char bUseFixedRelativeBoundingBox : 1; // 0xb0
	char bShouldResetPeakCounts : 1; // 0xb0
	char bHasPhysics : 1; // 0xb0
	char bUseRealtimeThumbnail : 1; // 0xb0
	char ThumbnailImageOutOfDate : 1; // 0xb0
	char bUseDelayRange : 1; // 0xb1
	char bAllowManagedTicking : 1; // 0xb1
	char bAutoDeactivate : 1; // 0xb1
	char bRegenerateLODDuplicate : 1; // 0xb1
	EParticleSystemUpdateMode SystemUpdateMode; // 0xb2
	ParticleSystemLODMethod LODMethod; // 0xb3
	EParticleSystemInsignificanceReaction InsignificantReaction; // 0xb4
	EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod; // 0xb5
	EParticleSignificanceLevel MaxSignificanceLevel; // 0xb7
	uint32_t MinTimeBetweenTicks; // 0xb8
	float InsignificanceDelay; // 0xbc
	FVector MacroUVPosition; // 0xc0
	FBox CustomOcclusionBounds; // 0xcc
	TArray<FLODSoloTrack> SoloTracking; // 0xe8
	TArray<FNamedEmitterMaterial> NamedMaterialSlots; // 0xf8
};

struct UStandinProxyContainer : UObject {
	TArray<FStandinProxyEntry> Standins; // 0x28
};

struct UUniformGridPanel : UPanelWidget {
	FMargin SlotPadding; // 0x120
	float MinDesiredSlotWidth; // 0x130
	float MinDesiredSlotHeight; // 0x134
};

struct UARSaveWorldAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UUW-BlackMarket_Slot_Weapon_C : UUW-BlackMarket_Slot_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UButton* BTN-Menu02; // 0x3e0
	UButton* BTN-Menu03; // 0x3e8
	UButton* BTN-Menu04; // 0x3f0
	UButton* BTN-Menu05; // 0x3f8
	UButton* BTN-Menu06; // 0x400
	UButton* BTN-Menu07; // 0x408
	UButton* BTN-Menu08; // 0x410
	UButton* BTN-Menu09; // 0x418
	UButton* BTN-Menu10; // 0x420
	UButton* BTN-Menu11; // 0x428
	UCanvasPanel* CP-SlotInfo; // 0x430
	UImage* IMG-BG; // 0x438
	UImage* IMG-BG-Border; // 0x440
	UImage* IMG-Item; // 0x448
	UImage* IMG-Mask; // 0x450
	UImage* IMG-Over; // 0x458
	UImage* IMG-Over-Border; // 0x460
	UOverlay* Menu02; // 0x468
	UOverlay* Menu03; // 0x470
	UOverlay* Menu04; // 0x478
	UOverlay* Menu05; // 0x480
	UOverlay* Menu06; // 0x488
	UOverlay* Menu07; // 0x490
	UOverlay* Menu08; // 0x498
	UOverlay* Menu09; // 0x4a0
	UOverlay* Menu10; // 0x4a8
	UOverlay* Menu11; // 0x4b0
	UOverlay* Overlay_Mask; // 0x4b8
	UTextBlock* TXT-Ammo; // 0x4c0
	UTextBlock* TXT-Damage; // 0x4c8
	UTextBlock* TXT-FireMode; // 0x4d0
	UTextBlock* TXT-FireRate; // 0x4d8
	UTextBlock* TXT-ItemName; // 0x4e0
	UTextBlock* TXT-MagSize; // 0x4e8
	UTextBlock* TXT-Menu01; // 0x4f0
	UTextBlock* TXT-Menu02; // 0x4f8
	UTextBlock* TXT-Menu03; // 0x500
	UTextBlock* TXT-Menu04; // 0x508
	UTextBlock* TXT-Menu05; // 0x510
	UTextBlock* TXT-Menu06; // 0x518
	UTextBlock* TXT-Menu07; // 0x520
	UTextBlock* TXT-Menu08; // 0x528
	UTextBlock* TXT-Menu09; // 0x530
	UTextBlock* TXT-Menu10; // 0x538
	UTextBlock* TXT-Menu11; // 0x540
	UTextBlock* TXT-MoveSpeed; // 0x548
	UTextBlock* TXT-ProjectileVelocity; // 0x550
	UTextBlock* TXT-ReloadTime; // 0x558
	UTextBlock* TXT-Weight; // 0x560
};

struct UMaterialInstanceConstant : UMaterialInstance {
	UPhysicalMaterialMask* PhysMaterialMask; // 0x408
};

struct USoundSubmixWithParentBase : USoundSubmixBase {
	USoundSubmixBase* ParentSubmix; // 0x38
};

struct AWorldSettings : AInfo {
	int32_t VisibilityCellSize; // 0x330
	EVisibilityAggressiveness VisibilityAggressiveness; // 0x334
	char bPrecomputeVisibility : 1; // 0x335
	char bPlaceCellsOnlyAlongCameraTracks : 1; // 0x335
	char bEnableWorldBoundsChecks : 1; // 0x335
	char bEnableNavigationSystem : 1; // 0x335
	char bEnableAISystem : 1; // 0x335
	char bEnableWorldComposition : 1; // 0x335
	char bUseClientSideLevelStreamingVolumes : 1; // 0x335
	char bEnableWorldOriginRebasing : 1; // 0x335
	char bWorldGravitySet : 1; // 0x336
	char bGlobalGravitySet : 1; // 0x336
	char bMinimizeBSPSections : 1; // 0x336
	char bForceNoPrecomputedLighting : 1; // 0x336
	char bHighPriorityLoading : 1; // 0x336
	char bHighPriorityLoadingLocal : 1; // 0x336
	char bOverrideDefaultBroadphaseSettings : 1; // 0x336
	UNavigationSystemConfig* NavigationSystemConfig; // 0x338
	UNavigationSystemConfig* NavigationSystemConfigOverride; // 0x340
	float WorldToMeters; // 0x348
	float KillZ; // 0x34c
	UDamageType* KillZDamageType; // 0x350
	float WorldGravityZ; // 0x358
	float GlobalGravityZ; // 0x35c
	ADefaultPhysicsVolume* DefaultPhysicsVolumeClass; // 0x360
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x368
	AGameModeBase* DefaultGameMode; // 0x370
	AGameNetworkManager* GameNetworkManagerClass; // 0x378
	int32_t PackedLightAndShadowMapTextureSize; // 0x380
	FVector DefaultColorScale; // 0x384
	float DefaultMaxDistanceFieldOcclusionDistance; // 0x390
	float GlobalDistanceFieldViewDistance; // 0x394
	float DynamicIndirectShadowsSelfShadowingIntensity; // 0x398
	FReverbSettings DefaultReverbSettings; // 0x3a0
	FInteriorSettings DefaultAmbientZoneSettings; // 0x3c0
	float MonoCullingDistance; // 0x3e4
	USoundMix* DefaultBaseSoundMix; // 0x3e8
	float TimeDilation; // 0x3f0
	float MatineeTimeDilation; // 0x3f4
	float DemoPlayTimeDilation; // 0x3f8
	float MinGlobalTimeDilation; // 0x3fc
	float MaxGlobalTimeDilation; // 0x400
	float MinUndilatedFrameTime; // 0x404
	float MaxUndilatedFrameTime; // 0x408
	FBroadphaseSettings BroadphaseSettings; // 0x40c
	APlayerState* Pauser; // 0x450
	TArray<FNetViewer> ReplicationViewers; // 0x458
	TArray<UAssetUserData*> AssetUserData; // 0x468
	APlayerState* PauserPlayerState; // 0x478
	int32_t MaxNumberOfBookmarks; // 0x480
	UBookmarkBase* DefaultBookmarkClass; // 0x488
	TArray<UBookmarkBase*> BookmarkArray; // 0x490
	UBookmarkBase* LastBookmarkClass; // 0x4a0
	bool bUseInstancedStaticCollision; // 0x4a8
};

struct UGizmoAxisScaleParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float ScaleMultiplier; // 0x68
	float Parameter; // 0x6c
	FGizmoFloatParameterChange LastChange; // 0x70
	FVector CurScaleAxis; // 0x78
	FVector CurScaleOrigin; // 0x84
	FTransform InitialTransform; // 0x90
};

struct UGameInstance : UMKGameInstanceEx {
	TArray<ULocalPlayer*> LocalPlayers; // 0xb8
	UOnlineSession* OnlineSession; // 0xc8
	TArray<UObject*> ReferencedObjects; // 0xd0
};

struct UWorldTileLODSetup : UObject {
	int32_t NumLOD; // 0x28
	FTileLODEntry LOD1; // 0x2c
	FTileLODEntry LOD2; // 0x168
	FTileLODEntry LOD3; // 0x2a4
	FTileLODEntry LOD4; // 0x3e0
};

struct UPawnAction_Sequence : UPawnAction {
	TArray<UPawnAction*> ActionSequence; // 0x98
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
	UPawnAction* RecentActionCopy; // 0xb0
};

struct USoundNodeDialoguePlayer : USoundNode {
	FDialogueWaveParameter DialogueWaveParameter; // 0x48
	char bLooping : 1; // 0x68
};

struct UClothPhysicalMeshDataNv_Legacy : UClothPhysicalMeshDataBase_Legacy {
	TArray<float> MaxDistances; // 0xe0
	TArray<float> BackstopDistances; // 0xf0
	TArray<float> BackstopRadiuses; // 0x100
	TArray<float> AnimDriveMultipliers; // 0x110
};

struct UFSM_SetStateID_ConditionalAsyncWithCallbacks : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	FSM_Transition Conditional; // 0x38
	FDelegate InBegin; // 0x3c
	FDelegate InExit; // 0x4c
	char StateID; // 0x5c
	float Timer; // 0x60
	bool Repeat; // 0x64
	FTimerHandle TimerHandle; // 0x68
	FMulticastInlineDelegate OnSuccess; // 0x70
	FMulticastInlineDelegate OnAborted; // 0x80
};

struct UUW-TeamPositionWidget_C : UBravoHotelTeamPositionWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x290
	UWidgetAnimation* Anim_Bouncing; // 0x298
	UCanvasPanel* CanvasRequestResuscitation; // 0x2a0
	UImage* CriticalGuage; // 0x2a8
	UImage* DyingGuage; // 0x2b0
	UImage* Img_StateDeath; // 0x2b8
	UImage* Img_StateDisconnect; // 0x2c0
	UImage* Img_StateParachute; // 0x2c8
	UImage* Img_StateRevival; // 0x2d0
	UImage* Img_StateVehicle; // 0x2d8
	UImage* Img_TeamColor; // 0x2e0
	UProgressBar* KnockDownBar; // 0x2e8
	UTextBlock* MoveParameter; // 0x2f0
	UImage* RevivingGuage; // 0x2f8
	UWidgetSwitcher* Switcher_Guage; // 0x300
	UWidgetSwitcher* Switcher_Icon; // 0x308
	UTextBlock* TextBlock_Name; // 0x310
	UTextBlock* TextBlock_PlayerIndex; // 0x318
	FTimerHandle RevivingTimerHandle; // 0x320
	float TotalRevivingTime; // 0x328
	float CurrentRevivingTime; // 0x32c
	bool IsRequestResuscitation; // 0x330
};

struct UMaterialExpressionConstant : UMaterialExpression {
	float R; // 0x40
};

struct UMockDataMeshTrackerComponent : USceneComponent {
	FMulticastInlineDelegate OnMeshTrackerUpdated; // 0x230
	bool ScanWorld; // 0x240
	bool RequestNormals; // 0x241
	bool RequestVertexConfidence; // 0x242
	EMeshTrackerVertexColorMode VertexColorMode; // 0x243
	TArray<FColor> BlockVertexColors; // 0x248
	FLinearColor VertexColorFromConfidenceZero; // 0x258
	FLinearColor VertexColorFromConfidenceOne; // 0x268
	float UpdateInterval; // 0x278
	UMRMeshComponent* MRMesh; // 0x280
};

struct UUserInterfaceSettings : UDeveloperSettings {
	ERenderFocusRule RenderFocusRule; // 0x38
	TMap<EMouseCursor, FHardwareCursorReference> HardwareCursors; // 0x40
	TMap<EMouseCursor, FSoftClassPath> SoftwareCursors; // 0x90
	FSoftClassPath DefaultCursor; // 0xe0
	FSoftClassPath TextEditBeamCursor; // 0xf8
	FSoftClassPath CrosshairsCursor; // 0x110
	FSoftClassPath HandCursor; // 0x128
	FSoftClassPath GrabHandCursor; // 0x140
	FSoftClassPath GrabHandClosedCursor; // 0x158
	FSoftClassPath SlashedCircleCursor; // 0x170
	float ApplicationScale; // 0x188
	EUIScalingRule UIScaleRule; // 0x18c
	FSoftClassPath CustomScalingRuleClass; // 0x190
	FRuntimeFloatCurve UIScaleCurve; // 0x1a8
	bool bAllowHighDPIInGameMode; // 0x230
	bool bLoadWidgetsOnDedicatedServer; // 0x231
	TArray<UObject*> CursorClasses; // 0x238
	UObject* CustomScalingRuleClassInstance; // 0x248
	UDPICustomScalingRule* CustomScalingRule; // 0x250
};

struct UUW-Inventory_KeepedSlot_C : UUW-Inventory_SlotBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1360
	USizeBox* Abillity; // 0x1368
	UImage* AbillityBG; // 0x1370
	UTextBlock* AbillityValue; // 0x1378
	UImage* Bg; // 0x1380
	UImage* BorderBG; // 0x1388
	UImage* ChoiceBG; // 0x1390
	UImage* DefenseBG; // 0x1398
	UProgressBar* DurabilityBar; // 0x13a0
	UImage* EmptyBG; // 0x13a8
	UImage* ItemImage; // 0x13b0
	UImage* OverBG; // 0x13b8
	EWearableItemType WearableItemType; // 0x13c0
	bool IsDefense; // 0x13c1
	UUW-Inventory_ItemSlotHover_C* HoverWidget; // 0x13c8
	UUserWidget* HoverOwnerWidget; // 0x13d0
	int32_t Index; // 0x13d8
};

struct UAssetManagerSettings : UDeveloperSettings {
	TArray<FPrimaryAssetTypeInfo> PrimaryAssetTypesToScan; // 0x38
	TArray<FDirectoryPath> DirectoriesToExclude; // 0x48
	TArray<FPrimaryAssetRulesOverride> PrimaryAssetRules; // 0x58
	TArray<FPrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules; // 0x68
	bool bOnlyCookProductionAssets; // 0x78
	bool bShouldManagerDetermineTypeAndName; // 0x79
	bool bShouldGuessTypeAndNameInEditor; // 0x7a
	bool bShouldAcquireMissingChunksOnLoad; // 0x7b
	TArray<FAssetManagerRedirect> PrimaryAssetIdRedirects; // 0x80
	TArray<FAssetManagerRedirect> PrimaryAssetTypeRedirects; // 0x90
	TArray<FAssetManagerRedirect> AssetPathRedirects; // 0xa0
	TSet<FName> MetaDataTagsForAssetRegistry; // 0xb0
	bool bUsePathExcludedFromScan; // 0x100
	bool bRemoveRedundantDirectroyChunks; // 0x101
};

struct UGameplayTagsSettings : UGameplayTagsList {
	bool ImportTagsFromConfig; // 0x48
	bool WarnOnInvalidTags; // 0x49
	bool FastReplication; // 0x4a
	FString InvalidTagCharacters; // 0x50
	TArray<FGameplayTagCategoryRemap> CategoryRemapping; // 0x60
	TArray<FSoftObjectPath> GameplayTagTableList; // 0x70
	TArray<FGameplayTagRedirect> GameplayTagRedirects; // 0x80
	TArray<FName> CommonlyReplicatedTags; // 0x90
	int32_t NumBitsForContainerSize; // 0xa0
	int32_t NetIndexFirstBitSegment; // 0xa4
	TArray<FRestrictedConfigInfo> RestrictedConfigFiles; // 0xa8
};

struct UBravoHotelConfirmPopupWidget : UUserWidget {
	UUserWidget* ParantWidget; // 0x248
};

struct UNoiseField : UFieldNodeFloat {
	float MinRange; // 0xb0
	float MaxRange; // 0xb4
	FTransform Transform; // 0xc0
};

struct UAnimNotify_PlayNiagaraEffect : UAnimNotify {
	UNiagaraSystem* Template; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct UStateMachineComponent : UActorComponent {
	FSM_ExitEvent FSM_ExitArguments; // 0xb8
	FSM_BeginEvent FSM_BeginArguments; // 0xc4
	FSM_UpdateEvent FSM_UpdateArguments; // 0xd0
	bool IsOverriden; // 0xe0
	bool IsFullyInitialized; // 0xe1
	char StateID; // 0xe2
	char PreviousStateID; // 0xe3
	float StateTime; // 0xe4
	FSM_State STATE_Null; // 0xe8
	TMap<char, FSM_State> State; // 0x128
	FDelegate InBegin; // 0x178
	FDelegate InUpdate; // 0x188
	FDelegate InExit; // 0x198
	FName StartupState; // 0x1a8
	TArray<FName> States; // 0x1b0
	TMap<FName, FSM_Link> LINKS; // 0x1c0
	bool UseEnumFromCPP; // 0x210
	FString CPP_EnumName; // 0x218
	UEnum* K2_Enumerator; // 0x228
	ELifetimeCondition ReplicationMode; // 0x230
	bool BlueprintAutoFlowFSM; // 0x231
	bool BlueprintAutoFlowTransitions; // 0x232
	bool AlwaysTickFSM; // 0x233
	bool ReplicateStateID; // 0x234
	bool ReplicatePreviousStateID; // 0x235
	bool ReplicateStateTime; // 0x236
	bool Debug; // 0x237
	FMulticastInlineDelegate OnInitialized; // 0x238
	FMulticastInlineDelegate OnBegin; // 0x248
	FMulticastInlineDelegate OnUpdate; // 0x258
	FMulticastInlineDelegate OnExit; // 0x268
};

struct ABravoHotelCoherentTestHUD : ABravoHotelBaseHUD {
	UUserWidget* MyWidgetClass; // 0x430
	FMulticastInlineDelegate ChangeCloseInvenDelegate; // 0x448
	FMulticastInlineDelegate ChangeWeaponDelegate; // 0x458
	FMulticastInlineDelegate SendTriggerDelegate; // 0x468
};

struct UUW-ListWidget_KillMessage_C : UUW-ListWidget_ItemBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Anim_Down; // 0x268
	UCanvasPanel* CanvasPanel_Main; // 0x270
	UImage* Img_Back; // 0x278
	UImage* Img_BroadType; // 0x280
	UImage* Img_DamegeType; // 0x288
	UImage* Img_Weapon; // 0x290
	UScaleBox* ScaleBox_Weapon; // 0x298
	USizeBox* SizeBox_BroadType; // 0x2a0
	USizeBox* SizeBox_DamageType; // 0x2a8
	USizeBox* SizeBox_HeadShot; // 0x2b0
	UTextBlock* T_Context; // 0x2b8
	UUW-ListWidget_KillMessage_Item_C* UW-DiedInfoWidget; // 0x2c0
	UUW-ListWidget_KillMessage_Item_C* UW-KillerInfoWidget; // 0x2c8
	TMap<EBroadCastKillMessageType, UPaperSprite*> BroadcastDamageType; // 0x2d0
	FSlateColor MyTeamColor; // 0x320
	FSlateColor MyTeamKnockOutColor; // 0x348
	FSlateColor EnermyTeamColor; // 0x370
	FSlateColor EnermyTeamKnockOutColor; // 0x398
	FSlateColor DefaultColor; // 0x3c0
	FSlateColor DefaultKnockColor; // 0x3e8
	FSlateColor ResuscatedColor; // 0x410
	FSlateColor CurrentInfoColor; // 0x438
};

struct UInterpTrackInstAkAudioEvent : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UMovieSceneSubSection : UMovieSceneSection {
	FMovieSceneSectionParameters Parameters; // 0xe0
	float StartOffset; // 0x104
	float TimeScale; // 0x108
	float PrerollTime; // 0x10c
	UMovieSceneSequence* SubSequence; // 0x110
	LazyObjectProperty ActorToRecord; // 0x118
	FString TargetSequenceName; // 0x138
	FDirectoryPath TargetPathToRecordTo; // 0x148
};

struct UParticleModuleLifetime : UParticleModuleLifetimeBase {
	FRawDistributionFloat LifeTime; // 0x30
};

struct UNavigationSystemModuleConfig : UNavigationSystemConfig {
	char bStrictlyStatic : 1; // 0x50
	char bCreateOnClient : 1; // 0x50
	char bAutoSpawnMissingNavData : 1; // 0x50
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x50
};

struct ANavSystemConfigOverride : AActor {
	UNavigationSystemConfig* NavigationSystemConfig; // 0x328
	ENavSystemOverridePolicy OverridePolicy; // 0x330
	char bLoadOnClient : 1; // 0x331
};

struct ALevelVariantSetsActor : AActor {
	FSoftObjectPath LevelVariantSets; // 0x328
};

struct UChat_MainWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UEditableTextBox* Chat Input; // 0x250
	UWidgetSwitcher* Chat Switcher; // 0x258
	UScrollBox* Tab Scrollbox; // 0x260
	UCanvasPanel* Whole Widget Container; // 0x268
	AChat_System_C* Chat System; // 0x270
	UChat_DialogBox_C* CurrentDialogBox; // 0x278
	float Chat Inactivity Hide Delay; // 0x280
	bool Faded?; // 0x284
	bool Was Previously Faded?; // 0x285
	bool Use Autohide?; // 0x286
	int32_t Message Character Limit; // 0x288
	FString Text Input - Inactive Hint Text; // 0x290
	FString Text Input - Active Hint Text; // 0x2a0
	int32_t # Messages to Keep; // 0x2b0
	int32_t Clear Messages at # Messages; // 0x2b4
	bool Show Mouse on Enter?; // 0x2b8
};

struct UBuildPatchManifest : UObject {
	char ManifestFileVersion; // 0x28
	bool bIsFileData; // 0x29
	uint32_t AppID; // 0x2c
	FString AppName; // 0x30
	FString BuildVersion; // 0x40
	FString LaunchExe; // 0x50
	FString LaunchCommand; // 0x60
	TSet<FString> PrereqIds; // 0x70
	FString PrereqName; // 0xc0
	FString PrereqPath; // 0xd0
	FString PrereqArgs; // 0xe0
	TArray<FFileManifestData> FileManifestList; // 0xf0
	TArray<FChunkInfoData> ChunkList; // 0x100
	TArray<FCustomFieldData> CustomFields; // 0x110
};

struct UEditableTextWidgetStyle : USlateWidgetStyleContainerBase {
	FEditableTextStyle EditableTextStyle; // 0x30
};

struct ULowEntryLatentActionBoolean : UObject {
	bool Finished; // 0x28
	bool Result; // 0x29
	int32_t KeepAliveCount; // 0x2c
};

struct UInterpTrackVectorBase : UInterpTrack {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UPostProcessComponent : USceneComponent {
	FPostProcessSettings Settings; // 0x240
	float Priority; // 0x800
	float BlendRadius; // 0x804
	float BlendWeight; // 0x808
	char bEnabled : 1; // 0x80c
	char bUnbound : 1; // 0x80c
};

struct UUW-Lobby_Craft_Recipe_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UCanvasPanel* Canvas_Recipe1; // 0x250
	UCanvasPanel* Canvas_Recipe2; // 0x258
	UUW-Lobby_Craft_Recipe_Weapon_C* UW-Lobby_Craft_Recipe_Weapon; // 0x260
	UUW-Lobby_Craft_Recipe_Item_C* UW-Lobby_Weapon_Recipe_Item_2; // 0x268
	UUW-Lobby_Craft_Recipe_Item_C* UW-Lobby_Weapon_Recipe_Item_3; // 0x270
	UUW-Lobby_Craft_Recipe_Item_C* UW-Lobby_Weapon_Recipe_Item_4; // 0x278
	UUW-Lobby_Craft_Recipe_Item_C* UW-Lobby_Weapon_Recipe_Item_5; // 0x280
	UUW-Lobby_Craft_Recipe_Item_C* UW-Lobby_Weapon_Recipe_Item_6; // 0x288
	UUW-Lobby_Craft_Recipe_Item_C* UW-Lobby_Weapon_Recipe_Item_7; // 0x290
	UUW-Lobby_Craft_Recipe_Item_C* UW-Lobby_Weapon_Recipe_Item_8; // 0x298
	UUW-Lobby_Craft_Recipe_Item_C* UW-Lobby_Weapon_Recipe_Item_9; // 0x2a0
	UUW-Lobby_Craft_Recipe_Item_C* UW-Lobby_Weapon_Recipe_Item_10; // 0x2a8
	UUW-Lobby_Craft_Recipe_Item_C* UW-Lobby_Weapon_Recipe_Item_11; // 0x2b0
	UWidgetSwitcher* WidgetSwitcher_68; // 0x2b8
	TArray<UUW-Lobby_Craft_Recipe_Item_C*> Recipe_ItemArray; // 0x2c0
	TArray<UUW-Lobby_Craft_Recipe_Item_C*> Recipe_ItemArray2; // 0x2d0
	bool HasWeapon; // 0x2e0
	UUW-ArmoryInput_C* ArmoryInputRef; // 0x2e8
	float CurrentOpacity; // 0x2f0
};

struct UUW-ScenarioWidget_C : UBravoHotelScenarioWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Ani_TutorialComplete_FadeOut; // 0x250
	UWidgetAnimation* Ani_TutorialComplete; // 0x258
	UWidgetAnimation* Idle; // 0x260
	UCanvasPanel* CanvasPanel_1; // 0x268
	UUW-ScenarioQuest_C* UW-ScenarioQuest; // 0x270
};

struct ABravoHotelDoor : AActor {
	USceneComponent* RootNode; // 0x330
	USceneComponent* MoveNode; // 0x338
	UStaticMeshComponent* StaticMesh; // 0x340
	UBoxComponent* PlayerInteractiveBox; // 0x348
	UBoxComponent* PushBox; // 0x350
	UArrowComponent* ForwardArrow; // 0x358
	float InDoorNetCullDistanceSquared; // 0x360
	float OutDoorNetCullDistanceSquared; // 0x364
	UDestructibleComponent* DestructibleMesh; // 0x368
	UDestructibleMesh* DestructibleMeshTest; // 0x370
	TSoftObjectPtr<UDestructibleMesh> DestructibleMeshRef; // 0x378
	bool bIsDestructible; // 0x3a0
	float MaxHp; // 0x3a4
	float CurrentHP; // 0x3a8
	bool bIsMeshCreated; // 0x3ac
	char ChunkCount; // 0x3ad
	TArray<float> DestructPointStack; // 0x3b0
	TArray<FVector> DestructedPoint; // 0x3c0
	bool bOverrideMaterial; // 0x3d0
	UMaterialInterface* DestructibleMaterial; // 0x3d8
	FTimerHandle TimerHandle_DestroyComponents; // 0x3e0
	UCurveFloat* FadeAlphaCurve; // 0x3e8
	FTimeline FadeTimeline; // 0x3f0
	UMaterialInstanceDynamic* FadeMaterial; // 0x488
	EDoorState DoorState; // 0x490
	bool bIsOpenedFromFront; // 0x491
	UCurveFloat* OpenCurve; // 0x498
	UCurveFloat* CloseCurve; // 0x4a0
	FRotator DefaultDoorRotation; // 0x5dc
	UAkAudioEvent* AkSound_Open; // 0x660
	UAkAudioEvent* AkSound_StartClose; // 0x668
	UAkAudioEvent* AkSound_Melee; // 0x670
	UAkAudioEvent* AKSound_Kicked; // 0x678
	UAkAudioEvent* AKSound_Destructed; // 0x680
	EDoorSoundType DoorSoundType; // 0x688
	UBravoHotelAudioPortalComponent* AudioPortalComponent; // 0x690
	bool bKeepOpenAudioPortal; // 0x698
	UParticleSystem* KickedParticle; // 0x6a0
	UParticleSystemComponent* KickedParticleSystem; // 0x6a8
	float KickImpulseStrength; // 0x6b0
	TArray<ABravoHotelCharacter*> OverlappingPlayersInPushBox; // 0x6c8
	TMap<UBravoHotelDamageType*, float> DamageCorrectValues; // 0x700
};

struct UNiagaraComponent : UFXSystemComponent {
	UNiagaraSystem* Asset; // 0x4b0
	ENiagaraTickBehavior TickBehavior; // 0x4b8
	FNiagaraUserRedirectionParameterStore OverrideParameters; // 0x4c0
	char bForceSolo : 1; // 0x5c8
	char bAutoDestroy : 1; // 0x5f4
	char bRenderingEnabled : 1; // 0x5f4
	char bAutoManageAttachment : 1; // 0x5f4
	char bAutoAttachWeldSimulatedBodies : 1; // 0x5f4
	float MaxTimeBeforeForceUpdateTransform; // 0x5f8
	FMulticastInlineDelegate OnSystemFinished; // 0x600
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x610
	FName AutoAttachSocketName; // 0x618
	EAttachmentRule AutoAttachLocationRule; // 0x620
	EAttachmentRule AutoAttachRotationRule; // 0x621
	EAttachmentRule AutoAttachScaleRule; // 0x622
};

struct UShowLoginUICallbackProxy : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UBTTask_WaitBlackboardTime : UBTTask_Wait {
	FBlackboardKeySelector BlackboardKey; // 0x78
};

struct UUW-TeamInfoItemWidget_C : UBravoHotelTeamInfoSlotWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x308
	UWidgetAnimation* Anim_IconBouncing; // 0x310
	UWidgetAnimation* Progress_Stroke; // 0x318
	UWidgetAnimation* Shoot_ani; // 0x320
	UCanvasPanel* CanvasPanel_Main; // 0x328
	UImage* death; // 0x330
	UImage* Image_126; // 0x338
	UImage* Image_168; // 0x340
	UImage* Image_280; // 0x348
	UImage* Image_623; // 0x350
	UImage* Image_624; // 0x358
	UImage* Image_1058; // 0x360
	UImage* Image_Firing; // 0x368
	UImage* Image_Heart; // 0x370
	UImage* Image_Outline; // 0x378
	UImage* Image_TeamInfoClassIcon; // 0x380
	UImage* Img_LogOut; // 0x388
	UImage* Img_Voice; // 0x390
	UImage* Img_VoiceMute; // 0x398
	UInvalidationBox* InvalidationBox_1; // 0x3a0
	UOverlay* Overlay_447; // 0x3a8
	UOverlay* Overlay_Death; // 0x3b0
	UOverlay* Overlay_RemainGoldenTimeSelf; // 0x3b8
	UOverlay* Overlay_RequestResus; // 0x3c0
	UProgressBar* ProgressBar_440; // 0x3c8
	UProgressBar* ProgressBar_443; // 0x3d0
	USizeBox* SizeBox_132; // 0x3d8
	UProgressBar* StateGoldenTime; // 0x3e0
	UProgressBar* StateKnockdown; // 0x3e8
	UTextBlock* T_ClassName; // 0x3f0
	UTextBlock* T_ClassWeapon; // 0x3f8
	UTextBlock* T_PlayerIndex; // 0x400
	UTextBlock* T_PlayerName; // 0x408
	UImage* TeamColor; // 0x410
	UTextBlock* TextBlock_4; // 0x418
	UTextBlock* TextBlock_297; // 0x420
	UTextBlock* TextBlock_590; // 0x428
	UTextBlock* TextBlock_591; // 0x430
	UTextBlock* TextBlock_1016; // 0x438
	UTextBlock* TextBlock_RemainGoldenTimeSelf; // 0x440
	UTextBlock* TextBlock_RequestResus; // 0x448
	UTextBlock* TextBlock_Resuscitating; // 0x450
	UUW-RequestResuscitation_C* UW-RequestResuscitation; // 0x458
	UWidgetSwitcher* WidgetSwitcher_LogOut; // 0x460
	UWidgetSwitcher* WidgetSwitcher_Resuscitate; // 0x468
	int32_t Index; // 0x470
	EPlayerBehavior Behavior; // 0x474
	float hp; // 0x478
	FText Name; // 0x480
	TArray<FLinearColor> ColorList; // 0x498
	bool bPin; // 0x4a8
	float PrevHP; // 0x4ac
	bool bReduceHP; // 0x4b0
	FTimerHandle TimerHandleReduceHP; // 0x4b8
	bool bIncreaseHP; // 0x4c0
	UCurveFloat* HealthChangeCurve; // 0x4c8
	UCurveLinearColor* HealthDangerCurve; // 0x4d0
	FTimerHandle HealTimer; // 0x4d8
	FTimerHandle FaintTimer; // 0x4e0
	float BaseHealth; // 0x4e8
	float TargetHealth; // 0x4ec
	float HealthWeight; // 0x4f0
	float TargetFaint; // 0x4f4
	float BaseFaint; // 0x4f8
	float FaintWeight; // 0x4fc
	float CurrentHPPercent; // 0x500
	float HealHPPercent; // 0x504
	float FaintPercent; // 0x508
	float CurrentAlpha; // 0x50c
	float AlphaTimer; // 0x510
	UCurveFloat* AlphaCurve; // 0x518
	bool KnockDown; // 0x520
	float HeartBeat; // 0x524
	UPaperSprite* DisConnectSprite; // 0x528
	UPaperSprite* KnockDownSprite; // 0x530
	UPaperSprite* DeathSprite; // 0x538
	UPaperSprite* VehicleSprite; // 0x540
	FTimerHandle HpTimer; // 0x548
	float EndTime; // 0x550
	float StartTime; // 0x554
	float TotalTime; // 0x558
	float ResultValue; // 0x55c
	float AddTme; // 0x560
	float PreStart; // 0x564
};

struct ULandscapeSplineControlPoint : UObject {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	float Width; // 0x40
	float LayerWidthRatio; // 0x44
	float SideFalloff; // 0x48
	float LeftSideFalloffFactor; // 0x4c
	float RightSideFalloffFactor; // 0x50
	float LeftSideLayerFalloffFactor; // 0x54
	float RightSideLayerFalloffFactor; // 0x58
	float EndFalloff; // 0x5c
	TArray<FLandscapeSplineConnection> ConnectedSegments; // 0x60
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	UControlPointMeshComponent* LocalMeshComponent; // 0xa0
};

struct UNavLinkCustomComponent : UNavRelevantComponent {
	uint32_t NavLinkUserId; // 0xe8
	UNavArea* EnabledAreaClass; // 0xf0
	UNavArea* DisabledAreaClass; // 0xf8
	FNavAgentSelector SupportedAgents; // 0x100
	FVector LinkRelativeStart; // 0x104
	FVector LinkRelativeEnd; // 0x110
	ENavLinkDirection LinkDirection; // 0x11c
	char bLinkEnabled : 1; // 0x120
	char bNotifyWhenEnabled : 1; // 0x120
	char bNotifyWhenDisabled : 1; // 0x120
	char bCreateBoxObstacle : 1; // 0x120
	FVector ObstacleOffset; // 0x124
	FVector ObstacleExtent; // 0x130
	UNavArea* ObstacleAreaClass; // 0x140
	float BroadcastRadius; // 0x148
	float BroadcastInterval; // 0x14c
	ECollisionChannel BroadcastChannel; // 0x150
};

struct ABP-TransportAircraft_C : ATransportAircraftPawn {
	FPointerToUberGraphFrame UberGraphFrame; // 0x6e0
};

struct ULowEntryByteDataReader : UObject {
	TArray<char> Bytes; // 0x28
	int32_t Position; // 0x38
};

struct UAkMediaAssetData : UObject {
	bool IsStreamed; // 0x28
	bool UseDeviceMemory; // 0x29
};

struct UUW-ReportUserProgram_C : UBravoHotelReportUserProgramWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x278
	UButton* btn_Cancel; // 0x280
	UButton* btn_report; // 0x288
	UButton* Button_2; // 0x290
	UButton* Button_3; // 0x298
	UButton* Button_4; // 0x2a0
	UButton* Button_5; // 0x2a8
	UCheckBox* CheckBox_2; // 0x2b0
	UCheckBox* CheckBox_3; // 0x2b8
	UCheckBox* CheckBox_4; // 0x2c0
	UCheckBox* CheckBox_5; // 0x2c8
	UOverlay* combobox_button_overlay; // 0x2d0
	UComboBoxString* combobox_string; // 0x2d8
	UImage* Image; // 0x2e0
	UImage* Image_2; // 0x2e8
	UImage* Image_545; // 0x2f0
	UButton* NormalArrow; // 0x2f8
	UButton* OpeningArrow; // 0x300
	UImage* popup-bg; // 0x308
	UTextBlock* txt_description; // 0x310
	UTextBlock* txt_nickname; // 0x318
	UImage* uw-bg; // 0x320
	FText DescriptionText; // 0x328
	TArray<FText> ReportIndexText; // 0x340
	FText DefaultComboString; // 0x350
	int32_t CurrentSelectIndex; // 0x368
	bool CheckCloseComboArrow; // 0x36c
};

struct UBravoHotelGameSingleton : UObject {
	UBravoHotelNetworkManager* BravoHotelNetworkManager; // 0x28
	UBravoHotelItemSpawnStatisticManager* BravoHotelItemSpawnStatisticManager; // 0x30
	UBravoHotelDataManager* BravoHotelDataManager; // 0x128
	UBravoHotelReportDataManager* BravoHotelReportDataManager; // 0x130
	UBravoHotelOutGameDataManager* BravoHotelOutGameDataManager; // 0x138
	UBravoHotelQuestManager* BravoHotelQuestManager; // 0x140
	UBravoHotelAchievementManager* BravoHotelAchievementManager; // 0x148
	UBravoHotelAppAudioStateManager* BravoHotelAppAudioStateManager; // 0x158
	TMap<FString, UBravoHotelLocalSaveBase*> CachedLocalSaves; // 0x178
};

struct UMovieSceneFolder : UObject {
	FName FolderName; // 0x28
	TArray<UMovieSceneFolder*> ChildFolders; // 0x30
	TArray<UMovieSceneTrack*> ChildMasterTracks; // 0x40
	TArray<FString> ChildObjectBindingStrings; // 0x50
};

struct USoundNodeParamCrossFade : USoundNodeDistanceCrossFade {
	FName ParamName; // 0x58
};

struct UUW-BlackMarket_Slot_Base_C : UUserWidget {
	FName ItemRowName; // 0x248
	FString ConsoleCommandString; // 0x250
	FString GiveCount; // 0x260
	EItemType ItemType; // 0x270
	UImage* Icon; // 0x278
	bool bSlot; // 0x280
	int32_t Count; // 0x284
	FName AmmoName; // 0x288
	FString AmmoCommandString; // 0x290
	int32_t AmmoCount; // 0x2a0
	UBravoHotelDevelopmentBlackMarket* BlackMarketMainRef; // 0x2a8
	FBravoHotelBlackMarketDataType BlackmarketDataInfo; // 0x2b0
	TArray<FString> ConsoleMultiCommandString; // 0x3c8
};

struct UMovieSceneMediaPlayerPropertySection : UMovieSceneSection {
	UMediaSource* MediaSource; // 0xe0
	bool bLoop; // 0xe8
};

struct UHierarchicalInstancedStaticMeshComponent : UInstancedStaticMeshComponent {
	TArray<int32_t> SortedInstances; // 0x620
	int32_t NumBuiltInstances; // 0x630
	FBox BuiltInstanceBounds; // 0x638
	FBox UnbuiltInstanceBounds; // 0x654
	TArray<FBox> UnbuiltInstanceBoundsList; // 0x670
	char bEnableDensityScaling : 1; // 0x680
	int32_t OcclusionLayerNumNodes; // 0x688
	FBoxSphereBounds CacheMeshExtendedBounds; // 0x68c
	bool bDisableCollision; // 0x6a8
	int32_t InstanceCountToRender; // 0x6ac
};

struct UBravoHotelMainWidget : UUserWidget {
	FVector WorldCenter; // 0x260
	FVector2D WorldSize; // 0x26c
	FVector2D BaseMapSize; // 0x274
	FVector2D ParentWidgetSize; // 0x27c
	ABravoHotelCharacter* TargetCharacterRef; // 0x288
	ABravoHotelPlayerState* TargetPlayerStateRef; // 0x290
	ABattleRoyaleGameState* BattleRoyaleGameStateRef; // 0x298
	ABravoHotelPlayerHUD* PlayerHUDRef; // 0x2a0
	APlayerController* PlayerControllerRef; // 0x2a8
	TArray<ABravoHotelPlayerState*> TargetPawnTeamPlayers; // 0x2b0
	FVector2D ViewportSize; // 0x2cc
	float ViewportScale; // 0x2d4
	UUserWidget* TopInfoWidgetClass; // 0x2d8
	UUserWidget* SightInfoWidgetClass; // 0x2e0
	TArray<UBravoHotelTeamPositionWidget*> TeamPositionWidgetArray; // 0x2e8
	UUserWidget* TeamPositionWidgetClass; // 0x2f8
	bool bWantShowTeamPositionWidget; // 0x300
	FVector2D MinViewportPosition; // 0x304
	FVector2D MaxViewportPosition; // 0x30c
	bool RedCircleVisibility; // 0x31c
	bool IsMouseCursorWidgetChanged; // 0x31d
	FVector2D SkillMapRadarPosition; // 0x320
	float SkillMapRadarScaleRate; // 0x328
	UAkAudioEvent* AudioEvent_FindLandingPositionStart; // 0x338
	UAkAudioEvent* AudioEvent_FindLandingPositionEnd; // 0x340
	UAkAudioEvent* AudioEvent_SearchInstinctStart; // 0x368
	UAkAudioEvent* AudioEvent_SearchInstinctEnd; // 0x370
	FAudioPlayingHandle SearchInstinctSoundHandle; // 0x378
	float SearchInstinctAlpha; // 0x37c
	bool bIsSetSearchInstinctWidget; // 0x380
	bool bIsSetVehicleSearchWidget; // 0x381
	TMap<int32_t, float> SpatialSenseUIInfoMap; // 0x388
	float CarScanCurrentTime; // 0x3d8
	TArray<FAttackDamageWidgetInfo> AttackDamageInfoList; // 0x3e0
	UUserWidget* AttackDamageWidgetClass; // 0x3f8
	UUserWidget* AttackUserWidgetClass; // 0x400
	TArray<UUserWidget*> HitWidgetList; // 0x408
	UBravoHotelTopInfoWidget* TopInfoWidget; // 0x418
	UBravoHotelSightInfoWidget* SightInfoWidget; // 0x420
	UBravoHotelAliveInfoWidget* AliveInfoWidget; // 0x428
	UBravoHotelCompassWidget* CompassWidget; // 0x430
	UBravoHotelVehicleWidget* VehicleWidget; // 0x438
	UBravoHotelTeamInfoWidget* TeamInfoWidget; // 0x440
	UBravoHotelJetpackWidget* JetpackWidget; // 0x448
};

struct ATransportAircraftPawn : ACharacter {
	float HealthPoint; // 0x5e8
	float MaxHealthPoint; // 0x5ec
	ABravoHotelDropBoxActor* DropBoxActorClass; // 0x5f0
	float FlightSpeed; // 0x5f8
	float HeightSpeed; // 0x5fc
	float FlightHeight; // 0x600
	float SpawnDistance; // 0x604
	UParticleSystemComponent* DamagedEffectComponent; // 0x610
	UBravoHotelAudioEmitterComponent* AudioComponent; // 0x618
	TArray<float> DamagedLevelRatios; // 0x620
	TArray<UParticleSystem*> DamagedEffects; // 0x630
	TArray<UAkAudioEvent*> DamagedSounds; // 0x640
	FName DamagedEffectSocketName; // 0x650
	UParticleSystem* ExplosionEffect; // 0x658
	UAkAudioEvent* ExplosionSound; // 0x660
	FName ExplosionEffectSocketName; // 0x668
	FAudioPlayingHandle FlyingSoundHandle; // 0x670
	TArray<float> DropDistances; // 0x6c0
	TArray<ABravoHotelDropBoxActor*> DropBoxes; // 0x6d0
};

struct UMaterialParameterCollectionInstance : UObject {
	UMaterialParameterCollection* Collection; // 0x30
};

struct UDrawFrustumComponent : UPrimitiveComponent {
	FColor FrustumColor; // 0x4b0
	float FrustumAngle; // 0x4b4
	float FrustumAspectRatio; // 0x4b8
	float FrustumStartDist; // 0x4bc
	float FrustumEndDist; // 0x4c0
	UTexture* Texture; // 0x4c8
};

struct UMaterialExpressionComment : UMaterialExpression {
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FString Text; // 0x48
	FLinearColor CommentColor; // 0x58
	int32_t FontSize; // 0x68
};

struct UMaterialExpressionIf : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput AGreaterThanB; // 0x68
	FExpressionInput AEqualsB; // 0x7c
	FExpressionInput ALessThanB; // 0x90
	float EqualsThreshold; // 0xa4
	float ConstB; // 0xa8
	float ConstAEqualsB; // 0xac
};

struct APostProcessVolume : AVolume {
	FPostProcessSettings Settings; // 0x370
	float Priority; // 0x930
	float BlendRadius; // 0x934
	float BlendWeight; // 0x938
	char bEnabled : 1; // 0x93c
	char bUnbound : 1; // 0x93c
};

struct ABravoHotelElevatorDoor : AActor {
	bool bDoorUIEnable; // 0x370
	UBoxComponent* BoxTrigger; // 0x378
	UBoxComponent* PushBox; // 0x380
	USceneComponent* LeftDoorPivot; // 0x388
	USceneComponent* RightDoorPivot; // 0x390
	USceneComponent* ElevatorPivot; // 0x398
	UStaticMeshComponent* ElevatorUI; // 0x3a0
	UStaticMeshComponent* ButtonUI; // 0x3a8
	EElevatorDoorStateType CurrentStateType; // 0x3b0
	int32_t DoorID; // 0x3b4
	int32_t MatchingDoorID; // 0x3b8
	FVector LeftOpenLocation; // 0x3bc
	FVector RightOpenLocation; // 0x3c8
	float DoorSpeed; // 0x3d4
	bool bCalled; // 0x3d8
	UAkComponent* AkAudioComponent; // 0x3e0
	UAkAudioEvent* SoundEventForOpening; // 0x3e8
	UAkAudioEvent* SoundEventForOpened; // 0x3f0
	UAkAudioEvent* SoundEventForClosing; // 0x3f8
	UAkAudioEvent* SoundEventForClosed; // 0x400
};

struct UUW-TeamInfoWidget_C : UBravoHotelTeamInfoWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x258
	UUW-TeamInfoItemWidget_C* UW-TeamInfoItemWidget; // 0x260
	UUW-TeamInfoItemWidget_C* UW-TeamInfoItemWidget_C_2; // 0x268
	UVerticalBox* VerticalBox_InfoList; // 0x270
};

struct ABP-ProjectileGrenade_MolotovCocktail_C : ABravoHotelProjectileGrenadeMolotovCocktail {
	FPointerToUberGraphFrame UberGraphFrame; // 0x840
	float TextureScale; // 0x848
	float CollisionSize; // 0x84c
};

struct USlateVectorArtData : UObject {
	TArray<FSlateMeshVertex> VertexData; // 0x28
	TArray<uint32_t> IndexData; // 0x38
	UMaterialInterface* Material; // 0x48
	FVector2D ExtentMin; // 0x50
	FVector2D ExtentMax; // 0x58
};

struct UUW-Volume_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Img_Voice; // 0x250
	UImage* Img_VoiceX; // 0x258
	USizeBox* SizeBox_2; // 0x260
	UTextBlock* TextBlock; // 0x268
	UWidgetSwitcher* WidgetSwitcher_LogOut; // 0x270
	FTimerHandle Timer; // 0x278
};

struct ULeaderboardQueryCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UBravoHotelReplayPlayerListItem : UUserWidget {
	ABravoHotelMK3DReplayController* ReplayController; // 0x250
	ABravoHotelPlayerState* PlayerState; // 0x258
	FString playerName; // 0x260
};

struct UBehaviorTree : UObject {
	UBTCompositeNode* RootNode; // 0x30
	UBlackboardData* BlackboardAsset; // 0x38
	TArray<UBTDecorator*> RootDecorators; // 0x40
	TArray<FBTDecoratorLogic> RootDecoratorOps; // 0x50
};

struct USpinBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FSpinBoxStyle SpinBoxStyle; // 0x30
};

struct UConfirmPopupWidget_C : UBravoHotelConfirmPopupWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x250
	UImage* Bg; // 0x258
	UButton* btn_Cancel; // 0x260
	UButton* btn_OK; // 0x268
	UImage* Image_2; // 0x270
	UOverlay* Overlay_2; // 0x278
	UTextBlock* TextBlock_1; // 0x280
	UTextBlock* TextBlock_17; // 0x288
	UTextBlock* TextBlock_18; // 0x290
	UTextBlock* TextBlock_19; // 0x298
	ConfirmPopupType PopupType; // 0x2a0
	USettingMainWidget_C* SettingWidget; // 0x2a8
	int32_t CurrentSelectIndex; // 0x2b0
	ESettingBigType CurrentSelectType; // 0x2b4
	TArray<FBackupSlotData> BackupSlots; // 0x2b8
	FTimerHandle Timer; // 0x2c8
	int32_t TimerCount; // 0x2d0
};

struct UBTDecorator : UBTAuxiliaryNode {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct UAssetMappingTable : UObject {
	TArray<FAssetMapping> MappedAssets; // 0x28
};

struct USubmixEffectTapDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectTapDelaySettings Settings; // 0x80
};

struct USubstanceSettings : UObject {
	int32_t MemoryBudgetMb; // 0x28
	int32_t CPUCores; // 0x2c
	int32_t AsyncLoadMipClip; // 0x30
	int32_t MaxAsyncSubstancesRenderedPerFrame; // 0x34
	ESubstanceEngineType SubstanceEngine; // 0x38
	EDefaultSubstanceTextureSize DefaultSubstanceOutputSizeX; // 0x39
	EDefaultSubstanceTextureSize DefaultSubstanceOutputSizeY; // 0x3a
	TSoftObjectPtr<UMaterialInterface> DefaultTemplateMaterial; // 0x40
};

struct UGraphicWidget_C : UBravoHotelSettingSubWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	USlotItemWidget_C* Anti; // 0x2a0
	USubTitleSlotWidget_C* display; // 0x2a8
	USlotItemWidget_C* DisplayMode; // 0x2b0
	USlotItemWidget_C* DLSS; // 0x2b8
	USlotItemWidget_C* DOF; // 0x2c0
	USlotItemWidget_C* Effect; // 0x2c8
	USlotItemWidget_C* Foliage; // 0x2d0
	USlotItemWidget_C* FOV; // 0x2d8
	USlotItemWidget_C* FSR; // 0x2e0
	USlotItemWidget_C* LanguageSetting; // 0x2e8
	USlotItemWidget_C* MaxFrameRate; // 0x2f0
	USlotItemWidget_C* MaxLobbyFrameRate; // 0x2f8
	USlotItemWidget_C* PP; // 0x300
	USlotItemWidget_C* Reflex; // 0x308
	USlotItemWidget_C* Resolution; // 0x310
	USubTitleSlotWidget_C* ResolutionScaling; // 0x318
	UScrollBox* ScrollBox_55; // 0x320
	USlotItemWidget_C* Shading; // 0x328
	USlotItemWidget_C* Shadow; // 0x330
	USlotItemWidget_C* Sharpen; // 0x338
	USlotItemWidget_C* SlotItemWidget_C_1; // 0x340
	USlotItemWidget_C* Smooth; // 0x348
	USubTitleSlotWidget_C* SubTitleSlotWidget; // 0x350
	USlotItemWidget_C* Texture; // 0x358
	USlotItemWidget_C* v-Sync; // 0x360
	USlotItemWidget_C* ViewDistance; // 0x368
	USubTitleSlotWidget_C* KAm; // 0x370
	USlotItemWidget_C* x*; // 0x378
	float OldDisplayModeValue; // 0x380
	float OldDisplayResolutionValue; // 0x384
	FTimerHandle ScrollBarTimer; // 0x388
};

struct UNetAnalyticsAggregatorConfig : UObject {
	TArray<FNetAnalyticsDataConfig> NetAnalyticsData; // 0x28
};

struct UScaleBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct AMagicLeapSharedWorldGameMode : AGameMode {
	FMagicLeapSharedWorldSharedData SharedWorldData; // 0x410
	FMulticastInlineDelegate OnNewLocalDataFromClients; // 0x420
	float PinSelectionConfidenceThreshold; // 0x430
	AMagicLeapSharedWorldPlayerController* ChosenOne; // 0x4d8
};

struct UOutGameArmoryDataType_C : UPrimaryDataAsset {
	float SpinVelocity; // 0x30
	float RotationInterpSpeed; // 0x34
};

struct ADebugCameraController : APlayerController {
	char bShowSelectedInfo : 1; // 0x710
	char bIsFrozenRendering : 1; // 0x710
	char bOverrideInitialMaxSpeed : 1; // 0x710
	float OverrideInitialMaxSpeed; // 0x714
	char bIsOrbitingSelectedActor : 1; // 0x718
	char bOrbitPivotUseCenter : 1; // 0x718
	char bEnableBufferVisualization : 1; // 0x718
	char bEnableBufferVisualizationFullMode : 1; // 0x718
	char bIsBufferVisualizationInputSetup : 1; // 0x718
	char bLastDisplayEnabled : 1; // 0x718
	UDrawFrustumComponent* DrawFrustum; // 0x720
	AActor* SelectedActor; // 0x728
	UPrimitiveComponent* SelectedComponent; // 0x730
	FHitResult SelectedHitPoint; // 0x738
	APlayerController* OriginalControllerRef; // 0x7c0
	UPlayer* OriginalPlayer; // 0x7c8
	float SpeedScale; // 0x7d0
	float InitialMaxSpeed; // 0x7d4
	float InitialAccel; // 0x7d8
	float InitialDecel; // 0x7dc
};

struct UNiagaraDataInterfaceTexture : UNiagaraDataInterface {
	UTexture* Texture; // 0x30
};

struct UBravoHotelTrajectoryComponent : UActorComponent {
	bool bCanDrawTrajectory; // 0xb0
	bool bUseDebugLine; // 0xb1
	bool bIsTrajectorySegmentsCreated; // 0xb2
	FVector DesiredStartLocation; // 0xb4
	FVector Gravity; // 0xc0
	FVector InitialVelocity; // 0xcc
	float TrajectorySegmentCount; // 0xd8
	float TrajectorySegmentLength; // 0xdc
	int32_t HitSegmentIndex; // 0xe0
	FLinearColor ParticleColor; // 0xe4
	float ParticleColorMultiplier; // 0xf4
	UMaterialParameterCollection* MPC_Trajectory; // 0xf8
	UParticleSystem* TrajectoryParticleSystem; // 0x100
	TArray<UParticleSystemComponent*> SpawnedParticleArray; // 0x108
	UDecalComponent* DecalComponent; // 0x118
	FVector DecalScale; // 0x120
	FLinearColor DecalColor; // 0x12c
	UMaterialInterface* DecalMaterial; // 0x140
};

struct ATransformGizmoActor : AGizmoActor {
	UPrimitiveComponent* TranslateX; // 0x328
	UPrimitiveComponent* TranslateY; // 0x330
	UPrimitiveComponent* TranslateZ; // 0x338
	UPrimitiveComponent* TranslateYZ; // 0x340
	UPrimitiveComponent* TranslateXZ; // 0x348
	UPrimitiveComponent* TranslateXY; // 0x350
	UPrimitiveComponent* RotateX; // 0x358
	UPrimitiveComponent* RotateY; // 0x360
	UPrimitiveComponent* RotateZ; // 0x368
	UPrimitiveComponent* UniformScale; // 0x370
	UPrimitiveComponent* AxisScaleX; // 0x378
	UPrimitiveComponent* AxisScaleY; // 0x380
	UPrimitiveComponent* AxisScaleZ; // 0x388
	UPrimitiveComponent* PlaneScaleYZ; // 0x390
	UPrimitiveComponent* PlaneScaleXZ; // 0x398
	UPrimitiveComponent* PlaneScaleXY; // 0x3a0
};

struct UInterpTrackToggle : UInterpTrack {
	TArray<FToggleTrackKey> ToggleTrack; // 0x70
	char bActivateSystemEachUpdate : 1; // 0x80
	char bActivateWithJustAttachedFlag : 1; // 0x80
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UBackgroundBlur : UContentWidget {
	FMargin Padding; // 0x120
	EHorizontalAlignment HorizontalAlignment; // 0x130
	EVerticalAlignment VerticalAlignment; // 0x131
	bool bApplyAlphaToBlur; // 0x132
	float BlurStrength; // 0x134
	bool bOverrideAutoRadiusCalculation; // 0x138
	int32_t BlurRadius; // 0x13c
	FSlateBrush LowQualityFallbackBrush; // 0x140
};

struct UInterpTrackInstVectorMaterialParam : UInterpTrackInst {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<FVector> ResetVectors; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackVectorMaterialParam* InstancedTrack; // 0x58
};

struct UParticleModuleMeshRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionVector StartRotationRate; // 0x30
};

struct UBravoHotelItemSpawnBoxComponent : UBoxComponent {
	int32_t BoxID; // 0x4d8
	bool UsingRandomRotation; // 0x4dc
	bool IsCompleteSpawn; // 0x4dd
	FDivisionItem NoneItem; // 0x580
	UBravoHotelItemStandardGroupBoxComponent* ParentsStandardGroupBoxComponent; // 0x5c8
	TArray<UObject*> LoadedClasses; // 0x5d0
};

struct ABravoHotelPlayerHUD : ABravoHotelBaseHUD {
	UBravoHotelCrosshairManager* CrosshairMgr; // 0x430
	ABravoHotelCharacter* LastTargetPawn; // 0x438
	TArray<ABravoHotelPlayerState*> PlayerInfos; // 0x440
	ABattleRoyaleGameState* BattleRoyaleGameState; // 0x450
	ABravoHotelGameState* BravoHotelGameState; // 0x458
	FMulticastInlineDelegate OnChangedPlayerInfosDelegate; // 0x468
	float CurrentSkillRadius; // 0x484
	bool bReplayOptionFireDirection; // 0x488
	bool bReplayOptionHitted; // 0x489
	bool bReplayOptionDeathPosition; // 0x48a
	bool bReplayOptionPersonalSupplyBox; // 0x48b
	bool bReplayOptionTransportDropBox; // 0x48c
	FMulticastInlineDelegate OnToggleWidgetDelegate; // 0x490
	UAkAudioEvent* FireModeSound; // 0x4a8
	UAkAudioEvent* PlayerKillSound; // 0x4b0
	UAkAudioEvent* PlayerDuoKillSound; // 0x4b8
	UAkAudioEvent* LastPlayerInSquardKillSound; // 0x4c0
	UAkAudioEvent* LastPlayerInDuoKillSound; // 0x4c8
	UAkAudioEvent* PlayerAssistSound; // 0x4d0
	UAkAudioEvent* PlayerDiedSound; // 0x4d8
	bool bShowSkillCursorWidget; // 0x4e0
	UAkAudioEvent* RequestResuscitationEvent; // 0x4e8
	UUserWidget* InventoryWidgetClass; // 0x4f0
	UUserWidget* InventoryWidget; // 0x4f8
	TSoftClassPtr<UObject> SoftInventoryInfoWidgetClass; // 0x500
	UUserWidget* InventoryWidget_Ori; // 0x528
	UUserWidget* InventoryWidget_Web; // 0x530
	UBravoHotelMainWidget* BravoHotelMainWidget; // 0x538
	TSoftClassPtr<UObject> SoftMainWidgetClass; // 0x540
	UUserWidget* CustomMatchWidget; // 0x568
	UUserWidget* MainWidgetEx; // 0x570
	UUserWidget* MainWidgetExClass; // 0x578
	TSoftClassPtr<UObject> SoftMainWidgetExClass; // 0x580
	UUserWidget* SpectatorWidget; // 0x5a8
	UUserWidget* SpectatorWidgetClass; // 0x5b0
	TSoftClassPtr<UObject> SoftSpectatorWidgetClass; // 0x5b8
	UUserWidget* ReplayWidget; // 0x5e0
	UUserWidget* ReplayWidgetClass; // 0x5e8
	TSoftClassPtr<UObject> SoftReplayWidgetClass; // 0x5f0
	UUserWidget* WorldMapWidget; // 0x618
	UUserWidget* WorldMapWidgetClass; // 0x620
	TSoftClassPtr<UObject> SoftWorldMapWidgetClass; // 0x628
	UUserWidget* SkillMapWidget; // 0x650
	UUserWidget* SkillMapWidgetClass; // 0x658
	TSoftClassPtr<UObject> SoftSkillMapWidgetClass; // 0x660
	UUserWidget* BlackMarketWidget; // 0x688
	UUserWidget* MatchEndWidget; // 0x690
	UUserWidget* MatchEndWidgetClass; // 0x698
	TSoftClassPtr<UObject> SoftMatchEndWidgetClass; // 0x6a0
	bool bEnableWorldmap; // 0x710
	bool bEnableMinimap; // 0x711
	TSoftClassPtr<UObject> SoftTestWidgetClass; // 0x718
	TSoftClassPtr<UObject> SoftWorldTeleportWidgetClass; // 0x740
	TSoftClassPtr<UObject> SoftReplayZoneClass; // 0x768
	TSoftClassPtr<UObject> SoftItemSpawnDebugWidgetClass; // 0x790
	TSoftClassPtr<UObject> SoftItemSpawnRateWidgetClass; // 0x7b8
	UUserWidget* TestWidget; // 0x7e0
	TSoftClassPtr<UObject> SoftCustomMatchWidgetClass; // 0x7e8
	UUserWidget* CinematicWidget; // 0x810
	TSoftClassPtr<UObject> CinematicWidgetClass; // 0x818
	UUserWidget* MediaPlayerWidget; // 0x840
	TSoftClassPtr<UObject> MediaPlayerWidgetClass; // 0x848
};

struct ABravoHotelRedZoneManager : AActor {
	bool Usable; // 0x328
	FName TableRedZoneID; // 0x32c
	FRedZoneData DefaultRedZoneData; // 0x338
	TArray<FRedZoneData> ArrayRedZoneData; // 0x390
	int32_t BeginPhase; // 0x3a0
	int32_t EndPhase; // 0x3a4
	ABravoHotelRedZone* CurrentRedZone; // 0x408
};

struct UMovieSceneSequencePlayer : UObject {
	FMulticastInlineDelegate OnPlay; // 0x408
	FMulticastInlineDelegate OnPlayReverse; // 0x418
	FMulticastInlineDelegate OnStop; // 0x428
	FMulticastInlineDelegate OnPause; // 0x438
	FMulticastInlineDelegate OnFinished; // 0x448
	EMovieScenePlayerStatus status; // 0x458
	char bReversePlayback : 1; // 0x45c
	UMovieSceneSequence* Sequence; // 0x460
	FFrameNumber StartTime; // 0x468
	int32_t DurationFrames; // 0x46c
	int32_t CurrentNumLoops; // 0x470
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x488
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x4a0
	FMovieSceneSequenceReplProperties NetSyncProps; // 0x828
	TScriptInterface<IMovieScenePlaybackClient> PlaybackClient; // 0x838
};

struct USettingDevWidget_C : UBravoHotelSettingSubWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	UButton* ButtonGod; // 0x2a0
	UDevWidget_C* DevWidget; // 0x2a8
	UScrollBox* ScrollBox_55; // 0x2b0
};

struct UAtmosphericFogComponent : USceneComponent {
	float SunMultiplier; // 0x230
	float FogMultiplier; // 0x234
	float DensityMultiplier; // 0x238
	float DensityOffset; // 0x23c
	float DistanceScale; // 0x240
	float AltitudeScale; // 0x244
	float DistanceOffset; // 0x248
	float GroundOffset; // 0x24c
	float StartDistance; // 0x250
	float SunDiscScale; // 0x254
	float DefaultBrightness; // 0x258
	FColor DefaultLightColor; // 0x25c
	char bDisableSunDisk : 1; // 0x260
	char bAtmosphereAffectsSunIlluminance : 1; // 0x260
	char bDisableGroundScattering : 1; // 0x260
	FAtmospherePrecomputeParameters PrecomputeParams; // 0x264
	UTexture2D* TransmittanceTexture; // 0x290
	UTexture2D* IrradianceTexture; // 0x298
};

struct UNiagaraDataInterfaceRWBase : UNiagaraDataInterface {
	TSet<int32_t> OutputShaderStages; // 0x30
	TSet<int32_t> IterationShaderStages; // 0x80
};

struct UNavCollision : UNavCollisionBase {
	TArray<FNavCollisionCylinder> CylinderCollision; // 0x80
	TArray<FNavCollisionBox> BoxCollision; // 0x90
	UNavArea* AreaClass; // 0xa0
	char bGatherConvexGeometry : 1; // 0xa8
	char bCreateOnClient : 1; // 0xa8
};

struct UBravoHotelScenarioComponent : UActorComponent {
	UBravoHotelScenarioBase* StartScenarioClass; // 0xb0
	UBravoHotelScenarioBase* CurrentScenario; // 0xb8
	FTimerHandle TimeHandle_ForceStart; // 0x118
};

struct UUW-Route_C : UBravoHotelAircraftRouteWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	UWidgetAnimation* Propeller1; // 0x2b8
	UCanvasPanel* Aircraft; // 0x2c0
	UImage* Image_156; // 0x2c8
	UImage* Image_236; // 0x2d0
	UImage* Image_237; // 0x2d8
	UUW-MapComp_C* MapCompRef; // 0x2e0
};

struct UBTTask_MoveTo : UBTTask_BlackboardBase {
	float AcceptableRadius; // 0x98
	UNavigationQueryFilter* FilterClass; // 0xa0
	float ObservedBlackboardValueTolerance; // 0xa8
	char bObserveBlackboardValue : 1; // 0xac
	char bAllowStrafe : 1; // 0xac
	char bAllowPartialPath : 1; // 0xac
	char bTrackMovingGoal : 1; // 0xac
	char bProjectGoalLocation : 1; // 0xac
	char bReachTestIncludesAgentRadius : 1; // 0xac
	char bReachTestIncludesGoalRadius : 1; // 0xac
	char bStopOnOverlap : 1; // 0xac
	char bStopOnOverlapNeedsUpdate : 1; // 0xad
};

struct UUW-InventoryWidget_C : UBravoHotelInventoryWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x288
	UWidgetAnimation* FadeIn; // 0x290
	UBackgroundBlur* BackgroundBlur_1; // 0x298
	UCanvasPanel* BackPackBound_begin; // 0x2a0
	UCanvasPanel* BackPackBound_end; // 0x2a8
	UOverlay* BlackMarketOverlay; // 0x2b0
	UButton* BTN-BlackMarket; // 0x2b8
	UButton* Button_SortByTime; // 0x2c0
	UButton* Button_SortByType; // 0x2c8
	UCanvasPanel* CanvasPanel_1; // 0x2d0
	UCanvasPanel* CanvasPanel_7; // 0x2d8
	UCanvasPanel* CanvasPanel_16; // 0x2e0
	UImage* Carried_Area; // 0x2e8
	UCanvasPanel* CarriedBound_begin; // 0x2f0
	UCanvasPanel* CarriedBound_end; // 0x2f8
	UUW-Inventory_Carried_C* CarriedList; // 0x300
	UUW-Inventory_Carried_C* CarriedList_StrongBox; // 0x308
	UCheckBox* CheckBox; // 0x310
	UCheckBox* CheckBox_1; // 0x318
	UCheckBox* CheckBox_2; // 0x320
	UCanvasPanel* CombineRecipe; // 0x328
	UUW-Inventory_Equipped_C* EquippedList; // 0x330
	UHorizontalBox* HorizontalBox; // 0x338
	UHorizontalBox* HorizontalBox_7; // 0x340
	UHorizontalBox* HorizontalBox_ShowCharacter; // 0x348
	UHorizontalBox* HorizontalBox_WeightMax; // 0x350
	UImage* Image; // 0x358
	UImage* Image_2; // 0x360
	UImage* Image_3; // 0x368
	UImage* Image_5; // 0x370
	UImage* Image_6; // 0x378
	UImage* Image_7; // 0x380
	UImage* Image_8; // 0x388
	UImage* Image_9; // 0x390
	UImage* Image_10; // 0x398
	UImage* Image_223; // 0x3a0
	UImage* Image_227; // 0x3a8
	UImage* Image_271; // 0x3b0
	UImage* Image_324; // 0x3b8
	UImage* Image_489; // 0x3c0
	UImage* Image_556; // 0x3c8
	UImage* Image_Guess; // 0x3d0
	UImage* Image_ItemInfo; // 0x3d8
	UImage* IMG-BG; // 0x3e0
	UImage* IMG-BlackMarketBorder; // 0x3e8
	UImage* InputMaskImage; // 0x3f0
	UImage* Material_Area; // 0x3f8
	UCanvasPanel* MaterialBound_begin; // 0x400
	UCanvasPanel* MaterialBound_end; // 0x408
	UProgressBar* ProgressBar_MaxWeight; // 0x410
	UProgressBar* ProgressBar_Weight; // 0x418
	UProgressBar* ProgressBar_WeightBag; // 0x420
	UCanvasPanel* ProximityBound; // 0x428
	UUW-Inventory_Proximity_C* ProximityList; // 0x430
	UImage* StrongBox_Area; // 0x438
	UTextBlock* T_AdditionalMaxWeight; // 0x440
	UTextBlock* T_AdditionalMaxWeightSymbol; // 0x448
	UTextBlock* T_AdditionalWeight; // 0x450
	UTextBlock* T_AdditionalWeightSymbol; // 0x458
	UTextBlock* T_MaxWeight; // 0x460
	UTextBlock* T_StrongboxCount; // 0x468
	UTextBlock* T_Weight; // 0x470
	UTextBlock* T_WeightSlash; // 0x478
	UTextBlock* TextBlock_11; // 0x480
	UTextBlock* TextBlock_CurrentGold; // 0x488
	UTextBlock* TextBlock_SortByTime; // 0x490
	UTextBlock* TextBlock_SortByType; // 0x498
	UUW-Inventory_FreeSupplyToolTip_C* UW-Inventory_FreeSupplyToolTip; // 0x4a0
	UUW-Inventory_ItemInfoTooltip_C* UW-Inventory_ItemInfoTooltip; // 0x4a8
	UUW-Inventory_Keeped_C* UW-Inventory_Keeped; // 0x4b0
	UUW-Inventory_Material_C* UW-Inventory_Material; // 0x4b8
	UUW-Inventory_Recipe_C* UW-Inventory_Recipe; // 0x4c0
	UUW-SearchingMaterial_C* UW-SearchingMaterial; // 0x4c8
	UCanvasPanel* WeaponBound; // 0x4d0
	UUW-Inventory_Weapon_C* WeaponList; // 0x4d8
	UTextBlock* WeightPerCent; // 0x4e0
	ABP-BravoHotel-PlayerController_C* PlayerController; // 0x4e8
	bool bItemDrag; // 0x4f0
	UUW-ItemDropPopup_C* DropPopup; // 0x4f8
	float MaximumWeight; // 0x500
	int32_t OldProximityItemCount; // 0x504
	UUW-Inventory_ProximityBoxSlot_C* ProximityGround; // 0x508
	ABP-DefaultPawn_C* DefaultPawnRef; // 0x510
	TArray<UUW-Inventory_ProximitySlot_C*> ProximityGroundPool; // 0x518
	ABP-DefaultPawn_C* OldDefaultPawnRef; // 0x528
	FTimerHandle CharacterTimerHandle; // 0x530
	TArray<FDropBoxInfo> DropBoxWidgetList; // 0x538
	UObject* DropBoxParentWidget; // 0x548
	UBP-SavedInventorySettings_C* SavedInventorySettings; // 0x550
	ABravoHotelWeaponBase* EquipedWeapon; // 0x558
	TArray<ABravoHotelWeaponBase*> OldWeaponList; // 0x560
	bool ChangeAttachments; // 0x570
	UUW-Inventory_ItemSlotHover_C* ItemHoverWidget; // 0x578
	UBravoHotelMainWidget* MainWidget; // 0x580
	FMulticastInlineDelegate EventDispatcher_OnCloseInventory; // 0x588
	TArray<UUW-Inventory_ProximityBoxSlot_C*> StealableWidgetList; // 0x598
	bool bItemInfoHovered; // 0x5a8
	bool bFirstTimeNotifyItemInfo; // 0x5a9
	FTimerHandle Timer_ItemInfoTooltip; // 0x5b0
	bool IsShowingItemInfoTooltip; // 0x5b8
	int32_t FirstTimeCapsuleItem; // 0x5bc
	int32_t FirstTimeCraft; // 0x5c0
	bool bGoldWarning; // 0x5c4
	FSlateColor DefaultWeightColor; // 0x5c8
	FSlateColor MinusWeightColor; // 0x5f0
	FSlateColor PlusWeightColor; // 0x618
};

struct UBTTask_FinishWithResult : UBTTaskNode {
	EBTNodeResult Result; // 0x70
};

struct ACharacter : AMKCharacterEx {
	USkeletalMeshComponent* Mesh; // 0x3b0
	UCharacterMovementComponent* CharacterMovement; // 0x3b8
	UCapsuleComponent* CapsuleComponent; // 0x3c0
	FBasedMovementInfo BasedMovement; // 0x3d0
	FBasedMovementInfo ReplicatedBasedMovement; // 0x400
	float AnimRootMotionTranslationScale; // 0x430
	FVector BaseTranslationOffset; // 0x434
	FQuat BaseRotationOffset; // 0x440
	float ReplicatedServerLastTransformUpdateTimeStamp; // 0x450
	float ReplayLastTransformUpdateTimeStamp; // 0x454
	char ReplicatedMovementMode; // 0x458
	bool bInBaseReplication; // 0x459
	float CrouchedEyeHeight; // 0x45c
	char bIsCrouched : 1; // 0x460
	char bProxyIsJumpForceApplied : 1; // 0x460
	char bPressedJump : 1; // 0x460
	char bClientUpdating : 1; // 0x460
	char bClientWasFalling : 1; // 0x460
	char bClientResimulateRootMotion : 1; // 0x460
	char bClientResimulateRootMotionSources : 1; // 0x460
	char bSimGravityDisabled : 1; // 0x460
	char bClientCheckEncroachmentOnNetUpdate : 1; // 0x461
	char bServerMoveIgnoreRootMotion : 1; // 0x461
	char bWasJumping : 1; // 0x461
	float JumpKeyHoldTime; // 0x464
	float JumpForceTimeRemaining; // 0x468
	float ProxyJumpForceStartedTime; // 0x46c
	float JumpMaxHoldTime; // 0x470
	int32_t JumpMaxCount; // 0x474
	int32_t JumpCurrentCount; // 0x478
	FMulticastInlineDelegate OnReachedJumpApex; // 0x480
	FMulticastInlineDelegate MovementModeChangedDelegate; // 0x4a0
	FMulticastInlineDelegate OnCharacterMovementUpdated; // 0x4b0
	FRootMotionSourceGroup SavedRootMotion; // 0x4c0
	FRootMotionMovementParams ClientRootMotionParams; // 0x500
	TArray<FSimulatedRootMotionReplicatedMove> RootMotionRepMoves; // 0x540
	FRepRootMotionMontage RepRootMotion; // 0x550
};

struct UFSM_SetState_AsyncWithCallbacks : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	FDelegate InBegin; // 0x38
	FDelegate InExit; // 0x48
	FName StateName; // 0x58
	float Timer; // 0x60
	bool Repeat; // 0x64
	FTimerHandle TimerHandle; // 0x68
	FMulticastInlineDelegate OnSuccess; // 0x70
	FMulticastInlineDelegate OnAborted; // 0x80
};

struct UAnimCompress : UAnimBoneCompressionCodec {
	char bNeedsSkeleton : 1; // 0x38
	AnimationCompressionFormat TranslationCompressionFormat; // 0x3c
	AnimationCompressionFormat RotationCompressionFormat; // 0x3d
	AnimationCompressionFormat ScaleCompressionFormat; // 0x3e
};

struct UUW-GameNoticePopupWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_2; // 0x250
	UTextBlock* Notice; // 0x258
	UWidgetSwitcher* WidgetSwitcher_1; // 0x260
};

struct AAtmosphericFog : AInfo {
	UAtmosphericFogComponent* AtmosphericFogComponent; // 0x328
};

struct UAIPerceptionComponent : UActorComponent {
	TArray<UAISenseConfig*> SensesConfig; // 0xb0
	UAISense* DominantSense; // 0xc0
	AAIController* AIOwner; // 0xd8
	FMulticastInlineDelegate OnPerceptionUpdated; // 0x160
	FMulticastInlineDelegate OnTargetPerceptionUpdated; // 0x170
};

struct UChaosDestructionListener : USceneComponent {
	char bIsCollisionEventListeningEnabled : 1; // 0x230
	char bIsBreakingEventListeningEnabled : 1; // 0x230
	char bIsTrailingEventListeningEnabled : 1; // 0x230
	FChaosCollisionEventRequestSettings CollisionEventRequestSettings; // 0x234
	FChaosBreakingEventRequestSettings BreakingEventRequestSettings; // 0x24c
	FChaosTrailingEventRequestSettings TrailingEventRequestSettings; // 0x264
	TSet<AChaosSolverActor*> ChaosSolverActors; // 0x280
	TSet<AGeometryCollectionActor*> GeometryCollectionActors; // 0x2d0
	FMulticastInlineDelegate OnCollisionEvents; // 0x320
	FMulticastInlineDelegate OnBreakingEvents; // 0x330
	FMulticastInlineDelegate OnTrailingEvents; // 0x340
};

struct UParticleModuleLocationPrimitiveCylinder : UParticleModuleLocationPrimitiveBase {
	char RadialVelocity : 1; // 0xb0
	FRawDistributionFloat StartRadius; // 0xb8
	FRawDistributionFloat StartHeight; // 0xe8
	CylinderHeightAxis HeightAxis; // 0x118
};

struct UMediaComponent : UActorComponent {
	UMediaTexture* MediaTexture; // 0xb0
	UMediaPlayer* MediaPlayer; // 0xb8
};

struct UABP-SupplyHelicopter_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x270
	FAnimNode_Root AnimGraphNode_Root; // 0x278
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2a8
};

struct ABravoHotelRedZone : AActor {
	FRedZoneBombData BombData; // 0x328
	bool ResetAndStart; // 0x368
	float RemainingWarningTime; // 0x36c
	float CurrentRange; // 0x370
	int32_t RemainingBombing; // 0x374
	UAkComponent* AkAudioComponent; // 0x388
	UAkAudioEvent* StartAudioEvent; // 0x390
	UAkAudioEvent* EndAudioEvent; // 0x398
	UUserWidget* pBottonInfoWidget; // 0x3a0
	UUserWidget* pTopInfoWidget; // 0x3a8
};

struct AMKPawnEx : AActor {
	APawn* SelfPawn; // 0x330
};

struct UInterpTrackInstSlomo : UInterpTrackInst {
	float OldTimeDilation; // 0x28
};

struct UInterpTrackAkAudioEvent : UInterpTrackVectorBase {
	TArray<FAkAudioEventTrackKey> Events; // 0x90
	char bContinueEventOnMatineeEnd : 1; // 0xa0
};

struct UPacketHandlerProfileConfig : UObject {
	TArray<FString> Components; // 0x28
};

struct UWBP_SPS_SelectionIcon_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* IconImage; // 0x250
	FMulticastInlineDelegate Hovered; // 0x258
	FMulticastInlineDelegate Unhovered; // 0x268
	FMulticastInlineDelegate Pressed; // 0x278
	USmartPingSystem_C* SmartPingComponent; // 0x288
	int32_t Index; // 0x290
	FLinearColor TintColorToUse; // 0x294
	bool Found Setting; // 0x2a4
	FBravoHotelSmartPingIconSettings Settings; // 0x2a8
	FName TableID; // 0x360
};

struct UARTrackableNotifyComponent : UActorComponent {
	FMulticastInlineDelegate OnAddTrackedGeometry; // 0xb0
	FMulticastInlineDelegate OnUpdateTrackedGeometry; // 0xc0
	FMulticastInlineDelegate OnRemoveTrackedGeometry; // 0xd0
	FMulticastInlineDelegate OnAddTrackedPlane; // 0xe0
	FMulticastInlineDelegate OnUpdateTrackedPlane; // 0xf0
	FMulticastInlineDelegate OnRemoveTrackedPlane; // 0x100
	FMulticastInlineDelegate OnAddTrackedPoint; // 0x110
	FMulticastInlineDelegate OnUpdateTrackedPoint; // 0x120
	FMulticastInlineDelegate OnRemoveTrackedPoint; // 0x130
	FMulticastInlineDelegate OnAddTrackedImage; // 0x140
	FMulticastInlineDelegate OnUpdateTrackedImage; // 0x150
	FMulticastInlineDelegate OnRemoveTrackedImage; // 0x160
	FMulticastInlineDelegate OnAddTrackedFace; // 0x170
	FMulticastInlineDelegate OnUpdateTrackedFace; // 0x180
	FMulticastInlineDelegate OnRemoveTrackedFace; // 0x190
	FMulticastInlineDelegate OnAddTrackedEnvProbe; // 0x1a0
	FMulticastInlineDelegate OnUpdateTrackedEnvProbe; // 0x1b0
	FMulticastInlineDelegate OnRemoveTrackedEnvProbe; // 0x1c0
	FMulticastInlineDelegate OnAddTrackedObject; // 0x1d0
	FMulticastInlineDelegate OnUpdateTrackedObject; // 0x1e0
	FMulticastInlineDelegate OnRemoveTrackedObject; // 0x1f0
};

struct ABP-DeathCam_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	UCameraComponent* FirstCamera; // 0x330
	USpringArmComponent* FirstSpringArm; // 0x338
	UCameraComponent* ThirdCamera; // 0x340
	UCameraComponent* SecondCamera; // 0x348
	USceneComponent* DefaultSceneRoot; // 0x350
	float DeltaSeconds; // 0x358
	FVector TargetDeltaLocation; // 0x35c
	ABravoHotelCharacter* Character; // 0x368
	float LowerBoundCameraHeightDelta; // 0x370
	bool bHeightUpdateFinished; // 0x374
	float ThridCameraRotationYawDelta; // 0x378
	float ThirdCameraMinHeight; // 0x37c
	float FirstSpringArmDeltaZ; // 0x380
};

struct UEdGraph : UObject {
	UEdGraphSchema* Schema; // 0x28
	TArray<UEdGraphNode*> Nodes; // 0x30
	char bEditable : 1; // 0x40
	char bAllowDeletion : 1; // 0x40
	char bAllowRenaming : 1; // 0x40
};

struct URotatingMovementComponent : UMovementComponent {
	FRotator RotationRate; // 0xf0
	FVector PivotTranslation; // 0xfc
	char bRotationInLocalSpace : 1; // 0x108
};

struct USoundNodeDoppler : USoundNode {
	float DopplerIntensity; // 0x48
	bool bUseSmoothing; // 0x4c
	float SmoothingInterpSpeed; // 0x50
};

struct UControlPointMeshComponent : UStaticMeshComponent {
	float VirtualTextureMainPassMaxDrawDistance; // 0x548
};

struct UBlendSpace1D : UBlendSpaceBase {
	bool bScaleAnimation; // 0x150
};

struct UBravoHotelReportUserConfirmWidget : UUserWidget {
	UButton* ConfirmButton; // 0x248
	UButton* CancelButton; // 0x250
};

struct UObjectReferencer : UObject {
	TArray<UObject*> ReferencedObjects; // 0x28
};

struct ULowEntrySocketConnection : UObject {
	ULowEntrySocketConnectionListenerCode* ListenerCode; // 0x38
	FString Host; // 0x40
	int32_t Port; // 0x50
	int32_t PortUdp; // 0x54
	int32_t NextConnectionValidationFunctionCallId; // 0x58
	int32_t NextFunctionCallId; // 0x5c
	int32_t NextLatentFunctionCallId; // 0xb0
	TArray<char> SendingBytes; // 0x108
	TArray<char> ReceivedBytes; // 0x118
	TArray<char> ReceivingBuffer; // 0x128
	char ReceivingType; // 0x139
	int32_t ReceivingFunctionCallId; // 0x13c
	int32_t ReceivingPacketSize; // 0x140
	TArray<char> ReceivingPacket; // 0x148
	bool WaitingForConnectionValidationResponse; // 0x168
	float ConnectionValidationResponseTime; // 0x16c
	float ConnectionValidationDelayTime; // 0x170
	float LatentFunctionConnectionValidationDelayTime; // 0x174
	int32_t ConnectionValidationFunctionCallId; // 0x178
	bool PeriodicConnectionValidationEnabled; // 0x17c
	bool CanCallOnDisconnect; // 0x17d
	FDelegate OnConnectEvent; // 0x180
	FDelegate OnDisconnectEvent; // 0x190
	FDelegate OnReceiveMessageEvent; // 0x1a0
	FDelegate OnReceiveUnreliableMessageEvent; // 0x1b0
};

struct UUW-Inventory_ItemSlotHover_WeaponSlot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_350; // 0x250
	UImage* Image_585; // 0x258
	UImage* Image_Grade_Color_Line; // 0x260
	UTextBlock* TextBlock_445; // 0x268
};

struct AReplicationGraphDebugActor : AActor {
	UReplicationGraph* ReplicationGraph; // 0x328
	UNetReplicationGraphConnection* ConnectionManager; // 0x330
};

struct USoundNodeSwitch : USoundNode {
	FName IntParameterName; // 0x48
};

struct ABravoHotelMeleeWeapon : ABravoHotelWeaponBase {
	TArray<FAnimSlot> MeleeAttack_Stand; // 0x1be8
	TArray<FAnimSlot> MeleeAttack_Crouch; // 0x1bf8
	FAnimSlot MeleeAttach_Jump; // 0x1c08
	UAnimSequence* Locomotion_Stand_Idle_3P; // 0x1c18
	UAnimSequence* Locomotion_Crouch_Idle_3P; // 0x1c20
	UAnimSequence* Locomotion_Prone_Idle_3P; // 0x1c28
	UAnimSequence* Locomotion_Stand_Idle_1P; // 0x1c30
	UAnimSequence* Locomotion_Crouch_Idle_1P; // 0x1c38
	UAnimSequence* Locomotion_Prone_Idle_1P; // 0x1c40
};

struct UChaosClothSharedSimConfig : UClothSharedConfigCommon {
	int32_t IterationCount; // 0x28
	int32_t SubdivisionCount; // 0x2c
	float SelfCollisionThickness; // 0x30
	float CollisionThickness; // 0x34
	bool bUseDampingOverride; // 0x38
	float Damping; // 0x3c
	bool bUseGravityOverride; // 0x40
	float GravityScale; // 0x44
	FVector Gravity; // 0x48
	bool bUseLocalSpaceSimulation; // 0x54
	bool bUseXPBDConstraints; // 0x55
};

struct UInteractiveGizmo : UObject {
	UInputBehaviorSet* InputBehaviors; // 0x30
};

struct ULowEntryLatentActionFloat : UObject {
	bool Finished; // 0x28
	float Result; // 0x2c
	int32_t KeepAliveCount; // 0x30
};

struct UChat_Message_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UTextBlock* Message TextBlock; // 0x250
	UTextBlock* Username TextBlock; // 0x258
	FText UserName; // 0x260
	FText Text; // 0x278
	FLinearColor Username Color; // 0x290
	FLinearColor Message Color; // 0x2a0
};

struct USubmixEffectReverbPreset : USoundEffectSubmixPreset {
	FSubmixEffectReverbSettings Settings; // 0x9c
};

struct UAnimBlueprintGeneratedClass : UBlueprintGeneratedClass {
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x3e0
	TArray<FName> SyncGroupNames; // 0x3f0
	USkeleton* TargetSkeleton; // 0x410
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x428
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x438
	TMap<FName, FGraphAssetPlayerInformation> GraphAssetPlayerInformation; // 0x498
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x4f8
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x578
};

struct UCustomizableObject : UObject {
	USkeletalMesh* ReferenceSkeletalMesh; // 0x28
	UStaticMesh* ReferenceStaticMesh; // 0x30
	ECustomizableObjectRelevancy Relevancy; // 0x38
	bool bDisableTextureLayoutManagement; // 0x39
	TArray<TSoftObjectPtr<UMaterialInterface>> ReferencedMaterials; // 0x40
	TArray<FMutableModelImageProperties> ImageProperties; // 0x50
	TMap<FString, FCustomizableObjectIdPair> GroupNodeMap; // 0x60
	TArray<UMorphTarget*> ContributingMorphTargets; // 0xb0
	TArray<FMorphTargetVertexIndex> MorphTargetReconstructionInfo; // 0xc0
	FGuid VersionId; // 0xd0
	TArray<FMutableModelParameterProperties> ParameterProperties; // 0xe0
	TMap<FString, FParameterUIData> ParameterUIDataMap; // 0x140
	TMap<FString, FParameterUIData> StateUIDataMap; // 0x190
	TMap<FString, TSoftObjectPtr<UPhysicsAsset>> PhysicsAssetsMap; // 0x1e0
	TSoftObjectPtr<UMutableMaskOutCache> MaskOutCache; // 0x230
	bool bIsChildObject; // 0x258
	UMutableMaskOutCache* MaskOutCache_HardRef; // 0x260
};

struct UPaperRuntimeSettings : UObject {
	bool bEnableSpriteAtlasGroups; // 0x28
	bool bEnableTerrainSplineEditing; // 0x29
	bool bResizeSpriteDataToMatchTextures; // 0x2a
};

struct UChaosGameplayEventDispatcher : UChaosEventListenerComponent {
	TMap<UPrimitiveComponent*, FChaosHandlerSet> CollisionEventRegistrations; // 0x1c8
	TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper> BreakEventRegistrations; // 0x218
};

struct UEndMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UUW-PerkDeckSelectItemNumWidget_C : UUserWidget {
	UImage* Image_Selected; // 0x248
	UTextBlock* TextBlock_Selected; // 0x250
	int32_t PlayerIndex; // 0x258
};

struct UMediaSoundComponent : USynthComponent {
	EMediaSoundChannels Channels; // 0x710
	bool DynamicRateAdjustment; // 0x714
	float RateAdjustmentFactor; // 0x718
	FFloatRange RateAdjustmentRange; // 0x71c
	UMediaPlayer* MediaPlayer; // 0x730
};

struct UBTDecorator_BlueprintBase : UBTDecorator {
	AAIController* AIOwner; // 0x68
	AActor* ActorOwner; // 0x70
	TArray<FName> ObservedKeyNames; // 0x78
	char bShowPropertyDetails : 1; // 0x98
	char bCheckConditionOnlyBlackBoardChanges : 1; // 0x98
	char bIsObservingBB : 1; // 0x98
};

struct UClothConfigNv : UClothConfigCommon {
	EClothingWindMethodNv ClothingWindMethod; // 0x28
	FClothConstraintSetupNv VerticalConstraint; // 0x2c
	FClothConstraintSetupNv HorizontalConstraint; // 0x3c
	FClothConstraintSetupNv BendConstraint; // 0x4c
	FClothConstraintSetupNv ShearConstraint; // 0x5c
	float SelfCollisionRadius; // 0x6c
	float SelfCollisionStiffness; // 0x70
	float SelfCollisionCullScale; // 0x74
	FVector Damping; // 0x78
	float Friction; // 0x84
	float WindDragCoefficient; // 0x88
	float WindLiftCoefficient; // 0x8c
	FVector LinearDrag; // 0x90
	FVector AngularDrag; // 0x9c
	FVector LinearInertiaScale; // 0xa8
	FVector AngularInertiaScale; // 0xb4
	FVector CentrifugalInertiaScale; // 0xc0
	float SolverFrequency; // 0xcc
	float StiffnessFrequency; // 0xd0
	float GravityScale; // 0xd4
	FVector GravityOverride; // 0xd8
	bool bUseGravityOverride; // 0xe4
	float TetherStiffness; // 0xe8
	float TetherLimit; // 0xec
	float CollisionThickness; // 0xf0
	float AnimDriveSpringStiffness; // 0xf4
	float AnimDriveDamperStiffness; // 0xf8
	EClothingWindMethod_Legacy WindMethod; // 0xfc
	FClothConstraintSetup_Legacy VerticalConstraintConfig; // 0x100
	FClothConstraintSetup_Legacy HorizontalConstraintConfig; // 0x110
	FClothConstraintSetup_Legacy BendConstraintConfig; // 0x120
	FClothConstraintSetup_Legacy ShearConstraintConfig; // 0x130
};

struct UUniformInteger : UFieldNodeInt {
	int32_t Magnitude; // 0xb0
};

struct USubsurfaceProfile : UObject {
	FSubsurfaceProfileStruct Settings; // 0x28
};

struct ABravoHotelObjectSyncMannagerBase : AActor {
	FSyncInfo SyncInfo; // 0x328
	TSet<TWeakObjectPtr<AActor>> MannagedPool; // 0x330
};

struct UNavArea : UNavAreaBase {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UBravoHotelAnimNotifyState_AttachWeaponToLHand : UAnimNotifyState {
	FName WeaponBone; // 0x30
};

struct UOodleNetworkTrainerCommandlet : UCommandlet {
	bool bCompressionTest; // 0x80
	int32_t HashTableSize; // 0x84
	int32_t DictionarySize; // 0x88
	int32_t DictionaryTrials; // 0x8c
	int32_t TrialRandomness; // 0x90
	int32_t TrialGenerations; // 0x94
	bool bNoTrials; // 0x98
};

struct ABP-BrokenHelmet_C : ABravoHotelBrokenEquipment {
	FPointerToUberGraphFrame UberGraphFrame; // 0x348
	float Power_Min; // 0x350
	float Power_Max; // 0x354
	float FlyAngle; // 0x358
};

struct ATriggerBase : AActor {
	UShapeComponent* CollisionComponent; // 0x328
};

struct USkeletalBodySetup : UBodySetup {
	bool bSkipScaleFromAnimation; // 0x2d0
	TArray<FPhysicalAnimationProfile> PhysicalAnimationData; // 0x2d8
};

struct ARoadActor : AActor {
	ESplineMeshAxis SplineMeshAxis; // 0x328
	FVector LocalOffset; // 0x32c
	ARoadActor* Father; // 0x338
	FString UniqueKey; // 0x340
	USplineComponent* Spline; // 0x350
	int32_t Index; // 0x358
	int32_t Segmentation; // 0x35c
	int32_t StepGeneration; // 0x360
	float Size; // 0x364
	UStaticMesh* RoadMesh; // 0x368
	TArray<USplineMeshComponent*> RoadMeshesComp; // 0x370
	TArray<FSideActorManager> SideActors; // 0x380
	TArray<FSideMeshManager> SideMeshes; // 0x390
	TArray<FCurbsManager> SideCurbs; // 0x3a0
};

struct UUW-SkillMapWidget_C : UBravoHotelSkillMapWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x250
	UWidgetAnimation* Tutorial_MouseCursor; // 0x258
	UWidgetAnimation* Tutorial_Arrow_Loop2; // 0x260
	UWidgetAnimation* RadarDecoLight; // 0x268
	UWidgetAnimation* RadarCircle_M; // 0x270
	UBackgroundBlur* BackgroundBlur_154; // 0x278
	UUW-MapComp_C* BP-MapComp; // 0x280
	UButton* Button_Nuclear; // 0x288
	UCanvasPanel* CP_RealMapSize; // 0x290
	UImage* Image; // 0x298
	UImage* Image_2; // 0x2a0
	UImage* Image_3; // 0x2a8
	UImage* Image_4; // 0x2b0
	UImage* Image_5; // 0x2b8
	UImage* Image_6; // 0x2c0
	UImage* Image_7; // 0x2c8
	UImage* Image_171; // 0x2d0
	UImage* Image_181; // 0x2d8
	UImage* Image_228; // 0x2e0
	UImage* Image_326; // 0x2e8
	UImage* Image_405; // 0x2f0
	UImage* Image_508; // 0x2f8
	UImage* Img_MapBackGround; // 0x300
	UImage* Img_MapCenter; // 0x308
	UImage* Img_RadarDummy; // 0x310
	UOverlay* Tutorial; // 0x318
	UUW-Radar_tutorial_C* UW-Radar_tutorial; // 0x320
	FVector2D MapBackGroundPosition; // 0x328
	FVector2D RadarDummyPosition; // 0x330
};

struct UMagicLeapImageTrackerComponent : USceneComponent {
	UTexture2D* TargetImageTexture; // 0x230
	FString Name; // 0x238
	float LongerDimension; // 0x248
	bool bIsStationary; // 0x24c
	bool bUseUnreliablePose; // 0x24d
	FMulticastInlineDelegate OnSetImageTargetSucceeded; // 0x250
	FMulticastInlineDelegate OnSetImageTargetFailed; // 0x260
	FMulticastInlineDelegate OnImageTargetFound; // 0x270
	FMulticastInlineDelegate OnImageTargetLost; // 0x280
	FMulticastInlineDelegate OnImageTargetUnreliableTracking; // 0x290
};

struct UAutoDestroySubsystem : UWorldSubsystem {
	TArray<AActor*> ActorsToPoll; // 0x38
};

struct UNativeReplayTimelineBasicWidget : UUserWidget {
	UScrollBox* ReplayTimelineScrollBox; // 0x248
	USizeBox* ReplayTimelineSizeBox; // 0x250
	UTimelineBorder* ReplayTimelineBorder; // 0x258
	USlider* ReplayTimelineSlider; // 0x260
	UBorder* ReplayTimeToGoBorder; // 0x268
	UTextBlock* ReplayTimeToGoText; // 0x270
	UTextBlock* ReplayCurrentTimeTextBlock; // 0x278
	UTextBlock* ReplayTotalTimeTextBlock; // 0x280
	UButton* ReplayPauseButton; // 0x288
	UButton* ReplayResumeButton; // 0x290
	UButton* ReplaySpeedUpButton; // 0x298
	UButton* ReplaySpeedDownButton; // 0x2a0
	UTextBlock* ReplaySpeedTextBlock; // 0x2a8
	UCheckBox* ShowKillChkBox; // 0x2b0
	UCheckBox* ShowKnockoutChkBox; // 0x2b8
	UButton* TimelineScaleUpButton; // 0x2c0
	UButton* TimelineScaleDownButton; // 0x2c8
	UTextBlock* TimelineScaleTextBlock; // 0x2d0
	float TimelineScaleDelta; // 0x2d8
	float TimelineMaxScale; // 0x2dc
	TArray<UNativeReplayEventMarkerBasic*> KillEventMarkers; // 0x300
	TArray<UNativeReplayEventMarkerBasic*> KnockoutEventMarkers; // 0x310
	TArray<FMK3DHighlightKillEvent> MK3DKillEvents; // 0x320
	TArray<FMK3DHighlightKillEvent> MK3DKnockoutEvents; // 0x330
};

struct UNiagaraComponentPool : UObject {
	TMap<UNiagaraSystem*, FNCPool> WorldParticleSystemPools; // 0x28
};

struct UMK3DKillcamComponent : UActorComponent {
	FMulticastInlineDelegate OnMK3DKillcamCompleteEvent; // 0xb0
	TArray<FMK3DHighlightKillEvent> MK3DKillEvents; // 0xd8
	float KillcamBeforeSec; // 0xe8
	float KillcamAfterSec; // 0xec
};

struct UMaterialExpressionTruncate : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UInterpToMovementComponent : UMovementComponent {
	float Duration; // 0xf0
	char bPauseOnImpact : 1; // 0xf4
	bool bSweep; // 0xf8
	ETeleportType TeleportType; // 0xf9
	EInterpToBehaviourType BehaviourType; // 0xfa
	bool bCheckIfStillInWorld; // 0xfb
	char bForceSubStepping : 1; // 0xfc
	FMulticastInlineDelegate OnInterpToReverse; // 0x100
	FMulticastInlineDelegate OnInterpToStop; // 0x110
	FMulticastInlineDelegate OnWaitBeginDelegate; // 0x120
	FMulticastInlineDelegate OnWaitEndDelegate; // 0x130
	FMulticastInlineDelegate OnResetDelegate; // 0x140
	float MaxSimulationTimeStep; // 0x150
	int32_t MaxSimulationIterations; // 0x154
	TArray<FInterpControlPoint> ControlPoints; // 0x158
};

struct UGeometryCacheTrackStreamable : UGeometryCacheTrack {
	UGeometryCacheCodecBase* Codec; // 0x58
	float StartSampleTime; // 0xc8
};

struct UAkGroupValue : UAkAudioType {
	TArray<TSoftObjectPtr<UAkMediaAsset>> MediaDependencies; // 0x40
	uint32_t GroupShortID; // 0x50
};

struct UMaterialFunctionInstance : UMaterialFunctionInterface {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xb0
};

struct UDefaultLevelSequenceInstanceData : UObject {
	AActor* TransformOriginActor; // 0x30
	FTransform TransformOrigin; // 0x40
};

struct UBTService_BlueprintBase : UBTService {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	char bShowPropertyDetails : 1; // 0x90
	char bShowEventDetails : 1; // 0x90
};

struct UInterpTrackInstFloatProp : UInterpTrackInstProperty {
	float ResetFloat; // 0x58
};

struct UNiagaraSpriteRendererProperties : UNiagaraRendererProperties {
	UMaterialInterface* Material; // 0x50
	FNiagaraUserParameterBinding MaterialUserParamBinding; // 0x58
	ENiagaraSpriteAlignment Alignment; // 0x80
	ENiagaraSpriteFacingMode FacingMode; // 0x81
	FVector2D PivotInUVSpace; // 0x84
	ENiagaraSortMode SortMode; // 0x8c
	FVector2D SubImageSize; // 0x90
	char bSubImageBlend : 1; // 0x98
	char bRemoveHMDRollInVR : 1; // 0x98
	char bSortOnlyWhenTranslucent : 1; // 0x98
	float MinFacingCameraBlendDistance; // 0x9c
	float MaxFacingCameraBlendDistance; // 0xa0
	FNiagaraVariableAttributeBinding PositionBinding; // 0xa8
	FNiagaraVariableAttributeBinding ColorBinding; // 0x120
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x198
	FNiagaraVariableAttributeBinding SpriteRotationBinding; // 0x210
	FNiagaraVariableAttributeBinding SpriteSizeBinding; // 0x288
	FNiagaraVariableAttributeBinding SpriteFacingBinding; // 0x300
	FNiagaraVariableAttributeBinding SpriteAlignmentBinding; // 0x378
	FNiagaraVariableAttributeBinding SubImageIndexBinding; // 0x3f0
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x468
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x4e0
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x558
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x5d0
	FNiagaraVariableAttributeBinding CameraOffsetBinding; // 0x648
	FNiagaraVariableAttributeBinding UVScaleBinding; // 0x6c0
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x738
	FNiagaraVariableAttributeBinding CustomSortingBinding; // 0x7b0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x828
};

struct UAkSettingsPerUser : UObject {
	FFilePath WwiseProjectPath; // 0x28
	FDirectoryPath WwiseWindowsInstallationPath; // 0x38
	FFilePath WwiseMacInstallationPath; // 0x48
	bool EnableAutomaticAssetSynchronization; // 0x58
	FString WaapiIPAddress; // 0x60
	uint32_t WaapiPort; // 0x70
	bool bAutoConnectToWAAPI; // 0x74
	bool AutoSyncSelection; // 0x75
	bool SuppressWwiseProjectPathWarnings; // 0x76
	bool SoundDataGenerationSkipLanguage; // 0x77
};

struct ULocalizedOverlays : UOverlays {
	UBasicOverlays* DefaultOverlays; // 0x28
	TMap<FString, UBasicOverlays*> LocaleToOverlaysMap; // 0x30
};

struct ULiveLinkCurveRemapSettings : ULiveLinkSourceSettings {
	FLiveLinkCurveConversionSettings CurveConversionSettings; // 0x98
};

struct UMaterialInstance : UMaterialInterface {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0x90
	UMaterialInterface* Parent; // 0xd0
	char bHasStaticPermutationResource : 1; // 0xd8
	char bOverrideSubsurfaceProfile : 1; // 0xd8
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xe0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xf0
	TArray<FTextureParameterValue> TextureParameterValues; // 0x100
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0x110
	TArray<FFontParameterValue> FontParameterValues; // 0x120
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0x130
	FStaticParameterSet StaticParameters; // 0x148
	FMaterialCachedParameters CachedLayerParameters; // 0x188
	TArray<UObject*> CachedReferencedTextures; // 0x328
};

struct UMovieSceneEventSection : UMovieSceneSection {
	FNameCurve Events; // 0xe0
	FMovieSceneEventSectionData eventData; // 0x158
};

struct ULandscapeComponent : UPrimitiveComponent {
	int32_t SectionBaseX; // 0x4b0
	int32_t SectionBaseY; // 0x4b4
	int32_t ComponentSizeQuads; // 0x4b8
	int32_t SubsectionSizeQuads; // 0x4bc
	int32_t NumSubsections; // 0x4c0
	UMaterialInterface* OverrideMaterial; // 0x4c8
	UMaterialInterface* OverrideHoleMaterial; // 0x4d0
	TArray<FLandscapeComponentMaterialOverride> OverrideMaterials; // 0x4d8
	TArray<UMaterialInstanceConstant*> MaterialInstances; // 0x4e8
	TArray<UMaterialInstanceDynamic*> MaterialInstancesDynamic; // 0x4f8
	TArray<int8_t> LODIndexToMaterialIndex; // 0x508
	TArray<int8_t> MaterialIndexToDisabledTessellationMaterial; // 0x518
	UTexture2D* XYOffsetmapTexture; // 0x528
	FVector4 WeightmapScaleBias; // 0x530
	float WeightmapSubsectionOffset; // 0x540
	FVector4 HeightmapScaleBias; // 0x550
	FBox CachedLocalBox; // 0x560
	LazyObjectProperty CollisionComponent; // 0x57c
	UTexture2D* HeightmapTexture; // 0x598
	TArray<FWeightmapLayerAllocationInfo> WeightmapLayerAllocations; // 0x5a0
	TArray<UTexture2D*> WeightmapTextures; // 0x5b0
	FGuid MapBuildDataId; // 0x5c0
	TArray<FGuid> IrrelevantLights; // 0x5d0
	int32_t CollisionMipLevel; // 0x5e0
	int32_t SimpleCollisionMipLevel; // 0x5e4
	float NegativeZBoundsExtension; // 0x5e8
	float PositiveZBoundsExtension; // 0x5ec
	float StaticLightingResolution; // 0x5f0
	int32_t ForcedLOD; // 0x5f4
	int32_t LODBias; // 0x5f8
	FGuid StateID; // 0x5fc
	FGuid BakedTextureMaterialGuid; // 0x60c
	UTexture2D* GIBakedBaseColorTexture; // 0x620
	char MobileBlendableLayerMask; // 0x628
	UMaterialInterface* MobileMaterialInterface; // 0x630
	TArray<UMaterialInterface*> MobileMaterialInterfaces; // 0x638
	TArray<UTexture2D*> MobileWeightmapTextures; // 0x648
};

struct UInterpTrackFloatProp : UInterpTrackFloatBase {
	FName PropertyName; // 0x90
};

struct UMaterialExpressionVirtualTextureFeatureSwitch : UMaterialExpression {
	FExpressionInput No; // 0x40
	FExpressionInput Yes; // 0x54
};

struct UOculusHMDRuntimeSettings : UObject {
	bool bAutoEnabled; // 0x28
	TArray<FOculusSplashDesc> SplashDescs; // 0x30
	bool bSupportsDash; // 0x40
	bool bCompositesDepth; // 0x41
	bool bHQDistortion; // 0x42
	float PixelDensityMin; // 0x44
	float PixelDensityMax; // 0x48
	int32_t CPULevel; // 0x4c
	int32_t GPULevel; // 0x50
	EFixedFoveatedRenderingLevel FFRLevel; // 0x54
	bool bChromaCorrection; // 0x55
	bool bRecenterHMDWithController; // 0x56
};

struct UTransformGizmo : UInteractiveGizmo {
	UTransformProxy* ActiveTarget; // 0x40
	bool bSnapToWorldGrid; // 0x48
	bool bUseContextCoordinateSystem; // 0x49
	EToolContextCoordinateSystem CurrentCoordinateSystem; // 0x4c
	TArray<UPrimitiveComponent*> ActiveComponents; // 0xe0
	TArray<UPrimitiveComponent*> NonuniformScaleComponents; // 0xf0
	TArray<UInteractiveGizmo*> ActiveGizmos; // 0x100
	UGizmoConstantFrameAxisSource* CameraAxisSource; // 0x120
	UGizmoComponentAxisSource* AxisXSource; // 0x128
	UGizmoComponentAxisSource* AxisYSource; // 0x130
	UGizmoComponentAxisSource* AxisZSource; // 0x138
	UGizmoComponentAxisSource* UnitAxisXSource; // 0x140
	UGizmoComponentAxisSource* UnitAxisYSource; // 0x148
	UGizmoComponentAxisSource* UnitAxisZSource; // 0x150
	UGizmoTransformChangeStateTarget* StateTarget; // 0x158
	UGizmoScaledTransformSource* ScaledTransformSource; // 0x160
};

struct UInterpTrackVectorMaterialParam : UInterpTrackVectorBase {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct UUW-Inventory_WeaponAttachmentSlot_C : UUW-Inventory_SlotBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1360
	UImage* Bg; // 0x1368
	UImage* BGImage; // 0x1370
	UImage* BorderImage; // 0x1378
	UImage* EmptyImage; // 0x1380
	UImage* ItemImage; // 0x1388
	UImage* OverImage; // 0x1390
	USizeBox* SizeBox_1; // 0x1398
	EWeaponAttachmentType WeaponAttachmentType; // 0x13a0
	int32_t WeaponSlotIndex; // 0x13a4
	bool IsHover; // 0x13a8
	UUW-Inventory_WeaponSlot_C* WeaponSlotWidget; // 0x13b0
	EWeaponAttachmentUseType WeaponAttachmentUseType; // 0x13b8
	int32_t SlotMode; // 0x13bc
	UUW-Inventory_ItemSlotHover_C* HoverWidget; // 0x13c0
};

struct UMaterialExpressionTextureSampleParameter : UMaterialExpressionTextureSample {
	FName ParameterName; // 0xd0
	FGuid ExpressionGUID; // 0xd8
	FName Group; // 0xe8
};

struct UMovieSceneAkAudioEventSection : UMovieSceneSection {
	UAkAudioEvent* Event; // 0x120
	bool RetriggerEvent; // 0x128
	int32_t ScrubTailLengthMs; // 0x12c
	bool StopAtSectionEnd; // 0x130
	FString EventName; // 0x138
	float MaxSourceDuration; // 0x168
	FString MaxDurationSourceID; // 0x170
};

struct UParticleModuleOrientationAxisLock : UParticleModuleOrientationBase {
	EParticleAxisLock LockAxisFlags; // 0x30
};

struct UParticleModuleVelocity : UParticleModuleVelocityBase {
	FRawDistributionVector StartVelocity; // 0x38
	FRawDistributionFloat StartVelocityRadial; // 0x80
};

struct ASkyLight : AInfo {
	USkyLightComponent* LightComponent; // 0x328
	char bEnabled : 1; // 0x330
};

struct UTireType : UDataAsset {
	float FrictionScale; // 0x30
};

struct ULowEntrySocketConnectionListenerCode : UObject {
	bool Stopped; // 0x28
	bool RunExec; // 0x29
	bool ConnectionSuccess; // 0x2a
	bool JustConnected; // 0x38
	float WaitingForConnectionTime; // 0x3c
	ULowEntrySocketConnection* SocketConnection; // 0x40
	int32_t LatentUUID; // 0x48
};

struct UTextBlock : UTextLayoutWidget {
	FText Text; // 0x128
	FDelegate TextDelegate; // 0x140
	FSlateColor ColorAndOpacity; // 0x150
	FDelegate ColorAndOpacityDelegate; // 0x178
	FSlateFontInfo Font; // 0x188
	FSlateBrush StrikeBrush; // 0x1d8
	FVector2D ShadowOffset; // 0x260
	FLinearColor ShadowColorAndOpacity; // 0x268
	FDelegate ShadowColorAndOpacityDelegate; // 0x278
	float MinDesiredWidth; // 0x288
	bool bWrapWithInvalidationPanel; // 0x28c
	bool bAutoWrapText; // 0x28d
	bool bSimpleTextMode; // 0x28e
};

struct UGridPanel : UPanelWidget {
	TArray<float> ColumnFill; // 0x120
	TArray<float> RowFill; // 0x130
};

struct UTextLayoutWidget : UWidget {
	FShapedTextOptions ShapedTextOptions; // 0x108
	ETextJustify Justification; // 0x10b
	ETextWrappingPolicy WrappingPolicy; // 0x10c
	char AutoWrapText : 1; // 0x10d
	float WrapTextAt; // 0x110
	FMargin Margin; // 0x114
	float LineHeightPercentage; // 0x124
};

struct UARCandidateObject : UDataAsset {
	TArray<char> CandidateObjectData; // 0x30
	FString FriendlyName; // 0x40
	FBox BoundingBox; // 0x50
};

struct UMaterialExpressionMin : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMaterialExpressionPower : UMaterialExpression {
	FExpressionInput Base; // 0x40
	FExpressionInput Exponent; // 0x54
	float ConstExponent; // 0x68
};

struct ABravoHotelWorldSettings : AWorldSettings {
	bool bUseRedZone; // 0x4b0
	float SeaLevelZ; // 0x4b4
	float ProjectileHeightLimit; // 0x4b8
	bool bUseMatchEndSequence; // 0x4bc
	ALevelSequenceActor* MatchEndSequenceRef; // 0x4c0
	UBravoHotelAudioEventDescription* AudioEventDescription; // 0x4c8
};

struct UBP_KeyMapping_C : UObject {
	FString Name; // 0x28
	float Scale; // 0x38
	UBP_KeyCombination_C* Primary Combination; // 0x40
	UBP_KeyCombination_C* Secondary Combination; // 0x48
	UBP_KeyAction_C* Parent Action; // 0x50
};

struct UParticleModuleTypeDataBeam2 : UParticleModuleTypeDataBase {
	EBeam2Method BeamMethod; // 0x30
	int32_t TextureTile; // 0x34
	float TextureTileDistance; // 0x38
	int32_t Sheets; // 0x3c
	int32_t MaxBeamCount; // 0x40
	float Speed; // 0x44
	int32_t InterpolationPoints; // 0x48
	char bAlwaysOn : 1; // 0x4c
	int32_t UpVectorStepSize; // 0x50
	FName BranchParentName; // 0x54
	FRawDistributionFloat Distance; // 0x60
	EBeamTaperMethod TaperMethod; // 0x90
	FRawDistributionFloat TaperFactor; // 0x98
	FRawDistributionFloat TaperScale; // 0xc8
	char RenderGeometry : 1; // 0xf8
	char RenderDirectLine : 1; // 0xf8
	char RenderLines : 1; // 0xf8
	char RenderTessellation : 1; // 0xf8
};

struct UUW-Inventory_Equipped_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Character_BG_Motion; // 0x250
	UUW-Inventory_EquippedSlot_C* ArmorSlot; // 0x258
	UUW-Inventory_EquippedSlot_C* BagSlot; // 0x260
	UUW-Inventory_EquippedSlot_C* BottomSlot; // 0x268
	UImage* Character_BG; // 0x270
	UUW-Inventory_EquippedSlot_C* EyeWearSlot; // 0x278
	UUW-Inventory_EquippedSlot_C* GhillieSlot; // 0x280
	UUW-Inventory_EquippedSlot_C* GlovesSlot; // 0x288
	UUW-Inventory_EquippedSlot_C* HatSlot; // 0x290
	UUW-Inventory_EquippedSlot_C* HelmetSlot; // 0x298
	UUW-Inventory_EquippedSlot_C* MaskSlot; // 0x2a0
	UUW-Inventory_EquippedSlot_C* OuterSlot; // 0x2a8
	UUW-Inventory_EquippedSlot_C* ShoesSlot; // 0x2b0
	UUW-Inventory_EquippedSlot_C* TopSlot; // 0x2b8
	UUW-Inventory_CharacterPreView_C* UW-Inventory_CharacterPreView; // 0x2c0
	ABP-BravoHotel-PlayerController_C* PlayerController; // 0x2c8
	TMap<EWearableItemType, UUW-Inventory_EquippedSlot_C*> EquipedSlots; // 0x2d0
};

struct UAudioCurveSourceComponent : UAudioComponent {
	FName CurveSourceBindingName; // 0x818
	float CurveSyncOffset; // 0x820
};

struct UParticleModuleSubUVMovie : UParticleModuleSubUV {
	char bUseEmitterTime : 1; // 0x70
	FRawDistributionFloat FrameRate; // 0x78
	int32_t StartingFrame; // 0xa8
};

struct ULevelSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x348
	FLevelSequenceObjectReferenceMap ObjectReferences; // 0x350
	FLevelSequenceBindingReferences BindingReferences; // 0x3a0
	TMap<FString, FLevelSequenceObject> PossessedObjects; // 0x440
	UObject* DirectorClass; // 0x490
};

struct UAkCheckBox : UContentWidget {
	ECheckBoxState CheckedState; // 0x4d0
	FDelegate CheckedStateDelegate; // 0x4d4
	FCheckBoxStyle WidgetStyle; // 0x4e8
	EHorizontalAlignment HorizontalAlignment; // 0xa68
	bool IsFocusable; // 0xa69
	FAkBoolPropertyToControl ThePropertyToControl; // 0xa70
	FAkWwiseItemToControl ItemToControl; // 0xa80
	FMulticastInlineDelegate AkOnCheckStateChanged; // 0xac0
	FMulticastInlineDelegate OnItemDropped; // 0xad0
	FMulticastInlineDelegate OnPropertyDropped; // 0xae0
};

struct ABravoHotelVehicleSpawner : AActor {
	ABravoHotelVehicle* SpawnedVehicle; // 0x328
	bool bActivated; // 0x330
};

struct UClothingAssetBase : UObject {
	FString ImportedFilePath; // 0x28
	FGuid AssetGuid; // 0x38
};

struct ULandscapeSplinesComponent : UPrimitiveComponent {
	TArray<ULandscapeSplineControlPoint*> ControlPoints; // 0x4b0
	TArray<ULandscapeSplineSegment*> Segments; // 0x4c0
	TArray<UMeshComponent*> CookedForeignMeshComponents; // 0x4d0
};

struct ASkyAtmosphere : AInfo {
	USkyAtmosphereComponent* SkyAtmosphereComponent; // 0x328
};

struct UComponentDelegateBinding : UDynamicBlueprintBinding {
	TArray<FBlueprintComponentDelegateBinding> ComponentDelegateBindings; // 0x28
};

struct UBravoHotelIconImageWidget : UUserWidget {
	UImage* Image_133; // 0x248
	UImage* Icon; // 0x250
	UImage* Bg; // 0x258
	UOverlay* Overlay_36; // 0x260
	UWidgetAnimation* NewAnimation; // 0x268
};

struct ULoadTableAsset : UPrimaryDataAsset {
	TArray<TSoftObjectPtr<UDataTable>> ItemTables; // 0x30
	TArray<TSoftObjectPtr<UDataTable>> ItemValueTables; // 0x40
};

struct UFSM_SetState_ConditionalAsyncWithCallbacks : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	FSM_Transition Conditional; // 0x38
	FDelegate InBegin; // 0x3c
	FDelegate InExit; // 0x4c
	FName StateName; // 0x5c
	float Timer; // 0x64
	bool Repeat; // 0x68
	FTimerHandle TimerHandle; // 0x70
	FMulticastInlineDelegate OnSuccess; // 0x78
	FMulticastInlineDelegate OnAborted; // 0x88
};

struct UParticleModuleLocation : UParticleModuleLocationBase {
	FRawDistributionVector StartLocation; // 0x30
	float DistributeOverNPoints; // 0x78
	float DistributeThreshold; // 0x7c
};

struct UReplicationGraphNode : UObject {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct ULiveLinkVirtualSubject : UObject {
	ULiveLinkRole* Role; // 0x30
	TArray<FLiveLinkSubjectName> Subjects; // 0x38
	TArray<ULiveLinkFrameTranslator*> FrameTranslators; // 0x48
};

struct UMovieSceneEventRepeaterSection : UMovieSceneEventSectionBase {
	FMovieSceneEvent Event; // 0xe0
};

struct UMovieSceneCapture : UObject {
	FSoftClassPath ImageCaptureProtocolType; // 0x38
	FSoftClassPath AudioCaptureProtocolType; // 0x50
	UMovieSceneImageCaptureProtocolBase* ImageCaptureProtocol; // 0x68
	UMovieSceneAudioCaptureProtocolBase* AudioCaptureProtocol; // 0x70
	FMovieSceneCaptureSettings Settings; // 0x78
	bool bUseSeparateProcess; // 0xe8
	bool bCloseEditorWhenCaptureStarts; // 0xe9
	FString AdditionalCommandLineArguments; // 0xf0
	FString InheritedCommandLineArguments; // 0x100
};

struct UNavModifierComponent : UNavRelevantComponent {
	UNavArea* AreaClass; // 0xe0
	FVector FailsafeExtent; // 0xe8
	char bIncludeAgentHeight : 1; // 0xf4
};

struct UGeometryCollection : UObject {
	TArray<UMaterialInterface*> Materials; // 0x30
	ECollisionTypeEnum CollisionType; // 0x40
	EImplicitTypeEnum ImplicitType; // 0x41
	int32_t MinLevelSetResolution; // 0x44
	int32_t MaxLevelSetResolution; // 0x48
	int32_t MinClusterLevelSetResolution; // 0x4c
	int32_t MaxClusterLevelSetResolution; // 0x50
	float CollisionObjectReductionPercentage; // 0x54
	bool bMassAsDensity; // 0x58
	float Mass; // 0x5c
	float MinimumMassClamp; // 0x60
	float CollisionParticlesFraction; // 0x64
	int32_t MaximumCollisionParticles; // 0x68
	TArray<FGeometryCollectionSizeSpecificData> SizeSpecificData; // 0x70
	bool EnableRemovePiecesOnFracture; // 0x80
	TArray<UMaterialInterface*> RemoveOnFractureMaterials; // 0x88
	FGuid PersistentGuid; // 0x98
	FGuid StateGuid; // 0xa8
	int32_t BoneSelectedMaterialIndex; // 0xb8
};

struct UBP_GameSettings_C : UBravoHotelLocalSavedSettings {
	float Look Horizontal Sensitivity; // 0x120
	float Look Vertical Sensitivity; // 0x124
	bool Look Horizontal Invert; // 0x128
	bool Look Vertical Invert; // 0x129
	TScriptInterface<IBPI_GameSettingsInterface_C> Game Settings Interface; // 0x130
	FString Save File Name; // 0x140
	int32_t Save File User Index; // 0x150
	TArray<FSAudioUpdateStruct> AudioEmittors; // 0x158
	float Audio Multiplier Master; // 0x168
	float Audio Multiplier Music; // 0x16c
	float Audio Multiplier Voice; // 0x170
	float Audio Multiplier Effect; // 0x174
	float Audio Multiplier Ambient; // 0x178
	float Audio Multiplier UI; // 0x17c
	float Volume Master; // 0x180
	float Volume Music; // 0x184
	float Volume Voice; // 0x188
	float Volume Effect; // 0x18c
	float Volume Ambient; // 0x190
	int32_t Video X Resolution; // 0x194
	int32_t Video Y Resolution; // 0x198
	TArray<UCameraComponent*> Camera List; // 0x1a0
	EWindowMode Screen Mode; // 0x1b0
	int32_t Resolution Scale Quality; // 0x1b4
	float View Distance Scale; // 0x1b8
	int32_t Anti Aliasing Quality; // 0x1bc
	int32_t Post Processing Quality; // 0x1c0
	int32_t Shadow Quality; // 0x1c4
	int32_t Texture Quality; // 0x1c8
	int32_t Effect Quality; // 0x1cc
	int32_t Foliage Quality; // 0x1d0
	float Field Of View FOV; // 0x1d4
	float Motion Blur Strength; // 0x1d8
	bool VSync Enabled; // 0x1dc
	bool My Custom Checkbox; // 0x1dd
	int32_t My Custom RadioBox; // 0x1e0
	float My Custom Slider; // 0x1e4
	float Bloom Intensity; // 0x1e8
	float Gamma Intensity; // 0x1ec
	float Gain Intensity; // 0x1f0
	UBP_GameSettings_C* Previous Setting State; // 0x1f8
	FString My Custom Combobox; // 0x200
	float Current Frame Time; // 0x210
	TArray<UBP_KeyAction_C*> Key Actions; // 0x218
	TArray<UBP_KeyInput_C*> Input Float Axis List; // 0x228
	TArray<FSKeyActionSave> Saved Key Inputs; // 0x238
	float Volume UI; // 0x248
	EWindowMode Old ScreenMode State; // 0x24c
	float TemporalAAFilterSize; // 0x250
	bool TemporalAACatmullRom; // 0x254
	bool TemporalAAPauseCorrect; // 0x255
	float TemporalAACurrentFrameWeight; // 0x258
	int32_t TemporalAASamples; // 0x25c
	float TonemapperSharpen; // 0x260
	float MinBrightness; // 0x264
	float MaxBrightness; // 0x268
	float Contrast; // 0x26c
	bool PostProcessVolume; // 0x270
	bool ScreenModeChange; // 0x271
	bool FilmToe; // 0x272
	float ColorGrading Global Gamma; // 0x274
	bool ClearFog; // 0x278
	int32_t ViewDistanceQuality; // 0x27c
	int32_t ScalabilityQuality; // 0x280
	int32_t CurrentFileVersion; // 0x284
	int32_t UpdateFileVersion; // 0x288
	bool Smooth Frame Enabled; // 0x28c
};

struct UInterpTrackInstSound : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
	UAudioComponent* PlayAudioComp; // 0x30
};

struct ABP-MK3DReplayController_C : ABravoHotelMK3DReplayController {
	FPointerToUberGraphFrame UberGraphFrame; // 0xad0
	UBP-HUDInteractionComponent_C* BP-HUDInteractionComponent; // 0xad8
	int32_t OpenedWidgetNum; // 0xae0
	EReplayViewMode ViewMode; // 0xae4
};

struct UAnimSharingAdditiveInstance : UAnimInstance {
	TWeakObjectPtr<USkeletalMeshComponent> baseComponent; // 0x268
	TWeakObjectPtr<UAnimSequence> AdditiveAnimation; // 0x270
	float ALPHA; // 0x278
	bool bStateBool; // 0x27c
};

struct UPawnAction_Move : UPawnAction {
	AActor* GoalActor; // 0x98
	FVector GoalLocation; // 0xa0
	float AcceptableRadius; // 0xac
	UNavigationQueryFilter* FilterClass; // 0xb0
	char bAllowStrafe : 1; // 0xb8
	char bFinishOnOverlap : 1; // 0xb8
	char bUsePathfinding : 1; // 0xb8
	char bAllowPartialPath : 1; // 0xb8
	char bProjectGoalToNavigation : 1; // 0xb8
	char bUpdatePathToGoal : 1; // 0xb8
	char bAbortChildActionOnPathChange : 1; // 0xb8
};

struct UHudSettings : UObject {
	char bShowHUD : 1; // 0x28
	TArray<FName> DebugDisplay; // 0x30
};

struct UARTrackedQRCode : UARTrackedImage {
	FString QRCode; // 0xf8
	int32_t Version; // 0x108
};

struct UAkMacInitializationSettings : UObject {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkAdvancedInitializationSettingsWithMultiCoreRendering AdvancedSettings; // 0xb8
};

struct UInputAxisKeyDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings; // 0x28
};

struct UParticleModuleVectorFieldLocal : UParticleModuleVectorFieldBase {
	UVectorField* VectorField; // 0x30
	FVector RelativeTranslation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale3D; // 0x50
	float Intensity; // 0x5c
	float Tightness; // 0x60
	char bIgnoreComponentTransform : 1; // 0x64
	char bTileX : 1; // 0x64
	char bTileY : 1; // 0x64
	char bTileZ : 1; // 0x64
	char bUseFixDT : 1; // 0x64
};

struct UAkMusicSyncCallbackInfo : UAkCallbackInfo {
	int32_t PlayingID; // 0x30
	FAkSegmentInfo SegmentInfo; // 0x34
	EAkCallbackType MusicSyncType; // 0x58
	FString UserCueName; // 0x60
};

struct UNavMovementComponent : UMovementComponent {
	FNavAgentProperties NavAgentProps; // 0xf0
	float FixedPathBrakingDistance; // 0x120
	char bUpdateNavAgentWithOwnersCollision : 1; // 0x124
	char bUseAccelerationForPaths : 1; // 0x124
	char bUseFixedBrakingDistanceForPaths : 1; // 0x124
	FMovementProperties MovementState; // 0x125
	UObject* PathFollowingComp; // 0x128
};

struct UEditableTextBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FEditableTextBoxStyle EditableTextBoxStyle; // 0x30
};

struct UUW-Exit_Popup_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Bg; // 0x250
	UButton* btn_Cancel; // 0x258
	UButton* btn_OK; // 0x260
	UImage* Image_2; // 0x268
};

struct UMagicLeapTouchpadGesturesComponent : UActorComponent {
	FMulticastInlineDelegate OnTouchpadGestureStart; // 0xb8
	FMulticastInlineDelegate OnTouchpadGestureContinue; // 0xc8
	FMulticastInlineDelegate OnTouchpadGestureEnd; // 0xd8
};

struct UABP-InventoryPawn_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x270
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8; // 0x278
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0x338
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x3b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x428
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7; // 0x4a0
	FAnimNode_HandIKRetargeting AnimGraphNode_HandIKRetargeting_2; // 0x560
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_4; // 0x680
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3; // 0x860
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_3; // 0x880
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0xa60
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3; // 0xb68
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_8; // 0xb88
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_6; // 0xc40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0xd08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0xd80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0xdf8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0xe70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0xf30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0xfa8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0x1020
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x10e0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_4; // 0x1158
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_7; // 0x1208
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0x12c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x12e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x1388
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_6; // 0x1400
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x14b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x1530
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x15d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x1648
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0x16e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x17a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x1818
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x18b8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0x1930
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x19e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x1a60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x1b00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x1b78
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0x1c18
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x1c40
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x1c68
	FAnimNode_HandIKRetargeting AnimGraphNode_HandIKRetargeting; // 0x1c90
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_2; // 0x1db0
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0x1f90
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK; // 0x1fb0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x2190
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x2298
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x22b8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_5; // 0x2330
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x23f8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x2470
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_11; // 0x2490
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_10; // 0x28d0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x2d10
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_9; // 0x2d30
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_8; // 0x3170
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_7; // 0x35b0
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_6; // 0x39f0
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_5; // 0x3e30
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_4; // 0x4270
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_3; // 0x46b0
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_2; // 0x4af0
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics; // 0x4f30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x5370
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x53e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x5488
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x5500
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x5578
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x5618
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_26; // 0x5690
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_25; // 0x58e0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_24; // 0x5b30
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_23; // 0x5d80
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_22; // 0x5fd0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_21; // 0x6220
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x6470
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0x64e8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x65a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x6658
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x66d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x6780
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x6840
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_4; // 0x68b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x6980
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x69f8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x6a70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x6b30
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_3; // 0x6ba8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x6c70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x6ce8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x6d60
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_2; // 0x6dd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x6ea0
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_8; // 0x6f18
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_7; // 0x7030
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_6; // 0x7148
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_5; // 0x7260
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_4; // 0x7378
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_3; // 0x7490
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController_2; // 0x75a8
	FAnimNode_BoneDrivenController AnimGraphNode_BoneDrivenController; // 0x76c0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_20; // 0x77e0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_19; // 0x7a30
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_18; // 0x7c80
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_17; // 0x7ed0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_16; // 0x8120
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_15; // 0x8370
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_14; // 0x85c0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_13; // 0x8810
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_12; // 0x8a60
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_11; // 0x8cb0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_10; // 0x8f00
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_9; // 0x9150
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_8; // 0x93a0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_7; // 0x95f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x9840
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive; // 0x98b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x9980
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x99a8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x99d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x99f8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0x9a20
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x9ad8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x9b98
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x9c50
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x9d08
	FAnimNode_Root AnimGraphNode_Root; // 0x9db8
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_6; // 0x9df0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_5; // 0xa040
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_4; // 0xa290
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_3; // 0xa4e0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_2; // 0xa730
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics; // 0xa980
	ABravoHotelCharacter* Character; // 0xabd0
	EWeaponAnimationType WeaponAnimType; // 0xabd8
	UAnimSequence* HandAnim; // 0xabe0
	FVector HandL_Location; // 0xabe8
	FRotator HandL_Rotation; // 0xabf4
	ABP-CharacterRecording_C* Recorder; // 0xac00
	EWeaponAttachmentGrip GripType; // 0xac08
	bool IsEquippingNormalGrip; // 0xac09
	UAnimSequence* UnarmedIdlePose; // 0xac10
	int32_t IdleNum; // 0xac18
	bool bIsMale; // 0xac1c
	bool bIsEquippingGatling; // 0xac1d
	bool bIsEquippingRPG; // 0xac1e
	ABravoHotelInventoryCharacter* InventoryCharacter; // 0xac20
	FVector AnimDynamicsForce; // 0xac28
	float PrevMeshRotationYaw; // 0xac34
	float BoneDrivenValue; // 0xac38
};

struct AController : AActor {
	APawn* Pawn; // 0x340
	FRotator ControlRotation; // 0x348
	APlayerState* PlayerState; // 0x358
	USceneComponent* TransformComponent; // 0x368
	FMulticastInlineDelegate OnInstigatedAnyDamage; // 0x378
	ACharacter* Character; // 0x388
	FName StateName; // 0x3b8
	char bAttachToPawn : 1; // 0x3c0
};

struct ULocationServicesImpl : UObject {
	FMulticastInlineDelegate OnLocationChanged; // 0x28
};

struct UNiagaraDataInterfaceExport : UNiagaraDataInterface {
	FNiagaraUserParameterBinding CallbackHandlerParameter; // 0x30
};

struct USoundEffectSourcePresetChain : UObject {
	TArray<FSourceEffectChainEntry> Chain; // 0x28
	char bPlayEffectChainTails : 1; // 0x38
};

struct UBravoHotelAnimNotify_TimedPostProcess : UAnimNotify {
	FName EffectRowName; // 0x38
	float Duration; // 0x40
	bool bFPPOnly; // 0x44
};

struct UGameplayTaskResource : UObject {
	int32_t ManualResourceID; // 0x28
	int8_t AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UBravoHotelLobbyWidget : UUserWidget {
	FBravoHotelLobbyMapSetting DefaultMapSetting; // 0x248
};

struct UWheeledVehicleMovementComponent4W : UWheeledVehicleMovementComponent {
	FVehicleEngineData EngineSetup; // 0x290
	FVehicleDifferential4WData DifferentialSetup; // 0x330
	float AckermannAccuracy; // 0x34c
	FVehicleTransmissionData TransmissionSetup; // 0x350
	FRuntimeFloatCurve SteeringCurve; // 0x380
};

struct UEquippableComponent : UActorComponent {
	ACharacter* OwningPawn; // 0xc0
	FInventoryItemInfo ItemInfo; // 0xc8
	uint16_t OriginItemIndex; // 0x160
	int32_t EquippedSlotIndex; // 0x164
	int32_t AttachedSlotIndex; // 0x168
};

struct UDatasmithLightComponentTemplate : UDatasmithObjectTemplate {
	char bVisible : 1; // 0x30
	char CastShadows : 1; // 0x34
	char bUseTemperature : 1; // 0x34
	char bUseIESBrightness : 1; // 0x34
	float Intensity; // 0x38
	float Temperature; // 0x3c
	float IESBrightnessScale; // 0x40
	FLinearColor LightColor; // 0x44
	UMaterialInterface* LightFunctionMaterial; // 0x58
	UTextureLightProfile* IESTexture; // 0x60
};

struct UBravoHotelVehicleMovementComponent4W : UBravoHotelVehicleMovementComponent {
	FVehicleDifferential4WData DifferentialSetup; // 0x618
	TArray<float> WreckedDifferentialLateralWeights; // 0x638
	float AckermannAccuracy; // 0x648
};

struct UUW-VehicleSeatWidget_C : UUserWidget {
	UImage* Image_81; // 0x248
	UImage* Image_86; // 0x250
	UImage* Image_88; // 0x258
	UImage* Image_89; // 0x260
	UImage* Image_90; // 0x268
	UImage* Image_91; // 0x270
	UImage* Image_92; // 0x278
	UImage* Image_93; // 0x280
	UImage* Image_94; // 0x288
	UImage* Image_95; // 0x290
	UImage* Image_96; // 0x298
	UImage* Image_97; // 0x2a0
	UImage* Image_98; // 0x2a8
	UImage* Image_99; // 0x2b0
	UImage* Image_100; // 0x2b8
	UImage* Image_101; // 0x2c0
	UImage* Image_102; // 0x2c8
	UImage* Image_103; // 0x2d0
	UImage* Image_104; // 0x2d8
	UImage* Image_107; // 0x2e0
	UImage* Image_108; // 0x2e8
	UImage* Image_119; // 0x2f0
	UImage* Image_120; // 0x2f8
	UImage* Image_121; // 0x300
	UImage* Image_122; // 0x308
	UImage* Image_123; // 0x310
	UImage* Image_134; // 0x318
	UImage* Image_137; // 0x320
	UImage* Image_138; // 0x328
	UImage* Image_139; // 0x330
	UImage* Image_140; // 0x338
	UImage* Image_141; // 0x340
	UImage* Image_142; // 0x348
	UImage* Image_143; // 0x350
	UImage* Image_144; // 0x358
	UImage* Image_145; // 0x360
	UImage* Image_146; // 0x368
	UImage* Image_147; // 0x370
	UImage* Image_148; // 0x378
	UImage* Image_149; // 0x380
	UImage* Image_152; // 0x388
	UImage* Image_153; // 0x390
	UImage* Image_154; // 0x398
	UImage* Image_155; // 0x3a0
	UImage* Image_156; // 0x3a8
	UImage* Image_157; // 0x3b0
	UImage* Image_158; // 0x3b8
	UImage* Image_159; // 0x3c0
	UImage* Image_160; // 0x3c8
	UImage* Image_161; // 0x3d0
	UImage* Image_162; // 0x3d8
	UImage* Image_163; // 0x3e0
	UImage* Image_164; // 0x3e8
	UWidgetSwitcher* WidgetSwitcher_1; // 0x3f0
};

struct UBravoHotelGameMatchEndWidget : UUserWidget {
	EGameResultWidgetMode CurrentGameResultWidgetMode; // 0x250
	bool bIsShowingSimpleResult; // 0x251
	FTimerHandle TimerHandle_ShowSimpleResult; // 0x258
	FMatchEndSimpleResult SimpleResultData; // 0x270
	bool bIsShowingFinalResult; // 0x380
	FMatchEndFinalResult FinalResultData; // 0x381
	FTimerHandle TimerHandle_ShowFinalResult; // 0x388
	bool bIsShowingMatchEndAnimation; // 0x3a0
	FTimerHandle TimerHandle_ShowMatchEndAnimation; // 0x3a8
	FMatchEndAnimation MatchEndAnimationData; // 0x3c0
};

struct UParticleModuleRotation_Seeded : UParticleModuleRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UPartyBeaconState : UObject {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	int32_t NumTeams; // 0x38
	int32_t NumPlayersPerTeam; // 0x3c
	FName TeamAssignmentMethod; // 0x40
	int32_t ReservedHostTeamNum; // 0x48
	int32_t ForceTeamNum; // 0x4c
	bool bRestrictCrossConsole; // 0x50
	bool bEnableRemovalRequests; // 0x51
	TArray<FPartyReservation> Reservations; // 0x58
};

struct ACullDistanceVolume : AVolume {
	TArray<FCullDistanceSizePair> CullDistances; // 0x360
	char bEnabled : 1; // 0x370
};

struct UParticleModuleVectorFieldScale : UParticleModuleVectorFieldBase {
	UDistributionFloat* VectorFieldScale; // 0x30
	FRawDistributionFloat VectorFieldScaleRaw; // 0x38
};

struct UCoherentUIGTHUD : UCoherentUIGTBaseComponent {
	FSoftObjectPath HUDMaterialName; // 0x230
	UMaterial* HUDMaterial; // 0x248
	UMaterialInstanceDynamic* HUDMaterialInstance; // 0x250
};

struct UAkRoomComponent : UAkGameObject {
	char bEnable : 1; // 0x250
	UAkRoomComponent* NextLowerPriorityComponent; // 0x258
	float Priority; // 0x260
	float WallOcclusion; // 0x264
	float AuxSendLevel; // 0x268
	bool AutoPost; // 0x26c
};

struct UAkLinuxInitializationSettings : UObject {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkAdvancedInitializationSettingsWithMultiCoreRendering AdvancedSettings; // 0xb8
};

struct UBTTask_RunBehaviorDynamic : UBTTaskNode {
	FGameplayTag InjectionTag; // 0x70
	UBehaviorTree* DefaultBehaviorAsset; // 0x78
	UBehaviorTree* BehaviorAsset; // 0x80
};

struct UScaleBox : UContentWidget {
	EStretch Stretch; // 0x120
	EStretchDirection StretchDirection; // 0x121
	float UserSpecifiedScale; // 0x124
	bool IgnoreInheritedScale; // 0x128
};

struct UCustomizableObjectSystem : UObject {
	TArray<FPendingReleaseSkeletalMeshInfo> PendingReleaseSkeletalMesh; // 0x28
	UCustomizableObjectImageProviderArray* PreviewExternalImageProvider; // 0x48
	TArray<UTexture2D*> ProtectedCachedTextures; // 0x150
	UCustomizableInstanceLODManagementBase* DefaultInstanceLODManagement; // 0x170
	UCustomizableInstanceLODManagementBase* CurrentInstanceLODManagement; // 0x178
};

struct UFSM_SetState_ConditionalAsync : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	FSM_Transition Conditional; // 0x38
	FName StateName; // 0x3c
	float Timer; // 0x44
	bool Repeat; // 0x48
	FTimerHandle TimerHandle; // 0x50
	FMulticastInlineDelegate OnSuccess; // 0x58
	FMulticastInlineDelegate OnAborted; // 0x68
};

struct UUW-Lobby_Craft_List_Category_Slot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_Weapon; // 0x250
	UHorizontalBox* HorizontalBox_Rarity; // 0x258
	UImage* Image_2; // 0x260
	UImage* Image_3; // 0x268
	UImage* Image_4; // 0x270
	UImage* Image_5; // 0x278
	UImage* Image_6; // 0x280
	UImage* Image_7; // 0x288
	UImage* Image_8; // 0x290
	UImage* Image_310; // 0x298
	UImage* Image_Item_Weapon; // 0x2a0
	UImage* Image_New; // 0x2a8
	UTextBlock* T_Name; // 0x2b0
	UWidgetSwitcher* WidgetSwitcher_Own; // 0x2b8
	UUW-Lobby_Craft_List_Category_C* ParentWidgetRef; // 0x2c0
	FItemCrafting CraftingInfo; // 0x2c8
	TArray<int32_t> CraftMaterialItemIDList; // 0x3f0
	int32_t CraftMaterialWeaponID; // 0x400
	bool IsOwn; // 0x404
	bool IsOwnAny; // 0x405
	UPaperSprite* DefaultImage; // 0x408
	UPaperSprite* PressedDefaultImage; // 0x410
	bool IsNew; // 0x418
};

struct ABravoHotelProjectileFlame : ABravoHotelProjectileGrenade {
	TSet<TWeakObjectPtr<AActor>> OverlappedVehicles; // 0x688
	UParticleSystemComponent* FlameParticle; // 0x6d8
	UParticleSystemComponent* FlameEndParticle; // 0x6e0
	AActor* FireCellClass; // 0x6e8
	float LifeTime; // 0x6f0
	float DamageTime; // 0x6f4
	float FireDamage; // 0x6f8
	float FireShrinkTime; // 0x6fc
	float FireCellSpawnTime; // 0x700
	float FirePropagationRange; // 0x704
	int32_t FirePropagationLevelMax; // 0x708
	float FirePropagationLevelWidth; // 0x70c
	TArray<float> FirePropagationDivideAnglePerLevel; // 0x710
	UAkAudioEvent* FlybyEvent; // 0x720
	FAudioPlayingHandle FlybySoundHandle; // 0x728
	FName WeaponName; // 0x72c
	FString NewWeaponName; // 0x738
};

struct USourceEffectEQPreset : USoundEffectSourcePreset {
	FSourceEffectEQSettings Settings; // 0x78
};

struct ABravoHotelSimulationActor : ABravoHotelActor {
	USceneComponent* Root; // 0x328
	UStaticMeshComponent* SimulationStaticMesh; // 0x330
	float LifeTime; // 0x338
};

struct UUW-SightInfo_C : UBravoHotelSightInfoWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UCanvasPanel* Canvas_Charge; // 0x250
	UImage* ChargeIndicator; // 0x258
	UImage* Image_LeanDamageBg; // 0x260
	UImage* IMG_Gauge1; // 0x268
	UImage* IMG_Gauge2; // 0x270
	UImage* IMG_Gauge3; // 0x278
	UImage* IMG_Gauge4; // 0x280
	UImage* IMG_Gauge5; // 0x288
	UImage* IMG_Gauge6; // 0x290
	UTextBlock* LeftTime; // 0x298
	UOverlay* Overlay_Gauge; // 0x2a0
	UTextBlock* T_BulletsPerShot; // 0x2a8
	UTextBlock* T_Damage; // 0x2b0
	UTextBlock* T_RPM; // 0x2b8
	UVerticalBox* VerticalBox_Damage; // 0x2c0
	ABravoHotelCharacter* BravoHotelCharacter; // 0x2c8
	TArray<UImage*> GaugeIMGArray; // 0x2d0
	int32_t LastGauge; // 0x2e0
	bool Timer_; // 0x2e4
	FTimerHandle Timer_UpdateInfos; // 0x2e8
	UMaterialInstanceDynamic* ChargeIndicatorDynamicMaterial; // 0x2f0
};

struct UNiagaraDataInterfaceCamera : UNiagaraDataInterface {
	int32_t PlayerControllerIndex; // 0x30
};

struct UMicroTransactionBase : UPlatformInterfaceBase {
	TArray<FPurchaseInfo> AvailableProducts; // 0x38
	FString LastError; // 0x48
	FString LastErrorSolution; // 0x58
};

struct UProxyLODMeshSimplificationSettings : UDeveloperSettings {
	FName ProxyLODMeshReductionModuleName; // 0x38
};

struct UMaterialExpressionDDY : UMaterialExpression {
	FExpressionInput Value; // 0x40
};

struct ABravoHotelVehicle : AWheeledVehicle {
	UBravoHotelVehicleMovementComponent* BravoHotelWheeledVehicleMovementComponent; // 0x3b8
	FLinearColor CurrentDirtColor; // 0x490
	FLinearColor InBlueZoneDirtColor; // 0x4a4
	TArray<FRepVehicleSeatInfo> SeatInfos; // 0x4b8
	float NitroJumpImpulseModifier; // 0x4d8
	float AppearTime; // 0x4e0
	char bWannaFreecamInterpToOrigin : 1; // 0x4e4
	float UpdateDirtMatTargetSeconds; // 0x4f8
	float NitroJumpMaxSpeedKmH; // 0x4fc
	FVehiclePostPhysicsTickFunction PostPhysicsTick; // 0x508
	bool IsHandlebar; // 0x538
	bool bResetPhysicsOnWater; // 0x539
	float BoosterTargetArmLength; // 0x53c
	FVector NitroBoomTargetUiOffset; // 0x540
	UBravoHotelSTMComponent* STMComponent; // 0x550
	UParticleSystem* NitroBoomParticle; // 0x558
	TArray<UAkAudioEvent*> DamagedSounds; // 0x560
	TArray<UBravoHotelPhysicalMaterial*> WheelPhysicalMaterials; // 0x570
	float SaveYawValue; // 0x5b8
	float FloodedTimeForBreakDown; // 0x5bc
	ABravoHotelCharacter* OccupiedLocalPawn; // 0x5c8
	char bFreecam : 1; // 0x5d8
	UAkAudioEvent* ExplosionSound; // 0x5f0
	bool bWannaInterpCam; // 0x5f8
	UAkAudioEvent* OnEnterToWaterSound; // 0x600
	FRotator NitroJumpStartRotationCache; // 0x608
	bool bOverridePhysicsErrorCorrection; // 0x614
	bool bIsAmphibiousMode; // 0x615
	float StartReplaceFreeLookTime; // 0x618
	TArray<ABravoHotelCharacter*> CrashDamageAbusingList; // 0x620
	TArray<UBravoHotelVehicleSeatComponent*> CachedVehicleSeats; // 0x630
	float ReplaceFreeLookDurationTime; // 0x640
	TArray<UParticleSystem*> DamagedEffects; // 0x648
	float NitroJumpRotationInterpSpeed; // 0x658
	FMulticastInlineDelegate OnBoosterChangedDelegate; // 0x660
	USceneComponent* AppearComponent; // 0x678
	EVehicleState ReplicatedVehicleState; // 0x6d0
	int32_t AnimRate_BaseNonRenderedUpdateRate; // 0x6d4
	UAkAudioEvent* DamagedStopSound; // 0x6d8
	UCurveFloat* HandbrakeSoundVolumeCurve; // 0x6e8
	AController* LastDamageInstigator; // 0x6f0
	USpringArmComponent* SpringArm; // 0x6f8
	UCameraShake* CrashCameraShake; // 0x700
	float ModeChangingTime; // 0x708
	UBravoHotelPhysicalMaterial* LastPhysicalMaterial; // 0x710
	FRotator ReplicatedBaseAimRotation; // 0x71c
	bool bAllOfWheelsInTheWater; // 0x729
	float BoosterCameraInterpSpeed; // 0x72c
	FName DamagedEffectSocketName; // 0x734
	UParticleSystem* OnEnterToWaterParticle; // 0x740
	FTimerHandle TimerHandle_NitroBoom; // 0x798
	float LongSlipThreshold; // 0x7a4
	UAkAudioEvent* EngineStartEvent; // 0x7a8
	FTimerHandle TimerHandle_FlashingLights; // 0x7b0
	UCameraComponent* RearCamera; // 0x7b8
	float FuelAmount; // 0x7c0
	TArray<UParticleSystemComponent*> AdditionalFxs; // 0x7c8
	TArray<UParticleSystemComponent*> BoosterParticleComponents; // 0x7e8
	UAkAudioEvent* HandbrakeAudioEvent; // 0x7f8
	float ExplosionUpwardSpeed; // 0x850
	bool bIsFPPMode; // 0x854
	UParticleSystem* WaterPlaneParticle; // 0x860
	TArray<FRepVehicleSeatInfo> PreSeatInfos; // 0x868
	UBravoHotelDamageType_Impulse* ImpulseDamageType; // 0x878
	float SavedArmLength; // 0x898
	FTimerHandle TimerHandle_UpdateFrontBackLight; // 0x8a0
	TArray<FName> FloodedCheckSocketNames; // 0x8a8
	float WaterLevelZ; // 0x8b8
	UAkAudioEvent* NitroBoomAlarmSound; // 0x8c0
	UAkAudioEvent* VehicleHornStop; // 0x8c8
	TArray<UParticleSystem*> BeforeExplosionEffects; // 0x8d0
	FTimerHandle TimerHandle_TurnOnFrontBackLight; // 0x8e0
	ABravoHotelMaterialEffectActor* AppearEffectActorClass; // 0x8e8
	UAkAudioEvent* OnAppearLandingSound; // 0x8f8
	FMulticastInlineDelegate OnWheelWrecked; // 0x900
	UAkAudioEvent* HandbrakeStopAudioEvent; // 0x910
	UAkComponent* AkComponent; // 0x918
	float CameraShakeScale; // 0x924
	TArray<UBravoHotelVehicleTireComponent*> CachedTireComponents; // 0x930
	float HealthPoint; // 0x940
	TArray<ABravoHotelCharacter*> NearbyCharacaters; // 0x978
	UBravoHotelVehicleData* VehicleData; // 0x990
	UAkAudioEvent* TiringPauseAudioEvent; // 0x9a0
	UNetDormantComponent* NetDormantComponent; // 0x9b8
	UAkAudioEvent* CrashAudioEvent; // 0x9c8
	USceneComponent* VehicleSeats; // 0x9e0
	float LatSlipThreshold; // 0x9e8
	UAkAudioEvent* VehicleHornMute; // 0x9f0
	AController* CurInstigator; // 0x9f8
	ABravoHotelMaterialEffectActor* DisappearEffectActorClass; // 0xa00
	float WaterSurfaceOffsetZ; // 0xa08
	TArray<float> AfterExplosionEffectLifeTimes; // 0xa10
	FName ExplosionEffectSocketName; // 0xa28
	float CurrentInputMoveRight; // 0xa30
	FLinearColor OutBlueZoneDirtColor; // 0xa38
	float MinCrashSoundImpulse; // 0xa4c
	UParticleSystemComponent* WaterPlaneFx; // 0xa50
	bool bUseInterpCameraRot; // 0xa58
	FTimeline Timeline_FlashingLights; // 0xa60
	bool bIsOnTheWater; // 0xb08
	TArray<UParticleSystem*> AfterExplosionEffects; // 0xb10
	UParticleSystem* OnAppearLanding; // 0xb20
	UAkAudioEvent* LandingAudioEvent; // 0xb30
	UAkAudioEvent* OnExitFromWaterSound; // 0xb40
	float LightTurnOnSpeed; // 0xb48
	float ExplosionImpulseStrength; // 0xb4c
	TArray<FMolotovFlameDotDamageInfo> FlameDamageInfos; // 0xb50
	UCurveFloat* SuspensionSoundVolumeCurve; // 0xb68
	UAkAudioEvent* VehicleHorn; // 0xb70
	UStaticMeshComponent* WreckedMeshComponent; // 0xb78
	float FrontLightValue; // 0xb8c
	UParticleSystem* NitroJumpEndParticle; // 0xb90
	UParticleSystemComponent* DamagedEffectComponent; // 0xba0
	TMap<int32_t, int32_t> AnimRate_LODToFrameSkipMap; // 0xbb8
	TMap<FName, UParticleSystem*> AdditionalWaterParticle; // 0xc08
	UParticleSystem* OnExitFromWaterParticle; // 0xc58
	TArray<int16_t> TireHealthPoints; // 0xc68
	UParticleSystem* ExplosionEffect; // 0xc80
	float MaxCrashSoundImpulse; // 0xc88
	float InterpTargetArmLength; // 0xc8c
	UBravoHotelVehicleSeatComponent* DriverSeatComponent; // 0xca8
	UTeamInfoUpdaterComponent* TeamInfoUpdaterComponentRef; // 0xcb8
	float BrakeLightValue; // 0xcc8
	bool bIsNitroJumping; // 0xcd2
	UAkAudioEvent* EngineStopEvent; // 0xce8
	UCurveFloat* Curve_FlashingLights; // 0xcf0
	bool bUseInterpCameraRot_Pitch; // 0xcf8
	float RearLightValue; // 0xcfc
	FRigidBodyErrorCorrection VehicleErrorCorrection; // 0xd00
	bool bIsFlameDamaged; // 0xd34
	UAkAudioEvent* TiringResumeAudioEvent; // 0xd40
};

struct ASpectatorBeaconHost : AOnlineBeaconHostObject {
	USpectatorBeaconState* State; // 0x350
	bool bLogoutOnSessionTimeout; // 0x3b8
	float SessionTimeoutSecs; // 0x3bc
	float TravelSessionTimeoutSecs; // 0x3c0
};

struct UInterpTrackMove : UInterpTrack {
	FInterpCurveVector PosTrack; // 0x70
	FInterpCurveVector EulerTrack; // 0x88
	FInterpLookupTrack LookupTrack; // 0xa0
	FName LookAtGroupName; // 0xb0
	float LinCurveTension; // 0xb8
	float AngCurveTension; // 0xbc
	char bUseQuatInterpolation : 1; // 0xc0
	char bShowArrowAtKeys : 1; // 0xc0
	char bDisableMovement : 1; // 0xc0
	char bShowTranslationOnCurveEd : 1; // 0xc0
	char bShowRotationOnCurveEd : 1; // 0xc0
	char bHide3DTrack : 1; // 0xc0
	EInterpTrackMoveRotMode RotMode; // 0xc4
};

struct UParticleModuleLight : UParticleModuleLightBase {
	bool bUseInverseSquaredFalloff; // 0x30
	bool bAffectsTranslucency; // 0x31
	bool bPreviewLightRadius; // 0x32
	float SpawnFraction; // 0x34
	FRawDistributionVector ColorScaleOverLife; // 0x38
	FRawDistributionFloat BrightnessOverLife; // 0x80
	FRawDistributionFloat RadiusScale; // 0xb0
	FRawDistributionFloat LightExponent; // 0xe0
	FLightingChannels LightingChannels; // 0x110
	float VolumetricScatteringIntensity; // 0x114
	bool bHighQualityLights; // 0x118
	bool bShadowCastingLights; // 0x119
};

struct ABravoHotelAreaSkillZoneWetFog : ABravoHotelAreaSkillZone {
	FWetFogZoneInfo WetFogZoneInfo; // 0x3a0
	TArray<ABravoHotelCharacter*> EffectActiveCharacters; // 0x3b0
};

struct UCircularThrobber : UWidget {
	int32_t NumberOfPieces; // 0x108
	float Period; // 0x10c
	float Radius; // 0x110
	USlateBrushAsset* PieceImage; // 0x118
	FSlateBrush Image; // 0x120
	bool bEnableRadius; // 0x1a8
};

struct UBHBWaterGhillie : UBravoHotelBuffBase {
	FString BuffMutableString; // 0x2b8
};

struct UUW-Radar_tutorial_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image; // 0x250
	UImage* Image_2; // 0x258
	UImage* Image_3; // 0x260
	UImage* Image_4; // 0x268
	UImage* Image_917; // 0x270
	UImage* Img_TypeIcon; // 0x278
	UKeyImageWidget_C* KeyImageWidget; // 0x280
	UKeyImageWidget_C* KeyImageWidget_2; // 0x288
	UKeyImageWidget_C* KeyImageWidget_3; // 0x290
	UKeyImageWidget_C* KeyImageWidget_4; // 0x298
	UKeyImageWidget_C* KeyImageWidget_5; // 0x2a0
	UTextBlock* T_Context; // 0x2a8
	UTextBlock* T_Context_2; // 0x2b0
	UTextBlock* T_Context_3; // 0x2b8
	UTextBlock* T_Context_4; // 0x2c0
	UTextBlock* T_Context_5; // 0x2c8
	UTextBlock* Text_SkillName; // 0x2d0
	UVerticalBox* VB_Nuclear; // 0x2d8
	UVerticalBox* VB_Retreat; // 0x2e0
	UWidgetSwitcher* WidgetSwitcher_126; // 0x2e8
};

struct UBHCharacterReplication : UActorComponent {
	char bIsFreeLook : 1; // 0xc0
	char bFPSK_WantToFPSMode : 1; // 0xc0
	char bIsFlameDamaged : 1; // 0xc0
	char bIsChargingGauge : 1; // 0xc0
	char bIsShowingLandingPosition : 1; // 0xc0
	int32_t KnockOutCount; // 0xc4
	int32_t CriticalTimeCount; // 0xc8
	char ReplicatedStateID; // 0xcc
	FInventoryItemInfo CastingItemInfo; // 0xd0
	FVector_NetQuantize SearchInstinctLocation; // 0x168
	FCastingInfo CastingInfo; // 0x178
	AActor* RevivingActor; // 0x190
	AActor* ResuscitatedTargetActor; // 0x198
	AActor* InteractedTargetActor; // 0x1a0
	TArray<ACharacter*> Revivers; // 0x1a8
	TArray<ACharacter*> Resuscitaters; // 0x1b8
	UBravoHotelVehicleSeatComponent* OccupyingVehicleSeat; // 0x1c8
};

struct UWorld : UMKWorldEx {
	ULevel* PersistentLevel; // 0x48
	UNetDriver* NetDriver; // 0x50
	ULineBatchComponent* LineBatcher; // 0x58
	ULineBatchComponent* PersistentLineBatcher; // 0x60
	ULineBatchComponent* ForegroundLineBatcher; // 0x68
	AGameNetworkManager* NetworkManager; // 0x70
	UPhysicsCollisionHandler* PhysicsCollisionHandler; // 0x78
	TArray<UObject*> ExtraReferencedObjects; // 0x80
	TArray<UObject*> PerModuleDataObjects; // 0x90
	TArray<AActor*> LevelSequenceActors; // 0xa0
	TArray<ULevelStreaming*> StreamingLevels; // 0xb0
	FStreamingLevelsToConsider StreamingLevelsToConsider; // 0xc0
	FString StreamingLevelsPrefix; // 0x120
	ULevel* CurrentLevelPendingVisibility; // 0x130
	ULevel* CurrentLevelPendingInvisibility; // 0x138
	UDemoNetDriver* DemoNetDriver; // 0x140
	AParticleEventManager* MyParticleEventManager; // 0x148
	APhysicsVolume* DefaultPhysicsVolume; // 0x150
	char bAreConstraintsDirty : 1; // 0x16e
	UNavigationSystemBase* NavigationSystem; // 0x170
	AGameModeBase* AuthorityGameMode; // 0x178
	AGameStateBase* GameState; // 0x180
	UAISystemBase* AISystem; // 0x188
	UAvoidanceManager* AvoidanceManager; // 0x190
	TArray<ULevel*> Levels; // 0x198
	TArray<FLevelCollection> LevelCollections; // 0x1a8
	UGameInstance* OwningGameInstance; // 0x1d8
	TArray<UMaterialParameterCollectionInstance*> ParameterCollectionInstances; // 0x1e0
	UCanvas* CanvasForRenderingToTarget; // 0x1f0
	UCanvas* CanvasForDrawMaterialToRenderTarget; // 0x1f8
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate; // 0x250
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x260
	UWorldComposition* WorldComposition; // 0x5b0
	FWorldPSCPool PSCPool; // 0x650
};

struct UBravoHotelMuzzleEffectComponent : UActorComponent {
	FName MuzzleAttachPoint; // 0xb0
	TArray<bool> ChancePool; // 0xb8
	int32_t BulletCountToSpawnMultiFireEffect; // 0xc8
	int32_t SpawnInterval; // 0xcc
	FName MuzzleAttachPoint_1P; // 0xe0
	FName MuzzleAttachPoint_ADS; // 0xe8
	TMap<EWeaponAttachmentMuzzleDevice, FMuzzleEffect> MuzzleEffects; // 0xf0
	UParticleSystem* ReadyEffect; // 0x140
	UParticleSystem* WarmupEffect; // 0x148
	FName WarmupAlphaParameter; // 0x150
	float WarmupAlphaTime; // 0x158
	UCurveFloat* WarmupAlphaCurve; // 0x160
	FTimerHandle TimerHandle_WarmupOff; // 0x168
	FTimerHandle TimerHandle_WarmupUpdate; // 0x170
	EWeaponAttachmentMuzzleDevice CurrentMuzzleType; // 0x178
	UParticleSystemComponent* MuzzleFlashComponent; // 0x180
	UParticleSystemComponent* MuzzleSmokeComponent; // 0x188
	UParticleSystemComponent* ReadyEffectComponent; // 0x190
	UParticleSystemComponent* WarmupEffectComponent; // 0x198
	float PrevSpawnTime; // 0x1a0
	bool bAttachSpawnedEffect; // 0x1a4
	bool bUsePreShootRotationToFlash; // 0x1a5
};

struct USubmixEffectFilterPreset : USoundEffectSubmixPreset {
	FSubmixEffectFilterSettings Settings; // 0x74
};

struct UWheeledVehicleMovementComponent : UPawnMovementComponent {
	char bDeprecatedSpringOffsetMode : 1; // 0x140
	char bReverseAsBrake : 1; // 0x140
	char bUseRVOAvoidance : 1; // 0x140
	char bRawHandbrakeInput : 1; // 0x140
	char bRawGearUpInput : 1; // 0x140
	char bRawGearDownInput : 1; // 0x140
	char bWasAvoidanceUpdated : 1; // 0x144
	float Mass; // 0x148
	TArray<FWheelSetup> WheelSetups; // 0x150
	float DragCoefficient; // 0x160
	float ChassisWidth; // 0x164
	float ChassisHeight; // 0x168
	float DragArea; // 0x16c
	float EstimatedMaxEngineSpeed; // 0x170
	float MaxEngineRPM; // 0x174
	float DebugDragMagnitude; // 0x178
	FVector InertiaTensorScale; // 0x17c
	float MinNormalizedTireLoad; // 0x188
	float MinNormalizedTireLoadFiltered; // 0x18c
	float MaxNormalizedTireLoad; // 0x190
	float MaxNormalizedTireLoadFiltered; // 0x194
	float ThresholdLongitudinalSpeed; // 0x198
	int32_t LowForwardSpeedSubStepCount; // 0x19c
	int32_t HighForwardSpeedSubStepCount; // 0x1a0
	TArray<UVehicleWheel*> Wheels; // 0x1a8
	ECollisionChannel WheelsCollisionChannel; // 0x1b8
	float RVOAvoidanceRadius; // 0x1d0
	float RVOAvoidanceHeight; // 0x1d4
	float AvoidanceConsiderationRadius; // 0x1d8
	float RVOSteeringStep; // 0x1dc
	float RVOThrottleStep; // 0x1e0
	int32_t AvoidanceUID; // 0x1e4
	FNavAvoidanceMask AvoidanceGroup; // 0x1e8
	FNavAvoidanceMask GroupsToAvoid; // 0x1ec
	FNavAvoidanceMask GroupsToIgnore; // 0x1f0
	float AvoidanceWeight; // 0x1f4
	FVector PendingLaunchVelocity; // 0x1f8
	FReplicatedVehicleState ReplicatedState; // 0x204
	float RawSteeringInput; // 0x21c
	float RawThrottleInput; // 0x220
	float RawBrakeInput; // 0x224
	float SteeringInput; // 0x228
	float ThrottleInput; // 0x22c
	float BrakeInput; // 0x230
	float HandbrakeInput; // 0x234
	float IdleBrakeInput; // 0x238
	float StopThreshold; // 0x23c
	float WrongDirectionThreshold; // 0x240
	FVehicleInputRate ThrottleInputRate; // 0x244
	FVehicleInputRate BrakeInputRate; // 0x24c
	FVehicleInputRate HandbrakeInputRate; // 0x254
	FVehicleInputRate SteeringInputRate; // 0x25c
	AController* OverrideController; // 0x288
};

struct UMaterialFunctionInterface : UObject {
	FGuid StateID; // 0x28
	EMaterialFunctionUsage MaterialFunctionUsage; // 0x38
};

struct UUserDefinedStruct : UScriptStruct {
	EUserDefinedStructureStatus status; // 0xc0
	FGuid Guid; // 0xc4
};

struct ABravoHotelPlayerState : APlayerState {
	bool bCriticalTime; // 0x430
	FString MatchingTeamID; // 0x438
	uint32_t MatchingTeamIdHash; // 0x448
	char MatchableCountByDS; // 0x44c
	char MaxTeamPlayerCount; // 0x44d
	FString PlayerSessionId; // 0x450
	int32_t LoginMemberIndex; // 0x470
	TArray<ABravoHotelPlayerState*> TeamPlayers; // 0x478
	UBHReplicatedPlayerInfo* ReplicatedPlayerInfo; // 0x5b0
	UBHReplicatedPlayStat* ReplicatedPlayStat; // 0x5b8
	UBHReplicatedAppearanceInfo* ReplicatedAppearanceInfo; // 0x5c0
	FMulticastInlineDelegate OnChangePlayerState; // 0x5c8
	ABravoHotelCharacter* OwnerCharacter; // 0x5e0
	FPerkVechicleInfo InNmPerkVechicleInfo; // 0x5e8
	ABravoHotelPlayerSubState* SubState; // 0x610
	FDummyInfo DummyInfo; // 0x618
	UBravoHotelGamePlayStatistics* GamePlayStatistics; // 0x670
	EPlayerState CurrentState; // 0x679
	bool bIsTalking; // 0x692
	TArray<FInventoryItemInfo> PersonalSupplyBoxAdditionalItemList; // 0x698
	int32_t MaterialItemPingIndex; // 0x764
	TMap<int32_t, FMaterialItemPingInfo> MaterialPingList; // 0x768
	int32_t LocalPingIndex; // 0x7b8
	TMap<int32_t, FBravoHotelLocalPingInfo> LocalPingList; // 0x7c0
	FExpertWeaponPingInfo ExpertWeaponPing; // 0x810
};

struct UUW-Lobby_Craft_List_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UComboBoxString* ComboBoxString_Sort_2; // 0x250
	UImage* Down_2; // 0x258
	UImage* Image; // 0x260
	UImage* Img_BG; // 0x268
	UOverlay* Overlay_2; // 0x270
	UTextBlock* SortText_2; // 0x278
	UImage* Up_2; // 0x280
	UUW-Lobby_Craft_List_Category_C* UW-Lobby_RecipeList_Category; // 0x288
	UUW-Lobby_Craft_List_Category_C* UW-Lobby_RecipeList_Category_2; // 0x290
	UUW-Lobby_Craft_List_Category_C* UW-Lobby_RecipeList_Category_3; // 0x298
	UVerticalBox* VerticalBox_Category; // 0x2a0
	TMap<FString, UUW-Lobby_Craft_List_Category_C*> CategoryList; // 0x2a8
	TArray<FString> SortTypeList; // 0x2f8
	UUW-Lobby_Craft_List_Category_C* LastOpenedCategory; // 0x308
	bool IsOwn; // 0x310
	bool IsOwnAny; // 0x311
	int32_t CraftingID; // 0x314
	FText TextAll; // 0x318
	int32_t LanguageIndex; // 0x330
};

struct UEnvQueryTest_Pathfinding : UEnvQueryTest {
	EEnvTestPathfinding TestMode; // 0x1f8
	UEnvQueryContext* Context; // 0x200
	FAIDataProviderBoolValue PathFromContext; // 0x208
	FAIDataProviderBoolValue SkipUnreachable; // 0x240
	UNavigationQueryFilter* FilterClass; // 0x278
};

struct ASceneCapture2D : ASceneCapture {
	USceneCaptureComponent2D* CaptureComponent2D; // 0x338
};

struct UInterpTrackInstVisibility : UInterpTrackInst {
	EVisibilityTrackAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
};

struct UParticleModuleRotationRate_Seeded : UParticleModuleRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UBravoHotelDataManager : UObject {
	ABattleRoyaleGameMode* BattleRoyalGameMode; // 0x3f0
	ABravoHotelCharacter* ClientLogCharacter; // 0x5d8
};

struct USubTitleSlotWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image; // 0x250
	UImage* Image_2; // 0x258
	UImage* Image_4; // 0x260
	UImage* Image_5; // 0x268
	UImage* Image_6; // 0x270
	UImage* Image_473; // 0x278
	UTextBlock* TextBlock_1; // 0x280
	FText Title; // 0x288
};

struct UUW-RankPoint_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UHorizontalBox* HorizontalBox_Next; // 0x250
	UProgressBar* ProgressBar_Current; // 0x258
	UProgressBar* ProgressBar_Down; // 0x260
	UProgressBar* ProgressBar_Up; // 0x268
	UTextBlock* TextBlock_Current; // 0x270
	UTextBlock* TextBlock_Max; // 0x278
	UTextBlock* TextBlock_Next; // 0x280
	bool EnableUpdate; // 0x288
	float CurTime; // 0x28c
	float ShowTime; // 0x290
	float EndPoint; // 0x294
	float ChangeValue; // 0x298
	float StartPoint; // 0x29c
	float Min; // 0x2a0
	float MAX; // 0x2a4
	bool IsUPState; // 0x2a8
	FMulticastInlineDelegate Dispatcher_ProgressBarDone; // 0x2b0
};

struct UMaterialExpressionMax : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UInterpTrackInstVectorProp : UInterpTrackInstProperty {
	FVector ResetVector; // 0x58
};

struct USimplygonGeometryDataCaster : USimplygonMaterialCaster {
	FGeometryDataCasterSettings GeometryDataCasterSettings; // 0x30
};

struct UNiagaraSettings : UDeveloperSettings {
	TArray<FSoftObjectPath> AdditionalParameterTypes; // 0x38
	TArray<FSoftObjectPath> AdditionalPayloadTypes; // 0x48
	TArray<FSoftObjectPath> AdditionalParameterEnums; // 0x58
	FSoftObjectPath DefaultEffectType; // 0x68
	TArray<FText> QualityLevels; // 0x80
	UNiagaraEffectType* DefaultEffectTypePtr; // 0x90
};

struct USplineMeshComponent : UStaticMeshComponent {
	FSplineMeshParams SplineParams; // 0x550
	FVector SplineUpDir; // 0x5a8
	float SplineBoundaryMin; // 0x5b4
	FGuid CachedMeshBodySetupGuid; // 0x5b8
	UBodySetup* BodySetup; // 0x5c8
	float SplineBoundaryMax; // 0x5d0
	char bAllowSplineEditingPerInstance : 1; // 0x5d4
	char bSmoothInterpRollScale : 1; // 0x5d4
	char bMeshDirty : 1; // 0x5d4
	ESplineMeshAxis ForwardAxis; // 0x5d5
	float VirtualTextureMainPassMaxDrawDistance; // 0x5d8
};

struct UParticleModuleRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionFloat LifeMultiplier; // 0x30
};

struct ULevel : UObject {
	UWorld* OwningWorld; // 0xb8
	UModel* Model; // 0xc0
	TArray<UModelComponent*> ModelComponents; // 0xc8
	ULevelActorContainer* ActorCluster; // 0xd8
	int32_t NumTextureStreamingUnbuiltComponents; // 0xe0
	int32_t NumTextureStreamingDirtyResources; // 0xe4
	ALevelScriptActor* LevelScriptActor; // 0xe8
	ANavigationObjectBase* NavListStart; // 0xf0
	ANavigationObjectBase* NavListEnd; // 0xf8
	TArray<UNavigationDataChunk*> NavDataChunks; // 0x100
	float LightmapTotalSize; // 0x110
	float ShadowmapTotalSize; // 0x114
	TArray<FVector> StaticNavigableGeometry; // 0x118
	TArray<FGuid> StreamingTextureGuids; // 0x128
	FGuid LevelBuildDataId; // 0x1d0
	UMapBuildDataRegistry* MapBuildData; // 0x1e0
	FIntVector LightBuildLevelOffset; // 0x1e8
	char bIsLightingScenario : 1; // 0x1f4
	char bTextureStreamingRotationChanged : 1; // 0x1f4
	char bStaticComponentsRegisteredInStreamingManager : 1; // 0x1f4
	char bIsVisible : 1; // 0x1f4
	AWorldSettings* WorldSettings; // 0x240
	TArray<UAssetUserData*> AssetUserData; // 0x250
	TArray<FReplicatedStaticActorDestructionInfo> DestroyedReplicatedStaticActors; // 0x270
};

struct UGameRuleInvokerComponent : UActorComponent {
	bool bIsFollowingRule; // 0xb0
};

struct UBravoHotelVehicleWidget : UUserWidget {
	bool IsShow; // 0x248
	float Fuel; // 0x24c
	float hp; // 0x250
	FString Speed; // 0x258
	FString Name; // 0x268
	TArray<FSeatInfo> SeatInfoList; // 0x278
	TArray<FWheelInfo> WheelInfoList; // 0x288
	ABravoHotelVehicle* Vehicle; // 0x298
};

struct UMaterialExpressionArccosine : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UNiagaraDataInterfaceGrid3D : UNiagaraDataInterfaceRWBase {
	FIntVector NumVoxels; // 0xd0
	float VoxelSize; // 0xdc
	bool SetGridFromVoxelSize; // 0xe0
	FVector WorldBBoxSize; // 0xe4
};

struct USettingMainWidget_C : UBravoHotelSettingWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UImage* 1-1; // 0x3e0
	UImage* 2-1; // 0x3e8
	UImage* 2-2; // 0x3f0
	UButtomButtonWidget_C* ApplyButton; // 0x3f8
	USettingSubButtonWidget_C* Audio; // 0x400
	UCanvasPanel* CanvasPanel_61; // 0x408
	UCanvasPanel* CanvasPanel_279; // 0x410
	USettingSubButtonWidget_C* Control; // 0x418
	UVerticalBox* CrossHair; // 0x420
	UCrossHairDetailInfo_C* CrossHairDetailInfo; // 0x428
	UCrossHairDetailInfo_C* CrossHairDetailInfo_2; // 0x430
	UCrossHairDetailInfo_C* CrossHairDetailInfo_3; // 0x438
	UCrossHairDetailInfo_C* CrossHairDetailInfo_4; // 0x440
	UTextBlock* CurDesc; // 0x448
	UTextBlock* CurDesc2; // 0x450
	UTextBlock* CurTitle; // 0x458
	UButtomButtonWidget_C* DefaultButton; // 0x460
	USettingSubButtonWidget_C* Dev; // 0x468
	USettingSubButtonWidget_C* GamePlay; // 0x470
	UButtomButtonWidget_C* GoBackButton; // 0x478
	USettingSubButtonWidget_C* Graphic; // 0x480
	UImage* Image; // 0x488
	UImage* Image_2; // 0x490
	UImage* Image_3; // 0x498
	UImage* Image_4; // 0x4a0
	UImage* Image_109; // 0x4a8
	UImage* Image_128; // 0x4b0
	UImage* Image_129; // 0x4b8
	UImage* Image_154; // 0x4c0
	UImage* Image_323; // 0x4c8
	UImage* Image_417; // 0x4d0
	UImage* Image_951; // 0x4d8
	UImage* Image_953; // 0x4e0
	USettingSubButtonWidget_C* Key; // 0x4e8
	UKeyImageWidget_C* KeyImageMain; // 0x4f0
	UProgressBar* ProgressBar_317; // 0x4f8
	USlider* Slider_299; // 0x500
	UTextBlock* TextBlock; // 0x508
	UTextBlock* TextBlock_1; // 0x510
	UTextBlock* TextBlock_2; // 0x518
	UTextBlock* TextBlock_3; // 0x520
	UTextBlock* TextBlock_5; // 0x528
	UTextBlock* TextBlock_7; // 0x530
	UVerticalBox* VerticalBox_149; // 0x538
	UWidgetSwitcher* WidgetSwitcher_113; // 0x540
	FMulticastInlineDelegate EnableButtonEventDispatcher; // 0x548
	UBP_GameSettings_C* Game Settings; // 0x558
	TMap<ESettingType, UBravoHotelSettingSlotWidget*> SlotList_1; // 0x560
	UGraphicWidget_C* GraphicWidget; // 0x5b0
	UAudioWidget_C* AudioWidget; // 0x5b8
	UControlWidget_C* ControlWidget; // 0x5c0
	UKeyWidget_C* KeyWidget; // 0x5c8
	UGamePlayWidget_C* GamePlayWidget; // 0x5d0
	USettingDevWidget_C* SettingDevWidget; // 0x5d8
	int32_t GraphicSwitcherIndex; // 0x5e0
	int32_t AudioSwitcherIndex; // 0x5e4
	int32_t ControlSwitcherIndex; // 0x5e8
	int32_t KeySwitcherIndex; // 0x5ec
	int32_t SettingDevSwitcherIndex; // 0x5f0
	int32_t GamePlaySwitcherIndex; // 0x5f4
	FTimerHandle KeyNotiTimer; // 0x5f8
	float KeyNotiMessageShowTime; // 0x600
	TSoftObjectPtr<UTexture2D> TempImg; // 0x608
	UBravoHotelSettingSlotWidget* SavedDescData; // 0x630
};

struct USoundNodeWavePlayer : USoundNodeAssetReferencer {
	TSoftObjectPtr<USoundWave> SoundWaveAssetPtr; // 0x48
	USoundWave* SoundWave; // 0x70
	char bLooping : 1; // 0x78
};

struct UBHReplicatedAppearanceInfo : UActorComponent {
	FRepCharacterAppearanceInfo AppearanceInfo; // 0xc0
	FTimerHandle TimerHandle_ReplicatedAppearanceInfo; // 0xd8
};

struct UMovieSceneSequence : UMovieSceneSignedObject {
	FMovieSceneEvaluationTemplate PrecompiledEvaluationTemplate; // 0x50
	EMovieSceneCompletionMode DefaultCompletionMode; // 0x340
	bool bParentContextsAreSignificant; // 0x341
	bool bPlayableDirectly; // 0x342
};

struct UUW-MapImageWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_Hide_Ima; // 0x250
	UWidgetAnimation* Anim_Hide_text; // 0x258
	UWidgetAnimation* Anim_Show_Ima; // 0x260
	UWidgetAnimation* Anim_Show_text; // 0x268
	UCanvasPanel* Canvas_Main; // 0x270
	UHorizontalBox* HorizontalBox_86; // 0x278
	UImage* Image_130; // 0x280
	UImage* Image_811; // 0x288
	UImage* Img_MapImage; // 0x290
	UTextBlock* MatchType; // 0x298
	UTextBlock* MaxPlayerCount; // 0x2a0
	UOverlay* Overlay_Text; // 0x2a8
	UTextBlock* PersonType; // 0x2b0
	UTextBlock* T_MapImageDesc; // 0x2b8
	UTextBlock* T_MapImageTitle; // 0x2c0
	UTextBlock* Ultimate; // 0x2c8
	bool IsShowText; // 0x2d0
	FTimerHandle Timer_HideMapImage; // 0x2d8
	int32_t LastZoomLevel; // 0x2e0
	float WantOpacity; // 0x2e4
	UUW-MainWidget_C* MainWidgetRef; // 0x2e8
	bool IsShowImage; // 0x2f0
	EToggleWidgetModeType LastWidgetType; // 0x2f1
	FText UltimateText; // 0x2f8
};

struct UMovieSceneAudioTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AudioSections; // 0x58
};

struct UInventoryComponent : UActorComponent {
	bool bBindItem; // 0xc0
	bool bKeepItem; // 0xc1
	int32_t NumInventorySlots; // 0xc4
	TArray<FInventoryItemInfo> BackPackItems; // 0xc8
	AActor* BootyBoxClass; // 0xd8
	int32_t CurrentlyHealthItemCount; // 0xe0
	TMap<FName, FName> OverrideItems; // 0xe8
	float MaxLoad; // 0x138
	TArray<FInventoryItemInfo> ReplicationBackPackItems; // 0x190
	float CurrentlyLoaded; // 0x1a0
	int32_t SortType; // 0x1a4
	bool bNoDropItem; // 0x1a8
	bool bNoDropYesBox; // 0x1a9
	FMulticastInlineDelegate LoadInventoryFromServer; // 0x1b0
	FMulticastInlineDelegate ChangeRepBackpackItemDelegate; // 0x1c0
	FMulticastInlineDelegate ChangeBackpackItemDelegate; // 0x1d0
	FMulticastInlineDelegate NotEnoughSpaceDelegate; // 0x1e0
	UItemSortOrder* InventoryItemSortOrder; // 0x230
	TSoftObjectPtr<UDataAsset> InventoryItemSortOrderSoftAsset; // 0x238
	UItemSortOrder* PickupItemSortOrder; // 0x260
	TSoftObjectPtr<UDataAsset> PickupItemSortOrderSoftAsset; // 0x268
	TArray<ABravoHotelCharacter*> Watchers; // 0x298
};

struct UCameraAnim : UObject {
	UInterpGroup* CameraInterpGroup; // 0x28
	float AnimLength; // 0x30
	FBox BoundingBox; // 0x34
	char bRelativeToInitialTransform : 1; // 0x50
	char bRelativeToInitialFOV : 1; // 0x50
	float BaseFOV; // 0x54
	FPostProcessSettings BasePostProcessSettings; // 0x60
	float BasePostProcessBlendWeight; // 0x620
};

struct UUW-Inventory_Material_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Character_BG_Motion; // 0x250
	UImage* Image_308; // 0x258
	UScrollBox* ScrollBox_KeepedList; // 0x260
	UTextBlock* TextBlock_Count; // 0x268
	ABP-BravoHotel-PlayerController_C* PlayerController; // 0x270
};

struct UUW-MatchEnd_Ranking2_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Hide; // 0x250
	UWidgetAnimation* RankDown; // 0x258
	UWidgetAnimation* RankUp; // 0x260
	UWidgetAnimation* Anim_Reward; // 0x268
	UImage* Arrow_3; // 0x270
	UImage* ArrowLine_3; // 0x278
	UImage* BottomLine_3; // 0x280
	UImage* BrightSpot_01; // 0x288
	UImage* BrightSpot_02; // 0x290
	UImage* BrightSpot_03; // 0x298
	UImage* BrightSpot_04; // 0x2a0
	UImage* BrightSpot_05; // 0x2a8
	UButton* Button_DamageInfo; // 0x2b0
	UButton* Button_DeathCam_2; // 0x2b8
	UButton* Button_Exit; // 0x2c0
	UButton* Button_KillCam; // 0x2c8
	UButton* Button_Report; // 0x2d0
	UButton* Button_Spectate; // 0x2d8
	UCanvasPanel* CanvasPanel_3; // 0x2e0
	UCanvasPanel* CanvasPanel_9; // 0x2e8
	UCanvasPanel* CanvasPanel_1174; // 0x2f0
	UCanvasPanel* CanvasPanel_1384; // 0x2f8
	UImage* Glow1; // 0x300
	UImage* Glow2; // 0x308
	UImage* Glow3; // 0x310
	UImage* Glow_01; // 0x318
	UImage* GlowLine; // 0x320
	UImage* Gold; // 0x328
	UImage* Image_26; // 0x330
	UImage* Image_27; // 0x338
	UImage* Image_28; // 0x340
	UImage* Image_29; // 0x348
	UImage* Image_216; // 0x350
	UImage* Image_223; // 0x358
	UImage* Image_458; // 0x360
	UImage* Image_559; // 0x368
	UImage* Image_CurrentRANK; // 0x370
	UImage* Image_DownRANK; // 0x378
	UImage* Image_UpRANK; // 0x380
	UImage* L_Wing01; // 0x388
	UImage* L_Wing01_2; // 0x390
	UImage* L_Wing01_5; // 0x398
	UImage* L_Wing02; // 0x3a0
	UImage* L_Wing02_2; // 0x3a8
	UImage* L_Wing02_5; // 0x3b0
	UImage* L_Wing03; // 0x3b8
	UImage* L_Wing03_2; // 0x3c0
	UImage* L_Wing03_5; // 0x3c8
	UImage* L_WingLine; // 0x3d0
	UImage* L_WingLine_3; // 0x3d8
	UImage* Light_2; // 0x3e0
	UImage* Light_01; // 0x3e8
	UImage* Light_02; // 0x3f0
	UImage* Light_03; // 0x3f8
	UImage* Light_04; // 0x400
	UImage* Light_05; // 0x408
	UImage* Light_06; // 0x410
	UOverlay* Overlay_264; // 0x418
	UOverlay* Overlay_DamageInfo; // 0x420
	UOverlay* Overlay_KillCam; // 0x428
	UOverlay* Overlay_KillCamReplay; // 0x430
	UOverlay* Overlay_Report; // 0x438
	UOverlay* Overlay_Spectate; // 0x440
	UImage* R_Wing01; // 0x448
	UImage* R_Wing01_2; // 0x450
	UImage* R_Wing01_5; // 0x458
	UImage* R_Wing01_6; // 0x460
	UImage* R_Wing02; // 0x468
	UImage* R_Wing02_2; // 0x470
	UImage* R_Wing02_5; // 0x478
	UImage* R_Wing02_6; // 0x480
	UImage* R_Wing03; // 0x488
	UImage* R_Wing03_2; // 0x490
	UImage* R_Wing03_5; // 0x498
	UImage* R_Wing03_6; // 0x4a0
	UImage* R_WingLine; // 0x4a8
	UImage* R_WingLine_3; // 0x4b0
	UImage* Ribbon; // 0x4b8
	UImage* Ring; // 0x4c0
	UImage* RIng_Glow_01; // 0x4c8
	UScrollBox* ScrollBox_2; // 0x4d0
	UScrollBox* ScrollBox_199; // 0x4d8
	USizeBox* SizeBox_8; // 0x4e0
	UTextBlock* T_RemainTime_2; // 0x4e8
	UTextBlock* Text_Report; // 0x4f0
	UTextBlock* TextBlock_3; // 0x4f8
	UTextBlock* TextBlock_4; // 0x500
	UTextBlock* TextBlock_12; // 0x508
	UTextBlock* TextBlock_13; // 0x510
	UTextBlock* TextBlock_14; // 0x518
	UTextBlock* TextBlock_25; // 0x520
	UTextBlock* TextBlock_27; // 0x528
	UTextBlock* TextBlock_1425; // 0x530
	UTextBlock* TextBlock_2242; // 0x538
	UTextBlock* TextBlock_2769; // 0x540
	UTextBlock* TextBlock_3056; // 0x548
	UTextBlock* TextBlock_LocalMatchRP; // 0x550
	UImage* TextGlow01; // 0x558
	UImage* TextGlow02; // 0x560
	UImage* TextGlow03; // 0x568
	UImage* TopLine_3; // 0x570
	UUW-MatchEnd_GoldList_C* UW-MatchEnd_GoldList; // 0x578
	UUW-MatchEnd_GoldList_C* UW-MatchEnd_GoldList_2; // 0x580
	UUW-MatchEnd_GoldList_C* UW-MatchEnd_GoldList_3; // 0x588
	UUW-MatchEnd_RewardSlot_02_C* UW-MatchEnd_RewardSlot_02_2; // 0x590
	UUW-MatchEnd_RewardSlot_02_C* UW-MatchEnd_RewardSlot_02_3; // 0x598
	UUW-MatchEnd_RewardSlot_02_C* UW-MatchEnd_RewardSlot_02_4; // 0x5a0
	UUW-MatchEnd_RewardSlot_02_C* UW-MatchEnd_RewardSlot_02_5; // 0x5a8
	UUW-MatchEnd_RewardSlot_02_C* UW-MatchEnd_RewardSlot_02_369; // 0x5b0
	UUW-RankPoint_C* UW-RankPoint; // 0x5b8
	UUW-RewardGoldSlot_02_C* UW-RewardGoldSlot_02; // 0x5c0
	UVerticalBox* VerticalBox_191; // 0x5c8
	UWidgetSwitcher* WidgetSwitcher_2; // 0x5d0
	bool MatchEnd; // 0x5d8
	FMatchEndAnimation AnimationData; // 0x5d9
	UUW-MatchEndWidget_C* MatchEndWidgetRef; // 0x5e0
	FMatchEndSimpleResult SimpleResult; // 0x5e8
	FTimerHandle SimpleTimer; // 0x6f8
	bool IsWinningCam; // 0x700
	FAudioPlayingHandle StartSound; // 0x704
	FTimerHandle GainGoldHandle; // 0x708
	FTimerHandle GoldHandle; // 0x710
	FMatchEndFinalResult FinalResultData; // 0x718
	int32_t RandomGold; // 0x71c
	int32_t GainGoldValue; // 0x720
	UTextBlock* LocalWidget; // 0x728
	ABravoHotelPlayerState* PlayerState; // 0x730
	FTimerHandle Timehandle_Rank; // 0x738
	bool Increase; // 0x740
	bool bMaxPrograssbar; // 0x741
	int32_t CurrentRP; // 0x744
	int32_t PlayerOriRP; // 0x748
	int32_t TargetRP; // 0x74c
	int32_t NextTireRP; // 0x750
	int32_t CurrentTierID; // 0x754
	bool IsGiveUp; // 0x758
	int32_t TempRank; // 0x75c
	int32_t TempKill; // 0x760
	int32_t TempHit; // 0x764
	int32_t TempSuvival; // 0x768
	int32_t SeasonRP; // 0x76c
	int32_t GainedRP; // 0x770
	int32_t AminRPText; // 0x774
	int32_t StartRP; // 0x778
	int32_t EndRP; // 0x77c
	float ShowTime; // 0x780
	bool IsTargetCameraKiller; // 0x784
	FMulticastInlineDelegate EventDispatcher_MoveToDamageInfo; // 0x788
};

struct UNiagaraDataInterfaceCurveBase : UNiagaraDataInterface {
	TArray<float> ShaderLUT; // 0x30
	float LUTMinTime; // 0x40
	float LUTMaxTime; // 0x44
	float LUTInvTimeRange; // 0x48
	float LUTNumSamplesMinusOne; // 0x4c
	char bUseLUT : 1; // 0x50
};

struct UGizmoAxisTranslationParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float Parameter; // 0xb0
	FGizmoFloatParameterChange LastChange; // 0xb4
	FVector CurTranslationAxis; // 0xbc
	FVector CurTranslationOrigin; // 0xc8
	FTransform InitialTransform; // 0xe0
};

struct AExponentialHeightFog : AInfo {
	UExponentialHeightFogComponent* Component; // 0x328
	char bEnabled : 1; // 0x330
};

struct UBravoHotelAnimInstancePostprocess : UAnimInstance {
	ABravoHotelCharacter* Character; // 0x268
	UCharacterMovementComponent* CharacterMovementComponent; // 0x270
	float DeltaTime; // 0x278
	TArray<UAnimMontage*> AM_CheckMontageIsPlaying; // 0x280
	FVector PelvisZOffset; // 0x290
	FVector LeftFootZOffset; // 0x29c
	FVector RightFootZOffset; // 0x2a8
	FRotator LeftFootRotationOffset; // 0x2b4
	FRotator RightFootRotationOffset; // 0x2c0
	FRotator RootRotationOffset; // 0x2cc
	FVector RootZOffset; // 0x2d8
	bool bEnablePelvisZOffset; // 0x2e4
	bool bEnableLeftFootIK; // 0x2e5
	bool bEnableRightFootIK; // 0x2e6
	float ZOffsetMaxLimit; // 0x2ec
	float ZOffsetMinLimit; // 0x2f0
	float RollOffsetMaxLimit; // 0x2f4
	float RollOffsetMinLimit; // 0x2f8
	float PitchOffsetMaxLimit; // 0x2fc
	float PitchOffsetMinLimit; // 0x300
	float ZOffsetFastInterpSpeed; // 0x304
	float ZOffsetSlowinterpSpeed; // 0x308
	float RotationOffsetInterpSpeed; // 0x30c
	float RootRotationOffsetInterpSpeed; // 0x310
	FName LeftFootName; // 0x314
	FName RightFootName; // 0x31c
	FName RootName; // 0x324
	float TraceStartHeight; // 0x32c
	float TraceLengthBelowCapsule; // 0x330
	bool EnableHandIK; // 0x334
	bool bDisableHandIK_ByAnimNotifyState; // 0x335
	bool IsEquippingNormalGrip; // 0x336
	UAnimSequence* IdleHandAnim; // 0x338
	bool bIsPlayingWeaponMontage; // 0x340
	bool bForceUseGripPose; // 0x341
	FVector HandL_Location; // 0x344
	FRotator HandL_Rotation; // 0x350
	FRotator Collide_HandR_Rotation; // 0x35c
	bool bEnableCollideHandR_Rotation; // 0x368
	float HandR_Rotation_Alpha; // 0x36c
	float HandIK_BlendTime; // 0x370
	EWeaponAttachmentGrip GripType; // 0x374
	float LeanValue; // 0x378
	FRotator Spine01_LeanRotation; // 0x37c
	FRotator Lowerarm_r_LeanRotation; // 0x388
	FVector Pelvis_CrouchLeanTranslation; // 0x394
	FRotator UpperarmR_LeanRotation; // 0x3a0
	bool bUpdateLeanNodes; // 0x3ac
	FVector LeftHandActionPos; // 0x3b0
	FVector RightHandActionPos; // 0x3bc
	bool bIsInVehicle; // 0x3c8
	bool bUseDriverTwoHandIK; // 0x3c9
	bool bEnableDriverIK_HandL; // 0x3ca
	bool bEnableDriverIK_HandR; // 0x3cb
	bool bUsePassengerTwoHandIK; // 0x3cc
	float VehicleFootIKAlpha; // 0x3d0
	FVector VehicleLeftHandIK_Location; // 0x3d4
	FRotator VehicleLeftHandIK_Rotation; // 0x3e0
	FVector VehicleRightHandIK_Location; // 0x3ec
	FRotator VehicleRightHandIK_Rotation; // 0x3f8
	FVector VehicleLeftFootIK_Location; // 0x404
	FRotator VehicleLeftFootIK_Rotation; // 0x410
	FVector VehicleRightFootIK_Location; // 0x41c
	FRotator VehicleRightFootIK_Rotation; // 0x428
	bool bIsParkourArmIK; // 0x434
	bool bIsAimingDownside; // 0x435
	bool bIsIdleWeaponColliding; // 0x436
	bool bIsProneWeaponColliding; // 0x437
	float CollideAlpha; // 0x438
	bool EnableFootIK; // 0x43c
	float LeftFootTarget; // 0x440
	float RightFootTarget; // 0x444
	FVector LeftFootLocation; // 0x448
	FVector RightFootLocation; // 0x454
	bool bUseTwoHandIK; // 0x47c
	EMovementMode MovementMode; // 0x47d
	ECustomMovementMode CustomMovementMode; // 0x47e
	FVector JointTargetLocationR; // 0x480
	FVector JointTargetLocationL; // 0x48c
	FVector EffectorLocationR; // 0x498
	FVector PakourIKLocationR; // 0x4a4
	FVector PakourIKLocationL; // 0x4b0
	bool bIsProned; // 0x4bc
	FVector Pelvis_LeanTranslation; // 0x4c0
	bool bIsCrouch; // 0x4cc
	bool bIsLocallyControlled; // 0x4cd
	bool IsEquippingRangedWeapon; // 0x4ce
	FRotator UpperarmL_LeanRotation; // 0x4d0
	bool LeanLeftSide; // 0x4dc
	bool bIsOneHandSprint; // 0x4dd
	float OneHandSprintLastTime; // 0x4e0
	bool bEnableAnimDynamics; // 0x4e4
	bool bUsePonytailDynamics; // 0x4e5
	float PonytailDynamicsAlpha; // 0x4e8
	bool bUseHairDynamics; // 0x4ec
	float HairDynamicsAlpha; // 0x4f0
	bool bUseSkirtDynamics; // 0x4f4
	float SkirtDynamicsAlpha; // 0x4f8
	bool bUseBackpackDynamics; // 0x4fc
	float BackpackDynamicsAlpha; // 0x500
	bool bUseBreastDynamics; // 0x504
	bool bUseCoatDynamics; // 0x505
	bool bUseGhillieDynamics; // 0x506
	float KawaiiAlpha; // 0x508
	float BoneDrivenAlpha; // 0x50c
	float TargetKawaiiAlpha; // 0x510
	float TargetBoneDrivenAlpha; // 0x514
};

struct UMovieSceneIntegerSection : UMovieSceneSection {
	FMovieSceneIntegerChannel IntegerCurve; // 0xe0
};

struct UWindowTitleBarArea : UContentWidget {
	bool bWindowButtonsEnabled; // 0x120
	bool bDoubleClickTogglesFullscreen; // 0x121
};

struct UGizmoAxisRotationParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float Angle; // 0x68
	FGizmoFloatParameterChange LastChange; // 0x6c
	FVector CurRotationAxis; // 0x74
	FVector CurRotationOrigin; // 0x80
	FTransform InitialTransform; // 0x90
};

struct UDatasmithGLTFSceneImportData : UDatasmithSceneImportData {
	FString Generator; // 0x28
	float Version; // 0x38
	FString Author; // 0x40
	FString License; // 0x50
	FString Source; // 0x60
};

struct UUW-ReplayEventMarker_WhenReported_C : UUW-ReplayEventMarkerBasic_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a0
	UTextBlock* EventInform; // 0x2a8
	UBorder* VisualBorder; // 0x2b0
};

struct UDebugCameraControllerSettings : UDeveloperSettings {
	TArray<FDebugCameraControllerSettingsViewModeIndex> CycleViewModes; // 0x38
};

struct UStereoLayerShapeEquirect : UStereoLayerShape {
	FBox2D LeftUVRect; // 0x28
	FBox2D RightUVRect; // 0x3c
	FVector2D LeftScale; // 0x50
	FVector2D RightScale; // 0x58
	FVector2D LeftBias; // 0x60
	FVector2D RightBias; // 0x68
};

struct UBravoHotelAnimNotifyState_Melee : UAnimNotifyState {
	float UpdateFrequency; // 0x30
	FName TraceStartSocketName; // 0x34
	FName TraceEndSocketName; // 0x3c
	float TraceRadius; // 0x44
	float ApplyDamage_EndTime; // 0x48
};

struct UMaterialExpressionTransform : UMaterialExpression {
	FExpressionInput Input; // 0x40
	EMaterialVectorCoordTransformSource TransformSourceType; // 0x54
	EMaterialVectorCoordTransform TransformType; // 0x55
};

struct UInterpTrackEvent : UInterpTrack {
	TArray<FEventTrackKey> EventTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
	char bUseCustomEventName : 1; // 0x80
};

struct UBTDecorator_Blackboard : UBTDecorator_BlackboardBase {
	int32_t IntValue; // 0x90
	float FloatValue; // 0x94
	FString StringValue; // 0x98
	FString CachedDescription; // 0xa8
	char OperationType; // 0xb8
	EBTBlackboardRestart NotifyObserver; // 0xb9
};

struct UMovieSceneColorTrack : UMovieScenePropertyTrack {
	bool bIsSlateColor; // 0x88
};

struct AInteractiveFoliageActor : AStaticMeshActor {
	UCapsuleComponent* CapsuleComponent; // 0x338
	FVector TouchingActorEntryPosition; // 0x340
	FVector FoliageVelocity; // 0x34c
	FVector FoliageForce; // 0x358
	FVector FoliagePosition; // 0x364
	float FoliageDamageImpulseScale; // 0x370
	float FoliageTouchImpulseScale; // 0x374
	float FoliageStiffness; // 0x378
	float FoliageStiffnessQuadratic; // 0x37c
	float FoliageDamping; // 0x380
	float MaxDamageImpulse; // 0x384
	float MaxTouchImpulse; // 0x388
	float MaxForce; // 0x38c
	float Mass; // 0x390
};

struct ULandscapeMaterialInstanceConstant : UMaterialInstanceConstant {
	TArray<FLandscapeMaterialTextureStreamingInfo> TextureStreamingInfo; // 0x410
	char bIsLayerThumbnail : 1; // 0x420
	char bDisableTessellation : 1; // 0x420
	char bMobile : 1; // 0x420
	char bEditorToolUsage : 1; // 0x420
};

struct UControlWidget_C : UBravoHotelSettingSubWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x298
	USlotItemWidget_C* 15XSensitivity; // 0x2a0
	USlotItemWidget_C* 2XSensitivity; // 0x2a8
	USlotItemWidget_C* 4XSensitivity; // 0x2b0
	USlotItemWidget_C* 6XSensitivity; // 0x2b8
	USlotItemWidget_C* 8XSensitivity; // 0x2c0
	USlotItemWidget_C* ADSSensitivity; // 0x2c8
	USlotItemWidget_C* GeneralSensitivity; // 0x2d0
	USlotItemWidget_C* ReverseLeftAndRight; // 0x2d8
	USlotItemWidget_C* ReverseUpAndDown; // 0x2e0
	UScrollBox* ScrollBox_55; // 0x2e8
	USlotItemWidget_C* TargetingSensitivity; // 0x2f0
	USlotItemWidget_C* ToggleADS; // 0x2f8
	USlotItemWidget_C* ToggleAOS; // 0x300
	USlotItemWidget_C* ToggleCrouch; // 0x308
	USlotItemWidget_C* ToggleExLean; // 0x310
	USlotItemWidget_C* ToggleFreeLook; // 0x318
	USlotItemWidget_C* ToggleSprint; // 0x320
	USlotItemWidget_C* ToggleSteadyAim; // 0x328
	USlotItemWidget_C* ToggleWalk; // 0x330
	USlotItemWidget_C* TotalSensitivity; // 0x338
	USlotItemWidget_C* UsingDetailSensitivity; // 0x340
	USlotItemWidget_C* VehicleDriverSensitivity; // 0x348
	UVerticalBox* VerticalBox_1; // 0x350
	USlotItemWidget_C* VerticlaModifier; // 0x358
	USubTitleSlotWidget_C* L)n; // 0x360
	USubTitleSlotWidget_C* cNT; // 0x368
	USubTitleSlotWidget_C* sl{; // 0x370
	FTimerHandle ScrollBarTimer; // 0x378
};

struct UInterpTrackInstParticleReplay : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct ABravoHotelSuperBarrier : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x328
	UStaticMeshComponent* CreationEffectMeshComponent; // 0x330
	bool bIsLifeSpanExpired; // 0x338
	UDestructibleComponent* DestructibleMeshComponent; // 0x340
	UDestructibleMesh* DestructibleMeshRef; // 0x348
	float MaxHp; // 0x350
	float CurrentHP; // 0x354
	FVector_NetQuantize ImpactPointOnDestruct; // 0x358
	float BarrierDissolveValue; // 0x370
	UParticleSystem* ParticleSystem_OnSpawn; // 0x378
	UAkAudioEvent* AkSound_OnSpawn; // 0x380
	UAkAudioEvent* AKSound_Destructed; // 0x388
	UAkAudioEvent* AkSound_Melee; // 0x390
	UParticleSystemComponent* ParticleSystemComponent_OnSpawn; // 0x398
};

struct UUW-Inventory_CharacterPreView_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* FadeIn; // 0x250
	UImage* CharacterPreviewImage; // 0x258
	UImage* Image_CharacterSilBody; // 0x260
	ABP-BravoHotel-PlayerController_C* ControllerRef; // 0x268
};

struct UCommandlet : UObject {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UParticleModuleEventReceiverSpawn : UParticleModuleEventReceiverBase {
	FRawDistributionFloat SpawnCount; // 0x40
	char bUseParticleTime : 1; // 0x70
	char bUsePSysLocation : 1; // 0x70
	char bInheritVelocity : 1; // 0x70
	FRawDistributionVector InheritVelocityScale; // 0x78
	TArray<UPhysicalMaterial*> PhysicalMaterials; // 0xc0
	char bBanPhysicalMaterials : 1; // 0xd0
};

struct ABHPersonalSupplyBoxManager : AInfo {
	ABHPersonalSupplyBox* SupplyBoxClass; // 0x328
	TArray<FPersonalSupplyPhaseInfo> ListPhaseInfo; // 0x330
	int32_t CurrentPhaseNum; // 0x340
	TArray<ABHPersonalSupplyBox*> ListUsableSupplyBox; // 0x348
	TMap<int32_t, ABHPersonalSupplyBox*> MapSupplyBox; // 0x358
	FName TestRandomTableID; // 0x3a8
	bool UseTestRandom; // 0x3b0
	TArray<ABHPersonalSupplyBox*> SpawnedSupplyBoxList; // 0x3c8
	TArray<ABHPersonalSupplyBox*> ForceSpawnedSupplyBoxList; // 0x3d8
};

struct UMKDemoActorChannel : UActorChannel {
	TArray<UObject*> PendingNetObjectsHolder; // 0x2f0
};

struct UDatasmithStaticMeshTemplate : UDatasmithObjectTemplate {
	FDatasmithMeshSectionInfoMapTemplate SectionInfoMap; // 0x30
	int32_t LightMapCoordinateIndex; // 0x80
	int32_t LightMapResolution; // 0x84
	TArray<FDatasmithMeshBuildSettingsTemplate> BuildSettings; // 0x88
	TArray<FDatasmithStaticMaterialTemplate> StaticMaterials; // 0x98
};

struct UARTextureCameraDepth : UARTexture {
	EARDepthQuality DepthQuality; // 0xd8
	EARDepthAccuracy DepthAccuracy; // 0xd9
	bool bIsTemporallySmoothed; // 0xda
};

struct UAnimNotifyState_Trail : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName FirstSocketName; // 0x38
	FName SecondSocketName; // 0x40
	ETrailWidthMode WidthScaleMode; // 0x48
	FName WidthScaleCurve; // 0x4c
	char bRecycleSpawnedSystems : 1; // 0x54
};

struct ULowEntryDouble : UObject {
	TArray<char> Bytes; // 0x28
};

struct UTimelineTemplate : UObject {
	float TimelineLength; // 0x28
	ETimelineLengthMode LengthMode; // 0x2c
	char bAutoPlay : 1; // 0x2d
	char bLoop : 1; // 0x2d
	char bReplicated : 1; // 0x2d
	char bIgnoreTimeDilation : 1; // 0x2d
	TArray<FTTEventTrack> EventTracks; // 0x30
	TArray<FTTFloatTrack> FloatTracks; // 0x40
	TArray<FTTVectorTrack> VectorTracks; // 0x50
	TArray<FTTLinearColorTrack> LinearColorTracks; // 0x60
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0x70
	FGuid TimelineGuid; // 0x80
	FName VariableName; // 0x90
	FName DirectionPropertyName; // 0x98
	FName UpdateFunctionName; // 0xa0
	FName FinishedFunctionName; // 0xa8
};

struct ABravoHotelTitleHUD : ABravoHotelBaseHUD {
	UUserWidget* LobbyWidgetClass; // 0x438
	UUserWidget* CreateCharacterWidgetClass; // 0x440
	UUserWidget* LobbyWidget; // 0x448
	UUserWidget* CreateCharacterWidget; // 0x450
	FMulticastInlineDelegate ChangedSceneDelegate; // 0x458
	FMulticastInlineDelegate ChangedLoginDelegate; // 0x468
	FMulticastInlineDelegate WaitingUserDelegate; // 0x478
};

struct UParticleModuleSpawn : UParticleModuleSpawnBase {
	FRawDistributionFloat Rate; // 0x38
	FRawDistributionFloat RateScale; // 0x68
	EParticleBurstMethod ParticleBurstMethod; // 0x98
	TArray<FParticleBurst> BurstList; // 0xa0
	FRawDistributionFloat BurstScale; // 0xb0
	char bApplyGlobalSpawnRateScale : 1; // 0xe0
};

struct UNiagaraPreviewAxis_InterpParamVector4 : UNiagaraPreviewAxis_InterpParamBase {
	FVector4 Min; // 0x40
	FVector4 MAX; // 0x50
};

struct UMaterialFunction : UMaterialFunctionInterface {
	FString Description; // 0x40
	char bExposeToLibrary : 1; // 0x50
	char bPrefixParameterNames : 1; // 0x50
	char bReentrantFlag : 1; // 0x50
};

struct UNiagaraPreviewAxis_InterpParamLinearColor : UNiagaraPreviewAxis_InterpParamBase {
	FLinearColor Min; // 0x38
	FLinearColor MAX; // 0x48
};

struct UReplicationGraphNode_GridCell : UReplicationGraphNode_ActorList {
	UReplicationGraphNode* StaticNode; // 0x140
	UReplicationGraphNode* DynamicNode; // 0x1d0
	UReplicationGraphNode_DormancyNode* DormancyNode; // 0x1d8
};

struct UMovieSceneStringSection : UMovieSceneSection {
	FMovieSceneStringChannel StringCurve; // 0xe0
};

struct UEdGraphNode : UObject {
	TArray<UEdGraphPin_Deprecated*> DeprecatedPins; // 0x38
	int32_t NodePosX; // 0x48
	int32_t NodePosY; // 0x4c
	int32_t NodeWidth; // 0x50
	int32_t NodeHeight; // 0x54
	ENodeAdvancedPins AdvancedPinDisplay; // 0x58
	ENodeEnabledState EnabledState; // 0x59
	char bDisplayAsDisabled : 1; // 0x5b
	char bUserSetEnabledState : 1; // 0x5b
	char bIsNodeEnabled : 1; // 0x5b
	char bHasCompilerMessage : 1; // 0x5b
	FString NodeComment; // 0x60
	int32_t ErrorType; // 0x70
	FString ErrorMsg; // 0x78
	FGuid NodeGuid; // 0x88
};

struct APartyBeaconClient : AOnlineBeaconClient {
	FString DestSessionId; // 0x3e8
	FPartyReservation PendingReservation; // 0x3f8
	EClientRequestType RequestType; // 0x448
	bool bPendingReservationSent; // 0x449
	bool bCancelReservation; // 0x44a
};

struct APlayerController : AMKPlayerControllerEx {
	int32_t ClientCap; // 0x3f4
	float InputPitchScale; // 0x3f8
	char bEnableTouchOverEvents : 1; // 0x420
	UInputComponent* InactiveStateInputComponent; // 0x430
	float ForceFeedbackScale; // 0x438
	float HitResultTraceDistance; // 0x43c
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x440
	TArray<AActor*> HiddenActors; // 0x450
	AHUD* MyHUD; // 0x478
	char bPlayerIsWaiting : 1; // 0x49c
	char bForceFeedbackEnabled : 1; // 0x4ac
	char bEnableClickEvents : 1; // 0x4ac
	float LastSpectatorStateSynchTime; // 0x4c0
	FRotator LastSpectatorSyncRotation; // 0x4c4
	float SmoothTargetViewRotationSpeed; // 0x4d0
	APlayerCameraManager* PlayerCameraManagerClass; // 0x4d8
	char bEnableTouchEvents : 1; // 0x4e0
	UTouchInterface* CurrentTouchInterface; // 0x510
	char bShouldPerformFullTickWhenPaused : 1; // 0x524
	FVector LastSpectatorSyncLocation; // 0x528
	ASpectatorPawn* SpectatorPawn; // 0x590
	EMouseCursor DefaultMouseCursor; // 0x598
	TArray<FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x5a0
	APawn* AcknowledgedPawn; // 0x5b8
	uint16_t LastCompletedSeamlessTravelCount; // 0x5c0
	bool bIsLocalPlayerController; // 0x5c2
	char bEnableMouseOverEvents : 1; // 0x5c4
	UNetConnection* PendingSwapConnection; // 0x5c8
	uint16_t SeamlessTravelCount; // 0x5d0
	UInterpTrackInstDirector* ControllingDirTrackInst; // 0x5d8
	char bShowMouseCursor : 1; // 0x5e0
	EMouseCursor CurrentMouseCursor; // 0x5e4
	FVector SpawnLocation; // 0x5e8
	FRotator TargetViewRotation; // 0x5f8
	ECollisionChannel DefaultClickTraceChannel; // 0x628
	bool bAutoManageActiveCameraTarget; // 0x629
	UCheatManager* CheatClass; // 0x630
	UPlayerInput* PlayerInput; // 0x638
	UPlayer* Player; // 0x640
	float InputYawScale; // 0x648
	UCheatManager* CheatManager; // 0x6a0
	APlayerCameraManager* PlayerCameraManager; // 0x6a8
	float InputRollScale; // 0x6d4
	char NetPlayerIndex; // 0x6e8
	UNetConnection* NetConnection; // 0x6f0
	ECollisionChannel CurrentClickTraceChannel; // 0x6f8
	TArray<FKey> ClickEventKeys; // 0x700
};

struct UMaterialExpressionDistance : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UDatasmithCineCameraComponentTemplate : UDatasmithObjectTemplate {
	FDatasmithCameraFilmbackSettingsTemplate FilmbackSettings; // 0x30
	FDatasmithCameraLensSettingsTemplate LensSettings; // 0x38
	FDatasmithCameraFocusSettingsTemplate FocusSettings; // 0x3c
	float CurrentFocalLength; // 0x44
	float CurrentAperture; // 0x48
	FDatasmithPostProcessSettingsTemplate PostProcessSettings; // 0x50
};

struct UBravoHotelCrosshair : UObject {
	FCrosshairDataMap CrosshairDataMap; // 0x40
	FCrosshairDataMap CrosshairDataMap_ADS; // 0x90
};

struct UAnimationDataSourceRegistry : UObject {
	TMap<FName, TWeakObjectPtr<UObject>> DataSources; // 0x28
};

struct UMKNetConnectionEx : UPlayer {
	UNetConnection* SelfNetConnection; // 0xb0
};

struct UHLODProxy : UObject {
	TArray<FHLODProxyMesh> ProxyMeshes; // 0x28
};

struct UMovieScene3DConstraintTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x58
};

struct UAkWwiseTreeSelector : UWidget {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnItemDragged; // 0x118
};

struct UNativeReplayEventMarkerBasic : UUserWidget {
	UReplayEventBorder* EventBorder; // 0x248
	UBorder* VisualBorder; // 0x250
	UTextBlock* EventInform; // 0x258
};

struct AAkAmbientSound : AActor {
	UAkAudioEvent* AkAudioEvent; // 0x328
	UAkComponent* AkComponent; // 0x330
	bool StopWhenOwnerIsDestroyed; // 0x338
	bool AutoPost; // 0x339
};

struct UListViewBase : UWidget {
	UUserWidget* EntryWidgetClass; // 0x108
	float WheelScrollMultiplier; // 0x110
	bool bEnableScrollAnimation; // 0x114
	bool bEnableFixedLineOffset; // 0x115
	float FixedLineScrollOffset; // 0x118
	FMulticastInlineDelegate BP_OnEntryGenerated; // 0x120
	FMulticastInlineDelegate BP_OnEntryReleased; // 0x130
	FUserWidgetPool EntryWidgetPool; // 0x140
};

struct UTextureRenderTargetCube : UTextureRenderTarget {
	int32_t SizeX; // 0xc0
	FLinearColor ClearColor; // 0xc4
	EPixelFormat OverrideFormat; // 0xd4
	char bHDR : 1; // 0xd5
	char bForceLinearGamma : 1; // 0xd5
};

struct UEnvQueryTest_GameplayTags : UEnvQueryTest {
	FGameplayTagQuery TagQueryToMatch; // 0x1f8
	bool bUpdatedToUseQuery; // 0x240
	EGameplayContainerMatchType TagsToMatch; // 0x241
	FGameplayTagContainer GameplayTags; // 0x248
};

struct UBravoHotelNetworkDelayWidget : UUserWidget {
	int32_t DefaultTableIndex; // 0x250
	UTextBlock* T_DelayMessage; // 0x258
};

struct UFXSystemAsset : UObject {
	uint32_t MaxPoolSize; // 0x28
};

struct UBravoHotelLayerBase : UObject {
	int32_t ZOrder; // 0x28
	TArray<FPopupWidgetInfo> WidgetList; // 0x30
};

struct ABravoHotelProjectileGrenadeNuclear : ABravoHotelProjectileGrenade {
	UMaterialInterface* ExplosionGroundDecalMaterial; // 0x688
	FVector ExplosionGroundDecalSize; // 0x690
	UAkAudioEvent* FallingEvent; // 0x6a0
	float FallingSoundDelayTime; // 0x6a8
	UDecalComponent* ExplosionGroundDecalComponent; // 0x6b0
	float LandHeight; // 0x6d0
	APlayerController* AuthorController; // 0x6d8
};

struct UParticleModuleKillHeight : UParticleModuleKillBase {
	FRawDistributionFloat Height; // 0x30
	char bAbsolute : 1; // 0x60
	char bFloor : 1; // 0x60
	char bApplyPSysScale : 1; // 0x60
};

struct ABravoHotelSmartPingActor : AActor {
	AActor* LocationActor; // 0x328
	UStaticMeshComponent* LightPoleMesh; // 0x330
	bool IsBook; // 0x338
	bool IsTempActor; // 0x339
	bool IsPersonalSupplyBoxActor; // 0x33a
	bool IsMaterialItemActor; // 0x33b
	bool bIsExpertWeaponItemActor; // 0x33c
	bool bIsLocalActor; // 0x33d
	FMaterialItemPingInfo MaterialPingInfo; // 0x340
	FExpertWeaponPingInfo ExpertWeaponPingInfo; // 0x370
	FBravoHotelLocalPingInfo LocalPingInfo; // 0x398
	ABravoHotelPlayerState* OwnerState; // 0x3c8
	FBravoHotelPingInfo PingInfo; // 0x3d0
	ABravoHotelPlayerController* PlayerController; // 0x408
	FBravoHotelSmartPingIconSettings PingSettings; // 0x410
	float ScreenRot; // 0x4c8
	FVector TargetPingLocation; // 0x4d0
	bool Active; // 0x4dc
	UBravoHotelSmartPingIconWidget* PingWidget; // 0x4e0
	float WidgetSize; // 0x4e8
	bool ShowLine; // 0x4ec
	bool InNm; // 0x4ed
	EWidgetSpace CurrentWidgetSpace; // 0x4ee
	UWidgetComponent* PingWidgetCompentSapceWorld; // 0x4f0
	UWidgetComponent* PingWidgetCompentSapceScreen; // 0x4f8
	UBravoHotelSmartPingIconWidget* PingIconWidgetWorld; // 0x500
	UBravoHotelSmartPingIconWidget* PingIconWidgetScreen; // 0x508
	UCurveFloat* SmartPingLineScale; // 0x510
	float CheckHieght; // 0x518
	float CheckDistance; // 0x51c
	UBravoHotelSmartPingSystem* SmartPingSystem; // 0x520
	bool CompleteBindingOptin; // 0x592
	UCurveFloat* PingAlphaCurve; // 0x598
	UCurveFloat* PingLightAimPoleAlphaCurve; // 0x5a0
	UCurveFloat* PingLightPoleDistanceAlphaCurve; // 0x5a8
	UCurveFloat* PingLightPoleDistanceRadiusCurve; // 0x5b0
	UCurveFloat* PingLightPoleFovRadiusCurve; // 0x5b8
	UCurveFloat* PingReSizeCurve; // 0x5c0
	float ForceOpacity1DurationTime; // 0x5c8
	FVector2D AddCenterPoint; // 0x5cc
};

struct USoundNodeConcatenator : USoundNode {
	TArray<float> InputVolume; // 0x48
};

struct ABravoHotelWeaponBase : ABravoHotelEquippableActor {
	bool bHideMagazineWhenEmpty; // 0x881
	FWeaponBaseData WeaponBaseData; // 0x888
	bool bAlwaysMaxCollideAlpha; // 0x999
	bool bDisableHandAnimDuringSprint; // 0x99a
	UBlendSpaceBase* SpecialSprintAnimation; // 0x9d8
	UAnimSequence* SprintAnim_1P; // 0x9e0
	bool bUseSpecialSprintAnimation; // 0x9e8
	TMap<EWeaponAttachmentItem, FVector> AOSPositionDeltaArray_FPP; // 0x9f0
	UAnimMontage* CurrentPlayerMontage_1P; // 0xa40
	bool bUseSpecialCrouchSprintAnimation; // 0xa48
	int32_t UI_CurrentRPM; // 0xa4c
	FMulticastInlineDelegate OnFireDelegate; // 0xa50
	UAnimSequence* CollideUpsideAnim; // 0xa68
	UAnimSequence* IdleHandAnim_Crouch; // 0xa78
	UAnimMontage* CurrentWeaponMontage_3P; // 0xa80
	bool bDisableHandAnimDuringProneCollide; // 0xa88
	UBlendSpaceBase* SpecialCrouchSprintAnimation; // 0xa90
	UAnimSequence* AOSAnim; // 0xa98
	UAnimSequence* IdleHandAnim_3p; // 0xaa0
	UAnimSequence* SpecialSprintReadyAnimation; // 0xae0
	UAnimMontage* CurrentPlayerMontage_3P; // 0xae8
	float UI_CurrentDamage; // 0xaf0
	FBravoHotelWeaponInfo WeaponInfo; // 0xb50
	bool bUseOneHandSprintAnimation; // 0x1680
	UAnimSequence* ADSAnim; // 0x1688
	UAnimSequence* Anim_SecondaryWeapon_Crouch_Idle; // 0x16f0
	UAnimSequence* IdleHandAnim_1p; // 0x1730
	bool bIsNoDamageWeapon; // 0x1770
	UAnimSequence* Anim_SecondaryWeapon_Stand_Idle; // 0x1838
	float AimOffsetMinY_TPP; // 0x1840
	UAnimMontage* CurrentWeaponMontage_1P; // 0x1848
	TMap<EWeaponAttachmentItem, FVector> IdlePositionDeltaArray_FPP; // 0x1850
	UAnimSequence* CollideDownsideAnim; // 0x18a0
	TArray<EWeaponAttachmentItem> AttachmentItemEnums; // 0x18d0
	UAnimSequence* ProneHandAnim_3p; // 0x18e0
	float AOSPositionInterpSpeed_FPP; // 0x18e8
	bool bDisableHandAnimDuringCollide; // 0x1920
	int32_t magazine; // 0x1924
	float PausedMontagePosition; // 0x1970
	UBlendSpaceBase* SpecialProneAnimation_1P; // 0x1998
	UWeaponReplicatedComponent* WeaponReplicatedComponent; // 0x19d0
	UParticleSystem* ShiningEffect; // 0x19d8
	FName PerkIndex; // 0x19e8
	FBravoHotelAttachmentInfo AttachmentInfoModifier; // 0x19f0
	TArray<FInventoryItemInfo> AttachmentItems; // 0x1a38
	bool bIsTrueDamageWeapon; // 0x1a48
	bool bUseSpecialProneAnimation; // 0x1a80
	FTimerHandle TimerHandle_UpdateActorHiddenInGame_TPPOnly; // 0x1a88
	int32_t BackPackInTotalAmmoCount; // 0x1ac8
	UBlendSpaceBase* SpecialProneAnimation; // 0x1ad0
	bool bIsPerkWeapon; // 0x1ad8
	EWeaponState CurrentMontageState; // 0x1ad9
	bool bVisibleAbsolutely; // 0x1b10
	UParticleSystemComponent* ShiningEffectComponent; // 0x1b18
	UClientSkeletalMeshComponent* SkelMesh1P; // 0x1b20
	UAnimSequence* CollideProneAnim; // 0x1b28
	float LastFireTime; // 0x1b30
	UAnimSequence* IdleHandAnim_InVehicle; // 0x1b38
	float AimOffsetMaxY_TPP; // 0x1b40
	FDataTableRowHandle WeaponDataTable; // 0x1b48
	bool ProhibitedforUseInVehicle; // 0x1ba8
	int32_t MagazineCapacity; // 0x1be4
};

struct UQuitMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UFontImportOptions : UObject {
	FFontImportOptionsData Data; // 0x28
};

struct UMaterialExpressionLightmassReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0x40
	FExpressionInput Lightmass; // 0x54
};

struct UButtonStyleAsset : UObject {
	FButtonStyle ButtonStyle; // 0x28
};

struct UBravoHotelPlayerInfoWidget : UUserWidget {
	UWidgetSwitcher* WidgetSwitcher_Lung; // 0x248
	UProgressBar* ProgressBar_Lung; // 0x250
	UUniformGridPanel* BuffListPanel; // 0x2b0
	UBravoHotelGameBuffSlot* GameBuffSlot_Boost; // 0x2b8
};

struct UVariant : UObject {
	FText DisplayText; // 0x28
	TArray<UVariantObjectBinding*> ObjectBindings; // 0x58
	UTexture2D* Thumbnail; // 0x68
};

struct UParticleModuleLocationEmitter : UParticleModuleLocationBase {
	FName EmitterName; // 0x30
	ELocationEmitterSelectionMethod SelectionMethod; // 0x38
	char InheritSourceVelocity : 1; // 0x3c
	float InheritSourceVelocityScale; // 0x40
	char bInheritSourceRotation : 1; // 0x44
	float InheritSourceRotationScale; // 0x48
};

struct UMovieSceneByteSection : UMovieSceneSection {
	FMovieSceneByteChannel ByteCurve; // 0xe0
};

struct UUW-Inventory_RecipeSlot_C : UUW-Inventory_SlotBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1360
	UWidgetAnimation* Ani_Tutorial_Glow; // 0x1368
	UWidgetAnimation* P_Upgrade_Arrow; // 0x1370
	UWidgetAnimation* C_SlotHover_ItemState_Hide; // 0x1378
	UWidgetAnimation* C_SlotHover_ItemState_Show; // 0x1380
	UWidgetAnimation* Hover_Gold; // 0x1388
	UWidgetAnimation* P_SlotHover; // 0x1390
	UImage* BGImage; // 0x1398
	UCanvasPanel* CanvasPanel_ITemState; // 0x13a0
	UTextBlock* Count; // 0x13a8
	UImage* Effect_Craft; // 0x13b0
	UHorizontalBox* HorizontalBox_Rarity; // 0x13b8
	UImage* HoverImage; // 0x13c0
	UImage* HoverImage_Gold; // 0x13c8
	UImage* IconRepair; // 0x13d0
	UImage* Image_1; // 0x13d8
	UImage* Image_2; // 0x13e0
	UImage* Image_222; // 0x13e8
	UImage* ItemImage; // 0x13f0
	UTextBlock* ItemNameName; // 0x13f8
	UTextBlock* ItemState_Text; // 0x1400
	UImage* NeedMaterial; // 0x1408
	UOverlay* Overlay_Key; // 0x1410
	UProgressBar* ProgressBar_475; // 0x1418
	USizeBox* SizeBox_1; // 0x1420
	UTextBlock* TextBlock_ShortCut; // 0x1428
	UImage* Tutorial_Glow; // 0x1430
	UUW-MouseRightClick_C* UW-MouseRightClick_Big; // 0x1438
	UUW-MouseRightClick_C* UW-MouseRightClick_Small; // 0x1440
	UImage* WeaponItemImage; // 0x1448
	bool bGold; // 0x1450
	UImage* SelectedHoverImage; // 0x1458
	FLinearColor MedicalBGColor; // 0x1460
	FMulticastInlineDelegate SetSlotInfo; // 0x1470
	int32_t SlotIndex; // 0x1480
	FName RecipeKey; // 0x1484
	FItemRecipeData RecipeData; // 0x1490
	bool bLeftClicked; // 0x14c8
	bool CanCraft; // 0x14c9
};

struct UMaterialExpressionShadingModel : UMaterialExpression {
	EMaterialShadingModel ShadingModel; // 0x40
};

struct UARGetCandidateObjectAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UActorComponent : UObject {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	int32_t UCSSerializationIndex; // 0x84
	char bNetAddressable : 1; // 0x88
	char bReplicates : 1; // 0x88
	char bAutoActivate : 1; // 0x89
	char bIsActive : 1; // 0x8a
	char bEditableWhenInherited : 1; // 0x8a
	char bCanEverAffectNavigation : 1; // 0x8a
	char bIsEditorOnly : 1; // 0x8a
	EComponentCreationMethod CreationMethod; // 0x8c
	FMulticastSparseDelegate OnComponentActivated; // 0x8d
	FMulticastSparseDelegate OnComponentDeactivated; // 0x8e
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UPhysicsConstraintComponent : USceneComponent {
	AActor* ConstraintActor1; // 0x230
	FConstrainComponentPropName ComponentName1; // 0x238
	AActor* ConstraintActor2; // 0x240
	FConstrainComponentPropName ComponentName2; // 0x248
	UPhysicsConstraintTemplate* ConstraintSetup; // 0x260
	FMulticastInlineDelegate OnConstraintBroken; // 0x268
	FConstraintInstance ConstraintInstance; // 0x278
};

struct UBravoHotelBlueZoneGameRule : UGameRuleInvokerComponent {
	UAkAudioEvent* BluezoneStartEvent; // 0xd0
	UAkAudioEvent* BluezoneEndEvent; // 0xd8
};

struct USoundNodeAttenuation : USoundNode {
	USoundAttenuation* AttenuationSettings; // 0x48
	FSoundAttenuationSettings AttenuationOverrides; // 0x50
	char bOverrideAttenuation : 1; // 0x3f0
};

struct UCanvasPanelSlot : UPanelSlot {
	FAnchorData LayoutData; // 0x38
	bool bAutoSize; // 0x60
	int32_t ZOrder; // 0x64
};

struct UNiagaraDataInterfaceAudioOscilloscope : UNiagaraDataInterface {
	USoundSubmix* Submix; // 0x30
	int32_t Resolution; // 0x38
	float ScopeInMilliseconds; // 0x3c
};

struct UNavigationQueryFilter : UObject {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct AGeometryCacheActor : AActor {
	UGeometryCacheComponent* GeometryCacheComponent; // 0x328
};

struct UUW-HittedDamageWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* FadeOut; // 0x250
	UImage* HitImage; // 0x258
	USizeBox* SizeBox_1; // 0x260
	FVector InstigatorLocation; // 0x268
	ABravoHotelCharacter* InstigatorCharacter; // 0x278
};

struct ABP-Projectile_IncendiaryFireCell_C : ABravoHotelProjectileMolotovFireCell {
	float TextureScale; // 0x3b0
	float BurnArea; // 0x3b4
};

struct UGeometryCacheCodecBase : UObject {
	TArray<int32_t> TopologyRanges; // 0x28
};

struct UGizmoConstantFrameAxisSource : UObject {
	FVector Origin; // 0x30
	FVector Direction; // 0x3c
	FVector TangentX; // 0x48
	FVector TangentY; // 0x54
};

struct UMovieSceneNiagaraTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x58
};

struct UMaterialExpressionShaderStageSwitch : UMaterialExpression {
	FExpressionInput PixelShader; // 0x40
	FExpressionInput VertexShader; // 0x54
};

struct UBravoHotelNetworkManager : UObject {
	FNetworkSocket NetworkSocket; // 0x28
	FNetworkWebSocket NetworkWebSocket; // 0x38
	UBravoHotelHttpClient* HttpService; // 0x58
	bool bHttpServiceEnable; // 0x60
	FBravoHotelUserInfo UserInfo; // 0x220
	TArray<FBravoHotelFriendInfo> FriendList; // 0x2b0
	FBravoHotelPartyInfo PartyInfo; // 0x2d8
	FBravoHotelPartyInvitation PartyInvitaion; // 0x300
	FOnlineSubsystemFriends OnlineSubsystemFriends; // 0x330
	UGameInstance* ParentGameInstance; // 0x508
};

struct ABravoHotelPlayerSubState : AActor {
	FBravoHotelPingInfo PingInfo; // 0x328
	FVector PingLocalLocation; // 0x360
	TArray<FVector> RoutePingInfo; // 0x370
	FVector_NetQuantize Location; // 0x398
	uint16_t RotationYaw; // 0x3a4
	int32_t Health; // 0x3a8
	bool bIsDisconnect; // 0x3ac
	bool bIsRetired; // 0x3ad
	int32_t MaxHealth; // 0x3b0
	EPlayerState CurrentState; // 0x3b4
	ECharacterState CharacterState; // 0x3b5
	int32_t FireCount; // 0x3b8
	int32_t CurrentEquipWeaponID; // 0x3bc
	bool bIsFireWeapon; // 0x3c0
	int32_t RemainGoldentime; // 0x3c4
	int32_t MaxGoldentime; // 0x3c8
	bool bRequestResuscitation; // 0x3cc
	bool VoiceTeamTalk; // 0x3cd
	bool VoiceAreaTalk; // 0x3ce
};

struct UGridPathFollowingComponent : UPathFollowingComponent {
	UNavLocalGridManager* GridManager; // 0x258
};

struct UBravoHotelPerkComponent : UActorComponent {
	FPerkInfoArray RepPerkInfos; // 0xc0
	FMulticastInlineDelegate OnPerkInfoChanged; // 0x1d8
};

struct UBravoHotelAircraftRouteWidget : UUserWidget {
	ABravoHotelAircraftFlight* AirCraftRef; // 0x2a8
};

struct UCoherentUIGTBaseComponent : UActorComponent {
	FMulticastInlineDelegate ReadyForBindings; // 0xb0
	FMulticastInlineDelegate BindingsReleased; // 0xc0
	FMulticastInlineDelegate FinishLoad; // 0xd0
	FMulticastInlineDelegate FailLoad; // 0xe0
	FMulticastInlineDelegate StartLoading; // 0xf0
	FMulticastInlineDelegate NavigateTo; // 0x100
	FMulticastInlineDelegate JavaScriptEvent; // 0x110
	FMulticastInlineDelegate UIGTScriptingReady; // 0x120
	FDelegate LiveViewSizeRequested; // 0x130
	UTextureRenderTarget2D* Texture; // 0x158
	TextureFilter Filter; // 0x160
	bool bReceiveInput; // 0x161
	bool bReceiveInputWhenTransparent; // 0x162
	bool AllowPerformanceWarnings; // 0x163
	float ExecuteJSTimersThresholdMs; // 0x164
	float UpdateStylesAndLayoutThresholdMs; // 0x168
	float RecordRenderingCommandsThresholdMs; // 0x16c
	float PaintWarningThresholdMs; // 0x170
	int32_t LayersCountThreshold; // 0x174
	int32_t LayerWidthThreshold; // 0x178
	int32_t LayerHeightThreshold; // 0x17c
	bool bEnableAdditionalDefaultStyles; // 0x180
	bool bDelayedUpdate; // 0x181
	UCoherentUIGTAudioWrapper* AudioWrapper; // 0x1f8
};

struct UWidgetComponent : UMeshComponent {
	EWidgetSpace Space; // 0x4e0
	EWidgetTimingPolicy TimingPolicy; // 0x4e1
	UUserWidget* WidgetClass; // 0x4e8
	FIntPoint DrawSize; // 0x4f0
	bool bManuallyRedraw; // 0x4f8
	bool bRedrawRequested; // 0x4f9
	float RedrawTime; // 0x4fc
	FIntPoint CurrentDrawSize; // 0x508
	bool bDrawAtDesiredSize; // 0x510
	FVector2D Pivot; // 0x514
	bool bReceiveHardwareInput; // 0x51c
	bool bWindowFocusable; // 0x51d
	EWindowVisibility WindowVisibility; // 0x51e
	bool bApplyGammaCorrection; // 0x51f
	ULocalPlayer* OwnerPlayer; // 0x520
	FLinearColor BackgroundColor; // 0x528
	FLinearColor TintColorAndOpacity; // 0x538
	float OpacityFromTexture; // 0x548
	EWidgetBlendMode BlendMode; // 0x54c
	bool bIsTwoSided; // 0x54d
	bool TickWhenOffscreen; // 0x54e
	UUserWidget* Widget; // 0x550
	UBodySetup* BodySetup; // 0x578
	UMaterialInterface* TranslucentMaterial; // 0x580
	UMaterialInterface* TranslucentMaterial_OneSided; // 0x588
	UMaterialInterface* OpaqueMaterial; // 0x590
	UMaterialInterface* OpaqueMaterial_OneSided; // 0x598
	UMaterialInterface* MaskedMaterial; // 0x5a0
	UMaterialInterface* MaskedMaterial_OneSided; // 0x5a8
	UTextureRenderTarget2D* RenderTarget; // 0x5b0
	UMaterialInstanceDynamic* MaterialInstance; // 0x5b8
	bool bAddedToScreen; // 0x5c0
	bool bEditTimeUsable; // 0x5c1
	FName SharedLayerName; // 0x5c4
	int32_t LayerZOrder; // 0x5cc
	EWidgetGeometryMode GeometryMode; // 0x5d0
	float CylinderArcAngle; // 0x5d4
};

struct UParkourComponent : UActorComponent {
	bool DrawDebugTrace; // 0xb1
	bool ShowLog; // 0xb2
	char ParkourDebugTypes; // 0xb3
	bool bNoCameraMove; // 0xb4
	UParkourWindowComponent* DefaultParkourWindowComponent; // 0xb8
	bool bOffReplicateMovement; // 0xc0
	bool bEnableMidJump; // 0xc1
	bool bNoInputMove; // 0xc2
	TArray<FName> ParkourSocketNames; // 0xc8
	TArray<EObjectTypeQuery> TraceObjectTypes; // 0xd8
	float CheckWide; // 0xe8
	float WindowCheckWide; // 0xec
	float LimiteNormalAngle; // 0xf0
	float DetectNormalAngle; // 0xf4
	float BottomCheckPlus; // 0xf8
	float ThicknessCheckPlus; // 0xfc
	float WindowBreakRange; // 0x100
	float SprintSpeed; // 0x104
	float BaseTraceLength; // 0x108
	float SprintTraceLength; // 0x10c
	float CheckHoldRadius; // 0x110
	float CheckHoldDepth; // 0x114
	float BaseJumpOverThickness; // 0x118
	float SprintJumpOverThickness; // 0x11c
	float JumpOverPlaceDepth; // 0x120
	float ClimbUpHighHeight; // 0x124
	float ClimbUpBaseHeight; // 0x128
	float ClimbUpFallingHeight; // 0x12c
	float SlideSpeed; // 0x130
	float LedgeGrabTranceLength; // 0x134
	float LedgeGrabMinHeight; // 0x138
	float LedgeGrabMinAttachTime; // 0x13c
	float BackDistance; // 0x140
	float DisableCollisionTime; // 0x144
	FVector SkipJumpVector; // 0x148
	float InnerEdgeRange; // 0x154
	FVector ArmIKPosition; // 0x158
	UCurveFloat* Curve_SlideSpeed; // 0x168
	UCurveFloat* Curve_CameraIn; // 0x170
	UCurveFloat* Curve_CameraInHeight; // 0x178
	UCurveFloat* Curve_CameraSecond; // 0x180
	UCurveFloat* Curve_CameraSecondHeight; // 0x188
	UCurveFloat* Curve_CameraOut; // 0x190
	FVector ClimbTargetPosition; // 0x198
	FVector ClimbWallNormal; // 0x1a4
	float LastWallThickness; // 0x1b0
	bool bClimbing; // 0x1b4
	bool bRevertingClimb; // 0x1b5
	bool bCanRevertClimb; // 0x1b6
	bool bBreakWindow; // 0x1b7
	bool bCanJump; // 0x1b8
	bool bArmIK; // 0x1b9
	TArray<FClimbData> ClimbOverDatas; // 0x1c0
	TArray<FClimbData> ClimbUpDatas; // 0x1d0
	TArray<FClimbData> SprintOverDatas; // 0x1e0
	TArray<FClimbData> SprintUpDatas; // 0x1f0
	TArray<FClimbData> LedgeGrabClimbOverDatas; // 0x200
	TArray<FClimbData> LedgeGrabClimbUpDatas; // 0x210
	TArray<FClimbData> LedgeGrabBlockedClimbOverDatas; // 0x220
	TArray<FClimbData> LedgeGrabBlockedClimbUpDatas; // 0x230
	TArray<FClimbData> GroundingDatas; // 0x240
	FClimbData SlideData; // 0x250
	TMap<FName, FClimbData> OverrideDatas; // 0x2e8
	bool bUseFootInParkour; // 0x388
	bool bUseDummyInParkour; // 0x389
	bool bIsSlideOn; // 0x38a
	TArray<FParkourEvent> ParkourEvents; // 0x5c0
};

struct APartyBeaconHost : AOnlineBeaconHostObject {
	UPartyBeaconState* State; // 0x350
	bool bLogoutOnSessionTimeout; // 0x3b8
	float SessionTimeoutSecs; // 0x3bc
	float TravelSessionTimeoutSecs; // 0x3c0
};

struct UUW-AliveInfoWidget_C : UBravoHotelAliveInfoWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x288
	UWidgetAnimation* GoldDesc_Hide; // 0x290
	UWidgetAnimation* GoldDesc_Show; // 0x298
	UWidgetAnimation* Revival_Add; // 0x2a0
	UTextBlock* AliveCount_Text; // 0x2a8
	UTextBlock* AliveCount_Text_2; // 0x2b0
	UHorizontalBox* HorizontalBox_8; // 0x2b8
	UHorizontalBox* HorizontalBox_16; // 0x2c0
	UHorizontalBox* HorizontalBox_89; // 0x2c8
	UHorizontalBox* HorizontalBox_Alive; // 0x2d0
	UHorizontalBox* HorizontalBox_Assist; // 0x2d8
	UHorizontalBox* HorizontalBox_CurrentGold; // 0x2e0
	UHorizontalBox* HorizontalBox_Kill; // 0x2e8
	UHorizontalBox* HorizontalBox_Team; // 0x2f0
	UImage* Image; // 0x2f8
	UImage* Image_1; // 0x300
	UImage* Image_2; // 0x308
	UImage* Image_6; // 0x310
	UImage* Image_102; // 0x318
	UImage* Image_271; // 0x320
	UImage* Image_376; // 0x328
	UImage* Image_378; // 0x330
	UImage* Image_1584; // 0x338
	UImage* KillAliveBG; // 0x340
	UImage* KillAliveBG_2; // 0x348
	UImage* KillAliveBG_3; // 0x350
	UImage* KillAliveBG_4; // 0x358
	UTextBlock* KillCount_Text; // 0x360
	UTextBlock* KillCount_Text_2; // 0x368
	URichTextBlock* RichTextBlock_275; // 0x370
	USizeBox* SizeBox_1; // 0x378
	USizeBox* SizeBox_3; // 0x380
	USpacer* Spacer_2; // 0x388
	UTextBlock* T_AliveCount; // 0x390
	UTextBlock* T_AssistCount; // 0x398
	UTextBlock* T_KillCount; // 0x3a0
	UTextBlock* T_TeamCount; // 0x3a8
	UTextBlock* TextBlock_1; // 0x3b0
	UTextBlock* TextBlock_CurrentGold; // 0x3b8
	bool ShowKillCountUI; // 0x3c0
	int32_t CurrentKillCount; // 0x3c4
	int32_t NewVar_1; // 0x3c8
	FTimerHandle ShowGoldDescHandle; // 0x3d0
	UTextBlock* AliveCount_Text_1_1; // 0x3d8
	UTextBlock* KillCount_Text_1_1; // 0x3e0
};

struct UIntervalGizmo : UInteractiveGizmo {
	UGizmoTransformChangeStateTarget* StateTarget; // 0x38
	UTransformProxy* TransformProxy; // 0x50
	TArray<UPrimitiveComponent*> ActiveComponents; // 0x58
	TArray<UInteractiveGizmo*> ActiveGizmos; // 0x68
	UGizmoComponentAxisSource* AxisYSource; // 0x90
	UGizmoComponentAxisSource* AxisZSource; // 0x98
};

struct UStaticMeshSimulationComponent : UActorComponent {
	bool Simulating; // 0xb8
	bool bNotifyCollisions; // 0xb9
	EObjectStateTypeEnum ObjectType; // 0xba
	float Mass; // 0xbc
	ECollisionTypeEnum CollisionType; // 0xc0
	EImplicitTypeEnum ImplicitType; // 0xc1
	int32_t MinLevelSetResolution; // 0xc4
	int32_t MaxLevelSetResolution; // 0xc8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xcc
	FVector InitialLinearVelocity; // 0xd0
	FVector InitialAngularVelocity; // 0xdc
	float DamageThreshold; // 0xe8
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xf0
	AChaosSolverActor* ChaosSolverActor; // 0xf8
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x100
	TArray<UPrimitiveComponent*> SimulatedComponents; // 0x120
};

struct AVectorFieldVolume : AActor {
	UVectorFieldComponent* VectorFieldComponent; // 0x328
};

struct ULandscapeHeightfieldCollisionComponent : UPrimitiveComponent {
	TArray<ULandscapeLayerInfoObject*> ComponentLayerInfos; // 0x4b0
	int32_t SectionBaseX; // 0x4c0
	int32_t SectionBaseY; // 0x4c4
	int32_t CollisionSizeQuads; // 0x4c8
	float CollisionScale; // 0x4cc
	int32_t SimpleCollisionSizeQuads; // 0x4d0
	TArray<char> CollisionQuadFlags; // 0x4d8
	FGuid HeightfieldGuid; // 0x4e8
	FBox CachedLocalBox; // 0x4f8
	LazyObjectProperty RenderComponent; // 0x514
	TArray<UPhysicalMaterial*> CookedPhysicalMaterials; // 0x540
};

struct UBTDecorator_IsAtLocation : UBTDecorator_BlackboardBase {
	float AcceptableRadius; // 0x90
	FAIDataProviderFloatValue ParametrizedAcceptableRadius; // 0x98
	FAIDistanceType GeometricDistanceType; // 0xd0
	char bUseParametrizedRadius : 1; // 0xd4
	char bUseNavAgentGoalLocation : 1; // 0xd4
	char bPathFindingBasedTest : 1; // 0xd4
};

struct UBravoHotelReportUserCompletedWidget : UUserWidget {
	UButton* ConfirmButton; // 0x248
};

struct UUW-MS_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_MS; // 0x250
	UImage* Image_78; // 0x258
	UPaperSprite* PingImage; // 0x260
};

struct UWrapBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	bool bFillEmptySpace; // 0x48
	float FillSpanWhenLessThan; // 0x4c
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UParticleModuleLocationSkelVertSurface : UParticleModuleLocationBase {
	ELocationSkelVertSurfaceSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	char bUpdatePositionEachFrame : 1; // 0x40
	char bOrientMeshEmitters : 1; // 0x40
	char bInheritBoneVelocity : 1; // 0x40
	float InheritVelocityScale; // 0x44
	FName SkelMeshActorParamName; // 0x48
	TArray<FName> ValidAssociatedBones; // 0x50
	char bEnforceNormalCheck : 1; // 0x60
	FVector NormalToCompare; // 0x64
	float NormalCheckToleranceDegrees; // 0x70
	float NormalCheckTolerance; // 0x74
	TArray<int32_t> ValidMaterialIndices; // 0x78
	char bInheritVertexColor : 1; // 0x88
	char bInheritUV : 1; // 0x88
	uint32_t InheritUVChannel; // 0x8c
};

struct UUW-GuideWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UCanvasPanel* ADS_Pannel; // 0x250
	UHorizontalBox* ADSZoom; // 0x258
	UCanvasPanel* CanvasPanel_Main; // 0x260
	UHorizontalBox* Descent; // 0x268
	UCanvasPanel* Descent_Pannel; // 0x270
	UVerticalBox* Drive; // 0x278
	UCanvasPanel* Drive_Pannel; // 0x280
	UKeyImageWidget_C* Key_ADSZeroingM; // 0x288
	UKeyImageWidget_C* Key_ADSZeroingP; // 0x290
	UKeyImageWidget_C* Key_ADSZoomIn; // 0x298
	UKeyImageWidget_C* Key_ADSZoomOut; // 0x2a0
	UHorizontalBox* Ladder; // 0x2a8
	UCanvasPanel* Ladder_Pannel; // 0x2b0
	UHorizontalBox* Parachuting; // 0x2b8
	UCanvasPanel* Parachuting_Pannel; // 0x2c0
	UHorizontalBox* SmartPing; // 0x2c8
	UCanvasPanel* SmartPing_Pannel; // 0x2d0
	UHorizontalBox* Spectate; // 0x2d8
	UCanvasPanel* Spectate_Pannel; // 0x2e0
	UHorizontalBox* Swim; // 0x2e8
	UCanvasPanel* Swim_Pannel; // 0x2f0
	UTextBlock* T_ADSZeroingM; // 0x2f8
	UTextBlock* T_ADSZeroingP; // 0x300
	UTextBlock* T_ADSZoomIn; // 0x308
	UTextBlock* T_ADSZoomOut; // 0x310
	UHorizontalBox* UseItem; // 0x318
	UCanvasPanel* UseItem_Pannel; // 0x320
	UWidgetSwitcher* WidgetSwitcher_Guide; // 0x328
	UHorizontalBox* WorldMap; // 0x330
	UHorizontalBox* WorldMap_Always; // 0x338
	UCanvasPanel* WorldMap_Pannel; // 0x340
	EToggleWidgetModeType CurrentToggleWidgetType; // 0x348
};

struct UOculusMR_Settings : UObject {
	EOculusMR_ClippingReference ClippingReference; // 0x28
	bool bUseTrackedCameraResolution; // 0x29
	int32_t WidthPerView; // 0x2c
	int32_t HeightPerView; // 0x30
	float CastingLatency; // 0x34
	FColor BackdropColor; // 0x38
	float HandPoseStateLatency; // 0x3c
	FColor ChromaKeyColor; // 0x40
	float ChromaKeySimilarity; // 0x44
	float ChromaKeySmoothRange; // 0x48
	float ChromaKeySpillRange; // 0x4c
	EOculusMR_VirtualGreenScreenType VirtualGreenScreenType; // 0x50
	float DynamicLightingDepthSmoothFactor; // 0x54
	float DynamicLightingDepthVariationClampingValue; // 0x58
	EOculusMR_PostProcessEffects ExternalCompositionPostProcessEffects; // 0x5c
	bool bIsCasting; // 0x5d
	EOculusMR_CompositionMethod CompositionMethod; // 0x5e
	EOculusMR_CameraDeviceEnum CapturingCamera; // 0x5f
	bool bUseDynamicLighting; // 0x60
	EOculusMR_DepthQuality DepthQuality; // 0x61
};

struct UARTrackedObject : UARTrackedGeometry {
	UARCandidateObject* DetectedObject; // 0xe8
};

struct UMaterialExpressionSign : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UAndroidPermissionCallbackProxy : UObject {
	FMulticastInlineDelegate OnPermissionsGrantedDynamicDelegate; // 0x28
};

struct UThrobber : UWidget {
	int32_t NumberOfPieces; // 0x108
	bool bAnimateHorizontally; // 0x10c
	bool bAnimateVertically; // 0x10d
	bool bAnimateOpacity; // 0x10e
	USlateBrushAsset* PieceImage; // 0x110
	FSlateBrush Image; // 0x118
};

struct UUW-KeyControl_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	USizeBox* Action; // 0x250
	UImage* Image_14; // 0x258
	UImage* LeftBtn; // 0x260
	UImage* MidBtn; // 0x268
	UOverlay* Mouse; // 0x270
	UImage* RightBtn; // 0x278
	UScaleBox* ScaleBox_2; // 0x280
	UImage* SideDown; // 0x288
	UImage* SideUp; // 0x290
	UTextBlock* Text_Action; // 0x298
	UTextBlock* Text_Action_UsingAlphaBg; // 0x2a0
	UImage* Turn; // 0x2a8
	UImage* WheelDown; // 0x2b0
	UImage* WheelUp; // 0x2b8
	UWidgetSwitcher* WidgetSwitcher_TextStyle; // 0x2c0
	UImage* X; // 0x2c8
	UImage* Y; // 0x2d0
	UObject* Temp; // 0x2d8
	bool NewVar_1; // 0x2e0
	float DefalutScale; // 0x2e4
};

struct UAmbisonicsEncodingSettings : USoundfieldEncodingSettingsBase {
	int32_t AmbisonicsOrder; // 0x28
};

struct UFSM_FinishState_ConditionalAsyncWithCallbacks : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	FSM_Transition Conditional; // 0x38
	FDelegate InBegin; // 0x3c
	FDelegate InExit; // 0x4c
	FDelegate InFallback; // 0x5c
	FName FallbackState; // 0x6c
	float Timer; // 0x74
	FTimerHandle TimerHandle; // 0x78
	FMulticastInlineDelegate OnSuccess; // 0x80
	FMulticastInlineDelegate OnAborted; // 0x90
};

struct UScrollBox : UPanelWidget {
	FScrollBoxStyle WidgetStyle; // 0x120
	FScrollBarStyle WidgetBarStyle; // 0x348
	USlateWidgetStyleAsset* Style; // 0x818
	USlateWidgetStyleAsset* BarStyle; // 0x820
	EOrientation Orientation; // 0x828
	ESlateVisibility ScrollBarVisibility; // 0x829
	EConsumeMouseWheel ConsumeMouseWheel; // 0x82a
	FVector2D ScrollbarThickness; // 0x82c
	FMargin ScrollbarPadding; // 0x834
	bool AlwaysShowScrollbar; // 0x844
	bool AlwaysShowScrollbarTrack; // 0x845
	bool AllowOverscroll; // 0x846
	bool bAnimateWheelScrolling; // 0x847
	EDescendantScrollDestination NavigationDestination; // 0x848
	float NavigationScrollPadding; // 0x84c
	EScrollWhenFocusChanges ScrollWhenFocusChanges; // 0x850
	bool bAllowRightClickDragScrolling; // 0x851
	float WheelScrollMultiplier; // 0x854
	FMulticastInlineDelegate OnUserScrolled; // 0x858
};

struct URadialIntMask : UFieldNodeInt {
	float Radius; // 0xb0
	FVector Position; // 0xb4
	int32_t InteriorValue; // 0xc0
	int32_t ExteriorValue; // 0xc4
	ESetMaskConditionType SetMaskCondition; // 0xc8
};

struct UAkPS4InitializationSettings : UObject {
	FAkCommonInitializationSettings CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x88
	FAkPS4AdvancedInitializationSettings AdvancedSettings; // 0xb0
};

struct UUW-JetpackWidget_C : UBravoHotelJetpackWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x268
	UProgressBar* FuelGauge; // 0x270
	UImage* FuelIcon; // 0x278
	UTextBlock* FuelText; // 0x280
};

struct UProgressBar : UWidget {
	FProgressBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x2a8
	USlateBrushAsset* BackgroundImage; // 0x2b0
	USlateBrushAsset* FillImage; // 0x2b8
	USlateBrushAsset* MarqueeImage; // 0x2c0
	float Percent; // 0x2c8
	EProgressBarFillType BarFillType; // 0x2cc
	bool bIsMarquee; // 0x2cd
	FVector2D BorderPadding; // 0x2d0
	FDelegate PercentDelegate; // 0x2d8
	FLinearColor FillColorAndOpacity; // 0x2e8
	FDelegate FillColorAndOpacityDelegate; // 0x2f8
};

struct UAkHololensInitializationSettings : UObject {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkHololensAdvancedInitializationSettings AdvancedSettings; // 0xb8
};

struct UAISenseConfig_Hearing : UAISenseConfig {
	UAISense_Hearing* Implementation; // 0x48
	float HearingRange; // 0x50
	float LoSHearingRange; // 0x54
	char bUseLoSHearing : 1; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
};

struct UArchVisCharMovementComponent : UCharacterMovementComponent {
	FRotator RotationalAcceleration; // 0x6d0
	FRotator RotationalDeceleration; // 0x6dc
	FRotator MaxRotationalVelocity; // 0x6e8
	float MinPitch; // 0x6f4
	float MaxPitch; // 0x6f8
	float WalkingFriction; // 0x6fc
	float WalkingSpeed; // 0x700
	float WalkingAcceleration; // 0x704
};

struct UMaterialExpressionStaticBool : UMaterialExpression {
	char Value : 1; // 0x40
};

struct UBravoHotelAnimNotify_PlayMontageOnInteractedTarget : UAnimNotify {
	UAnimMontage* TargetMontage; // 0x38
	float PlayRate; // 0x40
	FName StartSectionName; // 0x44
};

struct USimplygonNormalCaster : USimplygonMaterialCaster {
	FNormalCasterSettings NormalCasterSettings; // 0x28
};

struct UAISenseConfig_Sight : UAISenseConfig {
	UAISense_Sight* Implementation; // 0x48
	float SightRadius; // 0x50
	float LoseSightRadius; // 0x54
	float PeripheralVisionAngleDegrees; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
	float AutoSuccessRangeFromLastSeenLocation; // 0x60
};

struct UAkAssetDataWithMedia : UAkAssetData {
	TArray<UAkMediaAsset*> MediaList; // 0x60
};

struct UMovieSceneSection : UMovieSceneSignedObject {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int32_t rowIndex; // 0xa8
	int32_t OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct USoundNodeSoundClass : USoundNode {
	USoundClass* SoundClassOverride; // 0x48
};

struct URTXGIPluginSettings : UDeveloperSettings {
	EDDGIIrradianceBits IrradianceBits; // 0x38
	EDDGIDistanceBits DistanceBits; // 0x39
	float DebugProbeRadius; // 0x3c
	int32_t ProbeUpdateRayBudget; // 0x40
};

struct UPaperTileLayer : UObject {
	FText LayerName; // 0x28
	int32_t LayerWidth; // 0x40
	int32_t LayerHeight; // 0x44
	char bHiddenInGame : 1; // 0x48
	char bLayerCollides : 1; // 0x48
	char bOverrideCollisionThickness : 1; // 0x48
	char bOverrideCollisionOffset : 1; // 0x48
	float CollisionThicknessOverride; // 0x4c
	float CollisionOffsetOverride; // 0x50
	FLinearColor LayerColor; // 0x54
	int32_t AllocatedWidth; // 0x64
	int32_t AllocatedHeight; // 0x68
	TArray<FPaperTileInfo> AllocatedCells; // 0x70
	UPaperTileSet* TileSet; // 0x80
	TArray<int32_t> AllocatedGrid; // 0x88
};

struct UNiagaraPreviewAxis_InterpParamBase : UNiagaraPreviewAxis {
	FName Param; // 0x28
	int32_t Count; // 0x30
};

struct UMaterialController : UObject {
	TWeakObjectPtr<UMaterialInstanceDynamic> RelatedMID; // 0x30
};

struct UPrefabAsset : UObject {
	TMap<FString, FSoftObjectPath> AssetReferences; // 0x28
	FSoftObjectPath GeneratedBlueprintAssetReference; // 0x78
	FSoftObjectPath SimplifiedMeshAssetReference; // 0x90
	FGuid PrefabId; // 0xa8
	FString PrefabContent; // 0xb8
	FString PrefabHash; // 0xc8
	int32_t NumActors; // 0xd8
	FVector PrefabPivot; // 0xdc
};

struct UInterpTrackSound : UInterpTrackVectorBase {
	TArray<FSoundTrackKey> Sounds; // 0x90
	char bPlayOnReverse : 1; // 0xa0
	char bContinueSoundOnMatineeEnd : 1; // 0xa0
	char bSuppressSubtitles : 1; // 0xa0
	char bTreatAsDialogue : 1; // 0xa0
	char bAttach : 1; // 0xa0
};

struct AMKPlayerControllerEx : AController {
	APlayerController* SelfPlayerController; // 0x3c8
};

struct UVehicleWheel : UObject {
	UStaticMesh* CollisionMesh; // 0x28
	bool bDontCreateShape; // 0x30
	bool bAutoAdjustCollisionSize; // 0x31
	FVector Offset; // 0x34
	float ShapeRadius; // 0x40
	float ShapeWidth; // 0x44
	float Mass; // 0x48
	float DampingRate; // 0x4c
	float SteerAngle; // 0x50
	bool bAffectedByHandbrake; // 0x54
	UTireType* TireType; // 0x58
	UTireConfig* TireConfig; // 0x60
	float LatStiffMaxLoad; // 0x68
	float LatStiffValue; // 0x6c
	float LongStiffValue; // 0x70
	float SuspensionForceOffset; // 0x74
	float SuspensionMaxRaise; // 0x78
	float SuspensionMaxDrop; // 0x7c
	float SuspensionNaturalFrequency; // 0x80
	float SuspensionDampingRatio; // 0x84
	EWheelSweepType SweepType; // 0x88
	float MaxBrakeTorque; // 0x8c
	float MaxHandBrakeTorque; // 0x90
	UWheeledVehicleMovementComponent* VehicleSim; // 0x98
	int32_t WheelIndex; // 0xa0
	float DebugLongSlip; // 0xa4
	float DebugLatSlip; // 0xa8
	float DebugNormalizedTireLoad; // 0xac
	float DebugWheelTorque; // 0xb4
	float DebugLongForce; // 0xb8
	float DebugLatForce; // 0xbc
	FVector Location; // 0xc0
	FVector OldLocation; // 0xcc
	FVector Velocity; // 0xd8
};

struct ALandscapeProxy : AActor {
	ULandscapeSplinesComponent* SplineComponent; // 0x328
	FGuid LandscapeGuid; // 0x330
	FIntPoint LandscapeSectionOffset; // 0x350
	int32_t MaxLODLevel; // 0x358
	float LODDistanceFactor; // 0x35c
	ELandscapeLODFalloff LODFalloff; // 0x360
	float ComponentScreenSizeToUseSubSections; // 0x364
	float LOD0ScreenSize; // 0x368
	float LOD0DistributionSetting; // 0x36c
	float LODDistributionSetting; // 0x370
	float TessellationComponentScreenSize; // 0x374
	bool UseTessellationComponentScreenSizeFalloff; // 0x378
	float TessellationComponentScreenSizeFalloff; // 0x37c
	int32_t OccluderGeometryLOD; // 0x380
	int32_t StaticLightingLOD; // 0x384
	UPhysicalMaterial* DefaultPhysMaterial; // 0x388
	float StreamingDistanceMultiplier; // 0x390
	UMaterialInterface* LandscapeMaterial; // 0x398
	UMaterialInterface* LandscapeHoleMaterial; // 0x3c0
	TArray<FLandscapeProxyMaterialOverride> LandscapeMaterialsOverride; // 0x3c8
	bool bMeshHoles; // 0x3d8
	char MeshHolesMaxLod; // 0x3d9
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x3e0
	int32_t VirtualTextureNumLods; // 0x3f0
	int32_t VirtualTextureLodBias; // 0x3f4
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x3f8
	float NegativeZBoundsExtension; // 0x3fc
	float PositiveZBoundsExtension; // 0x400
	TArray<ULandscapeComponent*> LandscapeComponents; // 0x408
	TArray<ULandscapeHeightfieldCollisionComponent*> CollisionComponents; // 0x418
	TArray<UHierarchicalInstancedStaticMeshComponent*> FoliageComponents; // 0x428
	bool bHasLandscapeGrass; // 0x49c
	float StaticLightingResolution; // 0x4a0
	char bCastStaticShadow : 1; // 0x4a4
	char bCastShadowAsTwoSided : 1; // 0x4a4
	char bCastFarShadow : 1; // 0x4a4
	char bAffectDistanceFieldLighting : 1; // 0x4a8
	FLightingChannels LightingChannels; // 0x4a9
	char bUseMaterialPositionOffsetInStaticLighting : 1; // 0x4ac
	char bRenderCustomDepth : 1; // 0x4ac
	int32_t CustomDepthStencilValue; // 0x4b0
	float LDMaxDrawDistance; // 0x4b4
	FLightmassPrimitiveSettings LightmassSettings; // 0x4b8
	int32_t CollisionMipLevel; // 0x4d0
	int32_t SimpleCollisionMipLevel; // 0x4d4
	float CollisionThickness; // 0x4d8
	FBodyInstance BodyInstance; // 0x4e0
	char bGenerateOverlapEvents : 1; // 0x670
	char bBakeMaterialPositionOffsetIntoCollision : 1; // 0x670
	int32_t ComponentSizeQuads; // 0x674
	int32_t SubsectionSizeQuads; // 0x678
	int32_t NumSubsections; // 0x67c
	char bUsedForNavigation : 1; // 0x680
	char bFillCollisionUnderLandscapeForNavmesh : 1; // 0x680
	bool bUseDynamicMaterialInstance; // 0x684
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x685
	bool bUseLandscapeForCullingInvisibleHLODVertices; // 0x686
	bool bHasLayersContent; // 0x687
	TMap<UTexture2D*, ULandscapeWeightmapUsage*> WeightmapUsageMap; // 0x688
};

struct UMovieSceneFloatSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe0
};

struct UShapeComponent : UPrimitiveComponent {
	UBodySetup* ShapeBodySetup; // 0x4b0
	UNavAreaBase* AreaClass; // 0x4b8
	FColor ShapeColor; // 0x4c0
	char bDrawOnlyIfSelected : 1; // 0x4c4
	char bShouldCollideWhenPlacing : 1; // 0x4c4
	char bDynamicObstacle : 1; // 0x4c4
};

struct UEditableGameplayTagQueryExpression_AnyTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UCapsuleComponent : UShapeComponent {
	float CapsuleHalfHeight; // 0x4c8
	float CapsuleRadius; // 0x4cc
};

struct UMaterialExpressionTangentOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UBravoHotelAnimInstanceWeapon : UAnimInstance {
	ABravoHotelCharacter* CharacterRef; // 0x268
	ABravoHotelRangedWeapon* WeaponRef; // 0x270
	UBravoHotelAnimInstanceFPP* CharacterAnimInstance1PRef; // 0x278
	float DeltaTime; // 0x280
	FVector ArmsOffset; // 0x284
	FVector RootJointScale; // 0x290
	float ItemRecoilPitchAngle; // 0x29c
	float ItemRecoilYawAngle; // 0x2a0
	FRotator CollideRotation; // 0x2a4
	float CollideAlpha; // 0x2b0
	bool bIsDefaultTransformUpdated; // 0x2b4
	FVector SightSocketDeltaLocation; // 0x2b8
	FRotator SightSocketDeltaRotation; // 0x2c4
	bool bIsADS; // 0x2d0
	FVector WeaponLocation; // 0x2d4
	FRotator WeaponRotation; // 0x2e0
	FTransform WeaponTransform; // 0x2f0
	EWeaponFireMode FireMode; // 0x320
	bool bIsAimingDownside; // 0x321
};

struct UBravoHotelDetectItemSpawnBoxComponent : UBoxComponent {
	TArray<FWorldSpawnItemInfo> SpawnItemList; // 0x4d8
	float CheckItemSpawnDistance; // 0x4fc
	float CheckUnImportanttemSpawnDistance; // 0x500
};

struct UDatasmithPostProcessVolumeTemplate : UDatasmithObjectTemplate {
	FDatasmithPostProcessSettingsTemplate Settings; // 0x30
	char bEnabled : 1; // 0x70
	char bUnbound : 1; // 0x70
};

struct UJoinSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UPaperTerrainComponent : UPrimitiveComponent {
	UPaperTerrainMaterial* TerrainMaterial; // 0x4b0
	bool bClosedSpline; // 0x4b8
	bool bFilledSpline; // 0x4b9
	UPaperTerrainSplineComponent* AssociatedSpline; // 0x4c0
	int32_t RandomSeed; // 0x4c8
	float SegmentOverlapAmount; // 0x4cc
	FLinearColor TerrainColor; // 0x4d0
	int32_t ReparamStepsPerSegment; // 0x4e0
	ESpriteCollisionMode SpriteCollisionDomain; // 0x4e4
	float CollisionThickness; // 0x4e8
	UBodySetup* CachedBodySetup; // 0x4f0
};

struct UMaterialExpressionOneMinus : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct ABravoHotelTeamPlayerStart : APlayerStart {
	UBoxComponent* SpawnLocationBoxComponent; // 0x358
	float CharacterHalfHeight; // 0x360
	bool bUseAreaSystem; // 0x364
	FString AreaName; // 0x370
	int32_t MaxPlayerCountInArea; // 0x390
	FString PlayerStartName; // 0x398
	int32_t MaxPlayerCount; // 0x3a8
	bool bUseSpawnBound; // 0x3ac
	float SpawnBoundScale; // 0x3b0
	int32_t AreaWeight; // 0x3b4
};

struct UBravoHotelReportDataManager : UObject {
	UObject* CurrWorldContext; // 0x368
};

struct UCoherentUIGTAudioWrapper : UObject {
	UObject* Owner; // 0x28
	TMap<int32_t, FCoherentSound> Sounds; // 0x30
};

struct UUW-Lobby_Craft_Recipe_Weapon_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UHorizontalBox* HorizontalBox_Rarity; // 0x250
	UHorizontalBox* HorizontalBox_Rarity_NotOwn; // 0x258
	UImage* Image_310; // 0x260
	UImage* Image_Weapon_6Grade_bg; // 0x268
	UImage* Img_Icon; // 0x270
	URetainerBox* RetainerBox_2; // 0x278
	UTextBlock* T_CurrentCount; // 0x280
	UTextBlock* T_Level; // 0x288
	UTextBlock* T_MaxCount; // 0x290
	UWidgetSwitcher* WidgetSwitcher_Rarity; // 0x298
	int32_t ItemWeaponID; // 0x2a0
	FBravoHotelWeaponInfo WeaponInfo; // 0x2a8
	FInventoryItemInfo WeaponItemInfo; // 0xdd8
	int32_t CurrentCount; // 0xe70
};

struct UPathFollowingComponent : UActorComponent {
	UNavMovementComponent* MovementComp; // 0xe8
	ANavigationData* MyNavData; // 0xf8
};

struct UBravoHotelCharacterMovementComponent : UCharacterMovementComponent {
	float ReduceCharacterSpeedInGrenadeExplosionRangeModifier; // 0x6d0
	float MaxSprintSpeed; // 0x6d4
	float MaxWalkSpeedProned; // 0x6e8
	float DepthWaterNoProne; // 0x6ec
	float MaxRocketJumpSpeed; // 0x6f0
	float FallingDecelerationDuration; // 0x6f4
	float MaxWalkSpeedHeartBeatSensor; // 0x6f8
	char bProneMaintainsBaseLocation : 1; // 0x6fc
	char bWantsToProne : 1; // 0x6fc
	float MaxSprintSpeedCrouched; // 0x700
	float PronedHalfHeight; // 0x704
	char bSwimMaintainsBaseLocation : 1; // 0x70c
	float ParachuteKValue; // 0x710
	float ClientNetSendMoveDeltaTimeScaleBySpectator; // 0x714
	float ClientServerSyncSpeed; // 0x718
	char bCanWalkOffLedgesWhenProning : 1; // 0x71c
	float MaxSprintSpeedProned; // 0x728
	float SwimHalfHeight; // 0x72c
	float LastMaxSpeed; // 0x730
	float MaxRunSpeed; // 0x734
	float AngleUnderWater; // 0x738
	float MoveRightSpeedModifier; // 0x748
	float DepthWaterSuface; // 0x750
	float MaxWalkSpeedAMP; // 0x758
	float CurrentWaterDepth; // 0x75c
	float DepthUnderWater; // 0x760
	float MaxParachuteSpeed; // 0x764
	FFloatRange SkydivingKValueRange; // 0x768
	float DepthWaterNoCrouch; // 0x778
	float MaxRunSpeedProned; // 0x77c
	float MoveBackSpeedModifier; // 0x780
	float MaxRunSpeedCrouched; // 0x784
	float ServerControlRotationInveral; // 0x788
	float LastGroundStateChangedTime; // 0x7a0
	ABravoHotelCharacter* BravoHotelCharacterOwner; // 0x7a8
	UCurveFloat* MoveSlopeSpeedModifierCurve; // 0x7c0
	float WalkInWaterSpeedModifier; // 0x7cc
	float WalkInNoProneWaterSpeedModifier; // 0x7e0
	FReplicationMoveParameter MoveParameter; // 0x7e8
	FFloatRange SkydivingPitchRange; // 0x7f0
};

struct UBrushBuilder : UObject {
	FString BitmapFilename; // 0x28
	FString Tooltip; // 0x38
	char NotifyBadParams : 1; // 0x48
	TArray<FVector> Vertices; // 0x50
	TArray<FBuilderPoly> Polys; // 0x60
	FName Layer; // 0x70
	char MergeCoplanars : 1; // 0x78
};

struct USimpleConstructionScript : UObject {
	TArray<USCS_Node*> RootNodes; // 0x28
	TArray<USCS_Node*> AllNodes; // 0x38
	USCS_Node* DefaultSceneRootNode; // 0x48
};

struct UBravoHotelPoolingActorComponent : UActorComponent {
	TMap<AActor*, int32_t> DefaultPoolingActor; // 0xb0
	TMap<UObject*, FActorPoolInfo> ActorPoolInfos; // 0x100
};

struct UMaterialExpressionTextureProperty : UMaterialExpression {
	FExpressionInput TextureObject; // 0x40
	EMaterialExposedTextureProperty Property; // 0x54
};

struct UABP-Parachute_C : UBravoHotelAnimInstanceParachute {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2d0
	FAnimNode_Root AnimGraphNode_Root; // 0x2d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x308
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x330
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x358
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x380
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x3a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x3d0
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x448
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x478
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x558
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x588
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x600
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x630
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x6a8
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x6d8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x788
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x7a8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x7c8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x8d0
	FVector RightHandleLocation; // 0x9d8
	FVector LeftHandleLocation; // 0x9e4
};

struct ABHPersonalSupplyBoxDummy : ABravoHotelDropBoxActor {
	int32_t playerGUID; // 0x3a8
};

struct UInteractiveToolPropertySet : UObject {
	UObject* CachedProperties; // 0x40
	bool bIsPropertySetEnabled; // 0x48
};

struct UMaterialExpressionBreakMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput MaterialAttributes; // 0x40
};

struct UBravoHotelAutoMoveSaveGame : USaveGame {
	FVector StartPos; // 0x28
	TArray<float> RotationKeyTime; // 0x38
	TArray<FRotator> RotationData; // 0x48
	TArray<float> MoveKeyTime; // 0x58
	TArray<FVector> MoveData; // 0x68
	TArray<float> RunKeyTime; // 0x78
	TArray<bool> RunData; // 0x88
	TArray<float> ActionKeyTime; // 0x98
	TArray<EAutoMoveSnapshotActionType> ActionData; // 0xa8
	TArray<FVector> ActionLocationData; // 0xb8
};

struct UMaterialExpressionSceneTexture : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
	ESceneTextureId SceneTextureId; // 0x54
	bool bFiltered; // 0x55
};

struct UInAppPurchaseComponent : UActorComponent {
	FMulticastInlineDelegate InAppPurchaseLogMessage; // 0xb0
	FMulticastInlineDelegate GetItemsDetailsSuccess; // 0xc0
	FMulticastInlineDelegate GetItemsDetailsFailure; // 0xd0
	FMulticastInlineDelegate PurchaseConfirmationSuccess; // 0xe0
	FMulticastInlineDelegate PurchaseConfirmationFailure; // 0xf0
	FMulticastInlineDelegate GetPurchaseHistorySuccess; // 0x100
	FMulticastInlineDelegate GetPurchaseHistoryFailure; // 0x110
};

struct UUW-Matchend_BuffList_Popup_C : UUserWidget {
	UWidgetAnimation* Anim_Show; // 0x248
	UCanvasPanel* CanvasPanel_Main; // 0x250
	UTextBlock* T_DamageDecrease; // 0x258
	UTextBlock* T_DamageDecrease2; // 0x260
	UTextBlock* T_DamageIncrease; // 0x268
	UTextBlock* T_DamageIncrease2; // 0x270
	UUW-Matchend_BuffList_C* UW-Matchend_BuffList; // 0x278
	UUW-Matchend_BuffList_C* UW-Matchend_BuffList_2; // 0x280
	UUW-Matchend_BuffList_C* UW-Matchend_BuffList_3; // 0x288
	UUW-Matchend_BuffList_C* UW-Matchend_BuffList_4; // 0x290
	UUW-Matchend_BuffList_C* UW-Matchend_BuffList_6; // 0x298
	UUW-Matchend_BuffList_C* UW-Matchend_BuffList_7; // 0x2a0
	UVerticalBox* VerticalBox_Left; // 0x2a8
	UVerticalBox* VerticalBox_Right; // 0x2b0
	UWidgetSwitcher* WidgetSwitcher_Attacker; // 0x2b8
};

struct ULuminARCandidateImage : UARCandidateImage {
	bool bUseUnreliablePose; // 0x58
	bool bImageIsStationary; // 0x59
};

struct UUW-Lobby_WeaponInfo_C : UUserWidget {
	UImage* Image_273; // 0x248
	UUW-Lobby_ItemName_C* UW-Lobby_ItemName; // 0x250
	UUW-Lobby_WeaponInfo_Stat_C* UW-Lobby_WeaponInfo_Stat; // 0x258
};

struct UBravoHotelReportUserWidget : UUserWidget {
	UButton* ReportButton; // 0x248
	UButton* CancelButton; // 0x250
	UTextBlock* SelectedUserNickName; // 0x258
};

struct ABP-WinCam_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	UCameraComponent* WorldViewCamera; // 0x330
	UCameraComponent* FarCamera; // 0x338
	UCameraComponent* NearCamera; // 0x340
	USceneComponent* DefaultSceneRoot; // 0x348
	ABravoHotelCharacter* CharacterRef; // 0x350
	FTransform TargetNearCameraTransform; // 0x360
	float DeltaTime; // 0x390
	FTransform TargetFarCameraTransform; // 0x3a0
	ABravoHotelPlayerController* PlayerControllerRef; // 0x3d0
	bool bIsBackgroundScene; // 0x3d8
	TArray<ABravoHotelCharacter*> WinTeamCharacters; // 0x3e0
	TArray<FVector> DuoLocation_Near; // 0x3f0
	FVector CharacterOriginLocation; // 0x400
	TArray<FRotator> DuoRotation_Near; // 0x410
	TArray<FVector> DuoLocation_Far; // 0x420
	TArray<FRotator> DuoRotation_Far; // 0x430
	TArray<FVector> TrioLocation_Near; // 0x440
	TArray<FRotator> TrioRotation_Near; // 0x450
	TArray<FVector> TrioLocation_Far; // 0x460
	TArray<FRotator> TrioRotation_Far; // 0x470
	TArray<FVector> SquadLocation_Near; // 0x480
	TArray<FRotator> SquadRotation_Near; // 0x490
	TArray<FVector> SquadLocation_Far; // 0x4a0
	TArray<FRotator> SquadRotation_Far; // 0x4b0
	FRotator CharacterOriginRotation; // 0x4c0
};

struct UParticleModuleAccelerationOverLifetime : UParticleModuleAccelerationBase {
	FRawDistributionVector AccelOverLife; // 0x38
};

struct UMovieSceneParticleSection : UMovieSceneSection {
	FMovieSceneParticleChannel ParticleKeys; // 0xe0
};

struct UUW-BlackMarket_Slot_Preset_C : UUW-BlackMarket_Slot_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UButton* BTN-Menu02; // 0x3e0
	UButton* BTN-Menu03; // 0x3e8
	UCanvasPanel* CP-SlotInfo; // 0x3f0
	UImage* IMG-BG; // 0x3f8
	UImage* IMG-BG-Border; // 0x400
	UImage* IMG-Item; // 0x408
	UImage* IMG-Mask; // 0x410
	UImage* IMG-Over; // 0x418
	UImage* IMG-Over-Border; // 0x420
	UOverlay* Menu02; // 0x428
	UOverlay* Menu03; // 0x430
	UOverlay* Overlay_Mask; // 0x438
	UTextBlock* TXT-ItemDesc; // 0x440
	UTextBlock* TXT-ItemName; // 0x448
	UTextBlock* TXT-Menu01; // 0x450
	UTextBlock* TXT-Menu02; // 0x458
	UTextBlock* TXT-Menu03; // 0x460
};

struct ABravoHotelLadder : AActor {
	USceneComponent* RootScene; // 0x328
	UBoxComponent* InteractiveCheckBox; // 0x330
	USceneComponent* UpStart; // 0x338
	USceneComponent* UpEnd; // 0x340
	USceneComponent* DownStart; // 0x348
	USceneComponent* DownEnd; // 0x350
	UArrowComponent* LadderPoint; // 0x358
	int32_t StepMinCount; // 0x360
	int32_t StepCount; // 0x364
	float StepHeight; // 0x368
	float StepHalfWidth; // 0x36c
	float StepWidthScale; // 0x370
	float StepWidthMargin; // 0x374
	UStaticMesh* StepMesh; // 0x378
	bool OnlySnapToCenter; // 0x380
	bool TestLadderHiddenInGame; // 0x381
	bool DebugMode; // 0x382
	float AvailableDistanceAtTop; // 0x384
	float AvailableDistanceAtBottom; // 0x388
	float AvailableDistanceInAir; // 0x38c
	float AvailableMinYawAtTop; // 0x390
	float AvailableMaxYawAtTop; // 0x394
	float AvailableMinYawAtBottom; // 0x398
	float AvailableMaxYawAtBottom; // 0x39c
	float BottomAdjustedHeight; // 0x3a0
	float TopRelativeX; // 0x3a4
	float BottomRelativeX; // 0x3a8
	bool IsTopOccupied; // 0x3ac
	bool IsBottomOccupied; // 0x3ad
	TArray<ABravoHotelCharacter*> UsingPlayers; // 0x3c8
};

struct UPhysicalMaterialMask : UObject {
	int32_t UVChannelIndex; // 0x28
	TextureAddress AddressX; // 0x2c
	TextureAddress AddressY; // 0x2d
};

struct URetainerBox : UContentWidget {
	bool RenderOnInvalidation; // 0x120
	bool RenderOnPhase; // 0x121
	int32_t Phase; // 0x124
	int32_t PhaseCount; // 0x128
	UMaterialInterface* EffectMaterial; // 0x130
	FName TextureParameter; // 0x138
};

struct UNiagaraDataInterfaceAudioSpectrum : UNiagaraDataInterfaceAudioSubmix {
	int32_t Resolution; // 0x38
	float MinimumFrequency; // 0x3c
	float MaximumFrequency; // 0x40
	float NoiseFloorDb; // 0x44
};

struct UBP_KeyCombination_C : UObject {
	FString Name; // 0x28
	TArray<UBP_KeyInput_C*> Key Inputs; // 0x38
	TArray<FSKeyInput> Default Combination; // 0x48
	bool Can't Be None; // 0x58
	TArray<UBP_KeyConflict_C*> Conflicting Mappings Blocked; // 0x60
	TArray<UBP_KeyConflict_C*> Conflicting Mappings Info; // 0x70
	FMulticastInlineDelegate Combination Updated; // 0x80
	UBP_KeyMapping_C* Parent Mapping; // 0x90
};

struct UBravoHotelVehicleWheel : UVehicleWheel {
	UCurveFloat* DriftingLatStiffMaxLoadCurve; // 0xf0
	UCurveFloat* DriftingLatStiffValueCurve; // 0xf8
	UCurveFloat* DriftingLongStiffValueCurve; // 0x100
	bool bUseDriftingLifeTime; // 0x108
	float DriftingLifeTime; // 0x10c
	UBravoHotelVehicleMovementComponent* VehicleMovement; // 0x120
};

struct UBravoHotelReplayPlayerListWidget : UUserWidget {
	ABravoHotelMK3DReplayController* ReplayController; // 0x248
	UScrollBox* SB_PlayerList; // 0x250
	EPlayerListSortType PlayerListSortType; // 0x258
	TArray<UUserWidget*> PlayerListItemArray; // 0x260
	TMap<int32_t, UUserWidget*> PlayerListGroupMap; // 0x270
	TArray<UUserWidget*> PlayerListGroupArrayForSort; // 0x2c0
};

struct UNiagaraRibbonRendererProperties : UNiagaraRendererProperties {
	UMaterialInterface* Material; // 0x50
	FNiagaraUserParameterBinding MaterialUserParamBinding; // 0x58
	ENiagaraRibbonFacingMode FacingMode; // 0x80
	float UV0TilingDistance; // 0x84
	FVector2D UV0Scale; // 0x88
	FVector2D UV0Offset; // 0x90
	ENiagaraRibbonAgeOffsetMode UV0AgeOffsetMode; // 0x98
	float UV1TilingDistance; // 0x9c
	FVector2D UV1Scale; // 0xa0
	FVector2D UV1Offset; // 0xa8
	ENiagaraRibbonAgeOffsetMode UV1AgeOffsetMode; // 0xb0
	ENiagaraRibbonDrawDirection DrawDirection; // 0xb1
	float CurveTension; // 0xb4
	ENiagaraRibbonTessellationMode TessellationMode; // 0xb8
	int32_t TessellationFactor; // 0xbc
	bool bUseConstantFactor; // 0xc0
	float TessellationAngle; // 0xc4
	bool bScreenSpaceTessellation; // 0xc8
	FNiagaraVariableAttributeBinding PositionBinding; // 0xd0
	FNiagaraVariableAttributeBinding ColorBinding; // 0x148
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x1c0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x238
	FNiagaraVariableAttributeBinding RibbonTwistBinding; // 0x2b0
	FNiagaraVariableAttributeBinding RibbonWidthBinding; // 0x328
	FNiagaraVariableAttributeBinding RibbonFacingBinding; // 0x3a0
	FNiagaraVariableAttributeBinding RibbonIdBinding; // 0x418
	FNiagaraVariableAttributeBinding RibbonLinkOrderBinding; // 0x490
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x508
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x580
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x5f8
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x670
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x6e8
};

struct UBravoHotelMapCompWidget : UUserWidget {
	ABattleRoyaleGameState* BattleRoyaleGameState; // 0x248
	ABravoHotelGameState* BravoHotelGameState; // 0x250
	int32_t TeamSize; // 0x258
	bool bForceUpdateAllWidgets; // 0x260
	TArray<FMapPlayerInfo> MapPlayerInfos; // 0x268
	FMapPlayerInfo LocalMapPlayerInfo; // 0x278
	FPersonalSupplyBoxInfo PersonalSupplyBoxInfo; // 0x2d0
	FVector WorldCenter; // 0x2e0
	FVector2D WorldSize; // 0x2ec
	FVector2D BaseMapSize; // 0x2f4
	FVector2D ParentWidgetSize; // 0x2fc
	float ScaleFactor; // 0x304
	float BaseScaleFactor; // 0x308
	float TargetScaleFactor; // 0x30c
	FVector2D TargetMapPos; // 0x310
	FVector2D PivotPosOnViewport; // 0x318
	bool bNeedToTranslateMapToPlayerPos; // 0x320
	int32_t GridLevel; // 0x324
	int32_t CurrentGridLevel; // 0x328
	TArray<float> GridUnits; // 0x330
	TArray<FLinearColor> GridColors; // 0x340
	float LineP2CAngle; // 0x350
	float LineP2CHeight; // 0x354
	FVector2D LineP2CPosonMap; // 0x358
	FMapCompBlueZoneInfo MapCompBlueZoneInfo; // 0x360
	bool IsUsingOuterAreaBlueZone; // 0x38c
	bool UsingOuterAreaBlueZoneVisible; // 0x38d
	UBravoHotelAircraftRouteWidget* AircraftWidget; // 0x390
	FReplayCircleInfo ReplayCircleInfo; // 0x39c
	bool bIsFreeCamVisible; // 0x3ac
	FVector2D FreeCamPosition; // 0x3b0
	float FreeCamAngle; // 0x3b8
	TMap<int32_t, UBravoHotelWorldMapAreaWidget*> MaterialItemList; // 0x3c0
	TMap<int32_t, UBravoHotelWorldMapAreaWidget*> LocalPingList; // 0x410
	UBravoHotelWorldMapAreaWidget* ExpertWeaponItem; // 0x460
	bool bShowWorldMap; // 0x468
	TArray<UBravoHotelWorldMapAreaWidget*> AreaWidgetsRef; // 0x470
	TArray<UBravoHotelWorldMapAreaWidget*> UsedAreaWidgetsRef; // 0x480
	UUserWidget* ParentWidgetRef; // 0x498
	UBravoHotelMapDrawWidget* UW_MapDrawWidget_Circle; // 0x4a0
	UBravoHotelMapDrawWidget* UW_MapDrawWidget_Grid; // 0x4a8
	UImage* LinePlayerToCircle; // 0x4b0
	UImage* LineRouteDefault; // 0x4b8
	UImage* LineRouteDotline; // 0x4c0
	UImage* DescentStartPoint; // 0x4c8
	UImage* DescentEndPoint; // 0x4d0
	UImage* CircleMask; // 0x4d8
	UImage* ReplayCircleMask; // 0x4e0
	int32_t MiniMapLevel; // 0x4e8
	UTexture* DefaultCircleTexture; // 0x4f0
	UMaterialInstance* CircleMaskMaterial; // 0x4f8
	UMaterialInstance* ReplayMaskMaterial; // 0x500
	UMaterialInstanceDynamic* CircleMaterialInstance; // 0x508
	UMaterialInstanceDynamic* ReplayMaterialInstance; // 0x510
};

struct UNiagaraPreviewAxis_InterpParamVector2D : UNiagaraPreviewAxis_InterpParamBase {
	FVector2D Min; // 0x38
	FVector2D MAX; // 0x40
};

struct UParticleModuleAttractorPoint : UParticleModuleAttractorBase {
	FRawDistributionVector Position; // 0x30
	FRawDistributionFloat Range; // 0x78
	FRawDistributionFloat Strength; // 0xa8
	char StrengthByDistance : 1; // 0xd8
	char bAffectBaseVelocity : 1; // 0xd8
	char bOverrideVelocity : 1; // 0xd8
	char bUseWorldSpacePosition : 1; // 0xd8
	char Positive_X : 1; // 0xd8
	char Positive_Y : 1; // 0xd8
	char Positive_Z : 1; // 0xd8
	char Negative_X : 1; // 0xd8
	char Negative_Y : 1; // 0xd9
	char Negative_Z : 1; // 0xd9
};

struct UProgressWidgetStyle : USlateWidgetStyleContainerBase {
	FProgressBarStyle ProgressBarStyle; // 0x30
};

struct UGameEngine : UEngine {
	float MaxDeltaTime; // 0xde8
	float ServerFlushLogInterval; // 0xdec
	UGameInstance* GameInstance; // 0xdf0
};

struct UPhysicalAnimationComponent : UActorComponent {
	float StrengthMultiplyer; // 0xb0
	USkeletalMeshComponent* SkeletalMeshComponent; // 0xb8
};

struct UGameplayTagsList : UObject {
	FString ConfigFileName; // 0x28
	TArray<FGameplayTagTableRow> GameplayTagList; // 0x38
};

struct UBP-BHGameInstanceWithSettings_C : UBravoHotelGameInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x548
	UBP_GameSettingsWrapper_C* Game Settings Wrapper; // 0x550
	FVector LastPCPosition; // 0x558
};

struct ABP-HeartBeatSensorEffect_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	UWidgetComponent* Widget; // 0x330
	USceneComponent* DefaultSceneRoot; // 0x338
	ABravoHotelCharacter* TargetCharacter; // 0x340
	UCurveFloat* LoudnessCurve; // 0x348
	float HeartBeatSensorLength; // 0x350
	ECharacterGroundState TagetGroundState; // 0x354
	bool IsFiring; // 0x355
	ABravoHotelRangedWeapon* CurrentWeapon; // 0x358
	FTimerHandle SingleTimerEvent; // 0x360
	bool IsSingleFiring; // 0x368
};

struct USpringArmComponent : USceneComponent {
	float TargetArmLength; // 0x230
	FVector SocketOffset; // 0x234
	FVector TargetOffset; // 0x240
	float ProbeSize; // 0x24c
	ECollisionChannel ProbeChannel; // 0x250
	char bDoCollisionTest : 1; // 0x254
	char bUsePawnControlRotation : 1; // 0x254
	char bInheritPitch : 1; // 0x254
	char bInheritYaw : 1; // 0x254
	char bInheritRoll : 1; // 0x254
	char bEnableCameraLag : 1; // 0x254
	char bEnableCameraRotationLag : 1; // 0x254
	char bUseCameraLagSubstepping : 1; // 0x254
	char bDrawDebugLagMarkers : 1; // 0x255
	float CameraLagSpeed; // 0x258
	float CameraRotationLagSpeed; // 0x25c
	float CameraLagMaxTimeStep; // 0x260
	float CameraLagMaxDistance; // 0x264
};

struct USlotItemWidget_C : UBravoHotelSettingSlotWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x4e8
	UWidgetAnimation* Over; // 0x4f0
	UButton* Button_107; // 0x4f8
	UButton* Button_441; // 0x500
	UButton* Button_Type; // 0x508
	UCanvasPanel* ButtonType; // 0x510
	UComboBoxString* ComboBoxString_237; // 0x518
	UCanvasPanel* ComboBoxType; // 0x520
	UImage* Down; // 0x528
	UEditableText* EditableText_80; // 0x530
	UHorizontalBox* HorizontalBox_1; // 0x538
	UHorizontalBox* HorizontalBox_191; // 0x540
	UImage* Image_153; // 0x548
	UImage* Image_204; // 0x550
	UImage* Image_414; // 0x558
	UCanvasPanel* Key; // 0x560
	UKeyImageWidget_C* KeyImageMain; // 0x568
	UKeyImageWidget_C* KeyImageSub; // 0x570
	UTextBlock* KeyLock; // 0x578
	UArrowBtn_C* LeftA; // 0x580
	UArrowBtn_C* LeftA_2; // 0x588
	UImage* LockMain; // 0x590
	UImage* LockSub; // 0x598
	UImage* MainBG; // 0x5a0
	UInputKeySelector* MainKeyInput; // 0x5a8
	UOverlay* Overlay_215; // 0x5b0
	UProgressBar* ProgressBar_150; // 0x5b8
	UArrowBtn_C* RightA; // 0x5c0
	UArrowBtn_C* RightA_2; // 0x5c8
	UselectTypeBtn_C* SelectBtn1; // 0x5d0
	UselectTypeBtn_C* SelectBtn2; // 0x5d8
	UselectTypeBtn_C* SelectBtn3; // 0x5e0
	UselectTypeBtn_C* SelectBtn4; // 0x5e8
	UselectTypeBtn_C* SelectBtn5; // 0x5f0
	UselectTypeBtn_C* SelectBtn6; // 0x5f8
	UCanvasPanel* SelectType; // 0x600
	UTextBlock* SelectValue; // 0x608
	USlider* Slider_139; // 0x610
	UCanvasPanel* SliderType; // 0x618
	UImage* SubBG; // 0x620
	UInputKeySelector* SubKeyInput; // 0x628
	UTextBlock* T_Button; // 0x630
	UTextBlock* Title_Text; // 0x638
	UImage* Up; // 0x640
	UTextBlock* Value; // 0x648
	UTextBlock* Value_2; // 0x650
	UWidgetSwitcher* WidgetSwitcher_1; // 0x658
	UWidgetSwitcher* WidgetSwitcher_281; // 0x660
	bool Lock; // 0x668
	int32_t Selected SeleteValue; // 0x66c
	int32_t TotalListSize; // 0x670
	TArray<TSoftObjectPtr<UTexture2D>> Empty; // 0x678
	FButtonStyle ButtonStyle; // 0x688
	FPointerEvent NewVar_1; // 0x900
	bool SliderIsInit; // 0x970
	FText EmptyText; // 0x978
	int32_t TempSaveComboBoxIndex; // 0x990
	FInputChord Temp; // 0x998
	float TempValue; // 0x9b8
	FText PreSliderText; // 0x9c0
	FString LResultString; // 0x9d8
	bool have.; // 0x9e8
	bool IsOnEditableText; // 0x9e9
	bool CompletSettingData; // 0x9ea
	FSettingInfo CompleteSettingInfo; // 0x9f0
	FSettingInfo TempSetting; // 0xa78
	bool ReMarkComboBox; // 0xb00
};

struct UChaosSolverSettings : UDeveloperSettings {
	FSoftClassPath DefaultChaosSolverActorClass; // 0x40
};

struct ABravoHotelRemoteController : ABravoHotelWeaponBase {
	FAnimSlot ActiveAnim; // 0x1be8
	UAkAudioEvent* ActiveSound; // 0x1bf8
	ERemoteControlState RemoteControlState; // 0x1c00
	int32_t SwitchOnSimulation; // 0x1c04
};

struct UParticleModuleEventReceiverBase : UParticleModuleEventBase {
	EParticleEventType EventGeneratorType; // 0x30
	FName EventName; // 0x34
};

struct UAnimCurveCompressionSettings : UObject {
	UAnimCurveCompressionCodec* Codec; // 0x28
};

struct UInAppPurchaseCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UBravoHotelPersonalSupplyBoxSlotItemWidget : UUserWidget {
	bool IsWeaponData; // 0x248
	bool IsConsumableItemData; // 0x249
	FInventoryItemInfo WeaponItemData; // 0x250
	FSupplyItem ConsumableItemData; // 0x2e8
};

struct ULowEntryLatentActionNone : UObject {
	bool Finished; // 0x28
	int32_t KeepAliveCount; // 0x2c
};

struct UNativeReplayKillEventMarker : UNativeReplayEventMarkerBasic {
	FMK3DHighlightKillEvent KillEvent; // 0x270
	float ClickToJumpDeltaSec; // 0x2a8
};

struct UAnimNotify_PlaySound : UAnimNotify {
	USoundBase* Sound; // 0x38
	float VolumeMultiplier; // 0x40
	float PitchMultiplier; // 0x44
	char bFollow : 1; // 0x48
	FName AttachName; // 0x4c
};

struct UMaterialExpressionStaticSwitchParameter : UMaterialExpressionStaticBoolParameter {
	FExpressionInput A; // 0x60
	FExpressionInput B; // 0x74
};

struct UDLSSOverrideSettings : UObject {
	EDLSSSettingOverride EnableDLSSInEditorViewportsOverride; // 0x28
	EDLSSSettingOverride EnableScreenpercentageManipulationInDLSSEditorViewportsOverride; // 0x29
	EDLSSSettingOverride EnableDLSSInPlayInEditorViewportsOverride; // 0x2a
	bool bShowDLSSIncompatiblePluginsToolsWarnings; // 0x2b
	EDLSSSettingOverride ShowDLSSSDebugOnScreenMessages; // 0x2c
};

struct UFoliageSettings : UDeveloperSettings {
	TArray<FCullDistancePreset> CullDistancePresets; // 0x38
	int32_t DesiredMaxTrianglesToRender; // 0x48
	float MinimumScreenSize; // 0x4c
	int32_t MaxOcclusionQueriesPerComponent; // 0x50
	int32_t MinOcclusionQueriesPerComponent; // 0x54
	int32_t MinInstancesPerOcclusionQuery; // 0x58
};

struct UInterpTrackLinearColorProp : UInterpTrackLinearColorBase {
	FName PropertyName; // 0x90
};

struct AMKPlayerStateEx : AInfo {
	APlayerState* SelfPlayerState; // 0x328
};

struct UTestMovieSceneTrack : UMovieSceneTrack {
	bool bHighPassFilter; // 0x58
	TArray<UMovieSceneSection*> SectionArray; // 0x60
};

struct UMagicLeapMeshTrackerComponent : USceneComponent {
	FMulticastInlineDelegate OnMeshTrackerUpdated; // 0x238
	bool ScanWorld; // 0x248
	EMagicLeapMeshType MeshType; // 0x249
	UBoxComponent* BoundingVolume; // 0x250
	EMagicLeapMeshLOD LevelOfDetail; // 0x258
	float PerimeterOfGapsToFill; // 0x25c
	bool Planarize; // 0x260
	float DisconnectedSectionArea; // 0x264
	bool RequestNormals; // 0x268
	bool RequestVertexConfidence; // 0x269
	EMagicLeapMeshVertexColorMode VertexColorMode; // 0x26a
	TArray<FColor> BlockVertexColors; // 0x270
	FLinearColor VertexColorFromConfidenceZero; // 0x280
	FLinearColor VertexColorFromConfidenceOne; // 0x290
	bool RemoveOverlappingTriangles; // 0x2a0
	UMRMeshComponent* MRMesh; // 0x2a8
	int32_t BricksPerFrame; // 0x2b0
};

struct UPaperTileSet : UObject {
	FIntPoint TileSize; // 0x28
	UTexture2D* TileSheet; // 0x30
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FIntMargin BorderMargin; // 0x48
	FIntPoint PerTileSpacing; // 0x58
	FIntPoint DrawingOffset; // 0x60
	int32_t WidthInTiles; // 0x68
	int32_t HeightInTiles; // 0x6c
	int32_t AllocatedWidth; // 0x70
	int32_t AllocatedHeight; // 0x74
	TArray<FPaperTileMetadata> PerTileData; // 0x78
	TArray<FPaperTileSetTerrain> Terrains; // 0x88
	int32_t TileWidth; // 0x98
	int32_t TileHeight; // 0x9c
	int32_t Margin; // 0xa0
	int32_t Spacing; // 0xa4
};

struct UWBP_SPS_UseItemSelectionMenu_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Bg1; // 0x250
	UImage* bg2; // 0x258
	UImage* Bg3; // 0x260
	UImage* Bg4; // 0x268
	UImage* Bg5; // 0x270
	UImage* Bg6; // 0x278
	UImage* Bg7; // 0x280
	UImage* Bg8; // 0x288
	UCanvasPanel* Canvas; // 0x290
	UImage* CenterCursor; // 0x298
	UTextBlock* DisplayText; // 0x2a0
	UImage* IconImage; // 0x2a8
	UImage* Index1; // 0x2b0
	UImage* Index2; // 0x2b8
	UImage* Index3; // 0x2c0
	UImage* Index4; // 0x2c8
	UImage* Index5; // 0x2d0
	UImage* Index6; // 0x2d8
	UImage* Index7; // 0x2e0
	UImage* Index8; // 0x2e8
	UTextBlock* Key1; // 0x2f0
	UTextBlock* Key2; // 0x2f8
	UTextBlock* Key3; // 0x300
	UTextBlock* Key4; // 0x308
	UTextBlock* Key5; // 0x310
	UTextBlock* Key6; // 0x318
	UTextBlock* Key7; // 0x320
	UTextBlock* Key8; // 0x328
	UTextBlock* Message2; // 0x330
	UTextBlock* Message3; // 0x338
	UTextBlock* Message3_1; // 0x340
	UTextBlock* Message3_2; // 0x348
	UTextBlock* Message3_3; // 0x350
	UTextBlock* Message3_4; // 0x358
	UTextBlock* Message3_5; // 0x360
	UTextBlock* Message3_6; // 0x368
	UTextBlock* Message3_7; // 0x370
	UTextBlock* Message3_8; // 0x378
	UTextBlock* Message4; // 0x380
	UTextBlock* Message5; // 0x388
	UTextBlock* Message6; // 0x390
	UTextBlock* Message7; // 0x398
	UTextBlock* Message8; // 0x3a0
	UTextBlock* Messgae1; // 0x3a8
	UImage* Over1; // 0x3b0
	UImage* Over2; // 0x3b8
	UImage* Over3; // 0x3c0
	UImage* Over4; // 0x3c8
	UImage* Over5; // 0x3d0
	UImage* Over6; // 0x3d8
	UImage* Over7; // 0x3e0
	UImage* Over8; // 0x3e8
	UWBP_SPS_UseItemSelectionIcon_C* UseSlot1; // 0x3f0
	UWBP_SPS_UseItemSelectionIcon_C* UseSlot2; // 0x3f8
	UWBP_SPS_UseItemSelectionIcon_C* UseSlot3; // 0x400
	UWBP_SPS_UseItemSelectionIcon_C* UseSlot4; // 0x408
	UWBP_SPS_UseItemSelectionIcon_C* UseSlot5; // 0x410
	UWBP_SPS_UseItemSelectionIcon_C* UseSlot6; // 0x418
	UWBP_SPS_UseItemSelectionIcon_C* UseSlot7; // 0x420
	UWBP_SPS_UseItemSelectionIcon_C* UseSlot8; // 0x428
	UUW-PlayerMarkerWidget_C* UW-PlayerMarkerWidget; // 0x430
	UWidgetSwitcher* WidgetSwitcher_133; // 0x438
	TArray<UWBP_SPS_SelectionIcon_C*> SelectionWidgets; // 0x440
	FVector2D MenuCenter; // 0x450
	FVector ReferenceVector; // 0x458
	FMulticastInlineDelegate Selected; // 0x468
	int32_t SelectedIndex; // 0x478
	float AngleSize; // 0x47c
	float DistanceFromCenter; // 0x480
	int32_t Divisions; // 0x484
	float SelectionToleranceFromCenter; // 0x488
	FMulticastInlineDelegate Hovered; // 0x490
	FMulticastInlineDelegate ClearPing; // 0x4a0
	FText Title; // 0x4b0
	FName ItemKey; // 0x4c8
	float OverOpacity; // 0x4d0
	float BgOpacity; // 0x4d4
	TMap<int32_t, FName> List; // 0x4d8
	ESlateVisibility IndexTextVisible; // 0x528
	bool NewVar_1; // 0x529
	TSoftObjectPtr<UPaperSprite> Image; // 0x530
	float TextOpacity; // 0x558
};

struct UInterpData : UObject {
	float InterpLength; // 0x28
	float PathBuildTime; // 0x2c
	TArray<UInterpGroup*> InterpGroups; // 0x30
	UInterpCurveEdSetup* CurveEdSetup; // 0x40
	float EdSectionStart; // 0x48
	float EdSectionEnd; // 0x4c
	char bShouldBakeAndPrune : 1; // 0x50
	UInterpGroupDirector* CachedDirectorGroup; // 0x58
	TArray<FName> AllEventNames; // 0x60
};

struct UAssetManager : UObject {
	TArray<UObject*> ObjectReferenceList; // 0x2c0
	bool bIsGlobalAsyncScanEnvironment; // 0x2d0
	bool bShouldGuessTypeAndName; // 0x2d1
	bool bShouldUseSynchronousLoad; // 0x2d2
	bool bIsLoadingFromPakFiles; // 0x2d3
	bool bShouldAcquireMissingChunksOnLoad; // 0x2d4
	bool bOnlyCookProductionAssets; // 0x2d5
	bool bIsBulkScanning; // 0x2d6
	bool bIsPrimaryAssetDirectoryCurrent; // 0x2d7
	bool bIsManagementDatabaseCurrent; // 0x2d8
	bool bUpdateManagementDatabaseAfterScan; // 0x2d9
	bool bIncludeOnlyOnDiskAssets; // 0x2da
	int32_t NumberOfSpawnedNotifications; // 0x2dc
};

struct UGeometryCollectionCache : UObject {
	FRecordedTransformTrack RecordedData; // 0x28
	UGeometryCollection* SupportedCollection; // 0x38
	FGuid CompatibleCollectionState; // 0x40
};

struct UUW-ScenarioQuest_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* EndQuest; // 0x250
	UWidgetAnimation* StartQuest; // 0x258
	UWidgetAnimation* Idle; // 0x260
	UImage* Bg; // 0x268
	UImage* Image_308; // 0x270
	UImage* Image_697; // 0x278
	UImage* Image_839; // 0x280
	UTextBlock* TextBlock_QuestDesc; // 0x288
	UTextBlock* TextBlock_QuestTitle; // 0x290
	UUW-ScenarioQuestCell_C* UW-ScenarioQuestCell; // 0x298
	UUW-ScenarioQuestCell_C* UW-ScenarioQuestCell_2; // 0x2a0
	UUW-ScenarioQuestCell_C* UW-ScenarioQuestCell_94; // 0x2a8
	UVerticalBox* VerticalBox_Tasks; // 0x2b0
	FQuestInfo QuestInfo; // 0x2b8
	FQuestData QuestData; // 0x2e8
	bool ActiveQuest; // 0x340
	TArray<FQuestInfo> PendingQuestInfo; // 0x348
};

struct UMaterialExpressionDotProduct : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UPreviewMeshCollection : UDataAsset {
	TArray<FPreviewMeshCollectionEntry> SkeletalMeshes; // 0x38
	USkeleton* Skeleton; // 0x50
};

struct USourceEffectRingModulationPreset : USoundEffectSourcePreset {
	FSourceEffectRingModulationSettings Settings; // 0x7c
};

struct AOnlineBeaconHost : AOnlineBeacon {
	int32_t ListenPort; // 0x358
	TArray<AOnlineBeaconClient*> ClientActors; // 0x360
};

struct USoundGroups : UObject {
	TArray<FSoundGroup> SoundGroupProfiles; // 0x28
};

struct UBravoHotelAudioRoomComponent : UAkRoomComponent {
	UStaticMeshComponent* ParentMeshComponent; // 0x288
	EOcclusionMethod OcclusionMethod; // 0x290
	FString AmbienceState; // 0x298
	bool bIsOnRoof; // 0x2a8
	int8_t OcclusionHeightLevel; // 0x2a9
	char OcclusionDepthLevel; // 0x2aa
	char IndoorConditionTargets; // 0x2ab
	int8_t HighestLevelInGroup; // 0x2c0
	AkMeshType MeshType; // 0x2d9
	int32_t LOD; // 0x2dc
	float WeldingThreshold; // 0x2e0
	TMap<UMaterialInterface*, FAkGeometrySurfaceOverride> StaticMeshSurfaceOverride; // 0x2e8
	FAkGeometrySurfaceOverride CollisionMeshSurfaceOverride; // 0x338
	char bEnableDiffraction : 1; // 0x348
	char bEnableDiffractionOnBoundaryEdges : 1; // 0x348
	FAudioGeometryData GeometryData; // 0x350
	UAkAuxBus* AuxBus; // 0x400
	FString AuxBusName; // 0x408
	float SendLevel; // 0x418
	float FadeRate; // 0x41c
};

struct ABP-MagazineBase_C : ABravoHotelMagazineForDrop {
	FPointerToUberGraphFrame UberGraphFrame; // 0x370
	float PhysicsSimulateTime; // 0x378
	float LifeTime; // 0x37c
	float AddImpulse; // 0x380
	char Stance; // 0x384
	float AddImpulse_Crouched; // 0x388
	float AddImpulse_Proned; // 0x38c
};

struct USoundNodeModulator : USoundNode {
	float PitchMin; // 0x48
	float PitchMax; // 0x4c
	float VolumeMin; // 0x50
	float VolumeMax; // 0x54
};

struct UUW-RoutePingWidget_C : UBravoHotelRoutePingWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UCanvasPanel* Canvas; // 0x250
	FMulticastInlineDelegate OnMarkerClicked; // 0x258
	ABravoHotelPlayerState* PlayerState; // 0x268
	TArray<FVector2D> PointsArray; // 0x270
	FVector2D StartPosition; // 0x280
	TArray<UUW-RoutePingWidget_Point_C*> PointWidgets; // 0x288
	TArray<UUW-RoutePingWidget_Line_C*> LineWidgets; // 0x298
	UUW-MapComp_C* UW-MapCompRef; // 0x2a8
	bool IsDrawing; // 0x2b0
	UUW-RoutePingWidget_Line_C* GuideLineWidgetRef; // 0x2b8
	FVector2D GuideLinePos; // 0x2c0
	bool IsUpdate; // 0x2c8
};

struct UDatasmithVREDSceneImportData : UDatasmithFBXSceneImportData {
	bool bMergeNodes; // 0x48
	bool bOptimizeDuplicatedNodes; // 0x49
	bool bImportMats; // 0x4a
	FString MatsPath; // 0x50
	bool bImportVar; // 0x60
	bool bCleanVar; // 0x61
	FString VarPath; // 0x68
	bool bImportLightInfo; // 0x78
	FString LightInfoPath; // 0x80
	bool bImportClipInfo; // 0x90
	FString ClipInfoPath; // 0x98
};

struct UParticleModuleVectorFieldRotationRate : UParticleModuleVectorFieldBase {
	FVector RotationRate; // 0x30
};

struct ABravoHotelDropBoxActor : AActor {
	EPickupRoot RootType; // 0x328
	UBoxComponent* RootBoxComponent; // 0x330
	UDropBoxInventoryComponent* InventoryComponent; // 0x338
	USphereComponent* InteractiveSphereComponent; // 0x340
	UBoxComponent* InteractiveCancleSphereComponent; // 0x348
	FName DropperNickName; // 0x350
	FName BoxName; // 0x358
	int32_t RarityIndex; // 0x360
	ABravoHotelCharacter* DetectedCharacter; // 0x368
};

struct UBP_KeyAction_C : UObject {
	FString Action Name; // 0x28
	FString Category; // 0x38
	TArray<UBP_KeyMapping_C*> Key Mappings; // 0x48
};

struct UFSM_FinishState_Async : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	float Timer; // 0x38
	FTimerHandle TimerHandle; // 0x40
	FMulticastInlineDelegate OnSuccess; // 0x48
	FMulticastInlineDelegate OnAborted; // 0x58
};

struct ABravoHotelHISMMesh : AActor {
	USceneComponent* RootNode; // 0x328
	bool ActionLink; // 0x330
};

struct UBlackboardComponent : UActorComponent {
	UBrainComponent* BrainComp; // 0xb0
	UBlackboardData* DefaultBlackboardAsset; // 0xb8
	UBlackboardData* BlackboardAsset; // 0xc0
	TArray<UBlackboardKeyType*> KeyInstances; // 0xe8
};

struct UAISystemBase : UObject {
	FSoftClassPath AISystemClassName; // 0x28
	FName AISystemModuleName; // 0x40
	bool bInstantiateAISystemOnClient; // 0x50
};

struct UEnvQueryTest_Overlap : UEnvQueryTest {
	FEnvOverlapData OverlapData; // 0x1f8
};

struct AMKCharacterEx : APawn {
	ACharacter* SelfCharacter; // 0x3a0
};

struct UTextRenderComponent : UPrimitiveComponent {
	FText Text; // 0x4b0
	UMaterialInterface* TextMaterial; // 0x4c8
	UFont* Font; // 0x4d0
	EHorizTextAligment HorizontalAlignment; // 0x4d8
	EVerticalTextAligment VerticalAlignment; // 0x4d9
	FColor TextRenderColor; // 0x4dc
	float XScale; // 0x4e0
	float YScale; // 0x4e4
	float WorldSize; // 0x4e8
	float InvDefaultSize; // 0x4ec
	float HorizSpacingAdjust; // 0x4f0
	float VertSpacingAdjust; // 0x4f4
	char bAlwaysRenderAsText : 1; // 0x4f8
};

struct UBravoHotelSupplyBox : UBravoHotelCoherentObject {
	UParticleSystem* SupplyBoxSpawnEffect; // 0x38
	UCameraPostProcessPreset* PP_Preset_PickupOutline; // 0x40
	FMulticastInlineDelegate EffectEquipmentTransitionDelegate; // 0x48
	FMulticastInlineDelegate EquipmentSounedDelegate; // 0x58
	FMulticastInlineDelegate SlotHoverSounedDelegate; // 0x68
	TArray<FSupplyBoxItemInfo> SupplyItemList; // 0x78
	TArray<AActor*> TargetPointList; // 0x88
	UCameraPostProcessPreset* PP_PickupOutlineRef; // 0x98
	FSupplyBoxItemInfo CurrentActor; // 0xa0
	FSupplySlotInfo CurrentSlot; // 0xd0
	TArray<FEffectTransitionInfo> TransitionList; // 0xe0
};

struct USafeZone : UContentWidget {
	bool PadLeft; // 0x120
	bool PadRight; // 0x121
	bool PadTop; // 0x122
	bool PadBottom; // 0x123
};

struct AAkAcousticPortal : AVolume {
	AkAcousticPortalState InitialState; // 0x360
	float ObstructionRefreshInterval; // 0x364
	ECollisionChannel ObstructionCollisionChannel; // 0x368
};

struct UParticleModuleRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionFloat StartRotationRate; // 0x30
};

struct UFieldSystemComponent : UPrimitiveComponent {
	UFieldSystem* FieldSystem; // 0x4b0
	TArray<TSoftObjectPtr<AChaosSolverActor>> SupportedSolvers; // 0x4c8
};

struct UUW-MatchEnd_GoldList_C : UUserWidget {
	UTextBlock* TextBlock_Gold; // 0x248
	UTextBlock* TextBlock_Title; // 0x250
	FSlateColor ColorType1; // 0x258
	FSlateColor ColorType2; // 0x280
};

struct UCloudStorageBase : UPlatformInterfaceBase {
	TArray<FString> LocalCloudFiles; // 0x38
	char bSuppressDelegateCalls : 1; // 0x48
};

struct UParticleModuleSpawnBase : UParticleModule {
	char bProcessSpawnRate : 1; // 0x30
	char bProcessBurstList : 1; // 0x30
};

struct UBravoHotelReportUserProgramWidget : UUserWidget {
	UButton* ReportButton; // 0x248
	UButton* CancelButton; // 0x250
	UTextBlock* SelectedUserNickName; // 0x258
};

struct UInterpTrackVectorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0x90
};

struct UUserWidget : UWidget {
	FLinearColor ColorAndOpacity; // 0x110
	FDelegate ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	FDelegate ForegroundColorDelegate; // 0x158
	FMargin Padding; // 0x168
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x178
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x188
	char NoPixelSnapping : 1; // 0x198
	FDelegate NoPixelSnappingDelegate; // 0x19c
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x1b0
	UWidgetTree* WidgetTree; // 0x1c0
	int32_t Priority; // 0x1c8
	char bSupportsKeyboardFocus : 1; // 0x1cc
	char bIsFocusable : 1; // 0x1cc
	char bStopAction : 1; // 0x1cc
	char bHasScriptImplementedTick : 1; // 0x1cc
	char bHasScriptImplementedPaint : 1; // 0x1cc
	char bCookedWidgetTree : 1; // 0x1cc
	EWidgetTickFrequency TickFrequency; // 0x1d8
	UInputComponent* InputComponent; // 0x1e0
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x1e8
};

struct UHoudiniCSV : UObject {
	FString Filename; // 0x28
	int32_t NumberOfRows; // 0x38
	int32_t NumberOfColumns; // 0x3c
	int32_t NumberOfPoints; // 0x40
	FString SourceTitleRow; // 0x48
	TArray<FString> ColumnTitleArray; // 0x58
	TArray<float> FloatCSVData; // 0x68
	TArray<float> SpawnTimes; // 0x78
	TArray<float> LifeValues; // 0x88
	TArray<int32_t> PointTypes; // 0x98
	TArray<int32_t> SpecialAttributesColumnIndexes; // 0xa8
	TArray<FPointIndexes> PointValueIndexes; // 0xb8
	bool UseCustomTitleRow; // 0xc8
};

struct UParticleModuleSpawnPerUnit : UParticleModuleSpawnBase {
	float UnitScalar; // 0x38
	float MovementTolerance; // 0x3c
	FRawDistributionFloat SpawnPerUnit; // 0x40
	float MaxFrameDistance; // 0x70
	char bIgnoreSpawnRateWhenMoving : 1; // 0x74
	char bIgnoreMovementAlongX : 1; // 0x74
	char bIgnoreMovementAlongY : 1; // 0x74
	char bIgnoreMovementAlongZ : 1; // 0x74
};

struct UMaterialExpressionSpeedTree : UMaterialExpression {
	FExpressionInput GeometryInput; // 0x40
	FExpressionInput WindInput; // 0x54
	FExpressionInput LODInput; // 0x68
	FExpressionInput ExtraBendWS; // 0x7c
	ESpeedTreeGeometryType GeometryType; // 0x90
	ESpeedTreeWindType WindType; // 0x91
	ESpeedTreeLODType LODType; // 0x92
	float BillboardThreshold; // 0x94
	bool bAccurateWindVelocities; // 0x98
};

struct AEmitter : AActor {
	UParticleSystemComponent* ParticleSystemComponent; // 0x328
	char bDestroyOnSystemFinish : 1; // 0x330
	char bPostUpdateTickGroup : 1; // 0x330
	char bCurrentlyActive : 1; // 0x330
	FMulticastInlineDelegate OnParticleSpawn; // 0x338
	FMulticastInlineDelegate OnParticleBurst; // 0x348
	FMulticastInlineDelegate OnParticleDeath; // 0x358
	FMulticastInlineDelegate OnParticleCollide; // 0x368
};

struct UAkGeometryComponent : USceneComponent {
	AkMeshType MeshType; // 0x230
	int32_t LOD; // 0x234
	float WeldingThreshold; // 0x238
	TMap<UMaterialInterface*, FAkGeometrySurfaceOverride> StaticMeshSurfaceOverride; // 0x240
	FAkGeometrySurfaceOverride CollisionMeshSurfaceOverride; // 0x290
	char bEnableDiffraction : 1; // 0x2a0
	char bEnableDiffractionOnBoundaryEdges : 1; // 0x2a0
	AActor* AssociatedRoom; // 0x2a8
	FAkGeometryData GeometryData; // 0x2c0
};

struct USoundfieldSubmix : USoundSubmixWithParentBase {
	FName SoundfieldEncodingFormat; // 0x40
	USoundfieldEncodingSettingsBase* EncodingSettings; // 0x48
	TArray<USoundfieldEffectBase*> SoundfieldEffectChain; // 0x50
	USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x60
};

struct UUW-MatchEnd_RewardSlot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UHorizontalBox* HorizontalBox_Rarity; // 0x250
	UImage* Image_bg; // 0x258
	UImage* Image_Icon; // 0x260
	UTextBlock* T_Name; // 0x268
	UTextBlock* T_WeaponType; // 0x270
	UTextBlock* TextBlock_186; // 0x278
	UUW-Inventory_ItemSlotHover_C* Tooltip; // 0x280
	FRewardItemInfo ItemInfo; // 0x288
	FInventoryItemDetailInfo ItemDetailInfo; // 0x290
};

struct UMRMeshComponent : UPrimitiveComponent {
	UMaterialInterface* Material; // 0x4b8
	bool bCreateMeshProxySections; // 0x4c0
	bool bUpdateNavMeshOnMeshUpdate; // 0x4c1
	bool bNeverCreateCollisionMesh; // 0x4c2
	UBodySetup* CachedBodySetup; // 0x4c8
	TArray<UBodySetup*> BodySetups; // 0x4d0
	UMaterialInterface* WireframeMaterial; // 0x4e0
};

struct UFoliageInstancedStaticMeshComponent : UHierarchicalInstancedStaticMeshComponent {
	FMulticastInlineDelegate OnInstanceTakePointDamage; // 0x710
	FMulticastInlineDelegate OnInstanceTakeRadialDamage; // 0x720
	FGuid GenerationGuid; // 0x730
};

struct URSM : UObject {
	FGuid SGUID; // 0x28
	int32_t PlayerId; // 0x38
	TWeakObjectPtr<UObject> Owner; // 0x3c
};

struct UBravoHotelTeamInfoWidget : UUserWidget {
	TArray<UBravoHotelTeamInfoSlotWidget*> SlotList; // 0x248
};

struct ABravoHotelAmbientSound : AAkAmbientSound {
	bool bUseMultiplePositions; // 0x368
	TArray<FTransform> RelativeMultiplePositions; // 0x370
	bool bUseSynchronization; // 0x380
	float LoopInterval; // 0x384
};

struct ULowEntryByteArray : UObject {
	TArray<char> ByteArray; // 0x28
};

struct UBravoHotelRecoilComponent : UActorComponent {
	ABravoHotelRangedWeapon* OwningWeaponRef; // 0xb0
	ABravoHotelCharacter* CharacterRef; // 0xb8
	ABravoHotelGameState* GameStateRef; // 0xc0
	float DeltaTime; // 0xc8
	FVector RecoilLocation; // 0xcc
	FRotator RecoilRotation; // 0xd8
	float BackRecoilLocation; // 0xe4
	float VerticalRecoilLocation; // 0xe8
	float HorizonRecoilLocation; // 0xec
	float VerticalRecoilRotation; // 0xf0
	float HorizonRecoilRotation; // 0xf4
	bool bIsOnHold; // 0xf8
	bool bNeedToInterp_BackRecoilLocation; // 0xf9
	FTimeline Timeline_BackRecoilLocation; // 0x100
	bool bNeedToInterp_VerticalRecoilLocation; // 0x198
	bool bNeedToInterp_VerticalRecoilRotation; // 0x199
	FTimeline Timeline_VerticalRecoilLocation; // 0x1a0
	FTimeline Timeline_VerticalRecoilRotation; // 0x238
	bool bIsLeftSideRecoil; // 0x2d0
	bool bNeedToInterp_HorizonRecoilLocation; // 0x2d1
	bool bNeedToInterp_HorizonRecoilRotation; // 0x2d2
	FTimeline Timeline_HorizonRecoilLocation; // 0x2d8
	FTimeline Timeline_HorizonRecoilRotation; // 0x370
};

struct UMovieSceneEasingExternalCurve : UObject {
	UCurveFloat* Curve; // 0x30
};

struct UCameraAnimInst : UObject {
	UCameraAnim* CamAnim; // 0x28
	UInterpGroupInst* InterpGroupInst; // 0x30
	float PlayRate; // 0x50
	UInterpTrackMove* MoveTrack; // 0x68
	UInterpTrackInstMove* MoveInst; // 0x70
	ECameraAnimPlaySpace PlaySpace; // 0x78
};

struct UWidgetSwitcher : UPanelWidget {
	int32_t ActiveWidgetIndex; // 0x120
};

struct UDatasmithStaticMeshGLTFImportData : UDatasmithStaticMeshImportData {
	FString SourceMeshName; // 0x28
};

struct UAkMarkerCallbackInfo : UAkEventCallbackInfo {
	int32_t Identifier; // 0x38
	int32_t Position; // 0x3c
	FString Label; // 0x40
};

struct UUW-ReplayListWidget_C : UBravoHotelReplayListWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Delete; // 0x268
	UButton* Button_Keep; // 0x270
	UButton* Button_OldFileDelete; // 0x278
	UButton* Button_Play; // 0x280
	UButton* Button_Refresh; // 0x288
	USizeBox* DetailInfo; // 0x290
	UHorizontalBox* HorizontalBox_3; // 0x298
	UHorizontalBox* HorizontalBox_4; // 0x2a0
	UHorizontalBox* HorizontalBox_5; // 0x2a8
	UHorizontalBox* HorizontalBox_01; // 0x2b0
	UHorizontalBox* HorizontalBox_Version; // 0x2b8
	UImage* Image_1; // 0x2c0
	UImage* Image_483; // 0x2c8
	UImage* Image_1010; // 0x2d0
	UImage* Image_2531; // 0x2d8
	UImage* Image_2533; // 0x2e0
	UImage* Image_2535; // 0x2e8
	UImage* Image_3059; // 0x2f0
	UImage* Image_3229; // 0x2f8
	UImage* Image_3231; // 0x300
	UImage* Image_; // 0x308
	UImage* Image_ClassImage; // 0x310
	UImage* Image_Icon1; // 0x318
	UImage* Image_Icon2; // 0x320
	UImage* Image_Icon3; // 0x328
	UImage* Image_Icon4; // 0x330
	UImage* Image_MapImage; // 0x338
	UOverlay* Overlay; // 0x340
	UScrollBox* ReplayListBox; // 0x348
	UTextBlock* TextBlock_2388; // 0x350
	UTextBlock* TextBlock_BattleMode; // 0x358
	UTextBlock* TextBlock_BlueZoneMaxPlayerCount; // 0x360
	UTextBlock* TextBlock_BlueZoneTitle; // 0x368
	UTextBlock* TextBlock_ClassLevel1; // 0x370
	UTextBlock* TextBlock_ClassLevel2; // 0x378
	UTextBlock* TextBlock_ClassLevel3; // 0x380
	UTextBlock* TextBlock_ClassLevel4; // 0x388
	UTextBlock* TextBlock_ClassName1; // 0x390
	UTextBlock* TextBlock_ClassName2; // 0x398
	UTextBlock* TextBlock_ClassName3; // 0x3a0
	UTextBlock* TextBlock_ClassName4; // 0x3a8
	UTextBlock* TextBlock_CurrentFileCount; // 0x3b0
	UTextBlock* TextBlock_Damage; // 0x3b8
	UTextBlock* TextBlock_FPP; // 0x3c0
	UTextBlock* TextBlock_Keep; // 0x3c8
	UTextBlock* TextBlock_Kill; // 0x3d0
	UTextBlock* TextBlock_LifeTime; // 0x3d8
	UTextBlock* TextBlock_MapName; // 0x3e0
	UTextBlock* TextBlock_Name1; // 0x3e8
	UTextBlock* TextBlock_Name2; // 0x3f0
	UTextBlock* TextBlock_Name3; // 0x3f8
	UTextBlock* TextBlock_Name4; // 0x400
	UTextBlock* TextBlock_Rank; // 0x408
	UTextBlock* TextBlock_Time; // 0x410
	UTextBlock* TextBlock_TotalPlayerCount; // 0x418
	UTextBlock* TextBlock_TotalSize; // 0x420
	UTextBlock* TextBlock_Weapon1; // 0x428
	UTextBlock* TextBlock_Weapon2; // 0x430
	UTextBlock* TextBlock_Weapon3; // 0x438
	UTextBlock* TextBlock_Weapon4; // 0x440
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget; // 0x448
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_3; // 0x450
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_4; // 0x458
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_5; // 0x460
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_6; // 0x468
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_7; // 0x470
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_8; // 0x478
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_9; // 0x480
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_10; // 0x488
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_11; // 0x490
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_12; // 0x498
	UUW-ReplayListItemWidget_C* UW-ReplayListItemWidget_C_13; // 0x4a0
	FMKReplayListItemInfo SelectedItemInfo; // 0x4a8
};

struct ALightmassPortal : AActor {
	ULightmassPortalComponent* PortalComponent; // 0x328
};

struct USkeletalMeshComponent : USkinnedMeshComponent {
	UObject* AnimBlueprintGeneratedClass; // 0x6f0
	UAnimInstance* AnimClass; // 0x6f8
	UAnimInstance* AnimScriptInstance; // 0x700
	UAnimInstance* PostprocessAnimInstance; // 0x708
	FSingleAnimationPlayData AnimationData; // 0x710
	FVector RootBoneTranslation; // 0x738
	FVector LineCheckBoundsScale; // 0x744
	TArray<UAnimInstance*> LinkedInstances; // 0x770
	TArray<FTransform> CachedBoneSpaceTransforms; // 0x780
	TArray<FTransform> CachedComponentSpaceTransforms; // 0x790
	float GlobalAnimRateScale; // 0x7c0
	EKinematicBonesUpdateToPhysics KinematicBonesUpdateType; // 0x7c4
	EPhysicsTransformUpdateMode PhysicsTransformUpdateMode; // 0x7c5
	EAnimationMode AnimationMode; // 0x7cd
	char bDisablePostProcessBlueprint : 1; // 0x7cf
	char bUpdateOverlapsOnAnimationFinalize : 1; // 0x7cf
	char bHasValidBodies : 1; // 0x7cf
	char bBlendPhysics : 1; // 0x7cf
	char bEnablePhysicsOnDedicatedServer : 1; // 0x7cf
	char bUpdateJointsFromAnimation : 1; // 0x7d0
	char bDisableClothSimulation : 1; // 0x7d0
	char bDisableRigidBodyAnimNode : 1; // 0x7d0
	char bAllowAnimCurveEvaluation : 1; // 0x7d0
	char bDisableAnimCurves : 1; // 0x7d0
	char bCollideWithEnvironment : 1; // 0x7d1
	char bCollideWithAttachedChildren : 1; // 0x7d1
	char bLocalSpaceSimulation : 1; // 0x7d1
	char bResetAfterTeleport : 1; // 0x7d1
	char bDeferKinematicBoneUpdate : 1; // 0x7d1
	char bNoSkeletonUpdate : 1; // 0x7d1
	char bPauseAnims : 1; // 0x7d1
	char bUseRefPoseOnInitAnim : 1; // 0x7d2
	char bEnablePerPolyCollision : 1; // 0x7d2
	char bForceRefpose : 1; // 0x7d2
	char bOnlyAllowAutonomousTickPose : 1; // 0x7d2
	char bIsAutonomousTickPose : 1; // 0x7d2
	char bOldForceRefPose : 1; // 0x7d2
	char bShowPrePhysBones : 1; // 0x7d2
	char bRequiredBonesUpToDate : 1; // 0x7d2
	char bAnimTreeInitialised : 1; // 0x7d3
	char bIncludeComponentLocationIntoBounds : 1; // 0x7d3
	char bEnableLineCheckWithBounds : 1; // 0x7d3
	char bUseBendingElements : 1; // 0x7d3
	char bUseTetrahedralConstraints : 1; // 0x7d3
	char bUseThinShellVolumeConstraints : 1; // 0x7d3
	char bUseSelfCollisions : 1; // 0x7d3
	char bUseContinuousCollisionDetection : 1; // 0x7d3
	char bPropagateCurvesToSlaves : 1; // 0x7d4
	char bSkipKinematicUpdateWhenInterpolating : 1; // 0x7d4
	char bSkipBoundsUpdateWhenInterpolating : 1; // 0x7d4
	char bNeedsQueuedAnimEventsDispatched : 1; // 0x7d4
	uint16_t CachedAnimCurveUidVersion; // 0x7d6
	EClothMassMode MassMode; // 0x7d8
	float UniformMass; // 0x7dc
	float TotalMass; // 0x7e0
	float Density; // 0x7e4
	float MinPerParticleMass; // 0x7e8
	float ClothBlendWeight; // 0x7ec
	float EdgeStiffness; // 0x7f0
	float BendingStiffness; // 0x7f4
	float AreaStiffness; // 0x7f8
	float VolumeStiffness; // 0x7fc
	float StrainLimitingStiffness; // 0x800
	float ShapeTargetStiffness; // 0x804
	TArray<FName> DisallowedAnimCurves; // 0x808
	UBodySetup* BodySetup; // 0x818
	FMulticastInlineDelegate OnConstraintBroken; // 0x828
	UClothingSimulationFactory* ClothingSimulationFactory; // 0x838
	float TeleportDistanceThreshold; // 0x908
	float TeleportRotationThreshold; // 0x90c
	uint32_t LastPoseTickFrame; // 0x918
	UClothingSimulationInteractor* ClothingInteractor; // 0x970
	FMulticastInlineDelegate OnAnimInitialized; // 0xa40
};

struct UAkInitBank : UAkAssetBase {
	TArray<FString> AvailableAudioCultures; // 0x50
	FString DefaultLanguage; // 0x60
};

struct ABP-GrenadeWeaponBase_C : ABravoHotelGrenadeWeapon {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1f80
	UStaticMeshComponent* StaticMesh_Ring; // 0x1f88
	UStaticMeshComponent* StaticMesh_Lever; // 0x1f90
	float Timeline_0_Lerp_77CED3694A7ECD58C02266AF5F5B5991; // 0x1f98
	ETimelineDirection Timeline_0__Direction_77CED3694A7ECD58C02266AF5F5B5991; // 0x1f9c
	UTimelineComponent* Timeline_1; // 0x1fa0
	float Lerp_Lerp_EDD5977E4E850EC460B1E599F1FF45F8; // 0x1fa8
	ETimelineDirection Lerp__Direction_EDD5977E4E850EC460B1E599F1FF45F8; // 0x1fac
	UTimelineComponent* Lerp; // 0x1fb0
	FVector InterpOffset; // 0x1fb8
	FVector DesiredLocation; // 0x1fc4
	FVector InitalLocalVelocity; // 0x1fd0
	FVector DesiredLocation_Ing; // 0x1fdc
	FVector InitalLocalVelocity_Ing; // 0x1fe8
	EThrowingWeaponState ThrowingWeaponState; // 0x1ff4
	bool ThrowingAction_Bool; // 0x1ff5
	FVector DesiredLocation_3; // 0x1ff8
	FVector DesiredLocation_2_Ing; // 0x2004
	FVector InitalLocalVelocity_3; // 0x2010
	FVector InitalLocalVelocity_2_ing; // 0x201c
	float PathLifeTime; // 0x2028
	float TimeInterval; // 0x202c
	UStaticMeshComponent* IndicatorComponent_2; // 0x2030
	UStaticMeshComponent* IndicatorComponent_3; // 0x2038
	UProjectileTrajectoryComponent_C* TrajectoryComponent_2; // 0x2040
	UProjectileTrajectoryComponent_C* TrajectoryComponent_3; // 0x2048
};

struct USoundNodeModulatorContinuous : USoundNode {
	FModulatorContinuousParams PitchModulationParams; // 0x48
	FModulatorContinuousParams VolumeModulationParams; // 0x68
};

struct USceneCaptureComponentCube : USceneCaptureComponent {
	UTextureRenderTargetCube* TextureTarget; // 0x2c8
	bool bCaptureRotation; // 0x2d0
	UTextureRenderTargetCube* TextureTargetLeft; // 0x2d8
	UTextureRenderTargetCube* TextureTargetRight; // 0x2e0
	UTextureRenderTarget2D* TextureTargetODS; // 0x2e8
	float IPD; // 0x2f0
};

struct UGeometryCollectionDebugDrawComponent : UActorComponent {
	AGeometryCollectionDebugDrawActor* GeometryCollectionDebugDrawActor; // 0xb0
	AGeometryCollectionRenderLevelSetActor* GeometryCollectionRenderLevelSetActor; // 0xb8
};

struct ABravoHotelSkillTargetingBase : AActor {
	UParticleSystemComponent* MissileLineParticle; // 0x328
	UParticleSystemComponent* MissileParticle; // 0x330
	UDecalComponent* TargetDecal; // 0x338
	float TargetRadius; // 0x340
};

struct UBravoHotelPersonalSupplyBoxWidget : UUserWidget {
	TArray<UBravoHotelPersonalSupplyBoxSlotItemWidget*> HaveWeaponList; // 0x248
	TArray<UBravoHotelPersonalSupplyBoxSlotItemWidget*> ConsumableItemList; // 0x258
	EItemSortType CurSortType; // 0x268
	TMap<int32_t, FSupplyItem> CurConsumableItemDatas; // 0x270
	FInventoryItemInfo CurWeapon; // 0x2c0
	FInventoryItemInfo DefaultWeapon; // 0x358
	bool IsFreeSupply; // 0x3f0
	bool bIsDefaultWeapon; // 0x3f1
};

struct AMK3DReplayController : APlayerController {
	FMulticastInlineDelegate OnReplayPauseEvent; // 0x710
	FMulticastInlineDelegate OnReplayJumpEvent; // 0x720
	FMulticastInlineDelegate OnReplayJumpCompleteEvent; // 0x730
	FString PlayerCameraManagerClassName; // 0x7c8
	FString SpectatorPawnClassName; // 0x7d8
	FMulticastInlineDelegate ChangeViewModeDelegate; // 0x7e8
	FMulticastInlineDelegate ChangeCameraTypeDelegate; // 0x7f8
	FMulticastInlineDelegate ChangeCameraTypeByNetGuidDelegate; // 0x808
	TArray<FUserWidgetInfoForReplay> WidgetInfoArray; // 0x820
	TMap<FString, UUserWidget*> ReplayWidgetMap; // 0x830
	UMK3DKillcamComponent* KillcamComponent; // 0x8e0
	UMK3DTargetcamComponent* TargetcamComponent; // 0x8e8
	AActor* pTargetPlayerInRecording; // 0x900
	FString AfterKillcamHUDClassName; // 0x908
	AHUD* AfterKillcamHUDClass; // 0x918
	FString ReplayHUDClassName; // 0x930
	AHUD* ReplayHUDClass; // 0x940
};

struct UselectTypeBtn_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_43; // 0x250
	UImage* Image_43; // 0x258
	FMulticastInlineDelegate SelectEventDispatcher; // 0x260
	int32_t Index; // 0x270
};

struct UMeshSelectionSet : USelectionSet {
	TArray<int32_t> Vertices; // 0x40
	TArray<int32_t> Edges; // 0x50
	TArray<int32_t> Faces; // 0x60
	TArray<int32_t> Groups; // 0x70
};

struct UNetDriver : UObject {
	FString NetConnectionClassName; // 0x30
	FString ReplicationDriverClassName; // 0x40
	int32_t MaxDownloadSize; // 0x50
	char bClampListenServerTickRate : 1; // 0x54
	int32_t NetServerMaxTickRate; // 0x58
	int32_t MaxNetTickRate; // 0x5c
	int32_t MaxInternetClientRate; // 0x60
	int32_t MaxClientRate; // 0x64
	float ServerTravelPause; // 0x68
	float SpawnPrioritySeconds; // 0x6c
	float RelevantTimeout; // 0x70
	float KeepAliveTime; // 0x74
	float InitialConnectTimeout; // 0x78
	float ConnectionTimeout; // 0x7c
	float TimeoutMultiplierForUnoptimizedBuilds; // 0x80
	bool bNoTimeouts; // 0x84
	bool bNeverApplyNetworkEmulationSettings; // 0x85
	UNetConnection* ServerConnection; // 0x88
	TArray<UNetConnection*> ClientConnections; // 0x90
	int32_t RecentlyDisconnectedTrackingTime; // 0x100
	UWorld* World; // 0x140
	UPackage* WorldPackage; // 0x148
	UObject* NetConnectionClass; // 0x170
	UObject* ReplicationDriverClass; // 0x178
	FName NetDriverName; // 0x190
	TArray<FChannelDefinition> ChannelDefinitions; // 0x198
	TMap<FName, FChannelDefinition> ChannelDefinitionMap; // 0x1a8
	TArray<UChannel*> ActorChannelPool; // 0x1f8
	float Time; // 0x210
	UReplicationDriver* ReplicationDriver; // 0x6e8
};

struct UBTDecorator_BlackboardBase : UBTDecorator {
	FBlackboardKeySelector BlackboardKey; // 0x68
};

struct UMaterialExpressionRebaseToZeroOrigin : UMaterialExpression {
	FExpressionInput InputVector; // 0x40
};

struct UConnectionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UNetReplicationGraphConnection : UReplicationConnectionDriver {
	UNetConnection* NetConnection; // 0x28
	AReplicationGraphDebugActor* DebugActor; // 0x180
	TArray<FLastLocationGatherInfo> LastGatherLocations; // 0x1a0
	TArray<UReplicationGraphNode*> ConnectionGraphNodes; // 0x1b8
	UReplicationGraphNode_TearOff_ForConnection* TearOffNode; // 0x1c8
};

struct UEnvQuery : UDataAsset {
	FName QueryName; // 0x30
	TArray<UEnvQueryOption*> options; // 0x38
};

struct UMovieSceneBindingOverrides : UObject {
	TArray<FMovieSceneBindingOverrideData> BindingData; // 0x28
};

struct ULocalLightComponent : ULightComponent {
	ELightUnits IntensityUnits; // 0x378
	float Radius; // 0x37c
	float AttenuationRadius; // 0x380
	FLightmassPointLightSettings LightmassSettings; // 0x384
};

struct UBTNode : UObject {
	FString NodeName; // 0x30
	UBehaviorTree* TreeAsset; // 0x40
	UBTCompositeNode* ParentNode; // 0x48
};

struct ADatasmithImportedSequencesActor : AActor {
	TArray<ULevelSequence*> ImportedSequences; // 0x328
};

struct UUW-Inventory_Carried_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* HoverBG; // 0x250
	UScrollBox* ScrollBox_1; // 0x258
	UWrapBox* WB-CarriedList; // 0x260
};

struct UUW-BlackMarket_Slot_Perk_C : UUW-BlackMarket_Slot_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UButton* BTN-Menu02; // 0x3e0
	UButton* BTN-Menu03; // 0x3e8
	UButton* BTN-Menu04; // 0x3f0
	UCanvasPanel* CP-SlotInfo; // 0x3f8
	UImage* IMG-BG; // 0x400
	UImage* IMG-BG-Border; // 0x408
	UImage* IMG-Item; // 0x410
	UImage* IMG-Mask; // 0x418
	UImage* IMG-Over; // 0x420
	UImage* IMG-Over-Border; // 0x428
	UOverlay* Menu02; // 0x430
	UOverlay* Menu03; // 0x438
	UOverlay* Menu04; // 0x440
	UOverlay* Overlay_Mask; // 0x448
	UTextBlock* TXT-ItemDesc; // 0x450
	UTextBlock* TXT-ItemName; // 0x458
	UTextBlock* TXT-ItemSlot; // 0x460
	UTextBlock* TXT-Menu01; // 0x468
	UTextBlock* TXT-Menu02; // 0x470
	UTextBlock* TXT-Menu03; // 0x478
	UTextBlock* TXT-Menu04; // 0x480
	FText PerkSlot; // 0x488
};

struct UGameplayTagsManager : UObject {
	TArray<FGameplayTagSource> TagSources; // 0xc0
	TArray<UDataTable*> GameplayTagTables; // 0x1b0
};

struct UBTDecorator_TimeLimit : UBTDecorator {
	float TimeLimit; // 0x68
};

struct UUW-ComboBoxText_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_43; // 0x250
	UImage* off; // 0x258
	UImage* On; // 0x260
	UTextBlock* TextBlock_67; // 0x268
	FText Text; // 0x270
};

struct UCheckBoxStyleAsset : UObject {
	FCheckBoxStyle CheckBoxStyle; // 0x28
};

struct UAnimSequenceBase : UAnimationAsset {
	TArray<FAnimNotifyEvent> Notifies; // 0x88
	float SequenceLength; // 0x98
	float RateScale; // 0x9c
	FRawCurveTracks RawCurveData; // 0xa0
};

struct UGraphNodeContextMenuContext : UObject {
	UBlueprint* Blueprint; // 0x28
	UEdGraph* Graph; // 0x30
	UEdGraphNode* Node; // 0x38
	bool bIsDebugging; // 0x48
};

struct UPlaneReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadiusScale; // 0x2b8
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x2c0
	UBoxComponent* PreviewCaptureBox; // 0x2c8
};

struct UFSM_FinishState_ConditionalAsync : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	FSM_Transition Conditional; // 0x38
	FName FallbackState; // 0x3c
	float Timer; // 0x44
	FTimerHandle TimerHandle; // 0x48
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnAborted; // 0x60
};

struct UOnlineSessionClient : UOnlineSession {
	bool bIsFromInvite; // 0x188
	bool bHandlingDisconnect; // 0x189
};

struct UBravoHotelCoherentObject : UObject {
	UCoherentUIGTWidget* CoherentWidget; // 0x28
};

struct UAsyncSkeletalMeshComponent : USkeletalMeshComponent {
	TSoftObjectPtr<USkeletalMesh> SoftMeshPtr; // 0xb80
};

struct UMovieSceneEnumSection : UMovieSceneSection {
	FMovieSceneByteChannel EnumCurve; // 0xe0
};

struct UBoneMaskFilter : UObject {
	TArray<FInputBlendPose> BlendPoses; // 0x28
};

struct ABravoHotelBuilding : AActor {
	float ExteriorMaxDrawDistance; // 0x328
	float InteriorMaxDrawDistance; // 0x32c
	int32_t ItemWorldSpawnTableIndex; // 0x330
	FDataTableRowHandle ItemWorldSpawnInfo; // 0x338
	TArray<FTransform> SpawnBoxList; // 0x348
	FName SaveDetectingUserName; // 0x358
	TArray<ABravoHotelPickup*> SpawnedItemList; // 0x360
	FBuildingItemSpawnLog LogItemData; // 0x370
	bool IgnorePersonalSpawnBox; // 0x410
	bool EnableItemSpawn; // 0x411
	FName AreaSpawnRateTableKey; // 0x414
	TMap<FName, FRandomSpawn> AreaOverrideStandardGroupDatas; // 0x420
	bool EnableUnImportantItemSpawn; // 0x473
};

struct UUW-RoutePingWidget_Line_C : UBravoHotelRoutePingWidget {
	UWidgetAnimation* Anim_OnShow; // 0x248
	UImage* Line; // 0x250
	FMulticastInlineDelegate OnMarkerClicked; // 0x258
	bool IsLastPoint; // 0x268
};

struct UReplayEventBorder : UBorder {
	FDelegate OnMouseEnterEvent; // 0x270
};

struct UGeometryCacheTrack_FlipbookAnimation : UGeometryCacheTrack {
	uint32_t NumMeshSamples; // 0x58
};

struct UBTDecorator_CompareBBEntries : UBTDecorator {
	EBlackBoardEntryComparison Operator; // 0x68
	FBlackboardKeySelector BlackboardKeyA; // 0x70
	FBlackboardKeySelector BlackboardKeyB; // 0x98
};

struct UInterpTrackDirector : UInterpTrack {
	TArray<FDirectorTrackCut> CutTrack; // 0x70
	char bSimulateCameraCutsOnClients : 1; // 0x80
};

struct ULeaderboardFlushCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct APhysicsVolume : AVolume {
	float TerminalVelocity; // 0x360
	int32_t Priority; // 0x364
	float FluidFriction; // 0x368
	char bWaterVolume : 1; // 0x36c
	char bPhysicsOnContact : 1; // 0x36c
};

struct UExcelWorkbook : UObject {
	TArray<UExcelWorksheet*> mSheets; // 0x28
	UExcelWorksheet* mActiveSheet; // 0x38
};

struct UBravoHotelCoherentBaseWidget : UUserWidget {
	UCoherentUIGTWidget* CoherentWidget; // 0x248
	UAkAudioEvent* AudioEvent; // 0x250
	TArray<UBravoHotelCoherentObject*> ObjectArray; // 0x258
	FString WidgetName; // 0x270
	bool bInvisibleAfterLoading; // 0x280
};

struct UAxisAngleGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoFloatParameterSource> AngleSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bInInteraction; // 0x88
	FVector RotationOrigin; // 0x8c
	FVector RotationAxis; // 0x98
	FVector RotationPlaneX; // 0xa4
	FVector RotationPlaneY; // 0xb0
	FVector InteractionStartPoint; // 0xbc
	FVector InteractionCurPoint; // 0xc8
	float InteractionStartAngle; // 0xd4
	float InteractionCurAngle; // 0xd8
};

struct UMaterialExpressionSceneDepth : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput Coordinates; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct UViewport : UContentWidget {
	FLinearColor BackgroundColor; // 0x120
};

struct UUW-ReplayGuideWidget_C : UUserWidget {
	UOverlay* FollowCamGuide; // 0x248
	UOverlay* FreeCamGuide; // 0x250
	UKeyImageWidget_C* KeyImageWidget_C_1; // 0x258
	UKeyImageWidget_C* KeyImageWidget_C_2; // 0x260
	UKeyImageWidget_C* KeyImageWidget_C_3; // 0x268
	UKeyImageWidget_C* KeyImageWidget_C_4; // 0x270
	UKeyImageWidget_C* KeyImageWidget_C_5; // 0x278
	UKeyImageWidget_C* KeyImageWidget_C_6; // 0x280
	UKeyImageWidget_C* KeyImageWidget_C_7; // 0x288
	UKeyImageWidget_C* KeyImageWidget_C_8; // 0x290
	UKeyImageWidget_C* KeyImageWidget_C_10; // 0x298
	UKeyImageWidget_C* KeyImageWidget_C_153; // 0x2a0
	UKeyImageWidget_C* KeyImageWidget_C_154; // 0x2a8
	UKeyImageWidget_C* KeyImageWidget_C_155; // 0x2b0
	UKeyImageWidget_C* KeyImageWidget_C_157; // 0x2b8
	UKeyImageWidget_C* KeyImageWidget_C_158; // 0x2c0
	UKeyImageWidget_C* KeyImageWidget_C_159; // 0x2c8
	UKeyImageWidget_C* KeyImageWidget_C_160; // 0x2d0
	UOverlay* KillCamGuide; // 0x2d8
	UTextBlock* T_Guide; // 0x2e0
	UTextBlock* TextBlock_1; // 0x2e8
	UTextBlock* TextBlock_2; // 0x2f0
	UTextBlock* TextBlock_4; // 0x2f8
	UTextBlock* TextBlock_5; // 0x300
	UTextBlock* TextBlock_6; // 0x308
	UTextBlock* TextBlock_7; // 0x310
	UTextBlock* TextBlock_8; // 0x318
	UTextBlock* TextBlock_9; // 0x320
	UTextBlock* TextBlock_10; // 0x328
	UTextBlock* TextBlock_11; // 0x330
	UTextBlock* TextBlock_13; // 0x338
	UTextBlock* TextBlock_14; // 0x340
	UTextBlock* TextBlock_15; // 0x348
	UTextBlock* TextBlock_16; // 0x350
	UTextBlock* TextBlock_17; // 0x358
	UWidgetSwitcher* WidgetSwitcher_132; // 0x360
};

struct UNiagaraDataInterfaceVectorField : UNiagaraDataInterface {
	UVectorField* Field; // 0x30
	bool bTileX; // 0x38
	bool bTileY; // 0x39
	bool bTileZ; // 0x3a
};

struct USourceEffectFoldbackDistortionPreset : USoundEffectSourcePreset {
	FSourceEffectFoldbackDistortionSettings Settings; // 0x74
};

struct UBoxReflectionCaptureComponent : UReflectionCaptureComponent {
	float BoxTransitionDistance; // 0x2b8
	UBoxComponent* PreviewInfluenceBox; // 0x2c0
	UBoxComponent* PreviewCaptureBox; // 0x2c8
};

struct ULandscapeInfo : UObject {
	LazyObjectProperty LandscapeActor; // 0x28
	FGuid LandscapeGuid; // 0x44
	int32_t ComponentSizeQuads; // 0x54
	int32_t SubsectionSizeQuads; // 0x58
	int32_t ComponentNumSubsections; // 0x5c
	FVector DrawScale; // 0x60
	TArray<ALandscapeStreamingProxy*> Proxies; // 0x110
};

struct UBodySetup : UObject {
	FKAggregateGeom AggGeom; // 0x28
	FName BoneName; // 0x80
	EPhysicsType PhysicsType; // 0x88
	char bAlwaysFullAnimWeight : 1; // 0x89
	char bConsiderForBounds : 1; // 0x89
	char bMeshCollideAll : 1; // 0x89
	char bDoubleSidedGeometry : 1; // 0x89
	char bGenerateNonMirroredCollision : 1; // 0x89
	char bSharedCookedData : 1; // 0x89
	char bGenerateMirroredCollision : 1; // 0x89
	char bSupportUVsAndFaceRemap : 1; // 0x89
	EBodyCollisionResponse CollisionReponse; // 0x8b
	ECollisionTraceFlag CollisionTraceFlag; // 0x8c
	UPhysicalMaterial* PhysMaterial; // 0x90
	FWalkableSlopeOverride WalkableSlopeOverride; // 0x98
	FBodyInstance DefaultInstance; // 0x120
	FVector BuildScale3D; // 0x2b8
};

struct UChat_GameInstance_C : UBP-BHGameInstanceWithSettings_C {
	TArray<AChat_System_C*> Players in Chat; // 0x568
	TArray<FString> Chat Groups; // 0x578
};

struct UDemoNetDriver : UMKDemoNetDriverEx {
	TMap<FString, FRollbackNetStartupActorInfo> RollbackNetStartupActors; // 0xa50
	float CheckpointSaveMaxMSPerFrame; // 0xecc
	TArray<FMulticastRecordOptions> MulticastRecordOptions; // 0xf00
	bool bIsLocalReplay; // 0xf60
	TArray<APlayerController*> SpectatorControllers; // 0xf68
};

struct UMaterialExpressionSetMaterialAttributes : UMaterialExpression {
	TArray<FExpressionInput> Inputs; // 0x40
	TArray<FGuid> AttributeSetTypes; // 0x50
};

struct UBravoHotelReplayTimelineWidget : UUserWidget {
	int32_t CurrentTimeMS; // 0x248
	int32_t TotalTimeMS; // 0x24c
	float SliderValue; // 0x250
	bool bIsCapturedSlider; // 0x254
	float NormalizedMousePosInX; // 0x258
	FVector2D ToolTipDefaultPosition; // 0x25c
	ABravoHotelMK3DReplayController* ReplayController; // 0x268
	FText TextReplaySpeed; // 0x270
	float TimelineScaleDelta; // 0x288
	float TimelineMaxScale; // 0x28c
	float TimelineScale; // 0x290
	TArray<UBravoHotelReplayTimelineEventMarker*> KillEventMarkers; // 0x298
	TArray<UBravoHotelReplayTimelineEventMarker*> KnockoutEventMarkers; // 0x2a8
	TArray<UBravoHotelReplayTimelineEventMarker*> ResuscitatedEventMarkers; // 0x2b8
	TArray<UBravoHotelReplayTimelineEventMarker*> ReportedEventMarkers; // 0x2c8
	bool bShowKillChkBox; // 0x2d8
	bool bShowMyKillChkBox; // 0x2d9
	bool bShowKnockChkBox; // 0x2da
	bool bShowMyKnockChkBox; // 0x2db
	bool bShowResusChkBox; // 0x2dc
	bool bShowMyResusChkBox; // 0x2dd
	TArray<FMK3DHighlightKillEvent> MK3DKillEvents; // 0x2e0
	TArray<FMK3DHighlightKillEvent> MK3DKnockoutEvents; // 0x2f0
	TArray<FMK3DHighlightKillEvent> MK3DResuscitatedEvents; // 0x300
	TArray<FMK3DHighlightKillEvent> MK3DReportedEvents; // 0x310
};

struct UAudioComponent : USceneComponent {
	USoundBase* Sound; // 0x230
	TArray<FAudioComponentParam> InstanceParameters; // 0x238
	USoundClass* SoundClassOverride; // 0x248
	char bAutoDestroy : 1; // 0x250
	char bStopWhenOwnerDestroyed : 1; // 0x250
	char bShouldRemainActiveIfDropped : 1; // 0x250
	char bAllowSpatialization : 1; // 0x250
	char bOverrideAttenuation : 1; // 0x250
	char bOverrideSubtitlePriority : 1; // 0x250
	char bIsUISound : 1; // 0x250
	char bEnableLowPassFilter : 1; // 0x250
	char bOverridePriority : 1; // 0x251
	char bSuppressSubtitles : 1; // 0x251
	char bAutoManageAttachment : 1; // 0x252
	FName AudioComponentUserID; // 0x258
	float PitchModulationMin; // 0x260
	float PitchModulationMax; // 0x264
	float VolumeModulationMin; // 0x268
	float VolumeModulationMax; // 0x26c
	float VolumeMultiplier; // 0x270
	int32_t EnvelopeFollowerAttackTime; // 0x274
	int32_t EnvelopeFollowerReleaseTime; // 0x278
	float Priority; // 0x27c
	float SubtitlePriority; // 0x280
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x288
	float PitchMultiplier; // 0x290
	float LowPassFilterFrequency; // 0x294
	USoundAttenuation* AttenuationSettings; // 0x2a0
	FSoundAttenuationSettings AttenuationOverrides; // 0x2a8
	USoundConcurrency* ConcurrencySettings; // 0x648
	TSet<USoundConcurrency*> ConcurrencySet; // 0x650
	EAttachmentRule AutoAttachLocationRule; // 0x6ac
	EAttachmentRule AutoAttachRotationRule; // 0x6ad
	EAttachmentRule AutoAttachScaleRule; // 0x6ae
	FMulticastInlineDelegate OnAudioFinished; // 0x6b0
	FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x6d8
	FMulticastInlineDelegate OnAudioSingleEnvelopeValue; // 0x700
	FMulticastInlineDelegate OnAudioMultiEnvelopeValue; // 0x728
	FSoundModulation Modulation; // 0x750
	FDelegate OnQueueSubtitles; // 0x760
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x770
	FName AutoAttachSocketName; // 0x778
};

struct UParticleModuleVelocityCone : UParticleModuleVelocityBase {
	FRawDistributionFloat Angle; // 0x38
	FRawDistributionFloat Velocity; // 0x68
	FVector Direction; // 0x98
};

struct UInputKeyDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputKeyDelegateBinding> InputKeyDelegateBindings; // 0x28
};

struct UParticleModuleSubUV : UParticleModuleSubUVBase {
	USubUVAnimation* Animation; // 0x30
	FRawDistributionFloat SubImageIndex; // 0x38
	char bUseRealTime : 1; // 0x68
};

struct UParticleModuleTypeDataRibbon : UParticleModuleTypeDataBase {
	int32_t MaxTessellationBetweenParticles; // 0x30
	int32_t SheetsPerTrail; // 0x34
	int32_t MaxTrailCount; // 0x38
	int32_t MaxParticleInTrailCount; // 0x3c
	char bDeadTrailsOnDeactivate : 1; // 0x40
	char bDeadTrailsOnSourceLoss : 1; // 0x40
	char bClipSourceSegement : 1; // 0x40
	char bEnablePreviousTangentRecalculation : 1; // 0x40
	char bTangentRecalculationEveryFrame : 1; // 0x40
	char bSpawnInitialParticle : 1; // 0x40
	ETrailsRenderAxisOption RenderAxis; // 0x44
	float TangentSpawningScalar; // 0x48
	char bRenderGeometry : 1; // 0x4c
	char bRenderSpawnPoints : 1; // 0x4c
	char bRenderTangents : 1; // 0x4c
	char bRenderTessellation : 1; // 0x4c
	float TilingDistance; // 0x50
	float DistanceTessellationStepSize; // 0x54
	char bEnableTangentDiffInterpScale : 1; // 0x58
	float TangentTessellationScalar; // 0x5c
};

struct UBravoHotelAudioPortalComponent : UBoxComponent {
	bool bEnable; // 0x4e8
	AkAcousticPortalState InitialState; // 0x4e9
};

struct UMaterialExpressionSine : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UMaterialExpressionBlendMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput A; // 0x40
	FMaterialAttributesInput B; // 0x58
	FExpressionInput ALPHA; // 0x70
	EMaterialAttributeBlend PixelAttributeBlendType; // 0x84
	EMaterialAttributeBlend VertexAttributeBlendType; // 0x85
};

struct UBravoHotelJetpackWidget : UUserWidget {
	UProgressBar* GauageProgress; // 0x248
	UTextBlock* GauageText; // 0x250
};

struct UCameraShake : UObject {
	char bSingleInstance : 1; // 0x28
	float OscillationDuration; // 0x2c
	float OscillationBlendInTime; // 0x30
	float OscillationBlendOutTime; // 0x34
	FROscillator RotOscillation; // 0x38
	FVOscillator LocOscillation; // 0x5c
	FFOscillator FOVOscillation; // 0x80
	float AnimPlayRate; // 0x8c
	float AnimScale; // 0x90
	float AnimBlendInTime; // 0x94
	float AnimBlendOutTime; // 0x98
	float RandomAnimSegmentDuration; // 0x9c
	UCameraAnim* Anim; // 0xa0
	char bRandomAnimSegment : 1; // 0xa8
	APlayerCameraManager* CameraOwner; // 0xc0
	float ShakeScale; // 0x148
	float OscillatorTimeRemaining; // 0x14c
	UCameraAnimInst* AnimInst; // 0x150
};

struct UFoliageType : UObject {
	FGuid UpdateGuid; // 0x28
	float Density; // 0x38
	float DensityAdjustmentFactor; // 0x3c
	float Radius; // 0x40
	bool bSingleInstanceModeOverrideRadius; // 0x44
	float SingleInstanceModeRadius; // 0x48
	EFoliageScaling Scaling; // 0x4c
	FFloatInterval ScaleX; // 0x50
	FFloatInterval ScaleY; // 0x58
	FFloatInterval ScaleZ; // 0x60
	FFoliageVertexColorChannelMask VertexColorMaskByChannel[0x4]; // 0x68
	FoliageVertexColorMask VertexColorMask; // 0x98
	float VertexColorMaskThreshold; // 0x9c
	char VertexColorMaskInvert : 1; // 0xa0
	FFloatInterval ZOffset; // 0xa4
	char AlignToNormal : 1; // 0xac
	float AlignMaxAngle; // 0xb0
	char RandomYaw : 1; // 0xb4
	float RandomPitchAngle; // 0xb8
	FFloatInterval GroundSlopeAngle; // 0xbc
	FFloatInterval Height; // 0xc4
	TArray<FName> LandscapeLayers; // 0xd0
	float MinimumLayerWeight; // 0xe0
	TArray<FName> ExclusionLandscapeLayers; // 0xe8
	float MinimumExclusionLayerWeight; // 0xf8
	FName LandscapeLayer; // 0xfc
	char CollisionWithWorld : 1; // 0x104
	FVector CollisionScale; // 0x108
	FBoxSphereBounds MeshBounds; // 0x114
	FVector LowBoundOriginRadius; // 0x130
	EComponentMobility Mobility; // 0x13c
	ECullDistancePreset CullDistancePreset; // 0x13d
	bool bOverrideCullDistance; // 0x13e
	FInt32Interval CullDistance; // 0x140
	float MinScreenSizeScale; // 0x148
	char bEnableStaticLighting : 1; // 0x14c
	char CastShadow : 1; // 0x14c
	char bAffectDynamicIndirectLighting : 1; // 0x14c
	char bAffectDistanceFieldLighting : 1; // 0x14c
	char bCastDynamicShadow : 1; // 0x14c
	char bCastStaticShadow : 1; // 0x14c
	char bCastShadowAsTwoSided : 1; // 0x14c
	char bReceivesDecals : 1; // 0x14c
	char bOverrideLightMapRes : 1; // 0x14d
	int32_t OverriddenLightMapRes; // 0x150
	ELightmapType LightmapType; // 0x154
	char bUseAsOccluder : 1; // 0x158
	FBodyInstance BodyInstance; // 0x160
	EHasCustomNavigableGeometry CustomNavigableGeometry; // 0x2f0
	char InstanceBodiesSplitRatio; // 0x2f1
	FLightingChannels LightingChannels; // 0x2f2
	char bRenderCustomDepth : 1; // 0x2f4
	int32_t CustomDepthStencilValue; // 0x2f8
	int32_t TranslucencySortPriority; // 0x2fc
	float CollisionRadius; // 0x300
	float ShadeRadius; // 0x304
	int32_t NumSteps; // 0x308
	float InitialSeedDensity; // 0x30c
	float AverageSpreadDistance; // 0x310
	float SpreadVariance; // 0x314
	int32_t SeedsPerStep; // 0x318
	int32_t DistributionSeed; // 0x31c
	float MaxInitialSeedOffset; // 0x320
	bool bCanGrowInShade; // 0x324
	bool bSpawnsInShade; // 0x325
	float MaxInitialAge; // 0x328
	float MaxAge; // 0x32c
	float OverlapPriority; // 0x330
	FFloatInterval ProceduralScale; // 0x334
	FRuntimeFloatCurve ScaleCurve; // 0x340
	int32_t ChangeCount; // 0x3c8
	char ReapplyDensity : 1; // 0x3cc
	char ReapplyRadius : 1; // 0x3cc
	char ReapplyAlignToNormal : 1; // 0x3cc
	char ReapplyRandomYaw : 1; // 0x3cc
	char ReapplyScaling : 1; // 0x3cc
	char ReapplyScaleX : 1; // 0x3cc
	char ReapplyScaleY : 1; // 0x3cc
	char ReapplyScaleZ : 1; // 0x3cc
	char ReapplyRandomPitchAngle : 1; // 0x3cd
	char ReapplyGroundSlope : 1; // 0x3cd
	char ReapplyHeight : 1; // 0x3cd
	char ReapplyLandscapeLayers : 1; // 0x3cd
	char ReapplyZOffset : 1; // 0x3cd
	char ReapplyCollisionWithWorld : 1; // 0x3cd
	char ReapplyVertexColorMask : 1; // 0x3cd
	char bEnableDensityScaling : 1; // 0x3cd
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x3d0
	int32_t VirtualTextureCullMips; // 0x3e0
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x3e4
};

struct UBravoHotelAnimInstanceFPP : UAnimInstance {
	ABravoHotelCharacter* CharacterRef; // 0x268
	ABravoHotelWeaponBase* CurrentWeaponRef; // 0x270
	UBravoHotelAnimInstance* AnimInstanceRef; // 0x278
	UBravoHotelAnimInstancePostprocess* AnimInstancePostProsessRef; // 0x280
	USkeletalMeshComponent* MeshComponent_3P; // 0x288
	float DeltaTime; // 0x290
	float CurrentScopeAngle; // 0x294
	FTransform CurrentCameraTransform; // 0x2a0
	UAnimSequence* BaseGripAnimation; // 0x2d0
	UAnimSequence* WeaponHandAnim; // 0x2d8
	UAnimSequence* WeaponSprintAnim; // 0x2e0
	EWeaponType WeaponType; // 0x2e8
	EWeaponAnimationType WeaponAnimType; // 0x2e9
	EFireType FireType; // 0x2ea
	int32_t IdleNum; // 0x2ec
	float CharacterDirection; // 0x2f0
	float CharacterSpeed; // 0x2f4
	FVector SpinePosition; // 0x2f8
	FVector SpineJointPosition; // 0x304
	FRotator SpineRotation; // 0x310
	bool bUpdateProneSlope; // 0x31c
	FRotator ProneSlopeRotation; // 0x320
	FVector ProneRootOffset; // 0x32c
	float PrevSurfaceDegrees; // 0x338
	FVector RecoilVector; // 0x33c
	FRotator RecoilRotator; // 0x348
	bool bEnableModifySpine; // 0x354
	bool bEnableGenderIK; // 0x355
	bool bEnableWeaponMontageGenderIK; // 0x356
	float ADSAlpha; // 0x358
	bool bIsNoWeapon; // 0x35c
	bool bIsNoRangedWeapon; // 0x35d
	bool bUseFirstPersonSM; // 0x35e
	bool bUseThirdPersonLowerBody; // 0x35f
	float BlendTime_NoWeapon; // 0x360
	float BlendTime_ADS; // 0x364
	bool bIsFreeLook; // 0x368
	bool bIsMoving; // 0x369
	bool bIsProne; // 0x36a
	bool bCrouching; // 0x36b
	bool bIsSprint; // 0x36c
	bool bIsJumping; // 0x36d
	bool bIsSwimming; // 0x36e
	bool bUnderWaterSurface; // 0x36f
	bool bIsLandStop; // 0x370
	bool bIsAirWalking; // 0x371
	bool bIsClimbing; // 0x372
	bool bIsADS; // 0x373
	bool bIsAOS; // 0x374
	bool bIsFiring; // 0x375
	bool bUseSpecialProneAnimation; // 0x376
	UBlendSpaceBase* SpecialProneAnimation; // 0x378
	bool bIsAmplifier; // 0x380
	bool bIsReviving; // 0x381
	bool bIsKnockedOut; // 0x382
	float CastingRemainTime; // 0x384
	bool bHoldWeaponPosition; // 0x388
	bool bLastHoldWeaponPosition; // 0x389
	bool bUseTPPUpper; // 0x38a
	bool bEnableHandIK; // 0x38b
	bool bUseLeftHandIK; // 0x38c
	bool bIsWeaponAttachedToCamera; // 0x38d
	bool bUseGrip; // 0x38e
	bool bUseLeanRotation; // 0x38f
	bool bAttachWeaponToLHand; // 0x390
	float DisableHandIKTimer; // 0x394
	float AttachWeaponToLHandTimer; // 0x398
	bool bUseLeftArmBlendSlot; // 0x39c
	float BlendTime_HandIK; // 0x3a0
	FName AttachWeaponBoneToLHand; // 0x3a4
	FTransform AttachWeaponToLHandTransform; // 0x3b0
	FVector AttachLHandIK_Location; // 0x3e0
	FRotator AttachLHandIK_Rotation; // 0x3ec
	bool bReloading; // 0x3f8
	bool bBoltAction; // 0x3f9
	EMovementMode MovementMode; // 0x3fa
	bool bIsInVehicle; // 0x3fb
	bool bIsVehiclePassenger; // 0x3fc
	bool bIsVehicleDriver; // 0x3fd
	ABravoHotelVehicle* VehicleRef; // 0x400
	float VehicleAimOffsetYaw; // 0x408
	float VehicleAimOffsetPitch; // 0x40c
	bool bUseHandlebarAnim; // 0x410
	bool bUseOnlyRightHandInADS; // 0x411
	UBlendSpaceBase* BS_DriverHandleBar; // 0x418
	UAnimSequence* VehicleHandlingIdleAnim; // 0x420
	UAnimSequence* VehicleHandlingLeftAnim; // 0x428
	UAnimSequence* VehicleHandlingRightAnim; // 0x430
	UAnimSequence* DriverAimOffsetBasePose; // 0x438
	UBlendSpaceBase* DriverAimOffset; // 0x440
	FTransform VehicleLeftHandIK; // 0x450
	FVector VehicleLeftHandIK_Location; // 0x480
	FRotator VehicleLeftHandIK_Rotation; // 0x48c
	FTransform VehicleRightHandIK; // 0x4a0
	FVector VehicleRightHandIK_Location; // 0x4d0
	FRotator VehicleRightHandIK_Rotation; // 0x4dc
	FTransform VehicleLeftFootIK; // 0x4f0
	FTransform VehicleRightFootIK; // 0x520
	bool bHasFootIKSocket; // 0x550
	bool bUseVehicleLeftHandIK; // 0x551
	bool bUseVehicleRightHandIK; // 0x552
	bool bIsLeftSteering; // 0x553
	bool bIsRightSteering; // 0x554
	float LeftSteeringPlayRate; // 0x558
	float RightSteeringPlayRate; // 0x55c
	bool bIsIdleSteering; // 0x560
	float DriverIdlePoseBlendAlpha; // 0x564
	float WeaponTransformTimer; // 0x568
	float WeaponTransformMaxTime; // 0x56c
	float AOSAlpha; // 0x570
	float SprintSpeedModifier; // 0x574
	FTransform CurrentWeaponWorldTransform; // 0x580
	FTransform LeftHandComponentIK; // 0x5b0
	FTransform RightHandComponentIK; // 0x5e0
	FVector LeftHandIK_Location; // 0x610
	FRotator LeftHandIK_Rotation; // 0x61c
	FVector RightHandIK_Location; // 0x628
	FRotator RightHandIK_Rotation; // 0x634
	FVector FemaleLeftHandIKModify; // 0x640
	FVector IdleCameraPosition; // 0x64c
	FRotator LeanRotation; // 0x658
	EThrowingWeaponType ThrowingWeaponType; // 0x664
	EThrowingWeaponState ThrowingWeaponState; // 0x665
	EGrenadeThrowingType GrenadeThrowingType; // 0x666
	bool bIsUnderThrowType; // 0x667
	UAnimSequence* ThrowingWeapon_Stand_Idle; // 0x668
	UAnimSequence* ThrowingWeapon_Stand_Idle_Under; // 0x670
	UAnimSequence* ThrowingWeapon_Stand_PinOff_Idle; // 0x678
	UAnimSequence* ThrowingWeapon_Stand_PinOff_Idle_Additive; // 0x680
	UAnimSequence* ThrowingWeapon_Stand_ThrowUnder_Idle; // 0x688
	UAnimSequence* ThrowingWeapon_Stand_ThrowUnder_Idle_Additive; // 0x690
	UAnimSequence* ThrowingWeapon_Crouch_Idle; // 0x698
	UAnimSequence* ThrowingWeapon_Crouch_PinOff_Idle; // 0x6a0
	UAnimSequence* ThrowingWeapon_Crouch_PinOff_Idle_Additive; // 0x6a8
	UAnimSequence* ThrowingWeapon_Crouch_ThrowUnder_Idle; // 0x6b0
	UAnimSequence* ThrowingWeapon_Crouch_ThrowUnder_Idle_Additive; // 0x6b8
	UAnimSequence* ThrowingWeapon_Prone_Idle; // 0x6c0
	UAnimSequence* ThrowingWeapon_Prone_PinOff_Idle_ThrowOver; // 0x6c8
	UAnimSequence* ThrowingWeapon_Prone_PinOff_Idle_ThrowUnder; // 0x6d0
	TArray<UAnimMontage*> MontageListWithoutHandIK; // 0x6d8
	bool bIsCold; // 0x6e9
	bool bIsBurning; // 0x6ea
	float HurtAlpha; // 0x6ec
	float HeadBangingAlpha; // 0x6f0
	bool bUseFallingAnimation; // 0x6f4
};

struct UButtomButtonWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UOverlay* ApplyBtn; // 0x250
	UImage* ApplyDisable; // 0x258
	UImage* ApplyNormalBg; // 0x260
	UImage* ApplyOverBg; // 0x268
	UImage* ApplyPressBg; // 0x270
	UButton* Button_31; // 0x278
	UImage* Lock; // 0x280
	UImage* NormalBg; // 0x288
	UOverlay* NormalBtn; // 0x290
	UImage* OverBG; // 0x298
	UImage* PressBg; // 0x2a0
	UTextBlock* Title_Text; // 0x2a8
	FText Title; // 0x2b0
	FMulticastInlineDelegate OnClickEventDispatcher; // 0x2c8
	bool IsDisableBnt; // 0x2d8
	int32_t CurType; // 0x2dc
	bool ColorType; // 0x2e0
	bool Applytype; // 0x2e1
	bool NewVar_1; // 0x2e2
};

struct ATextRenderActor : AActor {
	UTextRenderComponent* TextRender; // 0x328
};

struct UMovieSceneBuiltInEasingFunction : UObject {
	EMovieSceneBuiltInEasing Type; // 0x30
};

struct UDatasmithAssetUserData : UAssetUserData {
	TMap<FName, FString> MetaData; // 0x28
};

struct UParticleModuleEventReceiverKillParticles : UParticleModuleEventReceiverBase {
	char bStopSpawning : 1; // 0x40
};

struct UStaticMeshComponent : UMeshComponent {
	int32_t ForcedLodModel; // 0x4e0
	int32_t PreviousLODLevel; // 0x4e4
	int32_t MinLOD; // 0x4e8
	int32_t SubDivisionStepSize; // 0x4ec
	UStaticMesh* StaticMesh; // 0x4f0
	FColor WireframeColorOverride; // 0x4f8
	char bEvaluateWorldPositionOffset : 1; // 0x4fc
	char bOverrideWireframeColor : 1; // 0x4fc
	char bOverrideMinLod : 1; // 0x4fc
	char bOverrideNavigationExport : 1; // 0x4fc
	char bForceNavigationObstacle : 1; // 0x4fc
	char bDisallowMeshPaintPerInstance : 1; // 0x4fc
	char bIgnoreInstanceForTextureStreaming : 1; // 0x4fc
	char bOverrideLightMapRes : 1; // 0x4fc
	char bCastDistanceFieldIndirectShadow : 1; // 0x4fd
	char bOverrideDistanceFieldSelfShadowBias : 1; // 0x4fd
	char bUseSubDivisions : 1; // 0x4fd
	char bUseDefaultCollision : 1; // 0x4fd
	char bReverseCulling : 1; // 0x4fd
	int32_t OverriddenLightMapRes; // 0x500
	float DistanceFieldIndirectShadowMinVisibility; // 0x504
	float DistanceFieldSelfShadowBias; // 0x508
	float StreamingDistanceMultiplier; // 0x50c
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x510
	TArray<FStreamingTextureBuildInfo> StreamingTextureData; // 0x520
	FLightmassPrimitiveSettings LightmassSettings; // 0x530
};

struct UBravoHotelAnimInstanceUsableItem : UAnimInstance {
	AActor* OwningActorRef; // 0x268
	ABravoHotelCharacter* CharacterRef; // 0x270
	float DeltaTime; // 0x278
	bool bIsCharacterProned; // 0x27c
	bool bIsThirdPerson; // 0x27d
	bool bIsOwnerPlayingAnimation; // 0x27e
	float AnimStartPosition; // 0x280
	float AnimPlayRate; // 0x284
	float OwnerCastingRemainTime; // 0x288
};

struct UGameplayTasksComponent : UActorComponent {
	char bIsNetDirty : 1; // 0xbc
	TArray<UGameplayTask*> SimulatedTasks; // 0xc0
	TArray<UGameplayTask*> TaskPriorityQueue; // 0xd0
	TArray<UGameplayTask*> TickingTasks; // 0xf0
	TArray<UGameplayTask*> KnownTasks; // 0x100
	FMulticastInlineDelegate OnClaimedResourcesChange; // 0x110
};

struct AHUD : AActor {
	APlayerController* PlayerOwner; // 0x328
	char bLostFocusPaused : 1; // 0x330
	char bShowHUD : 1; // 0x330
	char bShowDebugInfo : 1; // 0x330
	int32_t CurrentTargetIndex; // 0x334
	char bShowHitBoxDebugInfo : 1; // 0x338
	char bShowOverlays : 1; // 0x338
	char bEnableDebugTextShadow : 1; // 0x338
	TArray<AActor*> PostRenderedActors; // 0x340
	TArray<FName> DebugDisplay; // 0x358
	TArray<FName> ToggledDebugCategories; // 0x368
	UCanvas* Canvas; // 0x378
	UCanvas* DebugCanvas; // 0x380
	TArray<FDebugTextInfo> DebugTextList; // 0x388
	AActor* ShowDebugTargetDesiredClass; // 0x398
	AActor* ShowDebugTargetActor; // 0x3a0
};

struct ASwitchActor : AActor {
	USceneComponent* SceneComponent; // 0x340
	int32_t LastSelectedOption; // 0x348
};

struct UNiagaraDataInterfaceNeighborGrid3D : UNiagaraDataInterfaceGrid3D {
	uint32_t MaxNeighborsPerVoxel; // 0xf0
};

struct UArrowComponent : UPrimitiveComponent {
	FColor ArrowColor; // 0x4b0
	float ArrowSize; // 0x4b4
	float ScreenSize; // 0x4b8
	char bIsScreenSizeScaled : 1; // 0x4bc
	char bTreatAsASprite : 1; // 0x4bc
};

struct UCrowdFollowingComponent : UPathFollowingComponent {
	UCharacterMovementComponent* CharacterMovement; // 0x260
	FVector CrowdAgentMoveDirection; // 0x268
};

struct UInheritableComponentHandler : UObject {
	TArray<FComponentOverrideRecord> Records; // 0x28
	TArray<UActorComponent*> UnnecessaryComponents; // 0x38
};

struct UBravoHotelAnimInstanceParachute : UAnimInstance {
	ABravoHotelCharacter* CharacterRef; // 0x268
	float DeltaTime; // 0x270
	float InputForward; // 0x274
	float InputRight; // 0x278
	ECharacterState CharacterState; // 0x27c
	bool bIsDescentFalling; // 0x27d
	FVector LeftHandleTransition; // 0x280
	FVector RightHandleTransition; // 0x28c
	bool bNeedToSkipTransitionBlend; // 0x298
	bool Transition_InDescentToStart; // 0x299
	bool Transition_Stand_NotMovingToMoving; // 0x29a
	bool Transition_StartToMovement_3; // 0x29b
	bool Transition_MovementToEnd; // 0x29c
	bool Transition_EndToInDescent; // 0x29d
	UAnimationAsset* ParachuteSeparationAnim_OnLand; // 0x2a0
	UAnimationAsset* ParachuteSeparationAnim_OnAir; // 0x2a8
	ASkeletalMeshActor* SpawnedParachuteActor; // 0x2b0
	float SpawnedParachuteDissolveValue; // 0x2b8
	float SpawnedParachuteDissolveStartTime; // 0x2bc
	float SpawnedParachuteDissolveDuration; // 0x2c0
	float ParachuteSpawnTime; // 0x2c4
};

struct UAISense_Touch : UAISense {
	TArray<FAITouchEvent> RegisteredEvents; // 0x80
};

struct UMovieSceneNiagaraSystemSpawnSection : UMovieSceneSection {
	ENiagaraSystemSpawnSectionStartBehavior SectionStartBehavior; // 0xe0
	ENiagaraSystemSpawnSectionEvaluateBehavior SectionEvaluateBehavior; // 0xe4
	ENiagaraSystemSpawnSectionEndBehavior SectionEndBehavior; // 0xe8
	ENiagaraAgeUpdateMode AgeUpdateMode; // 0xec
};

struct UInterpTrackInstAkAudioRTPC : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UParticleModuleSize_Seeded : UParticleModuleSize {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct ADecalActor : AActor {
	UDecalComponent* Decal; // 0x328
};

struct UInterpTrackFloatAnimBPParam : UInterpTrackFloatBase {
	UObject* AnimBlueprintClass; // 0x90
	UAnimInstance* AnimClass; // 0x98
	FName ParamName; // 0xa0
};

struct UAkLateReverbComponent : USceneComponent {
	char bEnable : 1; // 0x230
	UAkAuxBus* AuxBus; // 0x238
	FString AuxBusName; // 0x240
	float SendLevel; // 0x250
	float FadeRate; // 0x254
	float Priority; // 0x258
	UAkLateReverbComponent* NextLowerPriorityComponent; // 0x260
};

struct UNetworkSettings : UDeveloperSettings {
	char bVerifyPeer : 1; // 0x38
	char bEnableMultiplayerWorldOriginRebasing : 1; // 0x38
	int32_t MaxRepArraySize; // 0x3c
	int32_t MaxRepArrayMemory; // 0x40
	TArray<FNetworkEmulationProfileDescription> NetworkEmulationProfiles; // 0x48
};

struct UEditableGeometryCollectionAdapter : UEditableMeshAdapter {
	UGeometryCollection* GeometryCollection; // 0x28
	UGeometryCollection* OriginalGeometryCollection; // 0x30
	int32_t GeometryCollectionLODIndex; // 0x38
};

struct UTextPropertyTestObject : UObject {
	FText DefaultedText; // 0x28
	FText UndefaultedText; // 0x40
	FText TransientText; // 0x58
};

struct UWidgetBlueprintGeneratedClass : UBlueprintGeneratedClass {
	UWidgetTree* WidgetTree; // 0x3c8
	char bAllowTemplate : 1; // 0x3d0
	char bAllowDynamicCreation : 1; // 0x3d0
	char bValidTemplate : 1; // 0x3d0
	char bTemplateInitialized : 1; // 0x3d0
	char bCookedTemplate : 1; // 0x3d0
	char bClassRequiresNativeTick : 1; // 0x3d0
	TArray<FDelegateRuntimeBinding> Bindings; // 0x3d8
	TArray<UWidgetAnimation*> Animations; // 0x3e8
	TArray<FName> NamedSlots; // 0x3f8
	TSoftObjectPtr<UUserWidget> TemplateAsset; // 0x408
	UUserWidget* Template; // 0x430
};

struct UPostEventAtLocationAsync : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate Completed; // 0x30
};

struct UMaterialExpressionPanner : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	FExpressionInput Speed; // 0x68
	float SpeedX; // 0x7c
	float SpeedY; // 0x80
	uint32_t ConstCoordinate; // 0x84
	bool bFractionalPart; // 0x88
};

struct ABravoHotelProjectileMolotovFireCell : AActor {
	UBoxComponent* FireRoot; // 0x328
	UParticleSystemComponent* FireEffect; // 0x330
	float LifeTime; // 0x338
	TArray<ABravoHotelCharacter*> DamagedCharacters; // 0x340
	ABravoHotelCharacter* Attacker; // 0x350
	ABravoHotelProjectileGrenadeMolotovCocktail* OwnerProjectileGrenade; // 0x358
	int32_t DamageTime; // 0x360
	float FireDamage; // 0x364
	float LimitRange; // 0x368
	bool bIgnoreAttacker; // 0x36c
	TWeakObjectPtr<UPrimitiveComponent> HitComponent; // 0x370
	FTimerHandle TimerHandle_CheckHitComponent; // 0x378
	FTimerHandle TimeHandle_LifeTime; // 0x380
	FTimerHandle TimeHandle_CheckDistanceToPlayer; // 0x388
	UDamageType* DamageTypeClass; // 0x390
	TWeakObjectPtr<ABravoHotelCharacter> LocalPlayingCharacter; // 0x39c
};

struct UPropertyValue : UObject {
	TArray<TFieldPath<FProperty>> Properties; // 0x88
	TArray<int32_t> PropertyIndices; // 0x98
	TArray<FCapturedPropSegment> CapturedPropSegments; // 0xa8
	FString FullDisplayString; // 0xb8
	FName PropertySetterName; // 0xc8
	TMap<FString, FString> PropertySetterParameterDefaults; // 0xd0
	bool bHasRecordedData; // 0x120
	UObject* LeafPropertyClass; // 0x128
	TArray<char> ValueBytes; // 0x138
	EPropertyValueCategory PropCategory; // 0x148
};

struct ACableActor : AActor {
	UCableComponent* CableComponent; // 0x328
};

struct UUW-PlayerIconWidget_C : UBravoHotelPlayerIconWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x318
	UWidgetAnimation* Anim_OnNotifyPos; // 0x320
	UWidgetAnimation* Anim_OnAttacked; // 0x328
	UCanvasPanel* Canvas_Attacked; // 0x330
	UCanvasPanel* Canvas_Fire; // 0x338
	UCanvasPanel* Canvas_NotifyPos; // 0x340
	UImage* Img_FreeCam; // 0x348
	ABravoHotelPlayerState* PlayerState; // 0x350
};

struct ABravoHotelEjectingClip : ABravoHotelShellCasing {
	UAkAudioEvent* EjectingSound; // 0x348
};

struct UBravoHotelDevelopmentBlackMarket : UUserWidget {
	TArray<FBravoHotelBlackMarketDataType> WeaponList; // 0x248
	TArray<FBravoHotelBlackMarketDataType> AmmoList; // 0x258
	TArray<FBravoHotelBlackMarketDataType> AttachmentList; // 0x268
	TArray<FBravoHotelBlackMarketDataType> WearableList; // 0x278
	TArray<FBravoHotelBlackMarketDataType> ConsumableList; // 0x288
	TArray<FBravoHotelBlackMarketDataType> CustomList; // 0x298
	TArray<FBravoHotelBlackMarketDataType> VehicleList; // 0x2a8
	TArray<FBravoHotelBlackMarketDataType> GearList; // 0x2b8
	TArray<FBravoHotelBlackMarketDataType> PerkList; // 0x2c8
	TArray<FBravoHotelBlackMarketDataType> PresetList; // 0x2d8
};

struct AFieldSystemActor : AActor {
	UFieldSystemComponent* FieldSystemComponent; // 0x328
};

struct UPawnActionsComponent : UActorComponent {
	APawn* ControlledPawn; // 0xb0
	TArray<FPawnActionStack> ActionStacks; // 0xb8
	TArray<FPawnActionEvent> ActionEvents; // 0xc8
	UPawnAction* CurrentAction; // 0xd8
};

struct UParticleModuleLifetime_Seeded : UParticleModuleLifetime {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct AWindDirectionalSource : AInfo {
	UWindDirectionalSourceComponent* Component; // 0x328
};

struct ABravoHotelDestructibleEx : AActor {
	bool bHiddenInReplay; // 0x330
};

struct UBTTask_SetTagCooldown : UBTTaskNode {
	FGameplayTag CooldownTag; // 0x70
	bool bAddToExistingDuration; // 0x78
	float CooldownDuration; // 0x7c
};

struct UMovieScene2DTransformSection : UMovieSceneSection {
	FMovieScene2DTransformMask TransformMask; // 0xe0
	FMovieSceneFloatChannel Translation[0x2]; // 0xe8
	FMovieSceneFloatChannel Rotation; // 0x228
	FMovieSceneFloatChannel Scale[0x2]; // 0x2c8
	FMovieSceneFloatChannel Shear[0x2]; // 0x408
};

struct UEnvQueryGenerator : UEnvQueryNode {
	FString OptionName; // 0x30
	UEnvQueryItemType* ItemType; // 0x40
	char bAutoSortTests : 1; // 0x48
};

struct USoundNodeLooping : USoundNode {
	int32_t LoopCount; // 0x48
	char bLoopIndefinitely : 1; // 0x4c
};

struct USimplygonVertexColorCaster : USimplygonMaterialCaster {
	FVertexColorCasterSettings VertexColorCasterSettings; // 0x28
};

struct UAsyncActionLoadPrimaryAssetList : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UMovieSceneCameraShakeTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x58
};

struct UAnimClassData : UObject {
	TMap<FName, FGraphAssetPlayerInformation> GraphNameAssetPlayers; // 0x30
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x80
	TArray<FAnimBlueprintFunction> AnimBlueprintFunctions; // 0xb0
	TArray<TFieldPath<FStructProperty>> StateMachineNodeProperties; // 0xc0
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0xe0
	USkeleton* TargetSkeleton; // 0xf0
	TArray<TFieldPath<FStructProperty>> AnimNodeProperties; // 0x108
	TArray<TFieldPath<FStructProperty>> InitializationNodeProperties; // 0x118
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x128
	TArray<FName> SyncGroupNames; // 0x178
	TArray<TFieldPath<FStructProperty>> LinkedAnimLayerNodeProperties; // 0x1a8
	TArray<TFieldPath<FStructProperty>> LinkedAnimGraphNodeProperties; // 0x1b8
	TArray<TFieldPath<FStructProperty>> PreUpdateNodeProperties; // 0x1c8
	TArray<FAnimBlueprintFunctionData> AnimBlueprintFunctionData; // 0x1d8
	TArray<TFieldPath<FStructProperty>> DynamicResetNodeProperties; // 0x1e8
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x1f8
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x248
};

struct UAISense_Prediction : UAISense {
	TArray<FAIPredictionEvent> RegisteredEvents; // 0x80
};

struct APaperTerrainActor : AActor {
	USceneComponent* DummyRoot; // 0x328
	UPaperTerrainSplineComponent* SplineComponent; // 0x330
	UPaperTerrainComponent* RenderComponent; // 0x338
};

struct UMaterialExpressionArccosineFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionQualitySwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x3]; // 0x54
};

struct UMaterialExpressionThinTranslucentMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput TransmittanceColor; // 0x40
};

struct ABravoHotelSkillTargetingNuclear : ABravoHotelSkillTargetingBase {
	FNuclearInfo NuclearInfo; // 0x348
	UAkAudioEvent* NuclearWarningEvent; // 0x358
	float BroadcastDelayTime; // 0x360
	float NuclearDelayTime; // 0x364
	float NuclearHeight; // 0x368
	bool bBroadcastNuclear; // 0x36c
};

struct UZipFileFunctionInternalCallback : UObject {
	EZipUtilityCompressionFormat CompressionFormat; // 0x30
	FString File; // 0x38
	FString DestinationFolder; // 0x48
	int32_t FileIndex; // 0x58
	UObject* Callback; // 0x60
	bool bSingleFile; // 0x68
	bool bFileFound; // 0x69
	bool bUnzipto; // 0x6a
};

struct UDatasmithStaticMeshComponentTemplate : UDatasmithObjectTemplate {
	UStaticMesh* StaticMesh; // 0x30
	TArray<UMaterialInterface*> OverrideMaterials; // 0x38
};

struct UMovieSceneByteTrack : UMovieScenePropertyTrack {
	UEnum* Enum; // 0x88
};

struct USubmixEffectDynamicsProcessorPreset : USoundEffectSubmixPreset {
	FSubmixEffectDynamicsProcessorSettings Settings; // 0xb8
};

struct UAISense_Hearing : UAISense {
	TArray<FAINoiseEvent> NoiseEvents; // 0x80
	float SpeedOfSoundSq; // 0x90
};

struct UBlackboardKeyType_Object : UBlackboardKeyType {
	UObject* BaseClass; // 0x30
};

struct UAsyncActionLoadPrimaryAssetClassList : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct AChaosSolverActor : AActor {
	float TimeStepMultiplier; // 0x328
	int32_t CollisionIterations; // 0x32c
	int32_t PushOutIterations; // 0x330
	int32_t PushOutPairIterations; // 0x334
	float ClusterConnectionFactor; // 0x338
	EClusterConnectionTypeEnum ClusterUnionConnectionType; // 0x33c
	bool DoGenerateCollisionData; // 0x33d
	FSolverCollisionFilterSettings CollisionFilterSettings; // 0x340
	bool DoGenerateBreakingData; // 0x350
	FSolverBreakingFilterSettings BreakingFilterSettings; // 0x354
	bool DoGenerateTrailingData; // 0x364
	FSolverTrailingFilterSettings TrailingFilterSettings; // 0x368
	bool bHasFloor; // 0x378
	float FloorHeight; // 0x37c
	float MassScale; // 0x380
	bool bGenerateContactGraph; // 0x384
	FChaosDebugSubstepControl ChaosDebugSubstepControl; // 0x385
	UBillboardComponent* SpriteComponent; // 0x388
	UChaosGameplayEventDispatcher* GameplayEventDispatcherComponent; // 0x3a8
};

struct UMaterialExpressionMaterialAttributeLayers : UMaterialExpression {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
	FMaterialAttributesInput Input; // 0x58
	FMaterialLayersFunctions DefaultLayers; // 0x70
	TArray<UMaterialExpressionMaterialFunctionCall*> LayerCallers; // 0xb0
	int32_t NumActiveLayerCallers; // 0xc0
	TArray<UMaterialExpressionMaterialFunctionCall*> BlendCallers; // 0xc8
	int32_t NumActiveBlendCallers; // 0xd8
	bool bIsLayerGraphBuilt; // 0xdc
};

struct UUW-Inventory_MaterialSlot_C : UUW-Inventory_SlotBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1360
	UWidgetAnimation* Anim_LoopHintMaterial; // 0x1368
	UWidgetAnimation* Anim_Upgrade; // 0x1370
	UWidgetAnimation* P_Upgrade_Arrow; // 0x1378
	UWidgetAnimation* C_SlotHover_ItemState_Hide; // 0x1380
	UWidgetAnimation* C_SlotHover_ItemState_Show; // 0x1388
	UWidgetAnimation* Hover_Gold; // 0x1390
	UWidgetAnimation* P_SlotHover; // 0x1398
	UImage* BGImage; // 0x13a0
	UCanvasPanel* CanvasPanel_ITemState; // 0x13a8
	UCanvasPanel* CanvasPanel_Unnecessary; // 0x13b0
	UTextBlock* Count; // 0x13b8
	UTextBlock* Count_Icon; // 0x13c0
	UImage* fill; // 0x13c8
	UImage* Hint; // 0x13d0
	UImage* HoverImage; // 0x13d8
	UImage* HoverImage_Gold; // 0x13e0
	UImage* Image_1; // 0x13e8
	UImage* Image_2; // 0x13f0
	UImage* Image_95; // 0x13f8
	UImage* ItemImage; // 0x1400
	UTextBlock* ItemNameName; // 0x1408
	UTextBlock* ItemState_Text; // 0x1410
	UImage* LvColor; // 0x1418
	UImage* NeedMaterial; // 0x1420
	UImage* OverBG_3; // 0x1428
	UProgressBar* ProgressBar_136; // 0x1430
	USizeBox* SizeBox_1; // 0x1438
	UImage* WeaponItemImage; // 0x1440
	bool bGold; // 0x1448
	UImage* SelectedHoverImage; // 0x1450
	FLinearColor MedicalBGColor; // 0x1458
	FMulticastInlineDelegate SetSlotInfo; // 0x1468
	int32_t SlotIndex; // 0x1478
};

struct UGameplayTask_SpawnActor : UGameplayTask {
	FMulticastInlineDelegate SUCCESS; // 0x68
	FMulticastInlineDelegate DidNotSpawn; // 0x78
	AActor* ClassToSpawn; // 0xa0
};

struct UHapticFeedbackEffect_Curve : UHapticFeedbackEffect_Base {
	FHapticFeedbackDetails_Curve HapticDetails; // 0x28
};

struct UParticleModuleColorScaleOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorScaleOverLife; // 0x30
	FRawDistributionFloat AlphaScaleOverLife; // 0x78
	char bEmitterTime : 1; // 0xa8
};

struct UBTTask_MoveDirectlyToward : UBTTask_MoveTo {
	char bDisablePathUpdateOnGoalLocationChange : 1; // 0xb0
	char bProjectVectorGoalToNavigation : 1; // 0xb0
	char bUpdatedDeprecatedProperties : 1; // 0xb0
};

struct UPlanePositionGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoVec2ParameterSource> ParameterSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bEnableSignedAxis; // 0x88
	bool bFlipX; // 0x89
	bool bFlipY; // 0x8a
	bool bInInteraction; // 0x8b
	FVector InteractionOrigin; // 0x8c
	FVector InteractionNormal; // 0x98
	FVector InteractionAxisX; // 0xa4
	FVector InteractionAxisY; // 0xb0
	FVector InteractionStartPoint; // 0xbc
	FVector InteractionCurPoint; // 0xc8
	FVector2D InteractionStartParameter; // 0xd4
	FVector2D InteractionCurParameter; // 0xdc
	FVector2D ParameterSigns; // 0xe4
};

struct UNiagaraScript : UObject {
	ENiagaraScriptUsage Usage; // 0x28
	int32_t UsageIndex; // 0x2c
	FGuid UsageId; // 0x30
	FNiagaraParameterStore RapidIterationParameters; // 0x40
	FNiagaraScriptExecutionParameterStore ScriptExecutionParamStore; // 0xf8
	TArray<FNiagaraBoundParameter> ScriptExecutionBoundParameters; // 0x1d0
	FNiagaraVMExecutableDataId CachedScriptVMId; // 0x1e0
	FNiagaraVMExecutableData CachedScriptVM; // 0x3d8
	TArray<UNiagaraParameterCollection*> CachedParameterCollectionReferences; // 0x500
	TArray<FNiagaraScriptDataInterfaceInfo> CachedDefaultDataInterfaces; // 0x510
};

struct ABravoHotelEquippableActor : AActor {
	UEquippableComponent* ReplicatedComponent; // 0x328
	UStaticMeshComponent* StaticMesh; // 0x330
	USkeletalMeshComponent* SkelMesh; // 0x338
	FInventoryItemDetailInfo ItemDetailInfo; // 0x340
	float EquipTime_L; // 0x7d0
	float EquipTime_R; // 0x7d4
	float UnEquipTime; // 0x7d8
	float EquipAnimationPlayRate_L; // 0x7dc
	float EquipAnimationPlayRate_R; // 0x7e0
	float UnequipAnimationPlayRate; // 0x7e4
	char bPendingEquip : 1; // 0x7e8
	char bPendingUnEquip : 1; // 0x7e8
	FName OverrideAttachSocketName; // 0x810
	FName OverrideAttachSocketName_Backpack; // 0x818
	FAnimSlot OverrideEquipAnimMontage_StandSlot; // 0x820
	FAnimSlot OverrideEquipAnimMontage_ProneSlot; // 0x830
	FAnimSlot OverrideUnequipAnimMontage_StandSlot; // 0x840
	FAnimSlot OverrideUnequipAnimMontage_ProneSlot; // 0x850
	char bIsEquipped : 1; // 0x868
};

struct ULandscapeGrassType : UObject {
	TArray<FGrassVariety> GrassVarieties; // 0x28
	char bEnableDensityScaling : 1; // 0x38
	UStaticMesh* GrassMesh; // 0x40
	float GrassDensity; // 0x48
	float PlacementJitter; // 0x4c
	int32_t StartCullDistance; // 0x50
	int32_t EndCullDistance; // 0x54
	bool RandomRotation; // 0x58
	bool AlignToSurface; // 0x59
};

struct UPhysicsAsset : UObject {
	TArray<int32_t> BoundsBodies; // 0x30
	TArray<USkeletalBodySetup*> SkeletalBodySetups; // 0x40
	TArray<UPhysicsConstraintTemplate*> ConstraintSetup; // 0x50
	FSolverIterations SolverIterations; // 0x60
	char bNotForDedicatedServer : 1; // 0x78
	UThumbnailInfo* ThumbnailInfo; // 0x120
	TArray<UBodySetup*> BodySetup; // 0x128
};

struct UAvfMediaSettings : UObject {
	bool NativeAudioOut; // 0x28
};

struct UMaterialExpressionArcsineFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UAREnvironmentCaptureProbeTexture : UTextureCube {
	EARTextureType TextureType; // 0x110
	float Timestamp; // 0x114
	FGuid ExternalTextureGuid; // 0x118
	FVector2D Size; // 0x128
};

struct AGameState : AGameStateBase {
	FName MatchState; // 0x378
	FName PreviousMatchState; // 0x380
	int32_t ElapsedTime; // 0x388
};

struct UButtonWidgetStyle : USlateWidgetStyleContainerBase {
	FButtonStyle ButtonStyle; // 0x30
};

struct UMovieScene : UMovieSceneSignedObject {
	TArray<FMovieSceneSpawnable> Spawnables; // 0x50
	TArray<FMovieScenePossessable> Possessables; // 0x60
	TArray<FMovieSceneBinding> ObjectBindings; // 0x70
	TMap<FName, FMovieSceneObjectBindingIDs> BindingGroups; // 0x80
	TArray<UMovieSceneTrack*> MasterTracks; // 0xd0
	UMovieSceneTrack* CameraCutTrack; // 0xe0
	FMovieSceneFrameRange SelectionRange; // 0xe8
	FMovieSceneFrameRange PlaybackRange; // 0xf8
	FFrameRate TickResolution; // 0x108
	FFrameRate DisplayRate; // 0x110
	EMovieSceneEvaluationType EvaluationType; // 0x118
	EUpdateClockSource ClockSource; // 0x119
	FSoftObjectPath CustomClockSourcePath; // 0x120
	TArray<FMovieSceneMarkedFrame> MarkedFrames; // 0x138
};

struct UMovieSceneActorReferenceSection : UMovieSceneSection {
	FMovieSceneActorReferenceData ActorReferenceData; // 0xe0
	FIntegralCurve ActorGuidIndexCurve; // 0x190
	TArray<FString> ActorGuidStrings; // 0x210
};

struct AOnlineBeacon : AActor {
	float BeaconConnectionInitialTimeout; // 0x330
	float BeaconConnectionTimeout; // 0x334
	UNetDriver* NetDriver; // 0x338
};

struct UParticleModuleVelocityOverLifetime : UParticleModuleVelocityBase {
	FRawDistributionVector VelOverLife; // 0x38
	char Absolute : 1; // 0x80
};

struct ABravoHotelProjectileGrenadeFlashbang : ABravoHotelProjectileGrenade {
	UCurveFloat* AngleCurve; // 0x688
	UCurveFloat* TimeCurve; // 0x690
	UCameraPostProcessPreset* PostProcessFlashBangClass; // 0x698
	float PostProcessDurationTime; // 0x6a0
	float PostProcessRateTime; // 0x6a4
	TArray<FBlindCharacter> BlindCharacters; // 0x6a8
	FTimerHandle TimeHandler_ActiveFlashBang; // 0x6b8
	UParticleSystemComponent* BoobyTrapEffect; // 0x6d0
	UParticleSystem* BoobyTrapTriggerEffect; // 0x6d8
	UParticleSystem* BoobyTrapDestoryEffect; // 0x6e0
	UAkAudioEvent* BoobyTrapLoopStartEvent; // 0x6e8
	UAkAudioEvent* BoobyTrapLoopStopEvent; // 0x6f0
	UAkAudioEvent* BoobyTrapTriggerEvent; // 0x6f8
	FAudioPlayingHandle BoobyTrapLoopSoundHandle; // 0x700
};

struct UCreateSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UPaperFlipbookComponent : UMeshComponent {
	UPaperFlipbook* SourceFlipbook; // 0x4e0
	UMaterialInterface* Material; // 0x4e8
	float PlayRate; // 0x4f0
	char bLooping : 1; // 0x4f4
	char bReversePlayback : 1; // 0x4f4
	char bPlaying : 1; // 0x4f4
	float AccumulatedTime; // 0x4f8
	int32_t CachedFrameIndex; // 0x4fc
	FLinearColor SpriteColor; // 0x500
	UBodySetup* CachedBodySetup; // 0x510
	FMulticastInlineDelegate OnFinishedPlaying; // 0x518
};

struct UUW-BlackMarket_Slot_Consumable_C : UUW-BlackMarket_Slot_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UButton* BTN-Menu02; // 0x3e0
	UButton* BTN-Menu03; // 0x3e8
	UButton* BTN-Menu04; // 0x3f0
	UButton* BTN-Menu05; // 0x3f8
	UButton* BTN-Menu06; // 0x400
	UCanvasPanel* CP-SlotInfo; // 0x408
	UImage* IMG-BG; // 0x410
	UImage* IMG-BG-Border; // 0x418
	UImage* IMG-Item; // 0x420
	UImage* IMG-Mask; // 0x428
	UImage* IMG-Over; // 0x430
	UImage* IMG-Over-Border; // 0x438
	UOverlay* Menu02; // 0x440
	UOverlay* Menu03; // 0x448
	UOverlay* Menu04; // 0x450
	UOverlay* Menu05; // 0x458
	UOverlay* Menu06; // 0x460
	UOverlay* Overlay_Mask; // 0x468
	UTextBlock* TXT-Adrenaline; // 0x470
	UTextBlock* TXT-Fuel; // 0x478
	UTextBlock* TXT-Health; // 0x480
	UTextBlock* TXT-ItemName; // 0x488
	UTextBlock* TXT-Menu01; // 0x490
	UTextBlock* TXT-Menu02; // 0x498
	UTextBlock* TXT-Menu03; // 0x4a0
	UTextBlock* TXT-Menu04; // 0x4a8
	UTextBlock* TXT-Menu05; // 0x4b0
	UTextBlock* TXT-Menu06; // 0x4b8
	UTextBlock* TXT-Weight; // 0x4c0
};

struct UGizmoTransformProxyTransformSource : UGizmoBaseTransformSource {
	UTransformProxy* Proxy; // 0x48
};

struct UNavigationDataChunk : UObject {
	FName NavigationDataName; // 0x28
};

struct UBravoHotelReplayTimelineEventMarker : UUserWidget {
	ABravoHotelMK3DReplayController* ReplayController; // 0x248
	FMK3DHighlightKillEvent KillEvent; // 0x250
};

struct UBravoHotelScenarioBase : UObject {
	AActor* OwnerActor; // 0x28
};

struct UBravoHotelSupplyBoxSpawnComponent : UBoxComponent {
	bool TraceLand; // 0x4d8
	int32_t CustomIndex; // 0x4e0
};

struct ABravoHotelProjectileGrenadeMolotovCocktail : ABravoHotelProjectileGrenade {
	UAkAudioEvent* FireStartSound; // 0x688
	UAkAudioEvent* FireEndSound; // 0x690
	FAudioPlayingHandle FireLoopSoundHandle; // 0x698
	FTimerHandle TimeHandle_EndFirewallSound; // 0x6a0
	UParticleSystemComponent* MolotovFireTrailParticle; // 0x6a8
	UParticleSystemComponent* BoobyTrapEffect; // 0x6b0
	UParticleSystem* BoobyTrapTriggerEffect; // 0x6b8
	UParticleSystem* BoobyTrapDestoryEffect; // 0x6c0
	UAkAudioEvent* BoobyTrapLoopStartEvent; // 0x6c8
	UAkAudioEvent* BoobyTrapLoopStopEvent; // 0x6d0
	UAkAudioEvent* BoobyTrapTriggerEvent; // 0x6d8
	FAudioPlayingHandle BoobyTrapLoopSoundHandle; // 0x6e0
	FTimerHandle TimeHandler_ActiveMolotovCocktail; // 0x6e8
	ABravoHotelProjectileMolotovFireCell* FireCellClass; // 0x6f8
	TArray<ABravoHotelProjectileMolotovFireCell*> MolotovFireCells; // 0x700
	FTimerHandle TimeHandle_SpreadingMolotov; // 0x718
	FTimerHandle TimeHandle_ShrinkingMolotov; // 0x720
	TArray<FVector> FireLocations; // 0x728
	TArray<UParticleSystemComponent*> FirePropagations; // 0x738
	float FireSpreadFirstDelayTime; // 0x7c8
	float FireSpreadTime; // 0x7cc
	float FireShrinkTime; // 0x7d0
	bool bEnableFireWall; // 0x818
	int32_t FireWallCellCount; // 0x81c
	float FireWallCellWidth; // 0x820
	int32_t FirePropagationLevelMax; // 0x824
	float FirePropagationLevelWidth; // 0x828
	TArray<float> FirePropagationDivideAnglePerLevel; // 0x830
};

struct UUW-Inventory_Weapon_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image; // 0x250
	UImage* Image_1; // 0x258
	UImage* Image_2; // 0x260
	UImage* Image_3; // 0x268
	UImage* Image_4; // 0x270
	UImage* Image_5; // 0x278
	UImage* Image_6; // 0x280
	UImage* Image_7; // 0x288
	UImage* Image_773; // 0x290
	UUW-Inventory_WeaponSlot_C* WeaponSlot01; // 0x298
	UUW-Inventory_WeaponSlot_C* WeaponSlot02; // 0x2a0
	UUW-Inventory_WeaponSlot_C* WeaponSlot03; // 0x2a8
	UUW-Inventory_WeaponSlot_C* WeaponSlot04; // 0x2b0
	UUW-Inventory_WeaponSlot_C* WeaponSlot05; // 0x2b8
	TMap<int32_t, UUW-Inventory_WeaponSlot_C*> WeaponSlots; // 0x2c0
};

struct UNavAreaMeta_SwitchByAgent : UNavAreaMeta {
	UNavArea* Agent0Area; // 0x48
	UNavArea* Agent1Area; // 0x50
	UNavArea* Agent2Area; // 0x58
	UNavArea* Agent3Area; // 0x60
	UNavArea* Agent4Area; // 0x68
	UNavArea* Agent5Area; // 0x70
	UNavArea* Agent6Area; // 0x78
	UNavArea* Agent7Area; // 0x80
	UNavArea* Agent8Area; // 0x88
	UNavArea* Agent9Area; // 0x90
	UNavArea* Agent10Area; // 0x98
	UNavArea* Agent11Area; // 0xa0
	UNavArea* Agent12Area; // 0xa8
	UNavArea* Agent13Area; // 0xb0
	UNavArea* Agent14Area; // 0xb8
	UNavArea* Agent15Area; // 0xc0
};

struct ULandscapeMeshCollisionComponent : ULandscapeHeightfieldCollisionComponent {
	FGuid MeshGuid; // 0x590
};

struct ACoherentUIGTInputActor : AActor {
	FMulticastInlineDelegate OnCoherentUIGTInputActorMouseButtonDown; // 0x328
	FMulticastInlineDelegate OnCoherentUIGTInputActorMouseButtonUp; // 0x338
	FMulticastInlineDelegate OnCoherentUIGTInputActorKeyDown; // 0x348
	FMulticastInlineDelegate OnCoherentUIGTInputActorKeyUp; // 0x358
};

struct UEnvQueryManager : UAISubsystem {
	TArray<FEnvQueryInstanceCache> InstanceCache; // 0xa8
	TArray<UEnvQueryContext*> LocalContexts; // 0xb8
	TArray<UEnvQueryInstanceBlueprintWrapper*> GCShieldedWrappers; // 0xc8
	float MaxAllowedTestingTime; // 0x12c
	bool bTestQueriesUsingBreadth; // 0x130
	int32_t QueryCountWarningThreshold; // 0x134
	double QueryCountWarningInterval; // 0x138
};

struct URemeshingPipeline : USimplygonPipeline {
	FRemeshingPipelineSettings Settings; // 0x28
};

struct UParticleModuleMeshMaterial : UParticleModuleMaterialBase {
	TArray<UMaterialInterface*> MeshMaterials; // 0x30
};

struct UAnimNotifyState_TimedParticleEffect : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct USoundBase : UObject {
	USoundClass* SoundClassObject; // 0x28
	char bDebug : 1; // 0x30
	char bOverrideConcurrency : 1; // 0x30
	char bOutputToBusOnly : 1; // 0x30
	char bHasDelayNode : 1; // 0x30
	char bHasConcatenatorNode : 1; // 0x30
	char bBypassVolumeScaleForPriority : 1; // 0x30
	EVirtualizationMode VirtualizationMode; // 0x31
	TSet<USoundConcurrency*> ConcurrencySet; // 0x88
	FSoundConcurrencySettings ConcurrencyOverrides; // 0xd8
	float Duration; // 0xf8
	float MaxDistance; // 0xfc
	float TotalSamples; // 0x100
	float Priority; // 0x104
	USoundAttenuation* AttenuationSettings; // 0x108
	FSoundModulation Modulation; // 0x110
	USoundSubmixBase* SoundSubmixObject; // 0x120
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x128
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x138
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x140
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x150
};

struct USoundCue : USoundBase {
	char bPrimeOnLoad : 1; // 0x160
	USoundNode* FirstNode; // 0x168
	float VolumeMultiplier; // 0x170
	float PitchMultiplier; // 0x174
	FSoundAttenuationSettings AttenuationOverrides; // 0x178
	float SubtitlePriority; // 0x518
	char bOverrideAttenuation : 1; // 0x520
	char bExcludeFromRandomNodeBranchCulling : 1; // 0x520
	int32_t CookedQualityIndex; // 0x524
	char bHasPlayWhenSilent : 1; // 0x528
};

struct UInAppPurchaseRestoreCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UMaterialExpressionLandscapeLayerWeight : UMaterialExpression {
	FExpressionInput Base; // 0x40
	FExpressionInput Layer; // 0x54
	FName ParameterName; // 0x68
	float PreviewWeight; // 0x70
	FVector ConstBase; // 0x74
	FGuid ExpressionGUID; // 0x80
};

struct UEndpointSubmix : USoundSubmixBase {
	FName EndpointType; // 0x38
	UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40
	UAudioEndpointSettingsBase* EndpointSettings; // 0x48
};

struct UUW-Lobby_Craft_Success_PerkSelect_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_Show; // 0x250
	UBorder* Border; // 0x258
	UBorder* Border_51; // 0x260
	UButton* btn_All_OK; // 0x268
	UButton* btn_Close; // 0x270
	UHorizontalBox* HorizontalBox_CloseButton; // 0x278
	UImage* Image_2; // 0x280
	UUW-Lobby_Craft_Success_Perk_Close_C* UW-Lobby_Craft_Success_Perk_Close; // 0x288
	UUW-Lobby_Craft_Success_Perk_Close_C* UW-Lobby_Craft_Success_Perk_Close_2; // 0x290
	UUW-Lobby_Craft_Success_Perk_Close_C* UW-Lobby_Craft_Success_Perk_Close_3; // 0x298
	UUW-Lobby_WeaponInfo_C* UW-Lobby_WeaponInfo; // 0x2a0
	UUW-Lobby_WeaponInfo_OptionList_C* UW-Lobby_WeaponInfo_OptionList; // 0x2a8
	UWidgetSwitcher* WidgetSwitcher_90; // 0x2b0
	TArray<FItemOption> OpenedOptionList; // 0x2b8
};

struct UMovieSceneTrack : UMovieSceneSignedObject {
	FMovieSceneTrackEvalOptions EvalOptions; // 0x50
	bool bIsEvalDisabled; // 0x55
};

struct ADatasmithSceneActor : AActor {
	UDatasmithScene* Scene; // 0x328
	TMap<FName, TSoftObjectPtr<AActor>> RelatedActors; // 0x330
};

struct UMovieSceneBoolSection : UMovieSceneSection {
	bool DefaultValue; // 0xe0
	FMovieSceneBoolChannel BoolCurve; // 0xe8
};

struct UScrollBarWidgetStyle : USlateWidgetStyleContainerBase {
	FScrollBarStyle ScrollBarStyle; // 0x30
};

struct ABravoHotelElevator : AActor {
	USceneComponent* ElevatorBody; // 0x328
	TArray<ABravoHotelElevatorDoor*> DoorList; // 0x330
	TArray<ABravoHotelElevatorDoor*> InnerDoorList; // 0x340
	TArray<FTransform> InnerDoorPivotList; // 0x350
	ABravoHotelElevatorDoor* TargetDoor; // 0x360
	ABravoHotelElevatorDoor* CurrentDoor; // 0x368
	TArray<int32_t> DoorQueue; // 0x370
	EElevatorStateType CurrentStateType; // 0x380
	int32_t DefaultDoorID; // 0x384
	float MoveSpeed; // 0x388
	float DefaultDelayTime; // 0x38c
	float CurrentDelayTime; // 0x390
	UAkComponent* AkAudioComponent; // 0x398
	UAkAudioEvent* SoundEventForMoving; // 0x3a0
	UAkAudioEvent* SoundEventForMoved; // 0x3a8
};

struct UMaterialExpressionSubtract : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UTexture2DDynamic : UTexture {
	EPixelFormat Format; // 0xc0
};

struct UDistributionVectorConstant : UDistributionVector {
	FVector Constant; // 0x38
	char bLockAxes : 1; // 0x44
	EDistributionVectorLockFlags LockedAxes; // 0x48
};

struct UGameSessionSettings : UObject {
	int32_t MaxSpectators; // 0x28
	int32_t MaxPlayers; // 0x2c
	char bRequiresPushToTalk : 1; // 0x30
};

struct UClickDragInputBehavior : UAnyButtonInputBehavior {
	bool bUpdateModifiersDuringDrag; // 0x120
};

struct UBTService_RunEQS : UBTService_BlackboardBase {
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0x98
};

struct UMaterialExpressionConstant3Vector : UMaterialExpression {
	FLinearColor Constant; // 0x40
};

struct USubstanceOutputData : UObject {
	UObject* ConnectedObject; // 0x28
	FMaterialParameterInfo ParamInfo; // 0x30
	USubstanceGraphInstance* ParentInstance; // 0x40
	FGuid CacheGuid; // 0x48
};

struct UUW-ReplayMainWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_ToggleItemList; // 0x250
	UWidgetAnimation* Anim_TogglePlayerList; // 0x258
	UWidgetAnimation* Anim_ToggleTimeline; // 0x260
	UUW-ReplayFreeCamSpeedWidget_C* UW-ReplayFreeCamSpeedWidget; // 0x268
	UUW-ReplayGuideWidget_C* UW-ReplayGuideWidget; // 0x270
	UUW-ReplayItemList_C* UW-ReplayItemList; // 0x278
	UUW-ReplayPlayerListWidget_C* UW-ReplayPlayerListWidget; // 0x280
	UUW-ReplayTimelineBasic_C* UW-ReplayTimelineBasic; // 0x288
	UUW-ReplayWorldMapOption_C* UW-ReplayWorldMapOption; // 0x290
	UUW-SpectatingTargetInfo_C* UW-SpectatingTargetInfo; // 0x298
	ABP-MK3DReplayController_C* ReplayController; // 0x2a0
	TArray<UUW_ReplayUserNameTooltip_C*> UserNameTooltips; // 0x2a8
	UBravoHotelMainWidget* MainWidget; // 0x2b8
	int32_t UserNameTooltipsNum; // 0x2c0
};

struct UWBP_SPS_SelectionMenu_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UCanvasPanel* Canvas; // 0x250
	UImage* CenterCursor; // 0x258
	UTextBlock* DisplayText; // 0x260
	UImage* Image; // 0x268
	UImage* Image_2; // 0x270
	UImage* Image_3; // 0x278
	UImage* Image_4; // 0x280
	UImage* Image_5; // 0x288
	UImage* Image_6; // 0x290
	UImage* Image_7; // 0x298
	UImage* Image_274; // 0x2a0
	UTextBlock* Message0; // 0x2a8
	UTextBlock* Message2; // 0x2b0
	UTextBlock* Message3; // 0x2b8
	UTextBlock* Message3_1; // 0x2c0
	UTextBlock* Message3_2; // 0x2c8
	UTextBlock* Message3_3; // 0x2d0
	UTextBlock* Message3_4; // 0x2d8
	UTextBlock* Message3_5; // 0x2e0
	UTextBlock* Message3_6; // 0x2e8
	UTextBlock* Message3_7; // 0x2f0
	UTextBlock* Message3_8; // 0x2f8
	UTextBlock* Message4; // 0x300
	UTextBlock* Message5; // 0x308
	UTextBlock* Message6; // 0x310
	UTextBlock* Message7; // 0x318
	UTextBlock* Messgae1; // 0x320
	UImage* Over1; // 0x328
	UImage* Over2; // 0x330
	UImage* Over3; // 0x338
	UImage* Over4; // 0x340
	UImage* Over5; // 0x348
	UImage* Over6; // 0x350
	UImage* Over7; // 0x358
	UImage* Over8; // 0x360
	UWBP_SPS_SelectionIcon_C* Slot0; // 0x368
	UWBP_SPS_SelectionIcon_C* Slot1; // 0x370
	UWBP_SPS_SelectionIcon_C* Slot2; // 0x378
	UWBP_SPS_SelectionIcon_C* Slot3; // 0x380
	UWBP_SPS_SelectionIcon_C* Slot4; // 0x388
	UWBP_SPS_SelectionIcon_C* Slot5; // 0x390
	UWBP_SPS_SelectionIcon_C* Slot6; // 0x398
	UWBP_SPS_SelectionIcon_C* Slot7; // 0x3a0
	UTextBlock* Type; // 0x3a8
	UUW-PlayerMarkerWidget_C* UW-PlayerMarkerWidget; // 0x3b0
	UWidgetSwitcher* WidgetSwitcher_133; // 0x3b8
	TArray<UWBP_SPS_SelectionIcon_C*> SelectionWidgets; // 0x3c0
	FVector2D MenuCenter; // 0x3d0
	FVector ReferenceVector; // 0x3d8
	FMulticastInlineDelegate Selected; // 0x3e8
	USmartPingSystem_C* SmartPingComponent; // 0x3f8
	UMaterialInstanceDynamic* RadialMenuMaterial; // 0x400
	int32_t SelectedIndex; // 0x408
	int32_t StartIndex; // 0x40c
	float AngleSize; // 0x410
	float DistanceFromCenter; // 0x414
	int32_t Divisions; // 0x418
	float SelectionToleranceFromCenter; // 0x41c
	FMulticastInlineDelegate Hovered; // 0x420
	FMulticastInlineDelegate ClearPing; // 0x430
	bool IsPingType; // 0x440
	bool Enable RequestMessage; // 0x441
};

struct UBTDecorator_Loop : UBTDecorator {
	int32_t NumLoops; // 0x68
	bool bInfiniteLoop; // 0x6c
	float InfiniteLoopTimeoutTime; // 0x70
};

struct UEnvQueryGenerator_BlueprintBase : UEnvQueryGenerator {
	FText GeneratorsActionDescription; // 0x50
	UEnvQueryContext* Context; // 0x68
	UEnvQueryItemType* GeneratedItemType; // 0x70
};

struct UDatasmithCommonTessellationOptions : UDatasmithOptionsBase {
	FDatasmithTessellationOptions options; // 0x28
};

struct UBravoHotelSettingSlotWidget : UBravoHotelSettingBaseWidget {
	UBravoHotelSettingSubWidget* ParentWidget; // 0x298
	FName ActionName; // 0x2a0
	FName AxisActionName; // 0x2a8
	float AxisScale; // 0x2b0
	FSettingInfo SettingData; // 0x2b8
	FDataTableRowHandle SettingType; // 0x340
	float CurValue; // 0x350
	float OrgValue; // 0x354
	FInputActionKeyMapping OrgKeyInfo; // 0x358
	FInputActionKeyMapping CurKeyInfo; // 0x380
	FInputActionKeyMapping SubOrgKeyInfo; // 0x3a8
	FInputActionKeyMapping SubCurKeyInfo; // 0x3d0
	FInputAxisKeyMapping OrgAxisKeyInfo; // 0x3f8
	FInputAxisKeyMapping CurAxisKeyInfo; // 0x428
	FInputAxisKeyMapping SubOrgAxisKeyInfo; // 0x458
	FInputAxisKeyMapping SubCurAxisKeyInfo; // 0x488
	UBravoHotelSettingWidget* SettingWidget; // 0x4b8
	int32_t EnableKeyInputState; // 0x4c0
	FMulticastInlineDelegate DelegateKeyChangedNotiMessage; // 0x4c8
	FMulticastInlineDelegate DelegateChangeInput; // 0x4d8
};

struct UUW-VoiceTalk_C : UBravoHotelVoiceTalkWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image; // 0x250
	UScrollBox* ScrollBox_99; // 0x258
	UUW-VoiceTalkSlot_C* UW-VoiceTalkSlot; // 0x260
	UUW-VoiceTalkSlot_C* UW-VoiceTalkSlot_135; // 0x268
	UUW-VoiceTalkSlot_C* UW-VoiceTalkSlot_196; // 0x270
	TArray<ABravoHotelPlayerState*> TempTeamPlayers; // 0x278
};

struct UBlueprint : UBlueprintCore {
	UObject* ParentClass; // 0x50
	EBlueprintType BlueprintType; // 0x58
	char bRecompileOnLoad : 1; // 0x59
	char bHasBeenRegenerated : 1; // 0x59
	char bIsRegeneratingOnLoad : 1; // 0x59
	int32_t BlueprintSystemVersion; // 0x5c
	USimpleConstructionScript* SimpleConstructionScript; // 0x60
	TArray<UActorComponent*> ComponentTemplates; // 0x68
	TArray<UTimelineTemplate*> Timelines; // 0x78
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x88
	UInheritableComponentHandler* InheritableComponentHandler; // 0x98
};

struct UDistributionVectorConstantCurve : UDistributionVector {
	FInterpCurveVector ConstantCurve; // 0x38
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
};

struct UVariantSet : UObject {
	FText DisplayText; // 0x28
	bool bExpanded; // 0x58
	TArray<UVariant*> Variants; // 0x60
};

struct UMaterialExpressionRuntimeVirtualTextureSample : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
	FExpressionInput WorldPosition; // 0x54
	FExpressionInput MipValue; // 0x68
	URuntimeVirtualTexture* VirtualTexture; // 0x80
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x88
	bool bSinglePhysicalSpace; // 0x89
	ERuntimeVirtualTextureMipValueMode MipValueMode; // 0x8a
};

struct UStateMachineABP : UAnimInstance {
	UStateMachineComponent* FSM; // 0x268
	bool OverrideFSM; // 0x270
	FName TargetFSM; // 0x274
	FName TargetASM; // 0x27c
};

struct UChat_DialogBox_C : UUserWidget {
	UScrollBox* Chat Scrollbox; // 0x248
	FString Group; // 0x250
};

struct USimplygonOpacityCaster : USimplygonMaterialCaster {
	FOpacityCasterSettings OpacityCasterSettings; // 0x28
};

struct UMovieScene3DAttachSection : UMovieScene3DConstraintSection {
	FName AttachSocketName; // 0x108
	FName AttachComponentName; // 0x110
	EAttachmentRule AttachmentLocationRule; // 0x118
	EAttachmentRule AttachmentRotationRule; // 0x119
	EAttachmentRule AttachmentScaleRule; // 0x11a
	EDetachmentRule DetachmentLocationRule; // 0x11b
	EDetachmentRule DetachmentRotationRule; // 0x11c
	EDetachmentRule DetachmentScaleRule; // 0x11d
};

struct UGizmoBaseComponent : UPrimitiveComponent {
	FLinearColor Color; // 0x4b0
	float HoverSizeMultiplier; // 0x4c0
	float PixelHitDistanceThreshold; // 0x4c4
};

struct ULowEntryByteDataEntry : UObject {
	char Type; // 0x28
	char ByteValue; // 0x29
	int32_t IntegerValue; // 0x2c
	ULowEntryLong* LongBytesValue; // 0x30
	float FloatValue; // 0x38
	ULowEntryDouble* DoubleBytesValue; // 0x40
	bool BooleanValue; // 0x48
	FString StringUtf8Value; // 0x50
	TArray<char> ByteArrayValue; // 0x60
	TArray<int32_t> IntegerArrayValue; // 0x70
	TArray<ULowEntryLong*> LongBytesArrayValue; // 0x80
	TArray<float> FloatArrayValue; // 0x90
	TArray<ULowEntryDouble*> DoubleBytesArrayValue; // 0xa0
	TArray<bool> BooleanArrayValue; // 0xb0
	TArray<FString> StringUtf8ArrayValue; // 0xc0
};

struct USkeleton : UObject {
	TArray<UBlendProfile*> BlendProfiles; // 0x40
	TArray<FTransform> RefLocalPoses; // 0x240
	TArray<FVirtualBone> VirtualBones; // 0x250
	TArray<FBoneNode> BoneTree; // 0x260
	TArray<UAssetUserData*> AssetUserData; // 0x270
	TArray<FAnimSlotGroup> SlotGroups; // 0x280
	FGuid VirtualBoneGuid; // 0x2a8
	TArray<USkeletalMeshSocket*> Sockets; // 0x2b8
	FSmartNameContainer SmartNames; // 0x318
};

struct UBravoHotelAnimNotifyState_TimedParticle : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	UParticleSystem* PSTemplate_OnlyOtherPlayerSee; // 0x38
	FName SocketName; // 0x40
	FVector LocationOffset; // 0x48
	FRotator RotationOffset; // 0x54
	FVector Scale3D; // 0x60
	bool bDestroyAtEnd; // 0x6c
};

struct UFindSessionsCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UFloatingPawnMovement : UPawnMovementComponent {
	float MaxSpeed; // 0x138
	float Acceleration; // 0x13c
	float Deceleration; // 0x140
	float TurningBoost; // 0x144
	char bPositionCorrected : 1; // 0x148
};

struct UHUD_Widget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UChat_MainWidget_C* ChatWidget; // 0x250
	AChat_System_C* Chat System; // 0x258
};

struct UBlendSpace : UBlendSpaceBase {
	EBlendSpaceAxis AxisToScaleAnimation; // 0x150
};

struct UParticleModuleAcceleration : UParticleModuleAccelerationBase {
	FRawDistributionVector Acceleration; // 0x38
	char bApplyOwnerScale : 1; // 0x80
};

struct UMaterialExpressionSphereMask : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Radius; // 0x68
	FExpressionInput Hardness; // 0x7c
	float AttenuationRadius; // 0x90
	float HardnessPercent; // 0x94
};

struct UMeshComponent : UPrimitiveComponent {
	float MipStreamingScale; // 0x4b0
	TArray<UMaterialInterface*> OverrideMaterials; // 0x4b8
	char bEnableMaterialParameterCaching : 1; // 0x4d8
};

struct AOnlineBeaconClient : AOnlineBeacon {
	AOnlineBeaconHostObject* BeaconOwner; // 0x358
	UNetConnection* BeaconConnection; // 0x360
	EBeaconConnectionState ConnectionState; // 0x368
};

struct UUW_ReplayUserNameTooltip_C : UBravoHotelItemUseWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x268
	UButton* BT_UserName; // 0x270
	UCanvasPanel* CP_Main; // 0x278
	UHorizontalBox* HB_ItemInfo; // 0x280
	UImage* Image_264; // 0x288
	UImage* Image_265; // 0x290
	UImage* Image_1163; // 0x298
	UImage* IMG_Frontbar; // 0x2a0
	UImage* IMG_Item; // 0x2a8
	UImage* Img_TeamColor; // 0x2b0
	UProgressBar* PB_HP; // 0x2b8
	UProgressBar* PB_ItemCasting; // 0x2c0
	UProgressBar* PB_Message; // 0x2c8
	USizeBox* SizeBox_Message; // 0x2d0
	UWidgetSwitcher* Switcher_Casting; // 0x2d8
	UTextBlock* T_Class; // 0x2e0
	UTextBlock* T_ExpertWeapon; // 0x2e8
	UTextBlock* T_Item; // 0x2f0
	UTextBlock* T_Level; // 0x2f8
	UTextBlock* T_Message; // 0x300
	UTextBlock* T_Quantity; // 0x308
	UTextBlock* T_TeamNum; // 0x310
	UTextBlock* T_UserName; // 0x318
	UTextBlock* T_UserName_2; // 0x320
	ABravoHotelPlayerState* PlayerState; // 0x328
	APlayerController* ReplayController; // 0x330
	ABravoHotelCharacter* TargetCharacter; // 0x338
	FVector2D MaxViewportSize; // 0x340
	FVector2D LocalScreenPosition; // 0x348
	bool IsPositionUpdated; // 0x350
	float DefaultCharacterZLocation; // 0x354
	APawn* TargetPawn; // 0x358
};

struct UAIDataProvider_Random : UAIDataProvider_QueryParams {
	float Min; // 0x40
	float MAX; // 0x44
	char bInteger : 1; // 0x48
};

struct UBravoHotelAnimNotify_Voice : UAnimNotify {
	FName SoundIdx; // 0x38
};

struct UUW-CastingWidget_C : UBravoHotelItemUseWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x268
	UWidgetAnimation* Flicker; // 0x270
	UImage* BaseGuage; // 0x278
	UImage* Guage; // 0x280
	UHorizontalBox* HB_CancelMessage; // 0x288
	UImage* Image_921; // 0x290
	UTextBlock* Percent; // 0x298
	UProgressBar* ProgressBar_Item; // 0x2a0
	URichTextBlock* RichT_Message; // 0x2a8
	UTextBlock* TextBlock_1; // 0x2b0
	UTextBlock* TextBlock_Time; // 0x2b8
	UTextBlock* UseMessage; // 0x2c0
	UVerticalBox* VerticalBox_2; // 0x2c8
	float PercentValue; // 0x2d0
	bool KnockState; // 0x2d4
	float HideTimer; // 0x2d8
	FProgressBarStyle ProgressStyle; // 0x2e0
	bool IsShowRevive; // 0x480
	FCastingInfo CastingInfo; // 0x488
	float CurrentTime; // 0x4a0
	int32_t KeyFontSize; // 0x4a4
	float KeySizeScale; // 0x4a8
	int32_t CurrentLanguage; // 0x4ac
};

struct UUW-WorldMapWidget_C : UBravoHotelWorldMapWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b8
	UWidgetAnimation* FadeIn; // 0x2c0
	UWidgetAnimation* NewAnimation_2; // 0x2c8
	UImage* Bg; // 0x2d0
	UBP-CheckWeightMap_C* BP-CheckWeightMap; // 0x2d8
	UUW-MapComp_C* BP-MapComp; // 0x2e0
	UButton* CloseButton; // 0x2e8
	UButton* ShowHelBoxButton; // 0x2f0
	UUW-ClassinfoitemBoardWidget_C* UW-ClassinfoitemBoardWidget; // 0x2f8
	UWidgetSwitcher* WidgetSwitcher_1; // 0x300
	int32_t MAX_ZOOM_LEVEL; // 0x308
	int32_t ZoomLevel; // 0x30c
	float MAX_SCALE_FACTOR; // 0x310
	int32_t InitializeCount; // 0x314
	FVector2D PosOnViewport; // 0x318
	float CurrentScaleFactor; // 0x320
	FVector2D MouseButtonDownPos; // 0x324
	FTimerHandle SelectPingMenuTimer; // 0x330
	UWBP_SPS_SelectionMenu_C* SelectionMenu; // 0x338
	bool IsRoutePing; // 0x340
	int32_t MaxRoutePointCount; // 0x344
	TArray<FVector> RoutePointArray; // 0x348
};

struct UNiagaraLightRendererProperties : UNiagaraRendererProperties {
	char bUseInverseSquaredFalloff : 1; // 0x50
	char bAffectsTranslucency : 1; // 0x50
	char bOverrideRenderingEnabled : 1; // 0x50
	float RadiusScale; // 0x54
	FVector ColorAdd; // 0x58
	FNiagaraVariableAttributeBinding LightRenderingEnabledBinding; // 0x68
	FNiagaraVariableAttributeBinding LightExponentBinding; // 0xe0
	FNiagaraVariableAttributeBinding PositionBinding; // 0x158
	FNiagaraVariableAttributeBinding ColorBinding; // 0x1d0
	FNiagaraVariableAttributeBinding RadiusBinding; // 0x248
	FNiagaraVariableAttributeBinding VolumetricScatteringBinding; // 0x2c0
};

struct UPlatformInterfaceBase : UObject {
	TArray<FDelegateArray> AllDelegates; // 0x28
};

struct UPlatformEventsComponent : UActorComponent {
	FMulticastInlineDelegate PlatformChangedToLaptopModeDelegate; // 0xb0
	FMulticastInlineDelegate PlatformChangedToTabletModeDelegate; // 0xc0
};

struct UInterpTrackFloatBase : UInterpTrack {
	FInterpCurveFloat FloatTrack; // 0x70
	float CurveTension; // 0x88
};

struct UNiagaraEventReceiverEmitterAction_SpawnParticles : UNiagaraEventReceiverEmitterAction {
	uint32_t NumParticles; // 0x28
};

struct UBravoHotelAttackUserWidget : UUserWidget {
	UWidgetAnimation* Enemy_Lv_Motion_FadeIn; // 0x248
	UWidgetAnimation* Enemy_Lv_Motion_FadeOut; // 0x250
	FTimerHandle TimerHandle_EventRemoveWidget; // 0x258
	ABravoHotelCharacter* PawnRef; // 0x260
	UOverlay* Enemy_Name; // 0x268
	UTextBlock* TextBlock_Level; // 0x270
	UTextBlock* TextBlock_Level2; // 0x278
	UTextBlock* TextBlock_Name; // 0x280
	UTextBlock* TextBlock_Name2; // 0x288
	UImage* Image_Icon; // 0x290
	UImage* Image_Icon2; // 0x298
};

struct UCameraModifier_CameraShake : UCameraModifier {
	TArray<FActiveCameraShakeInfo> ActiveShakes; // 0x48
	TMap<UCameraShake*, FPooledCameraShakes> ExpiredPooledShakesMap; // 0x58
	float SplitScreenShakeScale; // 0xa8
};

struct ABravoHotelVehicleSpawnActor : AActor {
	float CheckVehicleSpawnDistance; // 0x328
	FName VehicleAreaSpawnRateTableKey; // 0x32c
};

struct UBravoHotelAnimNotifyState_BreakDestructable : UAnimNotifyState {
	float UpdateFrequency; // 0x30
	FName CheckBoneName; // 0x34
	float TraceRadius; // 0x3c
};

struct UBTDecorator_KeepInCone : UBTDecorator {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector Observed; // 0x98
	char bUseSelfAsOrigin : 1; // 0xc0
	char bUseSelfAsObserved : 1; // 0xc0
};

struct UUW-Inventory_Recipe_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Character_BG_Motion; // 0x250
	UImage* Image_308; // 0x258
	UScrollBox* ScrollBox_KeepedList; // 0x260
	USizeBox* SizeBox_KeepedList; // 0x268
	ABP-BravoHotel-PlayerController_C* PlayerController; // 0x270
	float SlotMaxHeight; // 0x278
};

struct UPhysicsHandleComponent : UActorComponent {
	UPrimitiveComponent* GrabbedComponent; // 0xb0
	char bSoftAngularConstraint : 1; // 0xc0
	char bSoftLinearConstraint : 1; // 0xc0
	char bInterpolateTarget : 1; // 0xc0
	float LinearDamping; // 0xc4
	float LinearStiffness; // 0xc8
	float AngularDamping; // 0xcc
	float AngularStiffness; // 0xd0
	float InterpolationSpeed; // 0x140
};

struct USoundNodeBranch : USoundNode {
	FName BoolParameterName; // 0x48
};

struct UBlackboardKeyType_NativeEnum : UBlackboardKeyType {
	FString EnumName; // 0x30
	UEnum* EnumType; // 0x40
};

struct UAkMediaAsset : UObject {
	uint32_t ID; // 0x28
	bool AutoLoad; // 0x2c
	TArray<UObject*> UserData; // 0x30
	UAkMediaAssetData* CurrentMediaAssetData; // 0x40
};

struct UUdpMessagingSettings : UObject {
	bool EnableTransport; // 0x28
	bool bAutoRepair; // 0x29
	bool bStopServiceWhenAppDeactivates; // 0x2a
	FString UnicastEndpoint; // 0x30
	FString MulticastEndpoint; // 0x40
	EUdpMessageFormat MessageFormat; // 0x50
	char MulticastTimeToLive; // 0x51
	TArray<FString> StaticEndpoints; // 0x58
	bool EnableTunnel; // 0x68
	FString TunnelUnicastEndpoint; // 0x70
	FString TunnelMulticastEndpoint; // 0x80
	TArray<FString> RemoteTunnelEndpoints; // 0x90
};

struct UAxisPositionGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoFloatParameterSource> ParameterSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bEnableSignedAxis; // 0x88
	bool bInInteraction; // 0x89
	FVector InteractionOrigin; // 0x8c
	FVector InteractionAxis; // 0x98
	FVector InteractionStartPoint; // 0xa4
	FVector InteractionCurPoint; // 0xb0
	float InteractionStartParameter; // 0xbc
	float InteractionCurParameter; // 0xc0
	float ParameterSign; // 0xc4
};

struct UMaterialExpressionArctangent : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UUW-ItemRecipeTree_C : UBravoHotelItemRecipeTreeWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x258
	UHorizontalBox* HorizontalBox_11; // 0x260
	UHorizontalBox* HorizontalBox_12; // 0x268
	UHorizontalBox* HorizontalBox_13; // 0x270
	UHorizontalBox* HorizontalBox_14; // 0x278
	UHorizontalBox* HorizontalBox_15; // 0x280
	UHorizontalBox* HorizontalBox_16; // 0x288
	UHorizontalBox* HorizontalBox_00; // 0x290
	UHorizontalBox* HorizontalBox_02; // 0x298
	UHorizontalBox* HorizontalBox_03; // 0x2a0
	UHorizontalBox* HorizontalBox_04; // 0x2a8
	UHorizontalBox* HorizontalBox_05; // 0x2b0
	UHorizontalBox* HorizontalBox_06; // 0x2b8
	UHorizontalBox* HorizontalBox_07; // 0x2c0
	UHorizontalBox* HorizontalBox_08; // 0x2c8
	UHorizontalBox* HorizontalBox_09; // 0x2d0
	UVerticalBox* Line00; // 0x2d8
	UHorizontalBox* Line01; // 0x2e0
	UVerticalBox* Line02; // 0x2e8
	UVerticalBox* Line03; // 0x2f0
	UVerticalBox* Line04; // 0x2f8
	UVerticalBox* Line05; // 0x300
	UVerticalBox* Line06; // 0x308
	UVerticalBox* Line07; // 0x310
	UVerticalBox* Line08; // 0x318
	UVerticalBox* Line09; // 0x320
	UVerticalBox* Line10; // 0x328
	UVerticalBox* Line11; // 0x330
	UVerticalBox* Line12; // 0x338
	UVerticalBox* Line13; // 0x340
	UVerticalBox* Line14; // 0x348
	UVerticalBox* Line15; // 0x350
	UOverlay* Overlay_Main; // 0x358
	UUW-ItemRecipeTreeSlot_C* Slot00; // 0x360
	UUW-ItemRecipeTreeSlot_C* Slot01; // 0x368
	UUW-ItemRecipeTreeSlot_C* Slot02; // 0x370
	UUW-ItemRecipeTreeSlot_C* Slot03; // 0x378
	UUW-ItemRecipeTreeSlot_C* Slot04; // 0x380
	UUW-ItemRecipeTreeSlot_C* Slot05; // 0x388
	UUW-ItemRecipeTreeSlot_C* Slot06; // 0x390
	UUW-ItemRecipeTreeSlot_C* Slot07; // 0x398
	UUW-ItemRecipeTreeSlot_C* Slot08; // 0x3a0
	UUW-ItemRecipeTreeSlot_C* Slot09; // 0x3a8
	UUW-ItemRecipeTreeSlot_C* Slot10; // 0x3b0
	UUW-ItemRecipeTreeSlot_C* Slot11; // 0x3b8
	UUW-ItemRecipeTreeSlot_C* Slot12; // 0x3c0
	UUW-ItemRecipeTreeSlot_C* Slot13; // 0x3c8
	UUW-ItemRecipeTreeSlot_C* Slot14; // 0x3d0
	UUW-ItemRecipeTreeSlot_C* Slot15; // 0x3d8
	UUW-ItemRecipeTreeSlot_C* Slot16; // 0x3e0
	UUW-ItemRecipeTreeSlot_C* Slot17; // 0x3e8
	UUW-ItemRecipeTreeSlot_C* Slot18; // 0x3f0
	UUW-ItemRecipeTreeSlot_C* Slot19; // 0x3f8
	UUW-ItemRecipeTreeSlot_C* Slot20; // 0x400
	UUW-ItemRecipeTreeSlot_C* Slot21; // 0x408
	UUW-ItemRecipeTreeSlot_C* Slot22; // 0x410
	UUW-ItemRecipeTreeSlot_C* Slot23; // 0x418
	UUW-ItemRecipeTreeSlot_C* Slot24; // 0x420
	UUW-ItemRecipeTreeSlot_C* Slot25; // 0x428
	UUW-ItemRecipeTreeSlot_C* Slot26; // 0x430
	UUW-ItemRecipeTreeSlot_C* Slot27; // 0x438
	UUW-ItemRecipeTreeSlot_C* Slot28; // 0x440
	UUW-ItemRecipeTreeSlot_C* Slot29; // 0x448
	UUW-ItemRecipeTreeSlot_C* Slot30; // 0x450
	UUW-ItemRecipeTreeSlot_C* Slot31; // 0x458
	UVerticalBox* VerticalBox_2438; // 0x460
	UUW-Inventory_ItemSlotHover_C* HoverWidget; // 0x468
	FName HaveItemKey; // 0x470
	FName TargetItemKey; // 0x478
	bool IsSearchExpertWeapon; // 0x480
};

struct UMaterialBillboardComponent : UPrimitiveComponent {
	TArray<FMaterialSpriteElement> Elements; // 0x4b0
};

struct UMovieSceneMaterialParameterCollectionTrack : UMovieSceneMaterialTrack {
	UMaterialParameterCollection* MPC; // 0x68
};

struct UMovieScene3DTransformSection : UMovieSceneSection {
	FMovieSceneTransformMask TransformMask; // 0xe0
	FMovieSceneFloatChannel Translation[0x3]; // 0xe8
	FMovieSceneFloatChannel Rotation[0x3]; // 0x2c8
	FMovieSceneFloatChannel Scale[0x3]; // 0x4a8
	FMovieSceneFloatChannel ManualWeight; // 0x688
	bool bUseQuaternionInterpolation; // 0x72c
};

struct UShaderPlatformQualitySettings : UObject {
	FMaterialQualityOverrides QualityOverrides[0x3]; // 0x28
};

struct UDistributionVectorParameterBase : UDistributionVectorConstant {
	FName ParameterName; // 0x50
	FVector MinInput; // 0x58
	FVector MaxInput; // 0x64
	FVector MinOutput; // 0x70
	FVector MaxOutput; // 0x7c
	DistributionParamMode ParamModes[0x3]; // 0x88
};

struct UMaterialExpressionArcsine : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UUW-GameBuffSlot_Boost_C : UBravoHotelGameBuffSlot {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
	UWidgetAnimation* Anim_Boost_Off; // 0x300
	UWidgetAnimation* Anim_Boost_On; // 0x308
	UCanvasPanel* CanvasPanel_BoostInfo; // 0x310
	UImage* Image_Active; // 0x318
	UImage* IMG_CoolTime; // 0x320
	UTextBlock* T_CoolTime; // 0x328
	UMaterialInstanceDynamic* MI_CoolTimeDynamicInstance; // 0x330
	UMaterialInstanceDynamic* MI_BuffActive; // 0x338
	float BoostOffAnimTime; // 0x340
	bool IsActive; // 0x344
	FBuffData BoostBuffInfo; // 0x348
};

struct UBHBCamouflage : UBravoHotelBuffBase {
	FString BuffMutableString; // 0x2b8
};

struct UAkSwitchInitializationSettings : UObject {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithCommSelection CommunicationSettings; // 0x90
	FAkAdvancedInitializationSettingsWithMultiCoreRendering AdvancedSettings; // 0xb8
};

struct UGridSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
	int32_t Row; // 0x4c
	int32_t RowSpan; // 0x50
	int32_t Column; // 0x54
	int32_t ColumnSpan; // 0x58
	int32_t Layer; // 0x5c
	FVector2D Nudge; // 0x60
};

struct UInteractiveToolManager : UObject {
	UInteractiveTool* ActiveLeftTool; // 0x30
	UInteractiveTool* ActiveRightTool; // 0x38
	TMap<FString, UInteractiveToolBuilder*> ToolBuilders; // 0x90
};

struct UDistributionFloatConstant : UDistributionFloat {
	float Constant; // 0x38
};

struct UBravoHotelVehicleSeatCollisionComponent : UCapsuleComponent {
	int32_t SeatNum; // 0x4d0
};

struct UBTTask_Wait : UBTTaskNode {
	float WaitTime; // 0x70
	float RandomDeviation; // 0x74
};

struct UReductionPipeline : USimplygonPipeline {
	FReductionPipelineSettings Settings; // 0x28
};

struct UOculusSceneCaptureCubemap : UObject {
	TArray<USceneCaptureComponent2D*> CaptureComponents; // 0x38
};

struct UTextureLightProfile : UTexture2D {
	float Brightness; // 0xe8
	float TextureMultiplier; // 0xec
};

struct UMovieSceneMediaSection : UMovieSceneSection {
	UMediaSource* MediaSource; // 0xe0
	bool bLooping; // 0xe8
	FFrameNumber StartFrameOffset; // 0xec
	UMediaTexture* MediaTexture; // 0xf0
	UMediaSoundComponent* MediaSoundComponent; // 0xf8
	bool bUseExternalMediaPlayer; // 0x100
	UMediaPlayer* ExternalMediaPlayer; // 0x108
};

struct UEnvQueryGenerator_OnCircle : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue CircleRadius; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb8
	FAIDataProviderIntValue NumberOfPoints; // 0xf0
	EPointOnCircleSpacingMethod PointOnCircleSpacingMethod; // 0x128
	FEnvDirection ArcDirection; // 0x130
	FAIDataProviderFloatValue ArcAngle; // 0x150
	float AngleRadians; // 0x188
	UEnvQueryContext* CircleCenter; // 0x190
	bool bIgnoreAnyContextActorsWhenGeneratingCircle; // 0x198
	FAIDataProviderFloatValue CircleCenterZOffset; // 0x1a0
	FEnvTraceData TraceData; // 0x1d8
	char bDefineArc : 1; // 0x208
};

struct UInterpTrack : UObject {
	TArray<UInterpTrack*> SubTracks; // 0x38
	UInterpTrackInst* TrackInstClass; // 0x48
	ETrackActiveCondition ActiveCondition; // 0x50
	FString TrackTitle; // 0x58
	char bOnePerGroup : 1; // 0x68
	char bDirGroupOnly : 1; // 0x68
	char bDisableTrack : 1; // 0x68
	char bIsSelected : 1; // 0x68
	char bIsAnimControlTrack : 1; // 0x68
	char bSubTrackOnly : 1; // 0x68
	char bVisible : 1; // 0x68
	char bIsRecording : 1; // 0x68
};

struct UInterpTrackColorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0x90
};

struct UCoherentUIGTSettings : UObject {
	bool EnableLiveReload; // 0x28
	int32_t InspectorPort; // 0x2c
	int32_t WebdriverPort; // 0x30
	bool EnableWebSecurity; // 0x34
	bool EnableLocalization; // 0x35
	bool RunAsynchronous; // 0x36
	bool AllowPerformanceWarningsInEditor; // 0x37
	bool ShowWarningsOnScreen; // 0x38
	ECoherentUIGTSettingsSeverity LogSeverity; // 0x39
	bool bPaintToBackBuffer; // 0x3a
	bool bRespectTitleSafeZone; // 0x3b
	bool bRespectLetterboxing; // 0x3c
	FString HUDMaterialName; // 0x40
	FString CoUIResourcesRoot; // 0x50
	bool TickWhileGameIsPaused; // 0x60
	bool bUseLowerCaseNamesForAutoExposedProperties; // 0x61
	ECoherentUIGTMSAA MSAA; // 0x62
	FString CookiesResource; // 0x68
	FString LocalStorageFolder; // 0x78
	bool UseCacheFile; // 0x88
	bool UseReceivedFromServerUrl; // 0x89
};

struct UInGameAdManager : UPlatformInterfaceBase {
	char bShouldPauseWhileAdOpen : 1; // 0x38
	TArray<FDelegate> ClickedBannerDelegates; // 0x40
	TArray<FDelegate> ClosedAdDelegates; // 0x50
};

struct UBTDecorator_DoesPathExist : UBTDecorator {
	FBlackboardKeySelector BlackboardKeyA; // 0x68
	FBlackboardKeySelector BlackboardKeyB; // 0x90
	char bUseSelf : 1; // 0xb8
	EPathExistanceQueryType PathQueryType; // 0xbc
	UNavigationQueryFilter* FilterClass; // 0xc0
};

struct UNiagaraDataInterfaceSpline : UNiagaraDataInterface {
	AActor* Source; // 0x30
};

struct UGeometryCacheTrack : UObject {
	float Duration; // 0x28
};

struct URadialVector : UFieldNodeVector {
	float Magnitude; // 0xb0
	FVector Position; // 0xb4
};

struct UAnimCompress_RemoveEverySecondKey : UAnimCompress {
	int32_t MinKeys; // 0x40
	char bStartAtSecondKey : 1; // 0x44
};

struct UInstancedCollisionComponent : UActorComponent {
	TArray<UStaticMeshComponent*> StaticMeshComponents; // 0xb0
	UStaticMeshComponent* StaticMeshComponent; // 0xd0
};

struct UAsyncTask_LoadXRDeviceVisComponent : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnModelLoaded; // 0x30
	FMulticastInlineDelegate OnLoadFailure; // 0x40
	UPrimitiveComponent* SpawnedComponent; // 0x58
};

struct UUW-CompassRulerWidget_C : UUserWidget {
	UImage* Image_2; // 0x248
	UInvalidationBox* InvalidationBox_1; // 0x250
	UWidgetSwitcher* Switcher; // 0x258
	float OwnDirection; // 0x260
};

struct UUW-MinimapWidget_C : UBravoHotelMiniMapWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* PlayerIconOnDamagingAnimation; // 0x268
	UWidgetAnimation* ShirinkingAnimation; // 0x270
	UImage* AlertIcon; // 0x278
	UBP-CheckWeightMap_C* BP-CheckWeightMap; // 0x280
	UUW-MapComp_C* BP-MapComp; // 0x288
	UCanvasPanel* CircleInfoGroup; // 0x290
	UCanvasPanel* CP-MapComp; // 0x298
	UProgressBar* CurrentProgressBar; // 0x2a0
	UImage* Image_174; // 0x2a8
	UImage* Image_766; // 0x2b0
	UInvalidationBox* InvalidationBox_2; // 0x2b8
	UCanvasPanel* LulledGroup; // 0x2c0
	UTextBlock* PhaseText; // 0x2c8
	UCanvasPanel* PlayerIconGroup; // 0x2d0
	USizeBox* SB-MapComp; // 0x2d8
	USizeBox* SB_CircleInfo; // 0x2e0
	UCanvasPanel* ShrinkingGroup; // 0x2e8
	UWidgetSwitcher* Switcher; // 0x2f0
	UUW-Inventory_Recipe_C* UW-Inventory_Recipe; // 0x2f8
	UUW-SearchingMaterial_C* UW-SearchingMaterial; // 0x300
	int32_t State; // 0x308
	FVector2D MapSize_Default; // 0x30c
	FVector2D MapSize_Extend; // 0x314
	int32_t InitializeCount; // 0x31c
	bool bExtendMode; // 0x320
	int32_t RecipeCount; // 0x324
	ABravoHotelCharacter* TargetCharacter; // 0x328
};

struct UWB_ClassicToolTipDesign_C : UWB_ToolTipDesign_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x268
	UVerticalBox* ToolTipVerticalList; // 0x270
};

struct UInAppPurchaseCallbackProxy2 : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UAnimStreamable : UAnimSequenceBase {
	int32_t NumFrames; // 0xb0
	EAnimInterpolationType Interpolation; // 0xb4
	FName RetargetSource; // 0xb8
	UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xd0
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd8
	bool bEnableRootMotion; // 0xe0
	ERootMotionRootLock RootMotionRootLock; // 0xe1
	bool bForceRootLock; // 0xe2
	bool bUseNormalizedRootMotionScale; // 0xe3
};

struct UBHBWindowBreaching : UBravoHotelBuffBase {
	FTimerHandle TimerHandle_EndBuff; // 0x2b8
};

struct UTestMovieSceneSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x348
};

struct UReflectionCaptureComponent : USceneComponent {
	UStaticMeshComponent* VisualizationMesh; // 0x230
	UBillboardComponent* CaptureOffsetComponent; // 0x238
	EReflectionSourceType ReflectionSourceType; // 0x240
	UTextureCube* Cubemap; // 0x248
	float SourceCubemapAngle; // 0x250
	float Brightness; // 0x254
	float DiffuseRadiance; // 0x258
	FVector CaptureOffset; // 0x25c
	FGuid MapBuildDataId; // 0x268
};

struct UInterpTrackFloatParticleParam : UInterpTrackFloatBase {
	FName ParamName; // 0x90
};

struct UBTTask_GameplayTaskBase : UBTTaskNode {
	char bWaitForGameplayTask : 1; // 0x70
};

struct UTimecodeProvider : UObject {
	float FrameDelay; // 0x28
};

struct UUW-Inventory_Keeped_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Character_BG_Motion; // 0x250
	UImage* Image_130; // 0x258
	UImage* Image_308; // 0x260
	UScrollBox* ScrollBox_KeepedList; // 0x268
	UUW-Inventory_KeepedSlot_C* UW-Inventory_KeepedSlot; // 0x270
	UUW-Inventory_KeepedSlot_C* UW-Inventory_KeepedSlot_74; // 0x278
	ABP-BravoHotel-PlayerController_C* PlayerController; // 0x280
};

struct USubUVAnimation : UObject {
	UTexture2D* SubUVTexture; // 0x28
	int32_t SubImages_Horizontal; // 0x30
	int32_t SubImages_Vertical; // 0x34
	ESubUVBoundingVertexCount BoundingMode; // 0x38
	EOpacitySourceMode OpacitySourceMode; // 0x39
	float AlphaThreshold; // 0x3c
};

struct UBravoHotelMediaPlayerWidget : UUserWidget {
	FMulticastInlineDelegate DelegateMediaState; // 0x248
};

struct UMKGameInstanceEx : UObject {
	TArray<FMKReplayListItemInfo> ReplayListItemInfos; // 0x28
	FMulticastInlineDelegate OnEnumerateReplayListCompleteEvent; // 0x38
	FMulticastInlineDelegate OnDeleteReplayCompleteEvent; // 0x48
	FMulticastInlineDelegate OnKeepAndDeleteOldetsReplaysCompleteEvent; // 0x58
	FMulticastInlineDelegate OnKeepAndDeleteOldVersionReplaysCompleteEvent; // 0x68
	UGameInstance* SelfGameInstance; // 0x80
	bool bLoadingWidgetVisible; // 0x88
};

struct UMaterialExpressionLinearInterpolate : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput ALPHA; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstAlpha; // 0x84
};

struct UInterpTrackInstFloatMaterialParam : UInterpTrackInst {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<float> ResetFloats; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackFloatMaterialParam* InstancedTrack; // 0x58
};

struct USynth2DSlider : UWidget {
	float ValueX; // 0x108
	float ValueY; // 0x10c
	FDelegate ValueXDelegate; // 0x110
	FDelegate ValueYDelegate; // 0x120
	FSynth2DSliderStyle WidgetStyle; // 0x130
	FLinearColor SliderHandleColor; // 0x3e8
	bool IndentHandle; // 0x3f8
	bool Locked; // 0x3f9
	float StepSize; // 0x3fc
	bool IsFocusable; // 0x400
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x408
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x418
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x428
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x438
	FMulticastInlineDelegate OnValueChangedX; // 0x448
	FMulticastInlineDelegate OnValueChangedY; // 0x458
};

struct UUW-StatupWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_MoveUp_HUD; // 0x250
	UWidgetAnimation* Anim_MoveRight; // 0x258
	UWidgetAnimation* Anim_MoveUp; // 0x260
	UUW-StatupWidget_Item_C* UW-StatupWidget_Item_Attack; // 0x268
	UUW-StatupWidget_Item_C* UW-StatupWidget_Item_Capacity; // 0x270
	UUW-StatupWidget_Item_C* UW-StatupWidget_Item_Damage; // 0x278
	UUW-StatupWidget_Item_C* UW-StatupWidget_Item_Decrement; // 0x280
	UUW-StatupWidget_Item_C* UW-StatupWidget_Item_Health; // 0x288
	UUW-StatupWidget_Item_C* UW-StatupWidget_Item_Speed; // 0x290
	UVerticalBox* VerticalBox_Stats; // 0x298
};

struct UExporter : UObject {
	UObject* SupportedClass; // 0x28
	UObject* ExportRootScope; // 0x30
	TArray<FString> FormatExtension; // 0x38
	TArray<FString> FormatDescription; // 0x48
	int32_t PreferredFormatIndex; // 0x58
	int32_t TextIndent; // 0x5c
	char bText : 1; // 0x60
	char bSelectedOnly : 1; // 0x60
	char bForceFileOperations : 1; // 0x60
	UAssetExportTask* ExportTask; // 0x68
};

struct ULevelSequenceDirector : UObject {
	ULevelSequencePlayer* Player; // 0x28
};

struct UUW-ItemRecipeTreeSlot_C : UUW-Inventory_SlotBase_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1360
	UWidgetAnimation* Complete_ani; // 0x1368
	UWidgetAnimation* Searching_ani; // 0x1370
	UImage* Blank_SkillBG; // 0x1378
	UBorder* Border_507; // 0x1380
	UButton* Button_332; // 0x1388
	UImage* Get_SkillBG; // 0x1390
	UImage* Get_SkillBG_lv5; // 0x1398
	UImage* Get_SkillBG_lv6; // 0x13a0
	UImage* Get_SkillBG_lv7; // 0x13a8
	UHorizontalBox* HorizontalBox_Rarity; // 0x13b0
	UImage* Image; // 0x13b8
	UImage* Image_2; // 0x13c0
	UImage* Image_3; // 0x13c8
	UImage* Image_4; // 0x13d0
	UImage* Image_5; // 0x13d8
	UImage* Image_6; // 0x13e0
	UImage* Image_7; // 0x13e8
	UImage* Image_8; // 0x13f0
	UImage* Image_9; // 0x13f8
	UImage* Image_10; // 0x1400
	UImage* Image_12; // 0x1408
	UImage* Image_16; // 0x1410
	UImage* Image_332; // 0x1418
	UImage* Image_689; // 0x1420
	UImage* Image_690; // 0x1428
	UImage* Image_Full; // 0x1430
	UImage* Image_Have; // 0x1438
	UImage* Img_Active; // 0x1440
	UImage* IMG_Complete; // 0x1448
	UImage* IMG_ItemIcon; // 0x1450
	USizeBox* MouseHover_2; // 0x1458
	USizeBox* MouseHover_; // 0x1460
	USizeBox* MousePress_2; // 0x1468
	USizeBox* MousePress_; // 0x1470
	UImage* MyWeapon; // 0x1478
	UOverlay* Searching; // 0x1480
	USizeBox* Searching_; // 0x1488
	USizeBox* SizeBox_1; // 0x1490
	USizeBox* SizeBox_8; // 0x1498
	UTextBlock* T_PerkName; // 0x14a0
	UTextBlock* T_PerkName_2; // 0x14a8
	UTextBlock* T_PerkName_3; // 0x14b0
	UTextBlock* T_PerkName_4; // 0x14b8
	UVerticalBox* VerticalBox_1; // 0x14c0
	UUW-Inventory_ItemSlotHover_C* HoverWidget; // 0x14c8
	bool Selected; // 0x14d0
	FSelecteSearchMaterialItemInfo SelectItem; // 0x14d4
	UMaterialInstanceDynamic* NewVar_1; // 0x14e8
	bool EnableSearch; // 0x14f0
	FSelecteSearchMaterialItemInfo TempData; // 0x14f4
	bool IsComplete; // 0x1504
};

struct UParticleModuleTrailSource : UParticleModuleTrailBase {
	ETrail2SourceMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	FRawDistributionFloat SourceStrength; // 0x40
	char bLockSourceStength : 1; // 0x70
	int32_t SourceOffsetCount; // 0x74
	TArray<FVector> SourceOffsetDefaults; // 0x78
	EParticleSourceSelectionMethod SelectionMethod; // 0x88
	char bInheritRotation : 1; // 0x8c
};

struct AEQSTestingPawn : ACharacter {
	UEnvQuery* QueryTemplate; // 0x5f0
	TArray<FEnvNamedValue> QueryParams; // 0x5f8
	TArray<FAIDynamicParam> QueryConfig; // 0x608
	float TimeLimitPerStep; // 0x618
	int32_t StepToDebugDraw; // 0x61c
	EEnvQueryHightlightMode HighlightMode; // 0x620
	char bDrawLabels : 1; // 0x624
	char bDrawFailedItems : 1; // 0x624
	char bReRunQueryOnlyOnFinishedMove : 1; // 0x624
	char bShouldBeVisibleInGame : 1; // 0x624
	char bTickDuringGame : 1; // 0x624
	EEnvQueryRunMode QueryingMode; // 0x628
	FNavAgentProperties NavAgentProperties; // 0x630
};

struct UTemp_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_66; // 0x250
	UImage* Image_113; // 0x258
	UImage* Image_181; // 0x260
	UImage* Image_246; // 0x268
	UImage* Image_312; // 0x270
	UImage* Image_314; // 0x278
	UImage* Image_315; // 0x280
	UImage* Image_316; // 0x288
	UImage* Image_317; // 0x290
	UImage* Image_318; // 0x298
	UImage* Image_319; // 0x2a0
};

struct UInterpTrackFade : UInterpTrackFloatBase {
	char bPersistFade : 1; // 0x90
	char bFadeAudio : 1; // 0x90
	FLinearColor FadeColor; // 0x94
};

struct AMatineeActor : AActor {
	UInterpData* MatineeData; // 0x328
	FName MatineeControllerName; // 0x330
	float PlayRate; // 0x338
	char bPlayOnLevelLoad : 1; // 0x33c
	char bForceStartPos : 1; // 0x33c
	float ForceStartPosition; // 0x340
	char bLooping : 1; // 0x344
	char bRewindOnPlay : 1; // 0x344
	char bNoResetOnRewind : 1; // 0x344
	char bRewindIfAlreadyPlaying : 1; // 0x344
	char bDisableRadioFilter : 1; // 0x344
	char bClientSideOnly : 1; // 0x344
	char bSkipUpdateIfNotVisible : 1; // 0x344
	char bIsSkippable : 1; // 0x344
	int32_t PreferredSplitScreenNum; // 0x348
	char bDisableMovementInput : 1; // 0x34c
	char bDisableLookAtInput : 1; // 0x34c
	char bHidePlayer : 1; // 0x34c
	char bHideHud : 1; // 0x34c
	TArray<FInterpGroupActorInfo> GroupActorInfos; // 0x350
	char bShouldShowGore : 1; // 0x360
	TArray<UInterpGroupInst*> GroupInst; // 0x368
	TArray<FCameraCutInfo> CameraCuts; // 0x378
	char bIsPlaying : 1; // 0x388
	char bReversePlayback : 1; // 0x388
	char bPaused : 1; // 0x388
	char bPendingStop : 1; // 0x388
	float InterpPosition; // 0x38c
	char ReplicationForceIsPlaying; // 0x394
	FMulticastInlineDelegate OnPlay; // 0x398
	FMulticastInlineDelegate OnStop; // 0x3a8
	FMulticastInlineDelegate OnPause; // 0x3b8
};

struct ABravoHotelMoveElevator : AActor {
	EMoveElevatorStateType CurrentStateType; // 0x330
	float CurrentMovingTime; // 0x334
};

struct UUW-PlayerInfoWidget_Renew_C : UBravoHotelPlayerInfoWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	UWidgetAnimation* Lung_Red; // 0x2c8
	UWidgetAnimation* Weaving_Stand; // 0x2d0
	UWidgetAnimation* Weaving_Sit; // 0x2d8
	UHorizontalBox* HorizontalBox_Backpack_Star; // 0x2e0
	UHorizontalBox* HorizontalBox_Chest_Star; // 0x2e8
	UHorizontalBox* HorizontalBox_Damage; // 0x2f0
	UHorizontalBox* HorizontalBox_Helmet_Star; // 0x2f8
	UHorizontalBox* HorizontalBox_Levels; // 0x300
	UImage* Image_BackPack_Star; // 0x308
	UImage* Image_C4; // 0x310
	UImage* Image_Chest_Star; // 0x318
	UImage* Image_DamageBg; // 0x320
	UImage* Image_FireMode; // 0x328
	UImage* Image_Helmet_Star; // 0x330
	UImage* Image_Time; // 0x338
	UImage* Image_Timer; // 0x340
	UImage* Image_Weapon; // 0x348
	UOverlay* Overlay_Tab; // 0x350
	UProgressBar* ProgressBar_Backpack; // 0x358
	UProgressBar* ProgressBar_Chest; // 0x360
	UProgressBar* ProgressBar_Helmet; // 0x368
	USizeBox* SizeBox_Backpack; // 0x370
	USizeBox* SizeBox_Chest; // 0x378
	USizeBox* SizeBox_Helmet; // 0x380
	UTextBlock* T_C4Time; // 0x388
	UTextBlock* T_Damage; // 0x390
	UTextBlock* T_PerkWeaponAmmo; // 0x398
	UTextBlock* T_SlotIndex; // 0x3a0
	UTextBlock* T_WeaponName; // 0x3a8
	UTextBlock* TextBlock_bulletCount; // 0x3b0
	UTextBlock* TextBlock_bulletMaxCount; // 0x3b8
	UUW-GameBuffSlot_C* UW-GameBuffSlot; // 0x3c0
	UUW-GameBuffSlot_C* UW-GameBuffSlot_2; // 0x3c8
	UUW-GameBuffSlot_C* UW-GameBuffSlot_3; // 0x3d0
	UUW-GameBuffSlot_C* UW-GameBuffSlot_4; // 0x3d8
	UUW-GameBuffSlot_C* UW-GameBuffSlot_5; // 0x3e0
	UUW-GameBuffSlot_C* UW-GameBuffSlot_6; // 0x3e8
	UUW-GameBuffSlot_BoostCover_C* UW-GameBuffSlot_BoostCover; // 0x3f0
	UUW-PlayerInfo_Progress_Renew_C* UW-PlayerInfo_Progress_Renew; // 0x3f8
	UWidgetSwitcher* WidgetSwitcher_Bullet; // 0x400
	UWidgetSwitcher* WidgetSwitcher_C4; // 0x408
	UWidgetSwitcher* WidgetSwitcher_Stance; // 0x410
	UWidgetAnimation* Anim_LastHeadbanging; // 0x418
	FTimerHandle Timer_UpdateInfos; // 0x420
	bool bIsCoolTimeWeapon; // 0x428
	ABravoHotelWeaponBase* CurrentWeapon; // 0x430
	ABravoHotelCharacter* TargetPawnRef; // 0x438
	UMaterialInstanceDynamic* CoolTimeMaterial; // 0x440
	FWeaponWidgetInfo WeaponInfo; // 0x448
	int32_t SlotIndex; // 0x4f0
};

struct UInterpTrackInstFloatParticleParam : UInterpTrackInst {
	float ResetFloat; // 0x28
};

struct UMovieSceneCameraCutTrack : UMovieSceneNameableTrack {
	bool bCanBlend; // 0x58
	TArray<UMovieSceneSection*> Sections; // 0x60
};

struct UReverbEffect : UObject {
	float Density; // 0x28
	float Diffusion; // 0x2c
	float Gain; // 0x30
	float GainHF; // 0x34
	float DecayTime; // 0x38
	float DecayHFRatio; // 0x3c
	float ReflectionsGain; // 0x40
	float ReflectionsDelay; // 0x44
	float LateGain; // 0x48
	float LateDelay; // 0x4c
	float AirAbsorptionGainHF; // 0x50
	float RoomRolloffFactor; // 0x54
};

struct UParticleModuleMeshRotationRateOverLife : UParticleModuleRotationRateBase {
	FRawDistributionVector RotRate; // 0x30
	char bScaleRotRate : 1; // 0x78
};

struct ASphereReflectionCapture : AReflectionCapture {
	UDrawSphereComponent* DrawCaptureRadius; // 0x330
};

struct UCheatManager : UObject {
	ADebugCameraController* DebugCameraControllerRef; // 0x28
	ADebugCameraController* DebugCameraControllerClass; // 0x30
};

struct ULevelStreaming : UObject {
	TSoftObjectPtr<UWorld> WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int32_t LevelLODIndex; // 0xb0
	int32_t StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xc0
	char bShouldBeLoaded : 1; // 0xc0
	char bLocked : 1; // 0xc0
	char bIsStatic : 1; // 0xc0
	char bShouldBlockOnLoad : 1; // 0xc0
	char bShouldBlockOnUnload : 1; // 0xc0
	char bDisableDistanceStreaming : 1; // 0xc0
	char bDrawOnLevelStatusMap : 1; // 0xc0
	FLinearColor LevelColor; // 0xc4
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd8
	float MinTimeBetweenVolumeUnloadRequests; // 0xe8
	FMulticastInlineDelegate OnLevelLoaded; // 0xf0
	FMulticastInlineDelegate OnLevelUnloaded; // 0x100
	FMulticastInlineDelegate OnLevelShown; // 0x110
	FMulticastInlineDelegate OnLevelHidden; // 0x120
	ULevel* LoadedLevel; // 0x130
	ULevel* PendingUnloadLevel; // 0x138
};

struct UProceduralMeshComponent : UMeshComponent {
	bool bUseComplexAsSimpleCollision; // 0x4e8
	bool bUseAsyncCooking; // 0x4e9
	UBodySetup* ProcMeshBodySetup; // 0x4f0
	TArray<FProcMeshSection> ProcMeshSections; // 0x4f8
	TArray<FKConvexElem> CollisionConvexElems; // 0x508
	FBoxSphereBounds LocalBounds; // 0x518
	TArray<UBodySetup*> AsyncBodySetupQueue; // 0x538
};

struct UAISense_Damage : UAISense {
	TArray<FAIDamageEvent> RegisteredEvents; // 0x80
};

struct UMovieSceneFadeSection : UMovieSceneFloatSection {
	FLinearColor FadeColor; // 0x180
	char bFadeAudio : 1; // 0x190
};

struct UUW-ArmoryWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Ellipsis_M; // 0x250
	UCanvasPanel* CanvasPanel_123; // 0x258
	UCanvasPanel* Enhancing; // 0x260
	UImage* Image_305; // 0x268
	UImage* Image_841; // 0x270
	UCanvasPanel* InputEventBox; // 0x278
	UButton* Skip; // 0x280
	UTextBlock* TextBlock_335; // 0x288
	UTextBlock* TextBlock_336; // 0x290
	UTextBlock* TextBlock_337; // 0x298
	UTextBlock* TextBlock_362; // 0x2a0
	UTextBlock* TextEnhanceing; // 0x2a8
	UUW-ArmoryInput_C* UW-ArmoryInput; // 0x2b0
	UUW-ArmoryResultListWidget_C* UW-ArmoryResultListWidget; // 0x2b8
	FTimerHandle EnhanceResultTimerHandle; // 0x2c0
};

struct UBTTask_RotateToFaceBBEntry : UBTTask_BlackboardBase {
	float Precision; // 0x98
};

struct UBravoHotelLocalPlayer : ULocalPlayer {
	int32_t UniquePlayerId; // 0x258
	UBravoHotelKillcamPlayback* KillcamPlayback; // 0x260
};

struct UPawnNoiseEmitterComponent : UActorComponent {
	char bAIPerceptionSystemCompatibilityMode : 1; // 0xb0
	FVector LastRemoteNoisePosition; // 0xb4
	float NoiseLifetime; // 0xc0
	float LastRemoteNoiseVolume; // 0xc4
	float LastRemoteNoiseTime; // 0xc8
	float LastLocalNoiseVolume; // 0xcc
	float LastLocalNoiseTime; // 0xd0
};

struct USoundWave : USoundBase {
	int32_t CompressionQuality; // 0x160
	int32_t StreamingPriority; // 0x164
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x168
	ESoundGroup SoundGroup; // 0x16a
	char bLooping : 1; // 0x16b
	char bStreaming : 1; // 0x16b
	char bSeekableStreaming : 1; // 0x16b
	ESoundWaveLoadingBehavior LoadingBehavior; // 0x16c
	char bMature : 1; // 0x16d
	char bManualWordWrap : 1; // 0x16d
	char bSingleLine : 1; // 0x16d
	char bIsAmbisonics : 1; // 0x16e
	TArray<float> FrequenciesToAnalyze; // 0x170
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x180
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x190
	int32_t InitialChunkSize; // 0x1a0
	FString SpokenText; // 0x1e8
	float SubtitlePriority; // 0x1f8
	float Volume; // 0x1fc
	float Pitch; // 0x200
	int32_t NumChannels; // 0x204
	int32_t SampleRate; // 0x208
	TArray<FSubtitleCue> Subtitles; // 0x218
	UCurveTable* Curves; // 0x228
	UCurveTable* InternalCurves; // 0x230
};

struct UBravoHotelAppAudioStateManager : UObject {
	TMap<EAppAudioState, FString> StateConditionMap; // 0x28
};

struct USplineComponent : UPrimitiveComponent {
	FSplineCurves SplineCurves; // 0x4b0
	FInterpCurveVector SplineInfo; // 0x518
	FInterpCurveQuat SplineRotInfo; // 0x530
	FInterpCurveVector SplineScaleInfo; // 0x548
	FInterpCurveFloat SplineReparamTable; // 0x560
	bool bAllowSplineEditingPerInstance; // 0x578
	int32_t ReparamStepsPerSegment; // 0x57c
	float Duration; // 0x580
	bool bStationaryEndpoints; // 0x584
	bool bSplineHasBeenEdited; // 0x585
	bool bModifiedByConstructionScript; // 0x586
	bool bInputSplinePointsToConstructionScript; // 0x587
	bool bDrawDebug; // 0x588
	bool bClosedLoop; // 0x589
	bool bLoopPositionOverride; // 0x58a
	float LoopPosition; // 0x58c
	FVector DefaultUpVector; // 0x590
};

struct UWidgetNavigation : UObject {
	FWidgetNavigationData Up; // 0x28
	FWidgetNavigationData Down; // 0x4c
	FWidgetNavigationData Left; // 0x70
	FWidgetNavigationData Right; // 0x94
	FWidgetNavigationData Next; // 0xb8
	FWidgetNavigationData Previous; // 0xdc
};

struct UBTDecorator_CheckGameplayTagsOnActor : UBTDecorator {
	FBlackboardKeySelector ActorToCheck; // 0x68
	EGameplayContainerMatchType TagsToMatch; // 0x90
	FGameplayTagContainer GameplayTags; // 0x98
	FString CachedDescription; // 0xb8
};

struct UAchievementQueryCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UUW-Inventory_DragItem_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* BGImage; // 0x250
	UImage* BorderImage; // 0x258
	UImage* DisableImage; // 0x260
	UImage* Image_177; // 0x268
	UTextBlock* ItemCount; // 0x270
	UImage* ItemImage; // 0x278
	UUserWidget* WidgetReference; // 0x280
	bool Lock; // 0x288
	ItemWidgetDragType InventoryDragType; // 0x289
	UUserWidget* ChangeTarget; // 0x290
	ABravoHotelPlayerHUD* PlayerHUDRef; // 0x298
};

struct UUW-ReplayItemList_C : UUserWidget {
	UUW-Inventory_EquippedSlot_C* ArmorSlot; // 0x248
	UUW-Inventory_EquippedSlot_C* BagSlot; // 0x250
	UUW-Inventory_EquippedSlot_C* BottomSlot; // 0x258
	UUW-Inventory_EquippedSlot_C* EyeWearSlot; // 0x260
	UUW-Inventory_EquippedSlot_C* GhillieSlot; // 0x268
	UUW-Inventory_EquippedSlot_C* GlovesSlot; // 0x270
	UUW-Inventory_EquippedSlot_C* HatSlot; // 0x278
	UUW-Inventory_EquippedSlot_C* HelmetSlot; // 0x280
	UUW-Inventory_EquippedSlot_C* MaskSlot; // 0x288
	UUW-Inventory_EquippedSlot_C* OuterSlot; // 0x290
	UUW-Inventory_EquippedSlot_C* ShoesSlot; // 0x298
	UUW-Inventory_EquippedSlot_C* TopSlot; // 0x2a0
	UUW-Inventory_Weapon_C* UW-Inventory_Weapon; // 0x2a8
	FTimerHandle Timer_UpdateItemList; // 0x2b0
};

struct UUW-BlackMarket_SubTab_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* BTN-Amplifier; // 0x250
	UButton* BTN-Attachment-ALL; // 0x258
	UButton* BTN-Attachment-Barrel; // 0x260
	UButton* BTN-Attachment-Grip; // 0x268
	UButton* BTN-Attachment-Mag; // 0x270
	UButton* BTN-Attachment-Muzzle; // 0x278
	UButton* BTN-Attachment-Sight; // 0x280
	UButton* BTN-Attachment-Stock; // 0x288
	UButton* BTN-Consumable_Chest; // 0x290
	UButton* BTN-Consumable_Material; // 0x298
	UButton* BTN-Consumable_Recipe; // 0x2a0
	UButton* BTN-Consumable_Usable; // 0x2a8
	UButton* BTN-Custom-ALL; // 0x2b0
	UButton* BTN-Custom-Face; // 0x2b8
	UButton* BTN-Custom-Hair; // 0x2c0
	UButton* BTN-Gear-All; // 0x2c8
	UButton* BTN-Gear-Armor; // 0x2d0
	UButton* BTN-Gear-Bag; // 0x2d8
	UButton* BTN-Gear-Ghillie; // 0x2e0
	UButton* BTN-Gear-Helmet; // 0x2e8
	UButton* BTN-ResetHair; // 0x2f0
	UButton* BTN-WeaponALL; // 0x2f8
	UButton* BTN-Wearable-ALL; // 0x300
	UButton* BTN-Wearable-Bottom; // 0x308
	UButton* BTN-Wearable-EyeWear; // 0x310
	UButton* BTN-Wearable-Gloves; // 0x318
	UButton* BTN-Wearable-Hat; // 0x320
	UButton* BTN-Wearable-Mask; // 0x328
	UButton* BTN-Wearable-Outer; // 0x330
	UButton* BTN-Wearable-Shoes; // 0x338
	UButton* BTN-Wearable-Top; // 0x340
	UButton* BTN-WepaonAR; // 0x348
	UButton* BTN-WepaonDMR; // 0x350
	UButton* BTN-WepaonMelee; // 0x358
	UButton* BTN-WepaonPistol; // 0x360
	UButton* BTN-WepaonShotgun; // 0x368
	UButton* BTN-WepaonSMG; // 0x370
	UButton* BTN-WepaonSR; // 0x378
	UButton* BTN-WepaonThrowing; // 0x380
	UButton* Button_1; // 0x388
	UButton* Button_2; // 0x390
	UButton* Button_3; // 0x398
	UButton* Button_4; // 0x3a0
	UImage* Image_1; // 0x3a8
	UImage* Image_2; // 0x3b0
	UImage* Image_3; // 0x3b8
	UImage* Image_4; // 0x3c0
	UImage* IMG-Attach-Check01; // 0x3c8
	UImage* IMG-Attach-Check02; // 0x3d0
	UImage* IMG-Attach-Check03; // 0x3d8
	UImage* IMG-Attach-Check04; // 0x3e0
	UImage* IMG-Attach-Check05; // 0x3e8
	UImage* IMG-Attach-Check06; // 0x3f0
	UImage* IMG-Attachment-ALL; // 0x3f8
	UImage* IMG-Check02; // 0x400
	UImage* IMG-Check03; // 0x408
	UImage* IMG-Check04; // 0x410
	UImage* IMG-Check05; // 0x418
	UImage* IMG-Check06; // 0x420
	UImage* IMG-Check07; // 0x428
	UImage* IMG-Check08; // 0x430
	UImage* IMG-Check09; // 0x438
	UImage* IMG-Check10; // 0x440
	UImage* IMG-Check11; // 0x448
	UImage* IMG-Consumable_Chest_Check; // 0x450
	UImage* IMG-Consumable_Material_Check; // 0x458
	UImage* IMG-Consumable_Recipe_Check; // 0x460
	UImage* IMG-Consumable_Usable_Check; // 0x468
	UImage* IMG-Custom-ALL; // 0x470
	UImage* IMG-Custom-Face; // 0x478
	UImage* IMG-Custom-Hair; // 0x480
	UImage* IMG-Gear-All; // 0x488
	UImage* IMG-Gear-Armor; // 0x490
	UImage* IMG-Gear-Bag; // 0x498
	UImage* IMG-Gear-Ghillie; // 0x4a0
	UImage* IMG-Gear-Helmet; // 0x4a8
	UImage* IMG-Wearable-Check01; // 0x4b0
	UImage* IMG-Wearable-Check02; // 0x4b8
	UImage* IMG-Wearable-Check03; // 0x4c0
	UImage* IMG-Wearable-Check04; // 0x4c8
	UImage* IMG-Wearable-Check05; // 0x4d0
	UImage* IMG-Wearable-Check06; // 0x4d8
	UImage* IMG-Wearable-Check09; // 0x4e0
	UImage* IMG-Wearable-Check10; // 0x4e8
	UImage* IMG-Wearable-Check12; // 0x4f0
	USizeBox* SB-Attachment; // 0x4f8
	USizeBox* SB-Consumable; // 0x500
	USizeBox* SB-Custom; // 0x508
	USizeBox* SB-Gear; // 0x510
	USizeBox* SB-Perk; // 0x518
	USizeBox* SB-Weapon; // 0x520
	USizeBox* SB-Wearable; // 0x528
	UTextBlock* TextBlock_2; // 0x530
	UTextBlock* TextBlock_3; // 0x538
	UTextBlock* TextBlock_4; // 0x540
	UTextBlock* TextBlock_5; // 0x548
	UTextBlock* TXT-Attachment-ALL; // 0x550
	UTextBlock* TXT-Attachment-Barrel; // 0x558
	UTextBlock* TXT-Attachment-Grip; // 0x560
	UTextBlock* TXT-Attachment-Mag; // 0x568
	UTextBlock* TXT-Attachment-Muzzle; // 0x570
	UTextBlock* TXT-Attachment-Sight; // 0x578
	UTextBlock* TXT-Attachment-Stock; // 0x580
	UTextBlock* TXT-Consumable_Chest; // 0x588
	UTextBlock* TXT-Consumable_Material; // 0x590
	UTextBlock* TXT-Consumable_Recipe; // 0x598
	UTextBlock* TXT-Consumable_Usable; // 0x5a0
	UTextBlock* TXT-Custom-ALL; // 0x5a8
	UTextBlock* TXT-Custom-Face; // 0x5b0
	UTextBlock* TXT-Custom-Hair; // 0x5b8
	UTextBlock* TXT-Gear-All; // 0x5c0
	UTextBlock* TXT-Gear-Armor; // 0x5c8
	UTextBlock* TXT-Gear-Bag; // 0x5d0
	UTextBlock* TXT-Gear-Ghillie; // 0x5d8
	UTextBlock* TXT-Gear-Helmet; // 0x5e0
	UTextBlock* TXT-Wearable-ALL; // 0x5e8
	UTextBlock* TXT-Wearable-Bottom; // 0x5f0
	UTextBlock* TXT-Wearable-Eyewear; // 0x5f8
	UTextBlock* TXT-Wearable-Gloves; // 0x600
	UTextBlock* TXT-Wearable-Mask; // 0x608
	UTextBlock* TXT-Wearable-Outer; // 0x610
	UTextBlock* TXT-Wearable-Shoes; // 0x618
	UTextBlock* TXT-Wearable-Top; // 0x620
	UTextBlock* TXT-Wearable_Hat; // 0x628
	UTextBlock* TXT-WepaonALL; // 0x630
	UTextBlock* TXT-WepaonAmplifier; // 0x638
	UTextBlock* TXT-WepaonAR; // 0x640
	UTextBlock* TXT-WepaonDMR; // 0x648
	UTextBlock* TXT-WepaonMelee; // 0x650
	UTextBlock* TXT-WepaonPistol; // 0x658
	UTextBlock* TXT-WepaonShotgun; // 0x660
	UTextBlock* TXT-WepaonSMG; // 0x668
	UTextBlock* TXT-WepaonSR; // 0x670
	UTextBlock* TXT-WepaonThrowing; // 0x678
	UVerticalBox* VerticalBox_Perk; // 0x680
	FSlateColor NormalSlateColor; // 0x688
	FSlateColor SelectedSlateColor; // 0x6b0
	UUW-BlackMarket_Main_C* BlackMarketMainRef; // 0x6d8
};

struct UDatasmithMaterialInstanceTemplate : UDatasmithObjectTemplate {
	TSoftObjectPtr<UMaterialInterface> ParentMaterial; // 0x30
	TMap<FName, float> ScalarParameterValues; // 0x58
	TMap<FName, FLinearColor> VectorParameterValues; // 0xa8
	TMap<FName, TSoftObjectPtr<UTexture>> TextureParameterValues; // 0xf8
	FDatasmithStaticParameterSetTemplate StaticParameters; // 0x148
};

struct UUW-PersonalSupplyBoxWidget_C : UBravoHotelPersonalSupplyBoxWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3f8
	UWidgetAnimation* Ani_PadOn; // 0x400
	UImage* BG_Pad; // 0x408
	UButton* btn_PerkDeckEnabled; // 0x410
	UCanvasPanel* Canvas_ChangeEnable; // 0x418
	UCanvasPanel* CanvasPanel; // 0x420
	UCanvasPanel* CanvasPanel_3; // 0x428
	UComboBoxString* ComboBoxString_237; // 0x430
	UTextBlock* CurHaveGoldValue; // 0x438
	UTextBlock* CurPriceText; // 0x440
	UImage* Down; // 0x448
	UImage* EquipBg; // 0x450
	UOverlay* Free; // 0x458
	UImage* GoldImage; // 0x460
	UImage* GoldImage_2; // 0x468
	UOverlay* GoldLack; // 0x470
	UTextBlock* HaveWeaponText; // 0x478
	UHorizontalBox* HorizontalBox_1; // 0x480
	UImage* Image; // 0x488
	UImage* Image_2; // 0x490
	UImage* Image_3; // 0x498
	UImage* Image_4; // 0x4a0
	UImage* Image_5; // 0x4a8
	UImage* Image_91; // 0x4b0
	UImage* Image_119; // 0x4b8
	UImage* Image_172; // 0x4c0
	UImage* Image_192; // 0x4c8
	UImage* Image_251; // 0x4d0
	UImage* Image_362; // 0x4d8
	UImage* Image_400; // 0x4e0
	UImage* Image_545; // 0x4e8
	UImage* Image_552; // 0x4f0
	UImage* Image_614; // 0x4f8
	UImage* Image_722; // 0x500
	UImage* Image_1025; // 0x508
	UImage* Image_1262; // 0x510
	UImage* ItemIcon; // 0x518
	UTextBlock* Items_1Text; // 0x520
	UScrollBox* ItemScroll; // 0x528
	UTextBlock* ItemsText; // 0x530
	UTextBlock* OkText; // 0x538
	UOverlay* Overlay_4; // 0x540
	UOverlay* Overlay_215; // 0x548
	UImage* PriceBg; // 0x550
	UImage* PriceBg_2; // 0x558
	UTextBlock* PriceText; // 0x560
	UTextBlock* PriceValue; // 0x568
	URichTextBlock* RichTextBlock; // 0x570
	URichTextBlock* RichTextBlock_74; // 0x578
	USizeBox* SizeBox_4; // 0x580
	UImage* SlotBg; // 0x588
	UTextBlock* SortText; // 0x590
	UTextBlock* SpecialWeaponText; // 0x598
	UTextBlock* TextBlock_3; // 0x5a0
	UImage* Up; // 0x5a8
	UUW-PersonalSupplyBoxConsumableItemSlotWidget_C* UW-PersonalSupplyBoxConsumableItemSlotWidget_2; // 0x5b0
	UUW-PersonalSupplyBoxConsumableItemSlotWidget_C* UW-PersonalSupplyBoxConsumableItemSlotWidget_3; // 0x5b8
	UUW-PersonalSupplyBoxConsumableItemSlotWidget_C* UW-PersonalSupplyBoxConsumableItemSlotWidget_4; // 0x5c0
	UUW-PersonalSupplyBoxConsumableItemSlotWidget_C* UW-PersonalSupplyBoxConsumableItemSlotWidget_5; // 0x5c8
	UUW-PersonalSupplyBoxConsumableItemSlotWidget_C* UW-PersonalSupplyBoxConsumableItemSlotWidget_6; // 0x5d0
	UUW-PersonalSupplyBoxWeaponInfoWidget_C* UW-PersonalSupplyBoxWeaponInfoWidget_186; // 0x5d8
	UUW-SupplyToolTip_C* UW-SupplyToolTip; // 0x5e0
	UUW-Timer_C* UW-Timer; // 0x5e8
	UVerticalBox* VerticalBox_1; // 0x5f0
	UScrollBox* WeaponScroll; // 0x5f8
	UWidgetSwitcher* WidgetSwitcher_1; // 0x600
	TArray<FText> SortType; // 0x608
	TArray<UImage*> RarityList; // 0x618
	TMap<FString, UUW-ComboBoxText_C*> ComboxList; // 0x628
	FString SelectComboBox; // 0x678
	bool IsShowAni; // 0x688
	bool IsFree; // 0x689
	FSupplyItem SaveSupplyItem; // 0x690
	int32_t CurOwnGold; // 0x790
	int32_t TotalPrice; // 0x794
};

struct UWindDirectionalSourceComponent : USceneComponent {
	float Strength; // 0x230
	float Speed; // 0x234
	float MinGustAmount; // 0x238
	float MaxGustAmount; // 0x23c
	float Radius; // 0x240
	char bPointWind : 1; // 0x244
};

struct UUW-Lobby_ArmoryMain_C : UUserWidget {
	UWidgetAnimation* ShowAnim; // 0x248
	UUW-Lobby_Armory_Recipe_C* UW-Lobby_Armory_Recipe; // 0x250
	UWidgetSwitcher* WidgetSwitcher_53; // 0x258
	int32_t Gold; // 0x260
	TArray<FResponse_Weapon_List_Data> WeaponList; // 0x268
	TArray<FResponse_MaterialList_Data> MaterialList; // 0x278
	TArray<int32_t> ItemWeaponIDList; // 0x288
	TArray<int32_t> LastItemWeaponIDList; // 0x298
	TArray<int32_t> NewWeaponList; // 0x2a8
	TArray<int32_t> MaterialIDList; // 0x2b8
	TArray<int32_t> LastMaterialIDList; // 0x2c8
	TArray<int32_t> NewMaterialList; // 0x2d8
	TArray<FName> NewCraftIDList; // 0x2e8
	FResponse_CraftWeapon_Data CraftWeaponInfo; // 0x2f8
	FString MainTabName; // 0x3b8
	FString ArmoryTabName; // 0x3c8
	bool bNeedCheckWeaponList; // 0x3d8
	bool bNeedCheckMaterialList; // 0x3d9
};

struct UAudioSettings : UDeveloperSettings {
	FSoftObjectPath DefaultSoundClassName; // 0x38
	FSoftObjectPath DefaultMediaSoundClassName; // 0x50
	FSoftObjectPath DefaultSoundConcurrencyName; // 0x68
	FSoftObjectPath DefaultBaseSoundMix; // 0x80
	FSoftObjectPath VoiPSoundClass; // 0x98
	FSoftObjectPath MasterSubmix; // 0xb0
	FSoftObjectPath ReverbSubmix; // 0xc8
	FSoftObjectPath EQSubmix; // 0xe0
	EVoiceSampleRate VoiPSampleRate; // 0xf8
	float DefaultReverbSendLevel; // 0xfc
	int32_t MaximumConcurrentStreams; // 0x100
	float GlobalMinPitchScale; // 0x104
	float GlobalMaxPitchScale; // 0x108
	TArray<FAudioQualitySettings> QualityLevels; // 0x110
	char bAllowPlayWhenSilent : 1; // 0x120
	char bDisableMasterEQ : 1; // 0x120
	char bAllowCenterChannel3DPanning : 1; // 0x120
	uint32_t NumStoppingSources; // 0x124
	EPanningMethod PanningMethod; // 0x128
	EMonoChannelUpmixMethod MonoChannelUpmixMethod; // 0x129
	FString DialogueFilenameFormat; // 0x130
};

struct USynthSamplePlayer : USynthComponent {
	USoundWave* SoundWave; // 0x710
	FMulticastInlineDelegate OnSampleLoaded; // 0x718
	FMulticastInlineDelegate OnSamplePlaybackProgress; // 0x728
};

struct UMaterialExpressionNormalize : UMaterialExpression {
	FExpressionInput VectorInput; // 0x40
};

struct UUW-WorldMapMarkerWidget_C : UBravoHotelPlayerMarkerWidget {
	UImage* Image_SupplyBoxMarker; // 0x248
	UCanvasPanel* PersonalSupplyBox; // 0x250
	UWidgetSwitcher* WidgetSwitcher_2; // 0x258
	FMulticastInlineDelegate OnMarkerClicked; // 0x260
	UImage* CurrentMarker; // 0x270
	UUW-MapComp_C* MapCompRef; // 0x278
	UObject* TmpPingTypeTexture; // 0x280
};

struct ULowEntryLatentActionInteger : UObject {
	bool Finished; // 0x28
	int32_t Result; // 0x2c
	int32_t KeepAliveCount; // 0x30
};

struct UMovieSceneAudioSection : UMovieSceneSection {
	USoundBase* Sound; // 0xe0
	FFrameNumber StartFrameOffset; // 0xe8
	float StartOffset; // 0xec
	float AudioStartTime; // 0xf0
	float AudioDilationFactor; // 0xf4
	float AudioVolume; // 0xf8
	FMovieSceneFloatChannel SoundVolume; // 0x100
	FMovieSceneFloatChannel PitchMultiplier; // 0x1a0
	FMovieSceneActorReferenceData AttachActorData; // 0x240
	bool bSuppressSubtitles; // 0x2f0
	bool bOverrideAttenuation; // 0x2f1
	USoundAttenuation* AttenuationSettings; // 0x2f8
	FDelegate OnQueueSubtitles; // 0x300
	FMulticastInlineDelegate OnAudioFinished; // 0x310
	FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x320
};

struct UARTrackedImage : UARTrackedGeometry {
	UARCandidateImage* DetectedImage; // 0xe8
	FVector2D EstimatedSize; // 0xf0
};

struct UAsyncActionChangePrimaryAssetBundles : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UComboBoxString : UWidget {
	TArray<FString> DefaultOptions; // 0x108
	FString SelectedOption; // 0x118
	FComboBoxStyle WidgetStyle; // 0x128
	FTableRowStyle ItemStyle; // 0x518
	FMargin ContentPadding; // 0xce0
	float MaxListHeight; // 0xcf0
	bool HasDownArrow; // 0xcf4
	bool EnableGamepadNavigationMode; // 0xcf5
	FSlateFontInfo Font; // 0xcf8
	FSlateColor ForegroundColor; // 0xd48
	bool bIsFocusable; // 0xd70
	FDelegate OnGenerateWidgetEvent; // 0xd74
	FMulticastInlineDelegate OnSelectionChanged; // 0xd88
	FMulticastInlineDelegate OnOpening; // 0xd98
};

struct UBravoHotelItemRecipeTreeWidget : UUserWidget {
	TArray<FRecipeTreeWidgetInfo> ItemRecipeTreeInfo; // 0x248
};

struct UOculusMR_BoundaryMeshComponent : UMeshComponent {
	EOculusMR_BoundaryType BoundaryType; // 0x4e0
	float BottomZ; // 0x4e4
	float TopZ; // 0x4e8
	UMaterial* WhiteMaterial; // 0x4f0
	AOculusMR_CastingCameraActor* CastingCameraActor; // 0x4f8
};

struct UGizmoLineHandleComponent : UGizmoBaseComponent {
	FVector Normal; // 0x4d0
	float HandleSize; // 0x4dc
	float Thickness; // 0x4e0
	FVector Direction; // 0x4e4
	float Length; // 0x4f0
	bool bImageScale; // 0x4f4
};

struct ULineWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* Image_51; // 0x250
	float InitSize; // 0x258
};

struct UInputSettings : UObject {
	TArray<FInputAxisConfigEntry> AxisConfig; // 0x28
	char bAltEnterTogglesFullscreen : 1; // 0x38
	char bF11TogglesFullscreen : 1; // 0x38
	char bUseMouseForTouch : 1; // 0x38
	char bEnableMouseSmoothing : 1; // 0x38
	char bEnableFOVScaling : 1; // 0x38
	char bCaptureMouseOnLaunch : 1; // 0x38
	char bDefaultViewportMouseLock : 1; // 0x38
	char bAlwaysShowTouchInterface : 1; // 0x38
	char bShowConsoleOnFourFingerTap : 1; // 0x39
	char bEnableGestureRecognizer : 1; // 0x39
	bool bUseAutocorrect; // 0x3a
	TArray<FString> ExcludedAutocorrectOS; // 0x40
	TArray<FString> ExcludedAutocorrectCultures; // 0x50
	TArray<FString> ExcludedAutocorrectDeviceModels; // 0x60
	EMouseCaptureMode DefaultViewportMouseCaptureMode; // 0x70
	EMouseLockMode DefaultViewportMouseLockMode; // 0x71
	float FOVScale; // 0x74
	float DoubleClickTime; // 0x78
	TArray<FInputActionKeyMapping> ActionMappings; // 0x80
	TArray<FInputAxisKeyMapping> AxisMappings; // 0x90
	TArray<FInputActionSpeechMapping> SpeechMappings; // 0xa0
	FSoftObjectPath DefaultTouchInterface; // 0xb0
	FKey ConsoleKey; // 0xc8
	TArray<FKey> ConsoleKeys; // 0xe0
};

struct UMyPluginObject : UObject {
	FMyPluginStruct MyStruct; // 0x28
};

struct UBHBReadyToSnipe : UBHBConditionedAbilityModify {
	float MaxReadyToSnipeTime; // 0x3a0
};

struct USkeletalMesh : UStreamableRenderAsset {
	FVector PositiveBoundsExtension; // 0x60
	FVector NegativeBoundsExtension; // 0x6c
	FPerPlatformInt MinLOD; // 0xc8
	FPerPlatformBool DisableBelowMinLodStripping; // 0xcc
	UBodySetup* BodySetup; // 0xd0
	UPhysicsAsset* PhysicsAsset; // 0xd8
	UPhysicsAsset* ShadowPhysicsAsset; // 0xe0
	TArray<UNodeMappingContainer*> NodeMappingData; // 0xe8
	TArray<UMorphTarget*> MorphTargets; // 0xf8
	UAnimInstance* PostProcessAnimBlueprint; // 0x108
	TArray<UClothingAssetBase*> MeshClothingAssets; // 0x110
	FSkeletalMeshSamplingInfo SamplingInfo; // 0x120
	TArray<UAssetUserData*> AssetUserData; // 0x150
	TArray<USkeletalMeshSocket*> Sockets; // 0x168
	TArray<FSkinWeightProfileInfo> SkinWeightProfiles; // 0x188
	char bUseFullPrecisionUVs : 1; // 0x198
	char bHasBeenSimplified : 1; // 0x198
	TArray<FBoneMirrorInfo> SkelMirrorTable; // 0x1a0
	FBoxSphereBounds ExtendedBounds; // 0x318
	TArray<FSkeletalMeshLODInfo> LODInfo; // 0x338
	TArray<FSkeletalMaterial> Materials; // 0x348
	USkeleton* Skeleton; // 0x358
	char bHasVertexColors : 1; // 0x360
	char bEnablePerPolyCollision : 1; // 0x360
	EAxis SkelMirrorAxis; // 0x361
	EAxis SkelMirrorFlipAxis; // 0x362
	FBoxSphereBounds ImportedBounds; // 0x364
	char bUseHighPrecisionTangentBasis : 1; // 0x390
};

struct USoundNode : UObject {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct UReplicationGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode_ActorList {
	TArray<FAlwaysRelevantActorInfo> PastRelevantActors; // 0x110
	AActor* LastViewer; // 0x120
	AActor* LastViewTarget; // 0x128
};

struct ABP-Projectile_MolotovFireCell_C : ABravoHotelProjectileMolotovFireCell {
	float TextureScale; // 0x3b0
	float BurnArea; // 0x3b4
};

struct UUW-Inventory_SlotBase_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	ABravoHotelPlayerController* PlayerController; // 0x250
	FInventoryItemInfo InventoryItemInfo; // 0x258
	FInventoryItemDetailInfo InventoryItemDetailInfo; // 0x2f0
	FBravoHotelWeaponInfo WeaponInfo; // 0x780
	UUW-Inventory_ItemSlotHover_C* ItemSlotHoverWIdget; // 0x12b0
	UUW-InventoryWidget_C* InventoryWidget; // 0x12b8
	UUW-Inventory_DragItem_C* DraggedWidget; // 0x12c0
	ItemWidgetDragType InventorySlotWidgetKind; // 0x12c8
	FSlateBrush DragItemBrush; // 0x12d0
	bool RButtonDown; // 0x1358
	bool bEpuipped; // 0x1359
};

struct UBHBHeadBanging : UBHBAddConditionBase {
	float HeadBangingStartTime; // 0x2c8
	float HeadBangingEndTime; // 0x2cc
};

struct UWheeledVehicleMovementComponentMotor : UWheeledVehicleMovementComponent {
	FVehicleEngineData EngineSetup; // 0x290
	FVehicleTransmissionData TransmissionSetup; // 0x330
	FRuntimeFloatCurve SteeringCurve; // 0x360
};

struct UReplicationGraph : UReplicationDriver {
	UNetReplicationGraphConnection* ReplicationConnectionManagerClass; // 0x28
	UNetDriver* NetDriver; // 0x30
	TArray<UNetReplicationGraphConnection*> Connections; // 0x38
	TArray<UNetReplicationGraphConnection*> PendingConnections; // 0x48
	TArray<UReplicationGraphNode*> GlobalGraphNodes; // 0x98
	TArray<UReplicationGraphNode*> PrepareForReplicationNodes; // 0xa8
};

struct UEnvQueryTest_Project : UEnvQueryTest {
	FEnvTraceData ProjectionData; // 0x1f8
};

struct UUW-ScenarioQuestCell_C : UUserWidget {
	UWidgetAnimation* Ani_Complete; // 0x248
	UImage* Ani_BG; // 0x250
	UImage* Bg; // 0x258
	UImage* Complete; // 0x260
	UTextBlock* TextBlock_QuestDesc; // 0x268
	UTextBlock* TextBlock_QuestTitle; // 0x270
	UUW-ImageText_C* UW-ImageText; // 0x278
	UUW-ScenarioQuestCell_Sub_C* UW-ScenarioQuestCell_Sub; // 0x280
	UUW-ScenarioQuestCell_Sub_C* UW-ScenarioQuestCell_Sub_2; // 0x288
	UUW-ScenarioQuestCell_Sub_C* UW-ScenarioQuestCell_Sub_3; // 0x290
	FQuestTaskInfo TaskInfo; // 0x298
	FQuestTaskElement TaskData; // 0x2b8
};

struct UPaperTerrainMaterial : UDataAsset {
	TArray<FPaperTerrainMaterialRule> Rules; // 0x30
	UPaperSprite* InteriorFill; // 0x40
};

struct UTexture2D : UTexture {
	int32_t LevelIndex; // 0xb8
	int32_t FirstResourceMemMip; // 0xbc
	char bTemporarilyDisableStreaming : 1; // 0xc0
	TextureAddress AddressX; // 0xc1
	TextureAddress AddressY; // 0xc2
	FIntPoint ImportedSize; // 0xc4
};

struct USpotLightComponent : UPointLightComponent {
	float InnerConeAngle; // 0x3a8
	float OuterConeAngle; // 0x3ac
	float LightShaftConeAngle; // 0x3b0
	char bUsePCSS : 1; // 0x3b4
	float PCSSSharpness; // 0x3b8
	float PCSSContrast; // 0x3bc
};

struct UProjectileMovementComponent : UMovementComponent {
	float InitialSpeed; // 0xf0
	float MaxSpeed; // 0xf4
	char bRotationFollowsVelocity : 1; // 0xf8
	char bRotationRemainsVertical : 1; // 0xf8
	char bShouldBounce : 1; // 0xf8
	char bInitialVelocityInLocalSpace : 1; // 0xf8
	char bForceSubStepping : 1; // 0xf8
	char bSimulationEnabled : 1; // 0xf8
	char bSweepCollision : 1; // 0xf8
	char bIsHomingProjectile : 1; // 0xf8
	char bBounceAngleAffectsFriction : 1; // 0xf9
	char bIsSliding : 1; // 0xf9
	char bInterpMovement : 1; // 0xf9
	char bInterpRotation : 1; // 0xf9
	float PreviousHitTime; // 0xfc
	FVector PreviousHitNormal; // 0x100
	float ProjectileGravityScale; // 0x10c
	float Buoyancy; // 0x110
	float Bounciness; // 0x114
	float Friction; // 0x118
	float BounceVelocityStopSimulatingThreshold; // 0x11c
	float MinFrictionFraction; // 0x120
	FMulticastInlineDelegate OnProjectileBounce; // 0x128
	FMulticastInlineDelegate OnProjectileStop; // 0x138
	float HomingAccelerationMagnitude; // 0x148
	TWeakObjectPtr<USceneComponent> HomingTargetComponent; // 0x14c
	float MaxSimulationTimeStep; // 0x154
	int32_t MaxSimulationIterations; // 0x158
	int32_t BounceAdditionalIterations; // 0x15c
	float InterpLocationTime; // 0x160
	float InterpRotationTime; // 0x164
	float InterpLocationMaxLagDistance; // 0x168
	float InterpLocationSnapToTargetDistance; // 0x16c
};

struct ABravoHotelCharacter : ACharacter {
	FMulticastInlineDelegate Delegate_OnCameraViewModeChanged; // 0x5f8
	FMulticastInlineDelegate OnPickableItemDetected; // 0x638
	bool bIsDisarming; // 0x678
	USkeletalMesh* BodyBaseSkeletalMesh; // 0x688
	FMulticastInlineDelegate OnUpdateCastingDelegate; // 0x6d0
	FMulticastInlineDelegate Delegate_OnEnteredVehicle; // 0x6e0
	FMulticastInlineDelegate OnMovementInputPressedDelegate; // 0x728
	FMulticastInlineDelegate OnCanProneFailedDelegate; // 0x740
	UBravoHotelCharacterMovementComponent* BravoHotelCharacterMovement; // 0x770
	FTimerHandle TimerHandle_HideParachute; // 0x778
	FTimerHandle TimeHandle_SkyDive; // 0x798
	float OuterDamage; // 0x7a0
	FTimerHandle TimerHandle_InOuterArea; // 0x7a8
	FTimerHandle TimerHandle_UpdateInOuterArea; // 0x7b0
	float InventoryScrollSpeed; // 0x7b8
	FAnimSlot UnequipAnim_SubWeapon_Prone; // 0x7c0
	FTimerHandle TimerHandle_ForceField; // 0x7d0
	FAnimSlot LandingAnim_Parachute; // 0x7d8
	FAnimSlot RollingAnim; // 0x7e8
	TArray<USkeletalMesh*> PendingReleaseMutableMesh_TPP; // 0x7f8
	FTimerHandle TimerHandle_BlueZone; // 0x808
	int16_t SlidingBuffIndex; // 0x812
	int32_t CurrentReadyToSnipeGrade; // 0x818
	TArray<ABravoHotelProjectileGrenade*> ProjectileGrenades; // 0x820
	float UpdateAnimationDistance; // 0x830
	TMap<int16_t, int32_t> ReplicateIndexPerkMap; // 0x838
	FVector DefaultTargetOffset_HipShot; // 0x890
	float DoubleTapDelay_ToggleLean; // 0x89c
	float AmplifierFocusDistance; // 0x8a0
	TMap<EWeaponAttachmentItem, FBravoHotelArmsLag> ArmsLags; // 0x8a8
	FBombingInfo BombingInfo; // 0x8f8
	FTimeline FPSK_Timeline_Sway_Move; // 0x940
	FAnimSlot LastCastingItemAnimSlot_Stand; // 0x9d8
	UParticleSystem* PunchEffect; // 0x9e8
	TMap<UActorComponent*, float> CriticalTimeComponentTickIntervals; // 0x9f0
	float FirstTimeHittedDamage; // 0xa40
	FAnimSlot LandingAnim_Unarmed; // 0xa48
	FTransform FPSK_ADS_TargetWeaponTransform; // 0xa60
	FAnimSlot DoorAnim_Kick; // 0xaa0
	float TeamPositionWidgetInterpSpeed; // 0xab0
	float TargetArmLengthInterpSpeed; // 0xabc
	FTimerHandle TimerHandle_StopAirWalk; // 0xac8
	float Camera3P_AMP_FOV_InterpSpeed; // 0xad0
	float FPSK_CollideAngle_LocalCache; // 0xae8
	float LastTimeHittedDamage; // 0xaec
	FTimerHandle CastingSupplyTimer; // 0xaf8
	TArray<FPerkUIInfo> PerkUIInfos; // 0xb00
	float FPSK_ADSFOV; // 0xb10
	char bIsADSFireToCamera : 1; // 0xb14
	UCurveVector* FPSK_Curve_Sway_Idle_Default; // 0xb18
	float TargetArmLength; // 0xb20
	FMulticastInlineDelegate OnChangeCharacterStateDelegate; // 0xb28
	float CurrentAirWalkVelocityZ; // 0xb3c
	ABravoHotelBrokenEquipment* BrokenHelmetClass; // 0xb48
	FAnimSlot CombineAnim_Prone; // 0xb50
	FVector TargetSocketOffset; // 0xb60
	TMap<FName, FBravoHotelPostProcessSettings> PostProcessAssignedList; // 0xb70
	float MagneticDamagedTermTime; // 0xbc0
	float SprintingMoveRightModifier; // 0xbc4
	bool bShouldSprint; // 0xbc8
	float IdleWaitingTime; // 0xbcc
	FAnimSlot CurrentMeleeAnimSlot; // 0xbd0
	float UnarmedMeleeDamage_Ground; // 0xc58
	UBravoHotelBlueZoneGameRule* BlueZoneGameRule; // 0xc60
	bool bUseFPSK_Sway; // 0xc68
	TArray<FAnimSlot> DeathAnim_Grenade; // 0xc80
	bool bNeedToDrawNitroBoomTarget; // 0xc90
	float ParachuteReadyToLandHeight; // 0xc94
	float HeightToGetInParachuteFromLand; // 0xc98
	float ParachuteMomentumDeacc; // 0xc9c
	FBravoHotelDefaultWearableSetting DefaultWearableSetting; // 0xca0
	float PronedDeltaHeightCamera3P; // 0xcb8
	float BushLandingDamageMultiplier; // 0xcbc
	float ParachuteTargetCameraSpeed; // 0xcc4
	FVector FPSK_LeanLocation; // 0xd00
	float NitroBoomLastVehicleSetTime; // 0xd0c
	float BloodEffectNearbyDist; // 0xd10
	bool bMovementKeyPushed; // 0xd14
	ABravoHotelPickup* DetectedPickableItem; // 0xd18
	FAnimSlot UnequipAnim_Melee; // 0xd20
	float DescentSpeed; // 0xd30
	USkeletalMeshComponent* FPSK_BarrelShadow; // 0xd38
	float SpeedBloomIntensityInAirCraft; // 0xd40
	UAkAudioEvent* BreathStopEvent; // 0xd48
	USceneComponent* DetectedVehicleSeatComponent; // 0xd50
	FVector2D SprintingBeginRange; // 0xd58
	UCameraPostProcessPreset* PP_Preset_ADS; // 0xd60
	bool bFPSK_IsDefaultTransformUpdated; // 0xd68
	float BluezoneMaterialOnTime; // 0xd6c
	ABravoHotelSkillTargetingBase* BombingTargetActor; // 0xd78
	FRotator FPSK_SwayRotationMove; // 0xd80
	ABravoHotelCharacter* ResuscitatingCharacter; // 0xd90
	FMulticastInlineDelegate Delegate_OnViewCameraOutWater; // 0xd98
	FMulticastInlineDelegate DelegateCheckSupplyCost; // 0xdc0
	UAkAudioEvent* AMPNoiseStopEvent; // 0xde0
	bool bInSmoke; // 0xde8
	TArray<FAnimSlot> MeleeAnim_Punch_Crouch; // 0xdf0
	FAnimSlot UnequipAnim_MainWeapon1; // 0xe00
	UAkAudioEvent* AMPNoiseEvent; // 0xe18
	TArray<UCameraPostProcessPreset*> PostProcessBuffList; // 0xe20
	UAkAudioEvent* SteadyAimReadyEvent; // 0xe30
	EPhysicalSurface SurfaceType; // 0xe3c
	UParticleSystemComponent* MeteorJumpTrailEffect; // 0xe40
	ABravoHotelGameState* BravoHotelGameState; // 0xe48
	TArray<FName> CombineTargetMaterials; // 0xe50
	FVector FPSK_StartCameraHeight; // 0xe60
	UCameraPostProcessPreset* PostProcessOuterPlayZoneClass; // 0xe70
	FMulticastInlineDelegate OnSpawnBlackOutDelegate; // 0xe80
	TSet<UPrimitiveComponent*> OverlappedCantProneComponent; // 0xe90
	TArray<FPerkDeckElement> CurrentPerkCards; // 0xee0
	FTimerHandle TimerHandle_Stuntman; // 0xef0
	FVector DefaultSocketOffset_LeftLeanAMP; // 0xef8
	float ParachuteQuickLandingVelocityModifierXY; // 0xf10
	FTimerHandle TimerHandle_ADSProcess; // 0xf18
	float FPSK_SwayScale; // 0xf20
	bool bActiveCriticalTime; // 0xf24
	TArray<FResuscitationAnimSet> ResuscitationAnimSets; // 0xf28
	TArray<FString> LogList; // 0xf38
	float CurrentPitchSpeed; // 0xf48
	float MP_SnowInterpSpeed; // 0xf4c
	FVector DefaultSocketOffset_Hipshot; // 0xf50
	UCurveFloat* ParachutePitchCurve; // 0xf60
	bool IgnoreInteraction; // 0xf68
	USkeletalMeshComponent* FPSK_MuzzleShadow; // 0xf70
	float InternalDamagedTermTime; // 0xf78
	UCameraPostProcessPreset* PPInst_ADS; // 0xf80
	float DustDissolveDelayTime; // 0xf88
	float MaxPitchInParachute; // 0xf8c
	FAnimSlot EquipAnim_HeartBeatSensor_Prone; // 0xfa0
	UDamageType* LastDamageType; // 0xfb0
	float Camera3P_HeartBeatSensor_FOV_InterpSpeed; // 0xfb8
	float Delay_AOSToADS; // 0xfbc
	float TargetArmLengthInterpSpeed_AMP; // 0xfc0
	float LeanDegreeMax; // 0xfc4
	bool bIsFired; // 0xfca
	FRotator FPSK_LeanRotation; // 0xfcc
	TArray<UObject*> LoadedClasses; // 0xfe0
	float TeleportAppearTime; // 0xff0
	float ParachuteTurnSpeedYaw; // 0xff4
	UBravoHotelDamageType* LastHitType; // 0xff8
	FVector2D InputAxisOnLockMovement; // 0x1000
	float CurrentYawSpeed; // 0x1008
	float ForwardMomentumRangeMin; // 0x100c
	float InAircraftNearClipPlane; // 0x1010
	float RollingStartTime; // 0x1020
	float NitroBoomDuration; // 0x1024
	bool bFixLeanDegreeMax; // 0x1028
	bool bNeedToUpdateNitroBoom; // 0x1029
	FMulticastInlineDelegate Delegate_OnViewCameraInWater; // 0x1030
	FVector FPSK_CameraHeight; // 0x1040
	TArray<ABravoHotelProjectileGrenadeC4*> ThrownC4s; // 0x1050
	UCustomizableSkeletalComponent* MutableComponent; // 0x1068
	float FPSK_TargetMagnificationFactor; // 0x108c
	USceneComponent* ADSCameraScene; // 0x1090
	bool bIsProneWeaponIdle; // 0x10a4
	TArray<AActor*> ActorsToIgnore_Melee; // 0x10a8
	FVector FPSK_CameraLocation_Collide; // 0x10b8
	USkeletalMeshComponent* FPSK_WeaponShadow; // 0x10c8
	bool bInputKeyJump; // 0x10d0
	bool bIsInsideBlueZone; // 0x10d1
	bool bCanQuickLanding; // 0x10d2
	FTimerHandle TimerHandle_SetIsFired; // 0x10d8
	float FPSK_DefaultFOV; // 0x10e0
	float FPSK_CurrentMagnificationFactor; // 0x10e4
	ABravoHotelPlayerController* BravoHotelPlayerController; // 0x10e8
	FVector DefaultSocketOffset_RightHeartBeatSensor; // 0x10f4
	bool bThirdPerson; // 0x1100
	UCameraPostProcessPreset* PP_Preset_ShortHealth; // 0x1108
	FVector FPSK_DestCameraHeight; // 0x1118
	bool IsMagneticDamage; // 0x1124
	UAkAudioEvent* SupplyBoxNotifyAlertMe; // 0x1128
	TArray<FString> LogJsonList; // 0x1138
	UAkComponent* AudioComponent; // 0x1148
	EInteractionType InteractionType; // 0x1159
	float MaxRollInParachute; // 0x1160
	FTimerHandle TimerHandle_BlackOut; // 0x1168
	TArray<FAnimSlot> DeathAnim_HeadShot; // 0x1178
	FVector FPSK_CameraLocation_RightLeanDelta; // 0x1188
	float DescentGravityScale; // 0x1194
	UAkAudioEvent* ParachuteFoldEvent; // 0x1198
	float DescentDeacceleration; // 0x11ac
	UParticleSystem* ParticleSystem_MeteorJumpLanded; // 0x11b0
	UAkAudioEvent* ResuscitationStopEvents; // 0x11b8
	FAnimSlot UnequipAnim_HeartBeatSensor_Prone; // 0x11c0
	float ParachuteQuickLandingVelocityModifierZ; // 0x11d0
	FAnimSlot Stand_FlameDotDamageAnim; // 0x11d8
	TArray<UAkAudioEvent*> WearableEquipEvents; // 0x11e8
	FName WearableNameHasFur; // 0x121c
	float AirWalkTotalRecord; // 0x1224
	bool bNeedToCheckPlosiveSoundDetection; // 0x1228
	float RadialRate; // 0x122c
	FMulticastInlineDelegate OnUpdateMutableDelegate; // 0x1230
	float AirWalkStartTime; // 0x1244
	float MinRollInParachute; // 0x124c
	FVector DefaultSocketOffset_RightLeanHeartBeatSensor; // 0x1250
	FRotator ArmsLagWeaponRotation; // 0x125c
	UAkAudioEvent* StartDescendingEvent; // 0x1270
	ELeanState SaveLeanState; // 0x1285
	UBravoHotelPhysicalMaterial* LastSteppedSurface; // 0x1288
	bool bIsMelee; // 0x1290
	UAkAudioEvent* HeartBeatSensorEnterEvent; // 0x1298
	FTimeline Timeline_CameraInterp; // 0x12a0
	bool bFPSK_IsCollide; // 0x1338
	UDataTable* RenderSettingsTable; // 0x1340
	FVector DefaultSocketOffset_LeftLeanAOS; // 0x1348
	FAnimSlot PickUpAnim_Pistol_Floor; // 0x1358
	bool bNeedToBeADS; // 0x1368
	float MaxVehicleEscapeSpeed; // 0x136c
	float DustDissolveAnimaitionMaxTime; // 0x1370
	UAkAudioEvent* BreathEndEvent; // 0x1378
	float Default3PFOV_SkillMAP; // 0x1380
	float ForwardAxisValue; // 0x1384
	UAkAudioEvent* PickUpStartEvent; // 0x1388
	bool bIsLanded; // 0x1390
	float ParachuteGravity; // 0x1394
	FHitResult CurHit; // 0x1398
	FVector2D CurrentInputAxis; // 0x1420
	UParticleSystem* CloudFxEmitterTemplate; // 0x1430
	UAkAudioEvent* RocketJumpAudioEvent; // 0x1450
	float SpeedSpringArmLengthInAirCraft; // 0x14a8
	float AirWalkBestRecord; // 0x14ac
	float PrevMeshRelativeZ; // 0x14b0
	int32_t HitBlinkState; // 0x14b4
	FVector AttachInAircraftCameraLocaiton; // 0x14b8
	TArray<ABravoHotelProjectileGrenade*> MeteorGrenadeProjectileClass; // 0x14c8
	FAnimSlot EquipAnim_MainWeapon1_Prone; // 0x14d8
	FTimeline FPSK_Timeline_Sway_Idle; // 0x14f0
	float CrouchMovedDeltaHeightCamera3P; // 0x1588
	bool bWaitingADSReturn; // 0x158c
	TArray<FAssistInfo> AssistInfo; // 0x1598
	UStaticMeshComponent* FPSK_MagazineShadow; // 0x15a8
	ELandingReason LandingReason; // 0x15b4
	UParticleSystem* StartBlackOutParticle; // 0x15b8
	UParticleSystem* InWaterParticle; // 0x15c8
	TArray<ABravoHotelAreaSkillZone*> ActivePowerInterruptions; // 0x15d8
	AActor* MeteorTarget; // 0x15e8
	float SimulationBoxHeight; // 0x1604
	TArray<ABravoHotelAreaSkillZone*> ActiveWetFogAreas; // 0x1608
	TArray<ABravoHotelPickup*> DetectedItemList; // 0x1618
	float DefaultTargetArmLength_AOS; // 0x162c
	FTransform FPSK_CurrentCollideWeaponTransform; // 0x1630
	float FPSK_CameraHeight_Stand; // 0x1664
	float InputMovementAttenuationTime; // 0x1668
	FMulticastInlineDelegate OnChangeDetectedItems; // 0x1670
	float DescentZ; // 0x1684
	ABravoHotelMoveElevator* EnteredElevatorRef; // 0x1690
	UBravoHotelPerkComponent* PerkComponent; // 0x1698
	float SlidingStartTime; // 0x16a0
	int32_t IdleNum; // 0x16a4
	FAnimSlot EquipAnim_MainWeapon2; // 0x16a8
	float DescentCameraShakeDelay; // 0x16b8
	float ParachuteLandingVelocityZ; // 0x16bc
	UParticleSystemComponent* CloudFxInDescent; // 0x16c0
	UBravoHotelAbilityComponent* AbilityComponent; // 0x16c8
	float BloomStartDelayTimeInAirCraft; // 0x16d4
	TArray<ABravoHotelCharacter*> AIBot_SearchedEnemyList; // 0x16d8
	FAnimSlot EquipAnim_Melee_Prone; // 0x16e8
	TMap<EWeaponAttachmentItem, UCurveFloat*> FPSK_Curves_TunnelEffect; // 0x16f8
	FVector RagdollLocation; // 0x1748
	UPrimitiveComponent* DetectedInteractionComponet; // 0x1760
	float CurrentRollSpeed; // 0x176c
	float InitSpringArmLengthInAircraft; // 0x1770
	USphereComponent* InteractiveSphereComponent; // 0x1778
	float TargetFieldOfView; // 0x1780
	USkyLightComponent* SkyLightRef; // 0x1790
	float LeanValue; // 0x1798
	UAkAudioEvent* HeartBeatSensorNoiseEvent; // 0x17a0
	float BrokenEquipmentLevel; // 0x17a8
	ABravoHotelParachuteTriggerBox* ParachuteTriggerBox; // 0x17b0
	FMulticastInlineDelegate OnCompleteActiveSkillDelegate; // 0x17c0
	FMulticastInlineDelegate Delegate_OnExitFallingState; // 0x17d0
	AActor* DeathCamClass; // 0x17f0
	FVector DefaultSocketOffset_LeftAOS_Prone; // 0x17fc
	bool bIsCastingItem; // 0x1814
	ECustomMovementMode PrevCustomMovementMode; // 0x1815
	FAnimSlot CombineAnim_Stand; // 0x1818
	FVector DefaultSocketOffset_LeftAMP; // 0x1828
	TArray<UParticleSystemComponent*> BuffParticleComponents; // 0x1838
	float TargetSpringArmLengthDescent; // 0x1848
	float InputMovementAttenuationValueIdleToProne; // 0x1850
	FAnimSlot PickUpAnim_Pistol_Crouch; // 0x1858
	FName FPSK_CameraBone_Idle; // 0x187c
	UAkAudioEvent* MeteorJumpLandedAudioEvent; // 0x1888
	float Camera3P_Lean_InterpSpeed; // 0x1890
	float BackLightIntensity_ADS; // 0x1894
	FAnimSlot EquipAnim_Amplifier; // 0x1898
	FVector DefaultSocketOffset_LeftAOS_Crouch; // 0x18a8
	UCustomizableObjectInstance* Mutable_MaleInstance; // 0x18b8
	bool IsInReduceSpeedExplosionRange; // 0x18c0
	float FPSK_SwayAlpha; // 0x18c4
	bool bNeedToSpawnBrokenEquipment; // 0x18c8
	FAnimSlot LastCastingItemAnimSlot_Prone; // 0x18d0
	UParticleSystem* ParticleSystem_MeteorJump; // 0x18f0
	bool bFPSK_IsFPSMode; // 0x18fc
	UAkAudioEvent* AMPExitEvent; // 0x1900
	UPointLightComponent* CharacterBackLight; // 0x1908
	FTransform FPSK_IdleWeaponTransform; // 0x1910
	TArray<UInDoorVolumeComponent*> OverlappedInDoorVolumes; // 0x1940
	UAkAudioEvent* HitEvent; // 0x1950
	bool bIsEnterIndoorVolume; // 0x1958
	ABravoHotelWaterPhysicsVolume* OverlapWaterVolume; // 0x1960
	UAkAudioEvent* ADSExitEvent_Digital; // 0x1968
	FTimerHandle TimeHandle_Ultimate_Recon; // 0x1980
	UCustomizableObjectInstance* Mutable_FemaleInstance; // 0x1988
	UDataTable* SRsDamageTable; // 0x1998
	FVector DefaultSocketOffset_RightHipshot; // 0x19a4
	float MeteorJumpGravity; // 0x19b0
	float LastMeleeAttackTime; // 0x19b4
	float ReplayInputRightAxisValue; // 0x19b8
	UTeamInfoUpdaterComponent* TeamInfoUpdaterComponentRef; // 0x19c0
	FAnimSlot PickUpAnim_Unarmed_Crouch; // 0x19c8
	float ParachuteTurnChangeSpeedRoll; // 0x19d8
	UParticleSystem* BloodSplatterEffect; // 0x19e0
	FAnimSlot PickUpAnim_Unarmed_Floor; // 0x19e8
	UAkAudioEvent* SwimDiveEvent; // 0x19f8
	int32_t PerkDeckChangingCount; // 0x1a10
	float PrevBloomThreshold; // 0x1a14
	UAkAudioEvent* BreachingAudioEvent; // 0x1a18
	UCurveFloat* Curve_Sliding; // 0x1a20
	FAnimSlot SlidingAnim; // 0x1a28
	FAnimSlot PickUpAnim_Pistol_Table; // 0x1a40
	USkeletalMeshComponent* FPSK_Arms; // 0x1a50
	AActor* DetectedInteractionActor; // 0x1a58
	FRotator ADSDeltaRotation; // 0x1a64
	ULadderComponent* LadderComponent; // 0x1a70
	float MagneticDamagedDissolveAnimaitionMaxTime; // 0x1a7c
	FVector ParachuteCameraLocation; // 0x1a80
	bool bChangeNearClipPlane; // 0x1a90
	EMouseSensitivityState CurrentEMouseSensitivityState; // 0x1a91
	float CriticalTimeTickInterval; // 0x1a94
	TArray<UPrimitiveComponent*> MeshesToIgnore_Melee; // 0x1a98
	float Default3PFOV_AOS; // 0x1aa8
	FVector FPSK_CurrentCameraRelativeLocation; // 0x1aac
	TArray<FAnimSlot> DeathAnim_Crouch; // 0x1ac0
	FTimerHandle TimerHandle_WetFog; // 0x1ad0
	UParticleSystemComponent* BreathParticleComponent; // 0x1ad8
	UParticleSystemComponent* FlameDamageParticleComponent; // 0x1ae0
	UAkAudioEvent* StartBlackOutAudioEvent; // 0x1af0
	UCurveFloat* RadialOnDescentCurve; // 0x1af8
	bool bReplaceFreeLook; // 0x1b00
	float TargetArmLengthInterpSpeed_HeartBeatSensor; // 0x1b08
	UAkAudioEvent* ADSEnterEvent_Digital; // 0x1b10
	float MinDamageableFallingSpeedFromVehicle; // 0x1b18
	FAnimSlot MovementAnim_GetUpFromFront; // 0x1b20
	float FireToCameraLocationCorrection; // 0x1b38
	bool UsingPersonalSupplyBoxWeightMap; // 0x1b3c
	FVector DefaultSocketOffset_RightAOS_Prone; // 0x1b40
	FVector DescentCameraLocation; // 0x1b4c
	FTransform FPSK_ADS_DefaultWeaponTransform_CurrentSightCache; // 0x1b60
	float InteractionTraceDistance; // 0x1b90
	UBravoHotelDamageType* DebuffHitDamageType; // 0x1b98
	UCurveFloat* DamageCorrectValueByPenetrationDepthCurve; // 0x1ba8
	UBHStationaryCharInfo* StationaryCharInfo; // 0x1bb8
	float MaxDamageableFallingSpeed; // 0x1bd8
	UCurveVector* FPSK_Curve_Sway_Idle; // 0x1be0
	float FPSK_CameraProbe; // 0x1bec
	FAnimSlot UnequipAnim_SubWeapon; // 0x1bf0
	USceneComponent* CameraBase; // 0x1c00
	int32_t KillAssistMaxCount; // 0x1c08
	float HeadShotBloodEffectDistance; // 0x1c0c
	EWearableItemType BrokenEquipmentType; // 0x1c10
	UAnimMontage* AvoidHeadShotMontage; // 0x1c18
	float DamagedDissolveAnimationValue; // 0x1c20
	TArray<FAnimSlot> MeleeAnim_Rifle_Idle; // 0x1c28
	TArray<ABravoHotelAreaSkillZone*> ActiveForceFields; // 0x1c38
	FMulticastInlineDelegate Delegate_OnInSmoke; // 0x1c48
	float ParachuteEnableHieght; // 0x1c58
	float ReplayInputForwardAxisValue; // 0x1c5c
	FAnimSlot EquipAnim_MainWeapon1; // 0x1c60
	UCurveFloat* DustDissolveAnimationCurve; // 0x1c78
	float DescentMaxAcceleration; // 0x1c80
	float StandDeltaHeightCamera3P; // 0x1c84
	bool bShowAutoAimDebug; // 0x1c88
	float FPSK_CameraHeight_Crouch; // 0x1c8c
	float FPSK_SwayInterpSpeed; // 0x1c90
	FAnimSlot UnequipAnim_Melee_Prone; // 0x1c98
	float ParachuteMomentumAcc; // 0x1cac
	int32_t CurrentDamageCount; // 0x1cb4
	UAkAudioEvent* DamagedEvent; // 0x1cc0
	float OutlineThicknessInterpSpeed; // 0x1ccc
	int32_t BasicSetting_hair_color; // 0x1cd4
	float TargetHealth; // 0x1cd8
	UAkAudioEvent* AirWalkAudioEvent; // 0x1ce0
	FAnimSlot UnequipAnim_MainWeapon2; // 0x1ce8
	TArray<TSoftObjectPtr<UMaterialInterface>> ParachuteSkinMaterials; // 0x1d00
	float MagneticHitBlinkTime; // 0x1d10
	float NitroBoostTorqueScale; // 0x1d14
	float CurrentCameraModifyerX; // 0x1d18
	float AirWalkGravity; // 0x1d1c
	UCustomizableSkeletalComponent* FPSK_MutableArms; // 0x1d20
	FName CombineTargetRecipe; // 0x1d28
	float TeleportDisappearTime; // 0x1d30
	UParticleSystemComponent* RocketJumpTrailEffect; // 0x1d38
	bool bMovementInputLock; // 0x1d40
	UParkourComponent* ParkourComponent; // 0x1d48
	float PersonalSupplyBoxRePositionDistance; // 0x1d50
	float InputMovementAttenuationValueProneToIdle; // 0x1d80
	float ZoomAudioEventRepeatDelay; // 0x1da8
	TMap<UObject*, float> ShortTimeHealthMap; // 0x1db0
	UCameraPostProcessPreset* PostProcessDust; // 0x1e00
	UCurveVector* FPSK_Curve_Sway_Move_Default; // 0x1e08
	UParticleSystem* ParticleSystem_MeteorJumpTrail; // 0x1e10
	FRotator AttachInAircraftRotationOffset; // 0x1e18
	TArray<AActor*> SmokeActors; // 0x1e28
	FAnimSlot UnequipAnim_HeartBeatSensor; // 0x1e38
	UBravoHotelVoiceComponent* VoiceComponent; // 0x1e48
	float CameraInterpPlayRate; // 0x1e50
	FAnimSlot LandingAnim_Pistol; // 0x1e58
	UParticleSystem* ParticleSystem_Knockout; // 0x1e68
	TArray<ABravoHotelVehicle*> NearbyVehicles; // 0x1e70
	UAkAudioEvent* HeartBeatSensorExitEvent; // 0x1e80
	bool NeedFindPersonalSupplyBoxLocation; // 0x1e88
	FAnimSlot PickUpAnim_Unarmed_Table; // 0x1e90
	TMap<FName, int32_t> HitPartsIndex; // 0x1ea0
	FVector FPSK_CameraLocation_Idle; // 0x1efc
	bool IsPlayingDamage; // 0x1f08
	FAnimSlot DoorAnim_Open; // 0x1f10
	float StuntmanStartTime; // 0x1f20
	TMap<UObject*, float> InteractionDistRatioMap; // 0x1f28
	UBravoHotelCameraComponent* FPSK_Camera; // 0x1f78
	UParticleSystem* BreathParticle_Moving; // 0x1f80
	float ParachuteMomentumZ; // 0x1f88
	ABravoHotelSuperBarrier* SuperBarrierClass; // 0x1f90
	TArray<FAnimSlot> TakeDamageMontageList; // 0x1f98
	FAnimSlot MovementAnim_GetUpFromBack; // 0x1fa8
	ECustomMovementMode NewCustomMovementMode; // 0x1fbc
	int32_t PersonalSupplyBoxRePositionCount; // 0x1fd0
	TScriptInterface<IMaterialControllableInterface> ResurrectionMaterialController; // 0x1fd8
	TArray<AActor*> DetectedInteractionCancleActors; // 0x1fe8
	float ParachuteTargetArmLengthSpeedEnd; // 0x1ff8
	UStaticMeshComponent* FPSK_GripShadow; // 0x2010
	bool DamageReset; // 0x2018
	UCameraPostProcessPreset* PP_PickupOutlineRef; // 0x2020
	UCurveFloat* CurrentCameraCurve; // 0x2028
	float MaxRollInParachuteVelocity; // 0x204c
	FMulticastInlineDelegate Delegate_OnOutSmoke; // 0x2050
	UAkAudioEvent* BreachingAudioEvent_Silence; // 0x2060
	float ParachuteSocketOffsetY; // 0x2068
	float DescentAirControl; // 0x206c
	float CheckFreezeDistance; // 0x2070
	FVector Camera3PInterpSrc; // 0x2078
	bool IsEndTermTime; // 0x2084
	float DefaultCameraLag; // 0x2088
	UAkAudioEvent* RocketJumpLandedAudioEvent; // 0x2090
	FAnimSlot EquipAnim_ThrowingWeapon; // 0x2098
	bool IsBombing; // 0x20a8
	UAkAudioEvent* SteadyAimEndEvent; // 0x20c0
	float ParachuteTargetArmLengthSpeedStart; // 0x20c8
	float MinDamageableFallingSpeed; // 0x20e0
	FTransform FPSK_ADS_DefaultWeaponTransform; // 0x20f0
	FVector DefaultTargetOffset_AOS_Crouch_Idle; // 0x2120
	FVector AttachInAircraftOffset; // 0x212c
	UCurveFloat* Curve_CameraInterp; // 0x2138
	TArray<ABravoHotelProjectileGrenadeFlashbang*> ThrownFlashbangs; // 0x2148
	float KnockOutAssistValidTime; // 0x2158
	float CoolDownTimeForUseLadder; // 0x215c
	float ForceHeightToGetInParachuteFromLand; // 0x2160
	ABravoHotelAircraftFlight* AircraftFlightRef; // 0x2168
	bool bUpdateDeathRotation; // 0x2170
	UAkAudioEvent* GrenadeFlashBangStartEvent; // 0x2178
	float VelocityZ_LandStop; // 0x2180
	FVector Camera3PInterpDst; // 0x2184
	UCurveFloat* MagneticDamagedDissolveAnimationCurve; // 0x21a0
	UCurveFloat* DamagedDissolveAnimationCurve; // 0x21a8
	float ParachuteTurnChangeSpeedYaw; // 0x21b0
	TArray<FMutableData> MutableBuffList; // 0x21b8
	FMulticastInlineDelegate OnChangeFireType; // 0x21c8
	float FPSK_SwayAlphaMin; // 0x21e8
	float CurrentTeamPositionHeight; // 0x21ec
	UBravoHotelCameraComponent* Camera3P; // 0x21f0
	float DescentBlurWidth; // 0x21fc
	TArray<FAnimSlot> DeathAnim_Shotgun; // 0x2200
	UAkAudioEvent* MeteorJumpAudioEvent; // 0x2210
	FAnimSlot PickUpAnim_Rifle_Prone; // 0x2218
	int32_t ActiveSkillCount; // 0x2228
	TArray<ABravoHotelPickup*> DetectedItemHideList; // 0x2230
	UAkAudioEvent* SteelHelmetSound; // 0x2240
	FTransform FPSK_ADS_DefaultWeaponTransform_BasicSightCache; // 0x2250
	float PronedEyeHeight; // 0x2284
	TSoftClassPtr<UObject> SimulationBoxClass; // 0x2288
	int32_t CurrentTerrainType; // 0x22b0
	float InternalMagneticDamagedTermTime; // 0x22c0
	FTransform FPSK_CollideWeaponTransform; // 0x22d0
	UAnimMontage* CurrentPickupMontage; // 0x2300
	UParticleSystem* WindowBreachingParticle; // 0x2308
	UBravoHotelDoorComponent* DoorComponent; // 0x2310
	float DefaultsArmsLagRotationMax; // 0x2318
	float ParachuteAvailableFallingDistance; // 0x231c
	float KillAssistValidTime; // 0x2320
	FTimerHandle TimeHandle_MolotovDotDamage; // 0x2328
	float ParachuteLandingHeight; // 0x2330
	float MinTimeJumpingBeforeLand; // 0x2334
	bool bEnableCustomDepth; // 0x2338
	float ParachuteQuickLandingStartHeight; // 0x2348
	TArray<FAnimSlot> DeathAnim_Natural; // 0x2350
	TArray<FAnimSlot> MeleeAnim_Pistol_Idle; // 0x2380
	float FPSK_CameraPitchDeltaX; // 0x2394
	FTransform FPSK_CurrentWeaponTransform; // 0x23a0
	float Oxygen; // 0x23d0
	TArray<UAkAudioEvent*> AttachmentEquipEvents; // 0x23d8
	float ParachuteTurnChangeSpeedPitch; // 0x23ec
	UDataTable* PistolsDamageTable; // 0x23f0
	float SpeedSpringArmLengthDesecnt; // 0x23f8
	FMulticastInlineDelegate OnCharacterGroundStateChangeDelegate; // 0x2400
	bool bNeedToUpdateNitroBoost; // 0x2410
	FString NPCNickName; // 0x2418
	UWidgetComponent* TeamPosition; // 0x2428
	float DescentInputVectorAcc; // 0x2430
	UMaterialParameterCollection* MPC_WeaponFov; // 0x2438
	float ParachuteTurnSpeedRoll; // 0x2440
	bool IsBlind; // 0x2450
	FAnimSlot ConditionAnim_ShakeOut_Rifle; // 0x2458
	TArray<USkeletalMesh*> PendingReleaseMutableMesh_FPP; // 0x2478
	UParticleSystemComponent* StartBlackOutParticleComponent; // 0x2488
	float SeaLevelZ; // 0x2490
	UAkAudioEvent* CombineCompleteAudioEvent; // 0x24a0
	FVector MovementInputVector; // 0x24b0
	UParticleSystem* TeleportTraceFxTemplate; // 0x24c0
	float ArmsLagBaseModify; // 0x24cc
	FVector DefaultSocketOffset_VehicleAOS; // 0x24d0
	FAnimSlot UnequipAnim_MainWeapon2_Prone; // 0x24e0
	float AutoAimDistance; // 0x24f0
	float DamagedDissolveRateTime; // 0x24f4
	float ProneDamageScaleInRedZone; // 0x24f8
	FVector DefaultTargetOffset_AOS_Crouch_Lean; // 0x24fc
	bool bFinishMeteorJump; // 0x2508
	float PrevSkyLightIntensityCache; // 0x250c
	FVector BrokenEquipmentDamagedDirection; // 0x2510
	bool bIsUltimate_Recon; // 0x251c
	EMovementMode NewMovementMode; // 0x251e
	float MaxDamageableFallingSpeedFromVehicle; // 0x2520
	UCameraPostProcessPreset* PPInst_ShortHealth; // 0x2528
	FDisplayAbility CurrentDisplayAbility; // 0x2530
	TArray<TWeakObjectPtr<UBravoHotelPhysicalMaterial>> OverlappedPhysicMaterials; // 0x2548
	UAkAudioEvent* PlosiveSoundDetection3LvEvent; // 0x2560
	float FiredTimeCount; // 0x256c
	bool IsMagneticEndTermTime; // 0x2570
	float Ragdoll_ZOffset; // 0x2574
	UDataTable* PostProcessEffectsTable; // 0x2578
	FAnimSlot EquipAnim_Amplifier_Prone; // 0x2598
	FAnimSlot EquipAnim_SubWeapon_Prone; // 0x25a8
	float BushSoundSpawnDelay; // 0x25b8
	float ShowTimePostProcessOuterPlayZone; // 0x25c0
	float ArmsLagWeaponModify; // 0x25c4
	float ParachuteVelocityChangeFinalRate; // 0x25c8
	float AirWalkDuration; // 0x25cc
	UBHCharacterReplication* CharacterReplication; // 0x25d0
	UAkAudioEvent* SupplyBoxNotifyAlertOther; // 0x25e0
	bool bIsUltimateSprint; // 0x25e8
	UParticleSystemComponent* GodParticle; // 0x25f0
	FVector DefaultSocketOffset_LeftHipshot; // 0x25f8
	float InternalDustDissolveDelayTime; // 0x2604
	int32_t ActiveSkillInitIndex; // 0x2608
	UParticleSystem* GodEffect2; // 0x2610
	float ParachuteSocketDeltaOffsetZ; // 0x261c
	int8_t BoostPercent; // 0x2620
	TArray<ABravoHotelDropBoxActor*> DetectedBoxList; // 0x2628
	UCameraPostProcessPreset* AccelerationPPInst; // 0x2638
	TArray<FPerkInfo> CurrentPerkInfos; // 0x2640
	TArray<AActor*> UsedTrapList; // 0x2650
	FAnimSlot KnockbackRollingAnim; // 0x2660
	TArray<FMolotovFlameDotDamageInfo> FlameDamageInfos; // 0x2670
	UCameraPostProcessPreset* PostProcessMagneticHitClass; // 0x2680
	bool bEnabledFur; // 0x2688
	FTimerHandle CastingItemMontageTimer; // 0x2690
	bool bShouldAdjustOverHead; // 0x2698
	float CineDurationTimeMax; // 0x269c
	float GlidePitchInParachute; // 0x26a8
	float ParachuteInputRight; // 0x26ac
	UDataTable* SMGsDamageTable; // 0x26b0
	FAnimSlot EquipAnim_HeartBeatSensor; // 0x26b8
	bool DustReset; // 0x26c8
	FHitResult DebuffHitResult; // 0x26e0
	UPointLightComponent* CharacterBackLightSecond; // 0x2768
	FTimerHandle TimerHandle_CheckDetectedItemList; // 0x2770
	UAkAudioEvent* SteadyAimStartEvent; // 0x2780
	bool IsMagneticHit; // 0x27e0
	float OverHealHealth; // 0x27e4
	float SkyLightCurrentPriority; // 0x27e8
	float FPSK_CollideAngle; // 0x27f4
	float CurrentCameraModifyerY; // 0x27f8
	UDataTable* PerBoneDamageTable; // 0x2800
	int32_t UsingBackpackItemIndex; // 0x2808
	TMap<FName, FVector> Camera3P_DeltaTargetOffsets; // 0x2810
	TMap<ETargetHealthType, FTargetHealthInfo> TargetHealthMap; // 0x2860
	float DefaultTargetArmLength_Hipshot; // 0x28b0
	float UnarmedMeleeDamage_Jump; // 0x28c0
	float DefaultTargetArmLength_HeartBeatSensor; // 0x28c4
	UCurveVector* FPSK_Curve_Sway_Move; // 0x28c8
	bool bMeteorStrikeBlockingHit; // 0x28d0
	FVector RagdollVelocity; // 0x28d4
	UBravoHotelAnimInstanceFPP* AnimInstance_FPP; // 0x28e0
	float LastDamagedAmount; // 0x28e8
	float DescentXYAcc; // 0x28ec
	FVector DefaultTargetOffset_AOS_Stand_Idle; // 0x2944
	FTimerHandle TimerHandle_HurtCondition; // 0x2950
	float DamagedDissolveAnimaitionMaxTime; // 0x2964
	bool bLastMovementKeyPushed; // 0x2970
	FVector DefaultSocketOffset_LeftHeartBeatSensor; // 0x2974
	FAnimSlot PickUpAnim_Pistol_Prone; // 0x2988
	float Camera3P_FOV_InterpSpeed; // 0x2998
	float ParachuteQuickLandingDMGRate; // 0x29c0
	float RightAxisValue; // 0x29c4
	float LogIntervalTime; // 0x29c8
	FAnimSlot UnequipAnim_ThrowingWeapon; // 0x29d0
	float StandSprintDeltaHeightCamera3P; // 0x29e0
	char bIsMoving : 1; // 0x29e4
	float FlashBangAngle; // 0x2af0
	FVector LastSwayRotationOnSteadyAim; // 0x2af4
	UAkAudioEvent* AMPEnterEvent; // 0x2b00
	float InternalReduceCharacterSpeedTime; // 0x2b0c
	float AdsCameraInterpPlayRate; // 0x2b10
	UStaticMeshComponent* FPSK_TacticalAttachmentShadow; // 0x2b18
	UAkAudioEvent* HeartBeatSensorNoiseStopEvent; // 0x2b20
	float FPSK_TargetFOV; // 0x2b28
	FTimerHandle TimerHandle_NoCarLandingDamageToTeam; // 0x2b30
	float InternalHitBlinkTime; // 0x2b38
	UAkAudioEvent* AOSExitEvent; // 0x2b40
	float ParachuteLandingVelocityXY; // 0x2b48
	TArray<FBravoHotelItemPresetForBlackMarket> BlackMarketItemPresetList; // 0x2b50
	TArray<FPerkInfo> DefaultPerkInfo; // 0x2b60
	bool bDescentCameraShakeLoop; // 0x2b70
	UDataTable* DMRsDamageTable; // 0x2b78
	UCameraPostProcessPreset* PostProcessMagneticHit; // 0x2b80
	float ParachuteTurnSpeedPitch; // 0x2b88
	FVector DefaultSocketOffset_RightAOS_Idle; // 0x2b94
	FAnimSlot UnequipAnim_MainWeapon1_Prone; // 0x2bb0
	TArray<FString> UberUser; // 0x2bd0
	FAnimSlot MeleeAnim_Punch_Jump; // 0x2be0
	float ItemInterruptInputSeconds; // 0x2bf0
	EFireType FireTypeComplete; // 0x2bf4
	FAnimSlot UnequipAnim_Prone_ThrowingWeapon; // 0x2bf8
	UCameraPostProcessPreset* PostProcessWetFogClass; // 0x2c10
	float CriticalTimeLimitTime; // 0x2c1c
	float RocketJumpGravity; // 0x2c30
	bool HiddenSimulationBox; // 0x2c34
	float ShortTimeHealth; // 0x2c38
	bool MagneticDamageReset; // 0x2c3c
	FAnimSlot CurrentResuscitationAnimSlot; // 0x2c40
	char bForceMoving : 1; // 0x2c50
	FAreaSkillZoneInfo ForceFieldInfo; // 0x2c58
	USpringArmComponent* CameraAssistant3P; // 0x2c78
	FRotator FPSK_SwayRotationIdle; // 0x2c84
	bool bIsParachuteLanding; // 0x2c90
	UAkAudioEvent* GrenadeFragmentExplosionSineStopEvent; // 0x2c98
	UAkAudioEvent* BlueZoneDroneStopEvent; // 0x2ca0
	bool IsDissolve; // 0x2ca8
	FAnimSlot LandingAnim_LandStop; // 0x2cb0
	FTimerHandle TimerHandle_Sequnce; // 0x2cc0
	FVector DefaultTargetOffset_AOS_Stand_Lean; // 0x2cc8
	bool bApplyRagdollForce; // 0x2ce8
	float BackLightIntensity_FPP; // 0x2cec
	FAreaSkillZoneInfo BlackOutInfo; // 0x2cf0
	bool bIsMeleeAttackBlocked; // 0x2d10
	FVector DefaultSocketOffset_LeftAOS_Idle; // 0x2d14
	FTimeline Timeline_TunnelEffect; // 0x2d20
	float ThrowingWeaponFireDelay; // 0x2dbc
	bool bCanJumpMeleeAttack; // 0x2dc0
	FTimerHandle TimerHandle_MinTimeJumpingBeforeLand; // 0x2dc8
	int32_t KnockOutAssistMaxCount; // 0x2dd0
	FRotator ParachuteLastRotator; // 0x2dd4
	UCameraPostProcessPreset* AccelerationPPClass; // 0x2de0
	bool bNeedToUpdateUltimate_Driver; // 0x2de8
	UParticleSystem* ThrowingWeaponDirectHitEffect; // 0x2df0
	USkeletalMeshComponent* Parachute; // 0x2df8
	ABravoHotelInventoryCharacter* InventoryCharacter; // 0x2e00
	int32_t BasicSetting_face; // 0x2e08
	TArray<UAkAudioEvent*> CastingStopEvents; // 0x2e20
	UCurveFloat* FPSK_Curve_Sway_Scale_With_Fov; // 0x2e30
	UBravoHotelAnimInstance* AnimInstance; // 0x2e38
	FName FPSK_CameraBone_Parkour; // 0x2e40
	float InputMovementAttenuationTimeProneToIdle; // 0x2e48
	float CrouchedDeltaHeightCamera3P; // 0x2e4c
	TArray<FAnimSlot> MeleeAnim_Pistol_Crouch; // 0x2e68
	float TargetBloomIntensityInAirCraft; // 0x2e78
	ABravoHotelDoor* KickTargetDoor; // 0x2e80
	UAkAudioEvent* MedipackUseEvent; // 0x2e88
	float Default3PFOV_HeartBeatSensor; // 0x2e90
	UStaticMeshComponent* FPSK_SightShadow; // 0x2e98
	bool bIsMeleeJumpAttack; // 0x2ea0
	float BoltActionDelayTime; // 0x2ea4
	TArray<UAkAudioEvent*> WeaponEquipEvents; // 0x2eb8
	TArray<FAnimSlot> DeathAnim_Rifle; // 0x2ec8
	EPerkLevelUpType PerkLevelUpType; // 0x2edc
	FVector ADSEndLocation; // 0x2ee0
	ECharacterGroundState GroundStateBeforeSliding; // 0x2f18
	float ParachuteSpeed; // 0x2f20
	FRotator FPSK_SwayRotationDeltaForSteadyAim; // 0x2f24
	bool bIsSpectated; // 0x2f44
	float AutoAimRadius; // 0x2f48
	FVector ParachuteTargetCameraLocation; // 0x2f4c
	bool bFPSK_UseCustomCurve; // 0x2f58
	int32_t LogRequestSize; // 0x2f60
	FVector DefaultSocketOffset_RightLeanAMP; // 0x2f64
	FAnimSlot EquipAnim_Prone_ThrowingWeapon; // 0x2f70
	float TargetSpringArmLengthInAircraft; // 0x2f9c
	float InputMovementAttenuationTimeIdleToCrouch; // 0x3010
	float CineTextAnimationAppearTime; // 0x3014
	FVector StuntmanRollingDir; // 0x3068
	UCameraPostProcessPreset* PostProcessForceFieldClass; // 0x3078
	FVector DefaultSocketOffset_RightAMP; // 0x308c
	FAnimSlot UnequipAnim_Amplifier_Prone; // 0x30a8
	TArray<FName> DefaultBuffName; // 0x30b8
	float ZoomAudioEventLastPlayTime; // 0x30c8
	UParticleSystem* BreathParticle_Idle; // 0x30d0
	FVector FPSK_CameraLocation_Parkour; // 0x30d8
	FPerkInfo UltimatePerkInfo; // 0x30e8
	FAnimSlot LandingAnim_Rifle; // 0x3110
	bool IsOnDust; // 0x3128
	float ParachuteInputVectorAcc; // 0x3138
	FVector_NetQuantize ReplicatedParachuteVelocity; // 0x313c
	FMulticastInlineDelegate Delegate_OnEndSearchInstinct; // 0x3150
	USphereComponent* InteractiveCancleSphereComponent; // 0x3160
	float AdditionalTeamPositionWidgetHeight; // 0x3168
	FVector FPSK_CameraLocation_ADS; // 0x316c
	UParticleSystem* DoorBreachingParticle; // 0x3178
	ABravoHotelVehicle* NitroBoomTargetVehicle; // 0x3188
	UParticleSystemComponent* WaterParticleSystem; // 0x3190
	UCurveFloat* CurrentCameraHeightCurve; // 0x3198
	bool bIsAutoSprint; // 0x31a4
	UParticleSystem* ParticleSystem_RocketJump; // 0x31a8
	float MagneticDamagedDissolveAnimationValue; // 0x31b0
	float ReduceCharacterSpeedTime; // 0x31b4
	float FPSK_CollideAlpha; // 0x31b8
	bool bUpdateRenderSettings; // 0x31bc
	UBravoHotelAnimInstancePostprocess* PostprocessAnimInstance; // 0x31c0
	bool bAllowToggleCamera; // 0x31c8
	ABravoHotelPickup* LastPickup; // 0x31d0
	float LeanUpdateSpeed; // 0x31d8
	float BandageTargetHealth; // 0x31f0
	int32_t BasicSetting_face_color; // 0x31f8
	bool IsDustDissolve; // 0x31fc
	UAkAudioEvent* BlueZoneFreezeStopEvent; // 0x3200
	float FPSK_CameraLocation_CollideAlpha; // 0x3208
	FVector CriticalTimeMeshLocaiton; // 0x320c
	float SaveMaxWalkSpeed; // 0x3218
	float SaveCameraBoomLocationZ; // 0x321c
	ENetworkSmoothingMode PrevNetworkSmoothingMode; // 0x3220
	bool bIsArmedBeforeAction; // 0x3230
	UAkAudioEvent* PickUpBackpackEvent; // 0x3238
	bool bIsParachuteAvailable; // 0x3240
	FRotator ArmsLagRotation; // 0x3248
	FAnimSlot EquipAnim_MainWeapon2_Prone; // 0x3268
	bool bWantsToAOS; // 0x3278
	float RequestResuscitationCoolTime; // 0x3288
	UDataTable* ShotgunsDamageTable; // 0x3290
	UCameraPostProcessPreset* PostProcessDustClass; // 0x3298
	UAkAudioEvent* SnowAreaEnteringEvent; // 0x32a0
	UAkAudioEvent* BreathStartEvent; // 0x32a8
	float CurrentOutlineThickness; // 0x32b0
	float ParachuteInputForward; // 0x32b4
	float ArmsLagDeltaMin; // 0x32b8
	FVector Camera1PInterpSrc; // 0x32bc
	float StartFireTime; // 0x32c8
	float ParachuteAirControl; // 0x32cc
	FAnimSlot RepairAnim_Stand; // 0x32d0
	float MaxOutlineThickness; // 0x32e0
	FName LevelUpEffectBuffName; // 0x32e4
	UAkAudioEvent* ItemDropEvent; // 0x32f0
	FVector DefaultSocketOffset_RightLeanAOS; // 0x32f8
	float InputMovementAttenuationValue; // 0x3308
	float FPSK_CameraHeight_Prone; // 0x330c
	float DefaultTargetArmLength_AMP; // 0x3310
	UParticleSystem* HeadShotHelmetFxEmitterTemplate; // 0x3318
	UAkAudioEvent* GrenadeFlashBangEndEvent; // 0x3320
	UBravoHotelVehicleSeatComponent* PreviousVehicleSeat; // 0x3328
	FAnimSlot PickUpAnim_Rifle_Crouch; // 0x3330
	float Default3PFOV_AMP; // 0x3340
	bool bPendingOpenDoor; // 0x3344
	UCameraPostProcessPreset* PostProcessBlueZoneHitClass; // 0x3348
	TArray<FAnimSlot> DeathAnim_Falling; // 0x3350
	FRepSimulatedHittedDamage RepSimulatedHittedDamage; // 0x3360
	FAnimSlot EquipAnim_SubWeapon; // 0x33a0
	bool IsHit; // 0x33b4
	FCompletedCasting CompletedCastingInfo; // 0x33cc
	UCameraShake* DescentCameraShake; // 0x33d8
	bool bSteadyAim; // 0x33e0
	FVector2D SprintingRange; // 0x33e8
	float Health; // 0x33f0
	bool IsMagneticDissolve; // 0x33f5
	UAkAudioEvent* ZoomOutAudioEvent_Digital; // 0x33f8
	float GetPerkOnStartTime; // 0x3400
	UBravoHotelDamageType* LastDamagedType; // 0x3408
	UCameraPostProcessPreset* PP_Preset_PickupOutline; // 0x3420
	UAnimationAsset* DeathAnim_ClosedEyes; // 0x3428
	UParticleSystem* ParticleSystem_RocketJumpLanded; // 0x3460
	TArray<FAnimSlot> MeleeAnim_Rifle_Crouch; // 0x3470
	TMap<EWeaponAttachmentItem, UCurveFloat*> Curve_TunnelEffect; // 0x3480
	float DustDissolveAnimationValue; // 0x34d4
	TArray<UAkAudioEvent*> ConsumablesEvents; // 0x34d8
	UBravoHotelActionComponent* ActionComponent; // 0x34e8
	FAnimSlot DoorAnim_Close; // 0x3508
	FAreaSkillZoneInfo WetFogInfo; // 0x3518
	int32_t DissolveCount; // 0x353c
	float ParachuteVelocityChangeZDecRate; // 0x3540
	float ADSReturnEnableTime; // 0x3544
	float HitBlinkTime; // 0x354c
	FTimerHandle TimerHandle_BreathEffect; // 0x3550
	UAkAudioEvent* ZoomInAudioEvent_Digital; // 0x3558
	UAkAudioEvent* StartBomingEvent; // 0x3560
	UCurveFloat* Curve_AdsCameraInterp; // 0x3568
	float CheckDroneDistance; // 0x3590
	int32_t LogSize; // 0x3598
	float PreShootDeltaSecond; // 0x359c
	float ParachuteDeacceleration; // 0x35a0
	FAnimSlot PickUpAnim_Rifle_Floor; // 0x35a8
	UStaticMeshComponent* FPSK_StockShadow; // 0x35b8
	TArray<FAnimSlot> DeathAnim_FlameDamage; // 0x35c8
	bool bNeedToUpdatePreviewPawn; // 0x35d8
	TArray<FAnimSlot> MeleeAnim_Punch_Idle; // 0x35e0
	bool bIsSliding_Local; // 0x35f0
	bool bFixFPPFoV; // 0x35f8
	float InternalMagneticHitBlinkTime; // 0x35fc
	FVector DefaultSocketOffset_LeftLeanHeartBeatSensor; // 0x3604
	float SteadyPoint; // 0x3610
	FTimerHandle CastingItemTimer; // 0x3618
	UCurveFloat* ResurrectionEffectCurve; // 0x3620
	bool UsingSimulationBox; // 0x3628
	float ParachuteForwardMomentum; // 0x3680
	float ResurrectionCameraBlendTime; // 0x3684
	int32_t BasicSetting_makeup; // 0x3688
	FColor PrevSkyLightOcclusionTintCache; // 0x368c
	bool bWantsToFire; // 0x3690
	float ParachuteQuickLandingStartRadius; // 0x3694
	float CurrentParachuteMaxMomentum; // 0x369c
	FBravoHotelDefaultItemSetting DefaultItemSetting; // 0x36a0
	FAnimSlot Prone_FlameDotDamageAnim; // 0x36e0
	UParticleSystem* FlameDamageParticle; // 0x36f0
	float InputMovementAttenuationTimeIdleToProne; // 0x3700
	TArray<FInventoryItemInfo> BasicSettingItemInfos; // 0x3748
	FVector NitroBoomTargetLocation; // 0x3758
	FAnimSlot ConditionAnim_ShakeOut_Unarmed; // 0x3768
	float CooldownTimeForEnterVehicle; // 0x3778
	UCameraPostProcessPreset* PostProcessBlackOutClass; // 0x3780
	FPerkUIInfo UltimateUIInfo; // 0x3788
	float ReturnCameraLag; // 0x37b4
	EMovementMode PrevMovementMode; // 0x37b8
	float FPSK_TargetADSAlpha; // 0x37c0
	ABravoHotelInventoryCharacter* InventoryCharacterClass; // 0x37d0
	float FPSK_AOSFOV; // 0x37d8
	bool bPendingStopSliding; // 0x37dc
	float VelocityZ_Falling; // 0x37e0
	float MinPitchInParachute; // 0x37e4
	EPhysicalSurface SurfaceType_LastTick; // 0x37e8
	float ParachuteMaxMomentum; // 0x37ec
	UParticleSystemComponent* ParticleSystemComponent_Sliding; // 0x37f0
	UBravoHotelSTMComponent* STMComponent; // 0x37f8
	bool UsingPersonalSupplyBoxRePosition; // 0x3800
	UAkAudioEvent* BlueZoneDroneEvent; // 0x3808
	TArray<ABravoHotelProjectileGrenadeMolotovCocktail*> ThrownMolotovCocktails; // 0x3818
	float DescentStartZPosition; // 0x3828
	FTimerHandle TimeHandle_RequestBuildingInfo; // 0x3830
	UCameraPostProcessPreset* PostProcessResurrectionClass; // 0x3838
	float DeathBeginTime; // 0x3840
	float CameraFocusDistanceAOS; // 0x3848
	UCameraPostProcessPreset* PostProcessBloodHitClass; // 0x3850
	FVector DefaultSocketOffset_RightAOS_Crouch; // 0x3858
	FAnimSlot RepairAnim_Prone; // 0x3870
	float HeartBeatSensorFocusDistance; // 0x3880
	FTimerHandle TimerHandle_OuterPlayZone; // 0x3888
	UCameraShake* ParachuteUnfoldCameraShake; // 0x3898
	float Default3PFOV; // 0x38a0
	FWetFogZoneInfo WetFogZoneInfo; // 0x38a4
	UParticleSystem* GodEffect1; // 0x38b0
	UAkAudioEvent* UltimateSprintEvent; // 0x38b8
	ELeanState PrevLeanState; // 0x38c0
	FAnimSlot EquipAnim_Melee; // 0x38c8
	UAkAudioEvent* ADSExitEvent; // 0x38e0
	float FPSK_StartFOV_Delta; // 0x38e8
	UBHPersonalSupplySystemComponent* PersonalSupplySystemComponent; // 0x38f0
	float PrevBloomIntensity; // 0x38f8
	float PosToGetInParachute; // 0x38fc
	UDataTable* ARsDamageTable; // 0x3900
	float ForwardMomentumRangeMax; // 0x3920
	UParticleSystem* ParticleSystem_Sliding; // 0x3928
	FVector FPSK_CameraLocation_LeftLeanDelta; // 0x3930
	UParticleSystem* ParticleSystem_RocketJumpTrail; // 0x3940
	UDataTable* MeleeDamageTable; // 0x3948
	int32_t BasicSetting_hair; // 0x3960
	float ParachuteMaxAcceleration; // 0x3964
	FBravoHotelTakeDamageInfo LastSimulatedTakeDamageInfo; // 0x3968
	UAkAudioEvent* AOSEnterEvent; // 0x39b0
	FMulticastInlineDelegate OnAirCraftDelegate; // 0x39c0
	FAnimSlot UnequipAnim_Amplifier; // 0x39d0
	float DefaultsArmsLagRotationSpeed; // 0x39e0
	TArray<UMeshComponent*> FPSK_WeaponAttachments; // 0x39e8
	UAkAudioEvent* ADSEnterEvent; // 0x39f8
	UPlayerInventoryComponent* InventoryComponent; // 0x3a08
	FAnimSlot AnimSlot_Ultimate_Recon; // 0x3a10
	TArray<ABravoHotelCharacter*> DetectedStealableList; // 0x3a20
	FAnimSlot PickUpAnim_Rifle_Table; // 0x3a30
	TArray<FAnimSlot> DeathAnim_Sprint; // 0x3a40
	FVector LastQuickLandingAllowedLocation; // 0x3a50
	UMaterialInterface* CurrentParachuteSkin; // 0x3a60
	UAkAudioEvent* BlueZoneFreezeEvent; // 0x3a68
	float FPSK_SwayAlphaMax; // 0x3a70
	float DamagedTermTime; // 0x3a94
	FTransform FPSK_ADS_WeaponTransform; // 0x3aa0
	FAnimSlot PickUpAnim_Unarmed_Prone; // 0x3ad0
	float OverHeadTraceDistance; // 0x3ae8
	float InputMovementAttenuationValueIdleToCrouch; // 0x3aec
	float FPSK_ADSAlpha; // 0x3af0
	UParticleSystem* TeleportFxTemplate; // 0x3af8
	int32_t BasicSetting_gender; // 0x3b00
	EBuffEventType CurrentSkillType; // 0x3b04
	FMulticastInlineDelegate OnChangeProjectilePredictPath; // 0x3b08
	FSecuredVariablesCache SecuredCache; // 0x3b18
	UCameraPostProcessPreset* PostProcessBloodHit; // 0x3b20
	float ArmsLagDeltaMax; // 0x3b28
	UCameraPostProcessPreset* PostProcessFlashBangClass; // 0x3b30
};

struct UBravoHotelVehicleMovementComponent : UWheeledVehicleMovementComponentMotor {
	FMulticastInlineDelegate OnWheelFloated; // 0x3f8
	FMulticastInlineDelegate OnWheelLanded; // 0x408
	FMulticastInlineDelegate OnFloatingInAirChanged; // 0x418
	FMulticastInlineDelegate OnWheelTypeChanged; // 0x428
	FMulticastInlineDelegate OnSteeringInputChanged; // 0x438
	FRepVehicleControlStates RepControlStates; // 0x480
	ABravoHotelPlayerController* PxAuthority; // 0x490
	TArray<UVehicleWheel*> GroundWheelClasses; // 0x498
	TArray<UVehicleWheel*> InwaterWheelClasses; // 0x4a8
	TArray<UVehicleWheel*> WreckedWheelClasses; // 0x4b8
	EVehicleWheelType DefaultWheelType; // 0x4c8
	UParticleSystem* ParticleIntoWater; // 0x4d0
	float DefaultDamping; // 0x4d8
	float DefaultAngularDamping; // 0x4dc
	float DefaultDampSpeed; // 0x4e0
	float WaterDamping; // 0x4e4
	float WaterDampSpeed; // 0x4e8
	float WaterFloodedDamping; // 0x4ec
	float ChangingModeDamping; // 0x4f0
	float ChangingModeDampSpeed; // 0x4f4
	float StuntDamping; // 0x4f8
	float StuntDampSpeed; // 0x4fc
	bool bUseAirControl; // 0x500
	float InAirRollForce; // 0x504
	float InAirPitchForce; // 0x508
	bool bIsInWater; // 0x522
	bool bOverridesPhysicsNetCorrection; // 0x523
	FVehicleErrorCorrection NetErrorCorrection; // 0x524
	char AliveWheelMask; // 0x570
	float ParkingBrakeInput; // 0x574
	float SideBrakeInput; // 0x578
	TArray<TWeakObjectPtr<UBravoHotelVehicleWheelProxy>> WheelProxies; // 0x580
	bool bUseBooster; // 0x5e0
	UCurveFloat* MinNormalizedTireloadFilteredCurveOnBoosting; // 0x5e8
	UCurveFloat* MaxNormalizedTireloadFilteredCurveOnBoosting; // 0x5f0
	float TorqueScaleOnBoosting; // 0x5f8
	float MaxRPMOnBoosting; // 0x5fc
	bool bIsBoosting; // 0x600
	AController* LastOverrideController; // 0x608
};

struct UParticleModuleSize : UParticleModuleSizeBase {
	FRawDistributionVector StartSize; // 0x30
};

struct AReflectionCapture : AActor {
	UReflectionCaptureComponent* CaptureComponent; // 0x328
};

struct UChaosPhysicalMaterial : UObject {
	float Friction; // 0x28
	float StaticFriction; // 0x2c
	float Restitution; // 0x30
	float LinearEtherDrag; // 0x34
	float AngularEtherDrag; // 0x38
	float SleepingLinearVelocityThreshold; // 0x3c
	float SleepingAngularVelocityThreshold; // 0x40
};

struct USceneCaptureComponent : USceneComponent {
	ESceneCapturePrimitiveRenderMode PrimitiveRenderMode; // 0x230
	char bTonemapPropagateAlpha : 1; // 0x231
	char bUsePostProcessMaterial : 1; // 0x231
	char bUseDirectionalLights : 1; // 0x231
	ESceneCaptureSource CaptureSource; // 0x232
	char bCaptureEveryFrame : 1; // 0x233
	char bCaptureOnMovement : 1; // 0x233
	bool bAlwaysPersistRenderingState; // 0x234
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenComponents; // 0x238
	TArray<AActor*> HiddenActors; // 0x248
	TArray<TWeakObjectPtr<UPrimitiveComponent>> ShowOnlyComponents; // 0x258
	TArray<AActor*> ShowOnlyActors; // 0x268
	float LODDistanceFactor; // 0x278
	float MaxViewDistanceOverride; // 0x27c
	int32_t CaptureSortPriority; // 0x280
	bool bUseRayTracingIfEnabled; // 0x284
	TArray<FEngineShowFlagsSetting> ShowFlagSettings; // 0x288
	FString ProfilingEventName; // 0x2a8
};

struct ULightmassPortalComponent : USceneComponent {
	UBoxComponent* PreviewBox; // 0x230
};

struct UMaterialExpressionConstant4Vector : UMaterialExpression {
	FLinearColor Constant; // 0x40
};

struct UMaterialExpressionFloor : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UInterpTrackInstLinearColorProp : UInterpTrackInstProperty {
	FLinearColor ResetColor; // 0x58
};

struct UParticleModuleLocationDirect : UParticleModuleLocationBase {
	FRawDistributionVector Location; // 0x30
	FRawDistributionVector LocationOffset; // 0x78
	FRawDistributionVector ScaleFactor; // 0xc0
	FRawDistributionVector Direction; // 0x108
};

struct UAISystem : UAISystemBase {
	FSoftClassPath PerceptionSystemClassName; // 0x58
	FSoftClassPath HotSpotManagerClassName; // 0x70
	float AcceptanceRadius; // 0x88
	float PathfollowingRegularPathPointAcceptanceRadius; // 0x8c
	float PathfollowingNavLinkAcceptanceRadius; // 0x90
	bool bFinishMoveOnGoalOverlap; // 0x94
	bool bAcceptPartialPaths; // 0x95
	bool bAllowStrafing; // 0x96
	bool bEnableBTAITasks; // 0x97
	bool bAllowControllersAsEQSQuerier; // 0x98
	bool bEnableDebuggerPlugin; // 0x99
	bool bForgetStaleActors; // 0x9a
	ECollisionChannel DefaultSightCollisionChannel; // 0x9b
	UBehaviorTreeManager* BehaviorTreeManager; // 0xa0
	UEnvQueryManager* EnvironmentQueryManager; // 0xa8
	UAIPerceptionSystem* PerceptionSystem; // 0xb0
	TArray<UAIAsyncTaskBlueprintProxy*> AllProxyObjects; // 0xb8
	UAIHotSpotManager* HotSpotManager; // 0xc8
	UNavLocalGridManager* NavLocalGrids; // 0xd0
};

struct UWidgetAnimation : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x348
	TArray<FWidgetAnimationBinding> AnimationBindings; // 0x350
	bool bLegacyFinishOnStop; // 0x360
	FString DisplayLabel; // 0x368
};

struct ULevelVariantSets : UObject {
	UObject* DirectorClass; // 0x28
	TArray<UVariantSet*> VariantSets; // 0x30
};

struct UMovieSceneCinematicShotSection : UMovieSceneSubSection {
	FString ShotDisplayName; // 0x158
	FText DisplayName; // 0x168
};

struct UMaterialExpressionPreviousFrameSwitch : UMaterialExpression {
	FExpressionInput CurrentFrame; // 0x40
	FExpressionInput PreviousFrame; // 0x54
};

struct USlateWidgetStyleAsset : UObject {
	USlateWidgetStyleContainerBase* CustomStyle; // 0x28
};

struct URichTextBlock : UTextLayoutWidget {
	FText Text; // 0x128
	UDataTable* TextStyleSet; // 0x140
	TArray<URichTextBlockDecorator*> DecoratorClasses; // 0x148
	bool bOverrideDefaultStyle; // 0x158
	FTextBlockStyle DefaultTextStyleOverride; // 0x160
	float MinDesiredWidth; // 0x3c8
	TArray<URichTextBlockDecorator*> InstanceDecorators; // 0x638
};

struct UMaterialExpressionBentNormalCustomOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UImgMediaSettings : UObject {
	FFrameRate DefaultFrameRate; // 0x28
	float CacheBehindPercentage; // 0x30
	float CacheSizeGB; // 0x34
	int32_t CacheThreads; // 0x38
	int32_t CacheThreadStackSizeKB; // 0x3c
	float GlobalCacheSizeGB; // 0x40
	bool UseGlobalCache; // 0x44
	uint32_t ExrDecoderThreads; // 0x48
	FString DefaultProxy; // 0x50
	bool UseDefaultProxy; // 0x60
};

struct UUW-PlayerIconWidget_OnFire_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Anim_OnFire; // 0x250
	UImage* FireLine; // 0x258
};

struct UBP-BlackmarketSaveGame_C : USaveGame {
	bool bHideWorkInProgress; // 0x28
	EBlackmarketTabType MainTab; // 0x29
	EWeaponType WeaponSubTab; // 0x2a
	EWeaponAttachmentType AttachmentSubTab; // 0x2b
	EWearableItemType WearableSubTab; // 0x2c
	EWearableItemType CustomSubTab; // 0x2d
	EWearableItemType GearSubTab; // 0x2e
};

struct UUW-Inventory_PerkSlot_C : UBravoHotelInventoryPerkSlotWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2a0
	UWidgetAnimation* LevelUp; // 0x2a8
	UImage* Blank_SkillBG; // 0x2b0
	UImage* Get_SkillBG; // 0x2b8
	UImage* IMG_CoolTime; // 0x2c0
	UImage* IMG_PerkIcon; // 0x2c8
	UKeyImageWidget_C* KeyImageWidget; // 0x2d0
	UImage* Lv1; // 0x2d8
	UImage* Lv2; // 0x2e0
	UImage* Lv3; // 0x2e8
	UOverlay* Over_CoolTime; // 0x2f0
	UTextBlock* T_CoolTime; // 0x2f8
	UTextBlock* T_PerkName; // 0x300
	UWidgetSwitcher* WidgetSwitcher_Icon; // 0x308
	bool bHover; // 0x310
	float CurrentExpPercent; // 0x314
	int32_t CurrentLevel; // 0x318
	int32_t LastLevel; // 0x31c
	float TargetExpPercent; // 0x320
	float ExpSpeed; // 0x324
	FPerkData PerkData; // 0x328
	float CurrentLevelPercent; // 0x408
	int32_t MaxLevel; // 0x40c
	UUW-Inventory_ItemSlotHover_C* HoverWidget; // 0x410
	TArray<UImage*> LvArray; // 0x418
};

struct ABravoHotelArmoryMeshActor : AActor {
	UStaticMeshComponent* ArmoryMesh; // 0x328
	FTransform DefaultTransform; // 0x330
	FVector LocationOffset; // 0x360
	FRotator RotationOffset; // 0x36c
	FVector ScaleOffset; // 0x378
};

struct UMKActorChannelEx : UChannel {
	UActorChannel* SelfActorChannel; // 0xa0
};

struct ULowEntryByteDataWriter : UObject {
	TArray<char> Bytes; // 0x28
};

struct UMovieSceneVectorTrack : UMovieScenePropertyTrack {
	int32_t NumChannelsUsed; // 0x88
};

struct UBTDecorator_TagCooldown : UBTDecorator {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
	bool bActivatesCooldown; // 0x75
};

struct UUW-Lobby_ItemName_C : UUserWidget {
	UHorizontalBox* HorizontalBox_Rarity; // 0x248
	UTextBlock* T_WeaponName; // 0x250
};

struct AActor : UMKActorEx {
	char bBlockInput : 1; // 0x90
	char bHidden : 1; // 0x90
	char bIsEditorOnlyActor : 1; // 0x90
	char bCanBeInCluster : 1; // 0x90
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x91
	char bNetLoadOnClient : 1; // 0x92
	FMulticastSparseDelegate OnEndPlay; // 0xa8
	char bCanBeDamaged : 1; // 0xa9
	float NetUpdateFrequency; // 0xac
	FMulticastSparseDelegate OnActorBeginOverlap; // 0xc0
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0xc2
	float CustomTimeDilation; // 0xc4
	char bAutoDestroyWhenFinished : 1; // 0xc8
	char bAlwaysRelevant : 1; // 0xc8
	char bCollideWhenPlacing : 1; // 0xc8
	FActorTickFunction PrimaryActorTick; // 0xd0
	float NetCullDistanceSquared; // 0x100
	USceneComponent* RootComponent; // 0x108
	char bRelevantForNetworkReplays : 1; // 0x110
	FMulticastSparseDelegate OnInputTouchBegin; // 0x120
	char bReplicates : 1; // 0x121
	EAutoReceiveInput AutoReceiveInput; // 0x122
	char bRelevantForLevelBounds : 1; // 0x123
	FMulticastSparseDelegate OnClicked; // 0x124
	ENetDormancy NetDormancy; // 0x125
	char bEnableRerunConstructionScript : 1; // 0x126
	char bNetUseOwnerRelevancy : 1; // 0x126
	APawn* Instigator; // 0x128
	FMulticastSparseDelegate OnTakePointDamage; // 0x130
	FMulticastSparseDelegate OnBeginCursorOver; // 0x131
	char bActorSeamlessTraveled : 1; // 0x132
	FMulticastSparseDelegate OnActorEndOverlap; // 0x133
	char bTearOff : 1; // 0x134
	ENetRole RemoteRole; // 0x135
	float NetPriority; // 0x138
	float MinNetUpdateFrequency; // 0x13c
	char bReplicateMovement : 1; // 0x144
	FRepMovement ReplicatedMovement; // 0x148
	FMulticastSparseDelegate OnDestroyed; // 0x17c
	char bNetStartup : 1; // 0x17d
	TArray<AActor*> Children; // 0x180
	char bEnableAutoLODGeneration : 1; // 0x190
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x190
	char bIgnoresOriginShifting : 1; // 0x190
	UInputComponent* InputComponent; // 0x198
	FMulticastSparseDelegate OnEndCursorOver; // 0x1a0
	FName NetDriverName; // 0x1a4
	FMulticastSparseDelegate OnActorHit; // 0x1ac
	int32_t NetTag; // 0x1b0
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x1b8
	TArray<UActorComponent*> InstanceComponents; // 0x1c8
	float InitialLifeSpan; // 0x1dc
	FMulticastSparseDelegate OnInputTouchLeave; // 0x1e0
	TArray<UObject*> LoadedObjects; // 0x1e8
	FMulticastSparseDelegate OnInputTouchEnd; // 0x1f8
	TArray<FName> Tags; // 0x200
	char bAllowTickBeforeBeginPlay : 1; // 0x210
	char bOnlyRelevantToOwner : 1; // 0x210
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x218
	char bFindCameraComponentWhenViewTarget : 1; // 0x22c
	FMulticastSparseDelegate OnInputTouchEnter; // 0x22d
	char bReplayRewindable : 1; // 0x22e
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x230
	char bActorEnableCollision : 1; // 0x238
	int32_t InputPriority; // 0x23c
	FMulticastSparseDelegate OnTakeAnyDamage; // 0x240
	FRepAttachment AttachmentReplication; // 0x248
	FMulticastSparseDelegate OnReleased; // 0x288
	TArray<FName> Layers; // 0x290
	char bActorIsBeingDestroyed : 1; // 0x2b8
	ENetRole Role; // 0x2b9
	AActor* Owner; // 0x2c0
	char bExchangedRoles : 1; // 0x2c8
	char bNetTemporary : 1; // 0x2c8
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x320
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x321
	FMulticastSparseDelegate OnTakeRadialDamage; // 0x322
};

struct ABP-OutGameParachute_C : ABravoHotelOutGameParachuteActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	USkeletalMeshComponent* ParachuteBag_SkeletalMesh; // 0x330
	USkeletalMeshComponent* Parachute_SkeletalMesh; // 0x338
	USceneComponent* DefaultSceneRoot; // 0x340
};

struct URuntimeVirtualTextureComponent : USceneComponent {
	URuntimeVirtualTexture* VirtualTexture; // 0x230
	bool bUseStreamingLowMipsInEditor; // 0x238
	AActor* BoundsSourceActor; // 0x240
};

struct UUW-Lobby_ComboBoxItem_C : UUserWidget {
	UTextBlock* TXT-Item; // 0x248
};

struct UUW-InteractionWidget_C : UBravoHotelInteractionWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* UpArrow; // 0x250
	UWidgetAnimation* InteractivePopup_motion; // 0x258
	UTextBlock* AmmoCnt; // 0x260
	UImage* AmmoDown; // 0x268
	UImage* AmmoUp; // 0x270
	UTextBlock* Attack; // 0x278
	UImage* AttackDown; // 0x280
	UImage* AttackUp; // 0x288
	UWrapBox* BuffListWithText; // 0x290
	UCanvasPanel* CanvasPanel_17; // 0x298
	UCanvasPanel* CP_Key; // 0x2a0
	UWidgetSwitcher* CustomWidgetSwitcher; // 0x2a8
	UImage* fill; // 0x2b0
	UTextBlock* Firingrate; // 0x2b8
	UImage* FiringrateDown; // 0x2c0
	UImage* FiringrateUp; // 0x2c8
	UHorizontalBox* HB_BuffList; // 0x2d0
	UHorizontalBox* HorizontalBox_Rarity; // 0x2d8
	UHorizontalBox* HorizontalBox_WeaponRarity; // 0x2e0
	UImage* Image; // 0x2e8
	UImage* Image_4; // 0x2f0
	UImage* Image_10; // 0x2f8
	UImage* Image_152; // 0x300
	UImage* Image_ItemIcon; // 0x308
	UImage* Image_WeaponLock; // 0x310
	UCanvasPanel* Interactive; // 0x318
	UImage* ItemBg_01; // 0x320
	UKeyImageWidget_C* Key_Bomb; // 0x328
	UKeyImageWidget_C* KeyImageWidget_C_1; // 0x330
	UImage* NeedItem; // 0x338
	UImage* PickUpBg; // 0x340
	USizeBox* PickupItem; // 0x348
	UTextBlock* Range; // 0x350
	UImage* RangeDown; // 0x358
	UImage* RangeUp; // 0x360
	URichTextBlock* RichT_Action; // 0x368
	URichTextBlock* RichT_ActionDescription; // 0x370
	USizeBox* SizeBox_WeaponOwner; // 0x378
	UTextBlock* Stability; // 0x380
	UImage* StabilityDown; // 0x388
	UImage* StabilityUp; // 0x390
	UWidgetSwitcher* Switcher_Item; // 0x398
	UTextBlock* T_BombCancel; // 0x3a0
	UTextBlock* T_ComparingWeaponName; // 0x3a8
	UTextBlock* T_PickupItemName; // 0x3b0
	UTextBlock* T_WeaponName; // 0x3b8
	UTextBlock* Text_CombineTarget; // 0x3c0
	UTextBlock* TextBlock_5; // 0x3c8
	UUW-InteractionWidget_WeaponPerkSlot_C* UW-InteractionWidget_WeaponPerkSlot; // 0x3d0
	UUW-InteractionWidget_WeaponPerkSlot_C* UW-InteractionWidget_WeaponPerkSlot_2; // 0x3d8
	UUW-InteractionWidget_WeaponPerkSlot_C* UW-InteractionWidget_WeaponPerkSlot_3; // 0x3e0
	UUW-Inventory_ItemSlotHover_WeaponSlot_C* UW-Inventory_ItemSlotHover_WeaponSlot; // 0x3e8
	UUW-Inventory_ItemSlotHover_WeaponSlot_C* UW-Inventory_ItemSlotHover_WeaponSlot_C_2; // 0x3f0
	UUW-Inventory_ItemSlotHover_WeaponSlot_C* UW-Inventory_ItemSlotHover_WeaponSlot_C_3; // 0x3f8
	UVerticalBox* VerticalBox_CombineTarget; // 0x400
	UVerticalBox* VerticalBox_StatUp; // 0x408
	UTextBlock* WeaponDesc; // 0x410
	UImage* WeaponItemImage; // 0x418
	UImage* WeaponItemSlot-BG; // 0x420
	UImage* WeaponItemSlot-BG_2; // 0x428
	UCanvasPanel* WeaponItemSlotHover; // 0x430
	UWidgetSwitcher* WidgetSwitcher_123; // 0x438
	FSlateColor DisableTextColor; // 0x440
	FSlateColor EnableTextColor; // 0x468
	bool IsDisable; // 0x490
	FInventoryItemInfo PickupItemInfo_1; // 0x498
	FLinearColor UpLinearColor; // 0x530
	FLinearColor DownLinearColor; // 0x540
	FSlateColor NormalSlateColor; // 0x550
	FSlateColor UpSlateColor; // 0x578
	FSlateColor DownSlateColor; // 0x5a0
	bool bAction; // 0x5c8
	bool bCompare; // 0x5c9
	FBravoHotelWeaponInfo CompareWeaponInfo; // 0x5d0
	bool IsNoHide; // 0x1100
	bool bWeapon; // 0x1101
	bool bPlayAnimation_WeaponCompare; // 0x1102
	FSlateColor VisibleTextColor; // 0x1108
	FSlateBrush BrushActionKeyWhite; // 0x1130
	FSlateBrush BrushActionKeyRed; // 0x11b8
	FName TempName; // 0x1240
	FText AvailableAmmoQuantity; // 0x1248
};

struct UForceFeedbackComponent : USceneComponent {
	UForceFeedbackEffect* ForceFeedbackEffect; // 0x230
	char bAutoDestroy : 1; // 0x238
	char bStopWhenOwnerDestroyed : 1; // 0x238
	char bLooping : 1; // 0x238
	char bIgnoreTimeDilation : 1; // 0x238
	char bOverrideAttenuation : 1; // 0x238
	float IntensityMultiplier; // 0x23c
	UForceFeedbackAttenuation* AttenuationSettings; // 0x240
	FForceFeedbackAttenuationSettings AttenuationOverrides; // 0x248
	FMulticastInlineDelegate OnForceFeedbackFinished; // 0x2f8
};

struct USceneComponent : UActorComponent {
	char bShouldSnapRotationWhenAttached : 1; // 0xb4
	char bHiddenInGame : 1; // 0xb4
	char bBoundsChangeTriggersStreamingDataRebuild : 1; // 0x110
	FMulticastSparseDelegate PhysicsVolumeChangedDelegate; // 0x120
	EDetailMode DetailMode; // 0x121
	TArray<USceneComponent*> ClientAttachedChildren; // 0x140
	char bComponentToWorldUpdated : 1; // 0x150
	char bAbsoluteScale : 1; // 0x150
	char bUseAttachParentBound : 1; // 0x150
	FVector RelativeScale3D; // 0x160
	TArray<USceneComponent*> AttachChildren; // 0x188
	char bAbsoluteLocation : 1; // 0x198
	char bVisible : 1; // 0x19a
	FVector RelativeLocation; // 0x19c
	FRotator RelativeRotation; // 0x1a8
	USceneComponent* AttachParent; // 0x1b8
	char bAbsoluteRotation : 1; // 0x1c0
	TWeakObjectPtr<APhysicsVolume> PhysicsVolume; // 0x1d0
	EComponentMobility Mobility; // 0x1d8
	FName AttachSocketName; // 0x1f4
	char bShouldBeAttached : 1; // 0x1fc
	FVector ComponentVelocity; // 0x220
	char bShouldSnapLocationWhenAttached : 1; // 0x22c
	char bShouldUpdatePhysicsVolume : 1; // 0x22c
};

struct ATemplateSequenceActor : AActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x330
	UTemplateSequencePlayer* SequencePlayer; // 0x348
	FSoftObjectPath TemplateSequence; // 0x350
	FTemplateSequenceBindingOverrideData BindingOverride; // 0x368
};

struct ABravoHotelBrokenEquipment : AActor {
	UStaticMeshComponent* WorldStaticMesh; // 0x328
	USkeletalMeshComponent* WorldSkelMesh; // 0x330
	int32_t Equipmentlevel; // 0x338
	FVector DamageImpulseDir; // 0x33c
};

struct UUW-BlackMarket_SubTabCell_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_Tab; // 0x250
	UImage* Image_Check; // 0x258
	UTextBlock* TextBlock_TabName; // 0x260
	UUW-BlackMarket_SubTab_C* BlackMarket_SubTab; // 0x268
	EBlackmarketTabType TabType; // 0x270
	FText TabName; // 0x278
	FName TabIndex; // 0x290
	bool Selected; // 0x298
};

struct UUW-MapComp_C : UBravoHotelMapCompWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x518
	UCanvasPanel* Aircraft; // 0x520
	UImage* Background; // 0x528
	UCanvasPanel* Canvas; // 0x530
	UInvalidationBox* InvalidationBox_1; // 0x538
	UImage* TestDescentEndPoint_2; // 0x540
	UImage* TestDescentStartPoint_2; // 0x548
	UImage* TestLineRouteDotline_2; // 0x550
	int32_t MapDisplayInfoFlag; // 0x558
	FMulticastInlineDelegate OnWheelOnMap; // 0x560
	FMulticastInlineDelegate OnMouseButtonUpOnMap; // 0x570
	FMulticastInlineDelegate OnObjectClickOnMap; // 0x580
	FMulticastInlineDelegate OnDragginOnMap; // 0x590
	bool IsDragging; // 0x5a0
	float DeltaValue; // 0x5a4
	TArray<FString> GridString_XAxis; // 0x5a8
	TArray<FString> GridString_YAxis; // 0x5b8
	UUW-WorldMapMarkerWidget_C* PersonalSupplyBoxRef; // 0x5c8
	UUW-PlayerIconWidget_C* ReplayFreeCamWidget; // 0x5d0
	float MapScaleInterpSpeed; // 0x5d8
	bool MouseRightBtnDown; // 0x5dc
	FTimerHandle SelectPingMenuTimer; // 0x5e0
	UWBP_SPS_SelectionMenu_C* SelectionMenu; // 0x5e8
	FMulticastInlineDelegate OnMouseButtonDownOnMap; // 0x5f0
	FVector2D MouseButtonDownPos; // 0x600
	bool IsUpdateMapScale; // 0x608
	float MapScaleInerpSpeedRatio; // 0x60c
	bool IsDrawingRoutePing; // 0x610
	TArray<FVector2D> IgnoreAreaCircleLines; // 0x618
};

struct ABravoHotelAircraftViewer : APawn {
	USpringArmComponent* SpringArm; // 0x398
	UCameraComponent* Camera; // 0x3a0
	float StartYaw; // 0x3a8
};

struct UMovieSceneNiagaraVectorParameterTrack : UMovieSceneNiagaraParameterTrack {
	int32_t ChannelsUsed; // 0x90
};

struct UPlanarReflectionComponent : USceneCaptureComponent {
	UBoxComponent* PreviewBox; // 0x2c8
	float NormalDistortionStrength; // 0x2d0
	float PrefilterRoughness; // 0x2d4
	float PrefilterRoughnessDistance; // 0x2d8
	int32_t ScreenPercentage; // 0x2dc
	float ExtraFOV; // 0x2e0
	float DistanceFromPlaneFadeStart; // 0x2e4
	float DistanceFromPlaneFadeEnd; // 0x2e8
	float DistanceFromPlaneFadeoutStart; // 0x2ec
	float DistanceFromPlaneFadeoutEnd; // 0x2f0
	float AngleFromPlaneFadeStart; // 0x2f4
	float AngleFromPlaneFadeEnd; // 0x2f8
	bool bShowPreviewPlane; // 0x2fc
	bool bRenderSceneTwoSided; // 0x2fd
};

struct ABP-AmplifierEffect_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	UWidgetComponent* Widget; // 0x330
	USceneComponent* DefaultSceneRoot; // 0x338
	ABravoHotelCharacter* TargetCharacter; // 0x340
	UCurveFloat* LoudnessCurve; // 0x348
	float AmplifierLength; // 0x350
	ECharacterGroundState TagetGroundState; // 0x354
	bool IsFiring; // 0x355
	ABravoHotelRangedWeapon* CurrentWeapon; // 0x358
	FTimerHandle SingleTimerEvent; // 0x360
	bool IsSingleFiring; // 0x368
};

struct UAnimSet : UObject {
	char bAnimRotationOnly : 1; // 0x28
	TArray<FName> TrackBoneNames; // 0x30
	TArray<FAnimSetMeshLinkup> LinkupCache; // 0x40
	TArray<char> BoneUseAnimTranslation; // 0x50
	TArray<char> ForceUseMeshTranslation; // 0x60
	TArray<FName> UseTranslationBoneNames; // 0x70
	TArray<FName> ForceMeshTranslationBoneNames; // 0x80
	FName PreviewSkelMeshName; // 0x90
	FName BestRatioSkelMeshName; // 0x98
};

struct ANavigationObjectBase : AActor {
	UCapsuleComponent* CapsuleComponent; // 0x330
	UBillboardComponent* GoodSprite; // 0x338
	UBillboardComponent* BadSprite; // 0x340
	char bIsPIEPlayerStart : 1; // 0x348
};

struct UCompositeCurveTable : UCurveTable {
	TArray<UCurveTable*> ParentTables; // 0xa0
	TArray<UCurveTable*> OldParentTables; // 0xb0
};

struct UAnimSingleNodeInstance : UAnimInstance {
	UAnimationAsset* CurrentAsset; // 0x268
	FDelegate PostEvaluateAnimEvent; // 0x270
};

struct UParticleModuleBeamSource : UParticleModuleBeamBase {
	Beam2SourceTargetMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	char bSourceAbsolute : 1; // 0x3c
	FRawDistributionVector Source; // 0x40
	char bLockSource : 1; // 0x88
	Beam2SourceTargetTangentMethod SourceTangentMethod; // 0x8c
	FRawDistributionVector SourceTangent; // 0x90
	char bLockSourceTangent : 1; // 0xd8
	FRawDistributionFloat SourceStrength; // 0xe0
	char bLockSourceStength : 1; // 0x110
};

struct UCurveLinearColor : UCurveBase {
	FRichCurve FloatCurves[0x4]; // 0x30
	float AdjustHue; // 0x230
	float AdjustSaturation; // 0x234
	float AdjustBrightness; // 0x238
	float AdjustBrightnessCurve; // 0x23c
	float AdjustVibrance; // 0x240
	float AdjustMinAlpha; // 0x244
	float AdjustMaxAlpha; // 0x248
};

struct UParticleModuleLocationBoneSocket : UParticleModuleLocationBase {
	ELocationBoneSocketSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	TArray<FLocationBoneSocketInfo> SourceLocations; // 0x40
	ELocationBoneSocketSelectionMethod SelectionMethod; // 0x50
	char bUpdatePositionEachFrame : 1; // 0x54
	char bOrientMeshEmitters : 1; // 0x54
	char bInheritBoneVelocity : 1; // 0x54
	float InheritVelocityScale; // 0x58
	FName SkelMeshActorParamName; // 0x5c
	int32_t NumPreSelectedIndices; // 0x64
};

struct ABravoHotelCarKey : ABravoHotelRemoteController {
	TArray<ABravoHotelVehicle*> FindVehicles; // 0x1c08
	UAkAudioEvent* CarKeySound; // 0x1c18
	FTimerHandle TimerHandle_DeactiveCarKey; // 0x1c20
	FTimerHandle Timer_UpdateUltimateVehicleLocation; // 0x1c28
	UParticleSystemComponent* UltimateParticleComponent; // 0x1c30
	UDecalComponent* UltimateDecalComponent; // 0x1c38
	UParticleSystem* UltimateParticle; // 0x1c40
	UMaterialInterface* UltimateDecal; // 0x1c48
	TMap<FName, FLinearColor> CanSpawnColor; // 0x1c50
	TMap<FName, FLinearColor> CannotSpawnColor; // 0x1ca0
	float UltimateParticle_DeltaHeight; // 0x1cf0
	TArray<FName> ActiveBuffs; // 0x1cf8
	TArray<FName> UltimateActiveBuffs; // 0x1d08
	ABravoHotelVehicle* UltimateSpawnVehicle; // 0x1d18
	FVector_NetQuantize UltimateSpawnVehicleLocation; // 0x1d20
};

struct ABravoHotelBaseHUD : AHUD {
	UUserWidget* MainWidgetClass; // 0x418
	UUserWidget* MainWidget; // 0x420
};

struct UNiagaraPreviewAxis_InterpParamFloat : UNiagaraPreviewAxis_InterpParamBase {
	float Min; // 0x38
	float MAX; // 0x3c
};

struct UAkAssetDataSwitchContainerData : UObject {
	TSoftObjectPtr<UAkGroupValue> GroupValue; // 0x28
	UAkGroupValue* DefaultGroupValue; // 0x50
	TArray<UAkMediaAsset*> MediaList; // 0x58
	TArray<UAkAssetDataSwitchContainerData*> Children; // 0x68
};

struct URendererSettings : UDeveloperSettings {
	char bMobileDisableVertexFog : 1; // 0x38
	int32_t MaxMobileCascades; // 0x3c
	EMobileMSAASampleCount MobileMSAASampleCount; // 0x40
	char bMobileUseLegacyShadingModel : 1; // 0x44
	char bMobileAllowDitheredLODTransition : 1; // 0x44
	char bMobileAllowSoftwareOcclusionCulling : 1; // 0x44
	char bMobileVirtualTextures : 1; // 0x44
	char bDiscardUnusedQualityLevels : 1; // 0x44
	char bOcclusionCulling : 1; // 0x44
	float MinScreenRadiusForLights; // 0x48
	float MinScreenRadiusForEarlyZPass; // 0x4c
	float MinScreenRadiusForCSMdepth; // 0x50
	char bPrecomputedVisibilityWarning : 1; // 0x54
	char bUseCullDistanceVolumes : 1; // 0x54
	char bTextureStreaming : 1; // 0x54
	char bUseDXT5NormalMaps : 1; // 0x54
	char bVirtualTextures : 1; // 0x54
	char bVirtualTexturedLightmaps : 1; // 0x54
	uint32_t VirtualTextureTileSize; // 0x58
	uint32_t VirtualTextureTileBorderSize; // 0x5c
	uint32_t VirtualTextureFeedbackFactor; // 0x60
	char bVirtualTextureEnableCompressZlib : 1; // 0x64
	char bVirtualTextureEnableCompressCrunch : 1; // 0x64
	char bClearCoatEnableSecondNormal : 1; // 0x64
	char bPreIntegratedSkinBRDF : 1; // 0x64
	char bAnisotropicBRDF : 1; // 0x64
	int32_t ReflectionCaptureResolution; // 0x68
	char ReflectionEnvironmentLightmapMixBasedOnRoughness : 1; // 0x6c
	char bForwardShading : 1; // 0x6c
	char bVertexFoggingForOpaque : 1; // 0x6c
	char bAllowStaticLighting : 1; // 0x6c
	char bUseNormalMapsForStaticLighting : 1; // 0x6c
	char bGenerateMeshDistanceFields : 1; // 0x6c
	char bEightBitMeshDistanceFields : 1; // 0x6c
	char bGenerateLandscapeGIData : 1; // 0x6c
	char bCompressMeshDistanceFields : 1; // 0x6d
	float TessellationAdaptivePixelsPerTriangle; // 0x70
	char bSeparateTranslucency : 1; // 0x74
	ETranslucentSortPolicy TranslucentSortPolicy; // 0x78
	FVector TranslucentSortAxis; // 0x7c
	ECustomDepthStencil CustomDepthStencil; // 0x88
	char bCustomDepthTaaJitter : 1; // 0x8c
	EAlphaChannelMode bEnableAlphaChannelInPostProcessing; // 0x90
	char bDefaultFeatureBloom : 1; // 0x94
	char bDefaultFeatureAmbientOcclusion : 1; // 0x94
	char bDefaultFeatureAmbientOcclusionStaticFraction : 1; // 0x94
	char bDefaultFeatureAutoExposure : 1; // 0x94
	EAutoExposureMethodUI DefaultFeatureAutoExposure; // 0x98
	float DefaultFeatureAutoExposureBias; // 0x9c
	char bExtendDefaultLuminanceRangeInAutoExposureSettings : 1; // 0xa0
	char bUsePreExposure : 1; // 0xa0
	char bEnablePreExposureOnlyInTheEditor : 1; // 0xa0
	char bDefaultFeatureMotionBlur : 1; // 0xa0
	char bDefaultFeatureLensFlare : 1; // 0xa0
	char bTemporalUpsampling : 1; // 0xa0
	char bSSGI : 1; // 0xa0
	EAntiAliasingMethod DefaultFeatureAntiAliasing; // 0xa4
	ELightUnits DefaultLightUnits; // 0xa5
	EDefaultBackBufferPixelFormat DefaultBackBufferPixelFormat; // 0xa6
	char bRenderUnbuiltPreviewShadowsInGame : 1; // 0xa8
	char bStencilForLODDither : 1; // 0xa8
	EEarlyZPass EarlyZPass; // 0xac
	char bEarlyZPassOnlyMaterialMasking : 1; // 0xb0
	char bDBuffer : 1; // 0xb0
	EClearSceneOptions ClearSceneMethod; // 0xb4
	char bBasePassOutputsVelocity : 1; // 0xb8
	char bVertexDeformationOutputsVelocity : 1; // 0xb8
	char bSelectiveBasePassOutputs : 1; // 0xb8
	char bDefaultParticleCutouts : 1; // 0xb8
	int32_t GPUSimulationTextureSizeX; // 0xbc
	int32_t GPUSimulationTextureSizeY; // 0xc0
	char bGlobalClipPlane : 1; // 0xc4
	EGBufferFormat GBufferFormat; // 0xc8
	char bUseGPUMorphTargets : 1; // 0xcc
	char bNvidiaAftermathEnabled : 1; // 0xcc
	char bMultiView : 1; // 0xcc
	char bMobilePostProcessing : 1; // 0xcc
	char bMobileMultiView : 1; // 0xcc
	char bMobileUseHWsRGBEncoding : 1; // 0xcc
	char bRoundRobinOcclusion : 1; // 0xcc
	char bODSCapture : 1; // 0xcc
	char bMeshStreaming : 1; // 0xcd
	float WireframeCullThreshold; // 0xd0
	char bEnableRayTracing : 1; // 0xd4
	char bEnableRayTracingTextureLOD : 1; // 0xd4
	char bSupportStationarySkylight : 1; // 0xd4
	char bSupportLowQualityLightmaps : 1; // 0xd4
	char bSupportPointLightWholeSceneShadows : 1; // 0xd4
	char bSupportAtmosphericFog : 1; // 0xd4
	char bSupportSkyAtmosphere : 1; // 0xd4
	char bSupportSkyAtmosphereAffectsHeightFog : 1; // 0xd4
	char bSupportSkinCacheShaders : 1; // 0xd5
	ESkinCacheDefaultBehavior DefaultSkinCacheBehavior; // 0xd8
	float SkinCacheSceneMemoryLimitInMB; // 0xdc
	char bMobileEnableStaticAndCSMShadowReceivers : 1; // 0xe0
	char bMobileEnableMovableLightCSMShaderCulling : 1; // 0xe0
	char bMobileAllowDistanceFieldShadows : 1; // 0xe0
	char bMobileAllowMovableDirectionalLights : 1; // 0xe0
	uint32_t MobileNumDynamicPointLights; // 0xe4
	char bMobileDynamicPointLightsUseStaticBranch : 1; // 0xe8
	char bMobileAllowMovableSpotlights : 1; // 0xe8
	char bSupport16BitBoneIndex : 1; // 0xe8
	char bGPUSkinLimit2BoneInfluences : 1; // 0xe8
	char bSupportDepthOnlyIndexBuffers : 1; // 0xe8
	char bSupportReversedIndexBuffers : 1; // 0xe8
	char bSupportMaterialLayers : 1; // 0xe8
	char bLPV : 1; // 0xe8
};

struct UWidget : UVisual {
	UPanelSlot* Slot; // 0x28
	FDelegate bIsEnabledDelegate; // 0x30
	FText ToolTipText; // 0x40
	FDelegate ToolTipTextDelegate; // 0x58
	UWidget* ToolTipWidget; // 0x68
	FDelegate ToolTipWidgetDelegate; // 0x70
	FDelegate VisibilityDelegate; // 0x80
	FWidgetTransform RenderTransform; // 0x90
	FVector2D RenderTransformPivot; // 0xac
	char bIsVariable : 1; // 0xb4
	char bCreatedByConstructionScript : 1; // 0xb4
	char bIsEnabled : 1; // 0xb4
	char bOverride_Cursor : 1; // 0xb4
	USlateAccessibleWidgetData* AccessibleWidgetData; // 0xb8
	char bIsVolatile : 1; // 0xc0
	EMouseCursor Cursor; // 0xc1
	EWidgetClipping Clipping; // 0xc2
	ESlateVisibility Visibility; // 0xc3
	float RenderOpacity; // 0xc4
	UWidgetNavigation* Navigation; // 0xc8
	EFlowDirectionPreference FlowDirectionPreference; // 0xd0
	TArray<UPropertyBinding*> NativeBindings; // 0xf8
};

struct ABP-BattleRoyalePawn_C : ABP-DefaultPawn_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3ba8
	USceneComponent* Listener; // 0x3bb0
	float _P_Cam_Z_NewTrack_0_898B65D1462B08609DA61C81A7B52313; // 0x3bb8
	ETimelineDirection _P_Cam_Z__Direction_898B65D1462B08609DA61C81A7B52313; // 0x3bbc
	UTimelineComponent* 3P_Cam_Z; // 0x3bc0
	FTimerHandle CriticalUITimeHandler; // 0x3bc8
	FTimerHandle DyingUITimeHandler; // 0x3bd0
	UPhysicsHandleComponent* ClothHandler; // 0x3bd8
	USkeletalMeshComponent* ClothBallObject; // 0x3be0
	FVector BallHandleLocation; // 0x3be8
	float GamepadInputModifier; // 0x3bf4
	float BaseTurnRate; // 0x3bf8
	float BaseLookUpRate; // 0x3bfc
	TArray<UUW-PerkLevelUp_C*> PerkLevelUpWidgets; // 0x3c00
	float PerkLevelUpWidthDepth; // 0x3c10
	ABP-AmplifierEffect_C* AmplifierEffect; // 0x3c18
	float Cam_Shake_Radius; // 0x3c20
	UBravoHotelMainWidget* MainWidget; // 0x3c28
	ABP-HeartBeatSensorEffect_C* HeartBeatSensorEffect; // 0x3c30
};

struct UBravoHotelPhysicalMaterial : UPhysicalMaterial {
	float Friction_OutBlueZone; // 0x80
	bool AllowPenetration; // 0x84
	bool bAllowPenetrationToThrowWeapon; // 0x85
	float Toughness; // 0x88
	float RefrationOnPenetration; // 0x8c
	bool bUseDefaultNoImpactEffect; // 0x90
	UParticleSystem* ImpactEffect; // 0x98
	TArray<UMaterialInterface*> ImpactDecalMaterial; // 0xa0
	UParticleSystem* ImpactEffect_OutBlueZone; // 0xb0
	TArray<UMaterialInterface*> ImpactDecalMaterial_OutBlueZone; // 0xb8
	float ImpactDecalSize; // 0xc8
	FVector ImpactDecalScale; // 0xcc
	bool PlayFootstepEffectWhenMovementInteractionTriggered; // 0xd8
	TMap<FName, UParticleSystem*> OverrideFootstepEffects; // 0xe0
	UParticleSystem* FootstepEffect; // 0x130
	UParticleSystem* FootstepEffect_OutBlueZone; // 0x138
	TArray<UMaterial*> FootstepDecalMaterial; // 0x140
	TArray<UMaterial*> FootstepDecalMaterial_OutBlueZone; // 0x150
	UParticleSystem* VehicleEffect; // 0x160
	UParticleSystem* VehicleEffect_OutBlueZone; // 0x168
	UParticleSystem* VehicleWreckEffect; // 0x170
	UParticleSystem* VehicleWreckEffect_OutBlueZone; // 0x178
	UAkAudioEvent* OverlapSound; // 0x180
	bool bUseSurfaceAsSnowfield; // 0x188
	bool bCanProne; // 0x189
	float SlopeSpeedModifier; // 0x18c
	int32_t TerrainType; // 0x190
	TMap<UBravoHotelDamageType*, UAkAudioEvent*> ImpactAudioEvents; // 0x198
};

struct AServerStatReplicator : AInfo {
	bool bUpdateStatNet; // 0x328
	bool bOverwriteClientStats; // 0x329
	uint32_t Channels; // 0x32c
	uint32_t InRate; // 0x330
	uint32_t OutRate; // 0x334
	uint32_t MaxPacketOverhead; // 0x33c
	uint32_t InRateClientMax; // 0x340
	uint32_t InRateClientMin; // 0x344
	uint32_t InRateClientAvg; // 0x348
	uint32_t InPacketsClientMax; // 0x34c
	uint32_t InPacketsClientMin; // 0x350
	uint32_t InPacketsClientAvg; // 0x354
	uint32_t OutRateClientMax; // 0x358
	uint32_t OutRateClientMin; // 0x35c
	uint32_t OutRateClientAvg; // 0x360
	uint32_t OutPacketsClientMax; // 0x364
	uint32_t OutPacketsClientMin; // 0x368
	uint32_t OutPacketsClientAvg; // 0x36c
	uint32_t NetNumClients; // 0x370
	uint32_t InPackets; // 0x374
	uint32_t OutPackets; // 0x378
	uint32_t InBunches; // 0x37c
	uint32_t OutBunches; // 0x380
	uint32_t OutLoss; // 0x384
	uint32_t InLoss; // 0x388
	uint32_t VoiceBytesSent; // 0x38c
	uint32_t VoiceBytesRecv; // 0x390
	uint32_t VoicePacketsSent; // 0x394
	uint32_t VoicePacketsRecv; // 0x398
	uint32_t PercentInVoice; // 0x39c
	uint32_t PercentOutVoice; // 0x3a0
	uint32_t NumActorChannels; // 0x3a4
	uint32_t NumConsideredActors; // 0x3a8
	uint32_t PrioritizedActors; // 0x3ac
	uint32_t NumRelevantActors; // 0x3b0
	uint32_t NumRelevantDeletedActors; // 0x3b4
	uint32_t NumReplicatedActorAttempts; // 0x3b8
	uint32_t NumReplicatedActors; // 0x3bc
	uint32_t NumActors; // 0x3c0
	uint32_t NumNetActors; // 0x3c4
	uint32_t NumDormantActors; // 0x3c8
	uint32_t NumInitiallyDormantActors; // 0x3cc
	uint32_t NumNetGUIDsAckd; // 0x3d0
	uint32_t NumNetGUIDsPending; // 0x3d4
	uint32_t NumNetGUIDsUnAckd; // 0x3d8
	uint32_t ObjPathBytes; // 0x3dc
	uint32_t NetGUIDOutRate; // 0x3e0
	uint32_t NetGUIDInRate; // 0x3e4
	uint32_t NetSaturated; // 0x3e8
};

struct UEnvQueryOption : UObject {
	UEnvQueryGenerator* Generator; // 0x28
	TArray<UEnvQueryTest*> Tests; // 0x30
};

struct UCharacterMovementComponent : UPawnMovementComponent {
	FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction; // 0x148
	float NetworkMinTimeBetweenClientAckGoodMoves; // 0x218
	float JumpOutOfWaterPitch; // 0x21c
	float BrakingDecelerationFalling; // 0x220
	char bEnableScopedMovementUpdates : 1; // 0x224
	char bServerAcceptClientAuthoritativePosition : 1; // 0x224
	float ServerLastClientAdjustmentTime; // 0x238
	EMovementMode DefaultWaterMovementMode; // 0x23c
	char bEnablePhysicsInteraction : 1; // 0x23d
	float MaxOutOfWaterStepHeight; // 0x240
	float MaxSimulationTimeStep; // 0x244
	float MaxCustomMovementSpeed; // 0x248
	float MaxDepenetrationWithPawn; // 0x250
	float NetProxyShrinkHalfHeight; // 0x254
	float MaxFlySpeed; // 0x258
	char bCanWalkOffLedgesWhenCrouching : 1; // 0x25c
	float JumpZVelocity; // 0x260
	float ServerLastTransformUpdateTimeStamp; // 0x264
	char bDeferUpdateMoveComponent : 1; // 0x268
	UPrimitiveComponent* ClientAutonomuousBase; // 0x270
	float MinTimeBetweenTimeStampResets; // 0x280
	float NavMeshProjectionHeightScaleDown; // 0x284
	char bIgnoreClientMovementErrorChecksAndCorrection : 1; // 0x288
	float BrakingFriction; // 0x28c
	FVector Acceleration; // 0x290
	char bCrouchMaintainsBaseLocation : 1; // 0x29c
	float LedgeCheckThreshold; // 0x2b0
	float RepulsionForce; // 0x2d0
	float NetworkLargeClientCorrectionDistance; // 0x2d4
	char bRequestedMoveUseAcceleration : 1; // 0x2d8
	int32_t MaxJumpApexAttemptsPerSimulation; // 0x2dc
	char bOrientRotationToMovement : 1; // 0x2e0
	char bShrinkProxyCapsule : 1; // 0x2e0
	char bMaintainHorizontalGroundVelocity : 1; // 0x2e0
	float AirControlBoostVelocityThreshold; // 0x2e4
	char bScalePushForceToVelocity : 1; // 0x2e8
	char bForceNextFloorCheck : 1; // 0x374
	FNavAvoidanceMask AvoidanceGroup; // 0x378
	FVector AnimRootMotionVelocity; // 0x37c
	EMovementMode MovementMode; // 0x388
	char bProjectNavMeshWalking : 1; // 0x389
	FVector PendingImpulseToApply; // 0x38c
	float MinTouchForce; // 0x398
	float BlockingHit_SlideAccelerator; // 0x39c
	float BrakingSubStepTime; // 0x3ac
	float MaxAcceleration; // 0x3b0
	USceneComponent* DeferredUpdatedMoveComponent; // 0x3b8
	float NavMeshProjectionInterpSpeed; // 0x3c0
	float PushForcePointZOffsetFactor; // 0x3c4
	char bNetworkAlwaysReplicateTransformUpdateTimestamp : 1; // 0x3c8
	float JumpOffJumpZFactor; // 0x3cc
	float GravityScale; // 0x3d0
	float BrakingDecelerationWalking; // 0x3d4
	float NetProxyShrinkRadius; // 0x3d8
	float MaxDepenetrationWithGeometry; // 0x3dc
	float BrakingDecelerationSwimming; // 0x3e0
	char bUseFlatBaseForFloorChecks : 1; // 0x3e4
	char bIgnoreBaseRotation : 1; // 0x3e4
	float MaxWalkSpeed; // 0x3e8
	FQuat LastUpdateRotation; // 0x400
	FVector LastUpdateLocation; // 0x410
	float PerchRadiusThreshold; // 0x41c
	FVector PendingForceToApply; // 0x420
	char bApplyGravityWhileJumping : 1; // 0x42c
	FNavAvoidanceMask GroupsToIgnore; // 0x430
	float AirControlBoostMultiplier; // 0x440
	float MaxDepenetrationWithGeometryAsProxy; // 0x444
	char bPushForceUsingZOffset : 1; // 0x448
	char bUseControllerDesiredRotation : 1; // 0x448
	char bWantsToCrouch : 1; // 0x448
	float TouchForceFactor; // 0x44c
	char bTouchForceScaledToMass : 1; // 0x450
	char bNetworkSkipProxyPredictionOnNetUpdate : 1; // 0x458
	float MaxDepenetrationWithPawnAsProxy; // 0x45c
	float BrakingDecelerationFlying; // 0x460
	char bUseSeparateBrakingFriction : 1; // 0x464
	FNavAvoidanceMask GroupsToAvoid; // 0x468
	FVector PendingLaunchVelocity; // 0x46c
	char bMovementInProgress : 1; // 0x478
	char bWantsToLeaveNavWalking : 1; // 0x478
	float BrakingFrictionFactor; // 0x47c
	float CrouchedHalfHeight; // 0x480
	EMovementMode GroundMovementMode; // 0x484
	char bNetworkUpdateReceived : 1; // 0x485
	char bCheatFlying : 1; // 0x485
	float PerchAdditionalHeight; // 0x488
	FFindFloorResult CurrentFloor; // 0x490
	int32_t AvoidanceUID; // 0x524
	float ListenServerNetworkSimulatedSmoothRotationTime; // 0x528
	ACharacter* CharacterOwner; // 0x530
	ENetworkSmoothingMode NetworkSmoothingMode; // 0x539
	float MaxSwimSpeed; // 0x53c
	float NavWalkingFloorDistTolerance; // 0x540
	float InitialPushForceFactor; // 0x544
	FRotator RotationRate; // 0x548
	float MinAnalogWalkSpeed; // 0x554
	float NetworkSimulatedSmoothLocationTime; // 0x558
	float NetworkMaxSmoothUpdateDistance; // 0x55c
	float GroundFriction; // 0x568
	char bImpartBaseVelocityX : 1; // 0x56c
	float NavMeshProjectionInterval; // 0x570
	char bNotifyApex : 1; // 0x574
	float AnalogInputModifier; // 0x578
	float NavMeshProjectionHeightScaleUp; // 0x57c
	char bRunPhysicsWithNoController : 1; // 0x580
	float NetworkSimulatedSmoothRotationTime; // 0x584
	char bWasAvoidanceUpdated : 1; // 0x588
	char bAllowPhysicsRotationDuringAnimRootMotion : 1; // 0x588
	float ListenServerNetworkSimulatedSmoothLocationTime; // 0x590
	float StandingDownwardForceScale; // 0x594
	FRootMotionMovementParams RootMotionParams; // 0x5a0
	char bForceMaxAccel : 1; // 0x5e0
	char bProjectNavMeshOnBothWorldChannels : 1; // 0x5e0
	EMovementMode DefaultLandMovementMode; // 0x5e1
	char bCanWalkOffLedges : 1; // 0x5e2
	char bPushForceScaledToMass : 1; // 0x5e2
	float MaxStepHeight; // 0x5e4
	float NetworkMinTimeBetweenClientAdjustments; // 0x5ec
	char bNetworkMovementModeChanged : 1; // 0x5f0
	float FallingLateralFriction; // 0x5f4
	float WalkableFloorAngle; // 0x5f8
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x5fc
	float OutofWaterZ; // 0x610
	float PushForceFactor; // 0x614
	char bWasSimulatingRootMotion : 1; // 0x618
	float MaxWalkSpeedCrouched; // 0x61c
	char bImpartBaseVelocityZ : 1; // 0x620
	char bRequestedMoveWithMaxSpeed : 1; // 0x620
	UPhysicalMaterial* BlockingPhysMaterial; // 0x628
	float Mass; // 0x630
	float MaxTouchForce; // 0x634
	char bJustTeleported : 1; // 0x638
	float AvoidanceWeight; // 0x63c
	char bImpartBaseVelocityY : 1; // 0x640
	FVector RequestedVelocity; // 0x644
	char bUseRVOAvoidance : 1; // 0x650
	char bEnableServerDualMoveScopedMovementUpdates : 1; // 0x650
	float Buoyancy; // 0x654
	int32_t MaxSimulationIterations; // 0x658
	float AirControl; // 0x660
	char bAlwaysCheckFloor : 1; // 0x664
	char CustomMovementMode; // 0x665
	char bSweepWhileNavWalking : 1; // 0x666
	char bPerformingJumpOff : 1; // 0x666
	char bHasRequestedVelocity : 1; // 0x666
	float NavMeshProjectionTimer; // 0x668
	float AvoidanceConsiderationRadius; // 0x66c
	FVector LastUpdateVelocity; // 0x674
	char bFastAttachedMove : 1; // 0x680
	char bImpartBaseAngularVelocity : 1; // 0x680
	FRootMotionSourceGroup CurrentRootMotion; // 0x688
	float NetworkNoSmoothUpdateDistance; // 0x6c0
	float WalkableFloorZ; // 0x6c8
	float ServerLastClientGoodMoveAckTime; // 0x6cc
};

struct UInterpTrackInstEvent : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct USimplygonDisplacementCaster : USimplygonMaterialCaster {
	FDisplacementCasterSettings DisplacementCasterSettings; // 0x28
};

struct UVariantObjectBinding : UObject {
	FString CachedActorLabel; // 0x28
	FSoftObjectPath ObjectPtr; // 0x38
	LazyObjectProperty LazyObjectPtr; // 0x50
	TArray<UPropertyValue*> CapturedProperties; // 0x70
	TArray<FFunctionCaller> FunctionCallers; // 0x80
};

struct UMaterialExpressionLogarithm10 : UMaterialExpression {
	FExpressionInput X; // 0x40
};

struct UMaterialExpressionArctangent2 : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct UBlueprintCore : UObject {
	UObject* SkeletonGeneratedClass; // 0x28
	UObject* GeneratedClass; // 0x30
	bool bLegacyNeedToPurgeSkelRefs; // 0x38
	FGuid BlueprintGuid; // 0x3c
};

struct USafeZoneSlot : UPanelSlot {
	bool bIsTitleSafe; // 0x38
	FMargin SafeAreaScale; // 0x3c
	EHorizontalAlignment HAlign; // 0x4c
	EVerticalAlignment VAlign; // 0x4d
	FMargin Padding; // 0x50
};

struct UAkItemProperties : UWidget {
	FMulticastInlineDelegate OnSelectionChanged; // 0x108
	FMulticastInlineDelegate OnPropertyDragged; // 0x118
};

struct UEditableGameplayTagQueryExpression_AllTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UFindTurnBasedMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct URuntimeVirtualTexture : UObject {
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x28
	bool bCompressTextures; // 0x29
	bool bEnable; // 0x2a
	bool bClearTextures; // 0x2b
	bool bSinglePhysicalSpace; // 0x2c
	bool bPrivateSpace; // 0x2d
	bool bEnableScalability; // 0x2e
	int32_t Size; // 0x30
	int32_t TileCount; // 0x34
	int32_t TileSize; // 0x38
	int32_t TileBorderSize; // 0x3c
	int32_t StreamLowMips; // 0x40
	URuntimeVirtualTextureStreamingProxy* StreamingTexture; // 0x48
	bool bEnableCompressCrunch; // 0x50
	int32_t RemoveLowMips; // 0x54
};

struct UBasicReplicationGraph : UReplicationGraph {
	UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x578
	UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x580
	TArray<FConnectionAlwaysRelevantNodePair> AlwaysRelevantForConnectionList; // 0x588
	TArray<AActor*> ActorsWithoutNetConnection; // 0x598
};

struct UMaterialExpressionClearCoatNormalCustomOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UFontFace : UObject {
	FString SourceFilename; // 0x30
	EFontHinting Hinting; // 0x40
	EFontLoadingPolicy LoadingPolicy; // 0x41
	EFontLayoutMethod LayoutMethod; // 0x42
};

struct URadialForceComponent : USceneComponent {
	float Radius; // 0x230
	ERadialImpulseFalloff Falloff; // 0x234
	float ImpulseStrength; // 0x238
	char bImpulseVelChange : 1; // 0x23c
	char bIgnoreOwningActor : 1; // 0x23c
	float ForceStrength; // 0x240
	float DestructibleDamage; // 0x244
	TArray<EObjectTypeQuery> ObjectTypesToAffect; // 0x248
};

struct USlateSettings : UObject {
	bool bExplicitCanvasChildZOrder; // 0x28
};

struct UFSM_SetState_Async : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	FName StateName; // 0x38
	float Timer; // 0x40
	bool Repeat; // 0x44
	FTimerHandle TimerHandle; // 0x48
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnAborted; // 0x60
};

struct UBlackboardData : UDataAsset {
	UBlackboardData* Parent; // 0x30
	TArray<FBlackboardEntry> Keys; // 0x38
	char bHasSynchronizedKeys : 1; // 0x48
};

struct UUW-ReplayFreeCamSpeedWidget_C : UUserWidget {
	UImage* Image_136; // 0x248
	USlider* Slider_Speed; // 0x250
	UTextBlock* T_CamSpeed; // 0x258
	FTimerHandle Handle_HideFreeCamSpeed; // 0x260
};

struct UGarbageCollectionSettings : UDeveloperSettings {
	float TimeBetweenPurgingPendingKillObjects; // 0x38
	char FlushStreamingOnGC : 1; // 0x3c
	char AllowParallelGC : 1; // 0x3c
	char IncrementalBeginDestroyEnabled : 1; // 0x3c
	char MultithreadedDestructionEnabled : 1; // 0x3c
	char CreateGCClusters : 1; // 0x3c
	char AssetClusteringEnabled : 1; // 0x3c
	char ActorClusteringEnabled : 1; // 0x3c
	char BlueprintClusteringEnabled : 1; // 0x3c
	char UseDisregardForGCOnDedicatedServers : 1; // 0x3d
	int32_t MinGCClusterSize; // 0x40
	int32_t NumRetriesBeforeForcingGC; // 0x44
	int32_t MaxObjectsNotConsideredByGC; // 0x48
	int32_t SizeOfPermanentObjectPool; // 0x4c
	int32_t MaxObjectsInGame; // 0x50
	int32_t MaxObjectsInEditor; // 0x54
};

struct UMapBuildDataRegistry : UObject {
	ELightingBuildQuality LevelLightingQuality; // 0x28
};

struct UNiagaraPrecompileContainer : UObject {
	TArray<UNiagaraScript*> Scripts; // 0x28
	UNiagaraSystem* System; // 0x38
};

struct UEditableText : UWidget {
	FText Text; // 0x108
	FDelegate TextDelegate; // 0x120
	FText HintText; // 0x130
	FDelegate HintTextDelegate; // 0x148
	FEditableTextStyle WidgetStyle; // 0x158
	USlateWidgetStyleAsset* Style; // 0x370
	USlateBrushAsset* BackgroundImageSelected; // 0x378
	USlateBrushAsset* BackgroundImageComposing; // 0x380
	USlateBrushAsset* CaretImage; // 0x388
	FSlateFontInfo Font; // 0x390
	FSlateColor ColorAndOpacity; // 0x3e0
	bool IsReadOnly; // 0x408
	bool IsPassword; // 0x409
	float MinimumDesiredWidth; // 0x40c
	bool IsCaretMovedWhenGainFocus; // 0x410
	bool SelectAllTextWhenFocused; // 0x411
	bool RevertTextOnEscape; // 0x412
	bool ClearKeyboardFocusOnCommit; // 0x413
	bool SelectAllTextOnCommit; // 0x414
	bool AllowContextMenu; // 0x415
	EVirtualKeyboardType KeyboardType; // 0x416
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x417
	EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0x418
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x419
	ETextJustify Justification; // 0x41a
	FShapedTextOptions ShapedTextOptions; // 0x41b
	FMulticastInlineDelegate OnTextChanged; // 0x420
	FMulticastInlineDelegate OnTextCommitted; // 0x430
};

struct UPhysicsSpringComponent : USceneComponent {
	float SpringStiffness; // 0x230
	float SpringDamping; // 0x234
	float SpringLengthAtRest; // 0x238
	float SpringRadius; // 0x23c
	ECollisionChannel SpringChannel; // 0x240
	bool bIgnoreSelf; // 0x241
	float SpringCompression; // 0x244
};

struct UMovieSceneParticleTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> ParticleSections; // 0x58
};

struct APhysicsThruster : ARigidBodyBase {
	UPhysicsThrusterComponent* ThrusterComponent; // 0x328
};

struct UPhysicalMaterial : UObject {
	float Friction; // 0x28
	EFrictionCombineMode FrictionCombineMode; // 0x2c
	bool bOverrideFrictionCombineMode; // 0x2d
	float Restitution; // 0x30
	EFrictionCombineMode RestitutionCombineMode; // 0x34
	bool bOverrideRestitutionCombineMode; // 0x35
	float Density; // 0x38
	float RaiseMassToPower; // 0x3c
	float DestructibleDamageThresholdScale; // 0x40
	UPhysicalMaterialPropertyBase* PhysicalMaterialProperty; // 0x48
	EPhysicalSurface SurfaceType; // 0x50
	float TireFrictionScale; // 0x54
	TArray<FTireFrictionScalePair> TireFrictionScales; // 0x58
};

struct ABP-SpectatorPawn_C : ABravoHotelSpectatorPawn {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3e8
	UCameraComponent* Camera; // 0x3f0
	USpringArmComponent* SpringArm; // 0x3f8
	bool bKillCam; // 0x400
};

struct URSMSubsystem : ULocalPlayerSubsystem {
	TArray<UReactiveStateMachine*> MachineStack; // 0x30
};

struct UDirectionalLightComponent : ULightComponent {
	float ShadowCascadeBiasDistribution; // 0x378
	char bEnableLightShaftOcclusion : 1; // 0x37c
	float OcclusionMaskDarkness; // 0x380
	float OcclusionDepthRange; // 0x384
	FVector LightShaftOverrideDirection; // 0x388
	float WholeSceneDynamicShadowRadius; // 0x394
	float DynamicShadowDistanceMovableLight; // 0x398
	float DynamicShadowDistanceStationaryLight; // 0x39c
	int32_t DynamicShadowCascades; // 0x3a0
	float CascadeDistributionExponent; // 0x3a4
	float CascadeTransitionFraction; // 0x3a8
	float ShadowDistanceFadeoutFraction; // 0x3ac
	char bUseInsetShadowsForMovableObjects : 1; // 0x3b0
	int32_t FarShadowCascadeCount; // 0x3b4
	float FarShadowDistance; // 0x3b8
	char bUseFarShadowAsStaticWorldShadow : 1; // 0x3bc
	float DistanceFieldShadowDistance; // 0x3c0
	float LightSourceAngle; // 0x3c4
	float LightSourceSoftAngle; // 0x3c8
	float TraceDistance; // 0x3cc
	FLightmassDirectionalLightSettings LightmassSettings; // 0x3d0
	char bCastModulatedShadows : 1; // 0x3e0
	FColor ModulatedShadowColor; // 0x3e4
	float ShadowAmount; // 0x3e8
	char bUsedAsAtmosphereSunLight : 1; // 0x3ec
	int32_t AtmosphereSunLightIndex; // 0x3f0
};

struct UUW-PerkDeckSelectItemWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_Main; // 0x250
	UImage* Image_ClassIcon; // 0x258
	UImage* Image_ComingSoonBg; // 0x260
	UImage* Image_Disabled; // 0x268
	UImage* Image_Outline; // 0x270
	UImage* Image_Push; // 0x278
	UOverlay* Overlay_Main; // 0x280
	UTextBlock* T_ComingSoon; // 0x288
	UUW-PerkDeckSelectItemNumWidget_C* UW-PerkDeckSelectItemNumWidget; // 0x290
	UUW-PerkDeckSelectItemNumWidget_C* UW-PerkDeckSelectItemNumWidget_2; // 0x298
	UUW-PerkDeckSelectItemNumWidget_C* UW-PerkDeckSelectItemNumWidget_3; // 0x2a0
	UUW-PerkDeckSelectItemNumWidget_C* UW-PerkDeckSelectItemNumWidget_Local; // 0x2a8
	UVerticalBox* VerticalBox_Selected; // 0x2b0
	FPerkDeckClassInfo PerkDeckClassInfo; // 0x2b8
	int32_t SelectedNum; // 0x2e0
	int32_t SelectedMinIndex; // 0x2e4
	FMulticastInlineDelegate ChooseClass; // 0x2e8
	int32_t ClassIndex; // 0x2f8
	FMulticastInlineDelegate HoverClass; // 0x300
	bool bIsLocalSelected; // 0x310
	bool bIsSelected; // 0x311
	FPerkDeckData CurrentPerkDeckData; // 0x318
	bool bIsDuplicateSelectPossible; // 0x7c8
	bool bButtonDisabled; // 0x7c9
	bool bNoUpdatedDisabled; // 0x7ca
	bool bIsBlocked; // 0x7cb
};

struct ABrush : AActor {
	EBrushType BrushType; // 0x328
	FColor BrushColor; // 0x32c
	int32_t PolyFlags; // 0x330
	char bColored : 1; // 0x334
	char bSolidWhenSelected : 1; // 0x334
	char bPlaceableFromClassBrowser : 1; // 0x334
	char bNotForClientOrServer : 1; // 0x334
	UModel* Brush; // 0x338
	UBrushComponent* BrushComponent; // 0x340
	char bInManipulation : 1; // 0x348
	TArray<FGeomSelection> SavedSelections; // 0x350
};

struct UMovieSceneGeometryCollectionSection : UMovieSceneSection {
	FMovieSceneGeometryCollectionParams Params; // 0xe0
};

struct UBravoHotelWorldMapWidget : UUserWidget {
	FMulticastInlineDelegate OnChangeWorldMapZoomLevelDelegate; // 0x250
	FTestPoint ServerTestPoint; // 0x260
};

struct UNiagaraParameterCollectionInstance : UObject {
	UNiagaraParameterCollection* Collection; // 0x28
	TArray<FNiagaraVariable> OverridenParameters; // 0x30
	FNiagaraParameterStore ParameterStorage; // 0x40
};

struct UParticleModuleVelocity_Seeded : UParticleModuleVelocity {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct ABravoHotelAircraftPoint : ATargetPoint {
	ABravoHotelAircraftPoint* NextPoint; // 0x328
};

struct ABravoHotelProjectileGrenadeBomb : ABravoHotelProjectileGrenade {
	float LandHeight; // 0x688
	bool bUsingActiveGrenadeByTick; // 0x68c
	ECollisionChannel DamageCollisionType; // 0x68d
	bool bIgnoreCollision; // 0x68e
	UMaterialInterface* ExplosionGroundDecalMaterial; // 0x6a0
	FVector ExplosionGroundDecalSize; // 0x6a8
	UDecalComponent* ExplosionGroundDecalComponent; // 0x6b8
	APlayerController* AuthorController; // 0x6c0
};

struct UGameplayTagsDeveloperSettings : UObject {
	FString DeveloperConfigName; // 0x28
};

struct UCompressedImageSequenceProtocol : UImageSequenceProtocol {
	int32_t CompressionQuality; // 0xd8
};

struct UNavRelevantComponent : UActorComponent {
	char bAttachToOwnersRoot : 1; // 0xd4
	UObject* CachedNavParent; // 0xd8
};

struct UUW-MatchEnd_DamageList_Item_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UHorizontalBox* HorizontalBox_HitPoint_Reversible; // 0x250
	UHorizontalBox* HorizontalBox_Main_Reversible; // 0x258
	UHorizontalBox* HorizontalBox_Rarity; // 0x260
	UImage* Image_DamegeType; // 0x268
	UImage* Image_Sidebar; // 0x270
	UImage* Image_Sidebar2; // 0x278
	UImage* Image_Weapon; // 0x280
	UOverlay* Overlay_HitPoint; // 0x288
	UTextBlock* T_Damage_Reversible; // 0x290
	UTextBlock* T_HitCount; // 0x298
	UTextBlock* T_WeaponName_Reversible; // 0x2a0
	UWidgetSwitcher* WidgetSwitcher_DamageIcon; // 0x2a8
};

struct UComboBox : UWidget {
	TArray<UObject*> Items; // 0x108
	FDelegate OnGenerateWidgetEvent; // 0x118
	bool bIsFocusable; // 0x128
};

struct UEnvQueryGenerator_Donut : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue InnerRadius; // 0x80
	FAIDataProviderFloatValue OuterRadius; // 0xb8
	FAIDataProviderIntValue NumberOfRings; // 0xf0
	FAIDataProviderIntValue PointsPerRing; // 0x128
	FEnvDirection ArcDirection; // 0x160
	FAIDataProviderFloatValue ArcAngle; // 0x180
	bool bUseSpiralPattern; // 0x1b8
	UEnvQueryContext* Center; // 0x1c0
	char bDefineArc : 1; // 0x1c8
};

struct UEdGraphPin_Deprecated : UObject {
	FString PinName; // 0x28
	FString PinToolTip; // 0x38
	EEdGraphPinDirection Direction; // 0x48
	FEdGraphPinType PinType; // 0x50
	FString DefaultValue; // 0xa8
	FString AutogeneratedDefaultValue; // 0xb8
	UObject* DefaultObject; // 0xc8
	FText DefaultTextValue; // 0xd0
	TArray<UEdGraphPin_Deprecated*> LinkedTo; // 0xe8
	TArray<UEdGraphPin_Deprecated*> SubPins; // 0xf8
	UEdGraphPin_Deprecated* ParentPin; // 0x108
	UEdGraphPin_Deprecated* ReferencePassThroughConnection; // 0x110
};

struct UMultiLineEditableText : UTextLayoutWidget {
	FText Text; // 0x128
	FText HintText; // 0x140
	FDelegate HintTextDelegate; // 0x158
	FTextBlockStyle WidgetStyle; // 0x168
	bool bIsReadOnly; // 0x3d0
	FSlateFontInfo Font; // 0x3d8
	bool SelectAllTextWhenFocused; // 0x428
	bool ClearTextSelectionOnFocusLoss; // 0x429
	bool RevertTextOnEscape; // 0x42a
	bool ClearKeyboardFocusOnCommit; // 0x42b
	bool AllowContextMenu; // 0x42c
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x42d
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x42e
	FMulticastInlineDelegate OnTextChanged; // 0x430
	FMulticastInlineDelegate OnTextCommitted; // 0x440
};

struct UDLSSSettings : UObject {
	bool bEnableDLSSD3D12; // 0x28
	bool bEnableDLSSD3D11; // 0x29
	bool bEnableDLSSVulkan; // 0x2a
	bool bEnableDLSSInEditorViewports; // 0x2b
	bool bEnableScreenpercentageManipulationInDLSSEditorViewports; // 0x2c
	bool bEnableDLSSInPlayInEditorViewports; // 0x2d
	bool bShowDLSSSDebugOnScreenMessages; // 0x2e
	FString GenericDLSSBinaryPath; // 0x30
	bool bGenericDLSSBinaryExists; // 0x40
	uint32_t NVIDIANGXApplicationId; // 0x44
	FString CustomDLSSBinaryPath; // 0x48
	bool bCustomDLSSBinaryExists; // 0x58
};

struct URealisticProjectileComponent : UMovementComponent {
	TSoftObjectPtr<UDataTable> MaterialPropertiesTable; // 0xf0
	FTrajectoryInitialConditions InitialConditions; // 0x118
	TArray<FTrajectoryInitialConditions> InitialConditionHistory; // 0x168
	int32_t TrajectoryNumber; // 0x178
	float CurrentPenetrationDeceleration; // 0x17c
	FRotator AngularVelocity; // 0x180
	TArray<FHitResult> ObjectsPenetrated; // 0x190
	TArray<AActor*> IgnoreActors; // 0x1a0
	float TerminalVelocity; // 0x1b0
	float CurrentGravity; // 0x1b4
	char bUseEmbed : 1; // 0x1b8
	float EmbedDepth; // 0x1bc
	float ImpulseScale; // 0x1c0
	float InitialSpeed; // 0x1c4
	float MaxSpeed; // 0x1c8
	float PenetrationModifier; // 0x1cc
	char bRotationFollowsVelocity : 1; // 0x1d0
	FRotator AngularVelocityMin; // 0x1d4
	FRotator AngularVelocityMax; // 0x1e0
	EProjectileBehavior ProjectileBehavior; // 0x1ec
	char bInitialVelocityInLocalSpace : 1; // 0x1f0
	char bForceSubStepping : 1; // 0x1f0
	char bDrawDebugLine : 1; // 0x1f0
	char bDebugLineColorFromVelocity : 1; // 0x1f0
	float DebugLineThickness; // 0x1f4
	float DebugLineDuration; // 0x1f8
	FColor DebugLineAuxiliaryColor; // 0x1fc
	float Bounciness; // 0x200
	char bUseFriction : 1; // 0x204
	float Friction; // 0x208
	float FrictionVelocityLimit; // 0x20c
	float BounceVelocityMin; // 0x210
	FMulticastInlineDelegate OnProjectileAnyHit; // 0x218
	FMulticastInlineDelegate OnProjectileBounce; // 0x228
	FMulticastInlineDelegate OnProjectilePenetrate; // 0x238
	FMulticastInlineDelegate OnPenetrationExit; // 0x248
	FMulticastInlineDelegate OnProjectileStop; // 0x258
	FMulticastInlineDelegate OnProjectileEmbed; // 0x268
	FMulticastInlineDelegate OnComponentBeginOverlap; // 0x278
	FRandomStream RandStream; // 0x288
	bool bIsFluidFriction; // 0x290
	bool bInFluid; // 0x291
	float FluidFriction; // 0x294
	float MaxSimulationTimeStep; // 0x298
};

struct UPlaneFalloff : UFieldNodeFloat {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	float Distance; // 0xc0
	FVector Position; // 0xc4
	FVector Normal; // 0xd0
	EFieldFalloffType Falloff; // 0xdc
};

struct UTimeSynchronizationSource : UObject {
	bool bUseForSynchronization; // 0x28
	int32_t FrameOffset; // 0x2c
};

struct UMaterialExpressionCosine : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct APingLocationActor_C : AActor {
	UStaticMeshComponent* StaticMesh; // 0x328
	USceneComponent* DefaultSceneRoot; // 0x330
};

struct UGizmoComponentHitTarget : UObject {
	UPrimitiveComponent* Component; // 0x30
};

struct APhysicsConstraintActor : ARigidBodyBase {
	UPhysicsConstraintComponent* ConstraintComp; // 0x328
	AActor* ConstraintActor1; // 0x330
	AActor* ConstraintActor2; // 0x338
	char bDisableCollision : 1; // 0x340
};

struct AAkSpatialAudioVolume : AVolume {
	UAkSurfaceReflectorSetComponent* SurfaceReflectorSet; // 0x360
	UAkLateReverbComponent* LateReverb; // 0x368
	UAkRoomComponent* Room; // 0x370
};

struct UClothPhysicalMeshDataBase_Legacy : UObject {
	TArray<FVector> Vertices; // 0x28
	TArray<FVector> Normals; // 0x38
	TArray<uint32_t> Indices; // 0x48
	TArray<float> InverseMasses; // 0x58
	TArray<FClothVertBoneData> BoneData; // 0x68
	int32_t NumFixedVerts; // 0x78
	int32_t MaxBoneWeights; // 0x7c
	TArray<uint32_t> SelfCollisionIndices; // 0x80
};

struct ABravoHotelProjectileFireAx : ABravoHotelProjectileGrenade {
	ABravoHotelSimulationActor* SimulationActorClass; // 0x688
	bool bAttachAbsolutely; // 0x690
	UAkAudioEvent* FlybyEvent; // 0x698
	FAudioPlayingHandle FlybySoundHandle; // 0x6a0
};

struct UPoseWatch : UObject {
	UEdGraphNode* Node; // 0x28
	FColor PoseWatchColour; // 0x30
};

struct UVOIPTalker : UActorComponent {
	FVoiceSettings Settings; // 0xb0
};

struct ACustomizableSkeletalMeshActor : ASkeletalMeshActor {
	UCustomizableSkeletalComponent* CustomizableSkeletalComponent; // 0x3b0
};

struct USphereReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadius; // 0x2b8
	float CaptureDistanceScale; // 0x2bc
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x2c0
};

struct UMovieScene3DConstraintSection : UMovieSceneSection {
	FGuid ConstraintId; // 0xe0
	FMovieSceneObjectBindingID ConstraintBindingID; // 0xf0
};

struct UBrainComponent : UActorComponent {
	UBlackboardComponent* BlackboardComp; // 0xb8
	AAIController* AIOwner; // 0xc0
};

struct UAsyncActionHandleSaveGame : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate Completed; // 0x30
	USaveGame* SaveGameObject; // 0x60
};

struct ULevelStreamingDynamic : ULevelStreaming {
	char bInitiallyLoaded : 1; // 0x158
	char bInitiallyVisible : 1; // 0x158
};

struct UBravoHotelKillcamPlayback : UObject {
	UWorld* KillcamWorld; // 0x28
	UPackage* KillcamWorldPackage; // 0x30
};

struct USourceEffectBitCrusherPreset : USoundEffectSourcePreset {
	FSourceEffectBitCrusherSettings Settings; // 0x70
};

struct UGeometryCollectionComponent : UMeshComponent {
	AChaosSolverActor* ChaosSolverActor; // 0x4e8
	UGeometryCollection* RestCollection; // 0x5d0
	TArray<AFieldSystemActor*> InitializationFields; // 0x5d8
	bool Simulating; // 0x5e8
	EObjectStateTypeEnum ObjectType; // 0x5f0
	bool EnableClustering; // 0x5f1
	int32_t ClusterGroupIndex; // 0x5f4
	int32_t MaxClusterLevel; // 0x5f8
	TArray<float> DamageThreshold; // 0x600
	EClusterConnectionTypeEnum ClusterConnectionType; // 0x610
	int32_t CollisionGroup; // 0x614
	float CollisionSampleFraction; // 0x618
	float LinearEtherDrag; // 0x61c
	float AngularEtherDrag; // 0x620
	UChaosPhysicalMaterial* PhysicalMaterial; // 0x628
	EInitialVelocityTypeEnum InitialVelocityType; // 0x630
	FVector InitialLinearVelocity; // 0x634
	FVector InitialAngularVelocity; // 0x640
	FGeomComponentCacheParameters CacheParameters; // 0x650
	FMulticastInlineDelegate NotifyGeometryCollectionPhysicsStateChange; // 0x6a0
	FMulticastInlineDelegate NotifyGeometryCollectionPhysicsLoadingStateChange; // 0x6b0
	FMulticastInlineDelegate OnChaosBreakEvent; // 0x6d8
	float DesiredCacheTime; // 0x6e8
	bool CachePlayback; // 0x6ec
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x6f0
	bool bNotifyBreaks; // 0x700
	bool bNotifyCollisions; // 0x701
	UBodySetup* DummyBodySetup; // 0x960
};

struct UInstancedStaticMeshComponent : UStaticMeshComponent {
	TArray<FInstancedStaticMeshInstanceData> PerInstanceSMData; // 0x548
	int32_t NumCustomDataFloats; // 0x558
	TArray<float> PerInstanceSMCustomData; // 0x560
	bool bMergeCollision; // 0x570
	int32_t InstancingRandomSeed; // 0x574
	int32_t InstanceStartCullDistance; // 0x578
	int32_t InstanceEndCullDistance; // 0x57c
	int8_t CulldistanceType; // 0x580
	float MinScreenSizeScale; // 0x584
	char InstanceBodiesSplitRatio; // 0x588
	TArray<int32_t> InstanceReorderTable; // 0x590
	int32_t NumPendingLightmaps; // 0x5fc
	TArray<FInstancedStaticMeshMappingInfo> CachedMappings; // 0x600
};

struct UMaterialExpressionAdd : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UIntSerialization : UObject {
	uint16_t UnsignedInt16Variable; // 0x28
	uint32_t UnsignedInt32Variable; // 0x2c
	uint64_t UnsignedInt64Variable; // 0x30
	int8_t SignedInt8Variable; // 0x38
	int16_t SignedInt16Variable; // 0x3a
	int64_t SignedInt64Variable; // 0x40
	char UnsignedInt8Variable; // 0x48
	int32_t SignedInt32Variable; // 0x4c
};

struct UBravoHotelDebugWidget : UUserWidget {
	FString DebugString; // 0x248
};

struct UFieldSystemMetaDataProcessingResolution : UFieldSystemMetaData {
	EFieldResolutionType ResolutionType; // 0xb0
};

struct UAppleImageUtilsBaseAsyncTaskBlueprintProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
	FAppleImageUtilsImageConversionResult ConversionResult; // 0x60
};

struct UDistributionVectorUniform : UDistributionVector {
	FVector MAX; // 0x38
	FVector Min; // 0x44
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x55
	char bUseExtremes : 1; // 0x58
};

struct UMovieSceneCameraShakeSection : UMovieSceneSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe0
	UCameraShake* ShakeClass; // 0x100
	float PlayScale; // 0x108
	ECameraAnimPlaySpace PlaySpace; // 0x10c
	FRotator UserDefinedPlaySpace; // 0x110
};

struct UPaperSprite : UObject {
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FVector2D BakedSourceUV; // 0x48
	FVector2D BakedSourceDimension; // 0x50
	UTexture2D* BakedSourceTexture; // 0x58
	UMaterialInterface* DefaultMaterial; // 0x60
	UMaterialInterface* AlternateMaterial; // 0x68
	TArray<FPaperSpriteSocket> Sockets; // 0x70
	ESpriteCollisionMode SpriteCollisionDomain; // 0x80
	float PixelsPerUnrealUnit; // 0x84
	UBodySetup* BodySetup; // 0x88
	int32_t AlternateMaterialSplitIndex; // 0x90
	TArray<FVector4> BakedRenderData; // 0x98
};

struct ULightmappedSurfaceCollection : UObject {
	UModel* SourceModel; // 0x28
	TArray<int32_t> Surfaces; // 0x30
};

struct UParticleModuleSizeScale : UParticleModuleSizeBase {
	FRawDistributionVector SizeScale; // 0x30
	char EnableX : 1; // 0x78
	char EnableY : 1; // 0x78
	char EnableZ : 1; // 0x78
};

struct UBillboardComponent : UPrimitiveComponent {
	UTexture2D* Sprite; // 0x4b0
	char bIsScreenSizeScaled : 1; // 0x4b8
	float ScreenSize; // 0x4bc
	float U; // 0x4c0
	float UL; // 0x4c4
	float V; // 0x4c8
	float VL; // 0x4cc
};

struct UMovieSceneEnumTrack : UMovieScenePropertyTrack {
	UEnum* Enum; // 0x88
};

struct UBaseBrushTool : UMeshSurfacePointTool {
	UBrushBaseProperties* BrushProperties; // 0xc0
	bool bInBrushStroke; // 0xc8
	FBrushStampData LastBrushStamp; // 0xcc
	TSoftClassPtr<UObject> PropertyClass; // 0x188
	UBrushStampIndicator* BrushStampIndicator; // 0x1b0
};

struct UBravoHotelVehicleData : UDataAsset {
	FText DisplayName; // 0x30
	float MaxHealthPoint; // 0x48
	TArray<EWeaponType> AllowedWeaponTypes; // 0x50
	TArray<FDamageModifierByWeapon> TakenWeaponDamageModifiers; // 0x60
	float DefaultFuelAmountMin; // 0x70
	float DefaultFuelAmountMax; // 0x74
	float MaxFuelAmount; // 0x78
	float FuelConsumptionSpeed; // 0x7c
	float BoostFuelConsumptionSpeed; // 0x80
	TArray<float> FuelConsumptionRatioByGear; // 0x88
	float MaxTireHealthPoint; // 0x98
	float ItemUseMaxSpeed; // 0x9c
	float ItemUseMinCrashSpeed; // 0xa0
	bool bCanDriverUseWeapon; // 0xa4
	TMap<FName, UParticleSystem*> BoosterParticlesOnGround; // 0xa8
	TMap<FName, UParticleSystem*> BoosterParticleOnWater; // 0xf8
	TMap<FName, UParticleSystem*> NitroBoostParticle; // 0x148
	UAkAudioEvent* StartBoostSound; // 0x198
	UAkAudioEvent* StopBoostSound; // 0x1a0
	UAkAudioEvent* NitroBoostStartSound; // 0x1a8
	UAkAudioEvent* NitroBoostStopSound; // 0x1b0
	TArray<FVehicleCrashDamage> CrashDamages; // 0x1b8
	float ExplosionDamageToCharacter; // 0x1c8
	float ExplosionDamageToDriver; // 0x1cc
	float ExplosionDamageToPassenger; // 0x1d0
	float ExplosionDamageToRigidBody; // 0x1d4
	float ExplosionDamageMin; // 0x1d8
	float ExplosionDamageFalloff; // 0x1dc
	float ExplosionInnerRadius; // 0x1e0
	float ExplosionDamageRadius; // 0x1e4
	float NitroBoomExplosionMultiplyRate; // 0x1e8
	UCurveFloat* CollisionDeltaSpeedForCharacter; // 0x1f0
	UCurveFloat* CollisionDeltaSpeedForDestructible; // 0x1f8
	float BaseMassForDestructible; // 0x200
	bool bUseAutoEscape; // 0x204
	float EscapePitch; // 0x208
	float EscapeRoll; // 0x20c
	UCurveFloat* EscapeDamageBySpeed; // 0x210
	UUserWidget* SubInfoWidget; // 0x218
};

struct AAIController : AController {
	char bStartAILogicOnPossess : 1; // 0x400
	char bStopAILogicOnUnposses : 1; // 0x400
	char bLOSflag : 1; // 0x400
	char bSkipExtraLOSChecks : 1; // 0x400
	char bAllowStrafe : 1; // 0x400
	char bWantsPlayerState : 1; // 0x400
	char bSetControlRotationFromPawnOrientation : 1; // 0x400
	UPathFollowingComponent* PathFollowingComponent; // 0x408
	UBrainComponent* BrainComponent; // 0x410
	UAIPerceptionComponent* PerceptionComponent; // 0x418
	UPawnActionsComponent* ActionsComp; // 0x420
	UBlackboardComponent* Blackboard; // 0x428
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x430
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x438
	FMulticastInlineDelegate ReceiveMoveCompleted; // 0x440
};

struct AARSkyLight : ASkyLight {
	UAREnvironmentCaptureProbe* CaptureProbe; // 0x338
};

struct UActorSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x348
	FActorSequenceObjectReferenceMap ObjectReferences; // 0x350
};

struct UUW-ListWidget_DamageLog_C : UUW-ListWidget_ItemBase_C {
	URichTextBlock* NewRichText; // 0x260
	UTextBlock* T_Damage; // 0x268
	UTextBlock* T_DamageCauser; // 0x270
	UTextBlock* T_DamageResult; // 0x278
	UTextBlock* T_HeadShot; // 0x280
	UTextBlock* T_HitCount; // 0x288
	UTextBlock* T_HitType; // 0x290
	UTextBlock* T_TargetClass; // 0x298
	UTextBlock* T_TargetLevel; // 0x2a0
	UTextBlock* T_TargetName; // 0x2a8
	UTextBlock* T_TargetWeapon; // 0x2b0
	UTextBlock* T_WeaponLevel; // 0x2b8
	FHitDamageLogInfo DamageLogInfo; // 0x2c0
	float LogTime; // 0xe20
	float LogStackValidTime; // 0xe24
};

struct UScrollBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FScrollBoxStyle ScrollBoxStyle; // 0x30
};

struct ALevelBounds : AActor {
	UBoxComponent* BoxComponent; // 0x328
	bool bAutoUpdateBounds; // 0x330
};

struct UUW-CheatReplayListItem_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* Button_98; // 0x250
	UTextBlock* Time_2; // 0x258
	FMKReplayReportInfo SavedEvent; // 0x260
	FString SavedReplayFileName; // 0x288
	UBravoHotelReplayListWidget* ReplayListWidget; // 0x298
};

struct UUW-MatchEnd_ItemIcon_C : UUserWidget {
	UImage* Image_59; // 0x248
	UImage* Image_397; // 0x250
	UImage* Image_426; // 0x258
};

struct ABP-PersonalSupplyBox_C : ABHPersonalSupplyBox {
	FPointerToUberGraphFrame UberGraphFrame; // 0x390
	UStaticMeshComponent* StaticMeshUnassigned; // 0x398
	UStaticMeshComponent* StaticMeshAssigned; // 0x3a0
	float LandingTimer; // 0x3a8
	bool bLanding; // 0x3ac
	TArray<FSpawnItemResult> ItemResult; // 0x3b0
	float ParachuteTimer; // 0x3c0
	float VisibleValue; // 0x3c4
	bool VisibleAnimationState; // 0x3c8
};

struct UVectorFieldStatic : UVectorField {
	int32_t SizeX; // 0x48
	int32_t SizeY; // 0x4c
	int32_t SizeZ; // 0x50
	bool bAllowCPUAccess; // 0x54
	TArray<FVector4> CPUData; // 0x80
};

struct UCameraShakeSourceComponent : USceneComponent {
	ECameraShakeAttenuation Attenuation; // 0x230
	float InnerAttenuationRadius; // 0x234
	float OuterAttenuationRadius; // 0x238
	UCameraShake* CameraShake; // 0x240
	bool bAutoPlay; // 0x248
};

struct UBravoHotelMapDrawWidget : UUserWidget {
	UBravoHotelMapCompWidget* MapCompRef; // 0x248
	int32_t CircleClicedCount; // 0x250
	FLinearColor CurrentCircleColor; // 0x254
	FLinearColor TargetCircleColor; // 0x264
	FLinearColor ReplayCircleColor; // 0x274
};

struct UBravoHotelVehicleSpawnBoxComponent : UBoxComponent {
	float SpawnProbability; // 0x4d8
	TArray<FSpawnVehicleInfo> SpawnVehiclesInBoxList; // 0x4e0
	FName StandardGroupName; // 0x4f0
	UBravoHotelVehicleStandardGroupBoxComponent* ParentsStandardGroupBoxComponent; // 0x4f8
	FName DivisionVehicleKey; // 0x500
};

struct UBravoHotelCompassWidget : UUserWidget {
	float Length; // 0x250
	float ArragnedAngle; // 0x254
	float AngleBetweenUnits; // 0x258
	float DefaultLengthRate; // 0x25c
	float AdditionalLengthRate; // 0x260
	FMarkerInfo PersonalSupplyBoxMarkerInfo; // 0x278
	TArray<FMarkerInfo> MarkerInfos; // 0x2a0
	TArray<FMaterialItemMarkerInfo> MaterialItemMarkerInfos; // 0x2b0
	TArray<FLocalPingMarkerInfo> LocalPingMarkerInfos; // 0x2c0
	TArray<FResuscitationMarkerInfo> ResuscitationMarkerInfos; // 0x2d0
	FExpertWeaponItemMarkerInfo ExpertWeaponItemMarkerInfo; // 0x2e0
	TArray<FCompassUnit> UnitArray; // 0x320
	TArray<FCompassUnit> UnitArray2; // 0x330
	UCurveFloat* ScaleCurve; // 0x340
};

struct UFSM_SetStateID_Async : UBlueprintAsyncActionBase {
	UStateMachineComponent* Target; // 0x30
	char StateID; // 0x38
	float Timer; // 0x3c
	bool Repeat; // 0x40
	FTimerHandle TimerHandle; // 0x48
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnAborted; // 0x60
};

struct UMaterialExpressionFontSampleParameter : UMaterialExpressionFontSample {
	FName ParameterName; // 0x50
	FGuid ExpressionGUID; // 0x58
	FName Group; // 0x68
};

struct UAkAssetBase : UAkAudioType {
	UAkAssetPlatformData* PlatformAssetData; // 0x40
};

struct UGeneralProjectSettings : UObject {
	FString CompanyName; // 0x28
	FString CompanyDistinguishedName; // 0x38
	FString CopyrightNotice; // 0x48
	FString Description; // 0x58
	FString Homepage; // 0x68
	FString LicensingTerms; // 0x78
	FString PrivacyPolicy; // 0x88
	FGuid ProjectID; // 0x98
	FString ProjectName; // 0xa8
	FString ProjectVersion; // 0xb8
	FString SupportContact; // 0xc8
	FText ProjectDisplayedTitle; // 0xd8
	FText ProjectDebugTitleInfo; // 0xf0
	bool bShouldWindowPreserveAspectRatio; // 0x108
	bool bUseBorderlessWindow; // 0x109
	bool bStartInVR; // 0x10a
	bool bStartInAR; // 0x10b
	bool bSupportAR; // 0x10c
	bool bAllowWindowResize; // 0x10d
	bool bAllowClose; // 0x10e
	bool bAllowMaximize; // 0x10f
	bool bAllowMinimize; // 0x110
};

struct UUW-Lobby_Craft_Success_Perk_Open_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UWidgetAnimation* Fade_in_Black_Bg; // 0x250
	UWidgetAnimation* Anim_ShowPerk; // 0x258
	UImage* Image_319; // 0x260
	UImage* Img_Opened; // 0x268
	UTextBlock* T_Desc; // 0x270
	UTextBlock* T_Name; // 0x278
	UUW-Lobby_Craft_Success_Perk_Slot_C* UW-Lobby_Craft_Success_Perk_Slot; // 0x280
	UMaterialInstanceDynamic* RarityBGMaterialInstance; // 0x288
	float CurrentAnim; // 0x290
};

struct APaperSpriteActor : AActor {
	UPaperSpriteComponent* RenderComponent; // 0x328
};

struct UBravoHotelVehicleAnimInstance : UVehicleAnimInstance {
	ABravoHotelVehicle* Vehicle; // 0x998
	UBravoHotelVehicleMovementComponent* VehicleMovementComponent; // 0x9a0
	float DeltaTime; // 0x9a8
	float SteeringModifier; // 0x9b4
	FRotator SteeringWheelRotation; // 0x9b8
	bool bIsMoving; // 0x9c4
	FRotator TwoWheelVehicleWheelRotation_Front; // 0x9c8
	FRotator TwoWheelVehicleWheelRotation_Rear; // 0x9d4
	FVector TwoWheelVehicleWheelLocation_Front; // 0x9e0
	FVector TwoWheelVehicleWheelLocation_Rear; // 0x9ec
	FVector TwoWheelVehicleSuspension_Front; // 0x9f8
	FVector TwoWheelVehicleSuspension_Rear; // 0xa04
	FName FrontWheelSocketName; // 0xa10
	FName RearWheelSocketName; // 0xa18
	FName FrontSuspensionSocketName; // 0xa20
	FName RearSuspensionSocketName; // 0xa28
	bool bIsFPPMode; // 0xa30
	bool bIsLeftSteering; // 0xa31
	bool bIsRightSteering; // 0xa32
	float LeftSteeringPlayRate; // 0xa34
	float RightSteeringPlayRate; // 0xa38
	bool bIsIdleSteering; // 0xa3c
	bool bHoldUpdateTransition; // 0xa3d
};

struct UImage : UWidget {
	FSlateBrush Brush; // 0x108
	FDelegate BrushDelegate; // 0x190
	FLinearColor ColorAndOpacity; // 0x1a0
	FDelegate ColorAndOpacityDelegate; // 0x1b0
	bool bFlipForRightToLeftFlowDirection; // 0x1c0
	FDelegate OnMouseButtonDownEvent; // 0x1c4
};

struct UAISense_Sight : UAISense {
	int32_t MaxTracesPerTick; // 0x148
	int32_t MinQueriesPerTimeSliceCheck; // 0x14c
	double MaxTimeSlicePerTick; // 0x150
	float HighImportanceQueryDistanceThreshold; // 0x158
	float MaxQueryImportance; // 0x160
	float SightLimitQueryImportance; // 0x164
};

struct ULevelActorContainer : UObject {
	TArray<AActor*> Actors; // 0x28
};

struct UMaterialExpressionSceneColor : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput OffsetFraction; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct UUW-BlackMarket_Slot_Vehicle_C : UUW-BlackMarket_Slot_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3d8
	UButton* BTN-Menu02; // 0x3e0
	UCanvasPanel* CP-SlotInfo; // 0x3e8
	UImage* IMG-BG; // 0x3f0
	UImage* IMG-BG-Border; // 0x3f8
	UImage* IMG-Item; // 0x400
	UImage* IMG-Mask; // 0x408
	UImage* IMG-Over; // 0x410
	UImage* IMG-Over-Border; // 0x418
	UOverlay* Menu02; // 0x420
	UOverlay* Overlay_Mask; // 0x428
	UTextBlock* TXT-ItemName; // 0x430
	UTextBlock* TXT-Menu01; // 0x438
	UTextBlock* TXT-Menu02; // 0x440
};

struct UUW-NetworkDelay_C : UBravoHotelNetworkDelayWidget {
	UImage* Image_350; // 0x260
	UImage* Image_409; // 0x268
	UImage* Image_479; // 0x270
	UImage* Image_564; // 0x278
};

struct UBravoHotelTeamInfoSlotWidget : UUserWidget {
	FTimerHandle TimerHandle_CheckValue; // 0x248
	int32_t SlotIndex; // 0x2dc
	ABravoHotelPlayerState* PlayerState; // 0x2e0
	int32_t PlayedFireAnimationCnt; // 0x2e8
	bool bPlayingFireAnimation; // 0x2ec
	int32_t FireCnt; // 0x2f0
	float StartDownTime; // 0x2f4
	float TotalDownTime; // 0x2f8
	float DownTickTime; // 0x2fc
	ECharacterState CurrentState; // 0x300
	bool bIsLocalState; // 0x301
};

struct UARTexture : UTexture {
	EARTextureType TextureType; // 0xb8
	float Timestamp; // 0xbc
	FGuid ExternalTextureGuid; // 0xc0
	FVector2D Size; // 0xd0
};

struct UMaterialExpressionCurveAtlasRowParameter : UMaterialExpressionScalarParameter {
	UCurveLinearColor* Curve; // 0x60
	UCurveLinearColorAtlas* Atlas; // 0x68
	FExpressionInput InputTime; // 0x70
};

struct UBP-LobbyWidget_Web_C : UBravoHotelLobbyWidget_Web {
	FPointerToUberGraphFrame UberGraphFrame; // 0x4d8
	UWidgetAnimation* FadeOutNotice; // 0x4e0
	UImage* Bg; // 0x4e8
	UImage* Bg_2; // 0x4f0
	UCanvasPanel* CanvasPanel_GameNotice; // 0x4f8
	UCanvasPanel* CanvasPanel_PrefetchingProgress; // 0x500
	UImage* Image; // 0x508
	UImage* Image_145; // 0x510
	UTextBlock* ProgressText; // 0x518
	UUW-Lobby_Main_Web_C* UW-Lobby_Main_Web; // 0x520
	TArray<FFLobbyWeaponInfo> WeaponList_1; // 0x528
	TArray<UUserWidget*> CharacterInfoWidgetList; // 0x538
	int32_t PartySize; // 0x548
	UParticleSystem* EquipmentTransition; // 0x550
	bool BindParticle; // 0x558
	TArray<FVector4> EffectPool; // 0x560
	FMulticastInlineDelegate EventDispatcher_MoveToCrafting; // 0x570
	FString CurrentTab; // 0x580
};

struct UMaterialExpressionReroute : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UAkWindowsInitializationSettings : UObject {
	FAkCommonInitializationSettingsWithSampleRate CommonSettings; // 0x28
	FAkCommunicationSettingsWithSystemInitialization CommunicationSettings; // 0x90
	FAkWindowsAdvancedInitializationSettings AdvancedSettings; // 0xb8
};

struct UParticleModuleSizeScaleBySpeed : UParticleModuleSizeBase {
	FVector2D SpeedScale; // 0x30
	FVector2D MaxScale; // 0x38
};

struct UDatasmithSkyLightComponentTemplate : UDatasmithObjectTemplate {
	ESkyLightSourceType SourceType; // 0x30
	int32_t CubemapResolution; // 0x34
	UTextureCube* Cubemap; // 0x38
};

struct UTransformProxy : UObject {
	bool bRotatePerObject; // 0x70
	bool bSetPivotMode; // 0x71
	FTransform SharedTransform; // 0x90
	FTransform InitialSharedTransform; // 0xc0
};

struct UBravoHotelQuestComponent : UActorComponent {
	TArray<FSeasonQuestInfo> SeasonQuestInfos; // 0xb0
	FMulticastInlineDelegate OnScenarioQuestStartDelegate; // 0xc0
	FMulticastInlineDelegate OnScenarioQuestUpdateDelegate; // 0xd0
	FMulticastInlineDelegate OnScenarioQuestStopDelegate; // 0xe0
	FQuestInfo ScenarioQuestInfo; // 0xf0
	UBravoHotelScenarioWidget* ScenarioWidgetClass; // 0x138
	UBravoHotelScenarioWidget* CurrentScenarioWidget; // 0x140
};

struct UEngine : UObject {
	UFont* TinyFont; // 0x30
	FSoftObjectPath TinyFontName; // 0x38
	UFont* SmallFont; // 0x50
	FSoftObjectPath SmallFontName; // 0x58
	UFont* MediumFont; // 0x70
	FSoftObjectPath MediumFontName; // 0x78
	UFont* LargeFont; // 0x90
	FSoftObjectPath LargeFontName; // 0x98
	UFont* SubtitleFont; // 0xb0
	FSoftObjectPath SubtitleFontName; // 0xb8
	TArray<UFont*> AdditionalFonts; // 0xd0
	TArray<FString> AdditionalFontNames; // 0xe8
	UConsole* ConsoleClass; // 0xf8
	FSoftClassPath ConsoleClassName; // 0x100
	UGameViewportClient* GameViewportClientClass; // 0x118
	FSoftClassPath GameViewportClientClassName; // 0x120
	ULocalPlayer* LocalPlayerClass; // 0x138
	FSoftClassPath LocalPlayerClassName; // 0x140
	AWorldSettings* WorldSettingsClass; // 0x158
	FSoftClassPath WorldSettingsClassName; // 0x160
	FSoftClassPath NavigationSystemClassName; // 0x178
	UNavigationSystemBase* NavigationSystemClass; // 0x190
	FSoftClassPath NavigationSystemConfigClassName; // 0x198
	UNavigationSystemConfig* NavigationSystemConfigClass; // 0x1b0
	FSoftClassPath AvoidanceManagerClassName; // 0x1b8
	UAvoidanceManager* AvoidanceManagerClass; // 0x1d0
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x1d8
	FSoftClassPath PhysicsCollisionHandlerClassName; // 0x1e0
	FSoftClassPath GameUserSettingsClassName; // 0x1f8
	UGameUserSettings* GameUserSettingsClass; // 0x210
	FSoftClassPath AIControllerClassName; // 0x218
	UGameUserSettings* GameUserSettings; // 0x230
	ALevelScriptActor* LevelScriptActorClass; // 0x238
	FSoftClassPath LevelScriptActorClassName; // 0x240
	FSoftClassPath DefaultBlueprintBaseClassName; // 0x258
	FSoftClassPath GameSingletonClassName; // 0x270
	UObject* GameSingleton; // 0x288
	FSoftClassPath AssetManagerClassName; // 0x290
	UAssetManager* AssetManager; // 0x2a8
	UTexture2D* DefaultTexture; // 0x2b0
	FSoftObjectPath DefaultTextureName; // 0x2b8
	UTexture* DefaultDiffuseTexture; // 0x2d0
	FSoftObjectPath DefaultDiffuseTextureName; // 0x2d8
	UTexture2D* DefaultBSPVertexTexture; // 0x2f0
	FSoftObjectPath DefaultBSPVertexTextureName; // 0x2f8
	UTexture2D* HighFrequencyNoiseTexture; // 0x310
	FSoftObjectPath HighFrequencyNoiseTextureName; // 0x318
	UTexture2D* DefaultBokehTexture; // 0x330
	FSoftObjectPath DefaultBokehTextureName; // 0x338
	UTexture2D* DefaultBloomKernelTexture; // 0x350
	FSoftObjectPath DefaultBloomKernelTextureName; // 0x358
	UMaterial* WireframeMaterial; // 0x370
	FString WireframeMaterialName; // 0x378
	UMaterial* DebugMeshMaterial; // 0x388
	FSoftObjectPath DebugMeshMaterialName; // 0x390
	UMaterial* EmissiveMeshMaterial; // 0x3a8
	FSoftObjectPath EmissiveMeshMaterialName; // 0x3b0
	UMaterial* LevelColorationLitMaterial; // 0x3c8
	FString LevelColorationLitMaterialName; // 0x3d0
	UMaterial* LevelColorationUnlitMaterial; // 0x3e0
	FString LevelColorationUnlitMaterialName; // 0x3e8
	UMaterial* LightingTexelDensityMaterial; // 0x3f8
	FString LightingTexelDensityName; // 0x400
	UMaterial* ShadedLevelColorationLitMaterial; // 0x410
	FString ShadedLevelColorationLitMaterialName; // 0x418
	UMaterial* ShadedLevelColorationUnlitMaterial; // 0x428
	FString ShadedLevelColorationUnlitMaterialName; // 0x430
	UMaterial* RemoveSurfaceMaterial; // 0x440
	FSoftObjectPath RemoveSurfaceMaterialName; // 0x448
	UMaterial* VertexColorMaterial; // 0x460
	FString VertexColorMaterialName; // 0x468
	UMaterial* VertexColorViewModeMaterial_ColorOnly; // 0x478
	FString VertexColorViewModeMaterialName_ColorOnly; // 0x480
	UMaterial* VertexColorViewModeMaterial_AlphaAsColor; // 0x490
	FString VertexColorViewModeMaterialName_AlphaAsColor; // 0x498
	UMaterial* VertexColorViewModeMaterial_RedOnly; // 0x4a8
	FString VertexColorViewModeMaterialName_RedOnly; // 0x4b0
	UMaterial* VertexColorViewModeMaterial_GreenOnly; // 0x4c0
	FString VertexColorViewModeMaterialName_GreenOnly; // 0x4c8
	UMaterial* VertexColorViewModeMaterial_BlueOnly; // 0x4d8
	FString VertexColorViewModeMaterialName_BlueOnly; // 0x4e0
	FSoftObjectPath DebugEditorMaterialName; // 0x4f0
	UMaterial* ConstraintLimitMaterial; // 0x508
	UMaterialInstanceDynamic* ConstraintLimitMaterialX; // 0x510
	UMaterialInstanceDynamic* ConstraintLimitMaterialXAxis; // 0x518
	UMaterialInstanceDynamic* ConstraintLimitMaterialY; // 0x520
	UMaterialInstanceDynamic* ConstraintLimitMaterialYAxis; // 0x528
	UMaterialInstanceDynamic* ConstraintLimitMaterialZ; // 0x530
	UMaterialInstanceDynamic* ConstraintLimitMaterialZAxis; // 0x538
	UMaterialInstanceDynamic* ConstraintLimitMaterialPrismatic; // 0x540
	UMaterial* InvalidLightmapSettingsMaterial; // 0x548
	FSoftObjectPath InvalidLightmapSettingsMaterialName; // 0x550
	UMaterial* PreviewShadowsIndicatorMaterial; // 0x568
	FSoftObjectPath PreviewShadowsIndicatorMaterialName; // 0x570
	UMaterial* ArrowMaterial; // 0x588
	UMaterialInstanceDynamic* ArrowMaterialYellow; // 0x590
	FSoftObjectPath ArrowMaterialName; // 0x598
	FLinearColor LightingOnlyBrightness; // 0x5b0
	TArray<FLinearColor> ShaderComplexityColors; // 0x5c0
	TArray<FLinearColor> QuadComplexityColors; // 0x5d0
	TArray<FLinearColor> LightComplexityColors; // 0x5e0
	TArray<FLinearColor> StationaryLightOverlapColors; // 0x5f0
	TArray<FLinearColor> LODColorationColors; // 0x600
	TArray<FLinearColor> HLODColorationColors; // 0x610
	TArray<FLinearColor> StreamingAccuracyColors; // 0x620
	float MaxPixelShaderAdditiveComplexityCount; // 0x630
	float MaxES3PixelShaderAdditiveComplexityCount; // 0x634
	float MinLightMapDensity; // 0x638
	float IdealLightMapDensity; // 0x63c
	float MaxLightMapDensity; // 0x640
	char bRenderLightMapDensityGrayscale : 1; // 0x644
	float RenderLightMapDensityGrayscaleScale; // 0x648
	float RenderLightMapDensityColorScale; // 0x64c
	FLinearColor LightMapDensityVertexMappedColor; // 0x650
	FLinearColor LightMapDensitySelectedColor; // 0x660
	TArray<FStatColorMapping> StatColorMappings; // 0x670
	UPhysicalMaterial* DefaultPhysMaterial; // 0x680
	FSoftObjectPath DefaultPhysMaterialName; // 0x688
	TArray<FGameNameRedirect> ActiveGameNameRedirects; // 0x6a0
	TArray<FClassRedirect> ActiveClassRedirects; // 0x6b0
	TArray<FPluginRedirect> ActivePluginRedirects; // 0x6c0
	TArray<FStructRedirect> ActiveStructRedirects; // 0x6d0
	UTexture2D* PreIntegratedSkinBRDFTexture; // 0x6e0
	FSoftObjectPath PreIntegratedSkinBRDFTextureName; // 0x6e8
	UTexture2D* BlueNoiseTexture; // 0x700
	FSoftObjectPath BlueNoiseTextureName; // 0x708
	UTexture2D* MiniFontTexture; // 0x720
	FSoftObjectPath MiniFontTextureName; // 0x728
	UTexture* WeightMapPlaceholderTexture; // 0x740
	FSoftObjectPath WeightMapPlaceholderTextureName; // 0x748
	UTexture2D* LightMapDensityTexture; // 0x760
	FSoftObjectPath LightMapDensityTextureName; // 0x768
	UGameViewportClient* GameViewport; // 0x788
	TArray<FString> DeferredCommands; // 0x790
	int32_t TickCycles; // 0x7a0
	int32_t GameCycles; // 0x7a4
	int32_t ClientCycles; // 0x7a8
	float NearClipPlane; // 0x7ac
	float EditorNearClipPlane; // 0x7b0
	bool bUseCustomAudioModule; // 0x7b4
	char bHardwareSurveyEnabled : 1; // 0x7b8
	char bSubtitlesEnabled : 1; // 0x7b8
	char bSubtitlesForcedOff : 1; // 0x7b8
	int32_t MaximumLoopIterationCount; // 0x7bc
	char bCanBlueprintsTickByDefault : 1; // 0x7c0
	char bOptimizeAnimBlueprintMemberVariableAccess : 1; // 0x7c0
	char bAllowMultiThreadedAnimationUpdate : 1; // 0x7c0
	char bEnableEditorPSysRealtimeLOD : 1; // 0x7c0
	char bSmoothFrameRate : 1; // 0x7c0
	char bUseFixedFrameRate : 1; // 0x7c0
	float FixedFrameRate; // 0x7c4
	FFloatRange SmoothedFrameRateRange; // 0x7c8
	UEngineCustomTimeStep* CustomTimeStep; // 0x7d8
	FSoftClassPath CustomTimeStepClassName; // 0x800
	UTimecodeProvider* TimecodeProvider; // 0x818
	FSoftClassPath TimecodeProviderClassName; // 0x840
	bool bGenerateDefaultTimecode; // 0x858
	FFrameRate GenerateDefaultTimecodeFrameRate; // 0x85c
	float GenerateDefaultTimecodeFrameDelay; // 0x864
	char bCheckForMultiplePawnsSpawnedInAFrame : 1; // 0x868
	int32_t NumPawnsAllowedToBeSpawnedInAFrame; // 0x86c
	char bShouldGenerateLowQualityLightmaps : 1; // 0x870
	FColor C_WorldBox; // 0x874
	FColor C_BrushWire; // 0x878
	FColor C_AddWire; // 0x87c
	FColor C_SubtractWire; // 0x880
	FColor C_SemiSolidWire; // 0x884
	FColor C_NonSolidWire; // 0x888
	FColor C_WireBackground; // 0x88c
	FColor C_ScaleBoxHi; // 0x890
	FColor C_VolumeCollision; // 0x894
	FColor C_BSPCollision; // 0x898
	FColor C_OrthoBackground; // 0x89c
	FColor C_Volume; // 0x8a0
	FColor C_BrushShape; // 0x8a4
	float StreamingDistanceFactor; // 0x8a8
	FDirectoryPath GameScreenshotSaveDirectory; // 0x8b0
	ETransitionType TransitionType; // 0x8c0
	FString TransitionDescription; // 0x8c8
	FString TransitionGameMode; // 0x8d8
	float MeshLODRange; // 0x8e8
	char bAllowMatureLanguage : 1; // 0x8ec
	float CameraRotationThreshold; // 0x8f0
	float CameraTranslationThreshold; // 0x8f4
	float PrimitiveProbablyVisibleTime; // 0x8f8
	float MaxOcclusionPixelsFraction; // 0x8fc
	char bPauseOnLossOfFocus : 1; // 0x900
	int32_t MaxParticleResize; // 0x904
	int32_t MaxParticleResizeWarn; // 0x908
	TArray<FDropNoteInfo> PendingDroppedNotes; // 0x910
	float NetClientTicksPerSecond; // 0x920
	float DisplayGamma; // 0x924
	float MinDesiredFrameRate; // 0x928
	FLinearColor DefaultSelectedMaterialColor; // 0x92c
	FLinearColor SelectedMaterialColor; // 0x93c
	FLinearColor SelectionOutlineColor; // 0x94c
	FLinearColor SubduedSelectionOutlineColor; // 0x95c
	FLinearColor SelectedMaterialColorOverride; // 0x96c
	bool bIsOverridingSelectedColor; // 0x97c
	char bEnableOnScreenDebugMessages : 1; // 0x980
	char bEnableOnScreenDebugMessagesDisplay : 1; // 0x980
	char bSuppressMapWarnings : 1; // 0x980
	char bDisableAILogging : 1; // 0x980
	uint32_t bEnableVisualLogRecordingOnStart; // 0x984
	int32_t ScreenSaverInhibitorSemaphore; // 0x98c
	char bLockReadOnlyLevels : 1; // 0x990
	FString ParticleEventManagerClassPath; // 0x998
	float SelectionHighlightIntensity; // 0x9a8
	float BSPSelectionHighlightIntensity; // 0x9ac
	float SelectionHighlightIntensityBillboards; // 0x9b0
	TArray<FNetDriverDefinition> NetDriverDefinitions; // 0xc00
	TArray<FString> ServerActors; // 0xc10
	TArray<FString> RuntimeServerActors; // 0xc20
	float NetErrorLogInterval; // 0xc30
	char bStartedLoadMapMovie : 1; // 0xc34
	int32_t NextWorldContextHandle; // 0xc50
};

struct ABravoHotelSpectatorPawn : ASpectatorPawn {
	APawn* TargetPawn; // 0x3c0
};

struct UUW-SupplyToolTip_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UImage* GoldImage; // 0x250
	UImage* Image_362; // 0x258
	UTextBlock* Message; // 0x260
	UTextBlock* PriceValue; // 0x268
	USizeBox* SizeBox_2; // 0x270
};

struct UUW-PersonalSupplyBoxConsumableItemSlotWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UTextBlock* Cont; // 0x250
	UImage* DropHoverImage; // 0x258
	UImage* EmptyImage; // 0x260
	UImage* EquipImage; // 0x268
	UImage* HoverImage2; // 0x270
	UImage* ItemImage; // 0x278
	UWidgetSwitcher* WidgetSwitcher_2; // 0x280
	int32_t Index; // 0x288
	FMulticastInlineDelegate OnDropEventDispatcher; // 0x290
	FSupplyItem Data; // 0x2a0
	UUW-Inventory_DragItem_C* DraggedWidget; // 0x3a0
	bool IsEmpty; // 0x3a8
	FMulticastInlineDelegate ShowTooltipEventDispatcher; // 0x3b0
	FMulticastInlineDelegate OnChangeSlotEventDispatcher; // 0x3c0
	FMulticastInlineDelegate OnRightClickEventDispatcher; // 0x3d0
	FKey SaveKey; // 0x3e0
	int32_t ClickNum; // 0x3f8
};

struct USynthKnob : UWidget {
	float Value; // 0x108
	float StepSize; // 0x10c
	float MouseSpeed; // 0x110
	float MouseFineTuneSpeed; // 0x114
	char ShowTooltipInfo : 1; // 0x118
	FText ParameterName; // 0x120
	FText ParameterUnits; // 0x138
	FDelegate ValueDelegate; // 0x150
	FSynthKnobStyle WidgetStyle; // 0x160
	bool Locked; // 0x398
	bool IsFocusable; // 0x399
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x3a0
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x3b0
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x3c0
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x3d0
	FMulticastInlineDelegate OnValueChanged; // 0x3e0
};

struct UTouchInterface : UObject {
	TArray<FTouchInputControl> Controls; // 0x28
	float ActiveOpacity; // 0x38
	float InactiveOpacity; // 0x3c
	float TimeUntilDeactive; // 0x40
	float TimeUntilReset; // 0x44
	float ActivationDelay; // 0x48
	bool bPreventRecenter; // 0x4c
	float StartupDelay; // 0x50
};

struct UUW-Lobby_Craft_WeaponSelect_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
	UButton* btn_Cancel; // 0x250
	UButton* btn_Cancel_3; // 0x258
	UButton* btn_OK; // 0x260
	UHorizontalBox* HorizontalBox_WeaponList; // 0x268
	UImage* Image_68; // 0x270
	UImage* Image_128; // 0x278
	UUW-Lobby_Craft_WeaponSelect_Slot_C* UW-Lobby_Craft_WeaponSelect_Slot; // 0x280
	UUW-Lobby_Craft_WeaponSelect_Slot_C* UW-Lobby_Craft_WeaponSelect_Slot_2; // 0x288
	UUW-Lobby_Craft_WeaponSelect_Slot_C* UW-Lobby_Craft_WeaponSelect_Slot_3; // 0x290
	FMulticastInlineDelegate EventDispatcher_RequestItemCraft; // 0x298
	UUW-Lobby_Craft_WeaponSelect_Slot_C* SelectedWidget; // 0x2a8
	FMulticastInlineDelegate EventDispatcher_Cancel; // 0x2b0
};

struct UBaseMediaSource : UMediaSource {
	FName playerName; // 0x80
};

