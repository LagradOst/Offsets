// Created by BlueFire1337
// Updated 2022-01-18
// Generated 2022-01-23

namespace off {
	constexpr auto GNames = 0x4bf5140;
	constexpr auto GObjects = 0x4c0d6d8;
	constexpr auto GWorld = 0x4d42f18;
}

struct ABP_ClientBeacon_C : APropnightOnlineBeaconClient {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b0
	USceneComponent* DefaultSceneRoot; // 0x2b8
	UObject* ServerEntry; // 0x2c0
	int32_t Players; // 0x2c8
	FDateTime SendTime; // 0x2d0
	FDateTime ReceiveTime; // 0x2d8
	UBP_SessionData_C* session; // 0x2e0
};

struct UParticleModuleLocationEmitterDirect : UParticleModuleLocationBase {
	FName EmitterName; // 0x30
};

struct UOnsetNRT : UAudioSynesthesiaNRT {
	UOnsetNRTSettings* Settings; // 0x78
};

struct UEOSCoreAuthLogin : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct ANavLinkProxy : AActor {
	TArray<FNavigationLink> PointLinks; // 0x230
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x240
	UNavLinkCustomComponent* SmartLinkComp; // 0x250
	bool bSmartLinkIsRelevant; // 0x258
	FMulticastInlineDelegate OnSmartLinkReached; // 0x260
};

struct UMediaSoundComponent : USynthComponent {
	EMediaSoundChannels Channels; // 0x6c0
	bool DynamicRateAdjustment; // 0x6c4
	float RateAdjustmentFactor; // 0x6c8
	FFloatRange RateAdjustmentRange; // 0x6cc
	UMediaPlayer* MediaPlayer; // 0x6e0
};

struct UAlarmsWidgetSize_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	AActor* Actor; // 0xb8
	TArray<ANewAlarmBP_C*> Alarms; // 0xc0
};

struct UTireConfig : UDataAsset {
	float FrictionScale; // 0x30
	TArray<FTireConfigMaterialFriction> TireFrictionScales; // 0x38
};

struct APhysicsThruster : ARigidBodyBase {
	UPhysicsThrusterComponent* ThrusterComponent; // 0x220
};

struct UOverlaySlot : UPanelSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UJumpShakeForProps_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
	FVOscillator ShakeLoc; // 0x1ac
};

struct UMovieSceneColorTrack : UMovieScenePropertyTrack {
	bool bIsSlateColor; // 0xb0
};

struct UWBP_HitMarkComponent_KillerAlarm_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ShowAnim; // 0x268
	UImage* Image; // 0x270
	UImage* Image_2; // 0x278
	UImage* Image_38; // 0x280
	USizeBox* SizeBox_2; // 0x288
	UWidgetSwitcher* WidgetSwitcher_ColorArrow; // 0x290
	float LifeTime; // 0x298
	FMulticastInlineDelegate OnRemoved; // 0x2a0
	FVector InstigatorLocation; // 0x2b0
	ASurvivorMasterBP_C* PlayerRef; // 0x2c0
	bool Tutorial?; // 0x2c8
};

struct UParticleModuleSizeScaleBySpeed : UParticleModuleSizeBase {
	FVector2D SpeedScale; // 0x30
	FVector2D MaxScale; // 0x38
};

struct UBansheeScreamShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UMaterialExpressionConstant4Vector : UMaterialExpression {
	FLinearColor Constant; // 0x40
};

struct UMaterialExpressionFloor : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UBoundsCopyComponent : UActorComponent {
	TSoftObjectPtr<AActor> BoundsSourceActor; // 0xb0
	bool bUseCollidingComponentsForSourceBounds; // 0xd8
	bool bKeepOwnBoundsScale; // 0xd9
	bool bUseCollidingComponentsForOwnBounds; // 0xda
	FTransform PostTransform; // 0xe0
	bool bCopyXBounds; // 0x110
	bool bCopyYBounds; // 0x111
	bool bCopyZBounds; // 0x112
};

struct UMaterialInterface : UObject {
	USubsurfaceProfile* SubsurfaceProfile; // 0x38
	FLightmassMaterialInterfaceSettings LightmassSettings; // 0x50
	TArray<FMaterialTextureInfo> TextureStreamingData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct USpotLightComponent : UPointLightComponent {
	float InnerConeAngle; // 0x358
	float OuterConeAngle; // 0x35c
};

struct UWBP_LastChance_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UCanvasPanel* CanvasPanel_1; // 0x268
	UImage* Image_2; // 0x270
	UImage* Image_3; // 0x278
	UImage* Image_4; // 0x280
	UImage* Image_Many_3; // 0x288
	UImage* Image_Many_5; // 0x290
	UImage* Image_Ref; // 0x298
	UTextBlock* TextBlock_Count; // 0x2a0
	UTextBlock* TextBlock_Count_2; // 0x2a8
	UWidgetSwitcher* WidgetSwitcher_1; // 0x2b0
	int32_t Counter; // 0x2b8
	bool IsHidden; // 0x2bc
};

struct USkillPoints_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* BG; // 0x268
	UTextBlock* Description; // 0x270
	UImage* Image; // 0x278
	UImage* Image_397; // 0x280
	UProgressBar* ProgressBar_164; // 0x288
	UImage* Skill1BG; // 0x290
	UImage* Skill1Image; // 0x298
	UImage* Skill2BG; // 0x2a0
	UImage* Skill2CDBG; // 0x2a8
	UTextBlock* Skill2CDText; // 0x2b0
	UImage* Skill2Image; // 0x2b8
	UImage* Skill3BG; // 0x2c0
	UImage* Skill3Image; // 0x2c8
	UTextBlock* TextBlock_2; // 0x2d0
	UTextBlock* TextBlock_75; // 0x2d8
	UTextBlock* TextBlock_87; // 0x2e0
	UTextBlock* TextBlock_155; // 0x2e8
	UTextBlock* TextBlock_251; // 0x2f0
	UTextBlock* Title; // 0x2f8
	UWidgetSwitcher* WidgetSwitcher_2; // 0x300
	UWidgetSwitcher* WidgetSwitcher_93; // 0x308
	ASurvivorMasterBP_C* Surv; // 0x310
	AKillerMasterBP_C* Killer; // 0x318
	bool Open?; // 0x320
	TArray<FString> Skills; // 0x328
	int32_t SelectedSkill; // 0x338
	bool Start?; // 0x33c
	TArray<bool> SkillsPassive?; // 0x340
	int32_t PrevLevel; // 0x350
	bool LevelUp?; // 0x354
};

struct ULocalizedOverlays : UOverlays {
	UBasicOverlays* DefaultOverlays; // 0x28
	TMap<FString, UBasicOverlays*> LocaleToOverlaysMap; // 0x30
};

struct UDoppelganger_AnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_36; // 0x420
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_9; // 0x4a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_13; // 0x560
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x600
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_12; // 0x628
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x6c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8; // 0x6f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x7b0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x7d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x930
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x958
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x980
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x9a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x9d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x9f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0xa20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0xa48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0xa70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0xa98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0xac0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0xae8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0xb10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0xb38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0xb60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0xb88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0xbb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0xbd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0xc00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0xc28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0xc50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0xc78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0xca0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0xcc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0xcf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0xd18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0xd40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0xd68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0xd90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0xdb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0xde0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0xe08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0xe30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0xe58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_35; // 0xe80
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0xf00
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0xf30
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7; // 0x1018
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34; // 0x10d8
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x1158
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x1188
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0x1270
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0x1330
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x13b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x13e0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0x14c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x1588
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x1608
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_11; // 0x1638
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x16d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0x1758
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0x17d8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_10; // 0x1858
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x18f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x1928
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x19a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x19d8
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x1a58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x1a88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x1b08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x1b88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x1c08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x1c88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x1d08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x1d88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x1e08
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0x1e88
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x1f28
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_2; // 0x1fc8
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x2068
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x2108
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0x21a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x2268
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x2350
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x2380
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x2400
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x2430
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x24b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x2578
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x25f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x2628
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x26a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x2770
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x27f0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x2820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x28e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x2968
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x29e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x2a18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x2a98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x2b18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x2bb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x2c38
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x2cb8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x2d58
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x2e18
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x2f00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x2fe8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x3068
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x30e8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x3188
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x3228
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x3310
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x33d0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x3498
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x3580
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x3668
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x3698
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x3748
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x3808
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x38a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x38d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x3950
	FAnimNode_Root AnimGraphNode_Root; // 0x39f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x3a20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x3aa0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x3ac8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x3af0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x3b70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x3ba0
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x3c20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3c50
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x3cd0
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x3d00
	int32_t KillerType; // 0x3db0
	float IsHolded; // 0x3db4
	bool IsOnAir?; // 0x3db8
	float Speed; // 0x3dbc
	float SpeedChek; // 0x3dc0
	int32_t TypeAttack; // 0x3dc4
	bool Attak; // 0x3dc8
	float Direction; // 0x3dcc
	bool JumpEndChek; // 0x3dd0
	bool FIRE; // 0x3dd1
	bool Plant; // 0x3dd2
	bool Flashed; // 0x3dd3
	bool Drop; // 0x3dd4
	bool ChairDrop; // 0x3dd5
	bool Catch; // 0x3dd6
	bool MarioStun; // 0x3dd7
	bool Runaway; // 0x3dd8
	FRotator HeadR; // 0x3ddc
	float Vertical rotation; // 0x3de8
	float HorizontalValue; // 0x3dec
	bool bTurnL; // 0x3df0
	bool bTurnR; // 0x3df1
	bool IsOwner?; // 0x3df2
	bool GrabbedChar?; // 0x3df3
	bool SchoolBell?; // 0x3df4
	bool HiddenAttack?; // 0x3df5
	bool HardHit?; // 0x3df6
	float Blend Weights 0; // 0x3df8
	float Delta Time X; // 0x3dfc
	bool Get Ready; // 0x3e00
	bool PropHunt?; // 0x3e01
	float SpeedRateF; // 0x3e04
	bool Broke Anim; // 0x3e08
};

struct USequenceCameraShake : UCameraShakeBase {
	UCameraAnimationSequence* Sequence; // 0x98
	float PlayRate; // 0xa0
	float Scale; // 0xa4
	float BlendInTime; // 0xa8
	float BlendOutTime; // 0xac
	float RandomSegmentDuration; // 0xb0
	bool bRandomSegment; // 0xb4
	USequenceCameraShakeSequencePlayer* Player; // 0xb8
	USequenceCameraShakeCameraStandIn* CameraStandIn; // 0xc0
};

struct AOnlineBeaconClient : AOnlineBeacon {
	AOnlineBeaconHostObject* BeaconOwner; // 0x250
	UNetConnection* BeaconConnection; // 0x258
	EBeaconConnectionState ConnectionState; // 0x260
};

struct UMainchar1_AnimBP_FPP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_45; // 0x368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x3e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x410
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x438
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x460
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x488
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x4b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x4d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x500
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x528
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x550
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x578
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x5a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x5c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x5f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x618
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x640
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_44; // 0x668
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_43; // 0x6e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_42; // 0x768
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_41; // 0x7e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_40; // 0x868
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_39; // 0x8e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_38; // 0x968
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_37; // 0x9e8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_5; // 0xa68
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0xb18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_36; // 0xb48
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0xbc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_35; // 0xbf8
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0xc78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34; // 0xca8
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0xd28
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0xd58
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0xe40
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0xf28
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x1010
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x10f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x11e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x12c8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_4; // 0x13b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x1460
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x1548
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x1578
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x1660
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_3; // 0x1690
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0x1730
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x17b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x1830
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0x18b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0x1930
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x19b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x1a30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x1ab0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x1b30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x1be0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x1c60
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_2; // 0x1c90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x1d30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x1db0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x1e30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x1eb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x1f30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x1fb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x2030
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x20b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x2130
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x21e0
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x2260
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x2290
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x2330
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x23b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x2430
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x24b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x2530
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x25b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x2630
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x26b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x2730
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x27e0
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x2860
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x2890
	FAnimNode_Root AnimGraphNode_Root; // 0x2940
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x2970
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x29f0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x2a90
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x2be8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x2d40
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x2d68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x2d90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2e10
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x2e90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x2f30
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x2fb0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x3050
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x30f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x3170
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3210
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x3290
	bool IsOwner?; // 0x3330
	bool IsInAir?; // 0x3331
	float Speed; // 0x3334
	float Direction; // 0x3338
	bool Crawl?; // 0x333c
	bool FPP?; // 0x333d
	bool OnChair?; // 0x333e
	bool Grapple?; // 0x333f
	bool EndJump?; // 0x3340
	float HasItem; // 0x3344
	ItemType ItemType; // 0x3348
	bool UseFlashlight?; // 0x3349
	SurvStateEnum SurvStateEnum; // 0x334a
	MovementTypeEnum MovementType; // 0x334b
	bool ItemTake?; // 0x334c
	bool ItemSwap?; // 0x334d
	FVector NewVar_1; // 0x3350
	float XYSpeed; // 0x335c
	SurvChars Surv Char; // 0x3360
	bool Energy Drnk Anim B; // 0x3361
	bool KBook Anim B; // 0x3362
	bool Painkiller; // 0x3363
	bool ThrowGrenade; // 0x3364
	bool TakeRune; // 0x3365
	bool Is Tool Activated; // 0x3366
};

struct UParticleModuleBeamModifier : UParticleModuleBeamBase {
	BeamModifierType ModifierType; // 0x30
	FBeamModifierOptions PositionOptions; // 0x34
	FRawDistributionVector Position; // 0x38
	FBeamModifierOptions TangentOptions; // 0x80
	FRawDistributionVector Tangent; // 0x88
	char bAbsoluteTangent : 1; // 0xd0
	FBeamModifierOptions StrengthOptions; // 0xd4
	FRawDistributionFloat Strength; // 0xd8
};

struct UWidgetAnimationPlayCallbackProxy : UObject {
	FMulticastInlineDelegate Finished; // 0x28
};

struct UCheckInteractable_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	ASurvivorMasterBP_C* Survivor; // 0xb8
	AActor* InteractableActor; // 0xc0
	bool Alarm?; // 0xc8
	bool Chair?; // 0xc9
	bool Exit?; // 0xca
	bool Lootbox?; // 0xcb
	bool Survivor?; // 0xcc
	bool FindedSurvivor?; // 0xcd
	bool LootboxCanOpen?; // 0xce
	TArray<ALootBox_C*> LootBoxs; // 0xd0
};

struct APlayerController : AController {
	UPlayer* Player; // 0x298
	APawn* AcknowledgedPawn; // 0x2a0
	UInterpTrackInstDirector* ControllingDirTrackInst; // 0x2a8
	AHUD* MyHUD; // 0x2b0
	APlayerCameraManager* PlayerCameraManager; // 0x2b8
	APlayerCameraManager* PlayerCameraManagerClass; // 0x2c0
	bool bAutoManageActiveCameraTarget; // 0x2c8
	FRotator TargetViewRotation; // 0x2cc
	float SmoothTargetViewRotationSpeed; // 0x2e4
	TArray<AActor*> HiddenActors; // 0x2f0
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x300
	float LastSpectatorStateSynchTime; // 0x314
	FVector LastSpectatorSyncLocation; // 0x318
	FRotator LastSpectatorSyncRotation; // 0x324
	int32_t ClientCap; // 0x330
	UCheatManager* CheatManager; // 0x338
	UCheatManager* CheatClass; // 0x340
	UPlayerInput* PlayerInput; // 0x348
	TArray<FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x350
	char bPlayerIsWaiting : 1; // 0x3d0
	char NetPlayerIndex; // 0x3d4
	UNetConnection* PendingSwapConnection; // 0x410
	UNetConnection* NetConnection; // 0x418
	float InputYawScale; // 0x42c
	float InputPitchScale; // 0x430
	float InputRollScale; // 0x434
	char bShowMouseCursor : 1; // 0x438
	char bEnableClickEvents : 1; // 0x438
	char bEnableTouchEvents : 1; // 0x438
	char bEnableMouseOverEvents : 1; // 0x438
	char bEnableTouchOverEvents : 1; // 0x438
	char bForceFeedbackEnabled : 1; // 0x438
	float ForceFeedbackScale; // 0x43c
	TArray<FKey> ClickEventKeys; // 0x440
	EMouseCursor DefaultMouseCursor; // 0x450
	EMouseCursor CurrentMouseCursor; // 0x451
	ECollisionChannel DefaultClickTraceChannel; // 0x452
	ECollisionChannel CurrentClickTraceChannel; // 0x453
	float HitResultTraceDistance; // 0x454
	uint16_t SeamlessTravelCount; // 0x458
	uint16_t LastCompletedSeamlessTravelCount; // 0x45a
	UInputComponent* InactiveStateInputComponent; // 0x4d0
	char bShouldPerformFullTickWhenPaused : 1; // 0x4d8
	UTouchInterface* CurrentTouchInterface; // 0x4f0
	ASpectatorPawn* SpectatorPawn; // 0x548
	bool bIsLocalPlayerController; // 0x554
	FVector SpawnLocation; // 0x558
};

struct URadialIntMask : UFieldNodeInt {
	float Radius; // 0xb0
	FVector Position; // 0xb4
	int32_t InteriorValue; // 0xc0
	int32_t ExteriorValue; // 0xc4
	ESetMaskConditionType SetMaskCondition; // 0xc8
};

struct UBTService_RunEQS : UBTService_BlackboardBase {
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0x98
};

struct UATPCCameraModeScript_ChangeMovementSpeed : UATPCCameraModeScript {
	float NewMaxMovementSpeed; // 0x40
	bool bRestoreOldMovementSpeedOnExitCameraMode; // 0x44
	float OldMaxMovementSpeed; // 0x48
};

struct UMovieSceneGeometryCollectionTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
};

struct UGameInstance : UObject {
	TArray<ULocalPlayer*> LocalPlayers; // 0x38
	UOnlineSession* OnlineSession; // 0x48
	TArray<UObject*> ReferencedObjects; // 0x50
	FMulticastInlineDelegate OnPawnControllerChangedDelegates; // 0x78
};

struct UMaterialExpressionSkyAtmosphereLightIlluminance : UMaterialExpression {
	int32_t LightIndex; // 0x40
	FExpressionInput WorldPosition; // 0x44
};

struct UWBP_LootboxMain_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Throbber_AnimByScrap; // 0x268
	UWidgetAnimation* Throbber_AnimByCoins; // 0x270
	UWidgetAnimation* FadeIn; // 0x278
	UWidgetAnimation* HideViewer_Anim; // 0x280
	UWidgetAnimation* ShowViewerUI_Anim; // 0x288
	UWidgetAnimation* HideLootboxUI_Anim; // 0x290
	UButton* Button_Add; // 0x298
	UButton* Button_Clear; // 0x2a0
	UButton* Button_start; // 0x2a8
	UButton* Button_start_BuyByScraps; // 0x2b0
	UButton* ButtonCont; // 0x2b8
	UImage* FadeBG; // 0x2c0
	UHorizontalBox* HorizontalBox_ButtonContent; // 0x2c8
	UHorizontalBox* HorizontalBox_ButtonContentByScraps; // 0x2d0
	UImage* Image_Hovered_Buy; // 0x2d8
	UImage* Image_Hovered_Buy_Scraps; // 0x2e0
	UImage* Image_Hovered_Remaining; // 0x2e8
	UImage* Image_Normal_Buy; // 0x2f0
	UImage* Image_Normal_Buy_Scraps; // 0x2f8
	UImage* Image_Normal_Remaining; // 0x300
	UImage* Image_start; // 0x308
	UImage* Image_start_Scraps; // 0x310
	UImage* Image_Throbber; // 0x318
	UImage* Image_Throbber_Scraps; // 0x320
	UOverlay* Overlay_BuyButtonByCoins; // 0x328
	UOverlay* Overlay_BuyButtonByScraps; // 0x330
	UOverlay* Overlay_RemainingButton; // 0x338
	UTextBlock* Text_Money; // 0x340
	UTextBlock* Text_Money_Scrap; // 0x348
	UTextBlock* TextBlock_BuyLabel; // 0x350
	UTextBlock* TextBlock_BuyLabel_ByScraps; // 0x358
	UW_Path_C* W_Path; // 0x360
	UWBP_LootViewerUI_C* WBP_LootViewerUI; // 0x368
	UW_MainMenu_C* W_MainMenu; // 0x370
	bool IsViewerMode; // 0x378
	FS_LootBoxSkin Current Loot; // 0x380
	ABP_PrizeActor_C* PrizeActor; // 0x3b0
	ABP_LootBoxOriginal_C* lootbox; // 0x3b8
	bool AfterRowOpen; // 0x3c0
	bool IsThrobberAnim; // 0x3c1
	bool isEscapeBlocked; // 0x3c2
	bool IsCoinsEnough; // 0x3c3
	bool IsScapsEnough; // 0x3c4
	UButton* FocusedButton; // 0x3c8
};

struct UMovieSceneStringSection : UMovieSceneSection {
	FMovieSceneStringChannel StringCurve; // 0xe8
};

struct USubmixEffectDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectDelaySettings Settings; // 0x9c
	FSubmixEffectDelaySettings DynamicSettings; // 0xa8
};

struct UMovieSceneByteTrack : UMovieScenePropertyTrack {
	UEnum* Enum; // 0xb0
};

struct ASurv4_C : ASurvivorMasterBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1830
};

struct UMaterialExpressionArctangent2 : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct AGS_PropHunt_C : AGameStateBase {
	FPointerToUberGraphFrame UberGraphFrame; // 0x270
	UBP_ItemsManager_C* BP_ItemsManager; // 0x278
	USceneComponent* DefaultSceneRoot; // 0x280
	int32_t Seconds; // 0x288
	bool IsLobby; // 0x28c
	FMiniLobbyState LobbyState; // 0x290
	int32_t AlarmsCount; // 0x2e8
	TArray<ASurvivorMasterBP_C*> SurvArrayRef; // 0x2f0
	bool IsKillerWin; // 0x300
	TArray<APlayerStart*> PlayerStarts; // 0x308
	TArray<AActor*> AliveSurvivors; // 0x318
	TArray<AActor*> ReadyPlayers; // 0x328
	TArray<AHypnoChairBP_C*> ChairRef; // 0x338
	TArray<ANewAlarmBP_C*> AlarmsRef; // 0x348
	bool IsGameSession; // 0x358
	int32_t SurvsOnChair; // 0x35c
	int32_t NeedAlarmRelaoding; // 0x360
	int32_t EndGameAlarmCount; // 0x364
	bool DoorOpened?; // 0x368
	int32_t EscapedSurvCount; // 0x36c
	bool GameStart?; // 0x370
	TArray<FItemSnapshot> ItemSnapshots; // 0x378
	int32_t FloorsCount; // 0x388
	int32_t Score; // 0x38c
	bool GameEnd?; // 0x390
	TMap<AActor*, FString> VoteMap; // 0x398
	bool IsGranny; // 0x3e8
	int32_t Random; // 0x3ec
	TArray<bool> RemoveSurvs?; // 0x3f0
	int32_t CurrentCountCoins; // 0x400
	int32_t MaxCountCoins; // 0x404
	TArray<FTransform> CoinsPositions; // 0x408
	TArray<FTransform> FreeSpaceCoinsPositions; // 0x418
	float DeltaSeconds; // 0x428
	SurvClass SurvClass; // 0x42c
	bool IsPublic; // 0x42d
	FTimerHandle StartGameTimer; // 0x430
	bool BoostModeON?; // 0x438
	KillerType KillerType; // 0x439
	FVector Temp1; // 0x43c
	FRotator Temp2; // 0x448
	bool TimerStart?; // 0x454
	int32_t MaxScore_AlarmGame; // 0x458
	int32_t MaxScore_REVIVE; // 0x45c
	int32_t MaxScore_OutChair; // 0x460
	int32_t MaxScore_FLASH; // 0x464
	int32_t MaxScore_HealALLY; // 0x468
	int32_t MaxScore_HealSELF; // 0x46c
	int32_t MaxScore_OutGrip; // 0x470
	int32_t MaxScore_HIT; // 0x474
	int32_t MaxScore_DOWNED; // 0x478
	int32_t MaxScore_CHAIR; // 0x47c
	int32_t MaxScore_Stun; // 0x480
	int32_t MAXSCOREBLOCK_AlarmGame; // 0x484
	int32_t MAXSCOREBLOCK_REVIVE; // 0x488
	int32_t MAXSCOREBLOCK_OutChair; // 0x48c
	int32_t MAXSCOREBLOCK_FLASH; // 0x490
	int32_t MAXSCOREBLOCK_HealALLY; // 0x494
	int32_t MAXSCOREBLOCK_HealSELF; // 0x498
	int32_t MAXSCOREBLOCK_OutGrip; // 0x49c
	int32_t MAXSCOREBLOCK_Stun; // 0x4a0
	int32_t MAXSCOREBLOCK_HIT; // 0x4a4
	int32_t MAXSCOREBLOCK_DOWNED; // 0x4a8
	int32_t MAXSCOREBLOCK_CHAIR; // 0x4ac
	int32_t KillScoreCounter; // 0x4b0
	bool PropHuntMode?; // 0x4b4
	bool CaptureMode?; // 0x4b5
	TArray<ACoinActor_C*> coins; // 0x4b8
	FS_GameSettings GameSettings; // 0x4c8
	int32_t FartSeconds; // 0x4e8
	bool IsLobbyStateAccepted?; // 0x4ec
	int32_t TempCategory; // 0x4f0
	APlayerState* IgnoredPlayer; // 0x4f8
	TArray<APlayerState*> TempPlayerStates; // 0x500
	APlayerState* SurvFirstCategory; // 0x510
	APlayerState* SurvSecondCategory; // 0x518
	APlayerState* KillerCategory; // 0x520
	int32_t TempSwap1; // 0x528
	int32_t TempSwap2; // 0x52c
	TMap<MapVote, int32_t> ReadingMapVotesMap; // 0x530
	TMap<PlayerCategoryVote, int32_t> ReadingPlayersCategoryVotes; // 0x580
	int32_t VoteCountMap1; // 0x5d0
	int32_t VoteCountMap2; // 0x5d4
	int32_t VoteCountMap3; // 0x5d8
	int32_t VoteCountPlayerCategory1; // 0x5dc
	int32_t VoteCountPlayerCategory2; // 0x5e0
	int32_t VoteCountPlayerCategory3; // 0x5e4
	TArray<FName> TempMapNames; // 0x5e8
	int32_t IntTemp; // 0x5f8
	FName Map1; // 0x5fc
	FName Map2; // 0x604
	FName Map3; // 0x60c
	int32_t NextGameTimer; // 0x614
	TArray<int32_t> IntArrayTemp; // 0x618
	bool AllAlarmsReady?; // 0x628
	int32_t MatchTime; // 0x62c
	TArray<APlayerState*> TempPlayerStates2; // 0x630
	bool bPlayerStart; // 0x640
	FString TempSlotName1; // 0x648
	FString TempSlotName2; // 0x658
	bool Tutorial?; // 0x668
	FS_ServerSettings ServerSettings; // 0x670
	int32_t CountKillers; // 0x698
	int32_t CountSurvs; // 0x69c
	bool IsLobbyWait; // 0x6a0
	bool SoloMode?; // 0x6a1
	int32_t OnChairSurvs; // 0x6a4
	int32_t KillerPoints; // 0x6a8
	int32_t SurvPoints; // 0x6ac
	int32_t LobbyTime; // 0x6b0
	bool LobbyBlockRdy?; // 0x6b4
	int32_t TempMvp; // 0x6b8
	APS_PropHunt_C* MvpSurv; // 0x6c0
	bool MvpPlayerReady?; // 0x6c8
	APS_PropHunt_C* TempSwap; // 0x6d0
	int32_t INDX_Slots; // 0x6d8
	CoinEnum PointsType; // 0x6dc
	AActor* TempPlayer; // 0x6e0
	FTimerHandle WaitPlayersTimerHandle; // 0x6e8
	bool SomeoneLeftAfterFullLobby; // 0x6f0
	bool FullLobbyWasReached; // 0x6f1
	bool CanAssign; // 0x6f2
	bool KillerLeave?; // 0x6f3
	TArray<FName> TempPerks; // 0x6f8
	int32_t TempInt; // 0x708
	TMap<FString, int32_t> ReadingPlayersCategoryVotes_v2; // 0x710
	TArray<int32_t> VotesArray; // 0x760
	FMulticastInlineDelegate OnVoted; // 0x770
	int32_t MaxScore_DoorOpen; // 0x780
	int32_t MaxScore_ExitDoor; // 0x784
	TArray<FEndGamePlayerData> HighlightPlayerInformation; // 0x788
	TArray<FST_BannerInfo> BannerInfo; // 0x798
	FTimerHandle HandlerAddBanerInfo; // 0x7a8
	FMulticastInlineDelegate OnLogin; // 0x7b0
	int32_t LeftSurvsCounter; // 0x7c0
	TArray<APS_PropHunt_C*> ActivityPlayers; // 0x7c8
	FMulticastInlineDelegate UpdateActivityPlayers; // 0x7d8
	bool HaveDyingChars?; // 0x7e8
	TArray<FST_LeavePlayers_Tab_Stats> LeavePlayers; // 0x7f0
	FMulticastInlineDelegate UpdateLeavePlayers; // 0x800
	bool IsPlayerReloadingAlarmOvertime; // 0x810
};

struct UParticleModuleAccelerationBase : UParticleModule {
	char bAlwaysInWorldSpace : 1; // 0x30
};

struct UParticleModuleSizeScale : UParticleModuleSizeBase {
	FRawDistributionVector SizeScale; // 0x30
	char EnableX : 1; // 0x78
	char EnableY : 1; // 0x78
	char EnableZ : 1; // 0x78
};

struct UMovieSceneCameraAnimSection : UMovieSceneSection {
	FMovieSceneCameraAnimSectionData AnimData; // 0xe8
	UCameraAnim* CameraAnim; // 0x108
	float PlayRate; // 0x110
	float PlayScale; // 0x114
	float BlendInTime; // 0x118
	float BlendOutTime; // 0x11c
	bool bLooping; // 0x120
};

struct UNiagaraDataInterfaceExport : UNiagaraDataInterface {
	FNiagaraUserParameterBinding CallbackHandlerParameter; // 0x38
	ENDIExport_GPUAllocationMode GPUAllocationMode; // 0x58
	int32_t GPUAllocationFixedSize; // 0x5c
	float GPUAllocationPerParticleSize; // 0x60
};

struct UCameraAnimInst : UObject {
	UCameraAnim* CamAnim; // 0x28
	UInterpGroupInst* InterpGroupInst; // 0x30
	float PlayRate; // 0x50
	UInterpTrackMove* MoveTrack; // 0x68
	UInterpTrackInstMove* MoveInst; // 0x70
	ECameraShakePlaySpace PlaySpace; // 0x78
};

struct UParticleModuleLocationEmitter : UParticleModuleLocationBase {
	FName EmitterName; // 0x30
	ELocationEmitterSelectionMethod SelectionMethod; // 0x38
	char InheritSourceVelocity : 1; // 0x3c
	float InheritSourceVelocityScale; // 0x40
	char bInheritSourceRotation : 1; // 0x44
	float InheritSourceRotationScale; // 0x48
};

struct USpacer : UWidget {
	FVector2D Size; // 0x108
};

struct UApplicationLifecycleComponent : UActorComponent {
	FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0xb0
	FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0xc0
	FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0xd0
	FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0xe0
	FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0xf0
	FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x100
	FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x110
	FMulticastInlineDelegate OnTemperatureChangeDelegate; // 0x120
	FMulticastInlineDelegate OnLowPowerModeDelegate; // 0x130
};

struct UDirectionalLightComponent : ULightComponent {
	float ShadowCascadeBiasDistribution; // 0x328
	char bEnableLightShaftOcclusion : 1; // 0x32c
	float OcclusionMaskDarkness; // 0x330
	float OcclusionDepthRange; // 0x334
	FVector LightShaftOverrideDirection; // 0x338
	float WholeSceneDynamicShadowRadius; // 0x344
	float DynamicShadowDistanceMovableLight; // 0x348
	float DynamicShadowDistanceStationaryLight; // 0x34c
	int32_t DynamicShadowCascades; // 0x350
	float CascadeDistributionExponent; // 0x354
	float CascadeTransitionFraction; // 0x358
	float ShadowDistanceFadeoutFraction; // 0x35c
	char bUseInsetShadowsForMovableObjects : 1; // 0x360
	int32_t FarShadowCascadeCount; // 0x364
	float FarShadowDistance; // 0x368
	float DistanceFieldShadowDistance; // 0x36c
	float LightSourceAngle; // 0x370
	float LightSourceSoftAngle; // 0x374
	float ShadowSourceAngleFactor; // 0x378
	float TraceDistance; // 0x37c
	char bUsedAsAtmosphereSunLight : 1; // 0x380
	int32_t AtmosphereSunLightIndex; // 0x384
	FLinearColor AtmosphereSunDiskColorScale; // 0x388
	char bPerPixelAtmosphereTransmittance : 1; // 0x398
	char bCastShadowsOnClouds : 1; // 0x398
	char bCastShadowsOnAtmosphere : 1; // 0x398
	char bCastCloudShadows : 1; // 0x398
	float CloudShadowStrength; // 0x39c
	float CloudShadowOnAtmosphereStrength; // 0x3a0
	float CloudShadowOnSurfaceStrength; // 0x3a4
	float CloudShadowDepthBias; // 0x3a8
	float CloudShadowExtent; // 0x3ac
	float CloudShadowMapResolutionScale; // 0x3b0
	float CloudShadowRaySampleCountScale; // 0x3b4
	FLinearColor CloudScatteredLuminanceScale; // 0x3b8
	FLightmassDirectionalLightSettings LightmassSettings; // 0x3c8
	char bCastModulatedShadows : 1; // 0x3d8
	FColor ModulatedShadowColor; // 0x3dc
	float ShadowAmount; // 0x3e0
};

struct UInterpGroupCamera : UInterpGroup {
	UCameraAnim* CameraAnimInst; // 0x50
	float CompressTolerance; // 0x58
};

struct UMaterialExpressionTruncate : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UPaperTileSet : UObject {
	FIntPoint TileSize; // 0x28
	UTexture2D* TileSheet; // 0x30
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FIntMargin BorderMargin; // 0x48
	FIntPoint PerTileSpacing; // 0x58
	FIntPoint DrawingOffset; // 0x60
	int32_t WidthInTiles; // 0x68
	int32_t HeightInTiles; // 0x6c
	int32_t AllocatedWidth; // 0x70
	int32_t AllocatedHeight; // 0x74
	TArray<FPaperTileMetadata> PerTileData; // 0x78
	TArray<FPaperTileSetTerrain> Terrains; // 0x88
	int32_t TileWidth; // 0x98
	int32_t TileHeight; // 0x9c
	int32_t Margin; // 0xa0
	int32_t Spacing; // 0xa4
};

struct UWorldComposition : UObject {
	TArray<ULevelStreaming*> TilesStreaming; // 0x48
	double TilesStreamingTimeThreshold; // 0x58
	bool bLoadAllTilesDuringCinematic; // 0x60
	bool bRebaseOriginIn3DSpace; // 0x61
	float RebaseOriginDistance; // 0x64
};

struct UMaterialExpressionDDX : UMaterialExpression {
	FExpressionInput Value; // 0x40
};

struct USpyEyes_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	bool CD; // 0xf0
	int32_t Ammo; // 0xf4
	TArray<ASpyEye_C*> EyesRef; // 0xf8
	TArray<ASurvivorMasterBP_C*> SurvsRef; // 0x108
	TArray<AActor*> IgnorActors; // 0x118
	int32_t Count; // 0x128
	bool Reloading; // 0x12c
	float Radius; // 0x130
};

struct UPawnAction_Wait : UPawnAction {
	float TimeToWait; // 0x98
};

struct UReflectionCaptureComponent : USceneComponent {
	UBillboardComponent* CaptureOffsetComponent; // 0x1f8
	EReflectionSourceType ReflectionSourceType; // 0x200
	EMobileReflectionCompression MobileReflectionCompression; // 0x201
	UTextureCube* Cubemap; // 0x208
	float SourceCubemapAngle; // 0x210
	float Brightness; // 0x214
	bool bModifyMaxValueRGBM; // 0x218
	float MaxValueRGBM; // 0x21c
	FVector CaptureOffset; // 0x220
	FGuid MapBuildDataId; // 0x22c
	UTextureCube* CachedEncodedHDRCubemap; // 0x250
};

struct UAC_BattlEye_Client_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	UO_BEClient_C* BEClient; // 0xb8
	bool IsTicketSent; // 0xc0
	bool IsInited; // 0xc1
};

struct UPawnMovementComponent : UNavMovementComponent {
	APawn* PawnOwner; // 0x130
};

struct UMaterialExpressionCrossProduct : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UParticleModuleAttractorPointGravity : UParticleModuleAttractorBase {
	FVector Position; // 0x30
	float Radius; // 0x3c
	UDistributionFloat* Strength; // 0x40
	FRawDistributionFloat StrengthRaw; // 0x48
};

struct UScrollBox : UPanelWidget {
	FScrollBoxStyle WidgetStyle; // 0x120
	FScrollBarStyle WidgetBarStyle; // 0x348
	USlateWidgetStyleAsset* Style; // 0x818
	USlateWidgetStyleAsset* BarStyle; // 0x820
	EOrientation Orientation; // 0x828
	ESlateVisibility ScrollBarVisibility; // 0x829
	EConsumeMouseWheel ConsumeMouseWheel; // 0x82a
	FVector2D ScrollbarThickness; // 0x82c
	FMargin ScrollbarPadding; // 0x834
	bool AlwaysShowScrollbar; // 0x844
	bool AlwaysShowScrollbarTrack; // 0x845
	bool AllowOverscroll; // 0x846
	bool bAnimateWheelScrolling; // 0x847
	EDescendantScrollDestination NavigationDestination; // 0x848
	float NavigationScrollPadding; // 0x84c
	EScrollWhenFocusChanges ScrollWhenFocusChanges; // 0x850
	bool bAllowRightClickDragScrolling; // 0x851
	float WheelScrollMultiplier; // 0x854
	FMulticastInlineDelegate OnUserScrolled; // 0x858
};

struct UWBP_HitMarkComponent_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ShowAnim; // 0x268
	UImage* Image_38; // 0x270
	float LifeTime; // 0x278
	FMulticastInlineDelegate OnRemoved; // 0x280
	FVector InstigatorLocation; // 0x290
	ASurvivorMasterBP_C* PlayerRef; // 0x2a0
};

struct UAmmoKillerWBP_C : UUserWidget {
	UImage* Image; // 0x260
	UTextBlock* TextBlock_3; // 0x268
	int32_t Ammo; // 0x270
	int32_t Eyes; // 0x274
};

struct ABrush : AActor {
	EBrushType BrushType; // 0x220
	FColor BrushColor; // 0x224
	int32_t PolyFlags; // 0x228
	char bColored : 1; // 0x22c
	char bSolidWhenSelected : 1; // 0x22c
	char bPlaceableFromClassBrowser : 1; // 0x22c
	char bNotForClientOrServer : 1; // 0x22c
	UModel* Brush; // 0x230
	UBrushComponent* BrushComponent; // 0x238
	char bInManipulation : 1; // 0x240
	TArray<FGeomSelection> SavedSelections; // 0x248
};

struct UMaterialExpressionTemporalSobol : UMaterialExpression {
	FExpressionInput Index; // 0x40
	FExpressionInput Seed; // 0x54
	uint32_t ConstIndex; // 0x68
	FVector2D ConstSeed; // 0x6c
};

struct USoundNodeGroupControl : USoundNode {
	TArray<int32_t> GroupSizes; // 0x48
};

struct UBTNode : UObject {
	FString NodeName; // 0x30
	UBehaviorTree* TreeAsset; // 0x40
	UBTCompositeNode* ParentNode; // 0x48
};

struct UMovieSceneWidgetMaterialTrack : UMovieSceneMaterialTrack {
	TArray<FName> BrushPropertyNamePath; // 0x90
	FName TrackName; // 0xa0
};

struct UWBP_MiniFriendEntry_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Hide_Anim; // 0x268
	UButton* Button_124; // 0x270
	UImage* Image_Avatar; // 0x278
	UImage* Image_BG; // 0x280
	UImage* Image_BG_2; // 0x288
	UImage* Image_Hover; // 0x290
	UImage* Image_LeaderLobby; // 0x298
	UOverlay* Overlay_Nickname; // 0x2a0
	URetainerBox* RetainerBox_52; // 0x2a8
	UTextBlock* TextBlock_Nickname; // 0x2b0
	FVector2D AvatarSize; // 0x2b8
	FString SteamId; // 0x2c0
	UMaterialInstanceDynamic* Material; // 0x2d0
	FString Username; // 0x2d8
	bool IsOwner; // 0x2e8
};

struct UDistributionVectorUniform : UDistributionVector {
	FVector Max; // 0x38
	FVector Min; // 0x44
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x55
	char bUseExtremes : 1; // 0x58
};

struct AChaosSolverActor : AActor {
	FChaosSolverConfiguration Properties; // 0x220
	float TimeStepMultiplier; // 0x288
	int32_t CollisionIterations; // 0x28c
	int32_t PushOutIterations; // 0x290
	int32_t PushOutPairIterations; // 0x294
	float ClusterConnectionFactor; // 0x298
	EClusterConnectionTypeEnum ClusterUnionConnectionType; // 0x29c
	bool DoGenerateCollisionData; // 0x29d
	FSolverCollisionFilterSettings CollisionFilterSettings; // 0x2a0
	bool DoGenerateBreakingData; // 0x2b0
	FSolverBreakingFilterSettings BreakingFilterSettings; // 0x2b4
	bool DoGenerateTrailingData; // 0x2c4
	FSolverTrailingFilterSettings TrailingFilterSettings; // 0x2c8
	float MassScale; // 0x2d8
	bool bGenerateContactGraph; // 0x2dc
	bool bHasFloor; // 0x2dd
	float FloorHeight; // 0x2e0
	FChaosDebugSubstepControl ChaosDebugSubstepControl; // 0x2e4
	UBillboardComponent* SpriteComponent; // 0x2e8
	UChaosGameplayEventDispatcher* GameplayEventDispatcherComponent; // 0x308
};

struct UBasicOverlays : UOverlays {
	TArray<FOverlayItem> Overlays; // 0x28
};

struct UComboBox : UWidget {
	TArray<UObject*> Items; // 0x108
	FDelegate OnGenerateWidgetEvent; // 0x118
	bool bIsFocusable; // 0x128
};

struct UNetDriver : UObject {
	FString NetConnectionClassName; // 0x30
	FString ReplicationDriverClassName; // 0x40
	int32_t MaxDownloadSize; // 0x50
	char bClampListenServerTickRate : 1; // 0x54
	int32_t NetServerMaxTickRate; // 0x58
	int32_t MaxNetTickRate; // 0x5c
	int32_t MaxInternetClientRate; // 0x60
	int32_t MaxClientRate; // 0x64
	float ServerTravelPause; // 0x68
	float SpawnPrioritySeconds; // 0x6c
	float RelevantTimeout; // 0x70
	float KeepAliveTime; // 0x74
	float InitialConnectTimeout; // 0x78
	float ConnectionTimeout; // 0x7c
	float TimeoutMultiplierForUnoptimizedBuilds; // 0x80
	bool bNoTimeouts; // 0x84
	bool bNeverApplyNetworkEmulationSettings; // 0x85
	UNetConnection* ServerConnection; // 0x88
	TArray<UNetConnection*> ClientConnections; // 0x90
	int32_t RecentlyDisconnectedTrackingTime; // 0x100
	UWorld* World; // 0x140
	UPackage* WorldPackage; // 0x148
	UObject* NetConnectionClass; // 0x170
	UObject* ReplicationDriverClass; // 0x178
	FName NetDriverName; // 0x190
	TArray<FChannelDefinition> ChannelDefinitions; // 0x198
	TMap<FName, FChannelDefinition> ChannelDefinitionMap; // 0x1a8
	TArray<UChannel*> ActorChannelPool; // 0x1f8
	float Time; // 0x210
	UReplicationDriver* ReplicationDriver; // 0x6e8
};

struct UParticleModuleRotation_Seeded : UParticleModuleRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct APainCausingVolume : APhysicsVolume {
	char bPainCausing : 1; // 0x268
	float DamagePerSec; // 0x26c
	UDamageType* DamageType; // 0x270
	float PainInterval; // 0x278
	char bEntryPain : 1; // 0x27c
	char BACKUP_bPainCausing : 1; // 0x27c
	AController* DamageInstigator; // 0x280
};

struct UBrainComponent : UActorComponent {
	UBlackboardComponent* BlackboardComp; // 0xb8
	AAIController* AIOwner; // 0xc0
};

struct UNiagaraDataInterfaceFieldSystem : UNiagaraDataInterface {
	UBlueprint* BlueprintSource; // 0x38
	AActor* SourceActor; // 0x40
	FIntVector FieldDimensions; // 0x48
	FVector MinBounds; // 0x54
	FVector MaxBounds; // 0x60
};

struct UBTDecorator_CheckGameplayTagsOnActor : UBTDecorator {
	FBlackboardKeySelector ActorToCheck; // 0x68
	EGameplayContainerMatchType TagsToMatch; // 0x90
	FGameplayTagContainer GameplayTags; // 0x98
	FString CachedDescription; // 0xb8
};

struct UMaterialExpressionFontSampleParameter : UMaterialExpressionFontSample {
	FName ParameterName; // 0x50
	FGuid ExpressionGUID; // 0x58
	FName Group; // 0x68
};

struct UEnvQueryTest_PathfindingBatch : UEnvQueryTest_Pathfinding {
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x280
};

struct UBP_SessionData_C : UObject {
	FPointerToUberGraphFrame UberGraphFrame; // 0x28
	FBlueprintSessionResult session; // 0x30
	FString Map; // 0x138
	FString Mode; // 0x148
	int32_t Capacity; // 0x158
	int32_t Players; // 0x15c
	bool IsEos; // 0x160
	FString HostAddress; // 0x168
	FString Status; // 0x178
	FString Owner; // 0x188
	UObject* Widget; // 0x198
	bool IsFake; // 0x1a0
	FString ServerId; // 0x1a8
	int32_t BeaconPort; // 0x1b8
	int32_t Ping; // 0x1bc
	UObject* Browser; // 0x1c0
	bool IsCanceled; // 0x1c8
	bool ShouldDelete; // 0x1c9
};

struct UTransformGizmo : UInteractiveGizmo {
	UTransformProxy* ActiveTarget; // 0x40
	bool bSnapToWorldGrid; // 0x48
	bool bGridSizeIsExplicit; // 0x49
	FVector ExplicitGridSize; // 0x4c
	bool bRotationGridSizeIsExplicit; // 0x58
	FRotator ExplicitRotationGridSize; // 0x5c
	bool bSnapToWorldRotGrid; // 0x68
	bool bUseContextCoordinateSystem; // 0x69
	EToolContextCoordinateSystem CurrentCoordinateSystem; // 0x6c
	TArray<UPrimitiveComponent*> ActiveComponents; // 0x100
	TArray<UPrimitiveComponent*> NonuniformScaleComponents; // 0x110
	TArray<UInteractiveGizmo*> ActiveGizmos; // 0x120
	UGizmoConstantFrameAxisSource* CameraAxisSource; // 0x140
	UGizmoComponentAxisSource* AxisXSource; // 0x148
	UGizmoComponentAxisSource* AxisYSource; // 0x150
	UGizmoComponentAxisSource* AxisZSource; // 0x158
	UGizmoComponentAxisSource* UnitAxisXSource; // 0x160
	UGizmoComponentAxisSource* UnitAxisYSource; // 0x168
	UGizmoComponentAxisSource* UnitAxisZSource; // 0x170
	UGizmoTransformChangeStateTarget* StateTarget; // 0x178
	UGizmoScaledTransformSource* ScaledTransformSource; // 0x180
};

struct USoundNodeDoppler : USoundNode {
	float DopplerIntensity; // 0x48
	bool bUseSmoothing; // 0x4c
	float SmoothingInterpSpeed; // 0x50
};

struct UMovieScene2DTransformSection : UMovieSceneSection {
	FMovieScene2DTransformMask TransformMask; // 0xf0
	FMovieSceneFloatChannel Translation[0x2]; // 0xf8
	FMovieSceneFloatChannel Rotation; // 0x238
	FMovieSceneFloatChannel Scale[0x2]; // 0x2d8
	FMovieSceneFloatChannel Shear[0x2]; // 0x418
};

struct UInheritableComponentHandler : UObject {
	TArray<FComponentOverrideRecord> Records; // 0x28
	TArray<UActorComponent*> UnnecessaryComponents; // 0x38
};

struct UBrokenTime_C : UPerkKiller_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x120
	TArray<ANewAlarmBP_C*> Out Actors; // 0x128
};

struct UGeometryCollection : UObject {
	TArray<FGeometryCollectionSource> GeometrySource; // 0x30
	TArray<UMaterialInterface*> Materials; // 0x40
	ECollisionTypeEnum CollisionType; // 0x50
	EImplicitTypeEnum ImplicitType; // 0x51
	int32_t MinLevelSetResolution; // 0x54
	int32_t MaxLevelSetResolution; // 0x58
	int32_t MinClusterLevelSetResolution; // 0x5c
	int32_t MaxClusterLevelSetResolution; // 0x60
	float CollisionObjectReductionPercentage; // 0x64
	bool bMassAsDensity; // 0x68
	float Mass; // 0x6c
	float MinimumMassClamp; // 0x70
	float CollisionParticlesFraction; // 0x74
	int32_t MaximumCollisionParticles; // 0x78
	TArray<FGeometryCollectionSizeSpecificData> SizeSpecificData; // 0x80
	bool EnableRemovePiecesOnFracture; // 0x90
	TArray<UMaterialInterface*> RemoveOnFractureMaterials; // 0x98
	FGuid PersistentGuid; // 0xa8
	FGuid StateGuid; // 0xb8
	int32_t BoneSelectedMaterialIndex; // 0xc8
};

struct UMovieSceneObjectPropertyTrack : UMovieScenePropertyTrack {
	UObject* PropertyClass; // 0xb0
};

struct UW_Tutorial_Quest_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FadeOut; // 0x268
	UBackgroundBlur* BackgroundBlur_1; // 0x270
	UCanvasPanel* CanvasPanel_Main; // 0x278
	UImage* Image; // 0x280
	UImage* Image_2; // 0x288
	UImage* Image_3; // 0x290
	UImage* Image_4; // 0x298
	UImage* Image_5; // 0x2a0
	UImage* Image_6; // 0x2a8
	UImage* Image_7; // 0x2b0
	UImage* Image_8; // 0x2b8
	UImage* Image_9; // 0x2c0
	UImage* Image_10; // 0x2c8
	UImage* Image_11; // 0x2d0
	UImage* Image_12; // 0x2d8
	UImage* Image_13; // 0x2e0
	UImage* Image_14; // 0x2e8
	UImage* Image_15; // 0x2f0
	UImage* Image_16; // 0x2f8
	UImage* Image_17; // 0x300
	UImage* Image_18; // 0x308
	UImage* Image_19; // 0x310
	UImage* Image_20; // 0x318
	UImage* Image_23; // 0x320
	UImage* Image_24; // 0x328
	UImage* Image_25; // 0x330
	UImage* Image_26; // 0x338
	UImage* Image_27; // 0x340
	UImage* Image_28; // 0x348
	UImage* Image_29; // 0x350
	UImage* Image_30; // 0x358
	UImage* Image_31; // 0x360
	UImage* Image_32; // 0x368
	UImage* Image_33; // 0x370
	UImage* Image_34; // 0x378
	UImage* Image_35; // 0x380
	UImage* Image_36; // 0x388
	UImage* Image_37; // 0x390
	UImage* Image_38; // 0x398
	UImage* Image_39; // 0x3a0
	UImage* Image_40; // 0x3a8
	UImage* Image_41; // 0x3b0
	UImage* Image_42; // 0x3b8
	UImage* Image_43; // 0x3c0
	UImage* Image_44; // 0x3c8
	UImage* Image_45; // 0x3d0
	UImage* Image_46; // 0x3d8
	UImage* Image_47; // 0x3e0
	UImage* Image_48; // 0x3e8
	UImage* Image_49; // 0x3f0
	UImage* Image_50; // 0x3f8
	UImage* Image_110; // 0x400
	UImage* Image_157; // 0x408
	UImage* Image_666; // 0x410
	UImage* Image_BG; // 0x418
	UImage* Image_BG_2; // 0x420
	UImage* Image_Separator; // 0x428
	UImage* Image_SS; // 0x430
	UImage* Image_SS_2; // 0x438
	UImage* Image_SS_3; // 0x440
	UImage* Image_SS_4; // 0x448
	UImage* Image_SS_5; // 0x450
	UImage* Image_SS_6; // 0x458
	UImage* Image_SS_7; // 0x460
	UImage* Image_SS_8; // 0x468
	UImage* Image_SS_9; // 0x470
	UImage* Image_SS_10; // 0x478
	UImage* Image_SS_11; // 0x480
	UImage* Image_SS_12; // 0x488
	UImage* Image_SS_13; // 0x490
	UImage* Image_SS_14; // 0x498
	UImage* Image_SS_15; // 0x4a0
	UImage* Image_SS_16; // 0x4a8
	UOverlay* Overlay_111; // 0x4b0
	UOverlay* Overlay_112; // 0x4b8
	UOverlay* Overlay_113; // 0x4c0
	UOverlay* Overlay_122; // 0x4c8
	UOverlay* Overlay_123; // 0x4d0
	UOverlay* Overlay_127; // 0x4d8
	USizeBox* SizeBox_Button; // 0x4e0
	USizeBox* SizeBox_Button_2; // 0x4e8
	USizeBox* SizeBox_Button_3; // 0x4f0
	USizeBox* SizeBox_Button_4; // 0x4f8
	USizeBox* SizeBox_Button_5; // 0x500
	USizeBox* SizeBox_Button_6; // 0x508
	USizeBox* SizeBox_Button_7; // 0x510
	USizeBox* SizeBox_Button_8; // 0x518
	USizeBox* SizeBox_Button_9; // 0x520
	USizeBox* SizeBox_Button_10; // 0x528
	USizeBox* SizeBox_Button_11; // 0x530
	USizeBox* SizeBox_Button_12; // 0x538
	USizeBox* SizeBox_Button_13; // 0x540
	USizeBox* SizeBox_Button_14; // 0x548
	USizeBox* SizeBox_Button_15; // 0x550
	USizeBox* SizeBox_Button_16; // 0x558
	USizeBox* SizeBox_Button_17; // 0x560
	USizeBox* SizeBox_Button_18; // 0x568
	UTextBlock* Text_Header; // 0x570
	UTextBlock* TextBlock_5; // 0x578
	UTextBlock* TextBlock_6; // 0x580
	UTextBlock* TextBlock_7; // 0x588
	UTextBlock* TextBlock_8; // 0x590
	UTextBlock* TextBlock_9; // 0x598
	UTextBlock* TextBlock_10; // 0x5a0
	UTextBlock* TextBlock_13; // 0x5a8
	UTextBlock* TextBlock_14; // 0x5b0
	UTextBlock* TextBlock_15; // 0x5b8
	UTextBlock* TextBlock_35; // 0x5c0
	UTextBlock* TextBlock_73; // 0x5c8
	UTextBlock* TextBlock_113; // 0x5d0
	UTextBlock* TextBlock_159; // 0x5d8
	UTextBlock* TextBlock_Q1; // 0x5e0
	UTextBlock* TextBlock_Q1_3; // 0x5e8
	UTextBlock* TextBlock_Q1_4; // 0x5f0
	UTextBlock* TextBlock_Q1_6; // 0x5f8
	UTextBlock* TextBlock_Q1_7; // 0x600
	UTextBlock* TextBlock_Q1_8; // 0x608
	UTextBlock* TextBlock_Q1_9; // 0x610
	UTextBlock* TextBlock_Q1_10; // 0x618
	UTextBlock* TextBlock_Q1_11; // 0x620
	UTextBlock* TextBlock_Q1_12; // 0x628
	UTextBlock* TextBlock_Q1_13; // 0x630
	UTextBlock* TextBlock_Q1_14; // 0x638
	UTextBlock* TextBlock_Q1_15; // 0x640
	UTextBlock* TextBlock_Q1_16; // 0x648
	UTextBlock* TextBlock_Q1_17; // 0x650
	UTextBlock* TextBlock_Q1_18; // 0x658
	UTextBlock* TextBlock_Q1_19; // 0x660
	UTextBlock* TextBlock_Q1_20; // 0x668
	UTextBlock* TextBlock_Q1_21; // 0x670
	UTextBlock* TextBlock_Q1_22; // 0x678
	UTextBlock* TextBlock_Q1_23; // 0x680
	UTextBlock* TextBlock_Q1_24; // 0x688
	UTextBlock* TextBlock_Q1_25; // 0x690
	UTextBlock* TextBlock_Q1_26; // 0x698
	UTextBlock* TextBlock_Q1_27; // 0x6a0
	UTextBlock* TextBlock_Q1_28; // 0x6a8
	UTextBlock* TextBlock_Q1_29; // 0x6b0
	UTextBlock* TextBlock_Q1_30; // 0x6b8
	UTextBlock* TextBlock_Q1_31; // 0x6c0
	UTextBlock* TextBlock_Q1_32; // 0x6c8
	UTextBlock* TextBlock_Q1_34; // 0x6d0
	UTextBlock* TextBlock_Q1_35; // 0x6d8
	UTextBlock* TextBlock_Q1_36; // 0x6e0
	UTextBlock* TextBlock_Q1_37; // 0x6e8
	UTextBlock* TextBlock_Q1_59; // 0x6f0
	UTextBlock* TextBlock_Q1_62; // 0x6f8
	UTextBlock* TextBlock_Q1_77; // 0x700
	UTextBlock* TextBlock_Q1_81; // 0x708
	UTextBlock* TextBlock_Q1_83; // 0x710
	UTextBlock* TextBlock_Q1_84; // 0x718
	UTextBlock* TextBlock_Q1_87; // 0x720
	UTextBlock* TextBlock_Q1_91; // 0x728
	UTextBlock* TextBlock_Q1_92; // 0x730
	UTextBlock* TextBlock_Q1_93; // 0x738
	UTextBlock* TextBlock_Q1_96; // 0x740
	UTextBlock* TextBlock_Q1_97; // 0x748
	UTextBlock* TextBlock_Q1_99; // 0x750
	UTextBlock* TextBlock_Q1_101; // 0x758
	UTextBlock* TextBlock_Q1_104; // 0x760
	UTextBlock* TextBlock_Q1_105; // 0x768
	UTextBlock* TextBlock_Q1_106; // 0x770
	UTextBlock* TextBlock_Q1_113; // 0x778
	UTextBlock* TextBlock_Q1_115; // 0x780
	UTextBlock* TextBlock_Q1_118; // 0x788
	UTextBlock* TextBlock_Q1_119; // 0x790
	UTextBlock* TextBlock_Q1_120; // 0x798
	UTextBlock* TextBlock_Q1_121; // 0x7a0
	UTextBlock* TextBlock_Q1_124; // 0x7a8
	UTextBlock* TextBlock_Q1_128; // 0x7b0
	UTextBlock* TextBlock_Q1_131; // 0x7b8
	UTextBlock* TextBlock_StepCount; // 0x7c0
	UWidgetSwitcher* WidgetSwitcher_366; // 0x7c8
	UWidgetSwitcher* WidgetSwitcher_QCheck; // 0x7d0
	UWidgetSwitcher* WidgetSwitcher_QCheck_2; // 0x7d8
	UWidgetSwitcher* WidgetSwitcher_QCheck_3; // 0x7e0
	UWidgetSwitcher* WidgetSwitcher_QCheck_4; // 0x7e8
	UWidgetSwitcher* WidgetSwitcher_QCheck_5; // 0x7f0
	UWidgetSwitcher* WidgetSwitcher_QCheck_6; // 0x7f8
	UWidgetSwitcher* WidgetSwitcher_QCheck_7; // 0x800
	UWidgetSwitcher* WidgetSwitcher_QCheck_8; // 0x808
	UWidgetSwitcher* WidgetSwitcher_QCheck_9; // 0x810
	UWidgetSwitcher* WidgetSwitcher_QCheck_10; // 0x818
	UWidgetSwitcher* WidgetSwitcher_QCheck_11; // 0x820
	UWidgetSwitcher* WidgetSwitcher_QCheck_12; // 0x828
	UWidgetSwitcher* WidgetSwitcher_QCheck_13; // 0x830
	UWidgetSwitcher* WidgetSwitcher_QCheck_14; // 0x838
	UWidgetSwitcher* WidgetSwitcher_QCheck_15; // 0x840
	UWidgetSwitcher* WidgetSwitcher_QCheck_16; // 0x848
	UWidgetSwitcher* WidgetSwitcher_Quest; // 0x850
	TArray<float> Array; // 0x858
	int32_t IndexQuest; // 0x868
	FSlateBrush In Brush; // 0x870
	FSlateBrush In Brush_Full; // 0x8f8
	int32_t NewVar_1; // 0x980
	bool IsSurvTutorEnded; // 0x984
	int32_t StepCounter; // 0x988
};

struct USoundCue : USoundBase {
	char bPrimeOnLoad : 1; // 0x1b8
	USoundNode* FirstNode; // 0x1c0
	float VolumeMultiplier; // 0x1c8
	float PitchMultiplier; // 0x1cc
	FSoundAttenuationSettings AttenuationOverrides; // 0x1d0
	float SubtitlePriority; // 0x570
	char bOverrideAttenuation : 1; // 0x578
	char bExcludeFromRandomNodeBranchCulling : 1; // 0x578
	int32_t CookedQualityIndex; // 0x57c
	char bHasPlayWhenSilent : 1; // 0x580
};

struct UMaterialExpressionAdd : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UEOSCoreEcomQueryOffers : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UBlendSpace : UBlendSpaceBase {
	EBlendSpaceAxis AxisToScaleAnimation; // 0x148
};

struct UAvoidanceManager : UObject {
	float DefaultTimeToLive; // 0x30
	float LockTimeAfterAvoid; // 0x34
	float LockTimeAfterClean; // 0x38
	float DeltaTimeToPredict; // 0x3c
	float ArtificialRadiusExpansion; // 0x40
	float TestHeightDifference; // 0x44
	float HeightCheckMargin; // 0x48
};

struct UMicroTransactionBase : UPlatformInterfaceBase {
	TArray<FPurchaseInfo> AvailableProducts; // 0x38
	FString LastError; // 0x48
	FString LastErrorSolution; // 0x58
};

struct URuntimeVirtualTexture : UObject {
	int32_t TileCount; // 0x28
	int32_t TileSize; // 0x2c
	int32_t TileBorderSize; // 0x30
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x34
	bool bCompressTextures; // 0x35
	bool bClearTextures; // 0x36
	bool bSinglePhysicalSpace; // 0x37
	bool bPrivateSpace; // 0x38
	bool bAdaptive; // 0x39
	bool bContinuousUpdate; // 0x3a
	int32_t RemoveLowMips; // 0x3c
	TextureGroup LODGroup; // 0x40
	int32_t Size; // 0x44
	URuntimeVirtualTextureStreamingProxy* StreamingTexture; // 0x48
};

struct UFMODAudioComponent : USceneComponent {
	UFMODEvent* Event; // 0x1f8
	TMap<FName, float> ParameterCache; // 0x200
	FString ProgrammerSoundName; // 0x258
	char bEnableTimelineCallbacks : 1; // 0x268
	char bAutoDestroy : 1; // 0x280
	char bStopWhenOwnerDestroyed : 1; // 0x280
	FMulticastInlineDelegate OnEventStopped; // 0x288
	FMulticastInlineDelegate OnTimelineMarker; // 0x298
	FMulticastInlineDelegate OnTimelineBeat; // 0x2a8
	FFMODAttenuationDetails AttenuationDetails; // 0x2b8
	FFMODOcclusionDetails OcclusionDetails; // 0x2c4
};

struct UW_SurvonChair_Banned_C : UUserWidget {
	UProgressBar* HealthProgress; // 0x260
	UImage* Image_148; // 0x268
	USafeZone* SafeZone_235; // 0x270
};

struct UMaterialExpressionScalarParameter : UMaterialExpressionParameter {
	float DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x5c
	char PrimitiveDataIndex; // 0x5d
};

struct ALevelScriptActor : AActor {
	char bInputEnabled : 1; // 0x220
};

struct UListViewBase : UWidget {
	UUserWidget* EntryWidgetClass; // 0x108
	float WheelScrollMultiplier; // 0x110
	bool bEnableScrollAnimation; // 0x114
	bool bEnableFixedLineOffset; // 0x115
	float FixedLineScrollOffset; // 0x118
	FMulticastInlineDelegate BP_OnEntryGenerated; // 0x120
	FMulticastInlineDelegate BP_OnEntryReleased; // 0x130
	FUserWidgetPool EntryWidgetPool; // 0x140
};

struct UAsianGirlIntroAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x320
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x348
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x3c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3f8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x478
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x4a8
	bool MvpAnim?; // 0x558
};

struct UARSaveWorldAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate onSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct USoundfieldEffectBase : UObject {
	USoundfieldEffectSettingsBase* Settings; // 0x28
};

struct UDemoNetDriver : UNetDriver {
	TMap<FString, FRollbackNetStartupActorInfo> RollbackNetStartupActors; // 0x840
	float CheckpointSaveMaxMSPerFrame; // 0x9ec
	TArray<FMulticastRecordOptions> MulticastRecordOptions; // 0xa10
	bool bIsLocalReplay; // 0xa20
	TArray<APlayerController*> SpectatorControllers; // 0xa28
};

struct UDistributionFloat : UDistribution {
	char bCanBeBaked : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UBTTask_WaitBlackboardTime : UBTTask_Wait {
	FBlackboardKeySelector BlackboardKey; // 0x78
};

struct UInputTouchDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputTouchDelegateBinding> InputTouchDelegateBindings; // 0x28
};

struct UMeshSimplificationSettings : UDeveloperSettings {
	FName MeshReductionModuleName; // 0x38
};

struct UDatasmithSpotLightComponentTemplate : UDatasmithObjectTemplate {
	float InnerConeAngle; // 0x30
	float OuterConeAngle; // 0x34
};

struct ULoudnessNRT : UAudioSynesthesiaNRT {
	ULoudnessNRTSettings* Settings; // 0x78
};

struct UInputBehaviorSet : UObject {
	TArray<FBehaviorInfo> Behaviors; // 0x28
};

struct UVoiceChatWindow_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UVerticalBox* VerticalBox_191; // 0x268
	UVoiceChatWindowComponent_C* VoiceChatWindowComponent; // 0x270
	UVoiceChatWindowComponent_C* VoiceChatWindowComponent_2; // 0x278
	UVoiceChatWindowComponent_C* VoiceChatWindowComponent_3; // 0x280
	TArray<APlayerState*> Players; // 0x288
	TArray<UVoiceChatWindowComponent_C*> PlayersVoice; // 0x298
};

struct UVOIPTalker : UActorComponent {
	FVoiceSettings Settings; // 0xb0
};

struct UPaperGroupedSpriteComponent : UMeshComponent {
	TArray<UMaterialInterface*> InstanceMaterials; // 0x468
	TArray<FSpriteInstanceData> PerInstanceSpriteData; // 0x478
};

struct UAISenseEvent_Damage : UAISenseEvent {
	FAIDamageEvent Event; // 0x28
};

struct USourceEffectEnvelopeFollowerPreset : USoundEffectSourcePreset {
	FSourceEffectEnvelopeFollowerSettings Settings; // 0x9c
};

struct UInstancedStaticMeshComponent : UStaticMeshComponent {
	TArray<FInstancedStaticMeshInstanceData> PerInstanceSMData; // 0x4d0
	int32_t NumCustomDataFloats; // 0x4e0
	TArray<float> PerInstanceSMCustomData; // 0x4e8
	int32_t InstancingRandomSeed; // 0x4f8
	int32_t InstanceStartCullDistance; // 0x4fc
	int32_t InstanceEndCullDistance; // 0x500
	TArray<int32_t> InstanceReorderTable; // 0x508
	int32_t NumPendingLightmaps; // 0x560
	TArray<FInstancedStaticMeshMappingInfo> CachedMappings; // 0x568
};

struct APaperFlipbookActor : AActor {
	UPaperFlipbookComponent* RenderComponent; // 0x220
};

struct UAsyncTask_LoadXRDeviceVisComponent : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnModelLoaded; // 0x30
	FMulticastInlineDelegate OnLoadFailure; // 0x40
	UPrimitiveComponent* SpawnedComponent; // 0x58
};

struct UFieldSystemMetaDataIteration : UFieldSystemMetaData {
	int32_t Iterations; // 0xb0
};

struct ULevelVariantSets : UObject {
	UObject* DirectorClass; // 0x28
	TArray<UVariantSet*> VariantSets; // 0x30
};

struct UMaterialExpressionLandscapeLayerCoords : UMaterialExpression {
	ETerrainCoordMappingType MappingType; // 0x40
	ELandscapeCustomizedCoordType CustomUVType; // 0x41
	float MappingScale; // 0x44
	float MappingRotation; // 0x48
	float MappingPanU; // 0x4c
	float MappingPanV; // 0x50
};

struct AFMODEventLooper_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UFMODAudioComponent* FmodAudio; // 0x228
	float Delay; // 0x230
	UFMODEvent* Event; // 0x238
	bool WithDelay; // 0x240
	bool OverrideAttenuation; // 0x241
	float MinDistance; // 0x244
	float MaxDistance; // 0x248
};

struct UPauseMenu_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ShowNotification; // 0x268
	UWidgetAnimation* HideAllButtons_Anim; // 0x270
	UWidgetAnimation* MoveExit; // 0x278
	UWidgetAnimation* MoveSettings; // 0x280
	UWidgetAnimation* MoveContinue; // 0x288
	UWidgetAnimation* ShowButtons; // 0x290
	UWidgetAnimation* ChangeButtonText_Anim; // 0x298
	UWidgetAnimation* HideMenu_Anim; // 0x2a0
	UWidgetAnimation* FadeAnim; // 0x2a8
	UImage* Background_Mask; // 0x2b0
	UImage* Background_Mask_2; // 0x2b8
	UButton* Button_212; // 0x2c0
	UButton* Button_Back; // 0x2c8
	UButton* Button_DefaultCfg; // 0x2d0
	UCanvasPanel* CanvasPanel_1; // 0x2d8
	UButton* ContinueButton; // 0x2e0
	UButton* ExitButton; // 0x2e8
	UHorizontalBox* HorizontalBox_144; // 0x2f0
	UImage* Image_2; // 0x2f8
	UImage* Image_67; // 0x300
	UImage* Image_93; // 0x308
	UImage* Image_119; // 0x310
	UImage* Image_BackIcon; // 0x318
	UImage* Image_CHover; // 0x320
	UImage* Image_EHover; // 0x328
	UImage* Image_FadeScreen; // 0x330
	UImage* Image_SHover; // 0x338
	UOverlay* Overlay_1; // 0x340
	UOverlay* Overlay_45; // 0x348
	UOverlay* Overlay_89; // 0x350
	UOverlay* Overlay_107; // 0x358
	UOverlay* Overlay_221; // 0x360
	UProgressBar* ProgressBar_109; // 0x368
	UProgressBar* ProgressBar_125; // 0x370
	USafeZone* SafeZone; // 0x378
	USafeZone* SafeZone_4; // 0x380
	USafeZone* SafeZone_5; // 0x388
	USafeZone* SafeZone_6; // 0x390
	USafeZone* SafeZone_7; // 0x398
	USafeZone* SafeZone_8; // 0x3a0
	USafeZone* SafeZone_9; // 0x3a8
	USafeZone* SafeZone_126; // 0x3b0
	UButton* SettingsButton; // 0x3b8
	USizeBox* SizeBox_BackButton; // 0x3c0
	USizeBox* SizeBox_Buttons; // 0x3c8
	UTextBlock* TextBlock_2; // 0x3d0
	UTextBlock* TextBlock_183; // 0x3d8
	UTextBlock* TextBlock_354; // 0x3e0
	UTextBlock* TextBlock_501; // 0x3e8
	UTextBlock* TextBlock_BackButton; // 0x3f0
	UWBP_QuitDialog_C* WBP_QuitDialog; // 0x3f8
	bool Paused?; // 0x400
	bool SettingsOpen?; // 0x401
	UButton* LastKnowFocused; // 0x408
	TArray<UButton*> StyleButtonArray; // 0x410
	TArray<UObject*> StyleButton; // 0x420
	FVector2D ImageSizeButton; // 0x430
	TArray<UTextBlock*> textArray; // 0x438
	bool IsBackButtonHovered; // 0x448
	UButton* HoveredButton; // 0x450
	UWidgetAnimation* Hide All Buttons Anim; // 0x458
	bool BlockPause; // 0x460
	float SliderValueFocus; // 0x464
};

struct UAudioBus : UObject {
	EAudioBusChannels AudioBusChannels; // 0x28
	bool bIsAutomatic; // 0x29
};

struct UEdGraphNode_Documentation : UEdGraphNode {
	FString Link; // 0x98
	FString Excerpt; // 0xa8
};

struct AGM_PropHunt_Tutorial_C : AGM_PropHunt_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x370
};

struct UPerkManager_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	UPerk_C* Perk1; // 0xb8
	UPerk_C* Perk2; // 0xc0
	UPerk_C* Perk3; // 0xc8
	FString PerksName; // 0xd0
};

struct AGlueOfJarItemsBP_Rare_C : AItemsBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
};

struct UMaterialExpressionBentNormalCustomOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UChannel : UObject {
	UNetConnection* Connection; // 0x28
};

struct UStaticMeshSimulationComponent : UActorComponent {
	bool Simulating; // 0xb8
	bool bNotifyCollisions; // 0xb9
	EObjectStateTypeEnum ObjectType; // 0xba
	float Mass; // 0xbc
	ECollisionTypeEnum CollisionType; // 0xc0
	EImplicitTypeEnum ImplicitType; // 0xc1
	int32_t MinLevelSetResolution; // 0xc4
	int32_t MaxLevelSetResolution; // 0xc8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xcc
	FVector InitialLinearVelocity; // 0xd0
	FVector InitialAngularVelocity; // 0xdc
	float DamageThreshold; // 0xe8
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xf0
	AChaosSolverActor* ChaosSolverActor; // 0xf8
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x100
	TArray<UPrimitiveComponent*> SimulatedComponents; // 0x120
};

struct UGameEngine : UEngine {
	float MaxDeltaTime; // 0xde0
	float ServerFlushLogInterval; // 0xde4
	UGameInstance* GameInstance; // 0xde8
};

struct UNiagaraPreviewAxis_InterpParamBase : UNiagaraPreviewAxis {
	FName Param; // 0x28
	int32_t Count; // 0x30
};

struct UIsaacLobbyAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x320
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x348
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x3c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3f8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x478
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x4a8
	ALobbyPlayerMesh_C* LPM; // 0x558
	bool MvpAnim?; // 0x560
};

struct USkeletalMeshComponent : USkinnedMeshComponent {
	UObject* AnimBlueprintGeneratedClass; // 0x690
	UAnimInstance* AnimClass; // 0x698
	UAnimInstance* AnimScriptInstance; // 0x6a0
	UAnimInstance* PostProcessAnimInstance; // 0x6a8
	FSingleAnimationPlayData AnimationData; // 0x6b0
	FVector RootBoneTranslation; // 0x6d8
	FVector LineCheckBoundsScale; // 0x6e4
	TArray<UAnimInstance*> LinkedInstances; // 0x720
	TArray<FTransform> CachedBoneSpaceTransforms; // 0x730
	TArray<FTransform> CachedComponentSpaceTransforms; // 0x740
	float GlobalAnimRateScale; // 0x8a0
	EKinematicBonesUpdateToPhysics KinematicBonesUpdateType; // 0x8a4
	EPhysicsTransformUpdateMode PhysicsTransformUpdateMode; // 0x8a5
	EAnimationMode AnimationMode; // 0x8a7
	char bDisablePostProcessBlueprint : 1; // 0x8a9
	char bUpdateOverlapsOnAnimationFinalize : 1; // 0x8a9
	char bHasValidBodies : 1; // 0x8a9
	char bBlendPhysics : 1; // 0x8a9
	char bEnablePhysicsOnDedicatedServer : 1; // 0x8a9
	char bUpdateJointsFromAnimation : 1; // 0x8a9
	char bDisableClothSimulation : 1; // 0x8aa
	char bDisableRigidBodyAnimNode : 1; // 0x8b0
	char bAllowAnimCurveEvaluation : 1; // 0x8b0
	char bDisableAnimCurves : 1; // 0x8b0
	char bCollideWithEnvironment : 1; // 0x8b0
	char bCollideWithAttachedChildren : 1; // 0x8b1
	char bLocalSpaceSimulation : 1; // 0x8b1
	char bResetAfterTeleport : 1; // 0x8b1
	char bDeferKinematicBoneUpdate : 1; // 0x8b1
	char bNoSkeletonUpdate : 1; // 0x8b1
	char bPauseAnims : 1; // 0x8b1
	char bUseRefPoseOnInitAnim : 1; // 0x8b1
	char bEnablePerPolyCollision : 1; // 0x8b2
	char bForceRefpose : 1; // 0x8b2
	char bOnlyAllowAutonomousTickPose : 1; // 0x8b2
	char bIsAutonomousTickPose : 1; // 0x8b2
	char bOldForceRefPose : 1; // 0x8b2
	char bShowPrePhysBones : 1; // 0x8b2
	char bRequiredBonesUpToDate : 1; // 0x8b2
	char bAnimTreeInitialised : 1; // 0x8b2
	char bIncludeComponentLocationIntoBounds : 1; // 0x8b3
	char bEnableLineCheckWithBounds : 1; // 0x8b3
	char bUseBendingElements : 1; // 0x8b3
	char bUseTetrahedralConstraints : 1; // 0x8b3
	char bUseThinShellVolumeConstraints : 1; // 0x8b3
	char bUseSelfCollisions : 1; // 0x8b3
	char bUseContinuousCollisionDetection : 1; // 0x8b3
	char bPropagateCurvesToSlaves : 1; // 0x8b3
	char bSkipKinematicUpdateWhenInterpolating : 1; // 0x8b4
	char bSkipBoundsUpdateWhenInterpolating : 1; // 0x8b4
	char bNeedsQueuedAnimEventsDispatched : 1; // 0x8b4
	uint16_t CachedAnimCurveUidVersion; // 0x8b6
	EClothMassMode MassMode; // 0x8b8
	float UniformMass; // 0x8bc
	float TotalMass; // 0x8c0
	float Density; // 0x8c4
	float MinPerParticleMass; // 0x8c8
	float ClothBlendWeight; // 0x8cc
	float EdgeStiffness; // 0x8d0
	float BendingStiffness; // 0x8d4
	float AreaStiffness; // 0x8d8
	float VolumeStiffness; // 0x8dc
	float StrainLimitingStiffness; // 0x8e0
	float ShapeTargetStiffness; // 0x8e4
	bool bWaitForParallelClothTask; // 0x8e8
	TArray<FName> DisallowedAnimCurves; // 0x8f0
	UBodySetup* BodySetup; // 0x900
	FMulticastInlineDelegate OnConstraintBroken; // 0x910
	UClothingSimulationFactory* ClothingSimulationFactory; // 0x920
	float TeleportDistanceThreshold; // 0x9f8
	float TeleportRotationThreshold; // 0x9fc
	uint32_t LastPoseTickFrame; // 0xa08
	UClothingSimulationInteractor* ClothingInteractor; // 0xa60
	FMulticastInlineDelegate OnAnimInitialized; // 0xb30
};

struct ATransformGizmoActor : AGizmoActor {
	UPrimitiveComponent* TranslateX; // 0x220
	UPrimitiveComponent* TranslateY; // 0x228
	UPrimitiveComponent* TranslateZ; // 0x230
	UPrimitiveComponent* TranslateYZ; // 0x238
	UPrimitiveComponent* TranslateXZ; // 0x240
	UPrimitiveComponent* TranslateXY; // 0x248
	UPrimitiveComponent* RotateX; // 0x250
	UPrimitiveComponent* RotateY; // 0x258
	UPrimitiveComponent* RotateZ; // 0x260
	UPrimitiveComponent* UniformScale; // 0x268
	UPrimitiveComponent* AxisScaleX; // 0x270
	UPrimitiveComponent* AxisScaleY; // 0x278
	UPrimitiveComponent* AxisScaleZ; // 0x280
	UPrimitiveComponent* PlaneScaleYZ; // 0x288
	UPrimitiveComponent* PlaneScaleXZ; // 0x290
	UPrimitiveComponent* PlaneScaleXY; // 0x298
};

struct UAssetManagerSettings : UDeveloperSettings {
	TArray<FPrimaryAssetTypeInfo> PrimaryAssetTypesToScan; // 0x38
	TArray<FDirectoryPath> DirectoriesToExclude; // 0x48
	TArray<FPrimaryAssetRulesOverride> PrimaryAssetRules; // 0x58
	TArray<FPrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules; // 0x68
	bool bOnlyCookProductionAssets; // 0x78
	bool bShouldManagerDetermineTypeAndName; // 0x79
	bool bShouldGuessTypeAndNameInEditor; // 0x7a
	bool bShouldAcquireMissingChunksOnLoad; // 0x7b
	TArray<FAssetManagerRedirect> PrimaryAssetIdRedirects; // 0x80
	TArray<FAssetManagerRedirect> PrimaryAssetTypeRedirects; // 0x90
	TArray<FAssetManagerRedirect> AssetPathRedirects; // 0xa0
	TSet<FName> MetaDataTagsForAssetRegistry; // 0xb0
};

struct UParticleModuleLight : UParticleModuleLightBase {
	bool bUseInverseSquaredFalloff; // 0x30
	bool bAffectsTranslucency; // 0x31
	bool bPreviewLightRadius; // 0x32
	float SpawnFraction; // 0x34
	FRawDistributionVector ColorScaleOverLife; // 0x38
	FRawDistributionFloat BrightnessOverLife; // 0x80
	FRawDistributionFloat RadiusScale; // 0xb0
	FRawDistributionFloat LightExponent; // 0xe0
	FLightingChannels LightingChannels; // 0x110
	float VolumetricScatteringIntensity; // 0x114
	bool bHighQualityLights; // 0x118
	bool bShadowCastingLights; // 0x119
};

struct UIntervalGizmo : UInteractiveGizmo {
	UGizmoTransformChangeStateTarget* StateTarget; // 0x38
	UTransformProxy* TransformProxy; // 0x50
	TArray<UPrimitiveComponent*> ActiveComponents; // 0x58
	TArray<UInteractiveGizmo*> ActiveGizmos; // 0x68
	UGizmoComponentAxisSource* AxisYSource; // 0x90
	UGizmoComponentAxisSource* AxisZSource; // 0x98
};

struct UAudioAnalyzerNRT : UAudioAnalyzerAsset {
	USoundWave* Sound; // 0x28
	float DurationInSeconds; // 0x30
};

struct UEditableGameplayTagQueryExpression_NoExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UNiagaraDataInterfaceArrayFloat : UNiagaraDataInterfaceArray {
	TArray<float> FloatData; // 0x50
};

struct UWBP_CustomComboBoxEntry_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Entry; // 0x268
	UCheckBox* CheckBox_MultiValue; // 0x270
	UImage* Image_Selected; // 0x278
	UTextBlock* Text_EntryName; // 0x280
	FText EntryName; // 0x288
	FMulticastInlineDelegate OnClicked; // 0x2a0
	bool IsSelected; // 0x2b0
	FCheckBoxStyle CheckerStyle; // 0x2b8
	FButtonStyle DefaultButtonStyle; // 0x838
};

struct UMaterialExpressionSingleLayerWaterMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput ScatteringCoefficients; // 0x40
	FExpressionInput AbsorptionCoefficients; // 0x54
	FExpressionInput PhaseG; // 0x68
	FExpressionInput ColorScaleBehindWater; // 0x7c
};

struct ULobbyEffectsHUD_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FadeOut; // 0x268
	UWidgetAnimation* FadeIn; // 0x270
	UImage* Black; // 0x278
};

struct UMaterialExpressionPower : UMaterialExpression {
	FExpressionInput Base; // 0x40
	FExpressionInput Exponent; // 0x54
	float ConstExponent; // 0x68
};

struct UGizmoCircleComponent : UGizmoBaseComponent {
	FVector Normal; // 0x460
	float Radius; // 0x46c
	float Thickness; // 0x470
	int32_t NumSides; // 0x474
	bool bViewAligned; // 0x478
	bool bOnlyAllowFrontFacingHits; // 0x479
};

struct AGameModeBase : AInfo {
	FString OptionsString; // 0x220
	AGameSession* GameSessionClass; // 0x230
	AGameStateBase* GameStateClass; // 0x238
	APlayerController* PlayerControllerClass; // 0x240
	APlayerState* PlayerStateClass; // 0x248
	AHUD* HUDClass; // 0x250
	APawn* DefaultPawnClass; // 0x258
	ASpectatorPawn* SpectatorClass; // 0x260
	APlayerController* ReplaySpectatorPlayerControllerClass; // 0x268
	AServerStatReplicator* ServerStatReplicatorClass; // 0x270
	AGameSession* GameSession; // 0x278
	AGameStateBase* GameState; // 0x280
	AServerStatReplicator* ServerStatReplicator; // 0x288
	FText DefaultPlayerName; // 0x290
	char bUseSeamlessTravel : 1; // 0x2a8
	char bStartPlayersAsSpectators : 1; // 0x2a8
	char bPauseable : 1; // 0x2a8
};

struct UVampireMaxWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UBoxReflectionCaptureComponent : UReflectionCaptureComponent {
	float BoxTransitionDistance; // 0x270
	UBoxComponent* PreviewInfluenceBox; // 0x278
	UBoxComponent* PreviewCaptureBox; // 0x280
};

struct USurvivorSoundsMaster-2D_C : USurvivorSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
	FFMODEventInstance ChasingFMODSound; // 0x100
	FFMODEventInstance LevelAmbient; // 0x108
	float KillerAmbientValue; // 0x110
	float DeltaSeconds; // 0x114
	float NewDelay; // 0x118
	AKillerMasterBP_C* KillerActor; // 0x120
	bool NewCall?; // 0x128
	USoundBase* HeartbeatSound1; // 0x130
	USoundBase* HeartbeatSound2; // 0x138
	bool Stop; // 0x140
	bool chase; // 0x141
	bool chaseb; // 0x142
	bool StopMusic?; // 0x143
	bool NewVar_1; // 0x144
	bool change?; // 0x145
	float ChaseParameter; // 0x148
	float NewChaseParameter; // 0x14c
	bool bAfterChase; // 0x150
	bool AllSoundsCustomStop?; // 0x151
	float Volume; // 0x154
	TArray<AKillerMasterBP_C*> Killers; // 0x158
	float TempFloat1; // 0x168
	float TempFloat2; // 0x16c
	float VolumeZ; // 0x170
	bool bZ; // 0x174
	float DeltaTime; // 0x178
	float KillerRange; // 0x17c
	FFMODEventInstance KillerClose; // 0x180
	float CloseKiller; // 0x188
	float MaxNoiseValue; // 0x18c
	bool NoiseB; // 0x190
	bool LvlAmbBlock; // 0x191
	float NoiseSoundFloat; // 0x194
	float HeartbeatFloat; // 0x198
	FFMODEventInstance HeartBeatFmod; // 0x1a0
	FFMODEventInstance SurvShoulder; // 0x1a8
	FVector KillerLoc; // 0x1b0
	bool LastMan; // 0x1bc
	FFMODEventInstance checkeree228; // 0x1c0
	bool Spectator?; // 0x1c8
};

struct USynthComponent : USceneComponent {
	char bAutoDestroy : 1; // 0x1f8
	char bStopWhenOwnerDestroyed : 1; // 0x1f8
	char bAllowSpatialization : 1; // 0x1f8
	char bOverrideAttenuation : 1; // 0x1f8
	char bOutputToBusOnly : 1; // 0x1fc
	USoundAttenuation* AttenuationSettings; // 0x200
	FSoundAttenuationSettings AttenuationOverrides; // 0x208
	USoundConcurrency* ConcurrencySettings; // 0x5a8
	TSet<USoundConcurrency*> ConcurrencySet; // 0x5b0
	USoundClass* SoundClass; // 0x600
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x608
	USoundSubmixBase* SoundSubmix; // 0x610
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x618
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x628
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x638
	char bIsUISound : 1; // 0x648
	char bIsPreviewSound : 1; // 0x648
	int32_t EnvelopeFollowerAttackTime; // 0x64c
	int32_t EnvelopeFollowerReleaseTime; // 0x650
	FMulticastInlineDelegate OnAudioEnvelopeValue; // 0x658
	USynthSound* Synth; // 0x688
	UAudioComponent* AudioComponent; // 0x690
};

struct AOnlineBeaconHost : AOnlineBeacon {
	int32_t ListenPort; // 0x250
	TArray<AOnlineBeaconClient*> ClientActors; // 0x258
};

struct UMaterialExpressionReflectionCapturePassSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Reflection; // 0x54
};

struct AVolumetricLightmapDensityVolume : AVolume {
	FInt32Interval AllowedMipLevelRange; // 0x258
};

struct UArchVisCharMovementComponent : UCharacterMovementComponent {
	FRotator RotationalAcceleration; // 0xb00
	FRotator RotationalDeceleration; // 0xb0c
	FRotator MaxRotationalVelocity; // 0xb18
	float MinPitch; // 0xb24
	float MaxPitch; // 0xb28
	float WalkingFriction; // 0xb2c
	float WalkingSpeed; // 0xb30
	float WalkingAcceleration; // 0xb34
};

struct UInterpTrackInstFloatProp : UInterpTrackInstProperty {
	float ResetFloat; // 0x58
};

struct UTransformProxy : UObject {
	bool bRotatePerObject; // 0x70
	bool bSetPivotMode; // 0x71
	FTransform SharedTransform; // 0x90
	FTransform InitialSharedTransform; // 0xc0
};

struct UProceduralMeshComponent : UMeshComponent {
	bool bUseComplexAsSimpleCollision; // 0x470
	bool bUseAsyncCooking; // 0x471
	UBodySetup* ProcMeshBodySetup; // 0x478
	TArray<FProcMeshSection> ProcMeshSections; // 0x480
	TArray<FKConvexElem> CollisionConvexElems; // 0x490
	FBoxSphereBounds LocalBounds; // 0x4a0
	TArray<UBodySetup*> AsyncBodySetupQueue; // 0x4c0
};

struct USkeletalMeshSimulationComponent : UActorComponent {
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xb8
	AChaosSolverActor* ChaosSolverActor; // 0xc0
	UPhysicsAsset* OverridePhysicsAsset; // 0xc8
	bool bSimulating; // 0xd0
	bool bNotifyCollisions; // 0xd1
	EObjectStateTypeEnum ObjectType; // 0xd2
	float Density; // 0xd4
	float MinMass; // 0xd8
	float MaxMass; // 0xdc
	ECollisionTypeEnum CollisionType; // 0xe0
	float ImplicitShapeParticlesPerUnitArea; // 0xe4
	int32_t ImplicitShapeMinNumParticles; // 0xe8
	int32_t ImplicitShapeMaxNumParticles; // 0xec
	int32_t MinLevelSetResolution; // 0xf0
	int32_t MaxLevelSetResolution; // 0xf4
	int32_t CollisionGroup; // 0xf8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xfc
	FVector InitialLinearVelocity; // 0x100
	FVector InitialAngularVelocity; // 0x10c
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x118
};

struct UBlueprintGeneratedClass : UClass {
	int32_t NumReplicatedProperties; // 0x230
	char bHasNativizedParent : 1; // 0x234
	char bHasCookedComponentInstancingData : 1; // 0x234
	TArray<UDynamicBlueprintBinding*> DynamicBindingObjects; // 0x238
	TArray<UActorComponent*> ComponentTemplates; // 0x248
	TArray<UTimelineTemplate*> Timelines; // 0x258
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x268
	USimpleConstructionScript* SimpleConstructionScript; // 0x278
	UInheritableComponentHandler* InheritableComponentHandler; // 0x280
	UStructProperty* UberGraphFramePointerProperty; // 0x288
	UFunction* UberGraphFunction; // 0x298
	TMap<FName, FBlueprintCookedComponentInstancingData> CookedComponentInstancingData; // 0x2a0
};

struct APaperTerrainActor : AActor {
	USceneComponent* DummyRoot; // 0x220
	UPaperTerrainSplineComponent* SplineComponent; // 0x228
	UPaperTerrainComponent* RenderComponent; // 0x230
};

struct UBTTaskNode : UBTNode {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct UFMODEventControlSection : UMovieSceneSection {
	FFMODEventControlChannel ControlKeys; // 0xe8
};

struct USequenceCameraShakeCameraStandIn : UObject {
	float FieldOfView; // 0x30
};

struct UFindEOSSessionsCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnCallback; // 0x30
};

struct UAnimSharingTransitionInstance : UAnimInstance {
	TWeakObjectPtr<USkeletalMeshComponent> FromComponent; // 0x2b8
	TWeakObjectPtr<USkeletalMeshComponent> ToComponent; // 0x2c0
	float BlendTime; // 0x2c8
	bool bBlendBool; // 0x2cc
};

struct UDatasmithActorTemplate : UDatasmithObjectTemplate {
	TSet<FName> Layers; // 0x30
	TSet<FName> Tags; // 0x80
};

struct UMovieSceneEventSection : UMovieSceneSection {
	FNameCurve Events; // 0xe8
	FMovieSceneEventSectionData EventData; // 0x160
};

struct UWrapBox : UPanelWidget {
	FVector2D InnerSlotPadding; // 0x120
	float WrapWidth; // 0x128
	float WrapSize; // 0x12c
	bool bExplicitWrapWidth; // 0x130
	bool bExplicitWrapSize; // 0x131
	EOrientation Orientation; // 0x132
};

struct USpectatorPawnMovement : UFloatingPawnMovement {
	char bIgnoreTimeDilation : 1; // 0x150
};

struct UNewATPCCameraFOVObject : UATPCCameraFOVObject {
	bool IsOverride; // 0x38
};

struct UbansheeAnimBp_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_104; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_103; // 0x2f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_102; // 0x318
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_101; // 0x340
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_100; // 0x368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_99; // 0x390
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_98; // 0x3b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_97; // 0x3e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_96; // 0x408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_95; // 0x430
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_94; // 0x458
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_93; // 0x480
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_92; // 0x4a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_91; // 0x4d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_90; // 0x4f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_89; // 0x520
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_88; // 0x548
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_87; // 0x570
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_86; // 0x598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_85; // 0x5c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_84; // 0x5e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_83; // 0x610
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_82; // 0x638
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_81; // 0x660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_80; // 0x688
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_79; // 0x6b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_78; // 0x6d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_77; // 0x700
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_76; // 0x728
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_75; // 0x750
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_74; // 0x778
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_73; // 0x7a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_72; // 0x7c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_71; // 0x7f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_70; // 0x818
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_69; // 0x840
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_68; // 0x868
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_67; // 0x890
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_66; // 0x8b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_65; // 0x8e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_64; // 0x908
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0x930
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0x958
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0x980
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x9a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x9d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x9f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0xa20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0xa48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0xa70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0xa98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0xac0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0xae8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0xb10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0xb38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0xb60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0xb88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0xbb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0xbd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0xc00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0xc28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0xc50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0xc78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0xca0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0xcc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0xcf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0xd18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0xd40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0xd68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0xd90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0xdb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0xde0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0xe08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0xe30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0xe58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0xe80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0xea8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0xed0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0xef8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0xf20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0xf48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0xf70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0xf98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0xfc0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0xfe8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x1010
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x1038
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x1060
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x1088
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x10b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x10d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x1100
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x1128
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x1150
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x1178
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x11a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x11c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x11f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x1218
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x1240
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x1268
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x1290
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x12b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x12e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x1308
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0x1388
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x13b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x1438
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_2; // 0x14b8
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x1558
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x1588
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x1608
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x1638
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x1720
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x1750
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x17d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x1800
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x1880
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x18b0
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x1930
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x1960
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x19e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x1a10
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x1a90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x1ac0
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x1b40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x1b70
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x1bf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x1c20
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1ca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x1cd0
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x1d50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x1d80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1e00
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x1e80
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x1f20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x1f50
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x1fd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x2000
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x2080
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x2120
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x21a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x21d0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x2250
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x2280
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x2300
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x23a0
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x2420
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2450
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x24d0
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x2500
	FAnimNode_Root AnimGraphNode_Root; // 0x25b0
	float keepSurv; // 0x25e0
	bool IsInAir; // 0x25e4
	float Speed; // 0x25e8
	float Direction; // 0x25ec
	bool AttackBool; // 0x25f0
	bool JumpEndChek; // 0x25f1
	bool FIRE; // 0x25f2
	bool Plant; // 0x25f3
	bool MarioStun; // 0x25f4
	int32_t TypeAttack; // 0x25f8
	bool KnifeIn; // 0x25fc
	bool KnifeSpawn; // 0x25fd
	bool Astral; // 0x25fe
	bool Fly; // 0x25ff
	bool Flashed; // 0x2600
	bool PropHunt?; // 0x2601
	float SpeedRateF; // 0x2604
	float Delta Time X; // 0x2608
	float TimeRun; // 0x260c
	bool Broke Anim; // 0x2610
};

struct UAnimCompress_RemoveTrivialKeys : UAnimCompress {
	float MaxPosDiff; // 0x40
	float MaxAngleDiff; // 0x44
	float MaxScaleDiff; // 0x48
};

struct UW_PlayCardContent_QuickPlay_C : UW_PlayCardContent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x268
	UButton* Button_SearchGame; // 0x270
	UImage* Image; // 0x278
	UImage* Image_90; // 0x280
	UImage* Image_CG_Icon; // 0x288
	UOverlay* Overlay_TeamLeaderOnly; // 0x290
	UOverlay* Overlay_TeamLeaderOnly_2; // 0x298
	USizeBox* SizeBox_54; // 0x2a0
	UTextBlock* Text_Description; // 0x2a8
	UTextBlock* Text_Header; // 0x2b0
	UTextBlock* TextBlock; // 0x2b8
	UTextBlock* TextBlock_4; // 0x2c0
	UW_RoleSelector_C* W_RoleSelector; // 0x2c8
	UBP_BanManager_C* BP Ban Manager; // 0x2d0
	bool Is Banned; // 0x2d8
	float RandomFloat; // 0x2dc
	FButtonStyle SearchGame_DefaultStyle; // 0x2e0
	bool IsSearchGameHovered; // 0x558
};

struct UParticleModuleLocationBoneSocket : UParticleModuleLocationBase {
	ELocationBoneSocketSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	TArray<FLocationBoneSocketInfo> SourceLocations; // 0x40
	ELocationBoneSocketSelectionMethod SelectionMethod; // 0x50
	char bUpdatePositionEachFrame : 1; // 0x54
	char bOrientMeshEmitters : 1; // 0x54
	char bInheritBoneVelocity : 1; // 0x54
	float InheritVelocityScale; // 0x58
	FName SkelMeshActorParamName; // 0x5c
	int32_t NumPreSelectedIndices; // 0x64
};

struct ULightPropagationVolumeBlendable : UObject {
	FLightPropagationVolumeSettings Settings; // 0x30
	float BlendWeight; // 0x70
};

struct ARecastNavMesh : ANavigationData {
	char bDrawTriangleEdges : 1; // 0x428
	char bDrawPolyEdges : 1; // 0x428
	char bDrawFilledPolys : 1; // 0x428
	char bDrawNavMeshEdges : 1; // 0x428
	char bDrawTileBounds : 1; // 0x428
	char bDrawPathCollidingGeometry : 1; // 0x428
	char bDrawTileLabels : 1; // 0x428
	char bDrawPolygonLabels : 1; // 0x428
	char bDrawDefaultPolygonCost : 1; // 0x429
	char bDrawLabelsOnPathNodes : 1; // 0x429
	char bDrawNavLinks : 1; // 0x429
	char bDrawFailedNavLinks : 1; // 0x429
	char bDrawClusters : 1; // 0x429
	char bDrawOctree : 1; // 0x429
	char bDrawOctreeDetails : 1; // 0x429
	char bDrawMarkedForbiddenPolys : 1; // 0x429
	char bDistinctlyDrawTilesBeingBuilt : 1; // 0x42a
	float DrawOffset; // 0x42c
	char bFixedTilePoolSize : 1; // 0x430
	int32_t TilePoolSize; // 0x434
	float TileSizeUU; // 0x438
	float CellSize; // 0x43c
	float CellHeight; // 0x440
	float AgentRadius; // 0x444
	float AgentHeight; // 0x448
	float AgentMaxSlope; // 0x44c
	float AgentMaxStepHeight; // 0x450
	float MinRegionArea; // 0x454
	float MergeRegionSize; // 0x458
	float MaxSimplificationError; // 0x45c
	int32_t MaxSimultaneousTileGenerationJobsCount; // 0x460
	int32_t TileNumberHardLimit; // 0x464
	int32_t PolyRefTileBits; // 0x468
	int32_t PolyRefNavPolyBits; // 0x46c
	int32_t PolyRefSaltBits; // 0x470
	FVector NavMeshOriginOffset; // 0x474
	float DefaultDrawDistance; // 0x480
	float DefaultMaxSearchNodes; // 0x484
	float DefaultMaxHierarchicalSearchNodes; // 0x488
	ERecastPartitioning RegionPartitioning; // 0x48c
	ERecastPartitioning LayerPartitioning; // 0x48d
	int32_t RegionChunkSplits; // 0x490
	int32_t LayerChunkSplits; // 0x494
	char bSortNavigationAreasByCost : 1; // 0x498
	char bPerformVoxelFiltering : 1; // 0x498
	char bMarkLowHeightAreas : 1; // 0x498
	char bUseExtraTopCellWhenMarkingAreas : 1; // 0x498
	char bFilterLowSpanSequences : 1; // 0x498
	char bFilterLowSpanFromTileCache : 1; // 0x498
	char bDoFullyAsyncNavDataGathering : 1; // 0x498
	char bUseBetterOffsetsFromCorners : 1; // 0x498
	char bStoreEmptyTileLayers : 1; // 0x499
	char bUseVirtualFilters : 1; // 0x499
	char bAllowNavLinkAsPathEnd : 1; // 0x499
	char bUseVoxelCache : 1; // 0x499
	float TileSetUpdateInterval; // 0x49c
	float HeuristicScale; // 0x4a0
	float VerticalDeviationFromGroundCompensation; // 0x4a4
};

struct USourceEffectPhaserPreset : USoundEffectSourcePreset {
	FSourceEffectPhaserSettings Settings; // 0xa0
};

struct UMaterialExpressionSign : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UEOSCoreTitleStorageDeleteCache : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UBTDecorator_SetTagCooldown : UBTDecorator {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
};

struct UProxyLODMeshSimplificationSettings : UDeveloperSettings {
	FName ProxyLODMeshReductionModuleName; // 0x38
};

struct UPaperTileMap : UObject {
	int32_t MapWidth; // 0x28
	int32_t MapHeight; // 0x2c
	int32_t TileWidth; // 0x30
	int32_t TileHeight; // 0x34
	float PixelsPerUnrealUnit; // 0x38
	float SeparationPerTileX; // 0x3c
	float SeparationPerTileY; // 0x40
	float SeparationPerLayer; // 0x44
	TSoftObjectPtr<UPaperTileSet> SelectedTileSet; // 0x48
	UMaterialInterface* Material; // 0x70
	TArray<UPaperTileLayer*> TileLayers; // 0x78
	float CollisionThickness; // 0x88
	ESpriteCollisionMode SpriteCollisionDomain; // 0x8c
	ETileMapProjectionMode ProjectionMode; // 0x8d
	int32_t HexSideLength; // 0x90
	UBodySetup* BodySetup; // 0x98
	int32_t LayerNameIndex; // 0xa0
};

struct UMovieSceneSlomoSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe8
};

struct UMovieSceneCaptureProtocolBase : UObject {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct USlateSettings : UObject {
	bool bExplicitCanvasChildZOrder; // 0x28
};

struct UAxisAngleGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoFloatParameterSource> AngleSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bInInteraction; // 0x88
	FVector RotationOrigin; // 0x8c
	FVector RotationAxis; // 0x98
	FVector RotationPlaneX; // 0xa4
	FVector RotationPlaneY; // 0xb0
	FVector InteractionStartPoint; // 0xbc
	FVector InteractionCurPoint; // 0xc8
	float InteractionStartAngle; // 0xd4
	float InteractionCurAngle; // 0xd8
};

struct UNiagaraEventReceiverEmitterAction_SpawnParticles : UNiagaraEventReceiverEmitterAction {
	uint32_t NumParticles; // 0x28
};

struct ULandscapeMaterialInstanceConstant : UMaterialInstanceConstant {
	TArray<FLandscapeMaterialTextureStreamingInfo> TextureStreamingInfo; // 0x368
	char bIsLayerThumbnail : 1; // 0x378
	char bDisableTessellation : 1; // 0x378
	char bMobile : 1; // 0x378
	char bEditorToolUsage : 1; // 0x378
};

struct UMovieSceneEnumTrack : UMovieScenePropertyTrack {
	UEnum* Enum; // 0xb0
};

struct UGrannyKillerWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UMovieSceneTrackInstance : UObject {
	UObject* AnimatedObject; // 0x28
	bool bIsMasterTrackInstance; // 0x30
	UMovieSceneEntitySystemLinker* Linker; // 0x38
	TArray<FMovieSceneTrackInstanceInput> Inputs; // 0x40
};

struct UMaterialExpressionSceneColor : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput OffsetFraction; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct AHDRIBackdrop_C : AActor {
	USkyLightComponent* SkyLight; // 0x220
	UStaticMeshComponent* Geometry; // 0x228
	USceneComponent* SceneComponent; // 0x230
	UTextureCube* Cubemap; // 0x238
	UMaterialInstanceDynamic* MaterialInstance; // 0x240
	float Intensity; // 0x248
	float Size; // 0x24c
	float LightingDistanceFactor; // 0x250
	bool UseCameraProjection; // 0x254
	UStaticMesh* Mesh; // 0x258
	FVector ProjectionCenter; // 0x260
};

struct UMaterialExpressionVertexInterpolator : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UModularSynthComponent : USynthComponent {
	int32_t VoiceCount; // 0x6c0
};

struct UMaterialExpressionHairColor : UMaterialExpression {
	FExpressionInput Melanin; // 0x40
	FExpressionInput Redness; // 0x54
	FExpressionInput DyeColor; // 0x68
};

struct ULuminARCandidateImage : UARCandidateImage {
	bool bUseUnreliablePose; // 0x58
	bool bImageIsStationary; // 0x59
	EMagicLeapImageTargetOrientation AxisOrientation; // 0x5a
};

struct AExit_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UStaticMeshComponent* ExitDoor_Lock; // 0x228
	UStaticMeshComponent* ExitDoor_Frame; // 0x230
	UFMODAudioComponent* FMODLoopAudio3; // 0x238
	UBoxComponent* Box4; // 0x240
	UFMODAudioComponent* FMODAudioMus; // 0x248
	UBoxComponent* Box3; // 0x250
	UFMODAudioComponent* FMODDoorOpening; // 0x258
	UFMODAudioComponent* survEnter; // 0x260
	USceneComponent* Scene2; // 0x268
	USceneComponent* Scene1; // 0x270
	UFMODAudioComponent* CurseAudio; // 0x278
	UBoxComponent* KillerBlock; // 0x280
	USceneComponent* StartPoint; // 0x288
	USceneComponent* EndPoint; // 0x290
	UCineCameraComponent* CineCamera; // 0x298
	UBoxComponent* ExitColliderForProps; // 0x2a0
	USceneComponent* ExitPoint; // 0x2a8
	UBoxComponent* CameraBlock; // 0x2b0
	UParticleSystemComponent* FloorSmoke; // 0x2b8
	UParticleSystemComponent* DoorSmoke4; // 0x2c0
	UParticleSystemComponent* DoorSmoke3; // 0x2c8
	UParticleSystemComponent* DoorSmoke2; // 0x2d0
	UParticleSystemComponent* DoorSmoke1; // 0x2d8
	UFMODAudioComponent* FMODChainsAudio; // 0x2e0
	UPointLightComponent* CurseLight; // 0x2e8
	UBoxComponent* Box2; // 0x2f0
	UFMODAudioComponent* FMODLoopAudio2; // 0x2f8
	UFMODAudioComponent* FMODLoopAudio1; // 0x300
	UBoxComponent* Box1; // 0x308
	UStaticMeshComponent* ExitDoor_CHAINS; // 0x310
	USceneComponent* SurvOpenPointHasItem; // 0x318
	USceneComponent* SurvOpenPoint; // 0x320
	UStaticMeshComponent* ExitDoor; // 0x328
	UStaticMeshComponent* ExitDoor_2; // 0x330
	UStaticMeshComponent* ExitDoor_Static; // 0x338
	USceneComponent* Scene; // 0x340
	UFMODAudioComponent* FmodAudio; // 0x348
	UBoxComponent* ExitCollider; // 0x350
	UBoxComponent* Box; // 0x358
	USceneComponent* DefaultSceneRoot; // 0x360
	float DoorLock_Alpha_321FCDA846EA928116F9F48F49B95BE7; // 0x368
	ETimelineDirection DoorLock__Direction_321FCDA846EA928116F9F48F49B95BE7; // 0x36c
	UTimelineComponent* DoorLock; // 0x370
	float Timeline_0_alpha_C016DF65404DECEA15D0BDA804B2F155; // 0x378
	ETimelineDirection Timeline_0__Direction_C016DF65404DECEA15D0BDA804B2F155; // 0x37c
	UTimelineComponent* Timeline_1; // 0x380
	float CameraLerp_Alpha_092B50C44E8C1F47954A0EA779D48FA5; // 0x388
	ETimelineDirection CameraLerp__Direction_092B50C44E8C1F47954A0EA779D48FA5; // 0x38c
	UTimelineComponent* CameraLerp; // 0x390
	float OpenDoorAnimTimeline_Alpha_0AA21B4245F607E33C0455AE3978165C; // 0x398
	ETimelineDirection OpenDoorAnimTimeline__Direction_0AA21B4245F607E33C0455AE3978165C; // 0x39c
	UTimelineComponent* OpenDoorAnimTimeline; // 0x3a0
	float OpenProgress; // 0x3a8
	bool Opens?; // 0x3ac
	bool Opened?; // 0x3ad
	AActor* Actor; // 0x3b0
	bool Block?; // 0x3b8
	float FullOpenProgress; // 0x3bc
	float BoostModeValue; // 0x3c0
	float DeltaSeconds; // 0x3c4
	UMaterialInstanceDynamic* ChainsMaterial; // 0x3c8
	bool TransitionOn; // 0x3d0
	bool TransitionOff; // 0x3d1
	float TransitionTime; // 0x3d4
	float TurnOnDuration; // 0x3d8
	float TurnOffDuration; // 0x3dc
	float InvisRefraction; // 0x3e0
	float InvisRefractionZero; // 0x3e4
	float Float1; // 0x3e8
	float ErodeSubtractDef; // 0x3ec
	float LoopAudioVolume1; // 0x3f0
	float LoopAudioVolume2; // 0x3f4
	float Speed; // 0x3f8
	float SurvBoost; // 0x3fc
	bool Cursed; // 0x400
	TArray<ASurvivorMasterBP_C*> EscapedSurvs; // 0x408
	bool CameraLerp?; // 0x418
	bool Find?; // 0x419
	bool Tutorial?; // 0x41a
	AActor* TeleportPoint; // 0x420
	bool TutorialEnd; // 0x428
	ATutorialTrigger_C* TutorialTrigger; // 0x430
	UMaterialInstanceDynamic* DoorFrame; // 0x438
	int32_t AlarmCount; // 0x440
	bool BlockExit?; // 0x444
};

struct ALightmassPortal : AActor {
	ULightmassPortalComponent* PortalComponent; // 0x220
};

struct UNiagaraDataInterfaceRenderTarget2D : UNiagaraDataInterfaceRWBase {
	FIntPoint Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe0
	char bOverrideFormat : 1; // 0xe1
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTarget2D*> ManagedRenderTargets; // 0x108
};

struct UParticleSystemComponent : UFXSystemComponent {
	UParticleSystem* Template; // 0x440
	TArray<UMaterialInterface*> EmitterMaterials; // 0x448
	TArray<USkeletalMeshComponent*> SkelMeshComponents; // 0x458
	char bResetOnDetach : 1; // 0x469
	char bUpdateOnDedicatedServer : 1; // 0x469
	char bAllowRecycling : 1; // 0x469
	char bAutoManageAttachment : 1; // 0x469
	char bAutoAttachWeldSimulatedBodies : 1; // 0x469
	char bWarmingUp : 1; // 0x46a
	char bOverrideLODMethod : 1; // 0x46a
	char bSkipUpdateDynamicDataDuringTick : 1; // 0x46a
	ParticleSystemLODMethod LODMethod; // 0x475
	EParticleSignificanceLevel RequiredSignificance; // 0x476
	TArray<FParticleSysParam> InstanceParameters; // 0x478
	FMulticastInlineDelegate OnParticleSpawn; // 0x488
	FMulticastInlineDelegate OnParticleBurst; // 0x498
	FMulticastInlineDelegate OnParticleDeath; // 0x4a8
	FMulticastInlineDelegate OnParticleCollide; // 0x4b8
	bool bOldPositionValid; // 0x4c8
	FVector OldPosition; // 0x4cc
	FVector PartSysVelocity; // 0x4d8
	float WarmupTime; // 0x4e4
	float WarmupTickRate; // 0x4e8
	float SecondsBeforeInactive; // 0x4f0
	float MaxTimeBeforeForceUpdateTransform; // 0x4f8
	TArray<UParticleSystemReplay*> ReplayClips; // 0x518
	float CustomTimeDilation; // 0x530
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x588
	FName AutoAttachSocketName; // 0x590
	EAttachmentRule AutoAttachLocationRule; // 0x598
	EAttachmentRule AutoAttachRotationRule; // 0x599
	EAttachmentRule AutoAttachScaleRule; // 0x59a
	FMulticastInlineDelegate OnSystemFinished; // 0x5c8
};

struct UBTDecorator_CompareBBEntries : UBTDecorator {
	EBlackBoardEntryComparison Operator; // 0x68
	FBlackboardKeySelector BlackboardKeyA; // 0x70
	FBlackboardKeySelector BlackboardKeyB; // 0x98
};

struct UPlaneFalloff : UFieldNodeFloat {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	float Distance; // 0xc0
	FVector Position; // 0xc4
	FVector Normal; // 0xd0
	EFieldFalloffType Falloff; // 0xdc
};

struct UInterpGroup : UObject {
	TArray<UInterpTrack*> InterpTracks; // 0x30
	FName GroupName; // 0x40
	FColor GroupColor; // 0x48
	char bCollapsed : 1; // 0x4c
	char bVisible : 1; // 0x4c
	char bIsFolder : 1; // 0x4c
	char bIsParented : 1; // 0x4c
	char bIsSelected : 1; // 0x4c
};

struct UPlayMontageCallbackProxy : UObject {
	FMulticastInlineDelegate OnCompleted; // 0x28
	FMulticastInlineDelegate OnBlendOut; // 0x38
	FMulticastInlineDelegate OnInterrupted; // 0x48
	FMulticastInlineDelegate OnNotifyBegin; // 0x58
	FMulticastInlineDelegate OnNotifyEnd; // 0x68
};

struct USoundGroups : UObject {
	TArray<FSoundGroup> SoundGroupProfiles; // 0x28
};

struct UChatWindowText_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FadeOut; // 0x268
	UWidgetAnimation* FadeIn; // 0x270
	UInvalidationBox* InvalidationBox_85; // 0x278
	UHorizontalBox* MessageBox; // 0x280
	URichTextBlock* Text; // 0x288
	UTextBlock* TypeMessage; // 0x290
	FText NicknameText; // 0x298
	FText MessageText; // 0x2b0
	FText ChatTypeMessage; // 0x2c8
	bool Killer?; // 0x2e0
	FSlateColor Normal; // 0x2e8
	FSlateColor Killer; // 0x310
	FTimerHandle HidingTimerHandler; // 0x338
	FTimerHandle DisplayingTimerHandler; // 0x340
	bool Interrupt; // 0x348
	float HiddenTimeAnimation; // 0x34c
};

struct UPhysicsAsset : UObject {
	TArray<int32_t> BoundsBodies; // 0x30
	TArray<USkeletalBodySetup*> SkeletalBodySetups; // 0x40
	TArray<UPhysicsConstraintTemplate*> ConstraintSetup; // 0x50
	FSolverIterations SolverIterations; // 0x60
	char bNotForDedicatedServer : 1; // 0x7c
	UThumbnailInfo* ThumbnailInfo; // 0x120
	TArray<UBodySetup*> BodySetup; // 0x128
};

struct UInteractiveToolPropertySet : UObject {
	UInteractiveToolPropertySet* CachedProperties; // 0x38
	bool bIsPropertySetEnabled; // 0x40
};

struct ASpotLight : ALight {
	USpotLightComponent* SpotLightComponent; // 0x230
};

struct UModelComponent : UPrimitiveComponent {
	UBodySetup* ModelBodySetup; // 0x458
};

struct UARTextureCameraDepth : UARTexture {
	EARDepthQuality DepthQuality; // 0xf8
	EARDepthAccuracy DepthAccuracy; // 0xf9
	bool bIsTemporallySmoothed; // 0xfa
};

struct UDatasmithStaticMeshTemplate : UDatasmithObjectTemplate {
	FDatasmithMeshSectionInfoMapTemplate SectionInfoMap; // 0x30
	int32_t LightMapCoordinateIndex; // 0x80
	int32_t LightMapResolution; // 0x84
	TArray<FDatasmithMeshBuildSettingsTemplate> BuildSettings; // 0x88
	TArray<FDatasmithStaticMaterialTemplate> StaticMaterials; // 0x98
};

struct UParticleModuleCameraOffset : UParticleModuleCameraBase {
	FRawDistributionFloat CameraOffset; // 0x30
	char bSpawnTimeOnly : 1; // 0x60
	EParticleCameraOffsetUpdateMethod UpdateMethod; // 0x64
};

struct ANiagaraActor : AActor {
	UNiagaraComponent* NiagaraComponent; // 0x220
	char bDestroyOnSystemFinish : 1; // 0x228
};

struct UMaterialExpressionGIReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput StaticIndirect; // 0x54
	FExpressionInput DynamicIndirect; // 0x68
};

struct UBaseBrushTool : UMeshSurfacePointTool {
	UBrushBaseProperties* BrushProperties; // 0xc0
	bool bInBrushStroke; // 0xc8
	float WorldToLocalScale; // 0xcc
	FBrushStampData LastBrushStamp; // 0xd0
	TSoftClassPtr<UObject> PropertyClass; // 0x190
	UBrushStampIndicator* BrushStampIndicator; // 0x1b8
};

struct UMaterialExpressionAtmosphericFogColor : UMaterialExpression {
	FExpressionInput WorldPosition; // 0x40
};

struct UNavLinkComponent : UPrimitiveComponent {
	TArray<FNavigationLink> Links; // 0x448
};

struct UAchievementQueryCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct UParticleModuleBeamNoise : UParticleModuleBeamBase {
	char bLowFreq_Enabled : 1; // 0x30
	int32_t Frequency; // 0x34
	int32_t Frequency_LowRange; // 0x38
	FRawDistributionVector NoiseRange; // 0x40
	FRawDistributionFloat NoiseRangeScale; // 0x88
	char bNRScaleEmitterTime : 1; // 0xb8
	FRawDistributionVector NoiseSpeed; // 0xc0
	char bSmooth : 1; // 0x108
	float NoiseLockRadius; // 0x10c
	char bNoiseLock : 1; // 0x110
	char bOscillate : 1; // 0x110
	float NoiseLockTime; // 0x114
	float NoiseTension; // 0x118
	char bUseNoiseTangents : 1; // 0x11c
	FRawDistributionFloat NoiseTangentStrength; // 0x120
	int32_t NoiseTessellation; // 0x150
	char bTargetNoise : 1; // 0x154
	float FrequencyDistance; // 0x158
	char bApplyNoiseScale : 1; // 0x15c
	FRawDistributionFloat NoiseScale; // 0x160
};

struct UMaterialExpressionHairAttributes : UMaterialExpression {
	char bUseTangentSpace : 1; // 0x40
};

struct UAISenseConfig_Damage : UAISenseConfig {
	UAISense_Damage* Implementation; // 0x48
};

struct UGeometryCollectionDebugDrawComponent : UActorComponent {
	AGeometryCollectionDebugDrawActor* GeometryCollectionDebugDrawActor; // 0xb0
	AGeometryCollectionRenderLevelSetActor* GeometryCollectionRenderLevelSetActor; // 0xb8
};

struct ALevelBounds : AActor {
	UBoxComponent* BoxComponent; // 0x220
	bool bAutoUpdateBounds; // 0x228
};

struct UBait_C : UPerkKiller_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x120
	TArray<ANewAlarmBP_C*> AlarmsRef; // 0x128
};

struct UW_VictoryScreenText_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	USizeBox* SizeBox_1; // 0x268
	UTextBlock* TextBlock_53; // 0x270
	float Alpha; // 0x278
	bool Start?; // 0x27c
};

struct UNiagaraPreviewAxis_InterpParamFloat : UNiagaraPreviewAxis_InterpParamBase {
	float Min; // 0x38
	float Max; // 0x3c
};

struct UEndpointSubmix : USoundSubmixBase {
	FName EndpointType; // 0x38
	UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40
	UAudioEndpointSettingsBase* EndpointSettings; // 0x48
};

struct ARabbit_C : AKillerMasterBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1318
	UChargeSpell_C* ChargeSpell; // 0x1320
	UNiagaraComponent* NiagaraChainsawVroom; // 0x1328
	UNiagaraComponent* NiagaraChainsawMain; // 0x1330
	UStaticMeshComponent* RadioFpp; // 0x1338
	UStaticMeshComponent* Radio; // 0x1340
	UFMODAudioComponent* FMODAudio3; // 0x1348
	UBoxComponent* ChainCollusion; // 0x1350
	UFMODAudioComponent* FMODAudio2_1; // 0x1358
	USkeletalMeshComponent* ChainsawFPPMesh; // 0x1360
	USkeletalMeshComponent* ChainsawMesh; // 0x1368
	UToyBomb_C* ToyBomb; // 0x1370
	UChainsaw_C* Chainsaw; // 0x1378
	bool ChargeAttack; // 0x1380
	UFMODAudioComponent* ChargeSound; // 0x1388
	AActor* ChainCollisionActor; // 0x1390
	FFMODEventInstance FmodChainsawTerr; // 0x1398
	bool BChainsawTerror; // 0x13a0
};

struct UMaterialExpressionTangent : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UGizmoLineHandleComponent : UGizmoBaseComponent {
	FVector Normal; // 0x460
	float HandleSize; // 0x46c
	float Thickness; // 0x470
	FVector Direction; // 0x474
	float Length; // 0x480
	bool bImageScale; // 0x484
};

struct UAnimNotify_PlaySound : UAnimNotify {
	USoundBase* Sound; // 0x38
	float VolumeMultiplier; // 0x40
	float PitchMultiplier; // 0x44
	char bFollow : 1; // 0x48
	FName AttachName; // 0x4c
};

struct UEOSCoreConnectCreateUser : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct AProceduralFoliageBlockingVolume : AVolume {
	AProceduralFoliageVolume* ProceduralFoliageVolume; // 0x258
};

struct UCompositionGraphCaptureProtocol : UMovieSceneImageCaptureProtocolBase {
	FCompositionGraphCapturePasses IncludeRenderPasses; // 0x58
	bool bCaptureFramesInHDR; // 0x68
	int32_t HDRCompressionQuality; // 0x6c
	EHDRCaptureGamut CaptureGamut; // 0x70
	FSoftObjectPath PostProcessingMaterial; // 0x78
	bool bDisableScreenPercentage; // 0x90
	UMaterialInterface* PostProcessingMaterialPtr; // 0x98
};

struct ASceneCapture : AActor {
	UStaticMeshComponent* MeshComp; // 0x220
	USceneComponent* SceneComponent; // 0x228
};

struct UInterpToMovementComponent : UMovementComponent {
	float Duration; // 0xf0
	char bPauseOnImpact : 1; // 0xf4
	bool bSweep; // 0xf8
	ETeleportType TeleportType; // 0xf9
	EInterpToBehaviourType BehaviourType; // 0xfa
	bool bCheckIfStillInWorld; // 0xfb
	char bForceSubStepping : 1; // 0xfc
	FMulticastInlineDelegate OnInterpToReverse; // 0x100
	FMulticastInlineDelegate OnInterpToStop; // 0x110
	FMulticastInlineDelegate OnWaitBeginDelegate; // 0x120
	FMulticastInlineDelegate OnWaitEndDelegate; // 0x130
	FMulticastInlineDelegate OnResetDelegate; // 0x140
	float MaxSimulationTimeStep; // 0x150
	int32_t MaxSimulationIterations; // 0x154
	TArray<FInterpControlPoint> ControlPoints; // 0x158
};

struct UEOSCoreSessionsRejectInvite : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UAnimSequence : UAnimSequenceBase {
	int32_t NumFrames; // 0xa8
	TArray<FTrackToSkeletonMap> TrackToSkeletonMapTable; // 0xb0
	UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xd0
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd8
	EAdditiveAnimationType AdditiveAnimType; // 0x150
	EAdditiveBasePoseType RefPoseType; // 0x151
	UAnimSequence* RefPoseSeq; // 0x158
	int32_t RefFrameIndex; // 0x160
	FName RetargetSource; // 0x164
	EAnimInterpolationType Interpolation; // 0x16c
	bool bEnableRootMotion; // 0x16d
	ERootMotionRootLock RootMotionRootLock; // 0x16e
	bool bForceRootLock; // 0x16f
	bool bUseNormalizedRootMotionScale; // 0x170
	bool bRootMotionSettingsCopiedFromMontage; // 0x171
	TArray<FAnimSyncMarker> AuthoredSyncMarkers; // 0x178
	TArray<FBakedCustomAttributePerBoneData> BakedPerBoneCustomAttributeData; // 0x1a0
};

struct UCompositeCurveTable : UCurveTable {
	TArray<UCurveTable*> ParentTables; // 0xa0
	TArray<UCurveTable*> OldParentTables; // 0xb0
};

struct UVariantObjectBinding : UObject {
	FString CachedActorLabel; // 0x28
	FSoftObjectPath ObjectPtr; // 0x38
	LazyObjectProperty LazyObjectPtr; // 0x50
	TArray<UPropertyValue*> CapturedProperties; // 0x70
	TArray<FFunctionCaller> FunctionCallers; // 0x80
};

struct UThrobber : UWidget {
	int32_t NumberOfPieces; // 0x108
	bool bAnimateHorizontally; // 0x10c
	bool bAnimateVertically; // 0x10d
	bool bAnimateOpacity; // 0x10e
	USlateBrushAsset* PieceImage; // 0x110
	FSlateBrush Image; // 0x118
};

struct UW_LoadingScreen_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FadeOut; // 0x268
	UWidgetAnimation* FadeIn; // 0x270
	UWidgetAnimation* loading; // 0x278
	UImage* BootScreenich; // 0x280
	UImage* Image; // 0x288
	UImage* Image_2; // 0x290
	UImage* Image_3; // 0x298
	UImage* Image_4; // 0x2a0
	UImage* Image_5; // 0x2a8
	UImage* Image_6; // 0x2b0
	UImage* Image_7; // 0x2b8
	UImage* Image_8; // 0x2c0
	UImage* Image_9; // 0x2c8
	UImage* Image_58; // 0x2d0
	UImage* Image_100; // 0x2d8
	UImage* Image_112; // 0x2e0
	UImage* Image_144; // 0x2e8
	UImage* Image_320; // 0x2f0
	UImage* Image_353; // 0x2f8
	UImage* Image_BG; // 0x300
	UImage* Image_BG_2; // 0x308
	UImage* Image_FadeFilter; // 0x310
	UImage* Image_FirstFrame; // 0x318
	UImage* Image_FirstFrame_2; // 0x320
	UImage* Image_FirstFrame_3; // 0x328
	UImage* Image_FirstFrame_4; // 0x330
	UImage* Image_FirstFrame_5; // 0x338
	UImage* Image_LoadBG; // 0x340
	UImage* Image_Progress; // 0x348
	UImage* Image_ProphuntRef; // 0x350
	UProgressBar* ProgressBar_Loading; // 0x358
	USafeZone* SafeZone; // 0x360
	USafeZone* SafeZone_600; // 0x368
	UTextBlock* TextBlock_2; // 0x370
	UTextBlock* TextBlock_3; // 0x378
	UTextBlock* TextBlock_4; // 0x380
	UTextBlock* TextBlock_Des1; // 0x388
	UTextBlock* TextBlock_Des2; // 0x390
	UTextBlock* TextBlock_Des3; // 0x398
	UTextBlock* TextBlock_GameMode; // 0x3a0
	UTextBlock* TextBlock_gameName; // 0x3a8
	UTextBlock* TextBlock_MapName; // 0x3b0
	UWidgetSwitcher* WidgetSwitcher_1; // 0x3b8
	TMap<FString, UTexture2D*> Maps; // 0x3c0
	bool Delete; // 0x410
	FText MapName; // 0x418
	FText ModeName; // 0x430
	FString Map; // 0x448
	TArray<FText> Surv Tips; // 0x458
	TMap<FString, UPaperSprite*> ScreenTips; // 0x468
	UMaterialInstanceDynamic* ProgressMaterial; // 0x4b8
	UTexture2D* Texture; // 0x4c0
	UMediaPlayer* Boot; // 0x4c8
	FFMODEventInstance LoadingSound; // 0x4d0
	FString Map Name; // 0x4d8
};

struct UWBP_PlayWindow_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Cancel; // 0x268
	UCircularThrobber* CircularThrobber_152; // 0x270
	UImage* Image_139; // 0x278
	UImage* Image_248; // 0x280
	UTextBlock* TextBlock_320; // 0x288
};

struct UKillerWalkGrabbedShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UDodger_C : UPerkSurv_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
};

struct ABP_ItemSpawnPoint_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UStaticMeshComponent* Cube; // 0x228
	USceneComponent* DefaultSceneRoot; // 0x230
	UBP_ItemsManager_C* Manager; // 0x238
};

struct UAISystem : UAISystemBase {
	FSoftClassPath PerceptionSystemClassName; // 0x58
	FSoftClassPath HotSpotManagerClassName; // 0x70
	float AcceptanceRadius; // 0x88
	float PathfollowingRegularPathPointAcceptanceRadius; // 0x8c
	float PathfollowingNavLinkAcceptanceRadius; // 0x90
	bool bFinishMoveOnGoalOverlap; // 0x94
	bool bAcceptPartialPaths; // 0x95
	bool bAllowStrafing; // 0x96
	bool bEnableBTAITasks; // 0x97
	bool bAllowControllersAsEQSQuerier; // 0x98
	bool bEnableDebuggerPlugin; // 0x99
	bool bForgetStaleActors; // 0x9a
	bool bAddBlackboardSelfKey; // 0x9b
	ECollisionChannel DefaultSightCollisionChannel; // 0x9c
	UBehaviorTreeManager* BehaviorTreeManager; // 0xa0
	UEnvQueryManager* EnvironmentQueryManager; // 0xa8
	UAIPerceptionSystem* PerceptionSystem; // 0xb0
	TArray<UAIAsyncTaskBlueprintProxy*> AllProxyObjects; // 0xb8
	UAIHotSpotManager* HotSpotManager; // 0xc8
	UNavLocalGridManager* NavLocalGrids; // 0xd0
};

struct USurvRole_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* NeedHeal; // 0x268
	UImage* Image; // 0x270
	UImage* Image_58; // 0x278
	ASurvivorMasterBP_C* Surv; // 0x280
};

struct UParticleSystemReplay : UObject {
	int32_t ClipIDNumber; // 0x28
};

struct ALootboxShop_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UWidgetComponent* Widget1; // 0x228
	UWidgetComponent* Widget; // 0x230
	USceneComponent* IconPoint; // 0x238
	UFMODAudioComponent* FMODAudioLoop; // 0x240
	UBoxComponent* Box; // 0x248
	UFMODAudioComponent* FMODAudioCloseDoor; // 0x250
	UFMODAudioComponent* FMODAudioBeep; // 0x258
	UFMODAudioComponent* FMODAudioLever; // 0x260
	UStaticMeshComponent* LeverArm; // 0x268
	UStaticMeshComponent* DownDoor; // 0x270
	UStaticMeshComponent* UpDoor; // 0x278
	USceneComponent* SpawnItemPoint; // 0x280
	UStaticMeshComponent* Machine; // 0x288
	USceneComponent* DefaultSceneRoot; // 0x290
	TArray<FName> ItemsName; // 0x298
	TArray<FName> RarityName; // 0x2a8
	TArray<float> ItemsChance; // 0x2b8
	TArray<float> RarityChance; // 0x2c8
	float Random; // 0x2d8
	int32_t FirstIndex; // 0x2dc
	int32_t SecondIndex; // 0x2e0
	int32_t TempInt; // 0x2e4
	FName GetItemName; // 0x2e8
	FName GetRarityName; // 0x2f0
	FName DroppedItem; // 0x2f8
	bool Block?; // 0x300
	AActor* SpawnedItem; // 0x308
	bool ItemSpawned?; // 0x310
	int32_t NeedPoints; // 0x314
	float DeltaTime; // 0x318
	bool ArmDown?; // 0x31c
	bool DoorOpen?; // 0x31d
	UMaterialInstanceDynamic* Lamp1; // 0x320
	UMaterialInstanceDynamic* Lamp2; // 0x328
	UMaterialInstanceDynamic* Lamp3; // 0x330
	UMaterialInstanceDynamic* Lamp4; // 0x338
	UMaterialInstanceDynamic* Lamp5; // 0x340
	UMaterialInstanceDynamic* Lamp6; // 0x348
	UMaterialInstanceDynamic* Moon1; // 0x350
	UMaterialInstanceDynamic* Moon2; // 0x358
	bool MaterialsReady?; // 0x360
	float UpLampsSpeed; // 0x364
	float MoonLampSpeed; // 0x368
	float RandomFlickerValue; // 0x36c
	bool AllOff?; // 0x370
	bool ItemDropped?; // 0x371
	bool First?; // 0x372
	bool Second?; // 0x373
	bool Third?; // 0x374
};

struct UEOSCoreFriendsQueryFriends : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UBPA_RHG_Lobby_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x3a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_40; // 0x3d0
	FAnimNode_StateResult AnimGraphNode_StateResult_40; // 0x450
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_39; // 0x480
	FAnimNode_StateResult AnimGraphNode_StateResult_39; // 0x500
	FAnimNode_StateMachine AnimGraphNode_StateMachine_20; // 0x530
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x5e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_38; // 0x608
	FAnimNode_StateResult AnimGraphNode_StateResult_38; // 0x688
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_37; // 0x6b8
	FAnimNode_StateResult AnimGraphNode_StateResult_37; // 0x738
	FAnimNode_StateMachine AnimGraphNode_StateMachine_19; // 0x768
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x818
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_36; // 0x840
	FAnimNode_StateResult AnimGraphNode_StateResult_36; // 0x8c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_35; // 0x8f0
	FAnimNode_StateResult AnimGraphNode_StateResult_35; // 0x970
	FAnimNode_StateMachine AnimGraphNode_StateMachine_18; // 0x9a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0xa50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34; // 0xa78
	FAnimNode_StateResult AnimGraphNode_StateResult_34; // 0xaf8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0xb28
	FAnimNode_StateResult AnimGraphNode_StateResult_33; // 0xba8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_17; // 0xbd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0xc88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0xcb0
	FAnimNode_StateResult AnimGraphNode_StateResult_32; // 0xd30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0xd60
	FAnimNode_StateResult AnimGraphNode_StateResult_31; // 0xde0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_16; // 0xe10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0xec0
	FAnimNode_StateResult AnimGraphNode_StateResult_30; // 0xf40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0xf70
	FAnimNode_StateResult AnimGraphNode_StateResult_29; // 0xff0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_15; // 0x1020
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0x10d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x1170
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x1220
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x1248
	FAnimNode_StateResult AnimGraphNode_StateResult_28; // 0x12c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x12f8
	FAnimNode_StateResult AnimGraphNode_StateResult_27; // 0x1378
	FAnimNode_StateMachine AnimGraphNode_StateMachine_14; // 0x13a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x1458
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x1480
	FAnimNode_StateResult AnimGraphNode_StateResult_26; // 0x1500
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x1530
	FAnimNode_StateResult AnimGraphNode_StateResult_25; // 0x15b0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_13; // 0x15e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x1690
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x16b8
	FAnimNode_StateResult AnimGraphNode_StateResult_24; // 0x1738
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x1768
	FAnimNode_StateResult AnimGraphNode_StateResult_23; // 0x17e8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_12; // 0x1818
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x18c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x18f0
	FAnimNode_StateResult AnimGraphNode_StateResult_22; // 0x1970
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x19a0
	FAnimNode_StateResult AnimGraphNode_StateResult_21; // 0x1a20
	FAnimNode_StateMachine AnimGraphNode_StateMachine_11; // 0x1a50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x1b00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x1b28
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0x1ba8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x1bd8
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0x1c58
	FAnimNode_StateMachine AnimGraphNode_StateMachine_10; // 0x1c88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x1d38
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x1db8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x1de8
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x1e68
	FAnimNode_StateMachine AnimGraphNode_StateMachine_9; // 0x1e98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x1f48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x1fe8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x2010
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x2090
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x20c0
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x2140
	FAnimNode_StateMachine AnimGraphNode_StateMachine_8; // 0x2170
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x2220
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x22c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x22e8
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x2368
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x2398
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x2418
	FAnimNode_StateMachine AnimGraphNode_StateMachine_7; // 0x2448
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x24f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x2598
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x25c0
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x2640
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x2670
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x26f0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_6; // 0x2720
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x27d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x2870
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x2898
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x2918
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x2948
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x29c8
	FAnimNode_StateMachine AnimGraphNode_StateMachine_5; // 0x29f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x2aa8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x2b48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x2b70
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x2bf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x2c20
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x2ca0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_4; // 0x2cd0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x2d80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x2e20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x2e48
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x2ec8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x2ef8
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x2f78
	FAnimNode_StateMachine AnimGraphNode_StateMachine_3; // 0x2fa8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x3058
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x30f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x3198
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x31c0
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x3240
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x3270
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x32f0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x3320
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x33d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x33f8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x3478
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x34a8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x3528
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x3558
	SurvChars survChar; // 0x3608
	bool Reset?; // 0x3609
	bool AmericanFootball?; // 0x360a
	bool IsSunshinechris; // 0x360b
	bool IsStreetIrArtist; // 0x360c
	bool IsBaseball; // 0x360d
};

struct UShootProphunt_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	AKillerMasterBP_C* Killer; // 0xb8
	bool CD; // 0xc0
	int32_t Ammo; // 0xc4
	bool FIRE; // 0xc8
	FRotator targetRotat; // 0xcc
	float InterpSpeed; // 0xd8
	float ReloadDelay; // 0xdc
	int32_t FullAMMO; // 0xe0
	bool AimRDY; // 0xe4
	float DeltaSec; // 0xe8
	float timeFire; // 0xec
	int32_t Damage; // 0xf0
	float Radius; // 0xf4
	float ReloadTimeA; // 0xf8
	FString SpellName; // 0x100
	bool Shoot?; // 0x110
	bool ShootCD?; // 0x111
};

struct UIpNetDriver : UNetDriver {
	char LogPortUnreach : 1; // 0x748
	char AllowPlayerPortUnreach : 1; // 0x748
	uint32_t MaxPortCountToTry; // 0x74c
	uint32_t ServerDesiredSocketReceiveBufferBytes; // 0x75c
	uint32_t ServerDesiredSocketSendBufferBytes; // 0x760
	uint32_t ClientDesiredSocketReceiveBufferBytes; // 0x764
	uint32_t ClientDesiredSocketSendBufferBytes; // 0x768
	double MaxSecondsInReceive; // 0x770
	int32_t NbPacketsBetweenReceiveTimeTest; // 0x778
	float ResolutionConnectionTimeout; // 0x77c
};

struct USynthComponentMonoWaveTable : USynthComponent {
	FMulticastInlineDelegate OnTableAltered; // 0x6c0
	FMulticastInlineDelegate OnNumTablesChanged; // 0x6d0
	UMonoWaveTableSynthPreset* CurrentPreset; // 0x6e0
};

struct UDrDolittle_C : UPerkSurv_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
};

struct UTextBlockWidgetStyle : USlateWidgetStyleContainerBase {
	FTextBlockStyle TextBlockStyle; // 0x30
};

struct UAudioSettings : UDeveloperSettings {
	FSoftObjectPath DefaultSoundClassName; // 0x38
	FSoftObjectPath DefaultMediaSoundClassName; // 0x50
	FSoftObjectPath DefaultSoundConcurrencyName; // 0x68
	FSoftObjectPath DefaultBaseSoundMix; // 0x80
	FSoftObjectPath VoiPSoundClass; // 0x98
	FSoftObjectPath MasterSubmix; // 0xb0
	FSoftObjectPath ReverbSubmix; // 0xc8
	FSoftObjectPath EQSubmix; // 0xe0
	EVoiceSampleRate VoiPSampleRate; // 0xf8
	float DefaultReverbSendLevel; // 0xfc
	int32_t MaximumConcurrentStreams; // 0x100
	float GlobalMinPitchScale; // 0x104
	float GlobalMaxPitchScale; // 0x108
	TArray<FAudioQualitySettings> QualityLevels; // 0x110
	char bAllowPlayWhenSilent : 1; // 0x120
	char bDisableMasterEQ : 1; // 0x120
	char bAllowCenterChannel3DPanning : 1; // 0x120
	uint32_t NumStoppingSources; // 0x124
	EPanningMethod PanningMethod; // 0x128
	EMonoChannelUpmixMethod MonoChannelUpmixMethod; // 0x129
	FString DialogueFilenameFormat; // 0x130
};

struct UARTrackedQRCode : UARTrackedImage {
	FString QRCode; // 0x108
	int32_t Version; // 0x118
};

struct ALandscapeStreamingProxy : ALandscapeProxy {
	LazyObjectProperty LandscapeActor; // 0x598
};

struct UAnimNotifyState_Trail : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName FirstSocketName; // 0x38
	FName SecondSocketName; // 0x40
	ETrailWidthMode WidthScaleMode; // 0x48
	FName WidthScaleCurve; // 0x4c
	char bRecycleSpawnedSystems : 1; // 0x54
};

struct UFPGrannyAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_127; // 0x2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_126; // 0x320
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_125; // 0x348
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_124; // 0x370
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_123; // 0x398
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_122; // 0x3c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_121; // 0x3e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_120; // 0x410
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_119; // 0x438
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_118; // 0x460
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_117; // 0x488
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_116; // 0x4b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_115; // 0x4d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_114; // 0x500
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_113; // 0x528
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_112; // 0x550
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_111; // 0x578
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_110; // 0x5a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_109; // 0x5c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_108; // 0x5f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_107; // 0x618
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_106; // 0x640
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_105; // 0x668
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_104; // 0x690
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_103; // 0x6b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_102; // 0x6e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_101; // 0x708
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_100; // 0x730
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_99; // 0x758
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_98; // 0x780
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_97; // 0x7a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_96; // 0x7d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_95; // 0x7f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_94; // 0x820
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_93; // 0x848
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_92; // 0x870
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_91; // 0x898
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_90; // 0x8c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_89; // 0x8e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_88; // 0x910
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_87; // 0x938
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_86; // 0x960
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_85; // 0x988
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_84; // 0x9b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_83; // 0x9d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_82; // 0xa00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_81; // 0xa28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_80; // 0xa50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_79; // 0xa78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_78; // 0xaa0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_77; // 0xac8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_76; // 0xaf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_75; // 0xb18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_74; // 0xb40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_73; // 0xb68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_72; // 0xb90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_71; // 0xbb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_70; // 0xbe0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_69; // 0xc08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_68; // 0xc30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_67; // 0xc58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_66; // 0xc80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_65; // 0xca8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_64; // 0xcd0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0xcf8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0xd20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0xd48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0xd70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0xd98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0xdc0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0xde8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0xe10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0xe38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0xe60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0xe88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0xeb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0xed8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0xf00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0xf28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0xf50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0xf78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0xfa0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0xfc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0xff0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x1018
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x1040
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x1068
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x1090
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x10b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x10e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x1108
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x1130
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x1158
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x1180
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x11a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x11d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x11f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x1220
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x1248
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x1270
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x1298
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x12c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x12e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x1310
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x1338
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x1360
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x1388
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x13b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x13d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x1400
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x1428
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x1450
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x1478
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x14a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x14c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x14f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x1518
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x1540
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x1568
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x1590
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x15b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x15e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x1608
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x1630
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x1658
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x1680
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x16a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x16d0
	FAnimNode_StateResult AnimGraphNode_StateResult_22; // 0x1750
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x1780
	FAnimNode_StateResult AnimGraphNode_StateResult_21; // 0x1800
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0x1830
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0x18b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0x18e0
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0x1960
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x1990
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x1a10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x1a40
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x1ac0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x1af0
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x1b70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x1ba0
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x1c20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x1c50
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x1cd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x1d00
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x1d80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x1db0
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_2; // 0x1e30
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x1ed0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x1f98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x2018
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x2098
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x20c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x2148
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x21e8
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x2268
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x2298
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x2318
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x23e0
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x2460
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x2490
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x2510
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x2540
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x2608
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x2688
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x2708
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x2738
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x27b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x27e8
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x2868
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x2898
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x2918
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x2948
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x29c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x2a68
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x2ae8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x2b18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x2b98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x2c18
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x2cb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x2d58
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x2dd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2e08
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x2e88
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x2f28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x2ff0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x3070
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x30f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x3120
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x3208
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x3238
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x32e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3388
	float keepSurv; // 0x3408
	bool IsInAir; // 0x340c
	float Speed; // 0x3410
	bool AttackBool; // 0x3414
	bool JumpEndChek; // 0x3415
	bool FIRE; // 0x3416
	bool Plant; // 0x3417
	bool KnifeIn; // 0x3418
	bool KnifeSpawn; // 0x3419
	float Direction; // 0x341c
	bool MarioStun; // 0x3420
	int32_t TypeAttack; // 0x3424
	bool Astral; // 0x3428
	bool Flashed; // 0x3429
	bool PropHunt?; // 0x342a
	float SpeedRateF; // 0x342c
	float TimeRun; // 0x3430
	float Delta Time X; // 0x3434
	bool Broke Anim; // 0x3438
};

struct A3DLobbyMesh_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USkeletalMeshComponent* HammerIntro; // 0x228
	USkeletalMeshComponent* Surv_RedGirls; // 0x230
	USkeletalMeshComponent* Surv_Mable; // 0x238
	USkeletalMeshComponent* Surv_Chris; // 0x240
	USkeletalMeshComponent* Surv_Taiga; // 0x248
	USceneCaptureComponent2D* SceneCaptureComponent2DMasked; // 0x250
	URectLightComponent* RectLight1; // 0x258
	URectLightComponent* RectLight; // 0x260
	USkeletalMeshComponent* Banshee; // 0x268
	UNiagaraComponent* Niagara; // 0x270
	USkeletalMeshComponent* knife; // 0x278
	USkeletalMeshComponent* Doppelganger; // 0x280
	USkeletalMeshComponent* SkeletalMesh; // 0x288
	UPointLightComponent* PointLight; // 0x290
	USkeletalMeshComponent* Surv_Isaac; // 0x298
	USkeletalMeshComponent* Keymaster; // 0x2a0
	USkeletalMeshComponent* Granny; // 0x2a8
	USpringArmComponent* SpringArm; // 0x2b0
	USceneCaptureComponent2D* SceneCaptureComponent2D; // 0x2b8
	USceneComponent* DefaultSceneRoot; // 0x2c0
	bool Killer?; // 0x2c8
	KillerType KillerType; // 0x2c9
	int32_t SurvSkin; // 0x2cc
	SurvChars survChar; // 0x2d0
	SurvChars TrueSurvSkin; // 0x2d1
};

struct UNiagaraDataInterfaceArrayColor : UNiagaraDataInterfaceArray {
	TArray<FLinearColor> ColorData; // 0x50
};

struct UParticleModuleColorScaleOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorScaleOverLife; // 0x30
	FRawDistributionFloat AlphaScaleOverLife; // 0x78
	char bEmitterTime : 1; // 0xa8
};

struct UEnvQueryGenerator_OnCircle : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue CircleRadius; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb8
	FAIDataProviderIntValue NumberOfPoints; // 0xf0
	EPointOnCircleSpacingMethod PointOnCircleSpacingMethod; // 0x128
	FEnvDirection ArcDirection; // 0x130
	FAIDataProviderFloatValue ArcAngle; // 0x150
	float AngleRadians; // 0x188
	UEnvQueryContext* CircleCenter; // 0x190
	bool bIgnoreAnyContextActorsWhenGeneratingCircle; // 0x198
	FAIDataProviderFloatValue CircleCenterZOffset; // 0x1a0
	FEnvTraceData TraceData; // 0x1d8
	char bDefineArc : 1; // 0x208
};

struct USynth2DSlider : UWidget {
	float ValueX; // 0x108
	float ValueY; // 0x10c
	FDelegate ValueXDelegate; // 0x110
	FDelegate ValueYDelegate; // 0x120
	FSynth2DSliderStyle WidgetStyle; // 0x130
	FLinearColor SliderHandleColor; // 0x3e8
	bool IndentHandle; // 0x3f8
	bool Locked; // 0x3f9
	float StepSize; // 0x3fc
	bool IsFocusable; // 0x400
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x408
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x418
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x428
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x438
	FMulticastInlineDelegate OnValueChangedX; // 0x448
	FMulticastInlineDelegate OnValueChangedY; // 0x458
};

struct UWBP_HelpTip_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Image_Tip; // 0x268
	USizeBox* SizeBox_Content; // 0x270
	UTextBlock* TextBlock_Description; // 0x278
	UTextBlock* TextBlock_Header; // 0x280
	int32_t HintNumber; // 0x288
	bool Killer; // 0x28c
};

struct UInteractiveToolManager : UObject {
	UInteractiveTool* ActiveLeftTool; // 0x30
	UInteractiveTool* ActiveRightTool; // 0x38
	TMap<FString, UInteractiveToolBuilder*> ToolBuilders; // 0x90
};

struct UInterpTrackInstAnimControl : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UButtonStyleAsset : UObject {
	FButtonStyle ButtonStyle; // 0x28
};

struct UBTTask_MakeNoise : UBTTaskNode {
	float Loudnes; // 0x70
};

struct URadialVector : UFieldNodeVector {
	float Magnitude; // 0xb0
	FVector Position; // 0xb4
};

struct USteamNetConnection : UIpConnection {
	bool bIsPassthrough; // 0x1b90
};

struct AMagicLeapARPinRenderer : AActor {
	bool bInfoActorsVisibilityOverride; // 0x220
	TMap<FGuid, AMagicLeapARPinInfoActorBase*> AllInfoActors; // 0x228
	AMagicLeapARPinInfoActorBase* ClassToSpawn; // 0x280
};

struct AMaterialInstanceActor : AActor {
	TArray<AActor*> TargetActors; // 0x220
};

struct UEditableGameplayTagQueryExpression_AllExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UStreamMediaSource : UBaseMediaSource {
	FString StreamUrl; // 0x88
};

struct UGizmoLocalFloatParameterSource : UGizmoBaseFloatParameterSource {
	float Value; // 0x48
	FGizmoFloatParameterChange LastChange; // 0x4c
};

struct USaveUserData_C : USaveGame {
	int32_t SurvSkinID; // 0x28
	TArray<int32_t> SurvSkinArray; // 0x30
	int32_t Exp; // 0x40
	TMap<int32_t, int32_t> CharSelectedSkinIds; // 0x48
	TArray<int32_t> ArrayOfSkinsThatPlayerOwn; // 0x98
	int32_t coins; // 0xa8
	int32_t lootbox; // 0xac
	int32_t OpenedLootBoxCount; // 0xb0
	int32_t SelectedBannerID; // 0xb4
	int32_t GLOBAL_XP; // 0xb8
	int32_t MMR_SURV; // 0xbc
	int32_t MMR_KILLER; // 0xc0
	int32_t TagID; // 0xc4
	bool IsNewSkin; // 0xc8
	bool IsNewBanner; // 0xc9
	bool IsNewTag; // 0xca
	bool IsNewAvatar; // 0xcb
	TMap<int32_t, bool> IsSkinCustomNew; // 0xd0
	TArray<int32_t> BannerThatPlayerOwnArr; // 0x120
	TArray<int32_t> TagsThatPlayerOwnArr; // 0x130
	TArray<int32_t> AvatarThatPlayerOwnArr; // 0x140
	TMap<int32_t, bool> IsAvatarCustomNew; // 0x150
	TMap<int32_t, bool> IsBannerCustomNew; // 0x1a0
	TMap<int32_t, bool> IsTagsCustomNew; // 0x1f0
	int32_t AvatarID; // 0x240
	bool UnlockAllSkins; // 0x244
	bool DisableAllSkin; // 0x245
	bool DltSkin; // 0x246
	bool ResetDot; // 0x247
	int32_t Scrap; // 0x248
	int32_t Mmr; // 0x24c
	int32_t MatchesPlayed; // 0x250
};

struct UInputAxisDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputAxisDelegateBinding> InputAxisDelegateBindings; // 0x28
};

struct UDamageTypeMasterBP_C : UDamageType {
	DamageTypeEnum Type; // 0x40
};

struct UEOSCoreLeaderboardsQueryLeaderboardRanks : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct AStunCoin_C : ACoinActor_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
};

struct UAnimCurveCompressionSettings : UObject {
	UAnimCurveCompressionCodec* Codec; // 0x28
};

struct USimpleConstructionScript : UObject {
	TArray<USCS_Node*> RootNodes; // 0x28
	TArray<USCS_Node*> AllNodes; // 0x38
	USCS_Node* DefaultSceneRootNode; // 0x48
};

struct AGameMode : AGameModeBase {
	FName MatchState; // 0x2c0
	char bDelayedStart : 1; // 0x2c8
	int32_t NumSpectators; // 0x2cc
	int32_t NumPlayers; // 0x2d0
	int32_t NumBots; // 0x2d4
	float MinRespawnDelay; // 0x2d8
	int32_t NumTravellingPlayers; // 0x2dc
	ULocalMessage* EngineMessageClass; // 0x2e0
	TArray<APlayerState*> InactivePlayerArray; // 0x2e8
	float InactivePlayerStateLifeSpan; // 0x2f8
	int32_t MaxInactivePlayers; // 0x2fc
	bool bHandleDedicatedServerReplays; // 0x300
};

struct UEnvQueryManager : UAISubsystem {
	TArray<FEnvQueryInstanceCache> InstanceCache; // 0xa8
	TArray<UEnvQueryContext*> LocalContexts; // 0xb8
	TArray<UEnvQueryInstanceBlueprintWrapper*> GCShieldedWrappers; // 0xc8
	float MaxAllowedTestingTime; // 0x12c
	bool bTestQueriesUsingBreadth; // 0x130
	int32_t QueryCountWarningThreshold; // 0x134
	double QueryCountWarningInterval; // 0x138
};

struct UEnvQueryGenerator : UEnvQueryNode {
	FString OptionName; // 0x30
	UEnvQueryItemType* ItemType; // 0x40
	char bAutoSortTests : 1; // 0x48
};

struct UNavMovementComponent : UMovementComponent {
	FNavAgentProperties NavAgentProps; // 0xf0
	float FixedPathBrakingDistance; // 0x120
	char bUpdateNavAgentWithOwnersCollision : 1; // 0x124
	char bUseAccelerationForPaths : 1; // 0x124
	char bUseFixedBrakingDistanceForPaths : 1; // 0x124
	FMovementProperties MovementState; // 0x125
	UObject* PathFollowingComp; // 0x128
};

struct UMaterialBillboardComponent : UPrimitiveComponent {
	TArray<FMaterialSpriteElement> Elements; // 0x440
};

struct UPrimaryAssetLabel : UPrimaryDataAsset {
	FPrimaryAssetRules Rules; // 0x30
	char bLabelAssetsInMyDirectory : 1; // 0x3c
	char bIsRuntimeLabel : 1; // 0x3c
	TArray<TSoftObjectPtr<UObject>> ExplicitAssets; // 0x40
	TArray<TSoftClassPtr<UObject>> ExplicitBlueprints; // 0x50
	FCollectionReference AssetCollection; // 0x60
};

struct UCheckBox : UContentWidget {
	ECheckBoxState CheckedState; // 0x120
	FDelegate CheckedStateDelegate; // 0x124
	FCheckBoxStyle WidgetStyle; // 0x138
	USlateWidgetStyleAsset* Style; // 0x6b8
	USlateBrushAsset* UncheckedImage; // 0x6c0
	USlateBrushAsset* UncheckedHoveredImage; // 0x6c8
	USlateBrushAsset* UncheckedPressedImage; // 0x6d0
	USlateBrushAsset* CheckedImage; // 0x6d8
	USlateBrushAsset* CheckedHoveredImage; // 0x6e0
	USlateBrushAsset* CheckedPressedImage; // 0x6e8
	USlateBrushAsset* UndeterminedImage; // 0x6f0
	USlateBrushAsset* UndeterminedHoveredImage; // 0x6f8
	USlateBrushAsset* UndeterminedPressedImage; // 0x700
	EHorizontalAlignment HorizontalAlignment; // 0x708
	FMargin Padding; // 0x70c
	FSlateColor BorderBackgroundColor; // 0x720
	EButtonClickMethod ClickMethod; // 0x748
	EButtonTouchMethod TouchMethod; // 0x749
	EButtonPressMethod PressMethod; // 0x74a
	bool IsFocusable; // 0x74b
	FMulticastInlineDelegate OnCheckStateChanged; // 0x750
};

struct UMovieSceneSpawnTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
	FGuid ObjectGuid; // 0x88
};

struct UQuitMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct UW_Banner_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ShowHide_Anim; // 0x268
	UImage* Image_Avatar; // 0x270
	UImage* Image_AvatarBG; // 0x278
	UImage* Image_AvatarFrameBG; // 0x280
	UImage* Image_Banner; // 0x288
	URetainerBox* RetainerBox_1; // 0x290
	USizeBox* SizeBox_38; // 0x298
	UTextBlock* TextBlock_Name; // 0x2a0
	UTextBlock* TextBlock_Tag; // 0x2a8
	UVerticalBox* VerticalBox_text; // 0x2b0
	TSoftObjectPtr<UDataTable> DataTableBanner; // 0x2b8
	TSoftObjectPtr<UDataTable> DataTableAvatar; // 0x2e0
	TSoftObjectPtr<UDataTable> DTTags; // 0x308
	int32_t randomnumber; // 0x330
	UObject* Object_Avatar; // 0x338
	UObject* Object_Banner; // 0x340
	UObject* Object_Tag; // 0x348
	UTexture2D* DefaultBanner; // 0x350
};

struct UGameplayTagsList : UObject {
	FString ConfigFileName; // 0x28
	TArray<FGameplayTagTableRow> GameplayTagList; // 0x38
};

struct UDoppelgangerSpell2_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	TArray<ANewAlarmBP_C*> Alarms; // 0xf0
	TArray<AActor*> SpottedSurvs; // 0x100
};

struct UDoppelgangerSpell1_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	USkeletalMesh* DefaultSkeletalMesh; // 0xf0
	USkeletalMesh* DefaultSkeletalMeshFPP; // 0xf8
	UAnimInstance* DefaultAnimClassFPP; // 0x100
	UAnimInstance* DefaultAnimClass; // 0x108
	TArray<UMaterialInterface*> DefaultMaterialsFPP; // 0x110
	TArray<UMaterialInterface*> DefaultMaterials; // 0x120
	FTransform DefaultMeshTransform; // 0x130
	FTransform DefaultMeshTransformFPP; // 0x160
	AActor* GetSurvPawn; // 0x190
};

struct UMovieSceneEntitySystemLinker : UObject {
	FMovieSceneEntitySystemGraph SystemGraph; // 0x238
};

struct UQuietHour_C : UPerkKiller_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x120
	TArray<ANewAlarmBP_C*> Alarms; // 0x128
};

struct AWindDirectionalSource : AInfo {
	UWindDirectionalSourceComponent* Component; // 0x220
};

struct UCurveFloat : UCurveBase {
	FRichCurve FloatCurve; // 0x30
	bool bIsEventCurve; // 0xb0
};

struct UEOSCoreEcomQueryEntitlements : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UTextureRenderTargetVolume : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	int32_t SizeZ; // 0xe8
	FLinearColor ClearColor; // 0xec
	EPixelFormat OverrideFormat; // 0xfc
	char bHDR : 1; // 0xfd
	char bForceLinearGamma : 1; // 0xfd
};

struct UVariant : UObject {
	TArray<FVariantDependency> Dependencies; // 0x28
	FText DisplayText; // 0x38
	TArray<UVariantObjectBinding*> ObjectBindings; // 0x68
	UTexture2D* Thumbnail; // 0x78
};

struct UPrimitiveComponent : USceneComponent {
	float MinDrawDistance; // 0x200
	float LDMaxDrawDistance; // 0x204
	float CachedMaxDrawDistance; // 0x208
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x20c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x20d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x20e
	ELightmapType LightmapType; // 0x20f
	char bUseMaxLODAsImposter : 1; // 0x210
	char bBatchImpostersAsInstances : 1; // 0x210
	char bNeverDistanceCull : 1; // 0x210
	char bAlwaysCreatePhysicsState : 1; // 0x210
	char bGenerateOverlapEvents : 1; // 0x211
	char bMultiBodyOverlap : 1; // 0x211
	char bTraceComplexOnMove : 1; // 0x211
	char bReturnMaterialOnMove : 1; // 0x211
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x211
	char bAllowCullDistanceVolume : 1; // 0x211
	char bHasMotionBlurVelocityMeshes : 1; // 0x211
	char bVisibleInReflectionCaptures : 1; // 0x211
	char bVisibleInRealTimeSkyCaptures : 1; // 0x212
	char bVisibleInRayTracing : 1; // 0x212
	char bRenderInMainPass : 1; // 0x212
	char bRenderInDepthPass : 1; // 0x212
	char bReceivesDecals : 1; // 0x212
	char bOwnerNoSee : 1; // 0x212
	char bOnlyOwnerSee : 1; // 0x212
	char bTreatAsBackgroundForOcclusion : 1; // 0x212
	char bUseAsOccluder : 1; // 0x213
	char bSelectable : 1; // 0x213
	char bForceMipStreaming : 1; // 0x213
	char bHasPerInstanceHitProxies : 1; // 0x213
	char CastShadow : 1; // 0x213
	char bAffectDynamicIndirectLighting : 1; // 0x213
	char bAffectDistanceFieldLighting : 1; // 0x213
	char bCastDynamicShadow : 1; // 0x213
	char bCastStaticShadow : 1; // 0x214
	char bCastVolumetricTranslucentShadow : 1; // 0x214
	char bCastContactShadow : 1; // 0x214
	char bSelfShadowOnly : 1; // 0x214
	char bCastFarShadow : 1; // 0x214
	char bCastInsetShadow : 1; // 0x214
	char bCastCinematicShadow : 1; // 0x214
	char bCastHiddenShadow : 1; // 0x214
	char bCastShadowAsTwoSided : 1; // 0x215
	char bLightAsIfStatic : 1; // 0x215
	char bLightAttachmentsAsGroup : 1; // 0x215
	char bExcludeFromLightAttachmentGroup : 1; // 0x215
	char bReceiveMobileCSMShadows : 1; // 0x215
	char bSingleSampleShadowFromStationaryLights : 1; // 0x215
	char bIgnoreRadialImpulse : 1; // 0x215
	char bIgnoreRadialForce : 1; // 0x215
	char bApplyImpulseOnDamage : 1; // 0x216
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x216
	char bFillCollisionUnderneathForNavmesh : 1; // 0x216
	char AlwaysLoadOnClient : 1; // 0x216
	char AlwaysLoadOnServer : 1; // 0x216
	char bUseEditorCompositing : 1; // 0x216
	char bRenderCustomDepth : 1; // 0x216
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x217
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x219
	FLightingChannels LightingChannels; // 0x21a
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x21b
	int32_t CustomDepthStencilValue; // 0x21c
	FCustomPrimitiveData CustomPrimitiveData; // 0x220
	FCustomPrimitiveData CustomPrimitiveDataInternal; // 0x230
	int32_t TranslucencySortPriority; // 0x248
	int32_t VisibilityId; // 0x24c
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x250
	int8_t VirtualTextureLodBias; // 0x260
	int8_t VirtualTextureCullMips; // 0x261
	int8_t VirtualTextureMinCoverage; // 0x262
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x263
	float LpvBiasMultiplier; // 0x268
	float BoundsScale; // 0x274
	TArray<AActor*> MoveIgnoreActors; // 0x288
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x298
	FBodyInstance BodyInstance; // 0x2b8
	FMulticastSparseDelegate OnComponentHit; // 0x410
	FMulticastSparseDelegate OnComponentBeginOverlap; // 0x411
	FMulticastSparseDelegate OnComponentEndOverlap; // 0x412
	FMulticastSparseDelegate OnComponentWake; // 0x413
	FMulticastSparseDelegate OnComponentSleep; // 0x414
	FMulticastSparseDelegate OnBeginCursorOver; // 0x416
	FMulticastSparseDelegate OnEndCursorOver; // 0x417
	FMulticastSparseDelegate OnClicked; // 0x418
	FMulticastSparseDelegate OnReleased; // 0x419
	FMulticastSparseDelegate OnInputTouchBegin; // 0x41a
	FMulticastSparseDelegate OnInputTouchEnd; // 0x41b
	FMulticastSparseDelegate OnInputTouchEnter; // 0x41c
	FMulticastSparseDelegate OnInputTouchLeave; // 0x41d
	UPrimitiveComponent* LODParentPrimitive; // 0x438
};

struct UMovieSceneCompiledDataManager : UObject {
	TMap<int32_t, FMovieSceneSequenceHierarchy> Hierarchies; // 0xd8
	TMap<int32_t, FMovieSceneEvaluationTemplate> TrackTemplates; // 0x128
	TMap<int32_t, FMovieSceneEvaluationField> TrackTemplateFields; // 0x178
	TMap<int32_t, FMovieSceneEntityComponentField> EntityComponentFields; // 0x1c8
};

struct USubmixEffectTapDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectTapDelaySettings Settings; // 0xa8
};

struct UButtonWidgetStyle : USlateWidgetStyleContainerBase {
	FButtonStyle ButtonStyle; // 0x30
};

struct UNoiseField : UFieldNodeFloat {
	float MinRange; // 0xb0
	float MaxRange; // 0xb4
	FTransform Transform; // 0xc0
};

struct UMaterialExpressionMapARPassthroughCameraUV : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
};

struct UCrawlShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UMaterialExpressionClamp : UMaterialExpression {
	FExpressionInput Input; // 0x40
	FExpressionInput Min; // 0x54
	FExpressionInput Max; // 0x68
	EClampMode ClampMode; // 0x7c
	float MinDefault; // 0x80
	float MaxDefault; // 0x84
};

struct UWidgetAnimationDelegateBinding : UDynamicBlueprintBinding {
	TArray<FBlueprintWidgetAnimationDelegateBinding> WidgetAnimationDelegateBindings; // 0x28
};

struct ULuminRuntimeSettings : UObject {
	FString PackageName; // 0x28
	FString ApplicationDisplayName; // 0x38
	ELuminFrameTimingHint FrameTimingHint; // 0x48
	bool bProtectedContent; // 0x49
	bool bManualCallToAppReady; // 0x4a
	bool bUseMobileRendering; // 0x4b
	bool bUseVulkan; // 0x4c
	FFilePath Certificate; // 0x50
	FDirectoryPath IconModelPath; // 0x60
	FDirectoryPath IconPortalPath; // 0x70
	FLocalizedIconInfos LocalizedIconInfos; // 0x80
	int32_t VersionCode; // 0x90
	int32_t MinimumAPILevel; // 0x94
	TArray<ELuminPrivilege> AppPrivileges; // 0x98
	TArray<FLuminComponentSubElement> ExtraComponentSubElements; // 0xa8
	TArray<FLuminComponentElement> ExtraComponentElements; // 0xb8
	FString SpatializationPlugin; // 0xc8
	FString ReverbPlugin; // 0xd8
	FString OcclusionPlugin; // 0xe8
	int32_t SoundCueCookQualityIndex; // 0xf8
	bool bRemoveDebugInfo; // 0xfc
	FDirectoryPath VulkanValidationLayerLibs; // 0x100
	bool bFrameVignette; // 0x110
	TArray<FLocalizedAppName> LocalizedAppNames; // 0x118
};

struct UAsyncActionLoadPrimaryAsset : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UShapeComponent : UPrimitiveComponent {
	UBodySetup* ShapeBodySetup; // 0x440
	UNavAreaBase* AreaClass; // 0x448
	FColor ShapeColor; // 0x450
	char bDrawOnlyIfSelected : 1; // 0x454
	char bShouldCollideWhenPlacing : 1; // 0x454
	char bDynamicObstacle : 1; // 0x454
};

struct UPoseWatch : UObject {
	UEdGraphNode* Node; // 0x28
	FColor PoseWatchColour; // 0x30
};

struct USmoothSync : UActorComponent {
	float interpolationBackTime; // 0xfc
	ExtrapolationMode ExtrapolationMode; // 0x100
	bool useExtrapolationTimeLimit; // 0x101
	float extrapolationTimeLimit; // 0x104
	bool useExtrapolationDistanceLimit; // 0x108
	float extrapolationDistanceLimit; // 0x10c
	float sendPositionThreshold; // 0x110
	float sendRotationThreshold; // 0x114
	float sendScaleThreshold; // 0x118
	float sendVelocityThreshold; // 0x11c
	float sendAngularVelocityThreshold; // 0x120
	float receivedPositionThreshold; // 0x124
	float receivedRotationThreshold; // 0x128
	float positionSnapThreshold; // 0x12c
	float rotationSnapThreshold; // 0x130
	float scaleSnapThreshold; // 0x134
	float timeSmoothing; // 0x138
	float positionLerpSpeed; // 0x13c
	float rotationLerpSpeed; // 0x140
	float scaleLerpSpeed; // 0x144
	SyncMode syncPosition; // 0x148
	SyncMode syncRotation; // 0x149
	SyncMode syncScale; // 0x14a
	SyncMode syncVelocity; // 0x14b
	SyncMode syncAngularVelocity; // 0x14c
	bool syncMovementMode; // 0x14d
	bool isPositionCompressed; // 0x14e
	bool isRotationCompressed; // 0x14f
	bool isScaleCompressed; // 0x150
	bool isVelocityCompressed; // 0x151
	bool isAngularVelocityCompressed; // 0x152
	float sendRate; // 0x154
	bool isUsingOriginRebasing; // 0x158
	bool alwaysSendOrigin; // 0x159
	USceneComponent* realComponentToSync; // 0x1f8
	float InterpolationTime; // 0x218
	float atRestPositionThreshold; // 0x350
	float atRestRotationThreshold; // 0x354
};

struct UEOSCoreConnectCreateDeviceId : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UTestMovieSceneSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
};

struct UAchievementWriteCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct UGenlockedTimecodeProvider : UTimecodeProvider {
	bool bUseGenlockToCount; // 0x30
};

struct AGeometryCollectionActor : AActor {
	UGeometryCollectionComponent* GeometryCollectionComponent; // 0x220
	UGeometryCollectionDebugDrawComponent* GeometryCollectionDebugDrawComponent; // 0x228
};

struct UDatasmithCineCameraActorTemplate : UDatasmithObjectTemplate {
	FDatasmithCameraLookatTrackingSettingsTemplate LookatTrackingSettings; // 0x30
};

struct UAC_BattlEye_Server_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	UO_BEServer_C* BEServer; // 0xb8
	TMap<int32_t, APC_PropHunt_C*> BEPlayers; // 0xc0
};

struct UClothPhysicalMeshDataBase_Legacy : UObject {
	TArray<FVector> Vertices; // 0x28
	TArray<FVector> Normals; // 0x38
	TArray<uint32_t> Indices; // 0x48
	TArray<float> InverseMasses; // 0x58
	TArray<FClothVertBoneData> BoneData; // 0x68
	int32_t NumFixedVerts; // 0x78
	int32_t MaxBoneWeights; // 0x7c
	TArray<uint32_t> SelfCollisionIndices; // 0x80
};

struct USkeletalMesh : UStreamableRenderAsset {
	USkeleton* Skeleton; // 0x80
	FBoxSphereBounds ImportedBounds; // 0x88
	FBoxSphereBounds ExtendedBounds; // 0xa4
	FVector PositiveBoundsExtension; // 0xc0
	FVector NegativeBoundsExtension; // 0xcc
	TArray<FSkeletalMaterial> Materials; // 0xd8
	TArray<FBoneMirrorInfo> SkelMirrorTable; // 0xe8
	TArray<FSkeletalMeshLODInfo> LODInfo; // 0xf8
	FPerPlatformInt MinLOD; // 0x158
	FPerPlatformBool DisableBelowMinLodStripping; // 0x15c
	EAxis SkelMirrorAxis; // 0x15d
	EAxis SkelMirrorFlipAxis; // 0x15e
	char bUseFullPrecisionUVs : 1; // 0x15f
	char bUseHighPrecisionTangentBasis : 1; // 0x15f
	char bHasBeenSimplified : 1; // 0x15f
	char bHasVertexColors : 1; // 0x15f
	char bEnablePerPolyCollision : 1; // 0x15f
	UBodySetup* BodySetup; // 0x160
	UPhysicsAsset* PhysicsAsset; // 0x168
	UPhysicsAsset* ShadowPhysicsAsset; // 0x170
	TArray<UNodeMappingContainer*> NodeMappingData; // 0x178
	TArray<UMorphTarget*> MorphTargets; // 0x188
	UAnimInstance* PostProcessAnimBlueprint; // 0x310
	TArray<UClothingAssetBase*> MeshClothingAssets; // 0x318
	FSkeletalMeshSamplingInfo SamplingInfo; // 0x328
	TArray<UAssetUserData*> AssetUserData; // 0x358
	TArray<USkeletalMeshSocket*> Sockets; // 0x368
	TArray<FSkinWeightProfileInfo> SkinWeightProfiles; // 0x388
};

struct UImgMediaSource : UBaseMediaSource {
	FFrameRate FrameRateOverride; // 0x88
	FString ProxyOverride; // 0x90
	FDirectoryPath SequencePath; // 0xa0
};

struct USplineMeshComponent : UStaticMeshComponent {
	FSplineMeshParams SplineParams; // 0x4d8
	FVector SplineUpDir; // 0x530
	float SplineBoundaryMin; // 0x53c
	FGuid CachedMeshBodySetupGuid; // 0x540
	UBodySetup* BodySetup; // 0x550
	float SplineBoundaryMax; // 0x558
	char bAllowSplineEditingPerInstance : 1; // 0x55c
	char bSmoothInterpRollScale : 1; // 0x55c
	char bMeshDirty : 1; // 0x55c
	ESplineMeshAxis ForwardAxis; // 0x55d
	float VirtualTextureMainPassMaxDrawDistance; // 0x560
};

struct USkeletalMeshSocket : UObject {
	FName SocketName; // 0x28
	FName BoneName; // 0x30
	FVector RelativeLocation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale; // 0x50
	bool bForceAlwaysAnimated; // 0x5c
};

struct UMaterialExpressionFunctionOutput : UMaterialExpression {
	FName OutputName; // 0x40
	FString Description; // 0x48
	int32_t SortPriority; // 0x58
	FExpressionInput A; // 0x5c
	char bLastPreviewed : 1; // 0x70
	FGuid ID; // 0x74
};

struct ATextRenderActor : AActor {
	UTextRenderComponent* TextRender; // 0x220
};

struct UEditableTextWidgetStyle : USlateWidgetStyleContainerBase {
	FEditableTextStyle EditableTextStyle; // 0x30
};

struct UEOSCoreConnectLinkAccount : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct AHUD_PropHunt_C : AHUD {
	FPointerToUberGraphFrame UberGraphFrame; // 0x310
	USceneComponent* DefaultSceneRoot; // 0x318
	float Timeline_0_Alpha_BD8370D34F8ED99EECACF0A572FB9267; // 0x320
	ETimelineDirection Timeline_0__Direction_BD8370D34F8ED99EECACF0A572FB9267; // 0x324
	UTimelineComponent* Timeline_1; // 0x328
	USurvivalProgressBarWidget_C* SurvivorProgress; // 0x330
	USurvivalSkillCheckWidget_C* SurvivorSkillCheck; // 0x338
	UCoolDownWBP_C* KillerCooldown; // 0x340
	UW_MiniLobby_C* MiniLobby; // 0x348
	UAlarmsCountWBP_C* AlarmWidget; // 0x350
	USurvStatusWBP_C* SurvStatus; // 0x358
	USurvivalInventoryWidget_C* SurvivorInventory; // 0x360
	UCoolDownWBP_C* SurvivorAbility; // 0x368
	UW_GameResult_C* GameResult; // 0x370
	UW_DevLab_C* DevLab; // 0x378
	UInteractableButtonsWidget_C* InteractableButtonSurv; // 0x380
	UFlashWidget_C* KillerFlash; // 0x388
	UAmmoKillerWBP_C* AmmoKiller; // 0x390
	UInteractableButtonsWidget_C* InteractableButtonKiller; // 0x398
	UCrossHairWBP_C* CrosshairKiller; // 0x3a0
	UWaypointWidget_C* WaypointWidget; // 0x3a8
	UKillerMarked_C* KillerMarked; // 0x3b0
	UPlayersScore_Tab_Stats_C* PlayerScore; // 0x3b8
	UChatWindow_C* ChatWindow; // 0x3c0
	UGeneralSettingWBP_C* Settings; // 0x3c8
	UVoiceChatWindow_C* VoiceChat; // 0x3d0
	UPauseMenu_C* PauseMenu; // 0x3d8
	USurvivalEffectsUI_C* SurvEffectsUI; // 0x3e0
	USurvivalStaminaBarWidget_C* SurvStaminaBar; // 0x3e8
	bool bLocked; // 0x3f0
	UWBP_EffectsWindow_C* EffectWindow; // 0x3f8
	USoundChat_C* SoundChat; // 0x400
	UEffectsHUDWidget_C* EffectsHUD; // 0x408
	UWBP_BDRush_Killer_C* EffectBloodLast; // 0x410
	ULobbyEffectsHUD_C* LobbyEffects; // 0x418
	UFartTimer_C* FartTimer; // 0x420
	UW_VictoryScreen_C* VictoryScreen; // 0x428
	UW_LoadingScreen_C* NewVar_1; // 0x430
	UW_LoadingScreen_C* LoadingScreen; // 0x438
	UWBP_Tip_C* WidgetTip; // 0x440
	UWBP_EliminatedScreen_C* WidgetEliminationScreen; // 0x448
	UWB_Spectator_C* Spectator; // 0x450
	UWBP_LastChance_C* LastChanceWidget; // 0x458
	UWBP_HitMark_KillerAlarm_C* Killer_HitmarkAlarmDone; // 0x460
	UWBP_MVPScreen_C* MVPScreen; // 0x468
	UW_MatchCanceled_C* MatchCanceled; // 0x470
	bool Tutorial?; // 0x478
	UW_VictoryScreen_Tutorial_C* VictoryScreenTutorial; // 0x480
	bool IsGameLoading; // 0x488
	UWBP_InGameBannerScreen_C* InGameBannerScreen; // 0x490
	UWBP_IntroUI_C* IntroUI; // 0x498
	FMulticastInlineDelegate IsGameLoaded; // 0x4a0
};

struct UGameplayTagsDeveloperSettings : UDeveloperSettings {
	FString DeveloperConfigName; // 0x38
	FName FavoriteTagSource; // 0x48
};

struct UInterpTrackInstFloatAnimBPParam : UInterpTrackInst {
	UAnimInstance* AnimScriptInstance; // 0x28
	float ResetFloat; // 0x30
};

struct UFontImportOptions : UObject {
	FFontImportOptionsData Data; // 0x28
};

struct UVaRestRequestJSON : UObject {
	FMulticastInlineDelegate OnRequestComplete; // 0x28
	FMulticastInlineDelegate OnRequestFail; // 0x38
	int32_t ResponseSize; // 0x88
	FString ResponseContent; // 0x90
	bool bIsValidJsonResponse; // 0xa0
	UVaRestJsonObject* RequestJsonObj; // 0xb0
	UVaRestJsonObject* ResponseJsonObj; // 0xe8
	UVaRestJsonValue* ResponseJsonValue; // 0xf0
};

struct UWBP_FriendEntry_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Throbber_Anim; // 0x268
	UWidgetAnimation* LeftLobby_Hovered_Anim; // 0x270
	UWidgetAnimation* LeftLobby_Anim; // 0x278
	UWidgetAnimation* RejectedHovered_Anim; // 0x280
	UWidgetAnimation* Rejected_Anim; // 0x288
	UWidgetAnimation* StopWaiting_Anim_Delayed; // 0x290
	UWidgetAnimation* StopWaiting_Anim; // 0x298
	UWidgetAnimation* Hover_Anim_Waiting; // 0x2a0
	UWidgetAnimation* Hover_Anim; // 0x2a8
	UWidgetAnimation* Click_Anim; // 0x2b0
	UButton* Button_FriendList; // 0x2b8
	UButton* Button_FriendList_2; // 0x2c0
	UImage* Image_BG; // 0x2c8
	UImage* Image_ButtonIcon; // 0x2d0
	UImage* Image_FriendHover; // 0x2d8
	UImage* Image_TeamMember; // 0x2e0
	UImage* Image_Throbber; // 0x2e8
	URetainerBox* RetainerBox_1; // 0x2f0
	UScrollBox* ScrollBox_1; // 0x2f8
	UTextBlock* Text_Nickname; // 0x300
	UWBP_MiniFriendEntry_ForList_C* WBP_MiniFriendEntry_ForList; // 0x308
	FSteamFriend SteamStruct; // 0x310
	bool IsSendingRequest; // 0x338
	bool IsUnhovered; // 0x339
	bool IsDelayed; // 0x33a
	FMulticastInlineDelegate onAfterDelay; // 0x340
	bool IsForwardDirection; // 0x350
	FTimerHandle AnimTimer; // 0x358
	bool IsInvitationAccepted; // 0x360
	FTimerHandle WaitingTimer; // 0x368
};

struct AVectorFieldVolume : AActor {
	UVectorFieldComponent* VectorFieldComponent; // 0x220
};

struct UGI_BattlEye_Prophunt_C : UGI_Prophunt_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x8f0
	FString CurrentServerAddress; // 0x8f8
	UO_BEClient_C* BEClient; // 0x908
	bool IsBEInited; // 0x910
};

struct UCapsuleComponent : UShapeComponent {
	float CapsuleHalfHeight; // 0x458
	float CapsuleRadius; // 0x45c
};

struct UARFaceComponent : UARComponent {
	EARFaceTransformMixing TransformSetting; // 0x278
	bool bUpdateVertexNormal; // 0x279
	bool bFaceOutOfScreen; // 0x27a
	FARFaceUpdatePayload ReplicatedPayload; // 0x280
};

struct UEOSCoreLeaderboardsQueryLeaderboardUserScores : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UMovieSceneCapture : UObject {
	FSoftClassPath ImageCaptureProtocolType; // 0x38
	FSoftClassPath AudioCaptureProtocolType; // 0x50
	UMovieSceneImageCaptureProtocolBase* ImageCaptureProtocol; // 0x68
	UMovieSceneAudioCaptureProtocolBase* AudioCaptureProtocol; // 0x70
	FMovieSceneCaptureSettings Settings; // 0x78
	bool bUseSeparateProcess; // 0xe8
	bool bCloseEditorWhenCaptureStarts; // 0xe9
	FString AdditionalCommandLineArguments; // 0xf0
	FString InheritedCommandLineArguments; // 0x100
};

struct AInteractableDoor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USphereComponent* Sphere; // 0x228
	UBoxComponent* GlassBox_Spell; // 0x230
	UArrowComponent* Arrow; // 0x238
	UBoxComponent* GlassBox; // 0x240
	UParticleSystemComponent* Glass; // 0x248
	UStaticMeshComponent* GlassMesh; // 0x250
	UBoxComponent* InteractableBox; // 0x258
	UWidgetComponent* DoorMark; // 0x260
	UStaticMeshComponent* DoorFrame; // 0x268
	USceneComponent* ParticlePositions; // 0x270
	UParticleSystemComponent* hit; // 0x278
	UParticleSystemComponent* Break; // 0x280
	UBoxComponent* CheckKillerBox; // 0x288
	UDestructibleComponent* door_window_DM; // 0x290
	UBoxComponent* Box; // 0x298
	UStaticMeshComponent* StaticMesh; // 0x2a0
	USceneComponent* DefaultSceneRoot; // 0x2a8
	float OpeningTimeline_DoorOffset_E85DBBC74771E564B66C5393B7E80CEA; // 0x2b0
	float OpeningTimeline_Alpha_E85DBBC74771E564B66C5393B7E80CEA; // 0x2b4
	ETimelineDirection OpeningTimeline__Direction_E85DBBC74771E564B66C5393B7E80CEA; // 0x2b8
	UTimelineComponent* OpeningTimeline; // 0x2c0
	float ClosingTimeline_DoorOffset_C50BA6A345065B62E7B28CA2A9430BC0; // 0x2c8
	float ClosingTimeline_Alpha_C50BA6A345065B62E7B28CA2A9430BC0; // 0x2cc
	ETimelineDirection ClosingTimeline__Direction_C50BA6A345065B62E7B28CA2A9430BC0; // 0x2d0
	UTimelineComponent* ClosingTimeline; // 0x2d8
	bool Closed?; // 0x2e0
	FRotator Rotation; // 0x2e4
	int32_t DoorHP; // 0x2f0
	bool DoorDestroyed?; // 0x2f4
	bool EndAnim?; // 0x2f5
	ASurvivorMasterBP_C* Surv; // 0x2f8
	FRotator RotationTemp; // 0x300
	bool NoChangeDamagedMesh?; // 0x30c
	bool InvertRotation?; // 0x30d
	FVector SurvLocation; // 0x310
	float Impulse Strength; // 0x31c
	bool Glass?; // 0x320
	int32_t CountGlass; // 0x324
	UFMODEvent* Open; // 0x328
	UFMODEvent* Close; // 0x330
	bool TempBool; // 0x338
	UStaticMesh* DamagedMesh; // 0x340
	UStaticMesh* NormalMesh; // 0x348
	bool KillerStun?; // 0x350
	bool IsDelayed; // 0x351
	ASurvivorMasterBP_C* OverlappedSurv; // 0x358
	UStaticMesh* DamegedGlass; // 0x360
	FTimerHandle MaterialEffectEvent; // 0x368
	TArray<UMaterialInstanceDynamic*> Materials; // 0x370
	float EffectTime; // 0x380
	float EffectDuration; // 0x384
	float Float1; // 0x388
};

struct UMovieSceneNiagaraVectorParameterTrack : UMovieSceneNiagaraParameterTrack {
	int32_t ChannelsUsed; // 0xb0
};

struct UChildConnection : UNetConnection {
	UNetConnection* Parent; // 0x1af0
};

struct UParticleModuleLocationPrimitiveBase : UParticleModuleLocationBase {
	char Positive_X : 1; // 0x30
	char Positive_Y : 1; // 0x30
	char Positive_Z : 1; // 0x30
	char Negative_X : 1; // 0x30
	char Negative_Y : 1; // 0x30
	char Negative_Z : 1; // 0x30
	char SurfaceOnly : 1; // 0x30
	char Velocity : 1; // 0x30
	FRawDistributionFloat VelocityScale; // 0x38
	FRawDistributionVector StartLocation; // 0x68
};

struct UObjectReferencer : UObject {
	TArray<UObject*> ReferencedObjects; // 0x28
};

struct USplineComponent : UPrimitiveComponent {
	FSplineCurves SplineCurves; // 0x440
	FInterpCurveVector SplineInfo; // 0x4b0
	FInterpCurveQuat SplineRotInfo; // 0x4c8
	FInterpCurveVector SplineScaleInfo; // 0x4e0
	FInterpCurveFloat SplineReparamTable; // 0x4f8
	bool bAllowSplineEditingPerInstance; // 0x510
	int32_t ReparamStepsPerSegment; // 0x514
	float Duration; // 0x518
	bool bStationaryEndpoints; // 0x51c
	bool bSplineHasBeenEdited; // 0x51d
	bool bModifiedByConstructionScript; // 0x51e
	bool bInputSplinePointsToConstructionScript; // 0x51f
	bool bDrawDebug; // 0x520
	bool bClosedLoop; // 0x521
	bool bLoopPositionOverride; // 0x522
	float LoopPosition; // 0x524
	FVector DefaultUpVector; // 0x528
};

struct UAnimationDataSourceRegistry : UObject {
	TMap<FName, TWeakObjectPtr<UObject>> DataSources; // 0x28
};

struct UInteractableButtonsWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UHorizontalBox* ButtonsHorizontalBox; // 0x268
	UCanvasPanel* CanvasPanel_1; // 0x270
	TArray<UInteractableButtonsComponentWidget_C*> InteractableButtons; // 0x278
	int32_t DeleteIndex; // 0x288
	bool Found?; // 0x28c
	ASurvivorMasterBP_C* Player; // 0x290
	TArray<AActor*> Actors; // 0x298
	TArray<FString> ActorsText; // 0x2a8
	bool ActorFound?; // 0x2b8
	int32_t DeleteActorIndex; // 0x2bc
	bool PicklockFound?; // 0x2c0
	TArray<UInteractableButtonsComponentWidget_C*> CheckInteractableButtons; // 0x2c8
};

struct UParticleModuleKillHeight : UParticleModuleKillBase {
	FRawDistributionFloat Height; // 0x30
	char bAbsolute : 1; // 0x60
	char bFloor : 1; // 0x60
	char bApplyPSysScale : 1; // 0x60
};

struct ABanshee_Tutorial_C : ABanshee_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x13e8
	UW_Tutorial_Quest_C* QuestWidget; // 0x13f0
};

struct UPointLightComponent : ULocalLightComponent {
	char bUseInverseSquaredFalloff : 1; // 0x340
	float LightFalloffExponent; // 0x344
	float SourceRadius; // 0x348
	float SoftSourceRadius; // 0x34c
	float SourceLength; // 0x350
};

struct UARTrackedPose : UARTrackedGeometry {
	FARPose3D TrackedPose; // 0xf8
};

struct UNightmare_C : UPerkKiller_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x120
	TArray<ANewAlarmBP_C*> Alarms; // 0x128
	TArray<int32_t> RandomAlarmIndex; // 0x138
	TArray<ANewAlarmBP_C*> RandomAlarmsRef; // 0x148
};

struct UParticleModule : UObject {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct AEmitterCameraLensEffectBase : AEmitter {
	UParticleSystem* PS_CameraEffect; // 0x270
	UParticleSystem* PS_CameraEffectNonExtremeContent; // 0x278
	APlayerCameraManager* BaseCamera; // 0x280
	FTransform RelativeTransform; // 0x290
	float BaseFOV; // 0x2c0
	char bAllowMultipleInstances : 1; // 0x2c4
	char bResetWhenRetriggered : 1; // 0x2c4
	TArray<AEmitterCameraLensEffectBase*> EmittersToTreatAsSame; // 0x2c8
	float DistFromCamera; // 0x2d8
};

struct UW_Lobby_ButtonChangeCharacter_C : UUserWidget {
	UTextBlock* ButtonTextBlock; // 0x260
	UHorizontalBox* HorizontalBox_2; // 0x268
	UImage* Image_152; // 0x270
	UTextBlock* Text; // 0x278
	UTextBlock* Text_2; // 0x280
};

struct UProceduralFoliageSpawner : UObject {
	int32_t RandomSeed; // 0x28
	float TileSize; // 0x2c
	int32_t NumUniqueTiles; // 0x30
	float MinimumQuadTreeSize; // 0x34
	TArray<FFoliageTypeObject> FoliageTypes; // 0x40
};

struct USingleClickInputBehavior : UAnyButtonInputBehavior {
	bool HitTestOnRelease; // 0xc0
};

struct UWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UEnvQueryTest_GameplayTags : UEnvQueryTest {
	FGameplayTagQuery TagQueryToMatch; // 0x1f8
	bool bUpdatedToUseQuery; // 0x240
	EGameplayContainerMatchType TagsToMatch; // 0x241
	FGameplayTagContainer GameplayTags; // 0x248
};

struct UBTTask_PlaySound : UBTTaskNode {
	USoundCue* SoundToPlay; // 0x70
};

struct UChaosDestructionListener : USceneComponent {
	char bIsCollisionEventListeningEnabled : 1; // 0x1f8
	char bIsBreakingEventListeningEnabled : 1; // 0x1f8
	char bIsTrailingEventListeningEnabled : 1; // 0x1f8
	FChaosCollisionEventRequestSettings CollisionEventRequestSettings; // 0x1fc
	FChaosBreakingEventRequestSettings BreakingEventRequestSettings; // 0x214
	FChaosTrailingEventRequestSettings TrailingEventRequestSettings; // 0x22c
	TSet<AChaosSolverActor*> ChaosSolverActors; // 0x248
	TSet<AGeometryCollectionActor*> GeometryCollectionActors; // 0x298
	FMulticastInlineDelegate OnCollisionEvents; // 0x2e8
	FMulticastInlineDelegate OnBreakingEvents; // 0x2f8
	FMulticastInlineDelegate OnTrailingEvents; // 0x308
};

struct ABandwidthTestActor : AActor {
	FBandwidthTestGenerator BandwidthGenerator; // 0x220
};

struct URabbitMaxWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UDeadMansChest_C : UPerkKiller_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x120
	TArray<ALootBox_C*> LootboxArray; // 0x128
};

struct UMaterialExpressionBumpOffset : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Height; // 0x54
	FExpressionInput HeightRatioInput; // 0x68
	float HeightRatio; // 0x7c
	float ReferencePlane; // 0x80
	uint32_t ConstCoordinate; // 0x84
};

struct UTreeView : UListView {
	FDelegate BP_OnGetItemChildren; // 0x378
	FMulticastInlineDelegate BP_OnItemExpansionChanged; // 0x388
};

struct USpell_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	float Cooldown; // 0xb8
	bool Usable; // 0xbc
	FString Name; // 0xc0
	float CurrentCooldown; // 0xd0
};

struct USubmixEffectReverbPreset : USoundEffectSubmixPreset {
	FSubmixEffectReverbSettings Settings; // 0xd0
};

struct USafeZone : UContentWidget {
	bool PadLeft; // 0x120
	bool PadRight; // 0x121
	bool PadTop; // 0x122
	bool PadBottom; // 0x123
};

struct UWidgetComponent : UMeshComponent {
	EWidgetSpace Space; // 0x468
	EWidgetTimingPolicy TimingPolicy; // 0x469
	UUserWidget* WidgetClass; // 0x470
	FIntPoint DrawSize; // 0x478
	bool bManuallyRedraw; // 0x480
	bool bRedrawRequested; // 0x481
	float RedrawTime; // 0x484
	FIntPoint CurrentDrawSize; // 0x490
	bool bDrawAtDesiredSize; // 0x498
	FVector2D Pivot; // 0x49c
	bool bReceiveHardwareInput; // 0x4a4
	bool bWindowFocusable; // 0x4a5
	EWindowVisibility WindowVisibility; // 0x4a6
	bool bApplyGammaCorrection; // 0x4a7
	ULocalPlayer* OwnerPlayer; // 0x4a8
	FLinearColor BackgroundColor; // 0x4b0
	FLinearColor TintColorAndOpacity; // 0x4c0
	float OpacityFromTexture; // 0x4d0
	EWidgetBlendMode BlendMode; // 0x4d4
	bool bIsTwoSided; // 0x4d5
	bool TickWhenOffscreen; // 0x4d6
	UBodySetup* BodySetup; // 0x4d8
	UMaterialInterface* TranslucentMaterial; // 0x4e0
	UMaterialInterface* TranslucentMaterial_OneSided; // 0x4e8
	UMaterialInterface* OpaqueMaterial; // 0x4f0
	UMaterialInterface* OpaqueMaterial_OneSided; // 0x4f8
	UMaterialInterface* MaskedMaterial; // 0x500
	UMaterialInterface* MaskedMaterial_OneSided; // 0x508
	UTextureRenderTarget2D* RenderTarget; // 0x510
	UMaterialInstanceDynamic* MaterialInstance; // 0x518
	bool bAddedToScreen; // 0x520
	bool bEditTimeUsable; // 0x521
	FName SharedLayerName; // 0x524
	int32_t LayerZOrder; // 0x52c
	EWidgetGeometryMode GeometryMode; // 0x530
	float CylinderArcAngle; // 0x534
	ETickMode TickMode; // 0x538
	UUserWidget* Widget; // 0x560
};

struct UBlueprint : UBlueprintCore {
	UObject* ParentClass; // 0x50
	EBlueprintType BlueprintType; // 0x58
	char bRecompileOnLoad : 1; // 0x59
	char bHasBeenRegenerated : 1; // 0x59
	char bIsRegeneratingOnLoad : 1; // 0x59
	int32_t BlueprintSystemVersion; // 0x5c
	USimpleConstructionScript* SimpleConstructionScript; // 0x60
	TArray<UActorComponent*> ComponentTemplates; // 0x68
	TArray<UTimelineTemplate*> Timelines; // 0x78
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x88
	UInheritableComponentHandler* InheritableComponentHandler; // 0x98
};

struct UWBP_EffectsWindow_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Image_50; // 0x268
	UImage* Image_145; // 0x270
	UVerticalBox* VerticalBox_84; // 0x278
};

struct UParticleModuleVelocityCone : UParticleModuleVelocityBase {
	FRawDistributionFloat Angle; // 0x38
	FRawDistributionFloat Velocity; // 0x68
	FVector Direction; // 0x98
};

struct UNiagaraDataInterfaceCamera : UNiagaraDataInterface {
	int32_t PlayerControllerIndex; // 0x38
	bool bRequireCurrentFrameData; // 0x3c
};

struct UChaosGameplayEventDispatcher : UChaosEventListenerComponent {
	TMap<UPrimitiveComponent*, FChaosHandlerSet> CollisionEventRegistrations; // 0x1c8
	TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper> BreakEventRegistrations; // 0x218
};

struct UBTDecorator_IsAtLocation : UBTDecorator_BlackboardBase {
	float AcceptableRadius; // 0x90
	FAIDataProviderFloatValue ParametrizedAcceptableRadius; // 0x98
	FAIDistanceType GeometricDistanceType; // 0xd0
	char bUseParametrizedRadius : 1; // 0xd4
	char bUseNavAgentGoalLocation : 1; // 0xd4
	char bPathFindingBasedTest : 1; // 0xd4
};

struct UMeshComponent : UPrimitiveComponent {
	TArray<UMaterialInterface*> OverrideMaterials; // 0x440
	char bEnableMaterialParameterCaching : 1; // 0x460
};

struct UEOSCoreSessionsUpdateSession : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UGeometryCollectionCache : UObject {
	FRecordedTransformTrack RecordedData; // 0x28
	UGeometryCollection* SupportedCollection; // 0x38
	FGuid CompatibleCollectionState; // 0x40
};

struct UNiagaraComponent : UFXSystemComponent {
	UNiagaraSystem* Asset; // 0x440
	ENiagaraTickBehavior TickBehavior; // 0x448
	FNiagaraUserRedirectionParameterStore OverrideParameters; // 0x450
	char bForceSolo : 1; // 0x518
	char bEnableGpuComputeDebug : 1; // 0x518
	char bAutoDestroy : 1; // 0x544
	char bRenderingEnabled : 1; // 0x544
	char bAutoManageAttachment : 1; // 0x544
	char bAutoAttachWeldSimulatedBodies : 1; // 0x544
	float MaxTimeBeforeForceUpdateTransform; // 0x548
	TArray<FNiagaraMaterialOverride> EmitterMaterials; // 0x550
	FMulticastInlineDelegate OnSystemFinished; // 0x568
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x578
	FName AutoAttachSocketName; // 0x580
	EAttachmentRule AutoAttachLocationRule; // 0x588
	EAttachmentRule AutoAttachRotationRule; // 0x589
	EAttachmentRule AutoAttachScaleRule; // 0x58a
};

struct APC_PropnightMainMenu : APlayerController {
	FString CBuildID; // 0x5b0
};

struct AGeometryCacheActor : AActor {
	UGeometryCacheComponent* GeometryCacheComponent; // 0x220
};

struct AGranny_C : AKillerMasterBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1318
	USkeletalMeshComponent* FPPSMInvis; // 0x1320
	USkeletalMeshComponent* MeshInvis; // 0x1328
	UAstral_C* Astral; // 0x1330
	USkeletalMeshComponent* SkeletalMesh; // 0x1338
	UMineSpell_C* MineSpell; // 0x1340
	UFMODAudioComponent* FMODAudio2_1; // 0x1348
	UKnifeShoot_C* KnifeShoot; // 0x1350
	UGrannyAstral_C* GrannyAstral; // 0x1358
	float Timeline_6_0_NewTrack_0_8F17A98B4A22CE5C14557F88A7B533A0; // 0x1360
	ETimelineDirection Timeline_6_0__Direction_8F17A98B4A22CE5C14557F88A7B533A0; // 0x1364
	UTimelineComponent* Timeline_6_1; // 0x1368
	float AstralTimeline_Alpha_5454405F4AD75BD4D8210CA26B2BE808; // 0x1370
	ETimelineDirection AstralTimeline__Direction_5454405F4AD75BD4D8210CA26B2BE808; // 0x1374
	UTimelineComponent* AstralTimeline; // 0x1378
	bool RMB; // 0x1380
	bool AstralBuild; // 0x1381
	bool Move?; // 0x1382
	UMaterialInstanceDynamic* AstralMaterial; // 0x1388
	bool bKSS; // 0x1390
};

struct UNiagaraDataInterfaceLandscape : UNiagaraDataInterface {
	AActor* SourceLandscape; // 0x38
};

struct UGameplayTasksComponent : UActorComponent {
	char bIsNetDirty : 1; // 0xbc
	TArray<UGameplayTask*> SimulatedTasks; // 0xc0
	TArray<UGameplayTask*> TaskPriorityQueue; // 0xd0
	TArray<UGameplayTask*> TickingTasks; // 0xf0
	TArray<UGameplayTask*> KnownTasks; // 0x100
	FMulticastInlineDelegate OnClaimedResourcesChange; // 0x110
};

struct UMovieSceneSequencePlayer : UObject {
	FMulticastInlineDelegate OnPlay; // 0x410
	FMulticastInlineDelegate OnPlayReverse; // 0x420
	FMulticastInlineDelegate OnStop; // 0x430
	FMulticastInlineDelegate OnPause; // 0x440
	FMulticastInlineDelegate OnFinished; // 0x450
	EMovieScenePlayerStatus Status; // 0x460
	char bReversePlayback : 1; // 0x464
	UMovieSceneSequence* Sequence; // 0x468
	FFrameNumber StartTime; // 0x470
	int32_t DurationFrames; // 0x474
	float DurationSubFrames; // 0x478
	int32_t CurrentNumLoops; // 0x47c
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x480
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x498
	FMovieSceneSequenceReplProperties NetSyncProps; // 0x5e8
	TScriptInterface<IMovieScenePlaybackClient> PlaybackClient; // 0x5f8
	UMovieSceneSequenceTickManager* TickManager; // 0x608
};

struct UTextLayoutWidget : UWidget {
	FShapedTextOptions ShapedTextOptions; // 0x108
	ETextJustify Justification; // 0x10b
	ETextWrappingPolicy WrappingPolicy; // 0x10c
	char AutoWrapText : 1; // 0x10d
	float WrapTextAt; // 0x110
	FMargin Margin; // 0x114
	float LineHeightPercentage; // 0x124
};

struct UWB_KeyBindings_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_DefaultCfg; // 0x268
	UProgressBar* ProgressBar_109; // 0x270
	UScrollBox* ScrollBox_Main; // 0x278
	UTextBlock* TextBlock_6; // 0x280
	TArray<FName> Array_Movement; // 0x288
	TArray<FName> Array_Surv; // 0x298
	TArray<FName> Array_Killers; // 0x2a8
	TArray<FName> Array_Spectator; // 0x2b8
	TArray<FName> Array_Commons; // 0x2c8
	FTransCfgInput_ACTION DefaultCfgActionKeys; // 0x2d8
	FTransCfgInput_AXIS DefaultCfgAxisKeys; // 0x2e8
	TArray<FInputActionKeyMapping> Jump; // 0x2f8
	UWB_BindOverlayHeader_C* W_MovementHeader; // 0x308
	UMouseSensivity_C* W_MouseSens; // 0x310
	float CounterBackspace; // 0x318
	FTimerHandle TimerHandle; // 0x320
	bool isCounterFull?; // 0x328
	UWidget* FocusHovered; // 0x330
	FMulticastInlineDelegate BlockedBind; // 0x338
	TMap<FName, FText> Array_Surv+Killer_MapKeys; // 0x348
};

struct USoundSubmixWithParentBase : USoundSubmixBase {
	USoundSubmixBase* ParentSubmix; // 0x38
};

struct UMaterialExpressionSquareRoot : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UCompositeDataTable : UDataTable {
	TArray<UDataTable*> ParentTables; // 0xb0
	TArray<UDataTable*> OldParentTables; // 0xc0
};

struct UMaterialExpressionFresnel : UMaterialExpression {
	FExpressionInput ExponentIn; // 0x40
	float Exponent; // 0x54
	FExpressionInput BaseReflectFractionIn; // 0x58
	float BaseReflectFraction; // 0x6c
	FExpressionInput Normal; // 0x70
};

struct UFlashWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FadeOut; // 0x268
	UImage* FlashImage; // 0x270
	UImage* SceneTexture; // 0x278
};

struct UMaterialExpressionParameter : UMaterialExpression {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
};

struct AMine_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UFMODAudioComponent* FmodAudio; // 0x228
	UFMODAudioComponent* Spawn; // 0x230
	UStaticMeshComponent* StaticMesh; // 0x238
	UBoxComponent* Box; // 0x240
	UStaticMeshComponent* Mine; // 0x248
	USceneComponent* DefaultSceneRoot; // 0x250
	float ShootDelay_Lerp_D4090CCF4B323182DE8FF4B79A93D459; // 0x258
	ETimelineDirection ShootDelay__Direction_D4090CCF4B323182DE8FF4B79A93D459; // 0x25c
	UTimelineComponent* ShootDelay; // 0x260
	TArray<ASurvivorMasterBP_C*> Survs; // 0x268
	TArray<ASurvivorMasterBP_C*> TargetSurvs; // 0x278
	bool Block?; // 0x288
	ASurvivorMasterBP_C* Target; // 0x290
	AKillerMasterBP_C* Killer; // 0x298
	float LocalZ; // 0x2a0
	float EaseAlpha; // 0x2a4
	bool EaseUp; // 0x2a8
	TArray<AActor*> Overlapping Actors; // 0x2b0
	float TransitionTime; // 0x2c0
	float TurnOnDuration; // 0x2c4
	float ErodeSubtractDef; // 0x2c8
	float TurnOffDuration; // 0x2cc
	UMaterialInstanceDynamic* matRef; // 0x2d0
	float Float1; // 0x2d8
	bool TurnOff; // 0x2dc
	bool TurnOn; // 0x2dd
};

struct UAISubsystem : UObject {
	UAISystem* AISystem; // 0x30
};

struct URestrictedGameplayTagsList : UObject {
	FString ConfigFileName; // 0x28
	TArray<FRestrictedGameplayTagTableRow> RestrictedGameplayTagList; // 0x38
};

struct UMovieSceneNiagaraSystemSpawnSection : UMovieSceneSection {
	ENiagaraSystemSpawnSectionStartBehavior SectionStartBehavior; // 0xe8
	ENiagaraSystemSpawnSectionEvaluateBehavior SectionEvaluateBehavior; // 0xec
	ENiagaraSystemSpawnSectionEndBehavior SectionEndBehavior; // 0xf0
	ENiagaraAgeUpdateMode AgeUpdateMode; // 0xf4
};

struct UBookMark : UBookmarkBase {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	TArray<FString> HiddenLevels; // 0x40
};

struct UFixedFrameRateCustomTimeStep : UEngineCustomTimeStep {
	FFrameRate FixedFrameRate; // 0x28
};

struct UMovieSceneNiagaraTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UMaterialExpressionNormalize : UMaterialExpression {
	FExpressionInput VectorInput; // 0x40
};

struct UMovieSceneSkeletalAnimationSection : UMovieSceneSection {
	FMovieSceneSkeletalAnimationParams Params; // 0xe8
	UAnimSequence* AnimSequence; // 0x1c0
	UAnimSequenceBase* Animation; // 0x1c8
	float StartOffset; // 0x1d0
	float EndOffset; // 0x1d4
	float PlayRate; // 0x1d8
	char bReverse : 1; // 0x1dc
	FName SlotName; // 0x1e0
	FVector StartLocationOffset; // 0x1e8
	FRotator StartRotationOffset; // 0x1f4
	bool bMatchWithPrevious; // 0x200
	FName MatchedBoneName; // 0x204
	FVector MatchedLocationOffset; // 0x20c
	FRotator MatchedRotationOffset; // 0x218
	bool bMatchTranslation; // 0x224
	bool bMatchIncludeZHeight; // 0x225
	bool bMatchRotationYaw; // 0x226
	bool bMatchRotationPitch; // 0x227
	bool bMatchRotationRoll; // 0x228
};

struct UCrossHairWBP_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* HitAnim; // 0x268
	UWidgetAnimation* ToBigCross; // 0x270
	UCanvasPanel* CanvasPanel_1; // 0x278
	UImage* CrossHair; // 0x280
	UImage* CrossHair_3; // 0x288
	UImage* CrossHair_4; // 0x290
	UImage* CrossHair_5; // 0x298
	UImage* CrossHair_6; // 0x2a0
	UImage* Crosshair_Hit; // 0x2a8
	UImage* Crosshair_Hit_2; // 0x2b0
	UImage* Crosshair_Hit_3; // 0x2b8
	UImage* Crosshair_Hit_4; // 0x2c0
	UImage* Crosshair_Hit_5; // 0x2c8
	UImage* Image_80; // 0x2d0
	bool Hitted?; // 0x2d8
	float Time; // 0x2dc
	AKillerMasterBP_C* KillerRef; // 0x2e0
	float Time_Attak; // 0x2e8
	bool Attack?; // 0x2ec
};

struct UMaterialExpressionBlackBody : UMaterialExpression {
	FExpressionInput Temp; // 0x40
};

struct UTimeSynchronizableMediaSource : UBaseMediaSource {
	bool bUseTimeSynchronization; // 0x88
	int32_t FrameDelay; // 0x8c
	double TimeDelay; // 0x90
};

struct UGridSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
	int32_t Row; // 0x4c
	int32_t RowSpan; // 0x50
	int32_t Column; // 0x54
	int32_t ColumnSpan; // 0x58
	int32_t Layer; // 0x5c
	FVector2D Nudge; // 0x60
};

struct UDatasmithLightComponentTemplate : UDatasmithObjectTemplate {
	char bVisible : 1; // 0x30
	char CastShadows : 1; // 0x34
	char bUseTemperature : 1; // 0x34
	char bUseIESBrightness : 1; // 0x34
	float Intensity; // 0x38
	float Temperature; // 0x3c
	float IESBrightnessScale; // 0x40
	FLinearColor LightColor; // 0x44
	UMaterialInterface* LightFunctionMaterial; // 0x58
	UTextureLightProfile* IESTexture; // 0x60
};

struct UNamedInterfaces : UObject {
	TArray<FNamedInterface> NamedInterfaces; // 0x28
	TArray<FNamedInterfaceDef> NamedInterfaceDefs; // 0x38
};

struct UEOSCoreConnectQueryProductUserIdMappings : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UShoot_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	AKillerMasterBP_C* Killer; // 0xb8
	bool CD; // 0xc0
	int32_t Ammo; // 0xc4
	bool NewVar_1; // 0xc8
	float DeltaSec; // 0xcc
	bool FIRE; // 0xd0
	bool AimRDY; // 0xd1
	float timeFire; // 0xd4
	FRotator targetRotat; // 0xd8
	float InterpSpeed; // 0xe4
	int32_t Damage; // 0xe8
	float Radius; // 0xec
};

struct UMovieSceneEventTriggerSection : UMovieSceneEventSectionBase {
	FMovieSceneEventChannel EventChannel; // 0xf0
};

struct USoundNodeSwitch : USoundNode {
	FName IntParameterName; // 0x48
};

struct ULandscapeGrassType : UObject {
	TArray<FGrassVariety> GrassVarieties; // 0x28
	char bEnableDensityScaling : 1; // 0x38
	UStaticMesh* GrassMesh; // 0x40
	float GrassDensity; // 0x48
	float PlacementJitter; // 0x4c
	int32_t StartCullDistance; // 0x50
	int32_t EndCullDistance; // 0x54
	bool RandomRotation; // 0x58
	bool AlignToSurface; // 0x59
};

struct APartyBeaconHost : AOnlineBeaconHostObject {
	UPartyBeaconState* State; // 0x248
	bool bLogoutOnSessionTimeout; // 0x2b0
	float SessionTimeoutSecs; // 0x2b4
	float TravelSessionTimeoutSecs; // 0x2b8
};

struct ACineCameraActor : ACameraActor {
	FCameraLookatTrackingSettings LookatTrackingSettings; // 0x7a0
};

struct UInteractiveToolsContext : UObject {
	UInputRouter* InputRouter; // 0x58
	UInteractiveToolManager* ToolManager; // 0x60
	UInteractiveGizmoManager* GizmoManager; // 0x68
	TSoftClassPtr<UObject> ToolManagerClass; // 0x70
};

struct USurvivalEffectsUI_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* StartFadeOut; // 0x268
	UWidgetAnimation* StartFadeIn; // 0x270
	UWidgetAnimation* HitAnim; // 0x278
	UImage* Bleeding; // 0x280
	UImage* Fade; // 0x288
	UImage* hit; // 0x290
	bool Bleeding?; // 0x298
	FLinearColor Bleeding1; // 0x29c
	FLinearColor Bleeding2; // 0x2ac
	bool change?; // 0x2bc
	FLinearColor Normal; // 0x2c0
	bool Faded?; // 0x2d0
};

struct UWBP_SoundChatMiniCooldDown_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* CD_Anim; // 0x268
	float CoolDownTime; // 0x270
};

struct UFieldSystemMetaDataProcessingResolution : UFieldSystemMetaData {
	EFieldResolutionType ResolutionType; // 0xb0
};

struct UTouchInterface : UObject {
	TArray<FTouchInputControl> Controls; // 0x28
	float ActiveOpacity; // 0x38
	float InactiveOpacity; // 0x3c
	float TimeUntilDeactive; // 0x40
	float TimeUntilReset; // 0x44
	float ActivationDelay; // 0x48
	bool bPreventRecenter; // 0x4c
	float StartupDelay; // 0x50
};

struct UMaterialFunction : UMaterialFunctionInterface {
	FString Description; // 0x40
	char bExposeToLibrary : 1; // 0x50
	char bPrefixParameterNames : 1; // 0x50
};

struct UMaterialParameterCollection : UObject {
	FGuid StateId; // 0x28
	TArray<FCollectionScalarParameter> ScalarParameters; // 0x38
	TArray<FCollectionVectorParameter> VectorParameters; // 0x48
};

struct UToyBomb_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	bool BAnim; // 0xf0
};

struct URadialForceComponent : USceneComponent {
	float Radius; // 0x1f8
	ERadialImpulseFalloff Falloff; // 0x1fc
	float ImpulseStrength; // 0x200
	char bImpulseVelChange : 1; // 0x204
	char bIgnoreOwningActor : 1; // 0x204
	float ForceStrength; // 0x208
	float DestructibleDamage; // 0x20c
	TArray<EObjectTypeQuery> ObjectTypesToAffect; // 0x210
};

struct UObservation_C : UPerkKiller_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x120
};

struct UBP_ItemsManager_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	TArray<ABP_ItemSpawnPoint_C*> SpawnPoints; // 0xb8
	TMap<AItemsBP_C*, float> SupportItems; // 0xc8
	TMap<AItemsBP_C*, float> ToolItems; // 0x118
	TArray<FString> SupportItemNames; // 0x168
	TArray<FString> ToolItemNames; // 0x178
	TArray<FS_SpawnItemChanceRange> SupportItemsV2; // 0x188
	TArray<FS_SpawnItemChanceRange> ToolItemsV2; // 0x198
	float Temp; // 0x1a8
};

struct UMaterialExpressionLandscapeLayerWeight : UMaterialExpression {
	FExpressionInput Base; // 0x40
	FExpressionInput Layer; // 0x54
	FName ParameterName; // 0x68
	float PreviewWeight; // 0x70
	FVector ConstBase; // 0x74
	FGuid ExpressionGUID; // 0x80
};

struct ALight : AActor {
	ULightComponent* LightComponent; // 0x220
	char bEnabled : 1; // 0x228
};

struct UPaperSpriteComponent : UMeshComponent {
	UPaperSprite* SourceSprite; // 0x468
	UMaterialInterface* MaterialOverride; // 0x470
	FLinearColor SpriteColor; // 0x478
};

struct UPendingNetGame : UObject {
	UNetDriver* NetDriver; // 0x30
	UDemoNetDriver* DemoNetDriver; // 0x38
};

struct UFXSystemAsset : UObject {
	uint32_t MaxPoolSize; // 0x28
	uint32_t PoolPrimeSize; // 0x2c
};

struct UDynamicEntryBox : UDynamicEntryBoxBase {
	UUserWidget* EntryWidgetClass; // 0x1d8
};

struct UMovieSceneActorReferenceSection : UMovieSceneSection {
	FMovieSceneActorReferenceData ActorReferenceData; // 0xe8
	FIntegralCurve ActorGuidIndexCurve; // 0x198
	TArray<FString> ActorGuidStrings; // 0x218
};

struct ULandscapeSplineControlPoint : UObject {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	float Width; // 0x40
	float LayerWidthRatio; // 0x44
	float SideFalloff; // 0x48
	float LeftSideFalloffFactor; // 0x4c
	float RightSideFalloffFactor; // 0x50
	float LeftSideLayerFalloffFactor; // 0x54
	float RightSideLayerFalloffFactor; // 0x58
	float EndFalloff; // 0x5c
	TArray<FLandscapeSplineConnection> ConnectedSegments; // 0x60
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	UControlPointMeshComponent* LocalMeshComponent; // 0xa0
};

struct UInAppPurchaseRestoreCallbackProxy : UObject {
	FMulticastInlineDelegate onSuccess; // 0x28
	FMulticastInlineDelegate onFailure; // 0x38
};

struct UDefaultLevelSequenceInstanceData : UObject {
	AActor* TransformOriginActor; // 0x30
	FTransform TransformOrigin; // 0x40
};

struct UARSessionConfig : UDataAsset {
	bool bGenerateMeshDataFromTrackedGeometry; // 0x30
	bool bGenerateCollisionForMeshData; // 0x31
	bool bGenerateNavMeshForMeshData; // 0x32
	bool bUseMeshDataForOcclusion; // 0x33
	bool bRenderMeshDataInWireframe; // 0x34
	bool bTrackSceneObjects; // 0x35
	bool bUsePersonSegmentationForOcclusion; // 0x36
	bool bUseSceneDepthForOcclusion; // 0x37
	bool bUseAutomaticImageScaleEstimation; // 0x38
	bool bUseStandardOnboardingUX; // 0x39
	EARWorldAlignment WorldAlignment; // 0x3a
	EARSessionType SessionType; // 0x3b
	EARPlaneDetectionMode PlaneDetectionMode; // 0x3c
	bool bHorizontalPlaneDetection; // 0x3d
	bool bVerticalPlaneDetection; // 0x3e
	bool bEnableAutoFocus; // 0x3f
	EARLightEstimationMode LightEstimationMode; // 0x40
	EARFrameSyncMode FrameSyncMode; // 0x41
	bool bEnableAutomaticCameraOverlay; // 0x42
	bool bEnableAutomaticCameraTracking; // 0x43
	bool bResetCameraTracking; // 0x44
	bool bResetTrackedObjects; // 0x45
	TArray<UARCandidateImage*> CandidateImages; // 0x48
	int32_t MaxNumSimultaneousImagesTracked; // 0x58
	EAREnvironmentCaptureProbeType EnvironmentCaptureProbeType; // 0x5c
	TArray<char> WorldMapData; // 0x60
	TArray<UARCandidateObject*> CandidateObjects; // 0x70
	FARVideoFormat DesiredVideoFormat; // 0x80
	bool bUseOptimalVideoFormat; // 0x8c
	EARFaceTrackingDirection FaceTrackingDirection; // 0x8d
	EARFaceTrackingUpdate FaceTrackingUpdate; // 0x8e
	int32_t MaxNumberOfTrackedFaces; // 0x90
	TArray<char> SerializedARCandidateImageDatabase; // 0x98
	EARSessionTrackingFeature EnabledSessionTrackingFeature; // 0xa8
	EARSceneReconstruction SceneReconstructionMethod; // 0xa9
	UARPlaneComponent* PlaneComponentClass; // 0xb0
	UARPointComponent* PointComponentClass; // 0xb8
	UARFaceComponent* FaceComponentClass; // 0xc0
	UARImageComponent* ImageComponentClass; // 0xc8
	UARQRCodeComponent* QRCodeComponentClass; // 0xd0
	UARPoseComponent* PoseComponentClass; // 0xd8
	UAREnvironmentProbeComponent* EnvironmentProbeComponentClass; // 0xe0
	UARObjectComponent* ObjectComponentClass; // 0xe8
	UARMeshComponent* MeshComponentClass; // 0xf0
	UARGeoAnchorComponent* GeoAnchorComponentClass; // 0xf8
	UMaterialInterface* DefaultMeshMaterial; // 0x100
	UMaterialInterface* DefaultWireframeMeshMaterial; // 0x108
};

struct AGlueJarThrow_C : AGrenade_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x238
	UStaticMeshComponent* StaticMesh; // 0x240
};

struct UWBP_User_Message_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	FText Messsage; // 0x268
	float ShowAnimationTime; // 0x280
	float ShowTime; // 0x284
};

struct UMaterialExpressionMakeMaterialAttributes : UMaterialExpression {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Metallic; // 0x54
	FExpressionInput Specular; // 0x68
	FExpressionInput Roughness; // 0x7c
	FExpressionInput Anisotropy; // 0x90
	FExpressionInput EmissiveColor; // 0xa4
	FExpressionInput Opacity; // 0xb8
	FExpressionInput OpacityMask; // 0xcc
	FExpressionInput Normal; // 0xe0
	FExpressionInput Tangent; // 0xf4
	FExpressionInput WorldPositionOffset; // 0x108
	FExpressionInput WorldDisplacement; // 0x11c
	FExpressionInput TessellationMultiplier; // 0x130
	FExpressionInput SubsurfaceColor; // 0x144
	FExpressionInput ClearCoat; // 0x158
	FExpressionInput ClearCoatRoughness; // 0x16c
	FExpressionInput AmbientOcclusion; // 0x180
	FExpressionInput Refraction; // 0x194
	FExpressionInput CustomizedUVs[0x8]; // 0x1a8
	FExpressionInput PixelDepthOffset; // 0x248
	FExpressionInput ShadingModel; // 0x25c
};

struct UPhysicsConstraintTemplate : UObject {
	FConstraintInstance DefaultInstance; // 0x28
	TArray<FPhysicsConstraintProfileHandle> ProfileHandles; // 0x1e8
	FConstraintProfileProperties DefaultProfile; // 0x1f8
};

struct UParticleModuleVectorFieldScale : UParticleModuleVectorFieldBase {
	UDistributionFloat* VectorFieldScale; // 0x30
	FRawDistributionFloat VectorFieldScaleRaw; // 0x38
};

struct USphereReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadius; // 0x270
	float CaptureDistanceScale; // 0x274
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x278
};

struct UChainAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x320
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x348
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x370
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x398
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x418
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x448
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x4c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x568
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x5e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x618
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x698
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x6c8
	bool Charge; // 0x778
	bool Move!; // 0x779
	bool Charge Attack; // 0x77a
	bool BAnim; // 0x77b
	bool FP?; // 0x77c
};

struct UW_PlayCardContent_CustomGame_C : UW_PlayCardContent_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x268
	UButton* Button_CreateGame; // 0x270
	UButton* Button_ServerBrowser; // 0x278
	UImage* Image_90; // 0x280
	UImage* Image_CG_Icon; // 0x288
	UImage* Image_CG_Icon_2; // 0x290
	UOverlay* Overlay_TeamLeaderOnly; // 0x298
	USizeBox* SizeBox; // 0x2a0
	USizeBox* SizeBox_54; // 0x2a8
	UTextBlock* Text_Description; // 0x2b0
	UTextBlock* Text_Header; // 0x2b8
	UTextBlock* TextBlock; // 0x2c0
	UTextBlock* TextBlock_4; // 0x2c8
	FMulticastInlineDelegate CreateGame_OnClicked; // 0x2d0
	FMulticastInlineDelegate ServerBrowser_OnClicked; // 0x2e0
	bool IsCreateGameHovered; // 0x2f0
	FButtonStyle CreateGame_DefaultStyle; // 0x2f8
};

struct UInterpTrackDirector : UInterpTrack {
	TArray<FDirectorTrackCut> CutTrack; // 0x70
	char bSimulateCameraCutsOnClients : 1; // 0x80
};

struct URectLightComponent : ULocalLightComponent {
	float SourceWidth; // 0x340
	float SourceHeight; // 0x344
	float BarnDoorAngle; // 0x348
	float BarnDoorLength; // 0x34c
	UTexture* SourceTexture; // 0x350
};

struct UEOSCoreSessionsSendInvite : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct USynthComponentToneGenerator : USynthComponent {
	float Frequency; // 0x6c0
	float Volume; // 0x6c4
};

struct UWBP_GameResultHighlight_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Opacity_Anim; // 0x268
	UWidgetAnimation* HoverPosition_Anim; // 0x270
	UWidgetAnimation* ToVoted_Killer_Hovered_Anim; // 0x278
	UWidgetAnimation* ToVoted_Surv_Hovered_Anim; // 0x280
	UWidgetAnimation* VotedPressed_Killer_Anim; // 0x288
	UWidgetAnimation* VotedPressed_Surv_Anim; // 0x290
	UWidgetAnimation* HoverVoted_Killer_Anim_Voted; // 0x298
	UWidgetAnimation* HoverVoted_Surv_Anim_Voted; // 0x2a0
	UWidgetAnimation* HoverVoted_Killer_Anim; // 0x2a8
	UWidgetAnimation* HoverSelf_Killer_Anim; // 0x2b0
	UWidgetAnimation* ToVoted_NotHovered_Anim; // 0x2b8
	UWidgetAnimation* HoverVoted_Surv_Anim; // 0x2c0
	UWidgetAnimation* HoverSelf_Surv_Anim; // 0x2c8
	UButton* Button_Vote; // 0x2d0
	UButton* Button_VoteButton; // 0x2d8
	UImage* Image_Arrow; // 0x2e0
	UImage* Image_AvatarIcon; // 0x2e8
	UImage* Image_BG; // 0x2f0
	UImage* Image_BG_Line; // 0x2f8
	UImage* Image_ButtonClass; // 0x300
	UImage* Image_ButtonDef; // 0x308
	UImage* Image_ButtonDef_2; // 0x310
	UImage* Image_ButtonHovered; // 0x318
	UImage* Image_MVPBorder; // 0x320
	UImage* Image_MVPCrown; // 0x328
	UImage* Image_MVPCrownCircle; // 0x330
	UImage* Image_Separator; // 0x338
	URetainerBox* RetainerBox_Nickname; // 0x340
	URichTextBlock* RichTextBlock_Obj_Killer_2; // 0x348
	URichTextBlock* RichTextBlock_Obj_Killer_3; // 0x350
	URichTextBlock* RichTextBlock_Obj_Killer_4; // 0x358
	URichTextBlock* RichTextBlock_Obj_Surv_2; // 0x360
	URichTextBlock* RichTextBlock_Obj_Surv_3; // 0x368
	URichTextBlock* RichTextBlock_Obj_Surv_4; // 0x370
	UScrollBox* ScrollBox_Nickname; // 0x378
	UTextBlock* Text_Nickname; // 0x380
	UTextBlock* Text_SelfCounter; // 0x388
	UTextBlock* Text_VotedCounter; // 0x390
	bool isKiller; // 0x398
	bool IsSelf; // 0x399
	bool IsVoted; // 0x39a
	bool IsMVP; // 0x39b
	APS_PropHunt_C* PlayerState; // 0x3a0
	bool Hovered; // 0x3a8
	int32_t VoteCounter; // 0x3ac
	bool WasPressed; // 0x3b0
	FMulticastInlineDelegate Voted; // 0x3b8
	FTimerHandle AnimTimer; // 0x3c8
	bool IsForwardDirection; // 0x3d0
	FEndGamePlayerData PlayerInfo; // 0x3d8
};

struct UDistributionVectorConstant : UDistributionVector {
	FVector Constant; // 0x38
	char bLockAxes : 1; // 0x44
	EDistributionVectorLockFlags LockedAxes; // 0x48
};

struct UW_HelpWindow_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* bgblack; // 0x268
	UImage* Image; // 0x270
	UImage* Image_2; // 0x278
	UImage* Image_3; // 0x280
	UImage* Image_4; // 0x288
	UImage* Image_5; // 0x290
	UImage* Image_75; // 0x298
	UImage* Image_150; // 0x2a0
	UImage* Image_189; // 0x2a8
	UImage* Image_297; // 0x2b0
	UImage* Image_586; // 0x2b8
	UImage* Image_Abil1; // 0x2c0
	UImage* Image_Abil1_2; // 0x2c8
	UImage* Image_Abil2; // 0x2d0
	UImage* Image_Abil2_2; // 0x2d8
	UImage* Image_Abil2_3; // 0x2e0
	UImage* Image_Abil3; // 0x2e8
	UImage* Image_Abil3_2; // 0x2f0
	UImage* Image_Abil3_3; // 0x2f8
	UImage* Image_Abil3_4; // 0x300
	UImage* Image_Abil3_5; // 0x308
	UImage* Image_btAbil1; // 0x310
	UImage* Image_btAbil2; // 0x318
	UImage* Image_btAbil3; // 0x320
	UImage* Image_Killer_Ref; // 0x328
	UImage* Image_Surv_Ref; // 0x330
	UTextBlock* TextAbil1; // 0x338
	UTextBlock* TextAbil1_2; // 0x340
	UTextBlock* TextAbil2; // 0x348
	UTextBlock* TextAbil2_2; // 0x350
	UTextBlock* TextAbil2_3; // 0x358
	UTextBlock* TextAbil3; // 0x360
	UTextBlock* TextAbil3_2; // 0x368
	UTextBlock* TextAbil3_3; // 0x370
	UTextBlock* TextAbil3_4; // 0x378
	UTextBlock* TextAbil3_5; // 0x380
	UTextBlock* TextBlock_532; // 0x388
	UTextBlock* TextBlock_696; // 0x390
	UTextBlock* TextDesc1; // 0x398
	UTextBlock* TextDesc1_2; // 0x3a0
	UTextBlock* TextDesc2; // 0x3a8
	UTextBlock* TextDesc2_2; // 0x3b0
	UTextBlock* TextDesc2_3; // 0x3b8
	UTextBlock* TextDesc3; // 0x3c0
	UTextBlock* TextDesc3_2; // 0x3c8
	UTextBlock* TextDesc3_3; // 0x3d0
	UTextBlock* TextDesc3_4; // 0x3d8
	UTextBlock* TextDesc3_5; // 0x3e0
	UWBP_HelpTip_C* WBP_HelpTip_Killer_2; // 0x3e8
	UWBP_HelpTip_C* WBP_HelpTip_Killer_3; // 0x3f0
	UWBP_HelpTip_C* WBP_HelpTip_Killer_4; // 0x3f8
	UWBP_HelpTip_C* WBP_HelpTip_Surv_2; // 0x400
	UWBP_HelpTip_C* WBP_HelpTip_Surv_3; // 0x408
	UWBP_HelpTip_C* WBP_HelpTip_Surv_4; // 0x410
	UWidgetSwitcher* WidgetSwitcher_103; // 0x418
};

struct UParticleModuleTypeDataAnimTrail : UParticleModuleTypeDataBase {
	char bDeadTrailsOnDeactivate : 1; // 0x30
	char bEnablePreviousTangentRecalculation : 1; // 0x30
	char bTangentRecalculationEveryFrame : 1; // 0x30
	float TilingDistance; // 0x34
	float DistanceTessellationStepSize; // 0x38
	float TangentTessellationStepSize; // 0x3c
	float WidthTessellationStepSize; // 0x40
};

struct UMovieSceneSection : UMovieSceneSignedObject {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int32_t RowIndex; // 0xa8
	int32_t OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct UBlackboardKeyType_Enum : UBlackboardKeyType {
	UEnum* EnumType; // 0x30
	FString EnumName; // 0x38
	char bIsEnumNameValid : 1; // 0x48
};

struct UPlayerScoreComponentButtonSound_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Click_Anim; // 0x268
	UWidgetAnimation* Hover_Anim; // 0x270
	UImage* Image_Icon_Pressed; // 0x278
	UImage* Image_Icon_Unpressed; // 0x280
	FMulticastInlineDelegate Clicked; // 0x288
	bool IsEnabled; // 0x298
	UPaperSprite* DefaultIcon; // 0x2a0
	UPaperSprite* PressedIcon; // 0x2a8
};

struct UCameraShakeSourceComponent : USceneComponent {
	ECameraShakeAttenuation Attenuation; // 0x1f8
	float InnerAttenuationRadius; // 0x1fc
	float OuterAttenuationRadius; // 0x200
	UCameraShakeBase* CameraShake; // 0x208
	bool bAutoStart; // 0x210
};

struct UARObjectComponent : UARComponent {
	FARObjectUpdatePayload ReplicatedPayload; // 0x280
};

struct UWBP_EndGameLevel_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Opacity_Anim; // 0x268
	UWidgetAnimation* PropboxCoinsAppearance_Anim; // 0x270
	UWidgetAnimation* NewSkin_Anim; // 0x278
	UWidgetAnimation* TotalScoreAppearance_Anim; // 0x280
	UImage* Image; // 0x288
	UImage* Image_43; // 0x290
	UImage* Image_152; // 0x298
	UImage* Image_Lock; // 0x2a0
	UImage* Image_SkinPreview; // 0x2a8
	UOverlay* Overlay_PropboxCoins; // 0x2b0
	URetainerBox* RetainerBox_SkinPreview; // 0x2b8
	UTextBlock* Text_CharacterName; // 0x2c0
	UTextBlock* Text_SkinName; // 0x2c8
	UTextBlock* TextBlock_Level; // 0x2d0
	UTextBlock* TextBlock_PropboxCoins; // 0x2d8
	UTextBlock* TextBlock_TotalScore; // 0x2e0
	UVerticalBox* VerticalBox_Categories; // 0x2e8
	UWBP_LevelProgress_C* WBP_LevelProgress; // 0x2f0
	UMaterialInstanceDynamic* MaterialInstance; // 0x2f8
	FMulticastInlineDelegate OnCalculationFinished; // 0x300
};

struct UPlayFabInsightsAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xe8
	UPlayFabJsonObject* RequestJsonObj; // 0xf0
	UPlayFabJsonObject* ResponseJsonObj; // 0xf8
};

struct AVampire_C : AKillerMasterBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1318
	UNiagaraComponent* NiagaraShadow; // 0x1320
	USpyEyes_C* SpyEyes; // 0x1328
	UFMODAudioComponent* FMODAudio2; // 0x1330
	USphereComponent* BladeDanceSphere; // 0x1338
	UVampireSpell3_C* VampireSpell3; // 0x1340
	USkeletalMeshComponent* WeaponTP; // 0x1348
	USkeletalMeshComponent* WeaponFP; // 0x1350
	UVampireSpell1_C* VampireSpell1; // 0x1358
	UVampireSpell2_C* VampireSpell2; // 0x1360
	float Timeline_7_alpha_350AB93E425F2173709E42BB2943C6BB; // 0x1368
	ETimelineDirection Timeline_7__Direction_350AB93E425F2173709E42BB2943C6BB; // 0x136c
	UTimelineComponent* Timeline_8; // 0x1370
	bool AltAttackAnim?; // 0x1378
	bool AltAttackas; // 0x1379
	UMaterialInstanceDynamic* BloodlustMat; // 0x1380
	TArray<AActor*> BladeDanceSurvs; // 0x1388
};

struct UVirtualTextureBuilder : UObject {
	UVirtualTexture2D* Texture; // 0x28
	uint64_t BuildHash; // 0x30
};

struct UMovieScene3DConstraintTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x78
};

struct UPerkSurv_C : UPerk_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xd0
	ASurvivorMasterBP_C* Surv; // 0xd8
	bool Perk1Activated; // 0xe0
	bool Perk2Activated; // 0xe1
	bool Perk3Activated; // 0xe2
	int32_t Perk1LVL; // 0xe4
	int32_t Perk2LVL; // 0xe8
	int32_t Perk3LVL; // 0xec
	bool KillerToAll; // 0xf0
	bool bDelayedStun; // 0xf1
};

struct USizeBox : UContentWidget {
	float WidthOverride; // 0x130
	float HeightOverride; // 0x134
	float MinDesiredWidth; // 0x138
	float MinDesiredHeight; // 0x13c
	float MaxDesiredWidth; // 0x140
	float MaxDesiredHeight; // 0x144
	float MinAspectRatio; // 0x148
	float MaxAspectRatio; // 0x14c
	char bOverride_WidthOverride : 1; // 0x150
	char bOverride_HeightOverride : 1; // 0x150
	char bOverride_MinDesiredWidth : 1; // 0x150
	char bOverride_MinDesiredHeight : 1; // 0x150
	char bOverride_MaxDesiredWidth : 1; // 0x150
	char bOverride_MaxDesiredHeight : 1; // 0x150
	char bOverride_MinAspectRatio : 1; // 0x150
	char bOverride_MaxAspectRatio : 1; // 0x150
};

struct UGrannyKillerMaxWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UPhysicsConstraintComponent : USceneComponent {
	AActor* ConstraintActor1; // 0x1f8
	FConstrainComponentPropName ComponentName1; // 0x200
	AActor* ConstraintActor2; // 0x208
	FConstrainComponentPropName ComponentName2; // 0x210
	UPhysicsConstraintTemplate* ConstraintSetup; // 0x228
	FMulticastInlineDelegate OnConstraintBroken; // 0x230
	FConstraintInstance ConstraintInstance; // 0x240
};

struct UParticleModuleLocationSkelVertSurface : UParticleModuleLocationBase {
	ELocationSkelVertSurfaceSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	char bUpdatePositionEachFrame : 1; // 0x40
	char bOrientMeshEmitters : 1; // 0x40
	char bInheritBoneVelocity : 1; // 0x40
	float InheritVelocityScale; // 0x44
	FName SkelMeshActorParamName; // 0x48
	TArray<FName> ValidAssociatedBones; // 0x50
	char bEnforceNormalCheck : 1; // 0x60
	FVector NormalToCompare; // 0x64
	float NormalCheckToleranceDegrees; // 0x70
	float NormalCheckTolerance; // 0x74
	TArray<int32_t> ValidMaterialIndices; // 0x78
	char bInheritVertexColor : 1; // 0x88
	char bInheritUV : 1; // 0x88
	uint32_t InheritUVChannel; // 0x8c
};

struct UMovieSceneSequenceTickManager : UObject {
	TArray<AActor*> SequenceActors; // 0x28
	UMovieSceneEntitySystemLinker* Linker; // 0x38
};

struct USurvivalStaminaBarWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* HUD_JumpOut; // 0x268
	UWidgetAnimation* HUD_JumpIn; // 0x270
	UWidgetAnimation* HideAnim; // 0x278
	UWidgetSwitcher* ButtonsSwitcher; // 0x280
	UImage* Image_327; // 0x288
	UImage* Image_BG; // 0x290
	UProgressBar* Progress; // 0x298
	UProgressBar* Progress_2; // 0x2a0
	USafeZone* SafeZone_167; // 0x2a8
	UW_Lobby_ButtonChangeCharacter_C* W_Lobby_ButtonChangeCharacter; // 0x2b0
	UW_Lobby_WaitPlayers_C* W_Lobby_WaitPlayers; // 0x2b8
	UWBP_Tip_C* WBP_Tip; // 0x2c0
	bool IsAnimPlaying; // 0x2c8
	bool IsAnimInterrupted; // 0x2c9
};

struct UGarbageCollectionSettings : UDeveloperSettings {
	float TimeBetweenPurgingPendingKillObjects; // 0x38
	char FlushStreamingOnGC : 1; // 0x3c
	char AllowParallelGC : 1; // 0x3c
	char IncrementalBeginDestroyEnabled : 1; // 0x3c
	char MultithreadedDestructionEnabled : 1; // 0x3c
	char CreateGCClusters : 1; // 0x3c
	char AssetClusteringEnabled : 1; // 0x3c
	char ActorClusteringEnabled : 1; // 0x3c
	char BlueprintClusteringEnabled : 1; // 0x3c
	char UseDisregardForGCOnDedicatedServers : 1; // 0x3d
	int32_t MinGCClusterSize; // 0x40
	int32_t NumRetriesBeforeForcingGC; // 0x44
	int32_t MaxObjectsNotConsideredByGC; // 0x48
	int32_t SizeOfPermanentObjectPool; // 0x4c
	int32_t MaxObjectsInGame; // 0x50
	int32_t MaxObjectsInEditor; // 0x54
};

struct UParticleModuleAttractorPoint : UParticleModuleAttractorBase {
	FRawDistributionVector Position; // 0x30
	FRawDistributionFloat Range; // 0x78
	FRawDistributionFloat Strength; // 0xa8
	char StrengthByDistance : 1; // 0xd8
	char bAffectBaseVelocity : 1; // 0xd8
	char bOverrideVelocity : 1; // 0xd8
	char bUseWorldSpacePosition : 1; // 0xd8
	char Positive_X : 1; // 0xd8
	char Positive_Y : 1; // 0xd8
	char Positive_Z : 1; // 0xd8
	char Negative_X : 1; // 0xd8
	char Negative_Y : 1; // 0xd9
	char Negative_Z : 1; // 0xd9
};

struct UScaleBox : UContentWidget {
	EStretch Stretch; // 0x120
	EStretchDirection StretchDirection; // 0x121
	float UserSpecifiedScale; // 0x124
	bool IgnoreInheritedScale; // 0x128
};

struct AMagicLeapARPinInfoActor_C : AMagicLeapARPinInfoActorBase {
	FPointerToUberGraphFrame UberGraphFrame; // 0x238
	UStaticMeshComponent* Right; // 0x240
	UStaticMeshComponent* Forward; // 0x248
	UStaticMeshComponent* Up; // 0x250
	USphereComponent* ValidRadiusVisualizer; // 0x258
	USceneComponent* AxisRoot; // 0x260
	USceneComponent* VisualizerRoot; // 0x268
	UTextRenderComponent* TypeValue; // 0x270
	UTextRenderComponent* TransErrValue; // 0x278
	UTextRenderComponent* RotErrValue; // 0x280
	UTextRenderComponent* ConfidenceValue; // 0x288
	UTextRenderComponent* TransErrLabel; // 0x290
	UTextRenderComponent* RotErrLabel; // 0x298
	UTextRenderComponent* ConfidenceLabel; // 0x2a0
	UTextRenderComponent* PinIDValue; // 0x2a8
	USceneComponent* InfoRoot; // 0x2b0
	USceneComponent* Root; // 0x2b8
	float RotationSmoothSpeed; // 0x2c0
};

struct UParticleModuleAccelerationDrag : UParticleModuleAccelerationBase {
	UDistributionFloat* DragCoefficient; // 0x38
	FRawDistributionFloat DragCoefficientRaw; // 0x40
};

struct UMaterialExpressionStep : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
	float ConstY; // 0x68
	float ConstX; // 0x6c
};

struct UAnimSingleNodeInstance : UAnimInstance {
	UAnimationAsset* CurrentAsset; // 0x2b8
	FDelegate PostEvaluateAnimEvent; // 0x2c0
};

struct UUserDefinedEnum : UEnum {
	TMap<FName, FText> DisplayNameMap; // 0x60
};

struct USceneCaptureComponent2D : USceneCaptureComponent {
	ECameraProjectionMode ProjectionType; // 0x2b0
	float FOVAngle; // 0x2b4
	float OrthoWidth; // 0x2b8
	UTextureRenderTarget2D* TextureTarget; // 0x2c0
	ESceneCaptureCompositeMode CompositeMode; // 0x2c8
	FPostProcessSettings PostProcessSettings; // 0x2d0
	float PostProcessBlendWeight; // 0x820
	char bOverride_CustomNearClippingPlane : 1; // 0x824
	float CustomNearClippingPlane; // 0x828
	bool bUseCustomProjectionMatrix; // 0x82c
	FMatrix CustomProjectionMatrix; // 0x830
	bool bEnableClipPlane; // 0x870
	FVector ClipPlaneBase; // 0x874
	FVector ClipPlaneNormal; // 0x880
	char bCameraCutThisFrame : 1; // 0x88c
	char bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1; // 0x88c
	bool bDisableFlipCopyGLES; // 0x890
};

struct UBP_ServerReporter_C : UBP_HTTP_Wrapper_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xc0
	FTimerHandle TimerHandle; // 0xc8
	int32_t Players; // 0xd0
	FString Seed; // 0xd8
};

struct UBrushStampIndicator : UInteractiveGizmo {
	float BrushRadius; // 0x38
	float BrushFalloff; // 0x3c
	FVector BrushPosition; // 0x40
	FVector BrushNormal; // 0x4c
	bool bDrawIndicatorLines; // 0x58
	bool bDrawRadiusCircle; // 0x59
	int32_t SampleStepCount; // 0x5c
	FLinearColor LineColor; // 0x60
	float LineThickness; // 0x70
	bool bDepthTested; // 0x74
	bool bDrawSecondaryLines; // 0x75
	float SecondaryLineThickness; // 0x78
	FLinearColor SecondaryLineColor; // 0x7c
	UPrimitiveComponent* AttachedComponent; // 0x90
};

struct USoundSourceBus : USoundWave {
	ESourceBusChannels SourceBusChannels; // 0x370
	float SourceBusDuration; // 0x374
	UAudioBus* AudioBus; // 0x378
	char bAutoDeactivateWhenSilent : 1; // 0x380
};

struct UNiagaraDataInterfaceVectorField : UNiagaraDataInterface {
	UVectorField* Field; // 0x38
	bool bTileX; // 0x40
	bool bTileY; // 0x41
	bool bTileZ; // 0x42
};

struct UParticleModuleVelocity_Seeded : UParticleModuleVelocity {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct URegeneration_C : USurvivorSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
	bool TestMode?; // 0x100
};

struct ALobbyPlayerMesh_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UNiagaraComponent* NiagaraChainsaw; // 0x228
	USkeletalMeshComponent* VampireWeapon; // 0x230
	USkeletalMeshComponent* Vampire; // 0x238
	USkeletalMeshComponent* Chainsaw; // 0x240
	USkeletalMeshComponent* Rabbit; // 0x248
	USkeletalMeshComponent* EndGameMesh; // 0x250
	USkeletalMeshComponent* RedGirl; // 0x258
	USkeletalMeshComponent* GreenGirl; // 0x260
	USkeletalMeshComponent* NewSurv; // 0x268
	USkeletalMeshComponent* Surv; // 0x270
	USkeletalMeshComponent* AsianGirl; // 0x278
	USkeletalMeshComponent* Hammer_SkeletalMeshComponent0; // 0x280
	USkeletalMeshComponent* Keymaster; // 0x288
	USkeletalMeshComponent* knife_SkeletalMeshComponent0; // 0x290
	USkeletalMeshComponent* Granny; // 0x298
	USkeletalMeshComponent* Doppel_A_Pose_propnight_doppelganger_batterfly_knife_lock_low_SkeletalMeshComponent0; // 0x2a0
	UNiagaraComponent* DoppelNiagaraSystemV3_NiagaraComponent0; // 0x2a8
	USkeletalMeshComponent* Doppel; // 0x2b0
	USkeletalMeshComponent* Banshee; // 0x2b8
	USceneComponent* DefaultSceneRoot; // 0x2c0
	APS_PropHunt_C* Player; // 0x2c8
	LobbyCharacter Character; // 0x2d0
	bool LocalBlock?; // 0x2d1
	bool GameStarted?; // 0x2d2
	bool Surv?; // 0x2d3
	int32_t SkinID; // 0x2d4
	LobbyCharacter Char; // 0x2d8
	bool Scale Lock?; // 0x2d9
	bool DevCheatLBM; // 0x2da
	LobbyCharacter Character_1; // 0x2db
};

struct UGizmoWorldAxisSource : UObject {
	FVector Origin; // 0x30
	int32_t AxisIndex; // 0x3c
};

struct UInterpTrackInstVectorMaterialParam : UInterpTrackInst {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<FVector> ResetVectors; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackVectorMaterialParam* InstancedTrack; // 0x58
};

struct UGizmoLocalVec2ParameterSource : UGizmoBaseVec2ParameterSource {
	FVector2D Value; // 0x48
	FGizmoVec2ParameterChange LastChange; // 0x50
};

struct UPlayer : UObject {
	APlayerController* PlayerController; // 0x30
	int32_t CurrentNetSpeed; // 0x38
	int32_t ConfiguredInternetSpeed; // 0x3c
	int32_t ConfiguredLanSpeed; // 0x40
};

struct UVirtualTexture2D : UTexture2D {
	FVirtualTextureBuildSettings Settings; // 0x100
	bool bContinuousUpdate; // 0x10c
	bool bSinglePhysicalSpace; // 0x10d
};

struct UChaosSolverSettings : UDeveloperSettings {
	FSoftClassPath DefaultChaosSolverActorClass; // 0x40
};

struct ULevelSystem_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	AKillerMasterBP_C* KillerRef; // 0xb8
	ASurvivorMasterBP_C* SurvivorRef; // 0xc0
	int32_t LvlNew; // 0xc8
	TArray<int32_t> LvlExp; // 0xd0
	int32_t LvlReal; // 0xe0
	TArray<int32_t> SkillLvl; // 0xe8
	bool UpLvl; // 0xf8
	bool BLvlCalc; // 0xf9
	int32_t MaxLVL; // 0xfc
};

struct UEditableMesh : UObject {
	TArray<UEditableMeshAdapter*> Adapters; // 0x3b8
	int32_t TextureCoordinateCount; // 0x3d0
	int32_t PendingCompactCounter; // 0x51c
	int32_t SubdivisionCount; // 0x520
};

struct UInterpTrackInstLinearColorProp : UInterpTrackInstProperty {
	FLinearColor ResetColor; // 0x58
};

struct UCreateEOSSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct APartyBeaconClient : AOnlineBeaconClient {
	FString DestSessionId; // 0x2e0
	FPartyReservation PendingReservation; // 0x2f0
	EClientRequestType RequestType; // 0x340
	bool bPendingReservationSent; // 0x341
	bool bCancelReservation; // 0x342
};

struct UAISenseConfig_Hearing : UAISenseConfig {
	UAISense_Hearing* Implementation; // 0x48
	float HearingRange; // 0x50
	float LoSHearingRange; // 0x54
	char bUseLoSHearing : 1; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
};

struct UNavigationPath : UObject {
	FMulticastInlineDelegate PathUpdatedNotifier; // 0x28
	TArray<FVector> PathPoints; // 0x38
	ENavigationOptionFlag RecalculateOnInvalidation; // 0x48
};

struct UParticleModuleAttractorLine : UParticleModuleAttractorBase {
	FVector EndPoint0; // 0x30
	FVector EndPoint1; // 0x3c
	FRawDistributionFloat Range; // 0x48
	FRawDistributionFloat Strength; // 0x78
};

struct UNiagaraSettings : UDeveloperSettings {
	FSoftObjectPath DefaultEffectType; // 0x38
	TArray<FText> QualityLevels; // 0x50
	TMap<FString, FText> ComponentRendererWarningsPerClass; // 0x60
	ETextureRenderTargetFormat DefaultRenderTargetFormat; // 0xb0
	ENiagaraGpuBufferFormat DefaultGridFormat; // 0xb1
	UNiagaraEffectType* DefaultEffectTypePtr; // 0xb8
};

struct UMaterialExpressionMaterialProxyReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0x40
	FExpressionInput MaterialProxy; // 0x54
};

struct UMaxWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UPlayerScoreComponentAddedScore_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Spawn; // 0x268
	UWidgetAnimation* Hide; // 0x270
	UTextBlock* AddScore; // 0x278
	UImage* Image_573; // 0x280
	UTextBlock* WhatScore; // 0x288
	FText Score; // 0x290
	FText Text; // 0x2a8
	bool Block?; // 0x2c0
};

struct AAlarmCoin_C : ACoinActor_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
};

struct UScreamSpell_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	float ShakeDuration; // 0xf0
};

struct UW_MiniLobby_Role_C : UUserWidget {
	UImage* Image; // 0x260
	UImage* Image_2; // 0x268
	UImage* Image_3; // 0x270
	UImage* Image_4; // 0x278
	UImage* Image_5; // 0x280
	UImage* Image_6; // 0x288
	UImage* Image_7; // 0x290
	UImage* Image_8; // 0x298
	UImage* Image_9; // 0x2a0
	UImage* Image_10; // 0x2a8
	UImage* Image_11; // 0x2b0
	UImage* Image_12; // 0x2b8
	UImage* Image_13; // 0x2c0
	UImage* Image_14; // 0x2c8
	UImage* Image_15; // 0x2d0
	UImage* Image_16; // 0x2d8
	UImage* Image_17; // 0x2e0
	UImage* Image_18; // 0x2e8
	UImage* Image_19; // 0x2f0
	UImage* Image_20; // 0x2f8
	UImage* Image_21; // 0x300
	UImage* Image_22; // 0x308
	UImage* Image_23; // 0x310
	UImage* Image_24; // 0x318
	UImage* Image_25; // 0x320
	UImage* Image_26; // 0x328
	UImage* Image_27; // 0x330
	UImage* Image_28; // 0x338
	UImage* Image_29; // 0x340
	UImage* Image_30; // 0x348
	UImage* Image_31; // 0x350
	UImage* Image_32; // 0x358
	UImage* Image_33; // 0x360
	UImage* Image_34; // 0x368
	UImage* Image_35; // 0x370
	UImage* Image_36; // 0x378
	UImage* Image_37; // 0x380
	UImage* Image_38; // 0x388
	UImage* Image_39; // 0x390
	UImage* Image_40; // 0x398
	UImage* Image_41; // 0x3a0
	UImage* Image_42; // 0x3a8
	UImage* Image_43; // 0x3b0
	UImage* Image_44; // 0x3b8
	UImage* Image_45; // 0x3c0
	UImage* Image_46; // 0x3c8
	UImage* Image_47; // 0x3d0
	UImage* Image_48; // 0x3d8
	UImage* Image_49; // 0x3e0
	UImage* Image_50; // 0x3e8
	UImage* Image_51; // 0x3f0
	UImage* Image_52; // 0x3f8
	UImage* Image_53; // 0x400
	UImage* Image_54; // 0x408
	UImage* Image_55; // 0x410
	UImage* Image_56; // 0x418
	UImage* Image_57; // 0x420
	UImage* Image_58; // 0x428
	UImage* Image_59; // 0x430
	UImage* Image_60; // 0x438
	UImage* Image_61; // 0x440
	UImage* Image_62; // 0x448
	UImage* Image_63; // 0x450
	UImage* Image_64; // 0x458
	UImage* Image_65; // 0x460
	UImage* Image_66; // 0x468
	UImage* Image_67; // 0x470
	UImage* Image_68; // 0x478
	UImage* Image_69; // 0x480
	UImage* Image_70; // 0x488
	UImage* Image_71; // 0x490
	UImage* Image_72; // 0x498
	UImage* Image_73; // 0x4a0
	UImage* Image_74; // 0x4a8
	UImage* Image_75; // 0x4b0
	UImage* Image_76; // 0x4b8
	UImage* Image_77; // 0x4c0
	UImage* Image_78; // 0x4c8
	UImage* Image_79; // 0x4d0
	UImage* Image_80; // 0x4d8
	UImage* Image_81; // 0x4e0
	UImage* Image_82; // 0x4e8
	UImage* Image_83; // 0x4f0
	UImage* Image_84; // 0x4f8
	UImage* Image_85; // 0x500
	UImage* Image_86; // 0x508
	UImage* Image_87; // 0x510
	UImage* Image_88; // 0x518
	UImage* Image_89; // 0x520
	UImage* Image_90; // 0x528
	UImage* Image_91; // 0x530
	UImage* Image_92; // 0x538
	UImage* Image_93; // 0x540
	UImage* Image_94; // 0x548
	UImage* Image_95; // 0x550
	UImage* Image_96; // 0x558
	UImage* Image_97; // 0x560
	UImage* Image_98; // 0x568
	UImage* Image_99; // 0x570
	UImage* Image_100; // 0x578
	UImage* Image_113; // 0x580
	UImage* Image_412; // 0x588
	UWidgetSwitcher* WidgetSwitcher_BG; // 0x590
	UWidgetSwitcher* WidgetSwitcher_Role; // 0x598
};

struct UNiagaraDataInterfaceVector2DCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
};

struct UMovieSceneCameraShakeTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x80
};

struct UWidgetAnimation : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
	TArray<FWidgetAnimationBinding> AnimationBindings; // 0x68
	bool bLegacyFinishOnStop; // 0x78
	FString DisplayLabel; // 0x80
};

struct UJumpShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
	FVOscillator ShakeLoc; // 0x1ac
};

struct UARPoseComponent : UARComponent {
	FARPoseUpdatePayload ReplicatedPayload; // 0x280
};

struct UEndMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct URig : UObject {
	TArray<FTransformBase> TransformBases; // 0x30
	TArray<FNode> Nodes; // 0x40
};

struct URichTextBlock : UTextLayoutWidget {
	FText Text; // 0x128
	UDataTable* TextStyleSet; // 0x140
	TArray<URichTextBlockDecorator*> DecoratorClasses; // 0x148
	bool bOverrideDefaultStyle; // 0x158
	FTextBlockStyle DefaultTextStyleOverride; // 0x160
	float MinDesiredWidth; // 0x3d0
	ETextTransformPolicy TextTransformPolicy; // 0x3d4
	FTextBlockStyle DefaultTextStyle; // 0x3d8
	TArray<URichTextBlockDecorator*> InstanceDecorators; // 0x648
};

struct AWheeledVehicle : APawn {
	USkeletalMeshComponent* Mesh; // 0x280
	UWheeledVehicleMovementComponent* VehicleMovement; // 0x288
};

struct UGraffityMaker_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	bool Busy; // 0xb8
};

struct UDatasmithPostProcessVolumeTemplate : UDatasmithObjectTemplate {
	FDatasmithPostProcessSettingsTemplate Settings; // 0x30
	char bEnabled : 1; // 0x70
	char bUnbound : 1; // 0x70
};

struct APS_PropHunt_C : APlayerState {
	FPointerToUberGraphFrame UberGraphFrame; // 0x320
	USceneComponent* DefaultSceneRoot; // 0x328
	bool IsDead; // 0x330
	bool isKiller; // 0x331
	FString NamePS; // 0x338
	E_SurvivorStatus Status; // 0x348
	FString NickNamePS; // 0x350
	int32_t KillerType; // 0x360
	int32_t PlayerScore; // 0x364
	FText ScoreText; // 0x368
	SurvClass SurvClass; // 0x380
	UTexture2D* AvatarPS; // 0x388
	int32_t PlayerFinalScore; // 0x390
	bool Ready?; // 0x394
	FPlayerInfo Info; // 0x398
	int32_t SurvSkinID; // 0x3b0
	TArray<int32_t> SurvSkinArray; // 0x3b8
	int32_t Exp; // 0x3c8
	int32_t Lvl; // 0x3cc
	TArray<AActor*> AliveSurvivors; // 0x3d0
	int32_t Scores; // 0x3e0
	int32_t MaxScore_AlarmGame; // 0x3e4
	int32_t MaxScore_REVIVE; // 0x3e8
	int32_t MaxScore_OutChair; // 0x3ec
	int32_t MaxScore_OutChair_Self; // 0x3f0
	int32_t MaxScore_OutChair_Self_PickLock; // 0x3f4
	int32_t MaxScore_OutGrip; // 0x3f8
	int32_t MaxScore_FLASH; // 0x3fc
	int32_t MaxScore_HealALLY; // 0x400
	int32_t MaxScore_HealSELF; // 0x404
	int32_t MaxScore_HIT; // 0x408
	int32_t MaxScore_DOWNED; // 0x40c
	int32_t MaxScore_CHAIR; // 0x410
	int32_t MaxScore_Stun; // 0x414
	int32_t MaxScore_ChaseSurv; // 0x418
	int32_t MaxScore_ChaseKiller; // 0x41c
	int32_t MaxScore_DoorOpen; // 0x420
	int32_t MaxScore_ExitDoor; // 0x424
	int32_t MAXSCOREBLOCK_AlarmGame; // 0x428
	int32_t MAXSCOREBLOCK_REVIVE; // 0x42c
	int32_t MAXSCOREBLOCK_OutChair; // 0x430
	int32_t MAXSCOREBLOCK_OutChair_Self; // 0x434
	int32_t MAXSCOREBLOCK_OutChair_Self_PickLock; // 0x438
	int32_t MAXSCOREBLOCK_OutGrip; // 0x43c
	int32_t MAXSCOREBLOCK_FLASH; // 0x440
	int32_t MAXSCOREBLOCK_HealALLY; // 0x444
	int32_t MAXSCOREBLOCK_HealSELF; // 0x448
	int32_t MAXSCOREBLOCK_Stun; // 0x44c
	int32_t MAXSCOREBLOCK_HIT; // 0x450
	int32_t MAXSCOREBLOCK_DOWNED; // 0x454
	int32_t MAXSCOREBLOCK_CHAIR; // 0x458
	int32_t KillScoreCounter; // 0x45c
	SurvChars survChar; // 0x460
	int32_t Assists; // 0x464
	int32_t ObjectivesDone; // 0x468
	int32_t DamageTaken; // 0x46c
	int32_t DamageDone; // 0x470
	int32_t PointsGained; // 0x474
	SurvCategory SurvCategory; // 0x478
	bool TopCategory?; // 0x479
	KillerCategory KillerCategory; // 0x47a
	int32_t CategoryValue; // 0x47c
	int32_t SurvivalTime; // 0x480
	int32_t Stuns; // 0x484
	int32_t Kills; // 0x488
	TArray<SurvCategory> SurvAllCategory; // 0x490
	TArray<KillerCategory> KillerAllCategory; // 0x4a0
	TArray<int32_t> AllCategoryValue; // 0x4b0
	bool TopSeveralCategory?; // 0x4c0
	APawn* SwapSender; // 0x4c8
	int32_t Alarms; // 0x4d0
	int32_t TempRandom; // 0x4d4
	int32_t Likes; // 0x4d8
	KillerCategory KillerSecondCategory; // 0x4dc
	int32_t SecondCategoryValue; // 0x4e0
	SurvCategory SurvSecondCategory; // 0x4e4
	TArray<APawn*> SwapSenders; // 0x4e8
	int32_t DistanceTraveled; // 0x4f8
	KillerType KillerChar; // 0x4fc
	float BonusCounter; // 0x500
	int32_t MvpCategory; // 0x504
	int32_t MvpAllCategory; // 0x508
	SurvCategory MvpCategoryEnum; // 0x50c
	int32_t ID; // 0x510
	bool IsTalking; // 0x514
	bool SkinCheat; // 0x515
	int32_t PerkIndex; // 0x518
	int32_t CurrentLVL; // 0x51c
	int32_t MaxLVL; // 0x520
	bool IsLVlAdded; // 0x524
	int32_t PointsForPerks; // 0x528
	TMap<int32_t, USkeletalMesh*> Skin; // 0x530
	TArray<int32_t> SkinArr; // 0x580
	int32_t TagID; // 0x590
	int32_t BannerID; // 0x594
	int32_t DiamondsCount; // 0x598
	int32_t MaxScore_AlarmGame_Coin; // 0x59c
	int32_t MAXSCOREBLOCK_AlarmGame_Coin; // 0x5a0
	int32_t MaxScore_AlarmFull_Coin; // 0x5a4
	int32_t MAXSCOREBLOCK_AlarmFull_Coin; // 0x5a8
	int32_t MaxScore_Reanimate_Coin; // 0x5ac
	int32_t MAXSCOREBLOCK_Reanimate_Coin; // 0x5b0
	int32_t MaxScore_OutChair_Coin; // 0x5b4
	int32_t MAXSCOREBLOCK_OutChair_Coin; // 0x5b8
	int32_t MaxScore_StunKiller_Coin; // 0x5bc
	int32_t MAXSCOREBLOCK_StunKiller_Coin; // 0x5c0
	int32_t MaxScore_FlashKiller_Coin; // 0x5c4
	int32_t MAXSCOREBLOCK_FlashKiller_Coin; // 0x5c8
	int32_t MAXSCOREBLOCK_ChaseSurv; // 0x5cc
	int32_t MAXSCOREBLOCK_ChaseKiller; // 0x5d0
	int32_t Sum_Assists_Surv; // 0x5d4
	int32_t Sum_Objectives_Surv; // 0x5d8
	int32_t Sum_KillerAction_Surv; // 0x5dc
	int32_t Sum_Chase_Killer; // 0x5e0
	int32_t Avatar; // 0x5e4
	int32_t Sum_Hit_Killer; // 0x5e8
	int32_t Sum_Captured_Killer; // 0x5ec
	int32_t Sum_Downed_Killer; // 0x5f0
	int32_t Sum_Kills_Killer; // 0x5f4
	FString SteamPlayerID; // 0x5f8
};

struct UNavigationInvokerComponent : UActorComponent {
	float TileGenerationRadius; // 0xb0
	float TileRemovalRadius; // 0xb4
};

struct UAnimClassData : UObject {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x30
	USkeleton* TargetSkeleton; // 0x40
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x48
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x58
	TArray<FAnimBlueprintFunction> AnimBlueprintFunctions; // 0xa8
	TArray<FAnimBlueprintFunctionData> AnimBlueprintFunctionData; // 0xb8
	TArray<TFieldPath<FStructProperty>> AnimNodeProperties; // 0xc8
	TArray<TFieldPath<FStructProperty>> LinkedAnimGraphNodeProperties; // 0xe8
	TArray<TFieldPath<FStructProperty>> LinkedAnimLayerNodeProperties; // 0x108
	TArray<TFieldPath<FStructProperty>> PreUpdateNodeProperties; // 0x128
	TArray<TFieldPath<FStructProperty>> DynamicResetNodeProperties; // 0x148
	TArray<TFieldPath<FStructProperty>> StateMachineNodeProperties; // 0x168
	TArray<TFieldPath<FStructProperty>> InitializationNodeProperties; // 0x188
	TMap<FName, FGraphAssetPlayerInformation> GraphNameAssetPlayers; // 0x1a8
	TArray<FName> SyncGroupNames; // 0x1f8
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x208
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x218
	FPropertyAccessLibrary PropertyAccessLibrary; // 0x268
};

struct UModularSynthPresetBank : UObject {
	TArray<FModularSynthPresetBankEntry> Presets; // 0x28
};

struct USoundEffectSourcePresetChain : UObject {
	TArray<FSourceEffectChainEntry> Chain; // 0x28
	char bPlayEffectChainTails : 1; // 0x38
};

struct UAIAsyncTaskBlueprintProxy : UObject {
	FMulticastInlineDelegate onSuccess; // 0x28
	FMulticastInlineDelegate OnFail; // 0x38
};

struct UGI_Prophunt_C : UProphuntGameInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2b8
	FString PlayFabUserID; // 0x2c0
	FString Nickname; // 0x2d0
	FName HostLevel; // 0x2e0
	TArray<FBlueprintSessionResult> NewVar_1; // 0x2e8
	USaveGame* NewVar_2; // 0x2f8
	float Sensivity; // 0x300
	bool BAdvertise; // 0x304
	TArray<FBlueprintSessionResult> Sessions; // 0x308
	FS_AudioHandles AudioHandles; // 0x318
	bool ShouldJoin; // 0x338
	UTexture2D* Avatar; // 0x340
	int32_t MapIndex; // 0x348
	TArray<FString> Blacklist; // 0x350
	bool SuccessJoin; // 0x360
	bool DelayedSearch; // 0x361
	FString SessionId; // 0x368
	bool afterMenu; // 0x378
	FString MapName; // 0x380
	FPlayerInfo PlayerInfo; // 0x390
	bool LoggedIn; // 0x3a8
	int32_t SurvSkinID; // 0x3ac
	int32_t Exp; // 0x3b0
	int32_t Lvl; // 0x3b4
	float PercentageLVL; // 0x3b8
	TArray<int32_t> SurvSkinArray; // 0x3c0
	USaveGame* UserDataSave; // 0x3d0
	FString SaveName; // 0x3d8
	bool LoginSuccess; // 0x3e8
	FS_GameSettings ServerGameSettings; // 0x3f0
	FS_ServerSettings ServerSettings; // 0x410
	bool NeedMainMenuFadeOut; // 0x438
	float XAxis; // 0x43c
	float YAxis; // 0x440
	UPerk_C* SurvPerk1; // 0x448
	UPerk_C* SurvPerk2; // 0x450
	UPerk_C* SurvPerk3; // 0x458
	UPerk_C* KillerPerk1; // 0x460
	UPerk_C* KillerPerk2; // 0x468
	UPerk_C* KillerPerk3; // 0x470
	FString ServiceAddress; // 0x478
	FString ServerRegion; // 0x488
	bool IsActualServer; // 0x498
	int32_t BuildNumber; // 0x49c
	FString ServerName; // 0x4a0
	FString ID; // 0x4b0
	bool ServerError?; // 0x4c0
	FString TitlePlayerID; // 0x4c8
	FString SteamUserID; // 0x4d8
	bool IsPlayfabServer; // 0x4e8
	FString KillerID; // 0x4f0
	bool IsMatchmaking; // 0x500
	TArray<int32_t> Char Selected Skin Ids; // 0x508
	bool SteamLoggedIn; // 0x518
	bool SteamLobbyCreated; // 0x519
	FMulticastInlineDelegate OnComeOnline; // 0x520
	FMulticastInlineDelegate OnGoneOffline; // 0x530
	bool AmILobbyMember; // 0x540
	FString UserToInvite; // 0x548
	TArray<UPlayFabJsonObject*> PlayfabMatchPlayers; // 0x558
	FMulticastInlineDelegate OnEnterLobby; // 0x568
	FMulticastInlineDelegate OnLeftLobby; // 0x578
	TArray<FPingQoSInfo> Pings; // 0x588
	E_MenuReason OpenMenuReason; // 0x598
	bool GoingToMenu; // 0x599
	bool JoinSteamLobbyAtStartup; // 0x59a
	FString JoinLobbyID; // 0x5a0
	bool DevCheat?; // 0x5b0
	TMap<int32_t, USkeletalMesh*> SkinsAndId; // 0x5b8
	TArray<int32_t> SkinIDThatsPlayerOwns; // 0x608
	int32_t LootBoxCount; // 0x618
	TMap<int32_t, int32_t> SelectedSkinIDs; // 0x620
	int32_t coins; // 0x670
	int32_t OpenedLootBoxCount; // 0x674
	int32_t SelectedBannerID; // 0x678
	int32_t GLOBAL_XP; // 0x67c
	int32_t MMR_SURV; // 0x680
	int32_t MMR_KILLER; // 0x684
	int32_t TagID; // 0x688
	int32_t XP_ForNextLVL; // 0x68c
	int32_t XP_ForLvl; // 0x690
	TArray<FPingQoSInfo> CachedSortedPings; // 0x698
	bool IsNewSkin; // 0x6a8
	bool IsNewBanner; // 0x6a9
	bool IsNewAvatar; // 0x6aa
	bool IsNewTags; // 0x6ab
	TMap<int32_t, bool> IsSkinCustomizationNew; // 0x6b0
	TArray<int32_t> ArrAvatarPlayerOwn; // 0x700
	TArray<int32_t> ArrBannerPlayerOwn; // 0x710
	TArray<int32_t> ArrTagsPlayerOwn; // 0x720
	TMap<int32_t, bool> IsAvatarCustomizationNew; // 0x730
	TMap<int32_t, bool> IsBannerCustomizationNew; // 0x780
	TMap<int32_t, bool> IsTagsCustomizationNew; // 0x7d0
	int32_t AvatarID; // 0x820
	bool UnlockAllSkins; // 0x824
	FString CachedBuildId; // 0x828
	bool DisableAllSkins; // 0x838
	FString CS_SessionId; // 0x840
	FString CS_Region; // 0x850
	bool ShouldCreateLobby; // 0x860
	FString LD_CustomGameAddress; // 0x868
	bool Invert Mouse Y?; // 0x878
	UVaRestRequestJSON* SessionAuthRequest; // 0x880
	UW_LoadingScreen_C* LoadingScreenWidget; // 0x888
	FMulticastInlineDelegate ClearLobbyUI; // 0x890
	FString CurrentLobbyID; // 0x8a0
	bool DltSkinsFromLB; // 0x8b0
	bool UploadingSaveData; // 0x8b1
	bool TriedUploadSave; // 0x8b2
	FString SteamSessinTicket; // 0x8b8
	bool ResetRedDot; // 0x8c8
	bool FirstEOSLoad; // 0x8c9
	bool CheatsEnabled; // 0x8ca
	int32_t Scrap; // 0x8cc
	int32_t Mmr; // 0x8d0
	int32_t MatchesPlayed; // 0x8d4
	FMulticastInlineDelegate OnEOSLoad; // 0x8d8
	bool GamepadInput; // 0x8e8
};

struct USkinnedMeshComponent : UMeshComponent {
	USkeletalMesh* SkeletalMesh; // 0x470
	TWeakObjectPtr<USkinnedMeshComponent> MasterPoseComponent; // 0x478
	TArray<ESkinCacheUsage> SkinCacheUsage; // 0x480
	TArray<FVertexOffsetUsage> VertexOffsetUsage; // 0x490
	UPhysicsAsset* PhysicsAssetOverride; // 0x598
	int32_t ForcedLodModel; // 0x5a0
	int32_t MinLodModel; // 0x5a4
	float StreamingDistanceMultiplier; // 0x5b0
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x5c0
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x5f4
	char bOverrideMinLod : 1; // 0x5f6
	char bUseBoundsFromMasterPoseComponent : 1; // 0x5f6
	char bForceWireframe : 1; // 0x5f6
	char bDisplayBones : 1; // 0x5f6
	char bDisableMorphTarget : 1; // 0x5f6
	char bHideSkin : 1; // 0x5f7
	char bPerBoneMotionBlur : 1; // 0x5f7
	char bComponentUseFixedSkelBounds : 1; // 0x5f7
	char bConsiderAllBodiesForBounds : 1; // 0x5f7
	char bSyncAttachParentLOD : 1; // 0x5f7
	char bCanHighlightSelectedSections : 1; // 0x5f7
	char bRecentlyRendered : 1; // 0x5f7
	char bCastCapsuleDirectShadow : 1; // 0x5f7
	char bCastCapsuleIndirectShadow : 1; // 0x5f8
	char bCPUSkinning : 1; // 0x5f8
	char bEnableUpdateRateOptimizations : 1; // 0x5f8
	char bDisplayDebugUpdateRateOptimizations : 1; // 0x5f8
	char bRenderStatic : 1; // 0x5f8
	char bIgnoreMasterPoseComponentLOD : 1; // 0x5f8
	char bCachedLocalBoundsUpToDate : 1; // 0x5f9
	char bForceMeshObjectUpdate : 1; // 0x5f9
	float CapsuleIndirectShadowMinVisibility; // 0x5fc
	FBoxSphereBounds CachedWorldSpaceBounds; // 0x610
	FMatrix CachedWorldToLocalTransform; // 0x630
};

struct UPlaneReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadiusScale; // 0x270
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x278
	UBoxComponent* PreviewCaptureBox; // 0x280
};

struct UBorderSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UVerticalBoxSlot : UPanelSlot {
	FSlateChildSize Size; // 0x38
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct USubsurfaceProfile : UObject {
	FSubsurfaceProfileStruct Settings; // 0x28
};

struct UMovieSceneGeometryCacheTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
};

struct ULocalPlayer : UPlayer {
	UGameViewportClient* ViewportClient; // 0x70
	EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x94
	APlayerController* PendingLevelPlayerControllerClass; // 0x98
	char bSentSplitJoin : 1; // 0xa0
	int32_t ControllerId; // 0xb8
};

struct ULandscapeSettings : UDeveloperSettings {
	int32_t MaxNumberOfLayers; // 0x38
};

struct UPlatformGameInstance : UGameInstance {
	FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0x1a8
	FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0x1b8
	FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0x1c8
	FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0x1d8
	FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0x1e8
	FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x1f8
	FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x208
	FMulticastInlineDelegate ApplicationRegisteredForRemoteNotificationsDelegate; // 0x218
	FMulticastInlineDelegate ApplicationRegisteredForUserNotificationsDelegate; // 0x228
	FMulticastInlineDelegate ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x238
	FMulticastInlineDelegate ApplicationReceivedRemoteNotificationDelegate; // 0x248
	FMulticastInlineDelegate ApplicationReceivedLocalNotificationDelegate; // 0x258
	FMulticastInlineDelegate ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x268
};

struct UNiagaraDataInterfaceRWBase : UNiagaraDataInterface {
	TSet<int32_t> OutputShaderStages; // 0x38
	TSet<int32_t> IterationShaderStages; // 0x88
};

struct UMovieSceneMaterialParameterCollectionTrack : UMovieSceneMaterialTrack {
	UMaterialParameterCollection* MPC; // 0x90
};

struct UWBP_HitMark_KillerAlarm_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UCanvasPanel* CanvasPanel_HitMarks; // 0x268
	UOverlay* Overlay_38; // 0x270
	ASurvivorMasterBP_C* PlayerRef; // 0x278
	TArray<UWBP_HitMarkComponent_C*> HitMarks; // 0x280
	UWBP_HitMarkComponent_KillerAlarm_C* TutorialHitMark; // 0x290
};

struct ULevelStreamingDynamic : ULevelStreaming {
	char bInitiallyLoaded : 1; // 0x148
	char bInitiallyVisible : 1; // 0x148
};

struct UEnvQueryGenerator_BlueprintBase : UEnvQueryGenerator {
	FText GeneratorsActionDescription; // 0x50
	UEnvQueryContext* Context; // 0x68
	UEnvQueryItemType* GeneratedItemType; // 0x70
};

struct UARCandidateImage : UDataAsset {
	UTexture2D* CandidateTexture; // 0x30
	FString FriendlyName; // 0x38
	float Width; // 0x48
	float Height; // 0x4c
	EARCandidateImageOrientation Orientation; // 0x50
};

struct UEnvQueryTest : UEnvQueryNode {
	int32_t TestOrder; // 0x30
	EEnvTestPurpose TestPurpose; // 0x34
	FString TestComment; // 0x38
	EEnvTestFilterOperator MultipleContextFilterOp; // 0x48
	EEnvTestScoreOperator MultipleContextScoreOp; // 0x49
	EEnvTestFilterType FilterType; // 0x4a
	FAIDataProviderBoolValue BoolValue; // 0x50
	FAIDataProviderFloatValue FloatValueMin; // 0x88
	FAIDataProviderFloatValue FloatValueMax; // 0xc0
	EEnvTestScoreEquation ScoringEquation; // 0xf9
	EEnvQueryTestClamping ClampMinType; // 0xfa
	EEnvQueryTestClamping ClampMaxType; // 0xfb
	EEQSNormalizationType NormalizationType; // 0xfc
	FAIDataProviderFloatValue ScoreClampMin; // 0x100
	FAIDataProviderFloatValue ScoreClampMax; // 0x138
	FAIDataProviderFloatValue ScoringFactor; // 0x170
	FAIDataProviderFloatValue ReferenceValue; // 0x1a8
	bool bDefineReferenceValue; // 0x1e0
	char bWorkOnFloatValues : 1; // 0x1f0
};

struct UMagicLeapLightingTrackingComponent : UActorComponent {
	bool UseGlobalAmbience; // 0xb0
	bool UseColorTemp; // 0xb1
};

struct UParticleModuleAccelerationDragScaleOverLife : UParticleModuleAccelerationBase {
	UDistributionFloat* DragScale; // 0x38
	FRawDistributionFloat DragScaleRaw; // 0x40
};

struct UParticleModuleRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionFloat LifeMultiplier; // 0x30
};

struct UCharacterMovementComponent : UPawnMovementComponent {
	ACharacter* CharacterOwner; // 0x148
	float GravityScale; // 0x150
	float MaxStepHeight; // 0x154
	float JumpZVelocity; // 0x158
	float JumpOffJumpZFactor; // 0x15c
	float WalkableFloorAngle; // 0x160
	float WalkableFloorZ; // 0x164
	EMovementMode MovementMode; // 0x168
	char CustomMovementMode; // 0x169
	ENetworkSmoothingMode NetworkSmoothingMode; // 0x16a
	float GroundFriction; // 0x16c
	float MaxWalkSpeed; // 0x18c
	float MaxWalkSpeedCrouched; // 0x190
	float MaxSwimSpeed; // 0x194
	float MaxFlySpeed; // 0x198
	float MaxCustomMovementSpeed; // 0x19c
	float MaxAcceleration; // 0x1a0
	float MinAnalogWalkSpeed; // 0x1a4
	float BrakingFrictionFactor; // 0x1a8
	float BrakingFriction; // 0x1ac
	float BrakingSubStepTime; // 0x1b0
	float BrakingDecelerationWalking; // 0x1b4
	float BrakingDecelerationFalling; // 0x1b8
	float BrakingDecelerationSwimming; // 0x1bc
	float BrakingDecelerationFlying; // 0x1c0
	float AirControl; // 0x1c4
	float AirControlBoostMultiplier; // 0x1c8
	float AirControlBoostVelocityThreshold; // 0x1cc
	float FallingLateralFriction; // 0x1d0
	float CrouchedHalfHeight; // 0x1d4
	float Buoyancy; // 0x1d8
	float PerchRadiusThreshold; // 0x1dc
	float PerchAdditionalHeight; // 0x1e0
	FRotator RotationRate; // 0x1e4
	char bUseSeparateBrakingFriction : 1; // 0x1f0
	char bApplyGravityWhileJumping : 1; // 0x1f0
	char bUseControllerDesiredRotation : 1; // 0x1f0
	char bOrientRotationToMovement : 1; // 0x1f0
	char bSweepWhileNavWalking : 1; // 0x1f0
	char bMovementInProgress : 1; // 0x1f0
	char bEnableScopedMovementUpdates : 1; // 0x1f0
	char bEnableServerDualMoveScopedMovementUpdates : 1; // 0x1f1
	char bForceMaxAccel : 1; // 0x1f1
	char bRunPhysicsWithNoController : 1; // 0x1f1
	char bForceNextFloorCheck : 1; // 0x1f1
	char bShrinkProxyCapsule : 1; // 0x1f1
	char bCanWalkOffLedges : 1; // 0x1f1
	char bCanWalkOffLedgesWhenCrouching : 1; // 0x1f1
	char bNetworkSkipProxyPredictionOnNetUpdate : 1; // 0x1f2
	char bNetworkAlwaysReplicateTransformUpdateTimestamp : 1; // 0x1f2
	char bDeferUpdateMoveComponent : 1; // 0x1f2
	char bEnablePhysicsInteraction : 1; // 0x1f2
	char bTouchForceScaledToMass : 1; // 0x1f2
	char bPushForceScaledToMass : 1; // 0x1f2
	char bPushForceUsingZOffset : 1; // 0x1f2
	char bScalePushForceToVelocity : 1; // 0x1f3
	USceneComponent* DeferredUpdatedMoveComponent; // 0x1f8
	float MaxOutOfWaterStepHeight; // 0x200
	float OutofWaterZ; // 0x204
	float Mass; // 0x208
	float StandingDownwardForceScale; // 0x20c
	float InitialPushForceFactor; // 0x210
	float PushForceFactor; // 0x214
	float PushForcePointZOffsetFactor; // 0x218
	float TouchForceFactor; // 0x21c
	float MinTouchForce; // 0x220
	float MaxTouchForce; // 0x224
	float RepulsionForce; // 0x228
	FVector Acceleration; // 0x22c
	FQuat LastUpdateRotation; // 0x240
	FVector LastUpdateLocation; // 0x250
	FVector LastUpdateVelocity; // 0x25c
	float ServerLastTransformUpdateTimeStamp; // 0x268
	float ServerLastClientGoodMoveAckTime; // 0x26c
	float ServerLastClientAdjustmentTime; // 0x270
	FVector PendingImpulseToApply; // 0x274
	FVector PendingForceToApply; // 0x280
	float AnalogInputModifier; // 0x28c
	float MaxSimulationTimeStep; // 0x29c
	int32_t MaxSimulationIterations; // 0x2a0
	int32_t MaxJumpApexAttemptsPerSimulation; // 0x2a4
	float MaxDepenetrationWithGeometry; // 0x2a8
	float MaxDepenetrationWithGeometryAsProxy; // 0x2ac
	float MaxDepenetrationWithPawn; // 0x2b0
	float MaxDepenetrationWithPawnAsProxy; // 0x2b4
	float NetworkSimulatedSmoothLocationTime; // 0x2b8
	float NetworkSimulatedSmoothRotationTime; // 0x2bc
	float ListenServerNetworkSimulatedSmoothLocationTime; // 0x2c0
	float ListenServerNetworkSimulatedSmoothRotationTime; // 0x2c4
	float NetProxyShrinkRadius; // 0x2c8
	float NetProxyShrinkHalfHeight; // 0x2cc
	float NetworkMaxSmoothUpdateDistance; // 0x2d0
	float NetworkNoSmoothUpdateDistance; // 0x2d4
	float NetworkMinTimeBetweenClientAckGoodMoves; // 0x2d8
	float NetworkMinTimeBetweenClientAdjustments; // 0x2dc
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x2e0
	float NetworkLargeClientCorrectionDistance; // 0x2e4
	float LedgeCheckThreshold; // 0x2e8
	float JumpOutOfWaterPitch; // 0x2ec
	FFindFloorResult CurrentFloor; // 0x2f0
	EMovementMode DefaultLandMovementMode; // 0x388
	EMovementMode DefaultWaterMovementMode; // 0x389
	EMovementMode GroundMovementMode; // 0x38a
	char bMaintainHorizontalGroundVelocity : 1; // 0x38b
	char bImpartBaseVelocityX : 1; // 0x38b
	char bImpartBaseVelocityY : 1; // 0x38b
	char bImpartBaseVelocityZ : 1; // 0x38b
	char bImpartBaseAngularVelocity : 1; // 0x38b
	char bJustTeleported : 1; // 0x38b
	char bNetworkUpdateReceived : 1; // 0x38b
	char bNetworkMovementModeChanged : 1; // 0x38b
	char bIgnoreClientMovementErrorChecksAndCorrection : 1; // 0x38c
	char bServerAcceptClientAuthoritativePosition : 1; // 0x38c
	char bNotifyApex : 1; // 0x38c
	char bCheatFlying : 1; // 0x38c
	char bWantsToCrouch : 1; // 0x38c
	char bCrouchMaintainsBaseLocation : 1; // 0x38c
	char bIgnoreBaseRotation : 1; // 0x38c
	char bFastAttachedMove : 1; // 0x38c
	char bAlwaysCheckFloor : 1; // 0x38d
	char bUseFlatBaseForFloorChecks : 1; // 0x38d
	char bPerformingJumpOff : 1; // 0x38d
	char bWantsToLeaveNavWalking : 1; // 0x38d
	char bUseRVOAvoidance : 1; // 0x38d
	char bRequestedMoveUseAcceleration : 1; // 0x38d
	char bWasSimulatingRootMotion : 1; // 0x38d
	char bAllowPhysicsRotationDuringAnimRootMotion : 1; // 0x38e
	char bHasRequestedVelocity : 1; // 0x38e
	char bRequestedMoveWithMaxSpeed : 1; // 0x38e
	char bWasAvoidanceUpdated : 1; // 0x38e
	char bProjectNavMeshWalking : 1; // 0x38e
	char bProjectNavMeshOnBothWorldChannels : 1; // 0x38e
	float AvoidanceConsiderationRadius; // 0x3a0
	FVector RequestedVelocity; // 0x3a4
	int32_t AvoidanceUID; // 0x3b0
	FNavAvoidanceMask AvoidanceGroup; // 0x3b4
	FNavAvoidanceMask GroupsToAvoid; // 0x3b8
	FNavAvoidanceMask GroupsToIgnore; // 0x3bc
	float AvoidanceWeight; // 0x3c0
	FVector PendingLaunchVelocity; // 0x3c4
	float NavMeshProjectionInterval; // 0x474
	float NavMeshProjectionTimer; // 0x478
	float NavMeshProjectionInterpSpeed; // 0x47c
	float NavMeshProjectionHeightScaleUp; // 0x480
	float NavMeshProjectionHeightScaleDown; // 0x484
	float NavWalkingFloorDistTolerance; // 0x488
	FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction; // 0x490
	float MinTimeBetweenTimeStampResets; // 0x4d8
	FRootMotionSourceGroup CurrentRootMotion; // 0x988
	FRootMotionSourceGroup ServerCorrectionRootMotion; // 0x9c0
	FRootMotionMovementParams RootMotionParams; // 0xa90
	FVector AnimRootMotionVelocity; // 0xad0
};

struct USizeBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UItemWorker_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	int32_t HealpackCharge; // 0xb8
	bool IsPressed; // 0xbc
	ItemType ItemType; // 0xbd
	ASurvivorMasterBP_C* Player; // 0xc0
	float HealDuration; // 0xc8
	float SpentTime; // 0xcc
	AItemsBPHand_C* CurrentItem; // 0xd0
	bool IsHealing; // 0xd8
	ASurvivorMasterBP_C* HealTarget; // 0xe0
	UFMODAudioComponent* HealSoundComponent; // 0xe8
	TArray<FItemStructure> ItemsInventory; // 0xf0
	FTransform SpawnItemLocation; // 0x100
	AItemsBPHand_C* ClassItemToSpawn; // 0x130
	int32_t InventoryIndex; // 0x138
	AActor* Item; // 0x140
	bool ItemFound?; // 0x148
	TArray<AActor*> PickUpItems; // 0x150
	UMaterialInstanceDynamic* SurvDynMat1; // 0x160
	UMaterialInstanceDynamic* SurvDynMat2; // 0x168
	UMaterialInstanceDynamic* SurvDynMat3; // 0x170
	UMaterialInstanceDynamic* SurvDynMatFPP; // 0x178
	UMaterialInstanceDynamic* SurvDynMatInvis; // 0x180
	UMaterialInstanceDynamic* SurvDynMatInvisFPP; // 0x188
	bool TransitionOn; // 0x190
	bool TransitionOff; // 0x191
	float TransitionTime; // 0x194
	float TurnOffDuration; // 0x198
	float TurnOnDuration; // 0x19c
	float InvisRefractionZero; // 0x1a0
	float InvisRefractionFPP; // 0x1a4
	float InvisRefractionTPP; // 0x1a8
	float Float1; // 0x1ac
	float ErodeSubtractDef; // 0x1b0
	float CurrentTimerInvis; // 0x1b4
	bool Casted?; // 0x1b8
	FPostProcessSettings postProcessNormal; // 0x1c0
	FPostProcessSettings postProcessMonochrome; // 0x710
	float TimerInvis; // 0xc60
	ALootboxShop_C* LootboxShop; // 0xc68
	bool CanUsePicklock?; // 0xc70
	int32_t SkillCheckCount; // 0xc74
	float DeltaSecond; // 0xc78
	float CurrentPicklockProgress; // 0xc7c
	float FullPicklockProgress; // 0xc80
	bool Block?; // 0xc84
	bool UsePicklock?; // 0xc85
	FText PicklockText; // 0xc88
	bool ItemTake?; // 0xca0
	FItemStructure Medic; // 0xca8
	FItemStructure Reporter; // 0xcd8
	FItemStructure Alchemist; // 0xd08
	FItemStructure Gamer; // 0xd38
	FItemStructure Apprentice; // 0xd68
	FItemStructure Thief; // 0xd98
	bool TakeAnim?; // 0xdc8
	FText UseItemText; // 0xdd0
	FText SelfHealText; // 0xde8
	FText ItemName; // 0xe00
	bool ItemSwap?; // 0xe18
	AActor* Lotbox; // 0xe20
	bool DropItemBlock?; // 0xe28
	bool FirstItem?; // 0xe29
	FItemStructure Slot1; // 0xe30
	FItemStructure Slot2; // 0xe60
	FItemStructure Slot3; // 0xe90
	int32_t TempInt; // 0xec0
	FItemStructure TempDrop; // 0xec8
	bool FlashlightCanUse?; // 0xef8
	TArray<UMaterialInstanceDynamic*> SurvDynMaterialsTPP; // 0xf00
	TArray<UMaterialInstanceDynamic*> SurvDynMaterialsFPP; // 0xf10
	bool HoudiniPerk?; // 0xf20
	FText HoudiniText; // 0xf28
	FItemStructure CurrentSlot; // 0xf40
	bool InventoryFull?; // 0xf70
	AActor* ItemMesh; // 0xf78
	TArray<UMaterialInstanceDynamic*> MeshMaterInst; // 0xf80
	TArray<UMaterialInstanceDynamic*> MeshInvisMaterInst; // 0xf90
	AKillerMasterBP_C* StunKiller; // 0xfa0
	int32_t TempRandom; // 0xfa8
	int32_t TotemOfBraveryCharge; // 0xfac
	bool IsTotemOfBravery; // 0xfb0
	bool IsTotemOfConcentration; // 0xfb1
	int32_t TotemOfConcentrationCharge; // 0xfb4
	bool IsTotemOfFriemdship; // 0xfb8
	int32_t TotemOfFriendshipCharge; // 0xfbc
	FTimerHandle PainkillerTimer; // 0xfc0
	int32_t PainKillerT; // 0xfc8
	int32_t TotemOfGravityCharge; // 0xfcc
	bool IsTotemOfGravity; // 0xfd0
	TArray<AItemsBPHand_C*> HealpackArr; // 0xfd8
	bool IsHealthpack; // 0xfe8
	FTimerHandle TotemOfGravityTimer; // 0xff0
	FTimerHandle TotemOfConcentrationTimer; // 0xff8
	FTimerHandle TotemOfFriendshipTime; // 0x1000
	FTimerHandle TotemOfBraveryTimer; // 0x1008
	FTimerHandle TotemOfEnduranceTimer; // 0x1010
	int32_t ToolCharges; // 0x1018
	FTimerHandle ToolTimer; // 0x1020
	FText GemOfEndurance; // 0x1028
	FText Gem of Friendship; // 0x1040
	FText Gem of Bravery; // 0x1058
	FText Gem of Gravity; // 0x1070
	bool Condition; // 0x1088
	bool IsPainkillerActivated; // 0x1089
	bool IsToolActivated; // 0x108a
	bool ToolsAnim; // 0x108b
	AItemsBP_C* ItemToPickUpReference; // 0x1090
	int32_t ItemWorkerSpawnIndex; // 0x1098
	bool FPressed?; // 0x109c
	bool BlockSwap; // 0x109d
	bool BlockPropItem; // 0x109e
	bool BlockDropDup; // 0x109f
};

struct UTimeIsTicking_C : UPerkKiller_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x120
	TArray<ANewAlarmBP_C*> Alarms; // 0x128
	TArray<ANewAlarmBP_C*> AlarmsRDY; // 0x138
};

struct ACrystalRune_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UParticleSystemComponent* P_RuneGlow; // 0x228
	UPointLightComponent* PointLight; // 0x230
	USphereComponent* Sphere; // 0x238
	UStaticMeshComponent* Cube; // 0x240
	USceneComponent* DefaultSceneRoot; // 0x248
	float RotationSpeed; // 0x250
	bool Block?; // 0x254
	bool EaseUp; // 0x255
	float EaseAlpha; // 0x258
	float LocalZ; // 0x25c
	ItemType Totem; // 0x260
	FFMODEventInstance Ambience; // 0x268
	UFMODEvent* Event; // 0x270
	UMaterialInstanceDynamic* DynMat; // 0x278
	float EaseSpeed; // 0x280
	float UpPosOffset; // 0x284
};

struct UMovieSceneEnumSection : UMovieSceneSection {
	FMovieSceneByteChannel EnumCurve; // 0xe8
};

struct USourceEffectWaveShaperPreset : USoundEffectSourcePreset {
	FSourceEffectWaveShaperSettings Settings; // 0x98
};

struct UStereoLayerShapeEquirect : UStereoLayerShape {
	FBox2D LeftUVRect; // 0x28
	FBox2D RightUVRect; // 0x3c
	FVector2D LeftScale; // 0x50
	FVector2D RightScale; // 0x58
	FVector2D LeftBias; // 0x60
	FVector2D RightBias; // 0x68
};

struct UMaterialExpressionLogarithm2 : UMaterialExpression {
	FExpressionInput X; // 0x40
};

struct UEOSCoreAuthVerifyUserAuth : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UW_VictoryScreen_Tutorial_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* TexAnim; // 0x268
	UWidgetAnimation* NewVictoryAnimation; // 0x270
	UWidgetAnimation* Fade; // 0x278
	UWidgetAnimation* VictoryAnimation; // 0x280
	UHorizontalBox* HorizontalBox_46; // 0x288
	UImage* Image_37; // 0x290
	UImage* Image_102; // 0x298
	UImage* Image_114; // 0x2a0
	UImage* Image_254; // 0x2a8
	USizeBox* SizeBox_3; // 0x2b0
	UTextBlock* Text_EndGameState; // 0x2b8
	bool Finished; // 0x2c0
	FText DefeatText; // 0x2c8
	FText VictoryText; // 0x2e0
};

struct UGizmoBaseComponent : UPrimitiveComponent {
	FLinearColor Color; // 0x440
	float HoverSizeMultiplier; // 0x450
	float PixelHitDistanceThreshold; // 0x454
};

struct USubmixEffectConvolutionReverbPreset : USoundEffectSubmixPreset {
	UAudioImpulseResponse* ImpulseResponse; // 0x68
	FSubmixEffectConvolutionReverbSettings Settings; // 0x70
	ESubmixEffectConvolutionReverbBlockSize BlockSize; // 0x98
	bool bEnableHardwareAcceleration; // 0x99
};

struct AMatineeActorCameraAnim : AMatineeActor {
	UCameraAnim* CameraAnim; // 0x2c8
};

struct USafeZoneSlot : UPanelSlot {
	bool bIsTitleSafe; // 0x38
	FMargin SafeAreaScale; // 0x3c
	EHorizontalAlignment HAlign; // 0x4c
	EVerticalAlignment VAlign; // 0x4d
	FMargin Padding; // 0x50
};

struct UReverbEffect : UObject {
	bool bBypassEarlyReflections; // 0x28
	float ReflectionsDelay; // 0x2c
	float GainHF; // 0x30
	float ReflectionsGain; // 0x34
	bool bBypassLateReflections; // 0x38
	float LateDelay; // 0x3c
	float DecayTime; // 0x40
	float Density; // 0x44
	float Diffusion; // 0x48
	float AirAbsorptionGainHF; // 0x4c
	float DecayHFRatio; // 0x50
	float LateGain; // 0x54
	float Gain; // 0x58
	float RoomRolloffFactor; // 0x5c
};

struct UEOSCorePlayerDataStorageWriteFile : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct ATemplateSequenceActor : AActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x228
	UTemplateSequencePlayer* SequencePlayer; // 0x240
	FSoftObjectPath TemplateSequence; // 0x248
	FTemplateSequenceBindingOverrideData BindingOverride; // 0x260
};

struct UChatWindow_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UCanvasPanel* CanvasPanel_2; // 0x268
	UScrollBox* ChatLog; // 0x270
	UButton* HiddenCloseChatButton; // 0x278
	UImage* Image_77; // 0x280
	UImage* Image_91; // 0x288
	UImage* Image_104; // 0x290
	UImage* Image_192; // 0x298
	UImage* Image_Fake; // 0x2a0
	UImage* Image_Ref; // 0x2a8
	UImage* Image_ScrollBG; // 0x2b0
	UImage* Image_ScrollThumb; // 0x2b8
	UMultiLineEditableText* MultiLineChatEntry; // 0x2c0
	UOverlay* OverlayChatEntry; // 0x2c8
	USizeBox* SB_ScrollRail; // 0x2d0
	UTextBlock* TypeMessage; // 0x2d8
	UBorder* Window; // 0x2e0
	bool Global?; // 0x2e8
	FLinearColor VisibleWindow; // 0x2ec
	FLinearColor HiddenWindow; // 0x2fc
	bool CustomOpen?; // 0x30c
	bool IsChatVisible; // 0x30d
	bool IsShiftPressed; // 0x30e
	float CurrentScrollOffset; // 0x310
	float EndScrollOffset; // 0x314
	bool NeedAutoScroll; // 0x318
	float AutoScrollSpeed; // 0x31c
	float ChatLogHeight; // 0x320
	bool FakeRemoved; // 0x324
	float DefaultTimeOffset; // 0x328
	float CurrentTimeOffset; // 0x32c
	TArray<UChatWindowText_C*> ArrayHiddenMessages; // 0x330
	FTimerHandle HandlerHiddenMessages; // 0x340
	float MessageVisibilityTime; // 0x348
	int32_t MaxCountSumbol; // 0x34c
};

struct UEOSCoreSessionsRegisterPlayers : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UEOSCoreTitleStorageQueryFileList : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UARCandidateObject : UDataAsset {
	TArray<char> CandidateObjectData; // 0x30
	FString FriendlyName; // 0x40
	FBox BoundingBox; // 0x50
};

struct UIconAbilityCooldownWBP_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* IconOpacityBackward_Anim; // 0x268
	UWidgetAnimation* IconOpacityForward_Anim; // 0x270
	UWidgetAnimation* CoolDown_Time_Is_Over; // 0x278
	UWidgetAnimation* CoolDown_End_Short_Anim; // 0x280
	UWidgetAnimation* CoolDown_ShowTimer_Anim; // 0x288
	UWidgetAnimation* CoolDown_Begin_Anim; // 0x290
	UImage* BG; // 0x298
	UBorder* Border_AbilityIcon; // 0x2a0
	UOverlay* CDOverlay; // 0x2a8
	UTextBlock* CDTextBox; // 0x2b0
	UTextBlock* Count; // 0x2b8
	UHorizontalBox* HorizontalBox_Counter; // 0x2c0
	UImage* Image_ChargeIconFake; // 0x2c8
	UImage* Image_RBM; // 0x2d0
	UImage* Image_Substrate; // 0x2d8
	UProgressBar* ProgressBar_CD; // 0x2e0
	UTextBlock* TextBlock_KeyName; // 0x2e8
	UTextBlock* TextBlock_Multiplier; // 0x2f0
	float CoolDownTime; // 0x2f8
	float CurrentTime; // 0x2fc
	FText CdText; // 0x300
	int32_t RemainTime; // 0x318
	bool abilityUse?; // 0x31c
	UCoolDownWBP_C* CDWBPRef; // 0x320
	FText Key; // 0x328
	AKillerMasterBP_C* Owner; // 0x340
	bool charge?; // 0x348
	UMaterialInstanceDynamic* CircleMat; // 0x350
	float FillTime; // 0x358
	FText Name; // 0x360
};

struct AMapStormBP_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UAudioComponent* Thunder; // 0x228
	UFMODAudioComponent* FmodAudio; // 0x230
	USceneComponent* DefaultSceneRoot; // 0x238
	float Timeline_1_NewTrack_0_D67461CE416563FB2B48E2B80652FA43; // 0x240
	ETimelineDirection Timeline_1__Direction_D67461CE416563FB2B48E2B80652FA43; // 0x244
	UTimelineComponent* Timeline_2; // 0x248
	float Timeline_0_NewTrack_0_A19B948C4F191372C1CF8DB1F06EA309; // 0x250
	ETimelineDirection Timeline_0__Direction_A19B948C4F191372C1CF8DB1F06EA309; // 0x254
	UTimelineComponent* Timeline_1; // 0x258
	TArray<AStormLight_Blueprint_C*> Lights; // 0x260
	TArray<AStaticMeshActor*> Windows; // 0x270
	TArray<ABP_LightBeam_C*> LightBeams; // 0x280
	float RandomTime; // 0x290
	float Time; // 0x294
	float LightsIntense; // 0x298
	float BeamsBrightness; // 0x29c
	UMaterialInstanceDynamic* NewVar_1; // 0x2a0
	UMaterialInterface* NewVar_2; // 0x2a8
	FLinearColor NewVar_3; // 0x2b0
	int32_t ThunderType; // 0x2c0
	float Volume; // 0x2c4
	bool JustSound; // 0x2c8
	bool Block; // 0x2c9
};

struct UBTDecorator_ConeCheck : UBTDecorator {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector ConeDirection; // 0x98
	FBlackboardKeySelector Observed; // 0xc0
};

struct UEngine : UObject {
	UFont* TinyFont; // 0x30
	FSoftObjectPath TinyFontName; // 0x38
	UFont* SmallFont; // 0x50
	FSoftObjectPath SmallFontName; // 0x58
	UFont* MediumFont; // 0x70
	FSoftObjectPath MediumFontName; // 0x78
	UFont* LargeFont; // 0x90
	FSoftObjectPath LargeFontName; // 0x98
	UFont* SubtitleFont; // 0xb0
	FSoftObjectPath SubtitleFontName; // 0xb8
	TArray<UFont*> AdditionalFonts; // 0xd0
	TArray<FString> AdditionalFontNames; // 0xe0
	UConsole* ConsoleClass; // 0xf0
	FSoftClassPath ConsoleClassName; // 0xf8
	UGameViewportClient* GameViewportClientClass; // 0x110
	FSoftClassPath GameViewportClientClassName; // 0x118
	ULocalPlayer* LocalPlayerClass; // 0x130
	FSoftClassPath LocalPlayerClassName; // 0x138
	AWorldSettings* WorldSettingsClass; // 0x150
	FSoftClassPath WorldSettingsClassName; // 0x158
	FSoftClassPath NavigationSystemClassName; // 0x170
	UNavigationSystemBase* NavigationSystemClass; // 0x188
	FSoftClassPath NavigationSystemConfigClassName; // 0x190
	UNavigationSystemConfig* NavigationSystemConfigClass; // 0x1a8
	FSoftClassPath AvoidanceManagerClassName; // 0x1b0
	UAvoidanceManager* AvoidanceManagerClass; // 0x1c8
	FSoftClassPath AIControllerClassName; // 0x1d0
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x1e8
	FSoftClassPath PhysicsCollisionHandlerClassName; // 0x1f0
	FSoftClassPath GameUserSettingsClassName; // 0x208
	UGameUserSettings* GameUserSettingsClass; // 0x220
	UGameUserSettings* GameUserSettings; // 0x228
	ALevelScriptActor* LevelScriptActorClass; // 0x230
	FSoftClassPath LevelScriptActorClassName; // 0x238
	FSoftClassPath DefaultBlueprintBaseClassName; // 0x250
	FSoftClassPath GameSingletonClassName; // 0x268
	UObject* GameSingleton; // 0x280
	FSoftClassPath AssetManagerClassName; // 0x288
	UAssetManager* AssetManager; // 0x2a0
	UTexture2D* DefaultTexture; // 0x2a8
	FSoftObjectPath DefaultTextureName; // 0x2b0
	UTexture* DefaultDiffuseTexture; // 0x2c8
	FSoftObjectPath DefaultDiffuseTextureName; // 0x2d0
	UTexture2D* DefaultBSPVertexTexture; // 0x2e8
	FSoftObjectPath DefaultBSPVertexTextureName; // 0x2f0
	UTexture2D* HighFrequencyNoiseTexture; // 0x308
	FSoftObjectPath HighFrequencyNoiseTextureName; // 0x310
	UTexture2D* DefaultBokehTexture; // 0x328
	FSoftObjectPath DefaultBokehTextureName; // 0x330
	UTexture2D* DefaultBloomKernelTexture; // 0x348
	FSoftObjectPath DefaultBloomKernelTextureName; // 0x350
	UMaterial* WireframeMaterial; // 0x368
	FString WireframeMaterialName; // 0x370
	UMaterial* DebugMeshMaterial; // 0x380
	FSoftObjectPath DebugMeshMaterialName; // 0x388
	UMaterial* EmissiveMeshMaterial; // 0x3a0
	FSoftObjectPath EmissiveMeshMaterialName; // 0x3a8
	UMaterial* LevelColorationLitMaterial; // 0x3c0
	FString LevelColorationLitMaterialName; // 0x3c8
	UMaterial* LevelColorationUnlitMaterial; // 0x3d8
	FString LevelColorationUnlitMaterialName; // 0x3e0
	UMaterial* LightingTexelDensityMaterial; // 0x3f0
	FString LightingTexelDensityName; // 0x3f8
	UMaterial* ShadedLevelColorationLitMaterial; // 0x408
	FString ShadedLevelColorationLitMaterialName; // 0x410
	UMaterial* ShadedLevelColorationUnlitMaterial; // 0x420
	FString ShadedLevelColorationUnlitMaterialName; // 0x428
	UMaterial* RemoveSurfaceMaterial; // 0x438
	FSoftObjectPath RemoveSurfaceMaterialName; // 0x440
	UMaterial* VertexColorMaterial; // 0x458
	FString VertexColorMaterialName; // 0x460
	UMaterial* VertexColorViewModeMaterial_ColorOnly; // 0x470
	FString VertexColorViewModeMaterialName_ColorOnly; // 0x478
	UMaterial* VertexColorViewModeMaterial_AlphaAsColor; // 0x488
	FString VertexColorViewModeMaterialName_AlphaAsColor; // 0x490
	UMaterial* VertexColorViewModeMaterial_RedOnly; // 0x4a0
	FString VertexColorViewModeMaterialName_RedOnly; // 0x4a8
	UMaterial* VertexColorViewModeMaterial_GreenOnly; // 0x4b8
	FString VertexColorViewModeMaterialName_GreenOnly; // 0x4c0
	UMaterial* VertexColorViewModeMaterial_BlueOnly; // 0x4d0
	FString VertexColorViewModeMaterialName_BlueOnly; // 0x4d8
	FSoftObjectPath DebugEditorMaterialName; // 0x4e8
	UMaterial* ConstraintLimitMaterial; // 0x500
	UMaterialInstanceDynamic* ConstraintLimitMaterialX; // 0x508
	UMaterialInstanceDynamic* ConstraintLimitMaterialXAxis; // 0x510
	UMaterialInstanceDynamic* ConstraintLimitMaterialY; // 0x518
	UMaterialInstanceDynamic* ConstraintLimitMaterialYAxis; // 0x520
	UMaterialInstanceDynamic* ConstraintLimitMaterialZ; // 0x528
	UMaterialInstanceDynamic* ConstraintLimitMaterialZAxis; // 0x530
	UMaterialInstanceDynamic* ConstraintLimitMaterialPrismatic; // 0x538
	UMaterial* InvalidLightmapSettingsMaterial; // 0x540
	FSoftObjectPath InvalidLightmapSettingsMaterialName; // 0x548
	UMaterial* PreviewShadowsIndicatorMaterial; // 0x560
	FSoftObjectPath PreviewShadowsIndicatorMaterialName; // 0x568
	UMaterial* ArrowMaterial; // 0x580
	UMaterialInstanceDynamic* ArrowMaterialYellow; // 0x588
	FSoftObjectPath ArrowMaterialName; // 0x590
	FLinearColor LightingOnlyBrightness; // 0x5a8
	TArray<FLinearColor> ShaderComplexityColors; // 0x5b8
	TArray<FLinearColor> QuadComplexityColors; // 0x5c8
	TArray<FLinearColor> LightComplexityColors; // 0x5d8
	TArray<FLinearColor> StationaryLightOverlapColors; // 0x5e8
	TArray<FLinearColor> LODColorationColors; // 0x5f8
	TArray<FLinearColor> HLODColorationColors; // 0x608
	TArray<FLinearColor> StreamingAccuracyColors; // 0x618
	float MaxPixelShaderAdditiveComplexityCount; // 0x628
	float MaxES3PixelShaderAdditiveComplexityCount; // 0x62c
	float MinLightMapDensity; // 0x630
	float IdealLightMapDensity; // 0x634
	float MaxLightMapDensity; // 0x638
	char bRenderLightMapDensityGrayscale : 1; // 0x63c
	float RenderLightMapDensityGrayscaleScale; // 0x640
	float RenderLightMapDensityColorScale; // 0x644
	FLinearColor LightMapDensityVertexMappedColor; // 0x648
	FLinearColor LightMapDensitySelectedColor; // 0x658
	TArray<FStatColorMapping> StatColorMappings; // 0x668
	UPhysicalMaterial* DefaultPhysMaterial; // 0x678
	FSoftObjectPath DefaultPhysMaterialName; // 0x680
	TArray<FGameNameRedirect> ActiveGameNameRedirects; // 0x698
	TArray<FClassRedirect> ActiveClassRedirects; // 0x6a8
	TArray<FPluginRedirect> ActivePluginRedirects; // 0x6b8
	TArray<FStructRedirect> ActiveStructRedirects; // 0x6c8
	UTexture2D* PreIntegratedSkinBRDFTexture; // 0x6d8
	FSoftObjectPath PreIntegratedSkinBRDFTextureName; // 0x6e0
	UTexture2D* BlueNoiseTexture; // 0x6f8
	FSoftObjectPath BlueNoiseTextureName; // 0x700
	UTexture2D* MiniFontTexture; // 0x718
	FSoftObjectPath MiniFontTextureName; // 0x720
	UTexture* WeightMapPlaceholderTexture; // 0x738
	FSoftObjectPath WeightMapPlaceholderTextureName; // 0x740
	UTexture2D* LightMapDensityTexture; // 0x758
	FSoftObjectPath LightMapDensityTextureName; // 0x760
	UGameViewportClient* GameViewport; // 0x780
	TArray<FString> DeferredCommands; // 0x788
	float NearClipPlane; // 0x798
	char bSubtitlesEnabled : 1; // 0x79c
	char bSubtitlesForcedOff : 1; // 0x79c
	int32_t MaximumLoopIterationCount; // 0x7a0
	char bCanBlueprintsTickByDefault : 1; // 0x7a4
	char bOptimizeAnimBlueprintMemberVariableAccess : 1; // 0x7a4
	char bAllowMultiThreadedAnimationUpdate : 1; // 0x7a4
	char bEnableEditorPSysRealtimeLOD : 1; // 0x7a4
	char bSmoothFrameRate : 1; // 0x7a4
	char bUseFixedFrameRate : 1; // 0x7a4
	float FixedFrameRate; // 0x7a8
	FFloatRange SmoothedFrameRateRange; // 0x7ac
	UEngineCustomTimeStep* CustomTimeStep; // 0x7c0
	FSoftClassPath CustomTimeStepClassName; // 0x7e8
	UTimecodeProvider* TimecodeProvider; // 0x800
	FSoftClassPath TimecodeProviderClassName; // 0x828
	bool bGenerateDefaultTimecode; // 0x840
	FFrameRate GenerateDefaultTimecodeFrameRate; // 0x844
	float GenerateDefaultTimecodeFrameDelay; // 0x84c
	char bCheckForMultiplePawnsSpawnedInAFrame : 1; // 0x850
	int32_t NumPawnsAllowedToBeSpawnedInAFrame; // 0x854
	char bShouldGenerateLowQualityLightmaps : 1; // 0x858
	FColor C_WorldBox; // 0x85c
	FColor C_BrushWire; // 0x860
	FColor C_AddWire; // 0x864
	FColor C_SubtractWire; // 0x868
	FColor C_SemiSolidWire; // 0x86c
	FColor C_NonSolidWire; // 0x870
	FColor C_WireBackground; // 0x874
	FColor C_ScaleBoxHi; // 0x878
	FColor C_VolumeCollision; // 0x87c
	FColor C_BSPCollision; // 0x880
	FColor C_OrthoBackground; // 0x884
	FColor C_Volume; // 0x888
	FColor C_BrushShape; // 0x88c
	float StreamingDistanceFactor; // 0x890
	FDirectoryPath GameScreenshotSaveDirectory; // 0x898
	ETransitionType TransitionType; // 0x8a8
	FString TransitionDescription; // 0x8b0
	FString TransitionGameMode; // 0x8c0
	char bAllowMatureLanguage : 1; // 0x8d0
	float CameraRotationThreshold; // 0x8d4
	float CameraTranslationThreshold; // 0x8d8
	float PrimitiveProbablyVisibleTime; // 0x8dc
	float MaxOcclusionPixelsFraction; // 0x8e0
	char bPauseOnLossOfFocus : 1; // 0x8e4
	int32_t MaxParticleResize; // 0x8e8
	int32_t MaxParticleResizeWarn; // 0x8ec
	TArray<FDropNoteInfo> PendingDroppedNotes; // 0x8f0
	float NetClientTicksPerSecond; // 0x900
	float DisplayGamma; // 0x904
	float MinDesiredFrameRate; // 0x908
	FLinearColor DefaultSelectedMaterialColor; // 0x90c
	FLinearColor SelectedMaterialColor; // 0x91c
	FLinearColor SelectionOutlineColor; // 0x92c
	FLinearColor SubduedSelectionOutlineColor; // 0x93c
	FLinearColor SelectedMaterialColorOverride; // 0x94c
	bool bIsOverridingSelectedColor; // 0x95c
	char bEnableOnScreenDebugMessages : 1; // 0x960
	char bEnableOnScreenDebugMessagesDisplay : 1; // 0x960
	char bSuppressMapWarnings : 1; // 0x960
	char bDisableAILogging : 1; // 0x960
	uint32_t bEnableVisualLogRecordingOnStart; // 0x964
	int32_t ScreenSaverInhibitorSemaphore; // 0x968
	char bLockReadOnlyLevels : 1; // 0x96c
	FString ParticleEventManagerClassPath; // 0x970
	float SelectionHighlightIntensity; // 0x980
	float BSPSelectionHighlightIntensity; // 0x984
	float SelectionHighlightIntensityBillboards; // 0x988
	TArray<FNetDriverDefinition> NetDriverDefinitions; // 0xbf8
	TArray<FString> ServerActors; // 0xc08
	TArray<FString> RuntimeServerActors; // 0xc18
	float NetErrorLogInterval; // 0xc28
	char bStartedLoadMapMovie : 1; // 0xc2c
	int32_t NextWorldContextHandle; // 0xc48
};

struct USkyLightComponent : ULightComponentBase {
	bool bRealTimeCapture; // 0x228
	ESkyLightSourceType SourceType; // 0x229
	UTextureCube* Cubemap; // 0x230
	float SourceCubemapAngle; // 0x238
	int32_t CubemapResolution; // 0x23c
	float SkyDistanceThreshold; // 0x240
	bool bCaptureEmissiveOnly; // 0x244
	bool bLowerHemisphereIsBlack; // 0x245
	FLinearColor LowerHemisphereColor; // 0x248
	float OcclusionMaxDistance; // 0x258
	float Contrast; // 0x25c
	float OcclusionExponent; // 0x260
	float MinOcclusion; // 0x264
	FColor OcclusionTint; // 0x268
	char bCloudAmbientOcclusion : 1; // 0x26c
	float CloudAmbientOcclusionStrength; // 0x270
	float CloudAmbientOcclusionExtent; // 0x274
	float CloudAmbientOcclusionMapResolutionScale; // 0x278
	float CloudAmbientOcclusionApertureScale; // 0x27c
	EOcclusionCombineMode OcclusionCombineMode; // 0x280
	UTextureCube* BlendDestinationCubemap; // 0x338
};

struct UVectorFieldComponent : UPrimitiveComponent {
	UVectorField* VectorField; // 0x440
	float Intensity; // 0x448
	float Tightness; // 0x44c
	char bPreviewVectorField : 1; // 0x450
};

struct ARadialForceActor : ARigidBodyBase {
	URadialForceComponent* ForceComponent; // 0x220
};

struct UDrawFrustumComponent : UPrimitiveComponent {
	FColor FrustumColor; // 0x440
	float FrustumAngle; // 0x444
	float FrustumAspectRatio; // 0x448
	float FrustumStartDist; // 0x44c
	float FrustumEndDist; // 0x450
	UTexture* Texture; // 0x458
};

struct UAsyncActionLoadPrimaryAssetList : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UMaterialExpressionRuntimeVirtualTextureSampleParameter : UMaterialExpressionRuntimeVirtualTextureSample {
	FName ParameterName; // 0x90
	FGuid ExpressionGUID; // 0x98
	FName Group; // 0xa8
};

struct ABP_AudioActor_SoundSpawner_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USphereComponent* Sphere; // 0x228
	USceneComponent* DefaultSceneRoot; // 0x230
	USoundBase* SoundToSpawn; // 0x238
	int32_t NumberOfSpawns; // 0x240
	float MinTimer; // 0x244
	float MaxTimer; // 0x248
	int32_t MinSpawns; // 0x24c
	int32_t MaxSpawns; // 0x250
	bool bAutoStart; // 0x254
	bool bRepeat; // 0x255
	float VolumeScale; // 0x258
	float PitchScale; // 0x25c
	int32_t SpawnCounter; // 0x260
	float MinStepDuration; // 0x264
	float MaxStepDuration; // 0x268
	float MinVolumeRange; // 0x26c
	float MaxVolumeRange; // 0x270
	float MinPitchRange; // 0x274
	float MaxPitchRange; // 0x278
	USoundAttenuation* AttenuationSettings; // 0x280
	USoundConcurrency* ConcurrencySettings; // 0x288
	bool bIncludeHeight; // 0x290
	float SpawnRadius; // 0x294
	bool bContinueSpawner; // 0x298
	FVector PhraseLocation; // 0x29c
	bool bDelayFirstTime; // 0x2a8
};

struct UFieldSystemComponent : UPrimitiveComponent {
	UFieldSystem* FieldSystem; // 0x440
	TArray<TSoftObjectPtr<AChaosSolverActor>> SupportedSolvers; // 0x458
};

struct UMaterialExpressionDecalMipmapLevel : UMaterialExpression {
	FExpressionInput TextureSize; // 0x40
	float ConstWidth; // 0x54
	float ConstHeight; // 0x58
};

struct AARSharedWorldGameMode : AGameMode {
	int32_t BufferSizePerChunk; // 0x308
};

struct UMaterialExpressionTransformPosition : UMaterialExpression {
	FExpressionInput Input; // 0x40
	EMaterialPositionTransformSource TransformSourceType; // 0x54
	EMaterialPositionTransformSource TransformType; // 0x55
};

struct UPhysicalMaterialMask : UObject {
	int32_t UVChannelIndex; // 0x28
	TextureAddress AddressX; // 0x2c
	TextureAddress AddressY; // 0x2d
};

struct UNiagaraDataInterfaceArrayQuat : UNiagaraDataInterfaceArray {
	TArray<FQuat> QuatData; // 0x50
};

struct UPaperFlipbookComponent : UMeshComponent {
	UPaperFlipbook* SourceFlipbook; // 0x468
	UMaterialInterface* Material; // 0x470
	float PlayRate; // 0x478
	char bLooping : 1; // 0x47c
	char bReversePlayback : 1; // 0x47c
	char bPlaying : 1; // 0x47c
	float AccumulatedTime; // 0x480
	int32_t CachedFrameIndex; // 0x484
	FLinearColor SpriteColor; // 0x488
	UBodySetup* CachedBodySetup; // 0x498
	FMulticastInlineDelegate OnFinishedPlaying; // 0x4a0
};

struct UBlackboardKeyType_String : UBlackboardKeyType {
	FString StringValue; // 0x30
};

struct UGeometryCacheTrack : UObject {
	float Duration; // 0x28
};

struct UMultiLineEditableTextBox : UTextLayoutWidget {
	FText Text; // 0x128
	FText HintText; // 0x140
	FDelegate HintTextDelegate; // 0x158
	FEditableTextBoxStyle WidgetStyle; // 0x168
	FTextBlockStyle TextStyle; // 0x960
	bool bIsReadOnly; // 0xbd0
	bool AllowContextMenu; // 0xbd1
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0xbd2
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xbd3
	USlateWidgetStyleAsset* Style; // 0xbd8
	FSlateFontInfo Font; // 0xbe0
	FLinearColor ForegroundColor; // 0xc38
	FLinearColor BackgroundColor; // 0xc48
	FLinearColor ReadOnlyForegroundColor; // 0xc58
	FMulticastInlineDelegate OnTextChanged; // 0xc68
	FMulticastInlineDelegate OnTextCommitted; // 0xc78
};

struct UMaterialExpressionSceneDepthWithoutWater : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FVector2D ConstInput; // 0x58
	float FallbackDepth; // 0x60
};

struct UAISenseConfig_Blueprint : UAISenseConfig {
	UAISense_Blueprint* Implementation; // 0x48
};

struct ALuminAROrigin : AAROriginActor {
	UMRMeshComponent* MRMeshComponent; // 0x220
	UMaterialInterface* PlaneSurfaceMaterial; // 0x228
	UMaterialInterface* WireframeMaterial; // 0x230
};

struct UNiagaraDataInterfaceCurveBase : UNiagaraDataInterface {
	TArray<float> ShaderLUT; // 0x38
	float LUTMinTime; // 0x48
	float LUTMaxTime; // 0x4c
	float LUTInvTimeRange; // 0x50
	float LUTNumSamplesMinusOne; // 0x54
	char bUseLUT : 1; // 0x58
	char bExposeCurve : 1; // 0x58
	FName ExposedName; // 0x5c
	UTexture2D* ExposedTexture; // 0x68
};

struct UFoliageType : UObject {
	FGuid UpdateGuid; // 0x28
	float Density; // 0x38
	float DensityAdjustmentFactor; // 0x3c
	float Radius; // 0x40
	bool bSingleInstanceModeOverrideRadius; // 0x44
	float SingleInstanceModeRadius; // 0x48
	EFoliageScaling Scaling; // 0x4c
	FFloatInterval ScaleX; // 0x50
	FFloatInterval ScaleY; // 0x58
	FFloatInterval ScaleZ; // 0x60
	FFoliageVertexColorChannelMask VertexColorMaskByChannel[0x4]; // 0x68
	FoliageVertexColorMask VertexColorMask; // 0x98
	float VertexColorMaskThreshold; // 0x9c
	char VertexColorMaskInvert : 1; // 0xa0
	FFloatInterval ZOffset; // 0xa4
	char AlignToNormal : 1; // 0xac
	float AlignMaxAngle; // 0xb0
	char RandomYaw : 1; // 0xb4
	float RandomPitchAngle; // 0xb8
	FFloatInterval GroundSlopeAngle; // 0xbc
	FFloatInterval Height; // 0xc4
	TArray<FName> LandscapeLayers; // 0xd0
	float MinimumLayerWeight; // 0xe0
	TArray<FName> ExclusionLandscapeLayers; // 0xe8
	float MinimumExclusionLayerWeight; // 0xf8
	FName LandscapeLayer; // 0xfc
	char CollisionWithWorld : 1; // 0x104
	FVector CollisionScale; // 0x108
	FBoxSphereBounds MeshBounds; // 0x114
	FVector LowBoundOriginRadius; // 0x130
	EComponentMobility Mobility; // 0x13c
	FInt32Interval CullDistance; // 0x140
	char bEnableStaticLighting : 1; // 0x148
	char CastShadow : 1; // 0x148
	char bAffectDynamicIndirectLighting : 1; // 0x148
	char bAffectDistanceFieldLighting : 1; // 0x148
	char bCastDynamicShadow : 1; // 0x148
	char bCastStaticShadow : 1; // 0x148
	char bCastShadowAsTwoSided : 1; // 0x148
	char bReceivesDecals : 1; // 0x148
	char bOverrideLightMapRes : 1; // 0x149
	int32_t OverriddenLightMapRes; // 0x14c
	ELightmapType LightmapType; // 0x150
	char bUseAsOccluder : 1; // 0x154
	FBodyInstance BodyInstance; // 0x158
	EHasCustomNavigableGeometry CustomNavigableGeometry; // 0x2b0
	FLightingChannels LightingChannels; // 0x2b1
	char bRenderCustomDepth : 1; // 0x2b4
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x2b8
	int32_t CustomDepthStencilValue; // 0x2bc
	int32_t TranslucencySortPriority; // 0x2c0
	float CollisionRadius; // 0x2c4
	float ShadeRadius; // 0x2c8
	int32_t NumSteps; // 0x2cc
	float InitialSeedDensity; // 0x2d0
	float AverageSpreadDistance; // 0x2d4
	float SpreadVariance; // 0x2d8
	int32_t SeedsPerStep; // 0x2dc
	int32_t DistributionSeed; // 0x2e0
	float MaxInitialSeedOffset; // 0x2e4
	bool bCanGrowInShade; // 0x2e8
	bool bSpawnsInShade; // 0x2e9
	float MaxInitialAge; // 0x2ec
	float MaxAge; // 0x2f0
	float OverlapPriority; // 0x2f4
	FFloatInterval ProceduralScale; // 0x2f8
	FRuntimeFloatCurve ScaleCurve; // 0x300
	int32_t ChangeCount; // 0x388
	char ReapplyDensity : 1; // 0x38c
	char ReapplyRadius : 1; // 0x38c
	char ReapplyAlignToNormal : 1; // 0x38c
	char ReapplyRandomYaw : 1; // 0x38c
	char ReapplyScaling : 1; // 0x38c
	char ReapplyScaleX : 1; // 0x38c
	char ReapplyScaleY : 1; // 0x38c
	char ReapplyScaleZ : 1; // 0x38c
	char ReapplyRandomPitchAngle : 1; // 0x38d
	char ReapplyGroundSlope : 1; // 0x38d
	char ReapplyHeight : 1; // 0x38d
	char ReapplyLandscapeLayers : 1; // 0x38d
	char ReapplyZOffset : 1; // 0x38d
	char ReapplyCollisionWithWorld : 1; // 0x38d
	char ReapplyVertexColorMask : 1; // 0x38d
	char bEnableDensityScaling : 1; // 0x38d
	char bEnableDiscardOnLoad : 1; // 0x38e
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x390
	int32_t VirtualTextureCullMips; // 0x3a0
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x3a4
};

struct UInteractiveTool : UObject {
	UInputBehaviorSet* InputBehaviors; // 0x48
	TArray<UObject*> ToolPropertyObjects; // 0x50
};

struct AMagicLeapSharedWorldGameState : AGameState {
	FMagicLeapSharedWorldSharedData SharedWorldData; // 0x290
	FMagicLeapSharedWorldAlignmentTransforms AlignmentTransforms; // 0x2a0
	FMulticastInlineDelegate OnSharedWorldDataUpdated; // 0x2b0
	FMulticastInlineDelegate OnAlignmentTransformsUpdated; // 0x2c0
};

struct ULevelStreaming : UObject {
	TSoftObjectPtr<UWorld> WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int32_t LevelLODIndex; // 0xb0
	int32_t StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xba
	char bShouldBeLoaded : 1; // 0xba
	char bLocked : 1; // 0xba
	char bIsStatic : 1; // 0xba
	char bShouldBlockOnLoad : 1; // 0xba
	char bShouldBlockOnUnload : 1; // 0xbb
	char bDisableDistanceStreaming : 1; // 0xbb
	char bDrawOnLevelStatusMap : 1; // 0xbb
	FLinearColor LevelColor; // 0xbc
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd0
	float MinTimeBetweenVolumeUnloadRequests; // 0xe0
	FMulticastInlineDelegate OnLevelLoaded; // 0xe8
	FMulticastInlineDelegate OnLevelUnloaded; // 0xf8
	FMulticastInlineDelegate OnLevelShown; // 0x108
	FMulticastInlineDelegate OnLevelHidden; // 0x118
	ULevel* LoadedLevel; // 0x128
	ULevel* PendingUnloadLevel; // 0x130
};

struct UNavigationDataChunk : UObject {
	FName NavigationDataName; // 0x28
};

struct UGridPanel : UPanelWidget {
	TArray<float> ColumnFill; // 0x120
	TArray<float> RowFill; // 0x130
};

struct UNavigationGraphNodeComponent : USceneComponent {
	FNavGraphNode Node; // 0x1f8
	UNavigationGraphNodeComponent* NextNodeComponent; // 0x210
	UNavigationGraphNodeComponent* PrevNodeComponent; // 0x218
};

struct UInterpTrackVectorMaterialParam : UInterpTrackVectorBase {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct UParticleModuleColor_Seeded : UParticleModuleColor {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct UIconAbilityCooldownWBP_Doppelganger_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FadeIn_1; // 0x268
	UWidgetAnimation* FadeIn; // 0x270
	UImage* BG; // 0x278
	UImage* BG_2; // 0x280
	UImage* BG_3; // 0x288
	UImage* BG_4; // 0x290
	UBorder* Border_AbilityIcon; // 0x298
	UBorder* Border_AbilityIcon_2; // 0x2a0
	UBorder* Border_AbilityIcon_3; // 0x2a8
	UBorder* Border_AbilityIcon_4; // 0x2b0
	UBorder* Border_AbilityIcon_5; // 0x2b8
	UImage* Image_122; // 0x2c0
	UTextBlock* TextBlock; // 0x2c8
	UTextBlock* TextBlock_2; // 0x2d0
	UTextBlock* TextBlock_3; // 0x2d8
	UTextBlock* TextBlock_106; // 0x2e0
	UTextBlock* TextBlock_162; // 0x2e8
	UWidgetSwitcher* WidgetSwitcher_1; // 0x2f0
	UWidgetSwitcher* WidgetSwitcher_Main; // 0x2f8
	UMaterialInstanceDynamic* Material INstance; // 0x300
};

struct UMaterialExpressionTextureSampleParameter : UMaterialExpressionTextureSample {
	FName ParameterName; // 0x60
	FGuid ExpressionGUID; // 0x68
	FName Group; // 0x78
};

struct UNiagaraDataInterfaceGrid3D : UNiagaraDataInterfaceRWBase {
	FIntVector NumCells; // 0xd8
	float CellSize; // 0xe4
	int32_t NumCellsMaxAxis; // 0xe8
	ESetResolutionMethod SetResolutionMethod; // 0xec
	FVector WorldBBoxSize; // 0xf0
};

struct UEOSCoreStatsIngestStat : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UPhysicalAnimationComponent : UActorComponent {
	float StrengthMultiplyer; // 0xb0
	USkeletalMeshComponent* SkeletalMeshComponent; // 0xb8
};

struct UInterpData : UObject {
	float InterpLength; // 0x28
	float PathBuildTime; // 0x2c
	TArray<UInterpGroup*> InterpGroups; // 0x30
	UInterpCurveEdSetup* CurveEdSetup; // 0x40
	float EdSectionStart; // 0x48
	float EdSectionEnd; // 0x4c
	char bShouldBakeAndPrune : 1; // 0x50
	UInterpGroupDirector* CachedDirectorGroup; // 0x58
	TArray<FName> AllEventNames; // 0x60
};

struct ULevelSequenceDirector : UObject {
	ULevelSequencePlayer* Player; // 0x28
};

struct UMaterialExpressionTextureProperty : UMaterialExpression {
	FExpressionInput TextureObject; // 0x40
	EMaterialExposedTextureProperty Property; // 0x54
};

struct AIntroRail_C : ACameraRig_Rail {
	FPointerToUberGraphFrame UberGraphFrame; // 0x240
	URectLightComponent* RectLight2; // 0x248
	URectLightComponent* RectLight; // 0x250
	URectLightComponent* RectLight1; // 0x258
	UCineCameraComponent* CineCamera; // 0x260
	USceneComponent* TargetPoint; // 0x268
	float StartTimeline_Focus_Distance_83FB9F8F401897F4D30BEAB0968C1557; // 0x270
	float StartTimeline_Alpha_83FB9F8F401897F4D30BEAB0968C1557; // 0x274
	ETimelineDirection StartTimeline__Direction_83FB9F8F401897F4D30BEAB0968C1557; // 0x278
	UTimelineComponent* StartTimeline; // 0x280
	bool Nicknames?; // 0x288
	bool forKiller; // 0x289
};

struct USoundNodeAttenuation : USoundNode {
	USoundAttenuation* AttenuationSettings; // 0x48
	FSoundAttenuationSettings AttenuationOverrides; // 0x50
	char bOverrideAttenuation : 1; // 0x3f0
};

struct UPhysicsSpringComponent : USceneComponent {
	float SpringStiffness; // 0x1f8
	float SpringDamping; // 0x1fc
	float SpringLengthAtRest; // 0x200
	float SpringRadius; // 0x204
	ECollisionChannel SpringChannel; // 0x208
	bool bIgnoreSelf; // 0x209
	float SpringCompression; // 0x20c
};

struct UMaterialExpressionMultiply : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct AMineKnife_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UBoxComponent* Box1; // 0x228
	UNiagaraComponent* PN_Ribbon; // 0x230
	UBoxComponent* Box; // 0x238
	UFMODAudioComponent* FmodAudio; // 0x240
	UParticleSystemComponent* P_MineHit; // 0x248
	UStaticMeshComponent* knife; // 0x250
	UStaticMeshComponent* InvisibilityMesh; // 0x258
	USmoothSync* SmoothSync; // 0x260
	UProjectileMovementComponent* ProjectileMovement; // 0x268
	USceneComponent* DefaultSceneRoot; // 0x270
	UCapsuleComponent* Target; // 0x278
	AKillerMasterBP_C* Killer; // 0x280
	ASurvivorMasterBP_C* Surv; // 0x288
	AActor* Other Actor; // 0x290
	int32_t MineDamage; // 0x298
	bool Collision; // 0x29c
};

struct UBansheeLobbyAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_RandomPlayer AnimGraphNode_RandomPlayer_2; // 0x2c8
	FAnimNode_RandomPlayer AnimGraphNode_RandomPlayer; // 0x340
	FAnimNode_Root AnimGraphNode_Root; // 0x3b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x3e8
	bool Ready?; // 0x488
	bool Reset?; // 0x489
};

struct UNewKeyMasterAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0x2f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0x318
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0x340
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0x368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x390
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x3b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x3e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x430
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x458
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x480
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x4a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x4d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x4f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x520
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x548
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x570
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x5c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x5e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x610
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x638
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x688
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x6b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x6d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x700
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x728
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x750
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x778
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x7a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x7c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x7f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x818
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x840
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x868
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x890
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x8b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x8e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x908
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x930
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x958
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x980
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x9a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x9d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x9f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0xa20
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_11; // 0xa48
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8; // 0xb30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0xbf0
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0xc70
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_10; // 0xca0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7; // 0xd88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0xe48
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0xec8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0xef8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0xf78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x1018
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x1098
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x10c8
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x1148
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x1178
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x11f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x1228
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x12a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x12d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x1358
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0x1440
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1500
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x1530
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x15b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x15e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x1660
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0x1748
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x1808
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x1838
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0x1920
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x19e0
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x1ac8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x1af8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1b78
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_5; // 0x1bf8
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x1cc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x1cf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x1d70
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x1df0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x1eb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x1ee8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x1f68
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x1fe8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x20b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x20e0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x21a0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x2260
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x2348
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x2430
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x24f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x2578
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x25f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x2698
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x2738
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2820
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x28a0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x2960
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x2a48
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x2b30
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x2bf8
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x2c28
	FAnimNode_Root AnimGraphNode_Root; // 0x2cd8
	bool IsOnAir?; // 0x2d08
	bool Attak; // 0x2d09
	bool IsOwner?; // 0x2d0a
	float Speed; // 0x2d0c
	float Direction; // 0x2d10
	float IsHolded; // 0x2d14
	bool JumpEndChek; // 0x2d18
	bool FIRE; // 0x2d19
	bool Plant; // 0x2d1a
	bool Flashed; // 0x2d1b
	float Vertical rotation; // 0x2d1c
	float HorizontalValue; // 0x2d20
	float SpeedChek; // 0x2d24
	int32_t KillerType; // 0x2d28
	bool Drop; // 0x2d2c
	bool ChairDrop; // 0x2d2d
	bool Catch; // 0x2d2e
	bool Runaway; // 0x2d2f
	FRotator HeadR; // 0x2d30
	bool bTurnL; // 0x2d3c
	bool bTurnR; // 0x2d3d
	AKeymaster_C* KillerRef; // 0x2d40
	int32_t TypeAttack; // 0x2d48
	bool MarioStun; // 0x2d4c
	bool PropHunt?; // 0x2d4d
	bool Get Ready; // 0x2d4e
	FTransform Effector Transform; // 0x2d50
	float SpeedRateF; // 0x2d80
	FTransform HammerLocation; // 0x2d90
};

struct UCurse_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	float DelayTime; // 0xf0
	bool PlantRdy?; // 0xf4
};

struct ANavigationData : AActor {
	UPrimitiveComponent* RenderingComp; // 0x228
	FNavDataConfig NavDataConfig; // 0x230
	char bEnableDrawing : 1; // 0x2a8
	char bForceRebuildOnLoad : 1; // 0x2a8
	char bAutoDestroyWhenNoNavigation : 1; // 0x2a8
	char bCanBeMainNavData : 1; // 0x2a8
	char bCanSpawnOnRebuild : 1; // 0x2a8
	char bRebuildAtRuntime : 1; // 0x2a8
	ERuntimeGenerationType RuntimeGeneration; // 0x2ac
	float ObservedPathsTickInterval; // 0x2b0
	uint32_t DataVersion; // 0x2b4
	TArray<FSupportedAreaData> SupportedAreas; // 0x3c0
};

struct UPlayFabAuthenticationAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xa8
	UPlayFabJsonObject* RequestJsonObj; // 0xb0
	UPlayFabJsonObject* ResponseJsonObj; // 0xb8
};

struct AWaitLobbyBlock_C : AActor {
	UStaticMeshComponent* Cube; // 0x220
	USceneComponent* DefaultSceneRoot; // 0x228
};

struct UOnlinePIESettings : UDeveloperSettings {
	bool bOnlinePIEEnabled; // 0x38
	TArray<FPIELoginSettingsInternal> Logins; // 0x40
};

struct UNiagaraComponentSettings : UObject {
	TSet<FName> SuppressActivationList; // 0x28
	TSet<FName> ForceAutoPooolingList; // 0x78
	TSet<FNiagaraEmitterNameSettingsRef> SuppressEmitterList; // 0xc8
};

struct UInterpTrackFloatMaterialParam : UInterpTrackFloatBase {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct UW_PlayCard_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Click_Blocked_Anim; // 0x268
	UWidgetAnimation* Hover_Blocked_Anim; // 0x270
	UWidgetAnimation* Hover_Anim_Lobby; // 0x278
	UHorizontalBox* HorizontalBox_MatchmakingContent; // 0x280
	UImage* Image_90; // 0x288
	UImage* Image_112; // 0x290
	UImage* Image_125; // 0x298
	UImage* Image_BG; // 0x2a0
	UImage* Image_ContentBG; // 0x2a8
	UImage* Image_Gradient; // 0x2b0
	UImage* Image_IconMMR; // 0x2b8
	UOverlay* Overlay_Content; // 0x2c0
	USizeBox* SizeBox_Card; // 0x2c8
	USizeBox* SizeBox_Content; // 0x2d0
	UTextBlock* TextBlock_Content; // 0x2d8
	UTextBlock* TextBlock_Header; // 0x2e0
	UVerticalBox* VerticalBox_MatchmakingHeader; // 0x2e8
	FName CardType; // 0x2f0
	FMulticastInlineDelegate SearchGame_OnClicked; // 0x2f8
	FMulticastInlineDelegate CreateGame_OnClicked; // 0x308
	FMulticastInlineDelegate ServerBrowser_OnClicked; // 0x318
	bool LobbyAnimation?; // 0x328
	bool IsBlocked; // 0x329
	UW_PlayCardContent_C* ContentWidgetRef; // 0x330
	float AnimTarget; // 0x338
	FTimerHandle AnimTimer; // 0x340
	bool Is Forwar Direction; // 0x348
	float Width; // 0x34c
	float Height; // 0x350
	float animationSpeed; // 0x354
};

struct UKeymaster_run_R_Skeleton_AnimBlueprint_Lobby_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2f8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x378
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x3a8
};

struct UCableComponent : UMeshComponent {
	bool bAttachStart; // 0x468
	bool bAttachEnd; // 0x469
	FComponentReference AttachEndTo; // 0x470
	FName AttachEndToSocketName; // 0x498
	FVector EndLocation; // 0x4a0
	float CableLength; // 0x4ac
	int32_t NumSegments; // 0x4b0
	float SubstepTime; // 0x4b4
	int32_t SolverIterations; // 0x4b8
	bool bEnableStiffness; // 0x4bc
	bool bUseSubstepping; // 0x4bd
	bool bSkipCableUpdateWhenNotVisible; // 0x4be
	bool bSkipCableUpdateWhenNotOwnerRecentlyRendered; // 0x4bf
	bool bEnableCollision; // 0x4c0
	float CollisionFriction; // 0x4c4
	FVector CableForce; // 0x4c8
	float CableGravityScale; // 0x4d4
	float CableWidth; // 0x4d8
	int32_t NumSides; // 0x4dc
	float TileMaterial; // 0x4e0
};

struct ASkyAtmosphere : AInfo {
	USkyAtmosphereComponent* SkyAtmosphereComponent; // 0x220
};

struct UKillerMarked_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UTextBlock* Text; // 0x268
	bool Off; // 0x270
	float Time; // 0x274
};

struct UAnimBoneCompressionSettings : UObject {
	TArray<UAnimBoneCompressionCodec*> Codecs; // 0x28
};

struct UDatasmithSceneComponentTemplate : UDatasmithObjectTemplate {
	FTransform RelativeTransform; // 0x30
	EComponentMobility Mobility; // 0x60
	TSoftObjectPtr<USceneComponent> AttachParent; // 0x68
	bool bVisible; // 0x90
	TSet<FName> Tags; // 0x98
};

struct UInputActionDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputActionDelegateBinding> InputActionDelegateBindings; // 0x28
};

struct ARuntimeVirtualTextureVolume : AActor {
	URuntimeVirtualTextureComponent* VirtualTextureComponent; // 0x220
};

struct USoundNodeSoundClass : USoundNode {
	USoundClass* SoundClassOverride; // 0x48
};

struct UParticleModuleLocationPrimitiveCylinder : UParticleModuleLocationPrimitiveBase {
	char RadialVelocity : 1; // 0xb0
	FRawDistributionFloat StartRadius; // 0xb8
	FRawDistributionFloat StartHeight; // 0xe8
	CylinderHeightAxis HeightAxis; // 0x118
};

struct UBTTask_RunEQSQuery : UBTTask_BlackboardBase {
	UEnvQuery* QueryTemplate; // 0x98
	TArray<FEnvNamedValue> QueryParams; // 0xa0
	TArray<FAIDynamicParam> QueryConfig; // 0xb0
	EEnvQueryRunMode RunMode; // 0xc0
	FBlackboardKeySelector EQSQueryBlackboardKey; // 0xc8
	bool bUseBBKey; // 0xf0
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0xf8
};

struct UListView : UListViewBase {
	EOrientation Orientation; // 0x2d8
	ESelectionMode SelectionMode; // 0x2d9
	EConsumeMouseWheel ConsumeMouseWheel; // 0x2da
	bool bClearSelectionOnClick; // 0x2db
	bool bIsFocusable; // 0x2dc
	float EntrySpacing; // 0x2e0
	bool bReturnFocusToSelection; // 0x2e4
	TArray<UObject*> ListItems; // 0x2e8
	FMulticastInlineDelegate BP_OnEntryInitialized; // 0x308
	FMulticastInlineDelegate BP_OnItemClicked; // 0x318
	FMulticastInlineDelegate BP_OnItemDoubleClicked; // 0x328
	FMulticastInlineDelegate BP_OnItemIsHoveredChanged; // 0x338
	FMulticastInlineDelegate BP_OnItemSelectionChanged; // 0x348
	FMulticastInlineDelegate BP_OnItemScrolledIntoView; // 0x358
};

struct UAsyncActionChangePrimaryAssetBundles : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UEnvQueryGenerator_Cone : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue AlignedPointsDistance; // 0x80
	FAIDataProviderFloatValue ConeDegrees; // 0xb8
	FAIDataProviderFloatValue AngleStep; // 0xf0
	FAIDataProviderFloatValue Range; // 0x128
	UEnvQueryContext* CenterActor; // 0x160
	char bIncludeContextLocation : 1; // 0x168
};

struct UDataAsset : UObject {
	UDataAsset* NativeClass; // 0x28
};

struct UMaterialExpressionPreviousFrameSwitch : UMaterialExpression {
	FExpressionInput CurrentFrame; // 0x40
	FExpressionInput PreviousFrame; // 0x54
};

struct UPlatformInterfaceWebResponse : UObject {
	FString OriginalURL; // 0x28
	int32_t ResponseCode; // 0x38
	int32_t Tag; // 0x3c
	FString StringResponse; // 0x40
	TArray<char> BinaryResponse; // 0x50
};

struct UNavigationSystemModuleConfig : UNavigationSystemConfig {
	char bStrictlyStatic : 1; // 0x50
	char bCreateOnClient : 1; // 0x50
	char bAutoSpawnMissingNavData : 1; // 0x50
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x50
};

struct ABulletBP_Child_C : ABulletBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2d8
	UStaticMeshComponent* StaticMesh; // 0x2e0
};

struct UW_PressAnyKeyScreen_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* HideTrhobber_Anim; // 0x268
	UWidgetAnimation* Throbber_Anim; // 0x270
	UWidgetAnimation* Flashing_Anim; // 0x278
	UWidgetAnimation* Fade_Anim; // 0x280
	UCanvasPanel* CanvasPanel_1; // 0x288
	UImage* Image_81; // 0x290
	UImage* Image_390; // 0x298
	UImage* Image_BG; // 0x2a0
	UImage* Image_Dark; // 0x2a8
	UImage* Image_Logo; // 0x2b0
	UImage* Image_Ref; // 0x2b8
	UImage* Image_Throbber; // 0x2c0
	UTextBlock* TextBlock_Status; // 0x2c8
	bool IsActive; // 0x2d0
	FMulticastInlineDelegate OnShown; // 0x2d8
	FMulticastInlineDelegate OnHidden; // 0x2e8
};

struct ASurv3_C : ASurvivorMasterBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1830
};

struct UMaterialExpressionInverseLinearInterpolate : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Value; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstValue; // 0x84
	bool bClampResult; // 0x88
};

struct USoundSubmixBase : UObject {
	TArray<USoundSubmixBase*> ChildSubmixes; // 0x28
};

struct UInAppPurchaseQueryCallbackProxy : UObject {
	FMulticastInlineDelegate onSuccess; // 0x28
	FMulticastInlineDelegate onFailure; // 0x38
};

struct UMovieSceneParticleParameterTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct ADeathSparks_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USkeletalMeshComponent* Chair; // 0x228
	UParticleSystemComponent* Centre; // 0x230
	USceneComponent* DefaultSceneRoot; // 0x238
};

struct UEffectsHUDWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FadeOutLong; // 0x268
	UWidgetAnimation* FadeOut; // 0x270
	UWidgetAnimation* FadeIn; // 0x278
	UImage* Black; // 0x280
	bool Block?; // 0x288
};

struct USoundNodeWaveParam : USoundNode {
	FName WaveParameterName; // 0x48
};

struct UMaterialExpressionCeil : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UNiagaraMeshRendererProperties : UNiagaraRendererProperties {
	UStaticMesh* ParticleMesh; // 0x80
	ENiagaraSortMode SortMode; // 0x88
	char bOverrideMaterials : 1; // 0x8c
	char bSortOnlyWhenTranslucent : 1; // 0x8c
	TArray<FNiagaraMeshMaterialOverride> OverrideMaterials; // 0x90
	FVector2D SubImageSize; // 0xa0
	char bSubImageBlend : 1; // 0xa8
	ENiagaraMeshFacingMode FacingMode; // 0xac
	char bLockedAxisEnable : 1; // 0xb0
	FVector LockedAxis; // 0xb4
	ENiagaraMeshLockedAxisSpace LockedAxisSpace; // 0xc0
	FVector PivotOffset; // 0xc4
	ENiagaraMeshPivotOffsetSpace PivotOffsetSpace; // 0xd0
	char bEnableFrustumCulling : 1; // 0xd4
	char bEnableCameraDistanceCulling : 1; // 0xd4
	float MinCameraDistance; // 0xd8
	float MaxCameraDistance; // 0xdc
	uint32_t RendererVisibility; // 0xe0
	FNiagaraVariableAttributeBinding PositionBinding; // 0xe8
	FNiagaraVariableAttributeBinding ColorBinding; // 0x140
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x198
	FNiagaraVariableAttributeBinding MeshOrientationBinding; // 0x1f0
	FNiagaraVariableAttributeBinding ScaleBinding; // 0x248
	FNiagaraVariableAttributeBinding SubImageIndexBinding; // 0x2a0
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x2f8
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x350
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x3a8
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x400
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x458
	FNiagaraVariableAttributeBinding CustomSortingBinding; // 0x4b0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x508
	FNiagaraVariableAttributeBinding CameraOffsetBinding; // 0x560
	FNiagaraVariableAttributeBinding RendererVisibilityTagBinding; // 0x5b8
};

struct UMovieSceneCameraCutSection : UMovieSceneSection {
	bool bLockPreviousCamera; // 0xf0
	FGuid CameraGuid; // 0xf4
	FMovieSceneObjectBindingID CameraBindingID; // 0x104
	FTransform InitialCameraCutTransform; // 0x120
	bool bHasInitialCameraCutTransform; // 0x150
};

struct UMovieSceneTrack : UMovieSceneSignedObject {
	FMovieSceneTrackEvalOptions EvalOptions; // 0x50
	bool bIsEvalDisabled; // 0x55
	FGuid EvaluationFieldGuid; // 0x58
	FMovieSceneTrackEvaluationField EvaluationField; // 0x68
};

struct UMaterialExpressionStaticBoolParameter : UMaterialExpressionParameter {
	char DefaultValue : 1; // 0x58
};

struct UAnimCompress_RemoveEverySecondKey : UAnimCompress {
	int32_t MinKeys; // 0x40
	char bStartAtSecondKey : 1; // 0x44
};

struct UParticleModuleColor : UParticleModuleColorBase {
	FRawDistributionVector StartColor; // 0x30
	FRawDistributionFloat StartAlpha; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct UEnvQueryTest_Dot : UEnvQueryTest {
	FEnvDirection LineA; // 0x1f8
	FEnvDirection LineB; // 0x218
	EEnvTestDot TestMode; // 0x238
	bool bAbsoluteValue; // 0x239
};

struct UParticleModuleOrbitBase : UParticleModule {
	char bUseEmitterTime : 1; // 0x30
};

struct UPaperTileLayer : UObject {
	FText LayerName; // 0x28
	int32_t LayerWidth; // 0x40
	int32_t LayerHeight; // 0x44
	char bHiddenInGame : 1; // 0x48
	char bLayerCollides : 1; // 0x48
	char bOverrideCollisionThickness : 1; // 0x48
	char bOverrideCollisionOffset : 1; // 0x48
	float CollisionThicknessOverride; // 0x4c
	float CollisionOffsetOverride; // 0x50
	FLinearColor LayerColor; // 0x54
	int32_t AllocatedWidth; // 0x64
	int32_t AllocatedHeight; // 0x68
	TArray<FPaperTileInfo> AllocatedCells; // 0x70
	UPaperTileSet* TileSet; // 0x80
	TArray<int32_t> AllocatedGrid; // 0x88
};

struct AKillerMasterBP_C : APhysicsCharacter {
	FPointerToUberGraphFrame UberGraphFrame; // 0x4e0
	UPlaySound3DComponent_C* PlaySound3DComponent; // 0x4e8
	UWidgetComponent* SoundIndicatorWidget; // 0x4f0
	USceneComponent* SceneDropCheck; // 0x4f8
	UCapsuleComponent* CapsuleChecker; // 0x500
	UBoxComponent* Box1; // 0x508
	UFMODAudioComponent* MoveSoundComp; // 0x510
	USphereComponent* BloodhoundSphere; // 0x518
	UPerkKiller_C* PerkKiller; // 0x520
	USceneComponent* CoinSpawn; // 0x528
	UCameraComponent* FPPCamera; // 0x530
	USoundCommandKiller_C* SoundCommandKiller; // 0x538
	USceneComponent* KnifeLoc; // 0x540
	USceneCaptureComponent2D* SceneCaptureComponent2D; // 0x548
	UGraffityMakerHit_C* GraffityMakerHit; // 0x550
	UPerkManager_C* PerkManager; // 0x558
	UWidgetComponent* NicknameWidget; // 0x560
	UShootProphunt_C* ShootProphunt; // 0x568
	UAIPerceptionStimuliSourceComponent* AIPerceptionStimuliSource; // 0x570
	UFMODAudioComponent* KillerIdle; // 0x578
	UGraffityMaker_C* GraffityMaker; // 0x580
	UFMODAudioComponent* JumpSound; // 0x588
	UFMODAudioComponent* ChaseAudio; // 0x590
	USceneComponent* StunSceneCheck; // 0x598
	UParticleSystemComponent* Stund; // 0x5a0
	USoundChatSounds_C* SoundChatSounds; // 0x5a8
	UBoxComponent* StunCollision; // 0x5b0
	UCheckInteractableKiller_C* CheckInteractableKiller; // 0x5b8
	UAlarmsWidgetSize_C* AlarmsWidgetSize; // 0x5c0
	UBoxComponent* Box; // 0x5c8
	USceneComponent* SurvEndPlace; // 0x5d0
	USceneComponent* SurvBeginPlace; // 0x5d8
	UVoipAudioComponent* VoipAudio; // 0x5e0
	UVoipManagerComponent* VoipManager; // 0x5e8
	UPostProcessComponent* PostProcess1; // 0x5f0
	USmoothSync* SmoothSync; // 0x5f8
	USpringArmComponent* SpringArm; // 0x600
	USceneComponent* KnifeLocation; // 0x608
	UFMODAudioComponent* HitAudi; // 0x610
	USceneComponent* FPMeshPlace; // 0x618
	USkeletalMeshComponent* FPPSM; // 0x620
	USoundKiller_C* SoundKiller; // 0x628
	USphereComponent* Sphere; // 0x630
	UFMODAudioComponent* FMODAudio1; // 0x638
	UCameraComponent* FollowCamera; // 0x640
	UATPCCameraComponent* ATPCCamera; // 0x648
	UFMODAudioComponent* FmodAudio; // 0x650
	UFootprintComponent_C* FootprintComponent1; // 0x658
	UScreamSpell_C* ScreamSpell; // 0x660
	UWallhackSpell_C* WallhackSpell; // 0x668
	UCapsuleComponent* ContactCapsule; // 0x670
	USpotLightComponent* SpotLight; // 0x678
	UCapsuleComponent* Capsule; // 0x680
	USceneComponent* GrabLocation; // 0x688
	UPhysicsHandleComponent* PhysicsHandle; // 0x690
	float Timeline_6_NewTrack_0_DD0A11F8445618515EDF29AA255D1CE0; // 0x698
	ETimelineDirection Timeline_6__Direction_DD0A11F8445618515EDF29AA255D1CE0; // 0x69c
	UTimelineComponent* Timeline_7; // 0x6a0
	float Timeline_5_Alpha_7015A4DA41ED7E73DA445D8FB29046BE; // 0x6a8
	ETimelineDirection Timeline_5__Direction_7015A4DA41ED7E73DA445D8FB29046BE; // 0x6ac
	UTimelineComponent* Timeline_6; // 0x6b0
	float AfterStunColor_f_A70514EE49D40D103AD3BF8B9384BA66; // 0x6b8
	ETimelineDirection AfterStunColor__Direction_A70514EE49D40D103AD3BF8B9384BA66; // 0x6bc
	UTimelineComponent* AfterStunColor; // 0x6c0
	float ScaleSizer_fX_77CCFD67432753C30A0F0B9123C98C2A; // 0x6c8
	float ScaleSizer_fZ_77CCFD67432753C30A0F0B9123C98C2A; // 0x6cc
	ETimelineDirection ScaleSizer__Direction_77CCFD67432753C30A0F0B9123C98C2A; // 0x6d0
	UTimelineComponent* ScaleSizer; // 0x6d8
	float Timeline_4_Alpha_FFBAA07C4FFE0AC4EFCCB2808F29A056; // 0x6e0
	ETimelineDirection Timeline_4__Direction_FFBAA07C4FFE0AC4EFCCB2808F29A056; // 0x6e4
	UTimelineComponent* Timeline_5; // 0x6e8
	float Timeline_3_Alpha_CCB2811B4D6B40280DAFDA9812E93AA9; // 0x6f0
	ETimelineDirection Timeline_3__Direction_CCB2811B4D6B40280DAFDA9812E93AA9; // 0x6f4
	UTimelineComponent* Timeline_4; // 0x6f8
	float Timeline_2_Alpha_6A7565474A6C83519B89AABBB688C874; // 0x700
	ETimelineDirection Timeline_2__Direction_6A7565474A6C83519B89AABBB688C874; // 0x704
	UTimelineComponent* Timeline_3; // 0x708
	float Timeline_1_Param_D056C010468E2F57128C429FAA65DEE4; // 0x710
	ETimelineDirection Timeline_1__Direction_D056C010468E2F57128C429FAA65DEE4; // 0x714
	UTimelineComponent* Timeline_2; // 0x718
	float StopSoundChaseTimeline_Alpha_06FAF5A548A0915B6864099F049D7C6A; // 0x720
	ETimelineDirection StopSoundChaseTimeline__Direction_06FAF5A548A0915B6864099F049D7C6A; // 0x724
	UTimelineComponent* StopSoundChaseTimeline; // 0x728
	float SoundTimeline_Alpha_1F3BABE64CBB7521448AC3810D011723; // 0x730
	ETimelineDirection SoundTimeline__Direction_1F3BABE64CBB7521448AC3810D011723; // 0x734
	UTimelineComponent* SoundTimeline; // 0x738
	float DecreasorSpeed_AlphaTime_7C7B01AF4FA603E5695B4EBEC9B01716; // 0x740
	ETimelineDirection DecreasorSpeed__Direction_7C7B01AF4FA603E5695B4EBEC9B01716; // 0x744
	UTimelineComponent* DecreasorSpeed; // 0x748
	float IncreasorSpeed_AlphaTime_73C5FA014C02BF17B95C0094FD9E37EA; // 0x750
	ETimelineDirection IncreasorSpeed__Direction_73C5FA014C02BF17B95C0094FD9E37EA; // 0x754
	UTimelineComponent* IncreasorSpeed; // 0x758
	float Timeline_0_lerp_258C0C6E4CF25F31EF1A08BE14D3F049; // 0x760
	ETimelineDirection Timeline_0__Direction_258C0C6E4CF25F31EF1A08BE14D3F049; // 0x764
	UTimelineComponent* Timeline_1; // 0x768
	float BaseTurnRate; // 0x770
	float BaseLookUpRate; // 0x774
	bool Stunned?; // 0x778
	float WalkSpeed; // 0x77c
	bool Atack?; // 0x780
	bool Contact; // 0x781
	FString NewVar_1; // 0x788
	FVector V3Forward; // 0x798
	bool mouseClick?; // 0x7a4
	float mouseClickTime; // 0x7a8
	float ReduceMaxWalkSpeedTime; // 0x7ac
	bool SuperSmash; // 0x7b0
	bool AbilityWallhackCd; // 0x7b1
	bool IsHolded; // 0x7b2
	AActor* GrabbedChar; // 0x7b8
	ASurvivorMasterBP_C* HittedSurv; // 0x7c0
	TArray<AHypnoChairBP_C*> HypnoChairsArrayRef; // 0x7c8
	bool ChairOverlap?; // 0x7d8
	AHypnoChairBP_C* OverlappedChair; // 0x7e0
	TArray<ASurvivorMasterBP_C*> SurvArrayRef; // 0x7e8
	TArray<ASurvivorMasterBP_C*> SurvInRadiusArrayRef; // 0x7f8
	bool ToShakeSurv; // 0x808
	UCoolDownWBP_C* CDWBPRed; // 0x810
	bool AbilityScreamCd; // 0x818
	UCoolDownWBP_C* WidgetCDRef; // 0x820
	FName abilit1; // 0x828
	FName abilit2; // 0x830
	FVector EndLineTraceV3; // 0x838
	FName abiliti3; // 0x844
	bool SuperSmashCD; // 0x84c
	UFlashWidget_C* FlashEffectWidget; // 0x850
	float DeltaSeconds; // 0x858
	ABulletBP_C* BulletRef; // 0x860
	bool BulletCD?; // 0x868
	UAmmoKillerWBP_C* AmmoWBPRef; // 0x870
	UAudioComponent* SpyEyeSound; // 0x878
	float MaxSpeed; // 0x880
	float CurrentSpeed; // 0x884
	bool IncreaseWalk?; // 0x888
	bool IsOwner?; // 0x889
	EFootprintStyle CurrentFootwear; // 0x88a
	float MinSpeed; // 0x88c
	bool DecreaseWalk?; // 0x890
	bool OnSpyEye; // 0x891
	UInteractableButtonsWidget_C* InteractButtonWBP; // 0x898
	FText toChairText; // 0x8a0
	FText pickupSurvText; // 0x8b8
	FText dropSurvText; // 0x8d0
	UAudioComponent* ExplosionSound; // 0x8e8
	UProgressBarWBP_C* ProgressBarWBP; // 0x8f0
	TArray<AActor*> ActorsToIgnore; // 0x8f8
	float MaxSpeedDefault; // 0x908
	float MinSpeedDefault; // 0x90c
	FFMODEventInstance LevelAmbient; // 0x910
	float MeleeAttackRadius; // 0x918
	float Sensivity; // 0x91c
	bool AttackBoolAnim; // 0x920
	AHypnoChairBP_C* ChairSaved; // 0x928
	AHypnoChairBP_C* NewVar_2; // 0x930
	bool AttackAllow; // 0x938
	FFMODEventInstance Laugh; // 0x940
	UFMODAudioComponent* LaughComp; // 0x948
	float XLocationFPPMESH; // 0x950
	int32_t Score; // 0x954
	bool JumpEnd; // 0x958
	UCrossHairWBP_C* CrossHair; // 0x960
	bool FIRE; // 0x968
	bool Plant; // 0x969
	bool Flashed; // 0x96a
	ASurvivorMasterBP_C* SurvCrawl; // 0x970
	UFMODAudioComponent* spyEyeSpotter; // 0x978
	float VerticalValue; // 0x980
	float HorizontalValue; // 0x984
	float IncreaseSpeedMultiplyTime; // 0x988
	float DecreaseSpeedMultiplyTime; // 0x98c
	int32_t KillerType; // 0x990
	bool HardHit?; // 0x994
	bool LockMouseInput; // 0x995
	AHUD_PropHunt_C* HudKiller; // 0x998
	bool AstralIn?; // 0x9a0
	bool KnifeInHand; // 0x9a1
	float InertiaSpeed; // 0x9a4
	float InertiaSoef; // 0x9a8
	ASurvivorMasterBP_C* NewVar_3; // 0x9b0
	float ZinterpCoef; // 0x9b8
	bool AfterJump; // 0x9bc
	bool SimpleDrop; // 0x9bd
	bool ChairDrop; // 0x9be
	bool Catch; // 0x9bf
	bool Runaway; // 0x9c0
	float YawMod; // 0x9c4
	bool ToChairMove; // 0x9c8
	FRotator HeadRotator; // 0x9cc
	float NewVar_4; // 0x9d8
	bool SpawnKnife; // 0x9dc
	bool AllowVoice; // 0x9dd
	bool VoiceActive?; // 0x9de
	FText ScoreText; // 0x9e0
	float DamageMultiply; // 0x9f8
	bool StartTrackSurv; // 0x9fc
	TArray<ASurvivorMasterBP_C*> SurfsOnEye; // 0xa00
	TArray<float> TimeDelay; // 0xa10
	TArray<bool> SeeSurvArray; // 0xa20
	AActor* ActorToMove; // 0xa30
	UFMODAudioComponent* LaughKiller; // 0xa38
	bool OnKiller?; // 0xa40
	bool CDWidget; // 0xa41
	TArray<float> StayDelay; // 0xa48
	float XAxis; // 0xa58
	float YAxis; // 0xa5c
	bool SurvCanGetDMG; // 0xa60
	FName SurvAttachBoneName; // 0xa64
	USkillPoints_C* SkillPoints; // 0xa70
	ULevelSystem_C* LevelSystemRef; // 0xa78
	int32_t HandAttack; // 0xa80
	TArray<FVector> CoinImpulse; // 0xa88
	bool MarioStun; // 0xa98
	bool SurvExitCollision; // 0xa99
	bool StopKillerMusic?; // 0xa9a
	bool ImKiller?; // 0xa9b
	bool PropSound?; // 0xa9c
	bool AttackBlocked?; // 0xa9d
	bool HiddenAttack?; // 0xa9e
	TArray<AActor*> AudioIgnore; // 0xaa0
	bool chase; // 0xab0
	TArray<bool> ChaseArray; // 0xab8
	FFMODEventInstance ChaseSound2D; // 0xac8
	float JumpTime; // 0xad0
	bool chaseb; // 0xad4
	float SurvEscapeAnimationLenght; // 0xad8
	FTransform SurvMeshLastPosition; // 0xae0
	TArray<UMaterialInstanceDynamic*> arrayDynMatInst; // 0xb10
	bool UnStunned; // 0xb20
	bool DoOnceChase; // 0xb21
	bool DetectDelay; // 0xb22
	APostProcessVolume* PostProcessVolumeVar; // 0xb28
	FPostProcessSettings DefaultPostProcessSettings; // 0xb30
	UMaterialInstanceDynamic* MaterialOutline; // 0x1080
	UMaterialInstanceDynamic* MaterialLens; // 0x1088
	bool gameStarted; // 0x1090
	float IdleTime; // 0x1094
	bool IdleBool; // 0x1098
	float IdleTimeReady; // 0x109c
	FVector ToChairLoc; // 0x10a0
	TArray<float> SurvChaseDelay; // 0x10b0
	float DeltaSec; // 0x10c0
	bool IdleBlock; // 0x10c4
	UMaterialInstanceDynamic* MaterialVignette; // 0x10c8
	UMaterialInstanceDynamic* MaterialBlur; // 0x10d0
	bool StopMove?; // 0x10d8
	float StunTimeBySurv; // 0x10dc
	float LastAirTime; // 0x10e0
	bool Tutorial?; // 0x10e4
	bool BlockSurvTrack?; // 0x10e5
	float CDAttackDuration; // 0x10e8
	float AttackAnimDuration; // 0x10ec
	float CDAttackDurationBig; // 0x10f0
	float AttackAnimDurationBig; // 0x10f4
	bool chaseDelayer; // 0x10f8
	bool UberRotate; // 0x10f9
	float DeltaSecSpeed; // 0x10fc
	bool SeekBool; // 0x1100
	bool GetReady; // 0x1101
	bool SeekDetectCheck; // 0x1102
	bool OnlyTPP?; // 0x1103
	bool DoOnceTrack; // 0x1104
	TArray<ASurvivorMasterBP_C*> SurfsOnEye2; // 0x1108
	float ImpulseStunMultiply; // 0x1118
	ASurvivorMasterBP_C* SurvivorStunRef; // 0x1120
	bool NewVar_5; // 0x1128
	UPhysicalMaterial* Phys Mat; // 0x1130
	bool Freeze; // 0x1138
	AActor* Stun Actor; // 0x1140
	float BloodLustLvl; // 0x1148
	float BloodLustSpeedAdd; // 0x114c
	float BloodLustTimeActual; // 0x1150
	float BloodLustSpeedSubtraction; // 0x1154
	bool BloodLustOffB; // 0x1158
	float BloodLustTimeOff; // 0x115c
	bool BloodLustHitted; // 0x1160
	float NewVar_6; // 0x1164
	float BloodLustTimeLvl; // 0x1168
	int32_t BloodLustLvlInt; // 0x116c
	float BloodLustTimeDiv; // 0x1170
	bool Range?; // 0x1174
	TArray<float> SurvsSeeTimer; // 0x1178
	bool BInFocus; // 0x1188
	float InFocusTime; // 0x118c
	bool BQuietHour; // 0x1190
	bool BTimeIsTicking; // 0x1191
	bool BNightmare; // 0x1192
	bool BObservation; // 0x1193
	bool BPunishment; // 0x1194
	bool BDeadMansChest; // 0x1195
	bool BImprisonment; // 0x1196
	bool BBrokenTime; // 0x1197
	bool BBait; // 0x1198
	FFMODEventInstance BloodLustFMOD; // 0x11a0
	float UntouchMaxSpeedDefault; // 0x11a8
	FVector Scale; // 0x11ac
	float StunTimeBeforeAnim; // 0x11b8
	float StunTimeAfterAnim; // 0x11bc
	bool ChairDropChecker; // 0x11c0
	FName Socket Name; // 0x11c4
	int32_t CoinsCount; // 0x11cc
	ANewAlarmBP_C* As New Alarm BP; // 0x11d0
	bool BrokeAlarm; // 0x11d8
	float BrokeTime; // 0x11dc
	FVector NewVar_7; // 0x11e0
	AActor* TempCalculateRay; // 0x11f0
	float DistanceSurvPropSee; // 0x11f8
	ASurvivorMasterBP_C* SurvPropSeeRef; // 0x1200
	ASurvivorMasterBP_C* tempPropSeeSurv; // 0x1208
	float PropSeeTime; // 0x1210
	FFMODEventInstance KillerSpottedFmod; // 0x1218
	FFMODEventInstance KillerSpotted2; // 0x1220
	UMaterialInstanceDynamic* SoftOutline; // 0x1228
	UFMODAudioComponent* MoveAmbAudio; // 0x1230
	bool TestViewB; // 0x1238
	bool TPPCamEvent; // 0x1239
	AFlashCoin_C* NewVar_8; // 0x1240
	bool KillerCheats; // 0x1248
	UStaticMeshComponent* RangeMeshHit; // 0x1250
	FVector RangeLocHit; // 0x1258
	bool TutorialBlock?; // 0x1264
	bool PickupSurv; // 0x1265
	int32_t Exp; // 0x1268
	int32_t CurrentLVL; // 0x126c
	int32_t MaxLVL; // 0x1270
	int32_t PerkIndex; // 0x1274
	bool Bloodhound?; // 0x1278
	bool LastSurvMusBool; // 0x1279
	bool BrokeAnim; // 0x127a
	float ForwardM; // 0x127c
	float LeftM; // 0x1280
	float TurnLookUpM; // 0x1284
	bool BloodlustLastCustom?; // 0x1288
	bool WiggleMoveRight; // 0x1289
	float ParasiteMovementSpeed; // 0x128c
	bool IsGlued; // 0x1290
	bool IsYellowJar; // 0x1291
	FName SurvPreArrachPreName; // 0x1294
	ASurvivorMasterBP_C* As Survivor Master BP; // 0x12a0
	bool Invert Mouse Y?; // 0x12a8
	bool TestPickup; // 0x12a9
	bool HardMode; // 0x12aa
	float hardModeSpeedUp; // 0x12ac
	bool BloodLustUped?; // 0x12b0
	FFMODEventInstance ClockKillerSound; // 0x12b8
	AActor* OverlapOtherActor; // 0x12c0
	bool JumpInProcess; // 0x12c8
	bool PickupInProcess; // 0x12c9
	int32_t intI; // 0x12cc
	bool WiggleMoveBack; // 0x12d0
	FVector StunLoc; // 0x12d4
	float StunnerTimer; // 0x12e0
	float StunnerSurvAttachTimer; // 0x12e4
	bool StunnerSurvAttachBool; // 0x12e8
	FVector OldIndicatorPos; // 0x12ec
	FVector OldCharIndicatorPos; // 0x12f8
	TArray<AActor*> WidgetPropActorsIgnore; // 0x1308
};

struct UPlayFabRuntimeSettings : UObject {
	FString ProductionEnvironmentURL; // 0x28
	FString TitleId; // 0x38
	FString DeveloperSecretKey; // 0x48
};

struct UMovieSceneBindingOverrides : UObject {
	TArray<FMovieSceneBindingOverrideData> BindingData; // 0x28
};

struct UMaterialExpressionTextureSampleParameterSubUV : UMaterialExpressionTextureSampleParameter2D {
	char bBlend : 1; // 0x80
};

struct UTextureLightProfile : UTexture2D {
	float Brightness; // 0x100
	float TextureMultiplier; // 0x104
};

struct USceneComponent : UActorComponent {
	TWeakObjectPtr<APhysicsVolume> PhysicsVolume; // 0xb8
	USceneComponent* AttachParent; // 0xc0
	FName AttachSocketName; // 0xc8
	TArray<USceneComponent*> AttachChildren; // 0xd0
	TArray<USceneComponent*> ClientAttachedChildren; // 0xe0
	FVector RelativeLocation; // 0x11c
	FRotator RelativeRotation; // 0x128
	FVector RelativeScale3D; // 0x134
	FVector ComponentVelocity; // 0x140
	char bComponentToWorldUpdated : 1; // 0x14c
	char bAbsoluteLocation : 1; // 0x14c
	char bAbsoluteRotation : 1; // 0x14c
	char bAbsoluteScale : 1; // 0x14c
	char bVisible : 1; // 0x14c
	char bShouldBeAttached : 1; // 0x14c
	char bShouldSnapLocationWhenAttached : 1; // 0x14c
	char bShouldSnapRotationWhenAttached : 1; // 0x14d
	char bShouldUpdatePhysicsVolume : 1; // 0x14d
	char bHiddenInGame : 1; // 0x14d
	char bBoundsChangeTriggersStreamingDataRebuild : 1; // 0x14d
	char bUseAttachParentBound : 1; // 0x14d
	EComponentMobility Mobility; // 0x14f
	EDetailMode DetailMode; // 0x150
	FMulticastSparseDelegate PhysicsVolumeChangedDelegate; // 0x151
};

struct UInputSettings : UObject {
	TArray<FInputAxisConfigEntry> AxisConfig; // 0x28
	char bAltEnterTogglesFullscreen : 1; // 0x38
	char bF11TogglesFullscreen : 1; // 0x38
	char bUseMouseForTouch : 1; // 0x38
	char bEnableMouseSmoothing : 1; // 0x38
	char bEnableFOVScaling : 1; // 0x38
	char bCaptureMouseOnLaunch : 1; // 0x38
	char bDefaultViewportMouseLock : 1; // 0x38
	char bAlwaysShowTouchInterface : 1; // 0x38
	char bShowConsoleOnFourFingerTap : 1; // 0x39
	char bEnableGestureRecognizer : 1; // 0x39
	bool bUseAutocorrect; // 0x3a
	TArray<FString> ExcludedAutocorrectOS; // 0x40
	TArray<FString> ExcludedAutocorrectCultures; // 0x50
	TArray<FString> ExcludedAutocorrectDeviceModels; // 0x60
	EMouseCaptureMode DefaultViewportMouseCaptureMode; // 0x70
	EMouseLockMode DefaultViewportMouseLockMode; // 0x71
	float FOVScale; // 0x74
	float DoubleClickTime; // 0x78
	TArray<FInputActionKeyMapping> ActionMappings; // 0x80
	TArray<FInputAxisKeyMapping> AxisMappings; // 0x90
	TArray<FInputActionSpeechMapping> SpeechMappings; // 0xa0
	TSoftClassPtr<UObject> DefaultPlayerInputClass; // 0xb0
	TSoftClassPtr<UObject> DefaultInputComponentClass; // 0xd8
	FSoftObjectPath DefaultTouchInterface; // 0x100
	FKey ConsoleKey; // 0x118
	TArray<FKey> ConsoleKeys; // 0x130
};

struct UNiagaraDataInterfaceChaosDestruction : UNiagaraDataInterface {
	TSet<AChaosSolverActor*> ChaosSolverActorSet; // 0x38
	EDataSourceTypeEnum DataSourceType; // 0x88
	int32_t DataProcessFrequency; // 0x8c
	int32_t MaxNumberOfDataEntriesToSpawn; // 0x90
	bool DoSpawn; // 0x94
	FVector2D SpawnMultiplierMinMax; // 0x98
	float SpawnChance; // 0xa0
	FVector2D ImpulseToSpawnMinMax; // 0xa4
	FVector2D SpeedToSpawnMinMax; // 0xac
	FVector2D MassToSpawnMinMax; // 0xb4
	FVector2D ExtentMinToSpawnMinMax; // 0xbc
	FVector2D ExtentMaxToSpawnMinMax; // 0xc4
	FVector2D VolumeToSpawnMinMax; // 0xcc
	FVector2D SolverTimeToSpawnMinMax; // 0xd4
	int32_t SurfaceTypeToSpawn; // 0xdc
	ELocationFilteringModeEnum LocationFilteringMode; // 0xe0
	ELocationXToSpawnEnum LocationXToSpawn; // 0xe1
	FVector2D LocationXToSpawnMinMax; // 0xe4
	ELocationYToSpawnEnum LocationYToSpawn; // 0xec
	FVector2D LocationYToSpawnMinMax; // 0xf0
	ELocationZToSpawnEnum LocationZToSpawn; // 0xf8
	FVector2D LocationZToSpawnMinMax; // 0xfc
	EDataSortTypeEnum DataSortingType; // 0x104
	bool bGetExternalCollisionData; // 0x105
	bool DoSpatialHash; // 0x106
	FVector SpatialHashVolumeMin; // 0x108
	FVector SpatialHashVolumeMax; // 0x114
	FVector SpatialHashVolumeCellSize; // 0x120
	int32_t MaxDataPerCell; // 0x12c
	bool bApplyMaterialsFilter; // 0x130
	TSet<UPhysicalMaterial*> ChaosBreakingMaterialSet; // 0x138
	bool bGetExternalBreakingData; // 0x188
	bool bGetExternalTrailingData; // 0x189
	FVector2D RandomPositionMagnitudeMinMax; // 0x18c
	float InheritedVelocityMultiplier; // 0x194
	ERandomVelocityGenerationTypeEnum RandomVelocityGenerationType; // 0x198
	FVector2D RandomVelocityMagnitudeMinMax; // 0x19c
	float SpreadAngleMax; // 0x1a4
	FVector VelocityOffsetMin; // 0x1a8
	FVector VelocityOffsetMax; // 0x1b4
	FVector2D FinalVelocityMagnitudeMinMax; // 0x1c0
	float MaxLatency; // 0x1c8
	EDebugTypeEnum DebugType; // 0x1cc
	int32_t LastSpawnedPointID; // 0x1d0
	float LastSpawnTime; // 0x1d4
	float SolverTime; // 0x1e8
	float TimeStampOfLastProcessedData; // 0x1ec
};

struct UMaterialExpressionAppendVector : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UNiagaraDataInterfaceParticleRead : UNiagaraDataInterfaceRWBase {
	FString EmitterName; // 0xd8
};

struct UWheeledVehicleMovementComponent4W : UWheeledVehicleMovementComponent {
	FVehicleEngineData EngineSetup; // 0x290
	FVehicleDifferential4WData DifferentialSetup; // 0x330
	float AckermannAccuracy; // 0x34c
	FVehicleTransmissionData TransmissionSetup; // 0x350
	FRuntimeFloatCurve SteeringCurve; // 0x380
};

struct UInterpCurveEdSetup : UObject {
	TArray<FCurveEdTab> Tabs; // 0x28
	int32_t ActiveTab; // 0x38
};

struct UFP_Vampire_Skeleton_AnimBlueprint_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0x368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0x390
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0x3b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0x3e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0x408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x430
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x458
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x480
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x4a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x4d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x4f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x520
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x548
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x570
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x5c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x5e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x610
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x638
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x688
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x6b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x6d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x700
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x728
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x750
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x778
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x7a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x7c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x7f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x818
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x840
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x868
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x890
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x8b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x8e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x908
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x930
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x958
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x980
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x9a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x9d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x9f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0xa20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0xa48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0xa70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0xa98
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0xb18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0xb48
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0xbc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0xbf8
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0xc78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0xca8
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0xd28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0xd58
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0xdd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0xe08
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0xe88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0xeb8
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0xf38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0xf68
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0xfe8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x1088
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x1108
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x1138
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1220
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x1250
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x12d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x1300
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x1380
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x13b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1450
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x14d0
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x1550
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x1580
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x1600
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x1630
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x16e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x1780
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x17a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x17d0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x1850
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x1880
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x1900
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x1930
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x19b0
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x19e0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x1a90
	FAnimNode_Root AnimGraphNode_Root; // 0x1be8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x1c18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x1c40
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x1cc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x1d60
	float keepSurv; // 0x1de0
	bool IsInAir; // 0x1de4
	float Speed; // 0x1de8
	float Direction; // 0x1dec
	bool PropHunt?; // 0x1df0
	bool AttackBool; // 0x1df1
	bool JumpEndChek; // 0x1df2
	bool FIRE; // 0x1df3
	bool Plant; // 0x1df4
	bool MarioStun; // 0x1df5
	bool Flashed; // 0x1df6
	bool Broke Anim; // 0x1df7
	int32_t TypeAttack; // 0x1df8
	float Delta Time X; // 0x1dfc
	bool Alt Attack?; // 0x1e00
	bool Active Spell 1?; // 0x1e01
	bool vs3; // 0x1e02
};

struct UGeneralSettingWBP_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Fade_Anim; // 0x268
	UButton* Button_Audio; // 0x270
	UButton* Button_Control; // 0x278
	UButton* Button_DefaultCfg; // 0x280
	UButton* Button_FocusToAudio; // 0x288
	UButton* Button_FocusToControl; // 0x290
	UButton* Button_FocusToGraphic; // 0x298
	UButton* Button_Graphic; // 0x2a0
	UCanvasPanel* CanvasPanel_1; // 0x2a8
	UGraphicSettingsWBP1_C* GraphicSettings_WBP; // 0x2b0
	UImage* Image_4; // 0x2b8
	UImage* Image_5; // 0x2c0
	UImage* Image_6; // 0x2c8
	UImage* Image_7; // 0x2d0
	UImage* Image_Arrow; // 0x2d8
	UImage* Image_Arrow_2; // 0x2e0
	UImage* Image_Arrow_3; // 0x2e8
	UImage* Image_UpdateServerList; // 0x2f0
	UProgressBar* ProgressBar_109; // 0x2f8
	USafeZone* SafeZone; // 0x300
	USafeZone* SafeZone_2; // 0x308
	USafeZone* SafeZone_141; // 0x310
	USizeBox* SizeBox_Audio; // 0x318
	USizeBox* SizeBox_Audio_2; // 0x320
	USizeBox* SizeBox_Control; // 0x328
	USizeBox* SizeBox_Graphic; // 0x330
	USizeBox* SizeBox_ResetToDEf; // 0x338
	USoundSettings_C* SoundSettings_WBP; // 0x340
	UTextBlock* TextBlock_Audio; // 0x348
	UTextBlock* TextBlock_Controls; // 0x350
	UTextBlock* TextBlock_Grapics; // 0x358
	UVerticalBox* VerticalBox_Buttons; // 0x360
	UW_Path_C* W_Path; // 0x368
	UWB_KeyBindings_C* WB_KeyBindings; // 0x370
	UWBP_CustomComboBox_C* WBP_CustomComboBox; // 0x378
	UWidgetSwitcher* WidgetSwitcher_159; // 0x380
	UUserWidget* Widget; // 0x388
	UTextBlock* TextToGray; // 0x390
	UButton* LastKnowFocusButton; // 0x398
	bool IsButtonHover?; // 0x3a0
	FLinearColor Specified ColorActive; // 0x3a4
	FLinearColor Specified ColorDisable; // 0x3b4
	bool IsButtonHover?_FocusGraphic; // 0x3c4
	bool IsButtonHover?_FocusControl; // 0x3c5
	bool IsButtonHover?_FocusAudio; // 0x3c6
	USaveGame* SaveData; // 0x3c8
	TArray<FString> Locs; // 0x3d0
};

struct UParticleModuleSize : UParticleModuleSizeBase {
	FRawDistributionVector StartSize; // 0x30
};

struct UAISense_Sight : UAISense {
	int32_t MaxTracesPerTick; // 0x148
	int32_t MinQueriesPerTimeSliceCheck; // 0x14c
	double MaxTimeSlicePerTick; // 0x150
	float HighImportanceQueryDistanceThreshold; // 0x158
	float MaxQueryImportance; // 0x160
	float SightLimitQueryImportance; // 0x164
};

struct UW_Slot_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* loading; // 0x268
	UWidgetAnimation* MiniSearching; // 0x270
	UWidgetAnimation* SearchingAnimation; // 0x278
	UImage* Avatar_BG; // 0x280
	UImage* Avatar_BG_4; // 0x288
	UImage* Avatar_BG_5; // 0x290
	UBackgroundBlur* BackgroundBlur_2; // 0x298
	UImage* Image_3; // 0x2a0
	UImage* Image_9; // 0x2a8
	UImage* Image_10; // 0x2b0
	UImage* Image_11; // 0x2b8
	UImage* Image_12; // 0x2c0
	UImage* Image_116; // 0x2c8
	UImage* Image_189; // 0x2d0
	UImage* Image_207; // 0x2d8
	UImage* Image_412; // 0x2e0
	UImage* Image_1113; // 0x2e8
	UImage* Image_CharIcon; // 0x2f0
	UTextBlock* Nickname; // 0x2f8
	UOverlay* Overlay_SWAP_TEXT; // 0x300
	UWidgetSwitcher* PlayerSlotSwitcher; // 0x308
	UButton* ReserveButton; // 0x310
	URetainerBox* RetainerBox_1; // 0x318
	UScrollBox* ScrollBox_1; // 0x320
	UTextBlock* SlotName1; // 0x328
	UTextBlock* SlotName2; // 0x330
	UButton* SwapButton; // 0x338
	UImage* SwapIcon; // 0x340
	UTextBlock* SwapText; // 0x348
	FText Text; // 0x350
	FString Name; // 0x368
	bool IsMySlot; // 0x378
	SurvClass SurvClassEnum; // 0x379
	bool ImKiller; // 0x37a
	APlayerState* PlayerState; // 0x380
	UW_MiniLobby_C* W_MiniLobbby; // 0x388
	float Point; // 0x390
	bool SwapRequestHandled; // 0x394
	bool SwapAccepted; // 0x395
	APawn* LastSender; // 0x398
	bool IsSwapRequest; // 0x3a0
	FSlateBrush In Style Normal; // 0x3a8
	FSlateBrush In Style Normal_1; // 0x430
	FSlateBrush Style Hovered; // 0x4b8
	FSlateBrush Style Pressed; // 0x540
	FSlateBrush Style Disabled; // 0x5c8
	FSlateBrush In Style Normal_2; // 0x650
	APS_PropHunt_C* As PS Prop Hunt; // 0x6d8
	bool IsForwardDirection; // 0x6e0
	FTimerHandle AnimTimer; // 0x6e8
};

struct UStreamableRenderAsset : UObject {
	double ForceMipLevelsToBeResidentTimestamp; // 0x40
	int32_t NumCinematicMipLevels; // 0x48
	int32_t StreamingIndex; // 0x4c
	int32_t CachedCombinedLODBias; // 0x50
	char NeverStream : 1; // 0x54
	char bGlobalForceMipLevelsToBeResident : 1; // 0x54
	char bHasStreamingUpdatePending : 1; // 0x54
	char bForceMiplevelsToBeResident : 1; // 0x54
	char bIgnoreStreamingMipBias : 1; // 0x54
	char bUseCinematicMipLevels : 1; // 0x54
};

struct UMaterialExpressionVirtualTextureFeatureSwitch : UMaterialExpression {
	FExpressionInput No; // 0x40
	FExpressionInput Yes; // 0x54
};

struct UParticleModuleSpawnPerUnit : UParticleModuleSpawnBase {
	float UnitScalar; // 0x38
	float MovementTolerance; // 0x3c
	FRawDistributionFloat SpawnPerUnit; // 0x40
	float MaxFrameDistance; // 0x70
	char bIgnoreSpawnRateWhenMoving : 1; // 0x74
	char bIgnoreMovementAlongX : 1; // 0x74
	char bIgnoreMovementAlongY : 1; // 0x74
	char bIgnoreMovementAlongZ : 1; // 0x74
};

struct UActorSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
	FActorSequenceObjectReferenceMap ObjectReferences; // 0x68
};

struct URichTextBlockImageDecorator : URichTextBlockDecorator {
	UDataTable* ImageSet; // 0x28
};

struct USkeletalMeshLODSettings : UDataAsset {
	FPerPlatformInt MinLOD; // 0x30
	FPerPlatformBool DisableBelowMinLodStripping; // 0x34
	bool bOverrideLODStreamingSettings; // 0x35
	FPerPlatformBool bSupportLODStreaming; // 0x36
	FPerPlatformInt MaxNumStreamedLODs; // 0x38
	FPerPlatformInt MaxNumOptionalLODs; // 0x3c
	TArray<FSkeletalMeshLODGroupSettings> LODGroups; // 0x40
};

struct UParticleModuleSubUV : UParticleModuleSubUVBase {
	USubUVAnimation* Animation; // 0x30
	FRawDistributionFloat SubImageIndex; // 0x38
	char bUseRealTime : 1; // 0x68
};

struct UMaterial : UMaterialInterface {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UPhysicalMaterialMask* PhysMaterialMask; // 0x90
	UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0x98
	FScalarMaterialInput Metallic; // 0xd8
	FScalarMaterialInput Specular; // 0xec
	FScalarMaterialInput Anisotropy; // 0x100
	FVectorMaterialInput Normal; // 0x114
	FVectorMaterialInput Tangent; // 0x128
	FColorMaterialInput EmissiveColor; // 0x13c
	EMaterialDomain MaterialDomain; // 0x150
	EBlendMode BlendMode; // 0x151
	EDecalBlendMode DecalBlendMode; // 0x152
	EMaterialDecalResponse MaterialDecalResponse; // 0x153
	EMaterialShadingModel ShadingModel; // 0x154
	char bCastDynamicShadowAsMasked : 1; // 0x155
	FMaterialShadingModelField ShadingModels; // 0x156
	float OpacityMaskClipValue; // 0x158
	FVectorMaterialInput WorldPositionOffset; // 0x15c
	FScalarMaterialInput Refraction; // 0x170
	FMaterialAttributesInput MaterialAttributes; // 0x184
	FScalarMaterialInput PixelDepthOffset; // 0x19c
	FShadingModelMaterialInput ShadingModelFromMaterialExpression; // 0x1b0
	char bEnableSeparateTranslucency : 1; // 0x1c4
	char bEnableResponsiveAA : 1; // 0x1c4
	char bScreenSpaceReflections : 1; // 0x1c4
	char bContactShadows : 1; // 0x1c4
	char TwoSided : 1; // 0x1c4
	char DitheredLODTransition : 1; // 0x1c4
	char DitherOpacityMask : 1; // 0x1c4
	char bAllowNegativeEmissiveColor : 1; // 0x1c4
	ETranslucencyLightingMode TranslucencyLightingMode; // 0x1c5
	char bEnableMobileSeparateTranslucency : 1; // 0x1c6
	int32_t NumCustomizedUVs; // 0x1c8
	float TranslucencyDirectionalLightingIntensity; // 0x1cc
	float TranslucentShadowDensityScale; // 0x1d0
	float TranslucentSelfShadowDensityScale; // 0x1d4
	float TranslucentSelfShadowSecondDensityScale; // 0x1d8
	float TranslucentSelfShadowSecondOpacity; // 0x1dc
	float TranslucentBackscatteringExponent; // 0x1e0
	FLinearColor TranslucentMultipleScatteringExtinction; // 0x1e4
	float TranslucentShadowStartOffset; // 0x1f4
	char bDisableDepthTest : 1; // 0x1f8
	char bWriteOnlyAlpha : 1; // 0x1f8
	char bGenerateSphericalParticleNormals : 1; // 0x1f8
	char bTangentSpaceNormal : 1; // 0x1f8
	char bUseEmissiveForDynamicAreaLighting : 1; // 0x1f8
	char bBlockGI : 1; // 0x1f8
	char bUsedAsSpecialEngineMaterial : 1; // 0x1f8
	char bUsedWithSkeletalMesh : 1; // 0x1f8
	char bUsedWithEditorCompositing : 1; // 0x1f9
	char bUsedWithParticleSprites : 1; // 0x1f9
	char bUsedWithBeamTrails : 1; // 0x1f9
	char bUsedWithMeshParticles : 1; // 0x1f9
	char bUsedWithNiagaraSprites : 1; // 0x1f9
	char bUsedWithNiagaraRibbons : 1; // 0x1f9
	char bUsedWithNiagaraMeshParticles : 1; // 0x1f9
	char bUsedWithGeometryCache : 1; // 0x1f9
	char bUsedWithStaticLighting : 1; // 0x1fa
	char bUsedWithMorphTargets : 1; // 0x1fa
	char bUsedWithSplineMeshes : 1; // 0x1fa
	char bUsedWithInstancedStaticMeshes : 1; // 0x1fa
	char bUsedWithGeometryCollections : 1; // 0x1fa
	char bUsesDistortion : 1; // 0x1fa
	char bUsedWithClothing : 1; // 0x1fa
	char bUsedWithWater : 1; // 0x1fc
	char bUsedWithHairStrands : 1; // 0x1fc
	char bUsedWithLidarPointCloud : 1; // 0x1fc
	char bUsedWithVirtualHeightfieldMesh : 1; // 0x1fc
	char bUsedWithUI : 1; // 0x200
	char bAutomaticallySetUsageInEditor : 1; // 0x200
	char bFullyRough : 1; // 0x200
	char bUseFullPrecision : 1; // 0x200
	char bUseLightmapDirectionality : 1; // 0x200
	char bUseAlphaToCoverage : 1; // 0x200
	char bForwardRenderUsePreintegratedGFForSimpleIBL : 1; // 0x204
	char bUseHQForwardReflections : 1; // 0x208
	char bUsePlanarForwardReflections : 1; // 0x208
	char bNormalCurvatureToRoughness : 1; // 0x208
	EMaterialTessellationMode D3D11TessellationMode; // 0x209
	char bEnableCrackFreeDisplacement : 1; // 0x20a
	char bEnableAdaptiveTessellation : 1; // 0x20a
	char AllowTranslucentCustomDepthWrites : 1; // 0x20a
	char Wireframe : 1; // 0x20a
	EMaterialShadingRate ShadingRate; // 0x20b
	char bCanMaskedBeAssumedOpaque : 1; // 0x20c
	char bIsMasked : 1; // 0x20c
	char bIsPreviewMaterial : 1; // 0x20c
	char bIsFunctionPreviewMaterial : 1; // 0x20c
	char bUseMaterialAttributes : 1; // 0x20c
	char bCastRayTracedShadows : 1; // 0x20c
	char bUseTranslucencyVertexFog : 1; // 0x20c
	char bApplyCloudFogging : 1; // 0x20c
	char bIsSky : 1; // 0x20d
	char bComputeFogPerPixel : 1; // 0x20d
	char bOutputTranslucentVelocity : 1; // 0x20d
	char bAllowDevelopmentShaderCompile : 1; // 0x20d
	char bIsMaterialEditorStatsMaterial : 1; // 0x20d
	EBlendableLocation BlendableLocation; // 0x20e
	char BlendableOutputAlpha : 1; // 0x20f
	char bEnableStencilTest : 1; // 0x20f
	EMaterialStencilCompare StencilCompare; // 0x210
	char StencilRefValue; // 0x211
	ERefractionMode RefractionMode; // 0x212
	int32_t BlendablePriority; // 0x214
	char bIsBlendable : 1; // 0x218
	uint32_t UsageFlagWarnings; // 0x21c
	float RefractionDepthBias; // 0x220
	FGuid StateId; // 0x224
	float MaxDisplacement; // 0x234
	FMaterialCachedExpressionData CachedExpressionData; // 0x268
};

struct UGrannyAstral_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	AKillerMesh_C* SpawnedMesh; // 0xf0
	float Timer; // 0xf8
	bool SkillActivated?; // 0xfc
	FVector4 MonochromeColor; // 0x100
	FVector4 NormalColor; // 0x110
	FVector MeshLocation; // 0x120
	bool FarAway?; // 0x12c
	AKnife_C* knife; // 0x130
	TArray<ASurvivorMasterBP_C*> SurvsArray; // 0x138
	bool Tutorial?; // 0x148
	UMaterialInstanceDynamic* KillerDynMat1; // 0x150
	UMaterialInstanceDynamic* KillerDynMat2; // 0x158
	UMaterialInstanceDynamic* KillerDynMat3; // 0x160
	UMaterialInstanceDynamic* KillerDynMat4; // 0x168
	bool TransitionOn; // 0x170
	bool TransitionOff; // 0x171
	float TransitionTime; // 0x174
	float TurnOnDuration; // 0x178
	float Float1; // 0x17c
	float ErodeSubtractDef; // 0x180
	float TurnOffDuration; // 0x184
	float TurnOffAttackDuration; // 0x188
	bool On?; // 0x18c
	UMaterialInstanceDynamic* KillerDynMat5; // 0x190
	UMaterialInstanceDynamic* KillerDynMat6; // 0x198
};

struct UObjectLibrary : UObject {
	UObject* ObjectBaseClass; // 0x28
	bool bHasBlueprintClasses; // 0x30
	TArray<UObject*> Objects; // 0x38
	TArray<TWeakObjectPtr<UObject>> WeakObjects; // 0x48
	bool bUseWeakReferences; // 0x58
	bool bIsFullyLoaded; // 0x59
};

struct USubmixEffectSubmixEQPreset : USoundEffectSubmixPreset {
	FSubmixEffectSubmixEQSettings Settings; // 0xa0
};

struct UBrushComponent : UPrimitiveComponent {
	UModel* Brush; // 0x440
	UBodySetup* BrushBodySetup; // 0x448
};

struct USoundNodeMixer : USoundNode {
	TArray<float> InputVolume; // 0x48
};

struct UBTService_DefaultFocus : UBTService_BlackboardBase {
	char FocusPriority; // 0x98
};

struct UVolumetricCloudComponent : USceneComponent {
	float LayerBottomAltitude; // 0x1f8
	float LayerHeight; // 0x1fc
	float TracingStartMaxDistance; // 0x200
	float TracingMaxDistance; // 0x204
	float PlanetRadius; // 0x208
	FColor GroundAlbedo; // 0x20c
	UMaterialInterface* Material; // 0x210
	char bUsePerSampleAtmosphericLightTransmittance : 1; // 0x218
	float SkyLightCloudBottomOcclusion; // 0x21c
	float ViewSampleCountScale; // 0x220
	float ReflectionSampleCountScale; // 0x224
	float ShadowViewSampleCountScale; // 0x228
	float ShadowReflectionSampleCountScale; // 0x22c
	float ShadowTracingDistance; // 0x230
};

struct ASkeletalMeshActor : AActor {
	char bShouldDoAnimNotifies : 1; // 0x228
	char bWakeOnLevelStart : 1; // 0x228
	USkeletalMeshComponent* SkeletalMeshComponent; // 0x230
	USkeletalMesh* ReplicatedMesh; // 0x238
	UPhysicsAsset* ReplicatedPhysAsset; // 0x240
	UMaterialInterface* ReplicatedMaterial0; // 0x248
	UMaterialInterface* ReplicatedMaterial1; // 0x250
};

struct USurvivalHealthWidget_C : UUserWidget {
	UTextBlock* Health; // 0x260
};

struct UPlayFabMultiplayerAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x428
	UPlayFabJsonObject* RequestJsonObj; // 0x430
	UPlayFabJsonObject* ResponseJsonObj; // 0x438
};

struct UParticleModuleSpawn : UParticleModuleSpawnBase {
	FRawDistributionFloat Rate; // 0x38
	FRawDistributionFloat RateScale; // 0x68
	EParticleBurstMethod ParticleBurstMethod; // 0x98
	TArray<FParticleBurst> BurstList; // 0xa0
	FRawDistributionFloat BurstScale; // 0xb0
	char bApplyGlobalSpawnRateScale : 1; // 0xe0
};

struct UParticleModuleCollisionGPU : UParticleModuleCollisionBase {
	FRawDistributionFloat Resilience; // 0x30
	FRawDistributionFloat ResilienceScaleOverLife; // 0x60
	float Friction; // 0x90
	float RandomSpread; // 0x94
	float RandomDistribution; // 0x98
	float RadiusScale; // 0x9c
	float RadiusBias; // 0xa0
	EParticleCollisionResponse response; // 0xa4
	EParticleCollisionMode CollisionMode; // 0xa5
};

struct USoundNodeModulatorContinuous : USoundNode {
	FModulatorContinuousParams PitchModulationParams; // 0x48
	FModulatorContinuousParams VolumeModulationParams; // 0x68
};

struct UWBP_NewItemMarker_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Shining_Anim; // 0x268
	UImage* Image_Glow; // 0x270
	UImage* Image_Marker; // 0x278
	bool Visible; // 0x280
};

struct UChainsaw_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	bool casted; // 0xf0
	float TimeCast; // 0xf4
	float TimeCastDef; // 0xf8
	ARabbit_C* As Rabbit; // 0x100
};

struct ALevelStreamingVolume : AVolume {
	TArray<FName> StreamingLevelNames; // 0x258
	char bEditorPreVisOnly : 1; // 0x268
	char bDisabled : 1; // 0x268
	EStreamingVolumeUsage StreamingUsage; // 0x26c
};

struct UFMODEventControlTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> ControlSections; // 0x80
};

struct UWBP_SelfInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ChangeIcons_Anim; // 0x268
	UButton* Button_LeaveLobby; // 0x270
	UImage* Image_BG; // 0x278
	UImage* Image_Hover; // 0x280
	UImage* Image_LeaderLobby; // 0x288
	UImage* Image_SelfAvatar; // 0x290
	UImage* Image_SelfAvatarBG; // 0x298
	UImage* Image_SelfLeaveLobby_Icon; // 0x2a0
	URetainerBox* RetainerBox_1; // 0x2a8
	UTextBlock* Text_Nickname; // 0x2b0
	FMulticastInlineDelegate OnLeavePressed; // 0x2b8
};

struct ULuminApplicationLifecycleComponent : UApplicationLifecycleComponent {
	FMulticastInlineDelegate DeviceHasReactivatedDelegate; // 0x140
	FMulticastInlineDelegate DeviceWillEnterRealityModeDelegate; // 0x150
	FMulticastInlineDelegate DeviceWillGoInStandbyDelegate; // 0x160
	FMulticastInlineDelegate FocusLostDelegate; // 0x170
	FMulticastInlineDelegate FocusGainedDelegate; // 0x180
};

struct UWBP_MiniFriendEntry_ForList_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Image_Avatar; // 0x268
	UImage* Image_BG; // 0x270
	URetainerBox* RetainerBox_52; // 0x278
	FVector2D AvatarSize; // 0x280
	FString SteamId; // 0x288
	UMaterialInstanceDynamic* Material; // 0x298
};

struct UAISense_Touch : UAISense {
	TArray<FAITouchEvent> RegisteredEvents; // 0x80
};

struct UMaterialExpressionVectorNoise : UMaterialExpression {
	FExpressionInput Position; // 0x40
	EVectorNoiseFunction NoiseFunction; // 0x54
	int32_t Quality; // 0x58
	char bTiling : 1; // 0x5c
	uint32_t TileSize; // 0x60
};

struct UAnimNotify_PlayMontageNotifyWindow : UAnimNotifyState {
	FName NotifyName; // 0x30
};

struct UMovieSceneLevelVisibilityTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct ABP_LightBeam_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UBillboardComponent* UISprite; // 0x228
	UStaticMeshComponent* GodRayMesh; // 0x230
	AActor* Light; // 0x238
	float Width; // 0x240
	float Length; // 0x244
	UMaterialInstanceDynamic* Mid; // 0x248
	FLinearColor Color_1; // 0x250
	float Brightness; // 0x260
	float Fade distance; // 0x264
	bool Animated; // 0x268
	FRandomStream RandomTime; // 0x26c
	bool SpotLight; // 0x274
	bool Use light for rotation; // 0x275
};

struct UEnvQueryInstanceBlueprintWrapper : UObject {
	int32_t QueryId; // 0x30
	UEnvQueryItemType* ItemType; // 0x58
	int32_t OptionIndex; // 0x60
	FMulticastInlineDelegate OnQueryFinishedEvent; // 0x68
};

struct UDragDropOperation : UObject {
	FString Tag; // 0x28
	UObject* Payload; // 0x38
	UWidget* DefaultDragVisual; // 0x40
	EDragPivot Pivot; // 0x48
	FVector2D Offset; // 0x4c
	FMulticastInlineDelegate OnDrop; // 0x58
	FMulticastInlineDelegate OnDragCancelled; // 0x68
	FMulticastInlineDelegate OnDragged; // 0x78
};

struct UMaterialExpressionCollectionParameter : UMaterialExpression {
	UMaterialParameterCollection* Collection; // 0x40
	FName ParameterName; // 0x48
	FGuid ParameterId; // 0x50
};

struct AControlPointMeshActor : AActor {
	UControlPointMeshComponent* ControlPointMeshComponent; // 0x220
};

struct ASphereReflectionCapture : AReflectionCapture {
	UDrawSphereComponent* DrawCaptureRadius; // 0x228
};

struct UButtonSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UBugged_C : UPerkSurv_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
	ABuggedActor_C* Actor; // 0x100
};

struct UProgressWidgetStyle : USlateWidgetStyleContainerBase {
	FProgressBarStyle ProgressBarStyle; // 0x30
};

struct UGeometryCacheTrack_FlipbookAnimation : UGeometryCacheTrack {
	uint32_t NumMeshSamples; // 0x58
};

struct UNiagaraDataInterface2DArrayTexture : UNiagaraDataInterface {
	UTexture2DArray* Texture; // 0x38
};

struct UBTTask_BlueprintBase : UBTTaskNode {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	FIntervalCountdown TickInterval; // 0x80
	char bShowPropertyDetails : 1; // 0xa0
};

struct ABP_PrizeActor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USkeletalMeshComponent* WeaponImpostor; // 0x228
	UTextRenderComponent* TextRender; // 0x230
	USkeletalMeshComponent* WeaponBear; // 0x238
	USkeletalMeshComponent* WeaponVampire; // 0x240
	URectLightComponent* RectLight; // 0x248
	UStaticMeshComponent* Lightshaft; // 0x250
	USkeletalMeshComponent* CharMesh; // 0x258
	UStaticMeshComponent* Avatar; // 0x260
	UStaticMeshComponent* Banner; // 0x268
	USceneComponent* Scene; // 0x270
	UStaticMeshComponent* Stand; // 0x278
	USceneComponent* DefaultSceneRoot; // 0x280
	Rarity Rarity; // 0x288
	int32_t PrizeID; // 0x28c
	E_LootboxType PrizeType; // 0x290
	FS_LootBoxSkin DT_Lootbox; // 0x298
	UMaterialInstanceDynamic* LightshaftDynMat; // 0x2c8
	UMaterialInstanceDynamic* StandDynMat; // 0x2d0
	float Sense; // 0x2d8
	bool IsSurv; // 0x2dc
};

struct USoundSettings_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UCustomGraphicButton_C* BG_MUSIC; // 0x268
	UButton* Button_187; // 0x270
	UButton* Button_188; // 0x278
	UButton* Button_189; // 0x280
	UButton* Button_190; // 0x288
	UButton* Button_191; // 0x290
	UButton* Button_Device; // 0x298
	UButton* Button_GV; // 0x2a0
	UButton* Button_MV; // 0x2a8
	UButton* Button_SFX; // 0x2b0
	UButton* Button_VOIP; // 0x2b8
	UButton* Button_VOIP_Boost; // 0x2c0
	USlider* GeneralS; // 0x2c8
	UImage* Image; // 0x2d0
	UImage* Image_2; // 0x2d8
	UImage* Image_3; // 0x2e0
	UImage* Image_7; // 0x2e8
	UImage* Image_8; // 0x2f0
	UImage* Image_9; // 0x2f8
	UImage* Image_87; // 0x300
	UImage* Image_238; // 0x308
	UImage* Image_grayGV; // 0x310
	UImage* Image_grayMV; // 0x318
	UImage* Image_graySFX; // 0x320
	UImage* Image_grayVOIP; // 0x328
	UImage* Image_grayVOIP_Boost; // 0x330
	USlider* MusicS; // 0x338
	UOverlay* Overlay_BG_Music; // 0x340
	UOverlay* Overlay_Device; // 0x348
	UOverlay* Overlay_GV; // 0x350
	UOverlay* Overlay_MV; // 0x358
	UOverlay* Overlay_SFX; // 0x360
	UOverlay* Overlay_VOIP; // 0x368
	UOverlay* Overlay_VOIP_Boost; // 0x370
	UProgressBar* ProgressBar_GeneralS; // 0x378
	UProgressBar* ProgressBar_MusicS; // 0x380
	UProgressBar* ProgressBar_SFXS; // 0x388
	UProgressBar* ProgressBar_VOIP; // 0x390
	UProgressBar* ProgressBar_VOIP_Boost; // 0x398
	USlider* SFXS; // 0x3a0
	USizeBox* SizeBox_VOIP_Boost; // 0x3a8
	UTextBlock* TextBlock; // 0x3b0
	UTextBlock* TextBlock_2; // 0x3b8
	UTextBlock* TextBlock_3; // 0x3c0
	UTextBlock* TextBlock_4; // 0x3c8
	UTextBlock* TextBlock_5; // 0x3d0
	UTextBlock* TextBlock_6; // 0x3d8
	UTextBlock* TextBlock_7; // 0x3e0
	UTextBlock* TextBlock_8; // 0x3e8
	UTextBlock* TextBlock_228; // 0x3f0
	UTextBlock* TextBlock_247; // 0x3f8
	UCustomVoiceButton_C* VoiceDevice; // 0x400
	USlider* VOIP; // 0x408
	USlider* VOIP_Boost; // 0x410
	float GeneralVolume; // 0x418
	float MusicVolume; // 0x41c
	float SFXVolume; // 0x420
	USaveGame* NewVar_2; // 0x428
	TArray<AMapStormBP_C*> MapStormRef; // 0x430
	TArray<AMapStormBP_C*> MapStorm1Ref; // 0x440
	UWidget* LastFocusKnow; // 0x450
	float VoiceVolume; // 0x458
	TArray<FMediaCaptureDevice> InputAudioDevices; // 0x460
	UComboBoxString* ComboBoxFocused; // 0x470
	bool ComboLastFocused?; // 0x478
	UImage* SelectedImage; // 0x480
	USlider* HoveredSlider; // 0x488
	float Value; // 0x490
	float VoiceBoostVolume; // 0x494
	UCustomGraphicButton_C* Selected; // 0x498
	float Music_BG; // 0x4a0
	TArray<FText> BGMUSIC_TextBtn; // 0x4a8
	UWidget* KeyboardHoveredWidget; // 0x4b8
	bool IsMutedChat?; // 0x4c0
};

struct UMaterialExpressionConstant3Vector : UMaterialExpression {
	FLinearColor Constant; // 0x40
};

struct UInterpTrackLinearColorProp : UInterpTrackLinearColorBase {
	FName PropertyName; // 0x90
};

struct ADebugCameraController : APlayerController {
	char bShowSelectedInfo : 1; // 0x570
	char bIsFrozenRendering : 1; // 0x570
	char bIsOrbitingSelectedActor : 1; // 0x570
	char bOrbitPivotUseCenter : 1; // 0x570
	char bEnableBufferVisualization : 1; // 0x570
	char bEnableBufferVisualizationFullMode : 1; // 0x570
	char bIsBufferVisualizationInputSetup : 1; // 0x570
	char bLastDisplayEnabled : 1; // 0x570
	UDrawFrustumComponent* DrawFrustum; // 0x578
	AActor* SelectedActor; // 0x580
	UPrimitiveComponent* SelectedComponent; // 0x588
	FHitResult SelectedHitPoint; // 0x590
	APlayerController* OriginalControllerRef; // 0x620
	UPlayer* OriginalPlayer; // 0x628
	float SpeedScale; // 0x630
	float InitialMaxSpeed; // 0x634
	float InitialAccel; // 0x638
	float InitialDecel; // 0x63c
};

struct UMaterialExpressionPanner : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	FExpressionInput Speed; // 0x68
	float SpeedX; // 0x7c
	float SpeedY; // 0x80
	uint32_t ConstCoordinate; // 0x84
	bool bFractionalPart; // 0x88
};

struct UCameraAnim : UObject {
	UInterpGroup* CameraInterpGroup; // 0x28
	float AnimLength; // 0x30
	FBox BoundingBox; // 0x34
	char bRelativeToInitialTransform : 1; // 0x50
	char bRelativeToInitialFOV : 1; // 0x50
	float BaseFOV; // 0x54
	FPostProcessSettings BasePostProcessSettings; // 0x60
	float BasePostProcessBlendWeight; // 0x5b0
};

struct UIpConnection : UNetConnection {
	float SocketErrorDisconnectDelay; // 0x1b40
};

struct Uw_ServerBrowser_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Searching_Anim; // 0x268
	UWidgetAnimation* ChangePageName_Anim; // 0x270
	UWidgetAnimation* ChangeContent_Anim; // 0x278
	UWidgetAnimation* ChangeDescription_Anim; // 0x280
	UImage* BG_4; // 0x288
	UButton* Button_Back; // 0x290
	UButton* Button_CreateGame; // 0x298
	UButton* Button_GM_Prophunt; // 0x2a0
	UButton* Button_GM_Propnight; // 0x2a8
	UButton* Button_JoinPrivate; // 0x2b0
	UButton* Button_JoinServer; // 0x2b8
	UButton* Button_JoinServer_Left; // 0x2c0
	UButton* Button_JoinServer_Right; // 0x2c8
	UButton* Button_PublicGames; // 0x2d0
	UButton* Button_Update; // 0x2d8
	UComboBoxString* ComboBoxString_REGIONSINFO; // 0x2e0
	UButton* FreeMode; // 0x2e8
	UImage* Image; // 0x2f0
	UImage* Image_3; // 0x2f8
	UImage* Image_130; // 0x300
	UImage* Image_321; // 0x308
	UImage* Image_ArrowLeft; // 0x310
	UImage* Image_ArrowRight; // 0x318
	UImage* Image_BackIcon; // 0x320
	UImage* Image_CG_Icon; // 0x328
	UImage* Image_GM_Background; // 0x330
	UImage* Image_RegionBG; // 0x338
	UImage* Image_UpdateServerList; // 0x340
	UTextBlock* QueryPoolSize; // 0x348
	UButton* ServerButton; // 0x350
	UTextBlock* ServersInQueue; // 0x358
	USizeBox* SizeBox_GameModeDescription; // 0x360
	USizeBox* SizeBox_GameModeMenu; // 0x368
	USizeBox* SizeBox_JoinWithCode; // 0x370
	USizeBox* SizeBox_TopMenu_BrowserRegion; // 0x378
	USizeBox* SizeBox_Update; // 0x380
	UTextBlock* TextBlock; // 0x388
	UTextBlock* TextBlock_4; // 0x390
	UTextBlock* TextBlock_BackButton; // 0x398
	UTextBlock* TextBlock_Hunt; // 0x3a0
	UTextBlock* TextBlock_Night; // 0x3a8
	UTextBlock* TextBlock_REGION; // 0x3b0
	UTextBlock* TotalServers; // 0x3b8
	UVerticalBox* VerticalBox_Buttons; // 0x3c0
	UW_BrowserCreateServer_C* W_BrowserCreateServer; // 0x3c8
	UW_PrivateGame_C* W_PrivateGame; // 0x3d0
	UW_PublicServers_C* W_PublicServers_Fake; // 0x3d8
	UW_PublicServers_C* W_PublicServers_Propnight; // 0x3e0
	UWBP_CustomComboBox_C* WBP_CustomComboBox_Maps; // 0x3e8
	UWBP_CustomComboBox_C* WBP_CustomComboBox_Region; // 0x3f0
	UWidgetSwitcher* WidgetSwitcher_GameModeDescription; // 0x3f8
	UWidgetSwitcher* WidgetSwitcher_Main; // 0x400
	TArray<UBP_SessionData_C*> SessionList; // 0x408
	UBP_SessionData_C* session; // 0x418
	int32_t CurrentGameMode; // 0x420
	TArray<UW_ServerEntryV3_C*> WaitingEntries; // 0x428
	bool IsSearching; // 0x438
	FMulticastInlineDelegate SearchingIsOver; // 0x440
	int32_t NewGM; // 0x450
	bool IsAnimPlaying; // 0x454
	bool IsSearchingAfterCreation; // 0x455
	FTimerHandle SearchingTickTimer; // 0x458
	bool HasResponce; // 0x460
	UW_Path_C* ExplorerWidget; // 0x468
	UW_PlayScreen_C* PlayScreenWidget; // 0x470
	bool ToCreateGame; // 0x478
	TArray<UBP_SessionData_C*> SessionsQueue; // 0x480
	TArray<UBP_SessionData_C*> SessionsPool; // 0x490
	APlayerController* ControllerRef; // 0x4a0
	FMulticastInlineDelegate DoneLoadServers; // 0x4a8
	int32_t SessionPoolSize; // 0x4b8
	TArray<FString> RegionArray; // 0x4c0
	int32_t TotalServersCount; // 0x4d0
	int32_t SessionItemCounter; // 0x4d4
};

struct UFileMediaSource : UBaseMediaSource {
	FString FilePath; // 0x88
	bool PrecacheFile; // 0x98
};

struct APropnightBeaconHostObject : AOnlineBeaconHostObject {
	AOnlineBeaconClient* PNClientBeaconType; // 0x248
};

struct ULobbyRabbitAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2f0
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x370
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x3a0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x420
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x450
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x500
	FAnimNode_Root AnimGraphNode_Root; // 0x5a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x5d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x5f8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x678
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x6a8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x728
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x758
	bool Reset?; // 0x808
};

struct ABanshee_C : AKillerMasterBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1318
	UParticleSystemComponent* ParticleSystem; // 0x1320
	UNiagaraComponent* PN_Shockwave; // 0x1328
	UCurse_C* Curse; // 0x1330
	UFMODAudioComponent* FMODJump; // 0x1338
	UFMODAudioComponent* FMODAudio3; // 0x1340
	UFMODAudioComponent* ScreamFMOD; // 0x1348
	UFMODAudioComponent* CurseS; // 0x1350
	UFMODAudioComponent* FastSoundFmod; // 0x1358
	UFMODAudioComponent* RushSoundFmod; // 0x1360
	UBoxComponent* Box1_1; // 0x1368
	UScream_C* Scream; // 0x1370
	float Timeline_5_0_Value_AE6778D44E9C7E800202E5B157E4247D; // 0x1378
	ETimelineDirection Timeline_5_0__Direction_AE6778D44E9C7E800202E5B157E4247D; // 0x137c
	UTimelineComponent* Timeline_5_1; // 0x1380
	float Timeline_4_0_Value_0DF127DB457CBB3190707499D9292828; // 0x1388
	ETimelineDirection Timeline_4_0__Direction_0DF127DB457CBB3190707499D9292828; // 0x138c
	UTimelineComponent* Timeline_4_1; // 0x1390
	bool RMBPRESS; // 0x1398
	float TimeSpeed; // 0x139c
	float TimeSpeedDur; // 0x13a0
	float NewVar_4_1; // 0x13a4
	bool FlyOff; // 0x13a8
	bool BRCD; // 0x13a9
	int32_t CDSV; // 0x13ac
	AActor* CurseActor; // 0x13b0
	bool Down; // 0x13b8
	bool JumpPressed; // 0x13b9
	UFMODAudioComponent* FMODAudio2_1; // 0x13c0
	bool FlyDelay; // 0x13c8
	bool ScreamAnim; // 0x13c9
	bool CurseAnim; // 0x13ca
	float DelayFlyTime; // 0x13cc
	TArray<AActor*> hotkeyActorsArray; // 0x13d0
	AActor* PhantomCurseActor; // 0x13e0
};

struct UMaterialExpressionPerInstanceCustomData : UMaterialExpression {
	FExpressionInput DefaultValue; // 0x40
	float ConstDefaultValue; // 0x54
	uint32_t DataIndex; // 0x58
};

struct USceneCaptureComponentCube : USceneCaptureComponent {
	UTextureRenderTargetCube* TextureTarget; // 0x2b0
	bool bCaptureRotation; // 0x2b8
	UTextureRenderTargetCube* TextureTargetLeft; // 0x2c0
	UTextureRenderTargetCube* TextureTargetRight; // 0x2c8
	UTextureRenderTarget2D* TextureTargetODS; // 0x2d0
	float IPD; // 0x2d8
};

struct UMaterialExpressionDistance : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UPlayerInput : UObject {
	TArray<FKeyBind> DebugExecBindings; // 0x120
	TArray<FName> InvertedAxis; // 0x160
};

struct USoundNodeWavePlayer : USoundNodeAssetReferencer {
	TSoftObjectPtr<USoundWave> SoundWaveAssetPtr; // 0x48
	USoundWave* SoundWave; // 0x70
	char bLooping : 1; // 0x80
};

struct ALODActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x220
	TMap<UMaterialInterface*, UInstancedStaticMeshComponent*> ImpostersStaticMeshComponents; // 0x228
	UHLODProxy* Proxy; // 0x278
	FName Key; // 0x280
	float LODDrawDistance; // 0x288
	int32_t LODLevel; // 0x28c
	TArray<AActor*> SubActors; // 0x290
	char CachedNumHLODLevels; // 0x2a0
};

struct AFootprint_Actor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UDecalComponent* FootprintDecal; // 0x228
	USceneComponent* DefaultSceneRoot; // 0x230
	float Duration; // 0x238
};

struct UARLifeCycleComponent : USceneComponent {
	FMulticastInlineDelegate OnARActorSpawnedDelegate; // 0x1f8
	FMulticastInlineDelegate OnARActorToBeDestroyedDelegate; // 0x208
};

struct UW_PublicServers_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Image; // 0x268
	UImage* Image_2; // 0x270
	UImage* Image_3; // 0x278
	UImage* Image_4; // 0x280
	UImage* Image_5; // 0x288
	UImage* Image_6; // 0x290
	UImage* Image_7; // 0x298
	UImage* Image_8; // 0x2a0
	UImage* Image_9; // 0x2a8
	UImage* Image_10; // 0x2b0
	UImage* Image_11; // 0x2b8
	UImage* Image_12; // 0x2c0
	UImage* Image_13; // 0x2c8
	UImage* Image_14; // 0x2d0
	UImage* Image_15; // 0x2d8
	UImage* Image_16; // 0x2e0
	UImage* Image_17; // 0x2e8
	UImage* Image_166; // 0x2f0
	UImage* Image_BG; // 0x2f8
	UImage* Image_ScrollBG; // 0x300
	UImage* Image_Scrubber; // 0x308
	UListView* ListView_69; // 0x310
	UButton* MapButton; // 0x318
	UButton* ModeButton_2; // 0x320
	UButton* PingButton; // 0x328
	UButton* PlayersButton; // 0x330
	USizeBox* SB_ScrollRail; // 0x338
	UScrollBox* ScrollBox_79; // 0x340
	UButton* ServerNameButton; // 0x348
	UButton* StatusButton; // 0x350
	UTextBlock* Text; // 0x358
	UTextBlock* TextBlock; // 0x360
	UTextBlock* TextBlock_39; // 0x368
	UTextBlock* TextBlock_42; // 0x370
	UTextBlock* TextBlock_60; // 0x378
	UTextBlock* TextBlock_155; // 0x380
	UWidgetSwitcher* WidgetSwitcher; // 0x388
	UWidgetSwitcher* WidgetSwitcher_2; // 0x390
	UWidgetSwitcher* WidgetSwitcher_3; // 0x398
	UWidgetSwitcher* WidgetSwitcher_4; // 0x3a0
	UWidgetSwitcher* WidgetSwitcher_5; // 0x3a8
	UWidgetSwitcher* WidgetSwitcher_106; // 0x3b0
	bool SelectedRow; // 0x3b8
	UObject* PrevItem; // 0x3c0
	TArray<UBP_SessionData_C*> Sessions; // 0x3c8
	TArray<UBP_SessionData_C*> SortedSessions; // 0x3d8
	TMap<FString, bool> SortState; // 0x3e8
	FLinearColor In Color And Opacity Specified Color; // 0x438
	float CurrentTimeAnimation; // 0x448
	int32_t CountFakeElement; // 0x44c
	TArray<UW_ServerEntryV3_C*> FakeElements; // 0x450
};

struct UNewPropmachineAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x2f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x3b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x438
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x4f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x578
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x618
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x6d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x758
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x7d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x858
	bool Failed?; // 0x8d8
	bool Finished?; // 0x8d9
	float Reloading Time; // 0x8dc
	float Reloading Time Rem; // 0x8e0
	int32_t Creak Int; // 0x8e4
	bool Reloading Starts?; // 0x8e8
	bool FailedAnimStart?; // 0x8e9
	bool Crack?; // 0x8ea
	int32_t Lvl; // 0x8ec
	int32_t Stage; // 0x8f0
};

struct UMaterialExpressionArctangent : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionStaticBool : UMaterialExpression {
	char Value : 1; // 0x40
};

struct UWBP_SocialUI_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ShowHide_DetailedFriendList; // 0x268
	UWidgetAnimation* ShowHide_MiniFriendList; // 0x270
	UButton* Button_Hide; // 0x278
	UWBP_DetailedFriendList_C* WBP_DetailedFriendList; // 0x280
	UWBP_LeaveTeamDialog_C* WBP_LeaveTeamDialog_359; // 0x288
	UWBP_MiniFriendList_C* WBP_MiniFriendList; // 0x290
	FMulticastInlineDelegate OnShowDetailed; // 0x298
	bool IsFriendListVisible; // 0x2a8
	FMulticastInlineDelegate OnHideDetailed; // 0x2b0
};

struct UNiagaraDataInterfaceVector4Curve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
	FRichCurve ZCurve; // 0x170
	FRichCurve WCurve; // 0x1f0
};

struct UNiagaraDataInterfaceArrayFloat2 : UNiagaraDataInterfaceArray {
	TArray<FVector2D> FloatData; // 0x50
};

struct UDistributionVectorUniformCurve : UDistributionVector {
	FInterpCurveTwoVectors ConstantCurve; // 0x38
	char bLockAxes1 : 1; // 0x50
	char bLockAxes2 : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes[0x2]; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x56
	char bUseExtremes : 1; // 0x5c
};

struct UInterpTrack : UObject {
	TArray<UInterpTrack*> SubTracks; // 0x38
	UInterpTrackInst* TrackInstClass; // 0x48
	ETrackActiveCondition ActiveCondition; // 0x50
	FString TrackTitle; // 0x58
	char bOnePerGroup : 1; // 0x68
	char bDirGroupOnly : 1; // 0x68
	char bDisableTrack : 1; // 0x68
	char bIsSelected : 1; // 0x68
	char bIsAnimControlTrack : 1; // 0x68
	char bSubTrackOnly : 1; // 0x68
	char bVisible : 1; // 0x68
	char bIsRecording : 1; // 0x68
};

struct UMaterialExpressionViewProperty : UMaterialExpression {
	EMaterialExposedViewProperty Property; // 0x40
};

struct UAnimNotify_PlayNiagaraEffect : UAnimNotify {
	UNiagaraSystem* Template; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	bool bAbsoluteScale; // 0x64
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct UNavigationSystemConfig : UObject {
	FSoftClassPath NavigationSystemClass; // 0x28
	FNavAgentSelector SupportedAgentsMask; // 0x40
	FName DefaultAgentName; // 0x44
	char bIsOverriden : 1; // 0x4c
};

struct UDatasmithVREDSceneImportData : UDatasmithFBXSceneImportData {
	bool bMergeNodes; // 0x48
	bool bOptimizeDuplicatedNodes; // 0x49
	bool bImportMats; // 0x4a
	FString MatsPath; // 0x50
	bool bImportVar; // 0x60
	bool bCleanVar; // 0x61
	FString VarPath; // 0x68
	bool bImportLightInfo; // 0x78
	FString LightInfoPath; // 0x80
	bool bImportClipInfo; // 0x90
	FString ClipInfoPath; // 0x98
};

struct UMaterialExpressionSubtract : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UFMODAsset : UObject {
	FGuid AssetGuid; // 0x28
};

struct UFPRabbitBPAnim_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x2f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x318
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x340
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x390
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x3b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x3e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x430
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x458
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x480
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x4a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x4d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x4f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x520
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x548
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x570
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x5c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x5e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x610
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x638
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x688
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x6b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x6d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x700
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x728
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x750
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x778
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x7a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x7c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x7f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x818
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x840
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x868
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x890
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x8b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x8e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x908
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_2; // 0x988
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0xa28
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0xaa8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0xad8
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0xb58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0xb88
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0xc08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0xc38
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0xcb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0xce8
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0xd68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0xd98
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0xe18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0xe48
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0xec8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0xef8
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0xf78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0xfa8
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1028
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x1058
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x10d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x1108
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x11f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x1220
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x12a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1340
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x13c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x13f0
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x1470
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x14a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x1550
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x15f0
	FAnimNode_Root AnimGraphNode_Root; // 0x1690
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x16c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x1740
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x17e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x1860
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x1888
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x18b0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x1930
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x1960
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x19e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x1a10
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x1a90
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x1ac0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x1b70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x1c10
	float Delta Time X; // 0x1c90
	float keepSurv; // 0x1c94
	bool IsInAir; // 0x1c98
	float Speed; // 0x1c9c
	float Direction; // 0x1ca0
	bool PropHunt?; // 0x1ca4
	bool AttackBool; // 0x1ca5
	bool JumpEndChek; // 0x1ca6
	bool FIRE; // 0x1ca7
	bool Plant; // 0x1ca8
	bool MarioStun; // 0x1ca9
	bool Flashed; // 0x1caa
	bool Broke Anim; // 0x1cab
	int32_t TypeAttack; // 0x1cac
	bool KnifeIn; // 0x1cb0
	bool KnifeSpawn; // 0x1cb1
	bool Astral; // 0x1cb2
	float SpeedRateF; // 0x1cb4
	bool Charge; // 0x1cb8
	bool Move!; // 0x1cb9
	bool Charge Attack; // 0x1cba
	bool BAnim; // 0x1cbb
	bool BChainsaw Terror; // 0x1cbc
};

struct UPlayerScore_ReportUser_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button; // 0x268
	UButton* Button_69; // 0x270
	UImage* Image_286; // 0x278
	UImage* Image_451; // 0x280
	UImage* Image_530; // 0x288
	USizeBox* SizeBox_Report; // 0x290
	FMulticastInlineDelegate Click; // 0x298
};

struct UWindDirectionalSourceComponent : USceneComponent {
	float Strength; // 0x1f8
	float Speed; // 0x1fc
	float MinGustAmount; // 0x200
	float MaxGustAmount; // 0x204
	float Radius; // 0x208
	char bPointWind : 1; // 0x20c
};

struct USourceEffectEQPreset : USoundEffectSourcePreset {
	FSourceEffectEQSettings Settings; // 0xa0
};

struct UInterpTrackBoolProp : UInterpTrack {
	TArray<FBoolTrackKey> BoolTrack; // 0x70
	FName PropertyName; // 0x80
};

struct UWBP_QuitDialog_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Blur_Anim; // 0x268
	UWidgetAnimation* Show_Anim; // 0x270
	UButton* Button_No; // 0x278
	UButton* Button_Yes; // 0x280
	UImage* Image_BlackScreen; // 0x288
	UImage* Image_DialogBG; // 0x290
	USafeZone* SafeZone_118; // 0x298
	USizeBox* SizeBox_1; // 0x2a0
	UTextBlock* Text_Label; // 0x2a8
	UTextBlock* TextBlock_42; // 0x2b0
	UTextBlock* TextBlock_147; // 0x2b8
	FMulticastInlineDelegate OnAccept; // 0x2c0
	FMulticastInlineDelegate OnAcceptDelayed; // 0x2d0
	FMulticastInlineDelegate OnDecline; // 0x2e0
	FMulticastInlineDelegate OnDeclineDelayed; // 0x2f0
	bool IsBlured; // 0x300
	FText Label; // 0x308
	bool IsShown; // 0x320
	UButton* LastFocus; // 0x328
	FSlateBrush In Style Normal; // 0x330
	FSlateBrush In Style Normal_1; // 0x3b8
	FSlateBrush In Style Normal_2; // 0x440
	FSlateBrush In Style Normal_3; // 0x4c8
	FText Label_Update; // 0x550
	bool UpdateStyle; // 0x568
};

struct UImprisonment_C : UPerkKiller_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x120
	TArray<ASurvivorMasterBP_C*> SurvRefs; // 0x128
};

struct UW_PrivateGame_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Disappearance_Anim; // 0x268
	UWidgetAnimation* Appearance_Anim; // 0x270
	UWidgetAnimation* ChangeStatus_Anim; // 0x278
	UWidgetAnimation* Successed_Anim; // 0x280
	UWidgetAnimation* Failed_Anim; // 0x288
	UButton* Button_Cancel; // 0x290
	UButton* Button_Connect; // 0x298
	UButton* Button_Paste; // 0x2a0
	UEditableTextBox* EditableTextBox_Password; // 0x2a8
	UEditableTextBox* EditableTextBox_Password_View; // 0x2b0
	UImage* Image_116; // 0x2b8
	UImage* Image_BlackScreen; // 0x2c0
	UImage* Image_DialogBG; // 0x2c8
	UImage* Image_PassBG; // 0x2d0
	UImage* Image_ScreenRef; // 0x2d8
	UTextBlock* Label_Status; // 0x2e0
	USizeBox* SizeBox_Dialog; // 0x2e8
	UTextBlock* TextBlock; // 0x2f0
	Uw_ServerBrowser_C* Browser; // 0x2f8
	FSlateBrush In Brush_Wrong; // 0x300
	FSlateBrush In Brush_Right; // 0x388
	FSlateBrush In Brush_Default; // 0x410
	FButtonStyle In Style_btn; // 0x498
	FButtonStyle In Style_btn_Default; // 0x710
	bool IsSearching; // 0x988
	bool IsShown; // 0x989
	FString PassView; // 0x990
};

struct UMaterialExpressionAbs : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UEnvQueryGenerator_Donut : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue InnerRadius; // 0x80
	FAIDataProviderFloatValue OuterRadius; // 0xb8
	FAIDataProviderIntValue NumberOfRings; // 0xf0
	FAIDataProviderIntValue PointsPerRing; // 0x128
	FEnvDirection ArcDirection; // 0x160
	FAIDataProviderFloatValue ArcAngle; // 0x180
	bool bUseSpiralPattern; // 0x1b8
	UEnvQueryContext* Center; // 0x1c0
	char bDefineArc : 1; // 0x1c8
};

struct UNiagaraDataInterfaceGrid2DCollectionReader : UNiagaraDataInterfaceGrid2D {
	FString EmitterName; // 0xf8
	FString DIName; // 0x108
};

struct URandomVector : UFieldNodeVector {
	float Magnitude; // 0xb0
};

struct UParticleEmitter : UObject {
	FName EmitterName; // 0x28
	int32_t SubUVDataOffset; // 0x30
	EEmitterRenderMode EmitterRenderMode; // 0x34
	EParticleSignificanceLevel SignificanceLevel; // 0x35
	char bUseLegacySpawningBehavior : 1; // 0x37
	char ConvertedModules : 1; // 0x37
	char bIsSoloing : 1; // 0x37
	char bCookedOut : 1; // 0x37
	char bDisabledLODsKeepEmitterAlive : 1; // 0x37
	char bDisableWhenInsignficant : 1; // 0x38
	TArray<UParticleLODLevel*> LODLevels; // 0x40
	int32_t PeakActiveParticles; // 0x50
	int32_t InitialAllocationCount; // 0x54
	float QualityLevelSpawnRateScale; // 0x58
	uint32_t DetailModeBitmask; // 0x5c
};

struct USphereComponent : UShapeComponent {
	float SphereRadius; // 0x458
};

struct UNiagaraDataInterfaceAudioSubmix : UNiagaraDataInterface {
	USoundSubmix* Submix; // 0x38
};

struct UMaterialExpressionFrac : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct AGraffitiActor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UDecalComponent* decal; // 0x228
	USceneComponent* DefaultSceneRoot; // 0x230
	float Timeline_0_time_34EAA401455F569E7367DEBBE557985B; // 0x238
	ETimelineDirection Timeline_0__Direction_34EAA401455F569E7367DEBBE557985B; // 0x23c
	UTimelineComponent* Timeline_1; // 0x240
};

struct UMaterialExpressionTextureBase : UMaterialExpression {
	UTexture* Texture; // 0x40
};

struct UParticleModuleEventReceiverBase : UParticleModuleEventBase {
	EParticleEventType EventGeneratorType; // 0x30
	FName EventName; // 0x34
};

struct UNiagaraComponentPool : UObject {
	TMap<UNiagaraSystem*, FNCPool> WorldParticleSystemPools; // 0x28
};

struct ADeathSurvCoin_C : ACoinActor_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
};

struct Ukeymaster_intro_A_Pose_Skeleton_AnimBlueprint_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2f8
};

struct URetainerBox : UContentWidget {
	bool bRetainRender; // 0x120
	bool RenderOnInvalidation; // 0x121
	bool RenderOnPhase; // 0x122
	int32_t Phase; // 0x124
	int32_t PhaseCount; // 0x128
	UMaterialInterface* EffectMaterial; // 0x130
	FName TextureParameter; // 0x138
};

struct UFPAnimBlueprint_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_79; // 0x2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_78; // 0x320
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_77; // 0x348
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_76; // 0x370
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_75; // 0x398
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_74; // 0x3c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_73; // 0x3e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_72; // 0x410
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_71; // 0x438
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_70; // 0x460
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_69; // 0x488
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_68; // 0x4b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_67; // 0x4d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_66; // 0x500
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_65; // 0x528
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_64; // 0x550
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0x578
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0x5a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0x5c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x5f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x618
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x640
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x668
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x690
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x6b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x6e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0x708
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0x730
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0x758
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0x780
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0x7a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0x7d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0x7f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0x820
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0x848
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0x870
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x898
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x8c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x8e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x910
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x938
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x960
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x988
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x9b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x9d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0xa00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0xa28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0xa50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0xa78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0xaa0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0xac8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0xaf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0xb18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0xb40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0xb68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0xb90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0xbb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0xbe0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0xc08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0xc30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0xc58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0xc80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0xca8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0xcd0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0xcf8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0xd20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0xd48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0xd70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0xd98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0xdc0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0xde8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0xe10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0xe38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0xe60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0xe88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0xeb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0xed8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0xf00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0xf28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0xf50
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0xfd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x1000
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x1080
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x10b0
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x1130
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x1160
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x11e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x1210
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x1290
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x12c0
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x1340
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x1370
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x13f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x14b8
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x1538
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x1568
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x15e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x1618
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x1698
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x16c8
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1748
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x1778
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x17f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x1828
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x18a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1948
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x19c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x19f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x1a78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x1b18
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x1b98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x1bc8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x1c48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x1ce8
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x1d68
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x1d98
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x1e80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x1eb0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x1f30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x1ff8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x2078
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x20a8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x2128
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x2158
	FAnimNode_Inertialization AnimGraphNode_Inertialization; // 0x2208
	float Speed; // 0x2278
	bool IsInAir; // 0x227c
	bool AttackBool; // 0x227d
	float keepSurv; // 0x2280
	bool JumpEndChek; // 0x2284
	bool FIRE; // 0x2285
	bool Plant; // 0x2286
	float Direction; // 0x2288
	int32_t TypeAttack; // 0x228c
	bool MarioStun; // 0x2290
	bool Flashed; // 0x2291
	bool PropHunt?; // 0x2292
	float Delta Time X; // 0x2294
	bool SpeedB; // 0x2298
	bool StopRunB; // 0x2299
	float StopRunDelay; // 0x229c
	bool Hard Hit?; // 0x22a0
	float SpeedRateF; // 0x22a4
	float TimeRun; // 0x22a8
	bool NewVar_1; // 0x22ac
};

struct UShadowMapTexture2D : UTexture2D {
	EShadowMapFlags ShadowmapFlags; // 0x100
};

struct UVampireSpell1_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	float Radius; // 0xf0
	bool ActiveSpell1?; // 0xf4
	bool CD?; // 0xf5
};

struct UMovieSceneMaterialTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UMRMeshComponent : UPrimitiveComponent {
	UMaterialInterface* Material; // 0x450
	UMaterialInterface* WireframeMaterial; // 0x458
	bool bCreateMeshProxySections; // 0x460
	bool bUpdateNavMeshOnMeshUpdate; // 0x461
	bool bNeverCreateCollisionMesh; // 0x462
	UBodySetup* CachedBodySetup; // 0x468
	TArray<UBodySetup*> BodySetups; // 0x470
};

struct UNiagaraDataInterfaceNeighborGrid3D : UNiagaraDataInterfaceGrid3D {
	uint32_t MaxNeighborsPerCell; // 0x100
};

struct USCS_Node : UObject {
	UObject* ComponentClass; // 0x28
	UActorComponent* ComponentTemplate; // 0x30
	FBlueprintCookedComponentInstancingData CookedComponentInstancingData; // 0x38
	FName AttachToName; // 0x80
	FName ParentComponentOrVariableName; // 0x88
	FName ParentComponentOwnerClassName; // 0x90
	bool bIsParentComponentNative; // 0x98
	TArray<USCS_Node*> ChildNodes; // 0xa0
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0xb0
	FGuid VariableGuid; // 0xc0
	FName InternalVariableName; // 0xd0
};

struct UEnvQueryTest_Trace : UEnvQueryTest {
	FEnvTraceData TraceData; // 0x1f8
	FAIDataProviderBoolValue TraceFromContext; // 0x228
	FAIDataProviderFloatValue ItemHeightOffset; // 0x260
	FAIDataProviderFloatValue ContextHeightOffset; // 0x298
	UEnvQueryContext* Context; // 0x2d0
};

struct UEngineMessage : ULocalMessage {
	FString FailedPlaceMessage; // 0x28
	FString MaxedOutMessage; // 0x38
	FString EnteredMessage; // 0x48
	FString LeftMessage; // 0x58
	FString GlobalNameChange; // 0x68
	FString SpecEnteredMessage; // 0x78
	FString NewPlayerMessage; // 0x88
	FString NewSpecMessage; // 0x98
};

struct AServerStatReplicator : AInfo {
	bool bUpdateStatNet; // 0x220
	bool bOverwriteClientStats; // 0x221
	uint32_t Channels; // 0x224
	uint32_t InRate; // 0x228
	uint32_t OutRate; // 0x22c
	uint32_t MaxPacketOverhead; // 0x234
	uint32_t InRateClientMax; // 0x238
	uint32_t InRateClientMin; // 0x23c
	uint32_t InRateClientAvg; // 0x240
	uint32_t InPacketsClientMax; // 0x244
	uint32_t InPacketsClientMin; // 0x248
	uint32_t InPacketsClientAvg; // 0x24c
	uint32_t OutRateClientMax; // 0x250
	uint32_t OutRateClientMin; // 0x254
	uint32_t OutRateClientAvg; // 0x258
	uint32_t OutPacketsClientMax; // 0x25c
	uint32_t OutPacketsClientMin; // 0x260
	uint32_t OutPacketsClientAvg; // 0x264
	uint32_t NetNumClients; // 0x268
	uint32_t InPackets; // 0x26c
	uint32_t OutPackets; // 0x270
	uint32_t InBunches; // 0x274
	uint32_t OutBunches; // 0x278
	uint32_t OutLoss; // 0x27c
	uint32_t InLoss; // 0x280
	uint32_t VoiceBytesSent; // 0x284
	uint32_t VoiceBytesRecv; // 0x288
	uint32_t VoicePacketsSent; // 0x28c
	uint32_t VoicePacketsRecv; // 0x290
	uint32_t PercentInVoice; // 0x294
	uint32_t PercentOutVoice; // 0x298
	uint32_t NumActorChannels; // 0x29c
	uint32_t NumConsideredActors; // 0x2a0
	uint32_t PrioritizedActors; // 0x2a4
	uint32_t NumRelevantActors; // 0x2a8
	uint32_t NumRelevantDeletedActors; // 0x2ac
	uint32_t NumReplicatedActorAttempts; // 0x2b0
	uint32_t NumReplicatedActors; // 0x2b4
	uint32_t NumActors; // 0x2b8
	uint32_t NumNetActors; // 0x2bc
	uint32_t NumDormantActors; // 0x2c0
	uint32_t NumInitiallyDormantActors; // 0x2c4
	uint32_t NumNetGUIDsAckd; // 0x2c8
	uint32_t NumNetGUIDsPending; // 0x2cc
	uint32_t NumNetGUIDsUnAckd; // 0x2d0
	uint32_t ObjPathBytes; // 0x2d4
	uint32_t NetGUIDOutRate; // 0x2d8
	uint32_t NetGUIDInRate; // 0x2dc
	uint32_t NetSaturated; // 0x2e0
};

struct USoundClass : UObject {
	FSoundClassProperties Properties; // 0x28
	TArray<USoundClass*> ChildClasses; // 0xa8
	TArray<FPassiveSoundMixModifier> PassiveSoundMixModifiers; // 0xb8
	USoundClass* ParentClass; // 0xc8
};

struct UInteractiveGizmoManager : UObject {
	TArray<FActiveGizmo> ActiveGizmos; // 0x30
	TMap<FString, UInteractiveGizmoBuilder*> GizmoBuilders; // 0x58
};

struct USourceEffectChorusPreset : USoundEffectSourcePreset {
	FSourceEffectChorusSettings Settings; // 0x108
};

struct UMaterialExpressionTime : UMaterialExpression {
	char bIgnorePause : 1; // 0x40
	char bOverride_Period : 1; // 0x40
	float Period; // 0x44
};

struct UMaterialExpressionDynamicParameter : UMaterialExpression {
	TArray<FString> ParamNames; // 0x40
	FLinearColor DefaultValue; // 0x50
	uint32_t ParameterIndex; // 0x60
};

struct UPlayFabAuthenticationContext : UObject {
	FString ClientSessionTicket; // 0x28
	FString EntityToken; // 0x38
	FString DeveloperSecretKey; // 0x48
	FString PlayFabId; // 0x58
};

struct UNiagaraSystem : UFXSystemAsset {
	bool bDumpDebugSystemInfo; // 0x30
	bool bDumpDebugEmitterInfo; // 0x31
	bool bRequireCurrentFrameData; // 0x32
	char bFixedBounds : 1; // 0x34
	UNiagaraEffectType* EffectType; // 0x38
	bool bOverrideScalabilitySettings; // 0x40
	TArray<FNiagaraSystemScalabilityOverride> ScalabilityOverrides; // 0x48
	FNiagaraSystemScalabilityOverrides SystemScalabilityOverrides; // 0x58
	TArray<FNiagaraEmitterHandle> EmitterHandles; // 0x68
	TArray<UNiagaraParameterCollectionInstance*> ParameterCollectionOverrides; // 0x78
	UNiagaraScript* SystemSpawnScript; // 0x88
	UNiagaraScript* SystemUpdateScript; // 0x90
	FNiagaraSystemCompiledData SystemCompiledData; // 0xa8
	FNiagaraUserRedirectionParameterStore ExposedParameters; // 0x2c0
	FBox FixedBounds; // 0x388
	bool bAutoDeactivate; // 0x3a4
	float WarmupTime; // 0x3a8
	int32_t WarmupTickCount; // 0x3ac
	float WarmupTickDelta; // 0x3b0
	bool bHasSystemScriptDIsWithPerInstanceData; // 0x3b4
	TArray<FName> UserDINamesReadInSystemScripts; // 0x3b8
};

struct UDoppel_FPP_AnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0x348
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x3c8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x3f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x548
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x570
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x630
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_18; // 0x658
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_17; // 0x6f8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x798
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x8f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x918
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x940
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x968
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x990
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x9b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x9e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0xa08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0xa30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0xa58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0xa80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0xaa8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0xad0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0xaf8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0xb20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0xb48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0xb70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0xb98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0xbc0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0xbe8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0xc10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0xc38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0xc60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0xc88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0xcb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0xcd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0xd00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0xd28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0xd50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0xd78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0xda0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0xdc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0xdf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0xe18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0xe40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0xe68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0xe90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0xeb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0xee0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0xf08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0xf30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0xf58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0xf80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0xfa8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0xfd0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0xff8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x1020
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x1048
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x1070
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x1098
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x10c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x10e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x1110
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x1138
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x1160
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x1188
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x11b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x11d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x1200
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x1228
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x1250
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x12d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_16; // 0x1300
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x13a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0x1420
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_2; // 0x14a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0x1540
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x15c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_15; // 0x1640
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x16e0
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x1760
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x1790
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_14; // 0x1810
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x18b0
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x1930
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x1960
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_13; // 0x1a48
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x1ae8
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x1bd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x1c00
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x1c80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x1cb0
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x1d30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x1d60
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1de0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x1e10
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x1e90
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_12; // 0x1ec0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x1f60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x1fe0
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x2060
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x2100
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x2180
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_11; // 0x2200
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x22a0
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x2320
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_10; // 0x2350
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x23f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x2470
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x24f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x2520
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x25a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0x2620
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x26c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x2760
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x27e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x2860
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x2900
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x2930
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x29b0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x2a30
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x2ad0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x2b00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x2b80
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x2c00
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x2ca0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x2d40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x2de0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2e60
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x2ee0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x2f10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x2f90
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x3010
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x30b0
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x30e0
	FAnimNode_Root AnimGraphNode_Root; // 0x3190
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x31c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3260
	float keepSurv; // 0x32e0
	bool IsInAir; // 0x32e4
	float Speed; // 0x32e8
	float Direction; // 0x32ec
	int32_t TypeAttack; // 0x32f0
	bool AttackBool; // 0x32f4
	bool JumpEndChek; // 0x32f5
	bool FIRE; // 0x32f6
	bool Plant; // 0x32f7
	bool MarioStun; // 0x32f8
	bool ImSurv?; // 0x32f9
	bool Switch?; // 0x32fa
	bool SchoolBell?; // 0x32fb
	bool Flashed; // 0x32fc
	bool HiddenAttack?; // 0x32fd
	bool HardHit?; // 0x32fe
	bool PropHunt?; // 0x32ff
	float SpeedRateF; // 0x3300
	float Delta Time X; // 0x3304
	float TimeRun; // 0x3308
	bool Broke Anim; // 0x330c
};

struct USourceEffectPannerPreset : USoundEffectSourcePreset {
	FSourceEffectPannerSettings Settings; // 0x98
};

struct UImageSequenceProtocol_EXR : UImageSequenceProtocol {
	bool bCompressed; // 0xd8
	EHDRCaptureGamut CaptureGamut; // 0xd9
};

struct ADecalActor : AActor {
	UDecalComponent* decal; // 0x220
};

struct USoundNodeConcatenator : USoundNode {
	TArray<float> InputVolume; // 0x48
};

struct UVectorField : UObject {
	FBox Bounds; // 0x28
	float Intensity; // 0x44
};

struct UMaterialInstance : UMaterialInterface {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0x90
	UMaterialInterface* Parent; // 0xd0
	char bHasStaticPermutationResource : 1; // 0xd8
	char bOverrideSubsurfaceProfile : 1; // 0xd8
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xe0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xf0
	TArray<FTextureParameterValue> TextureParameterValues; // 0x100
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0x110
	TArray<FFontParameterValue> FontParameterValues; // 0x120
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0x130
	FStaticParameterSet StaticParameters; // 0x148
	FMaterialCachedParameters CachedLayerParameters; // 0x188
	TArray<UObject*> CachedReferencedTextures; // 0x328
};

struct APaperGroupedSpriteActor : AActor {
	UPaperGroupedSpriteComponent* RenderComponent; // 0x220
};

struct UPlayFabLocalizationAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x98
	UPlayFabJsonObject* RequestJsonObj; // 0xa0
	UPlayFabJsonObject* ResponseJsonObj; // 0xa8
};

struct ACableActor : AActor {
	UCableComponent* CableComponent; // 0x220
};

struct UEOSCoreLobbyPromoteMember : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UParticleModuleLocationPrimitiveSphere_Seeded : UParticleModuleLocationPrimitiveSphere {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xe0
};

struct UStaticMeshComponent : UMeshComponent {
	int32_t ForcedLodModel; // 0x468
	int32_t PreviousLODLevel; // 0x46c
	int32_t MinLOD; // 0x470
	int32_t SubDivisionStepSize; // 0x474
	UStaticMesh* StaticMesh; // 0x478
	FColor WireframeColorOverride; // 0x480
	char bEvaluateWorldPositionOffset : 1; // 0x484
	char bOverrideWireframeColor : 1; // 0x484
	char bOverrideMinLod : 1; // 0x484
	char bOverrideNavigationExport : 1; // 0x484
	char bForceNavigationObstacle : 1; // 0x484
	char bDisallowMeshPaintPerInstance : 1; // 0x484
	char bIgnoreInstanceForTextureStreaming : 1; // 0x484
	char bOverrideLightMapRes : 1; // 0x484
	char bCastDistanceFieldIndirectShadow : 1; // 0x485
	char bOverrideDistanceFieldSelfShadowBias : 1; // 0x485
	char bUseSubDivisions : 1; // 0x485
	char bUseDefaultCollision : 1; // 0x485
	char bReverseCulling : 1; // 0x485
	int32_t OverriddenLightMapRes; // 0x488
	float DistanceFieldIndirectShadowMinVisibility; // 0x48c
	float DistanceFieldSelfShadowBias; // 0x490
	float StreamingDistanceMultiplier; // 0x494
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x498
	TArray<FStreamingTextureBuildInfo> StreamingTextureData; // 0x4a8
	FLightmassPrimitiveSettings LightmassSettings; // 0x4b8
};

struct UParticleModuleBeamTarget : UParticleModuleBeamBase {
	Beam2SourceTargetMethod TargetMethod; // 0x30
	FName TargetName; // 0x34
	FRawDistributionVector Target; // 0x40
	char bTargetAbsolute : 1; // 0x88
	char bLockTarget : 1; // 0x88
	Beam2SourceTargetTangentMethod TargetTangentMethod; // 0x8c
	FRawDistributionVector TargetTangent; // 0x90
	char bLockTargetTangent : 1; // 0xd8
	FRawDistributionFloat TargetStrength; // 0xe0
	char bLockTargetStength : 1; // 0x110
	float LockRadius; // 0x114
};

struct UMovieSceneBoolSection : UMovieSceneSection {
	bool DefaultValue; // 0xe8
	FMovieSceneBoolChannel BoolCurve; // 0xf0
};

struct UNavCollisionBase : UObject {
	char bIsDynamicObstacle : 1; // 0x28
};

struct UW_DevLab_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_75; // 0x268
	UButton* Button_80; // 0x270
	UButton* Button_144; // 0x278
	UButton* ChangeLevel; // 0x280
	UComboBoxString* ComboBoxString_132; // 0x288
};

struct UInterpTrackInstSlomo : UInterpTrackInst {
	float OldTimeDilation; // 0x28
};

struct ULiveLinkCurveRemapSettings : ULiveLinkSourceSettings {
	FLiveLinkCurveConversionSettings CurveConversionSettings; // 0xa0
};

struct UGizmoAxisIntervalParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoFloatParameterSource> FloatParameterSource; // 0x48
	float MinParameter; // 0x58
	float MaxParameter; // 0x5c
};

struct UDatasmithPointLightComponentTemplate : UDatasmithObjectTemplate {
	ELightUnits IntensityUnits; // 0x30
	float SourceRadius; // 0x34
	float SourceLength; // 0x38
	float AttenuationRadius; // 0x3c
};

struct UMaterialExpressionOneMinus : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate onSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct ULightComponentBase : USceneComponent {
	FGuid LightGuid; // 0x1f8
	float Brightness; // 0x208
	float Intensity; // 0x20c
	FColor LightColor; // 0x210
	char bAffectsWorld : 1; // 0x214
	char CastShadows : 1; // 0x214
	char CastStaticShadows : 1; // 0x214
	char CastDynamicShadows : 1; // 0x214
	char bAffectTranslucentLighting : 1; // 0x214
	char bTransmission : 1; // 0x214
	char bCastVolumetricShadow : 1; // 0x214
	char bCastDeepShadow : 1; // 0x214
	char bCastRaytracedShadow : 1; // 0x215
	char bAffectReflection : 1; // 0x215
	char bAffectGlobalIllumination : 1; // 0x215
	float DeepShadowLayerDistribution; // 0x218
	float IndirectLightingIntensity; // 0x21c
	float VolumetricScatteringIntensity; // 0x220
	int32_t SamplesPerPixel; // 0x224
};

struct UWBP_CustomizationMenu_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ShowContent_Anim; // 0x268
	UWidgetAnimation* ChangeContent_Anim; // 0x270
	UWidgetAnimation* BannersButtonAnimation; // 0x278
	UWidgetAnimation* CharactersButtonAnimation; // 0x280
	UButton* Button_Banners; // 0x288
	UButton* Button_Characters; // 0x290
	UHorizontalBox* HorizontalBox_Buttons; // 0x298
	UOverlay* Overlay_Content; // 0x2a0
	UOverlay* Overlay_RedLine; // 0x2a8
	UProgressBar* ProgressBar_KB; // 0x2b0
	UProgressBar* ProgressBar_Mouse; // 0x2b8
	USizeBox* SizeBox_Buttons; // 0x2c0
	UTextBlock* TextBlock_Banners; // 0x2c8
	UTextBlock* TextBlock_Characters; // 0x2d0
	UW_Path_C* W_Path; // 0x2d8
	UWBP_NewItemMarker_C* WBP_NewItemMarker_Banners; // 0x2e0
	UWBP_NewItemMarker_C* WBP_NewItemMarker_Skins; // 0x2e8
	bool IsButtonsLocked; // 0x2f0
	UButton* CurrentHoveredButton; // 0x2f8
	TArray<UButton*> ButtonsArray; // 0x300
	float SliderValueFocus; // 0x310
	UW_CustomizeBanner_C* CustomizeBannerWidget; // 0x318
	UW_PlayerSkins_C* PlayerSkinsWidget; // 0x320
	int32_t CurrentPageIndex; // 0x328
	int32_t UNDEFINED_PAGE; // 0x32c
	int32_t ROOT_PAGE; // 0x330
	int32_t SKINS_PAGE; // 0x334
	int32_t BANNERS_PAGE; // 0x338
	UW_MainMenu_C* Initializer Widget; // 0x340
	FMulticastInlineDelegate NewEventDispatcher_1; // 0x348
	bool Is Escape Locked; // 0x358
};

struct UWBP_EliminatedScreen_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Animation; // 0x268
	UHorizontalBox* HorizontalBox_1; // 0x270
	UImage* Image_74; // 0x278
	UImage* Image_121; // 0x280
	UTextBlock* Text_Nickname; // 0x288
	UTextBlock* Text_Number; // 0x290
	UTextBlock* Text_Status; // 0x298
	UW_Banner_C* W_Banner_56; // 0x2a0
};

struct UMyPluginObject : UObject {
	FMyPluginStruct MyStruct; // 0x28
};

struct USurvivorInteraction_C : USurvivorSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
	bool SkillActivated?; // 0x100
	bool BlockTick?; // 0x101
	ASurvivorMasterBP_C* CrawlPlayer; // 0x108
	float ReanimateProgress; // 0x110
	float SelfReanimateProgress; // 0x114
	float ReanimateAllyFullProgress; // 0x118
	float ReanimateSelfFullProgress; // 0x11c
	int32_t RestoreHealth; // 0x120
	ANewAlarmBP_C* CurrentAlarm; // 0x128
	bool RandomSkillCheck?; // 0x130
	float DeltaSeconds; // 0x134
	AHypnoChairBP_C* Chair; // 0x138
	float FullProgressHelpGetOutChair; // 0x140
	float CurrentHelpGetOutChair; // 0x144
	bool ProgressFull?; // 0x148
	float FullProgressSelfGetOutChair; // 0x14c
	float CurrentSelfGetOutChair; // 0x150
	int32_t RandomChance; // 0x154
	bool RandomSelfGetOut?; // 0x158
	AExit_C* Exit; // 0x160
	bool Failed?; // 0x168
	float ChanceIncreaseRate; // 0x16c
	float PenaltyTime; // 0x170
	float MaxSkillCheckTime; // 0x174
	float MinSkillCheckTime; // 0x178
	UFMODAudioComponent* SurvShakingAudio; // 0x180
	float CurrentSkillCheckTime; // 0x188
	bool SkillCheckedStarted; // 0x18c
	bool CloseDoor; // 0x18d
	float SkillCheckLevel; // 0x190
	bool TutorialBlock?; // 0x194
	ALootableMesh_C* Lootable Mesh; // 0x198
	float CurrentLootableTime; // 0x1a0
	float FullLootableTime; // 0x1a4
	int32_t RestoreHealthSelf; // 0x1a8
	UFMODAudioComponent* ReanimateSound; // 0x1b0
	TArray<AActor*> Hit Actor; // 0x1b8
	bool CanSave?; // 0x1c8
};

struct UNiagaraParameterCollectionInstance : UObject {
	UNiagaraParameterCollection* Collection; // 0x28
	TArray<FNiagaraVariable> OverridenParameters; // 0x30
	FNiagaraParameterStore ParameterStorage; // 0x40
};

struct UAutomationTestSettings : UObject {
	TArray<FString> EngineTestModules; // 0x28
	TArray<FString> EditorTestModules; // 0x38
	FSoftObjectPath AutomationTestmap; // 0x48
	TArray<FEditorMapPerformanceTestDefinition> EditorPerformanceTestMaps; // 0x60
	TArray<FSoftObjectPath> AssetsToOpen; // 0x70
	TArray<FString> MapsToPIETest; // 0x80
	FBuildPromotionTestSettings BuildPromotionTest; // 0x90
	FMaterialEditorPromotionSettings MaterialEditorPromotionTest; // 0x280
	FParticleEditorPromotionSettings ParticleEditorPromotionTest; // 0x2b0
	FBlueprintEditorPromotionSettings BlueprintEditorPromotionTest; // 0x2c0
	TArray<FString> TestLevelFolders; // 0x2f0
	TArray<FExternalToolDefinition> ExternalTools; // 0x300
	TArray<FEditorImportExportTestDefinition> ImportExportTestDefinitions; // 0x310
	TArray<FLaunchOnTestSettings> LaunchOnSettings; // 0x320
	FIntPoint DefaultScreenshotResolution; // 0x330
	float PIETestDuration; // 0x338
};

struct UEOSCoreLobbyUpdateLobby : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct AWaypointMarkActor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UWidgetComponent* Widget; // 0x228
	USceneComponent* DefaultSceneRoot; // 0x230
	MarkTypeEnum MarkType; // 0x238
};

struct UAISense_Blueprint : UAISense {
	UUserDefinedStruct* ListenerDataType; // 0x80
	TArray<UAIPerceptionComponent*> ListenerContainer; // 0x88
	TArray<UAISenseEvent*> UnprocessedEvents; // 0x98
};

struct UMainchar1_AnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_23; // 0x2c8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_12; // 0x2f0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_22; // 0x448
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x470
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_21; // 0x4b8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_11; // 0x4e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_14; // 0x638
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_20; // 0x6d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_19; // 0x700
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_10; // 0x728
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_18; // 0x7d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_10; // 0x800
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_9; // 0x958
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_17; // 0xab0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_16; // 0xad8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_15; // 0xb00
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0xb28
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_8; // 0xb70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_13; // 0xcc8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_14; // 0xd68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_13; // 0xd90
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_7; // 0xdb8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_12; // 0xf10
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_6; // 0xf38
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_11; // 0x1090
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_110; // 0x10b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_12; // 0x1138
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_11; // 0x11d8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_10; // 0x1298
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_109; // 0x1358
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_11; // 0x13d8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0x1478
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_10; // 0x15d0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_9; // 0x15f8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0x1620
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_108; // 0x1648
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0x16c8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0x16f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_9; // 0x1848
	FAnimNode_Slot AnimGraphNode_Slot; // 0x18f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_10; // 0x1940
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_9; // 0x19e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_107; // 0x1aa0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_8; // 0x1b20
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0x1bd0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x1d28
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x1d50
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x1d78
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8; // 0x1ed0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x1f90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_106; // 0x1fb8
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x2038
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_89; // 0x2058
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_88; // 0x2080
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_87; // 0x20a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_86; // 0x20d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_85; // 0x20f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_84; // 0x2120
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_83; // 0x2148
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_82; // 0x2170
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_81; // 0x2198
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_80; // 0x21c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_79; // 0x21e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_78; // 0x2210
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_77; // 0x2238
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_76; // 0x2260
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_75; // 0x2288
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_74; // 0x22b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_73; // 0x22d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_72; // 0x2300
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_71; // 0x2328
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_70; // 0x2350
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_69; // 0x2378
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_68; // 0x23a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_67; // 0x23c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_66; // 0x23f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_65; // 0x2418
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_64; // 0x2440
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0x2468
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0x2490
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0x24b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x24e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x2508
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x2530
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x2558
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x2580
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x25a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x25d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0x25f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0x2620
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0x2648
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0x2670
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0x2698
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0x26c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0x26e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0x2710
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0x2738
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0x2760
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x2788
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x27b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x27d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x2800
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x2828
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x2850
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x2878
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x28a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x28c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x28f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x2918
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x2940
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x2968
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x2990
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x29b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x29e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x2a08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x2a30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x2a58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x2a80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x2aa8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x2ad0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x2af8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x2b20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x2b48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x2b70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x2b98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x2bc0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x2be8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x2c10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x2c38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x2c60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x2c88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x2cb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x2cd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x2d00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x2d28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x2d50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x2d78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x2da0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x2dc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2df0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x2e18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_105; // 0x2e40
	FAnimNode_StateResult AnimGraphNode_StateResult_47; // 0x2ec0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_104; // 0x2ef0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_103; // 0x2f70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_102; // 0x2ff0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_101; // 0x3070
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_7; // 0x30f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_100; // 0x31a0
	FAnimNode_StateResult AnimGraphNode_StateResult_46; // 0x3220
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_99; // 0x3250
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_98; // 0x32d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_97; // 0x3350
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_8; // 0x33d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_96; // 0x3470
	FAnimNode_StateResult AnimGraphNode_StateResult_45; // 0x34f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_95; // 0x3520
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_94; // 0x35a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_93; // 0x3620
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_7; // 0x36a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_92; // 0x3740
	FAnimNode_StateResult AnimGraphNode_StateResult_44; // 0x37c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_91; // 0x37f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_90; // 0x3870
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_89; // 0x38f0
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_6; // 0x3970
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_88; // 0x3a10
	FAnimNode_StateResult AnimGraphNode_StateResult_43; // 0x3a90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_87; // 0x3ac0
	FAnimNode_StateResult AnimGraphNode_StateResult_42; // 0x3b40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_86; // 0x3b70
	FAnimNode_StateResult AnimGraphNode_StateResult_41; // 0x3bf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_85; // 0x3c20
	FAnimNode_StateResult AnimGraphNode_StateResult_40; // 0x3ca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_84; // 0x3cd0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0x3d50
	FAnimNode_BlendBoneByChannel AnimGraphNode_BlendBoneByChannel_2; // 0x3df0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_6; // 0x3e58
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_17; // 0x3f08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_16; // 0x3ff0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x40d8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_15; // 0x4178
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_83; // 0x4260
	FAnimNode_StateResult AnimGraphNode_StateResult_39; // 0x42e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_82; // 0x4310
	FAnimNode_StateResult AnimGraphNode_StateResult_38; // 0x4390
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_81; // 0x43c0
	FAnimNode_StateResult AnimGraphNode_StateResult_37; // 0x4440
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_80; // 0x4470
	FAnimNode_StateResult AnimGraphNode_StateResult_36; // 0x44f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_79; // 0x4520
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x45a0
	FAnimNode_BlendBoneByChannel AnimGraphNode_BlendBoneByChannel; // 0x4640
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_14; // 0x46a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_13; // 0x4790
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x4878
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_5; // 0x4918
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_12; // 0x49c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_78; // 0x4ab0
	FAnimNode_StateResult AnimGraphNode_StateResult_35; // 0x4b30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_77; // 0x4b60
	FAnimNode_StateResult AnimGraphNode_StateResult_34; // 0x4be0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_76; // 0x4c10
	FAnimNode_StateResult AnimGraphNode_StateResult_33; // 0x4c90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_75; // 0x4cc0
	FAnimNode_StateResult AnimGraphNode_StateResult_32; // 0x4d40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_74; // 0x4d70
	FAnimNode_StateResult AnimGraphNode_StateResult_31; // 0x4df0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_73; // 0x4e20
	FAnimNode_StateResult AnimGraphNode_StateResult_30; // 0x4ea0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_72; // 0x4ed0
	FAnimNode_StateResult AnimGraphNode_StateResult_29; // 0x4f50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_71; // 0x4f80
	FAnimNode_StateResult AnimGraphNode_StateResult_28; // 0x5000
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_70; // 0x5030
	FAnimNode_StateResult AnimGraphNode_StateResult_27; // 0x50b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_69; // 0x50e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_68; // 0x5160
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_67; // 0x51e0
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_5; // 0x5260
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_66; // 0x5300
	FAnimNode_StateResult AnimGraphNode_StateResult_26; // 0x5380
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_65; // 0x53b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_64; // 0x5430
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_63; // 0x54b0
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_4; // 0x5530
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_62; // 0x55d0
	FAnimNode_StateResult AnimGraphNode_StateResult_25; // 0x5650
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_61; // 0x5680
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_60; // 0x5700
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_3; // 0x5780
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_59; // 0x5820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_58; // 0x58a0
	FAnimNode_StateResult AnimGraphNode_StateResult_24; // 0x5920
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_57; // 0x5950
	FAnimNode_StateResult AnimGraphNode_StateResult_23; // 0x59d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_56; // 0x5a00
	FAnimNode_StateResult AnimGraphNode_StateResult_22; // 0x5a80
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_11; // 0x5ab0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_55; // 0x5b98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x5c18
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_10; // 0x5cb8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_54; // 0x5da0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x5e20
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x5ec0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x5fa8
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_2; // 0x6090
	FAnimNode_StateResult AnimGraphNode_StateResult_21; // 0x6130
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_53; // 0x6160
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0x61e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_52; // 0x6210
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0x6290
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_51; // 0x62c0
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x6340
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_50; // 0x6370
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x63f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_49; // 0x6420
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x64a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_48; // 0x64d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_47; // 0x6550
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_46; // 0x65d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_45; // 0x6650
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_44; // 0x66d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_43; // 0x6750
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_42; // 0x67d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_41; // 0x6850
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_40; // 0x68d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_4; // 0x6950
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7; // 0x6a00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_39; // 0x6ac0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x6b40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_38; // 0x6c28
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0x6ca8
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x6d68
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0x6d98
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0x6e58
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_37; // 0x6f18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_36; // 0x6f98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_35; // 0x7018
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34; // 0x7098
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0x7118
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x7198
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x7218
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0x7298
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x7318
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0x73c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x7448
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x74c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x7548
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x7630
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x7660
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x76e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x7710
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x7790
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x77c0
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x7840
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x7870
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x78f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x7920
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x79a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x79d0
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x7a50
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x7a80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x7b20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x7ba0
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x7c20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x7c50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x7cd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x7d50
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x7dd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x7e70
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x7ef0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x7f20
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x8008
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x8038
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x80b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x80e8
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x8168
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x8198
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x8218
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x8248
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x8330
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x8418
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x84b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x8538
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x85b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x8638
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x86b8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x8738
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x87e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x88d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x8950
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x89d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x8a50
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x8b10
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x8bc0
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x8ca8
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x8cd8
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x8d88
	FAnimNode_Root AnimGraphNode_Root; // 0x8da8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x8dd8
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x8ee0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x8fe8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x90a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x90d0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x9150
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x91f0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x92b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x9408
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x9430
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x9458
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x94d8
	bool IsOwner?; // 0x9558
	bool IsInAir?; // 0x9559
	float Speed; // 0x955c
	float Direction; // 0x9560
	bool Crawl?; // 0x9564
	bool FPP?; // 0x9565
	bool Grapple?; // 0x9566
	bool OnChair?; // 0x9567
	bool AlarmReloading?; // 0x9568
	bool EndJump?; // 0x9569
	bool OpenDoor?; // 0x956a
	ItemType ItemType; // 0x956b
	bool ImHealing?; // 0x956c
	bool UseFlashlight?; // 0x956d
	float HasItem; // 0x9570
	FRotator HeadRotation; // 0x9574
	bool TurnLeft?; // 0x9580
	bool TurnRight?; // 0x9581
	float HorizontalCameraAxis; // 0x9584
	float VerticalCameraAxis; // 0x9588
	bool ImHealingAlly?; // 0x958c
	bool HealingMe?; // 0x958d
	SurvStateEnum SurvStateEnum; // 0x958e
	MovementTypeEnum MovementType; // 0x958f
	bool Idle2?; // 0x9590
	ASurvivorMasterBP_C* Surv; // 0x9598
	bool Hitted?; // 0x95a0
	bool ItemTake?; // 0x95a1
	int32_t KillerType; // 0x95a4
	int32_t Health; // 0x95a8
	bool RandomSelfGetOut?; // 0x95ac
	bool Failed?; // 0x95ad
	bool Attack?; // 0x95ae
	bool GetReady?; // 0x95af
	bool CrouchAnimStart?; // 0x95b0
	bool UnCrouch?; // 0x95b1
	bool Capture Mode?; // 0x95b2
	float Delta Time X; // 0x95b4
	float Blend Weights 0; // 0x95b8
	UAnimMontage* HelpGetOutMontage; // 0x95c0
	UAnimMontage* SelfGetOutMontage; // 0x95c8
	UAnimMontage* DropChairMontage; // 0x95d0
	UAnimMontage* IdleToIdleCrawl; // 0x95d8
	SurvChars Surv Char; // 0x95e0
	bool StartCrawl?; // 0x95e1
	bool Custom Play Anim Walk?; // 0x95e2
	bool TaigaBonesTransform?; // 0x95e3
	bool Stop Move?; // 0x95e4
	bool Close Door; // 0x95e5
	bool NotTestMode?; // 0x95e6
};

struct UPawnAction_Sequence : UPawnAction {
	TArray<UPawnAction*> ActionSequence; // 0x98
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
	UPawnAction* RecentActionCopy; // 0xb0
};

struct UParticleModuleVectorFieldRotationRate : UParticleModuleVectorFieldBase {
	FVector RotationRate; // 0x30
};

struct UMaterialExpressionSine : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UMaterialFunctionInterface : UObject {
	FGuid StateId; // 0x28
	EMaterialFunctionUsage MaterialFunctionUsage; // 0x38
};

struct UARPlaneComponent : UARComponent {
	FARPlaneUpdatePayload ReplicatedPayload; // 0x280
};

struct UGeometryCacheComponent : UMeshComponent {
	UGeometryCache* GeometryCache; // 0x468
	bool bRunning; // 0x470
	bool bLooping; // 0x471
	float StartTimeOffset; // 0x474
	float PlaybackSpeed; // 0x478
	int32_t NumTracks; // 0x47c
	float ElapsedTime; // 0x480
	float Duration; // 0x4b4
	bool bManualTick; // 0x4b8
};

struct UHapticFeedbackEffect_Buffer : UHapticFeedbackEffect_Base {
	TArray<char> Amplitudes; // 0x28
	int32_t SampleRate; // 0x38
};

struct USpectatorBeaconState : UObject {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	bool bRestrictCrossConsole; // 0x38
	TArray<FSpectatorReservation> Reservations; // 0x40
};

struct AHUD_MainMenu_C : AHUD {
	FPointerToUberGraphFrame UberGraphFrame; // 0x310
	USceneComponent* DefaultSceneRoot; // 0x318
	UW_MainMenu_C* Widget; // 0x320
	UGeneralSettingWBP_C* Settings; // 0x328
	UWBP_PlayWindow_C* PlayWindow; // 0x330
	UW_LoadingScreen_C* LoadingScreen; // 0x338
	USaveGame* LanguageSaveData; // 0x340
};

struct UDatasmithAreaLightActorTemplate : UDatasmithObjectTemplate {
	EDatasmithAreaLightActorType LightType; // 0x30
	EDatasmithAreaLightActorShape LightShape; // 0x31
	FVector2D Dimensions; // 0x34
	FLinearColor Color; // 0x3c
	float Intensity; // 0x4c
	ELightUnits IntensityUnits; // 0x50
	float Temperature; // 0x54
	TSoftObjectPtr<UTextureLightProfile> IESTexture; // 0x58
	bool bUseIESBrightness; // 0x80
	float IESBrightnessScale; // 0x84
	FRotator Rotation; // 0x88
	float SourceRadius; // 0x94
	float SourceLength; // 0x98
	float AttenuationRadius; // 0x9c
};

struct UDialogueWave : UObject {
	char bMature : 1; // 0x28
	char bOverride_SubtitleOverride : 1; // 0x28
	FString SpokenText; // 0x30
	FString SubtitleOverride; // 0x40
	TArray<FDialogueContextMapping> ContextMappings; // 0x50
	FGuid LocalizationGUID; // 0x60
};

struct AVolumetricCloud : AInfo {
	UVolumetricCloudComponent* VolumetricCloudComponent; // 0x220
};

struct UBTDecorator_BlueprintBase : UBTDecorator {
	AAIController* AIOwner; // 0x68
	AActor* ActorOwner; // 0x70
	TArray<FName> ObservedKeyNames; // 0x78
	char bShowPropertyDetails : 1; // 0x98
	char bCheckConditionOnlyBlackBoardChanges : 1; // 0x98
	char bIsObservingBB : 1; // 0x98
};

struct UTcpMessagingSettings : UObject {
	bool EnableTransport; // 0x28
	FString ListenEndpoint; // 0x30
	TArray<FString> ConnectToEndpoints; // 0x40
	int32_t ConnectionRetryDelay; // 0x50
	bool bStopServiceWhenAppDeactivates; // 0x54
};

struct AHypnoChairBP_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USphereComponent* Sphere; // 0x228
	USceneComponent* SurvEndPointResque; // 0x230
	UStaticMeshComponent* Cube; // 0x238
	UTextRenderComponent* TextRender; // 0x240
	USceneComponent* CoinScene; // 0x248
	USpotLightComponent* BlockLight; // 0x250
	USceneComponent* SurvResquePoint; // 0x258
	USceneComponent* SurvEndPoint; // 0x260
	USceneComponent* SurvOnChairStart; // 0x268
	USceneComponent* Surv'sPlace1; // 0x270
	USceneComponent* ToChairStartPoint; // 0x278
	USceneComponent* OtherSurvPoint; // 0x280
	USceneComponent* Surv'sPlace; // 0x288
	USceneComponent* ChairPoint; // 0x290
	UFMODAudioComponent* CurseAudio; // 0x298
	UPointLightComponent* CurseLight; // 0x2a0
	UChildActorComponent* BP_LightBeam; // 0x2a8
	UPointLightComponent* PointLight1; // 0x2b0
	USpotLightComponent* SpotLight; // 0x2b8
	UBoxComponent* Collision; // 0x2c0
	USkeletalMeshComponent* Chair; // 0x2c8
	UPointLightComponent* PointLight; // 0x2d0
	UBoxComponent* Box; // 0x2d8
	USceneComponent* DefaultSceneRoot; // 0x2e0
	float Timeline_3_Alpha_F3F0C8904CBEA5AE70123CBC7FBDFDA4; // 0x2e8
	ETimelineDirection Timeline_3__Direction_F3F0C8904CBEA5AE70123CBC7FBDFDA4; // 0x2ec
	UTimelineComponent* Timeline_4; // 0x2f0
	float Timeline_2_NewTrack_0_0311E6074BB66B2271E34EB9869F9BBA; // 0x2f8
	ETimelineDirection Timeline_2__Direction_0311E6074BB66B2271E34EB9869F9BBA; // 0x2fc
	UTimelineComponent* Timeline_3; // 0x300
	float Timeline_1_NewTrack_0_966DA6584CA8AA6E67197F92AF48677A; // 0x308
	ETimelineDirection Timeline_1__Direction_966DA6584CA8AA6E67197F92AF48677A; // 0x30c
	UTimelineComponent* Timeline_2; // 0x310
	float Timeline_0_NewTrack_0_5E3A22F04FF737AFFFB011B0FC191AC8; // 0x318
	ETimelineDirection Timeline_0__Direction_5E3A22F04FF737AFFFB011B0FC191AC8; // 0x31c
	UTimelineComponent* Timeline_1; // 0x320
	ETimelineDirection Resque__Direction_580C4035489EA3A3CA303D89E7AED415; // 0x328
	UTimelineComponent* Resque; // 0x330
	float CloseAll_NewTrack_0_1C99BF13488FF0864006ADB4FDC86585; // 0x338
	ETimelineDirection CloseAll__Direction_1C99BF13488FF0864006ADB4FDC86585; // 0x33c
	UTimelineComponent* CloseAll; // 0x340
	float KillingTimeRem; // 0x348
	bool Killing?; // 0x34c
	float KillingTime; // 0x350
	AActor* SurvOnChair; // 0x358
	int32_t RandomChance; // 0x360
	AKillerMasterBP_C* KillerRef; // 0x368
	float AnimSpeed; // 0x370
	bool SurvResque?; // 0x374
	float L_hand; // 0x378
	float R_hand; // 0x37c
	float L_leg; // 0x380
	float R_leg; // 0x384
	bool Start?; // 0x388
	FVector OriginalLocation; // 0x38c
	bool LocationChangeStart; // 0x398
	float LocationChangerTime; // 0x39c
	bool LocationChange?; // 0x3a0
	ASurvivorMasterBP_C* survToChair; // 0x3a8
	int32_t OpenStage; // 0x3b0
	bool Close; // 0x3b4
	bool Pause; // 0x3b5
	bool UsePicklock?; // 0x3b6
	bool Cursed; // 0x3b7
	float BoostTime; // 0x3b8
	bool Block; // 0x3bc
	UMaterialInstanceDynamic* LampMat; // 0x3c0
	bool backToStartDelay; // 0x3c8
	TArray<float> r3; // 0x3d0
	int32_t I; // 0x3e0
	float ZLocalMin; // 0x3e4
	float ZLocal; // 0x3e8
	ASurvivorMasterBP_C* SREF; // 0x3f0
	int32_t CountCoins; // 0x3f8
	float DeathEffectTime; // 0x3fc
	float DeathEffectDuration; // 0x400
	float Float1; // 0x404
	FTimerHandle DeathEffectTimer; // 0x408
	TArray<UMaterialInstanceDynamic*> DynMatArr; // 0x410
	bool Tutorial?; // 0x420
	AKillerMasterBP_C* As Killer Master BP; // 0x428
	AActor* OverlapOtherActor; // 0x430
};

struct UBehaviorTreeComponent : UBrainComponent {
	TArray<UBTNode*> NodeInstances; // 0x128
	UBehaviorTree* DefaultBehaviorTreeAsset; // 0x278
};

struct USoundNodeModulator : USoundNode {
	float PitchMin; // 0x48
	float PitchMax; // 0x4c
	float VolumeMin; // 0x50
	float VolumeMax; // 0x54
};

struct UParticleModuleMeshRotation : UParticleModuleRotationBase {
	FRawDistributionVector StartRotation; // 0x30
	char bInheritParent : 1; // 0x78
};

struct UEOSCorePlayerDataStorageDeleteFile : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UAITask : UGameplayTask {
	AAIController* OwnerController; // 0x68
};

struct AGameNetworkManager : AInfo {
	float BadPacketLossThreshold; // 0x220
	float SeverePacketLossThreshold; // 0x224
	int32_t BadPingThreshold; // 0x228
	int32_t SeverePingThreshold; // 0x22c
	int32_t AdjustedNetSpeed; // 0x230
	float LastNetSpeedUpdateTime; // 0x234
	int32_t TotalNetBandwidth; // 0x238
	int32_t MinDynamicBandwidth; // 0x23c
	int32_t MaxDynamicBandwidth; // 0x240
	char bIsStandbyCheckingEnabled : 1; // 0x244
	char bHasStandbyCheatTriggered : 1; // 0x244
	float StandbyRxCheatTime; // 0x248
	float StandbyTxCheatTime; // 0x24c
	float PercentMissingForRxStandby; // 0x250
	float PercentMissingForTxStandby; // 0x254
	float PercentForBadPing; // 0x258
	float JoinInProgressStandbyWaitTime; // 0x25c
	float MoveRepSize; // 0x260
	float MAXPOSITIONERRORSQUARED; // 0x264
	float MAXNEARZEROVELOCITYSQUARED; // 0x268
	float CLIENTADJUSTUPDATECOST; // 0x26c
	float MAXCLIENTUPDATEINTERVAL; // 0x270
	float MaxClientForcedUpdateDuration; // 0x274
	float ServerForcedUpdateHitchThreshold; // 0x278
	float ServerForcedUpdateHitchCooldown; // 0x27c
	float MaxMoveDeltaTime; // 0x280
	float MaxClientSmoothingDeltaTime; // 0x284
	float ClientNetSendMoveDeltaTime; // 0x288
	float ClientNetSendMoveDeltaTimeThrottled; // 0x28c
	float ClientNetSendMoveDeltaTimeStationary; // 0x290
	int32_t ClientNetSendMoveThrottleAtNetSpeed; // 0x294
	int32_t ClientNetSendMoveThrottleOverPlayerCount; // 0x298
	bool ClientAuthorativePosition; // 0x29c
	float ClientErrorUpdateRateLimit; // 0x2a0
	float ClientNetCamUpdateDeltaTime; // 0x2a4
	float ClientNetCamUpdatePositionLimit; // 0x2a8
	bool bMovementTimeDiscrepancyDetection; // 0x2ac
	bool bMovementTimeDiscrepancyResolution; // 0x2ad
	float MovementTimeDiscrepancyMaxTimeMargin; // 0x2b0
	float MovementTimeDiscrepancyMinTimeMargin; // 0x2b4
	float MovementTimeDiscrepancyResolutionRate; // 0x2b8
	float MovementTimeDiscrepancyDriftAllowance; // 0x2bc
	bool bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x2c0
	bool bUseDistanceBasedRelevancy; // 0x2c1
};

struct UMotoSynthPreset : UObject {
	FMotoSynthRuntimeSettings Settings; // 0x28
};

struct UMaterialExpressionArcsine : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UW_CustomizeAvatarInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_70; // 0x268
	UImage* Image; // 0x270
	UImage* Image_2; // 0x278
	UImage* Image_3; // 0x280
	UImage* Image_4; // 0x288
	UImage* Image_74; // 0x290
	UImage* Image_140; // 0x298
	UImage* Image_Avatar; // 0x2a0
	UImage* Image_AVATAR_FRAME; // 0x2a8
	USizeBox* SizeBox_45; // 0x2b0
	UTextBlock* TextBlock_BannerName; // 0x2b8
	UWBP_NewItemMarker_C* WBP_NewItemMarker; // 0x2c0
	UWidgetSwitcher* WidgetSwitcher_BGs; // 0x2c8
	int32_t AvatarID; // 0x2d0
	FMulticastInlineDelegate OnClickDispatcher; // 0x2d8
	bool IsClicked; // 0x2e8
	FLinearColor Specified Color; // 0x2ec
	UW_CustomizeBanner_C* W_CustomizeBanner; // 0x300
	FText Rarity; // 0x308
	FText BannerName; // 0x320
	Rarity E_Rarity; // 0x338
	bool IsBlocked; // 0x339
};

struct UMovieSceneEventRepeaterSection : UMovieSceneEventSectionBase {
	FMovieSceneEvent Event; // 0xf0
};

struct UInteractiveGizmo : UObject {
	UInputBehaviorSet* InputBehaviors; // 0x30
};

struct UMaterialExpressionNoise : UMaterialExpression {
	FExpressionInput Position; // 0x40
	FExpressionInput FilterWidth; // 0x54
	float Scale; // 0x68
	int32_t Quality; // 0x6c
	ENoiseFunction NoiseFunction; // 0x70
	char bTurbulence : 1; // 0x74
	int32_t Levels; // 0x78
	float OutputMin; // 0x7c
	float OutputMax; // 0x80
	float LevelScale; // 0x84
	char bTiling : 1; // 0x88
	uint32_t RepeatSize; // 0x8c
};

struct UVampireSpell3_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	float Timer; // 0xf0
	bool Casted?; // 0xf4
	FPostProcessSettings postProcessMonochrome; // 0x100
	FPostProcessSettings postProcessNormal; // 0x650
	float TransitionTime; // 0xba0
	float TurnOnDuration; // 0xba4
	float TurnOffDuration; // 0xba8
	float TurnOffAttackDuration; // 0xbac
	float ErodeSubtractDef; // 0xbb0
	UMaterialInstanceDynamic* KillerDynMat1; // 0xbb8
	UMaterialInstanceDynamic* KillerDynMat2; // 0xbc0
	UMaterialInstanceDynamic* KillerDynMat3; // 0xbc8
	float Float1; // 0xbd0
	bool TransitionOn; // 0xbd4
	bool TransitionOff; // 0xbd5
	UMaterialInstanceDynamic* KillerDynMatInvis; // 0xbd8
	UMaterialInstanceDynamic* KillerDynMatInvisFPP; // 0xbe0
	float InvisRefractionTPP; // 0xbe8
	float InvisRefractionFPP; // 0xbec
	float InvisRefractionZero; // 0xbf0
	UMaterialInstanceDynamic* KillerDynMatFPP; // 0xbf8
	bool IsAfterAttack; // 0xc00
	UMaterialInstanceDynamic* HamDynMatFPP; // 0xc08
	UMaterialInstanceDynamic* HamDynMatInvisFPP; // 0xc10
	UMaterialInstanceDynamic* KillerDynMat4; // 0xc18
	UMaterialInstanceDynamic* Ham Mat Tpp; // 0xc20
	UMaterialInstanceDynamic* HamDynInvisTPP; // 0xc28
	bool Keymaster; // 0xc30
	UMaterialInstanceDynamic* VampireWeaponTPMDyn; // 0xc38
};

struct ACapsuleDvij_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UCapsuleComponent* Capsule; // 0x228
	float Timeline_RadiusUp_NewTrack_0_EFC83FC041D69005FDEC469DE45F01F8; // 0x230
	ETimelineDirection Timeline_RadiusUp__Direction_EFC83FC041D69005FDEC469DE45F01F8; // 0x234
	UTimelineComponent* Timeline_RadiusUp; // 0x238
	float Radius; // 0x240
};

struct ULevelActorContainer : UObject {
	TArray<AActor*> Actors; // 0x28
};

struct UStreamingSettings : UDeveloperSettings {
	char AsyncLoadingThreadEnabled : 1; // 0x38
	char WarnIfTimeLimitExceeded : 1; // 0x38
	float TimeLimitExceededMultiplier; // 0x3c
	float TimeLimitExceededMinTime; // 0x40
	int32_t MinBulkDataSizeForAsyncLoading; // 0x44
	char UseBackgroundLevelStreaming : 1; // 0x48
	char AsyncLoadingUseFullTimeLimit : 1; // 0x48
	float AsyncLoadingTimeLimit; // 0x4c
	float PriorityAsyncLoadingExtraTime; // 0x50
	float LevelStreamingActorsUpdateTimeLimit; // 0x54
	float PriorityLevelStreamingActorsUpdateExtraTime; // 0x58
	int32_t LevelStreamingComponentsRegistrationGranularity; // 0x5c
	float LevelStreamingUnregisterComponentsTimeLimit; // 0x60
	int32_t LevelStreamingComponentsUnregistrationGranularity; // 0x64
	char FlushStreamingOnExit : 1; // 0x68
	char EventDrivenLoaderEnabled : 1; // 0x68
};

struct UMaterialExpressionArcsineFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct USoundNodeDistanceCrossFade : USoundNode {
	TArray<FDistanceDatum> CrossFadeInput; // 0x48
};

struct ACameraShakeSourceActor : AActor {
	UCameraShakeSourceComponent* CameraShakeSourceComponent; // 0x220
};

struct AFMODAmbientSound : AActor {
	UFMODAudioComponent* AudioComponent; // 0x220
};

struct UNiagaraPreviewAxis_InterpParamInt32 : UNiagaraPreviewAxis_InterpParamBase {
	int32_t Min; // 0x38
	int32_t Max; // 0x3c
};

struct UARQRCodeComponent : UARComponent {
	FARQRCodeUpdatePayload ReplicatedPayload; // 0x280
};

struct UMaterialExpressionDDY : UMaterialExpression {
	FExpressionInput Value; // 0x40
};

struct UPawnAction_Move : UPawnAction {
	AActor* GoalActor; // 0x98
	FVector GoalLocation; // 0xa0
	float AcceptableRadius; // 0xac
	UNavigationQueryFilter* FilterClass; // 0xb0
	char bAllowStrafe : 1; // 0xb8
	char bFinishOnOverlap : 1; // 0xb8
	char bUsePathfinding : 1; // 0xb8
	char bAllowPartialPath : 1; // 0xb8
	char bProjectGoalToNavigation : 1; // 0xb8
	char bUpdatePathToGoal : 1; // 0xb8
	char bAbortChildActionOnPathChange : 1; // 0xb8
};

struct UTextureRenderTarget2D : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	FLinearColor ClearColor; // 0xe8
	TextureAddress AddressX; // 0xf8
	TextureAddress AddressY; // 0xf9
	char bForceLinearGamma : 1; // 0xfa
	char bHDR : 1; // 0xfa
	char bGPUSharedFlag : 1; // 0xfa
	ETextureRenderTargetFormat RenderTargetFormat; // 0xfb
	char bAutoGenerateMips : 1; // 0xfc
	TextureFilter MipsSamplerFilter; // 0xfd
	TextureAddress MipsAddressU; // 0xfe
	TextureAddress MipsAddressV; // 0xff
	EPixelFormat OverrideFormat; // 0x100
};

struct APlanarReflection : ASceneCapture {
	UPlanarReflectionComponent* PlanarReflectionComponent; // 0x230
	bool bShowPreviewPlane; // 0x238
};

struct UARTexture : UTexture {
	EARTextureType TextureType; // 0xd8
	float Timestamp; // 0xdc
	FGuid ExternalTextureGuid; // 0xe0
	FVector2D Size; // 0xf0
};

struct UEnvQueryNode : UObject {
	int32_t VerNum; // 0x28
};

struct UMovieSceneLevelVisibilitySection : UMovieSceneSection {
	ELevelVisibility Visibility; // 0xf0
	TArray<FName> LevelNames; // 0xf8
};

struct ULandscapeSplineSegment : UObject {
	FLandscapeSplineSegmentConnection Connections[0x2]; // 0x28
	FInterpCurveVector SplineInfo; // 0x58
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	TArray<USplineMeshComponent*> LocalMeshComponents; // 0xa0
};

struct ULevelSequencePlayer : UMovieSceneSequencePlayer {
	FMulticastInlineDelegate OnCameraCut; // 0x680
};

struct UO_BEServer_C : UBEServer {
	FPointerToUberGraphFrame UberGraphFrame; // 0x28
	FMulticastInlineDelegate KickPlayerEvent; // 0x30
	FMulticastInlineDelegate SendPacketEvent; // 0x40
};

struct UPunishment_C : UPerkKiller_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x120
};

struct UW_Path_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UHorizontalBox* HorizontalBox_EntryContainer; // 0x268
	URichTextBlock* RichTextBlock_92; // 0x270
	TArray<UW_PathEntry_C*> Path; // 0x278
	UW_PathEntry_C* RootEntry; // 0x288
	UWidget* RootWidget; // 0x290
	TArray<int32_t> NeedRemove; // 0x298
	bool HasRoot; // 0x2a8
	bool bIsBlocked; // 0x2a9
};

struct UGameplayTask : UObject {
	FName InstanceName; // 0x30
	ETaskResourceOverlapPolicy ResourceOverlapPolicy; // 0x3a
	UGameplayTask* ChildTask; // 0x60
};

struct UBP_PC_MenuPlayfab_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	UPlayFabJsonObject* ListServerRes; // 0xb8
	bool PollTicket; // 0xc0
	FString TicketId; // 0xc8
	FString QueueName; // 0xd8
	FString MatchId; // 0xe8
	UPlayFabJsonObject* PlayerEntity; // 0xf8
	UPlayFabJsonObject* LastData; // 0x100
	int32_t Give Up After Seconds; // 0x108
	int32_t ErrorsInARow; // 0x10c
	float PollDelay; // 0x110
	float InitialPollDelay; // 0x114
	bool IsJoinRetry; // 0x118
	FString JoinTicketID; // 0x120
	UO_AWS_Worker_C* AWSWorker; // 0x130
	bool IsCancenRetry; // 0x138
};

struct UPhysicsSettingsCore : UDeveloperSettings {
	float DefaultGravityZ; // 0x38
	float DefaultTerminalVelocity; // 0x3c
	float DefaultFluidFriction; // 0x40
	int32_t SimulateScratchMemorySize; // 0x44
	int32_t RagdollAggregateThreshold; // 0x48
	float TriangleMeshTriangleMinAreaThreshold; // 0x4c
	bool bEnableShapeSharing; // 0x50
	bool bEnablePCM; // 0x51
	bool bEnableStabilization; // 0x52
	bool bWarnMissingLocks; // 0x53
	bool bEnable2DPhysics; // 0x54
	bool bDefaultHasComplexCollision; // 0x55
	float BounceThresholdVelocity; // 0x58
	EFrictionCombineMode FrictionCombineMode; // 0x5c
	EFrictionCombineMode RestitutionCombineMode; // 0x5d
	float MaxAngularVelocity; // 0x60
	float MaxDepenetrationVelocity; // 0x64
	float ContactOffsetMultiplier; // 0x68
	float MinContactOffset; // 0x6c
	float MaxContactOffset; // 0x70
	bool bSimulateSkeletalMeshOnDedicatedServer; // 0x74
	ECollisionTraceFlag DefaultShapeComplexity; // 0x75
	FChaosSolverConfiguration SolverOptions; // 0x78
};

struct UParticleLODLevel : UObject {
	int32_t Level; // 0x28
	char bEnabled : 1; // 0x2c
	UParticleModuleRequired* RequiredModule; // 0x30
	TArray<UParticleModule*> Modules; // 0x38
	UParticleModuleTypeDataBase* TypeDataModule; // 0x48
	UParticleModuleSpawn* SpawnModule; // 0x50
	UParticleModuleEventGenerator* EventGenerator; // 0x58
	TArray<UParticleModuleSpawnBase*> SpawningModules; // 0x60
	TArray<UParticleModule*> SpawnModules; // 0x70
	TArray<UParticleModule*> UpdateModules; // 0x80
	TArray<UParticleModuleOrbit*> OrbitModules; // 0x90
	TArray<UParticleModuleEventReceiverBase*> EventReceiverModules; // 0xa0
	char ConvertedModules : 1; // 0xb0
	int32_t PeakActiveParticles; // 0xb4
};

struct AGS_PropHunt_Tutorial_C : AGS_PropHunt_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x818
	FFMODEventInstance GameEndEvent; // 0x820
};

struct UMaterialExpressionFeatureLevelSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
};

struct APhysicsConstraintActor : ARigidBodyBase {
	UPhysicsConstraintComponent* ConstraintComp; // 0x220
	AActor* ConstraintActor1; // 0x228
	AActor* ConstraintActor2; // 0x230
	char bDisableCollision : 1; // 0x238
};

struct UEnvQueryGenerator_Composite : UEnvQueryGenerator {
	TArray<UEnvQueryGenerator*> Generators; // 0x50
	char bAllowDifferentItemTypes : 1; // 0x60
	char bHasMatchingItemType : 1; // 0x60
	UEnvQueryItemType* ForcedItemType; // 0x68
};

struct UMovieScene3DAttachSection : UMovieScene3DConstraintSection {
	FName AttachSocketName; // 0x118
	FName AttachComponentName; // 0x120
	EAttachmentRule AttachmentLocationRule; // 0x128
	EAttachmentRule AttachmentRotationRule; // 0x129
	EAttachmentRule AttachmentScaleRule; // 0x12a
	EDetachmentRule DetachmentLocationRule; // 0x12b
	EDetachmentRule DetachmentRotationRule; // 0x12c
	EDetachmentRule DetachmentScaleRule; // 0x12d
};

struct UOnsetNRTSettings : UAudioSynesthesiaNRTSettings {
	bool bDownmixToMono; // 0x28
	float GranularityInSeconds; // 0x2c
	float Sensitivity; // 0x30
	float MinimumFrequency; // 0x34
	float MaximumFrequency; // 0x38
};

struct USG_EOSDeviceLogin_C : USaveGame {
	FString Login; // 0x28
};

struct ASwitchActor : AActor {
	USceneComponent* SceneComponent; // 0x238
	int32_t LastSelectedOption; // 0x240
};

struct ULuminARLightEstimate : UARBasicLightEstimate {
	TArray<float> AmbientIntensityNits; // 0x40
};

struct ArangeSphereScream_C : AStaticMeshActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x230
	UStaticMeshComponent* Cylinder; // 0x238
	UStaticMeshComponent* Sphere; // 0x240
};

struct UParticleModuleVelocity : UParticleModuleVelocityBase {
	FRawDistributionVector StartVelocity; // 0x38
	FRawDistributionFloat StartVelocityRadial; // 0x80
};

struct UHapticFeedbackEffect_Curve : UHapticFeedbackEffect_Base {
	FHapticFeedbackDetails_Curve HapticDetails; // 0x28
};

struct UARMeshComponent : UARComponent {
	FARMeshUpdatePayload ReplicatedPayload; // 0x280
};

struct UATPCCameraModeScript_PawnUseControllerRotation : UATPCCameraModeScript {
	bool OrientRotationToMovement; // 0x40
	bool UseControllerDesiredRotation; // 0x41
	bool bRestoreOldValuesOnExitCameraMode; // 0x42
	bool OldOrientRotationToMovement; // 0x43
	bool OldUseControllerDesiredRotation; // 0x44
};

struct UMediaTimeStampInfo : UObject {
	FTimespan Time; // 0x28
	int64_t SequenceIndex; // 0x30
};

struct UCustomGraphicButton_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_LeftClick; // 0x268
	UButton* Button_RightClick; // 0x270
	UButton* ButtonReFocuser; // 0x278
	UOverlay* Changer; // 0x280
	UImage* Image_83; // 0x288
	UImage* Image_92; // 0x290
	UImage* Image_168; // 0x298
	USafeZone* SafeZone_71; // 0x2a0
	UTextBlock* TextBlock_154; // 0x2a8
	UTextBlock* TextBlock_SET; // 0x2b0
	FMulticastInlineDelegate EventDispatcher_Left; // 0x2b8
	FMulticastInlineDelegate EventDispatcher_Right; // 0x2c8
	FMulticastInlineDelegate EventDispatcher_FocusedStyle; // 0x2d8
	FMulticastInlineDelegate OnPressed; // 0x2e8
	bool bIsSelected; // 0x2f8
};

struct APlayerCameraManager : AActor {
	APlayerController* PCOwner; // 0x220
	USceneComponent* TransformComponent; // 0x228
	float DefaultFOV; // 0x238
	float DefaultOrthoWidth; // 0x240
	float DefaultAspectRatio; // 0x248
	FCameraCacheEntry CameraCache; // 0x290
	FCameraCacheEntry LastFrameCameraCache; // 0x880
	FTViewTarget ViewTarget; // 0xe70
	FTViewTarget PendingViewTarget; // 0x1470
	FCameraCacheEntry CameraCachePrivate; // 0x1aa0
	FCameraCacheEntry LastFrameCameraCachePrivate; // 0x2090
	TArray<UCameraModifier*> ModifierList; // 0x2680
	TArray<UCameraModifier*> DefaultModifiers; // 0x2690
	float FreeCamDistance; // 0x26a0
	FVector FreeCamOffset; // 0x26a4
	FVector ViewTargetOffset; // 0x26b0
	FMulticastInlineDelegate OnAudioFadeChangeEvent; // 0x26c0
	TArray<AEmitterCameraLensEffectBase*> CameraLensEffects; // 0x26e0
	UCameraModifier_CameraShake* CachedCameraShakeMod; // 0x26f0
	UCameraAnimInst* AnimInstPool[0x8]; // 0x26f8
	TArray<FPostProcessSettings> PostProcessBlendCache; // 0x2738
	TArray<UCameraAnimInst*> ActiveAnims; // 0x2758
	TArray<UCameraAnimInst*> FreeAnims; // 0x2768
	ACameraActor* AnimCameraActor; // 0x2778
	char bIsOrthographic : 1; // 0x2780
	char bDefaultConstrainAspectRatio : 1; // 0x2780
	char bClientSimulatingViewTarget : 1; // 0x2780
	char bUseClientSideCameraUpdates : 1; // 0x2780
	char bGameCameraCutThisFrame : 1; // 0x2781
	float ViewPitchMin; // 0x2784
	float ViewPitchMax; // 0x2788
	float ViewYawMin; // 0x278c
	float ViewYawMax; // 0x2790
	float ViewRollMin; // 0x2794
	float ViewRollMax; // 0x2798
	float ServerUpdateCameraTimeout; // 0x27a0
};

struct UEndTurnCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct UParticleModuleAttractorParticle : UParticleModuleAttractorBase {
	FName EmitterName; // 0x30
	FRawDistributionFloat Range; // 0x38
	char bStrengthByDistance : 1; // 0x68
	FRawDistributionFloat Strength; // 0x70
	char bAffectBaseVelocity : 1; // 0xa0
	EAttractorParticleSelectionMethod SelectionMethod; // 0xa4
	char bRenewSource : 1; // 0xa8
	char bInheritSourceVel : 1; // 0xa8
	int32_t LastSelIndex; // 0xac
};

struct UAnimComposite : UAnimCompositeBase {
	FAnimTrack AnimationTrack; // 0xa8
};

struct AController : AActor {
	APlayerState* PlayerState; // 0x228
	FMulticastInlineDelegate OnInstigatedAnyDamage; // 0x238
	FName StateName; // 0x248
	APawn* Pawn; // 0x250
	ACharacter* Character; // 0x260
	USceneComponent* TransformComponent; // 0x268
	FRotator ControlRotation; // 0x288
	char bAttachToPawn : 1; // 0x294
};

struct UMovieSceneByteSection : UMovieSceneSection {
	FMovieSceneByteChannel ByteCurve; // 0xe8
};

struct UScrollBarWidgetStyle : USlateWidgetStyleContainerBase {
	FScrollBarStyle ScrollBarStyle; // 0x30
};

struct UPlayFabDataAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xf8
	UPlayFabJsonObject* RequestJsonObj; // 0x100
	UPlayFabJsonObject* ResponseJsonObj; // 0x108
};

struct UNavAreaMeta_SwitchByAgent : UNavAreaMeta {
	UNavArea* Agent0Area; // 0x48
	UNavArea* Agent1Area; // 0x50
	UNavArea* Agent2Area; // 0x58
	UNavArea* Agent3Area; // 0x60
	UNavArea* Agent4Area; // 0x68
	UNavArea* Agent5Area; // 0x70
	UNavArea* Agent6Area; // 0x78
	UNavArea* Agent7Area; // 0x80
	UNavArea* Agent8Area; // 0x88
	UNavArea* Agent9Area; // 0x90
	UNavArea* Agent10Area; // 0x98
	UNavArea* Agent11Area; // 0xa0
	UNavArea* Agent12Area; // 0xa8
	UNavArea* Agent13Area; // 0xb0
	UNavArea* Agent14Area; // 0xb8
	UNavArea* Agent15Area; // 0xc0
};

struct UGizmoArrowComponent : UGizmoBaseComponent {
	FVector Direction; // 0x460
	float Gap; // 0x46c
	float Length; // 0x470
	float Thickness; // 0x474
};

struct UEdGraphPin_Deprecated : UObject {
	FString PinName; // 0x28
	FString PinToolTip; // 0x38
	EEdGraphPinDirection Direction; // 0x48
	FEdGraphPinType PinType; // 0x50
	FString DefaultValue; // 0xa8
	FString AutogeneratedDefaultValue; // 0xb8
	UObject* DefaultObject; // 0xc8
	FText DefaultTextValue; // 0xd0
	TArray<UEdGraphPin_Deprecated*> LinkedTo; // 0xe8
	TArray<UEdGraphPin_Deprecated*> SubPins; // 0xf8
	UEdGraphPin_Deprecated* ParentPin; // 0x108
	UEdGraphPin_Deprecated* ReferencePassThroughConnection; // 0x110
};

struct USystemTimeTimecodeProvider : UTimecodeProvider {
	FFrameRate FrameRate; // 0x30
	bool bGenerateFullFrame; // 0x38
	bool bUseHighPerformanceClock; // 0x39
};

struct UAssetExportTask : UObject {
	UObject* Object; // 0x28
	UExporter* Exporter; // 0x30
	FString Filename; // 0x38
	bool bSelected; // 0x48
	bool bReplaceIdentical; // 0x49
	bool bPrompt; // 0x4a
	bool bAutomated; // 0x4b
	bool bUseFileArchive; // 0x4c
	bool bWriteEmptyFiles; // 0x4d
	TArray<UObject*> IgnoreObjectList; // 0x50
	UObject* Options; // 0x60
	TArray<FString> Errors; // 0x68
};

struct UFloatingPawnMovement : UPawnMovementComponent {
	float MaxSpeed; // 0x138
	float Acceleration; // 0x13c
	float Deceleration; // 0x140
	float TurningBoost; // 0x144
	char bPositionCorrected : 1; // 0x148
};

struct UARComponent : USceneComponent {
	FGuid NativeID; // 0x1f8
	bool bUseDefaultReplication; // 0x238
	UMaterialInterface* DefaultMeshMaterial; // 0x240
	UMaterialInterface* DefaultWireframeMeshMaterial; // 0x248
	UMRMeshComponent* MRMeshComponent; // 0x250
	UARTrackedGeometry* MyTrackedGeometry; // 0x258
};

struct USubmixEffectMultibandCompressorPreset : USoundEffectSubmixPreset {
	FSubmixEffectMultibandCompressorSettings Settings; // 0xb0
};

struct UPaperSprite : UObject {
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FVector2D BakedSourceUV; // 0x48
	FVector2D BakedSourceDimension; // 0x50
	UTexture2D* BakedSourceTexture; // 0x58
	UMaterialInterface* DefaultMaterial; // 0x60
	UMaterialInterface* AlternateMaterial; // 0x68
	TArray<FPaperSpriteSocket> Sockets; // 0x70
	ESpriteCollisionMode SpriteCollisionDomain; // 0x80
	float PixelsPerUnrealUnit; // 0x84
	UBodySetup* BodySetup; // 0x88
	int32_t AlternateMaterialSplitIndex; // 0x90
	TArray<FVector4> BakedRenderData; // 0x98
};

struct UMovieSceneMarginSection : UMovieSceneSection {
	FMovieSceneFloatChannel TopCurve; // 0xe8
	FMovieSceneFloatChannel LeftCurve; // 0x188
	FMovieSceneFloatChannel RightCurve; // 0x228
	FMovieSceneFloatChannel BottomCurve; // 0x2c8
};

struct UFMODEventParameterTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct UEditableText : UWidget {
	FText Text; // 0x108
	FDelegate TextDelegate; // 0x120
	FText HintText; // 0x130
	FDelegate HintTextDelegate; // 0x148
	FEditableTextStyle WidgetStyle; // 0x158
	USlateWidgetStyleAsset* Style; // 0x378
	USlateBrushAsset* BackgroundImageSelected; // 0x380
	USlateBrushAsset* BackgroundImageComposing; // 0x388
	USlateBrushAsset* CaretImage; // 0x390
	FSlateFontInfo Font; // 0x398
	FSlateColor ColorAndOpacity; // 0x3f0
	bool IsReadOnly; // 0x418
	bool IsPassword; // 0x419
	float MinimumDesiredWidth; // 0x41c
	bool IsCaretMovedWhenGainFocus; // 0x420
	bool SelectAllTextWhenFocused; // 0x421
	bool RevertTextOnEscape; // 0x422
	bool ClearKeyboardFocusOnCommit; // 0x423
	bool SelectAllTextOnCommit; // 0x424
	bool AllowContextMenu; // 0x425
	EVirtualKeyboardType KeyboardType; // 0x426
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x427
	EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0x428
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x429
	ETextJustify Justification; // 0x42a
	FShapedTextOptions ShapedTextOptions; // 0x42b
	FMulticastInlineDelegate OnTextChanged; // 0x430
	FMulticastInlineDelegate OnTextCommitted; // 0x440
};

struct UEOSCoreLeaderboardsQueryLeaderboardDefinitions : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UHorizontalBoxSlot : UPanelSlot {
	FMargin Padding; // 0x40
	FSlateChildSize Size; // 0x50
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UMaterialExpressionLandscapeVisibilityMask : UMaterialExpression {
	FGuid ExpressionGUID; // 0x40
};

struct UTimeSynchronizationSource : UObject {
	bool bUseForSynchronization; // 0x28
	int32_t FrameOffset; // 0x2c
};

struct UEnvelopeFollowerListener : UActorComponent {
	FMulticastInlineDelegate OnEnvelopeFollowerUpdate; // 0xb0
};

struct APC_PropHunt_C : APropnightPlayerController {
	FPointerToUberGraphFrame UberGraphFrame; // 0x570
	UAC_BattlEye_Client_C* AC_BattlEye_Client; // 0x578
	UBP_BanManager_C* BP_BanManager; // 0x580
	FString PlayFabPlayerID; // 0x588
	bool isKiller; // 0x598
	APawn* LobbyPawn; // 0x5a0
	APawn* Char; // 0x5a8
	bool DevLabOpened; // 0x5b0
	bool IsJustSpawnedPawn; // 0x5b1
	FString LobbySlotName; // 0x5b8
	APawn* SpectatorRef; // 0x5c8
	FString Nickname; // 0x5d0
	bool IsGranny; // 0x5e0
	FText SenderText; // 0x5e8
	FText SenderName; // 0x600
	int32_t TypeMessage; // 0x618
	FString NextSessionID; // 0x620
	bool SessionIsFound; // 0x630
	FBlueprintSessionResult NextSession; // 0x638
	bool ImNextHost; // 0x740
	SurvClass SurvClass; // 0x741
	UTexture2D* Avatar; // 0x748
	bool BlockUI?; // 0x750
	bool KillerMessage?; // 0x751
	KillerType KillerType; // 0x752
	SurvSkills SurvSkills; // 0x753
	TArray<ADoppelganger_C*> NewVar_1; // 0x758
	AEndGameBP_C* EndGameActor; // 0x768
	AEndGamePlayerMesh_C* EndGameMesh; // 0x770
	bool Spectator?; // 0x778
	bool Escape?; // 0x779
	bool SurvWin?; // 0x77a
	bool LobbyWait?; // 0x77b
	SurvChars SurvCharPC; // 0x77c
	MapVote MapVoteEnum; // 0x77d
	PlayerCategoryVote PlayerCategoryVoteEnum; // 0x77e
	bool Liked?; // 0x77f
	AActor* Player Start; // 0x780
	ABP_Spectator_C* NewVar_2; // 0x788
	bool IsUsingGamepad?; // 0x790
	bool SoundmenuVisible?; // 0x791
	FString EndGameSwapSlotName; // 0x798
	bool MvpAnimStart?; // 0x7a8
	bool WinForce; // 0x7a9
	bool NicknameOff?; // 0x7aa
	UW_HelpWindow_C* HelpWindow; // 0x7b0
	bool NewVar_3; // 0x7b8
	AActor* SecLobbyPawn; // 0x7c0
	FString PerkName; // 0x7c8
	int32_t PerkIndex; // 0x7d8
	TArray<FName> TempName; // 0x7e0
	bool TabStatsVisible?; // 0x7f0
	FString PlayerCategoryVoteNickname; // 0x7f8
	TArray<int32_t> SkinIDarr; // 0x808
	TArray<APlayerState*> PlayerStateArray; // 0x818
	TArray<FName> PlayerStartTagArray; // 0x828
	FString SteamUserID; // 0x838
	int32_t Avatar_1; // 0x848
	int32_t Banner ID; // 0x84c
	int32_t Tag ID; // 0x850
	bool SurvDeath?; // 0x854
	bool InvertY?; // 0x855
	TArray<FString> TextChatMuteList; // 0x858
	FString SenderSteamID; // 0x868
	bool IsTABStatOpen; // 0x878
};

struct UBansheeMaxWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UARImageComponent : UARComponent {
	FARImageUpdatePayload ReplicatedPayload; // 0x280
};

struct AKeymaster_C : AKillerMasterBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1318
	UNiagaraComponent* Hammer_slashFX_VFX; // 0x1320
	UNiagaraComponent* Hammer_slashFX_; // 0x1328
	USkeletalMeshComponent* HammerIntro; // 0x1330
	USkeletalMeshComponent* HammerInvis; // 0x1338
	USkeletalMeshComponent* Hammer; // 0x1340
	USkeletalMeshComponent* HammerFPPInvis; // 0x1348
	USkeletalMeshComponent* HammerFPP; // 0x1350
	UKeymasterLevelSystem_C* KeymasterLevelSystem; // 0x1358
	UFMODAudioComponent* FMODAudio2_1; // 0x1360
	USkeletalMeshComponent* FPPSMInvis; // 0x1368
	USkeletalMeshComponent* MeshInvis; // 0x1370
	USpyEyes_C* SpyEyes; // 0x1378
	UAstral_C* Astral; // 0x1380
	UShoot_C* Shoot; // 0x1388
	float Timeline_5_0_alpha_F6D4614945F224AEFEB4E0AAB4F8AE2D; // 0x1390
	ETimelineDirection Timeline_5_0__Direction_F6D4614945F224AEFEB4E0AAB4F8AE2D; // 0x1394
	UTimelineComponent* Timeline_5_1; // 0x1398
	bool AudioBool; // 0x13a0
	UMaterialInstanceDynamic* HamMat; // 0x13a8
	UMaterialInstanceDynamic* HamMatTpp; // 0x13b0
};

struct UGraphNodeContextMenuContext : UObject {
	UBlueprint* Blueprint; // 0x28
	UEdGraph* Graph; // 0x30
	UEdGraphNode* Node; // 0x38
	bool bIsDebugging; // 0x48
};

struct UPlayFabEventsAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xa8
	UPlayFabJsonObject* RequestJsonObj; // 0xb0
	UPlayFabJsonObject* ResponseJsonObj; // 0xb8
};

struct UBackgroundBlurSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UDamageType : UObject {
	char bCausedByWorld : 1; // 0x28
	char bScaleMomentumByMass : 1; // 0x28
	char bRadialDamageVelChange : 1; // 0x28
	float DamageImpulse; // 0x2c
	float DestructibleImpulse; // 0x30
	float DestructibleDamageSpreadScale; // 0x34
	float DamageFalloff; // 0x38
};

struct UPanelWidget : UWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UPlanePositionGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoVec2ParameterSource> ParameterSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bEnableSignedAxis; // 0x88
	bool bFlipX; // 0x89
	bool bFlipY; // 0x8a
	bool bInInteraction; // 0x8b
	FVector InteractionOrigin; // 0x8c
	FVector InteractionNormal; // 0x98
	FVector InteractionAxisX; // 0xa4
	FVector InteractionAxisY; // 0xb0
	FVector InteractionStartPoint; // 0xbc
	FVector InteractionCurPoint; // 0xc8
	FVector2D InteractionStartParameter; // 0xd4
	FVector2D InteractionCurParameter; // 0xdc
	FVector2D ParameterSigns; // 0xe4
};

struct UUpdateEOSSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnCallback; // 0x30
};

struct UGameViewportClient : UScriptViewportClient {
	UConsole* ViewportConsole; // 0x40
	TArray<FDebugDisplayProperty> DebugProperties; // 0x48
	int32_t MaxSplitscreenPlayers; // 0x68
	UWorld* World; // 0x78
	UGameInstance* GameInstance; // 0x80
};

struct UVRNotificationsComponent : UActorComponent {
	FMulticastInlineDelegate HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate; // 0xb0
	FMulticastInlineDelegate HMDTrackingInitializedDelegate; // 0xc0
	FMulticastInlineDelegate HMDRecenteredDelegate; // 0xd0
	FMulticastInlineDelegate HMDLostDelegate; // 0xe0
	FMulticastInlineDelegate HMDReconnectedDelegate; // 0xf0
	FMulticastInlineDelegate HMDConnectCanceledDelegate; // 0x100
	FMulticastInlineDelegate HMDPutOnHeadDelegate; // 0x110
	FMulticastInlineDelegate HMDRemovedFromHeadDelegate; // 0x120
	FMulticastInlineDelegate VRControllerRecenteredDelegate; // 0x130
};

struct UMagicLeapTouchpadGesturesComponent : UActorComponent {
	FMulticastInlineDelegate OnTouchpadGestureStart; // 0xb8
	FMulticastInlineDelegate OnTouchpadGestureContinue; // 0xc8
	FMulticastInlineDelegate OnTouchpadGestureEnd; // 0xd8
};

struct UMovieSceneEventTrack : UMovieSceneNameableTrack {
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	EFireEventsAtPosition EventPosition; // 0x84
	TArray<UMovieSceneSection*> Sections; // 0x88
};

struct UGameSessionSettings : UObject {
	int32_t MaxSpectators; // 0x28
	int32_t MaxPlayers; // 0x2c
	char bRequiresPushToTalk : 1; // 0x30
};

struct UMaterialExpressionSceneTexture : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
	ESceneTextureId SceneTextureId; // 0x54
	bool bFiltered; // 0x55
};

struct UMovieSceneCameraShakeSourceTriggerSection : UMovieSceneSection {
	FMovieSceneCameraShakeSourceTriggerChannel Channel; // 0xe8
};

struct UAlarmProgressWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UProgressBar* ProgressBar_85; // 0x268
	USizeBox* SizeBox_1; // 0x270
	AActor* Owner; // 0x278
};

struct UGeneralProjectSettings : UObject {
	FString CompanyName; // 0x28
	FString CompanyDistinguishedName; // 0x38
	FString CopyrightNotice; // 0x48
	FString Description; // 0x58
	FString Homepage; // 0x68
	FString LicensingTerms; // 0x78
	FString PrivacyPolicy; // 0x88
	FGuid ProjectID; // 0x98
	FString ProjectName; // 0xa8
	FString ProjectVersion; // 0xb8
	FString SupportContact; // 0xc8
	FText ProjectDisplayedTitle; // 0xd8
	FText ProjectDebugTitleInfo; // 0xf0
	bool bShouldWindowPreserveAspectRatio; // 0x108
	bool bUseBorderlessWindow; // 0x109
	bool bStartInVR; // 0x10a
	bool bAllowWindowResize; // 0x10b
	bool bAllowClose; // 0x10c
	bool bAllowMaximize; // 0x10d
	bool bAllowMinimize; // 0x10e
};

struct UParticleModuleSourceMovement : UParticleModuleLocationBase {
	FRawDistributionVector SourceMovementScale; // 0x30
};

struct ANewLobby_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	URectLightComponent* RectLight57_LightComponent0; // 0x228
	URectLightComponent* RectLight56_LightComponent0; // 0x230
	URectLightComponent* RectLight55_LightComponent0; // 0x238
	URectLightComponent* RectLight54_LightComponent0; // 0x240
	UCineCameraComponent* CineCameraActor1_CameraComponent; // 0x248
	USceneComponent* CineCameraActor1_SceneComponent; // 0x250
	USkeletalMeshComponent* RedGirl; // 0x258
	USkeletalMeshComponent* GreenGirl; // 0x260
	USkeletalMeshComponent* NewSurv; // 0x268
	USkeletalMeshComponent* Surv; // 0x270
	USkeletalMeshComponent* AsianGirl; // 0x278
	USkeletalMeshComponent* Hammer_SkeletalMeshComponent0; // 0x280
	USkeletalMeshComponent* Keymaster; // 0x288
	USkeletalMeshComponent* knife_SkeletalMeshComponent0; // 0x290
	USkeletalMeshComponent* Granny; // 0x298
	UNiagaraComponent* DoppelNiagaraSystemV3_NiagaraComponent0; // 0x2a0
	USkeletalMeshComponent* Doppel_A_Pose_propnight_doppelganger_batterfly_knife_lock_low_SkeletalMeshComponent0; // 0x2a8
	USkeletalMeshComponent* Doppel; // 0x2b0
	USkeletalMeshComponent* Banshee; // 0x2b8
	USceneComponent* SharedRoot; // 0x2c0
};

struct ASurv5_C : ASurvivorMasterBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1830
};

struct UMovieScene3DConstraintSection : UMovieSceneSection {
	FGuid ConstraintId; // 0xe8
	FMovieSceneObjectBindingID ConstraintBindingID; // 0xf8
};

struct UParticleModuleLocation_Seeded : UParticleModuleLocation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UMaterialExpressionCustom : UMaterialExpression {
	FString Code; // 0x40
	ECustomMaterialOutputType OutputType; // 0x50
	FString Description; // 0x58
	TArray<FCustomInput> Inputs; // 0x68
	TArray<FCustomOutput> AdditionalOutputs; // 0x78
	TArray<FCustomDefine> AdditionalDefines; // 0x88
	TArray<FString> IncludeFilePaths; // 0x98
};

struct UParticleModuleVectorFieldLocal : UParticleModuleVectorFieldBase {
	UVectorField* VectorField; // 0x30
	FVector RelativeTranslation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale3D; // 0x50
	float Intensity; // 0x5c
	float Tightness; // 0x60
	char bIgnoreComponentTransform : 1; // 0x64
	char bTileX : 1; // 0x64
	char bTileY : 1; // 0x64
	char bTileZ : 1; // 0x64
	char bUseFixDT : 1; // 0x64
};

struct USurvOnChair_C : UATPCCameraModeScript {
	FPointerToUberGraphFrame UberGraphFrame; // 0x40
	FVector StandartOffset; // 0x48
	bool Tick?; // 0x54
	FVector CustomOffset; // 0x58
};

struct ULogoutCallbackProxy : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct UPlayersScore_Tab_Stats_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ReportAnim; // 0x268
	UWidgetAnimation* CoinsAnim; // 0x270
	UWidgetAnimation* AnimDisableScore; // 0x278
	UImage* BG; // 0x280
	UImage* Image; // 0x288
	UImage* Image_2; // 0x290
	UImage* Image_117; // 0x298
	UImage* Image_154; // 0x2a0
	UImage* Image_269; // 0x2a8
	UImage* Image_277; // 0x2b0
	UVerticalBox* NewScoreBox; // 0x2b8
	UBorder* OwnerScore; // 0x2c0
	UVerticalBox* PlayersBox; // 0x2c8
	UTextBlock* ReportMessageText; // 0x2d0
	UTextBlock* Score; // 0x2d8
	UBorder* Scoreboard; // 0x2e0
	USizeBox* SizeBox_276; // 0x2e8
	AKillerMasterBP_C* Killer; // 0x2f0
	TArray<ASurvivorMasterBP_C*> Survs; // 0x2f8
	bool GameStart?; // 0x308
	int32_t OwnerLastScore; // 0x30c
	int32_t OwnerNewScore; // 0x310
	TArray<UPlayerScoreComponentAddedScore_C*> AddedScoreWidgets; // 0x318
	TArray<AKillerMasterBP_C*> Killers; // 0x328
	TArray<APlayerState*> PlayerState; // 0x338
	TArray<APawn*> Pawns; // 0x348
	TArray<UPlayerScoreComponent_C*> EmptySlots; // 0x358
	bool Swapping; // 0x368
	int32_t Index; // 0x36c
	bool Blocked?; // 0x370
	bool isVisibleScore; // 0x371
	bool IsCoinsAnim; // 0x372
	UUserWidget* ReportWidget; // 0x378
	FTimerHandle HandlerRemoveReportMessage; // 0x380
};

struct ANewLobbyV2_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UDirectionalLightComponent* MoonLight1; // 0x228
	UParticleSystemComponent* P_SmokeFull1b_Edit; // 0x230
	UTextRenderComponent* TextRender2; // 0x238
	USceneComponent* Surv4Point; // 0x240
	UTextRenderComponent* TextRender1; // 0x248
	USceneComponent* Surv3Point; // 0x250
	UTextRenderComponent* TextRender6; // 0x258
	USceneComponent* Surv2Point; // 0x260
	UTextRenderComponent* TextRender; // 0x268
	USceneComponent* Surv1Point; // 0x270
	UTextRenderComponent* TextRender7; // 0x278
	USceneComponent* KillerPoint; // 0x280
	USceneComponent* PlayersPoints; // 0x288
	UStaticMeshComponent* StaticMesh; // 0x290
	USceneComponent* RedLight-1; // 0x298
	USceneComponent* RedLight-2; // 0x2a0
	URectLightComponent* RectLight1; // 0x2a8
	URectLightComponent* RectLight; // 0x2b0
	UBoxComponent* Box; // 0x2b8
	UChildActorComponent* Player5; // 0x2c0
	UChildActorComponent* Player4; // 0x2c8
	UChildActorComponent* Player3; // 0x2d0
	UChildActorComponent* Player2; // 0x2d8
	UChildActorComponent* Player1; // 0x2e0
	UDirectionalLightComponent* ManiacSunLight-2; // 0x2e8
	UDirectionalLightComponent* SurvSunLight-2; // 0x2f0
	USceneComponent* KillerPoint-2; // 0x2f8
	USceneComponent* Surv4-2; // 0x300
	USceneComponent* Surv3-2; // 0x308
	USceneComponent* Surv2-2; // 0x310
	USceneComponent* Surv1-2; // 0x318
	USceneComponent* SurvVisible; // 0x320
	UDirectionalLightComponent* ManiacSunLight-1; // 0x328
	UDirectionalLightComponent* SurvSunLight-1; // 0x330
	USceneComponent* KillerPoint-1; // 0x338
	USceneComponent* Surv4-1; // 0x340
	USceneComponent* Surv3-1; // 0x348
	USceneComponent* Surv2-1; // 0x350
	USceneComponent* Surv1-1; // 0x358
	USceneComponent* KillerVisible; // 0x360
	UDirectionalLightComponent* MoonLight; // 0x368
	USceneComponent* HDRIBackdrop_SceneComponent; // 0x370
	UStaticMeshComponent* Floor; // 0x378
	UCineCameraComponent* Cine Camera Actor_CameraComponent; // 0x380
	USceneComponent* Cine Camera Actor_SceneComponent; // 0x388
	USceneComponent* SharedRoot; // 0x390
	bool Killer?; // 0x398
	int32_t TempInt; // 0x39c
};

struct UMovieSceneParameterSection : UMovieSceneSection {
	TArray<FBoolParameterNameAndCurve> BoolParameterNamesAndCurves; // 0xe8
	TArray<FScalarParameterNameAndCurve> ScalarParameterNamesAndCurves; // 0xf8
	TArray<FVector2DParameterNameAndCurves> Vector2DParameterNamesAndCurves; // 0x108
	TArray<FVectorParameterNameAndCurves> VectorParameterNamesAndCurves; // 0x118
	TArray<FColorParameterNameAndCurves> ColorParameterNamesAndCurves; // 0x128
	TArray<FTransformParameterNameAndCurves> TransformParameterNamesAndCurves; // 0x138
};

struct UAIDataProvider_QueryParams : UAIDataProvider {
	FName ParamName; // 0x28
	float FloatValue; // 0x30
	int32_t IntValue; // 0x34
	bool BoolValue; // 0x38
};

struct UBTTask_PlayAnimation : UBTTaskNode {
	UAnimationAsset* AnimationToPlay; // 0x70
	char bLooping : 1; // 0x78
	char bNonBlocking : 1; // 0x78
	UBehaviorTreeComponent* MyOwnerComp; // 0x80
	USkeletalMeshComponent* CachedSkelMesh; // 0x88
};

struct UDistributionVectorParameterBase : UDistributionVectorConstant {
	FName ParameterName; // 0x50
	FVector MinInput; // 0x58
	FVector MaxInput; // 0x64
	FVector MinOutput; // 0x70
	FVector MaxOutput; // 0x7c
	DistributionParamMode ParamModes[0x3]; // 0x88
};

struct UNiagaraDataInterfaceTexture : UNiagaraDataInterface {
	UTexture* Texture; // 0x38
};

struct UVampireJumpShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
	FVOscillator ShakeLoc; // 0x1ac
};

struct UBoxComponent : UShapeComponent {
	FVector BoxExtent; // 0x458
	float LineThickness; // 0x464
};

struct UPingShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
	FVOscillator ShakeLoc; // 0x1ac
};

struct UNiagaraDataInterfaceCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve Curve; // 0x70
};

struct USynthSamplePlayer : USynthComponent {
	USoundWave* SoundWave; // 0x6c0
	FMulticastInlineDelegate OnSampleLoaded; // 0x6c8
	FMulticastInlineDelegate OnSamplePlaybackProgress; // 0x6d8
};

struct UMaterialExpressionSpeedTree : UMaterialExpression {
	FExpressionInput GeometryInput; // 0x40
	FExpressionInput WindInput; // 0x54
	FExpressionInput LODInput; // 0x68
	FExpressionInput ExtraBendWS; // 0x7c
	ESpeedTreeGeometryType GeometryType; // 0x90
	ESpeedTreeWindType WindType; // 0x91
	ESpeedTreeLODType LODType; // 0x92
	float BillboardThreshold; // 0x94
	bool bAccurateWindVelocities; // 0x98
};

struct UMoviePlayerSettings : UObject {
	bool bWaitForMoviesToComplete; // 0x28
	bool bMoviesAreSkippable; // 0x29
	TArray<FString> StartupMovies; // 0x30
};

struct UGrannyLobbyABP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x2f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x320
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x3a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3d0
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x450
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x480
};

struct UWallhackSpell_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
};

struct UMaterialExpressionReflectionVectorWS : UMaterialExpression {
	FExpressionInput CustomWorldNormal; // 0x40
	char bNormalizeCustomWorldNormal : 1; // 0x54
};

struct UVehicleAnimInstance : UAnimInstance {
	UWheeledVehicleMovementComponent* WheeledVehicleMovementComponent; // 0xa40
};

struct UNiagaraSpriteRendererProperties : UNiagaraRendererProperties {
	UMaterialInterface* Material; // 0x80
	ENiagaraRendererSourceDataMode SourceMode; // 0x88
	FNiagaraUserParameterBinding MaterialUserParamBinding; // 0x90
	ENiagaraSpriteAlignment Alignment; // 0xb0
	ENiagaraSpriteFacingMode FacingMode; // 0xb1
	FVector2D PivotInUVSpace; // 0xb4
	ENiagaraSortMode SortMode; // 0xbc
	FVector2D SubImageSize; // 0xc0
	char bSubImageBlend : 1; // 0xc8
	char bRemoveHMDRollInVR : 1; // 0xc8
	char bSortOnlyWhenTranslucent : 1; // 0xc8
	char bGpuLowLatencyTranslucency : 1; // 0xc8
	float MinFacingCameraBlendDistance; // 0xcc
	float MaxFacingCameraBlendDistance; // 0xd0
	char bEnableCameraDistanceCulling : 1; // 0xd4
	float MinCameraDistance; // 0xd8
	float MaxCameraDistance; // 0xdc
	uint32_t RendererVisibility; // 0xe0
	FNiagaraVariableAttributeBinding PositionBinding; // 0xe8
	FNiagaraVariableAttributeBinding ColorBinding; // 0x140
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x198
	FNiagaraVariableAttributeBinding SpriteRotationBinding; // 0x1f0
	FNiagaraVariableAttributeBinding SpriteSizeBinding; // 0x248
	FNiagaraVariableAttributeBinding SpriteFacingBinding; // 0x2a0
	FNiagaraVariableAttributeBinding SpriteAlignmentBinding; // 0x2f8
	FNiagaraVariableAttributeBinding SubImageIndexBinding; // 0x350
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x3a8
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x400
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x458
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x4b0
	FNiagaraVariableAttributeBinding CameraOffsetBinding; // 0x508
	FNiagaraVariableAttributeBinding UVScaleBinding; // 0x560
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x5b8
	FNiagaraVariableAttributeBinding CustomSortingBinding; // 0x610
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x668
	FNiagaraVariableAttributeBinding RendererVisibilityTagBinding; // 0x6c0
	TArray<FNiagaraMaterialAttributeBinding> MaterialParameterBindings; // 0x718
};

struct UAsyncActionLoadPrimaryAssetClassList : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct ADatasmithAreaLightActor : AActor {
	EDatasmithAreaLightActorType LightType; // 0x220
	EDatasmithAreaLightActorShape LightShape; // 0x221
	FVector2D Dimensions; // 0x224
	float Intensity; // 0x22c
	ELightUnits IntensityUnits; // 0x230
	FLinearColor Color; // 0x234
	float Temperature; // 0x244
	UTextureLightProfile* IESTexture; // 0x248
	bool bUseIESBrightness; // 0x250
	float IESBrightnessScale; // 0x254
	FRotator Rotation; // 0x258
	float SourceRadius; // 0x264
	float SourceLength; // 0x268
	float AttenuationRadius; // 0x26c
	float SpotlightInnerAngle; // 0x270
	float SpotlightOuterAngle; // 0x274
};

struct UMaterialExpressionDistanceFieldGradient : UMaterialExpression {
	FExpressionInput Position; // 0x40
};

struct UProceduralFoliageComponent : UActorComponent {
	UProceduralFoliageSpawner* FoliageSpawner; // 0xb0
	float TileOverlap; // 0xb8
	AVolume* SpawningVolume; // 0xc0
	FGuid ProceduralGuid; // 0xc8
};

struct ATriggerBase : AActor {
	UShapeComponent* CollisionComponent; // 0x220
};

struct UInterpGroupInst : UObject {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct UIntSerialization : UObject {
	uint16_t UnsignedInt16Variable; // 0x28
	uint32_t UnsignedInt32Variable; // 0x2c
	uint64_t UnsignedInt64Variable; // 0x30
	int8_t SignedInt8Variable; // 0x38
	int16_t SignedInt16Variable; // 0x3a
	int64_t SignedInt64Variable; // 0x40
	char UnsignedInt8Variable; // 0x48
	int32_t SignedInt32Variable; // 0x4c
};

struct AIntervalGizmoActor : AGizmoActor {
	UGizmoLineHandleComponent* UpIntervalComponent; // 0x220
	UGizmoLineHandleComponent* DownIntervalComponent; // 0x228
	UGizmoLineHandleComponent* ForwardIntervalComponent; // 0x230
};

struct UMaterialExpressionThinTranslucentMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput TransmittanceColor; // 0x40
};

struct UParticleModuleMeshMaterial : UParticleModuleMaterialBase {
	TArray<UMaterialInterface*> MeshMaterials; // 0x30
};

struct UComboBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FComboBoxStyle ComboBoxStyle; // 0x30
};

struct URedGirlLobbyAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_RandomPlayer AnimGraphNode_RandomPlayer; // 0x2f8
};

struct UParticleModuleLocationPrimitiveSphere : UParticleModuleLocationPrimitiveBase {
	FRawDistributionFloat StartRadius; // 0xb0
};

struct UScream_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	TArray<AActor*> SurvRefs; // 0xf0
	ArangeSphereScream_C* sphereActor; // 0x100
	bool B; // 0x108
};

struct UMaterialExpressionComment : UMaterialExpression {
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FString Text; // 0x48
	FLinearColor CommentColor; // 0x58
	int32_t FontSize; // 0x68
};

struct UMovieSceneEntitySystem : UObject {
	UMovieSceneEntitySystemLinker* Linker; // 0x28
};

struct UBTCompositeNode : UBTNode {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct UEnvQueryOption : UObject {
	UEnvQueryGenerator* Generator; // 0x28
	TArray<UEnvQueryTest*> Tests; // 0x30
};

struct UMaterialExpressionDeriveNormalZ : UMaterialExpression {
	FExpressionInput InXY; // 0x40
};

struct UBackgroundBlur : UContentWidget {
	FMargin Padding; // 0x120
	EHorizontalAlignment HorizontalAlignment; // 0x130
	EVerticalAlignment VerticalAlignment; // 0x131
	bool bApplyAlphaToBlur; // 0x132
	float BlurStrength; // 0x134
	bool bOverrideAutoRadiusCalculation; // 0x138
	int32_t BlurRadius; // 0x13c
	FSlateBrush LowQualityFallbackBrush; // 0x140
};

struct UBehaviorTreeManager : UObject {
	int32_t MaxDebuggerSteps; // 0x28
	TArray<FBehaviorTreeTemplateInfo> LoadedTemplates; // 0x30
	TArray<UBehaviorTreeComponent*> ActiveComponents; // 0x40
};

struct UPropBox_opening_Skeleton_AnimBlueprint_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x2f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x378
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x3f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x498
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x538
	bool Start?; // 0x5b8
	bool Opened; // 0x5b9
};

struct UParticleModuleBeamSource : UParticleModuleBeamBase {
	Beam2SourceTargetMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	char bSourceAbsolute : 1; // 0x3c
	FRawDistributionVector Source; // 0x40
	char bLockSource : 1; // 0x88
	Beam2SourceTargetTangentMethod SourceTangentMethod; // 0x8c
	FRawDistributionVector SourceTangent; // 0x90
	char bLockSourceTangent : 1; // 0xd8
	FRawDistributionFloat SourceStrength; // 0xe0
	char bLockSourceStength : 1; // 0x110
};

struct UBlackboardKeyType_NativeEnum : UBlackboardKeyType {
	FString EnumName; // 0x30
	UEnum* EnumType; // 0x40
};

struct UParticleModuleEventReceiverKillParticles : UParticleModuleEventReceiverBase {
	char bStopSpawning : 1; // 0x40
};

struct UEOSCorePlayerDataStorageQueryFileList : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct ASkyLight : AInfo {
	USkyLightComponent* LightComponent; // 0x220
	char bEnabled : 1; // 0x228
};

struct UAISenseConfig : UObject {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UMovieSceneParticleTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> ParticleSections; // 0x80
};

struct UScrollBar : UWidget {
	FScrollBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x5d8
	bool bAlwaysShowScrollbar; // 0x5e0
	bool bAlwaysShowScrollbarTrack; // 0x5e1
	EOrientation Orientation; // 0x5e2
	FVector2D Thickness; // 0x5e4
	FMargin Padding; // 0x5ec
};

struct UBPA_RHG_AnimGame_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_15; // 0x2c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_25; // 0x420
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_27; // 0x4c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_26; // 0x4e8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_14; // 0x510
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x668
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_13; // 0x6b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_25; // 0x808
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_24; // 0x830
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_17; // 0x8d0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_16; // 0x990
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_23; // 0xa50
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_12; // 0xaf0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_24; // 0xc48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_23; // 0xc70
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_22; // 0xc98
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_22; // 0xcc0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_21; // 0xd60
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_20; // 0xd88
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_19; // 0xdb0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_15; // 0xdd8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_57; // 0xe98
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_11; // 0xf48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_18; // 0x10a0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_17; // 0x10c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_44; // 0x10f0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_14; // 0x11d8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_16; // 0x1298
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x12c0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_10; // 0x12e0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x1438
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_9; // 0x1458
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x15b0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x16b8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_13; // 0x17c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_15; // 0x1880
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_21; // 0x18a8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_12; // 0x1948
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_8; // 0x1a08
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_14; // 0x1b60
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_13; // 0x1b88
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_56; // 0x1bb0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_12; // 0x1c60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_112; // 0x1c88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_111; // 0x1cb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_110; // 0x1cd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_109; // 0x1d00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_108; // 0x1d28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_107; // 0x1d50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_106; // 0x1d78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_105; // 0x1da0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_104; // 0x1dc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_103; // 0x1df0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_102; // 0x1e18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_101; // 0x1e40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_100; // 0x1e68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_99; // 0x1e90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_98; // 0x1eb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_97; // 0x1ee0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_96; // 0x1f08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_95; // 0x1f30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_94; // 0x1f58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_93; // 0x1f80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_92; // 0x1fa8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_91; // 0x1fd0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_90; // 0x1ff8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_89; // 0x2020
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_88; // 0x2048
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_87; // 0x2070
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_86; // 0x2098
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_85; // 0x20c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_84; // 0x20e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_83; // 0x2110
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_82; // 0x2138
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_81; // 0x2160
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_80; // 0x2188
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_79; // 0x21b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_78; // 0x21d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_77; // 0x2200
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_76; // 0x2228
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_75; // 0x2250
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_74; // 0x2278
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_73; // 0x22a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_72; // 0x22c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_71; // 0x22f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_70; // 0x2318
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_69; // 0x2340
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_68; // 0x2368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_67; // 0x2390
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_66; // 0x23b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_65; // 0x23e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_64; // 0x2408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0x2430
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0x2458
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0x2480
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x24a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x24d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x24f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x2520
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x2548
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x2570
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x2598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0x25c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0x25e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0x2610
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0x2638
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0x2660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0x2688
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0x26b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0x26d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0x2700
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0x2728
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x2750
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x2778
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x27a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x27c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x27f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x2818
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x2840
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x2868
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x2890
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x28b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x28e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x2908
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x2930
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x2958
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x2980
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x29a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x29d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x29f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x2a20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x2a48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x2a70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x2a98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x2ac0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x2ae8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x2b10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x2b38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x2b60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x2b88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x2bb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x2bd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x2c00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x2c28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x2c50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x2c78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x2ca0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x2cc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x2cf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x2d18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x2d40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x2d68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x2d90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2db8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x2de0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_312; // 0x2e08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_311; // 0x2e88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_310; // 0x2f08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_309; // 0x2f88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_308; // 0x3008
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_11; // 0x3088
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_307; // 0x3128
	FAnimNode_StateResult AnimGraphNode_StateResult_47; // 0x31a8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x31d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_306; // 0x32a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_305; // 0x3320
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_304; // 0x33a0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x3420
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_303; // 0x34e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_302; // 0x3568
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x35e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_301; // 0x36b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_300; // 0x3730
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_299; // 0x37b0
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_10; // 0x3830
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_298; // 0x38d0
	FAnimNode_StateResult AnimGraphNode_StateResult_46; // 0x3950
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_297; // 0x3980
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_296; // 0x3a00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_295; // 0x3a80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_294; // 0x3b00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_293; // 0x3b80
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_9; // 0x3c00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_292; // 0x3ca0
	FAnimNode_StateResult AnimGraphNode_StateResult_45; // 0x3d20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_291; // 0x3d50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_290; // 0x3dd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_289; // 0x3e50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_288; // 0x3ed0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_287; // 0x3f50
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_55; // 0x3fd0
	FAnimNode_StateResult AnimGraphNode_StateResult_44; // 0x4080
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_286; // 0x40b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_285; // 0x4130
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_284; // 0x41b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_283; // 0x4230
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_282; // 0x42b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_281; // 0x4330
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_8; // 0x43b0
	FAnimNode_StateResult AnimGraphNode_StateResult_43; // 0x4450
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_280; // 0x4480
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_279; // 0x4500
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_278; // 0x4580
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_277; // 0x4600
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_276; // 0x4680
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_275; // 0x4700
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_7; // 0x4780
	FAnimNode_StateResult AnimGraphNode_StateResult_42; // 0x4820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_274; // 0x4850
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_273; // 0x48d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_272; // 0x4950
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_271; // 0x49d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_270; // 0x4a50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_269; // 0x4ad0
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_6; // 0x4b50
	FAnimNode_StateResult AnimGraphNode_StateResult_41; // 0x4bf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_268; // 0x4c20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_267; // 0x4ca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_266; // 0x4d20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_265; // 0x4da0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_54; // 0x4e20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_264; // 0x4ed0
	FAnimNode_StateResult AnimGraphNode_StateResult_40; // 0x4f50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_263; // 0x4f80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_262; // 0x5000
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_261; // 0x5080
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_260; // 0x5100
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_53; // 0x5180
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_259; // 0x5230
	FAnimNode_StateResult AnimGraphNode_StateResult_39; // 0x52b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_258; // 0x52e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_257; // 0x5360
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_256; // 0x53e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_255; // 0x5460
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_52; // 0x54e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_254; // 0x5590
	FAnimNode_StateResult AnimGraphNode_StateResult_38; // 0x5610
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_253; // 0x5640
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_252; // 0x56c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_251; // 0x5740
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_250; // 0x57c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_249; // 0x5840
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_248; // 0x58c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_247; // 0x5940
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_246; // 0x59c0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_51; // 0x5a40
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_50; // 0x5af0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_245; // 0x5ba0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_244; // 0x5c20
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_43; // 0x5ca0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_42; // 0x5d88
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_41; // 0x5e70
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_20; // 0x5f58
	FAnimNode_BlendBoneByChannel AnimGraphNode_BlendBoneByChannel_2; // 0x5ff8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_49; // 0x6060
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_19; // 0x6110
	FAnimNode_StateResult AnimGraphNode_StateResult_37; // 0x61b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_243; // 0x61e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_242; // 0x6260
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_241; // 0x62e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_240; // 0x6360
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_48; // 0x63e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_239; // 0x6490
	FAnimNode_StateResult AnimGraphNode_StateResult_36; // 0x6510
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_47; // 0x6540
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_238; // 0x65f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_237; // 0x6670
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_236; // 0x66f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_235; // 0x6770
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_234; // 0x67f0
	FAnimNode_StateResult AnimGraphNode_StateResult_35; // 0x6870
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_233; // 0x68a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_232; // 0x6920
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_231; // 0x69a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_230; // 0x6a20
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_46; // 0x6aa0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_229; // 0x6b50
	FAnimNode_StateResult AnimGraphNode_StateResult_34; // 0x6bd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_228; // 0x6c00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_227; // 0x6c80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_226; // 0x6d00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_225; // 0x6d80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_224; // 0x6e00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_223; // 0x6e80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_222; // 0x6f00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_221; // 0x6f80
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_45; // 0x7000
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_44; // 0x70b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_220; // 0x7160
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_219; // 0x71e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_40; // 0x7260
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_39; // 0x7348
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_38; // 0x7430
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_18; // 0x7518
	FAnimNode_BlendBoneByChannel AnimGraphNode_BlendBoneByChannel; // 0x75b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_17; // 0x7620
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_43; // 0x76c0
	FAnimNode_StateResult AnimGraphNode_StateResult_33; // 0x7770
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_218; // 0x77a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_217; // 0x7820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_216; // 0x78a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_215; // 0x7920
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_214; // 0x79a0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_42; // 0x7a20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_213; // 0x7ad0
	FAnimNode_StateResult AnimGraphNode_StateResult_32; // 0x7b50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_212; // 0x7b80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_211; // 0x7c00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_210; // 0x7c80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_209; // 0x7d00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_208; // 0x7d80
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_41; // 0x7e00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_207; // 0x7eb0
	FAnimNode_StateResult AnimGraphNode_StateResult_31; // 0x7f30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_206; // 0x7f60
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_11; // 0x7fe0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_205; // 0x80a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_204; // 0x8120
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_203; // 0x81a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_202; // 0x8220
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_40; // 0x82a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_201; // 0x8350
	FAnimNode_StateResult AnimGraphNode_StateResult_30; // 0x83d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_200; // 0x8400
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_10; // 0x8480
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_199; // 0x8540
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_198; // 0x85c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_197; // 0x8640
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_196; // 0x86c0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_39; // 0x8740
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_195; // 0x87f0
	FAnimNode_StateResult AnimGraphNode_StateResult_29; // 0x8870
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_194; // 0x88a0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_9; // 0x8920
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_193; // 0x89e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_192; // 0x8a60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_191; // 0x8ae0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_190; // 0x8b60
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_38; // 0x8be0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_189; // 0x8c90
	FAnimNode_StateResult AnimGraphNode_StateResult_28; // 0x8d10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_188; // 0x8d40
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8; // 0x8dc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_187; // 0x8e80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_186; // 0x8f00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_185; // 0x8f80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_184; // 0x9000
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_37; // 0x9080
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_183; // 0x9130
	FAnimNode_StateResult AnimGraphNode_StateResult_27; // 0x91b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_182; // 0x91e0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7; // 0x9260
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_181; // 0x9320
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_180; // 0x93a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_179; // 0x9420
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_178; // 0x94a0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_36; // 0x9520
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_177; // 0x95d0
	FAnimNode_StateResult AnimGraphNode_StateResult_26; // 0x9650
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_176; // 0x9680
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0x9700
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_175; // 0x97c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_174; // 0x9840
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_173; // 0x98c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_172; // 0x9940
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_35; // 0x99c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_171; // 0x9a70
	FAnimNode_StateResult AnimGraphNode_StateResult_25; // 0x9af0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_170; // 0x9b20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_169; // 0x9ba0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_168; // 0x9c20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_167; // 0x9ca0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_166; // 0x9d20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_165; // 0x9da0
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_5; // 0x9e20
	FAnimNode_StateResult AnimGraphNode_StateResult_24; // 0x9ec0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_164; // 0x9ef0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_163; // 0x9f70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_162; // 0x9ff0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_161; // 0xa070
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_160; // 0xa0f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_159; // 0xa170
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_4; // 0xa1f0
	FAnimNode_StateResult AnimGraphNode_StateResult_23; // 0xa290
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_158; // 0xa2c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_157; // 0xa340
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_16; // 0xa3c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_156; // 0xa460
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_155; // 0xa4e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_154; // 0xa560
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_153; // 0xa5e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_152; // 0xa660
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_3; // 0xa6e0
	FAnimNode_StateResult AnimGraphNode_StateResult_22; // 0xa780
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_151; // 0xa7b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_150; // 0xa830
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_149; // 0xa8b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_148; // 0xa930
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_34; // 0xa9b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_147; // 0xaa60
	FAnimNode_StateResult AnimGraphNode_StateResult_21; // 0xaae0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_146; // 0xab10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_145; // 0xab90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_144; // 0xac10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_143; // 0xac90
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_33; // 0xad10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_142; // 0xadc0
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0xae40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_141; // 0xae70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_140; // 0xaef0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_15; // 0xaf70
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_37; // 0xb010
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_139; // 0xb0f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_138; // 0xb178
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_36; // 0xb1f8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_14; // 0xb2e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_13; // 0xb380
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_137; // 0xb420
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_35; // 0xb4a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_12; // 0xb588
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_11; // 0xb628
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_10; // 0xb6c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_34; // 0xb768
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_33; // 0xb850
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_136; // 0xb938
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_32; // 0xb9b8
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_2; // 0xbaa0
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0xbb40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_135; // 0xbb70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_134; // 0xbbf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_133; // 0xbc70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_132; // 0xbcf0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_32; // 0xbd70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_131; // 0xbe20
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0xbea0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_130; // 0xbed0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_129; // 0xbf50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_128; // 0xbfd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_127; // 0xc050
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_31; // 0xc0d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_126; // 0xc180
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0xc200
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_125; // 0xc230
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_124; // 0xc2b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_123; // 0xc330
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_122; // 0xc3b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_30; // 0xc430
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_121; // 0xc4e0
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0xc560
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_120; // 0xc590
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_31; // 0xc610
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_5; // 0xc6f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_119; // 0xc7c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_118; // 0xc840
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_117; // 0xc8c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_116; // 0xc940
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_115; // 0xc9c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_114; // 0xca40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_113; // 0xcac0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_112; // 0xcb40
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_29; // 0xcbc0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_28; // 0xcc70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_111; // 0xcd20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_110; // 0xcda0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_109; // 0xce20
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0xcea0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_108; // 0xcf60
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0xcfe0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_107; // 0xd010
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_4; // 0xd090
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_30; // 0xd158
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_106; // 0xd240
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_105; // 0xd2c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_104; // 0xd340
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_103; // 0xd3c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_102; // 0xd440
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_101; // 0xd4c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_100; // 0xd540
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_99; // 0xd5c0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_27; // 0xd640
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_26; // 0xd6f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_98; // 0xd7a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_97; // 0xd820
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_96; // 0xd8a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_95; // 0xd920
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0xd9a0
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0xda60
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_94; // 0xda90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_93; // 0xdb10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_92; // 0xdb90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_91; // 0xdc10
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_25; // 0xdc90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_90; // 0xdd40
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0xddc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_89; // 0xddf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_88; // 0xde70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_87; // 0xdef0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_86; // 0xdf70
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_24; // 0xdff0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_85; // 0xe0a0
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0xe120
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_84; // 0xe150
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_83; // 0xe1d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_82; // 0xe250
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_81; // 0xe2d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_23; // 0xe350
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_80; // 0xe400
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0xe480
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_79; // 0xe4b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_78; // 0xe530
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_77; // 0xe5b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_76; // 0xe630
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_22; // 0xe6b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_75; // 0xe760
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0xe7e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_74; // 0xe810
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_73; // 0xe890
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_72; // 0xe910
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_71; // 0xe990
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_21; // 0xea10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_70; // 0xeac0
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0xeb40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_69; // 0xeb70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_68; // 0xebf0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_67; // 0xec70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_66; // 0xecf0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_20; // 0xed70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_65; // 0xee20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_64; // 0xeea0
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0xef20
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_63; // 0xef50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_62; // 0xefd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_61; // 0xf050
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_60; // 0xf0d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_59; // 0xf150
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_19; // 0xf1d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_58; // 0xf280
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_57; // 0xf300
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_56; // 0xf380
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_18; // 0xf400
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_55; // 0xf4b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_54; // 0xf530
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0xf5b0
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0xf650
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_53; // 0xf680
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_52; // 0xf700
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_51; // 0xf780
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_50; // 0xf800
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_49; // 0xf880
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0xf900
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0xf9a0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_17; // 0xf9d0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_16; // 0xfa80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_48; // 0xfb30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_47; // 0xfbb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_46; // 0xfc30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_45; // 0xfcb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_44; // 0xfd30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_43; // 0xfdb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_42; // 0xfe30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_41; // 0xfeb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_40; // 0xff30
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0xffb0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_39; // 0x10078
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x100f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_38; // 0x10128
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_37; // 0x101a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_36; // 0x10228
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_35; // 0x102a8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_15; // 0x10328
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_34; // 0x103d8
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x10458
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_33; // 0x10488
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_32; // 0x10508
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_31; // 0x10588
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_30; // 0x10608
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_14; // 0x10688
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_29; // 0x10738
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x107b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_28; // 0x107e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0x10868
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0x108e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x10968
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_13; // 0x109e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x10a98
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x10b18
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_29; // 0x10b48
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_28; // 0x10c30
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_27; // 0x10d18
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x10e00
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_12; // 0x10ea0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_26; // 0x10f50
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_25; // 0x11038
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_24; // 0x11120
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_23; // 0x11208
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x112f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_11; // 0x11390
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_22; // 0x11440
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_21; // 0x11528
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_10; // 0x11610
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x116c0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_9; // 0x11760
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_8; // 0x11810
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x118c0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_20; // 0x11960
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_19; // 0x11a48
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_18; // 0x11b30
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_17; // 0x11c18
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_16; // 0x11d00
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_15; // 0x11de8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_14; // 0x11ed0
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_3; // 0x11fb8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_13; // 0x12080
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_2; // 0x12168
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_7; // 0x12230
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_12; // 0x122e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_11; // 0x123c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x124b0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_6; // 0x12550
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_10; // 0x12600
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x126e8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x127d0
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x12800
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x128b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x12930
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_11; // 0x129f0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_5; // 0x12a18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x12ac8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x12b48
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_10; // 0x12bc8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_9; // 0x12bf0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_4; // 0x12c18
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x12cc8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_7; // 0x12d68
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0x12ec0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x12ee8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0x12fd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x13080
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x13100
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x13180
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x13200
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x13280
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x13300
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0x133c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x133e8
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_6; // 0x13468
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x135c0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x13608
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0x13630
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x13788
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x137b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x13898
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x138c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x138e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x13968
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0x139e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x13b40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x13bc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x13c40
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x13cc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x13d40
	FAnimNode_Slot AnimGraphNode_Slot; // 0x13dc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x13e08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x13e88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x13f08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x13f88
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x14070
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x14120
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x14208
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x142f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x143d8
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive; // 0x144c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x14588
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x14608
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0x14688
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x147e0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x14880
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x14940
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x14a98
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x14ac0
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x14ae8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x14b98
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x14c38
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x14cb8
	FAnimNode_Root AnimGraphNode_Root; // 0x14e10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x14e40
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x14ec0
	float Delta Time X; // 0x14fa8
	ASurvivorMasterBP_C* Surv; // 0x14fb0
	bool IsInAir?; // 0x14fb8
	float Speed; // 0x14fbc
	float Direction; // 0x14fc0
	float Blend Weights 0; // 0x14fc4
	bool Capture Mode?; // 0x14fc8
	MovementTypeEnum MovementType; // 0x14fc9
	bool Idle2?; // 0x14fca
	SurvChars Surv Char; // 0x14fcb
	FRotator HeadRotation; // 0x14fcc
	int32_t Health; // 0x14fd8
	int32_t KillerType; // 0x14fdc
	float VerticalCameraAxis; // 0x14fe0
	SurvStateEnum SurvStateEnum; // 0x14fe4
	bool Attack?; // 0x14fe5
	bool EndJump?; // 0x14fe6
	float HorizontalCameraAxis; // 0x14fe8
	bool TurnLeft?; // 0x14fec
	bool TurnRight?; // 0x14fed
	bool GetReady?; // 0x14fee
	bool Crawl?; // 0x14fef
	bool Grapple?; // 0x14ff0
	bool OnChair?; // 0x14ff1
	bool AlarmReloading?; // 0x14ff2
	bool FPP?; // 0x14ff3
	bool Stop Move?; // 0x14ff4
	bool Custom Play Anim Walk?; // 0x14ff5
	UAnimMontage* IdleToIdleCrawl; // 0x14ff8
	UAnimMontage* DropChairMontage; // 0x15000
	UAnimMontage* SelfGetOutMontage; // 0x15008
	UAnimMontage* HelpGetOutMontage; // 0x15010
	bool Hitted?; // 0x15018
	float HasItem; // 0x1501c
	ItemType ItemType; // 0x15020
	bool StartCrawl?; // 0x15021
	bool IsOwner?; // 0x15022
	bool ItemTake?; // 0x15023
	bool Failed?; // 0x15024
	bool RandomSelfGetOut?; // 0x15025
	bool TaigaBonesTransform?; // 0x15026
	bool NotTestMode?; // 0x15027
	bool Escape Loop; // 0x15028
	bool Intro Anim?; // 0x15029
	float RandomPlayRateIntro; // 0x1502c
	float AlphaAdditiveSpeed; // 0x15030
	float Rotation; // 0x15034
	bool Escape?; // 0x15038
	bool Tutorial?; // 0x15039
	int32_t CritHP; // 0x1503c
};

struct UParticleModuleSpawnBase : UParticleModule {
	char bProcessSpawnRate : 1; // 0x30
	char bProcessBurstList : 1; // 0x30
};

struct UGraphicSettingsWBP1_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UCustomGraphicButton_C* AA_W; // 0x268
	UButton* Button_187; // 0x270
	UButton* Button_ChangeFOcus; // 0x278
	UButton* Button_GV; // 0x280
	UCustomGraphicButton_C* EQ_W; // 0x288
	UCustomGraphicButton_C* GQ_W; // 0x290
	UImage* Image_238; // 0x298
	UImage* Image_grayGV; // 0x2a0
	UCustomGraphicButton_C* MB_W; // 0x2a8
	UOverlay* Overlay_Gamma; // 0x2b0
	UCustomGraphicButton_C* PP_W; // 0x2b8
	UProgressBar* ProgressBar_Gamma; // 0x2c0
	UCustomGraphicButton_C* RES_W; // 0x2c8
	UCustomGraphicButton_C* SHQ_W; // 0x2d0
	USlider* Slider_Gamma; // 0x2d8
	UCustomGraphicButton_C* SM_W; // 0x2e0
	UCustomGraphicButton_C* SQ_W; // 0x2e8
	UTextBlock* TextBlock_228; // 0x2f0
	UTextBlock* TextBlock_247; // 0x2f8
	UCustomGraphicButton_C* TQ_W; // 0x300
	UCustomGraphicButton_C* VSyn_W; // 0x308
	TArray<FText> MainSettings; // 0x310
	TArray<FText> MainSettings_1; // 0x320
	TArray<FText> Resolutions; // 0x330
	int32_t GraphIndex; // 0x340
	int32_t PPIndex; // 0x344
	int32_t AAIndex; // 0x348
	int32_t ShadowIndex; // 0x34c
	int32_t ResIndex; // 0x350
	int32_t ScreenIndex; // 0x354
	TArray<FText> GraphCom; // 0x358
	TArray<FText> PPCom; // 0x368
	TArray<FText> AACom; // 0x378
	TArray<FText> ShadowCom; // 0x388
	TArray<FText> ResCom; // 0x398
	TArray<FText> ScreenText; // 0x3a8
	TArray<FIntPoint> Ress; // 0x3b8
	TArray<FText> ScreenStrings; // 0x3c8
	USaveGame* Saved; // 0x3d8
	TArray<FText> SHQCom; // 0x3e0
	TArray<FText> SHQSettings; // 0x3f0
	int32_t SHQIndex; // 0x400
	TArray<FText> MBCom; // 0x408
	int32_t MBIndex; // 0x418
	TArray<FText> MB_TextBtn; // 0x420
	UButton* LastKnowFocused; // 0x430
	UButton* HoverFocus; // 0x438
	UCustomGraphicButton_C* LastKnowFocusKeyboard; // 0x440
	FMulticastInlineDelegate EventDispatcher_UpPress; // 0x448
	TArray<UButton*> ArrayButtons; // 0x458
	bool MouseController?; // 0x468
	UCustomGraphicButton_C* Selected; // 0x470
	TArray<FText> EQCOM; // 0x478
	TArray<FText> EQ_TextBtn; // 0x488
	int32_t EQIndex; // 0x498
	TArray<FText> VSyncCom; // 0x4a0
	int32_t VSyncIndex; // 0x4b0
	int32_t TQIndex; // 0x4b4
	TArray<FText> TQCOM; // 0x4b8
	TArray<FText> TQCOM_Bias; // 0x4c8
	TArray<FText> TQCOM_Pool; // 0x4d8
	UWidget* KeyboardHoveredWidget; // 0x4e8
	TArray<FText> TQCOM_MaxAnis; // 0x4f0
	EWindowMode ScreenMode; // 0x500
	float Gamma; // 0x504
};

struct UMaterialExpressionRound : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UPawnNoiseEmitterComponent : UActorComponent {
	char bAIPerceptionSystemCompatibilityMode : 1; // 0xb0
	FVector LastRemoteNoisePosition; // 0xb4
	float NoiseLifetime; // 0xc0
	float LastRemoteNoiseVolume; // 0xc4
	float LastRemoteNoiseTime; // 0xc8
	float LastLocalNoiseVolume; // 0xcc
	float LastLocalNoiseTime; // 0xd0
};

struct UEnvQueryGenerator_PathingGrid : UEnvQueryGenerator_SimpleGrid {
	FAIDataProviderBoolValue PathToItem; // 0xf8
	UNavigationQueryFilter* NavigationFilter; // 0x130
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x138
};

struct UInterpTrackMoveAxis : UInterpTrackFloatBase {
	EInterpMoveAxis MoveAxis; // 0x90
	FInterpLookupTrack LookupTrack; // 0x98
};

struct AAmbientSound : AActor {
	UAudioComponent* AudioComponent; // 0x220
};

struct UScrollBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FScrollBoxStyle ScrollBoxStyle; // 0x30
};

struct APostProcessVolume : AVolume {
	FPostProcessSettings Settings; // 0x260
	float Priority; // 0x7b0
	float BlendRadius; // 0x7b4
	float BlendWeight; // 0x7b8
	char bEnabled : 1; // 0x7bc
	char bUnbound : 1; // 0x7bc
};

struct UBTService_BlackboardBase : UBTService {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UMaterialExpressionShadingModel : UMaterialExpression {
	EMaterialShadingModel ShadingModel; // 0x40
};

struct ADatasmithSceneActor : AActor {
	UDatasmithScene* Scene; // 0x220
	TMap<FName, TSoftObjectPtr<AActor>> RelatedActors; // 0x228
};

struct AExponentialHeightFog : AInfo {
	UExponentialHeightFogComponent* Component; // 0x220
	char bEnabled : 1; // 0x228
};

struct AFieldSystemActor : AActor {
	UFieldSystemComponent* FieldSystemComponent; // 0x220
};

struct UInAppPurchaseQueryCallbackProxy2 : UObject {
	FMulticastInlineDelegate onSuccess; // 0x28
	FMulticastInlineDelegate onFailure; // 0x38
};

struct UBTTask_MoveDirectlyToward : UBTTask_MoveTo {
	char bDisablePathUpdateOnGoalLocationChange : 1; // 0xb0
	char bProjectVectorGoalToNavigation : 1; // 0xb0
	char bUpdatedDeprecatedProperties : 1; // 0xb0
};

struct UWBP_LevelProgress_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Opacity_Anim; // 0x268
	UWidgetAnimation* NewLevel_Anim; // 0x270
	UCanvasPanel* CanvasPanel_LevelBar; // 0x278
	UImage* Image_68; // 0x280
	UProgressBar* ProgressBar_115; // 0x288
	USizeBox* SizeBox_Root; // 0x290
	UTextBlock* Text_CurrentExp; // 0x298
	UTextBlock* Text_CurrentLevel; // 0x2a0
	UTextBlock* Text_NextLevel; // 0x2a8
	UTextBlock* Text_NextLevel_Copy; // 0x2b0
	UTextBlock* Text_TargetExp; // 0x2b8
	float Minimum; // 0x2c0
	float Maximum; // 0x2c4
	float CurrentProgressValue; // 0x2c8
	FTimerHandle MovingAnimTimer; // 0x2d0
	FMulticastInlineDelegate OnFilled; // 0x2d8
	FMulticastInlineDelegate OnChangedValue; // 0x2e8
	float AnimTarget; // 0x2f8
	float CurrentMovingSpeed_C; // 0x2fc
	float CurrentMovingSpeed; // 0x300
	float TargetMovingSpeed; // 0x304
	FMulticastInlineDelegate OnFillingFinished; // 0x308
	FTimerHandle HandlerStartFilling; // 0x318
	FTimerHandle HandlerCallFillingFinished; // 0x320
	FFMODEventInstance ProgressSound; // 0x328
};

struct UDestructibleFractureSettings : UObject {
	int32_t CellSiteCount; // 0x28
	FFractureMaterial FractureMaterialDesc; // 0x2c
	int32_t RandomSeed; // 0x50
	TArray<FVector> VoronoiSites; // 0x58
	int32_t OriginalSubmeshCount; // 0x68
	TArray<UMaterialInterface*> Materials; // 0x70
	TArray<FDestructibleChunkParameters> ChunkParameters; // 0x80
};

struct UMaterialExpressionDistanceToNearestSurface : UMaterialExpression {
	FExpressionInput Position; // 0x40
};

struct UAsyncActionLoadPrimaryAssetClass : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct AGameStateBase : AInfo {
	AGameModeBase* GameModeClass; // 0x220
	AGameModeBase* AuthorityGameMode; // 0x228
	ASpectatorPawn* SpectatorClass; // 0x230
	TArray<APlayerState*> PlayerArray; // 0x238
	bool bReplicatedHasBegunPlay; // 0x248
	float ReplicatedWorldTimeSeconds; // 0x24c
	float ServerWorldTimeSecondsDelta; // 0x250
	float ServerWorldTimeSecondsUpdateFrequency; // 0x254
};

struct UBlendSpaceBase : UAnimationAsset {
	bool bRotationBlendInMeshSpace; // 0x88
	float AnimLength; // 0x8c
	FInterpolationParameter InterpolationParam[0x3]; // 0x90
	float TargetWeightInterpolationSpeedPerSec; // 0xa8
	ENotifyTriggerMode NotifyTriggerMode; // 0xac
	TArray<FPerBoneInterpolation> PerBoneBlend; // 0xb0
	int32_t SampleIndexWithMarkers; // 0xc0
	TArray<FBlendSample> SampleData; // 0xc8
	TArray<FEditorElement> GridSamples; // 0xd8
	FBlendParameter BlendParameters[0x3]; // 0xe8
};

struct UParticleModuleKillBox : UParticleModuleKillBase {
	FRawDistributionVector LowerLeftCorner; // 0x30
	FRawDistributionVector UpperRightCorner; // 0x78
	char bAbsolute : 1; // 0xc0
	char bKillInside : 1; // 0xc0
	char bAxisAlignedAndFixedSize : 1; // 0xc0
};

struct UInventorySurvCommand_Radial_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Fade_Fart; // 0x268
	UWidgetAnimation* Fade_Mission; // 0x270
	UWidgetAnimation* Fade_Baby; // 0x278
	UButton* Button_1; // 0x280
	UButton* Button_2; // 0x288
	UButton* Button_3; // 0x290
	UCanvasPanel* CanvasPanel_1202; // 0x298
	UCanvasPanel* CanvasPanel_1314; // 0x2a0
	UCanvasPanel* CanvasPanel_1401; // 0x2a8
	UImage* Image_357; // 0x2b0
	UImage* Image_BG; // 0x2b8
	UImage* Image_H_4; // 0x2c0
	UImage* Image_H_5; // 0x2c8
	UImage* Image_H_6; // 0x2d0
	UImage* Image_SelectorBG; // 0x2d8
	USizeBox* SizeBox_Picker; // 0x2e0
	UImage* slot_ind0; // 0x2e8
	UImage* slot_ind1; // 0x2f0
	UImage* Slot_ind2; // 0x2f8
	UTextBlock* TextBlock_ITEM; // 0x300
	UTextBlock* TextBlock_MAIN; // 0x308
	UTextBlock* TextBlock_MAIN_2; // 0x310
	UWidgetSwitcher* WidgetSwitcher_action; // 0x318
	bool Interacting?; // 0x320
	FVector2D InputVector; // 0x324
	int32_t CIndex; // 0x32c
	FButtonStyle PressedStyle_BTN; // 0x330
	FButtonStyle SelectedStyle_BTN; // 0x5a8
	FButtonStyle DefaultStyle_BTN; // 0x820
	FButtonStyle DefaultStyle_BTN_3D; // 0xa98
	int32_t CIndex_Music; // 0xd10
	FButtonStyle DefaultStyle_BTN_3D_1; // 0xd18
	int32_t CIndex_ZOrder; // 0xf90
	TArray<UPaperSprite*> Inventory_Icon; // 0xf98
	FText Healpack; // 0xfa8
	FText Flashlight; // 0xfc0
	FText EnergyDrink; // 0xfd8
	FText Picklock; // 0xff0
	FText Key; // 0x1008
	FText Book; // 0x1020
	FText Potion; // 0x1038
	FText Shield; // 0x1050
	FText Painkiller; // 0x1068
	FText Tools; // 0x1080
	FText YellowJar; // 0x1098
	FText JarOfGlue; // 0x10b0
};

struct UNiagaraPrecompileContainer : UObject {
	TArray<UNiagaraScript*> Scripts; // 0x28
	UNiagaraSystem* System; // 0x38
};

struct UInterpTrackInstBoolProp : UInterpTrackInstProperty {
	bool ResetBool; // 0x60
};

struct UMaterialExpressionLightmassReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0x40
	FExpressionInput Lightmass; // 0x54
};

struct UCanvas : UObject {
	float OrgX; // 0x28
	float OrgY; // 0x2c
	float ClipX; // 0x30
	float ClipY; // 0x34
	FColor DrawColor; // 0x38
	char bCenterX : 1; // 0x3c
	char bCenterY : 1; // 0x3c
	char bNoSmooth : 1; // 0x3c
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FPlane ColorModulate; // 0x50
	UTexture2D* DefaultTexture; // 0x60
	UTexture2D* GradientTexture0; // 0x68
	UReporterGraph* ReporterGraph; // 0x70
};

struct UComponentDelegateBinding : UDynamicBlueprintBinding {
	TArray<FBlueprintComponentDelegateBinding> ComponentDelegateBindings; // 0x28
};

struct UTimecodeProvider : UObject {
	float FrameDelay; // 0x28
};

struct UNiagaraDataInterfaceArrayFloat3 : UNiagaraDataInterfaceArray {
	TArray<FVector> FloatData; // 0x50
};

struct ANavMeshBoundsVolume : AVolume {
	FNavAgentSelector SupportedAgents; // 0x258
};

struct UW_GameResultRow_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* searching; // 0x268
	UWidgetAnimation* LoadingAnim; // 0x270
	UImage* Avatar; // 0x278
	UImage* Avatar_BG; // 0x280
	UHorizontalBox* HorizontalBox_111; // 0x288
	UImage* Image; // 0x290
	UImage* Image_2; // 0x298
	UImage* Image_3; // 0x2a0
	UImage* Image_13; // 0x2a8
	UImage* Image_14; // 0x2b0
	UImage* Image_15; // 0x2b8
	UImage* Image_412; // 0x2c0
	UTextBlock* Nickname; // 0x2c8
	URetainerBox* RetainerBox_2; // 0x2d0
	UScaleBox* ScaleBox_nickname; // 0x2d8
	UScrollBox* ScrollBox_Nickname; // 0x2e0
	USizeBox* SizeBox; // 0x2e8
	USizeBox* SizeBox_1; // 0x2f0
	USizeBox* SizeBox_2; // 0x2f8
	USizeBox* SizeBox_3; // 0x300
	USizeBox* SizeBox_4; // 0x308
	USizeBox* SizeBox_1522; // 0x310
	UWidgetSwitcher* WidgetSwitcher_Status; // 0x318
	APS_PropHunt_C* Player State; // 0x320
	int32_t Like; // 0x328
	bool Is Forward Direction; // 0x32c
	FTimerHandle AnimTimer; // 0x330
};

struct UMovieSceneComponentMaterialTrack : UMovieSceneMaterialTrack {
	int32_t MaterialIndex; // 0x90
};

struct UWBP_InGameBannerScreen_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Show_Anim; // 0x268
	UTextBlock* TextBlock_CaughtBy; // 0x270
	UW_Banner_C* W_Banner; // 0x278
	FTimerHandle ShowTimer; // 0x280
	float Time; // 0x288
	bool bIsBannerVisible; // 0x28c
	bool IsSpectatorMode; // 0x28d
	bool IsCaughtByBanner; // 0x28e
};

struct UBP_BanManager_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	FString BanDateTime; // 0xb8
	int32_t BanMinutes; // 0xc8
	FString BanSlot; // 0xd0
	USG_Ban_C* SG_Ban; // 0xe0
};

struct UParticleModuleVectorFieldScaleOverLife : UParticleModuleVectorFieldBase {
	UDistributionFloat* VectorFieldScaleOverLife; // 0x30
	FRawDistributionFloat VectorFieldScaleOverLifeRaw; // 0x38
};

struct UGizmoScaledTransformSource : UGizmoBaseTransformSource {
	TScriptInterface<IGizmoTransformSource> ChildTransformSource; // 0x48
};

struct UEOSCoreSessionsQueryInvites : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UGameMapsSettings : UObject {
	FString LocalMapOptions; // 0x28
	FSoftObjectPath TransitionMap; // 0x38
	bool bUseSplitscreen; // 0x50
	ETwoPlayerSplitScreenType TwoPlayerSplitscreenLayout; // 0x51
	EThreePlayerSplitScreenType ThreePlayerSplitscreenLayout; // 0x52
	EFourPlayerSplitScreenType FourPlayerSplitscreenLayout; // 0x53
	bool bOffsetPlayerGamepadIds; // 0x54
	FSoftClassPath GameInstanceClass; // 0x58
	FSoftObjectPath GameDefaultMap; // 0x70
	FSoftObjectPath ServerDefaultMap; // 0x88
	FSoftClassPath GlobalDefaultGameMode; // 0xa0
	FSoftClassPath GlobalDefaultServerGameMode; // 0xb8
	TArray<FGameModeName> GameModeMapPrefixes; // 0xd0
	TArray<FGameModeName> GameModeClassAliases; // 0xe0
};

struct UW_CustomizeBannerInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Banner; // 0x268
	UImage* Image; // 0x270
	UImage* Image_2; // 0x278
	UImage* Image_3; // 0x280
	UImage* Image_4; // 0x288
	UImage* Image_140; // 0x290
	UImage* Image_Avatar; // 0x298
	UImage* Image_Locked; // 0x2a0
	URetainerBox* RetainerBox_1; // 0x2a8
	USizeBox* SizeBox_45; // 0x2b0
	UTextBlock* TextBlock_BannerName; // 0x2b8
	UWBP_NewItemMarker_C* WBP_NewItemMarker; // 0x2c0
	UWidgetSwitcher* WidgetSwitcher_BGs; // 0x2c8
	int32_t BannerID; // 0x2d0
	FMulticastInlineDelegate OnClickDispatcher; // 0x2d8
	bool IsClicked; // 0x2e8
	FLinearColor Specified Color; // 0x2ec
	UW_CustomizeBanner_C* W_CustomizeBanner; // 0x300
	FText Rarity; // 0x308
	FText BannerName; // 0x320
	Rarity E_Rarity; // 0x338
	bool IsBlocked; // 0x339
};

struct UMaterialExpressionRuntimeVirtualTextureSample : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
	FExpressionInput WorldPosition; // 0x54
	FExpressionInput MipValue; // 0x68
	URuntimeVirtualTexture* VirtualTexture; // 0x80
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x88
	bool bSinglePhysicalSpace; // 0x89
	bool bAdaptive; // 0x8a
	ERuntimeVirtualTextureMipValueMode MipValueMode; // 0x8b
	ERuntimeVirtualTextureTextureAddressMode TextureAddressMode; // 0x8c
};

struct UMovieSceneGeometryCollectionSection : UMovieSceneSection {
	FMovieSceneGeometryCollectionParams Params; // 0xe8
};

struct ATest0_MAIN_MENU_C : ALevelScriptActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x228
};

struct UMovieSceneVectorTrack : UMovieScenePropertyTrack {
	int32_t NumChannelsUsed; // 0xb0
};

struct UParticleModuleVelocityInheritParent : UParticleModuleVelocityBase {
	FRawDistributionVector Scale; // 0x38
};

struct UEnvQueryTest_Distance : UEnvQueryTest {
	EEnvTestDistance TestMode; // 0x1f8
	UEnvQueryContext* DistanceTo; // 0x200
};

struct UMaterialExpressionLandscapeGrassOutput : UMaterialExpressionCustomOutput {
	TArray<FGrassInput> GrassTypes; // 0x40
};

struct UGraffityMakerHit_C : UGraffityMaker_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xc0
	TArray<FVector> v3Arr; // 0xc8
	TArray<FRotator> rotArr; // 0xd8
	FVector Impact Normal; // 0xe8
	FVector Actor Location; // 0xf4
	FVector Forward Vector; // 0x100
};

struct UBTTask_RotateToFaceBBEntry : UBTTask_BlackboardBase {
	float Precision; // 0x98
};

struct ASpyEye_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UBoxComponent* Box1; // 0x228
	USphereComponent* Sphere; // 0x230
	USkeletalMeshComponent* SkeletalMesh; // 0x238
	UStaticMeshComponent* EyeSphere; // 0x240
	USceneComponent* Scene; // 0x248
	UFMODAudioComponent* EyeSound; // 0x250
	UBoxComponent* Box; // 0x258
	UPointLightComponent* PointLight; // 0x260
	USceneComponent* DefaultSceneRoot; // 0x268
	ASurvivorMasterBP_C* SurvRef; // 0x270
	TArray<AKillerMasterBP_C*> KillersRef; // 0x278
	bool On?; // 0x288
	TArray<ASurvivorMasterBP_C*> SurvsRef; // 0x290
	ASurvivorMasterBP_C* LastSpottedSurv; // 0x2a0
	float SphereLocalZ; // 0x2a8
	bool EaseUp; // 0x2ac
	float EaseAlpha; // 0x2b0
	AKillerMasterBP_C* KillerRef; // 0x2b8
	UMaterialInstanceDynamic* EyeSphereDynMat1; // 0x2c0
	UMaterialInstanceDynamic* EyeSphereDynMat2; // 0x2c8
	UMaterialInstanceDynamic* EyeSphereDynMat3; // 0x2d0
	float TurnOnDuration; // 0x2d8
	float TurnOffDuration; // 0x2dc
	float TransitionTime; // 0x2e0
	float ErodeSubtractDef; // 0x2e4
	bool TurnOn; // 0x2e8
	bool TurnOff; // 0x2e9
	float Float1; // 0x2ec
	float BlinkTime; // 0x2f0
	bool BlinkOn; // 0x2f4
	bool BlinkOff; // 0x2f5
	FLinearColor BlinkColor1; // 0x2f8
	FLinearColor BlinkColor2; // 0x308
	bool BlinkActive; // 0x318
	FTimerHandle BlinkOnTimer; // 0x320
	FTimerHandle BlinkOffTimer; // 0x328
	bool MoveDetected; // 0x330
	FTimerHandle SurvStoppedDelayTimer; // 0x338
	bool SurvHidden; // 0x340
	ASurvivorMasterBP_C* LastLeftSurv; // 0x348
	float BlinkOnDuration; // 0x350
	float BlinkOffDuration; // 0x354
	float LightOnTime; // 0x358
	FTimerHandle LightOnTimer; // 0x360
	float LightOffTime; // 0x368
	FTimerHandle LightOffTimer; // 0x370
	float SavedLightIntensity; // 0x378
	TArray<ASurvivorMasterBP_C*> SpottedSurvs; // 0x380
	bool ShouldOn?; // 0x390
	bool AlreadyOn?; // 0x391
	bool TraceBool; // 0x392
	TArray<ASurvivorMasterBP_C*> SurvsInEye; // 0x398
	float SpawnAlpha; // 0x3a8
	float RootLocalZ; // 0x3ac
	float SpawnZOffset; // 0x3b0
	bool EyeCount; // 0x3b4
	bool Off?; // 0x3b5
};

struct UEOSCoreConnectDeleteDeviceId : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct AOnlineBeacon : AActor {
	float BeaconConnectionInitialTimeout; // 0x228
	float BeaconConnectionTimeout; // 0x22c
	UNetDriver* NetDriver; // 0x230
};

struct USoundNodeEnveloper : USoundNode {
	float LoopStart; // 0x48
	float LoopEnd; // 0x4c
	float DurationAfterLoop; // 0x50
	int32_t LoopCount; // 0x54
	char bLoopIndefinitely : 1; // 0x58
	char bLoop : 1; // 0x58
	UDistributionFloatConstantCurve* VolumeInterpCurve; // 0x60
	UDistributionFloatConstantCurve* PitchInterpCurve; // 0x68
	FRuntimeFloatCurve VolumeCurve; // 0x70
	FRuntimeFloatCurve PitchCurve; // 0xf8
	float PitchMin; // 0x180
	float PitchMax; // 0x184
	float VolumeMin; // 0x188
	float VolumeMax; // 0x18c
};

struct USpringArmComponent : USceneComponent {
	float TargetArmLength; // 0x1f8
	FVector SocketOffset; // 0x1fc
	FVector TargetOffset; // 0x208
	float ProbeSize; // 0x214
	ECollisionChannel ProbeChannel; // 0x218
	char bDoCollisionTest : 1; // 0x21c
	char bUsePawnControlRotation : 1; // 0x21c
	char bInheritPitch : 1; // 0x21c
	char bInheritYaw : 1; // 0x21c
	char bInheritRoll : 1; // 0x21c
	char bEnableCameraLag : 1; // 0x21c
	char bEnableCameraRotationLag : 1; // 0x21c
	char bUseCameraLagSubstepping : 1; // 0x21c
	char bDrawDebugLagMarkers : 1; // 0x21d
	float CameraLagSpeed; // 0x220
	float CameraRotationLagSpeed; // 0x224
	float CameraLagMaxTimeStep; // 0x228
	float CameraLagMaxDistance; // 0x22c
};

struct UDistributionFloatParameterBase : UDistributionFloatConstant {
	FName ParameterName; // 0x40
	float MinInput; // 0x48
	float MaxInput; // 0x4c
	float MinOutput; // 0x50
	float MaxOutput; // 0x54
	DistributionParamMode ParamMode; // 0x58
};

struct ASceneCapture2D : ASceneCapture {
	USceneCaptureComponent2D* CaptureComponent2D; // 0x230
};

struct ULightComponent : ULightComponentBase {
	float Temperature; // 0x228
	float MaxDrawDistance; // 0x22c
	float MaxDistanceFadeRange; // 0x230
	char bUseTemperature : 1; // 0x234
	int32_t ShadowMapChannel; // 0x238
	float MinRoughness; // 0x240
	float SpecularScale; // 0x244
	float ShadowResolutionScale; // 0x248
	float ShadowBias; // 0x24c
	float ShadowSlopeBias; // 0x250
	float ShadowSharpen; // 0x254
	float ContactShadowLength; // 0x258
	char ContactShadowLengthInWS : 1; // 0x25c
	char InverseSquaredFalloff : 1; // 0x25c
	char CastTranslucentShadows : 1; // 0x25c
	char bCastShadowsFromCinematicObjectsOnly : 1; // 0x25c
	char bAffectDynamicIndirectLighting : 1; // 0x25c
	char bForceCachedShadowsForMovablePrimitives : 1; // 0x25c
	FLightingChannels LightingChannels; // 0x260
	UMaterialInterface* LightFunctionMaterial; // 0x268
	FVector LightFunctionScale; // 0x270
	UTextureLightProfile* IESTexture; // 0x280
	char bUseIESBrightness : 1; // 0x288
	float IESBrightnessScale; // 0x28c
	float LightFunctionFadeDistance; // 0x290
	float DisabledBrightness; // 0x294
	char bEnableLightShaftBloom : 1; // 0x298
	float BloomScale; // 0x29c
	float BloomThreshold; // 0x2a0
	float BloomMaxBrightness; // 0x2a4
	FColor BloomTint; // 0x2a8
	bool bUseRayTracedDistanceFieldShadows; // 0x2ac
	float RayStartOffsetDepthScale; // 0x2b0
};

struct UEOSCoreUserInfoByExternalAccount : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UMaterialExpressionCosine : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UParticleModuleSizeMultiplyLife : UParticleModuleSizeBase {
	FRawDistributionVector LifeMultiplier; // 0x30
	char MultiplyX : 1; // 0x78
	char MultiplyY : 1; // 0x78
	char MultiplyZ : 1; // 0x78
};

struct UEOSCorePresenceQueryPresence : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct URabbitChargeShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UMovieSceneParticleSection : UMovieSceneSection {
	FMovieSceneParticleChannel ParticleKeys; // 0xe8
};

struct UMaterialExpressionFmod : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UInterpTrackLinearColorBase : UInterpTrack {
	FInterpCurveLinearColor LinearColorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UMockDataMeshTrackerComponent : USceneComponent {
	FMulticastInlineDelegate OnMeshTrackerUpdated; // 0x1f8
	bool ScanWorld; // 0x208
	bool RequestNormals; // 0x209
	bool RequestVertexConfidence; // 0x20a
	EMeshTrackerVertexColorMode VertexColorMode; // 0x20b
	TArray<FColor> BlockVertexColors; // 0x210
	FLinearColor VertexColorFromConfidenceZero; // 0x220
	FLinearColor VertexColorFromConfidenceOne; // 0x230
	float UpdateInterval; // 0x240
	UMRMeshComponent* MRMesh; // 0x248
};

struct UWBP_BDRush_Killer_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UVerticalBox* VerticalBox_84; // 0x268
	UWBP_EffectBloodLust_C* W_BDRush; // 0x270
};

struct Udoppel_a_pose_Skeleton_AnimBlueprint_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2f8
};

struct APaperTileMapActor : AActor {
	UPaperTileMapComponent* RenderComponent; // 0x220
};

struct USoundMix : UObject {
	char bApplyEQ : 1; // 0x28
	float EQPriority; // 0x2c
	FAudioEQEffect EQSettings; // 0x30
	TArray<FSoundClassAdjuster> SoundClassEffects; // 0x70
	float InitialDelay; // 0x80
	float FadeInTime; // 0x84
	float Duration; // 0x88
	float FadeOutTime; // 0x8c
};

struct UNiagaraDataInterfaceGrid2DCollection : UNiagaraDataInterfaceGrid2D {
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xf8
	ENiagaraGpuBufferFormat OverrideBufferFormat; // 0x118
	char bOverrideFormat : 1; // 0x119
	TMap<uint64_t, UTextureRenderTarget2DArray*> ManagedRenderTargets; // 0x170
};

struct UAssetManager : UObject {
	TArray<UObject*> ObjectReferenceList; // 0x2c0
	bool bIsGlobalAsyncScanEnvironment; // 0x2d0
	bool bShouldGuessTypeAndName; // 0x2d1
	bool bShouldUseSynchronousLoad; // 0x2d2
	bool bIsLoadingFromPakFiles; // 0x2d3
	bool bShouldAcquireMissingChunksOnLoad; // 0x2d4
	bool bOnlyCookProductionAssets; // 0x2d5
	bool bIsBulkScanning; // 0x2d6
	bool bIsPrimaryAssetDirectoryCurrent; // 0x2d7
	bool bIsManagementDatabaseCurrent; // 0x2d8
	bool bUpdateManagementDatabaseAfterScan; // 0x2d9
	bool bIncludeOnlyOnDiskAssets; // 0x2da
	bool bHasCompletedInitialScan; // 0x2db
	int32_t NumberOfSpawnedNotifications; // 0x2dc
};

struct UMovieSceneCameraShakeSourceShakeTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x80
};

struct UUniformGridPanel : UPanelWidget {
	FMargin SlotPadding; // 0x120
	float MinDesiredSlotWidth; // 0x130
	float MinDesiredSlotHeight; // 0x134
};

struct UPlayFabClientAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xaf8
	UPlayFabJsonObject* RequestJsonObj; // 0xb00
	UPlayFabJsonObject* ResponseJsonObj; // 0xb08
};

struct UCloudStorageBase : UPlatformInterfaceBase {
	TArray<FString> LocalCloudFiles; // 0x38
	char bSuppressDelegateCalls : 1; // 0x48
};

struct USoundCommand_Radial_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ShowCD; // 0x268
	UWidgetAnimation* ShowHimeCD_Anim; // 0x270
	UWidgetAnimation* Fade_MLG; // 0x278
	UWidgetAnimation* Fade_Help; // 0x280
	UWidgetAnimation* Fade_Bruh; // 0x288
	UWidgetAnimation* Fade_Fart; // 0x290
	UWidgetAnimation* Fade_Mission; // 0x298
	UWidgetAnimation* Fade_Baby; // 0x2a0
	UWidgetAnimation* Fade_Airhorn; // 0x2a8
	UWidgetAnimation* Fade_OOF; // 0x2b0
	UButton* Button; // 0x2b8
	UButton* Button_2; // 0x2c0
	UButton* Button_3; // 0x2c8
	UButton* Button_4; // 0x2d0
	UButton* Button_5; // 0x2d8
	UButton* Button_6; // 0x2e0
	UButton* Button_7; // 0x2e8
	UButton* Button_8; // 0x2f0
	UButton* Button_9; // 0x2f8
	UButton* Button_10; // 0x300
	UCanvasPanel* CanvasPanel_585; // 0x308
	UCanvasPanel* CanvasPanel_943; // 0x310
	UCanvasPanel* CanvasPanel_1202; // 0x318
	UCanvasPanel* CanvasPanel_1314; // 0x320
	UCanvasPanel* CanvasPanel_1401; // 0x328
	UCanvasPanel* CanvasPanel_1619; // 0x330
	UCanvasPanel* CanvasPanel_1690; // 0x338
	UCanvasPanel* CanvasPanel_1785; // 0x340
	UImage* Image; // 0x348
	UImage* Image_2; // 0x350
	UImage* Image_3; // 0x358
	UImage* Image_173; // 0x360
	UImage* Image_357; // 0x368
	UImage* Image_BG; // 0x370
	UImage* Image_H_2; // 0x378
	UImage* Image_H_3; // 0x380
	UImage* Image_H_4; // 0x388
	UImage* Image_H_5; // 0x390
	UImage* Image_H_6; // 0x398
	UImage* Image_H_7; // 0x3a0
	UImage* Image_H_8; // 0x3a8
	UImage* Image_H_9; // 0x3b0
	UImage* Image_SelectorBG; // 0x3b8
	USafeZone* SafeZone; // 0x3c0
	USafeZone* SafeZone_96; // 0x3c8
	USizeBox* SizeBox_8; // 0x3d0
	USizeBox* SizeBox_Picker; // 0x3d8
	UTextBlock* TextBlock_ITEM; // 0x3e0
	UTextBlock* TextBlock_MAIN; // 0x3e8
	UTextBlock* TextButton; // 0x3f0
	UTextBlock* TextButton1; // 0x3f8
	UTextBlock* TextButton2; // 0x400
	UTextBlock* TextButton3; // 0x408
	UTextBlock* TextButton4; // 0x410
	UTextBlock* TextButton5; // 0x418
	UTextBlock* TextButton6; // 0x420
	UTextBlock* TextButton7; // 0x428
	UWBP_SoundChatCoolDown_C* WBP_SoundChatCoolDown; // 0x430
	UWidgetSwitcher* WidgetSwitcher_Icon; // 0x438
	bool Interacting?; // 0x440
	FVector2D InputVector; // 0x444
	int32_t CIndex; // 0x44c
	FButtonStyle PressedStyle_BTN; // 0x450
	FButtonStyle SelectedStyle_BTN; // 0x6c8
	FButtonStyle DefaultStyle_BTN; // 0x940
	FButtonStyle DefaultStyle_BTN_3D; // 0xbb8
	int32_t CIndex_Music; // 0xe30
	FButtonStyle DefaultStyle_BTN_3D_1; // 0xe38
	int32_t CIndex_ZOrder; // 0x10b0
	TArray<UButton*> Array_Buttons; // 0x10b8
	TArray<UWidgetAnimation*> Array_Animations; // 0x10c8
	FMulticastInlineDelegate OnCoolDownFinished; // 0x10d8
	TMap<UButton*, UWidgetAnimation*> AnimationButton; // 0x10e8
	TMap<UButton*, UCanvasPanel*> CanvasButton; // 0x1138
	TMap<UButton*, float> AngleSelectButton; // 0x1188
	UButton* ActiveButton; // 0x11d8
	TMap<UButton*, int32_t> IndexButton; // 0x11e0
	TArray<UTextBlock*> ArrayButtonText; // 0x1230
	bool L_isKiller; // 0x1240
	TMap<UButton*, UTextBlock*> TextButtonMap; // 0x1248
	bool IsLock; // 0x1298
	float StartTimeAnimation; // 0x129c
	FMulticastInlineDelegate ButtonPressed; // 0x12a0
};

struct UClothingAssetCommon : UClothingAssetBase {
	UPhysicsAsset* PhysicsAsset; // 0x48
	TMap<FName, UClothConfigBase*> ClothConfigs; // 0x50
	UClothConfigBase* ClothSharedSimConfig; // 0xa0
	UClothConfigBase* ClothSimConfig; // 0xa8
	UClothConfigBase* ChaosClothSimConfig; // 0xb0
	TArray<UClothLODDataCommon_Legacy*> ClothLODData; // 0xb8
	TArray<FClothLODDataCommon> LODData; // 0xc8
	TArray<int32_t> LodMap; // 0xd8
	TArray<FName> UsedBoneNames; // 0xe8
	TArray<int32_t> UsedBoneIndices; // 0xf8
	int32_t ReferenceBoneIndex; // 0x108
	UClothingAssetCustomData* customData; // 0x110
	FClothConfig_Legacy ClothConfig; // 0x118
};

struct UW_Lobby_WaitPlayers_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UTextBlock* ButtonTextBlock; // 0x268
	UImage* Image; // 0x270
	UImage* Image_94; // 0x278
	UOverlay* Overlay_3; // 0x280
};

struct UCompressedImageSequenceProtocol : UImageSequenceProtocol {
	int32_t CompressionQuality; // 0xd8
};

struct UEOSCoreConnectQueryExternalAccountMappings : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UFootprintComponent_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	USceneComponent* Mesh; // 0xb8
	EFootprintStyle CurrentFootwear; // 0xc0
	EFootState FootState; // 0xc1
	float MaxMudSteps; // 0xc4
	float CurrentMudSteps; // 0xc8
	float MaxSandSteps; // 0xcc
	float CurrentSandSteps; // 0xd0
	bool Left; // 0xd4
	bool Right; // 0xd5
	FVector Location; // 0xd8
	FRotator Rotation; // 0xe4
	float MaxWetSteps; // 0xf0
	float CurrentWetSteps; // 0xf4
	float MaxBloodSteps; // 0xf8
	float CurrentBloodSteps; // 0xfc
	float CurrentMulticastSteps; // 0x100
	float CurrentMaxSteps; // 0x104
	AFootprint_Actor_C* FootprintActor; // 0x108
	UMaterialInstance* decal; // 0x110
	float ImpulseThreshold; // 0x118
	float VolumeSensitivity; // 0x11c
	float VolumeFootprint; // 0x120
	float ImpulseThresholdMax; // 0x124
	float MaxVolume; // 0x128
	UFMODAudioComponent* FmodAudio; // 0x130
	bool JumpEnd; // 0x138
	bool Killer?; // 0x139
	bool ImProp?; // 0x13a
	bool JumpStart; // 0x13b
	bool Run?; // 0x13c
	int32_t KillerType; // 0x140
	bool Crouch?; // 0x144
	bool Crawl?; // 0x145
};

struct UNiagaraDataInterfaceArrayInt32 : UNiagaraDataInterfaceArray {
	TArray<int32_t> IntData; // 0x50
};

struct UWBP_ServerMessage_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Ok; // 0x268
	UImage* Image_DialogBG; // 0x270
	UTextBlock* Text_Label; // 0x278
	UTextBlock* TextBlock_147; // 0x280
};

struct UAvfMediaSettings : UObject {
	bool NativeAudioOut; // 0x28
};

struct UAnimMontage : UAnimCompositeBase {
	FAlphaBlend BlendIn; // 0xa8
	float BlendInTime; // 0xd8
	FAlphaBlend BlendOut; // 0xe0
	float BlendOutTime; // 0x110
	float BlendOutTriggerTime; // 0x114
	FName SyncGroup; // 0x118
	int32_t SyncSlotIndex; // 0x120
	FMarkerSyncData MarkerData; // 0x128
	TArray<FCompositeSection> CompositeSections; // 0x148
	TArray<FSlotAnimationTrack> SlotAnimTracks; // 0x158
	TArray<FBranchingPoint> BranchingPoints; // 0x168
	bool bEnableRootMotionTranslation; // 0x178
	bool bEnableRootMotionRotation; // 0x179
	bool bEnableAutoBlendOut; // 0x17a
	ERootMotionRootLock RootMotionRootLock; // 0x17b
	TArray<FBranchingPointMarker> BranchingPointMarkers; // 0x180
	TArray<int32_t> BranchingPointStateNotifyIndices; // 0x190
	FTimeStretchCurve TimeStretchCurve; // 0x1a0
	FName TimeStretchCurveName; // 0x1c8
};

struct UAssetMappingTable : UObject {
	TArray<FAssetMapping> MappedAssets; // 0x28
};

struct UParticleModuleRequired : UParticleModule {
	UMaterialInterface* Material; // 0x30
	float MinFacingCameraBlendDistance; // 0x38
	float MaxFacingCameraBlendDistance; // 0x3c
	FVector EmitterOrigin; // 0x40
	FRotator EmitterRotation; // 0x4c
	EParticleScreenAlignment ScreenAlignment; // 0x58
	char bUseLocalSpace : 1; // 0x59
	char bKillOnDeactivate : 1; // 0x59
	char bKillOnCompleted : 1; // 0x59
	EParticleSortMode SortMode; // 0x5a
	char bUseLegacyEmitterTime : 1; // 0x5b
	char bRemoveHMDRoll : 1; // 0x5b
	char bEmitterDurationUseRange : 1; // 0x5b
	float EmitterDuration; // 0x5c
	FRawDistributionFloat SpawnRate; // 0x60
	TArray<FParticleBurst> BurstList; // 0x90
	float EmitterDelay; // 0xa0
	float EmitterDelayLow; // 0xa4
	char bDelayFirstLoopOnly : 1; // 0xa8
	EParticleSubUVInterpMethod InterpolationMethod; // 0xa9
	char bScaleUV : 1; // 0xaa
	char bEmitterDelayUseRange : 1; // 0xaa
	EParticleBurstMethod ParticleBurstMethod; // 0xab
	char bOverrideSystemMacroUV : 1; // 0xac
	char bUseMaxDrawCount : 1; // 0xac
	EOpacitySourceMode OpacitySourceMode; // 0xad
	EEmitterNormalsMode EmitterNormalsMode; // 0xae
	char bOrbitModuleAffectsVelocityAlignment : 1; // 0xaf
	int32_t SubImages_Horizontal; // 0xb0
	int32_t SubImages_Vertical; // 0xb4
	float RandomImageTime; // 0xb8
	int32_t RandomImageChanges; // 0xbc
	FVector MacroUVPosition; // 0xc0
	float MacroUVRadius; // 0xcc
	EParticleUVFlipMode UVFlippingMode; // 0xd0
	ESubUVBoundingVertexCount BoundingMode; // 0xd1
	char bDurationRecalcEachLoop : 1; // 0xd2
	FVector NormalsSphereCenter; // 0xd4
	float AlphaThreshold; // 0xe0
	int32_t EmitterLoops; // 0xe4
	UTexture2D* CutoutTexture; // 0xe8
	int32_t MaxDrawCount; // 0xf0
	float EmitterDurationLow; // 0xf4
	FVector NormalsCylinderDirection; // 0xf8
	TArray<FName> NamedMaterialOverrides; // 0x108
};

struct UNiagaraDataInterfaceGrid2D : UNiagaraDataInterfaceRWBase {
	int32_t NumCellsX; // 0xd8
	int32_t NumCellsY; // 0xdc
	int32_t NumCellsMaxAxis; // 0xe0
	int32_t NumAttributes; // 0xe4
	bool SetGridFromMaxAxis; // 0xe8
	FVector2D WorldBBoxSize; // 0xec
};

struct UMaterialExpressionConstant2Vector : UMaterialExpression {
	float R; // 0x40
	float G; // 0x44
};

struct UMonoWaveTableSynthPreset : UObject {
	FString PresetName; // 0x28
	char bLockKeyframesToGridBool : 1; // 0x38
	int32_t LockKeyframesToGrid; // 0x3c
	int32_t WaveTableResolution; // 0x40
	TArray<FRuntimeFloatCurve> WaveTable; // 0x48
	char bNormalizeWaveTables : 1; // 0x58
};

struct UMaterialExpressionVolumetricAdvancedMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput PhaseG; // 0x40
	FExpressionInput PhaseG2; // 0x54
	FExpressionInput PhaseBlend; // 0x68
	FExpressionInput MultiScatteringContribution; // 0x7c
	FExpressionInput MultiScatteringOcclusion; // 0x90
	FExpressionInput MultiScatteringEccentricity; // 0xa4
	FExpressionInput ConservativeDensity; // 0xb8
	float ConstPhaseG; // 0xcc
	float ConstPhaseG2; // 0xd0
	float ConstPhaseBlend; // 0xd4
	bool PerSamplePhaseEvaluation; // 0xd8
	uint32_t MultiScatteringApproximationOctaveCount; // 0xdc
	float ConstMultiScatteringContribution; // 0xe0
	float ConstMultiScatteringOcclusion; // 0xe4
	float ConstMultiScatteringEccentricity; // 0xe8
	bool bGroundContribution; // 0xec
	bool bGrayScaleMaterial; // 0xed
	bool bRayMarchVolumeShadow; // 0xee
};

struct UAnimCompress : UAnimBoneCompressionCodec {
	char bNeedsSkeleton : 1; // 0x38
	AnimationCompressionFormat TranslationCompressionFormat; // 0x3c
	AnimationCompressionFormat RotationCompressionFormat; // 0x3d
	AnimationCompressionFormat ScaleCompressionFormat; // 0x3e
};

struct AActor : UObject {
	FActorTickFunction PrimaryActorTick; // 0x28
	char bNetTemporary : 1; // 0x58
	char bNetStartup : 1; // 0x58
	char bOnlyRelevantToOwner : 1; // 0x58
	char bAlwaysRelevant : 1; // 0x58
	char bReplicateMovement : 1; // 0x58
	char bHidden : 1; // 0x58
	char bTearOff : 1; // 0x58
	char bExchangedRoles : 1; // 0x58
	char bNetLoadOnClient : 1; // 0x59
	char bNetUseOwnerRelevancy : 1; // 0x59
	char bRelevantForNetworkReplays : 1; // 0x59
	char bRelevantForLevelBounds : 1; // 0x59
	char bReplayRewindable : 1; // 0x59
	char bAllowTickBeforeBeginPlay : 1; // 0x59
	char bAutoDestroyWhenFinished : 1; // 0x59
	char bCanBeDamaged : 1; // 0x59
	char bBlockInput : 1; // 0x5a
	char bCollideWhenPlacing : 1; // 0x5a
	char bFindCameraComponentWhenViewTarget : 1; // 0x5a
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5a
	char bIgnoresOriginShifting : 1; // 0x5a
	char bEnableAutoLODGeneration : 1; // 0x5a
	char bIsEditorOnlyActor : 1; // 0x5a
	char bActorSeamlessTraveled : 1; // 0x5a
	char bReplicates : 1; // 0x5b
	char bCanBeInCluster : 1; // 0x5b
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5b
	char bActorEnableCollision : 1; // 0x5c
	char bActorIsBeingDestroyed : 1; // 0x5c
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5d
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5e
	ENetRole RemoteRole; // 0x5f
	FRepMovement ReplicatedMovement; // 0x60
	float InitialLifeSpan; // 0x94
	float CustomTimeDilation; // 0x98
	FRepAttachment AttachmentReplication; // 0xa0
	AActor* Owner; // 0xe0
	FName NetDriverName; // 0xe8
	ENetRole Role; // 0xf0
	ENetDormancy NetDormancy; // 0xf1
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xf2
	EAutoReceiveInput AutoReceiveInput; // 0xf3
	int32_t InputPriority; // 0xf4
	UInputComponent* InputComponent; // 0xf8
	float NetCullDistanceSquared; // 0x100
	int32_t NetTag; // 0x104
	float NetUpdateFrequency; // 0x108
	float MinNetUpdateFrequency; // 0x10c
	float NetPriority; // 0x110
	APawn* Instigator; // 0x118
	TArray<AActor*> Children; // 0x120
	USceneComponent* RootComponent; // 0x130
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x138
	TArray<FName> Layers; // 0x150
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x160
	TArray<FName> Tags; // 0x170
	FMulticastSparseDelegate OnTakeAnyDamage; // 0x180
	FMulticastSparseDelegate OnTakePointDamage; // 0x181
	FMulticastSparseDelegate OnTakeRadialDamage; // 0x182
	FMulticastSparseDelegate OnActorBeginOverlap; // 0x183
	FMulticastSparseDelegate OnActorEndOverlap; // 0x184
	FMulticastSparseDelegate OnBeginCursorOver; // 0x185
	FMulticastSparseDelegate OnEndCursorOver; // 0x186
	FMulticastSparseDelegate OnClicked; // 0x187
	FMulticastSparseDelegate OnReleased; // 0x188
	FMulticastSparseDelegate OnInputTouchBegin; // 0x189
	FMulticastSparseDelegate OnInputTouchEnd; // 0x18a
	FMulticastSparseDelegate OnInputTouchEnter; // 0x18b
	FMulticastSparseDelegate OnInputTouchLeave; // 0x18c
	FMulticastSparseDelegate OnActorHit; // 0x18d
	FMulticastSparseDelegate OnDestroyed; // 0x18e
	FMulticastSparseDelegate OnEndPlay; // 0x18f
	TArray<UActorComponent*> InstanceComponents; // 0x1f0
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x200
};

struct UMediaPlaylist : UObject {
	TArray<UMediaSource*> Items; // 0x28
};

struct UMovieSceneAudioTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AudioSections; // 0x80
};

struct UPreviewMeshCollection : UDataAsset {
	USkeleton* Skeleton; // 0x38
	TArray<FPreviewMeshCollectionEntry> SkeletalMeshes; // 0x40
};

struct UKillerSpell_C : USpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xd8
	AKillerMasterBP_C* Killer; // 0xe0
};

struct USubUVAnimation : UObject {
	UTexture2D* SubUVTexture; // 0x28
	int32_t SubImages_Horizontal; // 0x30
	int32_t SubImages_Vertical; // 0x34
	ESubUVBoundingVertexCount BoundingMode; // 0x38
	EOpacitySourceMode OpacitySourceMode; // 0x39
	float AlphaThreshold; // 0x3c
};

struct UMovieSceneCameraShakeSection : UMovieSceneSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe8
	UMatineeCameraShake* ShakeClass; // 0x108
	float PlayScale; // 0x110
	ECameraShakePlaySpace PlaySpace; // 0x114
	FRotator UserDefinedPlaySpace; // 0x118
};

struct USurvHP_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UProgressBar* ProgressBar_85; // 0x268
	USizeBox* SizeBox_1; // 0x270
	AActor* Owner; // 0x278
};

struct UBillboardComponent : UPrimitiveComponent {
	UTexture2D* Sprite; // 0x440
	char bIsScreenSizeScaled : 1; // 0x448
	float ScreenSize; // 0x44c
	float U; // 0x450
	float UL; // 0x454
	float V; // 0x458
	float VL; // 0x45c
};

struct UChaosClothSharedSimConfig : UClothSharedConfigCommon {
	int32_t IterationCount; // 0x28
	int32_t SubdivisionCount; // 0x2c
	float SelfCollisionThickness; // 0x30
	float CollisionThickness; // 0x34
	bool bUseDampingOverride; // 0x38
	float Damping; // 0x3c
	bool bUseGravityOverride; // 0x40
	float GravityScale; // 0x44
	FVector Gravity; // 0x48
	bool bUseLocalSpaceSimulation; // 0x54
	bool bUseXPBDConstraints; // 0x55
};

struct UCurveVector : UCurveBase {
	FRichCurve FloatCurves[0x3]; // 0x30
};

struct ANavigationObjectBase : AActor {
	UCapsuleComponent* CapsuleComponent; // 0x228
	UBillboardComponent* GoodSprite; // 0x230
	UBillboardComponent* BadSprite; // 0x238
	char bIsPIEPlayerStart : 1; // 0x240
};

struct USubmixEffectStereoDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectStereoDelaySettings Settings; // 0xb4
};

struct ASurvTutorial_C : ASurvivorMasterBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1830
	TArray<AActor*> TutorialGrannys; // 0x1838
	AActor* Part2Granny; // 0x1848
	UW_Tutorial_Quest_C* QuestWidget; // 0x1850
	bool FirstProp?; // 0x1858
	bool Puppet?; // 0x1859
	bool Prop?; // 0x185a
	float QuestDelayTime; // 0x185c
};

struct AGameSession : AInfo {
	int32_t MaxSpectators; // 0x220
	int32_t MaxPlayers; // 0x224
	int32_t MaxPartySize; // 0x228
	char MaxSplitscreensPerConnection; // 0x22c
	bool bRequiresPushToTalk; // 0x22d
	FName SessionName; // 0x230
};

struct USoundNodeLooping : USoundNode {
	int32_t LoopCount; // 0x48
	char bLoopIndefinitely : 1; // 0x4c
};

struct UATPCCameraModeDataAsset : UDataAsset {
	FGameplayTag CameraModeTag; // 0x30
	FATPCCameraMode CameraModeSettings; // 0x38
	TArray<UATPCCameraModeScript*> CameraModeScripts; // 0x250
};

struct UPlatformInterfaceBase : UObject {
	TArray<FDelegateArray> AllDelegates; // 0x28
};

struct UHapticFeedbackEffect_SoundWave : UHapticFeedbackEffect_Base {
	USoundWave* SoundWave; // 0x28
};

struct ULocalLightComponent : ULightComponent {
	ELightUnits IntensityUnits; // 0x328
	float Radius; // 0x32c
	float AttenuationRadius; // 0x330
	FLightmassPointLightSettings LightmassSettings; // 0x334
};

struct UMaterialExpressionDepthFade : UMaterialExpression {
	FExpressionInput InOpacity; // 0x40
	FExpressionInput FadeDistance; // 0x54
	float OpacityDefault; // 0x68
	float FadeDistanceDefault; // 0x6c
};

struct UParticleModuleLocationPrimitiveCylinder_Seeded : UParticleModuleLocationPrimitiveCylinder {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct UChaosClothConfig : UClothConfigCommon {
	EClothMassMode MassMode; // 0x28
	float UniformMass; // 0x2c
	float TotalMass; // 0x30
	float Density; // 0x34
	float MinPerParticleMass; // 0x38
	float EdgeStiffness; // 0x3c
	float BendingStiffness; // 0x40
	bool bUseBendingElements; // 0x44
	float AreaStiffness; // 0x48
	float VolumeStiffness; // 0x4c
	float StrainLimitingStiffness; // 0x50
	float LimitScale; // 0x54
	EChaosClothTetherMode TetherMode; // 0x58
	bool bUseGeodesicDistance; // 0x59
	float ShapeTargetStiffness; // 0x5c
	float CollisionThickness; // 0x60
	float FrictionCoefficient; // 0x64
	bool bUseSelfCollisions; // 0x68
	float SelfCollisionThickness; // 0x6c
	bool bUseLegacyBackstop; // 0x70
	float DampingCoefficient; // 0x74
	bool bUsePointBasedWindModel; // 0x78
	float DragCoefficient; // 0x7c
	float LiftCoefficient; // 0x80
	bool bUseGravityOverride; // 0x84
	float GravityScale; // 0x88
	FVector Gravity; // 0x8c
	float AnimDriveSpringStiffness; // 0x98
	FVector LinearVelocityScale; // 0x9c
	float AngularVelocityScale; // 0xa8
	bool bUseTetrahedralConstraints; // 0xac
	bool bUseThinShellVolumeConstraints; // 0xad
	bool bUseContinuousCollisionDetection; // 0xae
};

struct UTextureRenderTarget2DArray : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	int32_t Slices; // 0xe8
	FLinearColor ClearColor; // 0xec
	EPixelFormat OverrideFormat; // 0xfc
	char bHDR : 1; // 0xfd
	char bForceLinearGamma : 1; // 0xfd
};

struct ULandscapeMeshProxyComponent : UStaticMeshComponent {
	FGuid LandscapeGuid; // 0x4d0
	TArray<FIntPoint> ProxyComponentBases; // 0x4e0
	int8_t ProxyLOD; // 0x4f0
};

struct USoundKiller_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	UFMODEvent* LaughEvent; // 0xb8
	UFMODAudioComponent* LaughPlay; // 0xc0
};

struct UParticleModuleMeshRotationRateOverLife : UParticleModuleRotationRateBase {
	FRawDistributionVector RotRate; // 0x30
	char bScaleRotRate : 1; // 0x78
};

struct UAnimSharingAdditiveInstance : UAnimInstance {
	TWeakObjectPtr<USkeletalMeshComponent> BaseComponent; // 0x2b8
	TWeakObjectPtr<UAnimSequence> AdditiveAnimation; // 0x2c0
	float Alpha; // 0x2c8
	bool bStateBool; // 0x2cc
};

struct UCheckInteractableKiller_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	AKillerMasterBP_C* Killer; // 0xb8
	AActor* InteractableActor; // 0xc0
};

struct UPhysicsHandleComponent : UActorComponent {
	UPrimitiveComponent* GrabbedComponent; // 0xb0
	char bSoftAngularConstraint : 1; // 0xc0
	char bSoftLinearConstraint : 1; // 0xc0
	char bInterpolateTarget : 1; // 0xc0
	float LinearDamping; // 0xc4
	float LinearStiffness; // 0xc8
	float AngularDamping; // 0xcc
	float AngularStiffness; // 0xd0
	float InterpolationSpeed; // 0x140
};

struct URush_C : UPerkSurv_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
};

struct UEOSCoreLobbyLeaveLobby : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct ULandscapeSplinesComponent : UPrimitiveComponent {
	TArray<ULandscapeSplineControlPoint*> ControlPoints; // 0x440
	TArray<ULandscapeSplineSegment*> Segments; // 0x450
	TArray<UMeshComponent*> CookedForeignMeshComponents; // 0x460
};

struct USoundNode : UObject {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct AMatineeActor : AActor {
	UInterpData* MatineeData; // 0x220
	FName MatineeControllerName; // 0x228
	float PlayRate; // 0x230
	char bPlayOnLevelLoad : 1; // 0x234
	char bForceStartPos : 1; // 0x234
	float ForceStartPosition; // 0x238
	char bLooping : 1; // 0x23c
	char bRewindOnPlay : 1; // 0x23c
	char bNoResetOnRewind : 1; // 0x23c
	char bRewindIfAlreadyPlaying : 1; // 0x23c
	char bDisableRadioFilter : 1; // 0x23c
	char bClientSideOnly : 1; // 0x23c
	char bSkipUpdateIfNotVisible : 1; // 0x23c
	char bIsSkippable : 1; // 0x23c
	int32_t PreferredSplitScreenNum; // 0x240
	char bDisableMovementInput : 1; // 0x244
	char bDisableLookAtInput : 1; // 0x244
	char bHidePlayer : 1; // 0x244
	char bHideHud : 1; // 0x244
	TArray<FInterpGroupActorInfo> GroupActorInfos; // 0x248
	char bShouldShowGore : 1; // 0x258
	TArray<UInterpGroupInst*> GroupInst; // 0x260
	TArray<FCameraCutInfo> CameraCuts; // 0x270
	char bIsPlaying : 1; // 0x280
	char bReversePlayback : 1; // 0x280
	char bPaused : 1; // 0x280
	char bPendingStop : 1; // 0x280
	float InterpPosition; // 0x284
	char ReplicationForceIsPlaying; // 0x28c
	FMulticastInlineDelegate OnPlay; // 0x290
	FMulticastInlineDelegate OnStop; // 0x2a0
	FMulticastInlineDelegate OnPause; // 0x2b0
};

struct UNiagaraSimulationStageBase : UNiagaraMergeable {
	UNiagaraScript* Script; // 0x28
	FName SimulationStageName; // 0x30
	char bEnabled : 1; // 0x38
};

struct UMaterialExpressionMax : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMaterialExpressionRayTracingQualitySwitch : UMaterialExpression {
	FExpressionInput Normal; // 0x40
	FExpressionInput RayTraced; // 0x54
};

struct UEOSCoreLobbyRejectInvite : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UEOSCoreFriendsRejectInvite : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct ULiveLinkSubjectSettings : UObject {
	TArray<ULiveLinkFramePreProcessor*> PreProcessors; // 0x28
	ULiveLinkFrameInterpolationProcessor* InterpolationProcessor; // 0x38
	TArray<ULiveLinkFrameTranslator*> Translators; // 0x40
	ULiveLinkRole* Role; // 0x50
	FFrameRate FrameRate; // 0x58
	bool bRebroadcastSubject; // 0x60
};

struct UMaterialExpressionStaticComponentMaskParameter : UMaterialExpressionParameter {
	char DefaultR : 1; // 0x58
	char DefaultG : 1; // 0x58
	char DefaultB : 1; // 0x58
	char DefaultA : 1; // 0x58
};

struct UAnimSequenceBase : UAnimationAsset {
	TArray<FAnimNotifyEvent> Notifies; // 0x80
	float SequenceLength; // 0x90
	float RateScale; // 0x94
	FRawCurveTracks RawCurveData; // 0x98
};

struct UEnvQueryGenerator_ProjectedPoints : UEnvQueryGenerator {
	FEnvTraceData ProjectionData; // 0x50
};

struct UMapBuildDataRegistry : UObject {
	ELightingBuildQuality LevelLightingQuality; // 0x28
};

struct AItemsBP_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UStaticMeshComponent* Item; // 0x228
	USceneComponent* ItemPlace; // 0x230
	UCapsuleComponent* ItemCapsule; // 0x238
	UPointLightComponent* PointLight; // 0x240
	UFMODAudioComponent* FmodAudio; // 0x248
	USceneComponent* Scene; // 0x250
	UCapsuleComponent* Capsule; // 0x258
	float Timeline_0_NewTrack_0_CAD16150485926BBF07399BEB76406FB; // 0x260
	ETimelineDirection Timeline_0__Direction_CAD16150485926BBF07399BEB76406FB; // 0x264
	UTimelineComponent* Timeline_1; // 0x268
	FItemStructure ItemVar; // 0x270
	float EaseAlpha; // 0x2a0
	float LocalZ; // 0x2a4
	float DefaultLightIntensity; // 0x2a8
	bool EaseUp; // 0x2ac
	int32_t ItemSpawnIndex; // 0x2b0
	bool Block?; // 0x2b4
	float TempFloat; // 0x2b8
	int32_t TempInt; // 0x2bc
	int32_t Temp2Int; // 0x2c0
	TArray<FName> ItemsName; // 0x2c8
	int32_t Random; // 0x2d8
	float RollCount; // 0x2dc
	bool LootboxSpawnedItem?; // 0x2e0
	ALootboxShop_C* LootboxShopActor; // 0x2e8
	AActor* LootboxActor; // 0x2f0
};

struct UW_LobbyKiller_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Select_Anim; // 0x268
	UButton* Button; // 0x270
	UImage* Image_110; // 0x278
	UImage* Image_killerIcon; // 0x280
	UImage* Image_RedBlur; // 0x288
	UTextBlock* KillerName; // 0x290
	UOverlay* Overlay_FULL; // 0x298
	KillerType KillerType; // 0x2a0
	UW_MiniLobby_C* Owner; // 0x2a8
	float CounterTimeUP; // 0x2b0
	float CounterTimeDOWN; // 0x2b4
	bool bStartAnimButton?UP; // 0x2b8
	bool bStartAnimButton?DOWN; // 0x2b9
	bool Selected; // 0x2ba
	FSlateBrush In Style Normal; // 0x2c0
	FSlateBrush In Style Normal_1; // 0x348
};

struct UMovieScenePropertySystem : UMovieSceneEntitySystem {
	UMovieScenePropertyInstantiatorSystem* InstantiatorSystem; // 0x40
};

struct URuntimeVirtualTextureComponent : USceneComponent {
	TSoftObjectPtr<AActor> BoundsAlignActor; // 0x1f8
	bool bSetBoundsButton; // 0x220
	bool bSnapBoundsToLandscape; // 0x221
	URuntimeVirtualTexture* VirtualTexture; // 0x228
	bool bEnableScalability; // 0x230
	uint32_t ScalabilityGroup; // 0x234
	bool bHidePrimitives; // 0x238
	UVirtualTextureBuilder* StreamingTexture; // 0x240
	int32_t StreamLowMips; // 0x248
	bool bBuildStreamingMipsButton; // 0x24c
	bool bEnableCompressCrunch; // 0x24d
	bool bUseStreamingLowMipsInEditor; // 0x24e
	bool bBuildDebugStreamingMips; // 0x24f
};

struct ASurvDestructionActor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UDestructibleComponent* Destructible; // 0x228
	USceneComponent* DefaultSceneRoot; // 0x230
	TArray<UMaterialInstanceDynamic*> Materials; // 0x238
	float Float1; // 0x248
	float EffectDuration; // 0x24c
	float EffectTime; // 0x250
	FTimerHandle MaterialEffectEvent; // 0x258
	TArray<UDestructibleMesh*> DestructibleMeshToCheck; // 0x260
	bool IsOne?; // 0x270
	UMaterialInstance* Target; // 0x278
};

struct UInterpTrackInstProperty : UInterpTrackInst {
	TFieldPath<FProperty> InterpProperty; // 0x28
	UObject* PropertyOuterObjectInst; // 0x48
};

struct UNiagaraComponentRendererProperties : UNiagaraRendererProperties {
	USceneComponent* ComponentType; // 0x80
	uint32_t ComponentCountLimit; // 0x88
	FNiagaraVariableAttributeBinding EnabledBinding; // 0x90
	bool bAssignComponentsOnParticleID; // 0xe8
	bool bOnlyCreateComponentsOnParticleSpawn; // 0xe9
	USceneComponent* TemplateComponent; // 0xf0
	TArray<FNiagaraComponentPropertyBinding> PropertyBindings; // 0xf8
};

struct UBTTask_BlackboardBase : UBTTaskNode {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UToIntegerField : UFieldNodeInt {
	UFieldNodeFloat* FloatField; // 0xb0
};

struct UPathFollowingComponent : UActorComponent {
	UNavMovementComponent* MovementComp; // 0xe8
	ANavigationData* MyNavData; // 0xf8
};

struct UMagicLeapARPinContentBindings : USaveGame {
	TMap<FGuid, FMagicLeapARPinObjectIdList> AllContentBindings; // 0x28
};

struct UNavigationSystemV1 : UNavigationSystemBase {
	ANavigationData* MainNavData; // 0x28
	ANavigationData* AbstractNavData; // 0x30
	FName DefaultAgentName; // 0x38
	TSoftClassPtr<UObject> CrowdManagerClass; // 0x40
	char bAutoCreateNavigationData : 1; // 0x68
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x68
	char bAllowClientSideNavigation : 1; // 0x68
	char bShouldDiscardSubLevelNavData : 1; // 0x68
	char bTickWhilePaused : 1; // 0x68
	char bSupportRebuilding : 1; // 0x68
	char bInitialBuildingLocked : 1; // 0x68
	char bSkipAgentHeightCheckWhenPickingNavData : 1; // 0x69
	char bGenerateNavigationOnlyAroundNavigationInvokers : 1; // 0x69
	float ActiveTilesUpdateInterval; // 0x6c
	ENavDataGatheringModeConfig DataGatheringMode; // 0x70
	float DirtyAreaWarningSizeThreshold; // 0x74
	TArray<FNavDataConfig> SupportedAgents; // 0x78
	FNavAgentSelector SupportedAgentsMask; // 0x88
	TArray<ANavigationData*> NavDataSet; // 0x90
	TArray<ANavigationData*> NavDataRegistrationQueue; // 0xa0
	FMulticastInlineDelegate OnNavDataRegisteredEvent; // 0xc0
	FMulticastInlineDelegate OnNavigationGenerationFinishedDelegate; // 0xd0
	FNavigationSystemRunMode OperationMode; // 0x1bc
	float DirtyAreasUpdateFreq; // 0x15bc
};

struct UInterpTrackInstFloatParticleParam : UInterpTrackInst {
	float ResetFloat; // 0x28
};

struct UWBP_Tip_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FadeOut_Anim; // 0x268
	UWidgetAnimation* FadeIn_Anim; // 0x270
	UWidgetAnimation* Fade_Anim_Full; // 0x278
	UImage* Image_BG; // 0x280
	UImage* Image_Button; // 0x288
	UImage* Image_Ref; // 0x290
	UImage* Image_Separator; // 0x298
	USizeBox* SizeBox_Button; // 0x2a0
	UTextBlock* Text_Button; // 0x2a8
	UTextBlock* Text_Header; // 0x2b0
	UTextBlock* Text_Tip; // 0x2b8
	bool WasProp; // 0x2c0
	bool WasHuman; // 0x2c1
	bool TouchedClock; // 0x2c2
	ASurvivorMasterBP_C* Surv; // 0x2c8
	TArray<FName> TipsArray; // 0x2d0
	int32_t CurrentTipIndex; // 0x2e0
	bool ShowTips; // 0x2e4
	bool CallForHelp; // 0x2e5
	int32_t PrevTip; // 0x2e8
	bool Hidden; // 0x2ec
	bool Dead; // 0x2ed
	bool End Game?; // 0x2ee
};

struct UNiagaraDataInterfaceSpline : UNiagaraDataInterface {
	AActor* Source; // 0x38
};

struct UParticleModuleParameterDynamic_Seeded : UParticleModuleParameterDynamic {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x48
};

struct USkinSelectedButton_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_26; // 0x268
	UTextBlock* TextBlock_59; // 0x270
	FName Name; // 0x278
	int32_t ID; // 0x280
	SurvChars Char; // 0x284
};

struct UNewsurv_Intro_A_Pose_Skeleton_AnimBlueprint_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x320
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x348
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x3c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3f8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x478
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x4a8
	bool MvpAnim?; // 0x558
};

struct AHUD : AActor {
	APlayerController* PlayerOwner; // 0x220
	char bLostFocusPaused : 1; // 0x228
	char bShowHUD : 1; // 0x228
	char bShowDebugInfo : 1; // 0x228
	int32_t CurrentTargetIndex; // 0x22c
	char bShowHitBoxDebugInfo : 1; // 0x230
	char bShowOverlays : 1; // 0x230
	char bEnableDebugTextShadow : 1; // 0x230
	TArray<AActor*> PostRenderedActors; // 0x238
	TArray<FName> DebugDisplay; // 0x250
	TArray<FName> ToggledDebugCategories; // 0x260
	UCanvas* Canvas; // 0x270
	UCanvas* DebugCanvas; // 0x278
	TArray<FDebugTextInfo> DebugTextList; // 0x280
	AActor* ShowDebugTargetDesiredClass; // 0x290
	AActor* ShowDebugTargetActor; // 0x298
};

struct UInAppPurchaseComponent : UActorComponent {
	FMulticastInlineDelegate InAppPurchaseLogMessage; // 0xb0
	FMulticastInlineDelegate GetItemsDetailsSuccess; // 0xc0
	FMulticastInlineDelegate GetItemsDetailsFailure; // 0xd0
	FMulticastInlineDelegate PurchaseConfirmationSuccess; // 0xe0
	FMulticastInlineDelegate PurchaseConfirmationFailure; // 0xf0
	FMulticastInlineDelegate GetPurchaseHistorySuccess; // 0x100
	FMulticastInlineDelegate GetPurchaseHistoryFailure; // 0x110
};

struct AGeometryCollectionDebugDrawActor : AActor {
	FGeometryCollectionDebugDrawWarningMessage WarningMessage; // 0x220
	FGeometryCollectionDebugDrawActorSelectedRigidBody SelectedRigidBody; // 0x228
	bool bDebugDrawWholeCollection; // 0x240
	bool bDebugDrawHierarchy; // 0x241
	bool bDebugDrawClustering; // 0x242
	EGeometryCollectionDebugDrawActorHideGeometry HideGeometry; // 0x243
	bool bShowRigidBodyId; // 0x244
	bool bShowRigidBodyCollision; // 0x245
	bool bCollisionAtOrigin; // 0x246
	bool bShowRigidBodyTransform; // 0x247
	bool bShowRigidBodyInertia; // 0x248
	bool bShowRigidBodyVelocity; // 0x249
	bool bShowRigidBodyForce; // 0x24a
	bool bShowRigidBodyInfos; // 0x24b
	bool bShowTransformIndex; // 0x24c
	bool bShowTransform; // 0x24d
	bool bShowParent; // 0x24e
	bool bShowLevel; // 0x24f
	bool bShowConnectivityEdges; // 0x250
	bool bShowGeometryIndex; // 0x251
	bool bShowGeometryTransform; // 0x252
	bool bShowBoundingBox; // 0x253
	bool bShowFaces; // 0x254
	bool bShowFaceIndices; // 0x255
	bool bShowFaceNormals; // 0x256
	bool bShowSingleFace; // 0x257
	int32_t SingleFaceIndex; // 0x258
	bool bShowVertices; // 0x25c
	bool bShowVertexIndices; // 0x25d
	bool bShowVertexNormals; // 0x25e
	bool bUseActiveVisualization; // 0x25f
	float PointThickness; // 0x260
	float LineThickness; // 0x264
	bool bTextShadow; // 0x268
	float TextScale; // 0x26c
	float NormalScale; // 0x270
	float AxisScale; // 0x274
	float ArrowScale; // 0x278
	FColor RigidBodyIdColor; // 0x27c
	float RigidBodyTransformScale; // 0x280
	FColor RigidBodyCollisionColor; // 0x284
	FColor RigidBodyInertiaColor; // 0x288
	FColor RigidBodyVelocityColor; // 0x28c
	FColor RigidBodyForceColor; // 0x290
	FColor RigidBodyInfoColor; // 0x294
	FColor TransformIndexColor; // 0x298
	float TransformScale; // 0x29c
	FColor LevelColor; // 0x2a0
	FColor ParentColor; // 0x2a4
	float ConnectivityEdgeThickness; // 0x2a8
	FColor GeometryIndexColor; // 0x2ac
	float GeometryTransformScale; // 0x2b0
	FColor BoundingBoxColor; // 0x2b4
	FColor FaceColor; // 0x2b8
	FColor FaceIndexColor; // 0x2bc
	FColor FaceNormalColor; // 0x2c0
	FColor SingleFaceColor; // 0x2c4
	FColor VertexColor; // 0x2c8
	FColor VertexIndexColor; // 0x2cc
	FColor VertexNormalColor; // 0x2d0
	UBillboardComponent* SpriteComponent; // 0x2d8
};

struct UClothPhysicalMeshDataNv_Legacy : UClothPhysicalMeshDataBase_Legacy {
	TArray<float> MaxDistances; // 0xe0
	TArray<float> BackstopDistances; // 0xf0
	TArray<float> BackstopRadiuses; // 0x100
	TArray<float> AnimDriveMultipliers; // 0x110
};

struct UGrandma_Facerig_Skeleton_AnimBlueprint_Lobby_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x320
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x3a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x3d0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x450
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x480
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x530
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x5d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x5f8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x678
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x6a8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x728
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x758
	bool Reset?; // 0x808
};

struct UNavLinkDefinition : UObject {
	TArray<FNavigationLink> Links; // 0x28
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x38
};

struct UEOSCoreEcomCheckout : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UBoneMaskFilter : UObject {
	TArray<FInputBlendPose> BlendPoses; // 0x28
};

struct UBlackboardData : UDataAsset {
	UBlackboardData* Parent; // 0x30
	TArray<FBlackboardEntry> keys; // 0x38
	char bHasSynchronizedKeys : 1; // 0x48
};

struct UWBP_AlarmsCounter_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Done_Anim; // 0x268
	UTextBlock* TextBlock_Obj; // 0x270
	UWBP_AlarmCounterItem_C* WBP_AlarmCounterItem_1; // 0x278
	UWBP_AlarmCounterItem_C* WBP_AlarmCounterItem_2; // 0x280
	UWBP_AlarmCounterItem_C* WBP_AlarmCounterItem_3; // 0x288
	UWBP_AlarmCounterItem_C* WBP_AlarmCounterItem_4; // 0x290
	UWBP_AlarmCounterItem_C* WBP_AlarmCounterItem_5; // 0x298
	TArray<UWBP_AlarmCounterItem_C*> ItemsArray; // 0x2a0
	int32_t CurrentIndex; // 0x2b0
	FMulticastInlineDelegate OnAlarmsDone; // 0x2b8
};

struct UMovieScene3DPathSection : UMovieScene3DConstraintSection {
	FMovieSceneFloatChannel TimingCurve; // 0x110
	MovieScene3DPathSection_Axis FrontAxisEnum; // 0x1b0
	MovieScene3DPathSection_Axis UpAxisEnum; // 0x1b1
	char bFollow : 1; // 0x1b4
	char bReverse : 1; // 0x1b4
	char bForceUpright : 1; // 0x1b4
};

struct UMaterialExpressionLandscapeLayerBlend : UMaterialExpression {
	TArray<FLayerBlendInput> Layers; // 0x40
	FGuid ExpressionGUID; // 0x50
};

struct APointLight : ALight {
	UPointLightComponent* PointLightComponent; // 0x230
};

struct UPlayerScoreComponent_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* BG; // 0x268
	UImage* BG_Border_Down; // 0x270
	UImage* BG_Border_Up; // 0x278
	UImage* Image_200; // 0x280
	UImage* Image_Score; // 0x288
	UImage* Image_Voice; // 0x290
	UImage* KillerAvatar; // 0x298
	UTextBlock* Nickname; // 0x2a0
	UTextBlock* Ping; // 0x2a8
	UImage* PlayerAvatar; // 0x2b0
	UTextBlock* PlayerPlace; // 0x2b8
	UPlayerScoreComponentButtonSound_C* PlayerScoreComponentButton; // 0x2c0
	UPlayerScoreComponentButtonSound_C* PlayerScoreComponentButton_TextChat; // 0x2c8
	UPlayerScoreComponentButtonRep_C* PlayerScoreComponentButtonRep; // 0x2d0
	URetainerBox* RetainerBox_1; // 0x2d8
	UTextBlock* ScorePoints; // 0x2e0
	UTextBlock* ScorePoints_2; // 0x2e8
	UScrollBox* ScrollBox_1; // 0x2f0
	USizeBox* SizeBox_1; // 0x2f8
	USizeBox* SizeBox_4; // 0x300
	UImage* SpectatorAvatar; // 0x308
	UTextBlock* StatusPlayer; // 0x310
	UWidgetSwitcher* WidgetSwitcher_116; // 0x318
	UWidgetSwitcher* WidgetSwitcher_141; // 0x320
	APawn* Player; // 0x328
	FText Alive; // 0x330
	FText Crawl; // 0x348
	FText OnChair; // 0x360
	FText Death; // 0x378
	APlayerState* Player State; // 0x390
	TMap<SurvChars, UPaperSprite*> Icons; // 0x398
	APawn* Pawn Private; // 0x3e8
	bool IsEmpty; // 0x3f0
	FSlateBrush Slate Brush; // 0x3f8
	bool isSoundMuted; // 0x480
	bool IsForwardDirection; // 0x481
	FTimerHandle AnimTimer; // 0x488
	bool IsTextMuted; // 0x490
};

struct UParticleModuleRotationOverLifetime : UParticleModuleRotationBase {
	FRawDistributionFloat RotationOverLife; // 0x30
	char Scale : 1; // 0x60
};

struct ACameraRig_Crane : AActor {
	float CranePitch; // 0x220
	float CraneYaw; // 0x224
	float CraneArmLength; // 0x228
	bool bLockMountPitch; // 0x22c
	bool bLockMountYaw; // 0x22d
	USceneComponent* TransformComponent; // 0x230
	USceneComponent* CraneYawControl; // 0x238
	USceneComponent* CranePitchControl; // 0x240
	USceneComponent* CraneCameraMount; // 0x248
};

struct UW_MainMenu_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* HideSocAndVer_Anim; // 0x268
	UWidgetAnimation* Show_BanNotification; // 0x270
	UWidgetAnimation* HideSocialNetworks_Anim; // 0x278
	UWidgetAnimation* ShowHide_Social; // 0x280
	UWidgetAnimation* FadeBlur; // 0x288
	UWidgetAnimation* QuitMove_Anim; // 0x290
	UWidgetAnimation* SettingsMove_Anim; // 0x298
	UWidgetAnimation* TutorialMove_Anim; // 0x2a0
	UWidgetAnimation* PlayMove_Anim; // 0x2a8
	UWidgetAnimation* BackButton_Anim; // 0x2b0
	UWidgetAnimation* Chat_Anim; // 0x2b8
	UWidgetAnimation* ChangeSwitcherWidget_Anim; // 0x2c0
	UWidgetAnimation* Logo_Anim; // 0x2c8
	UWidgetAnimation* FadeIn; // 0x2d0
	UWidgetAnimation* MainMenu_Appearance_Anim; // 0x2d8
	UTextBlock* BuildNumber; // 0x2e0
	UButton* Button; // 0x2e8
	UButton* Button_2; // 0x2f0
	UButton* Button_79; // 0x2f8
	UButton* Button_198; // 0x300
	UButton* Button_525; // 0x308
	UButton* Button_632; // 0x310
	UButton* Button_Discord_Link; // 0x318
	UButton* Button_Facebook_Link; // 0x320
	UButton* Button_Instagram_Link; // 0x328
	UButton* Button_Lootbox; // 0x330
	UButton* Button_Play; // 0x338
	UButton* Button_QUIT; // 0x340
	UButton* Button_Settings; // 0x348
	UButton* Button_Tutorial; // 0x350
	UButton* Button_Twitter_Link; // 0x358
	UCanvasPanel* CanvasPanel_NewMainMenu; // 0x360
	UChatWindow_C* ChatWindow; // 0x368
	UButton* ClearPerkButton; // 0x370
	UHorizontalBox* HorizontalBox_Social; // 0x378
	UImage* Image_60; // 0x380
	UImage* Image_88; // 0x388
	UImage* Image_905; // 0x390
	UImage* Image_DiscordLogoBG; // 0x398
	UImage* Image_FadeBG; // 0x3a0
	UButton* KillerPerkButton; // 0x3a8
	UOverlay* Overlay_RedLine; // 0x3b0
	UButton* Perk1; // 0x3b8
	UTextBlock* Perk1Name; // 0x3c0
	UButton* Perk2; // 0x3c8
	UTextBlock* Perk2Name; // 0x3d0
	UButton* Perk3; // 0x3d8
	UTextBlock* Perk3Name; // 0x3e0
	UTextBlock* PerkDesc; // 0x3e8
	UHorizontalBox* PerkList; // 0x3f0
	UTextBlock* PerkName; // 0x3f8
	UOverlay* PerkWindow; // 0x400
	UHorizontalBox* PlayerType; // 0x408
	UProgressBar* ProgressBar_KB; // 0x410
	UProgressBar* ProgressBar_Mouse; // 0x418
	USizeBox* SizeBox_Buttons; // 0x420
	UButton* SurvPerkButton; // 0x428
	UHorizontalBox* TestSkinHBox; // 0x430
	UVerticalBox* TestSkinVBox; // 0x438
	UTextBlock* TextBlock_Lootbox; // 0x440
	UTextBlock* TextBlock_Play; // 0x448
	UTextBlock* TextBlock_Quit; // 0x450
	UTextBlock* TextBlock_Settings; // 0x458
	UTextBlock* TextBlock_TIMER; // 0x460
	UTextBlock* TextBlock_Tutorial; // 0x468
	UW_PlayScreen_C* W_PlayScreen; // 0x470
	UW_PressAnyKeyScreen_C* W_PressAnyKeyScreen; // 0x478
	UWBP_CustomizationMenu_C* WBP_CustomizationMenu; // 0x480
	UWBP_LootboxMain_C* WBP_LootboxMain; // 0x488
	UWBP_NewItemMarker_C* WBP_NewItemMarker_Skins; // 0x490
	UWBP_QuickSearch_C* WBP_QuickSearch; // 0x498
	UWBP_QuitDialog_C* WBP_QuitDialog; // 0x4a0
	UWBP_ServerMessage_C* WBP_ServerMessage; // 0x4a8
	UWBP_SocialUI_C* WBP_SocialUI; // 0x4b0
	UWidgetSwitcher* WidgetSwitcher_MainMenu; // 0x4b8
	int32_t NumberOfSessions; // 0x4c0
	TArray<FBlueprintSessionResult> Sessions; // 0x4c8
	int32_t MinPing; // 0x4d8
	FBlueprintSessionResult AvialableSession; // 0x4e0
	bool Found?; // 0x5e8
	int32_t MaxPlayers; // 0x5ec
	FName HostLevel; // 0x5f0
	UGI_Prophunt_C* GI; // 0x5f8
	int32_t ServPing; // 0x600
	bool SettingsOpen?; // 0x604
	bool SearchingOpen?; // 0x605
	int32_t int; // 0x608
	TArray<UTexture2D*> arrayImg; // 0x610
	TArray<FString> arrayName; // 0x620
	FFMODEventInstance MainMenuSound; // 0x630
	bool MenuSoundStarted?; // 0x638
	UButton* LastKnowButton; // 0x640
	FButtonStyle FocusedStyleButton; // 0x648
	FButtonStyle UnFocusedStyleButton; // 0x8c0
	bool SettingButtonIsHover?; // 0xb38
	TArray<UButton*> ButtonsArray; // 0xb40
	TArray<UObject*> ImgNormalArray; // 0xb50
	TArray<UObject*> ImgHoverArray; // 0xb60
	TArray<UObject*> ImgPressedArray; // 0xb70
	int32_t ButtonsIndex; // 0xb80
	FVector2D ButtonImageSize_Normal; // 0xb84
	FVector2D ButtonImageSize_Hovered; // 0xb8c
	FVector2D ButtonImageSizePressed; // 0xb94
	TArray<UButton*> Buttons_LinksArray; // 0xba0
	TArray<UTextBlock*> TextBlockArray; // 0xbb0
	TArray<UObject*> ImgPressedLinksArray; // 0xbc0
	TArray<UObject*> ImgNormalLinksArray; // 0xbd0
	TArray<UObject*> ImgHoverLinksArray; // 0xbe0
	FVector2D ButtonImageSize_Links; // 0xbf0
	bool BlockButtonIsHover?; // 0xbf8
	int32_t KillersCount; // 0xbfc
	int32_t SurvCount; // 0xc00
	TArray<UBP_SessionData_C*> SessionList; // 0xc08
	bool IsInventoryButtonHovered?; // 0xc18
	bool IsPlayButtonHovered?; // 0xc19
	bool IsPracticeButtonPressed?; // 0xc1a
	UButton* HoveredButton; // 0xc20
	int32_t PerkNumber; // 0xc28
	bool SurvPerk?; // 0xc2c
	FText Last Text Name S; // 0xc30
	FText Last Text Desc S; // 0xc48
	FText Last Text Name K; // 0xc60
	FText Last Text Desc K; // 0xc78
	FSlateBrush In Style Hovered; // 0xc90
	FSlateBrush In Style Normal; // 0xd18
	FSlateBrush In Style Normal_1; // 0xda0
	FSlateBrush In Style Hovered_1; // 0xe28
	TMap<UButton*, UWidgetAnimation*> ButtonAnimsMap; // 0xeb0
	bool IsButtonsUnpressible; // 0xf00
	float SliderValueFocus; // 0xf04
	float SliderValueFocus_KB; // 0xf08
	FSlateBrush In Style Normal_2; // 0xf10
	FSlateBrush In Style Normal_3; // 0xf98
	FSlateBrush In Style Normal_4; // 0x1020
	FSlateBrush In Style Normal_5; // 0x10a8
	SurvChars Char; // 0x1130
	bool IsMenuReady; // 0x1131
	bool IsTutorialBlocked; // 0x1132
	FTimerHandle BanTimer; // 0x1138
	UBP_BanManager_C* BP Ban Manager; // 0x1140
	FText VesionBuild; // 0x1148
	bool bIsEscapeBlocked; // 0x1160
};

struct UCreateSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct UVariantSet : UObject {
	FText DisplayText; // 0x28
	bool bExpanded; // 0x58
	TArray<UVariant*> Variants; // 0x60
	UTexture2D* Thumbnail; // 0x70
};

struct ABP_LevelInfo_C : AActor {
	USceneComponent* DefaultSceneRoot; // 0x220
	FString LevelName; // 0x228
};

struct UGizmoBoxComponent : UGizmoBaseComponent {
	FVector Origin; // 0x460
	FQuat Rotation; // 0x470
	FVector Dimensions; // 0x480
	float LineThickness; // 0x48c
	bool bRemoveHiddenLines; // 0x490
	bool bEnableAxisFlip; // 0x491
};

struct UGameUserSettings : UObject {
	bool bUseVSync; // 0x28
	bool bUseDynamicResolution; // 0x29
	uint32_t ResolutionSizeX; // 0x80
	uint32_t ResolutionSizeY; // 0x84
	uint32_t LastUserConfirmedResolutionSizeX; // 0x88
	uint32_t LastUserConfirmedResolutionSizeY; // 0x8c
	int32_t WindowPosX; // 0x90
	int32_t WindowPosY; // 0x94
	int32_t FullscreenMode; // 0x98
	int32_t LastConfirmedFullscreenMode; // 0x9c
	int32_t PreferredFullscreenMode; // 0xa0
	uint32_t Version; // 0xa4
	int32_t AudioQualityLevel; // 0xa8
	int32_t LastConfirmedAudioQualityLevel; // 0xac
	float FrameRateLimit; // 0xb0
	int32_t DesiredScreenWidth; // 0xb8
	bool bUseDesiredScreenHeight; // 0xbc
	int32_t DesiredScreenHeight; // 0xc0
	int32_t LastUserConfirmedDesiredScreenWidth; // 0xc4
	int32_t LastUserConfirmedDesiredScreenHeight; // 0xc8
	float LastRecommendedScreenWidth; // 0xcc
	float LastRecommendedScreenHeight; // 0xd0
	float LastCPUBenchmarkResult; // 0xd4
	float LastGPUBenchmarkResult; // 0xd8
	TArray<float> LastCPUBenchmarkSteps; // 0xe0
	TArray<float> LastGPUBenchmarkSteps; // 0xf0
	float LastGPUBenchmarkMultiplier; // 0x100
	bool bUseHDRDisplayOutput; // 0x104
	int32_t HDRDisplayOutputNits; // 0x108
	FMulticastInlineDelegate OnGameUserSettingsUINeedsUpdate; // 0x110
};

struct ULevelSequenceBurnInOptions : UObject {
	bool bUseBurnIn; // 0x28
	FSoftClassPath BurnInClass; // 0x30
	ULevelSequenceBurnInInitSettings* Settings; // 0x48
};

struct UVehicleWheel : UObject {
	UStaticMesh* CollisionMesh; // 0x28
	bool bDontCreateShape; // 0x30
	bool bAutoAdjustCollisionSize; // 0x31
	FVector Offset; // 0x34
	float ShapeRadius; // 0x40
	float ShapeWidth; // 0x44
	float Mass; // 0x48
	float DampingRate; // 0x4c
	float SteerAngle; // 0x50
	bool bAffectedByHandbrake; // 0x54
	UTireType* TireType; // 0x58
	UTireConfig* TireConfig; // 0x60
	float LatStiffMaxLoad; // 0x68
	float LatStiffValue; // 0x6c
	float LongStiffValue; // 0x70
	float SuspensionForceOffset; // 0x74
	float SuspensionMaxRaise; // 0x78
	float SuspensionMaxDrop; // 0x7c
	float SuspensionNaturalFrequency; // 0x80
	float SuspensionDampingRatio; // 0x84
	EWheelSweepType SweepType; // 0x88
	float MaxBrakeTorque; // 0x8c
	float MaxHandBrakeTorque; // 0x90
	UWheeledVehicleMovementComponent* VehicleSim; // 0x98
	int32_t WheelIndex; // 0xa0
	float DebugLongSlip; // 0xa4
	float DebugLatSlip; // 0xa8
	float DebugNormalizedTireLoad; // 0xac
	float DebugWheelTorque; // 0xb4
	float DebugLongForce; // 0xb8
	float DebugLatForce; // 0xbc
	FVector Location; // 0xc0
	FVector OldLocation; // 0xcc
	FVector Velocity; // 0xd8
};

struct UMaterialExpressionBreakMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput MaterialAttributes; // 0x40
};

struct UMouseSensivity_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_306; // 0x268
	UButton* Button_308; // 0x270
	UButton* Button_719; // 0x278
	UButton* Button_ChangeFOcus; // 0x280
	UButton* Button_Sensivity; // 0x288
	UButton* Button_X; // 0x290
	UButton* Button_Y; // 0x298
	UHorizontalBox* HorizontalBox_78; // 0x2a0
	UImage* Image_162; // 0x2a8
	UImage* Image_238; // 0x2b0
	UImage* Image_AxisX_BG; // 0x2b8
	UImage* Image_AxisY_BG; // 0x2c0
	UImage* Image_grayMSense; // 0x2c8
	UImage* Image_grayXAxis; // 0x2d0
	UImage* Image_grayYAxis; // 0x2d8
	UImage* Image_SensivityBG; // 0x2e0
	UCustomGraphicButton_C* InvertY; // 0x2e8
	USlider* MOUSeSENS; // 0x2f0
	UOverlay* Overlay_133; // 0x2f8
	UOverlay* Overlay_232; // 0x300
	UOverlay* Overlay_344; // 0x308
	UOverlay* Overlay_483; // 0x310
	UProgressBar* ProgressBar_MSens; // 0x318
	UProgressBar* ProgressBar_X_Axis; // 0x320
	UProgressBar* ProgressBar_Y_Axis; // 0x328
	USafeZone* SafeZone_68; // 0x330
	USlider* Slider_169; // 0x338
	UTextBlock* TextBlock; // 0x340
	UTextBlock* TextBlock_2; // 0x348
	UTextBlock* TextBlock_3; // 0x350
	UTextBlock* TextBlock_4; // 0x358
	UTextBlock* TextBlock_5; // 0x360
	UTextBlock* TextBlock_6; // 0x368
	UTextBlock* TextBlock_228; // 0x370
	UTextBlock* TextBlock_247; // 0x378
	USlider* X_AXIS; // 0x380
	USlider* Y_AXIS; // 0x388
	float Senivity; // 0x390
	AKillerMasterBP_C* KillerRef; // 0x398
	ASurvivorMasterBP_C* SurvRef; // 0x3a0
	USaveGame* NewVar_2; // 0x3a8
	bool WasHovered; // 0x3b0
	float XAxis; // 0x3b4
	float YAxis; // 0x3b8
	USlider* LastFocus; // 0x3c0
	bool MouseHere?; // 0x3c8
	UImage* SelectedImage; // 0x3d0
	USlider* HoveredSlider; // 0x3d8
	float Value; // 0x3e0
	int32_t InvertYIndex; // 0x3e4
	TArray<FText> InvertYText; // 0x3e8
	bool Invert Mouse Y?; // 0x3f8
	bool Defaults?; // 0x3f9
};

struct UParticleModuleSubUVMovie : UParticleModuleSubUV {
	char bUseEmitterTime : 1; // 0x70
	FRawDistributionFloat FrameRate; // 0x78
	int32_t StartingFrame; // 0xa8
};

struct UATPCCameraComponent : USceneComponent {
	FMulticastInlineDelegate OnCameraModeChangedDelegate; // 0x1f8
	FGameplayTag DefaultCameraModeTag; // 0x20c
	TArray<UATPCCameraModeDataAsset*> CameraModesAssets; // 0x218
	TMap<FGameplayTag, UATPCCameraModeDataAsset*> SortedCameraModes; // 0x228
	UATPCCameraModeDataAsset* CustomCameraMode; // 0x278
	bool bPrintErrorsToScreen; // 0x288
	UATPCCameraLocationObject* LocationObjectClass; // 0x290
	UATPCCameraFOVObject* FOVObjectClass; // 0x298
	UATPCCameraFadingObject* FadingObjectClass; // 0x2a0
	UATPCCameraFollowTerrainObject* FollowTerrainObjectClass; // 0x2a8
	UATPCCameraShakesObject* CameraShakesObjectClass; // 0x2b0
	UATPCCameraLockOnTargetObject* LockOnTargetObjectClass; // 0x2b8
	UATPCCameraLocationObject* LocationObject; // 0x2c0
	UATPCCameraFOVObject* FOVObject; // 0x2c8
	UATPCCameraFadingObject* FadingObject; // 0x2d0
	UATPCCameraFollowTerrainObject* FollowTerrainObject; // 0x2d8
	UATPCCameraShakesObject* CameraShakesObject; // 0x2e0
	UATPCCameraLockOnTargetObject* LockOnTargetObject; // 0x2e8
	TArray<UATPCCameraBaseObject*> CameraObjList; // 0x2f0
	UATPCCameraModeDataAsset* EmptyCameraMode; // 0x300
	FATPCCameraMode CameraModeDEV; // 0x308
};

struct URabbitAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x2f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x318
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x340
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x390
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x3b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x3e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x430
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x458
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x480
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x4a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x4d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x4f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x520
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x548
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x570
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x5c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x5e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x610
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x638
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x688
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x6b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x6d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x700
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x728
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x750
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x778
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x7a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x7c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x7f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x818
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x840
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x868
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x890
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x8b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x8e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x908
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0x9f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0xab0
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0xb30
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0xb60
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0xc48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0xd08
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0xd88
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0xdb8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0xea0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0xf60
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0xfe0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x1010
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x1090
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x10c0
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x1140
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x1170
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x11f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x1220
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x1308
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x13c8
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x1448
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x1478
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x14f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x1528
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x15a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x15d8
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x1658
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x16f8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x17e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x18a0
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1920
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x1950
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x1a18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x1a98
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x1b18
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x1b48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x1c10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x1c90
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x1d10
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x1d40
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x1dc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x1e88
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x1f08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x1f38
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x2020
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x20a0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x2120
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x21c0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x2260
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x2328
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x2410
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x2440
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive; // 0x24f0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x25b8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x26a0
	FAnimNode_Root AnimGraphNode_Root; // 0x2740
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x2770
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x2810
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x28b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x2930
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x29b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x2a50
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x2ad0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2b70
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x2bf0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x2cb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2d98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x2dc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x2de8
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x2e68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x2e98
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x2f18
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2f48
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x2fc8
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x2ff8
	int32_t KillerType; // 0x30a8
	bool Get Ready; // 0x30ac
	float IsHolded; // 0x30b0
	bool IsOnAir?; // 0x30b4
	bool PropHunt?; // 0x30b5
	float Speed; // 0x30b8
	float SpeedChek; // 0x30bc
	int32_t TypeAttack; // 0x30c0
	bool Attak; // 0x30c4
	float Direction; // 0x30c8
	bool JumpEndChek; // 0x30cc
	bool FIRE; // 0x30cd
	bool Plant; // 0x30ce
	bool Flashed; // 0x30cf
	bool Drop; // 0x30d0
	bool ChairDrop; // 0x30d1
	bool Catch; // 0x30d2
	bool Broke Anim; // 0x30d3
	bool MarioStun; // 0x30d4
	bool Runaway; // 0x30d5
	FRotator HeadR; // 0x30d8
	float Vertical rotation; // 0x30e4
	float HorizontalValue; // 0x30e8
	bool bTurnL; // 0x30ec
	bool bTurnR; // 0x30ed
	bool IsOwner?; // 0x30ee
	float SpeedRateF; // 0x30f0
	bool Charge; // 0x30f4
	bool Move!; // 0x30f5
	bool Charge Attack; // 0x30f6
	bool BAnim; // 0x30f7
	bool BChainsaw Terror; // 0x30f8
};

struct USurvivalInventorySlotWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* StopCD_Anim; // 0x268
	UWidgetAnimation* StartCD_Anim; // 0x270
	UWidgetAnimation* Spawn; // 0x278
	UTextBlock* Count; // 0x280
	UImage* ImageCD; // 0x288
	UImage* ItemIcon; // 0x290
	UProgressBar* ProgressBar_76; // 0x298
	UImage* RarityIcon; // 0x2a0
	UImage* Selected; // 0x2a8
	USizeBox* SizeBox_96; // 0x2b0
	USizeBox* SizeBox_97; // 0x2b8
	UTextBlock* TextCD; // 0x2c0
	int32_t Owner; // 0x2c8
	FString ItemName; // 0x2d0
	bool Visibility?; // 0x2e0
	UMaterialInstanceDynamic* Cooldown; // 0x2e8
	FLinearColor ColorHelper; // 0x2f0
	bool ItemSelect?; // 0x300
	bool IsCDStarted; // 0x301
	float CurrentTime; // 0x304
	FItemStructure Item; // 0x308
	float FillTime; // 0x338
};

struct USceneCaptureComponent : USceneComponent {
	ESceneCapturePrimitiveRenderMode PrimitiveRenderMode; // 0x1f8
	ESceneCaptureSource CaptureSource; // 0x1f9
	char bCaptureEveryFrame : 1; // 0x1fa
	char bCaptureOnMovement : 1; // 0x1fa
	bool bAlwaysPersistRenderingState; // 0x1fb
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenComponents; // 0x200
	TArray<AActor*> HiddenActors; // 0x210
	TArray<TWeakObjectPtr<UPrimitiveComponent>> ShowOnlyComponents; // 0x220
	TArray<AActor*> ShowOnlyActors; // 0x230
	float LODDistanceFactor; // 0x240
	float MaxViewDistanceOverride; // 0x244
	int32_t CaptureSortPriority; // 0x248
	bool bUseRayTracingIfEnabled; // 0x24c
	TArray<FEngineShowFlagsSetting> ShowFlagSettings; // 0x250
	FString ProfilingEventName; // 0x290
};

struct ABuggedActor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USphereComponent* Sphere; // 0x228
	USceneComponent* DefaultSceneRoot; // 0x230
	AKillerMasterBP_C* Killer; // 0x238
};

struct UBTDecorator_KeepInCone : UBTDecorator {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector Observed; // 0x98
	char bUseSelfAsOrigin : 1; // 0xc0
	char bUseSelfAsObserved : 1; // 0xc0
};

struct UParticleModuleVelocityOverLifetime : UParticleModuleVelocityBase {
	FRawDistributionVector VelOverLife; // 0x38
	char Absolute : 1; // 0x80
};

struct UTextureLODSettings : UObject {
	TArray<FTextureLODGroup> TextureLODGroups; // 0x28
};

struct UGizmoAxisScaleParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float ScaleMultiplier; // 0x68
	float Parameter; // 0x6c
	FGizmoFloatParameterChange LastChange; // 0x70
	FVector CurScaleAxis; // 0x78
	FVector CurScaleOrigin; // 0x84
	FTransform InitialTransform; // 0x90
};

struct UEnvQueryTest_Overlap : UEnvQueryTest {
	FEnvOverlapData OverlapData; // 0x1f8
};

struct AEndGamePlayerMesh_C : APawn {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UWidgetComponent* NicknameWidget; // 0x288
	UStaticMeshComponent* StaticMesh; // 0x290
	UNiagaraComponent* Niagara; // 0x298
	UParticleSystemComponent* ParticleSystem; // 0x2a0
	USkeletalMeshComponent* SkeletalMesh; // 0x2a8
	USceneComponent* DefaultSceneRoot; // 0x2b0
	EndGameStatus Status; // 0x2b8
	EndGameStatus SavedStatus; // 0x2b9
	bool ImSurv?; // 0x2ba
	UMaterialInstanceDynamic* SurvDynMat1; // 0x2c0
	UMaterialInstanceDynamic* SurvDynMat2; // 0x2c8
	UMaterialInstanceDynamic* SurvDynMat3; // 0x2d0
	float DeathEffectTime; // 0x2d8
	float DeathEffectDuration; // 0x2dc
	float Float1; // 0x2e0
	FTimerHandle DeathEffectTimer; // 0x2e8
	TArray<UMaterialInstanceDynamic*> SurvDynMaterials; // 0x2f0
	SurvChars Surv Char; // 0x300
	bool NiagaraForDoppel; // 0x301
	bool KnifeVis; // 0x302
	FString NicknameString; // 0x308
	ALobbyPlayerMesh_EndGameKiller_C* KillerMesh; // 0x318
	APlayerState* Player State; // 0x320
	FString SlotName; // 0x328
	FString SteamId; // 0x338
};

struct UDatasmithLandscapeTemplate : UDatasmithObjectTemplate {
	UMaterialInterface* LandscapeMaterial; // 0x30
	int32_t StaticLightingLOD; // 0x38
};

struct UUMGSequenceTickManager : UObject {
	TSet<TWeakObjectPtr<UUserWidget>> WeakUserWidgets; // 0x28
	UMovieSceneEntitySystemLinker* Linker; // 0x78
};

struct UWBP_LeaveTeamDialog_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Show_Anim; // 0x268
	UButton* Button_No; // 0x270
	UButton* Button_Yes; // 0x278
	UCanvasPanel* CanvasPanel_Root; // 0x280
	UImage* Image_BG; // 0x288
	UOverlay* Overlay_19; // 0x290
	UTextBlock* TextBlock_Yes; // 0x298
	FMulticastInlineDelegate OnLeaveLobby; // 0x2a0
};

struct UARGeoAnchorComponent : UARComponent {
	FARGeoAnchorUpdatePayload ReplicatedPayload; // 0x280
};

struct UEOSCoreLobbySearchFind : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct USubmixEffectFilterPreset : USoundEffectSubmixPreset {
	FSubmixEffectFilterSettings Settings; // 0x9c
};

struct UExporter : UObject {
	UObject* SupportedClass; // 0x28
	UObject* ExportRootScope; // 0x30
	TArray<FString> FormatExtension; // 0x38
	TArray<FString> FormatDescription; // 0x48
	int32_t PreferredFormatIndex; // 0x58
	int32_t TextIndent; // 0x5c
	char bText : 1; // 0x60
	char bSelectedOnly : 1; // 0x60
	char bForceFileOperations : 1; // 0x60
	UAssetExportTask* ExportTask; // 0x68
};

struct ASplineMeshActor : AActor {
	USplineMeshComponent* SplineMeshComponent; // 0x220
};

struct UEnvQueryGenerator_ActorsOfClass : UEnvQueryGenerator {
	AActor* SearchedActorClass; // 0x50
	FAIDataProviderBoolValue GenerateOnlyActorsInRadius; // 0x58
	FAIDataProviderFloatValue SearchRadius; // 0x90
	UEnvQueryContext* SearchCenter; // 0xc8
};

struct AItemsBPActual_Flashlight_C : AItemsBPHand_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x238
	USkeletalMeshComponent* SkeletalMesh; // 0x240
};

struct UWidgetSwitcherSlot : UPanelSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UAIDataProvider_Random : UAIDataProvider_QueryParams {
	float Min; // 0x40
	float Max; // 0x44
	char bInteger : 1; // 0x48
};

struct UVampireSpell2_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	float Charges; // 0xf0
	bool Cast?; // 0xf4
	float CastTime; // 0xf8
	bool Active?; // 0xfc
};

struct UMaterialFunctionInstance : UMaterialFunctionInterface {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xb0
};

struct UPawnAction : UObject {
	UPawnAction* ChildAction; // 0x28
	UPawnAction* ParentAction; // 0x30
	UPawnActionsComponent* OwnerComponent; // 0x38
	UObject* Instigator; // 0x40
	UBrainComponent* BrainComp; // 0x48
	char bAllowNewSameClassInstance : 1; // 0x80
	char bReplaceActiveSameClassInstance : 1; // 0x80
	char bShouldPauseMovement : 1; // 0x80
	char bAlwaysNotifyOnFinished : 1; // 0x80
};

struct UWmfMediaSettings : UObject {
	bool AllowNonStandardCodecs; // 0x28
	bool LowLatency; // 0x29
	bool NativeAudioOut; // 0x2a
	bool HardwareAcceleratedVideoDecoding; // 0x2b
};

struct UCountSurvStatus_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Reanimate; // 0x268
	UWidgetAnimation* hit; // 0x270
	UImage* BG_2; // 0x278
	UCanvasPanel* CanvasPanel_separator; // 0x280
	UProgressBar* HealthProgress_Additional; // 0x288
	UProgressBar* HealthProgress_Ally; // 0x290
	UProgressBar* HealthProgress_Ally_Additional; // 0x298
	UProgressBar* HealthProgress_blocked; // 0x2a0
	UProgressBar* HealthProgress_Default; // 0x2a8
	UTextBlock* HealthText; // 0x2b0
	UHitBlur_C* HitBlur_Additional; // 0x2b8
	UHitBlur_C* HitBlur_Ally; // 0x2c0
	UHitBlur_C* HitBlur_Default; // 0x2c8
	UHorizontalBox* HorizontalBox_4; // 0x2d0
	UHorizontalBox* HorizontalBox_5; // 0x2d8
	UImage* Image; // 0x2e0
	UImage* Image_2; // 0x2e8
	UImage* Image_3; // 0x2f0
	UImage* Image_4; // 0x2f8
	UImage* Image_6; // 0x300
	UImage* Image_14; // 0x308
	UImage* Image_97; // 0x310
	UImage* Image_163; // 0x318
	UImage* Image_175; // 0x320
	UImage* Image_226; // 0x328
	UImage* Image_230; // 0x330
	UImage* Image_553; // 0x338
	UImage* Image_3535; // 0x340
	UImage* Image_ActiveSelf; // 0x348
	UImage* Image_ActiveSelf_BG; // 0x350
	UImage* Image_Ally_Chair_Progress; // 0x358
	UImage* Image_Ally_Injured_Progress; // 0x360
	UImage* Image_AllyIndicator2; // 0x368
	UImage* Image_AllylIndicator1; // 0x370
	UImage* Image_ChairAlly; // 0x378
	UImage* Image_ChairAlly_BG; // 0x380
	UImage* Image_ChairSelf; // 0x388
	UImage* Image_ChairSelf_BG; // 0x390
	UImage* Image_DeadAlly; // 0x398
	UImage* Image_DeadAlly_BG; // 0x3a0
	UImage* Image_DeadSelf; // 0x3a8
	UImage* Image_DeadSelf_BG; // 0x3b0
	UImage* Image_DefaultIconAlly; // 0x3b8
	UImage* Image_DefaultIconAlly_BG; // 0x3c0
	UImage* Image_EscapedIconAlly; // 0x3c8
	UImage* Image_EscapedIconAlly_BG; // 0x3d0
	UImage* Image_FreeSelf; // 0x3d8
	UImage* Image_FreeSelf_BG; // 0x3e0
	UImage* Image_Green; // 0x3e8
	UImage* Image_Grey; // 0x3f0
	UImage* Image_HealthAlly; // 0x3f8
	UImage* Image_HealthAlly_BG; // 0x400
	UImage* Image_knockSelf; // 0x408
	UImage* Image_knockSelf_BG; // 0x410
	UImage* Image_Red; // 0x418
	UImage* Image_Red_Crawl_Chair; // 0x420
	UImage* Image_SeflIndicator_2; // 0x428
	UImage* Image_SeflIndicator_3; // 0x430
	UImage* Image_VoiceAlly; // 0x438
	UImage* Image_VoiceSelf; // 0x440
	UImage* Image_White_Alive; // 0x448
	UImage* Item1; // 0x450
	UImage* Item1_2; // 0x458
	UImage* Item2; // 0x460
	UImage* Item2_2; // 0x468
	UImage* Item3; // 0x470
	UImage* Item3_2; // 0x478
	UOverlay* Items; // 0x480
	UOverlay* Items_2; // 0x488
	UTextBlock* MaxHealthText; // 0x490
	UTextBlock* MiniStatusText_Time; // 0x498
	UTextBlock* MiniStatusText_Time_2; // 0x4a0
	UTextBlock* MiniStatusText_Time_3; // 0x4a8
	UTextBlock* MiniStatusText_Time_4; // 0x4b0
	UTextBlock* Nickname_Ally; // 0x4b8
	UTextBlock* Nickname_Ally_Hunter; // 0x4c0
	UTextBlock* Nickname_Self; // 0x4c8
	UProgressBar* ProgressBar_2; // 0x4d0
	UProgressBar* ProgressBar_AllyKnock; // 0x4d8
	UProgressBar* ProgressBar_AllyOnChair; // 0x4e0
	UProgressBar* ProgressBar_SelfReanimate; // 0x4e8
	UProgressBar* RedBlurHealthProgress_Additional; // 0x4f0
	UProgressBar* RedBlurHealthProgress_Ally; // 0x4f8
	UProgressBar* RedBlurHealthProgress_Default; // 0x500
	URetainerBox* RetainerBox; // 0x508
	URetainerBox* RetainerBox_98; // 0x510
	URetainerBox* RetainerBox_155; // 0x518
	URetainerBox* RetainerBox_303; // 0x520
	URetainerBox* RetainerBox_313; // 0x528
	URetainerBox* RetainerBox_413; // 0x530
	URetainerBox* RetainerBox_418; // 0x538
	URetainerBox* RetainerBox_463; // 0x540
	URetainerBox* RetainerBox_606; // 0x548
	URetainerBox* RetainerBox_Active; // 0x550
	UScaleBox* ScaleBox_Owner; // 0x558
	USizeBox* SizeBox_HealthBar_Ally; // 0x560
	USizeBox* SizeBox_HealthBar_Ally_Additional; // 0x568
	USizeBox* SizeBox_HelathBars; // 0x570
	USizeBox* SizeBox_HP; // 0x578
	USizeBox* SizeBox_HP_Additional; // 0x580
	UWidgetSwitcher* StatusSwitcherIcons; // 0x588
	UWidgetSwitcher* StatusSwitcherIcons_Ally; // 0x590
	UWidgetSwitcher* Switch_2; // 0x598
	UTextBlock* TextBlock_2; // 0x5a0
	UTextBlock* TextBlock_4; // 0x5a8
	UTextBlock* TextBlock_308; // 0x5b0
	UVerticalBox* VerticalBox_Chair_IndicatorAlly; // 0x5b8
	UWidgetSwitcher* WidgetSwitcher_795; // 0x5c0
	UWidgetSwitcher* WidgetSwitcher_Banned; // 0x5c8
	UWidgetSwitcher* WidgetSwitcher_BlockSelf?; // 0x5d0
	UWidgetSwitcher* WidgetSwitcher_ChairBlock?; // 0x5d8
	UWidgetSwitcher* WidgetSwitcher_Health; // 0x5e0
	UWidgetSwitcher* WidgetSwitcher_Ministatus; // 0x5e8
	UWidgetSwitcher* WidgetSwitcher_StatusCircle; // 0x5f0
	UWidgetSwitcher* WidgetSwitcher_StatusCircle_Ally; // 0x5f8
	FText textCount; // 0x600
	bool OnChair?; // 0x618
	bool Self?; // 0x619
	ASurvivorMasterBP_C* Surv; // 0x620
	int32_t PrevHealth; // 0x628
	bool Hitted?; // 0x62c
	float DeltaTime; // 0x630
	bool EndBlurEffect?; // 0x634
	int32_t ActualHealth; // 0x638
	float Speed; // 0x63c
	bool Escape?; // 0x640
	bool Block?; // 0x641
	int32_t PrevHealth_Ally; // 0x644
	int32_t ActualHealth_Ally; // 0x648
	bool It'sME?; // 0x64c
	int32_t TimeSelfReanimate; // 0x650
	int32_t TimeSelfOnChair; // 0x654
	int32_t TimeSelfOnChair_Banned; // 0x658
	FS_PlayerIconsSurv Out Row Self; // 0x660
	int32_t ControllerIND; // 0x6a0
	E_HealthBarType HealthBarType; // 0x6a4
	float Max Health Calculate Value; // 0x6a8
	float Max HP; // 0x6ac
	float MinRangeHP_Default; // 0x6b0
	float MaxRangeHP_Default; // 0x6b4
	float MinRangeHP_Additional; // 0x6b8
	float MaxRangeHP_Additional; // 0x6bc
	UMaterialInstanceDynamic* AllyInjuredMaterial; // 0x6c0
	UMaterialInstanceDynamic* AllyChairMaterial; // 0x6c8
	bool IsDead; // 0x6d0
	bool IsAnimating; // 0x6d1
	FTimerHandle AnimTimerHanle; // 0x6d8
	bool NeedStopAnim; // 0x6e0
	bool IsClientKiller; // 0x6e1
};

struct UGizmoUniformScaleParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float ScaleMultiplier; // 0x68
	FVector2D Parameter; // 0x6c
	FGizmoVec2ParameterChange LastChange; // 0x74
	FVector CurScaleOrigin; // 0x84
	FVector CurScaleNormal; // 0x90
	FVector CurScaleAxisX; // 0x9c
	FVector CurScaleAxisY; // 0xa8
	FTransform InitialTransform; // 0xc0
};

struct UEOSCoreLobbyCreateLobby : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct APaperSpriteActor : AActor {
	UPaperSpriteComponent* RenderComponent; // 0x220
};

struct UGrandmaAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0x2f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0x318
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x340
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x390
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x3b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x3e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x430
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0x458
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0x480
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0x4a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0x4d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0x4f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0x520
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0x548
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0x570
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0x598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0x5c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x5e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x610
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x638
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x688
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x6b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x6d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x700
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x728
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x750
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x778
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x7a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x7c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x7f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x818
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x840
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x868
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x890
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x8b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x8e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x908
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x930
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x958
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x980
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x9a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x9d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x9f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0xa20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0xa48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0xa70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0xa98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0xac0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0xae8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0xb10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0xb38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0xb60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0xb88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0xbb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0xbd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0xc00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0xc28
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0xc50
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0xcd0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_14; // 0xd00
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_10; // 0xde8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0xea8
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0xf28
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_13; // 0xf58
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_9; // 0x1040
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x1100
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x1180
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_12; // 0x11b0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_8; // 0x1298
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x1358
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x13d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x1408
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x1488
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x1508
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x15a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x15d8
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x1658
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x1688
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x1708
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x1738
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x17b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x17e8
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x1868
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x1898
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x1918
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_11; // 0x1948
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_7; // 0x1a30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x1af0
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x1b70
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x1ba0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_10; // 0x1c20
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_6; // 0x1d08
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x1dc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x1df8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_6; // 0x1e78
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x1f40
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1fc0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_5; // 0x1ff0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x20b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x2138
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x21b8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x21e8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x22b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x2330
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x23b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x23e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x24a8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x2590
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_5; // 0x2678
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x2738
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x2820
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x2850
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x28f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x2990
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x2a10
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x2a90
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x2b78
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x2c40
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x2d08
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x2df0
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0x2ed8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x2f98
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x3080
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x3140
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x3228
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x32e8
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x33d0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x3400
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x34b0
	FAnimNode_Root AnimGraphNode_Root; // 0x3550
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x3580
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x3600
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x3628
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x3650
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x36d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x3700
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x3780
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x37b0
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x3830
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x3860
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x3910
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x39b0
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x3b08
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x3b30
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x3bf0
	int32_t KillerType; // 0x3c18
	float IsHolded; // 0x3c1c
	bool IsOnAir?; // 0x3c20
	float Speed; // 0x3c24
	float SpeedChek; // 0x3c28
	bool Attak; // 0x3c2c
	float Direction; // 0x3c30
	bool JumpEndChek; // 0x3c34
	bool FIRE; // 0x3c35
	bool Plant; // 0x3c36
	bool Flashed; // 0x3c37
	bool Drop; // 0x3c38
	bool ChairDrop; // 0x3c39
	bool Catch; // 0x3c3a
	bool Runaway; // 0x3c3b
	FRotator HeadR; // 0x3c3c
	float Vertical rotation; // 0x3c48
	float HorizontalValue; // 0x3c4c
	bool bTurnL; // 0x3c50
	bool bTurnR; // 0x3c51
	bool KnifeIn; // 0x3c52
	bool IsOwner?; // 0x3c53
	bool KnifeSpawn; // 0x3c54
	bool AstralBuild; // 0x3c55
	int32_t TypeAttack; // 0x3c58
	bool MarioStun; // 0x3c5c
	bool Get Ready; // 0x3c5d
	bool PropHunt?; // 0x3c5e
	float SpeedRateF; // 0x3c60
	bool Broke Anim; // 0x3c64
};

struct UParticleModuleTrailSource : UParticleModuleTrailBase {
	ETrail2SourceMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	FRawDistributionFloat SourceStrength; // 0x40
	char bLockSourceStength : 1; // 0x70
	int32_t SourceOffsetCount; // 0x74
	TArray<FVector> SourceOffsetDefaults; // 0x78
	EParticleSourceSelectionMethod SelectionMethod; // 0x88
	char bInheritRotation : 1; // 0x8c
};

struct UBP_PC_MenuPlayfabCustomGames_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	UVaRestRequestJSON* VaRestRequest; // 0xb8
	FString ApiKey; // 0xc0
	FString ServerBuildID; // 0xd0
	UVaRestRequestJSON* VaRestCreateServerReq; // 0xe0
	FString Region; // 0xe8
	bool IsBusy; // 0xf8
	FString CS_Map; // 0x100
	FString CS_Name; // 0x110
	FString CS_Region; // 0x120
	E_RequestType NextRequestV2; // 0x130
	int32_t PageSize; // 0x134
	bool StopPoll; // 0x138
	FString CG_Port; // 0x140
	FString URL_BuildID; // 0x150
	FString URL_ListServers; // 0x160
	FString URL_CreateServer; // 0x170
	FString CG_Address; // 0x180
	E_RequestType CurrentRequest; // 0x190
	int32_t Errors; // 0x194
	FString SkipToken; // 0x198
	FString URL_Prod_BuildID; // 0x1a8
	FString URL_Prod_ListServers; // 0x1b8
	FString URL_Prod_CreateServer; // 0x1c8
	FString ApiKey_Prod; // 0x1d8
	FString URL_Prod_GetActualBuildNumber; // 0x1e8
	UVaRestRequestJSON* VaRestBuildNumberReq; // 0x1f8
	int32_t BuildNumberErrors; // 0x200
	FString CG_SessionId; // 0x208
	FString CG_Region; // 0x218
	FString URL_Prod_CheckTicket; // 0x228
	FString SteamTicket; // 0x238
	int32_t SteamTicketCounter; // 0x248
};

struct UW_VictoryScreen_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* NewVictoryAnimation; // 0x268
	UWidgetAnimation* Fade; // 0x270
	UHorizontalBox* HorizontalBox_46; // 0x278
	UImage* Image_102; // 0x280
	UImage* Image_114; // 0x288
	UImage* Image_254; // 0x290
	USizeBox* SizeBox_3; // 0x298
	FText DefeatText; // 0x2a0
	FText VictoryText; // 0x2b8
};

struct UEOSCoreTitleStorageQueryFile : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct ABulletBP_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UFMODAudioComponent* FmodAudio; // 0x228
	UPointLightComponent* PointLight; // 0x230
	UParticleSystemComponent* ParticleSystem; // 0x238
	UStaticMeshComponent* Cube; // 0x240
	USceneComponent* DefaultSceneRoot; // 0x248
	float ImpactFlashTime_NewTrack_0_16CAF47F417A4B2BA11A899404422494; // 0x250
	ETimelineDirection ImpactFlashTime__Direction_16CAF47F417A4B2BA11A899404422494; // 0x254
	UTimelineComponent* ImpactFlashTime; // 0x258
	bool Hited?; // 0x260
	AKillerMasterBP_C* KillerRef; // 0x268
	float Time; // 0x270
	UAudioComponent* SoundExplo; // 0x278
	FFMODEventInstance NewVar_1; // 0x280
	bool NewVar_2; // 0x288
	FLinearColor Color1; // 0x28c
	FLinearColor Color2; // 0x29c
	int32_t Damage; // 0x2ac
	float Radius; // 0x2b0
	FVector LinearVelocity; // 0x2b4
	bool v3b; // 0x2c0
	UParticleSystem* ImpactParticle; // 0x2c8
	float LightDefIntensity; // 0x2d0
};

struct ALootBox_Totems_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USphereComponent* Sphere; // 0x228
	UTextRenderComponent* TextRender; // 0x230
	UArrowComponent* Arrow; // 0x238
	UFMODAudioComponent* CurseSound; // 0x240
	UPointLightComponent* CurseLight; // 0x248
	UFMODAudioComponent* FMODAudio4; // 0x250
	UFMODAudioComponent* FMODAudio3; // 0x258
	UBoxComponent* InteractCollision; // 0x260
	UParticleSystemComponent* ParticleOpen; // 0x268
	UParticleSystemComponent* ParticleClosed; // 0x270
	USceneComponent* Scene1; // 0x278
	UPointLightComponent* PointLight; // 0x280
	UParticleSystemComponent* ParticleBase; // 0x288
	UFMODAudioComponent* FMODAudio2; // 0x290
	UFMODAudioComponent* FMODAudio1; // 0x298
	UFMODAudioComponent* FmodAudio; // 0x2a0
	UStaticMeshComponent* Cap; // 0x2a8
	USceneComponent* Scene; // 0x2b0
	UStaticMeshComponent* Lock; // 0x2b8
	UStaticMeshComponent* tongue; // 0x2c0
	UStaticMeshComponent* Box; // 0x2c8
	USceneComponent* DefaultSceneRoot; // 0x2d0
	float T_LightPulse_Intensity_FDAE247148A61669465908BE102DB5B9; // 0x2d8
	ETimelineDirection T_LightPulse__Direction_FDAE247148A61669465908BE102DB5B9; // 0x2dc
	UTimelineComponent* T_LightPulse; // 0x2e0
	float T_InsideShine_Intensity_B318E2E24D3F5812EA6F75B10D59070F; // 0x2e8
	ETimelineDirection T_InsideShine__Direction_B318E2E24D3F5812EA6F75B10D59070F; // 0x2ec
	UTimelineComponent* T_InsideShine; // 0x2f0
	float T_OpenLootbox_OpenCap_383669F64A375D9D3F478AB6EA717C80; // 0x2f8
	float T_OpenLootbox_OpenTongue_383669F64A375D9D3F478AB6EA717C80; // 0x2fc
	ETimelineDirection T_OpenLootbox__Direction_383669F64A375D9D3F478AB6EA717C80; // 0x300
	UTimelineComponent* T_OpenLootbox; // 0x308
	float T_CloseLootbox_CloseTongue_1CEA720B45830E78B1B9ADB7C5AD4184; // 0x310
	float T_CloseLootbox_CloseCap_1CEA720B45830E78B1B9ADB7C5AD4184; // 0x314
	ETimelineDirection T_CloseLootbox__Direction_1CEA720B45830E78B1B9ADB7C5AD4184; // 0x318
	UTimelineComponent* T_CloseLootbox; // 0x320
	float T_NotEnoughMoney_LockValue_A94628944CABA0FB20D1859EECEFB4F3; // 0x328
	ETimelineDirection T_NotEnoughMoney__Direction_A94628944CABA0FB20D1859EECEFB4F3; // 0x32c
	UTimelineComponent* T_NotEnoughMoney; // 0x330
	bool bLocked; // 0x338
	int32_t NeedPoints; // 0x33c
	TArray<FName> ItemsName; // 0x340
	TArray<float> ItemsChance; // 0x350
	TArray<FName> RarityName; // 0x360
	TArray<float> RarityChance; // 0x370
	FName GetItemName; // 0x380
	FName DroppedItem; // 0x388
	int32_t TempInt; // 0x390
	AActor* SpawnedItem; // 0x398
	bool ItemSpawned?; // 0x3a0
	int32_t FirstIndex; // 0x3a4
	int32_t SecondIndex; // 0x3a8
	float Random; // 0x3ac
	FName GetRarityName; // 0x3b0
	ASurvivorMasterBP_C* SurvRef; // 0x3b8
	bool Chek; // 0x3c0
	UMaterialInstanceDynamic* InsideDynMat; // 0x3c8
	UMaterialInstanceDynamic* LootDynMat; // 0x3d0
	TArray<bool> ItemAccessDenied; // 0x3d8
	TArray<int32_t> ItemsAmount; // 0x3e8
	TArray<int32_t> ItemsAmountDropped; // 0x3f8
	bool Cursed; // 0x408
	bool Opened?; // 0x409
	int32_t OpenCount; // 0x40c
	int32_t CloseCount; // 0x410
	UDataTable* Data Table; // 0x418
	UDataTable* Data Table Medkit; // 0x420
	UDataTable* Data Table CommonItems; // 0x428
	float ZLocalMin; // 0x430
	float ZLocal; // 0x434
	TArray<float> r3; // 0x438
	int32_t I; // 0x448
	ASurvivorMasterBP_C* SREF; // 0x450
	int32_t CountCoins; // 0x458
	FText C; // 0x460
	bool IncreaseRare; // 0x478
	bool PerkBlock?; // 0x479
	bool NotFoundItem?; // 0x47a
};

struct UBTDecorator_BlackboardBase : UBTDecorator {
	FBlackboardKeySelector BlackboardKey; // 0x68
};

struct UVampire_apos_Skeleton_AnimBlueprint_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_10; // 0x2c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_9; // 0x368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x430
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x458
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x480
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x4a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x4d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x4f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x520
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x548
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x570
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x5c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x5e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x610
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x638
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x688
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x6b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_10; // 0x6d8
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x7c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x7f0
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x870
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x8a0
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x920
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x950
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x9d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0xa00
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0xa80
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0xab0
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0xb30
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0xb60
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0xbe0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0xc10
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0xc90
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0xd58
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0xdd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0xe08
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0xe88
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0xf50
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0xfd0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x1000
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x1080
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x1148
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x11c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x11f8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x12e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x13c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x1448
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x14c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_8; // 0x1590
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_7; // 0x1630
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x16d0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x1700
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x17b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1898
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x1918
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_6; // 0x1998
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt_2; // 0x1a38
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x1ad8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x1bc0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x1ca8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_4; // 0x1d90
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_5; // 0x1e50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x1ef0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x1f70
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x2058
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x2118
	FAnimNode_BlendListByInt AnimGraphNode_BlendListByInt; // 0x21b8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x2258
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x2340
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2428
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x2450
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x2478
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x24f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2528
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x25a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x25d8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x2658
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x2688
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x2738
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x2890
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x2950
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x2978
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x29a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x2a40
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x2ac0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x2b60
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive_2; // 0x2c00
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x2cc8
	FAnimNode_Root AnimGraphNode_Root; // 0x2d88
	FAnimNode_ApplyAdditive AnimGraphNode_ApplyAdditive; // 0x2db8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2e80
	bool Get Ready; // 0x2f00
	float IsHolded; // 0x2f04
	bool IsOnAir?; // 0x2f08
	bool PropHunt?; // 0x2f09
	float Speed; // 0x2f0c
	float SpeedChek; // 0x2f10
	int32_t TypeAttack; // 0x2f14
	bool Attak; // 0x2f18
	float Direction; // 0x2f1c
	bool JumpEndChek; // 0x2f20
	bool FIRE; // 0x2f21
	bool Plant; // 0x2f22
	bool Flashed; // 0x2f23
	bool Drop; // 0x2f24
	bool ChairDrop; // 0x2f25
	bool Catch; // 0x2f26
	bool Broke Anim; // 0x2f27
	bool MarioStun; // 0x2f28
	bool Runaway; // 0x2f29
	FRotator HeadR; // 0x2f2c
	float Vertical rotation; // 0x2f38
	float HorizontalValue; // 0x2f3c
	bool bTurnL; // 0x2f40
	bool bTurnR; // 0x2f41
	bool Alt Attack?; // 0x2f42
	int32_t KillerType; // 0x2f44
	bool Active Spell 1?; // 0x2f48
	bool IsOwner?; // 0x2f49
	bool vs3; // 0x2f4a
	bool head; // 0x2f4b
};

struct UARPlaneGeometry : UARTrackedGeometry {
	EARPlaneOrientation Orientation; // 0xf8
	FVector Center; // 0xfc
	FVector Extent; // 0x108
	TArray<FVector> BoundaryPolygon; // 0x118
	UARPlaneGeometry* SubsumedBy; // 0x128
};

struct ADatasmithImportedSequencesActor : AActor {
	TArray<ULevelSequence*> ImportedSequences; // 0x220
};

struct UGizmoComponentAxisSource : UObject {
	USceneComponent* Component; // 0x30
	int32_t AxisIndex; // 0x38
	bool bLocalAxes; // 0x3c
};

struct ULightmappedSurfaceCollection : UObject {
	UModel* SourceModel; // 0x28
	TArray<int32_t> Surfaces; // 0x30
};

struct UEOSCorePlayerDataStorageReadFile : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct AInteractiveFoliageActor : AStaticMeshActor {
	UCapsuleComponent* CapsuleComponent; // 0x230
	FVector TouchingActorEntryPosition; // 0x238
	FVector FoliageVelocity; // 0x244
	FVector FoliageForce; // 0x250
	FVector FoliagePosition; // 0x25c
	float FoliageDamageImpulseScale; // 0x268
	float FoliageTouchImpulseScale; // 0x26c
	float FoliageStiffness; // 0x270
	float FoliageStiffnessQuadratic; // 0x274
	float FoliageDamping; // 0x278
	float MaxDamageImpulse; // 0x27c
	float MaxTouchImpulse; // 0x280
	float MaxForce; // 0x284
	float Mass; // 0x288
};

struct UUniformVector : UFieldNodeVector {
	float Magnitude; // 0xb0
	FVector Direction; // 0xb4
};

struct ACoinSpawner_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USceneComponent* DefaultSceneRoot; // 0x228
};

struct ULevelSequenceAnimSequenceLink : UAssetUserData {
	TArray<FLevelSequenceAnimSequenceLinkItem> AnimSequenceLinks; // 0x28
};

struct UNavigationQueryFilter : UObject {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct UW_BrowserCreateServer_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ImageToThobber_Anim; // 0x268
	UWidgetAnimation* Throbber_Anim; // 0x270
	UWidgetAnimation* ChangeSwitcher_Anim; // 0x278
	UImage* BG_2; // 0x280
	UImage* BG_3; // 0x288
	UImage* BG_4; // 0x290
	UImage* BG_5; // 0x298
	UButton* Button_6; // 0x2a0
	UButton* Button_7; // 0x2a8
	UButton* Button_12; // 0x2b0
	UButton* Button_13; // 0x2b8
	UButton* Button_14; // 0x2c0
	UButton* Button_15; // 0x2c8
	UButton* Button_16; // 0x2d0
	UButton* Button_17; // 0x2d8
	UButton* Button_18; // 0x2e0
	UButton* Button_98; // 0x2e8
	UButton* Button_StartGame; // 0x2f0
	UCircularThrobber* CircularThrobber; // 0x2f8
	UCircularThrobber* CircularThrobber_2; // 0x300
	UCircularThrobber* CircularThrobber_3; // 0x308
	UComboBoxString* ComboBoxString; // 0x310
	UComboBoxString* ComboBoxString_2; // 0x318
	UComboBoxString* ComboBoxString_89; // 0x320
	UImage* Image_20; // 0x328
	UImage* Image_21; // 0x330
	UImage* Image_22; // 0x338
	UImage* Image_23; // 0x340
	UImage* Image_24; // 0x348
	UImage* Image_25; // 0x350
	UImage* Image_26; // 0x358
	UImage* Image_31; // 0x360
	UImage* Image_32; // 0x368
	UImage* Image_33; // 0x370
	UImage* Image_34; // 0x378
	UImage* Image_35; // 0x380
	UImage* Image_36; // 0x388
	UImage* Image_38; // 0x390
	UImage* Image_39; // 0x398
	UImage* Image_40; // 0x3a0
	UImage* Image_41; // 0x3a8
	UImage* Image_42; // 0x3b0
	UImage* Image_43; // 0x3b8
	UImage* Image_160; // 0x3c0
	UImage* Image_188; // 0x3c8
	UImage* Image_402; // 0x3d0
	UImage* Image_535; // 0x3d8
	UImage* Image_651; // 0x3e0
	UImage* Image_Button_2; // 0x3e8
	UImage* Image_Button_3; // 0x3f0
	UImage* Image_Button_4; // 0x3f8
	UImage* Image_CG_Icon; // 0x400
	UImage* Image_MapPreviewImg; // 0x408
	UImage* Image_Ref; // 0x410
	UImage* Image_Throbber; // 0x418
	USafeZone* SafeZone_2; // 0x420
	USafeZone* SafeZone_5; // 0x428
	USafeZone* SafeZone_110; // 0x430
	USizeBox* SizeBox_8; // 0x438
	USizeBox* SizeBox_Update; // 0x440
	UTextBlock* TextBlock; // 0x448
	UTextBlock* TextBlock_4; // 0x450
	UTextBlock* TextBlock_15; // 0x458
	UTextBlock* TextBlock_244; // 0x460
	UTextBlock* TextBlock_GameMode; // 0x468
	UTextBlock* TextBlock_MapSelect; // 0x470
	UTextBlock* TextBlock_ServerType; // 0x478
	UComboBoxString* VisibilityBox; // 0x480
	UWBP_CustomComboBox_C* WBP_CustomComboBox; // 0x488
	UWBP_CustomComboBox_C* WBP_CustomComboBox_Map; // 0x490
	UWBP_CustomComboBox_C* WBP_CustomComboBox_ServerType; // 0x498
	UWidgetSwitcher* WidgetSwitcher_3; // 0x4a0
	UWidgetSwitcher* WidgetSwitcher_4; // 0x4a8
	UWidgetSwitcher* WidgetSwitcher_5; // 0x4b0
	UWidgetSwitcher* WidgetSwitcher_6; // 0x4b8
	UWidgetSwitcher* WidgetSwitcher_7; // 0x4c0
	UWidgetSwitcher* WidgetSwitcher_8; // 0x4c8
	UWidgetSwitcher* WidgetSwitcher_9; // 0x4d0
	int32_t Index; // 0x4d8
	FButtonStyle In Style; // 0x4e0
	FButtonStyle In Style_D; // 0x758
	FText ClearText; // 0x9d0
	bool HoverSrvType?; // 0x9e8
	bool HoverGameMode?; // 0x9e9
	bool HoverMapSelect?; // 0x9ea
	Uw_ServerBrowser_C* ServerBrowser; // 0x9f0
	TMap<FString, UPaperSprite*> MapPreviews; // 0x9f8
	TArray<FString> MapList; // 0xa48
	TArray<UPaperSprite*> MapPreviews_1; // 0xa58
	bool IsStartGameHovered; // 0xa68
	FButtonStyle StartGame_DefaultStyle; // 0xa70
};

struct UParticleModuleRotation : UParticleModuleRotationBase {
	FRawDistributionFloat StartRotation; // 0x30
};

struct UMaterialExpressionComponentMask : UMaterialExpression {
	FExpressionInput Input; // 0x40
	char R : 1; // 0x54
	char G : 1; // 0x54
	char B : 1; // 0x54
	char A : 1; // 0x54
};

struct UW_MatchCanceled_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Image; // 0x268
	UImage* Image_98; // 0x270
	UImage* Image_396C_2; // 0x278
	UImage* Image_494C_2; // 0x280
	UButton* QuitButton; // 0x288
	UOverlay* QuitOverlay; // 0x290
	UTextBlock* QuitText; // 0x298
	UTextBlock* QuitText_2; // 0x2a0
	USizeBox* SizeBox_ct_2; // 0x2a8
	UWidgetSwitcher* WidgetSwitcher_1; // 0x2b0
	UWidgetSwitcher* WidgetSwitcher_2; // 0x2b8
};

struct UDatasmithImportOptions : UDatasmithOptionsBase {
	EDatasmithImportSearchPackagePolicy SearchPackagePolicy; // 0x28
	EDatasmithImportAssetConflictPolicy MaterialConflictPolicy; // 0x29
	EDatasmithImportAssetConflictPolicy TextureConflictPolicy; // 0x2a
	EDatasmithImportActorPolicy StaticMeshActorImportPolicy; // 0x2b
	EDatasmithImportActorPolicy LightImportPolicy; // 0x2c
	EDatasmithImportActorPolicy CameraImportPolicy; // 0x2d
	EDatasmithImportActorPolicy OtherActorImportPolicy; // 0x2e
	EDatasmithImportMaterialQuality MaterialQuality; // 0x2f
	FDatasmithImportBaseOptions BaseOptions; // 0x34
	FDatasmithReimportOptions ReimportOptions; // 0x48
	FString Filename; // 0x50
	FString FilePath; // 0x60
};

struct UMaterialExpressionBlendMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput A; // 0x40
	FMaterialAttributesInput B; // 0x58
	FExpressionInput Alpha; // 0x70
	EMaterialAttributeBlend PixelAttributeBlendType; // 0x84
	EMaterialAttributeBlend VertexAttributeBlendType; // 0x85
};

struct UPaperFlipbook : UObject {
	float FramesPerSecond; // 0x28
	TArray<FPaperFlipbookKeyFrame> KeyFrames; // 0x30
	UMaterialInterface* DefaultMaterial; // 0x40
	EFlipbookCollisionMode CollisionSource; // 0x48
};

struct UDialogueVoice : UObject {
	EGrammaticalGender Gender; // 0x28
	EGrammaticalNumber Plurality; // 0x29
	FGuid LocalizationGUID; // 0x2c
};

struct UEdGraph : UObject {
	UEdGraphSchema* Schema; // 0x28
	TArray<UEdGraphNode*> Nodes; // 0x30
	char bEditable : 1; // 0x40
	char bAllowDeletion : 1; // 0x40
	char bAllowRenaming : 1; // 0x40
};

struct ATriggerTeleportPrototypeLevel_C : ATriggerBox {
	FPointerToUberGraphFrame UberGraphFrame; // 0x228
	bool Tutorial?; // 0x230
	APlayerStart* StartSpawn; // 0x238
	bool Block; // 0x240
};

struct UGizmoComponentWorldTransformSource : UGizmoBaseTransformSource {
	USceneComponent* Component; // 0x48
	bool bModifyComponentOnTransform; // 0x50
};

struct UMaterialExpressionQualitySwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x4]; // 0x54
};

struct UBodySetupCore : UObject {
	FName BoneName; // 0x28
	EPhysicsType PhysicsType; // 0x30
	ECollisionTraceFlag CollisionTraceFlag; // 0x31
	EBodyCollisionResponse CollisionReponse; // 0x32
};

struct UCineCameraComponent : UCameraComponent {
	FCameraFilmbackSettings FilmbackSettings; // 0x7c0
	FCameraFilmbackSettings Filmback; // 0x7cc
	FCameraLensSettings LensSettings; // 0x7d8
	FCameraFocusSettings FocusSettings; // 0x7f0
	float CurrentFocalLength; // 0x848
	float CurrentAperture; // 0x84c
	float CurrentFocusDistance; // 0x850
	TArray<FNamedFilmbackPreset> FilmbackPresets; // 0x860
	TArray<FNamedLensPreset> LensPresets; // 0x870
	FString DefaultFilmbackPresetName; // 0x880
	FString DefaultFilmbackPreset; // 0x890
	FString DefaultLensPresetName; // 0x8a0
	float DefaultLensFocalLength; // 0x8b0
	float DefaultLensFStop; // 0x8b4
};

struct UChaseShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UEOSCoreSettings : UDeveloperSettings {
	FString DefaultConfigurationName; // 0x38
	int32_t TickBudgetInMilliseconds; // 0x48
	FString IOSClientId; // 0x50
	FString AndroidClientId; // 0x60
	TArray<FEOSConfig> EOSConfigurations; // 0x70
};

struct AProceduralFoliageVolume : AVolume {
	UProceduralFoliageComponent* ProceduralComponent; // 0x258
};

struct UEOSCoreSessionsDestroySession : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UDatasmithFBXSceneImportData : UDatasmithSceneImportData {
	bool bGenerateLightmapUVs; // 0x28
	FString TexturesDir; // 0x30
	char IntermediateSerialization; // 0x40
	bool bColorizeMaterials; // 0x41
};

struct UParticleModuleEventReceiverSpawn : UParticleModuleEventReceiverBase {
	FRawDistributionFloat SpawnCount; // 0x40
	char bUseParticleTime : 1; // 0x70
	char bUsePSysLocation : 1; // 0x70
	char bInheritVelocity : 1; // 0x70
	FRawDistributionVector InheritVelocityScale; // 0x78
	TArray<UPhysicalMaterial*> PhysicalMaterials; // 0xc0
	char bBanPhysicalMaterials : 1; // 0xd0
};

struct UParticleModuleOrbit : UParticleModuleOrbitBase {
	EOrbitChainMode ChainMode; // 0x38
	FRawDistributionVector OffsetAmount; // 0x40
	FOrbitOptions OffsetOptions; // 0x88
	FRawDistributionVector RotationAmount; // 0x90
	FOrbitOptions RotationOptions; // 0xd8
	FRawDistributionVector RotationRateAmount; // 0xe0
	FOrbitOptions RotationRateOptions; // 0x128
};

struct UAIPerceptionStimuliSourceComponent : UActorComponent {
	char bAutoRegisterAsSource : 1; // 0xb0
	TArray<UAISense*> RegisterAsSourceForSenses; // 0xb8
};

struct UWB_BindOverlayHeader_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* ButtonReFocuser; // 0x268
	UOverlay* Changer; // 0x270
	UImage* Image_83; // 0x278
	USafeZone* SafeZone_71; // 0x280
	USizeBox* SizeBox_Main; // 0x288
	UTextBlock* TextBlock_SomeTEXT; // 0x290
	bool bIsSelected; // 0x298
	FMulticastInlineDelegate EventDispatcher_LeftBtn; // 0x2a0
	FMulticastInlineDelegate EventDispatcher_RightBtn; // 0x2b0
	FMulticastInlineDelegate OnPressed; // 0x2c0
	FText InputName; // 0x2d0
};

struct UGeometryCacheTrackStreamable : UGeometryCacheTrack {
	UGeometryCacheCodecBase* Codec; // 0x58
	float StartSampleTime; // 0xc8
};

struct UInFocus_C : UPerkKiller_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x120
};

struct UBuildPatchManifest : UObject {
	char ManifestFileVersion; // 0x28
	bool bIsFileData; // 0x29
	uint32_t AppId; // 0x2c
	FString AppName; // 0x30
	FString BuildVersion; // 0x40
	FString LaunchExe; // 0x50
	FString LaunchCommand; // 0x60
	TSet<FString> PrereqIds; // 0x70
	FString PrereqName; // 0xc0
	FString PrereqPath; // 0xd0
	FString PrereqArgs; // 0xe0
	TArray<FFileManifestData> FileManifestList; // 0xf0
	TArray<FChunkInfoData> ChunkList; // 0x100
	TArray<FCustomFieldData> CustomFields; // 0x110
};

struct UPlayerNickName_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UTextBlock* NicknameWidget; // 0x268
	bool On; // 0x270
	float Time; // 0x274
	bool End; // 0x278
};

struct UNetAnalyticsAggregatorConfig : UObject {
	TArray<FNetAnalyticsDataConfig> NetAnalyticsData; // 0x28
};

struct UAudioCaptureComponent : USynthComponent {
	int32_t JitterLatencyFrames; // 0x6c0
};

struct UMatineeCameraShake : UCameraShakeBase {
	float OscillationDuration; // 0x98
	float OscillationBlendInTime; // 0x9c
	float OscillationBlendOutTime; // 0xa0
	FROscillator RotOscillation; // 0xa4
	FVOscillator LocOscillation; // 0xc8
	FFOscillator FOVOscillation; // 0xec
	float AnimPlayRate; // 0xf8
	float AnimScale; // 0xfc
	float AnimBlendInTime; // 0x100
	float AnimBlendOutTime; // 0x104
	float RandomAnimSegmentDuration; // 0x108
	UCameraAnim* Anim; // 0x110
	char bRandomAnimSegment : 1; // 0x118
	float OscillatorTimeRemaining; // 0x11c
	UCameraAnimInst* AnimInst; // 0x120
};

struct UParticleModuleLocationDirect : UParticleModuleLocationBase {
	FRawDistributionVector Location; // 0x30
	FRawDistributionVector LocationOffset; // 0x78
	FRawDistributionVector ScaleFactor; // 0xc0
	FRawDistributionVector Direction; // 0x108
};

struct ANavModifierVolume : AVolume {
	UNavArea* AreaClass; // 0x260
	bool bMaskFillCollisionUnderneathForNavmesh; // 0x268
};

struct UMagicLeapSettings : UObject {
	bool bEnableZI; // 0x28
	bool bUseVulkanForZI; // 0x29
	bool bUseMLAudioForZI; // 0x2a
};

struct UMaterialExpressionFontSample : UMaterialExpression {
	UFont* Font; // 0x40
	int32_t FontTexturePage; // 0x48
};

struct UForceFeedbackComponent : USceneComponent {
	UForceFeedbackEffect* ForceFeedbackEffect; // 0x1f8
	char bAutoDestroy : 1; // 0x200
	char bStopWhenOwnerDestroyed : 1; // 0x200
	char bLooping : 1; // 0x200
	char bIgnoreTimeDilation : 1; // 0x200
	char bOverrideAttenuation : 1; // 0x200
	float IntensityMultiplier; // 0x204
	UForceFeedbackAttenuation* AttenuationSettings; // 0x208
	FForceFeedbackAttenuationSettings AttenuationOverrides; // 0x210
	FMulticastInlineDelegate OnForceFeedbackFinished; // 0x2c0
};

struct UW_PlayScreen_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ChangeSwitcherWidget_Anim; // 0x268
	UImage* Image_Ref_2; // 0x270
	UImage* Image_Ref_3; // 0x278
	UW_Path_C* W_Path; // 0x280
	UW_PlayCard_C* W_PlayCard_CustomGame; // 0x288
	UW_PlayCard_C* W_PlayCard_QuickPlay; // 0x290
	Uw_ServerBrowser_C* w_ServerBrowser; // 0x298
	UWidgetSwitcher* WidgetSwitcher_189; // 0x2a0
	bool IsAnimPlaying; // 0x2a8
	bool IsButtonsUnpressible; // 0x2a9
	int32_t C_PLAY_SCREEN_PAGE; // 0x2ac
	int32_t C_SERVER_BROWSER_PAGE; // 0x2b0
	UW_PlayCard_C* FocusedCard; // 0x2b8
};

struct UDoppelJumpShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
	FVOscillator ShakeLoc; // 0x1ac
};

struct UBansheeJumpShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
	FVOscillator ShakeLoc; // 0x1ac
};

struct UEOSCoreLobbyJoinLobby : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UWBP_KeyIcon_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UBorder* BorderBG; // 0x268
	UBorder* KeyBorder; // 0x270
	UImage* KeyImage; // 0x278
	UTextBlock* KeyText; // 0x280
	UScaleBox* KeyTextScaleBox; // 0x288
	FName ActionName; // 0x290
	bool HideBorder; // 0x298
	bool HideBorderWhenImageUsing; // 0x299
	BorderType_emum BorderType; // 0x29a
	int32_t XSize; // 0x29c
	int32_t YSize; // 0x2a0
	FLinearColor Frame Color; // 0x2a4
	FLinearColor Content Color; // 0x2b4
	FMargin TextPaddingPercent; // 0x2c4
	FMargin ImagePaddingPercent; // 0x2d4
	FLinearColor BGColor; // 0x2e4
};

struct UEditableGeometryCollectionAdapter : UEditableMeshAdapter {
	UGeometryCollection* GeometryCollection; // 0x28
	UGeometryCollection* OriginalGeometryCollection; // 0x30
	int32_t GeometryCollectionLODIndex; // 0x38
};

struct UTexture2DDynamic : UTexture {
	EPixelFormat Format; // 0xe0
};

struct UMaterialExpressionMaterialAttributeLayers : UMaterialExpression {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
	FMaterialAttributesInput Input; // 0x58
	FMaterialLayersFunctions DefaultLayers; // 0x70
	TArray<UMaterialExpressionMaterialFunctionCall*> LayerCallers; // 0xb0
	int32_t NumActiveLayerCallers; // 0xc0
	TArray<UMaterialExpressionMaterialFunctionCall*> BlendCallers; // 0xc8
	int32_t NumActiveBlendCallers; // 0xd8
	bool bIsLayerGraphBuilt; // 0xdc
};

struct UBehaviorTree : UObject {
	UBTCompositeNode* RootNode; // 0x30
	UBlackboardData* BlackboardAsset; // 0x38
	TArray<UBTDecorator*> RootDecorators; // 0x40
	TArray<FBTDecoratorLogic> RootDecoratorOps; // 0x50
};

struct UCircularThrobber : UWidget {
	int32_t NumberOfPieces; // 0x108
	float Period; // 0x10c
	float Radius; // 0x110
	USlateBrushAsset* PieceImage; // 0x118
	FSlateBrush Image; // 0x120
	bool bEnableRadius; // 0x1a8
};

struct USkeleton : UObject {
	TArray<FBoneNode> BoneTree; // 0x38
	TArray<FTransform> RefLocalPoses; // 0x48
	FGuid VirtualBoneGuid; // 0x170
	TArray<FVirtualBone> VirtualBones; // 0x180
	TArray<USkeletalMeshSocket*> Sockets; // 0x190
	FSmartNameContainer SmartNames; // 0x1f0
	TArray<UBlendProfile*> BlendProfiles; // 0x270
	TArray<FAnimSlotGroup> SlotGroups; // 0x280
	TArray<UAssetUserData*> AssetUserData; // 0x358
};

struct UInterpTrackInstColorProp : UInterpTrackInstProperty {
	FColor ResetColor; // 0x58
};

struct UGameplayTaskResource : UObject {
	int32_t ManualResourceID; // 0x28
	int8_t AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UPawnSensingComponent : UActorComponent {
	float HearingThreshold; // 0xb0
	float LOSHearingThreshold; // 0xb4
	float SightRadius; // 0xb8
	float SensingInterval; // 0xbc
	float HearingMaxSoundAge; // 0xc0
	char bEnableSensingUpdates : 1; // 0xc4
	char bOnlySensePlayers : 1; // 0xc4
	char bSeePawns : 1; // 0xc4
	char bHearNoises : 1; // 0xc4
	FMulticastInlineDelegate OnSeePawn; // 0xd0
	FMulticastInlineDelegate OnHearNoise; // 0xe0
	float PeripheralVisionAngle; // 0xf0
	float PeripheralVisionCosine; // 0xf4
};

struct UFindSessionsCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct AArchVisCharacter : ACharacter {
	FString LookUpAxisName; // 0x4b8
	FString LookUpAtRateAxisName; // 0x4c8
	FString TurnAxisName; // 0x4d8
	FString TurnAtRateAxisName; // 0x4e8
	FString MoveForwardAxisName; // 0x4f8
	FString MoveRightAxisName; // 0x508
	float MouseSensitivityScale_Pitch; // 0x518
	float MouseSensitivityScale_Yaw; // 0x51c
};

struct UW_LoadingTutorial_C : UUserWidget {
	UW_Lobby_WaitPlayers_C* W_Lobby_WaitPlayers; // 0x260
};

struct UMaterialExpressionArctangent2Fast : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct UPlayFabProfilesAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xf8
	UPlayFabJsonObject* RequestJsonObj; // 0x100
	UPlayFabJsonObject* ResponseJsonObj; // 0x108
};

struct UFMODSettings : UObject {
	bool bLoadAllBanks; // 0x28
	bool bLoadAllSampleData; // 0x29
	bool bEnableLiveUpdate; // 0x2a
	bool bEnableEditorLiveUpdate; // 0x2b
	FDirectoryPath BankOutputDirectory; // 0x30
	EFMODSpeakerMode OutputFormat; // 0x40
	TArray<FFMODProjectLocale> Locales; // 0x48
	bool bVol0Virtual; // 0x58
	float Vol0VirtualLevel; // 0x5c
	int32_t SampleRate; // 0x60
	bool bMatchHardwareSampleRate; // 0x64
	int32_t RealChannelCount; // 0x68
	int32_t TotalChannelCount; // 0x6c
	int32_t DSPBufferLength; // 0x70
	int32_t DSPBufferCount; // 0x74
	int32_t FileBufferSize; // 0x78
	int32_t StudioUpdatePeriod; // 0x7c
	FString InitialOutputDriverName; // 0x80
	bool bLockAllBuses; // 0x90
	FCustomPoolSizes MemoryPoolSizes; // 0x94
	int32_t LiveUpdatePort; // 0xa8
	int32_t EditorLiveUpdatePort; // 0xac
	int32_t ReloadBanksDelay; // 0xb0
	bool bEnableMemoryTracking; // 0xb4
	TArray<FString> PluginFiles; // 0xb8
	FString ContentBrowserPrefix; // 0xc8
	FString ForcePlatformName; // 0xd8
	FString MasterBankName; // 0xe8
	FString SkipLoadBankName; // 0xf8
	FString StudioBankKey; // 0x108
	FString WavWriterPath; // 0x118
	EFMODLogging LoggingLevel; // 0x128
	FString OcclusionParameter; // 0x130
	FString AmbientVolumeParameter; // 0x140
	FString AmbientLPFParameter; // 0x150
};

struct UInterpFilter : UObject {
	FString Caption; // 0x28
};

struct UGizmoConstantFrameAxisSource : UObject {
	FVector Origin; // 0x30
	FVector Direction; // 0x3c
	FVector TangentX; // 0x48
	FVector TangentY; // 0x54
};

struct UDistributionFloatConstantCurve : UDistributionFloat {
	FInterpCurveFloat ConstantCurve; // 0x38
};

struct UPhysicsSettings : UPhysicsSettingsCore {
	FRigidBodyErrorCorrection PhysicErrorCorrection; // 0xe0
	ESettingsLockedAxis LockedAxis; // 0x114
	ESettingsDOF DefaultDegreesOfFreedom; // 0x115
	bool bSuppressFaceRemapTable; // 0x116
	bool bSupportUVFromHitResults; // 0x117
	bool bDisableActiveActors; // 0x118
	bool bDisableKinematicStaticPairs; // 0x119
	bool bDisableKinematicKinematicPairs; // 0x11a
	bool bDisableCCD; // 0x11b
	bool bEnableEnhancedDeterminism; // 0x11c
	float AnimPhysicsMinDeltaTime; // 0x120
	bool bSimulateAnimPhysicsAfterReset; // 0x124
	float MaxPhysicsDeltaTime; // 0x128
	bool bSubstepping; // 0x12c
	bool bSubsteppingAsync; // 0x12d
	float MaxSubstepDeltaTime; // 0x130
	int32_t MaxSubsteps; // 0x134
	float SyncSceneSmoothingFactor; // 0x138
	float InitialAverageFrameRate; // 0x13c
	int32_t PhysXTreeRebuildRate; // 0x140
	TArray<FPhysicalSurfaceName> PhysicalSurfaces; // 0x148
	FBroadphaseSettings DefaultBroadphaseSettings; // 0x158
	float MinDeltaVelocityForHitEvents; // 0x198
	FChaosPhysicsSettings ChaosSettings; // 0x19c
};

struct UPaperTerrainMaterial : UDataAsset {
	TArray<FPaperTerrainMaterialRule> Rules; // 0x30
	UPaperSprite* InteriorFill; // 0x40
};

struct UMaterialExpressionDotProduct : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UMaterialExpressionShadowReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput shadow; // 0x54
};

struct UDatasmithMaterialInstanceTemplate : UDatasmithObjectTemplate {
	TSoftObjectPtr<UMaterialInterface> ParentMaterial; // 0x30
	TMap<FName, float> ScalarParameterValues; // 0x58
	TMap<FName, FLinearColor> VectorParameterValues; // 0xa8
	TMap<FName, TSoftObjectPtr<UTexture>> TextureParameterValues; // 0xf8
	FDatasmithStaticParameterSetTemplate StaticParameters; // 0x148
};

struct UMaterialExpressionTangentOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UStereoLayerShapeCylinder : UStereoLayerShape {
	float Radius; // 0x28
	float OverlayArc; // 0x2c
	int32_t Height; // 0x30
};

struct URadialFalloff : UFieldNodeFloat {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	float Radius; // 0xc0
	FVector Position; // 0xc4
	EFieldFalloffType Falloff; // 0xd0
};

struct UPlaySound3DComponent_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	UFMODAudioComponent* Sound; // 0xb8
};

struct UAlarmsCountWBP_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FakeHardModeStart; // 0x268
	UWidgetAnimation* HardModeStart; // 0x270
	UWidgetAnimation* LastSurvNotification_Anim; // 0x278
	UWidgetAnimation* MoveSurvNotifications; // 0x280
	UWidgetAnimation* NotificationStart_LastSurv_Ground; // 0x288
	UWidgetAnimation* NotificationStart_LastSurv; // 0x290
	UWidgetAnimation* AllAlarmsDone; // 0x298
	UWidgetAnimation* NotificationStart_34; // 0x2a0
	UWidgetAnimation* NotificationStart_23; // 0x2a8
	UWidgetAnimation* SwitchColor; // 0x2b0
	UWidgetAnimation* ShowTimer; // 0x2b8
	UWidgetAnimation* GetReadyAppearanceFinish; // 0x2c0
	UWidgetAnimation* OverlayHide; // 0x2c8
	UWidgetAnimation* TextHide_Target; // 0x2d0
	UWidgetAnimation* Timer5_2; // 0x2d8
	UWidgetAnimation* Timer5; // 0x2e0
	UWidgetAnimation* TimerAdd; // 0x2e8
	UWidgetAnimation* GetReadyAppearanceStart; // 0x2f0
	UWidgetAnimation* NotificationStart; // 0x2f8
	UWidgetAnimation* LastSurvivorStart; // 0x300
	UTextBlock* AddedTime; // 0x308
	UWidgetSwitcher* AlarmSwitch; // 0x310
	UImage* Background; // 0x318
	UImage* Background_2; // 0x320
	UImage* Background_3; // 0x328
	UHorizontalBox* Box_Time; // 0x330
	UCanvasPanel* CanvasPanel_1; // 0x338
	UTextBlock* GameplayNotification; // 0x340
	UTextBlock* GameplayNotification_2; // 0x348
	USizeBox* GetReadyTextBox; // 0x350
	USizeBox* GetReadyTextBox_2; // 0x358
	USizeBox* GetReadyTextBox_AlarmsDone; // 0x360
	UImage* HMLMIcon_2; // 0x368
	UImage* HMLMIcon_3; // 0x370
	UHorizontalBox* HorizontalBox_3; // 0x378
	UIconAbilityCooldownAlarmWBP_Survivor_Middle_C* IconAbilityCooldownAlarmWBP_Survivor_Middle; // 0x380
	UImage* Image; // 0x388
	UImage* Image_2; // 0x390
	UImage* Image_3; // 0x398
	UImage* Image_4; // 0x3a0
	UImage* Image_5; // 0x3a8
	UImage* Image_6; // 0x3b0
	UImage* Image_7; // 0x3b8
	UImage* Image_8; // 0x3c0
	UImage* Image_9; // 0x3c8
	UImage* Image_10; // 0x3d0
	UImage* Image_11; // 0x3d8
	UImage* Image_23; // 0x3e0
	UImage* Image_78; // 0x3e8
	UImage* Image_122; // 0x3f0
	UImage* Image_126; // 0x3f8
	UImage* Image_347; // 0x400
	UImage* Image_403; // 0x408
	UImage* Image_475; // 0x410
	UImage* Image_541; // 0x418
	UImage* Image_556; // 0x420
	UImage* Image_AddedTime; // 0x428
	UImage* Image_backtimer; // 0x430
	UTextBlock* KillerSee; // 0x438
	UTextBlock* MinutesText; // 0x440
	UOverlay* Overlay_AddedTime; // 0x448
	UOverlay* Overlay_Detect; // 0x450
	UOverlay* Overlay_HardMode; // 0x458
	UOverlay* Overlay_TIMERSIZE; // 0x460
	UTextBlock* Overtime_Text; // 0x468
	UTextBlock* ReadyText; // 0x470
	UTextBlock* ReadyText_2; // 0x478
	UTextBlock* SecondsText; // 0x480
	UTextBlock* SecondsText_2; // 0x488
	UTextBlock* SurvLive; // 0x490
	UTextBlock* TextBlock_89; // 0x498
	UTextBlock* TextBlock_123; // 0x4a0
	UWBP_AlarmsCounter_C* WBP_AlarmsCounter; // 0x4a8
	UWidgetSwitcher* WidgetSwitcher_730; // 0x4b0
	UWidgetSwitcher* WidgetSwitcher_GETREADYTEXT; // 0x4b8
	UWidgetSwitcher* WidgetSwitcher_StatusSurv; // 0x4c0
	UWidgetSwitcher* WidgetSwitcher_TIMER; // 0x4c8
	UWidgetSwitcher* WidgetSwitcher_Tip_Alarms; // 0x4d0
	FString str; // 0x4d8
	FText AlarmText; // 0x4e8
	int32_t AlarmsCount; // 0x500
	int32_t AlarmsDone; // 0x504
	bool GameStarting?; // 0x508
	FFMODEventInstance GameEndEvent; // 0x510
	FFMODEventInstance HardModeEvent; // 0x518
	FFMODEventInstance LastManStandEvent; // 0x520
	bool HardMode?; // 0x528
	bool LastManStand?; // 0x529
	float Volume; // 0x52c
	FFMODEventInstance Sound2D; // 0x530
	bool StartGame?; // 0x538
	int32_t Minutes; // 0x53c
	int32_t Seconds; // 0x540
	bool IsStop; // 0x544
	FFMODEventInstance KillerSeeSound; // 0x548
	float DeltaSecond; // 0x550
	float Speed; // 0x554
	bool LastSecondsMusic?; // 0x558
	float LastSecondVolume; // 0x55c
	bool GameEnd?; // 0x560
	bool Chased?; // 0x561
	float EyeScale; // 0x564
	float Delay; // 0x568
	bool StopMusic?; // 0x56c
	float VolumeKillerSee; // 0x570
	FFMODEventInstance 10Sec; // 0x578
	FText CountAliveSurv; // 0x580
	FFMODEventInstance Last; // 0x598
	bool LastChance; // 0x5a0
	float Seconds_Start5; // 0x5a4
	bool GameStarting?_6; // 0x5a8
	UMaterialInstanceDynamic* Material INstance; // 0x5b0
	float Seconds_Start3; // 0x5b8
	int32_t Alarms; // 0x5bc
	bool LastSurvPlay?; // 0x5c0
	bool bIsAlarmsDone; // 0x5c1
	UWidgetAnimation* Last Survivor Start; // 0x5c8
	bool IsLastSurvAnimationPlaying; // 0x5d0
	bool bIsAlarmsAnimFinished; // 0x5d1
	FMulticastInlineDelegate OnLastSurmAnimFinished; // 0x5d8
	FFMODEventInstance Voice; // 0x5e8
	FMulticastInlineDelegate OnHardModeAnimFinished; // 0x5f0
};

struct UChargeSpell_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	bool Casted?; // 0xf0
	float Delta Seconds; // 0xf4
	float CastTime; // 0xf8
	float CastTimeDef; // 0xfc
	bool Move!; // 0x100
	float UseTimeDef; // 0x104
	float UseTime; // 0x108
	TArray<ASurvivorMasterBP_C*> SurvArr; // 0x110
	bool Peregrev; // 0x120
	float cdDelay; // 0x124
	float CdDelayDef; // 0x128
	ARabbit_C* Rabbit; // 0x130
	float tempTime; // 0x138
	bool Caster; // 0x13c
};

struct ABP_Spectator_C : APawn {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UPostProcessComponent* PostProcess; // 0x288
	UCameraComponent* Camera; // 0x290
	UVoipManagerComponent* VoipManager; // 0x298
	USphereComponent* Sphere1; // 0x2a0
	UStaticMeshComponent* Sphere; // 0x2a8
	USoundChatSounds_C* SoundChatSounds; // 0x2b0
	UAlarmsWidgetSize_C* AlarmsWidgetSize; // 0x2b8
	UFootprintComponent_C* FootprintComponent; // 0x2c0
	UATPCCameraComponent* ATPCCamera; // 0x2c8
	USceneComponent* DefaultSceneRoot; // 0x2d0
	float Timeline_0_distance_53E7CC384B3361E71E46DB96F09DA0D2; // 0x2d8
	ETimelineDirection Timeline_0__Direction_53E7CC384B3361E71E46DB96F09DA0D2; // 0x2dc
	UTimelineComponent* Timeline_1; // 0x2e0
	int32_t PlayerIndex; // 0x2e8
	AActor* SelectedActor; // 0x2f0
	bool Block?; // 0x2f8
	bool AllowVoice; // 0x2f9
	UVoipAudioComponent* VoipAudio; // 0x300
	bool VoiceActive?; // 0x308
	APawn* MyCharForIgnore; // 0x310
	AHUD_PropHunt_C* As HUD Prop Hunt; // 0x318
	float XAxis; // 0x320
	float YAxis; // 0x324
	float BaseLookUpRate; // 0x328
	float BaseTurnRate; // 0x32c
	FVector CustomOffset; // 0x330
	FVector StandartOffset; // 0x33c
	float Sensivity; // 0x348
	bool YaNajalNaknopky; // 0x34c
	FTimerHandle ProgBarTimer; // 0x350
	ASurvivorMasterBP_C* As Survivor Master BP; // 0x358
	UMaterialInstanceDynamic* MaterialVignette2; // 0x360
	UMaterialInstanceDynamic* MaterialBlur; // 0x368
	bool Invert Mouse Y?; // 0x370
};

struct UAISense_Team : UAISense {
	TArray<FAITeamStimulusEvent> RegisteredEvents; // 0x80
};

struct UBlendProfile : UObject {
	USkeleton* OwningSkeleton; // 0x30
	TArray<FBlendProfileBoneEntry> ProfileEntries; // 0x38
};

struct UBP_HTTP_Wrapper_C : UHTTP_Wrapper {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb8
};

struct UEOSCoreSessionsStartSession : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UEOSCoreUIHideFriends : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UEOSCoreAuthLinkAccount : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct AOnlineBeaconHostObject : AActor {
	FString BeaconTypeName; // 0x220
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x230
	TArray<AOnlineBeaconClient*> ClientActors; // 0x238
};

struct UEOSCoreConnectUnlinkAccount : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UMaterialExpressionChannelMaskParameter : UMaterialExpressionVectorParameter {
	EChannelMaskParameterColor MaskChannel; // 0x70
};

struct UParticleSystem : UFXSystemAsset {
	float UpdateTime_FPS; // 0x30
	float UpdateTime_Delta; // 0x34
	float WarmupTime; // 0x38
	float WarmupTickRate; // 0x3c
	TArray<UParticleEmitter*> Emitters; // 0x40
	UParticleSystemComponent* PreviewComponent; // 0x50
	UInterpCurveEdSetup* CurveEdSetup; // 0x58
	float LODDistanceCheckTime; // 0x60
	float MacroUVRadius; // 0x64
	TArray<float> LODDistances; // 0x68
	TArray<FParticleSystemLOD> LODSettings; // 0x78
	FBox FixedRelativeBoundingBox; // 0x88
	float SecondsBeforeInactive; // 0xa4
	float Delay; // 0xa8
	float DelayLow; // 0xac
	char bOrientZAxisTowardCamera : 1; // 0xb0
	char bUseFixedRelativeBoundingBox : 1; // 0xb0
	char bShouldResetPeakCounts : 1; // 0xb0
	char bHasPhysics : 1; // 0xb0
	char bUseRealtimeThumbnail : 1; // 0xb0
	char ThumbnailImageOutOfDate : 1; // 0xb0
	char bUseDelayRange : 1; // 0xb1
	char bAllowManagedTicking : 1; // 0xb1
	char bAutoDeactivate : 1; // 0xb1
	char bRegenerateLODDuplicate : 1; // 0xb1
	EParticleSystemUpdateMode SystemUpdateMode; // 0xb2
	ParticleSystemLODMethod LODMethod; // 0xb3
	EParticleSystemInsignificanceReaction InsignificantReaction; // 0xb4
	EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod; // 0xb5
	EParticleSignificanceLevel MaxSignificanceLevel; // 0xb7
	uint32_t MinTimeBetweenTicks; // 0xb8
	float InsignificanceDelay; // 0xbc
	FVector MacroUVPosition; // 0xc0
	FBox CustomOcclusionBounds; // 0xcc
	TArray<FLODSoloTrack> SoloTracking; // 0xe8
	TArray<FNamedEmitterMaterial> NamedMaterialSlots; // 0xf8
};

struct ACameraRig_Rail : AActor {
	float CurrentPositionOnRail; // 0x220
	bool bLockOrientationToRail; // 0x224
	USceneComponent* TransformComponent; // 0x228
	USplineComponent* RailSplineComponent; // 0x230
	USceneComponent* RailCameraMount; // 0x238
};

struct UInterpTrackToggle : UInterpTrack {
	TArray<FToggleTrackKey> ToggleTrack; // 0x70
	char bActivateSystemEachUpdate : 1; // 0x80
	char bActivateWithJustAttachedFlag : 1; // 0x80
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UMaterialExpressionWorldPosition : UMaterialExpression {
	EWorldPositionIncludedOffsets WorldPositionShaderOffset; // 0x40
};

struct UTemplateSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
	TSoftClassPtr<UObject> BoundActorClass; // 0x68
	TSoftObjectPtr<AActor> BoundPreviewActor; // 0x90
	TMap<FGuid, FName> BoundActorComponents; // 0xb8
};

struct UNiagaraEffectType : UObject {
	ENiagaraScalabilityUpdateFrequency UpdateFrequency; // 0x28
	ENiagaraCullReaction CullReaction; // 0x2c
	UNiagaraSignificanceHandler* SignificanceHandler; // 0x30
	TArray<FNiagaraSystemScalabilitySettings> DetailLevelScalabilitySettings; // 0x38
	FNiagaraSystemScalabilitySettingsArray SystemScalabilitySettings; // 0x48
	FNiagaraEmitterScalabilitySettingsArray EmitterScalabilitySettings; // 0x58
};

struct UMovieSceneNiagaraParameterTrack : UMovieSceneNiagaraTrack {
	FNiagaraVariable Parameter; // 0x88
};

struct AGrannyTutorial_C : AGranny_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1398
	UAstralTutorial_C* AstralTutorial; // 0x13a0
	bool NewVar_5_1; // 0x13a8
	ATriggerTeleportPrototypeLevel_C* teleporter; // 0x13b0
};

struct UMaterialShaderQualitySettings : UObject {
	TMap<FName, UShaderPlatformQualitySettings*> ForwardSettingMap; // 0x28
};

struct AATPCArrowDebugActor : AActor {
	USceneComponent* SceneRootcomponent; // 0x220
	UArrowComponent* ArrowComponent; // 0x228
};

struct UEOSCoreAchievementsQueryDefinitions : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UControlPointMeshComponent : UStaticMeshComponent {
	float VirtualTextureMainPassMaxDrawDistance; // 0x4d0
};

struct UBansheeFlyShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UInAppPurchaseCallbackProxy2 : UObject {
	FMulticastInlineDelegate onSuccess; // 0x28
	FMulticastInlineDelegate onFailure; // 0x38
};

struct URotatingMovementComponent : UMovementComponent {
	FRotator RotationRate; // 0xf0
	FVector PivotTranslation; // 0xfc
	char bRotationInLocalSpace : 1; // 0x108
};

struct UBlendSpace1D : UBlendSpaceBase {
	bool bScaleAnimation; // 0x148
};

struct ADefaultPawn : APawn {
	float BaseTurnRate; // 0x280
	float BaseLookUpRate; // 0x284
	UPawnMovementComponent* MovementComponent; // 0x288
	USphereComponent* CollisionComponent; // 0x290
	UStaticMeshComponent* MeshComponent; // 0x298
	char bAddDefaultMovementBindings : 1; // 0x2a0
};

struct UParticleModuleLocationWorldOffset_Seeded : UParticleModuleLocationWorldOffset {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UKillerWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UMorphTarget : UObject {
	USkeletalMesh* BaseSkelMesh; // 0x28
};

struct UWBP_HitMark_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UCanvasPanel* CanvasPanel_HitMarks; // 0x268
	UOverlay* Overlay_38; // 0x270
	ASurvivorMasterBP_C* PlayerRef; // 0x278
	TArray<UWBP_HitMarkComponent_C*> HitMarks; // 0x280
};

struct UTileView : UListView {
	float EntryHeight; // 0x368
	float EntryWidth; // 0x36c
	EListItemAlignment TileAlignment; // 0x370
	bool bWrapHorizontalNavigation; // 0x371
};

struct UW_PlayerSkinInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* SelectToNormal_Anim; // 0x268
	UWidgetAnimation* HoverToSelect_Anim; // 0x270
	UWidgetAnimation* NormalToHover_Anim; // 0x278
	UWidgetAnimation* Clicked; // 0x280
	UButton* Button_Skin; // 0x288
	UImage* Image_74; // 0x290
	UImage* Image_Hovered; // 0x298
	UImage* Image_Normal; // 0x2a0
	UImage* Image_Selected; // 0x2a8
	USizeBox* SizeBox_60; // 0x2b0
	UTextBlock* TextBlock_SkinName; // 0x2b8
	UWBP_NewItemMarker_C* WBP_NewItemMarker; // 0x2c0
	E_SkinType SkinType; // 0x2c8
	FText Name; // 0x2d0
	int32_t SkinID; // 0x2e8
	FMulticastInlineDelegate OnClickedDispatcher; // 0x2f0
	bool IsClicked; // 0x300
	TMap<int32_t, USkeletalMesh*> Skin; // 0x308
	int32_t CharID; // 0x358
	bool IsBlocked; // 0x35c
};

struct UMovieSceneCompiledData : UObject {
	FMovieSceneEvaluationTemplate EvaluationTemplate; // 0x28
	FMovieSceneSequenceHierarchy Hierarchy; // 0x188
	FMovieSceneEntityComponentField EntityComponentField; // 0x2a0
	FMovieSceneEvaluationField TrackTemplateField; // 0x390
	TArray<FFrameTime> DeterminismFences; // 0x3c0
	FGuid CompiledSignature; // 0x3d0
	FGuid CompilerVersion; // 0x3e0
	FMovieSceneSequenceCompilerMaskStruct AccumulatedMask; // 0x3f0
	FMovieSceneSequenceCompilerMaskStruct AllocatedMask; // 0x3f1
	EMovieSceneSequenceFlags AccumulatedFlags; // 0x3f2
};

struct UCanvasRenderTarget2D : UTextureRenderTarget2D {
	FMulticastInlineDelegate OnCanvasRenderTargetUpdate; // 0x108
	TWeakObjectPtr<UWorld> World; // 0x118
	bool bShouldClearRenderTargetOnReceiveUpdate; // 0x120
};

struct UNiagaraDataInterfaceSkeletalMesh : UNiagaraDataInterface {
	ENDISkeletalMesh_SourceMode SourceMode; // 0x38
	AActor* Source; // 0x40
	FNiagaraUserParameterBinding MeshUserParameter; // 0x48
	USkeletalMeshComponent* SourceComponent; // 0x68
	ENDISkeletalMesh_SkinningMode SkinningMode; // 0x70
	TArray<FName> SamplingRegions; // 0x78
	int32_t WholeMeshLOD; // 0x88
	TArray<FName> FilteredBones; // 0x90
	TArray<FName> FilteredSockets; // 0xa0
	FName ExcludeBoneName; // 0xb0
	char bExcludeBone : 1; // 0xb8
	bool bRequireCurrentFrameData; // 0xb9
};

struct UMaterialExpressionDivide : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UEdGraphNode : UObject {
	TArray<UEdGraphPin_Deprecated*> DeprecatedPins; // 0x38
	int32_t NodePosX; // 0x48
	int32_t NodePosY; // 0x4c
	int32_t NodeWidth; // 0x50
	int32_t NodeHeight; // 0x54
	ENodeAdvancedPins AdvancedPinDisplay; // 0x58
	ENodeEnabledState EnabledState; // 0x59
	char bDisplayAsDisabled : 1; // 0x5b
	char bUserSetEnabledState : 1; // 0x5b
	char bIsNodeEnabled : 1; // 0x5b
	char bHasCompilerMessage : 1; // 0x5b
	FString NodeComment; // 0x60
	int32_t ErrorType; // 0x70
	FString ErrorMsg; // 0x78
	FGuid NodeGuid; // 0x88
};

struct ULanguageSave_C : USaveGame {
	FString Language; // 0x28
};

struct UInterpTrackParticleReplay : UInterpTrack {
	TArray<FParticleReplayTrackKey> TrackKeys; // 0x70
};

struct UMaterialExpressionSobol : UMaterialExpression {
	FExpressionInput Cell; // 0x40
	FExpressionInput Index; // 0x54
	FExpressionInput Seed; // 0x68
	uint32_t ConstIndex; // 0x7c
	FVector2D ConstSeed; // 0x80
};

struct UWidgetSwitcher : UPanelWidget {
	int32_t ActiveWidgetIndex; // 0x120
};

struct UWheeledVehicleMovementComponent : UPawnMovementComponent {
	char bDeprecatedSpringOffsetMode : 1; // 0x140
	char bReverseAsBrake : 1; // 0x140
	char bUseRVOAvoidance : 1; // 0x140
	char bRawHandbrakeInput : 1; // 0x140
	char bRawGearUpInput : 1; // 0x140
	char bRawGearDownInput : 1; // 0x140
	char bWasAvoidanceUpdated : 1; // 0x144
	float Mass; // 0x148
	TArray<FWheelSetup> WheelSetups; // 0x150
	float DragCoefficient; // 0x160
	float ChassisWidth; // 0x164
	float ChassisHeight; // 0x168
	float DragArea; // 0x16c
	float EstimatedMaxEngineSpeed; // 0x170
	float MaxEngineRPM; // 0x174
	float DebugDragMagnitude; // 0x178
	FVector InertiaTensorScale; // 0x17c
	float MinNormalizedTireLoad; // 0x188
	float MinNormalizedTireLoadFiltered; // 0x18c
	float MaxNormalizedTireLoad; // 0x190
	float MaxNormalizedTireLoadFiltered; // 0x194
	float ThresholdLongitudinalSpeed; // 0x198
	int32_t LowForwardSpeedSubStepCount; // 0x19c
	int32_t HighForwardSpeedSubStepCount; // 0x1a0
	TArray<UVehicleWheel*> Wheels; // 0x1a8
	float RVOAvoidanceRadius; // 0x1d0
	float RVOAvoidanceHeight; // 0x1d4
	float AvoidanceConsiderationRadius; // 0x1d8
	float RVOSteeringStep; // 0x1dc
	float RVOThrottleStep; // 0x1e0
	int32_t AvoidanceUID; // 0x1e4
	FNavAvoidanceMask AvoidanceGroup; // 0x1e8
	FNavAvoidanceMask GroupsToAvoid; // 0x1ec
	FNavAvoidanceMask GroupsToIgnore; // 0x1f0
	float AvoidanceWeight; // 0x1f4
	FVector PendingLaunchVelocity; // 0x1f8
	FReplicatedVehicleState ReplicatedState; // 0x204
	float RawSteeringInput; // 0x21c
	float RawThrottleInput; // 0x220
	float RawBrakeInput; // 0x224
	float SteeringInput; // 0x228
	float ThrottleInput; // 0x22c
	float BrakeInput; // 0x230
	float HandbrakeInput; // 0x234
	float IdleBrakeInput; // 0x238
	float StopThreshold; // 0x23c
	float WrongDirectionThreshold; // 0x240
	FVehicleInputRate ThrottleInputRate; // 0x244
	FVehicleInputRate BrakeInputRate; // 0x24c
	FVehicleInputRate HandbrakeInputRate; // 0x254
	FVehicleInputRate SteeringInputRate; // 0x25c
	AController* OverrideController; // 0x288
};

struct UEditableGameplayTagQueryExpression_AnyExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UAnimBlueprint : UBlueprint {
	USkeleton* TargetSkeleton; // 0xa8
	TArray<FAnimGroupInfo> Groups; // 0xb0
	bool bUseMultiThreadedAnimationUpdate; // 0xc0
	bool bWarnAboutBlueprintUsage; // 0xc1
};

struct UInterpTrackInstVisibility : UInterpTrackInst {
	EVisibilityTrackAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
};

struct UVampire_Bite_Shake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UEOSCoreConnectLogin : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UAxisPositionGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoFloatParameterSource> ParameterSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bEnableSignedAxis; // 0x88
	bool bInInteraction; // 0x89
	FVector InteractionOrigin; // 0x8c
	FVector InteractionAxis; // 0x98
	FVector InteractionStartPoint; // 0xa4
	FVector InteractionCurPoint; // 0xb0
	float InteractionStartParameter; // 0xbc
	float InteractionCurParameter; // 0xc0
	float ParameterSign; // 0xc4
};

struct UNetworkSettings : UDeveloperSettings {
	char bVerifyPeer : 1; // 0x38
	char bEnableMultiplayerWorldOriginRebasing : 1; // 0x38
	int32_t MaxRepArraySize; // 0x3c
	int32_t MaxRepArrayMemory; // 0x40
	TArray<FNetworkEmulationProfileDescription> NetworkEmulationProfiles; // 0x48
};

struct UInputKeySelector : UWidget {
	FButtonStyle WidgetStyle; // 0x108
	FTextBlockStyle TextStyle; // 0x380
	FInputChord SelectedKey; // 0x5f0
	FSlateFontInfo Font; // 0x610
	FMargin Margin; // 0x668
	FLinearColor ColorAndOpacity; // 0x678
	FText KeySelectionText; // 0x688
	FText NoKeySpecifiedText; // 0x6a0
	bool bAllowModifierKeys; // 0x6b8
	bool bAllowGamepadKeys; // 0x6b9
	TArray<FKey> EscapeKeys; // 0x6c0
	FMulticastInlineDelegate OnKeySelected; // 0x6d0
	FMulticastInlineDelegate OnIsSelectingKeyChanged; // 0x6e0
};

struct UChainLobbyAnimBlueprint_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x398
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x3c0
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x440
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x470
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x4f0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x520
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x5d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x5f8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x678
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x6a8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x728
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x758
	bool Reset?; // 0x808
};

struct UAnimNotifyState_TimedNiagaraEffect : UAnimNotifyState {
	UNiagaraSystem* Template; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct ALevelVariantSetsActor : AActor {
	FSoftObjectPath LevelVariantSets; // 0x220
};

struct UDoppel_Knife_AnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x320
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x348
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x370
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x398
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x3c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x3e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x410
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x438
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x460
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x4e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x510
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x590
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x5c0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x640
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x6e0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x760
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x7e0
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x880
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x8b0
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x930
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x960
	bool ImSurv?; // 0xa10
	bool Switch?; // 0xa11
	bool HiddenAttack?; // 0xa12
	bool HardHit?; // 0xa13
	bool TPP?; // 0xa14
	bool local?; // 0xa15
};

struct ACameraActor : AActor {
	EAutoReceiveInput AutoActivateForPlayer; // 0x220
	UCameraComponent* CameraComponent; // 0x228
	USceneComponent* SceneComponent; // 0x230
	char bConstrainAspectRatio : 1; // 0x240
	float AspectRatio; // 0x244
	float FOVAngle; // 0x248
	float PostProcessBlendWeight; // 0x24c
	FPostProcessSettings PostProcessSettings; // 0x250
};

struct UMagicLeapARPinSaveGame : USaveGame {
	FGuid PinnedID; // 0x28
	FTransform ComponentWorldTransform; // 0x40
	FTransform PinTransform; // 0x70
	bool bShouldPinActor; // 0xa0
};

struct AMainMenuCameraActor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USkeletalMeshComponent* GrannyKnife; // 0x228
	USkeletalMeshComponent* DoppelKnife; // 0x230
	USkeletalMeshComponent* AkashaBlade; // 0x238
	USkeletalMeshComponent* Chainsaw; // 0x240
	USceneComponent* NewSurvPosition; // 0x248
	USceneComponent* NewCamera; // 0x250
	USceneComponent* IsaacPoint; // 0x258
	USceneComponent* TaigaPoint; // 0x260
	USceneComponent* MablePoint; // 0x268
	USceneComponent* ChrisPoint; // 0x270
	USkeletalMeshComponent* SkeletalMesh; // 0x278
	URectLightComponent* RectLight3; // 0x280
	URectLightComponent* RectLight2; // 0x288
	URectLightComponent* RectLight; // 0x290
	UCineCameraComponent* CineCamera; // 0x298
	USceneComponent* Point2; // 0x2a0
	USceneComponent* Point1; // 0x2a8
	USceneComponent* DefaultCameraPoint; // 0x2b0
	USceneComponent* SharedRoot; // 0x2b8
	FVector Timeline_1_Rotation_02004E434E234EFDBB9602A1C94D94DE; // 0x2c0
	FVector Timeline_1_Location_02004E434E234EFDBB9602A1C94D94DE; // 0x2cc
	float Timeline_1_Focus_02004E434E234EFDBB9602A1C94D94DE; // 0x2d8
	ETimelineDirection Timeline_1__Direction_02004E434E234EFDBB9602A1C94D94DE; // 0x2dc
	UTimelineComponent* Timeline_2; // 0x2e0
	FVector Timeline_0_Rotation_9C06C0454B54CC92CC80E0922E24F185; // 0x2e8
	FVector Timeline_0_Location_9C06C0454B54CC92CC80E0922E24F185; // 0x2f4
	float Timeline_0_Focus_9C06C0454B54CC92CC80E0922E24F185; // 0x300
	ETimelineDirection Timeline_0__Direction_9C06C0454B54CC92CC80E0922E24F185; // 0x304
	UTimelineComponent* Timeline_1; // 0x308
	FVector NewCameraBackTimeline_Rotation_E607634644F1975D7540B3B1EBF44EEE; // 0x310
	FVector NewCameraBackTimeline_Location_E607634644F1975D7540B3B1EBF44EEE; // 0x31c
	float NewCameraBackTimeline_Focus_E607634644F1975D7540B3B1EBF44EEE; // 0x328
	ETimelineDirection NewCameraBackTimeline__Direction_E607634644F1975D7540B3B1EBF44EEE; // 0x32c
	UTimelineComponent* NewCameraBackTimeline; // 0x330
	FVector NewCameraForwardTimeline_Rotation_C5EA47564EC099B5186CD09AFF7DD53B; // 0x338
	FVector NewCameraForwardTimeline_Location_C5EA47564EC099B5186CD09AFF7DD53B; // 0x344
	float NewCameraForwardTimeline_Focus_C5EA47564EC099B5186CD09AFF7DD53B; // 0x350
	ETimelineDirection NewCameraForwardTimeline__Direction_C5EA47564EC099B5186CD09AFF7DD53B; // 0x354
	UTimelineComponent* NewCameraForwardTimeline; // 0x358
	FVector CameraPoint2Timeline_Rotation_EE3A4378463FDC9DC349308970E009BF; // 0x360
	FVector CameraPoint2Timeline_Location_EE3A4378463FDC9DC349308970E009BF; // 0x36c
	float CameraPoint2Timeline_FocalLenght_EE3A4378463FDC9DC349308970E009BF; // 0x378
	ETimelineDirection CameraPoint2Timeline__Direction_EE3A4378463FDC9DC349308970E009BF; // 0x37c
	UTimelineComponent* CameraPoint2Timeline; // 0x380
	FVector CameraPoint1Timeline_Rotation_E10221AB429DA27310900598424A0349; // 0x388
	FVector CameraPoint1Timeline_Location_E10221AB429DA27310900598424A0349; // 0x394
	float CameraPoint1Timeline_Focus_E10221AB429DA27310900598424A0349; // 0x3a0
	ETimelineDirection CameraPoint1Timeline__Direction_E10221AB429DA27310900598424A0349; // 0x3a4
	UTimelineComponent* CameraPoint1Timeline; // 0x3a8
	int32_t Random; // 0x3b0
	int32_t SkinID; // 0x3b4
	MainMenuCameraEnum Camera; // 0x3b8
	FTimerHandle HandlerLoadMenu; // 0x3c0
	SurvChars SurvType; // 0x3c8
};

struct UGizmoAxisTranslationParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float Parameter; // 0xb0
	FGizmoFloatParameterChange LastChange; // 0xb4
	FVector CurTranslationAxis; // 0xbc
	FVector CurTranslationOrigin; // 0xc8
	FTransform InitialTransform; // 0xe0
};

struct UDatasmithStaticMeshComponentTemplate : UDatasmithObjectTemplate {
	UStaticMesh* StaticMesh; // 0x30
	TArray<UMaterialInterface*> OverrideMaterials; // 0x38
};

struct UFoliageInstancedStaticMeshComponent : UHierarchicalInstancedStaticMeshComponent {
	FMulticastInlineDelegate OnInstanceTakePointDamage; // 0x668
	FMulticastInlineDelegate OnInstanceTakeRadialDamage; // 0x678
	FGuid GenerationGuid; // 0x688
};

struct UMagicLeapARPinComponent : USceneComponent {
	FString ObjectUID; // 0x1f8
	int32_t UserIndex; // 0x208
	EMagicLeapAutoPinType AutoPinType; // 0x20c
	bool bShouldPinActor; // 0x20d
	UMagicLeapARPinSaveGame* PinDataClass; // 0x210
	TSet<EMagicLeapARPinType> SearchPinTypes; // 0x218
	USphereComponent* SearchVolume; // 0x268
	FMulticastInlineDelegate OnPersistentEntityPinned; // 0x270
	FMulticastInlineDelegate OnPersistentEntityPinLost; // 0x280
	FMulticastInlineDelegate OnPinDataLoadAttemptCompleted; // 0x290
	FGuid PinnedCFUID; // 0x2a0
	USceneComponent* PinnedSceneComponent; // 0x2b0
	UMagicLeapARPinSaveGame* PinData; // 0x2b8
};

struct USoundChatSounds_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	TArray<FFMODEventInstance> Sound1; // 0xb8
	TArray<FFMODEventInstance> Sound2; // 0xc8
	bool Block?; // 0xd8
	int32_t SoundCount; // 0xdc
	bool CD?; // 0xe0
	FMulticastInlineDelegate OnStartedCD; // 0xe8
};

struct UBansheeWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct USoundNodeOscillator : USoundNode {
	char bModulateVolume : 1; // 0x48
	char bModulatePitch : 1; // 0x48
	float AmplitudeMin; // 0x4c
	float AmplitudeMax; // 0x50
	float FrequencyMin; // 0x54
	float FrequencyMax; // 0x58
	float OffsetMin; // 0x5c
	float OffsetMax; // 0x60
	float CenterMin; // 0x64
	float CenterMax; // 0x68
};

struct UInterpTrackInstToggle : UInterpTrackInst {
	ETrackToggleAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
	char bSavedActiveState : 1; // 0x30
};

struct UImgMediaSettings : UObject {
	FFrameRate DefaultFrameRate; // 0x28
	float CacheBehindPercentage; // 0x30
	float CacheSizeGB; // 0x34
	int32_t CacheThreads; // 0x38
	int32_t CacheThreadStackSizeKB; // 0x3c
	float GlobalCacheSizeGB; // 0x40
	bool UseGlobalCache; // 0x44
	uint32_t ExrDecoderThreads; // 0x48
	FString DefaultProxy; // 0x50
	bool UseDefaultProxy; // 0x60
};

struct UTestMovieSceneSubTrack : UMovieSceneSubTrack {
	TArray<UMovieSceneSection*> SectionArray; // 0x88
};

struct UProgressBar : UWidget {
	FProgressBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x2a8
	USlateBrushAsset* BackgroundImage; // 0x2b0
	USlateBrushAsset* FillImage; // 0x2b8
	USlateBrushAsset* MarqueeImage; // 0x2c0
	float Percent; // 0x2c8
	EProgressBarFillType BarFillType; // 0x2cc
	bool bIsMarquee; // 0x2cd
	FVector2D BorderPadding; // 0x2d0
	FDelegate PercentDelegate; // 0x2d8
	FLinearColor FillColorAndOpacity; // 0x2e8
	FDelegate FillColorAndOpacityDelegate; // 0x2f8
};

struct UEOSCoreUserInfoQueryUserInfo : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct AARSkyLight : ASkyLight {
	UAREnvironmentCaptureProbe* CaptureProbe; // 0x230
};

struct UKnifeShoot_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	bool KnifeIN?; // 0xb8
	bool CD?; // 0xb9
	AKillerMasterBP_C* KillerRef; // 0xc0
	bool BeginPlay; // 0xc8
	AKnife_C* knife; // 0xd0
	FRotator targetRotat; // 0xd8
	float InterpSpeed; // 0xe4
	bool FIRE; // 0xe8
	float DeltaSec; // 0xec
	bool AimRDY; // 0xf0
	FVector NewVar_1; // 0xf4
	FVector ForwardV3; // 0x100
	FVector NewVar_2; // 0x10c
	FRotator RotationKnife; // 0x118
	float TimeRotate; // 0x124
	bool CD2; // 0x128
	float KnifeCdAttack; // 0x12c
};

struct UPingQoSSubsystem : UEngineSubsystem {
	FMulticastInlineDelegate OnPingCompleted; // 0x30
};

struct AAtmosphericFog : AInfo {
	UAtmosphericFogComponent* AtmosphericFogComponent; // 0x220
};

struct UInvalidationBox : UContentWidget {
	bool bCanCache; // 0x120
	bool CacheRelativeTransforms; // 0x121
};

struct UWBP_MiniFriendList_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_FriendList; // 0x268
	UHorizontalBox* HorizontalBox_1; // 0x270
	UImage* Image_ButtonBG; // 0x278
	UImage* Image_ButtonIcon; // 0x280
	UWBP_MiniFriendEntry_C* WBP_MiniFriendEntry_1; // 0x288
	UWBP_MiniFriendEntry_C* WBP_MiniFriendEntry_2; // 0x290
	UWBP_MiniFriendEntry_C* WBP_MiniFriendEntry_3; // 0x298
	UWBP_MiniFriendEntry_C* WBP_MiniFriendEntry_4; // 0x2a0
	UWBP_SelfInfo_C* WBP_SelfInfo_68; // 0x2a8
	TArray<UWBP_MiniFriendEntry_C*> Slots; // 0x2b0
	TArray<UWBP_MiniFriendEntry_C*> EmptySlots; // 0x2c0
	FMulticastInlineDelegate OnButtonPressed; // 0x2d0
	FTimerHandle MoveTimer; // 0x2e0
	float AnimTarget; // 0x2e8
	int32_t C_ReservedSlots; // 0x2ec
	FMulticastInlineDelegate MovindAnimFinished; // 0x2f0
	bool IsLeavingLobbyAnimPlaying; // 0x300
	TMap<FString, FString> EntriesQueue; // 0x308
	UButton* FocusedButton; // 0x358
};

struct UPhysicsCollisionHandler : UObject {
	float ImpactThreshold; // 0x28
	float ImpactReFireDelay; // 0x2c
	USoundBase* DefaultImpactSound; // 0x30
	float LastImpactSoundTime; // 0x38
};

struct UW_PathSeparator_C : UUserWidget {
	UTextBlock* TextBlock_55; // 0x260
};

struct UAnimNotify_PlayMontageNotify : UAnimNotify {
	FName NotifyName; // 0x38
};

struct UBTDecorator_TimeLimit : UBTDecorator {
	float TimeLimit; // 0x68
};

struct UDeviceProfile : UTextureLODSettings {
	FString DeviceType; // 0x38
	FString BaseProfileName; // 0x48
	UObject* Parent; // 0x58
	TArray<FString> CVars; // 0x88
};

struct USpinBox : UWidget {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	FSpinBoxStyle WidgetStyle; // 0x120
	USlateWidgetStyleAsset* Style; // 0x408
	int32_t MinFractionalDigits; // 0x410
	int32_t MaxFractionalDigits; // 0x414
	bool bAlwaysUsesDeltaSnap; // 0x418
	float Delta; // 0x41c
	float SliderExponent; // 0x420
	FSlateFontInfo Font; // 0x428
	ETextJustify Justification; // 0x480
	float MinDesiredWidth; // 0x484
	bool ClearKeyboardFocusOnCommit; // 0x488
	bool SelectAllTextOnCommit; // 0x489
	FSlateColor ForegroundColor; // 0x490
	FMulticastInlineDelegate OnValueChanged; // 0x4b8
	FMulticastInlineDelegate OnValueCommitted; // 0x4c8
	FMulticastInlineDelegate OnBeginSliderMovement; // 0x4d8
	FMulticastInlineDelegate OnEndSliderMovement; // 0x4e8
	char bOverride_MinValue : 1; // 0x4f8
	char bOverride_MaxValue : 1; // 0x4f8
	char bOverride_MinSliderValue : 1; // 0x4f8
	char bOverride_MaxSliderValue : 1; // 0x4f8
	float MinValue; // 0x4fc
	float MaxValue; // 0x500
	float MinSliderValue; // 0x504
	float MaxSliderValue; // 0x508
};

struct ULandscapeInfo : UObject {
	LazyObjectProperty LandscapeActor; // 0x28
	FGuid LandscapeGuid; // 0x44
	int32_t ComponentSizeQuads; // 0x54
	int32_t SubsectionSizeQuads; // 0x58
	int32_t ComponentNumSubsections; // 0x5c
	FVector DrawScale; // 0x60
	TArray<ALandscapeStreamingProxy*> Proxies; // 0x110
};

struct UInterpTrackMove : UInterpTrack {
	FInterpCurveVector PosTrack; // 0x70
	FInterpCurveVector EulerTrack; // 0x88
	FInterpLookupTrack LookupTrack; // 0xa0
	FName LookAtGroupName; // 0xb0
	float LinCurveTension; // 0xb8
	float AngCurveTension; // 0xbc
	char bUseQuatInterpolation : 1; // 0xc0
	char bShowArrowAtKeys : 1; // 0xc0
	char bDisableMovement : 1; // 0xc0
	char bShowTranslationOnCurveEd : 1; // 0xc0
	char bShowRotationOnCurveEd : 1; // 0xc0
	char bHide3DTrack : 1; // 0xc0
	EInterpTrackMoveRotMode RotMode; // 0xc4
};

struct UEOSCoreEcomQueryOwnershipToken : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UMaterialExpressionArctangentFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionArccosine : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UParticleModuleLight_Seeded : UParticleModuleLight {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct AElevatorM_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UBoxComponent* Box; // 0x228
	UStaticMeshComponent* Floor1; // 0x230
	UStaticMeshComponent* Floor2; // 0x238
	UStaticMeshComponent* Floor3; // 0x240
	UStaticMeshComponent* Floor4; // 0x248
	UStaticMeshComponent* Floor5; // 0x250
	UStaticMeshComponent* Panel; // 0x258
	UStaticMeshComponent* Cube4; // 0x260
	USceneComponent* DefaultSceneRoot; // 0x268
	TArray<UActorComponent*> Floors; // 0x270
	int32_t FloorToGo; // 0x280
	int32_t Floor; // 0x284
	AElevator_C* Elevator; // 0x288
};

struct UMotoSynthSource : UObject {
	bool bConvertTo8Bit; // 0x28
	float DownSampleFactor; // 0x2c
	FRuntimeFloatCurve RPMCurve; // 0x30
	TArray<float> SourceData; // 0xb8
	TArray<int16_t> SourceDataPCM; // 0xc8
	int32_t SourceSampleRate; // 0xd8
	TArray<FGrainTableEntry> GrainTable; // 0xe0
};

struct ASpectatorBeaconClient : AOnlineBeaconClient {
	FString DestSessionId; // 0x2e0
	FSpectatorReservation PendingReservation; // 0x2f0
	ESpectatorClientRequestType RequestType; // 0x368
	bool bPendingReservationSent; // 0x369
	bool bCancelReservation; // 0x36a
};

struct UDoppelLobby_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x2f8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x378
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x3a8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x458
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x4d8
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x508
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x5b8
	bool Reset?; // 0x658
};

struct UBorder : UContentWidget {
	EHorizontalAlignment HorizontalAlignment; // 0x120
	EVerticalAlignment VerticalAlignment; // 0x121
	char bShowEffectWhenDisabled : 1; // 0x122
	FLinearColor ContentColorAndOpacity; // 0x124
	FDelegate ContentColorAndOpacityDelegate; // 0x134
	FMargin Padding; // 0x144
	FSlateBrush Background; // 0x158
	FDelegate BackgroundDelegate; // 0x1e0
	FLinearColor BrushColor; // 0x1f0
	FDelegate BrushColorDelegate; // 0x200
	FVector2D DesiredSizeScale; // 0x210
	bool bFlipForRightToLeftFlowDirection; // 0x218
	FDelegate OnMouseButtonDownEvent; // 0x21c
	FDelegate OnMouseButtonUpEvent; // 0x22c
	FDelegate OnMouseMoveEvent; // 0x23c
	FDelegate OnMouseDoubleClickEvent; // 0x24c
};

struct UBTDecorator_Loop : UBTDecorator {
	int32_t NumLoops; // 0x68
	bool bInfiniteLoop; // 0x6c
	float InfiniteLoopTimeoutTime; // 0x70
};

struct UWBP_CategoryEntry_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ScoreAppearance_Anim; // 0x268
	UImage* Image_173; // 0x270
	UTextBlock* Text_CategoryName; // 0x278
	UTextBlock* Text_Score; // 0x280
	SurvCategory SurvCategoryType; // 0x288
	KillerCategory KillerCategotyType; // 0x289
	int32_t Score; // 0x28c
	bool Other?; // 0x290
	TArray<KillerCategory> KillerOtherCategories; // 0x298
	TArray<SurvCategory> SurvOtherCategories; // 0x2a8
	TArray<FText> KillerCategories; // 0x2b8
	TMap<int32_t, FText> SurvCategories; // 0x2c8
};

struct UEOSCoreStatsQueryStats : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct AEmitter : AActor {
	UParticleSystemComponent* ParticleSystemComponent; // 0x220
	char bDestroyOnSystemFinish : 1; // 0x228
	char bPostUpdateTickGroup : 1; // 0x228
	char bCurrentlyActive : 1; // 0x228
	FMulticastInlineDelegate OnParticleSpawn; // 0x230
	FMulticastInlineDelegate OnParticleBurst; // 0x240
	FMulticastInlineDelegate OnParticleDeath; // 0x250
	FMulticastInlineDelegate OnParticleCollide; // 0x260
};

struct UDistributionFloatUniform : UDistributionFloat {
	float Min; // 0x38
	float Max; // 0x3c
};

struct ULandscapeMeshCollisionComponent : ULandscapeHeightfieldCollisionComponent {
	FGuid MeshGuid; // 0x520
};

struct APrecomputedVisibilityOverrideVolume : AVolume {
	TArray<AActor*> OverrideVisibleActors; // 0x258
	TArray<AActor*> OverrideInvisibleActors; // 0x268
	TArray<FName> OverrideInvisibleLevels; // 0x278
};

struct UNiagaraDataInterfaceArrayFloat4 : UNiagaraDataInterfaceArray {
	TArray<FVector4> FloatData; // 0x50
};

struct UBTService_BlueprintBase : UBTService {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	char bShowPropertyDetails : 1; // 0x90
	char bShowEventDetails : 1; // 0x90
};

struct UWrapBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	bool bFillEmptySpace; // 0x48
	float FillSpanWhenLessThan; // 0x4c
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct AKnife_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UFMODAudioComponent* FmodAudio; // 0x228
	USphereComponent* Sphere1; // 0x230
	UNiagaraComponent* PN_ThrowKnife; // 0x238
	UStaticMeshComponent* StaticMesh; // 0x240
	USceneComponent* DefaultSceneRoot; // 0x248
	float RotationChanger_float_8E19C30041BC09E4F89BD699E125933B; // 0x250
	ETimelineDirection RotationChanger__Direction_8E19C30041BC09E4F89BD699E125933B; // 0x254
	UTimelineComponent* RotationChanger; // 0x258
	bool hit; // 0x260
	AKillerMasterBP_C* KillerRef; // 0x268
	bool Start; // 0x270
	FRotator Rotation; // 0x274
	FVector v3; // 0x280
	float Velocity; // 0x28c
	FVector RightVector; // 0x290
	UMaterialInstanceDynamic* KnifeMat; // 0x2a0
	float TransitionTime; // 0x2a8
	float TurnOffDuration; // 0x2ac
	float ErodeSubtractDef; // 0x2b0
	bool StopAnim?; // 0x2b4
	float Float1; // 0x2b8
	bool StopLinetrace?; // 0x2bc
	bool RotatorKnife; // 0x2bd
	float Relative Rotation Z (Yaw); // 0x2c0
	FVector Hit Location; // 0x2c4
	FRotator Relative Rotation; // 0x2d0
	bool Block; // 0x2dc
	bool transition; // 0x2dd
	float TurnOnDuration; // 0x2e0
	bool transited; // 0x2e4
};

struct UMaterialExpressionTextureCoordinate : UMaterialExpression {
	int32_t CoordinateIndex; // 0x40
	float UTiling; // 0x44
	float VTiling; // 0x48
	char UnMirrorU : 1; // 0x4c
	char UnMirrorV : 1; // 0x4c
};

struct UARTrackedImage : UARTrackedGeometry {
	UARCandidateImage* DetectedImage; // 0xf8
	FVector2D EstimatedSize; // 0x100
};

struct UInterpTrackFade : UInterpTrackFloatBase {
	char bPersistFade : 1; // 0x90
	char bFadeAudio : 1; // 0x90
	FLinearColor FadeColor; // 0x94
};

struct UMaterialExpressionAntialiasedTextureMask : UMaterialExpressionTextureSampleParameter2D {
	float Threshold; // 0x80
	ETextureColorChannel Channel; // 0x84
};

struct AWorldSettings : AInfo {
	int32_t VisibilityCellSize; // 0x228
	EVisibilityAggressiveness VisibilityAggressiveness; // 0x22c
	char bPrecomputeVisibility : 1; // 0x22d
	char bPlaceCellsOnlyAlongCameraTracks : 1; // 0x22d
	char bEnableWorldBoundsChecks : 1; // 0x22d
	char bEnableNavigationSystem : 1; // 0x22d
	char bEnableAISystem : 1; // 0x22d
	char bEnableWorldComposition : 1; // 0x22d
	char bUseClientSideLevelStreamingVolumes : 1; // 0x22d
	char bEnableWorldOriginRebasing : 1; // 0x22d
	char bWorldGravitySet : 1; // 0x22e
	char bGlobalGravitySet : 1; // 0x22e
	char bMinimizeBSPSections : 1; // 0x22e
	char bForceNoPrecomputedLighting : 1; // 0x22e
	char bHighPriorityLoading : 1; // 0x22e
	char bHighPriorityLoadingLocal : 1; // 0x22e
	char bOverrideDefaultBroadphaseSettings : 1; // 0x22e
	UNavigationSystemConfig* NavigationSystemConfig; // 0x230
	UNavigationSystemConfig* NavigationSystemConfigOverride; // 0x238
	float WorldToMeters; // 0x240
	float KillZ; // 0x244
	UDamageType* KillZDamageType; // 0x248
	float WorldGravityZ; // 0x250
	float GlobalGravityZ; // 0x254
	ADefaultPhysicsVolume* DefaultPhysicsVolumeClass; // 0x258
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x260
	AGameModeBase* DefaultGameMode; // 0x268
	AGameNetworkManager* GameNetworkManagerClass; // 0x270
	int32_t PackedLightAndShadowMapTextureSize; // 0x278
	FVector DefaultColorScale; // 0x27c
	float DefaultMaxDistanceFieldOcclusionDistance; // 0x288
	float GlobalDistanceFieldViewDistance; // 0x28c
	float DynamicIndirectShadowsSelfShadowingIntensity; // 0x290
	FReverbSettings DefaultReverbSettings; // 0x298
	FInteriorSettings DefaultAmbientZoneSettings; // 0x2b8
	float MonoCullingDistance; // 0x2dc
	USoundMix* DefaultBaseSoundMix; // 0x2e0
	float TimeDilation; // 0x2e8
	float MatineeTimeDilation; // 0x2ec
	float DemoPlayTimeDilation; // 0x2f0
	float MinGlobalTimeDilation; // 0x2f4
	float MaxGlobalTimeDilation; // 0x2f8
	float MinUndilatedFrameTime; // 0x2fc
	float MaxUndilatedFrameTime; // 0x300
	FBroadphaseSettings BroadphaseSettings; // 0x304
	APlayerState* Pauser; // 0x348
	TArray<FNetViewer> ReplicationViewers; // 0x350
	TArray<UAssetUserData*> AssetUserData; // 0x360
	APlayerState* PauserPlayerState; // 0x370
	int32_t MaxNumberOfBookmarks; // 0x378
	UBookmarkBase* DefaultBookmarkClass; // 0x380
	TArray<UBookmarkBase*> BookmarkArray; // 0x388
	UBookmarkBase* LastBookmarkClass; // 0x398
};

struct UDestructibleMesh : USkeletalMesh {
	FDestructibleParameters DefaultDestructibleParameters; // 0x398
	TArray<FFractureEffect> FractureEffects; // 0x420
};

struct UCheatManager : UObject {
	ADebugCameraController* DebugCameraControllerRef; // 0x28
	ADebugCameraController* DebugCameraControllerClass; // 0x30
};

struct UInterpTrackVectorBase : UInterpTrack {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UJoinSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct UBrushBuilder : UObject {
	FString BitmapFilename; // 0x28
	FString ToolTip; // 0x38
	char NotifyBadParams : 1; // 0x48
	TArray<FVector> Vertices; // 0x50
	TArray<FBuilderPoly> Polys; // 0x60
	FName Layer; // 0x70
	char MergeCoplanars : 1; // 0x78
};

struct UExponentialHeightFogComponent : USceneComponent {
	float FogDensity; // 0x1f8
	float FogHeightFalloff; // 0x1fc
	FExponentialHeightFogData SecondFogData; // 0x200
	FLinearColor FogInscatteringColor; // 0x20c
	UTextureCube* InscatteringColorCubemap; // 0x220
	float InscatteringColorCubemapAngle; // 0x228
	FLinearColor InscatteringTextureTint; // 0x22c
	float FullyDirectionalInscatteringColorDistance; // 0x23c
	float NonDirectionalInscatteringColorDistance; // 0x240
	float DirectionalInscatteringExponent; // 0x244
	float DirectionalInscatteringStartDistance; // 0x248
	FLinearColor DirectionalInscatteringColor; // 0x24c
	float FogMaxOpacity; // 0x25c
	float StartDistance; // 0x260
	float FogCutoffDistance; // 0x264
	bool bEnableVolumetricFog; // 0x268
	float VolumetricFogScatteringDistribution; // 0x26c
	FColor VolumetricFogAlbedo; // 0x270
	FLinearColor VolumetricFogEmissive; // 0x274
	float VolumetricFogExtinctionScale; // 0x284
	float VolumetricFogDistance; // 0x288
	float VolumetricFogStaticLightingScatteringIntensity; // 0x28c
	bool bOverrideLightColorsWithFogInscatteringColors; // 0x290
};

struct USynthComponentMoto : USynthComponent {
	UMotoSynthPreset* MotoSynthPreset; // 0x6c0
	float RPM; // 0x6c8
};

struct UATPCCameraModeScript_RotateActorToTarget : UATPCCameraModeScript {
	float RotationSpeed; // 0x40
};

struct UAREnvironmentCaptureProbe : UARTrackedGeometry {
	FVector Extent; // 0xf8
	UAREnvironmentCaptureProbeTexture* EnvironmentCaptureTexture; // 0x108
};

struct UMovieSceneMediaTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> MediaSections; // 0x80
};

struct UInputKeyDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputKeyDelegateBinding> InputKeyDelegateBindings; // 0x28
};

struct UCanvasPanelSlot : UPanelSlot {
	FAnchorData LayoutData; // 0x38
	bool bAutoSize; // 0x60
	int32_t ZOrder; // 0x64
};

struct UATPCFadeProps_C : UATPCCameraFadingObject {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe0
};

struct AEQSTestingPawn : ACharacter {
	UEnvQuery* QueryTemplate; // 0x4c0
	TArray<FEnvNamedValue> QueryParams; // 0x4c8
	TArray<FAIDynamicParam> QueryConfig; // 0x4d8
	float TimeLimitPerStep; // 0x4e8
	int32_t StepToDebugDraw; // 0x4ec
	EEnvQueryHightlightMode HighlightMode; // 0x4f0
	char bDrawLabels : 1; // 0x4f4
	char bDrawFailedItems : 1; // 0x4f4
	char bReRunQueryOnlyOnFinishedMove : 1; // 0x4f4
	char bShouldBeVisibleInGame : 1; // 0x4f4
	char bTickDuringGame : 1; // 0x4f4
	EEnvQueryRunMode QueryingMode; // 0x4f8
	FNavAgentProperties NavAgentProperties; // 0x500
};

struct USlateBrushAsset : UObject {
	FSlateBrush Brush; // 0x28
};

struct UGameplayTagsSettings : UGameplayTagsList {
	bool ImportTagsFromConfig; // 0x48
	bool WarnOnInvalidTags; // 0x49
	bool FastReplication; // 0x4a
	FString InvalidTagCharacters; // 0x50
	TArray<FGameplayTagCategoryRemap> CategoryRemapping; // 0x60
	TArray<FSoftObjectPath> GameplayTagTableList; // 0x70
	TArray<FGameplayTagRedirect> GameplayTagRedirects; // 0x80
	TArray<FName> CommonlyReplicatedTags; // 0x90
	int32_t NumBitsForContainerSize; // 0xa0
	int32_t NetIndexFirstBitSegment; // 0xa4
	TArray<FRestrictedConfigInfo> RestrictedConfigFiles; // 0xa8
};

struct UMovieSceneFolder : UObject {
	FName FolderName; // 0x28
	TArray<UMovieSceneFolder*> ChildFolders; // 0x30
	TArray<UMovieSceneTrack*> ChildMasterTracks; // 0x40
	TArray<FString> ChildObjectBindingStrings; // 0x50
};

struct USoundChat_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Fade_Anim; // 0x268
	UWidgetAnimation* ShowHideCD_Anim; // 0x270
	UImage* Image_102; // 0x278
	UImage* Image_BlackScreen; // 0x280
	UImage* Image_BlackScreen_CDFade; // 0x288
	UOverlay* OverlayParent; // 0x290
	UTextBlock* TextBlock_58; // 0x298
	UWBP_SoundChatMiniCooldDown_C* WBP_SoundChatMiniCooldDown; // 0x2a0
	UWidgetSwitcher* WidgetSwitcher_Circles; // 0x2a8
	FFMODEventInstance Sound; // 0x2b0
	bool SoundCommandMenuOpen?; // 0x2b8
	bool SecondMenuOpen?; // 0x2b9
	int32_t SelectedSound; // 0x2bc
	bool Open?; // 0x2c0
	APawn* Owner; // 0x2c8
	FVector2D InputVector; // 0x2d0
	bool InventoryMenuOpen?; // 0x2d8
	bool WidgetAcitve?; // 0x2d9
	bool IsCD; // 0x2da
	FTimerHandle HandlerStopListenKeys; // 0x2e0
	FTimerHandle HandlerCoolDown; // 0x2e8
	FMulticastInlineDelegate StartColdown; // 0x2f0
	USoundCommand_Radial_C* WidgetSoundCommand; // 0x300
	UInventorySurvCommand_Radial_C* WidgetInventory; // 0x308
};

struct UInterpTrackFloatParticleParam : UInterpTrackFloatBase {
	FName ParamName; // 0x90
};

struct UARPointComponent : UARComponent {
	FARPointUpdatePayload ReplicatedPayload; // 0x278
};

struct ULoudnessNRTSettings : UAudioSynesthesiaNRTSettings {
	float AnalysisPeriod; // 0x28
	float MinimumFrequency; // 0x2c
	float MaximumFrequency; // 0x30
	ELoudnessNRTCurveTypeEnum CurveType; // 0x34
	float NoiseFloorDb; // 0x38
};

struct UUniformInteger : UFieldNodeInt {
	int32_t Magnitude; // 0xb0
};

struct UGeometryCacheCodecRaw : UGeometryCacheCodecBase {
	int32_t DummyProperty; // 0x38
};

struct UGizmoPlaneTranslationParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	FVector2D Parameter; // 0xb0
	FGizmoVec2ParameterChange LastChange; // 0xb8
	FVector CurTranslationOrigin; // 0xc8
	FVector CurTranslationNormal; // 0xd4
	FVector CurTranslationAxisX; // 0xe0
	FVector CurTranslationAxisY; // 0xec
	FTransform InitialTransform; // 0x100
};

struct UVoipManagerComponent : UActorComponent {
	FMulticastInlineDelegate VoiceGenerated; // 0xb0
	FMulticastInlineDelegate PlayerTalking; // 0xc0
	FMulticastInlineDelegate PlayerStopTalking; // 0xd0
	float StopTalkingThreshold; // 0x16c
	bool bAutoSetConsoleVariables; // 0x170
	float SilenceDetectionThreshold; // 0x174
	float NoiseGateThreshold; // 0x178
	float VoiceBufferDelay; // 0x17c
};

struct AGraffitiActor_Hit_C : AGraffitiActor_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x248
};

struct USettingsSave_C : USaveGame {
	FText Graphiccommand; // 0x28
	FText PPCommand; // 0x40
	FText AACommand; // 0x58
	FText ShadowCommand; // 0x70
	FText TQCommand; // 0x88
	FText EQCommand; // 0xa0
	FText ResolutionCommand; // 0xb8
	FText ScreenCommand; // 0xd0
	FText BMCommand; // 0xe8
	FText VSyncCommand; // 0x100
	FText AAMCommand; // 0x118
	float SoundSettingsMain; // 0x130
	float SoundSettingsMusic; // 0x134
	float SoundSettingsSFX; // 0x138
	float Sensivity; // 0x13c
	float XAxis; // 0x140
	float YAxis; // 0x144
	float VoiceVolume; // 0x148
	float VoiceBoostVolume; // 0x14c
	float MusicBG; // 0x150
	bool IsVoiceChatMuted?; // 0x154
	bool InvertMouseY?; // 0x155
	FText MipBiasCommand; // 0x158
	FText PoolSizeCommand; // 0x170
	FText TQMaxAnisCommand; // 0x188
	float Gamma; // 0x1a0
};

struct UCommandlet : UObject {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UMovieSceneCameraCutTrack : UMovieSceneNameableTrack {
	bool bCanBlend; // 0x78
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct UParticleModuleTypeDataMesh : UParticleModuleTypeDataBase {
	UStaticMesh* Mesh; // 0x30
	float LODSizeScale; // 0x40
	char bUseStaticMeshLODs : 1; // 0x44
	char CastShadows : 1; // 0x44
	char DoCollisions : 1; // 0x44
	EMeshScreenAlignment MeshAlignment; // 0x45
	char bOverrideMaterial : 1; // 0x46
	char bOverrideDefaultMotionBlurSettings : 1; // 0x46
	char bEnableMotionBlur : 1; // 0x46
	FRawDistributionVector RollPitchYawRange; // 0x48
	EParticleAxisLock AxisLockOption; // 0x90
	char bCameraFacing : 1; // 0x91
	EMeshCameraFacingUpAxis CameraFacingUpAxisOption; // 0x92
	EMeshCameraFacingOptions CameraFacingOption; // 0x93
	char bApplyParticleRotationAsSpin : 1; // 0x94
	char bFaceCameraDirectionRatherThanPosition : 1; // 0x94
	char bCollisionsConsiderPartilceSize : 1; // 0x94
};

struct UGizmoConstantAxisSource : UObject {
	FVector Origin; // 0x30
	FVector Direction; // 0x3c
};

struct UGizmoTransformChangeStateTarget : UObject {
	TScriptInterface<IToolContextTransactionProvider> TransactionManager; // 0x50
};

struct UNiagaraDataInterfaceGrid3DCollection : UNiagaraDataInterfaceGrid3D {
	int32_t NumAttributes; // 0x100
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0x108
	ENiagaraGpuBufferFormat BufferFormat; // 0x128
};

struct USourceEffectSimpleDelayPreset : USoundEffectSourcePreset {
	FSourceEffectSimpleDelaySettings Settings; // 0xa8
};

struct USourceEffectFoldbackDistortionPreset : USoundEffectSourcePreset {
	FSourceEffectFoldbackDistortionSettings Settings; // 0x9c
};

struct ASurvParticleActor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UStaticMeshComponent* Mesh; // 0x228
	UNiagaraComponent* Niagara; // 0x230
	USceneComponent* DefaultSceneRoot; // 0x238
};

struct UPoseAsset : UAnimationAsset {
	FPoseDataContainer PoseContainer; // 0x80
	bool bAdditivePose; // 0x110
	int32_t BasePoseIndex; // 0x114
	FName RetargetSource; // 0x118
};

struct ABP_Lamp_Hanging_ON_C : AActor {
	URectLightComponent* RectLight1; // 0x220
	URectLightComponent* RectLight; // 0x228
	UStaticMeshComponent* SM_LampGym; // 0x230
};

struct UCurveLinearColor : UCurveBase {
	FRichCurve FloatCurves[0x4]; // 0x30
	float AdjustHue; // 0x230
	float AdjustSaturation; // 0x234
	float AdjustBrightness; // 0x238
	float AdjustBrightnessCurve; // 0x23c
	float AdjustVibrance; // 0x240
	float AdjustMinAlpha; // 0x244
	float AdjustMaxAlpha; // 0x248
};

struct UNodeMappingContainer : UObject {
	TMap<FName, FNodeItem> SourceItems; // 0x28
	TMap<FName, FNodeItem> TargetItems; // 0x78
	TMap<FName, FName> SourceToTarget; // 0xc8
	TSoftObjectPtr<UObject> SourceAsset; // 0x118
	TSoftObjectPtr<UObject> TargetAsset; // 0x140
};

struct USkeletalMeshSimplificationSettings : UDeveloperSettings {
	FName SkeletalMeshReductionModuleName; // 0x38
};

struct UGameNetworkManagerSettings : UObject {
	int32_t MinDynamicBandwidth; // 0x28
	int32_t MaxDynamicBandwidth; // 0x2c
	int32_t TotalNetBandwidth; // 0x30
	int32_t BadPingThreshold; // 0x34
	char bIsStandbyCheckingEnabled : 1; // 0x38
	float StandbyRxCheatTime; // 0x3c
	float StandbyTxCheatTime; // 0x40
	float PercentMissingForRxStandby; // 0x44
	float PercentMissingForTxStandby; // 0x48
	float PercentForBadPing; // 0x4c
	float JoinInProgressStandbyWaitTime; // 0x50
};

struct USoundNodeDelay : USoundNode {
	float DelayMin; // 0x48
	float DelayMax; // 0x4c
};

struct UWBP_DetailedFriendList_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ChangeContent_Anim; // 0x268
	UButton* Button_Friends; // 0x270
	UButton* Button_Invites; // 0x278
	UButton* Button_Search; // 0x280
	UEditableTextBox* EditableTextBox_Hint; // 0x288
	UEditableTextBox* EditableTextBox_SearchLine; // 0x290
	UImage* Image; // 0x298
	UImage* Image_105; // 0x2a0
	UImage* Image_305; // 0x2a8
	UImage* Image_396; // 0x2b0
	UImage* Image_BG; // 0x2b8
	UImage* Image_FriendsBtnBG; // 0x2c0
	UImage* Image_InvetesBtnBG; // 0x2c8
	UTextBlock* Text_InvitesBtn; // 0x2d0
	UTextBlock* TextBlock_FriendsBtn; // 0x2d8
	UWBP_FriendsComboBox_C* WBP_FriendsComboBox_Offline; // 0x2e0
	UWBP_FriendsComboBox_C* WBP_FriendsComboBox_Online; // 0x2e8
	UWBP_FriendsComboBox_C* WBP_FriendsComboBox_Search; // 0x2f0
	UWidgetSwitcher* WidgetSwitcher_Content; // 0x2f8
	TArray<FSteamFriend> Friends; // 0x300
	int32_t C_FRIENDS_PAGE; // 0x310
	int32_t C_INVITES_PAGE; // 0x314
	FMulticastInlineDelegate OnHide; // 0x318
};

struct UMineSpell_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	bool SkillActivated?; // 0xf0
	TArray<AMine_C*> Mines; // 0xf8
	int32_t Count; // 0x108
};

struct UInterpTrackFloatAnimBPParam : UInterpTrackFloatBase {
	UObject* AnimBlueprintClass; // 0x90
	UAnimInstance* AnimClass; // 0x98
	FName ParamName; // 0xa0
};

struct USourceEffectStereoDelayPreset : USoundEffectSourcePreset {
	FSourceEffectStereoDelaySettings Settings; // 0xb4
};

struct UTextPropertyTestObject : UObject {
	FText DefaultedText; // 0x28
	FText UndefaultedText; // 0x40
	FText TransientText; // 0x58
};

struct AGlueOfJarItemsBP_Common_C : AItemsBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
};

struct UActorChannel : UChannel {
	AActor* Actor; // 0x70
	TArray<UObject*> CreateSubObjects; // 0x160
};

struct UMaterialExpressionArccosineFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UCameraShakeBase : UObject {
	bool bSingleInstance; // 0x28
	float ShakeScale; // 0x2c
	APlayerCameraManager* CameraManager; // 0x30
};

struct UEOSCoreEcomQueryOwnership : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UMovieSceneSubTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UAmbisonicsEncodingSettings : USoundfieldEncodingSettingsBase {
	int32_t AmbisonicsOrder; // 0x28
};

struct ALevelSequenceActor : AActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x230
	ULevelSequencePlayer* SequencePlayer; // 0x248
	FSoftObjectPath LevelSequence; // 0x250
	FLevelSequenceCameraSettings CameraSettings; // 0x268
	ULevelSequenceBurnInOptions* BurnInOptions; // 0x270
	UMovieSceneBindingOverrides* BindingOverrides; // 0x278
	char bAutoPlay : 1; // 0x280
	char bOverrideInstanceData : 1; // 0x280
	char bReplicatePlayback : 1; // 0x280
	UObject* DefaultInstanceData; // 0x288
	ULevelSequenceBurnIn* BurnInInstance; // 0x290
	bool bShowBurnin; // 0x298
};

struct UPostProcessComponent : USceneComponent {
	FPostProcessSettings Settings; // 0x200
	float Priority; // 0x750
	float BlendRadius; // 0x754
	float BlendWeight; // 0x758
	char bEnabled : 1; // 0x75c
	char bUnbound : 1; // 0x75c
};

struct UCoolDownWBP_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* HUD_JumpOut_Curve; // 0x268
	UWidgetAnimation* HUD_JumpIn; // 0x270
	UCanvasPanel* CanvasPanel_1; // 0x278
	UHorizontalBox* HorBox_Spy; // 0x280
	UHorizontalBox* HorBox_Spy_Middle; // 0x288
	UImage* Image_136; // 0x290
	UTextBlock* TextAbility1; // 0x298
	UTextBlock* TextAbility2; // 0x2a0
	UTextBlock* TextBlock_106; // 0x2a8
	UHorizontalBox* VerticalBox_60; // 0x2b0
	float CoolDownTime1; // 0x2b8
	float CurrentTime1; // 0x2bc
	float CoolDownTime2; // 0x2c0
	float CurrentTime2; // 0x2c4
	bool Ability1Use?; // 0x2c8
	bool Ability2Use?; // 0x2c9
	int32_t Ability1; // 0x2cc
	int32_t Ability2; // 0x2d0
	FText textAbility_2; // 0x2d8
	FText textAbility_3; // 0x2f0
	FLinearColor NewVar_1; // 0x308
	UObject* NewVar_2; // 0x318
	FName AbilityName1; // 0x320
	FName AbilityName2; // 0x328
	TArray<FString> textArray; // 0x330
	UIconAbilityCooldownWBP_C* NewVar_3; // 0x340
	TArray<UIconAbilityCooldownWBP_C*> AbilityIconsRefs; // 0x348
	bool abilityUsed?; // 0x358
	FString AbilityNameUse; // 0x360
	FS_GameSettings GS; // 0x370
};

struct UVaRestSubsystem : UEngineSubsystem {
	TMap<UVaRestRequestJSON*, FVaRestCallResponse> RequestMap; // 0x30
};

struct UMovieSceneEasingExternalCurve : UObject {
	UCurveFloat* Curve; // 0x30
};

struct UParticleModuleSize_Seeded : UParticleModuleSize {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct UDatasmithStaticMeshIFCImportData : UDatasmithStaticMeshImportData {
	FString SourceGlobalId; // 0x28
};

struct UMaterialExpressionMin : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct AEndGameRenderMesh_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USceneCaptureComponent2D* SceneCaptureComponent2D; // 0x228
	USpringArmComponent* SpringArm; // 0x230
	UChildActorComponent* ChildActor; // 0x238
	USceneComponent* DefaultSceneRoot; // 0x240
};

struct UInterpTrackInstDirector : UInterpTrackInst {
	AActor* OldViewTarget; // 0x28
};

struct UEnvQueryTest_Project : UEnvQueryTest {
	FEnvTraceData ProjectionData; // 0x1f8
};

struct USoundNodeBranch : USoundNode {
	FName BoolParameterName; // 0x48
};

struct UWBP_LootViewerUI_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_CreateGame; // 0x268
	UHorizontalBox* HorizontalBox_Dublicate; // 0x270
	UImage* Image_73; // 0x278
	UImage* Image_ArrowLeft; // 0x280
	UImage* Image_ArrowRight; // 0x288
	UImage* Image_LMB; // 0x290
	UImage* Image_MouseWheel; // 0x298
	UTextBlock* Text_CharName; // 0x2a0
	UTextBlock* Text_LootRarity; // 0x2a8
	UTextBlock* Text_LootType; // 0x2b0
	UTextBlock* TextBlock_Equip; // 0x2b8
	E_LootboxType Lootbox Type; // 0x2c0
	Rarity Rarity; // 0x2c1
	FS_LootBoxSkin Lootbox Info; // 0x2c8
	bool ButtonFocused; // 0x2f8
	FButtonStyle DefaultStyle; // 0x300
};

struct UBTTask_FinishWithResult : UBTTaskNode {
	EBTNodeResult Result; // 0x70
};

struct UMovieSceneAudioSection : UMovieSceneSection {
	USoundBase* Sound; // 0xe8
	FFrameNumber StartFrameOffset; // 0xf0
	float StartOffset; // 0xf4
	float AudioStartTime; // 0xf8
	float AudioDilationFactor; // 0xfc
	float AudioVolume; // 0x100
	FMovieSceneFloatChannel SoundVolume; // 0x108
	FMovieSceneFloatChannel PitchMultiplier; // 0x1a8
	FMovieSceneActorReferenceData AttachActorData; // 0x248
	bool bLooping; // 0x2f8
	bool bSuppressSubtitles; // 0x2f9
	bool bOverrideAttenuation; // 0x2fa
	USoundAttenuation* AttenuationSettings; // 0x300
	FDelegate OnQueueSubtitles; // 0x308
	FMulticastInlineDelegate OnAudioFinished; // 0x318
	FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x328
};

struct UGeometryCacheCodecBase : UObject {
	TArray<int32_t> TopologyRanges; // 0x28
};

struct ABP_PartImp_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UDecalComponent* decal; // 0x228
	UNiagaraComponent* NiagaraCompnent; // 0x230
	USceneComponent* DefaultSceneRoot; // 0x238
	bool IsHit; // 0x240
	int32_t Surface_Type; // 0x244
	TArray<UNiagaraSystem*> VFX; // 0x248
	FHitResult Hit Information; // 0x258
	AKillerMasterBP_C* Actor Information; // 0x2e8
	int32_t NewVar_1; // 0x2f0
	TMap<UPhysicalMaterial*, int32_t> Phys Mat; // 0x2f8
	bool NewVar_2; // 0x348
	bool NewVar_3; // 0x349
	bool Condition; // 0x34a
};

struct UNavModifierComponent : UNavRelevantComponent {
	UNavArea* AreaClass; // 0xe0
	FVector FailsafeExtent; // 0xe8
	char bIncludeAgentHeight : 1; // 0xf4
};

struct UEditableTextBox : UWidget {
	FText Text; // 0x108
	FDelegate TextDelegate; // 0x120
	FEditableTextBoxStyle WidgetStyle; // 0x130
	USlateWidgetStyleAsset* Style; // 0x928
	FText HintText; // 0x930
	FDelegate HintTextDelegate; // 0x948
	FSlateFontInfo Font; // 0x958
	FLinearColor ForegroundColor; // 0x9b0
	FLinearColor BackgroundColor; // 0x9c0
	FLinearColor ReadOnlyForegroundColor; // 0x9d0
	bool IsReadOnly; // 0x9e0
	bool IsPassword; // 0x9e1
	float MinimumDesiredWidth; // 0x9e4
	FMargin Padding; // 0x9e8
	bool IsCaretMovedWhenGainFocus; // 0x9f8
	bool SelectAllTextWhenFocused; // 0x9f9
	bool RevertTextOnEscape; // 0x9fa
	bool ClearKeyboardFocusOnCommit; // 0x9fb
	bool SelectAllTextOnCommit; // 0x9fc
	bool AllowContextMenu; // 0x9fd
	EVirtualKeyboardType KeyboardType; // 0x9fe
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x9ff
	EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0xa00
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xa01
	ETextJustify Justification; // 0xa02
	FShapedTextOptions ShapedTextOptions; // 0xa03
	FMulticastInlineDelegate OnTextChanged; // 0xa08
	FMulticastInlineDelegate OnTextCommitted; // 0xa18
};

struct ACharacter : APawn {
	USkeletalMeshComponent* Mesh; // 0x280
	UCharacterMovementComponent* CharacterMovement; // 0x288
	UCapsuleComponent* CapsuleComponent; // 0x290
	FBasedMovementInfo BasedMovement; // 0x298
	FBasedMovementInfo ReplicatedBasedMovement; // 0x2c8
	float AnimRootMotionTranslationScale; // 0x2f8
	FVector BaseTranslationOffset; // 0x2fc
	FQuat BaseRotationOffset; // 0x310
	float ReplicatedServerLastTransformUpdateTimeStamp; // 0x320
	float ReplayLastTransformUpdateTimeStamp; // 0x324
	char ReplicatedMovementMode; // 0x328
	bool bInBaseReplication; // 0x329
	float CrouchedEyeHeight; // 0x32c
	char bIsCrouched : 1; // 0x330
	char bProxyIsJumpForceApplied : 1; // 0x330
	char bPressedJump : 1; // 0x330
	char bClientUpdating : 1; // 0x330
	char bClientWasFalling : 1; // 0x330
	char bClientResimulateRootMotion : 1; // 0x330
	char bClientResimulateRootMotionSources : 1; // 0x330
	char bSimGravityDisabled : 1; // 0x330
	char bClientCheckEncroachmentOnNetUpdate : 1; // 0x331
	char bServerMoveIgnoreRootMotion : 1; // 0x331
	char bWasJumping : 1; // 0x331
	float JumpKeyHoldTime; // 0x334
	float JumpForceTimeRemaining; // 0x338
	float ProxyJumpForceStartedTime; // 0x33c
	float JumpMaxHoldTime; // 0x340
	int32_t JumpMaxCount; // 0x344
	int32_t JumpCurrentCount; // 0x348
	int32_t JumpCurrentCountPreJump; // 0x34c
	FMulticastInlineDelegate OnReachedJumpApex; // 0x358
	FMulticastInlineDelegate MovementModeChangedDelegate; // 0x378
	FMulticastInlineDelegate OnCharacterMovementUpdated; // 0x388
	FRootMotionSourceGroup SavedRootMotion; // 0x398
	FRootMotionMovementParams ClientRootMotionParams; // 0x3d0
	TArray<FSimulatedRootMotionReplicatedMove> RootMotionRepMoves; // 0x410
	FRepRootMotionMontage RepRootMotion; // 0x420
};

struct UMaterialExpressionMaterialFunctionCall : UMaterialExpression {
	UMaterialFunctionInterface* MaterialFunction; // 0x40
	FMaterialParameterInfo FunctionParameterInfo; // 0x48
};

struct UProceduralFoliageTile : UObject {
	UProceduralFoliageSpawner* FoliageSpawner; // 0x28
	TArray<FProceduralFoliageInstance> InstancesArray; // 0xd0
};

struct USG_Ban_C : USaveGame {
	FDateTime DateTime; // 0x28
	FTimespan Duration; // 0x30
};

struct USoundSubmix : USoundSubmixWithParentBase {
	char bMuteWhenBackgrounded : 1; // 0x40
	TArray<USoundEffectSubmixPreset*> SubmixEffectChain; // 0x48
	USoundfieldEncodingSettingsBase* AmbisonicsPluginSettings; // 0x58
	int32_t EnvelopeFollowerAttackTime; // 0x60
	int32_t EnvelopeFollowerReleaseTime; // 0x64
	EGainParamMode GainMode; // 0x68
	float OutputVolume; // 0x6c
	float WetLevel; // 0x70
	float DryLevel; // 0x74
	FMulticastInlineDelegate OnSubmixRecordedFileDone; // 0x78
};

struct UEOSCoreLobbyQueryInvites : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UNiagaraDataInterfaceVolumeTexture : UNiagaraDataInterface {
	UVolumeTexture* Texture; // 0x38
};

struct APC_MainMenu_C : APC_PropnightMainMenu {
	FPointerToUberGraphFrame UberGraphFrame; // 0x5c0
	UBP_BanManager_C* BP_BanManager; // 0x5c8
	UBP_PC_MenuPlayfabCustomGames_C* BP_PC_MenuPlayfabCustomGames; // 0x5d0
	UBP_PC_MenuPlayfab_C* BP_PC_MenuPlayfab; // 0x5d8
	UBP_HTTP_Wrapper_C* BP_HTTP_Wrapper; // 0x5e0
	FString PlayFabTitleID; // 0x5e8
	FString LoginDataSlotName; // 0x5f8
	FString ID; // 0x608
	bool IsLoggedIn; // 0x618
	bool IsBusy; // 0x619
	UObject* ServerListReq; // 0x620
	FString BuildId; // 0x628
	FString Region; // 0x638
	UObject* ServerListResponse; // 0x648
	bool HasActiveServer; // 0x650
	FString ActiveSessionID; // 0x658
	FString Address; // 0x668
	UObject* ServerDetailsRequest; // 0x678
	UObject* ServerDetailsResponse; // 0x680
	FString Opaopa; // 0x688
	TArray<FBlueprintSessionResult> Sessions; // 0x698
	FString SaveNameData; // 0x6a8
	USaveGame* UserDataLocal; // 0x6b8
	bool Logined; // 0x6c0
	AMainMenuCameraActor_C* CameraActor; // 0x6c8
	int32_t Tab; // 0x6d0
	FString ServerId; // 0x6d8
	bool IsCreatingServer; // 0x6e8
	int32_t AutoJoinAttempts; // 0x6ec
	bool IsAutoConnect; // 0x6f0
	bool IsSearching; // 0x6f1
	TArray<FPingQoSInfo> LastPingQoSResult; // 0x6f8
	FMulticastInlineDelegate OnPlayfabReady; // 0x708
	FMulticastInlineDelegate OnMatchFoundEvent; // 0x718
	bool IsExit; // 0x728
	FString stringCheat; // 0x730
	bool IsPlayfabBackend; // 0x740
	UVaRestRequestJSON* VaRestRequest; // 0x748
	AActor* lootbox; // 0x750
	FMulticastInlineDelegate OnBeginSteamCheck; // 0x758
	FMulticastInlineDelegate OnBeginLoginPlayfab; // 0x768
	FMulticastInlineDelegate OnSteamCheckError; // 0x778
	bool BlockESC; // 0x788
	int32_t SearchRole; // 0x78c
};

struct USequenceCameraShakeSequencePlayer : UObject {
	UObject* BoundObjectOverride; // 0x480
	UMovieSceneSequence* Sequence; // 0x488
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x490
};

struct UUserDefinedCaptureProtocol : UMovieSceneImageCaptureProtocolBase {
	UWorld* World; // 0x58
};

struct USurvPropDestruction_C : USurvivorSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
	bool CD?; // 0x100
};

struct AKillerMesh_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USkeletalMeshComponent* SkeletalMesh; // 0x228
	USceneComponent* DefaultSceneRoot; // 0x230
	bool Tutorial?; // 0x238
	float TransitionTime; // 0x23c
	float TurnOffDuration; // 0x240
	float ErodeSubtractDef; // 0x244
	float TurnOnDuration; // 0x248
	UMaterialInstanceDynamic* KillerDynMat1; // 0x250
	UMaterialInstanceDynamic* KillerDynMat2; // 0x258
	UMaterialInstanceDynamic* KillerDynMat3; // 0x260
	UMaterialInstanceDynamic* KillerDynMat4; // 0x268
	UMaterialInstanceDynamic* KillerDynMat5; // 0x270
	float Float1; // 0x278
	bool TransitionOff; // 0x27c
	bool TransitionOn; // 0x27d
	bool On?; // 0x27e
	TArray<UMaterialInstanceDynamic*> arrayDynMatInst; // 0x280
	AKnife_C* KnifeRef; // 0x290
	UMaterialInstanceDynamic* KillerDynMat6; // 0x298
};

struct UPlayerScoreComponentButtonRep_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Click_Anim; // 0x268
	UWidgetAnimation* Hover_Anim; // 0x270
	UImage* Image_Icon_Unpressed; // 0x278
	FMulticastInlineDelegate Clicked; // 0x280
	bool IsEnabled; // 0x290
};

struct UParticleModuleTypeDataGpu : UParticleModuleTypeDataBase {
	FGPUSpriteEmitterInfo EmitterInfo; // 0x30
	FGPUSpriteResourceData ResourceData; // 0x2b0
	float CameraMotionBlurAmount; // 0x410
	char bClearExistingParticlesOnInit : 1; // 0x414
};

struct UBTComposite_SimpleParallel : UBTCompositeNode {
	EBTParallelMode FinishMode; // 0x90
};

struct UInterpTrackInstMove : UInterpTrackInst {
	FVector ResetLocation; // 0x28
	FRotator ResetRotation; // 0x34
};

struct USoundAttenuation : UObject {
	FSoundAttenuationSettings Attenuation; // 0x28
};

struct USoundBase : UObject {
	USoundClass* SoundClassObject; // 0x30
	char bDebug : 1; // 0x38
	char bOverrideConcurrency : 1; // 0x38
	char bOutputToBusOnly : 1; // 0x38
	char bHasDelayNode : 1; // 0x38
	char bHasConcatenatorNode : 1; // 0x38
	char bBypassVolumeScaleForPriority : 1; // 0x38
	EVirtualizationMode VirtualizationMode; // 0x39
	TSet<USoundConcurrency*> ConcurrencySet; // 0x90
	FSoundConcurrencySettings ConcurrencyOverrides; // 0xe0
	float Duration; // 0x108
	float MaxDistance; // 0x10c
	float TotalSamples; // 0x110
	float Priority; // 0x114
	USoundAttenuation* AttenuationSettings; // 0x118
	FSoundModulationDefaultRoutingSettings ModulationSettings; // 0x120
	USoundSubmixBase* SoundSubmixObject; // 0x168
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x170
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x180
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x188
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x198
	TArray<UAssetUserData*> AssetUserData; // 0x1a8
};

struct UVampireKillerWalkGrabbedShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UTextureRenderTarget : UTexture {
	float TargetGamma; // 0xd8
};

struct UMovieSceneFloatSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xf0
};

struct UEditableGameplayTagQueryExpression_NoTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UParticleModuleRotationRate_Seeded : UParticleModuleRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UDatasmithSkyLightComponentTemplate : UDatasmithObjectTemplate {
	ESkyLightSourceType SourceType; // 0x30
	int32_t CubemapResolution; // 0x34
	UTextureCube* Cubemap; // 0x38
};

struct UMovieSceneFadeSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe8
	FLinearColor FadeColor; // 0x188
	char bFadeAudio : 1; // 0x198
};

struct UMaterialExpressionSpriteTextureSampler : UMaterialExpressionTextureSampleParameter2D {
	bool bSampleAdditionalTextures; // 0x80
	int32_t AdditionalSlotIndex; // 0x84
	FText SlotDisplayName; // 0x88
};

struct UMaterialExpressionDepthOfFieldFunction : UMaterialExpression {
	EDepthOfFieldFunctionValue FunctionValue; // 0x40
	FExpressionInput Depth; // 0x44
};

struct UGizmoRectangleComponent : UGizmoBaseComponent {
	FVector DirectionX; // 0x460
	FVector DirectionY; // 0x46c
	float OffsetX; // 0x478
	float OffsetY; // 0x47c
	float LengthX; // 0x480
	float LengthY; // 0x484
	float Thickness; // 0x488
	char SegmentFlags; // 0x48c
};

struct UGridPathFollowingComponent : UPathFollowingComponent {
	UNavLocalGridManager* GridManager; // 0x250
};

struct UUdpMessagingSettings : UObject {
	bool EnabledByDefault; // 0x28
	bool EnableTransport; // 0x29
	bool bAutoRepair; // 0x2a
	bool bStopServiceWhenAppDeactivates; // 0x2b
	FString UnicastEndpoint; // 0x30
	FString MulticastEndpoint; // 0x40
	EUdpMessageFormat MessageFormat; // 0x50
	char MulticastTimeToLive; // 0x51
	TArray<FString> StaticEndpoints; // 0x58
	bool EnableTunnel; // 0x68
	FString TunnelUnicastEndpoint; // 0x70
	FString TunnelMulticastEndpoint; // 0x80
	TArray<FString> RemoteTunnelEndpoints; // 0x90
};

struct ADoppelganger_C : AKillerMasterBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x1318
	UStaticMeshComponent* PlayerStaticMesh; // 0x1320
	UWidgetComponent* NicknameWidget_1; // 0x1328
	UWidgetComponent* SurvRoleWidget; // 0x1330
	UChildActorComponent* PropFPPCamera; // 0x1338
	USpringArmComponent* PropArm; // 0x1340
	UFMODAudioComponent* FMODHealSound; // 0x1348
	UBoxComponent* InteractBox; // 0x1350
	USkeletalMeshComponent* KnifeFPP; // 0x1358
	UNiagaraComponent* Niagara; // 0x1360
	USkeletalMeshComponent* knife; // 0x1368
	UFMODAudioComponent* FMODHit; // 0x1370
	UFMODAudioComponent* FMODAudio2_1; // 0x1378
	UDoppelgangerSpell2_C* DoppelgangerSpell2; // 0x1380
	UDoppelgangerSpell1_C* DoppelgangerSpell1; // 0x1388
	USceneComponent* DefaultPointProp; // 0x1390
	UFMODAudioComponent* FMODPropLoopAudio; // 0x1398
	UFMODAudioComponent* FMODPropHitAudio; // 0x13a0
	USphereComponent* StaticMeshContainer; // 0x13a8
	float Timeline_6_0_Alpha_149ED0024B960B6929F17AB7BFC03992; // 0x13b0
	ETimelineDirection Timeline_6_0__Direction_149ED0024B960B6929F17AB7BFC03992; // 0x13b4
	UTimelineComponent* Timeline_6_1; // 0x13b8
	float Timeline_2_0_Jump_72A69D1F471F3505FB8E119B5DADA186; // 0x13c0
	ETimelineDirection Timeline_2_0__Direction_72A69D1F471F3505FB8E119B5DADA186; // 0x13c4
	UTimelineComponent* Timeline_2_1; // 0x13c8
	float Timeline_1_0_Lerp_DE93363644F27A278A6844B4BC25415F; // 0x13d0
	ETimelineDirection Timeline_1_0__Direction_DE93363644F27A278A6844B4BC25415F; // 0x13d4
	UTimelineComponent* Timeline_1_1; // 0x13d8
	AActor* CalculateRayHitActor; // 0x13e0
	AActor* TempCalculateRay_1; // 0x13e8
	FVector TempVector; // 0x13f0
	FPropData PropData; // 0x1400
	bool StartRotate?; // 0x14a0
	float PhysicsTickDeltaTime; // 0x14a4
	FVector forwardVector; // 0x14a8
	FVector RightVector; // 0x14b4
	FRotator AxisRotator; // 0x14c0
	float PropSpeed; // 0x14cc
	float LerpAlpha; // 0x14d0
	bool StaticHit?; // 0x14d4
	bool Start?; // 0x14d5
	bool EndJump?; // 0x14d6
	float DeltaTime_1; // 0x14d8
	bool ImProp?; // 0x14dc
	bool GetPropReloading?; // 0x14dd
	bool GetPersonReloading?; // 0x14de
	AActor* NewOutline; // 0x14e0
	UMaterialInstanceDynamic* MaterialOutline_1; // 0x14e8
	FLinearColor DefaultColorOutline; // 0x14f0
	AActor* OldOutline; // 0x1500
	float DefaultCapsuleRadius; // 0x1508
	float DefaultCapsuleHalfHeight; // 0x150c
	float RotateInterpSpeed; // 0x1510
	bool JumpButtonPressed?; // 0x1514
	bool SecondJumpProp?; // 0x1515
	float JumpAlpha; // 0x1518
	FVector JumpVector; // 0x151c
	bool ImSurv?; // 0x1528
	TArray<APS_PropHunt_C*> PlayerStates; // 0x1530
	bool PropSoundActive?; // 0x1540
	float ImpulseThreshold; // 0x1544
	bool StartRotatePropSoundActive?; // 0x1548
	float LastCapsuleRadius; // 0x154c
	float LastCapsuleHalfHeight; // 0x1550
	bool SchoolBell?; // 0x1554
	FRotator PropCorrectionRotation; // 0x1558
	bool StopMoveProp?; // 0x1564
	bool FakeAlarmAnim?; // 0x1565
	bool FakeHealingAnim?; // 0x1566
	FText SavedNickname; // 0x1568
	bool Move?; // 0x1580
	AActor* Alarm; // 0x1588
	bool FakeHealing?; // 0x1590
	FMulticastInlineDelegate IsProp; // 0x1598
	SurvChars survChar; // 0x15a8
	FVector ImpactPoint; // 0x15ac
	bool WallJump?; // 0x15b8
	FTransform ParticleTransform; // 0x15c0
	FVector OldCharPos; // 0x15f0
	FVector OldWidgetPos; // 0x15fc
	TArray<AActor*> NicknamePropActorsIgnore; // 0x1608
	float PropDistance; // 0x1618
	bool StaminaActive?; // 0x161c
	bool PressedRun?; // 0x161d
	bool SlowIncrease?; // 0x161e
	float CurrentStamina; // 0x1620
	float StaminaIncreaseAmountValue; // 0x1624
	float MaxStamina; // 0x1628
	bool ZeroStamina?; // 0x162c
	float StaminaDecreaseAmountValue; // 0x1630
	float StaminaJumpAmountValue; // 0x1634
	float PropMaxTimer; // 0x1638
	float PropCurrentTimer; // 0x163c
	float PropTempTimer; // 0x1640
	FVector Temp2Vector; // 0x1644
	FVector Temp3Vector; // 0x1650
	FVector Temp4Vector; // 0x165c
	bool TempBool; // 0x1668
	TArray<FVector> SavedPoints; // 0x1670
	float TempFloat; // 0x1680
	float TempFloat2; // 0x1684
	FRotator TempRotation; // 0x1688
	FRotator TempRotation2; // 0x1694
	float TempFloat3; // 0x16a0
	float PropCDTimer; // 0x16a4
	bool JumpEndPressE?; // 0x16a8
	bool Capsule_TransormingSurv?; // 0x16a9
	bool CustomAttackBlock?; // 0x16aa
	bool InteractPressed?; // 0x16ab
	bool cdProp; // 0x16ac
	bool Chair?; // 0x16ad
	bool Reincarnaiting?; // 0x16ae
	float MaxZToCheck; // 0x16b0
	bool RotateBlock?; // 0x16b4
	TArray<AActor*> Actors to Ignore; // 0x16b8
};

struct UWBP_MVPScreen_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Fade_Anim; // 0x268
	UImage* Image_50; // 0x270
	UImage* Image_60; // 0x278
	UW_Banner_C* W_Banner_Surv1; // 0x280
	UW_Banner_C* W_Banner_Surv2; // 0x288
	UW_Banner_C* W_Banner_Surv3; // 0x290
	UW_Banner_C* W_Banner_Surv4; // 0x298
	TMap<FString, UW_Banner_C*> SurvSlots; // 0x2a0
	TArray<UW_Banner_C*> UseBanner; // 0x2f0
};

struct AItemsBPHand_C : AActor {
	UStaticMeshComponent* Cube; // 0x220
	ItemType ItemTypeVar; // 0x228
	Rarity Rarity; // 0x229
	int32_t Charges; // 0x22c
	bool Infinity?; // 0x230
};

struct UAstral_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	float Timer; // 0xf0
	bool Casted?; // 0xf4
	FPostProcessSettings postProcessMonochrome; // 0x100
	FPostProcessSettings postProcessNormal; // 0x650
	float TransitionTime; // 0xba0
	float TurnOnDuration; // 0xba4
	float TurnOffDuration; // 0xba8
	float TurnOffAttackDuration; // 0xbac
	float ErodeSubtractDef; // 0xbb0
	UMaterialInstanceDynamic* KillerDynMat1; // 0xbb8
	UMaterialInstanceDynamic* KillerDynMat2; // 0xbc0
	UMaterialInstanceDynamic* KillerDynMat3; // 0xbc8
	float Float1; // 0xbd0
	bool TransitionOn; // 0xbd4
	bool TransitionOff; // 0xbd5
	UMaterialInstanceDynamic* KillerDynMatInvis; // 0xbd8
	UMaterialInstanceDynamic* KillerDynMatInvisFPP; // 0xbe0
	float InvisRefractionTPP; // 0xbe8
	float InvisRefractionFPP; // 0xbec
	float InvisRefractionZero; // 0xbf0
	UMaterialInstanceDynamic* KillerDynMatFPP; // 0xbf8
	bool IsAfterAttack; // 0xc00
	UMaterialInstanceDynamic* HamDynMatFPP; // 0xc08
	UMaterialInstanceDynamic* HamDynMatInvisFPP; // 0xc10
	UMaterialInstanceDynamic* KillerDynMat4; // 0xc18
	UMaterialInstanceDynamic* Ham Mat Tpp; // 0xc20
	UMaterialInstanceDynamic* HamDynInvisTPP; // 0xc28
	bool Keymaster; // 0xc30
};

struct UInterpTrackAnimControl : UInterpTrackFloatBase {
	FName SlotName; // 0x90
	TArray<FAnimControlTrackKey> AnimSeqs; // 0x98
	char bSkipAnimNotifiers : 1; // 0xa8
};

struct USpottedShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
	FVOscillator ShakeLoc; // 0x1ac
};

struct USkyAtmosphereComponent : USceneComponent {
	ESkyAtmosphereTransformMode TransformMode; // 0x1f8
	float BottomRadius; // 0x1fc
	FColor GroundAlbedo; // 0x200
	float AtmosphereHeight; // 0x204
	float MultiScatteringFactor; // 0x208
	float TraceSampleCountScale; // 0x20c
	float RayleighScatteringScale; // 0x210
	FLinearColor RayleighScattering; // 0x214
	float RayleighExponentialDistribution; // 0x224
	float MieScatteringScale; // 0x228
	FLinearColor MieScattering; // 0x22c
	float MieAbsorptionScale; // 0x23c
	FLinearColor MieAbsorption; // 0x240
	float MieAnisotropy; // 0x250
	float MieExponentialDistribution; // 0x254
	float OtherAbsorptionScale; // 0x258
	FLinearColor OtherAbsorption; // 0x25c
	FTentDistribution OtherTentDistribution; // 0x26c
	FLinearColor SkyLuminanceFactor; // 0x278
	float AerialPespectiveViewDistanceScale; // 0x288
	float HeightFogContribution; // 0x28c
	float TransmittanceMinLightElevationAngle; // 0x290
	float AerialPerspectiveStartDepth; // 0x294
	FGuid bStaticLightingBuiltGUID; // 0x2bc
};

struct UNiagaraRibbonRendererProperties : UNiagaraRendererProperties {
	UMaterialInterface* Material; // 0x80
	FNiagaraUserParameterBinding MaterialUserParamBinding; // 0x88
	ENiagaraRibbonFacingMode FacingMode; // 0xa8
	FNiagaraRibbonUVSettings UV0Settings; // 0xac
	FNiagaraRibbonUVSettings UV1Settings; // 0xd0
	ENiagaraRibbonDrawDirection DrawDirection; // 0xf4
	float CurveTension; // 0xf8
	ENiagaraRibbonTessellationMode TessellationMode; // 0xfc
	int32_t TessellationFactor; // 0x100
	bool bUseConstantFactor; // 0x104
	float TessellationAngle; // 0x108
	bool bScreenSpaceTessellation; // 0x10c
	FNiagaraVariableAttributeBinding PositionBinding; // 0x110
	FNiagaraVariableAttributeBinding ColorBinding; // 0x168
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x1c0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x218
	FNiagaraVariableAttributeBinding RibbonTwistBinding; // 0x270
	FNiagaraVariableAttributeBinding RibbonWidthBinding; // 0x2c8
	FNiagaraVariableAttributeBinding RibbonFacingBinding; // 0x320
	FNiagaraVariableAttributeBinding RibbonIdBinding; // 0x378
	FNiagaraVariableAttributeBinding RibbonLinkOrderBinding; // 0x3d0
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x428
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x480
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x4d8
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x530
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x588
	FNiagaraVariableAttributeBinding U0OverrideBinding; // 0x5e0
	FNiagaraVariableAttributeBinding V0RangeOverrideBinding; // 0x638
	FNiagaraVariableAttributeBinding U1OverrideBinding; // 0x690
	FNiagaraVariableAttributeBinding V1RangeOverrideBinding; // 0x6e8
};

struct UEnvQueryGenerator_SimpleGrid : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue GridSize; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb8
	UEnvQueryContext* GenerateAround; // 0xf0
};

struct UAnimNotify_PlayParticleEffect : UAnimNotify {
	UParticleSystem* PSTemplate; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct APlayerState : AInfo {
	float Score; // 0x220
	int32_t PlayerId; // 0x224
	char Ping; // 0x228
	char bShouldUpdateReplicatedPing : 1; // 0x22a
	char bIsSpectator : 1; // 0x22a
	char bOnlySpectator : 1; // 0x22a
	char bIsABot : 1; // 0x22a
	char bIsInactive : 1; // 0x22a
	char bFromPreviousLevel : 1; // 0x22a
	int32_t StartTime; // 0x22c
	ULocalMessage* EngineMessageClass; // 0x230
	FString SavedNetworkAddress; // 0x240
	FUniqueNetIdRepl UniqueId; // 0x250
	APawn* PawnPrivate; // 0x280
	FString PlayerNamePrivate; // 0x300
};

struct UNiagaraEmitter : UObject {
	bool bLocalSpace; // 0x28
	bool bDeterminism; // 0x29
	int32_t RandomSeed; // 0x2c
	EParticleAllocationMode AllocationMode; // 0x30
	int32_t PreAllocationCount; // 0x34
	FNiagaraEmitterScriptProperties UpdateScriptProps; // 0x38
	FNiagaraEmitterScriptProperties SpawnScriptProps; // 0x60
	ENiagaraSimTarget SimTarget; // 0x88
	FBox FixedBounds; // 0x8c
	int32_t MinDetailLevel; // 0xa8
	int32_t MaxDetailLevel; // 0xac
	FNiagaraDetailsLevelScaleOverrides GlobalSpawnCountScaleOverrides; // 0xb0
	FNiagaraPlatformSet Platforms; // 0xc8
	FNiagaraEmitterScalabilityOverrides ScalabilityOverrides; // 0xf8
	char bInterpolatedSpawning : 1; // 0x108
	char bFixedBounds : 1; // 0x108
	char bUseMinDetailLevel : 1; // 0x108
	char bUseMaxDetailLevel : 1; // 0x108
	char bOverrideGlobalSpawnCountScale : 1; // 0x108
	char bRequiresPersistentIDs : 1; // 0x108
	char bCombineEventSpawn : 1; // 0x108
	float MaxDeltaTimePerTick; // 0x10c
	uint32_t DefaultShaderStageIndex; // 0x110
	uint32_t MaxUpdateIterations; // 0x114
	TSet<uint32_t> SpawnStages; // 0x118
	char bSimulationStagesEnabled : 1; // 0x168
	char bDeprecatedShaderStagesEnabled : 1; // 0x168
	char bLimitDeltaTime : 1; // 0x168
	FString UniqueEmitterName; // 0x170
	TArray<UNiagaraRendererProperties*> RendererProperties; // 0x180
	TArray<FNiagaraEventScriptProperties> EventHandlerScriptProps; // 0x190
	TArray<UNiagaraSimulationStageBase*> SimulationStages; // 0x1a0
	UNiagaraScript* GPUComputeScript; // 0x1b0
	TArray<FName> SharedEventGeneratorIds; // 0x1b8
};

struct UConsole : UObject {
	ULocalPlayer* ConsoleTargetPlayer; // 0x38
	UTexture2D* DefaultTexture_Black; // 0x40
	UTexture2D* DefaultTexture_White; // 0x48
	TArray<FString> HistoryBuffer; // 0x68
};

struct UEOSCoreSessionsSearchFind : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UGetGeoLocationAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate onSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UAudioComponent : USceneComponent {
	USoundBase* Sound; // 0x1f8
	TArray<FAudioComponentParam> InstanceParameters; // 0x200
	USoundClass* SoundClassOverride; // 0x210
	char bAutoDestroy : 1; // 0x218
	char bStopWhenOwnerDestroyed : 1; // 0x218
	char bShouldRemainActiveIfDropped : 1; // 0x218
	char bAllowSpatialization : 1; // 0x218
	char bOverrideAttenuation : 1; // 0x218
	char bOverrideSubtitlePriority : 1; // 0x218
	char bIsUISound : 1; // 0x218
	char bEnableLowPassFilter : 1; // 0x218
	char bOverridePriority : 1; // 0x219
	char bSuppressSubtitles : 1; // 0x219
	char bAutoManageAttachment : 1; // 0x21a
	FName AudioComponentUserID; // 0x220
	float PitchModulationMin; // 0x228
	float PitchModulationMax; // 0x22c
	float VolumeModulationMin; // 0x230
	float VolumeModulationMax; // 0x234
	float VolumeMultiplier; // 0x238
	int32_t EnvelopeFollowerAttackTime; // 0x23c
	int32_t EnvelopeFollowerReleaseTime; // 0x240
	float Priority; // 0x244
	float SubtitlePriority; // 0x248
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x250
	float PitchMultiplier; // 0x258
	float LowPassFilterFrequency; // 0x25c
	USoundAttenuation* AttenuationSettings; // 0x268
	FSoundAttenuationSettings AttenuationOverrides; // 0x270
	USoundConcurrency* ConcurrencySettings; // 0x610
	TSet<USoundConcurrency*> ConcurrencySet; // 0x618
	EAttachmentRule AutoAttachLocationRule; // 0x674
	EAttachmentRule AutoAttachRotationRule; // 0x675
	EAttachmentRule AutoAttachScaleRule; // 0x676
	FSoundModulationDefaultRoutingSettings ModulationRouting; // 0x678
	FMulticastInlineDelegate OnAudioPlayStateChanged; // 0x6c0
	FMulticastInlineDelegate OnAudioVirtualizationChanged; // 0x6e8
	FMulticastInlineDelegate OnAudioFinished; // 0x710
	FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x738
	FMulticastInlineDelegate OnAudioSingleEnvelopeValue; // 0x760
	FMulticastInlineDelegate OnAudioMultiEnvelopeValue; // 0x788
	FDelegate OnQueueSubtitles; // 0x7b0
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x7c0
	FName AutoAttachSocketName; // 0x7c8
};

struct AARSharedWorldGameState : AGameState {
	TArray<char> PreviewImageData; // 0x290
	TArray<char> ARWorldData; // 0x2a0
	int32_t PreviewImageBytesTotal; // 0x2b0
	int32_t ARWorldBytesTotal; // 0x2b4
	int32_t PreviewImageBytesDelivered; // 0x2b8
	int32_t ARWorldBytesDelivered; // 0x2bc
};

struct UCullingField : UFieldNodeBase {
	UFieldNodeBase* Culling; // 0xb0
	UFieldNodeBase* Field; // 0xb8
	EFieldCullingOperationType Operation; // 0xc0
};

struct USynthKnob : UWidget {
	float Value; // 0x108
	float StepSize; // 0x10c
	float MouseSpeed; // 0x110
	float MouseFineTuneSpeed; // 0x114
	char ShowTooltipInfo : 1; // 0x118
	FText ParameterName; // 0x120
	FText ParameterUnits; // 0x138
	FDelegate ValueDelegate; // 0x150
	FSynthKnobStyle WidgetStyle; // 0x160
	bool Locked; // 0x398
	bool IsFocusable; // 0x399
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x3a0
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x3b0
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x3c0
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x3d0
	FMulticastInlineDelegate OnValueChanged; // 0x3e0
};

struct ARectLight : ALight {
	URectLightComponent* RectLightComponent; // 0x230
};

struct UGrannyJumpShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
	FVOscillator ShakeLoc; // 0x1ac
};

struct UEOSCoreEcomRedeemEntitlements : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UavatarSteamTest_C : UUserWidget {
	UImage* Image_52; // 0x260
};

struct ASurvivorMasterBP_C : APhysicsCharacter {
	FPointerToUberGraphFrame UberGraphFrame; // 0x4e0
	UWidgetComponent* SoundIndicatorWidget; // 0x4e8
	UArrowComponent* ThrowArrow; // 0x4f0
	UWidgetComponent* SurvHP; // 0x4f8
	UFMODAudioComponent* FMODPropShiftLoopAudio; // 0x500
	UPerkSurv_C* PerkSurv; // 0x508
	UCameraComponent* FPPCamera; // 0x510
	USpringArmComponent* SpringArm1; // 0x518
	UNiagaraComponent* StaticMeshNiagaraDestructable; // 0x520
	USurvPropDestruction_C* SurvPropDestruction; // 0x528
	UFMODAudioComponent* FMODPropBurningAudio; // 0x530
	UWidgetComponent* NicknameWidget; // 0x538
	UWidgetComponent* SurvRoleWidget; // 0x540
	UNiagaraComponent* StaticMeshNiagaraCursed; // 0x548
	UNiagaraComponent* SkeletalMeshNiagara; // 0x550
	UNiagaraComponent* StaticMeshNiagara; // 0x558
	USpringArmComponent* PropArm; // 0x560
	UChildActorComponent* PropFPPCamera; // 0x568
	UGraffityMaker_C* GraffityMaker; // 0x570
	UFMODAudioComponent* FMODOnceVoices; // 0x578
	UFMODAudioComponent* FMODLoopVoices; // 0x580
	UFMODAudioComponent* FMODChair; // 0x588
	USphereComponent* StaticMeshContainer; // 0x590
	UStaticMeshComponent* PlayerStaticMesh; // 0x598
	USceneComponent* StunScene; // 0x5a0
	USoundChatSounds_C* SoundChatSounds; // 0x5a8
	USceneComponent* FPPCamerasPlace; // 0x5b0
	UCheckInteractable_C* CheckInteractable; // 0x5b8
	UAlarmsWidgetSize_C* AlarmsWidgetSize; // 0x5c0
	UCableComponent* Cable; // 0x5c8
	UFMODAudioComponent* FMODAudio2; // 0x5d0
	UItemWorker_C* ItemWorker; // 0x5d8
	UFMODAudioComponent* FMODAudio1; // 0x5e0
	USkeletalMeshComponent* InvisFPPMesh; // 0x5e8
	USkeletalMeshComponent* InvisMesh; // 0x5f0
	UVoipManagerComponent* VoipManager; // 0x5f8
	UVoipAudioComponent* VoipAudio; // 0x600
	USceneComponent* DropItemPosition; // 0x608
	UBoxComponent* InteractBox; // 0x610
	USceneComponent* InteractBoxContainer; // 0x618
	USpotLightComponent* SpotLight; // 0x620
	USceneComponent* AudioListener; // 0x628
	UATPCCameraComponent* ATPCCamera; // 0x630
	USceneComponent* Scene; // 0x638
	USurvFart_C* SurvFart; // 0x640
	USpringArmComponent* SpringArm; // 0x648
	URegeneration_C* Regeneration1; // 0x650
	USurvivorSoundsMaster-2D_C* SurvivorSoundMaster; // 0x658
	USurvivorInteraction_C* SurvInteraction; // 0x660
	USceneComponent* DefaultPointProp; // 0x668
	UBoxComponent* Box1; // 0x670
	UFMODAudioComponent* FMODPropLoopAudio; // 0x678
	USceneComponent* FPPMeshContainer; // 0x680
	UFMODAudioComponent* FMODPropHitAudio; // 0x688
	USceneComponent* CameraGrapplePoint; // 0x690
	USkeletalMeshComponent* FPPMesh; // 0x698
	UCameraComponent* FollowCamera; // 0x6a0
	UFMODAudioComponent* FmodAudio; // 0x6a8
	UPostProcessComponent* PostProcess; // 0x6b0
	UFootprintComponent_C* FootprintComponent; // 0x6b8
	USmoothSync* SmoothSync; // 0x6c0
	float Timeline_5_NewTrack_0_C2263A7A48628D8CF8B3A18298FB69AE; // 0x6c8
	ETimelineDirection Timeline_5__Direction_C2263A7A48628D8CF8B3A18298FB69AE; // 0x6cc
	UTimelineComponent* Timeline_6; // 0x6d0
	float Timeline_4_Alpha_4D4D07A64AF531E051135BB4A10EAAE4; // 0x6d8
	ETimelineDirection Timeline_4__Direction_4D4D07A64AF531E051135BB4A10EAAE4; // 0x6dc
	UTimelineComponent* Timeline_5; // 0x6e0
	float Timeline_3_Alpha_EDD8D8BB42BC6EFFD204ACB3F90E9A23; // 0x6e8
	ETimelineDirection Timeline_3__Direction_EDD8D8BB42BC6EFFD204ACB3F90E9A23; // 0x6ec
	UTimelineComponent* Timeline_4; // 0x6f0
	float ZoomOutTimeline_Alpha_56FD6C724DFA377C7F5A27A71D58F2DB; // 0x6f8
	ETimelineDirection ZoomOutTimeline__Direction_56FD6C724DFA377C7F5A27A71D58F2DB; // 0x6fc
	UTimelineComponent* ZoomOutTimeline; // 0x700
	float Timeline_0_Alpha_D8903D0E43C9C9AC8C494192B318AADB; // 0x708
	ETimelineDirection Timeline_0__Direction_D8903D0E43C9C9AC8C494192B318AADB; // 0x70c
	UTimelineComponent* Timeline_1; // 0x710
	ETimelineDirection DropItemHold__Direction_5E24FDAC43B39BF64E2B2E89568AAD81; // 0x718
	UTimelineComponent* DropItemHold; // 0x720
	float DeathEffectTimeline_Lerp_1AD56D5F482733F5B7FF21945C716C1A; // 0x728
	ETimelineDirection DeathEffectTimeline__Direction_1AD56D5F482733F5B7FF21945C716C1A; // 0x72c
	UTimelineComponent* DeathEffectTimeline; // 0x730
	float Timeline_2_Alpha_F590837A4D182D3C48036EA9ACD1FE91; // 0x738
	ETimelineDirection Timeline_2__Direction_F590837A4D182D3C48036EA9ACD1FE91; // 0x73c
	UTimelineComponent* Timeline_3; // 0x740
	float BlurTimeline_Alpha_E678B1E44A3CA3CCBC33F2870F4D589F; // 0x748
	ETimelineDirection BlurTimeline__Direction_E678B1E44A3CA3CCBC33F2870F4D589F; // 0x74c
	UTimelineComponent* BlurTimeline; // 0x750
	float CapsuleTimeline_Alpha_3931415B4DA717316CBCC4B2447C088F; // 0x758
	ETimelineDirection CapsuleTimeline__Direction_3931415B4DA717316CBCC4B2447C088F; // 0x75c
	UTimelineComponent* CapsuleTimeline; // 0x760
	float TimelineFOV_Alpha_BB6E0F3D4368D461E87B1DA7C8A0706C; // 0x768
	ETimelineDirection TimelineFOV__Direction_BB6E0F3D4368D461E87B1DA7C8A0706C; // 0x76c
	UTimelineComponent* TimelineFOV; // 0x770
	float CameraInteract_NewTrack_0_D42A0B284E3720C10D21618BBE3F6A57; // 0x778
	ETimelineDirection CameraInteract__Direction_D42A0B284E3720C10D21618BBE3F6A57; // 0x77c
	UTimelineComponent* CameraInteract; // 0x780
	float Rope_NewTrack_0_79166F2E47E56ABEB7D4D381CFC3C44E; // 0x788
	ETimelineDirection Rope__Direction_79166F2E47E56ABEB7D4D381CFC3C44E; // 0x78c
	UTimelineComponent* Rope; // 0x790
	float HitTimeline_Pitch_033072B4460D8031F3574FA1B2C15E3C; // 0x798
	ETimelineDirection HitTimeline__Direction_033072B4460D8031F3574FA1B2C15E3C; // 0x79c
	UTimelineComponent* HitTimeline; // 0x7a0
	float Timeline_1_NewTrack_0_28424CF84D5D555B496C44BDBC6E5372; // 0x7a8
	ETimelineDirection Timeline_1__Direction_28424CF84D5D555B496C44BDBC6E5372; // 0x7ac
	UTimelineComponent* Timeline_2; // 0x7b0
	float PPColorChange_Lerp_E61BC77648192EB1FD5307BB391141EA; // 0x7b8
	ETimelineDirection PPColorChange__Direction_E61BC77648192EB1FD5307BB391141EA; // 0x7bc
	UTimelineComponent* PPColorChange; // 0x7c0
	float TimelineJump_Jump_74BC80A542EA939C26100EB00C9A924D; // 0x7c8
	ETimelineDirection TimelineJump__Direction_74BC80A542EA939C26100EB00C9A924D; // 0x7cc
	UTimelineComponent* TimelineJump; // 0x7d0
	float LerpAlphaTimeline_Lerp_281CB55F46C7C7F578BF9F88611AAA8F; // 0x7d8
	ETimelineDirection LerpAlphaTimeline__Direction_281CB55F46C7C7F578BF9F88611AAA8F; // 0x7dc
	UTimelineComponent* LerpAlphaTimeline; // 0x7e0
	float BaseTurnRate; // 0x7e8
	float BaseLookUpRate; // 0x7ec
	float RunSpeed; // 0x7f0
	float CrouchSpeed; // 0x7f4
	float WalkSpeed; // 0x7f8
	float CrawlSpeed; // 0x7fc
	int32_t Health; // 0x800
	bool Hitted?; // 0x804
	float MeleeSpeedUpPercent; // 0x808
	MovementTypeEnum MovementType; // 0x80c
	bool SpeedUpAfterMeleeHit?; // 0x80d
	bool ImProp?; // 0x80e
	FVector forwardVector; // 0x810
	FVector RightVector; // 0x81c
	AActor* Item; // 0x828
	TArray<AItemsBPHand_C*> ItemsInventory; // 0x830
	AItemsBPHand_C* ItemToSpawn; // 0x840
	int32_t InventoryIndex; // 0x848
	bool StartRotate?; // 0x84c
	float DeltaSeconds; // 0x850
	bool StopMove?; // 0x854
	float LerpAlpha; // 0x858
	bool ItemFound?; // 0x85c
	FVector JumpVector; // 0x860
	float HealingProgress; // 0x86c
	bool EmptyInventory?; // 0x870
	FRotator AxisRotator; // 0x874
	float ReanimateProgress; // 0x880
	bool Grapple?; // 0x884
	bool OnChair?; // 0x885
	float ZeroSpeed; // 0x888
	float RightLeft; // 0x88c
	bool PressA?; // 0x890
	bool PressD?; // 0x891
	float BreakFreeProgress; // 0x894
	bool Shake?; // 0x898
	AActor* KillerActor; // 0x8a0
	USoundBase* HeartbeatSound1; // 0x8a8
	float NewDelay; // 0x8b0
	bool change?; // 0x8b4
	float FinalDelay; // 0x8b8
	bool NewCall?; // 0x8bc
	float PrevDelay; // 0x8c0
	USurvivalProgressBarWidget_C* SurvivalProgressBar; // 0x8c8
	USurvivalSkillCheckWidget_C* SurvivalSkillCheck; // 0x8d0
	float ProgressUI; // 0x8d8
	float FullHealTime; // 0x8dc
	float FullReanimateTime; // 0x8e0
	float CurrentHelpGetOutChair; // 0x8e4
	float FullHelpGetOutChair; // 0x8e8
	float FullOpenExit; // 0x8ec
	float FullReloaingAlarm; // 0x8f0
	float CurrentGetOutChair; // 0x8f4
	AActor* ChairActor; // 0x8f8
	float FullGetOutChair; // 0x900
	int32_t RandomChance; // 0x904
	USurvivalHealthWidget_C* SurvivalHealth; // 0x908
	USurvivalInventoryWidget_C* SurvivalInventory; // 0x910
	AItemsBPHand_C* CurrentItem; // 0x918
	bool AddItem?; // 0x920
	bool DeleteItem?; // 0x921
	bool ItemSwitch?; // 0x922
	FMulticastInlineDelegate ED_MovementType; // 0x928
	UCoolDownWBP_C* SurvivalAbility; // 0x938
	bool Ability1Reloading?; // 0x940
	bool Ability2Reloading?; // 0x941
	float FullGetOutKillerHand; // 0x944
	bool FailedSkillCheck?; // 0x948
	bool RandomSkillCheck?; // 0x949
	ANewAlarmBP_C* CurrentAlarm; // 0x950
	FString Skill1; // 0x958
	FString Skill2; // 0x968
	FString Skill3Rotate; // 0x978
	FString Skill3Flashlight; // 0x988
	FString Skill3Empty; // 0x998
	float KillingTime; // 0x9a8
	UInteractableButtonsWidget_C* InteractableButtons; // 0x9b0
	FText AlarmText; // 0x9b8
	FText ReanimateText; // 0x9d0
	FText HealAllyText; // 0x9e8
	FText HealSelfText; // 0xa00
	FText OpenExitText; // 0xa18
	FText PickUpText; // 0xa30
	bool UpdateInteractable?; // 0xa48
	FText FlashlightText; // 0xa50
	FText RotateText; // 0xa68
	bool RotateInteractableActive?; // 0xa80
	FString BreakFreeText; // 0xa88
	bool ChairInteractableActive?; // 0xa98
	float TorqueValue; // 0xa9c
	FPropData PropData; // 0xaa0
	float CurrentStamina; // 0xb40
	int32_t MaxHP; // 0xb44
	bool IsOwner?; // 0xb48
	EFootprintStyle CurrentFootwear; // 0xb49
	USurvivalStaminaBarWidget_C* StaminaBar; // 0xb50
	float MaxStamina; // 0xb58
	bool StaminaActive?; // 0xb5c
	bool PressedRun?; // 0xb5d
	bool JumpButtonPressed?; // 0xb5e
	bool SlowIncrease?; // 0xb5f
	float StaminaDecreaseAmountValue; // 0xb60
	float StaminaJumpAmountValue; // 0xb64
	float MaxValueProgressUI; // 0xb68
	bool StaticHit?; // 0xb6c
	float RotateInterpSpeed; // 0xb70
	bool CanJump?; // 0xb74
	float ImpulseThreshold; // 0xb78
	float ImpulseThresholdMax; // 0xb7c
	float VolumeSensitivity; // 0xb80
	float MaxVolume; // 0xb84
	bool PropSoundActive?; // 0xb88
	float PropSpeed; // 0xb8c
	bool TestSwitchActive?; // 0xb90
	float CurrentCharacterSpeed; // 0xb94
	float PropTempValue; // 0xb98
	AActor* CalculateRayHitActor; // 0xba0
	USoundBase* HeartbeatSound2; // 0xba8
	bool StartRegeneration?; // 0xbb0
	bool StartSelfReanimate?; // 0xbb1
	float SelfReanimateValue; // 0xbb4
	float SelfReanimateFullValue; // 0xbb8
	bool CrawlStatusStart?; // 0xbbc
	float StaminaIncreaseAmountValue; // 0xbc0
	AActor* NewOutline; // 0xbc8
	AActor* OldOutline; // 0xbd0
	FLinearColor CloseColorOutline; // 0xbd8
	UMaterialInstanceDynamic* MaterialOutline; // 0xbe8
	FLinearColor OpenColorOutline; // 0xbf0
	FLinearColor DefaultColorOutline; // 0xc00
	AActor* LastExitActor; // 0xc10
	FFMODEventInstance ChasingFMODSound; // 0xc18
	ANewAlarmBP_C* AlarmRef; // 0xc20
	float MaxHealthCalculateValue; // 0xc28
	bool GameStart?; // 0xc2c
	float KillerAmbientValue; // 0xc30
	bool ZeroStamina?; // 0xc34
	FFMODEventInstance LevelAmbient; // 0xc38
	bool FreeCam?; // 0xc40
	int32_t RestoreHealth; // 0xc44
	float JumpAlpha; // 0xc48
	FVector TempVector; // 0xc4c
	FText EscapeText; // 0xc58
	UCameraComponent* ActiveCamera; // 0xc70
	bool FPP?; // 0xc78
	UFMODAudioComponent* SurvTransform; // 0xc80
	UFMODAudioComponent* Flashlight; // 0xc88
	float MouseSensitive; // 0xc90
	bool KillerAstral?; // 0xc94
	bool ReloadingAlarm?; // 0xc95
	int32_t Points; // 0xc98
	bool EndJump?; // 0xc9c
	UWaypointWidget_C* WaypointWidget; // 0xca0
	FString Skill4; // 0xca8
	bool Ability4Reloading?; // 0xcb8
	bool OpenDoor?; // 0xcb9
	bool MeleeAttack?; // 0xcba
	bool RangeAttack?; // 0xcbb
	float RangeSpeedUpPercent; // 0xcbc
	bool SpeedUpAfterRangeHit?; // 0xcc0
	float MaxWalkSpeed; // 0xcc4
	bool ImHealing?; // 0xcc8
	int32_t MaxHPForRegeneration; // 0xccc
	bool UseFlashlight?; // 0xcd0
	bool Escape?; // 0xcd1
	FVector Temp2Vector; // 0xcd4
	float RotateLerp; // 0xce0
	bool RotateHitted?; // 0xce4
	bool ImHealingAlly?; // 0xce5
	FVector4 NormalColor; // 0xcf0
	FVector4 MonochromeColor; // 0xd00
	bool GetReady?; // 0xd10
	bool HelpGetOutChair?; // 0xd11
	DamageTypeEnum DamageType; // 0xd12
	FText BleedingText; // 0xd18
	bool KnifeInTheBody?; // 0xd30
	float MaxPullOut; // 0xd34
	float CurrentPullOut; // 0xd38
	FRotator HeadRotation; // 0xd3c
	bool Move?; // 0xd48
	bool HealingMe?; // 0xd49
	SurvStateEnum SurvStateEnum; // 0xd4a
	bool StartRotateProp?; // 0xd4b
	FRotator RotateProp; // 0xd4c
	AItemsBPHand_C* ItemVar; // 0xd58
	int32_t ItemSpawnIndex; // 0xd60
	FTransform SpawnItemLocation; // 0xd70
	bool BreakFreeFull?; // 0xda0
	float YawMod; // 0xda4
	UMaterialInstanceDynamic* SurvDynMat1; // 0xda8
	UMaterialInstanceDynamic* SurvDynMat2; // 0xdb0
	UMaterialInstanceDynamic* SurvDynMat3; // 0xdb8
	float DeathEffectTime; // 0xdc0
	float DeathEffectDuration; // 0xdc4
	FTimerHandle DeathEffectTimer; // 0xdc8
	float Float1; // 0xdd0
	bool SoundsStop?; // 0xdd4
	TArray<ASurvivorMasterBP_C*> AllSurvs; // 0xdd8
	UMaterialInterface* SurvBodyHitMaterial; // 0xde8
	UMaterialInterface* SurvPastedClothHitMaterial; // 0xdf0
	UMaterialInterface* SurvClothHitMaterial; // 0xdf8
	UMaterialInterface* SurvBodyDefaultMaterial; // 0xe00
	UMaterialInterface* SurvPastedClothDefaultMaterial; // 0xe08
	UMaterialInterface* SurvClothDefaultMaterial; // 0xe10
	AHUD_PropHunt_C* HUDRef; // 0xe18
	bool Allow Voice; // 0xe20
	bool VoiceActive?; // 0xe21
	float EnergyDrinkBoost; // 0xe24
	bool Boosted?; // 0xe28
	bool Invulnerability?; // 0xe29
	float InvulnerabilityTime; // 0xe2c
	FText LootboxShopText; // 0xe30
	bool BeginPlayOver?; // 0xe48
	FString CoinText; // 0xe50
	FText ScoreText; // 0xe60
	ASurvivorMasterBP_C* LastHittedSurv; // 0xe78
	bool HelpLeader?; // 0xe80
	FVector StartPos; // 0xe84
	FVector TargetPos; // 0xe90
	float DistanceForGraple; // 0xe9c
	float MovedDistance; // 0xea0
	float Speed; // 0xea4
	bool InGraple; // 0xea8
	bool HookInHands; // 0xea9
	UCurveFloat* HeightCurve; // 0xeb0
	USurvivalEffectsUI_C* SurvEffectsUI; // 0xeb8
	SurvClass SurvClass; // 0xec0
	bool KillerSee?; // 0xec1
	float BreakFreeProgressSaved; // 0xec4
	int32_t KillerType; // 0xec8
	float SelfReanimateProgressReplicated; // 0xecc
	bool Smooth?; // 0xed0
	bool CDInteract; // 0xed1
	float Bias; // 0xed4
	TArray<ALootBox_C*> LootBoxs; // 0xed8
	float XAxis; // 0xee8
	float YAxis; // 0xeec
	bool StartRotatePropSoundActive?; // 0xef0
	bool Freeze; // 0xef1
	FVector OldCharPos; // 0xef4
	FVector OldWidgetPos; // 0xf00
	AActor* TempCalculateRay; // 0xf10
	float PhysicsTickDeltaTime; // 0xf18
	float BoostExit; // 0xf1c
	float animationSpeed; // 0xf20
	bool SecondJumpProp?; // 0xf24
	TArray<AActor*> WidgetPropActorsIgnore; // 0xf28
	FVector CustomOffset; // 0xf38
	FVector StandartOffset; // 0xf44
	bool TransformChangeHealth?; // 0xf50
	ADoppelganger_C* Doppelganger; // 0xf58
	SurvSkills SurvSkill; // 0xf60
	int32_t NeedPointsLootbox; // 0xf64
	float DefaultFOV; // 0xf68
	int32_t ChairStage; // 0xf6c
	float AirTime; // 0xf70
	bool Intro?; // 0xf74
	UMaterialInstanceDynamic* MaterialBlur; // 0xf78
	FString NicknameString; // 0xf80
	APostProcessVolume* PostProcessVolumeVar; // 0xf90
	FPostProcessSettings DefaultPostProcessSettings; // 0xfa0
	UMaterialInstanceDynamic* MaterialVignette; // 0x14f0
	FRotator PropCorrectionRotation; // 0x14f8
	float ScenePropHealth; // 0x1504
	TArray<FVector> SavedPoints; // 0x1508
	float TempFloat; // 0x1518
	bool TempBool; // 0x151c
	float TempFloat2; // 0x1520
	FVector Temp3Vector; // 0x1524
	FVector Temp4Vector; // 0x1530
	FRotator TempRotation; // 0x153c
	FRotator TempRotation2; // 0x1548
	float TempFloat3; // 0x1554
	bool NewVar_1; // 0x1558
	float ProgressUISpectator; // 0x155c
	float MaxProgressUISpectator; // 0x1560
	float LastAirTime; // 0x1564
	bool PullOut?; // 0x1568
	FVector PropMovementInterpVar; // 0x156c
	bool BlockLMB?; // 0x1578
	bool BlockRMB?; // 0x1579
	bool Tutorial?; // 0x157a
	bool PropHuntMode?; // 0x157b
	E_Mode Mode; // 0x157c
	bool isAI; // 0x157d
	ASurvivorMasterBP_C* HealAlly; // 0x1580
	bool LobbbyWait?; // 0x1588
	bool IsaacBoosted?; // 0x1589
	float IsaacTimeBoost; // 0x158c
	bool PressedCrouch?; // 0x1590
	int32_t AliveTime; // 0x1594
	AActor* PropObject; // 0x1598
	bool LocalBoolProp; // 0x15a0
	SurvChars survChar; // 0x15a1
	bool OutlineBlock; // 0x15a2
	bool Small Prop?; // 0x15a3
	bool OnlyTPP?; // 0x15a4
	bool CustomPlayAnimWalk?; // 0x15a5
	TArray<UMaterialInstanceDynamic*> PropMaterials; // 0x15a8
	float DistanceTraveled; // 0x15b8
	FText PingText; // 0x15c0
	bool SurvTrack3000Block?; // 0x15d8
	bool BlockHelp?; // 0x15d9
	int32_t PropJumpCount; // 0x15dc
	int32_t DefaultJumpCount; // 0x15e0
	float PropSoundVolumeModifier; // 0x15e4
	float BreakFreeBonusVar; // 0x15e8
	float BlockTime; // 0x15ec
	bool FullHP?; // 0x15f0
	int32_t NeedPointsMedkit; // 0x15f4
	bool DrDolittle?; // 0x15f8
	bool DrDolittleInteractReady?; // 0x15f9
	bool AlarmFinished?; // 0x15fa
	bool RushActive?; // 0x15fb
	float StaminaRushDecreaseAmountValue; // 0x15fc
	bool Rush?; // 0x1600
	float BlockTimeMultiply; // 0x1604
	bool CursedPropChallenge?; // 0x1608
	float CursedPropChallengeValue; // 0x160c
	float CursedPropChallengeMaxValue; // 0x1610
	ABasePropBP_C* Cursed Prop; // 0x1618
	FText HoudiniText; // 0x1620
	UMaterialInstanceDynamic* MaterialVignette2; // 0x1638
	FVector ImpactPoint; // 0x1640
	bool WallJump?; // 0x164c
	ABP_Spectator_C* BP_Spectator; // 0x1650
	FTransform ParticleTransform; // 0x1660
	SurvRole SurvRole; // 0x1690
	TArray<float> r3; // 0x1698
	int32_t I; // 0x16a8
	float ZLocalMin; // 0x16ac
	float ZLocal; // 0x16b0
	ASurvivorMasterBP_C* SREF; // 0x16b8
	int32_t CountCoins; // 0x16c0
	int32_t SupportHealedCount; // 0x16c4
	TArray<UMaterialInstanceDynamic*> PropDynMaterials; // 0x16c8
	TArray<AInteractableDoor_C*> DoorArray; // 0x16d8
	float DamageMarkerAngle; // 0x16e8
	bool escapeLoop; // 0x16ec
	UMaterialInstanceDynamic* SoftOutline; // 0x16f0
	UFMODAudioComponent* BleedingSound; // 0x16f8
	UFMODAudioComponent* EscapeStruggle; // 0x1700
	float ChaseValue; // 0x1708
	float PropDistance; // 0x170c
	bool IntroAnim?; // 0x1710
	FVector OldIndicatorPos; // 0x1714
	bool TestViewB; // 0x1720
	bool CanBurning?; // 0x1721
	bool Burning?; // 0x1722
	bool EnergyDrnkAnimB; // 0x1723
	bool KBookAnimB; // 0x1724
	int32_t SkinID; // 0x1728
	int32_t DestructionLvl; // 0x172c
	TArray<FCoinMaxStruct> MaxScoreInt; // 0x1730
	TArray<int32_t> MaxScoreTemp; // 0x1740
	bool IsMessageBlocked; // 0x1750
	bool SurvCheats; // 0x1751
	float AxisForwardFloat; // 0x1754
	int32_t CurrentLVL; // 0x1758
	int32_t MaxLVL; // 0x175c
	int32_t Exp; // 0x1760
	bool Perk1Activated; // 0x1764
	int32_t Perk1LVL; // 0x1768
	int32_t Perk2LVL; // 0x176c
	int32_t Perk3LVL; // 0x1770
	bool Perk2Activated; // 0x1774
	bool Perk3Activated; // 0x1775
	float RestoreHealthTimeMultiplier; // 0x1778
	int32_t PerkIndex; // 0x177c
	int32_t HitCounter; // 0x1780
	bool HitUI; // 0x1784
	bool HaveShield; // 0x1785
	bool ShiftOn?; // 0x1786
	FTimerHandle AfterHitTimer; // 0x1788
	int32_t coins; // 0x1790
	float TPS; // 0x1794
	bool BlockProp?; // 0x1798
	bool IsTotemOfEndurance; // 0x1799
	int32_t JumpCount; // 0x179c
	int32_t TotemOfEnduranceTime; // 0x17a0
	int32_t TotemOfFriendshipTime; // 0x17a4
	int32_t TotemOfBraveryTime; // 0x17a8
	int32_t TotemOfConcentrationTime; // 0x17ac
	int32_t TotemOfGravityTime; // 0x17b0
	bool IsPropmachineBoosted; // 0x17b4
	bool Painkiller; // 0x17b5
	bool ThrowGrenade; // 0x17b6
	bool TakeRune; // 0x17b7
	bool DamageNull?; // 0x17b8
	TArray<FTestDialogue> Dialogue; // 0x17c0
	bool RunChance?; // 0x17d0
	bool Invert Mouse Y?; // 0x17d1
	bool HasOutline?; // 0x17d2
	bool GrappleFailed?; // 0x17d3
	bool IsLifted; // 0x17d4
	bool Reincarnating?; // 0x17d5
	float MaxZToCheck; // 0x17d8
	bool RotateBlock?; // 0x17dc
	int32_t Hitcount; // 0x17e0
	TArray<AActor*> Actors to Ignore; // 0x17e8
	bool BlockSpam?; // 0x17f8
	int32_t HitsCount; // 0x17fc
	bool Delte2; // 0x1800
	TArray<FTransform> SavedPointsProp; // 0x1808
	int32_t PropPoint; // 0x1818
	bool BlockSpamRMB; // 0x181c
	FVector OldCharIndicatorPos; // 0x1820
	int32_t HitCountMin; // 0x182c
};

struct UPropertyValue : UObject {
	TArray<TFieldPath<FProperty>> Properties; // 0x88
	TArray<int32_t> PropertyIndices; // 0x98
	TArray<FCapturedPropSegment> CapturedPropSegments; // 0xa8
	FString FullDisplayString; // 0xb8
	FName PropertySetterName; // 0xc8
	TMap<FString, FString> PropertySetterParameterDefaults; // 0xd0
	bool bHasRecordedData; // 0x120
	UObject* LeafPropertyClass; // 0x128
	TArray<char> ValueBytes; // 0x138
	EPropertyValueCategory PropCategory; // 0x148
};

struct UAnimNotifyState_TimedParticleEffect : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct ADestructibleActor : AActor {
	UDestructibleComponent* DestructibleComponent; // 0x220
	FMulticastInlineDelegate OnActorFracture; // 0x228
};

struct UComboBoxString : UWidget {
	TArray<FString> DefaultOptions; // 0x108
	FString SelectedOption; // 0x118
	FComboBoxStyle WidgetStyle; // 0x128
	FTableRowStyle ItemStyle; // 0x518
	FMargin ContentPadding; // 0xce0
	float MaxListHeight; // 0xcf0
	bool HasDownArrow; // 0xcf4
	bool EnableGamepadNavigationMode; // 0xcf5
	FSlateFontInfo Font; // 0xcf8
	FSlateColor ForegroundColor; // 0xd50
	bool bIsFocusable; // 0xd78
	FDelegate OnGenerateWidgetEvent; // 0xd7c
	FMulticastInlineDelegate OnSelectionChanged; // 0xd90
	FMulticastInlineDelegate OnOpening; // 0xda0
};

struct UNiagaraLightRendererProperties : UNiagaraRendererProperties {
	char bUseInverseSquaredFalloff : 1; // 0x80
	char bAffectsTranslucency : 1; // 0x80
	float RadiusScale; // 0x84
	FVector ColorAdd; // 0x88
	FNiagaraVariableAttributeBinding LightRenderingEnabledBinding; // 0x98
	FNiagaraVariableAttributeBinding LightExponentBinding; // 0xf0
	FNiagaraVariableAttributeBinding PositionBinding; // 0x148
	FNiagaraVariableAttributeBinding ColorBinding; // 0x1a0
	FNiagaraVariableAttributeBinding RadiusBinding; // 0x1f8
	FNiagaraVariableAttributeBinding VolumetricScatteringBinding; // 0x250
};

struct UCoreChat : UEOSCoreSubsystem {
	FMulticastInlineDelegate OnChatMessageReceived; // 0x48
};

struct UARTrackableNotifyComponent : UActorComponent {
	FMulticastInlineDelegate OnAddTrackedGeometry; // 0xb0
	FMulticastInlineDelegate OnUpdateTrackedGeometry; // 0xc0
	FMulticastInlineDelegate OnRemoveTrackedGeometry; // 0xd0
	FMulticastInlineDelegate OnAddTrackedPlane; // 0xe0
	FMulticastInlineDelegate OnUpdateTrackedPlane; // 0xf0
	FMulticastInlineDelegate OnRemoveTrackedPlane; // 0x100
	FMulticastInlineDelegate OnAddTrackedPoint; // 0x110
	FMulticastInlineDelegate OnUpdateTrackedPoint; // 0x120
	FMulticastInlineDelegate OnRemoveTrackedPoint; // 0x130
	FMulticastInlineDelegate OnAddTrackedImage; // 0x140
	FMulticastInlineDelegate OnUpdateTrackedImage; // 0x150
	FMulticastInlineDelegate OnRemoveTrackedImage; // 0x160
	FMulticastInlineDelegate OnAddTrackedFace; // 0x170
	FMulticastInlineDelegate OnUpdateTrackedFace; // 0x180
	FMulticastInlineDelegate OnRemoveTrackedFace; // 0x190
	FMulticastInlineDelegate OnAddTrackedEnvProbe; // 0x1a0
	FMulticastInlineDelegate OnUpdateTrackedEnvProbe; // 0x1b0
	FMulticastInlineDelegate OnRemoveTrackedEnvProbe; // 0x1c0
	FMulticastInlineDelegate OnAddTrackedObject; // 0x1d0
	FMulticastInlineDelegate OnUpdateTrackedObject; // 0x1e0
	FMulticastInlineDelegate OnRemoveTrackedObject; // 0x1f0
};

struct UMasterAudioSubmixCaptureProtocol : UMovieSceneAudioCaptureProtocolBase {
	FString Filename; // 0x58
};

struct ABP_CF_PlayerPosition_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USceneComponent* DefaultSceneRoot; // 0x228
	FVector BendPos; // 0x230
	int32_t PlayerPawnIndex; // 0x23c
	float BendPosLength; // 0x240
	float PlayerSpeed; // 0x244
};

struct UClothLODDataCommon_Legacy : UObject {
	UClothPhysicalMeshDataBase_Legacy* PhysicalMeshData; // 0x28
	FClothPhysicalMeshData ClothPhysicalMeshData; // 0x30
	FClothCollisionData CollisionData; // 0x128
};

struct UMaterialExpressionLandscapeLayerSample : UMaterialExpression {
	FName ParameterName; // 0x40
	float PreviewWeight; // 0x48
	FGuid ExpressionGUID; // 0x4c
};

struct UAITask_MoveTo : UAITask {
	FMulticastInlineDelegate OnRequestFailed; // 0x70
	FMulticastInlineDelegate OnMoveFinished; // 0x80
	FAIMoveRequest MoveRequest; // 0x90
};

struct UARPin : UObject {
	UARTrackedGeometry* TrackedGeometry; // 0x28
	USceneComponent* PinnedComponent; // 0x30
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	FMulticastInlineDelegate OnARTrackingStateChanged; // 0xc0
	FMulticastInlineDelegate OnARTransformUpdated; // 0xd0
};

struct UIconAbilityCooldownAlarmWBP_Survivor_Middle_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FadeOut_Alarm; // 0x268
	UWidgetAnimation* FadeIn_Alarm; // 0x270
	UWidgetAnimation* FadeOut; // 0x278
	UWidgetAnimation* FadeIn; // 0x280
	UImage* BG; // 0x288
	UBorder* Border_AbilityIcon; // 0x290
	UBorder* Border_AbilityIcon_2; // 0x298
	UBorder* Border_AbilityIcon_3; // 0x2a0
	UBorder* Border_AbilityIcon_4; // 0x2a8
	UBorder* Border_AbilityIcon_5; // 0x2b0
	UImage* Image_55; // 0x2b8
	UImage* Image_101; // 0x2c0
	UImage* Image_Avatar; // 0x2c8
	UOverlay* Overlay_46; // 0x2d0
	UOverlay* Overlay_surv; // 0x2d8
	USizeBox* SizeBox_1; // 0x2e0
	USizeBox* SizeBox_3; // 0x2e8
	UTextBlock* Text_Action; // 0x2f0
	UTextBlock* Text_Nickname; // 0x2f8
	UTextBlock* TextBlock; // 0x300
	UTextBlock* TextBlock_61; // 0x308
	UTextBlock* TextBlock_106; // 0x310
	UWidgetSwitcher* WidgetSwitcher_Surv; // 0x318
	FTimerHandle TimerCallAnimFadeOut; // 0x320
	FTimerHandle TimerCallAnimFadeOutAlarm; // 0x328
	FMulticastInlineDelegate OnAlarmNotificationIsHiddenManually; // 0x330
	FMulticastInlineDelegate OnAvatarNotificationHidden; // 0x340
	TMap<SurvChars, UPaperSprite*> AvatarsMap; // 0x350
	float NotificationTime; // 0x3a0
};

struct UParticleModuleLocationPrimitiveTriangle : UParticleModuleLocationBase {
	FRawDistributionVector StartOffset; // 0x30
	FRawDistributionFloat Height; // 0x78
	FRawDistributionFloat Angle; // 0xa8
	FRawDistributionFloat Thickness; // 0xd8
};

struct UGameplayTagsManager : UObject {
	TArray<FGameplayTagSource> TagSources; // 0xc0
	TArray<UDataTable*> GameplayTagTables; // 0x1b0
};

struct ULocationServicesImpl : UObject {
	FMulticastInlineDelegate OnLocationChanged; // 0x28
};

struct UInterpTrackFloatProp : UInterpTrackFloatBase {
	FName PropertyName; // 0x90
};

struct UEditableGameplayTagQuery : UObject {
	FString UserDescription; // 0x28
	UEditableGameplayTagQueryExpression* RootExpression; // 0x48
	FGameplayTagQuery TagQueryExportText_Helper; // 0x50
};

struct UDistributionFloatConstant : UDistributionFloat {
	float Constant; // 0x38
};

struct UBansheeKillerWalkGrabbedShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct USoundNodeDialoguePlayer : USoundNode {
	FDialogueWaveParameter DialogueWaveParameter; // 0x48
	char bLooping : 1; // 0x68
};

struct UMaterialExpressionParticleSubUV : UMaterialExpressionTextureSample {
	char bBlend : 1; // 0x60
};

struct UWidgetBlueprintGeneratedClass : UBlueprintGeneratedClass {
	UWidgetTree* WidgetTree; // 0x328
	char bClassRequiresNativeTick : 1; // 0x330
	TArray<FDelegateRuntimeBinding> Bindings; // 0x338
	TArray<UWidgetAnimation*> Animations; // 0x348
	TArray<FName> NamedSlots; // 0x358
};

struct ACoinActor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USphereComponent* Sphere1; // 0x228
	UFMODAudioComponent* FMODAudio1; // 0x230
	UStaticMeshComponent* Cube; // 0x238
	USmoothSync* SmoothSync; // 0x240
	UFMODAudioComponent* FmodAudio; // 0x248
	UParticleSystemComponent* ParticleSystem; // 0x250
	USphereComponent* Sphere; // 0x258
	UPointLightComponent* PointLight; // 0x260
	float Timeline_0_Alpha_CEEA19814DF45D5FC7AD0ABCF514B472; // 0x268
	ETimelineDirection Timeline_0__Direction_CEEA19814DF45D5FC7AD0ABCF514B472; // 0x26c
	UTimelineComponent* Timeline_1; // 0x270
	int32_t Points; // 0x278
	bool EaseUp; // 0x27c
	float EaseAlpha; // 0x280
	float LocalZ; // 0x284
	float DefaultLightIntensity; // 0x288
	bool Block?; // 0x28c
	bool FromKiller; // 0x28d
	AActor* LerpingActor; // 0x290
	UMaterialInstanceDynamic* Material; // 0x298
	FVector StartPosition; // 0x2a0
	float rotationFloat; // 0x2ac
	bool ground; // 0x2b0
	bool FromAlarm; // 0x2b1
	bool zUp; // 0x2b2
	bool zDown; // 0x2b3
	bool IsStun; // 0x2b4
	bool IsFlashlight; // 0x2b5
	bool SceneSpawnMoney?; // 0x2b6
	FTransform SavedTransform; // 0x2c0
	CoinEnum CoinType; // 0x2f0
	bool B; // 0x2f1
	bool FromSurv; // 0x2f2
	int32_t DeathSurvPoints; // 0x2f4
};

struct UMovementComponent : UActorComponent {
	USceneComponent* UpdatedComponent; // 0xb0
	UPrimitiveComponent* UpdatedPrimitive; // 0xb8
	FVector Velocity; // 0xc4
	FVector PlaneConstraintNormal; // 0xd0
	FVector PlaneConstraintOrigin; // 0xdc
	char bUpdateOnlyIfRendered : 1; // 0xe8
	char bAutoUpdateTickRegistration : 1; // 0xe8
	char bTickBeforeOwner : 1; // 0xe8
	char bAutoRegisterUpdatedComponent : 1; // 0xe8
	char bConstrainToPlane : 1; // 0xe8
	char bSnapToPlaneAtStart : 1; // 0xe8
	char bAutoRegisterPhysicsVolumeUpdates : 1; // 0xe8
	char bComponentShouldUpdatePhysicsVolume : 1; // 0xe8
	EPlaneConstraintAxisSetting PlaneConstraintAxisSetting; // 0xeb
};

struct UParticleModuleAccelerationOverLifetime : UParticleModuleAccelerationBase {
	FRawDistributionVector AccelOverLife; // 0x38
};

struct APawn : AActor {
	char bUseControllerRotationPitch : 1; // 0x228
	char bUseControllerRotationYaw : 1; // 0x228
	char bUseControllerRotationRoll : 1; // 0x228
	char bCanAffectNavigationGeneration : 1; // 0x228
	float BaseEyeHeight; // 0x22c
	EAutoReceiveInput AutoPossessPlayer; // 0x230
	EAutoPossessAI AutoPossessAI; // 0x231
	char RemoteViewPitch; // 0x232
	AController* AIControllerClass; // 0x238
	APlayerState* PlayerState; // 0x240
	AController* LastHitBy; // 0x250
	AController* Controller; // 0x258
	FVector ControlInputVector; // 0x264
	FVector LastControlInputVector; // 0x270
};

struct UForceFeedbackEffect : UObject {
	TArray<FForceFeedbackChannelDetails> ChannelDetails; // 0x28
	float Duration; // 0x38
};

struct UScrollBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct USubmixEffectDynamicsProcessorPreset : USoundEffectSubmixPreset {
	FSubmixEffectDynamicsProcessorSettings Settings; // 0xe0
};

struct UDatasmithStaticMeshGLTFImportData : UDatasmithStaticMeshImportData {
	FString SourceMeshName; // 0x28
};

struct UUserDefinedImageCaptureProtocol : UUserDefinedCaptureProtocol {
	EDesiredImageFormat Format; // 0xd8
	bool bEnableCompression; // 0xd9
	int32_t CompressionQuality; // 0xdc
};

struct UO_BEClient_C : UBEClient {
	FPointerToUberGraphFrame UberGraphFrame; // 0x28
	FMulticastInlineDelegate SendPacketEvent; // 0x30
	FMulticastInlineDelegate PrintMessageEvent; // 0x40
	FMulticastInlineDelegate RequestRestartEvent; // 0x50
};

struct UW_CustomizeBanner_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Avatar; // 0x268
	UButton* Button_Bunner; // 0x270
	UButton* Button_Tags; // 0x278
	UImage* Image_4; // 0x280
	UImage* Image_5; // 0x288
	UImage* Image_6; // 0x290
	UImage* Image_7; // 0x298
	UImage* Image_65; // 0x2a0
	UImage* Image_518; // 0x2a8
	UImage* Image_Arrow; // 0x2b0
	UImage* Image_Arrow_2; // 0x2b8
	UImage* Image_Arrow_3; // 0x2c0
	USizeBox* SizeBox_AvatarButton; // 0x2c8
	USizeBox* SizeBox_BannerButton; // 0x2d0
	USizeBox* SizeBox_TagsButton; // 0x2d8
	UTextBlock* TextBannerInfo; // 0x2e0
	UTextBlock* TextBannerName; // 0x2e8
	UTextBlock* TextBannerRarity; // 0x2f0
	UTextBlock* TextBlock_Avatar; // 0x2f8
	UTextBlock* TextBlock_Banner; // 0x300
	UTextBlock* TextBlock_Tags; // 0x308
	UUniformGridPanel* UniformGridPanel_Avatar; // 0x310
	UUniformGridPanel* UniformGridPanel_Banner; // 0x318
	UUniformGridPanel* UniformGridPanel_Tags; // 0x320
	UVerticalBox* VerticalBox_Buttons; // 0x328
	UVerticalBox* VerticalBox_Information; // 0x330
	UW_Banner_C* W_Banner; // 0x338
	UWidgetSwitcher* WidgetSwitcher_Main; // 0x340
	TSoftObjectPtr<UDataTable> DataTableBanners; // 0x348
	TSoftObjectPtr<UDataTable> DataTableAvatars; // 0x370
	TSoftObjectPtr<UDataTable> DTTags; // 0x398
	UW_CustomizeAvatarInfo_C* SelectedAvatar; // 0x3c0
	UW_CustomizeBannerInfo_C* SelectedBanner; // 0x3c8
	TArray<UW_CustomizeAvatarInfo_C*> AvatarSelectorArr; // 0x3d0
	TArray<UW_CustomizeBannerInfo_C*> BannerSelectorArr; // 0x3e0
	TArray<UW_CutomizeTagInfo_C*> TagButtons; // 0x3f0
	UW_CutomizeTagInfo_C* SelectedTag; // 0x400
	bool IsButtonHover?_FocusGraphic; // 0x408
	bool IsButtonHover?_FocusControl; // 0x409
	bool IsButtonHover?_FocusAudio; // 0x40a
};

struct UW_RoleSelector_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Any; // 0x268
	UButton* Button_Killer; // 0x270
	UButton* Button_Surv; // 0x278
	UHorizontalBox* HorizontalBox_49; // 0x280
	UImage* Image; // 0x288
	UImage* Image_174; // 0x290
	UImage* Image_267; // 0x298
	UImage* Image_AR_Indicator; // 0x2a0
	UImage* Image_K_Indicator; // 0x2a8
	UImage* Image_S_Indicator; // 0x2b0
	UOverlay* Overlay_AnyRole; // 0x2b8
	UTextBlock* TextBlock_188; // 0x2c0
	UTextBlock* TextBlock_300; // 0x2c8
	UTextBlock* TextBlock_399; // 0x2d0
	E_RoleType RoleType; // 0x2d8
	UButton* FocusedButton; // 0x2e0
};

struct UCrowdFollowingComponent : UPathFollowingComponent {
	FVector CrowdAgentMoveDirection; // 0x268
};

struct UNiagaraDataInterfaceArray : UNiagaraDataInterface {
	int32_t MaxElements; // 0x40
};

struct UAISystemBase : UObject {
	FSoftClassPath AISystemClassName; // 0x28
	FName AISystemModuleName; // 0x40
	bool bInstantiateAISystemOnClient; // 0x50
};

struct AEndGameCoin_C : AActor {
	UStaticMeshComponent* StaticMesh; // 0x220
	USceneComponent* DefaultSceneRoot; // 0x228
};

struct UParticleModuleMeshRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionVector LifeMultiplier; // 0x30
};

struct UAndroidPermissionCallbackProxy : UObject {
	FMulticastInlineDelegate OnPermissionsGrantedDynamicDelegate; // 0x28
};

struct UAIPerceptionSystem : UAISubsystem {
	TArray<UAISense*> Senses; // 0x88
	float PerceptionAgingRate; // 0x98
};

struct UGrannyKillerWalkGrabbedShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UW_LobbySurv_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Select_Anim; // 0x268
	UWidgetAnimation* PickSurv; // 0x270
	UButton* Button; // 0x278
	UImage* Image_133; // 0x280
	UImage* Image_RedBlur; // 0x288
	UOverlay* Overlay_FULL; // 0x290
	UImage* ProfessionImage; // 0x298
	UTextBlock* ProfessionText; // 0x2a0
	UW_MiniLobby_Role_C* W_MiniLobby_Role; // 0x2a8
	SurvClass SurvClass; // 0x2b0
	UW_MiniLobby_C* Owner; // 0x2b8
	SurvSkills SurvSkill; // 0x2c0
	bool Class?; // 0x2c1
	SurvChars Char; // 0x2c2
	bool bStartAnimButton?UP; // 0x2c3
	bool bStartAnimButton?DOWN; // 0x2c4
	float CounterTimeUP; // 0x2c8
	bool Selected; // 0x2cc
};

struct UMovieScenePrimitiveMaterialSection : UMovieSceneSection {
	FMovieSceneObjectPathChannel MaterialChannel; // 0xe8
};

struct UWidget : UVisual {
	UPanelSlot* Slot; // 0x28
	FDelegate bIsEnabledDelegate; // 0x30
	FText ToolTipText; // 0x40
	FDelegate ToolTipTextDelegate; // 0x58
	UWidget* ToolTipWidget; // 0x68
	FDelegate ToolTipWidgetDelegate; // 0x70
	FDelegate VisibilityDelegate; // 0x80
	FWidgetTransform RenderTransform; // 0x90
	FVector2D RenderTransformPivot; // 0xac
	char bIsVariable : 1; // 0xb4
	char bCreatedByConstructionScript : 1; // 0xb4
	char bIsEnabled : 1; // 0xb4
	char bOverride_Cursor : 1; // 0xb4
	USlateAccessibleWidgetData* AccessibleWidgetData; // 0xb8
	char bIsVolatile : 1; // 0xc0
	EMouseCursor Cursor; // 0xc1
	EWidgetClipping Clipping; // 0xc2
	ESlateVisibility Visibility; // 0xc3
	float RenderOpacity; // 0xc4
	UWidgetNavigation* Navigation; // 0xc8
	EFlowDirectionPreference FlowDirectionPreference; // 0xd0
	TArray<UPropertyBinding*> NativeBindings; // 0xf8
};

struct UGizmoAxisRotationParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float Angle; // 0xb0
	FGizmoFloatParameterChange LastChange; // 0xb4
	FVector CurRotationAxis; // 0xbc
	FVector CurRotationOrigin; // 0xc8
	FTransform InitialTransform; // 0xe0
};

struct USG_Playfab_C : USaveGame {
	FPointerToUberGraphFrame UberGraphFrame; // 0x28
	FString ID; // 0x30
};

struct AEndGameBP_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	URectLightComponent* RectLight6; // 0x228
	URectLightComponent* RectLight8; // 0x230
	USceneComponent* KillerPoint; // 0x238
	URectLightComponent* RectLight5; // 0x240
	UBoxComponent* OverlapHiddenActors; // 0x248
	URectLightComponent* RectLight3; // 0x250
	USceneComponent* NewCameraEndPoint; // 0x258
	USceneComponent* NewCameraPoint; // 0x260
	USceneComponent* EndPoint2Killer; // 0x268
	USceneComponent* EndPointKiller; // 0x270
	USceneComponent* StartPointKiller; // 0x278
	USceneComponent* Surv6Point; // 0x280
	USceneComponent* Surv7Point; // 0x288
	USceneComponent* Surv5Point; // 0x290
	USceneComponent* Surv4Point; // 0x298
	USceneComponent* Surv3Point; // 0x2a0
	USceneComponent* Surv2Point; // 0x2a8
	USceneComponent* KillerPoint3; // 0x2b0
	USceneComponent* KillerPoint2; // 0x2b8
	USceneComponent* Surv1Point; // 0x2c0
	USceneComponent* PlayersPoints; // 0x2c8
	USceneComponent* EndPoint; // 0x2d0
	USceneComponent* EndPoint2; // 0x2d8
	USceneComponent* LookPoint; // 0x2e0
	USceneComponent* StartPoint; // 0x2e8
	UCineCameraComponent* CineCamera; // 0x2f0
	USceneComponent* CameraLoc; // 0x2f8
	USkeletalMeshComponent* Killer1; // 0x300
	USkeletalMeshComponent* Killer2; // 0x308
	USkeletalMeshComponent* Killer3; // 0x310
	USkeletalMeshComponent* Surv2; // 0x318
	USkeletalMeshComponent* Surv7; // 0x320
	USkeletalMeshComponent* Surv6; // 0x328
	USkeletalMeshComponent* Surv5; // 0x330
	USkeletalMeshComponent* Surv4; // 0x338
	USkeletalMeshComponent* Surv3; // 0x340
	USkeletalMeshComponent* Surv1; // 0x348
	UStaticMeshComponent* Plane; // 0x350
	UTextRenderComponent* TextRender9; // 0x358
	UTextRenderComponent* TextRender8; // 0x360
	UTextRenderComponent* TextRender7; // 0x368
	UTextRenderComponent* TextRender6; // 0x370
	UTextRenderComponent* TextRender5; // 0x378
	UTextRenderComponent* TextRender4; // 0x380
	UTextRenderComponent* TextRender3; // 0x388
	UTextRenderComponent* TextRender2; // 0x390
	UTextRenderComponent* TextRender1; // 0x398
	UTextRenderComponent* TextRender; // 0x3a0
	USceneComponent* SharedRoot; // 0x3a8
	float NewEndGameTimeline_Alpha_A4F1A862465DD968E89DDA84774FF1C2; // 0x3b0
	ETimelineDirection NewEndGameTimeline__Direction_A4F1A862465DD968E89DDA84774FF1C2; // 0x3b4
	UTimelineComponent* NewEndGameTimeline; // 0x3b8
	FVector KillerCameraLerp_Rotation_C501199D4FD4696A79504BB37BB9C5AF; // 0x3c0
	FVector KillerCameraLerp_Location_C501199D4FD4696A79504BB37BB9C5AF; // 0x3cc
	float KillerCameraLerp_Camera_C501199D4FD4696A79504BB37BB9C5AF; // 0x3d8
	ETimelineDirection KillerCameraLerp__Direction_C501199D4FD4696A79504BB37BB9C5AF; // 0x3dc
	UTimelineComponent* KillerCameraLerp; // 0x3e0
	FVector CameraLerp_Rotation_10464FBF4DA3C40F9E525C843F3343B9; // 0x3e8
	FVector CameraLerp_Location_10464FBF4DA3C40F9E525C843F3343B9; // 0x3f4
	float CameraLerp_Camera_10464FBF4DA3C40F9E525C843F3343B9; // 0x400
	ETimelineDirection CameraLerp__Direction_10464FBF4DA3C40F9E525C843F3343B9; // 0x404
	UTimelineComponent* CameraLerp; // 0x408
	TArray<USceneComponent*> alarmsArray; // 0x410
	int32_t AlarmsCount; // 0x420
	int32_t EndGameType; // 0x424
	bool ChangedLoc?; // 0x428
	bool ChangedKillerLoc?; // 0x429
	TArray<AActor*> HiddenActors; // 0x430
	bool Teleported?; // 0x440
	TArray<USceneComponent*> Points; // 0x448
	TArray<USceneComponent*> Meshs; // 0x458
	USceneComponent* Temp; // 0x468
};

struct UNiagaraDataInterfaceRenderTarget2DArray : UNiagaraDataInterfaceRWBase {
	FIntVector Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe4
	char bOverrideFormat : 1; // 0xe5
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTarget2DArray*> ManagedRenderTargets; // 0x108
};

struct UDistributionVector : UDistribution {
	char bCanBeBaked : 1; // 0x30
	char bIsDirty : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UConstantQNRTSettings : UAudioSynesthesiaNRTSettings {
	float StartingFrequency; // 0x28
	int32_t NumBands; // 0x2c
	float NumBandsPerOctave; // 0x30
	float AnalysisPeriod; // 0x34
	bool bDownmixToMono; // 0x38
	EConstantQFFTSizeEnum FFTSize; // 0x39
	EFFTWindowType WindowType; // 0x3a
	EAudioSpectrumType SpectrumType; // 0x3b
	float BandWidthStretch; // 0x3c
	EConstantQNormalizationEnum CQTNormalization; // 0x40
	float NoiseFloorDb; // 0x44
};

struct UParticleModuleVelocityBase : UParticleModule {
	char bInWorldSpace : 1; // 0x30
	char bApplyOwnerScale : 1; // 0x30
};

struct UMaterialExpressionShaderStageSwitch : UMaterialExpression {
	FExpressionInput PixelShader; // 0x40
	FExpressionInput VertexShader; // 0x54
};

struct UATPCCameraModeScript : UObject {
	UATPCCameraComponent* OwningCamera; // 0x28
	bool bEnableTick; // 0x30
	EATPCCameraModeScriptTickGroup TickGroup; // 0x34
};

struct UOnlineEngineInterfaceImpl : UOnlineEngineInterface {
	FName VoiceSubsystemNameOverride; // 0x28
};

struct UMovieSceneSignedObject : UObject {
	FGuid Signature; // 0x28
};

struct UWB_KeyBindOverlay_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* ButtonReFocuser; // 0x268
	UOverlay* Changer; // 0x270
	UInputKeySelector* Gamepad_InputKeySelector; // 0x278
	UImage* Image; // 0x280
	UImage* Image_2; // 0x288
	UImage* Image_3; // 0x290
	UImage* Image_4; // 0x298
	UImage* Image_5; // 0x2a0
	UImage* Image_7; // 0x2a8
	UImage* Image_8; // 0x2b0
	UImage* Image_9; // 0x2b8
	UImage* Image_10; // 0x2c0
	UImage* Image_11; // 0x2c8
	UImage* Image_12; // 0x2d0
	UImage* Image_83; // 0x2d8
	UImage* Image_377; // 0x2e0
	UImage* Image_KeyGP_2; // 0x2e8
	UImage* Image_KeyGP_3; // 0x2f0
	UImage* Image_KeyKB; // 0x2f8
	UInputKeySelector* Keyboard_InputKeySelector; // 0x300
	USafeZone* SafeZone; // 0x308
	USafeZone* SafeZone_278; // 0x310
	USizeBox* SizeBox_KeyGP_3; // 0x318
	UTextBlock* TextBlock_clear_GP; // 0x320
	UTextBlock* TextBlock_clear_GP_2; // 0x328
	UTextBlock* TextBlock_emty; // 0x330
	UTextBlock* TextBlock_emty_GP; // 0x338
	UTextBlock* TextBlock_Input_GP; // 0x340
	UTextBlock* TextBlock_Input_GP_2; // 0x348
	UTextBlock* TextBlock_KeyGP; // 0x350
	UTextBlock* TextBlock_KeyGP_2; // 0x358
	UTextBlock* TextBlock_KeyKB; // 0x360
	UTextBlock* TextBlock_SomeTEXT; // 0x368
	UWidgetSwitcher* WidgetSwitcher_Keyboard; // 0x370
	UWidgetSwitcher* WidgetSwitcher_KeyGamePad; // 0x378
	UWidgetSwitcher* WidgetSwitcher_KeySelStyleBtn_gamepad; // 0x380
	UWidgetSwitcher* WidgetSwitcher_KeySelStyleBtn_KeyBoard; // 0x388
	bool bIsSelected; // 0x390
	FMulticastInlineDelegate EventDispatcher_LeftBtn; // 0x398
	FMulticastInlineDelegate EventDispatcher_RightBtn; // 0x3a8
	FMulticastInlineDelegate OnPressed; // 0x3b8
	FName InputNameKey; // 0x3c8
	FInputChord Gamepad_LastKeyChanged; // 0x3d0
	FInputChord Gamepad_LastKeySelected; // 0x3f0
	FInputAxisKeyMapping Gamepad_BeingReplaced; // 0x410
	TMap<FString, UPaperSprite*> Gamepad_TextButtons_ImageWrap1; // 0x438
	TMap<FString, UPaperSprite*> Gamepad_TextButtons_ImageWrap2; // 0x488
	TArray<FString> Gamepad_TextButtons_ImageWrap2_Hide; // 0x4d8
	FInputChord Keyboard_LastKeyChanged; // 0x4e8
	FInputChord Keyboard_LastKeySelected; // 0x508
	FInputAxisKeyMapping Keyboard_BeingReplaced; // 0x528
	TMap<FString, FText> Keyboard_TextButtons; // 0x550
	TMap<FString, UPaperSprite*> Keyboard_TextButtons_ImageWrap; // 0x5a0
	FTextBlockStyle Text Style_Vis; // 0x5f0
	FTextBlockStyle Text Style_InVis; // 0x860
	FMulticastInlineDelegate CurrentKey; // 0xad0
	UWB_IdenticalBindsDialog_C* IdenticalBind; // 0xae0
	TArray<FText> Array_Surv; // 0xae8
	bool Press_Keyboard?; // 0xaf8
	UWB_KeyBindOverlay_C* WB_LastSwap; // 0xb00
	FInputChord SavedSelectedKey_Swaped_GamePad; // 0xb08
	FText Intext_KEYNAME; // 0xb28
};

struct UAppleImageUtilsBaseAsyncTaskBlueprintProxy : UObject {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
	FAppleImageUtilsImageConversionResult ConversionResult; // 0x60
};

struct UNavArea : UNavAreaBase {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UFoliageType_InstancedStaticMesh : UFoliageType {
	UStaticMesh* Mesh; // 0x3a8
	TArray<UMaterialInterface*> OverrideMaterials; // 0x3b0
	UFoliageInstancedStaticMeshComponent* ComponentClass; // 0x3c0
};

struct UWBP_CustomComboBox_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Selector; // 0x268
	UImage* Image_Arrow; // 0x270
	UImage* Image_ContentBG; // 0x278
	UImage* Image_ScrollBG; // 0x280
	UImage* Image_Selected; // 0x288
	UImage* Image_Separator; // 0x290
	UScrollBox* ScrollBox_711; // 0x298
	USizeBox* SizeBox_Content; // 0x2a0
	UTextBlock* Text_Label; // 0x2a8
	UVerticalBox* VerticalBox_Entries; // 0x2b0
	FText Label; // 0x2b8
	TArray<FText> Entries; // 0x2d0
	int32_t MaxNumVisibleEntries; // 0x2e0
	FTimerHandle AnimTickTimer; // 0x2e8
	float AnimSpeed; // 0x2f0
	bool MultiSelect; // 0x2f4
	bool IsExpanded; // 0x2f5
	int32_t CurrentEntryIndex; // 0x2f8
	TArray<int32_t> SelectedEntries; // 0x300
	FMulticastInlineDelegate OnEntryClicked; // 0x310
	FMulticastInlineDelegate OnEntrySelected; // 0x320
	FMulticastInlineDelegate OnExpanded; // 0x330
	FMulticastInlineDelegate OnCollapsed; // 0x340
	bool NeedScrollBar; // 0x350
	bool UseSelectedEntryName; // 0x351
	FCheckBoxStyle CheckedBrush; // 0x358
	bool CanHoverLabel; // 0x8d8
	bool Play Sound; // 0x8d9
	UWBP_CustomComboBoxEntry_C* FocusedEntry; // 0x8e0
	bool IsSelectorHovered; // 0x8e8
};

struct AGM_PropHunt_Lab_C : AGM_PropHunt_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x370
	UAC_BattlEye_Server_C* AC_BattlEye_Server; // 0x378
};

struct URendererOverrideSettings : UDeveloperSettings {
	char bSupportAllShaderPermutations : 1; // 0x38
	char bForceRecomputeTangents : 1; // 0x38
};

struct UGizmoTransformProxyTransformSource : UGizmoBaseTransformSource {
	UTransformProxy* Proxy; // 0x48
};

struct UEOSCoreLobbySendInvite : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UAnimationSharingSetup : UObject {
	TArray<FPerSkeletonAnimationSharingSetup> SkeletonSetups; // 0x28
	FAnimationSharingScalability ScalabilitySettings; // 0x38
};

struct UShaderPlatformQualitySettings : UObject {
	FMaterialQualityOverrides QualityOverrides[0x4]; // 0x28
};

struct ULightmassPortalComponent : USceneComponent {
	UBoxComponent* PreviewBox; // 0x1f8
};

struct UAnimationAsset : UObject {
	USkeleton* Skeleton; // 0x38
	TArray<UAnimMetaData*> MetaData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct ACamLobby_C : ACameraActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x7a0
};

struct UW_PlayerSkins_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* SkinSelect; // 0x268
	UWidgetAnimation* CharSelect; // 0x270
	UButton* Button_LockAll; // 0x278
	UButton* Button_UnlockAll; // 0x280
	UScrollBox* ScrollBox_Skins; // 0x288
	UTextBlock* TextBlock_SkinName; // 0x290
	UUniformGridPanel* UniformGridPanel_CharSelect; // 0x298
	UVerticalBox* VerticalBox_Develop; // 0x2a0
	TMap<int32_t, FString> NameById; // 0x2a8
	TArray<UW_PlayerPortraitInfo_C*> skinButtonInfoArr; // 0x2f8
	UW_PlayerPortraitInfo_C* ChararcterFocused; // 0x308
	int32_t SkinIndex; // 0x310
	UW_PlayerSkinInfo_C* SkinselectItem; // 0x318
	TArray<UW_PlayerSkinInfo_C*> SkinSelectButtonArr; // 0x320
	UW_Path_C* ExplorerWidget; // 0x330
	UW_PlayerSkinInfo_C* SkinselectItem_LastValid; // 0x338
	UWBP_CustomizationMenu_C* MenuWidget; // 0x340
	TArray<int32_t> BeginAccessSkins; // 0x348
	UW_PlayerSkinInfo_C* SkinFocused; // 0x358
	bool IsSkinSelectionActive; // 0x360
};

struct ALandscapeMeshProxyActor : AActor {
	ULandscapeMeshProxyComponent* LandscapeMeshProxyComponent; // 0x220
};

struct UWBP_EffectBloodLust_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Background; // 0x268
	UCanvasPanel* CanvasPanel_Main; // 0x270
	UHorizontalBox* HorizontalBox_403; // 0x278
	UImage* Image_122; // 0x280
	UImage* Image_298; // 0x288
	UImage* Image_Blood; // 0x290
	UImage* Image_Blood_3; // 0x298
	UImage* Image_Blood_4; // 0x2a0
	UImage* Image_Blood_5; // 0x2a8
	UImage* Image_Blood_6; // 0x2b0
	UImage* Image_Blood_7; // 0x2b8
	UImage* Image_Blood_8; // 0x2c0
	UTextBlock* TextBlock; // 0x2c8
	UTextBlock* TextBlock_132; // 0x2d0
	UWidgetSwitcher* WidgetSwitcher_BloodRush; // 0x2d8
	UMaterial* Material; // 0x2e0
	UMaterialInstanceDynamic* Material INstance; // 0x2e8
	float Global_Time; // 0x2f0
	UObject* Book; // 0x2f8
	UObject* Pot; // 0x300
	UObject* Anbrosia; // 0x308
	float Duration; // 0x310
	bool Chase?; // 0x314
	int32_t Level; // 0x318
	bool MOVETOAFK; // 0x31c
	float XZ_TIME); // 0x320
	float PROGRESS_BAR; // 0x324
	float LevelBL; // 0x328
	bool SSSR; // 0x32c
};

struct UParticleModuleLifetime_Seeded : UParticleModuleLifetime {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct ULevel : UObject {
	UWorld* OwningWorld; // 0xb8
	UModel* Model; // 0xc0
	TArray<UModelComponent*> ModelComponents; // 0xc8
	ULevelActorContainer* ActorCluster; // 0xd8
	int32_t NumTextureStreamingUnbuiltComponents; // 0xe0
	int32_t NumTextureStreamingDirtyResources; // 0xe4
	ALevelScriptActor* LevelScriptActor; // 0xe8
	ANavigationObjectBase* NavListStart; // 0xf0
	ANavigationObjectBase* NavListEnd; // 0xf8
	TArray<UNavigationDataChunk*> NavDataChunks; // 0x100
	float LightmapTotalSize; // 0x110
	float ShadowmapTotalSize; // 0x114
	TArray<FVector> StaticNavigableGeometry; // 0x118
	TArray<FGuid> StreamingTextureGuids; // 0x128
	FGuid LevelBuildDataId; // 0x1d0
	UMapBuildDataRegistry* MapBuildData; // 0x1e0
	FIntVector LightBuildLevelOffset; // 0x1e8
	char bIsLightingScenario : 1; // 0x1f4
	char bTextureStreamingRotationChanged : 1; // 0x1f4
	char bStaticComponentsRegisteredInStreamingManager : 1; // 0x1f4
	char bIsVisible : 1; // 0x1f4
	AWorldSettings* WorldSettings; // 0x258
	TArray<UAssetUserData*> AssetUserData; // 0x268
	TArray<FReplicatedStaticActorDestructionInfo> DestroyedReplicatedStaticActors; // 0x288
};

struct ATutorialTrigger_C : ATriggerBox {
	FPointerToUberGraphFrame UberGraphFrame; // 0x228
	AActor* DoorTrigger; // 0x230
	AActor* SurvPart2-1; // 0x238
	AActor* SurvPart2-2; // 0x240
	bool QuestTrigger?; // 0x248
	bool Block; // 0x249
};

struct UMagicLeapARPinSettings : UObject {
	float UpdateCheckFrequency; // 0x28
	FMagicLeapARPinState OnUpdatedEventTriggerDelta; // 0x2c
};

struct AItemsBPActual_KeymasterBook_C : AItemsBPHand_C {
	UStaticMeshComponent* CubeInvis; // 0x238
};

struct UDoppelKillerWalkGrabbedShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UTextureRenderTargetCube : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	FLinearColor ClearColor; // 0xe4
	EPixelFormat OverrideFormat; // 0xf4
	char bHDR : 1; // 0xf5
	char bForceLinearGamma : 1; // 0xf5
};

struct UMovieSceneVectorSection : UMovieSceneSection {
	FMovieSceneFloatChannel Curves[0x4]; // 0xe8
	int32_t ChannelsUsed; // 0x368
};

struct UPacketHandlerProfileConfig : UObject {
	TArray<FString> Components; // 0x28
};

struct UATPCCameraBaseObject : UObject {
	UATPCCameraComponent* OwningCamera; // 0x28
};

struct UDatasmithCineCameraComponentTemplate : UDatasmithObjectTemplate {
	FDatasmithCameraFilmbackSettingsTemplate FilmbackSettings; // 0x30
	FDatasmithCameraLensSettingsTemplate LensSettings; // 0x38
	FDatasmithCameraFocusSettingsTemplate FocusSettings; // 0x3c
	float CurrentFocalLength; // 0x44
	float CurrentAperture; // 0x48
	FDatasmithPostProcessSettingsTemplate PostProcessSettings; // 0x50
};

struct AGM_PropHunt_C : APropnightGameMode {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	UPlayfabServerComponent* PlayfabServer; // 0x2c8
	UBP_ServerReporter_C* BP_ServerReporter; // 0x2d0
	USceneComponent* DefaultSceneRoot; // 0x2d8
	bool IsGameStarted; // 0x2e0
	int32_t Seconds; // 0x2e4
	int32_t PlayersCount; // 0x2e8
	FTimerHandle ShutdownServerHandle; // 0x2f0
	float ShutdownTimer; // 0x2f8
	int32_t RoundTime; // 0x2fc
	APropnightBeaconHost* BeaconHost; // 0x300
	bool LockTravel; // 0x308
	bool StopTimer?; // 0x309
	bool StartNextGameTimer?; // 0x30a
	int32_t NextGameTimer; // 0x30c
	int32_t MatchTime; // 0x310
	bool IsPlayerReloadingAlarm; // 0x314
	TArray<ANewAlarmBP_C*> Alarms; // 0x318
	FString Status; // 0x328
	FString MapName; // 0x338
	TArray<APC_PropHunt_C*> PlayfabPlayers; // 0x348
	bool CustomSession; // 0x358
	FString PlayfabKillerID; // 0x360
};

struct UConsoleSettings : UObject {
	int32_t MaxScrollbackSize; // 0x28
	TArray<FAutoCompleteCommand> ManualAutoCompleteList; // 0x30
	TArray<FString> AutoCompleteMapPaths; // 0x40
	float BackgroundOpacityPercentage; // 0x50
	bool bOrderTopToBottom; // 0x54
	bool bDisplayHelpInAutoComplete; // 0x55
	FColor InputColor; // 0x58
	FColor HistoryColor; // 0x5c
	FColor AutoCompleteCommandColor; // 0x60
	FColor AutoCompleteCVarColor; // 0x64
	FColor AutoCompleteFadedColor; // 0x68
};

struct UNetConnection : UPlayer {
	TArray<UChildConnection*> Children; // 0x48
	UNetDriver* Driver; // 0x58
	UPackageMap* PackageMapClass; // 0x60
	UPackageMap* PackageMap; // 0x68
	TArray<UChannel*> OpenChannels; // 0x70
	TArray<AActor*> SentTemporaries; // 0x80
	AActor* ViewTarget; // 0x90
	AActor* OwningActor; // 0x98
	int32_t MaxPacket; // 0xa0
	char InternalAck : 1; // 0xa4
	FUniqueNetIdRepl PlayerId; // 0x160
	double LastReceiveTime; // 0x1d0
	TArray<UChannel*> ChannelsToTick; // 0x1518
};

struct UBTDecorator_IsBBEntryOfClass : UBTDecorator_BlackboardBase {
	UObject* TestClass; // 0x90
};

struct USurvFart_C : USurvivorSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
	UFMODAudioComponent* Sound; // 0x100
};

struct UFont : UObject {
	EFontCacheType FontCacheType; // 0x30
	TArray<FFontCharacter> Characters; // 0x38
	TArray<UTexture2D*> Textures; // 0x48
	int32_t IsRemapped; // 0x58
	float EmScale; // 0x5c
	float Ascent; // 0x60
	float Descent; // 0x64
	float Leading; // 0x68
	int32_t Kerning; // 0x6c
	FFontImportOptionsData ImportOptions; // 0x70
	int32_t NumCharacters; // 0x120
	TArray<int32_t> MaxCharHeight; // 0x128
	float ScalingFactor; // 0x138
	int32_t LegacyFontSize; // 0x13c
	FName LegacyFontName; // 0x140
	FCompositeFont CompositeFont; // 0x148
};

struct UMediaTexture : UTexture {
	TextureAddress AddressX; // 0xd8
	TextureAddress AddressY; // 0xd9
	bool AutoClear; // 0xda
	FLinearColor ClearColor; // 0xdc
	bool EnableGenMips; // 0xec
	char NumMips; // 0xed
	bool NewStyleOutput; // 0xee
	MediaTextureOutputFormat OutputFormat; // 0xef
	float CurrentAspectRatio; // 0xf0
	MediaTextureOrientation CurrentOrientation; // 0xf4
	UMediaPlayer* MediaPlayer; // 0xf8
};

struct UAISenseEvent_Hearing : UAISenseEvent {
	FAINoiseEvent Event; // 0x28
};

struct UParticleModuleAcceleration : UParticleModuleAccelerationBase {
	FRawDistributionVector Acceleration; // 0x38
	char bApplyOwnerScale : 1; // 0x80
};

struct UInGameAdManager : UPlatformInterfaceBase {
	char bShouldPauseWhileAdOpen : 1; // 0x38
	TArray<FDelegate> ClickedBannerDelegates; // 0x40
	TArray<FDelegate> ClosedAdDelegates; // 0x50
};

struct UMovieSceneMediaPlayerPropertySection : UMovieSceneSection {
	UMediaSource* MediaSource; // 0xe8
	bool bLoop; // 0xf0
};

struct USoundNodeRandom : USoundNode {
	TArray<float> Weights; // 0x48
	TArray<bool> HasBeenUsed; // 0x58
	int32_t NumRandomUsed; // 0x68
	int32_t PreselectAtLevelLoad; // 0x6c
	char bShouldExcludeFromBranchCulling : 1; // 0x70
	char bSoundCueExcludedFromBranchCulling : 1; // 0x70
	char bRandomizeWithoutReplacement : 1; // 0x70
};

struct UAutoDestroySubsystem : UWorldSubsystem {
	TArray<AActor*> ActorsToPoll; // 0x38
};

struct UAISense_Hearing : UAISense {
	TArray<FAINoiseEvent> NoiseEvents; // 0x80
	float SpeedOfSoundSq; // 0x90
};

struct UConnectionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct UAISenseConfig_Sight : UAISenseConfig {
	UAISense_Sight* Implementation; // 0x48
	float SightRadius; // 0x50
	float LoseSightRadius; // 0x54
	float PeripheralVisionAngleDegrees; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
	float AutoSuccessRangeFromLastSeenLocation; // 0x60
	float PointOfViewBackwardOffset; // 0x64
	float NearClippingRadius; // 0x68
};

struct UEOSCoreLobbyKickMember : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct AGameState : AGameStateBase {
	FName MatchState; // 0x270
	FName PreviousMatchState; // 0x278
	int32_t ElapsedTime; // 0x280
};

struct UEOSSanctionsQueryActivePlayerSanctions : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UAnimSharingStateInstance : UAnimInstance {
	UAnimSequence* AnimationToPlay; // 0x2b8
	float PermutationTimeOffset; // 0x2c0
	float PlayRate; // 0x2c4
	bool bStateBool; // 0x2c8
	UAnimSharingInstance* Instance; // 0x2d0
};

struct UPawnAction_Repeat : UPawnAction {
	UPawnAction* ActionToRepeat; // 0x98
	UPawnAction* RecentActionCopy; // 0xa0
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
};

struct UVideoCaptureProtocol : UFrameGrabberProtocol {
	bool bUseCompression; // 0x68
	float CompressionQuality; // 0x6c
};

struct UClothingAssetBase : UObject {
	FString ImportedFilePath; // 0x28
	FGuid AssetGuid; // 0x38
};

struct UW_PathEntry_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Entry; // 0x268
	UTextBlock* Text_EntryName; // 0x270
	FText EntryText; // 0x278
	FName EntryName; // 0x290
	UWidget* MoveToWidget; // 0x298
	FMulticastInlineDelegate Click; // 0x2a0
	bool IsEnabled; // 0x2b0
};

struct UMovieSceneColorSection : UMovieSceneSection {
	FMovieSceneFloatChannel RedCurve; // 0xe8
	FMovieSceneFloatChannel GreenCurve; // 0x188
	FMovieSceneFloatChannel BlueCurve; // 0x228
	FMovieSceneFloatChannel AlphaCurve; // 0x2c8
};

struct UEOSCorePresenceSetPresence : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UGranularSynth : USynthComponent {
	USoundWave* GranulatedSoundWave; // 0x6c0
};

struct UW_CutomizeTagInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_133; // 0x268
	UImage* Image; // 0x270
	UImage* Image_2; // 0x278
	UImage* Image_74; // 0x280
	UImage* Image_86; // 0x288
	USizeBox* SizeBox_60; // 0x290
	UTextBlock* TextBlock_TagsName; // 0x298
	UWBP_NewItemMarker_C* WBP_NewItemMarker; // 0x2a0
	UWidgetSwitcher* WidgetSwitcher_1; // 0x2a8
	FMulticastInlineDelegate OnClickedDispatcher; // 0x2b0
	bool IsClicked; // 0x2c0
	FText TagName; // 0x2c8
	int32_t TagID; // 0x2e0
	UW_Banner_C* W_Banner; // 0x2e8
	Rarity E_Rarity; // 0x2f0
	bool IsBlocked; // 0x2f1
	FText Rarity; // 0x2f8
	UW_CustomizeBanner_C* W_CustomizeBanner; // 0x310
};

struct UUserDefinedStruct : UScriptStruct {
	EUserDefinedStructureStatus Status; // 0xc0
	FGuid Guid; // 0xc4
};

struct UARBasicLightEstimate : UARLightEstimate {
	float AmbientIntensityLumens; // 0x28
	float AmbientColorTemperatureKelvin; // 0x2c
	FLinearColor AmbientColor; // 0x30
};

struct UPanelSlot : UVisual {
	UPanelWidget* Parent; // 0x28
	UWidget* Content; // 0x30
};

struct UNiagaraPreviewAxis_InterpParamVector : UNiagaraPreviewAxis_InterpParamBase {
	FVector Min; // 0x38
	FVector Max; // 0x44
};

struct APaperCharacter : ACharacter {
	UPaperFlipbookComponent* Sprite; // 0x4b8
};

struct UEditableGameplayTagQueryExpression_AnyTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UBlackboardComponent : UActorComponent {
	UBrainComponent* BrainComp; // 0xb0
	UBlackboardData* DefaultBlackboardAsset; // 0xb8
	UBlackboardData* BlackboardAsset; // 0xc0
	TArray<UBlackboardKeyType*> KeyInstances; // 0xe8
};

struct UNavCollision : UNavCollisionBase {
	TArray<FNavCollisionCylinder> CylinderCollision; // 0x80
	TArray<FNavCollisionBox> BoxCollision; // 0x90
	UNavArea* AreaClass; // 0xa0
	char bGatherConvexGeometry : 1; // 0xa8
	char bCreateOnClient : 1; // 0xa8
};

struct UMaterialParameterCollectionInstance : UObject {
	UMaterialParameterCollection* Collection; // 0x30
};

struct USourceEffectMidSideSpreaderPreset : USoundEffectSourcePreset {
	FSourceEffectMidSideSpreaderSettings Settings; // 0x98
};

struct UToFloatField : UFieldNodeFloat {
	UFieldNodeInt* IntField; // 0xb0
};

struct UMotionControllerComponent : UPrimitiveComponent {
	int32_t PlayerIndex; // 0x440
	EControllerHand Hand; // 0x444
	FName MotionSource; // 0x448
	char bDisableLowLatencyUpdate : 1; // 0x450
	ETrackingStatus CurrentTrackingStatus; // 0x454
	bool bDisplayDeviceModel; // 0x455
	FName DisplayModelSource; // 0x458
	UStaticMesh* CustomDisplayMesh; // 0x460
	TArray<UMaterialInterface*> DisplayMeshMaterialOverrides; // 0x468
	UPrimitiveComponent* DisplayComponent; // 0x4e0
};

struct ULobbyGreenGirlAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x320
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x348
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x3c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x3f8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x478
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x4a8
	bool MvpAnim?; // 0x558
};

struct UDeviceProfileManager : UObject {
	TArray<UObject*> Profiles; // 0x28
};

struct AReanimateCoin_C : ACoinActor_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
};

struct UDecalComponent : USceneComponent {
	UMaterialInterface* DecalMaterial; // 0x1f8
	int32_t SortOrder; // 0x200
	float FadeScreenSize; // 0x204
	float FadeStartDelay; // 0x208
	float FadeDuration; // 0x20c
	float FadeInDuration; // 0x210
	float FadeInStartDelay; // 0x214
	char bDestroyOwnerAfterFade : 1; // 0x218
	FVector DecalSize; // 0x21c
};

struct UCheckBoxStyleAsset : UObject {
	FCheckBoxStyle CheckBoxStyle; // 0x28
};

struct UMovieSceneSubSection : UMovieSceneSection {
	FMovieSceneSectionParameters Parameters; // 0xe8
	float StartOffset; // 0x10c
	float TimeScale; // 0x110
	float PrerollTime; // 0x114
	UMovieSceneSequence* SubSequence; // 0x118
	LazyObjectProperty ActorToRecord; // 0x120
	FString TargetSequenceName; // 0x140
	FDirectoryPath TargetPathToRecordTo; // 0x150
};

struct UNiagaraPreviewAxis_InterpParamVector2D : UNiagaraPreviewAxis_InterpParamBase {
	FVector2D Min; // 0x38
	FVector2D Max; // 0x40
};

struct ABP_LootBox_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UStaticMeshComponent* Lightshaft; // 0x228
	USceneComponent* DropItemPosition; // 0x230
	USceneComponent* CameraMain; // 0x238
	UCineCameraComponent* Camera; // 0x240
	USkeletalMeshComponent* lootbox; // 0x248
	UParticleSystemComponent* LootBox_ParticleClosed; // 0x250
	UPointLightComponent* LootBox_PointLight; // 0x258
	UParticleSystemComponent* LootBox_ParticleOpen; // 0x260
	USceneComponent* LootboxMain; // 0x268
	USceneComponent* Scene; // 0x270
	USceneComponent* DefaultSceneRoot; // 0x278
	FVector Timeline_1_PrizeCardLocation_4FACAD3D4042E15CBDDF4B8566DA6543; // 0x280
	FVector Timeline_1_RotationDropItem_4FACAD3D4042E15CBDDF4B8566DA6543; // 0x28c
	FVector Timeline_1_LocationDropItem_4FACAD3D4042E15CBDDF4B8566DA6543; // 0x298
	FVector Timeline_1_RotationCam_4FACAD3D4042E15CBDDF4B8566DA6543; // 0x2a4
	FVector Timeline_1_LocationCam_4FACAD3D4042E15CBDDF4B8566DA6543; // 0x2b0
	float Timeline_1_LighshaftAlpha_4FACAD3D4042E15CBDDF4B8566DA6543; // 0x2bc
	float Timeline_1_FocalLength_4FACAD3D4042E15CBDDF4B8566DA6543; // 0x2c0
	ETimelineDirection Timeline_1__Direction_4FACAD3D4042E15CBDDF4B8566DA6543; // 0x2c4
	UTimelineComponent* Timeline_2; // 0x2c8
	FVector Timeline_0_Lootbox_F4C3F56048B718ADAD8FF5999B815D02; // 0x2d0
	FVector Timeline_0_Rotation_F4C3F56048B718ADAD8FF5999B815D02; // 0x2dc
	FVector Timeline_0_Location_F4C3F56048B718ADAD8FF5999B815D02; // 0x2e8
	float Timeline_0_CameraShake_F4C3F56048B718ADAD8FF5999B815D02; // 0x2f4
	ETimelineDirection Timeline_0__Direction_F4C3F56048B718ADAD8FF5999B815D02; // 0x2f8
	UTimelineComponent* Timeline_1; // 0x300
	TSoftObjectPtr<UDataTable> DataTable; // 0x308
	TArray<int32_t> RareIDs; // 0x330
	TArray<int32_t> EpicIDs; // 0x340
	TArray<int32_t> LegendaryIDs; // 0x350
	TArray<int32_t> CommonIDs; // 0x360
	float DefaultCommonChance; // 0x370
	float DefaultRareChance; // 0x374
	float DefaultEpicChance; // 0x378
	float DefaultLegendaryChance; // 0x37c
	int32_t randomnumber; // 0x380
	TArray<int32_t> HeightenedLootBox; // 0x388
	float HeightenedCommonChance; // 0x398
	float HeightenedRareChance; // 0x39c
	float HeightenedEpicChance; // 0x3a0
	float HeightenedLegendaryChance; // 0x3a4
	float LoweredCommonChance; // 0x3a8
	float LoweredRareChance; // 0x3ac
	float LoweredEpicChance; // 0x3b0
	float LoweredLegendaryChance; // 0x3b4
	bool IsLegendary; // 0x3b8
	bool IsEpic; // 0x3b9
	float CommonChance; // 0x3bc
	float RareChance; // 0x3c0
	float EpicChance; // 0x3c4
	float LegendaryChance; // 0x3c8
	int32_t ItemsCountInLootBox; // 0x3cc
	TArray<int32_t> ItemsIDFromLootBox; // 0x3d0
	int32_t DuplicateCounter; // 0x3e0
	int32_t DuplicateCounter_UI; // 0x3e4
	TArray<int32_t> ScrollChancePerItem; // 0x3e8
	FS_LootBoxSkin CurrentLoot; // 0x3f8
	bool Start?; // 0x428
	ABP_PrizeActor_C* SpawnedItem; // 0x430
	UObject* Object; // 0x438
	bool IsDuplicate; // 0x440
	bool IsOpened; // 0x441
	UMaterialInstanceDynamic* LightshaftDynMat; // 0x448
	UMaterialInstanceDynamic* ParticleOpenDynMat; // 0x450
	int32_t ItemFromLootBox; // 0x458
};

struct UMaterialExpressionReroute : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct USoundWave : USoundBase {
	int32_t CompressionQuality; // 0x1b8
	int32_t StreamingPriority; // 0x1bc
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x1c0
	ESoundGroup SoundGroup; // 0x1c2
	char bLooping : 1; // 0x1c3
	char bStreaming : 1; // 0x1c3
	char bSeekableStreaming : 1; // 0x1c3
	ESoundWaveLoadingBehavior LoadingBehavior; // 0x1c4
	char bMature : 1; // 0x1c5
	char bManualWordWrap : 1; // 0x1c5
	char bSingleLine : 1; // 0x1c6
	char bIsAmbisonics : 1; // 0x1c6
	TArray<float> FrequenciesToAnalyze; // 0x1c8
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x1d8
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x1e8
	int32_t InitialChunkSize; // 0x1f8
	FString SpokenText; // 0x240
	float SubtitlePriority; // 0x250
	float Volume; // 0x254
	float Pitch; // 0x258
	int32_t NumChannels; // 0x25c
	int32_t SampleRate; // 0x260
	TArray<FSubtitleCue> Subtitles; // 0x270
	UCurveTable* Curves; // 0x280
	UCurveTable* InternalCurves; // 0x288
};

struct ALandscapeProxy : AActor {
	ULandscapeSplinesComponent* SplineComponent; // 0x220
	FGuid LandscapeGuid; // 0x228
	FIntPoint LandscapeSectionOffset; // 0x238
	int32_t MaxLODLevel; // 0x240
	float LODDistanceFactor; // 0x244
	ELandscapeLODFalloff LODFalloff; // 0x248
	float ComponentScreenSizeToUseSubSections; // 0x24c
	float LOD0ScreenSize; // 0x250
	float LOD0DistributionSetting; // 0x254
	float LODDistributionSetting; // 0x258
	float TessellationComponentScreenSize; // 0x25c
	bool UseTessellationComponentScreenSizeFalloff; // 0x260
	float TessellationComponentScreenSizeFalloff; // 0x264
	int32_t OccluderGeometryLOD; // 0x268
	int32_t StaticLightingLOD; // 0x26c
	UPhysicalMaterial* DefaultPhysMaterial; // 0x270
	float StreamingDistanceMultiplier; // 0x278
	UMaterialInterface* LandscapeMaterial; // 0x280
	UMaterialInterface* LandscapeHoleMaterial; // 0x2a8
	TArray<FLandscapeProxyMaterialOverride> LandscapeMaterialsOverride; // 0x2b0
	bool bMeshHoles; // 0x2c0
	char MeshHolesMaxLod; // 0x2c1
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x2c8
	int32_t VirtualTextureNumLods; // 0x2d8
	int32_t VirtualTextureLodBias; // 0x2dc
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x2e0
	float NegativeZBoundsExtension; // 0x2e4
	float PositiveZBoundsExtension; // 0x2e8
	TArray<ULandscapeComponent*> LandscapeComponents; // 0x2f0
	TArray<ULandscapeHeightfieldCollisionComponent*> CollisionComponents; // 0x300
	TArray<UHierarchicalInstancedStaticMeshComponent*> FoliageComponents; // 0x310
	bool bHasLandscapeGrass; // 0x384
	float StaticLightingResolution; // 0x388
	char CastShadow : 1; // 0x38c
	char bCastDynamicShadow : 1; // 0x38c
	char bCastStaticShadow : 1; // 0x38c
	char bCastFarShadow : 1; // 0x390
	char bCastHiddenShadow : 1; // 0x394
	char bCastShadowAsTwoSided : 1; // 0x398
	char bAffectDistanceFieldLighting : 1; // 0x39c
	FLightingChannels LightingChannels; // 0x39d
	char bUseMaterialPositionOffsetInStaticLighting : 1; // 0x3a0
	char bRenderCustomDepth : 1; // 0x3a0
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x3a4
	int32_t CustomDepthStencilValue; // 0x3a8
	float LDMaxDrawDistance; // 0x3ac
	FLightmassPrimitiveSettings LightmassSettings; // 0x3b0
	int32_t CollisionMipLevel; // 0x3c8
	int32_t SimpleCollisionMipLevel; // 0x3cc
	float CollisionThickness; // 0x3d0
	FBodyInstance BodyInstance; // 0x3d8
	char bGenerateOverlapEvents : 1; // 0x530
	char bBakeMaterialPositionOffsetIntoCollision : 1; // 0x530
	int32_t ComponentSizeQuads; // 0x534
	int32_t SubsectionSizeQuads; // 0x538
	int32_t NumSubsections; // 0x53c
	char bUsedForNavigation : 1; // 0x540
	char bFillCollisionUnderLandscapeForNavmesh : 1; // 0x540
	bool bUseDynamicMaterialInstance; // 0x544
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x545
	bool bUseLandscapeForCullingInvisibleHLODVertices; // 0x546
	bool bHasLayersContent; // 0x547
	TMap<UTexture2D*, ULandscapeWeightmapUsage*> WeightmapUsageMap; // 0x548
};

struct UFMODSnapshotReverb : UReverbEffect {
	FGuid AssetGuid; // 0x60
};

struct UPerk_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	bool PerkFind?; // 0xb8
	FString PerkName; // 0xc0
};

struct UParticleModuleLifetime : UParticleModuleLifetimeBase {
	FRawDistributionFloat LifeTime; // 0x30
};

struct ULeaderboardQueryCallbackProxy : UObject {
	FMulticastInlineDelegate onSuccess; // 0x28
	FMulticastInlineDelegate onFailure; // 0x38
};

struct UMaterialExpressionSkyAtmosphereAerialPerspective : UMaterialExpression {
	FExpressionInput WorldPosition; // 0x40
};

struct UBTDecorator_TagCooldown : UBTDecorator {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
	bool bActivatesCooldown; // 0x75
};

struct UHitBlur_C : UUserWidget {
	UImage* Image_342; // 0x260
	USizeBox* SizeBlur; // 0x268
};

struct UHLODProxy : UObject {
	TArray<FHLODProxyMesh> ProxyMeshes; // 0x28
	TMap<UHLODProxyDesc*, FHLODProxyMesh> HLODActors; // 0x38
};

struct UEOSCoreSessionsEndSession : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UPawnActionsComponent : UActorComponent {
	APawn* ControlledPawn; // 0xb0
	TArray<FPawnActionStack> ActionStacks; // 0xb8
	TArray<FPawnActionEvent> ActionEvents; // 0xc8
	UPawnAction* CurrentAction; // 0xd8
};

struct UEOSCoreAchievementsQueryPlayerAchievements : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UEnvQueryTest_Volume : UEnvQueryTest {
	UEnvQueryContext* VolumeContext; // 0x1f8
	AVolume* VolumeClass; // 0x200
	char bDoComplexVolumeTest : 1; // 0x208
};

struct UBaseMediaSource : UMediaSource {
	FName PlayerName; // 0x80
};

struct UWBP_SoundChatCoolDown_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* CD_Anim; // 0x268
	UImage* Image_BG; // 0x270
	UImage* Image_circularPB; // 0x278
	UImage* Image_Lock; // 0x280
	float CoolDownTime; // 0x288
	FMulticastInlineDelegate OnFinished; // 0x290
};

struct UDataTable : UObject {
	UScriptStruct* RowStruct; // 0x28
	char bStripFromClientBuilds : 1; // 0x80
	char bIgnoreExtraFields : 1; // 0x80
	char bIgnoreMissingFields : 1; // 0x80
	FString ImportKeyField; // 0x88
};

struct UKillerJumpShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
	FVOscillator ShakeLoc; // 0x1ac
};

struct ALevelSequenceMediaController : AActor {
	ALevelSequenceActor* Sequence; // 0x228
	UMediaComponent* MediaComponent; // 0x230
	float ServerStartTimeSeconds; // 0x238
};

struct AAudioVolume : AVolume {
	float Priority; // 0x258
	char bEnabled : 1; // 0x25c
	FReverbSettings Settings; // 0x260
	FInteriorSettings AmbientZoneSettings; // 0x280
	TArray<FAudioVolumeSubmixSendSettings> SubmixSendSettings; // 0x2a8
	TArray<FAudioVolumeSubmixOverrideSettings> SubmixOverrideSettings; // 0x2b8
};

struct UDistributionVectorConstantCurve : UDistributionVector {
	FInterpCurveVector ConstantCurve; // 0x38
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
};

struct UTexture2DArray : UTexture {
	TextureAddress AddressX; // 0x130
	TextureAddress AddressY; // 0x131
	TextureAddress AddressZ; // 0x132
};

struct UGameplayTask_SpawnActor : UGameplayTask {
	FMulticastInlineDelegate Success; // 0x68
	FMulticastInlineDelegate DidNotSpawn; // 0x78
	AActor* ClassToSpawn; // 0xa0
};

struct UWBP_Cursor_Default_C : UUserWidget {
	UImage* Image_60; // 0x260
};

struct USurvivalSkillCheckWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* StartSkillcheck_Anim; // 0x268
	UWidgetAnimation* Warning_Anim; // 0x270
	UWidgetAnimation* Failed_Anim; // 0x278
	UWidgetAnimation* Successed_Anim; // 0x280
	UWidgetAnimation* PressSpace_Anim; // 0x288
	UCanvasPanel* CanvasPanel_5; // 0x290
	UImage* Image; // 0x298
	UImage* Image_222; // 0x2a0
	UImage* Image_355; // 0x2a8
	USizeBox* SB_Warning; // 0x2b0
	UImage* SkillCheckLine; // 0x2b8
	UImage* SkillCheckLine__Level1; // 0x2c0
	UImage* SkillCheckLine__Level2; // 0x2c8
	UImage* SkillCheckLine__Level3; // 0x2d0
	UImage* SkillCheckLine__Level4; // 0x2d8
	UImage* SkillCheckLine_Phantom; // 0x2e0
	USizeBox* SkillCheckLineBox; // 0x2e8
	USizeBox* SkillCheckLineBox_2; // 0x2f0
	UImage* SkillCheckZone; // 0x2f8
	USizeBox* SkillCheckZoneBox; // 0x300
	UTextBlock* TextBlock_85; // 0x308
	float Angle; // 0x310
	float Time; // 0x314
	bool Start?; // 0x318
	float StartGreatZone; // 0x31c
	float StartNormalZone; // 0x320
	float EndZone; // 0x324
	bool Failed?; // 0x328
	bool Success?; // 0x329
	bool GreatSuccess?; // 0x32a
	bool Active?; // 0x32b
	float CurrentAngle; // 0x32c
	bool Pressed?; // 0x330
	float Difficulty; // 0x334
	float NormalDifficulty; // 0x338
	float HardDifficulty; // 0x33c
	AActor* Actor; // 0x340
	ASurvivorMasterBP_C* Player; // 0x348
	float Level1; // 0x350
	float Level2; // 0x354
	float Level3; // 0x358
	float Level4; // 0x35c
	float StartZone; // 0x360
	bool Level1?; // 0x364
	bool Level2?; // 0x365
	bool Level3?; // 0x366
	bool Level4?; // 0x367
	float LevelsClipZone; // 0x368
	bool Interrupted; // 0x36c
	bool Warning?; // 0x36d
};

struct UNiagaraDataInterfacePlatformSet : UNiagaraDataInterface {
	FNiagaraPlatformSet Platforms; // 0x38
};

struct UWBP_AlarmCounterItem_C : UUserWidget {
	UWidgetAnimation* Activate_Anim; // 0x260
	UImage* Image_BG; // 0x268
	UImage* Image_checker; // 0x270
};

struct UInterpTrackInstParticleReplay : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UUserWidget : UWidget {
	FLinearColor ColorAndOpacity; // 0x110
	FDelegate ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	FDelegate ForegroundColorDelegate; // 0x158
	FMulticastInlineDelegate OnVisibilityChanged; // 0x168
	FMargin Padding; // 0x190
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x1a0
	UUMGSequenceTickManager* AnimationTickManager; // 0x1b0
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x1b8
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x1c8
	UWidgetTree* WidgetTree; // 0x1d8
	int32_t Priority; // 0x1e0
	char bSupportsKeyboardFocus : 1; // 0x1e4
	char bIsFocusable : 1; // 0x1e4
	char bStopAction : 1; // 0x1e4
	char bHasScriptImplementedTick : 1; // 0x1e4
	char bHasScriptImplementedPaint : 1; // 0x1e4
	EWidgetTickFrequency TickFrequency; // 0x1f0
	UInputComponent* InputComponent; // 0x1f8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x200
};

struct UNavLinkCustomComponent : UNavRelevantComponent {
	uint32_t NavLinkUserId; // 0xe8
	UNavArea* EnabledAreaClass; // 0xf0
	UNavArea* DisabledAreaClass; // 0xf8
	FNavAgentSelector SupportedAgents; // 0x100
	FVector LinkRelativeStart; // 0x104
	FVector LinkRelativeEnd; // 0x110
	ENavLinkDirection LinkDirection; // 0x11c
	char bLinkEnabled : 1; // 0x120
	char bNotifyWhenEnabled : 1; // 0x120
	char bNotifyWhenDisabled : 1; // 0x120
	char bCreateBoxObstacle : 1; // 0x120
	FVector ObstacleOffset; // 0x124
	FVector ObstacleExtent; // 0x130
	UNavArea* ObstacleAreaClass; // 0x140
	float BroadcastRadius; // 0x148
	float BroadcastInterval; // 0x14c
	ECollisionChannel BroadcastChannel; // 0x150
};

struct UWB_IdenticalBindsDialog_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Blur_Anim; // 0x268
	UWidgetAnimation* Show_Anim; // 0x270
	UButton* Button_No; // 0x278
	UButton* Button_Yes; // 0x280
	UImage* Image_BlackScreen; // 0x288
	UImage* Image_DialogBG; // 0x290
	USafeZone* SafeZone_118; // 0x298
	UTextBlock* Text_Label; // 0x2a0
	UTextBlock* Text_Label_2; // 0x2a8
	UTextBlock* TextBlock_42; // 0x2b0
	UTextBlock* TextBlock_147; // 0x2b8
	FMulticastInlineDelegate OnAccept; // 0x2c0
	FMulticastInlineDelegate OnDecline; // 0x2d0
	bool IsBlured; // 0x2e0
	FText Label; // 0x2e8
	bool IsShown; // 0x300
	UButton* LastFocus; // 0x308
	FSlateBrush In Style Normal; // 0x310
	FSlateBrush In Style Normal_1; // 0x398
	FSlateBrush In Style Normal_2; // 0x420
	FSlateBrush In Style Normal_3; // 0x4a8
};

struct UParticleModuleMeshRotation_Seeded : UParticleModuleMeshRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UGameplayTask_TimeLimitedExecution : UGameplayTask {
	FMulticastInlineDelegate OnFinished; // 0x68
	FMulticastInlineDelegate OnTimeExpired; // 0x78
};

struct UParticleModuleLocation : UParticleModuleLocationBase {
	FRawDistributionVector StartLocation; // 0x30
	float DistributeOverNPoints; // 0x78
	float DistributeThreshold; // 0x7c
};

struct UParticleModuleMeshRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionVector StartRotationRate; // 0x30
};

struct UMaterialExpressionCurveAtlasRowParameter : UMaterialExpressionScalarParameter {
	UCurveLinearColor* Curve; // 0x60
	UCurveLinearColorAtlas* Atlas; // 0x68
	FExpressionInput InputTime; // 0x70
};

struct UMagicLeapMeshTrackerComponent : USceneComponent {
	FMulticastInlineDelegate OnMeshTrackerUpdated; // 0x200
	bool ScanWorld; // 0x210
	EMagicLeapMeshType MeshType; // 0x211
	UBoxComponent* BoundingVolume; // 0x218
	EMagicLeapMeshLOD LevelOfDetail; // 0x220
	float PerimeterOfGapsToFill; // 0x224
	bool Planarize; // 0x228
	float DisconnectedSectionArea; // 0x22c
	bool RequestNormals; // 0x230
	bool RequestVertexConfidence; // 0x231
	EMagicLeapMeshVertexColorMode VertexColorMode; // 0x232
	TArray<FColor> BlockVertexColors; // 0x238
	FLinearColor VertexColorFromConfidenceZero; // 0x248
	FLinearColor VertexColorFromConfidenceOne; // 0x258
	bool RemoveOverlappingTriangles; // 0x268
	UMRMeshComponent* MRMesh; // 0x270
	int32_t BricksPerFrame; // 0x278
};

struct AExplosion_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UFMODAudioComponent* FmodAudio; // 0x228
	UParticleSystemComponent* ParticleSystem; // 0x230
	URadialForceComponent* RadialForce; // 0x238
	USceneComponent* DefaultSceneRoot; // 0x240
};

struct UInterpTrackVisibility : UInterpTrack {
	TArray<FVisibilityTrackKey> VisibilityTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UAnimationSharingStateProcessor : UObject {
	TSoftObjectPtr<UEnum> AnimationStateEnum; // 0x28
};

struct UEditableGameplayTagQueryExpression_AllTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UCrowdManager : UCrowdManagerBase {
	ANavigationData* MyNavData; // 0x28
	TArray<FCrowdAvoidanceConfig> AvoidanceConfig; // 0x30
	TArray<FCrowdAvoidanceSamplingPattern> SamplingPatterns; // 0x40
	int32_t MaxAgents; // 0x50
	float MaxAgentRadius; // 0x54
	int32_t MaxAvoidedAgents; // 0x58
	int32_t MaxAvoidedWalls; // 0x5c
	float NavmeshCheckInterval; // 0x60
	float PathOptimizationInterval; // 0x64
	float SeparationDirClamp; // 0x68
	float PathOffsetRadiusMultiplier; // 0x6c
	char bResolveCollisions : 1; // 0x70
};

struct UDatasmithDecalComponentTemplate : UDatasmithObjectTemplate {
	int32_t SortOrder; // 0x30
	FVector DecalSize; // 0x34
	UMaterialInterface* Material; // 0x40
};

struct UHudSettings : UObject {
	char bShowHUD : 1; // 0x28
	TArray<FName> DebugDisplay; // 0x30
};

struct UChairAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x348
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x3c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x448
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x4c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x588
	FAnimNode_Root AnimGraphNode_Root; // 0x608
	float Speed; // 0x638
	bool ResqueMode?; // 0x63c
	float L_hand; // 0x640
	float R_hand; // 0x644
	float L_leg; // 0x648
	float R_leg; // 0x64c
	bool Close; // 0x650
	int32_t Stage; // 0x654
};

struct UNiagaraDataInterfaceAudioSpectrum : UNiagaraDataInterfaceAudioSubmix {
	int32_t Resolution; // 0x40
	float MinimumFrequency; // 0x44
	float MaximumFrequency; // 0x48
	float NoiseFloorDb; // 0x4c
};

struct UActorComponent : UObject {
	FActorComponentTickFunction PrimaryComponentTick; // 0x30
	TArray<FName> ComponentTags; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
	int32_t UCSSerializationIndex; // 0x84
	char bNetAddressable : 1; // 0x88
	char bReplicates : 1; // 0x88
	char bAutoActivate : 1; // 0x89
	char bIsActive : 1; // 0x8a
	char bEditableWhenInherited : 1; // 0x8a
	char bCanEverAffectNavigation : 1; // 0x8a
	char bIsEditorOnly : 1; // 0x8a
	EComponentCreationMethod CreationMethod; // 0x8c
	FMulticastSparseDelegate OnComponentActivated; // 0x8d
	FMulticastSparseDelegate OnComponentDeactivated; // 0x8e
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0x90
};

struct UNiagaraPreviewAxis_InterpParamLinearColor : UNiagaraPreviewAxis_InterpParamBase {
	FLinearColor Min; // 0x38
	FLinearColor Max; // 0x48
};

struct UBTTask_RunBehavior : UBTTaskNode {
	UBehaviorTree* BehaviorAsset; // 0x70
};

struct UTimelineComponent : UActorComponent {
	FTimeline TheTimeline; // 0xb0
	char bIgnoreTimeDilation : 1; // 0x148
};

struct UParticleModuleTypeDataRibbon : UParticleModuleTypeDataBase {
	int32_t MaxTessellationBetweenParticles; // 0x30
	int32_t SheetsPerTrail; // 0x34
	int32_t MaxTrailCount; // 0x38
	int32_t MaxParticleInTrailCount; // 0x3c
	char bDeadTrailsOnDeactivate : 1; // 0x40
	char bDeadTrailsOnSourceLoss : 1; // 0x40
	char bClipSourceSegement : 1; // 0x40
	char bEnablePreviousTangentRecalculation : 1; // 0x40
	char bTangentRecalculationEveryFrame : 1; // 0x40
	char bSpawnInitialParticle : 1; // 0x40
	ETrailsRenderAxisOption RenderAxis; // 0x44
	float TangentSpawningScalar; // 0x48
	char bRenderGeometry : 1; // 0x4c
	char bRenderSpawnPoints : 1; // 0x4c
	char bRenderTangents : 1; // 0x4c
	char bRenderTessellation : 1; // 0x4c
	float TilingDistance; // 0x50
	float DistanceTessellationStepSize; // 0x54
	char bEnableTangentDiffInterpScale : 1; // 0x58
	float TangentTessellationScalar; // 0x5c
};

struct USubmixEffectFlexiverbPreset : USoundEffectSubmixPreset {
	FSubmixEffectFlexiverbSettings Settings; // 0xa0
};

struct UComboButtonWidgetStyle : USlateWidgetStyleContainerBase {
	FComboButtonStyle ComboButtonStyle; // 0x30
};

struct UNiagaraDataInterfaceStaticMesh : UNiagaraDataInterface {
	ENDIStaticMesh_SourceMode SourceMode; // 0x38
	UStaticMesh* DefaultMesh; // 0x40
	AActor* Source; // 0x48
	UStaticMeshComponent* SourceComponent; // 0x50
	FNDIStaticMeshSectionFilter SectionFilter; // 0x58
	bool bUsePhysicsBodyVelocity; // 0x68
	TArray<FName> FilteredSockets; // 0x70
};

struct UIconAbilityCooldownWBP_Doppelganger_Middle_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* FadeOut_23; // 0x268
	UWidgetAnimation* FadeIn_23; // 0x270
	UWidgetAnimation* FadeOut; // 0x278
	UWidgetAnimation* FadeIn; // 0x280
	UImage* BG; // 0x288
	UImage* BG_2; // 0x290
	UImage* BG_3; // 0x298
	UImage* BG_4; // 0x2a0
	UBorder* Border_AbilityIcon; // 0x2a8
	UBorder* Border_AbilityIcon_2; // 0x2b0
	UBorder* Border_AbilityIcon_3; // 0x2b8
	UBorder* Border_AbilityIcon_4; // 0x2c0
	UBorder* Border_AbilityIcon_5; // 0x2c8
	UImage* Image_122; // 0x2d0
	UOverlay* Overlay_prop; // 0x2d8
	UTextBlock* TextBlock; // 0x2e0
	UTextBlock* TextBlock_2; // 0x2e8
	UTextBlock* TextBlock_106; // 0x2f0
	UTextBlock* TextBlock_162; // 0x2f8
	UWidgetSwitcher* WidgetSwitcher_Main; // 0x300
	UWidgetSwitcher* WidgetSwitcher_Surv; // 0x308
	bool Was?_2; // 0x310
	UMaterialInstanceDynamic* Material INstance; // 0x318
	bool Was?_1; // 0x320
};

struct UPlayFabServerAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x8c8
	UPlayFabJsonObject* RequestJsonObj; // 0x8d0
	UPlayFabJsonObject* ResponseJsonObj; // 0x8d8
};

struct UArrowComponent : UPrimitiveComponent {
	FColor ArrowColor; // 0x440
	float ArrowSize; // 0x444
	float ArrowLength; // 0x448
	float ScreenSize; // 0x44c
	char bIsScreenSizeScaled : 1; // 0x450
	char bTreatAsASprite : 1; // 0x450
};

struct ULevelSequenceBurnIn : UUserWidget {
	FLevelSequencePlayerSnapshot FrameInformation; // 0x260
	ALevelSequenceActor* LevelSequenceActor; // 0x318
};

struct UParticleModuleRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionFloat StartRotationRate; // 0x30
};

struct UUniformGridSlot : UPanelSlot {
	EHorizontalAlignment HorizontalAlignment; // 0x38
	EVerticalAlignment VerticalAlignment; // 0x39
	int32_t Row; // 0x3c
	int32_t Column; // 0x40
};

struct UMovieSceneSkeletalAnimationTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
	bool bUseLegacySectionIndexBlend; // 0x90
	FMovieSceneSkeletalAnimRootMotionTrackParams RootMotionParams; // 0x98
	bool bBlendFirstChildOfRoot; // 0xc8
};

struct UMaterialExpressionRotateAboutAxis : UMaterialExpression {
	FExpressionInput NormalizedRotationAxis; // 0x40
	FExpressionInput RotationAngle; // 0x54
	FExpressionInput PivotPoint; // 0x68
	FExpressionInput Position; // 0x7c
	float Period; // 0x90
};

struct UVirtualTexturePoolConfig : UObject {
	int32_t DefaultSizeInMegabyte; // 0x28
	TArray<FVirtualTextureSpacePoolConfig> Pools; // 0x30
};

struct UNiagaraDataInterfaceAudioOscilloscope : UNiagaraDataInterface {
	USoundSubmix* Submix; // 0x38
	int32_t Resolution; // 0x40
	float ScopeInMilliseconds; // 0x44
};

struct UMediaPlayer : UObject {
	FMulticastInlineDelegate OnEndReached; // 0x28
	FMulticastInlineDelegate OnMediaClosed; // 0x38
	FMulticastInlineDelegate OnMediaOpened; // 0x48
	FMulticastInlineDelegate OnMediaOpenFailed; // 0x58
	FMulticastInlineDelegate OnPlaybackResumed; // 0x68
	FMulticastInlineDelegate OnPlaybackSuspended; // 0x78
	FMulticastInlineDelegate OnSeekCompleted; // 0x88
	FMulticastInlineDelegate OnTracksChanged; // 0x98
	FTimespan CacheAhead; // 0xa8
	FTimespan CacheBehind; // 0xb0
	FTimespan CacheBehindGame; // 0xb8
	bool NativeAudioOut; // 0xc0
	bool PlayOnOpen; // 0xc1
	char Shuffle : 1; // 0xc4
	char Loop : 1; // 0xc4
	UMediaPlaylist* Playlist; // 0xc8
	int32_t PlaylistIndex; // 0xd0
	FTimespan TimeDelay; // 0xd8
	float HorizontalFieldOfView; // 0xe0
	float VerticalFieldOfView; // 0xe4
	FRotator ViewRotation; // 0xe8
	FGuid PlayerGuid; // 0x120
};

struct ABomb_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UParticleSystemComponent* P_SodaBomb_Fuse; // 0x228
	UFMODAudioComponent* FmodAudio; // 0x230
	UStaticMeshComponent* StaticMesh; // 0x238
	AKillerMasterBP_C* KRef; // 0x240
};

struct UMovieSceneSequence : UMovieSceneSignedObject {
	UMovieSceneCompiledData* CompiledData; // 0x50
	EMovieSceneCompletionMode DefaultCompletionMode; // 0x58
	bool bParentContextsAreSignificant; // 0x59
	bool bPlayableDirectly; // 0x5a
	EMovieSceneSequenceFlags SequenceFlags; // 0x5b
};

struct AElevator_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USceneComponent* DefaultSceneRoot; // 0x228
	TArray<FVector> StageLocation; // 0x230
	int32_t CurrentFloor; // 0x240
	bool Up?; // 0x244
	bool Interactable?; // 0x245
	int32_t NextFloor; // 0x248
	TArray<int32_t> Queue; // 0x250
	TArray<AElevatorM_C*> ElevatorMRefs; // 0x260
	bool Using?; // 0x270
};

struct UMaterialExpressionIf : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput AGreaterThanB; // 0x68
	FExpressionInput AEqualsB; // 0x7c
	FExpressionInput ALessThanB; // 0x90
	float EqualsThreshold; // 0xa4
	float ConstB; // 0xa8
	float ConstAEqualsB; // 0xac
};

struct UPlatformMediaSource : UMediaSource {
	UMediaSource* MediaSource; // 0x80
};

struct UWindowTitleBarAreaSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UInterpTrackInstVectorProp : UInterpTrackInstProperty {
	FVector ResetVector; // 0x58
};

struct UCustomVoiceButton_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_LeftClick_4; // 0x268
	UButton* Button_RightClick_4; // 0x270
	UOverlay* Changer; // 0x278
	UComboBoxString* ComboBox_InputDevice_2; // 0x280
	UImage* Image_5; // 0x288
	UImage* Image_6; // 0x290
	UImage* Image_83; // 0x298
	USafeZone* SafeZone_71; // 0x2a0
	USafeZone* SafeZone_278; // 0x2a8
	UTextBlock* TextBlock_154; // 0x2b0
	UTextBlock* TextBlock_SET_4; // 0x2b8
	FMulticastInlineDelegate EventDispatcher_Left; // 0x2c0
	FMulticastInlineDelegate EventDispatcher_Right; // 0x2d0
	FMulticastInlineDelegate EventDispatcher_FocusedStyle; // 0x2e0
	FSlateBrush NewVar_1; // 0x2f0
	FSlateBrush NewVar_2; // 0x378
	FMulticastInlineDelegate EventDispatcher_SetMicrophone; // 0x400
	FMulticastInlineDelegate EventDispatcher_Open; // 0x410
	bool Focus?; // 0x420
};

struct UARTrackedObject : UARTrackedGeometry {
	UARCandidateObject* DetectedObject; // 0xf8
};

struct UVectorFieldAnimated : UVectorField {
	UTexture2D* Texture; // 0x48
	EVectorFieldConstructionOp ConstructionOp; // 0x50
	int32_t VolumeSizeX; // 0x54
	int32_t VolumeSizeY; // 0x58
	int32_t VolumeSizeZ; // 0x5c
	int32_t SubImagesX; // 0x60
	int32_t SubImagesY; // 0x64
	int32_t FrameCount; // 0x68
	float FramesPerSecond; // 0x6c
	char bLoop : 1; // 0x70
	UVectorFieldStatic* NoiseField; // 0x78
	float NoiseScale; // 0x80
	float NoiseMax; // 0x84
};

struct UParticleModuleEventGenerator : UParticleModuleEventBase {
	TArray<FParticleEvent_GenerateInfo> Events; // 0x30
};

struct UInterpTrackFloatBase : UInterpTrack {
	FInterpCurveFloat FloatTrack; // 0x70
	float CurveTension; // 0x88
};

struct UMovieSceneCameraAnimTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraAnimSections; // 0x80
};

struct UMaterialExpressionSkyAtmosphereLightDirection : UMaterialExpression {
	int32_t LightIndex; // 0x40
};

struct UW_PlayCardContent_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
};

struct UEnvQueryGenerator_CurrentLocation : UEnvQueryGenerator {
	UEnvQueryContext* QueryContext; // 0x50
};

struct ASave_OutChairCoin_C : ACoinActor_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
	bool IsChair; // 0x300
};

struct URabbitWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct AGM_MainMenu_C : AGameModeBase {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	USceneComponent* DefaultSceneRoot; // 0x2c8
};

struct UGizmoPlaneScaleParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float ScaleMultiplier; // 0xb0
	FVector2D Parameter; // 0xb4
	FGizmoVec2ParameterChange LastChange; // 0xbc
	FVector CurScaleOrigin; // 0xcc
	FVector CurScaleNormal; // 0xd8
	FVector CurScaleAxisX; // 0xe4
	FVector CurScaleAxisY; // 0xf0
	FTransform InitialTransform; // 0x100
};

struct UMaterialExpressionLandscapeLayerSwitch : UMaterialExpression {
	FExpressionInput LayerUsed; // 0x40
	FExpressionInput LayerNotUsed; // 0x54
	FName ParameterName; // 0x68
	char PreviewUsed : 1; // 0x70
	FGuid ExpressionGUID; // 0x74
};

struct UMeshSelectionSet : USelectionSet {
	TArray<int32_t> Vertices; // 0x40
	TArray<int32_t> Edges; // 0x50
	TArray<int32_t> Faces; // 0x60
	TArray<int32_t> Groups; // 0x70
};

struct UBlueprintCore : UObject {
	UObject* SkeletonGeneratedClass; // 0x28
	UObject* GeneratedClass; // 0x30
	bool bLegacyNeedToPurgeSkelRefs; // 0x38
	FGuid BlueprintGuid; // 0x3c
};

struct UBoxFalloff : UFieldNodeFloat {
	float Magnitude; // 0xb0
	float MinRange; // 0xb4
	float MaxRange; // 0xb8
	float Default; // 0xbc
	FTransform Transform; // 0xc0
	EFieldFalloffType Falloff; // 0xf0
};

struct UMultiLineEditableText : UTextLayoutWidget {
	FText Text; // 0x128
	FText HintText; // 0x140
	FDelegate HintTextDelegate; // 0x158
	FTextBlockStyle WidgetStyle; // 0x168
	bool bIsReadOnly; // 0x3d8
	FSlateFontInfo Font; // 0x3e0
	bool SelectAllTextWhenFocused; // 0x438
	bool ClearTextSelectionOnFocusLoss; // 0x439
	bool RevertTextOnEscape; // 0x43a
	bool ClearKeyboardFocusOnCommit; // 0x43b
	bool AllowContextMenu; // 0x43c
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x43d
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x43e
	FMulticastInlineDelegate OnTextChanged; // 0x440
	FMulticastInlineDelegate OnTextCommitted; // 0x450
};

struct UProgressBarWBP_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Image_327; // 0x268
	UImage* Image_Alarm; // 0x270
	UProgressBar* ProgressBar_41; // 0x278
	UTextBlock* RepairText; // 0x280
	USizeBox* SizeBox_Charger; // 0x288
	UTextBlock* TextBlock_98; // 0x290
	float TimeCurrent; // 0x298
	float RangeMax; // 0x29c
	float Alpha; // 0x2a0
};

struct UNiagaraDataInterfaceCurlNoise : UNiagaraDataInterface {
	uint32_t Seed; // 0x38
};

struct UBTDecorator : UBTAuxiliaryNode {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct AReflectionCapture : AActor {
	UReflectionCaptureComponent* CaptureComponent; // 0x220
};

struct UParticleModuleVectorFieldGlobal : UParticleModuleVectorFieldBase {
	char bOverrideGlobalVectorFieldTightness : 1; // 0x30
	float GlobalVectorFieldScale; // 0x34
	float GlobalVectorFieldTightness; // 0x38
};

struct UPlayFabExperimentationAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x158
	UPlayFabJsonObject* RequestJsonObj; // 0x160
	UPlayFabJsonObject* ResponseJsonObj; // 0x168
};

struct USourceEffectDynamicsProcessorPreset : USoundEffectSourcePreset {
	FSourceEffectDynamicsProcessorSettings Settings; // 0xb8
};

struct UFartTimer_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Background; // 0x268
	UImage* Image_168; // 0x270
	UImage* Image_268; // 0x278
	UImage* Image_Cooldown; // 0x280
	UOverlay* Overlay_Main; // 0x288
	UTextBlock* TextBlock; // 0x290
	UTextBlock* TextBlock_TIMER; // 0x298
	int32_t Seconds; // 0x2a0
	float Time; // 0x2a4
	int32_t Seconds_Max; // 0x2a8
};

struct USoundConcurrency : UObject {
	FSoundConcurrencySettings Concurrency; // 0x28
};

struct UInputAxisKeyDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings; // 0x28
};

struct UEditableTextBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FEditableTextBoxStyle EditableTextBoxStyle; // 0x30
};

struct UKeymasterLevelSystem_C : ULevelSystem_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x100
	AKeymaster_C* KeymasterRef; // 0x108
	TArray<int32_t> DamageLvls; // 0x110
	TArray<float> RaduisLvls; // 0x120
	TArray<float> EyeDurationLvls; // 0x130
	float Duration; // 0x140
	float CDAstral; // 0x144
	TArray<float> CDAstralLvls; // 0x148
	int32_t Damage; // 0x158
	float Radius; // 0x15c
};

struct UEditableStaticMeshAdapter : UEditableMeshAdapter {
	UStaticMesh* StaticMesh; // 0x28
	UStaticMesh* OriginalStaticMesh; // 0x30
	int32_t StaticMeshLODIndex; // 0x38
};

struct AGlueOfJarItemsBP_Epic_C : AItemsBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
};

struct UW_GameResult_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* AppearFromRight_Anim; // 0x268
	UWidgetAnimation* AppearFromLeft_Anim; // 0x270
	UWidgetAnimation* ButtonMapHovered3; // 0x278
	UWidgetAnimation* ButtonMapHovered2; // 0x280
	UWidgetAnimation* ButtonMapHovered1; // 0x288
	UWidgetAnimation* ButtonMapAnim3; // 0x290
	UWidgetAnimation* ButtonMapAnim2; // 0x298
	UWidgetAnimation* ButtonMapAnim1; // 0x2a0
	UWidgetAnimation* FadeOutMatchRes; // 0x2a8
	UWidgetAnimation* FadeOutVotMap; // 0x2b0
	UWidgetAnimation* FadeInMatchRes; // 0x2b8
	UBackgroundBlur* BackgroundBlur_114; // 0x2c0
	UButton* Button_Highlighs; // 0x2c8
	UButton* Button_Level; // 0x2d0
	UButton* Button_Rank; // 0x2d8
	UButton* ButtonVoteMap1; // 0x2e0
	UButton* ButtonVoteMap1_2; // 0x2e8
	UButton* ButtonVoteMap1_3; // 0x2f0
	UCanvasPanel* Canvas; // 0x2f8
	UImage* Image_156; // 0x300
	UImage* Image_CharacterSeparator; // 0x308
	UImage* Image_HighlightsBG; // 0x310
	UImage* Image_L1; // 0x318
	UImage* Image_L2; // 0x320
	UImage* Image_L3; // 0x328
	UImage* Image_LevelBG; // 0x330
	UHorizontalBox* KillerChar_Icon; // 0x338
	UImage* MapBG1; // 0x340
	UImage* MapBG2; // 0x348
	UImage* MapBG3; // 0x350
	UImage* MapBG_Border1; // 0x358
	UImage* MapBG_Border2; // 0x360
	UImage* MapBG_Border3; // 0x368
	UImage* MapBG_Border_Selected1; // 0x370
	UImage* MapBG_Border_Selected2; // 0x378
	UImage* MapBG_Border_Selected3; // 0x380
	UImage* MapImage1; // 0x388
	UImage* MapImage1_2; // 0x390
	UImage* MapImage1_3; // 0x398
	UTextBlock* MapName1; // 0x3a0
	UTextBlock* MapName1_2; // 0x3a8
	UTextBlock* MapName1_3; // 0x3b0
	UTextBlock* MapVote1; // 0x3b8
	UTextBlock* MapVote1_2; // 0x3c0
	UTextBlock* MapVote1_3; // 0x3c8
	UTextBlock* NextGameTimer; // 0x3d0
	UHorizontalBox* PlayersBoxPropnight; // 0x3d8
	USizeBox* Selected1; // 0x3e0
	USizeBox* Selected2; // 0x3e8
	USizeBox* Selected3; // 0x3f0
	UUniformGridPanel* SurvChar_Icons; // 0x3f8
	UTextBlock* TextBlock_HighlightsButton; // 0x400
	UTextBlock* TextBlock_Label; // 0x408
	UTextBlock* TextBlock_LevelButton; // 0x410
	UWBP_EndGameLevel_C* WBP_EndGameLevel; // 0x418
	UWBP_GameResultHighlight_C* WBP_GameResultHighlight_Killer; // 0x420
	UWBP_GameResultHighlight_C* WBP_GameResultHighlight_Surv_2; // 0x428
	UWBP_GameResultHighlight_C* WBP_GameResultHighlight_Surv_3; // 0x430
	UWBP_GameResultHighlight_C* WBP_GameResultHighlight_Surv_4; // 0x438
	UWBP_GameResultHighlight_C* WBP_GameResultHighlight_Surv_5; // 0x440
	UWidgetSwitcher* WidgetSwitcher_StatContent; // 0x448
	TArray<APlayerState*> PlayersState; // 0x450
	float FadeTime; // 0x460
	int32_t RollNumber; // 0x464
	TArray<int32_t> RollArray; // 0x468
	int32_t Index; // 0x478
	bool WinSurv; // 0x47c
	TArray<UPaperSprite*> imageArray; // 0x480
	bool RollStart; // 0x490
	int32_t RollNum; // 0x494
	float RollFloat; // 0x498
	bool Serv?; // 0x49c
	float RollSpeed; // 0x4a0
	FFMODEventInstance LootSoundStart; // 0x4a8
	AEndGameRenderMesh_C* RenderActor; // 0x4b0
	bool EndGame?; // 0x4b8
	bool Clicked?; // 0x4b9
	float Seconds; // 0x4bc
	bool StartFadeOut?; // 0x4c0
	FFMODEventInstance MistSound; // 0x4c8
	bool FadeSound?; // 0x4d0
	float MistVolume; // 0x4d4
	int32_t TempCategory; // 0x4d8
	int32_t Killers?; // 0x4dc
	float ProgressBarPercentTemp; // 0x4e0
	TMap<FString, UTexture2D*> Mapimage; // 0x4e8
	TArray<UW_GameResultRow_C*> GameResultRow; // 0x538
	TArray<APlayerState*> KillerArr; // 0x548
	TArray<APlayerState*> PlayerArr; // 0x558
	bool Voted; // 0x568
	bool VotedMap; // 0x569
	TArray<UWidgetAnimation*> PlayedAnim; // 0x570
	TArray<UImage*> SelectedMap; // 0x580
	TArray<USizeBox*> SelectadArr; // 0x590
	TArray<UImage*> imageL; // 0x5a0
	bool VotedMap_3; // 0x5b0
	bool VotedMap_4; // 0x5b1
	bool IsSelectingAnimPlaying; // 0x5b2
	FTimerHandle AnimTimer_2; // 0x5b8
	FTimerHandle AnimTimer_3; // 0x5c0
	FTimerHandle AnimTimer_4; // 0x5c8
	bool IsAnimForwardDirection_2; // 0x5d0
	bool IsAnimForwardDirection_3; // 0x5d1
	bool IsAnimForwardDirection_4; // 0x5d2
	TArray<UWBP_GameResultHighlight_C*> SurvHighlightsArray; // 0x5d8
};

struct UAnimCompress_RemoveLinearKeys : UAnimCompress {
	float MaxPosDiff; // 0x40
	float MaxAngleDiff; // 0x44
	float MaxScaleDiff; // 0x48
	float MaxEffectorDiff; // 0x4c
	float MinEffectorDiff; // 0x50
	float EffectorDiffSocket; // 0x54
	float ParentKeyScale; // 0x58
	char bRetarget : 1; // 0x5c
	char bActuallyFilterLinearKeys : 1; // 0x5c
};

struct UVectorFieldStatic : UVectorField {
	int32_t SizeX; // 0x48
	int32_t SizeY; // 0x4c
	int32_t SizeZ; // 0x50
	bool bAllowCPUAccess; // 0x54
};

struct UEOSCoreTitleStorageReadFile : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UEOSCoreSessionsUnregisterPlayers : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UMovieScene : UMovieSceneSignedObject {
	TArray<FMovieSceneSpawnable> Spawnables; // 0x50
	TArray<FMovieScenePossessable> Possessables; // 0x60
	TArray<FMovieSceneBinding> ObjectBindings; // 0x70
	TMap<FName, FMovieSceneObjectBindingIDs> BindingGroups; // 0x80
	TArray<UMovieSceneTrack*> MasterTracks; // 0xd0
	UMovieSceneTrack* CameraCutTrack; // 0xe0
	FMovieSceneFrameRange SelectionRange; // 0xe8
	FMovieSceneFrameRange PlaybackRange; // 0xf8
	FFrameRate TickResolution; // 0x108
	FFrameRate DisplayRate; // 0x110
	EMovieSceneEvaluationType EvaluationType; // 0x118
	EUpdateClockSource ClockSource; // 0x119
	FSoftObjectPath CustomClockSourcePath; // 0x120
	TArray<FMovieSceneMarkedFrame> MarkedFrames; // 0x138
};

struct AFMODSoundTrigger_C : ATriggerBox {
	FPointerToUberGraphFrame UberGraphFrame; // 0x228
	UFMODAudioComponent* FmodAudio; // 0x230
	float Volume; // 0x238
	bool Overlap?; // 0x23c
	float Speed; // 0x240
};

struct UTextRenderComponent : UPrimitiveComponent {
	FText Text; // 0x440
	UMaterialInterface* TextMaterial; // 0x458
	UFont* Font; // 0x460
	EHorizTextAligment HorizontalAlignment; // 0x468
	EVerticalTextAligment VerticalAlignment; // 0x469
	FColor TextRenderColor; // 0x46c
	float XScale; // 0x470
	float YScale; // 0x474
	float WorldSize; // 0x478
	float InvDefaultSize; // 0x47c
	float HorizSpacingAdjust; // 0x480
	float VertSpacingAdjust; // 0x484
	char bAlwaysRenderAsText : 1; // 0x488
};

struct UInterpTrackSound : UInterpTrackVectorBase {
	TArray<FSoundTrackKey> Sounds; // 0x90
	char bPlayOnReverse : 1; // 0xa0
	char bContinueSoundOnMatineeEnd : 1; // 0xa0
	char bSuppressSubtitles : 1; // 0xa0
	char bTreatAsDialogue : 1; // 0xa0
	char bAttach : 1; // 0xa0
};

struct UBodySetup : UBodySetupCore {
	FKAggregateGeom AggGeom; // 0x48
	char bAlwaysFullAnimWeight : 1; // 0xa0
	char bConsiderForBounds : 1; // 0xa0
	char bMeshCollideAll : 1; // 0xa0
	char bDoubleSidedGeometry : 1; // 0xa0
	char bGenerateNonMirroredCollision : 1; // 0xa0
	char bSharedCookedData : 1; // 0xa0
	char bGenerateMirroredCollision : 1; // 0xa0
	char bSupportUVsAndFaceRemap : 1; // 0xa0
	UPhysicalMaterial* PhysMaterial; // 0xa8
	FWalkableSlopeOverride WalkableSlopeOverride; // 0xb0
	FBodyInstance DefaultInstance; // 0x128
	FVector BuildScale3D; // 0x288
};

struct USpinBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FSpinBoxStyle SpinBoxStyle; // 0x30
};

struct UChildActorComponent : USceneComponent {
	AActor* ChildActorClass; // 0x1f8
	AActor* ChildActor; // 0x200
	AActor* ChildActorTemplate; // 0x208
};

struct AYellowJarThrow_C : AGrenade_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x238
	UStaticMeshComponent* StaticMesh; // 0x240
};

struct ULightMapVirtualTexture2D : UTexture2D {
	TArray<int8_t> TypeToLayer; // 0x100
};

struct ULootboxShopUI_C : UUserWidget {
	UImage* Image_105; // 0x260
};

struct UStaticMesh : UStreamableRenderAsset {
	FPerPlatformInt MinLOD; // 0x80
	float LpvBiasMultiplier; // 0x84
	TArray<FStaticMaterial> StaticMaterials; // 0x88
	float LightmapUVDensity; // 0x98
	int32_t LightMapResolution; // 0x9c
	int32_t LightMapCoordinateIndex; // 0xa0
	float DistanceFieldSelfShadowBias; // 0xa4
	UBodySetup* BodySetup; // 0xa8
	int32_t LODForCollision; // 0xb0
	char bGenerateMeshDistanceField : 1; // 0xb4
	char bStripComplexCollisionForConsole : 1; // 0xb4
	char bHasNavigationData : 1; // 0xb4
	char bSupportUniformlyDistributedSampling : 1; // 0xb4
	char bSupportPhysicalMaterialMasks : 1; // 0xb4
	char bIsBuiltAtRuntime : 1; // 0xb4
	char bAllowCPUAccess : 1; // 0xb4
	char bSupportGpuUniformlyDistributedSampling : 1; // 0xb5
	TArray<UStaticMeshSocket*> Sockets; // 0xd8
	FVector PositiveBoundsExtension; // 0xf8
	FVector NegativeBoundsExtension; // 0x104
	FBoxSphereBounds ExtendedBounds; // 0x110
	int32_t ElementToIgnoreForTexFactor; // 0x12c
	TArray<UAssetUserData*> AssetUserData; // 0x130
	UObject* EditableMesh; // 0x140
	UNavCollisionBase* NavCollision; // 0x148
};

struct UMovieScene3DTransformSection : UMovieSceneSection {
	FMovieSceneTransformMask TransformMask; // 0xf0
	FMovieSceneFloatChannel Translation[0x3]; // 0xf8
	FMovieSceneFloatChannel Rotation[0x3]; // 0x2d8
	FMovieSceneFloatChannel Scale[0x3]; // 0x4b8
	FMovieSceneFloatChannel ManualWeight; // 0x698
	bool bUseQuaternionInterpolation; // 0x738
};

struct UPlayFabCloudScriptAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x158
	UPlayFabJsonObject* RequestJsonObj; // 0x160
	UPlayFabJsonObject* ResponseJsonObj; // 0x168
};

struct UDebugCameraControllerSettings : UDeveloperSettings {
	TArray<FDebugCameraControllerSettingsViewModeIndex> CycleViewModes; // 0x38
};

struct AAlarmFullCoin_C : ACoinActor_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
	bool IsChair; // 0x300
};

struct UBTTask_GameplayTaskBase : UBTTaskNode {
	char bWaitForGameplayTask : 1; // 0x70
};

struct USilentProp_C : UPerkSurv_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
};

struct ALootableMesh_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UStaticMeshComponent* Door1; // 0x228
	UStaticMeshComponent* Door; // 0x230
	USceneComponent* DoorPoint; // 0x238
	USphereComponent* Sphere; // 0x240
	UArrowComponent* Arrow; // 0x248
	UFMODAudioComponent* CurseSound; // 0x250
	UPointLightComponent* CurseLight; // 0x258
	UBoxComponent* InteractCollision; // 0x260
	USceneComponent* Scene1; // 0x268
	UFMODAudioComponent* FMODAudio2; // 0x270
	UFMODAudioComponent* FMODAudio1; // 0x278
	USceneComponent* Scene; // 0x280
	UStaticMeshComponent* Box; // 0x288
	USceneComponent* DefaultSceneRoot; // 0x290
	float T_InsideShine_Intensity_71121A464EB065EE6103698DB596570F; // 0x298
	ETimelineDirection T_InsideShine__Direction_71121A464EB065EE6103698DB596570F; // 0x29c
	UTimelineComponent* T_InsideShine; // 0x2a0
	float T_OpenLootbox_OpenCap_9A44E95D400B6552C917E3A62224627C; // 0x2a8
	float T_OpenLootbox_OpenTongue_9A44E95D400B6552C917E3A62224627C; // 0x2ac
	ETimelineDirection T_OpenLootbox__Direction_9A44E95D400B6552C917E3A62224627C; // 0x2b0
	UTimelineComponent* T_OpenLootbox; // 0x2b8
	float T_CloseLootbox_CloseTongue_5CDA91604678F732E9C179AB4D8E8CA9; // 0x2c0
	float T_CloseLootbox_CloseCap_5CDA91604678F732E9C179AB4D8E8CA9; // 0x2c4
	ETimelineDirection T_CloseLootbox__Direction_5CDA91604678F732E9C179AB4D8E8CA9; // 0x2c8
	UTimelineComponent* T_CloseLootbox; // 0x2d0
	bool bLocked; // 0x2d8
	int32_t NeedPoints; // 0x2dc
	TArray<FName> ItemsName; // 0x2e0
	TArray<float> ItemsChance; // 0x2f0
	TArray<FName> RarityName; // 0x300
	TArray<float> RarityChance; // 0x310
	FName GetItemName; // 0x320
	FName DroppedItem; // 0x328
	int32_t TempInt; // 0x330
	AActor* SpawnedItem; // 0x338
	bool ItemSpawned?; // 0x340
	int32_t FirstIndex; // 0x344
	int32_t SecondIndex; // 0x348
	float Random; // 0x34c
	FName GetRarityName; // 0x350
	ASurvivorMasterBP_C* SurvRef; // 0x358
	bool Chek; // 0x360
	UMaterialInstanceDynamic* InsideDynMat; // 0x368
	UMaterialInstanceDynamic* LootDynMat; // 0x370
	TArray<bool> ItemAccessDenied; // 0x378
	TArray<int32_t> ItemsAmount; // 0x388
	TArray<int32_t> ItemsAmountDropped; // 0x398
	bool Cursed; // 0x3a8
	bool Opened?; // 0x3a9
	int32_t OpenCount; // 0x3ac
	int32_t CloseCount; // 0x3b0
	UDataTable* Data Table; // 0x3b8
	UDataTable* Data Table Medkit; // 0x3c0
	UDataTable* Data Table CommonItems; // 0x3c8
	float ZLocalMin; // 0x3d0
	float ZLocal; // 0x3d4
	TArray<float> r3; // 0x3d8
	int32_t I; // 0x3e8
	ASurvivorMasterBP_C* SREF; // 0x3f0
	int32_t CountCoins; // 0x3f8
	FText C; // 0x400
	bool IncreaseRare; // 0x418
	bool PerkBlock?; // 0x419
	TArray<UMaterialInstanceDynamic*> DynMaterials; // 0x420
};

struct UGeometryCache : UObject {
	TArray<UMaterialInterface*> Materials; // 0x30
	TArray<UGeometryCacheTrack*> Tracks; // 0x40
	int32_t StartFrame; // 0x60
	int32_t EndFrame; // 0x64
};

struct UCurveLinearColorAtlas : UTexture2D {
	uint32_t TextureSize; // 0x100
	TArray<UCurveLinearColor*> GradientCurves; // 0x108
};

struct UParticleModuleTypeDataBeam2 : UParticleModuleTypeDataBase {
	EBeam2Method BeamMethod; // 0x30
	int32_t TextureTile; // 0x34
	float TextureTileDistance; // 0x38
	int32_t Sheets; // 0x3c
	int32_t MaxBeamCount; // 0x40
	float Speed; // 0x44
	int32_t InterpolationPoints; // 0x48
	char bAlwaysOn : 1; // 0x4c
	int32_t UpVectorStepSize; // 0x50
	FName BranchParentName; // 0x54
	FRawDistributionFloat Distance; // 0x60
	EBeamTaperMethod TaperMethod; // 0x90
	FRawDistributionFloat TaperFactor; // 0x98
	FRawDistributionFloat TaperScale; // 0xc8
	char RenderGeometry : 1; // 0xf8
	char RenderDirectLine : 1; // 0xf8
	char RenderLines : 1; // 0xf8
	char RenderTessellation : 1; // 0xf8
};

struct USourceEffectBitCrusherPreset : USoundEffectSourcePreset {
	FSourceEffectBitCrusherSettings Settings; // 0xc0
};

struct UMovieSceneMediaSection : UMovieSceneSection {
	UMediaSource* MediaSource; // 0xe8
	bool bLooping; // 0xf0
	FFrameNumber StartFrameOffset; // 0xf4
	UMediaTexture* MediaTexture; // 0xf8
	UMediaSoundComponent* MediaSoundComponent; // 0x100
	bool bUseExternalMediaPlayer; // 0x108
	UMediaPlayer* ExternalMediaPlayer; // 0x110
};

struct UDoppelKillerWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UBTService : UBTAuxiliaryNode {
	float Interval; // 0x60
	float RandomDeviation; // 0x64
	char bCallTickOnSearchStart : 1; // 0x68
	char bRestartTimerOnEachActivation : 1; // 0x68
};

struct UFlexible_C : UPerkSurv_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
};

struct UWB_Spectator_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UCanvasPanel* CanvasPanel_1; // 0x268
	UHorizontalBox* HorizontalBox_call; // 0x270
	USafeZone* SafeZone_265; // 0x278
	USafeZone* SafeZone_428; // 0x280
	UTextBlock* Text_NameCurrentPLR; // 0x288
	UTextBlock* TextBlock_8; // 0x290
	UWBP_KeyIcon_C* WBP_KeyIcon; // 0x298
	UWBP_KeyIcon_C* WBP_KeyIcon_148; // 0x2a0
};

struct UNetDriverEOSCore : UIpNetDriver {
	bool bIsPassthrough; // 0x7b8
	bool bIsUsingP2PSockets; // 0x7b9
};

struct UHierarchicalInstancedStaticMeshComponent : UInstancedStaticMeshComponent {
	TArray<int32_t> SortedInstances; // 0x588
	int32_t NumBuiltInstances; // 0x598
	FBox BuiltInstanceBounds; // 0x5a0
	FBox UnbuiltInstanceBounds; // 0x5bc
	TArray<FBox> UnbuiltInstanceBoundsList; // 0x5d8
	char bEnableDensityScaling : 1; // 0x5e8
	int32_t OcclusionLayerNumNodes; // 0x5f0
	FBoxSphereBounds CacheMeshExtendedBounds; // 0x5f4
	bool bDisableCollision; // 0x610
	int32_t InstanceCountToRender; // 0x614
};

struct UMaterialExpressionDesaturation : UMaterialExpression {
	FExpressionInput Input; // 0x40
	FExpressionInput Fraction; // 0x54
	FLinearColor LuminanceFactors; // 0x68
};

struct UDestroySessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct ULandscapeHeightfieldCollisionComponent : UPrimitiveComponent {
	TArray<ULandscapeLayerInfoObject*> ComponentLayerInfos; // 0x440
	int32_t SectionBaseX; // 0x450
	int32_t SectionBaseY; // 0x454
	int32_t CollisionSizeQuads; // 0x458
	float CollisionScale; // 0x45c
	int32_t SimpleCollisionSizeQuads; // 0x460
	TArray<char> CollisionQuadFlags; // 0x468
	FGuid HeightfieldGuid; // 0x478
	FBox CachedLocalBox; // 0x488
	LazyObjectProperty RenderComponent; // 0x4a4
	TArray<UPhysicalMaterial*> CookedPhysicalMaterials; // 0x4d0
};

struct UMaterialExpressionConstant : UMaterialExpression {
	float R; // 0x40
};

struct UMediaComponent : UActorComponent {
	UMediaTexture* MediaTexture; // 0xb0
	UMediaPlayer* MediaPlayer; // 0xb8
};

struct UPropertyBinding : UObject {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UFMODBankLookup : UObject {
	UDataTable* DataTable; // 0x28
	FString MasterBankPath; // 0x30
	FString MasterAssetsBankPath; // 0x40
	FString MasterStringsBankPath; // 0x50
};

struct USlateAccessibleWidgetData : UObject {
	bool bCanChildrenBeAccessible; // 0x28
	ESlateAccessibleBehavior AccessibleBehavior; // 0x29
	ESlateAccessibleBehavior AccessibleSummaryBehavior; // 0x2a
	FText AccessibleText; // 0x30
	FDelegate AccessibleTextDelegate; // 0x48
	FText AccessibleSummaryText; // 0x58
	FDelegate AccessibleSummaryTextDelegate; // 0x70
};

struct UAnimationSharingManager : UObject {
	TArray<USkeleton*> Skeletons; // 0x28
	TArray<UAnimSharingInstance*> PerSkeletonData; // 0x38
};

struct UMaterialExpressionClearCoatNormalCustomOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UInterpTrackInstSound : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
	UAudioComponent* PlayAudioComp; // 0x30
};

struct USoundNodeQualityLevel : USoundNode {
	int32_t CookedQualityLevelIndex; // 0x48
};

struct UPartyBeaconState : UObject {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	int32_t NumTeams; // 0x38
	int32_t NumPlayersPerTeam; // 0x3c
	FName TeamAssignmentMethod; // 0x40
	int32_t ReservedHostTeamNum; // 0x48
	int32_t ForceTeamNum; // 0x4c
	bool bRestrictCrossConsole; // 0x50
	bool bEnableRemovalRequests; // 0x51
	TArray<FPartyReservation> Reservations; // 0x58
};

struct UPlayFabMatchmakerAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0xd8
	UPlayFabJsonObject* RequestJsonObj; // 0xe0
	UPlayFabJsonObject* ResponseJsonObj; // 0xe8
};

struct UNiagaraRendererProperties : UNiagaraMergeable {
	FNiagaraPlatformSet Platforms; // 0x28
	int32_t SortOrderHint; // 0x58
	bool bIsEnabled; // 0x5c
	bool bMotionBlurEnabled; // 0x5d
};

struct UAIPerceptionComponent : UActorComponent {
	TArray<UAISenseConfig*> SensesConfig; // 0xb0
	UAISense* DominantSense; // 0xc0
	AAIController* AIOwner; // 0xd8
	FMulticastInlineDelegate OnPerceptionUpdated; // 0x160
	FMulticastInlineDelegate OnTargetPerceptionUpdated; // 0x170
	FMulticastInlineDelegate OnTargetPerceptionInfoUpdated; // 0x180
};

struct UW_ServerEntryV3_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Hover_Anim; // 0x268
	UWidgetAnimation* HideWaiting_Anim; // 0x270
	UWidgetAnimation* Waiting_Anim; // 0x278
	UImage* BG; // 0x280
	UImage* BG_Hovered; // 0x288
	UCanvasPanel* CanvasPanel_Root; // 0x290
	UImage* Image_MapPreview; // 0x298
	UImage* Image_Waiting; // 0x2a0
	UTextBlock* Map; // 0x2a8
	UTextBlock* Mode; // 0x2b0
	UTextBlock* Mode_2; // 0x2b8
	UTextBlock* Name; // 0x2c0
	UTextBlock* Ping; // 0x2c8
	UTextBlock* Players; // 0x2d0
	URetainerBox* RetainerBox_1; // 0x2d8
	UScrollBox* ScrollBox_1; // 0x2e0
	UTextBlock* Status; // 0x2e8
	UBP_SessionData_C* session; // 0x2f0
	FLinearColor SelectedColor; // 0x2f8
	FLinearColor HoveredColor; // 0x308
	FLinearColor DefaultColor; // 0x318
	FSlateBrush SelectedBrash; // 0x328
	FSlateBrush HoveredBrush; // 0x3b0
	FSlateBrush DefaultBrush; // 0x438
	bool IsSelected; // 0x4c0
	bool Hovered; // 0x4c1
	bool IsForwardDirection; // 0x4c2
	FTimerHandle AnimTimer; // 0x4c8
};

struct UExpandableArea : UWidget {
	FExpandableAreaStyle Style; // 0x110
	FSlateBrush BorderBrush; // 0x230
	FSlateColor BorderColor; // 0x2b8
	bool bIsExpanded; // 0x2e0
	float MaxHeight; // 0x2e4
	FMargin HeaderPadding; // 0x2e8
	FMargin AreaPadding; // 0x2f8
	FMulticastInlineDelegate OnExpansionChanged; // 0x308
	UWidget* HeaderContent; // 0x318
	UWidget* BodyContent; // 0x320
};

struct ULandscapeComponent : UPrimitiveComponent {
	int32_t SectionBaseX; // 0x440
	int32_t SectionBaseY; // 0x444
	int32_t ComponentSizeQuads; // 0x448
	int32_t SubsectionSizeQuads; // 0x44c
	int32_t NumSubsections; // 0x450
	UMaterialInterface* OverrideMaterial; // 0x458
	UMaterialInterface* OverrideHoleMaterial; // 0x460
	TArray<FLandscapeComponentMaterialOverride> OverrideMaterials; // 0x468
	TArray<UMaterialInstanceConstant*> MaterialInstances; // 0x478
	TArray<UMaterialInstanceDynamic*> MaterialInstancesDynamic; // 0x488
	TArray<int8_t> LODIndexToMaterialIndex; // 0x498
	TArray<int8_t> MaterialIndexToDisabledTessellationMaterial; // 0x4a8
	UTexture2D* XYOffsetmapTexture; // 0x4b8
	FVector4 WeightmapScaleBias; // 0x4c0
	float WeightmapSubsectionOffset; // 0x4d0
	FVector4 HeightmapScaleBias; // 0x4e0
	FBox CachedLocalBox; // 0x4f0
	LazyObjectProperty CollisionComponent; // 0x50c
	UTexture2D* HeightmapTexture; // 0x528
	TArray<FWeightmapLayerAllocationInfo> WeightmapLayerAllocations; // 0x530
	TArray<UTexture2D*> WeightmapTextures; // 0x540
	ULandscapeLODStreamingProxy* LODStreamingProxy; // 0x550
	FGuid MapBuildDataId; // 0x558
	TArray<FGuid> IrrelevantLights; // 0x568
	int32_t CollisionMipLevel; // 0x578
	int32_t SimpleCollisionMipLevel; // 0x57c
	float NegativeZBoundsExtension; // 0x580
	float PositiveZBoundsExtension; // 0x584
	float StaticLightingResolution; // 0x588
	int32_t ForcedLOD; // 0x58c
	int32_t LODBias; // 0x590
	FGuid StateId; // 0x594
	FGuid BakedTextureMaterialGuid; // 0x5a4
	UTexture2D* GIBakedBaseColorTexture; // 0x5b8
	char MobileBlendableLayerMask; // 0x5c0
	UMaterialInterface* MobileMaterialInterface; // 0x5c8
	TArray<UMaterialInterface*> MobileMaterialInterfaces; // 0x5d0
	TArray<UTexture2D*> MobileWeightmapTextures; // 0x5e0
};

struct UMenuAnchor : UContentWidget {
	UUserWidget* MenuClass; // 0x120
	FDelegate OnGetMenuContentEvent; // 0x128
	FDelegate OnGetUserMenuContentEvent; // 0x138
	EMenuPlacement Placement; // 0x148
	bool bFitInWindow; // 0x149
	bool ShouldDeferPaintingAfterWindowContent; // 0x14a
	bool UseApplicationMenuStack; // 0x14b
	FMulticastInlineDelegate OnMenuOpenChanged; // 0x150
};

struct USurvStatusWBP_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* HUD_JumpOut_Curve; // 0x268
	UWidgetAnimation* HUD_JumpIn; // 0x270
	UImage* Image_83; // 0x278
	UImage* Image_Voice; // 0x280
	UOverlay* Overlay_KillerVoice; // 0x288
	USizeBox* SizeBox_SelfStatus; // 0x290
	UTextBlock* TextBlock_Nickname; // 0x298
	UVerticalBox* VerticalBox; // 0x2a0
	UVerticalBox* VerticalBox_AllyStatus; // 0x2a8
	FText text1; // 0x2b0
	UTextBlock* textBox; // 0x2c8
	FString string1; // 0x2d0
	FString Nickname; // 0x2e0
	FString KillingTimeString; // 0x2f0
	TArray<ASurvivorMasterBP_C*> SurvArray; // 0x300
	TArray<UCountSurvStatus_C*> Widgets; // 0x310
	bool Chair?; // 0x320
	int32_t HealthValue; // 0x324
	TArray<AKillerMasterBP_C*> Killer; // 0x328
	FString string3; // 0x338
	bool SelfFound; // 0x348
};

struct AHUD_PropHunt_Tutorial_C : AHUD_PropHunt_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x4b0
	UWBP_HitMarkComponent_KillerAlarm_C* HitMark; // 0x4b8
};

struct UNiagaraPreviewAxis_InterpParamVector4 : UNiagaraPreviewAxis_InterpParamBase {
	FVector4 Min; // 0x40
	FVector4 Max; // 0x50
};

struct UActorSequenceComponent : UActorComponent {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0xb0
	UActorSequence* Sequence; // 0xc8
	UActorSequencePlayer* SequencePlayer; // 0xd0
};

struct AStaticMeshActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x220
	bool bStaticMeshReplicateMovement; // 0x228
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x229
};

struct UMaterialExpressionRuntimeVirtualTextureReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput VirtualTextureOutput; // 0x54
};

struct UMagnet_C : UPerkSurv_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
};

struct UMovieSceneBuiltInEasingFunction : UObject {
	EMovieSceneBuiltInEasing Type; // 0x30
};

struct USynthSound : USoundWaveProcedural {
	USynthComponent* OwningSynthComponent; // 0x3c0
};

struct URendererSettings : UDeveloperSettings {
	char bMobileDisableVertexFog : 1; // 0x38
	int32_t MaxMobileCascades; // 0x3c
	EMobileMSAASampleCount MobileMSAASampleCount; // 0x40
	char bMobileAllowDitheredLODTransition : 1; // 0x44
	char bMobileAllowSoftwareOcclusionCulling : 1; // 0x44
	char bMobileVirtualTextures : 1; // 0x44
	char bDiscardUnusedQualityLevels : 1; // 0x44
	char bOcclusionCulling : 1; // 0x44
	float MinScreenRadiusForLights; // 0x48
	float MinScreenRadiusForEarlyZPass; // 0x4c
	float MinScreenRadiusForCSMdepth; // 0x50
	char bPrecomputedVisibilityWarning : 1; // 0x54
	char bTextureStreaming : 1; // 0x54
	char bUseDXT5NormalMaps : 1; // 0x54
	char bVirtualTextures : 1; // 0x54
	char bVirtualTexturedLightmaps : 1; // 0x54
	uint32_t VirtualTextureTileSize; // 0x58
	uint32_t VirtualTextureTileBorderSize; // 0x5c
	uint32_t VirtualTextureFeedbackFactor; // 0x60
	char bVirtualTextureEnableCompressZlib : 1; // 0x64
	char bVirtualTextureEnableCompressCrunch : 1; // 0x64
	char bClearCoatEnableSecondNormal : 1; // 0x64
	int32_t ReflectionCaptureResolution; // 0x68
	char bReflectionCaptureCompression : 1; // 0x6c
	char ReflectionEnvironmentLightmapMixBasedOnRoughness : 1; // 0x6c
	char bForwardShading : 1; // 0x6c
	char bVertexFoggingForOpaque : 1; // 0x6c
	char bAllowStaticLighting : 1; // 0x6c
	char bUseNormalMapsForStaticLighting : 1; // 0x6c
	char bGenerateMeshDistanceFields : 1; // 0x6c
	char bEightBitMeshDistanceFields : 1; // 0x6c
	char bGenerateLandscapeGIData : 1; // 0x6d
	char bCompressMeshDistanceFields : 1; // 0x6d
	float TessellationAdaptivePixelsPerTriangle; // 0x70
	char bSeparateTranslucency : 1; // 0x74
	ETranslucentSortPolicy TranslucentSortPolicy; // 0x78
	FVector TranslucentSortAxis; // 0x7c
	ECustomDepthStencil CustomDepthStencil; // 0x88
	char bCustomDepthTaaJitter : 1; // 0x8c
	EAlphaChannelMode bEnableAlphaChannelInPostProcessing; // 0x90
	char bDefaultFeatureBloom : 1; // 0x94
	char bDefaultFeatureAmbientOcclusion : 1; // 0x94
	char bDefaultFeatureAmbientOcclusionStaticFraction : 1; // 0x94
	char bDefaultFeatureAutoExposure : 1; // 0x94
	EAutoExposureMethodUI DefaultFeatureAutoExposure; // 0x98
	float DefaultFeatureAutoExposureBias; // 0x9c
	char bExtendDefaultLuminanceRangeInAutoExposureSettings : 1; // 0xa0
	char bUsePreExposure : 1; // 0xa0
	char bEnablePreExposureOnlyInTheEditor : 1; // 0xa0
	char bDefaultFeatureMotionBlur : 1; // 0xa0
	char bDefaultFeatureLensFlare : 1; // 0xa0
	char bTemporalUpsampling : 1; // 0xa0
	char bSSGI : 1; // 0xa0
	EAntiAliasingMethod DefaultFeatureAntiAliasing; // 0xa4
	ELightUnits DefaultLightUnits; // 0xa5
	EDefaultBackBufferPixelFormat DefaultBackBufferPixelFormat; // 0xa6
	char bRenderUnbuiltPreviewShadowsInGame : 1; // 0xa8
	char bStencilForLODDither : 1; // 0xa8
	EEarlyZPass EarlyZPass; // 0xac
	char bEarlyZPassOnlyMaterialMasking : 1; // 0xb0
	char bDBuffer : 1; // 0xb0
	EClearSceneOptions ClearSceneMethod; // 0xb4
	char bBasePassOutputsVelocity : 1; // 0xb8
	char bVertexDeformationOutputsVelocity : 1; // 0xb8
	char bSelectiveBasePassOutputs : 1; // 0xb8
	char bDefaultParticleCutouts : 1; // 0xb8
	int32_t GPUSimulationTextureSizeX; // 0xbc
	int32_t GPUSimulationTextureSizeY; // 0xc0
	char bGlobalClipPlane : 1; // 0xc4
	EGBufferFormat GBufferFormat; // 0xc8
	char bUseGPUMorphTargets : 1; // 0xcc
	char bNvidiaAftermathEnabled : 1; // 0xcc
	char bMultiView : 1; // 0xcc
	char bMobilePostProcessing : 1; // 0xcc
	char bMobileMultiView : 1; // 0xcc
	char bMobileUseHWsRGBEncoding : 1; // 0xcc
	char bRoundRobinOcclusion : 1; // 0xcc
	char bODSCapture : 1; // 0xcc
	char bMeshStreaming : 1; // 0xcd
	float WireframeCullThreshold; // 0xd0
	char bEnableRayTracing : 1; // 0xd4
	char bEnableRayTracingTextureLOD : 1; // 0xd4
	char bSupportStationarySkylight : 1; // 0xd4
	char bSupportLowQualityLightmaps : 1; // 0xd4
	char bSupportPointLightWholeSceneShadows : 1; // 0xd4
	char bSupportAtmosphericFog : 1; // 0xd4
	char bSupportSkyAtmosphere : 1; // 0xd4
	char bSupportSkyAtmosphereAffectsHeightFog : 1; // 0xd4
	char bSupportSkinCacheShaders : 1; // 0xd5
	ESkinCacheDefaultBehavior DefaultSkinCacheBehavior; // 0xd8
	float SkinCacheSceneMemoryLimitInMB; // 0xdc
	char bMobileEnableStaticAndCSMShadowReceivers : 1; // 0xe0
	char bMobileEnableMovableLightCSMShaderCulling : 1; // 0xe0
	char bMobileAllowDistanceFieldShadows : 1; // 0xe0
	char bMobileAllowMovableDirectionalLights : 1; // 0xe0
	uint32_t MobileNumDynamicPointLights; // 0xe4
	char bMobileDynamicPointLightsUseStaticBranch : 1; // 0xe8
	char bMobileAllowMovableSpotlights : 1; // 0xe8
	char bMobileAllowMovableSpotlightShadows : 1; // 0xe8
	char bSupport16BitBoneIndex : 1; // 0xe8
	char bGPUSkinLimit2BoneInfluences : 1; // 0xe8
	char bSupportDepthOnlyIndexBuffers : 1; // 0xe8
	char bSupportReversedIndexBuffers : 1; // 0xe8
	char bLPV : 1; // 0xe8
	char bMobileAmbientOcclusion : 1; // 0xe9
	char bUseUnlimitedBoneInfluences : 1; // 0xe9
	int32_t UnlimitedBonInfluencesThreshold; // 0xec
	EMobilePlanarReflectionMode MobilePlanarReflectionMode; // 0xf0
	FPerPlatformBool bStreamSkeletalMeshLODs; // 0xf1
	FPerPlatformBool bDiscardSkeletalMeshOptionalLODs; // 0xf2
	FSoftObjectPath VisualizeCalibrationColorMaterialPath; // 0xf8
	FSoftObjectPath VisualizeCalibrationCustomMaterialPath; // 0x110
	FSoftObjectPath VisualizeCalibrationGrayscaleMaterialPath; // 0x128
};

struct UFindTurnBasedMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct USourceEffectFilterPreset : USoundEffectSourcePreset {
	FSourceEffectFilterSettings Settings; // 0xb0
};

struct UAREnvironmentProbeComponent : UARComponent {
	FAREnvironmentProbeUpdatePayload ReplicatedPayload; // 0x280
};

struct UAnimInstance : UObject {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bReceiveNotifiesFromLinkedInstances : 1; // 0x31
	char bPropagateNotifiesToLinkedInstances : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FMulticastInlineDelegate OnMontageBlendingOut; // 0x38
	FMulticastInlineDelegate OnMontageStarted; // 0x48
	FMulticastInlineDelegate OnMontageEnded; // 0x58
	FMulticastInlineDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct UFoliageType_Actor : UFoliageType {
	AActor* ActorClass; // 0x3a8
	bool bShouldAttachToBaseComponent; // 0x3b0
};

struct UWorld : UObject {
	ULevel* PersistentLevel; // 0x30
	UNetDriver* NetDriver; // 0x38
	ULineBatchComponent* LineBatcher; // 0x40
	ULineBatchComponent* PersistentLineBatcher; // 0x48
	ULineBatchComponent* ForegroundLineBatcher; // 0x50
	AGameNetworkManager* NetworkManager; // 0x58
	UPhysicsCollisionHandler* PhysicsCollisionHandler; // 0x60
	TArray<UObject*> ExtraReferencedObjects; // 0x68
	TArray<UObject*> PerModuleDataObjects; // 0x78
	TArray<ULevelStreaming*> StreamingLevels; // 0x88
	FStreamingLevelsToConsider StreamingLevelsToConsider; // 0x98
	FString StreamingLevelsPrefix; // 0xc0
	ULevel* CurrentLevelPendingVisibility; // 0xd0
	ULevel* CurrentLevelPendingInvisibility; // 0xd8
	UDemoNetDriver* DemoNetDriver; // 0xe0
	AParticleEventManager* MyParticleEventManager; // 0xe8
	APhysicsVolume* DefaultPhysicsVolume; // 0xf0
	char bAreConstraintsDirty : 1; // 0x10e
	UNavigationSystemBase* NavigationSystem; // 0x110
	AGameModeBase* AuthorityGameMode; // 0x118
	AGameStateBase* GameState; // 0x120
	UAISystemBase* AISystem; // 0x128
	UAvoidanceManager* AvoidanceManager; // 0x130
	TArray<ULevel*> Levels; // 0x138
	TArray<FLevelCollection> LevelCollections; // 0x148
	UGameInstance* OwningGameInstance; // 0x180
	TArray<UMaterialParameterCollectionInstance*> ParameterCollectionInstances; // 0x188
	UCanvas* CanvasForRenderingToTarget; // 0x198
	UCanvas* CanvasForDrawMaterialToRenderTarget; // 0x1a0
	TSet<UActorComponent*> ComponentsThatNeedPreEndOfFrameSync; // 0x1f8
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate; // 0x248
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x258
	UWorldComposition* WorldComposition; // 0x5d8
	FWorldPSCPool PSCPool; // 0x668
};

struct ULuminARSessionConfig : UARSessionConfig {
	FMagicLeapPlanesQuery PlanesQuery; // 0x110
	int32_t MaxPlaneQueryResults; // 0x170
	int32_t MinPlaneArea; // 0x174
	bool bArbitraryOrientationPlaneDetection; // 0x178
	FVector PlaneSearchExtents; // 0x17c
	TArray<EMagicLeapPlaneQueryFlags> PlaneQueryFlags; // 0x188
	bool bDiscardZeroExtentPlanes; // 0x198
	bool bDefaultUseUnreliablePose; // 0x199
};

struct UParticleModuleMeshRotationRate_Seeded : UParticleModuleMeshRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct UInterpTrackColorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0x90
};

struct UDynamicEntryBoxBase : UWidget {
	EDynamicBoxType EntryBoxType; // 0x108
	FVector2D EntrySpacing; // 0x10c
	TArray<FVector2D> SpacingPattern; // 0x118
	FSlateChildSize EntrySizeRule; // 0x128
	EHorizontalAlignment EntryHorizontalAlignment; // 0x130
	EVerticalAlignment EntryVerticalAlignment; // 0x131
	int32_t MaxElementSize; // 0x134
	FRadialBoxSettings RadialBoxSettings; // 0x138
	FUserWidgetPool EntryWidgetPool; // 0x158
};

struct ASceneCaptureCube : ASceneCapture {
	USceneCaptureComponentCube* CaptureComponentCube; // 0x230
};

struct ULandscapeWeightmapUsage : UObject {
	ULandscapeComponent* ChannelUsage[0x4]; // 0x28
	FGuid LayerGuid; // 0x48
};

struct UKillerMaxWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UEOSCoreAuthLogout : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UBTTask_MoveTo : UBTTask_BlackboardBase {
	float AcceptableRadius; // 0x98
	UNavigationQueryFilter* FilterClass; // 0xa0
	float ObservedBlackboardValueTolerance; // 0xa8
	char bObserveBlackboardValue : 1; // 0xac
	char bAllowStrafe : 1; // 0xac
	char bAllowPartialPath : 1; // 0xac
	char bTrackMovingGoal : 1; // 0xac
	char bProjectGoalLocation : 1; // 0xac
	char bReachTestIncludesAgentRadius : 1; // 0xac
	char bReachTestIncludesGoalRadius : 1; // 0xac
	char bStopOnOverlap : 1; // 0xac
	char bStopOnOverlapNeedsUpdate : 1; // 0xad
};

struct UWBP_IntroUI_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Image_67; // 0x268
	UW_Banner_C* W_Banner_Surv1; // 0x270
	UW_Banner_C* W_Banner_Surv2; // 0x278
	UW_Banner_C* W_Banner_Surv3; // 0x280
	UW_Banner_C* W_Banner_Surv4; // 0x288
	TMap<FName, UW_Banner_C*> SlotsMap; // 0x290
};

struct UFroggie_C : UPerkSurv_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
};

struct USlider : UWidget {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	float MinValue; // 0x11c
	float MaxValue; // 0x120
	FSliderStyle WidgetStyle; // 0x128
	EOrientation Orientation; // 0x468
	FLinearColor SliderBarColor; // 0x46c
	FLinearColor SliderHandleColor; // 0x47c
	bool IndentHandle; // 0x48c
	bool Locked; // 0x48d
	bool MouseUsesStep; // 0x48e
	bool RequiresControllerLock; // 0x48f
	float StepSize; // 0x490
	bool IsFocusable; // 0x494
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x498
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x4a8
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x4b8
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x4c8
	FMulticastInlineDelegate OnValueChanged; // 0x4d8
};

struct APhysicsCharacter : ACharacter {
	USceneComponent* realComponentToSync; // 0x4c8
	UPrimitiveComponent* PrimitiveComponent; // 0x4d0
};

struct ABP_LootBoxOriginal_C : ABP_LootBox_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x460
};

struct UMaterialExpressionConstantBiasScale : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Bias; // 0x54
	float Scale; // 0x58
};

struct UCollisionProfile : UDeveloperSettings {
	TArray<FCollisionResponseTemplate> Profiles; // 0x38
	TArray<FCustomChannelSetup> DefaultChannelResponses; // 0x48
	TArray<FCustomProfile> EditProfiles; // 0x58
	TArray<FRedirector> ProfileRedirects; // 0x68
	TArray<FRedirector> CollisionChannelRedirects; // 0x78
};

struct UUserInterfaceSettings : UDeveloperSettings {
	ERenderFocusRule RenderFocusRule; // 0x38
	TMap<EMouseCursor, FHardwareCursorReference> HardwareCursors; // 0x40
	TMap<EMouseCursor, FSoftClassPath> SoftwareCursors; // 0x90
	FSoftClassPath DefaultCursor; // 0xe0
	FSoftClassPath TextEditBeamCursor; // 0xf8
	FSoftClassPath CrosshairsCursor; // 0x110
	FSoftClassPath HandCursor; // 0x128
	FSoftClassPath GrabHandCursor; // 0x140
	FSoftClassPath GrabHandClosedCursor; // 0x158
	FSoftClassPath SlashedCircleCursor; // 0x170
	float ApplicationScale; // 0x188
	EUIScalingRule UIScaleRule; // 0x18c
	FSoftClassPath CustomScalingRuleClass; // 0x190
	FRuntimeFloatCurve UIScaleCurve; // 0x1a8
	bool bAllowHighDPIInGameMode; // 0x230
	FIntPoint DesignScreenSize; // 0x234
	bool bLoadWidgetsOnDedicatedServer; // 0x23c
	TArray<UObject*> CursorClasses; // 0x240
	UObject* CustomScalingRuleClassInstance; // 0x250
	UDPICustomScalingRule* CustomScalingRule; // 0x258
};

struct UEnvQuery : UDataAsset {
	FName QueryName; // 0x30
	TArray<UEnvQueryOption*> Options; // 0x38
};

struct UMagicLeapHeadTrackingNotificationsComponent : UVRNotificationsComponent {
	FMulticastInlineDelegate OnHeadTrackingLost; // 0x140
	FMulticastInlineDelegate OnHeadTrackingRecovered; // 0x150
	FMulticastInlineDelegate OnHeadTrackingRecoveryFailed; // 0x160
	FMulticastInlineDelegate OnHeadTrackingNewSessionStarted; // 0x170
};

struct UHoudini_C : UPerkSurv_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
};

struct USignificanceManager : UObject {
	FSoftClassPath SignificanceManagerClassName; // 0x108
};

struct AGeometryCollectionRenderLevelSetActor : AActor {
	UVolumeTexture* TargetVolumeTexture; // 0x220
	UMaterial* RayMarchMaterial; // 0x228
	float SurfaceTolerance; // 0x230
	float Isovalue; // 0x234
	bool Enabled; // 0x238
	bool RenderVolumeBoundingBox; // 0x239
};

struct URabbitKillerWalkGrabbedShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UMovieSceneGeometryCacheSection : UMovieSceneSection {
	FMovieSceneGeometryCacheParams Params; // 0xe8
};

struct UAnimSet : UObject {
	char bAnimRotationOnly : 1; // 0x28
	TArray<FName> TrackBoneNames; // 0x30
	TArray<FAnimSetMeshLinkup> LinkupCache; // 0x40
	TArray<char> BoneUseAnimTranslation; // 0x50
	TArray<char> ForceUseMeshTranslation; // 0x60
	TArray<FName> UseTranslationBoneNames; // 0x70
	TArray<FName> ForceMeshTranslationBoneNames; // 0x80
	FName PreviewSkelMeshName; // 0x90
	FName BestRatioSkelMeshName; // 0x98
};

struct UBTDecorator_Cooldown : UBTDecorator {
	float CoolDownTime; // 0x68
};

struct USkeletalBodySetup : UBodySetup {
	bool bSkipScaleFromAnimation; // 0x2a0
	TArray<FPhysicalAnimationProfile> PhysicalAnimationData; // 0x2a8
};

struct UMaterialExpressionSetMaterialAttributes : UMaterialExpression {
	TArray<FExpressionInput> Inputs; // 0x40
	TArray<FGuid> AttributeSetTypes; // 0x50
};

struct UBTTask_PushPawnAction : UBTTask_PawnActionBase {
	UPawnAction* Action; // 0x70
};

struct UMagicLeapPlanesComponent : USceneComponent {
	TArray<EMagicLeapPlaneQueryFlags> QueryFlags; // 0x1f8
	UBoxComponent* SearchVolume; // 0x208
	int32_t MaxResults; // 0x210
	float MinHolePerimeter; // 0x214
	float MinPlaneArea; // 0x218
	EMagicLeapPlaneQueryType QueryType; // 0x21c
	float SimilarityThreshold; // 0x220
	FMulticastInlineDelegate OnPlanesQueryResult; // 0x228
	FMulticastInlineDelegate OnPersistentPlanesQueryResult; // 0x238
};

struct UEOSCoreAuthDeletePersistentAuth : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UAnimSequenceLevelSequenceLink : UAssetUserData {
	FGuid SkelTrackGuid; // 0x28
	FSoftObjectPath PathToLevelSequence; // 0x38
};

struct UMaterialExpressionShadingPathSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x3]; // 0x54
};

struct UAsyncActionHandleSaveGame : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate Completed; // 0x30
	USaveGame* SaveGameObject; // 0x60
};

struct UClothConfigNv : UClothConfigCommon {
	EClothingWindMethodNv ClothingWindMethod; // 0x28
	FClothConstraintSetupNv VerticalConstraint; // 0x2c
	FClothConstraintSetupNv HorizontalConstraint; // 0x3c
	FClothConstraintSetupNv BendConstraint; // 0x4c
	FClothConstraintSetupNv ShearConstraint; // 0x5c
	float SelfCollisionRadius; // 0x6c
	float SelfCollisionStiffness; // 0x70
	float SelfCollisionCullScale; // 0x74
	FVector Damping; // 0x78
	float Friction; // 0x84
	float WindDragCoefficient; // 0x88
	float WindLiftCoefficient; // 0x8c
	FVector LinearDrag; // 0x90
	FVector AngularDrag; // 0x9c
	FVector LinearInertiaScale; // 0xa8
	FVector AngularInertiaScale; // 0xb4
	FVector CentrifugalInertiaScale; // 0xc0
	float SolverFrequency; // 0xcc
	float StiffnessFrequency; // 0xd0
	float GravityScale; // 0xd4
	FVector GravityOverride; // 0xd8
	bool bUseGravityOverride; // 0xe4
	float TetherStiffness; // 0xe8
	float TetherLimit; // 0xec
	float CollisionThickness; // 0xf0
	float AnimDriveSpringStiffness; // 0xf4
	float AnimDriveDamperStiffness; // 0xf8
	EClothingWindMethod_Legacy WindMethod; // 0xfc
	FClothConstraintSetup_Legacy VerticalConstraintConfig; // 0x100
	FClothConstraintSetup_Legacy HorizontalConstraintConfig; // 0x110
	FClothConstraintSetup_Legacy BendConstraintConfig; // 0x120
	FClothConstraintSetup_Legacy ShearConstraintConfig; // 0x130
};

struct UBTTask_SetTagCooldown : UBTTaskNode {
	FGameplayTag CooldownTag; // 0x70
	bool bAddToExistingDuration; // 0x78
	float CooldownDuration; // 0x7c
};

struct ULeader_C : UPerkSurv_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xf8
};

struct UWBP_SecretCode_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Show_Anim; // 0x268
	UButton* Button_Ok; // 0x270
	UImage* Image_Hovered_Buy; // 0x278
	UImage* Image_Normal_Buy; // 0x280
	UImage* Image_start; // 0x288
	UOverlay* Overlay_BuyButton; // 0x290
};

struct USourceEffectRingModulationPreset : USoundEffectSourcePreset {
	FSourceEffectRingModulationSettings Settings; // 0xb0
};

struct UGizmoComponentHitTarget : UObject {
	UPrimitiveComponent* Component; // 0x30
};

struct UTexture : UStreamableRenderAsset {
	FGuid LightingGuid; // 0x68
	int32_t LODBias; // 0x78
	TextureCompressionSettings CompressionSettings; // 0x7c
	TextureFilter Filter; // 0x7d
	ETextureMipLoadOptions MipLoadOptions; // 0x7e
	TextureGroup LODGroup; // 0x7f
	FPerPlatformFloat Downscale; // 0x80
	ETextureDownscaleOptions DownscaleOptions; // 0x84
	char SRGB : 1; // 0x85
	char bNoTiling : 1; // 0x85
	char VirtualTextureStreaming : 1; // 0x85
	char CompressionYCoCg : 1; // 0x85
	char bNotOfflineProcessed : 1; // 0x85
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x85
	TArray<UAssetUserData*> AssetUserData; // 0x88
};

struct UScaleBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct ANewAlarmBP_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UFMODAudioComponent* ClockToolRepair; // 0x228
	UStaticMeshComponent* Noga5; // 0x230
	UStaticMeshComponent* Noga4; // 0x238
	UStaticMeshComponent* Noga3; // 0x240
	UStaticMeshComponent* Noga2; // 0x248
	UStaticMeshComponent* Noga1; // 0x250
	UStaticMeshComponent* Noga; // 0x258
	UStaticMeshComponent* Rot; // 0x260
	UStaticMeshComponent* glaz1; // 0x268
	UStaticMeshComponent* glaz; // 0x270
	UStaticMeshComponent* Juk; // 0x278
	USphereComponent* Sphere; // 0x280
	UParticleSystemComponent* P_AlarmFull; // 0x288
	UParticleSystemComponent* P_AlarmCurse; // 0x290
	UParticleSystemComponent* P_AlarmBreak1; // 0x298
	UCapsuleComponent* Capsule; // 0x2a0
	UParticleSystemComponent* P_AlarmSmoke; // 0x2a8
	UParticleSystemComponent* P_AlarmProgress; // 0x2b0
	UPointLightComponent* NightmareLight1; // 0x2b8
	UFMODAudioComponent* FMODAudioHelperThird; // 0x2c0
	UFMODAudioComponent* FMODAudioHelperSecond; // 0x2c8
	USceneComponent* CoinSpwner; // 0x2d0
	UFMODAudioComponent* CurseAudio; // 0x2d8
	UFMODAudioComponent* FMODAlarmProgress; // 0x2e0
	UPointLightComponent* CurseLight; // 0x2e8
	UParticleSystemComponent* LightBeamParticle; // 0x2f0
	UBoxComponent* Box1; // 0x2f8
	UWidgetComponent* Widget; // 0x300
	USceneComponent* WidgetContainer; // 0x308
	USkeletalMeshComponent* Alarm_rig; // 0x310
	UFMODAudioComponent* FMODFailed; // 0x318
	UBoxComponent* Box; // 0x320
	UFMODAudioComponent* FMODAlarmNoise; // 0x328
	UFMODAudioComponent* FMODReloadingAlarm; // 0x330
	UFMODAudioComponent* FmodAudio; // 0x338
	UPointLightComponent* PointLight; // 0x340
	USceneComponent* DefaultSceneRoot; // 0x348
	float Timeline_6_NewTrack_0_79FBDF634800A6E1C50B3B9FE43A640C; // 0x350
	ETimelineDirection Timeline_6__Direction_79FBDF634800A6E1C50B3B9FE43A640C; // 0x354
	UTimelineComponent* Timeline_7; // 0x358
	float Propmachine_LightEmi_80EE49C34236407460455F9F899A3043; // 0x360
	ETimelineDirection Propmachine__Direction_80EE49C34236407460455F9F899A3043; // 0x364
	UTimelineComponent* propmachine; // 0x368
	float Timeline_5_Lerp_539EB76C41BFEB191228CDB1D68DA17A; // 0x370
	ETimelineDirection Timeline_5__Direction_539EB76C41BFEB191228CDB1D68DA17A; // 0x374
	UTimelineComponent* Timeline_6; // 0x378
	float Timeline_4_NewTrack_0_E893B9C746576B6E9153299EE00955BA; // 0x380
	ETimelineDirection Timeline_4__Direction_E893B9C746576B6E9153299EE00955BA; // 0x384
	UTimelineComponent* Timeline_5; // 0x388
	float CrackEmissionTimeline_NewTrack_0_88EF93874DE27168A83ACA991C96E2F1; // 0x390
	ETimelineDirection CrackEmissionTimeline__Direction_88EF93874DE27168A83ACA991C96E2F1; // 0x394
	UTimelineComponent* CrackEmissionTimeline; // 0x398
	float Timeline_3_NewTrack_0_90A7A9AF4446AF853B71AAA3059C147E; // 0x3a0
	ETimelineDirection Timeline_3__Direction_90A7A9AF4446AF853B71AAA3059C147E; // 0x3a4
	UTimelineComponent* Timeline_4; // 0x3a8
	float Timeline_2_NewTrack_0_7F02F97E42A66FFE1FB8739FCE7826B5; // 0x3b0
	ETimelineDirection Timeline_2__Direction_7F02F97E42A66FFE1FB8739FCE7826B5; // 0x3b4
	UTimelineComponent* Timeline_3; // 0x3b8
	float Timeline_1_NewTrack_0_EF3489634043E5245C774D8350860F8E; // 0x3c0
	ETimelineDirection Timeline_1__Direction_EF3489634043E5245C774D8350860F8E; // 0x3c4
	UTimelineComponent* Timeline_2; // 0x3c8
	float Timeline_0_NewTrack_0_6392CBD2429CCE588C622091FADED503; // 0x3d0
	ETimelineDirection Timeline_0__Direction_6392CBD2429CCE588C622091FADED503; // 0x3d4
	UTimelineComponent* Timeline_1; // 0x3d8
	float AlphaLerp_Alpha_81F2A34B4B26167A49B34BAD07BCC0A7; // 0x3e0
	ETimelineDirection AlphaLerp__Direction_81F2A34B4B26167A49B34BAD07BCC0A7; // 0x3e4
	UTimelineComponent* AlphaLerp; // 0x3e8
	float ReloadingTime; // 0x3f0
	float ReloadingTimeRem; // 0x3f4
	bool ReloadingStarts?; // 0x3f8
	TArray<AActor*> actorsArray; // 0x400
	bool Finished?; // 0x410
	bool BlockAlarm?; // 0x411
	TArray<AKillerMasterBP_C*> KillersRef; // 0x418
	AActor* ActorSurvRef; // 0x428
	ASurvivorMasterBP_C* SurfRef; // 0x430
	bool SkillCheck?; // 0x438
	float OldProgress; // 0x43c
	float Alpha; // 0x440
	float BoostModeValue; // 0x444
	bool SurvCountsChange?; // 0x448
	int32_t BoostedSurvs; // 0x44c
	bool FailedBlock?; // 0x450
	FVector2D SizeWidget; // 0x454
	bool FailedAnimStart?; // 0x45c
	bool UseParticle?; // 0x45d
	bool Cursed; // 0x45e
	float RushBoost; // 0x460
	TArray<FVector> SpwnCoinsV3; // 0x468
	TArray<FVector> SpwnCoinsV3SkillCheck; // 0x478
	int32_t CountCoins; // 0x488
	int32_t I; // 0x48c
	FVector v3Coins; // 0x490
	TArray<float> r3; // 0x4a0
	ASurvivorMasterBP_C* SREF; // 0x4b0
	bool IsPaused; // 0x4b8
	float OldReloadingTime; // 0x4bc
	bool IsPlayer; // 0x4c0
	bool BrokenTime; // 0x4c1
	float Delta Seconds; // 0x4c4
	float Reloading Time; // 0x4c8
	float Reloading Time_1; // 0x4cc
	bool BrokenB; // 0x4d0
	bool Bait; // 0x4d1
	bool BTimeIsTick; // 0x4d2
	FLinearColor CurseLightCol; // 0x4d4
	bool CurseVisible; // 0x4e4
	int32_t Tinkers; // 0x4e8
	TArray<AKillerMasterBP_C*> Killers; // 0x4f0
	bool SoundOff?; // 0x500
	UMaterialInstanceDynamic* LightBeamDynMat; // 0x508
	int32_t CreakInt; // 0x510
	UMaterialInstanceDynamic* AlarmMaterial; // 0x518
	int32_t MaterialLevel; // 0x520
	bool Crack?; // 0x524
	int32_t OldCreak; // 0x528
	UMaterialInstanceDynamic* PropmachineMaterial; // 0x530
	bool TutorialBlock?; // 0x538
	bool KillerTutorial?; // 0x539
	bool SurvTutorial?; // 0x53a
	int32_t PropmachineKillerPerk?; // 0x53c
	int32_t TempInt; // 0x540
	bool Test?; // 0x544
	int32_t Stage; // 0x548
	bool BrakerAlarmer; // 0x54c
	float BrakerDuration; // 0x550
};

struct UMaterialExpression : UObject {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UImage : UWidget {
	FSlateBrush Brush; // 0x108
	FDelegate BrushDelegate; // 0x190
	FLinearColor ColorAndOpacity; // 0x1a0
	FDelegate ColorAndOpacityDelegate; // 0x1b0
	bool bFlipForRightToLeftFlowDirection; // 0x1c0
	FDelegate OnMouseButtonDownEvent; // 0x1c4
};

struct UTestMovieSceneTrack : UMovieSceneTrack {
	bool bHighPassFilter; // 0x80
	TArray<UMovieSceneSection*> SectionArray; // 0x88
};

struct UMaterialExpressionSaturate : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UInputComponent : UActorComponent {
	TArray<FCachedKeyToActionInfo> CachedKeyToActionInfo; // 0x120
};

struct UMaterialExpressionStaticSwitch : UMaterialExpression {
	char DefaultValue : 1; // 0x40
	FExpressionInput A; // 0x44
	FExpressionInput B; // 0x58
	FExpressionInput Value; // 0x6c
};

struct UMovieSceneCameraShakeSourceTriggerTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct UDestructibleComponent : USkinnedMeshComponent {
	char bFractureEffectOverride : 1; // 0x690
	TArray<FFractureEffect> FractureEffects; // 0x698
	bool bEnableHardSleeping; // 0x6a8
	float LargeChunkThreshold; // 0x6ac
	FMulticastInlineDelegate OnComponentFracture; // 0x6c0
};

struct UInterpTrackInstEvent : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UARTrackedGeometry : UObject {
	FGuid UniqueId; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int32_t LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct UUniformScalar : UFieldNodeFloat {
	float Magnitude; // 0xb0
};

struct UStereoLayerComponent : USceneComponent {
	char bLiveTexture : 1; // 0x1f8
	char bSupportsDepth : 1; // 0x1f8
	char bNoAlphaChannel : 1; // 0x1f8
	UTexture* Texture; // 0x200
	UTexture* LeftTexture; // 0x208
	char bQuadPreserveTextureRatio : 1; // 0x210
	FVector2D QuadSize; // 0x214
	FBox2D UVRect; // 0x21c
	float CylinderRadius; // 0x230
	float CylinderOverlayArc; // 0x234
	int32_t CylinderHeight; // 0x238
	FEquirectProps EquirectProps; // 0x23c
	EStereoLayerType StereoLayerType; // 0x284
	EStereoLayerShape StereoLayerShape; // 0x285
	UStereoLayerShape* Shape; // 0x288
	int32_t Priority; // 0x290
};

struct UProjectileMovementComponent : UMovementComponent {
	float InitialSpeed; // 0xf0
	float MaxSpeed; // 0xf4
	char bRotationFollowsVelocity : 1; // 0xf8
	char bRotationRemainsVertical : 1; // 0xf8
	char bShouldBounce : 1; // 0xf8
	char bInitialVelocityInLocalSpace : 1; // 0xf8
	char bForceSubStepping : 1; // 0xf8
	char bSimulationEnabled : 1; // 0xf8
	char bSweepCollision : 1; // 0xf8
	char bIsHomingProjectile : 1; // 0xf8
	char bBounceAngleAffectsFriction : 1; // 0xf9
	char bIsSliding : 1; // 0xf9
	char bInterpMovement : 1; // 0xf9
	char bInterpRotation : 1; // 0xf9
	float PreviousHitTime; // 0xfc
	FVector PreviousHitNormal; // 0x100
	float ProjectileGravityScale; // 0x10c
	float Buoyancy; // 0x110
	float Bounciness; // 0x114
	float Friction; // 0x118
	float BounceVelocityStopSimulatingThreshold; // 0x11c
	float MinFrictionFraction; // 0x120
	FMulticastInlineDelegate OnProjectileBounce; // 0x128
	FMulticastInlineDelegate OnProjectileStop; // 0x138
	float HomingAccelerationMagnitude; // 0x148
	TWeakObjectPtr<USceneComponent> HomingTargetComponent; // 0x14c
	float MaxSimulationTimeStep; // 0x154
	int32_t MaxSimulationIterations; // 0x158
	int32_t BounceAdditionalIterations; // 0x15c
	float InterpLocationTime; // 0x160
	float InterpRotationTime; // 0x164
	float InterpLocationMaxLagDistance; // 0x168
	float InterpLocationSnapToTargetDistance; // 0x16c
};

struct ULevelSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x68
	FLevelSequenceObjectReferenceMap ObjectReferences; // 0x70
	FLevelSequenceBindingReferences BindingReferences; // 0xc0
	TMap<FString, FLevelSequenceObject> PossessedObjects; // 0x160
	UObject* DirectorClass; // 0x1b0
	TArray<UAssetUserData*> AssetUserData; // 0x1b8
};

struct USurvivalProgressBarWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* MovePB_Anim; // 0x268
	UWidgetAnimation* AlarmCharge; // 0x270
	UWidgetAnimation* GrappleAnim; // 0x278
	UImage* Background; // 0x280
	UImage* BGCircle; // 0x288
	UImage* ButtonA; // 0x290
	UImage* ButtonA_2; // 0x298
	UImage* ButtonA_3; // 0x2a0
	UImage* ButtonA_4; // 0x2a8
	UImage* ButtonD; // 0x2b0
	UImage* ButtonD_2; // 0x2b8
	UImage* ButtonD_5; // 0x2c0
	UImage* ButtonD_6; // 0x2c8
	UImage* ButtonD_7; // 0x2d0
	UImage* ButtonD_8; // 0x2d8
	UWidgetSwitcher* ButtonsSwitcher; // 0x2e0
	UWidgetSwitcher* ButtonsSwitcher_2; // 0x2e8
	UOverlay* CircleOverlay; // 0x2f0
	UImage* CrossHair; // 0x2f8
	UTextBlock* GetOutText; // 0x300
	UHorizontalBox* HorizontalBox_Status; // 0x308
	UImage* Image; // 0x310
	UImage* Image_Alarm; // 0x318
	UImage* Image_Settings; // 0x320
	UImage* Image_Settings_2; // 0x328
	UImage* Image_Settings_3; // 0x330
	UImage* Image_Settings_4; // 0x338
	UImage* Image_Wiggle; // 0x340
	UImage* Image_Wiggle_2; // 0x348
	UImage* Image_Wiggle_3; // 0x350
	UOverlay* Main; // 0x358
	UOverlay* Main_1-OLDSAVE; // 0x360
	UImage* MainCircle; // 0x368
	UVerticalBox* MainProgressBar; // 0x370
	UVerticalBox* MainProgressBar_2; // 0x378
	UOverlay* Overlay_2; // 0x380
	UOverlay* OverlayA_4; // 0x388
	UOverlay* OverlayA_5; // 0x390
	UOverlay* OverlayA_6; // 0x398
	UOverlay* OverlayA_BIG; // 0x3a0
	UOverlay* OverlayA_Small; // 0x3a8
	UOverlay* OverlayD; // 0x3b0
	UOverlay* OverlayD_4; // 0x3b8
	UOverlay* OverlayD_5; // 0x3c0
	UOverlay* OverlayD_6; // 0x3c8
	UOverlay* OverlayD_BIG; // 0x3d0
	UOverlay* OverlayD_Small; // 0x3d8
	UProgressBar* Progress; // 0x3e0
	UProgressBar* Progress_2; // 0x3e8
	UProgressBar* Progress_3; // 0x3f0
	UProgressBar* Progress_BG; // 0x3f8
	UProgressBar* Progress_BG_2; // 0x400
	UProgressBar* Progress_Fake; // 0x408
	UProgressBar* Progress_Fake_2; // 0x410
	UProgressBar* Progress_Red_Green; // 0x418
	UProgressBar* Progress_Red_Green_2; // 0x420
	UScaleBox* ScaleBox_Energy; // 0x428
	UScaleBox* ScaleBox_HelperAlarmX; // 0x430
	UScaleBox* ScaleBox_KeyDoor; // 0x438
	UScaleBox* ScaleBox_Speed; // 0x440
	USizeBox* SizeBox_3; // 0x448
	USizeBox* SizeBox_Charger; // 0x450
	UTextBlock* TextBlock_BigA; // 0x458
	UTextBlock* TextBlock_BigD; // 0x460
	UTextBlock* TextBlock_SmallA; // 0x468
	UTextBlock* TextBlock_SmallD; // 0x470
	UTextBlock* TextBlock_StatusSpeedX; // 0x478
	UTextBlock* TextBlock_StatusSpeedX_2; // 0x480
	UWidgetSwitcher* TextSwitcher; // 0x488
	UWidgetSwitcher* TextSwitcher_2; // 0x490
	UW_Banner_C* W_Banner; // 0x498
	UW_SurvonChair_Banned_C* W_SurvonChair_Banned; // 0x4a0
	UWBP_HitMark_C* WBP_HitMark; // 0x4a8
	UWBP_KeyIcon_C* WBP_KeyIcon; // 0x4b0
	bool Grapple?; // 0x4b8
	bool GrappleButton?; // 0x4b9
	bool PressA?; // 0x4ba
	bool PressD?; // 0x4bb
	float BreakFreeProgress; // 0x4bc
	float BreakFreeFullProgress; // 0x4c0
	ASurvivorMasterBP_C* Player; // 0x4c8
	SurvStateEnum PrevSurvState; // 0x4d0
	FSlateBrush Normal; // 0x4d8
	FSlateBrush Bleeding; // 0x560
	FString GetOutS; // 0x5e8
	FSlateBrush Invisible; // 0x5f8
	FLinearColor CurrentColor; // 0x680
	float Scale; // 0x690
	float CurrentScale; // 0x694
	bool SpectatorMode?; // 0x698
	int32_t CountSurvAlarm; // 0x69c
	bool ReloadingAlarm?; // 0x6a0
	float NewVar_1; // 0x6a4
	float Alpha; // 0x6a8
	FTimerHandle AlarmTickTimer; // 0x6b0
	bool IsAlarmAnimPlaying; // 0x6b8
	float AlarmTickTime; // 0x6bc
	bool DoorOpeningNow?; // 0x6c0
	bool Pressed?; // 0x6c1
};

struct UChaosPhysicalMaterial : UObject {
	float Friction; // 0x28
	float StaticFriction; // 0x2c
	float Restitution; // 0x30
	float LinearEtherDrag; // 0x34
	float AngularEtherDrag; // 0x38
	float SleepingLinearVelocityThreshold; // 0x3c
	float SleepingAngularVelocityThreshold; // 0x40
};

struct UMovieSceneIntegerSection : UMovieSceneSection {
	FMovieSceneIntegerChannel IntegerCurve; // 0xe8
};

struct UEndGameSurvAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x348
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x3c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x448
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x4c8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_11; // 0x548
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_10; // 0x5f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_9; // 0x6a8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_8; // 0x758
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x808
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x888
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_7; // 0x908
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_6; // 0x9b8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0xa68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0xae8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0xb68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0xbe8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0xc68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0xce8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0xd68
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0xde8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_5; // 0xe68
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_4; // 0xf18
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_3; // 0xfc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x1078
	FAnimNode_Root AnimGraphNode_Root; // 0x10f8
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum_2; // 0x1128
	FAnimNode_BlendListByEnum AnimGraphNode_BlendListByEnum; // 0x11d8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x1288
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x1308
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x1388
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x1408
	EndGameStatus Status; // 0x1488
	SurvChars Surv Char; // 0x1489
	VictoryPoseEnum VictoryPose; // 0x148a
	DefeatPoseEnum DefeatPose; // 0x148b
	int32_t TempRandom; // 0x148c
};

struct UTireType : UDataAsset {
	float FrictionScale; // 0x30
};

struct UMagicLeapImageTrackerComponent : USceneComponent {
	UTexture2D* TargetImageTexture; // 0x1f8
	FString Name; // 0x200
	float LongerDimension; // 0x210
	bool bIsStationary; // 0x214
	bool bUseUnreliablePose; // 0x215
	EMagicLeapImageTargetOrientation AxisOrientation; // 0x216
	FMulticastInlineDelegate OnSetImageTargetSucceeded; // 0x218
	FMulticastInlineDelegate OnSetImageTargetFailed; // 0x228
	FMulticastInlineDelegate OnImageTargetFound; // 0x238
	FMulticastInlineDelegate OnImageTargetLost; // 0x248
	FMulticastInlineDelegate OnImageTargetUnreliableTracking; // 0x258
};

struct UVampireLobbyAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x2f8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x320
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x3a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x3d0
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x450
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x480
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x530
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x5d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x5f8
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x678
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x6a8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x728
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x758
	bool Reset?; // 0x808
};

struct ADuplicatePropActor_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UFMODAudioComponent* FMODPropHitAudio; // 0x228
	UStaticMeshComponent* StaticMesh; // 0x230
	bool PropSoundActive?; // 0x238
	float ImpulseThreshold; // 0x23c
	float PropSoundVolumeModifier; // 0x240
	TArray<UMaterialInstanceDynamic*> PropDynMaterials; // 0x248
	FTimerHandle DeathEffectTimer; // 0x258
	float DeathEffectTime; // 0x260
	float DeathEffectDuration; // 0x264
	float Float1; // 0x268
	FTimerHandle SpawnedEffectTimer; // 0x270
	float SpawnedEffectTime; // 0x278
	float SpawnedEffectDuration; // 0x27c
};

struct UBlackboardKeyType_Object : UBlackboardKeyType {
	UObject* BaseClass; // 0x30
};

struct UGeometryCollectionComponent : UMeshComponent {
	AChaosSolverActor* ChaosSolverActor; // 0x470
	UGeometryCollection* RestCollection; // 0x558
	TArray<AFieldSystemActor*> InitializationFields; // 0x560
	bool Simulating; // 0x570
	EObjectStateTypeEnum ObjectType; // 0x578
	bool EnableClustering; // 0x579
	int32_t ClusterGroupIndex; // 0x57c
	int32_t MaxClusterLevel; // 0x580
	TArray<float> DamageThreshold; // 0x588
	EClusterConnectionTypeEnum ClusterConnectionType; // 0x598
	int32_t CollisionGroup; // 0x59c
	float CollisionSampleFraction; // 0x5a0
	float LinearEtherDrag; // 0x5a4
	float AngularEtherDrag; // 0x5a8
	UChaosPhysicalMaterial* PhysicalMaterial; // 0x5b0
	EInitialVelocityTypeEnum InitialVelocityType; // 0x5b8
	FVector InitialLinearVelocity; // 0x5bc
	FVector InitialAngularVelocity; // 0x5c8
	UPhysicalMaterial* PhysicalMaterialOverride; // 0x5d8
	FGeomComponentCacheParameters CacheParameters; // 0x5e0
	FMulticastInlineDelegate NotifyGeometryCollectionPhysicsStateChange; // 0x630
	FMulticastInlineDelegate NotifyGeometryCollectionPhysicsLoadingStateChange; // 0x640
	FMulticastInlineDelegate OnChaosBreakEvent; // 0x668
	float DesiredCacheTime; // 0x678
	bool CachePlayback; // 0x67c
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x680
	bool bNotifyBreaks; // 0x690
	bool bNotifyCollisions; // 0x691
	bool bEnableReplication; // 0x692
	bool bEnableAbandonAfterLevel; // 0x693
	int32_t ReplicationAbandonClusterLevel; // 0x694
	FGeometryCollectionRepData RepData; // 0x698
	UBodySetup* DummyBodySetup; // 0x8c8
};

struct USoundCommandKiller_C : UActorComponent {
	FPointerToUberGraphFrame UberGraphFrame; // 0xb0
	TArray<UFMODEvent*> Event; // 0xb8
	UFMODAudioComponent* 3D_Sound; // 0xc8
	int32_t Killer Type; // 0xd0
};

struct UBrushBaseProperties : UInteractiveToolPropertySet {
	float BrushSize; // 0x60
	bool bSpecifyRadius; // 0x64
	float BrushRadius; // 0x68
	float BrushStrength; // 0x6c
	float BrushFalloffAmount; // 0x70
	bool bShowStrength; // 0x74
	bool bShowFalloff; // 0x75
};

struct UBanshAnimBP_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_77; // 0x2c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_76; // 0x2f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_75; // 0x318
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_74; // 0x340
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_73; // 0x368
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_72; // 0x390
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_71; // 0x3b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_70; // 0x3e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_69; // 0x408
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_68; // 0x430
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_67; // 0x458
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_66; // 0x480
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_65; // 0x4a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_64; // 0x4d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0x4f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0x520
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0x548
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x570
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x598
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x5c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x5e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x610
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x638
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0x688
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0x6b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0x6d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0x700
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0x728
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0x750
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0x778
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0x7a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0x7c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0x7f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x818
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x840
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x868
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x890
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x8b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x8e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x908
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x930
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x958
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x980
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x9a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x9d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x9f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0xa20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0xa48
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0xa70
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0xa98
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0xac0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0xae8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0xb10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0xb38
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0xb60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0xb88
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0xbb0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0xbd8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0xc00
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0xc28
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0xc50
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0xc78
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0xca0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0xcc8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0xcf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0xd18
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0xd40
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0xd68
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0xd90
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0xdb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0xde0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0xe08
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0xe30
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0xe58
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0xe80
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0xea8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_27; // 0xed0
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0xf50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_26; // 0xf80
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0x1000
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_25; // 0x1030
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x10b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_24; // 0x10e0
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x1160
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_23; // 0x1190
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x1210
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_22; // 0x1240
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x12c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_21; // 0x12f0
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x1370
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_20; // 0x13a0
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x1420
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_19; // 0x1450
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x14d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_18; // 0x1500
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x1580
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_17; // 0x15b0
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x1630
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_16; // 0x1660
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_15; // 0x16e0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_4; // 0x1760
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x1800
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_14; // 0x1830
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_13; // 0x18b0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x1930
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x1a18
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_5; // 0x1ad8
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x1ba0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_12; // 0x1bd0
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x1c50
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_11; // 0x1c80
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x1d00
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_10; // 0x1d30
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x1db0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_9; // 0x1de0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_8; // 0x1e60
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x1ee0
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x1fa8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_7; // 0x1fd8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_6; // 0x2058
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x20d8
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x21a0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_5; // 0x21d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2250
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x22d0
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x2398
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x23c8
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x24b0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x2570
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x25f0
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_3; // 0x2670
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool_2; // 0x2710
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x27b0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x2898
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x2960
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x2a48
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x2a78
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x2b28
	FAnimNode_Root AnimGraphNode_Root; // 0x2bc8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2bf8
	float IsHolded; // 0x2c78
	bool IsOnAir?; // 0x2c7c
	float Speed; // 0x2c80
	float SpeedChek; // 0x2c84
	int32_t TypeAttack; // 0x2c88
	bool Attak; // 0x2c8c
	float Direction; // 0x2c90
	bool JumpEndChek; // 0x2c94
	bool FIRE; // 0x2c95
	bool Plant; // 0x2c96
	bool Flashed; // 0x2c97
	bool Drop; // 0x2c98
	bool ChairDrop; // 0x2c99
	bool Catch; // 0x2c9a
	bool MarioStun; // 0x2c9b
	bool Runaway; // 0x2c9c
	bool KnifeIn; // 0x2c9d
	bool KnifeSpawn; // 0x2c9e
	bool AstralBuild; // 0x2c9f
	FRotator HeadR; // 0x2ca0
	float Vertical rotation; // 0x2cac
	float HorizontalValue; // 0x2cb0
	bool bTurnL; // 0x2cb4
	bool bTurnR; // 0x2cb5
	bool Astral; // 0x2cb6
	bool Fly; // 0x2cb7
	bool IsOwner?; // 0x2cb8
	bool Get Ready; // 0x2cb9
	bool PropHunt?; // 0x2cba
	float SpeedRateF; // 0x2cbc
	bool Broke Anim; // 0x2cc0
};

struct AFlashCoin_C : ACoinActor_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
};

struct UPhysicsThrusterComponent : USceneComponent {
	float ThrustStrength; // 0x1f8
};

struct UInAppPurchaseRestoreCallbackProxy2 : UObject {
	FMulticastInlineDelegate onSuccess; // 0x28
	FMulticastInlineDelegate onFailure; // 0x38
};

struct UInteractableButtonsComponentWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UHorizontalBox* HorizontalBox_2; // 0x268
	UImage* Image; // 0x270
	UOverlay* Overlay_3; // 0x278
	UTextBlock* Text; // 0x280
	UWBP_KeyIcon_C* WBP_KeyIcon; // 0x288
	FString ButtonText; // 0x290
	FText InteractableText; // 0x2a0
	AActor* Actor; // 0x2b8
	ASurvivorMasterBP_C* Surv; // 0x2c0
	bool Ready?; // 0x2c8
};

struct UEOSCoreAchievementsUnlockAchievements : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UMovieSceneCinematicShotSection : UMovieSceneSubSection {
	FString ShotDisplayName; // 0x160
	FText DisplayName; // 0x170
};

struct UW_PerkButton_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UTextBlock* NamePerk; // 0x268
	UButton* PerkButton; // 0x270
	FString PerkName; // 0x278
	FString PerkDesc; // 0x288
	UW_MainMenu_C* Owner; // 0x298
	UPerk_C* PerkClass; // 0x2a0
};

struct UConstantQNRT : UAudioSynesthesiaNRT {
	UConstantQNRTSettings* Settings; // 0x78
};

struct UNiagaraParameterCollection : UObject {
	FName Namespace; // 0x28
	TArray<FNiagaraVariable> Parameters; // 0x30
	UMaterialParameterCollection* SourceMaterialCollection; // 0x40
	UNiagaraParameterCollectionInstance* DefaultInstance; // 0x48
	FGuid CompileId; // 0x50
};

struct UNiagaraDataInterfaceArrayBool : UNiagaraDataInterfaceArray {
	TArray<bool> BoolData; // 0x50
};

struct UMovieSceneCameraShakeSourceShakeSection : UMovieSceneSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe8
};

struct UPlanarReflectionComponent : USceneCaptureComponent {
	UBoxComponent* PreviewBox; // 0x2b0
	float NormalDistortionStrength; // 0x2b8
	float PrefilterRoughness; // 0x2bc
	float PrefilterRoughnessDistance; // 0x2c0
	int32_t ScreenPercentage; // 0x2c4
	float ExtraFOV; // 0x2c8
	float DistanceFromPlaneFadeStart; // 0x2cc
	float DistanceFromPlaneFadeEnd; // 0x2d0
	float DistanceFromPlaneFadeoutStart; // 0x2d4
	float DistanceFromPlaneFadeoutEnd; // 0x2d8
	float AngleFromPlaneFadeStart; // 0x2dc
	float AngleFromPlaneFadeEnd; // 0x2e0
	bool bShowPreviewPlane; // 0x2e4
	bool bRenderSceneTwoSided; // 0x2e5
};

struct APhysicsVolume : AVolume {
	float TerminalVelocity; // 0x258
	int32_t Priority; // 0x25c
	float FluidFriction; // 0x260
	char bWaterVolume : 1; // 0x264
	char bPhysicsOnContact : 1; // 0x264
};

struct UViewport : UContentWidget {
	FLinearColor BackgroundColor; // 0x120
};

struct UEOSCoreConnectTransferDeviceIdAccount : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UFMODAnimNotifyPlay : UAnimNotify {
	char bFollow : 1; // 0x38
	FString AttachName; // 0x40
	UFMODEvent* Event; // 0x50
};

struct UWidgetTree : UObject {
	UWidget* RootWidget; // 0x28
};

struct UPaperTerrainComponent : UPrimitiveComponent {
	UPaperTerrainMaterial* TerrainMaterial; // 0x440
	bool bClosedSpline; // 0x448
	bool bFilledSpline; // 0x449
	UPaperTerrainSplineComponent* AssociatedSpline; // 0x450
	int32_t RandomSeed; // 0x458
	float SegmentOverlapAmount; // 0x45c
	FLinearColor TerrainColor; // 0x460
	int32_t ReparamStepsPerSegment; // 0x470
	ESpriteCollisionMode SpriteCollisionDomain; // 0x474
	float CollisionThickness; // 0x478
	UBodySetup* CachedBodySetup; // 0x480
};

struct UTexture2D : UTexture {
	int32_t LevelIndex; // 0xd8
	int32_t FirstResourceMemMip; // 0xdc
	char bTemporarilyDisableStreaming : 1; // 0xe0
	TextureAddress AddressX; // 0xe1
	TextureAddress AddressY; // 0xe2
	FIntPoint ImportedSize; // 0xe4
};

struct UAnimSharingInstance : UObject {
	TArray<AActor*> RegisteredActors; // 0x28
	UAnimationSharingStateProcessor* StateProcessor; // 0x88
	TArray<UAnimSequence*> UsedAnimationSequences; // 0xc8
	UEnum* StateEnum; // 0xe8
	AActor* SharingActor; // 0xf0
};

struct UMaterialInstanceConstant : UMaterialInstance {
	UPhysicalMaterialMask* PhysMaterialMask; // 0x360
};

struct ULiveLinkSourceSettings : UObject {
	ELiveLinkSourceMode Mode; // 0x28
	FLiveLinkSourceBufferManagementSettings BufferSettings; // 0x30
	FString ConnectionString; // 0x88
	ULiveLinkSourceFactory* Factory; // 0x98
};

struct UPerkKiller_C : UPerk_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xd0
	AKillerMasterBP_C* Killer; // 0xd8
	bool CursedProp?; // 0xe0
	ABasePropBP_C* CursedProp; // 0xe8
	TArray<ABasePropBP_C*> Props; // 0xf0
	bool Perk1Activated; // 0x100
	bool Perk2Activated; // 0x101
	bool Perk3Activated; // 0x102
	int32_t Perk1LVL; // 0x104
	int32_t Perk2LVL; // 0x108
	int32_t Perk3LVL; // 0x10c
	TArray<ALootBox_C*> ArrayOfLB; // 0x110
};

struct UParticleModulePivotOffset : UParticleModuleLocationBase {
	FVector2D PivotOffset; // 0x30
};

struct USoundfieldEndpointSubmix : USoundSubmixBase {
	FName SoundfieldEndpointType; // 0x38
	UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40
	USoundfieldEndpointSettingsBase* EndpointSettings; // 0x48
	USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x50
	USoundfieldEncodingSettingsBase* EncodingSettings; // 0x58
	TArray<USoundfieldEffectBase*> SoundfieldEffectChain; // 0x60
};

struct UEOSReportsSendPlayerBehaviorReport : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct ULeaderboardFlushCallbackProxy : UObject {
	FMulticastInlineDelegate onSuccess; // 0x28
	FMulticastInlineDelegate onFailure; // 0x38
};

struct UBTTask_RunBehaviorDynamic : UBTTaskNode {
	FGameplayTag InjectionTag; // 0x70
	UBehaviorTree* DefaultBehaviorAsset; // 0x78
	UBehaviorTree* BehaviorAsset; // 0x80
};

struct ULevelCapture : UMovieSceneCapture {
	bool bAutoStartCapture; // 0x220
	FGuid PrerequisiteActorId; // 0x22c
};

struct UMaterialExpressionRuntimeVirtualTextureOutput : UMaterialExpressionCustomOutput {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Specular; // 0x54
	FExpressionInput Roughness; // 0x68
	FExpressionInput Normal; // 0x7c
	FExpressionInput WorldHeight; // 0x90
	FExpressionInput Opacity; // 0xa4
	FExpressionInput Mask; // 0xb8
};

struct UEOSCoreUserInfoQueryUserInfoByDisplayName : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UEOSCorePlayerDataStorageQueryFile : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct ALootBox_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	USphereComponent* Sphere; // 0x228
	UTextRenderComponent* TextRender; // 0x230
	UArrowComponent* Arrow; // 0x238
	UFMODAudioComponent* CurseSound; // 0x240
	UPointLightComponent* CurseLight; // 0x248
	UFMODAudioComponent* FMODAudio4; // 0x250
	UFMODAudioComponent* FMODAudio3; // 0x258
	UBoxComponent* InteractCollision; // 0x260
	UParticleSystemComponent* ParticleOpen; // 0x268
	UParticleSystemComponent* ParticleClosed; // 0x270
	USceneComponent* Scene1; // 0x278
	UPointLightComponent* PointLight; // 0x280
	UParticleSystemComponent* ParticleBase; // 0x288
	UFMODAudioComponent* FMODAudio2; // 0x290
	UFMODAudioComponent* FMODAudio1; // 0x298
	UFMODAudioComponent* FmodAudio; // 0x2a0
	UStaticMeshComponent* Cap; // 0x2a8
	USceneComponent* Scene; // 0x2b0
	UStaticMeshComponent* Lock; // 0x2b8
	UStaticMeshComponent* tongue; // 0x2c0
	UStaticMeshComponent* Box; // 0x2c8
	USceneComponent* DefaultSceneRoot; // 0x2d0
	float T_LightPulse_Intensity_FD5C180C4B9A99344442349B037C880D; // 0x2d8
	ETimelineDirection T_LightPulse__Direction_FD5C180C4B9A99344442349B037C880D; // 0x2dc
	UTimelineComponent* T_LightPulse; // 0x2e0
	float T_InsideShine_Intensity_28828CFD456256C3FBB3A6AFA599EA25; // 0x2e8
	ETimelineDirection T_InsideShine__Direction_28828CFD456256C3FBB3A6AFA599EA25; // 0x2ec
	UTimelineComponent* T_InsideShine; // 0x2f0
	float T_OpenLootbox_OpenCap_E9A3FE3D4BF5DE0D51FC96B5AC9D5136; // 0x2f8
	float T_OpenLootbox_OpenTongue_E9A3FE3D4BF5DE0D51FC96B5AC9D5136; // 0x2fc
	ETimelineDirection T_OpenLootbox__Direction_E9A3FE3D4BF5DE0D51FC96B5AC9D5136; // 0x300
	UTimelineComponent* T_OpenLootbox; // 0x308
	float T_CloseLootbox_CloseTongue_809797E34D6473C0DFD04A9AF09A8AAD; // 0x310
	float T_CloseLootbox_CloseCap_809797E34D6473C0DFD04A9AF09A8AAD; // 0x314
	ETimelineDirection T_CloseLootbox__Direction_809797E34D6473C0DFD04A9AF09A8AAD; // 0x318
	UTimelineComponent* T_CloseLootbox; // 0x320
	float T_NotEnoughMoney_LockValue_CD045F8344E6D66401BD0A9B1D892F30; // 0x328
	ETimelineDirection T_NotEnoughMoney__Direction_CD045F8344E6D66401BD0A9B1D892F30; // 0x32c
	UTimelineComponent* T_NotEnoughMoney; // 0x330
	bool bLocked; // 0x338
	int32_t NeedPoints; // 0x33c
	TArray<FName> ItemsName; // 0x340
	TArray<float> ItemsChance; // 0x350
	TArray<FName> RarityName; // 0x360
	TArray<float> RarityChance; // 0x370
	FName GetItemName; // 0x380
	FName DroppedItem; // 0x388
	int32_t TempInt; // 0x390
	AActor* SpawnedItem; // 0x398
	bool ItemSpawned?; // 0x3a0
	int32_t FirstIndex; // 0x3a4
	int32_t SecondIndex; // 0x3a8
	float Random; // 0x3ac
	FName GetRarityName; // 0x3b0
	ASurvivorMasterBP_C* SurvRef; // 0x3b8
	bool Chek; // 0x3c0
	UMaterialInstanceDynamic* InsideDynMat; // 0x3c8
	UMaterialInstanceDynamic* LootDynMat; // 0x3d0
	TArray<bool> ItemAccessDenied; // 0x3d8
	TArray<int32_t> ItemsAmount; // 0x3e8
	TArray<int32_t> ItemsAmountDropped; // 0x3f8
	bool Cursed; // 0x408
	bool Opened?; // 0x409
	int32_t OpenCount; // 0x40c
	int32_t CloseCount; // 0x410
	UDataTable* Data Table; // 0x418
	UDataTable* Data Table Medkit; // 0x420
	UDataTable* Data Table CommonItems; // 0x428
	float ZLocalMin; // 0x430
	float ZLocal; // 0x434
	TArray<float> r3; // 0x438
	int32_t I; // 0x448
	ASurvivorMasterBP_C* SREF; // 0x450
	int32_t CountCoins; // 0x458
	FText C; // 0x460
	bool IncreaseRare; // 0x478
	bool PerkBlock?; // 0x479
	bool NotFoundItem?; // 0x47a
	FName LastDroppedItem; // 0x47c
	TArray<FName> Temp; // 0x488
	UDataTable* Data Table If Failed; // 0x498
};

struct UEOSCoreSessionsJoinSession : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UParticleModuleOrientationAxisLock : UParticleModuleOrientationBase {
	EParticleAxisLock LockAxisFlags; // 0x30
};

struct UInAppPurchaseCallbackProxy : UObject {
	FMulticastInlineDelegate onSuccess; // 0x28
	FMulticastInlineDelegate onFailure; // 0x38
};

struct UMaterialExpressionSceneDepth : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput Coordinates; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct UHierarchicalLODSetup : UObject {
	TArray<FHierarchicalSimplification> HierarchicalLODSetup; // 0x28
	TSoftObjectPtr<UMaterialInterface> OverrideBaseMaterial; // 0x38
};

struct UVampireWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UWidgetInteractionComponent : USceneComponent {
	FMulticastInlineDelegate OnHoveredWidgetChanged; // 0x1f8
	int32_t VirtualUserIndex; // 0x218
	int32_t PointerIndex; // 0x21c
	ECollisionChannel TraceChannel; // 0x220
	float InteractionDistance; // 0x224
	EWidgetInteractionSource InteractionSource; // 0x228
	bool bEnableHitTesting; // 0x229
	bool bShowDebug; // 0x22a
	float DebugSphereLineThickness; // 0x22c
	float DebugLineThickness; // 0x230
	FLinearColor DebugColor; // 0x234
	FHitResult CustomHitResult; // 0x2c0
	FVector2D LocalHitLocation; // 0x34c
	FVector2D LastLocalHitLocation; // 0x354
	UWidgetComponent* HoveredWidgetComponent; // 0x360
	FHitResult LastHitResult; // 0x368
	bool bIsHoveredWidgetInteractable; // 0x3f4
	bool bIsHoveredWidgetFocusable; // 0x3f5
	bool bIsHoveredWidgetHitTestVisible; // 0x3f6
};

struct UVaRestSettings : UObject {
	bool bExtendedLog; // 0x28
	bool bUseChunkedParser; // 0x29
};

struct UForceFeedbackAttenuation : UObject {
	FForceFeedbackAttenuationSettings Attenuation; // 0x28
};

struct UEOSCoreUIShowFriends : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UPlatformEventsComponent : UActorComponent {
	FMulticastInlineDelegate PlatformChangedToLaptopModeDelegate; // 0xb0
	FMulticastInlineDelegate PlatformChangedToTabletModeDelegate; // 0xc0
};

struct UNiagaraDataInterfaceVectorCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
	FRichCurve ZCurve; // 0x170
};

struct UVoiceChatWindowComponent_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Image_126; // 0x268
	UTextBlock* NicknameText; // 0x270
	UHorizontalBox* VoiceChatBox; // 0x278
	AActor* Owner; // 0x280
};

struct UParticleModuleAccelerationConstant : UParticleModuleAccelerationBase {
	FVector Acceleration; // 0x38
};

struct UOperatorField : UFieldNodeBase {
	float Magnitude; // 0xb0
	UFieldNodeBase* RightField; // 0xb8
	UFieldNodeBase* LeftField; // 0xc0
	EFieldOperationType Operation; // 0xc8
};

struct UCameraComponent : USceneComponent {
	float FieldOfView; // 0x1f8
	float OrthoWidth; // 0x1fc
	float OrthoNearClipPlane; // 0x200
	float OrthoFarClipPlane; // 0x204
	float AspectRatio; // 0x208
	char bConstrainAspectRatio : 1; // 0x20c
	char bUseFieldOfViewForLOD : 1; // 0x20c
	char bLockToHmd : 1; // 0x20c
	char bUsePawnControlRotation : 1; // 0x20c
	ECameraProjectionMode ProjectionMode; // 0x20d
	float PostProcessBlendWeight; // 0x240
	FPostProcessSettings PostProcessSettings; // 0x270
};

struct UParticleModuleParameterDynamic : UParticleModuleParameterBase {
	TArray<FEmitterDynamicParameter> DynamicParams; // 0x30
	int32_t UpdateFlags; // 0x40
	char bUsesVelocity : 1; // 0x44
};

struct UEOSCoreFriendsAcceptInvite : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UTimelineTemplate : UObject {
	float TimelineLength; // 0x28
	ETimelineLengthMode LengthMode; // 0x2c
	char bAutoPlay : 1; // 0x2d
	char bLoop : 1; // 0x2d
	char bReplicated : 1; // 0x2d
	char bIgnoreTimeDilation : 1; // 0x2d
	TArray<FTTEventTrack> EventTracks; // 0x30
	TArray<FTTFloatTrack> FloatTracks; // 0x40
	TArray<FTTVectorTrack> VectorTracks; // 0x50
	TArray<FTTLinearColorTrack> LinearColorTracks; // 0x60
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0x70
	FGuid TimelineGuid; // 0x80
	FName VariableName; // 0x90
	FName DirectionPropertyName; // 0x98
	FName UpdateFunctionName; // 0xa0
	FName FinishedFunctionName; // 0xa8
};

struct ULODSyncComponent : UActorComponent {
	int32_t NumLODs; // 0xb0
	int32_t ForcedLOD; // 0xb4
	TArray<FComponentSync> ComponentsToSync; // 0xb8
	TMap<FName, FLODMappingData> CustomLODMapping; // 0xc8
	int32_t CurrentLOD; // 0x118
	int32_t CurrentNumLODs; // 0x11c
	TArray<UPrimitiveComponent*> DriveComponents; // 0x120
	TArray<UPrimitiveComponent*> SubComponents; // 0x130
};

struct UMaterialExpressionVectorParameter : UMaterialExpressionParameter {
	FLinearColor DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x68
	char PrimitiveDataIndex; // 0x69
};

struct APlayerStart : ANavigationObjectBase {
	FName PlayerStartTag; // 0x248
};

struct AAIController : AController {
	char bStartAILogicOnPossess : 1; // 0x2d0
	char bStopAILogicOnUnposses : 1; // 0x2d0
	char bLOSflag : 1; // 0x2d0
	char bSkipExtraLOSChecks : 1; // 0x2d0
	char bAllowStrafe : 1; // 0x2d0
	char bWantsPlayerState : 1; // 0x2d0
	char bSetControlRotationFromPawnOrientation : 1; // 0x2d0
	UPathFollowingComponent* PathFollowingComponent; // 0x2d8
	UBrainComponent* BrainComponent; // 0x2e0
	UAIPerceptionComponent* PerceptionComponent; // 0x2e8
	UPawnActionsComponent* ActionsComp; // 0x2f0
	UBlackboardComponent* Blackboard; // 0x2f8
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x300
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x308
	FMulticastInlineDelegate ReceiveMoveCompleted; // 0x310
};

struct UMaterialExpressionLinearInterpolate : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Alpha; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstAlpha; // 0x84
};

struct AMagicLeapARPinInfoActorBase : AActor {
	FGuid PinId; // 0x220
	bool bVisibilityOverride; // 0x230
};

struct UAsyncTaskDownloadImage : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate OnFail; // 0x40
};

struct UAISense : UObject {
	float DefaultExpirationAge; // 0x28
	EAISenseNotifyType NotifyType; // 0x2c
	char bWantsNewPawnNotification : 1; // 0x30
	char bAutoRegisterAllPawnsAsSources : 1; // 0x30
	UAIPerceptionSystem* PerceptionSystemInstance; // 0x38
};

struct UFontFace : UObject {
	FString SourceFilename; // 0x30
	EFontHinting Hinting; // 0x40
	EFontLoadingPolicy LoadingPolicy; // 0x41
	EFontLayoutMethod LayoutMethod; // 0x42
};

struct UW_MiniLobby_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ClickedReady_3; // 0x268
	UWidgetAnimation* ButtonReadyAnimWHITE_3; // 0x270
	UWidgetAnimation* ButtonReadyAnimRED_3; // 0x278
	UWidgetAnimation* ButtonReadyAnimWHITE; // 0x280
	UWidgetAnimation* PrivateButtonAnim; // 0x288
	UWidgetAnimation* ShowReady; // 0x290
	UWidgetAnimation* HideStart; // 0x298
	UWidgetAnimation* ClickedReady; // 0x2a0
	UWidgetAnimation* ButtonReadyAnimRED; // 0x2a8
	UWidgetAnimation* ButtonConfirmAnim; // 0x2b0
	UWidgetAnimation* ButtonStartAnim; // 0x2b8
	UBackgroundBlur* BackgroundBlur_Timer_Middle; // 0x2c0
	UButton* ButtonPractice; // 0x2c8
	UButton* ButtonPrivateInvite; // 0x2d0
	UButton* ButtonReady; // 0x2d8
	UButton* ButtonStart; // 0x2e0
	UTextBlock* ButtonTextBlock; // 0x2e8
	UCanvasPanel* CanvasPanel_1; // 0x2f0
	UCanvasPanel* CanvasPlayers; // 0x2f8
	UTextBlock* Gsi; // 0x300
	UTextBlock* Gsi_2; // 0x308
	UHorizontalBox* HorizontalBox_HowToPlay; // 0x310
	UHorizontalBox* HorizontalBox_InviteCode; // 0x318
	UImage* Image_4; // 0x320
	UImage* Image_5; // 0x328
	UImage* Image_240; // 0x330
	UImage* Image_403; // 0x338
	UImage* Image_599; // 0x340
	UImage* Image_711; // 0x348
	UImage* Image_2Start; // 0x350
	UImage* Image_396C; // 0x358
	UImage* Image_3Start; // 0x360
	UImage* Image_494C; // 0x368
	UImage* Image_BG; // 0x370
	UImage* Image_Lock; // 0x378
	UImage* Image_ready; // 0x380
	UImage* Image_start; // 0x388
	UHorizontalBox* KillerBox; // 0x390
	UUniformGridPanel* KillerTypes; // 0x398
	UCanvasPanel* LobbyCanvas; // 0x3a0
	UOverlay* Overlay_Practice; // 0x3a8
	UOverlay* Overlay_StartNow; // 0x3b0
	UOverlay* Overlay_Time; // 0x3b8
	UTextBlock* PrivateKey_2; // 0x3c0
	UTextBlock* ReadyText; // 0x3c8
	UImage* RenderTexture_Characters; // 0x3d0
	USizeBox* SizeBox_4; // 0x3d8
	USizeBox* SizeBox_115; // 0x3e0
	USizeBox* SizeBox_ChatTip; // 0x3e8
	USizeBox* SizeBox_ct; // 0x3f0
	USizeBox* SizeBox_Ready; // 0x3f8
	USizeBox* SizeBox_st; // 0x400
	UUniformGridPanel* SlotsBox; // 0x408
	UUniformGridPanel* SlotsBox_2; // 0x410
	USpacer* SpacerKiller; // 0x418
	USpacer* SpacerSurv; // 0x420
	UHorizontalBox* SurvBox; // 0x428
	UUniformGridPanel* SurvProfessions; // 0x430
	UTextBlock* Text; // 0x438
	UTextBlock* Text_2; // 0x440
	UTextBlock* TextBlock_2; // 0x448
	UTextBlock* TextBlock_193; // 0x450
	UTextBlock* TextBlock_ChatTip; // 0x458
	UW_Lobby_WaitPlayers_C* W_Lobby_WaitPlayers; // 0x460
	UWBP_User_Message_C* WBP_User_Message; // 0x468
	UWidgetSwitcher* WidgetSwitcher_2; // 0x470
	bool IsCanceled; // 0x478
	TArray<UW_LobbySurv_C*> SurvProfessionsButtons; // 0x480
	TArray<UW_LobbyKiller_C*> KillerTypeButtons; // 0x490
	FFMODEventInstance LobbyMusic; // 0x4a0
	float Volume; // 0x4a8
	bool Ready?; // 0x4ac
	bool IsSlotsCreated; // 0x4ad
	TMap<FString, UWidget*> SlotsMap; // 0x4b0
	AMiniLobbyPawn_C* MiniLobbyPawn; // 0x500
	int32_t LobbyStartTime; // 0x508
	bool ReadyBlock?; // 0x50c
	TArray<UW_Slot_C*> W_Slots; // 0x510
	bool IsAllSlotsBusy?; // 0x520
	FString PriviteKey; // 0x528
	bool IsPrivateButtonHovered; // 0x538
	TArray<KillerType> KillersOrder; // 0x540
	TArray<int32_t> SlotsOrder; // 0x550
	bool CurIsKiller; // 0x560
};

struct UMaterialExpressionLogarithm10 : UMaterialExpression {
	FExpressionInput X; // 0x40
};

struct UWBP_FriendsComboBox_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Selector; // 0x268
	UImage* Image_Arrow; // 0x270
	UImage* Image_ScrollBG; // 0x278
	UImage* Image_Selected; // 0x280
	UImage* Image_Separator; // 0x288
	UScrollBox* ScrollBox_711; // 0x290
	USizeBox* SizeBox_Content; // 0x298
	UTextBlock* Text_Counter; // 0x2a0
	UTextBlock* Text_Label; // 0x2a8
	UVerticalBox* VerticalBox_Entries; // 0x2b0
	TArray<UWBP_FriendEntry_C*> Entries; // 0x2b8
	int32_t MaxNumVisibleEntries; // 0x2c8
	FTimerHandle AnimTickTimer; // 0x2d0
	float AnimSpeed; // 0x2d8
	bool IsExpanded; // 0x2dc
	FMulticastInlineDelegate OnEntryClicked; // 0x2e0
	FMulticastInlineDelegate OnEntrySelected; // 0x2f0
	FMulticastInlineDelegate OnExpanded; // 0x300
	FMulticastInlineDelegate OnCollapsed; // 0x310
	bool NeedScrollBar; // 0x320
	float EntriesOffset; // 0x324
	FText Label; // 0x328
	UWBP_FriendEntry_C* FocusedEntry; // 0x340
};

struct UAstralTutorial_C : UKillerSpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xe8
	float Timer; // 0xf0
	bool Casted?; // 0xf4
	FPostProcessSettings postProcessMonochrome; // 0x100
	FPostProcessSettings postProcessNormal; // 0x650
	float TransitionTime; // 0xba0
	float TurnOnDuration; // 0xba4
	float TurnOffDuration; // 0xba8
	float TurnOffAttackDuration; // 0xbac
	float ErodeSubtractDef; // 0xbb0
	UMaterialInstanceDynamic* KillerDynMat1; // 0xbb8
	UMaterialInstanceDynamic* KillerDynMat2; // 0xbc0
	UMaterialInstanceDynamic* KillerDynMat3; // 0xbc8
	float Float1; // 0xbd0
	bool TransitionOn; // 0xbd4
	bool TransitionOff; // 0xbd5
	UMaterialInstanceDynamic* KillerDynMatInvis; // 0xbd8
	UMaterialInstanceDynamic* KillerDynMatInvisFPP; // 0xbe0
	float InvisRefractionTPP; // 0xbe8
	float InvisRefractionFPP; // 0xbec
	float InvisRefractionZero; // 0xbf0
	UMaterialInstanceDynamic* KillerDynMatFPP; // 0xbf8
	bool IsAfterAttack; // 0xc00
	UMaterialInstanceDynamic* KillerDynMat4; // 0xc08
	UMaterialInstanceDynamic* KillerDynMat5; // 0xc10
};

struct UInputRouter : UObject {
	bool bAutoInvalidateOnHover; // 0x28
	bool bAutoInvalidateOnCapture; // 0x29
	UInputBehaviorSet* ActiveInputBehaviors; // 0x38
};

struct UEnvQueryTest_Pathfinding : UEnvQueryTest {
	EEnvTestPathfinding TestMode; // 0x1f8
	UEnvQueryContext* Context; // 0x200
	FAIDataProviderBoolValue PathFromContext; // 0x208
	FAIDataProviderBoolValue SkipUnreachable; // 0x240
	UNavigationQueryFilter* FilterClass; // 0x278
};

struct UNiagaraDataInterfaceRenderTargetVolume : UNiagaraDataInterfaceRWBase {
	FIntVector Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe4
	char bOverrideFormat : 1; // 0xe5
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTargetVolume*> ManagedRenderTargets; // 0x108
};

struct USurvivalInventoryWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* HUD_JumpOut_Curve; // 0x268
	UWidgetAnimation* HUD_JumpOut; // 0x270
	UWidgetAnimation* HUD_JumpIn; // 0x278
	UWidgetAnimation* ItemHelpFadeIn; // 0x280
	UWidgetAnimation* ItemHelpAnim; // 0x288
	UCanvasPanel* CanvasPanel_Main; // 0x290
	UHorizontalBox* HorizontalBox_Inventory; // 0x298
	UImage* Image_3; // 0x2a0
	UImage* Image_5; // 0x2a8
	UImage* Image_83; // 0x2b0
	UImage* Image_560; // 0x2b8
	UImage* Image_HelperText; // 0x2c0
	UTextBlock* Inventory1; // 0x2c8
	UTextBlock* Inventory2; // 0x2d0
	UTextBlock* Inventory3; // 0x2d8
	UTextBlock* ItemDescription; // 0x2e0
	UTextBlock* ItemName; // 0x2e8
	UOverlay* Overlay_ItemHelpText; // 0x2f0
	USurvivalInventorySlotWidget_C* Slot1; // 0x2f8
	UImage* Slot1Image; // 0x300
	USurvivalInventorySlotWidget_C* Slot2; // 0x308
	UImage* Slot2Image; // 0x310
	USurvivalInventorySlotWidget_C* Slot3; // 0x318
	UImage* Slot3Image; // 0x320
	int32_t CurrentSlot; // 0x328
	TArray<USurvivalInventorySlotWidget_C*> AllSlots; // 0x330
	TArray<ItemType> AllItemsType; // 0x340
	FSlateBrush Selected; // 0x350
	FSlateBrush Deselected; // 0x3d8
	FLinearColor In Color And Opacity Specified Color_gray; // 0x460
	FLinearColor In Color And Opacity Specified Color__black; // 0x470
	bool isVis; // 0x480
	bool isManuallyFadingOut; // 0x481
	bool WasStopped; // 0x482
};

struct UNiagaraScript : UNiagaraScriptBase {
	ENiagaraScriptUsage Usage; // 0x28
	int32_t UsageIndex; // 0x2c
	FGuid UsageId; // 0x30
	FNiagaraParameterStore RapidIterationParameters; // 0x40
	FNiagaraScriptExecutionParameterStore ScriptExecutionParamStore; // 0xb8
	TArray<FNiagaraBoundParameter> ScriptExecutionBoundParameters; // 0x150
	FNiagaraVMExecutableDataId CachedScriptVMId; // 0x160
	FNiagaraVMExecutableData CachedScriptVM; // 0x1b8
	TArray<UNiagaraParameterCollection*> CachedParameterCollectionReferences; // 0x298
	TArray<FNiagaraScriptDataInterfaceInfo> CachedDefaultDataInterfaces; // 0x2a8
};

struct UShowLoginUICallbackProxy : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate onSuccess; // 0x30
	FMulticastInlineDelegate onFailure; // 0x40
};

struct UMaterialExpressionSkyAtmosphereLightDiskLuminance : UMaterialExpression {
	int32_t LightIndex; // 0x40
};

struct UEOSCorePlayerDataStorageDuplicateFile : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct ULightmassPrimitiveSettingsObject : UObject {
	FLightmassPrimitiveSettings LightmassSettings; // 0x28
};

struct AATPCCameraVolume : AVolume {
	FGameplayTag CameraModeTag; // 0x258
	bool bChangeCameraModeWithInterp; // 0x260
	bool bCheckFilterActorClassWithCamera; // 0x261
	TArray<AActor*> FilterActorClassesWithCamera; // 0x268
};

struct UAnimBoneCompressionCodec : UObject {
	FString Description; // 0x28
};

struct UO_AWS_Worker_C : UObject {
	UVaRestRequestJSON* AuthRequest; // 0x28
	FMulticastInlineDelegate OnAuthFail; // 0x30
	FMulticastInlineDelegate OnAuthComplete; // 0x40
	FString APIKeyDev; // 0x50
	FString APIKeyProd; // 0x60
	FString AuthURL; // 0x70
	UVaRestRequestJSON* ValidateRequest; // 0x80
	FString ValidateSteamSessionURL; // 0x88
	FMulticastInlineDelegate OnValidateFail; // 0x98
	FMulticastInlineDelegate OnValidateComplete; // 0xa8
};

struct ABasePropBP_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UBoxComponent* Box; // 0x228
	UStaticMeshComponent* PropStaticMesh; // 0x230
	float ShakeTimeline_Alpha_6E84376740D7DD5629651BBE931BFF0C; // 0x238
	ETimelineDirection ShakeTimeline__Direction_6E84376740D7DD5629651BBE931BFF0C; // 0x23c
	UTimelineComponent* ShakeTimeline; // 0x240
	FTransform Start; // 0x250
	float ImpulseThreshold; // 0x280
	float Volume; // 0x284
	bool Active?; // 0x288
	UStaticMesh* Mesh; // 0x290
	UStaticMeshComponent* MeshComponent; // 0x298
	FLinearColor Color; // 0x2a0
	float Scale; // 0x2b0
	bool HasOutline?; // 0x2b4
	float PropHealth; // 0x2b8
	FRotator DefaultRot; // 0x2bc
	float FloatX; // 0x2c8
	float FloatY; // 0x2cc
	bool Block; // 0x2d0
	UPerkKiller_C* Perk Killer; // 0x2d8
	bool CursedProp?; // 0x2e0
	TArray<UMaterialInstanceDynamic*> DynamicMaterials; // 0x2e8
	TArray<UMaterialInterface*> StandartMaterials; // 0x2f8
	bool MaterialsCreated?; // 0x308
	bool ChallengeStarted?; // 0x309
	bool Replicated?; // 0x30a
	FVector DefaultLoc; // 0x30c
	bool EndGameHide?; // 0x318
	bool Tutorial?; // 0x319
	bool CastShadow?; // 0x31a
};

struct UMaterialExpressionSmoothStep : UMaterialExpression {
	FExpressionInput Min; // 0x40
	FExpressionInput Max; // 0x54
	FExpressionInput Value; // 0x68
	float ConstMin; // 0x7c
	float ConstMax; // 0x80
	float ConstValue; // 0x84
};

struct AMiniLobbyPawn_C : APawn {
	FPointerToUberGraphFrame UberGraphFrame; // 0x280
	UVoipManagerComponent* VoipManager; // 0x288
	USceneComponent* DefaultSceneRoot; // 0x290
	FString Nickname; // 0x298
	UTexture2D* Avatar; // 0x2a8
	A3DLobbyMesh_C* LobbyMesh; // 0x2b0
	int32_t SurvSkin; // 0x2b8
	FPlayerInfo InfoMiniLobby; // 0x2c0
	FVector Temp1; // 0x2d8
	FRotator Temp2; // 0x2e4
	ACamLobby_C* LobbyCamRef; // 0x2f0
	bool VoiceActive?; // 0x2f8
	bool Allow Voice; // 0x2f9
	UVoipAudioComponent* VoipAudio; // 0x300
	SurvChars Surv Char; // 0x308
	bool KillerChar; // 0x309
	ANewLobby_C* NewLobbyReference; // 0x310
	ANewLobbyV2_C* LobbyV2; // 0x318
	UW_LoadingTutorial_C* WLoadingT; // 0x320
};

struct USoundfieldSubmix : USoundSubmixWithParentBase {
	FName SoundfieldEncodingFormat; // 0x40
	USoundfieldEncodingSettingsBase* EncodingSettings; // 0x48
	TArray<USoundfieldEffectBase*> SoundfieldEffectChain; // 0x50
	USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x60
};

struct UInterpTrackEvent : UInterpTrack {
	TArray<FEventTrackKey> EventTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
	char bUseCustomEventName : 1; // 0x80
};

struct UMaterialExpressionSphereMask : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Radius; // 0x68
	FExpressionInput Hardness; // 0x7c
	float AttenuationRadius; // 0x90
	float HardnessPercent; // 0x94
};

struct UWindowTitleBarArea : UContentWidget {
	bool bWindowButtonsEnabled; // 0x120
	bool bDoubleClickTogglesFullscreen; // 0x121
};

struct USlateWidgetStyleAsset : UObject {
	USlateWidgetStyleContainerBase* CustomStyle; // 0x28
};

struct UButton : UContentWidget {
	USlateWidgetStyleAsset* Style; // 0x120
	FButtonStyle WidgetStyle; // 0x128
	FLinearColor ColorAndOpacity; // 0x3a0
	FLinearColor BackgroundColor; // 0x3b0
	EButtonClickMethod ClickMethod; // 0x3c0
	EButtonTouchMethod TouchMethod; // 0x3c1
	EButtonPressMethod PressMethod; // 0x3c2
	bool IsFocusable; // 0x3c3
	FMulticastInlineDelegate OnClicked; // 0x3c8
	FMulticastInlineDelegate OnPressed; // 0x3d8
	FMulticastInlineDelegate OnReleased; // 0x3e8
	FMulticastInlineDelegate OnHovered; // 0x3f8
	FMulticastInlineDelegate OnUnhovered; // 0x408
};

struct UGameplayTask_WaitDelay : UGameplayTask {
	FMulticastInlineDelegate OnFinish; // 0x68
};

struct AGlueOfJarItemsBP_Legendary_C : AItemsBP_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2f8
};

struct ULayer : UObject {
	FName LayerName; // 0x28
	char bIsVisible : 1; // 0x30
	TArray<FLayerActorStats> ActorStats; // 0x38
};

struct UAnimStreamable : UAnimSequenceBase {
	int32_t NumFrames; // 0xa8
	EAnimInterpolationType Interpolation; // 0xac
	FName RetargetSource; // 0xb0
	UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xc8
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd0
	bool bEnableRootMotion; // 0xd8
	ERootMotionRootLock RootMotionRootLock; // 0xd9
	bool bForceRootLock; // 0xda
	bool bUseNormalizedRootMotionScale; // 0xdb
};

struct UTextBlock : UTextLayoutWidget {
	FText Text; // 0x128
	FDelegate TextDelegate; // 0x140
	FSlateColor ColorAndOpacity; // 0x150
	FDelegate ColorAndOpacityDelegate; // 0x178
	FSlateFontInfo Font; // 0x188
	FSlateBrush StrikeBrush; // 0x1e0
	FVector2D ShadowOffset; // 0x268
	FLinearColor ShadowColorAndOpacity; // 0x270
	FDelegate ShadowColorAndOpacityDelegate; // 0x280
	float MinDesiredWidth; // 0x290
	bool bWrapWithInvalidationPanel; // 0x294
	bool bAutoWrapText; // 0x295
	ETextTransformPolicy TextTransformPolicy; // 0x296
	bool bSimpleTextMode; // 0x297
};

struct UParticleModuleCollision : UParticleModuleCollisionBase {
	FRawDistributionVector DampingFactor; // 0x30
	FRawDistributionVector DampingFactorRotation; // 0x78
	FRawDistributionFloat MaxCollisions; // 0xc0
	EParticleCollisionComplete CollisionCompletionOption; // 0xf0
	TArray<EObjectTypeQuery> CollisionTypes; // 0xf8
	char bApplyPhysics : 1; // 0x110
	char bIgnoreTriggerVolumes : 1; // 0x110
	FRawDistributionFloat ParticleMass; // 0x118
	float DirScalar; // 0x148
	char bPawnsDoNotDecrementCount : 1; // 0x14c
	char bOnlyVerticalNormalsDecrementCount : 1; // 0x14c
	float VerticalFudgeFactor; // 0x150
	FRawDistributionFloat DelayAmount; // 0x158
	char bDropDetail : 1; // 0x188
	char bCollideOnlyIfVisible : 1; // 0x188
	char bIgnoreSourceActor : 1; // 0x188
	float MaxCollisionDistance; // 0x18c
};

struct UUMGSequencePlayer : UObject {
	UWidgetAnimation* Animation; // 0x410
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x420
};

struct UMaterialExpressionGetMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput MaterialAttributes; // 0x40
	TArray<FGuid> AttributeGetTypes; // 0x58
};

struct UMaterialExpressionLandscapePhysicalMaterialOutput : UMaterialExpressionCustomOutput {
	TArray<FPhysicalMaterialInput> Inputs; // 0x40
};

struct UPhysicalMaterial : UObject {
	float Friction; // 0x28
	float StaticFriction; // 0x2c
	EFrictionCombineMode FrictionCombineMode; // 0x30
	bool bOverrideFrictionCombineMode; // 0x31
	float Restitution; // 0x34
	EFrictionCombineMode RestitutionCombineMode; // 0x38
	bool bOverrideRestitutionCombineMode; // 0x39
	float Density; // 0x3c
	float SleepLinearVelocityThreshold; // 0x40
	float SleepAngularVelocityThreshold; // 0x44
	int32_t SleepCounterThreshold; // 0x48
	float RaiseMassToPower; // 0x4c
	float DestructibleDamageThresholdScale; // 0x50
	UPhysicalMaterialPropertyBase* PhysicalMaterialProperty; // 0x58
	EPhysicalSurface SurfaceType; // 0x60
};

struct UParticleModuleColorOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorOverLife; // 0x30
	FRawDistributionFloat AlphaOverLife; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct UCameraModifier : UObject {
	char bDebug : 1; // 0x28
	char bExclusive : 1; // 0x28
	char Priority; // 0x2c
	APlayerCameraManager* CameraOwner; // 0x30
	float AlphaInTime; // 0x38
	float AlphaOutTime; // 0x3c
	float Alpha; // 0x40
};

struct UEOSCoreFriendsSendInvite : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct ACullDistanceVolume : AVolume {
	TArray<FCullDistanceSizePair> CullDistances; // 0x258
	char bEnabled : 1; // 0x268
};

struct UDatasmithCommonTessellationOptions : UDatasmithOptionsBase {
	FDatasmithTessellationOptions Options; // 0x28
};

struct UMaterialExpressionFunctionInput : UMaterialExpression {
	FExpressionInput Preview; // 0x40
	FName InputName; // 0x54
	FString Description; // 0x60
	FGuid ID; // 0x70
	EFunctionInputType InputType; // 0x80
	FVector4 PreviewValue; // 0x90
	char bUsePreviewValueAsDefault : 1; // 0xa0
	int32_t SortPriority; // 0xa4
	char bCompilingFunctionPreview : 1; // 0xa8
};

struct UOnlineSessionClient : UOnlineSession {
	bool bIsFromInvite; // 0x1d8
	bool bHandlingDisconnect; // 0x1d9
};

struct UParticleModuleVectorFieldRotation : UParticleModuleVectorFieldBase {
	FVector MinInitialRotation; // 0x30
	FVector MaxInitialRotation; // 0x3c
};

struct AGrenade_C : AActor {
	USceneComponent* DefaultSceneRoot; // 0x220
	Rarity Rarity; // 0x228
	ASurvivorMasterBP_C* CharIgnore; // 0x230
};

struct UAtmosphericFogComponent : USceneComponent {
	float SunMultiplier; // 0x1f8
	float FogMultiplier; // 0x1fc
	float DensityMultiplier; // 0x200
	float DensityOffset; // 0x204
	float DistanceScale; // 0x208
	float AltitudeScale; // 0x20c
	float DistanceOffset; // 0x210
	float GroundOffset; // 0x214
	float StartDistance; // 0x218
	float SunDiscScale; // 0x21c
	float DefaultBrightness; // 0x220
	FColor DefaultLightColor; // 0x224
	char bDisableSunDisk : 1; // 0x228
	char bAtmosphereAffectsSunIlluminance : 1; // 0x228
	char bDisableGroundScattering : 1; // 0x228
	FAtmospherePrecomputeParameters PrecomputeParams; // 0x22c
	UTexture2D* TransmittanceTexture; // 0x258
	UTexture2D* IrradianceTexture; // 0x260
};

struct UMovieScenePropertyTrack : UMovieSceneNameableTrack {
	UMovieSceneSection* SectionToKey; // 0x78
	FMovieScenePropertyBinding PropertyBinding; // 0x80
	TArray<UMovieSceneSection*> Sections; // 0x98
};

struct UBTTask_Wait : UBTTaskNode {
	float WaitTime; // 0x70
	float RandomDeviation; // 0x74
};

struct UNiagaraSimulationStageGeneric : UNiagaraSimulationStageBase {
	ENiagaraIterationSource IterationSource; // 0x40
	int32_t Iterations; // 0x44
	char bSpawnOnly : 1; // 0x48
	char bDisablePartialParticleUpdate : 1; // 0x48
	FNiagaraVariableDataInterfaceBinding DataInterface; // 0x50
};

struct UNiagaraDataInterfaceAudioPlayer : UNiagaraDataInterface {
	USoundBase* SoundToPlay; // 0x38
	USoundAttenuation* Attenuation; // 0x40
	USoundConcurrency* Concurrency; // 0x48
	TArray<FName> ParameterNames; // 0x50
	bool bLimitPlaysPerTick; // 0x60
	int32_t MaxPlaysPerTick; // 0x64
	bool bStopWhenComponentIsDestroyed; // 0x68
};

struct UMovieSceneObjectPropertySection : UMovieSceneSection {
	FMovieSceneObjectPathChannel ObjectChannel; // 0xe8
};

struct UAnimationSettings : UDeveloperSettings {
	int32_t CompressCommandletVersion; // 0x38
	TArray<FString> KeyEndEffectorsMatchNameArray; // 0x40
	bool ForceRecompression; // 0x50
	bool bForceBelowThreshold; // 0x51
	bool bFirstRecompressUsingCurrentOrDefault; // 0x52
	bool bRaiseMaxErrorToExisting; // 0x53
	bool bEnablePerformanceLog; // 0x54
	bool bStripAnimationDataOnDedicatedServer; // 0x55
	bool bTickAnimationOnSkeletalMeshInit; // 0x56
	TArray<FCustomAttributeSetting> BoneCustomAttributesNames; // 0x58
	TArray<FString> BoneNamesWithCustomAttributes; // 0x68
	TMap<FName, ECustomAttributeBlendType> AttributeBlendModes; // 0x78
	ECustomAttributeBlendType DefaultAttributeBlendMode; // 0xc8
};

struct UBookMark2D : UBookmarkBase {
	float Zoom2D; // 0x28
	FIntPoint Location; // 0x2c
};

struct ASpectatorBeaconHost : AOnlineBeaconHostObject {
	USpectatorBeaconState* State; // 0x248
	bool bLogoutOnSessionTimeout; // 0x2b0
	float SessionTimeoutSecs; // 0x2b4
	float TravelSessionTimeoutSecs; // 0x2b8
};

struct UDatasmithAssetUserData : UAssetUserData {
	TMap<FName, FString> MetaData; // 0x28
};

struct ULandscapeLayerInfoObject : UObject {
	FName LayerName; // 0x28
	UPhysicalMaterial* PhysMaterial; // 0x30
	float Hardness; // 0x38
	FLinearColor LayerUsageDebugColor; // 0x3c
};

struct UWaypointWidgetComponent_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UTextBlock* Distance; // 0x268
	UImage* Icon; // 0x270
	UMaterialInstanceDynamic* Material; // 0x278
};

struct UPaperTileMapComponent : UMeshComponent {
	int32_t MapWidth; // 0x468
	int32_t MapHeight; // 0x46c
	int32_t TileWidth; // 0x470
	int32_t TileHeight; // 0x474
	UPaperTileSet* DefaultLayerTileSet; // 0x478
	UMaterialInterface* Material; // 0x480
	TArray<UPaperTileLayer*> TileLayers; // 0x488
	FLinearColor TileMapColor; // 0x498
	int32_t UseSingleLayerIndex; // 0x4a8
	bool bUseSingleLayer; // 0x4ac
	UPaperTileMap* TileMap; // 0x4b0
};

struct UAREnvironmentCaptureProbeTexture : UTextureCube {
	EARTextureType TextureType; // 0x130
	float Timestamp; // 0x134
	FGuid ExternalTextureGuid; // 0x138
	FVector2D Size; // 0x148
};

struct UNiagaraDataInterfaceColorCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve RedCurve; // 0x70
	FRichCurve GreenCurve; // 0xf0
	FRichCurve BlueCurve; // 0x170
	FRichCurve AlphaCurve; // 0x1f0
};

struct UCameraModifier_CameraShake : UCameraModifier {
	TArray<FActiveCameraShakeInfo> ActiveShakes; // 0x48
	TMap<UCameraShakeBase*, FPooledCameraShakes> ExpiredPooledShakesMap; // 0x58
	float SplitScreenShakeScale; // 0xa8
};

struct UMaterialExpressionTextureSample : UMaterialExpressionTextureBase {
	FExpressionInput Coordinates; // 0x48
};

struct UDoppelKillerMaxWalkShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
};

struct UStaticMeshSocket : UObject {
	FName SocketName; // 0x28
	FVector RelativeLocation; // 0x30
	FRotator RelativeRotation; // 0x3c
	FVector RelativeScale; // 0x48
	FString Tag; // 0x58
};

struct UWidgetNavigation : UObject {
	FWidgetNavigationData Up; // 0x28
	FWidgetNavigationData Down; // 0x4c
	FWidgetNavigationData Left; // 0x70
	FWidgetNavigationData Right; // 0x94
	FWidgetNavigationData Next; // 0xb8
	FWidgetNavigationData Previous; // 0xdc
};

struct UARFaceGeometry : UARTrackedGeometry {
	FVector LookAtTarget; // 0xf8
	bool bIsTracked; // 0x104
	TMap<EARFaceBlendShape, float> BlendShapes; // 0x108
	FTransform LeftEyeTransform; // 0x190
	FTransform RightEyeTransform; // 0x1c0
};

struct ASurvIntro_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	URectLightComponent* RectLight6; // 0x228
	URectLightComponent* RectLight5; // 0x230
	URectLightComponent* RectLight4; // 0x238
	URectLightComponent* RectLight; // 0x240
	URectLightComponent* RectLight2; // 0x248
	URectLightComponent* RectLight1; // 0x250
	UStaticMeshComponent* Sphere; // 0x258
	USceneComponent* EndPoint; // 0x260
	USceneComponent* StartPoint; // 0x268
	UCineCameraComponent* CineCamera; // 0x270
	USceneComponent* Main; // 0x278
	USceneComponent* TargetPoint; // 0x280
	float StartTimeline_Focus_Distance_598CCCFC44D033BBCC5443B94BFA1CB9; // 0x288
	float StartTimeline_Alpha_598CCCFC44D033BBCC5443B94BFA1CB9; // 0x28c
	ETimelineDirection StartTimeline__Direction_598CCCFC44D033BBCC5443B94BFA1CB9; // 0x290
	UTimelineComponent* StartTimeline; // 0x298
	bool Nicknames?; // 0x2a0
	bool forKiller; // 0x2a1
};

struct UClickDragInputBehavior : UAnyButtonInputBehavior {
	bool bUpdateModifiersDuringDrag; // 0x120
};

struct AStaticBulletBP1_C : AActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x220
	UStaticMeshComponent* Cube; // 0x228
	USceneComponent* DefaultSceneRoot; // 0x230
	bool Hited?; // 0x238
	float Time; // 0x23c
	AKillerMasterBP_C* KillerRef; // 0x240
};

struct UATPCCameraLockOnTargetObject : UATPCCameraBaseObject {
	FMulticastInlineDelegate OnTargetChangeDelegate; // 0x30
	AATPCArrowDebugActor* TargetDebugActor; // 0x50
};

struct UAudioCurveSourceComponent : UAudioComponent {
	FName CurveSourceBindingName; // 0x868
	float CurveSyncOffset; // 0x870
};

struct UProphuntGameInstance : UGameInstance {
	bool IsInMainMenu; // 0x1a8
};

struct ULiveLinkVirtualSubject : UObject {
	ULiveLinkRole* Role; // 0x30
	TArray<FLiveLinkSubjectName> Subjects; // 0x38
	TArray<ULiveLinkFrameTranslator*> FrameTranslators; // 0x48
};

struct UWBP_QuickSearch_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* ChangeText_DisappearAnim; // 0x268
	UWidgetAnimation* HideButton_Anim; // 0x270
	UWidgetAnimation* ChangeText_AppearAnim; // 0x278
	UWidgetAnimation* Throbber_Anim; // 0x280
	UWidgetAnimation* ShowHide_Anim; // 0x288
	UButton* Button_Cancel; // 0x290
	UImage* Image_Separator; // 0x298
	UImage* Image_Throbber; // 0x2a0
	UImage* Image_ThrobberBG; // 0x2a8
	URichTextBlock* RichTextBlock_Timer; // 0x2b0
	UTextBlock* TextBlock_ButtonText; // 0x2b8
	UTextBlock* TextBlock_Label; // 0x2c0
	int32_t TargetTime; // 0x2c8
	int32_t CurrentTime; // 0x2cc
	FTimerHandle Timer; // 0x2d0
	FMulticastInlineDelegate OnTimeIsOver; // 0x2d8
	bool IsCanceled; // 0x2e8
};

struct UAudioImpulseResponse : UObject {
	TArray<float> ImpulseResponse; // 0x28
	int32_t NumChannels; // 0x38
	int32_t SampleRate; // 0x3c
	float NormalizationVolumeDb; // 0x40
	bool bTrueStereo; // 0x44
	TArray<float> IRData; // 0x48
};

struct UPaperRuntimeSettings : UObject {
	bool bEnableSpriteAtlasGroups; // 0x28
	bool bEnableTerrainSplineEditing; // 0x29
	bool bResizeSpriteDataToMatchTextures; // 0x2a
};

struct UWaypointWidget_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UCanvasPanel* CanvasPanel_1; // 0x268
};

struct UMaterialExpressionTransform : UMaterialExpression {
	FExpressionInput Input; // 0x40
	EMaterialVectorCoordTransformSource TransformSourceType; // 0x54
	EMaterialVectorCoordTransform TransformType; // 0x55
};

struct UEOSCoreLobbyDestroyLobby : UEOSCoreAsyncAction {
	FMulticastInlineDelegate OnCallback; // 0x38
};

struct UPlayFabGroupsAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x218
	UPlayFabJsonObject* RequestJsonObj; // 0x220
	UPlayFabJsonObject* ResponseJsonObj; // 0x228
};

struct UInterpTrackInstFloatMaterialParam : UInterpTrackInst {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<float> ResetFloats; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackFloatMaterialParam* InstancedTrack; // 0x58
};

struct UCheckBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FCheckBoxStyle CheckBoxStyle; // 0x30
};

struct UAnimBlueprintGeneratedClass : UBlueprintGeneratedClass {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x330
	USkeleton* TargetSkeleton; // 0x340
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x348
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x358
	TArray<FName> SyncGroupNames; // 0x428
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x438
	TMap<FName, FGraphAssetPlayerInformation> GraphAssetPlayerInformation; // 0x448
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x498
	FPropertyAccessLibrary PropertyAccessLibrary; // 0x4e8
};

struct UAISense_Damage : UAISense {
	TArray<FAIDamageEvent> RegisteredEvents; // 0x80
};

struct USlateVectorArtData : UObject {
	TArray<FSlateMeshVertex> VertexData; // 0x28
	TArray<uint32_t> IndexData; // 0x38
	UMaterialInterface* Material; // 0x48
	FVector2D ExtentMin; // 0x50
	FVector2D ExtentMax; // 0x58
};

struct UBreakpoint : UObject {
	char bEnabled : 1; // 0x28
	UEdGraphNode* Node; // 0x30
	char bStepOnce : 1; // 0x38
	char bStepOnce_WasPreviouslyDisabled : 1; // 0x38
	char bStepOnce_RemoveAfterHit : 1; // 0x38
};

struct UBTDecorator_DoesPathExist : UBTDecorator {
	FBlackboardKeySelector BlackboardKeyA; // 0x68
	FBlackboardKeySelector BlackboardKeyB; // 0x90
	char bUseSelf : 1; // 0xb8
	EPathExistanceQueryType PathQueryType; // 0xbc
	UNavigationQueryFilter* FilterClass; // 0xc0
};

struct UDatasmithDeltaGenSceneImportData : UDatasmithFBXSceneImportData {
	bool bMergeNodes; // 0x48
	bool bOptimizeDuplicatedNodes; // 0x49
	bool bRemoveInvisibleNodes; // 0x4a
	bool bSimplifyNodeHierarchy; // 0x4b
	bool bImportVar; // 0x4c
	FString VarPath; // 0x50
	bool bImportPos; // 0x60
	FString PosPath; // 0x68
	bool bImportTml; // 0x78
	FString TmlPath; // 0x80
};

struct UInterpTrackVectorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0x90
};

struct UWBP_Effect_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UImage* Background; // 0x268
	UHorizontalBox* HorizontalBox_403; // 0x270
	UImage* Image; // 0x278
	UImage* Image_2; // 0x280
	UImage* Image_122; // 0x288
	UImage* Image_201; // 0x290
	UTextBlock* TextBlock; // 0x298
	UTextBlock* TextBlock_91; // 0x2a0
	UTextBlock* TextBlock_132; // 0x2a8
	UMaterial* Material; // 0x2b0
	UMaterialInstanceDynamic* Material INstance; // 0x2b8
	float Time; // 0x2c0
	UObject* Book; // 0x2c8
	UObject* Pot; // 0x2d0
	UObject* Anbrosia; // 0x2d8
	float Duration; // 0x2e0
	FMulticastInlineDelegate Removed; // 0x2e8
};

struct UBTDecorator_Blackboard : UBTDecorator_BlackboardBase {
	int32_t IntValue; // 0x90
	float FloatValue; // 0x94
	FString StringValue; // 0x98
	FString CachedDescription; // 0xa8
	char OperationType; // 0xb8
	EBTBlackboardRestart NotifyObserver; // 0xb9
};

struct ANiagaraPreviewGrid : AActor {
	UNiagaraSystem* System; // 0x220
	ENiagaraPreviewGridResetMode ResetMode; // 0x228
	UNiagaraPreviewAxis* PreviewAxisX; // 0x230
	UNiagaraPreviewAxis* PreviewAxisY; // 0x238
	ANiagaraPreviewBase* PreviewClass; // 0x240
	float SpacingX; // 0x248
	float SpacingY; // 0x24c
	int32_t NumX; // 0x250
	int32_t NumY; // 0x254
	TArray<UChildActorComponent*> PreviewComponents; // 0x258
};

struct UMovieSceneTrackInstanceSystem : UMovieSceneEntitySystem {
	UMovieSceneTrackInstanceInstantiator* Instantiator; // 0x40
};

struct UARGetCandidateObjectAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate onSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UNavRelevantComponent : UActorComponent {
	char bAttachToOwnersRoot : 1; // 0xd4
	UObject* CachedNavParent; // 0xd8
};

struct UWBP_DoorMark_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Disappear; // 0x268
	UWidgetAnimation* Appear; // 0x270
	UImage* Image_Circle; // 0x278
	UImage* Image_Point; // 0x280
};

struct USurvivorSpell_C : USpell_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0xd8
	ASurvivorMasterBP_C* Survivor; // 0xe0
	bool ShowIcon?; // 0xe8
	ABP_Spectator_C* Spectator; // 0xf0
};

struct AMagicLeapSharedWorldGameMode : AGameMode {
	FMagicLeapSharedWorldSharedData SharedWorldData; // 0x308
	FMulticastInlineDelegate OnNewLocalDataFromClients; // 0x318
	float PinSelectionConfidenceThreshold; // 0x328
	AMagicLeapSharedWorldPlayerController* ChosenOne; // 0x3d0
};

struct UBlackboardKeyType_Class : UBlackboardKeyType {
	UObject* BaseClass; // 0x30
};

struct UDatasmithGLTFSceneImportData : UDatasmithSceneImportData {
	FString Generator; // 0x28
	float Version; // 0x38
	FString Author; // 0x40
	FString License; // 0x50
	FString Source; // 0x60
};

struct ANavSystemConfigOverride : AActor {
	UNavigationSystemConfig* NavigationSystemConfig; // 0x220
	ENavSystemOverridePolicy OverridePolicy; // 0x228
	char bLoadOnClient : 1; // 0x229
};

struct UMaterialExpressionRotator : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	float CenterX; // 0x68
	float CenterY; // 0x6c
	float Speed; // 0x70
	uint32_t ConstCoordinate; // 0x74
};

struct UPlayFabAdminAPI : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnPlayFabResponse; // 0x30
	UPlayFabAuthenticationContext* CallAuthenticationContext; // 0x7d8
	UPlayFabJsonObject* RequestJsonObj; // 0x7e0
	UPlayFabJsonObject* ResponseJsonObj; // 0x7e8
};

struct UAISense_Prediction : UAISense {
	TArray<FAIPredictionEvent> RegisteredEvents; // 0x80
};

struct UW_PlayerPortraitInfo_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UWidgetAnimation* Hover_Anim; // 0x268
	UWidgetAnimation* SelectAnim; // 0x270
	UButton* Button_Char; // 0x278
	UImage* Image_40; // 0x280
	UImage* Image_Border; // 0x288
	UImage* Image_BorderSelected; // 0x290
	UImage* Image_RedBlur; // 0x298
	UWBP_NewItemMarker_C* WBP_NewItemMarker; // 0x2a0
	FMulticastInlineDelegate OnClickDispatcher; // 0x2a8
	bool IsClicked; // 0x2b8
	UW_PlayerSkins_C* PlayerSkins; // 0x2c0
	FText Name; // 0x2c8
	int32_t ID; // 0x2e0
	FMulticastInlineDelegate OnHoverDispatcher; // 0x2e8
	FMulticastInlineDelegate OnUnhoverDispatcher; // 0x2f8
};

struct UMovieScenePrimitiveMaterialTrack : UMovieScenePropertyTrack {
	int32_t MaterialIndex; // 0xb0
};

struct ANavigationTestingActor : AActor {
	UCapsuleComponent* CapsuleComponent; // 0x230
	UNavigationInvokerComponent* InvokerComponent; // 0x238
	char bActAsNavigationInvoker : 1; // 0x240
	FNavAgentProperties NavAgentProps; // 0x248
	FVector QueryingExtent; // 0x278
	ANavigationData* MyNavData; // 0x288
	FVector ProjectedLocation; // 0x290
	char bProjectedLocationValid : 1; // 0x29c
	char bSearchStart : 1; // 0x29c
	float CostLimitFactor; // 0x2a0
	float MinimumCostLimit; // 0x2a4
	char bBacktracking : 1; // 0x2a8
	char bUseHierarchicalPathfinding : 1; // 0x2a8
	char bGatherDetailedInfo : 1; // 0x2a8
	char bDrawDistanceToWall : 1; // 0x2a8
	char bShowNodePool : 1; // 0x2a8
	char bShowBestPath : 1; // 0x2a8
	char bShowDiffWithPreviousStep : 1; // 0x2a8
	char bShouldBeVisibleInGame : 1; // 0x2a8
	ENavCostDisplay CostDisplayMode; // 0x2ac
	FVector2D TextCanvasOffset; // 0x2b0
	char bPathExist : 1; // 0x2b8
	char bPathIsPartial : 1; // 0x2b8
	char bPathSearchOutOfNodes : 1; // 0x2b8
	float PathfindingTime; // 0x2bc
	float PathCost; // 0x2c0
	int32_t PathfindingSteps; // 0x2c4
	ANavigationTestingActor* OtherActor; // 0x2c8
	UNavigationQueryFilter* FilterClass; // 0x2d0
	int32_t ShowStepIndex; // 0x2d8
	float OffsetFromCornersDistance; // 0x2dc
};

struct UAnimCompress_PerTrackCompression : UAnimCompress_RemoveLinearKeys {
	float MaxZeroingThreshold; // 0x60
	float MaxPosDiffBitwise; // 0x64
	float MaxAngleDiffBitwise; // 0x68
	float MaxScaleDiffBitwise; // 0x6c
	TArray<AnimationCompressionFormat> AllowedRotationFormats; // 0x70
	TArray<AnimationCompressionFormat> AllowedTranslationFormats; // 0x80
	TArray<AnimationCompressionFormat> AllowedScaleFormats; // 0x90
	char bResampleAnimation : 1; // 0xa0
	float ResampledFramerate; // 0xa4
	int32_t MinKeysForResampling; // 0xa8
	char bUseAdaptiveError : 1; // 0xac
	char bUseOverrideForEndEffectors : 1; // 0xac
	int32_t TrackHeightBias; // 0xb0
	float ParentingDivisor; // 0xb4
	float ParentingDivisorExponent; // 0xb8
	char bUseAdaptiveError2 : 1; // 0xbc
	float RotationErrorSourceRatio; // 0xc0
	float TranslationErrorSourceRatio; // 0xc4
	float ScaleErrorSourceRatio; // 0xc8
	float MaxErrorPerTrackRatio; // 0xcc
	float PerturbationProbeSize; // 0xd0
};

struct UDistributionFloatUniformCurve : UDistributionFloat {
	FInterpCurveVector2D ConstantCurve; // 0x38
};

struct UMaterialExpressionSphericalParticleOpacity : UMaterialExpression {
	FExpressionInput Density; // 0x40
	float ConstantDensity; // 0x54
};

struct USoundNodeParamCrossFade : USoundNodeDistanceCrossFade {
	FName ParamName; // 0x58
};

struct UAlarmShake_C : UMatineeCameraShake {
	FPointerToUberGraphFrame UberGraphFrame; // 0x180
	FROscillator ShakeRot; // 0x188
	FVOscillator ShakeLoc; // 0x1ac
};

