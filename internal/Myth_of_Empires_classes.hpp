// Created by BlueFire1337
// Updated 2022-01-26
// Generated 2022-02-02

namespace off {
	constexpr auto GNames = 0x62832c0;
	constexpr auto GObjects = 0x629ba50;
	constexpr auto GWorld = 0x63d7c00;
}

struct USkeletalMeshSocket : UObject {
	FName SocketName; // 0x28
	FName BoneName; // 0x30
	FVector RelativeLocation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale; // 0x50
	bool bForceAlwaysAnimated; // 0x5c
	bool bCanBeAffectedByMorphTargets; // 0x5d
};

struct UAISenseConfig : UObject {
	FColor DebugColor; // 0x28
	float MaxAge; // 0x2c
	char bStartsEnabled : 1; // 0x30
};

struct UMaterialExpressionChannelMaskParameter : UMaterialExpressionVectorParameter {
	EChannelMaskParameterColor MaskChannel; // 0x70
};

struct UAbilityTask_ApplyRootMotionRadialForce : UAbilityTask_ApplyRootMotion_Base {
	FMulticastInlineDelegate OnFinish; // 0xc0
	FVector Location; // 0xd0
	AActor* LocationActor; // 0xe0
	float Strength; // 0xe8
	float Duration; // 0xec
	float Radius; // 0xf0
	bool bIsPush; // 0xf4
	bool bIsAdditive; // 0xf5
	bool bNoZForce; // 0xf6
	UCurveFloat* StrengthDistanceFalloff; // 0xf8
	UCurveFloat* StrengthOverTime; // 0x100
	bool bUseFixedWorldDirection; // 0x108
	FRotator FixedWorldDirection; // 0x10c
};

struct UWidgetComponent : UMeshComponent {
	EWidgetSpace Space; // 0x4b0
	EWidgetTimingPolicy TimingPolicy; // 0x4b1
	UUserWidget* WidgetClass; // 0x4b8
	FIntPoint DrawSize; // 0x4c0
	bool bManuallyRedraw; // 0x4c8
	bool bRedrawRequested; // 0x4c9
	float RedrawTime; // 0x4cc
	FIntPoint CurrentDrawSize; // 0x4d8
	bool bDrawAtDesiredSize; // 0x4e0
	FVector2D Pivot; // 0x4e4
	bool bReceiveHardwareInput; // 0x4ec
	bool bWindowFocusable; // 0x4ed
	EWindowVisibility WindowVisibility; // 0x4ee
	bool bApplyGammaCorrection; // 0x4ef
	ULocalPlayer* OwnerPlayer; // 0x4f0
	FLinearColor BackgroundColor; // 0x4f8
	FLinearColor TintColorAndOpacity; // 0x508
	float OpacityFromTexture; // 0x518
	EWidgetBlendMode BlendMode; // 0x51c
	bool bIsTwoSided; // 0x51d
	bool TickWhenOffscreen; // 0x51e
	UBodySetup* BodySetup; // 0x520
	UMaterialInterface* TranslucentMaterial; // 0x528
	UMaterialInterface* TranslucentMaterial_OneSided; // 0x530
	UMaterialInterface* OpaqueMaterial; // 0x538
	UMaterialInterface* OpaqueMaterial_OneSided; // 0x540
	UMaterialInterface* MaskedMaterial; // 0x548
	UMaterialInterface* MaskedMaterial_OneSided; // 0x550
	UTextureRenderTarget2D* RenderTarget; // 0x558
	UMaterialInstanceDynamic* MaterialInstance; // 0x560
	bool bAddedToScreen; // 0x568
	bool bEditTimeUsable; // 0x569
	FName SharedLayerName; // 0x56c
	int32_t LayerZOrder; // 0x574
	EWidgetGeometryMode GeometryMode; // 0x578
	float CylinderArcAngle; // 0x57c
	ETickMode TickMode; // 0x580
	UUserWidget* Widget; // 0x5a8
};

struct ANatureEnvironmentVolume : AVolume {
	TWeakObjectPtr<ANatureController> NatureController; // 0x348
	int32_t Priority; // 0x350
	EEnvironmentVolumeType VolumeType; // 0x354
	float ReduceResistance; // 0x358
};

struct UNiagaraDataInterfaceVector2DCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
};

struct ACameraRig_Crane : AActor {
	float CranePitch; // 0x310
	float CraneYaw; // 0x314
	float CraneArmLength; // 0x318
	bool bLockMountPitch; // 0x31c
	bool bLockMountYaw; // 0x31d
	USceneComponent* TransformComponent; // 0x320
	USceneComponent* CraneYawControl; // 0x328
	USceneComponent* CranePitchControl; // 0x330
	USceneComponent* CraneCameraMount; // 0x338
};

struct UTextureLightProfile : UTexture2D {
	float Brightness; // 0x100
	float TextureMultiplier; // 0x104
};

struct UProceduralDiscToolProperties : UProceduralShapeToolProperties {
	float Radius; // 0x70
	int32_t RadialSlices; // 0x74
	int32_t RadialSubdivisions; // 0x78
};

struct UUI_Altar : USGUI {
	TWeakObjectPtr<ASGStructureAltar> BindAltar; // 0x2d8
	UVerticalBox* DeadlyGeneralVertical; // 0x2e0
	UVerticalBox* RestGeneralVertical; // 0x2e8
	UButton* AddFoodButton; // 0x2f0
	UButton* AddLifeCountButton; // 0x2f8
	UButton* ReleaseGeneralButton; // 0x300
	UButton* RebornGeneralButton; // 0x308
	UTextBlock* LeftFoodAmount; // 0x310
	UButton* CloseButton; // 0x318
	UAltarGeneralSlot* AltarGeneralSlotTemplate; // 0x320
	TArray<UAltarGeneralSlot*> GeneralSlotList; // 0x328
	FGuid SelectedGeneralGuid; // 0x340
	FGuid ReduceRebornGeneralGuid; // 0x350
	UTextBlock* OtherUsingText; // 0x360
	TWeakObjectPtr<USGInventoryComponent> BindInventory; // 0x368
	FDateTime FinalRebornTime; // 0x370
};

struct UToIntegerField : UFieldNodeInt {
	UFieldNodeFloat* FloatField; // 0xc0
};

struct UNiagaraDataInterfaceArrayQuat : UNiagaraDataInterfaceArray {
	TArray<FQuat> QuatData; // 0x50
};

struct UUI_ChangeName : USGUI {
	UTextBlock* OriginName; // 0x2f0
	UEditableTextBox* ChangeName; // 0x2f8
	UButton* Confirm; // 0x300
	UButton* Cancel; // 0x308
	char bForceChangeName : 1; // 0x310
};

struct AUIWSWaterBody : AActor {
	AUIWSManager* MyManager; // 0x310
	UDecalComponent* CausticsDecal; // 0x380
	bool UseHISM; // 0x389
	FVector HISMScaleOffset; // 0x38c
	bool CanUseGerstnerWave; // 0x3a0
	int32_t WaterBodyIndex; // 0x3a4
	float MaxWaveHeightOffset; // 0x3a8
	UWaterWavesBase* WaterWaves; // 0x3b0
	bool EpicWaterMaterials; // 0x3c8
	float CullDistance; // 0x3cc
	UMaterialInterface* WaterBodyMat; // 0x3d0
	UMaterialInterface* WaterBodyMatLOD1; // 0x3d8
	UMaterialInterface* WaterCustomBodyMat; // 0x3e0
	UMaterialInterface* WaterCustomBodyMatLOD1; // 0x3e8
	UMaterialInterface* WaterRiverMat; // 0x3f0
	UMaterialInterface* WaterRiverMatLOD1; // 0x3f8
	UMaterialParameterCollection* MPC_Water; // 0x400
	float FogIntensity; // 0x408
	float MaxDepth; // 0x40c
	float NearPlane; // 0x410
	float ScatteringAniso; // 0x414
	FLinearColor PPAbsorption; // 0x418
	FLinearColor PPAbsorptionDark; // 0x428
	FLinearColor FogAmbientColor; // 0x438
	FLinearColor FogAmbientColorDark; // 0x448
	FLinearColor FogScatterColor; // 0x458
	FLinearColor FogScatterColorDark; // 0x468
	float Wave_Intensity; // 0x478
	bool OverrideWaterMaterials; // 0x490
	UMaterialInterface* CustomWaterMaterial; // 0x498
	UMaterialInterface* CustomWaterMaterialDistant; // 0x4a0
	bool bIsInteractive; // 0x4a9
	bool bDisableAutomaticInteraction; // 0x4aa
	bool bDisableAutomaticInteractionXbox; // 0x4ab
	bool bDisableAutomaticInteractionPS4; // 0x4ac
	bool bDisableAutomaticInteractionNintendoSwitch; // 0x4ad
	bool bDisableAutomaticInteractionAndroid; // 0x4ae
	bool bDisableAutomaticInteractionIOS; // 0x4af
	int32_t MaxTileScale; // 0x4b0
	int32_t SimResMin; // 0x4b4
	bool bTieSimToFPS; // 0x4b8
	bool InteractOnDamage; // 0x4b9
	bool bLimitTickRate; // 0x4ba
	float TickRate; // 0x4bc
	float DamageScale; // 0x4c0
	FLinearColor WaterColor; // 0x4c8
	FLinearColor DeepOpacity; // 0x4d8
	FLinearColor ShallowOpacity; // 0x4e8
	float DepthTransitionDistance; // 0x4f8
	float UnderWaterBrightnessMult; // 0x4fc
	float ShallowEdgeFadeDistance; // 0x500
	float ShallowEdgeFadePower; // 0x504
	bool bEnableParticleOnDamage; // 0x508
	bool bEnableParticleOnCollision; // 0x509
	bool bOverrideParticleSettings; // 0x50a
	float InteractionEffectScaleMin; // 0x50c
	float InteractionEffectScaleMax; // 0x510
	UParticleSystem* InteractionEffect; // 0x518
	float DamageEffectScaleMin; // 0x520
	float DamageEffectScaleMax; // 0x524
	UParticleSystem* DamageEffect; // 0x528
	UTextureRenderTarget2D* activeheight0; // 0x560
	UTextureRenderTarget2D* activeheight1; // 0x568
	UTextureRenderTarget2D* activeheight2; // 0x570
	UTextureRenderTarget2D* activenormal; // 0x578
	UTextureRenderTarget2D* localheight0; // 0x580
	UTextureRenderTarget2D* localheight1; // 0x588
	UTextureRenderTarget2D* localheight2; // 0x590
	UTextureRenderTarget2D* localnormal; // 0x598
	UTextureRenderTarget2D* globalheight0; // 0x5a0
	UTextureRenderTarget2D* globalheight1; // 0x5a8
	UTextureRenderTarget2D* globalheight2; // 0x5b0
	UTextureRenderTarget2D* globalnormal; // 0x5b8
	UParticleSystem* DefaultSplashEffect; // 0x5e8
	UMaterialInstanceDynamic* WaterMID; // 0x5f0
	UMaterialInstanceDynamic* WaterMIDLOD1; // 0x5f8
	UMaterialInstanceDynamic* HeightSimInst; // 0x610
	UMaterialInstanceDynamic* ForceSplatInst; // 0x618
	UMaterialInstanceDynamic* ManualSplatInst; // 0x620
	UMaterialInstanceDynamic* ManualBoxSplatInst; // 0x628
	UMaterialInstanceDynamic* ComputeNormalInst; // 0x630
	UCanvas* Canvas; // 0x638
	FVector2D Size; // 0x640
	FDrawToRenderTargetContext Context; // 0x648
	UCanvas* CanvasMan; // 0x658
	FVector2D SizeMan; // 0x660
	FDrawToRenderTargetContext ContextMan; // 0x668
	bool ActivateCaustics; // 0x678
	UMaterialInterface* CausticsMat; // 0x688
	float CausticsStartHeight; // 0x690
	float CausticsDecalSizeZ; // 0x694
	FLinearColor EmisiveColor; // 0x698
	bool EnableRayTraceCaustics; // 0x6ac
};

struct UAttackRebound_AnimNotifyState : UAnimNotifyState {
	EAttackSocketType Enum_AttackSocketType; // 0x30
	FString AttackTag; // 0x38
	char bCloseAttackTrace : 1; // 0x48
	char IsOffHandWeapon : 1; // 0x48
	char IsKickAttack : 1; // 0x48
	char ClearAimState : 1; // 0x48
	float TriggerTime; // 0x4c
	TArray<FTransform> AttackAnimBoneData; // 0x50
};

struct ABrush : AActor {
	EBrushType BrushType; // 0x310
	FColor BrushColor; // 0x314
	int32_t PolyFlags; // 0x318
	char bColored : 1; // 0x31c
	char bSolidWhenSelected : 1; // 0x31c
	char bPlaceableFromClassBrowser : 1; // 0x31c
	char bNotForClientOrServer : 1; // 0x31c
	UModel* Brush; // 0x320
	UBrushComponent* BrushComponent; // 0x328
	char bInManipulation : 1; // 0x330
	TArray<FGeomSelection> SavedSelections; // 0x338
};

struct UPrimitiveComponent : USceneComponent {
	float MinDrawDistance; // 0x210
	float LDMaxDrawDistance; // 0x214
	float CachedMaxDrawDistance; // 0x218
	ESceneDepthPriorityGroup DepthPriorityGroup; // 0x21c
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x21d
	EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x21e
	ELightmapType LightmapType; // 0x21f
	char bUseMaxLODAsImposter : 1; // 0x220
	char bBatchImpostersAsInstances : 1; // 0x220
	char bNeverDistanceCull : 1; // 0x220
	char bDisallowAddToPhysicsScene : 1; // 0x220
	char bAlwaysCreatePhysicsState : 1; // 0x221
	char bGenerateOverlapEvents : 1; // 0x221
	char bMultiBodyOverlap : 1; // 0x221
	char bTraceComplexOnMove : 1; // 0x221
	char bReturnMaterialOnMove : 1; // 0x221
	char bOptimizeForceDynamicPhysicalState : 1; // 0x221
	char bUseViewOwnerDepthPriorityGroup : 1; // 0x221
	char bAllowCullDistanceVolume : 1; // 0x222
	char bHasMotionBlurVelocityMeshes : 1; // 0x222
	char bVisibleInReflectionCaptures : 1; // 0x222
	char bVisibleInRealTimeSkyCaptures : 1; // 0x222
	char bVisibleInRayTracing : 1; // 0x222
	char bRenderInMainPass : 1; // 0x222
	char bRenderInDepthPass : 1; // 0x222
	char bReceivesDecals : 1; // 0x222
	char bOwnerNoSee : 1; // 0x223
	char bOnlyOwnerSee : 1; // 0x223
	char bTreatAsBackgroundForOcclusion : 1; // 0x223
	char bUseAsOccluder : 1; // 0x223
	char bSelectable : 1; // 0x223
	char bForceMipStreaming : 1; // 0x223
	char bHasPerInstanceHitProxies : 1; // 0x223
	char CastShadow : 1; // 0x223
	char bAffectDynamicIndirectLighting : 1; // 0x224
	char bAffectDistanceFieldLighting : 1; // 0x224
	char bCastDynamicShadow : 1; // 0x224
	char bCastStaticShadow : 1; // 0x224
	char bCastVolumetricTranslucentShadow : 1; // 0x224
	char bCastContactShadow : 1; // 0x224
	char bSelfShadowOnly : 1; // 0x224
	char bCastFarShadow : 1; // 0x224
	char bCastInsetShadow : 1; // 0x225
	char bCastCinematicShadow : 1; // 0x225
	char bCastHiddenShadow : 1; // 0x225
	char bCastShadowAsTwoSided : 1; // 0x225
	char bLightAsIfStatic : 1; // 0x225
	char bLightAttachmentsAsGroup : 1; // 0x225
	char bExcludeFromLightAttachmentGroup : 1; // 0x225
	char bReceiveMobileCSMShadows : 1; // 0x225
	char bSingleSampleShadowFromStationaryLights : 1; // 0x226
	char bIgnoreRadialImpulse : 1; // 0x226
	char bIgnoreRadialForce : 1; // 0x226
	char bApplyImpulseOnDamage : 1; // 0x226
	char bReplicatePhysicsToAutonomousProxy : 1; // 0x226
	char bFillCollisionUnderneathForNavmesh : 1; // 0x226
	char AlwaysLoadOnClient : 1; // 0x226
	char AlwaysLoadOnServer : 1; // 0x226
	char bUseEditorCompositing : 1; // 0x227
	char bRenderCustomDepth : 1; // 0x227
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x22e
	ECanBeCharacterBase CanCharacterStepUpOn; // 0x230
	FLightingChannels LightingChannels; // 0x231
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x232
	int32_t CustomDepthStencilValue; // 0x234
	FCustomPrimitiveData CustomPrimitiveData; // 0x238
	FCustomPrimitiveData CustomPrimitiveDataInternal; // 0x248
	int32_t TranslucencySortPriority; // 0x260
	int32_t VisibilityId; // 0x264
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x268
	int8_t VirtualTextureLodBias; // 0x278
	int8_t VirtualTextureCullMips; // 0x279
	int8_t VirtualTextureMinCoverage; // 0x27a
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x27b
	float LpvBiasMultiplier; // 0x280
	float OverrideStepHeight; // 0x284
	float BoundsScale; // 0x298
	TArray<AActor*> MoveIgnoreActors; // 0x2b8
	TArray<UPrimitiveComponent*> MoveIgnoreComponents; // 0x2c8
	FBodyInstance BodyInstance; // 0x2e8
	FMulticastSparseDelegate OnComponentHit; // 0x448
	FMulticastSparseDelegate OnComponentBeginOverlap; // 0x449
	FMulticastSparseDelegate OnComponentEndOverlap; // 0x44a
	FMulticastSparseDelegate OnComponentWake; // 0x44b
	FMulticastSparseDelegate OnComponentSleep; // 0x44c
	FMulticastSparseDelegate OnBeginCursorOver; // 0x44e
	FMulticastSparseDelegate OnEndCursorOver; // 0x44f
	FMulticastSparseDelegate OnClicked; // 0x450
	FMulticastSparseDelegate OnReleased; // 0x451
	FMulticastSparseDelegate OnInputTouchBegin; // 0x452
	FMulticastSparseDelegate OnInputTouchEnd; // 0x453
	FMulticastSparseDelegate OnInputTouchEnter; // 0x454
	FMulticastSparseDelegate OnInputTouchLeave; // 0x455
	UPrimitiveComponent* LODParentPrimitive; // 0x470
};

struct UBakedOcclusionMapVisualizationProperties : UInteractiveToolPropertySet {
	float BaseGrayLevel; // 0x60
	float OcclusionMultiplier; // 0x64
};

struct UAISenseConfig_Hearing : UAISenseConfig {
	UAISense_Hearing* Implementation; // 0x48
	float HearingRange; // 0x50
	float LoSHearingRange; // 0x54
	char bUseLoSHearing : 1; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
};

struct UMovieSceneSkeletalAnimationSection : UMovieSceneSection {
	FMovieSceneSkeletalAnimationParams Params; // 0xe8
	UAnimSequence* AnimSequence; // 0x1c0
	UAnimSequenceBase* Animation; // 0x1c8
	float StartOffset; // 0x1d0
	float EndOffset; // 0x1d4
	float PlayRate; // 0x1d8
	char bReverse : 1; // 0x1dc
	FName SlotName; // 0x1e0
	FVector StartLocationOffset; // 0x1e8
	FRotator StartRotationOffset; // 0x1f4
	bool bMatchWithPrevious; // 0x200
	FName MatchedBoneName; // 0x204
	FVector MatchedLocationOffset; // 0x20c
	FRotator MatchedRotationOffset; // 0x218
	bool bMatchTranslation; // 0x224
	bool bMatchIncludeZHeight; // 0x225
	bool bMatchRotationYaw; // 0x226
	bool bMatchRotationPitch; // 0x227
	bool bMatchRotationRoll; // 0x228
};

struct AMaterialInstanceActor : AActor {
	TArray<AActor*> TargetActors; // 0x310
};

struct UInterpTrackEvent : UInterpTrack {
	TArray<FEventTrackKey> EventTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
	char bUseCustomEventName : 1; // 0x80
};

struct UMaterialExpressionBentNormalCustomOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct APlayerCameraManager : AActor {
	APlayerController* PCOwner; // 0x310
	USceneComponent* TransformComponent; // 0x318
	float DefaultFOV; // 0x328
	float DefaultOrthoWidth; // 0x330
	float DefaultAspectRatio; // 0x338
	FCameraCacheEntry CameraCache; // 0x380
	FCameraCacheEntry LastFrameCameraCache; // 0x980
	FTViewTarget ViewTarget; // 0xf80
	FTViewTarget PendingViewTarget; // 0x1590
	FCameraCacheEntry CameraCachePrivate; // 0x1bd0
	FCameraCacheEntry LastFrameCameraCachePrivate; // 0x21d0
	TArray<UCameraModifier*> ModifierList; // 0x27d0
	TArray<UCameraModifier*> DefaultModifiers; // 0x27e0
	float FreeCamDistance; // 0x27f0
	FVector FreeCamOffset; // 0x27f4
	FVector ViewTargetOffset; // 0x2800
	FMulticastInlineDelegate OnAudioFadeChangeEvent; // 0x2810
	TArray<AEmitterCameraLensEffectBase*> CameraLensEffects; // 0x2830
	UCameraModifier_CameraShake* CachedCameraShakeMod; // 0x2840
	UCameraAnimInst* AnimInstPool[0x8]; // 0x2848
	TArray<FPostProcessSettings> PostProcessBlendCache; // 0x2888
	TArray<UCameraAnimInst*> ActiveAnims; // 0x28a8
	TArray<UCameraAnimInst*> FreeAnims; // 0x28b8
	ACameraActor* AnimCameraActor; // 0x28c8
	char bIsOrthographic : 1; // 0x28d0
	char bDefaultConstrainAspectRatio : 1; // 0x28d0
	char bClientSimulatingViewTarget : 1; // 0x28d0
	char bUseClientSideCameraUpdates : 1; // 0x28d0
	char bGameCameraCutThisFrame : 1; // 0x28d1
	float ViewPitchMin; // 0x28d4
	float ViewPitchMax; // 0x28d8
	float ViewYawMin; // 0x28dc
	float ViewYawMax; // 0x28e0
	float ViewRollMin; // 0x28e4
	float ViewRollMax; // 0x28e8
	float ServerUpdateCameraTimeout; // 0x28f0
};

struct UMirrorTool : UMultiSelectionTool {
	UMirrorToolProperties* Settings; // 0x98
	UMirrorToolActionPropertySet* ToolActions; // 0xa0
	TArray<UDynamicMeshReplacementChangeTarget*> MeshesToMirror; // 0xa8
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xb8
	UConstructionPlaneMechanic* PlaneMechanic; // 0x110
};

struct UFoliageType_Actor : UFoliageType {
	AActor* ActorClass; // 0x3d8
	bool bShouldAttachToBaseComponent; // 0x3e0
};

struct USkinnedMeshComponent : UMeshComponent {
	USkeletalMesh* SkeletalMesh; // 0x4b8
	USkeletalMesh* SkeletalMeshSimple; // 0x4c0
	TWeakObjectPtr<USkinnedMeshComponent> MasterPoseComponent; // 0x4c8
	TArray<ESkinCacheUsage> SkinCacheUsage; // 0x4d0
	TArray<FVertexOffsetUsage> VertexOffsetUsage; // 0x4e0
	UPhysicsAsset* PhysicsAssetOverride; // 0x5e8
	int32_t ForcedLodModel; // 0x5f0
	int32_t MinLodModel; // 0x5f4
	float StreamingDistanceMultiplier; // 0x600
	TArray<FSkelMeshComponentLODInfo> LODInfo; // 0x610
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x644
	char bNoMeshPhysics : 1; // 0x645
	char bUseSimpleMesh : 1; // 0x645
	char bCloseBonesUpdate : 1; // 0x645
	char bSimulateAnimSwitch : 1; // 0x645
	char bOverrideMinLod : 1; // 0x647
	char bUseBoundsFromMasterPoseComponent : 1; // 0x647
	char bForceWireframe : 1; // 0x647
	char bDisplayBones : 1; // 0x647
	char bDisableMorphTarget : 1; // 0x647
	char bHideSkin : 1; // 0x648
	char bPerBoneMotionBlur : 1; // 0x648
	char bComponentUseFixedSkelBounds : 1; // 0x648
	char bConsiderAllBodiesForBounds : 1; // 0x648
	char bSyncAttachParentLOD : 1; // 0x648
	char bCanHighlightSelectedSections : 1; // 0x648
	char bRecentlyRendered : 1; // 0x648
	char bCastCapsuleDirectShadow : 1; // 0x648
	char bCastCapsuleIndirectShadow : 1; // 0x649
	char bCPUSkinning : 1; // 0x649
	char bEnableUpdateRateOptimizations : 1; // 0x649
	char bDisplayDebugUpdateRateOptimizations : 1; // 0x649
	char bRenderStatic : 1; // 0x649
	char bIgnoreMasterPoseComponentLOD : 1; // 0x649
	char bCachedLocalBoundsUpToDate : 1; // 0x64a
	char bForceMeshObjectUpdate : 1; // 0x64a
	float CapsuleIndirectShadowMinVisibility; // 0x64c
	FBoxSphereBounds CachedWorldSpaceBounds; // 0x664
	FMatrix CachedWorldToLocalTransform; // 0x680
};

struct UUI_TrafficGoods : USGUI {
	UTextBlock* MenuNameText; // 0x2d8
	UTextBlock* RefreshTimeText; // 0x2e0
	UTextBlock* RefreshCapitalTimeText; // 0x2e8
	UTextBlock* RefreshPriceRatioTimeText; // 0x2f0
	UUniformGridPanel* MainGridPannel; // 0x2f8
	UButton* LeftPageButton; // 0x300
	UTextBlock* PageText; // 0x308
	UButton* RightPageButton; // 0x310
	UTextBlock* OwnerCapitalNumText; // 0x318
	UButton* ButtonCancel; // 0x320
	UTextBlock* CancelText; // 0x328
	UTextBlock* ConfirmText; // 0x330
	UButton* ButtonConfirm; // 0x338
	UUI_TrafficGoodsSlot* TrafficGoodsSlotClass; // 0x340
};

struct UAnimSet : UObject {
	char bAnimRotationOnly : 1; // 0x28
	TArray<FName> TrackBoneNames; // 0x30
	TArray<FAnimSetMeshLinkup> LinkupCache; // 0x40
	TArray<char> BoneUseAnimTranslation; // 0x50
	TArray<char> ForceUseMeshTranslation; // 0x60
	TArray<FName> UseTranslationBoneNames; // 0x70
	TArray<FName> ForceMeshTranslationBoneNames; // 0x80
	FName PreviewSkelMeshName; // 0x90
	FName BestRatioSkelMeshName; // 0x98
};

struct UN_VehiclePerkSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> VehiclePerkQualityBrush[0x6]; // 0x260
	TSoftObjectPtr<UTexture2D> VehiclePerkSlotBrush[0x5]; // 0x350
	FLinearColor VehiclePerkQualityOutlineColor[0x6]; // 0x418
	FSlateColor ACModifyAddTextColor; // 0x478
	FSlateColor ACModifyReduceTextColor; // 0x4a0
	FSlateColor ACModifyNormalTextColor; // 0x4c8
	TSoftObjectPtr<UTexture2D> ACModifyAddTexture; // 0x4f0
	TSoftObjectPtr<UTexture2D> ACModifyReduceTexture; // 0x518
	UBorder* PerkBGBorder; // 0x540
	UImage* PerkImg; // 0x548
	UImage* PerkEquipImg; // 0x550
	UImage* PerkRecessiveImg; // 0x558
	UImage* PerkQualityImg; // 0x560
	UTextBlock* PerkNameText; // 0x568
	UTextBlock* TbPerkACModifyHP; // 0x570
	UImage* ImgPerkACModifyHP; // 0x578
	UTextBlock* TbPerkACModifySP; // 0x580
	UImage* ImgPerkACModifySP; // 0x588
	UTextBlock* TbPerkACModifyWeight; // 0x590
	UImage* ImgPerkACModifyWeight; // 0x598
	UTextBlock* TbPerkACModifySpeed; // 0x5a0
	UImage* ImgPerkACModifySpeed; // 0x5a8
	UTextBlock* TbPerkACModifyOperate; // 0x5b0
	UImage* ImgPerkACModifyOperate; // 0x5b8
	UTextBlock* TbPerkDescription; // 0x5c0
};

struct UUI_AnimalFarmRecord : USGUI {
	int32_t RecordCount; // 0x2d8
	UCanvasPanel* LoadingCanvas; // 0x2e0
	UScrollBox* RecordScrollBox; // 0x2e8
	URichTextBlock* RtbRecord; // 0x2f0
	UButton* CloseButton; // 0x2f8
	TArray<FAnimalFarmRecord> CurRecords; // 0x300
	int32_t CurRecordBeginIndex; // 0x310
	int32_t CurRecordEndIndex; // 0x314
};

struct UAchievementConditionWidget : UUserWidget {
	double LastUpdateProgressTime; // 0x270
	float UpdateProgressTimeInterval; // 0x278
	bool bAccomplished; // 0x27c
};

struct UWBP_N_GenericConfirmationDialog_C : UUI_GenericConfirmationDialog {
	UImage* Image_79; // 0x400
	UImage* Image_137; // 0x408
	UImage* Image_227; // 0x410
};

struct ABP_LightningEffect_C : ALightningEffect {
	FPointerToUberGraphFrame UberGraphFrame; // 0x698
	UNiagaraComponent* LightningNiagaraComponent; // 0x6a0
};

struct UAnimNotifyState_Ladder : UAnimNotifyState {
	ASGCharacter* CharacterOwner; // 0x360
	UAnimMontage* PlayMontage; // 0x368
};

struct UWaterMeshComponent : UMeshComponent {
	int32_t ForceCollapseDensityLevel; // 0x4b0
	float TileSize; // 0x4b4
	FIntPoint ExtentInTiles; // 0x4b8
	UMaterialInterface* FarDistanceMaterial; // 0x4c0
	float FarDistanceMeshExtent; // 0x4c8
	FVector RTWorldLocation; // 0x4cc
	FVector RTWorldSizeVector; // 0x4d8
	int32_t TessellationFactor; // 0x5c8
	float LODScale; // 0x5cc
};

struct UMaterialExpressionMaterialAttributeLayers : UMaterialExpression {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
	FMaterialAttributesInput Input; // 0x58
	FMaterialLayersFunctions DefaultLayers; // 0x70
	TArray<UMaterialExpressionMaterialFunctionCall*> LayerCallers; // 0xb0
	int32_t NumActiveLayerCallers; // 0xc0
	TArray<UMaterialExpressionMaterialFunctionCall*> BlendCallers; // 0xc8
	int32_t NumActiveBlendCallers; // 0xd8
	bool bIsLayerGraphBuilt; // 0xdc
};

struct UProxyLODMeshSimplificationSettings : UDeveloperSettings {
	FName ProxyLODMeshReductionModuleName; // 0x38
};

struct UAIPerceptionStimuliSourceComponent : UActorComponent {
	char bAutoRegisterAsSource : 1; // 0xc0
	TArray<UAISense*> RegisterAsSourceForSenses; // 0xc8
};

struct ALevelSequenceMediaController : AActor {
	ALevelSequenceActor* Sequence; // 0x318
	UMediaComponent* MediaComponent; // 0x320
	float ServerStartTimeSeconds; // 0x328
};

struct UARMeshComponent : UARComponent {
	FARMeshUpdatePayload ReplicatedPayload; // 0x290
};

struct UStableFeedSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> BGBorder_NormalTexture; // 0x260
	TSoftObjectPtr<UTexture2D> BGBorder_HoverTexture; // 0x288
	TSoftObjectPtr<UTexture2D> BGBorder_SelectTexture; // 0x2b0
	TSoftObjectPtr<UTexture2D> CastratedTexture; // 0x2d8
	TSoftObjectPtr<UTexture2D> SexFemaleTexture; // 0x300
	TSoftObjectPtr<UTexture2D> SexMaleTexture; // 0x328
	TSoftObjectPtr<UTexture2D> SystemTrainerTexture; // 0x350
	TSoftObjectPtr<UTexture2D> DefaultVehicleTexture; // 0x378
	TMap<EGeneralsQualityType, float> QualityCorrectionToQualityType; // 0x3a0
	TSoftObjectPtr<UTexture2D> VehicleQualityTexture[0x6]; // 0x3f0
	TSoftObjectPtr<UTexture2D> SystemTrainerQualityTexture[0x3]; // 0x4e0
	TSoftObjectPtr<UTexture2D> SystemTrainerSpecialTypeTexture[0x3]; // 0x558
	TSoftObjectPtr<UTexture2D> TrainerQualityTexture[0x6]; // 0x5d0
	TSoftObjectPtr<UTexture2D> TrainerSpecialTypeTexture[0x4]; // 0x6c0
	FText DisableClickTexts[0x2b]; // 0x760
	FText PregnancyToolTipText; // 0xb68
	TSoftObjectPtr<UTexture2D> DBTypeStatusTexture; // 0xb80
	TSoftObjectPtr<UTexture2D> GrowingStatusTexture; // 0xba8
	TSoftObjectPtr<UTexture2D> MatingStatusTexture; // 0xbd0
	TSoftObjectPtr<UTexture2D> PregnancyStatusTexture; // 0xbf8
	TSoftObjectPtr<UTexture2D> TrainingStatusTexture; // 0xc20
	TSoftObjectPtr<UTexture2D> StarvingStatusTexture; // 0xc48
	TSoftObjectPtr<UTexture2D> RidingStatusTexture; // 0xc70
	TSoftObjectPtr<UTexture2D> RecoveryHPStatusTexture; // 0xc98
	TSoftObjectPtr<UTexture2D> DiffServerStatusTexture; // 0xcc0
	TSoftObjectPtr<UTexture2D> UnknownStatusTexture; // 0xce8
	TSoftObjectPtr<UTexture2D> WorkTypeStatusTexture; // 0xd10
	TSoftObjectPtr<UTexture2D> TamingStatusTexture; // 0xd38
	TSoftObjectPtr<UTexture2D> MateCDStatusTexture; // 0xd60
	TSoftObjectPtr<UTexture2D> ReborningStatusTexture; // 0xd88
	TSoftObjectPtr<UTexture2D> DeathTypeStatusTexture; // 0xdb0
	UBorder* BGBorder; // 0xdd8
	UBorder* FGBorder; // 0xde0
	UTextBlock* DisableClickTB; // 0xde8
	UImage* VehicleStatusIcon; // 0xdf0
	UImage* VehicleQualityBG; // 0xdf8
	UImage* VehicleIconImg; // 0xe00
	UButton* VehicleDetailBtn; // 0xe08
	UCanvasPanel* MiddlePanel; // 0xe10
	UTextBlock* NameText; // 0xe18
	UTextBlock* LevelText; // 0xe20
	UImage* SexImg; // 0xe28
	UProgressBar* SchedulePB; // 0xe30
	UTextBlock* ScheduleText; // 0xe38
	UCanvasPanel* TrainerPanel; // 0xe40
	UBorder* TrainerIconBG; // 0xe48
	UCanvasPanel* TrainerQualityPanel; // 0xe50
	UImage* TrainerQualityBG; // 0xe58
	UImage* TrainerSpecialTypeBG; // 0xe60
	UImage* TrainerIconImg; // 0xe68
	UImage* BindTrainerImg; // 0xe70
	UButton* StopTrainBtn; // 0xe78
	UButton* TakeTrainRewardBtn; // 0xe80
	UButton* AccRebornBtn; // 0xe88
	FBaseAnimalChunkData ChunkVehicleData; // 0xea0
	FStableLinkAnimalNetData LinkAnimalNetData; // 0xf50
	FText VehicleStatusTipText; // 0xf80
	TWeakObjectPtr<ASG_AnimalVehicleCharacter> BindVehicleChar; // 0xf98
	char bUseCloudData : 1; // 0xfa0
};

struct UAnimInstance : UObject {
	USkeleton* CurrentSkeleton; // 0x28
	ERootMotionMode RootMotionMode; // 0x30
	char bUseMultiThreadedAnimationUpdate : 1; // 0x31
	char bUsingCopyPoseFromMesh : 1; // 0x31
	char bReceiveNotifiesFromLinkedInstances : 1; // 0x31
	char bPropagateNotifiesToLinkedInstances : 1; // 0x31
	char bQueueMontageEvents : 1; // 0x31
	FMulticastInlineDelegate OnMontageBlendingOut; // 0x38
	FMulticastInlineDelegate OnMontageStarted; // 0x48
	FMulticastInlineDelegate OnMontageEnded; // 0x58
	FMulticastInlineDelegate OnAllMontageInstancesEnded; // 0x68
	FAnimNotifyQueue NotifyQueue; // 0x100
	TArray<FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170
};

struct UBTTask_DoRoadPath : UBTTask_AnimalBase {
	float BrakingDistance; // 0xd0
};

struct UInterpTrackBoolProp : UInterpTrack {
	TArray<FBoolTrackKey> BoolTrack; // 0x70
	FName PropertyName; // 0x80
};

struct UParticleModuleMeshRotation_Seeded : UParticleModuleMeshRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UMaterialInstance : UMaterialInterface {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0x90
	UMaterialInterface* Parent; // 0xd0
	char bHasStaticPermutationResource : 1; // 0xd8
	char bOverrideSubsurfaceProfile : 1; // 0xd8
	TArray<FScalarParameterValue> ScalarParameterValues; // 0xe0
	TArray<FVectorParameterValue> VectorParameterValues; // 0xf0
	TArray<FTextureParameterValue> TextureParameterValues; // 0x100
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0x110
	TArray<FFontParameterValue> FontParameterValues; // 0x120
	FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0x130
	FStaticParameterSet StaticParameters; // 0x148
	FMaterialCachedParameters CachedLayerParameters; // 0x188
	TArray<UObject*> CachedReferencedTextures; // 0x328
};

struct UWaterSplineComponent : USplineComponent {
	FWaterSplineCurveDefaults WaterSplineDefaults; // 0x580
	FWaterSplineCurveDefaults PreviousWaterSplineDefaults; // 0x590
};

struct UPaperSpriteComponent : UMeshComponent {
	UPaperSprite* SourceSprite; // 0x4b0
	UMaterialInterface* MaterialOverride; // 0x4b8
	FLinearColor SpriteColor; // 0x4c0
};

struct UFindSessionsCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct USGGameDataAllNpc : UObject {
	TArray<ABaseCharacter*> CheatNPC; // 0x28
};

struct USGLocalPlayer : ULocalPlayer {
	FMulticastInlineDelegate OnGetServersFinish; // 0x268
	FMulticastInlineDelegate OnServerPingFinish; // 0x278
	FMulticastInlineDelegate OnGetOfficialSealInfosFinish; // 0x288
	FMulticastInlineDelegate OnGetOccupyDetailInfoFinish; // 0x298
	FMulticastInlineDelegate OnGetSteamTicket; // 0x2a8
	TArray<FGameServerInfo> LogicGameServerInfo; // 0x2b8
	TArray<FGameServerInfo> LobbyServerInfoTotal; // 0x2c8
	TArray<FGameServerInfo> LobbyServerInfo; // 0x2d8
	TArray<FOfficalSealInfo> OfficalSealInfos; // 0x2e8
};

struct UMagicLeapPlanesComponent : USceneComponent {
	TArray<EMagicLeapPlaneQueryFlags> QueryFlags; // 0x208
	UBoxComponent* SearchVolume; // 0x218
	int32_t MaxResults; // 0x220
	float MinHolePerimeter; // 0x224
	float MinPlaneArea; // 0x228
	EMagicLeapPlaneQueryType QueryType; // 0x22c
	float SimilarityThreshold; // 0x230
	FMulticastInlineDelegate OnPlanesQueryResult; // 0x238
	FMulticastInlineDelegate OnPersistentPlanesQueryResult; // 0x248
};

struct UEditUVIslandsTool : UMeshSurfacePointTool {
	UExistingMeshMaterialProperties* MaterialSettings; // 0xc8
	UMaterialInstanceDynamic* CheckerMaterial; // 0xd0
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0xd8
	UPolygonSelectionMechanic* SelectionMechanic; // 0xe0
	UMultiTransformer* MultiTransformer; // 0xf0
};

struct AMeleeWeapon : ASGWeapon {
	USceneComponent* SceneRootComponent; // 0x7888
	UStaticMeshComponent* WeaponStaticMesh; // 0x7890
	UBoxComponent* BlockCollision; // 0x7898
	UBoxComponent* ShieldBlockArrowCollision; // 0x78a0
	UParticleSystemComponent* TrailParticleComponent; // 0x78a8
	UStaticMeshComponent* WeaponOreStaticMesh; // 0x78b0
	UParticleSystemComponent* WeaponOreParticleComponent; // 0x78b8
	char bUseCustomFlag : 1; // 0x78c0
	TArray<FName> CustomFlagMaterialNames; // 0x78c8
	float FlagImageModifies[0x5]; // 0x78d8
	UMaterialInstanceDynamic* DMI_FlagImage; // 0x78f0
	UTextureRenderTarget2D* RT_FlagImage; // 0x78f8
	FString FlagImageString; // 0x7900
	float NearlyHitDistanceTolerance; // 0x7918
	int32_t AttackHitsMaxNumber; // 0x791c
	int32_t AttackFoliageHitsMaxNumber; // 0x7920
	char bClientUseNewTrace : 1; // 0x7924
	char bCanAttackRebound : 1; // 0x7924
	UCurveFloat* AttackReboundCurve; // 0x7928
	int32_t DeltaTraceNumber; // 0x7930
	float BodyTraceSphereRadius; // 0x7934
	ETrailState Enum_TrailState; // 0x7938
	TArray<ECollisionChannel> AttackReboundIgnoreQuerys; // 0x7940
	FRuntimeFloatCurve AttackReboundRateCurve; // 0x7950
	FRuntimeFloatCurve RiderAttackReboundRateCurve; // 0x79d8
	TMap<EAimDirection, FWeaponBlockCollisionInfo> TMap_BlockCollisionOffset; // 0x7a60
	TMap<EAimDirection, FWeaponBlockCollisionInfo> TMap_OffBlockCollisionOffset; // 0x7ab0
	TMap<EAimDirection, FWeaponBlockCollisionInfo> TMap_RiderBlockCollisionOffset; // 0x7b00
	TMap<EAimDirection, FWeaponBlockCollisionInfo> TMap_RiderOffBlockCollisionOffset; // 0x7b50
	TArray<FWeaponWorldTraceInfo> Server_LastMeleeWeaponTraces; // 0x7ba0
	TArray<FWeaponWorldTraceInfo> Server_CurrentMeleeWeaponTraces; // 0x7bb0
	TArray<FWeaponWorldTraceInfo> Server_LastBodyTraces; // 0x7bc0
	TArray<FWeaponWorldTraceInfo> Server_CurrentBodyTraces; // 0x7bd0
	FTimerHandle UpdateWeaponTraceTimer; // 0x7be0
	FTimerHandle UpdateWeaponReboundTraceTimer; // 0x7be8
	FAttackInfo Struct_CurrentAttackInfo; // 0x7bf0
	char bIsAttackRebounding : 1; // 0x7c50
	char bCauserDamage : 1; // 0x7c50
	char bSuccessCauserDamage : 1; // 0x7c50
	EAttackSocketType Enum_AttackSocketType; // 0x7c51
	float WeaponBlood; // 0x7c74
	TArray<UMaterialInstanceDynamic*> Mat_Weapon; // 0x7c78
	TMap<float, float> ShieldBlockedArrowMultiAdd; // 0x7c98
	float ShowDeltaTime; // 0x7cf8
	ENiagaraWeaponType NiagaraWeaponType; // 0x7d14
};

struct UDatasmithVREDSceneImportData : UDatasmithFBXSceneImportData {
	bool bMergeNodes; // 0x48
	bool bOptimizeDuplicatedNodes; // 0x49
	bool bImportMats; // 0x4a
	FString MatsPath; // 0x50
	bool bImportVar; // 0x60
	bool bCleanVar; // 0x61
	FString VarPath; // 0x68
	bool bImportLightInfo; // 0x78
	FString LightInfoPath; // 0x80
	bool bImportClipInfo; // 0x90
	FString ClipInfoPath; // 0x98
};

struct USGBuffComponent : UActorComponent {
	TArray<USGBuff*> BuffArray; // 0xc0
	TArray<FStructureBuffEntry> AllowedBuff; // 0xd0
	int32_t ReplicatedBuffMaxAmount; // 0xe0
	FMulticastInlineDelegate OnAddBuffEvent; // 0xe8
	FMulticastInlineDelegate OnUpdateBuffEvent; // 0xf8
	FMulticastInlineDelegate OnRemoveBuffEvent; // 0x108
	FMulticastInlineDelegate OnUpdateReplicatedEvent; // 0x118
	TMap<UObject*, UParticleSystemComponent*> BuffParticleMap; // 0x128
	ABaseCharacter* CacheBaseCharacter; // 0x198
};

struct USequenceCameraShakeSequencePlayer : UObject {
	UObject* BoundObjectOverride; // 0x480
	UMovieSceneSequence* Sequence; // 0x488
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x490
};

struct UDistributionFloatConstant : UDistributionFloat {
	float Constant; // 0x38
};

struct UWidgetAnimationDelegateBinding : UDynamicBlueprintBinding {
	TArray<FBlueprintWidgetAnimationDelegateBinding> WidgetAnimationDelegateBindings; // 0x28
};

struct UConditionSlot : UUserWidget {
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x260
	UImage* ConditionImage; // 0x268
	UProgressBar* LevelProgress; // 0x270
	UTextBlock* ConditionName; // 0x278
	UTextBlock* LevelText; // 0x280
	float MaxAmount; // 0x288
	ESPType SlotType; // 0x28c
	int32_t Index; // 0x290
	TArray<TSoftObjectPtr<UTexture2D>> STRImageTexture2D; // 0x298
	TArray<TSoftObjectPtr<UTexture2D>> DEXImageTexture2D; // 0x2a8
	TArray<TSoftObjectPtr<UTexture2D>> STAImageTexture2D; // 0x2b8
	TArray<TSoftObjectPtr<UTexture2D>> INTImageTexture2D; // 0x2c8
	TArray<TSoftObjectPtr<UTexture2D>> CHAImageTexture2D; // 0x2d8
	FText OneHandedWeaponsText; // 0x2e8
	FText ShieldsText; // 0x300
	FText TowHandedWeaponsText; // 0x318
	FText PolearmsText; // 0x330
	FText HeavyArmorsText; // 0x348
	FText ThrowingText; // 0x360
	FText ArcheryText; // 0x378
	FText CrossbowsText; // 0x390
	FText RidingText; // 0x3a8
	FText LightArmorsText; // 0x3c0
	FText PhysiqueText; // 0x3d8
	FText MiningText; // 0x3f0
	FText LumberingText; // 0x408
	FText HuntingText; // 0x420
	FText PlantingText; // 0x438
	FText HandMakingText; // 0x450
	FText SiegeWorkingText; // 0x468
	FText BuildingText; // 0x480
	FText ArmorerText; // 0x498
	FText HerbText; // 0x4b0
	FText TamingText; // 0x4c8
	FText LeaderShipText; // 0x4e0
	FText RecruitText; // 0x4f8
	FText TrainingText; // 0x510
	FText RenownText; // 0x528
};

struct UPaletteWidget : UUserWidget {
	UColorTemplate* ColorTemplateClass; // 0x260
	TArray<FVector2D> ColorTemplates; // 0x268
	UUniformGridPanel* UGPColorTemplate; // 0x288
	UColorSelector* ColorSelector; // 0x290
};

struct UParticleModuleVectorFieldRotation : UParticleModuleVectorFieldBase {
	FVector MinInitialRotation; // 0x30
	FVector MaxInitialRotation; // 0x3c
};

struct UPlayerSoundData : USGSoundDatabase {
	FName BrakingOnHorseSound; // 0x88
	FName StartingOnHorseSound; // 0x90
	TMap<EGeneralShortCutSlotType, FName> IssueOrderSound; // 0x98
};

struct UUI_Perk : USGUI {
	UCurveTable* SKillPointsConsumeTable; // 0x2d8
	UCurveTable* SKillMasteryMultipleTable; // 0x2e0
	UCurveTable* SKillTable; // 0x2e8
	UCurveTable* AddSKillTable; // 0x2f0
	UPerkLevelDivisionLine* PerkLevelDivisionLineClass; // 0x2f8
	UAddSkillExpPanel* AddSkillExpPanelClass; // 0x300
	UPerkPanel* RpbSTPanel; // 0x308
	UPerkPanel* RpbAGPanel; // 0x310
	UPerkPanel* RpbWIPanel; // 0x318
	UPerkPanel* RpbENPanel; // 0x320
	UPerkPanel* RpbCHPanel; // 0x328
	UTextBlock* TbPublicSkillExp; // 0x330
	UTextBlock* TbPerkPoint; // 0x338
	UTextBlock* TbMasteryPoint; // 0x340
	TMap<ESkillType, FSkillLocalData> LocalSkillValueMap; // 0x388
	UCanvasPanel* SkillLevelLineCanvas; // 0x3e0
	UCanvasPanel* MainCanvas; // 0x3e8
	UCanvasPanel* SkillTipsCanvas; // 0x3f0
	UTextBlock* TbDescription; // 0x3f8
	UTextBlock* TbSkillExp; // 0x400
	UTextBlock* TbSkillMultiple; // 0x408
	UScrollBox* SkillTipsScrollBox; // 0x410
	UImage* ImgSkillIcon; // 0x418
	UTextBlock* TbGetSkillExpType; // 0x420
	UTextBlock* CapitalText; // 0x428
	UTextBlock* TbWeekFree; // 0x430
	UTextBlock* TbItemFree; // 0x438
	int32_t CurPerkPoint; // 0x440
	UCanvasPanelSlot* SkillLevelLineCanvasSlot; // 0x448
	UAddSkillExpPanel* AddSkillExpPanel; // 0x450
	ESkillType CurShowTipsSkillType; // 0x458
};

struct UUserDefinedStruct : UScriptStruct {
	EUserDefinedStructureStatus Status; // 0xc0
	FGuid Guid; // 0xc4
};

struct UUI_Season : USGUI {
	UUI_SeasonPassport* SeasonPassportPage; // 0x2d8
	UTextBlock* SeasonInfoText; // 0x2e0
	UUI_SeasonQuest* WBP_SeasonQuest; // 0x2e8
	UUI_SeasonQuest* WBP_SeasonWeekQuest; // 0x2f0
	UUI_SeasonShop* WBP_SeasonShop; // 0x2f8
	UButton* BtnSeason; // 0x300
	UButton* BtnSeasonQuest; // 0x308
	UButton* BtnSeasonWeekQuest; // 0x310
	UButton* BtnSeasonReward; // 0x318
};

struct UGameMapsSettings : UObject {
	FString LocalMapOptions; // 0x28
	FSoftObjectPath TransitionMap; // 0x38
	bool bUseSplitscreen; // 0x50
	ETwoPlayerSplitScreenType TwoPlayerSplitscreenLayout; // 0x51
	EThreePlayerSplitScreenType ThreePlayerSplitscreenLayout; // 0x52
	EFourPlayerSplitScreenType FourPlayerSplitscreenLayout; // 0x53
	bool bOffsetPlayerGamepadIds; // 0x54
	FSoftClassPath GameInstanceClass; // 0x58
	FSoftObjectPath GameDefaultMap; // 0x70
	FSoftObjectPath ServerDefaultMap; // 0x88
	FSoftClassPath GlobalDefaultGameMode; // 0xa0
	FSoftClassPath GlobalDefaultServerGameMode; // 0xb8
	TArray<FGameModeName> GameModeMapPrefixes; // 0xd0
	TArray<FGameModeName> GameModeClassAliases; // 0xe0
};

struct UMaterialExpressionDotProduct : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UGameSessionSettings : UObject {
	int32_t MaxSpectators; // 0x28
	int32_t MaxPlayers; // 0x2c
	char bRequiresPushToTalk : 1; // 0x30
};

struct UNiagaraEmitter : UObject {
	bool bLocalSpace; // 0x28
	bool bDeterminism; // 0x29
	int32_t RandomSeed; // 0x2c
	EParticleAllocationMode AllocationMode; // 0x30
	int32_t PreAllocationCount; // 0x34
	FNiagaraEmitterScriptProperties UpdateScriptProps; // 0x38
	FNiagaraEmitterScriptProperties SpawnScriptProps; // 0x60
	ENiagaraSimTarget SimTarget; // 0x88
	FBox FixedBounds; // 0x8c
	int32_t MinDetailLevel; // 0xa8
	int32_t MaxDetailLevel; // 0xac
	FNiagaraDetailsLevelScaleOverrides GlobalSpawnCountScaleOverrides; // 0xb0
	FNiagaraPlatformSet Platforms; // 0xc8
	FNiagaraEmitterScalabilityOverrides ScalabilityOverrides; // 0xf8
	char bInterpolatedSpawning : 1; // 0x108
	char bFixedBounds : 1; // 0x108
	char bUseMinDetailLevel : 1; // 0x108
	char bUseMaxDetailLevel : 1; // 0x108
	char bOverrideGlobalSpawnCountScale : 1; // 0x108
	char bRequiresPersistentIDs : 1; // 0x108
	char bCombineEventSpawn : 1; // 0x108
	float MaxDeltaTimePerTick; // 0x10c
	uint32_t DefaultShaderStageIndex; // 0x110
	uint32_t MaxUpdateIterations; // 0x114
	TSet<uint32_t> SpawnStages; // 0x118
	char bSimulationStagesEnabled : 1; // 0x168
	char bDeprecatedShaderStagesEnabled : 1; // 0x168
	char bLimitDeltaTime : 1; // 0x168
	FString UniqueEmitterName; // 0x170
	TArray<UNiagaraRendererProperties*> RendererProperties; // 0x180
	TArray<FNiagaraEventScriptProperties> EventHandlerScriptProps; // 0x190
	TArray<UNiagaraSimulationStageBase*> SimulationStages; // 0x1a0
	UNiagaraScript* GPUComputeScript; // 0x1b0
	TArray<FName> SharedEventGeneratorIds; // 0x1b8
};

struct UAssetMappingTable : UObject {
	TArray<FAssetMapping> MappedAssets; // 0x28
};

struct UDatasmithLightComponentTemplate : UDatasmithObjectTemplate {
	char bVisible : 1; // 0x30
	char CastShadows : 1; // 0x34
	char bUseTemperature : 1; // 0x34
	char bUseIESBrightness : 1; // 0x34
	float Intensity; // 0x38
	float Temperature; // 0x3c
	float IESBrightnessScale; // 0x40
	FLinearColor LightColor; // 0x44
	UMaterialInterface* LightFunctionMaterial; // 0x58
	UTextureLightProfile* IESTexture; // 0x60
};

struct USystemTimeTimecodeProvider : UTimecodeProvider {
	FFrameRate FrameRate; // 0x30
	bool bGenerateFullFrame; // 0x38
	bool bUseHighPerformanceClock; // 0x39
};

struct UWBP_KeySettingRadioButton_C : UUI_RadioButton {
	FPointerToUberGraphFrame UberGraphFrame; // 0x540
	UButton* BtnBg; // 0x548
	UTextBlock* TbTitle; // 0x550
	FText Title; // 0x558
};

struct AVectorFieldVolume : AActor {
	UVectorFieldComponent* VectorFieldComponent; // 0x310
};

struct UWBP_SettingComboBoxItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UCanvasPanel* CanvasPanel_53; // 0x370
	UComboBoxString* SettingComboBox; // 0x378
	UTextBlock* TbTitle; // 0x380
	FText Title; // 0x388
};

struct UMovieSceneColorSection : UMovieSceneSection {
	FMovieSceneFloatChannel RedCurve; // 0xe8
	FMovieSceneFloatChannel GreenCurve; // 0x188
	FMovieSceneFloatChannel BlueCurve; // 0x228
	FMovieSceneFloatChannel AlphaCurve; // 0x2c8
};

struct UMotoSynthSource : UObject {
	bool bConvertTo8Bit; // 0x28
	float DownSampleFactor; // 0x2c
	FRuntimeFloatCurve RPMCurve; // 0x30
	TArray<float> SourceData; // 0xb8
	TArray<int16_t> SourceDataPCM; // 0xc8
	int32_t SourceSampleRate; // 0xd8
	TArray<FGrainTableEntry> GrainTable; // 0xe0
};

struct UDatasmithStaticMeshIFCImportData : UDatasmithStaticMeshImportData {
	FString SourceGlobalId; // 0x28
};

struct ULevelUpAnimationNotifyWidget : UAnimationNotifyWidget {
	UImage* BackImg; // 0x278
	UTextBlock* LevelNum; // 0x280
	UWidgetAnimation* LevelUpAnim; // 0x288
	ULevelUpColWidget* LevelUpInfoCol; // 0x290
	ULevelUpColWidget* PerkPointCol; // 0x298
	ULevelUpColWidget* MasteryPointCol; // 0x2a0
	ULevelUpColWidget* CraftPointCol; // 0x2a8
	float AnimPlaySpeed; // 0x2b0
};

struct ULevelSequenceDirector : UObject {
	ULevelSequencePlayer* Player; // 0x28
};

struct UIntSerialization : UObject {
	uint16_t UnsignedInt16Variable; // 0x28
	uint32_t UnsignedInt32Variable; // 0x2c
	uint64_t UnsignedInt64Variable; // 0x30
	int8_t SignedInt8Variable; // 0x38
	int16_t SignedInt16Variable; // 0x3a
	int64_t SignedInt64Variable; // 0x40
	char UnsignedInt8Variable; // 0x48
	int32_t SignedInt32Variable; // 0x4c
};

struct UMaterialExpressionMax : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UGridSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
	int32_t Row; // 0x4c
	int32_t RowSpan; // 0x50
	int32_t Column; // 0x54
	int32_t ColumnSpan; // 0x58
	int32_t Layer; // 0x5c
	FVector2D Nudge; // 0x60
};

struct UParticleModuleSpawnBase : UParticleModule {
	char bProcessSpawnRate : 1; // 0x30
	char bProcessBurstList : 1; // 0x30
};

struct UARSaveWorldAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct ANiagaraPreviewGrid : AActor {
	UNiagaraSystem* System; // 0x310
	ENiagaraPreviewGridResetMode ResetMode; // 0x318
	UNiagaraPreviewAxis* PreviewAxisX; // 0x320
	UNiagaraPreviewAxis* PreviewAxisY; // 0x328
	ANiagaraPreviewBase* PreviewClass; // 0x330
	float SpacingX; // 0x338
	float SpacingY; // 0x33c
	int32_t NumX; // 0x340
	int32_t NumY; // 0x344
	TArray<UChildActorComponent*> PreviewComponents; // 0x348
};

struct UParticleModuleBeamSource : UParticleModuleBeamBase {
	Beam2SourceTargetMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	char bSourceAbsolute : 1; // 0x3c
	FRawDistributionVector Source; // 0x40
	char bLockSource : 1; // 0x88
	Beam2SourceTargetTangentMethod SourceTangentMethod; // 0x8c
	FRawDistributionVector SourceTangent; // 0x90
	char bLockSourceTangent : 1; // 0xd8
	FRawDistributionFloat SourceStrength; // 0xe0
	char bLockSourceStength : 1; // 0x110
};

struct UBTTask_PlaySound : UBTTaskNode {
	USoundCue* SoundToPlay; // 0x70
};

struct UBTTask_RotateToFaceBBEntry : UBTTask_BlackboardBase {
	float Precision; // 0x98
};

struct UBTTask_MoveAroundBlockade : UBTTask_AnimalBase {
	FBlackboardKeySelector BBKey_IsMoveAroundBlockade; // 0xd0
	char bUseNavPathForAttack : 1; // 0xf8
};

struct UNotificationSlot : USGUI {
	EMsgType MessageType; // 0x2f8
	ENotifyMessageType NotifyMessageType; // 0x2f9
	UObject* SGObject; // 0x3a8
	FVector2D ImageSize; // 0x3b0
	UImage* bg; // 0x3b8
	UImage* TextureImage; // 0x3c0
	UTextBlock* LeftNotifyText; // 0x3c8
	UTextBlock* NotifyText; // 0x3d0
	FLinearColor BattleUpTextColor; // 0x3d8
	bool IsBattleWorld; // 0x3e8
};

struct UUMGSequencePlayer : UObject {
	UWidgetAnimation* Animation; // 0x410
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x420
};

struct UBTDecorator_TagCooldown : UBTDecorator {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
	bool bActivatesCooldown; // 0x75
};

struct UUI_Gate : UUserWidget {
	FString GateName; // 0x260
	TArray<FName> RegionIDList; // 0x270
	FName OccupiedGuildID; // 0x280
};

struct UABP_MenuCharacter_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_Root AnimGraphNode_Root; // 0x2c8
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2f8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x378
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x3a8
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK_2; // 0x460
	FAnimNode_TwoBoneIK AnimGraphNode_TwoBoneIK; // 0x640
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_5; // 0x820
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_4; // 0x928
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_3; // 0xa30
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0xb38
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0xc40
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0xd48
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0xd68
	UAnimSequence* PlayingAnimSequence; // 0xd88
};

struct UUserWidget : UWidget {
	FLinearColor ColorAndOpacity; // 0x110
	FDelegate ColorAndOpacityDelegate; // 0x120
	FSlateColor ForegroundColor; // 0x130
	FDelegate ForegroundColorDelegate; // 0x158
	FMulticastInlineDelegate OnVisibilityChanged; // 0x168
	FMargin Padding; // 0x190
	TArray<UUMGSequencePlayer*> ActiveSequencePlayers; // 0x1a0
	UUMGSequenceTickManager* AnimationTickManager; // 0x1b0
	TArray<UUMGSequencePlayer*> StoppedSequencePlayers; // 0x1b8
	TArray<FNamedSlotBinding> NamedSlotBindings; // 0x1c8
	UWidgetTree* WidgetTree; // 0x1d8
	int32_t Priority; // 0x1e0
	char bSupportsKeyboardFocus : 1; // 0x1e4
	char bIsFocusable : 1; // 0x1e4
	char bStopAction : 1; // 0x1e4
	char bHasScriptImplementedTick : 1; // 0x1e4
	char bHasScriptImplementedPaint : 1; // 0x1e4
	EWidgetTickFrequency TickFrequency; // 0x1f0
	UInputComponent* InputComponent; // 0x1f8
	TArray<FAnimationEventBinding> AnimationCallbacks; // 0x200
};

struct UGuildGroupSlot : UUserWidget {
	UButton* AddGroupButton; // 0x260
	UTextBlock* GroupIndexText; // 0x268
	UTextBlock* GroupNameText; // 0x270
	UTextBlock* GroupMemberText; // 0x278
	UButton* ChangeNameButton; // 0x280
	UButton* DeleteGroupButton; // 0x288
	UUI_ModifyText* AddGuildGroupUIOverride; // 0x290
	UUI_ModifyText* ModifyGuildGroupUIOverride; // 0x298
	UUI_GenericConfirmationDialog* ConfirmDeleteGroupUIOverride; // 0x2a0
};

struct USphereReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadius; // 0x280
	float CaptureDistanceScale; // 0x284
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x288
};

struct UNavigationSystemV1 : UNavigationSystemBase {
	ANavigationData* MainNavData; // 0x28
	ANavigationData* AbstractNavData; // 0x30
	FName DefaultAgentName; // 0x38
	TSoftClassPtr<UObject> CrowdManagerClass; // 0x40
	char bAutoCreateNavigationData : 1; // 0x68
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x68
	char bAllowClientSideNavigation : 1; // 0x68
	char bShouldDiscardSubLevelNavData : 1; // 0x68
	char bTickWhilePaused : 1; // 0x68
	char bSupportRebuilding : 1; // 0x68
	char bInitialBuildingLocked : 1; // 0x68
	char bSkipAgentHeightCheckWhenPickingNavData : 1; // 0x69
	char bGenerateNavigationOnlyAroundNavigationInvokers : 1; // 0x69
	float ActiveTilesUpdateInterval; // 0x6c
	int32_t ActiveTilesUpdateBucketNum; // 0x70
	ENavDataGatheringModeConfig DataGatheringMode; // 0x74
	float DirtyAreaWarningSizeThreshold; // 0x78
	TArray<FNavDataConfig> SupportedAgents; // 0x80
	FNavAgentSelector SupportedAgentsMask; // 0x90
	TArray<ANavigationData*> NavDataSet; // 0x98
	TArray<ANavigationData*> NavDataRegistrationQueue; // 0xa8
	FMulticastInlineDelegate OnNavDataRegisteredEvent; // 0xc8
	FMulticastInlineDelegate OnNavigationGenerationFinishedDelegate; // 0xd8
	FNavigationSystemRunMode OperationMode; // 0x220
	float DirtyAreasUpdateFreq; // 0x1624
};

struct UParticleModule : UObject {
	char bSpawnModule : 1; // 0x28
	char bUpdateModule : 1; // 0x28
	char bFinalUpdateModule : 1; // 0x28
	char bUpdateForGPUEmitter : 1; // 0x28
	char bCurvesAsColor : 1; // 0x28
	char b3DDrawMode : 1; // 0x28
	char bSupported3DDrawMode : 1; // 0x28
	char bEnabled : 1; // 0x28
	char bEditable : 1; // 0x29
	char LODDuplicate : 1; // 0x29
	char bSupportsRandomSeed : 1; // 0x29
	char bRequiresLoopingNotification : 1; // 0x29
	char LODValidity; // 0x2a
};

struct APrefabActor : AActor {
	UPrefabComponent* PrefabComponent; // 0x310
};

struct ALightningEmitter : AActor {
	UBillboardComponent* MainBillboard; // 0x310
	UBillboardComponent* SourcePoint; // 0x318
	UBillboardComponent* TargetPoint; // 0x320
	bool bAutoActivate; // 0x328
	bool bLoop; // 0x329
	float LoopDuration; // 0x32c
	FLightningAttachment SourceAttachment; // 0x330
	FLightningAttachment TargetAttachment; // 0x390
	FLightningParams LightningParams; // 0x3f0
	FBranchingParams BranchingParams; // 0x4a8
	FEmissionParams RootEmissionParams; // 0x4d8
	FEmissionParams BranchEmissionParams; // 0x4ec
	float DisplacementMult; // 0x500
	float TimeMultiplier; // 0x504
	bool bUseSeparateThread; // 0x508
	bool bGenerateHitEvents; // 0x509
	EHitReaction HitReaction; // 0x50a
	bool bGenerateOverlapEvents; // 0x50b
	TMap<ECollisionChannel, ECollisionResponse> CollisionResponses; // 0x510
	TArray<AActor*> IgnoredActors; // 0x560
	bool bDrawBranches; // 0x570
	bool bDrawCurveWidth; // 0x571
	bool bCurveCustomColor; // 0x572
	FColor CurveColor; // 0x574
	FColor AttachmentVolumesColor; // 0x578
	FMulticastSparseDelegate EventOnRootSpawned; // 0x57c
	TArray<ALightningEffect*> LightningsArray; // 0x580
	ALightningEffect* LightningEffectClass; // 0x590
};

struct UAchievementWriteCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UMultiLineEditableTextBox : UTextLayoutWidget {
	FText Text; // 0x128
	FText HintText; // 0x140
	FDelegate HintTextDelegate; // 0x158
	FEditableTextBoxStyle WidgetStyle; // 0x168
	FTextBlockStyle TextStyle; // 0x960
	bool bIsReadOnly; // 0xbd0
	bool AllowContextMenu; // 0xbd1
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0xbd2
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xbd3
	USlateWidgetStyleAsset* Style; // 0xbd8
	FSlateFontInfo Font; // 0xbe0
	FLinearColor ForegroundColor; // 0xc38
	FLinearColor BackgroundColor; // 0xc48
	FLinearColor ReadOnlyForegroundColor; // 0xc58
	FMulticastInlineDelegate OnTextChanged; // 0xc68
	FMulticastInlineDelegate OnTextCommitted; // 0xc78
};

struct UAISense_Blueprint : UAISense {
	UUserDefinedStruct* ListenerDataType; // 0x80
	TArray<UAIPerceptionComponent*> ListenerContainer; // 0x88
	TArray<UAISenseEvent*> UnprocessedEvents; // 0x98
};

struct AGlobalMapManager : AActor {
	float GetServerListInfoInvertal; // 0x310
	TArray<int32_t> OfficalLogicGameServers; // 0x338
	TArray<FRequestOccupyDetailInfo> OccupyDetailInfoRequestList; // 0x348
	int32_t MaxCityGroupId; // 0x358
	FGameServerInfo SiteServerInfo; // 0x360
};

struct UUI_StructureOccupyShelterSlot : UUserWidget {
	TWeakObjectPtr<ASGStructureOccupy> RemoteActor; // 0x260
	USGUI* RootSGUI; // 0x268
	FProtectionRequirement ProtectionReq; // 0x270
	int32_t ProtectionGuildActivityPoint; // 0x2c0
	int32_t ProtectionGAPImageIndex; // 0x2c4
	UTextBlock* ProtectTitleText; // 0x2c8
	URichTextBlock* ProtectTimeRichText; // 0x2d0
	UHorizontalBox* ResourceHorizontalBox; // 0x2d8
	UUI_StructureOccupyItemSlot* StructureOccupyItemSlotClass; // 0x2e0
	UButton* ProtectButton; // 0x2e8
	UTextBlock* ProtectButtonText; // 0x2f0
	UBorder* ProtectBorder; // 0x2f8
	FSlateBrush ProtectBrush; // 0x300
	FSlateBrush UnProtectBrush; // 0x388
	UButton* BuyProtectButton; // 0x410
};

struct UAbilityTask_WaitGameplayTagAdded : UAbilityTask_WaitGameplayTag {
	FMulticastInlineDelegate Added; // 0xa8
};

struct UBTTask_GameplayTaskBase : UBTTaskNode {
	char bWaitForGameplayTask : 1; // 0x70
};

struct UBlackboardComponent : UActorComponent {
	UBrainComponent* BrainComp; // 0xc0
	UBlackboardData* DefaultBlackboardAsset; // 0xc8
	UBlackboardData* BlackboardAsset; // 0xd0
	TArray<UBlackboardKeyType*> KeyInstances; // 0xf8
};

struct ABP_RT_Quality_Parameters_C : ASGRTXQuality {
	FPointerToUberGraphFrame UberGraphFrame; // 0x320
	UPostProcessComponent* RTX_PostProcess; // 0x328
	USceneComponent* DefaultSceneRoot; // 0x330
	FString Enable Reflection; // 0x338
	FString Enable AO; // 0x348
	FString Enable Shadow; // 0x358
	FString Enable Translucensy; // 0x368
	FString Enable Translucency Height Fog; // 0x378
	FString Enable Translucency Shadows; // 0x388
	FString Enable Refraction; // 0x398
	FString Translucency Max Roughness; // 0x3a8
	FString Max Refraction Rays; // 0x3b8
	FString Evaluate Materials in Shadow; // 0x3c8
	FString Shadow Enable Two Sided Geometry; // 0x3d8
	FString Enable Height Fog in Reflection; // 0x3e8
	FString Reflection Sort Materials; // 0x3f8
	FString Enable Reflection Shadow; // 0x408
	FString Reflection Max Roughness; // 0x418
	bool DebugPreview; // 0x428
	FString Use Texture LOD; // 0x430
	FString Reflection Screen Percentage; // 0x440
	FVector Box Reletive Scale; // 0x450
	bool Hidden in Game; // 0x45c
	FString Normal Bias; // 0x460
	FString Debug Force Opaque; // 0x470
	FString Debug Force Full Build; // 0x480
	FString Debug Disable Triangle Cull; // 0x490
	FString Debug Force Build Mode; // 0x4a0
	FString Reflection Max Ray Distance; // 0x4b0
	FString Reflection Min Ray Distance; // 0x4c0
	FString Reflection Max Bounces; // 0x4d0
	FString Reflection SPP; // 0x4e0
	FString Shadow SPP; // 0x4f0
	FString Enable Reflection Denoiser; // 0x500
	FString Enable Shadow Denoiser; // 0x510
	Enum_RT_Quality_Preset Enum_RT_QualitySwitch; // 0x520
	FString GI type; // 0x528
	FString Enable GI Denoiser; // 0x538
	FString GI EvalSkyLight; // 0x548
	FString GI MaxBounce; // 0x558
	FString GI MaxRayDistance; // 0x568
	FString GI SPP; // 0x578
	FString GI Screen Percentage; // 0x588
	FString GI UseRussianRoulette ; // 0x598
	FString Enable RT SkyLight; // 0x5a8
	FString Enable SkyLight Denoiser; // 0x5b8
	FString SkyLight Enable Two Sided Geomtry; // 0x5c8
	FString SkyLight MaxRay Distance; // 0x5d8
	FString SkyLight SPP; // 0x5e8
	FString Reflection Enable Materials; // 0x5f8
	FVeryHigh Custom_Preset; // 0x610
	FHigh Reflection+Shadow+AO+Translucency+Caustics; // 0x19a0
	FMedium Reflection+Shadow+AO+Translucency+GI; // 0x2d30
	FFilm Reflection+Shadow+AO+Translucency; // 0x40c0
	FLow Reflection+Shadow+AO; // 0x5450
	FXbox Reflection Only; // 0x67e0
	FPS5 Shadow+AO; // 0x7b70
	FDisable Disable; // 0x8f00
	FString RT Enable Reflection Capture ; // 0xa290
	FString Enable Shader Cache; // 0xa2a0
	FString AO Enable Material; // 0xa2b0
	FString AO Enable Two Sided Geometry; // 0xa2c0
	FString PSO Cache Size; // 0xa2d0
	FString Enable Landscape Detect Texture Streaming; // 0xa2e0
	FString Enable Landscape LOD UpdateEveryFrame; // 0xa2f0
	FString Enable Instanced Static Mesh; // 0xa300
	FString Enable Instanced Static Meshes Culling; // 0xa310
	FString Instanced Static Meshes Culling Radius; // 0xa320
	FString Shadow Max Batch Size; // 0xa330
	FString GI Diffuse Threshold; // 0xa340
	FString Shadow Denoiser Max Batch Size; // 0xa350
	FString Enable Landscape In RT; // 0xa360
	FString RTX Switch; // 0xa370
	FString Enable Reflection Test Roughness; // 0xa380
	float UseShaderWPO; // 0xa390
	FString Reflection Sky Light Contribution; // 0xa398
	FString GI Sort Materials; // 0xa3a8
	FString GI Enable Two Sided Geometry; // 0xa3b8
	FString Final Gather Distance; // 0xa3c8
	FString Enable Hybrid Translucency; // 0xa3d8
	FString Hybrid Translucency DepthThreshold ; // 0xa3e8
	FString Hybrid Translucency Layers; // 0xa3f8
	FString Hybrid Translucency Support; // 0xa408
	FString Lighting Max Lights; // 0xa418
	FString Lighting Max Shadow Lights; // 0xa428
	FString Lighting Miss Shader; // 0xa438
	FString Shadow Max Lights; // 0xa448
	FString Shadow Max Denoised Lights ; // 0xa458
	FString Translucency Mask ; // 0xa468
	FString SkyLight Enable Materials; // 0xa478
	FString  Half Res Hybrid Translucency; // 0xa488
	FString Shadows Support Translucency; // 0xa498
	FString Support Light Function; // 0xa4a8
	FString Sharp Shadow Fall Back; // 0xa4b8
	FString Light Channel Support; // 0xa4c8
	FString Translucency Roughness Multiplier ; // 0xa4d8
	FString Reflections Roughness Multiplier ; // 0xa4e8
	FString Hybrid Reflection; // 0xa4f8
	FString Per-Light Shadow Casting; // 0xa508
	FString ParallelMeshBatchSize; // 0xa518
	FString BuildRayTracingMeshForCaustics; // 0xa528
	FString Exclude Translucents From Shadows ; // 0xa538
	FString Auto Instance ; // 0xa548
	FString Enable SSGI; // 0xa558
	FString Half Res SSGI; // 0xa568
	FString SSGI Quality; // 0xa578
	FString Parallel Mesh Batch Setup ; // 0xa588
	FString Batch Materials ; // 0xa598
	FString Enable Mesh Caustics; // 0xa5a8
	FString Water Caustics Type; // 0xa5b8
	FString Water Caustics Refractive Intensity ; // 0xa5c8
	FString Water Caustics Reflective Intensity ; // 0xa5d8
	FString Water Caustics Fresnel Base Reflect Fraction ; // 0xa5e8
	FString Water Caustics Map Size X  ; // 0xa5f8
	FString Water Caustics Map Size Y; // 0xa608
	FString Water Caustics Num Denoise Passes ; // 0xa618
	FString Water Caustics Min Reflection Ray Distance ; // 0xa628
	FString Water Caustics Max Reflection Ray Distance ; // 0xa638
	FString Water Caustics Min Refraction Ray Distance ; // 0xa648
	FString Water Caustics Max Refraction Ray Distance ; // 0xa658
	FString Water Caustics Rect Light Temporal Weight ; // 0xa668
	FString Mesh Caustics Resolution ; // 0xa678
	FString Mesh Caustics Intensity ; // 0xa688
	FString Water Caustics Buffer Scale ; // 0xa698
	FString Mesh Caustics Buffer Scale ; // 0xa6a8
	FString Mesh Caustics Temporal Strength ; // 0xa6b8
	FString Mesh Caustics Jitter ; // 0xa6c8
	FString Mesh Caustics Enable Dispersion ; // 0xa6d8
	FString Mesh Caustics Translucent Reflection Mode; // 0xa6e8
	FString Mesh Caustics Max Trace Depth ; // 0xa6f8
	FString Mesh Caustics Adaptive Photon Size ; // 0xa708
	FString Mesh Caustics Enable Temporal Filter ; // 0xa718
	FString Mesh Caustics Adaptive Smooth ; // 0xa728
	FString Mesh Caustics Adaptive Update Speed ; // 0xa738
	FString Mesh Caustics Adaptive Variance Gain ; // 0xa748
	FString Mesh Caustics Fixed Light ; // 0xa758
	FString Mesh Caustics Max Intensity ; // 0xa768
	FString Translucency Enable Absorption ; // 0xa778
	FString Mesh Caustics Soft Caustics Sample ; // 0xa788
	FString Water Caustics Refract Back Face Culling Threshold ; // 0xa798
	FString Water Caustics Reflect Back Face Culling Threshold ; // 0xa7a8
	FString Water Caustics Map Cascades ; // 0xa7b8
	FString Water Caustics Map Force Level ; // 0xa7c8
	FString Water Caustics Map Cascade Scale ; // 0xa7d8
	FString Water Caustics Show Photon ; // 0xa7e8
	FString Water Caustics Photon Scale; // 0xa7f8
	FString Mesh Caustics Enable Advanced Soft Caustics ; // 0xa808
	FString Mesh Caustics Mid Cull Color Threshold ; // 0xa818
	FString Mesh Caustics Final Cull Color Threshold ; // 0xa828
	FString Water Caustics Cascade Sampling Offset X ; // 0xa838
	FString Water Caustics Cascade Sampling Offset Y; // 0xa848
	FString Water Caustics Cascade Sampling UVScale X ; // 0xa858
	FString Water Caustics Cascade Sampling UVScale Y ; // 0xa868
	FString Sharpness; // 0xa878
	FString Binary Search Order; // 0xa888
	FString Quality; // 0xa898
	FString DLSS Enable; // 0xa8a8
	FString Reflections Enable TAA Before DLSS ; // 0xa8b8
	FString Translucency Enable TAA Before DLSS ; // 0xa8c8
	FString GI Max Light Count ; // 0xa8d8
	FString AO SPP; // 0xa8e8
	FString GI Denoiser Type; // 0xa8f8
	FString GI Apply AO; // 0xa908
	FString GI Denoiser Color Clamp; // 0xa918
	FString GI Denoiser Normal Tolerance; // 0xa928
	FString Spatial Normal Tolerance; // 0xa938
	bool Enable RTX Parameter Override based on DLSS status; // 0xa948
	bool Enable Override From UI; // 0xa949
	FString Particle Reapply TAA after DLSS; // 0xa950
	FString Refraction Background Sample Fallback ; // 0xa960
	FString GI Denoise History Length; // 0xa970
	FString Spatial Filter Iteration; // 0xa980
	FString DIstance Field AO; // 0xa990
	FString DIstance Field GI; // 0xa9a0
	FString Distance Field Shadow; // 0xa9b0
	FString Distance Fields; // 0xa9c0
	FString Translucency Ignore Backface Opacity; // 0xa9d0
	FString Use Scene Light Dir; // 0xa9e0
	FString Enable Volumetric Shadow; // 0xa9f0
	FString Absorption Force Shading On Opaque Objects; // 0xaa00
	FString Mesh Caustics Max Ray Distance; // 0xaa10
	FString Mesh Caustics Temporal Color Tolerance; // 0xaa20
	FString GI Diffuse Boost; // 0xaa30
	FString Reflected Translucency Mode; // 0xaa40
	FString Reflected Translucency Max Bounces; // 0xaa50
	FString Reflected Translucency Transmission Threshold; // 0xaa60
	FString Half Res Refraction; // 0xaa70
	FString AO Denoiser History Convolution Sample Count ; // 0xaa80
	FString Shadow PrioritizeDirectional; // 0xaa90
	FString Frames Until Feature Desturction; // 0xaaa0
	FString Dilate Motion Vectors; // 0xaab0
	FString Reflections TAA; // 0xaac0
	FString Water Reflections TAA; // 0xaad0
	FString Instanced Static Meshes Culling Angle; // 0xaae0
	FPostProcessSettings RTX Post Process Settings; // 0xaaf0
	float RTX Post Process Weight; // 0xb050
	FString Enable Translucency in Reflection; // 0xb058
	bool Unbound; // 0xb068
	float RTX Post Process Priority; // 0xb06c
	FString FinalGather UseReservoirResampling; // 0xb070
	FString GI Metalic Support; // 0xb080
	FString GI Denoiser Spatial Filter Type; // 0xb090
	FString GI Denoiser Use SH; // 0xb0a0
	FString GI Denoiser SH Sharpness; // 0xb0b0
	FString ATrous Depth Tolerance ; // 0xb0c0
	FString Final Gather SkyLight Intensity ; // 0xb0d0
	FString Final Gather SkyLight IndirectMultiplier ; // 0xb0e0
	FString Instanced Static Meshes Evaluate WPO; // 0xb0f0
	FString Instanced Static Meshes Simulation Count; // 0xb100
	FString Shadow UseBiasForSkipWPOEval; // 0xb110
	FString Shadow MaxBiasForInexactGeometry; // 0xb120
	FString Enable Ray Tracing Culling; // 0xb130
	FString Ray Tracing Culling Angle; // 0xb140
	FString Ray Tracing Culling Radius; // 0xb150
	FString Sky Light Screen Percentage; // 0xb160
	FString FinalGather Iterations ; // 0xb170
	FString FinalGather Filter Width; // 0xb180
	FString GI Firefly Suppression; // 0xb190
	FString Reflections EnableTwoSidedGeometry ; // 0xb1a0
	FString GeometryCache; // 0xb1b0
	FString StaticMeshes; // 0xb1c0
	FString StaticMeshes Enable WPO ; // 0xb1d0
	FString StaticMeshes Enable WPO Culling; // 0xb1e0
	FString StaticMeshes WPO Culling Radius ; // 0xb1f0
	FString SkeletalMeshes ; // 0xb200
	FString ProceduralMeshes ; // 0xb210
	FString NiagaraMeshes; // 0xb220
	FString NiagaraRibbons; // 0xb230
	FString NiagaraSprites; // 0xb240
	FString GI Directional Light; // 0xb250
	FString GI Point Light; // 0xb260
	FString GI Rect Light; // 0xb270
	FString GI Sky Light; // 0xb280
	FString GI Spot Light; // 0xb290
	FString Shadows Directional; // 0xb2a0
	FString Shadows Point; // 0xb2b0
	FString Shadows Rect; // 0xb2c0
	FString Shadows Spot; // 0xb2d0
	FString AO UseBiasForSkipWPOEval ; // 0xb2e0
	FString AO MaxBiasForInexactGeometry ; // 0xb2f0
	FString GI Reservoir Update Interval ; // 0xb300
	FString Final Gather Normal From Depth; // 0xb310
	FString Final Gather Max Reuse Weight; // 0xb320
	FString Final Gather Aggressive Reservoir Reuse ; // 0xb330
	FString GIDenoise ATrous Filter Width; // 0xb340
	FString WaterCaustics ReflectiveNormalScale ; // 0xb350
	FString WaterCaustics RefractiveNormalScale ; // 0xb360
	USGGameUserSettings* SGGameUserSettings; // 0xb370
	bool CachebForceClose; // 0xb378
};

struct UChaosSolverSettings : UDeveloperSettings {
	FSoftClassPath DefaultChaosSolverActorClass; // 0x40
};

struct USoundNodeDoppler : USoundNode {
	float DopplerIntensity; // 0x48
	bool bUseSmoothing; // 0x4c
	float SmoothingInterpSpeed; // 0x50
};

struct AAudioVolume : AVolume {
	float Priority; // 0x348
	char bEnabled : 1; // 0x34c
	FReverbSettings Settings; // 0x350
	FInteriorSettings AmbientZoneSettings; // 0x370
	TArray<FAudioVolumeSubmixSendSettings> SubmixSendSettings; // 0x398
	TArray<FAudioVolumeSubmixOverrideSettings> SubmixOverrideSettings; // 0x3a8
};

struct UTextureLODSettings : UObject {
	TArray<FTextureLODGroup> TextureLODGroups; // 0x28
};

struct USpringArmComponent : USceneComponent {
	float TargetArmLength; // 0x208
	FVector SocketOffset; // 0x20c
	FVector TargetOffset; // 0x218
	float ProbeSize; // 0x224
	ECollisionChannel ProbeChannel; // 0x228
	char bDoCollisionTest : 1; // 0x22c
	char bUsePawnControlRotation : 1; // 0x22c
	char bInheritPitch : 1; // 0x22c
	char bInheritYaw : 1; // 0x22c
	char bInheritRoll : 1; // 0x22c
	char bEnableCameraLag : 1; // 0x22c
	char bEnableCameraRotationLag : 1; // 0x22c
	char bUseCameraLagSubstepping : 1; // 0x22c
	char bDrawDebugLagMarkers : 1; // 0x22d
	float CameraLagSpeed; // 0x230
	float CameraRotationLagSpeed; // 0x234
	float CameraLagMaxTimeStep; // 0x238
	float CameraLagMaxDistance; // 0x23c
};

struct USGCharacterMovementComponent : UCharacterMovementComponent {
	float ClimbFriction; // 0xb50
	char bAccelerationFollowsRotation : 1; // 0xb54
	float MinAcceleration; // 0xb58
	char bRequestedMoveWithMaxSpeedOverride : 1; // 0xb5c
	float AdditiveNavCheckDistance; // 0xb60
	bool bLimitMoveOnNav; // 0xb64
	char bEnableUpdateRateOptimizations : 1; // 0xb65
	char bClientEnableUpdateRateOptimizations : 1; // 0xb65
	TMap<int32_t, int32_t> FrequencyToSkipUpdateMap; // 0xb68
	char bDisplayDebugUpdateRateOptimizations : 1; // 0xbb8
	float LostDeltaTime; // 0xbbc
	float ServerDeltaTimeTolerance; // 0xbe0
	char bFixMoveUpdatedTolerance : 1; // 0xbe4
	ENavMeshMovementMode NavMeshWalkingMode; // 0xc01
	ENavMeshLimitBoundaryMode NavMeshLimitBoundaryMode; // 0xc02
	FVector2D NavMeshWalkingSlideRateRange; // 0xc04
	float NavMeshWalkingEnterInterval; // 0xc0c
	int32_t NavMeshWalkingAllowLeaveToleranceNumber; // 0xc10
	TArray<float> LeavePointRadiusInNavMesh; // 0xc18
	char bUseFindTeleportSpotEx : 1; // 0xc28
	char bSetNavWalkingPhysics : 1; // 0xc28
	char bNavWalkingCheckPath : 1; // 0xc28
	char bSwimSinkToBottom : 1; // 0xc40
	float SwimSinkToBottomSpeed; // 0xc44
	char bCanSwimMove : 1; // 0xc48
	char bResolvePenetrationByAbove : 1; // 0xc48
	float OverlapCollisionShapeRadiusMul; // 0xc4c
	float ExtraSweepHeight; // 0xc50
	ABaseCharacter* BaseCharacterOwner; // 0xc68
};

struct UAbilityTask_ApplyRootMotionJumpForce : UAbilityTask_ApplyRootMotion_Base {
	FMulticastInlineDelegate OnFinish; // 0xc0
	FMulticastInlineDelegate OnLanded; // 0xd0
	FRotator Rotation; // 0xe0
	float Distance; // 0xec
	float Height; // 0xf0
	float Duration; // 0xf4
	float MinimumLandedTriggerTime; // 0xf8
	bool bFinishOnLanded; // 0xfc
	UCurveVector* PathOffsetCurve; // 0x100
	UCurveFloat* TimeMappingCurve; // 0x108
};

struct UUI_GenericMultiItemDialog : USGUI {
	FGenericMultiItemParam BindGenericMultiItemParams; // 0x2e8
	UButton* AcceptButton; // 0x350
	UButton* CancelButton; // 0x358
	UTextBlock* TitleTextBlock; // 0x360
	UTextBlock* DescriptionText; // 0x368
	UTextBlock* AcceptButtonTextBlock; // 0x370
	UCanvasPanel* ItemCheckPanel; // 0x378
	UUniformGridPanel* ItemGrid; // 0x380
	UScrollBox* ItemCheckScrollBox; // 0x388
	int32_t CurRowCounts; // 0x390
	UGenericMultiItemSlot* CheckItemTemplate; // 0x398
	TArray<UGenericMultiItemSlot*> CheckItemSlotList; // 0x3a0
	TArray<FGenericMultiItem> MultiItems; // 0x3b0
	EMultiChooseItemsType ItemFilterType; // 0x3c0
	FText TitleText[0x4]; // 0x3c8
	FText DesText[0x4]; // 0x428
	FText EmptyDesText[0x4]; // 0x488
};

struct USGCraftPerkGroup : UObject {
	FText CPGName; // 0x28
	FText CPGDescription; // 0x40
	TSoftObjectPtr<UTexture2D> CPGTexture; // 0x58
	TSoftObjectPtr<UTexture2D> CPGCircleBg; // 0x80
	int32_t CPGTypeIndex; // 0xa8
	ECraftPerkTimes CPGTimes; // 0xac
	int32_t RequiredCharacterLevel; // 0xb0
	int32_t RequiredCraftPoints; // 0xb4
	FCraftEntries CraftRequirement; // 0xb8
	int32_t RequireCopper; // 0xd8
	TArray<FPerkItemRequirement> RequireItems; // 0xe0
	char bHasLearned : 1; // 0xf0
	char bCanLearned : 1; // 0xf0
	char bHideInCraftPerkUI : 1; // 0xf0
	char bHideInCraftPerkUIMainLand : 1; // 0xf0
	int32_t RequireGuildLevel; // 0xf4
	int32_t GuildExperience; // 0xf8
	int32_t GuildCapital; // 0xfc
	bool NeedCheckDLC; // 0x100
	TArray<int32_t> DLCList; // 0x108
	int32_t Rows; // 0x118
	int32_t Column; // 0x11c
	TArray<USGCraftPerk*> CraftPerks; // 0x120
};

struct USGGameDataInteractiveImageData : UObject {
	TMap<EInteractiveMenus, FSoftObjectPath> InteractiveSelectedImage; // 0x28
	TMap<int32_t, FSoftObjectPath> InteractiveSelectedMulImage; // 0x78
	TMap<EInteractiveMenus, FSoftObjectPath> InteractiveUnSelectedImage; // 0xc8
	TMap<int32_t, FSoftObjectPath> InteractiveUnSelectedMulImage; // 0x118
};

struct USpectatorPawnMovement : UFloatingPawnMovement {
	char bIgnoreTimeDilation : 1; // 0x160
};

struct UEdgeLoopInsertionProperties : UInteractiveToolPropertySet {
	EEdgeLoopPositioningMode PositionMode; // 0x60
	EEdgeLoopInsertionMode InsertionMode; // 0x64
	int32_t NumLoops; // 0x68
	double ProportionOffset; // 0x70
	double DistanceOffset; // 0x78
	bool bInteractive; // 0x80
	bool bFlipOffsetDirection; // 0x81
	bool bWireframe; // 0x82
	double VertexTolerance; // 0x88
};

struct UMovieSceneParticleParameterTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct UInterpFilter : UObject {
	FString Caption; // 0x28
};

struct UMaterialExpressionAbs : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMaterialExpressionCustom : UMaterialExpression {
	FString Code; // 0x40
	ECustomMaterialOutputType OutputType; // 0x50
	FString Description; // 0x58
	TArray<FCustomInput> Inputs; // 0x68
	TArray<FCustomOutput> AdditionalOutputs; // 0x78
	TArray<FCustomDefine> AdditionalDefines; // 0x88
	TArray<FString> IncludeFilePaths; // 0x98
};

struct UParticleLODLevel : UObject {
	int32_t Level; // 0x28
	char bEnabled : 1; // 0x2c
	UParticleModuleRequired* RequiredModule; // 0x30
	TArray<UParticleModule*> Modules; // 0x38
	UParticleModuleTypeDataBase* TypeDataModule; // 0x48
	UParticleModuleSpawn* SpawnModule; // 0x50
	UParticleModuleEventGenerator* EventGenerator; // 0x58
	TArray<UParticleModuleSpawnBase*> SpawningModules; // 0x60
	TArray<UParticleModule*> SpawnModules; // 0x70
	TArray<UParticleModule*> UpdateModules; // 0x80
	TArray<UParticleModuleOrbit*> OrbitModules; // 0x90
	TArray<UParticleModuleEventReceiverBase*> EventReceiverModules; // 0xa0
	char ConvertedModules : 1; // 0xb0
	int32_t PeakActiveParticles; // 0xb4
};

struct UParticleModuleAccelerationOverLifetime : UParticleModuleAccelerationBase {
	FRawDistributionVector AccelOverLife; // 0x38
};

struct UMeshAttributePaintTool : UDynamicMeshBrushTool {
	UMeshAttributePaintToolProperties* AttribProps; // 0x200
};

struct UNiagaraPreviewAxis_InterpParamInt32 : UNiagaraPreviewAxis_InterpParamBase {
	int32_t Min; // 0x38
	int32_t Max; // 0x3c
};

struct AWheeledVehicle : APawn {
	USkeletalMeshComponent* Mesh; // 0x370
	UWheeledVehicleMovementComponent* VehicleMovement; // 0x378
};

struct UGeometryCacheTrack_FlipbookAnimation : UGeometryCacheTrack {
	uint32_t NumMeshSamples; // 0x58
};

struct UMaterialExpressionDepthFade : UMaterialExpression {
	FExpressionInput InOpacity; // 0x40
	FExpressionInput FadeDistance; // 0x54
	float OpacityDefault; // 0x68
	float FadeDistanceDefault; // 0x6c
};

struct UNiagaraComponentPool : UObject {
	TMap<UNiagaraSystem*, FNCPool> WorldParticleSystemPools; // 0x28
};

struct UEnvQueryTest : UEnvQueryNode {
	int32_t TestOrder; // 0x30
	EEnvTestPurpose TestPurpose; // 0x34
	FString TestComment; // 0x38
	EEnvTestFilterOperator MultipleContextFilterOp; // 0x48
	EEnvTestScoreOperator MultipleContextScoreOp; // 0x49
	EEnvTestFilterType FilterType; // 0x4a
	FAIDataProviderBoolValue BoolValue; // 0x50
	FAIDataProviderFloatValue FloatValueMin; // 0x88
	FAIDataProviderFloatValue FloatValueMax; // 0xc0
	EEnvTestScoreEquation ScoringEquation; // 0xf9
	EEnvQueryTestClamping ClampMinType; // 0xfa
	EEnvQueryTestClamping ClampMaxType; // 0xfb
	EEQSNormalizationType NormalizationType; // 0xfc
	FAIDataProviderFloatValue ScoreClampMin; // 0x100
	FAIDataProviderFloatValue ScoreClampMax; // 0x138
	FAIDataProviderFloatValue ScoringFactor; // 0x170
	FAIDataProviderFloatValue ReferenceValue; // 0x1a8
	bool bDefineReferenceValue; // 0x1e0
	char bWorkOnFloatValues : 1; // 0x1f0
};

struct UAbilityTask_WaitConfirm : UAbilityTask {
	FMulticastInlineDelegate OnConfirm; // 0x80
};

struct UAnimNotifyState_Trail : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName FirstSocketName; // 0x38
	FName SecondSocketName; // 0x40
	ETrailWidthMode WidthScaleMode; // 0x48
	FName WidthScaleCurve; // 0x4c
	char bRecycleSpawnedSystems : 1; // 0x54
};

struct UDestructibleMesh : USkeletalMesh {
	FDestructibleParameters DefaultDestructibleParameters; // 0x3a8
	TArray<FFractureEffect> FractureEffects; // 0x430
	TArray<int32_t> CustomChunkIndex; // 0x448
	TArray<FVector> CustomExplodeDirection; // 0x458
	TArray<char> IsStaticChunk; // 0x468
	TArray<FKAggregateGeom> ChunkAggGeoms; // 0x478
};

struct UGenericConfirmationCheckItemSlot : UUserWidget {
	UImage* ImgIcon; // 0x260
	UTextBlock* AmountText; // 0x268
	int32_t NeedAmount; // 0x270
	TWeakObjectPtr<USGItem> BindItem; // 0x274
	TWeakObjectPtr<USGInventoryComponent> BindCheckInventory; // 0x27c
	float SlotWidth; // 0x284
	float SlotHeight; // 0x288
	USizeBox* SlotSizeBox; // 0x290
	USGUI* RootUI; // 0x298
	char bEnough : 1; // 0x2a0
	FLinearColor EnoughColor; // 0x2a4
	FLinearColor NotEnoughColor; // 0x2b4
	int32_t FontSize; // 0x2c4
};

struct ANatureWeather : AActor {
	bool EnableRainParticle; // 0x318
	float RainParticleSpawnCount; // 0x31c
	FVector RainParticleDirection; // 0x320
	UParticleSystem* RainParticle; // 0x330
	UMaterialInterface* RainParticleMat; // 0x338
	UNatureWeatherComponent* Component; // 0x340
	USceneCaptureComponent2D* SceneCaptureComp; // 0x348
};

struct UNiagaraDataInterfaceArrayFloat4 : UNiagaraDataInterfaceArray {
	TArray<FVector4> FloatData; // 0x50
};

struct USetCollisionGeometryToolProperties : UInteractiveToolPropertySet {
	ECollisionGeometryType GeometryType; // 0x60
	ESetCollisionGeometryInputMode InputMode; // 0x64
	bool bUseWorldSpace; // 0x68
	bool bRemoveContained; // 0x69
	bool bEnableMaxCount; // 0x6a
	int32_t MaxCount; // 0x6c
	float MinThickness; // 0x70
	bool bDetectBoxes; // 0x74
	bool bDetectSpheres; // 0x75
	bool bDetectCapsules; // 0x76
	bool bSimplifyHulls; // 0x77
	int32_t HullTargetFaceCount; // 0x78
	bool bSimplifyPolygons; // 0x7c
	float HullTolerance; // 0x80
	EProjectedHullAxis SweepAxis; // 0x84
	bool bAppendToExisting; // 0x88
	ECollisionGeometryMode SetCollisionType; // 0x8c
};

struct UUI_N_ShopBanner : UUserWidget {
	UWidgetSwitcher* BannerSwitcher; // 0x260
	UButton* TurnLeftBtn; // 0x268
	UButton* TurnRightBtn; // 0x270
	UHorizontalBox* IndexHBox; // 0x278
	FMargin IndexPicPadding; // 0x280
	UUI_N_Shop_BannerStateBtn* BannerStateBtnTemplate; // 0x290
};

struct ASGStructureNPC : ASGStructureSeat {
	TArray<ABaseCharacter*> AllowNPCClass; // 0xf78
	char bUseSeatWeaponMontage : 1; // 0xf88
	TArray<FSeatWeaponMontage> SeatWeaponMontage; // 0xf90
	char bMapProduceStructure : 1; // 0xfa0
	TArray<USGItem*> GetWaterItemTemplates; // 0xfa8
	UAnimMontage* PlayerGetWaterMontage; // 0xfb8
	int32_t WaterCooldownTime; // 0xfc0
	float PlayerGetWaterCoolTime; // 0xfc4
	char bProduceStructure : 1; // 0xfc8
	char bNeedNPCForProduce : 1; // 0xfc8
	int32_t DropWrapperId; // 0xfcc
	float DropInterval; // 0xfd0
	float AddSkillExpPerSecond; // 0xfd4
	EStructureNPCType StructureNPCType; // 0xfd8
	float HangUpAddExp; // 0xfe8
	float HangUpAddExpInterval; // 0xfec
	float HangUpWeaponAddExp[0x8]; // 0xff0
};

struct UPawnAction_Sequence : UPawnAction {
	TArray<UPawnAction*> ActionSequence; // 0x98
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
	UPawnAction* RecentActionCopy; // 0xb0
};

struct UAsyncActionHandleSaveGame : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate Completed; // 0x30
	USaveGame* SaveGameObject; // 0x60
};

struct UInputComponent : UActorComponent {
	TArray<FCachedKeyToActionInfo> CachedKeyToActionInfo; // 0x130
};

struct UDatasmithImportOptions : UDatasmithOptionsBase {
	EDatasmithImportSearchPackagePolicy SearchPackagePolicy; // 0x28
	EDatasmithImportAssetConflictPolicy MaterialConflictPolicy; // 0x29
	EDatasmithImportAssetConflictPolicy TextureConflictPolicy; // 0x2a
	EDatasmithImportActorPolicy StaticMeshActorImportPolicy; // 0x2b
	EDatasmithImportActorPolicy LightImportPolicy; // 0x2c
	EDatasmithImportActorPolicy CameraImportPolicy; // 0x2d
	EDatasmithImportActorPolicy OtherActorImportPolicy; // 0x2e
	EDatasmithImportMaterialQuality MaterialQuality; // 0x2f
	FDatasmithImportBaseOptions BaseOptions; // 0x34
	FDatasmithReimportOptions ReimportOptions; // 0x48
	FString Filename; // 0x50
	FString FilePath; // 0x60
};

struct UMaterialExpressionDDX : UMaterialExpression {
	FExpressionInput Value; // 0x40
};

struct ASGStructureStable : ASGStructureSeat {
	char bClearZeroLifeChunk : 1; // 0xf70
	float SearchCharacterInterval; // 0xf74
	char bIsDebugSearchCharacter : 1; // 0xf78
	TArray<FLinkChunkWithTrainerInfo> LinkAnimalChunkInfo; // 0xf98
	TArray<FGuid> LinkGeneralChunkGuid; // 0xfa8
	TArray<FLinkChunkWithTrainerInfo> LinkReborningChunkInfo; // 0xfb8
	UDataTable* FoodDataTable; // 0xfc8
	float RebornReduceFoodPerSecond; // 0xfd0
	TArray<FName> TainerSeatSocketName; // 0xfe8
	int32_t NumTainerSeats; // 0xff8
	UDataTable* TrainerDataTable; // 0x1000
	TMap<ESystemTrainerType, FSystemTrainerInfo> SystemTrainerConfig; // 0x1008
	float TrainerWorkTimeThreshold; // 0x1058
	float ReleaseTraceOffsetUp; // 0x10c0
	float ReleaseTraceOffsetDown; // 0x10c4
	float ReleaseRandomRadiusMin; // 0x10c8
	float ReleaseRandomRadiusMax; // 0x10cc
	float ReleaseToleranceHeight; // 0x10d0
	float ReleaseRandomRadiusMinByOperator; // 0x10d4
	float ReleaseRandomRadiusMaxByOperator; // 0x10d8
	float ReleaseToleranceHeightByOperator; // 0x10dc
	FVector VaildReleaseLocation; // 0x10e0
	FTimerHandle CalcReborningHandle; // 0x10f0
	float CalcReborningTimerInterval; // 0x10f8
	FTimerHandle CalcWorkingHandle; // 0x1100
	float CalcWorkingTimerInterval; // 0x1108
	FTimerHandle UpdateAnimalDataHandle; // 0x1110
	float UpdateAnimalDataTimerInterval; // 0x1118
	char bUseAnimalNetData : 1; // 0x111c
	int32_t ShowAnimalMaxNum; // 0x1120
	int32_t LastAnimalCount; // 0x1124
	char bUseNiagara : 1; // 0x1128
	UNiagaraSystem* NiagaraAsset; // 0x1130
	float NiaAnimalSeparation; // 0x1138
	FVector NiaAnimalScale; // 0x113c
	FVector NiaComponentOffset; // 0x1148
	TWeakObjectPtr<UNiagaraComponent> AnimalNiagaraComponent; // 0x1154
};

struct UUI_ModEntryTemplate : UUserWidget {
	UTextBlock* mTextBlockName; // 0x268
};

struct UMaterialExpressionRotator : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	float CenterX; // 0x68
	float CenterY; // 0x6c
	float Speed; // 0x70
	uint32_t ConstCoordinate; // 0x74
};

struct UUI_XianChengRelationShip : USGUI {
	UXianChengRelationShipItem* ItemTemplate; // 0x2d8
	TArray<UXianChengRelationShipItem*> XianChengRelationShipItems; // 0x2e0
	UUniformGridPanel* XianChengRelationShipGridPanel; // 0x2f0
};

struct UPhysicsSettingsCore : UDeveloperSettings {
	float DefaultGravityZ; // 0x38
	float DefaultTerminalVelocity; // 0x3c
	float DefaultFluidFriction; // 0x40
	int32_t SimulateScratchMemorySize; // 0x44
	int32_t RagdollAggregateThreshold; // 0x48
	float TriangleMeshTriangleMinAreaThreshold; // 0x4c
	bool bEnableShapeSharing; // 0x50
	bool bEnablePCM; // 0x51
	bool bEnableStabilization; // 0x52
	bool bWarnMissingLocks; // 0x53
	bool bEnable2DPhysics; // 0x54
	bool bDefaultHasComplexCollision; // 0x55
	float BounceThresholdVelocity; // 0x58
	EFrictionCombineMode FrictionCombineMode; // 0x5c
	EFrictionCombineMode RestitutionCombineMode; // 0x5d
	float MaxAngularVelocity; // 0x60
	float MaxDepenetrationVelocity; // 0x64
	float ContactOffsetMultiplier; // 0x68
	float MinContactOffset; // 0x6c
	float MaxContactOffset; // 0x70
	bool bSimulateSkeletalMeshOnDedicatedServer; // 0x74
	ECollisionTraceFlag DefaultShapeComplexity; // 0x75
	FChaosSolverConfiguration SolverOptions; // 0x78
};

struct ULuminRuntimeSettings : UObject {
	FString PackageName; // 0x28
	FString ApplicationDisplayName; // 0x38
	ELuminFrameTimingHint FrameTimingHint; // 0x48
	bool bProtectedContent; // 0x49
	bool bManualCallToAppReady; // 0x4a
	bool bUseMobileRendering; // 0x4b
	bool bUseVulkan; // 0x4c
	FFilePath Certificate; // 0x50
	FDirectoryPath IconModelPath; // 0x60
	FDirectoryPath IconPortalPath; // 0x70
	FLocalizedIconInfos LocalizedIconInfos; // 0x80
	int32_t VersionCode; // 0x90
	int32_t MinimumAPILevel; // 0x94
	TArray<ELuminPrivilege> AppPrivileges; // 0x98
	TArray<FLuminComponentSubElement> ExtraComponentSubElements; // 0xa8
	TArray<FLuminComponentElement> ExtraComponentElements; // 0xb8
	FString SpatializationPlugin; // 0xc8
	FString ReverbPlugin; // 0xd8
	FString OcclusionPlugin; // 0xe8
	int32_t SoundCueCookQualityIndex; // 0xf8
	bool bRemoveDebugInfo; // 0xfc
	FDirectoryPath VulkanValidationLayerLibs; // 0x100
	bool bFrameVignette; // 0x110
	TArray<FLocalizedAppName> LocalizedAppNames; // 0x118
};

struct UWBP_KeySetting_C : UUI_KeySetting {
	UCanvasPanel* KeySetting; // 0x2b8
	UWBP_KeySettingRadioView_C* KeySettingRadioView; // 0x2c0
	UImage* TitleImage; // 0x2c8
	UImage* TitleImage_2; // 0x2d0
	UImage* TitleImage_3; // 0x2d8
	UImage* TitleImage_4; // 0x2e0
	UImage* TitleImage_5; // 0x2e8
	UImage* TitleImage_6; // 0x2f0
	UImage* TitleImage_7; // 0x2f8
	UImage* TitleImage_8; // 0x300
	UImage* TitleImage_9; // 0x308
	UWBP_KeySettingItem_C* SelectKeySettingItem_1; // 0x310
};

struct ALevelVariantSetsActor : AActor {
	FSoftObjectPath LevelVariantSets; // 0x310
};

struct USculptBrushProperties : UBrushBaseProperties {
	float Depth; // 0x78
	bool bHitBackFaces; // 0x7c
	float Lazyness; // 0x80
	bool bShowPerBrushProps; // 0x84
};

struct UDeviceProfile : UTextureLODSettings {
	FString DeviceType; // 0x38
	FString BaseProfileName; // 0x48
	UObject* Parent; // 0x58
	TArray<FString> CVars; // 0x88
};

struct UGuildApplySlot : USGUI {
	UTextBlock* ApplyNameText; // 0x2d8
	UTextBlock* ApplyLevelText; // 0x2e0
	UTextBlock* ApplyVerifyText; // 0x2e8
	UDataButton* AgreeDataButton; // 0x2f0
	UDataButton* RejectDataButton; // 0x2f8
};

struct ASGGameMode : AGameMode {
	TArray<FString> PrivateServerPlayerNameSet; // 0x428
	ASGCharacter* LobbySpawnCharacterTemplate; // 0x438
	float LobbyLoginWaitTime; // 0x514
	UDataTable* ExploitCompConfigsDataTable; // 0x5b8
	USGCheatManager* AdminSGCheatManager; // 0x628
	TArray<UOnlineLobbySession*> OnlineLobbySessionList; // 0x630
	UShutDownService* ShutDownServiceSocket; // 0x648
	TMap<FString, UBasePlayerData*> BasePlayerDatas; // 0x650
	TMap<FString, FPlayerPresenceStaus> PlayerPresenceStaus; // 0x6a0
	FServerInfoData ServerInfoData; // 0x6f0
	FSkillAddExpAction SkillAddExpAction; // 0x7e8
	FServerMultiplier GameMultiplier; // 0x9b0
	FDateTime LastClearGuildGongXunTime; // 0xf10
	TMap<FGuid, FGuildSingleServerData> GuildSingleServerDatas; // 0xf18
	TMap<FGuid, FGuildDetailData> GuildDetailDatas; // 0xf68
	TMap<FGuid, FGuildBriefData> GuildBriefDatas; // 0xfb8
	int64_t ServerOpenTime; // 0x1008
	UPubDataManager* PubDataManager; // 0x1010
	char bPubDataAllLoaded : 1; // 0x1018
	TMap<FGuid, FMsgRecordList> PlayerMsgRecords; // 0x1040
	TMap<FGuid, FMsgRecordList> GuildMsgRecords; // 0x1090
	int32_t MaxGuildContainerRecCount; // 0x10e0
	TMap<FGuid, FGuildContainerRecSets> GuildContainerLogs; // 0x10e8
	char bApplyToGameStateAfterLoadWorldCompleted : 1; // 0x1138
	int32_t CurrentServerLevel; // 0x113c
	FTaishouSignInfo TaishouSignInfoBackup; // 0x1140
	char bWorldIsSaveGame : 1; // 0x1259
	float ClearDBChunkMinutes; // 0x125c
	float ClearChunkMinutes; // 0x1260
	float DefaultRebornTime; // 0x1264
	int32_t DefaultDeathReduceLifeCount; // 0x1268
	TMap<ECharacterType, int32_t> DeathReduceLifeCount; // 0x1270
	TMap<FGuid, FBaseChunkDataInfo> ChunkInfoMap; // 0x12c0
	EBattleType BattleType; // 0x1310
	FGuid DefenseGuildGuid; // 0x1324
	FGuid AttackGuildGuid; // 0x1334
	FGuid DefenseAllianGuid; // 0x1344
	FGuid AttackAllianGuid; // 0x1354
	uint32_t DeleteRoleCoolDownMinutes; // 0x1388
	int32_t CalProtectionInterval; // 0x138c
	double LastCalProtectionTime; // 0x1390
	char bOpenQuestSystem : 1; // 0x1398
	TMap<FGuid, FGuildStructureData> GuildStructureDatas; // 0x13a0
	TMap<FGuid, FMiniMapMarkDataArray> PlayerMiniMapMarkDatas; // 0x13f0
	TMap<FGuid, FMiniMapMarkDataArray> GuildMiniMapMarkDatas; // 0x1440
	TMap<FGuid, FGuildStructureInfoData> GuildStructureInfoDatas; // 0x1490
	TMap<FGuid, FCharacterStructureData> ServerCharacterStructureDatas; // 0x14e0
	TMap<FString, FOccupySellInfo> PlayerOccupySellDatas; // 0x1530
	int32_t GMInitProtectTime; // 0x1580
	TMap<FGuid, FVector> PlayerLastDeathLocations; // 0x1588
	int32_t SaveLastDeathInfoNum; // 0x15d8
	TMap<FGuid, FDeathCharacterInfoList> DeathCharacterInfoMap; // 0x15e0
	int32_t PlayerVoiceDistance; // 0x1630
	TArray<FWorship> CurrentWorshipEffect; // 0x16c0
	FGuid XianChengOwner; // 0x16d0
	TArray<char> StandalonePlayerData; // 0x1738
	TArray<char> StandaloneCharacterData; // 0x1748
};

struct UUI_GuildSilverStore : USGUI {
	UImage* StoreImage; // 0x2d8
	UImage* TakeImage; // 0x2e0
	UButton* StoreButton; // 0x2e8
	UButton* TakeButton; // 0x2f0
	UButton* ConfirmButton; // 0x2f8
	UDataButton* ConfirmTipsButton; // 0x300
	UButton* CannelButton; // 0x308
	UTextBlock* GuildSilverText; // 0x310
	UTextBlock* GuildResultText; // 0x318
	UTextBlock* PlayerNameText; // 0x320
	UTextBlock* PlayerSilverText; // 0x328
	UTextBlock* PlayerResultText; // 0x330
	UEditableTextBox* ValueTextBox; // 0x338
	UImage* StoreResultImage; // 0x340
	UImage* PlayerResultImage; // 0x348
	TSoftObjectPtr<UTexture2D> AddResultTexture; // 0x350
	TSoftObjectPtr<UTexture2D> ReduceResultTexture; // 0x378
	FLinearColor AddResultColor; // 0x3a0
	FLinearColor ReduceResultColor; // 0x3b0
	USGToolTipWidget* ButtonTipWidgetTemplate; // 0x3c0
};

struct UParticleModuleLocation_Seeded : UParticleModuleLocation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UUI_N_GuildSkill : USGUI {
	UTextBlock* GuildExpText; // 0x2d8
	UTextBlock* GuildMoneyText; // 0x2e0
	UButton* BackButton; // 0x2e8
	UVerticalBox* GuildSkillGroupVerticalBox; // 0x2f0
	UCanvasPanel* UpgradeGuildSkillCanvas; // 0x2f8
	UTextBlock* NeedGuildActiveText; // 0x300
	UTextBlock* NeedGuildSilverText; // 0x308
	UCheckBox* UseSelfCopperCheckBox; // 0x310
	UButton* ConfirmUpgradeButton; // 0x318
	UButton* CancelUpgradeButton; // 0x320
	UGuildSkillGroupSlot* GuildSkillGroupSlotTemplate; // 0x328
	TArray<FGuildSkillDrawGroup> GuildSkillDrawGroups; // 0x330
	FLinearColor EnoughColor; // 0x340
	FLinearColor NotEnoughColor; // 0x350
	UUI_GenericConfirmationDialog* ConfirmUsePersonalUIOverride; // 0x360
};

struct UJunSelectorWidget : UUserWidget {
	UJunSelectorItem* ItemTemplate; // 0x260
	UJunDistrictFilterWidget* DistrictFilterTemplate; // 0x268
	UUniformGridPanel* UGPItem; // 0x270
	UScrollBox* MainScrollBox; // 0x278
	UUniformGridPanel* UGPDistrict; // 0x280
	UJunSelectorItem* SelectItem; // 0x298
	TArray<UJunSelectorItem*> ItemList; // 0x2a0
	TArray<FJunSelectorConfig> JunList; // 0x2b0
	TArray<int32_t> Districts; // 0x2c0
	TArray<UJunDistrictFilterWidget*> DistrictFilters; // 0x2d0
	TArray<int32_t> CheckedDistricts; // 0x2e0
};

struct UParticleModuleLocationPrimitiveCylinder : UParticleModuleLocationPrimitiveBase {
	char RadialVelocity : 1; // 0xb0
	FRawDistributionFloat StartRadius; // 0xb8
	FRawDistributionFloat StartHeight; // 0xe8
	CylinderHeightAxis HeightAxis; // 0x118
};

struct UTireConfig : UDataAsset {
	float FrictionScale; // 0x30
	TArray<FTireConfigMaterialFriction> TireFrictionScales; // 0x38
};

struct UInterpTrackFloatParticleParam : UInterpTrackFloatBase {
	FName ParamName; // 0x90
};

struct USoundNodeOscillator : USoundNode {
	char bModulateVolume : 1; // 0x48
	char bModulatePitch : 1; // 0x48
	float AmplitudeMin; // 0x4c
	float AmplitudeMax; // 0x50
	float FrequencyMin; // 0x54
	float FrequencyMax; // 0x58
	float OffsetMin; // 0x5c
	float OffsetMax; // 0x60
	float CenterMin; // 0x64
	float CenterMax; // 0x68
};

struct UMagicLeapLightingTrackingComponent : UActorComponent {
	bool UseGlobalAmbience; // 0xc0
	bool UseColorTemp; // 0xc1
};

struct ASGStructureLadder : ASGStructure {
	char bUseSkeletalMesh : 1; // 0xb98
	float CanUseAngle; // 0xb9c
	char bIsAerialLadder : 1; // 0xba0
	char bBuilded : 1; // 0xba0
	float BuildCheckDistance; // 0xba4
	float PushCheckDistance; // 0xba8
	float ClimbStartTolerance; // 0xbac
	float PenetrationTraceHeight; // 0xbb0
	int32_t PenetrationStartStep; // 0xbb4
	double LastResponseClimbLadderTime; // 0xbb8
	UParticleSystem* BuildAerialLadderParticle; // 0xbc0
	TWeakObjectPtr<UParticleSystemComponent> BuildAerialLadderParticleComp; // 0xbc8
	UCurveFloat* BuildAerialLadderCurve; // 0xbd0
	FTransform BuildAerialLadderTransformLS; // 0xbe0
	UAnimMontage* BuildAerialLadderMontage; // 0xc10
	float BuildAerialLadderSuccessPosition; // 0xc18
	UParticleSystem* PushAerialLadderParticle; // 0xc20
	TWeakObjectPtr<UParticleSystemComponent> PushAerialLadderParticleComp; // 0xc28
	UCurveFloat* PushAerialLadderCurve; // 0xc30
	FTransform PushAerialLadderTransformLS; // 0xc40
	UAnimMontage* PushAerialLadderMontage; // 0xc70
	float PushAerialLadderSuccessPosition; // 0xc78
	FRotator OriginRotation; // 0xc7c
	FRotator FinishRotation; // 0xc88
	float BuildOneSecondAddLocalPitch; // 0xc94
	float PushOneSecondAddLocalPitch; // 0xc98
	float PushUseDurable; // 0xc9c
	FTimerHandle RotateTimerHandle; // 0xca8
	char bBuildingRotate : 1; // 0xcb0
	float AccumulateRotateTime; // 0xcb4
	char bPushingRotate : 1; // 0xcbc
	TArray<TWeakObjectPtr<ABaseCharacter>> ClimbCharacters; // 0xcc0
};

struct UStableTrainerSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> TrainerQualityTexture[0x6]; // 0x260
	TSoftObjectPtr<UTexture2D> TrainerSpecialTypeTexture[0x4]; // 0x350
	UImage* TrainerQualityBG; // 0x3f0
	UImage* TrainerSpecialTypeBG; // 0x3f8
	UImage* TrainerIconImg; // 0x400
	UButton* StopWorkBtn; // 0x408
	UTextBlock* TrainerStatusText; // 0x410
	UTextBlock* TrainerNameText; // 0x418
	UTextBlock* TrainerLevelText; // 0x420
	UTextBlock* TrainerLifeCountText; // 0x428
	UTextBlock* TrainerTameSkillExpText; // 0x430
	UProgressBar* WorkRemainTimePB; // 0x438
	UTextBlock* TrainerWorkTimeText; // 0x440
	UButton* StopRestBtn; // 0x448
};

struct UPawnAction_Move : UPawnAction {
	AActor* GoalActor; // 0x98
	FVector GoalLocation; // 0xa0
	float AcceptableRadius; // 0xac
	UNavigationQueryFilter* FilterClass; // 0xb0
	char bAllowStrafe : 1; // 0xb8
	char bFinishOnOverlap : 1; // 0xb8
	char bUsePathfinding : 1; // 0xb8
	char bAllowPartialPath : 1; // 0xb8
	char bProjectGoalToNavigation : 1; // 0xb8
	char bUpdatePathToGoal : 1; // 0xb8
	char bAbortChildActionOnPathChange : 1; // 0xb8
};

struct UEngineMessage : ULocalMessage {
	FString FailedPlaceMessage; // 0x28
	FString MaxedOutMessage; // 0x38
	FString EnteredMessage; // 0x48
	FString LeftMessage; // 0x58
	FString GlobalNameChange; // 0x68
	FString SpecEnteredMessage; // 0x78
	FString NewPlayerMessage; // 0x88
	FString NewSpecMessage; // 0x98
};

struct USoundNodeModulatorContinuous : USoundNode {
	FModulatorContinuousParams PitchModulationParams; // 0x48
	FModulatorContinuousParams VolumeModulationParams; // 0x68
};

struct UOnsetNRTSettings : UAudioSynesthesiaNRTSettings {
	bool bDownmixToMono; // 0x28
	float GranularityInSeconds; // 0x2c
	float Sensitivity; // 0x30
	float MinimumFrequency; // 0x34
	float MaximumFrequency; // 0x38
};

struct UGeometryCollectionComponent : UMeshComponent {
	AChaosSolverActor* ChaosSolverActor; // 0x4b8
	UGeometryCollection* RestCollection; // 0x5a0
	TArray<AFieldSystemActor*> InitializationFields; // 0x5a8
	bool Simulating; // 0x5b8
	EObjectStateTypeEnum ObjectType; // 0x5c0
	bool EnableClustering; // 0x5c1
	int32_t ClusterGroupIndex; // 0x5c4
	int32_t MaxClusterLevel; // 0x5c8
	TArray<float> DamageThreshold; // 0x5d0
	EClusterConnectionTypeEnum ClusterConnectionType; // 0x5e0
	int32_t CollisionGroup; // 0x5e4
	float CollisionSampleFraction; // 0x5e8
	float LinearEtherDrag; // 0x5ec
	float AngularEtherDrag; // 0x5f0
	UChaosPhysicalMaterial* PhysicalMaterial; // 0x5f8
	EInitialVelocityTypeEnum InitialVelocityType; // 0x600
	FVector InitialLinearVelocity; // 0x604
	FVector InitialAngularVelocity; // 0x610
	UPhysicalMaterial* PhysicalMaterialOverride; // 0x620
	FGeomComponentCacheParameters CacheParameters; // 0x628
	FMulticastInlineDelegate NotifyGeometryCollectionPhysicsStateChange; // 0x678
	FMulticastInlineDelegate NotifyGeometryCollectionPhysicsLoadingStateChange; // 0x688
	FMulticastInlineDelegate OnChaosBreakEvent; // 0x6b0
	float DesiredCacheTime; // 0x6c0
	bool CachePlayback; // 0x6c4
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x6c8
	bool bNotifyBreaks; // 0x6d8
	bool bNotifyCollisions; // 0x6d9
	bool bEnableReplication; // 0x6da
	bool bEnableAbandonAfterLevel; // 0x6db
	int32_t ReplicationAbandonClusterLevel; // 0x6dc
	FGeometryCollectionRepData RepData; // 0x6e0
	UBodySetup* DummyBodySetup; // 0x918
};

struct UN_SplitItemPanel : UUserWidget {
	UTextBlock* ItemName; // 0x260
	UTextBlock* OperationText; // 0x268
	UEditableText* OperationAmountText; // 0x270
	UButton* AddButton; // 0x278
	UButton* ReduceButton; // 0x280
	USlider* OperationSlider; // 0x288
	UButton* AcceptButton; // 0x290
	UButton* CancelButton; // 0x298
	TWeakObjectPtr<USGItem> BindItem; // 0x2a0
	EInventoryTypes SourceInventoryType; // 0x2a8
	EInventoryTypes InventoryType; // 0x2a9
	int32_t CraftNum; // 0x2b4
	FText SplitText; // 0x2b8
	FText CraftText; // 0x2d0
	FVector2D WidgetOffset; // 0x2e8
	ESplitUIType SplitType; // 0x2f0
	EInventoryTypes RecordTransportItemInventoyType; // 0x2f1
	int32_t RecordSplitNum; // 0x2f4
};

struct ULevelActorContainer : UObject {
	TArray<AActor*> Actors; // 0x28
};

struct UUI_GuildBeInviteList : USGUI {
	UScrollBox* BeInviteListPanel; // 0x2d8
	UDataButton* PrePageDataButton; // 0x2e0
	UDataButton* NextPageDataButton; // 0x2e8
	UTextBlock* ShowPageText; // 0x2f0
	UButton* ExitButton; // 0x2f8
	UCheckBox* InviteSwitchCheckBox; // 0x300
	USortableTitleSlot* AllianceNameTitleSlot; // 0x308
	USortableTitleSlot* PlayerNameTitleSlot; // 0x310
	USortableTitleSlot* ManagementTitleSlot; // 0x318
	int32_t ApplyNumPerPage; // 0x320
	UGuildBeInviteSlot* GuildBeInviteSlotClass; // 0x328
};

struct UStereoLayerShapeEquirect : UStereoLayerShape {
	FBox2D LeftUVRect; // 0x28
	FBox2D RightUVRect; // 0x3c
	FVector2D LeftScale; // 0x50
	FVector2D RightScale; // 0x58
	FVector2D LeftBias; // 0x60
	FVector2D RightBias; // 0x68
};

struct UEnvQueryTest_PathfindingBatch : UEnvQueryTest_Pathfinding {
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x280
};

struct UMaterialFunctionInterface : UObject {
	FGuid StateId; // 0x28
	EMaterialFunctionUsage MaterialFunctionUsage; // 0x38
};

struct UDatasmithPointLightComponentTemplate : UDatasmithObjectTemplate {
	ELightUnits IntensityUnits; // 0x30
	float SourceRadius; // 0x34
	float SourceLength; // 0x38
	float AttenuationRadius; // 0x3c
};

struct UFontFace : UObject {
	FString SourceFilename; // 0x30
	EFontHinting Hinting; // 0x40
	EFontLoadingPolicy LoadingPolicy; // 0x41
	EFontLayoutMethod LayoutMethod; // 0x42
};

struct APostProcessVolume : AVolume {
	FPostProcessSettings Settings; // 0x350
	float Priority; // 0x8b0
	float BlendRadius; // 0x8b4
	float BlendWeight; // 0x8b8
	char bEnabled : 1; // 0x8bc
	char bUnbound : 1; // 0x8bc
};

struct UNiagaraPreviewAxis_InterpParamVector2D : UNiagaraPreviewAxis_InterpParamBase {
	FVector2D Min; // 0x38
	FVector2D Max; // 0x40
};

struct UBTTask_RoadPath : UBTTask_SGBlueprintBase {
	FBlackboardKeySelector BBKey_RoadPathIndex; // 0xc0
	FBlackboardKeySelector BBKey_DesiredLocation; // 0xe8
	ECustomRoadPathType Enum_CustomRoadPathType; // 0x168
	float AcceptableRadius; // 0x16c
	float FollowAddDistance; // 0x170
	FVector2D FinishedRoadPathCoolingTimeRange; // 0x17c
	char bCheckWaitChangeGuard : 1; // 0x184
};

struct USafeZone : UContentWidget {
	bool PadLeft; // 0x120
	bool PadRight; // 0x121
	bool PadTop; // 0x122
	bool PadBottom; // 0x123
};

struct UMovieSceneIntegerSection : UMovieSceneSection {
	FMovieSceneIntegerChannel IntegerCurve; // 0xe8
};

struct ASGMenuHUD : AHUD {
	UUI_OfficalSessionList* OfficalSessionListTemplate; // 0x408
	UUI_PrivateSessionList* PrivateSessionListTemplate; // 0x410
	UUI_MainMenu* MainMenuTemplate; // 0x418
	UUI_Setting* SettingTemplate; // 0x420
	USGUI* GameNoticeTemplate; // 0x428
	UUI_ModsManageBase* ModManageTemplate; // 0x430
	UUI_ProducerList* ProducerListTemplate; // 0x438
	UUI_PrivateSessionEntry* PrivateSessionEntryTemplate; // 0x440
	UUI_OfficalSessionList* OfficalSessionListUI; // 0x448
	UUI_PrivateSessionList* PrivateSessionListUI; // 0x450
	UUI_MainMenu* MainMenuUI; // 0x458
	UUI_Setting* SettingUI; // 0x460
	USGUI* GameNoticeUI; // 0x468
	UUI_ModsManageBase* ModManageUI; // 0x470
	UUI_ProducerList* ProducerListUI; // 0x478
	UUI_PrivateSessionEntry* PrivateSessionEntryUI; // 0x480
};

struct USGVehiclePerk : UObject {
	FText Name; // 0x28
	FText Description; // 0x40
	FString Param1; // 0x58
	FString Param2; // 0x68
	FString Param3; // 0x78
	FString Param4; // 0x88
	FString Param5; // 0x98
	TSoftObjectPtr<UTexture2D> PerkTexture; // 0xa8
	EVehiclePerkType VehiclePerkType; // 0xd0
	FString VehicleGroupTag; // 0xd8
	EAttributeCorrectionType RequiredAttributeCorrectionType; // 0xe8
	int32_t RequiredAttributeCorrectionCount; // 0xec
	EAnimalQualityType RequiredQualityType; // 0xf0
	int32_t RequiredWildLevel; // 0xf4
	int32_t RequiredTameLevel; // 0xf8
	int32_t RequiredRealNameDataIndex; // 0xfc
	TArray<USGVehiclePerk*> RequiredPerkEntries; // 0x100
	float RequiredStrongMorph; // 0x110
	float RequiredThinMorph; // 0x114
	EAnimalFurColorType RequiredSkinColorType; // 0x118
	ECharacterSex RequiredSex; // 0x119
	char bRequiredCastrated : 1; // 0x11a
	int32_t RequiredCastrateLifeCount; // 0x11c
	TArray<float> AttributeCorrectionModify; // 0x120
	EVehiclePerkQualityType PerkQualityType; // 0x130
	USGBuff* BindBuff; // 0x138
	USGBuff* TriggerBuff; // 0x140
	char bPassivePerk : 1; // 0x148
	char bNegativePerk : 1; // 0x148
	EVehiclePerkState VehiclePerkState; // 0x149
};

struct UN_GuildSkillSlot : USGUI {
	UImage* BorderImage; // 0x2d8
	UImage* MaskImage; // 0x2e0
	UTextBlock* LevelText; // 0x2e8
	UImage* IconImage; // 0x2f0
	UImage* LevelUpImage; // 0x2f8
	UCanvasPanel* LevelCanvasPanel; // 0x300
	UGuildSkillToolTipWidget* ToolTipWidgetTemplateOverride; // 0x308
	TSoftObjectPtr<UTexture2D> NormalBorderTexture; // 0x310
	TSoftObjectPtr<UTexture2D> NormalMaskTexture; // 0x338
	TSoftObjectPtr<UTexture2D> CanUpdateBorderTexture; // 0x360
	TSoftObjectPtr<UTexture2D> CanUpdateMaskTexture; // 0x388
	TSoftObjectPtr<UTexture2D> UnlockBorderTexture; // 0x3b0
	TSoftObjectPtr<UTexture2D> UnlockMaskTexture; // 0x3d8
	TSoftObjectPtr<UTexture2D> SelectedBorderTexture; // 0x400
	TSoftObjectPtr<UTexture2D> SelectedMaskTexture; // 0x428
};

struct UGizmoTransformChangeStateTarget : UObject {
	TScriptInterface<IToolContextTransactionProvider> TransactionManager; // 0x50
};

struct UUI_GameSiegeTips : USGUI {
	char bIsFireSeat : 1; // 0x2f8
	char bIsControlSeat : 1; // 0x2f8
	char bActive : 1; // 0x2f8
	ETurretFireMode FireMode; // 0x2f9
	char bShowAngle : 1; // 0x2fa
	TWeakObjectPtr<USGInventoryComponent> BindInventory; // 0x2fc
	UImage* ScaleplateImg; // 0x308
	UCanvasPanel* ReloadCanvas; // 0x310
	UTextBlock* ReloadAmmoText; // 0x318
	UProgressBar* ReloadProgressBar; // 0x320
	UCanvasPanel* AnglePanel; // 0x328
	UTextBlock* AngleText; // 0x330
	UCanvasPanel* StoreCanvas; // 0x338
	UProgressBar* StoreProgressBar; // 0x340
	UTextBlock* StoreProgressBarText; // 0x348
	UCanvasPanel* LeftTimeCanvas; // 0x350
	UProgressBar* LeftTimeProgressBar; // 0x358
	UTextBlock* LeftTimeText; // 0x360
	USGRichTextBlock* TipsText; // 0x368
	UCanvasPanel* WarningCanvas; // 0x370
	UCanvasPanel* ScaleplateCanvas; // 0x378
	UHorizontalBox* BottomHelpHorizontal; // 0x380
	UUniformGridPanel* AmmoGridPanel; // 0x388
	int32_t ColumnMaxAmount; // 0x390
	USiegeTipsAmmoSlot* SiegeAmmoSlotTemplate; // 0x398
	char bIsNeedShowScaleplate : 1; // 0x3a0
	UHelpTipsSlot* SiegeTipsHelpSlotTemplate; // 0x3a8
	TArray<UHelpTipsSlot*> NotControlSeatCollapsedSlotList; // 0x3b0
	TArray<UHelpTipsSlot*> NotFireSeatCollapsedSlotList; // 0x3c0
	FVector4 BottomSlotPadding; // 0x3d0
	char bShowScaleplate : 1; // 0x3e0
	FHelpTips SiegeTypeToHelpTip[0xa]; // 0x3e8
	FText ChangeOperationText; // 0x488
	FText ChangeFireSeatText; // 0x4a0
	FText ChangeHelpSeatText; // 0x4b8
	float FireStopTime; // 0x4d0
	TArray<USiegeTipsAmmoSlot*> AmmoSlotList; // 0x4e0
};

struct UUI_TransGuildExpPoint : USGUI {
	UTextBlock* GuildLevelText; // 0x2d8
	UTextBlock* ActivityPointText; // 0x2e0
	UTextBlock* CurrentPointText; // 0x2e8
	UButton* ReducePointButton; // 0x2f0
	UButton* AddPointButton; // 0x2f8
	UButton* SubmitButton; // 0x300
	UButton* CancelButton; // 0x308
	USlider* TransferSlider; // 0x310
};

struct UAnimationSharingSetup : UObject {
	TArray<FPerSkeletonAnimationSharingSetup> SkeletonSetups; // 0x28
	FAnimationSharingScalability ScalabilitySettings; // 0x38
};

struct USkeleton : UObject {
	TArray<FBoneNode> BoneTree; // 0x38
	TArray<FTransform> RefLocalPoses; // 0x48
	FGuid VirtualBoneGuid; // 0x170
	TArray<FVirtualBone> VirtualBones; // 0x180
	TArray<USkeletalMeshSocket*> Sockets; // 0x190
	FSmartNameContainer SmartNames; // 0x1f0
	TArray<UBlendProfile*> BlendProfiles; // 0x270
	TArray<FAnimSlotGroup> SlotGroups; // 0x280
	TArray<UAssetUserData*> AssetUserData; // 0x358
};

struct UUI_PasswordConfirmationDialog : USGUI {
	UButton* BtnAccept; // 0x2e8
	UEditableTextBox* EtbPassword; // 0x2f0
	UEditableTextBox* EtbConfirmPassword; // 0x2f8
	UEditableTextBox* EtbEmail; // 0x300
	UTextBlock* TbTitle; // 0x308
	UTextBlock* TbContent; // 0x310
	UTextBlock* TbError; // 0x318
	UCheckBox* CheckBoxShowPassword; // 0x320
};

struct UAutomationTestSettings : UObject {
	TArray<FString> EngineTestModules; // 0x28
	TArray<FString> EditorTestModules; // 0x38
	FSoftObjectPath AutomationTestmap; // 0x48
	TArray<FEditorMapPerformanceTestDefinition> EditorPerformanceTestMaps; // 0x60
	TArray<FSoftObjectPath> AssetsToOpen; // 0x70
	TArray<FString> MapsToPIETest; // 0x80
	FBuildPromotionTestSettings BuildPromotionTest; // 0x90
	FMaterialEditorPromotionSettings MaterialEditorPromotionTest; // 0x280
	FParticleEditorPromotionSettings ParticleEditorPromotionTest; // 0x2b0
	FBlueprintEditorPromotionSettings BlueprintEditorPromotionTest; // 0x2c0
	TArray<FString> TestLevelFolders; // 0x2f0
	TArray<FExternalToolDefinition> ExternalTools; // 0x300
	TArray<FEditorImportExportTestDefinition> ImportExportTestDefinitions; // 0x310
	TArray<FLaunchOnTestSettings> LaunchOnSettings; // 0x320
	FIntPoint DefaultScreenshotResolution; // 0x330
	float PIETestDuration; // 0x338
};

struct UGuanAiRowSlot : USGUI {
	UTextBlock* GuanAiNameText; // 0x2d8
	UImage* GuanAiImage; // 0x2e0
	UButton* BtnEntry; // 0x2e8
	UTextBlock* TbEntry; // 0x2f0
	int32_t GuanAiId; // 0x2f8
	int32_t BtnEntryState; // 0x2fc
};

struct UFoliageType : UObject {
	FGuid UpdateGuid; // 0x28
	float Density; // 0x38
	float DensityAdjustmentFactor; // 0x3c
	float Radius; // 0x40
	bool bSingleInstanceModeOverrideRadius; // 0x44
	float SingleInstanceModeRadius; // 0x48
	EFoliageScaling Scaling; // 0x4c
	FFloatInterval ScaleX; // 0x50
	FFloatInterval ScaleY; // 0x58
	FFloatInterval ScaleZ; // 0x60
	FFoliageVertexColorChannelMask VertexColorMaskByChannel[0x4]; // 0x68
	FoliageVertexColorMask VertexColorMask; // 0x98
	float VertexColorMaskThreshold; // 0x9c
	char VertexColorMaskInvert : 1; // 0xa0
	FFloatInterval ZOffset; // 0xa4
	char AlignToNormal : 1; // 0xac
	float AlignMaxAngle; // 0xb0
	char RandomYaw : 1; // 0xb4
	float RandomPitchAngle; // 0xb8
	FFloatInterval GroundSlopeAngle; // 0xbc
	FFloatInterval Height; // 0xc4
	TArray<FName> LandscapeLayers; // 0xd0
	float MinimumLayerWeight; // 0xe0
	TArray<FName> ExclusionLandscapeLayers; // 0xe8
	float MinimumExclusionLayerWeight; // 0xf8
	FName LandscapeLayer; // 0xfc
	char CollisionWithWorld : 1; // 0x104
	FVector CollisionScale; // 0x108
	FBoxSphereBounds MeshBounds; // 0x114
	FVector LowBoundOriginRadius; // 0x130
	EComponentMobility Mobility; // 0x13c
	FInt32Interval CullDistance; // 0x140
	char bEnableStaticLighting : 1; // 0x148
	char CastShadow : 1; // 0x148
	char bAffectDynamicIndirectLighting : 1; // 0x148
	char bAffectDistanceFieldLighting : 1; // 0x148
	char bCastDynamicShadow : 1; // 0x148
	char bCastStaticShadow : 1; // 0x148
	char bCastShadowAsTwoSided : 1; // 0x148
	char bReceivesDecals : 1; // 0x148
	char bOverrideLightMapRes : 1; // 0x149
	int32_t OverriddenLightMapRes; // 0x14c
	ELightmapType LightmapType; // 0x150
	char bUseAsOccluder : 1; // 0x154
	char bVisibleInRayTracing : 1; // 0x158
	char bEvaluateWorldPositionOffset : 1; // 0x158
	FBodyInstance BodyInstance; // 0x160
	EHasCustomNavigableGeometry CustomNavigableGeometry; // 0x2c0
	FLightingChannels LightingChannels; // 0x2c1
	char bRenderCustomDepth : 1; // 0x2c4
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x2c8
	int32_t CustomDepthStencilValue; // 0x2cc
	int32_t TranslucencySortPriority; // 0x2d0
	float CollisionRadius; // 0x2d4
	float ShadeRadius; // 0x2d8
	int32_t NumSteps; // 0x2dc
	float InitialSeedDensity; // 0x2e0
	float AverageSpreadDistance; // 0x2e4
	float SpreadVariance; // 0x2e8
	int32_t SeedsPerStep; // 0x2ec
	int32_t DistributionSeed; // 0x2f0
	float MaxInitialSeedOffset; // 0x2f4
	TArray<FRelatedFoliageTypeEntry> ProceduralCloseToFoliages; // 0x2f8
	TArray<FRelatedFoliageTypeEntry> ProceduralFarFromFoliages; // 0x308
	bool bCanGrowInShade; // 0x318
	bool bSpawnsInShade; // 0x319
	float MaxInitialAge; // 0x31c
	float MaxAge; // 0x320
	float OverlapPriority; // 0x324
	FFloatInterval ProceduralScale; // 0x328
	FRuntimeFloatCurve ScaleCurve; // 0x330
	int32_t ChangeCount; // 0x3b8
	char ReapplyDensity : 1; // 0x3bc
	char ReapplyRadius : 1; // 0x3bc
	char ReapplyAlignToNormal : 1; // 0x3bc
	char ReapplyRandomYaw : 1; // 0x3bc
	char ReapplyScaling : 1; // 0x3bc
	char ReapplyScaleX : 1; // 0x3bc
	char ReapplyScaleY : 1; // 0x3bc
	char ReapplyScaleZ : 1; // 0x3bc
	char ReapplyRandomPitchAngle : 1; // 0x3bd
	char ReapplyGroundSlope : 1; // 0x3bd
	char ReapplyHeight : 1; // 0x3bd
	char ReapplyLandscapeLayers : 1; // 0x3bd
	char ReapplyZOffset : 1; // 0x3bd
	char ReapplyCollisionWithWorld : 1; // 0x3bd
	char ReapplyVertexColorMask : 1; // 0x3bd
	char bEnableDensityScaling : 1; // 0x3bd
	char bEnableDiscardOnLoad : 1; // 0x3be
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x3c0
	int32_t VirtualTextureCullMips; // 0x3d0
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x3d4
};

struct UInterpTrackFloatMaterialParam : UInterpTrackFloatBase {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct UMovieSceneCameraCutTrack : UMovieSceneNameableTrack {
	bool bCanBlend; // 0x78
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct USourceEffectEnvelopeFollowerPreset : USoundEffectSourcePreset {
	FSourceEffectEnvelopeFollowerSettings Settings; // 0x9c
};

struct UAnimCurveCompressionSettings : UObject {
	UAnimCurveCompressionCodec* Codec; // 0x28
};

struct USGToolTipWidget : UUserWidget {
	FVector2D ToolTipSize; // 0x260
	FVector2D ToolTipOffset; // 0x268
	EHorizontalAlignment HorizontalAlignment; // 0x270
	EVerticalAlignment VerticalAlignment; // 0x271
};

struct AWeatherVolumetricFog : AActor {
	UParticleSystem* VolumeFogParticle; // 0x318
	UMaterialInterface* VolumeFogMat; // 0x320
	float ParticleSize; // 0x328
	float VolumeFogIntensity; // 0x32c
	float VolumeFogDistance; // 0x330
	float VolumeFogFallOff; // 0x334
	float VolumeFogDistanceFar; // 0x338
	float VolumeFogFallOffFar; // 0x33c
	float VolumeFogFarAmount; // 0x340
	FLinearColor VolumeFogColor; // 0x344
	FLinearColor VolumeFogColor2; // 0x354
	FLinearColor VolumeFogEmissiveColor; // 0x364
	float VolumeFogScale; // 0x374
	FLinearColor VolumeFogSpeed1X; // 0x378
	float SandStormsIntensity; // 0x388
	FLinearColor SandStormsColor; // 0x38c
	float SandStormsAlpha; // 0x39c
	UParticleSystem* SandStormsParticle; // 0x3a0
	UParticleSystem* SandStormsLeafParticle; // 0x3a8
	UMaterialInterface* SandStormMat; // 0x3b0
	UMaterialInterface* SandStormLeafMat; // 0x3b8
	UMaterialInterface* SandStormLeafMat2; // 0x3c0
};

struct UWBP_KeySettingItem_C : UKeySettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c8
	UImage* ImgBg; // 0x2d0
};

struct UWBP_ProducerName_4_C : UUserWidget {
	UWBP_ProducerSlot_C* WBP_ProducerSlot; // 0x260
	UWBP_ProducerSlot_C* WBP_ProducerSlot_2; // 0x268
	UWBP_ProducerSlot_C* WBP_ProducerSlot_4; // 0x270
	UWBP_ProducerSlot_C* WBP_ProducerSlot_7; // 0x278
	UWBP_ProducerSlot_C* WBP_ProducerSlot_8; // 0x280
	UWBP_ProducerSlot_C* WBP_ProducerSlot_9; // 0x288
	UWBP_ProducerSlot_C* WBP_ProducerSlot_10; // 0x290
	UWBP_ProducerSlot_C* WBP_ProducerSlot_11; // 0x298
	UWBP_ProducerSplitLine_C* WBP_ProducerSplitLine; // 0x2a0
};

struct AGameState : AGameStateBase {
	FName MatchState; // 0x370
	FName PreviousMatchState; // 0x378
	int32_t ElapsedTime; // 0x380
};

struct UMovieSceneColorTrack : UMovieScenePropertyTrack {
	bool bIsSlateColor; // 0xb0
};

struct UN_SetPriorityPanel : UUserWidget {
	TWeakObjectPtr<UN_InventorySlot> BindItemSlot; // 0x260
	FVector2D WidgetOffset; // 0x268
	UButton* HighButton; // 0x270
	UButton* MiddleButton; // 0x278
	UButton* LowButton; // 0x280
	UButton* CleanButton; // 0x288
	TWeakObjectPtr<USGItem> BindItem; // 0x290
	TWeakObjectPtr<ASGPlayerController> PlayerController; // 0x298
	TWeakObjectPtr<ASGPlayerCharacter> PlayerCharacter; // 0x2a0
};

struct UMovieScenePrimitiveMaterialSection : UMovieSceneSection {
	FMovieSceneObjectPathChannel MaterialChannel; // 0xe8
};

struct UWBP_PasswordDialog_C : UUI_PasswordDialog {
	URichTextBlock* CheckBoxSelectedTextBlock; // 0x318
	UImage* Image; // 0x320
	UImage* Image_131; // 0x328
	UImage* Image_250; // 0x330
	UImage* ImgBg; // 0x338
	UImage* ImgBorder; // 0x340
	UImage* ImgNameInputBg; // 0x348
};

struct UUI_ServerParamBool : UUserWidget {
	UCheckBox* CheckBoxSelected; // 0x260
	UTextBlock* TbParamName; // 0x268
	UButton* ButtonSet; // 0x270
	FString StrParamName; // 0x278
	FString StrCommand; // 0x288
};

struct UUI_SeasonPassportReward : UUserWidget {
	UTextBlock* RewardNameText; // 0x260
	UUI_SeasonPassportRewardItem* RewardItemUp1; // 0x268
	UUI_SeasonPassportRewardItem* RewardItemUp2; // 0x270
	UUI_SeasonPassportRewardItem* RewardItemUp; // 0x278
	UUI_SeasonPassportRewardItem* RewardItemDown; // 0x280
};

struct UPoseAsset : UAnimationAsset {
	FPoseDataContainer PoseContainer; // 0x80
	bool bAdditivePose; // 0x110
	int32_t BasePoseIndex; // 0x114
	FName RetargetSource; // 0x118
};

struct UPaperRuntimeSettings : UObject {
	bool bEnableSpriteAtlasGroups; // 0x28
	bool bEnableTerrainSplineEditing; // 0x29
	bool bResizeSpriteDataToMatchTextures; // 0x2a
};

struct UProgressWidgetStyle : USlateWidgetStyleContainerBase {
	FProgressBarStyle ProgressBarStyle; // 0x30
};

struct UN_SlotExtraMenu : UUserWidget {
	char bRemove : 1; // 0x260
	UN_SlotExtraMenuButton* ButtonTemplate; // 0x268
	FMargin SlotListPadding; // 0x270
	TWeakObjectPtr<USGItem> BindItem; // 0x280
	EInventoryTypes BindInventoryType; // 0x288
	TWeakObjectPtr<USGInventoryComponent> BindInventory; // 0x28c
	TWeakObjectPtr<UN_InventorySlot> InventorySlot; // 0x294
	TWeakObjectPtr<USGUI> RootSGUI; // 0x29c
	UVerticalBox* MenuVetical; // 0x2a8
	FVector2D DefaultWidgetSize; // 0x2b0
	TArray<UN_SlotExtraMenuButton*> ButtonList; // 0x2b8
	UN_SlotExtraMenuButton* ShowTipRepairButton; // 0x2c8
	USGToolTipWidget* RepairTipTemplate; // 0x2d0
};

struct UNN_CraftPerkGroupSlot : UUserWidget {
	UCanvasPanel* CraftPerkGroupCanvas; // 0x260
	UImage* HighLightBg; // 0x268
	UImage* bg; // 0x270
	UImage* CircleBg; // 0x278
	UImage* icon; // 0x280
	UTextBlock* NameText; // 0x288
	UHorizontalBox* CraftPerkPanel; // 0x290
	UImage* LearnStateImage; // 0x298
	USGUI* RootUI; // 0x2a0
	USGCraftPerkGroup* BindCraftPerk; // 0x2a8
	TSoftObjectPtr<UTexture2D> TimesBg[0x8]; // 0x2b0
	TSoftObjectPtr<UTexture2D> TimesCanLearnBg[0x8]; // 0x3f0
	TSoftObjectPtr<UTexture2D> LearnStateImageTexture[0x3]; // 0x530
	UNN_CraftPerkSlot* CraftPerkSlotTemplate; // 0x5a8
	TArray<UNN_CraftPerkSlot*> CraftPerkSlotList; // 0x5b0
	char bLearned : 1; // 0x5c0
	USGToolTipWidget* ToolTipsTemplate; // 0x5c8
	char bIsMouseIn : 1; // 0x5d0
};

struct ANatureBGMVolume : AVolume {
	int32_t Priority; // 0x348
	FBGMDetailData ModifyBGM[0xa]; // 0x350
};

struct UAnimCompress_RemoveLinearKeys : UAnimCompress {
	float MaxPosDiff; // 0x40
	float MaxAngleDiff; // 0x44
	float MaxScaleDiff; // 0x48
	float MaxEffectorDiff; // 0x4c
	float MinEffectorDiff; // 0x50
	float EffectorDiffSocket; // 0x54
	float ParentKeyScale; // 0x58
	char bRetarget : 1; // 0x5c
	char bActuallyFilterLinearKeys : 1; // 0x5c
};

struct UDrawAndRevolveTool : UInteractiveTool {
	UCurveControlPointsMechanic* ControlPointsMechanic; // 0xf8
	UConstructionPlaneMechanic* PlaneMechanic; // 0x100
	URevolveToolProperties* Settings; // 0x108
	UNewMeshMaterialProperties* MaterialProperties; // 0x110
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0x118
};

struct UUI_ButtonBase : UUserWidget {
	FName ButtonName; // 0x260
	FName TwinkleImageName; // 0x268
	FButtonStyle ButtonStyle; // 0x270
	bool bCanClick; // 0x4e8
	UButton* BgButton; // 0x4f0
	UImage* TwinkleImage; // 0x4f8
};

struct UFormationSlot : UUserWidget {
	FName KeyName; // 0x260
	char FormationIndex; // 0x268
	UTextBlock* TbKey; // 0x270
	UImage* ImgPressedBorder; // 0x278
};

struct UNiagaraEffectType : UObject {
	ENiagaraScalabilityUpdateFrequency UpdateFrequency; // 0x28
	ENiagaraCullReaction CullReaction; // 0x2c
	UNiagaraSignificanceHandler* SignificanceHandler; // 0x30
	TArray<FNiagaraSystemScalabilitySettings> DetailLevelScalabilitySettings; // 0x38
	FNiagaraSystemScalabilitySettingsArray SystemScalabilitySettings; // 0x48
	FNiagaraEmitterScalabilitySettingsArray EmitterScalabilitySettings; // 0x58
};

struct USGHuangLi : UObject {
	FText YearText; // 0x28
	FText MonthText; // 0x40
	FText DayText; // 0x58
	TArray<FText> HuangLiNameText; // 0x70
	FHuangLiEffectNameDetail EffectNamesDetail[0x4]; // 0x80
	int32_t BeginYear; // 0x180
	int32_t BeginMonth; // 0x184
	int32_t BeginDay; // 0x188
	int32_t BeginHour; // 0x18c
	int32_t BeginMinute; // 0x190
	int32_t BeginSecond; // 0x194
	int32_t HuangLiDaySeconds; // 0x198
	FXingShenEffect XingShenEffects[0xc]; // 0x1a0
	FJianChuEffect JianChuEffects[0xc]; // 0x560
	FXingXiuEffect XingXiuEffects[0x1c]; // 0x920
	UDataTable* HuangLiDataTable; // 0x11e0
};

struct ABP_LightningEffect_FarThunderbolt_C : ABP_LightningEffect_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x6a8
	USoundBase* StrikeSound; // 0x6b0
	USoundBase* GrowthSoundFar; // 0x6b8
};

struct UWBP_ProducerList_C : UUI_ProducerList {
	UWidgetAnimation* RotateMirror; // 0xf70
	UImage* BottomBlack; // 0xf78
	UImage* HeadBlack; // 0xf80
	UImage* Image_Bg; // 0xf88
	UImage* ImageLogo; // 0xf90
	UImage* ImageLogoBg; // 0xf98
	UImage* ImageLogoBg_Texture; // 0xfa0
	UImage* ImageSpark; // 0xfa8
	UImage* ImageSwordFire; // 0xfb0
	UImage* ImageWenZiEffect; // 0xfb8
	UImage* OrnaLeft; // 0xfc0
	UWBP_ProducerName_C* WBP_ProducerName; // 0xfc8
	UWBP_ProducerName_2_C* WBP_ProducerName_3; // 0xfd0
	UWBP_ProducerName_3_C* WBP_ProducerName_4; // 0xfd8
	UWBP_ProducerName_4_C* WBP_ProducerName_5; // 0xfe0
	UWBP_ProducerName_5_C* WBP_ProducerName_6; // 0xfe8
	UWBP_ProducerName_6_C* WBP_ProducerName_7; // 0xff0
	UWBP_ProducerName_7_C* WBP_ProducerName_8; // 0xff8
};

struct UGameplayCueSet : UDataAsset {
	TArray<FGameplayCueNotifyData> GameplayCueData; // 0x30
};

struct UUI_Setting : USGUI {
	UUI_SystemSetting* SystemSettingUI; // 0x2d8
	UUI_KeySetting* KeySettingUI; // 0x2e0
	UButton* BtnReleaseKey; // 0x2e8
	UButton* BtnConfirm; // 0x2f0
	UButton* BtnSetToDefault; // 0x2f8
	UTextBlock* TbSetToDefault; // 0x300
	UButton* BtnClose; // 0x308
	UButton* BtnCancel; // 0x310
	int32_t CurSettingRadioIndex; // 0x318
	FVector2D MousePosition; // 0x31c
};

struct UMaterialExpressionStaticBoolParameter : UMaterialExpressionParameter {
	char DefaultValue : 1; // 0x58
};

struct UMovieSceneActorReferenceSection : UMovieSceneSection {
	FMovieSceneActorReferenceData ActorReferenceData; // 0xe8
	FIntegralCurve ActorGuidIndexCurve; // 0x198
	TArray<FString> ActorGuidStrings; // 0x218
};

struct AFishManagerVolume : AVolume {
	TArray<AFlockFish*> FlockTypes; // 0x348
	TArray<float> NumInFlock; // 0x358
	float OptimizationCheckTime; // 0x368
	float OptimizationDistance; // 0x36c
	float HideResetTime; // 0x374
	bool DebugShowArea; // 0x378
	bool DebugFishMove; // 0x379
	USGExploitComponent* DeathExploitComponentTemplate; // 0x380
};

struct UDeformMeshPolygonsTool : UMeshSurfacePointTool {
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0xc8
	UDeformMeshPolygonsTransformProperties* TransformProps; // 0xd0
};

struct ASGStructureBasement : ASGStructure {
	FSlateBrush SameTeamBasementBrush; // 0xb98
	TSoftObjectPtr<UTexture2D> SameTeamBasementTexture; // 0xc20
	FLinearColor SameTeamBasementColor; // 0xc48
	FSlateBrush DiffTeamBasementBrush; // 0xc58
	TSoftObjectPtr<UTexture2D> DiffTeamBasementTexture; // 0xce0
	FLinearColor DiffTeamBasementColor; // 0xd08
	FSlateBrush SameTeamLockBasementBrush; // 0xd18
	TSoftObjectPtr<UTexture2D> SameTeamLockBasementTexture; // 0xda0
	FLinearColor SameTeamLockBasementColor; // 0xdc8
	FSlateBrush DiffTeamLockBasementBrush; // 0xdd8
	TSoftObjectPtr<UTexture2D> DiffTeamLockBasementTexture; // 0xe60
	FLinearColor DiffTeamLockBasementColor; // 0xe88
	FSlateBrush AttackTeamBrush; // 0xe98
	TSoftObjectPtr<UTexture2D> AttackTeamTexture; // 0xf20
	FLinearColor AttackTeamColor; // 0xf48
	FSlateBrush DefenseTeamBrush; // 0xf58
	TSoftObjectPtr<UTexture2D> DefenseTeamTexture; // 0xfe0
	FLinearColor DefenseTeamColor; // 0x1008
	FSlateBrush NoTeamBrush; // 0x1018
	TSoftObjectPtr<UTexture2D> NoTeamTexture; // 0x10a0
	FLinearColor NoTeamColor; // 0x10c8
	UUserWidget* TitleWidget; // 0x10d8
	float PerpareTime; // 0x10e0
	float PlayTime; // 0x10e4
	float FailedLeaveTime; // 0x10e8
	float SuccessLeaveTime; // 0x10ec
	float FinishTime; // 0x10f0
	TArray<FBattleAwardItem> SuccessAward; // 0x10f8
	TArray<FBattleAwardItem> FailedAward; // 0x1108
	TArray<AActor*> DefenseGuildActors; // 0x1128
	TArray<AActor*> AttackGuildActors; // 0x1138
	TArray<AActor*> LogicServerLevelEffectActors; // 0x1148
	FMulticastInlineDelegate OnCurrentStageChanged; // 0x1190
	float BattleGroundMusicCheckTime; // 0x11a8
	float BattleGroundMusicTimeThreshold; // 0x11ac
	TArray<FBasementPhaseData> HpPhaseData; // 0x11b0
	UParticleSystemComponent* HpPhaseParticleComponent; // 0x11c0
};

struct UVideoCaptureProtocol : UFrameGrabberProtocol {
	bool bUseCompression; // 0x68
	float CompressionQuality; // 0x6c
};

struct USpectatorBeaconState : UObject {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	bool bRestrictCrossConsole; // 0x38
	TArray<FSpectatorReservation> Reservations; // 0x40
};

struct UEditableMesh : UObject {
	TArray<UEditableMeshAdapter*> Adapters; // 0x3b8
	int32_t TextureCoordinateCount; // 0x3d0
	int32_t PendingCompactCounter; // 0x51c
	int32_t SubdivisionCount; // 0x520
};

struct UUI_BattleGroup : USGUI {
	TSoftObjectPtr<UTexture2D> tex_win_bg; // 0x2d8
	TSoftObjectPtr<UTexture2D> tex_win_huawen; // 0x300
	TSoftObjectPtr<UTexture2D> tex_win_guanxiao; // 0x328
	TSoftObjectPtr<UTexture2D> tex_win_text_zh; // 0x350
	TSoftObjectPtr<UTexture2D> tex_win_text_en; // 0x378
	TSoftObjectPtr<UTexture2D> tex_fail_bg; // 0x3a0
	TSoftObjectPtr<UTexture2D> tex_fail_huawen; // 0x3c8
	TSoftObjectPtr<UTexture2D> tex_fail_guanxiao; // 0x3f0
	TSoftObjectPtr<UTexture2D> tex_fail_text_zh; // 0x418
	TSoftObjectPtr<UTexture2D> tex_fail_text_en; // 0x440
	UImage* Img_Bg; // 0x468
	UImage* Img_HuaWen; // 0x470
	UImage* Img_GuanXiao; // 0x478
	UImage* Img_ResultText; // 0x480
	int32_t CurrentCountDownTimeInt; // 0x488
	bool bShowRespawn; // 0x48c
	TArray<FSpawnLocationInfo> SpawnLocationInfos; // 0x490
	float GetSpawnLocationInterval; // 0x4a0
	EBattleGamePlayType BattleGamePlayType; // 0x4b0
	TArray<FPlayerBattleData> PlayerBattleDatas; // 0x4b8
	bool bBattleFinished; // 0x4c8
	bool bMySuccess; // 0x4c9
};

struct UNavigationPath : UObject {
	FMulticastInlineDelegate PathUpdatedNotifier; // 0x28
	TArray<FVector> PathPoints; // 0x38
	ENavigationOptionFlag RecalculateOnInvalidation; // 0x48
};

struct UCanvasPanelSlot : UPanelSlot {
	FAnchorData LayoutData; // 0x38
	bool bAutoSize; // 0x60
	int32_t ZOrder; // 0x64
};

struct UWidgetNavigation : UObject {
	FWidgetNavigationData Up; // 0x28
	FWidgetNavigationData Down; // 0x4c
	FWidgetNavigationData Left; // 0x70
	FWidgetNavigationData Right; // 0x94
	FWidgetNavigationData Next; // 0xb8
	FWidgetNavigationData Previous; // 0xdc
};

struct ASGStructureFunctionFacelift : ASGStructureFunctionTable {
	TSoftObjectPtr<UTexture2D> ThumbnailTexture; // 0xf80
};

struct UARTrackableNotifyComponent : UActorComponent {
	FMulticastInlineDelegate OnAddTrackedGeometry; // 0xc0
	FMulticastInlineDelegate OnUpdateTrackedGeometry; // 0xd0
	FMulticastInlineDelegate OnRemoveTrackedGeometry; // 0xe0
	FMulticastInlineDelegate OnAddTrackedPlane; // 0xf0
	FMulticastInlineDelegate OnUpdateTrackedPlane; // 0x100
	FMulticastInlineDelegate OnRemoveTrackedPlane; // 0x110
	FMulticastInlineDelegate OnAddTrackedPoint; // 0x120
	FMulticastInlineDelegate OnUpdateTrackedPoint; // 0x130
	FMulticastInlineDelegate OnRemoveTrackedPoint; // 0x140
	FMulticastInlineDelegate OnAddTrackedImage; // 0x150
	FMulticastInlineDelegate OnUpdateTrackedImage; // 0x160
	FMulticastInlineDelegate OnRemoveTrackedImage; // 0x170
	FMulticastInlineDelegate OnAddTrackedFace; // 0x180
	FMulticastInlineDelegate OnUpdateTrackedFace; // 0x190
	FMulticastInlineDelegate OnRemoveTrackedFace; // 0x1a0
	FMulticastInlineDelegate OnAddTrackedEnvProbe; // 0x1b0
	FMulticastInlineDelegate OnUpdateTrackedEnvProbe; // 0x1c0
	FMulticastInlineDelegate OnRemoveTrackedEnvProbe; // 0x1d0
	FMulticastInlineDelegate OnAddTrackedObject; // 0x1e0
	FMulticastInlineDelegate OnUpdateTrackedObject; // 0x1f0
	FMulticastInlineDelegate OnRemoveTrackedObject; // 0x200
};

struct UGuildAuthoritySlot : USGUI {
	UTextBlock* OperateAuthTypeText; // 0x2d8
	UGuildAuthorityComboBox* OperateAuthComboBox; // 0x2e0
	UDataButton* TipsDataButton; // 0x2e8
	USGToolTipWidget* ButtonTipWidgetTemplate; // 0x2f0
	UUI_GenericConfirmationDialog* ConfirmSubmitUIOverride; // 0x2f8
};

struct UGenericMultiItemSlot : UUserWidget {
	UImage* ImgIcon; // 0x260
	UTextBlock* AmountText; // 0x268
	TWeakObjectPtr<USGInventoryComponent> BindCheckInventory; // 0x270
	TWeakObjectPtr<USGItem> BindItem; // 0x278
	float SlotWidth; // 0x280
	float SlotHeight; // 0x284
	USizeBox* SlotSizeBox; // 0x288
	UButton* AddButton; // 0x290
	UButton* ReduceButton; // 0x298
	UEditableText* OperationAmountText; // 0x2a0
	int32_t MaxAmount; // 0x2a8
	int32_t CurrentAmount; // 0x2ac
	int32_t AllowAddMaxAmount; // 0x2b0
	int32_t FontSize; // 0x2b4
	UUI_GenericMultiItemDialog* ParnetUI; // 0x2b8
};

struct UNavMovementComponent : UMovementComponent {
	FNavAgentProperties NavAgentProps; // 0x100
	float FixedPathBrakingDistance; // 0x130
	char bUpdateNavAgentWithOwnersCollision : 1; // 0x134
	char bUseAccelerationForPaths : 1; // 0x134
	char bUseFixedBrakingDistanceForPaths : 1; // 0x134
	FMovementProperties MovementState; // 0x135
	UObject* PathFollowingComp; // 0x138
};

struct UAudioBus : UObject {
	EAudioBusChannels AudioBusChannels; // 0x28
	bool bIsAutomatic; // 0x29
};

struct ARuntimeVirtualTextureVolume : AActor {
	URuntimeVirtualTextureComponent* VirtualTextureComponent; // 0x310
};

struct UViewAlignedSculptBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct UAnimSharingInstance : UObject {
	TArray<AActor*> RegisteredActors; // 0x28
	UAnimationSharingStateProcessor* StateProcessor; // 0x88
	TArray<UAnimSequence*> UsedAnimationSequences; // 0xc8
	UEnum* StateEnum; // 0xe8
	AActor* SharingActor; // 0xf0
};

struct UMaterialExpressionMultiply : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UAbilityTask_WaitGameplayEffectStackChange : UAbilityTask {
	FMulticastInlineDelegate OnChange; // 0x80
	FMulticastInlineDelegate InvalidHandle; // 0x90
};

struct UResonanceAudioReverbPluginPreset : USoundEffectSubmixPreset {
	FResonanceAudioReverbPluginSettings Settings; // 0xe0
};

struct ULoudnessNRTSettings : UAudioSynesthesiaNRTSettings {
	float AnalysisPeriod; // 0x28
	float MinimumFrequency; // 0x2c
	float MaximumFrequency; // 0x30
	ELoudnessNRTCurveTypeEnum CurveType; // 0x34
	float NoiseFloorDb; // 0x38
};

struct ASGStructureFunctionCraft : ASGStructureFunctionTable {
	TSoftObjectPtr<UTexture2D> ThumbnailTexture; // 0xf80
};

struct ULandscapeSplineControlPoint : UObject {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	float Width; // 0x40
	float LayerWidthRatio; // 0x44
	float SideFalloff; // 0x48
	float LeftSideFalloffFactor; // 0x4c
	float RightSideFalloffFactor; // 0x50
	float LeftSideLayerFalloffFactor; // 0x54
	float RightSideLayerFalloffFactor; // 0x58
	float EndFalloff; // 0x5c
	TArray<FLandscapeSplineConnection> ConnectedSegments; // 0x60
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	UControlPointMeshComponent* LocalMeshComponent; // 0xa0
};

struct UN_InventoryPanel : UUserWidget {
	UBorder* InventoryExchangeBorder; // 0x260
	EInventoryTypes BindInventoryType; // 0x268
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x26c
	TArray<UN_InventorySlot*> InventorySlotList; // 0x278
	USGUI* ParentSGUI; // 0x288
	USGUI* RootSGUI; // 0x290
	char bSlotAllowDrag : 1; // 0x298
	char bRemote : 1; // 0x298
	EInventoryPanelBgType InventoryPanelBgType; // 0x299
	UImage* BottomBg; // 0x2a0
	UUniformGridPanel* InventoryGrid; // 0x2a8
	UInventoryFunctionButton* ArrangeButton; // 0x2b0
	UInventoryFunctionButton* SwitchButton; // 0x2b8
	UInventoryFunctionButton* DropAllButton; // 0x2c0
	UInventoryFunctionButton* DropButton; // 0x2c8
	UInventoryFunctionButton* ShowWeightButton; // 0x2d0
	UInventoryItemTypeFilterSlot* ConsumeTypeSlot; // 0x2d8
	UInventoryItemTypeFilterSlot* EquipTypeSlot; // 0x2e0
	UInventoryItemTypeFilterSlot* WeaponTypeSlot; // 0x2e8
	UInventoryItemTypeFilterSlot* AmmoTypeSlot; // 0x2f0
	UInventoryItemTypeFilterSlot* StructureTypeSlot; // 0x2f8
	UInventoryItemTypeFilterSlot* ResourceTypeSlot; // 0x300
	UInventoryItemTypeFilterSlot* SearchTypeSlot; // 0x308
	UEditableTextBox* SearchEditBox; // 0x310
	UCanvasPanel* FilterPanel; // 0x318
	UHorizontalBox* PanelButtonPanel; // 0x320
	UCanvasPanel* TitlePanel; // 0x328
	UTextBlock* TitleText; // 0x330
	UImage* TitleImage; // 0x338
	UCanvasPanel* WeightCanvas; // 0x340
	UTextBlock* WeightText; // 0x348
	UCanvasPanel* SlotNumCanvas; // 0x350
	UTextBlock* SlotNumText; // 0x358
	FSlateBrush AboveTitleImageBrush; // 0x360
	FText RemoteTitleText; // 0x3e8
	FText GeneralTitleText; // 0x400
	FText HorseTitleText; // 0x418
	FText CrossServerTitleText; // 0x430
	FText BattleTitleText; // 0x448
	int32_t UnLockNum; // 0x460
	FVector2D FilterPanelAbovePos; // 0x464
	char bDisplayHelpPanel : 1; // 0x46c
	char bNeedRefreshSlotNum : 1; // 0x480
	FString SearchString; // 0x488
	UInventoryItemTypeFilterSlot* CurrentActiveFilterSlot; // 0x498
	char bForceShowDefaultNum : 1; // 0x4a0
	TWeakObjectPtr<USGItem> RecordTransportItem; // 0x4a4
	TWeakObjectPtr<USGInventoryComponent> RecordTransportItemInventoy; // 0x4ac
	EInventoryTypes RecordTransportItemInventoyType; // 0x4b4
	char bRecordShift : 1; // 0x4b5
	char bRecordCtrl : 1; // 0x4b5
	char bNeedShowFuelGuide : 1; // 0x4b5
	int32_t CountsPerRow; // 0x4b8
	int32_t CurrentInventoryNum; // 0x4bc
	int32_t TickUpdateSlotNumber; // 0x4c0
	int32_t LastInventoryItemNum; // 0x4c4
	int32_t DefaultShowInventoryNum; // 0x4cc
	UN_InventorySlot* InventorySlotClass; // 0x4d0
	FName HelpPanelName; // 0x4d8
	UHorizontalBox* HelpPanel; // 0x4e0
	FName QuickHelpPanelName; // 0x4e8
	UN_QuickHelpPanel* QuickHelpPanel; // 0x4f0
	UQuickHelpSlot* QuickHelpSlotTemplate; // 0x4f8
};

struct UAbilityTask_ApplyRootMotion_Base : UAbilityTask {
	FName ForceName; // 0x84
	ERootMotionFinishVelocityMode FinishVelocityMode; // 0x8c
	FVector FinishSetVelocity; // 0x90
	float FinishClampVelocity; // 0x9c
	UCharacterMovementComponent* MovementComponent; // 0xa0
};

struct UClothPhysicalMeshDataNv_Legacy : UClothPhysicalMeshDataBase_Legacy {
	TArray<float> MaxDistances; // 0xe0
	TArray<float> BackstopDistances; // 0xf0
	TArray<float> BackstopRadiuses; // 0x100
	TArray<float> AnimDriveMultipliers; // 0x110
};

struct UParticleSystemComponent : UFXSystemComponent {
	UParticleSystem* Template; // 0x488
	TArray<UMaterialInterface*> EmitterMaterials; // 0x490
	TArray<USkeletalMeshComponent*> SkelMeshComponents; // 0x4a0
	char bResetOnDetach : 1; // 0x4b1
	char bUpdateOnDedicatedServer : 1; // 0x4b1
	char bAllowRecycling : 1; // 0x4b1
	char bAutoManageAttachment : 1; // 0x4b1
	char bAutoAttachWeldSimulatedBodies : 1; // 0x4b1
	char bWarmingUp : 1; // 0x4b2
	char bOverrideLODMethod : 1; // 0x4b2
	char bSkipUpdateDynamicDataDuringTick : 1; // 0x4b2
	ParticleSystemLODMethod LODMethod; // 0x4bd
	EParticleSignificanceLevel RequiredSignificance; // 0x4be
	TArray<FParticleSysParam> InstanceParameters; // 0x4c0
	FMulticastInlineDelegate OnParticleSpawn; // 0x4d0
	FMulticastInlineDelegate OnParticleBurst; // 0x4e0
	FMulticastInlineDelegate OnParticleDeath; // 0x4f0
	FMulticastInlineDelegate OnParticleCollide; // 0x500
	bool bOldPositionValid; // 0x510
	FVector OldPosition; // 0x514
	FVector PartSysVelocity; // 0x520
	float WarmupTime; // 0x52c
	float WarmupTickRate; // 0x530
	float SecondsBeforeInactive; // 0x538
	float MaxTimeBeforeForceUpdateTransform; // 0x540
	TArray<UParticleSystemReplay*> ReplayClips; // 0x568
	float CustomTimeDilation; // 0x580
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x5d8
	FName AutoAttachSocketName; // 0x5e0
	EAttachmentRule AutoAttachLocationRule; // 0x5e8
	EAttachmentRule AutoAttachRotationRule; // 0x5e9
	EAttachmentRule AutoAttachScaleRule; // 0x5ea
	FMulticastInlineDelegate OnSystemFinished; // 0x618
};

struct UBTTask_WaitBlackboardTime : UBTTask_Wait {
	FBlackboardKeySelector BlackboardKey; // 0x78
};

struct ABP_HorseMC_Login_Base_C : ACharacter {
	FPointerToUberGraphFrame UberGraphFrame; // 0x5d0
	USkeletalMeshComponent* Armor; // 0x5d8
	UStaticMeshComponent* Weapon; // 0x5e0
	USkeletalMeshComponent* Ponytail; // 0x5e8
	USkeletalMeshComponent* Bristle; // 0x5f0
	USkeletalMeshComponent* Saddle; // 0x5f8
	USkeletalMeshComponent* Cuish; // 0x600
	USkeletalMeshComponent* Chest; // 0x608
	USkeletalMeshComponent* Helmet; // 0x610
	USkeletalMeshComponent* Human; // 0x618
	UABP_MenuCharacter_C* MenuCharacterAnimInstance; // 0x620
	UABP_MenuHorse_C* MenuHorseAnimInstance; // 0x628
	UAnimSequence* HumanAnimation; // 0x630
	UAnimSequence* HorseAnimation; // 0x638
	bool Left Reins Enabled; // 0x640
	bool Right Reins Enabled; // 0x641
};

struct URemoveOccludedTrianglesOperatorFactory : UObject {
	URemoveOccludedTrianglesTool* Tool; // 0x30
};

struct UGuildQuestObjectSlot : USGUI {
	UImage* BGImage; // 0x2d8
	UTextBlock* QuestObjectNameText; // 0x2e0
	UTextBlock* QuestObjectDescText; // 0x2e8
	TSoftObjectPtr<UTexture2D> NormalTexture; // 0x2f0
	TSoftObjectPtr<UTexture2D> CompleteTexture; // 0x318
};

struct ADecalActor : AActor {
	UDecalComponent* Decal; // 0x310
};

struct UPhononSourceComponent : USceneComponent {
	float BakingRadius; // 0x208
	FName UniqueIdentifier; // 0x20c
};

struct USGPerkToolTipWidget : USGToolTipWidget {
	USGCraftRequirementEntry* CraftRequirementEntry; // 0x288
	TWeakObjectPtr<UPerkSlot> BindPerkSlot; // 0x290
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x298
	UCanvasPanel* MainCanvas; // 0x2a0
	UTextBlock* TbPerkName; // 0x2a8
	UTextBlock* TbPerkDescription; // 0x2b0
	UTextBlock* TbNeedCharacterLevel; // 0x2b8
	UTextBlock* TbSmallSkill; // 0x2c0
	UTextBlock* TbNeedSkillLevel; // 0x2c8
	UTextBlock* TbNeedPoint; // 0x2d0
	UTextBlock* TbNeedCapital; // 0x2d8
	UTextBlock* TbNeedPerk; // 0x2e0
	UVerticalBox* RequireVertical; // 0x2e8
	UVerticalBox* CraftRequirementsList; // 0x2f0
	UCanvasPanel* RequireCharacterLevelCanvas; // 0x2f8
	UCanvasPanel* RequireSmallSkillCanvas; // 0x300
	UCanvasPanel* RequireSkillLevelCanvas; // 0x308
	UCanvasPanel* RequirePerkCanvas; // 0x310
	UCanvasPanel* RequirePointCanvas; // 0x318
	UCanvasPanel* RequireCapitalCanvas; // 0x320
	UHorizontalBox* RequireItemCanvas; // 0x328
	UCanvasPanel* RequireMultiCompulsorySkillCanvas; // 0x330
	UCanvasPanel* RequireMultiElectiveSkillCanvas; // 0x338
	UTextBlock* NeedCharacterLevelText; // 0x340
	UTextBlock* NeedSmallSkillText; // 0x348
	UTextBlock* NeedSkillLevelText; // 0x350
	UTextBlock* NeedPerkText; // 0x358
	UTextBlock* NeedItemsText; // 0x360
	UTextBlock* NeedPointText; // 0x368
	UTextBlock* NeedCapitalText; // 0x370
	UTextBlock* RequireMultiCompulsorySkillText; // 0x378
	UTextBlock* RequireMultiElectiveSkillText; // 0x380
	UVerticalBox* CompulsorySkillVertical; // 0x388
	UVerticalBox* ElectiveSkillVertical; // 0x390
	USGPerkTipMultiSkillText* PerkTipMultiSkillTemplate; // 0x398
	FSPSmallSkillText SmallSkillText[0x5]; // 0x3a0
	FLinearColor EnoughColor; // 0x3f0
	FLinearColor NotEnoughColor; // 0x400
	FText SavedLearnPerkItemEnoughText; // 0x410
	int32_t PerkLevel; // 0x428
	float ToolTipsDescriptionTextWrapDelta; // 0x42c
};

struct ULevelSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x68
	FLevelSequenceObjectReferenceMap ObjectReferences; // 0x70
	FLevelSequenceBindingReferences BindingReferences; // 0xc0
	TMap<FString, FLevelSequenceObject> PossessedObjects; // 0x160
	UObject* DirectorClass; // 0x1b0
	TArray<UAssetUserData*> AssetUserData; // 0x1b8
};

struct USGGameDataJueWei : UObject {
	TMap<int32_t, FJueWeiConfig> AllJueWei; // 0x28
	float RenownExpAdd[0xd]; // 0x78
	TArray<FText> JueWeiPropTip; // 0xb0
};

struct UPanelSlot : UVisual {
	UPanelWidget* Parent; // 0x28
	UWidget* Content; // 0x30
};

struct UJueWeiPropSlot : USGUI {
	UImage* IconImage; // 0x2d8
	UTextBlock* PropText; // 0x2e0
	USGToolTipWidget* TipWidgetTemplate; // 0x2e8
	FText TipText; // 0x2f0
};

struct ULandscapeSplineSegment : UObject {
	FLandscapeSplineSegmentConnection Connections[0x2]; // 0x28
	FInterpCurveVector SplineInfo; // 0x58
	TArray<FLandscapeSplineInterpPoint> Points; // 0x70
	FBox Bounds; // 0x80
	TArray<USplineMeshComponent*> LocalMeshComponents; // 0xa0
};

struct UUI_NPCTalkSlot : UUserWidget {
	char bLeftMouseButtonDown : 1; // 0x260
	char bCanNotPress : 1; // 0x260
	UBorder* bg; // 0x268
	UImage* NPCQuestionImage; // 0x270
	UTextBlock* NPCQuestionText; // 0x278
	TSoftObjectPtr<UTexture2D> BGUnSelected; // 0x280
	TSoftObjectPtr<UTexture2D> BGSelected; // 0x2a8
	FLinearColor TextCanNotPressColor; // 0x2d0
	FLinearColor TextWarningColor; // 0x2e0
	FLinearColor TextErrorColor; // 0x2f0
	char IsHover : 1; // 0x300
	char bPressed : 1; // 0x300
	USGUI* RootSGUI; // 0x308
	TWeakObjectPtr<ASGGeneralCharacter> BindGeneralCharacter; // 0x310
	FNPCTalkInfo BindTalkInfo; // 0x318
	int32_t BindTalkID; // 0x388
};

struct UAsyncTaskDownloadImage : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFail; // 0x40
};

struct UNiagaraComponent : UFXSystemComponent {
	UNiagaraSystem* Asset; // 0x488
	ENiagaraTickBehavior TickBehavior; // 0x490
	FNiagaraUserRedirectionParameterStore OverrideParameters; // 0x498
	char bForceSolo : 1; // 0x560
	char bEnableGpuComputeDebug : 1; // 0x560
	char bAutoDestroy : 1; // 0x58c
	char bRenderingEnabled : 1; // 0x58c
	char bAutoManageAttachment : 1; // 0x58c
	char bAutoAttachWeldSimulatedBodies : 1; // 0x58c
	float MaxTimeBeforeForceUpdateTransform; // 0x590
	TArray<FNiagaraMaterialOverride> EmitterMaterials; // 0x598
	FMulticastInlineDelegate OnSystemFinished; // 0x5b0
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x5c0
	FName AutoAttachSocketName; // 0x5c8
	EAttachmentRule AutoAttachLocationRule; // 0x5d0
	EAttachmentRule AutoAttachRotationRule; // 0x5d1
	EAttachmentRule AutoAttachScaleRule; // 0x5d2
};

struct UUI_StructureOccupyBuffPanel : UUserWidget {
	TWeakObjectPtr<ASGStructureOccupy> RemoteActor; // 0x260
	USGUI* RootSGUI; // 0x268
	UVerticalBox* ProtectBox; // 0x270
	UUI_StructureOccupyBuffSlot* OccupyBuffSlotClass; // 0x278
};

struct USynthComponentMoto : USynthComponent {
	UMotoSynthPreset* MotoSynthPreset; // 0x6d0
	float RPM; // 0x6d8
};

struct UVehicleAttributePanel : UUserWidget {
	UTextBlock* HPText; // 0x260
	UTextBlock* StunText; // 0x268
	UTextBlock* SPText; // 0x270
	UTextBlock* MaxSpeedText; // 0x278
	UTextBlock* OperateText; // 0x280
	UTextBlock* HungryText; // 0x288
	UTextBlock* WeightText; // 0x290
	UTextBlock* HealthText; // 0x298
	UTextBlock* ImpactText; // 0x2a0
	UTextBlock* LifeCountText; // 0x2a8
	UTextBlock* SlashArmorText; // 0x2b0
	UTextBlock* PierceArmorText; // 0x2b8
	UTextBlock* CrushArmorText; // 0x2c0
	UTextBlock* SiegeArmorText; // 0x2c8
	TWeakObjectPtr<ASG_AnimalVehicleCharacter> BindVehicleCharacter; // 0x2d0
};

struct UGroupEdgeInsertionProperties : UInteractiveToolPropertySet {
	EGroupEdgeInsertionMode InsertionMode; // 0x60
	bool bWireframe; // 0x64
	double VertexTolerance; // 0x68
};

struct UButtonSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UGuildMemberListPanel : USGUI {
	UButton* LeaveGuildButton; // 0x2d8
	UButton* GuildGroupButton; // 0x2e0
	UButton* GuildSkillButton; // 0x2e8
	UButton* GuildTechButton; // 0x2f0
	UButton* ZhanLingButton; // 0x2f8
	UButton* KPIManagementButton; // 0x300
	UDataButton* PrePageDataButton; // 0x308
	UDataButton* NextPageDataButton; // 0x310
	UTextBlock* ShowPageText; // 0x318
	UCanvasPanel* MemberListPanel; // 0x320
	USortableTitleSlot* PlayerNameTitleSlot; // 0x328
	USortableTitleSlot* PlayerLevelTitleSlot; // 0x330
	USortableTitleSlot* MemberLevelTitleSlot; // 0x338
	USortableTitleSlot* GongXunTitleSlot; // 0x340
	USortableTitleSlot* OfficialJobTitleSlot; // 0x348
	USortableTitleSlot* MemberGroupTitleSlot; // 0x350
	USortableTitleSlot* DKPTitleSlot; // 0x358
	USortableTitleSlot* OnlineStateTitleSlot; // 0x360
	USortableTitleSlot* ManagementTitleSlot; // 0x368
	int32_t GuildMemberNumPerPage; // 0x370
	FVector2D MemberSlotSize; // 0x374
	UGuildMemberSlot* GuildMemberSlotClass; // 0x380
	UUI_ApplyGuildConfirm* ConfirmLeaveGuildUIOverride; // 0x388
	UUI_GenericConfirmationDialog* ConfirmKickOutUIOverride; // 0x390
	UUI_GenericConfirmationDialog* ConfirmChangeOwnerUIOverride; // 0x398
};

struct UTreeView : UListView {
	FDelegate BP_OnGetItemChildren; // 0x378
	FMulticastInlineDelegate BP_OnItemExpansionChanged; // 0x388
};

struct USGAudioComponent : UAudioComponent {
	float OverrideStartTime; // 0x878
	float FadeInDuration; // 0x87c
	float FadeInVolumeLevel; // 0x880
	float FadeOutDuration; // 0x884
	float FadeOutVolumeLevel; // 0x888
	EAudioFaderCurve FadeCurve; // 0x88c
	float CurrentPlaybackTime; // 0x890
	TWeakObjectPtr<USoundCue> SGSynthSoundCue; // 0x894
};

struct UUI_RadioButtonView : UUserWidget {
	TMap<FString, UUI_RadioButton*> RadioButtonMap; // 0x260
	FMulticastInlineDelegate OnRadioButtonViewButtonPressed; // 0x2b0
	FMulticastInlineDelegate OnRadioButtonViewButtonReleased; // 0x2c0
	int32_t DefaultActiveIndex; // 0x2d0
	UUI_RadioButton* ActiveRadioButton; // 0x2d8
	UPanelWidget* RadioButtonPanel; // 0x2e0
};

struct UWBP_OverallScalabilityLevelSliderView_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UTextBlock* Custom; // 0x370
	UTextBlock* Epic; // 0x378
	UTextBlock* Excellent; // 0x380
	UTextBlock* High; // 0x388
	UImage* ImgScrollBg; // 0x390
	UTextBlock* Low; // 0x398
	UTextBlock* Medium; // 0x3a0
	UImage* Point1; // 0x3a8
	UImage* Point2; // 0x3b0
	UImage* Point3; // 0x3b8
	UImage* Point4; // 0x3c0
	UImage* Point5; // 0x3c8
	UImage* Point6; // 0x3d0
	USlider* Slider; // 0x3d8
	int32_t SelectIndex; // 0x3e0
	FMulticastInlineDelegate OnSelectIndexChanged; // 0x3e8
};

struct UParticleModuleColor : UParticleModuleColorBase {
	FRawDistributionVector StartColor; // 0x30
	FRawDistributionFloat StartAlpha; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct USphereComponent : UShapeComponent {
	float SphereRadius; // 0x4a0
};

struct UNiagaraDataInterfaceArrayBool : UNiagaraDataInterfaceArray {
	TArray<bool> BoolData; // 0x50
};

struct UAREnvironmentProbeComponent : UARComponent {
	FAREnvironmentProbeUpdatePayload ReplicatedPayload; // 0x290
};

struct USubmixEffectStereoDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectStereoDelaySettings Settings; // 0xb4
};

struct UNiagaraDataInterfaceAudioSpectrum : UNiagaraDataInterfaceAudioSubmix {
	int32_t Resolution; // 0x40
	float MinimumFrequency; // 0x44
	float MaximumFrequency; // 0x48
	float NoiseFloorDb; // 0x4c
};

struct USimpleItemSlot : UUserWidget {
	UImage* ImgIcon; // 0x260
	UBorder* OutBorder; // 0x268
	FLinearColor UnactivedColor; // 0x270
	FSlateBrush OutBorder_Normal; // 0x280
	FSlateBrush OutBorder_Hover; // 0x308
	FSlateBrush Active_Brush; // 0x390
	char IsHover : 1; // 0x418
	USGUI* RootSGUI; // 0x420
	USGUI* ParentUI; // 0x428
	char bActived : 1; // 0x430
	int32_t iLeftDays; // 0x434
	float iTotalDays; // 0x438
	USGItem* BindItemClass; // 0x440
	USGToolTipWidget* ToolTipsTemplate; // 0x448
};

struct UInputAxisDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputAxisDelegateBinding> InputAxisDelegateBindings; // 0x28
};

struct UMaterial : UMaterialInterface {
	UPhysicalMaterial* PhysMaterial; // 0x88
	UPhysicalMaterialMask* PhysMaterialMask; // 0x90
	UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0x98
	FScalarMaterialInput Metallic; // 0xd8
	FScalarMaterialInput Specular; // 0xec
	FScalarMaterialInput Anisotropy; // 0x100
	FVectorMaterialInput Normal; // 0x114
	FVectorMaterialInput Tangent; // 0x128
	FColorMaterialInput EmissiveColor; // 0x13c
	EMaterialDomain MaterialDomain; // 0x150
	EBlendMode BlendMode; // 0x151
	EDecalBlendMode DecalBlendMode; // 0x152
	EMaterialDecalResponse MaterialDecalResponse; // 0x153
	EMaterialShadingModel ShadingModel; // 0x154
	char bCastDynamicShadowAsMasked : 1; // 0x155
	FMaterialShadingModelField ShadingModels; // 0x156
	float OpacityMaskClipValue; // 0x158
	int32_t MaterialObjectFlag; // 0x15c
	FVectorMaterialInput WorldPositionOffset; // 0x160
	FScalarMaterialInput Refraction; // 0x174
	FMaterialAttributesInput MaterialAttributes; // 0x188
	FScalarMaterialInput PixelDepthOffset; // 0x1a0
	FShadingModelMaterialInput ShadingModelFromMaterialExpression; // 0x1b4
	char bEnableSeparateTranslucency : 1; // 0x1c8
	char bEnableResponsiveAA : 1; // 0x1c8
	char bScreenSpaceReflections : 1; // 0x1c8
	char bContactShadows : 1; // 0x1c8
	char TwoSided : 1; // 0x1c8
	char DitheredLODTransition : 1; // 0x1c8
	char DitherOpacityMask : 1; // 0x1c8
	char bAllowNegativeEmissiveColor : 1; // 0x1c8
	ETranslucencyLightingMode TranslucencyLightingMode; // 0x1c9
	char bEnableMobileSeparateTranslucency : 1; // 0x1ca
	int32_t NumCustomizedUVs; // 0x1cc
	float TranslucencyDirectionalLightingIntensity; // 0x1d0
	float TranslucentShadowDensityScale; // 0x1d4
	float TranslucentSelfShadowDensityScale; // 0x1d8
	float TranslucentSelfShadowSecondDensityScale; // 0x1dc
	float TranslucentSelfShadowSecondOpacity; // 0x1e0
	float TranslucentBackscatteringExponent; // 0x1e4
	FLinearColor TranslucentMultipleScatteringExtinction; // 0x1e8
	float TranslucentShadowStartOffset; // 0x1f8
	char bDisableDepthTest : 1; // 0x1fc
	char bWriteOnlyAlpha : 1; // 0x1fc
	char bGenerateSphericalParticleNormals : 1; // 0x1fc
	char bTangentSpaceNormal : 1; // 0x1fc
	char bUseEmissiveForDynamicAreaLighting : 1; // 0x1fc
	char bBlockGI : 1; // 0x1fc
	char bUsedAsSpecialEngineMaterial : 1; // 0x1fc
	char bUsedWithSkeletalMesh : 1; // 0x1fc
	char bUsedWithEditorCompositing : 1; // 0x1fd
	char bUsedWithParticleSprites : 1; // 0x1fd
	char bUsedWithBeamTrails : 1; // 0x1fd
	char bUsedWithMeshParticles : 1; // 0x1fd
	char bUsedWithNiagaraSprites : 1; // 0x1fd
	char bUsedWithNiagaraRibbons : 1; // 0x1fd
	char bUsedWithNiagaraMeshParticles : 1; // 0x1fd
	char bUsedWithGeometryCache : 1; // 0x1fd
	char bUsedWithStaticLighting : 1; // 0x1fe
	char bUsedWithMorphTargets : 1; // 0x1fe
	char bUsedWithSplineMeshes : 1; // 0x1fe
	char bUsedWithInstancedStaticMeshes : 1; // 0x1fe
	char bUsedWithGeometryCollections : 1; // 0x1fe
	char bUsesDistortion : 1; // 0x1fe
	char bUsedWithClothing : 1; // 0x1fe
	char bUsedWithWater : 1; // 0x200
	char bUsedWithHairStrands : 1; // 0x200
	char bUsedWithLidarPointCloud : 1; // 0x200
	char bUsedWithVirtualHeightfieldMesh : 1; // 0x200
	char bUsedWithUI : 1; // 0x204
	char bAutomaticallySetUsageInEditor : 1; // 0x204
	char bFullyRough : 1; // 0x204
	char bUseFullPrecision : 1; // 0x204
	char bUseLightmapDirectionality : 1; // 0x204
	char bUseAlphaToCoverage : 1; // 0x204
	char bForwardRenderUsePreintegratedGFForSimpleIBL : 1; // 0x208
	char bUseHQForwardReflections : 1; // 0x20c
	char bUsePlanarForwardReflections : 1; // 0x20c
	char bNormalCurvatureToRoughness : 1; // 0x20c
	EMaterialTessellationMode D3D11TessellationMode; // 0x20d
	char bEnableCrackFreeDisplacement : 1; // 0x20e
	char bEnableAdaptiveTessellation : 1; // 0x20e
	char AllowTranslucentCustomDepthWrites : 1; // 0x20e
	char AllowTranslucentOcclusionPassWrites : 1; // 0x20e
	char Wireframe : 1; // 0x20e
	EMaterialShadingRate ShadingRate; // 0x20f
	char bCanMaskedBeAssumedOpaque : 1; // 0x210
	char bIsMasked : 1; // 0x210
	char bIsPreviewMaterial : 1; // 0x210
	char bIsFunctionPreviewMaterial : 1; // 0x210
	char bUseMaterialAttributes : 1; // 0x210
	char bCastRayTracedShadows : 1; // 0x210
	char bUseTranslucencyVertexFog : 1; // 0x210
	char bApplyCloudFogging : 1; // 0x210
	char bIsSky : 1; // 0x211
	char bComputeFogPerPixel : 1; // 0x211
	char bOutputTranslucentVelocity : 1; // 0x211
	char bAllowDevelopmentShaderCompile : 1; // 0x211
	char bIsMaterialEditorStatsMaterial : 1; // 0x211
	EBlendableLocation BlendableLocation; // 0x212
	char BlendableOutputAlpha : 1; // 0x213
	char bEnableStencilTest : 1; // 0x213
	EMaterialStencilCompare StencilCompare; // 0x214
	char StencilRefValue; // 0x215
	ERefractionMode RefractionMode; // 0x216
	int32_t BlendablePriority; // 0x218
	char bIsBlendable : 1; // 0x21c
	uint32_t UsageFlagWarnings; // 0x220
	float RefractionDepthBias; // 0x224
	FGuid StateId; // 0x228
	float MaxDisplacement; // 0x238
	FMaterialCachedExpressionData CachedExpressionData; // 0x270
};

struct UMaterialExpressionSaturate : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UAnimSequence : UAnimSequenceBase {
	int32_t NumFrames; // 0xa8
	TArray<FTrackToSkeletonMap> TrackToSkeletonMapTable; // 0xb0
	UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xd0
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd8
	EAdditiveAnimationType AdditiveAnimType; // 0x150
	EAdditiveBasePoseType RefPoseType; // 0x151
	UAnimSequence* RefPoseSeq; // 0x158
	int32_t RefFrameIndex; // 0x160
	FName RetargetSource; // 0x164
	EAnimInterpolationType Interpolation; // 0x16c
	bool bEnableRootMotion; // 0x16d
	ERootMotionRootLock RootMotionRootLock; // 0x16e
	bool bForceRootLock; // 0x16f
	bool bUseNormalizedRootMotionScale; // 0x170
	bool bRootMotionSettingsCopiedFromMontage; // 0x171
	TArray<FAnimSyncMarker> AuthoredSyncMarkers; // 0x178
	TArray<FBakedCustomAttributePerBoneData> BakedPerBoneCustomAttributeData; // 0x1a0
};

struct ATestPlayerCharacterData : AActor {
	TArray<FBattleSoliderInfo> BattleSoliderInfos; // 0x310
};

struct UInputRouter : UObject {
	bool bAutoInvalidateOnHover; // 0x28
	bool bAutoInvalidateOnCapture; // 0x29
	UInputBehaviorSet* ActiveInputBehaviors; // 0x38
};

struct UUI_VehicleGenealogy : USGUI {
	int32_t OriginColumn; // 0x2d8
	int32_t OriginRows; // 0x2dc
	float SlotLength; // 0x2e0
	float SlotWidth; // 0x2e4
	UVehicleGenealogySlot* GenealogySlotTemplate; // 0x2e8
	TArray<float> GenealogyRowsMul; // 0x2f0
	UCanvasPanel* LoadingCanvas; // 0x300
	UHorizontalBox* GenealogyHB; // 0x308
	UCanvasPanel* GenealogyPanel; // 0x310
	UButton* CloseBtn; // 0x318
	UUI_VehiclePerk* VehiclePerkPanel; // 0x320
	UVehicleGenealogySlot* MyGenealogySlot; // 0x328
	UVehicleGenealogySlot* FatherGenealogySlot; // 0x330
	UVehicleGenealogySlot* MotherGenealogySlot; // 0x338
	UVehicleGenealogySlot* GrandFatherGenealogySlot_F; // 0x340
	UVehicleGenealogySlot* GrandMotherGenealogySlot_F; // 0x348
	UVehicleGenealogySlot* GrandFatherGenealogySlot_M; // 0x350
	UVehicleGenealogySlot* GrandMotherGenealogySlot_M; // 0x358
	TWeakObjectPtr<ASG_AnimalsCharacter> BindVehicleCharacter; // 0x360
};

struct AUIWSCapture : AActor {
	USceneCaptureComponent2D* SceneCaptureComp; // 0x310
	USceneComponent* SceneRoot; // 0x318
	UMaterialInstanceDynamic* DrawMID; // 0x320
	FVector moveoffset; // 0x328
	UTextureRenderTarget2D* RTPersistent; // 0x338
	UTextureRenderTarget2D* RTCapture; // 0x340
	UMaterialParameterCollection* MPC_UIWSWaterBodies; // 0x348
};

struct UGridPanel : UPanelWidget {
	TArray<float> ColumnFill; // 0x120
	TArray<float> RowFill; // 0x130
};

struct USimpleDynamicMeshComponent : UBaseDynamicMeshComponent {
	EDynamicMeshTangentCalcType TangentsType; // 0x4f8
	bool bInvalidateProxyOnChange; // 0x4f9
	bool bExplicitShowWireframe; // 0x530
	bool bDrawOnTop; // 0x580
};

struct UN_SlotExtraMenuButton : UUserWidget {
	UButton* ExtraButton; // 0x260
	UTextBlock* ExtraText; // 0x268
	FName ActionName[0x18]; // 0x274
	FText AltText; // 0x338
	FText ShiftText; // 0x350
	FText CmdText; // 0x368
	FText CtrlText; // 0x380
	FText PlaceText; // 0x3a0
	FText EquipText; // 0x3b8
	FText UseText; // 0x3d0
	FText UnEquipText; // 0x3e8
	FText SplitText; // 0x400
	FText RepairText; // 0x418
	FText ExchangeText; // 0x430
	FText CraftOneText; // 0x448
	FText CraftMoreText; // 0x460
	FText FeedText; // 0x478
	FText LearnAWText; // 0x490
	FText GiveText; // 0x4a8
	FText OpenPackageText; // 0x4c0
	FText MapSignText; // 0x4d8
	FText GiftText; // 0x4f0
	FText ChangeNameText; // 0x508
	FText AddFoodText; // 0x520
	FText AddMoneyText; // 0x538
	FText EquipAppearanceText; // 0x550
	FText UnEquipAppearanceText; // 0x568
	FText UnlockAppearanceText; // 0x580
	FText DropText; // 0x598
	FText SetPriorityText; // 0x5b0
};

struct UMaterialExpressionArcsine : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UPhononMaterialComponent : UActorComponent {
	int32_t MaterialIndex; // 0xc0
	EPhononMaterial MaterialPreset; // 0xc4
	float LowFreqAbsorption; // 0xc8
	float MidFreqAbsorption; // 0xcc
	float HighFreqAbsorption; // 0xd0
	float LowFreqTransmission; // 0xd4
	float MidFreqTransmission; // 0xd8
	float HighFreqTransmission; // 0xdc
	float Scattering; // 0xe0
};

struct USoundNodeTime : USoundNode {
	float PreviewTimeVolumeMultiplierSet[0x2]; // 0x48
};

struct UCameraRadioButton : UUI_RadioButton {
	int32_t CameraLevel; // 0x540
	FName CameraTarget; // 0x544
	FRotator BodyRotator; // 0x54c
};

struct UVaulting_AnimNotifyState : UAnimNotifyState {
	UAnimMontage* PlayMontage; // 0x268
	float StartPosition; // 0x270
	FVector2D SmoothStartLocRange; // 0x274
	FVector2D SmoothStartRotRange; // 0x27c
	float MaxHeightRetentionTime; // 0x284
	FVector2D MaxHeightRange; // 0x288
	FVector2D EarlyBlendOutTimeRange; // 0x290
	FVector2D ReverseDetachRange; // 0x298
	ESimulateSpace Enum_SimulateSpaceType; // 0x2a0
	TMap<EAnimCurve, FRuntimeFloatCurve> TMap_SimulateCurve; // 0x2a8
};

struct UEditableGameplayTagQueryExpression_AnyExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UBookMark : UBookmarkBase {
	FVector Location; // 0x28
	FRotator Rotation; // 0x34
	TArray<FString> HiddenLevels; // 0x40
};

struct UUI_News : USGUI {
	UNewsItem* ItemTemplate; // 0x2d8
	TArray<UNewsItem*> NewsItems; // 0x2e0
	TMap<FGuid, char> RemoveNewsMaps; // 0x2f0
	UUniformGridPanel* UGPNewsItem; // 0x340
	UScrollBox* ScrollNews; // 0x348
	UButton* BtnClearNews; // 0x350
};

struct UAnimNotify_PlayParticleEffect : UAnimNotify {
	UParticleSystem* PSTemplate; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct UGizmoScaledTransformSource : UGizmoBaseTransformSource {
	TScriptInterface<IGizmoTransformSource> ChildTransformSource; // 0x48
};

struct USoundNodeAttenuation : USoundNode {
	USoundAttenuation* AttenuationSettings; // 0x48
	FSoundAttenuationSettings AttenuationOverrides; // 0x50
	char bOverrideAttenuation : 1; // 0x3f0
};

struct UPlatformMediaSource : UMediaSource {
	UMediaSource* MediaSource; // 0x80
};

struct UParticleModuleKillBox : UParticleModuleKillBase {
	FRawDistributionVector LowerLeftCorner; // 0x30
	FRawDistributionVector UpperRightCorner; // 0x78
	char bAbsolute : 1; // 0xc0
	char bKillInside : 1; // 0xc0
	char bAxisAlignedAndFixedSize : 1; // 0xc0
};

struct USkeletalMeshComponent : USkinnedMeshComponent {
	UObject* AnimBlueprintGeneratedClass; // 0x6e0
	UAnimInstance* AnimClass; // 0x6e8
	UAnimInstance* AnimScriptInstance; // 0x6f0
	UAnimInstance* PostProcessAnimInstance; // 0x6f8
	FSingleAnimationPlayData AnimationData; // 0x700
	FVector RootBoneTranslation; // 0x728
	FVector LineCheckBoundsScale; // 0x734
	TArray<UAnimInstance*> LinkedInstances; // 0x770
	TArray<FTransform> CachedBoneSpaceTransforms; // 0x780
	TArray<FTransform> CachedComponentSpaceTransforms; // 0x790
	float GlobalAnimRateScale; // 0x8f0
	EKinematicBonesUpdateToPhysics KinematicBonesUpdateType; // 0x8f4
	EPhysicsTransformUpdateMode PhysicsTransformUpdateMode; // 0x8f5
	EAnimationMode AnimationMode; // 0x8f7
	char bDisablePostProcessBlueprint : 1; // 0x8f9
	char bUpdateOverlapsOnAnimationFinalize : 1; // 0x8f9
	char bHasValidBodies : 1; // 0x8f9
	char bBlendPhysics : 1; // 0x8f9
	char bEnablePhysicsOnDedicatedServer : 1; // 0x8f9
	char bUpdateJointsFromAnimation : 1; // 0x8f9
	char bDisableClothSimulation : 1; // 0x8fa
	char bDisableRigidBodyAnimNode : 1; // 0x8fa
	char bAllowAnimCurveEvaluation : 1; // 0x8fa
	char bDisableAnimCurves : 1; // 0x8fa
	char bCollideWithEnvironment : 1; // 0x8fa
	char bCollideWithAttachedChildren : 1; // 0x8fb
	char bLocalSpaceSimulation : 1; // 0x8fb
	char bResetAfterTeleport : 1; // 0x8fb
	char bDeferKinematicBoneUpdate : 1; // 0x8fb
	char bNoSkeletonUpdate : 1; // 0x8fb
	char bPauseAnims : 1; // 0x8fb
	char bUseRefPoseOnInitAnim : 1; // 0x8fb
	char bEnablePerPolyCollision : 1; // 0x8fc
	char bForceRefpose : 1; // 0x8fc
	char bOnlyAllowAutonomousTickPose : 1; // 0x8fc
	char bIsAutonomousTickPose : 1; // 0x8fc
	char bOldForceRefPose : 1; // 0x8fc
	char bShowPrePhysBones : 1; // 0x8fc
	char bRequiredBonesUpToDate : 1; // 0x8fc
	char bAnimTreeInitialised : 1; // 0x8fc
	char bIncludeComponentLocationIntoBounds : 1; // 0x8fd
	char bEnableLineCheckWithBounds : 1; // 0x8fd
	char bUseBendingElements : 1; // 0x8fd
	char bUseTetrahedralConstraints : 1; // 0x8fd
	char bUseThinShellVolumeConstraints : 1; // 0x8fd
	char bUseSelfCollisions : 1; // 0x8fd
	char bUseContinuousCollisionDetection : 1; // 0x8fd
	char bPropagateCurvesToSlaves : 1; // 0x8fd
	char bSkipKinematicUpdateWhenInterpolating : 1; // 0x8fe
	char bSkipBoundsUpdateWhenInterpolating : 1; // 0x8fe
	char bNeedsQueuedAnimEventsDispatched : 1; // 0x8fe
	uint16_t CachedAnimCurveUidVersion; // 0x900
	EClothMassMode MassMode; // 0x902
	float UniformMass; // 0x904
	float TotalMass; // 0x908
	float Density; // 0x90c
	float MinPerParticleMass; // 0x910
	float ClothBlendWeight; // 0x914
	float EdgeStiffness; // 0x918
	float BendingStiffness; // 0x91c
	float AreaStiffness; // 0x920
	float VolumeStiffness; // 0x924
	float StrainLimitingStiffness; // 0x928
	float ShapeTargetStiffness; // 0x92c
	bool bWaitForParallelClothTask; // 0x930
	TArray<FName> DisallowedAnimCurves; // 0x938
	UBodySetup* BodySetup; // 0x948
	FMulticastInlineDelegate OnConstraintBroken; // 0x958
	UClothingSimulationFactory* ClothingSimulationFactory; // 0x968
	float TeleportDistanceThreshold; // 0xa38
	float TeleportRotationThreshold; // 0xa3c
	uint32_t LastPoseTickFrame; // 0xa48
	UClothingSimulationInteractor* ClothingInteractor; // 0xaa0
	FMulticastInlineDelegate OnAnimInitialized; // 0xb70
};

struct UUI_AdminPrivateServerPanel : UUI_AdminSubPanel {
	UUI_AdminBlockListPanel* AdminBlockListPanel; // 0x2d8
};

struct UNiagaraComponentSettings : UObject {
	TSet<FName> SuppressActivationList; // 0x28
	TSet<FName> ForceAutoPooolingList; // 0x78
	TSet<FNiagaraEmitterNameSettingsRef> SuppressEmitterList; // 0xc8
};

struct UUI_ScalabilityDetailPanel : UUserWidget {
	EScalabilityDetailType ScalabilityDetailType; // 0x260
	UScalabilityDetailItem* ItemTemplate[0x2]; // 0x268
	int32_t ItemNumPerRow; // 0x278
	UVerticalBox* VBItem; // 0x280
	UTextBlock* TbName; // 0x288
	TArray<UScalabilityDetailItem*> ItemList; // 0x290
};

struct USGTrafficGoods : UObject {
	UDataTable* TrafficGoodsTable; // 0x28
	UDataTable* SellerTable; // 0x30
	UCurveTable* SellerLVCurve; // 0x38
	int32_t PriceRatioRefrehInterval; // 0x40
	TMap<GoodsSellerType, FText> GoodsSellerNameMap; // 0x48
	TMap<TrafficGoodsType, FVector2D> GoodsPriceRatioMap; // 0x98
};

struct USoundClass : UObject {
	FSoundClassProperties Properties; // 0x28
	TArray<USoundClass*> ChildClasses; // 0xa8
	TArray<FPassiveSoundMixModifier> PassiveSoundMixModifiers; // 0xb8
	USoundClass* ParentClass; // 0xc8
};

struct UGameplayEffect : UObject {
	EGameplayEffectDurationType DurationPolicy; // 0x30
	FGameplayEffectModifierMagnitude DurationMagnitude; // 0x38
	FScalableFloat Period; // 0x1e0
	bool bExecutePeriodicEffectOnApplication; // 0x200
	EGameplayEffectPeriodInhibitionRemovedPolicy PeriodicInhibitionPolicy; // 0x201
	TArray<FGameplayModifierInfo> Modifiers; // 0x208
	TArray<FGameplayEffectExecutionDefinition> Executions; // 0x218
	FScalableFloat ChanceToApplyToTarget; // 0x228
	TArray<UGameplayEffectCustomApplicationRequirement*> ApplicationRequirements; // 0x248
	TArray<UGameplayEffect*> TargetEffectClasses; // 0x258
	TArray<FConditionalGameplayEffect> ConditionalGameplayEffects; // 0x268
	TArray<UGameplayEffect*> OverflowEffects; // 0x278
	bool bDenyOverflowApplication; // 0x288
	bool bClearStackOnOverflow; // 0x289
	TArray<UGameplayEffect*> PrematureExpirationEffectClasses; // 0x290
	TArray<UGameplayEffect*> RoutineExpirationEffectClasses; // 0x2a0
	bool bRequireModifierSuccessToTriggerCues; // 0x2b0
	bool bSuppressStackingCues; // 0x2b1
	TArray<FGameplayEffectCue> GameplayCues; // 0x2b8
	UGameplayEffectUIData* UIData; // 0x2c8
	FInheritedTagContainer InheritableGameplayEffectTags; // 0x2d0
	FInheritedTagContainer InheritableOwnedTagsContainer; // 0x330
	FGameplayTagRequirements OngoingTagRequirements; // 0x390
	FGameplayTagRequirements ApplicationTagRequirements; // 0x3d0
	FGameplayTagRequirements RemovalTagRequirements; // 0x410
	FInheritedTagContainer RemoveGameplayEffectsWithTags; // 0x450
	FGameplayTagRequirements GrantedApplicationImmunityTags; // 0x4b0
	FGameplayEffectQuery GrantedApplicationImmunityQuery; // 0x4f0
	FGameplayEffectQuery RemoveGameplayEffectQuery; // 0x648
	EGameplayEffectStackingType StackingType; // 0x799
	int32_t StackLimitCount; // 0x79c
	EGameplayEffectStackingDurationPolicy StackDurationRefreshPolicy; // 0x7a0
	EGameplayEffectStackingPeriodPolicy StackPeriodResetPolicy; // 0x7a1
	EGameplayEffectStackingExpirationPolicy StackExpirationPolicy; // 0x7a2
	TArray<FGameplayAbilitySpecDef> GrantedAbilities; // 0x7a8
};

struct URewardCondition_Int : URewardCondition {
	EValueConditionType ConditionType; // 0x50
	int64_t Value; // 0x58
	bool bSingleCondition; // 0x60
};

struct UAutoDestroySubsystem : UWorldSubsystem {
	TArray<AActor*> ActorsToPoll; // 0x38
};

struct UDistributionVectorUniform : UDistributionVector {
	FVector Max; // 0x38
	FVector Min; // 0x44
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x55
	char bUseExtremes : 1; // 0x58
};

struct UProceduralTorusToolProperties : UProceduralShapeToolProperties {
	float MajorRadius; // 0x70
	float MinorRadius; // 0x74
	int32_t TubeSlices; // 0x78
	int32_t CrossSectionSlices; // 0x7c
};

struct URevolveBoundaryTool : UMeshBoundaryToolBase {
	URevolveBoundaryToolProperties* Settings; // 0x160
	UNewMeshMaterialProperties* MaterialProperties; // 0x168
	UConstructionPlaneMechanic* PlaneMechanic; // 0x170
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0x178
};

struct UARObjectComponent : UARComponent {
	FARObjectUpdatePayload ReplicatedPayload; // 0x290
};

struct UN_CraftQueuePanel : UUserWidget {
	UN_CraftPanel* ParentUI; // 0x260
	USGUI* RootSGUI; // 0x268
	TArray<FName> CraftingQueueSlotNames; // 0x270
	TArray<UN_ItemCraftQueueSlot*> CraftingQueueSlots; // 0x280
	TArray<FItemCraftQueueEntry> LastItemCraftQueueEntries; // 0x290
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x2a0
};

struct UParticleModuleLocationPrimitiveTriangle : UParticleModuleLocationBase {
	FRawDistributionVector StartOffset; // 0x30
	FRawDistributionFloat Height; // 0x78
	FRawDistributionFloat Angle; // 0xa8
	FRawDistributionFloat Thickness; // 0xd8
};

struct UMaterialExpressionRuntimeVirtualTextureReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput VirtualTextureOutput; // 0x54
};

struct UMaterialExpressionComponentMask : UMaterialExpression {
	FExpressionInput Input; // 0x40
	char R : 1; // 0x54
	char G : 1; // 0x54
	char B : 1; // 0x54
	char A : 1; // 0x54
};

struct UOperationModeItem : UUserWidget {
	TSoftObjectPtr<UTexture2D> NormalBGTexture; // 0x260
	TSoftObjectPtr<UTexture2D> HoverBgTexture; // 0x288
	TSoftObjectPtr<UTexture2D> SelectBGTexture; // 0x2b0
	UButton* BtnBg; // 0x2e8
	UImage* ImgBg; // 0x2f0
};

struct UStaticMeshComponent : UMeshComponent {
	int32_t ForcedLodModel; // 0x4b0
	int32_t PreviousLODLevel; // 0x4b4
	int32_t MinLOD; // 0x4b8
	int32_t SubDivisionStepSize; // 0x4bc
	UStaticMesh* StaticMesh; // 0x4c0
	FColor WireframeColorOverride; // 0x4c8
	char bEvaluateWorldPositionOffset : 1; // 0x4cc
	char bOverrideWireframeColor : 1; // 0x4cc
	char bOverrideMinLod : 1; // 0x4cc
	char bOverrideNavigationExport : 1; // 0x4cc
	char bForceNavigationObstacle : 1; // 0x4cc
	char bDisallowMeshPaintPerInstance : 1; // 0x4cc
	char bIgnoreInstanceForTextureStreaming : 1; // 0x4cc
	char bOverrideLightMapRes : 1; // 0x4cc
	char bCastDistanceFieldIndirectShadow : 1; // 0x4cd
	char bOverrideDistanceFieldSelfShadowBias : 1; // 0x4cd
	char bUseSubDivisions : 1; // 0x4cd
	char bUseDefaultCollision : 1; // 0x4cd
	char bReverseCulling : 1; // 0x4cd
	int32_t OverriddenLightMapRes; // 0x4d0
	float DistanceFieldIndirectShadowMinVisibility; // 0x4d4
	float DistanceFieldSelfShadowBias; // 0x4d8
	float StreamingDistanceMultiplier; // 0x4dc
	TArray<FStaticMeshComponentLODInfo> LODData; // 0x4e0
	TArray<FStreamingTextureBuildInfo> StreamingTextureData; // 0x4f0
	FLightmassPrimitiveSettings LightmassSettings; // 0x500
};

struct UCollisionProfile : UDeveloperSettings {
	TArray<FCollisionResponseTemplate> Profiles; // 0x38
	TArray<FCustomChannelSetup> DefaultChannelResponses; // 0x48
	TArray<FCustomProfile> EditProfiles; // 0x58
	TArray<FRedirector> ProfileRedirects; // 0x68
	TArray<FRedirector> CollisionChannelRedirects; // 0x78
};

struct AWaterMeshActor : AActor {
	UTexture2D* WaterVelocityTexture; // 0x310
	UWaterMeshComponent* WaterMesh; // 0x318
};

struct UCorpsePOITips : UMiniMapPOITips {
	UTextBlock* TbCorpseRemainingTime; // 0x288
	UCanvasPanel* LoadingCanvas; // 0x290
	UCanvasPanel* MainCanvas; // 0x298
};

struct UBTService_UpdateFollowStatus : UBTService_SGBlueprintBase {
	char bAlwaysUpdateFollowLoc : 1; // 0xb0
};

struct UItemAuctionPanel : USGUI {
	UVerticalBox* ItemListVerticalBox; // 0x2d8
	UVerticalBox* ItemNameVerticalBox; // 0x2e0
	UCanvasPanel* CanvasPanel_SearchItemName; // 0x2e8
	UEditableTextBox* SearchEditableBox; // 0x2f0
	UButton* SearchButton; // 0x2f8
	UGuildAuthorityComboBox* ComboBoxItemType; // 0x300
	UGuildAuthorityComboBox* ComboBoxItemSubType; // 0x308
	UGuildAuthorityComboBox* ComboBoxQuality; // 0x310
	UGuildAuthorityComboBox* ComboBoxLevel; // 0x318
	UCanvasPanel* TipsPanel; // 0x320
	UN_InventorySlot* InventorySlot; // 0x328
	UButton* BuyButton; // 0x330
	UButton* Button_Previous; // 0x338
	UButton* Button_Next; // 0x340
	UTextBlock* TextBlock_CurrentPage; // 0x348
	UN_EquipPanel* EquipPanel; // 0x350
	UN_InventoryPanel* InventoryPanel; // 0x358
	UItemAuctionSlot* ItemAuctionSlotClass; // 0x360
	UItemAuctionSearchNameSlot* ItemAuctionSearchNameSlotClass; // 0x368
	int32_t MaxLevel; // 0x370
	int32_t MaxPage; // 0x374
	int32_t OnePageDataCount; // 0x378
	TWeakObjectPtr<UItemAuctionSlot> ItemSlotSelected; // 0x3d0
	TWeakObjectPtr<UItemAuctionSearchNameSlot> ItemSeacrhNameSlotSelected; // 0x3d8
	TWeakObjectPtr<UUI_GuildAuctionHouse> RootUI; // 0x3e0
};

struct UAnimalAppearanceInfo : UObject {
	TArray<FAnimalAppearanceStruct> AnimalAppearanceStruct; // 0x28
	TArray<FAnimalFurComponentConfig> FurComponentConfigs; // 0x38
	char bRandomSkinHuaSe : 1; // 0x48
	float SkinHuaSeAlpha; // 0x4c
};

struct AEmitterCameraLensEffectBase : AEmitter {
	UParticleSystem* PS_CameraEffect; // 0x360
	UParticleSystem* PS_CameraEffectNonExtremeContent; // 0x368
	APlayerCameraManager* BaseCamera; // 0x370
	FTransform RelativeTransform; // 0x380
	float BaseFOV; // 0x3b0
	char bAllowMultipleInstances : 1; // 0x3b4
	char bResetWhenRetriggered : 1; // 0x3b4
	TArray<AEmitterCameraLensEffectBase*> EmittersToTreatAsSame; // 0x3b8
	float DistFromCamera; // 0x3c8
};

struct UMovieSceneWidgetMaterialTrack : UMovieSceneMaterialTrack {
	TArray<FName> BrushPropertyNamePath; // 0x90
	FName TrackName; // 0xa0
};

struct UBTService_BlackboardBase : UBTService {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct UMaterialExpressionTransformPosition : UMaterialExpression {
	FExpressionInput Input; // 0x40
	EMaterialPositionTransformSource TransformSourceType; // 0x54
	EMaterialPositionTransformSource TransformType; // 0x55
};

struct USGGameDataNPCTalkData : UObject {
	TMap<int32_t, FNPCTalkInfo> NPCTalkConfig; // 0x28
	TMap<int32_t, FSoftObjectPath> QuestionImage; // 0x78
};

struct UBTDecorator_DoesPathExist : UBTDecorator {
	FBlackboardKeySelector BlackboardKeyA; // 0x68
	FBlackboardKeySelector BlackboardKeyB; // 0x90
	char bUseSelf : 1; // 0xb8
	EPathExistanceQueryType PathQueryType; // 0xbc
	UNavigationQueryFilter* FilterClass; // 0xc0
};

struct ASGStructureFunctionRack : ASGStructureFunctionTable {
	char bCarriedNeedItem : 1; // 0xf80
	ABaseCharacter* SaveGameCarriedCharacter; // 0xf88
	TWeakObjectPtr<ABaseCharacter> CarriedCharacter; // 0xf90
	TWeakObjectPtr<ABaseCharacter> CarriedCharacterTarget; // 0xf98
	FName BindSocketName; // 0xfa0
	float AutoTameAdd; // 0xfa8
	UAnimMontage* BindToRackAnim; // 0xfb0
	FTimerHandle TameTimerHandle; // 0xfb8
};

struct AAmbientSoundSpline : AActor {
	UAudioSplineComponent* AudioSplineComponent; // 0x310
};

struct UUI_ApplyGuildConfirm : UUI_ModifyText {
	UCheckBox* AlertCheckBox; // 0x3e8
	UTextBlock* AlertText; // 0x3f0
	FSlateColor NormalAlertColor; // 0x3f8
	FSlateColor InvalidAlertColor; // 0x420
	char bDefaultAlertChecked : 1; // 0x448
};

struct UUI_NN_CraftPerk : USGUI {
	ECPGType CPGType; // 0x2d8
	FCPGFilterInfo CPGInfo[0x2]; // 0x2e0
	FCPGFilters CPGFilterOptionInfo[0x2]; // 0x390
	int32_t SelectOptionType; // 0x3b0
	UHorizontalBox* CPGTypePanel; // 0x3b8
	int32_t ShowCPGTypePanelNum; // 0x3c0
	UHorizontalBox* OptionPanel; // 0x3c8
	UCanvasPanel* CraftPerkGroupPanel; // 0x3d0
	UScrollBox* CraftPerkGroupScrollBox; // 0x3d8
	TArray<UOptionButton*> OptionButtonList; // 0x3e0
	TArray<UOptionButton*> CPGTypeButtonList; // 0x3f0
	UOptionButton* OptionButtonTemplate; // 0x400
	UNN_CraftPerkGroupSlot* CraftPerkGroupSlotTemplate; // 0x408
	char bIsGuildCraftPerkUI : 1; // 0x410
	float SlotLength; // 0x414
	float SlotWidth; // 0x418
	FVector2D NextLineStartPosition; // 0x41c
	FVector2D NextLineFromStartPositionDistance; // 0x424
	FVector2D ReceiveLinePosition; // 0x42c
	float LineWidth; // 0x434
	UNN_CraftPerkGroupLine* CraftPerkGroupLineTemplate; // 0x438
	UCanvasPanel* CraftPerkGroupCanvas; // 0x440
	char bStartDrag : 1; // 0x448
	UEditableTextBox* SearchEditableTextBlock; // 0x450
	FString SearchString; // 0x458
	UNN_CraftPerkGroupSlot* OnlySearchOneSlot; // 0x468
	char bSearchSlot : 1; // 0x470
	TWeakObjectPtr<UNN_CraftPerkGroupSlot> LearnGroupSlot; // 0x474
	UN_CraftPanelTips* CraftPanelTipsTemplate; // 0x480
	USGToolTipWidget* DefaultToolTipsClass; // 0x488
	TWeakObjectPtr<USGToolTipWidget> CraftPerkItemTips; // 0x490
	TWeakObjectPtr<USGToolTipWidget> CraftPerkCraftTips; // 0x498
	UTextBlock* CapitalText; // 0x4a0
	UTextBlock* CraftPerkPointText; // 0x4a8
};

struct UPlaneFalloff : UFieldNodeFloat {
	float Magnitude; // 0xc0
	float MinRange; // 0xc4
	float MaxRange; // 0xc8
	float Default; // 0xcc
	float Distance; // 0xd0
	FVector position; // 0xd4
	FVector Normal; // 0xe0
	EFieldFalloffType Falloff; // 0xec
};

struct ASGEnvironmentVolume : AVolume {
	FText VolumeName; // 0x348
	TArray<AActor*> OverlapActors; // 0x360
	USGBuff* OverlapBuff; // 0x370
	FTimerHandle AddBuffTimer; // 0x378
	char bEnterDestroy : 1; // 0x380
	char bOnlyAddBuffToSameTeamId : 1; // 0x380
};

struct UUI_StructureAIAttackLogSlot : UUserWidget {
	UTextBlock* TargetTypeText; // 0x260
	UTextBlock* TargetNameText; // 0x268
	UTextBlock* TargetOwnerNameText; // 0x270
	UTextBlock* TargetGuildNameText; // 0x278
	UTextBlock* AttackTimesText; // 0x280
	UTextBlock* UTCTimeText; // 0x288
};

struct UUserDefinedImageCaptureProtocol : UUserDefinedCaptureProtocol {
	EDesiredImageFormat Format; // 0xd8
	bool bEnableCompression; // 0xd9
	int32_t CompressionQuality; // 0xdc
};

struct UMovieSceneEventSection : UMovieSceneSection {
	FNameCurve Events; // 0xe8
	FMovieSceneEventSectionData EventData; // 0x160
};

struct USceneCaptureComponent2D : USceneCaptureComponent {
	ECameraProjectionMode ProjectionType; // 0x2c8
	float FOVAngle; // 0x2cc
	float OrthoWidth; // 0x2d0
	UTextureRenderTarget2D* TextureTarget; // 0x2d8
	ESceneCaptureCompositeMode CompositeMode; // 0x2e0
	FPostProcessSettings PostProcessSettings; // 0x2f0
	float PostProcessBlendWeight; // 0x850
	char bOverride_CustomNearClippingPlane : 1; // 0x854
	float CustomNearClippingPlane; // 0x858
	bool bUseCustomProjectionMatrix; // 0x85c
	FMatrix CustomProjectionMatrix; // 0x860
	bool bEnableClipPlane; // 0x8a0
	FVector ClipPlaneBase; // 0x8a4
	FVector ClipPlaneNormal; // 0x8b0
	char bCameraCutThisFrame : 1; // 0x8bc
	char bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1; // 0x8bc
	bool bDisableFlipCopyGLES; // 0x8c0
};

struct UNamedInterfaces : UObject {
	TArray<FNamedInterface> NamedInterfaces; // 0x28
	TArray<FNamedInterfaceDef> NamedInterfaceDefs; // 0x38
};

struct UEdGraphNode : UObject {
	TArray<UEdGraphPin_Deprecated*> DeprecatedPins; // 0x38
	int32_t NodePosX; // 0x48
	int32_t NodePosY; // 0x4c
	int32_t NodeWidth; // 0x50
	int32_t NodeHeight; // 0x54
	ENodeAdvancedPins AdvancedPinDisplay; // 0x58
	ENodeEnabledState EnabledState; // 0x59
	char bDisplayAsDisabled : 1; // 0x5b
	char bUserSetEnabledState : 1; // 0x5b
	char bIsNodeEnabled : 1; // 0x5b
	char bHasCompilerMessage : 1; // 0x5b
	FString NodeComment; // 0x60
	int32_t ErrorType; // 0x70
	FString ErrorMsg; // 0x78
	FGuid NodeGuid; // 0x88
};

struct UMaterialExpressionLandscapeLayerCoords : UMaterialExpression {
	ETerrainCoordMappingType MappingType; // 0x40
	ELandscapeCustomizedCoordType CustomUVType; // 0x41
	float MappingScale; // 0x44
	float MappingRotation; // 0x48
	float MappingPanU; // 0x4c
	float MappingPanV; // 0x50
};

struct AWaterBodyIsland : AActor {
	UWaterSplineComponent* SplineComp; // 0x318
};

struct ASGStructureGivePerkPoints : ASGStructure {
	int32_t GivePerkPointDataIndex; // 0xb98
	int32_t GivePerkPoints; // 0xb9c
	UParticleSystem* ReceiveEmitter; // 0xba0
	FVector ReceiveEmitterLocationOffset; // 0xba8
	float GivePerkPointsTimeTicker; // 0xbb4
};

struct UProjectileMovementComponent : UMovementComponent {
	float InitialSpeed; // 0x100
	float MaxSpeed; // 0x104
	char bRotationFollowsVelocity : 1; // 0x108
	char bRotationRemainsVertical : 1; // 0x108
	char bShouldBounce : 1; // 0x108
	char bInitialVelocityInLocalSpace : 1; // 0x108
	char bForceSubStepping : 1; // 0x108
	char bSimulationEnabled : 1; // 0x108
	char bSweepCollision : 1; // 0x108
	char bIsHomingProjectile : 1; // 0x108
	char bBounceAngleAffectsFriction : 1; // 0x109
	char bIsSliding : 1; // 0x109
	char bInterpMovement : 1; // 0x109
	char bInterpRotation : 1; // 0x109
	float PreviousHitTime; // 0x10c
	FVector PreviousHitNormal; // 0x110
	float ProjectileGravityScale; // 0x11c
	float Buoyancy; // 0x120
	float Bounciness; // 0x124
	float Friction; // 0x128
	float BounceVelocityStopSimulatingThreshold; // 0x12c
	float MinFrictionFraction; // 0x130
	FMulticastInlineDelegate OnProjectileBounce; // 0x138
	FMulticastInlineDelegate OnProjectileStop; // 0x148
	float HomingAccelerationMagnitude; // 0x158
	TWeakObjectPtr<USceneComponent> HomingTargetComponent; // 0x15c
	float MaxSimulationTimeStep; // 0x164
	int32_t MaxSimulationIterations; // 0x168
	int32_t BounceAdditionalIterations; // 0x16c
	float InterpLocationTime; // 0x170
	float InterpRotationTime; // 0x174
	float InterpLocationMaxLagDistance; // 0x178
	float InterpLocationSnapToTargetDistance; // 0x17c
};

struct UInteractiveToolManager : UObject {
	UInteractiveTool* ActiveLeftTool; // 0x30
	UInteractiveTool* ActiveRightTool; // 0x38
	TMap<FString, UInteractiveToolBuilder*> ToolBuilders; // 0x90
};

struct USubmixEffectTapDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectTapDelaySettings Settings; // 0xa8
};

struct UBTTask_BlackboardBase : UBTTaskNode {
	FBlackboardKeySelector BlackboardKey; // 0x70
};

struct APaperGroupedSpriteActor : AActor {
	UPaperGroupedSpriteComponent* RenderComponent; // 0x310
};

struct USGAchievementReward : USGReward {
	int32_t HonorPoint; // 0x28
	TArray<FAchievementDamageMultiply> DamageMultiply; // 0x30
	TArray<FString> Titles; // 0x40
	float Exp; // 0x50
	int32_t copper; // 0x54
	int32_t GuildImageIndex; // 0x58
	TSoftObjectPtr<UTexture2D> GuildImageTexture; // 0x60
};

struct UHorizonDialogueStyleInfo : UObject {
	TArray<FHorizonDialogueSegmentInfoStyle> SegmentStyleList; // 0x28
};

struct UHuangLiMenuSlot : UUserWidget {
	UBorder* BorderOut; // 0x270
	UTextBlock* MenuText; // 0x278
	TSoftObjectPtr<UTexture2D> BorderActiveTexture; // 0x280
	TSoftObjectPtr<UTexture2D> BorderNormalTexture; // 0x2a8
	TSoftObjectPtr<UTexture2D> BorderHoverTexture; // 0x2d0
	TSoftObjectPtr<UTexture2D> BorderClickTexture; // 0x2f8
};

struct UBTDecorator_Loop : UBTDecorator {
	int32_t NumLoops; // 0x68
	bool bInfiniteLoop; // 0x6c
	float InfiniteLoopTimeoutTime; // 0x70
};

struct UMaterialExpressionSobol : UMaterialExpression {
	FExpressionInput Cell; // 0x40
	FExpressionInput Index; // 0x54
	FExpressionInput Seed; // 0x68
	uint32_t ConstIndex; // 0x7c
	FVector2D ConstSeed; // 0x80
};

struct UGroomHairGroupsPreview : UObject {
	TArray<FGroomHairGroupPreview> Groups; // 0x28
};

struct UServerStateTips : USGToolTipWidget {
	FText StateText[0x3]; // 0x288
	UTextBlock* TbState; // 0x2d0
	UTextBlock* TbPlayerNum; // 0x2d8
};

struct UMaterialExpressionTangent : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct UWBP_ProducerName_3_C : UUserWidget {
	UWBP_ProducerSlot_C* WBP_ProducerSlot; // 0x260
	UWBP_ProducerSlot_C* WBP_ProducerSlot_2; // 0x268
	UWBP_ProducerSlot_C* WBP_ProducerSlot_3; // 0x270
	UWBP_ProducerSlot_C* WBP_ProducerSlot_4; // 0x278
	UWBP_ProducerSlot_C* WBP_ProducerSlot_5; // 0x280
	UWBP_ProducerSlot_C* WBP_ProducerSlot_6; // 0x288
	UWBP_ProducerSlot_C* WBP_ProducerSlot_7; // 0x290
	UWBP_ProducerSlot_C* WBP_ProducerSlot_8; // 0x298
	UWBP_ProducerSlot_C* WBP_ProducerSlot_9; // 0x2a0
	UWBP_ProducerSlot_C* WBP_ProducerSlot_10; // 0x2a8
	UWBP_ProducerSlot_C* WBP_ProducerSlot_11; // 0x2b0
	UWBP_ProducerSplitLine_C* WBP_ProducerSplitLine; // 0x2b8
};

struct USoundSubmixBase : UObject {
	TArray<USoundSubmixBase*> ChildSubmixes; // 0x28
};

struct UN_DragDropItem : UDragDropOperation {
	TWeakObjectPtr<USGItem> BindItem; // 0xb8
};

struct UNewsItem : UUserWidget {
	float RollingSubtitlesSpeed; // 0x260
	UCanvasPanel* NewsCanvas; // 0x268
	URichTextBlock* RTbNews; // 0x270
	UButton* BtnNews; // 0x278
	UButton* BtnClose; // 0x280
	UNewsClientData* BindNewsClientData; // 0x2a8
	UUI_News* RootUI; // 0x2b0
};

struct ULightComponent : ULightComponentBase {
	float Temperature; // 0x238
	float MaxDrawDistance; // 0x23c
	float MaxDistanceFadeRange; // 0x240
	char bUseTemperature : 1; // 0x244
	int32_t ShadowMapChannel; // 0x248
	float MinRoughness; // 0x250
	float SpecularScale; // 0x254
	float ShadowResolutionScale; // 0x258
	float ShadowBias; // 0x25c
	float ShadowSlopeBias; // 0x260
	float ShadowSharpen; // 0x264
	float ContactShadowLength; // 0x268
	char ContactShadowLengthInWS : 1; // 0x26c
	char InverseSquaredFalloff : 1; // 0x26c
	char CastTranslucentShadows : 1; // 0x26c
	char bCastShadowsFromCinematicObjectsOnly : 1; // 0x26c
	char bAffectDynamicIndirectLighting : 1; // 0x26c
	char bForceCachedShadowsForMovablePrimitives : 1; // 0x26c
	FLightingChannels LightingChannels; // 0x270
	UMaterialInterface* LightFunctionMaterial; // 0x278
	FVector LightFunctionScale; // 0x280
	UTextureLightProfile* IESTexture; // 0x290
	char bUseIESBrightness : 1; // 0x298
	float IESBrightnessScale; // 0x29c
	float LightFunctionFadeDistance; // 0x2a0
	float DisabledBrightness; // 0x2a4
	char bEnableLightShaftBloom : 1; // 0x2a8
	float BloomScale; // 0x2ac
	float BloomThreshold; // 0x2b0
	float BloomMaxBrightness; // 0x2b4
	FColor BloomTint; // 0x2b8
	bool bUseRayTracedDistanceFieldShadows; // 0x2bc
	float RayStartOffsetDepthScale; // 0x2c0
};

struct UNiagaraScript : UNiagaraScriptBase {
	ENiagaraScriptUsage Usage; // 0x28
	int32_t UsageIndex; // 0x2c
	FGuid UsageId; // 0x30
	FNiagaraParameterStore RapidIterationParameters; // 0x40
	FNiagaraScriptExecutionParameterStore ScriptExecutionParamStore; // 0xb8
	TArray<FNiagaraBoundParameter> ScriptExecutionBoundParameters; // 0x150
	FNiagaraVMExecutableDataId CachedScriptVMId; // 0x160
	FNiagaraVMExecutableData CachedScriptVM; // 0x1b8
	TArray<UNiagaraParameterCollection*> CachedParameterCollectionReferences; // 0x298
	TArray<FNiagaraScriptDataInterfaceInfo> CachedDefaultDataInterfaces; // 0x2a8
};

struct UAIDataProvider_Random : UAIDataProvider_QueryParams {
	float Min; // 0x40
	float Max; // 0x44
	char bInteger : 1; // 0x48
};

struct UUI_SeasonPassportRewardItem : UUserWidget {
	UImage* ItemImage; // 0x260
	UImage* LockImage; // 0x268
	UImage* AlreadyGetImage; // 0x270
	UTextBlock* RewardNumText; // 0x278
};

struct AGameSession : AInfo {
	int32_t MaxSpectators; // 0x310
	int32_t MaxPlayers; // 0x314
	int32_t MaxPartySize; // 0x318
	char MaxSplitscreensPerConnection; // 0x31c
	bool bRequiresPushToTalk; // 0x31d
	FName SessionName; // 0x320
};

struct UParticleModuleLight_Seeded : UParticleModuleLight {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct UEditNormalsOperatorFactory : UObject {
	UEditNormalsTool* Tool; // 0x30
};

struct UNiagaraRendererProperties : UNiagaraMergeable {
	FNiagaraPlatformSet Platforms; // 0x28
	int32_t SortOrderHint; // 0x58
	bool bIsEnabled; // 0x5c
	bool bMotionBlurEnabled; // 0x5d
};

struct UBTTask_TurnToBBEntry : UBTTask_BlackboardBase {
	float Precision; // 0x98
};

struct UAbilityTask_WaitInputRelease : UAbilityTask {
	FMulticastInlineDelegate OnRelease; // 0x80
};

struct UAbilityTask_WaitGameplayEffectRemoved : UAbilityTask {
	FMulticastInlineDelegate OnRemoved; // 0x80
	FMulticastInlineDelegate InvalidHandle; // 0x90
};

struct UMovieSceneCompiledDataManager : UObject {
	TMap<int32_t, FMovieSceneSequenceHierarchy> Hierarchies; // 0xd8
	TMap<int32_t, FMovieSceneEvaluationTemplate> TrackTemplates; // 0x128
	TMap<int32_t, FMovieSceneEvaluationField> TrackTemplateFields; // 0x178
	TMap<int32_t, FMovieSceneEntityComponentField> EntityComponentFields; // 0x1c8
};

struct UBakedOcclusionMapToolProperties : UInteractiveToolPropertySet {
	int32_t OcclusionRays; // 0x60
	float MaxDistance; // 0x64
	bool bGaussianBlur; // 0x68
	float BlurRadius; // 0x6c
	float BiasAngle; // 0x70
};

struct UGuildKPILogSlot : UUserWidget {
	UCanvasPanel* PointCanvasPanel; // 0x260
	UCanvasPanel* AddCanvasPanel; // 0x268
	UTextBlock* TimeText; // 0x270
	UEditableTextBox* ContentTextBox; // 0x278
	UEditableTextBox* PointTextBox; // 0x280
	UButton* AddSlotButton; // 0x288
	UButton* DeleteSlotButton; // 0x290
};

struct UMovingTurn_AnimNotifyState : UAnimNotifyState {
	UAnimMontage* TurnMontage; // 0x30
	UCurveFloat* RotationCurveAsset; // 0x38
	float StopBlendTime; // 0x40
	char bOnlyTriggerOnServer : 1; // 0x44
	char bIsForbidMove : 1; // 0x44
	char bForceStopMontage : 1; // 0x44
	float MaxTurnYaw; // 0x48
};

struct UInAppPurchaseRestoreCallbackProxy2 : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UN_EquipPanel : UUserWidget {
	UPreviewSceneWidget* PreviewWidget; // 0x260
	TArray<FName> EquipCanvasName; // 0x268
	TArray<FName> RemoteShortCutCanvasName; // 0x278
	char bOverrideShowPosition : 1; // 0x288
	char bShowLeft : 1; // 0x288
	char bEnableOverridePreviewWidget : 1; // 0x288
	float OverridePreviewWidgetDistance; // 0x28c
	FVector OverridePreviewWidgetMeshLocation; // 0x290
	FVector OverridePreviewWidgetMeshLocationOffset; // 0x29c
	FRotator OverridePreviewWidgetMeshRotation; // 0x2a8
	FVector OverridePreviewWidgetCameraLocationOffset; // 0x2b4
	FRotator OverridePreviewWidgetCameraRotation; // 0x2c0
	float OverridePreviewScale; // 0x2cc
	UAnimMontage* OverridePreviewWidgetDefaultAnim; // 0x2d0
	char bOverrideSet : 1; // 0x2d8
	FPreviewCameraSetting DefaultPreviewSetting; // 0x2dc
	char bRemote : 1; // 0x320
	char bPlayer : 1; // 0x320
	USGUI* ParentUI; // 0x328
	TArray<UImage*> VirtualImageList; // 0x330
	TArray<UN_InventorySlot*> InventorySlotList; // 0x340
	TArray<UN_InventorySlot*> ShortCutSlotList; // 0x350
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x360
	TWeakObjectPtr<AActor> BindActor; // 0x368
	TWeakObjectPtr<ABaseCharacter> BindCharacter; // 0x370
	TSoftObjectPtr<UTexture2D> VirtualHumanImageTexture2D[0x4]; // 0x378
	TSoftObjectPtr<UTexture2D> VirtualImageHorseTexture2D[0x4]; // 0x418
	TSoftObjectPtr<UTexture2D> VirtualImageSiegeTexture2D[0x2]; // 0x4b8
	char bSlotAllowDrag : 1; // 0x508
	char bWatchDead : 1; // 0x508
	UButton* PVEButton; // 0x510
	UTextBlock* PVEText; // 0x518
	FButtonStyle PVPOpenStyle; // 0x520
	FButtonStyle PVPCloseStyle; // 0x798
	FSlateColor PVPOpenColor; // 0xa10
	FSlateColor PVPCloseColor; // 0xa38
	UCanvasPanel* CloudDataMark; // 0xa60
	UTextBlock* CloudDataTimeText; // 0xa68
	char bOnlyShowPreview : 1; // 0xa70
	TWeakObjectPtr<USGItem> RecordTransportItem; // 0xa74
	EInventoryTypes RecordTransportItemInventoyType; // 0xa7c
	EInventoryTypes RecordTransportItemTargetInventoyType; // 0xa7d
	int32_t RecordSlot; // 0xa80
	UButton* ShowAppearanceBtn; // 0xa88
	UCheckBox* SACheckBox; // 0xa90
};

struct UWeapon_AnimInstance : UAnimInstance {
	AShooterWeapon* SG_ShooterWeapon; // 0x2c0
	char bIsAim : 1; // 0x2c8
	char bIsAimPull : 1; // 0x2c8
	char bIsAttack : 1; // 0x2c8
	char bIsReload : 1; // 0x2c8
};

struct UImplicitSmoothProperties : UInteractiveToolPropertySet {
	float SmoothSpeed; // 0x60
	float Smoothness; // 0x64
	bool bPreserveUVs; // 0x68
	float VolumeCorrection; // 0x6c
};

struct AMatineeActorCameraAnim : AMatineeActor {
	UCameraAnim* CameraAnim; // 0x3c8
};

struct UStableRebornPanel : UUserWidget {
	UStableRebornSlot* StableRebornSlotTemplate; // 0x260
	UUserWidget* EmptySlotTemplate; // 0x268
	int32_t PageMaxNum; // 0x270
	UVerticalBox* SlotVerticalBox; // 0x278
	UButton* LastPageBtn; // 0x280
	UTextBlock* CurPageText; // 0x288
	UTextBlock* MaxPageText; // 0x290
	UButton* NextPageBtn; // 0x298
	UButton* ReleaseBtn; // 0x2a0
	UButton* RebornBtn; // 0x2a8
	UButton* AddLifeBtn; // 0x2b0
};

struct UEnvQueryGenerator_ActorsOfClass : UEnvQueryGenerator {
	AActor* SearchedActorClass; // 0x50
	FAIDataProviderBoolValue GenerateOnlyActorsInRadius; // 0x58
	FAIDataProviderFloatValue SearchRadius; // 0x90
	UEnvQueryContext* SearchCenter; // 0xc8
};

struct UMeshSelectionTool : UDynamicMeshBrushTool {
	UMeshSelectionToolProperties* SelectionProps; // 0x200
	UMeshSelectionEditActions* SelectionActions; // 0x208
	UMeshSelectionToolActionPropertySet* EditActions; // 0x210
	UMeshSelectionSet* Selection; // 0x218
	TArray<AActor*> SpawnedActors; // 0x220
};

struct UXianChengRelationShipItem : UUserWidget {
	TSoftObjectPtr<UTexture2D> AllianBkTexture; // 0x260
	TSoftObjectPtr<UTexture2D> HostileBkTexture; // 0x288
	TSoftObjectPtr<UTexture2D> AllianTexture; // 0x2b0
	TSoftObjectPtr<UTexture2D> HostileTexture; // 0x2d8
	TSoftObjectPtr<UTexture2D> WeRiseAllianTexture; // 0x300
	TSoftObjectPtr<UTexture2D> HostileRiseAllianTexture; // 0x328
	FText AlianText; // 0x350
	FText HostileText; // 0x368
	FText WeRiseAllianText; // 0x380
	FText HostileRiseAllianText; // 0x398
	FButtonStyle CheckedStyle; // 0x3b0
	FButtonStyle UnCheckedStyle; // 0x628
	UImage* ImgBk; // 0x8a0
	UTextBlock* TbGuildName; // 0x8a8
	UImage* ImgRelationShip; // 0x8b0
	UTextBlock* TbRelationShip; // 0x8b8
	UButton* BtAllian; // 0x8c0
	UButton* BtHostile; // 0x8c8
};

struct UUI_AllianceApplyList : USGUI {
	UScrollBox* ApplyListPanel; // 0x2d8
	UDataButton* PrePageDataButton; // 0x2e0
	UDataButton* NextPageDataButton; // 0x2e8
	UTextBlock* ShowPageText; // 0x2f0
	UButton* ExitButton; // 0x2f8
	UCheckBox* AllowJoinCheckBox; // 0x300
	USortableTitleSlot* NameTitleSlot; // 0x308
	USortableTitleSlot* TimeTitleSlot; // 0x310
	int32_t ApplyNumPerPage; // 0x318
	UAllianceApplySlot* AllianceApplySlotClass; // 0x320
};

struct UShaderPlatformQualitySettings : UObject {
	FMaterialQualityOverrides QualityOverrides[0x4]; // 0x28
};

struct UIterativeOffsetProperties : UInteractiveToolPropertySet {
	int32_t Steps; // 0x60
	bool bOffsetBoundaries; // 0x64
	float SmoothingPerStep; // 0x68
	bool bReprojectSmooth; // 0x6c
};

struct UTransformMeshesTool : UMultiSelectionTool {
	UTransformMeshesToolProperties* TransformProps; // 0x98
	TArray<FTransformMeshesTarget> ActiveGizmos; // 0xb0
};

struct UWBP_MouseSensitivitySettingSliderItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UImage* ImgScrollBg; // 0x370
	USlider* Slider; // 0x378
	UTextBlock* TbTitle; // 0x380
	UTextBlock* Text; // 0x388
	UTextBlock* Text1; // 0x390
	float StepSize; // 0x398
};

struct UWBP_Notice_C : UUI_GameNotice {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	UCircularThrobber* CircularThrobber; // 0x2e8
	UImage* Image_bg1; // 0x2f0
	UImage* Image_OutBg; // 0x2f8
	UVerticalBox* VerticalBoxList; // 0x300
	UWebBrowser* WebBrowserNotice; // 0x308
	FString BaseURL; // 0x310
	FString BaseUrl-en; // 0x320
};

struct UWorldRankItemSlot : UUserWidget {
	char IsSelfItem : 1; // 0x260
	UN_InventorySlot* ItemSlotClass; // 0x268
	UCanvasPanel* RewardCanvasPanel; // 0x270
	USGUI* RootSGUI; // 0x280
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x288
	TArray<USGItem*> TempItems; // 0x290
};

struct UNiagaraSimulationStageGeneric : UNiagaraSimulationStageBase {
	ENiagaraIterationSource IterationSource; // 0x40
	int32_t Iterations; // 0x44
	char bSpawnOnly : 1; // 0x48
	char bDisablePartialParticleUpdate : 1; // 0x48
	FNiagaraVariableDataInterfaceBinding DataInterface; // 0x50
};

struct USGFoliageInstancedStaticMeshComponent : UFoliageInstancedStaticMeshComponent {
	char bEnableNetworkGameplay : 1; // 0x6e0
	char bScaleHealth : 1; // 0x6e0
	char bIgnoreWeaponRebound : 1; // 0x6e0
	char bUseDestructableDebris : 1; // 0x6e0
	char bEnableHitShake : 1; // 0x6e0
	float HealthScaleMultilier; // 0x6e4
	float MinHealthScale; // 0x6e8
	float MaxHealthScale; // 0x6ec
	USGExploitComponent* EmbededComponentClass; // 0x6f0
	float DestructableDebrisMaxReplicateRange; // 0x6f8
	USoundBase* DestroyedSound; // 0x700
	ASGDestructibleActor* DestructableActorClass; // 0x708
	FVector InteractiveFXSpawnOffset; // 0x710
	UParticleSystem* InteractiveFX; // 0x720
	USoundBase* InteractiveSound; // 0x728
	TArray<FExploitScaleConfig> ExploitScaleConfigs; // 0x730
	FElementsMaskStruct ElementsMaskStruct; // 0x740
	USGExploitComponent* ExploitComponent; // 0x760
};

struct UDisplaceMeshCommonProperties : UInteractiveToolPropertySet {
	EDisplaceMeshToolDisplaceType DisplacementType; // 0x60
	float DisplaceIntensity; // 0x64
	int32_t RandomSeed; // 0x68
	int32_t Subdivisions; // 0x6c
	FName WeightMap; // 0x70
	TArray<FString> WeightMapsList; // 0x78
	bool bInvertWeightMap; // 0x88
	bool bDisableSizeWarning; // 0x89
};

struct UAISenseConfig_Sight : UAISenseConfig {
	UAISense_Sight* Implementation; // 0x48
	float SightRadius; // 0x50
	float LoseSightRadius; // 0x54
	float PeripheralVisionAngleDegrees; // 0x58
	FAISenseAffiliationFilter DetectionByAffiliation; // 0x5c
	float AutoSuccessRangeFromLastSeenLocation; // 0x60
	float PointOfViewBackwardOffset; // 0x64
	float NearClippingRadius; // 0x68
};

struct ASGStructurePackageStation : ASGStructureNPC {
	int32_t UsePackageStationCoolTime; // 0x1010
	int32_t UseMenuTime; // 0x1014
};

struct UMovieSceneMarginSection : UMovieSceneSection {
	FMovieSceneFloatChannel TopCurve; // 0xe8
	FMovieSceneFloatChannel LeftCurve; // 0x188
	FMovieSceneFloatChannel RightCurve; // 0x228
	FMovieSceneFloatChannel BottomCurve; // 0x2c8
};

struct UCrowdFollowingComponent : UPathFollowingComponent {
	FVector CrowdAgentMoveDirection; // 0x278
};

struct UIpConnection : UNetConnection {
	float SocketErrorDisconnectDelay; // 0x1b40
};

struct UMyPluginObject : UObject {
	FMyPluginStruct MyStruct; // 0x28
};

struct UAbilityTask_WaitTargetData : UAbilityTask {
	FMulticastInlineDelegate ValidData; // 0x80
	FMulticastInlineDelegate Cancelled; // 0x90
	AGameplayAbilityTargetActor* TargetClass; // 0xa0
	AGameplayAbilityTargetActor* TargetActor; // 0xa8
};

struct UParticleModuleAttractorPoint : UParticleModuleAttractorBase {
	FRawDistributionVector position; // 0x30
	FRawDistributionFloat Range; // 0x78
	FRawDistributionFloat Strength; // 0xa8
	char StrengthByDistance : 1; // 0xd8
	char bAffectBaseVelocity : 1; // 0xd8
	char bOverrideVelocity : 1; // 0xd8
	char bUseWorldSpacePosition : 1; // 0xd8
	char Positive_X : 1; // 0xd8
	char Positive_Y : 1; // 0xd8
	char Positive_Z : 1; // 0xd8
	char Negative_X : 1; // 0xd8
	char Negative_Y : 1; // 0xd9
	char Negative_Z : 1; // 0xd9
};

struct USourceEffectRingModulationPreset : USoundEffectSourcePreset {
	FSourceEffectRingModulationSettings Settings; // 0xb0
};

struct UProceduralPuncturedDiscToolProperties : UProceduralDiscToolProperties {
	float HoleRadius; // 0x80
};

struct UWBP_PrivateSessionDescription_C : UPrivateSessionDescription {
	UImage* ImgBg; // 0x2c0
	UImage* ImgBottom; // 0x2c8
	UImage* ImgInnerBorder; // 0x2d0
	UImage* ImgMODBg; // 0x2d8
	UImage* ImgSessionBg; // 0x2e0
	UImage* ImgSessionBorder; // 0x2e8
	UImage* ImgTitle; // 0x2f0
	UImage* ImgTop; // 0x2f8
	UImage* TitleImage; // 0x300
};

struct UUI_SGGameRecord : USGUI {
	UGameRecordDataRow* GameRecordDataRowTemplate; // 0x2d8
	UButton* AddGameRecordDataBtn; // 0x2e0
	UButton* DeleteGameRecordDataBtn; // 0x2e8
	UButton* DeleteCurveDataBtn; // 0x2f0
	UCheckBox* LoopPlayCB; // 0x2f8
	UButton* PlayFromZeroTimeBtn; // 0x300
	UButton* SetPrevFrameBtn; // 0x308
	UButton* SetNextFrameBtn; // 0x310
	UButton* ShowInExplorerBtn; // 0x318
	UButton* PlayFromCurTimeBtn; // 0x320
	UButton* StopBtn; // 0x328
	UScrollBox* GameRecordDataList; // 0x330
	UScrollBox* GameRecordCurveList; // 0x338
	UGameRecordTrack* GameRecordTrack; // 0x340
	UButton* FitHorzBtn; // 0x348
	UButton* FitVertBtn; // 0x350
	UCanvasPanel* CurveKeyValuePanel; // 0x358
	USpinBox* TimeSpinBox; // 0x360
	USpinBox* ValueSpinBox; // 0x368
	UButton* MinimizeBtn; // 0x370
	UButton* CloseBtn; // 0x378
	UButton* SaveDataBtn; // 0x380
	UCheckBox* ShowFocusPlaneCB; // 0x388
	UTextBlock* SavedDataFilename; // 0x390
	UTextBlock* TipText; // 0x398
};

struct UOverlaySlot : UPanelSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct AProceduralFoliageBlockingVolume : AVolume {
	TArray<AProceduralFoliageVolume*> ProceduralFoliageVolumes; // 0x348
};

struct UUI_CountySeatAltarSlot : USGUI {
	UButton* Button_Worship; // 0x2d8
	UButton* Button_Background; // 0x2e0
	UImage* Image_Icon; // 0x2e8
	UTextBlock* TextBlock_CapitalCopper; // 0x2f0
	UTextBlock* TextBlock_EndTime; // 0x2f8
	UComboBoxString* ComboBox_Day; // 0x300
	UCanvasPanel* CanvasPanel_Time; // 0x308
	UCanvasPanel* CanvasPanel_EndTime; // 0x310
};

struct UParticleModuleVectorFieldLocal : UParticleModuleVectorFieldBase {
	UVectorField* VectorField; // 0x30
	FVector RelativeTranslation; // 0x38
	FRotator RelativeRotation; // 0x44
	FVector RelativeScale3D; // 0x50
	float Intensity; // 0x5c
	float Tightness; // 0x60
	char bIgnoreComponentTransform : 1; // 0x64
	char bTileX : 1; // 0x64
	char bTileY : 1; // 0x64
	char bTileZ : 1; // 0x64
	char bUseFixDT : 1; // 0x64
};

struct UToFloatField : UFieldNodeFloat {
	UFieldNodeInt* IntField; // 0xc0
};

struct UMovieSceneLevelVisibilityTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UInputSettings : UObject {
	TArray<FInputAxisConfigEntry> AxisConfig; // 0x28
	char bAltEnterTogglesFullscreen : 1; // 0x38
	char bF11TogglesFullscreen : 1; // 0x38
	char bUseMouseForTouch : 1; // 0x38
	char bEnableMouseSmoothing : 1; // 0x38
	char bEnableFOVScaling : 1; // 0x38
	char bCaptureMouseOnLaunch : 1; // 0x38
	char bDefaultViewportMouseLock : 1; // 0x38
	char bAlwaysShowTouchInterface : 1; // 0x38
	char bShowConsoleOnFourFingerTap : 1; // 0x39
	char bEnableGestureRecognizer : 1; // 0x39
	bool bUseAutocorrect; // 0x3a
	TArray<FString> ExcludedAutocorrectOS; // 0x40
	TArray<FString> ExcludedAutocorrectCultures; // 0x50
	TArray<FString> ExcludedAutocorrectDeviceModels; // 0x60
	EMouseCaptureMode DefaultViewportMouseCaptureMode; // 0x70
	EMouseLockMode DefaultViewportMouseLockMode; // 0x71
	float FOVScale; // 0x74
	float DoubleClickTime; // 0x78
	TArray<FInputActionKeyMapping> ActionMappings; // 0x80
	TArray<FInputAxisKeyMapping> AxisMappings; // 0x90
	TArray<FInputActionSpeechMapping> SpeechMappings; // 0xa0
	TSoftClassPtr<UObject> DefaultPlayerInputClass; // 0xb0
	TSoftClassPtr<UObject> DefaultInputComponentClass; // 0xd8
	FSoftObjectPath DefaultTouchInterface; // 0x100
	FKey ConsoleKey; // 0x118
	TArray<FKey> ConsoleKeys; // 0x130
};

struct UUI_MapItem : UUserWidget {
	TSoftObjectPtr<UTexture2D> NormalRowTexture; // 0x260
	TSoftObjectPtr<UTexture2D> HoverRowTexture; // 0x288
	TSoftObjectPtr<UTexture2D> SelectRowTexture; // 0x2b0
	TMap<int32_t, FLinearColor> PingMsColor; // 0x2d8
	UTextBlock* TbSessionName; // 0x328
	UTextBlock* TbPlayerNum; // 0x330
	UTextBlock* TbPingMS; // 0x338
	UButton* BtnBg; // 0x340
	UImage* ImgBg; // 0x348
	FMulticastInlineDelegate OnMapItemClicked; // 0x350
	int32_t BindServerInfoIndex; // 0x360
	char bHovered : 1; // 0x364
	char bSelected : 1; // 0x364
	char bFavorite : 1; // 0x364
};

struct UFieldSystemMetaDataProcessingResolution : UFieldSystemMetaData {
	EFieldResolutionType ResolutionType; // 0xc0
};

struct UPartyBeaconState : UObject {
	FName SessionName; // 0x28
	int32_t NumConsumedReservations; // 0x30
	int32_t MaxReservations; // 0x34
	int32_t NumTeams; // 0x38
	int32_t NumPlayersPerTeam; // 0x3c
	FName TeamAssignmentMethod; // 0x40
	int32_t ReservedHostTeamNum; // 0x48
	int32_t ForceTeamNum; // 0x4c
	bool bRestrictCrossConsole; // 0x50
	bool bEnableRemovalRequests; // 0x51
	TArray<FPartyReservation> Reservations; // 0x58
};

struct UAllianceListPanel : USGUI {
	UAllianceDetailsSlot* AllianceDetailsSlot; // 0x2d8
	UEditableTextBox* SearchAllianceEditBox; // 0x2e0
	UDataButton* PrePageDataButton; // 0x2e8
	UDataButton* NextPageDataButton; // 0x2f0
	UTextBlock* ShowPageText; // 0x2f8
	UScrollBox* AllianceListPanel; // 0x300
	UButton* CreateAllianceButton; // 0x308
	UButton* InviteToAllianceButton; // 0x310
	USortableTitleSlot* NameTitleSlot; // 0x318
	USortableTitleSlot* OwnerTitleSlot; // 0x320
	USortableTitleSlot* MemberCountTitleSlot; // 0x328
	USortableTitleSlot* GuildCountTitleSlot; // 0x330
	USortableTitleSlot* ManagementTitleSlot; // 0x338
	UCanvasPanel* LoadingCanvasPanel; // 0x340
	int32_t AllianceListNumPerPage; // 0x348
	UAllianceListSlot* AllianceListSlotClass; // 0x350
	UUI_ModifyText* CreateAllianceUIOverride; // 0x358
	UUI_ModifyText* InviteToAllianceUIOverride; // 0x360
	UUI_ModifyText* ApplyAllianceUIOverride; // 0x368
	int32_t RequestAllianceListCount; // 0x370
};

struct UGizmoWorldAxisSource : UObject {
	FVector Origin; // 0x30
	int32_t AxisIndex; // 0x3c
};

struct UBTService_BlueprintBase : UBTService {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	char bShowPropertyDetails : 1; // 0x90
	char bShowEventDetails : 1; // 0x90
};

struct UPlatformEventsComponent : UActorComponent {
	FMulticastInlineDelegate PlatformChangedToLaptopModeDelegate; // 0xc0
	FMulticastInlineDelegate PlatformChangedToTabletModeDelegate; // 0xd0
};

struct ULakeCollisionComponent : UPrimitiveComponent {
	UBodySetup* CachedBodySetup; // 0x488
	FVector BoxExtent; // 0x490
};

struct UMovieSceneVectorTrack : UMovieScenePropertyTrack {
	int32_t NumChannelsUsed; // 0xb0
};

struct ANavSystemConfigOverride : AActor {
	UNavigationSystemConfig* NavigationSystemConfig; // 0x310
	ENavSystemOverridePolicy OverridePolicy; // 0x318
	char bLoadOnClient : 1; // 0x319
};

struct UUI_AdminPlayerPanel : USGUI {
	UScrollBox* ScrollBoxPlayerList; // 0x2d8
	UEditableTextBox* SearchTextBoxPlayer; // 0x2e0
	UCheckBox* CheckBoxOnline; // 0x2f8
	UCheckBox* CheckBoxOffline; // 0x300
	UUI_ServerAdminPlayerRow* UUI_ServerAdminPlayerRowTemplate; // 0x318
	TArray<UUI_ServerAdminPlayerRow*> CachedServerAdminPlayerRow; // 0x320
};

struct UGizmoComponentAxisSource : UObject {
	USceneComponent* Component; // 0x30
	int32_t AxisIndex; // 0x38
	bool bLocalAxes; // 0x3c
};

struct UBoundsCopyComponent : UActorComponent {
	TSoftObjectPtr<AActor> BoundsSourceActor; // 0xc0
	bool bUseCollidingComponentsForSourceBounds; // 0xe8
	bool bKeepOwnBoundsScale; // 0xe9
	bool bUseCollidingComponentsForOwnBounds; // 0xea
	FTransform PostTransform; // 0xf0
	bool bCopyXBounds; // 0x120
	bool bCopyYBounds; // 0x121
	bool bCopyZBounds; // 0x122
};

struct UMovieSceneEventRepeaterSection : UMovieSceneEventSectionBase {
	FMovieSceneEvent Event; // 0xf0
};

struct UUI_VehiclePerk : USGUI {
	int32_t PerRowCount; // 0x2d8
	UVehiclePerkSlot* VehiclePerkSlotTemplate; // 0x2e0
	UUI_ModifyVehiclePerk* ModifyVehiclePerkTemplate; // 0x2e8
	UUniformGridPanel* ForbidPlacePerkPanel; // 0x2f0
	UUniformGridPanel* AllowPlacePerkPanel; // 0x2f8
	UUniformGridPanel* SpecialPerkPanel; // 0x300
	UUniformGridPanel* RecessivePerkPanel; // 0x308
	TWeakObjectPtr<ASG_HorseCharacter> BindHorseCharacter; // 0x310
};

struct UBrushRemeshProperties : URemeshProperties {
	bool bEnableRemeshing; // 0x70
	int32_t TriangleSize; // 0x74
	int32_t PreserveDetail; // 0x78
};

struct USkyAtmosphereComponent : USceneComponent {
	ESkyAtmosphereTransformMode TransformMode; // 0x208
	float BottomRadius; // 0x20c
	FColor GroundAlbedo; // 0x210
	float AtmosphereHeight; // 0x214
	float MultiScatteringFactor; // 0x218
	float TraceSampleCountScale; // 0x21c
	float RayleighScatteringScale; // 0x220
	FLinearColor RayleighScattering; // 0x224
	float RayleighExponentialDistribution; // 0x234
	float MieScatteringScale; // 0x238
	FLinearColor MieScattering; // 0x23c
	float MieAbsorptionScale; // 0x24c
	FLinearColor MieAbsorption; // 0x250
	float MieAnisotropy; // 0x260
	float MieExponentialDistribution; // 0x264
	float OtherAbsorptionScale; // 0x268
	FLinearColor OtherAbsorption; // 0x26c
	FTentDistribution OtherTentDistribution; // 0x27c
	FLinearColor SkyLuminanceFactor; // 0x288
	float AerialPespectiveViewDistanceScale; // 0x298
	float HeightFogContribution; // 0x29c
	float TransmittanceMinLightElevationAngle; // 0x2a0
	float AerialPerspectiveStartDepth; // 0x2a4
	FGuid bStaticLightingBuiltGUID; // 0x2cc
};

struct ASGStructureInstrument : ASGStructureSeat {
	TArray<FRotator> SeatRotationOffset; // 0xf70
	TArray<FName> CameraSocketName; // 0xf80
	char bCanNPCHelp : 1; // 0xf90
	TArray<ABaseCharacter*> AllowNpcControlClass; // 0xf98
	UStaticMesh* InstrumentStickMesh; // 0xfa8
	TArray<FName> InstrumentStickSocketNames; // 0xfb0
	char bShowCrossHair : 1; // 0xfc0
	FText TipsText; // 0xfc8
	ESiegeType SiegeType; // 0xfe0
	TArray<UStaticMeshComponent*> InstrumentStickComponents; // 0xfe8
};

struct UPullKelvinletBrushOpProps : UBaseKelvinletBrushOpProps {
	float Falloff; // 0x70
	float Depth; // 0x74
};

struct UHorseAuctionSellPanel : USGUI {
	UScrollBox* ScrollSellHorseList; // 0x2d8
	UScrollBox* ScrollMyHorseList; // 0x2e0
	UButton* Button_Recall; // 0x2e8
	UButton* Button_Sell; // 0x2f0
	UVehicleEquipPanel* VehicleEquipPanel; // 0x2f8
	UOptionButton* AttributeButton; // 0x300
	UOptionButton* PerkButton; // 0x308
	UVehicleAttributePanel* AttributePanel; // 0x310
	UUI_VehiclePerk* PerkPanel; // 0x318
	UCanvasPanel* CanvasPanel_Preview; // 0x320
	UButton* Button_RefreshSellList; // 0x328
	UButton* Button_RefreshMyList; // 0x330
	UHorseAuctionSellSlot* HorseAuctionSellSlot; // 0x338
	TWeakObjectPtr<UHorseAuctionSellSlot> MyHorseSlotSelected; // 0x340
	TWeakObjectPtr<UHorseAuctionSellSlot> SellHorseSlotSelected; // 0x348
	TWeakObjectPtr<UUI_GuildAuctionHouse> ParentUI; // 0x350
};

struct UGuildKPIItemSlot : UUserWidget {
	UBorder* BGBorder; // 0x260
	UImage* IconImage; // 0x268
	UTextBlock* NameText; // 0x270
	TSoftObjectPtr<UTexture2D> NormalBGTexture; // 0x278
	TSoftObjectPtr<UTexture2D> SelectBGTexture; // 0x2a0
};

struct UARTrackedObject : UARTrackedGeometry {
	UARCandidateObject* DetectedObject; // 0xf8
};

struct UBoxReflectionCaptureComponent : UReflectionCaptureComponent {
	float BoxTransitionDistance; // 0x280
	UBoxComponent* PreviewInfluenceBox; // 0x288
	UBoxComponent* PreviewCaptureBox; // 0x290
};

struct UARPointComponent : UARComponent {
	FARPointUpdatePayload ReplicatedPayload; // 0x288
};

struct UHorseAuctionPanel : USGUI {
	UScrollBox* ScrollHorseList; // 0x2d8
	UVehicleEquipPanel* VehicleEquipPanel; // 0x2e0
	UVehicleAttributePanel* AttributePanel; // 0x2e8
	UUI_VehiclePerk* PerkPanel; // 0x2f0
	UCanvasPanel* CanvasPanel_Preview; // 0x2f8
	UOptionButton* AttributeButton; // 0x300
	UOptionButton* PerkButton; // 0x308
	UGuildAuthorityComboBox* ComboBoxQuality; // 0x310
	UGuildAuthorityComboBox* ComboBoxVehicleType; // 0x318
	UGuildAuthorityComboBox* ComboBoxLevel; // 0x320
	UButton* SearchButton; // 0x328
	UButton* BuyButton; // 0x330
	UButton* Button_Previous; // 0x338
	UButton* Button_Next; // 0x340
	UTextBlock* TextBlock_CurrentPage; // 0x348
	UHorseAuctionSellSlot* HorseAuctionSellSlot; // 0x350
	int32_t MaxLevel; // 0x358
	int32_t MaxPage; // 0x35c
	int32_t OnePageDataCount; // 0x360
	TWeakObjectPtr<UUI_GuildAuctionHouse> ParentUI; // 0x378
	TWeakObjectPtr<UHorseAuctionSellSlot> HorseSlotSelected; // 0x380
};

struct UBehaviorTree : UObject {
	UBTCompositeNode* RootNode; // 0x30
	UBlackboardData* BlackboardAsset; // 0x38
	TArray<UBTDecorator*> RootDecorators; // 0x40
	TArray<FBTDecoratorLogic> RootDecoratorOps; // 0x50
};

struct UMaterialExpressionFeatureLevelSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
};

struct UDrawPolygonTool : UInteractiveTool {
	UDrawPolygonToolStandardProperties* PolygonProperties; // 0x88
	UDrawPolygonToolSnapProperties* SnapProperties; // 0x90
	UNewMeshMaterialProperties* MaterialProperties; // 0x98
	UPreviewMesh* PreviewMesh; // 0x150
	UTransformGizmo* PlaneTransformGizmo; // 0x158
	UTransformProxy* PlaneTransformProxy; // 0x160
	UPlaneDistanceFromHitMechanic* HeightMechanic; // 0x540
};

struct USoundBase : UObject {
	USoundClass* SoundClassObject; // 0x30
	char bDebug : 1; // 0x38
	char bOverrideConcurrency : 1; // 0x38
	char bOutputToBusOnly : 1; // 0x38
	char bHasDelayNode : 1; // 0x38
	char bHasConcatenatorNode : 1; // 0x38
	char bBypassVolumeScaleForPriority : 1; // 0x38
	EVirtualizationMode VirtualizationMode; // 0x39
	TSet<USoundConcurrency*> ConcurrencySet; // 0x90
	FSoundConcurrencySettings ConcurrencyOverrides; // 0xe0
	float Duration; // 0x108
	float MaxDistance; // 0x10c
	float TotalSamples; // 0x110
	float Priority; // 0x114
	USoundAttenuation* AttenuationSettings; // 0x118
	FSoundModulationDefaultRoutingSettings ModulationSettings; // 0x120
	USoundSubmixBase* SoundSubmixObject; // 0x168
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x170
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x180
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x188
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x198
	TArray<UAssetUserData*> AssetUserData; // 0x1a8
};

struct UGroomBindingAsset : UObject {
	UGroomAsset* Groom; // 0x28
	USkeletalMesh* SourceSkeletalMesh; // 0x30
	USkeletalMesh* TargetSkeletalMesh; // 0x38
	int32_t NumInterpolationPoints; // 0x40
	int32_t MatchingSection; // 0x44
	TArray<FGoomBindingGroupInfo> GroupInfos; // 0x48
};

struct UPrivateSessionDescription : UUserWidget {
	UPrivateSessionMODItem* MODItemTemplate; // 0x260
	int32_t MaxMODItemNumPerPage; // 0x268
	float MODItemSizeY; // 0x26c
	UTextBlock* TbSessionName; // 0x280
	URichTextBlock* RtbDescription; // 0x288
	UButton* BtnConfirm; // 0x290
	UCanvasPanel* MODCanvas; // 0x298
	USizeBox* MODSizeBox; // 0x2a0
	UUniformGridPanel* UGPMODList; // 0x2a8
	TArray<UPrivateSessionMODItem*> MODItemList; // 0x2b0
};

struct UGizmoLocalFloatParameterSource : UGizmoBaseFloatParameterSource {
	float Value; // 0x48
	FGizmoFloatParameterChange LastChange; // 0x4c
};

struct ATextRenderActor : AActor {
	UTextRenderComponent* TextRender; // 0x310
};

struct UMaterialExpressionComment : UMaterialExpression {
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FString Text; // 0x48
	FLinearColor CommentColor; // 0x58
	int32_t FontSize; // 0x68
};

struct UBTTask_SetRandomPoint : UBTTask_SGBlueprintBase {
	FBlackboardKeySelector BBKey_DesiredLocation; // 0xc0
};

struct ASG_HemlockCharacter : ASG_MoveSeatingCharacter {
	float TriggerBoxDamageImpulse; // 0x2698
	float TriggerBoxDamageAmount; // 0x269c
	USGDamageType* TriggerBoxDamageTypeClass; // 0x26a0
	EDamageType TriggerBoxDamageType; // 0x26a8
	char bAutoSplineRouteMoveStarted : 1; // 0x26a9
	FSoftObjectPath DestroyedMesh; // 0x26b0
	ASGDestructibleActor* DestroyedMeshActorClass; // 0x26c8
	FName DeadSoundID; // 0x26d0
	UAnimMontage* MoveMontage; // 0x26d8
};

struct UDatasmithSceneComponentTemplate : UDatasmithObjectTemplate {
	FTransform RelativeTransform; // 0x30
	EComponentMobility Mobility; // 0x60
	TSoftObjectPtr<USceneComponent> AttachParent; // 0x68
	bool bVisible; // 0x90
	TSet<FName> Tags; // 0x98
};

struct AGeometryCollectionActor : AActor {
	UGeometryCollectionComponent* GeometryCollectionComponent; // 0x310
	UGeometryCollectionDebugDrawComponent* GeometryCollectionDebugDrawComponent; // 0x318
};

struct UGivePerkAnimationNotifyWidget : UAnimationNotifyWidget {
	UWidgetAnimation* GivePerk; // 0x278
	UTextBlock* TextBlock_perkpoint; // 0x280
};

struct UMiniMapPOI_Actor : UMiniMapPOI {
	char bShowHeightIndicator : 1; // 0x390
	float AcceptableHeightDiff; // 0x394
	char bFollowActorRotation : 1; // 0x398
	UImage* UpArrow; // 0x3a8
	UImage* DownArrow; // 0x3b0
};

struct UPhysicsAsset : UObject {
	TArray<int32_t> BoundsBodies; // 0x30
	TArray<USkeletalBodySetup*> SkeletalBodySetups; // 0x40
	TArray<UPhysicsConstraintTemplate*> ConstraintSetup; // 0x50
	FSolverIterations SolverIterations; // 0x60
	char bNotForDedicatedServer : 1; // 0x7c
	UThumbnailInfo* ThumbnailInfo; // 0x120
	TArray<UBodySetup*> BodySetup; // 0x128
};

struct UAsyncActionLoadPrimaryAsset : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UCageInfoHUDSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> SexFemaleTexture; // 0x260
	TSoftObjectPtr<UTexture2D> SexMaleTexture; // 0x288
	UTextBlock* AnimalNameText; // 0x2b0
	UImage* AnimalSexImg; // 0x2b8
	UTextBlock* AnimalEscapeTimeText; // 0x2c0
	TWeakObjectPtr<ASGStructureAnimalCage> BindCageStructure; // 0x2c8
};

struct UAnimCompress : UAnimBoneCompressionCodec {
	char bNeedsSkeleton : 1; // 0x38
	AnimationCompressionFormat TranslationCompressionFormat; // 0x3c
	AnimationCompressionFormat RotationCompressionFormat; // 0x3d
	AnimationCompressionFormat ScaleCompressionFormat; // 0x3e
};

struct UEnvQueryTest_InsideWaterBody : UEnvQueryTest {
	bool bIncludeWaves; // 0x1f8
	bool bSimpleWaves; // 0x1f9
	bool bIgnoreExclusionVolumes; // 0x1fa
};

struct UEnvQueryGenerator_CurrentLocation : UEnvQueryGenerator {
	UEnvQueryContext* QueryContext; // 0x50
};

struct UGizmoPlaneScaleParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float ScaleMultiplier; // 0xb0
	FVector2D Parameter; // 0xb4
	FGizmoVec2ParameterChange LastChange; // 0xbc
	FVector CurScaleOrigin; // 0xcc
	FVector CurScaleNormal; // 0xd8
	FVector CurScaleAxisX; // 0xe4
	FVector CurScaleAxisY; // 0xf0
	FTransform InitialTransform; // 0x100
};

struct USGAchievementToolTipWidget : USGToolTipWidget {
	UTextBlock* TbName; // 0x288
	UHorizontalBox* HbName; // 0x290
	UTextBlock* TbDescription; // 0x298
	UHorizontalBox* HbDescription; // 0x2a0
};

struct UAnimSequenceLevelSequenceLink : UAssetUserData {
	FGuid SkelTrackGuid; // 0x28
	FSoftObjectPath PathToLevelSequence; // 0x38
};

struct UARGeoAnchorComponent : UARComponent {
	FARGeoAnchorUpdatePayload ReplicatedPayload; // 0x290
};

struct UAcceptOutputProperties : UInteractiveToolPropertySet {
	bool bExportSeparatedPiecesAsNewMeshAssets; // 0x60
};

struct USmoothMeshTool : UBaseMeshProcessingTool {
	USmoothMeshToolProperties* SmoothProperties; // 0x400
	UIterativeSmoothProperties* IterativeProperties; // 0x408
	UDiffusionSmoothProperties* DiffusionProperties; // 0x410
	UImplicitSmoothProperties* ImplicitProperties; // 0x418
	USmoothWeightMapSetProperties* WeightMapProperties; // 0x420
};

struct UReverbEffect : UObject {
	bool bBypassEarlyReflections; // 0x28
	float ReflectionsDelay; // 0x2c
	float GainHF; // 0x30
	float ReflectionsGain; // 0x34
	bool bBypassLateReflections; // 0x38
	float LateDelay; // 0x3c
	float DecayTime; // 0x40
	float Density; // 0x44
	float Diffusion; // 0x48
	float AirAbsorptionGainHF; // 0x4c
	float DecayHFRatio; // 0x50
	float LateGain; // 0x54
	float Gain; // 0x58
	float RoomRolloffFactor; // 0x5c
};

struct UDisplaceMeshSineWaveProperties : UInteractiveToolPropertySet {
	float SineWaveFrequency; // 0x60
	float SineWavePhaseShift; // 0x64
	FVector SineWaveDirection; // 0x68
};

struct UNewsClientData_GeneralHungry : UNewsClientData {
	FGuid GeneralChunkId; // 0x50
};

struct UPlaneBrushOpProps : UBasePlaneBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct ACreateRoleCameraActor : ASGCameraActor {
	TArray<FCreateRoleCameraLevelData> CameraLevelDatas; // 0x8a8
	int32_t DefaultCameraLevel; // 0x8b8
	FName DefaultCameraTarget; // 0x8bc
	float WheelInterval; // 0x8c4
	FVector DefaultLocation; // 0x8c8
	float CameraInterpDuration; // 0x8d4
	UCurveFloat* CameraInterpCurve; // 0x8d8
	FRotator DefaultRotator; // 0x8e0
	float FreeOffsetStep; // 0x8ec
	float FreeOffsetInterpSpeed; // 0x8f0
	float ResetFreeOffsetInterpSpeed; // 0x8f4
	FVector CameraRelativeLocationOffset; // 0x924
	FVector FreeRelativeLocationOffset; // 0x930
	FVector TargetFreeRelativeLocationOffset; // 0x93c
	float CameraDistance; // 0x948
	float CameraFOV; // 0x94c
	int32_t CameraLevel; // 0x950
	FName CameraTarget; // 0x954
	char bFree : 1; // 0x95c
};

struct UGizmoBaseComponent : UPrimitiveComponent {
	FLinearColor Color; // 0x488
	float HoverSizeMultiplier; // 0x498
	float PixelHitDistanceThreshold; // 0x49c
};

struct UDatasmithAreaLightActorTemplate : UDatasmithObjectTemplate {
	EDatasmithAreaLightActorType LightType; // 0x30
	EDatasmithAreaLightActorShape LightShape; // 0x31
	FVector2D Dimensions; // 0x34
	FLinearColor Color; // 0x3c
	float Intensity; // 0x4c
	ELightUnits IntensityUnits; // 0x50
	float Temperature; // 0x54
	TSoftObjectPtr<UTextureLightProfile> IESTexture; // 0x58
	bool bUseIESBrightness; // 0x80
	float IESBrightnessScale; // 0x84
	FRotator Rotation; // 0x88
	float SourceRadius; // 0x94
	float SourceLength; // 0x98
	float AttenuationRadius; // 0x9c
};

struct UNiagaraDataInterfaceNeighborGrid3D : UNiagaraDataInterfaceGrid3D {
	uint32_t MaxNeighborsPerCell; // 0x100
};

struct UDisplaceMeshTextureMapProperties : UInteractiveToolPropertySet {
	UTexture2D* DisplacementMap; // 0x60
};

struct UMaterialExpressionSpriteTextureSampler : UMaterialExpressionTextureSampleParameter2D {
	bool bSampleAdditionalTextures; // 0x80
	int32_t AdditionalSlotIndex; // 0x84
	FText SlotDisplayName; // 0x88
};

struct UCrowdManager : UCrowdManagerBase {
	ANavigationData* MyNavData; // 0x28
	TArray<FCrowdAvoidanceConfig> AvoidanceConfig; // 0x30
	TArray<FCrowdAvoidanceSamplingPattern> SamplingPatterns; // 0x40
	int32_t MaxAgents; // 0x50
	float MaxAgentRadius; // 0x54
	int32_t MaxAvoidedAgents; // 0x58
	int32_t MaxAvoidedWalls; // 0x5c
	float NavmeshCheckInterval; // 0x60
	float PathOptimizationInterval; // 0x64
	float SeparationDirClamp; // 0x68
	float PathOffsetRadiusMultiplier; // 0x6c
	char bResolveCollisions : 1; // 0x70
};

struct UAIAsyncTaskBlueprintProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFail; // 0x38
};

struct UAudioCurveSourceComponent : UAudioComponent {
	FName CurveSourceBindingName; // 0x880
	float CurveSyncOffset; // 0x888
};

struct UWBP_ScalabilityFloatItem_C : UScalabilityDetailItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	UHorizontalBox* HorizontalBox; // 0x2e8
	UImage* ImgScrollBg; // 0x2f0
	USlider* Slider; // 0x2f8
	UTextBlock* TbTitle; // 0x300
	UTextBlock* TbValue; // 0x308
	UTextBlock* TbVariableValue; // 0x310
};

struct UInterpTrackInstAnimControl : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UARTextureCameraDepth : UARTexture {
	EARDepthQuality DepthQuality; // 0xf8
	EARDepthAccuracy DepthAccuracy; // 0xf9
	bool bIsTemporallySmoothed; // 0xfa
};

struct UGlobalMapFilter : UUserWidget {
	FText FilterName; // 0x260
	EGlobalMapFilterType FilterType; // 0x278
	UCheckBox* CbFilter; // 0x290
	UTextBlock* TbFilterName; // 0x298
	UButton* BtnFilter; // 0x2a0
};

struct UUI_AimDirection : UUserWidget {
	UImage* DirectionArrowImage; // 0x260
	UWidgetAnimation* FadeAnimation; // 0x268
	float MaxWaitTime; // 0x27c
	FVector2D FadePlayRateRange; // 0x280
	TMap<EAimDirection, FDirectionWidgetData> TMap_DirectionWidgetData; // 0x288
};

struct UViewport : UContentWidget {
	FLinearColor BackgroundColor; // 0x120
};

struct UPhysicalMaterial : UObject {
	float Friction; // 0x28
	float StaticFriction; // 0x2c
	EFrictionCombineMode FrictionCombineMode; // 0x30
	bool bOverrideFrictionCombineMode; // 0x31
	float Restitution; // 0x34
	EFrictionCombineMode RestitutionCombineMode; // 0x38
	bool bOverrideRestitutionCombineMode; // 0x39
	float Density; // 0x3c
	float SleepLinearVelocityThreshold; // 0x40
	float SleepAngularVelocityThreshold; // 0x44
	int32_t SleepCounterThreshold; // 0x48
	float RaiseMassToPower; // 0x4c
	float DestructibleDamageThresholdScale; // 0x50
	UPhysicalMaterialPropertyBase* PhysicalMaterialProperty; // 0x58
	EPhysicalSurface SurfaceType; // 0x60
};

struct USizeBox : UContentWidget {
	float WidthOverride; // 0x130
	float HeightOverride; // 0x134
	float MinDesiredWidth; // 0x138
	float MinDesiredHeight; // 0x13c
	float MaxDesiredWidth; // 0x140
	float MaxDesiredHeight; // 0x144
	float MinAspectRatio; // 0x148
	float MaxAspectRatio; // 0x14c
	char bOverride_WidthOverride : 1; // 0x150
	char bOverride_HeightOverride : 1; // 0x150
	char bOverride_MinDesiredWidth : 1; // 0x150
	char bOverride_MinDesiredHeight : 1; // 0x150
	char bOverride_MaxDesiredWidth : 1; // 0x150
	char bOverride_MaxDesiredHeight : 1; // 0x150
	char bOverride_MinAspectRatio : 1; // 0x150
	char bOverride_MaxAspectRatio : 1; // 0x150
};

struct ASGCharacter : ABaseCharacter {
	USGCharacterAnimInstance* SGAnimInstance; // 0x2120
	char CapsuleCollision : 1; // 0xe7e8
	EStanceMode Enum_StanceMode; // 0xe7f8
	EMovingGaitType Enum_PlayerInputGaitType; // 0xe7f9
	EMovingGaitType Enum_MovingGaitType; // 0xe7fa
	char bShouldRun : 1; // 0xe7fb
	FCharacterJumpZConfig Struct_CharacterJumpZ; // 0xfe88
	char bIsAiming : 1; // 0xfe90
	char UseWeapon : 1; // 0xfe90
	char bShowBlockCollision : 1; // 0xfe90
	FBlockInfo Struct_CurrentBlockData; // 0xfe98
	FTimerHandle DelayBlockTimer; // 0xfea8
	FTimerHandle UpdateBlockStateTimer; // 0xfeb0
	FTimerHandle UpdateBlockDirectionTimer; // 0xfeb8
	FGuid CurrentAttackUniqueId; // 0xfec0
	char bQuickAttack : 1; // 0xfed0
	float AttackResetTime; // 0xfed4
	float AttackTransitionTime; // 0xfed8
	float DelayCleatAttackStateTime; // 0xfedc
	float DelayAttackTime; // 0xfee0
	float DelayBlockTime; // 0xfee4
	char bEnableAnimAfterShaking : 1; // 0xfee8
	char bIsPressedKickAttack : 1; // 0xfee8
	char bIsPressedOffHandWeaponAttack : 1; // 0xfee8
	char bIsPressedBlock : 1; // 0xfee8
	char bIsPlayAttackMontage : 1; // 0xfee8
	char bIsContinuousAttack : 1; // 0xfee8
	FTimerHandle DelayAttackTimer; // 0xfef0
	FTimerHandle UpdateAttackStateTimer; // 0xfef8
	FTimerHandle DelayClearAttackStateTimer; // 0xff00
	float RiderSprintAttackCoolingTime; // 0xff08
	float RiderSprintAttackCoolingTimeAdd; // 0xff0c
	float RiderSprintAttackLoopingTime; // 0xff10
	float RiderSprintAttackLoopingTimeAdd; // 0xff14
	FTimerHandle RiderSprintAttackCoolingTimer; // 0xff18
	FTimerHandle RiderSprintAttackLoopTimer; // 0xff20
	char bUpdateCrosshair : 1; // 0xff28
	float DesiredCrosshairValue; // 0xff2c
	UAnimMontage* KickMontage; // 0xff30
	FTimerHandle UpdateShooterShakeTimer; // 0xff48
	char bIsCancelAttack : 1; // 0xff50
	UAnimMontage* CancelAttackMontage; // 0xff58
	float SecondaryAttackCoolingTime; // 0xff60
	char bIsAttackCooling : 1; // 0xff64
	char bIsCancelAttackCooling : 1; // 0xff64
	FTimerHandle CancelAttackCoolingTimer; // 0xff78
	int32_t ComboAttackMaxNumber; // 0xff80
	char bIsComboAttack : 1; // 0xff84
	int32_t ComboAttackCurrentNumber; // 0xff88
	FTimerHandle UpdateShooterPullTimer; // 0xff90
	FTimerHandle UpdateShooterPullHoldTimer; // 0xff98
	char bIsShake : 1; // 0xffa0
	char bIsWantReload : 1; // 0xffa0
	float TestAlpha; // 0xffbc
	float HoldBreathTime; // 0xffcc
	char bIsPressedHoldBreath : 1; // 0xffd0
	char bIsHoldBreath : 1; // 0xffd0
	char bIsHoldBreathCooling : 1; // 0xffd0
	FHitAnims Struct_LastHitAnims; // 0xffd8
	char bIsBlockDamageAttack : 1; // 0x10060
	float WillDeadReliveHP; // 0x10064
	float WillDeadReliveHPAdd; // 0x10068
	float WillDeadReliveHPMulAdd; // 0x1006c
	float WillDeadReliveHPConfig; // 0x10070
	float WillDeadReliveHPRandom; // 0x10074
	float RescueTime; // 0x10078
	float RescueTimeAdd; // 0x1007c
	float RescueTimeMulAdd; // 0x10080
	float RescueTimeConfig; // 0x10084
	float RescueTimeRandom; // 0x10088
	ASGCharacter* AcceptRescueCharacter; // 0x10090
	ASGCharacter* DoRescueCharacter; // 0x10098
	TWeakObjectPtr<ASGCharacter> VirtualRecuseCharacter; // 0x100a0
	FTimerHandle RescueTimerHandle; // 0x100a8
	FTimerHandle RescueCheckTimerHandle; // 0x100b0
	float RescueRadius; // 0x100b8
	float WillDeadEyeHeight; // 0x100bc
	float MaxSkillLevel; // 0x10140
	float MaxAddSkillLevel; // 0x10144
	float PlayerCharAddExpMulAdd; // 0x10148
	float PlayerCharAddSkillExpMulAdd; // 0x1014c
	float GenCharAddExpMulAdd; // 0x10150
	float GenCharAddSkillExpMulAdd; // 0x10154
	int32_t ST; // 0x10158
	int32_t AG; // 0x1015c
	int32_t WI; // 0x10160
	int32_t EN; // 0x10164
	int32_t CH; // 0x10168
	double PublicSkillExp; // 0x10170
	int64_t ReduceSkillMasteryWeek; // 0x10178
	UCurveTable* ReduceSkillMasteryCapitalDataTable; // 0x10180
	int32_t ReduceSkillMasteryTimes; // 0x10188
	int32_t WeekFreeReduceSkillMasteryTimes; // 0x1018c
	int32_t FreeReduceSkillMasteryTimes; // 0x101a0
	int32_t FreeReduceSkillMasteryPointsAdd; // 0x101b8
	UDataTable* LimitSkillLevelDataTable; // 0x101c0
	float OneHandedWeapons; // 0x101c8
	float OneHandedWeaponsCalculation; // 0x101cc
	float OneHandedWeaponsConfig; // 0x101d0
	int32_t OneHandedWeaponsAddPoints; // 0x101d4
	int32_t OneHandedWeaponsRandom; // 0x101d8
	int32_t OneHandedWeaponsAdd; // 0x101dc
	double OneHandedWeaponsExp; // 0x101e0
	double OneHandedWeaponsLevelUpExp; // 0x101e8
	int32_t OneHandedWeaponsMastery; // 0x101f0
	int32_t OneHandedWeaponsLimitLevelIndex; // 0x101f4
	int32_t OneHandedWeaponsLimitLevel; // 0x101f8
	float Shields; // 0x101fc
	float ShieldsCalculation; // 0x10200
	float ShieldsConfig; // 0x10204
	int32_t ShieldsAddPoints; // 0x10208
	int32_t ShieldsRandom; // 0x1020c
	int32_t ShieldsAdd; // 0x10210
	double ShieldsExp; // 0x10218
	double ShieldsLevelUpExp; // 0x10220
	int32_t ShieldsMastery; // 0x10228
	int32_t ShieldsLimitLevelIndex; // 0x1022c
	int32_t ShieldsLimitLevel; // 0x10230
	float TowHandedWeapons; // 0x10234
	float TowHandedWeaponsCalculation; // 0x10238
	float TowHandedWeaponsConfig; // 0x1023c
	int32_t TowHandedWeaponsAddPoints; // 0x10240
	int32_t TowHandedWeaponsRandom; // 0x10244
	int32_t TowHandedWeaponsAdd; // 0x10248
	double TowHandedWeaponsExp; // 0x10250
	double TowHandedWeaponsLevelUpExp; // 0x10258
	int32_t TowHandedWeaponsMastery; // 0x10260
	int32_t TowHandedWeaponsLimitLevelIndex; // 0x10264
	int32_t TowHandedWeaponsLimitLevel; // 0x10268
	float Polearms; // 0x1026c
	float PolearmsCalculation; // 0x10270
	float PolearmsConfig; // 0x10274
	int32_t PolearmsAddPoints; // 0x10278
	int32_t PolearmsRandom; // 0x1027c
	int32_t PolearmsAdd; // 0x10280
	double PolearmsExp; // 0x10288
	double PolearmsLevelUpExp; // 0x10290
	int32_t PolearmsMastery; // 0x10298
	int32_t PolearmsLimitLevelIndex; // 0x1029c
	int32_t PolearmsLimitLevel; // 0x102a0
	float HeavyArmors; // 0x102a4
	float HeavyArmorsCalculation; // 0x102a8
	float HeavyArmorsConfig; // 0x102ac
	int32_t HeavyArmorsAddPoints; // 0x102b0
	int32_t HeavyArmorsRandom; // 0x102b4
	int32_t HeavyArmorsAdd; // 0x102b8
	double HeavyArmorsExp; // 0x102c0
	double HeavyArmorsLevelUpExp; // 0x102c8
	int32_t HeavyArmorsMastery; // 0x102d0
	int32_t HeavyArmorsLimitLevelIndex; // 0x102d4
	int32_t HeavyArmorsLimitLevel; // 0x102d8
	float Throwing; // 0x102dc
	float ThrowingCalculation; // 0x102e0
	float ThrowingConfig; // 0x102e4
	int32_t ThrowingAddPoints; // 0x102e8
	int32_t ThrowingRandom; // 0x102ec
	int32_t ThrowingAdd; // 0x102f0
	double ThrowingExp; // 0x102f8
	double ThrowingLevelUpExp; // 0x10300
	int32_t ThrowingMastery; // 0x10308
	int32_t ThrowingLimitLevelIndex; // 0x1030c
	int32_t ThrowingLimitLevel; // 0x10310
	float Archery; // 0x10314
	float ArcheryCalculation; // 0x10318
	float ArcheryConfig; // 0x1031c
	int32_t ArcheryAddPoints; // 0x10320
	int32_t ArcheryRandom; // 0x10324
	int32_t ArcheryAdd; // 0x10328
	double ArcheryExp; // 0x10330
	double ArcheryLevelUpExp; // 0x10338
	int32_t ArcheryMastery; // 0x10340
	int32_t ArcheryLimitLevelIndex; // 0x10344
	int32_t ArcheryLimitLevel; // 0x10348
	float Crossbows; // 0x1034c
	float CrossbowsCalculation; // 0x10350
	float CrossbowsConfig; // 0x10354
	int32_t CrossbowsAddPoints; // 0x10358
	int32_t CrossbowsRandom; // 0x1035c
	int32_t CrossbowsAdd; // 0x10360
	double CrossbowsExp; // 0x10368
	double CrossbowsLevelUpExp; // 0x10370
	int32_t CrossbowsMastery; // 0x10378
	int32_t CrossbowsLimitLevelIndex; // 0x1037c
	int32_t CrossbowsLimitLevel; // 0x10380
	float Riding; // 0x10384
	float RidingCalculation; // 0x10388
	float RidingConfig; // 0x1038c
	int32_t RidingAddPoints; // 0x10390
	int32_t RidingRandom; // 0x10394
	int32_t RidingAdd; // 0x10398
	double RidingExp; // 0x103a0
	double RidingLevelUpExp; // 0x103a8
	int32_t RidingMastery; // 0x103b0
	int32_t RidingLimitLevelIndex; // 0x103b4
	int32_t RidingLimitLevel; // 0x103b8
	float LightArmors; // 0x103bc
	float LightArmorsCalculation; // 0x103c0
	float LightArmorsConfig; // 0x103c4
	int32_t LightArmorsAddPoints; // 0x103c8
	int32_t LightArmorsRandom; // 0x103cc
	int32_t LightArmorsAdd; // 0x103d0
	double LightArmorsExp; // 0x103d8
	double LightArmorsLevelUpExp; // 0x103e0
	int32_t LightArmorsMastery; // 0x103e8
	int32_t LightArmorsLimitLevelIndex; // 0x103ec
	int32_t LightArmorsLimitLevel; // 0x103f0
	float Physique; // 0x103f4
	float PhysiqueCalculation; // 0x103f8
	float PhysiqueConfig; // 0x103fc
	int32_t PhysiqueAddPoints; // 0x10400
	int32_t PhysiqueRandom; // 0x10404
	int32_t PhysiqueAdd; // 0x10408
	double PhysiqueExp; // 0x10410
	double PhysiqueLevelUpExp; // 0x10418
	int32_t PhysiqueMastery; // 0x10420
	int32_t PhysiqueLimitLevelIndex; // 0x10424
	int32_t PhysiqueLimitLevel; // 0x10428
	float Mining; // 0x1042c
	float MiningCalculation; // 0x10430
	float MiningConfig; // 0x10434
	int32_t MiningAddPoints; // 0x10438
	int32_t MiningRandom; // 0x1043c
	int32_t MiningAdd; // 0x10440
	double MiningExp; // 0x10448
	double MiningLevelUpExp; // 0x10450
	int32_t MiningMastery; // 0x10458
	int32_t MiningLimitLevelIndex; // 0x1045c
	int32_t MiningLimitLevel; // 0x10460
	float Lumbering; // 0x10464
	float LumberingCalculation; // 0x10468
	float LumberingConfig; // 0x1046c
	int32_t LumberingAddPoints; // 0x10470
	int32_t LumberingRandom; // 0x10474
	int32_t LumberingAdd; // 0x10478
	double LumberingExp; // 0x10480
	double LumberingLevelUpExp; // 0x10488
	int32_t LumberingMastery; // 0x10490
	int32_t LumberingLimitLevelIndex; // 0x10494
	int32_t LumberingLimitLevel; // 0x10498
	float Hunting; // 0x1049c
	float HuntingCalculation; // 0x104a0
	float HuntingConfig; // 0x104a4
	int32_t HuntingAddPoints; // 0x104a8
	int32_t HuntingRandom; // 0x104ac
	int32_t HuntingAdd; // 0x104b0
	double HuntingExp; // 0x104b8
	double HuntingLevelUpExp; // 0x104c0
	int32_t HuntingMastery; // 0x104c8
	int32_t HuntingLimitLevelIndex; // 0x104cc
	int32_t HuntingLimitLevel; // 0x104d0
	float Planting; // 0x104d4
	float PlantingCalculation; // 0x104d8
	float PlantingConfig; // 0x104dc
	int32_t PlantingAddPoints; // 0x104e0
	int32_t PlantingRandom; // 0x104e4
	int32_t PlantingAdd; // 0x104e8
	double PlantingExp; // 0x104f0
	double PlantingLevelUpExp; // 0x104f8
	int32_t PlantingMastery; // 0x10500
	int32_t PlantingLimitLevelIndex; // 0x10504
	int32_t PlantingLimitLevel; // 0x10508
	float HandMaking; // 0x1050c
	float HandMakingCalculation; // 0x10510
	float HandMakingConfig; // 0x10514
	int32_t HandMakingAddPoints; // 0x10518
	int32_t HandMakingRandom; // 0x1051c
	int32_t HandMakingAdd; // 0x10520
	double HandMakingExp; // 0x10528
	double HandMakingLevelUpExp; // 0x10530
	int32_t HandMakingMastery; // 0x10538
	int32_t HandMakingLimitLevelIndex; // 0x1053c
	int32_t HandMakingLimitLevel; // 0x10540
	float SiegeWorking; // 0x10544
	float SiegeWorkingCalculation; // 0x10548
	float SiegeWorkingConfig; // 0x1054c
	int32_t SiegeWorkingAddPoints; // 0x10550
	int32_t SiegeWorkingRandom; // 0x10554
	int32_t SiegeWorkingAdd; // 0x10558
	double SiegeWorkingExp; // 0x10560
	double SiegeWorkingLevelUpExp; // 0x10568
	int32_t SiegeWorkingMastery; // 0x10570
	int32_t SiegeWorkingLimitLevelIndex; // 0x10574
	int32_t SiegeWorkingLimitLevel; // 0x10578
	float Building; // 0x1057c
	float BuildingCalculation; // 0x10580
	float BuildingConfig; // 0x10584
	int32_t BuildingAddPoints; // 0x10588
	int32_t BuildingRandom; // 0x1058c
	int32_t BuildingAdd; // 0x10590
	double BuildingExp; // 0x10598
	double BuildingLevelUpExp; // 0x105a0
	int32_t BuildingMastery; // 0x105a8
	int32_t BuildingLimitLevelIndex; // 0x105ac
	int32_t BuildingLimitLevel; // 0x105b0
	float Armorer; // 0x105b4
	float ArmorerCalculation; // 0x105b8
	float ArmorerConfig; // 0x105bc
	int32_t ArmorerAddPoints; // 0x105c0
	int32_t ArmorerRandom; // 0x105c4
	int32_t ArmorerAdd; // 0x105c8
	double ArmorerExp; // 0x105d0
	double ArmorerLevelUpExp; // 0x105d8
	int32_t ArmorerMastery; // 0x105e0
	int32_t ArmorerLimitLevelIndex; // 0x105e4
	int32_t ArmorerLimitLevel; // 0x105e8
	UCurveTable* ForgeWeaponQualityDataTable; // 0x105f0
	UCurveTable* ForgeArmorQualityDataTable; // 0x105f8
	float Herb; // 0x10600
	float HerbCalculation; // 0x10604
	float HerbConfig; // 0x10608
	int32_t HerbAddPoints; // 0x1060c
	int32_t HerbRandom; // 0x10610
	int32_t HerbAdd; // 0x10614
	double HerbExp; // 0x10618
	double HerbLevelUpExp; // 0x10620
	int32_t HerbMastery; // 0x10628
	int32_t HerbLimitLevelIndex; // 0x1062c
	int32_t HerbLimitLevel; // 0x10630
	float LeaderShip; // 0x10634
	float LeaderShipCalculation; // 0x10638
	float LeaderShipConfig; // 0x1063c
	int32_t LeaderShipAddPoints; // 0x10640
	int32_t LeaderShipRandom; // 0x10644
	int32_t LeaderShipAdd; // 0x10648
	double LeaderShipExp; // 0x10650
	double LeaderShipLevelUpExp; // 0x10658
	int32_t LeaderShipMastery; // 0x10660
	int32_t LeaderShipLimitLevelIndex; // 0x10664
	int32_t LeaderShipLimitLevel; // 0x10668
	float Training; // 0x1066c
	float TrainingCalculation; // 0x10670
	float TrainingConfig; // 0x10674
	int32_t TrainingAddPoints; // 0x10678
	int32_t TrainingRandom; // 0x1067c
	int32_t TrainingAdd; // 0x10680
	double TrainingExp; // 0x10688
	double TrainingLevelUpExp; // 0x10690
	int32_t TrainingMastery; // 0x10698
	int32_t TrainingLimitLevelIndex; // 0x1069c
	int32_t TrainingLimitLevel; // 0x106a0
	float Recruit; // 0x106a4
	float RecruitCalculation; // 0x106a8
	float RecruitConfig; // 0x106ac
	int32_t RecruitAddPoints; // 0x106b0
	int32_t RecruitRandom; // 0x106b4
	int32_t RecruitAdd; // 0x106b8
	double RecruitExp; // 0x106c0
	double RecruitLevelUpExp; // 0x106c8
	int32_t RecruitMastery; // 0x106d0
	int32_t RecruitLimitLevelIndex; // 0x106d4
	int32_t RecruitLimitLevel; // 0x106d8
	float Taming; // 0x106dc
	float TamingCalculation; // 0x106e0
	float TamingConfig; // 0x106e4
	int32_t TamingAddPoints; // 0x106e8
	int32_t TamingRandom; // 0x106ec
	int32_t TamingAdd; // 0x106f0
	double TamingExp; // 0x106f8
	double TamingLevelUpExp; // 0x10700
	int32_t TamingMastery; // 0x10708
	int32_t TamingLimitLevelIndex; // 0x1070c
	int32_t TamingLimitLevel; // 0x10710
	float TamingAddExpLimitPerHour; // 0x10714
	FDateTime LastTamingAddExpLimitTime; // 0x10718
	double TamingLimitExp; // 0x10720
	float Renown; // 0x10728
	float RenownCalculation; // 0x1072c
	float RenownConfig; // 0x10730
	int32_t RenownAddPoints; // 0x10734
	int32_t RenownRandom; // 0x10738
	int32_t RenownAdd; // 0x1073c
	double RenownExp; // 0x10740
	double RenownLevelUpExp; // 0x10748
	int32_t RenownMastery; // 0x10750
	int32_t RenownLimitLevelIndex; // 0x10754
	int32_t RenownLimitLevel; // 0x10758
	float PolearmsOnHorseDamageMulAdd; // 0x1075c
	float OneHandAxeToShieldMulAdd; // 0x10760
	float TowHandAxeToShieldMulAdd; // 0x10764
	float PolearmsAxeToShieldMulAdd; // 0x10768
	float ThrowingAxeToShieldMulAdd; // 0x1076c
	float BowAxeToShieldMulAdd; // 0x10770
	float CrossBowAxeToShieldMulAdd; // 0x10774
	float OneHandHammerToArmorMulAdd; // 0x10778
	float TowHandHammerToArmorMulAdd; // 0x1077c
	float PolearmHammerToArmorMulAdd; // 0x10780
	float ThrowingHammerToArmorMulAdd; // 0x10784
	float BowHammerToArmorMulAdd; // 0x10788
	float CrossBowHammerToArmorMulAdd; // 0x1078c
	float OneHandSwordToHPMulAdd; // 0x10790
	float TowHandSwordToHPMulAdd; // 0x10794
	float PolearmSwordToHPMulAdd; // 0x10798
	float ThrowingSwordToHPMulAdd; // 0x1079c
	float BowSwordToHPMulAdd; // 0x107a0
	float CrossBowSwordToHPMulAdd; // 0x107a4
	float SiegeTurretToStructureMulAdd; // 0x107a8
	float SiegeBallistaToStructureMulAdd; // 0x107ac
	float SiegeFireThrowerToStructureMulAdd; // 0x107b0
	float SiegeRamToStructureMulAdd; // 0x107b4
	float OneHandHammerToWeaponMulAdd; // 0x107b8
	float TowHandHammerToWeaponMulAdd; // 0x107bc
	float PolearmHammerToWeaponMulAdd; // 0x107c0
	float ThrowingHammerToWeaponMulAdd; // 0x107c4
	float BowHammerToWeaponMulAdd; // 0x107c8
	float CrossBowHammerToWeaponMulAdd; // 0x107cc
	float MineResLv1MulAdd; // 0x107d0
	float MineResLv2MulAdd; // 0x107d4
	float MineResLv3MulAdd; // 0x107d8
	float MineResLv4MulAdd; // 0x107dc
	float LumberResLv1MulAdd; // 0x107e0
	float LumberResLv2MulAdd; // 0x107e4
	float LumberResLv3MulAdd; // 0x107e8
	float LumberResLv4MulAdd; // 0x107ec
	float HuntResLv1MulAdd; // 0x107f0
	float HuntResLv2MulAdd; // 0x107f4
	float HuntResLv3MulAdd; // 0x107f8
	float HuntResLv4MulAdd; // 0x107fc
	float PlantResLv1MulAdd; // 0x10800
	float PlantResLv2MulAdd; // 0x10804
	float PlantResLv3MulAdd; // 0x10808
	float PlantResLv4MulAdd; // 0x1080c
	float PlantSeedLv1MulAdd; // 0x10810
	float PlantSeedLv2MulAdd; // 0x10814
	float PlantSeedLv3MulAdd; // 0x10818
	float PlantSeedLv4MulAdd; // 0x1081c
	float CultivatedLandMulAdd; // 0x10820
	float FertilizerMulAdd; // 0x10824
	float WateringMulAdd; // 0x10828
	float PlantResLv1Luck; // 0x1082c
	float PlantResLv1LuckProduceMulAdd; // 0x10830
	float PlantResLv2Luck; // 0x10834
	float PlantResLv2LuckProduceMulAdd; // 0x10838
	float PlantResLv3Luck; // 0x1083c
	float PlantResLv3LuckProduceMulAdd; // 0x10840
	float PlantResLv4Luck; // 0x10844
	float PlantResLv4LuckProduceMulAdd; // 0x10848
	float PlantSeedLv1Luck; // 0x1084c
	float PlantSeedLv1LuckProduceMulAdd; // 0x10850
	float PlantSeedLv2Luck; // 0x10854
	float PlantSeedLv2LuckProduceMulAdd; // 0x10858
	float PlantSeedLv3Luck; // 0x1085c
	float PlantSeedLv3LuckProduceMulAdd; // 0x10860
	float PlantSeedLv4Luck; // 0x10864
	float PlantSeedLv4LuckProduceMulAdd; // 0x10868
	float HerbResLv1MulAdd; // 0x1086c
	float HerbResLv2MulAdd; // 0x10870
	float HerbResLv3MulAdd; // 0x10874
	float HerbResLv4MulAdd; // 0x10878
	float GeneralExploitDamageMulAdd; // 0x1087c
	float TowHandWeaponBreakDefenseRatioAdd; // 0x10880
	float AnimalDamageReduceMulAdd; // 0x10884
	float AnimalWarnRangeMulAdd; // 0x10888
	float HandMakingTimeMulAdd; // 0x1088c
	float SiegeWorkMaxHPMulAdd; // 0x10890
	float SiegeWorkReloadTimeMulAdd; // 0x10894
	float SiegeWorkDrawTimeMulAdd; // 0x10898
	float BallistaBulletSpeedMulAdd; // 0x1089c
	float BallistaLineDisMulAdd; // 0x108a0
	float BallistaEnable; // 0x108a4
	float SiegeProjectileFollowEnable; // 0x108a8
	float FlamethrowerAmmoMulAdd; // 0x108ac
	float SiegeWorkSpeedMulAdd; // 0x108b0
	float SiegeWorkRotateSpeedMulAdd; // 0x108b4
	float ClimbLadderSpeedMulAdd; // 0x108b8
	float BuildingResMulAdd; // 0x108bc
	float BuildingHPRecoverMulAdd; // 0x108c0
	float BuildingFixTimeMulAdd; // 0x108c4
	int32_t WeaponEffect; // 0x108c8
	TArray<UParticleSystem*> WeaponEffects; // 0x108d0
	float WoundTypeValue1; // 0x108e0
	float WoundTypeValue2; // 0x108e4
	float WoundTypeValue3; // 0x108e8
	float WoundTypeValue4; // 0x108ec
	float Wound1AddOtherMulAdd; // 0x108f0
	float Wound2AddOtherMulAdd; // 0x108f4
	float Wound3AddOtherMulAdd; // 0x108f8
	float Wound4AddOtherMulAdd; // 0x108fc
	float Wound1ResistMulAdd; // 0x10900
	float Wound2ResistMulAdd; // 0x10904
	float Wound3ResistMulAdd; // 0x10908
	float Wound4ResistMulAdd; // 0x1090c
	float DeadlyValue; // 0x10910
	USGBuff* DeadlyBuff; // 0x10918
	float WoundAutoRecoverValue; // 0x10920
	float TamingExpMulAdd; // 0x1093c
	float TamingHealRecMulAdd; // 0x10940
	float TamingHungerRecMulAdd; // 0x10944
	float TamedAnimalExpMulAdd; // 0x10948
	float MaxGeneralsAdd; // 0x1094c
	float MaxGeneralsHPMulAdd; // 0x10950
	float MaxGeneralsSpeedMulAdd; // 0x10954
	float MaxGeneralsSPMulAdd; // 0x10958
	float GeneralsStunMulAdd; // 0x1095c
	int32_t MaxWarGeneralNumberAdd; // 0x10960
	float MinRecruitAddLevel; // 0x10964
	float MaxRecruitAddLevel; // 0x10968
	float RecruitAddLife; // 0x1096c
	int32_t CurrentRecruitMaxLevel; // 0x10970
	float LoyaltyAddMultiAdd; // 0x10974
	float GeneralRebornTimeMultiAdd; // 0x10978
	float GeneralHungerReduceMultiAdd; // 0x1097c
	float GeneralSTSkillMultiAdd; // 0x10980
	float GeneralAGSkillMultiAdd; // 0x10984
	float GeneralWISkillMultiAdd; // 0x10988
	float GeneralENSkillMultiAdd; // 0x1098c
	float GeneralCHSkillMultiAdd; // 0x10990
	float GeneralSkillAddOneHandedWeaponsMultiAdd; // 0x10994
	float GeneralSkillAddShieldsMultiAdd; // 0x10998
	float GeneralSkillAddTowHandedWeaponsMultiAdd; // 0x1099c
	float GeneralSkillAddPolearmsMultiAdd; // 0x109a0
	float GeneralSkillAddHeavyArmorsMultiAdd; // 0x109a4
	float GeneralSkillAddThrowingMultiAdd; // 0x109a8
	float GeneralSkillAddArcheryMultiAdd; // 0x109ac
	float GeneralSkillAddCrossbowsMultiAdd; // 0x109b0
	float GeneralSkillAddRidingMultiAdd; // 0x109b4
	float GeneralSkillAddLightArmorsMultiAdd; // 0x109b8
	float GeneralSkillAddPhysiqueMultiAdd; // 0x109bc
	float GeneralSkillAddMiningMultiAdd; // 0x109c0
	float GeneralSkillAddLumberingMultiAdd; // 0x109c4
	float GeneralSkillAddHuntingMultiAdd; // 0x109c8
	float GeneralSkillAddPlantingMultiAdd; // 0x109cc
	float GeneralSkillAddHandMakingMultiAdd; // 0x109d0
	float GeneralSkillAddSiegeWorkingMultiAdd; // 0x109d4
	float GeneralSkillAddBuildingMultiAdd; // 0x109d8
	float GeneralSkillAddArmorerMultiAdd; // 0x109dc
	float GeneralSkillAddHerbMultiAdd; // 0x109e0
	float GeneralSkillAddTamingMultiAdd; // 0x109e4
	float GeneralSkillAddLeaderShipMultiAdd; // 0x109e8
	float GeneralSkillAddRecruitMultiAdd; // 0x109ec
	float GeneralSkillAddTrainingMultiAdd; // 0x109f0
	float GeneralSkillAddRenownMultiAdd; // 0x109f4
	int32_t ExtraSkillPointsAdd; // 0x109f8
	int32_t ExtraPerkPointsAdd; // 0x109fc
	float ThrowingRangeMulAdd; // 0x10a00
	float BowRangeMulAdd; // 0x10a04
	float CorssBowRangeMulAdd; // 0x10a08
	int32_t CorssBowPiercenessAdd; // 0x10a0c
	float CorssBowPiercenessRatio; // 0x10a10
	float BeInFullSwingValue; // 0x10a14
	float BeInFullSwingValueAdd; // 0x10a18
	float BeInFullSwingMaxValue; // 0x10a1c
	float BeInFullSwingTime; // 0x10a20
	FTimerHandle BeInFullSwingTimerHandle; // 0x10a28
	USGBuff* BeInFullSwingBuffTemplate; // 0x10a30
	float SkilledMiner; // 0x10a38
	float PracticeMiner; // 0x10a3c
	float BeInFullSwingMiner; // 0x10a40
	float ExplorationCopper; // 0x10a44
	float ExplorationIron; // 0x10a48
	float ExplorationXuanhuaIron; // 0x10a4c
	float ExplorationMeteorite; // 0x10a50
	float ExplorationClay; // 0x10a54
	float ExplorationSalt; // 0x10a58
	float ExplorationKaolinite; // 0x10a5c
	float ExplorationCoal; // 0x10a60
	float ExplorationNitramite; // 0x10a64
	float ExplorationSulfur; // 0x10a68
	float ExplorationRealgar; // 0x10a6c
	float ExplorationJade; // 0x10a70
	float AddBarkProduction; // 0x10a74
	float SkilledLumber; // 0x10a78
	float PracticeLumber; // 0x10a7c
	float BeInFullSwingLumber; // 0x10a80
	float SharpEyesLevel2Tree; // 0x10a84
	float SharpEyesLevel3Tree; // 0x10a88
	float SharpEyesLevel4Tree; // 0x10a8c
	float BoneProduction; // 0x10a90
	float SkilledHunter; // 0x10a94
	float SensitiveSmell; // 0x10a98
	float PracticeHunter; // 0x10a9c
	float WalkOnTiptoe; // 0x10aa0
	float SkillfulSwimmer; // 0x10aa4
	float OneHandedWeaponsAttackBlockDurableMultiAdd; // 0x10aa8
	float ShieldsAttackBlockDurableMultiAdd; // 0x10aac
	float TowHandedWeaponsAttackBlockDurableMultiAdd; // 0x10ab0
	float PolearmsAttackBlockDurableMultiAdd; // 0x10ab4
	float ArcheryAttackDurableMultiAdd; // 0x10ab8
	float CrossbowsAttackDurableMultiAdd; // 0x10abc
	float SiegeAttackDurableMultiAdd; // 0x10ac0
	TArray<int32_t> Perks; // 0x10ac8
	int32_t CurrentMasteryPoints; // 0x10ad8
	int32_t MasteryPointsAdd; // 0x10adc
	int32_t CurrentCraftPoints; // 0x10ae0
	int32_t CurrentPerkPoints; // 0x10ae4
	TArray<int32_t> CraftPerkGroups; // 0x10ae8
	TArray<USGCraftPerkGroup*> DefaultCraftPerkGroup; // 0x10af8
	float BowAimTimeMulAdd; // 0x10b08
	float BowReloadTimeMulAdd; // 0x10b0c
	float BowHoldTimeAdd; // 0x10b10
	float BowMovingAngleMulAdd; // 0x10b14
	float BowRotationScatteringAngleMulAdd; // 0x10b18
	float RiderBowMovingAngleMulAdd; // 0x10b1c
	float BowAngleMulAdd; // 0x10b20
	float BowArrowSpeedAdd; // 0x10b24
	float CrossBowAimTimeMulAdd; // 0x10b28
	float CrossBowReloadTimeMulAdd; // 0x10b2c
	float CrossBowHoldTimeAdd; // 0x10b30
	float CrossBowMovingAngleMulAdd; // 0x10b34
	float RiderCrossBowMovingAngleMulAdd; // 0x10b38
	float CrossBowAngleMulAdd; // 0x10b3c
	float CrossBowArrowSpeedAdd; // 0x10b40
	float ThrowingReloadTimeMulAdd; // 0x10b44
	float ThrowingAngleMulAdd; // 0x10b48
	float ThrowingArrowSpeedAdd; // 0x10b4c
	float OnehandCostSPMulAdd; // 0x10b50
	float TowhandCostSPMulAdd; // 0x10b54
	float PolearmsCostSPMulAdd; // 0x10b58
	float ThrowingCostSPMulAdd; // 0x10b5c
	float ArcheryCostSPMulAdd; // 0x10b60
	float CrossbowsCostSPMulAdd; // 0x10b64
	float OnehandMaxComboAdd; // 0x10b68
	float TowhandMaxComboAdd; // 0x10b6c
	float PolearmsMaxComboAdd; // 0x10b70
	float RidingRotationMulAdd; // 0x10b74
	float RidingRotationMulInterpSpeedAdd; // 0x10b78
	float OneHandHeadShootDmgMulAdd; // 0x10b7c
	float TowHandHeadShootDmgMulAdd; // 0x10b80
	float PolearmHeadShootDmgMulAdd; // 0x10b84
	float BowHeadShootDmgMulAdd; // 0x10b88
	float CorssBowHeadShootDmgMulAdd; // 0x10b8c
	float ThrowingHeadShootDmgMulAdd; // 0x10b90
	float SiegeHeadShootDmgMulAdd; // 0x10b94
	float JueWeiAchievementShieldDurableMulAdd; // 0x10b98
	float RidingAccelerationMulAdd; // 0x10b9c
	float RidingCostSPMulAdd; // 0x10ba0
	float ForgeWeaponAbility; // 0x10ba4
	float ForgeArmorAbility; // 0x10ba8
	float ReduceEquipmentWeightMultiAdd; // 0x10bac
	float CanRepaireStructureEquipment; // 0x10bb0
	float BackShieldBlockedDamageMultiAdd; // 0x10bb4
	float PushShieldBlockedArrowScaleMultiAdd; // 0x10bb8
	float UseSiegeDamageMulAdd; // 0x10bbc
	float AchievementHonorMulAdd; // 0x10bc0
	float BattleHonorMulAdd; // 0x10bc4
	float BannerWeiWangMulAdd; // 0x10bc8
	float HonorDamageMulAdd; // 0x10bcc
	bool bHQMesh; // 0x10bd0
	bool bRandomAppearanceInEditor; // 0x10bd1
	UCharacterRandomAppearanceWeight* RandomAppearanceWeight; // 0x10bd8
	TArray<FName> AppearanceTemplates; // 0x10be0
	FAppearanceData AppearanceData; // 0x10bf0
	USGItem* Helmet; // 0x10d68
	USGItem* Chest; // 0x10d70
	USGItem* Cuish; // 0x10d78
	USGItem* Back; // 0x10d80
	char bAppearanceState : 1; // 0x10d88
	USGItem* HelmetAppearance; // 0x10d90
	USGItem* ChestAppearance; // 0x10d98
	USGItem* UnderwaistAppearance; // 0x10da0
	USGItem* FashionKitHelmet; // 0x10da8
	USGItem* FashionKitChest; // 0x10db0
	USGItem* FashionKitCuish; // 0x10db8
	FString FlagImageString; // 0x10dc0
	FCharacterMeshLODDynamicMaterialData DynamicGameMeshMats[0x3]; // 0x10e08
	FCharacterMeshLODDynamicMaterialData DynamicHQMeshMats[0x3]; // 0x10e50
	UMaterialInstanceDynamic* DynamicHairMaterial; // 0x10e98
	UMaterialInstanceDynamic* DynamicMoustacheMaterial; // 0x10ea0
	TWeakObjectPtr<ASGPlayerController> ViewBasePropertyController; // 0x10eb8
	FString PlayerAccountId; // 0x10ec0
	uint32_t CharacterDataVersion; // 0x10ed0
	int32_t TaiShouTitleIndex; // 0x10ed8
	float FoodBuffModifyDataMulAdd; // 0x10edc
	float WineBuffModifyDataMulAdd; // 0x10ee0
	float MedicineBuffModifyDataMulAdd; // 0x10ee4
	TArray<FArtofWar> ArtofWar; // 0x10ee8
	int32_t bCanClimbWall; // 0x10ef8
	int32_t bCanLightArmorClimbWall; // 0x10efc
	int32_t bCanHeavyArmorClimbWall; // 0x10f00
	float ClimbWallHeight; // 0x10f04
	float LightArmorClimbWallHeight; // 0x10f08
	float HeavyArmorClimbWallHeight; // 0x10f0c
	int32_t MaxPersonalStructureAdd; // 0x10f10
	char bDeadChangeDurable : 1; // 0x10f14
	float WildNPCDeadDurableMulMin; // 0x10f18
	float WildNPCDeadDurableMulMax; // 0x10f1c
	TWeakObjectPtr<ASG_AnimalsCharacter> BindedHorse; // 0x10f20
	TWeakObjectPtr<ASG_AnimalsCharacter> BeFollowHorse; // 0x10f28
	char bCanClimbInEditor : 1; // 0x10f38
	UAnimMontage* AnimSkillMontage; // 0x10f50
	FVaultingParams VaultingParams; // 0x10f60
	UAnimSkill_VaultingData* AnimSkillVaultingData; // 0x110b0
	TArray<float> WoundValues; // 0x110b8
	TArray<int32_t> StructureGivePerks; // 0x110c8
	char LadderParamsIndex; // 0x110d8
	float ChargeResDefenseEffective; // 0x110dc
	float MaxCharge; // 0x110e0
	float MinCharge; // 0x110e4
	float MaxChargeTumbleRate; // 0x110e8
	float MinChargeTumbleRate; // 0x110ec
	UMaterialInstanceDynamic* DMI_FlagImage; // 0x110f0
	UTextureRenderTarget2D* RT_FlagImage; // 0x110f8
};

struct UInputKeySelector : UWidget {
	FButtonStyle WidgetStyle; // 0x108
	FTextBlockStyle TextStyle; // 0x380
	FInputChord SelectedKey; // 0x5f0
	FSlateFontInfo Font; // 0x610
	FMargin Margin; // 0x668
	FLinearColor ColorAndOpacity; // 0x678
	FText KeySelectionText; // 0x688
	FText NoKeySpecifiedText; // 0x6a0
	bool bAllowModifierKeys; // 0x6b8
	bool bAllowGamepadKeys; // 0x6b9
	TArray<FKey> EscapeKeys; // 0x6c0
	FMulticastInlineDelegate OnKeySelected; // 0x6d0
	FMulticastInlineDelegate OnIsSelectingKeyChanged; // 0x6e0
};

struct UParticleModuleLocationEmitterDirect : UParticleModuleLocationBase {
	FName EmitterName; // 0x30
};

struct URewardCondition_Float : URewardCondition {
	EValueConditionType ConditionType; // 0x50
	float Value; // 0x54
};

struct UMaterialExpressionLandscapeLayerSwitch : UMaterialExpression {
	FExpressionInput LayerUsed; // 0x40
	FExpressionInput LayerNotUsed; // 0x54
	FName ParameterName; // 0x68
	char PreviewUsed : 1; // 0x70
	FGuid ExpressionGUID; // 0x74
};

struct UHierarchicalLODSetup : UObject {
	TArray<FHierarchicalSimplification> HierarchicalLODSetup; // 0x28
	TSoftObjectPtr<UMaterialInterface> OverrideBaseMaterial; // 0x38
};

struct UMeshComponent : UPrimitiveComponent {
	TArray<UMaterialInterface*> OverrideMaterials; // 0x488
	char bEnableMaterialParameterCaching : 1; // 0x4a8
};

struct UNiagaraPreviewAxis_InterpParamVector4 : UNiagaraPreviewAxis_InterpParamBase {
	FVector4 Min; // 0x40
	FVector4 Max; // 0x50
};

struct UColorSelector : UUserWidget {
	float Hue; // 0x260
	FVector2D ColorStaturation; // 0x264
	FVector2D ColorValue; // 0x26c
	USizeBox* SBMain; // 0x278
	UImage* ImgColorBg; // 0x280
	UImage* ImgCursor; // 0x288
	UCanvasPanelSlot* ImgCursorSlot; // 0x2a0
	char bStartColorSelector : 1; // 0x2a8
};

struct UEditableGameplayTagQueryExpression_AllTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UParticleModuleAccelerationConstant : UParticleModuleAccelerationBase {
	FVector Acceleration; // 0x38
};

struct UParticleModuleOrbitBase : UParticleModule {
	char bUseEmitterTime : 1; // 0x30
};

struct UMovieSceneBindingOverrides : UObject {
	TArray<FMovieSceneBindingOverrideData> BindingData; // 0x28
};

struct UIterativeSmoothProperties : UInteractiveToolPropertySet {
	float SmoothingPerStep; // 0x60
	int32_t Steps; // 0x64
	bool bSmoothBoundary; // 0x68
};

struct UMaterialExpressionTextureBase : UMaterialExpression {
	UTexture* Texture; // 0x40
};

struct UHapticFeedbackEffect_SoundWave : UHapticFeedbackEffect_Base {
	USoundWave* SoundWave; // 0x28
};

struct UInterpTrackInstSound : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
	UAudioComponent* PlayAudioComp; // 0x30
};

struct UAISense_Touch : UAISense {
	TArray<FAITouchEvent> RegisteredEvents; // 0x80
};

struct UDrawPolygonToolSnapProperties : UInteractiveToolPropertySet {
	bool bEnableSnapping; // 0x60
	bool bSnapToWorldGrid; // 0x61
	bool bSnapToVertices; // 0x62
	bool bSnapToEdges; // 0x63
	bool bSnapToAngles; // 0x64
	bool bSnapToLengths; // 0x65
	float SegmentLength; // 0x68
	bool bHitSceneObjects; // 0x6c
	float HitNormalOffset; // 0x70
};

struct ASGStructureFunctionTable : ASGStructureSeat {
	char bCanNPCUse : 1; // 0xf78
	char bOnlySeatCharacterCanOpenInventory : 1; // 0xf78
};

struct UShutDownService : UObject {
	USGCheatManager* CheatManager; // 0x60
};

struct UNiagaraDataInterfaceGrid2DCollectionReader : UNiagaraDataInterfaceGrid2D {
	FString EmitterName; // 0xf8
	FString DIName; // 0x108
};

struct UCloudStorageBase : UPlatformInterfaceBase {
	TArray<FString> LocalCloudFiles; // 0x38
	char bSuppressDelegateCalls : 1; // 0x48
};

struct USequenceCameraShakeCameraStandIn : UObject {
	float FieldOfView; // 0x30
};

struct UOccupyFlagItem : UUserWidget {
	UMaterialInstance* OccupyFlagMaterial; // 0x260
	FLinearColor SameTeamProgressColor; // 0x268
	FLinearColor OtherTeamProgressColor; // 0x278
	UImage* ImgFlag; // 0x290
	UImage* ImgOccupyFlag; // 0x298
	UTextBlock* TbProgress; // 0x2a0
	UTextBlock* TbPercent; // 0x2a8
};

struct UWBP_KeySettingRadioView_C : UUI_RadioButtonView {
	UWBP_KeySettingRadioButton_C* Attack; // 0x2f0
	UWBP_KeySettingRadioButton_C* Camera; // 0x2f8
	UWBP_KeySettingRadioButton_C* General; // 0x300
	UWBP_KeySettingRadioButton_C* GroundedMovement; // 0x308
	UWBP_KeySettingRadioButton_C* OtherMovement; // 0x310
	UWBP_KeySettingRadioButton_C* ShortCut; // 0x318
	UWBP_KeySettingRadioButton_C* UI; // 0x320
	UWBP_KeySettingRadioButton_C* Verhicle; // 0x328
	UWBP_KeySettingRadioButton_C* Voice; // 0x330
};

struct USGInventoryComponent : UActorComponent {
	char bInitDefaultItemDeletePrevious : 1; // 0xc8
	char bInital : 1; // 0xc8
	TArray<USGItem*> InventoryItems; // 0xd0
	int32_t InventoryItemMaxAmount; // 0xe0
	char bNeedCheckNewInventoryItemMaxAmount : 1; // 0xe4
	int32_t NewInventoryItemMaxAmount; // 0xe8
	TArray<USGItem*> EquipItems; // 0xf0
	int32_t EquipItemMaxAmount; // 0x100
	TArray<USGItem*> ShortCutItems; // 0x108
	char bIsCraftStructure : 1; // 0x118
	int32_t ShortCutItemMaxAmount; // 0x11c
	int32_t ShortCutShowOnePageAmount; // 0x120
	TArray<USGItem*> CraftItems; // 0x128
	TArray<USGItem*> AutoCraftItems; // 0x138
	USGItem* FunctionItem; // 0x148
	USGItem* FaceliftItem; // 0x150
	USGItem* FuelItem; // 0x158
	TArray<USGItem*> FoodItems; // 0x160
	int32_t FoodItemMaxAmount; // 0x170
	TArray<USGItem*> BattleStoreItems; // 0x178
	int32_t BattleStoreItemMaxAmount; // 0x188
	TArray<USGItem*> CrossServerStoreItems; // 0x190
	int32_t CrossServerStoreItemMaxAmount; // 0x1a0
	FGuid TransportMachineGuid; // 0x1a4
	TMap<USGItem*, int32_t> DefaultInventoryItems; // 0x1b8
	TMap<USGItem*, int32_t> CheatInventoryItems; // 0x208
	TMap<USGItem*, EItemQuality> CheatInventoryItemQuality; // 0x258
	TArray<USGItem*> DefaultEquippedItems; // 0x2a8
	TMap<USGItem*, int32_t> DefaultShortCutItems; // 0x2b8
	TArray<USGItem*> DefaultCraftItems; // 0x308
	int32_t MaxAddGroup; // 0x318
	char bIsDead : 1; // 0x31c
	float UseConsumeItemCD[0x1a]; // 0x328
	FMulticastInlineDelegate OnInventoryAddItem; // 0x390
	FMulticastInlineDelegate OnInventoryRemoveItem; // 0x3a0
	FMulticastInlineDelegate OnInventoryUpdateItem; // 0x3b0
	FMulticastInlineDelegate OnInventoryUpdateItemMaxAmount; // 0x3c0
	FMulticastInlineDelegate OnInventoryUpdateItemMaxBattleAmount; // 0x3d0
	FMulticastInlineDelegate OnInventoryAddEquip; // 0x3e0
	FMulticastInlineDelegate OnInventoryRemoveEquip; // 0x3f0
	FMulticastInlineDelegate OnInventoryUpdateEquip; // 0x400
	FMulticastInlineDelegate OnInventoryAddSlot; // 0x410
	FMulticastInlineDelegate OnInventoryRemoveSlot; // 0x420
	FMulticastInlineDelegate OnInventoryUpdateSlot; // 0x430
	FMulticastInlineDelegate OnInventoryAddPerk; // 0x440
	FMulticastInlineDelegate OnInventoryUpdateFunction; // 0x450
	FMulticastInlineDelegate OnInventoryUpdateFacelift; // 0x460
	FMulticastInlineDelegate OnInventoryUpdateFuel; // 0x470
	FMulticastInlineDelegate OnInventoryAddFood; // 0x480
	FMulticastInlineDelegate OnInventoryRemoveFood; // 0x490
	FMulticastInlineDelegate OnInventoryUpdateFood; // 0x4a0
	FMulticastInlineDelegate OnStoreAddItem; // 0x4b0
	FMulticastInlineDelegate OnStoreRemoveItem; // 0x4c0
	FMulticastInlineDelegate OnStoreUpdateItem; // 0x4d0
	FMulticastInlineDelegate OnInventoryItemChanged; // 0x4e0
	FMulticastInlineDelegate OnInventoryCraftItemPriorityChanged; // 0x4f0
	FMulticastInlineDelegate OnInventoryView; // 0x500
	TArray<TWeakObjectPtr<ASGPlayerController>> RemoteViewingInventoryPlayerControllers; // 0x510
	int32_t MaxItemCraftQueueEntries; // 0x530
	char bAutoCraftingEnabled : 1; // 0x534
	TArray<FItemCraftQueueEntry> ItemCraftQueueEntries; // 0x538
	TArray<USGItem*> OnlyAddItemTemplates; // 0x548
	FTimerHandle CraftTimerHandle; // 0x558
	float CraftProcessInterval; // 0x560
	FTimerHandle ConsumeItemCDHandle; // 0x570
	float ConsumeItemCDInterval; // 0x578
	TArray<FItemAutoCraftQueueEntry> AutoCraftingQueueEntries; // 0x588
	TArray<FItemExpireTimeData> ItemExpireTimeData; // 0x598
	char bCanOpen : 1; // 0x5a8
	char bUseWeight : 1; // 0x5a8
	char bLimitOverWeightTake : 1; // 0x5a8
	float LimitOverWeightTake; // 0x5ac
	float CurWeight; // 0x5b4
	EInventoryFunctions InventoryFunction; // 0x5b8
	TArray<FItemFunctionEntry> ItemFunctionEntries; // 0x5c0
	int32_t DefaultMaxCanCraftAmount; // 0x5d0
	TWeakObjectPtr<ASGPlayerController> OwnerSGPlayerController; // 0x5d4
	char bCanSetPassword : 1; // 0x5dc
	double LastSendClientNotifyTime; // 0x5e0
	char bCanOpenInventorySpecial : 1; // 0x5e8
	char bDebug : 1; // 0x5e8
	float LastCalcExpireTime; // 0x5ec
	float SavedCalcExpireTime; // 0x5f0
	float TickCalcExpiringItemInterval; // 0x5f4
	TArray<int32_t> HighCraftItemIndex; // 0x600
	TArray<int32_t> MiddleCraftItemIndex; // 0x610
	TArray<int32_t> LowCraftItemIndex; // 0x620
};

struct UGarbageCollectionSettings : UDeveloperSettings {
	float TimeBetweenPurgingPendingKillObjects; // 0x38
	char FlushStreamingOnGC : 1; // 0x3c
	char AllowParallelGC : 1; // 0x3c
	char IncrementalBeginDestroyEnabled : 1; // 0x3c
	char MultithreadedDestructionEnabled : 1; // 0x3c
	char CreateGCClusters : 1; // 0x3c
	char AssetClusteringEnabled : 1; // 0x3c
	char ActorClusteringEnabled : 1; // 0x3c
	char BlueprintClusteringEnabled : 1; // 0x3c
	char UseDisregardForGCOnDedicatedServers : 1; // 0x3d
	int32_t MinGCClusterSize; // 0x40
	int32_t NumRetriesBeforeForcingGC; // 0x44
	int32_t MaxObjectsNotConsideredByGC; // 0x48
	int32_t SizeOfPermanentObjectPool; // 0x4c
	int32_t MaxObjectsInGame; // 0x50
	int32_t MaxObjectsInEditor; // 0x54
};

struct UNiagaraSimulationStageBase : UNiagaraMergeable {
	UNiagaraScript* Script; // 0x28
	FName SimulationStageName; // 0x30
	char bEnabled : 1; // 0x38
};

struct UGuildKPIItemImageSlot : USGUI {
	UImage* ItemIconImage; // 0x2d8
};

struct UMicroTransactionBase : UPlatformInterfaceBase {
	TArray<FPurchaseInfo> AvailableProducts; // 0x38
	FString LastError; // 0x48
	FString LastErrorSolution; // 0x58
};

struct UParticleModuleMeshRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionVector StartRotationRate; // 0x30
};

struct UNiagaraDataInterfaceVector4Curve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
	FRichCurve ZCurve; // 0x170
	FRichCurve WCurve; // 0x1f0
};

struct UEnvQueryTest_Pathfinding : UEnvQueryTest {
	EEnvTestPathfinding TestMode; // 0x1f8
	UEnvQueryContext* Context; // 0x200
	FAIDataProviderBoolValue PathFromContext; // 0x208
	FAIDataProviderBoolValue SkipUnreachable; // 0x240
	UNavigationQueryFilter* FilterClass; // 0x278
};

struct UN_RemoteFunctionPanel : UUserWidget {
	UN_RemoteFunctionSlot* RemoteFunctionSlotTemplate; // 0x260
	TArray<FText> ItemQualityText; // 0x268
	UTextBlock* NameText; // 0x278
	UTextBlock* LevelText; // 0x280
	UImage* ImgThumbnail; // 0x288
	UCanvasPanel* HPProgressCanvas; // 0x290
	UTextBlock* HPText; // 0x298
	UProgressBar* HPProgressBar; // 0x2a0
	UN_ItemFunctionSlot* FunctionSlot; // 0x2a8
	UN_ItemFaceliftSlot* FaceliftSlot; // 0x2b0
	UVerticalBox* FunctionVertical; // 0x2b8
	UGuildAuthorityComboBox* QualityComboBox; // 0x2c0
	UTextBlock* TbTips; // 0x2c8
	UCanvasPanel* FaceliftPanel; // 0x2d0
	UButton* BtnFacelift; // 0x2d8
	UTextBlock* TbFaceliftWarning; // 0x2e0
	EItemQuality SelectQualityType; // 0x2e8
	UN_RemoteFunctionSlot* FunctionSlotList; // 0x2f0
	TWeakObjectPtr<USGItem> BindItem; // 0x2f8
	TWeakObjectPtr<USGInventoryComponent> BindInventory; // 0x300
	TWeakObjectPtr<ASGStructureFunctionCraft> BindStructureFunctionCraft; // 0x308
	TWeakObjectPtr<ASGStructureFunctionFacelift> BindStructureFunctionFacelift; // 0x310
	TWeakObjectPtr<USGUI> RootUI; // 0x318
};

struct UWBP_PrivateSessionListEntry_C : UUI_PrivateSessionEntry {
	UImage* Image; // 0x2f0
	UImage* Image_1; // 0x2f8
	UImage* ImgClose; // 0x300
	UImage* ImgDetailBottom; // 0x308
	UImage* ImgDetailTop; // 0x310
	UImage* ImgMapListTitle; // 0x318
	UImage* ImgSessionBg; // 0x320
};

struct ABandwidthTestActor : AActor {
	FBandwidthTestGenerator BandwidthGenerator; // 0x310
};

struct UMaterialExpressionShadingPathSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x3]; // 0x54
};

struct UMaterialExpressionPerInstanceCustomData : UMaterialExpression {
	FExpressionInput DefaultValue; // 0x40
	float ConstDefaultValue; // 0x54
	uint32_t DataIndex; // 0x58
};

struct UARFaceComponent : UARComponent {
	EARFaceTransformMixing TransformSetting; // 0x288
	bool bUpdateVertexNormal; // 0x289
	bool bFaceOutOfScreen; // 0x28a
	FARFaceUpdatePayload ReplicatedPayload; // 0x290
};

struct USoundEffectSourcePresetChain : UObject {
	TArray<FSourceEffectChainEntry> Chain; // 0x28
	char bPlayEffectChainTails : 1; // 0x38
};

struct UInheritableComponentHandler : UObject {
	TArray<FComponentOverrideRecord> Records; // 0x28
	TArray<UActorComponent*> UnnecessaryComponents; // 0x38
};

struct AGameplayAbilityTargetActor_ActorPlacement : AGameplayAbilityTargetActor_GroundTrace {
	UObject* PlacedActorClass; // 0x460
	UMaterialInterface* PlacedActorMaterial; // 0x468
};

struct UMediaComponent : UActorComponent {
	UMediaTexture* MediaTexture; // 0xc0
	UMediaPlayer* MediaPlayer; // 0xc8
};

struct UParticleModuleOrbit : UParticleModuleOrbitBase {
	EOrbitChainMode ChainMode; // 0x38
	FRawDistributionVector OffsetAmount; // 0x40
	FOrbitOptions OffsetOptions; // 0x88
	FRawDistributionVector RotationAmount; // 0x90
	FOrbitOptions RotationOptions; // 0xd8
	FRawDistributionVector RotationRateAmount; // 0xe0
	FOrbitOptions RotationRateOptions; // 0x128
};

struct USCS_Node : UObject {
	UObject* ComponentClass; // 0x28
	UActorComponent* ComponentTemplate; // 0x30
	FBlueprintCookedComponentInstancingData CookedComponentInstancingData; // 0x38
	FName AttachToName; // 0x80
	FName ParentComponentOrVariableName; // 0x88
	FName ParentComponentOwnerClassName; // 0x90
	bool bIsParentComponentNative; // 0x98
	TArray<USCS_Node*> ChildNodes; // 0xa0
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0xb0
	FGuid VariableGuid; // 0xc0
	FName InternalVariableName; // 0xd0
};

struct UBTTask_DoFollow : UBTTask_AnimalBase {
	float OverrideBrakingDistance; // 0xd0
};

struct UBTTask_KeepFormation : UBTTask_SGBlueprintBase {
	FBlackboardKeySelector BBKey_DesiredLocation; // 0xc0
	FBlackboardKeySelector BBKey_VirtualStatus; // 0xe8
	char bGetCustomConfigFromCharacter : 1; // 0x110
	float FollowDistance; // 0x114
	float FollowDistanceTolerance; // 0x11c
	FVector2D FollowFinishWaitTimeInRange; // 0x128
	char bIgnoreAgainFollowDistance : 1; // 0x130
	char bUpdateKeepInPlaceLoc : 1; // 0x130
	char bUpdateDesiredLocationOnActor : 1; // 0x130
	char bUpdateDesiredLocationOnFormation : 1; // 0x130
	char bFinishedTask : 1; // 0x130
	char bEnableReachStatuType : 1; // 0x130
	EAIStatusType Enum_ReachStatuType; // 0x131
	char bReachToggleAIMoveOrder : 1; // 0x132
	float UpdateFormationMaxWaitTime; // 0x150
	FVector2D UpdateFormationMaxWaitTimeInRange; // 0x154
	char bUpdateFormationLocation : 1; // 0x2a8
	char bUseSmoothActorLocation : 1; // 0x2a8
	float FormationLocationCapsuleCheckMultiply; // 0x2ac
	float FormationLocationTolerance; // 0x2b0
	float FormationLocationSmoothTolerance; // 0x2b4
	float FormationLocationMaxTolerance; // 0x2b8
	float FormationLocationInterpSpeed; // 0x2bc
	float FormationCustomVelocityInterpSpeed; // 0x2c0
	FVector2D FormationLocationClampSize; // 0x2c4
	FVector2D RotationWaitTimeInRange; // 0x2d8
	FVector2D TurnInPlaceWaitTimeInRange; // 0x2ec
	FVector2D TurnInPlaceAddRotationInRange; // 0x2f4
	char bUpdateFormationRotation : 1; // 0x2fc
	char bUseSmoothActorRotation : 1; // 0x2fc
	float FollowDeltaAngle; // 0x300
	float FormationRotationTolerance; // 0x304
	float FormationRotationInterpSpeed; // 0x30c
	float ImpulseMaxWaitTime; // 0x318
	FVector2D ImpulseMaxWaitTimeInRange; // 0x31c
	FVector2D CollisionMaxWaitTimeInRange; // 0x32c
	float SetActorLocationTolerance; // 0x334
	char bCheckWaitChangeGuard : 1; // 0x338
};

struct ASGBoxProjectile : ASGProjectile {
	UBoxComponent* BoxProjectileCollisionComponent; // 0x6e8
};

struct ASGStructureOccupyFlag : ASGStructure {
	UStaticMeshComponent* OccupySphereComponent; // 0xb98
	USkeletalMeshComponent* FlagSkeletalMeshComponent; // 0xba0
	FSlateBrush SameOrAttackTeamFlagBrush; // 0xba8
	TSoftObjectPtr<UTexture2D> SameOrAttackTeamFlagTexture; // 0xc30
	FLinearColor SameOrAttackTeamFlagColor; // 0xc58
	FSlateBrush DiffOrDefenseTeamFlagBrush; // 0xc68
	TSoftObjectPtr<UTexture2D> DiffOrDefenseTeamFlagTexture; // 0xcf0
	FLinearColor DiffOrDefenseTeamFlagColor; // 0xd18
	FSlateBrush NoTeamFlagBrush; // 0xd28
	TSoftObjectPtr<UTexture2D> NoTeamFlagTexture; // 0xdb0
	FLinearColor NoTeamFlagColor; // 0xdd8
	FSlateBrush DiffOrDefenseTeamLockFlagBrush; // 0xde8
	TSoftObjectPtr<UTexture2D> DiffOrDefenseTeamLockFlagTexture; // 0xe70
	FLinearColor DiffOrDefenseTeamLockFlagColor; // 0xe98
	UStaticMesh* NeutralStaticMesh; // 0xea8
	UStaticMesh* AttackFlagStaticMesh; // 0xeb0
	UStaticMesh* DefenseStaticMesh; // 0xeb8
	USkeletalMesh* NeutralSkeletalMesh; // 0xec0
	USkeletalMesh* AttackFlagSkeletalMesh; // 0xec8
	USkeletalMesh* DefenseSkeletalMesh; // 0xed0
	float OccupyTimeInterval; // 0xed8
	float OccupyNotifyInterval; // 0xedc
	float CheckOccupyTimeInterval; // 0xee0
	float CheckOccupyRadius; // 0xee4
	EFlagOccupyType FlagOccupyType; // 0xee8
	char bHasNoTeamStateInPingPang : 1; // 0xee9
	float fPlayerOccupySpeed; // 0xeec
	int32_t PlayerOccupySpeedNumLimit; // 0xef0
	int32_t MaxOccupyCount; // 0xef4
	TArray<AActor*> RelatedActors; // 0xef8
	EOccupyPreConditionType OccupyPreConditionType; // 0xf08
	TArray<AActor*> PreConditionActors; // 0xf10
	float AddBattleTime; // 0xf20
	int32_t ClientShowOrderPriority; // 0xf24
	FOccupyFlagInfo OccupyFlagInfo; // 0xf28
	char CacheInitGenericTeamId; // 0xf38
	FMulticastInlineDelegate OnOccupyFlagInfoChanged; // 0xf70
	FMulticastInlineDelegate OnOccupyFlagMaxOccupyCountChanged; // 0xf80
	FMulticastInlineDelegate OnOccupyFlagGenericTeamIdChanged; // 0xf90
	float LastTimeSeconds; // 0xfa0
	float LastUpdateLeftOccupyTimer; // 0xfa4
};

struct UChargeAIAttackState : UMeleeAIAttackState {
	float ChargeDurationTime; // 0x108
	float ChargingSpeedMulAdd; // 0x10c
	float ChargingAccelerationMulAdd; // 0x110
};

struct UCloudChunkDataSubSystem : UGameInstanceSubsystem {
	TMap<FGuid, FCloudChunkData> CloudChunkDataDict; // 0x30
};

struct UGuildEventColumn : UUserWidget {
	float BaseConflictImgLength; // 0x260
	float ExtraConflictImgLength; // 0x264
	UImage* IconImg; // 0x268
	UTextBlock* EventGuildTypeText; // 0x270
	UImage* ConflictImg; // 0x278
	UButton* DetailBtn; // 0x280
	UTextBlock* ConflictTb; // 0x288
	UTextBlock* DescriptionTb; // 0x290
	UButton* DeclareWarBtn; // 0x298
	TWeakObjectPtr<UUI_GuildEvent> ParentGuildEventUI; // 0x2a0
	EEventGuildType EventGuildType; // 0x2a8
	FText DescriptionText; // 0x2b0
};

struct UABP_HorseMC_C : USG_AnimalsAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0xff0
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_6; // 0xff8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_13; // 0x10c0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_5; // 0x11a8
	FAnimNode_Slot AnimGraphNode_Slot_12; // 0x1300
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_3; // 0x1348
	FAnimNode_Slot AnimGraphNode_Slot_11; // 0x1408
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_11; // 0x1450
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_10; // 0x1478
	FAnimNode_Root AnimGraphNode_Root_5; // 0x14a0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_4; // 0x14d0
	FAnimNode_Slot AnimGraphNode_Slot_10; // 0x1628
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_9; // 0x1670
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend_2; // 0x1698
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_8; // 0x1758
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_12; // 0x1780
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_11; // 0x1868
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_5; // 0x1950
	FAnimNode_Root AnimGraphNode_Root_4; // 0x1a18
	FAnimNode_LinkedInputPose AnimGraphNode_LinkedInputPose; // 0x1a48
	FAnimNode_Fabrik AnimGraphNode_Fabrik_2; // 0x1b60
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x1cf0
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x1e80
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x1f88
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_2; // 0x2090
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics; // 0x24d0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_4; // 0x2910
	FAnimNode_Root AnimGraphNode_Root_3; // 0x2990
	FAnimNode_RigidBody AnimGraphNode_RigidBody; // 0x29c0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2; // 0x3010
	FSGAnimNode_ModifyBone SGAnimGraphNode_ModifyBone; // 0x3030
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x3118
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2; // 0x3138
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_7; // 0x3158
	FAnimNode_BlendListByBool AnimGraphNode_BlendListByBool; // 0x3180
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x3220
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_3; // 0x3240
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_6; // 0x3398
	FAnimNode_Root AnimGraphNode_Root_2; // 0x33c0
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose_2; // 0x33f0
	FAnimNode_Slot AnimGraphNode_Slot_9; // 0x3548
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_5; // 0x3590
	FAnimNode_LayeredBoneBlend AnimGraphNode_LayeredBoneBlend; // 0x35b8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_4; // 0x3678
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_67; // 0x36a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_66; // 0x36c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_65; // 0x36f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_64; // 0x3718
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_63; // 0x3740
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_62; // 0x3768
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_61; // 0x3790
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_60; // 0x37b8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_10; // 0x37e0
	FAnimNode_StateResult AnimGraphNode_StateResult_21; // 0x38c8
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_9; // 0x38f8
	FAnimNode_StateResult AnimGraphNode_StateResult_20; // 0x39e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_8; // 0x3a10
	FAnimNode_StateResult AnimGraphNode_StateResult_19; // 0x3af8
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_4; // 0x3b28
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_7; // 0x3bf0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_6; // 0x3cd8
	FAnimNode_StateResult AnimGraphNode_StateResult_18; // 0x3dc0
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_3; // 0x3df0
	FAnimNode_StateResult AnimGraphNode_StateResult_17; // 0x3e08
	FAnimNode_StateMachine AnimGraphNode_StateMachine_3; // 0x3e38
	FAnimNode_Root AnimGraphNode_Root; // 0x3ee8
	FAnimNode_Slot AnimGraphNode_Slot_8; // 0x3f18
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_4; // 0x3f60
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_59; // 0x4010
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_58; // 0x4038
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_57; // 0x4060
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_56; // 0x4088
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_55; // 0x40b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_54; // 0x40d8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_53; // 0x4100
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_52; // 0x4128
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_51; // 0x4150
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_50; // 0x4178
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_49; // 0x41a0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_48; // 0x41c8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_47; // 0x41f0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_46; // 0x4218
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_45; // 0x4240
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_44; // 0x4268
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_43; // 0x4290
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_42; // 0x42b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_41; // 0x42e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_40; // 0x4308
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_39; // 0x4330
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_38; // 0x4358
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_37; // 0x4380
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_36; // 0x43a8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_35; // 0x43d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_34; // 0x43f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_33; // 0x4420
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_32; // 0x4448
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_31; // 0x4470
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_30; // 0x4498
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_29; // 0x44c0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_28; // 0x44e8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_27; // 0x4510
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_26; // 0x4538
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_25; // 0x4560
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_24; // 0x4588
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_3; // 0x45b0
	FAnimNode_StateResult AnimGraphNode_StateResult_16; // 0x4660
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_23; // 0x4690
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_22; // 0x46b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_21; // 0x46e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_20; // 0x4708
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer_2; // 0x4730
	FAnimNode_StateResult AnimGraphNode_StateResult_15; // 0x47e0
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_5; // 0x4810
	FAnimNode_StateResult AnimGraphNode_StateResult_14; // 0x48f8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_19; // 0x4928
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_18; // 0x4950
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_17; // 0x4978
	FAnimNode_PoseSnapshot AnimGraphNode_PoseSnapshot_2; // 0x49a0
	FAnimNode_StateResult AnimGraphNode_StateResult_13; // 0x4a30
	FAnimNode_PoseSnapshot AnimGraphNode_PoseSnapshot; // 0x4a60
	FAnimNode_StateResult AnimGraphNode_StateResult_12; // 0x4af0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_16; // 0x4b20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_15; // 0x4b48
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_3; // 0x4b70
	FAnimNode_StateResult AnimGraphNode_StateResult_11; // 0x4bf0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_14; // 0x4c20
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_13; // 0x4c48
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator_2; // 0x4c70
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_3; // 0x4cc0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer_2; // 0x4d88
	FAnimNode_StateResult AnimGraphNode_StateResult_10; // 0x4e08
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x4e38
	FAnimNode_StateResult AnimGraphNode_StateResult_9; // 0x4eb8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_12; // 0x4ee8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_11; // 0x4f10
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_10; // 0x4f38
	FAnimNode_LinkedAnimLayer AnimGraphNode_LinkedAnimLayer; // 0x4f60
	FAnimNode_StateResult AnimGraphNode_StateResult_8; // 0x5010
	FAnimNode_Slot AnimGraphNode_Slot_7; // 0x5040
	FAnimNode_Slot AnimGraphNode_Slot_6; // 0x5088
	FAnimNode_Slot AnimGraphNode_Slot_5; // 0x50d0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_9; // 0x5118
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_8; // 0x5140
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_7; // 0x5168
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_6; // 0x5190
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_5; // 0x51b8
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_4; // 0x51e0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_3; // 0x5208
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult_2; // 0x5230
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_4; // 0x5258
	FAnimNode_StateResult AnimGraphNode_StateResult_7; // 0x5340
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_3; // 0x5370
	FAnimNode_StateResult AnimGraphNode_StateResult_6; // 0x5458
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer_2; // 0x5488
	FAnimNode_StateResult AnimGraphNode_StateResult_5; // 0x5570
	FAnimNode_BlendSpacePlayer AnimGraphNode_BlendSpacePlayer; // 0x55a0
	FAnimNode_StateResult AnimGraphNode_StateResult_4; // 0x5688
	FAnimNode_RefPose AnimGraphNode_LocalRefPose_2; // 0x56b8
	FAnimNode_StateResult AnimGraphNode_StateResult_3; // 0x56d0
	FAnimNode_StateMachine AnimGraphNode_StateMachine_2; // 0x5700
	FAnimNode_StateResult AnimGraphNode_StateResult_2; // 0x57b0
	FAnimNode_TransitionResult AnimGraphNode_TransitionResult; // 0x57e0
	FAnimNode_RefPose AnimGraphNode_LocalRefPose; // 0x5808
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x5820
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x5850
	FAnimNode_Slot AnimGraphNode_Slot_4; // 0x5900
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend_2; // 0x5948
	FAnimNode_SequenceEvaluator AnimGraphNode_SequenceEvaluator; // 0x5a10
	FAnimNode_Slot AnimGraphNode_Slot_3; // 0x5a60
	FAnimNode_SaveCachedPose AnimGraphNode_SaveCachedPose; // 0x5aa8
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_3; // 0x5c00
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose_2; // 0x5c28
	FSGAnimNode_LayeredBoneBlend SGAnimGraphNode_LayeredBoneBlend; // 0x5c50
	FAnimNode_TwoWayBlend AnimGraphNode_TwoWayBlend; // 0x5d10
	FAnimNode_UseCachedPose AnimGraphNode_UseCachedPose; // 0x5dd8
	FAnimNode_Slot AnimGraphNode_Slot_2; // 0x5e00
	FAnimNode_Slot AnimGraphNode_Slot; // 0x5e48
	FVector tail; // 0x5e90
	bool EnableTail; // 0x5e9c
	FSGInputBlendPose Struct_DamageBoneLayerConfig; // 0x5ea0
};

struct UMovieSceneNiagaraTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UHorizonRadioButtonUserWidget : UHorizonDesignableUserWidget {
	FMulticastInlineDelegate OnCheckedDelegate; // 0x260
	FMulticastInlineDelegate OnUnCheckedDelegate; // 0x270
	UCheckBox* CheckBox_Main; // 0x2b0
	UTextBlock* TextBlock_Main; // 0x2b8
	FText Text_Main; // 0x2c0
	bool bCheckedByDefault; // 0x2d8
};

struct UAsyncActionLoadPrimaryAssetClass : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UNpcSpawnTemplate : UObject {
	TArray<FNPCSpawnData> NPCSpawnDatas; // 0x28
	TArray<FNPCSpawnLimit> NPCSpawnLimits; // 0x38
};

struct UGizmoLineHandleComponent : UGizmoBaseComponent {
	FVector Normal; // 0x4a8
	float HandleSize; // 0x4b4
	float Thickness; // 0x4b8
	FVector Direction; // 0x4bc
	float Length; // 0x4c8
	bool bImageScale; // 0x4cc
};

struct URetainerBox : UContentWidget {
	bool bRetainRender; // 0x120
	bool RenderOnInvalidation; // 0x121
	bool RenderOnPhase; // 0x122
	int32_t Phase; // 0x124
	int32_t PhaseCount; // 0x128
	UMaterialInterface* EffectMaterial; // 0x130
	FName TextureParameter; // 0x138
};

struct AGeometryCollectionRenderLevelSetActor : AActor {
	UVolumeTexture* TargetVolumeTexture; // 0x310
	UMaterial* RayMarchMaterial; // 0x318
	float SurfaceTolerance; // 0x320
	float Isovalue; // 0x324
	bool Enabled; // 0x328
	bool RenderVolumeBoundingBox; // 0x329
};

struct UMaterialExpressionTextureSampleParameterSubUV : UMaterialExpressionTextureSampleParameter2D {
	char bBlend : 1; // 0x80
};

struct UNiagaraDataInterfaceRenderTarget2D : UNiagaraDataInterfaceRWBase {
	FIntPoint Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe0
	char bOverrideFormat : 1; // 0xe1
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTarget2D*> ManagedRenderTargets; // 0x108
};

struct USGGameDataAchievement : USGGameDataConditionReward {
	TMap<FString, int32_t> AchievementNumMap; // 0x98
	TMap<FString, USGAchievement*> AchievementConfigs; // 0xe8
};

struct UVehiclePerkDragDropOperation : UDragDropOperation {
	TWeakObjectPtr<USGVehiclePerk> BindVehiclePerk; // 0x88
};

struct ULiveLinkSubjectSettings : UObject {
	TArray<ULiveLinkFramePreProcessor*> PreProcessors; // 0x28
	ULiveLinkFrameInterpolationProcessor* InterpolationProcessor; // 0x38
	TArray<ULiveLinkFrameTranslator*> Translators; // 0x40
	ULiveLinkRole* Role; // 0x50
	FFrameRate FrameRate; // 0x58
	bool bRebroadcastSubject; // 0x60
};

struct UMaterialExpressionRayTracingQualitySwitch : UMaterialExpression {
	FExpressionInput Normal; // 0x40
	FExpressionInput RayTraced; // 0x54
};

struct USystemSettingItemTips : USGToolTipWidget {
	UTextBlock* TbTipsContent; // 0x288
};

struct UInputKeyDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputKeyDelegateBinding> InputKeyDelegateBindings; // 0x28
};

struct UControlPointMeshComponent : UStaticMeshComponent {
	float VirtualTextureMainPassMaxDrawDistance; // 0x518
};

struct UBrushComponent : UPrimitiveComponent {
	UModel* Brush; // 0x488
	UBodySetup* BrushBodySetup; // 0x490
};

struct UGeneralWagesPanel : UUserWidget {
	FBaseGeneralChunkData BindGeneralChunkData; // 0x260
	TWeakObjectPtr<UUI_N_General> ParentUI; // 0x348
	UTextBlock* LeftWagesTimesText; // 0x350
	UTextBlock* NextUseWagesText; // 0x358
	UTextBlock* LeftWagesTimes; // 0x360
	UTextBlock* WagesNeedText; // 0x368
	UEditableText* WagesEditText; // 0x370
	UButton* AcceptButton; // 0x378
	UButton* CancelButton; // 0x380
	USlider* WagesSlider; // 0x388
	UVerticalBox* MainVertical; // 0x390
	UTextBlock* Description; // 0x398
	char bIsEnoughCapital : 1; // 0x3a0
	char bTodayCanGiveWages : 1; // 0x3a0
	int32_t WantGiveWages; // 0x3a4
	float ToolTipsDescriptionTextWrapDelta; // 0x3a8
};

struct UParticleModuleSubUVMovie : UParticleModuleSubUV {
	char bUseEmitterTime : 1; // 0x70
	FRawDistributionFloat FrameRate; // 0x78
	int32_t StartingFrame; // 0xa8
};

struct UMaterialExpressionLinearInterpolate : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Alpha; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstAlpha; // 0x84
};

struct UParticleModuleVelocity : UParticleModuleVelocityBase {
	FRawDistributionVector StartVelocity; // 0x38
	FRawDistributionFloat StartVelocityRadial; // 0x80
};

struct UStereoLayerComponent : USceneComponent {
	char bLiveTexture : 1; // 0x208
	char bSupportsDepth : 1; // 0x208
	char bNoAlphaChannel : 1; // 0x208
	UTexture* Texture; // 0x210
	UTexture* LeftTexture; // 0x218
	char bQuadPreserveTextureRatio : 1; // 0x220
	FVector2D QuadSize; // 0x224
	FBox2D UVRect; // 0x22c
	float CylinderRadius; // 0x240
	float CylinderOverlayArc; // 0x244
	int32_t CylinderHeight; // 0x248
	FEquirectProps EquirectProps; // 0x24c
	EStereoLayerType StereoLayerType; // 0x294
	EStereoLayerShape StereoLayerShape; // 0x295
	UStereoLayerShape* Shape; // 0x298
	int32_t Priority; // 0x2a0
};

struct UUI_BenchmarkScalability : USGUI {
	UTextBlock* TbBenchmarkScalability; // 0x2d8
	UButton* BtnReturn; // 0x2e0
	UButton* BtnOpenSystemSetting; // 0x2e8
};

struct UNiagaraDataInterfaceGrid3D : UNiagaraDataInterfaceRWBase {
	FIntVector NumCells; // 0xd8
	float CellSize; // 0xe4
	int32_t NumCellsMaxAxis; // 0xe8
	ESetResolutionMethod SetResolutionMethod; // 0xec
	FVector WorldBBoxSize; // 0xf0
};

struct USGConditionReward : UObject {
	TArray<URewardCondition*> Conditions; // 0x28
	USGReward* Reward; // 0x38
};

struct ASGStructure : ASGGamePlayActor {
	USceneComponent* StructureRootComponent; // 0x518
	UStaticMeshComponent* StructureStaticMeshComponent; // 0x520
	UPointLightComponent* StructurePointLightComponent; // 0x528
	int32_t Level; // 0x530
	char bPreviewStructure : 1; // 0x534
	TArray<UMaterialInstanceDynamic*> PreviewInstances; // 0x538
	UMaterialInterface* PreviewCreateMaterial; // 0x548
	UStaticMesh* PreviewCreateMesh; // 0x550
	TArray<UMaterialInterface*> PreviewCreateMeshMaterial; // 0x558
	TArray<UMaterialInterface*> PreviewCreateMeshErrorMaterial; // 0x568
	char bDeletePreviewCreateMeshWhenFinish : 1; // 0x578
	char bShowParticleWhenCreatePreview : 1; // 0x578
	char bForceCreateOnGround : 1; // 0x578
	char bForceCreateOnFloor : 1; // 0x578
	char bCheckOtherPointOnFloor : 1; // 0x578
	float MaxCreateRange; // 0x57c
	int32_t BindType; // 0x580
	TArray<FBindPointInfo> BindPoints; // 0x588
	float SearchBindPointRadius; // 0x598
	float MaxBindPointRadius; // 0x59c
	char bBindPointTransRotation : 1; // 0x5a0
	FVector CreateHitLocationOffset; // 0x5a4
	FVector CreateCheckBox; // 0x5b0
	FVector CreateCheckBoxOffset; // 0x5bc
	FRotator CreateCheckBoxRotOffset; // 0x5c8
	FVector CreateCheckBoxScale; // 0x5d4
	FVector OtherCreateCheckBox; // 0x5e0
	FVector OtherCreateCheckBoxOffset; // 0x5ec
	FVector OtherPointOnFloorLocation; // 0x5f8
	TArray<FVector> CreateCheckDirections; // 0x608
	FVector SimpleFoundationBox; // 0x618
	FVector SimpleBoxLocOffset; // 0x624
	TArray<UStaticMesh*> MeshForSimple; // 0x630
	char bNeedBindPointForCreate : 1; // 0x640
	char bCreateSelectDirection : 1; // 0x640
	float MaxHeightToWorldGround; // 0x644
	float OfficalRoadOffset; // 0x648
	char bFoundation : 1; // 0x64c
	char bSimpleFoundation : 1; // 0x64c
	char bWall : 1; // 0x64c
	char bXianChengDoor : 1; // 0x64c
	char bOutDoor : 1; // 0x64c
	char bFloor : 1; // 0x64c
	char bPillar : 1; // 0x64c
	char bGuildShop : 1; // 0x64c
	int32_t GuildShopLevel; // 0x650
	char bGuildAuctionHouse : 1; // 0x654
	char bNeedNearByFoundation : 1; // 0x654
	float MaxDistanceBindPointNearByFoundation; // 0x658
	char bOnlyFoundationWhenBindedToFoundation : 1; // 0x65c
	ASGStructure* CanReplaceByStructureClass; // 0x660
	ASGStructure* PreventReplaceByStructureClass; // 0x668
	char bMovableStructure : 1; // 0x670
	UShapeComponent* TriggerBoxComponent; // 0x678
	float TriggerBoxDamageInterval; // 0x680
	float TriggerBoxDamageAmount; // 0x684
	float TriggerBoxCollectionDamageAmount; // 0x688
	float TriggerBoxCollectionReduceHPPercent; // 0x68c
	float TriggerBoxDamageReduceHPPercent; // 0x690
	float TriggerBoxDamageImpulse; // 0x694
	USGDamageType* TriggerBoxDamageType; // 0x698
	char bTriggerBoxCollection : 1; // 0x6a0
	char bNeedPlayerInputForCollection : 1; // 0x6a0
	char bDoNotUseSceneObjectSearchForCollect : 1; // 0x6a0
	char bNeedPlayerInputForDamage : 1; // 0x6a0
	char bShowMiniMapPOI : 1; // 0x6a0
	FString MiniMapPOIStyleID; // 0x6a8
	EMiniMapStructureVisibleType MiniMapPOIVisibleType; // 0x6b8
	char bForceCreateOnWall : 1; // 0x6b9
	char bCanBebDemolished : 1; // 0x6b9
	float CheckFloorZUp; // 0x6bc
	float CheckFloorZDown; // 0x6c0
	FName SpawnSoundID; // 0x6c4
	char bAllowPlacingOnOtherGuildStructure : 1; // 0x6cc
	float CheckEnemyFoundationRadius; // 0x6d0
	char bCheckNearByEnemyFoundation : 1; // 0x6d4
	char bPreventNearByEnemyFoundation : 1; // 0x6d4
	char bPreventCreateOnFloor : 1; // 0x6d4
	char bCreateOnGroundWhenBinded : 1; // 0x6d4
	char bRealFoundation : 1; // 0x6d4
	char bFoundationStack : 1; // 0x6d4
	char bCreateHPByInterval : 1; // 0x6d4
	float InitHPPercentageWhenCreate; // 0x6d8
	float CreateHPInterval; // 0x6dc
	float CreateHPPerInterval; // 0x6e0
	char bOnlyCreateInWater : 1; // 0x6e4
	char bCannotCreateInWater : 1; // 0x6e4
	FVector CheckWaterLocationOffset; // 0x6e8
	float CheckMinWaterHeight; // 0x6f4
	float CheckEnemyPlayerRadius; // 0x6f8
	TArray<FString> AllowRotationMarkList; // 0x700
	FString NeedRotationMark; // 0x710
	char bCreateInTimeRange : 1; // 0x720
	int32_t AllowCreateStartHour; // 0x724
	int32_t AllowCreateEndHour; // 0x728
	TArray<ASGStructure*> IgnorePreventStructureClasses; // 0x730
	char bPreventOtherCreate : 1; // 0x740
	char bAllowAttachToStaticMeshSocket : 1; // 0x740
	FName AttachToStaticMeshSocketName; // 0x744
	char bGuildStructure : 1; // 0x74c
	int32_t GuildStructureUniqueId; // 0x750
	int32_t RequireGuildLevel; // 0x754
	float GuildCreateCoolTime; // 0x758
	TArray<FGuildStructureSetting> GuildStructureSettings; // 0x760
	char bPersonalStructure : 1; // 0x770
	int32_t PersonalStructureUniqueId; // 0x774
	int32_t PersonalStructureMaxNum; // 0x778
	ASGStructure* AddPersonalStructureMaxNumClass; // 0x780
	char bUseGroundTraceNormal : 1; // 0x788
	char bPerkStructure : 1; // 0x788
	char bIgnoreEnemyFoundationWhenPerk : 1; // 0x788
	char bPerkStructureSetPlayerOwnerId : 1; // 0x788
	char bPerkStructureHiddenWhenBuilded : 1; // 0x788
	char bUsePerkStructureRotation : 1; // 0x788
	char bPerkSelectDirection : 1; // 0x788
	char IgnoreStructureCheckVolumes : 1; // 0x788
	int32_t PerkStructureCreateCoolTime; // 0x78c
	FVector SpawnPerkStructureLocationOffset; // 0x790
	TArray<TWeakObjectPtr<ASGStructureCheckVolume>> LinkStructureCheckVolumes; // 0x7a0
	float GivingItemFromDemolishPercentage; // 0x7d0
	TArray<ASGStructure*> EnvironmentAllowStructureClasses; // 0x7d8
	char bOnlyInteractiveInventorySameTeam : 1; // 0x7e8
	char bCannotOperateInCountryCombat : 1; // 0x7e8
	ASGStructureFrame* LinkFrameStructure; // 0x7f0
	char bIgnoreMaxStructureNumInRadius : 1; // 0x7f8
	char bCanRepair : 1; // 0x7f8
	char bRepairing : 1; // 0x7f8
	double NextAllowRepairTime; // 0x800
	int32_t RepairCooldownTime; // 0x808
	float RepairInterval; // 0x80c
	float RepairHPPerInterval; // 0x810
	float RepairHPRemainRep; // 0x814
	float RepairHPRemain; // 0x818
	FTimerHandle RepairHandle; // 0x820
	float RepairHPPerMul; // 0x828
	USGItem* ConsumeItem; // 0x830
	char bOccupyStructure : 1; // 0x838
	char bCheckOtherTeamArea : 1; // 0x838
	char bOnlyInMyTeamArea : 1; // 0x838
	float CheckOtherTeamAreaRadius; // 0x83c
	char bDecay : 1; // 0x840
	char bInnerStructure : 1; // 0x840
	char bNeedDecay : 1; // 0x840
	char bInOtherOccupyArea : 1; // 0x840
	float NoTeamAreaDecayInterval; // 0x844
	float NoTeamAreaDecayHPPercent; // 0x848
	float TeamAreaDecayInterval; // 0x84c
	float TeamAreaDecayHPPercent; // 0x850
	float DecayHP; // 0x854
	FTimerHandle DecayStructureHandle; // 0x858
	char bGiveCauserDamage : 1; // 0x860
	float GiveCauserDamageImpulse; // 0x864
	float GiveCauserDamage; // 0x868
	TArray<USGDamageType*> PreventGiveCauserDamageTypes; // 0x870
	USGDamageType* GiveCauserDamageType; // 0x880
	EDamageType AttackDamageType; // 0x888
	FName BeAIAttackSocketName; // 0x88c
	char bAllowCreateOnPlatform : 1; // 0x894
	ABaseCharacter* PlatformCharacter; // 0x898
	float PlatformWeightMul; // 0x8a0
	char bAllowLogicInactive : 1; // 0x8a4
	char bLogicInactiveDestroy : 1; // 0x8a4
	double LastLogicInactiveTime; // 0x8a8
	float TotalLogicInactiveTime; // 0x8b0
	FDateTime LastLogicInactiveDateTime; // 0x8b8
	char bLogicInactive : 1; // 0x8c0
	TArray<TWeakObjectPtr<UActorComponent>> LogicInactiveUnRegisteredComponents; // 0x940
	char bParentManageLogicActive : 1; // 0x950
	char bPendingDeadWhenInActive : 1; // 0x960
	FString OwnerPlayerName; // 0x968
	FString OwnerName; // 0x978
	uint32_t StructureID; // 0x988
	TArray<uint32_t> BindedStructuresByID; // 0x990
	TArray<ASGStructure*> BindedStructures; // 0x9a0
	TArray<ASGStructure*> StructuresOnFloor; // 0x9b0
	ASGStructure* CreateOnFloorStructure; // 0x9c0
	char bPendingRemove : 1; // 0x9c8
	char bChangeFoundation : 1; // 0x9c8
	char bHiddenInGame : 1; // 0x9c8
	char bDoNotRestPerkLink : 1; // 0x9c8
	ASGStructure* LinkPerkStructure; // 0x9d0
	AActor* LinkPerkSpawnedActor; // 0x9d8
	double LastPerkStructureCreateTime; // 0x9e0
	TArray<TWeakObjectPtr<AActor>> TriggerOverlapActors; // 0x9e8
	FTimerHandle TriggerHandle; // 0x9f8
	ASGStructure* LastPreventStructure; // 0xa08
	TArray<UMaterialInterface*> PreventStructureMaterials; // 0xa10
	char bGuildStoreStructure : 1; // 0xa28
	char bDemolished : 1; // 0xa28
	char bSetMovable : 1; // 0xa28
	FText HelpText; // 0xa30
	char bIgnoreStructureAuthority : 1; // 0xa48
	char bCanSetStructureAuthority : 1; // 0xa48
	int32_t StructureAuthority; // 0xa4c
	int32_t CurrentStructureProssessAuth; // 0xa50
	int32_t CurrentStructureAllianceDoor; // 0xa54
	int32_t CurrentStructureAllianceInventory; // 0xa58
	int32_t CurrentStructureAllianceCreate; // 0xa5c
	UUserWidget* DisplayHUDShowWidgetTemplate; // 0xa60
	char bUseDestructibleExplode : 1; // 0xa68
	UCurveFloat* OverrideExplodeAmountLerpCurve; // 0xa70
	FVector OverrideExplodeDirection; // 0xa78
	float OverrideExplodeInterval; // 0xa84
	char bShowStructureDebugInfo : 1; // 0xa88
	float CreateHPRemain; // 0xa8c
	FTimerHandle CreateHPHandle; // 0xa90
	float CreateHPRemainRep; // 0xa98
	int32_t BindPointNum; // 0xa9c
	int32_t NextBindPointIndex; // 0xaa0
	AActor* SpawnActorTemplate; // 0xaa8
	ASplineRouteActor* SplineRouteActor; // 0xab0
	char bUseAutoFollowSplineRoute : 1; // 0xab8
	float DamageToStructure; // 0xabc
	char bNPCSpawnIgnoreCheck : 1; // 0xb00
	float PlatformMultiplyAdd; // 0xb04
	char bDamageAddSkillExp : 1; // 0xb08
	float CreatedSkillExp; // 0xb0c
	float GuildEventCheckInterval; // 0xb10
	FTimerHandle GuildEventCheckHandle; // 0xb18
	char bUseGuildImage : 1; // 0xb20
	TArray<FName> GuildImageMaterialNames; // 0xb28
	float FlagImageModifies[0x5]; // 0xb38
	FString GuildImage; // 0xb50
	TWeakObjectPtr<UStaticMeshComponent> GuildImageMeshComponent; // 0xb60
	UMaterialInstanceDynamic* DMI_FlagImage; // 0xb68
	UTextureRenderTarget2D* RT_FlagImage; // 0xb70
	char bUseCustomFlag : 1; // 0xb78
	FString FlagImageString; // 0xb80
	char bCanClimb : 1; // 0xb90
};

struct UUI_BattleAward : USGUI {
	UBattleAwardItemSlot* BattleAwardItemSlotClass; // 0x2d8
	UUniformGridPanel* AwardItemsGridBox; // 0x2e0
	int64_t ReceiveMouseDownTicks; // 0x2e8
};

struct UInterpTrackAnimControl : UInterpTrackFloatBase {
	FName SlotName; // 0x90
	TArray<FAnimControlTrackKey> AnimSeqs; // 0x98
	char bSkipAnimNotifiers : 1; // 0xa8
};

struct AArchVisCharacter : ACharacter {
	FString LookUpAxisName; // 0x5c8
	FString LookUpAtRateAxisName; // 0x5d8
	FString TurnAxisName; // 0x5e8
	FString TurnAtRateAxisName; // 0x5f8
	FString MoveForwardAxisName; // 0x608
	FString MoveRightAxisName; // 0x618
	float MouseSensitivityScale_Pitch; // 0x628
	float MouseSensitivityScale_Yaw; // 0x62c
};

struct USmoothHoleFillProperties : UInteractiveToolPropertySet {
	bool bConstrainToHoleInterior; // 0x60
	int32_t RemeshingExteriorRegionWidth; // 0x64
	int32_t SmoothingExteriorRegionWidth; // 0x68
	int32_t SmoothingInteriorRegionWidth; // 0x6c
	float InteriorSmoothness; // 0x70
	double FillDensityScalar; // 0x78
	bool bProjectDuringRemesh; // 0x80
};

struct UBTService_SGBlueprintBase : UBTService_BlueprintBase {
	ASG_AIController* SG_AIController; // 0x98
	ASGGeneralAIController* SG_GeneralAIController; // 0xa0
	ASGGeneralCharacter* SG_GeneralCharacter; // 0xa8
};

struct UPreviewSceneWidget : UUserWidget {
	FTimerHandle PreviewMontageHandle; // 0x260
	float FOV; // 0x270
	UMaterialInstanceDynamic* DynamicMaterial; // 0x278
	UMaterialInterface* BaseMaterial; // 0x280
	FVector MeshLocation; // 0x288
	FVector MeshLocationOffset; // 0x294
	FRotator MeshRotation; // 0x2a0
	FRotator OrbitRotation; // 0x2ac
	float PreviewScale; // 0x2b8
	FVector CameraPivotOffset; // 0x2bc
	float CameraDistance; // 0x2c8
	float BrakeSpeed; // 0x2cc
	float RotationSpeed; // 0x2d0
	FRotator AutoRotator; // 0x2d4
	UAnimMontage* DefaultAnim; // 0x2e0
	UWorld* GameWorld; // 0x2e8
	TArray<USceneComponent*> PreviewComponents; // 0x2f0
	FVector2D RotationVelocity; // 0x300
	FPreviewCharacterStruct PreviewCharacterStruct; // 0x308
	UWorld* PreviewWorld; // 0x348
	USceneCaptureComponent2D* CaptureComponent; // 0x350
};

struct UPrivateSessionPassword : UUserWidget {
	UEditableTextBox* EtbPassword; // 0x260
	UButton* BtnConfirm; // 0x268
	UButton* BtnCancel; // 0x270
};

struct UFontImportOptions : UObject {
	FFontImportOptionsData Data; // 0x28
};

struct UMaterialExpressionTruncate : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UDatasmithCineCameraActorTemplate : UDatasmithObjectTemplate {
	FDatasmithCameraLookatTrackingSettingsTemplate LookatTrackingSettings; // 0x30
};

struct ULenovoQueryOption : UUserWidget {
	TSoftObjectPtr<UTexture2D> NormalBackgroundTexture; // 0x260
	TSoftObjectPtr<UTexture2D> HoverBackgroundTexture; // 0x288
	TSoftObjectPtr<UTexture2D> SelectedBackgroundTexture; // 0x2b0
	FLinearColor NormalBackgroundColor; // 0x2d8
	FLinearColor HoverBackgroundColor; // 0x2e8
	FLinearColor SelectedBackgroundColor; // 0x2f8
	UButton* BtnBg; // 0x338
	UImage* ImgBg; // 0x340
	UTextBlock* TbOption; // 0x348
	char bSelected : 1; // 0x350
	char bHovered : 1; // 0x350
	int32_t BindOptionIndex; // 0x354
	int32_t BindIndex; // 0x358
};

struct AAmbientSound : AActor {
	UAudioComponent* AudioComponent; // 0x310
};

struct UMagicLeapHeadTrackingNotificationsComponent : UVRNotificationsComponent {
	FMulticastInlineDelegate OnHeadTrackingLost; // 0x150
	FMulticastInlineDelegate OnHeadTrackingRecovered; // 0x160
	FMulticastInlineDelegate OnHeadTrackingRecoveryFailed; // 0x170
	FMulticastInlineDelegate OnHeadTrackingNewSessionStarted; // 0x180
};

struct UPlaneCutTool : UMultiSelectionTool {
	UPlaneCutToolProperties* BasicProperties; // 0x98
	UAcceptOutputProperties* AcceptProperties; // 0xa0
	FVector CutPlaneOrigin; // 0xa8
	FQuat CutPlaneOrientation; // 0xc0
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xd0
	TArray<UDynamicMeshReplacementChangeTarget*> MeshesToCut; // 0xe0
	UTransformGizmo* PlaneTransformGizmo; // 0x158
	UTransformProxy* PlaneTransformProxy; // 0x160
};

struct AStaticMeshFloatingActor : AStaticMeshActor {
	UBoxComponent* FloatingBox; // 0x320
	FVector2D WaterResistanceRange; // 0x328
	FVector2D MinWaterResistanceRange; // 0x330
	float FloatingForce; // 0x338
	float MeshMass; // 0x33c
	FVector CenterOfMassOffset; // 0x340
	EWaveShape DefaultWaveShape; // 0x34c
	float DefaultWaveStrength; // 0x350
	float DefaultWaveSizePercent; // 0x354
	TArray<FWaveConfigData> WaveData; // 0x358
	FRotator WaveRotator; // 0x368
};

struct UUI_TransGuildActivityPoint : USGUI {
	UTextBlock* TransferPointText; // 0x2d8
	UTextBlock* GongXunPointText; // 0x2e0
	UTextBlock* ToDayLeftText; // 0x2e8
	UButton* ReducePointButton; // 0x2f0
	UButton* AddPointButton; // 0x2f8
	UButton* SubmitButton; // 0x300
	UButton* CancelButton; // 0x308
	USlider* TransferSlider; // 0x310
};

struct UOnlinePIESettings : UDeveloperSettings {
	bool bOnlinePIEEnabled; // 0x38
	TArray<FPIELoginSettingsInternal> Logins; // 0x40
};

struct UPaperFlipbookComponent : UMeshComponent {
	UPaperFlipbook* SourceFlipbook; // 0x4b0
	UMaterialInterface* Material; // 0x4b8
	float PlayRate; // 0x4c0
	char bLooping : 1; // 0x4c4
	char bReversePlayback : 1; // 0x4c4
	char bPlaying : 1; // 0x4c4
	float AccumulatedTime; // 0x4c8
	int32_t CachedFrameIndex; // 0x4cc
	FLinearColor SpriteColor; // 0x4d0
	UBodySetup* CachedBodySetup; // 0x4e0
	FMulticastInlineDelegate OnFinishedPlaying; // 0x4e8
};

struct UN_AppearanceSlot : UN_InventorySlot {
	UImage* InUseBg; // 0xf80
	UTextBlock* InUseText; // 0xf88
	float LockBgAlpha; // 0xf90
	TSoftObjectPtr<UTexture2D> ExpiredIcon; // 0xf98
	ECharacterAppearanceType AppearanceItemType; // 0xfc0
	USGItem* ItemTemplateForShow; // 0xfd0
};

struct UBTTask_DoSleep : UBTTask_AnimalBase {
	float FarBrakingDistance; // 0xd0
	float ProjectToNavInterval; // 0xd4
	float LastProjectToNavTime; // 0xe0
	FVector DesiredLocationToNavigation; // 0xe4
};

struct UUI_SeasonQuest : UUserWidget {
	UTextBlock* QuestNameText; // 0x260
	UTextBlock* QuestDescText; // 0x268
	UTextBlock* QuestObjectText; // 0x270
	UTextBlock* QuestAwardText; // 0x278
	UScrollBox* QuestListScrollBox; // 0x280
	UHorizontalBox* PreviewQuestHBox; // 0x288
	UButton* ButtonLeft; // 0x290
	UTextBlock* SeasonInfoText; // 0x298
	UButton* ButtonRight; // 0x2a0
	UGuildQuestSlot* GuildQuestSlotTemplate; // 0x2a8
	FMargin QuestSlotMargin; // 0x2b0
};

struct UNavCollision : UNavCollisionBase {
	TArray<FNavCollisionCylinder> CylinderCollision; // 0x80
	TArray<FNavCollisionBox> BoxCollision; // 0x90
	UNavArea* AreaClass; // 0xa0
	char bGatherConvexGeometry : 1; // 0xa8
	char bCreateOnClient : 1; // 0xa8
};

struct UDestructibleFractureSettings : UObject {
	int32_t CellSiteCount; // 0x28
	FFractureMaterial FractureMaterialDesc; // 0x2c
	int32_t RandomSeed; // 0x50
	TArray<FVector> VoronoiSites; // 0x58
	int32_t OriginalSubmeshCount; // 0x68
	TArray<UMaterialInterface*> Materials; // 0x70
	TArray<FDestructibleChunkParameters> ChunkParameters; // 0x80
};

struct UWBP_ResolutionScaleSettingSliderItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UCanvasPanel* CanvasPanel_53; // 0x370
	UImage* ImgScrollBg; // 0x378
	USlider* Slider; // 0x380
	UTextBlock* TbTitle; // 0x388
	UTextBlock* TbValue; // 0x390
	FText Name; // 0x398
};

struct UNiagaraDataInterfaceSkeletalMesh : UNiagaraDataInterface {
	ENDISkeletalMesh_SourceMode SourceMode; // 0x38
	AActor* Source; // 0x40
	FNiagaraUserParameterBinding MeshUserParameter; // 0x48
	USkeletalMeshComponent* SourceComponent; // 0x68
	ENDISkeletalMesh_SkinningMode SkinningMode; // 0x70
	TArray<FName> SamplingRegions; // 0x78
	int32_t WholeMeshLOD; // 0x88
	TArray<FName> FilteredBones; // 0x90
	TArray<FName> FilteredSockets; // 0xa0
	FName ExcludeBoneName; // 0xb0
	char bExcludeBone : 1; // 0xb8
	bool bRequireCurrentFrameData; // 0xb9
};

struct UItemAuctionSellConfirmPanel : USGUI {
	UEditableTextBox* EditableTextBox_SellPrice; // 0x2d8
	UEditableTextBox* EditableTextBox_SellCount; // 0x2e0
	UTextBlock* TextBlock_Name; // 0x2e8
	UTextBlock* TextBlock_PriceRange; // 0x2f0
	UTextBlock* TextBlock_GuidePrice; // 0x2f8
	UTextBlock* TextBlock_MaxCount; // 0x300
	UTextBlock* TextBlock_TotalPrice; // 0x308
	UTextBlock* TextBlock_CustodyFee; // 0x310
	UTextBlock* TextBlock_CustodyFeeTitle; // 0x318
	UTextBlock* TextBlock_TaxRate; // 0x320
	UTextBlock* TextBlock_Tax; // 0x328
	UTextBlock* TextBlock_Title; // 0x330
	UButton* Button_OK; // 0x338
	UButton* Button_Order; // 0x340
	UButton* Button_Cancel; // 0x348
	UImage* Image_Icon; // 0x350
	UComboBoxString* ComboBox_SellTime; // 0x358
	TSoftObjectPtr<UTexture2D> GeneralIcon; // 0x360
	TSoftObjectPtr<UTexture2D> HorseIcon; // 0x388
	TWeakObjectPtr<UUI_GuildAuctionHouse> Root; // 0x3b0
};

struct UEnvQueryTest_Volume : UEnvQueryTest {
	UEnvQueryContext* VolumeContext; // 0x1f8
	AVolume* VolumeClass; // 0x200
	char bDoComplexVolumeTest : 1; // 0x208
};

struct UBaseKelvinletBrushOpProps : UMeshSculptBrushOpProps {
	float Stiffness; // 0x60
	float Incompressiblity; // 0x64
	int32_t BrushSteps; // 0x68
};

struct ULandscapeMeshCollisionComponent : ULandscapeHeightfieldCollisionComponent {
	FGuid MeshGuid; // 0x568
};

struct ASGStructureAccessories : ASGStructure {
	USkeletalMeshComponent* SkeletalMesh; // 0xb98
};

struct USGCraftPerk : UObject {
	FText Name; // 0x28
	FText Description; // 0x40
	TSoftObjectPtr<UTexture2D> CraftTexture; // 0x58
	char bUseMainLandCraftTexture : 1; // 0x80
	TSoftObjectPtr<UTexture2D> MainLandCraftTexture; // 0x88
	int32_t MyCraftIndex; // 0xb0
	char bHideInCraftPerkUI : 1; // 0xb4
	char bHideInCraftPerkUIMainLand : 1; // 0xb4
	TArray<USGItem*> CraftItem; // 0xb8
	char bUseMainLandCraftItem : 1; // 0xc8
	TArray<USGItem*> MainLandCraftItem; // 0xd0
	TArray<USGItem*> CraftInStructureItem; // 0xe0
};

struct UUI_MapList : USGUI {
	UUI_MapItem* ItemTemplate; // 0x2d8
	int32_t RowNumPerPage; // 0x2e0
	FMulticastInlineDelegate OnMapListReturnClicked; // 0x2e8
	FMulticastInlineDelegate OnMapListUpdateServerList; // 0x2f8
	UUniformGridPanel* UGPMapList; // 0x308
	UUniformGridPanel* UGPLastLoginMap; // 0x310
	UButton* BtnJoin; // 0x318
	UButton* BtnRefresh; // 0x320
	UButton* BtnBack; // 0x328
	UButton* BtnLastPage; // 0x330
	UButton* BtnNextPage; // 0x338
	UTextBlock* TbCurPage; // 0x340
	UTextBlock* TbMaxPage; // 0x348
	UButton* BtnPlayerNumUp; // 0x350
	UButton* BtnPlayerNumDown; // 0x358
	UEditableText* EtbSearch; // 0x360
	UCircularThrobber* CircularThrobber; // 0x368
	UHorizontalBox* HbNoServer; // 0x370
	FTimerHandle CircularThrobberHandle; // 0x378
	TArray<UUI_MapItem*> MapItems; // 0x380
	UUI_MapItem* LastLoginMapItem; // 0x390
	int32_t CurPage; // 0x398
	int32_t MaxPage; // 0x39c
	char bPlayerNumUpSort : 1; // 0x3a0
	char bPlayerNumDownSort : 1; // 0x3a0
	UUI_MapItem* SelectMapItem; // 0x3a8
	FString SearchString; // 0x3b0
	FTimerHandle GetPingTimer; // 0x3c0
	TArray<int32_t> GetPingServerIndexList; // 0x3c8
};

struct UMediaTimeStampInfo : UObject {
	FTimespan Time; // 0x28
	int64_t SequenceIndex; // 0x30
};

struct UHorizontalBoxSlot : UPanelSlot {
	FMargin Padding; // 0x40
	FSlateChildSize Size; // 0x50
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UShapeComponent : UPrimitiveComponent {
	UBodySetup* ShapeBodySetup; // 0x488
	UNavAreaBase* AreaClass; // 0x490
	FColor ShapeColor; // 0x498
	char bDrawOnlyIfSelected : 1; // 0x49c
	char bShouldCollideWhenPlacing : 1; // 0x49c
	char bDynamicObstacle : 1; // 0x49c
};

struct UInputBehaviorSet : UObject {
	TArray<FBehaviorInfo> Behaviors; // 0x28
};

struct UAchievementRewardTitle : UUserWidget {
	UTextBlock* TbTitle; // 0x260
};

struct UMailLogicComponent : ULogicComponentBase {
	TSet<FMailContent> m_MailArr; // 0xd0
};

struct UNiagaraDataInterfaceVectorCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve XCurve; // 0x70
	FRichCurve YCurve; // 0xf0
	FRichCurve ZCurve; // 0x170
};

struct UEditableText : UWidget {
	FText Text; // 0x108
	FDelegate TextDelegate; // 0x120
	FText HintText; // 0x130
	FDelegate HintTextDelegate; // 0x148
	FEditableTextStyle WidgetStyle; // 0x158
	USlateWidgetStyleAsset* Style; // 0x378
	USlateBrushAsset* BackgroundImageSelected; // 0x380
	USlateBrushAsset* BackgroundImageComposing; // 0x388
	USlateBrushAsset* CaretImage; // 0x390
	FSlateFontInfo Font; // 0x398
	FSlateColor ColorAndOpacity; // 0x3f0
	bool IsReadOnly; // 0x418
	bool IsPassword; // 0x419
	float MinimumDesiredWidth; // 0x41c
	bool IsCaretMovedWhenGainFocus; // 0x420
	bool SelectAllTextWhenFocused; // 0x421
	bool RevertTextOnEscape; // 0x422
	bool ClearKeyboardFocusOnCommit; // 0x423
	bool SelectAllTextOnCommit; // 0x424
	bool AllowContextMenu; // 0x425
	EVirtualKeyboardType KeyboardType; // 0x426
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x427
	EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0x428
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x429
	ETextJustify Justification; // 0x42a
	FShapedTextOptions ShapedTextOptions; // 0x42b
	FMulticastInlineDelegate OnTextChanged; // 0x430
	FMulticastInlineDelegate OnTextCommitted; // 0x440
};

struct UParticleModuleVectorFieldRotationRate : UParticleModuleVectorFieldBase {
	FVector RotationRate; // 0x30
};

struct UGeneralShortCutSlot : UUserWidget {
	FText ShortCutText; // 0x260
	FName KeyName; // 0x278
	EGeneralShortCutSlotType GeneralShortCutSlotType; // 0x280
	UGeneralShortCutPanel* ChildGeneralShortCutPanelTemplate; // 0x288
	char bClickedRemoveFromParent : 1; // 0x290
	FSlateBrush ShortCutBrush[0x1c]; // 0x298
	UImage* ShowStateImage; // 0x1178
	UTextBlock* TbKey; // 0x1180
	UTextBlock* ShortCutTextBlock; // 0x1188
	UTextBlock* TbDifferent; // 0x1190
	UImage* ShortCutImg; // 0x1198
	char bIsClicked : 1; // 0x11a8
};

struct UUIWSGerstnerWaterWaves : UWaterWaves {
	UUIWSGerstnerWaterWaveGeneratorBase* GerstnerWaveGenerator; // 0x28
	TArray<FUIWSGerstnerWave> GerstnerWaves; // 0x30
	float MaxWaveHeight; // 0x40
};

struct ASGStructureBanner : ASGStructure {
	USceneComponent* MyBannerRootComponent; // 0xb98
	USkeletalMeshComponent* SkeletalMesh; // 0xba0
	float BannerLength; // 0xba8
	float BannerUpSpeed; // 0xbac
	float BannerDownSpeed; // 0xbb0
	float EffectPrestigePercent; // 0xbb4
	int32_t AfterFinishToDestoryTime; // 0xbb8
	char bSwitching : 1; // 0xbbc
	int8_t BannerSwitchState; // 0xbbd
	int8_t ClientBannerSwitchState; // 0xbbe
	char bInitLoc : 1; // 0xbbf
	float CurrentLocZ; // 0xbc0
	FVector BannerDefaultRelativeLoc; // 0xbc4
	char bFinished : 1; // 0xbd0
	TArray<TWeakObjectPtr<ABaseCharacter>> CharacterInBannerArea; // 0xbd8
	float MoveSecond; // 0xbe8
	double LifeTime; // 0xbf0
	float PlayerBannerWeiWangMulAdd; // 0xbf8
};

struct UInteractiveToolPropertySet : UObject {
	UInteractiveToolPropertySet* CachedProperties; // 0x38
	bool bIsPropertySetEnabled; // 0x40
};

struct UBehaviorTreeComponent : UBrainComponent {
	TArray<UBTNode*> NodeInstances; // 0x138
	UBehaviorTree* DefaultBehaviorTreeAsset; // 0x288
};

struct UParticleModuleSpawnPerUnit : UParticleModuleSpawnBase {
	float UnitScalar; // 0x38
	float MovementTolerance; // 0x3c
	FRawDistributionFloat SpawnPerUnit; // 0x40
	float MaxFrameDistance; // 0x70
	char bIgnoreSpawnRateWhenMoving : 1; // 0x74
	char bIgnoreMovementAlongX : 1; // 0x74
	char bIgnoreMovementAlongY : 1; // 0x74
	char bIgnoreMovementAlongZ : 1; // 0x74
};

struct UAchievementRow : UUserWidget {
	UAchievementRewardDamageMultiply* RewardDamageMultiplyClass; // 0x260
	UAchievementRewardTitle* RewardTitleClass; // 0x268
	UAchievementConditionWidget* IntConditionClass; // 0x270
	UAchievementConditionWidget* Uint8ConditionClass; // 0x278
	UAchievementConditionWidget* FloatConditionClass; // 0x280
	UAchievementConditionWidget* BoolConditionClass; // 0x288
	USGAchievement* BindAchievementConfig; // 0x2d8
	UTextBlock* TbAccomplishTime; // 0x2e0
	UTextBlock* TbTitle; // 0x2e8
	UTextBlock* TbDescription; // 0x2f0
	UTextBlock* TbHonorPoint; // 0x2f8
	UHorizontalBox* HbHonorPoint; // 0x300
	UUniformGridPanel* UGPRewardTitle; // 0x308
	UUniformGridPanel* UGPConditions; // 0x310
	UUniformGridPanel* UGPDamageMultiply; // 0x318
	UImage* ImgIcon; // 0x320
	UTextBlock* TbExp; // 0x328
	UHorizontalBox* HbExp; // 0x330
	UTextBlock* TbCopper; // 0x338
	UHorizontalBox* HbCopper; // 0x340
	UImage* ImgGuildImageTexture; // 0x348
	UCanvasPanel* UnlockImage; // 0x350
};

struct UDistributionFloatUniformCurve : UDistributionFloat {
	FInterpCurveVector2D ConstantCurve; // 0x38
};

struct UInterpTrackFloatProp : UInterpTrackFloatBase {
	FName PropertyName; // 0x90
};

struct UBTTask_WaitFollow : UBTTask_SGBlueprintBase {
	FBlackboardKeySelector BBKey_DesiredLocation; // 0xc0
	float FollowDistance; // 0xe8
	char bUpdateDesiredLocationOnActor : 1; // 0xec
	char bUpdateDesiredLocationOnFormation : 1; // 0xec
};

struct UEnvQueryTest_GameplayTags : UEnvQueryTest {
	FGameplayTagQuery TagQueryToMatch; // 0x1f8
	bool bUpdatedToUseQuery; // 0x240
	EGameplayContainerMatchType TagsToMatch; // 0x241
	FGameplayTagContainer GameplayTags; // 0x248
};

struct UCompositionGraphCaptureProtocol : UMovieSceneImageCaptureProtocolBase {
	FCompositionGraphCapturePasses IncludeRenderPasses; // 0x58
	bool bCaptureFramesInHDR; // 0x68
	int32_t HDRCompressionQuality; // 0x6c
	EHDRCaptureGamut CaptureGamut; // 0x70
	FSoftObjectPath PostProcessingMaterial; // 0x78
	bool bDisableScreenPercentage; // 0x90
	UMaterialInterface* PostProcessingMaterialPtr; // 0x98
};

struct UBTTask_ClearFocus : UBTTask_SGBlueprintBase {
	char bUpdateControlRotationOnFormation : 1; // 0xc0
};

struct UNotificationTaxSlot : UUserWidget {
	UImage* Image_2; // 0x268
	UImage* Image_3; // 0x270
	UImage* Image_4; // 0x278
	UTextBlock* TextBlock_2; // 0x280
	UTextBlock* TextBlock_3; // 0x288
	UTextBlock* TextBlock_4; // 0x290
	UTextBlock* TextBlock_5; // 0x298
};

struct USynthComponentToneGenerator : USynthComponent {
	float Frequency; // 0x6d0
	float Volume; // 0x6d4
};

struct UN_ShortCutPanel : UUserWidget {
	UHorizontalBox* ShortCutBox; // 0x260
	UCanvasPanel* VehicleShortCutPanel; // 0x268
	UVehicleShortCutSlot* VehicleShortCutSlot; // 0x270
	UButton* PageUp; // 0x278
	UButton* PageDown; // 0x280
	UTextBlock* PageText; // 0x288
	USGUI* RootSGUI; // 0x290
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x298
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x2a0
	TArray<UN_ShortCutSlot*> InventorySlotList; // 0x2a8
	UN_ShortCutSlot* ShortCutSlotClass; // 0x2b8
	int32_t MainHandWeaponIndex; // 0x2c0
	int32_t OffHandWeaponIndex; // 0x2c4
	int32_t CurPage; // 0x2cc
	UProgressBar* WeightProgress; // 0x2d0
	UTextBlock* WeightText; // 0x2d8
};

struct UUniformGridSlot : UPanelSlot {
	EHorizontalAlignment HorizontalAlignment; // 0x38
	EVerticalAlignment VerticalAlignment; // 0x39
	int32_t Row; // 0x3c
	int32_t Column; // 0x40
};

struct USmoothWeightMapSetProperties : UWeightMapSetProperties {
	float MinSmoothMultiplier; // 0x80
};

struct UMiniMapImageFilter : UUserWidget {
	FText FilterName; // 0x260
	TArray<FImageFilterParamConfig> ImageFilterConfigs; // 0x278
	UCheckBox* CbFilter; // 0x298
	UTextBlock* TbFilterName; // 0x2a0
};

struct UMaterialBillboardComponent : UPrimitiveComponent {
	TArray<FMaterialSpriteElement> Elements; // 0x488
};

struct UEditNormalsToolProperties : UInteractiveToolPropertySet {
	bool bRecomputeNormals; // 0x60
	ENormalCalculationMethod NormalCalculationMethod; // 0x61
	bool bFixInconsistentNormals; // 0x62
	bool bInvertNormals; // 0x63
	ESplitNormalMethod SplitNormalMethod; // 0x64
	float SharpEdgeAngleThreshold; // 0x68
	bool bAllowSharpVertices; // 0x6c
};

struct UTileView : UListView {
	float EntryHeight; // 0x368
	float EntryWidth; // 0x36c
	EListItemAlignment TileAlignment; // 0x370
	bool bWrapHorizontalNavigation; // 0x371
};

struct UN_ItemFunctionSlot : UN_InventorySlot {
	UImage* CraftingImage; // 0xf80
	UProgressBar* CraftingProgressBar; // 0xf88
};

struct USourceEffectChorusPreset : USoundEffectSourcePreset {
	FSourceEffectChorusSettings Settings; // 0x108
};

struct USourceEffectMidSideSpreaderPreset : USoundEffectSourcePreset {
	FSourceEffectMidSideSpreaderSettings Settings; // 0x98
};

struct AGameplayAbilityTargetActor_Radius : AGameplayAbilityTargetActor {
	float Radius; // 0x428
};

struct UMaterialExpressionWorldPosition : UMaterialExpression {
	EWorldPositionIncludedOffsets WorldPositionShaderOffset; // 0x40
};

struct UAnimComposite : UAnimCompositeBase {
	FAnimTrack AnimationTrack; // 0xa8
};

struct UN_QuickHelpSlot : UUserWidget {
	UTextBlock* QuickSlotText; // 0x260
	UTextBlock* AddText; // 0x268
	UBorder* QuickSloBorder; // 0x270
	UImage* MouseButtonImage; // 0x278
	UTextBlock* HelpText; // 0x280
	TSoftObjectPtr<UTexture2D> LeftMouseTexture2D; // 0x288
	TSoftObjectPtr<UTexture2D> MiddleMouseTexture2D; // 0x2b0
	TSoftObjectPtr<UTexture2D> RightMouseTexture2D; // 0x2d8
};

struct UPubCommonField : UObject {
	UPubSwitchBlockLogic* PubSwitchBlockClass; // 0x30
	UPubSwitchBlockLogic* SGPubSwitchBlockLogic; // 0x38
	UPubPlayerStateBlockLogic* PubPlayerStateBlockClass; // 0x40
	UPubPlayerStateBlockLogic* SGPubPlayerStateBlockLogic; // 0x48
	UPubOfficialSealBlockLogic* PubOfficialSealBlockClass; // 0x50
	UPubOfficialSealBlockLogic* SGPubOfficialSealBlockLogic; // 0x58
	UPubBattleFieldBlockLogic* PubBattleFieldBlockClass; // 0x60
	UPubBattleFieldBlockLogic* SGPubBattleFieldBlockLogic; // 0x68
	UPubServerStateBlockLogic* PubServerStateBlockClass; // 0x70
	UPubServerStateBlockLogic* SGPubServerStateBlockLogic; // 0x78
	UPubOfficialTaxBlockLogic* PubOfficialDataBlockLogicClass; // 0x80
	UPubOfficialTaxBlockLogic* SGPubOfficialTaxBlockLogic; // 0x88
	UPubWorshipBlockLogic* PubWorshipLogicClass; // 0x90
	UPubWorshipBlockLogic* SGPubWorshipBlockLogic; // 0x98
};

struct UTipsGuildIconSlot : USGUI {
	UImage* Image_GuildIcon; // 0x2d8
};

struct UDLSSOverrideSettings : UObject {
	EDLSSSettingOverride EnableDLSSInEditorViewportsOverride; // 0x28
	EDLSSSettingOverride EnableScreenpercentageManipulationInDLSSEditorViewportsOverride; // 0x29
	EDLSSSettingOverride EnableDLSSInPlayInEditorViewportsOverride; // 0x2a
	bool bShowDLSSIncompatiblePluginsToolsWarnings; // 0x2b
	EDLSSSettingOverride ShowDLSSSDebugOnScreenMessages; // 0x2c
};

struct UUI_MakeAppearance : USGUI {
	ACreateRoleCameraActor* LobbyCreateRoleCameraTemplate; // 0x2d8
	ACreateRoleCameraActor* PrivateCreateRoleCameraTemplate; // 0x2e0
	FTransform LobbyPreviewMeshTransform; // 0x2f0
	FTransform PreviewMeshTransform; // 0x320
	UVoiceRadio* VoiceRadioTemplate; // 0x350
	UVoiceAudition* VoiceAuditionTemplate; // 0x358
	UTattooLayerRadio* TattooLayerRadioTemplate; // 0x360
	FCreateInfo DefaultCreateInfo; // 0x368
	ASGAudioManager* SGAudioManager; // 0x4e8
	TMap<FName, UUI_SliderView*> MorphSliderViewMap; // 0x4f0
	char IsFreeCamera : 1; // 0x540
	UUI_PreviewMeshInteraction* PreviewMeshInteraction; // 0x558
	UButton* BtnFreeCamera; // 0x560
	UTextBlock* TbFreeCamera; // 0x568
	UUI_ColorSelector* HairColorSelector; // 0x570
	UUI_ColorSelector* MoustacheColorSelector; // 0x578
	UPaletteWidget* SkinPaletteCanvas; // 0x580
	UButton* BtnRandomTemplate; // 0x588
	UButton* BtnSaveTemplate; // 0x590
	UButton* BtnLoadTemplate; // 0x598
	UButton* BtnReset; // 0x5a0
	UUI_RadioButtonView* VoiceView; // 0x5a8
	UUI_SliderView* VoicePitchSlider; // 0x5b0
	UUniformGridPanel* UGPAuditionVoice; // 0x5b8
	UUI_SliderView* HeightSlider; // 0x5c0
	UUI_SliderView* DirtSlider; // 0x5c8
	UUI_SliderView* MuscleSlider; // 0x5d0
	UUI_SliderView* BodyFatSlider; // 0x5d8
	UFeatureListView* FeatureListView; // 0x5e0
	UHairListView* HairListView; // 0x5e8
	UMoustacheListView* MoustacheListView; // 0x5f0
	UTattooListView* TattooListView; // 0x5f8
	UUI_RadioButtonView* TattooPartsView; // 0x600
	UTattooLayerRadioView* TattooLayerView; // 0x608
	UUI_SliderView* TattooUMove; // 0x610
	UUI_SliderView* TattooVMove; // 0x618
	UUI_SliderView* TattooUSize; // 0x620
	UUI_SliderView* TattooVSize; // 0x628
	UUI_SliderView* TattooRotation; // 0x630
	UUI_SliderView* TattooAlpha; // 0x638
	UUI_RadioButtonView* BodyPanelView; // 0x640
	UUI_RadioButtonView* FacePanelView; // 0x648
	UUniformGridPanel* UGPTattoo; // 0x650
	UNavigationRadioView* LeftNavigationView; // 0x658
};

struct UMarkPOITips : UMiniMapPOITips {
	UTextBlock* TbMarkName; // 0x288
};

struct ULandscapeSettings : UDeveloperSettings {
	int32_t MaxNumberOfLayers; // 0x38
};

struct UInflateBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct UParticleModuleLocationSkelVertSurface : UParticleModuleLocationBase {
	ELocationSkelVertSurfaceSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	char bUpdatePositionEachFrame : 1; // 0x40
	char bOrientMeshEmitters : 1; // 0x40
	char bInheritBoneVelocity : 1; // 0x40
	float InheritVelocityScale; // 0x44
	FName SkelMeshActorParamName; // 0x48
	TArray<FName> ValidAssociatedBones; // 0x50
	char bEnforceNormalCheck : 1; // 0x60
	FVector NormalToCompare; // 0x64
	float NormalCheckToleranceDegrees; // 0x70
	float NormalCheckTolerance; // 0x74
	TArray<int32_t> ValidMaterialIndices; // 0x78
	char bInheritVertexColor : 1; // 0x88
	char bInheritUV : 1; // 0x88
	uint32_t InheritUVChannel; // 0x8c
};

struct UAnimationDataSourceRegistry : UObject {
	TMap<FName, TWeakObjectPtr<UObject>> DataSources; // 0x28
};

struct USynth2DSlider : UWidget {
	float ValueX; // 0x108
	float ValueY; // 0x10c
	FDelegate ValueXDelegate; // 0x110
	FDelegate ValueYDelegate; // 0x120
	FSynth2DSliderStyle WidgetStyle; // 0x130
	FLinearColor SliderHandleColor; // 0x3e8
	bool IndentHandle; // 0x3f8
	bool Locked; // 0x3f9
	float StepSize; // 0x3fc
	bool IsFocusable; // 0x400
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x408
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x418
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x428
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x438
	FMulticastInlineDelegate OnValueChangedX; // 0x448
	FMulticastInlineDelegate OnValueChangedY; // 0x458
};

struct AFieldSystemActor : AActor {
	UFieldSystemComponent* FieldSystemComponent; // 0x310
};

struct UAbilityTask_WaitGameplayEffectApplied : UAbilityTask {
	UAbilitySystemComponent* ExternalOwner; // 0x1a8
};

struct UProceduralSphereToolProperties : UProceduralShapeToolProperties {
	float Radius; // 0x70
	int32_t LatitudeSlices; // 0x74
	int32_t LongitudeSlices; // 0x78
};

struct UWBP_SettingRadioButtonView_C : UUI_RadioButtonView {
	UWBP_RadioSettingButton_C* RpbKeySetting; // 0x2f0
	UWBP_RadioSettingButton_C* RpbSystemSetting; // 0x2f8
};

struct UGameplayCueNotify_HitImpact : UGameplayCueNotify_Static {
	USoundBase* Sound; // 0x40
	UParticleSystem* ParticleSystem; // 0x48
};

struct AARSharedWorldGameState : AGameState {
	TArray<char> PreviewImageData; // 0x390
	TArray<char> ARWorldData; // 0x3a0
	int32_t PreviewImageBytesTotal; // 0x3b0
	int32_t ARWorldBytesTotal; // 0x3b4
	int32_t PreviewImageBytesDelivered; // 0x3b8
	int32_t ARWorldBytesDelivered; // 0x3bc
};

struct UScrollBox : UPanelWidget {
	FScrollBoxStyle WidgetStyle; // 0x120
	FScrollBarStyle WidgetBarStyle; // 0x348
	USlateWidgetStyleAsset* Style; // 0x818
	USlateWidgetStyleAsset* BarStyle; // 0x820
	EOrientation Orientation; // 0x828
	ESlateVisibility ScrollBarVisibility; // 0x829
	EConsumeMouseWheel ConsumeMouseWheel; // 0x82a
	FVector2D ScrollbarThickness; // 0x82c
	FMargin ScrollbarPadding; // 0x834
	bool AlwaysShowScrollbar; // 0x844
	bool AlwaysShowScrollbarTrack; // 0x845
	bool AllowOverscroll; // 0x846
	bool bAnimateWheelScrolling; // 0x847
	EDescendantScrollDestination NavigationDestination; // 0x848
	float NavigationScrollPadding; // 0x84c
	EScrollWhenFocusChanges ScrollWhenFocusChanges; // 0x850
	bool bAllowRightClickDragScrolling; // 0x851
	float WheelScrollMultiplier; // 0x854
	FMulticastInlineDelegate OnUserScrolled; // 0x858
};

struct AARSharedWorldGameMode : AGameMode {
	int32_t BufferSizePerChunk; // 0x3f8
};

struct UGlobalMapActorTips : USGToolTipWidget {
	UMaterialInterface* GuildIconMat; // 0x288
	float MinRequestTime; // 0x290
	UImage* ImgIcon; // 0x298
	UTextBlock* TbBaseActorName; // 0x2a0
	UTextBlock* TbOccupyActorName; // 0x2a8
	UCanvasPanel* OccupyInfoCanvas; // 0x2b0
	UCanvasPanel* BaseInfoCanvas; // 0x2b8
	UVerticalBox* VbOccupyInfo; // 0x2c0
	UTextBlock* TbGuildName; // 0x2c8
	UTextBlock* TbGuildOwnerName; // 0x2d0
	UTextBlock* TbGuildOwnerJob; // 0x2d8
	UTextBlock* TbGuildLevel; // 0x2e0
	UTextBlock* TbMemberNum; // 0x2e8
	UTextBlock* TbOccupyGuanAiNum; // 0x2f0
	UTextBlock* TbOccupyCityNum; // 0x2f8
	UTextBlock* TbOccupyXianChengNum; // 0x300
	UHorizontalBox* HbAllianceName; // 0x308
	UTextBlock* TbAllianceName; // 0x310
	UHorizontalBox* HbAllianceOwnerName; // 0x318
	UTextBlock* TbAllianceOwnerName; // 0x320
	UCanvasPanel* LoadingCanvas; // 0x328
	AGlobalMapActor* GlobalMapActor; // 0x330
	float RequestTime; // 0x338
	char bRequested : 1; // 0x33c
	FOfficalSealInfo BindOfficalSealInfo; // 0x340
	UMaterialInstanceDynamic* DynamicGuildIconInstance; // 0x390
};

struct UStructureOccupyInfoHUD : UStructureInfoHUD {
	UStructureInfoHUDSlot* OccupationRemainingTimeText; // 0x360
	UStructureInfoHUDSlot* ProtectingText; // 0x368
	UStructureInfoHUDSlot* NoProtectionText; // 0x370
	UStructureInfoHUDSlot* LifeSpanText; // 0x378
	TWeakObjectPtr<ASGStructureOccupy> BindStructureOccupy; // 0x380
};

struct UMonoWaveTableSynthPreset : UObject {
	FString PresetName; // 0x28
	char bLockKeyframesToGridBool : 1; // 0x38
	int32_t LockKeyframesToGrid; // 0x3c
	int32_t WaveTableResolution; // 0x40
	TArray<FRuntimeFloatCurve> WaveTable; // 0x48
	char bNormalizeWaveTables : 1; // 0x58
};

struct UWindowTitleBarArea : UContentWidget {
	bool bWindowButtonsEnabled; // 0x120
	bool bDoubleClickTogglesFullscreen; // 0x121
};

struct ASGCameraActor : ACameraActor {
	USGViewportClient* SGViewportClient; // 0x8a0
};

struct UParticleModuleAccelerationBase : UParticleModule {
	char bAlwaysInWorldSpace : 1; // 0x30
};

struct UGameHpBar : UUserWidget {
	FName HPProgressBarName; // 0x260
	FName HPImageName; // 0x268
	FName MaxHPLossImageName; // 0x270
	FName HPGridImageName; // 0x278
	FName WillDeadProgressBarName; // 0x280
	UMaterialInterface* HPMaterial; // 0x288
	UMaterialInterface* HPGridMaterial; // 0x290
	float PbHPMinPercent; // 0x298
	float PbHPMaxPercent; // 0x29c
	char bShowWillDead : 1; // 0x2a0
	char bShowMaxHPLoss : 1; // 0x2a0
	FLinearColor ImgHPFriendHPColor; // 0x2a4
	FLinearColor ImgHPEnemyHPColor; // 0x2b4
	FLinearColor ImgMaxHPLossFriendHPColor; // 0x2c4
	FLinearColor ImgMaxHPLossEnemyHPColor; // 0x2d4
	char bIsFriend : 1; // 0x2e4
	UMaterialInstanceDynamic* DynamicHPMat; // 0x340
	UMaterialInstanceDynamic* DynamicHPGridMat; // 0x348
};

struct UGlobalMap_WorshipItem : UUserWidget {
	UImage* ImgWorshipIcon; // 0x260
	UTextBlock* TbWorshipInfo; // 0x268
	UTextBlock* TbRemainTime; // 0x270
};

struct UUI_SelectRole : USGUI {
	ACreateRoleCameraActor* SelectRoleCameraTemplate; // 0x2d8
	UDeleteRoleDialog* DeleteRoleDialogTemplate; // 0x2e0
	UTextBlock* TbServerName; // 0x2f0
	UTextBlock* TbName; // 0x2f8
	UDeleteRoleDialog* DeleteRoleDialog; // 0x300
	ASGPlayerController* SGPlayerController; // 0x308
};

struct AGameStateBase : AInfo {
	AGameModeBase* GameModeClass; // 0x310
	AGameModeBase* AuthorityGameMode; // 0x318
	ASpectatorPawn* SpectatorClass; // 0x320
	TArray<APlayerState*> PlayerArray; // 0x328
	bool bReplicatedHasBegunPlay; // 0x338
	double ReplicatedWorldTimeSeconds; // 0x340
	double ServerWorldTimeSecondsDelta; // 0x348
	float ServerWorldTimeSecondsUpdateFrequency; // 0x350
};

struct UMagicLeapSettings : UObject {
	bool bEnableZI; // 0x28
	bool bUseVulkanForZI; // 0x29
	bool bUseMLAudioForZI; // 0x2a
};

struct UUI_Notification : USGUI {
	UNotificationSlot* NotificationTemplate; // 0x2d8
	UVerticalBox* LeftNotifyPanel; // 0x310
	UVerticalBox* UpNotifyPanel; // 0x318
	UVerticalBox* RightNotifyPanel; // 0x320
	UVerticalBox* BottomNotifyPanel; // 0x328
	UUI_SystemNotify* SystemNotifySlot; // 0x330
	UUI_SystemNotifyPopup* SystemNotifyPopupSlot; // 0x338
	FString LeftString; // 0x350
	FString RightString; // 0x360
	FSlateColor LeftTextColor; // 0x370
	UDataTable* DefaultRightStringDataTable; // 0x398
	UDataTable* TipsTextDataTable; // 0x3a0
	FText SkillText[0x33]; // 0x3a8
	UNotificationFightSlot* NotificationFightTemplate; // 0x870
	float FightDisplayTime; // 0x878
	TSoftObjectPtr<UTexture2D> KillTexture; // 0x880
	TSoftObjectPtr<UTexture2D> DamageHeadTex; // 0x8a8
	TSoftObjectPtr<UTexture2D> StunTex; // 0x8d0
	TSoftObjectPtr<UTexture2D> DamageTexture[0x4]; // 0x8f8
	FLinearColor DamageHeadColor; // 0x998
	FLinearColor DamageYellowColor; // 0x9a8
	FVector2D BattleUpNotifyPos; // 0x9b8
	UNotificationTaxSlot* NotificationTaxTemplate; // 0xa00
	float TaxDisplayTime; // 0xa08
	TSoftObjectPtr<UTexture2D> XianLingTex; // 0xa10
	TSoftObjectPtr<UTexture2D> TaiShouTex; // 0xa38
	TSoftObjectPtr<UTexture2D> CiShiTex; // 0xa60
	TSoftObjectPtr<UMaterialInstance> GuildMatIns; // 0xa88
};

struct UMaterialExpressionLogarithm10 : UMaterialExpression {
	FExpressionInput X; // 0x40
};

struct UTextRenderComponent : UPrimitiveComponent {
	FText Text; // 0x488
	UMaterialInterface* TextMaterial; // 0x4a0
	UFont* Font; // 0x4a8
	EHorizTextAligment HorizontalAlignment; // 0x4b0
	EVerticalTextAligment VerticalAlignment; // 0x4b1
	FColor TextRenderColor; // 0x4b4
	float XScale; // 0x4b8
	float YScale; // 0x4bc
	float WorldSize; // 0x4c0
	float InvDefaultSize; // 0x4c4
	float HorizSpacingAdjust; // 0x4c8
	float VertSpacingAdjust; // 0x4cc
	char bAlwaysRenderAsText : 1; // 0x4d0
};

struct USGGameDataConditionReward : UObject {
	UDataTable* ConfigDataTable; // 0x28
	FRewardConditionParamGroup RewardConditionParam; // 0x30
	TMap<EStatisticsSetParamReference, FRewardConditionParamMap> RewardConditionMap; // 0x48
};

struct UMaterialExpressionConstant3Vector : UMaterialExpression {
	FLinearColor Constant; // 0x40
};

struct UMovieSceneSpawnTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
	FGuid ObjectGuid; // 0x88
};

struct UGuildAuthorityComboBox : UUserWidget {
	FMulticastInlineDelegate OnSelectionChanged; // 0x260
};

struct UProceduralRectangleToolProperties : UProceduralShapeToolProperties {
	float Width; // 0x70
	float Depth; // 0x74
	int32_t WidthSubdivisions; // 0x78
	int32_t DepthSubdivisions; // 0x7c
};

struct UPhysicsThrusterComponent : USceneComponent {
	float ThrustStrength; // 0x208
};

struct UAttack_AnimNotifyState : UAnimNotifyState {
	EAttackSocketType Enum_AttackSocketType; // 0x30
	float AttackCoefficient; // 0x34
	char bOpenAttackTrace : 1; // 0x38
	FString AttackTag; // 0x40
	char IsOffHandWeapon : 1; // 0x50
	char IsKickAttack : 1; // 0x50
};

struct UGuildStorePanel : USGUI {
	UGuildStoreDetailPanel* GuildStoreDetailPanel; // 0x2d8
	UGuildStoreHorsePanel* GuildStoreHorsePanel; // 0x2e0
	UGuildStoreGeneralPanel* GuildStoreGeneralPanel; // 0x2e8
	UGuildStoreItemPanel* GuildStoreItemPanel; // 0x2f0
};

struct UMagicLeapTouchpadGesturesComponent : UActorComponent {
	FMulticastInlineDelegate OnTouchpadGestureStart; // 0xc8
	FMulticastInlineDelegate OnTouchpadGestureContinue; // 0xd8
	FMulticastInlineDelegate OnTouchpadGestureEnd; // 0xe8
};

struct UStableDetailPanel : UUserWidget {
	UCanvasPanel* OtherUsingPanel; // 0x260
	UTextBlock* OtherUsingText; // 0x268
	UOptionButton* StableFeedButton; // 0x270
	UOptionButton* StableRebornButton; // 0x278
	UOptionButton* StableTrainerButton; // 0x280
	UStableFeedPanel* StableFeedPanel; // 0x288
	UStableRebornPanel* StableRebornPanel; // 0x290
	UStableTrainerPanel* StableTrainerPanel; // 0x298
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x2a8
};

struct UMaterialInstanceConstant : UMaterialInstance {
	UPhysicalMaterialMask* PhysMaterialMask; // 0x360
};

struct ULineSetComponent : UMeshComponent {
	UMaterialInterface* LineMaterial; // 0x4b0
	FBoxSphereBounds Bounds; // 0x4b8
	bool bBoundsDirty; // 0x4d4
};

struct USteamNetConnection : UIpConnection {
	bool bIsPassthrough; // 0x1b90
};

struct UWidget : UVisual {
	UPanelSlot* Slot; // 0x28
	FDelegate bIsEnabledDelegate; // 0x30
	FText ToolTipText; // 0x40
	FDelegate ToolTipTextDelegate; // 0x58
	UWidget* ToolTipWidget; // 0x68
	FDelegate ToolTipWidgetDelegate; // 0x70
	FDelegate VisibilityDelegate; // 0x80
	FWidgetTransform RenderTransform; // 0x90
	FVector2D RenderTransformPivot; // 0xac
	char bIsVariable : 1; // 0xb4
	char bCreatedByConstructionScript : 1; // 0xb4
	char bIsEnabled : 1; // 0xb4
	char bOverride_Cursor : 1; // 0xb4
	USlateAccessibleWidgetData* AccessibleWidgetData; // 0xb8
	char bIsVolatile : 1; // 0xc0
	EMouseCursor Cursor; // 0xc1
	EWidgetClipping Clipping; // 0xc2
	ESlateVisibility Visibility; // 0xc3
	float RenderOpacity; // 0xc4
	UWidgetNavigation* Navigation; // 0xc8
	EFlowDirectionPreference FlowDirectionPreference; // 0xd0
	TArray<UPropertyBinding*> NativeBindings; // 0xf8
};

struct UBTTaskNode : UBTNode {
	TArray<UBTService*> Services; // 0x58
	char bIgnoreRestartSelf : 1; // 0x68
};

struct UUI_ChatSetting : UUserWidget {
	UUniformGridPanel* AllSettingsGrid; // 0x260
	UUI_ChatSettingSlot* SystemChatSettingSlot; // 0x268
	UUI_ChatSettingSlot* NearbyChatSettingSlot; // 0x270
	UUI_ChatSettingSlot* XianChatSettingSlot; // 0x278
	UUI_ChatSettingSlot* JunChatSettingSlot; // 0x280
	UUI_ChatSettingSlot* WorldChatSettingSlot; // 0x288
	UUI_ChatSettingSlot* GuildChatSettingSlot; // 0x290
	UUI_ChatSettingSlot* AllianceChatSettingSlot; // 0x298
	UUI_ChatSettingSlot* PrivateChatSettingSlot; // 0x2a0
	TArray<FSlateColor> SettingSlotColorArray; // 0x2a8
	TArray<FName> SettingSlotNameArray; // 0x2b8
};

struct UMaterialFunction : UMaterialFunctionInterface {
	FString Description; // 0x40
	char bExposeToLibrary : 1; // 0x50
	char bPrefixParameterNames : 1; // 0x50
};

struct UParticleModuleBeamModifier : UParticleModuleBeamBase {
	BeamModifierType ModifierType; // 0x30
	FBeamModifierOptions PositionOptions; // 0x34
	FRawDistributionVector position; // 0x38
	FBeamModifierOptions TangentOptions; // 0x80
	FRawDistributionVector Tangent; // 0x88
	char bAbsoluteTangent : 1; // 0xd0
	FBeamModifierOptions StrengthOptions; // 0xd4
	FRawDistributionFloat Strength; // 0xd8
};

struct ASGStructureTrap : ASGStructure {
	ASG_AnimalsCharacter* TrapCharacter; // 0xba0
	TArray<FStructureTrapCharacters> TrapCharacterTemplate; // 0xba8
	char bUsed : 1; // 0xbb8
	char bReleased : 1; // 0xbb8
	char bGetAnimalItem : 1; // 0xbb8
	int32_t TrapTime; // 0xbbc
	int32_t TrapResetTime; // 0xbc8
	int32_t SearchAnimalInterval; // 0xbd8
	int32_t SearchAnimalRange; // 0xbdc
	int32_t AnimalToTrapTime; // 0xbe0
	int64_t UsedTrapTime; // 0xc00
};

struct UWeatherTransInterpData : UWeatherInterpData {
	FWeatherFloatTrack RainIntensity; // 0x50
	FWeatherFloatTrack RainDropSpeed; // 0xf0
	FWeatherFloatTrack RainDensity; // 0x190
	FWeatherFloatTrack WetLevel; // 0x230
	FWeatherFloatTrack PuddleNoiseExponent; // 0x2d0
	FWeatherFloatTrack PuddleIntensity; // 0x370
	FWeatherFloatTrack PuddleSpeed; // 0x410
	FWeatherFloatTrack RippleIntensity; // 0x4b0
	FWeatherFloatTrack RippleSpeed; // 0x550
	FWeatherFloatTrack FlowIntensity; // 0x5f0
	FWeatherFloatTrack VolumeFogIntensity; // 0x690
	FWeatherFloatTrack VolumeFogDistance; // 0x730
	FWeatherFloatTrack VolumeFogFallOff; // 0x7d0
	FWeatherFloatTrack VolumeFogDistanceFar; // 0x870
	FWeatherFloatTrack VolumeFogFallOffFar; // 0x910
	FWeatherFloatTrack VolumeFogFarAmount; // 0x9b0
	FWeatherLinearColorTrack VolumeFogColor; // 0xa50
	FWeatherLinearColorTrack VolumeFogColor2; // 0xc78
	FWeatherLinearColorTrack VolumeFogEmissiveColor; // 0xea0
	FWeatherFloatTrack VolumeFogScale; // 0x10c8
	FWeatherLinearColorTrack VolumeFogSpeed1X; // 0x1168
	FWeatherFloatTrack SandStormsIntensity; // 0x1390
	FWeatherLinearColorTrack SandStormsColor; // 0x1430
	FWeatherFloatTrack SandStormsAlpha; // 0x1658
	FWeatherFloatTrack SnowParticleIndex; // 0x16f8
};

struct ASG_RoadPath : AActor {
	USceneComponent* CustomSceneComponent; // 0x310
	USplineComponent* CustomRoadPathComponent; // 0x318
	char bDrawDebugPath : 1; // 0x320
	FName RoadPathName; // 0x324
	TArray<FVector> RoadPathLocations; // 0x330
};

struct UMeshSculptToolBase : UMeshSurfacePointTool {
	USculptBrushProperties* BrushProperties; // 0xc0
	UWorkPlaneProperties* GizmoProperties; // 0xc8
	TMap<int32_t, UMeshSculptBrushOpProps*> BrushOpPropSets; // 0x1b0
	TMap<int32_t, UMeshSculptBrushOpProps*> SecondaryBrushOpPropSets; // 0x250
	UMeshEditingViewProperties* ViewProperties; // 0x870
	UMaterialInstanceDynamic* ActiveOverrideMaterial; // 0x878
	UBrushStampIndicator* BrushIndicator; // 0x880
	UMaterialInstanceDynamic* BrushIndicatorMaterial; // 0x888
	UPreviewMesh* BrushIndicatorMesh; // 0x890
	UTransformGizmo* PlaneTransformGizmo; // 0x898
	UTransformProxy* PlaneTransformProxy; // 0x8a0
};

struct UInteractiveGizmoManager : UObject {
	TArray<FActiveGizmo> ActiveGizmos; // 0x30
	TMap<FString, UInteractiveGizmoBuilder*> GizmoBuilders; // 0x58
};

struct UMeshBoundaryToolBase : USingleSelectionTool {
	UPolygonSelectionMechanic* SelectionMechanic; // 0x138
	USingleClickInputBehavior* LoopSelectClickBehavior; // 0x140
};

struct UUI_SystemNotifyPopup : UUserWidget {
	URichTextBlock* RichTextBlock_title; // 0x260
	URichTextBlock* RichTextBlock_notify; // 0x268
	float NotifyBottomY; // 0x270
};

struct UAchievementConditionFloatWidget : UAchievementConditionWidget {
	UCanvasPanel* ProgressCanvas; // 0x288
	UProgressBar* PbProgress; // 0x290
	UTextBlock* TbProgress; // 0x298
	UTextBlock* TbTotalProgress; // 0x2a0
};

struct AActor : UObject {
	FActorTickFunction PrimaryActorTick; // 0x30
	char bNetTemporary : 1; // 0x60
	char bNetStartup : 1; // 0x60
	char bOnlyRelevantToOwner : 1; // 0x60
	char bAlwaysRelevant : 1; // 0x60
	char bReplicateMovement : 1; // 0x60
	char bHidden : 1; // 0x60
	char bTearOff : 1; // 0x60
	char bExchangedRoles : 1; // 0x60
	char bNetLoadOnClient : 1; // 0x61
	char bNetUseOwnerRelevancy : 1; // 0x61
	char bRelevantForNetworkReplays : 1; // 0x61
	char bRelevantForLevelBounds : 1; // 0x61
	char bReplayRewindable : 1; // 0x61
	char bAllowTickBeforeBeginPlay : 1; // 0x61
	char bAutoDestroyWhenFinished : 1; // 0x61
	char bCanBeDamaged : 1; // 0x61
	char bBlockInput : 1; // 0x62
	char bCollideWhenPlacing : 1; // 0x62
	char bFindCameraComponentWhenViewTarget : 1; // 0x62
	char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x62
	char bIgnoresOriginShifting : 1; // 0x62
	char bEnableAutoLODGeneration : 1; // 0x62
	char bIsEditorOnlyActor : 1; // 0x62
	char bActorSeamlessTraveled : 1; // 0x62
	char bReplicates : 1; // 0x63
	char bCanBeInCluster : 1; // 0x63
	char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x63
	char bActorEnableCollision : 1; // 0x64
	char bActorIsBeingDestroyed : 1; // 0x64
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x65
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x66
	ENetRole RemoteRole; // 0x67
	FRepMovement ReplicatedMovement; // 0x68
	float InitialLifeSpan; // 0x9c
	float CustomTimeDilation; // 0xa0
	FRepAttachment AttachmentReplication; // 0xb0
	AActor* Owner; // 0xf0
	FName NetDriverName; // 0xf8
	ENetRole Role; // 0x100
	ENetDormancy NetDormancy; // 0x101
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0x102
	EAutoReceiveInput AutoReceiveInput; // 0x103
	int32_t InputPriority; // 0x104
	UInputComponent* InputComponent; // 0x108
	float NetCullDistanceSquared; // 0x110
	int32_t NetTag; // 0x114
	float NetUpdateFrequency; // 0x118
	float MinNetUpdateFrequency; // 0x11c
	float NetPriority; // 0x120
	APawn* Instigator; // 0x130
	TArray<AActor*> Children; // 0x138
	USceneComponent* RootComponent; // 0x150
	TArray<AMatineeActor*> ControllingMatineeActors; // 0x158
	TArray<FName> Layers; // 0x170
	TWeakObjectPtr<UChildActorComponent> ParentComponent; // 0x180
	TArray<FName> Tags; // 0x190
	FMulticastSparseDelegate OnTakeAnyDamage; // 0x1a0
	FMulticastSparseDelegate OnTakePointDamage; // 0x1a1
	FMulticastSparseDelegate OnTakeRadialDamage; // 0x1a2
	FMulticastSparseDelegate OnActorBeginOverlap; // 0x1a3
	FMulticastSparseDelegate OnActorEndOverlap; // 0x1a4
	FMulticastSparseDelegate OnBeginCursorOver; // 0x1f8
	FMulticastSparseDelegate OnEndCursorOver; // 0x1f9
	FMulticastSparseDelegate OnClicked; // 0x1fa
	FMulticastSparseDelegate OnReleased; // 0x1fb
	FMulticastSparseDelegate OnInputTouchBegin; // 0x1fc
	FMulticastSparseDelegate OnInputTouchEnd; // 0x1fd
	FMulticastSparseDelegate OnInputTouchEnter; // 0x1fe
	FMulticastSparseDelegate OnInputTouchLeave; // 0x1ff
	FMulticastSparseDelegate OnActorHit; // 0x200
	FMulticastSparseDelegate OnDestroyed; // 0x201
	FMulticastSparseDelegate OnEndPlay; // 0x202
	TArray<UActorComponent*> InstanceComponents; // 0x268
	TArray<UActorComponent*> BlueprintCreatedComponents; // 0x278
	char bAllowInteractive : 1; // 0x2c0
	char bDSDestroyDirectly : 1; // 0x2c0
	char bAllowSaving : 1; // 0x2c0
	char bUseSceneObjectsManager : 1; // 0x2c0
	char bUseSceneObjectsManagerOnClient : 1; // 0x2c0
	int32_t SceneObjectsManagerMask; // 0x2d0
	float SceneObjectsManagerRadius; // 0x2d4
	char GenericTeamId; // 0x2d8
	FGuid ActorOwnerGuid; // 0x2dc
	FGuid GuildOwnerGuid; // 0x2ec
	FGuid AllianceOwnerGuid; // 0x2fc
};

struct ULightMapVirtualTexture2D : UTexture2D {
	TArray<int8_t> TypeToLayer; // 0x100
};

struct UNavigationSystemModuleConfig : UNavigationSystemConfig {
	char bStrictlyStatic : 1; // 0x50
	char bCreateOnClient : 1; // 0x50
	char bAutoSpawnMissingNavData : 1; // 0x50
	char bSpawnNavDataInNavBoundsLevel : 1; // 0x50
};

struct ACameraActor : AActor {
	EAutoReceiveInput AutoActivateForPlayer; // 0x310
	UCameraComponent* CameraComponent; // 0x318
	USceneComponent* SceneComponent; // 0x320
	char bConstrainAspectRatio : 1; // 0x330
	float AspectRatio; // 0x334
	float FOVAngle; // 0x338
	float PostProcessBlendWeight; // 0x33c
	FPostProcessSettings PostProcessSettings; // 0x340
};

struct UHorizonButton : UButton {
	FMulticastInlineDelegate OnClickedDelegate; // 0x428
	FMulticastInlineDelegate OnPressedDelegate; // 0x438
	FMulticastInlineDelegate OnReleasedDelegate; // 0x448
	FMulticastInlineDelegate OnHoveredDelegate; // 0x458
	FMulticastInlineDelegate OnUnhoveredDelegate; // 0x468
};

struct UFlagImageTips : USGToolTipWidget {
	UTextBlock* TextName; // 0x288
	UVerticalBox* RequirementList; // 0x290
	UFlagImageTipSlot* ResourceItemTempalte; // 0x298
	TWeakObjectPtr<USelectWidgetSlot> BindImageSlotWidget; // 0x2a0
	TWeakObjectPtr<USGInventoryComponent> BindInventory; // 0x2a8
};

struct USequenceCameraShake : UCameraShakeBase {
	UCameraAnimationSequence* Sequence; // 0x98
	float PlayRate; // 0xa0
	float Scale; // 0xa4
	float BlendInTime; // 0xa8
	float BlendOutTime; // 0xac
	float RandomSegmentDuration; // 0xb0
	bool bRandomSegment; // 0xb4
	USequenceCameraShakeSequencePlayer* Player; // 0xb8
	USequenceCameraShakeCameraStandIn* CameraStandIn; // 0xc0
};

struct USlotRespawnButton : UUserWidget {
	FName RespawnButtonName; // 0x260
	FName RespawnButtonTextName; // 0x268
	FName RespawnIconName; // 0x270
	TMap<ESpawnLocationType, TSoftObjectPtr<UTexture2D>> IconConfigTexture; // 0x278
};

struct UDialogueVoice : UObject {
	EGrammaticalGender Gender; // 0x28
	EGrammaticalNumber Plurality; // 0x29
	FGuid LocalizationGUID; // 0x2c
};

struct USoundSubmixWithParentBase : USoundSubmixBase {
	USoundSubmixBase* ParentSubmix; // 0x38
};

struct UAnimBoneCompressionSettings : UObject {
	TArray<UAnimBoneCompressionCodec*> Codecs; // 0x28
};

struct UChaosClothSharedSimConfig : UClothSharedConfigCommon {
	int32_t IterationCount; // 0x28
	int32_t SubdivisionCount; // 0x2c
	float SelfCollisionThickness; // 0x30
	float CollisionThickness; // 0x34
	bool bUseDampingOverride; // 0x38
	float Damping; // 0x3c
	bool bUseGravityOverride; // 0x40
	float GravityScale; // 0x44
	FVector Gravity; // 0x48
	bool bUseLocalSpaceSimulation; // 0x54
	bool bUseXPBDConstraints; // 0x55
};

struct UUI_StructureOccupyBlessPanel : UUserWidget {
	UButton* SaveButton; // 0x260
	UButton* ReturnButton; // 0x268
	UButton* SetButton; // 0x270
	UButton* AddButton; // 0x278
	UButton* AddSaveButton; // 0x280
	UButton* AddReturnButton; // 0x288
	USizeBox* CurrentWeekSizeBox; // 0x290
	USizeBox* CurrentWeekDataSizeBox; // 0x298
	USizeBox* NextWeekSizeBox; // 0x2a0
	USizeBox* NextWeekDataSizeBox; // 0x2a8
	UCanvasPanel* NextWeekTitlePanel; // 0x2b0
	UTextBlock* W1Head; // 0x2b8
	UEditableTextBox* W1_1TextBox; // 0x2c0
	UEditableTextBox* W1_2TextBox; // 0x2c8
	UEditableTextBox* W1_3TextBox; // 0x2d0
	UEditableTextBox* W1_4TextBox; // 0x2d8
	UTextBlock* W2Head; // 0x2e0
	UEditableTextBox* W2_1TextBox; // 0x2e8
	UEditableTextBox* W2_2TextBox; // 0x2f0
	UEditableTextBox* W2_3TextBox; // 0x2f8
	UEditableTextBox* W2_4TextBox; // 0x300
	UTextBlock* W3Head; // 0x308
	UEditableTextBox* W3_1TextBox; // 0x310
	UEditableTextBox* W3_2TextBox; // 0x318
	UEditableTextBox* W3_3TextBox; // 0x320
	UEditableTextBox* W3_4TextBox; // 0x328
	UTextBlock* W4Head; // 0x330
	UEditableTextBox* W4_1TextBox; // 0x338
	UEditableTextBox* W4_2TextBox; // 0x340
	UEditableTextBox* W4_3TextBox; // 0x348
	UEditableTextBox* W4_4TextBox; // 0x350
	UTextBlock* W5Head; // 0x358
	UEditableTextBox* W5_1TextBox; // 0x360
	UEditableTextBox* W5_2TextBox; // 0x368
	UEditableTextBox* W5_3TextBox; // 0x370
	UEditableTextBox* W5_4TextBox; // 0x378
	UTextBlock* W6Head; // 0x380
	UEditableTextBox* W6_1TextBox; // 0x388
	UEditableTextBox* W6_2TextBox; // 0x390
	UEditableTextBox* W6_3TextBox; // 0x398
	UEditableTextBox* W6_4TextBox; // 0x3a0
	UTextBlock* W7Head; // 0x3a8
	UEditableTextBox* W7_1TextBox; // 0x3b0
	UEditableTextBox* W7_2TextBox; // 0x3b8
	UEditableTextBox* W7_3TextBox; // 0x3c0
	UEditableTextBox* W7_4TextBox; // 0x3c8
	UTextBlock* W8Head; // 0x3d0
	UEditableTextBox* W8_1TextBox; // 0x3d8
	UEditableTextBox* W8_2TextBox; // 0x3e0
	UEditableTextBox* W8_3TextBox; // 0x3e8
	UEditableTextBox* W8_4TextBox; // 0x3f0
	URichTextBlock* W1Data; // 0x3f8
	URichTextBlock* W2Data; // 0x400
	URichTextBlock* W3Data; // 0x408
	URichTextBlock* W4Data; // 0x410
	URichTextBlock* W5Data; // 0x418
	URichTextBlock* W6Data; // 0x420
	URichTextBlock* W7Data; // 0x428
	URichTextBlock* W8Data; // 0x430
	UTextBlock* NW1Head; // 0x438
	UEditableTextBox* NW1_1TextBox; // 0x440
	UEditableTextBox* NW1_2TextBox; // 0x448
	UEditableTextBox* NW1_3TextBox; // 0x450
	UEditableTextBox* NW1_4TextBox; // 0x458
	UTextBlock* NW2Head; // 0x460
	UEditableTextBox* NW2_1TextBox; // 0x468
	UEditableTextBox* NW2_2TextBox; // 0x470
	UEditableTextBox* NW2_3TextBox; // 0x478
	UEditableTextBox* NW2_4TextBox; // 0x480
	UTextBlock* NW3Head; // 0x488
	UEditableTextBox* NW3_1TextBox; // 0x490
	UEditableTextBox* NW3_2TextBox; // 0x498
	UEditableTextBox* NW3_3TextBox; // 0x4a0
	UEditableTextBox* NW3_4TextBox; // 0x4a8
	UTextBlock* NW4Head; // 0x4b0
	UEditableTextBox* NW4_1TextBox; // 0x4b8
	UEditableTextBox* NW4_2TextBox; // 0x4c0
	UEditableTextBox* NW4_3TextBox; // 0x4c8
	UEditableTextBox* NW4_4TextBox; // 0x4d0
	UTextBlock* NW5Head; // 0x4d8
	UEditableTextBox* NW5_1TextBox; // 0x4e0
	UEditableTextBox* NW5_2TextBox; // 0x4e8
	UEditableTextBox* NW5_3TextBox; // 0x4f0
	UEditableTextBox* NW5_4TextBox; // 0x4f8
	UTextBlock* NW6Head; // 0x500
	UEditableTextBox* NW6_1TextBox; // 0x508
	UEditableTextBox* NW6_2TextBox; // 0x510
	UEditableTextBox* NW6_3TextBox; // 0x518
	UEditableTextBox* NW6_4TextBox; // 0x520
	UTextBlock* NW7Head; // 0x528
	UEditableTextBox* NW7_1TextBox; // 0x530
	UEditableTextBox* NW7_2TextBox; // 0x538
	UEditableTextBox* NW7_3TextBox; // 0x540
	UEditableTextBox* NW7_4TextBox; // 0x548
	UTextBlock* NW8Head; // 0x550
	UEditableTextBox* NW8_1TextBox; // 0x558
	UEditableTextBox* NW8_2TextBox; // 0x560
	UEditableTextBox* NW8_3TextBox; // 0x568
	UEditableTextBox* NW8_4TextBox; // 0x570
	URichTextBlock* NW1Data; // 0x578
	URichTextBlock* NW2Data; // 0x580
	URichTextBlock* NW3Data; // 0x588
	URichTextBlock* NW4Data; // 0x590
	URichTextBlock* NW5Data; // 0x598
	URichTextBlock* NW6Data; // 0x5a0
	URichTextBlock* NW7Data; // 0x5a8
	URichTextBlock* NW8Data; // 0x5b0
	URichTextBlock* CurrentWeekTitleRichText; // 0x5b8
	URichTextBlock* NextWeekTitleRichText; // 0x5c0
	URichTextBlock* BlessMessageRichText; // 0x5c8
	URichTextBlock* ThisWeekRangeText; // 0x5d0
	URichTextBlock* NextWeekRangeText; // 0x5d8
	USizeBox* ThisSetAfterSizeBox; // 0x5e0
	USizeBox* NextSetAfterSizeBox; // 0x5e8
	TWeakObjectPtr<ASGStructureOccupy> RemoteActor; // 0x5f0
	USGUI* RootSGUI; // 0x5f8
	char bFirstCreateOccupy : 1; // 0x600
	TArray<int32_t> ProtectIDs; // 0x608
	TArray<FProtectTimeRange> CurrentProtectTimeRange; // 0x618
	TArray<FProtectTimeRange> NextProtectTimeRange; // 0x628
};

struct URadialVector : UFieldNodeVector {
	float Magnitude; // 0xc0
	FVector position; // 0xc4
};

struct UMovieSceneComponentMaterialTrack : UMovieSceneMaterialTrack {
	int32_t MaterialIndex; // 0x90
};

struct UAddSkillExpPanel : UUserWidget {
	UProgressBar* PbSkill; // 0x288
	UProgressBar* PbLimitSkill; // 0x290
	USlider* AddLevelSlider; // 0x298
	UButton* BtnAddLevel; // 0x2a0
	UButton* BtnReduceLevel; // 0x2a8
	UTextBlock* TbExp; // 0x2b0
	UTextBlock* TbPublicExp; // 0x2b8
	UButton* BtnConfirm; // 0x2c0
	UButton* BtnClose; // 0x2c8
	UEditableText* EtbSkillLevel; // 0x2d0
	UTextBlock* TbNotEnoughExp; // 0x2d8
};

struct UVectorField : UObject {
	FBox Bounds; // 0x28
	float Intensity; // 0x44
};

struct UInterpTrack : UObject {
	TArray<UInterpTrack*> SubTracks; // 0x38
	UInterpTrackInst* TrackInstClass; // 0x48
	ETrackActiveCondition ActiveCondition; // 0x50
	FString TrackTitle; // 0x58
	char bOnePerGroup : 1; // 0x68
	char bDirGroupOnly : 1; // 0x68
	char bDisableTrack : 1; // 0x68
	char bIsSelected : 1; // 0x68
	char bIsAnimControlTrack : 1; // 0x68
	char bSubTrackOnly : 1; // 0x68
	char bVisible : 1; // 0x68
	char bIsRecording : 1; // 0x68
};

struct UParticleModuleLocationWorldOffset_Seeded : UParticleModuleLocationWorldOffset {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x80
};

struct UParticleModuleColorScaleOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorScaleOverLife; // 0x30
	FRawDistributionFloat AlphaScaleOverLife; // 0x78
	char bEmitterTime : 1; // 0xa8
};

struct UVoxelSolidifyMeshesToolProperties : UInteractiveToolPropertySet {
	double WindingThreshold; // 0x60
	double ExtendBounds; // 0x68
	int32_t SurfaceSearchSteps; // 0x70
	bool bSolidAtBoundaries; // 0x74
	bool bMakeOffsetSurfaces; // 0x75
	double OffsetThickness; // 0x78
};

struct UPaperGroupedSpriteComponent : UMeshComponent {
	TArray<UMaterialInterface*> InstanceMaterials; // 0x4b0
	TArray<FSpriteInstanceData> PerInstanceSpriteData; // 0x4c0
};

struct UPaperTileLayer : UObject {
	FText LayerName; // 0x28
	int32_t LayerWidth; // 0x40
	int32_t LayerHeight; // 0x44
	char bHiddenInGame : 1; // 0x48
	char bLayerCollides : 1; // 0x48
	char bOverrideCollisionThickness : 1; // 0x48
	char bOverrideCollisionOffset : 1; // 0x48
	float CollisionThicknessOverride; // 0x4c
	float CollisionOffsetOverride; // 0x50
	FLinearColor LayerColor; // 0x54
	int32_t AllocatedWidth; // 0x64
	int32_t AllocatedHeight; // 0x68
	TArray<FPaperTileInfo> AllocatedCells; // 0x70
	UPaperTileSet* TileSet; // 0x80
	TArray<int32_t> AllocatedGrid; // 0x88
};

struct USoundNodeRandom : USoundNode {
	TArray<float> Weights; // 0x48
	TArray<bool> HasBeenUsed; // 0x58
	int32_t NumRandomUsed; // 0x68
	int32_t PreselectAtLevelLoad; // 0x6c
	char bShouldExcludeFromBranchCulling : 1; // 0x70
	char bSoundCueExcludedFromBranchCulling : 1; // 0x70
	char bRandomizeWithoutReplacement : 1; // 0x70
};

struct UKeySettingItem : UUserWidget {
	USGToolTipWidget* TipWidgetTemplate; // 0x260
	UTextBlock* TbKeyName; // 0x268
	UKeyItem* KeyItem; // 0x270
	FName BindKeyName; // 0x278
	FKeySettingConfig BindConfig; // 0x280
	UKeyItem* SelectKeyItem; // 0x2b0
};

struct UClothLODDataCommon_Legacy : UObject {
	UClothPhysicalMeshDataBase_Legacy* PhysicalMeshData; // 0x28
	FClothPhysicalMeshData ClothPhysicalMeshData; // 0x30
	FClothCollisionData CollisionData; // 0x128
};

struct USGMiniMap : UUserWidget {
	UTexture2D* MapTexture; // 0x260
	UTexture2D* MaskTexture; // 0x268
	float MapLengthInTexture; // 0x270
	float MapLengthToCenter; // 0x274
	FVector MapOriginPoint; // 0x278
	UMaterialInterface* MapMaterial; // 0x288
	char bUpdateMiniMap : 1; // 0x290
	char bUpdateOwnerMoveStyle : 1; // 0x290
	char bMoveWithOwner : 1; // 0x290
	char bShowFilter : 1; // 0x290
	TArray<FName> FilterGridNames; // 0x298
	TMap<EBattleType, FName> BattleTypeShowFilter; // 0x2a8
	char bShowCloud : 1; // 0x2f8
	char bCanMark : 1; // 0x2f8
	UMiniMapMarkMenu* MarkMenuClass; // 0x300
	float MarkInterval; // 0x308
	char bCanMousePressMove : 1; // 0x30c
	char bRequestGetSpawnLocationInfo : 1; // 0x30c
	float GetSpawnLocationInterval; // 0x310
	char bRequestGetHighKiller : 1; // 0x314
	float GetHighKillerInterval; // 0x318
	char bRequestGetGeneralInfo : 1; // 0x31c
	float GetGeneralInfoInterval; // 0x320
	char bRequestGetAnimalInfo : 1; // 0x324
	float GetAnimalInfoInterval; // 0x328
	char bShowZoomSlider : 1; // 0x32c
	float InterpZoomSpeed; // 0x330
	float Zoom; // 0x334
	float MaxZoom; // 0x338
	float MinZoom; // 0x33c
	float ZoomStep; // 0x340
	FVector2D MiniMapPOITipsOffset; // 0x344
	float MoveDurationTime; // 0x34c
	float TempAddX; // 0x350
	float TempAddY; // 0x354
	TMap<EMapPOIType, FMapPOIList> POIMap; // 0x358
	double LastMarkTime; // 0x3a8
	float LastSpawnLocationTime; // 0x3b0
	double LastHighKillerTime; // 0x3b8
	double LastGeneralTime; // 0x3c0
	double LastAnimalTime; // 0x3c8
	UMaterialInstanceDynamic* MiniMapMaterial; // 0x3d0
	ASGPlayerCharacter* Owner; // 0x3d8
	ASGPlayerController* OwnerPlayerController; // 0x3e0
	FVector CacheLastKnownOwnerLocation; // 0x3e8
	FVector LastKnownOwnerLocation; // 0x3f4
	FRotator LastKnownOwnerRotation; // 0x400
	FRotator LastKnowPawnRotation; // 0x40c
	char bIsMouseDown : 1; // 0x418
	char bIsRightMouseDown : 1; // 0x418
	char bIsCtrlDown : 1; // 0x418
	char bMouseIn : 1; // 0x418
	FKey ClickKey; // 0x420
	float WantZoom; // 0x438
	FVector MarkPos; // 0x454
	char bIsFirstOpenMiniMap : 1; // 0x460
	char bLastOwnerMoved : 1; // 0x460
	UMiniMapMarkMenu* MarkMenu; // 0x468
	FMulticastInlineDelegate OnSGMiniMapPOIClicked; // 0x4a8
	FMulticastInlineDelegate OnMiniMapGroupPOICreated; // 0x4b8
	UOverlay* MiniMapOverlay; // 0x4d8
	UCanvasPanel* POICanvas; // 0x4e0
	UOverlay* OverlayMother; // 0x4e8
	UImage* MiniMapImage; // 0x4f0
	UCanvasPanel* CloudCanvas; // 0x4f8
	UCanvasPanel* ZoomCanvas; // 0x500
	USlider* SliderZoom; // 0x508
	UButton* BtnZoomIn; // 0x510
	UButton* BtnZoomOut; // 0x518
	TArray<EMapPOIType> FilteredPOITypes; // 0x560
	TArray<EMapStaticPOIType> FilteredStaticTypes; // 0x570
	TArray<EMiniMapMarkFilterType> FilteredMarkTypes; // 0x580
};

struct UTimeSynchronizationSource : UObject {
	bool bUseForSynchronization; // 0x28
	int32_t FrameOffset; // 0x2c
};

struct AGlobalMapActor : AStaticMeshActor {
	UWidgetComponent* GlobalMapWidget; // 0x320
	int32_t GlobalMapActorID; // 0x328
	EGlobalMapActorType ActorType; // 0x32c
	FVector2D IconShowDistance; // 0x330
	FVector2D TipsShowDistance; // 0x338
	FVector2D GroupTipsShowDistance; // 0x340
	char bDisplayName : 1; // 0x348
	FVector2D ShowNameDistance; // 0x34c
	USGToolTipWidget* GlobalMapActorTipsTemplate; // 0x358
	UGlobalMapActorWidget* ActorWidget; // 0x360
	char bEnable : 1; // 0x368
	char bHovered : 1; // 0x368
	char bSelected : 1; // 0x368
	char bAllianceOccupied : 1; // 0x368
	char bGuildOccupied : 1; // 0x368
	char bShowTips : 1; // 0x368
	char bShowGroupTips : 1; // 0x368
	char bShowName : 1; // 0x368
	TArray<int32_t> BindGameServerInfoIndexs; // 0x370
	TArray<FOfficalSealInfo> BindOfficalSealInfos; // 0x380
	TArray<AGlobalMapActor*> ParentGlobalMapActors; // 0x390
	TArray<AGlobalMapActor*> ChildGlobalMapActors; // 0x3a0
	ASGWorldSettings* SGWorldSettings; // 0x3b0
	float CurCameraDistance; // 0x3b8
	float LastCameraDistance; // 0x3bc
};

struct UUI_N_AllFunction : USGUI {
	TArray<EUIFunctionSlotType> OrderType; // 0x2d8
	TWeakObjectPtr<UN_FunctionSlot> CurrentActiveSlot; // 0x2e8
	UHorizontalBox* FunctionsPanel; // 0x2f0
	UN_FunctionSlot* FunctionslotTemplate; // 0x2f8
	TArray<UN_FunctionSlot*> FunctionSlotList; // 0x300
	UButton* CloseButton; // 0x310
	UImage* AllFunctionImage; // 0x318
	UTextBlock* AllFunctionText; // 0x320
	TSoftObjectPtr<UTexture2D> ActiveTexture2D[0x13]; // 0x328
	FText ActiveText[0x13]; // 0x620
};

struct UPawnAction : UObject {
	UPawnAction* ChildAction; // 0x28
	UPawnAction* ParentAction; // 0x30
	UPawnActionsComponent* OwnerComponent; // 0x38
	UObject* Instigator; // 0x40
	UBrainComponent* BrainComp; // 0x48
	char bAllowNewSameClassInstance : 1; // 0x80
	char bReplaceActiveSameClassInstance : 1; // 0x80
	char bShouldPauseMovement : 1; // 0x80
	char bAlwaysNotifyOnFinished : 1; // 0x80
};

struct AResonanceAudioDirectivityVisualizer : AActor {
	UMaterial* Material; // 0x380
	UResonanceAudioSpatializationSourceSettings* Settings; // 0x388
};

struct UStructureCropLandInfoHUD : UStructureInfoHUD {
	UStructureInfoHUDSlot* WaterText; // 0x360
	UStructureInfoHUDSlot* LooseRatioText; // 0x368
	UStructureInfoHUDSlot* FertilizerBucketText; // 0x370
	UStructureInfoHUDSlot* PFertilizerText; // 0x378
	UStructureInfoHUDSlot* KFertilizerText; // 0x380
	UStructureInfoHUDSlot* ApplyFertilizerCountText; // 0x388
	UStructureInfoHUDSlot* CanPlantText; // 0x390
	UStructureInfoHUDSlot* CropRootTipsText; // 0x398
	UStructureInfoHUDSlot* GrowthRatiosText; // 0x3a0
	TWeakObjectPtr<ASGStructureLandBase> BindStructureLandBase; // 0x3a8
	TWeakObjectPtr<ASGStructureCropLand> BindStructureCropLand; // 0x3b0
	TWeakObjectPtr<ASGStructureSaltLand> BindStructureSaltLand; // 0x3b8
};

struct UExponentialHeightFogComponent : USceneComponent {
	float FogDensity; // 0x208
	float FogHeightFalloff; // 0x20c
	FExponentialHeightFogData SecondFogData; // 0x210
	FLinearColor FogInscatteringColor; // 0x21c
	UTextureCube* InscatteringColorCubemap; // 0x230
	float InscatteringColorCubemapAngle; // 0x238
	FLinearColor InscatteringTextureTint; // 0x23c
	float FullyDirectionalInscatteringColorDistance; // 0x24c
	float NonDirectionalInscatteringColorDistance; // 0x250
	float DirectionalInscatteringExponent; // 0x254
	float DirectionalInscatteringStartDistance; // 0x258
	FLinearColor DirectionalInscatteringColor; // 0x25c
	float FogMaxOpacity; // 0x26c
	float startDistance; // 0x270
	float FogCutoffDistance; // 0x274
	bool bEnableVolumetricFog; // 0x278
	float VolumetricFogScatteringDistribution; // 0x27c
	FColor VolumetricFogAlbedo; // 0x280
	FLinearColor VolumetricFogEmissive; // 0x284
	float VolumetricFogExtinctionScale; // 0x294
	float VolumetricFogDistance; // 0x298
	float VolumetricFogStaticLightingScatteringIntensity; // 0x29c
	bool bOverrideLightColorsWithFogInscatteringColors; // 0x2a0
};

struct UAISenseConfig_Blueprint : UAISenseConfig {
	UAISense_Blueprint* Implementation; // 0x48
};

struct UBTService_UpdateStatus : UBTService_SGBlueprintBase {
	FBlackboardKeySelector BBKey_PrimaryWeaponType; // 0xb8
	float BreakAwayAttackMaxWaitTime; // 0xe8
	FVector2D StopFollowMaxWaitTimeRange; // 0xfc
	float FollowTolerance; // 0x1e8
	char bUseForceAnimalsGait : 1; // 0x1f0
	EAnimalsMovingGaitType Enum_ForceAnimalsMovingGaitType; // 0x1f1
};

struct UCompressedImageSequenceProtocol : UImageSequenceProtocol {
	int32_t CompressionQuality; // 0xd8
};

struct UMaterialExpressionQualitySwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Inputs[0x4]; // 0x54
};

struct UNiagaraSpriteRendererProperties : UNiagaraRendererProperties {
	UMaterialInterface* Material; // 0x80
	ENiagaraRendererSourceDataMode SourceMode; // 0x88
	FNiagaraUserParameterBinding MaterialUserParamBinding; // 0x90
	ENiagaraSpriteAlignment Alignment; // 0xb0
	ENiagaraSpriteFacingMode FacingMode; // 0xb1
	FVector2D PivotInUVSpace; // 0xb4
	ENiagaraSortMode SortMode; // 0xbc
	FVector2D SubImageSize; // 0xc0
	char bSubImageBlend : 1; // 0xc8
	char bRemoveHMDRollInVR : 1; // 0xc8
	char bSortOnlyWhenTranslucent : 1; // 0xc8
	char bGpuLowLatencyTranslucency : 1; // 0xc8
	float MinFacingCameraBlendDistance; // 0xcc
	float MaxFacingCameraBlendDistance; // 0xd0
	char bEnableCameraDistanceCulling : 1; // 0xd4
	float MinCameraDistance; // 0xd8
	float MaxCameraDistance; // 0xdc
	uint32_t RendererVisibility; // 0xe0
	FNiagaraVariableAttributeBinding PositionBinding; // 0xe8
	FNiagaraVariableAttributeBinding ColorBinding; // 0x140
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x198
	FNiagaraVariableAttributeBinding SpriteRotationBinding; // 0x1f0
	FNiagaraVariableAttributeBinding SpriteSizeBinding; // 0x248
	FNiagaraVariableAttributeBinding SpriteFacingBinding; // 0x2a0
	FNiagaraVariableAttributeBinding SpriteAlignmentBinding; // 0x2f8
	FNiagaraVariableAttributeBinding SubImageIndexBinding; // 0x350
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x3a8
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x400
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x458
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x4b0
	FNiagaraVariableAttributeBinding CameraOffsetBinding; // 0x508
	FNiagaraVariableAttributeBinding UVScaleBinding; // 0x560
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x5b8
	FNiagaraVariableAttributeBinding CustomSortingBinding; // 0x610
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x668
	FNiagaraVariableAttributeBinding RendererVisibilityTagBinding; // 0x6c0
	TArray<FNiagaraMaterialAttributeBinding> MaterialParameterBindings; // 0x718
};

struct ASGStructureGuildStore : ASGStructureItemContainer {
	USGInventoryComponent* InventoryComponent2; // 0xd68
	USGInventoryComponent* InventoryComponent3; // 0xd70
	USGInventoryComponent* InventoryComponent4; // 0xd78
	USGInventoryComponent* InventoryComponent5; // 0xd80
	TArray<FBaseGeneralChunkData> GeneralChunkDatas; // 0xd88
	TArray<FBaseAnimalChunkData> AnimalChunkDatas; // 0xd98
	TArray<FGuildStoreItemPriceData> PriceDatas; // 0xda8
	FString GuildStoreNotice; // 0xdb8
	int32_t InventoryMaxGridAdd; // 0xdc8
	float SearchCharacterInterval; // 0xdcc
	float SearchCharacterRadius; // 0xdd0
	int32_t NumGeneralSeats; // 0xdd4
	int32_t NumAnimalSeats; // 0xdd8
	float UpdateKPITimerInterval; // 0xddc
	int32_t UpdateKPIMaxCount; // 0xde0
	int32_t CopperItemIndex; // 0xde4
	FMulticastInlineDelegate OnAnimalDatasChanged; // 0xde8
	FMulticastInlineDelegate OnGeneralDatasChanged; // 0xdf8
	FMulticastInlineDelegate OnPriceDatasChanged; // 0xe08
	FMulticastInlineDelegate OnNoticeChanged; // 0xe18
	double LastSearchCharacterTime; // 0xe28
	TArray<TWeakObjectPtr<ASG_AnimalsCharacter>> SearchedTamedAnimals; // 0xe30
	TArray<TWeakObjectPtr<ASGGeneralCharacter>> SearchedTamedGenerals; // 0xe40
	TArray<TWeakObjectPtr<ASGPlayerController>> RemoteViewingControllers; // 0xe50
	FTimerHandle UpdateKPITimerHandle; // 0xe60
};

struct UMaterialExpressionPreviousFrameSwitch : UMaterialExpression {
	FExpressionInput CurrentFrame; // 0x40
	FExpressionInput PreviousFrame; // 0x54
};

struct ULightmassPrimitiveSettingsObject : UObject {
	FLightmassPrimitiveSettings LightmassSettings; // 0x28
};

struct UParticleModuleOrientationAxisLock : UParticleModuleOrientationBase {
	EParticleAxisLock LockAxisFlags; // 0x30
};

struct UCollisionGeometryVisualizationProperties : UInteractiveToolPropertySet {
	float LineThickness; // 0x60
	bool bShowHidden; // 0x64
	FColor Color; // 0x68
};

struct ASGStructureAnimalFarm : ASGStructureFunctionTable {
	int32_t PutAnimalInMaxNum; // 0xf88
	float SetPutAnimalMaxNumInterval; // 0xf8c
	float TooMuchAnimalPercentage; // 0xf90
	float EnvironmentBadPercentage; // 0xf94
	float FoodStarvationPercentage; // 0xf98
	float MoodLackPercentage; // 0xf9c
	UDataTable* MoodLackDropFixTable; // 0xfa0
	int32_t AnimalDropMaxCount; // 0xfa8
	TArray<FAnimalFarmConfig> AnimalFarmConfigs; // 0xfb0
	TArray<FTransform> WanderPoints; // 0xfc0
	float SearchInterval; // 0xfd0
	float SearchRadius; // 0xfd4
	float DamageCheckDistSquared; // 0xfd8
	char bIsDebugSearch : 1; // 0xfdc
	FAnimalFarmData AnimalFarmData; // 0xfe0
	float MaxStoreFoods; // 0x1050
	float StoreFoods; // 0x1054
	TArray<USGItem*> AddStoreFoodTemplate; // 0x1058
	float WorkingAutoAddFoodMin; // 0x1068
	float MaxStoreMoods; // 0x106c
	float StoreMoods; // 0x1070
	int32_t MaxAnimalFarmRecordCount; // 0x1074
	TArray<FAnimalFarmRecord> AnimalFarmRecords; // 0x1078
	float AddWorkerSkillInterval; // 0x1088
	char bDifferentBisexual : 1; // 0x10a0
	UNiagaraComponent* MaleNiagaraComponent; // 0x10a8
	UNiagaraComponent* FemaleNiagaraComponent; // 0x10b0
	UBoxComponent* BoxComponent; // 0x10b8
	float ProjectileCheckInterval; // 0x10c0
	FTimerHandle ProjectileOverlapTimeHandle; // 0x10c8
	float HitAnimalEffectOffsetZ; // 0x10d8
	float TraceRaduisOverwrite; // 0x10e4
	int32_t MaxAnimalSpecies; // 0x1100
	char bDebugShow : 1; // 0x1104
	float ShowTraceTime; // 0x1108
	TMap<FGuid, USkeletalMeshComponent*> AttachedSkeletalMeshComps; // 0x1188
	FTimerHandle CalcFoodHandle; // 0x11d8
	float CalcFoodTimerRemaining; // 0x11e0
	FTimerHandle CalcMoodHandle; // 0x11e8
	float CalcMoodTimerRemaining; // 0x11f0
	FTimerHandle CalcDeathHandle; // 0x11f8
	float CalcDeathTimerRemaining; // 0x1200
	FTimerHandle CalcBirthHandle; // 0x1208
	float CalcBirthTimerRemaining; // 0x1210
	FTimerHandle CalcGrowHandle; // 0x1218
	float CalcGrowTimerRemaining; // 0x1220
	FTimerHandle CalcDropHandle; // 0x1228
	float CalcDropTimerRemaining; // 0x1230
	FTimerHandle CalcHealthHandle; // 0x1238
	float CalcHealthTimerRemaining; // 0x1240
	FTimerHandle CalcCorpseHandle; // 0x1248
	float CalcTamingSkillTimerRemaining; // 0x1250
	FTimerHandle CalcTamingSkillHandle; // 0x1258
	int32_t CurPutAnimalMaxNum; // 0x1264
	FDateTime LastSetPutAnimalMaxNumTime; // 0x1268
};

struct UPropertyBinding : UObject {
	TWeakObjectPtr<UObject> SourceObject; // 0x28
	FDynamicPropertyPath SourcePath; // 0x30
	FName DestinationProperty; // 0x58
};

struct UTalentPanel : UUserWidget {
	UVerticalBox* TalentVerticalPanel; // 0x260
	UTalentSlot* TalentSlotTemplate; // 0x270
};

struct USceneComponent : UActorComponent {
	TWeakObjectPtr<APhysicsVolume> PhysicsVolume; // 0xc8
	USceneComponent* AttachParent; // 0xd0
	FName AttachSocketName; // 0xd8
	TArray<USceneComponent*> AttachChildren; // 0xe0
	TArray<USceneComponent*> ClientAttachedChildren; // 0xf0
	FVector RelativeLocation; // 0x12c
	FRotator RelativeRotation; // 0x138
	FVector RelativeScale3D; // 0x144
	FVector ComponentVelocity; // 0x150
	char bComponentToWorldUpdated : 1; // 0x15c
	char bAbsoluteLocation : 1; // 0x15c
	char bAbsoluteRotation : 1; // 0x15c
	char bAbsoluteScale : 1; // 0x15c
	char bVisible : 1; // 0x15c
	char bShouldBeAttached : 1; // 0x15c
	char bShouldSnapLocationWhenAttached : 1; // 0x15c
	char bShouldSnapRotationWhenAttached : 1; // 0x15d
	char bShouldUpdatePhysicsVolume : 1; // 0x15d
	char bHiddenInGame : 1; // 0x15d
	char bBoundsChangeTriggersStreamingDataRebuild : 1; // 0x15d
	char bUseAttachParentBound : 1; // 0x15d
	EComponentMobility Mobility; // 0x15f
	EDetailMode DetailMode; // 0x160
	FMulticastSparseDelegate PhysicsVolumeChangedDelegate; // 0x161
};

struct UUI_AdminSubPanelNpc : UUI_AdminSubPanel {
	UScrollBox* ScrollBoxNpcList; // 0x2d8
	UEditableTextBox* SearchTextBoxNpc; // 0x2e0
	UUI_ServerAdminItemRow* ServerAdminItemRowTemplate; // 0x2f8
	UEditableTextBox* EditableTextBoxCreateDistance; // 0x300
	UEditableTextBox* EditableTextBoxCreateLevel; // 0x308
	UEditableTextBox* EditableTextBoxCreateNum; // 0x310
	UButton* ButtonKillAll; // 0x318
};

struct UInterpTrackInstFloatParticleParam : UInterpTrackInst {
	float ResetFloat; // 0x28
};

struct UBTDecorator_KeepInCone : UBTDecorator {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector Observed; // 0x98
	char bUseSelfAsOrigin : 1; // 0xc0
	char bUseSelfAsObserved : 1; // 0xc0
};

struct UMaterialParameterCollectionInstance : UObject {
	UMaterialParameterCollection* Collection; // 0x30
};

struct UHLODProxy : UObject {
	TArray<FHLODProxyMesh> ProxyMeshes; // 0x28
	TMap<UHLODProxyDesc*, FHLODProxyMesh> HLODActors; // 0x38
};

struct USGGameData : UObject {
	float SPMul; // 0x28
	UDataTable* PlayerStartLocalizationTable; // 0x30
	UDataTable* AllItemTable; // 0x88
	UDataTable* AllBuffTable; // 0x140
	UDataTable* BaoZangPositionTable; // 0x1e8
	UDataTable* FishBaitTable; // 0x2e0
	USGBattleGamePlayData* BattleGamePlayDataObject; // 0x338
	USGGameDataAllNpc* AllNpc; // 0x348
	USGGameDataAllGeneralNpc* AllGeneralNpc; // 0x358
	USGGameDataAllHorse* AllHorse; // 0x368
	UDataTable* AllPlayerPerkTable; // 0x378
	UDataTable* AllVehiclePerkTable; // 0x380
	UDataTable* AllGeneralPerkTable; // 0x388
	UDataTable* AllCraftPerkGroupTable; // 0x390
	UDataTable* GuildCraftPerkGroupTable; // 0x398
	UDataTable* DrawArtofWarTableTest; // 0x3a0
	UDataTable* AllCropTable; // 0x638
	UDataTable* AllSaltCropTable; // 0x640
	USGGameDataAllQuest* AllQuest; // 0x788
	USGGameDataJueWei* JueWei; // 0x798
	USGGameDataGuild* GuildClass; // 0x7a8
	USGGameDataAlliance* AllianceClass; // 0x7b8
	UDataTable* AllLegendGeneralsTable; // 0x7c8
	USGGameDataActivity* GameDataActivityClass; // 0x820
	TMap<ESkillAddExpAction, FAddSkillExtraAdd> AddSkillExpExtraAddInfo; // 0x830
	TMap<int32_t, FGuanAiIDArray> CityGuanAiRelatedInfos; // 0x880
	UDataTable* BigMapJunDataTable; // 0x8d0
	UDataTable* BigMapCityDataTable; // 0x8d8
	UDataTable* BigMapXianChengDataTable; // 0x8e0
	UDataTable* BigMapGuanAiDataTable; // 0x8e8
	UDataTable* GuanAiActivityUITable; // 0x8f0
	FBattleGlobalParam BattleGobalParam; // 0x8f8
	FText ServerDistrictIdText[0x5]; // 0x900
	USGGameDataStatisticsEvent* StatisticsEvent; // 0x978
	USGGameDataConditionReward* ConditionReward[0x2]; // 0x988
	UDataTable* RegionRespawnPointDataTable; // 0x9a8
	UDataTable* WeatherControlLocalizationDataTable; // 0x9b0
	ASGStructureItemContainer* DroppedItemContainerTemplate; // 0x9b8
	ASGStructureItemContainer* CharacterDeathItemContainerTemplate; // 0x9c0
	USGItem* FullWalletItemTemplate; // 0x9c8
	TArray<USGItem*> AddLifeCountItemTemplate; // 0x9d0
	TArray<USGItem*> AccRebornItemTemplate; // 0x9e0
	TArray<USGItem*> AddAnimalLifeCountItemTemplate; // 0x9f0
	TArray<USGItem*> AccAnimalRebornItemTemplate; // 0xa00
	UDataTable* AppearanceDataTable; // 0xa10
	UDataTable* LoadingScreenDataTable; // 0xa18
	TMap<UPhysicsAsset*, UPhysicsAsset*> PhyscisAssetMapInfo; // 0xa20
	UDataTable* WoundDataTable; // 0xa70
	UDataTable* TaiShouKillTileDT; // 0xa78
	UDataTable* WorldRankDT; // 0xa80
	UDataTable* StaticMiniMapPOIDataTable; // 0xa98
	UDataTable* GivePerkMiniMapPOIDataDataTable; // 0xaa0
	UDataTable* MiniMapMarkDataTable; // 0xaa8
	int32_t LocalMarkLimitNum; // 0xab0
	int32_t GuildMarkLimitNum; // 0xab4
	float StaticMarkVisualRange; // 0xab8
	UDataTable* TitleDataTable; // 0xac0
	UDataTable* AchievementTypeDataTable; // 0xac8
	UDataTable* SkillUIInfoDataTable; // 0xad0
	UDataTable* DropWrapperTable; // 0xad8
	UDataTable* DropRuleTable; // 0xae0
	UDataTable* DropFixTable; // 0xae8
	UDataTable* FilterWordTable; // 0xbe0
	UDataTable* CNDedicateFilterWordTable; // 0xbe8
	UDataTable* FoulLanguageTable; // 0xbf0
	TArray<FString> FilterWords; // 0xbf8
	TArray<FString> CNDedicateFilterWords; // 0xc08
	TArray<FString> FoulLanguageWords; // 0xc18
	TArray<FString> ReplaceMaskList; // 0xc28
	UDataTable* ScalabilityDetailsDataTable; // 0xc38
	ASGCharacter* PreviewCharacterClass; // 0xc40
	UDataTable* StructureCheckVolumeLocalizationTable; // 0xc48
	TArray<FText> CreateStructurePreventReasons; // 0xca0
	USGGameDataCreateStructureData* CreateStructureDatas; // 0xcb0
	FName CannotCreateStructureSoundID; // 0xcc0
	USGGameDataOccupyStructureData* OccupyStructureData; // 0xcc8
	UCurveTable* OccupyStructurePrestigeDataTable; // 0xcd8
	int32_t OverFlowPrestigeValue; // 0xce0
	int32_t MinPrestigeValue; // 0xce4
	int32_t MaxPrestigeValue; // 0xce8
	int32_t InitProtectTime; // 0xcec
	TArray<FOreInfoData> OreDensityData; // 0xcf0
	UParticleSystem* LevelUpParticle; // 0xd00
	ASGStructureItemContainer* DeathInventoryClassOnDeposit; // 0xd08
	FEnvironmentVolumePostProcessData EnvironmentVolumePostProcessData[0x4]; // 0xd10
	USGBuff* EVBuff[0x4]; // 0xd90
	TArray<UMaterialInstance*> BuffPostProcess; // 0xdb0
	TArray<UMaterialInstance*> StatePostProcess; // 0xdc0
	TArray<FCharacterStatusStateTip> StatusStateTip; // 0xdd0
	USGBuff* WaterBuff; // 0xde0
	USGBuff* AchievementBuff; // 0xde8
	UDataTable* AchievementDamageMultiplyDataTable; // 0xdf0
	USGBuff* SGCanBeDamageBuff; // 0xdf8
	USGItem* CrossServerItem; // 0xe00
	UDataTable* FormationData; // 0xe08
	UDataTable* TeamAttitudeData; // 0xe10
	TMap<FName, FSoftObjectPath> BuffKillTexture; // 0xe18
	UStaticMesh* ProjectileLineMesh; // 0xe68
	UDataTable* MaterialHardnessDT; // 0xe70
	USGShopData* ShopDataModuleClass; // 0xe78
	USGShopData* ShopDataModulePtr; // 0xe80
	USGItem* ItemPackageTemplate; // 0xe88
	float NewsRecordCD[0x11]; // 0xe90
	UDataTable* SeasonPerLevelRewardDT; // 0xed8
	UCurveTable* SeasonLevelExpCurve; // 0xee0
	UDataTable* SeasonAllRewardsDT; // 0xee8
	USGSeason* SGSeasonClass; // 0xef0
	UDataTable* SeasonDefineDT; // 0xf48
	UDataTable* StructureMiniMapPOIStyleTable; // 0xfb0
	UTexture2D* AnimalFleeingIcon; // 0xfb8
	UTexture2D* AnimalFeedingIcon; // 0xfc0
	UTexture2D* AnimalStarvingIcon; // 0xfc8
	UTexture2D* AnimalPregnancyIcon; // 0xfd0
	USGToolTipsAnimal* AnimalToolTipWidget; // 0xfd8
	USGToolTipsGeneral* GeneralToolTipWidget; // 0xfe0
	UDataTable* AnimalRealNameDataTable; // 0xfe8
	TMap<EAnimalQualityType, FText> AnimalQualityTypeString; // 0x1000
	TMap<EVehiclePerkType, FText> AnimalPerkTypeText; // 0x1050
	TMap<EAttributeCorrectionType, FText> AnimalPerkCorrectionTypeText; // 0x10a0
	TMap<EAnimalAgeType, FText> AnimalAgeTypeText; // 0x10f0
	TMap<int32_t, FOfficialJobInfo> OfficialJobInfos; // 0x1140
	int32_t Job_Di_DiKuaiMinCount; // 0x1190
	int32_t Job_Wang_DiKuaiMinCount; // 0x1194
	int32_t Job_ZhouMu_DiKuaiMinCount; // 0x1198
	int32_t Job_CiShi_DiKuaiMinCount; // 0x119c
	UCurveTable* ExpRatioTable; // 0x11a0
	float SharedExpRatio; // 0x11a8
	float SharedExpRadius; // 0x11ac
	UCurveTable* SkillExpRatioTable; // 0x11b0
	TArray<FAnimalsModifyBoneData> AnimalsAgeModifyBoneData; // 0x11b8
	TArray<FAnimalsModifyBoneData> AnimalsPregnancyModifyBoneData; // 0x11c8
	UDataTable* AnimalFurRelationDataTable; // 0x11d8
	USGServerLevelData* ServerLevelDataConfig; // 0x11f0
	USGGameDataClothMask* ClothMaskDataClass; // 0x1200
	UFoliageTypeExtraInfos* FoliageTypeExtraInfosTemplate; // 0x1210
	USGGameDataNPCTalkData* NPCTalkDatas; // 0x1220
	USGGameDataInteractiveImageData* InteractiveImages; // 0x1230
	float GiveOneDayWagesAddLoyalty; // 0x1240
	float NoWagesReduceLoyaltyOneDay; // 0x1244
	int32_t OneDayMaxGiveWages; // 0x1248
	float QualityWagesCopperMulti[0x6]; // 0x124c
	float SpecialWagesCopperMulti[0x4]; // 0x1264
	UCurveTable* OneDayWageGiveCopperTable; // 0x1278
	FHuKouItemAward HuKouItemAwards[0x2]; // 0x1280
	TArray<FTaishouBattleOpenTimeInfo> TaiShouBattleOpenTimeInfoArray; // 0x12b0
	USGGameDataPlayerShowData* PlayerShowDatas; // 0x12c0
	UDataTable* VehicleFavoriteFoodDataTable; // 0x12d8
	TMap<EAnimalQualityType, FRideTameRequireItemData> RideTameRequiredEquipItems; // 0x12f0
	UDataTable* AuctionShopItemTable; // 0x1390
	float AuctionShopTaxRate; // 0x1398
	float AuctionShopCustodyFee; // 0x139c
	float AuctionShopItemGuidePriceMin; // 0x13a0
	float AuctionShopItemGuidePriceMax; // 0x13a4
	float AuctionShopWeaponGuidePriceMin; // 0x13a8
	float AuctionShopWeaponGuidePriceMax; // 0x13ac
	float AuctionShopEquipmentGuidePriceMin; // 0x13b0
	float AuctionShopEquipmentGuidePriceMax; // 0x13b4
	float AuctionShopHorseGuidePriceMin; // 0x13b8
	float AuctionShopHorseGuidePriceMax; // 0x13bc
	float AuctionShopGeneralGuidePriceMin; // 0x13c0
	float AuctionShopGeneralGuidePriceMax; // 0x13c4
	int32_t AuctionShopLowestPrice; // 0x13c8
	int32_t AuctionShopLockTime; // 0x13cc
	int32_t AuctionShopClosedStartTimeHour; // 0x13d0
	int32_t AuctionShopClosedTimes; // 0x13d4
	UGuildEventConfig* AllGuildEventConfig; // 0x13d8
	USGTrafficGoods* SGTrafficGoodsClass; // 0x13e0
	USGTrafficGoods* SGTrafficGoodsPtr; // 0x13e8
	USGItem* TrafficGoodsItemTemplate; // 0x13f0
	FPlayerWoundConfig PlayerWoundConfig; // 0x1400
	TMap<FString, UDataTable*> StrengthenPropertyTable; // 0x1438
	USGNotifyText* SGNotifyConfigClass; // 0x14d8
	TArray<TSoftObjectPtr<UTexture2D>> BattleEventDamageIconArray; // 0x14e8
	int32_t BattleEventHorseDamageIconIndex; // 0x14f8
	int32_t BattleEventInstrumentDamageIconIndex; // 0x14fc
	UDataTable* ItemTransportPriceTable; // 0x1500
	UDataTable* DBLogSwitchCfgDT; // 0x1510
	int32_t TaxGoldPrice; // 0x15b8
	USGItem* TaxGoldItemTemplate; // 0x15c0
	FText TaxResponseNotifyTexts[0xe]; // 0x15c8
	FText TaxJobTexts[0x3]; // 0x1718
	FOfficalTaxConfig OfficalTaxConfig[0x3]; // 0x1760
	TArray<int32_t> DLCAppIDList; // 0x17a8
	UTexture2D* CapitalGoldIcon; // 0x17b8
	UTexture2D* CapitalSilverIcon; // 0x17c0
	UTexture2D* CapitalCopperIcon; // 0x17c8
	FText CommaText; // 0x17d0
	UDataTable* AppearanceKitDataTable; // 0x17e8
	UDataTable* FashionKitDataTable; // 0x1840
	TArray<FWorshipConfig> WorshipConfig; // 0x1898
	FName FlagMaterialParams[0x5]; // 0x18a8
	FName FlagAlphaParamName; // 0x18d0
	FName FlagImageParamName; // 0x18d8
	UMaterialInstance* FlagImageMaterialInst; // 0x18e0
	USGBuff* NoviceBuff; // 0x18e8
	UDataTable* AnimalSpeciesDataTable; // 0x18f0
	float ServerCheckInventoryOperationDistance; // 0x1908
	TMap<FKey, FText> TranslateKeyText; // 0x1910
};

struct UMaterialExpressionRuntimeVirtualTextureOutput : UMaterialExpressionCustomOutput {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Specular; // 0x54
	FExpressionInput Roughness; // 0x68
	FExpressionInput Normal; // 0x7c
	FExpressionInput WorldHeight; // 0x90
	FExpressionInput Opacity; // 0xa4
	FExpressionInput Mask; // 0xb8
};

struct UN_ShortCutSlot : UN_InventorySlot {
	UTextBlock* AmmoAmountText; // 0xf80
	FName KeyTextblockName; // 0xf88
	UTextBlock* ShortCutSlotIndex; // 0xf90
	UBorder* ShortCutSlotBorder; // 0xf98
	char bIsZeroShortCutCraft : 1; // 0xfa0
};

struct USGStructureCheckVolumeData : UObject {
	TArray<ASGStructure*> OnlyAllowStructureType; // 0x28
	TArray<ASGStructure*> OnlyPreventStructureType; // 0x38
};

struct UUI_ViewGeneral : USGUI {
	TArray<FVGOptionConfig> VGOptionConfig; // 0x2d8
	USkillInfoSlot* SkillInfoSlotTemplate; // 0x2e8
	float ViewGeneralShowTime; // 0x2f4
	float RadarChartStartPercent; // 0x2f8
	TSoftObjectPtr<UTexture2D> BorderTexture; // 0x300
	TSoftObjectPtr<UTexture2D> BorderHTexture; // 0x328
	TSoftObjectPtr<UTexture2D> BorderLockTexture; // 0x350
	TSoftObjectPtr<UTexture2D> BorderUnLockTexture; // 0x378
	FMargin SlotPadding; // 0x3a0
	FName RightVerticalBoxName; // 0x3b0
	TSoftObjectPtr<UTexture2D> GeneralCharacterQuality[0x6]; // 0x3b8
	char bUseTestViewGeneralLevel : 1; // 0x4a8
	int32_t TestViewGeneralLevel; // 0x4ac
	FText ViewGeneralTips[0x6]; // 0x4b0
	UUniformGridPanel* NormalPerkPanel; // 0x540
	UVerticalBox* AngryPerkPanel; // 0x548
	UVerticalBox* WeakPerkPanel; // 0x550
	UTextBlock* ViewGeneralLevelText; // 0x558
	UImage* QualityImage; // 0x560
	UTextBlock* TextBlockTips; // 0x568
	USizeBox* SizeBox_check; // 0x570
	USizeBox* SizeBox_Normal; // 0x578
	USizeBox* SizeBox_Angry; // 0x580
	USizeBox* SizeBox_Weak; // 0x588
	USizeBox* SizeBox_Prop; // 0x590
	UImage* Image_Rotate; // 0x598
	TWeakObjectPtr<ASGGeneralCharacter> LastViewGeneralChar; // 0x5a0
	int32_t BindViewGeneralLevel; // 0x5a8
	TWeakObjectPtr<ASGGeneralCharacter> BindCharacter; // 0x5ac
};

struct UMaterialExpressionRotateAboutAxis : UMaterialExpression {
	FExpressionInput NormalizedRotationAxis; // 0x40
	FExpressionInput RotationAngle; // 0x54
	FExpressionInput PivotPoint; // 0x68
	FExpressionInput position; // 0x7c
	float Period; // 0x90
};

struct UVoxelBlendMeshesToolProperties : UInteractiveToolPropertySet {
	double BlendPower; // 0x60
	double BlendFalloff; // 0x68
	bool bSolidifyInput; // 0x70
	bool bRemoveInternalsAfterSolidify; // 0x71
	double OffsetSolidifySurface; // 0x78
};

struct UMaterialExpressionShadowReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Shadow; // 0x54
};

struct UGizmoComponentWorldTransformSource : UGizmoBaseTransformSource {
	USceneComponent* Component; // 0x48
	bool bModifyComponentOnTransform; // 0x50
};

struct UGeometryCollectionDebugDrawComponent : UActorComponent {
	AGeometryCollectionDebugDrawActor* GeometryCollectionDebugDrawActor; // 0xc0
	AGeometryCollectionRenderLevelSetActor* GeometryCollectionRenderLevelSetActor; // 0xc8
};

struct UWindowTitleBarAreaSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct APawn : AActor {
	char bUseControllerRotationPitch : 1; // 0x318
	char bUseControllerRotationYaw : 1; // 0x318
	char bUseControllerRotationRoll : 1; // 0x318
	char bCanAffectNavigationGeneration : 1; // 0x318
	float BaseEyeHeight; // 0x31c
	EAutoReceiveInput AutoPossessPlayer; // 0x320
	EAutoPossessAI AutoPossessAI; // 0x321
	char RemoteViewPitch; // 0x322
	AController* AIControllerClass; // 0x328
	APlayerState* PlayerState; // 0x330
	AController* LastHitBy; // 0x340
	AController* Controller; // 0x348
	FVector ControlInputVector; // 0x354
	FVector LastControlInputVector; // 0x360
};

struct USGItemToolTipWidget : USGToolTipWidget {
	FName ItemIconName; // 0x288
	FName ItemNameTextblockName; // 0x290
	FName ItemQualityTextblockName; // 0x298
	FName ItemQualityCanvasName; // 0x2a0
	FName WeaponTypeCanvasName; // 0x2a8
	FName WeaponTypeTextblockName; // 0x2b0
	FName BaseVerticalBoxName; // 0x2b8
	FName AdditionalVerticalBoxName; // 0x2c0
	FName DescriptionTipsItemName; // 0x2c8
	FName ItemStatInfoName; // 0x2d0
	FName CraftPanelName; // 0x2d8
	FName CraftRequirementsListName; // 0x2e0
	FName ItemInfoPanelName; // 0x2e8
	FName CraftingTitleLabelName; // 0x2f0
	char bUseNew : 1; // 0x358
};

struct UUI_AnimationNotify : USGUI {
	FAnimationNotifyConfig AnimationNotifyWidgetTemplate[0x4]; // 0x2d8
	TArray<FAnimationNotifyTask> TaskList; // 0x318
	UOverlay* AnimationNotifyOverlay; // 0x338
};

struct UPlaneReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadiusScale; // 0x280
	UDrawSphereComponent* PreviewInfluenceRadius; // 0x288
	UBoxComponent* PreviewCaptureBox; // 0x290
};

struct UAchievementNearAccomplishItem : UUserWidget {
	USGToolTipWidget* ToolTipTemplate; // 0x260
	UImage* ImgIcon; // 0x280
	UTextBlock* TbName; // 0x288
};

struct UTurnInPlace_AnimNotifyState : UAnimNotifyState {
	UAnimMontage* TurnMontage; // 0x30
	UCurveFloat* RotationCurveAsset; // 0x38
	char bIsRightTurn : 1; // 0x40
	float StopBlendTime; // 0x44
	char bOnlyTriggerOnServer : 1; // 0x48
	float TotalTurnYaw; // 0x54
	char bUseLineTurn : 1; // 0x58
};

struct ULoudnessNRT : UAudioSynesthesiaNRT {
	ULoudnessNRTSettings* Settings; // 0x78
};

struct UNiagaraDataInterfaceAudioOscilloscope : UNiagaraDataInterface {
	USoundSubmix* Submix; // 0x38
	int32_t Resolution; // 0x40
	float ScopeInMilliseconds; // 0x44
};

struct UAvoidanceManager : UObject {
	float DefaultTimeToLive; // 0x30
	float LockTimeAfterAvoid; // 0x34
	float LockTimeAfterClean; // 0x38
	float DeltaTimeToPredict; // 0x3c
	float ArtificialRadiusExpansion; // 0x40
	float TestHeightDifference; // 0x44
	float HeightCheckMargin; // 0x48
};

struct URichTextBlockImageDecorator : URichTextBlockDecorator {
	UDataTable* ImageSet; // 0x28
};

struct UVoxelBlendMeshesTool : UBaseVoxelTool {
	UVoxelBlendMeshesToolProperties* BlendProperties; // 0x108
};

struct UMovieScenePropertySystem : UMovieSceneEntitySystem {
	UMovieScenePropertyInstantiatorSystem* InstantiatorSystem; // 0x40
};

struct ULandscapeSplinesComponent : UPrimitiveComponent {
	TArray<ULandscapeSplineControlPoint*> ControlPoints; // 0x488
	TArray<ULandscapeSplineSegment*> Segments; // 0x498
	TArray<UMeshComponent*> CookedForeignMeshComponents; // 0x4a8
};

struct UDLSSSettings : UObject {
	bool bEnableDLSSD3D12; // 0x28
	bool bEnableDLSSD3D11; // 0x29
	bool bEnableDLSSVulkan; // 0x2a
	bool bEnableDLSSInEditorViewports; // 0x2b
	bool bEnableScreenpercentageManipulationInDLSSEditorViewports; // 0x2c
	bool bEnableDLSSInPlayInEditorViewports; // 0x2d
	bool bShowDLSSSDebugOnScreenMessages; // 0x2e
	FString GenericDLSSBinaryPath; // 0x30
	bool bGenericDLSSBinaryExists; // 0x40
	uint32_t NVIDIANGXApplicationId; // 0x44
	FString CustomDLSSBinaryPath; // 0x48
	bool bCustomDLSSBinaryExists; // 0x58
};

struct UParticleModuleTypeDataGpu : UParticleModuleTypeDataBase {
	FGPUSpriteEmitterInfo EmitterInfo; // 0x30
	FGPUSpriteResourceData ResourceData; // 0x2b0
	float CameraMotionBlurAmount; // 0x410
	char bClearExistingParticlesOnInit : 1; // 0x414
};

struct UAchievementRewardItem : UUserWidget {
	UN_ItemTips* TipsClass; // 0x260
	USGItem* BindItem; // 0x268
	UImage* ImgIcon; // 0x270
	UTextBlock* TbAmount; // 0x278
	USGUI* BindRootUI; // 0x280
};

struct UMaterialExpressionSign : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UMovieScene3DPathSection : UMovieScene3DConstraintSection {
	FMovieSceneFloatChannel TimingCurve; // 0x110
	MovieScene3DPathSection_Axis FrontAxisEnum; // 0x1b0
	MovieScene3DPathSection_Axis UpAxisEnum; // 0x1b1
	char bFollow : 1; // 0x1b4
	char bReverse : 1; // 0x1b4
	char bForceUpright : 1; // 0x1b4
};

struct UGeneralAuctionPanel : USGUI {
	UScrollBox* ScrollGeneralList; // 0x2d8
	UGuildAuthorityComboBox* ComboBoxQuality; // 0x2e0
	UGuildAuthorityComboBox* ComboBoxSpecialType; // 0x2e8
	UGuildAuthorityComboBox* ComboBoxLevel; // 0x2f0
	UButton* SearchButton; // 0x2f8
	UButton* BuyButton; // 0x300
	UN_EquipPanel* EquipPanel; // 0x308
	UAttributePanel* AttributePanel; // 0x310
	UConditionPanel* ConditionPanel; // 0x318
	USkillPanel* SkillPanel; // 0x320
	UOptionButton* AttributeButton; // 0x328
	UOptionButton* ConditionButton; // 0x330
	UOptionButton* SkillButton; // 0x338
	UCanvasPanel* CanvasPanel_Preview; // 0x340
	UTextBlock* TextBlock_GeneralName; // 0x348
	UTextBlock* TextBlock_GeneralLevel; // 0x350
	UImage* GeneralQualityImage; // 0x358
	UImage* GeneralNameBg; // 0x360
	UButton* Button_Previous; // 0x368
	UButton* Button_Next; // 0x370
	UTextBlock* TextBlock_CurrentPage; // 0x378
	UGeneralAuctionSellSlot* GeneralAuctionSellSlot; // 0x380
	TSoftObjectPtr<UTexture2D> GeneralQuality[0x6]; // 0x388
	TSoftObjectPtr<UTexture2D> GeneralNameBrush[0x4]; // 0x478
	FLinearColor GeneralNameColor[0x6]; // 0x518
	int32_t MaxLevel; // 0x578
	int32_t MaxPage; // 0x57c
	int32_t OnePageDataCount; // 0x580
	TWeakObjectPtr<UGeneralAuctionSellSlot> GeneralSlotSelected; // 0x598
	TWeakObjectPtr<UUI_GuildAuctionHouse> ParentUI; // 0x5a0
};

struct USynthComponentMonoWaveTable : USynthComponent {
	FMulticastInlineDelegate OnTableAltered; // 0x6d0
	FMulticastInlineDelegate OnNumTablesChanged; // 0x6e0
	UMonoWaveTableSynthPreset* CurrentPreset; // 0x6f0
};

struct UReflectionCaptureComponent : USceneComponent {
	UBillboardComponent* CaptureOffsetComponent; // 0x208
	EReflectionSourceType ReflectionSourceType; // 0x210
	EMobileReflectionCompression MobileReflectionCompression; // 0x211
	UTextureCube* Cubemap; // 0x218
	float SourceCubemapAngle; // 0x220
	float Brightness; // 0x224
	bool bModifyMaxValueRGBM; // 0x228
	float MaxValueRGBM; // 0x22c
	FVector CaptureOffset; // 0x230
	FGuid MapBuildDataId; // 0x23c
	UTextureCube* CachedEncodedHDRCubemap; // 0x260
};

struct USmoothMeshToolProperties : UInteractiveToolPropertySet {
	ESmoothMeshToolSmoothType SmoothingType; // 0x60
};

struct UBehaviorTreeManager : UObject {
	int32_t MaxDebuggerSteps; // 0x28
	TArray<FBehaviorTreeTemplateInfo> LoadedTemplates; // 0x30
	TArray<UBehaviorTreeComponent*> ActiveComponents; // 0x40
};

struct UMiniMapPOI_OccupyStructure : UMiniMapPOI {
	TSoftObjectPtr<UTexture2D> DifferentTeamInMiniMapTexture; // 0x390
	FLinearColor DifferentTeamInMiniMapColor; // 0x3b8
	TSoftObjectPtr<UTexture2D> DifferentTeamOutOfMiniMapTexture; // 0x3c8
	FLinearColor DifferentTeamOutOfMiniMapColor; // 0x3f0
	TSoftObjectPtr<UTexture2D> NoProtectInMiniMapTexture; // 0x400
	FLinearColor NoProtectInMiniMapColor; // 0x428
	TSoftObjectPtr<UTexture2D> NoProtectOutOfMiniMapTexture; // 0x438
	FLinearColor NoProtectOutOfMiniMapColor; // 0x460
	FOccupyStructureRPC StructureRPC; // 0x470
};

struct USubmixEffectDynamicsProcessorPreset : USoundEffectSubmixPreset {
	FSubmixEffectDynamicsProcessorSettings Settings; // 0xe0
};

struct UActorComponent : UObject {
	FActorComponentTickFunction PrimaryComponentTick; // 0x38
	TArray<FName> ComponentTags; // 0x68
	TArray<UAssetUserData*> AssetUserData; // 0x78
	int32_t UCSSerializationIndex; // 0x8c
	char bNetAddressable : 1; // 0x90
	char bReplicates : 1; // 0x90
	char bAutoActivate : 1; // 0x93
	char bIsActive : 1; // 0x93
	char bEditableWhenInherited : 1; // 0x93
	char bCanEverAffectNavigation : 1; // 0x94
	char bIsEditorOnly : 1; // 0x94
	EComponentCreationMethod CreationMethod; // 0x96
	FMulticastSparseDelegate OnComponentActivated; // 0x97
	FMulticastSparseDelegate OnComponentDeactivated; // 0x98
	TArray<FSimpleMemberReference> UCSModifiedProperties; // 0xa0
};

struct UMaterialExpressionSceneColor : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput OffsetFraction; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct UBTService_Shooting : UBTService_SGBlueprintBase {
	FBlackboardKeySelector BBKey_ShouldMoving; // 0x118
	FBlackboardKeySelector BBKey_RunAway; // 0x140
	char bIsDrawDebugAttackTrace : 1; // 0x230
	ETraceTypeQuery AttackTraceChannel; // 0x231
	FVector2D CustomArcParamDistance; // 0x234
	FVector2D CustomArcParamValue; // 0x23c
	UCurveFloat* ShootingUpCurve; // 0x248
};

struct UGuildEventConfig : UObject {
	float GuildEventCommonCD; // 0x28
	TMap<EEventGuildType, FGuildEventConfigEntry> ConfigEntries; // 0x30
};

struct UGameplayCueManager : UDataAsset {
	FGameplayCueObjectLibrary RuntimeGameplayCueObjectLibrary; // 0x48
	FGameplayCueObjectLibrary EditorGameplayCueObjectLibrary; // 0x98
	TArray<UObject*> LoadedGameplayCueNotifyClasses; // 0x2b0
	TArray<AGameplayCueNotify_Actor*> GameplayCueClassesForPreallocation; // 0x2c0
	TArray<FGameplayCuePendingExecute> PendingExecuteCues; // 0x2d0
	int32_t GameplayCueSendContextCount; // 0x2e0
	TArray<FPreallocationInfo> PreallocationInfoList_Internal; // 0x2e8
};

struct UConditionPanelEditablePanel : UUserWidget {
	UTextBlock* LeftMasteryPointText; // 0x260
	UTextBlock* LeftPointText; // 0x268
	UUserWidget* ParentUI; // 0x270
};

struct UNN_CraftPerkGroupTips : USGToolTipWidget {
	UVerticalBox* MainVertical; // 0x288
	UTextBlock* NameText; // 0x290
	UTextBlock* LockText; // 0x298
	UTextBlock* DesText; // 0x2a0
	UCanvasPanel* RequireCanvas; // 0x2a8
	UVerticalBox* RequireVertical; // 0x2b0
	UCanvasPanel* RequireCraftPerkCanvas; // 0x2b8
	UVerticalBox* RequireCraftPerkVertical; // 0x2c0
	UCanvasPanel* RequirePerkCanvas; // 0x2c8
	UVerticalBox* RequirePerkVertical; // 0x2d0
	UCanvasPanel* RequireItemsCanvas; // 0x2d8
	UVerticalBox* RequireItemsVertical; // 0x2e0
	UCanvasPanel* RequireBottomLineCanvas; // 0x2e8
	UCanvasPanel* CraftNameCanvas; // 0x2f0
	UVerticalBox* CraftNameVertical; // 0x2f8
	UCanvasPanel* CraftNameBottomLineCanvas; // 0x300
	FText CraftLockText; // 0x308
	FText CraftUnLockText; // 0x320
	FSlateFontInfo TextFontInfo; // 0x338
	FLinearColor EnoughColor; // 0x390
	FLinearColor NotEnoughColot; // 0x3a0
	TWeakObjectPtr<USGCraftPerkGroup> BindCraftPerkGroup; // 0x3b0
	USGImageNameTips* ImageNameTipsTemplate; // 0x3b8
	float ToolTipsDescriptionTextWrapDelta; // 0x3c0
};

struct UTattooLayerRadio : UUI_RadioButton {
	UTextBlock* TbTitle; // 0x550
	UButton* BtnBg; // 0x558
	UButton* BtnDelete; // 0x560
};

struct UBTDecorator_Blackboard : UBTDecorator_BlackboardBase {
	int32_t IntValue; // 0x90
	float FloatValue; // 0x94
	FString StringValue; // 0x98
	FString CachedDescription; // 0xa8
	char OperationType; // 0xb8
	EBTBlackboardRestart NotifyObserver; // 0xb9
};

struct ALuminAROrigin : AAROriginActor {
	UMRMeshComponent* MRMeshComponent; // 0x310
	UMaterialInterface* PlaneSurfaceMaterial; // 0x318
	UMaterialInterface* WireframeMaterial; // 0x320
};

struct UVectorFieldAnimated : UVectorField {
	UTexture2D* Texture; // 0x48
	EVectorFieldConstructionOp ConstructionOp; // 0x50
	int32_t VolumeSizeX; // 0x54
	int32_t VolumeSizeY; // 0x58
	int32_t VolumeSizeZ; // 0x5c
	int32_t SubImagesX; // 0x60
	int32_t SubImagesY; // 0x64
	int32_t FrameCount; // 0x68
	float FramesPerSecond; // 0x6c
	char bLoop : 1; // 0x70
	UVectorFieldStatic* NoiseField; // 0x78
	float NoiseScale; // 0x80
	float NoiseMax; // 0x84
};

struct UBTTask_CustomMoveTo : UBTTask_SGBlueprintBase {
	FBlackboardKeySelector BBKey_DesiredActor; // 0xf0
	FBlackboardKeySelector BBKey_DesiredLocation; // 0x118
	FBlackboardKeySelector BBKey_ForceUpdateNavigationPath; // 0x140
	char bLockDesiredActor : 1; // 0x184
	char bClearForceMoveToLoc : 1; // 0x184
	char bUpdateKeepAwayDesiredActor : 1; // 0x184
	FVector2D UpdateKeepAwayRandomMaxWaitTimeRange; // 0x190
	FVector2D UpdateKeepAwayLookDirection; // 0x198
	char bUpdateKeepInPlaceLoc : 1; // 0x1a0
	char bUpdateDesiredLocOnActor : 1; // 0x1a0
	char bUpdateDesiredLocOnFormation : 1; // 0x1a0
	char bUseOtherTaskMovement : 1; // 0x1a0
	float TetherDistance; // 0x1b8
	float AcceptableRadius; // 0x1bc
	float AcceptableRadiusOnPathEnd; // 0x1c0
	float AcceptableRadiusOnPathEndTolerance; // 0x1c4
	UNavigationQueryFilter* NavPathFilterClass; // 0x1c8
	FVector2D NavPathCoolingTimeRange; // 0x1dc
	char bFinishedOnsReachDesiredLocation : 1; // 0x1f0
	float ToleranceOnProjectedPathEnd; // 0x1f4
	float NavPathRaycastDistance; // 0x204
	int32_t NavPathRaycastIndexMultiply; // 0x208
	FVector2D FindNewNavPathCoolingTimeRange; // 0x214
	float FollowAcceptableRadius; // 0x224
	FVector2D FindNewNavPathCoolingTimeRangeByFollow; // 0x228
	float MaxDeltaSpeed; // 0x234
	int32_t InvalidNavPathMaxCountOnSelfLocation; // 0x23c
	char bOverridePlayerInput : 1; // 0x240
	char bOverrideMovementInput : 1; // 0x240
	EInputDirection Enum_InputDirection; // 0x241
	FVector2D PlayerInputMaxCoolingTimeRange; // 0x24c
	FVector2D ClearPlayerInputMaxCoolingTimeRange; // 0x25c
	float CollisionDeltaSpeedPercent; // 0x2f0
	float TrySetActorDistance; // 0x2f4
	float RunningDistance; // 0x300
	FVector2D RunningMaxCoolingTimeRange; // 0x304
};

struct UUI_ChatInputBox : UUserWidget {
	UTextBlock* TellTextBlock; // 0x260
	UHorizontalBox* TellOtherHbox; // 0x268
	UButton* EscBtn; // 0x270
	UEditableTextBox* InputBox; // 0x278
	FSlateColor TellTextColor; // 0x288
	int32_t MaxTellTextLength; // 0x2b0
};

struct ULiveLinkVirtualSubject : UObject {
	ULiveLinkRole* Role; // 0x30
	TArray<FLiveLinkSubjectName> Subjects; // 0x38
	TArray<ULiveLinkFrameTranslator*> FrameTranslators; // 0x48
};

struct ULayer : UObject {
	FName LayerName; // 0x28
	char bIsVisible : 1; // 0x30
	TArray<FLayerActorStats> ActorStats; // 0x38
};

struct UUI_ReportReason : UUserWidget {
	UBorder* MainBorder; // 0x260
	UTextBlock* ReasonText; // 0x268
	TSoftObjectPtr<UTexture2D> SelectedIcon; // 0x270
	TSoftObjectPtr<UTexture2D> NormalIcon; // 0x298
	EReportReasonType ReportReason; // 0x2c0
	FText ReasonShowText; // 0x2c8
};

struct UGizmoComponentHitTarget : UObject {
	UPrimitiveComponent* Component; // 0x30
};

struct UFindTurnBasedMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UARPlaneGeometry : UARTrackedGeometry {
	EARPlaneOrientation Orientation; // 0xf8
	FVector Center; // 0xfc
	FVector Extent; // 0x108
	TArray<FVector> BoundaryPolygon; // 0x118
	UARPlaneGeometry* SubsumedBy; // 0x128
};

struct ULandscapeHeightfieldCollisionComponent : UPrimitiveComponent {
	TArray<ULandscapeLayerInfoObject*> ComponentLayerInfos; // 0x488
	int32_t SectionBaseX; // 0x498
	int32_t SectionBaseY; // 0x49c
	int32_t CollisionSizeQuads; // 0x4a0
	float CollisionScale; // 0x4a4
	int32_t SimpleCollisionSizeQuads; // 0x4a8
	TArray<char> CollisionQuadFlags; // 0x4b0
	FGuid HeightfieldGuid; // 0x4c0
	FBox CachedLocalBox; // 0x4d0
	LazyObjectProperty RenderComponent; // 0x4ec
	TArray<UPhysicalMaterial*> CookedPhysicalMaterials; // 0x518
};

struct UUINoviceProtectionPanel : USGUI {
	UButton* Button_OK; // 0x2d8
	UButton* Button_Cancel; // 0x2e0
};

struct UParticleModuleMeshRotationRateOverLife : UParticleModuleRotationRateBase {
	FRawDistributionVector RotRate; // 0x30
	char bScaleRotRate : 1; // 0x78
};

struct UMaterialExpressionDesaturation : UMaterialExpression {
	FExpressionInput Input; // 0x40
	FExpressionInput Fraction; // 0x54
	FLinearColor LuminanceFactors; // 0x68
};

struct USynthKnob : UWidget {
	float Value; // 0x108
	float StepSize; // 0x10c
	float MouseSpeed; // 0x110
	float MouseFineTuneSpeed; // 0x114
	char ShowTooltipInfo : 1; // 0x118
	FText ParameterName; // 0x120
	FText ParameterUnits; // 0x138
	FDelegate ValueDelegate; // 0x150
	FSynthKnobStyle WidgetStyle; // 0x160
	bool Locked; // 0x398
	bool IsFocusable; // 0x399
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x3a0
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x3b0
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x3c0
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x3d0
	FMulticastInlineDelegate OnValueChanged; // 0x3e0
};

struct UUI_GuildApplyList : USGUI {
	UScrollBox* ApplyListPanel; // 0x2d8
	UDataButton* PrePageDataButton; // 0x2e0
	UDataButton* NextPageDataButton; // 0x2e8
	UTextBlock* ShowPageText; // 0x2f0
	UButton* ExitButton; // 0x2f8
	UCheckBox* AllowJoinCheckBox; // 0x300
	USortableTitleSlot* NameTitleSlot; // 0x308
	USortableTitleSlot* LevelTitleSlot; // 0x310
	USortableTitleSlot* ManagementTitleSlot; // 0x318
	int32_t ApplyNumPerPage; // 0x320
	UGuildApplySlot* GuildApplySlotClass; // 0x328
};

struct UMovieSceneEntitySystemLinker : UObject {
	FMovieSceneEntitySystemGraph SystemGraph; // 0x238
};

struct UGizmoPlaneTranslationParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	FVector2D Parameter; // 0xb0
	FGizmoVec2ParameterChange LastChange; // 0xb8
	FVector CurTranslationOrigin; // 0xc8
	FVector CurTranslationNormal; // 0xd4
	FVector CurTranslationAxisX; // 0xe0
	FVector CurTranslationAxisY; // 0xec
	FTransform InitialTransform; // 0x100
};

struct UDatasmithLandscapeTemplate : UDatasmithObjectTemplate {
	UMaterialInterface* LandscapeMaterial; // 0x30
	int32_t StaticLightingLOD; // 0x38
};

struct URendererSettings : UDeveloperSettings {
	char bMobileDisableVertexFog : 1; // 0x38
	int32_t MaxMobileCascades; // 0x3c
	EMobileMSAASampleCount MobileMSAASampleCount; // 0x40
	char bMobileAllowDitheredLODTransition : 1; // 0x44
	char bMobileAllowSoftwareOcclusionCulling : 1; // 0x44
	char bMobileVirtualTextures : 1; // 0x44
	char bDiscardUnusedQualityLevels : 1; // 0x44
	char bOcclusionCulling : 1; // 0x44
	float MinScreenRadiusForLights; // 0x48
	float MinScreenRadiusForEarlyZPass; // 0x4c
	float MinScreenRadiusForCSMdepth; // 0x50
	char bPrecomputedVisibilityWarning : 1; // 0x54
	char bTextureStreaming : 1; // 0x54
	char bUseDXT5NormalMaps : 1; // 0x54
	char bVirtualTextures : 1; // 0x54
	char bVirtualTexturedLightmaps : 1; // 0x54
	uint32_t VirtualTextureTileSize; // 0x58
	uint32_t VirtualTextureTileBorderSize; // 0x5c
	uint32_t VirtualTextureFeedbackFactor; // 0x60
	char bVirtualTextureEnableCompressZlib : 1; // 0x64
	char bVirtualTextureEnableCompressCrunch : 1; // 0x64
	char bClearCoatEnableSecondNormal : 1; // 0x64
	int32_t ReflectionCaptureResolution; // 0x68
	char bReflectionCaptureCompression : 1; // 0x6c
	char ReflectionEnvironmentLightmapMixBasedOnRoughness : 1; // 0x6c
	char bForwardShading : 1; // 0x6c
	char bVertexFoggingForOpaque : 1; // 0x6c
	char bAllowStaticLighting : 1; // 0x6c
	char bUseNormalMapsForStaticLighting : 1; // 0x6c
	char bGenerateMeshDistanceFields : 1; // 0x6c
	char bEightBitMeshDistanceFields : 1; // 0x6c
	char bGenerateLandscapeGIData : 1; // 0x6d
	char bCompressMeshDistanceFields : 1; // 0x6d
	float TessellationAdaptivePixelsPerTriangle; // 0x70
	char bSeparateTranslucency : 1; // 0x74
	ETranslucentSortPolicy TranslucentSortPolicy; // 0x78
	FVector TranslucentSortAxis; // 0x7c
	ECustomDepthStencil CustomDepthStencil; // 0x88
	char bCustomDepthTaaJitter : 1; // 0x8c
	EAlphaChannelMode bEnableAlphaChannelInPostProcessing; // 0x90
	char bDefaultFeatureBloom : 1; // 0x94
	char bDefaultFeatureAmbientOcclusion : 1; // 0x94
	char bDefaultFeatureAmbientOcclusionStaticFraction : 1; // 0x94
	char bDefaultFeatureAutoExposure : 1; // 0x94
	EAutoExposureMethodUI DefaultFeatureAutoExposure; // 0x98
	float DefaultFeatureAutoExposureBias; // 0x9c
	char bExtendDefaultLuminanceRangeInAutoExposureSettings : 1; // 0xa0
	char bUsePreExposure : 1; // 0xa0
	char bEnablePreExposureOnlyInTheEditor : 1; // 0xa0
	char bDefaultFeatureMotionBlur : 1; // 0xa0
	char bDefaultFeatureLensFlare : 1; // 0xa0
	char bTemporalUpsampling : 1; // 0xa0
	char bSSGI : 1; // 0xa0
	EAntiAliasingMethod DefaultFeatureAntiAliasing; // 0xa4
	ELightUnits DefaultLightUnits; // 0xa5
	EDefaultBackBufferPixelFormat DefaultBackBufferPixelFormat; // 0xa6
	char bRenderUnbuiltPreviewShadowsInGame : 1; // 0xa8
	char bStencilForLODDither : 1; // 0xa8
	EEarlyZPass EarlyZPass; // 0xac
	char bEarlyZPassOnlyMaterialMasking : 1; // 0xb0
	char bDBuffer : 1; // 0xb0
	EClearSceneOptions ClearSceneMethod; // 0xb4
	char bBasePassOutputsVelocity : 1; // 0xb8
	char bVertexDeformationOutputsVelocity : 1; // 0xb8
	char bSelectiveBasePassOutputs : 1; // 0xb8
	char bDefaultParticleCutouts : 1; // 0xb8
	int32_t GPUSimulationTextureSizeX; // 0xbc
	int32_t GPUSimulationTextureSizeY; // 0xc0
	char bGlobalClipPlane : 1; // 0xc4
	EGBufferFormat GBufferFormat; // 0xc8
	char bUseGPUMorphTargets : 1; // 0xcc
	char bNvidiaAftermathEnabled : 1; // 0xcc
	char bMultiView : 1; // 0xcc
	char bMobilePostProcessing : 1; // 0xcc
	char bMobileMultiView : 1; // 0xcc
	char bMobileUseHWsRGBEncoding : 1; // 0xcc
	char bRoundRobinOcclusion : 1; // 0xcc
	char bODSCapture : 1; // 0xcc
	char bMeshStreaming : 1; // 0xcd
	float WireframeCullThreshold; // 0xd0
	char bEnableRayTracing : 1; // 0xd4
	char bEnableRayTracingTextureLOD : 1; // 0xd4
	char bEnableHybridTranslucency : 1; // 0xd4
	char bSupportStationarySkylight : 1; // 0xd4
	char bSupportLowQualityLightmaps : 1; // 0xd4
	char bSupportPointLightWholeSceneShadows : 1; // 0xd4
	char bSupportAtmosphericFog : 1; // 0xd4
	char bSupportSkyAtmosphere : 1; // 0xd4
	char bSupportSkyAtmosphereAffectsHeightFog : 1; // 0xd5
	char bSupportSkinCacheShaders : 1; // 0xd5
	ESkinCacheDefaultBehavior DefaultSkinCacheBehavior; // 0xd8
	float SkinCacheSceneMemoryLimitInMB; // 0xdc
	char bMobileEnableStaticAndCSMShadowReceivers : 1; // 0xe0
	char bMobileEnableMovableLightCSMShaderCulling : 1; // 0xe0
	char bMobileAllowDistanceFieldShadows : 1; // 0xe0
	char bMobileAllowMovableDirectionalLights : 1; // 0xe0
	uint32_t MobileNumDynamicPointLights; // 0xe4
	char bMobileDynamicPointLightsUseStaticBranch : 1; // 0xe8
	char bMobileAllowMovableSpotlights : 1; // 0xe8
	char bMobileAllowMovableSpotlightShadows : 1; // 0xe8
	char bSupport16BitBoneIndex : 1; // 0xe8
	char bGPUSkinLimit2BoneInfluences : 1; // 0xe8
	char bSupportDepthOnlyIndexBuffers : 1; // 0xe8
	char bSupportReversedIndexBuffers : 1; // 0xe8
	char bLPV : 1; // 0xe8
	char bMobileAmbientOcclusion : 1; // 0xe9
	char bUseUnlimitedBoneInfluences : 1; // 0xe9
	int32_t UnlimitedBonInfluencesThreshold; // 0xec
	EMobilePlanarReflectionMode MobilePlanarReflectionMode; // 0xf0
	FPerPlatformBool bStreamSkeletalMeshLODs; // 0xf1
	FPerPlatformBool bDiscardSkeletalMeshOptionalLODs; // 0xf2
	FSoftObjectPath VisualizeCalibrationColorMaterialPath; // 0xf8
	FSoftObjectPath VisualizeCalibrationCustomMaterialPath; // 0x110
	FSoftObjectPath VisualizeCalibrationGrayscaleMaterialPath; // 0x128
};

struct USoundfieldEndpointSubmix : USoundSubmixBase {
	FName SoundfieldEndpointType; // 0x38
	UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40
	USoundfieldEndpointSettingsBase* EndpointSettings; // 0x48
	USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x50
	USoundfieldEncodingSettingsBase* EncodingSettings; // 0x58
	TArray<USoundfieldEffectBase*> SoundfieldEffectChain; // 0x60
};

struct UAlliancePanel : USGUI {
	UAllianceDetailsSlot* AllianceDetailsSlot; // 0x2d8
	UButton* LeaveAllianceButton; // 0x2e0
	UButton* DisBandAllianceButton; // 0x2e8
	UDataButton* PrePageDataButton; // 0x2f0
	UDataButton* NextPageDataButton; // 0x2f8
	UTextBlock* ShowPageText; // 0x300
	UScrollBox* MemberListPanel; // 0x308
	USortableTitleSlot* SortNameSlot; // 0x310
	USortableTitleSlot* SortLevelSlot; // 0x318
	USortableTitleSlot* SortGuildOwnerSlot; // 0x320
	USortableTitleSlot* SortMemberCountSlot; // 0x328
	USortableTitleSlot* SortStructureProssessAuthSlot; // 0x330
	USortableTitleSlot* ManagementTitleSlot; // 0x338
	int32_t AllianceMemberNumPerPage; // 0x340
	UAllianceMemberSlot* AllianceMemberSlotClass; // 0x348
	UUI_GenericConfirmationDialog* ConfirmLeaveAllianceUIOverride; // 0x350
	UUI_GenericConfirmationDialog* ConfirmDisBandAllianceUIOverride; // 0x358
	UUI_GenericConfirmationDialog* ConfirmKickOutAllianceMemberUIOverride; // 0x360
	UUI_ApplyGuildConfirm* ConfirmLeaveGuildUIOverride; // 0x368
};

struct UMaterialExpressionAdd : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UMeshAnalysisProperties : UInteractiveToolPropertySet {
	FString SurfaceArea; // 0x60
	FString Volume; // 0x70
};

struct UEnvQueryInstanceBlueprintWrapper : UObject {
	int32_t QueryID; // 0x30
	UEnvQueryItemType* ItemType; // 0x58
	int32_t OptionIndex; // 0x60
	FMulticastInlineDelegate OnQueryFinishedEvent; // 0x68
};

struct UGameCharacterBuffPanel : UUserWidget {
	UGameCharacterBuffItem* ItemClass; // 0x260
	int32_t ColumnsPerRow; // 0x268
	UUniformGridPanel* UGPBuff; // 0x290
};

struct UNiagaraDataInterfaceRWBase : UNiagaraDataInterface {
	TSet<int32_t> OutputShaderStages; // 0x38
	TSet<int32_t> IterationShaderStages; // 0x88
};

struct UBackgroundBlur : UContentWidget {
	FMargin Padding; // 0x120
	EHorizontalAlignment HorizontalAlignment; // 0x130
	EVerticalAlignment VerticalAlignment; // 0x131
	bool bApplyAlphaToBlur; // 0x132
	float BlurStrength; // 0x134
	bool bOverrideAutoRadiusCalculation; // 0x138
	int32_t BlurRadius; // 0x13c
	FSlateBrush LowQualityFallbackBrush; // 0x140
};

struct UPostProcessComponent : USceneComponent {
	FPostProcessSettings Settings; // 0x210
	FMulticastInlineDelegate OnEncompassesPoint; // 0x770
	float Priority; // 0x780
	float BlendRadius; // 0x784
	float BlendWeight; // 0x788
	char bEnabled : 1; // 0x78c
	char bUnbound : 1; // 0x78c
};

struct UParticleModuleEventReceiverKillParticles : UParticleModuleEventReceiverBase {
	char bStopSpawning : 1; // 0x40
};

struct UParticleModuleSubUV : UParticleModuleSubUVBase {
	USubUVAnimation* Animation; // 0x30
	FRawDistributionFloat SubImageIndex; // 0x38
	char bUseRealTime : 1; // 0x68
};

struct UAddPatchTool : USingleClickTool {
	UAddPatchToolProperties* ShapeSettings; // 0x90
	UNewMeshMaterialProperties* MaterialProperties; // 0x98
	UPreviewMesh* PreviewMesh; // 0xa0
};

struct USGRichTextBlock : UWidget {
	FText Text; // 0x108
	FTextBlockStyle WidgetStyle; // 0x120
	bool AutoWrapText; // 0x390
	float WrapTextAt; // 0x394
	ETextJustify Justification; // 0x398
	FMargin Margin; // 0x39c
	float LineHeightPercentage; // 0x3ac
};

struct UUIWSInteractorComponent : UActorComponent {
	bool bShouldInteract; // 0xc0
	bool bEnableInteractiveStateSwitching; // 0xc1
	float MinInteractionVelocity; // 0xc4
};

struct USubmixEffectReverbPluginPreset : USoundEffectSubmixPreset {
	FSubmixEffectReverbPluginSettings Settings; // 0x91
};

struct UMaterialExpressionBlendMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput A; // 0x40
	FMaterialAttributesInput B; // 0x58
	FExpressionInput Alpha; // 0x70
	EMaterialAttributeBlend PixelAttributeBlendType; // 0x84
	EMaterialAttributeBlend VertexAttributeBlendType; // 0x85
};

struct UImgMediaSettings : UObject {
	FFrameRate DefaultFrameRate; // 0x28
	float CacheBehindPercentage; // 0x30
	float CacheSizeGB; // 0x34
	int32_t CacheThreads; // 0x38
	int32_t CacheThreadStackSizeKB; // 0x3c
	float GlobalCacheSizeGB; // 0x40
	bool UseGlobalCache; // 0x44
	uint32_t ExrDecoderThreads; // 0x48
	FString DefaultProxy; // 0x50
	bool UseDefaultProxy; // 0x60
};

struct ASGStructureT2Basement : ASGStructureBasement {
	ASGStructureOccupyFlag* AttackBasementFlag; // 0x1298
	ASGStructureOccupyFlag* DefenseBasementFlag; // 0x12a0
	float BattleGroundMusicProgressThreshold; // 0x12a8
};

struct UScaleBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UMovieScene3DConstraintSection : UMovieSceneSection {
	FGuid ConstraintId; // 0xe8
	FMovieSceneObjectBindingID ConstraintBindingID; // 0xf8
};

struct UCombineMeshesToolProperties : UInteractiveToolPropertySet {
	bool bIsDuplicateMode; // 0x60
	ECombineTargetType WriteOutputTo; // 0x64
	FString OutputName; // 0x68
	FString OutputAsset; // 0x78
};

struct UBTDecorator_Cooldown : UBTDecorator {
	float CooldownTime; // 0x68
};

struct UMediaPlaylist : UObject {
	TArray<UMediaSource*> Items; // 0x28
};

struct ASG_AnimalVehicleCharacter : ASG_AnimalsCharacter {
	USGItem* Armor; // 0x3a48
	USGItem* Saddle; // 0x3a50
	USGItem* Flag; // 0x3a58
	FString FlagImageString; // 0x3a60
	UMaterialInstanceDynamic* DMI_FlagImage; // 0x3a70
	UTextureRenderTarget2D* RT_FlagImage; // 0x3a78
	FDateTime LockTime; // 0x3a88
	TArray<FAttackData> AttackArray; // 0x3a90
	char bCanRideUseWeapon : 1; // 0x3ab8
	char bRiderDrawInteractive : 1; // 0x3ab8
};

struct UAISense_Team : UAISense {
	TArray<FAITeamStimulusEvent> RegisteredEvents; // 0x80
};

struct ABP_HorseMC_Base_C : ACharacter {
	FPointerToUberGraphFrame UberGraphFrame; // 0x5d0
	USkeletalMeshComponent* SK_Horse_Ponytail_01; // 0x5d8
	USkeletalMeshComponent* SK_Horse_Bristle_01; // 0x5e0
	UGroomComponent* Groom1; // 0x5e8
	UGroomComponent* Groom; // 0x5f0
	USkeletalMeshComponent* SK_Horse_FS_Saddle_05; // 0x5f8
	USkeletalMeshComponent* Pants; // 0x600
	USkeletalMeshComponent* Shirt; // 0x608
	USkeletalMeshComponent* Helmet; // 0x610
	USkeletalMeshComponent* Human; // 0x618
	float PreviewAnimPosition; // 0x620
};

struct UParticleModuleMeshRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionVector LifeMultiplier; // 0x30
};

struct AAIController : AController {
	char bStartAILogicOnPossess : 1; // 0x3c0
	char bStopAILogicOnUnposses : 1; // 0x3c0
	char bLOSflag : 1; // 0x3c0
	char bSkipExtraLOSChecks : 1; // 0x3c0
	char bAllowStrafe : 1; // 0x3c0
	char bWantsPlayerState : 1; // 0x3c0
	char bSetControlRotationFromPawnOrientation : 1; // 0x3c0
	UPathFollowingComponent* PathFollowingComponent; // 0x3c8
	UBrainComponent* BrainComponent; // 0x3d0
	UAIPerceptionComponent* PerceptionComponent; // 0x3d8
	UPawnActionsComponent* ActionsComp; // 0x3e0
	UBlackboardComponent* Blackboard; // 0x3e8
	UGameplayTasksComponent* CachedGameplayTasksComponent; // 0x3f0
	UNavigationQueryFilter* DefaultNavigationFilterClass; // 0x3f8
	FMulticastInlineDelegate ReceiveMoveCompleted; // 0x400
};

struct ADatasmithAreaLightActor : AActor {
	EDatasmithAreaLightActorType LightType; // 0x310
	EDatasmithAreaLightActorShape LightShape; // 0x311
	FVector2D Dimensions; // 0x314
	float Intensity; // 0x31c
	ELightUnits IntensityUnits; // 0x320
	FLinearColor Color; // 0x324
	float Temperature; // 0x334
	UTextureLightProfile* IESTexture; // 0x338
	bool bUseIESBrightness; // 0x340
	float IESBrightnessScale; // 0x344
	FRotator Rotation; // 0x348
	float SourceRadius; // 0x354
	float SourceLength; // 0x358
	float AttenuationRadius; // 0x35c
	float SpotlightInnerAngle; // 0x360
	float SpotlightOuterAngle; // 0x364
};

struct AServerStatReplicator : AInfo {
	bool bUpdateStatNet; // 0x310
	bool bOverwriteClientStats; // 0x311
	uint32_t Channels; // 0x314
	uint32_t InRate; // 0x318
	uint32_t OutRate; // 0x31c
	uint32_t MaxPacketOverhead; // 0x324
	uint32_t InRateClientMax; // 0x328
	uint32_t InRateClientMin; // 0x32c
	uint32_t InRateClientAvg; // 0x330
	uint32_t InPacketsClientMax; // 0x334
	uint32_t InPacketsClientMin; // 0x338
	uint32_t InPacketsClientAvg; // 0x33c
	uint32_t OutRateClientMax; // 0x340
	uint32_t OutRateClientMin; // 0x344
	uint32_t OutRateClientAvg; // 0x348
	uint32_t OutPacketsClientMax; // 0x34c
	uint32_t OutPacketsClientMin; // 0x350
	uint32_t OutPacketsClientAvg; // 0x354
	uint32_t NetNumClients; // 0x358
	uint32_t InPackets; // 0x35c
	uint32_t OutPackets; // 0x360
	uint32_t InBunches; // 0x364
	uint32_t OutBunches; // 0x368
	uint32_t OutLoss; // 0x36c
	uint32_t InLoss; // 0x370
	uint32_t VoiceBytesSent; // 0x374
	uint32_t VoiceBytesRecv; // 0x378
	uint32_t VoicePacketsSent; // 0x37c
	uint32_t VoicePacketsRecv; // 0x380
	uint32_t PercentInVoice; // 0x384
	uint32_t PercentOutVoice; // 0x388
	uint32_t NumActorChannels; // 0x38c
	uint32_t NumConsideredActors; // 0x390
	uint32_t PrioritizedActors; // 0x394
	uint32_t NumRelevantActors; // 0x398
	uint32_t NumRelevantDeletedActors; // 0x39c
	uint32_t NumReplicatedActorAttempts; // 0x3a0
	uint32_t NumReplicatedActors; // 0x3a4
	uint32_t NumActors; // 0x3a8
	uint32_t NumNetActors; // 0x3ac
	uint32_t NumDormantActors; // 0x3b0
	uint32_t NumInitiallyDormantActors; // 0x3b4
	uint32_t NumNetGUIDsAckd; // 0x3b8
	uint32_t NumNetGUIDsPending; // 0x3bc
	uint32_t NumNetGUIDsUnAckd; // 0x3c0
	uint32_t ObjPathBytes; // 0x3c4
	uint32_t NetGUIDOutRate; // 0x3c8
	uint32_t NetGUIDInRate; // 0x3cc
	uint32_t NetSaturated; // 0x3d0
};

struct ABP_MenuHUD_C : ASGMenuHUD {
	USceneComponent* DefaultSceneRoot; // 0x490
};

struct UGeometryCacheTrackStreamable : UGeometryCacheTrack {
	UGeometryCacheCodecBase* Codec; // 0x58
	float StartSampleTime; // 0xc8
};

struct ULenovoQueryBox : UUserWidget {
	ULenovoQueryOption* OptionTemplate; // 0x260
	int32_t MaxOptionNumPerPage; // 0x268
	UEditableText* EtbSearch; // 0x270
	UCanvasPanel* OptionCanvas; // 0x278
	UUniformGridPanel* UGPOptions; // 0x280
	UButton* BtnLastOption; // 0x288
	UButton* BtnNextOption; // 0x290
	TArray<FString> StringOptions; // 0x2d8
	TArray<int32_t> ValidOptionIndexes; // 0x2e8
	TArray<ULenovoQueryOption*> LenovoQueryOptions; // 0x2f8
	int32_t StartIndex; // 0x308
	FString SearchString; // 0x310
	ULenovoQueryOption* SelectLenovoQuery; // 0x320
	int32_t SelectLenovoQueryOptionIndex; // 0x328
	char bOptionCanvasOpened : 1; // 0x32c
};

struct UMaterialExpressionRuntimeVirtualTextureSampleParameter : UMaterialExpressionRuntimeVirtualTextureSample {
	FName ParameterName; // 0x90
	FGuid ExpressionGUID; // 0x98
	FName Group; // 0xa8
};

struct USystemSettingItem : UUserWidget {
	USystemSettingItemTips* SettingTipsTemplate; // 0x260
};

struct USoundGroups : UObject {
	TArray<FSoundGroup> SoundGroupProfiles; // 0x28
};

struct UParticleModuleVelocityOverLifetime : UParticleModuleVelocityBase {
	FRawDistributionVector VelOverLife; // 0x38
	char Absolute : 1; // 0x80
};

struct UUI_ColorSelector : UUserWidget {
	int32_t ItemNumPerPage; // 0x260
	float ItemSizeOffset; // 0x264
	float ItemInterpSpeed; // 0x268
	UUI_ColorItem* ItemTemplate; // 0x270
	UScrollBox* MainScrollBox; // 0x288
	UUniformGridPanel* UGPColor; // 0x290
	UTextBlock* TbCurPage; // 0x298
	UTextBlock* TbMaxPage; // 0x2a0
	UButton* BtnLastPage; // 0x2a8
	UButton* BtnNextPage; // 0x2b0
	UUI_ColorItem* SelectColorItem; // 0x2b8
	TArray<UUI_ColorItem*> ColorItems; // 0x2c0
};

struct UPhysicsConstraintTemplate : UObject {
	FConstraintInstance DefaultInstance; // 0x28
	TArray<FPhysicsConstraintProfileHandle> ProfileHandles; // 0x1e8
	FConstraintProfileProperties DefaultProfile; // 0x1f8
};

struct UBTDecorator_LoopByDynamic : UBTDecorator_Loop {
	FBlackboardKeySelector BlackboardKeyNumLoops; // 0x78
};

struct UBTTask_DoWander : UBTTask_AnimalBase {
	float CheckStaticSpawnVolumeInterval; // 0xd0
};

struct UBlackboardData : UDataAsset {
	UBlackboardData* Parent; // 0x30
	TArray<FBlackboardEntry> Keys; // 0x38
	char bHasSynchronizedKeys : 1; // 0x48
};

struct UTriangleSetComponent : UMeshComponent {
	FBoxSphereBounds Bounds; // 0x4b0
	bool bBoundsDirty; // 0x4cc
};

struct UEditableTextWidgetStyle : USlateWidgetStyleContainerBase {
	FEditableTextStyle EditableTextStyle; // 0x30
};

struct UUVLayoutPreviewProperties : UInteractiveToolPropertySet {
	bool bVisible; // 0x60
	float ScaleFactor; // 0x64
	EUVLayoutPreviewSide WhichSide; // 0x68
	bool bShowWireframe; // 0x6c
	FVector2D Shift; // 0x70
};

struct UTcpMessagingSettings : UObject {
	bool EnableTransport; // 0x28
	FString ListenEndpoint; // 0x30
	TArray<FString> ConnectToEndpoints; // 0x40
	int32_t ConnectionRetryDelay; // 0x50
	bool bStopServiceWhenAppDeactivates; // 0x54
};

struct UMovieSceneFadeSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe8
	FLinearColor FadeColor; // 0x188
	char bFadeAudio : 1; // 0x198
};

struct UMaterialExpressionParameter : UMaterialExpression {
	FName ParameterName; // 0x40
	FGuid ExpressionGUID; // 0x48
};

struct USubmixEffectFilterPreset : USoundEffectSubmixPreset {
	FSubmixEffectFilterSettings Settings; // 0x9c
};

struct USGExploitComponent : UActorComponent {
	int32_t Level; // 0xc0
	char bInteractiveExploit : 1; // 0xc4
	char bAllowExploitHealthScale : 1; // 0xc4
	EExploitCompType ExploitCompType; // 0xc5
	float GiveItemHealthInterval; // 0xc8
	float MaxExploitHealth; // 0xcc
	float CurrentExploitHealth; // 0xd0
	float InteractiveDamageAmount; // 0xd4
	EExploitInteractiveType InteractiveType; // 0xd8
	UDamageType* InteractiveDamageTypeClass; // 0xe0
	TArray<FDamageExploitEntry> ExploitDamageEntries; // 0xe8
	USGFoliageInstancedStaticMeshComponent* EmbededFoliageHISM; // 0x110
	char bEnableRecover : 1; // 0x118
	float MinRecoverTime; // 0x11c
	float MaxRecoverTime; // 0x120
	float ConsumeExtraTimeGap; // 0x124
	float ConsumeExtraTimePower; // 0x128
	float ConsumeExtraTimeScale; // 0x12c
	float ReduceExtraTimeSpeed; // 0x130
	float RecoverPlayerCheckDistance; // 0x134
	float RecoverStructureCheckDistance; // 0x138
	EExploitSubType ExploitSubType; // 0x13c
	char bSpawnSEOnDestroy : 1; // 0x13d
	float SEProbability; // 0x140
	AActor* SEActorClass; // 0x148
	FVector PlaceOffest; // 0x150
};

struct ALargeTerrain_Central_Mainlight_C : ALevelScriptActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x318
};

struct UUI_Activity_Taishou : USGUI {
	FBattleServiceQueueCountInfo BattleServiceQueueCountInfo; // 0x2d8
	UButton* BtEnterBattle; // 0x2e0
	UButton* BtShowCrossTransport; // 0x2e8
	UButton* BtShowBattle; // 0x2f0
	UButton* BtShowInventory; // 0x2f8
	UTextBlock* TbEnterBattle; // 0x300
	UTextBlock* TbBattleName; // 0x308
	UTextBlock* TbBattleTime; // 0x310
	UTaishouTeamInfoSlot* TeamInfoSlot1_2; // 0x318
	UImage* Image_GuildNameBg1_2; // 0x320
	UImage* Image_WinLine1_2; // 0x328
	UTextBlock* CoutryGuildName1_2; // 0x330
	UTaishouTeamInfoSlot* TeamInfoSlot1_3; // 0x338
	UImage* Image_GuildNameBg1_3; // 0x340
	UImage* Image_WinLine1_3; // 0x348
	UTextBlock* CoutryGuildName1_3; // 0x350
	UTaishouTeamInfoSlot* TeamInfoSlot1_4; // 0x358
	UImage* Image_GuildNameBg1_4; // 0x360
	UImage* Image_WinLine1_4; // 0x368
	UTextBlock* CoutryGuildName1_4; // 0x370
	UTaishouTeamInfoSlot* TeamInfoSlot1_5; // 0x378
	UImage* Image_GuildNameBg1_5; // 0x380
	UImage* Image_WinLine1_5; // 0x388
	UTextBlock* CoutryGuildName1_5; // 0x390
	UTaishouTeamInfoSlot* TeamInfoSlot1_6; // 0x398
	UImage* Image_GuildNameBg1_6; // 0x3a0
	UImage* Image_WinLine1_6; // 0x3a8
	UTextBlock* CoutryGuildName1_6; // 0x3b0
	UTaishouTeamInfoSlot* TeamInfoSlot1_7; // 0x3b8
	UImage* Image_GuildNameBg1_7; // 0x3c0
	UImage* Image_WinLine1_7; // 0x3c8
	UTextBlock* CoutryGuildName1_7; // 0x3d0
	UTaishouTeamInfoSlot* TeamInfoSlot1_8; // 0x3d8
	UImage* Image_GuildNameBg1_8; // 0x3e0
	UImage* Image_WinLine1_8; // 0x3e8
	UTextBlock* CoutryGuildName1_8; // 0x3f0
	UTaishouTeamInfoSlot* TeamInfoSlot1_9; // 0x3f8
	UImage* Image_GuildNameBg1_9; // 0x400
	UImage* Image_WinLine1_9; // 0x408
	UTextBlock* CoutryGuildName1_9; // 0x410
	UTaishouTeamInfoSlot* TeamInfoSlot1_10; // 0x418
	UImage* Image_GuildNameBg1_10; // 0x420
	UImage* Image_WinLine1_10; // 0x428
	UTextBlock* CoutryGuildName1_10; // 0x430
	UTaishouTeamInfoSlot* TeamInfoSlot1_11; // 0x438
	UImage* Image_GuildNameBg1_11; // 0x440
	UImage* Image_WinLine1_11; // 0x448
	UTextBlock* CoutryGuildName1_11; // 0x450
	UTaishouTeamInfoSlot* TeamInfoSlot1_12; // 0x458
	UImage* Image_GuildNameBg1_12; // 0x460
	UImage* Image_WinLine1_12; // 0x468
	UTextBlock* CoutryGuildName1_12; // 0x470
	UTaishouTeamInfoSlot* TeamInfoSlot1_13; // 0x478
	UImage* Image_GuildNameBg1_13; // 0x480
	UImage* Image_WinLine1_13; // 0x488
	UTextBlock* CoutryGuildName1_13; // 0x490
	UTaishouTeamInfoSlot* TeamInfoSlot1_14; // 0x498
	UImage* Image_GuildNameBg1_14; // 0x4a0
	UImage* Image_WinLine1_14; // 0x4a8
	UTextBlock* CoutryGuildName1_14; // 0x4b0
	UTaishouTeamInfoSlot* TeamInfoSlot1_15; // 0x4b8
	UImage* Image_GuildNameBg1_15; // 0x4c0
	UImage* Image_WinLine1_15; // 0x4c8
	UTextBlock* CoutryGuildName1_15; // 0x4d0
	UTaishouTeamInfoSlot* TeamInfoSlot1_16; // 0x4d8
	UImage* Image_GuildNameBg1_16; // 0x4e0
	UImage* Image_WinLine1_16; // 0x4e8
	UTextBlock* CoutryGuildName1_16; // 0x4f0
	UTaishouTeamInfoSlot* TeamInfoSlot1_17; // 0x4f8
	UImage* Image_GuildNameBg1_17; // 0x500
	UImage* Image_WinLine1_17; // 0x508
	UTextBlock* CoutryGuildName1_17; // 0x510
	UTaishouTeamInfoSlot* TeamInfoSlot2_2; // 0x518
	UImage* Image_GuildNameBg2_2; // 0x520
	UImage* Image_WinLine2_2; // 0x528
	UTextBlock* CoutryGuildName2_2; // 0x530
	UTaishouTeamInfoSlot* TeamInfoSlot2_3; // 0x538
	UImage* Image_GuildNameBg2_3; // 0x540
	UImage* Image_WinLine2_3; // 0x548
	UTextBlock* CoutryGuildName2_3; // 0x550
	UTaishouTeamInfoSlot* TeamInfoSlot2_4; // 0x558
	UImage* Image_GuildNameBg2_4; // 0x560
	UImage* Image_WinLine2_4; // 0x568
	UTextBlock* CoutryGuildName2_4; // 0x570
	UTaishouTeamInfoSlot* TeamInfoSlot2_5; // 0x578
	UImage* Image_GuildNameBg2_5; // 0x580
	UImage* Image_WinLine2_5; // 0x588
	UTextBlock* CoutryGuildName2_5; // 0x590
	UTaishouTeamInfoSlot* TeamInfoSlot2_6; // 0x598
	UImage* Image_GuildNameBg2_6; // 0x5a0
	UImage* Image_WinLine2_6; // 0x5a8
	UTextBlock* CoutryGuildName2_6; // 0x5b0
	UTaishouTeamInfoSlot* TeamInfoSlot2_7; // 0x5b8
	UImage* Image_GuildNameBg2_7; // 0x5c0
	UImage* Image_WinLine2_7; // 0x5c8
	UTextBlock* CoutryGuildName2_7; // 0x5d0
	UTaishouTeamInfoSlot* TeamInfoSlot2_8; // 0x5d8
	UImage* Image_GuildNameBg2_8; // 0x5e0
	UImage* Image_WinLine2_8; // 0x5e8
	UTextBlock* CoutryGuildName2_8; // 0x5f0
	UTaishouTeamInfoSlot* TeamInfoSlot2_9; // 0x5f8
	UImage* Image_GuildNameBg2_9; // 0x600
	UImage* Image_WinLine2_9; // 0x608
	UTextBlock* CoutryGuildName2_9; // 0x610
	UTaishouTeamInfoSlot* TeamInfoSlot3_2; // 0x618
	UImage* Image_GuildNameBg3_2; // 0x620
	UImage* Image_WinLine3_2; // 0x628
	UTextBlock* CoutryGuildName3_2; // 0x630
	UTaishouTeamInfoSlot* TeamInfoSlot3_3; // 0x638
	UImage* Image_GuildNameBg3_3; // 0x640
	UImage* Image_WinLine3_3; // 0x648
	UTextBlock* CoutryGuildName3_3; // 0x650
	UTaishouTeamInfoSlot* TeamInfoSlot3_4; // 0x658
	UImage* Image_GuildNameBg3_4; // 0x660
	UImage* Image_WinLine3_4; // 0x668
	UTextBlock* CoutryGuildName3_4; // 0x670
	UTaishouTeamInfoSlot* TeamInfoSlot3_5; // 0x678
	UImage* Image_GuildNameBg3_5; // 0x680
	UImage* Image_WinLine3_5; // 0x688
	UTextBlock* CoutryGuildName3_5; // 0x690
	UTaishouTeamInfoSlot* TeamInfoSlot4_2; // 0x698
	UImage* Image_GuildNameBg4_2; // 0x6a0
	UImage* Image_WinLine4_2; // 0x6a8
	UTextBlock* CoutryGuildName4_2; // 0x6b0
	UTaishouTeamInfoSlot* TeamInfoSlot4_3; // 0x6b8
	UImage* Image_GuildNameBg4_3; // 0x6c0
	UImage* Image_WinLine4_3; // 0x6c8
	UTextBlock* CoutryGuildName4_3; // 0x6d0
	UImage* Image_WinGuildEdgeIcon; // 0x6d8
	UTaishouTeamInfoSlot* TeamInfoSlotWin; // 0x6e0
	double LastClickEnterTime; // 0xaa8
	UTaishouTeamInfoSlot* m_SelectedTeamSlot; // 0xab0
	int32_t EnterBtnState; // 0xab8
};

struct UInterpToMovementComponent : UMovementComponent {
	float Duration; // 0x100
	char bPauseOnImpact : 1; // 0x104
	bool bSweep; // 0x108
	ETeleportType TeleportType; // 0x109
	EInterpToBehaviourType BehaviourType; // 0x10a
	bool bCheckIfStillInWorld; // 0x10b
	char bForceSubStepping : 1; // 0x10c
	FMulticastInlineDelegate OnInterpToReverse; // 0x110
	FMulticastInlineDelegate OnInterpToStop; // 0x120
	FMulticastInlineDelegate OnWaitBeginDelegate; // 0x130
	FMulticastInlineDelegate OnWaitEndDelegate; // 0x140
	FMulticastInlineDelegate OnResetDelegate; // 0x150
	float MaxSimulationTimeStep; // 0x160
	int32_t MaxSimulationIterations; // 0x164
	TArray<FInterpControlPoint> ControlPoints; // 0x168
};

struct USourceEffectPhaserPreset : USoundEffectSourcePreset {
	FSourceEffectPhaserSettings Settings; // 0xa0
};

struct UUIArtofWarPanel : USGUI {
	URichTextBlock* RichTextBlock_LevelInfo; // 0x2d8
	URichTextBlock* RichTextBlock_NextLevelInfo; // 0x2e0
	UButton* Button_Skill; // 0x2e8
	UButton* Button_Angry; // 0x2f0
	UButton* Button_Weak; // 0x2f8
	UButton* Button_Search; // 0x300
	UUniformGridPanel* UniformGridPanel_ArtofWar; // 0x308
	UEditableTextBox* EditableTextBox_Find; // 0x310
	UScrollBox* ScrollBox_Info; // 0x318
	UTextBlock* TextBlock_Name; // 0x320
	UTextBlock* TextBlock_NextName; // 0x328
	UTextBlock* TextBlock_Skill; // 0x330
	UTextBlock* TextBlock_Angry; // 0x338
	UTextBlock* TextBlock_Weak; // 0x340
	UUIArtofWarSlot* ArtofWarSlotClass; // 0x348
	FLinearColor TextSelectColor; // 0x350
	FLinearColor TextUnSelectColor; // 0x360
	int32_t WeakStartIndex; // 0x370
	int32_t AngryStartIndex; // 0x374
	TWeakObjectPtr<UUIArtofWarSlot> SelectSlot; // 0x378
	EUIGeneralSkillType CurrentSkillType; // 0x380
};

struct UEditMeshPolygonsTool : UMeshSurfacePointTool {
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0xd0
	UPolyEditCommonProperties* CommonProps; // 0xd8
	UEditMeshPolygonsToolActions* EditActions; // 0xe0
	UEditMeshPolygonsToolActions_Triangles* EditActions_Triangles; // 0xe8
	UEditMeshPolygonsToolEdgeActions* EditEdgeActions; // 0xf0
	UEditMeshPolygonsToolEdgeActions_Triangles* EditEdgeActions_Triangles; // 0xf8
	UEditMeshPolygonsToolUVActions* EditUVActions; // 0x100
	UPolyEditExtrudeProperties* ExtrudeProperties; // 0x108
	UPolyEditOffsetProperties* OffsetProperties; // 0x110
	UPolyEditInsetProperties* InsetProperties; // 0x118
	UPolyEditOutsetProperties* OutsetProperties; // 0x120
	UPolyEditCutProperties* CutProperties; // 0x128
	UPolyEditSetUVProperties* SetUVProperties; // 0x130
	UPolygonSelectionMechanic* SelectionMechanic; // 0x138
	UMultiTransformer* MultiTransformer; // 0x148
	UPolyEditPreviewMesh* EditPreview; // 0x4a0
	UPlaneDistanceFromHitMechanic* ExtrudeHeightMechanic; // 0x4b0
	USpatialCurveDistanceMechanic* CurveDistMechanic; // 0x4b8
	UCollectSurfacePathMechanic* SurfacePathMechanic; // 0x4c0
};

struct UWBP_ProducerSplitLine_C : UUI_ProducerSplitLine {
	UImage* Image_76; // 0x280
	UImage* Image_135; // 0x288
};

struct ASG_AIManager : AActor {
	USceneComponent* CustomSceneComponent; // 0x310
	UStaticMeshComponent* PreviewStaticMeshComponent; // 0x318
	UInstancedStaticMeshComponent* PreviewInstancedStaticMeshComponent; // 0x320
	UParticleSystem* PointParticle; // 0x330
	TArray<UParticleSystemComponent*> PointParticleComponents; // 0x338
	FFormationData FormationData; // 0x358
	UDataTable* DT_FormationConfig; // 0x398
	int32_t DrawDebugFormationNumber; // 0x3b0
	char bIsPriorityRow : 1; // 0x3b4
	char bIsPriorityRowForward : 1; // 0x3b4
	char bIsPriorityColumnForward : 1; // 0x3b4
	float FormationDistance; // 0x3b8
	float CircularFormationDistance; // 0x3bc
	APawn* SpawnPawnClass; // 0x3d0
	FVector2D SpawnCapsuleData; // 0x3d8
	char bInGroundOnSpawn : 1; // 0x3e0
	float DrawDebugTraceTime; // 0x3e4
	float SpawnHeightTraceLength; // 0x3e8
	ETraceTypeQuery SpawnTraceChannel; // 0x3ec
	char bIsFollowFromSpawnManager : 1; // 0x3ed
	float FollowSphereRadiusOnTrace; // 0x3f0
	TArray<EObjectTypeQuery> FollowObjectTypes; // 0x3f8
	char bIsDrawDebugPreviewTrace : 1; // 0x4d0
	float PreviewFormationTraceDistance; // 0x4d4
	FVector2D AdjustHeightRange; // 0x4d8
	ETraceTypeQuery PreviewFormationTraceChannel; // 0x4e0
};

struct UPolyEditCutProperties : UInteractiveToolPropertySet {
	EPolyEditCutPlaneOrientation Orientation; // 0x60
	bool bSnapToVertices; // 0x64
};

struct ULightmappedSurfaceCollection : UObject {
	UModel* SourceModel; // 0x28
	TArray<int32_t> Surfaces; // 0x30
};

struct UVoiceAudition : UUserWidget {
	UTextBlock* TbAudition; // 0x270
	UButton* BtnAudition; // 0x278
	int32_t BindVoiceIndex; // 0x280
};

struct UScrollBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UNavigationInvokerComponent : UActorComponent {
	float TileGenerationRadius; // 0xc0
	float TileRemovalRadius; // 0xc4
};

struct UDataTable : UObject {
	UScriptStruct* RowStruct; // 0x28
	char bStripFromClientBuilds : 1; // 0x80
	char bIgnoreExtraFields : 1; // 0x80
	char bIgnoreMissingFields : 1; // 0x80
	FString ImportKeyField; // 0x88
};

struct UEnvQueryGenerator_SimpleGrid : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue GridSize; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb8
	UEnvQueryContext* GenerateAround; // 0xf0
};

struct USG_AnimalsAnimInstance : UAnimInstance {
	ASG_AnimalsCharacter* SG_AnimalsCharacter; // 0x2c0
	UCapsuleComponent* SGCapsuleComponent; // 0x2c8
	UCharacterMovementComponent* SGCharacterMovementComponent; // 0x2d0
	ASG_MoveSeatingCharacter* SGMoveSeatingCharacter; // 0x2d8
	USiegeAnimInstance* SGSiegeAnimInstance; // 0x2e0
	int32_t SiegeSeatIndex; // 0x2e8
	bool IsWantMoving; // 0x2ec
	bool IsMovingOrTransition; // 0x2ed
	bool UseUpperBodyLayer; // 0x2ee
	bool IsGroundMovementMode; // 0x2ef
	bool IsFallingMovementMode; // 0x2f0
	bool IsRagdollMovementMode; // 0x2f1
	bool IsSwimMovementMode; // 0x2f2
	char IsPassengerMovementMode : 1; // 0x2f3
	char IsPassengerShowGround : 1; // 0x2f3
	bool IsInAirVelocity; // 0x2f4
	bool IsMoveForward; // 0x2f5
	char bIsHighStance : 1; // 0x2f6
	bool IsStand; // 0x2f7
	bool IsStandHind; // 0x2f8
	bool IsSitting; // 0x2f9
	bool IsLying; // 0x2fa
	UAnimSequence* PreviewAnim; // 0x300
	FAnimalsAnimsConfig Struct_AnimalsAnims; // 0x308
	FAnimalsAnimInstanceConfig Struct_AnimalsStandConfig; // 0xa80
	FAnimalsAnimInstanceConfig Struct_AnimalsStandHindConfig; // 0xb00
	FAnimalsAnimInstanceConfig Struct_AnimalsSittingConfig; // 0xb80
	FAnimalsAnimInstanceConfig Struct_AnimalsLyingConfig; // 0xc00
	FAnimalsAnimInstanceConfig Struct_AnimalsSwimConfig; // 0xc80
	ECustomMovementMode Enum_MovementMode; // 0xd00
	ECustomMovementMode Enum_PrevMovementMode; // 0xd01
	EAnimalsStanceType Enum_DefaultAnimalsStanceType; // 0xd02
	EAnimalsStanceType Enum_AnimalsStanceType; // 0xd03
	EAnimalsStanceType Enum_DesiredAnimalsStanceType; // 0xd04
	EAnimalsStanceType Enum_PrevAnimalsStanceType; // 0xd05
	EAnimalsStanceType Enum_PrevAnimAnimalsStanceType; // 0xd06
	ELocomotionState Enum_ActiveLocomotionState; // 0xd07
	EInputDirection Enum_DefaultAnimalsDeathDirection; // 0xd08
	FVector Velocity; // 0xd0c
	char IsDead : 1; // 0xd18
	UAnimSequence* DeathAnimPose; // 0xd20
	UAnimSequence* PreviewDeathAnimPose; // 0xd28
	char IsMoving : 1; // 0xd30
	char IsPlayerInput : 1; // 0xd30
	char HasMovementInput : 1; // 0xd30
	char bUseCustomAdditive : 1; // 0xd30
	FRotator LookingRotation; // 0xd34
	FRotator TargetRotation; // 0xd40
	FRotator LastVelocityRotation; // 0xd4c
	FRotator LastMovementInputRotation; // 0xd58
	float AimYawDelta; // 0xd64
	float AimYawRate; // 0xd68
	float Speed; // 0xd6c
	char bUseAnimNotifyPlayTransitionMontage : 1; // 0xd70
	char IsTransition : 1; // 0xd70
	UAnimMontage* TransitionMontage; // 0xd78
	char EnableTurnInPlace : 1; // 0xd80
	char EnterTurningInPlace : 1; // 0xd80
	char ShouldTurnInPlace : 1; // 0xd80
	char TurningInPlace : 1; // 0xd80
	char TurningRight : 1; // 0xd80
	char ChangeTurningDirection : 1; // 0xd80
	float TurnInPlaceDelayCount; // 0xd84
	UAnimMontage* ActiveTurnInPlaceMontage; // 0xd88
	char CapsuleCollision : 1; // 0xd90
	FVector2D GroundPlayRateLimit; // 0xd94
	float GaitValue; // 0xd9c
	float MovingDirection; // 0xda0
	float ArchDirection; // 0xda4
	float UpDirection; // 0xda8
	float ArchDirectionScale; // 0xdac
	float ArchDirectionInterpSpeed; // 0xdb0
	FVector2D AI_ArchDirectionInterpSpeed; // 0xdb4
	float BrakingArchDirectionInterpSpeed; // 0xdbc
	float MoveRightAxis; // 0xdc0
	float GroundPlayRate; // 0xdc4
	float MovingStartPosition; // 0xdc8
	float IdlePlayRate; // 0xdcc
	float IdlePosition; // 0xdd0
	char bIsWaterAir : 1; // 0xdd4
	float JumpDirection; // 0xdd8
	float LeanInAir; // 0xddc
	float FlailRate; // 0xde0
	float FlailBlendAlpha; // 0xde4
	float LandPredictionAlpha; // 0xde8
	UCurveFloat* FlailAlphaCurve; // 0xdf0
	UCurveFloat* LandAlphaCurve; // 0xdf8
	UAnimMontage* AdditiveLandMontage; // 0xe00
	char IsAttacking : 1; // 0xe08
	char bShouldSwim : 1; // 0xe08
	char bIsSurfaceState : 1; // 0xe08
	char bIsSwimPivot : 1; // 0xe08
	float SwimDirection; // 0xe0c
	float SwimRootHeight; // 0xe10
	FRotator SwimPelvisRotation; // 0xe14
	FBoneReference SwimPelvisBoneReference; // 0xe20
	float SwimPelvisPitch; // 0xe30
	float SwimRootMaxHeight; // 0xe34
	FVector2D SwimPitchLimitAngle; // 0xe38
	float SwimPivotAlpha; // 0xe40
	float SwimArchDirectionScale; // 0xe44
	float SwimArchDirectionInterpSpeed; // 0xe48
	float SwimUpDirectionInterpSpeed; // 0xe4c
	char bIsSwimBackwardDirection : 1; // 0xe50
	float SwimArchDirectionRate; // 0xe54
	float SwimArchDirectionRateInterpSpeed; // 0xe58
	FVector2D SwimArchDirection; // 0xe5c
	float SwimPlayRate; // 0xe64
	FAnimalsModifyBoneSettings CurrentAnimalBoneModifier; // 0xe68
	char bEnableFootSolver : 1; // 0xe80
	char bUseFootSolver : 1; // 0xe80
	USkeletalMeshComponent* RiderMesh_TEST; // 0xe88
	char bUseFabrikReins : 1; // 0xe94
	FName ReinsLeftSocket; // 0xe98
	FName ReinsRightSocket; // 0xea0
	FBoneReference ReinsBoneReference; // 0xea8
	char bEnableReinsL : 1; // 0xeb8
	char bEnableReinsR : 1; // 0xeb8
	FVector Reins_LHandLoc; // 0xebc
	FVector Reins_RHandLoc; // 0xec8
	FTransform Reins_LHandTransform; // 0xee0
	FTransform Reins_RHandTransform; // 0xf10
	FName SaddleLeftSocket; // 0xf44
	FName SaddleRightSocket; // 0xf4c
	FBoneReference SaddleBoneReference; // 0xf54
	char bEnableSaddleL : 1; // 0xf64
	char bEnableSaddleR : 1; // 0xf64
	FTransform Saddle_LFootLoc; // 0xf70
	FTransform Saddle_RFootLoc; // 0xfa0
	FPassengerAnimsConfig PassengerAnimsConfig; // 0xfd0
	char bIsPreviewSceneAnimInstance : 1; // 0xfe0
	char bEnableUpDirection : 1; // 0xfe0
	float DefaultRefreshUpDirectionTime; // 0xfe4
	float RefreshUpDirectionRemainTime; // 0xfe8
};

struct ANavMeshBoundsVolume : AVolume {
	FNavAgentSelector SupportedAgents; // 0x348
};

struct UAbilitySystemGlobals : UObject {
	FSoftClassPath AbilitySystemGlobalsClassName; // 0x28
	FGameplayTag ActivateFailIsDeadTag; // 0x68
	FName ActivateFailIsDeadName; // 0x70
	FGameplayTag ActivateFailCooldownTag; // 0x78
	FName ActivateFailCooldownName; // 0x80
	FGameplayTag ActivateFailCostTag; // 0x88
	FName ActivateFailCostName; // 0x90
	FGameplayTag ActivateFailTagsBlockedTag; // 0x98
	FName ActivateFailTagsBlockedName; // 0xa0
	FGameplayTag ActivateFailTagsMissingTag; // 0xa8
	FName ActivateFailTagsMissingName; // 0xb0
	FGameplayTag ActivateFailNetworkingTag; // 0xb8
	FName ActivateFailNetworkingName; // 0xc0
	int32_t MinimalReplicationTagCountBits; // 0xc8
	FNetSerializeScriptStructCache TargetDataStructCache; // 0xd0
	bool bAllowGameplayModEvaluationChannels; // 0xe0
	EGameplayModEvaluationChannel DefaultGameplayModEvaluationChannel; // 0xe1
	FName GameplayModEvaluationChannelAliases[0xa]; // 0xe4
	FSoftObjectPath GlobalCurveTableName; // 0x138
	UCurveTable* GlobalCurveTable; // 0x150
	FSoftObjectPath GlobalAttributeMetaDataTableName; // 0x158
	UDataTable* GlobalAttributeMetaDataTable; // 0x170
	FSoftObjectPath GlobalAttributeSetDefaultsTableName; // 0x178
	TArray<FSoftObjectPath> GlobalAttributeSetDefaultsTableNames; // 0x190
	TArray<UCurveTable*> GlobalAttributeDefaultsTables; // 0x1a0
	FSoftObjectPath GlobalGameplayCueManagerClass; // 0x1b0
	FSoftObjectPath GlobalGameplayCueManagerName; // 0x1c8
	TArray<FString> GameplayCueNotifyPaths; // 0x1e0
	FSoftObjectPath GameplayTagResponseTableName; // 0x1f0
	UGameplayTagReponseTable* GameplayTagResponseTable; // 0x208
	bool PredictTargetGameplayEffects; // 0x210
	UGameplayCueManager* GlobalGameplayCueManager; // 0x218
};

struct UWrapBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	bool bFillEmptySpace; // 0x48
	float FillSpanWhenLessThan; // 0x4c
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UEditableTextBox : UWidget {
	FText Text; // 0x108
	FDelegate TextDelegate; // 0x120
	FEditableTextBoxStyle WidgetStyle; // 0x130
	USlateWidgetStyleAsset* Style; // 0x928
	FText HintText; // 0x930
	FDelegate HintTextDelegate; // 0x948
	FSlateFontInfo Font; // 0x958
	FLinearColor ForegroundColor; // 0x9b0
	FLinearColor BackgroundColor; // 0x9c0
	FLinearColor ReadOnlyForegroundColor; // 0x9d0
	bool IsReadOnly; // 0x9e0
	bool IsPassword; // 0x9e1
	float MinimumDesiredWidth; // 0x9e4
	FMargin Padding; // 0x9e8
	bool IsCaretMovedWhenGainFocus; // 0x9f8
	bool SelectAllTextWhenFocused; // 0x9f9
	bool RevertTextOnEscape; // 0x9fa
	bool ClearKeyboardFocusOnCommit; // 0x9fb
	bool SelectAllTextOnCommit; // 0x9fc
	bool AllowContextMenu; // 0x9fd
	EVirtualKeyboardType KeyboardType; // 0x9fe
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x9ff
	EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0xa00
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0xa01
	ETextJustify Justification; // 0xa02
	FShapedTextOptions ShapedTextOptions; // 0xa03
	FMulticastInlineDelegate OnTextChanged; // 0xa08
	FMulticastInlineDelegate OnTextCommitted; // 0xa18
};

struct UNetworkSettings : UDeveloperSettings {
	char bVerifyPeer : 1; // 0x38
	char bEnableMultiplayerWorldOriginRebasing : 1; // 0x38
	int32_t MaxRepArraySize; // 0x3c
	int32_t MaxRepArrayMemory; // 0x40
	TArray<FNetworkEmulationProfileDescription> NetworkEmulationProfiles; // 0x48
};

struct ASGStructureRespawn : ASGStructure {
	float TimerPrecision; // 0xb98
	ASGStructure* SpawnClass; // 0xba0
	float RespawnProtectRadius; // 0xba8
	int32_t RespawnTime; // 0xbac
	int64_t SpawnDateTicks; // 0xbb0
	TWeakObjectPtr<ASGStructure> StructurePtr; // 0xbb8
};

struct UGizmoConstantAxisSource : UObject {
	FVector Origin; // 0x30
	FVector Direction; // 0x3c
};

struct UMaterialExpressionArctangent2 : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct UAmbisonicsEncodingSettings : USoundfieldEncodingSettingsBase {
	int32_t AmbisonicsOrder; // 0x28
};

struct UAllianceMemberSlot : USGUI {
	UDataButton* KickOutDataButton; // 0x2d8
	UDataButton* TransGuildDataButton; // 0x2e0
	UTextBlock* GuildNameText; // 0x2e8
	UTextBlock* GuildLevelText; // 0x2f0
	UTextBlock* GuildOwnerText; // 0x2f8
	UTextBlock* MemberCountText; // 0x300
	UTextBlock* StructureProssessAuthText; // 0x308
	UImage* BGImage; // 0x310
	TSoftObjectPtr<UTexture2D> NormalBGTexture; // 0x318
	TSoftObjectPtr<UTexture2D> SelectBGTexture; // 0x340
};

struct UConditionPanel : UUserWidget {
	UCanvasPanel* ConditionCanvas; // 0x260
	UOptionButton* ST; // 0x268
	UOptionButton* WI; // 0x270
	UOptionButton* EN; // 0x278
	UOptionButton* AG; // 0x280
	UOptionButton* CH; // 0x288
	UVerticalBox* DetailsPanel; // 0x290
	URadarChart* RadarChart; // 0x298
	float RadarChartStartPercent; // 0x2a0
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x2a4
	TArray<UOptionButton*> SlotButtonList; // 0x2b0
	UConditionSlot* ConditionSlotTemplate; // 0x2c0
	char bUseEditableConditionSlot : 1; // 0x2c8
	TArray<UConditionEditableSlot*> ConditionEditableSlotList; // 0x2d0
	UConditionPanelEditablePanel* ConditionPanelEditablePanel; // 0x2e0
	UConditionEditableSlot* ConditionEditableSlotTemplate; // 0x2e8
	int32_t MaxLevel; // 0x2f0
	char bHasInit : 1; // 0x2f4
	float LastSTRPercent; // 0x2f8
	float LastDEXPercent; // 0x2fc
	float LastSTAPercent; // 0x300
	float LastINTPercent; // 0x304
	float LastCHAPercent; // 0x308
	UGeneralAddSkillExpPanel* AddSkillExpPanelTemplate; // 0x310
	UGeneralAddSkillExpPanel* AddSkillExpPanel; // 0x318
};

struct UUI_InteractiveMenu : USGUI {
	TArray<FInteractiveEntry> MyInteractiveEntries; // 0x2d8
	TArray<FInteractiveEntry> RootInteractiveEntries; // 0x2e8
	TArray<FInteractiveEntry> SubInteractiveEntries; // 0x2f8
	FInteractiveEntry SelectedCategory; // 0x308
	FInteractiveEntry SelectedItem; // 0x350
	char bPickingItem : 1; // 0x398
	AActor* InteractiveActor; // 0x3a0
	USceneComponent* InteractiveComponent; // 0x3a8
	double ForceTime; // 0x3b0
	double DelayTime; // 0x3b8
	char bOverDelayTime : 1; // 0x3c0
	UUI_InteractiveRadialIcon* DelayIconWidget; // 0x3c8
	char bPlayerShow : 1; // 0x3d0
	UUI_InteractiveRadialIcon* InteractiveText; // 0x3d8
	float ShowCategoryTime; // 0x3e0
	FText ReturnMenuText; // 0x3e8
	float ExcDelayTime; // 0x400
	UUI_InteractiveRadialMenu* CategoryRing; // 0x408
	UUI_InteractiveRadialMenu* SubmenuRing; // 0x410
	UTextBlock* InteractiveTextString; // 0x418
	UTextBlock* InteractiveNameText; // 0x420
	UWidgetAnimation* ShowFirst; // 0x428
};

struct UBlendSpaceBase : UAnimationAsset {
	bool bRotationBlendInMeshSpace; // 0x88
	float AnimLength; // 0x8c
	FInterpolationParameter InterpolationParam[0x3]; // 0x90
	float TargetWeightInterpolationSpeedPerSec; // 0xa8
	ENotifyTriggerMode NotifyTriggerMode; // 0xac
	TArray<FPerBoneInterpolation> PerBoneBlend; // 0xb0
	int32_t SampleIndexWithMarkers; // 0xc0
	TArray<FBlendSample> SampleData; // 0xc8
	TArray<FEditorElement> GridSamples; // 0xd8
	FBlendParameter BlendParameters[0x3]; // 0xe8
};

struct UFieldSystemComponent : UPrimitiveComponent {
	UFieldSystem* FieldSystem; // 0x488
	TArray<TSoftObjectPtr<AChaosSolverActor>> SupportedSolvers; // 0x4a0
};

struct UDatasmithActorTemplate : UDatasmithObjectTemplate {
	TSet<FName> Layers; // 0x30
	TSet<FName> Tags; // 0x80
};

struct USGToolTipsGeneral : USGToolTipWidget {
	UTextBlock* HPText; // 0x288
	UTextBlock* TameText; // 0x290
	UTextBlock* StunText; // 0x298
	UProgressBar* HPProgressBar; // 0x2a0
	UProgressBar* TameProgressBar; // 0x2a8
	UProgressBar* StunProgressBar; // 0x2b0
	UCanvasPanel* TamingPanel; // 0x2b8
};

struct ULandscapeInfo : UObject {
	LazyObjectProperty LandscapeActor; // 0x28
	FGuid LandscapeGuid; // 0x44
	int32_t ComponentSizeQuads; // 0x54
	int32_t SubsectionSizeQuads; // 0x58
	int32_t ComponentNumSubsections; // 0x5c
	FVector DrawScale; // 0x60
	TArray<ALandscapeStreamingProxy*> Proxies; // 0x110
};

struct UMovieSceneSequenceTickManager : UObject {
	TArray<AActor*> SequenceActors; // 0x28
	UMovieSceneEntitySystemLinker* Linker; // 0x38
};

struct USceneCaptureComponent : USceneComponent {
	ESceneCapturePrimitiveRenderMode PrimitiveRenderMode; // 0x208
	ESceneCaptureSource CaptureSource; // 0x209
	char bCaptureEveryFrame : 1; // 0x20a
	char bCaptureOnMovement : 1; // 0x20a
	bool bAlwaysPersistRenderingState; // 0x20b
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenComponents; // 0x210
	TArray<AActor*> HiddenActors; // 0x220
	TArray<TWeakObjectPtr<UPrimitiveComponent>> ShowOnlyComponents; // 0x230
	TArray<AActor*> ShowOnlyActors; // 0x240
	bool bDepthOnlyDrawStaticOnly; // 0x250
	bool bDepthOnlyNotDrawMask; // 0x251
	float LODDistanceFactor; // 0x254
	float MaxViewDistanceOverride; // 0x258
	int32_t CaptureSortPriority; // 0x25c
	bool bUseRayTracingIfEnabled; // 0x260
	TArray<FEngineShowFlagsSetting> ShowFlagSettings; // 0x268
	FString ProfilingEventName; // 0x2a8
};

struct UWBP_LanguageSystemSetting_C : UUI_SystemSettingPanel {
	UWBP_LanguageComboBoxItem_C* Culture; // 0x290
	UImage* TitleImage; // 0x298
};

struct ABP_SGAudioManager_C : ASGAudioManager {
	USceneComponent* DefaultSceneRoot; // 0x988
};

struct UGuildListPanel : USGUI {
	UGuildDetailsSlot* GuildDetailsSlot; // 0x2d8
	UGuildAuthorityComboBox* LanguageFilterComboBox; // 0x2e0
	UGuildAuthorityComboBox* StructureAuthFilterComboBox; // 0x2e8
	UEditableTextBox* SearchGuildEditBox; // 0x2f0
	UCheckBox* HideFullGuildCheckBox; // 0x2f8
	UCheckBox* HideOtherServerGuildCheckBox; // 0x300
	UDataButton* PrePageDataButton; // 0x308
	UDataButton* NextPageDataButton; // 0x310
	UTextBlock* ShowPageText; // 0x318
	UScrollBox* GuildListPanel; // 0x320
	UButton* CreateGuildButton; // 0x328
	UButton* InviteToAllianceButton; // 0x330
	USortableTitleSlot* SortNameSlot; // 0x338
	USortableTitleSlot* SortLevelSlot; // 0x340
	USortableTitleSlot* SortGuildOwnerSlot; // 0x348
	USortableTitleSlot* SortMemberCountSlot; // 0x350
	USortableTitleSlot* SortStructureProssessAuthSlot; // 0x358
	USortableTitleSlot* ManagementTitleSlot; // 0x360
	UCanvasPanel* LoadingCanvasPanel; // 0x368
	int32_t GuildListNumPerPage; // 0x370
	UGuildListSlot* GuildListSlotClass; // 0x378
	UUI_CreateGuildConfirm* CreateGuildConfirmUIOverride; // 0x380
	UUI_ModifyText* InviteGuildUIOverride; // 0x388
	int32_t RequestGuildListCount; // 0x390
};

struct UMovieScene2DTransformSection : UMovieSceneSection {
	FMovieScene2DTransformMask TransformMask; // 0xf0
	FMovieSceneFloatChannel Translation[0x2]; // 0xf8
	FMovieSceneFloatChannel Rotation; // 0x238
	FMovieSceneFloatChannel Scale[0x2]; // 0x2d8
	FMovieSceneFloatChannel Shear[0x2]; // 0x418
};

struct UParticleModuleVectorFieldScale : UParticleModuleVectorFieldBase {
	UDistributionFloat* VectorFieldScale; // 0x30
	FRawDistributionFloat VectorFieldScaleRaw; // 0x38
};

struct UMovieSceneCameraShakeSection : UMovieSceneSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe8
	UMatineeCameraShake* ShakeClass; // 0x108
	float PlayScale; // 0x110
	ECameraShakePlaySpace PlaySpace; // 0x114
	FRotator UserDefinedPlaySpace; // 0x118
};

struct UGuildSkillGroupLine : UUserWidget {
	UImage* Image; // 0x260
	TSoftObjectPtr<UTexture2D> LineTexture2D; // 0x268
	TSoftObjectPtr<UTexture2D> LineLearnedTexture2D; // 0x290
	TSoftObjectPtr<UTexture2D> TurnDownTexture2D; // 0x2b8
	TSoftObjectPtr<UTexture2D> TurnDownLearnedTexture2D; // 0x2e0
	TSoftObjectPtr<UTexture2D> TurnUpTexture2D; // 0x308
	TSoftObjectPtr<UTexture2D> TurnUpLearnedTexture2D; // 0x330
};

struct UGerstnerWaterWaveGeneratorSpectrum : UGerstnerWaterWaveGeneratorBase {
	EWaveSpectrumType SpectrumType; // 0x28
	TArray<FGerstnerWaveOctave> Octaves; // 0x30
};

struct UMaterialExpressionShaderStageSwitch : UMaterialExpression {
	FExpressionInput PixelShader; // 0x40
	FExpressionInput VertexShader; // 0x54
};

struct UAnimCompress_RemoveTrivialKeys : UAnimCompress {
	float MaxPosDiff; // 0x40
	float MaxAngleDiff; // 0x44
	float MaxScaleDiff; // 0x48
};

struct UWBP_GraphSystemSetting_C : UUI_SystemSettingPanel {
	UWBP_SettingComboBoxItem_C* AntiAliasingQuality; // 0x290
	UWBP_ScalabilityDetailSetting_C* AntiAliasingQualityDetail; // 0x298
	UWBP_SystemSettingCheckBox_C* bAntiAliasingDLSS; // 0x2a0
	UWBP_SystemSettingCheckBox_C* bAntiAliasingFSR; // 0x2a8
	UWBP_SystemSettingCheckBox_C* bColorBlindness; // 0x2b0
	UWBP_SystemSettingCheckBox_C* bEnableLightningShake; // 0x2b8
	UWBP_SystemSettingCheckBox_C* bRayTracing; // 0x2c0
	UWBP_SystemSettingCheckBox_C* bRayTracingReflections; // 0x2c8
	UWBP_SystemSettingCheckBox_C* bRayTracingShadow; // 0x2d0
	UWBP_SystemSettingCheckBox_C* bShowGroom; // 0x2d8
	UWBP_SettingComboBoxItem_C* bUseDynamicResolution; // 0x2e0
	UWBP_SettingComboBoxItem_C* bUseVSync; // 0x2e8
	UWBP_SettingComboBoxItem_C* DefaultRHI; // 0x2f0
	UWBP_DLSSQualitySettingComboBoxItem_C* DLSSQuality; // 0x2f8
	UWBP_ScalabilityDetailSetting_C* EffectsQualityDetail; // 0x300
	UWBP_SettingComboBoxItem_C* FoliageQuality; // 0x308
	UWBP_ScalabilityDetailSetting_C* FoliageQualityDetail; // 0x310
	UWBP_FrameLimitSettingEditableTextblockItem_C* FrameRateLimit; // 0x318
	UWBP_FSRSettingComboBoxItem_C* FSRQuality; // 0x320
	UWBP_GammaSettingSliderItem_C* Gamma; // 0x328
	UWBP_SettingComboBoxItem_C* MotionBlurQuality; // 0x330
	UWBP_OverallScalabilityLevelSliderView_C* OverallScalability; // 0x338
	UWBP_SettingComboBoxItem_C* PostProcessQuality; // 0x340
	UWBP_ScalabilityDetailSetting_C* PostProcessQualityDetail; // 0x348
	UWBP_ResolutionScaleSettingSliderItem_C* ResolutionQuality; // 0x350
	UWBP_ResolutionSettingComboBoxItem_C* ScreenResolution; // 0x358
	UWBP_SettingComboBoxItem_C* ShadingQuality; // 0x360
	UWBP_ScalabilityDetailSetting_C* ShadingQualityDetail; // 0x368
	UWBP_SettingComboBoxItem_C* ShadowQuality; // 0x370
	UWBP_ScalabilityDetailSetting_C* ShadowQualityDetail; // 0x378
	UWBP_SingleCellHPSettingComboBoxItem_C* SingleCellHP; // 0x380
	UWBP_SettingComboBoxItem_C* TextureQuality; // 0x388
	UWBP_ScalabilityDetailSetting_C* TextureQualityDetail; // 0x390
	UImage* TitleImage; // 0x398
	UImage* TitleImage_2; // 0x3a0
	UWBP_SettingComboBoxItem_C* ViewDistanceQuality; // 0x3a8
	UWBP_ScalabilityDetailSetting_C* ViewDistanceQualityDetail; // 0x3b0
	UWBP_SettingComboBoxItem_C* VisualEffectQuality; // 0x3b8
	UWBP_SettingComboBoxItem_C* WindowMode; // 0x3c0
	TArray<FIntPoint> ResolutionList; // 0x3c8
};

struct APaperTerrainActor : AActor {
	USceneComponent* DummyRoot; // 0x310
	UPaperTerrainSplineComponent* SplineComponent; // 0x318
	UPaperTerrainComponent* RenderComponent; // 0x320
};

struct USoundfieldSubmix : USoundSubmixWithParentBase {
	FName SoundfieldEncodingFormat; // 0x40
	USoundfieldEncodingSettingsBase* EncodingSettings; // 0x48
	TArray<USoundfieldEffectBase*> SoundfieldEffectChain; // 0x50
	USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x60
};

struct USetCollisionGeometryTool : UMultiSelectionTool {
	USetCollisionGeometryToolProperties* Settings; // 0x90
	UCollisionGeometryVisualizationProperties* VizSettings; // 0x98
	UPhysicsObjectToolPropertySet* CollisionProps; // 0xa0
	UMaterialInterface* LineMaterial; // 0xa8
	UPreviewGeometry* PreviewGeom; // 0xb0
};

struct UUI_Cursor : UUserWidget {
	TMap<EMouseCursor, FMouseCursorStyle> CursorStyle; // 0x260
	UImage* ImgBg; // 0x2b0
};

struct UUI_StableSelectTrainer : USGUI {
	UStableSelectTrainerSlot* StableSelectTrainerSlotTemplate; // 0x2d8
	int32_t MyTrainerGridColumnNum; // 0x2e0
	float MinWorkTime; // 0x2e4
	float MaxWorkTime; // 0x2e8
	float BtnChangWorkTimeMinValue; // 0x2ec
	FText RebornEfficiencyTitleText; // 0x2f0
	FText TameEfficiencyTitleText; // 0x308
	TSoftObjectPtr<UTexture2D> CapitalTypeBrush[0x5]; // 0x320
	UStableSelectTrainerSlot* LowTrainerSlot; // 0x3e8
	UStableSelectTrainerSlot* MiddleTrainerSlot; // 0x3f0
	UStableSelectTrainerSlot* HighTrainerSlot; // 0x3f8
	UUniformGridPanel* MyTrainerGridPanel; // 0x400
	UTextBlock* EfficiencyTitle; // 0x408
	UTextBlock* EfficiencyText; // 0x410
	UTextBlock* WorkTimeText; // 0x418
	UButton* ReduceWorkTimeBtn; // 0x420
	USlider* WorkTimeSlider; // 0x428
	UProgressBar* WorkTimePB; // 0x430
	UButton* AddWorkTimeBtn; // 0x438
	UImage* CapitalTypeImg; // 0x440
	UTextBlock* CapitalText; // 0x448
	UButton* CancelBtn; // 0x450
	UButton* ConfirmBtn; // 0x458
};

struct UBTComposite_SimpleParallel : UBTCompositeNode {
	EBTParallelMode FinishMode; // 0x90
};

struct UAbilityTask : UGameplayTask {
	UGameplayAbility* Ability; // 0x68
	UAbilitySystemComponent* AbilitySystemComponent; // 0x70
};

struct UPolygonSelectionMechanicProperties : UInteractiveToolPropertySet {
	bool bSelectFaces; // 0x60
	bool bSelectEdges; // 0x61
	bool bSelectVertices; // 0x62
	bool bPreferProjectedElement; // 0x63
	bool bSelectDownRay; // 0x64
	bool bIgnoreOcclusion; // 0x65
};

struct UDeleteRoleDialog : UUserWidget {
	UButton* BtnAccept; // 0x280
	UButton* BtnClose; // 0x288
	UCheckBox* CbConfirm; // 0x290
};

struct ASGPlayerStart : APlayerStart {
	int32_t FunctionId; // 0x350
	int32_t PlayerStartId; // 0x354
	float CooldownTime; // 0x358
	float RandomRadius; // 0x35c
	int32_t CheckRandomMax; // 0x360
	char bIsSubPlayerStart : 1; // 0x364
	TArray<ASGPlayerStart*> SubPlayerStartArray; // 0x368
	TArray<FName> DefaultSpawnVolumeFloorTags; // 0x378
	double NextUseTime; // 0x388
	float RegionRaduis; // 0x390
};

struct UUI_TrainReward : USGUI {
	UTrainRewardSlot* TrainRewardSlotTemplate; // 0x2d8
	int32_t PerRowCount; // 0x2e0
	int32_t SlotMinCount; // 0x2e4
	UUniformGridPanel* RewardGridPanel; // 0x2e8
	UCanvasPanel* RewardTipsPanel; // 0x2f0
	UCanvasPanel* SelectPerkPanel; // 0x2f8
	UCheckBox* SelectPerkCheckBox; // 0x300
	UButton* ConfirmButton; // 0x308
	FBaseAnimalChunkData ChunkVehicleData; // 0x318
};

struct UMaterialExpressionVolumetricAdvancedMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput PhaseG; // 0x40
	FExpressionInput PhaseG2; // 0x54
	FExpressionInput PhaseBlend; // 0x68
	FExpressionInput MultiScatteringContribution; // 0x7c
	FExpressionInput MultiScatteringOcclusion; // 0x90
	FExpressionInput MultiScatteringEccentricity; // 0xa4
	FExpressionInput ConservativeDensity; // 0xb8
	float ConstPhaseG; // 0xcc
	float ConstPhaseG2; // 0xd0
	float ConstPhaseBlend; // 0xd4
	bool PerSamplePhaseEvaluation; // 0xd8
	uint32_t MultiScatteringApproximationOctaveCount; // 0xdc
	float ConstMultiScatteringContribution; // 0xe0
	float ConstMultiScatteringOcclusion; // 0xe4
	float ConstMultiScatteringEccentricity; // 0xe8
	bool bGroundContribution; // 0xec
	bool bGrayScaleMaterial; // 0xed
	bool bRayMarchVolumeShadow; // 0xee
};

struct UUI_StructureOccupyExpansionPanel : UUserWidget {
	USGUI* RootSGUI; // 0x270
	UUniformGridPanel* ProtectBox; // 0x278
	UTextBlock* ExpansionText; // 0x280
	UTextBlock* ExpansionNumText; // 0x288
	UButton* SellAllButton; // 0x290
	UTextBlock* SellAllButtonText; // 0x298
	UTextBlock* CharacterNumText; // 0x2a0
	UTextBlock* CharacterPriceText; // 0x2a8
	UTextBlock* GuildNumText; // 0x2b0
	UTextBlock* GuildPriceText; // 0x2b8
	UUI_StructureOccupyExpansionSlot* OccupyExpansionSlotClass; // 0x2c0
	TArray<FGuid> SellItems; // 0x2c8
	int32_t CharacterTotalNum; // 0x2d8
	float CharacterTotalPrice; // 0x2dc
	int32_t GameModeCharacterTotalNum; // 0x2e0
	float GameModeCharacterTotalPrice; // 0x2e4
	int32_t GuildTotalNum; // 0x2e8
	float GuildTotalPrice; // 0x2ec
};

struct UChaosPhysicalMaterial : UObject {
	float Friction; // 0x28
	float StaticFriction; // 0x2c
	float Restitution; // 0x30
	float LinearEtherDrag; // 0x34
	float AngularEtherDrag; // 0x38
	float SleepingLinearVelocityThreshold; // 0x3c
	float SleepingAngularVelocityThreshold; // 0x40
};

struct UBlueprintCore : UObject {
	UObject* SkeletonGeneratedClass; // 0x28
	UObject* GeneratedClass; // 0x30
	bool bLegacyNeedToPurgeSkelRefs; // 0x38
	FGuid BlueprintGuid; // 0x3c
};

struct USkeletalMesh : UStreamableRenderAsset {
	USkeleton* Skeleton; // 0x80
	FBoxSphereBounds ImportedBounds; // 0x88
	FBoxSphereBounds ExtendedBounds; // 0xa4
	FVector PositiveBoundsExtension; // 0xc0
	FVector NegativeBoundsExtension; // 0xcc
	TArray<FSkeletalMaterial> Materials; // 0xd8
	TArray<FBoneMirrorInfo> SkelMirrorTable; // 0xe8
	TArray<FSkeletalMeshLODInfo> LODInfo; // 0xf8
	FPerPlatformInt MinLOD; // 0x158
	FPerPlatformBool DisableBelowMinLodStripping; // 0x15c
	EAxis SkelMirrorAxis; // 0x15d
	EAxis SkelMirrorFlipAxis; // 0x15e
	char bUseFullPrecisionUVs : 1; // 0x15f
	char bUseHighPrecisionTangentBasis : 1; // 0x15f
	char bHasBeenSimplified : 1; // 0x15f
	char bHasVertexColors : 1; // 0x15f
	char bEnablePerPolyCollision : 1; // 0x15f
	UBodySetup* BodySetup; // 0x160
	UPhysicsAsset* PhysicsAsset; // 0x168
	UPhysicsAsset* ShadowPhysicsAsset; // 0x170
	TArray<UNodeMappingContainer*> NodeMappingData; // 0x178
	TArray<UMorphTarget*> MorphTargets; // 0x188
	UAnimInstance* PostProcessAnimBlueprint; // 0x310
	TArray<UClothingAssetBase*> MeshClothingAssets; // 0x318
	FSkeletalMeshSamplingInfo SamplingInfo; // 0x328
	TArray<UAssetUserData*> AssetUserData; // 0x358
	TArray<USkeletalMeshSocket*> Sockets; // 0x368
	TArray<FSocketMorphPositonDeltaEntry> SocketMorphPositionDeltas; // 0x388
	TArray<FSkinWeightProfileInfo> SkinWeightProfiles; // 0x398
};

struct UBackgroundBlurSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UMovieSceneNiagaraParameterTrack : UMovieSceneNiagaraTrack {
	FNiagaraVariable Parameter; // 0x88
};

struct UStableFeedPanel : UUserWidget {
	UStableFeedSlot* StableFeedSlotTemplate; // 0x260
	UUserWidget* EmptySlotTemplate; // 0x268
	UUI_StableSelectTrainer* StableSelectTrainerTemplate; // 0x270
	UUI_TrainReward* TrainRewardUITemplate; // 0x278
	TArray<FText> MateFailedTexts; // 0x280
	int32_t PageMaxNum; // 0x290
	UButton* LastPageBtn; // 0x298
	UTextBlock* CurPageText; // 0x2a0
	UTextBlock* MaxPageText; // 0x2a8
	UButton* NextPageBtn; // 0x2b0
	UTextBlock* NumText; // 0x2b8
	UVerticalBox* SlotVerticalBox; // 0x2c0
	UOptionButton* MateBtn; // 0x2c8
	UButton* AddLifeBtn; // 0x2d0
	UButton* StopRestBtn; // 0x2d8
	UButton* TrainBtn; // 0x2e0
	TArray<UStableFeedSlot*> StableFeedSlotList; // 0x478
	TArray<UUserWidget*> StableEmptySlotList; // 0x488
};

struct UOperatorField : UFieldNodeBase {
	float Magnitude; // 0xc0
	UFieldNodeBase* RightField; // 0xc8
	UFieldNodeBase* LeftField; // 0xd0
	EFieldOperationType Operation; // 0xd8
};

struct USlateSettings : UObject {
	bool bExplicitCanvasChildZOrder; // 0x28
};

struct UWBP_SystemSettingTips_C : USystemSettingItemTips {
	UImage* ImgBack; // 0x290
};

struct UWBP_PrivateSessionMODItem_C : UPrivateSessionMODItem {
	UButton* BtnBg; // 0x270
	UImage* ImgBg; // 0x278
};

struct UGuildLanguageSlot : USGUI {
	UTextBlock* LanguageTypeText; // 0x2d8
	UGuildAuthorityComboBox* LanguageComboBox; // 0x2e0
};

struct UParticleModuleLight : UParticleModuleLightBase {
	bool bUseInverseSquaredFalloff; // 0x30
	bool bAffectsTranslucency; // 0x31
	bool bPreviewLightRadius; // 0x32
	float SpawnFraction; // 0x34
	FRawDistributionVector ColorScaleOverLife; // 0x38
	FRawDistributionFloat BrightnessOverLife; // 0x80
	FRawDistributionFloat RadiusScale; // 0xb0
	FRawDistributionFloat LightExponent; // 0xe0
	FLightingChannels LightingChannels; // 0x110
	float VolumetricScatteringIntensity; // 0x114
	bool bHighQualityLights; // 0x118
	bool bShadowCastingLights; // 0x119
};

struct URuntimeVirtualTexture : UObject {
	int32_t TileCount; // 0x28
	int32_t TileSize; // 0x2c
	int32_t TileBorderSize; // 0x30
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x34
	bool bCompressTextures; // 0x35
	bool bClearTextures; // 0x36
	bool bSinglePhysicalSpace; // 0x37
	bool bPrivateSpace; // 0x38
	bool bAdaptive; // 0x39
	bool bContinuousUpdate; // 0x3a
	int32_t RemoveLowMips; // 0x3c
	TextureGroup LODGroup; // 0x40
	int32_t Size; // 0x44
	URuntimeVirtualTextureStreamingProxy* StreamingTexture; // 0x48
};

struct UMovieScenePropertyTrack : UMovieSceneNameableTrack {
	UMovieSceneSection* SectionToKey; // 0x78
	FMovieScenePropertyBinding PropertyBinding; // 0x80
	TArray<UMovieSceneSection*> Sections; // 0x98
};

struct UGetGeoLocationAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UGuildStructureSlot : UUserWidget {
	UTextBlock* NameText; // 0x260
	UTextBlock* AmountText; // 0x268
	UImage* IconImage; // 0x270
	FString NoLimitString; // 0x278
};

struct UTextBlockWidgetStyle : USlateWidgetStyleContainerBase {
	FTextBlockStyle TextBlockStyle; // 0x30
};

struct UPaperTerrainComponent : UPrimitiveComponent {
	UPaperTerrainMaterial* TerrainMaterial; // 0x488
	bool bClosedSpline; // 0x490
	bool bFilledSpline; // 0x491
	UPaperTerrainSplineComponent* AssociatedSpline; // 0x498
	int32_t RandomSeed; // 0x4a0
	float SegmentOverlapAmount; // 0x4a4
	FLinearColor TerrainColor; // 0x4a8
	int32_t ReparamStepsPerSegment; // 0x4b8
	ESpriteCollisionMode SpriteCollisionDomain; // 0x4bc
	float CollisionThickness; // 0x4c0
	UBodySetup* CachedBodySetup; // 0x4c8
};

struct UNiagaraDataInterfaceFieldSystem : UNiagaraDataInterface {
	UBlueprint* BlueprintSource; // 0x38
	AActor* SourceActor; // 0x40
	FIntVector FieldDimensions; // 0x48
	FVector MinBounds; // 0x54
	FVector MaxBounds; // 0x60
};

struct UUI_AdminSubPanelHorse : UUI_AdminSubPanel {
	UUI_AdminPlayerPanel* AdminPlayerPanel; // 0x2d8
	UScrollBox* ScrollBoxNpcList; // 0x2e0
	UEditableTextBox* SearchTextBoxNpc; // 0x2e8
	UUI_ServerAdminItemRow* ServerAdminItemRowTemplate; // 0x300
	UEditableTextBox* EditableTextBoxCreateLevel; // 0x308
	UEditableTextBox* EditableTextBoxCreateTameLevel; // 0x310
	UEditableTextBox* EditableTextBoxCreateTeamId; // 0x318
	UEditableTextBox* EditableTextBoxCreateNum; // 0x320
	UEditableTextBox* EditableTextBoxHorseQuality; // 0x328
	UCheckBox* CheckBoxIsTamed; // 0x330
	UCheckBox* CheckBoxIsCheckQualityMax; // 0x338
	UCheckBox* CheckBoxRandAC; // 0x340
	UEditableTextBox* EditableTextBoxCreateSpeed; // 0x348
	UEditableTextBox* EditableTextBoxCreateHP; // 0x350
	UEditableTextBox* EditableTextBoxCreateWeight; // 0x358
	UEditableTextBox* EditableTextBoxCreateSP; // 0x360
	UEditableTextBox* EditableTextBoxCreateOperate; // 0x368
	UEditableTextBox* EditableTextBoxCreatePerk; // 0x370
};

struct UParticleModuleSizeScaleBySpeed : UParticleModuleSizeBase {
	FVector2D SpeedScale; // 0x30
	FVector2D MaxScale; // 0x38
};

struct UGroomComponent : UMeshComponent {
	UGroomAsset* GroomAsset; // 0x4b8
	TArray<UNiagaraComponent*> NiagaraComponents; // 0x4c0
	USkeletalMesh* SourceSkeletalMesh; // 0x4d0
	UGroomBindingAsset* BindingAsset; // 0x4d8
	UPhysicsAsset* PhysicsAsset; // 0x4e0
	UMaterialInterface* Strands_DebugMaterial; // 0x4e8
	UMaterialInterface* Strands_DefaultMaterial; // 0x4f0
	UMaterialInterface* Cards_DefaultMaterial; // 0x4f8
	UMaterialInterface* Meshes_DefaultMaterial; // 0x500
	UNiagaraSystem* AngularSpringsSystem; // 0x508
	UNiagaraSystem* CosseratRodsSystem; // 0x510
	FString AttachmentName; // 0x518
	TArray<FHairGroupDesc> GroomGroupsDesc; // 0x570
};

struct UHoleFillToolProperties : UInteractiveToolPropertySet {
	EHoleFillOpFillType FillType; // 0x60
	bool bRemoveIsolatedTriangles; // 0x61
};

struct UGeneralAuctionSellPanel : USGUI {
	UScrollBox* ScrollSellGeneralList; // 0x2d8
	UScrollBox* ScrollMyGeneralList; // 0x2e0
	UButton* Button_Recall; // 0x2e8
	UButton* Button_Sell; // 0x2f0
	UButton* Button_RefreshSellList; // 0x2f8
	UButton* Button_RefreshMyList; // 0x300
	UN_EquipPanel* EquipPanel; // 0x308
	UAttributePanel* AttributePanel; // 0x310
	UConditionPanel* ConditionPanel; // 0x318
	USkillPanel* SkillPanel; // 0x320
	UOptionButton* AttributeButton; // 0x328
	UOptionButton* ConditionButton; // 0x330
	UOptionButton* SkillButton; // 0x338
	UCanvasPanel* CanvasPanel_Preview; // 0x340
	UTextBlock* TextBlock_GeneralName; // 0x348
	UTextBlock* TextBlock_GeneralLevel; // 0x350
	UImage* GeneralQualityImage; // 0x358
	UImage* GeneralNameBg; // 0x360
	UGeneralAuctionSellSlot* GeneralAuctionSellSlot; // 0x368
	TSoftObjectPtr<UTexture2D> GeneralQuality[0x6]; // 0x370
	TSoftObjectPtr<UTexture2D> GeneralNameBrush[0x4]; // 0x460
	FLinearColor GeneralNameColor[0x6]; // 0x500
	TWeakObjectPtr<UGeneralAuctionSellSlot> MyGeneralSlotSelected; // 0x560
	TWeakObjectPtr<UGeneralAuctionSellSlot> SellGeneralSlotSelected; // 0x568
	TWeakObjectPtr<UUI_GuildAuctionHouse> ParentUI; // 0x570
};

struct ULevelSequenceBurnIn : UUserWidget {
	FLevelSequencePlayerSnapshot FrameInformation; // 0x260
	ALevelSequenceActor* LevelSequenceActor; // 0x318
};

struct UWBP_MainMenu_C : UUI_MainMenu {
	FPointerToUberGraphFrame UberGraphFrame; // 0x418
	UButton* BtnNotice; // 0x420
	UImage* ImageActivity; // 0x428
	UImage* ImageBg; // 0x430
	UImage* ImageLogo; // 0x438
	UImage* ImageLogoBg; // 0x440
	UImage* ImageLogoBg_2; // 0x448
	UImage* ImageSpark; // 0x450
	UImage* ImageSwordFire; // 0x458
	UImage* ImageWenZiEffect; // 0x460
};

struct UEnvQueryTest_Dot : UEnvQueryTest {
	FEnvDirection LineA; // 0x1f8
	FEnvDirection LineB; // 0x218
	EEnvTestDot TestMode; // 0x238
	bool bAbsoluteValue; // 0x239
};

struct UEngine : UObject {
	UFont* TinyFont; // 0x30
	FSoftObjectPath TinyFontName; // 0x38
	UFont* SmallFont; // 0x50
	FSoftObjectPath SmallFontName; // 0x58
	UFont* MediumFont; // 0x70
	FSoftObjectPath MediumFontName; // 0x78
	UFont* LargeFont; // 0x90
	FSoftObjectPath LargeFontName; // 0x98
	UFont* SubtitleFont; // 0xb0
	FSoftObjectPath SubtitleFontName; // 0xb8
	TArray<UFont*> AdditionalFonts; // 0xd0
	TArray<FString> AdditionalFontNames; // 0xe0
	UConsole* ConsoleClass; // 0xf0
	FSoftClassPath ConsoleClassName; // 0xf8
	UGameViewportClient* GameViewportClientClass; // 0x110
	FSoftClassPath GameViewportClientClassName; // 0x118
	ULocalPlayer* LocalPlayerClass; // 0x130
	FSoftClassPath LocalPlayerClassName; // 0x138
	AWorldSettings* WorldSettingsClass; // 0x150
	FSoftClassPath WorldSettingsClassName; // 0x158
	FSoftClassPath NavigationSystemClassName; // 0x170
	UNavigationSystemBase* NavigationSystemClass; // 0x188
	FSoftClassPath NavigationSystemConfigClassName; // 0x190
	UNavigationSystemConfig* NavigationSystemConfigClass; // 0x1a8
	FSoftClassPath AvoidanceManagerClassName; // 0x1b0
	UAvoidanceManager* AvoidanceManagerClass; // 0x1c8
	FSoftClassPath AIControllerClassName; // 0x1d0
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x1e8
	FSoftClassPath PhysicsCollisionHandlerClassName; // 0x1f0
	FSoftClassPath GameUserSettingsClassName; // 0x208
	UGameUserSettings* GameUserSettingsClass; // 0x220
	UGameUserSettings* GameUserSettings; // 0x228
	ALevelScriptActor* LevelScriptActorClass; // 0x230
	FSoftClassPath LevelScriptActorClassName; // 0x238
	FSoftClassPath DefaultBlueprintBaseClassName; // 0x250
	FSoftClassPath GameSingletonClassName; // 0x268
	UObject* GameSingleton; // 0x280
	FSoftClassPath AssetManagerClassName; // 0x288
	UAssetManager* AssetManager; // 0x2a0
	UTexture2D* DefaultTexture; // 0x2a8
	FSoftObjectPath DefaultTextureName; // 0x2b0
	UTexture* DefaultDiffuseTexture; // 0x2c8
	FSoftObjectPath DefaultDiffuseTextureName; // 0x2d0
	UTexture2D* DefaultBSPVertexTexture; // 0x2e8
	FSoftObjectPath DefaultBSPVertexTextureName; // 0x2f0
	UTexture2D* HighFrequencyNoiseTexture; // 0x308
	FSoftObjectPath HighFrequencyNoiseTextureName; // 0x310
	UTexture2D* DefaultBokehTexture; // 0x328
	FSoftObjectPath DefaultBokehTextureName; // 0x330
	UTexture2D* DefaultBloomKernelTexture; // 0x348
	FSoftObjectPath DefaultBloomKernelTextureName; // 0x350
	UMaterial* WireframeMaterial; // 0x368
	FString WireframeMaterialName; // 0x370
	UMaterial* DebugMeshMaterial; // 0x380
	FSoftObjectPath DebugMeshMaterialName; // 0x388
	UMaterial* EmissiveMeshMaterial; // 0x3a0
	FSoftObjectPath EmissiveMeshMaterialName; // 0x3a8
	UMaterial* LevelColorationLitMaterial; // 0x3c0
	FString LevelColorationLitMaterialName; // 0x3c8
	UMaterial* LevelColorationUnlitMaterial; // 0x3d8
	FString LevelColorationUnlitMaterialName; // 0x3e0
	UMaterial* LightingTexelDensityMaterial; // 0x3f0
	FString LightingTexelDensityName; // 0x3f8
	UMaterial* ShadedLevelColorationLitMaterial; // 0x408
	FString ShadedLevelColorationLitMaterialName; // 0x410
	UMaterial* ShadedLevelColorationUnlitMaterial; // 0x420
	FString ShadedLevelColorationUnlitMaterialName; // 0x428
	UMaterial* RemoveSurfaceMaterial; // 0x438
	FSoftObjectPath RemoveSurfaceMaterialName; // 0x440
	UMaterial* VertexColorMaterial; // 0x458
	FString VertexColorMaterialName; // 0x460
	UMaterial* VertexColorViewModeMaterial_ColorOnly; // 0x470
	FString VertexColorViewModeMaterialName_ColorOnly; // 0x478
	UMaterial* VertexColorViewModeMaterial_AlphaAsColor; // 0x488
	FString VertexColorViewModeMaterialName_AlphaAsColor; // 0x490
	UMaterial* VertexColorViewModeMaterial_RedOnly; // 0x4a0
	FString VertexColorViewModeMaterialName_RedOnly; // 0x4a8
	UMaterial* VertexColorViewModeMaterial_GreenOnly; // 0x4b8
	FString VertexColorViewModeMaterialName_GreenOnly; // 0x4c0
	UMaterial* VertexColorViewModeMaterial_BlueOnly; // 0x4d0
	FString VertexColorViewModeMaterialName_BlueOnly; // 0x4d8
	FSoftObjectPath DebugEditorMaterialName; // 0x4e8
	UMaterial* ConstraintLimitMaterial; // 0x500
	UMaterialInstanceDynamic* ConstraintLimitMaterialX; // 0x508
	UMaterialInstanceDynamic* ConstraintLimitMaterialXAxis; // 0x510
	UMaterialInstanceDynamic* ConstraintLimitMaterialY; // 0x518
	UMaterialInstanceDynamic* ConstraintLimitMaterialYAxis; // 0x520
	UMaterialInstanceDynamic* ConstraintLimitMaterialZ; // 0x528
	UMaterialInstanceDynamic* ConstraintLimitMaterialZAxis; // 0x530
	UMaterialInstanceDynamic* ConstraintLimitMaterialPrismatic; // 0x538
	UMaterial* InvalidLightmapSettingsMaterial; // 0x540
	FSoftObjectPath InvalidLightmapSettingsMaterialName; // 0x548
	UMaterial* PreviewShadowsIndicatorMaterial; // 0x560
	FSoftObjectPath PreviewShadowsIndicatorMaterialName; // 0x568
	UMaterial* ArrowMaterial; // 0x580
	UMaterialInstanceDynamic* ArrowMaterialYellow; // 0x588
	FSoftObjectPath ArrowMaterialName; // 0x590
	FLinearColor LightingOnlyBrightness; // 0x5a8
	TArray<FLinearColor> ShaderComplexityColors; // 0x5b8
	TArray<FLinearColor> QuadComplexityColors; // 0x5c8
	TArray<FLinearColor> LightComplexityColors; // 0x5d8
	TArray<FLinearColor> StationaryLightOverlapColors; // 0x5e8
	TArray<FLinearColor> LODColorationColors; // 0x5f8
	TArray<FLinearColor> HLODColorationColors; // 0x608
	TArray<FLinearColor> StreamingAccuracyColors; // 0x618
	float MaxPixelShaderAdditiveComplexityCount; // 0x628
	float MaxES3PixelShaderAdditiveComplexityCount; // 0x62c
	float MinLightMapDensity; // 0x630
	float IdealLightMapDensity; // 0x634
	float MaxLightMapDensity; // 0x638
	char bRenderLightMapDensityGrayscale : 1; // 0x63c
	float RenderLightMapDensityGrayscaleScale; // 0x640
	float RenderLightMapDensityColorScale; // 0x644
	FLinearColor LightMapDensityVertexMappedColor; // 0x648
	FLinearColor LightMapDensitySelectedColor; // 0x658
	TArray<FStatColorMapping> StatColorMappings; // 0x668
	UPhysicalMaterial* DefaultPhysMaterial; // 0x678
	FSoftObjectPath DefaultPhysMaterialName; // 0x680
	TArray<FGameNameRedirect> ActiveGameNameRedirects; // 0x698
	TArray<FClassRedirect> ActiveClassRedirects; // 0x6a8
	TArray<FPluginRedirect> ActivePluginRedirects; // 0x6b8
	TArray<FStructRedirect> ActiveStructRedirects; // 0x6c8
	UTexture2D* PreIntegratedSkinBRDFTexture; // 0x6d8
	FSoftObjectPath PreIntegratedSkinBRDFTextureName; // 0x6e0
	UTexture2D* BlueNoiseTexture; // 0x6f8
	FSoftObjectPath BlueNoiseTextureName; // 0x700
	UTexture2D* MiniFontTexture; // 0x718
	FSoftObjectPath MiniFontTextureName; // 0x720
	UTexture* WeightMapPlaceholderTexture; // 0x738
	FSoftObjectPath WeightMapPlaceholderTextureName; // 0x740
	UTexture2D* LightMapDensityTexture; // 0x758
	FSoftObjectPath LightMapDensityTextureName; // 0x760
	UGameViewportClient* GameViewport; // 0x780
	TArray<FString> DeferredCommands; // 0x788
	float NearClipPlane; // 0x798
	char bSubtitlesEnabled : 1; // 0x79c
	char bSubtitlesForcedOff : 1; // 0x79c
	int32_t MaximumLoopIterationCount; // 0x7a0
	char bCanBlueprintsTickByDefault : 1; // 0x7a4
	char bOptimizeAnimBlueprintMemberVariableAccess : 1; // 0x7a4
	char bAllowMultiThreadedAnimationUpdate : 1; // 0x7a4
	char bEnableEditorPSysRealtimeLOD : 1; // 0x7a4
	char bSmoothFrameRate : 1; // 0x7a4
	char bUseFixedFrameRate : 1; // 0x7a4
	float FixedFrameRate; // 0x7a8
	FFloatRange SmoothedFrameRateRange; // 0x7ac
	UEngineCustomTimeStep* CustomTimeStep; // 0x7c0
	FSoftClassPath CustomTimeStepClassName; // 0x7e8
	UTimecodeProvider* TimecodeProvider; // 0x800
	FSoftClassPath TimecodeProviderClassName; // 0x828
	bool bGenerateDefaultTimecode; // 0x840
	FFrameRate GenerateDefaultTimecodeFrameRate; // 0x844
	float GenerateDefaultTimecodeFrameDelay; // 0x84c
	char bCheckForMultiplePawnsSpawnedInAFrame : 1; // 0x850
	int32_t NumPawnsAllowedToBeSpawnedInAFrame; // 0x854
	char bShouldGenerateLowQualityLightmaps : 1; // 0x858
	FColor C_WorldBox; // 0x85c
	FColor C_BrushWire; // 0x860
	FColor C_AddWire; // 0x864
	FColor C_SubtractWire; // 0x868
	FColor C_SemiSolidWire; // 0x86c
	FColor C_NonSolidWire; // 0x870
	FColor C_WireBackground; // 0x874
	FColor C_ScaleBoxHi; // 0x878
	FColor C_VolumeCollision; // 0x87c
	FColor C_BSPCollision; // 0x880
	FColor C_OrthoBackground; // 0x884
	FColor C_Volume; // 0x888
	FColor C_BrushShape; // 0x88c
	float StreamingDistanceFactor; // 0x890
	FDirectoryPath GameScreenshotSaveDirectory; // 0x898
	ETransitionType TransitionType; // 0x8a8
	FString TransitionDescription; // 0x8b0
	FString TransitionGameMode; // 0x8c0
	char bAllowMatureLanguage : 1; // 0x8d0
	float CameraRotationThreshold; // 0x8d4
	float CameraTranslationThreshold; // 0x8d8
	float PrimitiveProbablyVisibleTime; // 0x8dc
	float MaxOcclusionPixelsFraction; // 0x8e0
	char bPauseOnLossOfFocus : 1; // 0x8e4
	int32_t MaxParticleResize; // 0x8e8
	int32_t MaxParticleResizeWarn; // 0x8ec
	TArray<FDropNoteInfo> PendingDroppedNotes; // 0x8f0
	float NetClientTicksPerSecond; // 0x900
	float DisplayGamma; // 0x904
	float MinDesiredFrameRate; // 0x908
	FLinearColor DefaultSelectedMaterialColor; // 0x90c
	FLinearColor SelectedMaterialColor; // 0x91c
	FLinearColor SelectionOutlineColor; // 0x92c
	FLinearColor SubduedSelectionOutlineColor; // 0x93c
	FLinearColor SelectedMaterialColorOverride; // 0x94c
	bool bIsOverridingSelectedColor; // 0x95c
	char bEnableOnScreenDebugMessages : 1; // 0x960
	char bEnableOnScreenDebugMessagesDisplay : 1; // 0x960
	char bSuppressMapWarnings : 1; // 0x960
	char bDisableAILogging : 1; // 0x960
	uint32_t bEnableVisualLogRecordingOnStart; // 0x964
	int32_t ScreenSaverInhibitorSemaphore; // 0x968
	char bLockReadOnlyLevels : 1; // 0x96c
	FString ParticleEventManagerClassPath; // 0x970
	float SelectionHighlightIntensity; // 0x980
	float BSPSelectionHighlightIntensity; // 0x984
	float SelectionHighlightIntensityBillboards; // 0x988
	TArray<FNetDriverDefinition> NetDriverDefinitions; // 0xbf8
	TArray<FString> ServerActors; // 0xc08
	TArray<FString> RuntimeServerActors; // 0xc18
	float NetErrorLogInterval; // 0xc28
	char bStartedLoadMapMovie : 1; // 0xc2c
	int32_t NextWorldContextHandle; // 0xc48
};

struct UEnvQueryTest_Trace : UEnvQueryTest {
	FEnvTraceData TraceData; // 0x1f8
	FAIDataProviderBoolValue TraceFromContext; // 0x228
	FAIDataProviderFloatValue ItemHeightOffset; // 0x260
	FAIDataProviderFloatValue ContextHeightOffset; // 0x298
	UEnvQueryContext* Context; // 0x2d0
};

struct UWBP_SystemSetting_C : UUI_SystemSetting {
	UWBP_AnchorModeSystemSetting_C* AnchorModeSetting; // 0x280
	UWBP_AudioSystemSetting_C* AudioSetting; // 0x288
	UWBP_ControlSystemSetting_C* ControlSetting; // 0x290
	UWBP_GraphSystemSetting_C* GraphSetting; // 0x298
	UWBP_LanguageSystemSetting_C* LanguageSetting; // 0x2a0
	UWBP_NetworkSystemSetting_C* NetworkSetting; // 0x2a8
	UWBP_SwitchSystemSetting_C* SwitchSetting; // 0x2b0
	UCanvasPanel* SystemSetting; // 0x2b8
	UWBP_SystemSettingRadioView_C* SystemSettingRadioView; // 0x2c0
};

struct ACharacter : APawn {
	USkeletalMeshComponent* Mesh; // 0x370
	UCharacterMovementComponent* CharacterMovement; // 0x378
	UCapsuleComponent* CapsuleComponent; // 0x380
	FBasedMovementInfo BasedMovement; // 0x388
	FBasedMovementInfo ReplicatedBasedMovement; // 0x3c0
	float AnimRootMotionTranslationScale; // 0x3f8
	FVector BaseTranslationOffset; // 0x3fc
	FQuat BaseRotationOffset; // 0x410
	float ReplicatedServerLastTransformUpdateTimeStamp; // 0x420
	double ReplayLastTransformUpdateTimeStamp; // 0x428
	char ReplicatedMovementMode; // 0x430
	bool bInBaseReplication; // 0x431
	float CrouchedEyeHeight; // 0x434
	char bIsCrouched : 1; // 0x438
	char bProxyIsJumpForceApplied : 1; // 0x438
	char bPressedJump : 1; // 0x438
	char bClientUpdating : 1; // 0x438
	char bClientWasFalling : 1; // 0x438
	char bClientResimulateRootMotion : 1; // 0x438
	char bClientResimulateRootMotionSources : 1; // 0x438
	char bSimGravityDisabled : 1; // 0x438
	char bClientCheckEncroachmentOnNetUpdate : 1; // 0x439
	char bServerMoveIgnoreRootMotion : 1; // 0x439
	char bWasJumping : 1; // 0x439
	float JumpKeyHoldTime; // 0x43c
	float JumpForceTimeRemaining; // 0x440
	float ProxyJumpForceStartedTime; // 0x444
	float JumpMaxHoldTime; // 0x448
	int32_t JumpMaxCount; // 0x44c
	int32_t JumpCurrentCount; // 0x450
	int32_t JumpCurrentCountPreJump; // 0x454
	FMulticastInlineDelegate OnReachedJumpApex; // 0x460
	FMulticastInlineDelegate MovementModeChangedDelegate; // 0x480
	FMulticastInlineDelegate OnCharacterMovementUpdated; // 0x490
	FRootMotionSourceGroup SavedRootMotion; // 0x4a0
	FRootMotionMovementParams ClientRootMotionParams; // 0x4e0
	TArray<FSimulatedRootMotionReplicatedMove> RootMotionRepMoves; // 0x520
	FRepRootMotionMontage RepRootMotion; // 0x530
};

struct UUI_PrivateSessionEntry : USGUI {
	UButton* BtnLocal; // 0x2d8
	UButton* BtnProfessional; // 0x2e0
	UButton* BtnClose; // 0x2e8
};

struct UUI_TransportMachine : USGUI {
	UOptionButton* BtnInventory; // 0x2e8
	UOptionButton* BtnGeneral; // 0x2f0
	UOptionButton* BtnHorse; // 0x2f8
	UButton* CloseButton; // 0x300
	UN_EquipPanel* EquipPanel; // 0x308
	UN_ShortCutPanel* ShortCutPanel; // 0x310
	UTextBlock* CapitalText; // 0x318
	UUI_TransportMachineInventory* TransportMachineInventory; // 0x320
	UUI_TransportMachineGeneral* TransportMachineGeneral; // 0x328
	UUI_TransportMachineHorse* TransportMachineHorse; // 0x330
	ETransportType TransportType; // 0x338
	UN_SplitItemPanel* SplitItemPanelTemplate; // 0x350
	FText CrossServerTitleText; // 0x360
	FText CrossServerSubTitleText; // 0x378
	FText CrossServerDescText; // 0x390
	FText BattleTitleText; // 0x3a8
	FText BattleSubTitleText; // 0x3c0
	FText BattleDescText; // 0x3d8
	UTextBlock* TitleText; // 0x3f0
	UTextBlock* SubTitleText; // 0x3f8
	UMultiLineEditableText* DescText; // 0x400
};

struct UAnimationSharingStateProcessor : UObject {
	TSoftObjectPtr<UEnum> AnimationStateEnum; // 0x28
};

struct AInteractiveFoliageActor : AStaticMeshActor {
	UCapsuleComponent* CapsuleComponent; // 0x320
	FVector TouchingActorEntryPosition; // 0x328
	FVector FoliageVelocity; // 0x334
	FVector FoliageForce; // 0x340
	FVector FoliagePosition; // 0x34c
	float FoliageDamageImpulseScale; // 0x358
	float FoliageTouchImpulseScale; // 0x35c
	float FoliageStiffness; // 0x360
	float FoliageStiffnessQuadratic; // 0x364
	float FoliageDamping; // 0x368
	float MaxDamageImpulse; // 0x36c
	float MaxTouchImpulse; // 0x370
	float MaxForce; // 0x374
	float Mass; // 0x378
};

struct UPawnMovementComponent : UNavMovementComponent {
	APawn* PawnOwner; // 0x140
};

struct ASG_AIController : AAIController {
	ABaseCharacter* SG_BaseCharacter; // 0x418
	UBehaviorTree* BehaviorTreeAsset; // 0x420
	int32_t ExecutionTaskFrequency; // 0x428
	char bEnableUpdateRateOptimizations : 1; // 0x430
	TMap<float, float> FrequencyToSkipUpdateMap; // 0x438
	float ControlRotationInterpSpeed; // 0x4a4
	char bIsDrawDebugPath : 1; // 0x4b4
	float TetherTime; // 0x4b8
	float TetherDistance; // 0x4bc
	int32_t NavPathPointNumber; // 0x4c0
	int32_t CurrentNavPathIndex; // 0x4c4
	FVector NavPathEndLocation; // 0x4c8
	TArray<FVector> NavPathPathPoints; // 0x4d8
	FSGPathfindingStatusData Struct_PathfindingStatusData; // 0x4e8
	char bIsValidNavPathToDesiredActor : 1; // 0x5d0
	char bPauseAI : 1; // 0x5d0
	EAIStatusType Enum_AIStatus; // 0x5d2
	EAIStatusType Enum_AIPrevStatus; // 0x5d3
	FVector CustomDesiredFollowLocation; // 0x630
	FVector CustomAttackDesiredLocation; // 0x63c
	char bProjectNavPathOnFormationLoc : 1; // 0x664
	FVector ProjectNavPathQueryExtentOnFormation; // 0x668
	char bIsForceFormation : 1; // 0x674
	TArray<FRoadPathConfig> SG_RoadPathConfigs; // 0x678
	char bAllowTagetPlayerCorpses : 1; // 0x688
	char bAllowTagetCorpses : 1; // 0x688
	float BaseAggroAmountToPlayer; // 0x68c
	float BaseAggroAmountToAnimal; // 0x690
	float BaseAggroAmountToWillDead; // 0x694
	float BaseAggroAmountToCorpse; // 0x698
	float BaseAggroAmountToStructure; // 0x69c
	float BaseAggroAmountToSpecial; // 0x6a0
	TMap<AActor*, float> AggroAmountToMultiplier; // 0x6a8
	float ReceivedDamageToAggroMultiplier; // 0x6f8
	float ReceivedDamageToAggroMultiplierByStructure; // 0x6fc
	float CausedDamageToAggroMultiplier; // 0x700
	float CausedDamageToAggroMultiplierByStructure; // 0x704
	float AggroDecreaseInterval; // 0x708
	char bUseFroceAggroDecrease : 1; // 0x70c
	float FroceAggroDecreaseInterval; // 0x710
	float AggroInvalidInterval; // 0x714
	char bShouldCheckAttackDistance : 1; // 0x718
	char bOnlyCheckAttackDistanceForPlayer : 1; // 0x718
	TWeakObjectPtr<AActor> CurrentEnemy; // 0x740
	TWeakObjectPtr<AActor> ForcedAttackEnemy; // 0x748
	TWeakObjectPtr<UPrimitiveComponent> ForcedAttackComponent; // 0x750
	FVector ForcedAttackLocation; // 0x758
	char bNotifyFriendsSameClass : 1; // 0x764
	TArray<ABaseCharacter*> InclusionFriendsClass; // 0x768
	float NotifyFriendsMinAggro; // 0x778
	float NotifyFriendsAggroMultiplier; // 0x77c
	float NotifyFriendsSightMultiplier; // 0x780
	float UpdateStimulusInterval; // 0x784
	float UpdateStimulusStructureInterval; // 0x788
	TArray<FSGAISenseConfig_Sight> SensesConfig_Sight; // 0x790
	FSGAISenseConfig_Hearing SensesConfig_Hearing; // 0x7a0
	char bCheckPlayerDistanceSquare : 1; // 0x7a8
	float MinDisSqFromPlayerUpdateSightStimulus; // 0x7ac
	TArray<int32_t> UpdateStimulusFrequency; // 0x7d8
	int32_t UpdateStimulusRate; // 0x7e8
	int32_t UpdateStimulusCounter; // 0x7ec
	char bAllowSightStimulusStructure : 1; // 0x7f0
	char bShowAIDebug : 1; // 0x7f0
	char bCanForceFlee : 1; // 0x7f0
	float StartForceFleeHealthPercentage; // 0x7f4
	float EndForceFleeHealthPercentage; // 0x7f8
	float FleeFixedDistance; // 0x7fc
	float FleeRandomDistance; // 0x800
	float EndFleeHPPercentage; // 0x804
	float StartFleeHPPercentage; // 0x808
	char bEnableVigilance : 1; // 0x818
	float VigilanceMinRange; // 0x81c
	float CrouchVigilanceAddValuePerSecond; // 0x820
	float NormalVigilanceAddValuePerSecond; // 0x824
	float SprintVigilanceAddValuePerSecond; // 0x828
	float VigilanceReduceValuePerSecond; // 0x82c
	float VigilanceReduceTimeInterval; // 0x830
	char bAllowAttackBlockadeStrcuture : 1; // 0x840
};

struct UMaterialExpressionDynamicParameter : UMaterialExpression {
	TArray<FString> ParamNames; // 0x40
	FLinearColor DefaultValue; // 0x50
	uint32_t ParameterIndex; // 0x60
};

struct UShowLoginUICallbackProxy : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UBakeTransformToolProperties : UInteractiveToolPropertySet {
	bool bBakeRotation; // 0x60
	EBakeScaleMethod BakeScale; // 0x61
	bool bRecenterPivot; // 0x62
};

struct UMagicLeapARPinSettings : UObject {
	float UpdateCheckFrequency; // 0x28
	FMagicLeapARPinState OnUpdatedEventTriggerDelta; // 0x2c
};

struct UBlendSpace : UBlendSpaceBase {
	EBlendSpaceAxis AxisToScaleAnimation; // 0x148
};

struct UDatasmithStaticMeshGLTFImportData : UDatasmithStaticMeshImportData {
	FString SourceMeshName; // 0x28
};

struct UTextureRenderTarget : UTexture {
	float TargetGamma; // 0xd8
};

struct UMovieScene3DAttachSection : UMovieScene3DConstraintSection {
	FName AttachSocketName; // 0x118
	FName AttachComponentName; // 0x120
	EAttachmentRule AttachmentLocationRule; // 0x128
	EAttachmentRule AttachmentRotationRule; // 0x129
	EAttachmentRule AttachmentScaleRule; // 0x12a
	EDetachmentRule DetachmentLocationRule; // 0x12b
	EDetachmentRule DetachmentRotationRule; // 0x12c
	EDetachmentRule DetachmentScaleRule; // 0x12d
};

struct USoundNodeLevel : USoundNode {
	TArray<FSGSoundLevelVolumeData> Volume; // 0x48
};

struct UWBP_PrivateSessionPassword_C : UPrivateSessionPassword {
	UImage* Image; // 0x298
	UImage* Image_131; // 0x2a0
	UImage* Image_250; // 0x2a8
	UImage* ImgBg; // 0x2b0
	UImage* ImgBorder; // 0x2b8
	UImage* ImgNameInputBg; // 0x2c0
};

struct UCanvasRenderTarget2D : UTextureRenderTarget2D {
	FMulticastInlineDelegate OnCanvasRenderTargetUpdate; // 0x108
	TWeakObjectPtr<UWorld> World; // 0x118
	bool bShouldClearRenderTargetOnReceiveUpdate; // 0x120
};

struct UInterpTrackFloatAnimBPParam : UInterpTrackFloatBase {
	UObject* AnimBlueprintClass; // 0x90
	UAnimInstance* AnimClass; // 0x98
	FName ParamName; // 0xa0
};

struct UGizmoCircleComponent : UGizmoBaseComponent {
	FVector Normal; // 0x4a8
	float Radius; // 0x4b4
	float Thickness; // 0x4b8
	int32_t NumSides; // 0x4bc
	bool bViewAligned; // 0x4c0
	bool bOnlyAllowFrontFacingHits; // 0x4c1
};

struct UWidgetAnimation : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
	TArray<FWidgetAnimationBinding> AnimationBindings; // 0x68
	bool bLegacyFinishOnStop; // 0x78
	FString DisplayLabel; // 0x80
};

struct UPaperTileSet : UObject {
	FIntPoint TileSize; // 0x28
	UTexture2D* TileSheet; // 0x30
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FIntMargin BorderMargin; // 0x48
	FIntPoint PerTileSpacing; // 0x58
	FIntPoint DrawingOffset; // 0x60
	int32_t WidthInTiles; // 0x68
	int32_t HeightInTiles; // 0x6c
	int32_t AllocatedWidth; // 0x70
	int32_t AllocatedHeight; // 0x74
	TArray<FPaperTileMetadata> PerTileData; // 0x78
	TArray<FPaperTileSetTerrain> Terrains; // 0x88
	int32_t TileWidth; // 0x98
	int32_t TileHeight; // 0x9c
	int32_t Margin; // 0xa0
	int32_t Spacing; // 0xa4
};

struct UTransAllianceOfficialSlot : USGUI {
	UTextBlock* GuildNameText; // 0x2d8
	UTextBlock* GuildLevelText; // 0x2e0
	UTextBlock* GuildOwnerText; // 0x2e8
	UTextBlock* MemberCountText; // 0x2f0
	UImage* BGImage; // 0x2f8
	TSoftObjectPtr<UTexture2D> NormalBGTexture; // 0x300
	TSoftObjectPtr<UTexture2D> SelectBGTexture; // 0x328
};

struct UCameraModifier : UObject {
	char bDebug : 1; // 0x28
	char bExclusive : 1; // 0x28
	char Priority; // 0x2c
	APlayerCameraManager* CameraOwner; // 0x30
	float AlphaInTime; // 0x38
	float AlphaOutTime; // 0x3c
	float Alpha; // 0x40
};

struct UUI_AddView : UUserWidget {
	FMulticastInlineDelegate OnValueChanged; // 0x260
	int32_t nValue; // 0x288
	int32_t nMaxValue; // 0x28c
	int32_t nMinValue; // 0x290
	UButton* BtnAdd; // 0x298
	UButton* BtnReduce; // 0x2a0
};

struct UParticleModuleSize : UParticleModuleSizeBase {
	FRawDistributionVector StartSize; // 0x30
};

struct UPhononOcclusionSourceSettings : UOcclusionPluginSourceSettingsBase {
	EIplDirectOcclusionMode DirectOcclusionMode; // 0x28
	EIplDirectOcclusionMethod DirectOcclusionMethod; // 0x29
	float DirectOcclusionSourceRadius; // 0x2c
	bool DirectAttenuation; // 0x30
	bool AirAbsorption; // 0x31
};

struct URewardCondition : UObject {
	FString Description; // 0x28
	ESGStatisticsEventType EventType; // 0x38
	EStatisticsSetParamReference ParamReference; // 0x39
	FString Param; // 0x40
};

struct ASG_SiegeCharacter : ASG_MoveSeatingCharacter {
	char bServerMeshRefreshBones : 1; // 0x2698
	char bTowerIsDown : 1; // 0x2698
	USGAudioComponent* LoopFireAudio; // 0x26a0
	FName SpawnSoundID; // 0x26a8
	ESiegeType SiegeType; // 0x26b0
	FSoftObjectPath DestroyedMesh; // 0x26b8
	ASGDestructibleActor* DestroyedMeshActorClass; // 0x26d0
	FVector DestructibleRelativeLocation; // 0x26d8
	FRotator DestructibleRelativeRotation; // 0x26e4
	FName DeadSoundID; // 0x26f0
	float TPVCameraPitchMin; // 0x26f8
	float TPVCameraPitchMax; // 0x26fc
	float TPVCameraYawMin; // 0x2700
	float TPVCameraYawMax; // 0x2704
	float TPVCameraYawMinWithPower; // 0x2708
	float TPVCameraYawMaxWithPower; // 0x270c
	char bDrawDebugRotate : 1; // 0x2710
	double LastServerUpdateSent; // 0x2718
	float WantYawViewRotation; // 0x2720
	float WantPitchViewRotation; // 0x2724
	float YawViewRotation; // 0x2728
	float PitchViewRotation; // 0x272c
	float LocalViewYaw; // 0x2730
	float LocalViewPitch; // 0x2734
	FName YawBoneSocketName; // 0x2738
	FName PitchBoneSocketName; // 0x2740
	TArray<float> TurnRotaionMulti; // 0x2748
	char bCanAim : 1; // 0x2758
	FName LoopFireSoundID; // 0x275c
	ETurretFireMode FireMode; // 0x2764
	float ProjectileFireDelayTime; // 0x2768
	FTimerHandle ProjectileFireDelayTimerHandle; // 0x2770
	float ProjectileRange; // 0x2778
	float ChangedGravityProjectileRangeMulti; // 0x277c
	int32_t FireStageMaxNum; // 0x2780
	TArray<float> PerStageVelocityMul; // 0x2788
	char bFireNeedAmmo : 1; // 0x2798
	int32_t MaxAmmo; // 0x279c
	char bReloadMustdReloadMaxAmmo : 1; // 0x27a0
	int32_t PerAmmoSpawnProjectileAmount; // 0x27a4
	int32_t AmmoPiercenessOverride; // 0x27a8
	int32_t CurrentAmmo; // 0x27ac
	char bSpawnProjectile : 1; // 0x27b0
	TArray<FName> ProjectileSocketName; // 0x27b8
	TArray<ASGProjectile*> Projectile; // 0x27c8
	TWeakObjectPtr<ASGProjectile> LastProjectile; // 0x27d8
	USGItem* DefaultAmmoItemTemplate; // 0x27e0
	USGItem* CurrentAmmoItemTemplate; // 0x27e8
	TArray<USGItem*> AllAmmoItemTemplates; // 0x27f0
	char bRecordNetPlayFireLocation : 1; // 0x2800
	FVector NetPlayFireLocation; // 0x2804
	FRotator NetPlayFireRotation; // 0x2810
	char bCanRotateFire : 1; // 0x281c
	float MinStoreFreeVelocityMul; // 0x2820
	float MaxStoreFreeVelocityMul; // 0x2824
	float CurrentStoringTime; // 0x2828
	char bSpawnFireParticle : 1; // 0x282c
	char bCreateParticleWhenPress : 1; // 0x282c
	UParticleSystem* FireParticleSystem; // 0x2830
	char bReloading : 1; // 0x2840
	ETurretFireStatus SiegeFireStatus; // 0x2841
	int32_t CurrentFireStage; // 0x2844
	UAnimMontage* FireMontage; // 0x2850
	UAnimMontage* StopFireMontage; // 0x2858
	UAnimMontage* ReloadMontage; // 0x2860
	UAnimMontage* LeftCharacterFireMontage; // 0x2868
	UAnimMontage* RightCharacterFireMontage; // 0x2870
	UAnimMontage* CharacterFireMontage; // 0x2878
	UAnimMontage* CharacterStopFireMontage; // 0x2880
	UAnimMontage* CharacterReloadMontage; // 0x2888
	char bOverrideProjectileDamageType : 1; // 0x2890
	EDamageType OverrideProjectileDamageType; // 0x2891
	float ShootHalfAngle; // 0x2894
	TArray<FName> FireParentSocket; // 0x2898
	TArray<FName> StartFireSocket; // 0x28a8
	float MaxFollowDistance; // 0x28b8
	char bStoreFreeReloadCanFire : 1; // 0x28bc
	char bShowCrossHair : 1; // 0x28bc
	FText TipsText; // 0x28c0
	float NeedReloadTime; // 0x28d8
	float MinStoreFreeStartTime; // 0x28e0
	float ReloadMontagePlayRate; // 0x28e8
	float BaseMoveSpeed; // 0x28f8
	TArray<float> PeopleNumberSpeed; // 0x2900
	TArray<float> PeopleNumberRotateSpeedMul; // 0x2910
	char FireAllAmmo : 1; // 0x2920
	float FollowProjectileTime; // 0x2924
	float StopFollowProjectileTime; // 0x2928
	char bEnableDurable : 1; // 0x2930
	float HPLossRatioPerFire; // 0x2934
	char bUseStoreFreeReloadCanFire : 1; // 0x2938
	TMap<int32_t, ESiegeSeatFunction> SeatFunction; // 0x2940
	FVector SelfChargeBox; // 0x2990
	FName SelfChargeStartSocketName; // 0x299c
	FName SelfChargeEndSocketName; // 0x29a4
	TArray<AActor*> MeleeAttackIgnoreActors; // 0x29b0
	EDamageType ChargeAttackDamageType; // 0x29c0
	float ChargeDamage; // 0x29c4
	float ChargeCollectionDamage; // 0x29c8
	USGDamageType* ChargeDamageType; // 0x29d0
	TWeakObjectPtr<ABaseCharacter> CurrentAttacker; // 0x29d8
	char bIsBreakDefense : 1; // 0x29f0
	float ProjectileDamageMulti; // 0x29f4
	float CollectionDamageMulti; // 0x29f8
	float FireProjectileVelocityMulti; // 0x29fc
	FName FireParticleSocket; // 0x2a00
	float GeneralSkillDamageMultiAddMulti; // 0x2a08
	float GeneralPerkDamageMultiAddMulti; // 0x2a0c
	float DamageToStructure; // 0x2a10
	char bReloadActionSpawnProjectile : 1; // 0x2a14
	float FireAddSkillExp; // 0x2a18
	float AttackAddSkillExp; // 0x2a1c
	char bShowScaleplate : 1; // 0x2a28
	UCurveFloat* DistanceAttenuationCurve; // 0x2a30
	char bIgnoreSkillPunish : 1; // 0x2a38
	int32_t AttackTenacity; // 0x2a3c
	float OverridePreviewScale; // 0x2a40
	TMap<FName, FBoneLocalTransform> BoneTransformMap; // 0x2a48
	char bCanEquipFlag : 1; // 0x2a98
	USGItem* Flag; // 0x2aa0
	UMaterialInstanceDynamic* DMI_FlagImage; // 0x2ab0
	UTextureRenderTarget2D* RT_FlagImage; // 0x2ab8
	FString FlagImageString; // 0x2ac8
};

struct UPhysicalMaterialMask : UObject {
	int32_t UVChannelIndex; // 0x28
	TextureAddress AddressX; // 0x2c
	TextureAddress AddressY; // 0x2d
};

struct UAISense_Hearing : UAISense {
	TArray<FAINoiseEvent> NoiseEvents; // 0x80
	float SpeedOfSoundSq; // 0x90
};

struct UUI_NewsNotice : UUserWidget {
	FString KeyName; // 0x268
	int32_t NewsCount; // 0x278
	char bPopIn : 1; // 0x27c
	UTextBlock* TbContent; // 0x280
	UWidgetAnimation* PopInAnim; // 0x288
};

struct UMovieSceneMediaTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> MediaSections; // 0x80
};

struct UClothConfigNv : UClothConfigCommon {
	EClothingWindMethodNv ClothingWindMethod; // 0x28
	FClothConstraintSetupNv VerticalConstraint; // 0x2c
	FClothConstraintSetupNv HorizontalConstraint; // 0x3c
	FClothConstraintSetupNv BendConstraint; // 0x4c
	FClothConstraintSetupNv ShearConstraint; // 0x5c
	float SelfCollisionRadius; // 0x6c
	float SelfCollisionStiffness; // 0x70
	float SelfCollisionCullScale; // 0x74
	FVector Damping; // 0x78
	float Friction; // 0x84
	float WindDragCoefficient; // 0x88
	float WindLiftCoefficient; // 0x8c
	FVector LinearDrag; // 0x90
	FVector AngularDrag; // 0x9c
	FVector LinearInertiaScale; // 0xa8
	FVector AngularInertiaScale; // 0xb4
	FVector CentrifugalInertiaScale; // 0xc0
	float SolverFrequency; // 0xcc
	float StiffnessFrequency; // 0xd0
	float GravityScale; // 0xd4
	FVector GravityOverride; // 0xd8
	bool bUseGravityOverride; // 0xe4
	float TetherStiffness; // 0xe8
	float TetherLimit; // 0xec
	float CollisionThickness; // 0xf0
	float AnimDriveSpringStiffness; // 0xf4
	float AnimDriveDamperStiffness; // 0xf8
	EClothingWindMethod_Legacy WindMethod; // 0xfc
	FClothConstraintSetup_Legacy VerticalConstraintConfig; // 0x100
	FClothConstraintSetup_Legacy HorizontalConstraintConfig; // 0x110
	FClothConstraintSetup_Legacy BendConstraintConfig; // 0x120
	FClothConstraintSetup_Legacy ShearConstraintConfig; // 0x130
};

struct APlanarReflection : ASceneCapture {
	UPlanarReflectionComponent* PlanarReflectionComponent; // 0x320
	bool bShowPreviewPlane; // 0x328
};

struct UNiagaraDataInterfaceAudioSubmix : UNiagaraDataInterface {
	USoundSubmix* Submix; // 0x38
};

struct UMovieSceneEventTriggerSection : UMovieSceneEventSectionBase {
	FMovieSceneEventChannel EventChannel; // 0xf0
};

struct UAudioComponent : USceneComponent {
	USoundBase* Sound; // 0x208
	TArray<FAudioComponentParam> InstanceParameters; // 0x210
	USoundClass* SoundClassOverride; // 0x220
	char bAutoDestroy : 1; // 0x228
	char bStopWhenOwnerDestroyed : 1; // 0x228
	char bShouldRemainActiveIfDropped : 1; // 0x228
	char bAllowSpatialization : 1; // 0x228
	char bOverrideAttenuation : 1; // 0x228
	char bOverrideSubtitlePriority : 1; // 0x228
	char bIsUISound : 1; // 0x228
	char bEnableLowPassFilter : 1; // 0x228
	char bOverridePriority : 1; // 0x229
	char bSuppressSubtitles : 1; // 0x229
	char bAutoManageAttachment : 1; // 0x22a
	FName AudioComponentUserID; // 0x230
	float PitchModulationMin; // 0x238
	float PitchModulationMax; // 0x23c
	float VolumeModulationMin; // 0x240
	float VolumeModulationMax; // 0x244
	float VolumeMultiplier; // 0x248
	int32_t EnvelopeFollowerAttackTime; // 0x24c
	int32_t EnvelopeFollowerReleaseTime; // 0x250
	float Priority; // 0x254
	float SubtitlePriority; // 0x258
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x260
	float PitchMultiplier; // 0x268
	float LowPassFilterFrequency; // 0x26c
	USoundAttenuation* AttenuationSettings; // 0x278
	FSoundAttenuationSettings AttenuationOverrides; // 0x280
	USoundConcurrency* ConcurrencySettings; // 0x620
	TSet<USoundConcurrency*> ConcurrencySet; // 0x628
	EAttachmentRule AutoAttachLocationRule; // 0x68c
	EAttachmentRule AutoAttachRotationRule; // 0x68d
	EAttachmentRule AutoAttachScaleRule; // 0x68e
	FSoundModulationDefaultRoutingSettings ModulationRouting; // 0x690
	FMulticastInlineDelegate OnAudioPlayStateChanged; // 0x6d8
	FMulticastInlineDelegate OnAudioVirtualizationChanged; // 0x700
	FMulticastInlineDelegate OnAudioFinished; // 0x728
	FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x750
	FMulticastInlineDelegate OnAudioSingleEnvelopeValue; // 0x778
	FMulticastInlineDelegate OnAudioMultiEnvelopeValue; // 0x7a0
	FDelegate OnQueueSubtitles; // 0x7c8
	TWeakObjectPtr<USceneComponent> AutoAttachParent; // 0x7d8
	FName AutoAttachSocketName; // 0x7e0
};

struct UPawnAction_Repeat : UPawnAction {
	UPawnAction* ActionToRepeat; // 0x98
	UPawnAction* RecentActionCopy; // 0xa0
	EPawnActionFailHandling ChildFailureHandlingMode; // 0xa8
};

struct ASGStructureAmmoBox : ASGStructureFunctionTable {
	float ValidDistance; // 0xf80
	char bCanAmmoStructure : 1; // 0xf84
	int32_t CheckStructureInterval; // 0xf88
	char bCanRepairStructure : 1; // 0xf8c
	int32_t CheckRepairInterval; // 0xf90
	char bCanFoodStructure : 1; // 0xf94
	int32_t CheckFoodInterval; // 0xf98
};

struct UTattooLayerRadioView : UUI_RadioButtonView {
	UTattooAddLayerButton* TattooAddLayerButtonTemplate; // 0x2f0
	UTattooAddLayerButton* TattooAddLayerButton; // 0x2f8
};

struct UUI_MainMail : USGUI {
	UVerticalBox* VerticalBox_MailList; // 0x2d8
	UButton* btn_last_page; // 0x2e0
	UButton* btn_next_page; // 0x2e8
	UTextBlock* Text_page; // 0x2f0
	UButton* btn_delallread; // 0x2f8
	UButton* btn_getallattach; // 0x300
	UUI_MailDetails* MailDetails; // 0x308
	UUI_OneMail* OneMailTemplate; // 0x310
	int8_t PageSize; // 0x318
	FMargin OneMailSlotPadding; // 0x31c
	FSlateChildSize OneMailSlotSize; // 0x32c
};

struct UNiagaraPreviewAxis_InterpParamBase : UNiagaraPreviewAxis {
	FName Param; // 0x28
	int32_t Count; // 0x30
};

struct UNetDriver : UObject {
	FString NetConnectionClassName; // 0x30
	FString ReplicationDriverClassName; // 0x40
	int32_t MaxDownloadSize; // 0x50
	char bClampListenServerTickRate : 1; // 0x54
	int32_t NetServerMaxTickRate; // 0x58
	int32_t MaxNetTickRate; // 0x5c
	int32_t MaxInternetClientRate; // 0x60
	int32_t MaxClientRate; // 0x64
	float ServerTravelPause; // 0x68
	float SpawnPrioritySeconds; // 0x6c
	float RelevantTimeout; // 0x70
	float KeepAliveTime; // 0x74
	float InitialConnectTimeout; // 0x78
	float ConnectionTimeout; // 0x7c
	float TimeoutMultiplierForUnoptimizedBuilds; // 0x80
	bool bNoTimeouts; // 0x84
	bool bNeverApplyNetworkEmulationSettings; // 0x85
	UNetConnection* ServerConnection; // 0x88
	TArray<UNetConnection*> ClientConnections; // 0x90
	int32_t RecentlyDisconnectedTrackingTime; // 0x100
	UWorld* World; // 0x140
	UPackage* WorldPackage; // 0x148
	UObject* NetConnectionClass; // 0x170
	UObject* ReplicationDriverClass; // 0x178
	FName NetDriverName; // 0x190
	TArray<FChannelDefinition> ChannelDefinitions; // 0x198
	TMap<FName, FChannelDefinition> ChannelDefinitionMap; // 0x1a8
	TArray<UChannel*> ActorChannelPool; // 0x1f8
	float Time; // 0x210
	UReplicationDriver* ReplicationDriver; // 0x700
};

struct USGGameDataGuild : UObject {
	FText GuildMemberLevelText[0x6]; // 0x28
	FText GuildOperateAuthTypeText[0x1a]; // 0xb8
	FText GuildOperateAuthTipsText[0x1a]; // 0x328
	FText GuildLanguageText[0x4]; // 0x598
	FText GuildStructureProssessAuthTypeText[0x3]; // 0x5f8
	UMaterialInstance* ImageMaterialInst; // 0x640
	UDataTable* GuildImageLayerTable[0x7]; // 0x648
	UDataTable* GuildImageColorTable; // 0x680
	UDataTable* GuildKPIItemsTable; // 0x688
	UDataTable* GuildLanguagesTable; // 0x6a0
	UDataTable* GuildShopItemsTable; // 0x8b8
	TArray<FGuildShopItemData> ShopItems; // 0x8d0
	UDataTable* GuildStructureShowTable; // 0x8e0
	TArray<FGuildAwardItem> SignItems; // 0x8f8
	TArray<FGuildOnlineAwardData> OnlineItems; // 0x908
	int32_t MaxDailyQuests; // 0x918
	FText CreateGuildSelfTips[0x9]; // 0x920
	FText RenameGuildSelfTips[0x7]; // 0x9f8
	FText RenameGuildMemberTip; // 0xaa0
	FText ApplyJoinGuildSelfTips[0x14]; // 0xab8
	FText AgreeJoinGuildSelfTips[0x11]; // 0xc98
	FText AgreeJoinGuildTargetTip; // 0xe30
	FText RefuseJoinGuildSelfTips[0x11]; // 0xe48
	FText RefuseJoinGuildtargetTip; // 0xfe0
	FText KickOutGuildSelfTips[0x6]; // 0xff8
	FText KickOutGuildTargetTip; // 0x1088
	FText LeaveGuildSelfTips[0x4]; // 0x10a0
	FText LeaveGuildMemberTip; // 0x1100
	FText ChangeGuildOwnerSelfTips[0x5]; // 0x1118
	FText ChangeGuildOwnerMemberTip; // 0x1190
	FText ChangeGuildTitleSelfTips[0x6]; // 0x11a8
	FText ChangeGuildTitleTargetTip; // 0x1238
	FText ChangeGuildTitleMemberTip; // 0x1250
	FText FillUpgradeExpSelfTips[0x6]; // 0x1268
	FText FillUpgradeExpMemberTip; // 0x12f8
	FText SetBillboardSelfTips[0x6]; // 0x1310
	FText SetOuterBillboardSelfTips[0x6]; // 0x13a0
	FText SetBillboardMemberTip; // 0x1430
	FText SetOuterBillboardMemberTip; // 0x1448
	FText SetJoinConditionSelfTips[0x4]; // 0x1460
	FText SetAuthoritySelfTips[0x7]; // 0x14c0
	FText SetAuthorityMemberTip; // 0x1568
	FText SetCustomGroupSelfTips[0x7]; // 0x1580
	FText SetImageSelfTips[0x6]; // 0x1628
	FText SetImageMemberTips; // 0x16b8
	FText SetJunSelfTips[0x4]; // 0x16d0
	FText SetLanguageSelfTips[0x4]; // 0x1730
	FText UpgradeSkillSelfTips[0x8]; // 0x1790
	FText UpgradeSkillMemberTip; // 0x1850
	FText ActiveSkillSelfTips[0x7]; // 0x1868
	FText ActiveSkillMemberTip; // 0x1910
	FText LearnCraftPerkSelfTips[0x8]; // 0x1928
	FText LearnCraftPerkMemberTip; // 0x19e8
	FText AddActivityPointSelfTips[0x4]; // 0x1a00
	FText AddSilverSelfTips[0x3]; // 0x1a60
	FText ExtractSilverSelfTips[0x5]; // 0x1aa8
	FText AutoChangeOwnerSelfTips[0x6]; // 0x1b20
	FText PlayerOnlineTips; // 0x1bb0
	FText PlayerOfflineTips; // 0x1bc8
	FText AutoChangeOwnerMemberTip; // 0x1be0
	FText SetBaseCampSelfTips[0x5]; // 0x1bf8
	int32_t GuildAuthDefaultValue[0x1a]; // 0x1c70
	int32_t GuildAuthCD[0x1a]; // 0x1cd8
	int32_t MaxGuildNameLength; // 0x1d40
	int32_t MaxGuildGroupNameLength; // 0x1d44
	uint32_t MaxApplyCount; // 0x1d48
	uint32_t MaxAllianceInviteCount; // 0x1d4c
	uint32_t ActiveApplyHours; // 0x1d50
	uint32_t OwnerOfflineHours; // 0x1d54
	int32_t MaxLevel; // 0x1d58
	int32_t MaxBillboardLength; // 0x1d5c
	TMap<int32_t, FGuildLevelConfig> GuildLevelConfigMap; // 0x1d60
	uint32_t LeaveAllianceCoolTime; // 0x1db0
	int32_t InitWeiWang; // 0x1db4
	int32_t MaxCustomGroupCount; // 0x1db8
	int32_t MaxCustomGroupNameLength; // 0x1dbc
	FGuildSkillConfig GuildSkillConfigs[0x33]; // 0x1dc0
	UCurveTable* GuildSkillConsumeActivityPointTable; // 0x2420
	UCurveTable* GuildSkillConsumeSilverTable; // 0x2428
	UCurveTable* GuildSkillDataTable; // 0x2430
	UDataTable* GuildSkillRequireDataTable; // 0x2438
	int32_t ActiveSkillMaxHours; // 0x24a0
	int32_t ActiveSkillActivityPoint; // 0x24a4
	int32_t ActiveSkillSilver; // 0x24a8
	int32_t ActivityToGuildDayLimit; // 0x24ac
	int32_t ActivityToGongxunXunRatio; // 0x24b0
	int32_t DonationActivityPoint; // 0x24b4
	float DonationActivityPointRatio; // 0x24b8
	int32_t MinServerLevel; // 0x24bc
	int32_t ClearGongXunWeek; // 0x24c0
	int32_t ClearGongXunHour; // 0x24c4
	int32_t MaxApplyVerfiyLen; // 0x24c8
	int32_t MaxInviteVerfiyLen; // 0x24cc
	int32_t LeaveGuildCDMinutes; // 0x24d0
	int32_t TransGuildCDMinutes; // 0x24d4
	int32_t MaxGuildStoreNoticeLength; // 0x24d8
	int32_t MaxActivityPointPerDay; // 0x24dc
	int32_t MaxImageLength; // 0x24e0
	float InviteOutTime; // 0x24e4
	int32_t GuildInValidMinutes; // 0x24e8
	int32_t GuildSkillRequireIndexMul; // 0x24ec
	UUI_ApplyGuildConfirm* AcceptConfirmUI; // 0x24f0
	UGuildImageMaterialSerializer* GuildImageMaterialSerializerClass; // 0x24f8
	UGuildImageMaterialSerializer* GuildImageMaterialSerializer; // 0x2500
};

struct UHuangLiEffectsView : UUserWidget {
	UTextBlock* TitleText; // 0x260
	UUniformGridPanel* SlotsUniformGridPanel; // 0x268
	UHuangLiEffectSlot* EffectSlotClass; // 0x270
	int32_t CountsPerRow; // 0x278
};

struct USoundNodeBranch : USoundNode {
	FName BoolParameterName; // 0x48
};

struct UMovieSceneCameraShakeSourceTriggerTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> Sections; // 0x80
};

struct UMiniMapWidgetFilter : UUserWidget {
	FText FilterName; // 0x260
	TArray<FName> FilterWidgetNames; // 0x278
	UCheckBox* CbFilter; // 0x298
	UTextBlock* TbFilterName; // 0x2a0
};

struct USharpPullKelvinletBrushOpProps : UBaseKelvinletBrushOpProps {
	float Falloff; // 0x70
	float Depth; // 0x74
};

struct UBTTask_MoveTo : UBTTask_BlackboardBase {
	float AcceptableRadius; // 0x98
	UNavigationQueryFilter* FilterClass; // 0xa0
	float ObservedBlackboardValueTolerance; // 0xa8
	char bObserveBlackboardValue : 1; // 0xac
	char bAllowStrafe : 1; // 0xac
	char bAllowPartialPath : 1; // 0xac
	char bTrackMovingGoal : 1; // 0xac
	char bProjectGoalLocation : 1; // 0xac
	char bIsStopOnAbort : 1; // 0xb0
	char bIsStopOnFinish : 1; // 0xb0
	char bReachTestIncludesAgentRadius : 1; // 0xb4
	char bReachTestIncludesGoalRadius : 1; // 0xb4
	char bStopOnOverlap : 1; // 0xb4
	char bStopOnOverlapNeedsUpdate : 1; // 0xb4
};

struct UAnimalFarmPanel : UUserWidget {
	UAnimalFarmDropSlot* FoodSlotClass; // 0x260
	UAnimalFarmDropSlot* DropSlotClass; // 0x268
	int32_t FoodPageMaxNum; // 0x270
	int32_t DropPerRowCount; // 0x274
	int32_t DropPageMaxNum; // 0x278
	UAnimalFarmSlot* SlotTotalNum; // 0x280
	UAnimalFarmSlot* SlotAverageLevelNum; // 0x288
	UAnimalFarmSlot* SlotFemaleNum; // 0x290
	UAnimalFarmSlot* SlotMaleNum; // 0x298
	UAnimalFarmSlot* SlotBabyNum; // 0x2a0
	UAnimalFarmSlot* SlotBirthNum; // 0x2a8
	UAnimalFarmSlot* SlotDeathNum; // 0x2b0
	UAnimalFarmSlot* SlotMood; // 0x2b8
	UAnimalFarmSlot* SlotConsumeFoodSpeed; // 0x2c0
	UAnimalFarmSlot* SlotFood; // 0x2c8
	UAnimalFarmSlot* SlotAddHealthPerSecond; // 0x2d0
	UAnimalFarmSlot* SlotHealth; // 0x2d8
	UButton* SetMaxNumBtn; // 0x2e0
	UButton* AddFoodBtn; // 0x2e8
	UButton* LastFoodPageBtn; // 0x2f0
	UTextBlock* CurFoodPageText; // 0x2f8
	UTextBlock* MaxFoodPageText; // 0x300
	UButton* NextFoodPageBtn; // 0x308
	UHorizontalBox* FoodHorizontalBox; // 0x310
	UButton* LastLikeFoodPageBtn; // 0x318
	UTextBlock* CurLikeFoodPageText; // 0x320
	UTextBlock* MaxLikeFoodPageText; // 0x328
	UButton* NextLikeFoodPageBtn; // 0x330
	UHorizontalBox* LikeFoodHorizontalBox; // 0x338
	UTextBlock* DropCountText; // 0x340
	UButton* LastDropPageBtn; // 0x348
	UTextBlock* CurDropPageText; // 0x350
	UTextBlock* MaxDropPageText; // 0x358
	UButton* NextDropPageBtn; // 0x360
	UUniformGridPanel* DropGridPanel; // 0x368
	UButton* TakeDropsBtn; // 0x370
	UCanvasPanel* SetMaxNumPanel; // 0x378
	UButton* ReduceMaxNumBtn; // 0x380
	USpinBox* SetMaxNumSpinBox; // 0x388
	UButton* AddMaxNumBtn; // 0x390
	USlider* SetMaxNumSlider; // 0x398
	UButton* AcceptSetMaxNumBtn; // 0x3a0
	UButton* CancelSetMaxNumBtn; // 0x3a8
};

struct UUI_GeneralLegend : USGUI {
	float OverridePreviewWidgetDistance; // 0x2d8
	FVector OverridePreviewWidgetMeshLocationOffset; // 0x2dc
	FRotator OverridePreviewWidgetMeshRotation; // 0x2e8
	FRotator OverridePreviewWidgetCameraRotation; // 0x2f4
	char bShouldPlayDefaultAnim : 1; // 0x300
	UAnimMontage* OverridePreviewWidgetDefaultAnim; // 0x308
	FText WujiangActivedText; // 0x310
	FText WujiangUnactivedText; // 0x328
	FText WujiangNameUnknowText; // 0x340
	FText WujiangFeishengText; // 0x358
	FText WujiangJiebangText; // 0x370
	FLinearColor ActiveTextColor; // 0x388
	FLinearColor UnactiveTextColor; // 0x398
	TArray<FName> EquipCanvasName; // 0x3a8
	TArray<FName> ShortCutCanvasName; // 0x3b8
	UGeneralInfoSlot* GeneralInfoSlotTemplate; // 0x3c8
	ASGCharacter* PreviewCharTemplate; // 0x3d0
	char bChangeMesh : 1; // 0x3e0
	char bUseDelay : 1; // 0x3e0
	ASGCharacter* PreviewCharacter; // 0x400
	ASGWeapon* CurWeapon; // 0x408
	FTimerHandle ShowDelayTimer; // 0x418
	UCanvasPanel* GeneralPanel; // 0x420
	UCanvasPanel* AssignPanel; // 0x428
	UCanvasPanel* ActivedDescPanel; // 0x430
	UButton* LeftButton; // 0x438
	UButton* RightButton; // 0x440
	UButton* AssignButton; // 0x448
	UButton* CloseAssignPanelButton; // 0x450
	UButton* CloseButton; // 0x458
	UTextBlock* AssignText; // 0x460
	UPreviewSceneWidget* PreviewWidget; // 0x468
	TArray<USimpleItemSlot*> EquipSlotList; // 0x470
	TArray<USimpleItemSlot*> ShortCutSlotList; // 0x480
	UTextBlock* GeneralTitleText; // 0x490
	UTextBlock* GeneralNameText; // 0x498
	UTextBlock* ActivedText; // 0x4a0
	UTextBlock* GeneralDescText; // 0x4a8
	UTextBlock* FuncDescText; // 0x4b0
	UTextBlock* AssignmentDescText; // 0x4b8
	UUniformGridPanel* UGPGenerals; // 0x4c0
};

struct UUVProjectionOperatorFactory : UObject {
	UUVProjectionTool* Tool; // 0x30
};

struct ASGStructureInteractiveVolume : AVolume {
	ASGStructure* StaticLinkStructure; // 0x348
	TArray<TWeakObjectPtr<ASGPlayerCharacter>> VolumePlayers; // 0x350
	FTimerHandle TriggerHandle; // 0x360
};

struct UInterpTrackInstEvent : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct UScaleBox : UContentWidget {
	EStretch Stretch; // 0x120
	EStretchDirection StretchDirection; // 0x121
	float UserSpecifiedScale; // 0x124
	bool IgnoreInheritedScale; // 0x128
};

struct USpinBox : UWidget {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	FSpinBoxStyle WidgetStyle; // 0x120
	USlateWidgetStyleAsset* Style; // 0x408
	int32_t MinFractionalDigits; // 0x410
	int32_t MaxFractionalDigits; // 0x414
	bool bAlwaysUsesDeltaSnap; // 0x418
	float Delta; // 0x41c
	float SliderExponent; // 0x420
	FSlateFontInfo Font; // 0x428
	ETextJustify Justification; // 0x480
	float MinDesiredWidth; // 0x484
	bool ClearKeyboardFocusOnCommit; // 0x488
	bool SelectAllTextOnCommit; // 0x489
	FSlateColor ForegroundColor; // 0x490
	FMulticastInlineDelegate OnValueChanged; // 0x4b8
	FMulticastInlineDelegate OnValueCommitted; // 0x4c8
	FMulticastInlineDelegate OnBeginSliderMovement; // 0x4d8
	FMulticastInlineDelegate OnEndSliderMovement; // 0x4e8
	char bOverride_MinValue : 1; // 0x4f8
	char bOverride_MaxValue : 1; // 0x4f8
	char bOverride_MinSliderValue : 1; // 0x4f8
	char bOverride_MaxSliderValue : 1; // 0x4f8
	float MinValue; // 0x4fc
	float MaxValue; // 0x500
	float MinSliderValue; // 0x504
	float MaxSliderValue; // 0x508
};

struct UImplicitOffsetProperties : UInteractiveToolPropertySet {
	float Smoothness; // 0x60
	bool bPreserveUVs; // 0x64
};

struct URiverGenerator : UWaterBodyGenerator {
	TArray<USplineMeshComponent*> SplineMeshComponents; // 0x28
};

struct UUI_ChatSiftBtn : UUI_PicBtn {
	EMsgSiftType SiftType; // 0x400
	TSoftObjectPtr<UTexture2D> HighlightIcon; // 0x408
};

struct UHorizonImage : UImage {
	FBox2D UVRegion; // 0x218
};

struct ASG_AnimalsCharacter : ABaseCharacter {
	float BaseChargeVelocity; // 0x2110
	float ChargeVelocityModify; // 0x2114
	float StarvingHungerThreshold; // 0x2118
	float Operate; // 0x211c
	float OperateMultiply; // 0x2120
	float MaxHealthConfig; // 0x2124
	float MaxHealthAdd; // 0x2128
	float MaxHealth; // 0x212c
	float MaxHealthMulAdd; // 0x2130
	float Health; // 0x2134
	float HealthRecover; // 0x2138
	float HealthRecoverConfig; // 0x213c
	float HealthRecoverAdd; // 0x2140
	float HealthRecoverRandom; // 0x2144
	float HealthRecoverMulAdd; // 0x2148
	float HealthToHPConsume; // 0x214c
	float HealthToStunConsume; // 0x2150
	float HealthToHungerConsume; // 0x2154
	float InfluenceHealthRecoverSP; // 0x2158
	float HealthToSPConsume; // 0x215c
	float InfluenceHealthRecoverWeight; // 0x2160
	float HealthToWeightConsume; // 0x2164
	TMap<float, float> HealthInfluencePropertyMul; // 0x2168
	float LevelNameHUDShowHealthMaxValue; // 0x21b8
	float HealthConsumeMulAdd; // 0x21bc
	TMap<float, float> MaxTameMulAddByQualityCorrection; // 0x21c0
	char bIsInitialized : 1; // 0x2210
	FAnimalsAnimsConfig Struct_AnimalsAnims; // 0x2218
	float BaseAccelerationMul; // 0x2990
	float BaseRotationMul; // 0x2994
	float BaseRotationMulInterpSpeedMul; // 0x2998
	float BaseSpeedMul; // 0x299c
	float PlatformRotationMulAdd; // 0x29a0
	float AnimalBuffSpeedMulAdd; // 0x29a4
	int32_t bEnableHorseFastStop; // 0x29a8
	int32_t bEnableHorseFastTurn; // 0x29ac
	float DoubleClickMaxTime; // 0x29e0
	float PressedDoubleClickMaxTime; // 0x29e4
	char bCustomCanMoving : 1; // 0x29e8
	char bUseRootMotionTurnInPlace : 1; // 0x29e8
	float UpdateMovingGaitModeTime; // 0x29ec
	float TransitionBackwarkSpeed; // 0x29f0
	char bIsAutoMoving : 1; // 0x29f4
	char bIsAccelerationCooling : 1; // 0x29f4
	EAnimalsMovingGaitType Enum_AnimalsMovingGaitType; // 0x29f5
	EAnimalsMovingGaitType Enum_PlayerAnimalsMovingGaitType; // 0x29f6
	FTimerHandle UpdateAcclerationMovingGaitModeTimer; // 0x29f8
	FTimerHandle UpdateBrakingMovingGaitModeTimer; // 0x2a00
	FTimerHandle UpdateMovingGaitModeCoolingTimer; // 0x2a08
	float RotationMultiply; // 0x2a10
	float RotationInterpSpeed; // 0x2a14
	float UpdateRotationMultiplyInterpSpeed; // 0x2a18
	float UpdateRotationMultiplyInterpSpeed_InPlace; // 0x2a1c
	float CurrentRotationMultiply; // 0x2a20
	UAnimMontage* TurnInPlaceMontage; // 0x2a28
	float ExtraAccelerationAdd; // 0x2a30
	float ExtraRotationMultiplyAdd; // 0x2a34
	float ExtraRotationMulInterpSpeedAdd; // 0x2a38
	float TurnInPlaceAnglePrecision; // 0x2a3c
	float RideTameTurnInPlaceAnglePrecision; // 0x2a40
	char bUseNewCalcRotation : 1; // 0x2a44
	FAnimalsNeighConfig Struct_AnimalsNeighConfig; // 0x2a48
	UAnimMontage* NeighMontage; // 0x2aa0
	float AttackTurnDesiredRotationYaw; // 0x2aa8
	TArray<FAnimalsBoneDamageAdjusterConfig> AnimalBoneDamageAdjusters; // 0x2ab0
	float BaseChargeDamage; // 0x2ac0
	USGDamageType* ChargeDamageType; // 0x2ac8
	float ForceToStopDuration; // 0x2ad0
	char bCanForceToStop : 1; // 0x2ae0
	TArray<FAnimalsChargeShieldData> ChargeDamageShieldList; // 0x2ae8
	float ServerCheckChargeDamageDistance; // 0x2af8
	FVector CurrentDestLoc; // 0x2afc
	FVector CurrentMoveToDestLoc; // 0x2b08
	EAnimalsStanceType Enum_DesiredAnimalsStanceType; // 0x2b14
	char bIsIdleBehavior : 1; // 0x2b15
	FHitResult NavWalkingFindFloorHit; // 0x2b18
	float LasNavWalkingFindFloorTime; // 0x2ba4
	float PlayHitMontageChance; // 0x2ba8
	TArray<FAIAttackInfo> AIAttackInfos; // 0x2bb0
	FName BeAIAttackSocketName; // 0x2bc0
	TWeakObjectPtr<UBaseAIAttackState> CurAIAttackState; // 0x2bc8
	int32_t CurAttackInfoIndex; // 0x2bd0
	TWeakObjectPtr<AActor> CurrentEnemy; // 0x2bd4
	FName ScareSoundID; // 0x2bdc
	char bCanAttackTurnAround : 1; // 0x2be4
	double LastEndAttackStateTime; // 0x2be8
	float LastRandomAttackInfoTime; // 0x2bf0
	char bShouldRun : 1; // 0x2bf4
	char bForbidMove : 1; // 0x2bf4
	char bForbidRotation : 1; // 0x2bf4
	TArray<FFeedFoodEntry> FeedFoods; // 0x2bf8
	UAnimMontage* FeedAnimMontage; // 0x2c08
	TMap<EAnimalQualityType, float> RideTameFeedTimeMul; // 0x2c10
	float FeedAddToTamePerSecond; // 0x2c60
	char bIsFeeding : 1; // 0x2c64
	char bCheckSameOwnerID : 1; // 0x2c64
	char bCanRide : 1; // 0x2c64
	char bRiderRequireSaddle : 1; // 0x2c64
	char bEnableLineTraceForRide : 1; // 0x2c64
	char bCanOpenInventory : 1; // 0x2c64
	char bCanRideTame : 1; // 0x2c64
	TMap<EAnimalQualityType, float> RideTameFailedCDTime; // 0x2c68
	float BaseAddTamePerSecond; // 0x2cb8
	TMap<EAnimalQualityType, FRideTameRequireItemData> RideTameRequiredEquipItems; // 0x2cc0
	float BaseAddTamePerSecondInStructure; // 0x2d10
	float BaseAddTamePerSecondInStructureTrainer; // 0x2d14
	float TameTimeToHealthBaseMul; // 0x2d18
	float TameTimeToHealthMul; // 0x2d1c
	float MinTameTimeToHealthMul; // 0x2d20
	float MaxTameTimeToHealthMul; // 0x2d24
	float DefaultHealthTameSuccess; // 0x2d28
	float MaxRideTameTime; // 0x2d2c
	char bIsRideTaming : 1; // 0x2d30
	char bIsStartedTaming : 1; // 0x2d30
	float RealTamingTime; // 0x2d34
	char bIsWithinRideTameCDTime : 1; // 0x2d38
	double LastTamingTime; // 0x2d40
	float CurrentRunaway; // 0x2d48
	float MaxRunaway; // 0x2d4c
	float StruggleDurationTimeMin; // 0x2d50
	float StruggleDurationTimeMax; // 0x2d54
	float TotalStruggleDurationTimeMax; // 0x2d58
	float StruggleCDMin; // 0x2d5c
	float StruggleCDMax; // 0x2d60
	float BaseAddRunawayPerSecond; // 0x2d64
	float AddRunawaySpeedPerFrequency; // 0x2d68
	int32_t RunawaySpeedAddFrequency; // 0x2d6c
	float ReduceRunawayPerSecond; // 0x2d70
	float ConsumeRiderSPPerSecond; // 0x2d74
	float AddTamePressedPerSecond; // 0x2d78
	float ConsumeRiderItemDurablePerKeyPress; // 0x2d7c
	float StruggleConsumeRiderItemDurablePerSecond; // 0x2d80
	float ConsumeRiderItemDurablePerSecond; // 0x2d84
	float ConsumeRiderItemDurableFailedTame; // 0x2d88
	float ConsumeRiderItemDurableCancelTame; // 0x2d8c
	UAnimMontage* AnimalStruggleMontage; // 0x2d90
	UAnimMontage* RiderStruggleMontage; // 0x2d98
	float RandomRequirePlayerPressedKeyIntervalMin; // 0x2da0
	float RandomRequirePlayerPressedKeyIntervalMax; // 0x2da4
	float WaitStrugglingInterval; // 0x2da8
	float AddSkillExpByTame; // 0x2dac
	float AddSkillByTameExpMul; // 0x2db0
	double EndStruggleTime; // 0x2db8
	float CurrentStruggleNum; // 0x2dc0
	float StartWaitStrugglingTime; // 0x2dc4
	char bIsWaitStruggling : 1; // 0x2dc8
	char bIsStruggling : 1; // 0x2dc8
	char RequirePlayerLeftMousePressed : 1; // 0x2dc8
	float NextRandomRequirePlayerPressedKeyTime; // 0x2dcc
	char bCanAnger : 1; // 0x2dd0
	float AddAngerValuePerSecond; // 0x2dd4
	float ReduceAngerValuePerSecond; // 0x2dd8
	float AddAngerValuePerKeyPress; // 0x2ddc
	float AddAngerValueBlocked; // 0x2de0
	float ReduceAngerValueEndStruggle; // 0x2de4
	TMap<EAnimalQualityType, float> MaxAngerValue; // 0x2de8
	TMap<EAnimalQualityType, float> AngerValueTriggerAnger; // 0x2e38
	TMap<EAnimalQualityType, float> AngerValueTriggerStruggle; // 0x2e88
	float CurAngerValue; // 0x2ed8
	float LastBlockedAddAngerTime; // 0x2edc
	float BaseInfluenceTurnByKeyPress; // 0x2ee0
	float InfluenceTurnIncreaseByKeyPress; // 0x2ee4
	UAnimMontage* StartRideTameMontage; // 0x2ee8
	char bShowTameDebug : 1; // 0x2ef0
	FVector RideTameDesiredLocation; // 0x2ef4
	float LastAddTameValue; // 0x2f00
	FTimerHandle WaitNeighFinishTimer; // 0x2f08
	char bAutoForceTame : 1; // 0x2f10
	FTimerHandle AutoForceTameTimer; // 0x2f18
	TMap<int32_t, float> FavoriteFoodAddMul; // 0x2f20
	float FoodTamingAddExpValue; // 0x2f70
	float FoodAddHungerMulAdd; // 0x2f74
	TWeakObjectPtr<ASGStructureAnimalTameCage> BindTameCage; // 0x2f78
	char bAllowRandomWander : 1; // 0x2f80
	char bOnlyOwnerAllowRide : 1; // 0x2f80
	char bOnlyMateWithSameOwner : 1; // 0x2f80
	char bAllowReceiveCall : 1; // 0x2f80
	char bOnlyOwnerAllowCall : 1; // 0x2f80
	char bOnlyOwnerAllowOpenInventory : 1; // 0x2f80
	FAnimalsAI_Config Struct_AnimalsAI_Config; // 0x2f84
	char bIsAutoMove : 1; // 0x2fac
	char bAttackTurnAround : 1; // 0x2fac
	TWeakObjectPtr<ABaseCharacter> TamedFollowActor; // 0x2fb0
	EAnimalsStanceType Enum_AnimalsStanceType; // 0x2fb8
	EAnimalsStanceType Enum_AnimalsDeadStanceType; // 0x2fb9
	UAnimMontage* BehaviorMontage; // 0x2fc0
	FAnimalsBehavior Struct_PreAnimalsBehavior; // 0x2fc8
	TMap<EAnimalsBehaviorType, FAnimalsCustomBehavior> TMap_OldBehaviorTransitionMontages; // 0x2fd8
	EAnimalsBehaviorType Enum_AnimalsBehaviorType; // 0x3028
	EAnimalsBehaviorType Enum_DesiredAnimalsBehaviorType; // 0x3029
	FVector FloatingHUDIconOffset; // 0x302c
	char bDisplayStatusIcon : 1; // 0x3038
	char bCostSPByGaitType : 1; // 0x3038
	float NeedDecelerationSP; // 0x303c
	EAnimalsMovingGaitType Enum_GaitTypeWhenTried; // 0x3040
	float AllowAccelerationSP; // 0x3044
	float AnimalCostSPMulAdd; // 0x3048
	float SatietyRatio; // 0x304c
	float HPRecoverMulWhileSatiety; // 0x3050
	float HealthRecoverMulWhileSatiety; // 0x3054
	float HungerToHealthConsume; // 0x3058
	float MaxHungerMin; // 0x305c
	float AllowAccelerationHP; // 0x3060
	EAnimalsMovingGaitType Enum_GaitTypeWhenInjured; // 0x3064
	USGToolTipsAnimal* AnimalToolTipWidgetOverride; // 0x3068
	USGToolTipsAnimal* AnimalToolTip; // 0x3070
	char bUseAttributeCorrection : 1; // 0x3078
	float AttributeCorrectionMinMul; // 0x307c
	float AttributeCorrectionMaxMul; // 0x3080
	float AttributeCorrectionPerAdd; // 0x3084
	int32_t AttributeCorrectionRandomCountRideTame; // 0x3088
	int32_t AttributeCorrectionRandomCountStunTame; // 0x308c
	int32_t AttributeCorrectionRandomCount; // 0x3090
	int32_t ThinACBaseChance; // 0x3094
	int32_t NormalACBaseChance; // 0x3098
	int32_t StrongACBaseChance; // 0x309c
	float MinACChanceMul; // 0x30a0
	float MaxACChanceMul; // 0x30a4
	float PerkAttributeCorrectionMul; // 0x30a8
	TArray<float> RandomAttributeCorrectionChance; // 0x30b0
	TArray<float> FinalAttributeCorrectionMul; // 0x30c0
	char bMorphEnabled : 1; // 0x30d0
	TMap<EAnimalQualityType, UAnimalAppearanceInfo*> AnimalAppearanceInfos; // 0x30d8
	UAnimalHuaSeInfo* AnimalHuaSeInfoClass; // 0x3128
	FAnimalAppearanceData AnimalAppearanceData; // 0x3130
	TMap<int32_t, USkeletalMeshComponent*> FurSkeletalMeshComps; // 0x3180
	TMap<int32_t, UGroomComponent*> FurGroomComps; // 0x31d0
	char bIsGroomFur : 1; // 0x3220
	EAnimalQualityType QualityType; // 0x3221
	char bUseRandomQuality : 1; // 0x3222
	float BaseQualityMin; // 0x3224
	float BaseQualityMax; // 0x3228
	TMap<EAttributeCorrectionType, float> AttributeCorrectionQualityWeight; // 0x3230
	TMap<EAnimalQualityType, float> QualityCorrectionToQualityType; // 0x3280
	float FinalQualityCorrection; // 0x32d0
	float BaseQualityCorrection; // 0x32d4
	int32_t WildLevel; // 0x32d8
	TArray<FAnimalRealNamePerkData> RealNamePerkDatas; // 0x32e0
	float MaxHPTrain; // 0x32f0
	float HPRecoverTrain; // 0x32f4
	float MaxStunTrain; // 0x32f8
	float MaxWeightTrain; // 0x32fc
	float MaxSPTrain; // 0x3300
	float SPRecoverTrain; // 0x3304
	float ChargeResTrain; // 0x3308
	float MaxHungerTrain; // 0x330c
	float MaxHealthTrain; // 0x3310
	char bCanLevelUp : 1; // 0x3314
	char bInfiniteState : 1; // 0x3318
	float ExtraOverWeightRatioAdd; // 0x331c
	float ExtraSiegeDamageMulAdd; // 0x3320
	float ExtraProjectileDamageMulAdd; // 0x3324
	char bUseCharacterSex : 1; // 0x3328
	char bEnableRandomSex : 1; // 0x3328
	FTimerHandle AutoAddExpTimer; // 0x3330
	float AutoAddExpInterval; // 0x3338
	float LevelAutoAddExp; // 0x333c
	float AutoAddExpRemainTime; // 0x3340
	FString AnimalTypeString; // 0x3348
	int32_t GenerationCount; // 0x3358
	char bCanMate : 1; // 0x335c
	float MateCheckRange; // 0x3360
	float MateRange; // 0x3364
	float MateCDInterval; // 0x3368
	float AddMateValuePerSecond; // 0x336c
	int32_t MateSuccessReduceLifeCount; // 0x3370
	FAnimalsAnimInstanceConfig AnimalMatingAnims; // 0x3378
	UParticleSystem* MatingParticle; // 0x33f8
	float MaxMateValue; // 0x3400
	float NextMateRemainTime; // 0x3404
	float MateCDReduceMulAdd; // 0x3408
	float MateValue; // 0x340c
	char bIsMating : 1; // 0x3410
	ASG_AnimalsCharacter* WithMateAnimal; // 0x3418
	float PregnancyChance; // 0x3420
	float AddPregnancyValuePerSecond; // 0x3424
	float PregnancyHungerConsumeMulAdd; // 0x3428
	float PregnancyMinHealthRatio; // 0x342c
	float PregnancyMinHPRatio; // 0x3430
	float BabyInheritHighQualityChance; // 0x3434
	float BabyRandomAttributeCorrectionChance; // 0x3438
	int32_t EndPregnancyReduceLifeCount; // 0x343c
	FAnimalsAnimInstanceConfig AnimalPregnancyAnims; // 0x3440
	float PregnancyWaitPlayerDataTime; // 0x34c0
	float PregnancyValue; // 0x34c4
	float MaxPregnancyValue; // 0x34c8
	char bIsPregnancy : 1; // 0x34cc
	float HorsePregnancyChanceAdd; // 0x34d0
	float FoodAddHealthToBabyValue; // 0x34d4
	float FoodAddExpToBabyValue; // 0x34d8
	char bPregnancyWaitPlayerData : 1; // 0x34dc
	float PregnancyWaitPlayerDataRemainTime; // 0x34e0
	FAnimalBabyInheritData BabyInheritData; // 0x34e8
	FVariationChanceConfig BabyVariationChanceFurQualityRealName; // 0x3580
	FVariationChanceConfig BabyVariationChanceRealName; // 0x358c
	FVariationChanceConfig BabyVariationChanceFurQuality; // 0x3598
	FVariationChanceConfig BabyVariationChanceNoRealName; // 0x35a4
	int32_t BabyVariationMinLevel; // 0x35b0
	int32_t BabyVariationMaxLevel; // 0x35b4
	int32_t VariationAttributeCorrectionRandomCount; // 0x35b8
	int32_t MaxVariationCount; // 0x35bc
	int32_t VariationCount; // 0x35c0
	float AnimalBabyScale; // 0x35c4
	float AnimalMaxScale; // 0x35c8
	ASG_AnimalsCharacter* AnimalBabyTemplate; // 0x35d0
	float BabyHungerConsumeHPMul; // 0x35d8
	char bIsWaitingClaim : 1; // 0x35dc
	UAnimMontage* AnimalBabySpawnMontage; // 0x35e0
	char bAnimalBabyAllowBeg : 1; // 0x35e8
	float AnimalBabyBegMinInterval; // 0x35ec
	float AnimalBabyBegMaxInterval; // 0x35f0
	TArray<USGItem*> AnimalBabyBegItems; // 0x35f8
	float AnimalBabyBegWalkDistance; // 0x3608
	UAnimMontage* AnimalBabyBegFinishMontage; // 0x3610
	float MaxBegValue; // 0x3618
	float FinishBegAddValue; // 0x361c
	float AnimalBabyBegRemainTime; // 0x3620
	EAnimalBegType CurAnimalBabyBegType; // 0x3624
	int32_t AnimalBabyBegFoodIndex; // 0x3628
	FVector BegWalkStartLocation; // 0x362c
	float CurBegValue; // 0x3638
	char bUseAnimalAge : 1; // 0x363c
	TMap<EAnimalQualityType, float> AddAnimalAgePerSecondByQuality; // 0x3640
	TMap<EAnimalAgeType, FAnimalAgeModifyPropConfig> AnimalAgeModifyPropConfig; // 0x3690
	float AnimalAge; // 0x36e0
	int32_t BabySavedLifeCount; // 0x36e4
	char bCanModifyBone : 1; // 0x36f8
	FAnimalsModifyBoneSettings CurrentAnimalBoneModifier; // 0x3700
	char bAllowBackward : 1; // 0x3718
	FAnimalDebugInfo CurDebugInfos; // 0x3720
	double LastUpdateDebugInfoTime; // 0x37a0
	TArray<TWeakObjectPtr<ASGPlayerController>> DrawDebugPCs; // 0x37a8
	float TurnAngle; // 0x37bc
	FVector RelaxedLocation; // 0x37dc
	FRotator RelaxedRotation; // 0x37e8
	char bIsAmphibious : 1; // 0x37f4
	float FleeFixedDistance; // 0x37f8
	float FleeRandomDistance; // 0x37fc
	float FleeMaxYaw; // 0x3800
	float TraceGroundLength; // 0x3804
	float MoveAroundBlockadeRotationMultiply; // 0x3808
	float MoveAroundMinDistance; // 0x380c
	FRotator MoveAroundPerRotator; // 0x3810
	float FollowMoveAroundMaxDist; // 0x381c
	char bIsMoveAroundBlockade : 1; // 0x3820
	FVector MoveAroundBlockadePoint; // 0x3824
	TWeakObjectPtr<AActor> LastMoveAroundBlockadeActor; // 0x3830
	float TrainRequiredAnimalHunger; // 0x3860
	float TrainRequiredGeneralHunger; // 0x3864
	float TrainRewardInterval; // 0x3868
	int32_t TrainRewardCount; // 0x386c
	FTrainRewardConfig TrainReward; // 0x3870
	int32_t MaxGenealogyCount; // 0x38f8
	TArray<FAnimalGenealogyData> GenealogyDatas; // 0x3900
	FGuid FatherChunkUid; // 0x3910
	FGuid MotherChunkUid; // 0x3920
	char bCanBeCastrate : 1; // 0x3940
	int32_t CastrateMaxTameLevel; // 0x3944
	USGItem* CastrateItem; // 0x3948
	char bIsCastrated : 1; // 0x3950
	int32_t CastrateLifeCount; // 0x3954
	char bCanBeLeader : 1; // 0x3958
	float WildFollowFixedDistance; // 0x395c
	float WildFollowRandomDistance; // 0x3960
	float WildFollowMaxRange; // 0x3964
	int32_t WildFollowMaxNum; // 0x3968
	TArray<ASG_AnimalsCharacter*> InclusionWildFollowClass; // 0x3970
	char bIsWildLeader : 1; // 0x3980
	TArray<TWeakObjectPtr<ASG_AnimalsCharacter>> BeWildFollowCharacters; // 0x3988
	TWeakObjectPtr<ASG_AnimalsCharacter> WildFollowTarget; // 0x3998
	char bMoveToStructureTrap : 1; // 0x39a0
	char bHasStructureTrap : 1; // 0x39a0
	UAnimMontage* TrapAnimalMontage; // 0x39a8
	char bAIUseCrouch : 1; // 0x39b0
	char bMoveIgnorePlatformStructures : 1; // 0x39b0
	TArray<AActor*> MoveIgnorePlatformActors; // 0x39c8
	char bSetCollisionEquippedPlatform : 1; // 0x39d8
	char bRefreshBonesEquippedPlatform : 1; // 0x39d8
	char bSpawnByAnimalWatch : 1; // 0x39d8
	char bNoEnemyDestroy : 1; // 0x39d8
	char bSetNoEnemyDestroy : 1; // 0x39d8
	float NoTargetDeadTime; // 0x39dc
	int32_t Tenacity; // 0x39e0
	int32_t TamedTenacity; // 0x39e4
	TArray<TWeakObjectPtr<ASGPlayerController>> RemoteViewingPlayerControllers; // 0x39e8
	char CanResetPos : 1; // 0x39f8
	char bEnableLineTraceForResetPos : 1; // 0x39f8
	int32_t ResetPosCoolTime; // 0x39fc
	float ResetPosRadius; // 0x3a00
	ASGStructure* BuildStructureClass; // 0x3a08
	FDateTime LastResetPosDate; // 0x3a10
	UStaticMesh* DeathReplaceStaticMesh; // 0x3a18
	USkeletalMesh* DeathReplaceSkeletalMesh; // 0x3a20
	UAnimInstance* DeathReplaceAnimClass; // 0x3a28
	char bEquipPlatformCheckCollision : 1; // 0x3a30
	TArray<FEquipPlatformCheckBox> EquipPlatformCheckBoxs; // 0x3a38
};

struct UCameraAnimInst : UObject {
	UCameraAnim* CamAnim; // 0x28
	UInterpGroupInst* InterpGroupInst; // 0x30
	float PlayRate; // 0x50
	UInterpTrackMove* MoveTrack; // 0x68
	UInterpTrackInstMove* MoveInst; // 0x70
	ECameraShakePlaySpace PlaySpace; // 0x78
};

struct UTextLayoutWidget : UWidget {
	FShapedTextOptions ShapedTextOptions; // 0x108
	ETextJustify Justification; // 0x10b
	ETextWrappingPolicy WrappingPolicy; // 0x10c
	char AutoWrapText : 1; // 0x10d
	float WrapTextAt; // 0x110
	FMargin Margin; // 0x114
	float LineHeightPercentage; // 0x124
};

struct UNiagaraDataInterfaceHairStrands : UNiagaraDataInterface {
	UGroomAsset* DefaultSource; // 0x38
	AActor* SourceActor; // 0x40
};

struct UNiagaraDataInterfaceTexture : UNiagaraDataInterface {
	UTexture* Texture; // 0x38
};

struct UStatusProgressPanel : UUserWidget {
	UProgressBar* HungerProgress; // 0x268
	UProgressBar* SPProgress; // 0x270
	UProgressBar* WeightProgress; // 0x278
	UProgressBar* EVProgress; // 0x280
	UImage* HungerWarning; // 0x288
	UImage* SPWarning; // 0x290
	UImage* WeightWarning; // 0x298
	UImage* EVWarning; // 0x2a0
	FSlateBrush EVProgressImageBg[0x4]; // 0x2a8
	FSlateBrush EVProgressImage[0x4]; // 0x4c8
	float EVProgressTargetValue; // 0x6e8
	float EVProgressSpeed; // 0x6ec
	char bShowHungerProgress : 1; // 0x6f0
	char bShowSPProgress : 1; // 0x6f0
	char bShowWeightProgress : 1; // 0x6f0
	char bShowEVProgress : 1; // 0x6f0
	char bShowHungerProgressUp : 1; // 0x6f0
	char bShowSPProgressUp : 1; // 0x6f0
	char bShowWeightProgressUp : 1; // 0x6f0
	char bShowEVProgressUp : 1; // 0x6f0
	float WarningSpeed; // 0x6f4
	float HungerThreshold; // 0x6f8
	float SPThreshold; // 0x6fc
	float WeightThreshold; // 0x700
	float EVThreshold; // 0x704
};

struct UEditableGameplayTagQueryExpression_AllExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UParticleModuleTypeDataBeam2 : UParticleModuleTypeDataBase {
	EBeam2Method BeamMethod; // 0x30
	int32_t TextureTile; // 0x34
	float TextureTileDistance; // 0x38
	int32_t Sheets; // 0x3c
	int32_t MaxBeamCount; // 0x40
	float Speed; // 0x44
	int32_t InterpolationPoints; // 0x48
	char bAlwaysOn : 1; // 0x4c
	int32_t UpVectorStepSize; // 0x50
	FName BranchParentName; // 0x54
	FRawDistributionFloat Distance; // 0x60
	EBeamTaperMethod TaperMethod; // 0x90
	FRawDistributionFloat TaperFactor; // 0x98
	FRawDistributionFloat TaperScale; // 0xc8
	char RenderGeometry : 1; // 0xf8
	char RenderDirectLine : 1; // 0xf8
	char RenderLines : 1; // 0xf8
	char RenderTessellation : 1; // 0xf8
};

struct USGVehiclePerkToolTipWidget : UUserWidget {
	TSoftObjectPtr<UTexture2D> VehiclePerkQualityBrush[0x6]; // 0x260
	TSoftObjectPtr<UTexture2D> QualitySlotBrush[0x6]; // 0x350
	FLinearColor VehiclePerkQualityOutlineColor[0x6]; // 0x440
	FSlateColor ACModifyAddTextColor; // 0x4a0
	FSlateColor ACModifyReduceTextColor; // 0x4c8
	FSlateColor ACModifyNormalTextColor; // 0x4f0
	TSoftObjectPtr<UTexture2D> ACModifyAddTexture; // 0x518
	TSoftObjectPtr<UTexture2D> ACModifyReduceTexture; // 0x540
	UImage* PerkImg; // 0x568
	UImage* SlotQualityImg; // 0x570
	UImage* ActiveImg; // 0x578
	UImage* PerkQualityImg; // 0x580
	UTextBlock* PerkNameText; // 0x588
	UTextBlock* TbPerkACModifyHP; // 0x590
	UImage* ImgPerkACModifyHP; // 0x598
	UTextBlock* TbPerkACModifySP; // 0x5a0
	UImage* ImgPerkACModifySP; // 0x5a8
	UTextBlock* TbPerkACModifyWeight; // 0x5b0
	UImage* ImgPerkACModifyWeight; // 0x5b8
	UTextBlock* TbPerkACModifySpeed; // 0x5c0
	UImage* ImgPerkACModifySpeed; // 0x5c8
	UTextBlock* TbPerkACModifyOperate; // 0x5d0
	UImage* ImgPerkACModifyOperate; // 0x5d8
	UTextBlock* TbPerkDescription; // 0x5e0
};

struct UWBP_OfficalSessionItem_C : UUI_OfficalSessionListRow {
	FMulticastInlineDelegate OnSelectDispatch; // 0x368
};

struct UARTrackedGeometry : UObject {
	FGuid UniqueId; // 0x28
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	UMRMeshComponent* UnderlyingMesh; // 0xb0
	EARObjectClassification ObjectClassification; // 0xb8
	int32_t LastUpdateFrameNumber; // 0xd0
	FName DebugName; // 0xe0
};

struct AUIWSCustomBody : AUIWSWaterBody {
	UStaticMesh* CustomStaticMesh; // 0x6b0
};

struct UWBP_FSRSettingComboBoxItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UCanvasPanel* CanvasPanel_53; // 0x370
	URichTextBlock* RichTextBlock; // 0x378
	URichTextBlock* RichTextBlock_2; // 0x380
	URichTextBlock* RichTextBlock_3; // 0x388
	URichTextBlock* RichTextBlock_121; // 0x390
	UComboBoxString* SettingComboBox; // 0x398
	UTextBlock* TbTitle; // 0x3a0
	FText Title; // 0x3a8
};

struct USoundSubmix : USoundSubmixWithParentBase {
	char bMuteWhenBackgrounded : 1; // 0x40
	TArray<USoundEffectSubmixPreset*> SubmixEffectChain; // 0x48
	USoundfieldEncodingSettingsBase* AmbisonicsPluginSettings; // 0x58
	int32_t EnvelopeFollowerAttackTime; // 0x60
	int32_t EnvelopeFollowerReleaseTime; // 0x64
	EGainParamMode GainMode; // 0x68
	float OutputVolume; // 0x6c
	float WetLevel; // 0x70
	float DryLevel; // 0x74
	FMulticastInlineDelegate OnSubmixRecordedFileDone; // 0x78
};

struct UVehicleAnimInstance : UAnimInstance {
	UWheeledVehicleMovementComponent* WheeledVehicleMovementComponent; // 0xa40
};

struct ANiagaraActor : AActor {
	UNiagaraComponent* NiagaraComponent; // 0x310
	char bDestroyOnSystemFinish : 1; // 0x318
};

struct UMaterialExpressionDistance : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UNiagaraLightRendererProperties : UNiagaraRendererProperties {
	char bUseInverseSquaredFalloff : 1; // 0x80
	char bAffectsTranslucency : 1; // 0x80
	float RadiusScale; // 0x84
	FVector ColorAdd; // 0x88
	FNiagaraVariableAttributeBinding LightRenderingEnabledBinding; // 0x98
	FNiagaraVariableAttributeBinding LightExponentBinding; // 0xf0
	FNiagaraVariableAttributeBinding PositionBinding; // 0x148
	FNiagaraVariableAttributeBinding ColorBinding; // 0x1a0
	FNiagaraVariableAttributeBinding RadiusBinding; // 0x1f8
	FNiagaraVariableAttributeBinding VolumetricScatteringBinding; // 0x250
};

struct UUI_AdminSubPanelPlayerItem : UUI_AdminSubPanel {
	UUI_AdminItemPanel* AdminItemPanel; // 0x2d8
	UUI_AdminPlayerPanel* AdminPlayerPanel; // 0x2e0
	UUI_AdminPlayerAction* AdminPlayerAction; // 0x2e8
};

struct USoundWave : USoundBase {
	int32_t CompressionQuality; // 0x1b8
	int32_t StreamingPriority; // 0x1bc
	ESoundwaveSampleRateSettings SampleRateQuality; // 0x1c0
	ESoundGroup SoundGroup; // 0x1c2
	char bLooping : 1; // 0x1c3
	char bStreaming : 1; // 0x1c3
	char bSeekableStreaming : 1; // 0x1c3
	ESoundWaveLoadingBehavior LoadingBehavior; // 0x1c4
	char bMature : 1; // 0x1c5
	char bManualWordWrap : 1; // 0x1c5
	char bSingleLine : 1; // 0x1c6
	char bIsAmbisonics : 1; // 0x1c6
	TArray<float> FrequenciesToAnalyze; // 0x1c8
	TArray<FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x1d8
	TArray<FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x1e8
	int32_t InitialChunkSize; // 0x1f8
	FString SpokenText; // 0x240
	float SubtitlePriority; // 0x250
	float Volume; // 0x254
	float Pitch; // 0x258
	int32_t NumChannels; // 0x25c
	int32_t SampleRate; // 0x260
	TArray<FSubtitleCue> Subtitles; // 0x270
	UCurveTable* Curves; // 0x280
	UCurveTable* InternalCurves; // 0x288
};

struct UForceFeedbackAttenuation : UObject {
	FForceFeedbackAttenuationSettings Attenuation; // 0x28
};

struct UInventoryFunctionButton : UUserWidget {
	EInventoryFunctionButtonType InventoryFunctionButtonType; // 0x260
	TArray<FText> ButtonTexts; // 0x268
	UButton* FunctionButton; // 0x278
	FSlateBrush ButtonNormal[0x7]; // 0x280
	FSlateBrush ButtonHover[0x7]; // 0x638
	FSlateBrush ButtonClick[0x7]; // 0x9f0
	UImage* ExchangeBorder; // 0xdc0
};

struct UMaterialExpressionOneMinus : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UInterpTrackToggle : UInterpTrack {
	TArray<FToggleTrackKey> ToggleTrack; // 0x70
	char bActivateSystemEachUpdate : 1; // 0x80
	char bActivateWithJustAttachedFlag : 1; // 0x80
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UChaosGameplayEventDispatcher : UChaosEventListenerComponent {
	TMap<UPrimitiveComponent*, FChaosHandlerSet> CollisionEventRegistrations; // 0x1d8
	TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper> BreakEventRegistrations; // 0x228
};

struct UBrushStampIndicator : UInteractiveGizmo {
	float BrushRadius; // 0x38
	float BrushFalloff; // 0x3c
	FVector BrushPosition; // 0x40
	FVector BrushNormal; // 0x4c
	bool bDrawIndicatorLines; // 0x58
	bool bDrawRadiusCircle; // 0x59
	int32_t SampleStepCount; // 0x5c
	FLinearColor LineColor; // 0x60
	float LineThickness; // 0x70
	bool bDepthTested; // 0x74
	bool bDrawSecondaryLines; // 0x75
	float SecondaryLineThickness; // 0x78
	FLinearColor SecondaryLineColor; // 0x7c
	UPrimitiveComponent* AttachedComponent; // 0x90
};

struct UNiagaraDataInterfaceCurlNoise : UNiagaraDataInterface {
	uint32_t Seed; // 0x38
};

struct UAudioSplineComponent : USplineComponent {
	USGSplineAudioComponent* AudioComponent; // 0x580
	float EditDistanceMin; // 0x588
	float EditDistanceMax; // 0x58c
	float CameraDistance; // 0x590
	TArray<FSplineSoundAttenuationSettings> SplineAttenuationSettings; // 0x598
};

struct UNiagaraDataInterface2DArrayTexture : UNiagaraDataInterface {
	UTexture2DArray* Texture; // 0x38
};

struct UUI_N_ShopItemRowHot : UUserWidget {
	UHorizontalBox* ItemHbox; // 0x260
	FMargin ItemHboxShotPadding; // 0x268
};

struct ULakeGenerator : UWaterBodyGenerator {
	UStaticMeshComponent* LakeMeshComp; // 0x28
	UBoxComponent* LakeCollisionComp; // 0x30
	ULakeCollisionComponent* LakeCollision; // 0x38
};

struct UPacketHandlerProfileConfig : UObject {
	TArray<FString> Components; // 0x28
};

struct USGToolTipsAnimal : USGToolTipWidget {
	UTextBlock* TitleText; // 0x288
	UCanvasPanel* AnimalTamingPanel; // 0x290
	USizeBox* HPSizeBox; // 0x298
	UProgressBar* HPProgressBar; // 0x2a0
	USizeBox* TameSizeBox; // 0x2a8
	UProgressBar* TameProgressBar; // 0x2b0
	USizeBox* StunSizeBox; // 0x2b8
	UProgressBar* StunProgressBar; // 0x2c0
	USizeBox* AngerSizeBox; // 0x2c8
	UProgressBar* AngerProgressBar; // 0x2d0
	UTextBlock* TipsText; // 0x2d8
	UCanvasPanel* AnimalMatingPanel; // 0x2e0
	UProgressBar* MateProgressBar; // 0x2e8
	UCanvasPanel* AnimalPregnancyPanel; // 0x2f0
	UTextBlock* PregnancyText; // 0x2f8
	UProgressBar* PregnancyProgressBar; // 0x300
	FText OverMaxTameNumTipText; // 0x308
	FText OverMaxWarNumTipText; // 0x320
	FText StunTameTitleText; // 0x338
	FText RideTameTitleText; // 0x350
	FText StunTitleText; // 0x368
	FText MateTitleText; // 0x380
	FText PregnancyTitleText; // 0x398
};

struct UPhononGeometryComponent : USceneComponent {
	bool ExportAllChildren; // 0x208
	uint32_t NumVertices; // 0x20c
	uint32_t NumTriangles; // 0x210
};

struct UParticleModuleRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	FRawDistributionFloat LifeMultiplier; // 0x30
};

struct ASceneCaptureCube : ASceneCapture {
	USceneCaptureComponentCube* CaptureComponentCube; // 0x320
};

struct UVehiclePerkRandomData : UObject {
	TArray<FVehiclePerkRandomEntry> PerkRandomEntries; // 0x28
};

struct UMoveBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
};

struct UNetConnection : UPlayer {
	TArray<UChildConnection*> Children; // 0x48
	UNetDriver* Driver; // 0x58
	UPackageMap* PackageMapClass; // 0x60
	UPackageMap* PackageMap; // 0x68
	TArray<UChannel*> OpenChannels; // 0x70
	TArray<AActor*> SentTemporaries; // 0x80
	AActor* ViewTarget; // 0x90
	AActor* OwningActor; // 0x98
	int32_t MaxPacket; // 0xa0
	char InternalAck : 1; // 0xa4
	FUniqueNetIdRepl PlayerId; // 0x160
	double LastReceiveTime; // 0x1d0
	TArray<UChannel*> ChannelsToTick; // 0x1518
};

struct ASG_HorseCharacter : ASG_AnimalVehicleCharacter {
	float ForbidPlacePerkBabyInheritWeight; // 0x3ac8
	TArray<int32_t> ForbidPlacePerkIndexes; // 0x3ad0
	float AllowPlacePerkBabyInheritWeight; // 0x3ae0
	TArray<int32_t> AllowPlacePerkIndexes; // 0x3ae8
	TArray<int32_t> SpecialPerkIndexes; // 0x3af8
	int32_t EquippedRealNameDataIndex; // 0x3b08
	float RecessivePerkBabyInheritWeight; // 0x3b0c
	TArray<int32_t> RecessivePerkIndexes; // 0x3b10
	TArray<int32_t> TriggerPerkEventLevels; // 0x3b20
	char bAddedHealyEmptyEvent : 1; // 0x3b30
	TMap<EVehiclePerkSlotType, int32_t> VehiclePerkSlotMaxCount; // 0x3b38
	TArray<int32_t> AllowPlacePerkSlotMaxCountLevels; // 0x3b88
	TArray<FAddPerkSlotMaxCountEntry> AddAllowPlacePerkSlotMaxCountEntries; // 0x3b98
	float GiveVehiclePerkToBabyChance; // 0x3ba8
	UVehiclePerkEvent* AllVehiclePerkEvent; // 0x3bb0
	TArray<USGVehiclePerk*> DefaultForbidPlaceVehiclePerks; // 0x3bc0
	TArray<USGVehiclePerk*> DefaultAllowPlaceVehiclePerks; // 0x3bd0
	TArray<USGVehiclePerk*> DefaultSpecialVehiclePerks; // 0x3be0
	FMulticastInlineDelegate OnUpdateEquippedVehiclePerk; // 0x3bf0
	FMulticastInlineDelegate OnUpdateEquippedRealNameVehiclePerk; // 0x3c00
	float AddSkillExpDelta; // 0x3c14
};

struct UTaxRevenuePanel : USGUI {
	UTaxSlot* TaxSlotTemplate; // 0x2d8
	char TestTaxData : 1; // 0x2e0
	TArray<FOfficalTaxInfo> TestTaxInfoArray; // 0x2e8
	TSoftObjectPtr<UTexture2D> TaxSlotBGImageDisable; // 0x2f8
	UUniformGridPanel* UniformGridPanelSelf; // 0x320
	UUniformGridPanel* UniformGridPanelGuild; // 0x328
	UButton* ButtonSelfLeft; // 0x330
	UButton* ButtonSelfRight; // 0x338
	UButton* ButtonGuildLeft; // 0x340
	UButton* ButtonGuildRight; // 0x348
	UTextBlock* TextNum_Self; // 0x350
	UTextBlock* TextNum_Guild; // 0x358
	UButton* ButtonClose; // 0x360
	UButton* Button_OK; // 0x368
	UTextBlock* TopTitle; // 0x370
	UBorder* Border_Price; // 0x378
	UTextBlock* TextBlock_Price; // 0x380
};

struct ASGStructureTrapProtect : ASGStructure {
	UShapeComponent* TriggerTrapComponent; // 0xba0
	TArray<FTrapTypeEntry> TrapOverlapTypes; // 0xbb8
	float TrapDamageInterval; // 0xbc8
	float TrapDamageAmount; // 0xbcc
	float LimitDamagePercent; // 0xbd0
	float AutoResetTime; // 0xbd4
	char bOnlyTriggerOtherTeam : 1; // 0xbd8
	float MeshMoveSpeed; // 0xbdc
	char bUsed : 1; // 0xbf0
};

struct UPhysicsObjectToolPropertySet : UInteractiveToolPropertySet {
	FString ObjectName; // 0x60
	ECollisionGeometryMode CollisionType; // 0x70
	TArray<FPhysicsSphereData> Spheres; // 0x78
	TArray<FPhysicsBoxData> Boxes; // 0x88
	TArray<FPhysicsCapsuleData> Capsules; // 0x98
	TArray<FPhysicsConvexData> Convexes; // 0xa8
};

struct URevolveToolProperties : URevolveProperties {
	bool bConnectOpenProfileToAxis; // 0xb0
	bool bSnapToWorldGrid; // 0xb1
	FVector DrawPlaneOrigin; // 0xb4
	FRotator DrawPlaneOrientation; // 0xc0
	bool bEnableSnapping; // 0xcc
	bool bAllowedToEditDrawPlane; // 0xcd
};

struct UParticleModuleTypeDataRibbon : UParticleModuleTypeDataBase {
	int32_t MaxTessellationBetweenParticles; // 0x30
	int32_t SheetsPerTrail; // 0x34
	int32_t MaxTrailCount; // 0x38
	int32_t MaxParticleInTrailCount; // 0x3c
	char bDeadTrailsOnDeactivate : 1; // 0x40
	char bDeadTrailsOnSourceLoss : 1; // 0x40
	char bClipSourceSegement : 1; // 0x40
	char bEnablePreviousTangentRecalculation : 1; // 0x40
	char bTangentRecalculationEveryFrame : 1; // 0x40
	char bSpawnInitialParticle : 1; // 0x40
	ETrailsRenderAxisOption RenderAxis; // 0x44
	float TangentSpawningScalar; // 0x48
	char bRenderGeometry : 1; // 0x4c
	char bRenderSpawnPoints : 1; // 0x4c
	char bRenderTangents : 1; // 0x4c
	char bRenderTessellation : 1; // 0x4c
	float TilingDistance; // 0x50
	float DistanceTessellationStepSize; // 0x54
	char bEnableTangentDiffInterpScale : 1; // 0x58
	float TangentTessellationScalar; // 0x5c
};

struct USoundNodeGroupControl : USoundNode {
	TArray<int32_t> GroupSizes; // 0x48
};

struct UUserDefinedCaptureProtocol : UMovieSceneImageCaptureProtocolBase {
	UWorld* World; // 0x58
};

struct UARCandidateObject : UDataAsset {
	TArray<char> CandidateObjectData; // 0x30
	FString FriendlyName; // 0x40
	FBox BoundingBox; // 0x50
};

struct UAudioAnalyzerNRT : UAudioAnalyzerAsset {
	USoundWave* Sound; // 0x28
	float DurationInSeconds; // 0x30
};

struct AGameplayAbilityWorldReticle : AActor {
	FWorldReticleParameters Parameters; // 0x310
	bool bFaceOwnerFlat; // 0x31c
	bool bSnapToTargetedActor; // 0x31d
	bool bIsTargetValid; // 0x31e
	bool bIsTargetAnActor; // 0x31f
	APlayerController* MasterPC; // 0x320
	AActor* TargetingActor; // 0x328
};

struct UMediaTexture : UTexture {
	TextureAddress AddressX; // 0xd8
	TextureAddress AddressY; // 0xd9
	bool AutoClear; // 0xda
	FLinearColor ClearColor; // 0xdc
	bool EnableGenMips; // 0xec
	char NumMips; // 0xed
	bool NewStyleOutput; // 0xee
	MediaTextureOutputFormat OutputFormat; // 0xef
	float CurrentAspectRatio; // 0xf0
	MediaTextureOrientation CurrentOrientation; // 0xf4
	UMediaPlayer* MediaPlayer; // 0xf8
};

struct AWaterBodyRiver : AWaterBody {
	URiverGenerator* RiverGenerator; // 0xee0
	UMaterialInterface* LakeTransitionMaterial; // 0xee8
	UMaterialInstanceDynamic* LakeTransitionMID; // 0xef0
	UMaterialInterface* OceanTransitionMaterial; // 0xef8
	UMaterialInstanceDynamic* OceanTransitionMID; // 0xf00
};

struct UTestMovieSceneSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
};

struct UViewAlignedPlaneBrushOpProps : UBasePlaneBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct UBlendSpace1D : UBlendSpaceBase {
	bool bScaleAnimation; // 0x148
};

struct USoundConcurrency : UObject {
	FSoundConcurrencySettings Concurrency; // 0x28
};

struct UVerticalBoxSlot : UPanelSlot {
	FSlateChildSize Size; // 0x38
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UWorkPlaneProperties : UInteractiveToolPropertySet {
	bool bPropertySetEnabled; // 0x60
	bool bShowGizmo; // 0x61
	bool bSnapToGrid; // 0x62
	FVector position; // 0x64
	FQuat Rotation; // 0x70
};

struct UEditNormalsTool : UMultiSelectionTool {
	UEditNormalsToolProperties* BasicProperties; // 0x90
	UEditNormalsAdvancedProperties* AdvancedProperties; // 0x98
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xa0
};

struct UNiagaraPrecompileContainer : UObject {
	TArray<UNiagaraScript*> Scripts; // 0x28
	UNiagaraSystem* System; // 0x38
};

struct UARTexture : UTexture {
	EARTextureType TextureType; // 0xd8
	float Timestamp; // 0xdc
	FGuid ExternalTextureGuid; // 0xe0
	FVector2D Size; // 0xf0
};

struct UBTTask_ClearInput : UBTTask_SGBlueprintBase {
	char bFinishedTask : 1; // 0xc0
};

struct USoundNodeSynthWavePlayer : USoundNodeAssetReferencer {
	TSoftObjectPtr<USoundWave> SoundWaveAssetPtr; // 0x48
	float PitchSemiTones; // 0x70
	char bLooping : 1; // 0x74
	FName GroupName; // 0x78
	FName WaveTag; // 0x80
	int64_t ReleaseTime; // 0x88
};

struct UBlendProfile : UObject {
	USkeleton* OwningSkeleton; // 0x30
	TArray<FBlendProfileBoneEntry> ProfileEntries; // 0x38
};

struct UAnimSingleNodeInstance : UAnimInstance {
	UAnimationAsset* CurrentAsset; // 0x2c0
	FDelegate PostEvaluateAnimEvent; // 0x2c8
	char bShouldTriggerAnimNotifyState : 1; // 0x2d8
};

struct UWBP_SingleCellHPSettingComboBoxItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UComboBoxString* SettingComboBox; // 0x370
	UTextBlock* TbTitle; // 0x378
	FText Title; // 0x380
};

struct UUI_AdminItemPanel : USGUI {
	UScrollBox* ScrollBoxItemList; // 0x2d8
	UEditableTextBox* SearchTextBoxItem; // 0x2e0
	UUI_ServerAdminItemRow* ServerAdminItemRowTemplate; // 0x2e8
	UComboBoxString* ComboBoxItemQuality; // 0x310
	UEditableTextBox* EditableTextBoxItemNum; // 0x318
	UScrollBox* ScrollBoxBuffList; // 0x320
	UEditableTextBox* SearchTextBoxBuff; // 0x328
};

struct UVehicleShortCutSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> VehiclePerkQualityBrush[0x6]; // 0x260
	UImage* ShortCutPerkImg; // 0x350
	UProgressBar* ShortCutPerkTimePB; // 0x358
	UTextBlock* ShortCutPerkTimeText; // 0x360
	UImage* ShortCutPerkQualityImg; // 0x368
	UImage* ShortCutPerkDruationTimeImg; // 0x370
	UBorder* ShortCutPerkKeyBorder; // 0x378
	UTextBlock* ShortCutPerkTbKey; // 0x380
};

struct UUI_StructureAIAttackLog : USGUI {
	UVerticalBox* LogVerticalBox; // 0x2d8
	UButton* PrePageButton; // 0x2e0
	UButton* NextPageButton; // 0x2e8
	UTextBlock* ShowPageText; // 0x2f0
	UButton* CloseButton; // 0x2f8
	UUI_StructureAIAttackLogSlot* AIAttackLogSlotClass; // 0x300
	int32_t NumPerPage; // 0x308
};

struct USmoothFillBrushOpProps : UBaseSmoothBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	bool bPreserveUVFlow; // 0x68
};

struct UMaterialExpressionSphericalParticleOpacity : UMaterialExpression {
	FExpressionInput Density; // 0x40
	float ConstantDensity; // 0x54
};

struct UVoxelProperties : UInteractiveToolPropertySet {
	int32_t VoxelCount; // 0x60
	bool bAutoSimplify; // 0x64
	bool bRemoveInternalSurfaces; // 0x65
	double SimplifyMaxErrorFactor; // 0x68
	double CubeRootMinComponentVolume; // 0x70
};

struct UWBP_ProducerName_5_C : UUserWidget {
	UWBP_ProducerSlot_C* WBP_ProducerSlot; // 0x260
	UWBP_ProducerSlot_C* WBP_ProducerSlot_2; // 0x268
	UWBP_ProducerSlot_C* WBP_ProducerSlot_3; // 0x270
	UWBP_ProducerSlot_C* WBP_ProducerSlot_4; // 0x278
	UWBP_ProducerSlot_C* WBP_ProducerSlot_5; // 0x280
	UWBP_ProducerSlot_C* WBP_ProducerSlot_6; // 0x288
	UWBP_ProducerSlot_C* WBP_ProducerSlot_7; // 0x290
	UWBP_ProducerSlot_C* WBP_ProducerSlot_9; // 0x298
	UWBP_ProducerSlot_C* WBP_ProducerSlot_10; // 0x2a0
	UWBP_ProducerSlot_C* WBP_ProducerSlot_11; // 0x2a8
};

struct UReplicationGraph : UReplicationDriver {
	UNetReplicationGraphConnection* ReplicationConnectionManagerClass; // 0x28
	UNetDriver* NetDriver; // 0x30
	TArray<UNetReplicationGraphConnection*> Connections; // 0x38
	TArray<UNetReplicationGraphConnection*> PendingConnections; // 0x48
	TArray<UReplicationGraphNode*> GlobalGraphNodes; // 0xa8
	TArray<UReplicationGraphNode*> PrepareForReplicationNodes; // 0xb8
};

struct UAchievementPanel : UUserWidget {
	UAchievementRow* AchievementRowClass; // 0x260
	TMap<FString, USGAchievement*> BindAchievementConfigs; // 0x268
	TArray<UAchievementRow*> AllAchievementRows; // 0x2b8
	FString BindAchievementType; // 0x2c8
	TArray<FAccomplishAchievementData> AccomplishAchievementDatas; // 0x2d8
	TMap<FString, USGAchievement*> AchievementInitTask; // 0x2e8
	UUniformGridPanel* UGPAchievement; // 0x348
	UScrollBox* AchievementScroll; // 0x350
};

struct UNiagaraSettings : UDeveloperSettings {
	FSoftObjectPath DefaultEffectType; // 0x38
	TArray<FText> QualityLevels; // 0x50
	TMap<FString, FText> ComponentRendererWarningsPerClass; // 0x60
	ETextureRenderTargetFormat DefaultRenderTargetFormat; // 0xb0
	ENiagaraGpuBufferFormat DefaultGridFormat; // 0xb1
	UNiagaraEffectType* DefaultEffectTypePtr; // 0xb8
};

struct UCableComponent : UMeshComponent {
	bool bAttachStart; // 0x4b0
	bool bAttachEnd; // 0x4b1
	FComponentReference AttachEndTo; // 0x4b8
	FName AttachEndToSocketName; // 0x4e0
	FVector EndLocation; // 0x4e8
	float CableLength; // 0x4f4
	int32_t NumSegments; // 0x4f8
	float SubstepTime; // 0x4fc
	int32_t SolverIterations; // 0x500
	bool bEnableStiffness; // 0x504
	bool bUseSubstepping; // 0x505
	bool bSkipCableUpdateWhenNotVisible; // 0x506
	bool bSkipCableUpdateWhenNotOwnerRecentlyRendered; // 0x507
	bool bEnableCollision; // 0x508
	float CollisionFriction; // 0x50c
	FVector CableForce; // 0x510
	float CableGravityScale; // 0x51c
	float CableWidth; // 0x520
	int32_t NumSides; // 0x524
	float TileMaterial; // 0x528
};

struct USlateAccessibleWidgetData : UObject {
	bool bCanChildrenBeAccessible; // 0x28
	ESlateAccessibleBehavior AccessibleBehavior; // 0x29
	ESlateAccessibleBehavior AccessibleSummaryBehavior; // 0x2a
	FText AccessibleText; // 0x30
	FDelegate AccessibleTextDelegate; // 0x48
	FText AccessibleSummaryText; // 0x58
	FDelegate AccessibleSummaryTextDelegate; // 0x70
};

struct UScaleKelvinletBrushOpProps : UBaseKelvinletBrushOpProps {
	float Strength; // 0x70
	float Falloff; // 0x74
};

struct AShooterWeapon : ASGWeapon {
	USceneComponent* SceneRootComponent; // 0x7888
	UStaticMeshComponent* WeaponStaticMesh; // 0x7890
	USkeletalMeshComponent* WeaponSkeletalMesh; // 0x7898
	char bUseSkeletalMesh : 1; // 0x78a0
	char bIsFullBodyReload : 1; // 0x78a0
	ASGProjectile* BowProjectileClass; // 0x78a8
	float NearlyTraceDistance; // 0x78b0
	FShooterWeaponData ShooterWeaponData; // 0x78b8
	FName ProjectileAttachSocket; // 0x7900
	FName ProjectileAttachBone; // 0x7908
	FName ProjectileStartSocket; // 0x7910
	FName ProjectileEndSocket; // 0x7918
	float BowFixRotation; // 0x7920
	UAnimMontage* CharacterShakeMontage; // 0x7928
	UAnimMontage* WeaponEquipMontage; // 0x7930
	UAnimMontage* WeaponAimToRlxMontage; // 0x7938
	UAnimMontage* WeaponBlockMontage; // 0x7940
	UAnimMontage* WeaponAttackMontage; // 0x7948
	UAnimMontage* WeaponCancelAttackMontage; // 0x7950
	UAnimMontage* WeaponShakeMontage; // 0x7958
	TArray<ASGProjectile*> BowProjectileArray; // 0x7960
	char bPullMultiDamage : 1; // 0x7970
	float ServerCheckAttackDistance; // 0x7974
	char bNeedBullet : 1; // 0x7978
	char bOverrideProjectileDamageType : 1; // 0x7978
	EDamageType OverrideProjectileDamageType; // 0x7979
	int32_t Demonstration; // 0x797c
	int32_t DemonstrationWave; // 0x7980
	float DemonstrationPerWaveTime; // 0x7984
	char bStartDemostration : 1; // 0x7988
	char bSpawnDemostration : 1; // 0x7988
	float PitchDemostartion; // 0x798c
	float YawDemostartion; // 0x7990
	EShooterWeaponType ShooterWeaponType; // 0x7a30
	float PullMultiDamageMin; // 0x7a40
	float PullMultiDamageMax; // 0x7a44
	char bUnEquipNeedBackAmmo : 1; // 0x7a48
	int32_t AmmoPiercenessOverride; // 0x7a4c
	char bShowDebug : 1; // 0x7a50
	UParticleSystem* DemostrationParticle; // 0x7a58
	UCurveFloat* DistanceAttenuationCurve; // 0x7a90
	char bUseAmmo : 1; // 0x7a98
	int32_t ClipAmmo; // 0x7a9c
	int32_t MaxClipAmmo; // 0x7aa0
	char bHolsterBackAmmo : 1; // 0x7aa4
	int32_t OnceReloadAndConsumeAmmoAmount; // 0x7aa8
	bool bOnlyClientTraceDemo; // 0x7aac
};

struct ASceneCapture : AActor {
	UStaticMeshComponent* MeshComp; // 0x310
	USceneComponent* SceneComponent; // 0x318
};

struct UN_CraftPanelTipsSlot : UUserWidget {
	UImage* ItemImage; // 0x260
	UTextBlock* ItemNameText; // 0x268
	UTextBlock* AmountDivisionText; // 0x270
	UTextBlock* ItemAmountText; // 0x278
	UTextBlock* MaxValueText; // 0x280
	TWeakObjectPtr<USGItem> BindItem; // 0x288
	TWeakObjectPtr<USGInventoryComponent> BindInventory; // 0x290
	int32_t BindMaxValue; // 0x298
	FLinearColor EnoughColor; // 0x29c
	FLinearColor NotEnoughColor; // 0x2ac
	FCraftResourceRequirement BindCraftResourceRequirement; // 0x2c0
};

struct UChannel : UObject {
	UNetConnection* Connection; // 0x28
};

struct UProceduralFoliageComponent : UActorComponent {
	UProceduralFoliageSpawner* FoliageSpawner; // 0xc0
	float TileOverlap; // 0xc8
	AVolume* SpawningVolume; // 0xd0
	FGuid ProceduralGuid; // 0xd8
};

struct UMovieSceneSection : UMovieSceneSignedObject {
	FMovieSceneSectionEvalOptions EvalOptions; // 0x50
	FMovieSceneEasingSettings Easing; // 0x58
	FMovieSceneFrameRange SectionRange; // 0x90
	FFrameNumber PreRollFrames; // 0xa0
	FFrameNumber PostRollFrames; // 0xa4
	int32_t RowIndex; // 0xa8
	int32_t OverlapPriority; // 0xac
	char bIsActive : 1; // 0xb0
	char bIsLocked : 1; // 0xb0
	float StartTime; // 0xb4
	float EndTime; // 0xb8
	float PrerollTime; // 0xbc
	float PostrollTime; // 0xc0
	char bIsInfinite : 1; // 0xc4
	bool bSupportsInfiniteRange; // 0xc8
	FOptionalMovieSceneBlendType BlendType; // 0xc9
};

struct UMovieSceneCaptureProtocolBase : UObject {
	EMovieSceneCaptureProtocolState State; // 0x50
};

struct UWorld : UObject {
	ULevel* PersistentLevel; // 0x30
	UNetDriver* NetDriver; // 0x38
	ULineBatchComponent* LineBatcher; // 0x40
	ULineBatchComponent* PersistentLineBatcher; // 0x48
	ULineBatchComponent* ForegroundLineBatcher; // 0x50
	AGameNetworkManager* NetworkManager; // 0x58
	UPhysicsCollisionHandler* PhysicsCollisionHandler; // 0x60
	TArray<UObject*> ExtraReferencedObjects; // 0x68
	TArray<UObject*> PerModuleDataObjects; // 0x78
	TArray<ULevelStreaming*> StreamingLevels; // 0x88
	FStreamingLevelsToConsider StreamingLevelsToConsider; // 0x98
	FString StreamingLevelsPrefix; // 0xc0
	ULevel* CurrentLevelPendingVisibility; // 0xd0
	ULevel* CurrentLevelPendingInvisibility; // 0xd8
	UDemoNetDriver* DemoNetDriver; // 0xe0
	AParticleEventManager* MyParticleEventManager; // 0xe8
	APhysicsVolume* DefaultPhysicsVolume; // 0xf0
	char bAreConstraintsDirty : 1; // 0x10e
	UNavigationSystemBase* NavigationSystem; // 0x110
	AGameModeBase* AuthorityGameMode; // 0x118
	AGameStateBase* GameState; // 0x120
	UAISystemBase* AISystem; // 0x128
	UAvoidanceManager* AvoidanceManager; // 0x130
	TArray<ULevel*> Levels; // 0x138
	TArray<FLevelCollection> LevelCollections; // 0x148
	UGameInstance* OwningGameInstance; // 0x180
	TArray<UMaterialParameterCollectionInstance*> ParameterCollectionInstances; // 0x188
	UCanvas* CanvasForRenderingToTarget; // 0x198
	UCanvas* CanvasForDrawMaterialToRenderTarget; // 0x1a0
	TSet<UActorComponent*> ComponentsThatNeedPreEndOfFrameSync; // 0x1f8
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate; // 0x248
	TArray<UActorComponent*> ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x258
	UWorldComposition* WorldComposition; // 0x5f8
	FWorldPSCPool PSCPool; // 0x688
};

struct UExtractCollisionGeometryTool : USingleSelectionTool {
	UCollisionGeometryVisualizationProperties* VizSettings; // 0x88
	UPhysicsObjectToolPropertySet* ObjectProps; // 0x90
	UPreviewGeometry* PreviewElements; // 0x98
	UPreviewMesh* PreviewMesh; // 0xa0
};

struct UAISenseEvent_Hearing : UAISenseEvent {
	FAINoiseEvent Event; // 0x28
};

struct ANavigationData : AActor {
	UPrimitiveComponent* RenderingComp; // 0x318
	FNavDataConfig NavDataConfig; // 0x320
	char bEnableDrawing : 1; // 0x398
	char bForceRebuildOnLoad : 1; // 0x398
	char bAutoDestroyWhenNoNavigation : 1; // 0x398
	char bCanBeMainNavData : 1; // 0x398
	char bCanSpawnOnRebuild : 1; // 0x398
	char bRebuildAtRuntime : 1; // 0x398
	ERuntimeGenerationType RuntimeGeneration; // 0x39c
	float ObservedPathsTickInterval; // 0x3a0
	uint32_t DataVersion; // 0x3a4
	TArray<FSupportedAreaData> SupportedAreas; // 0x4b0
};

struct UAIPerceptionSystem : UAISubsystem {
	TArray<UAISense*> Senses; // 0x88
	float PerceptionAgingRate; // 0x98
};

struct UAllianceDetailsSlot : USGUI {
	UTextBlock* AllianceNameText; // 0x2d8
	UTextBlock* AllianceGuildCountText; // 0x2e0
	UTextBlock* AllianceOwnerText; // 0x2e8
	UTextBlock* AllianceNoticeText; // 0x2f0
	UImage* AllianceImage; // 0x2f8
	UButton* AllianceRelationButton; // 0x300
	UButton* ChangeAllianceNameButton; // 0x308
	UButton* ChangeAllianceNoticeButton; // 0x310
	UButton* GuildListButton; // 0x318
	UButton* AllianceApplyButton; // 0x320
	UImage* ApplyAlertImage; // 0x328
	UUI_ModifyText* ChangeNameUIOverride; // 0x330
	UUI_ModifyText* ChangeNoticeUIOverride; // 0x338
	int32_t MaxNoticeLen; // 0x340
};

struct UWBP_AudioSystemSetting_C : UUI_SystemSettingPanel {
	UWBP_AudioSettingSliderItem_C* BgmSoundVolume; // 0x290
	UWBP_AudioSettingSliderItem_C* EffectSoundVolume; // 0x298
	UWBP_AudioSettingSliderItem_C* MainSoundVolume; // 0x2a0
	UImage* TitleImage; // 0x2a8
};

struct ANatureAmbientSoundVolume : AVolume {
	int32_t Priority; // 0x348
	FString ModifyAmbientSoundID; // 0x350
	TArray<FString> AdditiveAmbientSoundID; // 0x360
};

struct UParticleModuleVelocityInheritParent : UParticleModuleVelocityBase {
	FRawDistributionVector Scale; // 0x38
};

struct UOffsetWeightMapSetProperties : UWeightMapSetProperties {
	float MinDistance; // 0x80
};

struct UInterpTrackParticleReplay : UInterpTrack {
	TArray<FParticleReplayTrackKey> TrackKeys; // 0x70
};

struct UUI_AddMoneyPannel : UUserWidget {
	UTextBlock* OperationText; // 0x260
	UEditableText* OperationAmountText; // 0x268
	UButton* AddButton; // 0x270
	UButton* ReduceButton; // 0x278
	USlider* OperationSlider; // 0x280
	UButton* AcceptButton; // 0x288
	UButton* CancelButton; // 0x290
	UEditableTextBox* EditableTextBox; // 0x298
	FString GivePlayerName; // 0x2a0
	int32_t GiveCapitalNum; // 0x2b0
	TWeakObjectPtr<USGItem> BindItem; // 0x2b4
	FVector2D WidgetOffset; // 0x2bc
};

struct UClientCropInfo : UObject {
	ASGStructureCropLand* CropLand; // 0x28
	float LastVisualUpdateTime; // 0x30
	float CurrentVisualScale; // 0x34
	float NexVisualScale; // 0x38
	float InnerScaleTolerance; // 0x3c
	UStaticMeshComponent* MeshComponent; // 0x40
};

struct ASpectatorBeaconHost : AOnlineBeaconHostObject {
	USpectatorBeaconState* State; // 0x338
	bool bLogoutOnSessionTimeout; // 0x3a0
	float SessionTimeoutSecs; // 0x3a4
	float TravelSessionTimeoutSecs; // 0x3a8
};

struct UCameraComponent : USceneComponent {
	float FieldOfView; // 0x208
	float OrthoWidth; // 0x20c
	float OrthoNearClipPlane; // 0x210
	float OrthoFarClipPlane; // 0x214
	float AspectRatio; // 0x218
	char bConstrainAspectRatio : 1; // 0x21c
	char bUseFieldOfViewForLOD : 1; // 0x21c
	char bLockToHmd : 1; // 0x21c
	char bUsePawnControlRotation : 1; // 0x21c
	ECameraProjectionMode ProjectionMode; // 0x21d
	float PostProcessBlendWeight; // 0x250
	FPostProcessSettings PostProcessSettings; // 0x280
};

struct ASpectatorBeaconClient : AOnlineBeaconClient {
	FString DestSessionId; // 0x3d0
	FSpectatorReservation PendingReservation; // 0x3e0
	ESpectatorClientRequestType RequestType; // 0x458
	bool bPendingReservationSent; // 0x459
	bool bCancelReservation; // 0x45a
};

struct UInterpTrackSound : UInterpTrackVectorBase {
	TArray<FSoundTrackKey> Sounds; // 0x90
	char bPlayOnReverse : 1; // 0xa0
	char bContinueSoundOnMatineeEnd : 1; // 0xa0
	char bSuppressSubtitles : 1; // 0xa0
	char bTreatAsDialogue : 1; // 0xa0
	char bAttach : 1; // 0xa0
};

struct UUI_Government : UUserWidget {
	FString GovernmentName; // 0x260
	FName RegionID; // 0x270
	FName OccupiedGuildID; // 0x278
};

struct USoundNode : UObject {
	TArray<USoundNode*> ChildNodes; // 0x28
};

struct UPawnSensingComponent : UActorComponent {
	float HearingThreshold; // 0xc0
	float LOSHearingThreshold; // 0xc4
	float SightRadius; // 0xc8
	float SensingInterval; // 0xcc
	float HearingMaxSoundAge; // 0xd0
	char bEnableSensingUpdates : 1; // 0xd4
	char bOnlySensePlayers : 1; // 0xd4
	char bSeePawns : 1; // 0xd4
	char bHearNoises : 1; // 0xd4
	FMulticastInlineDelegate OnSeePawn; // 0xe0
	FMulticastInlineDelegate OnHearNoise; // 0xf0
	float PeripheralVisionAngle; // 0x100
	float PeripheralVisionCosine; // 0x104
};

struct UDataButton : UButton {
	FString DataSource; // 0x428
	bool bIsSimulateDisabled; // 0x438
	FButtonStyle SimulateDisabledStyle; // 0x440
	FButtonStyle CachedNormalStyle; // 0x6b8
	FMulticastInlineDelegate OnDataButtonClicked; // 0x930
	FMulticastInlineDelegate OnDataButtonPressed; // 0x940
	FMulticastInlineDelegate OnDataButtonReleased; // 0x950
	FMulticastInlineDelegate OnDataButtonHovered; // 0x960
	FMulticastInlineDelegate OnDataButtonUnhovered; // 0x970
};

struct UUI_TrafficGoodsSlot : UUserWidget {
	UCanvasPanel* MainCanvas; // 0x260
	UBorder* MainBorder; // 0x268
	UImage* QualityImage; // 0x270
	UImage* ItemImage; // 0x278
	UCanvasPanel* RecycleStatePannel; // 0x280
	UButton* Button_Minus; // 0x288
	UEditableText* ItemNumText; // 0x290
	UButton* Button_Add; // 0x298
	UTextBlock* MarketPriceText; // 0x2a0
	UTextBlock* SellNameText; // 0x2a8
	UTextBlock* OwnedNumText; // 0x2b0
	UVerticalBox* SellStateVerticalBox; // 0x2b8
	UTextBlock* ItemNameText; // 0x2c0
	UTextBlock* PriceRatioText; // 0x2c8
	UTextBlock* ItemStockNumText; // 0x2d0
	UTextBlock* PriceText; // 0x2d8
	TMap<EItemQuality, FSoftObjectPath> QualityImageMap; // 0x2e0
	TSoftObjectPtr<UTexture2D> SlotNormalBg; // 0x330
	TSoftObjectPtr<UTexture2D> SlotActiveBg; // 0x358
	TSoftObjectPtr<UTexture2D> SlotClickBg; // 0x380
	TSoftObjectPtr<UTexture2D> SlotDisableBg; // 0x3a8
};

struct UInterpTrackFloatBase : UInterpTrack {
	FInterpCurveFloat FloatTrack; // 0x70
	float CurveTension; // 0x88
};

struct UDiffusionSmoothProperties : UInteractiveToolPropertySet {
	float SmoothingPerStep; // 0x60
	int32_t Steps; // 0x64
	bool bPreserveUVs; // 0x68
};

struct UUI_GuildImage : USGUI {
	UButton* CloseButton; // 0x2d8
	UButton* SubbmitButton; // 0x2e0
	UButton* RemoveLayerButton; // 0x2e8
	UButton* ResetButton; // 0x2f0
	UGuildImageSlot* GuildImageSlot; // 0x2f8
	USlider* UMSlider; // 0x300
	USlider* VMSlider; // 0x308
	USlider* UVMSlider; // 0x310
	USlider* RSlider; // 0x318
	USlider* SXSlider; // 0x320
	USlider* SYSlider; // 0x328
	USlider* SXYSlider; // 0x330
	USlider* MirrorSlider; // 0x338
	UTextBlock* UMoveTextBlock; // 0x340
	UTextBlock* VMoveTextBlock; // 0x348
	UTextBlock* UVMoveTextBlock; // 0x350
	UTextBlock* RTextBlock; // 0x358
	UTextBlock* SXTextBlock; // 0x360
	UTextBlock* SYTextBlock; // 0x368
	UTextBlock* SXYTextBlock; // 0x370
	UTextBlock* MirrorTextBlock; // 0x378
	UUniformGridPanel* SignUniformGrid; // 0x380
	UUniformGridPanel* ColorUniformGrid; // 0x388
	int32_t SignCountsPerRow; // 0x390
	int32_t ColorCountsPerRow; // 0x394
	USelectWidgetSlot* SignWidgetSlotTemplate; // 0x398
	USelectWidgetSlot* ColorWidgetSlotTemplate; // 0x3a0
	int32_t ShowMaxNormalLayerNum; // 0x3a8
	UUI_GenericConfirmationDialog* ConfirmSubmitUIOverride; // 0x3b0
};

struct UModularSynthPresetBank : UObject {
	TArray<FModularSynthPresetBankEntry> Presets; // 0x28
};

struct UParticleModuleVelocityCone : UParticleModuleVelocityBase {
	FRawDistributionFloat Angle; // 0x38
	FRawDistributionFloat Velocity; // 0x68
	FVector Direction; // 0x98
};

struct UInterpTrackMove : UInterpTrack {
	FInterpCurveVector PosTrack; // 0x70
	FInterpCurveVector EulerTrack; // 0x88
	FInterpLookupTrack LookupTrack; // 0xa0
	FName LookAtGroupName; // 0xb0
	float LinCurveTension; // 0xb8
	float AngCurveTension; // 0xbc
	char bUseQuatInterpolation : 1; // 0xc0
	char bShowArrowAtKeys : 1; // 0xc0
	char bDisableMovement : 1; // 0xc0
	char bShowTranslationOnCurveEd : 1; // 0xc0
	char bShowRotationOnCurveEd : 1; // 0xc0
	char bHide3DTrack : 1; // 0xc0
	EInterpTrackMoveRotMode RotMode; // 0xc4
};

struct UMeshSelectionToolProperties : UInteractiveToolPropertySet {
	EMeshSelectionToolPrimaryMode SelectionMode; // 0x60
	float AngleTolerance; // 0x64
	bool bHitBackFaces; // 0x68
	bool bShowWireframe; // 0x69
	EMeshFacesColorMode FaceColorMode; // 0x6c
};

struct UMovieScene3DConstraintTrack : UMovieSceneTrack {
	TArray<UMovieSceneSection*> ConstraintSections; // 0x78
};

struct UInventoryItemTypeFilterSlot : UUserWidget {
	UImage* Image; // 0x260
	char bIsSearch : 1; // 0x268
	EInventoryItemFilterType ItemType; // 0x269
	TSoftObjectPtr<UTexture2D> NormalBrushTexture2D[0x6]; // 0x270
	TSoftObjectPtr<UTexture2D> ActiveBrushTexture2D[0x6]; // 0x360
	TSoftObjectPtr<UTexture2D> SearchNormalTexture2D; // 0x450
	TSoftObjectPtr<UTexture2D> SearchActiveTexture2D; // 0x478
	char bIsClick : 1; // 0x4b0
};

struct UWBP_NetworkSystemSetting_C : UUI_SystemSettingPanel {
	UWBP_SystemSettingCheckBox_C* bClientEnableUpdateRateOptimizations; // 0x290
	UWBP_SystemSettingCheckBox_C* bShowNetStat; // 0x298
	UImage* TitleImage; // 0x2a0
};

struct UAnimSkill_VaultingData : UDataAsset {
	FVaultingTraceSettings Struct_VaultingTraceSettings; // 0x30
	float MaxAngle; // 0x1b8
	float MaxRightOffset; // 0x1bc
	bool bCloseCollision; // 0x1c0
	bool bIgnoreCurrentFloor; // 0x1c1
	bool bEnableReverse; // 0x1c2
	float ReverseCoolingTime; // 0x1c4
	float InertiaDistance; // 0x1c8
	TArray<FVaultingHeightParams> VaultingHeightParams; // 0x1d0
	TArray<FVaultingHeightParams> VaultingHeightParams_Motion; // 0x1e0
	TArray<FVaultingHeightParams> SwimmingHeightParams; // 0x1f0
	TArray<FVaultingParams> VaultingParams; // 0x200
};

struct UStreamingSettings : UDeveloperSettings {
	char AsyncLoadingThreadEnabled : 1; // 0x38
	char WarnIfTimeLimitExceeded : 1; // 0x38
	float TimeLimitExceededMultiplier; // 0x3c
	float TimeLimitExceededMinTime; // 0x40
	int32_t MinBulkDataSizeForAsyncLoading; // 0x44
	char UseBackgroundLevelStreaming : 1; // 0x48
	char AsyncLoadingUseFullTimeLimit : 1; // 0x48
	float AsyncLoadingTimeLimit; // 0x4c
	float PriorityAsyncLoadingExtraTime; // 0x50
	float LevelStreamingActorsUpdateTimeLimit; // 0x54
	float PriorityLevelStreamingActorsUpdateExtraTime; // 0x58
	int32_t LevelStreamingComponentsRegistrationGranularity; // 0x5c
	float LevelStreamingUnregisterComponentsTimeLimit; // 0x60
	int32_t LevelStreamingComponentsUnregistrationGranularity; // 0x64
	char FlushStreamingOnExit : 1; // 0x68
	char EventDrivenLoaderEnabled : 1; // 0x68
};

struct ALightningEffect : AActor {
	UNiagaraComponent* NiagaraComponent; // 0x310
	ALightningEmitter* LightningEmitter; // 0x318
	ALightningEffect* Root; // 0x320
	float Growth; // 0x328
	bool bActive; // 0x32c
	bool bIsFadingOut; // 0x32d
	FLightningParams LightningParams; // 0x330
	FLightningIntensityParams IntensityDef; // 0x3e8
	FLightningIntensityParams IntensityCur; // 0x3f4
	FMulticastSparseDelegate EventOnLightningSpawned; // 0x400
	FMulticastSparseDelegate EventOnLightningSparkMove; // 0x401
	FMulticastSparseDelegate EventOnLightningSparkEndMove; // 0x402
	FMulticastSparseDelegate EventOnLightningBranched; // 0x404
	FMulticastSparseDelegate EventOnIntensityChanged; // 0x405
	FMulticastSparseDelegate EventOnLightningOverlap; // 0x406
	FMulticastSparseDelegate EventOnLightningHit; // 0x407
	TArray<ALightningEffect*> Branches; // 0x5e0
};

struct URewardCondition_Uint8 : URewardCondition {
	EValueConditionType ConditionType; // 0x50
	char Value; // 0x51
	bool bSingleCondition; // 0x52
};

struct UGeometryCacheTrack : UObject {
	float Duration; // 0x28
};

struct UVectorFieldStatic : UVectorField {
	int32_t SizeX; // 0x48
	int32_t SizeY; // 0x4c
	int32_t SizeZ; // 0x50
	bool bAllowCPUAccess; // 0x54
};

struct UWBP_GammaSettingSliderItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UImage* ImgScrollBg; // 0x370
	USlider* Slider; // 0x378
	UTextBlock* TbTitle; // 0x380
	UTextBlock* TbValue; // 0x388
	float StepSize; // 0x390
};

struct UFoliageTypeExtraInfos : UObject {
	TArray<FFoliageTypeExtraInfo> FoliageTypeExtraInfoContainer; // 0x28
};

struct UDynamicMeshSculptTool : UMeshSurfacePointTool {
	USculptBrushProperties* BrushProperties; // 0xc0
	UBrushSculptProperties* SculptProperties; // 0xc8
	USculptMaxBrushProperties* SculptMaxBrushProperties; // 0xd0
	UKelvinBrushProperties* KelvinBrushProperties; // 0xd8
	UBrushRemeshProperties* RemeshProperties; // 0xe0
	UFixedPlaneBrushProperties* GizmoProperties; // 0xe8
	UMeshEditingViewProperties* ViewProperties; // 0xf0
	UBrushStampIndicator* BrushIndicator; // 0x130
	UMaterialInstanceDynamic* BrushIndicatorMaterial; // 0x138
	UPreviewMesh* BrushIndicatorMesh; // 0x140
	UOctreeDynamicMeshComponent* DynamicMeshComponent; // 0x148
	UMaterialInstanceDynamic* ActiveOverrideMaterial; // 0x150
	UTransformGizmo* PlaneTransformGizmo; // 0xc50
	UTransformProxy* PlaneTransformProxy; // 0xc58
};

struct UMaterialExpressionGIReplace : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput StaticIndirect; // 0x54
	FExpressionInput DynamicIndirect; // 0x68
};

struct UEndpointSubmix : USoundSubmixBase {
	FName EndpointType; // 0x38
	UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40
	UAudioEndpointSettingsBase* EndpointSettings; // 0x48
};

struct UAISystem : UAISystemBase {
	FSoftClassPath PerceptionSystemClassName; // 0x58
	FSoftClassPath HotSpotManagerClassName; // 0x70
	float AcceptanceRadius; // 0x88
	float PathfollowingRegularPathPointAcceptanceRadius; // 0x8c
	float PathfollowingNavLinkAcceptanceRadius; // 0x90
	bool bFinishMoveOnGoalOverlap; // 0x94
	bool bAcceptPartialPaths; // 0x95
	bool bAllowStrafing; // 0x96
	bool bEnableBTAITasks; // 0x97
	bool bAllowControllersAsEQSQuerier; // 0x98
	bool bEnableDebuggerPlugin; // 0x99
	bool bForgetStaleActors; // 0x9a
	bool bAddBlackboardSelfKey; // 0x9b
	ECollisionChannel DefaultSightCollisionChannel; // 0x9c
	UBehaviorTreeManager* BehaviorTreeManager; // 0xa0
	UEnvQueryManager* EnvironmentQueryManager; // 0xa8
	UAIPerceptionSystem* PerceptionSystem; // 0xb0
	TArray<UAIAsyncTaskBlueprintProxy*> AllProxyObjects; // 0xb8
	UAIHotSpotManager* HotSpotManager; // 0xc8
	UNavLocalGridManager* NavLocalGrids; // 0xd0
};

struct UTexture2D : UTexture {
	int32_t LevelIndex; // 0xd8
	int32_t FirstResourceMemMip; // 0xdc
	char bTemporarilyDisableStreaming : 1; // 0xe0
	TextureAddress AddressX; // 0xe1
	TextureAddress AddressY; // 0xe2
	FIntPoint ImportedSize; // 0xe4
};

struct ASGStructureSaltLand : ASGStructureLandBase {
	TArray<UServerSaltInfo*> ServerSaltInfoArray; // 0x1090
	TArray<UClientSaltInfo*> ClientSaltInfoArray; // 0x10a0
	TArray<uint16_t> SaltCropInstancedArray; // 0x10b0
	float SavedTickTimeSeconds; // 0x10c8
};

struct UTaishouTeamInfoSlot : USGUI {
	UBattleGuildTips* GuildTipsTemplate; // 0x2d8
	UImage* Image_GuildIcon; // 0x2e0
	UImage* SelectedImage; // 0x2e8
	TWeakObjectPtr<USGUI> ParentUIPtr; // 0x310
	FGuid BindTipsGuildID; // 0x318
	FGuid BindTipsAllianceID; // 0x328
	float LastToolTipSizeX; // 0x338
	float LastToolTipSizeY; // 0x33c
};

struct UMaterialExpressionSphereMask : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Radius; // 0x68
	FExpressionInput Hardness; // 0x7c
	float AttenuationRadius; // 0x90
	float HardnessPercent; // 0x94
};

struct UPolyEditCommonProperties : UInteractiveToolPropertySet {
	bool bShowWireframe; // 0x60
	bool bSelectEdgeLoops; // 0x61
	ELocalFrameMode LocalFrameMode; // 0x64
	bool bLockRotation; // 0x68
	bool bSnapToWorldGrid; // 0x69
};

struct UAbilityTask_WaitVelocityChange : UAbilityTask {
	FMulticastInlineDelegate OnVelocityChage; // 0x80
	UMovementComponent* CachedMovementComponent; // 0x90
};

struct AReplicationGraphDebugActor : AActor {
	UReplicationGraph* ReplicationGraph; // 0x310
	UNetReplicationGraphConnection* ConnectionManager; // 0x318
};

struct UInterpGroupInst : UObject {
	UInterpGroup* Group; // 0x28
	AActor* GroupActor; // 0x30
	TArray<UInterpTrackInst*> TrackInst; // 0x38
};

struct UParticleModuleLocationPrimitiveCylinder_Seeded : UParticleModuleLocationPrimitiveCylinder {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x120
};

struct UPlanePositionGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoVec2ParameterSource> ParameterSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bEnableSignedAxis; // 0x88
	bool bFlipX; // 0x89
	bool bFlipY; // 0x8a
	bool bInInteraction; // 0x8b
	FVector InteractionOrigin; // 0x8c
	FVector InteractionNormal; // 0x98
	FVector InteractionAxisX; // 0xa4
	FVector InteractionAxisY; // 0xb0
	FVector InteractionStartPoint; // 0xbc
	FVector InteractionCurPoint; // 0xc8
	FVector2D InteractionStartParameter; // 0xd4
	FVector2D InteractionCurParameter; // 0xdc
	FVector2D ParameterSigns; // 0xe4
};

struct UEditPivotToolActionPropertySet : UInteractiveToolPropertySet {
	bool bUseWorldBox; // 0x68
};

struct UGeneralInfoSlot : UUserWidget {
	UImage* GeneralNameBg; // 0x260
	UImage* GeneralQualityImage; // 0x268
	UTextBlock* GeneralName; // 0x270
	UTextBlock* GeneralNameLevelText; // 0x278
	UProgressBar* GeneralNameExpProgress; // 0x280
	UButton* GeneralUpButton; // 0x288
	FSlateBrush GeneralNameBgBrush[0x4]; // 0x290
	FSlateBrush GeneralCharacterQuality[0x6]; // 0x4b0
	FLinearColor GeneralCharacterNameBgColor[0x6]; // 0x7e0
	UUI_GeneralLegend* ParentUI; // 0x840
	TWeakObjectPtr<ASGGeneralCharacter> BindGeneralCharacter; // 0x848
	FBaseGeneralChunkData BindGeneralChunkData; // 0x850
};

struct UUserInterfaceSettings : UDeveloperSettings {
	ERenderFocusRule RenderFocusRule; // 0x38
	TMap<EMouseCursor, FHardwareCursorReference> HardwareCursors; // 0x40
	TMap<EMouseCursor, FSoftClassPath> SoftwareCursors; // 0x90
	FSoftClassPath DefaultCursor; // 0xe0
	FSoftClassPath TextEditBeamCursor; // 0xf8
	FSoftClassPath CrosshairsCursor; // 0x110
	FSoftClassPath HandCursor; // 0x128
	FSoftClassPath GrabHandCursor; // 0x140
	FSoftClassPath GrabHandClosedCursor; // 0x158
	FSoftClassPath SlashedCircleCursor; // 0x170
	float ApplicationScale; // 0x188
	EUIScalingRule UIScaleRule; // 0x18c
	FSoftClassPath CustomScalingRuleClass; // 0x190
	FRuntimeFloatCurve UIScaleCurve; // 0x1a8
	bool bAllowHighDPIInGameMode; // 0x230
	FIntPoint DesignScreenSize; // 0x234
	bool bLoadWidgetsOnDedicatedServer; // 0x23c
	TArray<UObject*> CursorClasses; // 0x240
	UObject* CustomScalingRuleClassInstance; // 0x250
	UDPICustomScalingRule* CustomScalingRule; // 0x258
};

struct UDistributionFloat : UDistribution {
	char bCanBeBaked : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct UJunDistrictFilterWidget : UUserWidget {
	UCheckBox* CbDistrict; // 0x260
	UTextBlock* TbDistrict; // 0x268
	int32_t BindDistrictId; // 0x270
};

struct ASGGamePlayActor : AActor {
	char bCalFriendDamage : 1; // 0x328
	float CalFriendDamageRate; // 0x32c
	FText DescriptionName; // 0x348
	float HP; // 0x360
	float MaxHP; // 0x364
	float MaxHPMul; // 0x368
	float ReplicatedHP; // 0x36c
	char bIsDead : 1; // 0x370
	char bTakeOneDamage : 1; // 0x378
	FSoftObjectPath ClientSpawnMesh; // 0x380
	FSoftObjectPath DestroyedMesh; // 0x398
	FVector DestructibleRelativeLocation; // 0x3b0
	FRotator DestructibleRelativeRotation; // 0x3bc
	ASGDestructibleActor* DestroyedMeshActorClass; // 0x3c8
	int32_t DestroyedMeshActorLifeTime; // 0x3d0
	UStaticMesh* DestroyedStaticMesh; // 0x3d8
	FName DeadSoundID; // 0x3e0
	char bUseMultiDestroyedMesh : 1; // 0x3e8
	TArray<FMultiDestroyedMesh> MultiDestroyedMesh; // 0x3f0
	char bUseDissolveMaterial : 1; // 0x400
	int32_t Hardness; // 0x404
	float RuleDamageRate[0x4]; // 0x408
	float ReductionRate[0x4]; // 0x418
	char bHostileGuildDamageOnly : 1; // 0x428
	char bAnyPlayerCanUse : 1; // 0x428
	UCurveTable* ServerLevelEffectPropCurveTable; // 0x430
	float InitHPMaterialValue; // 0x438
	FTimerHandle UpdateHPTimer; // 0x440
	float UpdataHPDelta; // 0x448
	FBuffSimpleInfo FireBuffSimpleInfo; // 0x4a0
	UParticleSystemComponent* FireBuffParticle; // 0x4c8
	int32_t Tenacity; // 0x4f0
	TArray<TWeakObjectPtr<ABaseCharacter>> UpCharacterSets; // 0x4f8
	float PVETakeDamageMultiAdd; // 0x508
};

struct UInterpTrackInstToggle : UInterpTrackInst {
	ETrackToggleAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
	char bSavedActiveState : 1; // 0x30
};

struct UCSGMeshesToolProperties : UInteractiveToolPropertySet {
	ECSGOperation Operation; // 0x60
	bool bShowNewBoundaryEdges; // 0x61
	bool bAttemptFixHoles; // 0x62
	bool bOnlyUseFirstMeshMaterials; // 0x63
};

struct UUI_UpDatePasswordDialog : USGUI {
	UButton* BtnAccept; // 0x2e8
	UButton* CancelButton; // 0x2f0
	UCheckBox* CheckBoxShowPassword; // 0x2f8
	UEditableTextBox* EtbOldPassword; // 0x300
	UEditableTextBox* EtbPassword; // 0x308
	UEditableTextBox* EtbConfirmPassword; // 0x310
	UTextBlock* TbTitle; // 0x318
	UTextBlock* TbContent; // 0x320
	UTextBlock* TbError; // 0x328
};

struct UCanvas : UObject {
	float OrgX; // 0x28
	float OrgY; // 0x2c
	float ClipX; // 0x30
	float ClipY; // 0x34
	FColor DrawColor; // 0x38
	char bCenterX : 1; // 0x3c
	char bCenterY : 1; // 0x3c
	char bNoSmooth : 1; // 0x3c
	int32_t SizeX; // 0x40
	int32_t SizeY; // 0x44
	FPlane ColorModulate; // 0x50
	UTexture2D* DefaultTexture; // 0x60
	UTexture2D* GradientTexture0; // 0x68
	UReporterGraph* ReporterGraph; // 0x70
};

struct UUI_ReportChat : USGUI {
	UTextBlock* ReportText; // 0x2d8
	UMultiLineEditableTextBox* PlayerInputReasonText; // 0x2e0
	UVerticalBox* ReasonContainerVBox; // 0x2e8
	UButton* ButtonCancel; // 0x2f0
	UButton* ButtonConfirm; // 0x2f8
	int32_t ReportSecIntervalLimit; // 0x300
};

struct UUI_Teleport3D : USGUI {
	UUI_GenericConfirmationDialog* EnterServerConfirmationDialogClass; // 0x2d8
	UHelpTipsSlot* HelpSlotClass; // 0x2e0
	FHelpTips HelpTips; // 0x2e8
	FVector4 HelpTipsSlotPadding; // 0x300
	AGlobalMapCameraActor* GlobalMapCameraTemplate; // 0x310
	FName XianChengLenovoQueryBoxName; // 0x318
	FName CloseButtonName; // 0x320
	FName ShowCrossButtonName; // 0x328
	FName ShowBattleButtonName; // 0x330
	FName ShowInventoryButtonName; // 0x338
	UUniformGridPanel* UGPGlobalMapFilter; // 0x340
	UJunDetailWidget* JunDetail; // 0x348
	UButton* BtnRefresh; // 0x350
	UHorizontalBox* HbHelpTips; // 0x358
	UGlobalMapCameraActiveArea* CameraActiveArea; // 0x360
	UJunSelectorWidget* JunSelector; // 0x368
	AGlobalMapActor* SelectJunActor; // 0x370
	int32_t SelectServerInfoIndex; // 0x378
	FDateTime LastRefreshTime; // 0x380
	FVector2D MousePosition; // 0x388
	ASGPlayerController* SGPlayerController; // 0x390
	ASGPlayerCharacter* SGPlayerCharacter; // 0x398
	ASGGameState* SGGameState; // 0x3a0
	ULenovoQueryBox* XianChengLenovoQueryBox; // 0x3a8
	UButton* BtnClose; // 0x3b0
	UButton* BtnShowCross; // 0x3b8
	UButton* BtnShowBattle; // 0x3c0
	UButton* BtnShowInventory; // 0x3c8
	UCanvasPanel* TeleportQueueCanvas; // 0x3d0
	UTextBlock* TbTeleportQueue; // 0x3d8
	char bInTeleportQueue : 1; // 0x3e0
	TArray<FTeleportXianChengOption> XianChengOptions; // 0x3e8
	AGlobalMapActor* CurrentToolTipGlobalMapActor; // 0x3f8
	TMap<int32_t, FGlobalMapActorTipsDataArray> CurrentGlobalMapGroupToolTips; // 0x400
	TMap<int32_t, FGlobalMapActorTipsDataArray> CurrentGlobalMapGroupStableToolTips; // 0x450
};

struct UInGameAdManager : UPlatformInterfaceBase {
	char bShouldPauseWhileAdOpen : 1; // 0x38
	TArray<FDelegate> ClickedBannerDelegates; // 0x40
	TArray<FDelegate> ClosedAdDelegates; // 0x50
};

struct UMaterialExpressionFresnel : UMaterialExpression {
	FExpressionInput ExponentIn; // 0x40
	float Exponent; // 0x54
	FExpressionInput BaseReflectFractionIn; // 0x58
	float BaseReflectFraction; // 0x6c
	FExpressionInput Normal; // 0x70
};

struct UInterpCurveEdSetup : UObject {
	TArray<FCurveEdTab> Tabs; // 0x28
	int32_t ActiveTab; // 0x38
};

struct UPhysicsCollisionHandler : UObject {
	float ImpactThreshold; // 0x28
	float ImpactReFireDelay; // 0x2c
	USoundBase* DefaultImpactSound; // 0x30
	double LastImpactSoundTime; // 0x38
};

struct UParticleModuleKillHeight : UParticleModuleKillBase {
	FRawDistributionFloat Height; // 0x30
	char bAbsolute : 1; // 0x60
	char bFloor : 1; // 0x60
	char bApplyPSysScale : 1; // 0x60
};

struct UParticleModuleLifetime_Seeded : UParticleModuleLifetime {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UGameplayTask : UObject {
	FName InstanceName; // 0x30
	ETaskResourceOverlapPolicy ResourceOverlapPolicy; // 0x3a
	UGameplayTask* ChildTask; // 0x60
};

struct UBaseVoxelTool : UBaseCreateFromSelectedTool {
	UVoxelProperties* VoxProperties; // 0xf0
};

struct UWaterSplineMetadata : USplineMetadata {
	FInterpCurveFloat Depth; // 0x28
	FInterpCurveFloat WaterVelocityScalar; // 0x40
	FInterpCurveFloat RiverWidth; // 0x58
	FInterpCurveFloat AudioIntensity; // 0x70
	FInterpCurveVector WaterVelocity; // 0x88
};

struct UOvodusButton : UButton {
	bool bReceiveMouseMove; // 0x428
	bool bReceiveMouseDown; // 0x429
	bool bReceiveMouseDoubleClick; // 0x42a
	bool bReceiveMouseUp; // 0x42b
	bool bReceiveMouseEnter; // 0x42c
	bool bReceiveMouseLeave; // 0x42d
	UTexture2D* AdvancedHitTexture; // 0x430
	int32_t AdvancedIgnoreHitAlpha; // 0x438
	FMulticastInlineDelegate OnOvodusButtonClicked; // 0x440
	FMulticastInlineDelegate OnOvodusButtonHovered; // 0x450
	FMulticastInlineDelegate OnOvodusButtonUnhovered; // 0x460
	FMulticastInlineDelegate OnOvodusButtonMouseDown; // 0x470
	FMulticastInlineDelegate OnOvodusButtonMouseUp; // 0x480
};

struct UUI_BattleStatistics : USGUI {
	TSoftObjectPtr<UTexture2D> tex_win_bg; // 0x2d8
	TSoftObjectPtr<UTexture2D> tex_win_huawen; // 0x300
	TSoftObjectPtr<UTexture2D> tex_win_guanxiao; // 0x328
	TSoftObjectPtr<UTexture2D> tex_win_text_zh; // 0x350
	TSoftObjectPtr<UTexture2D> tex_win_text_en; // 0x378
	TSoftObjectPtr<UTexture2D> tex_fail_bg; // 0x3a0
	TSoftObjectPtr<UTexture2D> tex_fail_huawen; // 0x3c8
	TSoftObjectPtr<UTexture2D> tex_fail_guanxiao; // 0x3f0
	TSoftObjectPtr<UTexture2D> tex_fail_text_zh; // 0x418
	TSoftObjectPtr<UTexture2D> tex_fail_text_en; // 0x440
	UImage* Img_Bg; // 0x468
	UImage* Img_HuaWen; // 0x470
	UImage* Img_GuanXiao; // 0x478
	UImage* Img_ResultText; // 0x480
	UBattleStatisticsItem* ItemTemplate; // 0x488
	TSoftObjectPtr<UTexture2D> EnemyStatisticsBgTexture; // 0x490
	TSoftObjectPtr<UTexture2D> PartnerStatisticsBgTexture; // 0x4b8
	UButton* BtLeaveBattle; // 0x4e0
	UButton* BtGainAward; // 0x4e8
	double LastClickTime; // 0x4f0
	bool bBattleFinished; // 0x4f8
	bool bMySuccess; // 0x4f9
	TArray<UBattleStatisticsItem*> EnemyBattleStatisticsItems; // 0x500
	TArray<UBattleStatisticsItem*> PartnerBattleStatisticsItems; // 0x510
	TArray<FPlayerBattleData> PlayerBattleDatas; // 0x520
	UTextBlock* TbEnemyNum; // 0x530
	UTextBlock* TbEnemyScore; // 0x538
	UTextBlock* TbPartnerNum; // 0x540
	UTextBlock* TbPartnerScore; // 0x548
	UUniformGridPanel* UGPEnemy; // 0x550
	UUniformGridPanel* UGPPartner; // 0x558
	UImage* ImgEnemyStatisticsBg; // 0x560
	UImage* ImgPartnerStatisticsBg; // 0x568
};

struct UPrefabComponent : UPrimitiveComponent {
	char bConnected : 1; // 0x488
	char bLockSelection : 1; // 0x488
	UPrefabAsset* Prefab; // 0x490
	UBlueprint* GeneratedBlueprint; // 0x498
	TMap<FName, AActor*> PrefabInstancesMap; // 0x4a0
	TArray<FPrefabVariantRule> VariantRulesOverwrite; // 0x4f0
	char bTransient : 1; // 0x500
};

struct ANatureBlockingVolume : AActor {
	UStaticMeshComponent* VisualMeshComp; // 0x310
	UBoxComponent* BoxComp; // 0x318
	float VisualMeshMargin; // 0x320
};

struct ASGStructureCropBase : ASGStructure {
	TArray<FCropPhaseData> CropPhaseData; // 0xb98
	float ScaleTolerance; // 0xba8
	float GrowthTotalTime; // 0xbac
	USGItem* ProductionItem; // 0xbb0
	float MinProduction; // 0xbb8
	float MaxProduction; // 0xbbc
	float SkillExpAdd; // 0xbc0
	USoundBase* CollectSound; // 0xbc8
	USoundBase* DestroySound; // 0xbd0
	float BaseExploitExperienceToAdd; // 0xbd8
};

struct UUI_EscMenu : USGUI {
	UButton* BtnExit; // 0x2d8
	UButton* BtnHelp; // 0x2e0
	UButton* BtnAdmin; // 0x2e8
	UButton* BtnReturn; // 0x2f0
	UTextBlock* TbReturnSelectRole; // 0x2f8
	UButton* BtnReturnSelectRole; // 0x300
	UButton* BtnSetting; // 0x308
	UButton* BtnSettingPlayerShow; // 0x310
	UButton* BtnSuicide; // 0x318
	UTextBlock* TbSuicide; // 0x320
	UButton* BtnDeleteRole; // 0x328
	UButton* BtnUpdateDevicePassword; // 0x330
};

struct UBlueprintGeneratedClass : UClass {
	int32_t NumReplicatedProperties; // 0x230
	char bHasNativizedParent : 1; // 0x234
	char bHasCookedComponentInstancingData : 1; // 0x234
	TArray<UDynamicBlueprintBinding*> DynamicBindingObjects; // 0x238
	TArray<UActorComponent*> ComponentTemplates; // 0x248
	TArray<UTimelineTemplate*> Timelines; // 0x258
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x268
	USimpleConstructionScript* SimpleConstructionScript; // 0x278
	UInheritableComponentHandler* InheritableComponentHandler; // 0x280
	UStructProperty* UberGraphFramePointerProperty; // 0x288
	UFunction* UberGraphFunction; // 0x298
	TMap<FName, FBlueprintCookedComponentInstancingData> CookedComponentInstancingData; // 0x2a0
};

struct UUI_ServerParamFloat : UUserWidget {
	USlider* SliderValue; // 0x260
	UTextBlock* TbParamName; // 0x268
	USpinBox* SpinValue; // 0x270
	UButton* ButtonSet; // 0x278
	FString StrParamName; // 0x280
	FString StrCommand; // 0x290
};

struct UVehiclePerkColumn : UUserWidget {
	UVehiclePerkSlot* PerkSlotTemplate; // 0x260
	UTextBlock* RequiredLevelText; // 0x268
	UWrapBox* PerkSlotWrapBox; // 0x270
};

struct UARGetCandidateObjectAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct ULiveLinkSourceSettings : UObject {
	ELiveLinkSourceMode Mode; // 0x28
	FLiveLinkSourceBufferManagementSettings BufferSettings; // 0x30
	FString ConnectionString; // 0x88
	ULiveLinkSourceFactory* Factory; // 0x98
};

struct UUI_PasswordDialog : USGUI {
	UButton* BtnAccept; // 0x2e8
	UEditableTextBox* EtbPassword; // 0x2f0
	UTextBlock* TbTitle; // 0x2f8
	UTextBlock* TbContent; // 0x300
	UTextBlock* TbError; // 0x308
	UCheckBox* CheckBoxShowPassword; // 0x310
};

struct UParticleModuleMeshRotationRate_Seeded : UParticleModuleMeshRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct UDistributionVectorUniformCurve : UDistributionVector {
	FInterpCurveTwoVectors ConstantCurve; // 0x38
	char bLockAxes1 : 1; // 0x50
	char bLockAxes2 : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes[0x2]; // 0x54
	EDistributionVectorMirrorFlags MirrorFlags[0x3]; // 0x56
	char bUseExtremes : 1; // 0x5c
};

struct UParticleModuleAttractorLine : UParticleModuleAttractorBase {
	FVector EndPoint0; // 0x30
	FVector EndPoint1; // 0x3c
	FRawDistributionFloat Range; // 0x48
	FRawDistributionFloat Strength; // 0x78
};

struct ANpcSpawnInfo : AInfo {
	bool bGenerateNpcEnable; // 0x310
	UNpcSpawnTemplate* NpcSpawnTemplateClass; // 0x318
	TArray<ANpcVolume*> NpcVolumes; // 0x320
	TArray<FNpcSpawnVolumeData> NpcSpawnVolumeDatas; // 0x330
	TArray<AActor*> DefaultSpawnVolumeFloors; // 0x340
	TArray<FName> DefaultSpawnVolumeFloorTags; // 0x350
	int32_t MaxNumberValidSpawnDataChecks; // 0x360
	float InitNpcTotalTime; // 0x364
	float IncreaseDecreaseNpcIntervalTime; // 0x368
	int32_t MinDesiredNumberOfNPC; // 0x36c
	int32_t MaxNumberOfNPC; // 0x370
	float CheckPlayerDistance; // 0x374
	float CheckStructureDistance; // 0x378
	char bCheckStaticSpawnVolume : 1; // 0x37c
	char bNotGenerateAfterOccupy : 1; // 0x37c
	TArray<FSpecialNpcSpawnInfo> SpecialNpcSpawnInfos; // 0x380
	char bXianChengGuardSpawner : 1; // 0x390
	int32_t XianChengGuardLevelOffset; // 0x394
	char bUseJournal : 1; // 0x398
};

struct UBTTask_Relaxed : UBTTask_SGBlueprintBase {
	char bAutoChooseStatus : 1; // 0xc0
};

struct AControlPointMeshActor : AActor {
	UControlPointMeshComponent* ControlPointMeshComponent; // 0x310
};

struct UMaterialExpressionLandscapeGrassOutput : UMaterialExpressionCustomOutput {
	TArray<FGrassInput> GrassTypes; // 0x40
};

struct USGServerLevelData : UObject {
	int32_t ServerLevelMin; // 0x28
	int32_t ServerLevelMax; // 0x2c
	float CheckServerLevelInterval; // 0x30
	int32_t ServerLevelFormPlayerNum; // 0x34
	UCurveTable* ServerLevelCurveTable; // 0x38
	UCurveTable* ServerLevelEffectPlayerExpCurveTable; // 0x40
};

struct UServerCropInfo : UObject {
	char CropIndex; // 0x28
	ASGStructureCrop* CropDefaultObject; // 0x30
	ASGStructureCropLand* CropLand; // 0x38
	float GrowthRatio; // 0x40
	float RipeTime; // 0x44
	float CorruptTime; // 0x48
	float WaterConsumed; // 0x4c
	float NFertilizerConsumed; // 0x50
	float PFertilizerConsumed; // 0x54
	float KFertilizerConsumed; // 0x58
	float WaterLessConsumed; // 0x5c
	float NFertilizerLessConsumed; // 0x60
	float PFertilizerLessConsumed; // 0x64
	float KFertilizerLessConsumed; // 0x68
	TArray<bool> CropRipePhaseDataSaved; // 0x70
	float HP; // 0x80
	int32_t RootToFertilizerTimes; // 0x84
};

struct USubsurfaceProfile : UObject {
	FSubsurfaceProfileStruct Settings; // 0x28
};

struct UParticleModuleLocationDirect : UParticleModuleLocationBase {
	FRawDistributionVector Location; // 0x30
	FRawDistributionVector LocationOffset; // 0x78
	FRawDistributionVector ScaleFactor; // 0xc0
	FRawDistributionVector Direction; // 0x108
};

struct ULevelCapture : UMovieSceneCapture {
	bool bAutoStartCapture; // 0x220
	FGuid PrerequisiteActorId; // 0x22c
};

struct UMaterialExpressionReflectionVectorWS : UMaterialExpression {
	FExpressionInput CustomWorldNormal; // 0x40
	char bNormalizeCustomWorldNormal : 1; // 0x54
};

struct ULandscapeLayerInfoObject : UObject {
	FName LayerName; // 0x28
	UPhysicalMaterial* PhysMaterial; // 0x30
	float Hardness; // 0x38
	FLinearColor LayerUsageDebugColor; // 0x3c
};

struct UMovieSceneTrackInstance : UObject {
	UObject* AnimatedObject; // 0x28
	bool bIsMasterTrackInstance; // 0x30
	UMovieSceneEntitySystemLinker* Linker; // 0x38
	TArray<FMovieSceneTrackInstanceInput> Inputs; // 0x40
};

struct UMirrorOperatorFactory : UObject {
	UMirrorTool* MirrorTool; // 0x30
};

struct UMovieSceneGeometryCacheTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
};

struct ALight : AActor {
	ULightComponent* LightComponent; // 0x310
	char bEnabled : 1; // 0x318
};

struct UMaterialExpressionReflectionCapturePassSwitch : UMaterialExpression {
	FExpressionInput Default; // 0x40
	FExpressionInput Reflection; // 0x54
};

struct UParticleModuleLocationPrimitiveBase : UParticleModuleLocationBase {
	char Positive_X : 1; // 0x30
	char Positive_Y : 1; // 0x30
	char Positive_Z : 1; // 0x30
	char Negative_X : 1; // 0x30
	char Negative_Y : 1; // 0x30
	char Negative_Z : 1; // 0x30
	char SurfaceOnly : 1; // 0x30
	char Velocity : 1; // 0x30
	FRawDistributionFloat VelocityScale; // 0x38
	FRawDistributionVector StartLocation; // 0x68
};

struct UN_GeneralStatusPanel : UUserWidget {
	TWeakObjectPtr<ASGGeneralCharacter> BindGeneralCharacter; // 0x260
	UImage* GeneralBg; // 0x268
	UImage* GeneralNameBg; // 0x270
	UImage* GeneralQualityImage; // 0x278
	UTextBlock* GeneralName; // 0x280
	UTextBlock* GeneralNameLevelText; // 0x288
	UTextBlock* GeneralNameExpText; // 0x290
	UProgressBar* GeneralNameExpProgress; // 0x298
	TSoftObjectPtr<UTexture2D> GeneralNameBgTexture2D[0x4]; // 0x2a0
	FLinearColor GeneralCharacterNameBgColor[0x6]; // 0x340
	TSoftObjectPtr<UTexture2D> GeneralCharacterTexture2D[0x6]; // 0x3a0
};

struct UARComponent : USceneComponent {
	FGuid NativeID; // 0x208
	bool bUseDefaultReplication; // 0x248
	UMaterialInterface* DefaultMeshMaterial; // 0x250
	UMaterialInterface* DefaultWireframeMeshMaterial; // 0x258
	UMRMeshComponent* MRMeshComponent; // 0x260
	UARTrackedGeometry* MyTrackedGeometry; // 0x268
};

struct UParticleModuleAccelerationDrag : UParticleModuleAccelerationBase {
	UDistributionFloat* DragCoefficient; // 0x38
	FRawDistributionFloat DragCoefficientRaw; // 0x40
};

struct UIpNetDriver : UNetDriver {
	char LogPortUnreach : 1; // 0x760
	char AllowPlayerPortUnreach : 1; // 0x760
	uint32_t MaxPortCountToTry; // 0x764
	uint32_t ServerDesiredSocketReceiveBufferBytes; // 0x774
	uint32_t ServerDesiredSocketSendBufferBytes; // 0x778
	uint32_t ClientDesiredSocketReceiveBufferBytes; // 0x77c
	uint32_t ClientDesiredSocketSendBufferBytes; // 0x780
	double MaxSecondsInReceive; // 0x788
	int32_t NbPacketsBetweenReceiveTimeTest; // 0x790
	float ResolutionConnectionTimeout; // 0x794
};

struct UInterpTrackMoveAxis : UInterpTrackFloatBase {
	EInterpMoveAxis MoveAxis; // 0x90
	FInterpLookupTrack LookupTrack; // 0x98
};

struct UDecalComponent : USceneComponent {
	UMaterialInterface* DecalMaterial; // 0x208
	int32_t SortOrder; // 0x210
	float FadeScreenSize; // 0x214
	float FadeStartDelay; // 0x218
	float FadeDuration; // 0x21c
	float FadeInDuration; // 0x220
	float FadeInStartDelay; // 0x224
	char bDestroyOwnerAfterFade : 1; // 0x228
	FVector DecalSize; // 0x22c
};

struct URevolveBoundaryToolProperties : URevolveProperties {
	bool bDisplayOriginalMesh; // 0xb0
	FVector AxisOrigin; // 0xb4
	float AxisYaw; // 0xc0
	float AxisPitch; // 0xc4
	bool bSnapToWorldGrid; // 0xc8
};

struct UMovieSceneParameterSection : UMovieSceneSection {
	TArray<FBoolParameterNameAndCurve> BoolParameterNamesAndCurves; // 0xe8
	TArray<FScalarParameterNameAndCurve> ScalarParameterNamesAndCurves; // 0xf8
	TArray<FVector2DParameterNameAndCurves> Vector2DParameterNamesAndCurves; // 0x108
	TArray<FVectorParameterNameAndCurves> VectorParameterNamesAndCurves; // 0x118
	TArray<FColorParameterNameAndCurves> ColorParameterNamesAndCurves; // 0x128
	TArray<FTransformParameterNameAndCurves> TransformParameterNamesAndCurves; // 0x138
};

struct UAsyncTask_LoadXRDeviceVisComponent : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnModelLoaded; // 0x30
	FMulticastInlineDelegate OnLoadFailure; // 0x40
	UPrimitiveComponent* SpawnedComponent; // 0x58
};

struct UHorseAuctionSellSlot : USGUI {
	FButtonStyle ButtonCheckedStyle; // 0x2d8
	FButtonStyle ButtonUnCheckedStyle; // 0x550
	UButton* ButtonSelected; // 0x7c8
	UTextBlock* TextBlock_Name; // 0x7d0
	UTextBlock* TextBlock_Level; // 0x7d8
	UTextBlock* TextBlock_Statue; // 0x7e0
	UTextBlock* TextBlock_Quality; // 0x7e8
	UTextBlock* TextBlock_VehicleType; // 0x7f0
	UTextBlock* TextBlock_Price; // 0x7f8
	UTextBlock* TextBlock_Time; // 0x800
	TWeakObjectPtr<UHorseAuctionSellPanel> HorseAuctionSellPanel; // 0x818
	TWeakObjectPtr<UHorseAuctionPanel> HorseAuctionPanel; // 0x820
};

struct USGSeason : UObject {
	int32_t LongTickInterval; // 0x38
	int32_t ShortTickInterval; // 0x3c
	char bEnableSeason : 1; // 0x58
	char bDebugSeason : 1; // 0x58
};

struct UWorldComposition : UObject {
	TArray<ULevelStreaming*> TilesStreaming; // 0x48
	double TilesStreamingTimeThreshold; // 0x58
	bool bLoadAllTilesDuringCinematic; // 0x60
	bool bRebaseOriginIn3DSpace; // 0x61
	float RebaseOriginDistance; // 0x64
};

struct ASGHUD : AHUD {
	char bHoldInteractive : 1; // 0x408
	char bEnableGMDebug : 1; // 0x408
	UDataTable* UISettingsDataTable; // 0x410
	UUI_N_Inventory* N_InventoryUI; // 0x418
	UUI_QuickRemoteInventory* QuickRemoteInventoryUI; // 0x420
	UUI_Perk* PerkUI; // 0x428
	UUIArtofWarPanel* ArtofWarPanel; // 0x430
	UUI_NN_CraftPerk* NN_CraftPerkUI; // 0x438
	UUI_Activity* ActivityUI; // 0x440
	UUI_NPCInfo* NPCInfoUI; // 0x448
	UUI_StatisticsInfo* StatisticsInfoUI; // 0x450
	UUI_MiniMap* MiniMapUI; // 0x458
	UUI_MapList* MapListUI; // 0x460
	UUI_CreateRole* CreateRoleUI; // 0x468
	UUI_Facelift* FaceliftUI; // 0x470
	UUI_SelectRole* SelectRoleUI; // 0x478
	UUI_Altar* AltarUI; // 0x480
	UUI_AnimalRest* AnimalRestUI; // 0x488
	UUI_Game* GameUI; // 0x490
	UUI_Notification* NotificationUI; // 0x498
	UUI_N_AllFunction* AllFunctionUI; // 0x4a0
	UUI_Guild* GuildUI; // 0x4a8
	UUI_SetGuildAuthority* SetGuildAuthorityUI; // 0x4b0
	UUI_SetGuildLanguage* SetGuildLanguageUI; // 0x4b8
	UUI_GuildApplyList* GuildApplyListUI; // 0x4c0
	UUI_AllianceApplyList* AllianceApplyListUI; // 0x4c8
	UUI_GuildBeInviteList* GuildBeInviteListUI; // 0x4d0
	UUI_GuildQuest* GuildQuestUI; // 0x4d8
	UUI_GuildImage* GuildImageUI; // 0x4e0
	UUI_GuildShop* GuildShopUI; // 0x4e8
	UUI_ApplyGuildConfirm* ApplyGuildConfirm; // 0x4f0
	UUI_CreateGuildConfirm* CreateGuildConfirm; // 0x4f8
	UUI_GuildSilverStore* GuildSilverStoreUI; // 0x500
	UUI_N_GuildSkill* GuildSkillUI; // 0x508
	UUI_ZhanLing* ZhanLingUI; // 0x510
	UUI_GuildKPI* GuildKPIUI; // 0x518
	UUI_GuildKPILog* GuildKPILogUI; // 0x520
	UUI_NN_CraftPerk* GuildTechUI; // 0x528
	UUI_TransGuildActivityPoint* TransGuildActivityPointUI; // 0x530
	UUI_TransGuildExpPoint* TransGuildExpPointUI; // 0x538
	UUI_GuildGroup* GuildGroupUI; // 0x540
	UUI_GuildAuctionHouse* GuildAuctionHouseUI; // 0x548
	UUI_GuildStore* GuildStoreUI; // 0x550
	UUI_AllianceRelation* AllianceRelationUI; // 0x558
	UUI_TransAllianceOfficial* TransAllianceOfficialUI; // 0x560
	UUI_InteractiveMenu* InteractiveUI; // 0x568
	UUI_ReSpawn* ReSpawnUI; // 0x570
	UUI_Crosshairs* CrosshairsUI; // 0x578
	UUI_EscMenu* EscMenuUI; // 0x580
	UUI_PasswordEntry* PasswordEntryUI; // 0x588
	UUI_ChangeName* ChangeNameUI; // 0x590
	UUI_BattleGroup* BattleGroupUI; // 0x598
	UUI_XianChengRelationShip* XianChengBattleRelationShipUI; // 0x5a0
	UUI_RideTaming* RideTamingUI; // 0x5a8
	UUI_ServerAdmin* ServerAdminUI; // 0x5b0
	UUI_Setting* SettingUI; // 0x5b8
	UUI_PlayerShowSetting* PlayerShowSettingUI; // 0x5c0
	USGHudOverlay* MyOverlayHUD; // 0x5c8
	UUI_TransportMachine* TransportMachineUI; // 0x5d0
	UUI_HuangLi* HuangLiUI; // 0x5d8
	UUI_MsgRecord* MsgRecordUI; // 0x5e0
	UUI_Achievement* AchievementUI; // 0x5e8
	UUI_JueWei* JueWeiUI; // 0x5f0
	UUI_GlobalMap* GlobalMapUI; // 0x5f8
	UUI_Domain* DomainUI; // 0x600
	UUI_Teleport3D* Teleport3DUI; // 0x608
	UUI_BenchmarkScalability* BenchmarkScalabilityUI; // 0x610
	UUI_OperationMode* OperationModeUI; // 0x618
	UUI_SGGameRecord* SGGameRecordUI; // 0x620
	UUI_N_Shop* ShopUI; // 0x628
	UUI_N_ShopConfirmBuy* ShopConfirmBuyUI; // 0x630
	UUI_BattleStatistics* BattleStatisticsUI; // 0x638
	UUI_BattleAward* BattleAwardUI; // 0x640
	UUI_JunGuanAiBattle* JunGuanAiBattle_UI; // 0x648
	UUI_NPCTalk* NPCTalkUI; // 0x650
	USGToolTipWidget* InteractiveSelected; // 0x658
	USGToolTipWidget* StructureSelectType; // 0x660
	UUI_Season* SeasonUI; // 0x668
	UUI_AnimationNotify* AnimationNotifyUI; // 0x670
	UUI_ModifyText* ModifyTextUI; // 0x678
	UUI_DLSSDebug* DLSSDebugUI; // 0x680
	UUI_News* NewsUI; // 0x688
	UUI_MainMail* MainMailUI; // 0x690
	UUI_Identifies* IdentifiesUI; // 0x698
	UUI_StructureContainerLog* StructureContainerLogUI; // 0x6a0
	UUI_StructureAIAttackLog* StructureAIAttackLogUI; // 0x6a8
	UUI_AnimalFarmRecord* AnimalFarmRecordUI; // 0x6b0
	UUI_TrafficGoods* TrafficGoodsUI; // 0x6b8
	UUI_TrafficGoodsConfirm* TrafficGoodsConfirmUI; // 0x6c0
	UUI_StructureHelp* StructureHelpUI; // 0x6c8
	UUINoviceProtectionPanel* NoviceProtectionPanel; // 0x6d0
	UUI_ReportChat* ReportChatUI; // 0x6d8
	UMiniMapPOI* MiniMapPOIData[0x13]; // 0x6e0
	TArray<UMiniMapPOI_Group*> MiniMapGroupTemplate; // 0x778
	bool bEnableXianChengRelationShipUI; // 0x788
	UFont* DisplayFont; // 0x7b8
	UTexture* UnSelectedImage; // 0x7c0
	UTexture* ReplaceStructureImage; // 0x7c8
	TMap<USGBuff*, FExploitTypes> ExplorationFoliageBuffTemplate; // 0x7d0
	USGBuff* ExplorationAnimalBuffTemplate; // 0x820
	UTexture* ExplorationOreImage; // 0x828
	UTexture* ExplorationTreeImage; // 0x830
	UTexture* ExplorationAnimalImage; // 0x838
	float ExplorationImageSizeMax; // 0x840
	float ExplorationImageSizeMin; // 0x844
	float DistanceSizeRatio; // 0x848
	USGToolTipWidget* InteractiveSelectedToolTipWidget; // 0x850
	USGToolTipWidget* StructureSelectTypeToolTipWidget; // 0x858
	int32_t StructureSelectTypeQuestID; // 0x860
	char bShowHUDInfo : 1; // 0x864
	char bShowPerkEntriesLine : 1; // 0x86c
	UMaterialInterface* SnapShotBaseMaterial; // 0x888
	TArray<TWeakObjectPtr<ABaseCharacter>> SnapShotArray; // 0x890
	TWeakObjectPtr<ABaseCharacter> SnapShotCurrent; // 0x8a0
	UWorld* PreviewWorld; // 0x8b8
	USceneCaptureComponent2D* CaptureComponent; // 0x8c0
	FPreviewCharacterStruct PreviewCharacterStruct; // 0x8c8
	TMap<UTextureRenderTarget2D*, TWeakObjectPtr<USceneCaptureComponent2D>> CachedTextureRenderTarget2D; // 0x908
	TArray<ABaseCharacter*> ShowLevelNameHUDCharacterList; // 0x958
	TWeakObjectPtr<UWidgetComponent> ShowHUDWidgetComponent; // 0x968
	TWeakObjectPtr<ASGGeneralCharacter> ViewGeneralCharacter; // 0x970
	UUI_GuildEvent* GuildEventUI; // 0x978
	UUI_WorldRank* WorldRankUI; // 0x980
	UUI_ViewGeneral* ViewGeneralUI; // 0x988
	UTaxRevenuePanel* TaxRevenuePanelUI; // 0x990
	UUI_CountySeatAltarPanel* CountySeatAltarPanelUI; // 0x998
	UUI_GuideSkillMastery* GuideSkillMasteryUI; // 0x9a0
	UUI_FlagImage* FlagImageUI; // 0x9a8
	UUI_CustomFlag* CustomFlagUI; // 0x9b0
};

struct UUI_GenericConnectWaiting : USGUI {
	FTimerHandle AutoKillTimer; // 0x2d8
};

struct UHuangLiMainPanel : UUserWidget {
	UTextBlock* HuangLiDayText; // 0x260
	UTextBlock* XingShenText; // 0x268
	UTextBlock* JianChuText; // 0x270
	UTextBlock* XingXiuText; // 0x278
	UTextBlock* TimeText; // 0x280
	UButton* PreDayButton; // 0x288
	UButton* NextDayButton; // 0x290
	UButton* XingShenButton; // 0x298
	UButton* JianChuButton; // 0x2a0
	UButton* XingXiuButton; // 0x2a8
	UButton* ActivityButton; // 0x2b0
	UTextBlock* DayDiffText; // 0x2b8
	UTextBlock* EffectText; // 0x2c0
};

struct UWBP_PasswordConfirmDialog_C : UUI_PasswordConfirmationDialog {
	URichTextBlock* CheckBoxSelectedTextBlock; // 0x328
	UImage* Image; // 0x330
	UImage* Image_131; // 0x338
	UImage* Image_250; // 0x340
	UImage* ImgBg; // 0x348
	UImage* ImgBorder; // 0x350
	UImage* ImgNameInputBg; // 0x358
	UImage* ImgNameInputBgAgain; // 0x360
	UImage* ImgNameInputBgAgain_2; // 0x368
};

struct APaperFlipbookActor : AActor {
	UPaperFlipbookComponent* RenderComponent; // 0x310
};

struct ABehaviorPointActor : AActor {
	UPointLightComponent* BehaviorPointLightComponent; // 0x310
	TArray<FPointConfig> PointConfig; // 0x318
};

struct URemeshMeshTool : UMultiSelectionTool {
	URemeshMeshToolProperties* BasicProperties; // 0x98
	UMeshStatisticsProperties* MeshStatisticsProperties; // 0xa0
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xa8
};

struct ASceneCapture2D : ASceneCapture {
	USceneCaptureComponent2D* CaptureComponent2D; // 0x320
};

struct UMaterialExpressionFrac : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct AMatineeActor : AActor {
	UInterpData* MatineeData; // 0x310
	FName MatineeControllerName; // 0x318
	float PlayRate; // 0x320
	char bPlayOnLevelLoad : 1; // 0x324
	char bForceStartPos : 1; // 0x324
	float ForceStartPosition; // 0x328
	char bLooping : 1; // 0x32c
	char bRewindOnPlay : 1; // 0x32c
	char bNoResetOnRewind : 1; // 0x32c
	char bRewindIfAlreadyPlaying : 1; // 0x32c
	char bDisableRadioFilter : 1; // 0x32c
	char bClientSideOnly : 1; // 0x32c
	char bSkipUpdateIfNotVisible : 1; // 0x32c
	char bIsSkippable : 1; // 0x32c
	int32_t PreferredSplitScreenNum; // 0x330
	char bDisableMovementInput : 1; // 0x334
	char bDisableLookAtInput : 1; // 0x334
	char bHidePlayer : 1; // 0x334
	char bHideHud : 1; // 0x334
	TArray<FInterpGroupActorInfo> GroupActorInfos; // 0x338
	char bShouldShowGore : 1; // 0x348
	TArray<UInterpGroupInst*> GroupInst; // 0x350
	TArray<FCameraCutInfo> CameraCuts; // 0x360
	char bIsPlaying : 1; // 0x370
	char bReversePlayback : 1; // 0x370
	char bPaused : 1; // 0x370
	char bPendingStop : 1; // 0x370
	float InterpPosition; // 0x374
	float TotalBlendTime; // 0x378
	float CurrentBlendTime; // 0x37c
	char ReplicationForceIsPlaying; // 0x388
	FMulticastInlineDelegate OnPlay; // 0x390
	FMulticastInlineDelegate OnStop; // 0x3a0
	FMulticastInlineDelegate OnPause; // 0x3b0
};

struct UParticleModuleEventReceiverSpawn : UParticleModuleEventReceiverBase {
	FRawDistributionFloat SpawnCount; // 0x40
	char bUseParticleTime : 1; // 0x70
	char bUsePSysLocation : 1; // 0x70
	char bInheritVelocity : 1; // 0x70
	FRawDistributionVector InheritVelocityScale; // 0x78
	TArray<UPhysicalMaterial*> PhysicalMaterials; // 0xc0
	char bBanPhysicalMaterials : 1; // 0xd0
};

struct UWebBrowserAssetManager : UObject {
	TSoftObjectPtr<UMaterial> DefaultMaterial; // 0x28
};

struct UMaterialExpressionClearCoatNormalCustomOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct UGameUserSettings : UObject {
	bool bUseVSync; // 0x28
	bool bUseDynamicResolution; // 0x29
	uint32_t ResolutionSizeX; // 0x80
	uint32_t ResolutionSizeY; // 0x84
	uint32_t LastUserConfirmedResolutionSizeX; // 0x88
	uint32_t LastUserConfirmedResolutionSizeY; // 0x8c
	int32_t WindowPosX; // 0x90
	int32_t WindowPosY; // 0x94
	int32_t FullscreenMode; // 0x98
	int32_t LastConfirmedFullscreenMode; // 0x9c
	int32_t PreferredFullscreenMode; // 0xa0
	uint32_t Version; // 0xa4
	int32_t AudioQualityLevel; // 0xa8
	int32_t LastConfirmedAudioQualityLevel; // 0xac
	float FrameRateLimit; // 0xb0
	int32_t DesiredScreenWidth; // 0xb8
	bool bUseDesiredScreenHeight; // 0xbc
	int32_t DesiredScreenHeight; // 0xc0
	int32_t LastUserConfirmedDesiredScreenWidth; // 0xc4
	int32_t LastUserConfirmedDesiredScreenHeight; // 0xc8
	float LastRecommendedScreenWidth; // 0xcc
	float LastRecommendedScreenHeight; // 0xd0
	float LastCPUBenchmarkResult; // 0xd4
	float LastGPUBenchmarkResult; // 0xd8
	TArray<float> LastCPUBenchmarkSteps; // 0xe0
	TArray<float> LastGPUBenchmarkSteps; // 0xf0
	float LastGPUBenchmarkMultiplier; // 0x100
	bool bUseHDRDisplayOutput; // 0x104
	int32_t HDRDisplayOutputNits; // 0x108
	FMulticastInlineDelegate OnGameUserSettingsUINeedsUpdate; // 0x110
};

struct UParticleModuleAttractorPointGravity : UParticleModuleAttractorBase {
	FVector position; // 0x30
	float Radius; // 0x3c
	UDistributionFloat* Strength; // 0x40
	FRawDistributionFloat StrengthRaw; // 0x48
};

struct UMovieSceneTrack : UMovieSceneSignedObject {
	FMovieSceneTrackEvalOptions EvalOptions; // 0x50
	bool bIsEvalDisabled; // 0x55
	FGuid EvaluationFieldGuid; // 0x58
	FMovieSceneTrackEvaluationField EvaluationField; // 0x68
};

struct USourceEffectFilterPreset : USoundEffectSourcePreset {
	FSourceEffectFilterSettings Settings; // 0xb0
};

struct UMovieSceneCameraAnimSection : UMovieSceneSection {
	FMovieSceneCameraAnimSectionData AnimData; // 0xe8
	UCameraAnim* CameraAnim; // 0x108
	float PlayRate; // 0x110
	float PlayScale; // 0x114
	float BlendInTime; // 0x118
	float BlendOutTime; // 0x11c
	bool bLooping; // 0x120
};

struct UUserDefinedEnum : UEnum {
	TMap<FName, FText> DisplayNameMap; // 0x60
};

struct UGroomImportOptions : UObject {
	FGroomConversionSettings ConversionSettings; // 0x28
	TArray<FHairGroupsInterpolation> InterpolationSettings; // 0x40
};

struct UBaseAIAttackState : UObject {
	USGDamageType* DamageTypeClass; // 0x28
	EDamageType Enum_DamageType; // 0x30
	float StateDurationTime; // 0x34
	double BeginStateTime; // 0x38
	char bCanBeAbort : 1; // 0x40
	UAnimMontage* CurrentAttackMontage; // 0x48
};

struct UParticleModuleCollision : UParticleModuleCollisionBase {
	FRawDistributionVector DampingFactor; // 0x30
	FRawDistributionVector DampingFactorRotation; // 0x78
	FRawDistributionFloat MaxCollisions; // 0xc0
	EParticleCollisionComplete CollisionCompletionOption; // 0xf0
	TArray<EObjectTypeQuery> CollisionTypes; // 0xf8
	char bApplyPhysics : 1; // 0x110
	char bIgnoreTriggerVolumes : 1; // 0x110
	FRawDistributionFloat ParticleMass; // 0x118
	float DirScalar; // 0x148
	char bPawnsDoNotDecrementCount : 1; // 0x14c
	char bOnlyVerticalNormalsDecrementCount : 1; // 0x14c
	float VerticalFudgeFactor; // 0x150
	FRawDistributionFloat DelayAmount; // 0x158
	char bDropDetail : 1; // 0x188
	char bCollideOnlyIfVisible : 1; // 0x188
	char bIgnoreSourceActor : 1; // 0x188
	float MaxCollisionDistance; // 0x18c
};

struct UGuildKPISlot : UUserWidget {
	UBorder* BGBorder; // 0x260
	UTextBlock* NameText; // 0x268
	UTextBlock* LevelText; // 0x270
	UTextBlock* TitleText; // 0x278
	UGuildKPIItemImageSlot* ItemImage1; // 0x280
	UTextBlock* ItemNeedText1; // 0x288
	UButton* SettingButton1; // 0x290
	UGuildKPIItemImageSlot* ItemImage2; // 0x298
	UTextBlock* ItemNeedText2; // 0x2a0
	UButton* SettingButton2; // 0x2a8
	UGuildKPIItemImageSlot* ItemImage3; // 0x2b0
	UTextBlock* ItemNeedText3; // 0x2b8
	UButton* SettingButton3; // 0x2c0
	UGuildKPIItemImageSlot* ItemImage4; // 0x2c8
	UTextBlock* ItemNeedText4; // 0x2d0
	UButton* SettingButton4; // 0x2d8
	UGuildKPIItemImageSlot* ItemImage5; // 0x2e0
	UTextBlock* ItemNeedText5; // 0x2e8
	UButton* SettingButton5; // 0x2f0
	UGuildAuthorityComboBox* DepotLevelComboBox; // 0x2f8
	UTextBlock* TotalPointText; // 0x300
	UDataButton* CopyButton; // 0x308
	UDataButton* PasteButton; // 0x310
	UDataButton* ClearButton; // 0x318
	UDataButton* LogButton; // 0x320
	TSoftObjectPtr<UTexture2D> NormalBGTexture; // 0x328
	TSoftObjectPtr<UTexture2D> SelectBGTexture; // 0x350
	USGToolTipWidget* ButtonTipWidgetTemplate; // 0x378
	FText CopyButtonTips; // 0x380
	FText PasteButtonTips; // 0x398
	FText ClearButtonTips; // 0x3b0
	FText LogButtonTips; // 0x3c8
};

struct USGGameDataPlayerShowData : UObject {
	TMap<int32_t, FPlayerShowData> PlayerShowSettingCfg; // 0x28
};

struct UDistributionFloatUniform : UDistributionFloat {
	float Min; // 0x38
	float Max; // 0x3c
};

struct UAsyncActionLoadPrimaryAssetClassList : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UEnvQueryGenerator_BlueprintBase : UEnvQueryGenerator {
	FText GeneratorsActionDescription; // 0x50
	UEnvQueryContext* Context; // 0x68
	UEnvQueryItemType* GeneratedItemType; // 0x70
};

struct UUI_Identifies : USGUI {
	UTextBlock* TbIdentifies; // 0x2d8
};

struct UUI_StructureContainerLog : USGUI {
	UVerticalBox* LogVerticalBox; // 0x2d8
	UButton* PrePageButton; // 0x2e0
	UButton* NextPageButton; // 0x2e8
	UTextBlock* ShowPageText; // 0x2f0
	UButton* CloseButton; // 0x2f8
	UUI_StructureContainerLogSlot* ContainerLogSlotClass; // 0x300
	int32_t NumPerPage; // 0x308
};

struct UProceduralFoliageTile : UObject {
	UProceduralFoliageSpawner* FoliageSpawner; // 0x28
	TArray<FProceduralFoliageInstance> InstancesArray; // 0xd0
};

struct AStaticMeshActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x310
	bool bStaticMeshReplicateMovement; // 0x318
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x319
};

struct USubmixEffectMultibandCompressorPreset : USoundEffectSubmixPreset {
	FSubmixEffectMultibandCompressorSettings Settings; // 0xb0
};

struct UUI_StructureOccupyShelterPanel : UUserWidget {
	TWeakObjectPtr<ASGStructureOccupy> RemoteActor; // 0x260
	USGUI* RootSGUI; // 0x268
	UVerticalBox* ProtectBox; // 0x270
	UUI_StructureOccupyShelterSlot* OccupyShelterSlotClass; // 0x278
	UCheckBox* BuyThisWeekCheckBox; // 0x280
};

struct UDatasmithMaterialInstanceTemplate : UDatasmithObjectTemplate {
	TSoftObjectPtr<UMaterialInterface> ParentMaterial; // 0x30
	TMap<FName, float> ScalarParameterValues; // 0x58
	TMap<FName, FLinearColor> VectorParameterValues; // 0xa8
	TMap<FName, TSoftObjectPtr<UTexture>> TextureParameterValues; // 0xf8
	FDatasmithStaticParameterSetTemplate StaticParameters; // 0x148
};

struct UFoliageInstancedStaticMeshComponent : UHierarchicalInstancedStaticMeshComponent {
	FMulticastInlineDelegate OnInstanceTakePointDamage; // 0x6b0
	FMulticastInlineDelegate OnInstanceTakeRadialDamage; // 0x6c0
	FGuid GenerationGuid; // 0x6d0
};

struct USlateWidgetStyleAsset : UObject {
	USlateWidgetStyleContainerBase* CustomStyle; // 0x28
};

struct UTransformMeshesToolProperties : UInteractiveToolPropertySet {
	ETransformMeshesTransformMode TransformMode; // 0x60
	bool bSetPivot; // 0x61
	bool bEnableSnapDragging; // 0x62
	ETransformMeshesSnapDragSource SnapDragSource; // 0x63
	ETransformMeshesSnapDragRotationMode RotationMode; // 0x64
};

struct UWeightMapSetProperties : UInteractiveToolPropertySet {
	FName WeightMap; // 0x60
	TArray<FString> WeightMapsList; // 0x68
	bool bInvertWeightMap; // 0x78
};

struct UMaterialExpressionSceneDepth : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FExpressionInput Coordinates; // 0x58
	FVector2D ConstInput; // 0x6c
};

struct UAssetManager : UObject {
	TArray<UObject*> ObjectReferenceList; // 0x2c0
	bool bIsGlobalAsyncScanEnvironment; // 0x2d0
	bool bShouldGuessTypeAndName; // 0x2d1
	bool bShouldUseSynchronousLoad; // 0x2d2
	bool bIsLoadingFromPakFiles; // 0x2d3
	bool bShouldAcquireMissingChunksOnLoad; // 0x2d4
	bool bOnlyCookProductionAssets; // 0x2d5
	bool bIsBulkScanning; // 0x2d6
	bool bIsPrimaryAssetDirectoryCurrent; // 0x2d7
	bool bIsManagementDatabaseCurrent; // 0x2d8
	bool bUpdateManagementDatabaseAfterScan; // 0x2d9
	bool bIncludeOnlyOnDiskAssets; // 0x2da
	bool bHasCompletedInitialScan; // 0x2db
	int32_t NumberOfSpawnedNotifications; // 0x2dc
};

struct AWaterBody : AActor {
	UPhysicalMaterial* PhysicalMaterial; // 0x320
	float TargetWaveMaskDepth; // 0x328
	float MaxWaveHeightOffset; // 0x32c
	int32_t WaterBodyIndex; // 0x330
	bool bFillCollisionUnderWaterBodiesForNavmesh; // 0x334
	FUnderwaterPostProcessSettings UnderwaterPostProcessSettings; // 0x340
	EWaterBodyType WaterBodyType; // 0x8c0
	FWaterCurveSettings CurveSettings; // 0x8c8
	UMaterialInterface* WaterMaterial; // 0x8e8
	UMaterialInterface* UnderwaterPostProcessMaterial; // 0x8f0
	bool bAffectsLandscape; // 0x8f8
	bool bGenerateCollisions; // 0x8f9
	bool bOverrideWaterMesh; // 0x8fa
	UStaticMesh* WaterMeshOverride; // 0x900
	int32_t OverlapMaterialPriority; // 0x908
	FName CollisionProfileName; // 0x90c
	UWaterSplineComponent* SplineComp; // 0x918
	UWaterSplineMetadata* WaterSplineMetadata; // 0x920
	UMaterialInstanceDynamic* WaterMID; // 0x928
	UMaterialInstanceDynamic* UnderwaterPostProcessMID; // 0x930
	TArray<LazyObjectProperty> Islands; // 0x938
	TArray<LazyObjectProperty> ExclusionVolumes; // 0x948
	TWeakObjectPtr<ALandscapeProxy> Landscape; // 0x958
	FPostProcessSettings CurrentPostProcessSettings; // 0x960
	bool bCanAffectNavigation; // 0xec0
	UNavAreaBase* WaterNavAreaClass; // 0xec8
	UWaterWavesBase* WaterWaves; // 0xed0
	bool bHasWaveSpectrumSettings; // 0xed8
	bool bHasTerrainCarvingSettingsSettings; // 0xed9
};

struct UInAppPurchaseCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UUI_RadioButton : UUI_ButtonBase {
	int32_t RadioIndex; // 0x530
	bool bEnabled; // 0x534
	UUI_RadioButtonView* ParentView; // 0x538
};

struct UGuanAiBattleInfoSlot : USGUI {
	UTextBlock* TbName; // 0x2d8
	UTextBlock* TbOwnerGuildName; // 0x2e0
	UTextBlock* TbAttackGuildName; // 0x2e8
	UTextBlock* TbPlayerNum; // 0x2f0
	UTextBlock* TbProgress; // 0x2f8
	UTextBlock* TbResult; // 0x300
	UTextBlock* TbOverTime; // 0x308
	int32_t GuanAiId; // 0x310
};

struct UClientSaltInfo : UObject {
	ASGStructureSaltLand* CropLand; // 0x28
	float LastVisualUpdateTime; // 0x30
	float CurrentVisualScale; // 0x34
	float NexVisualScale; // 0x38
	float InnerScaleTolerance; // 0x3c
	UStaticMeshComponent* MeshComponent; // 0x40
};

struct UBakeTransformTool : UMultiSelectionTool {
	UBakeTransformToolProperties* BasicProperties; // 0x90
};

struct ALODActor : AActor {
	UStaticMeshComponent* StaticMeshComponent; // 0x310
	TMap<UMaterialInterface*, UInstancedStaticMeshComponent*> ImpostersStaticMeshComponents; // 0x318
	UHLODProxy* Proxy; // 0x368
	FName Key; // 0x370
	float LODDrawDistance; // 0x378
	int32_t LODLevel; // 0x37c
	TArray<AActor*> SubActors; // 0x380
	char CachedNumHLODLevels; // 0x390
};

struct USpaceDeformerOperatorFactory : UObject {
	UMeshSpaceDeformerTool* SpaceDeformerTool; // 0x30
};

struct ADestructableInstanceActor : AActor {
	USceneComponent* DefaultSceneRoot; // 0x310
	UHierarchicalInstancedStaticMeshComponent* AutoGenBlockSolider; // 0x318
};

struct UMaterialExpressionAntialiasedTextureMask : UMaterialExpressionTextureSampleParameter2D {
	float Threshold; // 0x80
	ETextureColorChannel Channel; // 0x84
};

struct UN_RemoteCraftInventorySlotPanel : UUserWidget {
	UN_RemoteCraftInventoryPanel* ParentUI; // 0x260
	UUniformGridPanel* InventoryGrid; // 0x268
};

struct UUVLayoutPreview : UObject {
	UUVLayoutPreviewProperties* Settings; // 0x28
	UPreviewMesh* PreviewMesh; // 0x30
	UTriangleSetComponent* TriangleComponent; // 0x38
	bool bShowBackingRectangle; // 0x40
	UMaterialInterface* BackingRectangleMaterial; // 0x48
};

struct UDatasmithDecalComponentTemplate : UDatasmithObjectTemplate {
	int32_t SortOrder; // 0x30
	FVector DecalSize; // 0x34
	UMaterialInterface* Material; // 0x40
};

struct UUI_ModifyVehiclePerk : USGUI {
	int32_t PerRowCount; // 0x2d8
	UVehiclePerkSlot* VehiclePerkSlotTemplate; // 0x2e0
	UUserWidget* EmptyPerkSlotTemplate; // 0x2e8
	UOptionButton* ForbidPlacePerkBtn; // 0x2f0
	UOptionButton* AllowPlacePerkBtn; // 0x2f8
	UOptionButton* SpecialPerkBtn; // 0x300
	UOptionButton* RecessivePerkBtn; // 0x308
	UUniformGridPanel* SelectedPerkPanel; // 0x310
	UUniformGridPanel* AllPerkPanel; // 0x318
	UButton* ConfirmBtn; // 0x320
	UButton* CancelBtn; // 0x328
	TWeakObjectPtr<ASG_HorseCharacter> BindHorseCharacter; // 0x330
	EVehiclePerkSlotType CurPerkSlotType; // 0x388
};

struct UPathFollowingComponent : UActorComponent {
	UNavMovementComponent* MovementComp; // 0xf8
	ANavigationData* MyNavData; // 0x108
};

struct UPrimaryAssetLabel : UPrimaryDataAsset {
	FPrimaryAssetRules Rules; // 0x30
	char bLabelAssetsInMyDirectory : 1; // 0x3c
	char bIsRuntimeLabel : 1; // 0x3c
	TArray<TSoftObjectPtr<UObject>> ExplicitAssets; // 0x40
	TArray<TSoftClassPtr<UObject>> ExplicitBlueprints; // 0x50
	FCollectionReference AssetCollection; // 0x60
};

struct UInterpTrackInstMove : UInterpTrackInst {
	FVector ResetLocation; // 0x28
	FRotator ResetRotation; // 0x34
};

struct UNiagaraDataInterfaceArray : UNiagaraDataInterface {
	int32_t MaxElements; // 0x40
};

struct UEraseBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct UPointLightComponent : ULocalLightComponent {
	char bUseInverseSquaredFalloff : 1; // 0x350
	float LightFalloffExponent; // 0x354
	float SourceRadius; // 0x358
	float SoftSourceRadius; // 0x35c
	float SourceLength; // 0x360
};

struct USGDamageType : UDamageType {
	FImpactEffectData ImpactEffectData; // 0x40
	char bIsMeleeAttack : 1; // 0x758
	char bDamageCropLand : 1; // 0x758
	char DebugDecal : 1; // 0x758
	char DebugStaticBloodDecal : 1; // 0x758
	TArray<USGBuff*> CentainlyBuffList; // 0x760
	float RandomAddBuffRate; // 0x770
	char bAllUseRandomAddBuffRate : 1; // 0x774
	TArray<FBuffEntry> RandomBuffList; // 0x778
	char bAddBuffToFriendly : 1; // 0x788
	TMap<AActor*, float> DamageAdjustMul; // 0x790
};

struct UParticleModuleRotationOverLifetime : UParticleModuleRotationBase {
	FRawDistributionFloat RotationOverLife; // 0x30
	char Scale : 1; // 0x60
};

struct UBlackboardKeyType_Enum : UBlackboardKeyType {
	UEnum* EnumType; // 0x30
	FString EnumName; // 0x38
	char bIsEnumNameValid : 1; // 0x48
};

struct UPaperTerrainMaterial : UDataAsset {
	TArray<FPaperTerrainMaterialRule> Rules; // 0x30
	UPaperSprite* InteriorFill; // 0x40
};

struct UNotificationFightSlot : UUserWidget {
	UImage* Image_Icon; // 0x268
	UTextBlock* Tb_Damage; // 0x270
	UTextBlock* Tb_DamageText; // 0x278
	USpacer* Spacer_2; // 0x280
	USpacer* Spacer_3; // 0x288
};

struct UNiagaraDataInterfaceArrayInt32 : UNiagaraDataInterfaceArray {
	TArray<int32_t> IntData; // 0x50
};

struct UOffsetMeshToolProperties : UInteractiveToolPropertySet {
	EOffsetMeshToolOffsetType OffsetType; // 0x60
	float Distance; // 0x64
	bool bCreateShell; // 0x68
};

struct UUI_InteractiveRadialMenu : USGUI {
	float IndexRaw; // 0x2d8
	char bInDeadzone : 1; // 0x2dc
	int32_t Index; // 0x2e0
	FVector2D CurrentInput; // 0x2e4
	float ItemOffsetRadius; // 0x300
	float MouseDeadZone; // 0x304
	float JoystickDeadzone; // 0x308
	int32_t Segments; // 0x30c
	char bAutoRotateForUp : 1; // 0x310
	char bAllowResizing : 1; // 0x310
	FMulticastInlineDelegate SelectionChanged; // 0x318
	UImage* MouseDirecct; // 0x328
	UImage* RadiusDebug; // 0x330
	UOverlay* RootOverlay; // 0x338
};

struct ASGStructureNPCRest : ASGStructure {
	float ReduceFoodDeltaTime; // 0xb98
	float PerReduceDeltaFood; // 0xb9c
	float PerReduceDeltaFoodWorking; // 0xba0
	TArray<USGItem*> AddStoreFoodTemplate; // 0xba8
	float StoreFoods; // 0xbb8
	FName ChunkSpawnSocketName; // 0xbc8
	TArray<FStructureSeatLinkChunkInfo> LinkChunkInfo; // 0xbd0
	float ServerCheckControlDistance; // 0xbe0
};

struct UGroomCreateStrandsTexturesOptions : UObject {
	int32_t Resolution; // 0x28
	EStrandsTexturesTraceType TraceType; // 0x2c
	float TraceDistance; // 0x30
	EStrandsTexturesMeshType MeshType; // 0x34
	UStaticMesh* StaticMesh; // 0x38
	USkeletalMesh* SkeletalMesh; // 0x40
	int32_t LODIndex; // 0x48
	int32_t SectionIndex; // 0x4c
	int32_t UVChannelIndex; // 0x50
	TArray<int32_t> GroupIndex; // 0x58
};

struct UARFaceGeometry : UARTrackedGeometry {
	FVector LookAtTarget; // 0xf8
	bool bIsTracked; // 0x104
	TMap<EARFaceBlendShape, float> BlendShapes; // 0x108
	FTransform LeftEyeTransform; // 0x190
	FTransform RightEyeTransform; // 0x1c0
};

struct UMaterialExpressionCosine : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct USGSoundEffectSourcePresetChain : USoundEffectSourcePresetChain {
	FSoundEffectSourcePresetChainIDArray ApplyEffectConfig[0x10]; // 0x40
};

struct UFixedPlaneBrushProperties : UInteractiveToolPropertySet {
	bool bPropertySetEnabled; // 0x60
	bool bShowGizmo; // 0x61
	bool bSnapToGrid; // 0x62
	FVector position; // 0x64
	FQuat Rotation; // 0x70
};

struct UDatasmithGLTFSceneImportData : UDatasmithSceneImportData {
	FString Generator; // 0x28
	float Version; // 0x38
	FString Author; // 0x40
	FString License; // 0x50
	FString Source; // 0x60
};

struct UMagicLeapImageTrackerComponent : USceneComponent {
	UTexture2D* TargetImageTexture; // 0x208
	FString Name; // 0x210
	float LongerDimension; // 0x220
	bool bIsStationary; // 0x224
	bool bUseUnreliablePose; // 0x225
	EMagicLeapImageTargetOrientation AxisOrientation; // 0x226
	FMulticastInlineDelegate OnSetImageTargetSucceeded; // 0x228
	FMulticastInlineDelegate OnSetImageTargetFailed; // 0x238
	FMulticastInlineDelegate OnImageTargetFound; // 0x248
	FMulticastInlineDelegate OnImageTargetLost; // 0x258
	FMulticastInlineDelegate OnImageTargetUnreliableTracking; // 0x268
};

struct UShadowMapTexture2D : UTexture2D {
	EShadowMapFlags ShadowmapFlags; // 0x100
};

struct ASGStructureLandBase : ASGStructureNPC {
	UStaticMeshComponent* CropLandOperateComponent; // 0x1010
	TArray<ASGStructure*> CanPlantCrops; // 0x1018
	FText CanPlantCropsTexts; // 0x1028
	char bWildCropLand : 1; // 0x1040
	float CropLandGrowthMultiplier; // 0x1044
	float MaxCropWater; // 0x1048
	float CropWater; // 0x104c
	float WaterUpdateInterval; // 0x1050
	float AutoUseWaterRatio; // 0x1054
	USGItem* WaterItemClass; // 0x1058
	float WeatherSupportWaterValue; // 0x1060
	float ContainerSupportWaterValue; // 0x1064
	USGItem* SeedItemClass; // 0x1068
	ASGStructureItemContainer* NearbyWaterStructureTemplate; // 0x1070
	float NearbyWaterStructureRange; // 0x1078
	ASGStructure* LinkedPerkStructure; // 0x1080
	char bWildCropLandHasOwner : 1; // 0x1088
};

struct UAbilityTask_WaitAttributeChangeThreshold : UAbilityTask {
	FMulticastInlineDelegate OnChange; // 0x80
	UAbilitySystemComponent* ExternalOwner; // 0xe8
};

struct UCreateStructureInfoPanel : UUserWidget {
	UTextBlock* SelectTypeText; // 0x260
	UTextBlock* SelectBindPointText; // 0x268
	UTextBlock* SelectRotationText; // 0x270
	UBorder* RotationBorder; // 0x278
	UBorder* UseBindPointBorder; // 0x280
	UTextBlock* UseBindPointText; // 0x288
	USGItem* CurrentItem; // 0x290
};

struct UMeshInspectorProperties : UInteractiveToolPropertySet {
	bool bWireframe; // 0x60
	bool bBoundaryEdges; // 0x61
	bool bBowtieVertices; // 0x62
	bool bPolygonBorders; // 0x63
	bool bUVSeams; // 0x64
	bool bUVBowties; // 0x65
	bool bNormalSeams; // 0x66
	bool bNormalVectors; // 0x67
	bool bTangentVectors; // 0x68
	float NormalLength; // 0x6c
	float TangentLength; // 0x70
};

struct UNiagaraDataInterfaceExport : UNiagaraDataInterface {
	FNiagaraUserParameterBinding CallbackHandlerParameter; // 0x38
	ENDIExport_GPUAllocationMode GPUAllocationMode; // 0x58
	int32_t GPUAllocationFixedSize; // 0x5c
	float GPUAllocationPerParticleSize; // 0x60
};

struct ASGStructureItemContainer : ASGStructure {
	char bCanActivate : 1; // 0xb98
	char bAutoActivateWhenFuel : 1; // 0xb98
	TArray<FActivateRequireData> ActivateRequireData; // 0xba0
	FText ContainerActivateString; // 0xbb0
	FText ContainerDeactivateString; // 0xbc8
	int32_t MaxActiveTemperature; // 0xbe0
	int32_t CurrentActiveTemperature; // 0xbe4
	char bOnlyUseExpireTimeMultipliersIfActivated : 1; // 0xbe8
	USGInventoryComponent* InventoryComponent; // 0xbf0
	FMulticastInlineDelegate OnItemContainerToggleActivate; // 0xbf8
	float LifeTime; // 0xc08
	char bIsDropItem : 1; // 0xc0c
	char bIsDeathDropItem : 1; // 0xc0c
	char bIsCommonDropItem : 1; // 0xc0c
	FTimerHandle DropItemTimer; // 0xc10
	FTimerHandle DestructionTimer; // 0xc18
	char bIsCharacterDeathItem : 1; // 0xc20
	FGuid DeathCharacterGuid; // 0xc24
	FVector DropItemContainerMergeRange; // 0xc34
	float CharacterDeathItemBrokenLifeSpan; // 0xc40
	char bCharacterDeathItemIsBroken : 1; // 0xc44
	FVector DropItemCurrentLocation; // 0xc48
	FVector DropActorUpVectorOffset; // 0xc54
	char bWillDestroy : 1; // 0xc60
	char bEmptyDestroy : 1; // 0xc60
	char bIsActivated : 1; // 0xc64
	FTimerHandle ActiveTimerHandle; // 0xc68
	USGItem* NextConsumeFuelGiveItem; // 0xc70
	double LastRefreshFuelStateTime; // 0xc78
	FString ContainerName; // 0xc80
	char bCanChangeName : 1; // 0xc90
	char bSpawnInventoryOnDestruction : 1; // 0xc90
	FVector SpawnInventoryOffsetLoc; // 0xc94
	float SpawnInventoryOnDestructionLifeSpan; // 0xca0
	float SavedNetOnDestructionTime; // 0xca4
	int64_t NetOnDestructionTimeTick; // 0xca8
	FName ActivatedSoundID; // 0xcb0
	FName DeActivatedSoundID; // 0xcb8
	FName WorkingSoundID; // 0xcc0
	char bSupportWater : 1; // 0xcc8
	char bShowLogs : 1; // 0xcc8
	int32_t LogMaxNum; // 0xccc
	TArray<FItemOptionLogInfo> StructureItemLogs; // 0xcd0
	uint32_t CurrentPassword; // 0xce0
	char bLockedByPassword : 1; // 0xce4
	char bXianChengMasterOperate : 1; // 0xcf0
	char bRemoveInventoryComponent : 1; // 0xcf0
	USGItem* LastFuelItem; // 0xcf8
	float OverridePreviewWidgetDistance; // 0xd00
	FVector OverridePreviewWidgetMeshLocationOffset; // 0xd04
	FRotator OverridePreviewWidgetMeshRotation; // 0xd10
	FRotator OverridePreviewWidgetCameraRotation; // 0xd1c
	UAnimMontage* OverridePreviewWidgetDefaultAnim; // 0xd28
	float OverridePreviewScale; // 0xd30
	UShapeComponent* AgainstEnvironmentComponent; // 0xd38
	char bIsAgainstEnvironmentStructure : 1; // 0xd40
	char bIsMoveableAgainstEnvironmentStructure : 1; // 0xd40
	FTimerHandle MoveableUpdateBoxHandle; // 0xd48
	float MoveableUpdateBoxDelta; // 0xd50
	EEnvironmentVolumeType AgainstEVType; // 0xd54
	char bDebug : 1; // 0xd55
	char bShowCustomFlag : 1; // 0xd55
	float TraceGroundHeight; // 0xd58
	char bPVEInOccupyOnlyInteractiveInventorySameTeam : 1; // 0xd5c
	USGAudioComponent* WorkingAudioComponent; // 0xd60
};

struct UOceanCollisionComponent : UPrimitiveComponent {
	UBodySetup* CachedBodySetup; // 0x488
};

struct UEnvQueryGenerator_Cone : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue AlignedPointsDistance; // 0x80
	FAIDataProviderFloatValue ConeDegrees; // 0xb8
	FAIDataProviderFloatValue AngleStep; // 0xf0
	FAIDataProviderFloatValue Range; // 0x128
	UEnvQueryContext* CenterActor; // 0x160
	char bIncludeContextLocation : 1; // 0x168
};

struct USGGameDataCreateStructureData : UObject {
	TArray<ASGStructure*> CreateStructureArray; // 0x28
};

struct AProceduralFoliageVolume : AVolume {
	UProceduralFoliageComponent* ProceduralComponent; // 0x348
};

struct UMaterialExpressionShadingModel : UMaterialExpression {
	EMaterialShadingModel ShadingModel; // 0x40
};

struct UParticleModuleRequired : UParticleModule {
	UMaterialInterface* Material; // 0x30
	float MinFacingCameraBlendDistance; // 0x38
	float MaxFacingCameraBlendDistance; // 0x3c
	FVector EmitterOrigin; // 0x40
	FRotator EmitterRotation; // 0x4c
	EParticleScreenAlignment ScreenAlignment; // 0x58
	char bUseLocalSpace : 1; // 0x59
	char bKillOnDeactivate : 1; // 0x59
	char bKillOnCompleted : 1; // 0x59
	EParticleSortMode SortMode; // 0x5a
	char bUseLegacyEmitterTime : 1; // 0x5b
	char bRemoveHMDRoll : 1; // 0x5b
	char bEmitterDurationUseRange : 1; // 0x5b
	float EmitterDuration; // 0x5c
	FRawDistributionFloat SpawnRate; // 0x60
	TArray<FParticleBurst> BurstList; // 0x90
	float EmitterDelay; // 0xa0
	float EmitterDelayLow; // 0xa4
	char bDelayFirstLoopOnly : 1; // 0xa8
	EParticleSubUVInterpMethod InterpolationMethod; // 0xa9
	char bScaleUV : 1; // 0xaa
	char bEmitterDelayUseRange : 1; // 0xaa
	EParticleBurstMethod ParticleBurstMethod; // 0xab
	char bOverrideSystemMacroUV : 1; // 0xac
	char bUseMaxDrawCount : 1; // 0xac
	EOpacitySourceMode OpacitySourceMode; // 0xad
	EEmitterNormalsMode EmitterNormalsMode; // 0xae
	char bOrbitModuleAffectsVelocityAlignment : 1; // 0xaf
	int32_t SubImages_Horizontal; // 0xb0
	int32_t SubImages_Vertical; // 0xb4
	float RandomImageTime; // 0xb8
	int32_t RandomImageChanges; // 0xbc
	FVector MacroUVPosition; // 0xc0
	float MacroUVRadius; // 0xcc
	EParticleUVFlipMode UVFlippingMode; // 0xd0
	ESubUVBoundingVertexCount BoundingMode; // 0xd1
	char bDurationRecalcEachLoop : 1; // 0xd2
	FVector NormalsSphereCenter; // 0xd4
	float AlphaThreshold; // 0xe0
	int32_t EmitterLoops; // 0xe4
	UTexture2D* CutoutTexture; // 0xe8
	int32_t MaxDrawCount; // 0xf0
	float EmitterDurationLow; // 0xf4
	FVector NormalsCylinderDirection; // 0xf8
	TArray<FName> NamedMaterialOverrides; // 0x108
};

struct UMovieSceneFolder : UObject {
	FName FolderName; // 0x28
	TArray<UMovieSceneFolder*> ChildFolders; // 0x30
	TArray<UMovieSceneTrack*> ChildMasterTracks; // 0x40
	TArray<FString> ChildObjectBindingStrings; // 0x50
};

struct USynthSound : USoundWaveProcedural {
	USynthComponent* OwningSynthComponent; // 0x3c0
};

struct UMovieSceneMaterialParameterCollectionTrack : UMovieSceneMaterialTrack {
	UMaterialParameterCollection* MPC; // 0x90
};

struct ABattleManager : AActor {
	TArray<FBattlePlayerInfo> GroupMembers; // 0x310
	TArray<FSetPlayerTaskInfo> SetPlayerTask; // 0x330
	bool bEnableBattle; // 0x340
	bool bEnableStatistics; // 0x341
	TArray<FBattleSoliderInfo> BattleSoliderInfos; // 0x348
	int32_t MaxVaildPointCheck; // 0x358
	float FinishCountDownTime; // 0x35c
	int32_t StartCountDownPlayerNum; // 0x360
	int32_t SelectThresholdPlayerNum; // 0x364
	int32_t PlayerInitCoin; // 0x368
	int32_t PlayerDeadGainCoin; // 0x36c
	int32_t KillPlayerGainCoin; // 0x370
	int32_t KillHorseGainCoin; // 0x374
	UTexture2D* CopperCoinIcon; // 0x378
	int32_t GuildSkillLevels[0x33]; // 0x380
};

struct UNavLinkComponent : UPrimitiveComponent {
	TArray<FNavigationLink> Links; // 0x490
};

struct UGameplayTagsList : UObject {
	FString ConfigFileName; // 0x28
	TArray<FGameplayTagTableRow> GameplayTagList; // 0x38
};

struct UCharacterRandomAppearanceWeight : UObject {
	float Sex[0x2]; // 0x28
	TArray<FAppearanceFloatWeightData> Height; // 0x30
	TArray<FAppearanceFloatWeightData> BodyFat; // 0x40
	TArray<FAppearanceFloatWeightData> strong; // 0x50
	TArray<FAppearanceFloatWeightData> Dirt; // 0x60
};

struct UPanelWidget : UWidget {
	TArray<UPanelSlot*> Slots; // 0x108
};

struct UMaterialExpression : UObject {
	UMaterial* Material; // 0x28
	UMaterialFunction* Function; // 0x30
	char bIsParameterExpression : 1; // 0x38
};

struct UCheckBoxStyleAsset : UObject {
	FCheckBoxStyle CheckBoxStyle; // 0x28
};

struct UCurveLinearColorAtlas : UTexture2D {
	uint32_t TextureSize; // 0x100
	TArray<UCurveLinearColor*> GradientCurves; // 0x108
};

struct USoundCue : USoundBase {
	char bPrimeOnLoad : 1; // 0x1b8
	USoundNode* FirstNode; // 0x1c0
	float VolumeMultiplier; // 0x1c8
	float PitchMultiplier; // 0x1cc
	FSoundAttenuationSettings AttenuationOverrides; // 0x1d0
	float SubtitlePriority; // 0x570
	char bOverrideAttenuation : 1; // 0x578
	char bExcludeFromRandomNodeBranchCulling : 1; // 0x578
	int32_t CookedQualityIndex; // 0x57c
	char bHasPlayWhenSilent : 1; // 0x580
};

struct AWeatherSnow : AActor {
	float SnowParticleIndex; // 0x318
	float ParticleSize; // 0x31c
	UParticleSystem* SnowParticle[0x3]; // 0x320
	UMaterialInterface* SnowMat[0x2]; // 0x338
	UTextureRenderTarget2D* OcclusionDepthTexture; // 0x348
};

struct UUI_AdminSubPanelGeneral : UUI_AdminSubPanel {
	UUI_AdminPlayerPanel* AdminPlayerPanel; // 0x2d8
	UScrollBox* ScrollBoxNpcList; // 0x2e0
	UEditableTextBox* SearchTextBoxNpc; // 0x2e8
	UUI_ServerAdminItemRow* ServerAdminItemRowTemplate; // 0x300
	UEditableTextBox* EditableTextBoxCreateLevel; // 0x308
	UEditableTextBox* EditableTextBoxCreateTameLevel; // 0x310
	UEditableTextBox* EditableTextBoxCreateTeamId; // 0x318
	UEditableTextBox* EditableTextBoxCreateNum; // 0x320
	UComboBoxString* ComboBoxGeneralQuality; // 0x328
	UCheckBox* CheckBoxIsTamed; // 0x330
	UCheckBox* CheckBoxIsHold; // 0x338
};

struct UHapticFeedbackEffect_Buffer : UHapticFeedbackEffect_Base {
	TArray<char> Amplitudes; // 0x28
	int32_t SampleRate; // 0x38
};

struct UNodeMappingContainer : UObject {
	TMap<FName, FNodeItem> SourceItems; // 0x28
	TMap<FName, FNodeItem> TargetItems; // 0x78
	TMap<FName, FName> SourceToTarget; // 0xc8
	TSoftObjectPtr<UObject> SourceAsset; // 0x118
	TSoftObjectPtr<UObject> TargetAsset; // 0x140
};

struct UMaterialExpressionFunctionOutput : UMaterialExpression {
	FName OutputName; // 0x40
	FString Description; // 0x48
	int32_t SortPriority; // 0x58
	FExpressionInput A; // 0x5c
	char bLastPreviewed : 1; // 0x70
	FGuid ID; // 0x74
};

struct UMaterialExpressionTransform : UMaterialExpression {
	FExpressionInput Input; // 0x40
	EMaterialVectorCoordTransformSource TransformSourceType; // 0x54
	EMaterialVectorCoordTransform TransformType; // 0x55
};

struct UMaterialExpressionVirtualTextureFeatureSwitch : UMaterialExpression {
	FExpressionInput No; // 0x40
	FExpressionInput Yes; // 0x54
};

struct UStandaloneMorphTarget : UObject {
	USkeletalMesh* BaseSkelMesh; // 0x28
};

struct UMagicLeapARPinComponent : USceneComponent {
	FString ObjectUID; // 0x208
	int32_t UserIndex; // 0x218
	EMagicLeapAutoPinType AutoPinType; // 0x21c
	bool bShouldPinActor; // 0x21d
	UMagicLeapARPinSaveGame* PinDataClass; // 0x220
	TSet<EMagicLeapARPinType> SearchPinTypes; // 0x228
	USphereComponent* SearchVolume; // 0x278
	FMulticastInlineDelegate OnPersistentEntityPinned; // 0x280
	FMulticastInlineDelegate OnPersistentEntityPinLost; // 0x290
	FMulticastInlineDelegate OnPinDataLoadAttemptCompleted; // 0x2a0
	FGuid PinnedCFUID; // 0x2b0
	USceneComponent* PinnedSceneComponent; // 0x2c0
	UMagicLeapARPinSaveGame* PinData; // 0x2c8
};

struct UBTTask_DoRelaxed : UBTTask_AnimalBase {
	float FarBrakingDistance; // 0xd0
	float ProjectToNavInterval; // 0xd4
	float LastProjectToNavTime; // 0xdc
	FVector DesiredLocationToNavigation; // 0xe0
};

struct UDragDropOperation : UObject {
	FString Tag; // 0x28
	UObject* Payload; // 0x38
	UWidget* DefaultDragVisual; // 0x40
	EDragPivot Pivot; // 0x48
	FVector2D Offset; // 0x4c
	FMulticastInlineDelegate OnDrop; // 0x58
	FMulticastInlineDelegate OnDragCancelled; // 0x68
	FMulticastInlineDelegate OnDragged; // 0x78
};

struct AVolumetricLightmapDensityVolume : AVolume {
	FInt32Interval AllowedMipLevelRange; // 0x348
};

struct UGameplayTasksComponent : UActorComponent {
	char bIsNetDirty : 1; // 0xcc
	TArray<UGameplayTask*> SimulatedTasks; // 0xd0
	TArray<UGameplayTask*> TaskPriorityQueue; // 0xe0
	TArray<UGameplayTask*> TickingTasks; // 0x100
	TArray<UGameplayTask*> KnownTasks; // 0x110
	FMulticastInlineDelegate OnClaimedResourcesChange; // 0x120
};

struct UAnimSharingAdditiveInstance : UAnimInstance {
	TWeakObjectPtr<USkeletalMeshComponent> BaseComponent; // 0x2c0
	TWeakObjectPtr<UAnimSequence> AdditiveAnimation; // 0x2c8
	float Alpha; // 0x2d0
	bool bStateBool; // 0x2d4
};

struct UHudSettings : UObject {
	char bShowHUD : 1; // 0x28
	TArray<FName> DebugDisplay; // 0x30
};

struct UNoviceRespawnPanel : UUserWidget {
	UButton* NoviceRespawnButton; // 0x260
	UTextBlock* TbNoviceCountDown; // 0x268
	UHorizontalBox* HbNoviceCountDown; // 0x270
};

struct UParticleModuleAttractorParticle : UParticleModuleAttractorBase {
	FName EmitterName; // 0x30
	FRawDistributionFloat Range; // 0x38
	char bStrengthByDistance : 1; // 0x68
	FRawDistributionFloat Strength; // 0x70
	char bAffectBaseVelocity : 1; // 0xa0
	EAttractorParticleSelectionMethod SelectionMethod; // 0xa4
	char bRenewSource : 1; // 0xa8
	char bInheritSourceVel : 1; // 0xa8
	int32_t LastSelIndex; // 0xac
};

struct UGuildBeInviteSlot : USGUI {
	UTextBlock* AllianceNameText; // 0x2d8
	UTextBlock* AllianceOwnerNameText; // 0x2e0
	UTextBlock* InviteInfoText; // 0x2e8
	UDataButton* AgreeDataButton; // 0x2f0
	UDataButton* RejectDataButton; // 0x2f8
};

struct UProgressBar : UWidget {
	FProgressBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x2a8
	USlateBrushAsset* BackgroundImage; // 0x2b0
	USlateBrushAsset* FillImage; // 0x2b8
	USlateBrushAsset* MarqueeImage; // 0x2c0
	float Percent; // 0x2c8
	EProgressBarFillType BarFillType; // 0x2cc
	bool bIsMarquee; // 0x2cd
	FVector2D BorderPadding; // 0x2d0
	FDelegate PercentDelegate; // 0x2d8
	FLinearColor FillColorAndOpacity; // 0x2e8
	FDelegate FillColorAndOpacityDelegate; // 0x2f8
};

struct USoundNodeLooping : USoundNode {
	int32_t LoopCount; // 0x48
	char bLoopIndefinitely : 1; // 0x4c
};

struct ASGWorldSettings : AWorldSettings {
	USGGameData* SGGameDataClass; // 0x498
	EBattleType BattleType; // 0x4a0
	bool bGenerateNpcEnable; // 0x4a1
	float WorldExtent; // 0x4a4
	FVector WorldTopLeftLoc; // 0x4a8
	FVector DefaultCameraLocation; // 0x4b4
	float MaxLogicActiveCheckRange; // 0x4c0
	TArray<ACameraActor*> CameraActorArray; // 0x4c8
	UTexture2D* MiniMapTexture; // 0x4d8
	float MapLengthInTexture; // 0x4e0
	FVector MapOriginPoint; // 0x4e4
	float InterpZoomSpeed; // 0x4f0
	float Zoom; // 0x4f4
	float MaxZoom; // 0x4f8
	float MinZoom; // 0x4fc
	float ZoomStep; // 0x500
	int32_t AnimationNotifyConfig[0x4]; // 0x504
	char bEnableLogicInactive : 1; // 0x8d0
	int32_t LogicInactiveFramePasses; // 0x928
	uint32_t IntervalLogicInactiveFrame; // 0x92c
	int32_t MaxActiveCharacterCount; // 0x934
	int32_t AddActiveCharacterCount; // 0x938
	int32_t MaxActiveStructureCount; // 0x940
	int32_t AddActiveStructureCount; // 0x944
};

struct UTraceBoxComponent : UBoxComponent {
	TArray<FBodyPartBox> ChildrenDataBox; // 0x4b0
	char bShowDebug : 1; // 0x4c0
	float ShowDebugTime; // 0x4c4
};

struct ADebugCameraController : APlayerController {
	char bShowSelectedInfo : 1; // 0x670
	char bIsFrozenRendering : 1; // 0x670
	char bIsOrbitingSelectedActor : 1; // 0x670
	char bOrbitPivotUseCenter : 1; // 0x670
	char bEnableBufferVisualization : 1; // 0x670
	char bEnableBufferVisualizationFullMode : 1; // 0x670
	char bIsBufferVisualizationInputSetup : 1; // 0x670
	char bLastDisplayEnabled : 1; // 0x670
	UDrawFrustumComponent* DrawFrustum; // 0x678
	AActor* SelectedActor; // 0x680
	UPrimitiveComponent* SelectedComponent; // 0x688
	FHitResult SelectedHitPoint; // 0x690
	APlayerController* OriginalControllerRef; // 0x720
	UPlayer* OriginalPlayer; // 0x728
	float SpeedScale; // 0x730
	float InitialMaxSpeed; // 0x734
	float InitialAccel; // 0x738
	float InitialDecel; // 0x73c
};

struct UBasicOverlays : UOverlays {
	TArray<FOverlayItem> Overlays; // 0x28
};

struct UKawaiiPhysicsLimitsDataAsset : UDataAsset {
	TArray<FSphericalLimit> SphericalLimits; // 0x30
	TArray<FCapsuleLimit> CapsuleLimits; // 0x40
	TArray<FPlanarLimit> PlanarLimits; // 0x50
};

struct UARPlaneComponent : UARComponent {
	FARPlaneUpdatePayload ReplicatedPayload; // 0x290
};

struct UGameplayEffectUIData_TextOnly : UGameplayEffectUIData {
	FText Description; // 0x28
};

struct UCompositeDataTable : UDataTable {
	TArray<UDataTable*> ParentTables; // 0xb0
	TArray<UDataTable*> OldParentTables; // 0xc0
};

struct UGuildEventToolTips : UUserWidget {
	UCanvasPanel* MainPanel; // 0x260
	UImage* GuildEventImg; // 0x268
	UTextBlock* GuildEventText; // 0x270
	float VisibilityTime; // 0x278
};

struct UAchievementQueryCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UMaterialExpressionIf : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput AGreaterThanB; // 0x68
	FExpressionInput AEqualsB; // 0x7c
	FExpressionInput ALessThanB; // 0x90
	float EqualsThreshold; // 0xa4
	float ConstB; // 0xa8
	float ConstAEqualsB; // 0xac
};

struct UReload_AnimNotify : UAnimNotify {
	char SpawnProjectile : 1; // 0x38
	char ClearAimState : 1; // 0x38
};

struct UStaticPOITips : UMiniMapPOITips {
	UTextBlock* TbName; // 0x288
	UImage* ImgIcon; // 0x290
};

struct UUI_Activity_Guanai : USGUI {
	UButton* BtShowCrossTransport; // 0x2d8
	UButton* BtShowBattle; // 0x2e0
	UButton* BtShowInventory; // 0x2e8
	UImage* CityMapImage; // 0x2f0
	UCanvasPanel* CityGuanAiPanel; // 0x2f8
	UScrollBox* GuanAiListPanel; // 0x300
	UCityFlagSlot* CityFlagSlot; // 0x308
	UButton* BtSwitchBigMap; // 0x310
	UButton* BtBattleInfo; // 0x318
	UGuanAiFlagSlot* GuanAiFlagSlotClass; // 0x320
	UGuanAiRowSlot* GuanAiRowSlotClass; // 0x328
	TWeakObjectPtr<UUI_JunGuanAiBattle> JunGuanAiBattleUI; // 0x330
	UUI_JunGuanAiBattle* JunGuanAiBattleUITemplate; // 0x338
};

struct UItemSellPanel : USGUI {
	UN_InventoryPanel* InventoryPanel; // 0x2d8
	UCanvasPanel* TipsPanel; // 0x2e0
	UN_InventorySlot* InventorySlot; // 0x2e8
	UN_EquipPanel* EquipPanel; // 0x2f0
	UButton* Button_Sell; // 0x2f8
	UButton* Button_Recall; // 0x300
	UButton* Button_Refresh; // 0x308
	UVerticalBox* ItemListVerticalBox; // 0x310
	UItemAuctionSlot* ItemAuctionSlotClass; // 0x318
	TWeakObjectPtr<UN_InventorySlot> PressedSlot; // 0x320
	TWeakObjectPtr<UItemAuctionSlot> ItemSlotSelected; // 0x328
	TWeakObjectPtr<UUI_GuildAuctionHouse> RootSGUI; // 0x330
};

struct UInteractiveToolsContext : UObject {
	UInputRouter* InputRouter; // 0x58
	UInteractiveToolManager* ToolManager; // 0x60
	UInteractiveGizmoManager* GizmoManager; // 0x68
	TSoftClassPtr<UObject> ToolManagerClass; // 0x70
};

struct UUI_PlayerShowSetting : USGUI {
	UUI_MenuHead* MenuHead; // 0x2d8
	UN_EquipPanel* EquipPanel; // 0x2e0
	UUI_PlayerShowSlot* SettingSlot_1; // 0x2e8
	UUI_PlayerShowSlot* SettingSlot_2; // 0x2f0
	UUI_PlayerShowSlot* SettingSlot_3; // 0x2f8
	UUI_PlayerShowSlot* SettingSlot_4; // 0x300
	UUI_PlayerShowSlot* SettingSlot_5; // 0x308
	UUI_PlayerShowSlot* SettingSlot_6; // 0x310
	UUI_PlayerShowSlot* SettingSlot_7; // 0x318
	UUI_PlayerShowSlot* SettingSlot_8; // 0x320
	UUniformGridPanel* AllPlayerShowGrid; // 0x328
	UUI_PlayerShowSlot* SlotTemplate; // 0x330
	int32_t CountsPerRow; // 0x338
	int32_t DefaultShowNum; // 0x33c
	int32_t ShowRow; // 0x340
	int32_t LastSlotIndex; // 0x344
	TArray<UUI_PlayerShowSlot*> SlotList; // 0x348
};

struct UInterpTrackInstBoolProp : UInterpTrackInstProperty {
	bool ResetBool; // 0x60
};

struct AOnlineBeaconClient : AOnlineBeacon {
	AOnlineBeaconHostObject* BeaconOwner; // 0x340
	UNetConnection* BeaconConnection; // 0x348
	EBeaconConnectionState ConnectionState; // 0x350
};

struct UAbilityTask_ApplyRootMotionConstantForce : UAbilityTask_ApplyRootMotion_Base {
	FMulticastInlineDelegate OnFinish; // 0xc0
	FVector WorldDirection; // 0xd0
	float Strength; // 0xdc
	float Duration; // 0xe0
	bool bIsAdditive; // 0xe4
	UCurveFloat* StrengthOverTime; // 0xe8
	bool bEnableGravity; // 0xf0
};

struct ADatasmithSceneActor : AActor {
	UDatasmithScene* Scene; // 0x310
	TMap<FName, TSoftObjectPtr<AActor>> RelatedActors; // 0x318
};

struct UPhysicsHandleComponent : UActorComponent {
	UPrimitiveComponent* GrabbedComponent; // 0xc0
	char bSoftAngularConstraint : 1; // 0xd0
	char bSoftLinearConstraint : 1; // 0xd0
	char bInterpolateTarget : 1; // 0xd0
	float LinearDamping; // 0xd4
	float LinearStiffness; // 0xd8
	float AngularDamping; // 0xdc
	float AngularStiffness; // 0xe0
	float InterpolationSpeed; // 0x150
};

struct UGuildStoreDetailPanel : USGUI {
	UTextBlock* StoreNoticeText; // 0x2d8
	UCanvasPanel* AuthorityCanvasPanel; // 0x2e0
	UButton* ChangeNoticeButton; // 0x2e8
	int32_t AuthorityGridCols; // 0x2f0
	UGuildAuthoritySlot* GuildAuthoritySlotClass; // 0x2f8
	UUI_ModifyText* ChangeNoticeUIOverride; // 0x300
	TArray<FGuildAuthorityShow> AuthorityShowList; // 0x308
	float ColumnDistance; // 0x318
	float RowDistance; // 0x31c
	FVector2D AuthoritySlotSize; // 0x320
};

struct UBaseBrushTool : UMeshSurfacePointTool {
	UBrushBaseProperties* BrushProperties; // 0xc0
	bool bInBrushStroke; // 0xc8
	float WorldToLocalScale; // 0xcc
	FBrushStampData LastBrushStamp; // 0xd0
	TSoftClassPtr<UObject> PropertyClass; // 0x190
	UBrushStampIndicator* BrushStampIndicator; // 0x1b8
};

struct UHorizonButtonUserWidget : UHorizonDesignableUserWidget {
	FMulticastInlineDelegate OnButtonClickedDelegate; // 0x260
	FMulticastInlineDelegate OnButtonPressedDelegate; // 0x270
	FMulticastInlineDelegate OnButtonReleasedDelegate; // 0x280
	FMulticastInlineDelegate OnButtonHoveredDelegate; // 0x290
	FMulticastInlineDelegate OnButtonUnhoveredDelegate; // 0x2a0
	FMulticastInlineDelegate OnButtonFocusDelegate; // 0x2b0
	FMulticastInlineDelegate OnButtonFocusLostDelegate; // 0x2c0
	UButton* Button_Main; // 0x378
	UTextBlock* TextBlock_Main; // 0x380
	UImage* Image_Main; // 0x388
	FText Text_Main; // 0x390
	FSlateBrush SlateBrush_ImageMain; // 0x3a8
	bool bFocusOnHovered; // 0x430
	bool bButtonFocused; // 0x431
};

struct USGShopData : UObject {
	UDataTable* ShopSquareItemDT; // 0x28
	UDataTable* ShopBannerDT; // 0x30
	UDataTable* ShopPropsDT; // 0x88
};

struct UMasterAudioSubmixCaptureProtocol : UMovieSceneAudioCaptureProtocolBase {
	FString Filename; // 0x58
};

struct UUI_SetGuildAuthority : USGUI {
	UCanvasPanel* AuthorityCanvasPanel; // 0x2d8
	UButton* ExitButton; // 0x2e0
	int32_t AuthorityGridCols; // 0x2e8
	UGuildAuthoritySlot* GuildAuthoritySlotClass; // 0x2f0
	TArray<FGuildAuthorityShow> AuthorityShowList; // 0x2f8
	float ColumnDistance; // 0x308
	float RowDistance; // 0x30c
	FVector2D AuthoritySlotSize; // 0x310
};

struct UAnimCompress_PerTrackCompression : UAnimCompress_RemoveLinearKeys {
	float MaxZeroingThreshold; // 0x60
	float MaxPosDiffBitwise; // 0x64
	float MaxAngleDiffBitwise; // 0x68
	float MaxScaleDiffBitwise; // 0x6c
	TArray<AnimationCompressionFormat> AllowedRotationFormats; // 0x70
	TArray<AnimationCompressionFormat> AllowedTranslationFormats; // 0x80
	TArray<AnimationCompressionFormat> AllowedScaleFormats; // 0x90
	char bResampleAnimation : 1; // 0xa0
	float ResampledFramerate; // 0xa4
	int32_t MinKeysForResampling; // 0xa8
	char bUseAdaptiveError : 1; // 0xac
	char bUseOverrideForEndEffectors : 1; // 0xac
	int32_t TrackHeightBias; // 0xb0
	float ParentingDivisor; // 0xb4
	float ParentingDivisorExponent; // 0xb8
	char bUseAdaptiveError2 : 1; // 0xbc
	float RotationErrorSourceRatio; // 0xc0
	float TranslationErrorSourceRatio; // 0xc4
	float ScaleErrorSourceRatio; // 0xc8
	float MaxErrorPerTrackRatio; // 0xcc
	float PerturbationProbeSize; // 0xd0
};

struct UButtonStyleAsset : UObject {
	FButtonStyle ButtonStyle; // 0x28
};

struct UConstantQNRTSettings : UAudioSynesthesiaNRTSettings {
	float StartingFrequency; // 0x28
	int32_t NumBands; // 0x2c
	float NumBandsPerOctave; // 0x30
	float AnalysisPeriod; // 0x34
	bool bDownmixToMono; // 0x38
	EConstantQFFTSizeEnum FFTSize; // 0x39
	EFFTWindowType WindowType; // 0x3a
	EAudioSpectrumType SpectrumType; // 0x3b
	float BandWidthStretch; // 0x3c
	EConstantQNormalizationEnum CQTNormalization; // 0x40
	float NoiseFloorDb; // 0x44
};

struct UGizmoAxisTranslationParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float Parameter; // 0xb0
	FGizmoFloatParameterChange LastChange; // 0xb4
	FVector CurTranslationAxis; // 0xbc
	FVector CurTranslationOrigin; // 0xc8
	FTransform InitialTransform; // 0xe0
};

struct AWaterBodyLake : AWaterBody {
	ULakeGenerator* LakeGenerator; // 0xee0
};

struct UUI_TransportMachineInventory : USGUI {
	UN_InventoryPanel* InventoryPanel; // 0x2d8
	UN_InventoryPanel* StorePanel; // 0x2e0
};

struct UWBP_MainMenu_AgeTips_C : UUserWidget {
	FPointerToUberGraphFrame UberGraphFrame; // 0x260
	UButton* Button_Close; // 0x268
	UImage* Image_1; // 0x270
	UImage* Image_2; // 0x278
	UImage* Image_3; // 0x280
	UImage* Image_4; // 0x288
	URichTextBlock* RichTextBlock_AgeTips; // 0x290
	URichTextBlock* RichTextBlock_AgeTips_2; // 0x298
};

struct UNiagaraDataInterfaceLandscape : UNiagaraDataInterface {
	AActor* SourceLandscape; // 0x38
};

struct UBTTask_MoveDirectlyToward : UBTTask_MoveTo {
	char bDisablePathUpdateOnGoalLocationChange : 1; // 0xb8
	char bProjectVectorGoalToNavigation : 1; // 0xb8
	char bUpdatedDeprecatedProperties : 1; // 0xb8
};

struct UInterpData : UObject {
	float InterpLength; // 0x28
	float PathBuildTime; // 0x2c
	TArray<UInterpGroup*> InterpGroups; // 0x30
	UInterpCurveEdSetup* CurveEdSetup; // 0x40
	float EdSectionStart; // 0x48
	float EdSectionEnd; // 0x4c
	char bShouldBakeAndPrune : 1; // 0x50
	UInterpGroupDirector* CachedDirectorGroup; // 0x58
	TArray<FName> AllEventNames; // 0x60
};

struct UPaperFlipbook : UObject {
	float FramesPerSecond; // 0x28
	TArray<FPaperFlipbookKeyFrame> KeyFrames; // 0x30
	UMaterialInterface* DefaultMaterial; // 0x40
	EFlipbookCollisionMode CollisionSource; // 0x48
};

struct UMaterialExpressionReroute : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct USoundNodeModulator : USoundNode {
	float PitchMin; // 0x48
	float PitchMax; // 0x4c
	float VolumeMin; // 0x50
	float VolumeMax; // 0x54
};

struct USoundSimple : USoundBase {
	TArray<FSoundVariation> Variations; // 0x1b8
	USoundWave* SoundWave; // 0x1c8
};

struct ADestructibleActor : AActor {
	UDestructibleComponent* DestructibleComponent; // 0x310
	FMulticastInlineDelegate OnActorFracture; // 0x318
};

struct UEquip_AnimNotify : UAnimNotify {
	char IsEquip : 1; // 0x38
};

struct UN_ItemCraftQueueSlot : UN_InventorySlot {
	UImage* CraftingImage; // 0xf80
	UCanvasPanel* InnerPanel; // 0xf88
	FVector4 GameInnerPanelOffset; // 0xf90
	char bIsClear : 1; // 0xfa0
	UProgressBar* CraftingProgressBar; // 0xfa8
	UTextBlock* RemaingingTimeText; // 0xfb0
};

struct ASGStructureDoor : ASGStructure {
	USceneComponent* MyDoorRootComponent; // 0xb98
	float RotationSpeed; // 0xba0
	float CurrentAngle; // 0xba4
	char bOpenByRotation : 1; // 0xba8
	char bOpenByUnRotation : 1; // 0xba8
	char bOpenCloseDirection : 1; // 0xba8
	char bSwitching : 1; // 0xba8
	char bIsLocked : 1; // 0xba8
	int8_t DoorSwitchState; // 0xba9
	char ClientDoorSwitchState; // 0xbaa
	char bDoubleDoor : 1; // 0xbab
	char bInitRotation : 1; // 0xbab
	char bRotateByPitch : 1; // 0xbab
	char bRotateByRoll : 1; // 0xbab
	char bRotateByYaw : 1; // 0xbab
	char bXianChengMasterOperate : 1; // 0xbab
	UStaticMeshComponent* DoubleDoorMesh; // 0xbb0
	FRotator DoubleDoorDefaultRotation; // 0xbb8
	FName OpenSoundID; // 0xbc4
	FName CloseSoundID; // 0xbcc
	char bCanSetPassword : 1; // 0xbd4
	uint32_t CurrentPassword; // 0xbd8
	char bLockedByPassword : 1; // 0xbdc
	double LastInputPwdFailedTime; // 0xbe0
};

struct UInterpTrackFade : UInterpTrackFloatBase {
	char bPersistFade : 1; // 0x90
	char bFadeAudio : 1; // 0x90
	FLinearColor FadeColor; // 0x94
};

struct USiegeTipsAmmoSlot : UUserWidget {
	UTextBlock* AmountText; // 0x270
	UBorder* SelectBorder; // 0x278
	UImage* ImgIcon; // 0x280
};

struct UUI_GuildShop : USGUI {
	UUniformGridPanel* InventoryGrid; // 0x2d8
	UButton* BuyButton; // 0x2e0
	UDataButton* DecNumDataButton; // 0x2e8
	UDataButton* AddNumDataButton; // 0x2f0
	UEditableText* SearchEditableText; // 0x2f8
	UGuildAuthorityComboBox* ComboSort; // 0x300
	USlider* BuyNumSlider; // 0x308
	UTextBlock* BuyNumText; // 0x310
	UTextBlock* GuildLevelText; // 0x318
	UTextBlock* PlayerLevelText; // 0x320
	UTextBlock* GongXunText; // 0x328
	UTextBlock* NeedGuildLevelText; // 0x330
	UTextBlock* NeedPlayerLevelText; // 0x338
	UTextBlock* NeedGongXunText; // 0x340
	UCanvasPanel* ToolTipsPanel; // 0x348
	UComboBoxString* ItemTypeComboBox; // 0x350
	UComboBoxString* ItemSubTypeComboBox; // 0x358
	UTextBlock* RefreshTimeTextBlock; // 0x360
	UCanvasPanel* DetailPanel; // 0x368
	int32_t CountsPerRow; // 0x370
	UN_InventorySlot* InventorySlotClass; // 0x378
	TMap<USGItem*, USGItem*> ItemsMap; // 0x3d0
	TWeakObjectPtr<UN_InventorySlot> PressedSlot; // 0x420
	TWeakObjectPtr<USGToolTipWidget> SGToolTipWidget; // 0x428
};

struct UUI_N_Shop : USGUI {
	UScrollBox* MainScrollBox; // 0x2d8
	UUI_N_Shop_MainBtn* HotSaleBtn; // 0x2e0
	UUI_N_Shop_MainBtn* FashionBtn; // 0x2e8
	UUI_N_Shop_MainBtn* PrivilegeBtn; // 0x2f0
	UTextBlock* GoldNumText; // 0x2f8
	UButton* RechargeBtn; // 0x300
	UUI_N_ShopBanner* BannerTemplate; // 0x308
	UUI_N_ShopBannerItem* BannerItemTemplate; // 0x310
	UUI_N_ShopItemRowHot* ItemRowHotTemplate; // 0x318
	UUI_N_ShopItemHot* ItemHotTemplate; // 0x320
	FMargin MainScrollBoxSlotPadding; // 0x328
	EShopUIMainIndex CurShowPage; // 0x338
};

struct UVehicleCampSlot : UUserWidget {
	UImage* ImgIcon; // 0x260
	UImage* StatusIcon; // 0x268
	UTextBlock* DesText; // 0x270
	UImage* DesImage; // 0x278
	UCanvasPanel* DesPanel; // 0x280
	UCanvasPanel* NormalPanel; // 0x288
	UBorder* OutBorder; // 0x290
	UImage* CampSlotBg; // 0x298
	UImage* QualityBg; // 0x2a0
	char bEnableClick : 1; // 0x2a8
	FText WarTypeDesText; // 0x2b0
	FText WorkOrRestTypeDesText; // 0x2c8
	FText DeathTypeDesText; // 0x2e0
	char bIsDesSlot : 1; // 0x2f8
	EWarType WarType; // 0x2f9
	TSoftObjectPtr<UTexture2D> WarDesImageTexture; // 0x300
	TSoftObjectPtr<UTexture2D> WorkOrRestDesImageTexture; // 0x328
	TSoftObjectPtr<UTexture2D> DeathDesImageTexture; // 0x350
	TWeakObjectPtr<ASG_AnimalVehicleCharacter> BindVehicleChar; // 0x378
	FBaseAnimalChunkData BindVehicleChunkData; // 0x380
	TSoftObjectPtr<UTexture2D> OutBorder_SelectTexture; // 0x430
	TSoftObjectPtr<UTexture2D> OutBorder_HoverTexture; // 0x458
	TSoftObjectPtr<UTexture2D> OutBorder_NormalTexture; // 0x480
	FMulticastInlineDelegate OnVehicleCampSlotPressed; // 0x4a8
	FMulticastInlineDelegate OnVehicleCampSlotReleased; // 0x4b8
	char IsHover : 1; // 0x4c8
	char bPressed : 1; // 0x4c8
	TSoftObjectPtr<UTexture2D> DBTypeStatusTexture; // 0x4d0
	TSoftObjectPtr<UTexture2D> GuildStoreTypeStatusTexture2D; // 0x4f8
	TSoftObjectPtr<UTexture2D> GrowingStatusTexture; // 0x520
	TSoftObjectPtr<UTexture2D> MatingStatusTexture; // 0x548
	TSoftObjectPtr<UTexture2D> PregnancyStatusTexture; // 0x570
	TSoftObjectPtr<UTexture2D> TrainingStatusTexture; // 0x598
	TSoftObjectPtr<UTexture2D> RidingStatusTexture; // 0x5c0
	TSoftObjectPtr<UTexture2D> RecoveryHPStatusTexture; // 0x5e8
	TSoftObjectPtr<UTexture2D> DiffServerStatusTexture; // 0x610
	TSoftObjectPtr<UTexture2D> WorkTypeStatusTexture; // 0x638
	TSoftObjectPtr<UTexture2D> ReborningStatusTexture; // 0x660
	TSoftObjectPtr<UTexture2D> DeathTypeStatusTexture; // 0x688
	TSoftObjectPtr<UTexture2D> UnKnownVehicleIcon; // 0x6b0
	TSoftObjectPtr<UTexture2D> VehicleIcons[0x5]; // 0x6d8
	TMap<EGeneralsQualityType, float> QualityCorrectionToQualityType; // 0x7a0
	TSoftObjectPtr<UTexture2D> VehicleQualityTexture[0x6]; // 0x7f0
	FText StatusTipText; // 0x8e0
};

struct UAISense_Sight : UAISense {
	int32_t MaxTracesPerTick; // 0x148
	int32_t MinQueriesPerTimeSliceCheck; // 0x14c
	double MaxTimeSlicePerTick; // 0x150
	float HighImportanceQueryDistanceThreshold; // 0x158
	float MaxQueryImportance; // 0x160
	float SightLimitQueryImportance; // 0x164
};

struct UReplicationGraphNode_GridCell : UReplicationGraphNode_ActorList {
	UReplicationGraphNode* DynamicNode; // 0x110
	UReplicationGraphNode_DormancyNode* DormancyNode; // 0x118
};

struct UMovieSceneGeometryCollectionSection : UMovieSceneSection {
	FMovieSceneGeometryCollectionParams Params; // 0xe8
};

struct UBTService_RunEQS : UBTService_BlackboardBase {
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0x98
};

struct UMultiTransformer : UObject {
	UInteractiveGizmoManager* GizmoManager; // 0x70
	UTransformGizmo* TransformGizmo; // 0xe0
	UTransformProxy* TransformProxy; // 0xe8
};

struct UMaterialExpressionCrossProduct : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UUI_N_Shop_MainBtn : UUI_PicBtn {
	EShopUIMainIndex BtnIndex; // 0x3f8
	TWeakObjectPtr<UUI_N_Shop> ParentWptr; // 0x3fc
};

struct UParticleModuleRotation_Seeded : UParticleModuleRotation {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UWeatherInterpData : UObject {
	bool bIsMainLoopInterp; // 0x28
};

struct UAbilityTask_WaitOverlap : UAbilityTask {
	FMulticastInlineDelegate OnOverlap; // 0x80
};

struct ASGStructureBed : ASGStructure {
	char bReSpawnOnlyOwner : 1; // 0xba0
	char bReSpawnDestroy : 1; // 0xba0
	FVector RespawnLocationOffset; // 0xba4
	FRotator RespawnRotOffset; // 0xbb0
	float CooldownTime; // 0xbbc
	float ConsumeHpWhenUsed; // 0xbc0
	int32_t BedID; // 0xbc4
	FString BedName; // 0xbc8
	double NextUseTime; // 0xbd8
};

struct UPropertyValue : UObject {
	TArray<TFieldPath<FProperty>> Properties; // 0x88
	TArray<int32_t> PropertyIndices; // 0x98
	TArray<FCapturedPropSegment> CapturedPropSegments; // 0xa8
	FString FullDisplayString; // 0xb8
	FName PropertySetterName; // 0xc8
	TMap<FString, FString> PropertySetterParameterDefaults; // 0xd0
	bool bHasRecordedData; // 0x120
	UObject* LeafPropertyClass; // 0x128
	TArray<char> ValueBytes; // 0x138
	EPropertyValueCategory PropCategory; // 0x148
};

struct UAnimSharingTransitionInstance : UAnimInstance {
	TWeakObjectPtr<USkeletalMeshComponent> FromComponent; // 0x2c0
	TWeakObjectPtr<USkeletalMeshComponent> ToComponent; // 0x2c8
	float BlendTime; // 0x2d0
	bool bBlendBool; // 0x2d4
};

struct AARSkyLight : ASkyLight {
	UAREnvironmentCaptureProbe* CaptureProbe; // 0x320
};

struct UMeleeAIAttackState : UBaseAIAttackState {
	TArray<AActor*> MeleeAttackIgnoreActors; // 0x58
	TArray<FName> MeleeAttackSocketNames; // 0x68
	FVector MeleeAttackBoxSize; // 0x78
	char bShowDebug : 1; // 0x84
	float ShowDebugTime; // 0x88
	TMap<FName, FMontageCustomCurve> MontageCustomCurveMap; // 0xa0
};

struct USoundNodeQualityLevel : USoundNode {
	int32_t CookedQualityLevelIndex; // 0x48
};

struct UWidgetInteractionComponent : USceneComponent {
	FMulticastInlineDelegate OnHoveredWidgetChanged; // 0x208
	int32_t VirtualUserIndex; // 0x228
	int32_t PointerIndex; // 0x22c
	ECollisionChannel TraceChannel; // 0x230
	float InteractionDistance; // 0x234
	EWidgetInteractionSource InteractionSource; // 0x238
	bool bEnableHitTesting; // 0x239
	bool bShowDebug; // 0x23a
	float DebugSphereLineThickness; // 0x23c
	float DebugLineThickness; // 0x240
	FLinearColor DebugColor; // 0x244
	FHitResult CustomHitResult; // 0x2d0
	FVector2D LocalHitLocation; // 0x35c
	FVector2D LastLocalHitLocation; // 0x364
	UWidgetComponent* HoveredWidgetComponent; // 0x370
	FHitResult LastHitResult; // 0x378
	bool bIsHoveredWidgetInteractable; // 0x404
	bool bIsHoveredWidgetFocusable; // 0x405
	bool bIsHoveredWidgetHitTestVisible; // 0x406
};

struct UMsgRow : UUserWidget {
	UHorizonDialogueMsgTextBlock* HDTextBlock; // 0x260
	FSlateColor BattleChannelNameColor; // 0x268
};

struct UWBP_ResolutionSettingComboBoxItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UComboBoxString* SettingComboBox; // 0x370
	UTextBlock* TbTitle; // 0x378
	FText Title; // 0x380
	int32_t SelectIndex; // 0x398
};

struct URig : UObject {
	TArray<FTransformBase> TransformBases; // 0x30
	TArray<FNode> Nodes; // 0x40
};

struct UMiniMapPOI_Mark : UMiniMapPOI {
	USGGameData* SGGameData; // 0x3d8
	FMiniMapMarkConfig MarkConfig; // 0x3e0
};

struct UMagicLeapARPinSaveGame : USaveGame {
	FGuid PinnedID; // 0x28
	FTransform ComponentWorldTransform; // 0x40
	FTransform PinTransform; // 0x70
	bool bShouldPinActor; // 0xa0
};

struct UWBP_GenericMultiItemSlot_C : UGenericMultiItemSlot {
	UImage* AddBg; // 0x2c0
	FString LocalString; // 0x2c8
};

struct UPendingNetGame : UObject {
	UNetDriver* NetDriver; // 0x30
	UDemoNetDriver* DemoNetDriver; // 0x38
};

struct UAttributeSlot : UUserWidget {
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x260
	EAttributeType AttributeType; // 0x268
	FSlateBrush AttributeProgressBrushBg[0xa]; // 0x270
	FSlateBrush AttributeProgressBrush[0xa]; // 0x7c0
	FText AttributeText[0xa]; // 0xd10
	UProgressBar* AttributeProgress; // 0xe00
	UTextBlock* ValueText; // 0xe08
	UTextBlock* TitleText; // 0xe10
};

struct UHelpTipsSlot : UUserWidget {
	UBorder* Border; // 0x260
	UTextBlock* LeftText; // 0x268
	UTextBlock* RightText; // 0x270
	UTextBlock* BorderText; // 0x278
	UProgressBar* CDProgressBar; // 0x280
	FHelpTipsSlotSetting TipsSetting; // 0x288
	char bIsLeft : 1; // 0x2f8
	FName ActionName[0x23]; // 0x2fc
	TArray<FName> ChangeSeatActionName; // 0x418
	TSoftObjectPtr<UTexture2D> LeftButtonTexture; // 0x428
	TSoftObjectPtr<UTexture2D> RightButtonTexture; // 0x450
	TSoftObjectPtr<UTexture2D> MiddleButtonTexture; // 0x478
	TMap<FString, FText> OutMapingText; // 0x4a0
	TSoftObjectPtr<UTexture2D> ActiveBorderTex; // 0x4f0
	TSoftObjectPtr<UTexture2D> NormalBorderTex; // 0x518
	char bBorderActive : 1; // 0x540
	TArray<EHelpTipInstructions> NeedTickType; // 0x548
	EHelpTipInstructions BindType; // 0x558
	FText AltText; // 0x560
	FText ShiftText; // 0x578
	FText CmdText; // 0x590
	FText CtrlText; // 0x5a8
	int32_t BindChangeSeatIndex; // 0x5c0
};

struct UUI_StructureOccupyTaxPanel : UUserWidget {
	UTextBlock* NameText; // 0x260
	UTextBlock* LevelText; // 0x268
	UTextBlock* HPText; // 0x270
	UProgressBar* HPProgressBar; // 0x278
	UTextBlock* InnerText; // 0x280
	UTextBlock* OuterText; // 0x288
	UTextBlock* StructureNumText; // 0x290
	UTextBlock* MultiText; // 0x298
	UTextBlock* StatusText; // 0x2a0
	UButton* UpdateButton; // 0x2a8
	UTextBlock* UpdateButtonText; // 0x2b0
	UUniformGridPanel* UpdateGrid; // 0x2b8
	UButton* BuyProtectionButton; // 0x2c0
	UButton* ProtectionButton; // 0x2c8
	UTextBlock* ProtectionButtonText; // 0x2d0
	UUniformGridPanel* ProtectionGrid; // 0x2d8
	UBorder* OccupyBorderBG; // 0x2e0
	UBorder* UpdateBorder; // 0x2e8
	FSlateBrush ProtectionBrush; // 0x2f0
	FSlateBrush UnProtectionBrush; // 0x378
	UUI_StructureOccupyItemSlot* InventorySlotClass; // 0x400
	TWeakObjectPtr<ASGStructureOccupy> RemoteActor; // 0x408
	USGUI* RootSGUI; // 0x410
};

struct UTireType : UDataAsset {
	float FrictionScale; // 0x30
};

struct USkeletalMeshLODSettings : UDataAsset {
	FPerPlatformInt MinLOD; // 0x30
	FPerPlatformBool DisableBelowMinLodStripping; // 0x34
	bool bOverrideLODStreamingSettings; // 0x35
	FPerPlatformBool bSupportLODStreaming; // 0x36
	FPerPlatformInt MaxNumStreamedLODs; // 0x38
	FPerPlatformInt MaxNumOptionalLODs; // 0x3c
	TArray<FSkeletalMeshLODGroupSettings> LODGroups; // 0x40
};

struct UTextureRenderTarget2DArray : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	int32_t Slices; // 0xe8
	FLinearColor ClearColor; // 0xec
	EPixelFormat OverrideFormat; // 0xfc
	char bHDR : 1; // 0xfd
	char bForceLinearGamma : 1; // 0xfd
};

struct UGroupEdgeInsertionOperatorFactory : UObject {
	UGroupEdgeInsertionTool* Tool; // 0x30
};

struct UNavigationSystemConfig : UObject {
	FSoftClassPath NavigationSystemClass; // 0x28
	FNavAgentSelector SupportedAgentsMask; // 0x40
	FName DefaultAgentName; // 0x44
	char bIsOverriden : 1; // 0x4c
};

struct ATransformGizmoActor : AGizmoActor {
	UPrimitiveComponent* TranslateX; // 0x310
	UPrimitiveComponent* TranslateY; // 0x318
	UPrimitiveComponent* TranslateZ; // 0x320
	UPrimitiveComponent* TranslateYZ; // 0x328
	UPrimitiveComponent* TranslateXZ; // 0x330
	UPrimitiveComponent* TranslateXY; // 0x338
	UPrimitiveComponent* RotateX; // 0x340
	UPrimitiveComponent* RotateY; // 0x348
	UPrimitiveComponent* RotateZ; // 0x350
	UPrimitiveComponent* UniformScale; // 0x358
	UPrimitiveComponent* AxisScaleX; // 0x360
	UPrimitiveComponent* AxisScaleY; // 0x368
	UPrimitiveComponent* AxisScaleZ; // 0x370
	UPrimitiveComponent* PlaneScaleYZ; // 0x378
	UPrimitiveComponent* PlaneScaleXZ; // 0x380
	UPrimitiveComponent* PlaneScaleXY; // 0x388
};

struct UBTDecorator_BlackboardBase : UBTDecorator {
	FBlackboardKeySelector BlackboardKey; // 0x68
};

struct UHuangLiAllEffectsPanel : UUserWidget {
	UHuangLiEffectsView* XingShenView; // 0x260
	UHuangLiEffectsView* XingXiuView; // 0x268
	UHuangLiEffectsView* JianChuView; // 0x270
	UButton* BackButton; // 0x278
};

struct UUI_ModifyText : USGUI {
	UTextBlock* TitleTextBlock; // 0x2d8
	UTextBlock* MaxLenTextBlock; // 0x2e0
	UTextBlock* FilterWordTextBlock; // 0x2e8
	UWidget* EditableTextBox; // 0x2f0
	UButton* CancelButton; // 0x2f8
	UButton* SubmitButton; // 0x300
	FSlateColor MaxLenTextNormalColor; // 0x308
	FSlateColor MaxLenTextInValidColor; // 0x330
};

struct UAREnvironmentCaptureProbeTexture : UTextureCube {
	EARTextureType TextureType; // 0x130
	float Timestamp; // 0x134
	FGuid ExternalTextureGuid; // 0x138
	FVector2D Size; // 0x148
};

struct UMRMeshComponent : UPrimitiveComponent {
	UMaterialInterface* Material; // 0x498
	UMaterialInterface* WireframeMaterial; // 0x4a0
	bool bCreateMeshProxySections; // 0x4a8
	bool bUpdateNavMeshOnMeshUpdate; // 0x4a9
	bool bNeverCreateCollisionMesh; // 0x4aa
	UBodySetup* CachedBodySetup; // 0x4b0
	TArray<UBodySetup*> BodySetups; // 0x4b8
};

struct UParticleModuleParameterDynamic_Seeded : UParticleModuleParameterDynamic {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x48
};

struct UBaseMeshProcessingTool : USingleSelectionTool {
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xb0
};

struct UHuangLiEffectSlot : UUserWidget {
	UTextBlock* TitleText; // 0x260
	UVerticalBox* EffectsBox; // 0x268
	UHuangLiEffectText* EffectTextClass; // 0x270
};

struct UDistributionVectorConstantCurve : UDistributionVector {
	FInterpCurveVector ConstantCurve; // 0x38
	char bLockAxes : 1; // 0x50
	EDistributionVectorLockFlags LockedAxes; // 0x54
};

struct UUIWSGerstnerWaterWaveGeneratorSpectrum : UUIWSGerstnerWaterWaveGeneratorBase {
	EUIWSWaveSpectrumType SpectrumType; // 0x28
	TArray<FUIWSGerstnerWaveOctave> Octaves; // 0x30
};

struct UPlayMontageCallbackProxy : UObject {
	FMulticastInlineDelegate OnCompleted; // 0x28
	FMulticastInlineDelegate OnBlendOut; // 0x38
	FMulticastInlineDelegate OnInterrupted; // 0x48
	FMulticastInlineDelegate OnNotifyBegin; // 0x58
	FMulticastInlineDelegate OnNotifyEnd; // 0x68
};

struct UAddPrimitiveTool : USingleClickTool {
	UProceduralShapeToolProperties* ShapeSettings; // 0x90
	UNewMeshMaterialProperties* MaterialProperties; // 0x98
	UPreviewMesh* PreviewMesh; // 0xa0
	ULastActorInfo* LastGenerated; // 0xa8
	FString AssetName; // 0xb0
};

struct UMovieSceneAudioSection : UMovieSceneSection {
	USoundBase* Sound; // 0xe8
	FFrameNumber StartFrameOffset; // 0xf0
	float StartOffset; // 0xf4
	float AudioStartTime; // 0xf8
	float AudioDilationFactor; // 0xfc
	float AudioVolume; // 0x100
	FMovieSceneFloatChannel SoundVolume; // 0x108
	FMovieSceneFloatChannel PitchMultiplier; // 0x1a8
	FMovieSceneActorReferenceData AttachActorData; // 0x248
	bool bLooping; // 0x2f8
	bool bSuppressSubtitles; // 0x2f9
	bool bOverrideAttenuation; // 0x2fa
	USoundAttenuation* AttenuationSettings; // 0x300
	FDelegate OnQueueSubtitles; // 0x308
	FMulticastInlineDelegate OnAudioFinished; // 0x318
	FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x328
};

struct UEnvQueryNode : UObject {
	int32_t VerNum; // 0x28
};

struct UInterpTrackInstFloatAnimBPParam : UInterpTrackInst {
	UAnimInstance* AnimScriptInstance; // 0x28
	float ResetFloat; // 0x30
};

struct UGameplayTagsDeveloperSettings : UDeveloperSettings {
	FString DeveloperConfigName; // 0x38
	FName FavoriteTagSource; // 0x48
};

struct UDestructibleComponent : USkinnedMeshComponent {
	char bFractureEffectOverride : 1; // 0x6e0
	TArray<FFractureEffect> FractureEffects; // 0x6e8
	bool bEnableHardSleeping; // 0x6f8
	float LargeChunkThreshold; // 0x6fc
	FMulticastInlineDelegate OnComponentFracture; // 0x710
	char bUseApexDestructibleActor : 1; // 0x7b4
};

struct UTextureRenderTargetCube : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	FLinearColor ClearColor; // 0xe4
	EPixelFormat OverrideFormat; // 0xf4
	char bHDR : 1; // 0xf5
	char bForceLinearGamma : 1; // 0xf5
};

struct UBorderSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x48
	EVerticalAlignment VerticalAlignment; // 0x49
};

struct UScrollBarWidgetStyle : USlateWidgetStyleContainerBase {
	FScrollBarStyle ScrollBarStyle; // 0x30
};

struct USculptMaxBrushProperties : UInteractiveToolPropertySet {
	float MaxHeight; // 0x60
	bool bFreezeCurrentHeight; // 0x64
};

struct ASGStructureSeat : ASGStructureItemContainer {
	TWeakObjectPtr<ABaseCharacter> SeatedCharacter; // 0xd68
	int32_t NumSeats; // 0xd70
	TMap<int32_t, FVector> CheckCanSeatBoxCollision; // 0xd78
	FVector SeatedCharacterLocationOffset; // 0xdc8
	FRotator SeatedCharacterRotationOffset; // 0xdd4
	TArray<FName> SeatSocketName; // 0xde0
	TArray<UAnimMontage*> SocketWorkingMontage; // 0xdf0
	FPassengerAnimsConfig PassengerAnimsConfig; // 0xe00
	UAnimMontage* SeatWorkingMontage; // 0xe10
	int32_t SeatNumToWorkingMontage; // 0xe18
	char bGeneralAttachToSkeletalMesh : 1; // 0xe1c
	TArray<ABaseCharacter*> AllSeatedCharacter; // 0xe20
	TArray<ABaseCharacter*> SaveGameAllSeatedCharacter; // 0xe40
	TArray<ABaseCharacter*> SetKilledCharacter; // 0xe50
	float GeneralSiegeDamageMulAdd; // 0xe60
	char bUseSkeletalMesh : 1; // 0xe64
	char bIsSeatPossess : 1; // 0xe64
	FName RideSoundID; // 0xe68
	FName UnRideSoundID; // 0xe70
	FName StartSeatWorkSoundID; // 0xe78
	FName SeatWorkingSoundID; // 0xe80
	FName StopSeatWorkSoundID; // 0xe88
	TWeakObjectPtr<ASGPlayerController> WantDemolishPC; // 0xe90
	float ServerCheckControlDistance; // 0xe98
	char bCheckRelease : 1; // 0xe9c
	char bReleaseInOriginLocation : 1; // 0xe9c
	float ReleaseForwardMoveDistance; // 0xea0
	char bCanPlayerUse : 1; // 0xea4
	ESkillType SkillType; // 0xea5
	char bSeatUnEquipWeapon : 1; // 0xea6
	char bNPCSeatUnEquipWeapon : 1; // 0xea6
	char bNPCReleaseEquipWeapon : 1; // 0xea6
	char bNPCSeatDestroyController : 1; // 0xea6
	FName ReleaseSocket; // 0xea8
	TArray<USGItem*> SupportControllerItemClassList; // 0xeb0
	char bShowStructureArea : 1; // 0xec0
	char bToggleStructureArea : 1; // 0xec0
	float StructureAreaRadius; // 0xec4
	float SetAreaRadiusSpeed; // 0xec8
	float AreaScaleTarget; // 0xecc
	UStaticMeshComponent* StructureAreaComponent; // 0xed8
	char bIsSentryTower : 1; // 0xee0
	char bIsSentryActive : 1; // 0xee0
	float SentryRadius; // 0xee4
	FTimerHandle CheckSentryTimeHandle; // 0xee8
	float CheckSentryTimeInterval; // 0xef0
	char bDebugSentrySphere : 1; // 0xef4
	TArray<TWeakObjectPtr<ABaseCharacter>> SentrySawBaseCharacters; // 0xef8
	float PassagerHeadExtraHeight; // 0xf08
	float SeatHungerAdd; // 0xf0c
	char bWorkNeedCheckInventoryFood : 1; // 0xf10
	float SeatWorkHungerAdd; // 0xf14
	FTimerHandle SeatTimerHandle; // 0xf18
	FTimerHandle SeatWorkerUpdateTimerHandle; // 0xf20
	char bIsWorking : 1; // 0xf28
	float UpdateDataInterval; // 0xf2c
	char bIsCreateAlwaysWork : 1; // 0xf30
	char bStructureWorkWaitCharacter : 1; // 0xf30
	char bStructureHasCharacterWaitWork : 1; // 0xf30
	char bWorkingCondition : 1; // 0xf30
	FMulticastInlineDelegate OnStructureSeat; // 0xf38
	FMulticastInlineDelegate OnStructureRelease; // 0xf48
	TArray<FInstrumentAnimType> InstrumentAnimConfig; // 0xf58
	USGAudioComponent* SeatWorkingAudioComponent; // 0xf68
};

struct UColorTemplate : UUserWidget {
	UButton* BtnBg; // 0x260
	UImage* ImgColor; // 0x268
	FVector2D BindColor; // 0x270
};

struct UGuildStoreGeneralItem : UUserWidget {
	FButtonStyle ButtonCheckedStyle; // 0x260
	FButtonStyle ButtonUnCheckedStyle; // 0x4d8
	UButton* BtSelected; // 0x750
	UTextBlock* TbNameName; // 0x758
	UTextBlock* TbLevel; // 0x760
	UTextBlock* TbStatue; // 0x768
};

struct UUI_GenericConfirmationDialog : USGUI {
	FGenericConfirmationParam BindGenericConfirmationParams; // 0x2e8
	UButton* AcceptButton; // 0x368
	UButton* CancelButton; // 0x370
	UButton* CancelButton2; // 0x378
	UTextBlock* TitleTextBlock; // 0x380
	UTextBlock* TimerTextBlock; // 0x388
	URichTextBlock* MessageTextBlock; // 0x390
	UTextBlock* AcceptButtonTextBlock; // 0x398
	UTextBlock* CancelButtonTextBlock; // 0x3a0
	UImage* AllBg; // 0x3a8
	UCanvasPanel* CancelButtonPanel; // 0x3b0
	UCanvasPanel* ItemCheckPanel; // 0x3b8
	UUniformGridPanel* ItemGrid; // 0x3c0
	UCheckBox* CheckBoxSelected; // 0x3c8
	URichTextBlock* CheckBoxSelectedTextBlock; // 0x3d0
	int32_t MaxShowItemAmount; // 0x3e0
	int32_t CurRowCounts; // 0x3e4
	UGenericConfirmationCheckItemSlot* CheckItemTemplate; // 0x3e8
	TArray<UGenericConfirmationCheckItemSlot*> CheckItemSlotList; // 0x3f0
};

struct UParticleModuleLocationPrimitiveSphere : UParticleModuleLocationPrimitiveBase {
	FRawDistributionFloat StartRadius; // 0xb0
};

struct UAnimalFarmDropSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> OutBorder_NormalTexture; // 0x260
	TSoftObjectPtr<UTexture2D> OutBorder_HoverTexture; // 0x288
	UImage* ImgIcon; // 0x2b0
	UTextBlock* NumText; // 0x2b8
	UBorder* OutBorder; // 0x2c0
	TWeakObjectPtr<USGItem> BindDropItem; // 0x2c8
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x2d0
	USGUI* RootSGUI; // 0x2d8
	char IsHover : 1; // 0x2e0
};

struct ANatureWeatherAreaVolume : AVolume {
	UWeatherControlComponent* Component; // 0x348
};

struct UListViewBase : UWidget {
	UUserWidget* EntryWidgetClass; // 0x108
	float WheelScrollMultiplier; // 0x110
	bool bEnableScrollAnimation; // 0x114
	bool bEnableFixedLineOffset; // 0x115
	float FixedLineScrollOffset; // 0x118
	FMulticastInlineDelegate BP_OnEntryGenerated; // 0x120
	FMulticastInlineDelegate BP_OnEntryReleased; // 0x130
	FUserWidgetPool EntryWidgetPool; // 0x140
};

struct UWBP_ProducerName_7_C : UUserWidget {
	UWBP_ProducerSlot_C* WBP_ProducerSlot; // 0x260
	UWBP_ProducerSlot_C* WBP_ProducerSlot_2; // 0x268
	UWBP_ProducerSlot_C* WBP_ProducerSlot_3; // 0x270
	UWBP_ProducerSlot_C* WBP_ProducerSlot_4; // 0x278
	UWBP_ProducerSlot_C* WBP_ProducerSlot_5; // 0x280
	UWBP_ProducerSlot_C* WBP_ProducerSlot_6; // 0x288
	UWBP_ProducerSplitLine_C* WBP_ProducerSplitLine; // 0x290
};

struct APhysicsThruster : ARigidBodyBase {
	UPhysicsThrusterComponent* ThrusterComponent; // 0x310
};

struct ACameraShakeSourceActor : AActor {
	UCameraShakeSourceComponent* CameraShakeSourceComponent; // 0x310
};

struct UProceduralSphericalBoxToolProperties : UProceduralShapeToolProperties {
	float Radius; // 0x70
	int32_t Subdivisions; // 0x74
};

struct ASGStructureRecoveryProjectile : ASGStructureItemContainer {
	float RecoveryRate; // 0xd68
	char bRecoveryFriend : 1; // 0xd6c
	char bRecoveryOthers : 1; // 0xd6c
	TArray<EAmmoType> CanRecoveryAmmoType; // 0xd70
	char bCanRecoveryThrowWeapon : 1; // 0xd80
};

struct UCapsuleComponent : UShapeComponent {
	float CapsuleHalfHeight; // 0x4a0
	float CapsuleRadius; // 0x4a4
};

struct UInterpGroupCamera : UInterpGroup {
	UCameraAnim* CameraAnimInst; // 0x50
	float CompressTolerance; // 0x58
};

struct USGGameDataClothMask : UObject {
	UTexture2D* NoMaskTexture; // 0x28
	TMap<USkeletalMesh*, FClothMaskConfig> ClothMaskMap; // 0x30
};

struct UUI_GuildAuctionHouse : USGUI {
	UButton* EscButton; // 0x2d8
	UButton* ButtonItem; // 0x2e0
	UButton* ButtonGeneral; // 0x2e8
	UButton* ButtonHorse; // 0x2f0
	UButton* ButtonDealDone; // 0x2f8
	UButton* ButtonBuy; // 0x300
	UButton* ButtonSell; // 0x308
	UButton* ButtonOrder; // 0x310
	UCanvasPanel* CanvasPanel_Item; // 0x318
	UCanvasPanel* CanvasPanel_General; // 0x320
	UCanvasPanel* CanvasPanel_Horse; // 0x328
	UCanvasPanel* CanvasPanel_ItemSell; // 0x330
	UCanvasPanel* CanvasPanel_ItemAuction; // 0x338
	UCanvasPanel* CanvasPanel_ItemOrder; // 0x340
	UCanvasPanel* CanvasPanel_DealDone; // 0x348
	UItemAuctionPanel* ItemAuctionPanel; // 0x350
	UItemSellPanel* ItemAuctionSellPanel; // 0x358
	UItemAuctionOrderPanel* ItemAuctionOrderPanel; // 0x360
	UItemAuctionDealDonePanel* ItemAuctionDealDonePanel; // 0x368
	UCanvasPanel* CanvasPanel_HorseSell; // 0x370
	UHorseAuctionSellPanel* HorseAuctionSellPanel; // 0x378
	UCanvasPanel* CanvasPanel_HorseBuy; // 0x380
	UHorseAuctionPanel* HorseAuctionPanel; // 0x388
	UCanvasPanel* CanvasPanel_GeneralSell; // 0x390
	UGeneralAuctionSellPanel* GeneralAuctionSellPanel; // 0x398
	UCanvasPanel* CanvasPanel_GeneralBuy; // 0x3a0
	UGeneralAuctionPanel* GeneralAuctionPanel; // 0x3a8
	UTextBlock* TextBlock_Capital; // 0x3b0
	UTextBlock* TextBlock_Name; // 0x3b8
	UCanvasPanel* CanvasPanel_RadioView; // 0x3c0
	UItemAuctionSellConfirmPanel* ItemAuctionSellConfirmPanel; // 0x3c8
	UCanvasPanel* CanvasPanel_SellConfirm; // 0x3d0
	UCanvasPanel* CanvasPanel_BuyConfirm; // 0x3d8
	UItemAuctionBuyConfirmPanel* ItemAuctionBuyConfirmPanel; // 0x3e0
	TWeakObjectPtr<ASGStructure> OnwerStructure; // 0x3f0
};

struct ASGPlayerState : APlayerState {
	TWeakObjectPtr<UBasePlayerData> BasePlayerDataPtr; // 0x418
	char bGuildAsyncWaiting : 1; // 0x4d0
	char bGuildOwner : 1; // 0x4e0
	FGuildDetailData MyGuildDetailData; // 0x4e8
	FGuildBriefData MyGuildBriefData; // 0x7f8
	char bAllianceOwner : 1; // 0x8d0
	TMap<FGuid, FGuildBriefData> AllGuildBriefDatas; // 0x8d8
	TMap<FGuid, FAllianceDetailData> MyAllianceDetailDatas; // 0x928
	TMap<FGuid, FAllianceBriefData> AllAllianceBriefDatas; // 0x978
	TArray<FAllianceGuildInfo> MyAllianceGuildInfos; // 0x9c8
	FGuildStructureData MyGuildStructureData; // 0xa60
	FGuildStructureInfoData MyGuildStructureInfoData; // 0xb00
	FCharacterStructureData MyCharacterStructureData; // 0xb30
	FOccupySellInfo MyCharacterOccupySellInfo; // 0xb50
	FGuildEventData MyGuildEventData; // 0xb60
	FCharacterStatisticsInfo CharacterStatisticsInfo; // 0xca0
	TArray<FAccomplishAchievementData> AccomplishAchievements; // 0xea8
	TArray<FItemOptionLogInfo> ItemOptionLogInfos; // 0xf98
	TArray<FAIAttackedTargetInfo> AIAttackedTargetInfos; // 0xfa8
};

struct UModManage : UObject {
	TArray<FString> ModAssetLoadSuccessList; // 0x28
	TArray<USGGameData*> ModsGameDataList; // 0x38
};

struct UNavCollisionBase : UObject {
	char bIsDynamicObstacle : 1; // 0x28
};

struct UPoseWatch : UObject {
	UEdGraphNode* Node; // 0x28
	FColor PoseWatchColour; // 0x30
};

struct UOptionButton : UUserWidget {
	USizeBox* ButtonSizeBox; // 0x260
	USGUI* BindParentUI; // 0x268
	UBorder* ButtonBorder; // 0x270
	UImage* ButtonImage; // 0x278
	UTextBlock* TextButton; // 0x280
	USizeBox* TextButtonSizeBoxWrap; // 0x288
	FLinearColor NormalTextColor; // 0x290
	FLinearColor ActiveTextColor; // 0x2a0
	char bActive : 1; // 0x2b0
	FSlateBrush ButtonNormal; // 0x2b8
	FSlateBrush ButtonHover; // 0x340
	FSlateBrush ButtonActive; // 0x3c8
	ESlateVisibility ButtonImageVisiblity; // 0x450
	FSlateBrush ButtonImageNormal; // 0x458
	FSlateBrush ButtonImageActive; // 0x4e0
	char bToggleActive : 1; // 0x568
	char bAutoWrap : 1; // 0x580
	float OverrideWrapTextAt; // 0x584
	FSlateFontInfo TextFont; // 0x588
	FVector2D ButtonSize; // 0x5e0
	FVector4 TextButtonPadding; // 0x5f0
	UImage* IssuesImage; // 0x600
	char bShowTips : 1; // 0x608
	FText TipsText; // 0x610
};

struct UNetReplicationGraphConnection : UReplicationConnectionDriver {
	UNetConnection* NetConnection; // 0x28
	AReplicationGraphDebugActor* DebugActor; // 0x1d0
	TArray<FLastLocationGatherInfo> LastGatherLocations; // 0x1e8
	TArray<UReplicationGraphNode*> ConnectionGraphNodes; // 0x200
	UReplicationGraphNode_TearOff_ForConnection* TearOffNode; // 0x210
};

struct UVoxelSolidifyMeshesTool : UBaseVoxelTool {
	UVoxelSolidifyMeshesToolProperties* SolidifyProperties; // 0x108
};

struct UBlackboardKeyType_Class : UBlackboardKeyType {
	UObject* BaseClass; // 0x30
};

struct UClothingAssetCommon : UClothingAssetBase {
	UPhysicsAsset* PhysicsAsset; // 0x48
	TMap<FName, UClothConfigBase*> ClothConfigs; // 0x50
	UClothConfigBase* ClothSharedSimConfig; // 0xa0
	UClothConfigBase* ClothSimConfig; // 0xa8
	UClothConfigBase* ChaosClothSimConfig; // 0xb0
	TArray<UClothLODDataCommon_Legacy*> ClothLODData; // 0xb8
	TArray<FClothLODDataCommon> LODData; // 0xc8
	TArray<int32_t> LodMap; // 0xd8
	TArray<FName> UsedBoneNames; // 0xe8
	TArray<int32_t> UsedBoneIndices; // 0xf8
	int32_t ReferenceBoneIndex; // 0x108
	UClothingAssetCustomData* CustomData; // 0x110
	FClothConfig_Legacy ClothConfig; // 0x118
};

struct APartyBeaconClient : AOnlineBeaconClient {
	FString DestSessionId; // 0x3d0
	FPartyReservation PendingReservation; // 0x3e0
	EClientRequestType RequestType; // 0x430
	bool bPendingReservationSent; // 0x431
	bool bCancelReservation; // 0x432
};

struct UInteractiveTool : UObject {
	UInputBehaviorSet* InputBehaviors; // 0x48
	TArray<UObject*> ToolPropertyObjects; // 0x50
};

struct UUI_ModsManageBase : UUserWidget {
	UListView* mListView_PassiveMos; // 0x260
	UListView* mListView_ActiveMods; // 0x268
	UButton* mButton_PassiveMod; // 0x270
	UButton* mButton_ActiveMod; // 0x278
	UButton* mButton_Close; // 0x280
	UButton* mButton_Refresh; // 0x288
	UTextBlock* mTextBlock_Log; // 0x290
};

struct USoundMix : UObject {
	char bApplyEQ : 1; // 0x28
	float EQPriority; // 0x2c
	FAudioEQEffect EQSettings; // 0x30
	TArray<FSoundClassAdjuster> SoundClassEffects; // 0x70
	float InitialDelay; // 0x80
	float FadeInTime; // 0x84
	float Duration; // 0x88
	float FadeOutTime; // 0x8c
};

struct ASGNiagaraDroppedActor : ASGNiagaraActor {
	float LifeTimeDropped; // 0x418
	int64_t DroppedTimeTick; // 0x420
	FTimerHandle DroppedLifeTimer; // 0x428
	FString InteractiveString; // 0x430
};

struct UGuildImageMaterialSerializer : UObject {
	FLinearColor BGLayerDefaultColor; // 0x28
	FLinearColor OtherLayerDefaultColor; // 0x38
	int32_t DefaultBorder; // 0x48
	int32_t DefaultInitBackGround; // 0x4c
	int32_t DefaultInitBorder; // 0x50
	int32_t DefaultInitBackGroundColors[0x3]; // 0x54
	TArray<FMaterialParamName> MaterialParamNames; // 0x60
	TWeakObjectPtr<UMaterialInstanceDynamic> GuildImageMaterial; // 0x70
};

struct UInterpTrackInstParticleReplay : UInterpTrackInst {
	float LastUpdatePosition; // 0x28
};

struct ASGStructureBianPao : ASGStructure {
	ASGWeapon* NeedWeaponClass; // 0xb98
	UAnimMontage* FireMontage; // 0xba0
	int32_t BianPaoEndTimer; // 0xba8
};

struct ASGStructureT3Basement : ASGStructureBasement {
	TArray<ASGGamePlayActor*> PreConditionActors; // 0x1298
	EOccupyPreConditionType OccupyPreConditionType; // 0x12a8
	ASGGamePlayActor* Gate; // 0x12b0
	ASGGamePlayActor* BaseGate; // 0x12b8
};

struct UUI_OperationMode : USGUI {
	UButton* BtnApply; // 0x2d8
	UOperationModeItem* ClassicMode; // 0x2e0
	UOperationModeItem* NewMode; // 0x2e8
	UOperationModeItem* SelectOperationModeItem; // 0x2f0
};

struct UMaterialExpressionAppendVector : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UStructureCageInfoHUD : UStructureInfoHUD {
	UCageInfoHUDSlot* CageInfoHUDSlotTemplate; // 0x360
	UCanvasPanel* CageCanvasPanel; // 0x368
	UVerticalBox* CageInfoVerticalBox; // 0x370
	TArray<UCageInfoHUDSlot*> CageInfoHUDSlots; // 0x378
	TWeakObjectPtr<ASGStructureAnimalCage> BindStructureCage; // 0x388
};

struct ULevel : UObject {
	UWorld* OwningWorld; // 0xb8
	UModel* Model; // 0xc0
	TArray<UModelComponent*> ModelComponents; // 0xc8
	ULevelActorContainer* ActorCluster; // 0xd8
	int32_t NumTextureStreamingUnbuiltComponents; // 0xe0
	int32_t NumTextureStreamingDirtyResources; // 0xe4
	ALevelScriptActor* LevelScriptActor; // 0xe8
	ANavigationObjectBase* NavListStart; // 0xf0
	ANavigationObjectBase* NavListEnd; // 0xf8
	TArray<UNavigationDataChunk*> NavDataChunks; // 0x100
	float LightmapTotalSize; // 0x110
	float ShadowmapTotalSize; // 0x114
	TArray<FVector> StaticNavigableGeometry; // 0x118
	TArray<FGuid> StreamingTextureGuids; // 0x128
	FGuid LevelBuildDataId; // 0x1d0
	UMapBuildDataRegistry* MapBuildData; // 0x1e0
	FIntVector LightBuildLevelOffset; // 0x1e8
	char bIsLightingScenario : 1; // 0x1f4
	char bTextureStreamingRotationChanged : 1; // 0x1f4
	char bStaticComponentsRegisteredInStreamingManager : 1; // 0x1f4
	char bIsVisible : 1; // 0x1f4
	AWorldSettings* WorldSettings; // 0x258
	TArray<UAssetUserData*> AssetUserData; // 0x268
	TArray<FReplicatedStaticActorDestructionInfo> DestroyedReplicatedStaticActors; // 0x288
};

struct UGeometryCollectionCache : UObject {
	FRecordedTransformTrack RecordedData; // 0x28
	UGeometryCollection* SupportedCollection; // 0x38
	FGuid CompatibleCollectionState; // 0x40
};

struct UN_CraftPanel : UUserWidget {
	UUniformGridPanel* CraftGridPanel; // 0x260
	USGUI* RootSGUI; // 0x268
	USGUI* ParentUI; // 0x270
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x278
	TWeakObjectPtr<USGInventoryComponent> BindSeatCharacterInventory; // 0x280
	char bRemote : 1; // 0x288
	int32_t ShowRow; // 0x28c
	int32_t CraftValidIndex; // 0x290
	UN_InventorySlot* InventorySlotClass; // 0x298
	TArray<UN_InventorySlot*> CraftPanelSlotList; // 0x2a0
	char bSortByLearnOrder : 1; // 0x2b0
	FString CraftSearchString; // 0x2b8
	int32_t CountsPerRow; // 0x2c8
	int32_t DefaultShowCraftNum; // 0x2cc
	UInventoryItemTypeFilterSlot* ConsumeTypeSlot; // 0x2d0
	UInventoryItemTypeFilterSlot* EquipTypeSlot; // 0x2d8
	UInventoryItemTypeFilterSlot* WeaponTypeSlot; // 0x2e0
	UInventoryItemTypeFilterSlot* AmmoTypeSlot; // 0x2e8
	UInventoryItemTypeFilterSlot* StructureTypeSlot; // 0x2f0
	UInventoryItemTypeFilterSlot* ResourceTypeSlot; // 0x2f8
	UInventoryItemTypeFilterSlot* SearchTypeSlot; // 0x300
	UEditableTextBox* SearchEditBox; // 0x308
	UCanvasPanel* CraftQueueCanvas; // 0x310
	UN_CraftQueuePanel* CraftQueuePanel; // 0x318
	UInventoryItemTypeFilterSlot* CurrentActiveFilterSlot; // 0x320
	float DragStartX; // 0x328
	float DragStartY; // 0x32c
	FVector2D OriginPosition; // 0x330
	UCanvasPanelSlot* CraftQueueCanvasSlot; // 0x338
	char bIsDrag : 1; // 0x340
	UTextBlock* SkillExpRatio; // 0x348
	TWeakObjectPtr<ASGCharacter> StructureWorker; // 0x350
	char bIsFunctionTable : 1; // 0x358
	ESkillType ItemCraftSkillType; // 0x359
	ESkillAddExpAction ItemCraftSkillAddActionType; // 0x35a
	int32_t TargetItemLevel; // 0x35c
	char bIsCraftWorkTable : 1; // 0x360
};

struct UARPin : UObject {
	UARTrackedGeometry* TrackedGeometry; // 0x28
	USceneComponent* PinnedComponent; // 0x30
	FTransform LocalToTrackingTransform; // 0x40
	FTransform LocalToAlignedTrackingTransform; // 0x70
	EARTrackingState TrackingState; // 0xa0
	FMulticastInlineDelegate OnARTrackingStateChanged; // 0xc0
	FMulticastInlineDelegate OnARTransformUpdated; // 0xd0
};

struct ASGStructureSaltCrop : ASGStructureCropBase {
	float WaterConsumeTotal; // 0xbe0
};

struct UNiagaraParameterCollectionInstance : UObject {
	UNiagaraParameterCollection* Collection; // 0x28
	TArray<FNiagaraVariable> OverridenParameters; // 0x30
	FNiagaraParameterStore ParameterStorage; // 0x40
};

struct UModEntryData : UObject {
	FString modDir; // 0x28
	FString modName; // 0x38
	FString modVersion; // 0x48
	FString modGUID; // 0x58
};

struct APlayerStart : ANavigationObjectBase {
	FName PlayerStartTag; // 0x338
};

struct UResonanceAudioSpatializationSourceSettings : USpatializationPluginSourceSettingsBase {
	ERaSpatializationMethod SpatializationMethod; // 0x28
	float Pattern; // 0x2c
	float Sharpness; // 0x30
	bool bToggleVisualization; // 0x34
	float Scale; // 0x38
	float Spread; // 0x3c
	ERaDistanceRolloffModel Rolloff; // 0x40
	float MinDistance; // 0x44
	float MaxDistance; // 0x48
};

struct UMaterialExpressionLandscapeLayerSample : UMaterialExpression {
	FName ParameterName; // 0x40
	float PreviewWeight; // 0x48
	FGuid ExpressionGUID; // 0x4c
};

struct UARLifeCycleComponent : USceneComponent {
	FMulticastInlineDelegate OnARActorSpawnedDelegate; // 0x208
	FMulticastInlineDelegate OnARActorToBeDestroyedDelegate; // 0x218
};

struct UButton : UContentWidget {
	USlateWidgetStyleAsset* Style; // 0x120
	FButtonStyle WidgetStyle; // 0x128
	FLinearColor ColorAndOpacity; // 0x3a0
	FLinearColor BackgroundColor; // 0x3b0
	EButtonClickMethod ClickMethod; // 0x3c0
	EButtonTouchMethod TouchMethod; // 0x3c1
	EButtonPressMethod PressMethod; // 0x3c2
	bool IsFocusable; // 0x3c3
	FMulticastInlineDelegate OnClicked; // 0x3c8
	FMulticastInlineDelegate OnPressed; // 0x3d8
	FMulticastInlineDelegate OnReleased; // 0x3e8
	FMulticastInlineDelegate OnHovered; // 0x3f8
	FMulticastInlineDelegate OnUnhovered; // 0x408
};

struct UDisplaceMeshPerlinNoiseProperties : UInteractiveToolPropertySet {
	TArray<FPerlinLayerProperties> PerlinLayerProperties; // 0x60
};

struct URemeshProperties : UMeshConstraintProperties {
	float SmoothingStrength; // 0x68
	bool bFlips; // 0x6c
	bool bSplits; // 0x6d
	bool bCollapses; // 0x6e
};

struct UPaperTileMap : UObject {
	int32_t MapWidth; // 0x28
	int32_t MapHeight; // 0x2c
	int32_t TileWidth; // 0x30
	int32_t TileHeight; // 0x34
	float PixelsPerUnrealUnit; // 0x38
	float SeparationPerTileX; // 0x3c
	float SeparationPerTileY; // 0x40
	float SeparationPerLayer; // 0x44
	TSoftObjectPtr<UPaperTileSet> SelectedTileSet; // 0x48
	UMaterialInterface* Material; // 0x70
	TArray<UPaperTileLayer*> TileLayers; // 0x78
	float CollisionThickness; // 0x88
	ESpriteCollisionMode SpriteCollisionDomain; // 0x8c
	ETileMapProjectionMode ProjectionMode; // 0x8d
	int32_t HexSideLength; // 0x90
	UBodySetup* BodySetup; // 0x98
	int32_t LayerNameIndex; // 0xa0
};

struct UParticleSystem : UFXSystemAsset {
	float UpdateTime_FPS; // 0x30
	float UpdateTime_Delta; // 0x34
	float WarmupTime; // 0x38
	float WarmupTickRate; // 0x3c
	TArray<UParticleEmitter*> Emitters; // 0x40
	UParticleSystemComponent* PreviewComponent; // 0x50
	UInterpCurveEdSetup* CurveEdSetup; // 0x58
	float LODDistanceCheckTime; // 0x60
	float MacroUVRadius; // 0x64
	TArray<float> LODDistances; // 0x68
	TArray<FParticleSystemLOD> LODSettings; // 0x78
	FBox FixedRelativeBoundingBox; // 0x88
	float SecondsBeforeInactive; // 0xa4
	float Delay; // 0xa8
	float DelayLow; // 0xac
	char bOrientZAxisTowardCamera : 1; // 0xb0
	char bUseFixedRelativeBoundingBox : 1; // 0xb0
	char bShouldResetPeakCounts : 1; // 0xb0
	char bHasPhysics : 1; // 0xb0
	char bUseRealtimeThumbnail : 1; // 0xb0
	char ThumbnailImageOutOfDate : 1; // 0xb0
	char bUseDelayRange : 1; // 0xb1
	char bAllowManagedTicking : 1; // 0xb1
	char bAutoDeactivate : 1; // 0xb1
	char bRegenerateLODDuplicate : 1; // 0xb1
	EParticleSystemUpdateMode SystemUpdateMode; // 0xb2
	ParticleSystemLODMethod LODMethod; // 0xb3
	EParticleSystemInsignificanceReaction InsignificantReaction; // 0xb4
	EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod; // 0xb5
	EParticleSignificanceLevel MaxSignificanceLevel; // 0xb7
	uint32_t MinTimeBetweenTicks; // 0xb8
	float InsignificanceDelay; // 0xbc
	FVector MacroUVPosition; // 0xc0
	FBox CustomOcclusionBounds; // 0xcc
	TArray<FLODSoloTrack> SoloTracking; // 0xe8
	TArray<FNamedEmitterMaterial> NamedMaterialSlots; // 0xf8
};

struct UUI_GuildKPILog : USGUI {
	UTextBlock* PlayerNameText; // 0x2d8
	UTextBlock* TotalPointText; // 0x2e0
	UVerticalBox* ModifyVerticalBox; // 0x2e8
	UButton* EscButton; // 0x2f0
	UButton* SaveLogButton; // 0x2f8
	UScrollBox* ListScrollBox; // 0x300
	UGuildKPILogSlot* GuildKPILogSlotClass; // 0x308
};

struct UUI_CreateGuildConfirm : UUI_ModifyText {
	UGuildAuthorityComboBox* LanguageComboBox; // 0x3e8
	UGuildAuthorityComboBox* StructureAuthComboBox; // 0x3f0
};

struct UClickDragInputBehavior : UAnyButtonInputBehavior {
	bool bUpdateModifiersDuringDrag; // 0x120
};

struct UEditableGeometryCollectionAdapter : UEditableMeshAdapter {
	UGeometryCollection* GeometryCollection; // 0x28
	UGeometryCollection* OriginalGeometryCollection; // 0x30
	int32_t GeometryCollectionLODIndex; // 0x38
};

struct UGizmoConstantFrameAxisSource : UObject {
	FVector Origin; // 0x30
	FVector Direction; // 0x3c
	FVector TangentX; // 0x48
	FVector TangentY; // 0x54
};

struct UGuildColorSlot : UUserWidget {
	UImage* BGImage; // 0x260
	UImage* ColorImage; // 0x268
	UTextBlock* JunNameText; // 0x270
	TSoftObjectPtr<UTexture2D> BGNormalTexture; // 0x278
	TSoftObjectPtr<UTexture2D> BGSelectTexture; // 0x2a0
	FSlateColor NameSelectColor; // 0x2c8
	FSlateColor NameNormalColor; // 0x2f0
};

struct USGGameDataActivity : UObject {
	UDataTable* KongmingLanternTable; // 0x28
	FVector PlayerKongmingLanternOffset; // 0x40
	TArray<FKongmingLanternDropData> PlayerKongmingLanternData; // 0x50
};

struct USteamAudioSettings : UObject {
	FSoftObjectPath OutputSubmix; // 0x28
	EIplAudioEngine AudioEngine; // 0x40
	EIplRayTracerType RayTracer; // 0x41
	EIplConvolutionType ConvolutionType; // 0x42
	bool ExportBSPGeometry; // 0x43
	bool ExportLandscapeGeometry; // 0x44
	EPhononMaterial StaticMeshMaterialPreset; // 0x45
	float StaticMeshLowFreqAbsorption; // 0x48
	float StaticMeshMidFreqAbsorption; // 0x4c
	float StaticMeshHighFreqAbsorption; // 0x50
	float StaticMeshLowFreqTransmission; // 0x54
	float StaticMeshMidFreqTransmission; // 0x58
	float StaticMeshHighFreqTransmission; // 0x5c
	float StaticMeshScattering; // 0x60
	EPhononMaterial BSPMaterialPreset; // 0x64
	float BSPLowFreqAbsorption; // 0x68
	float BSPMidFreqAbsorption; // 0x6c
	float BSPHighFreqAbsorption; // 0x70
	float BSPLowFreqTransmission; // 0x74
	float BSPMidFreqTransmission; // 0x78
	float BSPHighFreqTransmission; // 0x7c
	float BSPScattering; // 0x80
	EPhononMaterial LandscapeMaterialPreset; // 0x84
	float LandscapeLowFreqAbsorption; // 0x88
	float LandscapeMidFreqAbsorption; // 0x8c
	float LandscapeHighFreqAbsorption; // 0x90
	float LandscapeLowFreqTransmission; // 0x94
	float LandscapeMidFreqTransmission; // 0x98
	float LandscapeHighFreqTransmission; // 0x9c
	float LandscapeScattering; // 0xa0
	int32_t OcclusionSampleCount; // 0xa4
	EIplSimulationType ListenerReverbSimulationType; // 0xa8
	float ListenerReverbContribution; // 0xac
	int32_t IndirectImpulseResponseOrder; // 0xb0
	float IndirectImpulseResponseDuration; // 0xb4
	EIplSpatializationMethod IndirectSpatializationMethod; // 0xb8
	float IrradianceMinDistance; // 0xbc
	uint32_t MaxSources; // 0xc0
	EQualitySettings RealtimeQualityPreset; // 0xc4
	int32_t RealTimeCPUCoresPercentage; // 0xc8
	int32_t RealtimeBounces; // 0xcc
	int32_t RealtimeRays; // 0xd0
	int32_t RealtimeSecondaryRays; // 0xd4
	EQualitySettings BakedQualityPreset; // 0xd8
	int32_t BakingCPUCoresPercentage; // 0xdc
	int32_t BakedBounces; // 0xe0
	int32_t BakedRays; // 0xe4
	int32_t BakedSecondaryRays; // 0xe8
	int32_t MaxComputeUnits; // 0xec
	float FractionComputeUnitsForIRUpdate; // 0xf0
	int32_t TANIndirectImpulseResponseOrder; // 0xf4
	float TANIndirectImpulseResponseDuration; // 0xf8
	uint32_t TANMaxSources; // 0xfc
	int32_t RadeonRaysBakingBatchSize; // 0x100
};

struct UPawnNoiseEmitterComponent : UActorComponent {
	char bAIPerceptionSystemCompatibilityMode : 1; // 0xc0
	FVector LastRemoteNoisePosition; // 0xc4
	float NoiseLifetime; // 0xd0
	float LastRemoteNoiseVolume; // 0xd4
	double LastRemoteNoiseTime; // 0xd8
	float LastLocalNoiseVolume; // 0xe0
	double LastLocalNoiseTime; // 0xe8
};

struct UGameplayTagReponseTable : UDataAsset {
	TArray<FGameplayTagResponseTableEntry> Entries; // 0x30
};

struct UMediaSoundComponent : USynthComponent {
	EMediaSoundChannels Channels; // 0x6d0
	bool DynamicRateAdjustment; // 0x6d4
	float RateAdjustmentFactor; // 0x6d8
	FFloatRange RateAdjustmentRange; // 0x6dc
	UMediaPlayer* MediaPlayer; // 0x6f0
};

struct ATemplateSequenceActor : AActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x318
	UTemplateSequencePlayer* SequencePlayer; // 0x330
	FSoftObjectPath TemplateSequence; // 0x338
	FTemplateSequenceBindingOverrideData BindingOverride; // 0x350
};

struct ASGGameState : AGameState {
	FMulticastInlineDelegate NotifyRefreshBattleInfoSignature; // 0x390
	FMulticastInlineDelegate NotifyRefreshGuanAiBattleInfoSignature; // 0x3a0
	FXianchengSignInfo XianchengSignInfo; // 0x3b0
	FBattleOpenTimeRule XianchengOpenTimeRule; // 0x400
	FTaishouSignInfo TaishouSignInfo; // 0x438
	FTaishouBattleOpenTimeInfo GMTaiShouOverrideInfo; // 0x4f8
	TMap<int32_t, FGuanAiBattleParam> GMGuanAiBattleParamMap; // 0x510
	TArray<FGuanAiSignInfo> AllGuanAiSignInfo; // 0x560
	TArray<FPlayerBattleData> PlayerBattleDatas; // 0x570
	TArray<FBattleGroupDynamicInfo> BattleGroupDynamicInfos; // 0x580
	TArray<TWeakObjectPtr<ASGCharacter>> FHighKillerArray; // 0x590
	float ServerFrameRate; // 0x5a0
	TArray<int32_t> ActorsNum; // 0x5a8
	FServerMultiplier GameMultiplier; // 0x5b8
	FSkillAddExpAction SkillAddExpAction; // 0xb08
	TArray<FString> BlockList; // 0xca0
	int32_t CityGroupId; // 0xcc0
	int32_t CityId; // 0xcc4
	int32_t DistrictId; // 0xcc8
	int32_t XianChengId; // 0xccc
	int32_t ServerId; // 0xcd0
	FString ServerSessionName; // 0xcd8
	EGameServerType ServerType; // 0xce8
	EDataStoreType DataStoreType; // 0xce9
	EBattleType BattleType; // 0xcea
	EGameServerPVPType GameServerPVPType; // 0xceb
	FBattleGuildRelation2D BattleGuildRelation2D; // 0xcf0
	int32_t MyBattleGuildRelationIndex; // 0xd00
	char bStructureDestoryNoMesh : 1; // 0xd04
	int32_t HuangLiDay; // 0xd08
	int64_t HuangLiNextDayTick; // 0xd10
	int32_t MaxStructureNumInRadius; // 0xd18
	int32_t SeasonIndex; // 0xd40
	int32_t SeasonWeekIndex; // 0xd58
	EBattleGroundState BattleGroundState; // 0xd80
	EBattleGroundMusicState BattleGroundMusicState; // 0xd81
	int64_t BattleGroundCountDownTick; // 0xda8
	FGuid SuccessGuildGuid; // 0xdf8
	char SuccessGenericTeamId; // 0xe08
	int32_t BattleTimeStop; // 0xe0c
	int32_t GMInitProtectTime; // 0xe10
	int64_t NextWorldSaveTime; // 0xe18
	int32_t CurrentServerLevel; // 0xe24
	FGuid XianChengOwner; // 0xe28
	FGuid TaiShouOwner; // 0xe38
	FGuid CiShiOwner; // 0xe48
	FXianLingHuKouAwardInfo XianLingHuKouAwardInfo; // 0xe68
	TArray<FXianChengJinXian> XianChengJinXianArray; // 0xe90
	char bGuardHostileWithXiangLing : 1; // 0xea0
	TArray<FWorship> WorshipEffect; // 0xeb8
	int32_t LimitedQuestIndex; // 0xec8
	int32_t LimitedGuildShopIndex; // 0xee0
	TArray<FAppearanceKitInfo> HideAppearanceKitArray; // 0xef8
	int64_t UTCAR_LastSettlementTicks; // 0xf10
	TArray<FString> ActivityRank_RewardArray; // 0xf18
	FActivityRankRule ActivityRankRule; // 0xf28
};

struct UBTDecorator_TimeLimit : UBTDecorator {
	float TimeLimit; // 0x68
};

struct UDistributionFloatParameterBase : UDistributionFloatConstant {
	FName ParameterName; // 0x40
	float MinInput; // 0x48
	float MaxInput; // 0x4c
	float MinOutput; // 0x50
	float MaxOutput; // 0x54
	DistributionParamMode ParamMode; // 0x58
};

struct UNewMeshMaterialProperties : UInteractiveToolPropertySet {
	TWeakObjectPtr<UMaterialInterface> Material; // 0x60
	float UVScale; // 0x68
	bool bWorldSpaceUVScale; // 0x6c
	bool bWireframe; // 0x6d
	bool bShowExtendedOptions; // 0x6e
};

struct UDrawFrustumComponent : UPrimitiveComponent {
	FColor FrustumColor; // 0x488
	float FrustumAngle; // 0x48c
	float FrustumAspectRatio; // 0x490
	float FrustumStartDist; // 0x494
	float FrustumEndDist; // 0x498
	UTexture* Texture; // 0x4a0
};

struct UDynamicEntryBox : UDynamicEntryBoxBase {
	UUserWidget* EntryWidgetClass; // 0x1d8
};

struct UUI_GuildKPI : USGUI {
	UCanvasPanel* KPIListCanvasPanel; // 0x2d8
	UButton* PrePageButton; // 0x2e0
	UButton* NextPageButton; // 0x2e8
	UTextBlock* ShowPageText; // 0x2f0
	UButton* CloseButton; // 0x2f8
	UButton* SaveButton; // 0x300
	UGuildKPIItemSettingPanel* GuildKPIItemSettingPanel; // 0x308
	UGuildKPISlot* GuildKPISlotClass; // 0x310
	UUI_GenericConfirmationDialog* ConfirmSaveUIOverride; // 0x318
	int32_t NumPerPage; // 0x320
	float KPISlotRowDistance; // 0x324
	FVector2D KPISlotSize; // 0x328
	int32_t KPILogMaxCount; // 0x330
};

struct UAttack_AnimNotify : UAnimNotify {
	FString AttackTag; // 0x38
	char ClearAimState : 1; // 0x48
	char ClearAnimInstanceAimState : 1; // 0x48
};

struct UMaterialExpressionStaticBool : UMaterialExpression {
	char Value : 1; // 0x40
};

struct UVertexBrushSculptProperties : UInteractiveToolPropertySet {
	EMeshVertexSculptBrushType PrimaryBrushType; // 0x60
	EMeshSculptFalloffType PrimaryFalloffType; // 0x61
	bool bFreezeTarget; // 0x62
	bool bSmoothErases; // 0x63
};

struct UGameSpBar : UUserWidget {
	FName SPProgressBarName; // 0x260
	FName SPImageName; // 0x268
	UMaterialInterface* SPMaterial; // 0x270
	FName MaxSPLossImageName; // 0x278
	float PbSPMinPercent; // 0x280
	float PbSPMaxPercent; // 0x284
	char bShowMaxSPLoss : 1; // 0x288
	UMaterialInstanceDynamic* DynamicSPMat; // 0x2d8
};

struct UEditPivotToolProperties : UInteractiveToolPropertySet {
	bool bEnableSnapDragging; // 0x60
	EEditPivotSnapDragRotationMode RotationMode; // 0x61
};

struct UInterpTrackInstFloatMaterialParam : UInterpTrackInst {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<float> ResetFloats; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackFloatMaterialParam* InstancedTrack; // 0x58
};

struct ASGStructureItemContainer_Crate : ASGStructureItemContainer {
	char bUseDeathDrop : 1; // 0xd68
	TArray<FCrateItemSet> CraftItems; // 0xd70
	TArray<FDeathDropItemConfig> DeathDropItemConfig; // 0xd80
	int32_t CrateLevel; // 0xd90
	EStructureCraftType CraftType; // 0xd94
	char bDisposable : 1; // 0xd95
	float DisposableLifeSpan; // 0xd98
	char bAutoRefresh : 1; // 0xd9c
	UStaticMesh* EmptyStaticMesh; // 0xda0
	UStaticMesh* OpenedStaticMesh; // 0xda8
	UStaticMesh* UnOpenedStaticMesh; // 0xdb0
	FVector RefreshCheckBox; // 0xdb8
	char bNeedCheckAround : 1; // 0xdc4
	char bDrawDebug : 1; // 0xdc4
	int32_t RefreshTime; // 0xdc8
	char bNeedNewInitItem : 1; // 0xdcc
	double RefreshGameTime; // 0xdd0
	char bNeedRefresh : 1; // 0xdd8
	int32_t OpenedColor; // 0xddc
	int32_t UnOpenedColor; // 0xde0
};

struct USGPerkTipMultiSkillText : UUserWidget {
	UTextBlock* SkillText; // 0x260
	UTextBlock* LevelText; // 0x268
	char bIsEnough : 1; // 0x270
	TWeakObjectPtr<ASGGeneralCharacter> BindGenCharacter; // 0x27c
	FText SkillTextText[0x19]; // 0x288
	FLinearColor EnoughColor; // 0x4e0
	FLinearColor NotEnoughColor; // 0x4f0
};

struct UBrushSculptProperties : UInteractiveToolPropertySet {
	bool bIsRemeshingEnabled; // 0x60
	EDynamicMeshSculptBrushType PrimaryBrushType; // 0x61
	float PrimaryBrushSpeed; // 0x64
	bool bPreserveUVFlow; // 0x68
	bool bFreezeTarget; // 0x69
	float SmoothBrushSpeed; // 0x6c
	bool bDetailPreservingSmooth; // 0x70
};

struct UARBasicLightEstimate : UARLightEstimate {
	float AmbientIntensityLumens; // 0x28
	float AmbientColorTemperatureKelvin; // 0x2c
	FLinearColor AmbientColor; // 0x30
};

struct USculptMaxBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float MaxHeight; // 0x68
	bool bUseFixedHeight; // 0x6c
	float FixedHeight; // 0x70
};

struct UEndMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct ABP_SGGameModeMenu_C : ASGGameModeMenu {
	USceneComponent* DefaultSceneRoot; // 0x1758
};

struct AMagicLeapARPinInfoActorBase : AActor {
	FGuid PinId; // 0x310
	bool bVisibilityOverride; // 0x320
};

struct UWBP_PrivateSessionList_C : UUI_PrivateSessionList {
	FPointerToUberGraphFrame UberGraphFrame; // 0x400
	UImage* ImgBg; // 0x408
	UImage* ImgFavorite; // 0x410
	UImage* ImgMapListTitle; // 0x418
	UImage* ImgMOD; // 0x420
	UImage* ImgPlayerNumDown; // 0x428
	UImage* ImgPlayerNumUp; // 0x430
	UImage* ImgSearchBg; // 0x438
	UImage* ImgSearchIcon; // 0x440
	UImage* ImgSessionBg; // 0x448
	UImage* ImgSessionBorder; // 0x450
	UImage* ImgSessionBottomBg; // 0x458
	UImage* ImgSessionTopBg; // 0x460
	TArray<FGameServerInfo> Server Infos; // 0x468
};

struct UFootStep_AnimNotify : UAnimNotify {
	UDataTable* PreviewFootSoundsDataTable; // 0x38
	EFootStepType Enum_FootStepType; // 0x40
	EFootDirectionType Enum_FootDirectionType; // 0x41
	EPhysicalSurface PreviewSurfaceType; // 0x42
	FName FootStepID; // 0x44
	char bPlayFootStepSound : 1; // 0x4c
	char bSpawnFootStepDecal : 1; // 0x4c
	char bSpawnFootStepParticle : 1; // 0x4c
	bool bPlayEquipAdditiveSounds; // 0x4d
	TArray<FCustomSoundSetting> PreviewAdditiveSounds; // 0x50
};

struct UAISystemBase : UObject {
	FSoftClassPath AISystemClassName; // 0x28
	FName AISystemModuleName; // 0x40
	bool bInstantiateAISystemOnClient; // 0x50
};

struct UUI_GuildQuest : USGUI {
	UDataButton* GetAwardButton; // 0x2d8
	UScrollBox* QuestListScrollBox; // 0x2e0
	UTextBlock* QuestDescText; // 0x2e8
	UVerticalBox* QuestObjectVertical; // 0x2f0
	UTextBlock* QuestAwardText; // 0x2f8
	UTextBlock* CapitalText; // 0x300
	UN_ShortCutPanel* ShortCutPanel; // 0x308
	UN_ItemCraftQueueSlot* SelfItemCraftSlot; // 0x310
	UN_ItemCraftQueueSlot* StructureItemCraftSlot; // 0x318
	UCanvasPanel* DescIconCanvasPanel; // 0x320
	UButton* CloseDescIconButton; // 0x328
	UImage* DescIconImage; // 0x330
	UButton* DescIconButton; // 0x338
	UButton* WikiJumpBtn; // 0x340
	UGuildQuestSlot* GuildQuestSlotTemplate; // 0x348
	UGuildItemSlot* SignItemSlotClass; // 0x350
	UGameCharacterQuestObject* QuestObjectTemplate; // 0x358
	int32_t CountsPerRow; // 0x360
	FMargin QuestSlotMargin; // 0x364
	FName RadioImageName; // 0x374
	FMargin QuestObjMargin; // 0x37c
	FString DisableAwardTips; // 0x390
	USGToolTipWidget* DisableAwardTipWidgetTemplate; // 0x3a0
	FButtonStyle NormalStyle; // 0x3a8
	FButtonStyle DisableStyle; // 0x620
};

struct UMaterialExpressionLandscapeVisibilityMask : UMaterialExpression {
	FGuid ExpressionGUID; // 0x40
};

struct ULevelStreaming : UObject {
	TSoftObjectPtr<UWorld> WorldAsset; // 0x28
	FName PackageNameToLoad; // 0x50
	TArray<FName> LODPackageNames; // 0x58
	FTransform LevelTransform; // 0x80
	int32_t LevelLODIndex; // 0xb0
	int32_t StreamingPriority; // 0xb4
	char bShouldBeVisible : 1; // 0xba
	char bShouldBeLoaded : 1; // 0xba
	char bLocked : 1; // 0xba
	char bIsStatic : 1; // 0xba
	char bShouldBlockOnLoad : 1; // 0xba
	char bShouldBlockOnUnload : 1; // 0xbb
	char bDisableDistanceStreaming : 1; // 0xbb
	char bDrawOnLevelStatusMap : 1; // 0xbb
	FLinearColor LevelColor; // 0xbc
	TArray<ALevelStreamingVolume*> EditorStreamingVolumes; // 0xd0
	float MinTimeBetweenVolumeUnloadRequests; // 0xe0
	FMulticastInlineDelegate OnLevelLoaded; // 0xe8
	FMulticastInlineDelegate OnLevelUnloaded; // 0xf8
	FMulticastInlineDelegate OnLevelShown; // 0x108
	FMulticastInlineDelegate OnLevelHidden; // 0x118
	ULevel* LoadedLevel; // 0x128
	ULevel* PendingUnloadLevel; // 0x130
};

struct UMaterialExpressionTime : UMaterialExpression {
	char bIgnorePause : 1; // 0x40
	char bOverride_Period : 1; // 0x40
	float Period; // 0x44
};

struct UMovieSceneCompiledData : UObject {
	FMovieSceneEvaluationTemplate EvaluationTemplate; // 0x28
	FMovieSceneSequenceHierarchy Hierarchy; // 0x188
	FMovieSceneEntityComponentField EntityComponentField; // 0x2a0
	FMovieSceneEvaluationField TrackTemplateField; // 0x390
	TArray<FFrameTime> DeterminismFences; // 0x3c0
	FGuid CompiledSignature; // 0x3d0
	FGuid CompilerVersion; // 0x3e0
	FMovieSceneSequenceCompilerMaskStruct AccumulatedMask; // 0x3f0
	FMovieSceneSequenceCompilerMaskStruct AllocatedMask; // 0x3f1
	EMovieSceneSequenceFlags AccumulatedFlags; // 0x3f2
};

struct ULuminARSessionConfig : UARSessionConfig {
	FMagicLeapPlanesQuery PlanesQuery; // 0x110
	int32_t MaxPlaneQueryResults; // 0x170
	int32_t MinPlaneArea; // 0x174
	bool bArbitraryOrientationPlaneDetection; // 0x178
	FVector PlaneSearchExtents; // 0x17c
	TArray<EMagicLeapPlaneQueryFlags> PlaneQueryFlags; // 0x188
	bool bDiscardZeroExtentPlanes; // 0x198
	bool bDefaultUseUnreliablePose; // 0x199
};

struct UBaseCreateFromSelectedHandleSourceProperties : UOnAcceptHandleSourcesProperties {
	EBaseCreateFromSelectedTargetType WriteOutputTo; // 0x68
	FString OutputName; // 0x70
	FString OutputAsset; // 0x80
};

struct UUI_StructureOccupyExpansionSlot : UUserWidget {
	TWeakObjectPtr<ASGStructureOccupy> RemoteActor; // 0x260
	TWeakObjectPtr<USGItem> BindItem; // 0x268
	UUI_StructureOccupyExpansionPanel* RootSGUI; // 0x270
	UTextBlock* ItemNameText; // 0x278
	UTextBlock* ItemPriceText; // 0x280
	UImage* ItemImage; // 0x288
};

struct UAbilityTask_WaitCancel : UAbilityTask {
	FMulticastInlineDelegate OnCancel; // 0x80
};

struct UInterpTrackInstColorProp : UInterpTrackInstProperty {
	FColor ResetColor; // 0x58
};

struct UMaterialExpressionFmod : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
};

struct UResonanceAudioSoundfieldSettings : USoundfieldEncodingSettingsBase {
	EResonanceRenderMode RenderMode; // 0x28
};

struct ASplineMeshActor : AActor {
	USplineMeshComponent* SplineMeshComponent; // 0x310
};

struct UMovieSceneMediaPlayerPropertySection : UMovieSceneSection {
	UMediaSource* MediaSource; // 0xe8
	bool bLoop; // 0xf0
};

struct UAnimalRestSlot : UUserWidget {
	UImage* HeadIcon; // 0x260
	UTextBlock* LevelText; // 0x268
	UTextBlock* NameText; // 0x270
	UTextBlock* StatusText; // 0x278
	UTextBlock* LifeCountText; // 0x280
	UTextBlock* RebornTimeText; // 0x288
	UImage* bg; // 0x290
	UButton* ReduceRebornTimeButton; // 0x298
	UButton* StopRestButton; // 0x2a0
	USGUI* ParentUI; // 0x2a8
	FBaseAnimalChunkData ChunkAnimalData; // 0x2b0
	FLinearColor RestColor; // 0x360
	FLinearColor NoLifeCountColor; // 0x370
	TSoftObjectPtr<UTexture2D> UnKnownVehicleIcon; // 0x380
	TSoftObjectPtr<UTexture2D> VehicleIcons[0x5]; // 0x3a8
	TSoftObjectPtr<UTexture2D> SelectTexture; // 0x470
	TSoftObjectPtr<UTexture2D> NormalTexture; // 0x498
	FText AnimalDeathStatusText; // 0x4c0
	FText AnimalReborningStatusText; // 0x4d8
	FText AnimalNoLifeCountStatusText; // 0x4f0
	FText AnimalRestStatusText; // 0x508
	FGuid ChunkGuid; // 0x520
};

struct APointLight : ALight {
	UPointLightComponent* PointLightComponent; // 0x320
};

struct UBattleStatisticsItem : UUserWidget {
	TSoftObjectPtr<UTexture2D> SameTeamBgTexture; // 0x260
	TSoftObjectPtr<UTexture2D> DiffTeamBgTexture; // 0x288
	TSoftObjectPtr<UTexture2D> OwnerBgTexture; // 0x2b0
	UTextBlock* TbName; // 0x2d8
	UTextBlock* TbKillNum; // 0x2e0
	UTextBlock* TbDeathNum; // 0x2e8
	UTextBlock* TbAssistNum; // 0x2f0
	UTextBlock* TbScore; // 0x2f8
	UImage* ImgBg; // 0x300
	UImage* ImageMVP; // 0x308
};

struct UUI_RideTaming : USGUI {
	TSoftObjectPtr<UTexture2D> LeftMouseTexture; // 0x2d8
	TSoftObjectPtr<UTexture2D> RightMouseTexture; // 0x300
	FText LeftMouseTipText; // 0x328
	FText RightMouseTipText; // 0x340
	FText RideTameCDTipText; // 0x358
	FText OverMaxTameNumTipText; // 0x370
	FText OverMaxWarNumTipText; // 0x388
	FText OrdinaryTameScoreText; // 0x3a0
	TSoftObjectPtr<UTexture2D> OrdinaryTameScoreTexture; // 0x3b8
	FText GoodTameScoreText; // 0x3e0
	TSoftObjectPtr<UTexture2D> GoodTameScoreTexture; // 0x3f8
	FLinearColor GoodFontOutlineColor; // 0x420
	int32_t GoodFontSize; // 0x430
	FText PrettyTameScoreText; // 0x438
	TSoftObjectPtr<UTexture2D> PrettyTameScoreTexture; // 0x450
	FLinearColor PrettyFontOutlineColor; // 0x478
	int32_t PrettyFontSize; // 0x488
	FText ExcellentTameScoreText; // 0x490
	TSoftObjectPtr<UTexture2D> ExcellentTameScoreTexture; // 0x4a8
	FLinearColor ExcellentFontOutlineColor; // 0x4d0
	int32_t ExcellentFontSize; // 0x4e0
	FSlateBrush NormalFillImage; // 0x4e8
	FSlateBrush StruggleFillImage; // 0x570
	float TameScoreMinPercent; // 0x5f8
	float TameScoreMaxPercent; // 0x5fc
	float ChangeSorceInterval; // 0x600
	UTextBlock* EndTameScoreText; // 0x608
	UTextBlock* EndTameScoreValue; // 0x610
	UBorder* EndTameScoreBorder; // 0x618
	UHorizontalBox* KeyTipHorizontalBox; // 0x620
	UImage* KeyTipIcon; // 0x628
	URichTextBlock* KeyTipRichTextBlock; // 0x630
	UProgressBar* RunawayProgressBar; // 0x638
	UTextBlock* RunawayDebugInfoText; // 0x640
	UTextBlock* TameScoreText; // 0x648
	UProgressBar* TameScoreProgressBar; // 0x650
	USlider* TameScoreSlider; // 0x658
	USizeBox* AngerSizeBox; // 0x660
	UImage* TriggerStruggleImg; // 0x668
	UProgressBar* AngerProgressBar; // 0x670
	UProgressBar* TameValueProgressBar; // 0x678
	UTextBlock* TipsText; // 0x680
	UTextBlock* GoodText; // 0x688
	UTextBlock* PrettyText; // 0x690
	UTextBlock* ExcellentText; // 0x698
	UWidgetAnimation* MouseClickAnim; // 0x6a0
	UWidgetAnimation* WaitStrugglingAnim; // 0x6a8
	UWidgetAnimation* ScoreChangeAnim; // 0x6b0
};

struct UBTDecorator : UBTAuxiliaryNode {
	char bInverseCondition : 1; // 0x60
	EBTFlowAbortMode FlowAbortMode; // 0x64
};

struct UComboBox : UWidget {
	TArray<UObject*> Items; // 0x108
	FDelegate OnGenerateWidgetEvent; // 0x118
	bool bIsFocusable; // 0x128
};

struct UUI_ZhanLing : USGUI {
	UVerticalBox* ZhanLingVerticalBox; // 0x2d8
	UButton* PrePageButton; // 0x2e0
	UButton* NextPageButton; // 0x2e8
	UTextBlock* ShowPageText; // 0x2f0
	UButton* ClearAllButton; // 0x2f8
	UButton* CloseButton; // 0x300
	UButton* SaveButton; // 0x308
	UZhanLingSlot* ZhanLingSlotClass; // 0x310
	UUI_GenericConfirmationDialog* ConfirmSaveUIOverride; // 0x318
	int32_t NumPerPage; // 0x320
};

struct UGizmoLocalVec2ParameterSource : UGizmoBaseVec2ParameterSource {
	FVector2D Value; // 0x48
	FGizmoVec2ParameterChange LastChange; // 0x50
};

struct ARecastNavMesh : ANavigationData {
	char bDrawTriangleEdges : 1; // 0x518
	char bDrawPolyEdges : 1; // 0x518
	char bDrawFilledPolys : 1; // 0x518
	char bDrawNavMeshEdges : 1; // 0x518
	char bDrawTileBounds : 1; // 0x518
	char bDrawPathCollidingGeometry : 1; // 0x518
	char bDrawTileLabels : 1; // 0x518
	char bDrawPolygonLabels : 1; // 0x518
	char bDrawDefaultPolygonCost : 1; // 0x519
	char bDrawLabelsOnPathNodes : 1; // 0x519
	char bDrawNavLinks : 1; // 0x519
	char bDrawFailedNavLinks : 1; // 0x519
	char bDrawClusters : 1; // 0x519
	char bDrawOctree : 1; // 0x519
	char bDrawOctreeDetails : 1; // 0x519
	char bDrawMarkedForbiddenPolys : 1; // 0x519
	char bDistinctlyDrawTilesBeingBuilt : 1; // 0x51a
	float DrawOffset; // 0x51c
	char bFixedTilePoolSize : 1; // 0x520
	int32_t TilePoolSize; // 0x524
	float TileSizeUU; // 0x528
	float CellSize; // 0x52c
	float CellHeight; // 0x530
	float AgentRadius; // 0x534
	float AgentHeight; // 0x538
	float AgentMaxSlope; // 0x53c
	float AgentMaxStepHeight; // 0x540
	float MinRegionArea; // 0x544
	float MergeRegionSize; // 0x548
	float MaxSimplificationError; // 0x54c
	int32_t MaxSimultaneousTileGenerationJobsCount; // 0x550
	int32_t TileNumberHardLimit; // 0x554
	int32_t PolyRefTileBits; // 0x558
	int32_t PolyRefNavPolyBits; // 0x55c
	int32_t PolyRefSaltBits; // 0x560
	FVector NavMeshOriginOffset; // 0x564
	float DefaultDrawDistance; // 0x570
	float DefaultMaxSearchNodes; // 0x574
	float DefaultMaxHierarchicalSearchNodes; // 0x578
	ERecastPartitioning RegionPartitioning; // 0x57c
	ERecastPartitioning LayerPartitioning; // 0x57d
	int32_t RegionChunkSplits; // 0x580
	int32_t LayerChunkSplits; // 0x584
	char bSortNavigationAreasByCost : 1; // 0x588
	char bPerformVoxelFiltering : 1; // 0x588
	char bMarkLowHeightAreas : 1; // 0x588
	char bUseExtraTopCellWhenMarkingAreas : 1; // 0x588
	char bFilterLowSpanSequences : 1; // 0x588
	char bFilterLowSpanFromTileCache : 1; // 0x588
	char bDoFullyAsyncNavDataGathering : 1; // 0x588
	char bUseBetterOffsetsFromCorners : 1; // 0x588
	char bStoreEmptyTileLayers : 1; // 0x589
	char bUseVirtualFilters : 1; // 0x589
	char bAllowNavLinkAsPathEnd : 1; // 0x589
	char bUseVoxelCache : 1; // 0x589
	float TileSetUpdateInterval; // 0x58c
	float HeuristicScale; // 0x590
	float VerticalDeviationFromGroundCompensation; // 0x594
};

struct UWBP_ProducerName_C : UUserWidget {
	UImage* AngelaLogo; // 0x260
	UImage* EmpireLogo; // 0x268
	UImage* StudioLogo; // 0x270
	UWBP_ProducerSlot_C* WBP_ProducerSlot; // 0x278
	UWBP_ProducerSlot_C* WBP_ProducerSlot_2; // 0x280
	UWBP_ProducerSlot_C* WBP_ProducerSlot_3; // 0x288
	UWBP_ProducerSlot_C* WBP_ProducerSlot_4; // 0x290
	UWBP_ProducerSlot_C* WBP_ProducerSlot_5; // 0x298
	UWBP_ProducerSlot_C* WBP_ProducerSlot_6; // 0x2a0
	UWBP_ProducerSlot_C* WBP_ProducerSlot_7; // 0x2a8
	UWBP_ProducerSlot_C* WBP_ProducerSlot_8; // 0x2b0
	UWBP_ProducerSplitLine_C* WBP_ProducerSplitLine; // 0x2b8
};

struct UUI_ServerAdminBlockListRow : UUserWidget {
	UTextBlock* TbAccountId; // 0x260
	UButton* ButtonPlayer; // 0x268
	UImage* ImageSelected; // 0x270
	UUI_AdminBlockListPanel* BindAdminBlockListPanel; // 0x278
};

struct UBorder : UContentWidget {
	EHorizontalAlignment HorizontalAlignment; // 0x120
	EVerticalAlignment VerticalAlignment; // 0x121
	char bShowEffectWhenDisabled : 1; // 0x122
	FLinearColor ContentColorAndOpacity; // 0x124
	FDelegate ContentColorAndOpacityDelegate; // 0x134
	FMargin Padding; // 0x144
	FSlateBrush Background; // 0x158
	FDelegate BackgroundDelegate; // 0x1e0
	FLinearColor BrushColor; // 0x1f0
	FDelegate BrushColorDelegate; // 0x200
	FVector2D DesiredSizeScale; // 0x210
	bool bFlipForRightToLeftFlowDirection; // 0x218
	FDelegate OnMouseButtonDownEvent; // 0x21c
	FDelegate OnMouseButtonUpEvent; // 0x22c
	FDelegate OnMouseMoveEvent; // 0x23c
	FDelegate OnMouseDoubleClickEvent; // 0x24c
};

struct UGuildKPIItemSettingPanel : USGUI {
	UVerticalBox* ItemListVerticalBox; // 0x2d8
	UButton* SaveButton; // 0x2e0
	UButton* CloseButton; // 0x2e8
	UEditableTextBox* NeedNumTextBox; // 0x2f0
	UEditableTextBox* SearchTextBox; // 0x2f8
	UGuildKPIItemSlot* GuildKPIItemSlotClass; // 0x300
	FMargin SlotPadding; // 0x308
};

struct UMovieSceneEntitySystem : UObject {
	UMovieSceneEntitySystemLinker* Linker; // 0x28
};

struct ANatureWaterBlockVolume : AVolume {
	TWeakObjectPtr<AWaterManager> WaterManager; // 0x348
};

struct UUI_QuickRemoteInventory : USGUI {
	TWeakObjectPtr<USGInventoryComponent> SelfInventoryComponent; // 0x2d8
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x2e0
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x2e8
	UUniformGridPanel* InventoryGrid; // 0x2f0
	UInventoryItemTypeFilterSlot* ConsumeTypeSlot; // 0x2f8
	UInventoryItemTypeFilterSlot* EquipTypeSlot; // 0x300
	UInventoryItemTypeFilterSlot* WeaponTypeSlot; // 0x308
	UInventoryItemTypeFilterSlot* AmmoTypeSlot; // 0x310
	UInventoryItemTypeFilterSlot* StructureTypeSlot; // 0x318
	UInventoryItemTypeFilterSlot* ResourceTypeSlot; // 0x320
	UInventoryItemTypeFilterSlot* SearchTypeSlot; // 0x328
	UEditableTextBox* SearchEditBox; // 0x330
	UButton* CloseButton; // 0x338
	UInventoryItemTypeFilterSlot* CurrentActiveFilterSlot; // 0x340
	FString SearchString; // 0x348
	char bNeedRefreshAll : 1; // 0x358
	int32_t TickUpdateSlotNumber; // 0x35c
	int32_t CountsPerRow; // 0x360
	int32_t LastInventoryItemNum; // 0x364
	char bShowEquip : 1; // 0x36c
	TArray<UN_InventorySlot*> InventorySlotList; // 0x370
	TArray<UN_InventorySlot*> EquipSlotList; // 0x380
	UN_InventorySlot* InventorySlotClass; // 0x390
	TWeakObjectPtr<UN_SlotExtraMenu> SlotExtraMenu; // 0x398
	TWeakObjectPtr<UN_InventorySlot> ShowMenuSlot; // 0x3a0
	TWeakObjectPtr<UN_InventorySlot> PressedSlot; // 0x3a8
	TWeakObjectPtr<UN_SplitItemPanel> SplitPanel; // 0x3b0
	UN_SplitItemPanel* SplitItemPanelTemplate; // 0x3b8
	UInventoryFunctionButton* SwitchOneButton; // 0x3c0
	UInventoryFunctionButton* SwitchAllButton; // 0x3c8
	UButton* OpenInventoryButton; // 0x3d0
};

struct UMeshEditingViewProperties : UInteractiveToolPropertySet {
	bool bShowWireframe; // 0x60
	EMeshEditingMaterialModes MaterialMode; // 0x64
	bool bFlatShading; // 0x68
	FLinearColor Color; // 0x6c
	UTexture2D* Image; // 0x80
};

struct UAbilityTask_VisualizeTargeting : UAbilityTask {
	FMulticastInlineDelegate TimeElapsed; // 0x80
};

struct UAttributePanel : UUserWidget {
	char bHasInit : 1; // 0x260
	char bIsGeneral : 1; // 0x260
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x264
	TArray<UProgressBar*> WoundProgressBars; // 0x270
	TArray<UTextBlock*> WoundProgressTexts; // 0x280
	TArray<FText> WoundNoBuffDescription; // 0x290
	UTextBlock* LevelText; // 0x2a0
	UTextBlock* EXPText; // 0x2a8
	UTextBlock* GuildActivityText; // 0x2b0
	UProgressBar* EXPProgressBar; // 0x2b8
	TArray<FName> AttributeSlotNames; // 0x2c0
	UCanvasPanel* GeneralLevelUpPanel; // 0x2d0
	UButton* GeneralLevelUpButton; // 0x2d8
	UGameCharacterBuffPanel* GameCharacterBuffPanel; // 0x2e0
	TArray<UAttributeSlot*> AttributeSlotList; // 0x2e8
};

struct USlateBrushAsset : UObject {
	FSlateBrush Brush; // 0x28
};

struct UUI_PrivateSessionList : USGUI {
	UUI_PrivateSessionListRow* RowTemplate; // 0x2d8
	int32_t RowNumPerPage; // 0x2e0
	UPrivateSessionDescription* SessionDescriptionTemplate; // 0x2e8
	UDataTable* MapConfigDataTable; // 0x2f0
	UPrivateSessionPassword* SessionPasswordTemplate; // 0x2f8
	UUniformGridPanel* UGPSessionList; // 0x300
	UUniformGridPanel* UGPLastLoginSession; // 0x308
	UButton* BtnJoin; // 0x310
	UButton* BtnRefresh; // 0x318
	UButton* BtnBack; // 0x320
	UButton* BtnLastPage; // 0x328
	UButton* BtnNextPage; // 0x330
	UTextBlock* TbCurPage; // 0x338
	UTextBlock* TbMaxPage; // 0x340
	UEditableText* EtbSearch; // 0x348
	UCircularThrobber* CircularThrobber; // 0x350
	UComboBoxString* CbMap; // 0x358
	UComboBoxString* CbPVPType; // 0x360
	UComboBoxString* CbVersion; // 0x368
	UButton* BtnMOD; // 0x370
	UButton* BtnPlayerNumUp; // 0x378
	UButton* BtnPlayerNumDown; // 0x380
	UButton* BtnFavorite; // 0x388
	FTimerHandle CircularThrobberHandle; // 0x390
	TArray<UUI_PrivateSessionListRow*> SessionRows; // 0x398
	UUI_PrivateSessionListRow* LastLoginSessionRow; // 0x3a8
	int32_t CurPage; // 0x3b0
	int32_t MaxPage; // 0x3b4
	UUI_PrivateSessionListRow* SelectSessionRow; // 0x3b8
	FString SearchString; // 0x3c0
	UPrivateSessionDescription* PrivateSessionDescription; // 0x3d0
	UPrivateSessionPassword* PrivateSessionPassword; // 0x3d8
	char bMODSort : 1; // 0x3e0
	char bPlayerNumUpSort : 1; // 0x3e0
	char bPlayerNumDownSort : 1; // 0x3e0
	char bFavoriteSort : 1; // 0x3e0
	FTimerHandle GetPingTimer; // 0x3e8
	TArray<int32_t> GetPingServerIndexList; // 0x3f0
};

struct UNiagaraDataInterfaceVolumeTexture : UNiagaraDataInterface {
	UVolumeTexture* Texture; // 0x38
};

struct UFont : UObject {
	EFontCacheType FontCacheType; // 0x30
	TArray<FFontCharacter> Characters; // 0x38
	TArray<UTexture2D*> Textures; // 0x48
	int32_t IsRemapped; // 0x58
	float EmScale; // 0x5c
	float Ascent; // 0x60
	float Descent; // 0x64
	float Leading; // 0x68
	int32_t Kerning; // 0x6c
	FFontImportOptionsData ImportOptions; // 0x70
	int32_t NumCharacters; // 0x120
	TArray<int32_t> MaxCharHeight; // 0x128
	float ScalingFactor; // 0x138
	int32_t LegacyFontSize; // 0x13c
	FName LegacyFontName; // 0x140
	FCompositeFont CompositeFont; // 0x148
};

struct UVariantObjectBinding : UObject {
	FString CachedActorLabel; // 0x28
	FSoftObjectPath ObjectPtr; // 0x38
	LazyObjectProperty LazyObjectPtr; // 0x50
	TArray<UPropertyValue*> CapturedProperties; // 0x70
	TArray<FFunctionCaller> FunctionCallers; // 0x80
};

struct UPhysicsConstraintComponent : USceneComponent {
	AActor* ConstraintActor1; // 0x208
	FConstrainComponentPropName ComponentName1; // 0x210
	AActor* ConstraintActor2; // 0x218
	FConstrainComponentPropName ComponentName2; // 0x220
	UPhysicsConstraintTemplate* ConstraintSetup; // 0x238
	FMulticastInlineDelegate OnConstraintBroken; // 0x240
	FConstraintInstance ConstraintInstance; // 0x250
};

struct UMenuAnchor : UContentWidget {
	UUserWidget* MenuClass; // 0x120
	FDelegate OnGetMenuContentEvent; // 0x128
	FDelegate OnGetUserMenuContentEvent; // 0x138
	EMenuPlacement Placement; // 0x148
	bool bFitInWindow; // 0x149
	bool ShouldDeferPaintingAfterWindowContent; // 0x14a
	bool UseApplicationMenuStack; // 0x14b
	FMulticastInlineDelegate OnMenuOpenChanged; // 0x150
};

struct UPointSetComponent : UMeshComponent {
	UMaterialInterface* PointMaterial; // 0x4b0
	FBoxSphereBounds Bounds; // 0x4b8
	bool bBoundsDirty; // 0x4d4
};

struct UPolyEditSetUVProperties : UInteractiveToolPropertySet {
	bool bShowMaterial; // 0x60
};

struct UBTTask_MakeNoise : UBTTaskNode {
	float Loudnes; // 0x70
};

struct UAndroidPermissionCallbackProxy : UObject {
	FMulticastInlineDelegate OnPermissionsGrantedDynamicDelegate; // 0x28
};

struct UUI_PlayerShowTips : USGToolTipWidget {
	UImage* ItemIcon; // 0x288
	UTextBlock* TextName; // 0x290
	UVerticalBox* RequirementVertical; // 0x298
	UTextBlock* DescriptionText; // 0x2a0
	UCanvasPanel* UnlockPanel; // 0x2a8
	UTextBlock* TipsItemNameText; // 0x2b0
	UCanvasPanel* RemainTimePanel; // 0x2b8
	UTextBlock* RemainTimeDetailText; // 0x2c0
	UUI_PlayerShowRequirement* RequirementClass; // 0x2c8
};

struct UUI_PlayerShowRequirement : UUserWidget {
	UTextBlock* ItemNameText; // 0x260
	UTextBlock* ItemAmountText; // 0x268
	UTextBlock* AmountDivisionText; // 0x270
	UTextBlock* MaxValueText; // 0x278
	FLinearColor MeetColor; // 0x280
	FLinearColor UnMeetColor; // 0x290
};

struct UUI_ServerParamRegion : UUserWidget {
	UTextBlock* TbRegionName; // 0x260
};

struct UMaterialExpressionLandscapeLayerWeight : UMaterialExpression {
	FExpressionInput Base; // 0x40
	FExpressionInput Layer; // 0x54
	FName ParameterName; // 0x68
	float PreviewWeight; // 0x70
	FVector ConstBase; // 0x74
	FGuid ExpressionGUID; // 0x80
};

struct UJoinSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UMiniMapMarkMenu : UUserWidget {
	UMiniMapMarkItem* MarkItemClass; // 0x260
	int32_t MarkItemNumPerRow; // 0x268
	FMulticastInlineDelegate OnMiniMapMarkMenuClosed; // 0x270
	USGMiniMap* BindMiniMap; // 0x280
	TWeakObjectPtr<UMiniMapMarkItem> SelectedMarkItem; // 0x288
	TArray<UMiniMapMarkItem*> MiniMapMarkItems; // 0x290
	UButton* BtnMark; // 0x2a0
	UButton* BtnClose; // 0x2a8
	UUniformGridPanel* UGPMark; // 0x2b0
	UEditableText* EtbMarkName; // 0x2b8
	UHorizontalBox* HbMarkType; // 0x2c0
	UCheckBox* CbGuildMark; // 0x2c8
	UCheckBox* CbLocalMark; // 0x2d0
	UButton* BtnGMGoto; // 0x2d8
};

struct UWBP_ModEntryTemplate_C : UUI_ModEntryTemplate {
	FPointerToUberGraphFrame UberGraphFrame; // 0x270
	UImage* Image_50; // 0x278
};

struct UUI_VehicleCamp : USGUI {
	UUI_VehicleGenealogy* GenealogyUITemplate; // 0x2d8
	UVehicleEquipPanel* VehicleEquipPanel; // 0x2e0
	UOptionButton* ShowButtonPanelBtn; // 0x2e8
	UCanvasPanel* ButtonPanel; // 0x2f0
	UButton* CastrateButton; // 0x2f8
	UButton* ReleaseButton; // 0x300
	UButton* KillButton; // 0x308
	UButton* GenealogyButton; // 0x310
	UCanvasPanel* VehicleEquipPanelCanvas; // 0x318
	UN_InventoryPanel* InventoryPanel; // 0x320
	UVehicleCampPanel* VehicleCampPanel; // 0x328
	UCanvasPanel* DetailPanelCanvas; // 0x330
	UOptionButton* AttributeButton; // 0x338
	UOptionButton* PerkButton; // 0x340
	UVehicleAttributePanel* AttributePanel; // 0x348
	UUI_VehiclePerk* PerkPanel; // 0x350
	UUI_NPCInfo* ParentUI; // 0x358
	UVehicleCampSlot* BindVehicleCampSlot; // 0x360
	TWeakObjectPtr<ASG_AnimalVehicleCharacter> BindVehicleCharacter; // 0x368
	FGuid BindVehicleChunkGuid; // 0x370
	TWeakObjectPtr<UN_InventorySlot> PressedSlot; // 0x380
};

struct UAIDataProvider_QueryParams : UAIDataProvider {
	FName ParamName; // 0x28
	float FloatValue; // 0x30
	int32_t IntValue; // 0x34
	bool BoolValue; // 0x38
};

struct UMatineeCameraShake : UCameraShakeBase {
	float OscillationDuration; // 0x98
	float OscillationBlendInTime; // 0x9c
	float OscillationBlendOutTime; // 0xa0
	FROscillator RotOscillation; // 0xa4
	FVOscillator LocOscillation; // 0xc8
	FFOscillator FOVOscillation; // 0xec
	float AnimPlayRate; // 0xf8
	float AnimScale; // 0xfc
	float AnimBlendInTime; // 0x100
	float AnimBlendOutTime; // 0x104
	float RandomAnimSegmentDuration; // 0x108
	UCameraAnim* Anim; // 0x110
	char bRandomAnimSegment : 1; // 0x118
	float OscillatorTimeRemaining; // 0x11c
	UCameraAnimInst* AnimInst; // 0x120
};

struct UPawnAction_Wait : UPawnAction {
	float TimeToWait; // 0x98
};

struct UJueWeiConditionSlot : USGUI {
	UTextBlock* TitleText; // 0x2d8
	TArray<FName> ConditionTextNames; // 0x2e0
};

struct ASGStructureTeleportGate : ASGStructure {
	int32_t FuBenVolumeId; // 0xb98
};

struct UUI_Facelift : UUI_MakeAppearance {
	UButton* BtnReturn; // 0x6a0
	UButton* BtnConfirm; // 0x6a8
};

struct UStaticMesh : UStreamableRenderAsset {
	FPerPlatformInt MinLOD; // 0x80
	float LpvBiasMultiplier; // 0x84
	TArray<FStaticMaterial> StaticMaterials; // 0x88
	float LightmapUVDensity; // 0x98
	int32_t LightMapResolution; // 0x9c
	int32_t LightMapCoordinateIndex; // 0xa0
	float DistanceFieldSelfShadowBias; // 0xa4
	UBodySetup* BodySetup; // 0xa8
	int32_t LODForCollision; // 0xb0
	char bGenerateMeshDistanceField : 1; // 0xb4
	char bStripComplexCollisionForConsole : 1; // 0xb4
	char bHasNavigationData : 1; // 0xb4
	char bSupportUniformlyDistributedSampling : 1; // 0xb4
	char bSupportPhysicalMaterialMasks : 1; // 0xb4
	char bIsBuiltAtRuntime : 1; // 0xb4
	char bAllowCPUAccess : 1; // 0xb4
	char bSupportGpuUniformlyDistributedSampling : 1; // 0xb5
	TArray<UStaticMeshSocket*> Sockets; // 0xd8
	FVector PositiveBoundsExtension; // 0xf8
	FVector NegativeBoundsExtension; // 0x104
	FBoxSphereBounds ExtendedBounds; // 0x110
	int32_t ElementToIgnoreForTexFactor; // 0x12c
	TArray<UAssetUserData*> AssetUserData; // 0x130
	UObject* EditableMesh; // 0x140
	UNavCollisionBase* NavCollision; // 0x148
};

struct UARCandidateImage : UDataAsset {
	UTexture2D* CandidateTexture; // 0x30
	FString FriendlyName; // 0x38
	float Width; // 0x48
	float Height; // 0x4c
	EARCandidateImageOrientation Orientation; // 0x50
};

struct UMaterialExpressionLandscapePhysicalMaterialOutput : UMaterialExpressionCustomOutput {
	TArray<FPhysicalMaterialInput> Inputs; // 0x40
};

struct AGameplayCueNotify_Actor : AActor {
	bool bAutoDestroyOnRemove; // 0x310
	float AutoDestroyDelay; // 0x314
	bool WarnIfTimelineIsStillRunning; // 0x318
	bool WarnIfLatentActionIsStillRunning; // 0x319
	FGameplayTag GameplayCueTag; // 0x31c
	FName GameplayCueName; // 0x324
	bool bAutoAttachToOwner; // 0x32c
	bool IsOverride; // 0x32d
	bool bUniqueInstancePerInstigator; // 0x32e
	bool bUniqueInstancePerSourceObject; // 0x32f
	bool bAllowMultipleOnActiveEvents; // 0x330
	bool bAllowMultipleWhileActiveEvents; // 0x331
	int32_t NumPreallocatedInstances; // 0x334
};

struct UGlobalMap_HuKouSignTips : USGToolTipWidget {
	UTextBlock* TbRemainTime; // 0x288
};

struct AFlockFish : APawn {
	EFlockFishStateType FlockFishStateType; // 0x370
	USphereComponent* FishInteractionSphere; // 0x380
	TArray<UObject*> EnemyTypes; // 0x388
	float ChaseHookDist; // 0x398
	float FollowDist; // 0x39c
	float Speed; // 0x3a0
	float MaxSpeed; // 0x3a4
	float TurnSpeed; // 0x3a8
	float ChangeTargetFrequency; // 0x3ac
	float TungerResetTime; // 0x3b0
	float HideResetTime; // 0x3b4
	float DistBehindSpeedUpRange; // 0x3b8
	float SeperationDistanceMultiplier; // 0x3bc
	bool AlarmFriendsToFlee; // 0x3c0
	float FleeDistanceMultiplier; // 0x3c4
	float FleeAccelerationMultiplier; // 0x3c8
	float StruggleAccelerationMultiplier; // 0x3cc
	float SeekDecelerationMultiplier; // 0x3d0
	float AvoidForceMultiplier; // 0x3d4
	float AvoidanceForce; // 0x3d8
	FVector OriginLoc; // 0x3dc
	FRotator OriginRot; // 0x3e8
	FVector BoxExtent; // 0x3f4
	float CustomZSeekMin; // 0x400
	float CustomZSeekMax; // 0x404
	float NumNeighborsToEvaluate; // 0x408
	float UpdateEveryTick; // 0x40c
	bool DebugMode; // 0x420
};

struct UGameCharacterQuestItem : USGUI {
	UGameCharacterQuestObject* QuestObjectTemplate; // 0x2d8
	UVerticalBox* ObjectListVertical; // 0x2e0
	UButton* RewardButton; // 0x2e8
	UCanvasPanel* RewardPanel; // 0x2f0
	UImage* BGImage; // 0x2f8
	FMargin QuestObjMargin; // 0x300
	float AnimPlaySpeed; // 0x310
	FName CompleteAnimName; // 0x314
	TSoftObjectPtr<UTexture2D> TrunkQuestBG; // 0x320
	TSoftObjectPtr<UTexture2D> BranchQuestBG; // 0x348
	TSoftObjectPtr<UTexture2D> DailyQuestBG; // 0x370
	TSoftObjectPtr<UTexture2D> WeeklyQuestBG; // 0x398
};

struct UWrapBox : UPanelWidget {
	FVector2D InnerSlotPadding; // 0x120
	float WrapWidth; // 0x128
	float WrapSize; // 0x12c
	bool bExplicitWrapWidth; // 0x130
	bool bExplicitWrapSize; // 0x131
	EOrientation Orientation; // 0x132
};

struct UCompositeCurveTable : UCurveTable {
	TArray<UCurveTable*> ParentTables; // 0xa0
	TArray<UCurveTable*> OldParentTables; // 0xb0
};

struct UMovieSceneFloatSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xf0
};

struct UARTrackedPose : UARTrackedGeometry {
	FARPose3D TrackedPose; // 0xf8
};

struct UMaterialExpressionMin : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct APhysicsVolume : AVolume {
	float TerminalVelocity; // 0x348
	int32_t Priority; // 0x34c
	float FluidFriction; // 0x350
	char bWaterVolume : 1; // 0x354
	char bPhysicsOnContact : 1; // 0x354
};

struct ASG_MoveSeatingCharacter : ABaseCharacter {
	char bCheckGroundRotation : 1; // 0x2110
	char bDrawDebugLine : 1; // 0x2110
	FRotator CurrentGroundRotation; // 0x2114
	FRotator TargetGroundRotation; // 0x2120
	float MeshWalkAngle; // 0x212c
	float DefaultWalkAngle; // 0x2130
	FVector LastCheckGroundLocation; // 0x2134
	FRotator LastCheckGroundRotator; // 0x2140
	float CheckSiegeRoationInterval; // 0x214c
	float LastGetSiegeRoationTimer; // 0x2150
	float SiegeAbsAlignPitchMax; // 0x2154
	char bGetOriginMeshRotator : 1; // 0x2158
	FRotator OriginMeshRotator; // 0x215c
	float SiegeMeshRelativeRotateSpeed; // 0x2168
	float InitMaxHPMulAdd; // 0x216c
	float HPMulAdd; // 0x2170
	float CustomRotateSpeedMul; // 0x2174
	float HelpPerkRotateSpeedMul; // 0x2178
	float HelpPerkMoveSpeedMul; // 0x217c
	float DefaultSpeed; // 0x2180
	char bBackChangeSpeed : 1; // 0x2184
	float BackSpeedMulti; // 0x2188
	char bBackChangeRotateSpeed : 1; // 0x218c
	float BackRotateSpeedMulti; // 0x2190
	float LastMoveForwardAxis; // 0x2194
	char bNeedUpdateMovementSpeed : 1; // 0x2198
	float CurrentForwardSiegeSpeed; // 0x219c
	float CurrentForwardRotateSpeedMulti; // 0x21a0
	char bCanTurnInSitu : 1; // 0x21a4
	char InversiveMoveForRider : 1; // 0x21a4
	float RotationRate; // 0x21a8
	char LinearRotationRate : 1; // 0x21ac
	USGItem* ConsumeItem; // 0x21b0
	ASGStructureFrame* LinkFrameStructure; // 0x21b8
	float GivingItemFromDemolishPercentage; // 0x21c0
	char bCanSetStructureAuthority : 1; // 0x21c4
	int32_t StructureAuthority; // 0x21c8
	int32_t CurrentStructureProssessAuth; // 0x21cc
	int32_t CurrentStructureAllianceCreate; // 0x21d0
	int32_t CurrentStructureAllianceInventory; // 0x21d4
	char bCanBebDemolished : 1; // 0x21d8
	int32_t NumSeats; // 0x21dc
	TMap<int32_t, FVector> CheckCanSeatBoxCollision; // 0x21e0
	TArray<FName> SeatSocketName; // 0x2230
	TArray<ABaseCharacter*> AllSeatedCharacter; // 0x2240
	TArray<ABaseCharacter*> SaveGameAllSeatedCharacter; // 0x2260
	TArray<FName> AllSeatedCameraName; // 0x2270
	float ServerCheckControlDistance; // 0x2280
	int32_t NumUsers; // 0x2284
	float UnboardDistance; // 0x2288
	FVector SeatedCharacterLocationOffset; // 0x228c
	FRotator SeatedCharacterRotationOffset; // 0x2298
	FName UnRideSoundID; // 0x22a4
	FName RideSoundID; // 0x22ac
	FName MovingSoundID; // 0x22b4
	char bFallingReleaseAll : 1; // 0x22bc
	char bSwimmingReleaseAll : 1; // 0x22bc
	TArray<FMoveBoxTrace> ForwardBoxTrace; // 0x22c8
	TArray<FMoveBoxTrace> BackBoxTrace; // 0x22d8
	TArray<FMoveBoxTrace> LeftBoxTrace; // 0x22e8
	TArray<FMoveBoxTrace> RightBoxTrace; // 0x22f8
	FAnimalsAnimInstanceConfig AnimInstanceAnims; // 0x2308
	float PassengerGaitValueSpeedMulti; // 0x2388
	TArray<FAnimalsAnimInstanceConfig> OtherAnimInstanceAnims; // 0x2390
	float ServerCheckSendMoveDamageDistance; // 0x23a4
	char bMoveDamageFoliage : 1; // 0x23a8
	USGDamageType* MoveDamageTypeClass; // 0x23b0
	FVector FourWheelAlignment[0x4]; // 0x23b8
	float RotateTraceLength; // 0x23e8
	char bUseSplineRoute : 1; // 0x23ec
	TWeakObjectPtr<ASplineRouteActor> FollowSplineActor; // 0x23f0
	char FinshSplineMove : 1; // 0x23f8
	int32_t FollowSplinePointNum; // 0x23fc
	ASGStructure* LinkPerkStructure; // 0x2400
	char bCanNPCHelp : 1; // 0x2408
	TArray<ABaseCharacter*> AllowNPCHelpClass; // 0x2410
	TArray<TWeakObjectPtr<ABaseCharacter>> InteractiveReleaseHelpNpcs; // 0x2420
	FName BeAIAttackSocketName; // 0x2430
	float MoveSeatWeightMul; // 0x2438
	char bIsEnergyCharacter : 1; // 0x243c
	char bUsingEnergy : 1; // 0x243c
	float CurrentPower; // 0x2440
	float PowerFactor; // 0x2444
	float MoveSeatSelfWeight; // 0x2448
	TArray<TWeakObjectPtr<ASGStructureEnergy>> UsingEnergyStructure; // 0x2450
	char bEnergyStructureUseGear : 1; // 0x2460
	TArray<FEnergyStructureGearConfig> GearConfig; // 0x2468
	int32_t CurrentGearIndex; // 0x2478
	char bShowLogs : 1; // 0x247c
	int32_t LogMaxNum; // 0x2480
	TArray<FItemOptionLogInfo> MoveSeatItemLogs; // 0x2488
	char bDecay : 1; // 0x2498
	char bNeedDecay : 1; // 0x2498
	char bInOtherOccupyArea : 1; // 0x2498
	float DecayInterval; // 0x249c
	float NoTeamAreaDecayHPPercent; // 0x24a0
	float TeamAreaDecayHPPercent; // 0x24a4
	uint32_t CurrentPassword; // 0x24b4
	char bLockedByPassword : 1; // 0x24b8
	double LastInputPwdFailedTime; // 0x24c0
	char CanPull : 1; // 0x24c8
	float PullLimitAngle; // 0x24cc
	float BaseDisFromPuller; // 0x24d0
	float IgnoreDiffDisFromPuller; // 0x24d4
	float IgnoreDiffYawFromPuller; // 0x24d8
	float UnLinkDiffDisFromPuller; // 0x24dc
	float UnLinkPitchAngleMax; // 0x24e0
	float LinkedMoveAdjustDiffDist; // 0x24e4
	float LinkedMoveAdjustDiffDistSelf; // 0x24e8
	float LinkedSwimAdjustDiffDistSelf; // 0x24ec
	float LinkedRotYawSpeed; // 0x24f0
	float WeightMultiplyForPuller; // 0x24f4
	float MaxWeightMultiplyForPuller; // 0x24f8
	float SpeedMulAddForPuller; // 0x24fc
	float SwimSpeedMulAddForPuller; // 0x2500
	float CurrentBaseDisFromPuller; // 0x2504
	float CurrentBaseDiffHeight; // 0x2508
	float CurrentUnLinkDiffHeightFromPuller; // 0x250c
	float CurrentLinkedMoveAdjustDiffDist; // 0x2510
	float CurrentLinkedMoveAdjustDiffDistSelf; // 0x2514
	float CurrentLinkedSwimAdjustDiffDistSelf; // 0x2518
	float CurrentWeightMultiplyForPuller; // 0x251c
	float CurrentMaxWeightMultiplyForPuller; // 0x2520
	float LastCheckLinkHeightDiffZ; // 0x2524
	TWeakObjectPtr<ABaseCharacter> Puller; // 0x2528
	char CanAnimalPull : 1; // 0x2538
	TArray<FMoveSeatAnimalPullerInfo> AllowAnimalPullerConfig; // 0x2540
	TArray<TWeakObjectPtr<ABaseCharacter>> InteractiveAnimalPullers; // 0x2550
	UBoxComponent* LinkPullerCheckBoxComponent; // 0x2560
	char CanAddPowerCharacter : 1; // 0x2568
	char InversiveMoveForPowerRider : 1; // 0x2568
	float AddPowerCharInteractiveRadius; // 0x256c
	TArray<FMoveSeatPowerInfo> AllowPowerConfig; // 0x2570
	TArray<FMoveSeatingCharSeatInfo> SeatInfoConfig; // 0x2580
	TArray<TWeakObjectPtr<ABaseCharacter>> InteractivePowerChars; // 0x2590
	TArray<TWeakObjectPtr<ABaseCharacter>> InteractiveNormalPowerChars; // 0x25a0
	TArray<TWeakObjectPtr<ABaseCharacter>> InteractiveReleasePowerChars; // 0x25b0
	char CanResetPos : 1; // 0x25c0
	int32_t ResetPosCoolTime; // 0x25c4
	float ResetPosRadius; // 0x25c8
	ASGStructure* BuildStructureClass; // 0x25d0
	FDateTime LastResetPosDate; // 0x25d8
	char bDebugDraw : 1; // 0x25e0
	char bCantSetCapsuleCollisionProfile : 1; // 0x25e0
	char bMoveIgnorePlatformStructures : 1; // 0x25e0
	char CanControlOnlyPlayer : 1; // 0x25e0
	TArray<AActor*> MoveIgnorePlatformActors; // 0x25e8
	TArray<AActor*> ClientLastMoveIgnorePlatformActors; // 0x25f8
	char bSupportSwimMode : 1; // 0x2618
	float SwimWeightLimit; // 0x261c
	FPassengerAnimsConfig PassengerAnimsConfig; // 0x2620
	FName ReleaseSocket; // 0x2630
	TArray<FName> ReleaseSocketBackUpArray; // 0x2638
	float ReleaseSocketCheckRadius; // 0x2648
	char bReleaseInOriginLocation : 1; // 0x264c
	float ReleaseForwardMoveDistance; // 0x2650
	int32_t Tenacity; // 0x2654
	float PVETakeDamageMultiAdd; // 0x2658
	float InventoryWeight; // 0x265c
	char bPersonalStructure : 1; // 0x2660
	char bCanRepair : 1; // 0x2660
	char bRepairing : 1; // 0x2660
	double NextAllowRepairTime; // 0x2668
	int32_t RepairCooldownTime; // 0x2670
	float RepairInterval; // 0x2674
	float RepairHPPerInterval; // 0x2678
	float RepairHPRemain; // 0x267c
	FTimerHandle RepairHandle; // 0x2680
	float RepairHPPerMul; // 0x2688
};

struct UGameEngine : UEngine {
	float MaxDeltaTime; // 0xde0
	float ServerFlushLogInterval; // 0xde4
	UGameInstance* GameInstance; // 0xde8
};

struct UGuildStoreSettingPanel : USGUI {
	UVerticalBox* LeftVerticalBox; // 0x2d8
	UVerticalBox* RightVerticalBox; // 0x2e0
	UButton* PrePageButton; // 0x2e8
	UButton* NextPageButton; // 0x2f0
	UTextBlock* ShowPageText; // 0x2f8
	UButton* SaveButton; // 0x300
	UGuildStoreItemPriceSlot* GuildStoreItemPriceSlotClass; // 0x308
	UUI_GenericConfirmationDialog* ConfirmSaveUIOverride; // 0x310
	int32_t NumPerPage; // 0x318
};

struct UChildConnection : UNetConnection {
	UNetConnection* Parent; // 0x1af0
};

struct UNewsClientData_GetRankReward_Activity : UNewsClientData {
	FString RankID; // 0x50
	int32_t Rankings; // 0x60
};

struct ALevelSequenceActor : AActor {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x320
	ULevelSequencePlayer* SequencePlayer; // 0x338
	FSoftObjectPath LevelSequence; // 0x340
	FLevelSequenceCameraSettings CameraSettings; // 0x358
	ULevelSequenceBurnInOptions* BurnInOptions; // 0x360
	UMovieSceneBindingOverrides* BindingOverrides; // 0x368
	char bAutoPlay : 1; // 0x370
	char bOverrideInstanceData : 1; // 0x370
	char bReplicatePlayback : 1; // 0x370
	UObject* DefaultInstanceData; // 0x378
	ULevelSequenceBurnIn* BurnInInstance; // 0x380
	bool bShowBurnin; // 0x388
};

struct UInterpTrackInstFloatProp : UInterpTrackInstProperty {
	float ResetFloat; // 0x58
};

struct USourceEffectBitCrusherPreset : USoundEffectSourcePreset {
	FSourceEffectBitCrusherSettings Settings; // 0xc0
};

struct USGItem : UObject {
	TSoftObjectPtr<UTexture2D> ItemIcon; // 0x28
	TSoftObjectPtr<UTexture2D> ComsumedIcon; // 0x50
	FText ItemName; // 0x78
	char bCustomItemName : 1; // 0x90
	FText Description; // 0x98
	FString Param1; // 0xb0
	FString Param2; // 0xc0
	FString Param3; // 0xd0
	FString Param4; // 0xe0
	FString Param5; // 0xf0
	int32_t MaxAmount; // 0x100
	int32_t InitMaxDurable; // 0x104
	char bUseQuality : 1; // 0x108
	char bUseDurableCanMerge : 1; // 0x108
	EItemQualityType ItemQualityType; // 0x109
	float ArmorQualityMul[0x7]; // 0x10c
	float ArmorDurableQualityMul[0x7]; // 0x128
	float WeaponQualityMul[0x7]; // 0x144
	float WeaponCollectionQualityMul[0x7]; // 0x160
	float WeaponDurableQualityMul[0x7]; // 0x17c
	EHumanEquipmentSlotType HumanEquipmentSlotType; // 0x198
	EHorseEquipmentSlotType HorseEquipmentSlotType; // 0x199
	ESiegeEquipmentSlotType SiegeEquipmentSlotType; // 0x19a
	EEquipmentType EquipmentType; // 0x19b
	FChangeEquipStateMaterialSetting EquipmentFlagSetting; // 0x19c
	TArray<ECharacterType> CanEquipedTypes; // 0x1b8
	char bShowUnderwaist : 1; // 0x1c8
	UParticleSystem* ClothBrokenParticle; // 0x1d0
	FSoftObjectPath DestroyedMesh_Male; // 0x1d8
	FSoftObjectPath DestroyedMesh_Female; // 0x1f0
	float BrokenParticleVelocityMin; // 0x208
	float BrokenParticleVelocityMax; // 0x20c
	EWeaponHoldType WeaponHoldType; // 0x210
	UActorComponent* ComponentToAttach_Male; // 0x218
	UActorComponent* GroomToAttach_Male; // 0x220
	UActorComponent* ComponentToAttach_Female; // 0x228
	UActorComponent* GroomToAttach_Female; // 0x230
	TArray<UMaterialInterface*> ClothMaterial; // 0x238
	FName SocketToAttachTo; // 0x248
	FVector LocationOffset; // 0x250
	FRotator RotatorOffset; // 0x25c
	TMap<int32_t, USGItem*> UsePoisonIndexTypeMap; // 0x268
	int32_t PoisonAmount; // 0x2b8
	USGBuff* PoisonBuff; // 0x2c0
	float PoisonBuffRate; // 0x2c8
	TArray<USGItem*> CreatePoisonProjectileTemplate; // 0x2d0
	FGuid UniqueId; // 0x2e0
	int32_t SlotIndex; // 0x2f0
	EEquipWeaponSlot EquipWeaponSlot; // 0x2f4
	int32_t Amount; // 0x2f8
	int32_t ExtraAmount; // 0x2fc
	int32_t LuckAmount; // 0x300
	int32_t PerkAddAmount; // 0x304
	int32_t Durable; // 0x308
	int32_t MaxDurable; // 0x30c
	EItemQuality ItemQuality; // 0x310
	int32_t LeftPoison; // 0x314
	int32_t CurUsePoisonIndex; // 0x318
	FGuid TransportMachineGuid; // 0x31c
	int32_t TransportXianChengKey; // 0x32c
	int64_t TransportTick; // 0x330
	EGameServerPVPType TransportPVPType; // 0x338
	char bSavedToPlayer : 1; // 0x339
	int32_t ShopPropsIndex; // 0x33c
	ECapitalType CapitalType; // 0x340
	TArray<FSGFoodBoxInfo> FoodBoxInfo; // 0x348
	char CompressFlag; // 0x358
	TWeakObjectPtr<USGInventoryComponent> OwnerInventory; // 0x35c
	TWeakObjectPtr<ASGWeapon> AssociatedWeapon; // 0x364
	int32_t Level; // 0x36c
	int32_t GenerateBuffLevel; // 0x370
	int32_t TameLevel; // 0x374
	float QualityCorrection; // 0x378
	FSoftClassPath SoftItemActorClass; // 0x380
	TArray<FSoftClassPath> SoftItemToStructure; // 0x398
	char bEquipAutoSpawnStructure : 1; // 0x3a8
	USGItem* QuenchCraftItem; // 0x3b0
	USGItem* BeforeQuenchItem; // 0x3b8
	USGFurDatabase* FurDatabase[0x2]; // 0x3c0
	char bCanUse : 1; // 0x3d0
	char bCanCrouchUse : 1; // 0x3d0
	char bCanRideUse : 1; // 0x3d0
	char bCanGeneralUse : 1; // 0x3d0
	char bCanSiegeUse : 1; // 0x3d0
	char bCanRideTameUse : 1; // 0x3d0
	UActorComponent* RideTameComponentToAttach; // 0x3d8
	USkeletalMeshComponent* SaddleReinsComponentToAttach; // 0x3e0
	char bCanRecharge : 1; // 0x3e8
	char bCanCosumeForTarget : 1; // 0x3e8
	TArray<AActor*> ConsumeTargetTypes; // 0x3f0
	char bCanCosumeForSelf : 1; // 0x400
	char bUseDurable : 1; // 0x400
	char bInitDurableFull : 1; // 0x400
	char bCanDrop : 1; // 0x400
	char bCanMove : 1; // 0x400
	char bCanTransport : 1; // 0x400
	char bCanPVETransport : 1; // 0x400
	char bIsCraftInStructure : 1; // 0x400
	char bCraftNeedGuildAuthority : 1; // 0x401
	char bNeedGuildIsXianZhang : 1; // 0x401
	TArray<USGItem*> CraftInStructureItem; // 0x408
	char bIsUseInStructure : 1; // 0x418
	char bIsCraftInActiveStructure : 1; // 0x418
	int32_t CraftInActiveStructureTemperature; // 0x41c
	int32_t MaxCanCraftAmount; // 0x420
	char bPreventGivingFromDemolish : 1; // 0x424
	char bExpireAfterXianChengOccupied : 1; // 0x424
	char bCanCreateStructure : 1; // 0x424
	char bCanSetGuildID : 1; // 0x424
	FGuid GuildId; // 0x428
	char bFromTrapAnimal : 1; // 0x438
	int32_t TrapAnimalLevelMin; // 0x43c
	int32_t TrapAnimalLevelMax; // 0x440
	int32_t TrapAnimalSpeciesIndex; // 0x444
	FString TrapAnimalName; // 0x448
	FVector TrapAnimalScale; // 0x458
	int32_t TrapAnimalLevel; // 0x464
	ECharacterSex TrapAnimalSex; // 0x468
	int32_t TrapAnimalSpecies; // 0x46c
	TArray<FCraftResourceRequirement> BaseCraftResourceRequirements; // 0x470
	int32_t AddCraftQuantity; // 0x480
	float TimeToCraft; // 0x484
	char bAutoCraft : 1; // 0x488
	float BaseCraftExperienceToAdd; // 0x48c
	float BaseExploitExperienceToAdd; // 0x490
	EItemCraftSkillType ItemCraftSkillType; // 0x494
	float NextCraftRemainTime; // 0x498
	USGItem* ExpiredItem; // 0x4a0
	float ExpireTime; // 0x4a8
	char bStopExpireTime : 1; // 0x4ac
	float ExpireRemaingTime; // 0x4b0
	EItemType ItemType; // 0x4b4
	EItemSubType ItemSubType; // 0x4b5
	char bUseItemSubTypeShowTips : 1; // 0x4b6
	EAmmoType AmmoType; // 0x4b7
	TArray<EConsumeItemType> ItemConsumeType; // 0x4b8
	float ItemConsumeCD; // 0x4c8
	EResourceType ResourceType; // 0x4cc
	char bCanEquip : 1; // 0x4cd
	int32_t SortWeight; // 0x4d0
	char bPlayConsumeMontage : 1; // 0x4d4
	FName ConsumeSoundID; // 0x4d8
	EPlayConsumeMontageType PlayConsumeMontageType; // 0x4e0
	UAnimMontage* ConsumeMontage; // 0x4e8
	float SlashingArmor; // 0x4f0
	float PiercingArmor; // 0x4f4
	float CrushingArmor; // 0x4f8
	float SiegeArmor; // 0x4fc
	bool IsHeavyArmor; // 0x500
	int32_t Hardness; // 0x504
	float ChargeRes; // 0x508
	float Charge; // 0x50c
	float BaseChargeDamage; // 0x510
	float SpeedBonusRate; // 0x514
	float MoveSpeedPunish; // 0x518
	TMap<int32_t, USGItem*> UseAmmoIndexTypeMap; // 0x520
	int32_t CurUseAmmoIndex; // 0x570
	TArray<USGBuff*> AddBuffs; // 0x578
	TArray<FModifyData> ModifyData; // 0x588
	float ServerCheckConsumeItemDistance; // 0x598
	char bCanExchange : 1; // 0x59c
	char bCanRepair : 1; // 0x59c
	char bPerkStructureRepairInSelf : 1; // 0x59c
	char bRepairRequiresInStructure : 1; // 0x59c
	float FullRepairExperienceToAdd; // 0x5a0
	int32_t FuelTemperature; // 0x5a4
	TArray<FCraftResourceRequirement> RepairResourceRequirements; // 0x5a8
	char bBrokenDestroy : 1; // 0x5b8
	USGItem* BrokenGiveItemClass; // 0x5c0
	FVector BrokenVelocity; // 0x5c8
	float RepairReduceDurablePercent; // 0x5d4
	char bDeadChangeDurable : 1; // 0x5d8
	char bZeroDurableRemoveAmount : 1; // 0x5d8
	USGItem* ZeroDurableGiveItemClass; // 0x5e0
	char bMaxDurableRemoveAmount : 1; // 0x5e8
	USGItem* MaxDurableGiveItemClass; // 0x5f0
	char bNeedQuench : 1; // 0x5f8
	float QuenchTime; // 0x5fc
	TMap<EItemQuality, FFunctionResourceArray> QuenchResourceRequirement; // 0x600
	float Weight; // 0x650
	float MinNPCSpawnRadius; // 0x654
	float MaxNPCSpawnRadius; // 0x658
	USGToolTipWidget* TooltipsClass; // 0x660
	FGuid HuKouBindPlayerID; // 0x668
	int32_t HuKouBindServerID; // 0x678
	int32_t HuKouBindXianchengKey; // 0x67c
	float HuKouExpireTime; // 0x680
	FName AdditiveSoundID; // 0x684
	float NoiseValue; // 0x68c
	int32_t EquippedAddInventoryMaxAmount; // 0x690
	ECapitalType PriceType; // 0x694
	int32_t Price; // 0x698
	float OccupySellPrice; // 0x69c
	char bDontCalTotal : 1; // 0x6a0
	float ReduceRebornMinutes; // 0x6a4
	int32_t AddLifeCount; // 0x6a8
	float AddStoreFoods; // 0x6ac
	float AddStoreMoods; // 0x6b0
	TArray<FArtofWarItem> AWEffectPerk; // 0x6b8
	float AddLoyalty; // 0x6c8
	float MaxAddToLoyalty; // 0x6cc
	float AddTame; // 0x6d0
	int32_t HerbCraftMoreAmount; // 0x6d4
	EResourceItemType ResourceItemType; // 0x6d8
	AActor* ItemActorClassRef; // 0x6f0
	TArray<ASGStructure*> ItemToStructureRef; // 0x6f8
	int32_t BaoZangPositionIndex; // 0x708
	EBaoZangType BaoZangType; // 0x70c
	float CraftAddSkillExp; // 0x710
	float RepairAddSkillExp; // 0x714
	float UseAddSkillExp; // 0x718
	EItemCraftSkillType FinishCraftRepairAddSkillType; // 0x71c
	int32_t FoodBoxMaxFoodAmount; // 0x720
	int32_t LegendId; // 0x724
	ELegendItemType LegendItemType; // 0x728
	float LegendAddHPMul; // 0x72c
	USGItem* AssociatedSkinItemClass; // 0x730
	float SkinArmorSlashingMul; // 0x738
	float SkinArmorPiercingMul; // 0x73c
	float SkinArmorCrushingMul; // 0x740
	float SkinArmorSiegeMul; // 0x744
	float SkinWeaponSlashingMul; // 0x748
	float SkinWeaponPiercingMul; // 0x74c
	float SkinWeaponCrushingMul; // 0x750
	float SkinWeaponSiegeMul; // 0x754
	char bUseDateExpire : 1; // 0x758
	int32_t ExpiredDays; // 0x75c
	FDateTime ExpireDateTime; // 0x760
	float ProtectionEVValue[0x4]; // 0x768
	int32_t Strengthen_Index; // 0x778
	int32_t Strengthen_Durable; // 0x77c
	TArray<USGItem*> StrengthenItem; // 0x780
	FString StrengthenKey; // 0x790
	int32_t StrengthenCount; // 0x7a0
	float Strengthen_DurablePCT; // 0x7a4
	float Strengthen_SlashingDamage; // 0x7a8
	float Strengthen_PiercingDamage; // 0x7ac
	float Strengthen_CrushingDamage; // 0x7b0
	float Strengthen_SiegeDamage; // 0x7b4
	float Strengthen_CollectionDamage; // 0x7b8
	int32_t Strengthen_Tenacity; // 0x7bc
	float Strengthen_SlashingArmor; // 0x7c0
	float Strengthen_PiercingArmor; // 0x7c4
	float Strengthen_CrushingArmor; // 0x7c8
	float Strengthen_SiegeArmor; // 0x7cc
	char bHasInitStrengh : 1; // 0x7d0
	bool CanUsedByGeneral; // 0x7d1
	bool CanUsedByPlayer; // 0x7d2
	int32_t PlayerUseLevelLimit; // 0x7d4
	int32_t GeneralUseLevelLimit; // 0x7d8
	int32_t PlayerUseSkillLevelLimit; // 0x7dc
	int32_t GeneralUseSkillLevellLimit; // 0x7e0
	double AddSkillValue; // 0x7e8
	ESkillType AddSkillType; // 0x7f0
	int32_t TrafficGoodsIndex; // 0x7f4
	TrafficGoodsType GoodsType; // 0x7f8
	FDateTime LockTime; // 0x800
	bool NeedCheckDLC; // 0x808
	TArray<int32_t> DLCList; // 0x810
	EInventoryItemChangeReason AddItemReason; // 0x820
	EItemDBLogLevel ItemLogLevel; // 0x821
	int32_t AppraisalDistance; // 0x824
	int32_t TelescopeDurationTime; // 0x828
	int32_t WalletCapitalAmount; // 0x82c
	ECapitalType WalletCapitalType; // 0x830
	FModifyConfig RiderPlevisModifyData; // 0x834
	FModifyConfig RiderLeftCalfModifyData; // 0x880
	FModifyConfig RiderLeftFootModifyData; // 0x8cc
	FModifyConfig RiderRightCalfModifyData; // 0x918
	FModifyConfig RiderRightFootModifyData; // 0x964
	char bCustomFlag : 1; // 0x9b0
	TSoftObjectPtr<UTexture2D> FlagPreviewIcon; // 0x9b8
	float FlagImageModifies[0x5]; // 0x9e0
	FName FlagMaterialSlotName; // 0x9f4
	FString FlagImageString; // 0xa00
	char bExistOnlyOnStructureSeat : 1; // 0xa10
	char bIsFuelGuideItem : 1; // 0xa10
	EActivityNumber ActivityNumber; // 0xa11
	int32_t ActivityUseMaxCount; // 0xa14
	TArray<FItemSpwanCharacter> SpwanCharacterList; // 0xa18
	bool UseDropItem; // 0xa28
	FDeathDropItemData DropItemData; // 0xa2c
	AActor* FireworksClass; // 0xa38
	ASGWeapon* NeedWeaponClass; // 0xa40
};

struct UEnvQueryGenerator : UEnvQueryNode {
	FString OptionName; // 0x30
	UEnvQueryItemType* ItemType; // 0x40
	char bAutoSortTests : 1; // 0x48
};

struct UAnimClassData : UObject {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x30
	USkeleton* TargetSkeleton; // 0x40
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x48
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x58
	TArray<FAnimBlueprintFunction> AnimBlueprintFunctions; // 0xa8
	TArray<FAnimBlueprintFunctionData> AnimBlueprintFunctionData; // 0xb8
	TArray<TFieldPath<FStructProperty>> AnimNodeProperties; // 0xc8
	TArray<TFieldPath<FStructProperty>> LinkedAnimGraphNodeProperties; // 0xe8
	TArray<TFieldPath<FStructProperty>> LinkedAnimLayerNodeProperties; // 0x108
	TArray<TFieldPath<FStructProperty>> PreUpdateNodeProperties; // 0x128
	TArray<TFieldPath<FStructProperty>> DynamicResetNodeProperties; // 0x148
	TArray<TFieldPath<FStructProperty>> StateMachineNodeProperties; // 0x168
	TArray<TFieldPath<FStructProperty>> InitializationNodeProperties; // 0x188
	TMap<FName, FGraphAssetPlayerInformation> GraphNameAssetPlayers; // 0x1a8
	TArray<FName> SyncGroupNames; // 0x1f8
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x208
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x218
	FPropertyAccessLibrary PropertyAccessLibrary; // 0x268
};

struct UBTTask_BlueprintBase : UBTTaskNode {
	AAIController* AIOwner; // 0x70
	AActor* ActorOwner; // 0x78
	FIntervalCountdown TickInterval; // 0x80
	char bShowPropertyDetails : 1; // 0xa0
};

struct UDeformMeshPolygonsTransformProperties : UInteractiveToolPropertySet {
	EGroupTopologyDeformationStrategy DeformationStrategy; // 0x60
	EQuickTransformerMode TransformMode; // 0x61
	bool bSelectFaces; // 0x62
	bool bSelectEdges; // 0x63
	bool bSelectVertices; // 0x64
	bool bSnapToWorldGrid; // 0x65
	bool bShowWireframe; // 0x66
	EWeightScheme SelectedWeightScheme; // 0x68
	double HandleWeight; // 0x70
	bool bPostFixHandles; // 0x78
};

struct UStructureInfoHUDSlot : UUserWidget {
	UTextBlock* TextBlock; // 0x260
};

struct UMaterialExpressionNormalize : UMaterialExpression {
	FExpressionInput VectorInput; // 0x40
};

struct ASphereReflectionCapture : AReflectionCapture {
	UDrawSphereComponent* DrawCaptureRadius; // 0x318
};

struct UUI_MenuHead : UUserWidget {
	UImage* HeadImage; // 0x260
	TSoftObjectPtr<UTexture2D> MenuIcon; // 0x268
	UTextBlock* HeadText; // 0x290
	FText MenuText; // 0x298
	UButton* CloseButton; // 0x2b0
	char bShowCloseButton : 1; // 0x2b8
};

struct UGameplayAbility_Montage : UGameplayAbility {
	UAnimMontage* MontageToPlay; // 0x3b0
	float PlayRate; // 0x3b8
	FName SectionName; // 0x3bc
	TArray<UGameplayEffect*> GameplayEffectClassesWhileAnimating; // 0x3c8
	TArray<UGameplayEffect*> GameplayEffectsWhileAnimating; // 0x3d8
};

struct UAchievementTypeItem : UUserWidget {
	TSoftObjectPtr<UTexture2D> NormalTexture; // 0x260
	TSoftObjectPtr<UTexture2D> SelectTexture; // 0x288
	UAchievementTypeItem* ChildItemTemplate; // 0x2b0
	UGridPanel* ChildItemGrid; // 0x2e8
	UButton* BtnBg; // 0x2f0
	UImage* ImgBg; // 0x2f8
	UTextBlock* TbAchievementType; // 0x300
	UImage* ImgUnknow; // 0x308
	TArray<UAchievementTypeItem*> ChildItemList; // 0x310
	UAchievementTypeItem* SelectAchievementTypeItem; // 0x320
	UAchievementTypePanel* RootAchievementTypePanel; // 0x328
	FMulticastInlineDelegate OnAchievementTypeItemSelectStateChanged; // 0x330
};

struct UUI_N_ShopConfirmBuy : USGUI {
	UButton* ButtonCancel; // 0x2d8
	UButton* ButtonRight; // 0x2e0
	UTextBlock* ButtonRightText; // 0x2e8
	UImage* CapitalImageUp; // 0x2f0
	UTextBlock* MoneyText; // 0x2f8
	UTextBlock* ItemNameText; // 0x300
	UHorizontalBox* DownHBox; // 0x308
	UImage* CapitalImageDown; // 0x310
	UTextBlock* CurCapitalNumText; // 0x318
	UTexture2D* iconGold; // 0x320
	UTexture2D* iconSilver; // 0x328
	UTexture2D* iconCopper; // 0x330
};

struct ASGStructureFrame : ASGStructure {
	float BuildCoolTime; // 0xb98
	double NextAllowBuildTime; // 0xba0
	float FrameStepSkillExp; // 0xba8
	TArray<FStructureFrameStep> StructureFrameSteps; // 0xbb0
	AActor* FrameSpawnActorTemplate; // 0xbc0
	FVector FrameSpawnLocOffSet; // 0xbc8
	FLinearColor MeshSelectedColor; // 0xbd4
	FLinearColor MeshUnSelectedColor; // 0xbe4
	char bEnableMeshSpawnEffect : 1; // 0xbf4
	float MeshSpawnEffectInterval; // 0xbf8
	int32_t StepIndex; // 0xbfc
	TArray<FName> CurrentStepCreatedMesh; // 0xc00
	FName LastSelectedMesh; // 0xc10
	int32_t SavedStepNum; // 0xc18
	FTimerHandle MeshSpawnEffectHandle; // 0xc20
};

struct AReflectionCapture : AActor {
	UReflectionCaptureComponent* CaptureComponent; // 0x310
};

struct UReplicationGraphNode_TearOff_ForConnection : UReplicationGraphNode {
	TArray<FTearOffActorInfo> TearOffActors; // 0x50
};

struct UWidgetSwitcherSlot : UPanelSlot {
	FMargin Padding; // 0x40
	EHorizontalAlignment HorizontalAlignment; // 0x50
	EVerticalAlignment VerticalAlignment; // 0x51
};

struct UGuildStoreHorsePanel : USGUI {
	TWeakObjectPtr<ASGStructureGuildStore> BindGuildStore; // 0x2d8
	UGuildStoreHorseItem* GuildStoreHorseItemTemplate; // 0x2e0
	UScrollBox* ScrollLevelList; // 0x2f0
	UScrollBox* ScrollDBList; // 0x2f8
	UButton* SelectedToPlayerButton; // 0x300
	UButton* AllToPlayerButton; // 0x308
	UButton* SelectedToStoreButton; // 0x310
	UButton* AllToStoreButton; // 0x318
	UUI_GenericConfirmationDialog* ConfirmGetHorseUIOverride; // 0x320
};

struct UMovieSceneLevelVisibilitySection : UMovieSceneSection {
	ELevelVisibility Visibility; // 0xf0
	TArray<FName> LevelNames; // 0xf8
};

struct UEnvQueryGenerator_ProjectedPoints : UEnvQueryGenerator {
	FEnvTraceData ProjectionData; // 0x50
};

struct UParticleModuleAccelerationDragScaleOverLife : UParticleModuleAccelerationBase {
	UDistributionFloat* DragScale; // 0x38
	FRawDistributionFloat DragScaleRaw; // 0x40
};

struct UThrobber : UWidget {
	int32_t NumberOfPieces; // 0x108
	bool bAnimateHorizontally; // 0x10c
	bool bAnimateVertically; // 0x10d
	bool bAnimateOpacity; // 0x10e
	USlateBrushAsset* PieceImage; // 0x110
	FSlateBrush Image; // 0x118
};

struct UPerkLevelDivisionLine : UUserWidget {
	UTextBlock* TbLv; // 0x260
};

struct UUI_N_ShopBannerItem : UUserWidget {
	UImage* ItemImage; // 0x260
	UBorder* ItemSecImage; // 0x268
	UTextBlock* ItemNameText; // 0x270
	UTextBlock* ItemIntroText; // 0x278
	UButton* PurchaseBtn; // 0x280
};

struct UUI_CreateRole : UUI_MakeAppearance {
	UButton* BtnConfirm; // 0x680
	UTextBlock* TbConfirmCreate; // 0x688
	UEditableTextBox* EtbName; // 0x690
	UUI_RadioButtonView* SexView; // 0x698
};

struct UTransformProxy : UObject {
	bool bRotatePerObject; // 0x70
	bool bSetPivotMode; // 0x71
	FTransform SharedTransform; // 0x90
	FTransform InitialSharedTransform; // 0xc0
};

struct UUI_SeasonShop : UUserWidget {
	UTextBlock* SeasonCapitalNumText; // 0x260
};

struct UUI_ServerAdmin : USGUI {
	UOptionButton* ItemButton; // 0x2d8
	UOptionButton* PlayerButton; // 0x2e0
	UOptionButton* NpcButton; // 0x2e8
	UOptionButton* GeneralButton; // 0x2f0
	UOptionButton* HorseButton; // 0x2f8
	UOptionButton* ParamButton; // 0x300
	UOptionButton* BattleButton; // 0x308
	UOptionButton* OtherButton; // 0x310
	UOptionButton* PrivateServerButton; // 0x318
	UUI_AdminSubPanel* ItemPanel; // 0x320
	UUI_AdminSubPanel* PlayerPanel; // 0x328
	UUI_AdminSubPanel* NpcPanel; // 0x330
	UUI_AdminSubPanel* GeneralPanel; // 0x338
	UUI_AdminSubPanel* HorsePanel; // 0x340
	UUI_AdminSubPanel* ParamPanel; // 0x348
	UUI_AdminSubPanel* BattlePanel; // 0x350
	UUI_AdminSubPanel* OtherPanel; // 0x358
	UUI_AdminSubPanel* PrivateServerPanel; // 0x360
};

struct UUI_SystemMsgRow : UUserWidget {
	UTextBlock* ChannelText; // 0x260
	UVerticalBox* MsgVerticalBox; // 0x268
	int32_t WidgetWidthParm; // 0x270
	FSlateFontInfo MsgFont; // 0x278
	TMap<EChatSlotType, FLinearColor> ChannelNameColorMap; // 0x2d0
	int32_t WrapAdjustVal; // 0x320
};

struct UBTTask_SetStatus : UBTTask_SGBlueprintBase {
	EAIStatusType Enum_AIStatusType; // 0xc0
};

struct UConstructionPlaneMechanic : UInteractionMechanic {
	UTransformGizmo* PlaneTransformGizmo; // 0xc8
	UTransformProxy* PlaneTransformProxy; // 0xd0
	USingleClickInputBehavior* ClickToSetPlaneBehavior; // 0xe8
};

struct URespawnPointGroup : UUserWidget {
	USlotRespawnButton* RespawnButtonTemplate; // 0x260
	float RespawnButtonSizeY; // 0x268
	int32_t MaxRespawnButtonNumPerPage; // 0x26c
	FVector2D GroupSize; // 0x270
	FVector2D GroupOffset; // 0x278
	UUniformGridPanel* UGPRespawnPointGroup; // 0x2a0
	UScrollBox* RespawnPointScrollBox; // 0x2a8
};

struct ASGStructureHorn : ASGStructure {
	float EffectRadius; // 0xb98
	TArray<USGBuff*> EffectBuffs; // 0xba0
	float ContinuousActiveMaxTime; // 0xbb0
	float ActiveProgressTime; // 0xbb4
	float ActiveCoolTime; // 0xbb8
	int64_t LastActivedTimeTicks; // 0xbc0
	FVector ActiveOffsetPos; // 0xbc8
	FRotator ActiveOffsetRot; // 0xbd4
	char ActiveNeedXianChengGuard : 1; // 0xbe0
	UAnimMontage* ActiveMontage; // 0xbe8
	FName ActiveSoundID; // 0xbf0
	float NotifyPlayerRadius; // 0xbf8
	int32_t ContinuousActiveCount; // 0xbfc
	TWeakObjectPtr<ASGGeneralCharacter> BindGeneralChar; // 0xc00
	FTimerHandle ActiveProgressHandle; // 0xc08
	TWeakObjectPtr<USGAudioComponent> ActiveAudioComponent; // 0xc10
};

struct UNiagaraDataInterfaceArrayColor : UNiagaraDataInterfaceArray {
	TArray<FLinearColor> ColorData; // 0x50
};

struct UDatasmithStaticMeshComponentTemplate : UDatasmithObjectTemplate {
	UStaticMesh* StaticMesh; // 0x30
	TArray<UMaterialInterface*> OverrideMaterials; // 0x38
};

struct UQuitMatchCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UParticleModuleLocationPrimitiveSphere_Seeded : UParticleModuleLocationPrimitiveSphere {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xe0
};

struct UMovieSceneBoolSection : UMovieSceneSection {
	bool DefaultValue; // 0xe8
	FMovieSceneBoolChannel BoolCurve; // 0xf0
};

struct UMaterialExpressionSpeedTree : UMaterialExpression {
	FExpressionInput GeometryInput; // 0x40
	FExpressionInput WindInput; // 0x54
	FExpressionInput LODInput; // 0x68
	FExpressionInput ExtraBendWS; // 0x7c
	ESpeedTreeGeometryType GeometryType; // 0x90
	ESpeedTreeWindType WindType; // 0x91
	ESpeedTreeLODType LODType; // 0x92
	float BillboardThreshold; // 0x94
	bool bAccurateWindVelocities; // 0x98
};

struct APaperSpriteActor : AActor {
	UPaperSpriteComponent* RenderComponent; // 0x310
};

struct UTattooAddLayerButton : UUserWidget {
	UButton* BtnBg; // 0x260
};

struct UMaterialExpressionFontSample : UMaterialExpression {
	UFont* Font; // 0x40
	int32_t FontTexturePage; // 0x48
};

struct USoundNodeDialoguePlayer : USoundNode {
	FDialogueWaveParameter DialogueWaveParameter; // 0x48
	char bLooping : 1; // 0x68
};

struct UAnimMontage : UAnimCompositeBase {
	FAlphaBlend BlendIn; // 0xa8
	float BlendInTime; // 0xd8
	FAlphaBlend BlendOut; // 0xe0
	float BlendOutTime; // 0x110
	float BlendOutTriggerTime; // 0x114
	FName SyncGroup; // 0x118
	int32_t SyncSlotIndex; // 0x120
	FMarkerSyncData MarkerData; // 0x128
	TArray<FCompositeSection> CompositeSections; // 0x148
	TArray<FSlotAnimationTrack> SlotAnimTracks; // 0x158
	TArray<FBranchingPoint> BranchingPoints; // 0x168
	bool bEnableRootMotionTranslation; // 0x178
	bool bEnableRootMotionRotation; // 0x179
	bool bEnableAutoBlendOut; // 0x17a
	ERootMotionRootLock RootMotionRootLock; // 0x17b
	TArray<FBranchingPointMarker> BranchingPointMarkers; // 0x180
	TArray<int32_t> BranchingPointStateNotifyIndices; // 0x190
	FTimeStretchCurve TimeStretchCurve; // 0x1a0
	FName TimeStretchCurveName; // 0x1c8
};

struct UBTTask_CheckDesiredLocation : UBTTask_SGBlueprintBase {
	float FinishedDistance; // 0xd0
	char bUpdateKeepAwayDesiredActor : 1; // 0xd4
	char bUpdateKeepInPlaceLoc : 1; // 0xd4
	char bUpdateDesiredLocOnActor : 1; // 0xd4
	char bUpdateDesiredLocOnFormation : 1; // 0xd4
};

struct UTimelineTemplate : UObject {
	float TimelineLength; // 0x28
	ETimelineLengthMode LengthMode; // 0x2c
	char bAutoPlay : 1; // 0x2d
	char bLoop : 1; // 0x2d
	char bReplicated : 1; // 0x2d
	char bIgnoreTimeDilation : 1; // 0x2d
	TArray<FTTEventTrack> EventTracks; // 0x30
	TArray<FTTFloatTrack> FloatTracks; // 0x40
	TArray<FTTVectorTrack> VectorTracks; // 0x50
	TArray<FTTLinearColorTrack> LinearColorTracks; // 0x60
	TArray<FBPVariableMetaDataEntry> MetaDataArray; // 0x70
	FGuid TimelineGuid; // 0x80
	FName VariableName; // 0x90
	FName DirectionPropertyName; // 0x98
	FName UpdateFunctionName; // 0xa0
	FName FinishedFunctionName; // 0xa8
};

struct UParticleModuleColor_Seeded : UParticleModuleColor {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct UGizmoAxisScaleParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float ScaleMultiplier; // 0x68
	float Parameter; // 0x6c
	FGizmoFloatParameterChange LastChange; // 0x70
	FVector CurScaleAxis; // 0x78
	FVector CurScaleOrigin; // 0x84
	FTransform InitialTransform; // 0x90
};

struct UDisplaceMeshDirectionalFilterProperties : UInteractiveToolPropertySet {
	bool bEnableFilter; // 0x60
	FVector FilterDirection; // 0x64
	float FilterWidth; // 0x70
};

struct UModelComponent : UPrimitiveComponent {
	UBodySetup* ModelBodySetup; // 0x4a0
};

struct UEditableTextBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FEditableTextBoxStyle EditableTextBoxStyle; // 0x30
};

struct USGFurDatabase : UObject {
	TArray<FGroomComponentInstance> GroomComponents; // 0x28
	TArray<FSkeletalMeshComponentInstance> SkeletalMeshComponents; // 0x38
};

struct UUI_NPCTalk : USGUI {
	UTextBlock* NPCNameText; // 0x2d8
	URichTextBlock* NPCTalkAnswerText; // 0x2e0
	UVerticalBox* QuestionVerticalBox; // 0x2e8
	UWidgetAnimation* ShowTalkAnimation; // 0x2f0
	UWidgetAnimation* ShowAnswerAnimation; // 0x2f8
	UWidgetAnimation* ShowNextQuestionAnimation; // 0x300
	UUI_NPCTalkSlot* NPCTalkSlotClass; // 0x308
	TWeakObjectPtr<ASGGeneralCharacter> BindGeneralCharacter; // 0x310
};

struct AUIWSManager : AActor {
	bool UpdateLightInfo; // 0x310
	bool ContinuousLightUpdate; // 0x311
	bool CenterSimOnPawn; // 0x312
	bool bEnableCapture; // 0x313
	FVector WindVector; // 0x314
	float WindTurbulence; // 0x320
	float UnderWaterEffectBias; // 0x324
	float CausticBrightnessMult; // 0x328
	int32_t CaptureRes; // 0x32c
	UMaterialInterface* PPUnderWaterMat; // 0x330
	UMaterialInstanceDynamic* PPUnderWaterMID; // 0x338
	UTextureRenderTarget2D* CaptureRT; // 0x340
	UMaterialInterface* EpicPPUnderWaterMat; // 0x350
	UMaterialInstanceDynamic* EpicPPUnderWaterMID; // 0x358
	UMaterialInterface* UnderWaterScreenWaveMat; // 0x360
	UMaterialInstanceDynamic* UnderWaterScreenWaveMID; // 0x368
	float DepthOfFieldFstop; // 0x370
	float DepthOfFieldFocalDistance; // 0x374
	bool CanUseGerstnerWaterWave; // 0x378
	UMaterialParameterCollection* MPC_UIWSWaterBodies; // 0x380
	AUIWSWaterBody* CurrentPriorityBody; // 0x3a0
	AUIWSWaterBody* LastPriorityBody; // 0x3a8
	AUIWSCapture* CaptureActor; // 0x3b0
};

struct UWBP_GenericMultiItemDialog_C : UUI_GenericMultiItemDialog {
	UImage* AllBg; // 0x4e8
	UImage* Image_35; // 0x4f0
	UImage* Image_79; // 0x4f8
	UImage* Image_137; // 0x500
};

struct UAllianceApplySlot : USGUI {
	UTextBlock* ApplyNameText; // 0x2d8
	UTextBlock* ApplyTimeText; // 0x2e0
	UTextBlock* ApplyVerifyText; // 0x2e8
	UDataButton* AgreeDataButton; // 0x2f0
	UDataButton* RejectDataButton; // 0x2f8
};

struct UNiagaraDataInterfaceWater : UNiagaraDataInterface {
	AWaterBody* SourceBody; // 0x38
};

struct UWBP_Setting_C : UUI_Setting {
	UImage* bg; // 0x328
	UImage* BottomBg; // 0x330
	UImage* ImgBottom; // 0x338
	UImage* ImgLeftBg; // 0x340
	UImage* ImgMidBg; // 0x348
	UImage* ImgRightBg; // 0x350
	UImage* ImgTop; // 0x358
	UWBP_SettingRadioButtonView_C* SettingRadioButtonView; // 0x360
};

struct USoundNodeDelay : USoundNode {
	float DelayMin; // 0x48
	float DelayMax; // 0x4c
};

struct UDisplaceMeshTool : USingleSelectionTool {
	UDisplaceMeshCommonProperties* CommonProperties; // 0x88
	UDisplaceMeshDirectionalFilterProperties* DirectionalFilterProperties; // 0x90
	UDisplaceMeshTextureMapProperties* TextureMapProperties; // 0x98
	UDisplaceMeshPerlinNoiseProperties* NoiseProperties; // 0xa0
	UDisplaceMeshSineWaveProperties* SineWaveProperties; // 0xa8
};

struct UOceanGenerator : UWaterBodyGenerator {
	TArray<UOceanBoxCollisionComponent*> CollisionBoxes; // 0x28
	TArray<UOceanCollisionComponent*> CollisionHullSets; // 0x38
};

struct UInAppPurchaseRestoreCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UParticleModuleColorOverLife : UParticleModuleColorBase {
	FRawDistributionVector ColorOverLife; // 0x30
	FRawDistributionFloat AlphaOverLife; // 0x78
	char bClampAlpha : 1; // 0xa8
};

struct UMovieSceneEventTrack : UMovieSceneNameableTrack {
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	EFireEventsAtPosition EventPosition; // 0x84
	TArray<UMovieSceneSection*> Sections; // 0x88
};

struct UMaterialExpressionBreakMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput MaterialAttributes; // 0x40
};

struct UMaterialExpressionDeriveNormalZ : UMaterialExpression {
	FExpressionInput InXY; // 0x40
};

struct URadarChart : UWidget {
	TArray<FRadarChartSegment> Segments; // 0x108
	char bWrapWithInvalidationPanel : 1; // 0x118
	char bDrawLabels : 1; // 0x118
	char bDrawBackground : 1; // 0x118
	char bDrawOutline : 1; // 0x118
	char bDrawSegmentCuts : 1; // 0x118
	char bDrawCutsOnTop : 1; // 0x118
	char bDrawSegmentDividers : 1; // 0x118
	char bDrawDividersOnTop : 1; // 0x118
	char bKeepAspectRatio : 1; // 0x119
	float ChartScale; // 0x11c
	FVector2D Margin; // 0x120
	FRadarChartColorOverwrite LabelColor; // 0x128
	FSlateFontInfo LabelFont; // 0x140
	FVector2D IconSize; // 0x198
	FRadarChartAppearance BGAppearance; // 0x1a0
	FRadarChartColorOverwrite BGColorOverwrite; // 0x1c8
	float OutlineThickness; // 0x1dc
	FLinearColor OutlineColor; // 0x1e0
	float SegmentCutsThickness; // 0x1f0
	FLinearColor SegmentCutsColor; // 0x1f4
	float SegmentDividerThickness; // 0x204
	char SegmentDividersCount; // 0x208
	char FromSegmentDividersCount; // 0x209
	FLinearColor SegmentDividerColor; // 0x20c
	FRadarChartAppearance ValuesAppearance; // 0x220
	TArray<FRadarChartValueLayer> ValueLayers; // 0x248
	UMaterialInstanceDynamic* BackgroundMID; // 0x268
	UMaterialInstanceDynamic* ValuesMID; // 0x270
	UMaterialInterface* OpaqueMaterial; // 0x278
	UMaterialInterface* TranslucentMaterial; // 0x280
	UMaterialInterface* AdditiveMaterial; // 0x288
};

struct UWBP_ScalabilityDetailSetting_C : UUI_ScalabilityDetailPanel {
	UImage* TitleImage; // 0x2a0
};

struct UUdpMessagingSettings : UObject {
	bool EnabledByDefault; // 0x28
	bool EnableTransport; // 0x29
	bool bAutoRepair; // 0x2a
	bool bStopServiceWhenAppDeactivates; // 0x2b
	FString UnicastEndpoint; // 0x30
	FString MulticastEndpoint; // 0x40
	EUdpMessageFormat MessageFormat; // 0x50
	char MulticastTimeToLive; // 0x51
	TArray<FString> StaticEndpoints; // 0x58
	bool EnableTunnel; // 0x68
	FString TunnelUnicastEndpoint; // 0x70
	FString TunnelMulticastEndpoint; // 0x80
	TArray<FString> RemoteTunnelEndpoints; // 0x90
};

struct AMiniMapMarkActor : AActor {
	float Distance; // 0x358
};

struct UBaseMediaSource : UMediaSource {
	FName PlayerName; // 0x80
};

struct ULocationServicesImpl : UObject {
	FMulticastInlineDelegate OnLocationChanged; // 0x28
};

struct UBTTask_DoFeed : UBTTask_AnimalBase {
	float OverrideBrakingDistance; // 0xd0
};

struct UPolyEditOffsetProperties : UInteractiveToolPropertySet {
	bool bUseFaceNormals; // 0x60
};

struct UGuanAiFlagSlot : USGUI {
	UTextBlock* GuanAiNameText; // 0x2d8
	UImage* GuanAiImage; // 0x2e0
	UCanvasPanel* OwnerGuildPanel; // 0x2e8
	UTaishouTeamInfoSlot* TeamInfoSlotOwnerGuild; // 0x2f0
	UCanvasPanel* AttackGuildPanel; // 0x2f8
	UTaishouTeamInfoSlot* TeamInfoSlotAttackGuild; // 0x300
	UImage* BattleStateImage; // 0x308
	UImage* BattleDoingStateImage; // 0x310
	UTextBlock* GuanAiTime; // 0x318
	FVector2D OwnerGuildImagePos; // 0x320
	FVector2D OwnerGuildImageMiddlePos; // 0x328
	int32_t GuanAiId; // 0x330
};

struct UOffsetMeshTool : UBaseMeshProcessingTool {
	UOffsetMeshToolProperties* OffsetProperties; // 0x400
	UIterativeOffsetProperties* IterativeProperties; // 0x408
	UImplicitOffsetProperties* ImplicitProperties; // 0x410
	UOffsetWeightMapSetProperties* WeightMapProperties; // 0x418
};

struct UDrawPolyPathExtrudeProperties : UInteractiveToolPropertySet {
	EDrawPolyPathExtrudeDirection Direction; // 0x60
};

struct UCurveControlPointsMechanic : UInteractionMechanic {
	USingleClickInputBehavior* ClickBehavior; // 0x40
	UMouseHoverBehavior* HoverBehavior; // 0x48
	APreviewGeometryActor* PreviewGeometryActor; // 0x4e8
	UPointSetComponent* DrawnControlPoints; // 0x4f0
	ULineSetComponent* DrawnControlSegments; // 0x4f8
	UPointSetComponent* PreviewPoint; // 0x500
	ULineSetComponent* PreviewSegment; // 0x508
	UTransformProxy* PointTransformProxy; // 0x588
	UTransformGizmo* PointTransformGizmo; // 0x590
};

struct UUI_AdminSubPanelParam : UUI_AdminSubPanel {
	UScrollBox* FloatList; // 0x2d8
	UEditableTextBox* SearchTextBox; // 0x2e0
	UUI_ServerParamFloat* ServerParamFloatTemplate; // 0x2f8
	UUI_ServerParamBool* ServerParamBoolTemplate; // 0x300
	UUI_ServerParamString* ServerParamStringTemplate; // 0x308
	UUI_ServerParamRegion* ServerParamRegionTemplate; // 0x310
	UDataTable* ExploitCompConfigsDataTable; // 0x318
};

struct UUI_MainMenu : USGUI {
	FPicLinkConfig WebPicCfgChina; // 0x2d8
	FPicLinkConfig WebPicCfgForign; // 0x318
	TArray<FPicLinkConfig> PicLinkConfigArray; // 0x358
	UUI_MainMenuPicLink* MainMenuPickLinkTemplate; // 0x368
	FPicLinkConfig HelpTransPicCfg; // 0x370
	UHorizontalBox* CooperatorHBox; // 0x3b0
	UUI_MainMenuBtn* StartOfficalGameBtnSlot; // 0x3b8
	UUI_MainMenuBtn* StartPrivateGameBtnSlot; // 0x3c0
	UUI_MainMenuBtn* CreatePrivateGameBtnSlot; // 0x3c8
	UUI_MainMenuBtn* GameSettingsBtnSlot; // 0x3d0
	UUI_MainMenuBtn* ProducerListBtnSlot; // 0x3d8
	UUI_MainMenuBtn* ExitGameBtnSlot; // 0x3e0
	UTextBlock* VersionText; // 0x3e8
	UUI_MainMenuPicLink* HelpTransPic; // 0x3f0
	UButton* HelpTransButton; // 0x3f8
	UButton* BtnAgeTips; // 0x400
	UUserWidget* MainMenu_AgeTips; // 0x408
};

struct UAnimNotify_PlayMontageNotifyWindow : UAnimNotifyState {
	FName NotifyName; // 0x30
};

struct UExistingMeshMaterialProperties : UInteractiveToolPropertySet {
	ESetMeshMaterialMode MaterialMode; // 0x60
	float CheckerDensity; // 0x64
	UMaterialInterface* OverrideMaterial; // 0x68
	UMaterialInstanceDynamic* CheckerMaterial; // 0x70
};

struct ULandscapeMeshProxyComponent : UStaticMeshComponent {
	FGuid LandscapeGuid; // 0x518
	TArray<FIntPoint> ProxyComponentBases; // 0x528
	int8_t ProxyLOD; // 0x538
};

struct UMaterialExpressionHairAttributes : UMaterialExpression {
	char bUseTangentSpace : 1; // 0x40
};

struct UOnsetNRT : UAudioSynesthesiaNRT {
	UOnsetNRTSettings* Settings; // 0x78
};

struct UAbilityTask_WaitGameplayEffectApplied_Target : UAbilityTask_WaitGameplayEffectApplied {
	FMulticastInlineDelegate OnApplied; // 0x1b8
};

struct UN_FunctionSlot : UUserWidget {
	UUI_N_AllFunction* ParentUI; // 0x260
	EUIFunctionSlotType FunctionSlotType; // 0x268
	TSoftObjectPtr<UTexture2D> NormalTexture2D[0x13]; // 0x270
	TSoftObjectPtr<UTexture2D> HoverTexture2D[0x13]; // 0x568
	TSoftObjectPtr<UTexture2D> ClickTexture2D[0x13]; // 0x860
	TSoftObjectPtr<UTexture2D> ActiveTexture2D[0x13]; // 0xb58
	TArray<FText> AllFunctionTipsText; // 0xe50
	UImage* FunctionImage; // 0xe60
	char bHover : 1; // 0xe68
	char bPress : 1; // 0xe68
	char bIsActive : 1; // 0xe68
	UImage* PendingImage; // 0xe70
	UImage* TwinkleImage; // 0xe78
};

struct UDistributionFloatConstantCurve : UDistributionFloat {
	FInterpCurveFloat ConstantCurve; // 0x38
};

struct UBlackboardKeyType_NativeEnum : UBlackboardKeyType {
	FString EnumName; // 0x30
	UEnum* EnumType; // 0x40
};

struct UUI_SystemNotify : UUserWidget {
	UBorder* Border_bg; // 0x260
	UTextBlock* TextBlock_notify; // 0x268
	float SpeedRate; // 0x270
};

struct UMaterialExpressionDistanceFieldGradient : UMaterialExpression {
	FExpressionInput position; // 0x40
};

struct AEQSTestingPawn : ACharacter {
	UEnvQuery* QueryTemplate; // 0x5d0
	TArray<FEnvNamedValue> QueryParams; // 0x5d8
	TArray<FAIDynamicParam> QueryConfig; // 0x5e8
	float TimeLimitPerStep; // 0x5f8
	int32_t StepToDebugDraw; // 0x5fc
	EEnvQueryHightlightMode HighlightMode; // 0x600
	char bDrawLabels : 1; // 0x604
	char bDrawFailedItems : 1; // 0x604
	char bReRunQueryOnlyOnFinishedMove : 1; // 0x604
	char bShouldBeVisibleInGame : 1; // 0x604
	char bTickDuringGame : 1; // 0x604
	EEnvQueryRunMode QueryingMode; // 0x608
	FNavAgentProperties NavAgentProperties; // 0x610
};

struct UGuildStoreHorseItem : UUserWidget {
	FButtonStyle ButtonCheckedStyle; // 0x260
	FButtonStyle ButtonUnCheckedStyle; // 0x4d8
	UButton* BtSelected; // 0x750
	UTextBlock* TbNameName; // 0x758
	UTextBlock* TbLevel; // 0x760
	UTextBlock* TbStatue; // 0x768
};

struct UConvertToPolygonsTool : USingleSelectionTool {
	UConvertToPolygonsToolProperties* Settings; // 0x88
	UPreviewMesh* PreviewMesh; // 0x90
};

struct UMaterialExpressionArctangent : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct ULeaderboardFlushCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UGuildStructureListPanel : USGUI {
	UUniformGridPanel* ChildGridPanel; // 0x2d8
	UGuildStructureSlot* GuildStructureSlotClass; // 0x2e0
	int32_t CountsPerRow; // 0x2e8
};

struct UCommandlet : UObject {
	FString HelpDescription; // 0x28
	FString HelpUsage; // 0x38
	FString HelpWebLink; // 0x48
	TArray<FString> HelpParamNames; // 0x58
	TArray<FString> HelpParamDescriptions; // 0x68
	char IsServer : 1; // 0x78
	char IsClient : 1; // 0x78
	char IsEditor : 1; // 0x78
	char LogToConsole : 1; // 0x78
	char ShowErrorCount : 1; // 0x78
	char ShowProgress : 1; // 0x78
};

struct UActorChannel : UChannel {
	AActor* Actor; // 0x70
	TArray<UObject*> CreateSubObjects; // 0x160
};

struct USGProjectileMovementComponent : UProjectileMovementComponent {
	char bBounceOnlyComputeVelocityZ : 1; // 0x1e0
	FVector VelocityBeforeStop; // 0x1e4
};

struct USGViewportClient : UGameViewportClient {
	char bDevelopment : 1; // 0x360
	EUIInputMode UIInputMode; // 0x361
	TWeakObjectPtr<UWidget> FocusWidget; // 0x364
};

struct UWorldRankGoupSlot : UUserWidget {
	UVerticalBox* ChildRankListVerticalBox; // 0x260
	UButton* RankButton; // 0x268
	UTextBlock* RankNameTextBlock; // 0x270
	UWorldRankButtonSlot* SubRankButtonSlotClass; // 0x278
};

struct UAbilityTask_WaitAbilityActivate : UAbilityTask {
	FMulticastInlineDelegate OnActivate; // 0x80
};

struct UUI_OccupyGuildEventPanel : UUserWidget {
	TSoftObjectPtr<UTexture2D> CapitalBrush[0x5]; // 0x260
	TWeakObjectPtr<ASGStructureOccupy> RemoteActor; // 0x328
	USGUI* RootSGUI; // 0x330
	UCanvasPanel* LoadingCanvas; // 0x338
	USizeBox* StartedSizeBox; // 0x340
	UImage* RansomCapitalImage; // 0x348
	UTextBlock* RansomCapitalTextBlock; // 0x350
	UButton* RansomButton; // 0x358
	UVerticalBox* SlotVerticalBox; // 0x360
	UUI_StructureOccupyGuildEventSlot* OccupyGuildEventSlotClass; // 0x368
};

struct UBrushBaseProperties : UInteractiveToolPropertySet {
	float BrushSize; // 0x60
	bool bSpecifyRadius; // 0x64
	float BrushRadius; // 0x68
	float BrushStrength; // 0x6c
	float BrushFalloffAmount; // 0x70
	bool bShowStrength; // 0x74
	bool bShowFalloff; // 0x75
};

struct UBTTask_Sleep : UBTTask_SGBlueprintBase {
	char bAutoFinished : 1; // 0xc0
};

struct UParticleModuleEventReceiverBase : UParticleModuleEventBase {
	EParticleEventType EventGeneratorType; // 0x30
	FName EventName; // 0x34
};

struct UWBP_ScalabilityIntItem_C : UScalabilityDetailItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2e0
	UHorizontalBox* HorizontalBox; // 0x2e8
	UComboBoxString* SettingComboBox; // 0x2f0
	UTextBlock* TbTitle; // 0x2f8
	UTextBlock* TbVariableValue; // 0x300
};

struct UInterpTrackInstProperty : UInterpTrackInst {
	TFieldPath<FProperty> InterpProperty; // 0x28
	UObject* PropertyOuterObjectInst; // 0x48
};

struct ACullDistanceVolume : AVolume {
	TArray<FCullDistanceSizePair> CullDistances; // 0x348
	char bEnabled : 1; // 0x358
};

struct UMaterialExpressionTangentOutput : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct AGroomActor : AActor {
	UGroomComponent* GroomComponent; // 0x310
};

struct UMeshSpaceDeformerTool : UMeshSurfacePointTool {
	ENonlinearOperationType SelectedOperationType; // 0xc0
	float UpperBoundsInterval; // 0xc4
	float LowerBoundsInterval; // 0xc8
	float ModifierPercent; // 0xcc
	bool bSnapToWorldGrid; // 0xd0
	UGizmoTransformChangeStateTarget* StateTarget; // 0xd8
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xe8
	FVector GizmoCenter; // 0x110
	FQuat GizmoOrientation; // 0x120
	UIntervalGizmo* IntervalGizmo; // 0x130
	UTransformGizmo* TransformGizmo; // 0x138
	UTransformProxy* TransformProxy; // 0x140
	UGizmoLocalFloatParameterSource* UpIntervalSource; // 0x148
	UGizmoLocalFloatParameterSource* DownIntervalSource; // 0x150
	UGizmoLocalFloatParameterSource* ForwardIntervalSource; // 0x158
};

struct UFXSystemAsset : UObject {
	uint32_t MaxPoolSize; // 0x28
	uint32_t PoolPrimeSize; // 0x2c
};

struct UBTDecorator_CompareBBEntries : UBTDecorator {
	EBlackBoardEntryComparison Operator; // 0x68
	FBlackboardKeySelector BlackboardKeyA; // 0x70
	FBlackboardKeySelector BlackboardKeyB; // 0x98
};

struct UMovieSceneSubTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UAnimBlueprint : UBlueprint {
	USkeleton* TargetSkeleton; // 0xa8
	TArray<FAnimGroupInfo> Groups; // 0xb0
	bool bUseMultiThreadedAnimationUpdate; // 0xc0
	bool bWarnAboutBlueprintUsage; // 0xc1
};

struct UInterpGroup : UObject {
	TArray<UInterpTrack*> InterpTracks; // 0x30
	FName GroupName; // 0x40
	FColor GroupColor; // 0x48
	char bCollapsed : 1; // 0x4c
	char bVisible : 1; // 0x4c
	char bIsFolder : 1; // 0x4c
	char bIsParented : 1; // 0x4c
	char bIsSelected : 1; // 0x4c
};

struct UNavRelevantComponent : UActorComponent {
	char bAttachToOwnersRoot : 1; // 0xe4
	UObject* CachedNavParent; // 0xe8
};

struct UParticleModuleLocationEmitter : UParticleModuleLocationBase {
	FName EmitterName; // 0x30
	ELocationEmitterSelectionMethod SelectionMethod; // 0x38
	char InheritSourceVelocity : 1; // 0x3c
	float InheritSourceVelocityScale; // 0x40
	char bInheritSourceRotation : 1; // 0x44
	float InheritSourceRotationScale; // 0x48
};

struct UPlatformAnimInstance : UAnimInstance {
	ABaseCharacter* PlatformCharacter; // 0x2c0
	USkeletalMeshComponent* PlatformCharacterMesh; // 0x2c8
	ASGStructure* StructurePlatform; // 0x2d0
	UCapsuleComponent* SGCapsuleComponent; // 0x2d8
	UCharacterMovementComponent* SGCharacterMovementComponent; // 0x2e0
	char bIsMoving : 1; // 0x2e8
	char bMoveForward : 1; // 0x2e8
	float MoveForwardAxis; // 0x2ec
	float fSpeedRatio; // 0x2f0
	FVector ForwardBindPoint; // 0x2f4
	FVector ForwardBindScale; // 0x300
	FVector ForwardBindMaxScale; // 0x30c
	FVector BackBindPoint; // 0x324
	FVector BackwardBindScale; // 0x330
	FVector BackwardBindMaxScale; // 0x33c
	FName ForwardBindSocketName; // 0x354
	FName BackBindSocketName; // 0x35c
	FName LeftBindSocketName; // 0x364
	FVector LeftBindPoint; // 0x36c
	FName RightBindSocketName; // 0x378
	FVector RightBindPoint; // 0x380
	char bUseModifyBindSocket : 1; // 0x38c
	float BaseMoveSpeed; // 0x390
	char bUpdateMorphCurve : 1; // 0x394
};

struct UWBP_SystemSettingRadioView_C : UUI_RadioButtonView {
	UWBP_SystemSettingRadioButton_C* AnchorModeSetting; // 0x2f0
	UWBP_SystemSettingRadioButton_C* AudioSetting; // 0x2f8
	UWBP_SystemSettingRadioButton_C* ControlSetting; // 0x300
	UWBP_SystemSettingRadioButton_C* GraphSetting; // 0x308
	UWBP_SystemSettingRadioButton_C* LanguageSetting; // 0x310
	UWBP_SystemSettingRadioButton_C* NetworkSetting; // 0x318
	UWBP_SystemSettingRadioButton_C* SwitchSetting; // 0x320
};

struct UMaterialExpressionViewProperty : UMaterialExpression {
	EMaterialExposedViewProperty Property; // 0x40
};

struct UAxisAngleGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoFloatParameterSource> AngleSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bInInteraction; // 0x88
	FVector RotationOrigin; // 0x8c
	FVector RotationAxis; // 0x98
	FVector RotationPlaneX; // 0xa4
	FVector RotationPlaneY; // 0xb0
	FVector InteractionStartPoint; // 0xbc
	FVector InteractionCurPoint; // 0xc8
	float InteractionStartAngle; // 0xd4
	float InteractionCurAngle; // 0xd8
};

struct UWBP_LanguageComboBoxItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UCanvasPanel* CanvasPanel_53; // 0x370
	UComboBoxString* SettingComboBox; // 0x378
	UTextBlock* TbTitle; // 0x380
	FText Title; // 0x388
	TArray<FText> Cultures; // 0x3a0
};

struct UMaterialFunctionInstance : UMaterialFunctionInterface {
	UMaterialFunctionInterface* Parent; // 0x40
	UMaterialFunctionInterface* Base; // 0x48
	TArray<FScalarParameterValue> ScalarParameterValues; // 0x50
	TArray<FVectorParameterValue> VectorParameterValues; // 0x60
	TArray<FTextureParameterValue> TextureParameterValues; // 0x70
	TArray<FFontParameterValue> FontParameterValues; // 0x80
	TArray<FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90
	TArray<FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xa0
	TArray<FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xb0
};

struct UGameCharacterStatusPanel : UUserWidget {
	FName ImgHeadIconBgName; // 0x260
	FName SelectedBorderName; // 0x268
	FName HeadImageName; // 0x270
	FName NameTextblockName; // 0x278
	FName LVTextblockName; // 0x280
	FName GameHpBarName; // 0x288
	FName ExpProgressBarName; // 0x290
	FName GameSpBarName; // 0x298
	FName HungerImageName; // 0x2a0
	FName HealthProgressBarName; // 0x2a8
	FName VehicleStatusPanelName; // 0x2b0
	FName TamedGeneralVerticalPanelName; // 0x2b8
	FName LoyaltyProgressName; // 0x2c0
	FName AnchorModeIconName; // 0x2c8
	UGameCharacterStatusPanel* TamedGeneralSlotTemplate; // 0x2d0
	UMaterialInterface* HungerMaterial; // 0x2d8
	float PbHPMinPercent; // 0x2e0
	float PbHPMaxPercent; // 0x2e4
	float PbSPMinPercent; // 0x2e8
	float PbSPMaxPercent; // 0x2ec
	TSoftObjectPtr<UTexture2D> GeneralSpecialImage[0x4]; // 0x2f0
	FName ArmorRemindCanvasName; // 0x390
	FName ArmorRemindBgName; // 0x398
	FName ArmorRemindBodyName; // 0x3a0
	FName ArmorRemindHeadName; // 0x3a8
	FName ArmorRemindLegName; // 0x3b0
	FName ArmorRemindMainHandName; // 0x3b8
	FName ArmorRemindOffHandName; // 0x3c0
	float LevelUpNumChangeDelay; // 0x3d0
	TSoftObjectPtr<UTexture2D> DisableGeneralImgHead; // 0x3d8
	TSoftObjectPtr<UTexture2D> GeneralCharacterQuality[0x6]; // 0x400
	FLinearColor GeneralCharacterNameBgColor[0x6]; // 0x4f0
	FName GameStatusProgressPanelName; // 0x550
	char bInitProgressPanel : 1; // 0x560
	char bWeightWarning : 1; // 0x560
	UImage* GeneralQualityImage; // 0x568
	UTextBlock* TbAllSelectKey; // 0x570
	UTextBlock* TbKey; // 0x578
	UBorder* SelectAllGeneralBorder; // 0x580
	FText FarTipsText; // 0x588
	FSlateBrush EVProgressImageBg[0x4]; // 0x5a0
	FSlateBrush EVProgressImage[0x4]; // 0x7c0
	float EVThreshold; // 0x9e0
	float EVProgressTargetValue; // 0x9e4
	float EVProgressSpeed; // 0x9e8
	char bShowEVProgress : 1; // 0x9ec
	char bPreviewData : 1; // 0x9ec
	UMaterialInstanceDynamic* DynamicHungerMat; // 0xb08
};

struct UPhononSpatializationSourceSettings : USpatializationPluginSourceSettingsBase {
	EIplSpatializationMethod SpatializationMethod; // 0x28
	EIplHrtfInterpolationMethod HrtfInterpolationMethod; // 0x29
};

struct UMaterialExpressionSine : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Period; // 0x54
};

struct AAtmosphericFog : AInfo {
	UAtmosphericFogComponent* AtmosphericFogComponent; // 0x310
};

struct ASGStructureOccupyFortress : ASGStructureOccupyFlag {
	int32_t ScorePerSec; // 0xfa8
	int32_t ScorePerPerson; // 0xfac
	TArray<ASGCharacter*> CurOccupyingActors; // 0xfb8
};

struct USGAchievement : USGConditionReward {
	TSoftObjectPtr<UTexture2D> UnaccomplishedIconTexture; // 0x50
	TSoftObjectPtr<UTexture2D> AccomplishedIconTexture; // 0x78
	FText Name; // 0xa0
	FText Description; // 0xb8
	FString AchievementType; // 0xd0
};

struct UUI_CustomFlag : USGUI {
	UUniformGridPanel* InventoryGrid; // 0x2d8
	UEditableTextBox* SearchEditBox; // 0x2e0
	UUniformGridPanel* TemplateUniformGrid; // 0x2e8
	UButton* CloseButton; // 0x2f0
	UButton* SubmitButton; // 0x2f8
	UButton* ResetButton; // 0x300
	UButton* DeleteButton; // 0x308
	UImage* FlagPrevireImage; // 0x310
	USlider* UMSlider; // 0x318
	USlider* VMSlider; // 0x320
	USlider* UVMSlider; // 0x328
	USlider* RSlider; // 0x330
	USlider* SXSlider; // 0x338
	USlider* SYSlider; // 0x340
	USlider* SXYSlider; // 0x348
	USlider* MirrorSlider; // 0x350
	UTextBlock* UMoveTextBlock; // 0x358
	UTextBlock* VMoveTextBlock; // 0x360
	UTextBlock* UVMoveTextBlock; // 0x368
	UTextBlock* RTextBlock; // 0x370
	UTextBlock* SXTextBlock; // 0x378
	UTextBlock* SYTextBlock; // 0x380
	UTextBlock* SXYTextBlock; // 0x388
	UTextBlock* MirrorTextBlock; // 0x390
	FString SearchString; // 0x398
	UMaterialInstance* RTMaterialInst; // 0x3a8
	FVector2D RTSize; // 0x3b0
	TArray<FName> ImageMatParamNames; // 0x3b8
	FName BGAlphaParamName; // 0x3c8
	FName BGColorParamName; // 0x3d0
	FName MaskParamName; // 0x3d8
	FName TexParamName; // 0x3e0
	int32_t ImageCountsPerRow; // 0x3e8
	USelectWidgetSlot* ImageWidgetSlotTemplate; // 0x3f0
	int32_t ItemCountsPerRow; // 0x3f8
	UN_InventorySlot* InventorySlotClass; // 0x400
	TWeakObjectPtr<USGItem> LastSelectedItem; // 0x408
	TWeakObjectPtr<UN_InventorySlot> PressedSlot; // 0x410
	TArray<UN_InventorySlot*> InventorySlotList; // 0x418
	TWeakObjectPtr<USelectWidgetSlot> SelectedImageSlot; // 0x430
	float DefaultScale; // 0x438
	UTextureRenderTarget2D* CurTextureRenderTarget2D; // 0x440
	UMaterialInstanceDynamic* CurImageMaterial; // 0x448
	char bNeedRefreshAll : 1; // 0x46d
};

struct UUI_N_VehiclePerk : USGUI {
	int32_t PerRowCount; // 0x2d8
	UVehiclePerkSlot* VehiclePerkSlotTemplate; // 0x2e0
	UUniformGridPanel* ForbidPlacePerkPanel; // 0x2e8
	UUniformGridPanel* AllowPlacePerkPanel; // 0x2f0
	UUniformGridPanel* SpecialPerkPanel; // 0x2f8
	UUniformGridPanel* RecessivePerkPanel; // 0x300
	TWeakObjectPtr<ASG_HorseCharacter> BindHorseCharacter; // 0x308
};

struct UHuangLiEffectText : UUserWidget {
	UTextBlock* TitleText; // 0x260
};

struct UUI_SystemSetting : UUserWidget {
	TArray<FName> RadioButtonViewList; // 0x260
	USGGameUserSettings* SGGameUserSettings; // 0x270
	USGUI* ParentUI; // 0x278
};

struct URadialFalloff : UFieldNodeFloat {
	float Magnitude; // 0xc0
	float MinRange; // 0xc4
	float MaxRange; // 0xc8
	float Default; // 0xcc
	float Radius; // 0xd0
	FVector position; // 0xd4
	EFieldFalloffType Falloff; // 0xe0
};

struct UUI_CountySeatAltarPanel : USGUI {
	UVerticalBox* VerticalBox_Info; // 0x2d8
	UButton* EscButton; // 0x2e0
	UTextBlock* TextBlock_Capital; // 0x2e8
	UUI_CountySeatAltarSlot* CountySeatAltarSlotClass; // 0x2f0
};

struct ANavigationTestingActor : AActor {
	UCapsuleComponent* CapsuleComponent; // 0x320
	UNavigationInvokerComponent* InvokerComponent; // 0x328
	char bActAsNavigationInvoker : 1; // 0x330
	FNavAgentProperties NavAgentProps; // 0x338
	FVector QueryingExtent; // 0x368
	ANavigationData* MyNavData; // 0x378
	FVector ProjectedLocation; // 0x380
	char bProjectedLocationValid : 1; // 0x38c
	char bSearchStart : 1; // 0x38c
	float CostLimitFactor; // 0x390
	float MinimumCostLimit; // 0x394
	char bBacktracking : 1; // 0x398
	char bUseHierarchicalPathfinding : 1; // 0x398
	char bGatherDetailedInfo : 1; // 0x398
	char bDrawDistanceToWall : 1; // 0x398
	char bShowNodePool : 1; // 0x398
	char bShowBestPath : 1; // 0x398
	char bShowDiffWithPreviousStep : 1; // 0x398
	char bShouldBeVisibleInGame : 1; // 0x398
	ENavCostDisplay CostDisplayMode; // 0x39c
	FVector2D TextCanvasOffset; // 0x3a0
	char bPathExist : 1; // 0x3a8
	char bPathIsPartial : 1; // 0x3a8
	char bPathSearchOutOfNodes : 1; // 0x3a8
	float PathfindingTime; // 0x3ac
	float PathCost; // 0x3b0
	int32_t PathfindingSteps; // 0x3b4
	ANavigationTestingActor* OtherActor; // 0x3b8
	UNavigationQueryFilter* FilterClass; // 0x3c0
	int32_t ShowStepIndex; // 0x3c8
	float OffsetFromCornersDistance; // 0x3cc
};

struct UMovieSceneMediaSection : UMovieSceneSection {
	UMediaSource* MediaSource; // 0xe8
	bool bLooping; // 0xf0
	FFrameNumber StartFrameOffset; // 0xf4
	UMediaTexture* MediaTexture; // 0xf8
	UMediaSoundComponent* MediaSoundComponent; // 0x100
	bool bUseExternalMediaPlayer; // 0x108
	UMediaPlayer* ExternalMediaPlayer; // 0x110
};

struct UN_RemoteCraftStatusPanel : UUserWidget {
	UButton* ToggleActiveButton; // 0x260
	UTextBlock* ToggleActiveLabel; // 0x268
	TWeakObjectPtr<ASGGamePlayActor> RemoteActor; // 0x278
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x280
};

struct UHierarchicalInstancedStaticMeshComponent : UInstancedStaticMeshComponent {
	TArray<int32_t> SortedInstances; // 0x5d0
	int32_t NumBuiltInstances; // 0x5e0
	FBox BuiltInstanceBounds; // 0x5e8
	FBox UnbuiltInstanceBounds; // 0x604
	TArray<FBox> UnbuiltInstanceBoundsList; // 0x620
	char bEnableDensityScaling : 1; // 0x630
	int32_t OcclusionLayerNumNodes; // 0x638
	FBoxSphereBounds CacheMeshExtendedBounds; // 0x63c
	bool bDisableCollision; // 0x658
	int32_t InstanceCountToRender; // 0x65c
};

struct UGroomCreateFollicleMaskOptions : UObject {
	int32_t Resolution; // 0x28
	int32_t RootRadius; // 0x2c
	TArray<FFollicleMaskOptions> Grooms; // 0x30
};

struct UInterpTrackVectorBase : UInterpTrack {
	FInterpCurveVector VectorTrack; // 0x70
	float CurveTension; // 0x88
};

struct USGGameDataAlliance : UObject {
	int32_t MaxAllianceNameLength; // 0x28
	int32_t MaxBillboardLength; // 0x2c
	FText CreateAllianceSelfTips[0xa]; // 0x30
	FText RenameAllianceSelfTips[0x7]; // 0x120
	FText RenameAllianceMemberTip; // 0x1c8
	FText InviteGuildJoinSelfTips[0xa]; // 0x1e0
	FText InviteGuildJoinTargetTip; // 0x2d0
	FText InviteGuildJoinMemberTip; // 0x2e8
	FText InviteAllianceJoinSelfTips[0x9]; // 0x300
	FText InviteAllianceJoinTargetTip; // 0x3d8
	FText InviteAllianceJoinMemberTip; // 0x3f0
	FText GuildLeaveSelfTips[0x7]; // 0x408
	FText GuildLeaveMemberTip; // 0x4b0
	FText AllianceLeaveSelfTips[0x6]; // 0x4c8
	FText AllianceLeaveMemberTip; // 0x558
	FText GuildKickOutSelfTips[0x6]; // 0x570
	FText GuildKickOutTargetTip; // 0x600
	FText GuildKickOutMemberTip; // 0x618
	FText AllianceKickOutSelfTips[0x6]; // 0x630
	FText AllianceKickOutTargetTip; // 0x6c0
	FText AllianceKickOutMemberTip; // 0x6d8
	FText DisBandAllianceSelfTips[0x4]; // 0x6f0
	FText DisBandAllianceMemberTip; // 0x750
	FText SetBillboardSelfTips[0x5]; // 0x768
	FText SetBillboardMemberTip; // 0x7e0
	FText GiveOfficialJobSelfTips[0x6]; // 0x7f8
	FText GiveOfficialJobTargetTip; // 0x888
	uint32_t MaxApplyCount; // 0x8a0
	int32_t MaxApplyVerfiyLen; // 0x8a4
};

struct UNavigationGraphNodeComponent : USceneComponent {
	FNavGraphNode Node; // 0x208
	UNavigationGraphNodeComponent* NextNodeComponent; // 0x220
	UNavigationGraphNodeComponent* PrevNodeComponent; // 0x228
};

struct UEnvQueryManager : UAISubsystem {
	TArray<FEnvQueryInstanceCache> InstanceCache; // 0xa8
	TArray<UEnvQueryContext*> LocalContexts; // 0xb8
	TArray<UEnvQueryInstanceBlueprintWrapper*> GCShieldedWrappers; // 0xc8
	float MaxAllowedTestingTime; // 0x12c
	bool bTestQueriesUsingBreadth; // 0x130
	int32_t QueryCountWarningThreshold; // 0x134
	double QueryCountWarningInterval; // 0x138
};

struct UVehiclePerkEvent : UObject {
	TMap<EVehiclePerkEventType, FVehiclePerkEventEntry> PerkEventEntries; // 0x28
};

struct AOnlineBeaconHostObject : AActor {
	FString BeaconTypeName; // 0x310
	AOnlineBeaconClient* ClientBeaconActorClass; // 0x320
	TArray<AOnlineBeaconClient*> ClientActors; // 0x328
};

struct UMaterialExpressionDecalMipmapLevel : UMaterialExpression {
	FExpressionInput TextureSize; // 0x40
	float ConstWidth; // 0x54
	float ConstHeight; // 0x58
};

struct UBTTask_RunBehavior : UBTTaskNode {
	UBehaviorTree* BehaviorAsset; // 0x70
};

struct AGlobalMapCameraActor : ASGCameraActor {
	FVector DefaultLocation; // 0x8a8
	UCurveFloat* MapCameraPitchCurve; // 0x8b8
	TArray<float> MapCameraDistances; // 0x8c0
	float MapCameraIndexInterpSpeed; // 0x8d0
	UCurveFloat* MapCameraIndexInterpCurve; // 0x8d8
	float CurCameraIndex; // 0x8e0
	FVector2D MapCameraMoveSpeed; // 0x8e4
	FVector2D MapCameraMoveDecelerate; // 0x8ec
	float MapCameraDragStep; // 0x8f4
	FVector2D MapCameraXMinClamp; // 0x8f8
	FVector2D MapCameraXMaxClamp; // 0x900
	FVector2D MapCameraYMinClamp; // 0x908
	FVector2D MapCameraYMaxClamp; // 0x910
	TMap<FString, FGlobalMapLevelVisibilityConfigArray> LevelVisibilityConfigs; // 0x918
	UMaterialParameterCollection* GlobalMapMatParamCollection; // 0x968
	float FixParamCollectionMapCameraDistance; // 0x970
	UMaterialParameterCollectionInstance* GlobalMapMatParamCollectionInstance; // 0xa48
};

struct UInputActionDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputActionDelegateBinding> InputActionDelegateBindings; // 0x28
};

struct UObjectReferencer : UObject {
	TArray<UObject*> ReferencedObjects; // 0x28
};

struct UBTTask_PlayAnimation : UBTTaskNode {
	UAnimationAsset* AnimationToPlay; // 0x70
	char bLooping : 1; // 0x78
	char bNonBlocking : 1; // 0x78
	UBehaviorTreeComponent* MyOwnerComp; // 0x80
	USkeletalMeshComponent* CachedSkelMesh; // 0x88
};

struct ULevelVariantSets : UObject {
	UObject* DirectorClass; // 0x28
	TArray<UVariantSet*> VariantSets; // 0x30
};

struct UGamepadCursorSettings : UDeveloperSettings {
	FRuntimeFloatCurve AnalogCursorAccelerationCurve; // 0x38
	float MaxAnalogCursorSpeed; // 0xc0
	float MaxAnalogCursorSpeedWhenHovered; // 0xc4
	float AnalogCursorDragCoefficient; // 0xc8
	float AnalogCursorDragCoefficientWhenHovered; // 0xcc
	float MinAnalogCursorSpeed; // 0xd0
	float AnalogCursorDeadZone; // 0xd4
	float AnalogCursorAccelerationMultiplier; // 0xd8
	float AnalogCursorSize; // 0xdc
	bool bUseEngineAnalogCursor; // 0xe0
	bool bAnalogCursorNoAcceleration; // 0xe1
};

struct UUI_TransportGeneralItem : UUserWidget {
	FButtonStyle ButtonDisableStyle; // 0x260
	FSlateColor TextDisableColor; // 0x4d8
	FSlateColor TextNormalColor; // 0x500
	FButtonStyle ButtonCheckedStyle; // 0x528
	FButtonStyle ButtonUnCheckedStyle; // 0x7a0
	UProgressBar* SaveTimeProgress; // 0xa18
	UTextBlock* SaveTimeTextBlock; // 0xa20
	UUserWidget* RootUI; // 0xa38
	UUI_TransportMachineGeneral* BindTransportMachineGeneral; // 0xa40
	UButton* BtSelected; // 0xa48
	UTextBlock* TbNameName; // 0xa50
	UTextBlock* TbLevel; // 0xa58
	UTextBlock* TbStatue; // 0xa60
};

struct UCustomMeshGenerator : UWaterBodyGenerator {
	UStaticMeshComponent* MeshComp; // 0x28
};

struct UTimelineComponent : UActorComponent {
	FTimeline TheTimeline; // 0xc0
	char bIgnoreTimeDilation : 1; // 0x158
};

struct UMaterialExpressionStep : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
	float ConstY; // 0x68
	float ConstX; // 0x6c
};

struct UAsyncActionChangePrimaryAssetBundles : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct UMaterialExpressionPanner : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Time; // 0x54
	FExpressionInput Speed; // 0x68
	float SpeedX; // 0x7c
	float SpeedY; // 0x80
	uint32_t ConstCoordinate; // 0x84
	bool bFractionalPart; // 0x88
};

struct UABP_MenuHorse_C : UAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2c0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x2c8
	FAnimNode_StateResult AnimGraphNode_StateResult; // 0x348
	FAnimNode_StateMachine AnimGraphNode_StateMachine; // 0x378
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x428
	FAnimNode_Fabrik AnimGraphNode_Fabrik_2; // 0x450
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x5e0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x770
	FAnimNode_Root AnimGraphNode_Root; // 0x790
	UAnimSequence* PlayingAnimSequence; // 0x7c0
	FVector Reins_LHandLoc; // 0x7c8
	FVector Reins_RHandLoc; // 0x7d4
	bool LeftReinsEnabled; // 0x7e0
	bool RightReinsEnabled; // 0x7e1
	USkeletalMeshComponent* CachedHumanMesh; // 0x7e8
	FTransform Saddle_LFootLoc; // 0x7f0
	FTransform Saddle_RFootLoc; // 0x820
	ABP_HorseMC_Login_Base_C* OwnerCharacter; // 0x850
};

struct UBrainComponent : UActorComponent {
	UBlackboardComponent* BlackboardComp; // 0xc8
	AAIController* AIOwner; // 0xd0
};

struct ASGEmptyGameTrap : AActor {
	USceneComponent* SceneRoot; // 0x310
	UDecalComponent* DecalComponent; // 0x318
	UBoxComponent* BoxCollision; // 0x320
	UMaterialInterface* DecalMaterial; // 0x328
	FVector DecalSize; // 0x330
	FVector DecalLocationOffset; // 0x33c
	FRotator DecalRotationOffset; // 0x348
	FVector BoxSize; // 0x354
	FVector BoxLocationOffset; // 0x360
	FRotator BoxRotationOffset; // 0x36c
	char bEnableBoxOverlap : 1; // 0x378
	char bIsStartUp : 1; // 0x378
	float HasStartUpTime; // 0x37c
	char bUseLifeTime : 1; // 0x380
	float TrapLiftTime; // 0x384
	FTimerHandle AddBuffTimer; // 0x390
	TArray<AActor*> OverlapActors; // 0x398
	USGBuff* OverlapBuff; // 0x3a8
};

struct UMotoSynthPreset : UObject {
	FMotoSynthRuntimeSettings Settings; // 0x28
};

struct UUI_ServerAdminItemRow : UUserWidget {
	UTextBlock* TbItemName; // 0x260
	UButton* ButtonAddItem; // 0x268
	UImage* ImageItemIcon; // 0x270
	UUI_AdminItemPanel* BindAdminItemPanel; // 0x278
	UUI_AdminSubPanelNpc* BindAdminSubPanelNpcl; // 0x280
	UUI_AdminSubPanelGeneral* BindAdminSubPanelGeneral; // 0x288
	UUI_AdminSubPanelHorse* BindAdminSubPanelHorse; // 0x290
	int32_t BindIndex; // 0x298
	USGItem* BindSGItem; // 0x2a0
	USGBuff* BindSGBuff; // 0x2a8
	ABaseCharacter* BindBaseCharacter; // 0x2b0
	ASGGeneralCharacter* BindSGGeneralCharacter; // 0x2b8
	ASG_AnimalsCharacter* BindSG_AnimalsCharacter; // 0x2c0
};

struct ULastActorInfo : UObject {
	AActor* Actor; // 0x38
	UStaticMesh* StaticMesh; // 0x40
	UProceduralShapeToolProperties* ShapeSettings; // 0x48
	UNewMeshMaterialProperties* MaterialProperties; // 0x50
};

struct ULocalLightComponent : ULightComponent {
	ELightUnits IntensityUnits; // 0x338
	float Radius; // 0x33c
	float AttenuationRadius; // 0x340
	FLightmassPointLightSettings LightmassSettings; // 0x344
};

struct UAbilityTask_WaitGameplayEffectBlockedImmunity : UAbilityTask {
	FMulticastInlineDelegate bLocked; // 0x80
	UAbilitySystemComponent* ExternalOwner; // 0x118
};

struct UMeshOpPreviewWithBackgroundCompute : UObject {
	UPreviewMesh* PreviewMesh; // 0x58
	TArray<UMaterialInterface*> StandardMaterials; // 0x60
	UMaterialInterface* OverrideMaterial; // 0x70
	UMaterialInterface* WorkingMaterial; // 0x78
};

struct UBlackboardKeyType_Object : UBlackboardKeyType {
	UObject* BaseClass; // 0x30
};

struct UTouchInterface : UObject {
	TArray<FTouchInputControl> Controls; // 0x28
	float ActiveOpacity; // 0x38
	float InactiveOpacity; // 0x3c
	float TimeUntilDeactive; // 0x40
	float TimeUntilReset; // 0x44
	float ActivationDelay; // 0x48
	bool bPreventRecenter; // 0x4c
	float StartupDelay; // 0x50
};

struct UBattleGuildTips : USGToolTipWidget {
	UMaterialInterface* GuildIconMat; // 0x288
	float MinRequestTime; // 0x290
	UImage* ImgGuildIcon; // 0x2a8
	UTextBlock* TbOccupyActorName; // 0x2b0
	UCanvasPanel* OccupyInfoCanvas; // 0x2b8
	UVerticalBox* VbOccupyInfo; // 0x2c0
	UTextBlock* TbGuildOwnerName; // 0x2c8
	UTextBlock* TbGuildOwnerJob; // 0x2d0
	UTextBlock* TbGuildLevel; // 0x2d8
	UTextBlock* TbMemberNum; // 0x2e0
	UTextBlock* TbOccupyGuanAiNum; // 0x2e8
	UTextBlock* TbOccupyCityNum; // 0x2f0
	UTextBlock* TbOccupyXianChengNum; // 0x2f8
	UCanvasPanel* LoadingCanvas; // 0x300
	UUniformGridPanel* UgpAllianceGuilds; // 0x308
	UHorizontalBox* HbAllianceGuild; // 0x310
	UTextBlock* TbAllianceGuildNum; // 0x318
	int32_t AllianceGuildShowColNum; // 0x320
	int32_t AllianceGuildShowMaxNum; // 0x324
	UTipsGuildIconSlot* AllianceGuildSlotTemplate; // 0x328
	float RequestTime; // 0x330
	char bRequested : 1; // 0x334
	UMaterialInstanceDynamic* DynamicGuildIconInstance; // 0x338
	FGuid BindGuildID; // 0x340
	FGuid BindAllianceID; // 0x350
	TArray<FGuid> GuildList; // 0x360
	int32_t GuildShowIndex; // 0x370
};

struct USGParticleSystemComponent : UParticleSystemComponent {
	ESGSoundType SoundType; // 0x6e8
	FName SoundID; // 0x6ec
	char bSoundStopWhenAttachedToDestroyed : 1; // 0x6f4
};

struct UVoxelMorphologyMeshesToolProperties : UInteractiveToolPropertySet {
	EMorphologyOperation Operation; // 0x60
	double Distance; // 0x68
	bool bSolidifyInput; // 0x70
	bool bRemoveInternalsAfterSolidify; // 0x71
	double OffsetSolidifySurface; // 0x78
};

struct UNiagaraPreviewAxis_InterpParamLinearColor : UNiagaraPreviewAxis_InterpParamBase {
	FLinearColor Min; // 0x38
	FLinearColor Max; // 0x48
};

struct UTalentSlot : UUserWidget {
	char bIsArmor : 1; // 0x260
	UTextBlock* ItemNameText; // 0x268
	UImage* SlashImage; // 0x270
	UImage* CrushImage; // 0x278
	UTextBlock* SlashText; // 0x280
	UTextBlock* CrushText; // 0x288
	UImage* PierceImage; // 0x290
	UImage* SiegeImage; // 0x298
	UTextBlock* PierceText; // 0x2a0
	UTextBlock* SiegeText; // 0x2a8
	UImage* SlotBg; // 0x2b0
	UImage* SlotBg2; // 0x2b8
	UImage* SlotBg3; // 0x2c0
	UImage* SlotBg4; // 0x2c8
	UCanvasPanel* ProtectEVPanel; // 0x2d0
	UCanvasPanel* ProtectEVPanel1; // 0x2d8
	UTextBlock* ProtectHotText; // 0x2e0
	UTextBlock* ProtectColdText; // 0x2e8
	UTextBlock* ProtectPoisonText; // 0x2f0
	UImage* ItemBg; // 0x2f8
	UImage* ItemIcon; // 0x300
	FSlateBrush AttackImage[0x4]; // 0x308
	FSlateBrush DefenceImage[0x4]; // 0x528
	FSlateBrush AttackBg; // 0x748
	FSlateBrush DefenceBg; // 0x7d0
	FSlateBrush NoneBg; // 0x858
	TWeakObjectPtr<USGItem> BindItem; // 0x8e0
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x8e8
	FText NoneArmorText; // 0x8f0
	int32_t SlotIndex; // 0x908
};

struct UProceduralMeshComponent : UMeshComponent {
	bool bUseComplexAsSimpleCollision; // 0x4b8
	bool bUseAsyncCooking; // 0x4b9
	UBodySetup* ProcMeshBodySetup; // 0x4c0
	TArray<FProcMeshSection> ProcMeshSections; // 0x4c8
	TArray<FKConvexElem> CollisionConvexElems; // 0x4d8
	FBoxSphereBounds LocalBounds; // 0x4e8
	TArray<UBodySetup*> AsyncBodySetupQueue; // 0x508
};

struct AAbilitySystemTestPawn : ADefaultPawn {
	UAbilitySystemComponent* AbilitySystemComponent; // 0x3b0
};

struct UMovieSceneSubSection : UMovieSceneSection {
	FMovieSceneSectionParameters Parameters; // 0xe8
	float StartOffset; // 0x10c
	float TimeScale; // 0x110
	float PrerollTime; // 0x114
	UMovieSceneSequence* SubSequence; // 0x118
	LazyObjectProperty ActorToRecord; // 0x120
	FString TargetSequenceName; // 0x140
	FDirectoryPath TargetPathToRecordTo; // 0x150
};

struct UPolyEditExtrudeProperties : UInteractiveToolPropertySet {
	EPolyEditExtrudeDirection Direction; // 0x60
	bool bShellsToSolids; // 0x64
};

struct UMaterialExpressionSceneDepthWithoutWater : UMaterialExpression {
	EMaterialSceneAttributeInputMode InputMode; // 0x40
	FExpressionInput Input; // 0x44
	FVector2D ConstInput; // 0x58
	float FallbackDepth; // 0x60
};

struct UBTService_UpdateAttackStatus : UBTService_SGBlueprintBase {
	FBlackboardKeySelector BBKey_Knockback; // 0xb8
	FBlackboardKeySelector BBKey_KeepInPlace; // 0xe0
	FVector2D ReturnMaxWaitTimeRange; // 0x118
	float ForceFollowSpeed; // 0x120
	char bCheckKeepInPlace : 1; // 0x128
};

struct UMovieSceneNiagaraSystemSpawnSection : UMovieSceneSection {
	ENiagaraSystemSpawnSectionStartBehavior SectionStartBehavior; // 0xe8
	ENiagaraSystemSpawnSectionEvaluateBehavior SectionEvaluateBehavior; // 0xec
	ENiagaraSystemSpawnSectionEndBehavior SectionEndBehavior; // 0xf0
	ENiagaraAgeUpdateMode AgeUpdateMode; // 0xf4
};

struct UUI_StructureOccupyItemSlot : UUserWidget {
	TWeakObjectPtr<USGItem> BindItem; // 0x260
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x268
	UImage* ImgIcon; // 0x270
	char IsHover : 1; // 0x278
	USGUI* RootSGUI; // 0x280
	UTextBlock* ProtectItemNumText; // 0x288
	UTextBlock* BuyItemNumText; // 0x290
	FSlateColor LackResouseTextColor; // 0x298
	FSlateColor UnLackResouseTextColor; // 0x2c0
};

struct UBodySetupCore : UObject {
	FName BoneName; // 0x28
	EPhysicsType PhysicsType; // 0x30
	ECollisionTraceFlag CollisionTraceFlag; // 0x31
	EBodyCollisionResponse CollisionReponse; // 0x32
};

struct UUVProjectionToolProperties : UInteractiveToolPropertySet {
	EUVProjectionMethod UVProjectionMethod; // 0x60
	FVector ProjectionPrimitiveScale; // 0x64
	float CylinderProjectToTopOrBottomAngleThreshold; // 0x70
	FVector2D UVScale; // 0x74
	FVector2D UVOffset; // 0x7c
	bool bWorldSpaceUVScale; // 0x84
};

struct UImage : UWidget {
	FSlateBrush Brush; // 0x108
	FDelegate BrushDelegate; // 0x190
	FLinearColor ColorAndOpacity; // 0x1a0
	FDelegate ColorAndOpacityDelegate; // 0x1b0
	bool bFlipForRightToLeftFlowDirection; // 0x1c0
	FDelegate OnMouseButtonDownEvent; // 0x1c4
};

struct UDynamicMeshBrushTool : UBaseBrushTool {
	UPreviewMesh* PreviewMesh; // 0x1c0
};

struct URandomVector : UFieldNodeVector {
	float Magnitude; // 0xc0
};

struct UGameNetworkManagerSettings : UObject {
	int32_t MinDynamicBandwidth; // 0x28
	int32_t MaxDynamicBandwidth; // 0x2c
	int32_t TotalNetBandwidth; // 0x30
	int32_t BadPingThreshold; // 0x34
	char bIsStandbyCheckingEnabled : 1; // 0x38
	float StandbyRxCheatTime; // 0x3c
	float StandbyTxCheatTime; // 0x40
	float PercentMissingForRxStandby; // 0x44
	float PercentMissingForTxStandby; // 0x48
	float PercentForBadPing; // 0x4c
	float JoinInProgressStandbyWaitTime; // 0x50
};

struct UPolygonSelectionMechanic : UInteractionMechanic {
	UPolygonSelectionMechanicProperties* Properties; // 0x50
	APreviewGeometryActor* PreviewGeometryActor; // 0x360
	UTriangleSetComponent* DrawnTriangleSetComponent; // 0x368
	UMaterialInterface* HighlightedFaceMaterial; // 0x3c0
};

struct UMeshInspectorTool : USingleSelectionTool {
	UMeshInspectorProperties* Settings; // 0x88
	UExistingMeshMaterialProperties* MaterialSettings; // 0x90
	UPreviewMesh* PreviewMesh; // 0xa0
	ULineSetComponent* DrawnLineSet; // 0xa8
	UMaterialInterface* DefaultMaterial; // 0xb0
};

struct ULandscapeWeightmapUsage : UObject {
	ULandscapeComponent* ChannelUsage[0x4]; // 0x28
	FGuid LayerGuid; // 0x48
};

struct UUI_Wound : UUserWidget {
	UTextBlock* TbEvil; // 0x260
	UProgressBar* PbEvil; // 0x268
	UTextBlock* TbTurbid; // 0x270
	UProgressBar* PbTurbid; // 0x278
	UTextBlock* TbPoison; // 0x280
	UProgressBar* PbPoison; // 0x288
	UTextBlock* TbTrauma; // 0x290
	UProgressBar* PbTrauma; // 0x298
	UTextBlock* TbWound; // 0x2a0
};

struct UPhysicsInspectorTool : UMultiSelectionTool {
	UCollisionGeometryVisualizationProperties* VizSettings; // 0x90
	TArray<UPhysicsObjectToolPropertySet*> ObjectData; // 0x98
	UMaterialInterface* LineMaterial; // 0xa8
	TArray<UPreviewGeometry*> PreviewElements; // 0xb0
};

struct UBookMark2D : UBookmarkBase {
	float Zoom2D; // 0x28
	FIntPoint Location; // 0x2c
};

struct ULogoutCallbackProxy : UBlueprintAsyncActionBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct AGameRecordManager : AActor {
	float ShowStepSize; // 0x320
};

struct UUI_MailDetails : UUserWidget {
	UTextBlock* ContentTitle; // 0x260
	UTextBlock* ContentCreateTimeText; // 0x268
	UTextBlock* ValidityDateText; // 0x270
	URichTextBlock* ContentRichText; // 0x278
	UTextBlock* AttachText; // 0x280
	UUniformGridPanel* AttachGridPanel; // 0x288
	UButton* Btn_Attach; // 0x290
	UButton* Btn_Del; // 0x298
	UN_InventorySlot* SlotClass; // 0x2a0
	UN_AppearanceSlot* AppearanceSlotClass; // 0x2a8
	TArray<UN_InventorySlot*> AttachSlotList; // 0x2b8
	TArray<USGItem*> AttachItems; // 0x2c8
	USGUI* RootSGUI; // 0x2d8
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x2e0
};

struct UJunDetailWidget : UUserWidget {
	UMaterialInterface* GuildIconMat; // 0x260
	UGlobalMap_ServerItem* ServerItemClass; // 0x268
	float InterpSpeed; // 0x270
	FName EnterServerButtonName; // 0x274
	FName EnterServerTextblockName; // 0x27c
	FText EnterServerText; // 0x288
	FName CDRemainTimeTextblockName; // 0x2a0
	FName FastEnterServerButtonName; // 0x2a8
	FName FastEnterServerTextblockName; // 0x2b0
	FName ShowCrossButtonName; // 0x2b8
	FName ShowBattleButtonName; // 0x2c0
	FName ShowInventoryButtonName; // 0x2c8
	bool DefalutServerItemEnable; // 0x2d0
	UButton* BtnRefresh; // 0x358
	UButton* BtnReturn; // 0x360
	UGridPanel* GPServer; // 0x368
	UButton* BtnClose; // 0x370
	UImage* ImgBlock; // 0x378
	UCanvasPanel* LoadingCanvas; // 0x380
	UTextBlock* TbCityName; // 0x388
	UTextBlock* TbOccupy; // 0x390
	UHorizontalBox* HbServerProtectionTime; // 0x398
	UTextBlock* TbServerProtectionTime; // 0x3a0
	UImage* ImgNewServer; // 0x3a8
	UCanvasPanel* GuildCanvas; // 0x3b0
	UImage* ImgGuildIcon; // 0x3b8
	UTextBlock* TbGuildName; // 0x3c0
	UTextBlock* TbGuildOwnerName; // 0x3c8
	UTextBlock* TbGuildOwnerJob; // 0x3d0
	UTextBlock* TbMemberNum; // 0x3d8
	UTextBlock* TbOccupyGuanAiNum; // 0x3e0
	UTextBlock* TbOccupyCityNum; // 0x3e8
	UTextBlock* TbOccupyXianChengNum; // 0x3f0
	int32_t BindJunId; // 0x3f8
	FBigMapJunInfo BindJunData; // 0x400
	TArray<UGlobalMap_ServerItem*> ServerItems; // 0x460
	UGlobalMap_ServerItem* SelectServerItem; // 0x470
	char bIniting : 1; // 0x478
	UCanvasPanelSlot* JunDetailSlot; // 0x480
	EJunDetailState JunDetailState; // 0x488
	bool bJunDetailShowed; // 0x489
	ASGWorldSettings* SGWorldSettings; // 0x490
	USGGameData* SGGameData; // 0x498
	ASGGameState* SGGameState; // 0x4a0
	USGLocalPlayer* SGLocalPlayer; // 0x4a8
	UMaterialInstanceDynamic* DynamicGuildIconInstance; // 0x4b0
	USGUI* ParentUI; // 0x4b8
	FTimerHandle GetPingTimer; // 0x4c0
	TArray<int32_t> GetPingServerInfoIndexs; // 0x4c8
	UButton* BtnEnterServer; // 0x4d8
	UTextBlock* TbEnterServer; // 0x4e0
	UButton* BtnFastEnter; // 0x4e8
	UTextBlock* TbFastEnterServer; // 0x4f0
	UTextBlock* TbCDRemainTime; // 0x4f8
	UButton* BtnShowCross; // 0x500
	UButton* BtnShowBattle; // 0x508
	UButton* BtnShowInventory; // 0x510
};

struct UHorizonDialogueMsgTextBlock : UCanvasPanel {
	FMulticastInlineDelegate OnHypertextClickedDelegate; // 0x138
	FMulticastInlineDelegate OnHypertextPressedDelegate; // 0x160
	FMulticastInlineDelegate OnHypertextReleasedDelegate; // 0x188
	FMulticastInlineDelegate OnHypertextHoveredDelegate; // 0x1b0
	FMulticastInlineDelegate OnHypertextUnhoveredDelegate; // 0x1d8
	FMulticastInlineDelegate OnDialogueMsgLoopFunction; // 0x200
	FMulticastInlineDelegate OnDialogueMsgCompleteFunction; // 0x228
	FMulticastInlineDelegate OnSetDialoguePageFunction; // 0x250
	FMulticastInlineDelegate OnDialoguePageEndFunction; // 0x278
	FMulticastInlineDelegate OnRebuildDialogueDelegate; // 0x2a0
	FMulticastInlineDelegate OnCustomEventDelegate; // 0x2c8
	FMulticastInlineDelegate OnCharAdvancedDelegate; // 0x2f0
	FText Text; // 0x318
	EHorizonDialogueTextOverflowWrapMethod TextOverFlowWrapMethod; // 0x330
	EHorizonDialogueTextOverflowWarpMethod_DEPRECATED TextOverFlowWarpMethod; // 0x331
	float DialogueMsgSpeed; // 0x388
	bool bIsStartTickDialogueMsg; // 0x38c
	bool bIsRepeatDialogueMsg; // 0x38d
	float RepeatDialogueMsgInterval; // 0x390
	bool bIsDialogueMsgText; // 0x394
	bool bIsAutoNextDialogueMsgPage; // 0x395
	float AutoNextDialogueMsgPageIntervalRate; // 0x398
	float AutoNextDialogueMsgPageIntervalMin; // 0x39c
	float AutoNextDialogueMsgPageIntervalMax; // 0x3a0
	bool bIgnoreTimeDilation; // 0x3a4
	float CustomTimeDilation; // 0x3a8
	bool bForceRebuildDialogueMsgText; // 0x3ac
	TArray<UHorizonDialogueStyleInfo*> StyleInfoClassList; // 0x3b0
	TArray<FHorizonDialogueSegmentInfoStyle> SegmentStyleList; // 0x3c0
	bool bIsRichText; // 0x3d0
	FSlateColor ColorAndOpacity; // 0x3d8
	FSlateFontInfo Font; // 0x400
	FVector2D ShadowOffset; // 0x458
	FLinearColor ShadowColorAndOpacity; // 0x460
	ETextJustify Justification; // 0x470
	FMargin LineMargin; // 0x474
	UHorizonButton* DefaultButtonStyleWidgetClass; // 0x488
	TArray<UHorizonDialogueMsgDecorator*> DecoratorClasses; // 0x490
	TArray<UHorizonDialogueStyleInfo*> StyleInfoList; // 0x4f0
};

struct ASG_SiegeFlameThrowerCharacter : ASG_SiegeCharacter {
	float FlameTraceDelta; // 0x2ae8
	float FlameFireAmmoReduceDelta; // 0x2aec
	float CreateFlameTrapDelta; // 0x2af0
	float FlameSphere; // 0x2b00
	float FlameDistance; // 0x2b04
	FName FlameFireStartSocket; // 0x2b08
	FTimerHandle FlameThrowerTimerHandle; // 0x2b10
	FTimerHandle FlameThrowerItemTimerHandle; // 0x2b18
	char bDebugTrace : 1; // 0x2b20
	float DamageBase; // 0x2b24
	USGDamageType* DamageType; // 0x2b28
	EDamageType FlameAttackDamageType; // 0x2b30
	ASGEmptyGameTrap* FlameTrapTemplate; // 0x2b38
	UMaterialInterface* TrapDecal; // 0x2b40
	FVector TrapScale; // 0x2b48
	FVector DecalSize; // 0x2b54
	FRotator DecalRotationOffset; // 0x2b60
	FVector DecalLocationOffset; // 0x2b6c
	FVector BoxSize; // 0x2b78
	FVector BoxLocationOffset; // 0x2b84
	FRotator BoxRotationOffset; // 0x2b90
	char bEnableBoxOverlap : 1; // 0x2b9c
	float TrapLifeTime; // 0x2ba0
	char bCreateTrapParticle : 1; // 0x2ba4
	UParticleSystem* TrapParticle; // 0x2ba8
	USGBuff* OverlapBuff; // 0x2bb0
	UParticleSystem* BrokenExplosionEffect; // 0x2bb8
	FName BrokenExplosionSoundID; // 0x2bc0
	FVector EffectScale; // 0x2bc8
	FVector ExlposionLocationOffset; // 0x2bd4
	float MaxDamage; // 0x2be0
	float MinDamage; // 0x2be4
	float MaxCollectionDamage; // 0x2be8
	float MinCollectionDamage; // 0x2bec
	float InnerRadius; // 0x2bf0
	float OuterRadius; // 0x2bf4
	float DamageFalloff; // 0x2bf8
	USGDamageType* BrokenExplosionDamageType; // 0x2c00
	EDamageType BrokenExplosionAttackDamageType; // 0x2c08
	FTimerHandle CountingHandle; // 0x2c10
	float FireTime; // 0x2c18
	float FireLeftTime; // 0x2c1c
};

struct UUI_PasswordEntry : USGUI {
	UEditableTextBox* PasswordTextBox; // 0x2d8
	UButton* SelectButton0; // 0x2e0
	UButton* SelectButton1; // 0x2e8
	UButton* SelectButton2; // 0x2f0
	UButton* SelectButton3; // 0x2f8
	UButton* SelectButton4; // 0x300
	UButton* SelectButton5; // 0x308
	UButton* SelectButton6; // 0x310
	UButton* SelectButton7; // 0x318
	UButton* SelectButton8; // 0x320
	UButton* SelectButton9; // 0x328
	UButton* ConfirmButton; // 0x330
	UButton* DeleteButton; // 0x338
	UButton* CannelButton; // 0x340
};

struct UGroomAssetImportData : UAssetImportData {
	UGroomImportOptions* ImportOptions; // 0x28
};

struct UNavigationRadioView : UUI_RadioButtonView {
	FVector2D BodyNormalPos; // 0x2f0
	ESlateVisibility BodyNormalVisibility; // 0x2f8
	FVector2D BodyMainLandVersionPos; // 0x2fc
	ESlateVisibility BodyMainLandVersionVisibility; // 0x304
	FVector2D FaceNormalPos; // 0x308
	ESlateVisibility FaceNormalVisibility; // 0x310
	FVector2D FaceMainLandVersionPos; // 0x314
	ESlateVisibility FaceMainLandVersionVisibility; // 0x31c
	FVector2D DecorationNormalPos; // 0x320
	ESlateVisibility DecorationNormalVisibility; // 0x328
	FVector2D DecorationMainLandVersionPos; // 0x32c
	ESlateVisibility DecorationMainLandVersionVisibility; // 0x334
	FVector2D VoiceNormalPos; // 0x338
	ESlateVisibility VoiceNormalVisibility; // 0x340
	FVector2D VoiceMainLandVersionPos; // 0x344
	ESlateVisibility VoiceMainLandVersionVisibility; // 0x34c
	UCameraRadioButton* RpbBody; // 0x350
	UCameraRadioButton* RpbFace; // 0x358
	UCameraRadioButton* RpbDecoration; // 0x360
	UCameraRadioButton* RpbVoice; // 0x368
};

struct UUI_GuildTech : UUI_NN_CraftPerk {
	UCanvasPanel* UpgradeGuildTechCanvas; // 0x4b0
	UTextBlock* NeedGuildActiveText; // 0x4b8
	UTextBlock* NeedGuildSilverText; // 0x4c0
	UCheckBox* UseSelfCopperCheckBox; // 0x4c8
	UCanvasPanel* GuildInfoCanvas; // 0x4d0
	UTextBlock* GuildLevelText; // 0x4d8
	UTextBlock* GuildActivePointText; // 0x4e0
	UTextBlock* GuildSilverText; // 0x4e8
	UButton* ConfirmUpgradeButton; // 0x4f0
	UButton* CancelUpgradeButton; // 0x4f8
	UButton* CloseButton; // 0x500
	FLinearColor EnoughColor; // 0x508
	FLinearColor NotEnoughColor; // 0x518
	UUI_GenericConfirmationDialog* ConfirmUsePersonalUIOverride; // 0x528
};

struct UMaterialShaderQualitySettings : UObject {
	TMap<FName, UShaderPlatformQualitySettings*> ForwardSettingMap; // 0x28
};

struct UEditableGameplayTagQueryExpression_NoExprMatch : UEditableGameplayTagQueryExpression {
	TArray<UEditableGameplayTagQueryExpression*> Expressions; // 0x28
};

struct UGizmoArrowComponent : UGizmoBaseComponent {
	FVector Direction; // 0x4a8
	float Gap; // 0x4b4
	float Length; // 0x4b8
	float Thickness; // 0x4bc
};

struct UUI_AllianceRelation : USGUI {
	UAllianceRelationSlot* AllianceRelationSlotClass; // 0x2d8
	UUserWidget* RelationLineBgClass; // 0x2e0
	float RelationLineWidth; // 0x2e8
	FVector2D RelationSlotSize; // 0x2ec
	FVector2D RelationSlotPadding; // 0x2f4
	float VerticalLineLen; // 0x2fc
	UCanvasPanel* RelationPanel; // 0x300
	UCanvasPanel* OutRelationPanel; // 0x308
};

struct UUI_ChatSettingSlot : UUserWidget {
	UCheckBox* ChatSettingCheckBox; // 0x260
	UTextBlock* ChatSettingText; // 0x268
	FText SettingText; // 0x270
	EChatSlotType ChannelType; // 0x288
	ECheckBoxState DefaultSettingState; // 0x289
};

struct UNiagaraDataInterfaceCamera : UNiagaraDataInterface {
	int32_t PlayerControllerIndex; // 0x38
	bool bRequireCurrentFrameData; // 0x3c
};

struct UUI_StructureContainerLogSlot : USGUI {
	UUI_StructureOccupyItemSlot* StructureItemLogSlot; // 0x2d8
	UTextBlock* PlayerNameText; // 0x2e0
	UTextBlock* GuildNameText; // 0x2e8
	UTextBlock* ItemNumText; // 0x2f0
	URichTextBlock* ItemOptionTypeText; // 0x2f8
	UTextBlock* UTCTimeText; // 0x300
};

struct UHorizonFlipbookWidget : UImage {
	bool bIsStartTick; // 0x220
	int32_t NumOfLoop; // 0x224
	UPaperFlipbook* PaperFlipbook; // 0x228
};

struct UWBP_UpdatePasswotd_C : UUI_UpDatePasswordDialog {
	URichTextBlock* CheckBoxSelectedTextBlock; // 0x330
	UImage* Image; // 0x338
	UImage* Image_131; // 0x340
	UImage* Image_250; // 0x348
	UImage* ImgBg; // 0x350
	UImage* ImgBorder; // 0x358
	UImage* ImgNameInputBg; // 0x360
	UImage* ImgNameInputBgAgain; // 0x368
	UImage* ImgNameInputBgAgain_2; // 0x370
};

struct ULightComponentBase : USceneComponent {
	FGuid LightGuid; // 0x208
	float Brightness; // 0x218
	float Intensity; // 0x21c
	FColor LightColor; // 0x220
	char bAffectsWorld : 1; // 0x224
	char CastShadows : 1; // 0x224
	char CastStaticShadows : 1; // 0x224
	char CastDynamicShadows : 1; // 0x224
	char bAffectTranslucentLighting : 1; // 0x224
	char bTransmission : 1; // 0x224
	char bCastVolumetricShadow : 1; // 0x224
	char bCastDeepShadow : 1; // 0x224
	char bCastRaytracedShadow : 1; // 0x225
	char bAffectReflection : 1; // 0x225
	char bAffectGlobalIllumination : 1; // 0x225
	float DeepShadowLayerDistribution; // 0x228
	float IndirectLightingIntensity; // 0x22c
	float VolumetricScatteringIntensity; // 0x230
	int32_t SamplesPerPixel; // 0x234
};

struct UPinchBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	bool bPerpDamping; // 0x6c
};

struct USourceEffectDynamicsProcessorPreset : USoundEffectSourcePreset {
	FSourceEffectDynamicsProcessorSettings Settings; // 0xb8
};

struct UMaterialExpressionSkyAtmosphereLightDirection : UMaterialExpression {
	int32_t LightIndex; // 0x40
};

struct ABP_LightningEffect_Naturebolt_C : ABP_LightningEffect_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x6a8
	USoundBase* StrikeSound; // 0x6b0
	USoundBase* GrowthSound; // 0x6b8
};

struct UMaterialExpressionVectorNoise : UMaterialExpression {
	FExpressionInput position; // 0x40
	EVectorNoiseFunction NoiseFunction; // 0x54
	int32_t Quality; // 0x58
	char bTiling : 1; // 0x5c
	uint32_t TileSize; // 0x60
};

struct UNiagaraDataInterfaceGrid2D : UNiagaraDataInterfaceRWBase {
	int32_t NumCellsX; // 0xd8
	int32_t NumCellsY; // 0xdc
	int32_t NumCellsMaxAxis; // 0xe0
	int32_t NumAttributes; // 0xe4
	bool SetGridFromMaxAxis; // 0xe8
	FVector2D WorldBBoxSize; // 0xec
};

struct UUpdateCrosshairs_AnimNotifyState : UAnimNotifyState {
	EShooterAttackMontageType Enum_ShooterAttackMontageType; // 0x30
	UAnimMontage* PlayMontage; // 0x38
	float AnimLength; // 0x40
	float BeforeAnimLength; // 0x44
};

struct UItemAuctionSearchNameSlot : UUserWidget {
	UButton* ButtonSelected; // 0x260
	UTextBlock* NameText; // 0x268
	FButtonStyle ButtonCheckedStyle; // 0x270
	FButtonStyle ButtonUnCheckedStyle; // 0x4e8
	TWeakObjectPtr<USGUI> ParentUI; // 0x760
};

struct UUpdateAnimInstance_AnimNotify : UAnimNotify {
	EAnimalsStanceType Enum_AnimalsStanceType; // 0x38
};

struct UUniformScalar : UFieldNodeFloat {
	float Magnitude; // 0xc0
};

struct UGuildSkillGroupSlot : USGUI {
	UCanvasPanel* GuildSkillGroupPanel; // 0x2d8
	float SlotLength; // 0x2e0
	float SlotWidth; // 0x2e4
	FVector2D NextLineStartPosition; // 0x2e8
	FVector2D NextLineFromStartPositionDistance; // 0x2f0
	FVector2D ReceiveLinePosition; // 0x2f8
	float LineWidth; // 0x300
	float UnLockTurnDownAddY; // 0x304
	float UnLockTurnUpAddHeight; // 0x308
	float UnLockStraightAddLen; // 0x30c
	UGuildSkillGroupLine* GuildSkillGroupLineTemplate; // 0x310
	UN_GuildSkillSlot* N_GuildSkillSlotClass; // 0x318
};

struct ULightmassPortalComponent : USceneComponent {
	UBoxComponent* PreviewBox; // 0x208
};

struct UMaterialExpressionStaticComponentMaskParameter : UMaterialExpressionParameter {
	char DefaultR : 1; // 0x58
	char DefaultG : 1; // 0x58
	char DefaultB : 1; // 0x58
	char DefaultA : 1; // 0x58
};

struct UAnimationSettings : UDeveloperSettings {
	int32_t CompressCommandletVersion; // 0x38
	TArray<FString> KeyEndEffectorsMatchNameArray; // 0x40
	bool ForceRecompression; // 0x50
	bool bForceBelowThreshold; // 0x51
	bool bFirstRecompressUsingCurrentOrDefault; // 0x52
	bool bRaiseMaxErrorToExisting; // 0x53
	bool bEnablePerformanceLog; // 0x54
	bool bStripAnimationDataOnDedicatedServer; // 0x55
	bool bTickAnimationOnSkeletalMeshInit; // 0x56
	TArray<FCustomAttributeSetting> BoneCustomAttributesNames; // 0x58
	TArray<FString> BoneNamesWithCustomAttributes; // 0x68
	TMap<FName, ECustomAttributeBlendType> AttributeBlendModes; // 0x78
	ECustomAttributeBlendType DefaultAttributeBlendMode; // 0xc8
};

struct USeamSculptTool : UDynamicMeshBrushTool {
	USeamSculptToolProperties* Settings; // 0x200
	UPreviewGeometry* PreviewGeom; // 0x208
};

struct UMovieSceneGeometryCollectionTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
};

struct UMovieScenePrimitiveMaterialTrack : UMovieScenePropertyTrack {
	int32_t MaterialIndex; // 0xb0
};

struct UInterpTrackVectorMaterialParam : UInterpTrackVectorBase {
	TArray<UMaterialInterface*> TargetMaterials; // 0x90
	FName ParamName; // 0xa0
};

struct UUI_MainMenuBtn : UUserWidget {
	FText ButtonName; // 0x260
	FLinearColor TextCommonCorlor; // 0x278
	FLinearColor TextCommonOutlineCorlor; // 0x288
	FLinearColor TextHorverCorlor; // 0x298
	FLinearColor TextHorverOutlineCorlor; // 0x2a8
	TSoftObjectPtr<UTexture2D> ButtonHoverTexure; // 0x2b8
	TSoftObjectPtr<UTexture2D> ButtonClickedTexture; // 0x2e0
	int32_t CommonFontSize; // 0x308
	int32_t SelectedFontSize; // 0x30c
	UTextBlock* ButtonText; // 0x310
	UBorder* MainBorder; // 0x318
};

struct UMovieSceneNiagaraVectorParameterTrack : UMovieSceneNiagaraParameterTrack {
	int32_t ChannelsUsed; // 0xb0
};

struct ULevelSequenceBurnInOptions : UObject {
	bool bUseBurnIn; // 0x28
	FSoftClassPath BurnInClass; // 0x30
	ULevelSequenceBurnInInitSettings* Settings; // 0x48
};

struct UUI_AnimalRest : USGUI {
	TWeakObjectPtr<ASGStructureAnimalRest> BindAnimalRest; // 0x2d8
	UVerticalBox* DeadlyAnimalVertical; // 0x2e0
	UVerticalBox* RestAnimalVertical; // 0x2e8
	UButton* AddFoodButton; // 0x2f0
	UButton* AddLifeCountButton; // 0x2f8
	UButton* ReleaseAnimalButton; // 0x300
	UButton* RebornAnimalButton; // 0x308
	UTextBlock* LeftFoodAmount; // 0x310
	UButton* CloseButton; // 0x318
	UAnimalRestSlot* AnimalRestSlotTemplate; // 0x320
	TArray<UAnimalRestSlot*> AnimalRestSlotList; // 0x328
	FGuid SelectedAnimalGuid; // 0x340
	FGuid ReduceRebornAnimalGuid; // 0x350
	UTextBlock* OtherUsingText; // 0x360
	TWeakObjectPtr<USGInventoryComponent> BindInventory; // 0x368
	FDateTime FinalRebornTime; // 0x370
};

struct UCircularThrobber : UWidget {
	int32_t NumberOfPieces; // 0x108
	float Period; // 0x10c
	float Radius; // 0x110
	USlateBrushAsset* PieceImage; // 0x118
	FSlateBrush Image; // 0x120
	bool bEnableRadius; // 0x1a8
};

struct UParticleModuleTrailSource : UParticleModuleTrailBase {
	ETrail2SourceMethod SourceMethod; // 0x30
	FName SourceName; // 0x34
	FRawDistributionFloat SourceStrength; // 0x40
	char bLockSourceStength : 1; // 0x70
	int32_t SourceOffsetCount; // 0x74
	TArray<FVector> SourceOffsetDefaults; // 0x78
	EParticleSourceSelectionMethod SelectionMethod; // 0x88
	char bInheritRotation : 1; // 0x8c
};

struct UGuildSkillToolTipWidget : USGToolTipWidget {
	TWeakObjectPtr<UN_GuildSkillSlot> BindGuildSkillSlot; // 0x288
	UTextBlock* NameText; // 0x290
	UTextBlock* EffectText1; // 0x298
	UTextBlock* EffectText2; // 0x2a0
	UTextBlock* EffectText3; // 0x2a8
	UCanvasPanel* RequireGuildLevelCanvas; // 0x2b0
	UTextBlock* GuildLevel; // 0x2b8
	UTextBlock* NeedGuildLevel; // 0x2c0
	UCanvasPanel* RequireGuildSkillCanvas1; // 0x2c8
	UTextBlock* GuildSkill1; // 0x2d0
	UTextBlock* HideGuildSkill1; // 0x2d8
	UTextBlock* NeedGuildSkill1; // 0x2e0
	UCanvasPanel* RequireGuildSkillCanvas2; // 0x2e8
	UTextBlock* GuildSkill2; // 0x2f0
	UTextBlock* HideGuildSkill2; // 0x2f8
	UTextBlock* NeedGuildSkill2; // 0x300
	UCanvasPanel* RequireGuildSkillCanvas3; // 0x308
	UTextBlock* GuildSkill3; // 0x310
	UTextBlock* HideGuildSkill3; // 0x318
	UTextBlock* NeedGuildSkill3; // 0x320
	UCanvasPanel* RequirePointCanvas; // 0x328
	UTextBlock* ActivityPoint; // 0x330
	UTextBlock* NeedActivityPoint; // 0x338
	UCanvasPanel* RequireCapitalCanvas; // 0x340
	UTextBlock* GuildCopper; // 0x348
	UTextBlock* NeedGuildCopper; // 0x350
	UVerticalBox* RequireVertical; // 0x358
	FLinearColor EnoughColor; // 0x360
	FLinearColor NotEnoughColor; // 0x370
};

struct UFlattenBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct UUI_SetGuildLanguage : USGUI {
	UCanvasPanel* LanguageCanvasPanel; // 0x2d8
	UButton* ExitButton; // 0x2e0
	int32_t LanguageGridCols; // 0x2e8
	UGuildLanguageSlot* GuildLanguageSlotClass; // 0x2f0
	float ColumnDistance; // 0x2f8
	float RowDistance; // 0x2fc
	FVector2D LanguageSlotSize; // 0x300
	int32_t ShowLanguageTypeMax; // 0x308
	int32_t ShowLanguageTypeMin; // 0x30c
};

struct UMaterialExpressionLandscapeLayerBlend : UMaterialExpression {
	TArray<FLayerBlendInput> Layers; // 0x40
	FGuid ExpressionGUID; // 0x50
};

struct UMaterialExpressionBlackBody : UMaterialExpression {
	FExpressionInput Temp; // 0x40
};

struct UInAppPurchaseCallbackProxy2 : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UAREnvironmentCaptureProbe : UARTrackedGeometry {
	FVector Extent; // 0xf8
	UAREnvironmentCaptureProbeTexture* EnvironmentCaptureTexture; // 0x108
};

struct UPerkSlot : UUserWidget {
	USGToolTipWidget* ToolTipWidgetTemplateOverride; // 0x260
	TSoftObjectPtr<UTexture2D> LockTexture; // 0x268
	TSoftObjectPtr<UTexture2D> UnlockTexture; // 0x290
	TSoftObjectPtr<UTexture2D> LearnedTexture; // 0x2b8
	char IsHover : 1; // 0x2e0
	char bCanClickLearn : 1; // 0x2e0
	char bNeedShowSmallSkill : 1; // 0x2e0
	FMulticastInlineDelegate OnPerkSlotPressed; // 0x2e8
	FMulticastInlineDelegate OnPerkSlotReleased; // 0x2f8
	int32_t PerkLevel; // 0x30c
	UImage* ImgBorder; // 0x310
	UImage* ImgIcon; // 0x318
	USGUI* RootSGUI; // 0x320
	USizeBox* SBPerkSlot; // 0x328
};

struct ULODSyncComponent : UActorComponent {
	int32_t NumLODs; // 0xc0
	int32_t ForcedLOD; // 0xc4
	TArray<FComponentSync> ComponentsToSync; // 0xc8
	TMap<FName, FLODMappingData> CustomLODMapping; // 0xd8
	int32_t CurrentLOD; // 0x128
	int32_t CurrentNumLODs; // 0x12c
	TArray<UPrimitiveComponent*> DriveComponents; // 0x130
	TArray<UPrimitiveComponent*> SubComponents; // 0x140
};

struct ASGStructureAnimalCage : ASGStructure {
	int32_t PutAnimalInMaxNum; // 0xb98
	TArray<FAnimalCageConfig> AnimalCofigs; // 0xba0
	TArray<FName> AttachSocketNames; // 0xbb0
	float SearchInterval; // 0xbc0
	float SearchRadius; // 0xbc4
	char bIsDebugSearch : 1; // 0xbc8
	float CalcEscapeInterval; // 0xbcc
	TArray<FAnimalCageData> InCageAnimalDatas; // 0xbd0
	TArray<USkeletalMeshComponent*> AttachedSkeletalMeshComps; // 0xc08
	FTimerHandle CageCalcEscapeHandle; // 0xc18
};

struct UParticleModuleVelocity_Seeded : UParticleModuleVelocity {
	FParticleRandomSeedInfo RandomSeedInfo; // 0xb0
};

struct UAnimationSharingManager : UObject {
	TArray<USkeleton*> Skeletons; // 0x28
	TArray<UAnimSharingInstance*> PerSkeletonData; // 0x38
};

struct UARSessionConfig : UDataAsset {
	bool bGenerateMeshDataFromTrackedGeometry; // 0x30
	bool bGenerateCollisionForMeshData; // 0x31
	bool bGenerateNavMeshForMeshData; // 0x32
	bool bUseMeshDataForOcclusion; // 0x33
	bool bRenderMeshDataInWireframe; // 0x34
	bool bTrackSceneObjects; // 0x35
	bool bUsePersonSegmentationForOcclusion; // 0x36
	bool bUseSceneDepthForOcclusion; // 0x37
	bool bUseAutomaticImageScaleEstimation; // 0x38
	bool bUseStandardOnboardingUX; // 0x39
	EARWorldAlignment WorldAlignment; // 0x3a
	EARSessionType SessionType; // 0x3b
	EARPlaneDetectionMode PlaneDetectionMode; // 0x3c
	bool bHorizontalPlaneDetection; // 0x3d
	bool bVerticalPlaneDetection; // 0x3e
	bool bEnableAutoFocus; // 0x3f
	EARLightEstimationMode LightEstimationMode; // 0x40
	EARFrameSyncMode FrameSyncMode; // 0x41
	bool bEnableAutomaticCameraOverlay; // 0x42
	bool bEnableAutomaticCameraTracking; // 0x43
	bool bResetCameraTracking; // 0x44
	bool bResetTrackedObjects; // 0x45
	TArray<UARCandidateImage*> CandidateImages; // 0x48
	int32_t MaxNumSimultaneousImagesTracked; // 0x58
	EAREnvironmentCaptureProbeType EnvironmentCaptureProbeType; // 0x5c
	TArray<char> WorldMapData; // 0x60
	TArray<UARCandidateObject*> CandidateObjects; // 0x70
	FARVideoFormat DesiredVideoFormat; // 0x80
	bool bUseOptimalVideoFormat; // 0x8c
	EARFaceTrackingDirection FaceTrackingDirection; // 0x8d
	EARFaceTrackingUpdate FaceTrackingUpdate; // 0x8e
	int32_t MaxNumberOfTrackedFaces; // 0x90
	TArray<char> SerializedARCandidateImageDatabase; // 0x98
	EARSessionTrackingFeature EnabledSessionTrackingFeature; // 0xa8
	EARSceneReconstruction SceneReconstructionMethod; // 0xa9
	UARPlaneComponent* PlaneComponentClass; // 0xb0
	UARPointComponent* PointComponentClass; // 0xb8
	UARFaceComponent* FaceComponentClass; // 0xc0
	UARImageComponent* ImageComponentClass; // 0xc8
	UARQRCodeComponent* QRCodeComponentClass; // 0xd0
	UARPoseComponent* PoseComponentClass; // 0xd8
	UAREnvironmentProbeComponent* EnvironmentProbeComponentClass; // 0xe0
	UARObjectComponent* ObjectComponentClass; // 0xe8
	UARMeshComponent* MeshComponentClass; // 0xf0
	UARGeoAnchorComponent* GeoAnchorComponentClass; // 0xf8
	UMaterialInterface* DefaultMeshMaterial; // 0x100
	UMaterialInterface* DefaultWireframeMeshMaterial; // 0x108
};

struct UDrawPolyPathTool : UInteractiveTool {
	UDrawPolyPathProperties* TransformProps; // 0xa0
	UDrawPolyPathExtrudeProperties* ExtrudeProperties; // 0xa8
	UNewMeshMaterialProperties* MaterialProperties; // 0xb0
	UConstructionPlaneMechanic* PlaneMechanic; // 0x140
	UPolyEditPreviewMesh* EditPreview; // 0x1e8
	UPlaneDistanceFromHitMechanic* ExtrudeHeightMechanic; // 0x1f0
	USpatialCurveDistanceMechanic* CurveDistMechanic; // 0x1f8
	UCollectSurfacePathMechanic* SurfacePathMechanic; // 0x200
};

struct UActorSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
	FActorSequenceObjectReferenceMap ObjectReferences; // 0x68
};

struct ASGStructureOreFactory : ASGStructureNPC {
	TArray<FCurrentOreInfoData> CurrentOreDensityData; // 0x1010
	int32_t CurrentOreType; // 0x1020
	int32_t CoperWrapperId; // 0x1024
	int32_t IronWrapperId; // 0x1028
	int32_t SaltWrapperId; // 0x102c
};

struct UParticleModuleVectorFieldGlobal : UParticleModuleVectorFieldBase {
	char bOverrideGlobalVectorFieldTightness : 1; // 0x30
	float GlobalVectorFieldScale; // 0x34
	float GlobalVectorFieldTightness; // 0x38
};

struct UGameplayAbility : UObject {
	FGameplayTagContainer AbilityTags; // 0xa8
	bool bReplicateInputDirectly; // 0xc8
	bool RemoteInstanceEnded; // 0xc9
	EGameplayAbilityReplicationPolicy ReplicationPolicy; // 0xce
	EGameplayAbilityInstancingPolicy InstancingPolicy; // 0xcf
	bool bServerRespectsRemoteAbilityCancellation; // 0xd0
	bool bRetriggerInstancedAbility; // 0xd1
	FGameplayAbilityActivationInfo CurrentActivationInfo; // 0xd8
	FGameplayEventData CurrentEventData; // 0xf0
	EGameplayAbilityNetExecutionPolicy NetExecutionPolicy; // 0x1a0
	EGameplayAbilityNetSecurityPolicy NetSecurityPolicy; // 0x1a1
	UGameplayEffect* CostGameplayEffectClass; // 0x1a8
	TArray<FAbilityTriggerData> AbilityTriggers; // 0x1b0
	UGameplayEffect* CooldownGameplayEffectClass; // 0x1c0
	FGameplayTagContainer CancelAbilitiesWithTag; // 0x1c8
	FGameplayTagContainer BlockAbilitiesWithTag; // 0x1e8
	FGameplayTagContainer ActivationOwnedTags; // 0x208
	FGameplayTagContainer ActivationRequiredTags; // 0x228
	FGameplayTagContainer ActivationBlockedTags; // 0x248
	FGameplayTagContainer SourceRequiredTags; // 0x268
	FGameplayTagContainer SourceBlockedTags; // 0x288
	FGameplayTagContainer TargetRequiredTags; // 0x2a8
	FGameplayTagContainer TargetBlockedTags; // 0x2c8
	TArray<UGameplayTask*> ActiveTasks; // 0x308
	UAnimMontage* CurrentMontage; // 0x328
	bool bIsActive; // 0x390
	bool bIsCancelable; // 0x391
	bool bIsBlockingOtherAbilities; // 0x392
	bool bMarkPendingKillOnAbilityEnd; // 0x3a8
};

struct UNoiseField : UFieldNodeFloat {
	float MinRange; // 0xc0
	float MaxRange; // 0xc4
	FTransform Transform; // 0xd0
};

struct ASGGameModeLogic : ASGGameMode {
	USGHuangLi* SGHuangLiModule; // 0x17c8
	USGSeason* SGSeasonModule; // 0x17d0
	int32_t XianChengOpenBattleHour; // 0x17d8
	TArray<FString> BlockList; // 0x17e8
	int64_t CalOccupyTime; // 0x17f8
	int32_t CalOccupySellTime; // 0x1800
	int64_t CalOccupyTriggerTime; // 0x1808
	int64_t CalOneDayTime; // 0x1810
	char bStartCheckOneDay : 1; // 0x1818
	char bCheckFinishOneDay : 1; // 0x1818
	TArray<FGuid> NeedDeleteDBChunkArray; // 0x1820
	TArray<FGuid> NeedDeleteChunkArray; // 0x1830
	TArray<TWeakObjectPtr<ASGPlayerCharacter>> NeedDestroyCharacters; // 0x1840
	int32_t DefaultSleepPlayerCharacterDestroyDays; // 0x1850
	FXianLingHuKouAwardInfo XianLingHuKouAwardInfo; // 0x1858
	FTimerHandle CheckNotifyXianLingHuKouAwardHandle; // 0x1870
	char bNeedNotifyXianLingHuKouAward : 1; // 0x1878
	FString ServerChatChannelID; // 0x1880
	FString ServerChatChannelNearByID; // 0x1890
	TMap<FString, FDateTime> ServerHuKouInfoMap; // 0x18a0
	TMap<FGuid, FXianChengJinXian> XianChengJinXianInfo; // 0x18f0
	int32_t MaxGuildEventRecordCount; // 0x19a0
	int32_t AutoModifyConflictInterval; // 0x19a4
	float AutoModifyConflictRemainingTime; // 0x19a8
	int32_t GuildEventTickInterval; // 0x19ac
	float GuildEventTickRemainingTime; // 0x19b0
	TMap<FGuid, FGuildEventData> GuildEventDatas; // 0x19b8
	TArray<FGmExecuteMsg> GmExecuteMsgs; // 0x1a08
	TArray<TWeakObjectPtr<AActor>> GmExecuteDestroyActors; // 0x1a18
	TArray<FString> GmExecutePlayerIDArray; // 0x1a28
	TMap<EWeatherType, FWeatherEffectEnvironment> WeatherEffectEnvironment; // 0x1a38
	TMap<GoodsSellerType, FTrafficGoodsSellerLvInfo> GoodsSellerLvMap; // 0x1a88
	TMap<GoodsSellerType, FTrafficGoodsSellerInfo> GoodsSellerInfo; // 0x1ad8
	TMap<TrafficGoodsType, float> GoodsPriceRatioMap; // 0x1b28
	TMap<GoodsSellerType, FSellerRefreshTimeInfo> GoodsRefreshTimeMap; // 0x1b78
	FDateTime NextRefreshGoodsPriceRatioTime; // 0x1bc8
	TArray<FWorldRankMsgStu> WorldRankMsgs; // 0x1bd0
	int64_t UTCAR_LastSettlementTicks; // 0x1be8
	TMap<FGuid, FActivityRankDataInfo> ActivityRank_Datas; // 0x1bf8
	TArray<FActivityRankRewardMsgStu> ActivityRankRewardMsgs; // 0x1c50
	TArray<FString> ActivityRank_PlayerRewards; // 0x1c60
	FActivityRankRule ActivityRankRule; // 0x1c70
};

struct UParticleEmitter : UObject {
	FName EmitterName; // 0x28
	int32_t SubUVDataOffset; // 0x30
	EEmitterRenderMode EmitterRenderMode; // 0x34
	EParticleSignificanceLevel SignificanceLevel; // 0x35
	char bUseLegacySpawningBehavior : 1; // 0x37
	char ConvertedModules : 1; // 0x37
	char bIsSoloing : 1; // 0x37
	char bCookedOut : 1; // 0x37
	char bDisabledLODsKeepEmitterAlive : 1; // 0x37
	char bDisableWhenInsignficant : 1; // 0x38
	TArray<UParticleLODLevel*> LODLevels; // 0x40
	int32_t PeakActiveParticles; // 0x50
	int32_t InitialAllocationCount; // 0x54
	float QualityLevelSpawnRateScale; // 0x58
	uint32_t DetailModeBitmask; // 0x5c
};

struct USeamSculptToolProperties : UInteractiveToolPropertySet {
	bool bShowWireframe; // 0x60
	bool bHitBackFaces; // 0x61
};

struct UBTTask_PushPawnAction : UBTTask_PawnActionBase {
	UPawnAction* Action; // 0x70
};

struct UNiagaraDataInterfaceColorCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve RedCurve; // 0x70
	FRichCurve GreenCurve; // 0xf0
	FRichCurve BlueCurve; // 0x170
	FRichCurve AlphaCurve; // 0x1f0
};

struct UDatasmithAssetUserData : UAssetUserData {
	TMap<FName, FString> MetaData; // 0x28
};

struct UGridPathFollowingComponent : UPathFollowingComponent {
	UNavLocalGridManager* GridManager; // 0x260
};

struct ULuminARLightEstimate : UARBasicLightEstimate {
	TArray<float> AmbientIntensityNits; // 0x40
};

struct UMaterialExpressionCurveAtlasRowParameter : UMaterialExpressionScalarParameter {
	UCurveLinearColor* Curve; // 0x60
	UCurveLinearColorAtlas* Atlas; // 0x68
	FExpressionInput InputTime; // 0x70
};

struct USoundNodeParamCrossFade : USoundNodeDistanceCrossFade {
	FName ParamName; // 0x58
};

struct USelfUnionMeshesToolProperties : UInteractiveToolPropertySet {
	bool bAttemptFixHoles; // 0x60
	bool bShowNewBoundaryEdges; // 0x61
	bool bTrimFlaps; // 0x62
	double WindingNumberThreshold; // 0x68
	bool bOnlyUseFirstMeshMaterials; // 0x70
};

struct UGeneralAuctionSellSlot : USGUI {
	FButtonStyle ButtonCheckedStyle; // 0x2d8
	FButtonStyle ButtonUnCheckedStyle; // 0x550
	TSoftObjectPtr<UTexture2D> GeneralQuality[0x6]; // 0x7c8
	UButton* ButtonSelected; // 0x8b8
	UTextBlock* TextBlock_Level; // 0x8c0
	UTextBlock* TextBlock_Name; // 0x8c8
	UTextBlock* TextBlock_Statue; // 0x8d0
	UTextBlock* TextBlock_SpecialType; // 0x8d8
	UTextBlock* TextBlock_Price; // 0x8e0
	UTextBlock* TextBlock_Time; // 0x8e8
	UImage* Image_Quality; // 0x8f0
	TWeakObjectPtr<USGUI> ParentUI; // 0x9d0
};

struct UMaterialExpressionBumpOffset : UMaterialExpression {
	FExpressionInput Coordinate; // 0x40
	FExpressionInput Height; // 0x54
	FExpressionInput HeightRatioInput; // 0x68
	float HeightRatio; // 0x7c
	float ReferencePlane; // 0x80
	uint32_t ConstCoordinate; // 0x84
};

struct UMontageEvent_AnimNotifyState : UAnimNotifyState {
	UAnimMontage* PlayMontage; // 0x30
	EMontageCustomBindType Enum_CustomMontageEvent; // 0x38
	char bStopMontageOnMoving : 1; // 0x39
	char bStopMontageOnPlayerInput : 1; // 0x39
	EAimDirection Enum_AimDirection; // 0x3a
	char bStopMontageOnFighting : 1; // 0x3b
	char bChangeMontageOnFighting : 1; // 0x3b
	float StopBlendTime; // 0x3c
	float StartPosition; // 0x40
	float NotifyLength; // 0x44
};

struct UEditPivotTool : UMultiSelectionTool {
	UEditPivotToolProperties* TransformProps; // 0x98
	UEditPivotToolActionPropertySet* EditPivotActions; // 0xa0
	TArray<FEditPivotTarget> ActiveGizmos; // 0x178
};

struct ASceneEffectManager : AActor {
	float MaxSECheckRange; // 0x310
	char bDeleteNiaActorsRemained : 1; // 0x314
	char bDebugShow : 1; // 0x314
	TArray<FSEInstance> CurLoadedInstances; // 0x318
};

struct USGImageNameTips : UUserWidget {
	UImage* Image; // 0x260
	UTextBlock* Text; // 0x268
};

struct UStereoLayerShapeCylinder : UStereoLayerShape {
	float Radius; // 0x28
	float OverlayArc; // 0x2c
	int32_t Height; // 0x30
};

struct ASGSphereProjectile : ASGProjectile {
	USphereComponent* SphereProjectileCollisionComponent; // 0x6e8
};

struct UNewsClientData_HorseHungry : UNewsClientData {
	FGuid HorseChunkId; // 0x50
};

struct UUI_PlayerShowSlot : UUserWidget {
	UBorder* BGBorder; // 0x260
	UBorder* OutBorder; // 0x268
	UImage* SlotBg; // 0x270
	UImage* AnimIcon; // 0x278
	UImage* SelectedImg; // 0x280
	UImage* LockImg; // 0x288
	TSoftObjectPtr<UTexture2D> NormalBorderIcon; // 0x298
	TSoftObjectPtr<UTexture2D> HorverBorderIcon; // 0x2c0
	TSoftObjectPtr<UTexture2D> SelectedBorderIcon; // 0x2e8
	TSoftObjectPtr<UTexture2D> CommonSlotBGIcon; // 0x310
	TSoftObjectPtr<UTexture2D> CanDropSlotBGIcon; // 0x338
	UN_DraggedItem* DraggedItemClass; // 0x360
	UUI_PlayerShowTips* PlayerShowTipsClass; // 0x368
	UUI_PlayerShowExtraMenu* ExtraMenuWidgetTemplate; // 0x370
	char bCanFocus; // 0x378
	char bPressed : 1; // 0x379
	char IsHover : 1; // 0x379
	char bCanDrag : 1; // 0x379
	char bEquipMode : 1; // 0x379
	char IsRightMouseButtonDown : 1; // 0x379
	char bIsLocked : 1; // 0x379
	TSoftObjectPtr<UTexture2D> AnimIconSoftTexture; // 0x380
	TWeakObjectPtr<UUI_PlayerShowSetting> RootUI; // 0x3a8
	FMulticastInlineDelegate OnPlayerShowSlotPressed; // 0x3b0
	FMulticastInlineDelegate OnPlayerShowSlotReleased; // 0x3c0
};

struct UNiagaraParameterCollection : UObject {
	FName Namespace; // 0x28
	TArray<FNiagaraVariable> Parameters; // 0x30
	UMaterialParameterCollection* SourceMaterialCollection; // 0x40
	UNiagaraParameterCollectionInstance* DefaultInstance; // 0x48
	FGuid CompileId; // 0x50
};

struct UParticleModuleRotation : UParticleModuleRotationBase {
	FRawDistributionFloat StartRotation; // 0x30
};

struct ULandscapeGrassType : UObject {
	TArray<FGrassVariety> GrassVarieties; // 0x28
	char bEnableDensityScaling : 1; // 0x38
	UStaticMesh* GrassMesh; // 0x40
	float GrassDensity; // 0x48
	float PlacementJitter; // 0x4c
	int32_t StartCullDistance; // 0x50
	int32_t EndCullDistance; // 0x54
	bool RandomRotation; // 0x58
	bool AlignToSurface; // 0x59
};

struct USoundNodeEnveloper : USoundNode {
	float LoopStart; // 0x48
	float LoopEnd; // 0x4c
	float DurationAfterLoop; // 0x50
	int32_t LoopCount; // 0x54
	char bLoopIndefinitely : 1; // 0x58
	char bLoop : 1; // 0x58
	UDistributionFloatConstantCurve* VolumeInterpCurve; // 0x60
	UDistributionFloatConstantCurve* PitchInterpCurve; // 0x68
	FRuntimeFloatCurve VolumeCurve; // 0x70
	FRuntimeFloatCurve PitchCurve; // 0xf8
	float PitchMin; // 0x180
	float PitchMax; // 0x184
	float VolumeMin; // 0x188
	float VolumeMax; // 0x18c
};

struct UVariantSet : UObject {
	FText DisplayText; // 0x28
	bool bExpanded; // 0x58
	TArray<UVariant*> Variants; // 0x60
	UTexture2D* Thumbnail; // 0x70
};

struct AWorldSettings : AInfo {
	int32_t VisibilityCellSize; // 0x318
	EVisibilityAggressiveness VisibilityAggressiveness; // 0x31c
	char bPrecomputeVisibility : 1; // 0x31d
	char bPlaceCellsOnlyAlongCameraTracks : 1; // 0x31d
	char bEnableWorldBoundsChecks : 1; // 0x31d
	char bEnableNavigationSystem : 1; // 0x31d
	char bEnableAISystem : 1; // 0x31d
	char bEnableWorldComposition : 1; // 0x31d
	char bUseClientSideLevelStreamingVolumes : 1; // 0x31d
	char bEnableWorldOriginRebasing : 1; // 0x31d
	char bWorldGravitySet : 1; // 0x31e
	char bGlobalGravitySet : 1; // 0x31e
	char bMinimizeBSPSections : 1; // 0x31e
	char bForceNoPrecomputedLighting : 1; // 0x31e
	char bHighPriorityLoading : 1; // 0x31e
	char bHighPriorityLoadingLocal : 1; // 0x31e
	char bOverrideDefaultBroadphaseSettings : 1; // 0x31e
	UNavigationSystemConfig* NavigationSystemConfig; // 0x320
	UNavigationSystemConfig* NavigationSystemConfigOverride; // 0x328
	float WorldToMeters; // 0x330
	float KillZ; // 0x334
	UDamageType* KillZDamageType; // 0x338
	float WorldGravityZ; // 0x340
	float GlobalGravityZ; // 0x344
	ADefaultPhysicsVolume* DefaultPhysicsVolumeClass; // 0x348
	UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x350
	AGameModeBase* DefaultGameMode; // 0x358
	AGameNetworkManager* GameNetworkManagerClass; // 0x360
	int32_t PackedLightAndShadowMapTextureSize; // 0x368
	FVector DefaultColorScale; // 0x36c
	float DefaultMaxDistanceFieldOcclusionDistance; // 0x378
	float GlobalDistanceFieldViewDistance; // 0x37c
	float DynamicIndirectShadowsSelfShadowingIntensity; // 0x380
	FReverbSettings DefaultReverbSettings; // 0x388
	FInteriorSettings DefaultAmbientZoneSettings; // 0x3a8
	float MonoCullingDistance; // 0x3cc
	USoundMix* DefaultBaseSoundMix; // 0x3d0
	float TimeDilation; // 0x3d8
	float MatineeTimeDilation; // 0x3dc
	float DemoPlayTimeDilation; // 0x3e0
	float MinGlobalTimeDilation; // 0x3e4
	float MaxGlobalTimeDilation; // 0x3e8
	float MinUndilatedFrameTime; // 0x3ec
	float MaxUndilatedFrameTime; // 0x3f0
	FBroadphaseSettings BroadphaseSettings; // 0x3f4
	APlayerState* Pauser; // 0x438
	TArray<FNetViewer> ReplicationViewers; // 0x440
	TArray<UAssetUserData*> AssetUserData; // 0x450
	APlayerState* PauserPlayerState; // 0x460
	int32_t MaxNumberOfBookmarks; // 0x468
	UBookmarkBase* DefaultBookmarkClass; // 0x470
	TArray<UBookmarkBase*> BookmarkArray; // 0x478
	UBookmarkBase* LastBookmarkClass; // 0x488
	APostProcessVolume* GlobalPostProcessVolume; // 0x490
};

struct USubUVAnimation : UObject {
	UTexture2D* SubUVTexture; // 0x28
	int32_t SubImages_Horizontal; // 0x30
	int32_t SubImages_Vertical; // 0x34
	ESubUVBoundingVertexCount BoundingMode; // 0x38
	EOpacitySourceMode OpacitySourceMode; // 0x39
	float AlphaThreshold; // 0x3c
};

struct UMaterialExpressionConstant : UMaterialExpression {
	float R; // 0x40
};

struct UStandardSculptBrushOpProps : UMeshSculptBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
};

struct UItemAuctionDealDonePanel : USGUI {
	UVerticalBox* ItemListVerticalBox; // 0x2d8
	UVerticalBox* ItemOrderListVerticalBox; // 0x2e0
	UButton* Button_RefreshBuyList; // 0x2e8
	UButton* Button_RefreshSellList; // 0x2f0
	UItemAuctionDealDoneSlot* ItemAuctionDealDoneSlotClass; // 0x2f8
	TWeakObjectPtr<UUI_GuildAuctionHouse> RootSGUI; // 0x300
};

struct UOccupyPOITips : UMiniMapPOITips {
	UTextBlock* GuildText; // 0x288
	UTextBlock* ProtectionRadius; // 0x290
	UTextBlock* Prestige; // 0x298
	URichTextBlock* ProtectDay; // 0x2a0
	UTextBlock* SearchTimeText; // 0x2a8
};

struct ASGStructureFish : ASGStructureItemContainer {
	float DropInterval; // 0xd68
};

struct UInterpTrackInstVectorProp : UInterpTrackInstProperty {
	FVector ResetVector; // 0x58
};

struct URemeshMeshToolProperties : URemeshProperties {
	int32_t TargetTriangleCount; // 0x70
	ERemeshSmoothingType SmoothingType; // 0x74
	bool bDiscardAttributes; // 0x75
	bool bShowWireframe; // 0x76
	bool bShowGroupColors; // 0x77
	ERemeshType RemeshType; // 0x78
	int32_t RemeshIterations; // 0x7c
	bool bUseTargetEdgeLength; // 0x80
	float TargetEdgeLength; // 0x84
	bool bReproject; // 0x88
};

struct UPubDataManager : UObject {
	UPubCommonField* PubCommonFieldClass; // 0x28
	UPubCommonField* SGPubCommonField; // 0x30
	UPubGuildField* PubGuildFieldClass; // 0x38
	UPubGuildField* SGPubGuildField; // 0x40
	UPubAllianceField* PubAllianceFieldClass; // 0x48
	UPubAllianceField* SGPubAllianceField; // 0x50
};

struct UUI_GuideSkillMastery : USGUI {
	UImage* ImageTwinkleCircular; // 0x2d8
};

struct UTaxSlot : UUserWidget {
	char ShowServerID : 1; // 0x260
	UTextBlock* XianName; // 0x268
	USlider* Slider_Tax; // 0x270
	UTextBlock* TB_taxText; // 0x278
	UButton* Button_Left; // 0x280
	UButton* Button_Right; // 0x288
	UBorder* Border_bg; // 0x290
};

struct AExponentialHeightFog : AInfo {
	UExponentialHeightFogComponent* Component; // 0x310
	char bEnabled : 1; // 0x318
};

struct UGameplayTask_SpawnActor : UGameplayTask {
	FMulticastInlineDelegate Success; // 0x68
	FMulticastInlineDelegate DidNotSpawn; // 0x78
	AActor* ClassToSpawn; // 0xa0
};

struct ULevelNameHUD : UUserWidget {
	UImage* LevelBg; // 0x260
	UTextBlock* LevelText; // 0x268
	UTextBlock* NameText; // 0x270
	UGameHpBar* GameHpBar; // 0x278
	UHorizontalBox* HPProgressHorizontal; // 0x280
	UImage* LevelTooHighImage; // 0x288
	UCanvasPanel* WeaponEffectCanvas; // 0x290
	UWidgetAnimation* WeaponEffect; // 0x298
	FLinearColor WillDeadColor; // 0x2a0
	FLinearColor NormalColor; // 0x2b0
	TWeakObjectPtr<ABaseCharacter> BindCharacter; // 0x2c0
	TSoftObjectPtr<UTexture2D> GeneralSpecialImage[0x4]; // 0x2c8
	FLinearColor FriendColor; // 0x368
	FLinearColor EnemyColor; // 0x378
	FLinearColor NeutralColor; // 0x388
	FLinearColor SelfColor; // 0x398
	UTextBlock* UpName; // 0x3a8
	UCanvasPanel* UpLevelCanvas; // 0x3b0
	UProgressBar* HungerProgressBar; // 0x3b8
	UCanvasPanel* WorkingCanvas; // 0x3c0
	UImage* WorkingProgressFrameRotateE; // 0x3c8
	UCanvasPanel* RemoteVoice; // 0x3d0
	UCanvasPanel* RemoteVoiceProgress; // 0x3d8
	UImage* SexImage; // 0x3e0
	UImage* GeneralImage; // 0x3e8
	TSoftObjectPtr<UTexture2D> HorseCastratedTexture; // 0x3f0
	TSoftObjectPtr<UTexture2D> HorseMaleTexture; // 0x418
	TSoftObjectPtr<UTexture2D> HorseFemaleTexture; // 0x440
	TSoftObjectPtr<UTexture2D> AggressionAggressiveTexture; // 0x468
	TSoftObjectPtr<UTexture2D> AggressionNeutralTexture; // 0x490
	TSoftObjectPtr<UTexture2D> AggressionPassiveTexture; // 0x4b8
	UCanvasPanel* VigilancePanel; // 0x4e0
	UImage* VigilanceBG; // 0x4e8
	UProgressBar* VigilanceProgressBar; // 0x4f0
	UCanvasPanel* VigilanceFullPanel; // 0x4f8
	UImage* VigilanceFullBG; // 0x500
	UTextBlock* VigilanceLevelText; // 0x508
	UImage* VigilanceLevelTooHighImage; // 0x510
	UImage* VigilanceFG; // 0x518
	UWidgetAnimation* VigilanceFullAnim; // 0x520
	TSoftObjectPtr<UTexture2D> GeneralVigilanceBG[0x4]; // 0x528
	FSlateBrush GeneralVigilancePBBrush[0x4]; // 0x5c8
	TSoftObjectPtr<UTexture2D> GeneralVigilanceFullBG[0x4]; // 0x7e8
	TSoftObjectPtr<UTexture2D> GeneralVigilanceFG[0x4]; // 0x888
	UCanvasPanel* HealthParentPanel; // 0x928
	UCanvasPanel* HealthPanel; // 0x930
	UProgressBar* HealthProgressBar; // 0x938
	float RemoteVoiceTime; // 0x940
	char bShowRemoteVoice : 1; // 0x988
	float ShowDeltaTime; // 0x98c
};

struct ALandscapeStreamingProxy : ALandscapeProxy {
	LazyObjectProperty LandscapeActor; // 0x690
};

struct UStaticMeshSocket : UObject {
	FName SocketName; // 0x28
	FVector RelativeLocation; // 0x30
	FRotator RelativeRotation; // 0x3c
	FVector RelativeScale; // 0x48
	FString Tag; // 0x58
};

struct UBTDecorator_IsAtLocation : UBTDecorator_BlackboardBase {
	float AcceptableRadius; // 0x90
	FAIDataProviderFloatValue ParametrizedAcceptableRadius; // 0x98
	FAIDistanceType GeometricDistanceType; // 0xd0
	char bUseParametrizedRadius : 1; // 0xd4
	char bUseNavAgentGoalLocation : 1; // 0xd4
	char bPathFindingBasedTest : 1; // 0xd4
};

struct UWBP_OfficalSessionList_C : UUI_OfficalSessionList {
	UImage* ImgBg; // 0x3b0
	UImage* ImgMapListTitle; // 0x3b8
	UImage* ImgPingMs; // 0x3c0
	UImage* ImgSearchBg; // 0x3c8
	UImage* ImgSearchIcon; // 0x3d0
	UImage* ImgSessionBg; // 0x3d8
	UImage* ImgSessionBorder; // 0x3e0
	UImage* ImgSessionBottomBg; // 0x3e8
	UImage* ImgSessionTopBg; // 0x3f0
};

struct UDatasmithFBXSceneImportData : UDatasmithSceneImportData {
	bool bGenerateLightmapUVs; // 0x28
	FString TexturesDir; // 0x30
	char IntermediateSerialization; // 0x40
	bool bColorizeMaterials; // 0x41
};

struct Alogin_C : ALevelScriptActor {
	FPointerToUberGraphFrame UberGraphFrame; // 0x318
	ACameraActor* CameraActor_0_ExecuteUbergraph_login_RefProperty; // 0x320
};

struct UUI_PlayerShowExtraMenu : UUserWidget {
	UTextBlock* ExtraText; // 0x260
	UButton* ExtraBtn; // 0x268
	TWeakObjectPtr<UUI_PlayerShowSetting> RootUI; // 0x278
};

struct UMovieSceneGeometryCacheSection : UMovieSceneSection {
	FMovieSceneGeometryCacheParams Params; // 0xe8
};

struct USoundNodeSwitch : USoundNode {
	FName IntParameterName; // 0x48
};

struct UStreamableRenderAsset : UObject {
	double ForceMipLevelsToBeResidentTimestamp; // 0x40
	int32_t NumCinematicMipLevels; // 0x48
	int32_t StreamingIndex; // 0x4c
	int32_t CachedCombinedLODBias; // 0x50
	char NeverStream : 1; // 0x54
	char bGlobalForceMipLevelsToBeResident : 1; // 0x54
	char bHasStreamingUpdatePending : 1; // 0x54
	char bForceMiplevelsToBeResident : 1; // 0x54
	char bIgnoreStreamingMipBias : 1; // 0x54
	char bUseCinematicMipLevels : 1; // 0x54
};

struct UMeshAttributePaintToolProperties : UInteractiveToolPropertySet {
	TArray<FName> Attributes; // 0x60
	int32_t SelectedAttribute; // 0x70
	FString AttributeName; // 0x78
};

struct UMovieSceneObjectPropertySection : UMovieSceneSection {
	FMovieSceneObjectPathChannel ObjectChannel; // 0xe8
};

struct UPrivateSessionMODItem : UUserWidget {
	UTextBlock* TbMODName; // 0x260
	UButton* BtnWorkShop; // 0x268
};

struct UUI_TransportHorseItem : UUserWidget {
	FButtonStyle ButtonDisableStyle; // 0x260
	FSlateColor TextDisableColor; // 0x4d8
	FSlateColor TextNormalColor; // 0x500
	FButtonStyle ButtonCheckedStyle; // 0x528
	FButtonStyle ButtonUnCheckedStyle; // 0x7a0
	UProgressBar* SaveTimeProgress; // 0xa18
	UTextBlock* SaveTimeTextBlock; // 0xa20
	UUserWidget* RootUI; // 0xa38
	UUI_TransportMachineHorse* BindTransportMachineHorse; // 0xa40
	UButton* BtSelected; // 0xa48
	UTextBlock* TbNameName; // 0xa50
	UTextBlock* TbLevel; // 0xa58
	UTextBlock* TbStatue; // 0xa60
};

struct AMagicLeapSharedWorldGameMode : AGameMode {
	FMagicLeapSharedWorldSharedData SharedWorldData; // 0x3f8
	FMulticastInlineDelegate OnNewLocalDataFromClients; // 0x408
	float PinSelectionConfidenceThreshold; // 0x418
	AMagicLeapSharedWorldPlayerController* ChosenOne; // 0x4c0
};

struct USlider : UWidget {
	float Value; // 0x108
	FDelegate ValueDelegate; // 0x10c
	float MinValue; // 0x11c
	float MaxValue; // 0x120
	FSliderStyle WidgetStyle; // 0x128
	EOrientation Orientation; // 0x468
	FLinearColor SliderBarColor; // 0x46c
	FLinearColor SliderHandleColor; // 0x47c
	bool IndentHandle; // 0x48c
	bool Locked; // 0x48d
	bool MouseUsesStep; // 0x48e
	bool RequiresControllerLock; // 0x48f
	float StepSize; // 0x490
	bool IsFocusable; // 0x494
	FMulticastInlineDelegate OnMouseCaptureBegin; // 0x498
	FMulticastInlineDelegate OnMouseCaptureEnd; // 0x4a8
	FMulticastInlineDelegate OnControllerCaptureBegin; // 0x4b8
	FMulticastInlineDelegate OnControllerCaptureEnd; // 0x4c8
	FMulticastInlineDelegate OnValueChanged; // 0x4d8
};

struct UMovieScene : UMovieSceneSignedObject {
	TArray<FMovieSceneSpawnable> Spawnables; // 0x50
	TArray<FMovieScenePossessable> Possessables; // 0x60
	TArray<FMovieSceneBinding> ObjectBindings; // 0x70
	TMap<FName, FMovieSceneObjectBindingIDs> BindingGroups; // 0x80
	TArray<UMovieSceneTrack*> MasterTracks; // 0xd0
	UMovieSceneTrack* CameraCutTrack; // 0xe0
	FMovieSceneFrameRange SelectionRange; // 0xe8
	FMovieSceneFrameRange PlaybackRange; // 0xf8
	FFrameRate TickResolution; // 0x108
	FFrameRate DisplayRate; // 0x110
	EMovieSceneEvaluationType EvaluationType; // 0x118
	EUpdateClockSource ClockSource; // 0x119
	FSoftObjectPath CustomClockSourcePath; // 0x120
	TArray<FMovieSceneMarkedFrame> MarkedFrames; // 0x138
};

struct ANavLinkProxy : AActor {
	TArray<FNavigationLink> PointLinks; // 0x320
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x330
	UNavLinkCustomComponent* SmartLinkComp; // 0x340
	bool bSmartLinkIsRelevant; // 0x348
	FMulticastInlineDelegate OnSmartLinkReached; // 0x350
};

struct ADatasmithImportedSequencesActor : AActor {
	TArray<ULevelSequence*> ImportedSequences; // 0x310
};

struct UAllianceRelationSlot : USGUI {
	UImage* GuildImage; // 0x2d8
	UTextBlock* GuildNameText; // 0x2e0
};

struct UBTTask_AnimalBase : UBTTaskNode {
	FString BTTaskDebugName; // 0x70
	float AnglePrecision; // 0x80
	char bUseNavPath : 1; // 0x84
	UNavigationQueryFilter* NavPathFilterClass; // 0x88
	float AcceptableRadiusOnPathEnd; // 0x90
	FVector ProjectedQueryExtent; // 0x94
	float FindNavPathIntervalMin; // 0xa0
	float FindNavPathIntervalMax; // 0xa4
	char bIsWaitTurnToAnglePrecision : 1; // 0xa8
	ASGAnimalAIController* SGAnimalAIOwner; // 0xb0
	float LastFindNavPathTime; // 0xb8
	float FindNavPathInterval; // 0xbc
	FVector LastDesiredLocation; // 0xc0
};

struct ANpcStaticSpawnInfo : ANpcSpawnInfo {
	bool bManualGenerate; // 0x400
	int32_t ManualNpcNum; // 0x404
	int32_t FunctionId; // 0x408
	char bUseAllNPCSpawnDatas : 1; // 0x40c
};

struct ASGGeneralCharacter : ASGCharacter {
	float BelongPlayerCHHPAdd; // 0x11120
	float BelongPlayerAddHPMul; // 0x11124
	float BelongPlayerSkillAddHPMul; // 0x11128
	float MaxTameSpecialMulAdd[0x4]; // 0x1112c
	float MaxTameQualityMulAdd[0x6]; // 0x1113c
	float WildReductionRateSlashing; // 0x11154
	float WildReductionRatePiercing; // 0x11158
	float WildReductionRateCrushing; // 0x1115c
	float WildReductionRateSiege; // 0x11160
	int32_t WildLevel; // 0x11164
	TArray<FGeneralLevelUpConfig> LevelLimitConfig; // 0x11168
	char bShowLevelLimitCondition : 1; // 0x11178
	char bFinishLevelUpLimit : 1; // 0x11178
	UNavigationInvokerComponent* NavigationInvokerComponent; // 0x11180
	ASG_RoadPath* CustomRoadPath; // 0x11188
	int32_t NPCID; // 0x11190
	FString Dec; // 0x11198
	EGeneralsCareer GeneralsCareer; // 0x111a8
	EGeneralsSpecialType GeneralsSpecialType; // 0x111a9
	TMap<EGeneralsCareer, FCareerEquip> GeneralsCareerEquip; // 0x111b0
	UDataTable* SpawnEquipTable; // 0x11200
	char bUseQualityWeight : 1; // 0x11208
	TArray<float> QualityWeight; // 0x11210
	EGeneralsQualityType Quality; // 0x11220
	char bOverrideQuality : 1; // 0x11221
	EGeneralsQualityType OverrideQuality; // 0x11222
	float MinQualityRandomAbility[0x6]; // 0x11224
	float MaxQualityRandomAbility[0x6]; // 0x1123c
	float QualityLevelUpAddSkillPoint[0x6]; // 0x11254
	TWeakObjectPtr<ASGCharacter> TamedFollowActor; // 0x11278
	FString OwnerCharacterName; // 0x11280
	EPrimaryWeaponType Enum_ForceUsePrimaryWeaponType; // 0x11291
	char bForceCheckOffHandItem : 1; // 0x11292
	bool bCanEquipOffHandWep; // 0x11293
	bool bRefreshItemEquip; // 0x11294
	USGToolTipsGeneral* GeneralToolTipWidgetOverride; // 0x11298
	USGToolTipsGeneral* GeneralToolTip; // 0x112a0
	float DeathAddSkillPointRate; // 0x112a8
	float DeathAddSkillPoint; // 0x112ac
	float DeathReduceKillerLifeCountRate; // 0x112b0
	int32_t DeathReduceKillerLifeCount; // 0x112b4
	int32_t CanEatFood; // 0x112b8
	TMap<int32_t, FPerkEatItemArray> PerkEatItemMap; // 0x112c0
	TMap<int32_t, int32_t> LevelUpGetMasteryPoints; // 0x11310
	TArray<int32_t> PerkSkillsLibrary; // 0x11360
	TArray<int32_t> MPerkSkillsLibrary; // 0x11370
	TArray<int32_t> HPerkSkillsLibrary; // 0x11380
	TArray<int32_t> CertainPerkSkillsLibrary; // 0x11390
	TArray<int32_t> CanLearnPerks; // 0x113a0
	TArray<int32_t> MCanLearnPerks; // 0x113b0
	TArray<int32_t> HCanLearnPerks; // 0x113c0
	TArray<int32_t> CanCertainLearnPerks; // 0x113d0
	TMap<int32_t, float> RandomSkillNumWeight; // 0x113e0
	TArray<int32_t> AngryPerkSkillsLibrary; // 0x11430
	TArray<int32_t> AngryPerks; // 0x11440
	TMap<int32_t, float> RandomAngrySkillNumWeight; // 0x11450
	TArray<int32_t> WeakPerkSkillsLibrary; // 0x114a0
	TArray<int32_t> WeakPerks; // 0x114b0
	TMap<int32_t, float> RandomWeakSkillNumWeight; // 0x114c0
	char bCanLearnSkillCheckPerk : 1; // 0x11510
	FGeneralConfig Struct_GeneralConfig; // 0x11518
	FGeneralMeleeConfig Struct_GeneralMeleeConfig; // 0x11578
	FGeneralShooterConfig Struct_GeneralShooterConfig; // 0x115f4
	char bNeedCheckLearnPerkLevel : 1; // 0x11638
	TArray<USGItem*> FavoriteFood; // 0x11640
	TArray<USGItem*> PerkAddFoodItem; // 0x11650
	TArray<USGItem*> FavoriteHPFood; // 0x11660
	TMap<EEnvironmentVolumeType, FEnvironmentEatItemArray> FavoriteEnvironmentFood; // 0x11670
	int32_t CheckTimes; // 0x116c0
	EAIMoveOrderType OldAIMoveOrderType; // 0x116c4
	EAIMoveOrderType Enum_AIMoveOrderType; // 0x116c5
	FVector OldMoveToLocaiton; // 0x116c8
	FRotator OldMoveToRotation; // 0x116d4
	char bHiddenFloatingHUD : 1; // 0x116e0
	char bAutoPick : 1; // 0x116e0
	int32_t bGeneralCanAutoPick; // 0x116e4
	float GeneralGetItemAddLoyaltyMultiAdd; // 0x116e8
	char bCanPeaceTame : 1; // 0x116ec
	TArray<FGeneralPeaceTameRequireItem> PeaceTameItem; // 0x116f0
	FGeneralPeaceTameItem PeaceTameWantItem; // 0x11700
	float loyalty; // 0x1170c
	float AddTameReduceLoyaltyRate; // 0x11710
	float DeathReduceLoyalty; // 0x11714
	float HungerZeroReduceLoyalty; // 0x11718
	float TimeReduceLoyalty; // 0x1171c
	float BlowHungerReduceLoyalty; // 0x11720
	float DelayBelowHungerReduceLoyaltyTime; // 0x11724
	TArray<FGeneralLoyaltyModify> LoyalModify; // 0x11728
	FTimerHandle StartHungerReduceLoyaltyHandle; // 0x11738
	char bHungerReduceLoyalty : 1; // 0x11740
	float WagesLevelRatio; // 0x11744
	float WagesQualityRatio; // 0x11748
	float WagesSpecialRatio; // 0x1174c
	TArray<FGeneralBindUseItem> BindToRackUseItem; // 0x11750
	FVector PrevFormationWorldLocation; // 0x11760
	FVector FormationWorldLocation; // 0x1176c
	FRotator FormationWorldRotation; // 0x11778
	char bCanTalk : 1; // 0x11784
	FText InitAnswerContent; // 0x11788
	TArray<int32_t> NPCTalkSetting; // 0x117a0
	char bIsViewdGeneral : 1; // 0x117b0
	int32_t AssignedLegendId; // 0x117b4
	char bIsTrafficGoodsSeller : 1; // 0x117bc
	GoodsSellerType SellerType; // 0x117bd
	TWeakObjectPtr<ASGStructureHorn> VirtualStructureHorn; // 0x117c0
	FDateTime LockTime; // 0x117c8
	char bReachToggleAIMoveOrder : 1; // 0x117d0
	EAIMoveOrderType Enum_ReachAIMoveOrderType; // 0x117d1
	int32_t Tenacity; // 0x117d4
	char CanResetPos : 1; // 0x117d8
	int32_t ResetPosCoolTime; // 0x117dc
	int32_t ResetPosLastAttackCoolTime; // 0x117e0
	int32_t ResetPosTakeDamageCoolTime; // 0x117e4
	float ResetPosRadius; // 0x117e8
	ASGStructure* BuildStructureClass; // 0x117f0
	FDateTime LastResetPosDate; // 0x117f8
	FDateTime LastWantMakeDamageTime; // 0x11800
	FDateTime LastTakeDamageTime; // 0x11808
};

struct AHUD : AActor {
	APlayerController* PlayerOwner; // 0x310
	char bLostFocusPaused : 1; // 0x318
	char bShowHUD : 1; // 0x318
	char bShowDebugInfo : 1; // 0x318
	int32_t CurrentTargetIndex; // 0x31c
	char bShowHitBoxDebugInfo : 1; // 0x320
	char bShowOverlays : 1; // 0x320
	char bEnableDebugTextShadow : 1; // 0x320
	TArray<AActor*> PostRenderedActors; // 0x328
	TArray<FName> DebugDisplay; // 0x348
	TArray<FName> ToggledDebugCategories; // 0x358
	UCanvas* Canvas; // 0x368
	UCanvas* DebugCanvas; // 0x370
	TArray<FDebugTextInfo> DebugTextList; // 0x378
	AActor* ShowDebugTargetDesiredClass; // 0x388
	AActor* ShowDebugTargetActor; // 0x390
};

struct UAssetExportTask : UObject {
	UObject* Object; // 0x28
	UExporter* Exporter; // 0x30
	FString Filename; // 0x38
	bool bSelected; // 0x48
	bool bReplaceIdentical; // 0x49
	bool bPrompt; // 0x4a
	bool bAutomated; // 0x4b
	bool bUseFileArchive; // 0x4c
	bool bWriteEmptyFiles; // 0x4d
	TArray<UObject*> IgnoreObjectList; // 0x50
	UObject* Options; // 0x60
	TArray<FString> Errors; // 0x68
};

struct UUI_OfficalSessionListRow : UUserWidget {
	TSoftObjectPtr<UTexture2D> NormalRowTexture; // 0x260
	TSoftObjectPtr<UTexture2D> HoverRowTexture; // 0x288
	TSoftObjectPtr<UTexture2D> SelectRowTexture; // 0x2b0
	TMap<int32_t, FLinearColor> PingMsColor; // 0x2d8
	UDataTable* SessionNameDataTable; // 0x328
	UTextBlock* TbSessionName; // 0x330
	UTextBlock* TbPingMS; // 0x338
	UButton* BtnBg; // 0x340
	UImage* ImgBg; // 0x348
	FMulticastInlineDelegate OnOfficalSessionListRowClicked; // 0x350
	int32_t BindServerInfoIndex; // 0x360
	char bHovered : 1; // 0x364
	char bSelected : 1; // 0x364
	char bFavorite : 1; // 0x364
};

struct AGameplayAbilityTargetActor_Trace : AGameplayAbilityTargetActor {
	float MaxRange; // 0x428
	FCollisionProfileName TraceProfile; // 0x42c
	bool bTraceAffectsAimPitch; // 0x434
};

struct UInterpTrackVisibility : UInterpTrack {
	TArray<FVisibilityTrackKey> VisibilityTrack; // 0x70
	char bFireEventsWhenForwards : 1; // 0x80
	char bFireEventsWhenBackwards : 1; // 0x80
	char bFireEventsWhenJumpingForwards : 1; // 0x80
};

struct UNavLinkCustomComponent : UNavRelevantComponent {
	uint32_t NavLinkUserId; // 0xf8
	UNavArea* EnabledAreaClass; // 0x100
	UNavArea* DisabledAreaClass; // 0x108
	FNavAgentSelector SupportedAgents; // 0x110
	FVector LinkRelativeStart; // 0x114
	FVector LinkRelativeEnd; // 0x120
	ENavLinkDirection LinkDirection; // 0x12c
	char bLinkEnabled : 1; // 0x130
	char bNotifyWhenEnabled : 1; // 0x130
	char bNotifyWhenDisabled : 1; // 0x130
	char bCreateBoxObstacle : 1; // 0x130
	FVector ObstacleOffset; // 0x134
	FVector ObstacleExtent; // 0x140
	UNavArea* ObstacleAreaClass; // 0x150
	float BroadcastRadius; // 0x158
	float BroadcastInterval; // 0x15c
	ECollisionChannel BroadcastChannel; // 0x160
};

struct ULuminARCandidateImage : UARCandidateImage {
	bool bUseUnreliablePose; // 0x58
	bool bImageIsStationary; // 0x59
	EMagicLeapImageTargetOrientation AxisOrientation; // 0x5a
};

struct APhysicsConstraintActor : ARigidBodyBase {
	UPhysicsConstraintComponent* ConstraintComp; // 0x310
	AActor* ConstraintActor1; // 0x318
	AActor* ConstraintActor2; // 0x320
	char bDisableCollision : 1; // 0x328
};

struct UGameRecordDataRow : UUserWidget {
	FLinearColor ActiveBGColor; // 0x260
	FLinearColor NormalBGColor; // 0x270
	FLinearColor EnterBGColor; // 0x280
	UBorder* BackGroundBorder; // 0x290
	UEditableTextBox* GameRecordDataNameEditableText; // 0x298
	UTextBlock* GameRecordDataNameTextBlock; // 0x2a0
	char bActive : 1; // 0x2b8
};

struct UArchVisCharMovementComponent : UCharacterMovementComponent {
	FRotator RotationalAcceleration; // 0xb50
	FRotator RotationalDeceleration; // 0xb5c
	FRotator MaxRotationalVelocity; // 0xb68
	float MinPitch; // 0xb74
	float MaxPitch; // 0xb78
	float WalkingFriction; // 0xb7c
	float WalkingSpeed; // 0xb80
	float WalkingAcceleration; // 0xb84
};

struct UN_GiftGuildPanel : USGUI {
	UButton* RefreshButton; // 0x2d8
	UButton* CancelButton; // 0x2e0
	UScrollBox* GuildMembersPanel; // 0x2e8
	UGiftPlayerSlot* GiftPlayerSlotClass; // 0x2f0
	float RequestRefreshIntervalTime; // 0x2f8
	FVector2D WidgetOffset; // 0x2fc
	double LastClickRefreshTime; // 0x308
};

struct AGeometryCacheActor : AActor {
	UGeometryCacheComponent* GeometryCacheComponent; // 0x310
};

struct UDatasmithSkyLightComponentTemplate : UDatasmithObjectTemplate {
	ESkyLightSourceType SourceType; // 0x30
	int32_t CubemapResolution; // 0x34
	UTextureCube* Cubemap; // 0x38
};

struct AIntervalGizmoActor : AGizmoActor {
	UGizmoLineHandleComponent* UpIntervalComponent; // 0x310
	UGizmoLineHandleComponent* DownIntervalComponent; // 0x318
	UGizmoLineHandleComponent* ForwardIntervalComponent; // 0x320
};

struct UDrawPolyPathProperties : UInteractiveToolPropertySet {
	EDrawPolyPathOutputMode OutputType; // 0x60
	EDrawPolyPathWidthMode WidthMode; // 0x64
	float Width; // 0x68
	EDrawPolyPathHeightMode HeightMode; // 0x6c
	float Height; // 0x70
	float RampStartRatio; // 0x74
	bool bSnapToWorldGrid; // 0x78
};

struct AVolumetricCloud : AInfo {
	UVolumetricCloudComponent* VolumetricCloudComponent; // 0x310
};

struct AMagicLeapARPinInfoActor_C : AMagicLeapARPinInfoActorBase {
	FPointerToUberGraphFrame UberGraphFrame; // 0x328
	UStaticMeshComponent* Right; // 0x330
	UStaticMeshComponent* Forward; // 0x338
	UStaticMeshComponent* Up; // 0x340
	USphereComponent* ValidRadiusVisualizer; // 0x348
	USceneComponent* AxisRoot; // 0x350
	USceneComponent* VisualizerRoot; // 0x358
	UTextRenderComponent* TypeValue; // 0x360
	UTextRenderComponent* TransErrValue; // 0x368
	UTextRenderComponent* RotErrValue; // 0x370
	UTextRenderComponent* ConfidenceValue; // 0x378
	UTextRenderComponent* TransErrLabel; // 0x380
	UTextRenderComponent* RotErrLabel; // 0x388
	UTextRenderComponent* ConfidenceLabel; // 0x390
	UTextRenderComponent* PinIDValue; // 0x398
	USceneComponent* InfoRoot; // 0x3a0
	USceneComponent* Root; // 0x3a8
	float RotationSmoothSpeed; // 0x3b0
};

struct UMagicLeapARPinContentBindings : USaveGame {
	TMap<FGuid, FMagicLeapARPinObjectIdList> AllContentBindings; // 0x28
};

struct UNiagaraPreviewAxis_InterpParamFloat : UNiagaraPreviewAxis_InterpParamBase {
	float Min; // 0x38
	float Max; // 0x3c
};

struct UUI_WorldRank : USGUI {
	UVerticalBox* RankListVerticalBox; // 0x2d8
	UVerticalBox* RankVerticalBox; // 0x2e0
	UCanvasPanel* HeaderCanvasPanel; // 0x2e8
	UButton* PrePageButton; // 0x2f0
	UButton* NextPageButton; // 0x2f8
	UTextBlock* ShowPageText; // 0x300
	UButton* Button_this; // 0x308
	UButton* Button_last; // 0x310
	UTextBlock* TextBlock_this; // 0x318
	UTextBlock* TextBlock_last; // 0x320
	UCanvasPanel* CanvasPanel_self; // 0x328
	UTextBlock* TextBlock_rankdate; // 0x330
	UTextBlock* TextBlock_datatime; // 0x338
	UButton* Button_Refresh; // 0x340
	UButton* Button_Reward; // 0x348
	UWorldRankButtonSlot* WorldRankButtonSlotClass; // 0x350
	int32_t NumPerPage; // 0x358
	int32_t ShowMaxNum; // 0x35c
	FLinearColor TextSelectColor; // 0x360
	FLinearColor TextUnSelectColor; // 0x370
	int32_t RefreshInterval; // 0x380
	char UIRankDebug : 1; // 0x384
};

struct UGizmoAxisRotationParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x90
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0xa0
	float Angle; // 0xb0
	FGizmoFloatParameterChange LastChange; // 0xb4
	FVector CurRotationAxis; // 0xbc
	FVector CurRotationOrigin; // 0xc8
	FTransform InitialTransform; // 0xe0
};

struct UNavLinkDefinition : UObject {
	TArray<FNavigationLink> Links; // 0x28
	TArray<FNavigationSegmentLink> SegmentLinks; // 0x38
};

struct UEdgeLoopInsertionTool : USingleSelectionTool {
	UEdgeLoopInsertionProperties* Settings; // 0x98
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0x300
};

struct UImgMediaSource : UBaseMediaSource {
	FFrameRate FrameRateOverride; // 0x88
	FString ProxyOverride; // 0x90
	FDirectoryPath SequencePath; // 0xa0
};

struct ASGStructureOre : ASGStructure {
	TArray<FCurrentOreInfoData> CurrentOreDensityData; // 0xb98
	float ChangeMeshHPPer; // 0xba8
	UStaticMesh* LowHPStaticMesh; // 0xbb0
	float NoOreFactoryDecayMulti; // 0xbb8
	char bNoAnyOre : 1; // 0xbbc
	char bSpawnInClient : 1; // 0xbbc
};

struct AUIWSRiver : AUIWSWaterBody {
	USplineComponent* SplineComp; // 0x6c0
	bool AllowCameraUnder; // 0x6c8
};

struct UAISense_Damage : UAISense {
	TArray<FAIDamageEvent> RegisteredEvents; // 0x80
};

struct UAchievementRewardBuff : UUserWidget {
	UImage* ImgIcon; // 0x260
};

struct USGDestructibleComponent : UDestructibleComponent {
	char bUseExplode : 1; // 0x7c8
	char bUseFrame : 1; // 0x7c8
	UCurveFloat* ExplodeAmountLerpCurve; // 0x7d0
	FVector ExplodeDirection; // 0x7d8
	float ExplodeInterval; // 0x7e4
	char bHasStaticChunk : 1; // 0x7e8
	float InitAngularVelocity; // 0x7ec
	int32_t CustomChunkCount; // 0x7f0
	TArray<double> ChunkStartExplodeTime; // 0x7f8
	int32_t FrameChunkIndex; // 0x808
	FMulticastInlineDelegate OnEndExplode; // 0x810
};

struct UNiagaraDataInterfaceSpline : UNiagaraDataInterface {
	AActor* Source; // 0x38
};

struct ASwitchActor : AActor {
	USceneComponent* SceneComponent; // 0x328
	int32_t LastSelectedOption; // 0x330
};

struct ASGStructureEnergy : ASGStructureFunctionTable {
	float MaxEnergyAmount; // 0xf80
	float PerSceondAdd; // 0xf84
	float ActiveConsumeEnergyPerSecond; // 0xf88
	float CurrentEnergyAmount; // 0xf8c
	FTimerHandle StoreEnergyHandle; // 0xf90
	char bIsUsingEnergy : 1; // 0xf98
	float Power; // 0xf9c
};

struct ASkyAtmosphere : AInfo {
	USkyAtmosphereComponent* SkyAtmosphereComponent; // 0x310
};

struct UStatisticsInfoSlot : UUserWidget {
	FText StatisticsName; // 0x260
	FText StatisticsDesc; // 0x278
	FText StatisticsUnit; // 0x290
	USGToolTipWidget* ToolTipWidgetTemplateOverride; // 0x2a8
	char IsHover : 1; // 0x2b0
	USGUI* RootSGUI; // 0x2b8
};

struct UNewsClientData : UObject {
	FGuid ID; // 0x28
	FString Content; // 0x38
	ENewsType NewsType; // 0x48
};

struct UParticleModuleBeamTarget : UParticleModuleBeamBase {
	Beam2SourceTargetMethod TargetMethod; // 0x30
	FName TargetName; // 0x34
	FRawDistributionVector Target; // 0x40
	char bTargetAbsolute : 1; // 0x88
	char bLockTarget : 1; // 0x88
	Beam2SourceTargetTangentMethod TargetTangentMethod; // 0x8c
	FRawDistributionVector TargetTangent; // 0x90
	char bLockTargetTangent : 1; // 0xd8
	FRawDistributionFloat TargetStrength; // 0xe0
	char bLockTargetStength : 1; // 0x110
	float LockRadius; // 0x114
};

struct UPhysicsSpringComponent : USceneComponent {
	float SpringStiffness; // 0x208
	float SpringDamping; // 0x20c
	float SpringLengthAtRest; // 0x210
	float SpringRadius; // 0x214
	ECollisionChannel SpringChannel; // 0x218
	bool bIgnoreSelf; // 0x219
	float SpringCompression; // 0x21c
};

struct UN_GeneralCampSlot : UUserWidget {
	UImage* ImgIconBorder; // 0x260
	UImage* ImgIcon; // 0x268
	UImage* StatusIcon; // 0x270
	UTextBlock* DesText; // 0x278
	UImage* DesImage; // 0x280
	UCanvasPanel* DesPanel; // 0x288
	UCanvasPanel* NormalPanel; // 0x290
	UBorder* OutBorder; // 0x298
	UImage* CampSlotBg; // 0x2a0
	UImage* PendingImage; // 0x2a8
	UButton* WageButton; // 0x2b0
	bool bShouldHidePendingImage; // 0x2b8
	bool bShouldHideWageButton; // 0x2b9
	FText WarTypeDesText; // 0x2c0
	FText WorkTypeDesText; // 0x2d8
	FText RestTypeDesText; // 0x2f0
	char bIsDesSlot : 1; // 0x308
	EWarType WarType; // 0x309
	TSoftObjectPtr<UTexture2D> WarDesImageTexture2D; // 0x310
	TSoftObjectPtr<UTexture2D> WorkDesImageTexture2D; // 0x338
	TSoftObjectPtr<UTexture2D> RestDesImageTexture2D; // 0x360
	TWeakObjectPtr<ASGGeneralCharacter> BindGeneralChar; // 0x388
	FBaseGeneralChunkData BindGeneralChunkData; // 0x390
	TSoftObjectPtr<UTexture2D> OutBorder_SelectTexture2D; // 0x478
	TSoftObjectPtr<UTexture2D> OutBorder_HoverTexture2D; // 0x4a0
	TSoftObjectPtr<UTexture2D> OutBorder_NormalTexture2D; // 0x4c8
	FMulticastInlineDelegate OnGeneralCampSlotPressed; // 0x4f0
	FMulticastInlineDelegate OnGeneralCampSlotReleased; // 0x500
	FMulticastInlineDelegate OnGeneralCampSlotPressedWage; // 0x510
	FButtonStyle CanGiveWagesImage; // 0x520
	FButtonStyle CantGiveWagesImage; // 0x798
	char IsHover : 1; // 0xa10
	char bPressed : 1; // 0xa10
	TSoftObjectPtr<UTexture2D> WarTypeStatusTexture2D[0xd]; // 0xa18
	TSoftObjectPtr<UTexture2D> DBTypeStatusTexture2D; // 0xc20
	TSoftObjectPtr<UTexture2D> GuildStoreTypeStatusTexture2D; // 0xc48
	TSoftObjectPtr<UTexture2D> WorkTypeStatusTexture2D; // 0xc70
	TSoftObjectPtr<UTexture2D> DeathTypeStatusTexture2D; // 0xc98
	TSoftObjectPtr<UTexture2D> ReborningTypeStatusTexture2D; // 0xcc0
	TSoftObjectPtr<UTexture2D> RestTypeStatusTexture2D; // 0xce8
	TSoftObjectPtr<UTexture2D> UnKnownGeneralTexture2D; // 0xd10
	UImage* QualityBg; // 0xd38
	TSoftObjectPtr<UTexture2D> QualityTexture[0x6]; // 0xd40
	TSoftObjectPtr<UTexture2D> GeneralBorder[0x4]; // 0xe30
};

struct UAppearanceListView : UUserWidget {
	UAppearanceListItem* ItemTempalte; // 0x260
	UButton* BtnLastPage; // 0x278
	UButton* BtnNextPage; // 0x280
	UUniformGridPanel* UGPMain; // 0x288
	UScrollBox* ScrollAppearance; // 0x290
	UTextBlock* TbCurPage; // 0x298
	UTextBlock* TbMaxPage; // 0x2a0
	TArray<FName> ConfigList; // 0x2a8
	ECharacterSex BindSex; // 0x2b8
	TArray<UAppearanceListItem*> ChildItemList; // 0x2c0
	int32_t BindFeature; // 0x2d0
	int32_t CurPage; // 0x2d4
	int32_t MaxPage; // 0x2d8
	float TargetOffset; // 0x2dc
	float MaxScrollOffset; // 0x2e0
	int32_t SelectedIndex; // 0x2e4
};

struct UMaterialExpressionRound : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UTwistKelvinletBrushOpProps : UBaseKelvinletBrushOpProps {
	float Strength; // 0x70
	float Falloff; // 0x74
};

struct UMaterialExpressionVectorParameter : UMaterialExpressionParameter {
	FLinearColor DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x68
	char PrimitiveDataIndex; // 0x69
};

struct UKelvinBrushProperties : UInteractiveToolPropertySet {
	float FalloffDistance; // 0x60
	float Stiffness; // 0x64
	float Incompressiblity; // 0x68
	int32_t BrushSteps; // 0x6c
};

struct UN_QuickHelpPanel : UUserWidget {
	TArray<FHelpKeyButton> AllKeyText; // 0x260
	TArray<FText> QuickText; // 0x270
	UHorizontalBox* QuickHelpPanel; // 0x280
	UN_QuickHelpSlot* QuickHelpSlotTemplate; // 0x288
};

struct UModularSynthComponent : USynthComponent {
	int32_t VoiceCount; // 0x6d0
};

struct UParticleModuleEventGenerator : UParticleModuleEventBase {
	TArray<FParticleEvent_GenerateInfo> Events; // 0x30
};

struct USelfPOITips : UMiniMapPOITips {
	UTextBlock* TbLocation; // 0x288
};

struct UAchievementConditionUint8Widget : UAchievementConditionWidget {
	UCanvasPanel* ProgressCanvas; // 0x288
	UProgressBar* PbProgress; // 0x290
	UTextBlock* TbProgress; // 0x298
	UTextBlock* TbTotalProgress; // 0x2a0
};

struct UProceduralBoxToolProperties : UProceduralRectangleToolProperties {
	float Height; // 0x80
	int32_t HeightSubdivisions; // 0x84
};

struct USGLegendGeneral : UObject {
	FText Title; // 0x28
	FText Name; // 0x40
	FText GeneralDesc; // 0x58
	FText SkillDesc; // 0x70
	FText FunctionDesc; // 0x88
	FText AssignDesc; // 0xa0
	USkeletalMesh* Mesh; // 0xb8
	TArray<int32_t> PerkSkills; // 0xc0
	TArray<USGItem*> RequiredTokenItems; // 0xd0
	int32_t RequiredLevel; // 0xe0
	EGeneralsQualityType RequiredQulityType; // 0xe4
	TArray<FRequiredGeneralSkillType> RequiredSkillTypeEntries; // 0xe8
};

struct UGuildMemberSlot : USGUI {
	UTextBlock* NameText; // 0x2d8
	UTextBlock* LevelText; // 0x2e0
	UTextBlock* TitleText; // 0x2e8
	UTextBlock* GongXunText; // 0x2f0
	UTextBlock* OfficialJobText; // 0x2f8
	UTextBlock* CustomGroupText; // 0x300
	UTextBlock* DKPText; // 0x308
	UTextBlock* OnlineStatusText; // 0x310
	UDataButton* OnlineStatusDataButton; // 0x318
	UGuildAuthorityComboBox* OfficialJobComboBox; // 0x320
	UGuildAuthorityComboBox* TitleComboBox; // 0x328
	UGuildAuthorityComboBox* CustomGroupComboBox; // 0x330
	UDataButton* KickOutDataButton; // 0x338
	UImage* BGImage; // 0x340
	TSoftObjectPtr<UTexture2D> NormalBGTexture; // 0x348
	TSoftObjectPtr<UTexture2D> SelectBGTexture; // 0x370
	USGToolTipWidget* ButtonTipWidgetTemplate; // 0x398
};

struct UNiagaraDataInterfaceArrayFloat : UNiagaraDataInterfaceArray {
	TArray<float> FloatData; // 0x50
};

struct UBTDecorator_BlueprintBase : UBTDecorator {
	AAIController* AIOwner; // 0x68
	AActor* ActorOwner; // 0x70
	TArray<FName> ObservedKeyNames; // 0x78
	char bShowPropertyDetails : 1; // 0x98
	char bCheckConditionOnlyBlackBoardChanges : 1; // 0x98
	char bIsObservingBB : 1; // 0x98
};

struct UUVProjectionTool : UMultiSelectionTool {
	UUVProjectionToolProperties* BasicProperties; // 0x90
	UUVProjectionAdvancedProperties* AdvancedProperties; // 0x98
	UExistingMeshMaterialProperties* MaterialSettings; // 0xa0
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xa8
	UMaterialInstanceDynamic* CheckerMaterial; // 0xb8
	TArray<UTransformGizmo*> TransformGizmos; // 0xc0
	TArray<UTransformProxy*> TransformProxies; // 0xd0
};

struct ASGNiagaraActor : AActor {
	float OverlapTraceRaduis; // 0x328
	USceneComponent* RootComp; // 0x330
	UNiagaraComponent* NiagaraComponent; // 0x338
	UBoxComponent* BoxComponent; // 0x340
	char bCheckResourceParam : 1; // 0x348
	float ResourceParam; // 0x34c
	char bUnloadDestroy : 1; // 0x351
	int32_t InitQuantity; // 0x358
	char bSetQuantity : 1; // 0x35c
	int32_t MinQuantity; // 0x360
	int32_t MaxQuantity; // 0x364
	char bRespawnSelf : 1; // 0x368
	float RespawnTime; // 0x36c
	AActor* CreatureActorClass; // 0x378
	char bUseDropId : 1; // 0x380
	int32_t DropCount; // 0x384
	int32_t DropWrapperId; // 0x388
	char bAddHuntingExp : 1; // 0x38c
	double AddHuntingExp; // 0x390
	UStaticMesh* CreatureStaticMesh; // 0x398
	FName Socket_StaticMesh; // 0x3a0
	FVector MeshLocation; // 0x3a8
	FRotator MeshRotation; // 0x3b4
	FVector MeshScale; // 0x3c0
	USkeletalMesh* CreatureSkeletalMesh; // 0x3d0
	TWeakObjectPtr<AMeleeWeapon> CachedMeleeWeapon; // 0x3d8
	char bAllMeleeWeapon : 1; // 0x3e0
	ENiagaraWeaponType UsableWeaponType; // 0x3e1
	bool bMeleeTraceHit; // 0x3e2
	char bHarvestAll : 1; // 0x3e3
	char bRunawayDestroy : 1; // 0x3e3
	float RunawayDestroySeconds; // 0x3e4
	char bDebugShow : 1; // 0x3f0
	float DrawRaduis; // 0x3f4
	float DrawTime; // 0x3f8
	float MeleeTraceTimeOut; // 0x3fc
	char bMeleeAttack : 1; // 0x401
	char bProjectileAttack : 1; // 0x401
	float MinExploitInterval; // 0x404
	char bWithFoliage : 1; // 0x408
	float MaxFoliageWith; // 0x40c
};

struct UGameplayAbilitySet : UDataAsset {
	TArray<FGameplayAbilityBindInfo> Abilities; // 0x30
};

struct UStableTrainerPanel : UUserWidget {
	UStableTrainerSlot* StableTrainerSlotTemplate; // 0x260
	UUserWidget* EmptySlotTemplate; // 0x268
	int32_t PageMaxNum; // 0x270
	UButton* LastPageBtn; // 0x278
	UTextBlock* CurPageText; // 0x280
	UTextBlock* MaxPageText; // 0x288
	UButton* NextPageBtn; // 0x290
	UTextBlock* NumText; // 0x298
	UVerticalBox* SlotVerticalBox; // 0x2a0
};

struct UUIWSGerstnerWaterWaveGeneratorSimple : UUIWSGerstnerWaterWaveGeneratorBase {
	int32_t NumWaves; // 0x28
	int32_t Seed; // 0x2c
	float Randomness; // 0x30
	float MinWavelength; // 0x34
	float MaxWavelength; // 0x38
	float WavelengthFalloff; // 0x3c
	float MinAmplitude; // 0x40
	float MaxAmplitude; // 0x44
	float AmplitudeFalloff; // 0x48
	float WindAngleDeg; // 0x4c
	float DirectionAngularSpreadDeg; // 0x50
	float SmallWaveSteepness; // 0x54
	float LargeWaveSteepness; // 0x58
	float SteepnessFalloff; // 0x5c
};

struct UAxisPositionGizmo : UInteractiveGizmo {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoFloatParameterSource> ParameterSource; // 0x58
	TScriptInterface<IGizmoClickTarget> HitTarget; // 0x68
	TScriptInterface<IGizmoStateTarget> StateTarget; // 0x78
	bool bEnableSignedAxis; // 0x88
	bool bInInteraction; // 0x89
	FVector InteractionOrigin; // 0x8c
	FVector InteractionAxis; // 0x98
	FVector InteractionStartPoint; // 0xa4
	FVector InteractionCurPoint; // 0xb0
	float InteractionStartParameter; // 0xbc
	float InteractionCurParameter; // 0xc0
	float ParameterSign; // 0xc4
};

struct UBTTask_SGBlueprintBase : UBTTask_BlueprintBase {
	TWeakObjectPtr<ASG_AIController> SG_AIController; // 0xa8
	TWeakObjectPtr<ASGGeneralAIController> SG_GeneralAIController; // 0xb0
	TWeakObjectPtr<ASGGeneralCharacter> SG_GeneralCharacter; // 0xb8
};

struct UAtmosphericFogComponent : USceneComponent {
	float SunMultiplier; // 0x208
	float FogMultiplier; // 0x20c
	float DensityMultiplier; // 0x210
	float DensityOffset; // 0x214
	float DistanceScale; // 0x218
	float AltitudeScale; // 0x21c
	float DistanceOffset; // 0x220
	float GroundOffset; // 0x224
	float startDistance; // 0x228
	float SunDiscScale; // 0x22c
	float DefaultBrightness; // 0x230
	FColor DefaultLightColor; // 0x234
	char bDisableSunDisk : 1; // 0x238
	char bAtmosphereAffectsSunIlluminance : 1; // 0x238
	char bDisableGroundScattering : 1; // 0x238
	FAtmospherePrecomputeParameters PrecomputeParams; // 0x23c
	UTexture2D* TransmittanceTexture; // 0x268
	UTexture2D* IrradianceTexture; // 0x270
};

struct UInvalidationBox : UContentWidget {
	bool bCanCache; // 0x120
	bool CacheRelativeTransforms; // 0x121
};

struct UPaperTileMapComponent : UMeshComponent {
	int32_t MapWidth; // 0x4b0
	int32_t MapHeight; // 0x4b4
	int32_t TileWidth; // 0x4b8
	int32_t TileHeight; // 0x4bc
	UPaperTileSet* DefaultLayerTileSet; // 0x4c0
	UMaterialInterface* Material; // 0x4c8
	TArray<UPaperTileLayer*> TileLayers; // 0x4d0
	FLinearColor TileMapColor; // 0x4e0
	int32_t UseSingleLayerIndex; // 0x4f0
	bool bUseSingleLayer; // 0x4f4
	UPaperTileMap* TileMap; // 0x4f8
};

struct UTransformInputsToolProperties : UInteractiveToolPropertySet {
	bool bShowTransformUI; // 0x60
	bool bSnapToWorldGrid; // 0x61
};

struct UNiagaraDataInterfaceRenderTarget2DArray : UNiagaraDataInterfaceRWBase {
	FIntVector Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe4
	char bOverrideFormat : 1; // 0xe5
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTarget2DArray*> ManagedRenderTargets; // 0x108
};

struct USubmixEffectFlexiverbPreset : USoundEffectSubmixPreset {
	FSubmixEffectFlexiverbSettings Settings; // 0xa0
};

struct UBrushBuilder : UObject {
	FString BitmapFilename; // 0x28
	FString ToolTip; // 0x38
	char NotifyBadParams : 1; // 0x48
	TArray<FVector> Vertices; // 0x50
	TArray<FBuilderPoly> Polys; // 0x60
	FName Layer; // 0x70
	char MergeCoplanars : 1; // 0x78
};

struct UAccomplishAchievementAnimationNotifyWidget : UAnimationNotifyWidget {
	UWidgetAnimation* AccomplishNotifyAnim; // 0x278
	UWidgetAnimation* RotateAnim; // 0x280
	UImage* ImgAchievement; // 0x288
	UTextBlock* TbAchievement; // 0x290
};

struct ULogicReplicationGraph : UReplicationGraph {
	TArray<UObject*> SpatializedClasses; // 0x4a8
	TArray<UObject*> NonSpatializedChildClasses; // 0x4b8
	TArray<UObject*> AlwaysRelevantClasses; // 0x4c8
	UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x4d8
	UReplicationGraphNode_GridSpatialization2D* GridNodeDormancy; // 0x4e0
	UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4e8
	UReplicationGraphNode_DormancyNode* AlwaysRelevantDormancyNode; // 0x4f0
};

struct UMiniMapPOI : UUserWidget {
	EMapPOIType POIType; // 0x260
	int32_t POIPriority; // 0x264
	int32_t POIGroupIndex; // 0x268
	char bNeedUpdateSize : 1; // 0x26c
	FName HitOvodusButtonName; // 0x270
	UTexture2D* AdvancedHitTexture; // 0x278
	TSoftObjectPtr<UTexture2D> InMiniMapTexture; // 0x280
	FLinearColor InMiniMapColor; // 0x2a8
	char bShowOutOfMiniMap : 1; // 0x2b8
	TSoftObjectPtr<UTexture2D> OutOfMiniMapTexture; // 0x2c0
	FLinearColor OutOfMiniMapColor; // 0x2e8
	char bShowTips : 1; // 0x2f8
	USGToolTipWidget* TipsTemplate; // 0x300
	FVector LastOwnerLocation; // 0x310
	FRotator LastOwnerRotation; // 0x31c
	char bIsOut : 1; // 0x328
	UCanvasPanelSlot* MyCanvasSlot; // 0x330
	float TargetOpacity; // 0x338
	FMulticastInlineDelegate OnMiniMapPOIMouseDown; // 0x348
	FMulticastInlineDelegate OnMiniMapPOIMouseUp; // 0x358
	UImage* TheImage; // 0x370
	UOverlay* MainOverlay; // 0x378
};

struct UAlliancePowerGroupSlot : USGUI {
	UImage* OfficialSealImage; // 0x2d8
	UCanvasPanel* OfficialCanvasPanel; // 0x2e0
	UCanvasPanel* ChildOfficialCanvasPanel; // 0x2e8
	UCanvasPanel* MainCanvasPanel; // 0x2f0
	UAlliancePowerSlot* AlliancePowerSlotClass; // 0x2f8
	float SlotWidth; // 0x300
	float SlotDistance; // 0x304
	UAlliancePowerSlot* ChildAlliancePowerSlotClass; // 0x308
	float ChildSlotWidth; // 0x310
	float ChildSlotDistance; // 0x314
	float ChildSlotOffsetY; // 0x318
	UUserWidget* RelationLineBgClass; // 0x320
	float ParentVerticalLineLen; // 0x328
	float ChildVerticalLineLen; // 0x32c
	float RelationLineWidth; // 0x330
};

struct UDistributionVectorParameterBase : UDistributionVectorConstant {
	FName ParameterName; // 0x50
	FVector MinInput; // 0x58
	FVector MaxInput; // 0x64
	FVector MinOutput; // 0x70
	FVector MaxOutput; // 0x7c
	DistributionParamMode ParamModes[0x3]; // 0x88
};

struct USoundfieldEffectBase : UObject {
	USoundfieldEffectSettingsBase* Settings; // 0x28
};

struct UInAppPurchaseComponent : UActorComponent {
	FMulticastInlineDelegate InAppPurchaseLogMessage; // 0xc0
	FMulticastInlineDelegate GetItemsDetailsSuccess; // 0xd0
	FMulticastInlineDelegate GetItemsDetailsFailure; // 0xe0
	FMulticastInlineDelegate PurchaseConfirmationSuccess; // 0xf0
	FMulticastInlineDelegate PurchaseConfirmationFailure; // 0x100
	FMulticastInlineDelegate GetPurchaseHistorySuccess; // 0x110
	FMulticastInlineDelegate GetPurchaseHistoryFailure; // 0x120
};

struct UGranularSynth : USynthComponent {
	USoundWave* GranulatedSoundWave; // 0x6d0
};

struct AWaterBodyExclusionVolume : APhysicsVolume {
	bool bIgnoreAllOverlappingWaterBodies; // 0x358
	TArray<AWaterBody*> WaterBodiesToIgnore; // 0x360
};

struct UReplicationGraphNode : UObject {
	TArray<UReplicationGraphNode*> AllChildNodes; // 0x28
};

struct UCheatManager : UObject {
	ADebugCameraController* DebugCameraControllerRef; // 0x28
	ADebugCameraController* DebugCameraControllerClass; // 0x30
};

struct UGeneralAddSkillExpPanel : UUserWidget {
	UConditionPanel* ParentUI; // 0x260
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x268
	int32_t MaxCanLevelUpLevel; // 0x270
	ESkillType SkillType; // 0x274
	UButton* BtnClose; // 0x278
	UButton* BtnConfirm; // 0x280
	UButton* BtnAddLevel; // 0x288
	UButton* BtnReduceLevel; // 0x290
	USlider* AddLevelSlider; // 0x298
	UProgressBar* PbSkill; // 0x2a0
	UTextBlock* TbPublicExp; // 0x2a8
	UEditableText* EtbSkillLevel; // 0x2b0
	UTextBlock* TbNotEnoughExp; // 0x2b8
	UTextBlock* TbExp; // 0x2c0
	int32_t CurSkillLevel; // 0x2c8
	double UseExp; // 0x2d0
	int32_t LastInputSkill; // 0x2d8
};

struct UMeshSelectionSet : USelectionSet {
	TArray<int32_t> Vertices; // 0x40
	TArray<int32_t> Edges; // 0x50
	TArray<int32_t> Faces; // 0x60
	TArray<int32_t> Groups; // 0x70
};

struct UObjectLibrary : UObject {
	UObject* ObjectBaseClass; // 0x28
	bool bHasBlueprintClasses; // 0x30
	TArray<UObject*> Objects; // 0x38
	TArray<TWeakObjectPtr<UObject>> WeakObjects; // 0x48
	bool bUseWeakReferences; // 0x58
	bool bIsFullyLoaded; // 0x59
};

struct UUI_ProducerList : USGUI {
	UImage* Image_Mirror; // 0x2d8
	UButton* Button_Acc; // 0x2e0
	UButton* Button_Pause; // 0x2e8
	UButton* Button_Esc; // 0x2f0
	UScrollBox* MainScrollBox; // 0x2f8
	FButtonStyle PlayButtonStyle; // 0x300
	FButtonStyle PasuseButtonStyle; // 0x578
	FButtonStyle Speed1ButtonStyle; // 0x7f0
	FButtonStyle Speed2ButtonStyle; // 0xa68
	FButtonStyle Speed3ButtonStyle; // 0xce0
	float ScrollSpeedLow; // 0xf60
	float ScrollSpeedMid; // 0xf64
	float ScrollSpeedHigh; // 0xf68
};

struct UNPCSoundData : USGSoundDatabase {
	FName PatrolSound; // 0x88
	FName AggroSound; // 0x90
	FName FleeSound; // 0x98
	FName KillPlayerOrGeneralSound; // 0xa0
	FName StunSound; // 0xa8
	TArray<FName> WeaponEffectSound; // 0xb0
	TMap<EGeneralShortCutSlotType, FName> ResponseSound; // 0xc0
	FName StartRescuePlayerSound; // 0x110
	FName ReliveSound; // 0x118
};

struct UWBP_ModsManage_C : UUI_ModsManageBase {
	UImage* Image; // 0x2e8
	UImage* Image_31; // 0x2f0
	UImage* Image_139; // 0x2f8
};

struct UDeviceProfileManager : UObject {
	TArray<UObject*> Profiles; // 0x28
};

struct USingleClickInputBehavior : UAnyButtonInputBehavior {
	bool HitTestOnRelease; // 0xc0
};

struct UNiagaraDataInterfaceCurve : UNiagaraDataInterfaceCurveBase {
	FRichCurve Curve; // 0x70
};

struct UUI_ReSpawn : USGUI {
	float GetSpawnLocationInterval; // 0x2d8
	USlotRespawnButton* RespawnButtonTemplate; // 0x2e0
	URespawnPointGroup* GroupRespawnPointTemplate; // 0x2e8
	UNoviceRespawnPanel* NoviceRespawnPanelTemplate; // 0x2f0
	USGMiniMap* MiniMap; // 0x2f8
	UUniformGridPanel* UGPRespawnButton; // 0x300
	UEditableText* EtbSearch; // 0x308
	UTextBlock* TbRespawnName; // 0x310
	UButton* RespawnButton; // 0x318
	UCanvasPanel* RespawnTextPanel; // 0x320
	UButton* TravelButton; // 0x328
	UNoviceRespawnPanel* NoviceRespawnPanel; // 0x330
	int32_t TravalBedID; // 0x360
	char bFirstOpenRespawnUI : 1; // 0x364
};

struct UWeatherControlComponent : UActorComponent {
	FString DescriptionID; // 0xc0
	int32_t Priority; // 0xd0
	float ComponentSwitchTime; // 0xd4
	FWeatherInfo WeatherInfos[0x10]; // 0xd8
	FWeatherRepInfo NatureRepInfo; // 0xe58
	EWeatherType CurrentWeatherType; // 0xe68
	ANatureController* NatureController; // 0xf20
};

struct UWBP_ControlSystemSetting_C : UUI_SystemSettingPanel {
	UWBP_SystemSettingCheckBox_C* bAlwaysUseRiderBattleMode; // 0x290
	UWBP_SystemSettingCheckBox_C* bEnableCollectionAttack; // 0x298
	UWBP_SystemSettingCheckBox_C* bInvertMouseX; // 0x2a0
	UWBP_SystemSettingCheckBox_C* bInvertMouseY; // 0x2a8
	UWBP_MouseSensitivitySettingSliderItem_C* MouseSensitivity; // 0x2b0
	UImage* TitleImage; // 0x2b8
};

struct UPlanarReflectionComponent : USceneCaptureComponent {
	UBoxComponent* PreviewBox; // 0x2c8
	float NormalDistortionStrength; // 0x2d0
	float PrefilterRoughness; // 0x2d4
	float PrefilterRoughnessDistance; // 0x2d8
	int32_t ScreenPercentage; // 0x2dc
	float ExtraFOV; // 0x2e0
	float DistanceFromPlaneFadeStart; // 0x2e4
	float DistanceFromPlaneFadeEnd; // 0x2e8
	float DistanceFromPlaneFadeoutStart; // 0x2ec
	float DistanceFromPlaneFadeoutEnd; // 0x2f0
	float AngleFromPlaneFadeStart; // 0x2f4
	float AngleFromPlaneFadeEnd; // 0x2f8
	bool bShowPreviewPlane; // 0x2fc
	bool bRenderSceneTwoSided; // 0x2fd
};

struct UGeometryCache : UObject {
	TArray<UMaterialInterface*> Materials; // 0x30
	TArray<UGeometryCacheTrack*> Tracks; // 0x40
	int32_t StartFrame; // 0x60
	int32_t EndFrame; // 0x64
};

struct UWidgetBlueprintGeneratedClass : UBlueprintGeneratedClass {
	UWidgetTree* WidgetTree; // 0x328
	char bClassRequiresNativeTick : 1; // 0x330
	TArray<FDelegateRuntimeBinding> Bindings; // 0x338
	TArray<UWidgetAnimation*> Animations; // 0x348
	TArray<FName> NamedSlots; // 0x358
};

struct ULevelSequenceAnimSequenceLink : UAssetUserData {
	TArray<FLevelSequenceAnimSequenceLinkItem> AnimSequenceLinks; // 0x28
};

struct UEnvQueryTest_Distance : UEnvQueryTest {
	EEnvTestDistance TestMode; // 0x1f8
	UEnvQueryContext* DistanceTo; // 0x200
};

struct UMoveSeatingInfoHUD : UActorInfoHUD {
	TWeakObjectPtr<ASG_MoveSeatingCharacter> BindMoveSeat; // 0x278
	UCanvasPanel* RepairCanvas; // 0x280
	UTextBlock* RepairText; // 0x288
	UTextBlock* NameText; // 0x290
	UVerticalBox* InfoVerticalBox; // 0x298
	UVerticalBox* RepairVerticalBox; // 0x2a0
	UStructureInfoHUDSlot* HPText; // 0x2a8
	UStructureInfoHUDSlot* GuildText; // 0x2b0
	UStructureInfoHUDSlot* OwnerText; // 0x2b8
	UStructureInfoHUDSlot* SkillText; // 0x2c0
	UStructureInfoHUDSlot* AuthorityText; // 0x2c8
	UStructureInfoHUDSlot* TenacityText; // 0x2d0
	UStructureInfoHUDSlot* DecayText; // 0x2d8
	TArray<UStructureInfoHUDSlot*> RepairTextList; // 0x2e0
	FLinearColor FriendColor; // 0x2f0
	FLinearColor NeutralColor; // 0x300
	FLinearColor EnemyColor; // 0x310
	UStructureInfoHUDSlot* StructureInfoHUDSlot; // 0x320
	FLinearColor DecayColor; // 0x328
};

struct ASGStructureTurret : ASGStructureSeat {
	USkeletalMeshComponent* SkeletalMesh; // 0xf70
	USGAudioComponent* LoopFireAudio; // 0xf78
	ESiegeType SiegeType; // 0xf80
	float TurnRotaionMulti; // 0xf84
	float TPVCameraPitchMin; // 0xf88
	float TPVCameraPitchMax; // 0xf8c
	float TPVCameraYawMin; // 0xf90
	float TPVCameraYawMax; // 0xf94
	char bDrawDebugRotate : 1; // 0xf98
	char bDrawChargeDebug : 1; // 0xf98
	double LastServerUpdateSent; // 0xfa0
	float WantYawViewRotation; // 0xfa8
	float WantPitchViewRotation; // 0xfac
	float YawViewRotation; // 0xfb0
	float PitchViewRotation; // 0xfb4
	float LocalViewYaw; // 0xfb8
	float LocalViewPitch; // 0xfbc
	FName LoopFireSoundID; // 0xfc0
	ETurretFireMode FireMode; // 0xfc8
	float ProjectileFireDelayTime; // 0xfcc
	FTimerHandle ProjectileFireDelayTimerHandle; // 0xfd0
	float ProjectileRange; // 0xfd8
	float ChangedGravityProjectileRangeMulti; // 0xfdc
	int32_t FireStageMaxNum; // 0xfe0
	TArray<float> PerStageVelocityMul; // 0xfe8
	char bFireNeedAmmo : 1; // 0xff8
	int32_t MaxAmmo; // 0xffc
	char bReloadMustdReloadMaxAmmo : 1; // 0x1000
	int32_t PerAmmoSpawnProjectileAmount; // 0x1004
	int32_t CurrentAmmo; // 0x1008
	int32_t AmmoPiercenessOverride; // 0x100c
	char bSpawnProjectile : 1; // 0x1010
	char bReloadActionSpawnProjectile : 1; // 0x1010
	TArray<FName> ProjectileSocketName; // 0x1018
	TArray<ASGProjectile*> Projectile; // 0x1028
	TWeakObjectPtr<ASGProjectile> LastProjectile; // 0x1038
	USGItem* DefaultAmmoItemTemplate; // 0x1040
	USGItem* CurrentAmmoItemTemplate; // 0x1048
	TArray<USGItem*> AllAmmoItemTemplates; // 0x1050
	USGItem* FreeAmmoForNPC; // 0x1060
	char bRecordNetPlayFireLocation : 1; // 0x1068
	FVector NetPlayFireLocation; // 0x106c
	FRotator NetPlayFireRotation; // 0x1078
	char FireAllAmmo : 1; // 0x1084
	float NeedReloadTime; // 0x1088
	float MinStoreFreeVelocityMul; // 0x108c
	float MaxStoreFreeVelocityMul; // 0x1090
	float CurrentStoringTime; // 0x1094
	char bSpawnFireParticle : 1; // 0x1098
	char bCreateParticleWhenPress : 1; // 0x1098
	UParticleSystem* FireParticleSystem; // 0x10a0
	char bCanNpcAIControl : 1; // 0x10b0
	char bNeedNpcActiveAI : 1; // 0x10b0
	char bAIControlSwitch : 1; // 0x10b0
	char bAttackHostileUntamed : 1; // 0x10b0
	char bAttackUnhostileUntamed : 1; // 0x10b1
	char bAttackPlayerUints : 1; // 0x10b1
	char bAttackPlayer : 1; // 0x10b1
	char bAttackStructures : 1; // 0x10b1
	ETurretAIAttackRangeMode AIAttackRangeMode; // 0x10b2
	int32_t SightCheckTurretBodyRadius; // 0x10b4
	int32_t SightCheckRadiusMin; // 0x10b8
	int32_t SightCheckRadiusMidddle; // 0x10bc
	int32_t SightCheckRadiusMax; // 0x10c0
	char NpcAIControlEnterWoking : 1; // 0x10c4
	char PlayerControlEnterWoking : 1; // 0x10c4
	TArray<ABaseCharacter*> AllowNpcControlClass; // 0x10c8
	char bShowAIDebug : 1; // 0x10d8
	char bDebugTraceProjectile : 1; // 0x10d8
	float AttackHoldTime; // 0x10dc
	float AttackWaitTime; // 0x10e0
	float LockTargetTime; // 0x10e4
	float MaxLockTargetTime; // 0x10e8
	float RotateTickInterval; // 0x10f4
	float TurretTurnSpeed; // 0x10f8
	float TurretPitchTurnSpeed; // 0x10fc
	float TurretYawTolerance; // 0x1100
	float TurretPitchTolerance; // 0x1104
	FName AimBoneName; // 0x1108
	char bAIAttackTargetBehindWall : 1; // 0x1110
	float AIUseFollowProjectileRatio; // 0x1114
	UParticleSystem* FollowProjectileParticleSystem; // 0x1118
	FName FollowProjectileParticleSocket; // 0x1120
	float ProjectileParticleLengthRatio; // 0x1128
	char LoadAmmoWithoutTarget : 1; // 0x112c
	char bHideControlNPCByBox : 1; // 0x112c
	FName HideControlNPCBoxTag; // 0x1130
	float AIMustHitInterval; // 0x1138
	FDateTime LastAIMustHitTime; // 0x1140
	char bIsFireOilJar : 1; // 0x1148
	FVector TriggerBoxScale; // 0x114c
	FVector TriggerBoxOffset; // 0x1158
	float DefaultTraceHeight; // 0x1164
	UBoxComponent* FireOilJarBoxComp; // 0x1168
	TWeakObjectPtr<AActor> EnemyActor; // 0x1194
	TArray<TWeakObjectPtr<AActor>> EnemyPlayers; // 0x11a0
	TArray<TWeakObjectPtr<AActor>> EnemyGenerals; // 0x11b0
	TArray<TWeakObjectPtr<AActor>> EnemyStructures; // 0x11c0
	TArray<TWeakObjectPtr<AActor>> EnemyHorses; // 0x11d0
	TArray<TWeakObjectPtr<AActor>> EnemyAnimals; // 0x11e0
	float DelayStartAITime; // 0x11f4
	int32_t AttackedTargetRecordNumLimit; // 0x1200
	char bEnableAIAttackLog : 1; // 0x1204
	TArray<FAIAttackedTargetInfo> AttackedTargetsInfoArray; // 0x1208
	char bUseLaserProjectile; // 0x1220
	char bBattlePlatNeedEnemyFire : 1; // 0x1248
	char bPlayerAutoAttackCheckNeedEnemyFire : 1; // 0x1248
	char bCanotSetAttackRange : 1; // 0x1248
	char bSupportPlayerAutoAttack : 1; // 0x1248
	char bPlayerAutoAttackSwitch : 1; // 0x1248
	char bPlayerFireCameraFree : 1; // 0x1248
	float FireCameraArmLength; // 0x124c
	FVector FireCameraOffset; // 0x1250
	TArray<TWeakObjectPtr<AActor>> BattlePlatEnemyCheckAllTargets; // 0x1260
	float ControllerWeaponAttackRadiusExtra; // 0x1270
	float ControllerWeaponAttackAngle; // 0x1274
	double LastSendControllerRotationTime; // 0x1278
	char IsCheckTraceForDamage : 1; // 0x1280
	char IsCheckInWaterForAttack : 1; // 0x1280
	float InWaterDistance; // 0x1284
	char bEnableLaunchCharacter : 1; // 0x1288
	int32_t CurrentFireStage; // 0x128c
	ETurretFireStatus TurretFireStatus; // 0x1290
	UAnimMontage* FireMontage; // 0x1298
	UAnimMontage* StopFireMontage; // 0x12a0
	UAnimMontage* ReloadMontage; // 0x12a8
	UAnimMontage* CharacterFireMontage; // 0x12b0
	UAnimMontage* CharacterStopFireMontage; // 0x12b8
	UAnimMontage* CharacterReloadMontage; // 0x12c0
	char bOverrideProjectileDamageType : 1; // 0x12c8
	EDamageType OverrideProjectileDamageType; // 0x12c9
	float ShootHalfAngle; // 0x12cc
	TArray<FName> StartFireSocket; // 0x12d0
	float MaxFollowDistance; // 0x12e0
	float PitchDemostartion; // 0x1334
	float YawDemostartion; // 0x1338
	int32_t Demonstration; // 0x133c
	int32_t DemonstrationWave; // 0x1340
	float DemonstrationPerWaveTime; // 0x1344
	float PerDelayDemonstrationTime; // 0x1348
	float DemoLength; // 0x134c
	char bUseStoreFreeReloadCanFire : 1; // 0x1350
	char bStoreFreeReloadCanFire : 1; // 0x1350
	float ReloadMontagePlayRate; // 0x1354
	char bShowCrossHair : 1; // 0x1359
	FText TipsText; // 0x1360
	FTimerHandle DelayReloadHandle; // 0x1378
	TWeakObjectPtr<ABaseCharacter> CurrentAttacker; // 0x1384
	float FollowProjectileTime; // 0x138c
	float StopFollowProjectileTime; // 0x1390
	float ProjectileDamageMulti; // 0x1394
	float CollectionDamageMulti; // 0x1398
	float FireProjectileVelocityMulti; // 0x139c
	char bEnableDurable : 1; // 0x13a0
	char bEnableDamageDurable : 1; // 0x13a0
	float HPLossRatioPerFire; // 0x13a4
	float ChargeDamage; // 0x13ac
	TMap<int32_t, ESiegeSeatFunction> SeatFunction; // 0x13b0
	float MinStoreFreeStartTime; // 0x1404
	FVector SelfChargeBox; // 0x1408
	FName SelfChargeStartSocketName; // 0x1414
	FName SelfChargeEndSocketName; // 0x141c
	TArray<AActor*> MeleeAttackIgnoreActors; // 0x1428
	EDamageType ChargeAttackDamageType; // 0x1438
	float ChargeCollectionDamage; // 0x143c
	USGDamageType* ChargeDamageType; // 0x1440
	char bCanRotateFire : 1; // 0x1448
	char bIsBreakDefense : 1; // 0x1460
	FName FireParticleSocket; // 0x1464
	char bPlayFireCameraShake : 1; // 0x146c
	FRotator MaxShakeMoveCameraRotator; // 0x1470
	FRotator MinShakeMoveCameraRotator; // 0x147c
	UMatineeCameraShake* FireCameraShake; // 0x1488
	float GeneralSkillDamageMultiAddMulti; // 0x1490
	float GeneralPerkDamageMultiAddMulti; // 0x1494
	UCurveFloat* DistanceAttenuationCurve; // 0x1498
	char bIgnoreSkillPunish : 1; // 0x14a0
	float FireAddSkillExp; // 0x14a4
	float AttackAddSkillExp; // 0x14a8
	char bShowScaleplate : 1; // 0x14b8
	int32_t AttackTenacity; // 0x14bc
	char bAddAggroToSeatedCharacter : 1; // 0x14d0
	float DispalyTurretAreaCheckRadius; // 0x14d4
};

struct UParticleModuleLocationBoneSocket : UParticleModuleLocationBase {
	ELocationBoneSocketSource SourceType; // 0x30
	FVector UniversalOffset; // 0x34
	TArray<FLocationBoneSocketInfo> SourceLocations; // 0x40
	ELocationBoneSocketSelectionMethod SelectionMethod; // 0x50
	char bUpdatePositionEachFrame : 1; // 0x54
	char bOrientMeshEmitters : 1; // 0x54
	char bInheritBoneVelocity : 1; // 0x54
	float InheritVelocityScale; // 0x58
	FName SkelMeshActorParamName; // 0x5c
	int32_t NumPreSelectedIndices; // 0x64
};

struct UGuildQuestSlot : USGUI {
	UButton* FinishButton; // 0x2d8
	UVerticalBox* QuestVerticalBox; // 0x2e0
	UTextBlock* QuestNameText; // 0x2e8
	UTextBlock* QuestTypeText; // 0x2f0
	UImage* BGImage; // 0x2f8
	UImage* CompleteImage; // 0x300
	UImage* FinishedImage; // 0x308
	UBorder* BGBorder; // 0x310
	UImage* CollapseImage; // 0x318
	UCheckBox* ShowTraceCheckBox; // 0x320
	UDataButton* ShowTraceTipsButton; // 0x328
	TSoftObjectPtr<UTexture2D> DailyQuestTexture; // 0x330
	TSoftObjectPtr<UTexture2D> WeeklyQuestTexture; // 0x358
	TSoftObjectPtr<UTexture2D> TrunkQuestTexture; // 0x380
	TSoftObjectPtr<UTexture2D> BranchQuestTexture; // 0x3a8
	TSoftObjectPtr<UTexture2D> SelectQuestTexture; // 0x3d0
	TSoftObjectPtr<UTexture2D> CollapseTexture; // 0x3f8
	TSoftObjectPtr<UTexture2D> ExpandTexture; // 0x420
	UGuildQuestObjectSlot* QuestObjectSlotClass; // 0x448
	USGToolTipWidget* ButtonTipWidgetTemplate; // 0x450
};

struct UABP_Bristle_02_C : UDecorationAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2d0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x2d8
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_9; // 0x300
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_8; // 0x560
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_7; // 0x7c0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_6; // 0xa20
	FAnimNode_CopyPoseFromMesh AnimGraphNode_CopyPoseFromMesh; // 0xc80
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0xe58
	FAnimNode_Root AnimGraphNode_Root; // 0xe78
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_5; // 0xeb0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_4; // 0x1110
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_3; // 0x1370
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics_2; // 0x15d0
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics; // 0x1830
	USkeletalMeshComponent* SourceMeshComponent_1; // 0x1a90
};

struct UEditableGameplayTagQuery : UObject {
	FString UserDescription; // 0x28
	UEditableGameplayTagQueryExpression* RootExpression; // 0x48
	FGameplayTagQuery TagQueryExportText_Helper; // 0x50
};

struct UGeometryCacheCodecRaw : UGeometryCacheCodecBase {
	int32_t DummyProperty; // 0x38
};

struct ASGStructureFireworks : ASGStructure {
	AActor* FireworksClass; // 0xb98
	ASGWeapon* NeedWeaponClass; // 0xba0
	UAnimMontage* FireworksMontage; // 0xba8
	int32_t Count; // 0xbb0
	float TickTimeInterval; // 0xbb4
	float RandomRadius; // 0xbb8
};

struct UGerstnerWaterWaveGeneratorSimple : UGerstnerWaterWaveGeneratorBase {
	int32_t NumWaves; // 0x28
	int32_t Seed; // 0x2c
	float Randomness; // 0x30
	float MinWavelength; // 0x34
	float MaxWavelength; // 0x38
	float WavelengthFalloff; // 0x3c
	float MinAmplitude; // 0x40
	float MaxAmplitude; // 0x44
	float AmplitudeFalloff; // 0x48
	float WindAngleDeg; // 0x4c
	float DirectionAngularSpreadDeg; // 0x50
	float SmallWaveSteepness; // 0x54
	float LargeWaveSteepness; // 0x58
	float SteepnessFalloff; // 0x5c
};

struct UVirtualTexturePoolConfig : UObject {
	int32_t DefaultSizeInMegabyte; // 0x28
	TArray<FVirtualTextureSpacePoolConfig> Pools; // 0x30
};

struct UAbilityTask_WaitGameplayTagRemoved : UAbilityTask_WaitGameplayTag {
	FMulticastInlineDelegate Removed; // 0xa8
};

struct URendererOverrideSettings : UDeveloperSettings {
	char bSupportAllShaderPermutations : 1; // 0x38
	char bForceRecomputeTangents : 1; // 0x38
};

struct UMaterialExpressionArcsineFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct USkyLightComponent : ULightComponentBase {
	bool bRealTimeCapture; // 0x238
	ESkyLightSourceType SourceType; // 0x239
	UTextureCube* Cubemap; // 0x240
	float SourceCubemapAngle; // 0x248
	int32_t CubemapResolution; // 0x24c
	float SkyDistanceThreshold; // 0x250
	bool bCaptureEmissiveOnly; // 0x254
	bool bLowerHemisphereIsBlack; // 0x255
	FLinearColor LowerHemisphereColor; // 0x258
	float OcclusionMaxDistance; // 0x268
	float Contrast; // 0x26c
	float OcclusionExponent; // 0x270
	float MinOcclusion; // 0x274
	FColor OcclusionTint; // 0x278
	char bCloudAmbientOcclusion : 1; // 0x27c
	float CloudAmbientOcclusionStrength; // 0x280
	float CloudAmbientOcclusionExtent; // 0x284
	float CloudAmbientOcclusionMapResolutionScale; // 0x288
	float CloudAmbientOcclusionApertureScale; // 0x28c
	EOcclusionCombineMode OcclusionCombineMode; // 0x290
	UTextureCube* BlendDestinationCubemap; // 0x348
};

struct UServerSaltInfo : UObject {
	char CropIndex; // 0x28
	ASGStructureSaltCrop* CropDefaultObject; // 0x30
	ASGStructureSaltLand* CropLand; // 0x38
	float GrowthRatio; // 0x40
	float RipeTime; // 0x44
	float WaterConsumed; // 0x48
	float HP; // 0x4c
};

struct UHuangLiEffectPanel : USGUI {
	UButton* BackButton; // 0x2d8
	UTextBlock* TitleText; // 0x2e0
	UTextBlock* DetailText; // 0x2e8
};

struct UUI_KeySetting : UUserWidget {
	UDataTable* KeySettingDataTable; // 0x260
	UKeySettingItem* ItemTemplate; // 0x268
	TArray<FName> RadioButtonViewList; // 0x270
	TArray<UKeySettingItem*> SettingItemList; // 0x290
	UKeySettingItem* SelectKeySettingItem; // 0x2a0
	UScrollBox* MainScrollBox; // 0x2b0
};

struct USkillPanel : UUserWidget {
	UUniformGridPanel* NormalPerkPanel; // 0x260
	UHorizontalBox* WeakPerkPanel; // 0x268
	UHorizontalBox* AngryPerkPanel; // 0x270
	UHorizontalBox* GodPerkPanel; // 0x278
	TWeakObjectPtr<ASGGeneralCharacter> BindCharacter; // 0x280
	UPerkSlot* GeneralPerkSlotTemplate; // 0x288
	USGUI* ParentUI; // 0x290
};

struct UStableRebornSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> BGBorder_NormalTexture; // 0x260
	TSoftObjectPtr<UTexture2D> BGBorder_HoverTexture; // 0x288
	TSoftObjectPtr<UTexture2D> BGBorder_SelectTexture; // 0x2b0
	TMap<EGeneralsQualityType, float> QualityCorrectionToQualityType; // 0x2d8
	TSoftObjectPtr<UTexture2D> VehicleQualityTexture[0x6]; // 0x328
	TSoftObjectPtr<UTexture2D> CastratedTexture; // 0x418
	TSoftObjectPtr<UTexture2D> SexFemaleTexture; // 0x440
	TSoftObjectPtr<UTexture2D> SexMaleTexture; // 0x468
	UBorder* BGBorder; // 0x490
	UImage* VehicleQualityBG; // 0x498
	UImage* SexImg; // 0x4a0
	UTextBlock* NameText; // 0x4a8
	UTextBlock* LifeCountText; // 0x4b0
	UTextBlock* ReduceLifeTitle; // 0x4b8
	UTextBlock* ReduceLifeText; // 0x4c0
	UProgressBar* ReduceLifeCountTimePB; // 0x4c8
};

struct AGameplayAbilityWorldReticle_ActorVisualization : AGameplayAbilityWorldReticle {
	UCapsuleComponent* CollisionComponent; // 0x330
	TArray<UActorComponent*> VisualizationComponents; // 0x338
};

struct UDecorationAnimInstance : UAnimInstance {
	USkeletalMeshComponent* SourceMeshComponent; // 0x2c0
};

struct UWmfMediaSettings : UObject {
	bool AllowNonStandardCodecs; // 0x28
	bool LowLatency; // 0x29
	bool NativeAudioOut; // 0x2a
	bool HardwareAcceleratedVideoDecoding; // 0x2b
};

struct UUI_ProducerSplitLine : UUserWidget {
	UTextBlock* SplitNameTextBlock; // 0x260
	FText SplitName; // 0x268
};

struct UMaterialExpressionGetMaterialAttributes : UMaterialExpression {
	FMaterialAttributesInput MaterialAttributes; // 0x40
	TArray<FGuid> AttributeGetTypes; // 0x58
};

struct UAnimStreamable : UAnimSequenceBase {
	int32_t NumFrames; // 0xa8
	EAnimInterpolationType Interpolation; // 0xac
	FName RetargetSource; // 0xb0
	UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xc8
	UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xd0
	bool bEnableRootMotion; // 0xd8
	ERootMotionRootLock RootMotionRootLock; // 0xd9
	bool bForceRootLock; // 0xda
	bool bUseNormalizedRootMotionScale; // 0xdb
};

struct ASGPlayerCameraManager : APlayerCameraManager {
	FVector2D TPVCameraOffsetXInc; // 0x2900
	FVector TPVCameraOffset; // 0x2908
	float TPVCameraCollisionHeightScaler; // 0x2914
	float CameraLagSpeed; // 0x2918
	char bIsFollowProjectile : 1; // 0x2938
	FVector FollowProjectileLocation; // 0x2948
	FRotator FollowProjectileRotation; // 0x2954
	FVector LastDeathLocation; // 0x2960
	double LastDeathTime; // 0x2970
	UMaterialInstance* ScopeMaterialInstance; // 0x2978
	FName ScopeRaidusNameX; // 0x2980
	FVector2D ScopeRaidusRangeX; // 0x2988
	FName ScopeRaidusNameY; // 0x2990
	FVector2D ScopeRaidusRangeY; // 0x2998
	TArray<UCameraComponent*> ViewTargetCameras; // 0x3c18
	TArray<UMaterialInstanceDynamic*> DelayRemovePostMaterial; // 0x3c28
	UMaterialInstanceDynamic* ScopeMaterialInstanceDynamic; // 0x3c38
};

struct ALevelStreamingVolume : AVolume {
	TArray<FName> StreamingLevelNames; // 0x348
	char bEditorPreVisOnly : 1; // 0x358
	char bDisabled : 1; // 0x358
	EStreamingVolumeUsage StreamingUsage; // 0x35c
};

struct UBasicReplicationGraph : UReplicationGraph {
	UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x4a8
	UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4b0
	TArray<FConnectionAlwaysRelevantNodePair> AlwaysRelevantForConnectionList; // 0x4b8
	TArray<AActor*> ActorsWithoutNetConnection; // 0x4c8
};

struct UGameplayTaskResource : UObject {
	int32_t ManualResourceID; // 0x28
	int8_t AutoResourceID; // 0x2c
	char bManuallySetID : 1; // 0x30
};

struct UNatureWeatherComponent : USceneComponent {
	float WetLevel; // 0x208
	float PuddleNoiseExponent; // 0x20c
	float PuddleSpeed; // 0x210
	float PuddleIntensity; // 0x214
	float RippleSpeed; // 0x218
	float RippleIntensity; // 0x21c
	float FlowSpeed; // 0x220
	float FlowIntensity; // 0x224
	FVector WindOffset; // 0x228
	float RainIntensity; // 0x234
	float RainMeshRadius; // 0x238
	float RainLightingIntensity; // 0x23c
	float RainDropSpeed; // 0x240
	float RainDensity; // 0x244
	float OcclusionDepthZOffset; // 0x248
	float OcclusionCaptureZHeight; // 0x24c
	float OcclusionCaptureSnapMaxDistance; // 0x250
	float OcclusionDepthWidth; // 0x254
	int32_t OcclusionDepthTextureResolution; // 0x258
	bool CenterSimOnPawn; // 0x25c
	bool EnableRainRotationRealisticLimitation; // 0x25d
	float RainRotationRealisticLimitationMaxValue; // 0x260
	FRotator RainRotation; // 0x264
	UTextureRenderTarget2D* OcclusionDepthTexture; // 0x270
	UTexture2D* NoiseTexture; // 0x278
	UTexture2D* FlowNoiseTexture; // 0x280
	UTexture2D* RippleFlipTexture; // 0x288
	UTexture2D* RainFallTexture; // 0x290
	UTexture2D* RainFallNormalTexture; // 0x298
};

struct UGizmoAxisIntervalParameterSource : UGizmoBaseFloatParameterSource {
	TScriptInterface<IGizmoFloatParameterSource> FloatParameterSource; // 0x48
	float MinParameter; // 0x58
	float MaxParameter; // 0x5c
};

struct ULiveLinkCurveRemapSettings : ULiveLinkSourceSettings {
	FLiveLinkCurveConversionSettings CurveConversionSettings; // 0xa0
};

struct UMovieSceneEasingExternalCurve : UObject {
	UCurveFloat* Curve; // 0x30
};

struct UItemAuctionSlot : UUserWidget {
	UImage* IconImage; // 0x260
	UTextBlock* NameText; // 0x268
	UTextBlock* QualityText; // 0x270
	UTextBlock* StateText; // 0x278
	UTextBlock* TimeText; // 0x280
	UTextBlock* UnitPriceText; // 0x288
	UTextBlock* AmountText; // 0x290
	UTextBlock* LevelText; // 0x298
	UButton* ButtonSelected; // 0x2a0
	FButtonStyle ButtonCheckedStyle; // 0x2a8
	FButtonStyle ButtonUnCheckedStyle; // 0x520
	TWeakObjectPtr<USGUI> ParentUI; // 0x798
};

struct UARQRCodeComponent : UARComponent {
	FARQRCodeUpdatePayload ReplicatedPayload; // 0x290
};

struct UAbilityTask_WaitGameplayTag : UAbilityTask {
	UAbilitySystemComponent* OptionalExternalTarget; // 0x90
};

struct UCameraModifier_CameraShake : UCameraModifier {
	TArray<FActiveCameraShakeInfo> ActiveShakes; // 0x48
	TMap<UCameraShakeBase*, FPooledCameraShakes> ExpiredPooledShakesMap; // 0x58
	float SplitScreenShakeScale; // 0xa8
};

struct UParticleModuleSizeMultiplyLife : UParticleModuleSizeBase {
	FRawDistributionVector LifeMultiplier; // 0x30
	char MultiplyX : 1; // 0x78
	char MultiplyY : 1; // 0x78
	char MultiplyZ : 1; // 0x78
};

struct UAnimBlueprintGeneratedClass : UBlueprintGeneratedClass {
	TArray<FBakedAnimationStateMachine> BakedStateMachines; // 0x330
	USkeleton* TargetSkeleton; // 0x340
	TArray<FAnimNotifyEvent> AnimNotifies; // 0x348
	TMap<FName, FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x358
	TArray<FName> SyncGroupNames; // 0x428
	TArray<FExposedValueHandler> EvaluateGraphExposedInputs; // 0x438
	TMap<FName, FGraphAssetPlayerInformation> GraphAssetPlayerInformation; // 0x448
	TMap<FName, FAnimGraphBlendOptions> GraphBlendOptions; // 0x498
	FPropertyAccessLibrary PropertyAccessLibrary; // 0x4e8
};

struct USubmixEffectDelayPreset : USoundEffectSubmixPreset {
	FSubmixEffectDelaySettings Settings; // 0x9c
	FSubmixEffectDelaySettings DynamicSettings; // 0xa8
};

struct UAbilitySystemComponent : UGameplayTasksComponent {
	TArray<FAttributeDefaults> DefaultStartingData; // 0x140
	TArray<UAttributeSet*> SpawnedAttributes; // 0x150
	FName AffectedAnimInstanceTag; // 0x160
	float OutgoingDuration; // 0x300
	float IncomingDuration; // 0x304
	TArray<FString> ClientDebugStrings; // 0x328
	TArray<FString> ServerDebugStrings; // 0x338
	bool UserAbilityActivationInhibited; // 0x3a0
	bool ReplicationProxyEnabled; // 0x3a1
	bool bSuppressGrantAbility; // 0x3a2
	bool bSuppressGameplayCues; // 0x3a3
	TArray<AGameplayAbilityTargetActor*> SpawnedTargetActors; // 0x3a8
	AActor* OwnerActor; // 0x3e0
	AActor* AvatarActor; // 0x3e8
	FGameplayAbilitySpecContainer ActivatableAbilities; // 0x400
	TArray<UGameplayAbility*> AllReplicatedInstancedAbilities; // 0x550
	FGameplayAbilityRepAnimMontage RepAnimMontageInfo; // 0x768
	bool bCachedIsNetSimulated; // 0x798
	bool bPendingMontageRep; // 0x799
	FGameplayAbilityLocalAnimMontage LocalAnimMontageInfo; // 0x7a0
	FActiveGameplayEffectsContainer ActiveGameplayEffects; // 0x868
	FActiveGameplayCueContainer ActiveGameplayCues; // 0xce0
	FActiveGameplayCueContainer MinimalReplicationGameplayCues; // 0xe08
	TArray<char> BlockedAbilityBindings; // 0x1058
	FMinimalReplicationTagCountMap MinimalReplicationTags; // 0x1190
	FReplicatedPredictionKeyMap ReplicatedPredictionKeyMap; // 0x1208
};

struct UMaterialExpressionLightmassReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0x40
	FExpressionInput Lightmass; // 0x54
};

struct AWindDirectionalSource : AInfo {
	UWindDirectionalSourceComponent* Component; // 0x310
};

struct UAsyncActionLoadPrimaryAssetList : UAsyncActionLoadPrimaryAssetBase {
	FMulticastInlineDelegate Completed; // 0x78
};

struct USynthComponent : USceneComponent {
	char bAutoDestroy : 1; // 0x208
	char bStopWhenOwnerDestroyed : 1; // 0x208
	char bAllowSpatialization : 1; // 0x208
	char bOverrideAttenuation : 1; // 0x208
	char bOutputToBusOnly : 1; // 0x20c
	USoundAttenuation* AttenuationSettings; // 0x210
	FSoundAttenuationSettings AttenuationOverrides; // 0x218
	USoundConcurrency* ConcurrencySettings; // 0x5b8
	TSet<USoundConcurrency*> ConcurrencySet; // 0x5c0
	USoundClass* SoundClass; // 0x610
	USoundEffectSourcePresetChain* SourceEffectChain; // 0x618
	USoundSubmixBase* SoundSubmix; // 0x620
	TArray<FSoundSubmixSendInfo> SoundSubmixSends; // 0x628
	TArray<FSoundSourceBusSendInfo> BusSends; // 0x638
	TArray<FSoundSourceBusSendInfo> PreEffectBusSends; // 0x648
	char bIsUISound : 1; // 0x658
	char bIsPreviewSound : 1; // 0x658
	int32_t EnvelopeFollowerAttackTime; // 0x65c
	int32_t EnvelopeFollowerReleaseTime; // 0x660
	FMulticastInlineDelegate OnAudioEnvelopeValue; // 0x668
	USynthSound* Synth; // 0x698
	UAudioComponent* AudioComponent; // 0x6a0
};

struct AController : AActor {
	APlayerState* PlayerState; // 0x318
	FMulticastInlineDelegate OnInstigatedAnyDamage; // 0x328
	FName StateName; // 0x338
	APawn* Pawn; // 0x340
	ACharacter* Character; // 0x350
	USceneComponent* TransformComponent; // 0x358
	FRotator ControlRotation; // 0x378
	char bAttachToPawn : 1; // 0x384
};

struct UInterpTrackVectorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0x90
};

struct UMovieSceneByteSection : UMovieSceneSection {
	FMovieSceneByteChannel ByteCurve; // 0xe8
};

struct USGShopUnlockSignalReward : USGReward {
	EShopUnlockType ShopUnlockType; // 0x28
	TArray<int32_t> ShopUnlockIndexArray; // 0x30
};

struct UUI_Domain : USGUI {
	UUI_Teleport3D* Teleport3DUI; // 0x2d8
	UUI_AlliancePower* AlliancePowerUI; // 0x2e0
	USGMiniMap* SGMiniMap; // 0x2e8
	UTextBlock* CapitalText; // 0x2f0
};

struct UAudioCaptureComponent : USynthComponent {
	int32_t JitterLatencyFrames; // 0x6d0
};

struct ASGPlayerController : ASGPlayerControllerBase {
	bool bIsMovingForward; // 0x6b0
	bool bIsMovingBackward; // 0x6b1
	bool bIsMovingLeft; // 0x6b2
	bool bIsMovingRight; // 0x6b3
	int32_t CurShowShortCutPage; // 0x6bc
	FMulticastInlineDelegate OnShortCutPageRefresh; // 0x6c0
	char bUseRiderBattleMode : 1; // 0x6f8
	float CheckHaceReplicatedTimeInterval; // 0x6fc
	float UseFormationCoolingTime; // 0x714
	char bIsUseFormationCooling : 1; // 0x718
	FTimerHandle UseFormationCoolingTimer; // 0x720
	char bToggleOccupyArea : 1; // 0x728
	char bToggleTurretArea : 1; // 0x728
	double LastCallVehicleTime; // 0x730
	ASG_AIManager* SG_AIManager; // 0x738
	ASG_AIManager* SG_AIManagerClass; // 0x740
	char bIsDemonstration : 1; // 0x748
	TWeakObjectPtr<APawn> SwitchInspectorPawn; // 0x74c
	TArray<FAdminPlayerInfo> AdminPlayerInfo; // 0x758
	FTimerHandle ClientAdminPlayerInfoTimer; // 0x768
	TArray<TWeakObjectPtr<ABaseCharacter>> CheatNpcs; // 0x770
	TWeakObjectPtr<AActor> GMTargetActor; // 0x780
	char bHasPassport : 1; // 0x788
	TArray<int32_t> PassportServerList; // 0x790
	char bGMOperateAllInventory : 1; // 0x7a0
	TWeakObjectPtr<ASGCharacter> ActorViewBasePropertyActor; // 0x7b4
	FTimerHandle ViewPropertyTimer; // 0x7c8
	TWeakObjectPtr<USGInventoryComponent> ViewRemoteInventory; // 0x7d0
	TWeakObjectPtr<USGInventoryComponent> ViewRemoteVehiclePawnInventory; // 0x7d8
	TWeakObjectPtr<USGInventoryComponent> ViewRemoteSeatCharacterInventory; // 0x7e0
	TWeakObjectPtr<USGInventoryComponent> ViewRemoteMyGeneralInventory; // 0x7e8
	TWeakObjectPtr<USGInventoryComponent> ViewRemoteMyHorseInventory; // 0x7f0
	FTimerHandle RefreshStoreInventoryHandle; // 0x7f8
	FVector PassengerLastLocation; // 0x800
	ASGStructureManager* StructureManager; // 0x810
	float SearchPointLightComponentRadius; // 0x818
	float UpdatePointLightComponentInterval; // 0x81c
	double LastUpdatePointLightComponentTime; // 0x820
	ASGStructureManager* StructureManagerClass; // 0x830
	char bInitalizedGeneralChunks : 1; // 0x840
	TArray<FBaseGeneralChunkData> ReplicatedGeneralChunkArray; // 0x848
	FTimerHandle UpdateChunkInfoTimer; // 0x888
	float UpdateChunkDelta; // 0x890
	TArray<FGeneralChunkInfoHighFrequency> ReplicatedChunkInfoArray; // 0x898
	char bInitalizedAnimalChunks : 1; // 0x8b8
	TArray<FBaseAnimalChunkData> ReplicatedAnimalChunkArray; // 0x8c0
	TWeakObjectPtr<ASGGeneralCharacter> LongViewGeneral; // 0x8e0
	FTimerHandle RefreshDeathGeneralLifeCountHandle; // 0x8e8
	FTimerHandle RefreshDeathAnimalLifeCountHandle; // 0x8f0
	float RefreshDeathLifeCountTime; // 0x8f8
	TWeakObjectPtr<ASGStructureGuildStore> ViewGuildStoreStructure; // 0x928
	float ViewGeneralLongDistance; // 0x930
	FDateTime LastUsePackageStation; // 0x980
	int32_t bHideAllExistingWidgetsType; // 0x988
	float CurrentRespawnTime; // 0x998
	TArray<FDeathCharacterInfo> LastDeathCharacterInfoList; // 0xb90
	TArray<TWeakObjectPtr<UWidgetComponent>> LastDeathTipsComponentList; // 0xbc0
	UDeathLocationHUD* DeathTipsComponentTemplate; // 0xbd0
	float ShowDeathTipsComponentDistance; // 0xbd8
	UUserWidget* LevelNameHUDTemplate; // 0xbe0
	UMaterialInterface* GuildBillBoardMaterial; // 0xbe8
	UMaterialInterface* FriendMaterial; // 0xbf0
	UMaterialInterface* EnemyMaterial; // 0xbf8
	UMaterialInterface* GM_ADMINISTRATORMaterial; // 0xc00
	UMaterialInterface* GM_SeniorOperatorMaterial; // 0xc08
	UMaterialInterface* GM_OperatorMaterial; // 0xc10
	UMaterialInterface* GM_CustomerServicerMaterial; // 0xc18
	UCurveFloat* BillBoardCurve; // 0xc20
	FDateTime LastSuicideUTCTime; // 0xc28
	int32_t SuicideCoolingSeconds; // 0xc30
	FMulticastInlineDelegate OnGenericTeamIdChanged; // 0xc40
	FBattleServiceQueueCountInfo BattleServiceQueueCountInfo; // 0xc80
	float PingUpdateInterval; // 0xc98
	double LastPingUpdateTime; // 0xca0
	char bShowAimPoint : 1; // 0xcf0
	bool bIsFirstLogin; // 0xcf1
	TArray<UNewsClientData*> ClientNewsDatas; // 0xd38
	FChatServerInfo ChatServerInfo; // 0xd48
	TWeakObjectPtr<AFuBenVolume> CurrentFuBenVolume; // 0xd70
	TWeakObjectPtr<ASGStructureItemBaoZangBox> CurrentSGStructureItemBaoZangBox; // 0xd78
	TWeakObjectPtr<ASGStructureOccupyFlag> CurrentOverlapFlag; // 0xd80
	float GuildActivityPoint; // 0xd88
	int64_t CapitalGold64; // 0xd90
	int64_t CapitalSilver64; // 0xd98
	int64_t CapitalCopper64; // 0xda0
	int64_t CapitalSeason64; // 0xda8
	int32_t CharacterSpawnTime; // 0xe30
	double LastUpdateNatureControllerTime; // 0xe38
	float UpdateNatureControllerInterval; // 0xe40
	int32_t SurviveDay; // 0xe44
	bool bCanUpdateNatureControllerTime; // 0xe48
	int32_t MaxSeasonLevel; // 0xea0
	int32_t SeasonLevel; // 0xea4
	float SeasonExp; // 0xeb8
	char HasSeasonPassport : 1; // 0xed4
	FDateTime SeasonPassportExpireTime; // 0xee8
	TArray<FSeasonRewardItemState> SeasonCanReceiveRewardArray; // 0xef0
	TArray<FClientDecalPool> ClientDecalPool; // 0xf10
	int32_t ClientDecalMaxAmount; // 0xf20
	char bOpenPVP : 1; // 0xf38
	char bCreativeMode : 1; // 0xf50
	int32_t LogicServerXianChengKey; // 0xf54
	TArray<FHuKouNode> HuKouInfo; // 0xf68
	FTimerHandle HuKouTimerHandle; // 0xf78
	double LastRequestGuildMembersTime; // 0xf80
	double LastTaiShouBattleSignTime; // 0xf88
	double LastRequestReturnServerTime; // 0xf90
	double LastRequestOccupyEmptyGuanAi; // 0xf98
	double LastSignUpAttackGuanAiTime; // 0xfa0
	double LastCancelSignUpAttackGuanAiTime; // 0xfa8
	TArray<FLegendGeneralDataInfo> ReplicatedLegendDataArray; // 0xfc0
	bool IsUpdateSellList; // 0xfe8
	bool IsUpdateBuyList; // 0xfe9
	bool bForbiddenSpeakState; // 0xfea
	FTimerHandle ForbiddenSpeakTimerHandle; // 0xff0
	bool bOpenCheatEyesStructures; // 0xff8
	bool bOpenCheatEyesPlayers; // 0xff9
	FDateTime BEWhiteEndTime; // 0x1000
	float GetStructureMiniMapDatasInterval; // 0x1008
	float LastGetStructureMiniMapDatasTime; // 0x100c
	TArray<FStructureMiniMapData> StructureMiniMapDatas; // 0x1020
	bool IsAttachPlayerForWatch; // 0x1040
	TWeakObjectPtr<ABaseCharacter> AttachPlayerForWatch; // 0x1044
	TWeakObjectPtr<ASGPlayerController> AttachPlayerConForWatch; // 0x104c
	FString LastGMViewPlayerAccountID; // 0x1058
	TArray<TWeakObjectPtr<ASG_AnimalsCharacter>> GroomFurAnimals; // 0x1090
	TArray<FAnimalDebugInfo> AnimalDebugInfos; // 0x10a0
	TArray<FAnimalDebugInfo> CacheAnimalDebugInfos; // 0x10b0
	double LastSERequestTime; // 0x10c0
	TWeakObjectPtr<ASG_AnimalVehicleCharacter> ViewRemoteAnimalVehicleCharacter; // 0x10c8
	ENoviceBuffState NoviceBuffState; // 0x10d1
	char HasBattleAward : 1; // 0x10fc
};

struct UUI_StructureHelp : USGUI {
	UTextBlock* NameText; // 0x2d8
	UMultiLineEditableText* MultiLineEditableText_Help; // 0x2e0
};

struct UNiagaraDataInterfacePlatformSet : UNiagaraDataInterface {
	FNiagaraPlatformSet Platforms; // 0x38
};

struct UWBP_ProducerName_6_C : UUserWidget {
	UWBP_ProducerSlot_C* WBP_ProducerSlot; // 0x260
	UWBP_ProducerSlot_C* WBP_ProducerSlot_2; // 0x268
	UWBP_ProducerSlot_C* WBP_ProducerSlot_4; // 0x270
	UWBP_ProducerSlot_C* WBP_ProducerSlot_5; // 0x278
	UWBP_ProducerSlot_C* WBP_ProducerSlot_6; // 0x280
	UWBP_ProducerSlot_C* WBP_ProducerSlot_7; // 0x288
	UWBP_ProducerSlot_C* WBP_ProducerSlot_8; // 0x290
	UWBP_ProducerSplitLine_C* WBP_ProducerSplitLine; // 0x298
};

struct UBreakpoint : UObject {
	char bEnabled : 1; // 0x28
	UEdGraphNode* Node; // 0x30
	char bStepOnce : 1; // 0x38
	char bStepOnce_WasPreviouslyDisabled : 1; // 0x38
	char bStepOnce_RemoveAfterHit : 1; // 0x38
};

struct UWeldMeshEdgesTool : USingleSelectionTool {
	float Tolerance; // 0x88
	bool bOnlyUnique; // 0x8c
};

struct UEnvQueryGenerator_PathingGrid : UEnvQueryGenerator_SimpleGrid {
	FAIDataProviderBoolValue PathToItem; // 0xf8
	UNavigationQueryFilter* NavigationFilter; // 0x130
	FAIDataProviderFloatValue ScanRangeMultiplier; // 0x138
};

struct ULocalizedOverlays : UOverlays {
	UBasicOverlays* DefaultOverlays; // 0x28
	TMap<FString, UBasicOverlays*> LocaleToOverlaysMap; // 0x30
};

struct UAbilityTask_WaitInputPress : UAbilityTask {
	FMulticastInlineDelegate OnPress; // 0x80
};

struct UNiagaraEventReceiverEmitterAction_SpawnParticles : UNiagaraEventReceiverEmitterAction {
	uint32_t NumParticles; // 0x28
};

struct UGizmoUniformScaleParameterSource : UGizmoBaseVec2ParameterSource {
	TScriptInterface<IGizmoAxisSource> AxisSource; // 0x48
	TScriptInterface<IGizmoTransformSource> TransformSource; // 0x58
	float ScaleMultiplier; // 0x68
	FVector2D Parameter; // 0x6c
	FGizmoVec2ParameterChange LastChange; // 0x74
	FVector CurScaleOrigin; // 0x84
	FVector CurScaleNormal; // 0x90
	FVector CurScaleAxisX; // 0x9c
	FVector CurScaleAxisY; // 0xa8
	FTransform InitialTransform; // 0xc0
};

struct USoundAttenuation : UObject {
	FSoundAttenuationSettings Attenuation; // 0x28
};

struct UMaterialExpressionTextureSampleParameter : UMaterialExpressionTextureSample {
	FName ParameterName; // 0x60
	FGuid ExpressionGUID; // 0x68
	FName Group; // 0x78
};

struct UGeometryCacheComponent : UMeshComponent {
	UGeometryCache* GeometryCache; // 0x4b0
	bool bRunning; // 0x4b8
	bool bLooping; // 0x4b9
	float StartTimeOffset; // 0x4bc
	float PlaybackSpeed; // 0x4c0
	int32_t NumTracks; // 0x4c4
	float ElapsedTime; // 0x4c8
	float Duration; // 0x4fc
	bool bManualTick; // 0x500
};

struct UMaterialExpressionHairColor : UMaterialExpression {
	FExpressionInput Melanin; // 0x40
	FExpressionInput Redness; // 0x54
	FExpressionInput DyeColor; // 0x68
};

struct ULuminApplicationLifecycleComponent : UApplicationLifecycleComponent {
	FMulticastInlineDelegate DeviceHasReactivatedDelegate; // 0x150
	FMulticastInlineDelegate DeviceWillEnterRealityModeDelegate; // 0x160
	FMulticastInlineDelegate DeviceWillGoInStandbyDelegate; // 0x170
	FMulticastInlineDelegate FocusLostDelegate; // 0x180
	FMulticastInlineDelegate FocusGainedDelegate; // 0x190
};

struct UDatasmithSpotLightComponentTemplate : UDatasmithObjectTemplate {
	float InnerConeAngle; // 0x30
	float OuterConeAngle; // 0x34
};

struct UFixedPlaneBrushOpProps : UBasePlaneBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	float Depth; // 0x68
	EPlaneBrushSideMode WhichSide; // 0x6c
};

struct UProceduralArrowToolProperties : UProceduralShapeToolProperties {
	float ShaftRadius; // 0x70
	float ShaftHeight; // 0x74
	float HeadRadius; // 0x78
	float HeadHeight; // 0x7c
	int32_t RadialSlices; // 0x80
	int32_t TotalSubdivisions; // 0x84
};

struct APaperTileMapActor : AActor {
	UPaperTileMapComponent* RenderComponent; // 0x310
};

struct UGameplayEffectExecutionCalculation : UGameplayEffectCalculation {
	bool bRequiresPassedInTags; // 0x38
};

struct UBasePlayerData : UObject {
	int32_t LogicServerXianChengKey; // 0x98
	FBasePlayerDataInfo BasePlayerDataInfo; // 0xa0
	FPreviewAppearanceData PreviewAppearanceData; // 0x120
	FBasePlayerDataStatisticInfo BasePlayerDataStatisticInfo; // 0x2f8
	FBasePlayerDataDeadInfo BasePlayerDataDeadInfo; // 0x320
	bool bIsFirstLogin; // 0x360
	int32_t NoviceBuffState; // 0x364
	char bHasCapitalGold : 1; // 0x368
	int32_t CapitalGold; // 0x36c
	int64_t CapitalGold64; // 0x370
	int32_t CapitalSilver; // 0x378
	int64_t CapitalSilver64; // 0x380
	int32_t CapitalCopper; // 0x388
	int64_t CapitalCopper64; // 0x390
	int32_t CapitalSeason; // 0x398
	int64_t CapitalSeason64; // 0x3a0
	float GuildActivityPoint; // 0x3a8
	TArray<FBaseGeneralChunkData> GeneralChunksArray; // 0x3b0
	TArray<FBaseAnimalChunkData> AnimalChunksArray; // 0x3c0
	FCharacterStatisticsInfo CharacterStatisticsInfo; // 0x3d0
	TArray<FAccomplishAchievementData> Achievements; // 0x5d0
	TArray<FString> BlockAchievements; // 0x5e0
	TArray<FString> Titles; // 0x5f0
	TArray<FShopUnlockedData> ShopUnlockeds; // 0x600
	FSeasonDataInfo SeasonDataInfo; // 0x610
	FDateTime LastLeaveGuildTime; // 0x638
	char bOpenPVP : 1; // 0x648
	FDateTime NextCrossServerTime; // 0x650
	TArray<FHuKouNode> HuKouInfo; // 0x658
	FDateTime ForbiddenSpeakDate; // 0x668
	FDateTime BeWhiteTime; // 0x670
	TArray<FLegendGeneralDataInfo> LegendGeneralsArray; // 0x678
	TArray<int32_t> AppearanceKitIndexArray; // 0x6f0
	TArray<int32_t> AppearanceExpiredKitIndexArray; // 0x700
	int32_t AppearanceKitIndex; // 0x710
	TArray<int32_t> FashionKitIndexArray; // 0x718
	TArray<int32_t> FashionKitExpiredIndexArray; // 0x728
	int32_t FashionKitIndex; // 0x738
	char bSaveToPlayer : 1; // 0x73c
	FTransportChunkInfo TransportChunkInfo; // 0x740
	FAccomplishAchievementArray AccomplishAchievementsPacket[0x3]; // 0x7b8
	TArray<FShopUnlockedData> ShopUnlockedPacket; // 0x7e8
	TMap<FGuid, FString> PlayerNews; // 0x848
	TMap<char, FDateTime> PlayerNewsRecordTime; // 0x898
	char bLimitReportActivityRank : 1; // 0x8e8
};

struct UCheckBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FCheckBoxStyle CheckBoxStyle; // 0x30
};

struct UBuoyancyComponent : UActorComponent {
	TArray<FSphericalPontoon> Pontoons; // 0xc0
	FMulticastInlineDelegate OnEnteredWaterDelegate; // 0xd0
	FMulticastInlineDelegate OnExitedWaterDelegate; // 0xe0
	FBuoyancyData BuoyancyData; // 0xf0
	TArray<AWaterBody*> CurrentWaterBodies; // 0x140
	UPrimitiveComponent* SimulatingComponent; // 0x150
};

struct UGiftPlayerSlot : USGUI {
	UTextBlock* PlayerNameText; // 0x2d8
	UImage* BGImage; // 0x2e0
	UDataButton* GiftDataButton; // 0x2e8
	TSoftObjectPtr<UTexture2D> TexNormalBG; // 0x2f0
	TSoftObjectPtr<UTexture2D> TexSelectBG; // 0x318
};

struct UUI_JueWei : USGUI {
	UUniformGridPanel* CurrentUniformGrid; // 0x2d8
	UUniformGridPanel* PreviewUniformGrid; // 0x2e0
	UVerticalBox* ConditionBox; // 0x2e8
	UButton* UpgradeButton; // 0x2f0
	UTextBlock* HonorPointText; // 0x2f8
	UProgressBar* HonorPointProgressBar; // 0x300
	UTextBlock* UpgradeTextBlock; // 0x308
	TArray<FName> JueweiSlotNames; // 0x310
	UJueWeiPropSlot* JueWeiPropSlotTemplate; // 0x320
	UJueWeiConditionSlot* JueWeiConditionSlotTemplate; // 0x328
	int32_t CountsPerRow; // 0x330
	FLinearColor AvailableColor; // 0x334
	FLinearColor UnavailableColor; // 0x344
	int32_t SelectJueWei; // 0x354
	int32_t JueWeiLevel; // 0x358
	int32_t LastPlayerJueWei; // 0x35c
	int32_t NewJueWeiLevel; // 0x360
};

struct UNetAnalyticsAggregatorConfig : UObject {
	TArray<FNetAnalyticsDataConfig> NetAnalyticsData; // 0x28
};

struct USkeletalMeshSimulationComponent : UActorComponent {
	UChaosPhysicalMaterial* PhysicalMaterial; // 0xc8
	AChaosSolverActor* ChaosSolverActor; // 0xd0
	UPhysicsAsset* OverridePhysicsAsset; // 0xd8
	bool bSimulating; // 0xe0
	bool bNotifyCollisions; // 0xe1
	EObjectStateTypeEnum ObjectType; // 0xe2
	float Density; // 0xe4
	float MinMass; // 0xe8
	float MaxMass; // 0xec
	ECollisionTypeEnum CollisionType; // 0xf0
	float ImplicitShapeParticlesPerUnitArea; // 0xf4
	int32_t ImplicitShapeMinNumParticles; // 0xf8
	int32_t ImplicitShapeMaxNumParticles; // 0xfc
	int32_t MinLevelSetResolution; // 0x100
	int32_t MaxLevelSetResolution; // 0x104
	int32_t CollisionGroup; // 0x108
	EInitialVelocityTypeEnum InitialVelocityType; // 0x10c
	FVector InitialLinearVelocity; // 0x110
	FVector InitialAngularVelocity; // 0x11c
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x128
};

struct UProceduralRoundedRectangleToolProperties : UProceduralRectangleToolProperties {
	float CornerRadius; // 0x80
	int32_t CornerSlices; // 0x84
};

struct UStaticMeshSimulationComponent : UActorComponent {
	bool Simulating; // 0xc8
	bool bNotifyCollisions; // 0xc9
	EObjectStateTypeEnum ObjectType; // 0xca
	float Mass; // 0xcc
	ECollisionTypeEnum CollisionType; // 0xd0
	EImplicitTypeEnum ImplicitType; // 0xd1
	int32_t MinLevelSetResolution; // 0xd4
	int32_t MaxLevelSetResolution; // 0xd8
	EInitialVelocityTypeEnum InitialVelocityType; // 0xdc
	FVector InitialLinearVelocity; // 0xe0
	FVector InitialAngularVelocity; // 0xec
	float DamageThreshold; // 0xf8
	UChaosPhysicalMaterial* PhysicalMaterial; // 0x100
	AChaosSolverActor* ChaosSolverActor; // 0x108
	FMulticastInlineDelegate OnChaosPhysicsCollision; // 0x110
	TArray<UPrimitiveComponent*> SimulatedComponents; // 0x130
};

struct USoundNodeConcatenator : USoundNode {
	TArray<float> InputVolume; // 0x48
};

struct UInterpTrackColorProp : UInterpTrackVectorBase {
	FName PropertyName; // 0x90
};

struct UComboBoxString : UWidget {
	TArray<FString> DefaultOptions; // 0x108
	FString SelectedOption; // 0x118
	FComboBoxStyle WidgetStyle; // 0x128
	FTableRowStyle ItemStyle; // 0x518
	FMargin ContentPadding; // 0xce0
	FMargin ItemPadding; // 0xcf0
	ETextJustify TextJustification; // 0xd00
	float MaxListHeight; // 0xd04
	bool HasDownArrow; // 0xd08
	bool EnableGamepadNavigationMode; // 0xd09
	FSlateFontInfo Font; // 0xd10
	FSlateColor ForegroundColor; // 0xd68
	bool bIsFocusable; // 0xd90
	FDelegate OnGenerateWidgetEvent; // 0xd94
	FMulticastInlineDelegate OnSelectionChanged; // 0xda8
	FMulticastInlineDelegate OnOpening; // 0xdb8
};

struct ALandscapeProxy : AActor {
	ULandscapeSplinesComponent* SplineComponent; // 0x310
	FGuid LandscapeGuid; // 0x318
	FIntPoint LandscapeSectionOffset; // 0x328
	int32_t MaxLODLevel; // 0x330
	float LODDistanceFactor; // 0x334
	ELandscapeLODFalloff LODFalloff; // 0x338
	float ComponentScreenSizeToUseSubSections; // 0x33c
	float LOD0ScreenSize; // 0x340
	float LOD0DistributionSetting; // 0x344
	float LODDistributionSetting; // 0x348
	float TessellationComponentScreenSize; // 0x34c
	bool UseTessellationComponentScreenSizeFalloff; // 0x350
	float TessellationComponentScreenSizeFalloff; // 0x354
	int32_t OccluderGeometryLOD; // 0x358
	int32_t StaticLightingLOD; // 0x35c
	UPhysicalMaterial* DefaultPhysMaterial; // 0x360
	float StreamingDistanceMultiplier; // 0x368
	UMaterialInterface* LandscapeMaterial; // 0x370
	UMaterialInterface* LandscapeHoleMaterial; // 0x398
	TArray<FLandscapeProxyMaterialOverride> LandscapeMaterialsOverride; // 0x3a0
	bool bMeshHoles; // 0x3b0
	char MeshHolesMaxLod; // 0x3b1
	TArray<URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x3b8
	int32_t VirtualTextureNumLods; // 0x3c8
	int32_t VirtualTextureLodBias; // 0x3cc
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x3d0
	float NegativeZBoundsExtension; // 0x3d4
	float PositiveZBoundsExtension; // 0x3d8
	TArray<ULandscapeComponent*> LandscapeComponents; // 0x3e0
	TArray<ULandscapeHeightfieldCollisionComponent*> CollisionComponents; // 0x3f0
	TArray<UHierarchicalInstancedStaticMeshComponent*> FoliageComponents; // 0x400
	bool bHasLandscapeGrass; // 0x474
	float StaticLightingResolution; // 0x478
	char CastShadow : 1; // 0x47c
	char bCastDynamicShadow : 1; // 0x47c
	char bCastStaticShadow : 1; // 0x47c
	char bCastFarShadow : 1; // 0x480
	char bCastHiddenShadow : 1; // 0x484
	char bCastShadowAsTwoSided : 1; // 0x488
	char bAffectDistanceFieldLighting : 1; // 0x48c
	FLightingChannels LightingChannels; // 0x48d
	char bUseMaterialPositionOffsetInStaticLighting : 1; // 0x490
	char bRenderCustomDepth : 1; // 0x490
	ERendererStencilMask CustomDepthStencilWriteMask; // 0x494
	int32_t CustomDepthStencilValue; // 0x498
	float LDMaxDrawDistance; // 0x49c
	FLightmassPrimitiveSettings LightmassSettings; // 0x4a0
	int32_t CollisionMipLevel; // 0x4b8
	int32_t SimpleCollisionMipLevel; // 0x4bc
	float CollisionThickness; // 0x4c0
	FBodyInstance BodyInstance; // 0x4c8
	char bGenerateOverlapEvents : 1; // 0x628
	char bBakeMaterialPositionOffsetIntoCollision : 1; // 0x628
	int32_t ComponentSizeQuads; // 0x62c
	int32_t SubsectionSizeQuads; // 0x630
	int32_t NumSubsections; // 0x634
	char bUsedForNavigation : 1; // 0x638
	char bFillCollisionUnderLandscapeForNavmesh : 1; // 0x638
	bool bUseDynamicMaterialInstance; // 0x63c
	ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x63d
	bool bUseLandscapeForCullingInvisibleHLODVertices; // 0x63e
	bool bHasLayersContent; // 0x63f
	TMap<UTexture2D*, ULandscapeWeightmapUsage*> WeightmapUsageMap; // 0x640
};

struct UInterpTrackInstSlomo : UInterpTrackInst {
	float OldTimeDilation; // 0x28
};

struct UUI_InteractiveRadialIcon : USGUI {
	int32_t InteractiveImageIndex; // 0x2d8
	FString InteractiveString; // 0x2e0
	char bIsSubMenu : 1; // 0x2f0
	FLinearColor SelectedColor; // 0x2f4
	FLinearColor UnSelectedColor; // 0x304
	UMaterialInstance* DelayMaterial; // 0x318
	FLinearColor DelayProgressColor; // 0x320
	UMaterialInstanceDynamic* DelayDynamicMaterial; // 0x330
	UImage* InteractiveDelayImage; // 0x338
	UImage* InteractiveImage; // 0x340
	UTextBlock* InteractiveText; // 0x348
	float LeftDelayTime; // 0x350
	TSoftObjectPtr<UTexture2D> SpecificSelectedIcon; // 0x358
	TSoftObjectPtr<UTexture2D> SpecificUnSelectedIcon; // 0x380
};

struct ULevelSequencePlayer : UMovieSceneSequencePlayer {
	FMulticastInlineDelegate OnCameraCut; // 0x688
};

struct UWindDirectionalSourceComponent : USceneComponent {
	float Strength; // 0x208
	float Speed; // 0x20c
	float MinGustAmount; // 0x210
	float MaxGustAmount; // 0x214
	float Radius; // 0x218
	char bPointWind : 1; // 0x21c
};

struct UDrawPolygonToolStandardProperties : UInteractiveToolPropertySet {
	EDrawPolygonDrawMode PolygonType; // 0x60
	EDrawPolygonOutputMode OutputMode; // 0x61
	float FeatureSizeRatio; // 0x64
	float ExtrudeHeight; // 0x68
	int32_t Steps; // 0x6c
	bool bAllowSelfIntersections; // 0x70
	bool bShowGizmo; // 0x71
};

struct UUI_ServerAdminPlayerRow : UUserWidget {
	UTextBlock* TbNikeName; // 0x260
	UTextBlock* TbAccountId; // 0x268
	UTextBlock* TbCharacterName; // 0x270
	UTextBlock* TbOnline; // 0x278
	UButton* ButtonPlayer; // 0x280
	UImage* ImageSelected; // 0x288
	UUI_AdminPlayerPanel* BindAdminPlayerPanel; // 0x290
};

struct UProceduralConeToolProperties : UProceduralShapeToolProperties {
	float Radius; // 0x70
	float Height; // 0x74
	int32_t RadialSlices; // 0x78
	int32_t HeightSubdivisions; // 0x7c
};

struct UAnimNotify_Harvest : UAnimNotify {
	FString AttackTag; // 0x38
};

struct UEdGraphPin_Deprecated : UObject {
	FString PinName; // 0x28
	FString PinToolTip; // 0x38
	EEdGraphPinDirection Direction; // 0x48
	FEdGraphPinType PinType; // 0x50
	FString DefaultValue; // 0xa8
	FString AutogeneratedDefaultValue; // 0xb8
	UObject* DefaultObject; // 0xc8
	FText DefaultTextValue; // 0xd0
	TArray<UEdGraphPin_Deprecated*> LinkedTo; // 0xe8
	TArray<UEdGraphPin_Deprecated*> SubPins; // 0xf8
	UEdGraphPin_Deprecated* ParentPin; // 0x108
	UEdGraphPin_Deprecated* ReferencePassThroughConnection; // 0x110
};

struct UMovieSceneSkeletalAnimationTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AnimationSections; // 0x80
	bool bUseLegacySectionIndexBlend; // 0x90
	FMovieSceneSkeletalAnimRootMotionTrackParams RootMotionParams; // 0x98
	bool bBlendFirstChildOfRoot; // 0xc8
};

struct AGameNetworkManager : AInfo {
	float BadPacketLossThreshold; // 0x310
	float SeverePacketLossThreshold; // 0x314
	int32_t BadPingThreshold; // 0x318
	int32_t SeverePingThreshold; // 0x31c
	int32_t AdjustedNetSpeed; // 0x320
	double LastNetSpeedUpdateTime; // 0x328
	int32_t TotalNetBandwidth; // 0x330
	int32_t MinDynamicBandwidth; // 0x334
	int32_t MaxDynamicBandwidth; // 0x338
	char bIsStandbyCheckingEnabled : 1; // 0x33c
	char bHasStandbyCheatTriggered : 1; // 0x33c
	float StandbyRxCheatTime; // 0x340
	float StandbyTxCheatTime; // 0x344
	float PercentMissingForRxStandby; // 0x348
	float PercentMissingForTxStandby; // 0x34c
	float PercentForBadPing; // 0x350
	float JoinInProgressStandbyWaitTime; // 0x354
	float MoveRepSize; // 0x358
	float MAXPOSITIONERRORSQUARED; // 0x35c
	float MAXNEARZEROVELOCITYSQUARED; // 0x360
	float CLIENTADJUSTUPDATECOST; // 0x364
	float MAXCLIENTUPDATEINTERVAL; // 0x368
	float MaxClientForcedUpdateDuration; // 0x36c
	float ServerForcedUpdateHitchThreshold; // 0x370
	float ServerForcedUpdateHitchCooldown; // 0x374
	float MaxMoveDeltaTime; // 0x378
	float MaxClientSmoothingDeltaTime; // 0x37c
	float ClientNetSendMoveDeltaTime; // 0x380
	float ClientNetSendMoveDeltaTimeThrottled; // 0x384
	float ClientNetSendMoveDeltaTimeStationary; // 0x388
	int32_t ClientNetSendMoveThrottleAtNetSpeed; // 0x38c
	int32_t ClientNetSendMoveThrottleOverPlayerCount; // 0x390
	bool ClientAuthorativePosition; // 0x394
	float ClientErrorUpdateRateLimit; // 0x398
	float ClientNetCamUpdateDeltaTime; // 0x39c
	float ClientNetCamUpdatePositionLimit; // 0x3a0
	bool bMovementTimeDiscrepancyDetection; // 0x3a4
	bool bMovementTimeDiscrepancyResolution; // 0x3a5
	float MovementTimeDiscrepancyMaxTimeMargin; // 0x3a8
	float MovementTimeDiscrepancyMinTimeMargin; // 0x3ac
	float MovementTimeDiscrepancyResolutionRate; // 0x3b0
	float MovementTimeDiscrepancyDriftAllowance; // 0x3b4
	bool bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x3b8
	bool bUseDistanceBasedRelevancy; // 0x3b9
};

struct UMockDataMeshTrackerComponent : USceneComponent {
	FMulticastInlineDelegate OnMeshTrackerUpdated; // 0x208
	bool ScanWorld; // 0x218
	bool RequestNormals; // 0x219
	bool RequestVertexConfidence; // 0x21a
	EMeshTrackerVertexColorMode VertexColorMode; // 0x21b
	TArray<FColor> BlockVertexColors; // 0x220
	FLinearColor VertexColorFromConfidenceZero; // 0x230
	FLinearColor VertexColorFromConfidenceOne; // 0x240
	float UpdateInterval; // 0x250
	UMRMeshComponent* MRMesh; // 0x258
};

struct ULandscapeComponent : UPrimitiveComponent {
	int32_t SectionBaseX; // 0x488
	int32_t SectionBaseY; // 0x48c
	int32_t ComponentSizeQuads; // 0x490
	int32_t SubsectionSizeQuads; // 0x494
	int32_t NumSubsections; // 0x498
	UMaterialInterface* OverrideMaterial; // 0x4a0
	UMaterialInterface* OverrideHoleMaterial; // 0x4a8
	TArray<FLandscapeComponentMaterialOverride> OverrideMaterials; // 0x4b0
	TArray<UMaterialInstanceConstant*> MaterialInstances; // 0x4c0
	TArray<UMaterialInstanceDynamic*> MaterialInstancesDynamic; // 0x4d0
	TArray<int8_t> LODIndexToMaterialIndex; // 0x4e0
	TArray<int8_t> MaterialIndexToDisabledTessellationMaterial; // 0x4f0
	UTexture2D* XYOffsetmapTexture; // 0x500
	FVector4 WeightmapScaleBias; // 0x510
	float WeightmapSubsectionOffset; // 0x520
	FVector4 HeightmapScaleBias; // 0x530
	FBox CachedLocalBox; // 0x540
	LazyObjectProperty CollisionComponent; // 0x55c
	UTexture2D* HeightmapTexture; // 0x578
	TArray<FWeightmapLayerAllocationInfo> WeightmapLayerAllocations; // 0x580
	TArray<UTexture2D*> WeightmapTextures; // 0x590
	ULandscapeLODStreamingProxy* LODStreamingProxy; // 0x5a0
	FGuid MapBuildDataId; // 0x5a8
	TArray<FGuid> IrrelevantLights; // 0x5b8
	int32_t CollisionMipLevel; // 0x5c8
	int32_t SimpleCollisionMipLevel; // 0x5cc
	float NegativeZBoundsExtension; // 0x5d0
	float PositiveZBoundsExtension; // 0x5d4
	float StaticLightingResolution; // 0x5d8
	int32_t ForcedLOD; // 0x5dc
	int32_t LODBias; // 0x5e0
	FGuid StateId; // 0x5e4
	FGuid BakedTextureMaterialGuid; // 0x5f4
	UTexture2D* GIBakedBaseColorTexture; // 0x608
	char MobileBlendableLayerMask; // 0x610
	UMaterialInterface* MobileMaterialInterface; // 0x618
	TArray<UMaterialInterface*> MobileMaterialInterfaces; // 0x620
	TArray<UTexture2D*> MobileWeightmapTextures; // 0x630
};

struct UAbilityTask_WaitAttributeChangeRatioThreshold : UAbilityTask {
	FMulticastInlineDelegate OnChange; // 0x80
	UAbilitySystemComponent* ExternalOwner; // 0x138
};

struct UAISenseConfig_Damage : UAISenseConfig {
	UAISense_Damage* Implementation; // 0x48
};

struct UAllianceListSlot : USGUI {
	UTextBlock* AllianceNameText; // 0x2d8
	UTextBlock* PlayerCountText; // 0x2e0
	UTextBlock* AllianceOwnerText; // 0x2e8
	UTextBlock* MemberCountText; // 0x2f0
	UImage* BGImage; // 0x2f8
	UDataButton* JoinDataButton; // 0x300
	TSoftObjectPtr<UTexture2D> NormalBGTexture; // 0x308
	TSoftObjectPtr<UTexture2D> SelectBGTexture; // 0x330
};

struct UARTrackedImage : UARTrackedGeometry {
	UARCandidateImage* DetectedImage; // 0xf8
	FVector2D EstimatedSize; // 0x100
};

struct ABaseCharacter : ACharacter {
	USGInventoryComponent* InventoryComponent; // 0x608
	USGBuffComponent* BuffComponent; // 0x610
	FTimerHandle BeginPlayNextTickTimer; // 0x618
	ECharacterType CharacterType; // 0x620
	FString CharacterName; // 0x628
	FText CharacterDisplayName; // 0x638
	FString GuildName; // 0x650
	FString GuildImage; // 0x660
	char bDisplayLevel : 1; // 0x690
	char bCanRebound : 1; // 0x690
	TWeakObjectPtr<UWidgetComponent> LevelNameHUDWidgetComponent; // 0x694
	FVector LevelNameHUDLocation; // 0x69c
	FVector BillBoardHUDLocation; // 0x6a8
	UUserWidget* DisplayHUDShowWidgetTemplate; // 0x6b8
	TArray<ASGStructure*> BeSawSentryTower; // 0x6c0
	char bHasCheckedBillBoard : 1; // 0x6d0
	char bBillBoardNeedShow : 1; // 0x6d0
	EBillBoardFriendly BillBoardFriendly; // 0x6d1
	TWeakObjectPtr<UMaterialBillboardComponent> BillboardComponent; // 0x6d4
	UTextureRenderTarget2D* SnapShotRenderTarget; // 0x6e0
	UMaterialInstanceDynamic* SnapShotDynamicMaterial; // 0x6e8
	float SnapShotCameraDistance; // 0x6f0
	FVector SnapShotCameraPivotOffset; // 0x6f4
	FVector SnapShotLocation; // 0x700
	float SnapShotYaw; // 0x70c
	int32_t RaceID; // 0x710
	char bShowHeadLevel : 1; // 0x714
	char bIsLockMovement : 1; // 0x720
	char bIsLockRotation : 1; // 0x720
	float CustomMaxSpeed; // 0x738
	float CustomGroundFriction; // 0x73c
	float CustomMaxAcceleration; // 0x740
	float CustomBrakingDeceleration; // 0x744
	float CustomBarkingFriction; // 0x748
	TArray<USGBuff*> RemoveBuffsClass; // 0x750
	char IsMoving : 1; // 0x760
	char HasMovmentInput : 1; // 0x760
	char bIsPlayerInput : 1; // 0x760
	char bPressedForward : 1; // 0x760
	char bPressedBackward : 1; // 0x760
	char bPressedLeft : 1; // 0x760
	char bPressedRight : 1; // 0x760
	FRotator JumpRotation; // 0x764
	FRotator LookingRotation; // 0x770
	FRotator LastVelocityRotation; // 0x77c
	FRotator LastMovementInputRotation; // 0x788
	float PreAimYaw; // 0x794
	float AimYawDelta; // 0x798
	float AimPitchDelta; // 0x79c
	float AimYawRate; // 0x7a0
	float MovingDirection; // 0x7a4
	float RotationOffset; // 0x7a8
	float RotationRateMultiplier; // 0x7ac
	float MoveForwardAxis; // 0x7b0
	float MoveRightAxis; // 0x7b4
	float TurnSpeed; // 0x7b8
	FVector MovementInput; // 0x7bc
	FVector2D AttackAimOffset; // 0x7c8
	FVector2D ConditionAimOffset; // 0x7d0
	FVector2D ConditionAimOffsetAngle; // 0x7d8
	ECustomMovementMode Enum_MovementMode; // 0x7e0
	ECustomMovementMode Enum_PrevMovementMode; // 0x7e1
	ERotationMode Enum_RotationMode; // 0x7e2
	ERotationMode Enum_LastRotationMode; // 0x7e3
	EMovementDirection Enum_MovementDirection; // 0x7e4
	EInputDirection Enum_CardinalDirection; // 0x7e5
	EInputDirection Enum_InputDirection; // 0x7e6
	UAnimMontage* TurnMontage; // 0x7e8
	UAnimMontage* MovingTurnMontage; // 0x7f0
	char bIsJumpping : 1; // 0x7f8
	char bIsCustomJumpping : 1; // 0x7f8
	UAnimMontage* TumblingMontage[0x4]; // 0x800
	UAnimMontage* GetUpMontage; // 0x820
	EViewMode Enum_ViewMode; // 0x829
	FVector2D FallingHeightCostHPConfig; // 0x82c
	FVector StartFallLocation; // 0x834
	EVisibilityBasedAnimTickOption Enum_CurrentTickPoseState; // 0x854
	float MinSlopeAngle; // 0x868
	float MaxSlopeWalkSpeed; // 0x86c
	char bUseFourAimDirection : 1; // 0x88c
	AActor* CustomInteractActor; // 0x890
	UAnimMontage* FullBodyMontage; // 0x898
	float FootStepTraceDistance; // 0x8a0
	float FootDecalRefreshTime; // 0x8a4
	float FootDecalLifeTime; // 0x8a8
	TMap<EFootDirectionType, FName> TMap_FootName; // 0x8b0
	FTimerHandle UpdateBeforeSurfaceTypeTimer; // 0x900
	float ShowFootEffectDistanceSquare; // 0x908
	EPhysicalSurface Enum_BeforeSurfaceType; // 0x90c
	EPhysicalSurface Enum_NewSurfaceType; // 0x90d
	UAnimMontage* InteractionMontage; // 0x918
	int32_t CurrentAttackDamageNum; // 0x920
	int32_t CurrentAttackExploitDamageNum; // 0x924
	UAnimMontage* PlayerShowMontage; // 0x928
	ETraceTypeQuery SwimTraceChannel; // 0x930
	char IsCustomWaterVolum : 1; // 0x931
	char IsCustomSwimRotation : 1; // 0x931
	char bShouldSwim : 1; // 0x931
	char bShouldSwimUp : 1; // 0x931
	char bUseCustomUpdateSpeed : 1; // 0x931
	float EnterWaterDistance; // 0x934
	float EnterSwimmingDistance; // 0x938
	float CrouchEnterSwimmingDistance; // 0x93c
	float SwimmingWaterSurfaceDistance; // 0x940
	float ExtraSwimmingUpDistance; // 0x944
	float SwimmingRotationRate; // 0x948
	float LeftSwimmingTime; // 0x94c
	float SwimmingUpAxis; // 0x950
	FTimerHandle LeftSwimmingTimer; // 0x958
	char bUseFrameUpdateSwimSpeed : 1; // 0x964
	TMap<ECustomSwimState, UCurveFloat*> TMap_CustomSwimCurves; // 0x968
	float UpdateSwimSpeedTime; // 0x9b8
	UCurveFloat* CurrentSwimSpeedCurve; // 0x9c0
	float SwimSpeedRate; // 0x9c8
	float SwimSpeedRateTime; // 0x9cc
	FTimerHandle UpdateSwimSpeedTimer; // 0x9d0
	APhysicsVolume* DefaultPhysicsVolumn; // 0x9d8
	float BlockCameraScale; // 0x9f0
	float AttackCameraScale; // 0x9f4
	FVector TPVCameraOffset; // 0x9f8
	float TPVArmLength; // 0xa04
	float TPVFOV; // 0xa08
	FVector TPVAimCameraOffset; // 0xa0c
	float TPVAimArmLength; // 0xa18
	float WeaponCameraTransitionDuration; // 0xa1c
	char bIsADS : 1; // 0xa20
	FVector FPVCameraOffset; // 0xa24
	FName FPVSocketName; // 0xa30
	char bIsRightShoulder : 1; // 0xa38
	FVector2D Vector2D_CameraMaxAngle; // 0xa3c
	float CameraInterpSpeed; // 0xa44
	float RiderCameraInterpSpeed; // 0xa48
	float CameraPitchTargetValue; // 0xa4c
	float CameraYawTargetValue; // 0xa50
	float CameraZoomFactorMax; // 0xa68
	float CameraZoomFactorMin; // 0xa6c
	int64_t UpdateCostSprintSPDateTime; // 0xa70
	FTimerHandle UpdateCostSprintSPTimer; // 0xa78
	char bIsRunCostSP : 1; // 0xa80
	int32_t TestSoliderType; // 0xa84
	EAimDirection Enum_CurrentAimDirection; // 0xa88
	EAimDirection CachedAttackDirection; // 0xa89
	EAimDirection Enum_CustomAimDirection; // 0xa8a
	UAnimMontage* EquipMontage; // 0xa90
	TArray<FWeaponTraceInfo> BodyTraces; // 0xa98
	char bIsPressedAttack : 1; // 0xaa8
	TArray<ECustomMovementMode> Enum_OpposeMovementMode; // 0xab0
	FPreAttackConfig Struct_PreAttackConfig; // 0xac0
	UAnimMontage* AttackMontage; // 0xae0
	UAnimMontage* CollectionAttackMontage; // 0xae8
	UAnimMontage* OffHandAttackMontage; // 0xaf0
	UAnimMontage* AttackReboundMontage; // 0xaf8
	UAnimMontage* RiderSprintAttackMontage; // 0xb00
	char bIsAttacking : 1; // 0xb08
	char bIsKickAttacking : 1; // 0xb08
	char bIsAttackEnd : 1; // 0xb08
	char bIsAttackCauserDamage : 1; // 0xb08
	TMap<EAttackSocketType, FName> TMap_AttackSocketNames; // 0xb10
	FAttackInfo Struct_CurrentAttackInfo; // 0xb60
	EDamageType Enum_CurrentAttackDamageType; // 0xbc0
	char bIsWantAttack : 1; // 0xbc1
	char bAutoPutPolearms : 1; // 0xbc1
	char bIsRiderSprintAttackCooling : 1; // 0xbc1
	TMap<EAimDirection, UMatineeCameraShake*> TMap_CameraShakes; // 0xbc8
	float AttackReboundStopPosition; // 0xc18
	float AttackReboundStopBlendTime; // 0xc1c
	UAnimMontage* AttackReboundHitMontage; // 0xc20
	FRuntimeFloatCurve AttackReboundRateCurve; // 0xc28
	char bIsAttackRebound : 1; // 0xcb0
	FTimerHandle AttackReboundRateTimer; // 0xcb8
	UAnimMontage* BlockMontage; // 0xcc8
	UAnimMontage* ActionMontage; // 0xcd0
	char bIsBlocking : 1; // 0xcd8
	char IsOffHandBlocking : 1; // 0xcd8
	EAimDirection Enum_BlockAimDirection; // 0xcd9
	float OutFightingDuration; // 0xcdc
	TWeakObjectPtr<AActor> CurrentAIAggroActor; // 0xce8
	TArray<FFightingEnemyServerData> InFightingServerEnemys; // 0xcf0
	FName AggroSoundID; // 0xd00
	USGSoundDatabase* SoundDatabase; // 0xd08
	TArray<TWeakObjectPtr<ABaseCharacter>> InFightingClientEnemys; // 0xd10
	float UpdateFightingBGMInterval; // 0xd28
	double LastUpdateFightingBGMTime; // 0xd30
	int32_t InFightingEnemyCount; // 0xd38
	char bIsTumble : 1; // 0xd48
	ETumbleState TumbleState; // 0xd49
	float GetUpCountDownDuration; // 0xd4c
	FTimerHandle GetUpCountDownTimer; // 0xd50
	UAnimMontage* ApplyTumblingMontage; // 0xd58
	FBodyBoneName Struct_BodyBoneConfig; // 0xd60
	EInputDirection Enum_DamageDirection; // 0xdb0
	UAnimMontage* HitMontage; // 0xdb8
	UAnimMontage* IgnoreHardStraightHitMontage; // 0xdc0
	char bIsHit : 1; // 0xdc8
	char bIsBlockHit : 1; // 0xdc8
	char bIsDead : 1; // 0xdc8
	char bIsWillDead : 1; // 0xe10
	char bWillDeadReduceDurable : 1; // 0xe10
	double CharacterLastDamageTime; // 0xe18
	int32_t MurderDeathCount; // 0xe20
	int32_t AccidentDeathCount; // 0xe24
	FDateTime CharacterLastDeathTime; // 0xe28
	float LastMakeDamageTime; // 0xe30
	FGuid LastAttackUniqueId; // 0xe34
	EAimDirection Enum_LastAimDirection; // 0xe44
	int32_t Hardness; // 0xe48
	float RuleDamageRate[0x4]; // 0xe4c
	int32_t SGCanBeDamaged; // 0xe5c
	float MaxReductionRate; // 0xe60
	float ReductionRateSlashing; // 0xe64
	float ReductionRateSlashingAdd; // 0xe68
	float ReductionRateSlashingConfig; // 0xe6c
	float ReductionRatePiercing; // 0xe70
	float ReductionRatePiercingAdd; // 0xe74
	float ReductionRatePiercingConfig; // 0xe78
	float ReductionRateCrushing; // 0xe7c
	float ReductionRateCrushingAdd; // 0xe80
	float ReductionRateCrushingConfig; // 0xe84
	float ReductionRateSiege; // 0xe88
	float ReductionRateSiegeAdd; // 0xe8c
	float ReductionRateSiegeConfig; // 0xe90
	float Charge; // 0xe94
	float ChargeAdd; // 0xe98
	float ChargeConfig; // 0xe9c
	float EmptyKickCharge; // 0xea0
	float ShieldCharge; // 0xea4
	float ChargeRes; // 0xea8
	float ChargeResAdd; // 0xeac
	float ChargeResConfig; // 0xeb0
	float ReductionRateFallAdd; // 0xeb4
	float BuffSpeedMulAdd; // 0xeb8
	float BuffDamageMulAdd; // 0xebc
	float LightArmorSpeedMulAdd; // 0xec0
	float HeavyArmorSpeedMulAdd; // 0xec4
	float LightArmorDurableResMulAdd; // 0xec8
	float HeavyArmorDurableResMulAdd; // 0xecc
	float DefaultLinearDamping; // 0xed0
	float DefaultAngularDamping; // 0xed4
	FName DeathTargetBoneName; // 0xed8
	char CanImpluseRagdoll : 1; // 0xee0
	float DeathImpulseMultiplier; // 0xee4
	float DeathLinearDamping; // 0xee8
	float DeathAngularDamping; // 0xeec
	TWeakObjectPtr<ASGStructureItemContainer> DeathItemContainer; // 0xef0
	float CollectionDamageMultiply; // 0xf08
	char bShowChargeDebug : 1; // 0xf18
	FChargeDamageTypeData ChargeDamageTypeData[0x9]; // 0xf1c
	TArray<FDeathExploitConifg> DeathExploitConifg; // 0xf68
	FString DeathDropTypeName; // 0xf78
	UDataTable* DeathDropTable; // 0xf88
	UDataTable* ExtraDeathDropTable; // 0xf90
	USGExploitComponent* DeathExploitComponent; // 0xf98
	char bUseCorpseDissolve : 1; // 0xfb0
	float CorpseDissolveTime; // 0xfb4
	float CorpseDissolveFinishTime; // 0xfb8
	float SavedCorpseLeftTime; // 0xfbc
	int64_t CorpseLeftTimeTick; // 0xfc0
	float CorpseDraggedDecayRate; // 0xfc8
	char bIsDragged : 1; // 0xfcc
	char bOnlyInteractiveInventorySameTeam : 1; // 0xfcc
	char bBeMountSkipAnim : 1; // 0xfcc
	float RemindDurableLine; // 0xff0
	ASGWeapon* MainHandWeapon; // 0xff8
	ASGWeapon* HolsterWeapon; // 0x1000
	ASGWeapon* OffHandWeapon; // 0x1008
	ASGWeapon* DefaultWeapon; // 0x1010
	FTimerHandle ContinueUseQuickItemHandle; // 0x1018
	TMap<FName, float> AttachWeaponMorphValues; // 0x1020
	int32_t MainHandWeaponSlot; // 0x1070
	int32_t OffHandWeaponSlot; // 0x1074
	char bSpawnDefaultWeapon : 1; // 0x108d
	ASGWeapon* DefaultWeaponTemplate[0x2]; // 0x1090
	UAnimMontage* ConsumeMontage; // 0x10b8
	int64_t PostCloudTime; // 0x10c8
	FTimerHandle PostCloudDataTimer; // 0x10d0
	char bGameManager : 1; // 0x10d8
	float ViewTraceDistatnce; // 0x10dc
	float ViewTraceRadius; // 0x10e0
	float ViewOverlapDistatnce; // 0x10e4
	float ViewOverlapRadius; // 0x10e8
	float LadderReverseCoolingMaxTime; // 0x10f0
	UAnimMontage* LadderMontage; // 0x10f8
	UAnimMontage* LadderExitMontage; // 0x1100
	UAnimMontage* LadderSourceMontage; // 0x1108
	TWeakObjectPtr<ASGStructureLadder> ClimbingLadder; // 0x1114
	UAnimMontage* AerialLadderMontage; // 0x1138
	TWeakObjectPtr<ASGStructureLadder> ActiveLadder; // 0x1140
	char bCanBeClimbUp : 1; // 0x1148
	TArray<TWeakObjectPtr<ASGStructureAmmoBox>> FoodStructures; // 0x1150
	ASGStructureSeat* SeatingStructure; // 0x1160
	ASGStructureSeat* SaveGameSeatingStructure; // 0x1168
	int32_t SeatIndex; // 0x1170
	TArray<FLastItemState> LastUsedItemStateArray; // 0x1178
	TArray<TWeakObjectPtr<UActorComponent>> SeatStructureUnRegisteredComponents; // 0x1188
	float ServerSeatedViewRotationYaw; // 0x11a8
	float ServerSeatedViewRotationPitch; // 0x11ac
	char ShowDebugTrace : 1; // 0x11b0
	float ExtraMaxSpeedModifier; // 0x11b4
	float MaxHP; // 0x11b8
	char bMaxHPChanged : 1; // 0x11bc
	float MaxHPAdd; // 0x11c0
	float MaxHPMulAdd; // 0x11c4
	float MAXHPConfig; // 0x11c8
	float MaxHPRandom; // 0x11cc
	float HP; // 0x11d0
	float LocalHP; // 0x11d4
	float LastRestHP; // 0x11d8
	char bHPChanged : 1; // 0x11dc
	float HPRecover; // 0x11e0
	float HPRecoverConfig; // 0x11e4
	float HPRecoverAdd; // 0x11e8
	float HPRecoverRandom; // 0x11ec
	float HPRecoverMulAdd; // 0x11f0
	float HPRecoverMaxHpMul; // 0x11f4
	FCharacterSPConfig CharacterSPConfig; // 0x11f8
	float MaxSP; // 0x12d0
	float MaxSPAdd; // 0x12d4
	float MaxSPMulAdd; // 0x12d8
	float MaxSPConfig; // 0x12dc
	float MaxSPRandom; // 0x12e0
	float WildHPMulAdd; // 0x12e4
	float WildAttackMulAdd; // 0x12e8
	float WildDefenseMulAdd; // 0x12ec
	float WildExpMulAdd; // 0x12f0
	float WildAttackStructureMulAdd; // 0x12f4
	float BuffFireDamageMulAdd; // 0x12f8
	float BuffFireResMulAdd; // 0x12fc
	float BuffBleedDamageMulAdd; // 0x1300
	float BuffBleedResMulAdd; // 0x1304
	float TumbleOnGroundResMulAdd; // 0x1308
	float TumbleOnVehicleResMulAdd; // 0x130c
	float SlashingArmorMulAdd; // 0x1310
	float PiercingArmorMulAdd; // 0x1314
	float CrushingArmorMulAdd; // 0x1318
	float SiegeArmorMulAdd; // 0x131c
	float LightArmorMulAdd; // 0x1320
	float HeavyArmorMulAdd; // 0x1324
	float ShieldBlockArrowAddItemRate; // 0x1328
	FTimerHandle TiredTimer; // 0x1330
	float TiredLockTime; // 0x1338
	float TiredAttackSpeedMul; // 0x133c
	float TiredAttackDamageMul; // 0x1340
	float SP; // 0x1348
	float SPRecover; // 0x134c
	float SPRecoverConfig; // 0x1350
	float SPRecoverAdd; // 0x1354
	float SPRecoverRandom; // 0x1358
	float SPRecoverMulAdd; // 0x135c
	float MaxHunger; // 0x1360
	char bMaxHungerChanged : 1; // 0x1364
	float MaxHungerAdd; // 0x1368
	float MaxHungerMulAdd; // 0x136c
	float MaxHungerConfig; // 0x1370
	float MaxHungerRandom; // 0x1374
	float Hunger; // 0x1378
	char bHungerChanged : 1; // 0x137c
	float HungerRecover; // 0x1380
	float HungerRecoverConfig; // 0x1384
	float HungerRecoverAdd; // 0x1388
	float HungerRecoverRandom; // 0x138c
	float LastHungerValue; // 0x1390
	float OnLineHungerConsume; // 0x1394
	float OffLineHungerConsume; // 0x1398
	float HungerToHPConsume; // 0x139c
	float HungerToSPConsume; // 0x13a0
	float HungerConsumeHPMul; // 0x13a4
	float HungerRecoverHPMul; // 0x13a8
	float BreatheConsumeHPMul; // 0x13ac
	float HungerConsumeMulAdd; // 0x13b0
	float WillDeadHPConsume; // 0x13b4
	float Breathe; // 0x13b8
	float BreatheRecover; // 0x13bc
	float BreatheRecoverConfig; // 0x13c0
	float BreatheRecoverAdd; // 0x13c4
	float BreatheConsume; // 0x13c8
	float BreatheConsumeConfig; // 0x13cc
	float BreatheConsumeAdd; // 0x13d0
	float Weight; // 0x13d4
	float MaxWeight; // 0x13d8
	float MaxWeightConfig; // 0x13dc
	float MaxWeightAdd; // 0x13e0
	float MaxWeightRandom; // 0x13e4
	float MaxWeightMulAdd; // 0x13e8
	float OverWeightRatio; // 0x13ec
	float OverWeightSpeedMul; // 0x13f0
	float ShieldsMoveSpeedBonusAdd; // 0x13f4
	char bCanStun : 1; // 0x13f8
	float StunProbability; // 0x13fc
	float TamedStunProbability; // 0x1400
	char bIsStun : 1; // 0x1404
	float MaxStun; // 0x1408
	float MaxStunAdd; // 0x140c
	float MaxStunMulAdd; // 0x1410
	float MaxStunConfig; // 0x1414
	float MaxStunRandom; // 0x1418
	float InfluenceHungerRecoverMulStunned; // 0x141c
	float stun; // 0x1420
	float StunRecover; // 0x1424
	float StunRecoverConfig; // 0x1428
	float StunRecoverAdd; // 0x142c
	float StunRecoverRandom; // 0x1430
	FStunAnim StunAnim; // 0x1438
	TWeakObjectPtr<ABaseCharacter> VirtualCarriedCharacter; // 0x1478
	ABaseCharacter* SaveGameCarriedCharacter; // 0x1480
	TWeakObjectPtr<ABaseCharacter> CarriedCharacter; // 0x1488
	TWeakObjectPtr<ABaseCharacter> CarriedCharacterTarget; // 0x1490
	FVector CarriedVectorAxis; // 0x1498
	TWeakObjectPtr<ABaseCharacter> CarriedCharacterParent; // 0x14a4
	TWeakObjectPtr<ASGStructureFunctionRack> CarriedStructureParent; // 0x14ac
	UAnimMontage* CarriedMontage; // 0x14b8
	float CarryUpMoveMulti; // 0x14c0
	FName CarryUpSocket; // 0x14c4
	float CarryUpMaxDistance; // 0x14cc
	EGeneralsStunStatusType StunStatusType; // 0x14d0
	char bCanTame : 1; // 0x14d2
	char bIsRackFinishTamed : 1; // 0x14d2
	FGuid TamingOwnerId; // 0x14d4
	FGuid TamingGuildId; // 0x14e4
	FString TamingOwnerCharacterName; // 0x14f8
	float AfterStunTameTime; // 0x1508
	float DamageTameRatio; // 0x150c
	float StunnedDamageTameRatio; // 0x1510
	float MaxTame; // 0x1514
	float MaxTameAdd; // 0x1518
	float MaxTameMulAdd; // 0x151c
	float MaxTameConfig; // 0x1520
	float MaxTameRandom; // 0x1524
	float tame; // 0x1528
	FTimerHandle TameLeftTimeTimer; // 0x1530
	float TameRecover; // 0x1538
	float TameRecoverConfig; // 0x153c
	float TameRecoverAdd; // 0x1540
	float TameRecoverRandom; // 0x1544
	float OccupyLimitTotalNum; // 0x1548
	float OccupyLimitTotalNumConfig; // 0x154c
	float OccupyLimitTotalPrice; // 0x1550
	float OccupyLimitTotalPriceConfig; // 0x1554
	int32_t DefaultLifeCount; // 0x1558
	int32_t DefaultDeathReduceLife; // 0x155c
	float DeathReduceLifeMulAdd; // 0x1560
	int32_t Level; // 0x1588
	float RandomLevel; // 0x158c
	int32_t MaxLevel; // 0x1590
	float CurrentExp; // 0x1594
	float LevelUpExp; // 0x1598
	float ExpMulAdd; // 0x159c
	float HorseAddExpMulAdd; // 0x15a0
	bool NeedGenerateBaseData; // 0x15a4
	TWeakObjectPtr<ASGPlayerController> BelongPlayerController; // 0x15b0
	TWeakObjectPtr<ASGCharacter> BelongPlayer; // 0x15b8
	FString BelongPlayerName; // 0x15c0
	float CreatedSkillExp; // 0x15d0
	int32_t CurrentSkillPoints; // 0x15d4
	UCurveTable* AttributeCurveTable; // 0x15d8
	UCurveTable* SkillDataTable; // 0x15e0
	UCurveTable* AddSkillDataTable; // 0x15e8
	UCurveTable* SkillMasteryDataTable; // 0x15f0
	UCurveTable* SKillPointsConsumeTable; // 0x15f8
	UCurveTable* SKillPointsAddPerkPointsTable; // 0x1600
	UCurveTable* SkillAndPerkPointsDataTable; // 0x1608
	float HungerRecoverHPThreshold; // 0x1610
	float UpdateDataInterval; // 0x1614
	FTimerHandle UpdateDataITimer; // 0x1618
	char bCheatAccRecovery : 1; // 0x1620
	TArray<FBuffNetData> ReplicatedBuffData; // 0x1628
	bool bAppearanceEnabled; // 0x1648
	ECharacterSex Sex; // 0x1649
	char bAutoDecayDust : 1; // 0x16ac
	FVector2D DustAmountRange; // 0x16b0
	float DustKeepDuration; // 0x16b8
	float DustDecaySpeed; // 0x16bc
	float DustAmount; // 0x16c0
	FVector2D BloodAmountRange; // 0x16c4
	UCurveFloat* BloodAmountCurve; // 0x16d0
	float BloodAmount; // 0x16d8
	char bAutoDecayBurn : 1; // 0x16dc
	FVector2D BurnAmountRange; // 0x16e0
	float BurnKeepDuration; // 0x16e8
	float BurnDecaySpeed; // 0x16ec
	float BurnAmount; // 0x16f0
	float LevelUpEffectSpeed; // 0x16f8
	float LevelUpEffectAmount; // 0x16fc
	FPlatformInfo PlatformInfo; // 0x1700
	TArray<FPlatformStructure> PlatformStructures; // 0x1718
	char bSupportPlatformStructure : 1; // 0x1728
	char bMaxStructures : 1; // 0x1728
	int32_t MaxPlatformStructuresNum; // 0x172c
	int32_t MaxPlatformStructuresHeight; // 0x1730
	int32_t MaxPlatformStructuresDistance2D; // 0x1734
	ASGStructure* PlatformAutoSpawnStructure; // 0x1738
	FVector AutoSpawnStructureLocOffset; // 0x1740
	FRotator AutoSpawnStructureRotOffset; // 0x174c
	char bAutoSpawnPlatform : 1; // 0x1758
	USGItem* AutoSpawnPlatformItem; // 0x1760
	char bIsSleeping : 1; // 0x1768
	char bIsPlaySleepMontage : 1; // 0x1768
	UAnimMontage* SleepMontage; // 0x1770
	int32_t SleepDays; // 0x1778
	FTimerHandle SleepTimer; // 0x1780
	char bIsDormant : 1; // 0x1788
	char bVolumnStatistics : 1; // 0x1788
	char bCheckStaticSpawnVolume : 1; // 0x1788
	char bManualGenerated : 1; // 0x1788
	char bIsReturnSpawnLocation : 1; // 0x1788
	char bIsStronghold : 1; // 0x1788
	float StrongholdRange; // 0x178c
	float ChaseRange; // 0x1790
	FVector SpawnLocation; // 0x1794
	FRotator SpawnRotation; // 0x17a0
	FVector SleepLocation; // 0x17ac
	FRotator SleepRotation; // 0x17b8
	FVector RandomOriginLocation; // 0x17c4
	float RandomRange; // 0x17d0
	char bIsKeepingInPlace : 1; // 0x17d4
	FVector KeepInPlaceLocation; // 0x17d8
	FIgnoreActorData Struct_IgnoreActorData; // 0x17e4
	FMontageReplicationData RelaxedReplicationData; // 0x17f0
	UAnimMontage* RelaxedMontage; // 0x1808
	TArray<FVirtualStaticMeshData> VirtualPropStaticMeshs; // 0x1810
	TArray<FVirtualSkeletalMeshData> VirtualPropSkeletalMeshs; // 0x1820
	char bClientWantUseCantCrouchWeapon : 1; // 0x1830
	char bClientCanCrouch : 1; // 0x1830
	FTimerHandle SukenTimer; // 0x1838
	bool CanFloatingInWater; // 0x1841
	TMap<FName, FBoneFloatingData> BoneFloatingMap; // 0x1848
	float SunkenDuration; // 0x1898
	float FloatingLinearDamping; // 0x189c
	float FloatingAngularDamping; // 0x18a0
	FVoiceData VoiceData; // 0x18a8
	FMountConfig Struct_MountConfig; // 0x18b8
	UAnimMontage* MountMontage; // 0x1988
	UAnimMontage* DismountMontage; // 0x1990
	UAnimMontage* GaitChangedMontage; // 0x1998
	FRiderData RiderData; // 0x19b8
	TWeakObjectPtr<ABaseCharacter> VehicleBaseCharacter; // 0x19e8
	TWeakObjectPtr<ASG_AnimalVehicleCharacter> SG_AnimalVehicleCharacter; // 0x19f0
	TWeakObjectPtr<ASG_HorseCharacter> SG_HorseCharacter; // 0x19f8
	TWeakObjectPtr<APawn> VirtualVehiclePawn; // 0x1a00
	TWeakObjectPtr<ACharacter> VirtualRecusePawn; // 0x1a08
	TWeakObjectPtr<ACharacter> IgnoreCollisionCharacter; // 0x1a10
	TArray<FRiderData> VirtualRiderData; // 0x1a18
	char bIsMovingCapsuleCollision : 1; // 0x1a28
	TMap<EVehicleType, FAnimalsAnimsConfig> TMap_RiderAnims; // 0x1a30
	int32_t bEnableFastMount; // 0x1a80
	int32_t bEnableFastDismount; // 0x1a84
	int32_t bEnableMovingMount; // 0x1a88
	int32_t bEnableFastControlVehicle; // 0x1a90
	UCurveTable* HeavyArmorPunishTable; // 0x1a98
	UCurveTable* LightArmorPunishTable; // 0x1aa0
	TWeakObjectPtr<ABaseCharacter> RiderCharacter; // 0x1aa8
	ABaseCharacter* SaveGameRiderCharacter; // 0x1ab0
	TWeakObjectPtr<ABaseCharacter> BePulledCharacter; // 0x1ad8
	char bReceiveUpCharacterSetsWeight : 1; // 0x1af8
	char bIgnoreOtherCapsuleImpulse : 1; // 0x1c1c
	char bCanCapsuleImpulse : 1; // 0x1c1c
	float CapsuleImpulseDistance; // 0x1c20
	char bImmobilized : 1; // 0x1c24
	char bPreventImmobilize : 1; // 0x1c24
	TArray<TWeakObjectPtr<ABaseCharacter>> BeFollowCharacters; // 0x1c28
	char FormationIndex; // 0x1c38
	char bShowDamageDebug : 1; // 0x1c48
	double StartNewMoveRightAxisTime; // 0x1c50
	float CallFollowRadius; // 0x1c58
	UTexture2D* KillTexture; // 0x1c60
	char bCanCreateBloodDecal : 1; // 0x1c68
	char DestroyNoDropFlag : 1; // 0x1c68
	char bAllowLogicInactive : 1; // 0x1c68
	char bLogicInactiveDestroy : 1; // 0x1c68
	double LastLogicInactiveTime; // 0x1c70
	char bLogicInactive : 1; // 0x1c78
	float TotalLogicInactiveTime; // 0x1c7c
	FDateTime LastLogicInactiveDateTime; // 0x1c80
	char bParentManageLogicActive : 1; // 0x1c88
	TArray<TWeakObjectPtr<UActorComponent>> LogicInactiveUnRegisteredComponents; // 0x1d08
	TArray<TWeakObjectPtr<ABaseCharacter>> UpCharacterSets; // 0x1d50
	TWeakObjectPtr<AActor> BaseFloorActor; // 0x1d60
	EUpdateRateShiftBucket UpdateRateShiftBucket; // 0x1d68
	int32_t BaseNonRenderedUpdateRate; // 0x1d6c
	char bShouldUseLodMap : 1; // 0x1d70
	TMap<int32_t, int32_t> LODToFrameSkipMap; // 0x1d78
	TArray<float> BaseVisibleDistanceFactorThesholds; // 0x1dc8
	char bStepShouldMakeNoise : 1; // 0x1dd8
	char bShowMakeNoise : 1; // 0x1dd8
	float BaseMakeNoiseRange; // 0x1ddc
	float WeaponDefaultNoiseValue; // 0x1de0
	float EquippedItemDefaultNoiseValue; // 0x1de4
	FTimerHandle TeleportToPlayerActorTimer; // 0x1e08
	EAIAggressionType Enum_AIAggressionType; // 0x1e11
	TArray<bool> AIAttackFilters; // 0x1e18
	int32_t ChunkLifeCount; // 0x1e28
	FGuid ChunkUid; // 0x1e2c
	float ReceiveCommandRange; // 0x1e48
	float ExtraGravityZMulAdd; // 0x1e4c
	float ExtraJumpZVelocityMulAdd; // 0x1e50
	float OverrideWalkableFloorAngle; // 0x1e54
	char HasForcedAttackEnemy : 1; // 0x1e58
	char bUseJournal : 1; // 0x1e58
	TMap<EAIFollowType, float> TMap_FollowDistanceConfig; // 0x1e60
	EAIFollowType Enum_AIFollowType; // 0x1eb0
	EAISenseSightRadiusType Enum_AISenseSightRadiusType; // 0x1eb1
	float AISenseSightRadiusMulAdd; // 0x1eb4
	float AISenseHearRadiusMulAdd; // 0x1eb8
	FRoadPathConfig SG_RoadPathConfig; // 0x1ec0
	FVector2D CustomDesiredFollowOffset; // 0x1f10
	char bIsLeader : 1; // 0x1f18
	float SpecialSpawnDestroyDistanceToPlayer; // 0x1f1c
	float SpecialSpawnDestroyAngleToPlayer; // 0x1f20
	float RefreshSpecialSpawnNpcDataInterval; // 0x1f24
	char bIsGuildEventSpawnNpc : 1; // 0x1f28
	char bIsSpecialSpawnNpc : 1; // 0x1f28
	char bShouldCheckDestroyTime : 1; // 0x1f28
	char bIsWithinDestroyTime : 1; // 0x1f28
	float SpecialSpawnStartDestroyTime; // 0x1f2c
	float SpecialSpawnStopDestroyTime; // 0x1f30
	TWeakObjectPtr<ANpcSpawnInfo> SpecialNpcSpawnInfo; // 0x1f34
	TWeakObjectPtr<AActor> SpecialNpcEnemy; // 0x1f3c
	FVector SpecialTargetLoc; // 0x1f44
	float SpecialNpcAISenseSightRadiusMulAdd; // 0x1f50
	int32_t SpecialNpcSpawnInfoIndex; // 0x1f54
	double LastRefreshSpecialSpawnNpcDataTime; // 0x1f58
	TWeakObjectPtr<ANpcSpawnVolume> BindNpcSpawnVolume; // 0x1f60
	int32_t CurGuardIndex; // 0x1f68
	char bIsEquipWeaponGuard : 1; // 0x1f6c
	char bIsWaitingChangeGuard : 1; // 0x1f6c
	FTimerHandle WaitingChangeGuardTimer; // 0x1f70
	float WaitGuardTime; // 0x1f78
	char bWantControlStructure : 1; // 0x1f7c
	TArray<FName> AISenseSightCheckSocketName; // 0x1f80
	int32_t OfficialJob; // 0x1f90
	char bCheatToggleRole : 1; // 0x1f94
	UAnimSequence* PreviewRiderAnim; // 0x1f98
	UAnimSequence* PreviewVehicleAnim; // 0x1fa0
	char bAllowSleep : 1; // 0x1fa8
	char bForceSleep : 1; // 0x1fa8
	FString StartSleepTime; // 0x1fb0
	FString EndSleepTime; // 0x1fc0
	float SleepSensesRangeMul; // 0x1fd0
	char bIsFleeing : 1; // 0x1fd4
	char bXianChengGuard : 1; // 0x1fd4
	FPreviewCameraSetting DeadPreviewSetting; // 0x1fe8
	float CurrentVigilanceValue; // 0x202c
	float WorkingProgress; // 0x2030
	float MaxWorkingProgress; // 0x2034
	char bShowWorkingProgress : 1; // 0x2038
	char bHadBattleSafeVolumeHandle : 1; // 0x2090
	char bIsWorking : 1; // 0x2090
	char bEnvironmentChanged : 1; // 0x2090
	TArray<ASGStructureItemContainer*> InAgainstEnvironmentStructure; // 0x2098
	ANatureEnvironmentVolume* CurrentEffectEV; // 0x20a8
	EEnvironmentVolumeType CurrentEffectEVType; // 0x20b0
	EEnvironmentVolumeType AddBuffEnvironmentType; // 0x20b1
	float ResistanceHot; // 0x20b4
	float ResistanceCold; // 0x20b8
	float ResistancePoison; // 0x20bc
	float ResistanceHotAdd; // 0x20c0
	float ResistanceColdAdd; // 0x20c4
	float ResistancePoisonAdd; // 0x20c8
	float ResistanceHotAddMultiAdd; // 0x20cc
	float ResistanceColdAddMultiAdd; // 0x20d0
	float ResistancePoisonAddMultiAdd; // 0x20d4
	float ResistanceHotMultiAdd; // 0x20d8
	float ResistanceColdMultiAdd; // 0x20dc
	float ResistancePoisonMultiAdd; // 0x20e0
	TArray<float> ProtectionEVValue; // 0x20e8
	float WoundMaxHPMulAdd; // 0x2100
	float WoundMaxSPMulAdd; // 0x2104
	float WoundMaxWeightMulAdd; // 0x2108
};

struct ASGStructureTurretAnimalWatch : ASGStructureTurret {
	int32_t PutAnimalInMaxNum; // 0x14d8
	int32_t AnimalWatchLifeTime; // 0x14dc
	ASG_AnimalsCharacter* AnimalTemplate; // 0x14e0
	float SearchInterval; // 0x14e8
	float SearchRadius; // 0x14ec
	char bIsDebugSearch : 1; // 0x14f0
	TArray<FAnimalWatchDataEntry> AnimalWatchEntries; // 0x14f8
	float NoTargetDeadTime; // 0x1508
};

struct UDynamicEntryBoxBase : UWidget {
	EDynamicBoxType EntryBoxType; // 0x108
	FVector2D EntrySpacing; // 0x10c
	TArray<FVector2D> SpacingPattern; // 0x118
	FSlateChildSize EntrySizeRule; // 0x128
	EHorizontalAlignment EntryHorizontalAlignment; // 0x130
	EVerticalAlignment EntryVerticalAlignment; // 0x131
	int32_t MaxElementSize; // 0x134
	FRadialBoxSettings RadialBoxSettings; // 0x138
	FUserWidgetPool EntryWidgetPool; // 0x158
};

struct UImageSequenceProtocol_EXR : UImageSequenceProtocol {
	bool bCompressed; // 0xd8
	EHDRCaptureGamut CaptureGamut; // 0xd9
};

struct ASceneObjectsManageDebuger : AActor {
	USceneComponent* SceneRoot; // 0x310
	char bEnableDebug : 1; // 0x318
	char bEnableDraw : 1; // 0x318
	char bEnableCount : 1; // 0x318
	char bOverrideDrawFolaigeTree : 1; // 0x318
	char bUseBoxOverlap : 1; // 0x318
	char bUseMainPCLoc : 1; // 0x318
	char bDrawOverlapSizeBoxInfo : 1; // 0x318
	char bDrawInsideTreeBox : 1; // 0x318
	char bUseUnifiedDrawInfoColor : 1; // 0x319
	char bForceChangeOverlapedElementMask : 1; // 0x319
	int32_t ForceChangedTargetMask; // 0x31c
	float DrawInfoDuration; // 0x320
	float DrawInfoScale; // 0x324
	FColor DrawInfoColor; // 0x328
	FColor RadiusColor[0x4]; // 0x32c
	float OverlapRadiuses[0x4]; // 0x33c
	float OverlapXExtents[0x4]; // 0x34c
	float OverlapYExtents[0x4]; // 0x35c
	int32_t OverlapMasks[0x4]; // 0x36c
	FColor OverlapDrawColors[0x4]; // 0x37c
	FColor InstanceTreeRadiusColor; // 0x38c
	float InstanceTreeOverlapRadius; // 0x390
	float InstanceTreeOverlapXExtent; // 0x394
	float InstanceTreeOverlapYExtent; // 0x398
	FColor InstanceTreeOverlapDrawColor; // 0x39c
	FColor CountOverlapRadiusColor; // 0x3a0
	float CountOverlapRadius; // 0x3a4
	int32_t CountOverlapMask; // 0x3a8
	int32_t CountOverlapLoopTime; // 0x3ac
};

struct UPolyEditInsetProperties : UInteractiveToolPropertySet {
	bool bReproject; // 0x60
	float Softness; // 0x64
	bool bBoundaryOnly; // 0x68
	float AreaScale; // 0x6c
};

struct UUIArtofWarSlot : USGUI {
	UButton* Button_Background; // 0x2d8
	UImage* Image_Icon; // 0x2e0
	UImage* Image_IconBG; // 0x2e8
	UTextBlock* TextBlock_Name; // 0x2f0
	UTextBlock* TextBlock_Exp; // 0x2f8
	UTextBlock* TextBlock_Level; // 0x300
	UProgressBar* ProgressBar_Exp; // 0x308
	FButtonStyle HasLearnButtonStyle; // 0x310
	FButtonStyle HasNotLearnButtonStyle; // 0x588
	TWeakObjectPtr<USGPerk> BindPerk; // 0x800
	TWeakObjectPtr<UUIArtofWarPanel> ParentUI; // 0x808
};

struct ALevelScriptActor : AActor {
	char bInputEnabled : 1; // 0x310
};

struct UTestMovieSceneSubTrack : UMovieSceneSubTrack {
	TArray<UMovieSceneSection*> SectionArray; // 0x88
};

struct UTransformGizmo : UInteractiveGizmo {
	UTransformProxy* ActiveTarget; // 0x40
	bool bSnapToWorldGrid; // 0x48
	bool bGridSizeIsExplicit; // 0x49
	FVector ExplicitGridSize; // 0x4c
	bool bRotationGridSizeIsExplicit; // 0x58
	FRotator ExplicitRotationGridSize; // 0x5c
	bool bSnapToWorldRotGrid; // 0x68
	bool bUseContextCoordinateSystem; // 0x69
	EToolContextCoordinateSystem CurrentCoordinateSystem; // 0x6c
	TArray<UPrimitiveComponent*> ActiveComponents; // 0x100
	TArray<UPrimitiveComponent*> NonuniformScaleComponents; // 0x110
	TArray<UInteractiveGizmo*> ActiveGizmos; // 0x120
	UGizmoConstantFrameAxisSource* CameraAxisSource; // 0x140
	UGizmoComponentAxisSource* AxisXSource; // 0x148
	UGizmoComponentAxisSource* AxisYSource; // 0x150
	UGizmoComponentAxisSource* AxisZSource; // 0x158
	UGizmoComponentAxisSource* UnitAxisXSource; // 0x160
	UGizmoComponentAxisSource* UnitAxisYSource; // 0x168
	UGizmoComponentAxisSource* UnitAxisZSource; // 0x170
	UGizmoTransformChangeStateTarget* StateTarget; // 0x178
	UGizmoScaledTransformSource* ScaledTransformSource; // 0x180
};

struct UVariant : UObject {
	TArray<FVariantDependency> Dependencies; // 0x28
	FText DisplayText; // 0x38
	TArray<UVariantObjectBinding*> ObjectBindings; // 0x68
	UTexture2D* Thumbnail; // 0x78
};

struct UUI_N_Inventory : USGUI {
	UN_EquipPanel* EquipPanel; // 0x2d8
	UN_CraftPanel* CraftPanel; // 0x2e0
	UN_ShortCutPanel* ShortCutPanel; // 0x2e8
	UN_InventoryPanel* InventoryPanel; // 0x2f0
	UN_InventoryPanel* RemoteInventoryNoCraftPanel; // 0x2f8
	UN_RemoteCraftInventoryPanel* RemoteCraftInventoryPanel; // 0x300
	UCanvasPanel* CraftPanelCanvas; // 0x308
	UCanvasPanel* ChangeAppearanceCanvas; // 0x310
	UUI_ChangeAppearancePanel* ChangeAppearancePanel; // 0x318
	UCanvasPanel* DetailPanel; // 0x320
	UCanvasPanel* RemoteDetailPanel; // 0x328
	UCanvasPanel* RemoteInventoryNoCraftPanelCanvas; // 0x330
	UN_EquipPanel* RemoteEquipPanel; // 0x338
	UN_GeneralStatusPanel* GeneralStatusPanel; // 0x340
	char bShowGeneralStatusPanel : 1; // 0x348
	USkillPanel* RemotePerkPanel; // 0x350
	UAttributePanel* AttributePanel; // 0x358
	UConditionPanel* ConditionPanel; // 0x360
	UTalentPanel* TalentPanel; // 0x368
	UN_StructureOccupyPanel* StructureOccupyPanel; // 0x370
	UAnimalFarmPanel* RemoteAnimalFarmPanel; // 0x378
	UN_RemoteFunctionPanel* RemoteFunctionPanel; // 0x380
	UOptionButton* AttributeButton; // 0x388
	UOptionButton* ConditionButton; // 0x390
	UOptionButton* TalentButton; // 0x398
	UOptionButton* RemoteEquipButton; // 0x3a0
	UOptionButton* RemoteAttributeButton; // 0x3a8
	UOptionButton* RemoteConditionButton; // 0x3b0
	UOptionButton* RemoteTalentButton; // 0x3b8
	UOptionButton* RemotePerkButton; // 0x3c0
	UN_ItemCraftQueueSlot* SelfItemCraftSlot; // 0x3c8
	UN_ItemCraftQueueSlot* StructureItemCraftSlot; // 0x3d0
	UTextBlock* CapitalText; // 0x3d8
	UButton* CloseButton; // 0x3e0
	EUIInventoryRemoteType CurrentRemoteInventoryType; // 0x3e8
	UCanvasPanel* RemoteAnimalVehicleDetailPanel; // 0x3f0
	UOptionButton* RemoteAnimalVehicleEquipButton; // 0x3f8
	UOptionButton* RemoteAnimalVehicleAttributeButton; // 0x400
	UOptionButton* RemoteAnimalVehiclePerkButton; // 0x408
	UVehicleEquipPanel* RemoteAnimalVehicleEquipPanel; // 0x410
	UVehicleAttributePanel* RemoteAnimalVehicleAttributePanel; // 0x418
	UUI_VehiclePerk* RemoteAnimalVehiclePerkPanel; // 0x420
	UStableDetailPanel* RemoteStableDetailPanel; // 0x428
	char bShowHelp : 1; // 0x430
	char bOpenRemoteInventory : 1; // 0x430
	char bOpenRemoteCraft : 1; // 0x430
	char bOpenSafeBox : 1; // 0x430
	TWeakObjectPtr<USGInventoryComponent> RemoteInventoryComponent; // 0x434
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x450
	TWeakObjectPtr<UN_SplitItemPanel> SplitPanel; // 0x458
	UN_SplitItemPanel* SplitItemPanelTemplate; // 0x460
	TWeakObjectPtr<UN_SetPriorityPanel> SetPriorityPanel; // 0x468
	UN_SetPriorityPanel* SetPriorityPanelTemplate; // 0x470
	TWeakObjectPtr<UN_GiftGuildPanel> GiftGuildPanel; // 0x478
	UN_GiftGuildPanel* GiftGuildPanelTemplate; // 0x480
	TWeakObjectPtr<UN_ChangeItemNamePanel> ChangeItemNamePanel; // 0x488
	UN_ChangeItemNamePanel* ChangeItemNamePanelTemplate; // 0x490
	UUI_AddMoneyPannel* AddMoneyPannelTemplate; // 0x498
	TWeakObjectPtr<UN_InventorySlot> MouseInventorySlot; // 0x4a8
	FMulticastInlineDelegate OnInventorySingleSlotPressed; // 0x4c0
	FMulticastInlineDelegate OnInventorySingleSlotReleased; // 0x4d0
	TWeakObjectPtr<UN_InventorySlot> PressedSlot; // 0x4e0
};

struct UParticleModuleTypeDataAnimTrail : UParticleModuleTypeDataBase {
	char bDeadTrailsOnDeactivate : 1; // 0x30
	char bEnablePreviousTangentRecalculation : 1; // 0x30
	char bTangentRecalculationEveryFrame : 1; // 0x30
	float TilingDistance; // 0x34
	float DistanceTessellationStepSize; // 0x38
	float TangentTessellationStepSize; // 0x3c
	float WidthTessellationStepSize; // 0x40
};

struct UGizmoRectangleComponent : UGizmoBaseComponent {
	FVector DirectionX; // 0x4a8
	FVector DirectionY; // 0x4b4
	float OffsetX; // 0x4c0
	float OffsetY; // 0x4c4
	float LengthX; // 0x4c8
	float LengthY; // 0x4cc
	float Thickness; // 0x4d0
	char SegmentFlags; // 0x4d4
};

struct UMaterialExpressionDistanceToNearestSurface : UMaterialExpression {
	FExpressionInput position; // 0x40
};

struct UMovieSceneCinematicShotSection : UMovieSceneSubSection {
	FString ShotDisplayName; // 0x160
	FText DisplayName; // 0x170
};

struct UInputAxisKeyDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings; // 0x28
};

struct UMaterialExpressionTextureProperty : UMaterialExpression {
	FExpressionInput TextureObject; // 0x40
	EMaterialExposedTextureProperty Property; // 0x54
};

struct UPlaneCutToolProperties : UInteractiveToolPropertySet {
	bool bSnapToWorldGrid; // 0x60
	bool bKeepBothHalves; // 0x61
	float SpacingBetweenHalves; // 0x64
	bool bFillCutHole; // 0x68
	bool bShowPreview; // 0x69
	bool bFillSpans; // 0x6a
};

struct UNiagaraDataInterfaceVelocityGrid : UNiagaraDataInterfaceRWBase {
	FIntVector GridSize; // 0xd8
};

struct UWheeledVehicleMovementComponent : UPawnMovementComponent {
	char bDeprecatedSpringOffsetMode : 1; // 0x150
	char bReverseAsBrake : 1; // 0x150
	char bUseRVOAvoidance : 1; // 0x150
	char bRawHandbrakeInput : 1; // 0x150
	char bRawGearUpInput : 1; // 0x150
	char bRawGearDownInput : 1; // 0x150
	char bWasAvoidanceUpdated : 1; // 0x154
	float Mass; // 0x158
	TArray<FWheelSetup> WheelSetups; // 0x160
	float DragCoefficient; // 0x170
	float ChassisWidth; // 0x174
	float ChassisHeight; // 0x178
	float DragArea; // 0x17c
	float EstimatedMaxEngineSpeed; // 0x180
	float MaxEngineRPM; // 0x184
	float DebugDragMagnitude; // 0x188
	FVector InertiaTensorScale; // 0x18c
	float MinNormalizedTireLoad; // 0x198
	float MinNormalizedTireLoadFiltered; // 0x19c
	float MaxNormalizedTireLoad; // 0x1a0
	float MaxNormalizedTireLoadFiltered; // 0x1a4
	float ThresholdLongitudinalSpeed; // 0x1a8
	int32_t LowForwardSpeedSubStepCount; // 0x1ac
	int32_t HighForwardSpeedSubStepCount; // 0x1b0
	TArray<UVehicleWheel*> Wheels; // 0x1b8
	float RVOAvoidanceRadius; // 0x1e0
	float RVOAvoidanceHeight; // 0x1e4
	float AvoidanceConsiderationRadius; // 0x1e8
	float RVOSteeringStep; // 0x1ec
	float RVOThrottleStep; // 0x1f0
	int32_t AvoidanceUID; // 0x1f4
	FNavAvoidanceMask AvoidanceGroup; // 0x1f8
	FNavAvoidanceMask GroupsToAvoid; // 0x1fc
	FNavAvoidanceMask GroupsToIgnore; // 0x200
	float AvoidanceWeight; // 0x204
	FVector PendingLaunchVelocity; // 0x208
	FReplicatedVehicleState ReplicatedState; // 0x214
	float RawSteeringInput; // 0x22c
	float RawThrottleInput; // 0x230
	float RawBrakeInput; // 0x234
	float SteeringInput; // 0x238
	float ThrottleInput; // 0x23c
	float BrakeInput; // 0x240
	float HandbrakeInput; // 0x244
	float IdleBrakeInput; // 0x248
	float StopThreshold; // 0x24c
	float WrongDirectionThreshold; // 0x250
	FVehicleInputRate ThrottleInputRate; // 0x254
	FVehicleInputRate BrakeInputRate; // 0x25c
	FVehicleInputRate HandbrakeInputRate; // 0x264
	FVehicleInputRate SteeringInputRate; // 0x26c
	AController* OverrideController; // 0x298
};

struct UGuildStoreItemPanel : USGUI {
	UN_InventoryPanel* InventoryPanel; // 0x2d8
	UN_InventoryPanel* RemoteInventoryPanel; // 0x2e0
	UTextBlock* SilverTextBlock; // 0x2e8
	UButton* SelectedToPlayerButton; // 0x2f0
	UButton* AllToPlayerButton; // 0x2f8
	UButton* SelectedToStoreButton; // 0x300
	UButton* AllToStoreButton; // 0x308
	TArray<int32_t> RadioIndexToGuildTitle; // 0x310
	UUI_GenericConfirmationDialog* ConfirmGetItemUIOverride; // 0x320
};

struct UUI_NPCInfo : USGUI {
	UUI_N_General* GeneralCampUI; // 0x2d8
	UUI_VehicleCamp* VehicleCampUI; // 0x2e0
};

struct UBTNode : UObject {
	FString NodeName; // 0x30
	UBehaviorTree* TreeAsset; // 0x40
	UBTCompositeNode* ParentNode; // 0x48
};

struct AGeometryCollectionDebugDrawActor : AActor {
	FGeometryCollectionDebugDrawWarningMessage WarningMessage; // 0x310
	FGeometryCollectionDebugDrawActorSelectedRigidBody SelectedRigidBody; // 0x318
	bool bDebugDrawWholeCollection; // 0x330
	bool bDebugDrawHierarchy; // 0x331
	bool bDebugDrawClustering; // 0x332
	EGeometryCollectionDebugDrawActorHideGeometry HideGeometry; // 0x333
	bool bShowRigidBodyId; // 0x334
	bool bShowRigidBodyCollision; // 0x335
	bool bCollisionAtOrigin; // 0x336
	bool bShowRigidBodyTransform; // 0x337
	bool bShowRigidBodyInertia; // 0x338
	bool bShowRigidBodyVelocity; // 0x339
	bool bShowRigidBodyForce; // 0x33a
	bool bShowRigidBodyInfos; // 0x33b
	bool bShowTransformIndex; // 0x33c
	bool bShowTransform; // 0x33d
	bool bShowParent; // 0x33e
	bool bShowLevel; // 0x33f
	bool bShowConnectivityEdges; // 0x340
	bool bShowGeometryIndex; // 0x341
	bool bShowGeometryTransform; // 0x342
	bool bShowBoundingBox; // 0x343
	bool bShowFaces; // 0x344
	bool bShowFaceIndices; // 0x345
	bool bShowFaceNormals; // 0x346
	bool bShowSingleFace; // 0x347
	int32_t SingleFaceIndex; // 0x348
	bool bShowVertices; // 0x34c
	bool bShowVertexIndices; // 0x34d
	bool bShowVertexNormals; // 0x34e
	bool bUseActiveVisualization; // 0x34f
	float PointThickness; // 0x350
	float LineThickness; // 0x354
	bool bTextShadow; // 0x358
	float TextScale; // 0x35c
	float NormalScale; // 0x360
	float AxisScale; // 0x364
	float ArrowScale; // 0x368
	FColor RigidBodyIdColor; // 0x36c
	float RigidBodyTransformScale; // 0x370
	FColor RigidBodyCollisionColor; // 0x374
	FColor RigidBodyInertiaColor; // 0x378
	FColor RigidBodyVelocityColor; // 0x37c
	FColor RigidBodyForceColor; // 0x380
	FColor RigidBodyInfoColor; // 0x384
	FColor TransformIndexColor; // 0x388
	float TransformScale; // 0x38c
	FColor LevelColor; // 0x390
	FColor ParentColor; // 0x394
	float ConnectivityEdgeThickness; // 0x398
	FColor GeometryIndexColor; // 0x39c
	float GeometryTransformScale; // 0x3a0
	FColor BoundingBoxColor; // 0x3a4
	FColor FaceColor; // 0x3a8
	FColor FaceIndexColor; // 0x3ac
	FColor FaceNormalColor; // 0x3b0
	FColor SingleFaceColor; // 0x3b4
	FColor VertexColor; // 0x3b8
	FColor VertexIndexColor; // 0x3bc
	FColor VertexNormalColor; // 0x3c0
	UBillboardComponent* SpriteComponent; // 0x3c8
};

struct UAbilityTask_WaitGameplayEffectApplied_Self : UAbilityTask_WaitGameplayEffectApplied {
	FMulticastInlineDelegate OnApplied; // 0x1b8
};

struct UMovieSceneObjectPropertyTrack : UMovieScenePropertyTrack {
	UObject* PropertyClass; // 0xb0
};

struct UVirtualTexture2D : UTexture2D {
	FVirtualTextureBuildSettings Settings; // 0x100
	bool bContinuousUpdate; // 0x10c
	bool bSinglePhysicalSpace; // 0x10d
};

struct UListView : UListViewBase {
	EOrientation Orientation; // 0x2d8
	ESelectionMode SelectionMode; // 0x2d9
	EConsumeMouseWheel ConsumeMouseWheel; // 0x2da
	bool bClearSelectionOnClick; // 0x2db
	bool bIsFocusable; // 0x2dc
	float EntrySpacing; // 0x2e0
	bool bReturnFocusToSelection; // 0x2e4
	TArray<UObject*> ListItems; // 0x2e8
	FMulticastInlineDelegate BP_OnEntryInitialized; // 0x308
	FMulticastInlineDelegate BP_OnItemClicked; // 0x318
	FMulticastInlineDelegate BP_OnItemDoubleClicked; // 0x328
	FMulticastInlineDelegate BP_OnItemIsHoveredChanged; // 0x338
	FMulticastInlineDelegate BP_OnItemSelectionChanged; // 0x348
	FMulticastInlineDelegate BP_OnItemScrolledIntoView; // 0x358
};

struct UHoleFillOperatorFactory : UObject {
	UHoleFillTool* FillTool; // 0x30
};

struct UMovieSceneCameraCutSection : UMovieSceneSection {
	bool bLockPreviousCamera; // 0xf0
	FGuid CameraGuid; // 0xf4
	FMovieSceneObjectBindingID CameraBindingID; // 0x104
	FTransform InitialCameraCutTransform; // 0x120
	bool bHasInitialCameraCutTransform; // 0x150
};

struct UMovementMode_AnimNotify : UAnimNotify {
	char PlayOnReversed : 1; // 0x38
	char OnlyAnimInstance : 1; // 0x38
	EMovementMode Enum_NewMovementMode; // 0x39
	ECustomMovementMode Enum_NewCustomMovementMode; // 0x3a
};

struct UTrainRewardSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> UnKnownCountTexture; // 0x260
	TSoftObjectPtr<UTexture2D> ExpTexture; // 0x288
	TSoftObjectPtr<UTexture2D> CapitalTexture; // 0x2b0
	TSoftObjectPtr<UTexture2D> RewardCountTexture; // 0x2d8
	UImage* ImgBg; // 0x300
	UTextBlock* AddValueText; // 0x308
};

struct UAbilityTask_ApplyRootMotionMoveToForce : UAbilityTask_ApplyRootMotion_Base {
	FMulticastInlineDelegate OnTimedOut; // 0xc0
	FMulticastInlineDelegate OnTimedOutAndDestinationReached; // 0xd0
	FVector StartLocation; // 0xe0
	FVector TargetLocation; // 0xec
	float Duration; // 0xf8
	bool bSetNewMovementMode; // 0xfc
	EMovementMode NewMovementMode; // 0xfd
	bool bRestrictSpeedToExpected; // 0xfe
	UCurveVector* PathOffsetCurve; // 0x100
};

struct UUI_JunGuanAiBattle : USGUI {
	UScrollBox* GaunAiBattleInfoPanel; // 0x2d8
	UButton* BtnClose; // 0x2e0
	UGuanAiBattleInfoSlot* GuanAiBattleInfoSlotClass; // 0x2e8
};

struct UBakedCurvatureMapToolProperties : UInteractiveToolPropertySet {
	EBakedCurvatureTypeMode CurvatureType; // 0x60
	EBakedCurvatureColorMode ColorMode; // 0x64
	float RangeMultiplier; // 0x68
	float MinRangeMultiplier; // 0x6c
	EBakedCurvatureClampMode Clamping; // 0x70
	bool bGaussianBlur; // 0x74
	float BlurRadius; // 0x78
};

struct ALightmassPortal : AActor {
	ULightmassPortalComponent* PortalComponent; // 0x310
};

struct UDebugCameraControllerSettings : UDeveloperSettings {
	TArray<FDebugCameraControllerSettingsViewModeIndex> CycleViewModes; // 0x38
};

struct UBakeMeshAttributeMapsToolProperties : UInteractiveToolPropertySet {
	EBakeMapType MapType; // 0x60
	EBakeTextureResolution Resolution; // 0x64
	FString UVLayer; // 0x68
	TArray<FString> UVLayerNamesList; // 0x78
	bool bUseWorldSpace; // 0x88
	UTexture2D* Result; // 0x90
};

struct UMontageEvent_AnimNotify : UAnimNotify {
	UAnimMontage* PlayMontage; // 0x38
	EMontageCustomBindType Enum_MontageCustomBindType; // 0x40
	FVirtualPropData VirtualPropData; // 0x48
	float StopBlendTime; // 0x70
	char bStopMontageAsTriggerNotify : 1; // 0x74
	char bPlayOtherMontageAsTriggerNotify : 1; // 0x74
	UAnimMontage* PlayOtherMontage; // 0x78
};

struct UParticleModuleSpawn : UParticleModuleSpawnBase {
	FRawDistributionFloat Rate; // 0x38
	FRawDistributionFloat RateScale; // 0x68
	EParticleBurstMethod ParticleBurstMethod; // 0x98
	TArray<FParticleBurst> BurstList; // 0xa0
	FRawDistributionFloat BurstScale; // 0xb0
	char bApplyGlobalSpawnRateScale : 1; // 0xe0
};

struct USourceEffectStereoDelayPreset : USoundEffectSourcePreset {
	FSourceEffectStereoDelaySettings Settings; // 0xb4
};

struct USlateVectorArtData : UObject {
	TArray<FSlateMeshVertex> VertexData; // 0x28
	TArray<uint32_t> IndexData; // 0x38
	UMaterialInterface* Material; // 0x48
	FVector2D ExtentMin; // 0x50
	FVector2D ExtentMax; // 0x58
};

struct UMovieSceneSlomoSection : UMovieSceneSection {
	FMovieSceneFloatChannel FloatCurve; // 0xe8
};

struct UGuildStoreGeneralPanel : USGUI {
	TWeakObjectPtr<ASGStructureGuildStore> BindGuildStore; // 0x2d8
	UGuildStoreGeneralItem* GuildStoreGeneralItemTemplate; // 0x2e0
	UScrollBox* ScrollLevelList; // 0x2f0
	UScrollBox* ScrollDBList; // 0x2f8
	UButton* SelectedToPlayerButton; // 0x300
	UButton* AllToPlayerButton; // 0x308
	UButton* SelectedToStoreButton; // 0x310
	UButton* AllToStoreButton; // 0x318
	UUI_GenericConfirmationDialog* ConfirmGetGeneralUIOverride; // 0x320
};

struct UN_ChangeItemNamePanel : USGUI {
	UButton* ConfirmButton; // 0x2d8
	UButton* CancelButton; // 0x2e0
	UTextBlock* OriginName; // 0x2e8
	UEditableTextBox* ChangeName; // 0x2f0
	int32_t NameMaxLen; // 0x2f8
	FVector2D WidgetOffset; // 0x2fc
};

struct UMasterySlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> MasteryBgTexture; // 0x260
	TSoftObjectPtr<UTexture2D> MasteryFgTexture; // 0x288
	UImage* ImgMasterySlot; // 0x2b0
	char bHighLighting : 1; // 0x2b8
};

struct ASpotLight : ALight {
	USpotLightComponent* SpotLightComponent; // 0x320
};

struct USGSoundDatabase : UObject {
	UDataTable* FootStepDataTables[0x9]; // 0x28
	FName HitSound; // 0x70
	FName WillDeadSound; // 0x78
	FName DeathSound; // 0x80
};

struct ASGStructureCheckVolume : AVolume {
	char bDisableNoTeam : 1; // 0x348
	char bPreventCreateStructure : 1; // 0x348
	char bAllowCreateStructure : 1; // 0x348
	USGStructureCheckVolumeData* OnlyAllowStructureTypeData; // 0x350
	USGStructureCheckVolumeData* OnlyPreventStructureTypeData; // 0x358
	ASGStructure* StaticLinkStructure; // 0x360
	FString CheckVolumeName; // 0x368
};

struct ASGStructureManager : AInfo {
	int32_t CreatingStructureIndex; // 0x310
	char bHasSnapped : 1; // 0x314
	ASGStructure* CreatingStructure; // 0x318
	ASGHUD* SGHUD; // 0x320
	FRotator InitCreateRotation; // 0x328
	bool bSelectingDirection; // 0x334
	FName CreateRotationName; // 0x338
	float CreateRotationSpeed; // 0x340
	FGuid CurrentBuildStructureItemId; // 0x344
	char bShowStructureDebugInfo : 1; // 0x354
	char bFromPerkStructure : 1; // 0x354
	char bUseBindPoint : 1; // 0x354
	int32_t BindPointNum; // 0x358
	int32_t CurrentBindPointIndex; // 0x35c
	int32_t ItemToStructureIndex; // 0x360
	float CurrentSelectRotation; // 0x364
	bool IsMoveSeatingCharResetPosState; // 0x368
	TWeakObjectPtr<ASG_MoveSeatingCharacter> ResetPosMoveSeatChar; // 0x36c
	bool IsCharacterResetPosState; // 0x374
	TWeakObjectPtr<ASGGeneralCharacter> ResetPosCharacter; // 0x378
	bool IsAnimalResetPosState; // 0x380
	TWeakObjectPtr<ASG_AnimalsCharacter> ResetPosAnimalChar; // 0x384
	ASGStructure* ReplaceStructure; // 0x390
};

struct UUMGSequenceTickManager : UObject {
	TSet<TWeakObjectPtr<UUserWidget>> WeakUserWidgets; // 0x28
	UMovieSceneEntitySystemLinker* Linker; // 0x78
};

struct ACableActor : AActor {
	UCableComponent* CableComponent; // 0x310
};

struct UNiagaraDataInterfaceAudioPlayer : UNiagaraDataInterface {
	USoundBase* SoundToPlay; // 0x38
	USoundAttenuation* Attenuation; // 0x40
	USoundConcurrency* Concurrency; // 0x48
	TArray<FName> ParameterNames; // 0x50
	bool bLimitPlaysPerTick; // 0x60
	int32_t MaxPlaysPerTick; // 0x64
	bool bStopWhenComponentIsDestroyed; // 0x68
};

struct USplineMeshComponent : UStaticMeshComponent {
	FSplineMeshParams SplineParams; // 0x520
	FVector SplineUpDir; // 0x578
	float SplineBoundaryMin; // 0x584
	FGuid CachedMeshBodySetupGuid; // 0x588
	UBodySetup* BodySetup; // 0x598
	float SplineBoundaryMax; // 0x5a0
	char bAllowSplineEditingPerInstance : 1; // 0x5a4
	char bSmoothInterpRollScale : 1; // 0x5a4
	char bMeshDirty : 1; // 0x5a4
	ESplineMeshAxis ForwardAxis; // 0x5a5
	float VirtualTextureMainPassMaxDrawDistance; // 0x5a8
};

struct USourceEffectWaveShaperPreset : USoundEffectSourcePreset {
	FSourceEffectWaveShaperSettings Settings; // 0x98
};

struct UNiagaraDataInterfacePhysicsAsset : UNiagaraDataInterface {
	UPhysicsAsset* DefaultSource; // 0x38
	AActor* SourceActor; // 0x40
};

struct UCityFlagSlot : USGUI {
	UTextBlock* CityNameText; // 0x2d8
	UCanvasPanel* OwnerGuildPanel; // 0x2e0
	UImage* OwnerGuildImage; // 0x2e8
};

struct ASGStructureXianChengBasement : ASGStructureBasement {
	EXianChengAttackSucessType XianChengAttackSucessType; // 0x1298
	char bLocked : 1; // 0x1299
	float BattleGroundMusicHpThreshold; // 0x129c
};

struct UUI_HuangLi : USGUI {
	UHorizontalBox* MenuHorizontalBox; // 0x2d8
	UHuangLiMainPanel* HuangLiMainPanel; // 0x2e0
	UHuangLiAllEffectsPanel* HuangLiAllEffectsPanel; // 0x2e8
	UHuangLiEffectPanel* HuangLiEffectPanel; // 0x2f0
	UHuangLiMenuSlot* MenuSlotClass; // 0x2f8
	FText SlotsName[0x4]; // 0x300
};

struct UUI_PreviewMeshInteraction : UUserWidget {
	FRotator DefaultRotator; // 0x260
	float DragRotatorSpeed; // 0x26c
	float DragRotatorMaxSpeed; // 0x270
	float DragRotatorDeceleration; // 0x274
	float AutoRotateInterpDuration; // 0x278
	UCurveFloat* AutoRotateInterpCurve; // 0x280
};

struct UUI_ColorItem : UUserWidget {
	TSoftObjectPtr<UTexture2D> BorderNormalTexture; // 0x260
	TSoftObjectPtr<UTexture2D> BorderSelectTexture; // 0x288
	UButton* BtnBg; // 0x2c0
	UImage* ImgColor; // 0x2c8
	UImage* ImgBorder; // 0x2d0
};

struct UNiagaraDataInterfaceArrayFloat2 : UNiagaraDataInterfaceArray {
	TArray<FVector2D> FloatData; // 0x50
};

struct UMaterialExpressionCollectionParameter : UMaterialExpression {
	UMaterialParameterCollection* Collection; // 0x40
	FName ParameterName; // 0x48
	FGuid ParameterId; // 0x50
};

struct ACineCameraActor : ACameraActor {
	FCameraLookatTrackingSettings LookatTrackingSettings; // 0x8a0
};

struct UEditableGameplayTagQueryExpression_AnyTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UNavigationDataChunk : UObject {
	FName NavigationDataName; // 0x28
};

struct UPerkRow : UUserWidget {
	ESkillType SkillType; // 0x260
	UPerkSlot* ItemClass; // 0x268
	UPerkLine* LineBgClass; // 0x270
	UPerkLine* LineFgClass; // 0x278
	UMasterySlot* MasterySlotTemplate; // 0x280
	TMap<int32_t, FPerkSlotArray> PerkSlotMap; // 0x288
	USGUI* RootUI; // 0x2d8
	TArray<USGPerk*> BindPerkList; // 0x2e0
	UCanvasPanel* PerkRowCanvas; // 0x2f0
	UCanvasPanel* SlotCanvas; // 0x2f8
	UCanvasPanel* PerkSlotPosCanvas; // 0x300
	UButton* BtnAddSkillLevel; // 0x308
	UTextBlock* TbExpMultiplier; // 0x310
	UTextBlock* TbSkillLevel; // 0x318
	UTextBlock* TbSkillLevelAdd; // 0x320
	UImage* ImgSkillExpFg; // 0x328
	UUniformGridPanel* MasteryGrid; // 0x330
	UButton* BtnReduceMastery; // 0x338
	UButton* BtnAddMastery; // 0x340
	UCanvasPanel* CurSkillLevelCanvas; // 0x348
	UCanvasPanel* BuoyCanvas; // 0x350
	UImage* ImgSkillLevelLimit; // 0x358
	UImage* ImgSkillLevelMax; // 0x360
	UHorizontalBox* HbSkillAddLevel; // 0x368
	UImage* ImgIcon; // 0x370
	UImage* TwinkleImg; // 0x378
	UCanvasPanelSlot* PerkSlotPosCanvasSlot; // 0x380
	UCanvasPanelSlot* ImgSkillExpFgSlot; // 0x388
	TArray<UMasterySlot*> Masterys; // 0x390
	float CurViewportScale; // 0x3a0
	FVector2D ViewportSize; // 0x3a4
	USGViewportClient* SGViewportClient; // 0x3b0
};

struct UBTTask_RunEQSQuery : UBTTask_BlackboardBase {
	UEnvQuery* QueryTemplate; // 0x98
	TArray<FEnvNamedValue> QueryParams; // 0xa0
	TArray<FAIDynamicParam> QueryConfig; // 0xb0
	EEnvQueryRunMode RunMode; // 0xc0
	FBlackboardKeySelector EQSQueryBlackboardKey; // 0xc8
	bool bUseBBKey; // 0xf0
	FEQSParametrizedQueryExecutionRequest EQSRequest; // 0xf8
};

struct UBakedTexture2DImageProperties : UInteractiveToolPropertySet {
	UTexture2D* SourceTexture; // 0x60
	int32_t UVLayer; // 0x68
};

struct UDefaultLevelSequenceInstanceData : UObject {
	AActor* TransformOriginActor; // 0x30
	FTransform TransformOrigin; // 0x40
};

struct ABP_HorseMC_Melee2h_C : ABP_HorseMC_Base_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x628
	UStaticMeshComponent* Weapon_2H_Sabercutter_001; // 0x630
	UABP_MenuCharacter_C* MenuCharacterAnimInstance; // 0x638
	UAnimSequence* HumanAnimation; // 0x640
	UAnimSequence* HorseAnimation; // 0x648
	UABP_MenuHorse_C* MenuHorseAnimInstance; // 0x650
	bool Left Reins Enabled; // 0x658
	bool Right Reins Enabled; // 0x659
};

struct UMaterialExpressionSkyAtmosphereAerialPerspective : UMaterialExpression {
	FExpressionInput WorldPosition; // 0x40
};

struct UBodySetup : UBodySetupCore {
	FKAggregateGeom AggGeom; // 0x48
	char bAlwaysFullAnimWeight : 1; // 0xa0
	char bConsiderForBounds : 1; // 0xa0
	char bMeshCollideAll : 1; // 0xa0
	char bDoubleSidedGeometry : 1; // 0xa0
	char bGenerateNonMirroredCollision : 1; // 0xa0
	char bSharedCookedData : 1; // 0xa0
	char bGenerateMirroredCollision : 1; // 0xa0
	char bSupportUVsAndFaceRemap : 1; // 0xa0
	UPhysicalMaterial* PhysMaterial; // 0xa8
	FWalkableSlopeOverride WalkableSlopeOverride; // 0xb0
	FBodyInstance DefaultInstance; // 0x128
	FVector BuildScale3D; // 0x290
};

struct AWaterManager : AActor {
	FVector NaturalResTextureCenter; // 0x310
	FVector NaturalResTextureExtent; // 0x31c
	FString PersistLevelString; // 0x328
	TArray<ANatureWaterBlockVolume*> WaterBlockVolumes; // 0x338
	TArray<FBox> WaterBlockVolumeBoxes; // 0x348
	FBox WaterBox; // 0x358
	FIntPoint WaterTileCount; // 0x374
	FIntPoint NaturalResTextureSize; // 0x37c
	FIntPoint NaturalResTileCount; // 0x384
};

struct UMaterialExpressionConstant4Vector : UMaterialExpression {
	FLinearColor Constant; // 0x40
};

struct UNewQuestAnimationNotifyWidget : UAnimationNotifyWidget {
	UWidgetAnimation* NewQuestAnim; // 0x278
	UTextBlock* NewQuestNotifyText; // 0x280
};

struct UParticleModuleVelocityBase : UParticleModule {
	char bInWorldSpace : 1; // 0x30
	char bApplyOwnerScale : 1; // 0x30
};

struct UAddPatchToolProperties : UInteractiveToolPropertySet {
	float Width; // 0x60
	float Rotation; // 0x64
	int32_t Subdivisions; // 0x68
	float Shift; // 0x6c
};

struct UTexture2DDynamic : UTexture {
	EPixelFormat Format; // 0xe0
};

struct ASceneEffectProcVolume : AVolume {
	TArray<FSceneEffectSpawnerWrapper> SceneEffectSpawners; // 0x348
	char bDebugDraw : 1; // 0x358
	char bDebugNotSpawnInstance : 1; // 0x358
	float DebugSphereRadius; // 0x35c
	TArray<FLinearColor> DebugDrawColors; // 0x360
	char bClearResidualActors : 1; // 0x370
	char bSpawnInWater : 1; // 0x370
	float DensityInWater; // 0x374
	float MaxDistanceToSide; // 0x378
	int32_t RandomSeed; // 0x37c
	float InWaterDepth; // 0x380
	float MinPlaceDepth; // 0x384
	int32_t SweepUnit; // 0x388
	int32_t MaxStepCount; // 0x38c
	char bAverageRandom : 1; // 0x390
	int32_t MaxRandomCount; // 0x394
	char bDrawSidePoints : 1; // 0x398
	char bDrawInWaterBounds : 1; // 0x398
	int32_t SidePointsDebugDrawInterval; // 0x39c
	int32_t SidePointsDebugDrawRaduis; // 0x3a0
	int32_t DirectArrawDebugDrawLength; // 0x3a4
	TArray<FVector> SidePoints; // 0x3a8
	TArray<FVector> VectorSidePoints; // 0x3b8
	TArray<FTransform> TransInWaters; // 0x3c8
};

struct UNiagaraDataInterfaceArrayFloat3 : UNiagaraDataInterfaceArray {
	TArray<FVector> FloatData; // 0x50
};

struct UAppleImageUtilsBaseAsyncTaskBlueprintProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
	FAppleImageUtilsImageConversionResult ConversionResult; // 0x60
};

struct USGPerk : UObject {
	FText Name; // 0x28
	FText Description; // 0x40
	FString Param1; // 0x58
	FString Param2; // 0x68
	FString Param3; // 0x78
	FString Param4; // 0x88
	FString Param5; // 0x98
	TSoftObjectPtr<UTexture2D> PerkTexture; // 0xa8
	int32_t RequiredCharacterLevel; // 0xd0
	int32_t RequiredPerkPoints; // 0xd4
	FPerkEntries PerkRequirement; // 0xd8
	EPerkState PerkState; // 0xe8
	int32_t RequiredSmallSkillLevel; // 0xec
	ESPType SPType; // 0xf0
	int32_t SPSmallSkillType; // 0xf4
	int32_t SkillColumnIndex; // 0xf8
	char bIsGeneralSkill : 1; // 0xfc
	int32_t GeneralSkillRowIndex; // 0x100
	int32_t GeneralSkillColumnIndex; // 0x104
	TArray<USGBuff*> LevelBuff; // 0x108
	TArray<EGeneralsLearnSkillConditionType> LearnSkillCondition; // 0x118
	TArray<FGeneralSkillCondition> GeneralRequireSmallSkillCondition; // 0x128
	USGBuff* BindBuff; // 0x138
	TArray<FLevelPerk> LevelPerk; // 0x140
	TArray<FPerkItemRequirement> RequireItems; // 0x150
	int32_t RequireCopper; // 0x160
};

struct UUI_TransportMachineHorse : USGUI {
	UUI_TransportHorseItem* TransportHorseItemTemplate; // 0x2f8
	UScrollBox* ScrollLevelList; // 0x308
	UScrollBox* ScrollDBList; // 0x310
	UButton* BtnTotalAdd; // 0x338
	UButton* BtbTotalRemove; // 0x340
	UButton* BtnSelectedAdd; // 0x348
	UButton* BtbSelectedRemove; // 0x350
	UTextBlock* TbChunkNum; // 0x358
};

struct UParticleModuleLifetime : UParticleModuleLifetimeBase {
	FRawDistributionFloat LifeTime; // 0x30
};

struct UConvertToPolygonsToolProperties : UInteractiveToolPropertySet {
	EConvertToPolygonsMode ConversionMode; // 0x60
	float AngleTolerance; // 0x64
	bool bCalculateNormals; // 0x68
	bool bShowGroupColors; // 0x69
};

struct UN_StructureOccupyPanel : UUserWidget {
	TWeakObjectPtr<ASGStructureOccupy> RemoteActor; // 0x260
	USGUI* RootSGUI; // 0x268
	UUI_StructureOccupyTaxPanel* StructureOccupyTaxPanel; // 0x270
	UUI_StructureOccupyBlessPanel* StructureOccupyBlessPanel; // 0x278
	UUI_StructureOccupyShelterPanel* StructureOccupyShelterPanel; // 0x280
	UUI_StructureOccupyBuffPanel* StructureOccupyBuffPanel; // 0x288
	UUI_StructureOccupyExpansionPanel* StructureOccupyExpansionPanel; // 0x290
	UUI_OccupyGuildEventPanel* StructureOccupyGuildEventPanel; // 0x298
	UOptionButton* TaxButton; // 0x2a0
	UOptionButton* BlessingButton; // 0x2a8
	UOptionButton* ShelterButton; // 0x2b0
	UOptionButton* ExpansionButton; // 0x2b8
	UOptionButton* BuffButton; // 0x2c0
	UOptionButton* GuildEventButton; // 0x2c8
};

struct ASGStructureAltar : ASGStructureNPCRest {
	char bClearZeroLifeChunk : 1; // 0xbe8
	FGuid UsingCharGuid; // 0xbec
	FString UsingCharName; // 0xc00
	char bCanReborn : 1; // 0xc10
};

struct UUI_Game : USGUI {
	int32_t bHideAllExistingWidgetsType; // 0x2d8
	UCanvasPanel* MainPanel; // 0x2e0
	UCanvasPanel* OnlyShortCutPanel; // 0x2e8
	UCanvasPanel* OtherPanel; // 0x2f0
	UN_ShortCutPanel* ShortCutPanel; // 0x2f8
	UVerticalBox* ShortCutVerticalBox; // 0x300
	UCanvasPanel* ShortCutCanvasPanel; // 0x308
	UGeneralShortCutPanel* GeneralShortCutPanel; // 0x310
	UGameCharacterStatusPanel* CharacterStatusPanel; // 0x318
	UGameCharacterBuffPanel* CharacterBuffPanel; // 0x320
	UGameCharacterQuestPanel* QuestPanel; // 0x328
	UUI_Crosshairs* AttackTargetCrosshairs; // 0x330
	UProgressBar* PbBreathe; // 0x338
	UOccupyFlagPanel* OccupyFlagPanel; // 0x340
	UProgressBar* PbOperation; // 0x348
	UProgressBar* PbRescue; // 0x350
	UTextBlock* TbResueTips; // 0x358
	FText RescueText; // 0x360
	FText BeRescueText; // 0x378
	UCanvasPanel* CoolDownTimeCanvas; // 0x390
	UTextBlock* TbCoolDownTime; // 0x398
	USizeBox* AimPointSizeBox; // 0x3a0
	UCreateStructureInfoPanel* CreateStructureInfoPanel; // 0x3a8
	UUI_Chat* ChatPannel; // 0x3b0
	UTextBlock* TbCapitalGold; // 0x3b8
	UTextBlock* InteractiveMenuText; // 0x3c0
	UCanvasPanel* InteractivePanel; // 0x3c8
	UCanvasPanel* ViewGeneralPanel; // 0x3d0
	UN_ItemCraftQueueSlot* SelfItemCraftSlot; // 0x3d8
	UN_ItemCraftQueueSlot* StructureItemCraftSlot; // 0x3e0
	UUI_AimDirection* AimDirectionWidget; // 0x3e8
	UUI_NewsNotice* NewsNotice; // 0x3f0
	UWeatherPendantWidget* WeatherPendant; // 0x3f8
	UGuildEventToolTips* GuildEventToolTips; // 0x400
	UStatusProgressPanel* StatusProgressPanel; // 0x408
	UBorder* OpenHelpTipsBorder; // 0x410
	UTextBlock* GodModeText; // 0x418
	UTextBlock* GMBillBoardText; // 0x420
	UCanvasPanel* InteractiveVolumeCanvas; // 0x428
	TWeakObjectPtr<ASGGeneralCharacter> ViewGeneral; // 0x430
	char bStartViewGeneral : 1; // 0x438
	float FinishGeneralTime; // 0x43c
	float LongHoldTime; // 0x440
	FTimerHandle ViewGeneralTimer; // 0x448
	float ViewGeneralTime; // 0x450
	char bStartViewPackageStation : 1; // 0x454
	int32_t ViewPackageStationTime; // 0x458
	UImage* RotateE; // 0x460
	UImage* FrameRotateE; // 0x468
	char bCoolTimeForFrame : 1; // 0x470
	FTimerHandle ViewFrameTimer; // 0x478
	UUI_GameSiegeTips* GameSiegeTipsUITemplate; // 0x480
	int32_t GameSiegeTipsUIZOrder; // 0x488
	TSoftObjectPtr<UTexture2D> GameHelpTipsTexture; // 0x490
	TSoftObjectPtr<UTexture2D> OpenedGameHelpTipsTexture; // 0x4b8
	UUI_GameSiegeTips* GameSiegeTipsUI; // 0x4e0
	UVerticalBox* HelpTipsVertical; // 0x4e8
	UCanvasPanel* HelpTipsCanvas; // 0x4f0
	FHelpTips GameHelpTips[0xa]; // 0x4f8
	FHelpTipsSlotSetting ToggleShowHelpPanelSetting; // 0x598
	EGameHelpTipsType CurrentGameHelpTipType; // 0x608
	char bShowInWaterTips : 1; // 0x609
	TArray<FHelpTipsSlotSetting> InWaterTipsSlot; // 0x610
	UHelpTipsSlot* HelpSlotTemplate; // 0x620
	FVector4 HelpTipsSlotPadding; // 0x630
	char bShowRiderBattleTips : 1; // 0x640
	UCanvasPanel* ArmorRemindCanvas; // 0x648
	UImage* ArmorRemindBg; // 0x650
	UImage* ArmorRemindBody; // 0x658
	UImage* ArmorRemindHead; // 0x660
	UImage* ArmorRemindLeg; // 0x668
	UImage* ArmorRemindMainHand; // 0x670
	UImage* ArmorRemindOffHand; // 0x678
	TArray<bool> NeedRemindArray; // 0x680
	bool bShowHelpPanel; // 0x690
	bool bShowQuestPanel; // 0x691
	UBattleKillEventSlot* BattleKillEventSlotClass; // 0x698
	float BattleKillEventShowTimeSec; // 0x6a0
	int32_t BattleKillEventShowMaxNum; // 0x6a4
	FVector2D BattleKillEventShowPos; // 0x6a8
	float BattleKillEventShowYInterval; // 0x6b0
	TArray<UBattleKillEventSlot*> AllBattleKillEventSlot; // 0x6b8
	TArray<UHelpTipsSlot*> HelpTipsSlotList; // 0x6c8
	UTextBlock* OpenHelpTipsText; // 0x6e0
	FString OpenHelpTipsActionName; // 0x6e8
};

struct UAnimBoneCompressionCodec : UObject {
	FString Description; // 0x28
};

struct UGlobalMapActorWidget : UUserWidget {
	TSoftObjectPtr<UTexture2D> IconTexture[0x3]; // 0x260
	AGlobalMapActor* BindGlobalMapActor; // 0x2d8
	UImage* ImgIcon; // 0x2e0
	UTextBlock* TbName; // 0x2e8
	UCanvasPanel* NameCanvas; // 0x2f0
	UOverlay* TipsOverlay; // 0x2f8
	UCanvasPanel* IdCanvas; // 0x300
	UTextBlock* TbId; // 0x308
	UImage* ImgNewServer; // 0x310
	UImage* ImgSite; // 0x318
};

struct ADefaultPawn : APawn {
	float BaseTurnRate; // 0x370
	float BaseLookUpRate; // 0x374
	UPawnMovementComponent* MovementComponent; // 0x378
	USphereComponent* CollisionComponent; // 0x380
	UStaticMeshComponent* MeshComponent; // 0x388
	char bAddDefaultMovementBindings : 1; // 0x390
};

struct UPhononReverbSourceSettings : UReverbPluginSourceSettingsBase {
	EIplSimulationType SourceReverbSimulationType; // 0x28
	float SourceReverbContribution; // 0x2c
};

struct UStructureAnimalWatchInfoHUD : UStructureInfoHUD {
	UCanvasPanel* AnimalWatchPanel; // 0x360
	UTextBlock* AnimalWatchText; // 0x368
	TWeakObjectPtr<ASGStructureTurretAnimalWatch> BindStructureAnimalWatch; // 0x370
};

struct UInstancedStaticMeshComponent : UStaticMeshComponent {
	TArray<FInstancedStaticMeshInstanceData> PerInstanceSMData; // 0x518
	int32_t NumCustomDataFloats; // 0x528
	TArray<float> PerInstanceSMCustomData; // 0x530
	int32_t InstancingRandomSeed; // 0x540
	int32_t InstanceStartCullDistance; // 0x544
	int32_t InstanceEndCullDistance; // 0x548
	char bForceRequireCPUAccess : 1; // 0x54c
	TArray<int32_t> InstanceReorderTable; // 0x550
	int32_t NumPendingLightmaps; // 0x5a8
	TArray<FInstancedStaticMeshMappingInfo> CachedMappings; // 0x5b0
};

struct USGUI : UUserWidget {
	char bValidateInput : 1; // 0x260
	int32_t SceneStackPriority; // 0x264
	EUIInputMode UIInputMode; // 0x268
	char bShowCursor : 1; // 0x269
	char bEscExit : 1; // 0x269
	TArray<FName> RadioButtonViewList; // 0x270
	ESlateVisibility CacheSlateVisibility; // 0x280
	char bTopUI : 1; // 0x281
	bool bIsClosing; // 0x282
};

struct UARImageComponent : UARComponent {
	FARImageUpdatePayload ReplicatedPayload; // 0x290
};

struct UMovieSceneEnumTrack : UMovieScenePropertyTrack {
	UEnum* Enum; // 0xb0
};

struct UUI_SliderView : UUserWidget {
	FMulticastInlineDelegate SliderValueChanged; // 0x260
	USlider* Slider; // 0x270
};

struct UPerkPanel : UUserWidget {
	TArray<FName> PerkRowNames; // 0x260
	UPerkRow* PerkRowClass; // 0x270
	TArray<FName> RadioButtonViewList; // 0x278
};

struct UWBP_RadioSettingButton_C : UUI_RadioButton {
	FPointerToUberGraphFrame UberGraphFrame; // 0x540
	UButton* BtnBg; // 0x548
	UTextBlock* TbSetting; // 0x550
	FSlateBrush IconNormalBrush; // 0x558
	FSlateBrush IconSelectBrush; // 0x5e0
	FText Title; // 0x668
};

struct UPlayerInput : UObject {
	TArray<FKeyBind> DebugExecBindings; // 0x120
	TArray<FName> InvertedAxis; // 0x160
};

struct UBoxComponent : UShapeComponent {
	FVector BoxExtent; // 0x4a0
	float LineThickness; // 0x4ac
};

struct UDatasmithStaticMeshTemplate : UDatasmithObjectTemplate {
	FDatasmithMeshSectionInfoMapTemplate SectionInfoMap; // 0x30
	int32_t LightMapCoordinateIndex; // 0x80
	int32_t LightMapResolution; // 0x84
	TArray<FDatasmithMeshBuildSettingsTemplate> BuildSettings; // 0x88
	TArray<FDatasmithStaticMaterialTemplate> StaticMaterials; // 0x98
};

struct UConversationBtn : UUserWidget {
	int32_t BtnIndex; // 0x268
	USizeBox* RootSizeBox; // 0x270
	UButton* ConvBtn; // 0x278
	UTextBlock* ConvName; // 0x280
	FString TargetId; // 0x288
	int32_t ChatType; // 0x298
};

struct UWBP_SystemSettingRadioButton_C : UUI_RadioButton {
	FPointerToUberGraphFrame UberGraphFrame; // 0x540
	UButton* BtnBg; // 0x548
	UTextBlock* TbTitle; // 0x550
	FText Title; // 0x558
};

struct UAbilityTask_WaitMovementModeChange : UAbilityTask {
	FMulticastInlineDelegate OnChange; // 0x80
};

struct UStreamMediaSource : UBaseMediaSource {
	FString StreamUrl; // 0x88
};

struct UParticleModuleCameraOffset : UParticleModuleCameraBase {
	FRawDistributionFloat CameraOffset; // 0x30
	char bSpawnTimeOnly : 1; // 0x60
	EParticleCameraOffsetUpdateMethod UpdateMethod; // 0x64
};

struct AOnlineBeaconHost : AOnlineBeacon {
	int32_t ListenPort; // 0x340
	TArray<AOnlineBeaconClient*> ClientActors; // 0x348
};

struct UMovieSceneParticleTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> ParticleSections; // 0x80
};

struct UTextureRenderTarget3D : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	int32_t SizeZ; // 0xe8
	FLinearColor ClearColor; // 0xec
	TextureAddress AddressX; // 0xfc
	TextureAddress AddressY; // 0xfd
	TextureAddress AddressZ; // 0xfe
	char bForceLinearGamma : 1; // 0xff
	char bGPUSharedFlag : 1; // 0xff
	char bAutoGenerateMips : 1; // 0xff
	ETextureRenderTargetFormat RenderTargetFormat; // 0x100
	EPixelFormat OverrideFormat; // 0x101
};

struct AOnlineBeacon : AActor {
	float BeaconConnectionInitialTimeout; // 0x318
	float BeaconConnectionTimeout; // 0x31c
	UNetDriver* NetDriver; // 0x320
};

struct UServerRegisterHandler : UGameInstanceSubsystem {
	TArray<FStuBattleInfo> BattleInfoArray; // 0x30
};

struct UAnimSkill_LadderData : UDataAsset {
	TMap<EAnimCurve, FName> TMap_AnimCurvesName; // 0x30
	FLadderTraceSettings LadderTraceSettings; // 0x80
	FVector LadderStepUpStartOffset; // 0x128
	TArray<FLadderParams> LadderParams; // 0x138
	FLadderComplexParams LadderComplexParams; // 0x150
};

struct URestrictedGameplayTagsList : UObject {
	FString ConfigFileName; // 0x28
	TArray<FRestrictedGameplayTagTableRow> RestrictedGameplayTagList; // 0x38
};

struct UScrollBar : UWidget {
	FScrollBarStyle WidgetStyle; // 0x108
	USlateWidgetStyleAsset* Style; // 0x5d8
	bool bAlwaysShowScrollbar; // 0x5e0
	bool bAlwaysShowScrollbarTrack; // 0x5e1
	EOrientation Orientation; // 0x5e2
	FVector2D Thickness; // 0x5e4
	FMargin Padding; // 0x5ec
};

struct USizeBoxSlot : UPanelSlot {
	FMargin Padding; // 0x38
	EHorizontalAlignment HorizontalAlignment; // 0x58
	EVerticalAlignment VerticalAlignment; // 0x59
};

struct UAbilitySystemTestAttributeSet : UAttributeSet {
	float MaxHealth; // 0x34
	float Health; // 0x38
	float Mana; // 0x3c
	float MaxMana; // 0x40
	float Damage; // 0x44
	float SpellDamage; // 0x48
	float PhysicalDamage; // 0x4c
	float CritChance; // 0x50
	float CritMultiplier; // 0x54
	float ArmorDamageReduction; // 0x58
	float DodgeChance; // 0x5c
	float LifeSteal; // 0x60
	float Strength; // 0x64
	float StackingAttribute1; // 0x68
	float StackingAttribute2; // 0x6c
	float NoStackAttribute; // 0x70
};

struct UCombineMeshesTool : UMultiSelectionTool {
	UCombineMeshesToolProperties* BasicProperties; // 0x90
	UOnAcceptHandleSourcesProperties* HandleSourceProperties; // 0x98
};

struct UBTService_DefaultFocus : UBTService_BlackboardBase {
	char FocusPriority; // 0x98
};

struct UOnAcceptHandleSourcesProperties : UInteractiveToolPropertySet {
	EHandleSourcesMethod OnToolAccept; // 0x60
};

struct UHapticFeedbackEffect_Curve : UHapticFeedbackEffect_Base {
	FHapticFeedbackDetails_Curve HapticDetails; // 0x28
};

struct UTimecodeProvider : UObject {
	float FrameDelay; // 0x28
};

struct UEnvQueryGenerator_OnCircle : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue CircleRadius; // 0x80
	FAIDataProviderFloatValue SpaceBetween; // 0xb8
	FAIDataProviderIntValue NumberOfPoints; // 0xf0
	EPointOnCircleSpacingMethod PointOnCircleSpacingMethod; // 0x128
	FEnvDirection ArcDirection; // 0x130
	FAIDataProviderFloatValue ArcAngle; // 0x150
	float AngleRadians; // 0x188
	UEnvQueryContext* CircleCenter; // 0x190
	bool bIgnoreAnyContextActorsWhenGeneratingCircle; // 0x198
	FAIDataProviderFloatValue CircleCenterZOffset; // 0x1a0
	FEnvTraceData TraceData; // 0x1d8
	char bDefineArc : 1; // 0x208
};

struct UProceduralFoliageSpawner : UObject {
	int32_t RandomSeed; // 0x28
	float TileSize; // 0x2c
	int32_t NumUniqueTiles; // 0x30
	float MinimumQuadTreeSize; // 0x34
	TArray<FFoliageTypeObject> FoliageTypes; // 0x40
};

struct ASGGameModeLobby : ASGGameMode {
	ESGLobbyType LobbyType; // 0x1758
};

struct UUI_StructureOccupyBuffSlot : UUserWidget {
	TWeakObjectPtr<ASGStructureOccupy> RemoteActor; // 0x260
	USGUI* RootSGUI; // 0x268
	FOccupyBuffRequirement BuffRequirement; // 0x270
	UUI_StructureOccupyBuffPanel* ParentUI; // 0x2b8
	UTextBlock* BuffNameText; // 0x2c0
	UTextBlock* BuffNumText; // 0x2c8
	UButton* BuffButton; // 0x2d0
	UTextBlock* BuffButtonText; // 0x2d8
	UImage* BuffImage; // 0x2e0
	UImage* CapitalImage; // 0x2e8
};

struct UProceduralShapeToolProperties : UInteractiveToolPropertySet {
	bool bInstanceIfPossible; // 0x60
	EMakeMeshPolygroupMode PolygroupMode; // 0x61
	EMakeMeshPlacementType PlaceMode; // 0x62
	bool bSnapToGrid; // 0x63
	EMakeMeshPivotLocation PivotLocation; // 0x64
	float Rotation; // 0x68
	bool bAlignShapeToPlacementSurface; // 0x6c
};

struct UMaterialExpressionStaticSwitch : UMaterialExpression {
	char DefaultValue : 1; // 0x40
	FExpressionInput A; // 0x44
	FExpressionInput B; // 0x58
	FExpressionInput Value; // 0x6c
};

struct USGGameInstance : UGameInstance {
	USceneObjectsManager* SceneObjectsManager; // 0x258
	UOnlineLobbySession* ClientOnlineLobbySession; // 0x338
	char bFirstPreLoadMap : 1; // 0x340
};

struct UWBP_KeyItemTips_C : USGToolTipWidget {
	UImage* ImgBack; // 0x288
};

struct UMaterialExpressionSetMaterialAttributes : UMaterialExpression {
	TArray<FExpressionInput> Inputs; // 0x40
	TArray<FGuid> AttributeSetTypes; // 0x50
};

struct USGCraftRequirementEntry : UUserWidget {
	UTextBlock* RequirementLabel; // 0x260
	UHorizontalBox* ItemIconList; // 0x268
};

struct ASGSpectatorPawn : ASpectatorPawn {
	float ViewTraceDistatnce; // 0x398
	float ViewTraceRadius; // 0x39c
	float LerpSpeed; // 0x3a0
};

struct UUI_Activity_Xiancheng : USGUI {
	UTaishouTeamInfoSlot* AllianceGuildSlotTemplate; // 0x2d8
	int32_t AllianceGuildShowColNum; // 0x2e0
	UImage* Image_Mask; // 0x2e8
	UTextBlock* TbBattleState; // 0x2f0
	UTextBlock* TbBattleTimeValue; // 0x2f8
	UButton* BtEnterBattle; // 0x300
	UButton* BtShowCrossTransport; // 0x308
	UButton* BtShowBattle; // 0x310
	UButton* BtShowInventory; // 0x318
	UTextBlock* TbEnterBattle; // 0x320
	UCanvasPanel* XianChengOwnerPanel; // 0x328
	UTaishouTeamInfoSlot* TeamInfoSlotXianChengOwner; // 0x330
	UCanvasPanel* XianChengAttackPanel; // 0x338
	UTaishouTeamInfoSlot* TeamInfoSlotXianChengAttack; // 0x340
	UCanvasPanel* JinXianPanel; // 0x348
	UButton* BtJinXian; // 0x350
	UTextBlock* TbJinXianTotalNum; // 0x358
	UEditableTextBox* EtJinXianNum; // 0x360
	UScrollBox* ScbOwnerAllianceGuilds; // 0x368
	UUniformGridPanel* UgpOwnerAllianceGuilds; // 0x370
	UScrollBox* ScbAttackerAllianceGuilds; // 0x378
	UUniformGridPanel* UgpAttackerAllianceGuilds; // 0x380
	FBattleServiceQueueCountInfo BattleServiceQueueCountInfo; // 0x388
	FVector2D XianChengOwnerPanelMiddlePos; // 0x390
	FVector2D XianChengOwnerPanelLeftPos; // 0x398
	TArray<FGuid> OwnerGuildList; // 0x3a0
	int32_t OwnerGuildShowIndex; // 0x3b0
	TArray<FGuid> AttackerGuildList; // 0x3b8
	int32_t AttackerGuildShowIndex; // 0x3c8
	int32_t LastShowAllianceGuildsType; // 0x3cc
};

struct UPlaneCutOperatorFactory : UObject {
	UPlaneCutTool* CutTool; // 0x30
};

struct USetMontageRate_AnimNotify : UAnimNotify {
	ESetMontageType Enum_SetMontageType; // 0x38
	char IsEnd : 1; // 0x39
	char UseDirectlyAutoAttack : 1; // 0x39
	float AnimLength; // 0x3c
	UAnimMontage* PlayMontage; // 0x40
	TMap<FName, USceneComponent*> ConditionComponents; // 0x48
	TMap<FName, USceneComponent*> BlockComponents; // 0x98
};

struct UNiagaraRibbonRendererProperties : UNiagaraRendererProperties {
	UMaterialInterface* Material; // 0x80
	FNiagaraUserParameterBinding MaterialUserParamBinding; // 0x88
	ENiagaraRibbonFacingMode FacingMode; // 0xa8
	FNiagaraRibbonUVSettings UV0Settings; // 0xac
	FNiagaraRibbonUVSettings UV1Settings; // 0xd0
	ENiagaraRibbonDrawDirection DrawDirection; // 0xf4
	float CurveTension; // 0xf8
	ENiagaraRibbonTessellationMode TessellationMode; // 0xfc
	int32_t TessellationFactor; // 0x100
	bool bUseConstantFactor; // 0x104
	float TessellationAngle; // 0x108
	bool bScreenSpaceTessellation; // 0x10c
	FNiagaraVariableAttributeBinding PositionBinding; // 0x110
	FNiagaraVariableAttributeBinding ColorBinding; // 0x168
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x1c0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x218
	FNiagaraVariableAttributeBinding RibbonTwistBinding; // 0x270
	FNiagaraVariableAttributeBinding RibbonWidthBinding; // 0x2c8
	FNiagaraVariableAttributeBinding RibbonFacingBinding; // 0x320
	FNiagaraVariableAttributeBinding RibbonIdBinding; // 0x378
	FNiagaraVariableAttributeBinding RibbonLinkOrderBinding; // 0x3d0
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x428
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x480
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x4d8
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x530
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x588
	FNiagaraVariableAttributeBinding U0OverrideBinding; // 0x5e0
	FNiagaraVariableAttributeBinding V0RangeOverrideBinding; // 0x638
	FNiagaraVariableAttributeBinding U1OverrideBinding; // 0x690
	FNiagaraVariableAttributeBinding V1RangeOverrideBinding; // 0x6e8
};

struct USignificanceManager : UObject {
	FSoftClassPath SignificanceManagerClassName; // 0x108
};

struct UEnvQueryGenerator_Donut : UEnvQueryGenerator_ProjectedPoints {
	FAIDataProviderFloatValue InnerRadius; // 0x80
	FAIDataProviderFloatValue OuterRadius; // 0xb8
	FAIDataProviderIntValue NumberOfRings; // 0xf0
	FAIDataProviderIntValue PointsPerRing; // 0x128
	FEnvDirection ArcDirection; // 0x160
	FAIDataProviderFloatValue ArcAngle; // 0x180
	bool bUseSpiralPattern; // 0x1b8
	UEnvQueryContext* Center; // 0x1c0
	char bDefineArc : 1; // 0x1c8
};

struct UUI_MsgRecord : USGUI {
	TArray<FMsgRecordData> MsgRecordContents; // 0x2d8
	URichTextBlock* RTbMsgRecord; // 0x300
	UScrollBox* MsgRecordScrollBox; // 0x308
	UCanvasPanel* LoadingCanvas; // 0x310
};

struct UVehicleACPanel : UUserWidget {
	float RadarChartStartPercent; // 0x260
	char bShowSumPanel : 1; // 0x264
	TMap<EGeneralsQualityType, float> QualityCorrectionToQualityType; // 0x268
	FLinearColor TextFontOutlineColor[0x6]; // 0x2b8
	UCanvasPanel* RadarChartPanel; // 0x318
	UCanvasPanel* SumPanel; // 0x320
	URadarChart* RadarChart; // 0x328
	UTextBlock* SumText; // 0x330
	UTextBlock* SpeedText; // 0x338
	UTextBlock* HPText; // 0x340
	UTextBlock* SPText; // 0x348
	UTextBlock* OperateText; // 0x350
	UTextBlock* WeightText; // 0x358
	TWeakObjectPtr<ASG_AnimalsCharacter> BindVehicleCharacter; // 0x360
};

struct UConsoleSettings : UObject {
	int32_t MaxScrollbackSize; // 0x28
	TArray<FAutoCompleteCommand> ManualAutoCompleteList; // 0x30
	TArray<FString> AutoCompleteMapPaths; // 0x40
	float BackgroundOpacityPercentage; // 0x50
	bool bOrderTopToBottom; // 0x54
	bool bDisplayHelpInAutoComplete; // 0x55
	FColor InputColor; // 0x58
	FColor HistoryColor; // 0x5c
	FColor AutoCompleteCommandColor; // 0x60
	FColor AutoCompleteCVarColor; // 0x64
	FColor AutoCompleteFadedColor; // 0x68
};

struct UGameplayTask_TimeLimitedExecution : UGameplayTask {
	FMulticastInlineDelegate OnFinished; // 0x68
	FMulticastInlineDelegate OnTimeExpired; // 0x78
};

struct UEnvQuery : UDataAsset {
	FName QueryName; // 0x30
	TArray<UEnvQueryOption*> Options; // 0x38
};

struct UAchievementRewardDamageMultiply : UUserWidget {
	USGToolTipWidget* ToolTipTemplate; // 0x260
	UImage* ImgIcon; // 0x268
	UButton* BtnIcon; // 0x270
	UTextBlock* TbDamageMultiply; // 0x278
};

struct UCustomPlaySound_AnimNotify : UAnimNotify {
	ESGSoundType SoundType; // 0x38
	FName SoundID; // 0x3c
	FVoiceData PreviewVoiceData; // 0x44
	ECharacterSex PreviewSex; // 0x4c
	char UseWeaponSound : 1; // 0x4d
	char IsEquip : 1; // 0x4d
	ENotifySoundPlayMode PlayMode; // 0x4e
	FName SoundTag; // 0x50
	char bFollow : 1; // 0x58
	FName AttachName; // 0x5c
	char ReplaySound : 1; // 0x64
	char ForcePlay : 1; // 0x64
	char StopWhenAnimInterrupe : 1; // 0x64
	char StopLooping : 1; // 0x64
};

struct UMaterialExpressionArctangent2Fast : UMaterialExpression {
	FExpressionInput Y; // 0x40
	FExpressionInput X; // 0x54
};

struct UTextureRenderTargetVolume : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	int32_t SizeZ; // 0xe8
	FLinearColor ClearColor; // 0xec
	EPixelFormat OverrideFormat; // 0xfc
	char bHDR : 1; // 0xfd
	char bForceLinearGamma : 1; // 0xfd
};

struct UAbilityTask_WaitDelay : UAbilityTask {
	FMulticastInlineDelegate OnFinish; // 0x80
};

struct UUI_MiniMap : USGUI {
	USGMiniMap* MiniMap; // 0x2d8
	UTextBlock* TbMousePosition; // 0x2e0
};

struct USubmixEffectReverbPreset : USoundEffectSubmixPreset {
	FSubmixEffectReverbSettings Settings; // 0xd0
};

struct UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy : UARBaseAsyncTaskBlueprintProxy {
	FMulticastInlineDelegate OnSuccess; // 0x50
	FMulticastInlineDelegate OnFailed; // 0x60
};

struct UUI_ChatReportBtn : UUserWidget {
	UButton* ExtraButton; // 0x260
};

struct UCineCameraComponent : UCameraComponent {
	FCameraFilmbackSettings FilmbackSettings; // 0x7e0
	FCameraFilmbackSettings Filmback; // 0x7ec
	FCameraLensSettings LensSettings; // 0x7f8
	FCameraFocusSettings FocusSettings; // 0x810
	float CurrentFocalLength; // 0x868
	float CurrentAperture; // 0x86c
	float CurrentFocusDistance; // 0x870
	TArray<FNamedFilmbackPreset> FilmbackPresets; // 0x880
	TArray<FNamedLensPreset> LensPresets; // 0x890
	FString DefaultFilmbackPresetName; // 0x8a0
	FString DefaultFilmbackPreset; // 0x8b0
	FString DefaultLensPresetName; // 0x8c0
	float DefaultLensFocalLength; // 0x8d0
	float DefaultLensFStop; // 0x8d4
};

struct UFloatingPawnMovement : UPawnMovementComponent {
	float MaxSpeed; // 0x148
	float Acceleration; // 0x14c
	float Deceleration; // 0x150
	float TurningBoost; // 0x154
	char bPositionCorrected : 1; // 0x158
};

struct UParticleModuleRotationRate : UParticleModuleRotationRateBase {
	FRawDistributionFloat StartRotationRate; // 0x30
};

struct UForceFeedbackComponent : USceneComponent {
	UForceFeedbackEffect* ForceFeedbackEffect; // 0x208
	char bAutoDestroy : 1; // 0x210
	char bStopWhenOwnerDestroyed : 1; // 0x210
	char bLooping : 1; // 0x210
	char bIgnoreTimeDilation : 1; // 0x210
	char bOverrideAttenuation : 1; // 0x210
	float IntensityMultiplier; // 0x214
	UForceFeedbackAttenuation* AttenuationSettings; // 0x218
	FForceFeedbackAttenuationSettings AttenuationOverrides; // 0x220
	FMulticastInlineDelegate OnForceFeedbackFinished; // 0x2d0
};

struct UPreviewMeshCollection : UDataAsset {
	USkeleton* Skeleton; // 0x38
	TArray<FPreviewMeshCollectionEntry> SkeletalMeshes; // 0x40
};

struct UGlobalMap_ServerItemTips : USGToolTipWidget {
	UMaterialInterface* GuildIconMat; // 0x288
	UGlobalMap_WorshipItem* WorshipItemTemplate; // 0x290
	float MinRequestTime; // 0x298
	UImage* ImgGuildIcon; // 0x2a0
	UTextBlock* TbXianChengName; // 0x2a8
	UVerticalBox* VbOccupyInfo; // 0x2b0
	UTextBlock* TbGuildName; // 0x2b8
	UTextBlock* TbGuildOwnerName; // 0x2c0
	UTextBlock* TbGuildOwnerJob; // 0x2c8
	UTextBlock* TbGuildLevel; // 0x2d0
	UTextBlock* TbMemberNum; // 0x2d8
	UTextBlock* TbOccupyGuanAiNum; // 0x2e0
	UTextBlock* TbOccupyCityNum; // 0x2e8
	UTextBlock* TbOccupyXianChengNum; // 0x2f0
	UTextBlock* TbNoWorship; // 0x2f8
	UUniformGridPanel* UGPWorship; // 0x300
	UTextBlock* TbTotalTaxRate; // 0x308
	UTextBlock* TbTaxRate; // 0x310
	UCanvasPanel* LoadingCanvas; // 0x318
	UMaterialInstanceDynamic* DynamicGuildIconInstance; // 0x378
	UGlobalMap_ServerItem* ServerItem; // 0x380
	TArray<UGlobalMap_WorshipItem*> WorshipItems; // 0x388
};

struct UParticleModuleAcceleration : UParticleModuleAccelerationBase {
	FRawDistributionVector Acceleration; // 0x38
	char bApplyOwnerScale : 1; // 0x80
};

struct UUI_AdminBlockListPanel : USGUI {
	UScrollBox* ScrollBoxPlayerList; // 0x2d8
	UEditableTextBox* SearchTextBoxPlayer; // 0x2e0
	UUI_ServerAdminBlockListRow* UUI_ServerAdminBlockListRowTemplate; // 0x308
	TArray<UUI_ServerAdminBlockListRow*> CachedServerBlockPlayerRow; // 0x310
	UUI_ModifyText* InputUIOverride; // 0x320
	UButton* Button_Add; // 0x328
	UButton* Button_Remove; // 0x330
	UButton* Button_Clear; // 0x338
};

struct UMaterialExpressionFunctionInput : UMaterialExpression {
	FExpressionInput Preview; // 0x40
	FName InputName; // 0x54
	FString Description; // 0x60
	FGuid ID; // 0x70
	EFunctionInputType InputType; // 0x80
	FVector4 PreviewValue; // 0x90
	char bUsePreviewValueAsDefault : 1; // 0xa0
	int32_t SortPriority; // 0xa4
	char bCompilingFunctionPreview : 1; // 0xa8
};

struct ULightPropagationVolumeBlendable : UObject {
	FLightPropagationVolumeSettings Settings; // 0x30
	float BlendWeight; // 0x70
};

struct UWeatherMainLoopInterpData : UWeatherInterpData {
	FWeatherFloatTrack DirectionalLightIntensity; // 0x50
	FWeatherFloatTrack DirectionalLightTemperature; // 0xf0
	FWeatherFloatTrack DirectionalLightShadowAmount; // 0x190
	FWeatherFloatTrack DirectionalLightVolumetricScatteringIntensity; // 0x230
	FWeatherFloatTrack DirectionalLightBloomScale; // 0x2d0
	FWeatherLinearColorTrack DirectionalLightColor; // 0x370
	FWeatherLinearColorTrack DirectionalLightRotation; // 0x598
	FWeatherFloatTrack MoonLightIntensity; // 0x7c0
	FWeatherFloatTrack MoonLightTemperature; // 0x860
	FWeatherFloatTrack MoonLightShadowAmount; // 0x900
	FWeatherFloatTrack MoonLightVolumetricScatteringIntensity; // 0x9a0
	FWeatherFloatTrack MoonLightBloomScale; // 0xa40
	FWeatherLinearColorTrack MoonLightColor; // 0xae0
	FWeatherLinearColorTrack MoonLightRotation; // 0xd08
	FWeatherFloatTrack SkylightIntensity; // 0xf30
	FWeatherLinearColorTrack SkyLightColor; // 0xfd0
	FWeatherFloatTrack CloudShadowContrast; // 0x11f8
	FWeatherFloatTrack CurrentTemperature; // 0x1298
	FWeatherFloatTrack FogDensity; // 0x1338
	FWeatherFloatTrack FogHeightFalloff; // 0x13d8
	FWeatherFloatTrack SecondFogDensity; // 0x1478
	FWeatherFloatTrack SecondFogHeightFalloff; // 0x1518
	FWeatherFloatTrack SecondFogHeightOffset; // 0x15b8
	FWeatherFloatTrack startDistance; // 0x1658
	FWeatherFloatTrack FogBaseZHeight; // 0x16f8
	FWeatherLinearColorTrack FogInscatteringColor; // 0x1798
	FWeatherFloatTrack BloomIntensity; // 0x19c0
	FWeatherFloatTrack AutoExposureMinBrightness; // 0x1a60
	FWeatherFloatTrack AutoExposureMaxBrightness; // 0x1b00
	FWeatherFloatTrack AutoExposureBias; // 0x1ba0
	FWeatherFloatTrack WhiteTemp; // 0x1c40
	FWeatherFloatTrack WhiteTint; // 0x1ce0
	FWeatherFloatTrack RayleighScatteringScale; // 0x1d80
	FWeatherLinearColorTrack RayleighScattering; // 0x1e20
	FWeatherFloatTrack RayleighExponentialDistribution; // 0x2048
	FWeatherFloatTrack MieScatteringScale; // 0x20e8
	FWeatherFloatTrack MieExponentialDistribution; // 0x2188
	FWeatherLinearColorTrack MieScattering; // 0x2228
	FWeatherLinearColorTrack SkyLuminanceFactor; // 0x2450
	FWeatherFloatTrack AerialPespectiveViewDistanceScale; // 0x2678
	FWeatherFloatTrack HeightFogContribution; // 0x2718
	FWeatherFloatTrack TransmittanceMinLightElevationAngle; // 0x27b8
	FWeatherFloatTrack WindStrength; // 0x2858
	FWeatherFloatTrack WindSpeed; // 0x28f8
	FWeatherLinearColorTrack WindRotation; // 0x2998
	FWeatherFloatTrack MoonMeshLightIntensity; // 0x2bc0
	FWeatherLinearColorTrack MoonRotation; // 0x2c60
	FWeatherFloatTrack StarMeshLightIntensity; // 0x2e88
	FWeatherFloatTrack StarDensityAttention; // 0x2f28
	FWeatherLinearColorTrack StarRotation; // 0x2fc8
	FWeatherFloatTrack ScatteringCoeff; // 0x31f0
	FWeatherFloatTrack AltocumulusORCirrusPower; // 0x3290
	FWeatherFloatTrack SunDiskIntensity; // 0x3330
	FWeatherLinearColorTrack CloudColour; // 0x33d0
	FWeatherFloatTrack CloudOpacity; // 0x35f8
	FWeatherFloatTrack CloudWindSpeed; // 0x3698
	FWeatherFloatTrack StratusPower; // 0x3738
	FWeatherFloatTrack CumulusPower; // 0x37d8
	FWeatherFloatTrack PluvialCumulusPower; // 0x3878
};

struct UTextPropertyTestObject : UObject {
	FText DefaultedText; // 0x28
	FText UndefaultedText; // 0x40
	FText TransientText; // 0x58
};

struct UGuildPanel : USGUI {
	UGuildDetailsSlot* GuildDetailsSlot; // 0x2d8
	UGuildMemberListPanel* GuildMemberListPanel; // 0x2e0
	UGuildStructureListPanel* GuildStructureListPanel; // 0x2e8
};

struct ASGStructureAnimalTameCage : ASGStructure {
	TArray<FAnimalTameCageConfig> AnimalTameCageConfigs; // 0xb98
	UBoxComponent* BoxComponent; // 0xba8
};

struct UBTTask_Wait : UBTTaskNode {
	float WaitTime; // 0x70
	float RandomDeviation; // 0x74
};

struct USourceEffectFoldbackDistortionPreset : USoundEffectSourcePreset {
	FSourceEffectFoldbackDistortionSettings Settings; // 0x9c
};

struct AGameModeBase : AInfo {
	FString OptionsString; // 0x310
	AGameSession* GameSessionClass; // 0x320
	AGameStateBase* GameStateClass; // 0x328
	APlayerController* PlayerControllerClass; // 0x330
	APlayerState* PlayerStateClass; // 0x338
	AHUD* HUDClass; // 0x340
	APawn* DefaultPawnClass; // 0x348
	ASpectatorPawn* SpectatorClass; // 0x350
	APlayerController* ReplaySpectatorPlayerControllerClass; // 0x358
	AServerStatReplicator* ServerStatReplicatorClass; // 0x360
	AGameSession* GameSession; // 0x368
	AGameStateBase* GameState; // 0x370
	AServerStatReplicator* ServerStatReplicator; // 0x378
	FText DefaultPlayerName; // 0x380
	char bUseSeamlessTravel : 1; // 0x398
	char bStartPlayersAsSpectators : 1; // 0x398
	char bPauseable : 1; // 0x398
};

struct UBTDecorator_IsBBEntryOfClass : UBTDecorator_BlackboardBase {
	UObject* TestClass; // 0x90
};

struct UItemAuctionBuyConfirmPanel : USGUI {
	UEditableTextBox* EditableTextBox_BuyCount; // 0x2d8
	UImage* Image_Icon; // 0x2e0
	UTextBlock* TextBlock_Name; // 0x2e8
	UTextBlock* TextBlock_UnitPrice; // 0x2f0
	UTextBlock* TextBlock_Price; // 0x2f8
	UButton* Button_OK; // 0x300
	UButton* Button_Cancel; // 0x308
	TSoftObjectPtr<UTexture2D> GeneralIcon; // 0x310
	TSoftObjectPtr<UTexture2D> HorseIcon; // 0x338
	TWeakObjectPtr<UUI_GuildAuctionHouse> RootUI; // 0x360
};

struct USGCharacterAnimInstance : UAnimInstance {
	ASGCharacter* SGCharacter; // 0x2c0
	ASG_AnimalsCharacter* SGAnimalsCharacter; // 0x2d8
	USG_AnimalsAnimInstance* SGAnimalsAnimInstance; // 0x2e0
	ASG_MoveSeatingCharacter* SGMoveSeatingCharacter; // 0x2e8
	USiegeAnimInstance* SGSiegeAnimInstance; // 0x2f0
	UAnimMontage* PreviewMontage; // 0x2f8
	char bIsPreviewSceneAnimInstance : 1; // 0x300
	char IsWantMoving : 1; // 0x300
	char UseUpperBodyLayer : 1; // 0x300
	char IsGroundMovementMode : 1; // 0x300
	char IsFallingMovementMode : 1; // 0x300
	char IsRagdollMovementMode : 1; // 0x300
	char IsSwimMovementMode : 1; // 0x300
	char IsClimbMovementMode : 1; // 0x301
	char IsRiderMovementMode : 1; // 0x301
	char bIsPassengerMovementMode : 1; // 0x301
	char IsRiderGroundMovementMode : 1; // 0x301
	char IsRiderFallingMovementMode : 1; // 0x301
	char IsRiderSwimMovementMode : 1; // 0x301
	char IsStand : 1; // 0x301
	char IsCrouch : 1; // 0x301
	char IsMeleeFighting : 1; // 0x302
	char IsMeleeNotFighting : 1; // 0x302
	char IsShooterFighting : 1; // 0x302
	char IsShooterNotFighting : 1; // 0x302
	char IsFightingOrPlayAttackMontage : 1; // 0x302
	char IsRiderMeleePlayAttackMontage : 1; // 0x302
	char IsRiderMeleePlaySprintAttackMontage : 1; // 0x302
	char IsInAirVelocity : 1; // 0x302
	EPrimaryWeaponType Enum_CurrentWeaponType; // 0x303
	FAnimsConfig Struct_Empty_Stand_Rlx_Anim; // 0x308
	FOptimizationAnimsConfig UnarmStandRlxAnim; // 0x1be0
	FOptimizationAnimsConfig UnarmStandAimAnim; // 0x3570
	FOptimizationAnimsConfig UnarmCrouchRlxAnim; // 0x4f00
	FOptimizationAnimsConfig UnarmCrouchAimAnim; // 0x6890
	FAnimsConfig Struct_Wep_Stand_Rlx_Anim; // 0x6948
	FOptimizationAnimsConfig WeaponStandRlxAnim; // 0x8220
	FOptimizationAnimsConfig WeaponStandAimAnim; // 0x9bb0
	FOptimizationAnimsConfig WeaponCrouchRlxAnim; // 0xb540
	FOptimizationAnimsConfig WeaponCrouchAimAnim; // 0xced0
	char IsMoveForward : 1; // 0xcf88
	float GroundPlayRate; // 0xcf8c
	EVehicleType Enum_VehicleType; // 0xcf90
	FAnimalsAnimInstanceConfig Struct_AnimalsStandConfig; // 0xd710
	FAnimalsAnimInstanceConfig Struct_AnimalsStandHindConfig; // 0xd790
	FAnimalsAnimInstanceConfig Struct_AnimalsSittingConfig; // 0xd810
	FAnimalsAnimInstanceConfig Struct_AnimalsLyingConfig; // 0xd890
	FAnimalsAnimInstanceConfig Struct_AnimalsSwimConfig; // 0xd910
	FVector Velocity; // 0xd990
	char IsDead : 1; // 0xd99c
	UAnimSequence* DeathAnimPose; // 0xd9a0
	TArray<UAnimSequence*> DeathAnimPoses; // 0xd9a8
	UAnimSequence* PreviewDeathAnimPose; // 0xd9b8
	char IsSleeping : 1; // 0xd9c0
	char IsStun : 1; // 0xd9c0
	char IsMoving : 1; // 0xd9c0
	char HasMovementInput : 1; // 0xd9c0
	char IsPlayerInput : 1; // 0xd9c0
	FRotator LookingRotation; // 0xd9c4
	FRotator LastVelocityRotation; // 0xd9d0
	FRotator LastMovementInputRotation; // 0xd9dc
	float AimYawDelta; // 0xd9e8
	float AimYawRate; // 0xd9ec
	float Speed; // 0xd9f0
	bool bIsQuickTurn; // 0xd9f4
	char ShouldTurnInPlace : 1; // 0xd9f5
	char TurningInPlace : 1; // 0xd9f5
	char TurningRight : 1; // 0xd9f5
	float TurnInPlaceDelayCount; // 0xd9f8
	UAnimMontage* ActiveTurnInPlaceMontage; // 0xda00
	char UseAimOffSet : 1; // 0xda08
	float AimOffSetInterpSpeed; // 0xda0c
	float RiderAimOffSetInterpSpeed; // 0xda10
	FVector2D AimOffset; // 0xda14
	FVector2D ExtraAimOffset; // 0xda1c
	EAimDirection Enum_CurrentAimDirection; // 0xda24
	float Stand_GaitValue; // 0xda28
	float Crouch_GaitValue; // 0xda2c
	float Swim_GaitValue; // 0xda30
	float MovingDirection; // 0xda34
	float ArchDirection; // 0xda38
	float Stand_PlayRate; // 0xda3c
	float Crouch_PlayRate; // 0xda40
	float MovingStartPosition; // 0xda44
	float IdlePlayRate; // 0xda48
	float IdlePosition; // 0xda4c
	EStanceMode Enum_StanceMode; // 0xda50
	ERotationMode Enum_RotationMode; // 0xda51
	ECustomMovementMode Enum_MovementMode; // 0xda52
	ECustomMovementMode Enum_PrevMovementMode; // 0xda53
	ECustomMovementMode Enum_VehicleMovementMode; // 0xda54
	ECustomMovementMode Enum_VehiclePrevMovementMode; // 0xda55
	EMovementDirection Enum_MovementDirection; // 0xda56
	EInputDirection Enum_CardinalDirection; // 0xda57
	char bShowFootTrace : 1; // 0xdb98
	ETraceTypeQuery FootTraceChannel; // 0xdb99
	bool EnableFootIK; // 0xdb9a
	float FootIkAlpha; // 0xdb9c
	float PelvisHeightErrorTolerance; // 0xdba0
	float FootHeightErrorTolerance; // 0xdba4
	float FootTraceLengthAbove; // 0xdba8
	float FootTraceLengthBelow; // 0xdbac
	FName LeftFootBoneName; // 0xdbb0
	FName RightFootBoneName; // 0xdbb8
	float FootRotationOffsetInterpSpeed; // 0xdbc0
	float FootZOffsetInterpSpeed; // 0xdbc4
	FVector MinLimitsFootOffsets; // 0xdbc8
	FVector MaxLimitsFootOffsets; // 0xdbd4
	float FootPosition; // 0xdbe0
	FVector PelvisOffset; // 0xdbe4
	FRotator PelvisRotation; // 0xdbf0
	FModifyConfig Struct_LeftFootModifyConfig; // 0xdbfc
	FModifyConfig Struct_RightFootModifyConfig; // 0xdc48
	char bUpdateMorphCurve : 1; // 0xdc94
	float UpperBodyInterpSpeed; // 0xdc98
	char bUseTwoBoneIK : 1; // 0xdc9c
	char bUseRotateSolver : 1; // 0xdc9c
	float BreatheCurveValue; // 0xdca0
	FModifyConfig Struct_LeftHandModifyConfig; // 0xdca4
	FModifyConfig Struct_LeftLowerarmModifyConfig; // 0xdcf0
	FModifyConfig Struct_LeftClavicleModifyConfig; // 0xdd3c
	FModifyConfig Struct_RightHandModifyConfig; // 0xdd88
	FModifyConfig Struct_RightLowerarmModifyConfig; // 0xddd4
	FModifyConfig Struct_RightClavicleModifyConfig; // 0xde20
	float MorphSolverAlpha; // 0xde6c
	float LeanInAir; // 0xde70
	float FlailRate; // 0xde74
	float FlailBlendAlpha; // 0xde78
	float LandPredictionAlpha; // 0xde7c
	UCurveFloat* FlailAlphaCurve; // 0xde80
	UCurveFloat* LandAlphaCurve; // 0xde88
	FVector2D LeanGrounded; // 0xdeb8
	float LeanGroundedInterpSpeed; // 0xdec0
	char bIsTransition : 1; // 0xdec4
	UAnimMontage* TransitionMontage; // 0xded0
	char UseWeapon : 1; // 0xdeda
	char IsAiming : 1; // 0xdeda
	char IsFighting : 1; // 0xdeda
	char IsAttack : 1; // 0xdeda
	char IsBlock : 1; // 0xdeda
	char bIsOffHandBlock : 1; // 0xdeda
	char IsPlayAttackMontage : 1; // 0xdeda
	char IsPlayRiderSprintAttackMontage : 1; // 0xdeda
	char bUseOffHandLayer : 1; // 0xdedb
	char bShouldSwim : 1; // 0xdedb
	char bIsSurfaceState : 1; // 0xdedb
	float SwimPlayRate; // 0xdedc
	float SwimDirection; // 0xdee0
	float SwimAdditiveMultiply; // 0xdee4
	float SwimRootMaxHeight; // 0xdee8
	FVector2D SwimAimOffset; // 0xdeec
	float SwimArchDirectionScale; // 0xdef4
	float SwimArchDirectionInterpSpeed; // 0xdef8
	float SwimUpDirectionInterpSpeed; // 0xdefc
	char bIsSwimBackwardDirection : 1; // 0xdf00
	float SwimArchDirectionRate; // 0xdf04
	float SwimArchDirectionRateInterpSpeed; // 0xdf08
	FVector2D SwimArchDirection; // 0xdf0c
	char bIsSurfaceIdle : 1; // 0xdf14
	char bIsSwimAnimMoving : 1; // 0xdf14
	FVector SwimRootTranslation; // 0xdf18
	FRotator SwimPelvisRotation; // 0xdf24
	FRotator SwimSpine01Rotation; // 0xdf30
	FRotator SwimSpine02Rotation; // 0xdf3c
	FRotator SwimSpine03Rotation; // 0xdf48
	FVector HorseBellyMorphLocation_L; // 0xdf5c
	FVector HorseBellyMorphLocation_R; // 0xdf68
	FVector HorsePelvisOffset; // 0xdf74
	FVector HorseBellyLocation_L; // 0xdf80
	FVector HorseBellyLocation_R; // 0xdf8c
	char bUpdateFootIK : 1; // 0xdf98
	FModifyConfig RiderPelvisModifyData; // 0xdf9c
	FModifyConfig RiderLeftCalfModifyData; // 0xdfe8
	FModifyConfig RiderLeftFootModifyData; // 0xe034
	FModifyConfig RiderRightCalfModifyData; // 0xe080
	FModifyConfig RiderRightFootModifyData; // 0xe0cc
	FInjuredData InjuredData; // 0xe118
	FRescueData RescueData; // 0xe188
	FPassengerAnimsConfig PassengerAnimsConfig; // 0xe198
	UAnimSkill_LadderData* LadderData; // 0xe1a8
	int32_t LadderFootIndex; // 0xe1b0
	UAnimSequence* LadderSequence; // 0xe1c8
	char bInstrumentPlaying : 1; // 0xe200
};

struct UParticleModuleSizeScale : UParticleModuleSizeBase {
	FRawDistributionVector SizeScale; // 0x30
	char EnableX : 1; // 0x78
	char EnableY : 1; // 0x78
	char EnableZ : 1; // 0x78
};

struct UPhysicsSettings : UPhysicsSettingsCore {
	FRigidBodyErrorCorrection PhysicErrorCorrection; // 0xe0
	ESettingsLockedAxis LockedAxis; // 0x114
	ESettingsDOF DefaultDegreesOfFreedom; // 0x115
	bool bSuppressFaceRemapTable; // 0x116
	bool bSupportUVFromHitResults; // 0x117
	bool bDisableActiveActors; // 0x118
	bool bDisableKinematicStaticPairs; // 0x119
	bool bDisableKinematicKinematicPairs; // 0x11a
	bool bDisableCCD; // 0x11b
	bool bEnableEnhancedDeterminism; // 0x11c
	float AnimPhysicsMinDeltaTime; // 0x120
	bool bSimulateAnimPhysicsAfterReset; // 0x124
	float MaxPhysicsDeltaTime; // 0x128
	bool bSubstepping; // 0x12c
	bool bSubsteppingAsync; // 0x12d
	float MaxSubstepDeltaTime; // 0x130
	int32_t MaxSubsteps; // 0x134
	float SyncSceneSmoothingFactor; // 0x138
	float InitialAverageFrameRate; // 0x13c
	int32_t PhysXTreeRebuildRate; // 0x140
	TArray<FPhysicalSurfaceName> PhysicalSurfaces; // 0x148
	FBroadphaseSettings DefaultBroadphaseSettings; // 0x158
	float MinDeltaVelocityForHitEvents; // 0x198
	FChaosPhysicsSettings ChaosSettings; // 0x19c
};

struct APrecomputedVisibilityOverrideVolume : AVolume {
	TArray<AActor*> OverrideVisibleActors; // 0x348
	TArray<AActor*> OverrideInvisibleActors; // 0x358
	TArray<FName> OverrideInvisibleLevels; // 0x368
};

struct AEmitter : AActor {
	UParticleSystemComponent* ParticleSystemComponent; // 0x310
	char bDestroyOnSystemFinish : 1; // 0x318
	char bPostUpdateTickGroup : 1; // 0x318
	char bCurrentlyActive : 1; // 0x318
	FMulticastInlineDelegate OnParticleSpawn; // 0x320
	FMulticastInlineDelegate OnParticleBurst; // 0x330
	FMulticastInlineDelegate OnParticleDeath; // 0x340
	FMulticastInlineDelegate OnParticleCollide; // 0x350
};

struct UInterpTrackLinearColorProp : UInterpTrackLinearColorBase {
	FName PropertyName; // 0x90
};

struct URevolveOperatorFactory : UObject {
	UDrawAndRevolveTool* RevolveTool; // 0x30
};

struct UBTTask_RunBehaviorDynamic : UBTTaskNode {
	FGameplayTag InjectionTag; // 0x70
	UBehaviorTree* DefaultBehaviorAsset; // 0x78
	UBehaviorTree* BehaviorAsset; // 0x80
};

struct UNiagaraDataInterfaceParticleRead : UNiagaraDataInterfaceRWBase {
	FString EmitterName; // 0xd8
};

struct UVehicleWheel : UObject {
	UStaticMesh* CollisionMesh; // 0x28
	bool bDontCreateShape; // 0x30
	bool bAutoAdjustCollisionSize; // 0x31
	FVector Offset; // 0x34
	float ShapeRadius; // 0x40
	float ShapeWidth; // 0x44
	float Mass; // 0x48
	float DampingRate; // 0x4c
	float SteerAngle; // 0x50
	bool bAffectedByHandbrake; // 0x54
	UTireType* TireType; // 0x58
	UTireConfig* TireConfig; // 0x60
	float LatStiffMaxLoad; // 0x68
	float LatStiffValue; // 0x6c
	float LongStiffValue; // 0x70
	float SuspensionForceOffset; // 0x74
	float SuspensionMaxRaise; // 0x78
	float SuspensionMaxDrop; // 0x7c
	float SuspensionNaturalFrequency; // 0x80
	float SuspensionDampingRatio; // 0x84
	EWheelSweepType SweepType; // 0x88
	float MaxBrakeTorque; // 0x8c
	float MaxHandBrakeTorque; // 0x90
	UWheeledVehicleMovementComponent* VehicleSim; // 0x98
	int32_t WheelIndex; // 0xa0
	float DebugLongSlip; // 0xa4
	float DebugLatSlip; // 0xa8
	float DebugNormalizedTireLoad; // 0xac
	float DebugWheelTorque; // 0xb4
	float DebugLongForce; // 0xb8
	float DebugLatForce; // 0xbc
	FVector Location; // 0xc0
	FVector OldLocation; // 0xcc
	FVector Velocity; // 0xd8
};

struct ULogicReplicationGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode {
	TArray<FAlwaysRelevantActorInfo> PastRelevantActors; // 0x270
};

struct USceneEffectSpawner : UObject {
	int32_t RandomSeed; // 0x28
	float AverageDistance; // 0x2c
	float DistributeVariance; // 0x30
	float MinimumDistance; // 0x34
	bool bInWater; // 0x38
	float OverlapPriority; // 0x3c
	float CollisionRaduis; // 0x40
	TArray<FWithFoliageInfo> WithFoliageInfos; // 0x48
	AActor* SceneEffectActorClass; // 0x58
	char bSpawnWithRotation : 1; // 0x60
};

struct ASGGeneralAIController : ASG_AIController {
	EAIRiderAttackType Enum_RiderAttackType; // 0x850
	EMovingGaitType ForceMovingGaitType; // 0x851
	TArray<FAIFleeConfigBase> GeneralFleeConfigs; // 0x858
};

struct UAISense : UObject {
	float DefaultExpirationAge; // 0x28
	EAISenseNotifyType NotifyType; // 0x2c
	char bWantsNewPawnNotification : 1; // 0x30
	char bAutoRegisterAllPawnsAsSources : 1; // 0x30
	UAIPerceptionSystem* PerceptionSystemInstance; // 0x38
};

struct UAISense_Prediction : UAISense {
	TArray<FAIPredictionEvent> RegisteredEvents; // 0x80
};

struct UUI_FlagImage : UUI_GuildImage {
	UButton* NewButton; // 0x400
};

struct UMovieSceneCapture : UObject {
	FSoftClassPath ImageCaptureProtocolType; // 0x38
	FSoftClassPath AudioCaptureProtocolType; // 0x50
	UMovieSceneImageCaptureProtocolBase* ImageCaptureProtocol; // 0x68
	UMovieSceneAudioCaptureProtocolBase* AudioCaptureProtocol; // 0x70
	FMovieSceneCaptureSettings Settings; // 0x78
	bool bUseSeparateProcess; // 0xe8
	bool bCloseEditorWhenCaptureStarts; // 0xe9
	FString AdditionalCommandLineArguments; // 0xf0
	FString InheritedCommandLineArguments; // 0x100
};

struct UCreateSessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UWidgetSwitcher : UPanelWidget {
	int32_t ActiveWidgetIndex; // 0x120
};

struct UBTDecorator_ConeCheck : UBTDecorator {
	float ConeHalfAngle; // 0x68
	FBlackboardKeySelector ConeOrigin; // 0x70
	FBlackboardKeySelector ConeDirection; // 0x98
	FBlackboardKeySelector Observed; // 0xc0
};

struct UGeometryCacheCodecBase : UObject {
	TArray<int32_t> TopologyRanges; // 0x28
};

struct UPlatformGameInstance : UGameInstance {
	FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0x1a8
	FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0x1b8
	FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0x1c8
	FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0x1d8
	FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0x1e8
	FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x1f8
	FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x208
	FMulticastInlineDelegate ApplicationRegisteredForRemoteNotificationsDelegate; // 0x218
	FMulticastInlineDelegate ApplicationRegisteredForUserNotificationsDelegate; // 0x228
	FMulticastInlineDelegate ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x238
	FMulticastInlineDelegate ApplicationReceivedRemoteNotificationDelegate; // 0x248
	FMulticastInlineDelegate ApplicationReceivedLocalNotificationDelegate; // 0x258
	FMulticastInlineDelegate ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x268
};

struct UNiagaraDataInterfaceStaticMesh : UNiagaraDataInterface {
	ENDIStaticMesh_SourceMode SourceMode; // 0x38
	UStaticMesh* DefaultMesh; // 0x40
	AActor* Source; // 0x48
	UStaticMeshComponent* SourceComponent; // 0x50
	FNDIStaticMeshSectionFilter SectionFilter; // 0x58
	bool bUsePhysicsBodyVelocity; // 0x68
	TArray<FName> FilteredSockets; // 0x70
};

struct UItemAuctionDealDoneSlot : USGUI {
	UButton* ButtonSelected; // 0x2d8
	UTextBlock* TextBlock_Name; // 0x2e0
	UTextBlock* TextBlock_Count; // 0x2e8
	UTextBlock* TextBlock_Price; // 0x2f0
	UTextBlock* TextBlock_TotalPrice; // 0x2f8
	UUI_GuildAuctionHouse* RootSGUI; // 0x300
};

struct UOnlineSessionClient : UOnlineSession {
	bool bIsFromInvite; // 0x1d8
	bool bHandlingDisconnect; // 0x1d9
};

struct UMaterialParameterCollection : UObject {
	FGuid StateId; // 0x28
	TArray<FCollectionScalarParameter> ScalarParameters; // 0x38
	TArray<FCollectionVectorParameter> VectorParameters; // 0x48
};

struct UAbilityTask_Repeat : UAbilityTask {
	FMulticastInlineDelegate OnPerformAction; // 0x80
	FMulticastInlineDelegate OnFinished; // 0x90
};

struct UAnimSharingStateInstance : UAnimInstance {
	UAnimSequence* AnimationToPlay; // 0x2c0
	float PermutationTimeOffset; // 0x2c8
	float PlayRate; // 0x2cc
	bool bStateBool; // 0x2d0
	UAnimSharingInstance* Instance; // 0x2d8
};

struct ARadialForceActor : ARigidBodyBase {
	URadialForceComponent* ForceComponent; // 0x310
};

struct UScrollBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FScrollBoxStyle ScrollBoxStyle; // 0x30
};

struct UAlignObjectsToolProperties : UInteractiveToolPropertySet {
	EAlignObjectsAlignTypes AlignType; // 0x60
	EAlignObjectsAlignToOptions AlignTo; // 0x64
	EAlignObjectsBoxPoint BoxPosition; // 0x68
	bool bAlignX; // 0x6c
	bool bAlignY; // 0x6d
	bool bAlignZ; // 0x6e
};

struct UInteractiveGizmo : UObject {
	UInputBehaviorSet* InputBehaviors; // 0x30
};

struct UInterpTrackInstVectorMaterialParam : UInterpTrackInst {
	TArray<UMaterialInstanceDynamic*> MaterialInstances; // 0x28
	TArray<FVector> ResetVectors; // 0x38
	TArray<FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48
	UInterpTrackVectorMaterialParam* InstancedTrack; // 0x58
};

struct UMaterialExpressionLogarithm2 : UMaterialExpression {
	FExpressionInput X; // 0x40
};

struct UMaterialExpressionSingleLayerWaterMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput ScatteringCoefficients; // 0x40
	FExpressionInput AbsorptionCoefficients; // 0x54
	FExpressionInput PhaseG; // 0x68
	FExpressionInput ColorScaleBehindWater; // 0x7c
};

struct URevolveProperties : UInteractiveToolPropertySet {
	double RevolutionDegrees; // 0x60
	double RevolutionDegreesOffset; // 0x68
	int32_t Steps; // 0x70
	bool bReverseRevolutionDirection; // 0x74
	bool bFlipMesh; // 0x75
	bool bProfileIsCrossSectionOfSide; // 0x76
	ERevolvePropertiesPolygroupMode PolygroupMode; // 0x77
	ERevolvePropertiesQuadSplit QuadSplitMode; // 0x78
	double DiagonalProportionTolerance; // 0x80
	ERevolvePropertiesCapFillMode CapFillMode; // 0x88
	bool bWeldFullRevolution; // 0x89
	bool bWeldVertsOnAxis; // 0x8a
	double AxisWeldTolerance; // 0x90
	bool bSharpNormals; // 0x98
	double SharpNormalAngleTolerance; // 0xa0
	bool bFlipVs; // 0xa8
	bool bUVsSkipFullyWeldedEdges; // 0xa9
};

struct USelfUnionMeshesTool : UBaseCreateFromSelectedTool {
	USelfUnionMeshesToolProperties* Properties; // 0xf0
	ULineSetComponent* DrawnLineSet; // 0xf8
};

struct UEnvQueryOption : UObject {
	UEnvQueryGenerator* Generator; // 0x28
	TArray<UEnvQueryTest*> Tests; // 0x30
};

struct UMovieSceneCameraShakeSourceShakeTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x80
};

struct UMaterialExpressionNoise : UMaterialExpression {
	FExpressionInput position; // 0x40
	FExpressionInput FilterWidth; // 0x54
	float Scale; // 0x68
	int32_t Quality; // 0x6c
	ENoiseFunction NoiseFunction; // 0x70
	char bTurbulence : 1; // 0x74
	int32_t Levels; // 0x78
	float OutputMin; // 0x7c
	float OutputMax; // 0x80
	float LevelScale; // 0x84
	char bTiling : 1; // 0x88
	uint32_t RepeatSize; // 0x8c
};

struct UAvfMediaSettings : UObject {
	bool NativeAudioOut; // 0x28
};

struct USkeletalMeshSimplificationSettings : UDeveloperSettings {
	FName SkeletalMeshReductionModuleName; // 0x38
};

struct UParticleModuleSourceMovement : UParticleModuleLocationBase {
	FRawDistributionVector SourceMovementScale; // 0x30
};

struct UAISenseEvent_Damage : UAISenseEvent {
	FAIDamageEvent Event; // 0x28
};

struct UItemAuctionOrderPanel : USGUI {
	UVerticalBox* ItemListVerticalBox; // 0x2d8
	UVerticalBox* ItemOrderListVerticalBox; // 0x2e0
	UEditableTextBox* SearchEditableBox; // 0x2e8
	UComboBoxString* ItemTypeComboBox; // 0x2f0
	UComboBoxString* ItemSubTypeComboBox; // 0x2f8
	UButton* Button_Search; // 0x300
	UButton* Button_Recall; // 0x308
	UButton* Button_Refresh; // 0x310
	UCanvasPanel* TipsPanel; // 0x318
	UN_InventorySlot* InventorySlot; // 0x320
	UN_EquipPanel* EquipPanel; // 0x328
	UItemAuctionOrderSlot* ItemAuctionOrderSlot; // 0x330
	TWeakObjectPtr<UItemAuctionOrderSlot> ItemSlotSelected; // 0x338
	TWeakObjectPtr<UItemAuctionOrderSlot> ItemOrderSlotSelected; // 0x340
	TWeakObjectPtr<UUI_GuildAuctionHouse> RootUI; // 0x348
};

struct UMaterialExpressionMakeMaterialAttributes : UMaterialExpression {
	FExpressionInput BaseColor; // 0x40
	FExpressionInput Metallic; // 0x54
	FExpressionInput Specular; // 0x68
	FExpressionInput Roughness; // 0x7c
	FExpressionInput Anisotropy; // 0x90
	FExpressionInput EmissiveColor; // 0xa4
	FExpressionInput Opacity; // 0xb8
	FExpressionInput OpacityMask; // 0xcc
	FExpressionInput Normal; // 0xe0
	FExpressionInput Tangent; // 0xf4
	FExpressionInput WorldPositionOffset; // 0x108
	FExpressionInput WorldDisplacement; // 0x11c
	FExpressionInput TessellationMultiplier; // 0x130
	FExpressionInput SubsurfaceColor; // 0x144
	FExpressionInput ClearCoat; // 0x158
	FExpressionInput ClearCoatRoughness; // 0x16c
	FExpressionInput AmbientOcclusion; // 0x180
	FExpressionInput Refraction; // 0x194
	FExpressionInput CustomizedUVs[0x8]; // 0x1a8
	FExpressionInput PixelDepthOffset; // 0x248
	FExpressionInput ShadingModel; // 0x25c
};

struct UCharacterMovementComponent : UPawnMovementComponent {
	ACharacter* CharacterOwner; // 0x158
	float GravityScale; // 0x160
	float MaxStepHeight; // 0x164
	float JumpZVelocity; // 0x168
	float JumpOffJumpZFactor; // 0x16c
	float WalkableFloorAngle; // 0x170
	float WalkableFloorZ; // 0x174
	EMovementMode MovementMode; // 0x178
	char CustomMovementMode; // 0x179
	ENetworkSmoothingMode NetworkSmoothingMode; // 0x17a
	float GroundFriction; // 0x17c
	float MaxWalkSpeed; // 0x19c
	float MaxWalkSpeedCrouched; // 0x1a0
	float MaxSwimSpeed; // 0x1a4
	float MaxFlySpeed; // 0x1a8
	float MaxCustomMovementSpeed; // 0x1ac
	float MaxAcceleration; // 0x1b0
	float MinAnalogWalkSpeed; // 0x1b4
	float BrakingFrictionFactor; // 0x1b8
	float BrakingFriction; // 0x1bc
	float BrakingSubStepTime; // 0x1c0
	float BrakingDecelerationWalking; // 0x1c4
	float BrakingDecelerationFalling; // 0x1c8
	float BrakingDecelerationSwimming; // 0x1cc
	float BrakingDecelerationFlying; // 0x1d0
	float AirControl; // 0x1d4
	float AirControlBoostMultiplier; // 0x1d8
	float AirControlBoostVelocityThreshold; // 0x1dc
	float FallingLateralFriction; // 0x1e0
	float CrouchedHalfHeight; // 0x1e4
	float Buoyancy; // 0x1e8
	float PerchRadiusThreshold; // 0x1ec
	float PerchAdditionalHeight; // 0x1f0
	FRotator RotationRate; // 0x1f4
	char bUseSeparateBrakingFriction : 1; // 0x200
	char bApplyGravityWhileJumping : 1; // 0x200
	char bUseControllerDesiredRotation : 1; // 0x200
	char bOrientRotationToMovement : 1; // 0x200
	char bSweepWhileNavWalking : 1; // 0x200
	char bMovementInProgress : 1; // 0x200
	char bEnableScopedMovementUpdates : 1; // 0x200
	char bEnableServerDualMoveScopedMovementUpdates : 1; // 0x201
	char bForceMaxAccel : 1; // 0x201
	char bRunPhysicsWithNoController : 1; // 0x201
	char bForceNextFloorCheck : 1; // 0x201
	char bShrinkProxyCapsule : 1; // 0x201
	char bCanWalkOffLedges : 1; // 0x201
	char bCanWalkOffLedgesWhenCrouching : 1; // 0x201
	char bNetworkSkipProxyPredictionOnNetUpdate : 1; // 0x202
	char bNetworkAlwaysReplicateTransformUpdateTimestamp : 1; // 0x202
	char bDeferUpdateMoveComponent : 1; // 0x202
	char bEnablePhysicsInteraction : 1; // 0x202
	char bTouchForceScaledToMass : 1; // 0x202
	char bPushForceScaledToMass : 1; // 0x202
	char bPushForceUsingZOffset : 1; // 0x202
	char bScalePushForceToVelocity : 1; // 0x203
	USceneComponent* DeferredUpdatedMoveComponent; // 0x208
	float MaxOutOfWaterStepHeight; // 0x210
	float OutofWaterZ; // 0x214
	float Mass; // 0x218
	float StandingDownwardForceScale; // 0x21c
	float InitialPushForceFactor; // 0x220
	float PushForceFactor; // 0x224
	float PushForcePointZOffsetFactor; // 0x228
	float TouchForceFactor; // 0x22c
	float MinTouchForce; // 0x230
	float MaxTouchForce; // 0x234
	float RepulsionForce; // 0x238
	FVector Acceleration; // 0x23c
	FQuat LastUpdateRotation; // 0x250
	FVector LastUpdateLocation; // 0x260
	FVector LastUpdateVelocity; // 0x26c
	double ServerLastTransformUpdateTimeStamp; // 0x278
	double ServerLastClientGoodMoveAckTime; // 0x280
	float ServerLastClientAdjustmentTime; // 0x288
	FVector PendingImpulseToApply; // 0x28c
	FVector PendingForceToApply; // 0x298
	float AnalogInputModifier; // 0x2a4
	float MaxSimulationTimeStep; // 0x2b8
	int32_t MaxSimulationIterations; // 0x2bc
	int32_t MaxJumpApexAttemptsPerSimulation; // 0x2c0
	float MaxDepenetrationWithGeometry; // 0x2c4
	float MaxDepenetrationWithGeometryAsProxy; // 0x2c8
	float MaxDepenetrationWithPawn; // 0x2cc
	float MaxDepenetrationWithPawnAsProxy; // 0x2d0
	float NetworkSimulatedSmoothLocationTime; // 0x2d4
	float NetworkSimulatedSmoothRotationTime; // 0x2d8
	float ListenServerNetworkSimulatedSmoothLocationTime; // 0x2dc
	float ListenServerNetworkSimulatedSmoothRotationTime; // 0x2e0
	float NetProxyShrinkRadius; // 0x2e4
	float NetProxyShrinkHalfHeight; // 0x2e8
	float NetworkMaxSmoothUpdateDistance; // 0x2ec
	float NetworkNoSmoothUpdateDistance; // 0x2f0
	float NetworkMinTimeBetweenClientAckGoodMoves; // 0x2f4
	float NetworkMinTimeBetweenClientAdjustments; // 0x2f8
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x2fc
	float NetworkLargeClientCorrectionDistance; // 0x300
	float LedgeCheckThreshold; // 0x304
	float JumpOutOfWaterPitch; // 0x308
	FFindFloorResult CurrentFloor; // 0x30c
	EMovementMode DefaultLandMovementMode; // 0x3a4
	EMovementMode DefaultWaterMovementMode; // 0x3a5
	EMovementMode GroundMovementMode; // 0x3a6
	char bMaintainHorizontalGroundVelocity : 1; // 0x3a7
	char bImpartBaseVelocityX : 1; // 0x3a7
	char bImpartBaseVelocityY : 1; // 0x3a7
	char bImpartBaseVelocityZ : 1; // 0x3a7
	char bImpartBaseAngularVelocity : 1; // 0x3a7
	char bJustTeleported : 1; // 0x3a7
	char bNetworkUpdateReceived : 1; // 0x3a7
	char bNetworkMovementModeChanged : 1; // 0x3a7
	char bIgnoreClientMovementErrorChecksAndCorrection : 1; // 0x3a8
	char bServerAcceptClientAuthoritativePosition : 1; // 0x3a8
	char bNotifyApex : 1; // 0x3a8
	char bCheatFlying : 1; // 0x3a8
	char bWantsToCrouch : 1; // 0x3a8
	char bCrouchMaintainsBaseLocation : 1; // 0x3a8
	char bIgnoreBaseRotation : 1; // 0x3a8
	char bFastAttachedMove : 1; // 0x3a8
	char bAlwaysCheckFloor : 1; // 0x3a9
	char bUseFlatBaseForFloorChecks : 1; // 0x3a9
	char bPerformingJumpOff : 1; // 0x3a9
	char bWantsToLeaveNavWalking : 1; // 0x3a9
	char bUseRVOAvoidance : 1; // 0x3a9
	char bRequestedMoveUseAcceleration : 1; // 0x3a9
	char bWasSimulatingRootMotion : 1; // 0x3a9
	char bAllowPhysicsRotationDuringAnimRootMotion : 1; // 0x3aa
	char bHasRequestedVelocity : 1; // 0x3aa
	char bRequestedMoveWithMaxSpeed : 1; // 0x3aa
	char bWasAvoidanceUpdated : 1; // 0x3aa
	char bProjectNavMeshWalking : 1; // 0x3aa
	char bProjectNavMeshOnBothWorldChannels : 1; // 0x3aa
	float AvoidanceConsiderationRadius; // 0x3bc
	FVector RequestedVelocity; // 0x3c0
	int32_t AvoidanceUID; // 0x3cc
	FNavAvoidanceMask AvoidanceGroup; // 0x3d0
	FNavAvoidanceMask GroupsToAvoid; // 0x3d4
	FNavAvoidanceMask GroupsToIgnore; // 0x3d8
	float AvoidanceWeight; // 0x3dc
	FVector PendingLaunchVelocity; // 0x3e0
	float NavMeshProjectionInterval; // 0x494
	float NavMeshProjectionTimer; // 0x498
	float NavMeshProjectionInterpSpeed; // 0x49c
	float NavMeshProjectionHeightScaleUp; // 0x4a0
	float NavMeshProjectionHeightScaleDown; // 0x4a4
	float NavWalkingFloorDistTolerance; // 0x4a8
	FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction; // 0x4b0
	float MinTimeBetweenTimeStampResets; // 0x4f8
	FRootMotionSourceGroup CurrentRootMotion; // 0x9e0
	FRootMotionSourceGroup ServerCorrectionRootMotion; // 0xa18
	FRootMotionMovementParams RootMotionParams; // 0xae0
	FVector AnimRootMotionVelocity; // 0xb20
};

struct ULevelUpColWidget : UUserWidget {
	UTextBlock* LevelUpRewardText; // 0x260
};

struct UMaterialExpressionArccosineFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct ASGStructureCountySeatAltar : ASGStructure {
	TArray<FWorship> WorshipArray; // 0xb98
};

struct USGGameDataStatisticsEvent : UObject {
	UEnum* StatisticEventParamConfig[0x15]; // 0x28
	TArray<FStatisticEventParamGroup> EventParams; // 0xd0
};

struct ASGAnimalAIController : ASG_AIController {
	char bAllowRandomWander : 1; // 0x848
	float WanderFixedDistance; // 0x84c
	float WanderRandomDistance; // 0x850
	float WanderLimitFixedTime; // 0x854
	float FleeMaxYaw; // 0x858
	float FleeWaitEnemyInterval; // 0x85c
	float FleeWaitEnemyChance; // 0x860
	float FleeLimitFixedTime; // 0x864
	TArray<FAIFleeConfigAnimal> AnimalFleeConfigs; // 0x868
	float TraceGroundLength; // 0x878
	char bIsMoveAroundBlockade : 1; // 0x87c
	EAnimalAggressionType AnimalAggressionType; // 0x87d
	char bIsAmphibious : 1; // 0x87e
	TWeakObjectPtr<AActor> CurrentFood; // 0x898
	char bIsFeeding : 1; // 0x8a0
	char bIsRideTaming : 1; // 0x8a0
	char bUseAutoBrakingCondition : 1; // 0x8a0
	EAnimalAIStatusType Enum_AnimalAIPrevStatus; // 0x8a1
	EAnimalAIStatusType Enum_AnimalAIStatus; // 0x8a2
	char bUseNavPath : 1; // 0x8c0
	char bEnableAggroTamed : 1; // 0x8c0
};

struct UABP_HorseMC_Preview_C : USG_AnimalsAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0xff0
	FAnimNode_Fabrik AnimGraphNode_Fabrik_2; // 0x1000
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_4; // 0x1190
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x15d0
	FAnimNode_Fabrik AnimGraphNode_Fabrik; // 0x15f0
	FAnimNode_SequencePlayer AnimGraphNode_SequencePlayer; // 0x1780
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x1800
	FAnimNode_Root AnimGraphNode_Root; // 0x1820
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone_2; // 0x1850
	FAnimNode_ModifyBone AnimGraphNode_ModifyBone; // 0x1958
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_3; // 0x1a60
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics_2; // 0x1ea0
	FAnimNode_AnimDynamics AnimGraphNode_AnimDynamics; // 0x22e0
	FVector ReinsLLoc; // 0x2720
	FVector ReinsRLoc; // 0x272c
	FTransform SaddleLTrans; // 0x2740
	FTransform SaddleRTrans; // 0x2770
	bool NewVar_1; // 0x27a0
};

struct UAbilityTask_WaitAbilityCommit : UAbilityTask {
	FMulticastInlineDelegate OnCommit; // 0x80
};

struct UAbilityTask_NetworkSyncPoint : UAbilityTask {
	FMulticastInlineDelegate OnSync; // 0x80
};

struct UGameViewportClient : UScriptViewportClient {
	UConsole* ViewportConsole; // 0x40
	TArray<FDebugDisplayProperty> DebugProperties; // 0x48
	int32_t MaxSplitscreenPlayers; // 0x68
	UWorld* World; // 0x78
	UGameInstance* GameInstance; // 0x80
};

struct UVolumetricCloudComponent : USceneComponent {
	float LayerBottomAltitude; // 0x208
	float LayerHeight; // 0x20c
	float TracingStartMaxDistance; // 0x210
	float TracingMaxDistance; // 0x214
	float PlanetRadius; // 0x218
	FColor GroundAlbedo; // 0x21c
	UMaterialInterface* Material; // 0x220
	char bUsePerSampleAtmosphericLightTransmittance : 1; // 0x228
	float SkyLightCloudBottomOcclusion; // 0x22c
	float ViewSampleCountScale; // 0x230
	float ReflectionSampleCountScale; // 0x234
	float ShadowViewSampleCountScale; // 0x238
	float ShadowReflectionSampleCountScale; // 0x23c
	float ShadowTracingDistance; // 0x240
};

struct URemoveOccludedTrianglesTool : UMultiSelectionTool {
	URemoveOccludedTrianglesToolProperties* BasicProperties; // 0x90
	URemoveOccludedTrianglesAdvancedProperties* AdvancedProperties; // 0x98
	TArray<UMeshOpPreviewWithBackgroundCompute*> Previews; // 0xa0
	TArray<UPreviewMesh*> PreviewCopies; // 0xb0
};

struct UN_RemoteCraftInventoryPanel : UUserWidget {
	UTextBlock* RemoteTitle; // 0x260
	UImage* RemoteIcon; // 0x268
	UCanvasPanel* FuelCanvas; // 0x270
	UImage* ActiveButtonHighLight; // 0x278
	UButton* ActiveButton; // 0x280
	UTextBlock* ActiveText; // 0x288
	UTextBlock* LeftFuelText; // 0x290
	UN_InventorySlot* FuelInventorySlot; // 0x298
	UProgressBar* FuelTemperatureProgress; // 0x2a0
	UTextBlock* FuelTemperatureText; // 0x2a8
	UTextBlock* FoodTitle; // 0x2b0
	UCanvasPanel* SlotNumCanvas; // 0x2b8
	UTextBlock* SlotNumText; // 0x2c0
	char bNeedRefreshSlotNum : 1; // 0x2c8
	float TemperatureSpeed; // 0x2cc
	TMap<int32_t, float> FuelTemperatureToPostPercentMap; // 0x2d0
	UTextBlock* RemoteInvnetoryTitle; // 0x320
	UN_RemoteCraftInventorySlotPanel* RemoteCraftInventorySlotPanel; // 0x328
	UN_RemoteCraftInventoryFoodPanel* RemoteCraftInventoryFoodPanel; // 0x330
	UButton* ArrangeButton; // 0x338
	UButton* SwitchButton; // 0x340
	UBorder* InventoryExchangeBorder; // 0x348
	UBorder* FoodExchangeBorder; // 0x350
	UCanvasPanel* FoodCanvas; // 0x358
	UTextBlock* FoodLeftTime; // 0x360
	char bIsFuelStructure; // 0x368
	char bHasFuelItem : 1; // 0x369
	char bStructureIsActived : 1; // 0x369
	TWeakObjectPtr<USGItem> BindFuelItem; // 0x36c
	char bForceShowDefaultNum : 1; // 0x374
	FString SearchString; // 0x378
	int32_t UnLockNum; // 0x388
	USGUI* ParentSGUI; // 0x390
	USGUI* RootSGUI; // 0x398
	EInventoryTypes BindInventoryType; // 0x3a0
	char bSlotAllowDrag : 1; // 0x3a1
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x3a4
	TWeakObjectPtr<ASGStructureSeat> BindStructureSeat; // 0x3ac
	TArray<UN_InventorySlot*> InventorySlotList; // 0x3b8
	TArray<UN_InventorySlot*> FoodInventorySlotList; // 0x3c8
	char bNeedShowFuelGuide : 1; // 0x3d8
	int32_t FuelSlotFinishQuestID; // 0x3dc
	int32_t UnLockFoodSlotFinishQuestID; // 0x3e0
	int32_t CountsPerRow; // 0x3e4
	int32_t CurrentInventoryNum; // 0x3e8
	int32_t TickUpdateSlotNumber; // 0x3ec
	int32_t LastInventoryItemNum; // 0x400
	int32_t DefaultShowInventoryNum; // 0x408
	UN_InventorySlot* InventorySlotClass; // 0x410
	TArray<FName> InventorySlotFoodsNames; // 0x418
	char bNeedRefreshFoodLeftTime : 1; // 0x428
};

struct UMaterialExpressionMaterialFunctionCall : UMaterialExpression {
	UMaterialFunctionInterface* MaterialFunction; // 0x40
	FMaterialParameterInfo FunctionParameterInfo; // 0x48
};

struct UChunkDataObject : UObject {
	TMap<FGuid, FChunkDataObjectInfo> ChunkDataObjectInfo; // 0x28
};

struct UDirectionalLightComponent : ULightComponent {
	float ShadowCascadeBiasDistribution; // 0x338
	char bEnableLightShaftOcclusion : 1; // 0x33c
	float OcclusionMaskDarkness; // 0x340
	float OcclusionDepthRange; // 0x344
	FVector LightShaftOverrideDirection; // 0x348
	float WholeSceneDynamicShadowRadius; // 0x354
	float DynamicShadowDistanceMovableLight; // 0x358
	float DynamicShadowDistanceStationaryLight; // 0x35c
	int32_t DynamicShadowCascades; // 0x360
	float CascadeDistributionExponent; // 0x364
	float CascadeTransitionFraction; // 0x368
	float ShadowDistanceFadeoutFraction; // 0x36c
	char bUseInsetShadowsForMovableObjects : 1; // 0x370
	int32_t FarShadowCascadeCount; // 0x374
	float FarShadowDistance; // 0x378
	float DistanceFieldShadowDistance; // 0x37c
	float LightSourceAngle; // 0x380
	float LightSourceSoftAngle; // 0x384
	float ShadowSourceAngleFactor; // 0x388
	float TraceDistance; // 0x38c
	char bUsedAsAtmosphereSunLight : 1; // 0x390
	int32_t AtmosphereSunLightIndex; // 0x394
	FLinearColor AtmosphereSunDiskColorScale; // 0x398
	char bPerPixelAtmosphereTransmittance : 1; // 0x3a8
	char bCastShadowsOnClouds : 1; // 0x3a8
	char bCastShadowsOnAtmosphere : 1; // 0x3a8
	char bCastCloudShadows : 1; // 0x3a8
	float CloudShadowStrength; // 0x3ac
	float CloudShadowOnAtmosphereStrength; // 0x3b0
	float CloudShadowOnSurfaceStrength; // 0x3b4
	float CloudShadowDepthBias; // 0x3b8
	float CloudShadowExtent; // 0x3bc
	float CloudShadowMapResolutionScale; // 0x3c0
	float CloudShadowRaySampleCountScale; // 0x3c4
	FLinearColor CloudScatteredLuminanceScale; // 0x3c8
	FLightmassDirectionalLightSettings LightmassSettings; // 0x3d8
	char bCastModulatedShadows : 1; // 0x3e8
	FColor ModulatedShadowColor; // 0x3ec
	float ShadowAmount; // 0x3f0
};

struct UUI_SeasonPassport : UUserWidget {
	UImage* PassportLevelImage; // 0x260
	UTextBlock* PassportLevelText; // 0x268
	UProgressBar* EXPProgressBar; // 0x270
	UTextBlock* PassportExpNumText; // 0x278
	UHorizontalBox* HorizontalBoxParent; // 0x280
	UButton* ButtonLeft; // 0x288
	UButton* ButtonRight; // 0x290
	UImage* PassportFlagLock; // 0x298
	TWeakObjectPtr<ASGPlayerController> OwnerSGPC; // 0x2a0
};

struct USGChatSubsystem : UGameInstanceSubsystem {
	FTimerHandle SignInTimerHandle; // 0x278
	FTimerHandle CheckNoResponseTimerHandle; // 0x280
};

struct UNavModifierComponent : UNavRelevantComponent {
	UNavArea* AreaClass; // 0xf0
	FVector FailsafeExtent; // 0xf8
	char bIncludeAgentHeight : 1; // 0x104
};

struct USubmixEffectConvolutionReverbPreset : USoundEffectSubmixPreset {
	UAudioImpulseResponse* ImpulseResponse; // 0x68
	FSubmixEffectConvolutionReverbSettings Settings; // 0x70
	ESubmixEffectConvolutionReverbBlockSize BlockSize; // 0x98
	bool bEnableHardwareAcceleration; // 0x99
};

struct ABP_HorseMC_Preview_C : ABP_HorseMC_C {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3c30
	USkeletalMeshComponent* SkeletalMesh; // 0x3c38
	float PreviewAnimPosition; // 0x3c40
};

struct UNiagaraDataInterfaceVectorField : UNiagaraDataInterface {
	UVectorField* Field; // 0x38
	bool bTileX; // 0x40
	bool bTileY; // 0x41
	bool bTileZ; // 0x42
};

struct UPolyEditOutsetProperties : UInteractiveToolPropertySet {
	float Softness; // 0x60
	bool bBoundaryOnly; // 0x64
	float AreaScale; // 0x68
};

struct UWaterWavesAssetReference : UWaterWavesBase {
	UWaterWavesAsset* WaterWavesAsset; // 0x28
};

struct UMaterialExpressionFloor : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UUI_ProducerSlot : UUserWidget {
	UTextBlock* IntroTextBlock; // 0x260
	UVerticalBox* NamesVertical; // 0x268
	FText IntroText; // 0x270
	TArray<FString> NameLines; // 0x288
	FLinearColor IntroColor; // 0x298
	FSlateFontInfo IntroFont; // 0x2a8
	FLinearColor NameColor; // 0x300
	FSlateFontInfo NameFont; // 0x310
};

struct UBlueprint : UBlueprintCore {
	UObject* ParentClass; // 0x50
	EBlueprintType BlueprintType; // 0x58
	char bRecompileOnLoad : 1; // 0x59
	char bHasBeenRegenerated : 1; // 0x59
	char bIsRegeneratingOnLoad : 1; // 0x59
	int32_t BlueprintSystemVersion; // 0x5c
	USimpleConstructionScript* SimpleConstructionScript; // 0x60
	TArray<UActorComponent*> ComponentTemplates; // 0x68
	TArray<UTimelineTemplate*> Timelines; // 0x78
	TArray<FBPComponentClassOverride> ComponentClassOverrides; // 0x88
	UInheritableComponentHandler* InheritableComponentHandler; // 0x98
};

struct UPositionPlaneGizmo : UInteractiveGizmo {
	UPreviewMesh* CenterBallShape; // 0x88
	UMaterialInstance* CenterBallMaterial; // 0x90
};

struct UUI_OfficalSessionList : USGUI {
	UUI_OfficalSessionListRow* RowTemplate; // 0x2d8
	int32_t RowNumPerPage; // 0x2e0
	UUniformGridPanel* UGPSessionList; // 0x2e8
	UUniformGridPanel* UGPLastLoginSession; // 0x2f0
	UButton* BtnJoin; // 0x2f8
	UButton* BtnRefresh; // 0x300
	UButton* BtnBack; // 0x308
	UButton* BtnLastPage; // 0x310
	UButton* BtnNextPage; // 0x318
	UTextBlock* TbCurPage; // 0x320
	UTextBlock* TbMaxPage; // 0x328
	UEditableText* EtbSearch; // 0x330
	UCircularThrobber* CircularThrobber; // 0x338
	UButton* BtnPingMs; // 0x340
	UHorizontalBox* HbNoServer; // 0x348
	FTimerHandle CircularThrobberHandle; // 0x350
	TArray<UUI_OfficalSessionListRow*> SessionRows; // 0x358
	UUI_OfficalSessionListRow* LastLoginSessionRow; // 0x368
	int32_t CurPage; // 0x370
	int32_t MaxPage; // 0x374
	UUI_OfficalSessionListRow* SelectSessionRow; // 0x378
	FString SearchString; // 0x380
	char bPingMsSort : 1; // 0x390
	FTimerHandle GetPingTimer; // 0x398
	TArray<int32_t> GetPingServerIndexList; // 0x3a0
};

struct UGeneralProjectSettings : UObject {
	FString CompanyName; // 0x28
	FString CompanyDistinguishedName; // 0x38
	FString CopyrightNotice; // 0x48
	FString Description; // 0x58
	FString Homepage; // 0x68
	FString LicensingTerms; // 0x78
	FString PrivacyPolicy; // 0x88
	FString GameAppID; // 0x98
	FGuid ProjectID; // 0xa8
	FString ProjectName; // 0xb8
	FString ProjectVersion; // 0xc8
	FString SupportContact; // 0xd8
	FText ProjectDisplayedTitle; // 0xe8
	FText ProjectDebugTitleInfo; // 0x100
	bool bShouldWindowPreserveAspectRatio; // 0x118
	bool bUseBorderlessWindow; // 0x119
	bool bStartInVR; // 0x11a
	bool bAllowWindowResize; // 0x11b
	bool bAllowClose; // 0x11c
	bool bAllowMaximize; // 0x11d
	bool bAllowMinimize; // 0x11e
};

struct UNiagaraComponentRendererProperties : UNiagaraRendererProperties {
	USceneComponent* ComponentType; // 0x80
	uint32_t ComponentCountLimit; // 0x88
	FNiagaraVariableAttributeBinding EnabledBinding; // 0x90
	bool bAssignComponentsOnParticleID; // 0xe8
	bool bOnlyCreateComponentsOnParticleSpawn; // 0xe9
	USceneComponent* TemplateComponent; // 0xf0
	TArray<FNiagaraComponentPropertyBinding> PropertyBindings; // 0xf8
};

struct UEdGraph : UObject {
	UEdGraphSchema* Schema; // 0x28
	TArray<UEdGraphNode*> Nodes; // 0x30
	char bEditable : 1; // 0x40
	char bAllowDeletion : 1; // 0x40
	char bAllowRenaming : 1; // 0x40
};

struct USubmixEffectSubmixEQPreset : USoundEffectSubmixPreset {
	FSubmixEffectSubmixEQSettings Settings; // 0xa0
};

struct UCameraShakeSourceComponent : USceneComponent {
	ECameraShakeAttenuation Attenuation; // 0x208
	float InnerAttenuationRadius; // 0x20c
	float OuterAttenuationRadius; // 0x210
	UCameraShakeBase* CameraShake; // 0x218
	bool bAutoStart; // 0x220
};

struct UUI_TrafficGoodsConfirm : USGUI {
	UTextBlock* MenuText; // 0x2d8
	UVerticalBox* SellStateVerticalBox; // 0x2e0
	UTextBlock* SinglePriceText; // 0x2e8
	UButton* Button_Minus; // 0x2f0
	UEditableText* ItemNumEditText; // 0x2f8
	UButton* Button_Add; // 0x300
	UTextBlock* ConsumeText; // 0x308
	UTextBlock* TotalPriceText; // 0x310
	UTextBlock* AfterDealText; // 0x318
	UTextBlock* RecycleText; // 0x320
	UTextBlock* CapitalNumOld; // 0x328
	UTextBlock* CapitalNumNew; // 0x330
	UButton* ButtonCancel; // 0x338
	UTextBlock* CancelText; // 0x340
	UButton* ButtonConfirm; // 0x348
	UTextBlock* ConfirmText; // 0x350
};

struct UMorphTarget : UObject {
	USkeletalMesh* BaseSkelMesh; // 0x28
};

struct UUI_PicBtn : UUserWidget {
	FSlateColor BtnNormalCorlor; // 0x260
	FSlateColor BtnActiveCorlor; // 0x288
	FSlateColor BtnHoverColor; // 0x2b0
	FSlateColor BtnClickColor; // 0x2d8
	TSoftObjectPtr<UTexture2D> NormalIcon; // 0x300
	TSoftObjectPtr<UTexture2D> ActiveIcon; // 0x328
	TSoftObjectPtr<UTexture2D> HoverIcon; // 0x350
	TSoftObjectPtr<UTexture2D> ClickIcon; // 0x378
	FText NShopMainBtnText; // 0x3a0
	USizeBox* RootSizeBox; // 0x3b8
	UBorder* MainImage; // 0x3c0
	UTextBlock* BtnText; // 0x3c8
};

struct ASGStructureItemBaoZangBox : ASGStructureItemContainer {
	UStaticMeshComponent* SphereRadiusComponent; // 0xd68
	EBaoZangType BaoZangType; // 0xd70
	TArray<FDeathDropItemConfig> DeathDropItemConfig; // 0xd78
	int32_t RefreshTime; // 0xd88
	int32_t BaoZangPositionIndex; // 0xd8c
	FSoftClassPath SoftClassPathKeyItem; // 0xd90
	float CanOpenAngle; // 0xda8
	int32_t NpcSpawnInfoFunctionId; // 0xdac
	float NpcForceRefreshTime; // 0xdb0
	int32_t FuBenStartPlayerStartFunctionId; // 0xdb4
	int32_t FuBenEndPlayerStartFunctionId; // 0xdb8
	int32_t FuBenVolumeId; // 0xdbc
	float FuBenTotalTime; // 0xdc0
	float FuBenLeaveTimeAfterKilledAll; // 0xdc4
	float FuBenStartTeleportTimeTicker; // 0xdc8
	float FuBenTeleportPlayerMaxNum; // 0xdcc
	UStaticMesh* OpenedStaticMesh; // 0xdd0
	UStaticMesh* OpenedEmptyStaticMesh; // 0xdd8
	UStaticMesh* UnOpenedStaticMesh; // 0xde0
	char bOpened : 1; // 0xde8
	char bIsEmptyBox : 1; // 0xde8
	char bIsCoolDown : 1; // 0xde8
	int64_t RefreshTimeTick; // 0xdf0
	char bShowFuBenTeleportRadius : 1; // 0xdf8
	float LeftTeleportTime; // 0xdfc
};

struct UVectorFieldComponent : UPrimitiveComponent {
	UVectorField* VectorField; // 0x488
	float Intensity; // 0x490
	float Tightness; // 0x494
	char bPreviewVectorField : 1; // 0x498
};

struct UToolTipsItem : UUserWidget {
	FName TitleTextblockName; // 0x260
	FName ValueTextblockName; // 0x268
	FName TitleValueTextblockName; // 0x270
	FName ValueGridPanelName; // 0x278
	FName ImgIconName; // 0x280
	EToolTipsItemType ToolTipsItemType; // 0x288
	FName BgName; // 0x28c
	FName DamageImageName; // 0x294
	FName QualityBorderName; // 0x29c
	FSlateBrush QualityBorderBrush[0x7]; // 0x2a8
	FSlateColor QualityTextColor[0x7]; // 0x660
	FSlateBrush DamageBrush[0x4]; // 0x778
	FSlateBrush ArmorBrush[0x4]; // 0x998
	FSlateBrush EnvironmentResistance[0x4]; // 0xbb8
	FText DirectionText[0x9]; // 0xdd8
	UDataTable* TitleTextTable; // 0xeb0
	FText DamageTypeText[0x4]; // 0xeb8
	FText YesText; // 0xf18
	FText NoText; // 0xf30
	FLinearColor CantRiderSprintAttackColor; // 0xf48
	char bShowCrossServerTransport : 1; // 0xf58
	FText BowUseAmmoText; // 0xf60
	FText CrossBowUseAmmoText; // 0xf78
	FText HeavyCrossBowUseAmmoText; // 0xf90
	FLinearColor MeetRequireColor; // 0xfa8
	FLinearColor NotMeetRequireColor; // 0xfb8
	FText CapitalText[0x5]; // 0xfc8
	char bShowOneItemWeight : 1; // 0x1040
	int32_t Index; // 0x1044
	UN_InventorySlot* BindInventorySlot; // 0x10b0
};

struct UAbilityTask_MoveToLocation : UAbilityTask {
	FMulticastInlineDelegate OnTargetLocationReached; // 0x88
	FVector StartLocation; // 0x9c
	FVector TargetLocation; // 0xa8
	float DurationOfMovement; // 0xb4
	UCurveFloat* LerpCurve; // 0xc8
	UCurveVector* LerpCurveVector; // 0xd0
};

struct UAbilityTask_PlayMontageAndWait : UAbilityTask {
	FMulticastInlineDelegate OnCompleted; // 0x80
	FMulticastInlineDelegate OnBlendOut; // 0x90
	FMulticastInlineDelegate OnInterrupted; // 0xa0
	FMulticastInlineDelegate OnCancelled; // 0xb0
	UAnimMontage* MontageToPlay; // 0xe8
	float Rate; // 0xf0
	FName StartSection; // 0xf4
	float AnimRootMotionTranslationScale; // 0xfc
	float StartTimeSeconds; // 0x100
	bool bStopWhenAbilityEnds; // 0x104
};

struct UTestMovieSceneTrack : UMovieSceneTrack {
	bool bHighPassFilter; // 0x80
	TArray<UMovieSceneSection*> SectionArray; // 0x88
};

struct UBTTask_SGCustomMoveTo : UBTTask_AnimalBase {
	char bFinishTaskWithinBrakingDistance : 1; // 0xd0
	char bStopMovementWithinBrakingDistance : 1; // 0xd0
	char bCheckAngle : 1; // 0xd0
	float OverrideBrakingDistance; // 0xd4
};

struct ASGBattleSafeVolume : AVolume {
	TArray<USGBuff*> EntryAddBuffs; // 0x358
	TArray<USGBuff*> LeaveRemoveBuffs; // 0x368
	float CheckOverlapInnerTimeSec; // 0x378
	TArray<TWeakObjectPtr<ABaseCharacter>> AddBuffChars; // 0x380
};

struct UUniformInteger : UFieldNodeInt {
	int32_t Magnitude; // 0xc0
};

struct UPawnActionsComponent : UActorComponent {
	APawn* ControlledPawn; // 0xc0
	TArray<FPawnActionStack> ActionStacks; // 0xc8
	TArray<FPawnActionEvent> ActionEvents; // 0xd8
	UPawnAction* CurrentAction; // 0xe8
};

struct UInterpTrackInstDirector : UInterpTrackInst {
	AActor* OldViewTarget; // 0x28
};

struct UN_RemoteCraftInventoryFoodPanel : UUserWidget {
	UN_RemoteCraftInventoryPanel* ParentUI; // 0x260
};

struct UWidgetTree : UObject {
	UWidget* RootWidget; // 0x28
};

struct USoundNodeWavePlayer : USoundNodeAssetReferencer {
	TSoftObjectPtr<USoundWave> SoundWaveAssetPtr; // 0x48
	USoundWave* SoundWave; // 0x70
	char bLooping : 1; // 0x80
};

struct UEnvelopeFollowerListener : UActorComponent {
	FMulticastInlineDelegate OnEnvelopeFollowerUpdate; // 0xc0
};

struct UVehicleCampPanel : UUserWidget {
	int32_t DefaultShowNum; // 0x260
	UVehicleCampSlot* VehicleCampSlotTemplate; // 0x268
	FMargin VehicleCampSlotMargin; // 0x270
	float VehicleCampSlotWidth; // 0x280
	UUI_VehicleCamp* ParentUI; // 0x288
	UOptionButton* GeneralButton; // 0x290
	UOptionButton* HorseButton; // 0x298
	UTextBlock* VehicleNum; // 0x2a0
	UHorizontalBox* WarTypePanel; // 0x2a8
	UCanvasPanel* WarPagePanel; // 0x2b0
	UButton* WarPageUpBtn; // 0x2b8
	UTextBlock* WarPageText; // 0x2c0
	UButton* WarPageDownBtn; // 0x2c8
	UHorizontalBox* WorkTypePanel; // 0x2d0
	UCanvasPanel* WorkPagePanel; // 0x2d8
	UButton* WorkPageUpBtn; // 0x2e0
	UTextBlock* WorkPageText; // 0x2e8
	UButton* WorkPageDownBtn; // 0x2f0
	UHorizontalBox* RestTypePanel; // 0x2f8
	UCanvasPanel* RestPagePanel; // 0x300
	UButton* RestPageUpBtn; // 0x308
	UTextBlock* RestPageText; // 0x310
	UButton* RestPageDownBtn; // 0x318
	TArray<UVehicleCampSlot*> VehicleCampSlotList; // 0x320
};

struct UOccupyFlagPanel : UUserWidget {
	UOccupyFlagItem* OccupyFlagItemClass; // 0x260
	UTextBlock* TbBattleGroundCountDown; // 0x268
	UTextBlock* TbBattleQueue; // 0x270
	UUniformGridPanel* UGPFlag; // 0x278
	int32_t CurrentCountDownTimeInt; // 0x280
	ASGPlayerController* OwnerPlayerController; // 0x288
	TArray<ASGStructureOccupyFlag*> LastFlags; // 0x290
};

struct UWeatherPendantWidget : UUserWidget {
	TSoftObjectPtr<UTexture2D> WeatherIcon[0x10]; // 0x260
	TSoftObjectPtr<UTexture2D> TimeIcon[0x2]; // 0x4e0
	UImage* ImgIcon; // 0x530
	UTextBlock* TbTime; // 0x538
	UImage* ImgTime; // 0x540
	UTextBlock* TbLocationArea; // 0x548
	UWeatherControlComponent* CurWeatherControlComponent; // 0x560
};

struct UPreviewGeometry : UObject {
	APreviewGeometryActor* ParentActor; // 0x28
	TMap<FString, ULineSetComponent*> LineSets; // 0x30
};

struct UInterpTrackInstVisibility : UInterpTrackInst {
	EVisibilityTrackAction Action; // 0x28
	float LastUpdatePosition; // 0x2c
};

struct UNiagaraMeshRendererProperties : UNiagaraRendererProperties {
	UStaticMesh* ParticleMesh; // 0x80
	ENiagaraSortMode SortMode; // 0x88
	char bOverrideMaterials : 1; // 0x8c
	char bSortOnlyWhenTranslucent : 1; // 0x8c
	TArray<FNiagaraMeshMaterialOverride> OverrideMaterials; // 0x90
	FVector2D SubImageSize; // 0xa0
	char bSubImageBlend : 1; // 0xa8
	ENiagaraMeshFacingMode FacingMode; // 0xac
	char bLockedAxisEnable : 1; // 0xb0
	FVector LockedAxis; // 0xb4
	ENiagaraMeshLockedAxisSpace LockedAxisSpace; // 0xc0
	FVector PivotOffset; // 0xc4
	ENiagaraMeshPivotOffsetSpace PivotOffsetSpace; // 0xd0
	char bEnableFrustumCulling : 1; // 0xd4
	char bEnableCameraDistanceCulling : 1; // 0xd4
	float MinCameraDistance; // 0xd8
	float MaxCameraDistance; // 0xdc
	uint32_t RendererVisibility; // 0xe0
	FNiagaraVariableAttributeBinding PositionBinding; // 0xe8
	FNiagaraVariableAttributeBinding ColorBinding; // 0x140
	FNiagaraVariableAttributeBinding VelocityBinding; // 0x198
	FNiagaraVariableAttributeBinding MeshOrientationBinding; // 0x1f0
	FNiagaraVariableAttributeBinding ScaleBinding; // 0x248
	FNiagaraVariableAttributeBinding SubImageIndexBinding; // 0x2a0
	FNiagaraVariableAttributeBinding DynamicMaterialBinding; // 0x2f8
	FNiagaraVariableAttributeBinding DynamicMaterial1Binding; // 0x350
	FNiagaraVariableAttributeBinding DynamicMaterial2Binding; // 0x3a8
	FNiagaraVariableAttributeBinding DynamicMaterial3Binding; // 0x400
	FNiagaraVariableAttributeBinding MaterialRandomBinding; // 0x458
	FNiagaraVariableAttributeBinding CustomSortingBinding; // 0x4b0
	FNiagaraVariableAttributeBinding NormalizedAgeBinding; // 0x508
	FNiagaraVariableAttributeBinding CameraOffsetBinding; // 0x560
	FNiagaraVariableAttributeBinding RendererVisibilityTagBinding; // 0x5b8
};

struct UMaterialExpressionMaterialProxyReplace : UMaterialExpression {
	FExpressionInput Realtime; // 0x40
	FExpressionInput MaterialProxy; // 0x54
};

struct UGenlockedTimecodeProvider : UTimecodeProvider {
	bool bUseGenlockToCount; // 0x30
};

struct USourceEffectPannerPreset : USoundEffectSourcePreset {
	FSourceEffectPannerSettings Settings; // 0x98
};

struct UInterpTrackLinearColorBase : UInterpTrack {
	FInterpCurveLinearColor LinearColorTrack; // 0x70
	float CurveTension; // 0x88
};

struct UArrowComponent : UPrimitiveComponent {
	FColor ArrowColor; // 0x488
	float ArrowSize; // 0x48c
	float ArrowLength; // 0x490
	float ScreenSize; // 0x494
	char bIsScreenSizeScaled : 1; // 0x498
	char bTreatAsASprite : 1; // 0x498
};

struct UMovieSceneStringSection : UMovieSceneSection {
	FMovieSceneStringChannel StringCurve; // 0xe8
};

struct UJueWeiButtonSlot : USGUI {
	UImage* IconImage; // 0x2d8
	UImage* UnlockImage; // 0x2e0
	UImage* BGImage; // 0x2e8
	UTextBlock* NameTextBlock; // 0x2f0
	TSoftObjectPtr<UTexture2D> NormalTexture; // 0x2f8
	TSoftObjectPtr<UTexture2D> ActiveTexture; // 0x320
	int32_t JueWeiLevel; // 0x348
	int32_t PlayerJueWeiLevel; // 0x34c
	int32_t NewJueWeiLevel; // 0x350
};

struct UBuildPatchManifest : UObject {
	char ManifestFileVersion; // 0x28
	bool bIsFileData; // 0x29
	uint32_t AppID; // 0x2c
	FString AppName; // 0x30
	FString BuildVersion; // 0x40
	FString LaunchExe; // 0x50
	FString LaunchCommand; // 0x60
	TSet<FString> PrereqIds; // 0x70
	FString PrereqName; // 0xc0
	FString PrereqPath; // 0xd0
	FString PrereqArgs; // 0xe0
	TArray<FFileManifestData> FileManifestList; // 0xf0
	TArray<FChunkInfoData> ChunkList; // 0x100
	TArray<FCustomFieldData> CustomFields; // 0x110
};

struct UResonanceAudioSettings : UObject {
	FSoftObjectPath OutputSubmix; // 0x28
	ERaQualityMode QualityMode; // 0x40
	FSoftObjectPath GlobalReverbPreset; // 0x48
	FSoftObjectPath GlobalSourcePreset; // 0x60
};

struct UMaterialExpressionRuntimeVirtualTextureSample : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
	FExpressionInput WorldPosition; // 0x54
	FExpressionInput MipValue; // 0x68
	URuntimeVirtualTexture* VirtualTexture; // 0x80
	ERuntimeVirtualTextureMaterialType MaterialType; // 0x88
	bool bSinglePhysicalSpace; // 0x89
	bool bAdaptive; // 0x8a
	ERuntimeVirtualTextureMipValueMode MipValueMode; // 0x8b
	ERuntimeVirtualTextureTextureAddressMode TextureAddressMode; // 0x8c
};

struct UComboButtonWidgetStyle : USlateWidgetStyleContainerBase {
	FComboButtonStyle ComboButtonStyle; // 0x30
};

struct UGameplayTagsManager : UObject {
	TArray<FGameplayTagSource> TagSources; // 0xc0
	TArray<UDataTable*> GameplayTagTables; // 0x1b0
};

struct UMovieSceneEnumSection : UMovieSceneSection {
	FMovieSceneByteChannel EnumCurve; // 0xe8
};

struct UConditionEditableSlot : UUserWidget {
	UUserWidget* ParentUI; // 0x260
	TWeakObjectPtr<ASGCharacter> BindCharacter; // 0x268
	UImage* ConditionImage; // 0x270
	UProgressBar* LevelProgress; // 0x278
	UTextBlock* LevelText; // 0x280
	UTextBlock* AddLevelText; // 0x288
	UButton* AddButton; // 0x290
	UButton* UpgradeButton; // 0x298
	TArray<FName> MasteryImageNames; // 0x2a0
	TArray<UImage*> MasteryList; // 0x2b0
	TSoftObjectPtr<UTexture2D> LockMastery; // 0x2c0
	TSoftObjectPtr<UTexture2D> UnLockMastery; // 0x2e8
	int32_t CurrentLevelAmount; // 0x310
	ESPType SlotType; // 0x314
	int32_t Index; // 0x318
	ESkillType SkillType; // 0x31c
	float MaxAmount; // 0x320
	TArray<TSoftObjectPtr<UTexture2D>> STRImageTexture2D; // 0x328
	TArray<TSoftObjectPtr<UTexture2D>> DEXImageTexture2D; // 0x338
	TArray<TSoftObjectPtr<UTexture2D>> STAImageTexture2D; // 0x348
	TArray<TSoftObjectPtr<UTexture2D>> INTImageTexture2D; // 0x358
	TArray<TSoftObjectPtr<UTexture2D>> CHAImageTexture2D; // 0x368
	FText OneHandedWeaponsText; // 0x378
	FText ShieldsText; // 0x390
	FText TowHandedWeaponsText; // 0x3a8
	FText PolearmsText; // 0x3c0
	FText HeavyArmorsText; // 0x3d8
	FText ThrowingText; // 0x3f0
	FText ArcheryText; // 0x408
	FText CrossbowsText; // 0x420
	FText RidingText; // 0x438
	FText LightArmorsText; // 0x450
	FText PhysiqueText; // 0x468
	FText MiningText; // 0x480
	FText LumberingText; // 0x498
	FText HuntingText; // 0x4b0
	FText PlantingText; // 0x4c8
	FText HandMakingText; // 0x4e0
	FText SiegeWorkingText; // 0x4f8
	FText BuildingText; // 0x510
	FText ArmorerText; // 0x528
	FText HerbText; // 0x540
	FText LeaderShipText; // 0x558
	FText TrainingText; // 0x570
	FText RecruitText; // 0x588
	FText TamingText; // 0x5a0
	FText RenownText; // 0x5b8
	UTextBlock* SkillExp; // 0x5d0
};

struct UGeneralShortCutPanel : UUserWidget {
	TArray<FName> GeneralShortCutSlotNames; // 0x260
	UBorder* ChildGeneralShortCutBorder; // 0x270
};

struct UMaterialExpressionSubtract : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct UParticleSystemReplay : UObject {
	int32_t ClipIDNumber; // 0x28
};

struct UMaterialExpressionAtmosphericFogColor : UMaterialExpression {
	FExpressionInput WorldPosition; // 0x40
};

struct ULocalPlayer : UPlayer {
	UGameViewportClient* ViewportClient; // 0x70
	EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x94
	APlayerController* PendingLevelPlayerControllerClass; // 0x98
	char bSentSplitJoin : 1; // 0xa0
	int32_t ControllerId; // 0xb8
};

struct UUI_ServerParamString : UUserWidget {
	UTextBlock* TbParamName; // 0x260
	UEditableTextBox* TbValue; // 0x268
	UButton* ButtonSet; // 0x270
	FString StrParamName; // 0x278
	FString StrCommand; // 0x288
};

struct UTextBlock : UTextLayoutWidget {
	FText Text; // 0x128
	FDelegate TextDelegate; // 0x140
	FSlateColor ColorAndOpacity; // 0x150
	FDelegate ColorAndOpacityDelegate; // 0x178
	FSlateFontInfo Font; // 0x188
	FSlateBrush StrikeBrush; // 0x1e0
	FVector2D ShadowOffset; // 0x268
	FLinearColor ShadowColorAndOpacity; // 0x270
	FDelegate ShadowColorAndOpacityDelegate; // 0x280
	float MinDesiredWidth; // 0x290
	bool bWrapWithInvalidationPanel; // 0x294
	bool bAutoWrapText; // 0x295
	ETextTransformPolicy TextTransformPolicy; // 0x296
	bool bSimpleTextMode; // 0x297
};

struct UWBP_ProducerName_2_C : UUserWidget {
	UWBP_ProducerSlot_C* WBP_ProducerSlot_9; // 0x260
	UWBP_ProducerSlot_C* WBP_ProducerSlot_10; // 0x268
	UWBP_ProducerSlot_C* WBP_ProducerSlot_11; // 0x270
	UWBP_ProducerSlot_C* WBP_ProducerSlot_12; // 0x278
	UWBP_ProducerSlot_C* WBP_ProducerSlot_13; // 0x280
	UWBP_ProducerSlot_C* WBP_ProducerSlot_14; // 0x288
	UWBP_ProducerSlot_C* WBP_ProducerSlot_15; // 0x290
	UWBP_ProducerSlot_C* WBP_ProducerSlot_16; // 0x298
	UWBP_ProducerSlot_C* WBP_ProducerSlot_17; // 0x2a0
	UWBP_ProducerSlot_C* WBP_ProducerSlot_19; // 0x2a8
	UWBP_ProducerSlot_C* WBP_ProducerSlot_20; // 0x2b0
	UWBP_ProducerSlot_C* WBP_ProducerSlot_21; // 0x2b8
	UWBP_ProducerSlot_C* WBP_ProducerSlot_22; // 0x2c0
};

struct UGerstnerWaterWaves : UWaterWaves {
	UGerstnerWaterWaveGeneratorBase* GerstnerWaveGenerator; // 0x28
	TArray<FGerstnerWave> GerstnerWaves; // 0x30
	float MaxWaveHeight; // 0x40
};

struct UPlatformInterfaceBase : UObject {
	TArray<FDelegateArray> AllDelegates; // 0x28
};

struct UNN_CraftPerkTips : USGToolTipWidget {
	UTextBlock* NameText; // 0x288
	UTextBlock* LockText; // 0x290
	UCanvasPanel* RequireStructureCanvas; // 0x298
	UVerticalBox* RequireStructureVertical; // 0x2a0
	UTextBlock* TbWeaponType; // 0x2a8
	FText CraftLockText; // 0x2b0
	FText CraftUnLockText; // 0x2c8
	UTextBlock* DesText; // 0x2e0
	TWeakObjectPtr<USGCraftPerk> BindCraftPerk; // 0x2e8
	FText CraftRecipeText; // 0x2f0
	FText DescriptionText; // 0x308
	FText WeaponSkillTypeText[0x8]; // 0x320
	FText WeaponTypeText[0xd]; // 0x3e0
	FText AmmoTypeText[0xd]; // 0x518
	USGImageNameTips* ImageNameTipsTemplate; // 0x650
};

struct UAlliancePowerSlot : USGUI {
	UImage* GuildImage; // 0x2d8
	UImage* GrayImage; // 0x2e0
	UButton* ExpandButton; // 0x2e8
	UButton* CollapsedButton; // 0x2f0
	USizeBox* ExpandSizeBox; // 0x2f8
	USizeBox* OfficialNameSizeBox; // 0x300
	UTextBlock* OfficialNameText; // 0x308
	USizeBox* OwnerNameSizeBox; // 0x310
	UTextBlock* OwnerNameText; // 0x318
};

struct USpaceCurveDeformationMechanicPropertySet : UInteractiveToolPropertySet {
	ESpaceCurveControlPointTransformMode TransformMode; // 0x60
	ESpaceCurveControlPointOriginMode TransformOrigin; // 0x64
	float Softness; // 0x68
	ESpaceCurveControlPointFalloffType SoftFalloff; // 0x6c
};

struct UChildActorComponent : USceneComponent {
	AActor* ChildActorClass; // 0x208
	AActor* ChildActor; // 0x210
	AActor* ChildActorTemplate; // 0x218
};

struct UTattooListView : UAppearanceListView {
	int32_t PartsIndex; // 0x2f0
};

struct UGuildItemSlot : USGUI {
	UImage* ItemImage; // 0x2d8
	UImage* StateImage; // 0x2e0
	TSoftObjectPtr<UTexture2D> StateTexture[0x4]; // 0x2e8
};

struct UFileMediaSource : UBaseMediaSource {
	FString FilePath; // 0x88
	bool PrecacheFile; // 0x98
};

struct UUI_Guild : USGUI {
	UGuildListPanel* GuildListPanel; // 0x2d8
	UGuildPanel* GuildPanel; // 0x2e0
	UAlliancePanel* AlliancePanel; // 0x2e8
	UAllianceListPanel* AllianceListPanel; // 0x2f0
};

struct URadioPerkRowButton : UUI_RadioButton {
	ESkillType SkillType; // 0x540
	TSoftObjectPtr<UTexture2D> SkillLevelBgPressedTexture; // 0x548
	TSoftObjectPtr<UTexture2D> SkillLevelBgReleasedTexture; // 0x570
	FLinearColor PressedColor; // 0x598
	FLinearColor ReleasedColor; // 0x5a8
	UImage* ImgIcon; // 0x5b8
	UImage* ImgSkillLevelBg; // 0x5c0
	UTextBlock* TbSkillName; // 0x5c8
	UTextBlock* TbSkillLevel; // 0x5d0
	UHorizontalBox* HbMastery; // 0x5d8
	UTextBlock* TbMastery; // 0x5e0
};

struct ASGStructureTaiShouBasement : ASGStructureBasement {
	int32_t ShowHighKillEnemyLimit; // 0x1298
	int32_t WinMoraleThreshold; // 0x129c
	int32_t FlagSupplyOccupyScore; // 0x12a0
	int32_t FlagWatchTowerOccupyScore; // 0x12a4
	int32_t HighKillerKillsDownLimit; // 0x12a8
	int32_t HighKillerDeadDownLimit; // 0x12ac
	float KillNPCScoreRatio; // 0x12b0
	USGBuff* PlayerRespawnProtectBuff; // 0x12b8
	TArray<ASGStructureOccupyFlag*> FlagSupplyArray; // 0x12c0
	TArray<ASGStructureOccupyFlag*> FlagWatchTowerArray; // 0x12d0
	TArray<ASGStructureOccupyFlag*> FlagFortressArray; // 0x12e0
	TArray<USGBuff*> WatchTowerBuffArray; // 0x12f0
	TArray<FPlayerBuffMap> CurWatchBuffMapArray; // 0x1300
};

struct UWidgetAnimationPlayCallbackProxy : UObject {
	FMulticastInlineDelegate Finished; // 0x28
};

struct UGameInstance : UObject {
	TArray<ULocalPlayer*> LocalPlayers; // 0x38
	UOnlineSession* OnlineSession; // 0x48
	TArray<UObject*> ReferencedObjects; // 0x50
	FMulticastInlineDelegate OnPawnControllerChangedDelegates; // 0x78
};

struct UBTCompositeNode : UBTNode {
	TArray<FBTCompositeChild> Children; // 0x58
	TArray<UBTService*> Services; // 0x68
	char bApplyDecoratorScope : 1; // 0x88
};

struct UDeathLocationHUD : UUserWidget {
	FDeathCharacterInfo DeathCharacterInfo; // 0x260
	UTextBlock* LocationText; // 0x298
};

struct UMaterialExpressionTextureSample : UMaterialExpressionTextureBase {
	FExpressionInput Coordinates; // 0x48
};

struct UMiniMapPOI_GenericTeamGroupActor : UMiniMapPOI_Actor {
	TSoftObjectPtr<UTexture2D> DefenseTeamInMiniMapTexture; // 0x3b8
	FLinearColor DefenseTeamInMiniMapColor; // 0x3e0
	TSoftObjectPtr<UTexture2D> DefenseTeamOutOfMiniMapTexture; // 0x3f0
	FLinearColor DefenseTeamOutOfMiniMapColor; // 0x418
	TSoftObjectPtr<UTexture2D> NoTeamInMiniMapTexture; // 0x428
	FLinearColor NoTeamInMiniMapColor; // 0x450
	TSoftObjectPtr<UTexture2D> NoTeamOutOfMiniMapTexture; // 0x460
	FLinearColor NoTeamOutOfMiniMapColor; // 0x488
};

struct USpaceCurveDeformationMechanic : UInteractionMechanic {
	USingleClickInputBehavior* ClickBehavior; // 0x40
	UMouseHoverBehavior* HoverBehavior; // 0x48
	USpaceCurveDeformationMechanicPropertySet* TransformProperties; // 0x68
	APreviewGeometryActor* PreviewGeometryActor; // 0x168
	UPointSetComponent* RenderPoints; // 0x170
	ULineSetComponent* RenderSegments; // 0x178
	UTransformProxy* PointTransformProxy; // 0x1b8
	UTransformGizmo* PointTransformGizmo; // 0x1c0
};

struct UMeshVertexSculptTool : UMeshSculptToolBase {
	UVertexBrushSculptProperties* SculptProperties; // 0x9d8
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0x9e0
};

struct UUI_AdminPlayerAction : USGUI {
	UButton* Button_Admin; // 0x2e8
	UButton* Button_SeniorOperator; // 0x2f0
	UButton* Button_Operator; // 0x2f8
	UButton* Button_CustomerServicer; // 0x300
	UButton* Button_NoneGM; // 0x308
	UButton* Button_KickOff; // 0x310
	UButton* Button_Goto; // 0x318
	UButton* Button_Pull; // 0x320
	UButton* Button_Kill; // 0x328
	UButton* Button_Kill_NoDrop; // 0x330
	UButton* Button_Empty; // 0x338
	UButton* Button_AttachWatch; // 0x340
	UButton* Button_UnAttachWatch; // 0x348
	UButton* Button_AddExp; // 0x350
	UEditableTextBox* EditableTextBox_AddExpNum; // 0x358
	UButton* Button_AddCopper; // 0x360
	UEditableTextBox* EditableTextBox_AddCopperNum; // 0x368
	UButton* Button_AddCapitalSeason; // 0x370
	UEditableTextBox* EditableTextBox_AddCapitalSeasonNum; // 0x378
	UButton* Button_Ghost; // 0x380
	UButton* Button_GiveHuKouItem; // 0x388
	UButton* Button_AddSkillPublicExp; // 0x390
	UEditableTextBox* EditableTextBox_AddSkillPublicExpNum; // 0x398
	UButton* Button_AddAddSkillMasteryPoints; // 0x3a0
	UEditableTextBox* EditableTextBox_AddAddSkillMasteryPointsNum; // 0x3a8
	UButton* Button_Hide; // 0x3b0
	UButton* Button_UnLockNextSkillLimitLevel; // 0x3b8
	UEditableTextBox* EditableTextBox_UnLockNextSkillLimitIndex; // 0x3c0
	UEditableTextBox* EditableTextBox_UnLockNextSkillLimitLevel; // 0x3c8
	UButton* Button_AddPerkPoint; // 0x3d0
	UEditableTextBox* EditableTextBox_AddPerkPointNum; // 0x3d8
	UButton* Button_AddCraftPoint; // 0x3e0
	UEditableTextBox* EditableTextBox_AddCraftPointNum; // 0x3e8
	UButton* Button_ClearTargetCharacterAllTypeGeneral; // 0x3f0
	UComboBoxString* ComboBox_ClearTargetCharacterAllTypeGeneral; // 0x3f8
	UButton* Button_ClearTargetCharacterAllTypeHorse; // 0x400
	UComboBoxString* ComboBox_ClearTargetCharacterAllTypeHorse; // 0x408
	UButton* Button_AllSkillLevelUpTo; // 0x410
	UEditableTextBox* EditableTextBox_SkillLevelUpToPlayer; // 0x418
	UButton* Button_UnLockPerkBySkill; // 0x420
	UButton* Button_ShowPlayerChunkInfos; // 0x428
};

struct UWorldRankButtonSlot : UUserWidget {
	UButton* RankButton; // 0x260
	UTextBlock* RankNameTextBlock; // 0x268
	UUI_WorldRank* RootRankUI; // 0x298
};

struct UABP_Ponytail_C : UDecorationAnimInstance {
	FPointerToUberGraphFrame UberGraphFrame; // 0x2d0
	FAnimNode_CopyPoseFromMesh AnimGraphNode_CopyPoseFromMesh; // 0x2d8
	FAnimNode_KawaiiPhysics AnimGraphNode_KawaiiPhysics; // 0x4b0
	FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace; // 0x710
	FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace; // 0x730
	FAnimNode_Root AnimGraphNode_Root; // 0x750
};

struct USkeletalBodySetup : UBodySetup {
	bool bSkipScaleFromAnimation; // 0x2a8
	TArray<FPhysicalAnimationProfile> PhysicalAnimationData; // 0x2b0
};

struct UPrefabVariantAsset : UPrefabAsset {
	UPrefabAsset* Parent; // 0xd0
};

struct UParticleModuleTypeDataMesh : UParticleModuleTypeDataBase {
	UStaticMesh* Mesh; // 0x30
	float LODSizeScale; // 0x40
	char bUseStaticMeshLODs : 1; // 0x44
	char CastShadows : 1; // 0x44
	char DoCollisions : 1; // 0x44
	EMeshScreenAlignment MeshAlignment; // 0x45
	char bOverrideMaterial : 1; // 0x46
	char bOverrideDefaultMotionBlurSettings : 1; // 0x46
	char bEnableMotionBlur : 1; // 0x46
	FRawDistributionVector RollPitchYawRange; // 0x48
	EParticleAxisLock AxisLockOption; // 0x90
	char bCameraFacing : 1; // 0x91
	EMeshCameraFacingUpAxis CameraFacingUpAxisOption; // 0x92
	EMeshCameraFacingOptions CameraFacingOption; // 0x93
	char bApplyParticleRotationAsSpin : 1; // 0x94
	char bFaceCameraDirectionRatherThanPosition : 1; // 0x94
	char bCollisionsConsiderPartilceSize : 1; // 0x94
};

struct UCameraAnim : UObject {
	UInterpGroup* CameraInterpGroup; // 0x28
	float AnimLength; // 0x30
	FBox BoundingBox; // 0x34
	char bRelativeToInitialTransform : 1; // 0x50
	char bRelativeToInitialFOV : 1; // 0x50
	float BaseFOV; // 0x54
	FPostProcessSettings BasePostProcessSettings; // 0x60
	float BasePostProcessBlendWeight; // 0x5c0
};

struct APlayerController : AController {
	UPlayer* Player; // 0x388
	APawn* AcknowledgedPawn; // 0x390
	UInterpTrackInstDirector* ControllingDirTrackInst; // 0x398
	AHUD* MyHUD; // 0x3a0
	APlayerCameraManager* PlayerCameraManager; // 0x3a8
	APlayerCameraManager* PlayerCameraManagerClass; // 0x3b0
	bool bAutoManageActiveCameraTarget; // 0x3b8
	FRotator TargetViewRotation; // 0x3bc
	float SmoothTargetViewRotationSpeed; // 0x3d4
	TArray<AActor*> HiddenActors; // 0x3e0
	TArray<TWeakObjectPtr<UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x3f0
	double LastSpectatorStateSynchTime; // 0x408
	FVector LastSpectatorSyncLocation; // 0x410
	FRotator LastSpectatorSyncRotation; // 0x41c
	int32_t ClientCap; // 0x428
	UCheatManager* CheatManager; // 0x430
	UCheatManager* CheatClass; // 0x438
	UPlayerInput* PlayerInput; // 0x440
	TArray<FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x448
	char bPlayerIsWaiting : 1; // 0x4c8
	char NetPlayerIndex; // 0x4cc
	UNetConnection* PendingSwapConnection; // 0x508
	UNetConnection* NetConnection; // 0x510
	float InputYawScale; // 0x524
	float InputPitchScale; // 0x528
	float InputRollScale; // 0x52c
	char bShowMouseCursor : 1; // 0x530
	char bEnableClickEvents : 1; // 0x530
	char bEnableTouchEvents : 1; // 0x530
	char bEnableMouseOverEvents : 1; // 0x530
	char bEnableTouchOverEvents : 1; // 0x530
	char bForceFeedbackEnabled : 1; // 0x530
	float ForceFeedbackScale; // 0x534
	TArray<FKey> ClickEventKeys; // 0x538
	EMouseCursor DefaultMouseCursor; // 0x548
	EMouseCursor CurrentMouseCursor; // 0x549
	ECollisionChannel DefaultClickTraceChannel; // 0x54a
	ECollisionChannel CurrentClickTraceChannel; // 0x54b
	float HitResultTraceDistance; // 0x54c
	uint16_t SeamlessTravelCount; // 0x550
	uint16_t LastCompletedSeamlessTravelCount; // 0x552
	int32_t CheatAdminLevel; // 0x554
	UInputComponent* InactiveStateInputComponent; // 0x5c8
	char bShouldPerformFullTickWhenPaused : 1; // 0x5d0
	UTouchInterface* CurrentTouchInterface; // 0x5e8
	ASpectatorPawn* SpectatorPawn; // 0x640
	bool bIsLocalPlayerController; // 0x650
	FVector SpawnLocation; // 0x654
};

struct UWheeledVehicleMovementComponent4W : UWheeledVehicleMovementComponent {
	FVehicleEngineData EngineSetup; // 0x2a0
	FVehicleDifferential4WData DifferentialSetup; // 0x340
	float AckermannAccuracy; // 0x35c
	FVehicleTransmissionData TransmissionSetup; // 0x360
	FRuntimeFloatCurve SteeringCurve; // 0x390
};

struct UEnvQueryGenerator_Composite : UEnvQueryGenerator {
	TArray<UEnvQueryGenerator*> Generators; // 0x50
	char bAllowDifferentItemTypes : 1; // 0x60
	char bHasMatchingItemType : 1; // 0x60
	UEnvQueryItemType* ForcedItemType; // 0x68
};

struct ASGStructureOccupy : ASGStructureItemContainer {
	FLinearColor SameGuildOccupyAreaInnerColor; // 0xd68
	FLinearColor SameGuildOccupyAreaOuterColor; // 0xd78
	FLinearColor OtherGuildOccupyAreaInnerColor; // 0xd88
	FLinearColor OtherGuildOccupyAreaOuterColor; // 0xd98
	float SetScaleSpeed; // 0xda8
	UStaticMeshComponent* InnerStaticMeshComponent; // 0xdb0
	UStaticMeshComponent* OuterStaticMeshComponent; // 0xdb8
	float DispalyOccupyAreaCheckRadius; // 0xdc0
	int32_t OccupyAreaTime; // 0xdc4
	int32_t InitUpdateLevelMax; // 0xdc8
	TArray<FCraftResourceRequirement> ResetTimeResourceRequirements; // 0xdd0
	FMulticastInlineDelegate OccupyToggleRefresh; // 0xde0
	double NetOccupyAreaTime; // 0xdf0
	int32_t NetDestructionTime; // 0xdf8
	int64_t NewNetDestructionTime; // 0xe00
	int32_t NetBeforeDestructionTime; // 0xe08
	int64_t NewNetBeforeDestructionTime; // 0xe10
	int32_t CurrentOuterRadius; // 0xe18
	int32_t CurrentLevel; // 0xe1c
	char bOccupied : 1; // 0xe20
	char bThisWeekPreventDecay : 1; // 0xe20
	char bNextWeekPreventDecay : 1; // 0xe20
	char bInProtectionTime : 1; // 0xe20
	float CurrentOverMulti; // 0xe24
	int32_t CurrentStructureNumInArea; // 0xe28
	char bBuyItems : 1; // 0xe2c
	char bToggleOccupyArea : 1; // 0xe2c
	char bShowProtectSetting : 1; // 0xe2c
	FTimerHandle ProcessOccupyTimerHandle; // 0xe30
	char bOccupyCreatedDynamicMaterials; // 0xe38
	float InnerScaleTarget; // 0xe3c
	float OuterScaleTarget; // 0xe40
	char bTiro : 1; // 0xe50
	float TiroResourceMulti; // 0xe54
	float TiroInnerRadiusMulti; // 0xe58
	float TiroOuterRadiusMulti; // 0xe5c
	float TiroInnerRadiusPVEMulti; // 0xe60
	float TiroOuterRadiusPVEMulti; // 0xe64
	char bCalResourceMultiByStructureNum : 1; // 0xe78
	int32_t BaseStructureNum; // 0xe7c
	int32_t BaseStructurePower; // 0xe80
	int32_t PlayerSearchDistance; // 0xe84
	float ThisWeekAddProtectMulti; // 0xe88
};

struct UCurveLinearColor : UCurveBase {
	FRichCurve FloatCurves[0x4]; // 0x30
	float AdjustHue; // 0x230
	float AdjustSaturation; // 0x234
	float AdjustBrightness; // 0x238
	float AdjustBrightnessCurve; // 0x23c
	float AdjustVibrance; // 0x240
	float AdjustMinAlpha; // 0x244
	float AdjustMaxAlpha; // 0x248
};

struct UComboBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FComboBoxStyle ComboBoxStyle; // 0x30
};

struct UUI_ChangeAppearancePanel : UUserWidget {
	UUniformGridPanel* ItemGridPanel; // 0x260
	UUI_PicBtn* AppearanceTagBtn; // 0x268
	UUI_PicBtn* FashionTagBtn; // 0x270
	UHorizontalBox* TagHBox; // 0x278
	UCheckBox* ShowAllItemCheckBox; // 0x280
	TArray<UN_AppearanceSlot*> ItemPanelSlotList; // 0x288
	int32_t CountsPerRow; // 0x298
	int32_t DefaultShowNum; // 0x29c
	UN_AppearanceSlot* InventorySlotClass; // 0x2a0
	int32_t ShowRow; // 0x2a8
	int32_t LastSlotIndex; // 0x2ac
	USGUI* RootSGUI; // 0x2b0
	TWeakObjectPtr<ASGPlayerCharacter> BindSGChar; // 0x2b8
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComp; // 0x2c0
	TWeakObjectPtr<UN_AppearanceSlot> PressedSlot; // 0x2cc
};

struct UMaterialExpressionCeil : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UInAppPurchaseQueryCallbackProxy2 : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UMovieSceneAudioTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> AudioSections; // 0x80
};

struct UWebBrowser : UWidget {
	FMulticastInlineDelegate OnUrlChanged; // 0x108
	FMulticastInlineDelegate OnBeforePopup; // 0x118
	FMulticastInlineDelegate OnLoadCompleted; // 0x128
	FString InitialURL; // 0x138
	bool bSupportsTransparency; // 0x148
};

struct UPaperSprite : UObject {
	TArray<UTexture*> AdditionalSourceTextures; // 0x38
	FVector2D BakedSourceUV; // 0x48
	FVector2D BakedSourceDimension; // 0x50
	UTexture2D* BakedSourceTexture; // 0x58
	UMaterialInterface* DefaultMaterial; // 0x60
	UMaterialInterface* AlternateMaterial; // 0x68
	TArray<FPaperSpriteSocket> Sockets; // 0x70
	ESpriteCollisionMode SpriteCollisionDomain; // 0x80
	float PixelsPerUnrealUnit; // 0x84
	UBodySetup* BodySetup; // 0x88
	int32_t AlternateMaterialSplitIndex; // 0x90
	TArray<FVector4> BakedRenderData; // 0x98
};

struct ASGStructureYaoQianShu : ASGStructure {
	USGItem* GiveItem; // 0xb98
	USGItem* DeleteItem; // 0xba0
	int32_t PlayerLevelLimit; // 0xba8
	UAnimMontage* PlayerMontage; // 0xbb0
	int32_t PlayMontageDelay; // 0xbb8
	UAnimMontage* YaoQianShuMontage; // 0xbc0
	int32_t MaxUseCount; // 0xbc8
	int32_t UsedCount; // 0xbcc
	int32_t LastClearDay; // 0xbd0
};

struct UCheckBox : UContentWidget {
	ECheckBoxState CheckedState; // 0x120
	FDelegate CheckedStateDelegate; // 0x124
	FCheckBoxStyle WidgetStyle; // 0x138
	USlateWidgetStyleAsset* Style; // 0x6b8
	USlateBrushAsset* UncheckedImage; // 0x6c0
	USlateBrushAsset* UncheckedHoveredImage; // 0x6c8
	USlateBrushAsset* UncheckedPressedImage; // 0x6d0
	USlateBrushAsset* CheckedImage; // 0x6d8
	USlateBrushAsset* CheckedHoveredImage; // 0x6e0
	USlateBrushAsset* CheckedPressedImage; // 0x6e8
	USlateBrushAsset* UndeterminedImage; // 0x6f0
	USlateBrushAsset* UndeterminedHoveredImage; // 0x6f8
	USlateBrushAsset* UndeterminedPressedImage; // 0x700
	EHorizontalAlignment HorizontalAlignment; // 0x708
	FMargin Padding; // 0x70c
	FSlateColor BorderBackgroundColor; // 0x720
	EButtonClickMethod ClickMethod; // 0x748
	EButtonTouchMethod TouchMethod; // 0x749
	EButtonPressMethod PressMethod; // 0x74a
	bool IsFocusable; // 0x74b
	FMulticastInlineDelegate OnCheckStateChanged; // 0x750
};

struct UBlackboardKeyType_String : UBlackboardKeyType {
	FString StringValue; // 0x30
};

struct USiegeAnimInstance : UAnimInstance {
	ASG_SiegeCharacter* SG_SiegeCharacter; // 0x2c0
	UCapsuleComponent* SGCapsuleComponent; // 0x2c8
	UCharacterMovementComponent* SGCharacterMovementComponent; // 0x2d0
	char bIsMoving : 1; // 0x2d8
	char bMoveForward : 1; // 0x2d8
	float fSpeedRatio; // 0x2dc
	float ArchDirection; // 0x2e0
	float ArchDirectionInterpSpeed; // 0x2e4
	float RotateSpeed; // 0x2e8
};

struct UGuildListSlot : USGUI {
	UTextBlock* GuildNameText; // 0x2d8
	UTextBlock* GuildLevelText; // 0x2e0
	UTextBlock* GuildOwnerText; // 0x2e8
	UTextBlock* MemberCountText; // 0x2f0
	UTextBlock* StructureProssessAuthText; // 0x2f8
	UImage* BGImage; // 0x300
	UDataButton* JoinDataButton; // 0x308
	UDataButton* CheatGuildDataButton; // 0x310
	TSoftObjectPtr<UTexture2D> NormalBGTexture; // 0x318
	TSoftObjectPtr<UTexture2D> SelectBGTexture; // 0x340
};

struct UMiniMapPOIFilter : UUserWidget {
	TSoftObjectPtr<UTexture2D> FilterTexture; // 0x260
	FText FilterName; // 0x288
	TArray<EMapPOIType> POIType; // 0x2a0
	TArray<EMapStaticPOIType> StaticPOIType; // 0x2b0
	TArray<EMiniMapMarkFilterType> MarkPOIType; // 0x2c0
	UCheckBox* CbFilter; // 0x2e0
	UTextBlock* TbFilterName; // 0x2e8
	UImage* ImgFilter; // 0x2f0
};

struct USGGameDataOccupyStructureData : UObject {
	TArray<FOccupyStructureSettings> OccupyStructureSetting; // 0x28
	TArray<FOccupyStructureGuildLevelSettings> OccupyStructureGuildLevelSetting; // 0x38
	TArray<USGItem*> OccupyAllSellItem; // 0x48
};

struct UReplicationGraphNode_AlwaysRelevant : UReplicationGraphNode {
	UReplicationGraphNode* ChildNode; // 0x50
};

struct UUI_Achievement : USGUI {
	UAchievementProgress* AchievementProgressTemplate; // 0x2d8
	UTitleItem* TitleItemTemplate; // 0x2e0
	UAchievementDamageMultiplyItem* DamageMultiplyItemTemplate; // 0x2e8
	UAchievementNearAccomplishItem* NearAccomplishItemTemplate; // 0x2f0
	UTextBlock* TbCurAchievementNum; // 0x2f8
	UTextBlock* TbTotalAchievementNum; // 0x300
	UTitleItem* CurTitleItem; // 0x308
	UButton* BtnChangeTitle; // 0x310
	UTextBlock* TbChangeTitle; // 0x318
	UCanvasPanel* ChangeTitlePanel; // 0x320
	UUniformGridPanel* UGPChangeTitle; // 0x328
	UCanvasPanel* AchievementProgressCanvas; // 0x330
	UAchievementTypePanel* AchievementTypePanel; // 0x338
	UAchievementPanel* AchievementPanel; // 0x340
	UCanvasPanel* RecentlyAcquiredCanvas; // 0x348
	UUI_RadioButtonView* RpbAchievementNavigationView; // 0x350
	UUniformGridPanel* UGPDamageMultiply; // 0x358
	UUniformGridPanel* UGPAchievementProgress; // 0x360
	UUniformGridPanel* UGPNearAccomplish; // 0x368
	TMap<FString, FAccomplishAchievementDataArray> AccomplishAchievementMap; // 0x370
	TArray<UTitleItem*> AllTitleItems; // 0x3c0
	TMap<FString, UAchievementDamageMultiplyItem*> DamageMultiplyItems; // 0x3d0
	TArray<UAchievementNearAccomplishItem*> NearAccomplishItems; // 0x420
	TArray<UAchievementProgress*> AchievementProgresses; // 0x430
	TMap<FString, FSGAchievementMap> AchievementMap; // 0x488
	FString CurSelectType; // 0x4d8
};

struct UUI_AlliancePower : USGUI {
	UAlliancePowerGroupSlot* AlliancePowerGroupSlotClass; // 0x2d8
	UVerticalBox* GroupSlotBox; // 0x2e0
	FMargin GroupSlotPadding; // 0x2e8
	FAlliancePowerGroupConfig GroupConfig[0x7]; // 0x2f8
};

struct UTimeSynchronizableMediaSource : UBaseMediaSource {
	bool bUseTimeSynchronization; // 0x88
	int32_t FrameDelay; // 0x8c
	double TimeDelay; // 0x90
};

struct UEditableStaticMeshAdapter : UEditableMeshAdapter {
	UStaticMesh* StaticMesh; // 0x28
	UStaticMesh* OriginalStaticMesh; // 0x30
	int32_t StaticMeshLODIndex; // 0x38
};

struct ASGKongmingLantern : ASGGamePlayActor {
	float MoveSpeed; // 0x510
	float TraceDistance; // 0x514
	float RandPitchMin; // 0x518
	float RandPitchMax; // 0x51c
	float SyncLocInterval; // 0x520
	FVector CurLoc; // 0x524
	FVector BeginLoc; // 0x530
	FVector EndLoc; // 0x53c
	float MoveDis; // 0x548
	ASGStructureItemContainer_Crate* ContainerStructureClass; // 0x550
	FTimerHandle CreateBaoZangHandle; // 0x560
};

struct UUI_Activity : USGUI {
	UOptionButton* SlotXiancheng; // 0x2d8
	UOptionButton* SlotTaishou; // 0x2e0
	UOptionButton* SlotGuanai; // 0x2e8
	UImage* Image_Xiancheng; // 0x2f0
	UImage* Image_Taishou; // 0x2f8
	UImage* Image_Guanai; // 0x300
	UMultiLineEditableText* MultiLineEditableText_Rules; // 0x308
	UUI_Activity_Xiancheng* UI_Activity_Xiancheng; // 0x310
	UUI_Activity_Taishou* UI_Activity_Taishou; // 0x318
	UUI_Activity_Guanai* UI_Activity_Guanai; // 0x320
	UTextBlock* CapitalText; // 0x328
	FText XianchengRules; // 0x330
	FText TaishouRules; // 0x348
	FText GuanaiRules; // 0x360
};

struct UConstantQNRT : UAudioSynesthesiaNRT {
	UConstantQNRTSettings* Settings; // 0x78
};

struct UVehiclePerkSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> QualityBrush[0x6]; // 0x260
	UImage* IconImg; // 0x350
	UImage* QualityImg; // 0x358
	UImage* ActiveImg; // 0x360
	USGVehiclePerk* BindVehiclePerk; // 0x368
	int32_t VehiclePerkIndex; // 0x370
	char bIsActivePerk : 1; // 0x374
	EVehiclePerkSlotType PerkSlotType; // 0x375
};

struct UWBP_PrivateSessionItem_C : UUI_PrivateSessionListRow {
	UImage* ImgDescription; // 0x428
	FMulticastInlineDelegate OnSelectDispatch; // 0x430
};

struct UZhanLingSlot : UUserWidget {
	UTextBlock* NameText; // 0x260
	UTextBlock* LevelText; // 0x268
	UTextBlock* TitleText; // 0x270
	UTextBlock* GroupText; // 0x278
	UEditableTextBox* ZhanLingTextBox; // 0x280
	UTextBlock* ZhanLingText; // 0x288
};

struct UTexture : UStreamableRenderAsset {
	FGuid LightingGuid; // 0x68
	int32_t LODBias; // 0x78
	TextureCompressionSettings CompressionSettings; // 0x7c
	TextureFilter Filter; // 0x7d
	ETextureMipLoadOptions MipLoadOptions; // 0x7e
	TextureGroup LODGroup; // 0x7f
	FPerPlatformFloat Downscale; // 0x80
	ETextureDownscaleOptions DownscaleOptions; // 0x84
	char SRGB : 1; // 0x85
	char bNoTiling : 1; // 0x85
	char VirtualTextureStreaming : 1; // 0x85
	char CompressionYCoCg : 1; // 0x85
	char bNotOfflineProcessed : 1; // 0x85
	char bAsyncResourceReleaseHasBeenStarted : 1; // 0x85
	TArray<UAssetUserData*> AssetUserData; // 0x88
};

struct UEdgeLoopInsertionOperatorFactory : UObject {
	UEdgeLoopInsertionTool* Tool; // 0x30
};

struct UCameraShakeBase : UObject {
	bool bSingleInstance; // 0x28
	float ShakeScale; // 0x2c
	APlayerCameraManager* CameraManager; // 0x30
};

struct UAIPerceptionComponent : UActorComponent {
	TArray<UAISenseConfig*> SensesConfig; // 0xc0
	UAISense* DominantSense; // 0xd0
	AAIController* AIOwner; // 0xe8
	FMulticastInlineDelegate OnPerceptionUpdated; // 0x170
	FMulticastInlineDelegate OnTargetPerceptionUpdated; // 0x180
	FMulticastInlineDelegate OnTargetPerceptionInfoUpdated; // 0x190
};

struct UBTDecorator_SetTagCooldown : UBTDecorator {
	FGameplayTag CooldownTag; // 0x68
	float CooldownDuration; // 0x70
	bool bAddToExistingDuration; // 0x74
};

struct UActorInfoHUD : UUserWidget {
	TWeakObjectPtr<AActor> BindActor; // 0x260
	FVector LocationOffset; // 0x268
};

struct UTemplateSequence : UMovieSceneSequence {
	UMovieScene* MovieScene; // 0x60
	TSoftClassPtr<UObject> BoundActorClass; // 0x68
	TSoftObjectPtr<AActor> BoundPreviewActor; // 0x90
	TMap<FGuid, FName> BoundActorComponents; // 0xb8
};

struct UUI_N_General : USGUI {
	UCanvasPanel* EquipPanelCanvas; // 0x2d8
	UCanvasPanel* StatusPanel; // 0x2e0
	UCanvasPanel* FunctionPanel; // 0x2e8
	UN_EquipPanel* EquipPanel; // 0x2f0
	UCanvasPanel* DetailPanelCanvas; // 0x2f8
	UN_InventoryPanel* InventoryPanel; // 0x300
	UCanvasPanel* GeneralCampCanvas; // 0x308
	UN_GeneralCampPanel* GeneralCampPanel; // 0x310
	UButton* ReleaseButton; // 0x318
	UButton* KillButton; // 0x320
	UButton* ResetButton; // 0x328
	UOptionButton* AttributeButton; // 0x330
	UOptionButton* ConditionButton; // 0x338
	UOptionButton* TalentButton; // 0x340
	UOptionButton* SkillButton; // 0x348
	UN_GeneralStatusPanel* GeneralStatusPanel; // 0x350
	UButton* ChangeNameButton; // 0x358
	UCanvasPanel* GeneralPanel; // 0x360
	TWeakObjectPtr<ASGGeneralCharacter> BindGeneralCharacter; // 0x368
	UN_GeneralCampSlot* BindGeneralCampSlot; // 0x370
	UUI_NPCInfo* ParentUI; // 0x378
	TWeakObjectPtr<UN_InventorySlot> PressedSlot; // 0x380
	UAttributePanel* AttributePanel; // 0x388
	UConditionPanel* ConditionPanel; // 0x390
	UTalentPanel* TalentPanel; // 0x398
	USkillPanel* SkillPanel; // 0x3a0
	FLinearColor GeneralCharacterNameBgColor[0x6]; // 0x3a8
	TSoftObjectPtr<UTexture2D> GeneralCharacterTexture2D[0x6]; // 0x408
	TSoftObjectPtr<UTexture2D> GeneralNameBgTexture2D[0x4]; // 0x4f8
	UButton* ShowLegendButton; // 0x598
	UUI_GeneralLegend* LegendUITemplate; // 0x5a0
	TWeakObjectPtr<UUI_GeneralLegend> LegendUI; // 0x5a8
	char bShowGeneralCharacter : 1; // 0x5b0
	UGeneralWagesPanel* WagesPanel; // 0x5b8
	UGeneralWagesPanel* WagesPanelTemplate; // 0x5c0
};

struct UApplicationLifecycleComponent : UActorComponent {
	FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0xc0
	FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0xd0
	FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0xe0
	FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0xf0
	FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0x100
	FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x110
	FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x120
	FMulticastInlineDelegate OnTemperatureChangeDelegate; // 0x130
	FMulticastInlineDelegate OnLowPowerModeDelegate; // 0x140
};

struct UConsole : UObject {
	ULocalPlayer* ConsoleTargetPlayer; // 0x38
	UTexture2D* DefaultTexture_Black; // 0x40
	UTexture2D* DefaultTexture_White; // 0x48
	TArray<FString> HistoryBuffer; // 0x68
};

struct USourceEffectSimpleDelayPreset : USoundEffectSourcePreset {
	FSourceEffectSimpleDelaySettings Settings; // 0xa8
};

struct UARTrackedQRCode : UARTrackedImage {
	FString QRCode; // 0x108
	int32_t Version; // 0x118
};

struct UBakeMeshAttributeMapsTool : UMultiSelectionTool {
	UBakeMeshAttributeMapsToolProperties* Settings; // 0x90
	UBakedNormalMapToolProperties* NormalMapProps; // 0x98
	UBakedOcclusionMapToolProperties* OcclusionMapProps; // 0xa0
	UBakedCurvatureMapToolProperties* CurvatureMapProps; // 0xa8
	UBakedTexture2DImageProperties* Texture2DProps; // 0xb0
	UBakedOcclusionMapVisualizationProperties* VisualizationProps; // 0xb8
	UMaterialInstanceDynamic* PreviewMaterial; // 0xd0
	UTexture2D* CachedNormalMap; // 0x430
	UTexture2D* CachedOcclusionMap; // 0x450
	UTexture2D* CachedCurvatureMap; // 0x480
	UTexture2D* CachedMeshPropertyMap; // 0x498
	UTexture2D* CachedTexture2DImageMap; // 0x4b0
	UTexture2D* EmptyNormalMap; // 0x4b8
	UTexture2D* EmptyColorMapBlack; // 0x4c0
	UTexture2D* EmptyColorMapWhite; // 0x4c8
};

struct UGuildImageSlot : USGUI {
	UImage* MaterialImage; // 0x2d8
	UGuildImageMaterialSerializer* GuildImageMaterialSerializerClass; // 0x2e0
	UGuildImageMaterialSerializer* GuildImageMaterialSerializer; // 0x2e8
};

struct UGameplayTask_WaitDelay : UGameplayTask {
	FMulticastInlineDelegate OnFinish; // 0x68
};

struct UActorSequenceComponent : UActorComponent {
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0xc0
	UActorSequence* Sequence; // 0xd8
	UActorSequencePlayer* SequencePlayer; // 0xe0
};

struct UMiniMapMarkItem : UUserWidget {
	UImage* ImgMarkIcon; // 0x280
	UButton* BtnBg; // 0x288
	UImage* ImgSelected; // 0x290
};

struct USGGameUserSettings : UGameUserSettings {
	float MainSoundVolume; // 0x12c
	float BgmSoundVolume; // 0x130
	float EffectSoundVolume; // 0x134
	float Gamma; // 0x138
	bool bRayTracing; // 0x13c
	bool bRayTracingShadow; // 0x13d
	bool bRayTracingReflections; // 0x13e
	bool bAntiAliasingDLSS; // 0x13f
	int32_t DLSSQuality; // 0x140
	bool bAntiAliasingFSR; // 0x144
	int32_t FSRQuality; // 0x148
	float FSRSoftness; // 0x14c
	int32_t MotionBlurQuality; // 0x150
	bool bColorBlindness; // 0x154
	int32_t SingleCellHP; // 0x158
	bool bShowGroom; // 0x15c
	bool bEnableLightningShake; // 0x15d
	bool bCustomOverallScalabilityLevel; // 0x15e
	bool bCustomViewDistanceQuality; // 0x15f
	bool bCustomAntiAliasingQuality; // 0x160
	bool bCustomShadowQuality; // 0x161
	bool bCustomPostProcessQuality; // 0x162
	bool bCustomTextureQuality; // 0x163
	bool bCustomEffectsQuality; // 0x164
	bool bCustomFoliageQuality; // 0x165
	bool bCustomShadingQuality; // 0x166
	TMap<FString, float> ViewDistanceScalabilityFloatDetails; // 0x168
	TMap<FString, float> AntiAliasingScalabilityFloatDetails; // 0x1b8
	TMap<FString, float> ShadowScalabilityFloatDetails; // 0x208
	TMap<FString, float> PostProcessScalabilityFloatDetails; // 0x258
	TMap<FString, float> TextureScalabilityFloatDetails; // 0x2a8
	TMap<FString, float> EffectsScalabilityFloatDetails; // 0x2f8
	TMap<FString, float> FoliageScalabilityFloatDetails; // 0x348
	TMap<FString, float> ShadingScalabilityFloatDetails; // 0x398
	TMap<FString, int32_t> ViewDistanceScalabilityIntDetails; // 0x3e8
	TMap<FString, int32_t> AntiAliasingScalabilityIntDetails; // 0x438
	TMap<FString, int32_t> ShadowScalabilityIntDetails; // 0x488
	TMap<FString, int32_t> PostProcessScalabilityIntDetails; // 0x4d8
	TMap<FString, int32_t> TextureScalabilityIntDetails; // 0x528
	TMap<FString, int32_t> EffectsScalabilityIntDetails; // 0x578
	TMap<FString, int32_t> FoliageScalabilityIntDetails; // 0x5c8
	TMap<FString, int32_t> ShadingScalabilityIntDetails; // 0x618
	TMap<FString, bool> MiniMapFilterState; // 0x668
	bool bAlwaysUseRiderBattleMode; // 0x708
	bool bEnableCollectionAttack; // 0x709
	float MouseSensitivity; // 0x70c
	bool bInvertMouseX; // 0x710
	bool bInvertMouseY; // 0x711
	bool bShowNetStat; // 0x712
	bool bClientEnableUpdateRateOptimizations; // 0x713
	bool bAnchorMode; // 0x714
	bool bShowFleshPhysicialMaterialEffect; // 0x715
	bool bShowSelfInMiniMap; // 0x716
	bool bShowCustomGuildIcon; // 0x717
	bool bReceiveNearbyVoice; // 0x718
	bool bPlayViolentAudio; // 0x719
	bool bShowCustomName; // 0x71a
	bool bShowLocationServer; // 0x71b
	bool bFilterFoulLanguage; // 0x71c
	TArray<int32_t> ChatCheckedSlots; // 0x720
	TArray<int32_t> ChatUncheckedSlots; // 0x730
	bool bCraftPerkSwitch; // 0x740
	bool bMailSwitch; // 0x741
	bool bQuestSwitch; // 0x742
	bool bGuildEventSwitch; // 0x743
	bool bHorseEventSwitch; // 0x744
	bool bGuildSwitch; // 0x745
	TMap<int32_t, int32_t> RoleClusterDistrictMap; // 0x748
	bool bBenchmarkScalability; // 0x798
	int32_t KeySettingVersion; // 0x79c
	TMap<FName, FInputActionKeyMappingMap> ActionMappings; // 0x7a0
	TMap<FName, FInputAxisKeyMappingMap> AxisMappings; // 0x7f0
	char bSettingRegistered : 1; // 0x860
	TMap<FString, FGameUserSettingConfigMap> ConfigMap; // 0x868
	UDataTable* ScalabilityDetailsDataTable; // 0x8b8
	ASGGameState* GameState; // 0x8c0
	int32_t DefaultRHI; // 0x8c8
	char bRunHardwareBenchmark : 1; // 0x8cc
};

struct ALandscapeMeshProxyActor : AActor {
	ULandscapeMeshProxyComponent* LandscapeMeshProxyComponent; // 0x310
};

struct ANavModifierVolume : AVolume {
	UNavArea* AreaClass; // 0x350
	bool bMaskFillCollisionUnderneathForNavmesh; // 0x358
};

struct UFieldSystemMetaDataIteration : UFieldSystemMetaData {
	int32_t Iterations; // 0xc0
};

struct UWBP_ConnectWaitingDialog_C : UUI_GenericConnectWaiting {
	UCircularThrobber* CircularThrobber_194; // 0x2e0
	UImage* Image_94; // 0x2e8
};

struct UBillboardComponent : UPrimitiveComponent {
	UTexture2D* Sprite; // 0x488
	char bIsScreenSizeScaled : 1; // 0x490
	float ScreenSize; // 0x494
	float U; // 0x498
	float UL; // 0x49c
	float V; // 0x4a0
	float VL; // 0x4a4
};

struct UEnvQueryTest_Project : UEnvQueryTest {
	FEnvTraceData ProjectionData; // 0x1f8
};

struct UNiagaraDataInterfaceRenderTargetVolume : UNiagaraDataInterfaceRWBase {
	FIntVector Size; // 0xd8
	ETextureRenderTargetFormat OverrideRenderTargetFormat; // 0xe4
	char bOverrideFormat : 1; // 0xe5
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xe8
	TMap<uint64_t, UTextureRenderTargetVolume*> ManagedRenderTargets; // 0x108
};

struct UNiagaraDataInterfaceCurveBase : UNiagaraDataInterface {
	TArray<float> ShaderLUT; // 0x38
	float LUTMinTime; // 0x48
	float LUTMaxTime; // 0x4c
	float LUTInvTimeRange; // 0x50
	float LUTNumSamplesMinusOne; // 0x54
	char bUseLUT : 1; // 0x58
	char bExposeCurve : 1; // 0x58
	FName ExposedName; // 0x5c
	UTexture2D* ExposedTexture; // 0x68
};

struct USecondarySmoothBrushOpProps : UBaseSmoothBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	bool bPreserveUVFlow; // 0x68
};

struct UAbilityTask_SpawnActor : UAbilityTask {
	FMulticastInlineDelegate Success; // 0x80
	FMulticastInlineDelegate DidNotSpawn; // 0x90
};

struct UGuildDetailsSlot : USGUI {
	UTextBlock* GuildNameText; // 0x2d8
	UTextBlock* GuildOwnerText; // 0x2e0
	UTextBlock* GuildLevelText; // 0x2e8
	UTextBlock* GuildLanguageText; // 0x2f0
	UTextBlock* BaseCampText; // 0x2f8
	UTextBlock* GuildExpText; // 0x300
	UTextBlock* GuildActivityText; // 0x308
	UTextBlock* CantAddActivityText; // 0x310
	UTextBlock* GuildMemberCountText; // 0x318
	UTextBlock* GuildNoticeText; // 0x320
	UTextBlock* GuildOuterNoticeText; // 0x328
	UImage* GuildImage; // 0x330
	UButton* AddExpButton; // 0x338
	UButton* GuildAuthorityButton; // 0x340
	UButton* GuildApplyButton; // 0x348
	UProgressBar* EXPProgressBar; // 0x350
	UButton* ChangeGuildNameButton; // 0x358
	UButton* ChangeGuildNoticeButton; // 0x360
	UButton* ChangeGuildOuterNoticeButton; // 0x368
	USizeBox* NoticeTitleSizeBox; // 0x370
	USizeBox* NoticeSizeBox; // 0x378
	UCanvasPanel* ExpPanel; // 0x380
	UImage* ApplyAlertImage; // 0x388
	UButton* BeInviteButton; // 0x390
	UImage* BeInviteAlertImage; // 0x398
	UCanvasPanel* ManagePanel; // 0x3a0
	UDataButton* AutoChangeOwnerButton; // 0x3a8
	UDataButton* SetBaseCampButton; // 0x3b0
	UCanvasPanel* GuildColorCanvasPanel; // 0x3b8
	UScrollBox* ColorListScrollBox; // 0x3c0
	UVerticalBox* ColorListVerticalBox; // 0x3c8
	UImage* GuildColorImage; // 0x3d0
	UButton* ChangeGuildColorButton; // 0x3d8
	UGuildAuthorityComboBox* GuildLanguageComboBox; // 0x3e0
	UUI_ModifyText* ChangeNameUIOverride; // 0x3e8
	UUI_ModifyText* ChangeInnerNoticeUIOverride; // 0x3f0
	UUI_ModifyText* ChangeOuterNoticeUIOverride; // 0x3f8
	int32_t MaxNoticeLen; // 0x400
	USGToolTipWidget* ButtonTipWidgetTemplate; // 0x408
	UGuildColorSlot* GuildColorSlotTemplate; // 0x410
};

struct UParticleModuleParameterDynamic : UParticleModuleParameterBase {
	TArray<FEmitterDynamicParameter> DynamicParams; // 0x30
	int32_t UpdateFlags; // 0x40
	char bUsesVelocity : 1; // 0x44
};

struct UGizmoTransformProxyTransformSource : UGizmoBaseTransformSource {
	UTransformProxy* Proxy; // 0x48
};

struct UMirrorToolProperties : UInteractiveToolPropertySet {
	EMirrorOperationMode OperationMode; // 0x60
	bool bCropAlongMirrorPlaneFirst; // 0x61
	bool bWeldVerticesOnMirrorPlane; // 0x62
	bool bAllowBowtieVertexCreation; // 0x63
	bool bSnapToWorldGrid; // 0x64
	EMirrorCtrlClickBehavior CtrlClickBehavior; // 0x65
	bool bButtonsOnlyChangeOrientation; // 0x66
	bool bShowPreview; // 0x67
	EMirrorSaveMode SaveMode; // 0x68
};

struct UFoliageType_InstancedStaticMesh : UFoliageType {
	UStaticMesh* Mesh; // 0x3d8
	TArray<UMaterialInterface*> OverrideMaterials; // 0x3e0
	UFoliageInstancedStaticMeshComponent* ComponentClass; // 0x3f0
};

struct ASGStructureTurretFlameThrower : ASGStructureTurret {
	float FlameTraceDelta; // 0x14d8
	float FlameFireAmmoReduceDelta; // 0x14dc
	float CreateFlameTrapDelta; // 0x14e0
	float FlameSphere; // 0x14f0
	float FlameDistance; // 0x14f4
	FName FlameFireStartSocket; // 0x14f8
	FTimerHandle FlameThrowerTimerHandle; // 0x1500
	char bDebugTrace : 1; // 0x1508
	float DamageBase; // 0x150c
	USGDamageType* DamageType; // 0x1510
	EDamageType FlameAttackDamageType; // 0x1518
	ASGEmptyGameTrap* FlameTrapTemplate; // 0x1520
	UMaterialInterface* TrapDecal; // 0x1528
	FVector TrapScale; // 0x1530
	FVector DecalSize; // 0x153c
	FRotator DecalRotationOffset; // 0x1548
	FVector DecalLocationOffset; // 0x1554
	FVector BoxSize; // 0x1560
	FVector BoxLocationOffset; // 0x156c
	FRotator BoxRotationOffset; // 0x1578
	char bEnableBoxOverlap : 1; // 0x1584
	float TrapLifeTime; // 0x1588
	char bCreateTrapParticle : 1; // 0x158c
	UParticleSystem* TrapParticle; // 0x1590
	USGBuff* OverlapBuff; // 0x1598
	UParticleSystem* BrokenExplosionEffect; // 0x15a0
	FName BrokenExplosionSoundID; // 0x15a8
	FVector EffectScale; // 0x15b0
	FVector ExlposionLocationOffset; // 0x15bc
	float MaxDamage; // 0x15c8
	float MinDamage; // 0x15cc
	float MaxCollectionDamage; // 0x15d0
	float MinCollectionDamage; // 0x15d4
	float InnerRadius; // 0x15d8
	float OuterRadius; // 0x15dc
	float DamageFalloff; // 0x15e0
	USGDamageType* BrokenExplosionDamageType; // 0x15e8
	EDamageType BrokenExplosionAttackDamageType; // 0x15f0
	FTimerHandle CountingHandle; // 0x15f8
	float FireTime; // 0x1600
	float FireLeftTime; // 0x1604
};

struct UComponentDelegateBinding : UDynamicBlueprintBinding {
	TArray<FBlueprintComponentDelegateBinding> ComponentDelegateBindings; // 0x28
};

struct UCurveVector : UCurveBase {
	FRichCurve FloatCurves[0x3]; // 0x30
};

struct UPubOfficialSealBlockLogic : UObject {
	TMap<EBattleType, FOfficalSealConfig> OfficialSealConfigMap; // 0x30
};

struct ASGAudioManager : AActor {
	TArray<FVoiceSoundDataArray> MaleCreateRolePreviewSound; // 0x310
	TArray<FVoiceSoundDataArray> FemaleCreateRolePreviewSound; // 0x320
	UDataTable* MapBGMDataTable; // 0x330
	UDataTable* MapAmbientSoundDataTable; // 0x338
	FName DragInventoryItemSound[0x13]; // 0x340
	FName DropInventoryItemSound[0x13]; // 0x3d8
	FName EnterInventoryItemSound[0x13]; // 0x470
	FName StartMakeItemSound[0x13]; // 0x508
	FName EndMakeItemSound[0x13]; // 0x5a0
	FName HoverAddSkillPointSoundID; // 0x638
	FName PressAddSkillPointSoundID; // 0x640
	FName HoverPerkSoundID; // 0x648
	FName PressPerkSoundID; // 0x650
	FName FirstEnterSceneSoundID; // 0x658
	FName StateSound[0x10]; // 0x660
	FName RespawnSoundID; // 0x6e0
	FName AccomplishAchievementSoundID; // 0x6e8
	FName IntensifySuccessSoundID; // 0x6f0
	FTimeStateSetting TimeStateSetting[0x2]; // 0x6f8
	FVector2D WindStateSetting[0x4]; // 0x718
	USoundClass* MainSoundClass; // 0x738
	USoundMix* MainSoundMixModifier; // 0x740
	USoundClass* BgmSoundClass; // 0x748
	USoundMix* BgmSoundMixModifier; // 0x750
	USoundClass* EffectSoundClass; // 0x758
	USoundMix* EffectSoundMixModifier; // 0x760
	UDataTable* DT_SoundSettings[0xd]; // 0x778
	USGSoundEffectSourcePresetChain* EffectStateSourcePresetChain; // 0x7e8
	USGSoundEffectSourcePresetChain* MainEffectStateSourcePresetChain; // 0x7f0
	char bIsInitTime : 1; // 0x820
	FBGMData InitBGMData; // 0x828
	TArray<ANatureBGMVolume*> BGMVolumes; // 0x918
	TArray<FBox> BGMVolumesBoxes; // 0x928
	ANatureBGMVolume* CurBGMVolume; // 0x938
	TArray<ANatureBGMVolume*> EnteringBGMVolumes; // 0x940
	TArray<ANatureAmbientSoundVolume*> AmbientSoundVolumes; // 0x950
	TArray<FBox> AmbientSoundVolumesBoxes; // 0x960
	ANatureAmbientSoundVolume* CurAmbientSoundVolume; // 0x970
	TArray<ANatureAmbientSoundVolume*> EnteringAmbientSoundVolumes; // 0x978
};

struct UMaterialExpressionSkyAtmosphereLightDiskLuminance : UMaterialExpression {
	int32_t LightIndex; // 0x40
};

struct UAbilityTask_ApplyRootMotionMoveToActorForce : UAbilityTask_ApplyRootMotion_Base {
	FMulticastInlineDelegate OnFinished; // 0xc0
	FVector StartLocation; // 0xd8
	FVector TargetLocation; // 0xe4
	AActor* TargetActor; // 0xf0
	FVector TargetLocationOffset; // 0xf8
	ERootMotionMoveToActorTargetOffsetType OffsetAlignment; // 0x104
	float Duration; // 0x108
	bool bDisableDestinationReachedInterrupt; // 0x10c
	bool bSetNewMovementMode; // 0x10d
	EMovementMode NewMovementMode; // 0x10e
	bool bRestrictSpeedToExpected; // 0x10f
	UCurveVector* PathOffsetCurve; // 0x110
	UCurveFloat* TimeMappingCurve; // 0x118
	UCurveFloat* TargetLerpSpeedHorizontalCurve; // 0x120
	UCurveFloat* TargetLerpSpeedVerticalCurve; // 0x128
};

struct ASGProjectile : AActor {
	USceneComponent* VirtualRoot; // 0x310
	UStaticMeshComponent* ProjectileMesh; // 0x318
	UProjectileMovementComponent* ProjectileMovementComponent; // 0x320
	UParticleSystemComponent* TrailParticleSystemComponent; // 0x328
	FConstructAttachMeshParticle TrailParticleSetting; // 0x330
	UParticleSystemComponent* AutoActiveParticleSystemComponent; // 0x368
	FConstructAttachMeshParticle AutoActiveParticleSetting; // 0x370
	USphereComponent* TrapSphereComponent; // 0x3a8
	FName FlySoundID; // 0x3b0
	char bAutoActiveStopInFire : 1; // 0x3b8
	char bAutoActiveStopOnHit : 1; // 0x3b8
	FName StandSocketName; // 0x3c8
	FVector SeatedCharacterLocationOffset; // 0x3d0
	FRotator SeatedCharacterRotationOffset; // 0x3dc
	USGDamageType* DamageType; // 0x3e8
	char bOnlyUseServerTrace : 1; // 0x3f0
	char bHideMeshInFly : 1; // 0x3f0
	int32_t Tenacity; // 0x3f4
	char bIsHit : 1; // 0x3f8
	char bHasFired : 1; // 0x3f8
	char bProjectileHasStopped : 1; // 0x3f8
	float ServerCheckImpactActorDistance; // 0x3fc
	float ServerCheckImpactComponentDistance; // 0x400
	float ServerCheckImpactPointDistance; // 0x404
	int32_t MakeDamageTimes; // 0x408
	FVector FireFlyScale; // 0x40c
	UCurveFloat* DistanceAttenuationCurve; // 0x418
	float ProjectileRange; // 0x420
	float ChangedGravityRange; // 0x424
	FVector StartLocation; // 0x428
	char bTickRotation : 1; // 0x434
	FRotator AddRotatorDetla; // 0x438
	EDamageType ProjectileDefaultDamageType; // 0x444
	float SlashingDamage; // 0x448
	float PiercingDamage; // 0x44c
	float CrushingDamage; // 0x450
	float CollectionDamage; // 0x454
	float SiegeDamage; // 0x458
	int32_t Hardness; // 0x45c
	int32_t AmmoPierceness; // 0x460
	int32_t OriginAmmoPierceness; // 0x464
	char bCreateTrap : 1; // 0x474
	UMaterialInterface* TrapDecal; // 0x478
	char bUseCustomRelativeLocation : 1; // 0x480
	FVector CustomMeshRelativeLocation; // 0x484
	char bUseCustomRelativeActorFixLocation : 1; // 0x490
	char bUseCustomRelativeRotation : 1; // 0x490
	FRotator CustomMeshRelativeRotation; // 0x494
	FVector DecalSize; // 0x4a0
	FRotator DecalRotationOffset; // 0x4ac
	FVector DecalLocationOffset; // 0x4b8
	float TrapLifeTime; // 0x4c4
	char bCreateTrapParticle : 1; // 0x4c8
	FName TrapParticleSoundID; // 0x4cc
	UParticleSystem* TrapParticle; // 0x4d8
	char bParticleFollowHitRotation : 1; // 0x4e0
	FVector TrapParticleLocationOffset; // 0x4e4
	FRotator TrapParticleRotationOffset; // 0x4f0
	FVector TrapParticleScale; // 0x4fc
	USGBuff* OverlapBuff; // 0x508
	char bKongmingLanternActivity : 1; // 0x510
	char bDrawProjectileLine : 1; // 0x510
	float ProjectileLineMaxDistance; // 0x514
	char bHitDestroy : 1; // 0x518
	char bStopSetNoCollision : 1; // 0x518
	char bHitMakeNoise : 1; // 0x518
	char bHitCharacterDestory : 1; // 0x518
	float AfterHitLifeTime; // 0x51c
	char bPointDamage : 1; // 0x520
	TArray<FSpawnParticle> StopSpawnParticles; // 0x528
	FName ParticleParam; // 0x538
	char bDrawDebug : 1; // 0x540
	float MaxDamage[0x4]; // 0x544
	float MinDamage[0x4]; // 0x554
	float MaxCollectionDamage; // 0x564
	float MinCollectionDamage; // 0x568
	float InnerRadius; // 0x56c
	float OuterRadius; // 0x570
	float DamageFalloff; // 0x574
	FName ProjectileFollowSocket; // 0x5c4
	TArray<FTrapOverlapInfo> OverlapInfos; // 0x5d0
	USGItem* ItemClassTemplate; // 0x600
	FVector AttachBoneMeshOffset; // 0x608
	char bHitAdjustRotation : 1; // 0x614
	char bHitSetZeroRotator : 1; // 0x614
	float MinHitThrowRandPitch; // 0x650
	float MaxHitThrowRandPitch; // 0x654
	float MinHitThrowRandYaw; // 0x658
	float MaxHitThrowRandYaw; // 0x65c
	FRotator FixHitThrowRotator; // 0x660
	float DelayDamageTimeMax; // 0x66c
	float DelayDamageTimeMin; // 0x670
	float FlyTime; // 0x674
	EWeaponType WeaponType; // 0x678
	float DamageToArmor; // 0x67c
	float DamageToSheild; // 0x680
	float DamageToWeapon; // 0x684
	float DamageToHP; // 0x688
	float DamageToStructure; // 0x68c
	float ExtraStunRatio; // 0x690
	char bStopInitializeSceneManagerState : 1; // 0x694
	char bRangeChangeVelocity : 1; // 0x694
	float RangeChangeVelocityMul; // 0x698
	char bDelayFlySetGravity : 1; // 0x69c
	float ChangedGravity; // 0x6a0
	EAnimalQualityType QualityType; // 0x6a4
	char bFixedConsumeDurable : 1; // 0x6a5
	char bCanStunTarget : 1; // 0x6a5
	FPassengerAnimsConfig PassengerAnimsConfig; // 0x6a8
	int32_t Level; // 0x6b8
	int32_t DamageIconIndex; // 0x6bc
};

struct URevolveBoundaryOperatorFactory : UObject {
	URevolveBoundaryTool* RevolveBoundaryTool; // 0x30
};

struct URewardCondition_Bool : URewardCondition {
	bool Value; // 0x50
};

struct UGlobalMap_ServerItem : UUserWidget {
	FName HuKouSignButtonName; // 0x260
	FSlateColor NormalServerNameTextColor; // 0x268
	FSlateColor SelectedServerNameTextColor; // 0x290
	float StateConfig[0x3]; // 0x2b8
	TSoftObjectPtr<UTexture2D> StateIconTexture[0x3]; // 0x2c8
	TSoftObjectPtr<UTexture2D> ServerTypeTexture[0x2]; // 0x340
	TSoftObjectPtr<UTexture2D> HoverTexture; // 0x390
	TSoftObjectPtr<UTexture2D> SelectTexture; // 0x3b8
	USGToolTipWidget* StateTipsTemplate; // 0x3e0
	USGToolTipWidget* ServerInfoTipsTemplate; // 0x3e8
	USGToolTipWidget* HuKouTipsSignTemplate; // 0x3f0
	int32_t BindServerIndex; // 0x3f8
	FOfficalSealInfo BindOfficalSealInfo; // 0x400
	char bHovered : 1; // 0x450
	char bSelected : 1; // 0x450
	char bEnabled : 1; // 0x450
	EUIServerState CurServerItemState; // 0x451
	USGUI* ParentUI; // 0x458
	UImage* ImgBg; // 0x490
	UTextBlock* TbServerName; // 0x498
	UTextBlock* TbPing; // 0x4a0
	UCanvasPanel* RoleCanvas; // 0x4a8
	UCanvasPanel* LocationCanvas; // 0x4b0
	UTextBlock* TbRoleName; // 0x4b8
	UTextBlock* TbRoleLevel; // 0x4c0
	UImage* ImgState; // 0x4c8
	UButton* BtnState; // 0x4d0
	UVerticalBox* VbMain; // 0x4d8
	UTextBlock* TbXianChengKey; // 0x4e0
	UButton* BtnHuKouSign; // 0x4e8
	UGlobalMap_ServerItemTips* ServerItemTips; // 0x4f0
};

struct ANatureController : AActor {
	UWeatherControlComponent* Component; // 0x320
	float DayTimeAtPresent; // 0x328
	float DayTimeTotal; // 0x32c
	float DayTimeStart; // 0x330
	float DayTimeEnd; // 0x334
	float DayTimeStartWhenPlay; // 0x338
	float WaterLightIntensity; // 0x33c
	float MoonMeshLightIntensity; // 0x340
	float StarMeshLightIntensity; // 0x344
	float StarDensityAttention; // 0x348
	float HighLevelCloudScatteringCoeff; // 0x34c
	float HighLevelCloudAltocumulusORCirrusPower; // 0x350
	float SunDiskIntensity; // 0x354
	float CloudShadowContrast; // 0x358
	float CurrentTemperature; // 0x35c
	float HitShakeDuration; // 0x360
	float HitShakeSpeed; // 0x364
	float FogBaseZHeight; // 0x368
	FRuntimeFloatCurve FogRelativeZHeight; // 0x370
	FLinearColor CloudColour; // 0x3f8
	float CloudOpacity; // 0x408
	float CloudWindSpeed; // 0x40c
	float StratusPower; // 0x410
	float CumulusPower; // 0x414
	float PluvialCumulusPower; // 0x418
	char bEnableWeather : 1; // 0x41c
	char bEnableDebug : 1; // 0x41c
	char bEnableDebugNatureRes : 1; // 0x41c
	int32_t CurrentDay; // 0x420
	AMatineeActor* LeaderMainLoopResource; // 0x428
	ADirectionalLight* DirectionalLight; // 0x430
	ADirectionalLight* MoonLight; // 0x438
	ADirectionalLight* LightningLight; // 0x440
	ASkyLight* SkyLight; // 0x448
	ANatureWeather* NatureWether; // 0x450
	AWindDirectionalSource* GlobalWindSource; // 0x458
	AVolumetricCloud* VolumetricCloud; // 0x460
	ASkyAtmosphere* SkyAtmosphere; // 0x468
	APostProcessVolume* GloablPostProcessVolume; // 0x470
	AExponentialHeightFog* ExponentialHeightFog; // 0x478
	AStaticMeshActor* Moon; // 0x480
	AStaticMeshActor* Star; // 0x488
	AStaticMeshActor* HighLevelCloud; // 0x490
	AWeatherVolumetricFog* WeatherVolumetricFog; // 0x498
	AWeatherSnow* WeatherSnow; // 0x4a0
	UMaterialParameterCollection* NatureMPC; // 0x4a8
	UMaterialParameterCollectionInstance* NatureMPCInst; // 0x4b0
	UMaterialParameterCollection* WaterControlMPC; // 0x4b8
	UMaterialParameterCollectionInstance* WaterControlMPCInst; // 0x4c0
	UMaterialInterface* HotWavePPMat; // 0x4c8
	UMaterialInstanceDynamic* HotWavePPMID; // 0x4d0
	UMaterialInterface* CloudShadowMat; // 0x4d8
	UMaterialInstanceDynamic* CloudShadowMatMID; // 0x4e0
	UWeatherMainLoopInterpData* BaseMainLoopInterpDataClass; // 0x4e8
	UWeatherTransInterpData* BaseTransInterpDataClass; // 0x4f0
	ALightningEmitter* LightningEmitterTemplate; // 0x4f8
	TArray<ALightningEmitter*> FarLightningEmitterTemplates; // 0x500
	float FarLightningMinInterval; // 0x510
	float FarLightningMaxInterval; // 0x514
	float FarLightningMinExtent; // 0x518
	float FarLightningMaxExtent; // 0x51c
	float FarLightningMinDistance; // 0x520
	float FarLightningMaxDistance; // 0x524
	float FarHighFrequencyWeight; // 0x528
	float FarHighFrequencyInterval; // 0x52c
	int32_t FarHighFrequencyMinTimes; // 0x530
	int32_t FarHighFrequencyMaxTimes; // 0x534
	float LightningCloudMinRadius; // 0x538
	float LightningCloudMaxRadius; // 0x53c
	float LightningCloudMaxIntensity; // 0x540
	float LightningDirLightCastShadowThreshold; // 0x544
	float LightningDirLightIntensityMultiplier; // 0x548
	USGDamageType* LightningDamageType; // 0x550
	float LightningDamageDelayTime; // 0x558
	float LightningBaseDamage; // 0x55c
	float LightningInnerRadius; // 0x560
	float LightningOuterRadius; // 0x564
	float LightningDamageFallOff; // 0x568
	UWeatherControlComponent* CurrentWeatherControlComponent; // 0x570
	UWeatherControlComponent* PrevWeatherControlComponent; // 0x578
	AActor* GlobalActors[0x10]; // 0x620
	TArray<ASGStructureItemContainer*> AgainstEnvironmentStructures; // 0x6a8
	TArray<FBox> AgainstEnvironmentVolumesBoxes; // 0x6b8
	FWeatherLightningEvent LightningEvents[0x3]; // 0x728
	TArray<ANatureWeatherAreaVolume*> ControlVolumes; // 0x7a0
	TArray<FBox> ControlVolumesBoundingBoxes; // 0x7b0
	TArray<ANatureEnvironmentVolume*> EnvironmentVolumes; // 0x7c0
	TArray<FBox> EnvironmentVolumesBoxes; // 0x7d0
};

struct USGGameDataAllQuest : UObject {
	UDataTable* GuideQuestTable; // 0x28
	UDataTable* GuildQuestTable; // 0x30
	UDataTable* ActivityQuestTable; // 0x38
	UDataTable* SeasonQuestTable; // 0x40
	UDataTable* SeasonWeekQuestTable; // 0x48
	TMap<int32_t, FQuestList> QuestGroups; // 0x50
	UDataTable* QuestTextTable; // 0xa0
	FText QuestStateText[0x3]; // 0xa8
	FText QuestObjectText[0x41]; // 0xf0
	FText QuestRewardText[0xb]; // 0x708
	FText QuestNofityText[0x2]; // 0x810
	int32_t MaxShowTraceNum; // 0x840
};

struct UMeshConstraintProperties : UInteractiveToolPropertySet {
	bool bPreserveSharpEdges; // 0x60
	EMeshBoundaryConstraint MeshBoundaryConstraint; // 0x61
	EGroupBoundaryConstraint GroupBoundaryConstraint; // 0x62
	EMaterialBoundaryConstraint MaterialBoundaryConstraint; // 0x63
	bool bPreventNormalFlips; // 0x64
};

struct UMaterialExpressionScalarParameter : UMaterialExpressionParameter {
	float DefaultValue; // 0x58
	bool bUseCustomPrimitiveData; // 0x5c
	char PrimitiveDataIndex; // 0x5d
};

struct UMaterialExpressionInverseLinearInterpolate : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	FExpressionInput Value; // 0x68
	float ConstA; // 0x7c
	float ConstB; // 0x80
	float ConstValue; // 0x84
	bool bClampResult; // 0x88
};

struct USpinBoxWidgetStyle : USlateWidgetStyleContainerBase {
	FSpinBoxStyle SpinBoxStyle; // 0x30
};

struct UGameplayModMagnitudeCalculation : UGameplayEffectCalculation {
	bool bAllowNonNetAuthorityDependencyRegistration; // 0x38
};

struct UUI_ChatExpandBtn : UUI_PicBtn {
	TSoftObjectPtr<UTexture2D> NormalIconHover; // 0x3f8
	TSoftObjectPtr<UTexture2D> ActiveIconHover; // 0x420
};

struct UChaosClothConfig : UClothConfigCommon {
	EClothMassMode MassMode; // 0x28
	float UniformMass; // 0x2c
	float TotalMass; // 0x30
	float Density; // 0x34
	float MinPerParticleMass; // 0x38
	float EdgeStiffness; // 0x3c
	float BendingStiffness; // 0x40
	bool bUseBendingElements; // 0x44
	float AreaStiffness; // 0x48
	float VolumeStiffness; // 0x4c
	float StrainLimitingStiffness; // 0x50
	float LimitScale; // 0x54
	EChaosClothTetherMode TetherMode; // 0x58
	bool bUseGeodesicDistance; // 0x59
	float ShapeTargetStiffness; // 0x5c
	float CollisionThickness; // 0x60
	float FrictionCoefficient; // 0x64
	bool bUseSelfCollisions; // 0x68
	float SelfCollisionThickness; // 0x6c
	bool bUseLegacyBackstop; // 0x70
	float DampingCoefficient; // 0x74
	bool bUsePointBasedWindModel; // 0x78
	float DragCoefficient; // 0x7c
	float LiftCoefficient; // 0x80
	bool bUseGravityOverride; // 0x84
	float GravityScale; // 0x88
	FVector Gravity; // 0x8c
	float AnimDriveSpringStiffness; // 0x98
	FVector LinearVelocityScale; // 0x9c
	float AngularVelocityScale; // 0xa8
	bool bUseTetrahedralConstraints; // 0xac
	bool bUseThinShellVolumeConstraints; // 0xad
	bool bUseContinuousCollisionDetection; // 0xae
};

struct UButtonWidgetStyle : USlateWidgetStyleContainerBase {
	FButtonStyle ButtonStyle; // 0x30
};

struct UMoviePlayerSettings : UObject {
	bool bWaitForMoviesToComplete; // 0x28
	bool bMoviesAreSkippable; // 0x29
	TArray<FString> StartupMovies; // 0x30
};

struct UAITask : UGameplayTask {
	AAIController* OwnerController; // 0x68
};

struct UMovementComponent : UActorComponent {
	USceneComponent* UpdatedComponent; // 0xc0
	UPrimitiveComponent* UpdatedPrimitive; // 0xc8
	FVector Velocity; // 0xd4
	FVector PlaneConstraintNormal; // 0xe0
	FVector PlaneConstraintOrigin; // 0xec
	char bUpdateOnlyIfRendered : 1; // 0xf8
	char bAutoUpdateTickRegistration : 1; // 0xf8
	char bTickBeforeOwner : 1; // 0xf8
	char bAutoRegisterUpdatedComponent : 1; // 0xf8
	char bConstrainToPlane : 1; // 0xf8
	char bSnapToPlaneAtStart : 1; // 0xf8
	char bAutoRegisterPhysicsVolumeUpdates : 1; // 0xf8
	char bComponentShouldUpdatePhysicsVolume : 1; // 0xf8
	EPlaneConstraintAxisSetting PlaneConstraintAxisSetting; // 0xfb
};

struct UN_CraftPanelTips : USGToolTipWidget {
	UVerticalBox* MainVerticalBox; // 0x288
	UImage* ItemIcon; // 0x290
	UTextBlock* TextName; // 0x298
	UTextBlock* TbWeaponType; // 0x2a0
	UVerticalBox* VbBase; // 0x2a8
	UCanvasPanel* CraftPanel; // 0x2b0
	UVerticalBox* CraftResouceVertical; // 0x2b8
	UToolTipsItem* DescriptionTipsItem; // 0x2c0
	char bOnlyShowStepPanel : 1; // 0x2c8
	UCanvasPanel* StepPanel; // 0x2d0
	UVerticalBox* StepResouceVertical; // 0x2d8
	TWeakObjectPtr<UN_InventorySlot> MysponsorWidget; // 0x2e0
	TWeakObjectPtr<USGInventoryComponent> BindInventory; // 0x2e8
	TWeakObjectPtr<USGItem> BindItem; // 0x2f0
	UToolTipsItem* ToolTipsItemTempalte; // 0x2f8
	UN_CraftPanelTipsSlot* ResourceItemTempalte; // 0x300
	FText WeaponSkillTypeText[0x8]; // 0x308
	FText WeaponTypeText[0xd]; // 0x3c8
	FText AmmoTypeText[0xd]; // 0x500
	float ToolTipsDescriptionTextWrapDelta; // 0x63c
};

struct UCharacterInfoHUD : UActorInfoHUD {
	UTextBlock* CorpseText; // 0x278
	UImage* bg; // 0x280
	TWeakObjectPtr<ABaseCharacter> BindCharacter; // 0x288
};

struct UAnimNotifyState_TimedParticleEffect : UAnimNotifyState {
	UParticleSystem* PSTemplate; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct UBattleKillEventSlot : USGUI {
	UHorizontalBox* HobEventRow; // 0x2d8
	UTextBlock* TbKillPlayerName; // 0x2e0
	UTextBlock* TbBeKillPlayerName; // 0x2e8
	UTextBlock* TbConnect; // 0x2f0
	UTextBlock* TbBeKillerName; // 0x2f8
	UTextBlock* TbExtra; // 0x300
	UImage* ImgDamageIcon; // 0x308
	UCanvasPanel* DamageIconPanel; // 0x310
	UImage* ImgStateIcon; // 0x318
	UCanvasPanel* StatePanel; // 0x320
	FLinearColor AttackGroupColor; // 0x328
	FLinearColor DefenseGroupColor; // 0x338
	TSoftObjectPtr<UTexture2D> IconDeadState; // 0x348
	TSoftObjectPtr<UTexture2D> IconWillDeadState; // 0x370
	float LeftShowTimeSec; // 0x398
};

struct UWBP_FrameLimitSettingEditableTextblockItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UEditableText* EtbSetting; // 0x370
	UImage* ImgSettingBg; // 0x378
	UTextBlock* TbTitle; // 0x380
	FText Title; // 0x388
	FText LastEditText; // 0x3a0
};

struct AGameplayAbilityTargetActor : AActor {
	bool ShouldProduceTargetDataOnServer; // 0x310
	FGameplayAbilityTargetingLocationInfo StartLocation; // 0x320
	APlayerController* MasterPC; // 0x3c0
	UGameplayAbility* OwningAbility; // 0x3c8
	bool bDestroyOnConfirmation; // 0x3d0
	AActor* SourceActor; // 0x3d8
	FWorldReticleParameters ReticleParams; // 0x3e0
	AGameplayAbilityWorldReticle* ReticleClass; // 0x3f0
	FGameplayTargetDataFilterHandle Filter; // 0x3f8
	bool bDebug; // 0x408
	UAbilitySystemComponent* GenericDelegateBoundASC; // 0x420
};

struct UWBP_DLSSQualitySettingComboBoxItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UCanvasPanel* CanvasPanel_53; // 0x370
	UComboBoxString* SettingComboBox; // 0x378
	UTextBlock* TbTitle; // 0x380
	FText Title; // 0x388
};

struct APlayerState : AInfo {
	float Score; // 0x310
	int32_t PlayerId; // 0x314
	char Ping; // 0x318
	char bShouldUpdateReplicatedPing : 1; // 0x31a
	char bIsSpectator : 1; // 0x31a
	char bOnlySpectator : 1; // 0x31a
	char bIsABot : 1; // 0x31a
	char bIsInactive : 1; // 0x31a
	char bFromPreviousLevel : 1; // 0x31a
	int32_t StartTime; // 0x31c
	ULocalMessage* EngineMessageClass; // 0x320
	FString SavedNetworkAddress; // 0x330
	FUniqueNetIdRepl UniqueId; // 0x340
	APawn* PawnPrivate; // 0x370
	FString PlayerNamePrivate; // 0x3f0
};

struct UParticleModuleVectorFieldScaleOverLife : UParticleModuleVectorFieldBase {
	UDistributionFloat* VectorFieldScaleOverLife; // 0x30
	FRawDistributionFloat VectorFieldScaleOverLifeRaw; // 0x38
};

struct UWBP_SystemSettingCheckBox_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UButton* BtnTitle; // 0x370
	UCheckBox* CbSetting; // 0x378
	USizeBox* SBMain; // 0x380
	UTextBlock* TbTitle; // 0x388
	FText Title; // 0x390
	FMulticastInlineDelegate OnCheckStateChanged; // 0x3a8
};

struct UBTTask_FinishWithResult : UBTTaskNode {
	EBTNodeResult Result; // 0x70
};

struct UFormationPanel : UUserWidget {
	UHorizontalBox* FormationHorizontalBox; // 0x260
};

struct UVRNotificationsComponent : UActorComponent {
	FMulticastInlineDelegate HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate; // 0xc0
	FMulticastInlineDelegate HMDTrackingInitializedDelegate; // 0xd0
	FMulticastInlineDelegate HMDRecenteredDelegate; // 0xe0
	FMulticastInlineDelegate HMDLostDelegate; // 0xf0
	FMulticastInlineDelegate HMDReconnectedDelegate; // 0x100
	FMulticastInlineDelegate HMDConnectCanceledDelegate; // 0x110
	FMulticastInlineDelegate HMDPutOnHeadDelegate; // 0x120
	FMulticastInlineDelegate HMDRemovedFromHeadDelegate; // 0x130
	FMulticastInlineDelegate VRControllerRecenteredDelegate; // 0x140
};

struct UN_OccupyItemSlot : UN_InventorySlot {
	UTextBlock* OccupyItemNumText; // 0xf80
	FSlateColor LackResouseTextColor; // 0xf88
	FSlateColor UnLackResouseTextColor; // 0xfb0
};

struct USGGameDataAllGeneralNpc : UObject {
	TArray<ASGGeneralCharacter*> CheatGeneralNPC; // 0x28
};

struct UStableSelectTrainerSlot : UUserWidget {
	char bIsSystemTrainerSlot : 1; // 0x260
	ESystemTrainerType SystemTrainerType; // 0x261
	FText SystemTrainerTypeText[0x3]; // 0x268
	TSoftObjectPtr<UTexture2D> SystemTrainerQualityTexture[0x3]; // 0x2b0
	TSoftObjectPtr<UTexture2D> SystemTrainerSpecialTypeTexture[0x3]; // 0x328
	FText SystemTrainerName; // 0x3a0
	TSoftObjectPtr<UTexture2D> BGBorder_NormalTexture; // 0x3b8
	TSoftObjectPtr<UTexture2D> BGBorder_HoverTexture; // 0x3e0
	TSoftObjectPtr<UTexture2D> BGBorder_SelectTexture; // 0x408
	TSoftObjectPtr<UTexture2D> TrainerQualityTexture[0x6]; // 0x430
	TSoftObjectPtr<UTexture2D> TrainerSpecialTypeTexture[0x4]; // 0x520
	UBorder* BGBorder; // 0x5c0
	UImage* TrainerQualityBG; // 0x5c8
	UImage* TrainerSpecialTypeBG; // 0x5d0
	UImage* TrainerIconImg; // 0x5d8
	UTextBlock* TrainerNameText; // 0x5e0
	UTextBlock* TrainerLevelText; // 0x5e8
	UHorizontalBox* TrainerTameSkillExpHB; // 0x5f0
	UTextBlock* TrainerTameSkillExpText; // 0x5f8
	UBorder* FGBorder; // 0x600
	FText StatusTipText; // 0x6f8
};

struct UParticleModuleMeshRotation : UParticleModuleRotationBase {
	FRawDistributionVector StartRotation; // 0x30
	char bInheritParent : 1; // 0x78
};

struct UAchievementDamageMultiplyItem : UUserWidget {
	UImage* ImgIcon; // 0x260
	UTextBlock* TbName; // 0x268
	UTextBlock* TbDamageMultiply; // 0x270
};

struct ULeaderboardQueryCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct USGCheatManager : UCheatManager {
	bool bGameModeCheatManager; // 0x78
	TArray<ASGGeneralCharacter*> GeneralCharacterClass; // 0x80
};

struct ASGPlayerCharacter : ASGCharacter {
	float ChangeSeatCD; // 0x11120
	float LastChangeSeatTimeSecond; // 0x11124
	TArray<USGItem*> FavoriteFood; // 0x11128
	int32_t CheckTimes; // 0x11138
	float RidingDistance; // 0x1113c
	TWeakObjectPtr<ASGPlayerController> OriginalPlayerController; // 0x11150
	USGVOIPTalker* VOIPTalkerComponent; // 0x11158
	int32_t CharacterOreMoveDistance; // 0x11168
	FVector LastOreSearchLocation; // 0x1116c
	FTimerHandle NotifyOccupyHandle; // 0x11178
	int32_t NotifyOccupyInterval; // 0x11180
	int32_t SearchOccupyStructureInterval; // 0x11184
	double LastSearchOccupyStructureTime; // 0x11188
	TArray<FOccupyBuffInfo> OccupyBuffList; // 0x11190
	FOccupySellInfo PlayerOccupySellData; // 0x111b0
	AActor* SearchOreClientActorTemplate; // 0x111c0
	FHuangLiUnlockData HuangLiUnlockData; // 0x111d0
	FString TitleID; // 0x11210
	TArray<FAchievementDamageMultiply> AchievementDamageMultiply; // 0x11230
	TArray<FMiniMapData> MiniMapData; // 0x11240
	float CheckMiniMapPOIInterval; // 0x11250
	double LastCheckMiniMapPOITime; // 0x11258
	TArray<FString> ThisMapUnlockedStaticMiniMap; // 0x11260
	TMap<FString, FStaticMiniMapIDArray> UnlockedStaticMiniMap; // 0x11270
	bool bNeedSetUnlockedMiniMapPOINetDirty; // 0x112d0
	int32_t CheckStaticMiniMapIndex; // 0x112d4
	int32_t MaxCheckStaticMiniMapNum; // 0x112d8
	TArray<FMiniMapMarkData> ThisMapMiniMapMarks; // 0x112f0
	FPlayerQuestData PlayerQuestData; // 0x11330
	int32_t HonorPoint; // 0x11c30
	int32_t JueWeiLevel; // 0x11c34
	int32_t LastNewsJueWeiLevel; // 0x11c38
	int32_t ViewGeneral; // 0x11c3c
	char bOpenPVP : 1; // 0x11c40
	FDateTime NextCrossServerTime; // 0x11c48
	int32_t SeasonIndex; // 0x11c50
	int32_t SeasonWeekIndex; // 0x11c54
	int32_t GongXunPoint; // 0x11c58
	int32_t TodayTransActivityPoint; // 0x11c5c
	int32_t TransActivityPointDay; // 0x11c60
	TArray<FBoughtGuildItemData> BoughtGuildItemDatas; // 0x11c68
	float AnimalRecruitAddLife; // 0x11ce4
	float AnimalRebornTimeMultiAdd; // 0x11ce8
	float RideTameMaxRunawayAdd; // 0x11cec
	float RideTameFeedTimeAdd; // 0x11cf0
	float MaxHorseTameNumAdd; // 0x11cf4
	float HorsePregnancyChanceAdd; // 0x11cf8
	float HorseHarmfulVariationChance; // 0x11cfc
	TArray<ANpcVolume*> OverlappedNpcVolume; // 0x11d00
	char bShowNpcSpawnInfo : 1; // 0x11d10
	int32_t ShowDetailNpcSpawnInfoIndex; // 0x11d14
	double LastGuildEventCheckTime; // 0x11d38
	int32_t MaxSellItemNum; // 0x11d40
	int32_t MaxSellGeneralNum; // 0x11d44
	int32_t MaxSellHorseNum; // 0x11d48
	int32_t MaxBuyItemNum; // 0x11d4c
	TArray<FMarketSellGoodsInfo> SellGoodsInfo; // 0x11d58
	int32_t UpdataGoodsInfoStep; // 0x11d68
	TArray<int32_t> ActivatedDLCList; // 0x11d70
	TArray<int32_t> AppearanceKitIndexArray; // 0x11d80
	TArray<int32_t> AppearanceExpiredKitIndexArray; // 0x11d90
	int32_t AppearanceKitIndex; // 0x11da0
	TArray<int32_t> FashionKitIndexArray; // 0x11da8
	TArray<int32_t> FashionKitExpiredIndexArray; // 0x11db8
	int32_t FashionKitIndex; // 0x11dc8
	TArray<int32_t> PlayerShowSettingData; // 0x11dd0
	TArray<int32_t> UnlockedPlayerShowData; // 0x11de0
	TArray<int32_t> UnlockedGIColors; // 0x11df0
	TArray<int32_t> UnlockedGITextures; // 0x11e00
	int32_t CheatAdminLevel; // 0x11e10
	char bShowGMBillBoard : 1; // 0x11e14
	TArray<FStaticMiniMapPOIData> ThisMapUnlockStaticMiniMapPOIDatas; // 0x11e18
	int32_t SkillMasteryGuideStep; // 0x11e28
	int32_t LastClearYuanDanCountDay; // 0x11e2c
	int32_t YuanDanCount; // 0x11e30
};

struct ASGStructureTransportMachine : ASGStructure {
	ETransportType TransportType; // 0xb98
	TArray<ASGPlayerStart*> SubPlayerStartArray; // 0xba0
	char bIsGMUseage : 1; // 0xbb0
	FGuid TransportGuid; // 0xbb4
};

struct UUI_N_ShopItemHot : UUserWidget {
	UBorder* ActiveBorder; // 0x260
	UImage* ItemImg; // 0x268
	UBorder* TagBorder; // 0x270
	UTextBlock* TagText; // 0x278
	UTextBlock* ItemNameText; // 0x280
	UTextBlock* ItemIntroText; // 0x288
	UWidgetSwitcher* BottomSwitcher; // 0x290
	UTextBlock* NowPriceText; // 0x298
	UTextBlock* OldPriceText; // 0x2a0
	UTextBlock* NoPriceText; // 0x2a8
	UImage* CapitalImage; // 0x2b0
	FLinearColor BorderColor; // 0x2b8
	FLinearColor DiscountColor; // 0x2c8
	FLinearColor CommonColor; // 0x2d8
	UTexture2D* iconGold; // 0x2e8
	UTexture2D* iconSilver; // 0x2f0
	UTexture2D* iconCopper; // 0x2f8
};

struct UForceFeedbackEffect : UObject {
	TArray<FForceFeedbackChannelDetails> ChannelDetails; // 0x28
	float Duration; // 0x38
};

struct UCSGMeshesTool : UBaseCreateFromSelectedTool {
	UCSGMeshesToolProperties* CSGProperties; // 0xf0
	ULineSetComponent* DrawnLineSet; // 0x108
};

struct UMiniMapPOI_GuildStructureBanner : UMiniMapPOI {
	TSoftObjectPtr<UTexture2D> DifferentGuildInMiniMapTexture; // 0x390
	FLinearColor DifferentGuildInMiniMapColor; // 0x3b8
	TSoftObjectPtr<UTexture2D> DifferentGuildOutOfMiniMapTexture; // 0x3c8
	FLinearColor DifferentGuildOutOfMiniMapColor; // 0x3f0
};

struct USkillInfoSlot : UUserWidget {
	UImage* ImageIcon; // 0x260
	UImage* ImageBorder; // 0x268
	UTextBlock* TextBlockText; // 0x270
};

struct UBTService : UBTAuxiliaryNode {
	float Interval; // 0x60
	float RandomDeviation; // 0x64
	char bCallTickOnSearchStart : 1; // 0x68
	char bRestartTimerOnEachActivation : 1; // 0x68
};

struct UMovieSceneMaterialTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> Sections; // 0x78
};

struct UDraggedVehiclePerk : UUserWidget {
	UImage* PerkIcon; // 0x260
};

struct ANavigationObjectBase : AActor {
	UCapsuleComponent* CapsuleComponent; // 0x318
	UBillboardComponent* GoodSprite; // 0x320
	UBillboardComponent* BadSprite; // 0x328
	char bIsPIEPlayerStart : 1; // 0x330
};

struct UConnectionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UAnimNotify_PlaySound : UAnimNotify {
	USoundBase* Sound; // 0x38
	float VolumeMultiplier; // 0x40
	float PitchMultiplier; // 0x44
	char bFollow : 1; // 0x48
	FName AttachName; // 0x4c
};

struct USynthSamplePlayer : USynthComponent {
	USoundWave* SoundWave; // 0x6d0
	FMulticastInlineDelegate OnSampleLoaded; // 0x6d8
	FMulticastInlineDelegate OnSamplePlaybackProgress; // 0x6e8
};

struct UAchievementTypePanel : UUserWidget {
	UAchievementTypeItem* AchievementTypeItemTemplate; // 0x260
	UGridPanel* AchievementTypeGrid; // 0x268
	TArray<UAchievementTypeItem*> ItemList; // 0x280
	UAchievementTypeItem* SelectAchievementTypeItem; // 0x290
};

struct UGameRecordTrack : UWidget {
	FSlateBrush BGBrush; // 0x108
	FSlateBrush SliderBrush; // 0x190
	float KeyBGHeight; // 0x218
	FSlateBrush KeyBGBrush; // 0x220
	FVector2D KeySize; // 0x2a8
	FSlateBrush KeyBrush; // 0x2b0
	FSlateBrush HitKeyBrush; // 0x338
	FVector2D ViewMinSize; // 0x3c0
	FSlateBrush TangentBrush; // 0x3c8
	FSlateBrush MarqueeBrush; // 0x450
	FMulticastInlineDelegate OnKeyChanged; // 0x4d8
	FMulticastInlineDelegate OnEndPlay; // 0x4e8
	FMulticastInlineDelegate OnSelectKeyChanged; // 0x4f8
	FMulticastInlineDelegate OnSelectKeyDataChanged; // 0x508
};

struct UJunSelectorItem : UUserWidget {
	TSoftObjectPtr<UTexture2D> NormalTexture; // 0x260
	FLinearColor NormalColor; // 0x288
	TSoftObjectPtr<UTexture2D> HoverTexture; // 0x298
	FLinearColor HoverColor; // 0x2c0
	TSoftObjectPtr<UTexture2D> SelectTexture; // 0x2d0
	FLinearColor SelectColor; // 0x2f8
	FLinearColor NormalTextColor; // 0x308
	FLinearColor HoverTextColor; // 0x318
	FLinearColor SelectTextColor; // 0x328
	float RollingSubtitlesSpeed; // 0x338
	char bHovered : 1; // 0x33c
	char bSelected : 1; // 0x33c
	int32_t BindJunId; // 0x340
	char bIsNewJun : 1; // 0x344
	UCanvasPanelSlot* JunNameSlot; // 0x348
	float MaxJunNameLength; // 0x350
	float JunNameLength; // 0x354
	UButton* BtnBg; // 0x368
	UTextBlock* TbJunName; // 0x370
	UImage* ImgBg; // 0x378
	UCanvasPanel* JunNameCanvas; // 0x380
	UImage* ImgNewServer; // 0x388
	UImage* ImgSite; // 0x390
};

struct UGraphNodeContextMenuContext : UObject {
	UBlueprint* Blueprint; // 0x28
	UEdGraph* Graph; // 0x30
	UEdGraphNode* Node; // 0x38
	bool bIsDebugging; // 0x48
};

struct UBTTask_SetTagCooldown : UBTTaskNode {
	FGameplayTag CooldownTag; // 0x70
	bool bAddToExistingDuration; // 0x78
	float CooldownDuration; // 0x7c
};

struct UUI_GlobalMap : USGUI {
	UUI_GenericConfirmationDialog* EnterServerConfirmationDialogClass; // 0x2d8
	UHelpTipsSlot* HelpSlotClass; // 0x2e0
	FHelpTips HelpTips; // 0x2e8
	FVector4 HelpTipsSlotPadding; // 0x300
	AGlobalMapCameraActor* GlobalMapCameraTemplate; // 0x310
	UUniformGridPanel* UGPGlobalMapFilter; // 0x318
	UJunDetailWidget* JunDetail; // 0x320
	UUI_MapList* EventServer; // 0x328
	UButton* BtnFastEnter; // 0x330
	UButton* BtnRefresh; // 0x338
	UButton* BtnReturnToLobby; // 0x340
	UTextBlock* TbFastEnterServer; // 0x348
	UButton* BtnServerList; // 0x350
	UHorizontalBox* HbHelpTips; // 0x358
	ULenovoQueryBox* XianChengLenovoQueryBox; // 0x360
	UGlobalMapCameraActiveArea* CameraActiveArea; // 0x368
	UJunSelectorWidget* JunSelector; // 0x370
	AGlobalMapActor* SelectJunActor; // 0x378
	int32_t InitSelectServerInfoIndex; // 0x380
	FDateTime LastRefreshTime; // 0x388
	FVector2D MousePosition; // 0x390
	ASGPlayerController* SGPlayerController; // 0x398
	TArray<FGlobalMapXianChengOption> XianChengOptions; // 0x3a0
	AGlobalMapActor* CurrentToolTipGlobalMapActor; // 0x3b0
	TMap<int32_t, FGlobalMapActorTipsDataArray> CurrentGlobalMapGroupToolTips; // 0x3b8
	TMap<int32_t, FGlobalMapActorTipsDataArray> CurrentGlobalMapGroupStableToolTips; // 0x408
};

struct USmoothBrushOpProps : UBaseSmoothBrushOpProps {
	float Strength; // 0x60
	float Falloff; // 0x64
	bool bPreserveUVFlow; // 0x68
};

struct UVoiceRadio : UUI_RadioButton {
	UTextBlock* TbTitle; // 0x540
	UButton* BtnBg; // 0x548
};

struct UNavArea : UNavAreaBase {
	float DefaultCost; // 0x30
	float FixedAreaEnteringCost; // 0x34
	FColor DrawColor; // 0x38
	FNavAgentSelector SupportedAgents; // 0x3c
	char bSupportsAgent0 : 1; // 0x40
	char bSupportsAgent1 : 1; // 0x40
	char bSupportsAgent2 : 1; // 0x40
	char bSupportsAgent3 : 1; // 0x40
	char bSupportsAgent4 : 1; // 0x40
	char bSupportsAgent5 : 1; // 0x40
	char bSupportsAgent6 : 1; // 0x40
	char bSupportsAgent7 : 1; // 0x40
	char bSupportsAgent8 : 1; // 0x41
	char bSupportsAgent9 : 1; // 0x41
	char bSupportsAgent10 : 1; // 0x41
	char bSupportsAgent11 : 1; // 0x41
	char bSupportsAgent12 : 1; // 0x41
	char bSupportsAgent13 : 1; // 0x41
	char bSupportsAgent14 : 1; // 0x41
	char bSupportsAgent15 : 1; // 0x41
};

struct UUI_N_Shop_BannerStateBtn : UUI_PicBtn {
	int32_t BannerIndex; // 0x3f8
	TWeakObjectPtr<UUI_N_ShopBanner> ParentWptr; // 0x3fc
};

struct UAudioSettings : UDeveloperSettings {
	FSoftObjectPath DefaultSoundClassName; // 0x38
	FSoftObjectPath DefaultMediaSoundClassName; // 0x50
	FSoftObjectPath DefaultSoundConcurrencyName; // 0x68
	FSoftObjectPath DefaultBaseSoundMix; // 0x80
	FSoftObjectPath VoiPSoundClass; // 0x98
	FSoftObjectPath MasterSubmix; // 0xb0
	FSoftObjectPath ReverbSubmix; // 0xc8
	FSoftObjectPath EQSubmix; // 0xe0
	EVoiceSampleRate VoiPSampleRate; // 0xf8
	float DefaultReverbSendLevel; // 0xfc
	int32_t MaximumConcurrentStreams; // 0x100
	float GlobalMinPitchScale; // 0x104
	float GlobalMaxPitchScale; // 0x108
	TArray<FAudioQualitySettings> QualityLevels; // 0x110
	char bAllowPlayWhenSilent : 1; // 0x120
	char bDisableMasterEQ : 1; // 0x120
	char bAllowCenterChannel3DPanning : 1; // 0x120
	uint32_t NumStoppingSources; // 0x124
	EPanningMethod PanningMethod; // 0x128
	EMonoChannelUpmixMethod MonoChannelUpmixMethod; // 0x129
	FString DialogueFilenameFormat; // 0x130
};

struct UNavAreaMeta_SwitchByAgent : UNavAreaMeta {
	UNavArea* Agent0Area; // 0x48
	UNavArea* Agent1Area; // 0x50
	UNavArea* Agent2Area; // 0x58
	UNavArea* Agent3Area; // 0x60
	UNavArea* Agent4Area; // 0x68
	UNavArea* Agent5Area; // 0x70
	UNavArea* Agent6Area; // 0x78
	UNavArea* Agent7Area; // 0x80
	UNavArea* Agent8Area; // 0x88
	UNavArea* Agent9Area; // 0x90
	UNavArea* Agent10Area; // 0x98
	UNavArea* Agent11Area; // 0xa0
	UNavArea* Agent12Area; // 0xa8
	UNavArea* Agent13Area; // 0xb0
	UNavArea* Agent14Area; // 0xb8
	UNavArea* Agent15Area; // 0xc0
};

struct URemoveOccludedTrianglesToolProperties : UInteractiveToolPropertySet {
	EOcclusionCalculationUIMode OcclusionTestMethod; // 0x60
	EOcclusionTriangleSamplingUIMode TriangleSampling; // 0x61
	double WindingIsoValue; // 0x68
	int32_t AddRandomRays; // 0x70
	int32_t AddTriangleSamples; // 0x74
	bool bOnlySelfOcclude; // 0x78
};

struct UFlagImageTipSlot : UUserWidget {
	UImage* ItemImage; // 0x260
	UTextBlock* ItemNameText; // 0x268
	UTextBlock* AmountDivisionText; // 0x270
	UTextBlock* ItemAmountText; // 0x278
	UTextBlock* NeedAmountText; // 0x280
	FLinearColor EnoughColor; // 0x288
	FLinearColor NotEnoughColor; // 0x298
};

struct UMovieSceneCameraShakeSourceShakeSection : UMovieSceneSection {
	FMovieSceneCameraShakeSectionData ShakeData; // 0xe8
};

struct USoundNodeWaveParam : USoundNode {
	FName WaveParameterName; // 0x48
};

struct UTexture2DArray : UTexture {
	TextureAddress AddressX; // 0x130
	TextureAddress AddressY; // 0x131
	TextureAddress AddressZ; // 0x132
};

struct UCurveFloat : UCurveBase {
	FRichCurve FloatCurve; // 0x30
	bool bIsEventCurve; // 0xb0
};

struct UN_RemoteFunctionSlot : UUserWidget {
	TWeakObjectPtr<USGUI> RootUI; // 0x260
	TWeakObjectPtr<UUserWidget> ParentUI; // 0x268
	TWeakObjectPtr<USGInventoryComponent> BindInventory; // 0x270
	UUniformGridPanel* ItemGrid; // 0x278
	UButton* AcceptButton; // 0x280
	UTextBlock* EnoughText; // 0x288
	FText ShowEnoughtText; // 0x290
	FText ShowNotEnoughText; // 0x2a8
	FLinearColor EnoughColor; // 0x2c0
	FLinearColor NotEnoughColor; // 0x2d0
	UGenericConfirmationCheckItemSlot* CheckItemSlotTemplate; // 0x2e0
	TArray<UGenericConfirmationCheckItemSlot*> CheckItemList; // 0x2e8
	float SlotWidth; // 0x2f8
	float SlotHeight; // 0x2fc
	int32_t SlotFontSize; // 0x300
	UButton* CancelButton; // 0x308
};

struct UDialogueWave : UObject {
	char bMature : 1; // 0x28
	char bOverride_SubtitleOverride : 1; // 0x28
	FString SpokenText; // 0x30
	FString SubtitleOverride; // 0x40
	TArray<FDialogueContextMapping> ContextMappings; // 0x50
	FGuid LocalizationGUID; // 0x60
};

struct UQuickHelpSlot : UUserWidget {
	UBorder* QuickSloBorder; // 0x260
	UTextBlock* QuickSlotText; // 0x268
	UTextBlock* QuickText; // 0x270
	EInventoryQuickInstructions QuickType; // 0x278
	FName ActionName[0x5]; // 0x27c
	FText ActionText[0x5]; // 0x2a8
};

struct USGToolTipsBuff : USGToolTipWidget {
	UTextBlock* TbDescription; // 0x288
};

struct UParticleModulePivotOffset : UParticleModuleLocationBase {
	FVector2D PivotOffset; // 0x30
};

struct ULevelStreamingDynamic : ULevelStreaming {
	char bInitiallyLoaded : 1; // 0x148
	char bInitiallyVisible : 1; // 0x148
};

struct UDamageType : UObject {
	char bCausedByWorld : 1; // 0x28
	char bScaleMomentumByMass : 1; // 0x28
	char bRadialDamageVelChange : 1; // 0x28
	float DamageImpulse; // 0x2c
	float DestructibleImpulse; // 0x30
	float DestructibleDamageSpreadScale; // 0x34
	float DamageFalloff; // 0x38
};

struct UGameplayCueNotify_Static : UObject {
	FGameplayTag GameplayCueTag; // 0x28
	FName GameplayCueName; // 0x30
	bool IsOverride; // 0x38
};

struct UUI_OneMail : UUserWidget {
	UTextBlock* TitleText; // 0x260
	UTextBlock* DateText; // 0x268
	UImage* ReadImage; // 0x270
	UImage* AttachImage; // 0x278
	UBorder* OneMailBorder; // 0x280
	UButton* OneMailButton; // 0x288
	TSoftObjectPtr<UTexture2D> BGImageNormal; // 0x290
	TSoftObjectPtr<UTexture2D> BGImageNormalRead; // 0x2b8
	TSoftObjectPtr<UTexture2D> BGImageHovered; // 0x2e0
	TSoftObjectPtr<UTexture2D> BGImagePressed; // 0x308
	TSoftObjectPtr<UTexture2D> BGImageDisabled; // 0x330
	TSoftObjectPtr<UTexture2D> ReadImageNormal; // 0x358
	TSoftObjectPtr<UTexture2D> ReadImageUsed; // 0x380
	UUI_MainMail* MainMailUI; // 0x3a8
};

struct UWaterWavesAsset : UObject {
	UWaterWaves* WaterWaves; // 0x28
};

struct UUI_GuildGroup : USGUI {
	UTextBlock* PlayerNameText; // 0x2d8
	UTextBlock* PlayerRankText; // 0x2e0
	UVerticalBox* GroupBox; // 0x2e8
	UButton* EscButton; // 0x2f0
	UGuildGroupSlot* GuildGroupSlotClass; // 0x2f8
};

struct ASkyLight : AInfo {
	USkyLightComponent* LightComponent; // 0x310
	char bEnabled : 1; // 0x318
};

struct UGameCharacterQuestObject : UUserWidget {
	UTextBlock* ObjectDescText; // 0x260
	UImage* ObjectStateImage; // 0x268
	UWidgetAnimation* CompleteAnim; // 0x270
	FLinearColor CompleteColor; // 0x278
	FLinearColor UnCompleteColor; // 0x288
	float AnimPlaySpeed; // 0x298
	FSlateFontInfo TitleFont; // 0x2a0
	FSlateFontInfo ObjectFont; // 0x2f8
};

struct USpacer : UWidget {
	FVector2D Size; // 0x108
};

struct UPhysicalAnimationComponent : UActorComponent {
	float StrengthMultiplyer; // 0xc0
	USkeletalMeshComponent* SkeletalMeshComponent; // 0xc8
};

struct UMovieSceneBuiltInEasingFunction : UObject {
	EMovieSceneBuiltInEasing Type; // 0x30
};

struct UHoleFillStatisticsProperties : UInteractiveToolPropertySet {
	FString InitialHoles; // 0x60
	FString SelectedHoles; // 0x70
	FString SuccessfulFills; // 0x80
	FString FailedFills; // 0x90
	FString RemainingHoles; // 0xa0
};

struct AChaosSolverActor : AActor {
	FChaosSolverConfiguration Properties; // 0x310
	float TimeStepMultiplier; // 0x378
	int32_t CollisionIterations; // 0x37c
	int32_t PushOutIterations; // 0x380
	int32_t PushOutPairIterations; // 0x384
	float ClusterConnectionFactor; // 0x388
	EClusterConnectionTypeEnum ClusterUnionConnectionType; // 0x38c
	bool DoGenerateCollisionData; // 0x38d
	FSolverCollisionFilterSettings CollisionFilterSettings; // 0x390
	bool DoGenerateBreakingData; // 0x3a0
	FSolverBreakingFilterSettings BreakingFilterSettings; // 0x3a4
	bool DoGenerateTrailingData; // 0x3b4
	FSolverTrailingFilterSettings TrailingFilterSettings; // 0x3b8
	float MassScale; // 0x3c8
	bool bGenerateContactGraph; // 0x3cc
	bool bHasFloor; // 0x3cd
	float FloorHeight; // 0x3d0
	FChaosDebugSubstepControl ChaosDebugSubstepControl; // 0x3d4
	UBillboardComponent* SpriteComponent; // 0x3d8
	UChaosGameplayEventDispatcher* GameplayEventDispatcherComponent; // 0x3f8
};

struct UStructureBedInfoHUD : UStructureInfoHUD {
	UStructureInfoHUDSlot* NextUseTimeText; // 0x360
	TWeakObjectPtr<ASGStructureBed> BindStructureBed; // 0x368
};

struct UParticleModuleRotationRate_Seeded : UParticleModuleRotationRate {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x60
};

struct UUI_TransAllianceOfficial : USGUI {
	UTransAllianceOfficialSlot* AllianceMemberSlotClass; // 0x2d8
	UVerticalBox* GuildListVerticalBox; // 0x2e0
	UButton* PrePageButton; // 0x2e8
	UButton* NextPageButton; // 0x2f0
	UButton* SubmitButton; // 0x2f8
	UButton* ExitButton; // 0x300
	UTextBlock* ShowPageText; // 0x308
	int32_t AllianceMemberNumPerPage; // 0x310
};

struct UHorizonMultiToggleButtonWidget : UHorizonDesignableUserWidget {
	FMulticastInlineDelegate OnStateSyncDelegate; // 0x260
	FMulticastInlineDelegate OnStateChangedDelegate; // 0x288
	UButton* Button_ToggleState_Prev; // 0x2b0
	UButton* Button_ToggleState_Next; // 0x2b8
	UTextBlock* TextBlock_CurrentState; // 0x2c0
	UImage* Image_CurrentState; // 0x2c8
	TArray<FHorizonMultiToggleButtonState> StateList; // 0x2d0
	bool bLoopToggleState; // 0x2e0
	int32_t CurrentStateIndex; // 0x2e4
};

struct UDemoNetDriver : UNetDriver {
	TMap<FString, FRollbackNetStartupActorInfo> RollbackNetStartupActors; // 0x858
	float CheckpointSaveMaxMSPerFrame; // 0xa04
	TArray<FMulticastRecordOptions> MulticastRecordOptions; // 0xa28
	bool bIsLocalReplay; // 0xa38
	TArray<APlayerController*> SpectatorControllers; // 0xa40
};

struct UWaterRuntimeSettings : UDeveloperSettings {
	ECollisionChannel CollisionChannelForWaterTraces; // 0x38
	TSoftObjectPtr<UMaterialParameterCollection> MaterialParameterCollection; // 0x40
	float WaterBodyIconWorldSize; // 0x68
	float WaterBodyIconWorldZOffset; // 0x6c
	FName DefaultWaterCollisionProfileName; // 0x70
};

struct UVirtualTextureBuilder : UObject {
	UVirtualTexture2D* Texture; // 0x28
	uint64_t BuildHash; // 0x30
};

struct UMiniMapPOI_GenericTeamActor : UMiniMapPOI_Actor {
	TSoftObjectPtr<UTexture2D> DifferentTeamInMiniMapTexture; // 0x3b8
	FLinearColor DifferentTeamInMiniMapColor; // 0x3e0
	TSoftObjectPtr<UTexture2D> DifferentTeamOutOfMiniMapTexture; // 0x3f0
	FLinearColor DifferentTeamOutOfMiniMapColor; // 0x418
};

struct ASkeletalMeshActor : AActor {
	char bShouldDoAnimNotifies : 1; // 0x318
	char bWakeOnLevelStart : 1; // 0x318
	USkeletalMeshComponent* SkeletalMeshComponent; // 0x320
	USkeletalMesh* ReplicatedMesh; // 0x328
	UPhysicsAsset* ReplicatedPhysAsset; // 0x330
	UMaterialInterface* ReplicatedMaterial0; // 0x338
	UMaterialInterface* ReplicatedMaterial1; // 0x340
};

struct UTextureRenderTarget2D : UTextureRenderTarget {
	int32_t SizeX; // 0xe0
	int32_t SizeY; // 0xe4
	FLinearColor ClearColor; // 0xe8
	TextureAddress AddressX; // 0xf8
	TextureAddress AddressY; // 0xf9
	char bForceLinearGamma : 1; // 0xfa
	char bHDR : 1; // 0xfa
	char bGPUSharedFlag : 1; // 0xfa
	ETextureRenderTargetFormat RenderTargetFormat; // 0xfb
	char bAutoGenerateMips : 1; // 0xfc
	TextureFilter MipsSamplerFilter; // 0xfd
	TextureAddress MipsAddressU; // 0xfe
	TextureAddress MipsAddressV; // 0xff
	EPixelFormat OverrideFormat; // 0x100
};

struct UGameCharacterQuestPanel : UUserWidget {
	UGameCharacterQuestItem* QuestItemTemplate; // 0x260
	UCanvasPanel* TopCanvasPanel; // 0x268
	UCanvasPanel* QuestsPanel; // 0x270
	UVerticalBox* QuestListVertical; // 0x278
	UButton* CollapsedButton; // 0x280
	FMargin QuestItemMargin; // 0x288
};

struct UUI_Crosshairs : USGUI {
	char bIsCustomVisible : 1; // 0x2d8
	AShooterWeapon* CurrentShooterWeapon; // 0x2e0
	float CrosshairsDegress; // 0x2e8
	FVector2D ScatteringAngle; // 0x2ec
};

struct ULandscapeMaterialInstanceConstant : UMaterialInstanceConstant {
	TArray<FLandscapeMaterialTextureStreamingInfo> TextureStreamingInfo; // 0x368
	char bIsLayerThumbnail : 1; // 0x378
	char bDisableTessellation : 1; // 0x378
	char bMobile : 1; // 0x378
	char bEditorToolUsage : 1; // 0x378
};

struct URadialForceComponent : USceneComponent {
	float Radius; // 0x208
	ERadialImpulseFalloff Falloff; // 0x20c
	float ImpulseStrength; // 0x210
	char bImpulseVelChange : 1; // 0x214
	char bIgnoreOwningActor : 1; // 0x214
	float ForceStrength; // 0x218
	float DestructibleDamage; // 0x21c
	TArray<EObjectTypeQuery> ObjectTypesToAffect; // 0x220
};

struct UBTTask_ToggleStanceType : UBTTask_AnimalBase {
	EAnimalsStanceType Enum_DesiredAnimalsStanceType; // 0xd0
	EAnimalsBehaviorType Enum_DesiredAnimalsBehaviorType; // 0xd1
};

struct UMovieSceneTrackInstanceSystem : UMovieSceneEntitySystem {
	UMovieSceneTrackInstanceInstantiator* Instantiator; // 0x40
};

struct UNN_CraftPerkGroupLine : UUserWidget {
	UImage* Image; // 0x260
	TSoftObjectPtr<UTexture2D> LineTexture2D; // 0x268
	TSoftObjectPtr<UTexture2D> LineLearnedTexture2D; // 0x290
	TSoftObjectPtr<UTexture2D> TurnDownTexture2D; // 0x2b8
	TSoftObjectPtr<UTexture2D> TurnDownLearnedTexture2D; // 0x2e0
	TSoftObjectPtr<UTexture2D> TurnUpTexture2D; // 0x308
	TSoftObjectPtr<UTexture2D> TurnUpLearnedTexture2D; // 0x330
};

struct ASGWeapon : AActor {
	TWeakObjectPtr<USGItem> AssociatedItem; // 0x310
	FSGItemNetInfo AssociatedItemNetInfo; // 0x318
	EWeaponEquipState Enum_WeaponEquipState; // 0x444
	TMap<EWeaponEquipState, FChangeEquipStateMaterialSetting> EquipStateMaterialSetting; // 0x448
	FVector AttackStartOffset; // 0x498
	char bShowTrace : 1; // 0x4a4
	char bCanContinuousAttack : 1; // 0x4a4
	char bIgnoreStandBlockAnimation : 1; // 0x4a4
	char bStopAimCameraFromReload : 1; // 0x4a4
	char bCanRiderSprintAttack : 1; // 0x4a4
	float ShowTraceTime; // 0x4a8
	char bUseServerTrace : 1; // 0x4ac
	EPrimaryWeaponType Enum_PrimaryWeaponType; // 0x4ad
	char bIgnoreRiderBlock : 1; // 0x4ae
	char bCrouchDirectAttack : 1; // 0x4ae
	EMontageCustomBindType ActionMontageBindType; // 0x4af
	FName CameraSocket; // 0x4b0
	FVector CameraOffset; // 0x4b8
	int32_t DamageIconIndex; // 0x4c4
	char bRiderOneHandAttack : 1; // 0x4c8
	char bRiderOneHandBlock : 1; // 0x4c8
	FEquipAnims EquipAnimsConfig; // 0x4d0
	float CollectionTraceLength; // 0x590
	FVector2D CollectionTraceCapsuleSize; // 0x594
	FVector CollectionTraceCapsuleOffset; // 0x59c
	TArray<FAttackInfo> CollectionAnimsData; // 0x5a8
	FAnimsConfig Stand_Rlx_AnimsConfig; // 0x5b8
	FAnimsConfig Stand_Aim_AnimsConfig; // 0x1e90
	FAnimsConfig Crouch_Rlx_AnimsConfig; // 0x3768
	FAnimsConfig Crouch_Aim_AnimsConfig; // 0x5040
	FCharacterMovingSpeedConfig Struct_WepRlxSpeedConfig; // 0x6918
	FCharacterMovingSpeedConfig Struct_WepAimSpeedConfig; // 0x6be8
	FCharacterMovingSpeedConfig Struct_WepRlxAnimSpeedConfig; // 0x6eb8
	FCharacterMovingSpeedConfig Struct_WepAimAnimSpeedConfig; // 0x7188
	TMap<EEquipWeaponSlot, FName> HolsterSocket; // 0x7458
	FName EquipSocket; // 0x74a8
	FTransform EquipSocketTransform; // 0x74b0
	FTransform EquipPivotTransform; // 0x74e0
	FTransform PitchUpTransform; // 0x7510
	FTransform PitchDownTransform; // 0x7540
	float WeaponImpulse; // 0x7570
	float WeaponBlockImpulse; // 0x7574
	FName EquipSoundID; // 0x7578
	FName HolsterSoundID; // 0x7580
	FWeaponScatteringData WeaponScatteringData; // 0x7588
	FVector CustomProjectileLaunchVelocity; // 0x75c4
	float CanBlockAngle; // 0x75d0
	FVector2D AimOffsetYawLimitAngle; // 0x75d4
	FVector2D AimOffsetPitchLimitAngle; // 0x75dc
	TArray<AActor*> MeleeAttackIgnoreActors; // 0x75e8
	char IsMeleeAttackFrame; // 0x75f8
	TArray<AActor*> CustomChildActors; // 0x7600
	EEquipWeaponSlot EquipSlot; // 0x7610
	float CurrentCrosshairsDegrees; // 0x7614
	FVector TPVAimCameraOffsetOveride; // 0x7658
	float TPVAimArmLengthOveride; // 0x7664
	FVector2D TPVAimArmLengthOverideAdditionRange; // 0x7668
	float RiderTPVAimArmLengthOveride; // 0x7670
	FVector2D RiderTPVAimArmLengthOverideAdditionRange; // 0x7674
	FVector RiderTPVAimCameraOffsetOveride; // 0x767c
	float TransitionDuration; // 0x7688
	ESkillType UseAddSkillType; // 0x768c
	float UseAddSkillExp; // 0x7690
	int32_t Tenacity; // 0x7694
	char bCanCancelShooterAttack : 1; // 0x7698
	USGDamageType* DamageType; // 0x76a0
	int32_t Hardness; // 0x76a8
	FMeleeWeaponData WeaponData; // 0x76b0
	TArray<FWeaponTraceInfo> MeleeWeaponTraces; // 0x7748
	TArray<FWeaponTraceInfo> BodyTraces; // 0x7758
	float ServerCheckImpactComponentDistance; // 0x7768
	float ServerCheckImpactActorDistance; // 0x776c
	float ServerCheckImpactDeathCharacterDistance; // 0x7770
	float ServerCheckImpactPointDistance; // 0x7774
	float ServerCheckImpactDeathCharacterPointDistance; // 0x7778
	float BrokenParticleVelocityMin; // 0x777c
	float BrokenParticleVelocityMax; // 0x7780
	FName BrokenSoundID; // 0x7784
	UParticleSystem* BrokenParticle; // 0x7790
	float RuleDamageRate[0x4]; // 0x7798
	float HoslterShiledBlockPassRatio; // 0x77a8
	char bFixedConsumeDurable : 1; // 0x77ac
	char bCanStunTarget : 1; // 0x77ac
	float WeaponDurableMulti; // 0x77b0
	FSoftObjectPath DestroyedMesh; // 0x77b8
	ASGDestructibleActor* DestroyedMeshActorClass; // 0x77d0
	int32_t Level; // 0x77d8
	char bSearchOrePlace : 1; // 0x77dc
	char bCanDamageLandscape : 1; // 0x77dc
	char bCanSearchOre : 1; // 0x77dc
	char bCanSpawnOre : 1; // 0x77dc
	ASGStructure* SpawnOreActorTemplate; // 0x77e0
	float NearbyOreStructureRange; // 0x77e8
	int32_t LimitNormalValue; // 0x77ec
	int32_t OreDurable; // 0x77f0
	int32_t WarnOreRadius; // 0x77f4
	int32_t WarnOreDistance; // 0x77f8
	int32_t SearchOreRadius; // 0x77fc
	int32_t SearchOreDistance; // 0x7800
	int32_t SearchOreTurnSpeed; // 0x7804
	int32_t SearchOreDirectionTurnSpeed; // 0x7808
	int32_t SearchOreDirectionRange; // 0x780c
	TArray<FOreColorData> SearchOreColorData; // 0x7810
	TMap<EDamageType, FName> ForgeUseRowName; // 0x7820
	char bFaker : 1; // 0x7870
	float ExtraStunRatio; // 0x7874
	USGItem* AssociatedSkinItemClass; // 0x7878
	char bIsPreview : 1; // 0x7880
	int32_t DurableSEConsumed; // 0x7884
};

struct UMultiLineEditableText : UTextLayoutWidget {
	FText Text; // 0x128
	FText HintText; // 0x140
	FDelegate HintTextDelegate; // 0x158
	FTextBlockStyle WidgetStyle; // 0x168
	bool bIsReadOnly; // 0x3d8
	FSlateFontInfo Font; // 0x3e0
	bool SelectAllTextWhenFocused; // 0x438
	bool ClearTextSelectionOnFocusLoss; // 0x439
	bool RevertTextOnEscape; // 0x43a
	bool ClearKeyboardFocusOnCommit; // 0x43b
	bool AllowContextMenu; // 0x43c
	FVirtualKeyboardOptions VirtualKeyboardOptions; // 0x43d
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction; // 0x43e
	FMulticastInlineDelegate OnTextChanged; // 0x440
	FMulticastInlineDelegate OnTextCommitted; // 0x450
};

struct UMovieSceneParticleSection : UMovieSceneSection {
	FMovieSceneParticleChannel ParticleKeys; // 0xe8
};

struct UKeyItem : UUserWidget {
	TSoftObjectPtr<UTexture2D> NormalTexture; // 0x260
	TSoftObjectPtr<UTexture2D> HoverTexture; // 0x288
	TSoftObjectPtr<UTexture2D> PressTexture; // 0x2b0
	TSoftObjectPtr<UTexture2D> SelectTexture; // 0x2d8
	FSlateColor NormalTextColor; // 0x300
	FSlateColor HoverTextColor; // 0x328
	FSlateColor PressTextColor; // 0x350
	FSlateColor SelectTextColor; // 0x378
	UButton* BtnKey; // 0x3a0
	UImage* ImgKey; // 0x3a8
	UTextBlock* TbKey; // 0x3b0
	char bHovered : 1; // 0x3c8
	char bPressed : 1; // 0x3c8
	char bSelected : 1; // 0x3c8
	FKeyMappingConfig BindKeyMappingConfig; // 0x3d0
	EKeyMappingButtonType BindButtonType; // 0x400
};

struct UN_GeneralCampPanel : UUserWidget {
	UUI_N_General* ParentUI; // 0x260
	UOptionButton* GeneralButton; // 0x268
	UOptionButton* HorseButton; // 0x270
	UHorizontalBox* WarTypePanel; // 0x278
	UHorizontalBox* WorkTypePanel; // 0x280
	UHorizontalBox* RestTypePanel; // 0x288
	UTextBlock* RecruitLevelText; // 0x290
	UTextBlock* WarTypeText; // 0x298
	UTextBlock* RecruitAmountText; // 0x2a0
	UN_GeneralCampSlot* GeneralCampSlotTemplate; // 0x2a8
	TArray<UN_GeneralCampSlot*> GeneralCampSlotList; // 0x2b0
	UN_GeneralCampSlot* FirstWarTypeSlot; // 0x2c0
	FMargin GeneralCampSlotMargin; // 0x2c8
	int32_t DefaultShowNum; // 0x2d8
	UButton* PageUp; // 0x2e0
	UButton* PageDown; // 0x2e8
	UTextBlock* PageText; // 0x2f0
	int32_t CurrentRestPageIndex; // 0x2f8
	int32_t RestTypeGeneralNum; // 0x2fc
};

struct ALevelBounds : AActor {
	UBoxComponent* BoxComponent; // 0x310
	bool bAutoUpdateBounds; // 0x318
};

struct AMagicLeapARPinRenderer : AActor {
	bool bInfoActorsVisibilityOverride; // 0x310
	TMap<FGuid, AMagicLeapARPinInfoActorBase*> AllInfoActors; // 0x318
	AMagicLeapARPinInfoActorBase* ClassToSpawn; // 0x370
};

struct UMaterialExpressionFontSampleParameter : UMaterialExpressionFontSample {
	FName ParameterName; // 0x50
	FGuid ExpressionGUID; // 0x58
	FName Group; // 0x68
};

struct UAbilityTask_WaitConfirmCancel : UAbilityTask {
	FMulticastInlineDelegate OnConfirm; // 0x80
	FMulticastInlineDelegate OnCancel; // 0x90
};

struct UUI_GuildStore : USGUI {
	UGuildStorePanel* GuildStorePanel; // 0x2d8
	UGuildStoreSettingPanel* GuildStoreSettingPanel; // 0x2e0
	UButton* CloseButton; // 0x2e8
};

struct UReplicationGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode_ActorList {
	TArray<FAlwaysRelevantActorInfo> PastRelevantActors; // 0xe0
};

struct UAltarGeneralSlot : UUserWidget {
	UImage* HeadIcon; // 0x260
	UTextBlock* LevelText; // 0x268
	UTextBlock* NameText; // 0x270
	UTextBlock* StatusText; // 0x278
	UTextBlock* LifeCountText; // 0x280
	UTextBlock* LoyaltyText; // 0x288
	UTextBlock* RebornTimeText; // 0x290
	UImage* bg; // 0x298
	UButton* ReduceRebornTimeButton; // 0x2a0
	UButton* StopRestButton; // 0x2a8
	USGUI* ParentUI; // 0x2b0
	FBaseGeneralChunkData ChunkGeneralData; // 0x2b8
	FLinearColor RestColor; // 0x3a0
	FLinearColor NoLifeCountColor; // 0x3b0
	TSoftObjectPtr<UTexture2D> icon; // 0x3c0
	TSoftObjectPtr<UTexture2D> SelectTexture; // 0x3e8
	TSoftObjectPtr<UTexture2D> NormalTexture; // 0x410
	FText AltarDeathStatusText; // 0x438
	FText AltarReborningStatusText; // 0x450
	FText AltarNoLifeCountStatusText; // 0x468
	FText AltarRestStatusText; // 0x480
	FGuid ChunkGuid; // 0x498
};

struct UAbilityTask_WaitAttributeChange : UAbilityTask {
	FMulticastInlineDelegate OnChange; // 0x80
	UAbilitySystemComponent* ExternalOwner; // 0xf0
};

struct UMapBuildDataRegistry : UObject {
	ELightingBuildQuality LevelLightingQuality; // 0x28
};

struct UHoleFillTool : USingleSelectionTool {
	USmoothHoleFillProperties* SmoothHoleFillProperties; // 0x98
	UHoleFillToolProperties* Properties; // 0xa0
	UHoleFillToolActions* Actions; // 0xa8
	UHoleFillStatisticsProperties* Statistics; // 0xb0
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xb8
	UPolygonSelectionMechanic* SelectionMechanic; // 0xc0
};

struct UInterpTrackInstLinearColorProp : UInterpTrackInstProperty {
	FLinearColor ResetColor; // 0x58
};

struct UMaterialExpressionVertexInterpolator : UMaterialExpressionCustomOutput {
	FExpressionInput Input; // 0x40
};

struct USimpleConstructionScript : UObject {
	TArray<USCS_Node*> RootNodes; // 0x28
	TArray<USCS_Node*> AllNodes; // 0x38
	USCS_Node* DefaultSceneRootNode; // 0x48
};

struct UGroomAsset : UObject {
	TArray<FHairGroupInfoWithVisibility> HairGroupsInfo; // 0x30
	TArray<FHairGroupsRendering> HairGroupsRendering; // 0x40
	TArray<FHairGroupsPhysics> HairGroupsPhysics; // 0x50
	TArray<FHairGroupsInterpolation> HairGroupsInterpolation; // 0x60
	TArray<FHairGroupsLOD> HairGroupsLOD; // 0x70
	TArray<FHairGroupsCardsSourceDescription> HairGroupsCards; // 0x80
	TArray<FHairGroupsMeshesSourceDescription> HairGroupsMeshes; // 0x90
	TArray<FHairGroupsMaterial> HairGroupsMaterials; // 0xa0
	bool EnableGlobalInterpolation; // 0xc0
	EGroomInterpolationType HairInterpolationType; // 0xc1
	EHairLODSelectionType LODSelectionType; // 0xc2
	FPerPlatformInt MinLOD; // 0xc4
	FPerPlatformBool DisableBelowMinLodStripping; // 0xc8
	TArray<float> EffectiveLODBias; // 0xd0
	TArray<UAssetUserData*> AssetUserData; // 0xe0
};

struct UClothingAssetBase : UObject {
	FString ImportedFilePath; // 0x28
	FGuid AssetGuid; // 0x38
};

struct UUI_AdminSubPanelSelfItem : UUI_AdminSubPanel {
	UUI_AdminItemPanel* AdminItemPanel; // 0x2d8
};

struct UEndTurnCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UStructureBannerInfoHUD : UStructureInfoHUD {
	UStructureInfoHUDSlot* MoveSecondText; // 0x360
	UStructureInfoHUDSlot* RemainLifeTimeText; // 0x368
	TWeakObjectPtr<ASGStructureBanner> BindStructureBanner; // 0x370
};

struct AGameMode : AGameModeBase {
	FName MatchState; // 0x3b0
	char bDelayedStart : 1; // 0x3b8
	int32_t NumSpectators; // 0x3bc
	int32_t NumPlayers; // 0x3c0
	int32_t NumBots; // 0x3c4
	float MinRespawnDelay; // 0x3c8
	int32_t NumTravellingPlayers; // 0x3cc
	ULocalMessage* EngineMessageClass; // 0x3d0
	TArray<APlayerState*> InactivePlayerArray; // 0x3d8
	float InactivePlayerStateLifeSpan; // 0x3e8
	int32_t MaxInactivePlayers; // 0x3ec
	bool bHandleDedicatedServerReplays; // 0x3f0
};

struct UDataAsset : UObject {
	UDataAsset* NativeClass; // 0x28
};

struct UOctreeDynamicMeshComponent : UBaseDynamicMeshComponent {
	bool bExplicitShowWireframe; // 0x510
};

struct UTitleItem : UUserWidget {
	TSoftObjectPtr<UTexture2D> NoTitleBackgroundTexture; // 0x260
	FSlateColor NoTitleColor; // 0x288
	FSlateFontInfo NoTitleFontInfo; // 0x2b0
	FVector2D NoTitleShadowOffset; // 0x308
	FLinearColor NoTitleShadowColor; // 0x310
	UImage* ImgBg; // 0x320
	UTextBlock* TbTitle; // 0x328
	UButton* BtnBg; // 0x330
};

struct UUI_StructureOccupyGuildEventSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> IconBrush[0x7]; // 0x260
	TSoftObjectPtr<UTexture2D> CapitalBrush[0x5]; // 0x378
	UImage* IconImage; // 0x440
	UTextBlock* ConflictTextBlock; // 0x448
	UTextBlock* ModifyTextBlock; // 0x450
	UImage* CapitalImage; // 0x458
	UTextBlock* CapitalTextBlock; // 0x460
	UButton* ModifyConflictButton; // 0x468
	EEventGuildType CurEventGuildType; // 0x470
	TWeakObjectPtr<ASGStructureOccupy> RemoteActor; // 0x474
	USGUI* RootSGUI; // 0x480
};

struct UAnimalFarmSlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> IconImgBG_NormalTexture; // 0x260
	TSoftObjectPtr<UTexture2D> IconImgBG_WarnTexture; // 0x288
	TSoftObjectPtr<UTexture2D> IconImg_NormalTexture; // 0x2b0
	FText SlotTitleText; // 0x2d8
	char bUseProgressBar : 1; // 0x2f0
	TSoftObjectPtr<UTexture2D> SlotTextBG_NormalTexture; // 0x2f8
	TSoftObjectPtr<UTexture2D> SlotTextBG_WarnTexture; // 0x320
	UImage* IconImgBG; // 0x348
	UImage* IconImg; // 0x350
	UTextBlock* SlotTitle; // 0x358
	UProgressBar* SlotProgressBar; // 0x360
	USlider* SlotSlider; // 0x368
	UImage* SlotTextImgBG; // 0x370
	UTextBlock* SlotText; // 0x378
};

struct UAudioImpulseResponse : UObject {
	TArray<float> ImpulseResponse; // 0x28
	int32_t NumChannels; // 0x38
	int32_t SampleRate; // 0x3c
	float NormalizationVolumeDb; // 0x40
	bool bTrueStereo; // 0x44
	TArray<float> IRData; // 0x48
};

struct UInAppPurchaseQueryCallbackProxy : UObject {
	FMulticastInlineDelegate OnSuccess; // 0x28
	FMulticastInlineDelegate OnFailure; // 0x38
};

struct UBaseCreateFromSelectedTool : UMultiSelectionTool {
	UTransformInputsToolProperties* TransformProperties; // 0x98
	UBaseCreateFromSelectedHandleSourceProperties* HandleSourcesProperties; // 0xa0
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xa8
	TArray<UTransformProxy*> TransformProxies; // 0xb0
	TArray<UTransformGizmo*> TransformGizmos; // 0xc0
	TArray<FVector> TransformInitialScales; // 0xd0
};

struct UMovieScene3DTransformSection : UMovieSceneSection {
	FMovieSceneTransformMask TransformMask; // 0xf0
	FMovieSceneFloatChannel Translation[0x3]; // 0xf8
	FMovieSceneFloatChannel Rotation[0x3]; // 0x2d8
	FMovieSceneFloatChannel Scale[0x3]; // 0x4b8
	FMovieSceneFloatChannel ManualWeight; // 0x698
	bool bUseQuaternionInterpolation; // 0x738
};

struct UExporter : UObject {
	UObject* SupportedClass; // 0x28
	UObject* ExportRootScope; // 0x30
	TArray<FString> FormatExtension; // 0x38
	TArray<FString> FormatDescription; // 0x48
	int32_t PreferredFormatIndex; // 0x58
	int32_t TextIndent; // 0x5c
	char bText : 1; // 0x60
	char bSelectedOnly : 1; // 0x60
	char bForceFileOperations : 1; // 0x60
	UAssetExportTask* ExportTask; // 0x68
};

struct UAnimCompress_RemoveEverySecondKey : UAnimCompress {
	int32_t MinKeys; // 0x40
	char bStartAtSecondKey : 1; // 0x44
};

struct UPlatformInterfaceWebResponse : UObject {
	FString OriginalURL; // 0x28
	int32_t ResponseCode; // 0x38
	int32_t Tag; // 0x3c
	FString StringResponse; // 0x40
	TArray<char> BinaryResponse; // 0x50
};

struct UGuildStoreItemPriceSlot : USGUI {
	UN_InventorySlot* InventorySlot; // 0x2d8
	UN_GeneralCampSlot* GeneralCampSlot; // 0x2e0
	UVehicleCampSlot* VehicleCampSlot; // 0x2e8
	UTextBlock* PriceText; // 0x2f0
	UEditableTextBox* PriceTextBox; // 0x2f8
	UTextBlock* StoreTypeText; // 0x300
	UTextBlock* DescText; // 0x308
	UTextBlock* AmountText; // 0x310
};

struct ASGStructureCropLand : ASGStructureLandBase {
	TArray<UServerCropInfo*> ServerCropInfoArray; // 0x1090
	TArray<UClientCropInfo*> ClientCropInfoArray; // 0x10a0
	TArray<uint16_t> CropInstancedArray; // 0x10b0
	float MaxSoilLoose; // 0x10c0
	float SoilLoose; // 0x10c4
	float LooseDecreaseUpdateValue; // 0x10c8
	float MaxNFertilizer; // 0x10cc
	float NFertilizer; // 0x10d0
	float MaxPFertilizer; // 0x10d4
	float PFertilizer; // 0x10d8
	float MaxKFertilizer; // 0x10dc
	float KFertilizer; // 0x10e0
	float SoilPropertyUpdateInterval; // 0x10e4
	float NFertilizerAutoUpdateValue; // 0x10e8
	float PFertilizerAutoUpdateValue; // 0x10ec
	float KFertilizerAutoUpdateValue; // 0x10f0
	float NFertilizerUpdateValue; // 0x10f4
	float PFertilizerUpdateValue; // 0x10f8
	float KFertilizerUpdateValue; // 0x10fc
	int32_t MaxApplyFertilizerCount; // 0x1100
	int32_t ApplyFertilizerCount; // 0x1104
	float ApplyFertilizerCountUpdateInterval; // 0x1108
	float AutoUseFertilizerRatio; // 0x110c
	USGItem* FertilizerItemClass; // 0x1110
	float AutoLooseIncreaseUpdateValue; // 0x1118
	float NFertilizerBuff; // 0x1120
	float PFertilizerBuff; // 0x1124
	float KFertilizerBuff; // 0x1128
	float BaseAddSoilLooseExperienceToAdd; // 0x112c
	float SavedTickTimeSeconds; // 0x1144
};

struct UNN_CraftPerkSlot : UUserWidget {
	UImage* icon; // 0x260
	USGCraftPerk* BindCraftPerk; // 0x268
	TWeakObjectPtr<USGItem> BindItem; // 0x270
	UNN_CraftPerkGroupSlot* ParentUI; // 0x278
	char bLearned : 1; // 0x280
	USGUI* RootUI; // 0x288
	USGToolTipWidget* DefaultToolTipsClass; // 0x290
};

struct UBTDecorator_CheckGameplayTagsOnActor : UBTDecorator {
	FBlackboardKeySelector ActorToCheck; // 0x68
	EGameplayContainerMatchType TagsToMatch; // 0x90
	FGameplayTagContainer GameplayTags; // 0x98
	FString CachedDescription; // 0xb8
};

struct ANpcSpawnVolume : AVolume {
	char bNeedCheckFloor : 1; // 0x348
	char bStaticSpawnVolume : 1; // 0x348
	float ChangeGuardCDTimeMin; // 0x34c
	float ChangeGuardCDTimeMax; // 0x350
	float ChangeGuardWaitTime; // 0x354
	char bCheckSameGuard : 1; // 0x358
	TArray<FBehaviorPointConfig> BehaviorPointConfig; // 0x360
	TArray<FTransform> SpawnPoints; // 0x370
	TArray<AActor*> SpawnVolumeFloors; // 0x3a0
	FText VolumeName; // 0x3b0
	FString NPCDeathDropType; // 0x3c8
};

struct UN_InventorySlot : UUserWidget {
	TWeakObjectPtr<USGItem> BindItem; // 0x264
	USGItem* BindItemTemplate; // 0x270
	char bIsCraftQueue : 1; // 0x278
	UBorder* bg; // 0x280
	UBorder* OutBorder; // 0x288
	UBorder* InBorder; // 0x290
	UBorder* QualityBorder; // 0x298
	UImage* ImgIcon; // 0x2a0
	UImage* GuideImage; // 0x2a8
	UImage* CanDropImage; // 0x2b0
	UImage* CantDropImage; // 0x2b8
	UBorder* OccupyBorder; // 0x2c0
	UImage* StrengthIcon; // 0x2c8
	UImage* GuildImageUnlockIcon; // 0x2d0
	UProgressBar* ConsumeItemCD; // 0x2d8
	UProgressBar* SaveTimeProgress; // 0x2e0
	UTextBlock* SaveTimeTextBlock; // 0x2e8
	UImage* IsUseImage; // 0x2f0
	UBorder* WeightBorder; // 0x2f8
	UTextBlock* WeightText; // 0x300
	FName WeightBorderName; // 0x308
	FName WeightTextName; // 0x310
	FName RepairingImageName; // 0x318
	UImage* RepairingImage; // 0x320
	FName FlagPrintIconName; // 0x328
	UImage* FlagPrintIcon; // 0x330
	TArray<FStrengthTextureInfo> StrengthTextureInfo; // 0x338
	USGUI* RootSGUI; // 0x348
	UUserWidget* ParentUI; // 0x350
	TWeakObjectPtr<USGInventoryComponent> BindInventoryComponent; // 0x358
	int32_t BindSlot; // 0x360
	EInventoryTypes InventoryType; // 0x364
	FSlateBrush Bg_Equip; // 0x368
	FSlateBrush Bg_Inventory; // 0x3f0
	FSlateBrush Bg_Craft; // 0x478
	FSlateBrush Bg_CraftCanCraft; // 0x500
	FSlateBrush Bg_CraftQueue; // 0x588
	FSlateBrush Bg_ShortCut; // 0x610
	FSlateBrush Bg_RemoteBag; // 0x698
	FSlateBrush OutBorder_Normal; // 0x720
	FSlateBrush OutBorder_CanCraft; // 0x7a8
	FSlateBrush OutBorder_Hover; // 0x830
	FSlateBrush OutBorder_InUse; // 0x8b8
	FSlateBrush OutBorder_Select; // 0x940
	FSlateBrush InBorder_Empty; // 0x9c8
	FSlateBrush QualityBorderBrush[0x7]; // 0xa50
	FSlateBrush LockBrush; // 0xe08
	char RightButtonShowMenu : 1; // 0xe90
	char bIsUsed : 1; // 0xe90
	char bPressed : 1; // 0xe90
	char IsHover : 1; // 0xe90
	char bPlayDropSound : 1; // 0xe90
	char IsRightMouseButtonDown : 1; // 0xe90
	char bCanDrag : 1; // 0xe90
	char bCanRightButtonClick : 1; // 0xe90
	char bCanLeftButtonDoubleClick : 1; // 0xe91
	char bCanCraft : 1; // 0xe91
	char bUseItemIndex : 1; // 0xe91
	int32_t ItemIndex; // 0xe94
	int32_t ItemAmount; // 0xe98
	UN_CraftPanelTips* CraftPanelTipsTemplate; // 0xea0
	UN_SlotExtraMenu* ExtraMenuWidgetTemplate; // 0xea8
	UN_DraggedItem* DraggedItemClass; // 0xeb0
	USGToolTipWidget* DefaultToolTipsClass; // 0xeb8
	TArray<UImage*> CanDropImages; // 0xec0
	char CanFocusLost : 1; // 0xed0
	FMulticastInlineDelegate OnInventorySlotPressed; // 0xed8
	FMulticastInlineDelegate OnInventorySlotReleased; // 0xee8
	FMulticastInlineDelegate OnInventorySlotMouseEnter; // 0xef8
	FMulticastInlineDelegate OnInventorySlotMouseLeave; // 0xf08
	FMulticastInlineDelegate OnInventorySlotSinglePressed; // 0xf18
	FMulticastInlineDelegate OnInventorySlotSingleReleased; // 0xf28
	UN_DragDropItem* DialogSavedItemDragOperation; // 0xf38
	char bDialogSavedItemShift : 1; // 0xf40
	char bDialogSavedItemCtrl : 1; // 0xf40
	UUI_TransportMachine* BindTransportUI; // 0xf48
	TWeakObjectPtr<USGItem> RecordTransportItem; // 0xf50
	EInventoryTypes RecordTransportItemInventoyType; // 0xf58
	EInventoryTypes RecordTransportItemTargetInventoyType; // 0xf59
	char bRecordShift : 1; // 0xf5a
	char bRecordCtrl : 1; // 0xf5a
	char bShowInUse : 1; // 0xf5a
	UHorizontalBox* PriorityPanel; // 0xf60
	UImage* HighImage; // 0xf68
	UImage* MiddleImage; // 0xf70
	UImage* LowImage; // 0xf78
};

struct UVOIPTalker : UActorComponent {
	FVoiceSettings Settings; // 0xc0
};

struct UPreviewMesh : UObject {
	bool bBuildSpatialDataStructure; // 0x40
	bool bDrawOnTop; // 0x41
	USimpleDynamicMeshComponent* DynamicMeshComponent; // 0x50
};

struct UMaterialExpressionConstant2Vector : UMaterialExpression {
	float R; // 0x40
	float G; // 0x44
};

struct USceneCaptureComponentCube : USceneCaptureComponent {
	UTextureRenderTargetCube* TextureTarget; // 0x2c8
	bool bCaptureRotation; // 0x2d0
	UTextureRenderTargetCube* TextureTargetLeft; // 0x2d8
	UTextureRenderTargetCube* TextureTargetRight; // 0x2e0
	UTextureRenderTarget2D* TextureTargetODS; // 0x2e8
	float IPD; // 0x2f0
};

struct UGroupEdgeInsertionTool : USingleSelectionTool {
	UGroupEdgeInsertionProperties* Settings; // 0x98
	UMeshOpPreviewWithBackgroundCompute* Preview; // 0xa0
};

struct UNiagaraSystem : UFXSystemAsset {
	bool bDumpDebugSystemInfo; // 0x30
	bool bDumpDebugEmitterInfo; // 0x31
	bool bRequireCurrentFrameData; // 0x32
	char bFixedBounds : 1; // 0x34
	UNiagaraEffectType* EffectType; // 0x38
	bool bOverrideScalabilitySettings; // 0x40
	TArray<FNiagaraSystemScalabilityOverride> ScalabilityOverrides; // 0x48
	FNiagaraSystemScalabilityOverrides SystemScalabilityOverrides; // 0x58
	TArray<FNiagaraEmitterHandle> EmitterHandles; // 0x68
	TArray<UNiagaraParameterCollectionInstance*> ParameterCollectionOverrides; // 0x78
	UNiagaraScript* SystemSpawnScript; // 0x88
	UNiagaraScript* SystemUpdateScript; // 0x90
	FNiagaraSystemCompiledData SystemCompiledData; // 0xa8
	FNiagaraUserRedirectionParameterStore ExposedParameters; // 0x2c0
	FBox FixedBounds; // 0x388
	bool bAutoDeactivate; // 0x3a4
	float WarmupTime; // 0x3a8
	int32_t WarmupTickCount; // 0x3ac
	float WarmupTickDelta; // 0x3b0
	bool bHasSystemScriptDIsWithPerInstanceData; // 0x3b4
	TArray<FName> UserDINamesReadInSystemScripts; // 0x3b8
};

struct UPrefabAsset : UObject {
	TMap<FString, FSoftObjectPath> AssetReferences; // 0x28
	FSoftObjectPath GeneratedBlueprintAssetReference; // 0x78
	FGuid PrefabId; // 0x90
	FString PrefabContent; // 0xa0
	FString PrefabHash; // 0xb0
	int32_t NumActors; // 0xc0
	FVector PrefabPivot; // 0xc4
};

struct AMagicLeapSharedWorldGameState : AGameState {
	FMagicLeapSharedWorldSharedData SharedWorldData; // 0x390
	FMagicLeapSharedWorldAlignmentTransforms AlignmentTransforms; // 0x3a0
	FMulticastInlineDelegate OnSharedWorldDataUpdated; // 0x3b0
	FMulticastInlineDelegate OnAlignmentTransformsUpdated; // 0x3c0
};

struct UGameplayTagsSettings : UGameplayTagsList {
	bool ImportTagsFromConfig; // 0x48
	bool WarnOnInvalidTags; // 0x49
	bool FastReplication; // 0x4a
	FString InvalidTagCharacters; // 0x50
	TArray<FGameplayTagCategoryRemap> CategoryRemapping; // 0x60
	TArray<FSoftObjectPath> GameplayTagTableList; // 0x70
	TArray<FGameplayTagRedirect> GameplayTagRedirects; // 0x80
	TArray<FName> CommonlyReplicatedTags; // 0x90
	int32_t NumBitsForContainerSize; // 0xa0
	int32_t NetIndexFirstBitSegment; // 0xa4
	TArray<FRestrictedConfigInfo> RestrictedConfigFiles; // 0xa8
};

struct UEnvQueryTest_Overlap : UEnvQueryTest {
	FEnvOverlapData OverlapData; // 0x1f8
};

struct UEdGraphNode_Documentation : UEdGraphNode {
	FString Link; // 0x98
	FString Excerpt; // 0xa8
};

struct UMaterialExpressionTemporalSobol : UMaterialExpression {
	FExpressionInput Index; // 0x40
	FExpressionInput Seed; // 0x54
	uint32_t ConstIndex; // 0x68
	FVector2D ConstSeed; // 0x6c
};

struct UAssetManagerSettings : UDeveloperSettings {
	TArray<FPrimaryAssetTypeInfo> PrimaryAssetTypesToScan; // 0x38
	TArray<FDirectoryPath> DirectoriesToExclude; // 0x48
	TArray<FPrimaryAssetRulesOverride> PrimaryAssetRules; // 0x58
	TArray<FPrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules; // 0x68
	bool bOnlyCookProductionAssets; // 0x78
	bool bShouldManagerDetermineTypeAndName; // 0x79
	bool bShouldGuessTypeAndNameInEditor; // 0x7a
	bool bShouldAcquireMissingChunksOnLoad; // 0x7b
	TArray<FAssetManagerRedirect> PrimaryAssetIdRedirects; // 0x80
	TArray<FAssetManagerRedirect> PrimaryAssetTypeRedirects; // 0x90
	TArray<FAssetManagerRedirect> AssetPathRedirects; // 0xa0
	TSet<FName> MetaDataTagsForAssetRegistry; // 0xb0
};

struct AGameplayAbilityTargetActor_GroundTrace : AGameplayAbilityTargetActor_Trace {
	float CollisionRadius; // 0x440
	float CollisionHeight; // 0x444
};

struct UGizmoBoxComponent : UGizmoBaseComponent {
	FVector Origin; // 0x4a8
	FQuat Rotation; // 0x4c0
	FVector Dimensions; // 0x4d0
	float LineThickness; // 0x4dc
	bool bRemoveHiddenLines; // 0x4e0
	bool bEnableAxisFlip; // 0x4e1
};

struct UAlignObjectsTool : UMultiSelectionTool {
	UAlignObjectsToolProperties* AlignProps; // 0x98
};

struct UDatasmithDeltaGenSceneImportData : UDatasmithFBXSceneImportData {
	bool bMergeNodes; // 0x48
	bool bOptimizeDuplicatedNodes; // 0x49
	bool bRemoveInvisibleNodes; // 0x4a
	bool bSimplifyNodeHierarchy; // 0x4b
	bool bImportVar; // 0x4c
	FString VarPath; // 0x50
	bool bImportPos; // 0x60
	FString PosPath; // 0x68
	bool bImportTml; // 0x78
	FString TmlPath; // 0x80
};

struct APaperCharacter : ACharacter {
	UPaperFlipbookComponent* Sprite; // 0x5c8
};

struct UMovieSceneVectorSection : UMovieSceneSection {
	FMovieSceneFloatChannel Curves[0x4]; // 0xe8
	int32_t ChannelsUsed; // 0x368
};

struct UAnimalHuaSeInfo : UObject {
	TArray<UTexture2D*> SkinHuaSeBaseTextures; // 0x28
	TArray<UTexture2D*> SkinHuaSeMaskTextures; // 0x38
};

struct UAnimNotify_PlayNiagaraEffect : UAnimNotify {
	UNiagaraSystem* Template; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	FVector Scale; // 0x58
	bool bAbsoluteScale; // 0x64
	char Attached : 1; // 0x80
	FName SocketName; // 0x84
};

struct UGameCharacterBuffItem : UUserWidget {
	USGToolTipWidget* ToolTipsTemplate; // 0x260
	TWeakObjectPtr<ABaseCharacter> BindCharacter; // 0x268
	UImage* ImgBuff; // 0x288
	UTextBlock* TbRemainTime; // 0x290
};

struct UMaterialExpressionMapARPassthroughCameraUV : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
};

struct UWaterSubsystem : UWorldSubsystem {
	FMulticastInlineDelegate OnCameraUnderwaterStateChanged; // 0x70
	FMulticastInlineDelegate OnWaterScalabilityChanged; // 0x80
	UStaticMesh* DefaultRiverMesh; // 0x90
	UStaticMesh* DefaultLakeMesh; // 0x98
	AWaterMeshActor* WaterMeshActor; // 0xa0
	UMaterialParameterCollection* MaterialParameterCollection; // 0xd0
};

struct USoundNodeDistanceCrossFade : USoundNode {
	TArray<FDistanceDatum> CrossFadeInput; // 0x48
};

struct UAchievementConditionIntWidget : UAchievementConditionWidget {
	UCanvasPanel* ProgressCanvas; // 0x288
	UProgressBar* PbProgress; // 0x290
	UTextBlock* TbProgress; // 0x298
	UTextBlock* TbTotalProgress; // 0x2a0
};

struct UAchievementConditionBoolWidget : UAchievementConditionWidget {
	UCanvasPanel* ProgressCanvas; // 0x288
	UProgressBar* PbProgress; // 0x290
	UTextBlock* TbProgress; // 0x298
	UTextBlock* TbTotalProgress; // 0x2a0
};

struct UChaosDestructionListener : USceneComponent {
	char bIsCollisionEventListeningEnabled : 1; // 0x208
	char bIsBreakingEventListeningEnabled : 1; // 0x208
	char bIsTrailingEventListeningEnabled : 1; // 0x208
	FChaosCollisionEventRequestSettings CollisionEventRequestSettings; // 0x20c
	FChaosBreakingEventRequestSettings BreakingEventRequestSettings; // 0x224
	FChaosTrailingEventRequestSettings TrailingEventRequestSettings; // 0x23c
	TSet<AChaosSolverActor*> ChaosSolverActors; // 0x258
	TSet<AGeometryCollectionActor*> GeometryCollectionActors; // 0x2a8
	FMulticastInlineDelegate OnCollisionEvents; // 0x2f8
	FMulticastInlineDelegate OnBreakingEvents; // 0x308
	FMulticastInlineDelegate OnTrailingEvents; // 0x318
};

struct USGBattleGamePlayData : UObject {
	TArray<FBattleGamePlayData> AllBattleGamePlayData; // 0x28
};

struct UStructureInfoHUD : UActorInfoHUD {
	UCanvasPanel* RepairCanvas; // 0x278
	UTextBlock* RepairText; // 0x280
	UTextBlock* NameText; // 0x288
	UVerticalBox* InfoVerticalBox; // 0x290
	UVerticalBox* RepairVerticalBox; // 0x298
	UStructureInfoHUDSlot* HPText; // 0x2a0
	UStructureInfoHUDSlot* GuildText; // 0x2a8
	UStructureInfoHUDSlot* OwnerText; // 0x2b0
	UStructureInfoHUDSlot* SkillText; // 0x2b8
	UStructureInfoHUDSlot* DecomposesText; // 0x2c0
	UStructureInfoHUDSlot* DecayText; // 0x2c8
	UStructureInfoHUDSlot* TenacityText; // 0x2d0
	UStructureInfoHUDSlot* UserText; // 0x2d8
	UStructureInfoHUDSlot* OreText; // 0x2e0
	UStructureInfoHUDSlot* AuthorityText; // 0x2e8
	UStructureInfoHUDSlot* AIAttackTargetName; // 0x2f0
	UStructureInfoHUDSlot* StatusText; // 0x2f8
	TArray<UStructureInfoHUDSlot*> RepairTextList; // 0x300
	TWeakObjectPtr<ASGStructure> BindStructure; // 0x310
	FLinearColor FriendColor; // 0x318
	FLinearColor NeutralColor; // 0x328
	FLinearColor EnemyColor; // 0x338
	UStructureInfoHUDSlot* StructureInfoHUDSlot; // 0x348
	FLinearColor DecayColor; // 0x350
};

struct UAnimationAsset : UObject {
	USkeleton* Skeleton; // 0x38
	TArray<UAnimMetaData*> MetaData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct USoundSourceBus : USoundWave {
	ESourceBusChannels SourceBusChannels; // 0x370
	float SourceBusDuration; // 0x374
	UAudioBus* AudioBus; // 0x378
	char bAutoDeactivateWhenSilent : 1; // 0x380
};

struct URichTextBlock : UTextLayoutWidget {
	FText Text; // 0x128
	UDataTable* TextStyleSet; // 0x140
	TArray<URichTextBlockDecorator*> DecoratorClasses; // 0x148
	bool bOverrideDefaultStyle; // 0x158
	FTextBlockStyle DefaultTextStyleOverride; // 0x160
	float MinDesiredWidth; // 0x3d0
	ETextTransformPolicy TextTransformPolicy; // 0x3d4
	FTextBlockStyle DefaultTextStyle; // 0x3d8
	TArray<URichTextBlockDecorator*> InstanceDecorators; // 0x648
};

struct UMovieSceneSequence : UMovieSceneSignedObject {
	UMovieSceneCompiledData* CompiledData; // 0x50
	EMovieSceneCompletionMode DefaultCompletionMode; // 0x58
	bool bParentContextsAreSignificant; // 0x59
	bool bPlayableDirectly; // 0x5a
	EMovieSceneSequenceFlags SequenceFlags; // 0x5b
};

struct UMaterialExpressionArccosine : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UPrefabToolSettings : UObject {
	bool bReplaceActorsWithCreatedPrefab; // 0x28
	bool bAutoIncludeAttachedActorsWhenCreateNewPrefab; // 0x29
	bool bNestedPrefabSupport; // 0x2a
	bool bRestorePrefabActorCollapseStatusAfterPIE; // 0x2b
	bool bCollapseAllPrefabActorsAfterMapOpened; // 0x2c
	bool bMoveActorsInWorldAfterSetPrefabPivot; // 0x2d
	bool bDuplicateNoRevertWithOffset; // 0x2e
	FString NewPrefabNamePattern; // 0x30
	EPTUITheme UITheme; // 0x40
	bool bUpdateAllPrefabActorsWhenOpenMap; // 0x44
	bool bCheckPrefabChangeBeforeUpdateAllPrefabActorsWhenOpenMap; // 0x45
	bool bUpdateAllPrefabActorsWhenApply; // 0x46
	bool bApplyToNestedPrefab; // 0x47
	bool bEnableApplyFromDisconnectedPrefabActor; // 0x48
	bool bAutoAddRemoveVariantActorPrefix; // 0x49
	FString VariantActorPrefix; // 0x50
	bool bEnablePrefabComponentVisualizer; // 0x60
	EPrefabVisualizerType PrefabComponentVisualizerType; // 0x61
	bool bDisplayPrefabComponentVisualizerEvenNotSelected; // 0x62
	FColor PrefabViewVisualizerColor; // 0x64
	FColor TargetActorColor; // 0x68
	FColor UnLockedConnectedColor; // 0x6c
	FColor LockedConnectedColor; // 0x70
	FColor UnLockedDisConnectedColor; // 0x74
	FColor LockedDisConnectedColor; // 0x78
	FColor UnLockedNoPrefabAssignedColor; // 0x7c
	FColor LockedNoPrefabAssignedColor; // 0x80
	FSoftObjectPath PrefabMaterialPath; // 0x88
	bool bShadedPrefabViewVisualizer; // 0xc8
	bool bLockPrefabSelectionByDefault; // 0xc9
	bool bDisableLockPrefabSelectionFeature; // 0xca
	bool bForceApplyPerInstanceVertexColor; // 0xcb
	bool bHideChildActorsInPIEIfHiddenInEditor; // 0xcc
	bool bCanToggleChildActorVisibilityInPIE; // 0xcd
	bool bIgnoreLayersInPrefab; // 0xcf
	bool bSupportGenerateBlueprint; // 0xd0
	bool bHarvestComponentsWhenGeneratingBlueprint; // 0xd1
	bool bUseActorNameAsVariableNameWhenGeneratingBlueprint; // 0xd2
	bool bForceMobilityToMovableWhenGeneratingBlueprint; // 0xd3
	TArray<AActor*> IgnoreActorClassesWhenGeneratingBlueprint; // 0xd8
	TArray<FName> IgnoreActorTagsWhenGeneratingBlueprint; // 0xe8
	bool bFlashPrefabWindowForTargetPrefabActor; // 0xf8
	bool bEnablePrefabTextEditor; // 0xf9
	bool bDebugMode; // 0xfa
	bool bDisableThumbnailRender; // 0xfb
	bool bShowPrefabInstanceTagInPrefabToolWindow; // 0xfc
};

struct UAISubsystem : UObject {
	UAISystem* AISystem; // 0x30
};

struct UDatasmithCommonTessellationOptions : UDatasmithOptionsBase {
	FDatasmithTessellationOptions Options; // 0x28
};

struct UMaterialExpressionSkyAtmosphereLightIlluminance : UMaterialExpression {
	int32_t LightIndex; // 0x40
	FExpressionInput WorldPosition; // 0x44
};

struct UMovieSceneSequencePlayer : UObject {
	FMulticastInlineDelegate OnPlay; // 0x418
	FMulticastInlineDelegate OnPlayReverse; // 0x428
	FMulticastInlineDelegate OnStop; // 0x438
	FMulticastInlineDelegate OnPause; // 0x448
	FMulticastInlineDelegate OnFinished; // 0x458
	EMovieScenePlayerStatus Status; // 0x468
	char bReversePlayback : 1; // 0x46c
	UMovieSceneSequence* Sequence; // 0x470
	FFrameNumber StartTime; // 0x478
	int32_t DurationFrames; // 0x47c
	float DurationSubFrames; // 0x480
	int32_t CurrentNumLoops; // 0x484
	FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x488
	FMovieSceneRootEvaluationTemplateInstance RootTemplateInstance; // 0x4a0
	FMovieSceneSequenceReplProperties NetSyncProps; // 0x5f0
	TScriptInterface<IMovieScenePlaybackClient> PlaybackClient; // 0x600
	UMovieSceneSequenceTickManager* TickManager; // 0x610
};

struct UAbilityTask_WaitGameplayEvent : UAbilityTask {
	FMulticastInlineDelegate EventReceived; // 0x80
	UAbilitySystemComponent* OptionalExternalTarget; // 0x98
};

struct ACameraRig_Rail : AActor {
	float CurrentPositionOnRail; // 0x310
	bool bLockOrientationToRail; // 0x314
	USceneComponent* TransformComponent; // 0x318
	USplineComponent* RailSplineComponent; // 0x320
	USceneComponent* RailCameraMount; // 0x328
};

struct UMaterialExpressionArctangentFast : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct UBoxFalloff : UFieldNodeFloat {
	float Magnitude; // 0xc0
	float MinRange; // 0xc4
	float MaxRange; // 0xc8
	float Default; // 0xcc
	FTransform Transform; // 0xd0
	EFieldFalloffType Falloff; // 0x100
};

struct UNiagaraPreviewAxis_InterpParamVector : UNiagaraPreviewAxis_InterpParamBase {
	FVector Min; // 0x38
	FVector Max; // 0x44
};

struct UNiagaraDataInterfaceGrid2DCollection : UNiagaraDataInterfaceGrid2D {
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0xf8
	ENiagaraGpuBufferFormat OverrideBufferFormat; // 0x118
	char bOverrideFormat : 1; // 0x119
	TMap<uint64_t, UTextureRenderTarget2DArray*> ManagedRenderTargets; // 0x170
};

struct UStructureFrameInfoHUD : UStructureInfoHUD {
	TWeakObjectPtr<ASGStructureFrame> BindStructureFrame; // 0x360
	UCanvasPanel* FrameCanvas; // 0x368
	UVerticalBox* FrameVerticalBox; // 0x370
	int32_t StepIndex; // 0x378
	TArray<FName> CurrentStepCreatedMesh; // 0x380
	TArray<UStructureInfoHUDSlot*> FrameTextList; // 0x390
};

struct UUI_GuildEvent : USGUI {
	UGuildEventColumn* GuildEventColumnTemplate; // 0x2d8
	TSoftObjectPtr<UTexture2D> IconBrush[0x7]; // 0x2e0
	TSoftObjectPtr<UTexture2D> UnknownIconBrush; // 0x3f8
	TSoftObjectPtr<UTexture2D> TypeIconBrush[0x7]; // 0x420
	TSoftObjectPtr<UTexture2D> UnknownTypeIconBrush; // 0x538
	FString RecordTextColor[0x10]; // 0x560
	int32_t EventRecordCount; // 0x660
	UMaterialInterface* ConflictMaterial; // 0x668
	FLinearColor ConflictMatColor; // 0x670
	UCanvasPanel* GuildEventPanel; // 0x680
	UScrollBox* GuildEventScrollBox; // 0x688
	UCanvasPanel* DetailPanel; // 0x690
	UCanvasPanel* LoadingCanvas; // 0x698
	UButton* ReturnBtn; // 0x6a0
	UImage* IconImg; // 0x6a8
	UImage* TypeIconImg; // 0x6b0
	UTextBlock* EventGuildTypeText; // 0x6b8
	UImage* ConflictImg; // 0x6c0
	UTextBlock* ConflictTb; // 0x6c8
	UTextBlock* DescriptionTb; // 0x6d0
	UScrollBox* EventRecordScrollBox; // 0x6d8
	URichTextBlock* RtbEventRecord; // 0x6e0
	UCanvasPanel* GuileEventDialogPanel; // 0x6e8
	UButton* DialogCloseBtn; // 0x6f0
	UButton* DialogConfirmBtn; // 0x6f8
	TArray<FGuildEventRecord> CurRecords; // 0x700
	int32_t CurEventRecordBeginIndex; // 0x710
	int32_t CurEventRecordEndIndex; // 0x714
	EEventGuildType CurEventGuildType; // 0x718
};

struct UDatasmithCineCameraComponentTemplate : UDatasmithObjectTemplate {
	FDatasmithCameraFilmbackSettingsTemplate FilmbackSettings; // 0x30
	FDatasmithCameraLensSettingsTemplate LensSettings; // 0x38
	FDatasmithCameraFocusSettingsTemplate FocusSettings; // 0x3c
	float CurrentFocalLength; // 0x44
	float CurrentAperture; // 0x48
	FDatasmithPostProcessSettingsTemplate PostProcessSettings; // 0x50
};

struct UPhononProbeComponent : USceneComponent {
	TArray<FVector> ProbeLocations; // 0x208
};

struct USoundNodeMixer : USoundNode {
	TArray<float> InputVolume; // 0x48
};

struct ASGDestructibleActor : ADestructibleActor {
	char bCheckLocalPlayer : 1; // 0x328
	char bUseDissolve : 1; // 0x328
	float DissolveDuration; // 0x32c
	float DissolveStartTime; // 0x330
	float MinDistanceFormPlayerShouldDestroy; // 0x334
	float CheckLocalPlayerInterval; // 0x338
	double LastCheckLocalPlayerTime; // 0x340
	TArray<UMaterialInstanceDynamic*> DissolvesMeshMats; // 0x348
};

struct UWBP_SwitchSystemSetting_C : UUI_SystemSettingPanel {
	UWBP_SystemSettingCheckBox_C* bCraftPerkSwitch; // 0x290
	UWBP_SystemSettingCheckBox_C* bGuildEventSwitch; // 0x298
	UWBP_SystemSettingCheckBox_C* bGuildSwitch; // 0x2a0
	UWBP_SystemSettingCheckBox_C* bHorseEventSwitch; // 0x2a8
	UWBP_SystemSettingCheckBox_C* bMailSwitch; // 0x2b0
	UWBP_SystemSettingCheckBox_C* bQuestSwitch; // 0x2b8
	UImage* TitleImage; // 0x2c0
};

struct UMaterialExpressionConstantBiasScale : UMaterialExpression {
	FExpressionInput Input; // 0x40
	float Bias; // 0x54
	float Scale; // 0x58
};

struct USpotLightComponent : UPointLightComponent {
	float InnerConeAngle; // 0x368
	float OuterConeAngle; // 0x36c
};

struct UBoneMaskFilter : UObject {
	TArray<FInputBlendPose> BlendPoses; // 0x28
};

struct UMiniMapPOI_Self : UMiniMapPOI_Character {
	UCanvasPanel* LightCanvas; // 0x3c0
	UCanvasPanel* OutCanvas; // 0x3c8
};

struct UScalabilityDetailItem : UUserWidget {
	UUI_SystemSetting* RootUI; // 0x260
	EScalabilityDetailType BindScalabilityDetailType; // 0x268
	FString BindVariable; // 0x270
	FScalabilitySettingsValue BindScalabilitySettingsValue; // 0x280
	FScalabilitySettingsConfig BindScalabilitySettingsConfig; // 0x2b0
	USGGameUserSettings* SGGameUserSettings; // 0x2d8
};

struct UAnimSequenceBase : UAnimationAsset {
	TArray<FAnimNotifyEvent> Notifies; // 0x80
	float SequenceLength; // 0x90
	float RateScale; // 0x94
	FRawCurveTracks RawCurveData; // 0x98
};

struct UMaterialExpressionDDY : UMaterialExpression {
	FExpressionInput Value; // 0x40
};

struct UUI_MainMenuPicLink : UUserWidget {
	UImage* LogoImg; // 0x260
};

struct UUI_TransportMachineGeneral : USGUI {
	UUI_TransportGeneralItem* TransportGeneralItemTemplate; // 0x2f8
	UScrollBox* ScrollLevelList; // 0x308
	UScrollBox* ScrollDBList; // 0x310
	UButton* BtnTotalAdd; // 0x338
	UButton* BtbTotalRemove; // 0x340
	UButton* BtnSelectedAdd; // 0x348
	UButton* BtbSelectedRemove; // 0x350
	UTextBlock* TbChunkNum; // 0x358
};

struct UParticleModuleMeshMaterial : UParticleModuleMaterialBase {
	TArray<UMaterialInterface*> MeshMaterials; // 0x30
};

struct UMaterialInterface : UObject {
	USubsurfaceProfile* SubsurfaceProfile; // 0x38
	FLightmassMaterialInterfaceSettings LightmassSettings; // 0x50
	TArray<FMaterialTextureInfo> TextureStreamingData; // 0x60
	TArray<UAssetUserData*> AssetUserData; // 0x70
};

struct UMaterialExpressionThinTranslucentMaterialOutput : UMaterialExpressionCustomOutput {
	FExpressionInput TransmittanceColor; // 0x40
};

struct APartyBeaconHost : AOnlineBeaconHostObject {
	UPartyBeaconState* State; // 0x338
	bool bLogoutOnSessionTimeout; // 0x3a0
	float SessionTimeoutSecs; // 0x3a4
	float TravelSessionTimeoutSecs; // 0x3a8
};

struct UGameplayEffectCalculation : UObject {
	TArray<FGameplayEffectAttributeCaptureDefinition> RelevantAttributesToCapture; // 0x28
};

struct UIntervalGizmo : UInteractiveGizmo {
	UGizmoTransformChangeStateTarget* StateTarget; // 0x38
	UTransformProxy* TransformProxy; // 0x50
	TArray<UPrimitiveComponent*> ActiveComponents; // 0x58
	TArray<UInteractiveGizmo*> ActiveGizmos; // 0x68
	UGizmoComponentAxisSource* AxisYSource; // 0x90
	UGizmoComponentAxisSource* AxisZSource; // 0x98
};

struct AFishingRod : AShooterWeapon {
	UCableComponent* CableComponent; // 0x7ab0
	UStaticMeshComponent* HookRootComponent; // 0x7ab8
	UStaticMeshComponent* HookComponent; // 0x7ac0
	USceneComponent* HandlePointComponent; // 0x7ac8
	USplineComponent* CastLineComponent; // 0x7ad0
	USceneComponent* HookPointComponent; // 0x7ad8
	EFishingPodState FishingPodState; // 0x7ae0
	int32_t ConsumedDurableEveryCast; // 0x7af0
	float CastWaterDepth; // 0x7af4
	float CastMinTime; // 0x7af8
	float CastMaxTime; // 0x7afc
	float CastMinDist; // 0x7b00
	float CastMaxDist; // 0x7b04
	FVector CastTargetLocation; // 0x7b08
	float CastSpeed; // 0x7b14
	float CharacterMoveDistToReel; // 0x7b24
	float CharacterMoveYawToReel; // 0x7b28
	USGItem* ConsumedBaitType; // 0x7b30
	float ReelSpeedRatio; // 0x7b3c
	float ReelWaitTotalTime; // 0x7b44
	float WaitFishParamA; // 0x7b58
	float WaitFishParamB; // 0x7b5c
	float ResourceParam; // 0x7b60
	char bUsingResourceParamForTest : 1; // 0x7b64
	float FishStruggleMinTime; // 0x7b68
	float FishStruggleMaxTime; // 0x7b6c
	float CatchFishRatio; // 0x7b70
	float BobRandomRange; // 0x7b7c
	float NoFishReelingMontageRate; // 0x7b88
	float CableRatio; // 0x7b8c
	float ReelCableRatio; // 0x7b90
	AStaticMeshFloatingActor* BobActorClass; // 0x7b98
	float RestBobVelocityZ; // 0x7ba8
	FName CatchFishSocket; // 0x7bb8
	USoundBase* FishEatingSound; // 0x7bc0
	TWeakObjectPtr<USGAudioComponent> AudioComponent; // 0x7bc8
};

struct USGAssetManager : UAssetManager {
	TArray<FAssetStatus> AssetStatuses; // 0x458
};

struct AWaterBodyOcean : AWaterBody {
	UOceanGenerator* OceanGenerator; // 0xee0
	FVector CollisionExtents; // 0xee8
	float HeightOffset; // 0xef4
};

struct UClothPhysicalMeshDataBase_Legacy : UObject {
	TArray<FVector> Vertices; // 0x28
	TArray<FVector> Normals; // 0x38
	TArray<uint32_t> Indices; // 0x48
	TArray<float> InverseMasses; // 0x58
	TArray<FClothVertBoneData> BoneData; // 0x68
	int32_t NumFixedVerts; // 0x78
	int32_t MaxBoneWeights; // 0x7c
	TArray<uint32_t> SelfCollisionIndices; // 0x80
};

struct UUI_PrivateSessionListRow : UUserWidget {
	TSoftObjectPtr<UTexture2D> NormalRowTexture; // 0x260
	TSoftObjectPtr<UTexture2D> HoverRowTexture; // 0x288
	TSoftObjectPtr<UTexture2D> SelectRowTexture; // 0x2b0
	TSoftObjectPtr<UTexture2D> FavoriteTexture; // 0x2d8
	TSoftObjectPtr<UTexture2D> NotFavoriteTexture; // 0x300
	UDataTable* MapConfigDataTable; // 0x328
	TMap<int32_t, FLinearColor> PingMsColor; // 0x330
	UImage* ImgHasPassword; // 0x380
	UTextBlock* TbSessionName; // 0x388
	UTextBlock* TbMapName; // 0x390
	UTextBlock* TbPVPType; // 0x398
	UTextBlock* TbVersion; // 0x3a0
	UTextBlock* TbMOD; // 0x3a8
	UTextBlock* TbPlayerNum; // 0x3b0
	UTextBlock* TbMaxPlayerNum; // 0x3b8
	UTextBlock* TbPingMS; // 0x3c0
	UButton* BtnFavorites; // 0x3c8
	UImage* ImgFavorites; // 0x3d0
	UButton* BtnDescription; // 0x3d8
	UButton* BtnBg; // 0x3e0
	UImage* ImgBg; // 0x3e8
	FMulticastInlineDelegate OnPrivateSessionListRowClicked; // 0x3f0
	FMulticastInlineDelegate OnPrivateSessionListRowDescriptionClicked; // 0x400
	FMulticastInlineDelegate OnPrivateSessionListRowFavoriteClicked; // 0x410
	int32_t BindServerInfoIndex; // 0x420
	char bHovered : 1; // 0x424
	char bSelected : 1; // 0x424
	char bFavorite : 1; // 0x424
};

struct UAchievementProgress : UUserWidget {
	UTextBlock* TbName; // 0x260
	UTextBlock* TbCurNum; // 0x268
	UTextBlock* TbTotalNum; // 0x270
	UUI_Achievement* RootUI; // 0x278
	FString BindAchievementType; // 0x280
};

struct UNavigationQueryFilter : UObject {
	TArray<FNavigationFilterArea> Areas; // 0x28
	FNavigationFilterFlags IncludeFlags; // 0x38
	FNavigationFilterFlags ExcludeFlags; // 0x3c
};

struct UMaterialExpressionTextureCoordinate : UMaterialExpression {
	int32_t CoordinateIndex; // 0x40
	float UTiling; // 0x44
	float VTiling; // 0x48
	char UnMirrorU : 1; // 0x4c
	char UnMirrorV : 1; // 0x4c
};

struct URotatingMovementComponent : UMovementComponent {
	FRotator RotationRate; // 0x100
	FVector PivotTranslation; // 0x10c
	char bRotationInLocalSpace : 1; // 0x118
};

struct UMaterialExpressionDivide : UMaterialExpression {
	FExpressionInput A; // 0x40
	FExpressionInput B; // 0x54
	float ConstA; // 0x68
	float ConstB; // 0x6c
};

struct ASGStructureDrum : ASGStructureSeat {
	USGBuff* PlayerPromoteBuff; // 0xf70
	TArray<FRotator> SeatRotationOffset; // 0xf78
	TArray<FName> CameraSocketName; // 0xf88
	float DrumEffetRadius; // 0xf98
	int32_t DrumRefreshInterval; // 0xfa8
	TArray<TWeakObjectPtr<ASGCharacter>> ActivePlayerArray; // 0xfb0
	char bCanNPCHelp : 1; // 0xfc0
	TArray<ABaseCharacter*> AllowNpcControlClass; // 0xfc8
};

struct USGBuff : UObject {
	FName BuffID; // 0x28
	TWeakObjectPtr<USGBuffComponent> OwnerBuffComponent; // 0x30
	EBuffAddType BuffAddType; // 0x38
	bool RespawnRemove; // 0x39
	bool bBeginPlayRemove; // 0x3a
	bool bResetBattleRemove; // 0x3b
	bool bLifeTimeInDead; // 0x3c
	float LifeTime; // 0x40
	int64_t LifeOverDateTimeTick; // 0x48
	float LifeTimeMax; // 0x50
	float LifeTimeInterval; // 0x54
	bool NeedTick; // 0x58
	bool NeedCheckOnwerIsNovice; // 0x59
	float TickTimeInterval; // 0x5c
	bool bIsInfinite; // 0x60
	TSoftObjectPtr<UTexture2D> BuffIcon; // 0x68
	char DisplayIcon : 1; // 0x90
	char NotDisplayIconInGameUI : 1; // 0x90
	char DisplayDuration : 1; // 0x90
	char DisplayPriority; // 0x91
	FText BuffName; // 0x98
	FText Description; // 0xb0
	FString Param1; // 0xc8
	FString Param2; // 0xd8
	FString Param3; // 0xe8
	FString Param4; // 0xf8
	FString Param5; // 0x108
	EBuffDamageType BuffDamageType; // 0x118
	float DamageInterval; // 0x11c
	float DamageValue; // 0x120
	FMakeDamageOnceTypeInfo MakeDamageOnceTypeInfo; // 0x124
	char bAddBuffOverrideDamage : 1; // 0x130
	UMaterialInstance* BuffPostProcess; // 0x138
	int32_t Level; // 0x140
	TArray<FModifyData> ModifyData; // 0x148
	TArray<float> WoundValue; // 0x158
	TArray<FLearnPerkToReplaceBuff> ReplaceBuff; // 0x168
	UParticleSystem* BuffParticle; // 0x178
	FName ParticlePoint; // 0x180
	char bBurnEffectMaterial : 1; // 0x188
	char bBloodEffectMaterial : 1; // 0x188
	TArray<USGBuff*> RemoveBuffs; // 0x190
	TArray<USGBuff*> ImmunityBuffs; // 0x1a0
	TWeakObjectPtr<AActor> BuffCreater; // 0x1b0
	TWeakObjectPtr<ABaseCharacter> BuffCreaterCharacter; // 0x1b8
	FVector HitLocation; // 0x1c0
	EBuffFormType FromType; // 0x1cc
	int32_t BuffLevel; // 0x1d0
	EBuffType BuffType; // 0x1d4
	char bSignFlag : 1; // 0x1d5
	float ModifyWoundValues[0x3]; // 0x290
};

struct UMovieSceneCameraShakeTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraShakeSections; // 0x80
};

struct UInputTouchDelegateBinding : UInputDelegateBinding {
	TArray<FBlueprintInputTouchDelegateBinding> InputTouchDelegateBindings; // 0x28
};

struct UMovieSceneCameraAnimTrack : UMovieSceneNameableTrack {
	TArray<UMovieSceneSection*> CameraAnimSections; // 0x80
};

struct UVoxelMorphologyMeshesTool : UBaseVoxelTool {
	UVoxelMorphologyMeshesToolProperties* MorphologyProperties; // 0x108
};

struct ASGStructureCrop : ASGStructureCropBase {
	float PlantSoilLoose; // 0xbe0
	float WaterConsumeTotal; // 0xbe4
	float NFertilizerConsumeTotal; // 0xbe8
	float PFertilizerConsumeTotal; // 0xbec
	float KFertilizerConsumeTotal; // 0xbf0
	USGItem* SeedProductionItem; // 0xbf8
	float SeedMinProduction; // 0xc00
	float SeedMaxProduction; // 0xc04
	TArray<FCropRipePhaseData> CropRipePhaseData; // 0xc08
	TArray<FHighQualitySeedData> HighQualitySeed; // 0xc18
	UStaticMesh* RootStaticMesh; // 0xc28
	float TotalNRootFertilizer; // 0xc30
	float TotalPRootFertilizer; // 0xc34
	float TotalKRootFertilizer; // 0xc38
	int32_t RootToFertilizerTimes; // 0xc3c
	float CorruptTime; // 0xc40
};

struct ABP_HorseMC_C : ASG_HorseCharacter {
	FPointerToUberGraphFrame UberGraphFrame; // 0x3c20
	UParticleSystemComponent* Eff_Oth_Smoke_Trail_V0; // 0x3c28
};

struct UPlayer : UObject {
	APlayerController* PlayerController; // 0x30
	int32_t CurrentNetSpeed; // 0x38
	int32_t ConfiguredInternetSpeed; // 0x3c
	int32_t ConfiguredLanSpeed; // 0x40
};

struct UN_DraggedItem : UUserWidget {
	UImage* icon; // 0x260
	UTexture2D* IconTexture; // 0x268
	int32_t NumLabelInt; // 0x270
	TWeakObjectPtr<USGItem> BindItem; // 0x274
	int32_t ItemIndex; // 0x27c
	int32_t ItemAmount; // 0x280
};

struct USGGameDataAllHorse : UObject {
	TArray<ASG_AnimalsCharacter*> CheatVehicleNPC; // 0x28
};

struct USourceEffectEQPreset : USoundEffectSourcePreset {
	FSourceEffectEQSettings Settings; // 0xa0
};

struct UVehicleEquipPanel : UUserWidget {
	char bOverrideShowPosition : 1; // 0x260
	char bShowLeft : 1; // 0x260
	TMap<EVehicleType, FVehiclePreviewWidgetOverride> PreviewWidgetOverrideConfigs; // 0x268
	TSoftObjectPtr<UTexture2D> CastratedTexture; // 0x2b8
	TSoftObjectPtr<UTexture2D> SexFemaleTexture; // 0x2e0
	TSoftObjectPtr<UTexture2D> SexMaleTexture; // 0x308
	TMap<EGeneralsQualityType, float> QualityCorrectionToQualityType; // 0x330
	TSoftObjectPtr<UTexture2D> VehicleQualityTexture[0x6]; // 0x380
	FLinearColor VehicleQualityColor[0x6]; // 0x470
	float RealNamePerkPositionOriginY; // 0x4d0
	float InventorySlotHeight; // 0x4d4
	UCanvasPanel* AllCanvasPanel; // 0x4d8
	UBorder* VehicleQualityBGBorder; // 0x4e0
	UImage* VehicleQualityImage; // 0x4e8
	UImage* VehicleRealNameImage; // 0x4f0
	UComboBoxString* RealNameComboBox; // 0x4f8
	UTextBlock* VehicleName; // 0x500
	UImage* VehicleSexImg; // 0x508
	UButton* ChangeNameButton; // 0x510
	UTextBlock* VehicleLevel; // 0x518
	UTextBlock* VehicleExp; // 0x520
	UCanvasPanel* ExpProgressPanel; // 0x528
	UProgressBar* VehicleExpProgress; // 0x530
	UTextBlock* VehicleVariation; // 0x538
	UN_EquipPanel* EquipPanel; // 0x540
	UCanvasPanel* RealNamePerkPanel; // 0x548
	UVehiclePerkSlot* EquipRealNamePerkSlot; // 0x550
	UVehicleACPanel* VehicleACPanel; // 0x558
	USizeBox* CastratedSizeBox; // 0x560
	char bIsInit : 1; // 0x568
	USGUI* ParentUI; // 0x570
	char bEquipSlotAllowDrag : 1; // 0x578
	TWeakObjectPtr<ASG_AnimalVehicleCharacter> BindVehicleCharacter; // 0x57c
};

struct UParticleModuleLocation : UParticleModuleLocationBase {
	FRawDistributionVector StartLocation; // 0x30
	float DistributeOverNPoints; // 0x78
	float DistributeThreshold; // 0x7c
};

struct APhononProbeVolume : AVolume {
	EPhononProbePlacementStrategy PlacementStrategy; // 0x348
	float HorizontalSpacing; // 0x34c
	float HeightAboveFloor; // 0x350
	int32_t NumProbes; // 0x354
	int32_t ProbeDataSize; // 0x358
	TArray<FBakedDataInfo> BakedDataInfo; // 0x360
	UPhononProbeComponent* PhononProbeComponent; // 0x370
	FString ProbeBoxFileName; // 0x378
	FString ProbeBatchFileName; // 0x388
};

struct USafeZoneSlot : UPanelSlot {
	bool bIsTitleSafe; // 0x38
	FMargin SafeAreaScale; // 0x3c
	EHorizontalAlignment HAlign; // 0x4c
	EVerticalAlignment VAlign; // 0x4d
	FMargin Padding; // 0x50
};

struct UEditableGameplayTagQueryExpression_NoTagsMatch : UEditableGameplayTagQueryExpression {
	FGameplayTagContainer Tags; // 0x28
};

struct UInterpTrackDirector : UInterpTrack {
	TArray<FDirectorTrackCut> CutTrack; // 0x70
	char bSimulateCameraCutsOnClients : 1; // 0x80
};

struct UAbilityTask_StartAbilityState : UAbilityTask {
	FMulticastInlineDelegate OnStateEnded; // 0x80
	FMulticastInlineDelegate OnStateInterrupted; // 0x90
};

struct UARPoseComponent : UARComponent {
	FARPoseUpdatePayload ReplicatedPayload; // 0x290
};

struct UWBP_AudioSettingSliderItem_C : USystemSettingItem {
	FPointerToUberGraphFrame UberGraphFrame; // 0x368
	UCanvasPanel* CanvasPanel_22; // 0x370
	UImage* ImgScrollBg; // 0x378
	USlider* Slider; // 0x380
	UTextBlock* TbTitle; // 0x388
	UTextBlock* TbValue; // 0x390
	FText Name; // 0x398
	float StepSize; // 0x3b0
	bool AsPercent; // 0x3b4
};

struct ASGStructureHorseAttachment : ASGStructureSeat {
	USkeletalMeshComponent* SkeletalMesh; // 0xf70
	char bCanUseForHorse : 1; // 0xf78
	USGItem* AttachPlatformItem; // 0xf80
	float SearchCharacterInterval; // 0xf88
	float SearchCharacterRadius; // 0xf8c
	FName AttachHorseSocketName; // 0xf90
	TMap<EAnimalsMovingGaitType, FCardinalDirectionSpeedConfig> HorseMoveGaitSetting; // 0xfb0
};

struct UMaterialExpressionClamp : UMaterialExpression {
	FExpressionInput Input; // 0x40
	FExpressionInput Min; // 0x54
	FExpressionInput Max; // 0x68
	EClampMode ClampMode; // 0x7c
	float MinDefault; // 0x80
	float MaxDefault; // 0x84
};

struct UMaterialExpressionDepthOfFieldFunction : UMaterialExpression {
	EDepthOfFieldFunctionValue FunctionValue; // 0x40
	FExpressionInput Depth; // 0x44
};

struct UMovieSceneByteTrack : UMovieScenePropertyTrack {
	UEnum* Enum; // 0xb0
};

struct UProceduralCylinderToolProperties : UProceduralShapeToolProperties {
	float Radius; // 0x70
	float Height; // 0x74
	int32_t RadialSlices; // 0x78
	int32_t HeightSubdivisions; // 0x7c
};

struct UMaterialExpressionSceneTexture : UMaterialExpression {
	FExpressionInput Coordinates; // 0x40
	ESceneTextureId SceneTextureId; // 0x54
	bool bFiltered; // 0x55
};

struct UItemAuctionOrderSlot : USGUI {
	UImage* IconImage; // 0x2d8
	UTextBlock* NameText; // 0x2e0
	UTextBlock* OrderNameText; // 0x2e8
	UTextBlock* OrderCountText; // 0x2f0
	UTextBlock* OrderPriceText; // 0x2f8
	UTextBlock* OrderTimeText; // 0x300
	UCanvasPanel* CanvasPanel_Template; // 0x308
	UCanvasPanel* CanvasPanel_Order; // 0x310
	UButton* ButtonSelected; // 0x318
	FButtonStyle ButtonCheckedStyle; // 0x320
	FButtonStyle ButtonUnCheckedStyle; // 0x598
	TWeakObjectPtr<UItemAuctionOrderPanel> ParentUI; // 0x810
};

struct USelectWidgetSlot : USGUI {
	UImage* Image0; // 0x2e8
	UImage* Image1; // 0x2f0
	UImage* Image2; // 0x2f8
	UImage* UnlockImage; // 0x300
	UBorder* OutBorder; // 0x308
	TSoftObjectPtr<UTexture2D> OutBorderNormalTexture; // 0x310
	TSoftObjectPtr<UTexture2D> OutBorderHoverTexture; // 0x338
	TSoftObjectPtr<UTexture2D> OutBorderSelectTexture; // 0x360
	char bUseTooltips : 1; // 0x388
	USGToolTipWidget* TooltipsClass; // 0x390
	USGUI* RootSGUI; // 0x398
	TWeakObjectPtr<USGInventoryComponent> BindInventory; // 0x3a0
};

struct USGDoubleSelectSlider : UWidget {
	FMulticastInlineDelegate OnLeftValueChanged; // 0x108
	FMulticastInlineDelegate OnRightValueChanged; // 0x118
	FSlateBrush ProcessImage; // 0x128
	FSlateBrush LeftImage; // 0x1b0
	FSlateBrush RightImage; // 0x238
	float LeftValue; // 0x2c0
	float RightValue; // 0x2c4
};

struct UUI_GameNotice : USGUI {
	UButton* ButtonClose; // 0x2d8
};

struct UNiagaraDataInterfaceChaosDestruction : UNiagaraDataInterface {
	TSet<AChaosSolverActor*> ChaosSolverActorSet; // 0x38
	EDataSourceTypeEnum DataSourceType; // 0x88
	int32_t DataProcessFrequency; // 0x8c
	int32_t MaxNumberOfDataEntriesToSpawn; // 0x90
	bool DoSpawn; // 0x94
	FVector2D SpawnMultiplierMinMax; // 0x98
	float SpawnChance; // 0xa0
	FVector2D ImpulseToSpawnMinMax; // 0xa4
	FVector2D SpeedToSpawnMinMax; // 0xac
	FVector2D MassToSpawnMinMax; // 0xb4
	FVector2D ExtentMinToSpawnMinMax; // 0xbc
	FVector2D ExtentMaxToSpawnMinMax; // 0xc4
	FVector2D VolumeToSpawnMinMax; // 0xcc
	FVector2D SolverTimeToSpawnMinMax; // 0xd4
	int32_t SurfaceTypeToSpawn; // 0xdc
	ELocationFilteringModeEnum LocationFilteringMode; // 0xe0
	ELocationXToSpawnEnum LocationXToSpawn; // 0xe1
	FVector2D LocationXToSpawnMinMax; // 0xe4
	ELocationYToSpawnEnum LocationYToSpawn; // 0xec
	FVector2D LocationYToSpawnMinMax; // 0xf0
	ELocationZToSpawnEnum LocationZToSpawn; // 0xf8
	FVector2D LocationZToSpawnMinMax; // 0xfc
	EDataSortTypeEnum DataSortingType; // 0x104
	bool bGetExternalCollisionData; // 0x105
	bool DoSpatialHash; // 0x106
	FVector SpatialHashVolumeMin; // 0x108
	FVector SpatialHashVolumeMax; // 0x114
	FVector SpatialHashVolumeCellSize; // 0x120
	int32_t MaxDataPerCell; // 0x12c
	bool bApplyMaterialsFilter; // 0x130
	TSet<UPhysicalMaterial*> ChaosBreakingMaterialSet; // 0x138
	bool bGetExternalBreakingData; // 0x188
	bool bGetExternalTrailingData; // 0x189
	FVector2D RandomPositionMagnitudeMinMax; // 0x18c
	float InheritedVelocityMultiplier; // 0x194
	ERandomVelocityGenerationTypeEnum RandomVelocityGenerationType; // 0x198
	FVector2D RandomVelocityMagnitudeMinMax; // 0x19c
	float SpreadAngleMax; // 0x1a4
	FVector VelocityOffsetMin; // 0x1a8
	FVector VelocityOffsetMax; // 0x1b4
	FVector2D FinalVelocityMagnitudeMinMax; // 0x1c0
	float MaxLatency; // 0x1c8
	EDebugTypeEnum DebugType; // 0x1cc
	int32_t LastSpawnedPointID; // 0x1d0
	float LastSpawnTime; // 0x1d4
	float SolverTime; // 0x1e8
	float TimeStampOfLastProcessedData; // 0x1ec
};

struct UGroomCreateBindingOptions : UObject {
	USkeletalMesh* SourceSkeletalMesh; // 0x28
	USkeletalMesh* TargetSkeletalMesh; // 0x30
	int32_t NumInterpolationPoints; // 0x38
	int32_t MatchingSection; // 0x3c
};

struct UCullingField : UFieldNodeBase {
	UFieldNodeBase* Culling; // 0xc0
	UFieldNodeBase* Field; // 0xc8
	EFieldCullingOperationType Operation; // 0xd0
};

struct UMeshSimplificationSettings : UDeveloperSettings {
	FName MeshReductionModuleName; // 0x38
};

struct UMaterialExpressionSquareRoot : UMaterialExpression {
	FExpressionInput Input; // 0x40
};

struct USGGlobals : UObject {
	USGGameData* SGGameData; // 0x28
	UModManage* SGModsManage; // 0x30
	FSoftObjectPath GameDataAsset; // 0x38
	ASGRTXQuality* SGRTXQualityClass; // 0x50
	UPubDataManager* PubDataManagerClass; // 0x58
	FString StandaloneMapName; // 0x60
	FString LobbyMapName; // 0x70
	FString GlobalMapName; // 0x80
	FString MainMenuMapName; // 0x90
	USGHuangLi* HuangLiClass; // 0xa0
	UUI_GenericConfirmationDialog* GlobalGenericConfirmationDialogClass; // 0xa8
	UUI_GenericConnectWaiting* ConnectWaitingDialogueClass; // 0xb0
	UUI_GenericMultiItemDialog* GlobalGenericMultiItemDialog; // 0xb8
	UUI_PasswordDialog* PasswordDialogTemplate; // 0xc0
	UUI_PasswordConfirmationDialog* PasswordConfirmationDialogTemplate; // 0xc8
	UUI_UpDatePasswordDialog* UpDatePasswordDialogTemplate; // 0xd0
};

struct USoundNodeSoundClass : USoundNode {
	USoundClass* SoundClassOverride; // 0x48
};

struct UUI_SystemSettingPanel : UUserWidget {
	TArray<FName> ScalabilityDetailPanelNames; // 0x260
	USGGameUserSettings* SGGameUserSettings; // 0x270
	UScrollBox* MainScrollBox; // 0x278
	TArray<USystemSettingItem*> SystemSettingItems; // 0x280
};

struct ATriggerBase : AActor {
	UShapeComponent* CollisionComponent; // 0x310
};

struct ASplineRouteActor : AActor {
	USplineComponent* SplineComponent; // 0x310
};

struct UAnimNotifyState_TimedNiagaraEffect : UAnimNotifyState {
	UNiagaraSystem* Template; // 0x30
	FName SocketName; // 0x38
	FVector LocationOffset; // 0x40
	FRotator RotationOffset; // 0x4c
	bool bDestroyAtEnd; // 0x58
};

struct UNiagaraDataInterfaceGrid3DCollection : UNiagaraDataInterfaceGrid3D {
	int32_t NumAttributes; // 0x100
	FNiagaraUserParameterBinding RenderTargetUserParameter; // 0x108
	ENiagaraGpuBufferFormat BufferFormat; // 0x128
};

struct ASGStructureAnimalRest : ASGStructureNPCRest {
	char bClearZeroLifeChunk : 1; // 0xbe8
	FGuid UsingCharGuid; // 0xbec
	FString UsingCharName; // 0xc00
	char bCanAddLifeCount : 1; // 0xc10
	char bCanReborn : 1; // 0xc10
	TArray<EVehicleType> AllowPutInVehicleTypes; // 0xc18
};

struct UMovieSceneSignedObject : UObject {
	FGuid Signature; // 0x28
};

struct UVehicleGenealogySlot : UUserWidget {
	TSoftObjectPtr<UTexture2D> DefaultVehicleTexture; // 0x260
	TSoftObjectPtr<UTexture2D> CastratedTexture; // 0x288
	TSoftObjectPtr<UTexture2D> SexFemaleTexture; // 0x2b0
	TSoftObjectPtr<UTexture2D> SexMaleTexture; // 0x2d8
	TSoftObjectPtr<UTexture2D> BGBorder_NormalTexture; // 0x300
	TSoftObjectPtr<UTexture2D> BGBorder_HoverTexture; // 0x328
	TSoftObjectPtr<UTexture2D> BGBorder_SelectTexture; // 0x350
	TMap<EGeneralsQualityType, float> QualityCorrectionToQualityType; // 0x378
	TSoftObjectPtr<UTexture2D> VehicleQualityBGTexture[0x6]; // 0x3c8
	TSoftObjectPtr<UTexture2D> VehicleQualityTexture[0x6]; // 0x4b8
	UBorder* BGBorder; // 0x5a8
	UImage* VehicleIconImg; // 0x5b0
	UCanvasPanel* DetailPanel; // 0x5b8
	UImage* VehicleQualityBG; // 0x5c0
	UImage* VehicleQualityImage; // 0x5c8
	UImage* VehicleRealNameImage; // 0x5d0
	UImage* SexImg; // 0x5d8
	UTextBlock* NameText; // 0x5e0
	UTextBlock* LevelText; // 0x5e8
	UTextBlock* SumText; // 0x5f0
	UTextBlock* GenerationText; // 0x5f8
	UTextBlock* StatusText; // 0x600
	UTextBlock* NoneText; // 0x608
	UVehicleACPanel* VehicleACPanel; // 0x610
	UImage* ForwardImg; // 0x618
	UImage* BackwardImg; // 0x620
};

struct UDestroySessionCallbackProxy : UOnlineBlueprintCallProxyBase {
	FMulticastInlineDelegate OnSuccess; // 0x30
	FMulticastInlineDelegate OnFailure; // 0x40
};

struct UMaterialExpressionSmoothStep : UMaterialExpression {
	FExpressionInput Min; // 0x40
	FExpressionInput Max; // 0x54
	FExpressionInput Value; // 0x68
	float ConstMin; // 0x7c
	float ConstMax; // 0x80
	float ConstValue; // 0x84
};

struct ARectLight : ALight {
	URectLightComponent* RectLightComponent; // 0x320
};

struct UParticleModuleSize_Seeded : UParticleModuleSize {
	FParticleRandomSeedInfo RandomSeedInfo; // 0x78
};

struct UAITask_MoveTo : UAITask {
	FMulticastInlineDelegate OnRequestFailed; // 0x70
	FMulticastInlineDelegate OnMoveFinished; // 0x80
	FAIMoveRequest MoveRequest; // 0x90
};

struct UDatasmithPostProcessVolumeTemplate : UDatasmithObjectTemplate {
	FDatasmithPostProcessSettingsTemplate Settings; // 0x30
	char bEnabled : 1; // 0x70
	char bUnbound : 1; // 0x70
};

struct UMediaPlayer : UObject {
	FMulticastInlineDelegate OnEndReached; // 0x28
	FMulticastInlineDelegate OnMediaClosed; // 0x38
	FMulticastInlineDelegate OnMediaOpened; // 0x48
	FMulticastInlineDelegate OnMediaOpenFailed; // 0x58
	FMulticastInlineDelegate OnPlaybackResumed; // 0x68
	FMulticastInlineDelegate OnPlaybackSuspended; // 0x78
	FMulticastInlineDelegate OnSeekCompleted; // 0x88
	FMulticastInlineDelegate OnTracksChanged; // 0x98
	FTimespan CacheAhead; // 0xa8
	FTimespan CacheBehind; // 0xb0
	FTimespan CacheBehindGame; // 0xb8
	bool NativeAudioOut; // 0xc0
	bool PlayOnOpen; // 0xc1
	char Shuffle : 1; // 0xc4
	char Loop : 1; // 0xc4
	UMediaPlaylist* Playlist; // 0xc8
	int32_t PlaylistIndex; // 0xd0
	FTimespan TimeDelay; // 0xd8
	float HorizontalFieldOfView; // 0xe0
	float VerticalFieldOfView; // 0xe4
	FRotator ViewRotation; // 0xe8
	FGuid PlayerGuid; // 0x120
};

struct AFuBenVolume : AVolume {
	int32_t FunctionId; // 0x348
	FName StreamingLevelName; // 0x34c
	float SkylightIntensity; // 0x354
	int32_t FuBenEndPlayerStartFunctionId; // 0x35c
	float FuBenTotalTime; // 0x360
	float FuBenLeaveTimeAfterKilledAll; // 0x364
	float ActuralFuBenTotalTime; // 0x380
	float LeftFuBenTime; // 0x384
};

struct UVehiclePerkRandomPool : UObject {
	FName RandomPoolName; // 0x28
	UVehiclePerkRandomData* PerkRandomData; // 0x30
	float RandomChance; // 0x38
	EVehiclePerkSlotType PerkSlotType; // 0x3c
	EVehiclePerkModifyType PerkModifyType; // 0x3d
};

struct AWaterBodyCustom : AWaterBody {
	UCustomMeshGenerator* CustomGenerator; // 0xee0
};

struct UFixedFrameRateCustomTimeStep : UEngineCustomTimeStep {
	FFrameRate FixedFrameRate; // 0x28
};

struct UMeshStatisticsProperties : UInteractiveToolPropertySet {
	FString Mesh; // 0x60
	FString UV; // 0x70
	FString Attributes; // 0x80
};

struct UAnimNotify_PlayMontageNotify : UAnimNotify {
	FName NotifyName; // 0x38
};

struct UWBP_AnchorModeSystemSetting_C : UUI_SystemSettingPanel {
	UWBP_SystemSettingCheckBox_C* bAnchorMode; // 0x290
	UWBP_SystemSettingCheckBox_C* bFilterFoulLanguage; // 0x298
	UWBP_SystemSettingCheckBox_C* bPlayViolentAudio; // 0x2a0
	UWBP_SystemSettingCheckBox_C* bReceiveNearbyVoice; // 0x2a8
	UWBP_SystemSettingCheckBox_C* bShowCustomGuildIcon; // 0x2b0
	UWBP_SystemSettingCheckBox_C* bShowCustomName; // 0x2b8
	UWBP_SystemSettingCheckBox_C* bShowFleshPhysicialMaterialEffect; // 0x2c0
	UWBP_SystemSettingCheckBox_C* bShowLocationServer; // 0x2c8
	UWBP_SystemSettingCheckBox_C* bShowSelfInMiniMap; // 0x2d0
	UImage* TitleImage; // 0x2d8
};

struct UParticleModuleBeamNoise : UParticleModuleBeamBase {
	char bLowFreq_Enabled : 1; // 0x30
	int32_t Frequency; // 0x34
	int32_t Frequency_LowRange; // 0x38
	FRawDistributionVector NoiseRange; // 0x40
	FRawDistributionFloat NoiseRangeScale; // 0x88
	char bNRScaleEmitterTime : 1; // 0xb8
	FRawDistributionVector NoiseSpeed; // 0xc0
	char bSmooth : 1; // 0x108
	float NoiseLockRadius; // 0x10c
	char bNoiseLock : 1; // 0x110
	char bOscillate : 1; // 0x110
	float NoiseLockTime; // 0x114
	float NoiseTension; // 0x118
	char bUseNoiseTangents : 1; // 0x11c
	FRawDistributionFloat NoiseTangentStrength; // 0x120
	int32_t NoiseTessellation; // 0x150
	char bTargetNoise : 1; // 0x154
	float FrequencyDistance; // 0x158
	char bApplyNoiseScale : 1; // 0x15c
	FRawDistributionFloat NoiseScale; // 0x160
};

struct UOnlineEngineInterfaceImpl : UOnlineEngineInterface {
	FName VoiceSubsystemNameOverride; // 0x28
};

struct UGeometryCollection : UObject {
	TArray<FGeometryCollectionSource> GeometrySource; // 0x30
	TArray<UMaterialInterface*> Materials; // 0x40
	ECollisionTypeEnum CollisionType; // 0x50
	EImplicitTypeEnum ImplicitType; // 0x51
	int32_t MinLevelSetResolution; // 0x54
	int32_t MaxLevelSetResolution; // 0x58
	int32_t MinClusterLevelSetResolution; // 0x5c
	int32_t MaxClusterLevelSetResolution; // 0x60
	float CollisionObjectReductionPercentage; // 0x64
	bool bMassAsDensity; // 0x68
	float Mass; // 0x6c
	float MinimumMassClamp; // 0x70
	float CollisionParticlesFraction; // 0x74
	int32_t MaximumCollisionParticles; // 0x78
	TArray<FGeometryCollectionSizeSpecificData> SizeSpecificData; // 0x80
	bool EnableRemovePiecesOnFracture; // 0x90
	TArray<UMaterialInterface*> RemoveOnFractureMaterials; // 0x98
	FGuid PersistentGuid; // 0xa8
	FGuid StateGuid; // 0xb8
	int32_t BoneSelectedMaterialIndex; // 0xc8
};

struct UDistributionVectorConstant : UDistributionVector {
	FVector Constant; // 0x38
	char bLockAxes : 1; // 0x44
	EDistributionVectorLockFlags LockedAxes; // 0x48
};

struct URuntimeVirtualTextureComponent : USceneComponent {
	TSoftObjectPtr<AActor> BoundsAlignActor; // 0x208
	bool bSetBoundsButton; // 0x230
	bool bSnapBoundsToLandscape; // 0x231
	URuntimeVirtualTexture* VirtualTexture; // 0x238
	bool bEnableScalability; // 0x240
	uint32_t ScalabilityGroup; // 0x244
	bool bHidePrimitives; // 0x248
	UVirtualTextureBuilder* StreamingTexture; // 0x250
	int32_t StreamLowMips; // 0x258
	bool bBuildStreamingMipsButton; // 0x25c
	bool bEnableCompressCrunch; // 0x25d
	bool bUseStreamingLowMipsInEditor; // 0x25e
	bool bBuildDebugStreamingMips; // 0x25f
};

struct UBattleAwardItemSlot : USGUI {
	UImage* Image_ItemIcon; // 0x2d8
	UBorder* QualityBorder; // 0x2e0
	UTextBlock* AmountText; // 0x2e8
	TSoftObjectPtr<UTexture2D> QualityBorderTexs[0x7]; // 0x2f0
};

struct UEquipAdditive_AnimNotify : UAnimNotify {
	FName PreviewAdditiveSoundID; // 0x38
};

struct USGNotifyText : UObject {
	FLinearColor ColorDefine[0x6]; // 0x28
	TSoftObjectPtr<UTexture2D> BackgroundTex[0x5]; // 0x88
	ENotifyBgTex BgTexType[0x2a]; // 0x150
	TSoftObjectPtr<UTexture2D> BattleUpBgTex; // 0x180
	FString DisplayInfoNameArray[0x2a]; // 0x1a8
	UDataTable* NotifyDisplayInfoTable; // 0x448
	FText DamageBodyText[0x3]; // 0x450
	FText AttackerDamageModifyText[0x17]; // 0x498
	FText DamageModifyText[0x19]; // 0x6c0
	FText ExpModifyText[0xe]; // 0x918
};

struct UMotionControllerComponent : UPrimitiveComponent {
	int32_t PlayerIndex; // 0x488
	EControllerHand Hand; // 0x48c
	FName MotionSource; // 0x490
	char bDisableLowLatencyUpdate : 1; // 0x498
	ETrackingStatus CurrentTrackingStatus; // 0x49c
	bool bDisplayDeviceModel; // 0x49d
	FName DisplayModelSource; // 0x4a0
	UStaticMesh* CustomDisplayMesh; // 0x4a8
	TArray<UMaterialInterface*> DisplayMeshMaterialOverrides; // 0x4b0
	UPrimitiveComponent* DisplayComponent; // 0x520
};

struct UDistributionVector : UDistribution {
	char bCanBeBaked : 1; // 0x30
	char bIsDirty : 1; // 0x30
	char bBakedDataSuccesfully : 1; // 0x30
};

struct USplineComponent : UPrimitiveComponent {
	FSplineCurves SplineCurves; // 0x488
	FInterpCurveVector SplineInfo; // 0x4f8
	FInterpCurveQuat SplineRotInfo; // 0x510
	FInterpCurveVector SplineScaleInfo; // 0x528
	FInterpCurveFloat SplineReparamTable; // 0x540
	bool bAllowSplineEditingPerInstance; // 0x558
	int32_t ReparamStepsPerSegment; // 0x55c
	float Duration; // 0x560
	bool bStationaryEndpoints; // 0x564
	bool bSplineHasBeenEdited; // 0x565
	bool bModifiedByConstructionScript; // 0x566
	bool bInputSplinePointsToConstructionScript; // 0x567
	bool bDrawDebug; // 0x568
	bool bClosedLoop; // 0x569
	bool bLoopPositionOverride; // 0x56a
	float LoopPosition; // 0x56c
	FVector DefaultUpVector; // 0x570
};

struct USortableTitleSlot : UUserWidget {
	UImage* IconImage; // 0x260
	UButton* SortAscButton; // 0x268
	UButton* SortDescButton; // 0x270
	UCanvasPanel* SortBtnCanvasPanel; // 0x278
	UDataButton* TipsDataButton; // 0x280
	FText TitleText; // 0x288
	bool bShowSortBtn; // 0x2a0
	char bOverride_TextColorOverride : 1; // 0x2a1
	FSlateColor TextColorOverride; // 0x2a8
	TSoftObjectPtr<UTexture2D> IconTexture; // 0x2d0
	USGToolTipWidget* ButtonTipWidgetTemplate; // 0x2f8
};

struct UExpandableArea : UWidget {
	FExpandableAreaStyle Style; // 0x110
	FSlateBrush BorderBrush; // 0x230
	FSlateColor BorderColor; // 0x2b8
	bool bIsExpanded; // 0x2e0
	float MaxHeight; // 0x2e4
	FMargin HeaderPadding; // 0x2e8
	FMargin AreaPadding; // 0x2f8
	FMulticastInlineDelegate OnExpansionChanged; // 0x308
	UWidget* HeaderContent; // 0x318
	UWidget* BodyContent; // 0x320
};

struct URectLightComponent : ULocalLightComponent {
	float SourceWidth; // 0x350
	float SourceHeight; // 0x354
	float BarnDoorAngle; // 0x358
	float BarnDoorLength; // 0x35c
	UTexture* SourceTexture; // 0x360
};

struct UAppearanceListItem : UUI_ButtonBase {
	UImage* ImgBg; // 0x500
	UButton* BtnBg; // 0x508
	int32_t BindItemIndex; // 0x510
	FName BindItemName; // 0x514
};

struct ASGGameModeBattle : ASGGameModeLogic {
	int32_t LastDefensePlayerNum; // 0x1cc0
	int32_t LastAttackPlayerNum; // 0x1cc4
	TArray<FString> JoinBattleRenownAccounts; // 0x1cc8
	int32_t BattleKey; // 0x1cd8
	int32_t BattleGamePlayIndex; // 0x1cdc
	int32_t MaxDefensePlayNum; // 0x1ce0
	int32_t MaxAttackPlayNum; // 0x1ce4
	float OverTime; // 0x1ce8
	int32_t LogicServerLevel; // 0x1cec
};

struct URadialIntMask : UFieldNodeInt {
	float Radius; // 0xc0
	FVector position; // 0xc4
	int32_t InteriorValue; // 0xd0
	int32_t ExteriorValue; // 0xd4
	ESetMaskConditionType SetMaskCondition; // 0xd8
};

struct UUI_Chat : USGUI {
	TSoftObjectPtr<UTexture2D> VoiceOpenBg; // 0x2d8
	TSoftObjectPtr<UTexture2D> VoiceCloseBg; // 0x300
	UUI_ChatReportBtn* ChatReportBtnWidget; // 0x330
	FButtonStyle UnSelectButtonStyle; // 0x340
	UConversationBtn* BtnClass; // 0x5c0
	UMsgRow* MsgRowClass; // 0x5c8
	UUI_SystemMsgRow* SystemMsgRowClass; // 0x5d0
	UCanvasPanel* MsgArea; // 0x5d8
	UScrollBox* MsgBox; // 0x5e0
	UCanvasPanel* InputArea; // 0x5e8
	UUI_ChatInputBox* ChatInputBox; // 0x5f0
	UVerticalBox* ConvVerticalBox; // 0x5f8
	UWidgetAnimation* ChatFoldAnim; // 0x600
	UBorder* FoldImgBorder; // 0x608
	UBorder* MainBorder; // 0x610
	UBorder* ConvBorder; // 0x618
	UUI_ChatSetting* ChatSettingPannel; // 0x620
	UHorizontalBox* MenuHBox; // 0x628
	UCanvasPanel* VoicePanel; // 0x630
	UBorder* VoiceStateBorder; // 0x638
	UTextBlock* VoiceText; // 0x640
	UTextBlock* KeyText; // 0x648
	int32_t InputTextNumLimit; // 0x650
	float AnimPlaySpeed; // 0x654
	TSoftObjectPtr<UTexture2D> FoldIconNormal; // 0x658
	TSoftObjectPtr<UTexture2D> FoldIconActive; // 0x680
	FMargin MsgRowOffset; // 0x6a8
	int32_t ClientCacheMsgNumLimit; // 0x6b8
	TArray<EChatSlotType> SecondaryMsgTypes; // 0x6c0
	TArray<EMsgSiftType> SecondaryMsgSiftTypes; // 0x6d0
	char bDefaultShow : 1; // 0x6e0
};

struct UMaterialExpressionParticleSubUV : UMaterialExpressionTextureSample {
	char bBlend : 1; // 0x60
};

struct APainCausingVolume : APhysicsVolume {
	char bPainCausing : 1; // 0x358
	float DamagePerSec; // 0x35c
	UDamageType* DamageType; // 0x360
	float PainInterval; // 0x368
	char bEntryPain : 1; // 0x36c
	char BACKUP_bPainCausing : 1; // 0x36c
	AController* DamageInstigator; // 0x370
};

struct UUniformGridPanel : UPanelWidget {
	FMargin SlotPadding; // 0x120
	float MinDesiredSlotWidth; // 0x130
	float MinDesiredSlotHeight; // 0x134
};

struct UMagicLeapMeshTrackerComponent : USceneComponent {
	FMulticastInlineDelegate OnMeshTrackerUpdated; // 0x210
	bool ScanWorld; // 0x220
	EMagicLeapMeshType MeshType; // 0x221
	UBoxComponent* BoundingVolume; // 0x228
	EMagicLeapMeshLOD LevelOfDetail; // 0x230
	float PerimeterOfGapsToFill; // 0x234
	bool Planarize; // 0x238
	float DisconnectedSectionArea; // 0x23c
	bool RequestNormals; // 0x240
	bool RequestVertexConfidence; // 0x241
	EMagicLeapMeshVertexColorMode VertexColorMode; // 0x242
	TArray<FColor> BlockVertexColors; // 0x248
	FLinearColor VertexColorFromConfidenceZero; // 0x258
	FLinearColor VertexColorFromConfidenceOne; // 0x268
	bool RemoveOverlappingTriangles; // 0x278
	UMRMeshComponent* MRMesh; // 0x280
	int32_t BricksPerFrame; // 0x288
};

struct UParticleModuleCollisionGPU : UParticleModuleCollisionBase {
	FRawDistributionFloat Resilience; // 0x30
	FRawDistributionFloat ResilienceScaleOverLife; // 0x60
	float Friction; // 0x90
	float RandomSpread; // 0x94
	float RandomDistribution; // 0x98
	float RadiusScale; // 0x9c
	float RadiusBias; // 0xa0
	EParticleCollisionResponse Response; // 0xa4
	EParticleCollisionMode CollisionMode; // 0xa5
};

struct UBTTask_DoAttack : UBTTask_AnimalBase {
	float OverrideBrakingDistance; // 0xd0
};

struct UUniformVector : UFieldNodeVector {
	float Magnitude; // 0xc0
	FVector Direction; // 0xc4
};

struct UMovieSceneCameraShakeSourceTriggerSection : UMovieSceneSection {
	FMovieSceneCameraShakeSourceTriggerChannel Channel; // 0xe8
};

struct UMaterialExpressionPower : UMaterialExpression {
	FExpressionInput Base; // 0x40
	FExpressionInput Exponent; // 0x54
	float ConstExponent; // 0x68
};

struct UN_ItemTips : USGToolTipWidget {
	UCanvasPanel* MainCanvas; // 0x288
	UCanvasPanel* ItemDetailPanel; // 0x290
	UN_CraftPanelTips* CraftPanelTips; // 0x298
	UImage* ImgIcon; // 0x2a0
	UTextBlock* TbName; // 0x2a8
	UTextBlock* TbWeaponType; // 0x2b0
	UToolTipsItem* QualityItem; // 0x2b8
	UVerticalBox* NormalDetailVb; // 0x2c0
	UTextBlock* NormalDetailText; // 0x2c8
	UVerticalBox* AdditionDetailVb; // 0x2d0
	UTextBlock* AdditionDetailText; // 0x2d8
	UVerticalBox* RequireDetailVb; // 0x2e0
	UTextBlock* RequireDetailText; // 0x2e8
	UVerticalBox* PunishDetailVb; // 0x2f0
	UTextBlock* PunishDetailText; // 0x2f8
	UToolTipsItem* DescriptionItem; // 0x300
	UBorder* QualityBorder; // 0x308
	UVerticalBox* VbBase; // 0x310
	UImage* NorAddDivisionImage; // 0x318
	UImage* AddReqDivisionImage; // 0x320
	UImage* ReqPunDivisionImage; // 0x328
	FLinearColor QualityColor[0x7]; // 0x330
	FSlateBrush QualityBorderColor[0x7]; // 0x3a0
	UToolTipsItem* StatusItemTemplate; // 0x758
	UToolTipsItem* TipsItemTemplate; // 0x760
	UToolTipsItem* DamageTipsItemTemplate; // 0x768
	UToolTipsItem* FoodBoxItemTemplate; // 0x770
	TMap<EItemTipsItemType, FTipsTypes> ItemTypeToTipsType; // 0x778
	TMap<EItemTipsItemType, FTipsTypes> ItemTypeToStatusType; // 0x7c8
	EItemTipsItemType CurrentTipsType; // 0x818
	FText WeaponSkillTypeText[0x8]; // 0x828
	FText WeaponTypeText[0xd]; // 0x8e8
	FText AmmoTypeText[0xd]; // 0xa20
	TWeakObjectPtr<USGItem> BindItem; // 0xb58
	UN_InventorySlot* BindInventorySlot; // 0xb60
	float ToolTipsDescriptionTextWrapDelta; // 0xb6c
};

